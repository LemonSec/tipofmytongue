1
00:00:07,150 --> 00:00:10,259
[Applause]

2
00:00:11,809 --> 00:00:18,830
hello everybody<font color="#E5E5E5"> you hear me okay</font><font color="#CCCCCC"> all</font>

3
00:00:15,830 --> 00:00:18,830
<font color="#CCCCCC">right</font>

4
00:00:18,840 --> 00:00:25,170
thanks for coming<font color="#E5E5E5"> this is saving my car</font>

5
00:00:22,650 --> 00:00:26,698
by hacking it<font color="#CCCCCC"> say hello Joanne</font><font color="#E5E5E5"> whoa</font><font color="#CCCCCC"> as</font>

6
00:00:25,170 --> 00:00:28,289
you've no doubt gathered from that title

7
00:00:26,699 --> 00:00:29,939
<font color="#E5E5E5">this talk is different from the other</font>

8
00:00:28,289 --> 00:00:32,910
talks a lot<font color="#E5E5E5"> of the other talks here</font>

9
00:00:29,939 --> 00:00:34,890
today most talks are by experts<font color="#E5E5E5"> in their</font>

10
00:00:32,910 --> 00:00:36,540
field discussing or debating a topic a

11
00:00:34,890 --> 00:00:38,700
topic in the industry where we're going

12
00:00:36,540 --> 00:00:41,100
and why that<font color="#CCCCCC"> kind of thing this talks</font>

13
00:00:38,700 --> 00:00:42,719
though is about<font color="#CCCCCC"> a guy stumbling around</font>

14
00:00:41,100 --> 00:00:46,289
try to fix<font color="#CCCCCC"> something he most certainly</font>

15
00:00:42,719 --> 00:00:47,250
does<font color="#E5E5E5"> not understand so there are two</font>

16
00:00:46,289 --> 00:00:49,469
goals of this talk

17
00:00:47,250 --> 00:00:51,090
one is to<font color="#CCCCCC"> entertain you</font><font color="#E5E5E5"> with the insane</font>

18
00:00:49,469 --> 00:00:53,190
effort that went<font color="#CCCCCC"> into fixing my</font><font color="#E5E5E5"> car and</font>

19
00:00:51,090 --> 00:00:55,500
the<font color="#CCCCCC"> other is</font><font color="#E5E5E5"> to hopefully motivate or</font>

20
00:00:53,190 --> 00:00:57,329
inspire you to go to the go<font color="#E5E5E5"> to insane</font>

21
00:00:55,500 --> 00:00:59,609
links to accomplish something because in

22
00:00:57,329 --> 00:01:01,079
my<font color="#CCCCCC"> experience you know that</font><font color="#E5E5E5"> the crazier</font>

23
00:00:59,609 --> 00:01:02,520
<font color="#E5E5E5">it is and the crazy</font><font color="#CCCCCC"> people tell you</font><font color="#E5E5E5"> that</font>

24
00:01:01,079 --> 00:01:03,840
you are<font color="#CCCCCC"> to attempt to the better off</font>

25
00:01:02,520 --> 00:01:08,010
you'll<font color="#CCCCCC"> be if you</font><font color="#E5E5E5"> just go ahead and</font><font color="#CCCCCC"> do it</font>

26
00:01:03,840 --> 00:01:09,720
<font color="#CCCCCC">so let</font><font color="#E5E5E5"> me just ask show of hands how</font>

27
00:01:08,010 --> 00:01:15,150
many<font color="#CCCCCC"> people</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> here know anything at all</font>

28
00:01:09,720 --> 00:01:18,090
<font color="#E5E5E5">about car hacking darn because you</font>

29
00:01:15,150 --> 00:01:19,830
<font color="#E5E5E5">probably know more</font><font color="#CCCCCC"> than me because</font><font color="#E5E5E5"> I</font>

30
00:01:18,090 --> 00:01:21,659
knew absolutely nothing<font color="#E5E5E5"> when</font><font color="#CCCCCC"> I started</font>

31
00:01:19,830 --> 00:01:24,270
this<font color="#E5E5E5"> so I</font><font color="#CCCCCC"> apologize in advance if</font><font color="#E5E5E5"> I say</font>

32
00:01:21,659 --> 00:01:27,210
anything stupid<font color="#CCCCCC"> is made something around</font>

33
00:01:24,270 --> 00:01:28,949
see what I<font color="#CCCCCC"> could figure out</font><font color="#E5E5E5"> so by the</font>

34
00:01:27,210 --> 00:01:30,029
end<font color="#CCCCCC"> of</font><font color="#E5E5E5"> this talk you might say I might</font>

35
00:01:28,950 --> 00:01:33,540
be able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> I still don't know anything</font>

36
00:01:30,030 --> 00:01:34,860
<font color="#CCCCCC">that will see I'd</font><font color="#E5E5E5"> never seen a talking</font>

37
00:01:33,540 --> 00:01:37,170
<font color="#E5E5E5">car acting</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> never done any</font>

38
00:01:34,860 --> 00:01:39,780
<font color="#CCCCCC">reading on it</font><font color="#E5E5E5"> nothing just about a stop</font>

39
00:01:37,170 --> 00:01:41,250
me<font color="#E5E5E5"> in over</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> head starting to try to</font>

40
00:01:39,780 --> 00:01:47,060
hack this thing at square one<font color="#E5E5E5"> from</font>

41
00:01:41,250 --> 00:01:47,060
square one<font color="#CCCCCC"> so let's get way</font>

42
00:01:47,450 --> 00:01:51,920
do not<font color="#E5E5E5"> hack your car at least</font><font color="#CCCCCC"> not the</font>

43
00:01:50,630 --> 00:01:54,710
car<font color="#CCCCCC"> that you actually drive I mean I</font>

44
00:01:51,920 --> 00:01:55,790
cannot stress<font color="#CCCCCC"> that enough</font><font color="#E5E5E5"> we have to</font>

45
00:01:54,710 --> 00:01:57,380
<font color="#CCCCCC">keep</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> mind here that we are</font>

46
00:01:55,790 --> 00:01:58,670
<font color="#E5E5E5">potentially messing with the code that</font>

47
00:01:57,380 --> 00:01:59,929
decides whether<font color="#E5E5E5"> the car is going to</font>

48
00:01:58,670 --> 00:02:02,240
respond<font color="#E5E5E5"> to your turn in the steering</font>

49
00:01:59,930 --> 00:02:04,340
wheel<font color="#E5E5E5"> or applying the brakes or pressing</font>

50
00:02:02,240 --> 00:02:07,339
on the gas pedal<font color="#CCCCCC"> I mean if you flip</font><font color="#E5E5E5"> the</font>

51
00:02:04,340 --> 00:02:08,869
<font color="#E5E5E5">wrong bit in the firmware then something</font>

52
00:02:07,340 --> 00:02:10,640
like<font color="#CCCCCC"> you find you a flip you know in</font>

53
00:02:08,869 --> 00:02:14,239
<font color="#E5E5E5">your car</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> are now in</font><font color="#CCCCCC"> a ditch so don't</font>

54
00:02:10,639 --> 00:02:20,299
be crazy<font color="#CCCCCC"> please</font><font color="#E5E5E5"> be careful so</font><font color="#CCCCCC"> having</font>

55
00:02:14,239 --> 00:02:25,820
said that<font color="#CCCCCC"> meet the manual transmission</font>

56
00:02:20,300 --> 00:02:26,900
1997 chevrolet cavalier<font color="#E5E5E5"> this guy has</font>

57
00:02:25,820 --> 00:02:28,549
been<font color="#E5E5E5"> a part of my</font><font color="#CCCCCC"> life for the better</font>

58
00:02:26,900 --> 00:02:31,850
part<font color="#E5E5E5"> of three</font><font color="#CCCCCC"> hundred and fifteen</font>

59
00:02:28,550 --> 00:02:35,150
thousand<font color="#E5E5E5"> miles and it's all in the</font>

60
00:02:31,850 --> 00:02:37,310
original<font color="#E5E5E5"> clutch</font><font color="#CCCCCC"> believe it</font><font color="#E5E5E5"> or not</font><font color="#CCCCCC"> but</font>

61
00:02:35,150 --> 00:02:39,200
one day I got<font color="#CCCCCC"> into</font><font color="#E5E5E5"> takeoff I got an to</font>

62
00:02:37,310 --> 00:02:42,860
take off somewhere<font color="#E5E5E5"> and it just would</font><font color="#CCCCCC"> not</font>

63
00:02:39,200 --> 00:02:43,399
start<font color="#CCCCCC"> now let</font><font color="#E5E5E5"> me just say when it comes</font>

64
00:02:42,860 --> 00:02:46,610
to cars

65
00:02:43,400 --> 00:02:54,079
I know<font color="#E5E5E5"> basically nothing I I know how to</font>

66
00:02:46,610 --> 00:02:55,310
start a car<font color="#CCCCCC"> but</font><font color="#E5E5E5"> know that</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> that's a</font>

67
00:02:54,079 --> 00:02:57,530
random<font color="#E5E5E5"> picture I got</font><font color="#CCCCCC"> off</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> internet</font>

68
00:02:55,310 --> 00:03:03,380
that<font color="#CCCCCC"> is not actually my car but</font><font color="#E5E5E5"> it is it</font>

69
00:02:57,530 --> 00:03:05,540
is<font color="#CCCCCC"> a 97 go yeah</font>

70
00:03:03,380 --> 00:03:07,160
so I know how<font color="#CCCCCC"> to start</font><font color="#E5E5E5"> a car I know how</font>

71
00:03:05,540 --> 00:03:09,590
to drive<font color="#E5E5E5"> a</font><font color="#CCCCCC"> car I know</font><font color="#E5E5E5"> it's a gas in a</font>

72
00:03:07,160 --> 00:03:12,650
car I could oil in a car but am I an

73
00:03:09,590 --> 00:03:13,310
<font color="#E5E5E5">expert on repairing cars not at all not</font>

74
00:03:12,650 --> 00:03:14,840
<font color="#CCCCCC">in the slightest</font>

75
00:03:13,310 --> 00:03:16,400
so before I<font color="#E5E5E5"> could even</font><font color="#CCCCCC"> begin to</font>

76
00:03:14,840 --> 00:03:17,989
understand why the car<font color="#E5E5E5"> wouldn't start</font><font color="#CCCCCC"> I</font>

77
00:03:16,400 --> 00:03:19,579
had to do a lot<font color="#CCCCCC"> of reading to understand</font>

78
00:03:17,989 --> 00:03:23,090
the basics on<font color="#CCCCCC"> how the car runs because</font>

79
00:03:19,579 --> 00:03:24,739
<font color="#E5E5E5">every car is different so here's what I</font>

80
00:03:23,090 --> 00:03:26,900
came up with<font color="#E5E5E5"> on an overview of the basic</font>

81
00:03:24,739 --> 00:03:29,510
components<font color="#CCCCCC"> so</font><font color="#E5E5E5"> this of this car in the</font>

82
00:03:26,900 --> 00:03:30,799
steering column behind the<font color="#CCCCCC"> steering</font>

83
00:03:29,510 --> 00:03:32,450
<font color="#CCCCCC">wheel you have two components</font><font color="#E5E5E5"> physically</font>

84
00:03:30,799 --> 00:03:34,850
locked into<font color="#E5E5E5"> each other the ignition lock</font>

85
00:03:32,450 --> 00:03:36,619
cylinder which<font color="#CCCCCC"> is the green box</font><font color="#E5E5E5"> and the</font>

86
00:03:34,850 --> 00:03:39,799
ignition<font color="#E5E5E5"> switch which</font><font color="#CCCCCC"> is the blue box</font>

87
00:03:36,620 --> 00:03:41,150
<font color="#E5E5E5">and so the first thing</font><font color="#CCCCCC"> that happens is</font>

88
00:03:39,799 --> 00:03:42,620
<font color="#CCCCCC">you put your key in the ignition lock</font>

89
00:03:41,150 --> 00:03:45,440
cylinder and<font color="#E5E5E5"> then when you turn the key</font>

90
00:03:42,620 --> 00:03:47,329
you're physically rotating<font color="#E5E5E5"> the key</font>

91
00:03:45,440 --> 00:03:48,530
inside the ignition lock cylinder which

92
00:03:47,329 --> 00:03:49,940
<font color="#CCCCCC">is also</font><font color="#E5E5E5"> locked into the ignition</font><font color="#CCCCCC"> switch</font>

93
00:03:48,530 --> 00:03:52,190
<font color="#E5E5E5">so when you turn the key you're also</font>

94
00:03:49,940 --> 00:03:53,720
<font color="#E5E5E5">turning that ignition switch and the</font>

95
00:03:52,190 --> 00:03:55,640
<font color="#CCCCCC">ignition switch has a sort of kill</font>

96
00:03:53,720 --> 00:03:58,129
switch<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is the clutch safety switch</font>

97
00:03:55,640 --> 00:03:59,599
<font color="#E5E5E5">the red box in the picture and assuming</font>

98
00:03:58,129 --> 00:04:01,260
the clutch pedal is depressed<font color="#E5E5E5"> which</font>

99
00:03:59,599 --> 00:04:02,429
activates<font color="#E5E5E5"> the clutch safety switch</font>

100
00:04:01,260 --> 00:04:04,018
the turning<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the ignition</font><font color="#E5E5E5"> switch</font>

101
00:04:02,430 --> 00:04:05,819
supplies power<font color="#E5E5E5"> from the battery to</font>

102
00:04:04,019 --> 00:04:08,280
<font color="#E5E5E5">everywhere I needs to go for the car to</font>

103
00:04:05,819 --> 00:04:09,689
start<font color="#E5E5E5"> which is why you have to have the</font>

104
00:04:08,280 --> 00:04:14,400
clutch pressed in on<font color="#CCCCCC"> a manual</font>

105
00:04:09,689 --> 00:04:15,450
transmission<font color="#CCCCCC"> before to start so the</font>

106
00:04:14,400 --> 00:04:17,070
engine turning over is not the end of

107
00:04:15,450 --> 00:04:18,750
<font color="#E5E5E5">the story there's still the</font><font color="#CCCCCC"> any theft</font>

108
00:04:17,070 --> 00:04:20,339
system to deal with and on this<font color="#E5E5E5"> car it's</font>

109
00:04:18,750 --> 00:04:22,889
it's<font color="#E5E5E5"> something called the</font><font color="#CCCCCC"> past lock</font>

110
00:04:20,339 --> 00:04:24,299
security<font color="#E5E5E5"> system and essentially</font><font color="#CCCCCC"> if the</font>

111
00:04:22,889 --> 00:04:25,590
engine<font color="#E5E5E5"> is</font><font color="#CCCCCC"> running</font><font color="#E5E5E5"> but the computer can't</font>

112
00:04:24,300 --> 00:04:27,600
<font color="#E5E5E5">detect that the car was started</font>

113
00:04:25,590 --> 00:04:28,979
legitimate<font color="#E5E5E5"> ly with the original key then</font>

114
00:04:27,600 --> 00:04:31,229
it disables the fuel injectors which

115
00:04:28,979 --> 00:04:32,609
causes the car to die and since the

116
00:04:31,229 --> 00:04:34,080
ignition<font color="#E5E5E5"> switch physically turning and</font>

117
00:04:32,610 --> 00:04:35,639
supplying battery power to<font color="#CCCCCC"> the right</font>

118
00:04:34,080 --> 00:04:37,139
<font color="#E5E5E5">places what makes the car start all you</font>

119
00:04:35,639 --> 00:04:39,120
have to do is detach<font color="#E5E5E5"> that ignition</font>

120
00:04:37,139 --> 00:04:40,560
<font color="#E5E5E5">switch take a screwdriver</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> there and</font>

121
00:04:39,120 --> 00:04:42,600
physically turn it the same way you turn

122
00:04:40,560 --> 00:04:43,680
the key and<font color="#E5E5E5"> it</font><font color="#CCCCCC"> will fire right up that's</font>

123
00:04:42,600 --> 00:04:45,210
<font color="#E5E5E5">the good way to</font><font color="#CCCCCC"> steal a car</font><font color="#E5E5E5"> by the way</font>

124
00:04:43,680 --> 00:04:48,870
if you if you know it doesn't have a

125
00:04:45,210 --> 00:04:49,979
<font color="#E5E5E5">security</font><font color="#CCCCCC"> system</font><font color="#E5E5E5"> but so the path lock</font>

126
00:04:48,870 --> 00:04:51,810
system needs to prevent<font color="#E5E5E5"> that from</font>

127
00:04:49,979 --> 00:04:53,820
<font color="#CCCCCC">working somehow</font><font color="#E5E5E5"> and the way it does</font><font color="#CCCCCC"> that</font>

128
00:04:51,810 --> 00:04:57,110
<font color="#E5E5E5">is it starts with the</font><font color="#CCCCCC"> ignition</font><font color="#E5E5E5"> lock</font>

129
00:04:53,820 --> 00:04:59,610
cylinder which<font color="#E5E5E5"> is the green box and</font>

130
00:04:57,110 --> 00:05:01,289
inside there is<font color="#CCCCCC"> a resistor of</font><font color="#E5E5E5"> a certain</font>

131
00:04:59,610 --> 00:05:03,449
resistance<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is different from car</font>

132
00:05:01,289 --> 00:05:04,770
to car<font color="#E5E5E5"> and that resistance is known by</font>

133
00:05:03,449 --> 00:05:08,010
the instrument<font color="#CCCCCC"> panel cluster II which is</font>

134
00:05:04,770 --> 00:05:09,090
the<font color="#E5E5E5"> yellow box and when you physically</font>

135
00:05:08,010 --> 00:05:10,889
turn the<font color="#E5E5E5"> cylinder it applies that</font>

136
00:05:09,090 --> 00:05:12,659
<font color="#CCCCCC">certain resistance</font><font color="#E5E5E5"> to a wire connected</font>

137
00:05:10,889 --> 00:05:14,039
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the instrument</font><font color="#CCCCCC"> panel cluster so when</font>

138
00:05:12,660 --> 00:05:15,570
you turn the key a signal is sent<font color="#CCCCCC"> to</font>

139
00:05:14,039 --> 00:05:16,949
<font color="#CCCCCC">that</font><font color="#E5E5E5"> instrument panel cluster and then</font>

140
00:05:15,570 --> 00:05:18,990
<font color="#E5E5E5">it knows whether that resistance is</font>

141
00:05:16,949 --> 00:05:20,190
<font color="#E5E5E5">correct and if and only if the</font>

142
00:05:18,990 --> 00:05:23,520
<font color="#E5E5E5">resistance is correct it sends a</font>

143
00:05:20,190 --> 00:05:25,919
password<font color="#E5E5E5"> whatever that is over to the</font>

144
00:05:23,520 --> 00:05:28,198
PCM<font color="#E5E5E5"> also known as the powertrain control</font>

145
00:05:25,919 --> 00:05:30,000
module<font color="#E5E5E5"> or</font><font color="#CCCCCC"> the main computer</font><font color="#E5E5E5"> and if the</font>

146
00:05:28,199 --> 00:05:32,099
engine<font color="#E5E5E5"> is started but the PCM hasn't</font>

147
00:05:30,000 --> 00:05:33,360
received<font color="#E5E5E5"> that password from the incident</font>

148
00:05:32,099 --> 00:05:35,099
panel clusters and<font color="#E5E5E5"> it makes the decision</font>

149
00:05:33,360 --> 00:05:36,510
<font color="#CCCCCC">to</font><font color="#E5E5E5"> disable the fuel injectors</font><font color="#CCCCCC"> and then</font>

150
00:05:35,099 --> 00:05:38,219
illuminates the<font color="#E5E5E5"> check</font><font color="#CCCCCC"> engine and</font>

151
00:05:36,510 --> 00:05:40,320
security lights on the<font color="#E5E5E5"> on the cluster</font>

152
00:05:38,220 --> 00:05:41,880
with and then it set the trouble code to

153
00:05:40,320 --> 00:05:44,849
engage the security system disabled<font color="#CCCCCC"> a</font>

154
00:05:41,880 --> 00:05:46,289
car so an awful lot of stuff<font color="#E5E5E5"> has to be</font>

155
00:05:44,849 --> 00:05:48,180
<font color="#E5E5E5">working correctly in order for the PCM</font>

156
00:05:46,289 --> 00:05:50,370
to have what it needs<font color="#E5E5E5"> to not disable the</font>

157
00:05:48,180 --> 00:05:51,570
fuel injectors<font color="#E5E5E5"> so that you've got</font><font color="#CCCCCC"> the</font>

158
00:05:50,370 --> 00:05:53,039
ignition<font color="#E5E5E5"> lock cylinder the instrument</font>

159
00:05:51,570 --> 00:05:57,229
<font color="#CCCCCC">panel and the wiring that connects</font><font color="#E5E5E5"> all</font>

160
00:05:53,039 --> 00:05:57,229
those to each<font color="#E5E5E5"> other that's</font><font color="#CCCCCC"> sorry good</font>

161
00:06:00,710 --> 00:06:04,279
not that I'm aware<font color="#E5E5E5"> of</font>

162
00:06:07,710 --> 00:06:11,820
well there is actually<font color="#CCCCCC"> a relearned</font>

163
00:06:09,750 --> 00:06:13,320
procedure that<font color="#E5E5E5"> you can do that and that</font>

164
00:06:11,820 --> 00:06:14,250
<font color="#E5E5E5">relearned procedure is what tells the</font>

165
00:06:13,320 --> 00:06:16,110
<font color="#CCCCCC">interment cluster to start paying</font>

166
00:06:14,250 --> 00:06:17,669
attention<font color="#E5E5E5"> to</font><font color="#CCCCCC"> that new resistance</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> you</font>

167
00:06:16,110 --> 00:06:19,020
can you actually<font color="#E5E5E5"> can</font><font color="#CCCCCC"> and I'll get into</font>

168
00:06:17,669 --> 00:06:22,400
<font color="#E5E5E5">that you can actually</font><font color="#CCCCCC"> bypass it by</font><font color="#E5E5E5"> just</font>

169
00:06:19,020 --> 00:06:22,400
putting any any resistor in there

170
00:06:36,350 --> 00:06:43,040
yeah you you scare me because you know a

171
00:06:38,240 --> 00:06:44,330
<font color="#E5E5E5">lot</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> than I do</font><font color="#CCCCCC"> but so the initial</font>

172
00:06:43,040 --> 00:06:45,530
lock cylinder the<font color="#E5E5E5"> incident panel and the</font>

173
00:06:44,330 --> 00:06:47,359
wiring<font color="#E5E5E5"> that connects</font><font color="#CCCCCC"> those to</font><font color="#E5E5E5"> each other</font>

174
00:06:45,530 --> 00:06:51,409
and the PCM all has to<font color="#E5E5E5"> be correct or</font><font color="#CCCCCC"> the</font>

175
00:06:47,360 --> 00:06:54,050
card can't start<font color="#CCCCCC"> so what's wrong</font><font color="#E5E5E5"> with my</font>

176
00:06:51,410 --> 00:06:55,520
car<font color="#CCCCCC"> well the</font><font color="#E5E5E5"> engine does turn over and</font>

177
00:06:54,050 --> 00:06:57,050
then a second<font color="#E5E5E5"> later it dies and the</font>

178
00:06:55,520 --> 00:06:59,150
security warning light<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the entry</font>

179
00:06:57,050 --> 00:07:00,440
<font color="#E5E5E5">panel cluster lights up</font><font color="#CCCCCC"> so something in</font>

180
00:06:59,150 --> 00:07:02,469
<font color="#E5E5E5">this whole chain of</font><font color="#CCCCCC"> the past lock system</font>

181
00:07:00,440 --> 00:07:05,000
is not<font color="#E5E5E5"> functioning as it should</font><font color="#CCCCCC"> so</font>

182
00:07:02,470 --> 00:07:06,920
naturally start replacing parts and see

183
00:07:05,000 --> 00:07:08,000
what happens the<font color="#CCCCCC"> first</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> I thought</font>

184
00:07:06,920 --> 00:07:08,570
was that the<font color="#E5E5E5"> ignition lock cylinder</font>

185
00:07:08,000 --> 00:07:10,550
might be bad

186
00:07:08,570 --> 00:07:12,680
so I looked up various guides online<font color="#E5E5E5"> but</font>

187
00:07:10,550 --> 00:07:13,760
how to bypass<font color="#CCCCCC"> the basilar system</font><font color="#E5E5E5"> and</font>

188
00:07:12,680 --> 00:07:15,410
<font color="#CCCCCC">people do that by</font><font color="#E5E5E5"> putting their own</font>

189
00:07:13,760 --> 00:07:16,849
resistor<font color="#E5E5E5"> on that instrument panel</font>

190
00:07:15,410 --> 00:07:18,230
cluster or the wire that<font color="#E5E5E5"> leads to it</font>

191
00:07:16,850 --> 00:07:19,880
then they triggered that relearn

192
00:07:18,230 --> 00:07:22,220
procedure<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> it'll accept that new</font>

193
00:07:19,880 --> 00:07:25,610
resistor value which is how<font color="#CCCCCC"> all remote</font>

194
00:07:22,220 --> 00:07:27,290
start kids<font color="#CCCCCC"> work and by the way that</font>

195
00:07:25,610 --> 00:07:29,480
relearn procedure takes 30 minutes<font color="#CCCCCC"> so</font>

196
00:07:27,290 --> 00:07:30,470
that's intentional<font color="#E5E5E5"> so they were trying</font>

197
00:07:29,480 --> 00:07:31,960
<font color="#CCCCCC">to steal</font><font color="#E5E5E5"> the car you got to wait 30</font>

198
00:07:30,470 --> 00:07:36,970
minutes where you going to steal<font color="#CCCCCC"> it</font><font color="#E5E5E5"> so</font>

199
00:07:31,960 --> 00:07:39,109
<font color="#E5E5E5">that's why they do that</font><font color="#CCCCCC"> so I</font><font color="#E5E5E5"> thought</font><font color="#CCCCCC"> I</font>

200
00:07:36,970 --> 00:07:41,480
did that it didn't help<font color="#E5E5E5"> so then I</font>

201
00:07:39,110 --> 00:07:43,850
decided<font color="#CCCCCC"> to buy a brand new initial lock</font>

202
00:07:41,480 --> 00:07:45,110
cylinder put that in that's still<font color="#CCCCCC"> uno so</font>

203
00:07:43,850 --> 00:07:47,510
then I thought<font color="#E5E5E5"> maybe the ignition switch</font>

204
00:07:45,110 --> 00:07:49,250
is<font color="#E5E5E5"> bad</font><font color="#CCCCCC"> we're kind of a long</font><font color="#E5E5E5"> shot but I</font>

205
00:07:47,510 --> 00:07:51,200
<font color="#E5E5E5">try</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> put one end that also didn't help</font>

206
00:07:49,250 --> 00:07:53,000
then I thought<font color="#E5E5E5"> maybe the</font><font color="#CCCCCC"> clubs safety</font>

207
00:07:51,200 --> 00:07:55,520
switch had gone bad<font color="#E5E5E5"> so I checked with</font>

208
00:07:53,000 --> 00:07:56,480
<font color="#E5E5E5">multimeter</font><font color="#CCCCCC"> to make sure the clutch pedal</font>

209
00:07:55,520 --> 00:08:01,310
<font color="#CCCCCC">was properly making that switch</font>

210
00:07:56,480 --> 00:08:04,550
connection which it was<font color="#E5E5E5"> so than</font><font color="#CCCCCC"> that if</font>

211
00:08:01,310 --> 00:08:05,990
you look under behind the the clutch

212
00:08:04,550 --> 00:08:07,220
pedal<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> see a switch in there and</font>

213
00:08:05,990 --> 00:08:09,440
there<font color="#E5E5E5"> are wires that come out</font><font color="#CCCCCC"> of it so</font>

214
00:08:07,220 --> 00:08:12,980
just check<font color="#CCCCCC"> to</font><font color="#E5E5E5"> make sure it's good all</font>

215
00:08:09,440 --> 00:08:14,330
<font color="#E5E5E5">the way up to the ignition</font><font color="#CCCCCC"> switch</font><font color="#E5E5E5"> so so</font>

216
00:08:12,980 --> 00:08:17,000
then I thought maybe the<font color="#E5E5E5"> computer had</font>

217
00:08:14,330 --> 00:08:18,229
somehow gone bad and<font color="#E5E5E5"> maybe depends on it</font>

218
00:08:17,000 --> 00:08:20,120
had corroded<font color="#E5E5E5"> or something I</font><font color="#CCCCCC"> mean who</font>

219
00:08:18,230 --> 00:08:21,830
knows anything could be<font color="#E5E5E5"> causing it to</font>

220
00:08:20,120 --> 00:08:25,100
<font color="#E5E5E5">not send that password</font><font color="#CCCCCC"> for an</font><font color="#E5E5E5"> instrument</font>

221
00:08:21,830 --> 00:08:26,840
cluster to<font color="#E5E5E5"> the computer so but there is</font>

222
00:08:25,100 --> 00:08:28,340
a problem with replacing<font color="#E5E5E5"> that component</font>

223
00:08:26,840 --> 00:08:29,989
<font color="#E5E5E5">and</font><font color="#CCCCCC"> that is that your VIN number your</font>

224
00:08:28,340 --> 00:08:33,140
vehicle identification number which is

225
00:08:29,990 --> 00:08:35,479
unique to<font color="#CCCCCC"> your car</font><font color="#E5E5E5"> is stored in the PCM</font>

226
00:08:33,140 --> 00:08:36,919
<font color="#CCCCCC">and not only that</font><font color="#E5E5E5"> but the the password</font>

227
00:08:35,479 --> 00:08:38,539
<font color="#E5E5E5">that flies around between the instrument</font>

228
00:08:36,919 --> 00:08:41,030
<font color="#CCCCCC">cluster and</font><font color="#E5E5E5"> the PCM</font><font color="#CCCCCC"> is generated from</font>

229
00:08:38,539 --> 00:08:42,049
the VIN number so the PCM<font color="#CCCCCC"> and instant</font>

230
00:08:41,030 --> 00:08:43,490
<font color="#E5E5E5">panel cluster are kind of married to</font>

231
00:08:42,049 --> 00:08:45,050
<font color="#E5E5E5">each other you</font><font color="#CCCCCC"> know if you replace if</font>

232
00:08:43,490 --> 00:08:46,220
you so if you replaced one of<font color="#CCCCCC"> them it</font>

233
00:08:45,050 --> 00:08:47,849
needs<font color="#E5E5E5"> to have the matching VIN number in</font>

234
00:08:46,220 --> 00:08:51,269
it or you'll cause<font color="#E5E5E5"> exactly</font>

235
00:08:47,850 --> 00:08:53,100
<font color="#CCCCCC">problems so fortunately</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can buy</font>

236
00:08:51,269 --> 00:08:54,779
replacement<font color="#CCCCCC"> PCs on</font><font color="#E5E5E5"> eBay and the seller</font>

237
00:08:53,100 --> 00:08:57,690
well I should<font color="#CCCCCC"> preflight it for you with</font>

238
00:08:54,779 --> 00:08:59,430
<font color="#E5E5E5">the VIN number that you specify</font><font color="#CCCCCC"> so I did</font>

239
00:08:57,690 --> 00:09:00,720
that<font color="#CCCCCC"> I've</font><font color="#E5E5E5"> bought</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> a fee-based left in</font>

240
00:08:59,430 --> 00:09:04,439
the car and it still didn't work

241
00:09:00,720 --> 00:09:05,759
so just to recap<font color="#E5E5E5"> replace ignition lock</font>

242
00:09:04,440 --> 00:09:07,050
cylinder a replace<font color="#E5E5E5"> the ignition</font><font color="#CCCCCC"> switch</font>

243
00:09:05,759 --> 00:09:09,449
<font color="#CCCCCC">I've replaced the computer itself</font><font color="#E5E5E5"> and</font>

244
00:09:07,050 --> 00:09:10,609
still nothing<font color="#CCCCCC"> so that</font><font color="#E5E5E5"> just leaves the</font>

245
00:09:09,449 --> 00:09:13,258
instrument panel cluster which is

246
00:09:10,610 --> 00:09:17,310
prohibitively expensive<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get a new</font><font color="#CCCCCC"> one</font>

247
00:09:13,259 --> 00:09:20,220
with<font color="#E5E5E5"> the right VIN number in it</font><font color="#CCCCCC"> I don't</font>

248
00:09:17,310 --> 00:09:22,138
even want to think<font color="#CCCCCC"> about it this</font><font color="#E5E5E5"> is not</font>

249
00:09:20,220 --> 00:09:28,279
practical<font color="#CCCCCC"> don't like I said don't do</font>

250
00:09:22,139 --> 00:09:28,279
this<font color="#E5E5E5"> so</font><font color="#CCCCCC"> this is just yeah exactly</font>

251
00:09:29,389 --> 00:09:33,209
so it's either<font color="#CCCCCC"> the internal cluster</font>

252
00:09:31,709 --> 00:09:34,920
which<font color="#CCCCCC"> is way too expensive</font><font color="#E5E5E5"> to replace or</font>

253
00:09:33,209 --> 00:09:36,660
it's the wiring<font color="#CCCCCC"> that</font><font color="#E5E5E5"> connects all these</font>

254
00:09:34,920 --> 00:09:38,459
<font color="#CCCCCC">components together</font><font color="#E5E5E5"> now there are dozens</font>

255
00:09:36,660 --> 00:09:39,920
<font color="#E5E5E5">upon dozens upon dozens of wires</font>

256
00:09:38,459 --> 00:09:41,729
connecting all this stuff together<font color="#E5E5E5"> and</font>

257
00:09:39,920 --> 00:09:43,139
usually<font color="#CCCCCC"> when there's a loose connection</font>

258
00:09:41,730 --> 00:09:45,300
<font color="#E5E5E5">somewhere people just give up and junk</font>

259
00:09:43,139 --> 00:09:46,680
the<font color="#CCCCCC"> whole</font><font color="#E5E5E5"> cards these</font><font color="#CCCCCC"> bad connections</font>

260
00:09:45,300 --> 00:09:48,719
are almost impossible<font color="#CCCCCC"> to</font><font color="#E5E5E5"> track down</font><font color="#CCCCCC"> and</font>

261
00:09:46,680 --> 00:09:51,388
even worse I have no idea how to do<font color="#CCCCCC"> that</font>

262
00:09:48,720 --> 00:09:52,410
so<font color="#E5E5E5"> I returned all this replacement parts</font>

263
00:09:51,389 --> 00:09:54,000
cloud boss<font color="#CCCCCC"> didn't actually spend any</font>

264
00:09:52,410 --> 00:09:56,399
money at<font color="#CCCCCC"> that point</font><font color="#E5E5E5"> except for the PCM</font>

265
00:09:54,000 --> 00:10:01,829
from eBay and<font color="#CCCCCC"> tried to think about</font><font color="#E5E5E5"> what</font>

266
00:09:56,399 --> 00:10:03,689
<font color="#E5E5E5">to do next</font><font color="#CCCCCC"> so at this</font><font color="#E5E5E5"> point I have a</font>

267
00:10:01,829 --> 00:10:05,550
spare PCM that only<font color="#E5E5E5"> works with my car's</font>

268
00:10:03,689 --> 00:10:06,959
VIN number and<font color="#E5E5E5"> I know that</font><font color="#CCCCCC"> the PCM</font>

269
00:10:05,550 --> 00:10:08,969
disables the fuel injectors whenever it

270
00:10:06,959 --> 00:10:10,410
detects an<font color="#CCCCCC"> unauthorised</font><font color="#E5E5E5"> engine starred</font>

271
00:10:08,970 --> 00:10:12,540
meaning it didn't get<font color="#CCCCCC"> that password</font><font color="#E5E5E5"> from</font>

272
00:10:10,410 --> 00:10:14,310
<font color="#E5E5E5">the instrument panel cluster and I also</font>

273
00:10:12,540 --> 00:10:16,860
know<font color="#CCCCCC"> that the PCM contains firmware that</font>

274
00:10:14,310 --> 00:10:17,939
<font color="#E5E5E5">implements this detection</font><font color="#CCCCCC"> and I know the</font>

275
00:10:16,860 --> 00:10:18,480
dealership<font color="#CCCCCC"> so great just from where all</font>

276
00:10:17,939 --> 00:10:20,759
the time

277
00:10:18,480 --> 00:10:22,470
so if<font color="#E5E5E5"> that's the case what's to stop us</font>

278
00:10:20,759 --> 00:10:24,480
<font color="#CCCCCC">from</font><font color="#E5E5E5"> modifying the firmware and removing</font>

279
00:10:22,470 --> 00:10:27,149
<font color="#E5E5E5">that check that's when I started reading</font>

280
00:10:24,480 --> 00:10:30,360
<font color="#CCCCCC">about a community of people called the</font>

281
00:10:27,149 --> 00:10:32,160
tuners<font color="#CCCCCC"> that who modify the firmware in</font>

282
00:10:30,360 --> 00:10:33,600
their cars computers<font color="#E5E5E5"> to tweak engine</font>

283
00:10:32,160 --> 00:10:34,589
performance<font color="#E5E5E5"> and other stuff</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> get</font>

284
00:10:33,600 --> 00:10:38,490
them generally get<font color="#E5E5E5"> the most out of their</font>

285
00:10:34,589 --> 00:10:40,079
cars<font color="#CCCCCC"> they also actually</font><font color="#E5E5E5"> disable the</font>

286
00:10:38,490 --> 00:10:41,189
security<font color="#E5E5E5"> system in the firmware so that</font>

287
00:10:40,079 --> 00:10:42,899
they can take the engine and the

288
00:10:41,189 --> 00:10:44,430
computer and Transplant it into<font color="#E5E5E5"> the body</font>

289
00:10:42,899 --> 00:10:46,290
<font color="#CCCCCC">of another</font><font color="#E5E5E5"> car and</font><font color="#CCCCCC"> it'll</font><font color="#E5E5E5"> keep working</font>

290
00:10:44,430 --> 00:10:47,579
which<font color="#E5E5E5"> is exactly what I want to do I</font>

291
00:10:46,290 --> 00:10:48,779
wanted to say well<font color="#E5E5E5"> that feature entirely</font>

292
00:10:47,579 --> 00:10:50,279
so that<font color="#CCCCCC"> the</font><font color="#E5E5E5"> computer doesn't care what's</font>

293
00:10:48,779 --> 00:10:53,610
going<font color="#E5E5E5"> on outside of it as long as the</font>

294
00:10:50,279 --> 00:10:55,709
engine<font color="#E5E5E5"> turns over and runs so there you</font>

295
00:10:53,610 --> 00:10:57,149
go<font color="#E5E5E5"> sounds like a project all I want to</font>

296
00:10:55,709 --> 00:10:58,900
do is just<font color="#E5E5E5"> do what they do so if they</font>

297
00:10:57,149 --> 00:11:01,720
can do<font color="#E5E5E5"> it so can I</font>

298
00:10:58,900 --> 00:11:03,390
so next question<font color="#CCCCCC"> I've to</font><font color="#E5E5E5"> ask myself is</font>

299
00:11:01,720 --> 00:11:06,100
how do other people disable this check

300
00:11:03,390 --> 00:11:08,529
well according to the<font color="#CCCCCC"> internet people</font>

301
00:11:06,100 --> 00:11:09,940
<font color="#CCCCCC">tune their cars by loading</font><font color="#E5E5E5"> up the</font>

302
00:11:08,529 --> 00:11:12,370
<font color="#CCCCCC">firmware image</font><font color="#E5E5E5"> and an</font><font color="#CCCCCC"> application called</font>

303
00:11:09,940 --> 00:11:14,140
<font color="#E5E5E5">oddly enough</font><font color="#CCCCCC"> tuner pro</font><font color="#E5E5E5"> free application</font>

304
00:11:12,370 --> 00:11:15,940
then they load what's called an<font color="#CCCCCC"> x DF</font>

305
00:11:14,140 --> 00:11:17,980
file or a definition<font color="#E5E5E5"> file which defines</font>

306
00:11:15,940 --> 00:11:19,540
<font color="#E5E5E5">the memory addresses for configuration</font>

307
00:11:17,980 --> 00:11:21,850
<font color="#E5E5E5">flags for all sorts of things including</font>

308
00:11:19,540 --> 00:11:24,370
of course<font color="#E5E5E5"> the enabling disabling of that</font>

309
00:11:21,850 --> 00:11:25,690
<font color="#E5E5E5">any</font><font color="#CCCCCC"> set functionality so then all they</font>

310
00:11:24,370 --> 00:11:27,640
have to do is tell trainer<font color="#CCCCCC"> pro hey turn</font>

311
00:11:25,690 --> 00:11:30,220
this off and it knows which bits or

312
00:11:27,640 --> 00:11:31,360
bytes the change from<font color="#CCCCCC"> that xcf file and</font>

313
00:11:30,220 --> 00:11:32,740
then it<font color="#E5E5E5"> saves the firmware image back</font>

314
00:11:31,360 --> 00:11:35,440
out<font color="#E5E5E5"> and the tuners to write that</font>

315
00:11:32,740 --> 00:11:39,040
firmware image back to<font color="#CCCCCC"> the car sounds</font>

316
00:11:35,440 --> 00:11:41,290
<font color="#E5E5E5">easy right well it depends on</font><font color="#CCCCCC"> the kind</font>

317
00:11:39,040 --> 00:11:42,640
<font color="#CCCCCC">of car you have most tuners and</font><font color="#E5E5E5"> car</font>

318
00:11:41,290 --> 00:11:44,920
<font color="#E5E5E5">dealerships will</font><font color="#CCCCCC"> update the firmware</font>

319
00:11:42,640 --> 00:11:47,199
through the obd2<font color="#E5E5E5"> diagnostic port out of</font>

320
00:11:44,920 --> 00:11:48,520
<font color="#E5E5E5">steering column which is on every car</font>

321
00:11:47,200 --> 00:11:50,500
<font color="#CCCCCC">manufactured after ninety ninety six</font>

322
00:11:48,520 --> 00:11:51,480
which is<font color="#CCCCCC"> good for</font><font color="#E5E5E5"> us</font><font color="#CCCCCC"> because we have 97</font>

323
00:11:50,500 --> 00:11:53,470
that we're<font color="#E5E5E5"> trying to deal</font><font color="#CCCCCC"> with</font>

324
00:11:51,480 --> 00:11:54,850
unfortunately<font color="#CCCCCC"> though</font><font color="#E5E5E5"> each car</font>

325
00:11:53,470 --> 00:11:56,350
manufacturer uses<font color="#E5E5E5"> different protocols</font>

326
00:11:54,850 --> 00:11:58,870
and different tools<font color="#E5E5E5"> to actually connect</font>

327
00:11:56,350 --> 00:12:00,550
to and use that<font color="#E5E5E5"> diagnostic port for</font>

328
00:11:58,870 --> 00:12:01,930
example General Motors which is what we

329
00:12:00,550 --> 00:12:03,910
have to deal with for<font color="#E5E5E5"> our car has a</font>

330
00:12:01,930 --> 00:12:05,199
specific device<font color="#CCCCCC"> called</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> Tec to scan</font>

331
00:12:03,910 --> 00:12:07,230
tool which is<font color="#E5E5E5"> kind of a fancy code</font>

332
00:12:05,200 --> 00:12:09,190
reader<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you plug into</font><font color="#E5E5E5"> the obd2 port</font>

333
00:12:07,230 --> 00:12:11,440
<font color="#E5E5E5">which you know of</font><font color="#CCCCCC"> course it's capable</font><font color="#E5E5E5"> of</font>

334
00:12:09,190 --> 00:12:13,150
more than<font color="#CCCCCC"> just reading</font><font color="#E5E5E5"> diagnostic codes</font>

335
00:12:11,440 --> 00:12:15,910
though it can it can upload and<font color="#CCCCCC"> download</font>

336
00:12:13,150 --> 00:12:17,050
firmware<font color="#CCCCCC"> in the PCM there's one problem</font>

337
00:12:15,910 --> 00:12:19,930
<font color="#CCCCCC">with this</font><font color="#E5E5E5"> thing though and that is that</font>

338
00:12:17,050 --> 00:12:21,459
<font color="#CCCCCC">it is ridiculously</font><font color="#E5E5E5"> expensive this thing</font>

339
00:12:19,930 --> 00:12:22,930
runs anywhere<font color="#E5E5E5"> from a few hundred you</font>

340
00:12:21,459 --> 00:12:25,810
want the cheap<font color="#CCCCCC"> Chinese clone to several</font>

341
00:12:22,930 --> 00:12:27,670
thousands of<font color="#E5E5E5"> dollars which you know fine</font>

342
00:12:25,810 --> 00:12:29,469
<font color="#CCCCCC">maybe the protocol that it uses is</font>

343
00:12:27,670 --> 00:12:30,699
<font color="#E5E5E5">documented somewhere online so maybe we</font>

344
00:12:29,470 --> 00:12:33,130
can<font color="#CCCCCC"> just implement it ourselves</font><font color="#E5E5E5"> with</font>

345
00:12:30,700 --> 00:12:36,459
<font color="#E5E5E5">something else so I do some googling and</font>

346
00:12:33,130 --> 00:12:39,160
no no that's not<font color="#E5E5E5"> the case</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> fact it</font>

347
00:12:36,459 --> 00:12:40,810
<font color="#E5E5E5">uses some sort of</font><font color="#CCCCCC"> proprietary</font><font color="#E5E5E5"> obfuscated</font>

348
00:12:39,160 --> 00:12:42,250
algorithm so<font color="#CCCCCC"> you've got to unlock the</font>

349
00:12:40,810 --> 00:12:43,510
PCM before you can read from<font color="#CCCCCC"> the right</font>

350
00:12:42,250 --> 00:12:45,820
to it

351
00:12:43,510 --> 00:12:46,839
<font color="#E5E5E5">GM really doesn't want you doing</font>

352
00:12:45,820 --> 00:12:49,600
yourself<font color="#E5E5E5"> what this thing does</font>

353
00:12:46,839 --> 00:12:51,220
unfortunately<font color="#E5E5E5"> so even worse it seems</font>

354
00:12:49,600 --> 00:12:52,990
there's no<font color="#E5E5E5"> xdf file for</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> particular</font>

355
00:12:51,220 --> 00:12:55,270
car<font color="#CCCCCC"> so we're gonna have to</font><font color="#E5E5E5"> find these</font>

356
00:12:52,990 --> 00:12:56,760
memory addresses ourselves so now what

357
00:12:55,270 --> 00:12:59,319
do we do

358
00:12:56,760 --> 00:13:00,939
well first things first we need<font color="#CCCCCC"> to get</font>

359
00:12:59,320 --> 00:13:02,230
at the firmware<font color="#CCCCCC"> and if we can't simply</font>

360
00:13:00,940 --> 00:13:04,300
plug in<font color="#E5E5E5"> and read or write the firmware</font>

361
00:13:02,230 --> 00:13:05,980
we're gonna have to get<font color="#E5E5E5"> physical so by</font>

362
00:13:04,300 --> 00:13:07,870
unplug and remove<font color="#E5E5E5"> the PCM from the car</font>

363
00:13:05,980 --> 00:13:10,329
and unscrew the top cover<font color="#E5E5E5"> this is what I</font>

364
00:13:07,870 --> 00:13:11,420
see<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> not a hardware</font><font color="#CCCCCC"> guy so I can only</font>

365
00:13:10,329 --> 00:13:12,739
make

366
00:13:11,420 --> 00:13:15,110
educated guesses as to what's going<font color="#E5E5E5"> on</font>

367
00:13:12,740 --> 00:13:16,520
<font color="#E5E5E5">inside this thing</font><font color="#CCCCCC"> but one thing I do</font>

368
00:13:15,110 --> 00:13:18,230
know is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the bottom are</font><font color="#CCCCCC"> the</font>

369
00:13:16,520 --> 00:13:20,300
connectors<font color="#CCCCCC"> for</font><font color="#E5E5E5"> attaching the</font><font color="#CCCCCC"> PCM to the</font>

370
00:13:18,230 --> 00:13:21,470
car on the<font color="#CCCCCC"> left and</font><font color="#E5E5E5"> right sides appear</font>

371
00:13:20,300 --> 00:13:23,180
to be some<font color="#E5E5E5"> kind of heat sinks or</font>

372
00:13:21,470 --> 00:13:25,150
something and then in the middle is a

373
00:13:23,180 --> 00:13:28,130
whole mess of chips and circuitry<font color="#CCCCCC"> and</font>

374
00:13:25,150 --> 00:13:30,079
the<font color="#E5E5E5"> square chip just to the left of</font>

375
00:13:28,130 --> 00:13:31,310
<font color="#E5E5E5">center near the top looks to be the</font><font color="#CCCCCC"> most</font>

376
00:13:30,080 --> 00:13:33,650
complicated longer it's got the most

377
00:13:31,310 --> 00:13:35,300
pins<font color="#CCCCCC"> and I'd be</font><font color="#E5E5E5"> willing to bet</font><font color="#CCCCCC"> more than</font>

378
00:13:33,650 --> 00:13:37,310
likely that that is probably<font color="#CCCCCC"> the</font><font color="#E5E5E5"> main</font>

379
00:13:35,300 --> 00:13:38,420
processor this thing so and I've taken

380
00:13:37,310 --> 00:13:40,609
<font color="#E5E5E5">apart enough things to know that's</font>

381
00:13:38,420 --> 00:13:42,319
probably<font color="#E5E5E5"> what</font><font color="#CCCCCC"> it is</font><font color="#E5E5E5"> it's probably the</font>

382
00:13:40,610 --> 00:13:43,760
brain of<font color="#E5E5E5"> this whole thing</font><font color="#CCCCCC"> and the</font>

383
00:13:42,320 --> 00:13:45,650
majority of these smaller chips probably

384
00:13:43,760 --> 00:13:46,819
serve some specific purpose<font color="#E5E5E5"> something</font>

385
00:13:45,650 --> 00:13:48,350
that the main processor wouldn't have

386
00:13:46,820 --> 00:13:50,390
time<font color="#E5E5E5"> to do itself like</font><font color="#CCCCCC"> handled the</font>

387
00:13:48,350 --> 00:13:52,700
<font color="#CCCCCC">communication over</font><font color="#E5E5E5"> the obd2 diagnostic</font>

388
00:13:50,390 --> 00:13:54,860
order so the big<font color="#CCCCCC"> question here</font><font color="#E5E5E5"> is where</font>

389
00:13:52,700 --> 00:13:55,760
is the firmware stored<font color="#E5E5E5"> based on what</font>

390
00:13:54,860 --> 00:13:57,200
little<font color="#E5E5E5"> information I can gather is</font>

391
00:13:55,760 --> 00:13:58,910
probably stored in one or two places<font color="#CCCCCC"> you</font>

392
00:13:57,200 --> 00:14:01,010
want either one<font color="#E5E5E5"> it's stored inside that</font>

393
00:13:58,910 --> 00:14:02,089
square custom chip which means we're

394
00:14:01,010 --> 00:14:03,650
<font color="#E5E5E5">screwed</font><font color="#CCCCCC"> because we'll never figure out</font>

395
00:14:02,090 --> 00:14:05,300
what it does<font color="#CCCCCC"> or what</font><font color="#E5E5E5"> all those pins do</font>

396
00:14:03,650 --> 00:14:07,430
or it's stored in<font color="#E5E5E5"> a separate standard</font>

397
00:14:05,300 --> 00:14:09,410
<font color="#E5E5E5">memory chip so why do we do we start</font>

398
00:14:07,430 --> 00:14:11,300
googling every<font color="#CCCCCC"> number</font><font color="#E5E5E5"> we find printed on</font>

399
00:14:09,410 --> 00:14:13,430
this one just<font color="#E5E5E5"> on every chip on this</font>

400
00:14:11,300 --> 00:14:15,020
board when we<font color="#E5E5E5"> do one in particular</font>

401
00:14:13,430 --> 00:14:16,310
stands out which is that rectangular you

402
00:14:15,020 --> 00:14:18,140
probably know that rectangular chip at

403
00:14:16,310 --> 00:14:19,670
the top which is a flash<font color="#E5E5E5"> memory chip</font>

404
00:14:18,140 --> 00:14:22,370
capable<font color="#CCCCCC"> holding</font><font color="#E5E5E5"> buffer and</font><font color="#CCCCCC"> twelve</font>

405
00:14:19,670 --> 00:14:23,750
kilobytes of data<font color="#CCCCCC"> and for an</font><font color="#E5E5E5"> embedded</font>

406
00:14:22,370 --> 00:14:25,310
device like this that's a<font color="#E5E5E5"> fairly</font>

407
00:14:23,750 --> 00:14:26,360
significant chunk of memory<font color="#CCCCCC"> more than</font>

408
00:14:25,310 --> 00:14:28,189
enough to hold the code it controls this

409
00:14:26,360 --> 00:14:29,810
<font color="#E5E5E5">thing so it's alright it's fairly safe</font>

410
00:14:28,190 --> 00:14:33,230
to<font color="#E5E5E5"> say this is probably the thing that</font>

411
00:14:29,810 --> 00:14:34,760
<font color="#E5E5E5">we want so</font><font color="#CCCCCC"> now that we've identified the</font>

412
00:14:33,230 --> 00:14:36,440
<font color="#E5E5E5">merits if we want</font><font color="#CCCCCC"> to dump</font><font color="#E5E5E5"> how do we dump</font>

413
00:14:34,760 --> 00:14:37,970
it<font color="#E5E5E5"> well even though I'm not a hardware</font>

414
00:14:36,440 --> 00:14:39,470
<font color="#CCCCCC">guy</font><font color="#E5E5E5"> I have physically extracted chips</font>

415
00:14:37,970 --> 00:14:41,320
like<font color="#E5E5E5"> this before so I happen</font><font color="#CCCCCC"> to already</font>

416
00:14:39,470 --> 00:14:43,880
<font color="#E5E5E5">have an old</font><font color="#CCCCCC"> willem EEPROM programmer</font>

417
00:14:41,320 --> 00:14:45,440
<font color="#E5E5E5">which this picture here which is capable</font>

418
00:14:43,880 --> 00:14:47,030
of<font color="#E5E5E5"> reading</font><font color="#CCCCCC"> from and writing to all sorts</font>

419
00:14:45,440 --> 00:14:48,650
of memory chips<font color="#CCCCCC"> through adapters that</font>

420
00:14:47,030 --> 00:14:51,949
<font color="#E5E5E5">you plug into</font><font color="#CCCCCC"> that big green</font><font color="#E5E5E5"> rectangular</font>

421
00:14:48,650 --> 00:14:53,689
connector<font color="#E5E5E5"> but of course I</font><font color="#CCCCCC"> don't have the</font>

422
00:14:51,950 --> 00:14:55,160
adapter<font color="#CCCCCC"> for this particular port</font><font color="#E5E5E5"> for pin</font>

423
00:14:53,690 --> 00:14:58,700
<font color="#CCCCCC">chip so I had to wait for one to get</font>

424
00:14:55,160 --> 00:14:59,870
here<font color="#E5E5E5"> from China three big but after six</font>

425
00:14:58,700 --> 00:15:01,010
to eight weeks later eventually<font color="#E5E5E5"> you want</font>

426
00:14:59,870 --> 00:15:02,450
<font color="#CCCCCC">the big it here I had everything I</font>

427
00:15:01,010 --> 00:15:04,160
needed<font color="#E5E5E5"> to physically desolder the chip</font>

428
00:15:02,450 --> 00:15:05,660
and drop it into this nice load after

429
00:15:04,160 --> 00:15:07,069
plug the adapter into<font color="#CCCCCC"> the programmer</font>

430
00:15:05,660 --> 00:15:09,170
<font color="#E5E5E5">hook it up to an old piece</font><font color="#CCCCCC"> of crap you</font>

431
00:15:07,070 --> 00:15:13,130
<font color="#CCCCCC">see this still</font><font color="#E5E5E5"> has a parallel for which</font>

432
00:15:09,170 --> 00:15:15,920
<font color="#E5E5E5">this</font><font color="#CCCCCC"> thing uses and</font><font color="#E5E5E5"> dump it right well</font>

433
00:15:13,130 --> 00:15:18,200
the problem is<font color="#CCCCCC"> this</font><font color="#E5E5E5"> adapter sucks</font><font color="#CCCCCC"> the</font>

434
00:15:15,920 --> 00:15:19,939
whole programmer sucks<font color="#CCCCCC"> to be honest</font><font color="#E5E5E5"> it's</font>

435
00:15:18,200 --> 00:15:22,520
something right<font color="#E5E5E5"> out of the late 90s</font>

436
00:15:19,940 --> 00:15:23,630
which I<font color="#E5E5E5"> realize the irony</font><font color="#CCCCCC"> of that same X</font>

437
00:15:22,520 --> 00:15:25,790
I'm trying to fix<font color="#E5E5E5"> a car</font><font color="#CCCCCC"> from the late</font>

438
00:15:23,630 --> 00:15:27,619
90s but that's neither<font color="#E5E5E5"> here another</font>

439
00:15:25,790 --> 00:15:29,689
the reason the doctor sucks is<font color="#CCCCCC"> that the</font>

440
00:15:27,619 --> 00:15:31,220
zero insertion force socket<font color="#CCCCCC"> isn't</font>

441
00:15:29,689 --> 00:15:33,230
capable making good contact until<font color="#E5E5E5"> the</font>

442
00:15:31,220 --> 00:15:35,119
pins on the sides of the chip and

443
00:15:33,230 --> 00:15:37,429
because<font color="#CCCCCC"> of that I</font><font color="#E5E5E5"> just can't get a good</font>

444
00:15:35,119 --> 00:15:39,619
reliable<font color="#E5E5E5"> consistent dump of the chip so</font>

445
00:15:37,429 --> 00:15:41,569
I have no<font color="#E5E5E5"> choice but to remove the zero</font>

446
00:15:39,619 --> 00:15:43,220
insertion force socket and restarted the

447
00:15:41,569 --> 00:15:45,169
<font color="#CCCCCC">flash chip</font><font color="#E5E5E5"> right onto the adapter like I</font>

448
00:15:43,220 --> 00:15:46,429
did in that<font color="#E5E5E5"> picture there once I did</font>

449
00:15:45,169 --> 00:15:48,559
this though I was<font color="#CCCCCC"> able to consistently</font>

450
00:15:46,429 --> 00:15:54,769
<font color="#E5E5E5">dump the entire 512 kilobytes of that</font>

451
00:15:48,559 --> 00:15:55,819
chip so yeah thankfully Google<font color="#E5E5E5"> has come</font>

452
00:15:54,769 --> 00:15:57,859
to the rest of<font color="#E5E5E5"> you and presented me with</font>

453
00:15:55,819 --> 00:15:59,868
a<font color="#E5E5E5"> series of forum posts that tell</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> how</font>

454
00:15:57,859 --> 00:16:01,100
to interpret this firmware<font color="#CCCCCC"> Dom these</font>

455
00:15:59,869 --> 00:16:02,509
seven or<font color="#CCCCCC"> eight-year-old posts are pretty</font>

456
00:16:01,100 --> 00:16:04,160
much the only<font color="#E5E5E5"> only hope I could find on</font>

457
00:16:02,509 --> 00:16:06,199
the<font color="#E5E5E5"> subject so I had to decipher this</font>

458
00:16:04,160 --> 00:16:06,879
one<font color="#E5E5E5"> guy's notes and just do the best</font>

459
00:16:06,199 --> 00:16:09,199
<font color="#E5E5E5">good</font>

460
00:16:06,879 --> 00:16:11,540
apparently the processor in this PCM<font color="#E5E5E5"> and</font>

461
00:16:09,199 --> 00:16:14,660
others of<font color="#CCCCCC"> its era is a</font><font color="#E5E5E5"> Motorola it's</font>

462
00:16:11,540 --> 00:16:16,790
called a motorola 68020<font color="#CCCCCC"> hu zé's the CPU</font>

463
00:16:14,660 --> 00:16:21,529
<font color="#E5E5E5">32 instruction set and here's what I've</font>

464
00:16:16,790 --> 00:16:23,169
lucked out because because I just<font color="#E5E5E5"> so</font>

465
00:16:21,529 --> 00:16:26,839
happen to have a history with<font color="#E5E5E5"> Motorola</font>

466
00:16:23,169 --> 00:16:27,919
6800 since high school<font color="#E5E5E5"> as you know iris</font>

467
00:16:26,839 --> 00:16:29,179
<font color="#E5E5E5">mentioned</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> messing with basic in</font>

468
00:16:27,919 --> 00:16:30,439
<font color="#E5E5E5">assembly program protects a sense from</font>

469
00:16:29,179 --> 00:16:32,959
<font color="#E5E5E5">its graphing calculators some of which</font>

470
00:16:30,439 --> 00:16:34,339
have Motorola six decades view<font color="#E5E5E5"> and I</font>

471
00:16:32,959 --> 00:16:36,229
enjoy collecting tinkering with<font color="#E5E5E5"> old game</font>

472
00:16:34,339 --> 00:16:37,850
consoles which is good<font color="#E5E5E5"> because the Sega</font>

473
00:16:36,230 --> 00:16:40,489
Genesis just so happens to<font color="#E5E5E5"> have Motorola</font>

474
00:16:37,850 --> 00:16:42,199
60 K CPU and like<font color="#CCCCCC"> you</font><font color="#E5E5E5"> said I did that</font>

475
00:16:40,489 --> 00:16:44,119
<font color="#CCCCCC">cure</font><font color="#E5E5E5"> so our talk couple years ago about</font>

476
00:16:42,199 --> 00:16:48,939
dumping that<font color="#E5E5E5"> wrong</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> I am no stranger</font>

477
00:16:44,119 --> 00:16:52,129
<font color="#E5E5E5">to this processor or so I think find out</font>

478
00:16:48,939 --> 00:16:53,599
so anyway<font color="#CCCCCC"> it sure</font><font color="#E5E5E5"> would be nice to be</font>

479
00:16:52,129 --> 00:16:55,339
able<font color="#E5E5E5"> to confirm in some way if this file</font>

480
00:16:53,600 --> 00:16:57,410
really<font color="#E5E5E5"> was dumped correctly and this</font>

481
00:16:55,339 --> 00:17:01,009
really<font color="#E5E5E5"> is Motorola 6800 more being</font>

482
00:16:57,410 --> 00:17:02,480
executed by<font color="#CCCCCC"> this PCM</font><font color="#E5E5E5"> and so well one</font>

483
00:17:01,009 --> 00:17:03,860
thing I do know about<font color="#E5E5E5"> tomorrow 60</font><font color="#CCCCCC"> K is</font>

484
00:17:02,480 --> 00:17:06,110
that there should<font color="#CCCCCC"> be a vector table</font><font color="#E5E5E5"> at</font>

485
00:17:03,860 --> 00:17:07,880
the beginning<font color="#CCCCCC"> of</font><font color="#E5E5E5"> memory and what is a</font>

486
00:17:06,109 --> 00:17:10,158
vector table has<font color="#CCCCCC"> a the table of</font>

487
00:17:07,880 --> 00:17:11,689
addresses<font color="#E5E5E5"> that the</font><font color="#CCCCCC"> Moto 68k CPU uses in</font>

488
00:17:10,159 --> 00:17:13,970
response to<font color="#CCCCCC"> certain events</font><font color="#E5E5E5"> for example</font>

489
00:17:11,689 --> 00:17:15,470
<font color="#CCCCCC">when the CPU first gets power it has</font><font color="#E5E5E5"> to</font>

490
00:17:13,970 --> 00:17:17,389
start executing from somewhere right

491
00:17:15,470 --> 00:17:19,039
so<font color="#CCCCCC"> if figures I were to do</font><font color="#E5E5E5"> that by</font>

492
00:17:17,388 --> 00:17:20,629
looking<font color="#CCCCCC"> at memory address</font><font color="#E5E5E5"> for which</font>

493
00:17:19,039 --> 00:17:22,220
holds what is called the reset<font color="#CCCCCC"> vector</font>

494
00:17:20,630 --> 00:17:24,470
because that's for the address to start

495
00:17:22,220 --> 00:17:26,360
executing code<font color="#E5E5E5"> from on reset is stored</font>

496
00:17:24,470 --> 00:17:31,309
so if I look<font color="#E5E5E5"> at that</font><font color="#CCCCCC"> address what I see</font>

497
00:17:26,359 --> 00:17:32,658
is 0 0 0 0 for<font color="#CCCCCC"> T 0 4 ok</font><font color="#E5E5E5"> so if I fire up</font>

498
00:17:31,309 --> 00:17:34,610
<font color="#CCCCCC">a distance number</font><font color="#E5E5E5"> 90 a pro look at</font>

499
00:17:32,659 --> 00:17:36,620
<font color="#E5E5E5">address 4004 and if it's C to start</font>

500
00:17:34,610 --> 00:17:39,860
analyzing code<font color="#E5E5E5"> there I get total garbage</font>

501
00:17:36,620 --> 00:17:41,270
which is strange<font color="#CCCCCC"> for what to do about</font>

502
00:17:39,860 --> 00:17:42,979
<font color="#E5E5E5">that so we start</font><font color="#CCCCCC"> looking for</font><font color="#E5E5E5"> human</font>

503
00:17:41,270 --> 00:17:44,720
<font color="#E5E5E5">readable strings so I do a quick scan</font>

504
00:17:42,980 --> 00:17:46,220
<font color="#E5E5E5">and I find just</font><font color="#CCCCCC"> a couple</font><font color="#E5E5E5"> of strings and</font>

505
00:17:44,720 --> 00:17:47,960
<font color="#E5E5E5">one of them appeared to be a 17</font>

506
00:17:46,220 --> 00:17:49,940
character<font color="#E5E5E5"> VIN number except it's not a</font>

507
00:17:47,960 --> 00:17:51,169
bit<font color="#E5E5E5"> remember the actual VIN number</font><font color="#CCCCCC"> and</font>

508
00:17:49,940 --> 00:17:53,570
this is<font color="#E5E5E5"> just an example</font><font color="#CCCCCC"> it isn't really</font>

509
00:17:51,169 --> 00:17:55,370
my real<font color="#E5E5E5"> number it looks like what's on</font>

510
00:17:53,570 --> 00:17:56,750
the<font color="#CCCCCC"> slide there so I stared at</font><font color="#E5E5E5"> this for</font>

511
00:17:55,370 --> 00:17:58,489
a minute<font color="#CCCCCC"> until I</font><font color="#E5E5E5"> realized that if</font><font color="#CCCCCC"> you</font>

512
00:17:56,750 --> 00:18:00,380
swap every<font color="#E5E5E5"> two characters or bytes in</font>

513
00:17:58,490 --> 00:18:02,360
the<font color="#E5E5E5"> actual event number you see the</font>

514
00:18:00,380 --> 00:18:05,809
resulting string in the file<font color="#E5E5E5"> so it turns</font>

515
00:18:02,360 --> 00:18:07,250
<font color="#E5E5E5">out that the files will</font><font color="#CCCCCC"> jumble</font><font color="#E5E5E5"> up and I</font>

516
00:18:05,809 --> 00:18:08,870
found out<font color="#CCCCCC"> later this</font><font color="#E5E5E5"> is called byte</font>

517
00:18:07,250 --> 00:18:10,340
<font color="#E5E5E5">swabs because every two bytes are</font>

518
00:18:08,870 --> 00:18:11,418
actually swiped that's how they're

519
00:18:10,340 --> 00:18:12,889
<font color="#CCCCCC">actually physically</font><font color="#E5E5E5"> stored on the chip</font>

520
00:18:11,419 --> 00:18:14,570
<font color="#CCCCCC">but</font><font color="#E5E5E5"> that's not what we want we</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to</font>

521
00:18:12,890 --> 00:18:16,970
see how it's actually<font color="#CCCCCC"> being executed by</font>

522
00:18:14,570 --> 00:18:18,168
<font color="#CCCCCC">the processor</font><font color="#E5E5E5"> so we whip up a little</font>

523
00:18:16,970 --> 00:18:19,760
script to swap<font color="#E5E5E5"> every two bytes in the</font>

524
00:18:18,169 --> 00:18:21,470
file and<font color="#E5E5E5"> write it back out and now we</font>

525
00:18:19,760 --> 00:18:23,510
have<font color="#CCCCCC"> the file we really want so if we go</font>

526
00:18:21,470 --> 00:18:26,899
back<font color="#CCCCCC"> to looking</font><font color="#E5E5E5"> at address for we don't</font>

527
00:18:23,510 --> 00:18:28,610
<font color="#E5E5E5">see 4004 we see</font><font color="#CCCCCC"> Oh</font><font color="#E5E5E5"> 440 so if we go there</font>

528
00:18:26,899 --> 00:18:32,270
<font color="#E5E5E5">an ID a pro and start analyzing we see</font>

529
00:18:28,610 --> 00:18:33,740
an<font color="#E5E5E5"> explosion of readable code</font><font color="#CCCCCC"> in fact</font>

530
00:18:32,270 --> 00:18:35,418
you see<font color="#CCCCCC"> a beautiful graphs of</font><font color="#E5E5E5"> how</font>

531
00:18:33,740 --> 00:18:37,340
cleanly this file is assembled it's

532
00:18:35,419 --> 00:18:42,470
almost scary how clean it is which<font color="#CCCCCC"> is a</font>

533
00:18:37,340 --> 00:18:43,699
rare thing<font color="#E5E5E5"> so that's great</font><font color="#CCCCCC"> we have a</font>

534
00:18:42,470 --> 00:18:48,529
complete firmware dump<font color="#E5E5E5"> it disassembles</font>

535
00:18:43,700 --> 00:18:50,029
cleanly<font color="#CCCCCC"> and nadie</font><font color="#E5E5E5"> pro now what we do at</font>

536
00:18:48,529 --> 00:18:51,260
this point this<font color="#E5E5E5"> all just appears</font><font color="#CCCCCC"> as fire</font>

537
00:18:50,029 --> 00:18:53,570
<font color="#E5E5E5">and</font><font color="#CCCCCC"> total kilobytes of pure nonsense</font>

538
00:18:51,260 --> 00:18:56,270
<font color="#CCCCCC">because it would take years to properly</font>

539
00:18:53,570 --> 00:18:58,520
and truly understand all this code so

540
00:18:56,270 --> 00:18:59,899
<font color="#E5E5E5">let's remember our goal which is to</font>

541
00:18:58,520 --> 00:19:01,340
<font color="#CCCCCC">disable the check</font><font color="#E5E5E5"> on whether we've</font>

542
00:18:59,899 --> 00:19:03,379
received<font color="#E5E5E5"> a password or not from the</font>

543
00:19:01,340 --> 00:19:04,760
instrument panel cluster<font color="#E5E5E5"> the problem is</font>

544
00:19:03,380 --> 00:19:06,770
we<font color="#E5E5E5"> have absolutely no</font><font color="#CCCCCC"> idea where and the</font>

545
00:19:04,760 --> 00:19:08,210
firmware<font color="#CCCCCC"> that check is and it doesn't</font>

546
00:19:06,770 --> 00:19:09,408
<font color="#CCCCCC">seem</font><font color="#E5E5E5"> to exist</font><font color="#CCCCCC"> the next as I mentioned</font>

547
00:19:08,210 --> 00:19:12,529
there doesn't seem<font color="#E5E5E5"> to be exist</font><font color="#CCCCCC"> in xdf</font>

548
00:19:09,409 --> 00:19:14,990
file for our<font color="#CCCCCC"> 97 cavalier</font><font color="#E5E5E5"> but and this</font><font color="#CCCCCC"> is</font>

549
00:19:12,529 --> 00:19:17,419
<font color="#E5E5E5">the key</font><font color="#CCCCCC"> maybe one does exist</font><font color="#E5E5E5"> for a</font>

550
00:19:14,990 --> 00:19:18,649
similar<font color="#E5E5E5"> car so if we know the memory</font>

551
00:19:17,419 --> 00:19:20,480
<font color="#CCCCCC">just we want</font><font color="#E5E5E5"> to change in somebody</font>

552
00:19:18,649 --> 00:19:21,949
else's firmware image<font color="#E5E5E5"> maybe</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> will</font>

553
00:19:20,480 --> 00:19:24,830
<font color="#E5E5E5">give</font><font color="#CCCCCC"> us clues to</font><font color="#E5E5E5"> finding the memory</font>

554
00:19:21,950 --> 00:19:26,539
address<font color="#CCCCCC"> in our</font><font color="#E5E5E5"> own image so</font><font color="#CCCCCC"> after doing</font>

555
00:19:24,830 --> 00:19:28,580
lots and lots and<font color="#E5E5E5"> lots and lots</font><font color="#CCCCCC"> of</font>

556
00:19:26,539 --> 00:19:30,260
googling the closest<font color="#E5E5E5"> firmware much I</font>

557
00:19:28,580 --> 00:19:32,949
could find which had a matching<font color="#E5E5E5"> xdf</font><font color="#CCCCCC"> ah</font>

558
00:19:30,260 --> 00:19:36,230
was the 2001<font color="#E5E5E5"> Pontiac trans-am</font>

559
00:19:32,950 --> 00:19:38,480
so if you load up<font color="#E5E5E5"> this firmware image</font><font color="#CCCCCC"> 90</font>

560
00:19:36,230 --> 00:19:40,159
a<font color="#E5E5E5"> pro along with corresponding xdf file</font>

561
00:19:38,480 --> 00:19:42,529
we hopefully can<font color="#CCCCCC"> get it to tell us what</font>

562
00:19:40,159 --> 00:19:44,179
controls this any theft feature<font color="#E5E5E5"> when I</font>

563
00:19:42,529 --> 00:19:46,640
do<font color="#E5E5E5"> I notice the particular setting</font>

564
00:19:44,179 --> 00:19:47,790
called<font color="#E5E5E5"> option byte for</font><font color="#CCCCCC"> C vehicle theft</font>

565
00:19:46,640 --> 00:19:49,890
deterrent which

566
00:19:47,790 --> 00:19:52,620
sounds promising<font color="#CCCCCC"> and it gives me</font><font color="#E5E5E5"> the</font>

567
00:19:49,890 --> 00:19:54,900
memory address of<font color="#CCCCCC"> 185 CC</font><font color="#E5E5E5"> so if I fire up</font>

568
00:19:52,620 --> 00:19:56,280
<font color="#CCCCCC">ID</font><font color="#E5E5E5"> a pro and go against that 2001 panic</font>

569
00:19:54,900 --> 00:19:57,540
Trans Am image and go to<font color="#CCCCCC"> that memory</font>

570
00:19:56,280 --> 00:19:58,830
address<font color="#E5E5E5"> it puts me in</font><font color="#CCCCCC"> the middle of a</font>

571
00:19:57,540 --> 00:20:00,990
<font color="#E5E5E5">bunch of bytes that are</font><font color="#CCCCCC"> referenced all</font>

572
00:19:58,830 --> 00:20:01,980
over the place in the code<font color="#E5E5E5"> it turns out</font>

573
00:20:00,990 --> 00:20:03,750
- this<font color="#E5E5E5"> area is some sort of</font>

574
00:20:01,980 --> 00:20:05,370
configuration area which controls all

575
00:20:03,750 --> 00:20:06,960
<font color="#CCCCCC">the features of the cars computer</font><font color="#E5E5E5"> all</font>

576
00:20:05,370 --> 00:20:08,100
<font color="#E5E5E5">the flags all the things that control</font>

577
00:20:06,960 --> 00:20:10,530
<font color="#E5E5E5">what the firm was going to do are all</font>

578
00:20:08,100 --> 00:20:11,909
stored in there so if I were to<font color="#CCCCCC"> change</font>

579
00:20:10,530 --> 00:20:13,950
that<font color="#CCCCCC"> bite and tuner</font><font color="#E5E5E5"> Pro and save the</font>

580
00:20:11,910 --> 00:20:16,260
<font color="#CCCCCC">firmer</font><font color="#E5E5E5"> it will update</font><font color="#CCCCCC"> two things</font><font color="#E5E5E5"> one</font>

581
00:20:13,950 --> 00:20:18,450
<font color="#E5E5E5">it'll update that option by it at 25</font><font color="#CCCCCC"> CC</font>

582
00:20:16,260 --> 00:20:20,820
<font color="#E5E5E5">and</font><font color="#CCCCCC"> it'll also update a checksum word or</font>

583
00:20:18,450 --> 00:20:23,010
2<font color="#E5E5E5"> bytes that</font><font color="#CCCCCC"> protects the configuration</font>

584
00:20:20,820 --> 00:20:24,300
<font color="#E5E5E5">area from corruption or tampering so to</font>

585
00:20:23,010 --> 00:20:25,890
turn off the<font color="#CCCCCC"> iniative system all we have</font>

586
00:20:24,300 --> 00:20:27,210
to do is flip a bit update<font color="#E5E5E5"> the check</font>

587
00:20:25,890 --> 00:20:32,300
<font color="#CCCCCC">zones</font><font color="#E5E5E5"> right those changes back</font><font color="#CCCCCC"> to the</font>

588
00:20:27,210 --> 00:20:34,920
car<font color="#E5E5E5"> and voila</font><font color="#CCCCCC"> we're done</font><font color="#E5E5E5"> sounds simple</font>

589
00:20:32,300 --> 00:20:36,240
so all we have to<font color="#CCCCCC"> do is find the same</font>

590
00:20:34,920 --> 00:20:40,320
code<font color="#CCCCCC"> that uses</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> byte</font>

591
00:20:36,240 --> 00:20:41,820
I didn't that transitions didn't work I

592
00:20:40,320 --> 00:20:44,040
was<font color="#E5E5E5"> going to show one modified so it's</font>

593
00:20:41,820 --> 00:20:45,480
not refining five designs at all

594
00:20:44,040 --> 00:20:47,100
it's<font color="#E5E5E5"> always</font><font color="#CCCCCC"> who's financing code that</font>

595
00:20:45,480 --> 00:20:49,800
uses<font color="#CCCCCC"> that byte</font><font color="#E5E5E5"> from the 2001 Pontiac</font>

596
00:20:47,100 --> 00:20:52,649
<font color="#E5E5E5">trans-am image in our own 97</font><font color="#CCCCCC"> cavalier</font>

597
00:20:49,800 --> 00:20:53,909
firmware image so the code being

598
00:20:52,650 --> 00:20:55,650
displayed<font color="#CCCCCC"> here is just one of several</font>

599
00:20:53,910 --> 00:20:58,170
<font color="#CCCCCC">places</font><font color="#E5E5E5"> where the any theft flag is used</font>

600
00:20:55,650 --> 00:20:59,370
<font color="#E5E5E5">according to a pro but this code in</font>

601
00:20:58,170 --> 00:21:00,570
particular<font color="#E5E5E5"> in</font><font color="#CCCCCC"> particular is the only</font>

602
00:20:59,370 --> 00:21:02,100
time where there's a small<font color="#E5E5E5"> subroutine</font>

603
00:21:00,570 --> 00:21:03,480
<font color="#CCCCCC">that looks at the value</font><font color="#E5E5E5"> of that flag</font><font color="#CCCCCC"> and</font>

604
00:21:02,100 --> 00:21:06,240
then returns it<font color="#E5E5E5"> to something else and</font>

605
00:21:03,480 --> 00:21:07,740
this<font color="#E5E5E5"> subroutine gets called all over the</font>

606
00:21:06,240 --> 00:21:09,960
place way too many<font color="#E5E5E5"> places to track down</font>

607
00:21:07,740 --> 00:21:12,960
but that just<font color="#E5E5E5"> tells</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> that it's an</font>

608
00:21:09,960 --> 00:21:14,250
important flag<font color="#E5E5E5"> so theoretically now all</font>

609
00:21:12,960 --> 00:21:15,870
we have to<font color="#CCCCCC"> do is</font><font color="#E5E5E5"> find similar looking</font>

610
00:21:14,250 --> 00:21:18,960
code to this and our<font color="#E5E5E5"> own firmware image</font>

611
00:21:15,870 --> 00:21:20,280
and<font color="#E5E5E5"> give me one</font><font color="#CCCCCC"> know what's change</font><font color="#E5E5E5"> so we</font>

612
00:21:18,960 --> 00:21:22,770
simply look<font color="#E5E5E5"> in our own firmware for</font>

613
00:21:20,280 --> 00:21:25,580
these exact instructions<font color="#E5E5E5"> except the</font>

614
00:21:22,770 --> 00:21:30,629
references to that<font color="#E5E5E5"> memory</font><font color="#CCCCCC"> just that</font><font color="#E5E5E5"> FF</font>

615
00:21:25,580 --> 00:21:33,179
ba v5 and see if we can find<font color="#E5E5E5"> it</font><font color="#CCCCCC"> and did</font>

616
00:21:30,630 --> 00:21:34,800
we find it<font color="#E5E5E5"> no so</font>

617
00:21:33,180 --> 00:21:36,180
of<font color="#E5E5E5"> course that's a really simplistic</font>

618
00:21:34,800 --> 00:21:38,159
check so let's<font color="#CCCCCC"> try to be a little bit</font>

619
00:21:36,180 --> 00:21:40,050
smarter let's look for any comparison<font color="#E5E5E5"> to</font>

620
00:21:38,160 --> 00:21:42,390
bit<font color="#CCCCCC"> 2 of a particular bike anywhere</font>

621
00:21:40,050 --> 00:21:45,210
<font color="#CCCCCC">anything did we find it no of course not</font>

622
00:21:42,390 --> 00:21:46,830
so we look for the just those SME<font color="#CCCCCC"> and</font>

623
00:21:45,210 --> 00:21:48,390
neg instructions against<font color="#E5E5E5"> register D 0</font>

624
00:21:46,830 --> 00:21:49,230
<font color="#E5E5E5">and then handy anytime where that's</font>

625
00:21:48,390 --> 00:21:51,660
happening<font color="#E5E5E5"> and being handed with</font>

626
00:21:49,230 --> 00:21:53,790
something<font color="#E5E5E5"> else do we find it</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> so let's</font>

627
00:21:51,660 --> 00:21:55,680
look<font color="#E5E5E5"> for those instructions next</font><font color="#CCCCCC"> to each</font>

628
00:21:53,790 --> 00:21:58,460
<font color="#E5E5E5">other anywhere in the firmware image do</font>

629
00:21:55,680 --> 00:22:00,110
we find it no so

630
00:21:58,460 --> 00:22:01,130
there are plenty<font color="#E5E5E5"> of</font><font color="#CCCCCC"> eeeh</font><font color="#E5E5E5"> Slee there are</font>

631
00:22:00,110 --> 00:22:02,449
plenty<font color="#E5E5E5"> of reasons</font><font color="#CCCCCC"> why the code would be</font>

632
00:22:01,130 --> 00:22:03,680
a little<font color="#CCCCCC"> different you've got compiler</font>

633
00:22:02,450 --> 00:22:05,900
optimizations<font color="#E5E5E5"> and all kinds of things</font>

634
00:22:03,680 --> 00:22:09,950
that's<font color="#E5E5E5"> fine we just</font><font color="#CCCCCC"> have to get more</font>

635
00:22:05,900 --> 00:22:11,330
<font color="#E5E5E5">creative</font><font color="#CCCCCC"> I thought it would be</font><font color="#E5E5E5"> really</font>

636
00:22:09,950 --> 00:22:12,800
<font color="#E5E5E5">simple to simply look</font><font color="#CCCCCC"> for the same or</font>

637
00:22:11,330 --> 00:22:14,000
similar code pattern in our own<font color="#CCCCCC"> form or</font>

638
00:22:12,800 --> 00:22:16,370
<font color="#E5E5E5">inventions we'd have no</font><font color="#CCCCCC"> trouble finding</font>

639
00:22:14,000 --> 00:22:18,500
<font color="#E5E5E5">it but apparently not</font><font color="#CCCCCC"> so that begs the</font>

640
00:22:16,370 --> 00:22:19,939
question these tuner<font color="#E5E5E5"> Pro xdf definition</font>

641
00:22:18,500 --> 00:22:22,070
files have<font color="#E5E5E5"> to get created by</font><font color="#CCCCCC"> somebody</font>

642
00:22:19,940 --> 00:22:23,720
right so how do they find all these

643
00:22:22,070 --> 00:22:25,490
memory addresses that<font color="#E5E5E5"> they're interested</font>

644
00:22:23,720 --> 00:22:28,220
<font color="#E5E5E5">in so they can build these xdf files</font>

645
00:22:25,490 --> 00:22:29,990
<font color="#E5E5E5">well according to the foreign posts I</font>

646
00:22:28,220 --> 00:22:31,850
found they look for a particular<font color="#CCCCCC"> piece</font>

647
00:22:29,990 --> 00:22:33,110
<font color="#CCCCCC">of functionality</font><font color="#E5E5E5"> and firmware</font><font color="#CCCCCC"> and this</font>

648
00:22:31,850 --> 00:22:35,179
functionality<font color="#E5E5E5"> they look for is the code</font>

649
00:22:33,110 --> 00:22:37,459
that<font color="#E5E5E5"> handles all</font><font color="#CCCCCC"> the scan tool requests</font>

650
00:22:35,180 --> 00:22:40,430
<font color="#E5E5E5">and</font><font color="#CCCCCC"> schedules just</font><font color="#E5E5E5"> another name</font><font color="#CCCCCC"> for an</font>

651
00:22:37,460 --> 00:22:41,960
<font color="#CCCCCC">obd2</font><font color="#E5E5E5"> code reader which is the device you</font>

652
00:22:40,430 --> 00:22:43,430
plug<font color="#E5E5E5"> into the port</font><font color="#CCCCCC"> under your</font><font color="#E5E5E5"> steering</font>

653
00:22:41,960 --> 00:22:47,620
wheel<font color="#E5E5E5"> and</font><font color="#CCCCCC"> read diagnostic codes one of</font>

654
00:22:43,430 --> 00:22:49,790
your check<font color="#CCCCCC"> engine</font><font color="#E5E5E5"> lights on</font><font color="#CCCCCC"> so the</font>

655
00:22:47,620 --> 00:22:51,320
computer<font color="#E5E5E5"> here the PCM here it's what's</font>

656
00:22:49,790 --> 00:22:53,240
<font color="#CCCCCC">responsible for receiving the commands</font>

657
00:22:51,320 --> 00:22:54,710
<font color="#E5E5E5">from that code reader device</font><font color="#CCCCCC"> it it</font>

658
00:22:53,240 --> 00:22:57,530
generates<font color="#CCCCCC"> a response and then sends it</font>

659
00:22:54,710 --> 00:22:59,780
<font color="#CCCCCC">back over the obdd du port</font><font color="#E5E5E5"> to your code</font>

660
00:22:57,530 --> 00:23:01,580
reader tool so<font color="#E5E5E5"> that means it's somewhere</font>

661
00:22:59,780 --> 00:23:04,040
in this<font color="#E5E5E5"> five</font><font color="#CCCCCC"> or enfold kilobyte mess is</font>

662
00:23:01,580 --> 00:23:06,020
all<font color="#E5E5E5"> the code handles all these requests</font>

663
00:23:04,040 --> 00:23:07,820
<font color="#E5E5E5">and</font><font color="#CCCCCC"> more importantly these tools are</font>

664
00:23:06,020 --> 00:23:08,990
capable you know as I said receiving

665
00:23:07,820 --> 00:23:10,669
boards as those codes they can upload

666
00:23:08,990 --> 00:23:12,800
and<font color="#E5E5E5"> download firmware but they can also</font>

667
00:23:10,670 --> 00:23:14,450
retrieve all sorts of<font color="#E5E5E5"> real-time engine</font>

668
00:23:12,800 --> 00:23:15,980
information telling<font color="#E5E5E5"> you exactly what the</font>

669
00:23:14,450 --> 00:23:19,610
computer is<font color="#E5E5E5"> doing and how well it's</font>

670
00:23:15,980 --> 00:23:21,980
doing it and<font color="#E5E5E5"> most importantly it</font><font color="#CCCCCC"> also</font>

671
00:23:19,610 --> 00:23:23,990
can return the anti-theft system status

672
00:23:21,980 --> 00:23:25,520
and in order for<font color="#CCCCCC"> us to do</font><font color="#E5E5E5"> that it has to</font>

673
00:23:23,990 --> 00:23:27,620
<font color="#E5E5E5">look at our options</font><font color="#CCCCCC"> flag to determine</font>

674
00:23:25,520 --> 00:23:29,000
whether<font color="#E5E5E5"> it's even enabled so that means</font>

675
00:23:27,620 --> 00:23:30,860
if<font color="#E5E5E5"> we can understand this obd2</font>

676
00:23:29,000 --> 00:23:33,320
communication code we can find our<font color="#E5E5E5"> way</font>

677
00:23:30,860 --> 00:23:35,330
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the option flag in the 2001 Pontiac</font>

678
00:23:33,320 --> 00:23:37,520
trans-am<font color="#E5E5E5"> firmware</font><font color="#CCCCCC"> and if we can navigate</font>

679
00:23:35,330 --> 00:23:39,260
our way to the flag from<font color="#E5E5E5"> there then we</font>

680
00:23:37,520 --> 00:23:43,100
can<font color="#E5E5E5"> just apply</font><font color="#CCCCCC"> that same logic to our</font>

681
00:23:39,260 --> 00:23:44,300
firmware<font color="#E5E5E5"> and then find it that way so</font>

682
00:23:43,100 --> 00:23:48,139
how do we<font color="#E5E5E5"> find the code to</font><font color="#CCCCCC"> handle these</font>

683
00:23:44,300 --> 00:23:51,440
<font color="#E5E5E5">requests</font><font color="#CCCCCC"> well if we consult</font><font color="#E5E5E5"> our PCM</font>

684
00:23:48,140 --> 00:23:52,790
hacking 101 guide<font color="#E5E5E5"> we start by looking</font>

685
00:23:51,440 --> 00:23:55,610
<font color="#CCCCCC">for the code that actually interacts</font>

686
00:23:52,790 --> 00:23:58,330
with<font color="#E5E5E5"> the obd2 port so how does the</font>

687
00:23:55,610 --> 00:23:58,330
<font color="#CCCCCC">motorola 60th</font>

688
00:23:58,700 --> 00:24:04,190
the<font color="#CCCCCC"> youth with that obd2</font><font color="#E5E5E5"> port or any</font>

689
00:24:01,130 --> 00:24:06,260
<font color="#E5E5E5">hardware</font><font color="#CCCCCC"> it uses something</font><font color="#E5E5E5"> called memory</font>

690
00:24:04,190 --> 00:24:08,000
mapped i/o which is that<font color="#E5E5E5"> basically means</font>

691
00:24:06,260 --> 00:24:09,500
that<font color="#E5E5E5"> the hardware is wired in such a way</font>

692
00:24:08,000 --> 00:24:10,860
that<font color="#E5E5E5"> when you read from a right to a</font>

693
00:24:09,500 --> 00:24:12,299
<font color="#CCCCCC">particular memory</font><font color="#E5E5E5"> address you</font>

694
00:24:10,860 --> 00:24:15,360
<font color="#E5E5E5">accessing bytes in the firmware on</font><font color="#CCCCCC"> the</font>

695
00:24:12,299 --> 00:24:18,090
<font color="#CCCCCC">+4 in RAM you're manipulating actual</font>

696
00:24:15,360 --> 00:24:19,590
<font color="#CCCCCC">hardware so</font><font color="#E5E5E5"> now in any given</font><font color="#CCCCCC"> device</font>

697
00:24:18,090 --> 00:24:21,360
there is<font color="#E5E5E5"> usually a range of address</font>

698
00:24:19,590 --> 00:24:23,760
space dedicated<font color="#E5E5E5"> just interacting with</font>

699
00:24:21,360 --> 00:24:25,740
<font color="#CCCCCC">Hardware</font><font color="#E5E5E5"> not always but</font><font color="#CCCCCC"> usually</font><font color="#E5E5E5"> and we</font>

700
00:24:23,760 --> 00:24:27,720
know it<font color="#E5E5E5"> has to</font><font color="#CCCCCC"> be outside the range of</font>

701
00:24:25,740 --> 00:24:28,950
<font color="#E5E5E5">where the firmware exists and we know it</font>

702
00:24:27,720 --> 00:24:30,900
<font color="#E5E5E5">has to</font><font color="#CCCCCC"> be outside the range where</font><font color="#E5E5E5"> the</font>

703
00:24:28,950 --> 00:24:32,549
<font color="#CCCCCC">RAM exists</font><font color="#E5E5E5"> now we know how big the</font>

704
00:24:30,900 --> 00:24:34,260
firmware<font color="#E5E5E5"> is and since</font><font color="#CCCCCC"> we disassembled so</font>

705
00:24:32,549 --> 00:24:35,220
cleanly<font color="#CCCCCC"> we know it starts</font><font color="#E5E5E5"> out at address</font>

706
00:24:34,260 --> 00:24:36,870
<font color="#CCCCCC">0 but that's where we started</font>

707
00:24:35,220 --> 00:24:38,549
disassembling it<font color="#E5E5E5"> so that means the</font>

708
00:24:36,870 --> 00:24:41,340
firmware goes from address 0 all the way

709
00:24:38,549 --> 00:24:42,690
<font color="#CCCCCC">up</font><font color="#E5E5E5"> to 7 ffff and we also know from</font>

710
00:24:41,340 --> 00:24:45,540
<font color="#E5E5E5">poking around in the disassembly</font><font color="#CCCCCC"> that</font>

711
00:24:42,690 --> 00:24:46,650
the<font color="#E5E5E5"> RAM starts at FF</font><font color="#CCCCCC"> zeroes</font><font color="#E5E5E5"> or 0 but we</font>

712
00:24:45,540 --> 00:24:48,230
don't know how big<font color="#CCCCCC"> it is or</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> don't</font>

713
00:24:46,650 --> 00:24:51,390
<font color="#E5E5E5">know where it is</font>

714
00:24:48,230 --> 00:24:53,400
<font color="#E5E5E5">now</font><font color="#CCCCCC"> this is kind</font><font color="#E5E5E5"> of nutty but I was in a</font>

715
00:24:51,390 --> 00:24:55,350
<font color="#E5E5E5">hurry so basically what you can do is</font>

716
00:24:53,400 --> 00:24:57,240
just<font color="#E5E5E5"> use ID a pro to export ASM file</font>

717
00:24:55,350 --> 00:24:57,510
which<font color="#CCCCCC"> contains all</font><font color="#E5E5E5"> the all the code</font><font color="#CCCCCC"> for</font>

718
00:24:57,240 --> 00:24:59,190
<font color="#E5E5E5">it</font>

719
00:24:57,510 --> 00:25:00,990
all the instructions<font color="#E5E5E5"> decoded and then</font>

720
00:24:59,190 --> 00:25:02,610
use regular expressions<font color="#CCCCCC"> to rip out the</font>

721
00:25:00,990 --> 00:25:04,320
memory address is accessed by certain

722
00:25:02,610 --> 00:25:06,080
instructions and to just sort that list

723
00:25:04,320 --> 00:25:08,549
of memory addresses which will tell<font color="#E5E5E5"> us</font>

724
00:25:06,080 --> 00:25:10,168
every memory address to<font color="#E5E5E5"> get access</font><font color="#CCCCCC"> in</font>

725
00:25:08,549 --> 00:25:12,299
<font color="#E5E5E5">this firmware</font><font color="#CCCCCC"> maybe not everything</font><font color="#E5E5E5"> but</font>

726
00:25:10,169 --> 00:25:14,130
the vast majority<font color="#CCCCCC"> of it so when we</font><font color="#E5E5E5"> do</font>

727
00:25:12,299 --> 00:25:15,690
<font color="#E5E5E5">that we</font><font color="#CCCCCC"> discover</font><font color="#E5E5E5"> that Ram axes accesses</font>

728
00:25:14,130 --> 00:25:17,850
only go<font color="#CCCCCC"> up</font><font color="#E5E5E5"> to a certain</font><font color="#CCCCCC"> point and then</font>

729
00:25:15,690 --> 00:25:20,220
things start getting<font color="#E5E5E5"> weird so we start</font>

730
00:25:17,850 --> 00:25:23,370
we start looking at<font color="#E5E5E5"> memory at the value</font>

731
00:25:20,220 --> 00:25:25,080
<font color="#CCCCCC">that the memory dresses beyond that we</font>

732
00:25:23,370 --> 00:25:26,639
start seeing<font color="#E5E5E5"> loops on the value</font>

733
00:25:25,080 --> 00:25:28,290
contained<font color="#E5E5E5"> at those certain memory</font>

734
00:25:26,640 --> 00:25:29,580
addresses which you know it wouldn't

735
00:25:28,290 --> 00:25:32,010
<font color="#CCCCCC">make sense to keep</font><font color="#E5E5E5"> reading the same area</font>

736
00:25:29,580 --> 00:25:34,139
over<font color="#CCCCCC"> and over</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> a loop unless expecting</font>

737
00:25:32,010 --> 00:25:35,730
something<font color="#CCCCCC"> to</font><font color="#E5E5E5"> change unless that address</font>

738
00:25:34,140 --> 00:25:38,190
represents a piece of<font color="#E5E5E5"> hardware</font><font color="#CCCCCC"> that can</font>

739
00:25:35,730 --> 00:25:39,390
change externally<font color="#E5E5E5"> so when you see code</font>

740
00:25:38,190 --> 00:25:42,450
<font color="#E5E5E5">like</font><font color="#CCCCCC"> that you know you're dealing with</font>

741
00:25:39,390 --> 00:25:43,799
memory<font color="#E5E5E5"> mapped i/o so we don't have a</font>

742
00:25:42,450 --> 00:25:45,510
complete<font color="#E5E5E5"> memory map just yet but we</font><font color="#CCCCCC"> know</font>

743
00:25:43,799 --> 00:25:49,470
<font color="#E5E5E5">where</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> hardware accesses are likely</font>

744
00:25:45,510 --> 00:25:50,850
to be so consulting our<font color="#CCCCCC"> forum</font><font color="#E5E5E5"> guys again</font>

745
00:25:49,470 --> 00:25:52,590
we learned<font color="#E5E5E5"> that one of these chips on</font>

746
00:25:50,850 --> 00:25:55,168
the<font color="#E5E5E5"> PCM circuit board is</font><font color="#CCCCCC"> responsible for</font>

747
00:25:52,590 --> 00:25:56,909
<font color="#E5E5E5">handling</font><font color="#CCCCCC"> all the obd2</font><font color="#E5E5E5"> port communication</font>

748
00:25:55,169 --> 00:25:58,650
<font color="#CCCCCC">and by that I don't mean it generates</font>

749
00:25:56,910 --> 00:26:00,510
the request or<font color="#CCCCCC"> the responses I mean it</font>

750
00:25:58,650 --> 00:26:02,880
deals with<font color="#E5E5E5"> the work of interpreting the</font>

751
00:26:00,510 --> 00:26:04,860
raw signals from the obd2<font color="#E5E5E5"> port spins and</font>

752
00:26:02,880 --> 00:26:06,150
translating that<font color="#E5E5E5"> into a series of bytes</font>

753
00:26:04,860 --> 00:26:07,530
going back and forth<font color="#E5E5E5"> between the</font>

754
00:26:06,150 --> 00:26:10,710
<font color="#CCCCCC">firmware and</font><font color="#E5E5E5"> whatever device you have</font>

755
00:26:07,530 --> 00:26:12,120
<font color="#E5E5E5">plugged in to the ot2 port so all it</font>

756
00:26:10,710 --> 00:26:13,559
does is<font color="#E5E5E5"> till the firmware</font><font color="#CCCCCC"> Hey something</font>

757
00:26:12,120 --> 00:26:14,969
sent<font color="#CCCCCC"> 5 bytes to us here they are just</font>

758
00:26:13,559 --> 00:26:17,220
<font color="#CCCCCC">tell me what you want</font><font color="#E5E5E5"> me to send back</font>

759
00:26:14,970 --> 00:26:18,540
and the firmware deals with the logic of

760
00:26:17,220 --> 00:26:21,600
<font color="#E5E5E5">actually figuring out what those bytes</font>

761
00:26:18,540 --> 00:26:23,960
will be and this shift<font color="#CCCCCC"> has a name it's</font>

762
00:26:21,600 --> 00:26:26,178
called the<font color="#E5E5E5"> MC 68 HD 58</font>

763
00:26:23,960 --> 00:26:27,889
<font color="#E5E5E5">data-link controller and lucky for us</font>

764
00:26:26,179 --> 00:26:29,299
there<font color="#CCCCCC"> is documentation</font><font color="#E5E5E5"> out there on the</font>

765
00:26:27,889 --> 00:26:31,729
internet<font color="#CCCCCC"> for</font><font color="#E5E5E5"> us to look at about this</font>

766
00:26:29,299 --> 00:26:33,168
chip it's fairly<font color="#E5E5E5"> comprehensive</font>

767
00:26:31,730 --> 00:26:34,340
<font color="#E5E5E5">occupation about anything and everything</font>

768
00:26:33,169 --> 00:26:36,409
<font color="#CCCCCC">you ever wanted to know</font><font color="#E5E5E5"> about how to</font>

769
00:26:34,340 --> 00:26:37,399
interact with this controller<font color="#CCCCCC"> and it</font>

770
00:26:36,409 --> 00:26:39,679
even tells<font color="#E5E5E5"> us the hardware registers</font>

771
00:26:37,399 --> 00:26:41,059
meaning<font color="#E5E5E5"> the memory mapped i/o that the</font>

772
00:26:39,679 --> 00:26:42,619
firmware uses to<font color="#CCCCCC"> communicate with it</font>

773
00:26:41,059 --> 00:26:44,059
<font color="#E5E5E5">tells us everything but the actual</font>

774
00:26:42,619 --> 00:26:45,470
number<font color="#E5E5E5"> the actual</font><font color="#CCCCCC"> memory</font><font color="#E5E5E5"> address that</font>

775
00:26:44,059 --> 00:26:46,820
the firmware is using to interact with

776
00:26:45,470 --> 00:26:49,220
<font color="#CCCCCC">it</font><font color="#E5E5E5"> which is going to be up</font><font color="#CCCCCC"> to us</font><font color="#E5E5E5"> to</font>

777
00:26:46,820 --> 00:26:50,570
<font color="#CCCCCC">figure</font><font color="#E5E5E5"> out so after you printing out</font>

778
00:26:49,220 --> 00:26:52,490
that documentation<font color="#E5E5E5"> for the chip and some</font>

779
00:26:50,570 --> 00:26:54,619
<font color="#E5E5E5">sleepless nights reading it I figured</font>

780
00:26:52,490 --> 00:26:55,970
out<font color="#E5E5E5"> that some bytes in</font><font color="#CCCCCC"> the firmware must</font>

781
00:26:54,619 --> 00:26:58,220
be writing<font color="#CCCCCC"> to certain registers</font>

782
00:26:55,970 --> 00:26:59,539
otherwise<font color="#E5E5E5"> the chip can work the chip has</font>

783
00:26:58,220 --> 00:27:01,279
<font color="#CCCCCC">to be initialized by writing certain</font>

784
00:26:59,539 --> 00:27:03,080
values to it<font color="#E5E5E5"> so that has to exist</font>

785
00:27:01,279 --> 00:27:04,850
<font color="#E5E5E5">somewhere in the firmware so I started</font>

786
00:27:03,080 --> 00:27:06,080
hunting<font color="#E5E5E5"> down where these rights were in</font>

787
00:27:04,850 --> 00:27:09,619
<font color="#E5E5E5">the firmware and sure enough I</font><font color="#CCCCCC"> found</font>

788
00:27:06,080 --> 00:27:11,749
them starting at address FFF 6 0 0<font color="#E5E5E5"> so</font>

789
00:27:09,619 --> 00:27:13,189
that<font color="#CCCCCC"> is the start of</font><font color="#E5E5E5"> the range that</font><font color="#CCCCCC"> you</font>

790
00:27:11,749 --> 00:27:18,080
can read from and write<font color="#E5E5E5"> to to manipulate</font>

791
00:27:13,190 --> 00:27:19,429
the<font color="#E5E5E5"> data</font><font color="#CCCCCC"> link controller chip so now</font>

792
00:27:18,080 --> 00:27:21,649
that we found the code<font color="#E5E5E5"> that receives a</font>

793
00:27:19,429 --> 00:27:22,909
command<font color="#CCCCCC"> I always look for references to</font>

794
00:27:21,649 --> 00:27:24,049
that<font color="#CCCCCC"> address by the</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> we'll find code</font>

795
00:27:22,909 --> 00:27:25,220
that<font color="#E5E5E5"> deals with it so now that</font><font color="#CCCCCC"> we've</font>

796
00:27:24,049 --> 00:27:26,899
found the<font color="#E5E5E5"> code that receives the command</font>

797
00:27:25,220 --> 00:27:28,549
<font color="#E5E5E5">from</font><font color="#CCCCCC"> and obd2 code reader it should be</font>

798
00:27:26,899 --> 00:27:30,678
really<font color="#CCCCCC"> easy to read</font><font color="#E5E5E5"> the disassembly and</font>

799
00:27:28,549 --> 00:27:35,360
get from there<font color="#E5E5E5"> to the code that</font><font color="#CCCCCC"> accesses</font>

800
00:27:30,679 --> 00:27:36,590
our options like well<font color="#CCCCCC"> know</font><font color="#E5E5E5"> according to</font>

801
00:27:35,360 --> 00:27:38,840
<font color="#CCCCCC">our forum</font><font color="#E5E5E5"> guide apparently it</font><font color="#CCCCCC"> isn't that</font>

802
00:27:36,590 --> 00:27:40,580
simple<font color="#E5E5E5"> the firmware actually buffers</font>

803
00:27:38,840 --> 00:27:42,709
these requests<font color="#E5E5E5"> and RAM and then it DQ's</font>

804
00:27:40,580 --> 00:27:44,689
them from that buffer later on when it's

805
00:27:42,710 --> 00:27:46,249
able<font color="#E5E5E5"> to get to it and then after it's</font>

806
00:27:44,690 --> 00:27:48,769
acted on that<font color="#E5E5E5"> request and calculated a</font>

807
00:27:46,249 --> 00:27:49,850
response for<font color="#CCCCCC"> it</font><font color="#E5E5E5"> it buffers that for</font>

808
00:27:48,769 --> 00:27:51,889
whenever<font color="#E5E5E5"> the firmware is able to get</font>

809
00:27:49,850 --> 00:27:54,080
<font color="#CCCCCC">around to</font><font color="#E5E5E5"> sending it back to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> device</font>

810
00:27:51,889 --> 00:27:55,490
it's plugged into<font color="#E5E5E5"> the obd2 port so</font>

811
00:27:54,080 --> 00:27:56,928
basically you<font color="#E5E5E5"> have something of a kind</font>

812
00:27:55,490 --> 00:27:57,320
<font color="#CCCCCC">of a</font><font color="#E5E5E5"> multi-threaded environment going on</font>

813
00:27:56,929 --> 00:28:00,049
here

814
00:27:57,320 --> 00:28:01,460
for lack of a<font color="#CCCCCC"> better term</font><font color="#E5E5E5"> which makes</font>

815
00:28:00,049 --> 00:28:02,658
<font color="#CCCCCC">perfect sense I mean</font><font color="#E5E5E5"> the computer has to</font>

816
00:28:01,460 --> 00:28:03,950
focus<font color="#E5E5E5"> on</font><font color="#CCCCCC"> keeping</font><font color="#E5E5E5"> the engine running</font>

817
00:28:02,659 --> 00:28:05,389
<font color="#E5E5E5">smoothly you can't get tied up</font><font color="#CCCCCC"> with</font>

818
00:28:03,950 --> 00:28:06,649
requests on how well the<font color="#E5E5E5"> engine is</font>

819
00:28:05,389 --> 00:28:07,070
performing it's got to<font color="#CCCCCC"> focus on the</font>

820
00:28:06,649 --> 00:28:09,139
engine

821
00:28:07,070 --> 00:28:10,580
so it makes<font color="#CCCCCC"> sense but that makes it a</font>

822
00:28:09,139 --> 00:28:12,979
freaking nightmare<font color="#E5E5E5"> to try and</font>

823
00:28:10,580 --> 00:28:14,570
disassemble<font color="#E5E5E5"> you just can't I mean the</font>

824
00:28:12,980 --> 00:28:16,309
forum<font color="#CCCCCC"> guide does its best to explain</font><font color="#E5E5E5"> it</font>

825
00:28:14,570 --> 00:28:17,779
<font color="#E5E5E5">but unfortunately</font><font color="#CCCCCC"> it's information</font>

826
00:28:16,309 --> 00:28:19,789
<font color="#E5E5E5">doesn't apply a hundred percent</font><font color="#CCCCCC"> to our</font>

827
00:28:17,779 --> 00:28:21,169
firmware<font color="#E5E5E5"> and it's just too difficult to</font>

828
00:28:19,789 --> 00:28:23,509
extrapolate what<font color="#E5E5E5"> we need in order to</font>

829
00:28:21,169 --> 00:28:24,950
<font color="#E5E5E5">find it so it's</font><font color="#CCCCCC"> just too darn</font>

830
00:28:23,509 --> 00:28:27,850
complicated<font color="#CCCCCC"> to disassemble and get</font>

831
00:28:24,950 --> 00:28:30,440
anywhere so<font color="#CCCCCC"> we're just</font><font color="#E5E5E5"> screwed all right</font>

832
00:28:27,850 --> 00:28:31,469
well<font color="#CCCCCC"> your</font><font color="#E5E5E5"> growth starts getting</font><font color="#CCCCCC"> really</font>

833
00:28:30,440 --> 00:28:32,880
nutty

834
00:28:31,470 --> 00:28:34,140
<font color="#E5E5E5">if</font><font color="#CCCCCC"> heat by</font><font color="#E5E5E5"> the way if you read the</font>

835
00:28:32,880 --> 00:28:36,200
abstract for this talk<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is a</font>

836
00:28:34,140 --> 00:28:41,730
reference to descending into madness

837
00:28:36,200 --> 00:28:43,140
<font color="#CCCCCC">welcome to the madness</font><font color="#E5E5E5"> if we can't read</font>

838
00:28:41,730 --> 00:28:45,270
the<font color="#E5E5E5"> disassembly of the code and</font>

839
00:28:43,140 --> 00:28:47,940
understand it then<font color="#E5E5E5"> our only option is</font><font color="#CCCCCC"> to</font>

840
00:28:45,270 --> 00:28:50,790
execute<font color="#E5E5E5"> and debug it so how in the world</font>

841
00:28:47,940 --> 00:28:52,680
do<font color="#E5E5E5"> we do that apparently there are</font>

842
00:28:50,790 --> 00:28:54,629
people out there<font color="#E5E5E5"> that</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> do this</font>

843
00:28:52,680 --> 00:28:56,010
they pull the PCM out of the car and put

844
00:28:54,630 --> 00:28:57,780
it on a workbench<font color="#E5E5E5"> and attach a bunch of</font>

845
00:28:56,010 --> 00:29:00,030
<font color="#CCCCCC">equipment to it and debug the code in</font>

846
00:28:57,780 --> 00:29:01,740
real time to see what it's doing<font color="#CCCCCC"> but I</font>

847
00:29:00,030 --> 00:29:03,420
<font color="#E5E5E5">have absolutely no clue how to do that</font><font color="#CCCCCC"> I</font>

848
00:29:01,740 --> 00:29:05,340
mean we don't<font color="#CCCCCC"> have</font><font color="#E5E5E5"> the pin outs for the</font>

849
00:29:03,420 --> 00:29:06,510
PCM<font color="#E5E5E5"> so even if we did know</font><font color="#CCCCCC"> what we were</font>

850
00:29:05,340 --> 00:29:09,330
doing we wouldn't know how<font color="#CCCCCC"> to interface</font>

851
00:29:06,510 --> 00:29:10,379
<font color="#CCCCCC">with this specific PCM</font><font color="#E5E5E5"> so we don't know</font>

852
00:29:09,330 --> 00:29:11,730
<font color="#E5E5E5">anything about the hardware we don't</font>

853
00:29:10,380 --> 00:29:13,140
know<font color="#E5E5E5"> anything about the software all we</font>

854
00:29:11,730 --> 00:29:15,990
know is the<font color="#E5E5E5"> CPU</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> running in the</font>

855
00:29:13,140 --> 00:29:17,430
basics<font color="#E5E5E5"> of a memory map for it well</font>

856
00:29:15,990 --> 00:29:20,910
that's one thing we do<font color="#E5E5E5"> have going for it</font>

857
00:29:17,430 --> 00:29:22,920
is at least an extremely similar<font color="#CCCCCC"> if it's</font>

858
00:29:20,910 --> 00:29:23,940
a CPU extremely similar to<font color="#CCCCCC"> others</font><font color="#E5E5E5"> with</font>

859
00:29:22,920 --> 00:29:25,590
other<font color="#E5E5E5"> well-known ones which is</font>

860
00:29:23,940 --> 00:29:27,570
<font color="#E5E5E5">guaranteed</font><font color="#CCCCCC"> to have</font><font color="#E5E5E5"> dozens of emulators</font>

861
00:29:25,590 --> 00:29:30,659
<font color="#E5E5E5">out there for it for Sega Genesis and</font>

862
00:29:27,570 --> 00:29:32,669
other things so all we<font color="#E5E5E5"> need the firmware</font>

863
00:29:30,660 --> 00:29:34,050
to do is just is boot just well<font color="#CCCCCC"> enough</font>

864
00:29:32,670 --> 00:29:35,670
that we can send<font color="#E5E5E5"> these scam tool</font>

865
00:29:34,050 --> 00:29:37,860
requests to it and see what<font color="#E5E5E5"> code gets</font>

866
00:29:35,670 --> 00:29:38,970
executed when we do that it<font color="#E5E5E5"> doesn't</font>

867
00:29:37,860 --> 00:29:40,649
actually have<font color="#CCCCCC"> to keep an engine running</font>

868
00:29:38,970 --> 00:29:42,240
<font color="#CCCCCC">we just need to see how</font><font color="#E5E5E5"> to get from</font>

869
00:29:40,650 --> 00:29:44,160
<font color="#CCCCCC">point A which is the data link control</font>

870
00:29:42,240 --> 00:29:46,800
<font color="#E5E5E5">our code to point B which is the memory</font>

871
00:29:44,160 --> 00:29:49,170
<font color="#E5E5E5">access of</font><font color="#CCCCCC"> that option flag</font><font color="#E5E5E5"> so this is an</font>

872
00:29:46,800 --> 00:29:52,860
<font color="#E5E5E5">absolutely insane idea which is of</font>

873
00:29:49,170 --> 00:29:54,120
course<font color="#CCCCCC"> why we're</font><font color="#E5E5E5"> going to do it so if</font>

874
00:29:52,860 --> 00:29:55,050
we're<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to seriously consider this</font>

875
00:29:54,120 --> 00:29:56,879
<font color="#E5E5E5">we have to think</font><font color="#CCCCCC"> about what language</font>

876
00:29:55,050 --> 00:29:59,490
<font color="#CCCCCC">you're going to do this in now I think</font>

877
00:29:56,880 --> 00:30:01,650
<font color="#E5E5E5">live breeze and dream c-sharp for my day</font>

878
00:29:59,490 --> 00:30:03,120
<font color="#E5E5E5">job</font><font color="#CCCCCC"> so that is firmly ingrained into</font><font color="#E5E5E5"> my</font>

879
00:30:01,650 --> 00:30:04,440
brain<font color="#E5E5E5"> so if we really going to do this</font>

880
00:30:03,120 --> 00:30:06,270
<font color="#E5E5E5">I'm going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have to hack the crap out</font>

881
00:30:04,440 --> 00:30:07,650
<font color="#CCCCCC">of an existing emulator</font><font color="#E5E5E5"> I need to be</font>

882
00:30:06,270 --> 00:30:09,600
able to gut<font color="#CCCCCC"> hardware</font><font color="#E5E5E5"> access code to</font><font color="#CCCCCC"> be</font>

883
00:30:07,650 --> 00:30:10,830
<font color="#E5E5E5">able to add it</font><font color="#CCCCCC"> right back and to gut it</font>

884
00:30:09,600 --> 00:30:12,600
<font color="#E5E5E5">again and add it back with great</font>

885
00:30:10,830 --> 00:30:14,490
efficiency<font color="#CCCCCC"> I need to I need to be able</font>

886
00:30:12,600 --> 00:30:19,500
<font color="#CCCCCC">to</font><font color="#E5E5E5"> it quickly</font><font color="#CCCCCC"> so what I want</font><font color="#E5E5E5"> to do is</font>

887
00:30:14,490 --> 00:30:21,210
find a motorola 68000<font color="#CCCCCC"> and you'd</font><font color="#E5E5E5"> think</font>

888
00:30:19,500 --> 00:30:22,820
<font color="#E5E5E5">that wouldn't exist but believe it or</font>

889
00:30:21,210 --> 00:30:26,190
not thank goodness it<font color="#E5E5E5"> actually does</font>

890
00:30:22,820 --> 00:30:28,590
there<font color="#E5E5E5"> is actually an old</font><font color="#CCCCCC"> a Capcom arcade</font>

891
00:30:26,190 --> 00:30:29,700
system called<font color="#E5E5E5"> the CPS one</font><font color="#CCCCCC"> or Capcom play</font>

892
00:30:28,590 --> 00:30:31,770
system<font color="#CCCCCC"> one know</font><font color="#E5E5E5"> if you've heard</font><font color="#CCCCCC"> of that</font>

893
00:30:29,700 --> 00:30:34,470
<font color="#E5E5E5">I hadn't had to google it</font>

894
00:30:31,770 --> 00:30:35,700
<font color="#E5E5E5">and if so if you if you ever played</font>

895
00:30:34,470 --> 00:30:37,350
Street Fighter 2 in an arcade you may

896
00:30:35,700 --> 00:30:39,600
<font color="#E5E5E5">very well have been played this</font><font color="#CCCCCC"> thing or</font>

897
00:30:37,350 --> 00:30:41,580
you<font color="#E5E5E5"> have used it somebody actually went</font>

898
00:30:39,600 --> 00:30:42,780
to<font color="#E5E5E5"> the trouble and created an emulator</font>

899
00:30:41,580 --> 00:30:44,409
in c-sharp<font color="#CCCCCC"> for this thing</font><font color="#E5E5E5"> with a</font>

900
00:30:42,780 --> 00:30:46,240
<font color="#E5E5E5">full-featured debugger it</font><font color="#CCCCCC"> could</font>

901
00:30:44,410 --> 00:30:48,790
we play the games<font color="#E5E5E5"> with</font><font color="#CCCCCC"> smoothes</font><font color="#E5E5E5"> video</font>

902
00:30:46,240 --> 00:30:53,080
and sound<font color="#CCCCCC"> and you</font><font color="#E5E5E5"> can get it right now</font>

903
00:30:48,790 --> 00:30:54,220
<font color="#CCCCCC">in co-project repair</font><font color="#E5E5E5"> clinic</font><font color="#CCCCCC"> we really</font>

904
00:30:53,080 --> 00:30:57,699
lucked out<font color="#CCCCCC"> because this</font><font color="#E5E5E5"> thing not only</font>

905
00:30:54,220 --> 00:30:59,890
emulates<font color="#E5E5E5"> the motorola 6800 emulates the</font>

906
00:30:57,700 --> 00:31:02,590
<font color="#CCCCCC">Z lagers dialogue the 80 CPU because</font><font color="#E5E5E5"> it</font>

907
00:30:59,890 --> 00:31:04,000
used<font color="#E5E5E5"> that as a sound processor so all we</font>

908
00:31:02,590 --> 00:31:05,860
have<font color="#E5E5E5"> to do is hack the crap out of the</font>

909
00:31:04,000 --> 00:31:07,360
simulator<font color="#E5E5E5"> totally gut all the video</font>

910
00:31:05,860 --> 00:31:09,219
<font color="#E5E5E5">related code and display</font><font color="#CCCCCC"> Hardware all</font>

911
00:31:07,360 --> 00:31:12,669
the timers<font color="#CCCCCC"> and other stuff unique to the</font>

912
00:31:09,220 --> 00:31:14,050
<font color="#E5E5E5">CPS one and just trash it so I spent a</font>

913
00:31:12,670 --> 00:31:15,730
not insignificant amount of time

914
00:31:14,050 --> 00:31:18,310
refactoring<font color="#CCCCCC"> these obligations it was</font>

915
00:31:15,730 --> 00:31:20,260
just so it was just<font color="#E5E5E5"> the motor</font><font color="#CCCCCC"> oil</font><font color="#E5E5E5"> 60 Hz</font>

916
00:31:18,310 --> 00:31:23,310
<font color="#E5E5E5">PU core and with the ability</font><font color="#CCCCCC"> to extend</font>

917
00:31:20,260 --> 00:31:26,530
it<font color="#E5E5E5"> with details about our PCM hardware</font>

918
00:31:23,310 --> 00:31:27,850
so now that I have<font color="#CCCCCC"> this moto six-decade</font>

919
00:31:26,530 --> 00:31:29,800
<font color="#CCCCCC">letter in c-sharp</font><font color="#E5E5E5"> it's time to get it to</font>

920
00:31:27,850 --> 00:31:31,540
boot the 2001 finding a<font color="#E5E5E5"> TransAm image</font>

921
00:31:29,800 --> 00:31:34,960
for<font color="#CCCCCC"> lag boot for</font><font color="#E5E5E5"> lack of a better word</font>

922
00:31:31,540 --> 00:31:36,610
<font color="#E5E5E5">so I fired up and I find that it</font>

923
00:31:34,960 --> 00:31:38,380
<font color="#E5E5E5">immediately encounters an illegal</font>

924
00:31:36,610 --> 00:31:40,600
instruction and say I'm<font color="#E5E5E5"> very surprised</font>

925
00:31:38,380 --> 00:31:42,100
<font color="#CCCCCC">were insane that were</font><font color="#E5E5E5"> even trying this</font>

926
00:31:40,600 --> 00:31:43,600
but let's<font color="#CCCCCC"> take a look at what</font><font color="#E5E5E5"> that's</font>

927
00:31:42,100 --> 00:31:45,820
<font color="#CCCCCC">that memory address and ID a pro and see</font>

928
00:31:43,600 --> 00:31:47,770
what's going<font color="#E5E5E5"> on and when I look at that</font>

929
00:31:45,820 --> 00:31:51,669
address<font color="#CCCCCC"> I saw something I didn't expect</font>

930
00:31:47,770 --> 00:31:54,010
to<font color="#E5E5E5"> see</font><font color="#CCCCCC"> I see a TBL new instruction</font><font color="#E5E5E5"> what</font>

931
00:31:51,670 --> 00:31:55,120
in the world is<font color="#E5E5E5"> that I have no idea</font>

932
00:31:54,010 --> 00:31:57,280
<font color="#E5E5E5">never seen it before</font>

933
00:31:55,120 --> 00:31:58,389
I've<font color="#E5E5E5"> never seen in any Sega Genesis</font>

934
00:31:57,280 --> 00:32:01,930
disassembly that I've ever<font color="#E5E5E5"> dealt with</font>

935
00:31:58,390 --> 00:32:03,250
<font color="#E5E5E5">but</font><font color="#CCCCCC"> I da Pro knew how to</font><font color="#E5E5E5"> display to me</font>

936
00:32:01,930 --> 00:32:04,720
so that tells me<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> not actually an</font>

937
00:32:03,250 --> 00:32:08,350
illegal instruction somebody somewhere

938
00:32:04,720 --> 00:32:10,870
knows what this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> so I go hunt down the</font>

939
00:32:08,350 --> 00:32:13,510
<font color="#CCCCCC">Motorola</font><font color="#E5E5E5"> 6830</font><font color="#CCCCCC"> 32 user manual</font><font color="#E5E5E5"> and look up</font>

940
00:32:10,870 --> 00:32:14,860
the TV Lu instruction now I won't get

941
00:32:13,510 --> 00:32:16,360
into<font color="#E5E5E5"> the</font><font color="#CCCCCC"> weeds on</font><font color="#E5E5E5"> this but</font><font color="#CCCCCC"> basically</font>

942
00:32:14,860 --> 00:32:18,250
this instruction performs a table lookup

943
00:32:16,360 --> 00:32:20,590
<font color="#CCCCCC">and calculates a value based on how</font>

944
00:32:18,250 --> 00:32:22,720
precisely<font color="#E5E5E5"> how precisely how far into the</font>

945
00:32:20,590 --> 00:32:24,550
table you go utilizes both<font color="#CCCCCC"> hole and</font>

946
00:32:22,720 --> 00:32:25,630
fraction of components it's kind of

947
00:32:24,550 --> 00:32:27,490
<font color="#E5E5E5">nutty that an instruction</font><font color="#CCCCCC"> like that</font>

948
00:32:25,630 --> 00:32:29,190
exists but<font color="#E5E5E5"> so why in the</font><font color="#CCCCCC"> world would a</font>

949
00:32:27,490 --> 00:32:31,420
CPU need an<font color="#E5E5E5"> instruction that</font><font color="#CCCCCC"> does this</font>

950
00:32:29,190 --> 00:32:33,130
<font color="#E5E5E5">it's actually really useful</font><font color="#CCCCCC"> in exactly</font>

951
00:32:31,420 --> 00:32:35,260
this type of automotive application

952
00:32:33,130 --> 00:32:37,240
because it lets<font color="#E5E5E5"> the PCM store complex</font>

953
00:32:35,260 --> 00:32:39,400
tables of engine information and it can

954
00:32:37,240 --> 00:32:40,690
<font color="#CCCCCC">quickly derive</font><font color="#E5E5E5"> a precise</font><font color="#CCCCCC"> value when</font>

955
00:32:39,400 --> 00:32:41,710
communicating with various pieces of

956
00:32:40,690 --> 00:32:43,420
<font color="#E5E5E5">hardware so you don't have to store</font>

957
00:32:41,710 --> 00:32:45,700
massive tables you<font color="#CCCCCC"> can just store</font>

958
00:32:43,420 --> 00:32:48,760
approximations of<font color="#CCCCCC"> the data and it can</font>

959
00:32:45,700 --> 00:32:49,990
figure it out<font color="#CCCCCC"> from there it's all very</font>

960
00:32:48,760 --> 00:32:52,240
<font color="#CCCCCC">fascinating</font><font color="#E5E5E5"> but we don't care we just</font>

961
00:32:49,990 --> 00:32:53,830
<font color="#E5E5E5">want the emulator</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> not crash so we put</font>

962
00:32:52,240 --> 00:32:55,360
a<font color="#E5E5E5"> halfway-decent implementation of</font><font color="#CCCCCC"> that</font>

963
00:32:53,830 --> 00:32:57,158
instruction<font color="#E5E5E5"> into the c-sharp emulator</font>

964
00:32:55,360 --> 00:33:00,129
based on my before understanding<font color="#CCCCCC"> of what</font>

965
00:32:57,159 --> 00:33:02,129
does and<font color="#E5E5E5"> just move on which was painful</font>

966
00:33:00,129 --> 00:33:04,689
but<font color="#E5E5E5"> getting into the weeds on</font><font color="#CCCCCC"> Motorola</font>

967
00:33:02,129 --> 00:33:06,158
6800 ting enabled me<font color="#CCCCCC"> to fix all sorts of</font>

968
00:33:04,690 --> 00:33:07,539
<font color="#CCCCCC">bugs</font><font color="#E5E5E5"> that were in the</font><font color="#CCCCCC"> SI ps1 emulator</font>

969
00:33:06,159 --> 00:33:08,889
<font color="#CCCCCC">that which weren't a</font><font color="#E5E5E5"> problem for the</font>

970
00:33:07,539 --> 00:33:11,499
games it was emulating but it was a big

971
00:33:08,889 --> 00:33:12,728
problem<font color="#E5E5E5"> for me so even</font><font color="#CCCCCC"> though I wasn't</font>

972
00:33:11,499 --> 00:33:16,179
sorting from<font color="#E5E5E5"> scratch there's still a lot</font>

973
00:33:12,729 --> 00:33:20,349
of<font color="#CCCCCC"> Unicode instruction decoding stuff</font>

974
00:33:16,179 --> 00:33:22,090
that I had<font color="#E5E5E5"> to figure out so now that</font>

975
00:33:20,349 --> 00:33:24,759
we're past the instructions<font color="#E5E5E5"> that the</font>

976
00:33:22,090 --> 00:33:26,439
emulator<font color="#E5E5E5"> didn't yet have support for we</font>

977
00:33:24,759 --> 00:33:29,679
now we're<font color="#E5E5E5"> on to</font><font color="#CCCCCC"> the next</font><font color="#E5E5E5"> route of the</font>

978
00:33:26,440 --> 00:33:31,330
next problem<font color="#CCCCCC"> the emulator</font><font color="#E5E5E5"> is running no</font>

979
00:33:29,679 --> 00:33:33,820
crashes or<font color="#CCCCCC"> anything</font><font color="#E5E5E5"> but now it's stuck</font>

980
00:33:31,330 --> 00:33:36,039
<font color="#E5E5E5">in an infinite loop hopefully hopefully</font>

981
00:33:33,820 --> 00:33:38,168
<font color="#E5E5E5">you can see that but it basically keeps</font>

982
00:33:36,039 --> 00:33:40,119
testing<font color="#CCCCCC"> bits 7 the memory address</font><font color="#E5E5E5"> fffc</font>

983
00:33:38,169 --> 00:33:42,639
<font color="#E5E5E5">1f over and over and</font><font color="#CCCCCC"> over and</font><font color="#E5E5E5"> it keeps</font>

984
00:33:40,119 --> 00:33:44,199
on<font color="#CCCCCC"> doing this until that bit is set the</font>

985
00:33:42,639 --> 00:33:47,289
<font color="#CCCCCC">problem is that bits never set because</font>

986
00:33:44,200 --> 00:33:48,460
our we're emulating<font color="#CCCCCC"> Ram and had that</font>

987
00:33:47,289 --> 00:33:50,019
address<font color="#E5E5E5"> and we're just assuming that</font>

988
00:33:48,460 --> 00:33:53,019
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> 0</font><font color="#E5E5E5"> because we don't know what else</font>

989
00:33:50,019 --> 00:33:54,729
<font color="#CCCCCC">to</font><font color="#E5E5E5"> put there so the bits are reset and</font>

990
00:33:53,019 --> 00:33:55,809
<font color="#E5E5E5">it when it goes</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> act</font><font color="#CCCCCC"> instead it's</font>

991
00:33:54,729 --> 00:33:57,279
checking<font color="#E5E5E5"> to see if it said it's</font>

992
00:33:55,809 --> 00:33:58,830
obviously<font color="#E5E5E5"> never set so it gets stuck</font><font color="#CCCCCC"> and</font>

993
00:33:57,279 --> 00:34:00,489
if it'll loop

994
00:33:58,830 --> 00:34:01,840
normally this code<font color="#E5E5E5"> would make no sense</font>

995
00:34:00,489 --> 00:34:03,009
<font color="#CCCCCC">since there doesn't appear to be</font>

996
00:34:01,840 --> 00:34:06,639
<font color="#E5E5E5">anything that would make that body</font>

997
00:34:03,009 --> 00:34:08,559
change but since<font color="#E5E5E5"> fffc 1f is within the</font>

998
00:34:06,639 --> 00:34:11,589
range<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> think is memory mapped i/o</font>

999
00:34:08,559 --> 00:34:14,139
<font color="#CCCCCC">this probably represents</font><font color="#E5E5E5"> some hardware</font>

1000
00:34:11,589 --> 00:34:16,328
<font color="#E5E5E5">register what does code does</font><font color="#CCCCCC"> I have</font><font color="#E5E5E5"> no</font>

1001
00:34:14,139 --> 00:34:19,240
idea why<font color="#E5E5E5"> we're waiting up this 7-year I</font>

1002
00:34:16,329 --> 00:34:21,039
have no idea<font color="#E5E5E5"> but now that we have</font><font color="#CCCCCC"> an</font>

1003
00:34:19,239 --> 00:34:22,779
emulator where we control<font color="#E5E5E5"> every</font><font color="#CCCCCC"> aspect</font>

1004
00:34:21,039 --> 00:34:27,730
of what it's<font color="#CCCCCC"> doing we</font><font color="#E5E5E5"> don't have to care</font>

1005
00:34:22,779 --> 00:34:29,889
one bit<font color="#E5E5E5"> unintended there so we fix this</font>

1006
00:34:27,730 --> 00:34:31,210
by tweaking<font color="#E5E5E5"> the emulator to always say</font>

1007
00:34:29,889 --> 00:34:32,559
<font color="#E5E5E5">the bits are set when this memory</font>

1008
00:34:31,210 --> 00:34:35,199
address is accessed and then we just

1009
00:34:32,559 --> 00:34:36,879
happily move<font color="#E5E5E5"> on well today accurate we</font>

1010
00:34:35,199 --> 00:34:38,049
do<font color="#E5E5E5"> this a few dozen more times with</font>

1011
00:34:36,879 --> 00:34:41,918
<font color="#E5E5E5">other dresses and then we</font><font color="#CCCCCC"> happily move</font>

1012
00:34:38,049 --> 00:34:43,149
<font color="#E5E5E5">on so now we</font><font color="#CCCCCC"> found the gun to the point</font>

1013
00:34:41,918 --> 00:34:44,710
that the<font color="#CCCCCC"> firmware has entered</font><font color="#E5E5E5"> its main</font>

1014
00:34:43,149 --> 00:34:46,598
what we believe is its main loop and

1015
00:34:44,710 --> 00:34:48,460
we're ready<font color="#CCCCCC"> to begin adding code that</font>

1016
00:34:46,599 --> 00:34:50,829
emulates<font color="#E5E5E5"> the behavior of the data link</font>

1017
00:34:48,460 --> 00:34:52,240
control lordship since we now know what

1018
00:34:50,829 --> 00:34:53,950
memory addresses represent the hardware

1019
00:34:52,239 --> 00:34:56,649
registers of<font color="#CCCCCC"> the data</font><font color="#E5E5E5"> link controller we</font>

1020
00:34:53,949 --> 00:34:58,359
simply<font color="#E5E5E5"> add code that pretends there is</font>

1021
00:34:56,649 --> 00:34:59,710
no scan tool request to<font color="#CCCCCC"> receive until we</font>

1022
00:34:58,359 --> 00:35:02,109
start clicking buttons on<font color="#CCCCCC"> our own to</font>

1023
00:34:59,710 --> 00:35:03,819
<font color="#CCCCCC">simulate a</font><font color="#E5E5E5"> request so we have your</font>

1024
00:35:02,109 --> 00:35:05,200
emulator all set up so we can just<font color="#E5E5E5"> type</font>

1025
00:35:03,819 --> 00:35:07,029
in<font color="#CCCCCC"> two bytes that make up a scan tool</font>

1026
00:35:05,200 --> 00:35:08,710
request hit a button and it<font color="#CCCCCC"> will prepare</font>

1027
00:35:07,029 --> 00:35:09,170
<font color="#CCCCCC">it</font><font color="#E5E5E5"> for the</font><font color="#CCCCCC"> firmware to</font><font color="#E5E5E5"> receive it and</font>

1028
00:35:08,710 --> 00:35:10,910
<font color="#E5E5E5">then act</font>

1029
00:35:09,170 --> 00:35:13,540
generator<font color="#E5E5E5"> response and send</font><font color="#CCCCCC"> it back to</font>

1030
00:35:10,910 --> 00:35:17,118
us<font color="#E5E5E5"> so I click the</font><font color="#CCCCCC"> button to do that</font><font color="#E5E5E5"> and</font>

1031
00:35:13,540 --> 00:35:17,869
nothing happens<font color="#CCCCCC"> so we have</font><font color="#E5E5E5"> another</font>

1032
00:35:17,119 --> 00:35:20,809
<font color="#CCCCCC">problem to solve</font>

1033
00:35:17,869 --> 00:35:22,520
I scratched my head<font color="#E5E5E5"> on this one</font><font color="#CCCCCC"> for a</font>

1034
00:35:20,809 --> 00:35:24,410
long time but then I finally remembered

1035
00:35:22,520 --> 00:35:26,690
something from<font color="#CCCCCC"> that PCM hacking 101</font>

1036
00:35:24,410 --> 00:35:28,460
guide it says the routines that<font color="#E5E5E5"> handle</font>

1037
00:35:26,690 --> 00:35:32,030
<font color="#CCCCCC">OBD messages or scandal requests are</font>

1038
00:35:28,460 --> 00:35:33,559
executed<font color="#CCCCCC"> by main scheduling routines but</font>

1039
00:35:32,030 --> 00:35:35,390
schedule<font color="#CCCCCC"> is</font><font color="#E5E5E5"> kind of a funny word</font><font color="#CCCCCC"> to use</font>

1040
00:35:33,559 --> 00:35:37,040
<font color="#CCCCCC">here so</font><font color="#E5E5E5"> I started thinking if the</font>

1041
00:35:35,390 --> 00:35:38,450
<font color="#E5E5E5">processing of messages is on a scheduled</font>

1042
00:35:37,040 --> 00:35:41,000
and then<font color="#E5E5E5"> implies some sort</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> hardware</font>

1043
00:35:38,450 --> 00:35:42,230
timer<font color="#CCCCCC"> a crystal timer to be exact</font><font color="#E5E5E5"> and</font>

1044
00:35:41,000 --> 00:35:43,640
that means the firmware must be keeping

1045
00:35:42,230 --> 00:35:46,040
<font color="#CCCCCC">track of</font><font color="#E5E5E5"> the number of accurate</font><font color="#CCCCCC"> ticks</font>

1046
00:35:43,640 --> 00:35:47,750
that<font color="#E5E5E5"> pass over time and the only time</font>

1047
00:35:46,040 --> 00:35:48,799
<font color="#CCCCCC">Motorola</font><font color="#E5E5E5"> stik-tek</font><font color="#CCCCCC"> code can</font><font color="#E5E5E5"> be notified</font>

1048
00:35:47,750 --> 00:35:51,079
as something as if it's being

1049
00:35:48,799 --> 00:35:52,430
<font color="#E5E5E5">interrupted</font><font color="#CCCCCC"> and so we know</font><font color="#E5E5E5"> that's done</font>

1050
00:35:51,079 --> 00:35:54,079
<font color="#E5E5E5">to defective</font><font color="#CCCCCC"> tables so if we check</font><font color="#E5E5E5"> the</font>

1051
00:35:52,430 --> 00:35:56,180
vector<font color="#CCCCCC"> table where the handlers for all</font>

1052
00:35:54,079 --> 00:35:57,339
interrupts<font color="#E5E5E5"> are defined we find a routine</font>

1053
00:35:56,180 --> 00:35:59,868
that looks very<font color="#CCCCCC"> suspicious</font>

1054
00:35:57,339 --> 00:36:01,609
this routine<font color="#E5E5E5"> whenever a specific</font>

1055
00:35:59,869 --> 00:36:03,170
interrupt fires<font color="#E5E5E5"> will set a flag</font><font color="#CCCCCC"> to 1 and</font>

1056
00:36:01,609 --> 00:36:05,839
then it<font color="#E5E5E5"> increments a counter a very</font>

1057
00:36:03,170 --> 00:36:07,430
large counter by<font color="#E5E5E5"> one as it turns out</font>

1058
00:36:05,839 --> 00:36:09,170
<font color="#E5E5E5">this counter is checked within the main</font>

1059
00:36:07,430 --> 00:36:09,529
loop<font color="#E5E5E5"> so this is actually the number of</font>

1060
00:36:09,170 --> 00:36:12,109
ticks

1061
00:36:09,530 --> 00:36:13,369
since the firmware<font color="#E5E5E5"> is booted and this</font>

1062
00:36:12,109 --> 00:36:14,839
cancel request<font color="#CCCCCC"> handling which means only</font>

1063
00:36:13,369 --> 00:36:17,000
<font color="#E5E5E5">fire when a certain number of ticks have</font>

1064
00:36:14,839 --> 00:36:18,349
<font color="#E5E5E5">occurred so all we have</font><font color="#CCCCCC"> to do is to</font>

1065
00:36:17,000 --> 00:36:20,270
simulate<font color="#E5E5E5"> the triggering of this</font>

1066
00:36:18,349 --> 00:36:22,760
<font color="#CCCCCC">interrupt periodically say</font><font color="#E5E5E5"> every few</font>

1067
00:36:20,270 --> 00:36:25,040
milliseconds<font color="#CCCCCC"> and it'll work the way it's</font>

1068
00:36:22,760 --> 00:36:26,510
supposed<font color="#CCCCCC"> to we don't know or care what</font>

1069
00:36:25,040 --> 00:36:29,150
<font color="#CCCCCC">the real number</font><font color="#E5E5E5"> of milliseconds is we</font>

1070
00:36:26,510 --> 00:36:30,260
<font color="#E5E5E5">just</font><font color="#CCCCCC"> need it to</font><font color="#E5E5E5"> be kind</font><font color="#CCCCCC"> of close</font><font color="#E5E5E5"> so when</font>

1071
00:36:29,150 --> 00:36:32,059
we do this we<font color="#E5E5E5"> find that the firmware</font>

1072
00:36:30,260 --> 00:36:33,799
suddenly starts sending<font color="#CCCCCC"> our simulated</font>

1073
00:36:32,059 --> 00:36:36,920
data<font color="#E5E5E5"> link controller responses back to</font>

1074
00:36:33,799 --> 00:36:38,450
us so now finally<font color="#E5E5E5"> we have an emulator</font>

1075
00:36:36,920 --> 00:36:40,160
<font color="#CCCCCC">for this car computer</font><font color="#E5E5E5"> and we could</font>

1076
00:36:38,450 --> 00:36:42,020
simulate<font color="#E5E5E5"> scan tool</font><font color="#CCCCCC"> request</font><font color="#E5E5E5"> by sending</font>

1077
00:36:40,160 --> 00:36:45,828
them to it<font color="#E5E5E5"> and get the responses back</font>

1078
00:36:42,020 --> 00:36:48,859
from<font color="#E5E5E5"> them so now that we've finally</font>

1079
00:36:45,829 --> 00:36:50,540
<font color="#E5E5E5">gotten to that point we just simply</font>

1080
00:36:48,859 --> 00:36:52,279
write some code to<font color="#CCCCCC"> brute-force through</font>

1081
00:36:50,540 --> 00:36:54,710
all the possible scans<font color="#CCCCCC"> we'll request</font><font color="#E5E5E5"> and</font>

1082
00:36:52,280 --> 00:36:57,559
then just set a breakpoint<font color="#E5E5E5"> on the code</font>

1083
00:36:54,710 --> 00:36:58,760
<font color="#E5E5E5">that accesses our option flag so the</font>

1084
00:36:57,559 --> 00:37:00,049
emulator just sits there and<font color="#CCCCCC"> spins its</font>

1085
00:36:58,760 --> 00:37:01,730
wheels forever<font color="#E5E5E5"> until it gets to the</font>

1086
00:37:00,049 --> 00:37:03,380
point where<font color="#E5E5E5"> it's going</font><font color="#CCCCCC"> to access the</font>

1087
00:37:01,730 --> 00:37:05,329
flag<font color="#CCCCCC"> that we know controls</font><font color="#E5E5E5"> any threats</font>

1088
00:37:03,380 --> 00:37:06,799
the any test<font color="#CCCCCC"> status and then we'll know</font>

1089
00:37:05,329 --> 00:37:09,230
what we're supposed<font color="#E5E5E5"> to be sending to it</font>

1090
00:37:06,799 --> 00:37:13,250
in order<font color="#CCCCCC"> to get</font><font color="#E5E5E5"> to that so many hours or</font>

1091
00:37:09,230 --> 00:37:14,599
<font color="#E5E5E5">days later we have it so now that we</font>

1092
00:37:13,250 --> 00:37:16,190
<font color="#E5E5E5">have an actual request to look at we can</font>

1093
00:37:14,599 --> 00:37:18,140
just<font color="#CCCCCC"> some googling</font><font color="#E5E5E5"> and see what this is</font>

1094
00:37:16,190 --> 00:37:20,000
and<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is known as mode 22 which</font><font color="#CCCCCC"> is</font>

1095
00:37:18,140 --> 00:37:21,450
where GM stuffs their non-standard scan

1096
00:37:20,000 --> 00:37:23,490
tool<font color="#CCCCCC"> request</font>

1097
00:37:21,450 --> 00:37:26,040
stuff<font color="#CCCCCC"> to</font><font color="#E5E5E5"> stuff that changes potentially</font>

1098
00:37:23,490 --> 00:37:29,339
over time and<font color="#E5E5E5"> across models even within</font>

1099
00:37:26,040 --> 00:37:33,930
GM so<font color="#CCCCCC"> requests 1102 seems to return our</font>

1100
00:37:29,339 --> 00:37:35,640
<font color="#E5E5E5">options like among other things so now</font>

1101
00:37:33,930 --> 00:37:38,279
that<font color="#CCCCCC"> we found this cancel request</font><font color="#E5E5E5"> in the</font>

1102
00:37:35,640 --> 00:37:40,109
2001 Pontiac<font color="#E5E5E5"> trans-am image</font><font color="#CCCCCC"> we can</font>

1103
00:37:38,280 --> 00:37:42,300
execute<font color="#E5E5E5"> our own firmware image and send</font>

1104
00:37:40,109 --> 00:37:43,740
the same request to it so once we see

1105
00:37:42,300 --> 00:37:45,960
where<font color="#E5E5E5"> the code Texas we find the memory</font>

1106
00:37:43,740 --> 00:37:47,729
address of the option flag<font color="#E5E5E5"> for our 97</font>

1107
00:37:45,960 --> 00:37:49,920
<font color="#CCCCCC">Cavalier image modify that byte</font>

1108
00:37:47,730 --> 00:37:52,020
appropriately<font color="#E5E5E5"> recalculate the checksum</font>

1109
00:37:49,920 --> 00:37:54,030
fix that reflash<font color="#CCCCCC"> the chip and</font><font color="#E5E5E5"> our</font>

1110
00:37:52,020 --> 00:37:56,250
programmer desolder<font color="#E5E5E5"> resolder a back into</font>

1111
00:37:54,030 --> 00:37:58,950
the PCM reassemble it reattach it<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

1112
00:37:56,250 --> 00:38:03,710
car hop in turn the key and see<font color="#CCCCCC"> what</font>

1113
00:37:58,950 --> 00:38:08,009
happens so you think<font color="#CCCCCC"> it worked</font>

1114
00:38:03,710 --> 00:38:09,210
yeah it<font color="#CCCCCC"> this is all one</font><font color="#E5E5E5"> a sense I just</font>

1115
00:38:08,010 --> 00:38:15,240
<font color="#E5E5E5">think I know where they dresses this is</font>

1116
00:38:09,210 --> 00:38:19,589
all one of<font color="#E5E5E5"> them so yeah no no it doesn't</font>

1117
00:38:15,240 --> 00:38:25,259
<font color="#CCCCCC">work force I was met with failure met</font>

1118
00:38:19,589 --> 00:38:26,910
<font color="#E5E5E5">with failure so why was this who knows</font><font color="#CCCCCC"> a</font>

1119
00:38:25,260 --> 00:38:29,550
<font color="#CCCCCC">whole</font><font color="#E5E5E5"> bunch of reasons why it didn't</font>

1120
00:38:26,910 --> 00:38:31,470
<font color="#CCCCCC">work the most plausible explanations are</font>

1121
00:38:29,550 --> 00:38:32,849
that I just screwed it<font color="#E5E5E5"> up I just</font><font color="#CCCCCC"> screwed</font>

1122
00:38:31,470 --> 00:38:34,828
up<font color="#E5E5E5"> the</font><font color="#CCCCCC"> dissenter</font><font color="#E5E5E5"> the desoldering and</font>

1123
00:38:32,849 --> 00:38:36,720
<font color="#E5E5E5">resolder ring</font><font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> I flashed it spins</font>

1124
00:38:34,829 --> 00:38:38,280
only have<font color="#E5E5E5"> some money they kind of take</font>

1125
00:38:36,720 --> 00:38:39,890
so much abuse you<font color="#E5E5E5"> can only saw our indie</font>

1126
00:38:38,280 --> 00:38:42,720
sovereign<font color="#CCCCCC"> restore them so many</font><font color="#E5E5E5"> times or</font>

1127
00:38:39,890 --> 00:38:44,368
two we discover that the NFF status is

1128
00:38:42,720 --> 00:38:46,140
returned be a non-standard<font color="#CCCCCC"> scan</font><font color="#E5E5E5"> to</font>

1129
00:38:44,369 --> 00:38:47,970
request which<font color="#E5E5E5"> is why my googling for</font><font color="#CCCCCC"> a</font>

1130
00:38:46,140 --> 00:38:50,730
standard one didn't turn up any results

1131
00:38:47,970 --> 00:38:52,078
so that<font color="#CCCCCC"> since we</font><font color="#E5E5E5"> know it's non-standard</font>

1132
00:38:50,730 --> 00:38:53,910
that<font color="#E5E5E5"> request might just do something</font>

1133
00:38:52,079 --> 00:38:55,800
<font color="#CCCCCC">different between</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> two versions</font><font color="#E5E5E5"> it</font>

1134
00:38:53,910 --> 00:38:56,879
probably doesn't bode well the<font color="#E5E5E5"> two</font>

1135
00:38:55,800 --> 00:38:58,650
<font color="#CCCCCC">firmwares are so different that I</font>

1136
00:38:56,880 --> 00:39:02,119
couldn't find any code patterns<font color="#E5E5E5"> between</font>

1137
00:38:58,650 --> 00:39:04,589
the two of them so that could<font color="#CCCCCC"> be it I</font>

1138
00:39:02,119 --> 00:39:06,359
mean this<font color="#E5E5E5"> Cavalier came out 1997 when</font>

1139
00:39:04,589 --> 00:39:08,160
<font color="#CCCCCC">ov2 was pretty much brand new so it's</font>

1140
00:39:06,359 --> 00:39:10,140
entirely possible<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the firmware in</font>

1141
00:39:08,160 --> 00:39:12,868
it is older than when GM thought to even

1142
00:39:10,140 --> 00:39:14,040
put<font color="#E5E5E5"> that request in the</font><font color="#CCCCCC"> firmware</font><font color="#E5E5E5"> and</font>

1143
00:39:12,869 --> 00:39:15,390
then<font color="#E5E5E5"> three it's always possible I just</font>

1144
00:39:14,040 --> 00:39:18,720
<font color="#CCCCCC">screwed up the checksum calculation who</font>

1145
00:39:15,390 --> 00:39:22,640
knows so what do<font color="#E5E5E5"> we do now give up</font>

1146
00:39:18,720 --> 00:39:25,049
buying a car<font color="#CCCCCC"> you know we did</font><font color="#E5E5E5"> our best</font>

1147
00:39:22,640 --> 00:39:27,109
<font color="#CCCCCC">keeper</font><font color="#E5E5E5"> a bitter best what</font><font color="#CCCCCC"> you going</font><font color="#E5E5E5"> to</font>

1148
00:39:25,050 --> 00:39:27,109
do

1149
00:39:28,190 --> 00:39:32,450
so in conclusion<font color="#CCCCCC"> if I hadn't bought a</font>

1150
00:39:31,069 --> 00:39:34,190
new car and could do it over<font color="#CCCCCC"> again I</font>

1151
00:39:32,450 --> 00:39:36,649
would<font color="#CCCCCC"> study that</font><font color="#E5E5E5"> form</font><font color="#CCCCCC"> or image I dumped</font>

1152
00:39:34,190 --> 00:39:39,410
and find out<font color="#E5E5E5"> exactly how to reflash over</font>

1153
00:39:36,650 --> 00:39:40,760
<font color="#CCCCCC">obd2</font><font color="#E5E5E5"> it I think it's ridiculous that the</font>

1154
00:39:39,410 --> 00:39:42,560
knowledge of<font color="#E5E5E5"> how to do that might</font><font color="#CCCCCC"> only</font>

1155
00:39:40,760 --> 00:39:44,869
rest in the<font color="#E5E5E5"> hands of a few</font><font color="#CCCCCC"> people</font><font color="#E5E5E5"> we</font>

1156
00:39:42,560 --> 00:39:46,339
<font color="#E5E5E5">really need to crack that open but so</font>

1157
00:39:44,869 --> 00:39:47,660
ain't you know if I did we would<font color="#E5E5E5"> have</font>

1158
00:39:46,339 --> 00:39:49,400
been I would<font color="#E5E5E5"> have been free to try</font>

1159
00:39:47,660 --> 00:39:51,649
reflashing over and over again until I

1160
00:39:49,400 --> 00:39:53,450
was sure<font color="#CCCCCC"> that I got</font><font color="#E5E5E5"> it right</font><font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> when</font>

1161
00:39:51,650 --> 00:39:55,609
you have to desolder resolder<font color="#E5E5E5"> chip half</font>

1162
00:39:53,450 --> 00:40:00,279
a dozen times<font color="#E5E5E5"> for one attempt potential</font>

1163
00:39:55,609 --> 00:40:02,150
for catastrophe is just really<font color="#CCCCCC"> high so</font>

1164
00:40:00,280 --> 00:40:04,760
anyway if you take anything away<font color="#E5E5E5"> from</font>

1165
00:40:02,150 --> 00:40:06,230
this<font color="#E5E5E5"> I hope you take away this if</font><font color="#CCCCCC"> you're</font>

1166
00:40:04,760 --> 00:40:07,819
face for the problem and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> want to</font>

1167
00:40:06,230 --> 00:40:09,589
solve it<font color="#E5E5E5"> and you</font><font color="#CCCCCC"> come up with a really</font>

1168
00:40:07,819 --> 00:40:11,300
crazy thought like<font color="#E5E5E5"> riding an emulator</font>

1169
00:40:09,589 --> 00:40:14,900
for<font color="#E5E5E5"> your car computer so you can disable</font>

1170
00:40:11,300 --> 00:40:16,730
the neetha status<font color="#CCCCCC"> don't be</font><font color="#E5E5E5"> afraid to try</font>

1171
00:40:14,900 --> 00:40:18,440
<font color="#CCCCCC">it you might be</font><font color="#E5E5E5"> surprised it just might</font>

1172
00:40:16,730 --> 00:40:20,390
actually work<font color="#E5E5E5"> and you might actually get</font>

1173
00:40:18,440 --> 00:40:22,369
something<font color="#E5E5E5"> out of it</font><font color="#CCCCCC"> it might</font><font color="#E5E5E5"> not have</font>

1174
00:40:20,390 --> 00:40:24,618
<font color="#CCCCCC">worked</font><font color="#E5E5E5"> for me this time but it has in</font>

1175
00:40:22,369 --> 00:40:26,000
the<font color="#E5E5E5"> past more often than not ins the</font>

1176
00:40:24,619 --> 00:40:28,310
philosophies worked for me<font color="#CCCCCC"> very</font><font color="#E5E5E5"> well</font>

1177
00:40:26,000 --> 00:40:32,000
and we got a functioning car computer

1178
00:40:28,310 --> 00:40:34,220
emulator out of it<font color="#E5E5E5"> so I may not it may</font>

1179
00:40:32,000 --> 00:40:35,750
not have<font color="#E5E5E5"> succeeded but I did succeed</font><font color="#CCCCCC"> in</font>

1180
00:40:34,220 --> 00:40:37,098
finding<font color="#E5E5E5"> a</font><font color="#CCCCCC"> way to get to the</font><font color="#E5E5E5"> information</font>

1181
00:40:35,750 --> 00:40:41,960
that<font color="#CCCCCC"> I wanted by creating that emulator</font>

1182
00:40:37,099 --> 00:40:43,550
and that is a victory<font color="#E5E5E5"> in</font><font color="#CCCCCC"> itself but</font>

1183
00:40:41,960 --> 00:40:45,140
anyway if the idea seems crazy<font color="#E5E5E5"> to you or</font>

1184
00:40:43,550 --> 00:40:46,579
more<font color="#CCCCCC"> importantly</font><font color="#E5E5E5"> if somebody's told you</font>

1185
00:40:45,140 --> 00:40:49,700
that your idea<font color="#E5E5E5"> is crazy then you</font>

1186
00:40:46,579 --> 00:40:51,440
definitely need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> try it why because</font><font color="#CCCCCC"> no</font>

1187
00:40:49,700 --> 00:40:52,910
one<font color="#E5E5E5"> else is going to try it those types</font>

1188
00:40:51,440 --> 00:40:54,349
of niche projects where<font color="#E5E5E5"> you know we can</font>

1189
00:40:52,910 --> 00:40:56,299
<font color="#CCCCCC">work but everyone's telling</font><font color="#E5E5E5"> you not to</font>

1190
00:40:54,349 --> 00:40:58,220
bother that's your time to<font color="#E5E5E5"> shine because</font>

1191
00:40:56,300 --> 00:41:00,140
one you won't<font color="#E5E5E5"> have any</font><font color="#CCCCCC"> competition and</font>

1192
00:40:58,220 --> 00:41:03,140
two you might actually succeed it might

1193
00:41:00,140 --> 00:41:05,328
actually work<font color="#CCCCCC"> and another</font><font color="#E5E5E5"> thing if</font>

1194
00:41:03,140 --> 00:41:06,589
everyone's<font color="#E5E5E5"> complaint and lecture idea is</font>

1195
00:41:05,329 --> 00:41:09,140
somebody will just<font color="#CCCCCC"> do</font><font color="#E5E5E5"> it a simpler way</font>

1196
00:41:06,589 --> 00:41:10,549
so why bother<font color="#E5E5E5"> well I can</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> tell you</font>

1197
00:41:09,140 --> 00:41:12,859
<font color="#E5E5E5">it's not about what you</font><font color="#CCCCCC"> do it's how you</font>

1198
00:41:10,550 --> 00:41:13,970
go about<font color="#E5E5E5"> doing it</font><font color="#CCCCCC"> I mean if you succeed</font>

1199
00:41:12,859 --> 00:41:17,029
it doesn't matter if somebody<font color="#E5E5E5"> beat you</font>

1200
00:41:13,970 --> 00:41:18,470
to it or knows more than<font color="#E5E5E5"> you do</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> I mean</font>

1201
00:41:17,030 --> 00:41:21,200
if nothing else to get you<font color="#CCCCCC"> speaking spot</font>

1202
00:41:18,470 --> 00:41:24,049
up here<font color="#E5E5E5"> in front of you guys so that</font>

1203
00:41:21,200 --> 00:41:26,089
makes it worth<font color="#E5E5E5"> it so thanks again for</font>

1204
00:41:24,050 --> 00:41:27,859
listening<font color="#CCCCCC"> if you want to contact me</font><font color="#E5E5E5"> my</font>

1205
00:41:26,089 --> 00:41:32,230
<font color="#E5E5E5">information</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> on the screen there or</font>

1206
00:41:27,859 --> 00:41:32,230
<font color="#E5E5E5">online have a nice day</font>

1207
00:41:33,980 --> 00:41:37,150
[Applause]

1208
00:41:37,430 --> 00:41:54,600
also questions anybody<font color="#CCCCCC"> has lots and</font><font color="#E5E5E5"> lots</font>

1209
00:41:49,860 --> 00:41:57,660
of googling<font color="#CCCCCC"> there is a fee CMO 411 PCM</font>

1210
00:41:54,600 --> 00:41:58,740
that which that is and I don't<font color="#CCCCCC"> I</font>

1211
00:41:57,660 --> 00:41:59,970
couldn't<font color="#E5E5E5"> find any</font><font color="#CCCCCC"> evidence that that's</font>

1212
00:41:58,740 --> 00:42:01,560
what mine is<font color="#E5E5E5"> but it looks pretty darn</font>

1213
00:41:59,970 --> 00:42:03,509
similar and when I started disassembling

1214
00:42:01,560 --> 00:42:05,400
<font color="#CCCCCC">I actually I had to disable</font><font color="#E5E5E5"> a whole</font>

1215
00:42:03,510 --> 00:42:07,700
bunch<font color="#E5E5E5"> of</font><font color="#CCCCCC"> different ones that one</font><font color="#E5E5E5"> but as</font>

1216
00:42:05,400 --> 00:42:10,680
I was<font color="#E5E5E5"> looking I started seeing the same</font>

1217
00:42:07,700 --> 00:42:11,970
<font color="#E5E5E5">io ranges like that one that controls</font>

1218
00:42:10,680 --> 00:42:14,069
<font color="#E5E5E5">that data link control ership when I</font>

1219
00:42:11,970 --> 00:42:15,899
start finding<font color="#E5E5E5"> firmware that uses exactly</font>

1220
00:42:14,070 --> 00:42:17,430
<font color="#E5E5E5">the same addresses it's probably the</font>

1221
00:42:15,900 --> 00:42:19,830
same circuit board or close to<font color="#CCCCCC"> the same</font>

1222
00:42:17,430 --> 00:42:21,509
hardware that and plus I couldn't<font color="#E5E5E5"> just I</font>

1223
00:42:19,830 --> 00:42:27,990
<font color="#CCCCCC">just couldn't get</font><font color="#E5E5E5"> any closer in 1997 and</font>

1224
00:42:21,510 --> 00:42:29,790
2001<font color="#E5E5E5"> nope I still have it actually it's</font>

1225
00:42:27,990 --> 00:42:31,709
<font color="#CCCCCC">online it's them this is in my</font><font color="#E5E5E5"> graveyard</font>

1226
00:42:29,790 --> 00:42:36,920
<font color="#E5E5E5">of stuff so I can come back to it</font>

1227
00:42:31,710 --> 00:42:36,920
<font color="#E5E5E5">someday yeah</font>

1228
00:42:41,010 --> 00:42:48,820
yeah if you've ever looked at an

1229
00:42:47,290 --> 00:42:50,890
emulator like for a game console<font color="#E5E5E5"> like a</font>

1230
00:42:48,820 --> 00:42:52,840
Sega Genesis emulator there's all kind

1231
00:42:50,890 --> 00:42:53,950
it's really a mess every emulator<font color="#E5E5E5"> code</font>

1232
00:42:52,840 --> 00:42:56,980
bringing<font color="#CCCCCC"> me like</font><font color="#E5E5E5"> I've ever looked</font><font color="#CCCCCC"> that</font>

1233
00:42:53,950 --> 00:42:58,779
<font color="#CCCCCC">is a mess</font><font color="#E5E5E5"> always a mess it but it always</font>

1234
00:42:56,980 --> 00:43:00,340
has<font color="#CCCCCC"> to it always has to have a processor</font>

1235
00:42:58,780 --> 00:43:03,070
core it has<font color="#E5E5E5"> to</font><font color="#CCCCCC"> simulate all of the</font>

1236
00:43:00,340 --> 00:43:06,010
individual instructions and then it also

1237
00:43:03,070 --> 00:43:07,870
has to<font color="#E5E5E5"> access obviously it has to</font><font color="#CCCCCC"> access</font>

1238
00:43:06,010 --> 00:43:09,010
<font color="#E5E5E5">RAM and external</font><font color="#CCCCCC"> chip external memory in</font>

1239
00:43:07,870 --> 00:43:11,380
<font color="#E5E5E5">that kind of thing but it also has</font><font color="#CCCCCC"> to</font>

1240
00:43:09,010 --> 00:43:13,360
access hardware that's unique or

1241
00:43:11,380 --> 00:43:16,120
different to every device that<font color="#CCCCCC"> it's in</font>

1242
00:43:13,360 --> 00:43:17,830
so you know the second<font color="#CCCCCC"> genesis for</font>

1243
00:43:16,120 --> 00:43:19,060
example hasn't<font color="#E5E5E5"> forget you because it's a</font>

1244
00:43:17,830 --> 00:43:20,410
game system is there's always a lot of

1245
00:43:19,060 --> 00:43:21,940
<font color="#E5E5E5">display processing a lot of display</font>

1246
00:43:20,410 --> 00:43:23,440
<font color="#CCCCCC">Hardware display Hardware not kind of</font>

1247
00:43:21,940 --> 00:43:25,300
<font color="#E5E5E5">stuff in it I don't</font><font color="#CCCCCC"> care about any of</font>

1248
00:43:23,440 --> 00:43:26,620
that<font color="#CCCCCC"> so if I saw</font><font color="#E5E5E5"> anything even closely</font>

1249
00:43:25,300 --> 00:43:28,420
related<font color="#CCCCCC"> to</font><font color="#E5E5E5"> that I just ripped it out</font>

1250
00:43:26,620 --> 00:43:30,069
deleted<font color="#CCCCCC"> it because it's always more fun</font>

1251
00:43:28,420 --> 00:43:31,540
<font color="#CCCCCC">to delete code than to add it so I just</font>

1252
00:43:30,070 --> 00:43:33,400
<font color="#CCCCCC">found</font><font color="#E5E5E5"> something I did everything</font><font color="#CCCCCC"> I</font>

1253
00:43:31,540 --> 00:43:37,960
<font color="#E5E5E5">thought I need to do and more and just</font>

1254
00:43:33,400 --> 00:43:41,500
rip it<font color="#E5E5E5"> out so and then you start fixing</font>

1255
00:43:37,960 --> 00:43:52,140
bugs<font color="#E5E5E5"> from there so a lot</font><font color="#CCCCCC"> of trial and</font>

1256
00:43:41,500 --> 00:43:52,140
<font color="#E5E5E5">error</font><font color="#CCCCCC"> weather</font><font color="#E5E5E5"> too much probably months</font>

1257
00:43:57,090 --> 00:44:02,890
<font color="#CCCCCC">yes</font><font color="#E5E5E5"> that I mentioned the being able to</font>

1258
00:44:01,330 --> 00:44:05,049
reflash the firmware over the<font color="#E5E5E5"> obd2 port</font>

1259
00:44:02,890 --> 00:44:06,790
<font color="#CCCCCC">I really it really really bothers me</font>

1260
00:44:05,050 --> 00:44:08,410
<font color="#CCCCCC">that you have</font><font color="#E5E5E5"> to go</font><font color="#CCCCCC"> buy spend</font><font color="#E5E5E5"> thousands</font>

1261
00:44:06,790 --> 00:44:10,060
of<font color="#CCCCCC"> dollars just to buy a thing that does</font>

1262
00:44:08,410 --> 00:44:12,069
this and<font color="#E5E5E5"> just for GM cars you can</font><font color="#CCCCCC"> buy</font>

1263
00:44:10,060 --> 00:44:14,200
like<font color="#CCCCCC"> for</font><font color="#E5E5E5"> super for whatever any other</font>

1264
00:44:12,070 --> 00:44:15,190
car<font color="#CCCCCC"> you've there are much easier ways to</font>

1265
00:44:14,200 --> 00:44:16,810
<font color="#E5E5E5">do this you can</font><font color="#CCCCCC"> just build a little</font>

1266
00:44:15,190 --> 00:44:17,740
<font color="#CCCCCC">cable</font><font color="#E5E5E5"> slaughter together put it in there</font>

1267
00:44:16,810 --> 00:44:19,420
and<font color="#E5E5E5"> there you go hook it up to your</font>

1268
00:44:17,740 --> 00:44:21,879
<font color="#E5E5E5">computer there you go but GM you can't</font>

1269
00:44:19,420 --> 00:44:24,820
do that<font color="#E5E5E5"> and that's that's ridiculous we</font>

1270
00:44:21,880 --> 00:44:26,110
should be better<font color="#E5E5E5"> about that so if I were</font>

1271
00:44:24,820 --> 00:44:27,370
<font color="#E5E5E5">going to revisit it I would do that I</font>

1272
00:44:26,110 --> 00:44:30,480
<font color="#E5E5E5">would I would find a way to make that</font>

1273
00:44:27,370 --> 00:44:32,319
<font color="#E5E5E5">work</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> that way I wouldn't what's it</font>

1274
00:44:30,480 --> 00:44:33,520
yeah there are lots<font color="#E5E5E5"> of products out</font>

1275
00:44:32,320 --> 00:44:36,760
<font color="#E5E5E5">there but they all they're</font><font color="#CCCCCC"> all also</font>

1276
00:44:33,520 --> 00:44:38,320
<font color="#E5E5E5">really expensive</font><font color="#CCCCCC"> ed so it just really</font>

1277
00:44:36,760 --> 00:44:40,530
<font color="#E5E5E5">should be free and</font><font color="#CCCCCC"> open source I think</font>

1278
00:44:38,320 --> 00:44:40,530
so

1279
00:44:41,540 --> 00:44:51,330
exactly<font color="#CCCCCC"> yeah they really I</font><font color="#E5E5E5"> yeah I cars</font>

1280
00:44:50,070 --> 00:44:53,160
the car to me I don't<font color="#CCCCCC"> care</font><font color="#E5E5E5"> I mean I'm</font>

1281
00:44:51,330 --> 00:44:54,270
<font color="#E5E5E5">I'm emotionally attached to this one</font>

1282
00:44:53,160 --> 00:44:57,180
which is<font color="#CCCCCC"> what I was trying to order to</font>

1283
00:44:54,270 --> 00:45:04,070
fix it but other than that I just go get

1284
00:44:57,180 --> 00:45:04,069
a car<font color="#E5E5E5"> doesn't</font><font color="#CCCCCC"> matter so he else</font>

1285
00:45:10,790 --> 00:45:15,800
in tuner<font color="#CCCCCC"> Pro you the tuner Pro is all</font>

1286
00:45:13,940 --> 00:45:16,849
about that you<font color="#CCCCCC"> see specify</font><font color="#E5E5E5"> an</font><font color="#CCCCCC"> XD F file</font>

1287
00:45:15,800 --> 00:45:18,319
and a firmware<font color="#E5E5E5"> image and then it goes</font>

1288
00:45:16,849 --> 00:45:19,520
<font color="#CCCCCC">and makes the changes</font><font color="#E5E5E5"> for you so if you</font>

1289
00:45:18,319 --> 00:45:20,839
want<font color="#E5E5E5"> to know what it's doing</font><font color="#CCCCCC"> just go</font>

1290
00:45:19,520 --> 00:45:22,160
make a change<font color="#E5E5E5"> and</font><font color="#CCCCCC"> see what it changed</font>

1291
00:45:20,839 --> 00:45:23,720
<font color="#E5E5E5">you just do a diff</font><font color="#CCCCCC"> between the binary</font>

1292
00:45:22,160 --> 00:45:25,279
file<font color="#CCCCCC"> that generated versus the one I had</font>

1293
00:45:23,720 --> 00:45:26,509
<font color="#CCCCCC">originally</font><font color="#E5E5E5"> and when you do</font><font color="#CCCCCC"> that you see</font>

1294
00:45:25,280 --> 00:45:28,579
there are two<font color="#CCCCCC"> things that change one is</font>

1295
00:45:26,510 --> 00:45:29,839
that flag<font color="#CCCCCC"> and</font><font color="#E5E5E5"> two is a checksum that</font>

1296
00:45:28,579 --> 00:45:31,309
plus a bunch<font color="#CCCCCC"> of googling about what</font>

1297
00:45:29,839 --> 00:45:32,839
other people<font color="#CCCCCC"> do you find</font><font color="#E5E5E5"> just all sorts</font>

1298
00:45:31,309 --> 00:45:34,040
of check sums and<font color="#E5E5E5"> no no cryptographic</font>

1299
00:45:32,839 --> 00:45:35,299
signatures or anything like<font color="#E5E5E5"> that it's</font>

1300
00:45:34,040 --> 00:45:36,050
not<font color="#E5E5E5"> protected</font><font color="#CCCCCC"> in any</font><font color="#E5E5E5"> way because why</font>

1301
00:45:35,300 --> 00:45:49,000
would you<font color="#CCCCCC"> need</font><font color="#E5E5E5"> to do that especially</font>

1302
00:45:36,050 --> 00:45:49,000
<font color="#E5E5E5">1997 but so</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> it looks like</font>

1303
00:45:52,150 --> 00:45:55,349
[Applause]

