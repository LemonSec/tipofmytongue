1
00:00:00,719 --> 00:00:03,040
presentation before the mid-afternoon

2
00:00:03,040 --> 00:00:06,799
break is if it's a stifovich thank you

3
00:00:06,799 --> 00:00:08,720
ibiza

4
00:00:08,720 --> 00:00:09,400
thank you

5
00:00:09,400 --> 00:00:12,639
[Applause]

6
00:00:12,639 --> 00:00:15,360
okay first of all thanks for your time

7
00:00:15,360 --> 00:00:17,840
it's nice to see people again uh

8
00:00:17,840 --> 00:00:19,920
gathering live and and exchanging

9
00:00:19,920 --> 00:00:22,240
information and not watching them

10
00:00:22,240 --> 00:00:25,599
through the display so

11
00:00:25,599 --> 00:00:28,000
i guess after the two years of pandemic

12
00:00:28,000 --> 00:00:29,359
it's you know

13
00:00:29,359 --> 00:00:32,159
something that we all wished for

14
00:00:32,159 --> 00:00:35,840
anyway enough the um small talk let's

15
00:00:35,840 --> 00:00:38,320
see what's what's on the menu today

16
00:00:38,320 --> 00:00:40,960
uh we're gonna be talking about abusing

17
00:00:40,960 --> 00:00:43,680
icmp uh version six

18
00:00:43,680 --> 00:00:46,079
to manipulate the network traffic

19
00:00:46,079 --> 00:00:47,280
so

20
00:00:47,280 --> 00:00:50,239
my name is youtipovic here's the email

21
00:00:50,239 --> 00:00:51,760
address that

22
00:00:51,760 --> 00:00:54,239
you can query for whatever

23
00:00:54,239 --> 00:00:55,920
questions you might have

24
00:00:55,920 --> 00:00:58,079
and then there's also a blog that i

25
00:00:58,079 --> 00:01:00,000
write from time to time when i come

26
00:01:00,000 --> 00:01:01,680
across um

27
00:01:01,680 --> 00:01:02,480
well

28
00:01:02,480 --> 00:01:03,760
interesting

29
00:01:03,760 --> 00:01:06,159
thing um from from the area of cyber

30
00:01:06,159 --> 00:01:07,360
security

31
00:01:07,360 --> 00:01:10,560
um this particular topic hasn't been

32
00:01:10,560 --> 00:01:12,799
published yet

33
00:01:12,799 --> 00:01:15,040
i wanted to share this first with you

34
00:01:15,040 --> 00:01:18,159
guys and then um publish it hopefully if

35
00:01:18,159 --> 00:01:19,759
it's any

36
00:01:19,759 --> 00:01:21,600
worth

37
00:01:21,600 --> 00:01:25,040
um a little bit about the agenda first

38
00:01:25,040 --> 00:01:27,680
we're going to just shortly explain what

39
00:01:27,680 --> 00:01:31,600
the icmp is now i know a lot of people

40
00:01:31,600 --> 00:01:33,040
probably know

41
00:01:33,040 --> 00:01:34,640
very well but

42
00:01:34,640 --> 00:01:37,200
i just want to make sure that

43
00:01:37,200 --> 00:01:39,040
those who are not familiar with the

44
00:01:39,040 --> 00:01:41,360
protocol understand the basics so that

45
00:01:41,360 --> 00:01:43,520
we're on the same page and they can you

46
00:01:43,520 --> 00:01:46,640
know follow the the presentation

47
00:01:46,640 --> 00:01:48,960
then we're going to take um a little

48
00:01:48,960 --> 00:01:52,880
deeper dive into the icmp and um

49
00:01:52,880 --> 00:01:56,159
explain what the icmp messages are how

50
00:01:56,159 --> 00:01:59,280
they operate and how we use and misuse

51
00:01:59,280 --> 00:02:00,719
them

52
00:02:00,719 --> 00:02:02,399
then i'm going to i'm going to give you

53
00:02:02,399 --> 00:02:04,320
the description of the two attacks that

54
00:02:04,320 --> 00:02:06,640
were in the scope of this presentation

55
00:02:06,640 --> 00:02:08,639
one actually deals with the route

56
00:02:08,639 --> 00:02:10,878
injection the other one is traffic

57
00:02:10,878 --> 00:02:11,920
direction

58
00:02:11,920 --> 00:02:15,680
um they're both facilitated by

59
00:02:15,680 --> 00:02:18,800
abusing the icmp messages so you know

60
00:02:18,800 --> 00:02:21,840
just to eliminate any confusion

61
00:02:21,840 --> 00:02:24,720
they are both in the scope of

62
00:02:24,720 --> 00:02:27,760
icmp manipulation

63
00:02:27,760 --> 00:02:29,840
then we are going to identify the root

64
00:02:29,840 --> 00:02:30,959
cause

65
00:02:30,959 --> 00:02:33,680
so essentially we will be identifying

66
00:02:33,680 --> 00:02:36,319
the setups and the parameters of your

67
00:02:36,319 --> 00:02:40,319
operating systems that allow or disallow

68
00:02:40,319 --> 00:02:42,160
this

69
00:02:42,160 --> 00:02:44,720
this attack from happening

70
00:02:44,720 --> 00:02:46,640
and then i'm going to show you the

71
00:02:46,640 --> 00:02:49,040
communication with vendor

72
00:02:49,040 --> 00:02:51,599
the reason for that is um

73
00:02:51,599 --> 00:02:52,560
after

74
00:02:52,560 --> 00:02:55,120
these number of experiments

75
00:02:55,120 --> 00:02:57,200
that i did and after realizing the

76
00:02:57,200 --> 00:02:59,440
behavior of the systems

77
00:02:59,440 --> 00:03:03,040
i wasn't quite sure whether the systems

78
00:03:03,040 --> 00:03:07,360
were designed to work that way or maybe

79
00:03:07,360 --> 00:03:08,480
it was

80
00:03:08,480 --> 00:03:11,120
about flaw in the design and maybe they

81
00:03:11,120 --> 00:03:13,120
were supposed to behave a bit

82
00:03:13,120 --> 00:03:15,599
differently

83
00:03:15,599 --> 00:03:17,280
and then at the end in the summary i'm

84
00:03:17,280 --> 00:03:19,040
going to give you the recommendations

85
00:03:19,040 --> 00:03:21,920
and and suggestions how you may prevent

86
00:03:21,920 --> 00:03:24,879
those attacks from happening

87
00:03:24,879 --> 00:03:28,400
so let's start with the icmp what it is

88
00:03:28,400 --> 00:03:30,560
it stands for the internet control

89
00:03:30,560 --> 00:03:33,280
message protocol now i deliberately

90
00:03:33,280 --> 00:03:36,159
emphasize this control part

91
00:03:36,159 --> 00:03:40,400
because um that means that the protocol

92
00:03:40,400 --> 00:03:44,400
is able to diagnose various conditions

93
00:03:44,400 --> 00:03:46,480
that happen in the network

94
00:03:46,480 --> 00:03:49,920
sometimes it's able to mitigate it

95
00:03:49,920 --> 00:03:54,000
um automatically sometimes they it just

96
00:03:54,000 --> 00:03:56,000
provides you the

97
00:03:56,000 --> 00:03:57,680
kind of an error message that may

98
00:03:57,680 --> 00:04:00,799
indicate the the root cause issue

99
00:04:00,799 --> 00:04:02,319
for example

100
00:04:02,319 --> 00:04:05,120
um rooting loops or packets not being

101
00:04:05,120 --> 00:04:07,200
forwarded to their

102
00:04:07,200 --> 00:04:10,799
desired destination is definitely one

103
00:04:10,799 --> 00:04:13,680
one of the groups of of the difficulties

104
00:04:13,680 --> 00:04:15,439
you might have i'm sure

105
00:04:15,439 --> 00:04:18,079
many of you know destination host

106
00:04:18,079 --> 00:04:20,798
unreachable destination net or port

107
00:04:20,798 --> 00:04:23,680
unreachable and so on and so forth so

108
00:04:23,680 --> 00:04:25,840
this particular message

109
00:04:25,840 --> 00:04:28,240
is actually processed and the result of

110
00:04:28,240 --> 00:04:30,160
of one of the

111
00:04:30,160 --> 00:04:32,800
icmp messages that are specially

112
00:04:32,800 --> 00:04:34,880
designed to deal with those

113
00:04:34,880 --> 00:04:36,000
defects

114
00:04:36,000 --> 00:04:39,520
another maybe less known is

115
00:04:39,520 --> 00:04:41,440
when packets are

116
00:04:41,440 --> 00:04:43,759
being too big to pass through the

117
00:04:43,759 --> 00:04:46,000
routing devices

118
00:04:46,000 --> 00:04:50,479
so this command just simulates it

119
00:04:51,520 --> 00:04:54,080
so it says packets needs to be

120
00:04:54,080 --> 00:04:57,600
fragmented but the don't fragment

121
00:04:57,600 --> 00:05:00,080
flag was set so that in other words

122
00:05:00,080 --> 00:05:04,479
means i constructed deliberately uh

123
00:05:04,479 --> 00:05:06,880
packet with excessive size

124
00:05:06,880 --> 00:05:09,840
that the network wasn't able to transmit

125
00:05:09,840 --> 00:05:12,800
and i explicitly said i don't want

126
00:05:12,800 --> 00:05:15,039
packets to be fragmented

127
00:05:15,039 --> 00:05:17,120
so the device saw the packet which was

128
00:05:17,120 --> 00:05:19,360
excessive and said hey i need to

129
00:05:19,360 --> 00:05:20,800
fragment it but

130
00:05:20,800 --> 00:05:23,039
you you disable this fragmentation so

131
00:05:23,039 --> 00:05:27,440
i'm there's nothing i can do with it

132
00:05:27,440 --> 00:05:29,520
and then the next group

133
00:05:29,520 --> 00:05:31,759
of issues is when the network is

134
00:05:31,759 --> 00:05:33,039
congested

135
00:05:33,039 --> 00:05:35,120
this

136
00:05:35,120 --> 00:05:36,000
this

137
00:05:36,000 --> 00:05:38,240
particular issue when the network is

138
00:05:38,240 --> 00:05:40,000
congested is um

139
00:05:40,000 --> 00:05:41,120
one of the

140
00:05:41,120 --> 00:05:43,919
is part of the of one of the attack that

141
00:05:43,919 --> 00:05:47,360
that i'm going to present so um

142
00:05:47,360 --> 00:05:50,400
long story short the purpose of the ic

143
00:05:50,400 --> 00:05:52,560
mp is

144
00:05:52,560 --> 00:05:55,680
network error reporting whatever

145
00:05:55,680 --> 00:05:58,160
or for the number of conditions that

146
00:05:58,160 --> 00:06:00,639
happen in the network where your traffic

147
00:06:00,639 --> 00:06:03,840
may not flow um as expected it will make

148
00:06:03,840 --> 00:06:07,199
sure to notify you what's going on

149
00:06:07,199 --> 00:06:09,600
so what's the basic assumption of the

150
00:06:09,600 --> 00:06:12,560
icmp abuse

151
00:06:12,560 --> 00:06:13,440
i

152
00:06:13,440 --> 00:06:14,639
want to make

153
00:06:14,639 --> 00:06:16,960
kind of an introduction before we dive

154
00:06:16,960 --> 00:06:20,800
uh deeper into the icmp abuse

155
00:06:20,800 --> 00:06:22,240
so

156
00:06:22,240 --> 00:06:25,280
the the difference uh between the upper

157
00:06:25,280 --> 00:06:27,199
and the lower part of the slide or the

158
00:06:27,199 --> 00:06:28,400
protocols

159
00:06:28,400 --> 00:06:30,800
is um no protocol inherent

160
00:06:30,800 --> 00:06:34,160
authentication so we have examples where

161
00:06:34,160 --> 00:06:36,639
you can perform various attacks

162
00:06:36,639 --> 00:06:41,199
and where protocols operate um

163
00:06:41,199 --> 00:06:43,840
yeah regularly

164
00:06:43,840 --> 00:06:46,720
and they do not impose any type of

165
00:06:46,720 --> 00:06:49,280
authentication for example our poisoning

166
00:06:49,280 --> 00:06:51,919
right so address resolution protocol

167
00:06:51,919 --> 00:06:54,479
that maps your ip address against the

168
00:06:54,479 --> 00:06:57,919
hardware address you can inject poison

169
00:06:57,919 --> 00:07:01,759
change the the entries in in that

170
00:07:01,759 --> 00:07:04,880
table without any authentication

171
00:07:04,880 --> 00:07:05,599
s

172
00:07:05,599 --> 00:07:07,440
smtp abuse

173
00:07:07,440 --> 00:07:10,800
simple mail transfer protocol

174
00:07:10,800 --> 00:07:15,360
is exactly um the same so you you

175
00:07:15,360 --> 00:07:18,880
probably know that um you can

176
00:07:18,880 --> 00:07:21,520
connect directly to the smtp port and

177
00:07:21,520 --> 00:07:22,639
then

178
00:07:22,639 --> 00:07:25,440
you would able to use various commands

179
00:07:25,440 --> 00:07:26,240
like

180
00:07:26,240 --> 00:07:28,960
in early days you you would you could

181
00:07:28,960 --> 00:07:31,919
verify the uh whether the email address

182
00:07:31,919 --> 00:07:34,080
is valid or not for the smtp you can

183
00:07:34,080 --> 00:07:36,880
even compose and send those emails

184
00:07:36,880 --> 00:07:40,319
and all that without the authentication

185
00:07:40,319 --> 00:07:43,919
um then dhcp ip allocation the same

186
00:07:43,919 --> 00:07:47,280
thing you have dhcp client on your

187
00:07:47,280 --> 00:07:49,759
laptop you connect to your network you

188
00:07:49,759 --> 00:07:52,479
get the ip address all good the problem

189
00:07:52,479 --> 00:07:56,560
is there is no inherent

190
00:07:56,560 --> 00:07:59,360
authentication in this protocol so this

191
00:07:59,360 --> 00:08:01,360
that means in other words that you may

192
00:08:01,360 --> 00:08:04,639
inject arbitrary payload into the dhcp

193
00:08:04,639 --> 00:08:05,840
packets

194
00:08:05,840 --> 00:08:06,639
so

195
00:08:06,639 --> 00:08:08,319
you know you might wonder

196
00:08:08,319 --> 00:08:09,520
so what

197
00:08:09,520 --> 00:08:10,960
well

198
00:08:10,960 --> 00:08:13,199
in one of the presentation i i had last

199
00:08:13,199 --> 00:08:15,120
year i actually demonstrated the

200
00:08:15,120 --> 00:08:17,199
capability that

201
00:08:17,199 --> 00:08:20,080
if your network is configured to allow a

202
00:08:20,080 --> 00:08:22,560
location of ip addresses only to a

203
00:08:22,560 --> 00:08:24,639
certain type of devices

204
00:08:24,639 --> 00:08:26,479
for example your

205
00:08:26,479 --> 00:08:28,240
windows

206
00:08:28,240 --> 00:08:30,560
clients that are equipped with the

207
00:08:30,560 --> 00:08:32,559
digitally signed certificate issued by

208
00:08:32,559 --> 00:08:35,039
your company right so it checks whether

209
00:08:35,039 --> 00:08:37,039
this is okay if not

210
00:08:37,039 --> 00:08:38,559
then um

211
00:08:38,559 --> 00:08:40,479
you're not getting the ip address

212
00:08:40,479 --> 00:08:41,599
so

213
00:08:41,599 --> 00:08:44,240
what was possible to do

214
00:08:44,240 --> 00:08:47,519
was to construct the payload for dhcp

215
00:08:47,519 --> 00:08:50,959
request such that it masqueraded the

216
00:08:50,959 --> 00:08:53,200
identity of the client so for example i

217
00:08:53,200 --> 00:08:55,360
had the script running on the linux and

218
00:08:55,360 --> 00:08:57,920
then i injected the signature of windows

219
00:08:57,920 --> 00:09:01,360
client or hp laserjet printer or cisco

220
00:09:01,360 --> 00:09:03,360
ap

221
00:09:03,360 --> 00:09:05,680
access point and then i was able to

222
00:09:05,680 --> 00:09:06,839
actually

223
00:09:06,839 --> 00:09:08,480
um

224
00:09:08,480 --> 00:09:11,839
disguised as a different type of client

225
00:09:11,839 --> 00:09:15,200
bgp rooting protocol the same it has no

226
00:09:15,200 --> 00:09:19,080
inherent authentication now there is

227
00:09:19,080 --> 00:09:22,399
md5 based authentication option but it's

228
00:09:22,399 --> 00:09:25,040
not the inherent feature of the protocol

229
00:09:25,040 --> 00:09:27,200
of the application layer it's imposed by

230
00:09:27,200 --> 00:09:28,640
the lower

231
00:09:28,640 --> 00:09:31,360
layers of aussie model

232
00:09:31,360 --> 00:09:32,240
so

233
00:09:32,240 --> 00:09:35,600
the first group are some of the examples

234
00:09:35,600 --> 00:09:38,720
of the protocols that do not use

235
00:09:38,720 --> 00:09:41,920
authentication hence their exploitation

236
00:09:41,920 --> 00:09:45,040
is kind of easier than the second group

237
00:09:45,040 --> 00:09:47,680
so the second group is

238
00:09:47,680 --> 00:09:50,720
dot one x pop3 https

239
00:09:50,720 --> 00:09:54,560
um ssh telnet ftp all of those protocols

240
00:09:54,560 --> 00:09:57,440
require some form of authentication like

241
00:09:57,440 --> 00:09:58,800
dot one x

242
00:09:58,800 --> 00:10:01,120
again maybe for those not familiar with

243
00:10:01,120 --> 00:10:02,640
with the acronym

244
00:10:02,640 --> 00:10:04,800
is the protocol that will verify the

245
00:10:04,800 --> 00:10:07,920
identity of your client

246
00:10:07,920 --> 00:10:10,240
not only identity some other features

247
00:10:10,240 --> 00:10:10,959
too

248
00:10:10,959 --> 00:10:12,880
before it's allowed to access the

249
00:10:12,880 --> 00:10:13,920
network

250
00:10:13,920 --> 00:10:16,160
so the idea is someone comes with the

251
00:10:16,160 --> 00:10:19,440
wrong laptop plugs it into your

252
00:10:19,440 --> 00:10:22,079
corporate network and he gets the ip

253
00:10:22,079 --> 00:10:24,480
address and can do whatever he wants no

254
00:10:24,480 --> 00:10:28,480
dot one x will make sure okay there is a

255
00:10:28,480 --> 00:10:31,279
specific type of the device there is a

256
00:10:31,279 --> 00:10:33,279
digital certificate issued by your

257
00:10:33,279 --> 00:10:34,959
company and so on

258
00:10:34,959 --> 00:10:36,160
pop3

259
00:10:36,160 --> 00:10:38,320
um is the protocol that downloads

260
00:10:38,320 --> 00:10:40,720
messages from the

261
00:10:40,720 --> 00:10:42,640
into your inbox your

262
00:10:42,640 --> 00:10:45,600
email messages into your inbox and again

263
00:10:45,600 --> 00:10:47,839
it it requires authentication to

264
00:10:47,839 --> 00:10:52,240
identify the owner of the inbox https

265
00:10:52,240 --> 00:10:53,680
i'm not wasting

266
00:10:53,680 --> 00:10:56,320
my words on that you all know e-banking

267
00:10:56,320 --> 00:10:58,000
shopping

268
00:10:58,000 --> 00:10:59,920
all those sites require some kind of

269
00:10:59,920 --> 00:11:01,360
authentication

270
00:11:01,360 --> 00:11:04,320
again ssh telnet ftp you know even the

271
00:11:04,320 --> 00:11:06,560
old ones ancient ones like telnet and

272
00:11:06,560 --> 00:11:10,880
ftp still require authentication

273
00:11:10,880 --> 00:11:11,680
so

274
00:11:11,680 --> 00:11:14,720
having understood that

275
00:11:14,720 --> 00:11:17,920
let's just briefly outline the

276
00:11:17,920 --> 00:11:20,000
difference or the similarities between

277
00:11:20,000 --> 00:11:21,360
icmp

278
00:11:21,360 --> 00:11:24,800
version 6 and version 4 message types

279
00:11:24,800 --> 00:11:27,680
maybe it wasn't clear v4 and v6 refers

280
00:11:27,680 --> 00:11:31,920
to the ip addresses like ipv version 4

281
00:11:31,920 --> 00:11:34,720
and ipv6

282
00:11:34,720 --> 00:11:38,480
but essentially if we abstract some

283
00:11:38,480 --> 00:11:40,959
low-level technical details

284
00:11:40,959 --> 00:11:43,440
icmp version 4 and

285
00:11:43,440 --> 00:11:44,320
6

286
00:11:44,320 --> 00:11:47,920
are the same or very similar in terms of

287
00:11:47,920 --> 00:11:50,720
their common functionality so the both

288
00:11:50,720 --> 00:11:54,399
protocols must be able to handle

289
00:11:54,399 --> 00:11:57,839
um certain conditions that that occur in

290
00:11:57,839 --> 00:12:00,959
the network and give you a proper error

291
00:12:00,959 --> 00:12:03,359
message

292
00:12:04,560 --> 00:12:05,279
so

293
00:12:05,279 --> 00:12:08,800
um let's see what icmp v6 message types

294
00:12:08,800 --> 00:12:10,639
are

295
00:12:10,639 --> 00:12:11,920
briefly

296
00:12:11,920 --> 00:12:15,360
said icmp message types are specific

297
00:12:15,360 --> 00:12:17,040
messages

298
00:12:17,040 --> 00:12:21,120
that are designated to deal with

299
00:12:21,120 --> 00:12:24,480
specific condition in the network so

300
00:12:24,480 --> 00:12:26,720
there's a long list right it's it's not

301
00:12:26,720 --> 00:12:28,880
exhaustive you can you can have a look

302
00:12:28,880 --> 00:12:31,200
at its complete description

303
00:12:31,200 --> 00:12:33,680
uh into this url

304
00:12:33,680 --> 00:12:36,480
uh the two that we will be talking about

305
00:12:36,480 --> 00:12:39,519
today are the router advertisement and

306
00:12:39,519 --> 00:12:41,200
redirect messages

307
00:12:41,200 --> 00:12:42,399
but you will

308
00:12:42,399 --> 00:12:44,399
recognize some others that are well

309
00:12:44,399 --> 00:12:47,839
known like echo request echo reply pack

310
00:12:47,839 --> 00:12:50,959
it's too big time exceeded and so on so

311
00:12:50,959 --> 00:12:52,800
each one of these

312
00:12:52,800 --> 00:12:57,839
is able to manage specific condition

313
00:12:57,839 --> 00:12:59,760
so let's see now the difference between

314
00:12:59,760 --> 00:13:01,600
legitimate

315
00:13:01,600 --> 00:13:02,639
and

316
00:13:02,639 --> 00:13:04,800
legitimate use and abuse of the

317
00:13:04,800 --> 00:13:08,160
protocols legitimate use is when your

318
00:13:08,160 --> 00:13:10,639
network device or devices

319
00:13:10,639 --> 00:13:12,079
announce issue with the network

320
00:13:12,079 --> 00:13:14,560
congestion and require that the network

321
00:13:14,560 --> 00:13:17,519
traffic is rooted via

322
00:13:17,519 --> 00:13:19,760
alternative ip address

323
00:13:19,760 --> 00:13:22,959
now that obviously is legitimate i p

324
00:13:22,959 --> 00:13:26,079
address your router whatever

325
00:13:26,079 --> 00:13:29,360
the abuse happens when the attacker

326
00:13:29,360 --> 00:13:30,880
inserts

327
00:13:30,880 --> 00:13:32,639
the rogue device

328
00:13:32,639 --> 00:13:35,600
that constructs the network

329
00:13:35,600 --> 00:13:37,519
redirect packets via the attacker's

330
00:13:37,519 --> 00:13:40,000
device now this is a bit complicated so

331
00:13:40,000 --> 00:13:43,120
let me just clarify this last sentence

332
00:13:43,120 --> 00:13:46,480
so rogue device is

333
00:13:46,480 --> 00:13:48,079
with the attacker's device that he

334
00:13:48,079 --> 00:13:50,720
possesses and inserts somewhere into the

335
00:13:50,720 --> 00:13:51,839
network

336
00:13:51,839 --> 00:13:54,160
um constructs what does it mean

337
00:13:54,160 --> 00:13:56,320
constructs that means

338
00:13:56,320 --> 00:13:58,399
that we are building the packet from the

339
00:13:58,399 --> 00:14:00,880
scratch that means we are using the

340
00:14:00,880 --> 00:14:03,760
tools that allow us to change each

341
00:14:03,760 --> 00:14:06,480
single header of the package

342
00:14:06,480 --> 00:14:10,000
thus allowing us to you know change its

343
00:14:10,000 --> 00:14:13,279
parameters according to our needs

344
00:14:13,279 --> 00:14:16,079
and then finally the result of those

345
00:14:16,079 --> 00:14:18,720
packets will be redirection of the

346
00:14:18,720 --> 00:14:22,240
traffic via the attacker's device

347
00:14:22,240 --> 00:14:24,720
so the typical scenario looks like this

348
00:14:24,720 --> 00:14:28,000
so the client wants to load google.com

349
00:14:28,000 --> 00:14:30,800
it sends its packet to a default gateway

350
00:14:30,800 --> 00:14:32,800
which normally forwards the packets to

351
00:14:32,800 --> 00:14:34,959
the internet and loads the

352
00:14:34,959 --> 00:14:36,399
loads the

353
00:14:36,399 --> 00:14:38,560
desired site however

354
00:14:38,560 --> 00:14:41,199
in a legitimate case

355
00:14:41,199 --> 00:14:43,440
of a network problem the default gateway

356
00:14:43,440 --> 00:14:45,920
responds with well you know what i

357
00:14:45,920 --> 00:14:48,160
cannot

358
00:14:48,160 --> 00:14:49,680
process your traffic please use the

359
00:14:49,680 --> 00:14:51,360
alternative gateway

360
00:14:51,360 --> 00:14:54,720
and then via icmp message that instructs

361
00:14:54,720 --> 00:14:56,160
the

362
00:14:56,160 --> 00:14:57,600
the user to

363
00:14:57,600 --> 00:14:59,279
redirect the traffic

364
00:14:59,279 --> 00:15:02,240
um the the network stack will do that

365
00:15:02,240 --> 00:15:04,399
automatically and send the packets where

366
00:15:04,399 --> 00:15:07,760
via alternative gateway

367
00:15:08,720 --> 00:15:11,519
now um the two attacks that we're going

368
00:15:11,519 --> 00:15:15,040
to talk about is our icmp redirect and

369
00:15:15,040 --> 00:15:17,760
router discovery protocol i'm not

370
00:15:17,760 --> 00:15:20,160
talking about any kinds of floods or or

371
00:15:20,160 --> 00:15:22,079
denial of service

372
00:15:22,079 --> 00:15:22,959
so

373
00:15:22,959 --> 00:15:26,399
the icmp redirect is the when the

374
00:15:26,399 --> 00:15:28,000
gateway is no longer

375
00:15:28,000 --> 00:15:29,759
uh the best route

376
00:15:29,759 --> 00:15:32,880
so it it sends a message telling

377
00:15:32,880 --> 00:15:35,199
you know what use the alternative

378
00:15:35,199 --> 00:15:37,920
route or the alternative ip address

379
00:15:37,920 --> 00:15:41,199
now when abusing this another gateway

380
00:15:41,199 --> 00:15:43,279
this alternative route is actually

381
00:15:43,279 --> 00:15:45,440
attackers control device

382
00:15:45,440 --> 00:15:47,199
so

383
00:15:47,199 --> 00:15:49,519
to make it more graphical you have the

384
00:15:49,519 --> 00:15:51,759
router on the upper

385
00:15:51,759 --> 00:15:53,440
right corner

386
00:15:53,440 --> 00:15:56,560
who that injects

387
00:15:56,560 --> 00:15:58,800
the payload the the

388
00:15:58,800 --> 00:16:02,000
icmp redirect message into the victim

389
00:16:02,000 --> 00:16:05,199
and as a result victim redirects all of

390
00:16:05,199 --> 00:16:07,519
its traffic through the attacker's

391
00:16:07,519 --> 00:16:10,639
control device now in this case you see

392
00:16:10,639 --> 00:16:11,920
the router

393
00:16:11,920 --> 00:16:14,560
and the laptop being two separate device

394
00:16:14,560 --> 00:16:16,560
this is not the restriction or the

395
00:16:16,560 --> 00:16:18,800
requirement of the attack you can have

396
00:16:18,800 --> 00:16:22,160
one device serving both roles so the

397
00:16:22,160 --> 00:16:24,880
example would be you deploy linux

398
00:16:24,880 --> 00:16:26,959
with your attacking scripts that inject

399
00:16:26,959 --> 00:16:29,120
the traffic and you run some kind of

400
00:16:29,120 --> 00:16:31,199
network monitor to to capture the

401
00:16:31,199 --> 00:16:33,440
traffic

402
00:16:33,440 --> 00:16:36,880
uh the other attack router discovery or

403
00:16:36,880 --> 00:16:38,639
advertisement message is very

404
00:16:38,639 --> 00:16:41,199
straightforward that essentially means

405
00:16:41,199 --> 00:16:44,800
that the attacker will inject the root

406
00:16:44,800 --> 00:16:47,440
specific route into the victim's

407
00:16:47,440 --> 00:16:51,199
local routing table

408
00:16:51,199 --> 00:16:54,000
so the design of the attacks the first

409
00:16:54,000 --> 00:16:55,040
one

410
00:16:55,040 --> 00:16:56,639
is the

411
00:16:56,639 --> 00:16:59,519
well easier one to to understand

412
00:16:59,519 --> 00:17:02,959
the attacker will simply inject the

413
00:17:02,959 --> 00:17:05,919
arbitrary ipv6 root i i called it that

414
00:17:05,919 --> 00:17:07,760
beef just because it's simple to

415
00:17:07,760 --> 00:17:10,640
remember and and to to notice in in

416
00:17:10,640 --> 00:17:12,319
various artifacts

417
00:17:12,319 --> 00:17:14,160
so this route gets injected into the

418
00:17:14,160 --> 00:17:15,520
victim host

419
00:17:15,520 --> 00:17:19,760
and now the victim host can actually

420
00:17:19,760 --> 00:17:22,480
reach the the desired

421
00:17:22,480 --> 00:17:25,199
route or the desired ip addresses via

422
00:17:25,199 --> 00:17:27,919
the attacker

423
00:17:28,079 --> 00:17:29,200
so

424
00:17:29,200 --> 00:17:32,320
let's see a little bit of the mechanics

425
00:17:32,320 --> 00:17:33,760
of the attack

426
00:17:33,760 --> 00:17:36,080
so on the right hand side you have

427
00:17:36,080 --> 00:17:38,480
actually the packet that causes this

428
00:17:38,480 --> 00:17:40,400
injection so

429
00:17:40,400 --> 00:17:43,679
um it's the router advertisement that's

430
00:17:43,679 --> 00:17:45,679
a specific um

431
00:17:45,679 --> 00:17:48,400
icmp message type you can see it in

432
00:17:48,400 --> 00:17:52,000
other rectangle that it has its id 134

433
00:17:52,000 --> 00:17:55,440
so it's one of those icmp messages we

434
00:17:55,440 --> 00:17:56,960
were talking about

435
00:17:56,960 --> 00:17:58,160
and then

436
00:17:58,160 --> 00:18:00,240
at the bottom of the right hand side you

437
00:18:00,240 --> 00:18:03,039
see the prefix that's actually the

438
00:18:03,039 --> 00:18:05,520
payload that is contained in the router

439
00:18:05,520 --> 00:18:07,760
advertisement this essentially says hey

440
00:18:07,760 --> 00:18:09,440
you know what inject the root for that

441
00:18:09,440 --> 00:18:10,559
beef

442
00:18:10,559 --> 00:18:12,880
and that's it on the left hand side you

443
00:18:12,880 --> 00:18:15,600
simply inspect the local routing table

444
00:18:15,600 --> 00:18:18,320
of the of the linux host and you will

445
00:18:18,320 --> 00:18:21,840
see this route gets happily injected and

446
00:18:21,840 --> 00:18:22,960
it says

447
00:18:22,960 --> 00:18:25,919
the dead beef is reachable via the ipv6

448
00:18:25,919 --> 00:18:29,520
address of your attacking

449
00:18:29,520 --> 00:18:31,919
of your right hand side

450
00:18:31,919 --> 00:18:34,799
attacking device

451
00:18:35,039 --> 00:18:37,919
um i'm not going to bother you a lot

452
00:18:37,919 --> 00:18:41,200
with with the theory around the packet

453
00:18:41,200 --> 00:18:44,080
structure i'm just going to say this we

454
00:18:44,080 --> 00:18:47,919
are using this icmp v6 options the the

455
00:18:47,919 --> 00:18:50,640
lower part of the packet that actually

456
00:18:50,640 --> 00:18:52,880
specifies our payload so it's this one

457
00:18:52,880 --> 00:18:55,600
here this prefix you see it belongs to

458
00:18:55,600 --> 00:18:58,480
the icmp v6 option

459
00:18:58,480 --> 00:19:01,039
paragraph

460
00:19:01,039 --> 00:19:02,320
um

461
00:19:02,320 --> 00:19:04,400
the rest of the explanations about the

462
00:19:04,400 --> 00:19:07,280
package you can find here but we're not

463
00:19:07,280 --> 00:19:08,840
going into

464
00:19:08,840 --> 00:19:12,960
this now um let me clarify this kind of

465
00:19:12,960 --> 00:19:16,799
ugly construct um kind of cryptic stuff

466
00:19:16,799 --> 00:19:19,440
so it it's a construct that that

467
00:19:19,440 --> 00:19:21,919
was made in in scopi

468
00:19:21,919 --> 00:19:24,960
so scopy is a network library that

469
00:19:24,960 --> 00:19:27,760
that is used in conjunction with python

470
00:19:27,760 --> 00:19:28,720
and it's

471
00:19:28,720 --> 00:19:31,679
one of its features is the capability to

472
00:19:31,679 --> 00:19:34,160
construct the packet from the scratch

473
00:19:34,160 --> 00:19:35,280
that means

474
00:19:35,280 --> 00:19:38,559
you can change and alter every single

475
00:19:38,559 --> 00:19:40,400
part of the package including layer

476
00:19:40,400 --> 00:19:41,840
three layer two

477
00:19:41,840 --> 00:19:44,640
headers and and and so on so what this

478
00:19:44,640 --> 00:19:48,559
means is we're generating the icmp v6 we

479
00:19:48,559 --> 00:19:50,799
know that and this stands for network

480
00:19:50,799 --> 00:19:53,039
discovery it's it's a

481
00:19:53,039 --> 00:19:56,720
subset of of um of the functionality

482
00:19:56,720 --> 00:20:00,880
and that um ra is router advertisement

483
00:20:00,880 --> 00:20:03,440
and then the next payload is

484
00:20:03,440 --> 00:20:06,880
root info root info is a specific

485
00:20:06,880 --> 00:20:09,520
message type in the rotary advertisement

486
00:20:09,520 --> 00:20:12,320
that does our injection and you see the

487
00:20:12,320 --> 00:20:15,039
the prefix which is um

488
00:20:15,039 --> 00:20:18,320
which is our route that we inject so the

489
00:20:18,320 --> 00:20:20,799
examples were tried with various

490
00:20:20,799 --> 00:20:23,120
operating systems so i was just

491
00:20:23,120 --> 00:20:24,799
experimenting to see

492
00:20:24,799 --> 00:20:28,400
if um if the vulnerability is actually

493
00:20:28,400 --> 00:20:31,760
applicable to all of them

494
00:20:32,559 --> 00:20:34,880
this is again the the same

495
00:20:34,880 --> 00:20:37,679
attack but a different variation so i

496
00:20:37,679 --> 00:20:40,080
you know i changed the prefix and and i

497
00:20:40,080 --> 00:20:42,080
launched the attack against windows this

498
00:20:42,080 --> 00:20:45,280
time um i think this one shows the

499
00:20:45,280 --> 00:20:47,280
windows 2019

500
00:20:47,280 --> 00:20:50,480
so again the same thing um you see the

501
00:20:50,480 --> 00:20:52,559
the root being injected into into the

502
00:20:52,559 --> 00:20:54,640
local table

503
00:20:54,640 --> 00:20:56,159
so um

504
00:20:56,159 --> 00:20:58,400
with the same payload so essentially we

505
00:20:58,400 --> 00:21:00,159
can confirm at this stage that both

506
00:21:00,159 --> 00:21:03,520
linux and windows servers are vulnerable

507
00:21:03,520 --> 00:21:04,559
to this

508
00:21:04,559 --> 00:21:05,520
same

509
00:21:05,520 --> 00:21:07,280
um attack or

510
00:21:07,280 --> 00:21:09,840
that the the same concept

511
00:21:09,840 --> 00:21:10,720
so

512
00:21:10,720 --> 00:21:14,000
why or what what is exactly the the root

513
00:21:14,000 --> 00:21:15,039
cause

514
00:21:15,039 --> 00:21:16,480
on windows

515
00:21:16,480 --> 00:21:18,640
there is this feature called router

516
00:21:18,640 --> 00:21:20,320
discovery

517
00:21:20,320 --> 00:21:21,520
um

518
00:21:21,520 --> 00:21:23,919
it's it's one of the attributes

519
00:21:23,919 --> 00:21:26,960
assigned to to the interface

520
00:21:26,960 --> 00:21:31,240
and by default it's enabled

521
00:21:34,240 --> 00:21:36,960
root cause in linux is essentially the

522
00:21:36,960 --> 00:21:38,960
same it's just

523
00:21:38,960 --> 00:21:42,159
labeled differently

524
00:21:42,480 --> 00:21:46,240
we will be explaining those parameters a

525
00:21:46,240 --> 00:21:48,159
little bit later when i'm going to talk

526
00:21:48,159 --> 00:21:50,640
about what you can do to to prevent the

527
00:21:50,640 --> 00:21:51,840
attacks

528
00:21:51,840 --> 00:21:54,799
but essentially those um maybe not very

529
00:21:54,799 --> 00:21:55,919
intuitive

530
00:21:55,919 --> 00:21:58,799
underlying ra stands for router

531
00:21:58,799 --> 00:22:01,760
advertisement and as you might imagine

532
00:22:01,760 --> 00:22:04,240
or as you might know one

533
00:22:04,240 --> 00:22:05,600
would be

534
00:22:05,600 --> 00:22:07,440
would be representing the the feature

535
00:22:07,440 --> 00:22:10,159
that's enabled whereas zero

536
00:22:10,159 --> 00:22:12,720
would show that the same feature is

537
00:22:12,720 --> 00:22:15,360
disabled

538
00:22:16,880 --> 00:22:21,440
okay so i'm just going to explain the

539
00:22:21,440 --> 00:22:22,880
the the

540
00:22:22,880 --> 00:22:24,960
two combined attacks

541
00:22:24,960 --> 00:22:27,280
and and their logic

542
00:22:27,280 --> 00:22:28,000
so

543
00:22:28,000 --> 00:22:30,320
bear with me with this one it looks ugly

544
00:22:30,320 --> 00:22:32,960
but but it's actually not

545
00:22:32,960 --> 00:22:36,080
so the right hand side is the attacker's

546
00:22:36,080 --> 00:22:39,520
side the left-hand side is victim server

547
00:22:39,520 --> 00:22:43,840
so in my concrete example i had this

548
00:22:43,840 --> 00:22:45,760
router on the upper

549
00:22:45,760 --> 00:22:48,720
right corner

550
00:22:48,720 --> 00:22:51,600
which was mimicked by kali kali is a

551
00:22:51,600 --> 00:22:55,039
linux platform design for pen testers

552
00:22:55,039 --> 00:22:57,440
so but you could actually do the same

553
00:22:57,440 --> 00:23:01,840
with any other linux or even windows

554
00:23:01,840 --> 00:23:05,840
and the windows 10 is a different device

555
00:23:05,840 --> 00:23:08,400
but as i said in the beginning

556
00:23:08,400 --> 00:23:11,679
you can perform the same attacks

557
00:23:11,679 --> 00:23:15,840
by having both luther and and

558
00:23:15,840 --> 00:23:16,640
this

559
00:23:16,640 --> 00:23:20,159
device at the end being the same device

560
00:23:20,159 --> 00:23:21,520
so

561
00:23:21,520 --> 00:23:24,880
we started by um cali injecting the

562
00:23:24,880 --> 00:23:28,080
dead beef root into the windows or

563
00:23:28,080 --> 00:23:31,360
any other things that i tried and then

564
00:23:31,360 --> 00:23:33,919
essentially the result is if if you ping

565
00:23:33,919 --> 00:23:37,520
or try to access anything um

566
00:23:37,520 --> 00:23:40,480
in the in the dead beef

567
00:23:40,480 --> 00:23:42,960
root range the the request would be

568
00:23:42,960 --> 00:23:45,200
simply forwarded to your

569
00:23:45,200 --> 00:23:48,000
attacking device that injected the root

570
00:23:48,000 --> 00:23:50,000
so that that essentially concludes the

571
00:23:50,000 --> 00:23:52,720
first attack now the second phase

572
00:23:52,720 --> 00:23:57,039
uh i superimposed another script that

573
00:23:57,039 --> 00:24:00,400
injects the icmp redirect packets into

574
00:24:00,400 --> 00:24:03,120
the victim so what this will do

575
00:24:03,120 --> 00:24:05,919
is it will tell the victim you know what

576
00:24:05,919 --> 00:24:08,799
when you're sending traffic to your dead

577
00:24:08,799 --> 00:24:11,600
beef stuff you're no longer sending it

578
00:24:11,600 --> 00:24:13,520
to your um

579
00:24:13,520 --> 00:24:16,320
kali device or or

580
00:24:16,320 --> 00:24:18,720
let's say legitimate device that you

581
00:24:18,720 --> 00:24:21,440
would in normal circumstances have

582
00:24:21,440 --> 00:24:22,960
but rather

583
00:24:22,960 --> 00:24:25,039
you will redirect the whole traffic

584
00:24:25,039 --> 00:24:27,520
through the attacker in this case

585
00:24:27,520 --> 00:24:30,320
windows 10 client

586
00:24:30,320 --> 00:24:33,039
as a result of that any traffic that's

587
00:24:33,039 --> 00:24:34,640
initiated

588
00:24:34,640 --> 00:24:39,039
on the victim server be it ftp web h ssh

589
00:24:39,039 --> 00:24:42,799
ping will actually be redirected um

590
00:24:42,799 --> 00:24:46,240
through the attacker's device now

591
00:24:46,240 --> 00:24:47,919
obviously the choice of what you're

592
00:24:47,919 --> 00:24:50,159
going to do with scenario is yours like

593
00:24:50,159 --> 00:24:52,799
you can simply inspect the traffic and

594
00:24:52,799 --> 00:24:53,600
then

595
00:24:53,600 --> 00:24:56,159
capture potentially sensitive data or

596
00:24:56,159 --> 00:24:59,440
you may alter the traffic and

597
00:24:59,440 --> 00:25:01,840
you can simply you know put it into the

598
00:25:01,840 --> 00:25:04,000
dev null and and cause the denial of

599
00:25:04,000 --> 00:25:05,200
service

600
00:25:05,200 --> 00:25:06,480
um

601
00:25:06,480 --> 00:25:07,919
the the one

602
00:25:07,919 --> 00:25:09,760
kind of dangerous scenario is where you

603
00:25:09,760 --> 00:25:12,159
have configured attacker device to

604
00:25:12,159 --> 00:25:14,400
forward this traffic even further to the

605
00:25:14,400 --> 00:25:17,200
legitimate device so the the user the

606
00:25:17,200 --> 00:25:19,279
victim doesn't have a feeling that

607
00:25:19,279 --> 00:25:21,600
anything's is wrong

608
00:25:21,600 --> 00:25:23,279
but then you're

609
00:25:23,279 --> 00:25:24,880
tunneling all the traffic through your

610
00:25:24,880 --> 00:25:26,400
device and

611
00:25:26,400 --> 00:25:30,400
do we with it whatever you want

612
00:25:30,400 --> 00:25:31,760
so um

613
00:25:31,760 --> 00:25:35,360
again uh just a little bit of lower

614
00:25:35,360 --> 00:25:38,240
details around icmp redirect

615
00:25:38,240 --> 00:25:42,799
essentially we choose or define the ipv6

616
00:25:42,799 --> 00:25:45,360
address that we want to use

617
00:25:45,360 --> 00:25:48,000
as as our attacker's device

618
00:25:48,000 --> 00:25:50,480
and we defined that in the tgt which

619
00:25:50,480 --> 00:25:52,240
stands for target

620
00:25:52,240 --> 00:25:54,000
essentially telling the traffic you know

621
00:25:54,000 --> 00:25:56,640
what all the traffic destined for

622
00:25:56,640 --> 00:25:58,159
destination

623
00:25:58,159 --> 00:26:00,799
should actually be redirected to to the

624
00:26:00,799 --> 00:26:02,559
target

625
00:26:02,559 --> 00:26:04,159
so again

626
00:26:04,159 --> 00:26:05,440
uh just to

627
00:26:05,440 --> 00:26:08,320
outline the setup windows 10 is a

628
00:26:08,320 --> 00:26:11,600
target in our case um

629
00:26:11,600 --> 00:26:14,480
and destination is um

630
00:26:14,480 --> 00:26:16,720
the the the traffic destined for that

631
00:26:16,720 --> 00:26:19,520
beef is is redirected through

632
00:26:19,520 --> 00:26:20,400
um

633
00:26:20,400 --> 00:26:23,279
through the attacker

634
00:26:23,760 --> 00:26:26,000
now this slide just shows you the the

635
00:26:26,000 --> 00:26:29,200
structure of the packet again um

636
00:26:29,200 --> 00:26:31,039
the important thing is you see that the

637
00:26:31,039 --> 00:26:33,279
type of the message which is redirect

638
00:26:33,279 --> 00:26:35,760
you are you also see that that type has

639
00:26:35,760 --> 00:26:39,760
that specific id and the two

640
00:26:39,760 --> 00:26:42,080
important parameters that we are using

641
00:26:42,080 --> 00:26:45,520
actually abusing are the target address

642
00:26:45,520 --> 00:26:48,080
which represents our device

643
00:26:48,080 --> 00:26:50,720
that's intercepting the traffic

644
00:26:50,720 --> 00:26:52,960
and the destination address that is

645
00:26:52,960 --> 00:26:54,240
actually the

646
00:26:54,240 --> 00:26:56,400
um aimed

647
00:26:56,400 --> 00:26:59,760
legitimate destination

648
00:26:59,760 --> 00:27:01,279
again um

649
00:27:01,279 --> 00:27:03,440
not going too deep into the the

650
00:27:03,440 --> 00:27:04,880
structure here

651
00:27:04,880 --> 00:27:08,240
um so you recognize the target and

652
00:27:08,240 --> 00:27:10,720
destination address these are the two

653
00:27:10,720 --> 00:27:13,039
fields that i was using that was enough

654
00:27:13,039 --> 00:27:13,840
to

655
00:27:13,840 --> 00:27:16,480
um to complete those attacks

656
00:27:16,480 --> 00:27:19,200
uh there are some other options in in in

657
00:27:19,200 --> 00:27:23,360
the lower icmpv6 options

658
00:27:23,360 --> 00:27:28,479
layer but um i did not touch this at all

659
00:27:28,640 --> 00:27:29,440
so

660
00:27:29,440 --> 00:27:32,159
if you want to find out more uh

661
00:27:32,159 --> 00:27:35,360
about specific features or specific

662
00:27:35,360 --> 00:27:37,919
attributes of of the packets that you

663
00:27:37,919 --> 00:27:39,279
might want to

664
00:27:39,279 --> 00:27:41,840
misuse

665
00:27:42,559 --> 00:27:45,679
i recommend you loading the rfc

666
00:27:45,679 --> 00:27:48,320
um it's pretty long document but on the

667
00:27:48,320 --> 00:27:50,880
other hand you get very nice and clear

668
00:27:50,880 --> 00:27:53,360
explanations what exactly the target

669
00:27:53,360 --> 00:27:55,520
address is what is the destination

670
00:27:55,520 --> 00:27:57,760
address i know from my own experience

671
00:27:57,760 --> 00:27:59,520
like i couldn't figure out the

672
00:27:59,520 --> 00:28:01,120
difference when i first read that you

673
00:28:01,120 --> 00:28:03,039
know like target destination is the same

674
00:28:03,039 --> 00:28:04,640
well it's not

675
00:28:04,640 --> 00:28:07,279
and then um each message with with

676
00:28:07,279 --> 00:28:10,559
specific type is is described so um i

677
00:28:10,559 --> 00:28:12,960
you know highly recommend that stuff if

678
00:28:12,960 --> 00:28:14,080
you want to

679
00:28:14,080 --> 00:28:16,320
dig in deeper

680
00:28:16,320 --> 00:28:19,200
um this one is actually the complete

681
00:28:19,200 --> 00:28:20,880
reconstruction

682
00:28:20,880 --> 00:28:22,880
of the attack

683
00:28:22,880 --> 00:28:25,760
so among all those entries only the the

684
00:28:25,760 --> 00:28:27,919
red ones are important so

685
00:28:27,919 --> 00:28:29,520
um

686
00:28:29,520 --> 00:28:31,600
the the the thing as we mentioned

687
00:28:31,600 --> 00:28:34,320
started by sending uh by injecting the

688
00:28:34,320 --> 00:28:35,919
root into the

689
00:28:35,919 --> 00:28:38,559
into the victim on the left hand side

690
00:28:38,559 --> 00:28:41,279
so when the victim sends

691
00:28:41,279 --> 00:28:42,840
ping in this

692
00:28:42,840 --> 00:28:45,840
example being to this specific route

693
00:28:45,840 --> 00:28:48,000
that was injected

694
00:28:48,000 --> 00:28:50,640
it gets redirected

695
00:28:50,640 --> 00:28:54,080
to the kali which imitates our

696
00:28:54,080 --> 00:28:56,159
legitimate router

697
00:28:56,159 --> 00:28:59,679
so what what what kali does is it it

698
00:28:59,679 --> 00:29:02,880
will send the messages to um cause

699
00:29:02,880 --> 00:29:05,840
redirection of the traffic

700
00:29:05,840 --> 00:29:08,159
through the ip address of our choice

701
00:29:08,159 --> 00:29:10,640
which is our windows 10 attackers

702
00:29:10,640 --> 00:29:12,240
machine

703
00:29:12,240 --> 00:29:14,559
and then as a result

704
00:29:14,559 --> 00:29:17,120
any further traffic that's initiated

705
00:29:17,120 --> 00:29:20,480
from the victim will no longer go to the

706
00:29:20,480 --> 00:29:21,760
original

707
00:29:21,760 --> 00:29:24,159
destination of the dead beef but it will

708
00:29:24,159 --> 00:29:25,200
rather

709
00:29:25,200 --> 00:29:27,840
be redirected to our windows 10

710
00:29:27,840 --> 00:29:30,399
attacking stuff so you'll see here the

711
00:29:30,399 --> 00:29:32,159
the initial syn

712
00:29:32,159 --> 00:29:35,279
packet of the connection of of the ftp

713
00:29:35,279 --> 00:29:37,679
so it's port 21 right

714
00:29:37,679 --> 00:29:40,320
that was initiated by the victim that

715
00:29:40,320 --> 00:29:43,600
ended up on windows 10 so this this

716
00:29:43,600 --> 00:29:46,880
network capture is running

717
00:29:46,880 --> 00:29:50,000
on our windows 10

718
00:29:50,080 --> 00:29:51,679
and

719
00:29:51,679 --> 00:29:53,200
after

720
00:29:53,200 --> 00:29:55,440
trying to make sense of of of dead

721
00:29:55,440 --> 00:29:58,559
behavior um i wasn't sure at this point

722
00:29:58,559 --> 00:30:01,520
if you know things are really meant to

723
00:30:01,520 --> 00:30:03,919
to work this way because

724
00:30:03,919 --> 00:30:05,279
on one hand

725
00:30:05,279 --> 00:30:08,240
i understand you know this is the

726
00:30:08,240 --> 00:30:11,039
legitimate capability of the protocol so

727
00:30:11,039 --> 00:30:13,039
the protocol

728
00:30:13,039 --> 00:30:15,520
and and hosts that are processing those

729
00:30:15,520 --> 00:30:18,480
messages must be able to respond to

730
00:30:18,480 --> 00:30:20,240
you know changing conditions in the

731
00:30:20,240 --> 00:30:21,279
network

732
00:30:21,279 --> 00:30:22,799
on the other hand

733
00:30:22,799 --> 00:30:25,520
you know it's pretty trivial to to

734
00:30:25,520 --> 00:30:28,000
kind of abuse it you just construct the

735
00:30:28,000 --> 00:30:29,760
package you have no authentication you

736
00:30:29,760 --> 00:30:32,640
send the packet and it gets injected and

737
00:30:32,640 --> 00:30:36,080
and processed by it by the

738
00:30:36,080 --> 00:30:38,799
by the destination operating system

739
00:30:38,799 --> 00:30:41,360
so um i contacted microsoft to see you

740
00:30:41,360 --> 00:30:42,640
know what's

741
00:30:42,640 --> 00:30:44,240
what's their view

742
00:30:44,240 --> 00:30:47,039
and um as you can see they said look

743
00:30:47,039 --> 00:30:48,240
it's

744
00:30:48,240 --> 00:30:49,279
it's

745
00:30:49,279 --> 00:30:51,360
there's no flaw it's it's a legitimate

746
00:30:51,360 --> 00:30:52,799
design

747
00:30:52,799 --> 00:30:53,679
so

748
00:30:53,679 --> 00:30:54,880
on one hand

749
00:30:54,880 --> 00:30:57,679
you know i i understand this response it

750
00:30:57,679 --> 00:31:00,240
it makes sense on the other hand

751
00:31:00,240 --> 00:31:03,279
it it still leaves us with a relatively

752
00:31:03,279 --> 00:31:06,640
large attacking surface um

753
00:31:06,640 --> 00:31:08,799
against the operating systems that that

754
00:31:08,799 --> 00:31:12,240
have that enabled

755
00:31:12,559 --> 00:31:14,080
so um

756
00:31:14,080 --> 00:31:15,519
the summary

757
00:31:15,519 --> 00:31:19,360
is actually about the suggestions that i

758
00:31:19,360 --> 00:31:21,679
can give you how you can mitigate those

759
00:31:21,679 --> 00:31:23,440
attacks

760
00:31:23,440 --> 00:31:26,240
we identified the root cause

761
00:31:26,240 --> 00:31:28,559
that

762
00:31:29,200 --> 00:31:31,440
the default setting allows the

763
00:31:31,440 --> 00:31:33,840
acceptance of the of the redirect

764
00:31:33,840 --> 00:31:36,159
messages and of the router advertising

765
00:31:36,159 --> 00:31:38,559
messages as well

766
00:31:38,559 --> 00:31:41,519
so one obvious mitigation is disable

767
00:31:41,519 --> 00:31:44,720
icmp redirect messages

768
00:31:44,720 --> 00:31:47,600
there are kernel parameters in both

769
00:31:47,600 --> 00:31:50,559
operating systems how you can do that

770
00:31:50,559 --> 00:31:52,320
so i'm giving you the information about

771
00:31:52,320 --> 00:31:53,840
ipv4

772
00:31:53,840 --> 00:31:56,880
even though ipv4 wasn't in the scope

773
00:31:56,880 --> 00:32:00,240
but you know just to kind of outline the

774
00:32:00,240 --> 00:32:02,640
the similarities how you will mitigate

775
00:32:02,640 --> 00:32:03,440
that

776
00:32:03,440 --> 00:32:05,200
so you will essentially change those

777
00:32:05,200 --> 00:32:07,120
parameters and you will reset them to

778
00:32:07,120 --> 00:32:09,919
zero meaning that the operating system

779
00:32:09,919 --> 00:32:11,840
won't

780
00:32:11,840 --> 00:32:13,279
accept those

781
00:32:13,279 --> 00:32:15,760
in windows it's essentially the same

782
00:32:15,760 --> 00:32:18,640
it's just the different way

783
00:32:18,640 --> 00:32:21,279
how you do it

784
00:32:22,960 --> 00:32:25,120
there is alternative

785
00:32:25,120 --> 00:32:29,840
if you for whatever reason have no

786
00:32:31,360 --> 00:32:34,960
possibility or or access

787
00:32:34,960 --> 00:32:37,279
to the operating systems to block that

788
00:32:37,279 --> 00:32:38,799
you can use your

789
00:32:38,799 --> 00:32:41,279
firewalls intrusion detection or other

790
00:32:41,279 --> 00:32:44,960
networking devices to block that

791
00:32:44,960 --> 00:32:45,840
so

792
00:32:45,840 --> 00:32:48,559
it's it's most likely that you will only

793
00:32:48,559 --> 00:32:50,480
need icmp

794
00:32:50,480 --> 00:32:52,640
echo and reply because from my

795
00:32:52,640 --> 00:32:54,799
experience from

796
00:32:54,799 --> 00:32:57,039
in most of the cases when you ask people

797
00:32:57,039 --> 00:32:59,360
you know why do you allow icmp the

798
00:32:59,360 --> 00:33:01,200
people will respond well we need it for

799
00:33:01,200 --> 00:33:04,080
diagnostic purposes to see if if hosts

800
00:33:04,080 --> 00:33:06,559
are alive so you you then ask the

801
00:33:06,559 --> 00:33:09,200
question like you mean ping echo reply

802
00:33:09,200 --> 00:33:11,519
yeah that's the one but do you need to

803
00:33:11,519 --> 00:33:14,080
like detect if if the packets are

804
00:33:14,080 --> 00:33:16,640
excessive in size or something like that

805
00:33:16,640 --> 00:33:17,919
no no no

806
00:33:17,919 --> 00:33:18,720
so

807
00:33:18,720 --> 00:33:21,600
if your business case scenario is

808
00:33:21,600 --> 00:33:22,399
that

809
00:33:22,399 --> 00:33:25,039
you require icmp only to to check

810
00:33:25,039 --> 00:33:27,440
whether hosts are alive fair enough but

811
00:33:27,440 --> 00:33:30,640
allow only icmp echo and reply icmp is

812
00:33:30,640 --> 00:33:32,559
far more than than just those two

813
00:33:32,559 --> 00:33:33,760
messages

814
00:33:33,760 --> 00:33:36,240
so i just did a quick checks with with

815
00:33:36,240 --> 00:33:38,720
cisco and junipers with their

816
00:33:38,720 --> 00:33:41,279
recent os's and

817
00:33:41,279 --> 00:33:43,120
they both have this

818
00:33:43,120 --> 00:33:45,600
feature enabled

819
00:33:45,600 --> 00:33:48,480
so that brings us to actually com to

820
00:33:48,480 --> 00:33:50,399
conclusion that there are a number of

821
00:33:50,399 --> 00:33:54,159
networking devices with enabled

822
00:33:54,159 --> 00:33:57,039
redirected redirection features but you

823
00:33:57,039 --> 00:33:59,360
also have a number of operating systems

824
00:33:59,360 --> 00:34:01,760
that enable that so you end up with you

825
00:34:01,760 --> 00:34:02,559
know

826
00:34:02,559 --> 00:34:04,880
a huge pile of devices that

827
00:34:04,880 --> 00:34:06,880
enable that which

828
00:34:06,880 --> 00:34:09,440
kind of extends the attacking surface

829
00:34:09,440 --> 00:34:12,320
and the probability that someone can

830
00:34:12,320 --> 00:34:15,040
abuse that

831
00:34:15,120 --> 00:34:17,119
[Music]

832
00:34:17,119 --> 00:34:18,639
the the

833
00:34:18,639 --> 00:34:20,560
yeah the question is

834
00:34:20,560 --> 00:34:22,320
you know what what

835
00:34:22,320 --> 00:34:24,480
whether you need this um

836
00:34:24,480 --> 00:34:28,719
capability with your oasis um if you're

837
00:34:28,719 --> 00:34:31,040
using the routing engine capabilities of

838
00:34:31,040 --> 00:34:33,359
the operating system then probably you

839
00:34:33,359 --> 00:34:36,239
need that but in most cases i've seen in

840
00:34:36,239 --> 00:34:39,119
in real life they don't require that

841
00:34:39,119 --> 00:34:39,839
so

842
00:34:39,839 --> 00:34:42,239
you should be okay with with only

843
00:34:42,239 --> 00:34:46,719
icmps echo and and reply

844
00:34:46,719 --> 00:34:49,199
that actually brings me

845
00:34:49,199 --> 00:34:51,679
to the end of the presentation thanks

846
00:34:51,679 --> 00:34:53,520
for your time i hope you didn't get to

847
00:34:53,520 --> 00:34:54,800
sleep

848
00:34:54,800 --> 00:34:57,680
um you didn't fall asleep sorry

849
00:34:57,680 --> 00:34:58,800
um

850
00:34:58,800 --> 00:35:02,480
any questions do we have any

851
00:35:02,480 --> 00:35:06,240
questions for yep i see one

852
00:35:13,520 --> 00:35:15,440
you may have partly already answered

853
00:35:15,440 --> 00:35:17,440
this question but the really obvious

854
00:35:17,440 --> 00:35:20,000
question is why are this feature enabled

855
00:35:20,000 --> 00:35:22,720
by default

856
00:35:22,960 --> 00:35:23,839
um

857
00:35:23,839 --> 00:35:26,079
it's a good question

858
00:35:26,079 --> 00:35:27,599
i presume

859
00:35:27,599 --> 00:35:31,680
the reason why they have icmp redirect

860
00:35:31,680 --> 00:35:33,200
enabled is

861
00:35:33,200 --> 00:35:35,760
this is the legitimate feature of

862
00:35:35,760 --> 00:35:37,440
legitimate

863
00:35:37,440 --> 00:35:39,680
routing devices right so rooter can in

864
00:35:39,680 --> 00:35:41,839
any time say

865
00:35:41,839 --> 00:35:44,000
you know i'm congested you need to

866
00:35:44,000 --> 00:35:45,599
forward the traffic via alternative

867
00:35:45,599 --> 00:35:46,640
gateway

868
00:35:46,640 --> 00:35:48,960
and then if you your operating systems

869
00:35:48,960 --> 00:35:51,359
are not able to process that message

870
00:35:51,359 --> 00:35:53,040
they will you know keep pushing packets

871
00:35:53,040 --> 00:35:54,720
into the wrong path

872
00:35:54,720 --> 00:35:57,920
now in my humble opinion right that and

873
00:35:57,920 --> 00:36:00,800
i emphasize that in my humble opinion

874
00:36:00,800 --> 00:36:03,280
this guy this scenario is a little bit

875
00:36:03,280 --> 00:36:06,240
obsolete because

876
00:36:07,200 --> 00:36:09,760
honestly i haven't seen a business

877
00:36:09,760 --> 00:36:11,200
scenario where

878
00:36:11,200 --> 00:36:14,480
where this network redirect would had

879
00:36:14,480 --> 00:36:17,200
would have any legitimate purpose these

880
00:36:17,200 --> 00:36:19,920
days you have high availability gateways

881
00:36:19,920 --> 00:36:20,960
you have

882
00:36:20,960 --> 00:36:23,440
all kinds of load balancers alternative

883
00:36:23,440 --> 00:36:25,520
parts routing protocols able to deal

884
00:36:25,520 --> 00:36:27,920
with multiple routes so you know if one

885
00:36:27,920 --> 00:36:30,400
gateway doesn't work

886
00:36:30,400 --> 00:36:32,560
you know the other node of the same

887
00:36:32,560 --> 00:36:34,640
routing device will overtake will choose

888
00:36:34,640 --> 00:36:37,440
alternative part and so on so

889
00:36:37,440 --> 00:36:40,560
again in my humble opinion i think this

890
00:36:40,560 --> 00:36:43,839
is not really a frequent scenario

891
00:36:43,839 --> 00:36:46,160
and i would

892
00:36:46,160 --> 00:36:48,480
i would think those features should be

893
00:36:48,480 --> 00:36:51,520
disabled by default

894
00:36:51,520 --> 00:36:53,599
but anyway the interesting stuff was

895
00:36:53,599 --> 00:36:55,200
that linux

896
00:36:55,200 --> 00:36:57,760
providers and and and microsoft had the

897
00:36:57,760 --> 00:37:00,320
same idea that it should be enabled

898
00:37:00,320 --> 00:37:01,440
so

899
00:37:01,440 --> 00:37:03,599
there must be a good reason for that i

900
00:37:03,599 --> 00:37:04,320
just

901
00:37:04,320 --> 00:37:06,800
kind of don't don't get it

902
00:37:06,800 --> 00:37:09,760
totally agree with you thank you

903
00:37:09,760 --> 00:37:12,079
thanks

904
00:37:15,359 --> 00:37:16,640
okay that

905
00:37:16,640 --> 00:37:18,800
looks like it if it's a thank you very

906
00:37:18,800 --> 00:37:22,520
much thank you guys

907
00:37:26,880 --> 00:37:27,680
uh

908
00:37:27,680 --> 00:37:30,240
that completes the

909
00:37:30,240 --> 00:37:32,240
afternoon or mid-afternoon sessions so

910
00:37:32,240 --> 00:37:33,359
it's now

911
00:37:33,359 --> 00:37:37,280
uh break time i believe we'll recommence

912
00:37:37,280 --> 00:37:39,760
just after 15 50.

913
00:37:39,760 --> 00:37:43,160
okay thanks

