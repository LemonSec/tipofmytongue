1
00:00:00,960 --> 00:00:03,760
good morning hungary

2
00:00:03,760 --> 00:00:06,080
my name is piotr guavasca and it's a

3
00:00:06,080 --> 00:00:08,080
true honor for me to

4
00:00:08,080 --> 00:00:11,200
start first session at besides budapest

5
00:00:11,200 --> 00:00:13,360
2021

6
00:00:13,360 --> 00:00:15,360
i'm based in poland

7
00:00:15,360 --> 00:00:17,440
and for last four years i've been

8
00:00:17,440 --> 00:00:19,600
working for infoblox which is secured

9
00:00:19,600 --> 00:00:21,279
dns vendor

10
00:00:21,279 --> 00:00:23,920
and during these four years i've been

11
00:00:23,920 --> 00:00:26,320
analyzing different malware

12
00:00:26,320 --> 00:00:28,480
phishing campaigns different malicious

13
00:00:28,480 --> 00:00:31,760
activities under just one angle

14
00:00:31,760 --> 00:00:35,520
how the attackers were using dns

15
00:00:35,520 --> 00:00:38,320
system dns protocol itself

16
00:00:38,320 --> 00:00:41,280
in their malicious activities and today

17
00:00:41,280 --> 00:00:42,800
i would like to present you a short

18
00:00:42,800 --> 00:00:44,399
summary

19
00:00:44,399 --> 00:00:46,719
of this research

20
00:00:46,719 --> 00:00:49,440
so let's start

21
00:00:50,800 --> 00:00:53,920
why we are talking about dns in in

22
00:00:53,920 --> 00:00:55,760
cyber security

23
00:00:55,760 --> 00:00:57,360
because basically

24
00:00:57,360 --> 00:00:58,399
just as

25
00:00:58,399 --> 00:01:01,920
most of good programs also malware

26
00:01:01,920 --> 00:01:03,039
almost

27
00:01:03,039 --> 00:01:07,840
always is using somehow dns

28
00:01:07,840 --> 00:01:08,960
if we would

29
00:01:08,960 --> 00:01:10,240
look at

30
00:01:10,240 --> 00:01:13,040
cyber calcium model there are several

31
00:01:13,040 --> 00:01:15,920
phases of infection so everything starts

32
00:01:15,920 --> 00:01:17,680
with a reconnaissance

33
00:01:17,680 --> 00:01:20,640
where attacker is trying to get as

34
00:01:20,640 --> 00:01:22,400
many information

35
00:01:22,400 --> 00:01:25,360
as possible about the victim victim

36
00:01:25,360 --> 00:01:26,880
infrastructure

37
00:01:26,880 --> 00:01:28,960
ip addresses they are using systems they

38
00:01:28,960 --> 00:01:31,040
are using applications

39
00:01:31,040 --> 00:01:33,360
everything possible which makes the

40
00:01:33,360 --> 00:01:35,840
attack easier later

41
00:01:35,840 --> 00:01:38,000
at this stage attacker is usually using

42
00:01:38,000 --> 00:01:40,799
dns to gather information from for

43
00:01:40,799 --> 00:01:44,399
example passive dns about host names

44
00:01:44,399 --> 00:01:47,119
which sometimes can reveal applications

45
00:01:47,119 --> 00:01:49,280
used by the big team they gather

46
00:01:49,280 --> 00:01:51,680
information such as ip addressing used

47
00:01:51,680 --> 00:01:53,280
by the

48
00:01:53,280 --> 00:01:55,840
by the victim company

49
00:01:55,840 --> 00:01:57,520
then they

50
00:01:57,520 --> 00:02:00,000
go into weaponization phase where they

51
00:02:00,000 --> 00:02:01,040
prepare

52
00:02:01,040 --> 00:02:02,880
the malware they prepare the tools they

53
00:02:02,880 --> 00:02:04,159
will be using

54
00:02:04,159 --> 00:02:06,479
in terms of dns usually they they need

55
00:02:06,479 --> 00:02:08,560
to register some domain names

56
00:02:08,560 --> 00:02:11,680
um they need to set up maybe c2 servers

57
00:02:11,680 --> 00:02:13,520
which will be using dns

58
00:02:13,520 --> 00:02:14,319
uh

59
00:02:14,319 --> 00:02:16,480
prepare the malware itself

60
00:02:16,480 --> 00:02:18,959
then there is a delivery phase when the

61
00:02:18,959 --> 00:02:20,800
malware is actually delivered to the to

62
00:02:20,800 --> 00:02:23,599
the victim uh

63
00:02:23,599 --> 00:02:26,080
usually it's a form of the email this

64
00:02:26,080 --> 00:02:27,920
email can contain attachment it can

65
00:02:27,920 --> 00:02:29,440
contain a link

66
00:02:29,440 --> 00:02:31,920
uh it doesn't have to be an email it

67
00:02:31,920 --> 00:02:34,400
could be an advertisement on some social

68
00:02:34,400 --> 00:02:36,480
media

69
00:02:36,480 --> 00:02:38,239
with some malicious

70
00:02:38,239 --> 00:02:40,480
url

71
00:02:40,480 --> 00:02:41,519
usually

72
00:02:41,519 --> 00:02:43,519
when

73
00:02:43,519 --> 00:02:45,920
there is a link in the email on the

74
00:02:45,920 --> 00:02:47,760
advertisement

75
00:02:47,760 --> 00:02:50,080
it's given as a fully qualified domain

76
00:02:50,080 --> 00:02:50,959
name

77
00:02:50,959 --> 00:02:54,239
not as an ip address and

78
00:02:54,239 --> 00:02:56,400
in this uh in this moment when the user

79
00:02:56,400 --> 00:02:58,400
is clicking this link there is a first

80
00:02:58,400 --> 00:03:01,120
possibility also for dns system to

81
00:03:01,120 --> 00:03:02,640
protect the user because malicious

82
00:03:02,640 --> 00:03:04,239
domain names could be blocked and that's

83
00:03:04,239 --> 00:03:07,040
the most simple way how people think

84
00:03:07,040 --> 00:03:09,519
how dns can protect

85
00:03:09,519 --> 00:03:11,599
users

86
00:03:11,599 --> 00:03:13,280
then there is an

87
00:03:13,280 --> 00:03:16,480
exploitation phase where

88
00:03:16,480 --> 00:03:18,560
some vulnerabilities are exploited on

89
00:03:18,560 --> 00:03:21,599
the victim systems um in terms of dns

90
00:03:21,599 --> 00:03:24,239
that could be for example

91
00:03:24,239 --> 00:03:26,959
dns protocol anomaly so especially

92
00:03:26,959 --> 00:03:29,360
crafted packet which would cost some

93
00:03:29,360 --> 00:03:31,280
actions on the server side or on the

94
00:03:31,280 --> 00:03:32,720
client side

95
00:03:32,720 --> 00:03:33,599
nah

96
00:03:33,599 --> 00:03:35,040
also

97
00:03:35,040 --> 00:03:36,590
domain hijacking

98
00:03:36,590 --> 00:03:37,920
[Music]

99
00:03:37,920 --> 00:03:40,080
which could be you know

100
00:03:40,080 --> 00:03:43,200
made easier because sometimes people

101
00:03:43,200 --> 00:03:45,519
forget to set good passwords dns

102
00:03:45,519 --> 00:03:47,319
registrars sometimes they don't use

103
00:03:47,319 --> 00:03:50,400
multi-factor authentication and so on

104
00:03:50,400 --> 00:03:52,400
then we have an installation phase where

105
00:03:52,400 --> 00:03:54,319
the malware is actually installed in the

106
00:03:54,319 --> 00:03:55,680
victim

107
00:03:55,680 --> 00:03:59,519
computer and then dns is not used

108
00:03:59,519 --> 00:04:01,680
at this phase rather much

109
00:04:01,680 --> 00:04:04,239
the most interesting phase uh

110
00:04:04,239 --> 00:04:06,799
specifically from dns protocol

111
00:04:06,799 --> 00:04:08,560
perspective is a common and control

112
00:04:08,560 --> 00:04:10,000
phase c2

113
00:04:10,000 --> 00:04:12,560
because dns is used at this phase in

114
00:04:12,560 --> 00:04:14,640
different ways first

115
00:04:14,640 --> 00:04:17,680
usually the c2 address

116
00:04:17,680 --> 00:04:21,600
is given or said fixed in the malware as

117
00:04:21,600 --> 00:04:25,199
a fully qualified domain name

118
00:04:25,199 --> 00:04:28,800
it's about 80 percent of the malware

119
00:04:28,800 --> 00:04:30,160
that is using

120
00:04:30,160 --> 00:04:33,360
dns names as a c2 server addresses the

121
00:04:33,360 --> 00:04:36,080
other 20 is just using plain ip

122
00:04:36,080 --> 00:04:37,360
addresses

123
00:04:37,360 --> 00:04:39,600
uh when attacker is using just ip

124
00:04:39,600 --> 00:04:40,880
addresses

125
00:04:40,880 --> 00:04:43,120
here is that when someone will not

126
00:04:43,120 --> 00:04:45,440
notice that the ip address is malicious

127
00:04:45,440 --> 00:04:46,880
it will be easily blocked on the

128
00:04:46,880 --> 00:04:49,360
firewall and then the you know the whole

129
00:04:49,360 --> 00:04:51,759
work which was done by the attacker will

130
00:04:51,759 --> 00:04:54,240
be lost so this reconnaissance time lost

131
00:04:54,240 --> 00:04:56,160
reconnaissance on preparing weapons and

132
00:04:56,160 --> 00:04:58,800
so on so usually they prefer to use a

133
00:04:58,800 --> 00:05:01,120
domain name which allows them to easily

134
00:05:01,120 --> 00:05:03,199
change ip addresses in case one would be

135
00:05:03,199 --> 00:05:04,400
blocked

136
00:05:04,400 --> 00:05:06,479
there are several other algorithms such

137
00:05:06,479 --> 00:05:08,560
as such as bga domain generation

138
00:05:08,560 --> 00:05:10,560
algorithms because it can happen that

139
00:05:10,560 --> 00:05:12,400
the domain name can also be blocked but

140
00:05:12,400 --> 00:05:13,280
then

141
00:05:13,280 --> 00:05:15,919
so there are several algorithms to

142
00:05:15,919 --> 00:05:18,639
overcome this possibility

143
00:05:18,639 --> 00:05:20,240
the whole command and control

144
00:05:20,240 --> 00:05:22,080
communication

145
00:05:22,080 --> 00:05:25,440
can also be hidden uh inside of dns

146
00:05:25,440 --> 00:05:28,479
queries and dns answers so we will go

147
00:05:28,479 --> 00:05:29,360
through

148
00:05:29,360 --> 00:05:31,520
real examples later i will show you how

149
00:05:31,520 --> 00:05:34,080
this is this is done

150
00:05:34,080 --> 00:05:35,840
then the last phase is actions on

151
00:05:35,840 --> 00:05:38,800
objectives where actually the attacker

152
00:05:38,800 --> 00:05:40,880
is trying to get

153
00:05:40,880 --> 00:05:43,680
what he actually did the attack for so

154
00:05:43,680 --> 00:05:46,400
maybe he wanted some sensitive data

155
00:05:46,400 --> 00:05:49,120
maybe he wanted to

156
00:05:49,120 --> 00:05:52,560
cause denial of service

157
00:05:52,560 --> 00:05:55,199
maybe he want to get the ransom maybe he

158
00:05:55,199 --> 00:05:57,440
just want to disturb some activities of

159
00:05:57,440 --> 00:05:58,720
the victim

160
00:05:58,720 --> 00:06:01,199
in case of

161
00:06:01,199 --> 00:06:04,639
data leakage so if if attacker wanted to

162
00:06:04,639 --> 00:06:07,039
get some sensitive information

163
00:06:07,039 --> 00:06:09,360
dns could be potentially used to

164
00:06:09,360 --> 00:06:11,919
transfer this data out of the victims

165
00:06:11,919 --> 00:06:14,800
network in a very

166
00:06:14,800 --> 00:06:18,319
hard to actually hard to detect

167
00:06:18,319 --> 00:06:19,440
way

168
00:06:19,440 --> 00:06:23,120
uh also in case of the dos of course um

169
00:06:23,120 --> 00:06:26,160
the nail of service dns is a

170
00:06:26,160 --> 00:06:29,360
great protocol unfortunately uh

171
00:06:29,360 --> 00:06:33,440
to be used uh to to to cause such uh

172
00:06:33,440 --> 00:06:35,680
unavailabilities of of the system

173
00:06:35,680 --> 00:06:38,400
because if dns doesn't work basically

174
00:06:38,400 --> 00:06:40,400
nothing is working

175
00:06:40,400 --> 00:06:42,880
let's look at this last phase

176
00:06:42,880 --> 00:06:45,840
and let's look how actually data can be

177
00:06:45,840 --> 00:06:47,520
stolen

178
00:06:47,520 --> 00:06:48,639
with

179
00:06:48,639 --> 00:06:52,160
help of dns protocol

180
00:06:52,160 --> 00:06:54,319
so let's assume attacker is already in

181
00:06:54,319 --> 00:06:55,680
the network

182
00:06:55,680 --> 00:06:58,080
he has communication with the c2 server

183
00:06:58,080 --> 00:07:00,160
from the cm2 server to the

184
00:07:00,160 --> 00:07:04,160
infected endpoint and he has some data

185
00:07:04,160 --> 00:07:06,880
uh to be exfiltrated or stolen from the

186
00:07:06,880 --> 00:07:08,560
victim's network

187
00:07:08,560 --> 00:07:10,400
uh

188
00:07:10,400 --> 00:07:11,599
to do that

189
00:07:11,599 --> 00:07:13,360
before he started the attack actually he

190
00:07:13,360 --> 00:07:15,520
needs to register a domain name one or

191
00:07:15,520 --> 00:07:16,960
more domain names and set up

192
00:07:16,960 --> 00:07:18,880
authoritative servers for these domain

193
00:07:18,880 --> 00:07:21,599
names this means when whenever there

194
00:07:21,599 --> 00:07:23,759
will be a dns query for any host in such

195
00:07:23,759 --> 00:07:25,680
domain name this query will finally

196
00:07:25,680 --> 00:07:28,639
reach the attacker's dns server

197
00:07:28,639 --> 00:07:31,759
then when he is in the last phase of the

198
00:07:31,759 --> 00:07:35,440
of the infection in this um

199
00:07:37,520 --> 00:07:40,400
phase where he is already in

200
00:07:40,400 --> 00:07:43,120
he takes the data he wants to steal

201
00:07:43,120 --> 00:07:45,120
he might optionally encrypt it before

202
00:07:45,120 --> 00:07:48,720
sending then he needs to encode the data

203
00:07:48,720 --> 00:07:50,879
he needs to encode it because the data

204
00:07:50,879 --> 00:07:52,479
will be sent

205
00:07:52,479 --> 00:07:55,919
inside of the dns query itself and it

206
00:07:55,919 --> 00:07:59,599
will be stored somewhere in the fully

207
00:07:59,599 --> 00:08:02,080
qualified domain name it could be stored

208
00:08:02,080 --> 00:08:05,520
as a host name or a sub domain name but

209
00:08:05,520 --> 00:08:09,360
anyway it's always in fqdn which means

210
00:08:09,360 --> 00:08:12,960
data needs to comply to the rfc or the

211
00:08:12,960 --> 00:08:15,759
encoded data needs to uh comply to the

212
00:08:15,759 --> 00:08:19,759
rfcs which are uh describing how dns

213
00:08:19,759 --> 00:08:22,080
query is built how fully qualified

214
00:08:22,080 --> 00:08:24,000
domain name is built there are some

215
00:08:24,000 --> 00:08:25,599
limits like you know

216
00:08:25,599 --> 00:08:28,639
fqdn all together can have 255

217
00:08:28,639 --> 00:08:32,719
characters with dots included

218
00:08:32,719 --> 00:08:36,159
there can be only letters uh digits

219
00:08:36,159 --> 00:08:39,440
a dash and underscore sign and its case

220
00:08:39,440 --> 00:08:41,519
insensitive

221
00:08:41,519 --> 00:08:43,760
so some kind of encoding needs to take

222
00:08:43,760 --> 00:08:46,000
place before we build such queries it

223
00:08:46,000 --> 00:08:48,399
could be a hexadecimal encoding because

224
00:08:48,399 --> 00:08:51,279
these are just you know 10 digits and

225
00:08:51,279 --> 00:08:52,880
six letters

226
00:08:52,880 --> 00:08:55,279
abcdef so it

227
00:08:55,279 --> 00:08:58,320
complies the rfc it could be base uh for

228
00:08:58,320 --> 00:09:02,160
t2 and coding it could be base64

229
00:09:02,160 --> 00:09:04,320
usually with some modifications

230
00:09:04,320 --> 00:09:06,480
later after the

231
00:09:06,480 --> 00:09:08,800
attacker has encoded the data he needs

232
00:09:08,800 --> 00:09:11,120
to cut this data into into chunks

233
00:09:11,120 --> 00:09:13,519
because the limit between the dots in

234
00:09:13,519 --> 00:09:16,959
the name is 63 characters so

235
00:09:16,959 --> 00:09:18,560
it needs to be cut

236
00:09:18,560 --> 00:09:21,120
in the chunks which should be shorter

237
00:09:21,120 --> 00:09:23,680
than 63 characters usually it's actually

238
00:09:23,680 --> 00:09:24,959
much shorter

239
00:09:24,959 --> 00:09:27,600
then after the query is built

240
00:09:27,600 --> 00:09:30,399
it is sent from the infant infected

241
00:09:30,399 --> 00:09:31,839
endpoint

242
00:09:31,839 --> 00:09:32,560
to

243
00:09:32,560 --> 00:09:35,120
local dns resolver of the victim company

244
00:09:35,120 --> 00:09:37,360
so it is not usually sent to the c2

245
00:09:37,360 --> 00:09:39,360
server directly no

246
00:09:39,360 --> 00:09:41,200
attacker is sending this query to the

247
00:09:41,200 --> 00:09:45,200
local dns resolver and this dns resolver

248
00:09:45,200 --> 00:09:47,360
looks at the query it's completely you

249
00:09:47,360 --> 00:09:51,279
know rfc compliant so basically it sends

250
00:09:51,279 --> 00:09:53,360
this query out to the internet and

251
00:09:53,360 --> 00:09:56,080
finally it will reach

252
00:09:56,080 --> 00:09:58,959
attackers dns server authoritative for

253
00:09:58,959 --> 00:10:01,040
his domain name for example here

254
00:10:01,040 --> 00:10:02,880
company.pw

255
00:10:02,880 --> 00:10:05,440
so here also attacker is using this

256
00:10:05,440 --> 00:10:08,720
characteristic of of dns that

257
00:10:08,720 --> 00:10:10,800
basically it's kind of a proxy

258
00:10:10,800 --> 00:10:13,760
communication wherever the endpoint will

259
00:10:13,760 --> 00:10:15,279
send a query to

260
00:10:15,279 --> 00:10:18,399
a dns resolver this resolver is not just

261
00:10:18,399 --> 00:10:20,160
forwarding this query like you know

262
00:10:20,160 --> 00:10:21,519
passing it through

263
00:10:21,519 --> 00:10:23,920
it will build a new query

264
00:10:23,920 --> 00:10:27,120
and as a source ip of this query will

265
00:10:27,120 --> 00:10:30,640
use its own ip address so ip address of

266
00:10:30,640 --> 00:10:32,079
the end endpoint will be actually

267
00:10:32,079 --> 00:10:34,480
replaced with the ip address of the dns

268
00:10:34,480 --> 00:10:35,680
server

269
00:10:35,680 --> 00:10:39,200
so imagine even if the infected endpoint

270
00:10:39,200 --> 00:10:42,480
does not have internet connectivity

271
00:10:42,480 --> 00:10:45,360
but can send a dns query to this local

272
00:10:45,360 --> 00:10:46,640
resolver

273
00:10:46,640 --> 00:10:48,959
then actually this query will

274
00:10:48,959 --> 00:10:51,680
uh possibly can reach the internet right

275
00:10:51,680 --> 00:10:53,839
even the if the endpoint does not have

276
00:10:53,839 --> 00:10:55,760
direct internet connection

277
00:10:55,760 --> 00:10:58,480
so the dns here is actually working out

278
00:10:58,480 --> 00:11:00,959
as a multi-hop proxy because even in

279
00:11:00,959 --> 00:11:03,279
between can be more dns servers for

280
00:11:03,279 --> 00:11:05,279
example local dns

281
00:11:05,279 --> 00:11:08,320
resolver will send the query to

282
00:11:08,320 --> 00:11:12,000
isp of this company or maybe to some

283
00:11:12,000 --> 00:11:13,680
open resolve which is just google

284
00:11:13,680 --> 00:11:16,959
cloudflare whatever and then finally it

285
00:11:16,959 --> 00:11:20,880
will reach the attacker's dns server

286
00:11:20,880 --> 00:11:24,320
how does it look in realities here we

287
00:11:24,320 --> 00:11:27,440
have an example of alina post malware

288
00:11:27,440 --> 00:11:30,160
which is a malware

289
00:11:30,160 --> 00:11:33,120
affecting point of sale system and this

290
00:11:33,120 --> 00:11:35,680
malware is trying to steal credit card

291
00:11:35,680 --> 00:11:38,079
data information here are example

292
00:11:38,079 --> 00:11:41,680
queries used by alina pos

293
00:11:41,680 --> 00:11:43,839
they are quite long as you see

294
00:11:43,839 --> 00:11:45,839
because it's quite simple malware so

295
00:11:45,839 --> 00:11:48,720
attacker are not really afraid of being

296
00:11:48,720 --> 00:11:50,639
detected they

297
00:11:50,639 --> 00:11:52,079
target some

298
00:11:52,079 --> 00:11:54,839
companies with quite low cyber

299
00:11:54,839 --> 00:11:58,160
security protections

300
00:11:58,160 --> 00:12:00,000
let's look at this

301
00:12:00,000 --> 00:12:02,399
second query let's cut

302
00:12:02,399 --> 00:12:03,120
the

303
00:12:03,120 --> 00:12:06,000
hostname part and subdomain part and try

304
00:12:06,000 --> 00:12:08,320
to decode the data

305
00:12:08,320 --> 00:12:11,279
i will do that in the cyber chef tool

306
00:12:11,279 --> 00:12:14,560
here as you see i have copied the

307
00:12:14,560 --> 00:12:16,079
the domain the

308
00:12:16,079 --> 00:12:19,200
dns query without the final

309
00:12:19,200 --> 00:12:20,959
domain name

310
00:12:20,959 --> 00:12:23,440
and let's try to decode it so because we

311
00:12:23,440 --> 00:12:24,800
see here

312
00:12:24,800 --> 00:12:27,120
upper and lower case we can assume this

313
00:12:27,120 --> 00:12:28,240
is uh

314
00:12:28,240 --> 00:12:31,360
probably base64 encoding here

315
00:12:31,360 --> 00:12:34,560
and standard base64 cannot be used

316
00:12:34,560 --> 00:12:37,360
because it is using plus and slash signs

317
00:12:37,360 --> 00:12:39,120
so basically

318
00:12:39,120 --> 00:12:41,600
usually attackers are using an url saved

319
00:12:41,600 --> 00:12:43,760
version of base64 which is replacing

320
00:12:43,760 --> 00:12:45,200
those characters with dash and

321
00:12:45,200 --> 00:12:48,560
underscore so let's use this one

322
00:12:48,560 --> 00:12:52,399
we still don't see human readable data

323
00:12:52,399 --> 00:12:54,639
so let's try something simple because as

324
00:12:54,639 --> 00:12:56,959
i said it's quite simple malware for

325
00:12:56,959 --> 00:12:59,600
example uh xor

326
00:12:59,600 --> 00:13:01,600
since we don't know which which key is

327
00:13:01,600 --> 00:13:02,880
used here

328
00:13:02,880 --> 00:13:04,800
let's use a brute force capability of

329
00:13:04,800 --> 00:13:06,959
cyber shaft and check the different

330
00:13:06,959 --> 00:13:08,560
values for

331
00:13:08,560 --> 00:13:10,240
different key values

332
00:13:10,240 --> 00:13:11,760
uh

333
00:13:11,760 --> 00:13:13,040
let's

334
00:13:13,040 --> 00:13:15,200
move it a little bit

335
00:13:15,200 --> 00:13:18,079
maybe i'll make it a bit slow smaller

336
00:13:18,079 --> 00:13:20,720
maybe a little bit better

337
00:13:20,720 --> 00:13:22,639
and

338
00:13:22,639 --> 00:13:25,279
here for the aa key

339
00:13:25,279 --> 00:13:28,000
actually we can decode the data

340
00:13:28,000 --> 00:13:30,399
so we see here

341
00:13:30,399 --> 00:13:35,360
a unique identifier of infected endpoint

342
00:13:35,360 --> 00:13:37,760
it is needed because as i said its ip

343
00:13:37,760 --> 00:13:39,519
address is actually replaced so it's

344
00:13:39,519 --> 00:13:41,600
lost in the transmission so if the

345
00:13:41,600 --> 00:13:44,320
attacker wants to know from which

346
00:13:44,320 --> 00:13:46,800
host he gets the queries he gets the

347
00:13:46,800 --> 00:13:49,860
data he needs to somehow uh

348
00:13:49,860 --> 00:13:50,959
[Music]

349
00:13:50,959 --> 00:13:53,519
set unique identifier of this host and

350
00:13:53,519 --> 00:13:56,480
put this id inside of the dns query

351
00:13:56,480 --> 00:13:57,600
itself

352
00:13:57,600 --> 00:14:00,560
and then we have a computer name of this

353
00:14:00,560 --> 00:14:04,560
infected cost here we have a process

354
00:14:04,560 --> 00:14:06,880
name the process which is processing

355
00:14:06,880 --> 00:14:09,199
credit card data information and here we

356
00:14:09,199 --> 00:14:11,600
have a credit card number

357
00:14:11,600 --> 00:14:14,399
and the expiry date of this of this

358
00:14:14,399 --> 00:14:16,480
credit card so the data is actually

359
00:14:16,480 --> 00:14:18,959
encoded in a very simple way

360
00:14:18,959 --> 00:14:19,920
uh

361
00:14:19,920 --> 00:14:22,800
even more you know funny is that this aa

362
00:14:22,800 --> 00:14:26,079
key is used by alina paul's

363
00:14:26,079 --> 00:14:29,839
since 2013 because this malware is quite

364
00:14:29,839 --> 00:14:33,120
old but originally it was using http to

365
00:14:33,120 --> 00:14:34,720
exfiltrate data

366
00:14:34,720 --> 00:14:37,680
and in recent years they switched to dns

367
00:14:37,680 --> 00:14:39,839
but actually they still use the same xor

368
00:14:39,839 --> 00:14:41,839
key

369
00:14:41,839 --> 00:14:44,959
so this is uh how it looks uh in a

370
00:14:44,959 --> 00:14:47,600
simple modeler

371
00:14:47,600 --> 00:14:49,600
how about more

372
00:14:49,600 --> 00:14:52,079
advanced cases for example

373
00:14:52,079 --> 00:14:52,800
uh

374
00:14:52,800 --> 00:14:56,320
trigbot so trigbot is a

375
00:14:56,320 --> 00:14:58,079
a group and the malware family is

376
00:14:58,079 --> 00:15:01,040
actually which is modular so it can do

377
00:15:01,040 --> 00:15:02,480
different uh

378
00:15:02,480 --> 00:15:03,760
different things

379
00:15:03,760 --> 00:15:06,160
uh it can

380
00:15:06,160 --> 00:15:09,920
for example load a

381
00:15:09,920 --> 00:15:12,560
malware which will be

382
00:15:12,560 --> 00:15:15,760
later doing ddos attacks it could be a

383
00:15:15,760 --> 00:15:17,760
ransomware module

384
00:15:17,760 --> 00:15:20,399
uh or if they have no customer for the

385
00:15:20,399 --> 00:15:22,560
computer which they infected maybe they

386
00:15:22,560 --> 00:15:25,839
will just uh minecraft cryptocurrency so

387
00:15:25,839 --> 00:15:27,360
there are several

388
00:15:27,360 --> 00:15:28,560
options

389
00:15:28,560 --> 00:15:30,800
one of the quite interesting variants of

390
00:15:30,800 --> 00:15:34,000
trigbot is named anchor dns it was

391
00:15:34,000 --> 00:15:35,920
prepared for

392
00:15:35,920 --> 00:15:37,600
kind of premium

393
00:15:37,600 --> 00:15:40,720
customers of the trigbot group

394
00:15:40,720 --> 00:15:43,839
and it was installed when the trigbot

395
00:15:43,839 --> 00:15:47,440
has successfully infected computers

396
00:15:47,440 --> 00:15:49,839
in financial sector or high impact

397
00:15:49,839 --> 00:15:51,600
servers such as active directory

398
00:15:51,600 --> 00:15:52,880
controllers

399
00:15:52,880 --> 00:15:55,920
normally trigbot is using https as a c2

400
00:15:55,920 --> 00:15:57,199
protocol

401
00:15:57,199 --> 00:15:58,240
but

402
00:15:58,240 --> 00:16:00,560
imagine if you have an active directory

403
00:16:00,560 --> 00:16:04,160
controller and you would

404
00:16:04,160 --> 00:16:07,120
notice that this computer is connecting

405
00:16:07,120 --> 00:16:11,360
some unknown addresses over https on the

406
00:16:11,360 --> 00:16:14,240
internet then it would be suspicious on

407
00:16:14,240 --> 00:16:15,600
the other hand

408
00:16:15,600 --> 00:16:17,920
usually active directory controller

409
00:16:17,920 --> 00:16:19,600
is

410
00:16:19,600 --> 00:16:22,480
having a microsoft dns on it and it is

411
00:16:22,480 --> 00:16:25,440
set as a default resolver for

412
00:16:25,440 --> 00:16:27,600
all the computers in the company

413
00:16:27,600 --> 00:16:30,959
so it is processing a huge numbers of

414
00:16:30,959 --> 00:16:33,440
dns queries to different domain names so

415
00:16:33,440 --> 00:16:35,199
it is receiving the queries it is

416
00:16:35,199 --> 00:16:36,880
sending them to the internet getting the

417
00:16:36,880 --> 00:16:40,000
replies and so on so when they do c2

418
00:16:40,000 --> 00:16:43,279
over dns then this traffic

419
00:16:43,279 --> 00:16:45,759
will be actually hidden in this huge

420
00:16:45,759 --> 00:16:48,240
number of dns packets so it will be

421
00:16:48,240 --> 00:16:52,959
a lot more complicated um to to detect

422
00:16:52,959 --> 00:16:56,000
this c2 communication so this is uh why

423
00:16:56,000 --> 00:16:58,959
they decided to go with c2 over dns in

424
00:16:58,959 --> 00:17:01,440
this case and here you have some example

425
00:17:01,440 --> 00:17:03,440
of dns query

426
00:17:03,440 --> 00:17:05,919
encoded data here and

427
00:17:05,919 --> 00:17:08,079
here you can see decoded data for

428
00:17:08,079 --> 00:17:09,199
example

429
00:17:09,199 --> 00:17:12,640
a campaign name hostname client id and

430
00:17:12,640 --> 00:17:17,720
then the content so the data itself

431
00:17:18,000 --> 00:17:22,640
very advanced used of uh c2 over dns

432
00:17:22,640 --> 00:17:25,199
could be seen in uh dark hydrous group

433
00:17:25,199 --> 00:17:26,720
actions

434
00:17:26,720 --> 00:17:28,960
because

435
00:17:28,960 --> 00:17:31,039
the communication they are using over

436
00:17:31,039 --> 00:17:35,120
dns is highly randomized so for example

437
00:17:35,120 --> 00:17:36,400
[Music]

438
00:17:36,400 --> 00:17:39,120
imagine the hostname part contains some

439
00:17:39,120 --> 00:17:40,720
encoded data

440
00:17:40,720 --> 00:17:42,960
normally most of the malware will use a

441
00:17:42,960 --> 00:17:45,120
fixed length

442
00:17:45,120 --> 00:17:48,240
data in their case every query they were

443
00:17:48,240 --> 00:17:50,320
actually randomizing the

444
00:17:50,320 --> 00:17:52,720
uh hosting part it was uh choosing

445
00:17:52,720 --> 00:17:55,760
between 30 to 43 characters so every

446
00:17:55,760 --> 00:17:57,520
time it was a little bit different so it

447
00:17:57,520 --> 00:17:59,520
was you know a little bit more difficult

448
00:17:59,520 --> 00:18:02,400
to to detect with some simple signatures

449
00:18:02,400 --> 00:18:04,240
also please now that this is not very

450
00:18:04,240 --> 00:18:06,799
long it's just 30 to 40 free characters

451
00:18:06,799 --> 00:18:08,400
so it's completely different than alina

452
00:18:08,400 --> 00:18:11,200
pos alina pos was having like a very

453
00:18:11,200 --> 00:18:14,160
long query and they were not afraid of

454
00:18:14,160 --> 00:18:16,559
detection here it's an advanced group

455
00:18:16,559 --> 00:18:19,120
attacking government agencies they try

456
00:18:19,120 --> 00:18:21,520
to build queries which will be average

457
00:18:21,520 --> 00:18:22,640
on size

458
00:18:22,640 --> 00:18:24,320
usually the size of dns query is

459
00:18:24,320 --> 00:18:27,520
somewhere around 60 to 100 characters

460
00:18:27,520 --> 00:18:28,799
so here they

461
00:18:28,799 --> 00:18:32,320
get 30 to 43 plus at the domain name and

462
00:18:32,320 --> 00:18:34,080
all together it is more or less average

463
00:18:34,080 --> 00:18:36,799
domain inquiry

464
00:18:36,799 --> 00:18:38,000
uh

465
00:18:38,000 --> 00:18:41,280
also the delay between the queries was

466
00:18:41,280 --> 00:18:42,400
quite long

467
00:18:42,400 --> 00:18:44,320
around three seconds

468
00:18:44,320 --> 00:18:46,240
and it was not fixed three seconds it

469
00:18:46,240 --> 00:18:48,880
was randomized so it was usually between

470
00:18:48,880 --> 00:18:52,160
2.4 to 3.6 seconds they were also

471
00:18:52,160 --> 00:18:54,720
randomizing query types so not always

472
00:18:54,720 --> 00:18:56,960
asking about one query although

473
00:18:56,960 --> 00:18:58,559
this modeler could work like that but

474
00:18:58,559 --> 00:19:00,799
also they could just you know randomly

475
00:19:00,799 --> 00:19:04,880
check uh select a query type for each uh

476
00:19:04,880 --> 00:19:05,919
query

477
00:19:05,919 --> 00:19:08,799
the domain names which were used also it

478
00:19:08,799 --> 00:19:11,280
was not just one domain name but each

479
00:19:11,280 --> 00:19:13,919
query was choosing randomly a domain

480
00:19:13,919 --> 00:19:16,559
name from a set of those and domain

481
00:19:16,559 --> 00:19:19,280
names so it was not like you know that

482
00:19:19,280 --> 00:19:21,600
you have a host which is sending a lot

483
00:19:21,600 --> 00:19:24,160
of queries to single domain name so it's

484
00:19:24,160 --> 00:19:26,640
quite suspicious but here now there were

485
00:19:26,640 --> 00:19:28,720
a bunch of different domain names and

486
00:19:28,720 --> 00:19:30,400
they were changed

487
00:19:30,400 --> 00:19:32,960
so quite quite interesting uh

488
00:19:32,960 --> 00:19:35,440
approach

489
00:19:36,799 --> 00:19:40,720
even more interesting case was uh

490
00:19:40,720 --> 00:19:44,720
is using the bat wpat attack um wpart

491
00:19:44,720 --> 00:19:47,679
means web proxy auto discovery

492
00:19:47,679 --> 00:19:49,840
basically it's a protocol used by uh for

493
00:19:49,840 --> 00:19:51,520
example windows systems when they need

494
00:19:51,520 --> 00:19:53,520
to

495
00:19:53,520 --> 00:19:56,400
automatically detect which web proxy the

496
00:19:56,400 --> 00:19:58,080
the windows should use

497
00:19:58,080 --> 00:20:01,280
and this detection is uh based uh

498
00:20:01,280 --> 00:20:04,400
partially on the dns system the end

499
00:20:04,400 --> 00:20:09,280
point is asking for a host called wpat

500
00:20:09,280 --> 00:20:11,679
and then the domain name is added from

501
00:20:11,679 --> 00:20:13,840
the search suffix list from the windows

502
00:20:13,840 --> 00:20:16,000
network configuration so usually it's

503
00:20:16,000 --> 00:20:19,960
something like you know wpad.company.hub

504
00:20:20,000 --> 00:20:21,679
for example

505
00:20:21,679 --> 00:20:25,200
if this name is a is not found

506
00:20:25,200 --> 00:20:27,039
depending on the windows configuration

507
00:20:27,039 --> 00:20:30,080
windows might skip the company part and

508
00:20:30,080 --> 00:20:34,320
it will ask for wpat dot hu domaining

509
00:20:34,320 --> 00:20:35,440
right so

510
00:20:35,440 --> 00:20:38,080
what is possible is that someone will

511
00:20:38,080 --> 00:20:42,000
register such domain names such as

512
00:20:42,600 --> 00:20:46,799
wpath.huw.i don't know top or whatever

513
00:20:46,799 --> 00:20:49,840
whatever victim

514
00:20:49,840 --> 00:20:52,400
is using as a top level domain name

515
00:20:52,400 --> 00:20:55,120
and then windows is actually asking for

516
00:20:55,120 --> 00:20:57,440
a file which is contained which should

517
00:20:57,440 --> 00:20:58,400
contain

518
00:20:58,400 --> 00:21:00,640
web proxy configuration so there should

519
00:21:00,640 --> 00:21:02,880
be an answer which proxy to use for

520
00:21:02,880 --> 00:21:04,720
specific url

521
00:21:04,720 --> 00:21:05,760
uh

522
00:21:05,760 --> 00:21:07,760
so imagine someone is registering such

523
00:21:07,760 --> 00:21:10,080
domain name and

524
00:21:10,080 --> 00:21:12,400
if the company victim company does not

525
00:21:12,400 --> 00:21:15,280
have this wpat entry then basically the

526
00:21:15,280 --> 00:21:18,159
windows possibly could reach

527
00:21:18,159 --> 00:21:21,840
to attackers server and ask for the file

528
00:21:21,840 --> 00:21:24,480
with web proxy configuration then the

529
00:21:24,480 --> 00:21:27,280
attacker will be glad to help and give

530
00:21:27,280 --> 00:21:29,760
this file with the configuration but in

531
00:21:29,760 --> 00:21:33,120
the file it will direct the

532
00:21:33,120 --> 00:21:34,480
endpoint

533
00:21:34,480 --> 00:21:36,000
victim's end point

534
00:21:36,000 --> 00:21:39,360
to malicious web proxy for example

535
00:21:39,360 --> 00:21:41,760
adam jaya which wrote the block which

536
00:21:41,760 --> 00:21:43,520
you can see at the bottom

537
00:21:43,520 --> 00:21:45,840
had done some research and checked

538
00:21:45,840 --> 00:21:47,919
different top-level domain names

539
00:21:47,919 --> 00:21:50,720
if wpat's entry exist

540
00:21:50,720 --> 00:21:52,240
and for example he found a very

541
00:21:52,240 --> 00:21:54,640
interesting case of

542
00:21:54,640 --> 00:21:58,960
wpad dot software domain name which was

543
00:21:58,960 --> 00:22:02,480
serving a web proxy file

544
00:22:02,480 --> 00:22:05,200
which was actually instructing the

545
00:22:05,200 --> 00:22:06,559
browser

546
00:22:06,559 --> 00:22:07,440
to

547
00:22:07,440 --> 00:22:12,159
encode a url which user is browsing in

548
00:22:12,159 --> 00:22:16,000
base64 and then exfiltrate this url to

549
00:22:16,000 --> 00:22:19,200
the attacker over dns query

550
00:22:19,200 --> 00:22:21,200
so it was he was not like you know the

551
00:22:21,200 --> 00:22:23,360
attacker was not redirecting all the

552
00:22:23,360 --> 00:22:25,360
traffic

553
00:22:25,360 --> 00:22:27,760
to the malicious web proxy actually he

554
00:22:27,760 --> 00:22:31,679
was redirecting http and ftp traffic but

555
00:22:31,679 --> 00:22:34,320
encrypted traffic uh because of the

556
00:22:34,320 --> 00:22:37,440
certificate problems was not redirected

557
00:22:37,440 --> 00:22:40,799
only the url was exfiltrated over dns so

558
00:22:40,799 --> 00:22:43,280
very interesting case of

559
00:22:43,280 --> 00:22:46,240
bad w part attack

560
00:22:46,240 --> 00:22:48,880
the most advanced attack i have seen

561
00:22:48,880 --> 00:22:52,720
and probably most of us it's sunburst

562
00:22:52,720 --> 00:22:54,960
and in sunburst attack

563
00:22:54,960 --> 00:22:57,120
so the one where the

564
00:22:57,120 --> 00:22:59,360
supply chain problems were were

565
00:22:59,360 --> 00:23:02,159
basically exploited in an infection over

566
00:23:02,159 --> 00:23:04,799
solarwinds software

567
00:23:04,799 --> 00:23:06,960
the first phase of command and control

568
00:23:06,960 --> 00:23:11,039
was used over dns

569
00:23:11,280 --> 00:23:13,120
in the first phase sunburst actually

570
00:23:13,120 --> 00:23:17,440
infected something like 18 000 computers

571
00:23:17,440 --> 00:23:20,159
and because it the first phase was meant

572
00:23:20,159 --> 00:23:21,120
to

573
00:23:21,120 --> 00:23:24,320
you know do such a wide infection

574
00:23:24,320 --> 00:23:27,120
they really care to not generate a lot

575
00:23:27,120 --> 00:23:28,880
of traffic and a lot of suspicious

576
00:23:28,880 --> 00:23:32,080
traffic so they decided to use dns

577
00:23:32,080 --> 00:23:35,039
dns was used to first

578
00:23:35,039 --> 00:23:38,000
register infected computer in the c2

579
00:23:38,000 --> 00:23:40,480
server so say hey infection was

580
00:23:40,480 --> 00:23:43,279
successful i mean what's next

581
00:23:43,279 --> 00:23:45,360
and

582
00:23:45,360 --> 00:23:47,279
over dns queries

583
00:23:47,279 --> 00:23:48,960
um

584
00:23:48,960 --> 00:23:51,200
they also send information about

585
00:23:51,200 --> 00:23:53,520
internal corporate domain name of the

586
00:23:53,520 --> 00:23:55,919
victim because they didn't want to

587
00:23:55,919 --> 00:23:59,120
infect all these 18 000 computer 18 000

588
00:23:59,120 --> 00:24:01,360
companies they actually targeted some

589
00:24:01,360 --> 00:24:03,200
you know most important organizations

590
00:24:03,200 --> 00:24:04,880
such as some ministries government

591
00:24:04,880 --> 00:24:06,880
institutions and some other important

592
00:24:06,880 --> 00:24:08,240
companies

593
00:24:08,240 --> 00:24:10,559
so they needed

594
00:24:10,559 --> 00:24:12,880
a way to find out in which company they

595
00:24:12,880 --> 00:24:14,960
are they choose to

596
00:24:14,960 --> 00:24:16,159
to check

597
00:24:16,159 --> 00:24:18,559
internal corporate domain name and this

598
00:24:18,559 --> 00:24:21,200
name was exfiltrated to the c2 server

599
00:24:21,200 --> 00:24:24,559
over dns queries they decided to just

600
00:24:24,559 --> 00:24:27,520
send 14 letters

601
00:24:27,520 --> 00:24:30,240
of a domain name in a query

602
00:24:30,240 --> 00:24:32,080
and if these 14 letters would be not

603
00:24:32,080 --> 00:24:33,200
enough

604
00:24:33,200 --> 00:24:35,520
they would just ask

605
00:24:35,520 --> 00:24:38,159
uh to send more to send another 14

606
00:24:38,159 --> 00:24:39,919
letters if that would be not enough they

607
00:24:39,919 --> 00:24:43,279
would ask another 14 letters and so on

608
00:24:43,279 --> 00:24:45,600
and then they get a corporate domain

609
00:24:45,600 --> 00:24:47,120
name and they check okay is it the

610
00:24:47,120 --> 00:24:49,840
ministry of justice looks like that okay

611
00:24:49,840 --> 00:24:51,600
so we move to the second stage of the

612
00:24:51,600 --> 00:24:54,480
infection for example

613
00:24:54,480 --> 00:24:58,240
uh those queries were built like here so

614
00:24:58,240 --> 00:24:59,919
first in the hostname part there were

615
00:24:59,919 --> 00:25:01,520
encoded data

616
00:25:01,520 --> 00:25:02,559
then

617
00:25:02,559 --> 00:25:04,720
some subdomain names suggesting it is

618
00:25:04,720 --> 00:25:06,880
just some public cloud like you know

619
00:25:06,880 --> 00:25:09,039
europe west one region

620
00:25:09,039 --> 00:25:11,120
and then a main domain name which was

621
00:25:11,120 --> 00:25:13,360
abs vmcloud.com

622
00:25:13,360 --> 00:25:15,120
which could be treated as a look-alike

623
00:25:15,120 --> 00:25:17,159
for for example aws

624
00:25:17,159 --> 00:25:18,880
vmcloud.com

625
00:25:18,880 --> 00:25:22,240
so the the query was supposed to look

626
00:25:22,240 --> 00:25:23,840
unsuspicious

627
00:25:23,840 --> 00:25:25,279
uh

628
00:25:25,279 --> 00:25:27,600
delay between queries here it was

629
00:25:27,600 --> 00:25:30,159
extremely long i mean they use something

630
00:25:30,159 --> 00:25:32,400
like a few minutes

631
00:25:32,400 --> 00:25:33,360
between

632
00:25:33,360 --> 00:25:35,600
each and the other query

633
00:25:35,600 --> 00:25:38,799
sometimes it could be even two hours and

634
00:25:38,799 --> 00:25:41,039
in some cases if there was some failure

635
00:25:41,039 --> 00:25:42,880
in the communication they would wait

636
00:25:42,880 --> 00:25:45,760
even you know six nine hours

637
00:25:45,760 --> 00:25:48,000
so really really

638
00:25:48,000 --> 00:25:50,320
big delays between the queries

639
00:25:50,320 --> 00:25:53,120
uh in the encoded data apart from the

640
00:25:53,120 --> 00:25:55,360
internal domain name

641
00:25:55,360 --> 00:25:58,480
there could be an information about

642
00:25:58,480 --> 00:25:59,760
uh

643
00:25:59,760 --> 00:26:02,640
status of some security solutions so

644
00:26:02,640 --> 00:26:04,880
they check if the endpoint is running

645
00:26:04,880 --> 00:26:06,960
crowdstrike or fireeye or something like

646
00:26:06,960 --> 00:26:10,640
that and they get the status of this

647
00:26:10,640 --> 00:26:12,200
solutions

648
00:26:12,200 --> 00:26:13,760
[Music]

649
00:26:13,760 --> 00:26:15,919
also in every query there was this

650
00:26:15,919 --> 00:26:18,159
unique identifier so there was a mac of

651
00:26:18,159 --> 00:26:21,600
this pc of this host basically sorry

652
00:26:21,600 --> 00:26:23,679
the name of it and

653
00:26:23,679 --> 00:26:27,120
global unique identifier

654
00:26:27,760 --> 00:26:30,320
all together this encoded data part had

655
00:26:30,320 --> 00:26:32,320
30 characters

656
00:26:32,320 --> 00:26:33,279
so

657
00:26:33,279 --> 00:26:36,240
quite similar to the previous advanced

658
00:26:36,240 --> 00:26:38,320
case they try to build queries which are

659
00:26:38,320 --> 00:26:40,720
not too long so if you are looking for

660
00:26:40,720 --> 00:26:42,720
extremely long queries in your security

661
00:26:42,720 --> 00:26:45,440
system that's good but here it would not

662
00:26:45,440 --> 00:26:47,679
work

663
00:26:48,559 --> 00:26:50,960
all these

664
00:26:50,960 --> 00:26:54,960
this data part was encoded using base 32

665
00:26:54,960 --> 00:26:56,320
algorithm

666
00:26:56,320 --> 00:26:59,200
with custom alphabet so they didn't use

667
00:26:59,200 --> 00:27:03,200
a standard base 32-inch link algorithm

668
00:27:03,200 --> 00:27:05,200
quite interesting case was also dns

669
00:27:05,200 --> 00:27:08,159
replies so the answer from the c2 server

670
00:27:08,159 --> 00:27:09,679
or let's say

671
00:27:09,679 --> 00:27:12,559
task assignment from the c2 server like

672
00:27:12,559 --> 00:27:15,679
give me another 14 characters or give me

673
00:27:15,679 --> 00:27:18,240
security solution status or move to the

674
00:27:18,240 --> 00:27:22,399
next c2 stage it was sent in form of ip

675
00:27:22,399 --> 00:27:24,000
addresses

676
00:27:24,000 --> 00:27:26,640
so basically infected host ask about an

677
00:27:26,640 --> 00:27:28,080
array record

678
00:27:28,080 --> 00:27:30,559
and in the reply he gets an ip address

679
00:27:30,559 --> 00:27:33,039
this ip address meant those specific

680
00:27:33,039 --> 00:27:34,880
tasks such as send me rest of the domain

681
00:27:34,880 --> 00:27:37,679
name send me security statuses send me

682
00:27:37,679 --> 00:27:40,240
or or move to the another stage

683
00:27:40,240 --> 00:27:42,480
those ip addresses

684
00:27:42,480 --> 00:27:44,559
were chosen from

685
00:27:44,559 --> 00:27:48,399
network rangers sorry of aws microsoft

686
00:27:48,399 --> 00:27:50,799
google so basically if someone was

687
00:27:50,799 --> 00:27:53,120
observing this dns traffic

688
00:27:53,120 --> 00:27:55,760
he saw those queries looking like some

689
00:27:55,760 --> 00:27:58,720
public cloud queries with ip addresses

690
00:27:58,720 --> 00:28:00,880
as the answer and those ip addresses

691
00:28:00,880 --> 00:28:03,120
were completely not suspicious because

692
00:28:03,120 --> 00:28:04,799
these were

693
00:28:04,799 --> 00:28:08,240
legitimate ip addresses of amazon

694
00:28:08,240 --> 00:28:10,000
google or microsoft

695
00:28:10,000 --> 00:28:12,960
so it was really quiet

696
00:28:12,960 --> 00:28:16,399
quite clever approach

697
00:28:16,399 --> 00:28:18,960
another uh approach how dns is used by

698
00:28:18,960 --> 00:28:21,279
the attacker is to

699
00:28:21,279 --> 00:28:23,840
to download information from the c2

700
00:28:23,840 --> 00:28:25,039
server

701
00:28:25,039 --> 00:28:27,279
into the

702
00:28:27,279 --> 00:28:28,480
infected

703
00:28:28,480 --> 00:28:31,440
cost for example malware could download

704
00:28:31,440 --> 00:28:35,039
additional malicious modules

705
00:28:35,279 --> 00:28:37,440
this is the case of invisible malware

706
00:28:37,440 --> 00:28:40,399
which was detected

707
00:28:40,399 --> 00:28:43,919
by eset in some diplomatic and military

708
00:28:43,919 --> 00:28:45,840
sector

709
00:28:45,840 --> 00:28:49,600
organizations in in our region of europe

710
00:28:49,600 --> 00:28:52,320
and here dns was exactly used to do that

711
00:28:52,320 --> 00:28:55,039
so basically

712
00:28:55,039 --> 00:28:57,600
when they infected the host in such

713
00:28:57,600 --> 00:29:00,399
organization

714
00:29:00,559 --> 00:29:03,200
they knew that possibly this host might

715
00:29:03,200 --> 00:29:05,200
not have internal direct internet

716
00:29:05,200 --> 00:29:06,720
connectivity it might be in some

717
00:29:06,720 --> 00:29:10,000
isolated network segments but very often

718
00:29:10,000 --> 00:29:12,559
defenders are forgetting that

719
00:29:12,559 --> 00:29:14,640
just blocking communication between this

720
00:29:14,640 --> 00:29:17,120
host and the internet is not enough and

721
00:29:17,120 --> 00:29:20,080
if this host can send a query to local

722
00:29:20,080 --> 00:29:22,640
dns server this local dns server will

723
00:29:22,640 --> 00:29:25,520
act as a proxy and

724
00:29:25,520 --> 00:29:27,679
it will send a new query build a new

725
00:29:27,679 --> 00:29:30,000
query based on that and send it to the

726
00:29:30,000 --> 00:29:32,000
internet so finally it can reach

727
00:29:32,000 --> 00:29:33,520
attacker's name server then the

728
00:29:33,520 --> 00:29:35,520
attacker's name server is sending dns

729
00:29:35,520 --> 00:29:38,159
reply to the dns resolver of the victim

730
00:29:38,159 --> 00:29:40,480
and then this resolver is replying

731
00:29:40,480 --> 00:29:42,640
sending this reply to the end point

732
00:29:42,640 --> 00:29:44,720
which was infected so basically there's

733
00:29:44,720 --> 00:29:46,399
actually bi-directional communication

734
00:29:46,399 --> 00:29:48,960
thanks to dns capabilities

735
00:29:48,960 --> 00:29:51,120
in those dns records

736
00:29:51,120 --> 00:29:54,240
they encoded new malicious modules so

737
00:29:54,240 --> 00:29:56,480
how you do that you basically take a

738
00:29:56,480 --> 00:29:59,679
malware module you compress it and code

739
00:29:59,679 --> 00:30:02,480
it uh with some algorithm if it's needed

740
00:30:02,480 --> 00:30:04,399
for example if you want to store data in

741
00:30:04,399 --> 00:30:08,399
txt record you use base64 for example if

742
00:30:08,399 --> 00:30:10,640
you use null records actually you don't

743
00:30:10,640 --> 00:30:12,399
need any encoding you just can take

744
00:30:12,399 --> 00:30:14,960
executable cutting the pieces put in

745
00:30:14,960 --> 00:30:17,120
different records in the dns zone and

746
00:30:17,120 --> 00:30:19,600
then the endpoint is asking about each

747
00:30:19,600 --> 00:30:22,559
and every record

748
00:30:22,559 --> 00:30:24,640
concatenating it

749
00:30:24,640 --> 00:30:26,320
decompressing and it can run new

750
00:30:26,320 --> 00:30:28,799
malicious model so that was the case

751
00:30:28,799 --> 00:30:30,399
here

752
00:30:30,399 --> 00:30:31,600
uh

753
00:30:31,600 --> 00:30:33,440
let's move to the other techniques how

754
00:30:33,440 --> 00:30:36,480
malware can actually get a

755
00:30:36,480 --> 00:30:38,480
domain name of the c2 server address

756
00:30:38,480 --> 00:30:40,080
there are several options it can be

757
00:30:40,080 --> 00:30:42,080
fixed in the malware

758
00:30:42,080 --> 00:30:43,679
but more interesting techniques are

759
00:30:43,679 --> 00:30:46,080
using some dynamic resolutions here we

760
00:30:46,080 --> 00:30:48,960
have an example grouptab.net

761
00:30:48,960 --> 00:30:50,799
uh how

762
00:30:50,799 --> 00:30:54,320
it is getting uh domain name for c2

763
00:30:54,320 --> 00:30:57,200
actually group taba is asking legitimate

764
00:30:57,200 --> 00:30:58,960
cryptocurrency servers

765
00:30:58,960 --> 00:31:02,000
such as blockchain.info and asking about

766
00:31:02,000 --> 00:31:04,720
details of cryptocurrency transaction

767
00:31:04,720 --> 00:31:07,679
and in op return field

768
00:31:07,679 --> 00:31:10,320
it is storing c2 domain name and

769
00:31:10,320 --> 00:31:12,159
cryptand with

770
00:31:12,159 --> 00:31:16,399
is 256. so this is the encrypted data

771
00:31:16,399 --> 00:31:19,279
and after decryption you can see c2

772
00:31:19,279 --> 00:31:21,760
domain name so later

773
00:31:21,760 --> 00:31:24,720
when it is contacting

774
00:31:24,720 --> 00:31:26,080
c2 server

775
00:31:26,080 --> 00:31:28,240
it knows which domain name to use and

776
00:31:28,240 --> 00:31:30,159
here we have uh some example

777
00:31:30,159 --> 00:31:33,200
communication c2 over dns

778
00:31:33,200 --> 00:31:36,640
as executed by groupthemarker

779
00:31:36,640 --> 00:31:39,600
another interesting example is

780
00:31:39,600 --> 00:31:44,240
this case where attacker was first using

781
00:31:44,240 --> 00:31:46,559
dns over https

782
00:31:46,559 --> 00:31:48,399
to bypass local

783
00:31:48,399 --> 00:31:52,640
dns system so it is sending doh queries

784
00:31:52,640 --> 00:31:55,679
um directly to dnsgoogle.com

785
00:31:55,679 --> 00:31:59,039
asking to resolve a specific domain name

786
00:31:59,039 --> 00:32:00,480
when we look at this domain name

787
00:32:00,480 --> 00:32:03,200
dmarc.jqueryupdatejs.com

788
00:32:03,200 --> 00:32:06,880
we could notice that in the

789
00:32:06,880 --> 00:32:10,000
reply this is a txt record

790
00:32:10,000 --> 00:32:13,120
and it looks like a dkim record

791
00:32:13,120 --> 00:32:15,600
with rsa key right that's the first

792
00:32:15,600 --> 00:32:17,440
impression but actually if you know

793
00:32:17,440 --> 00:32:19,440
dmarc and dkim

794
00:32:19,440 --> 00:32:21,440
protocol you know that it's not the

795
00:32:21,440 --> 00:32:23,440
correct name for the dmarc domain name

796
00:32:23,440 --> 00:32:25,039
and definitely it's not the correct

797
00:32:25,039 --> 00:32:26,880
content it's not the correct name for

798
00:32:26,880 --> 00:32:28,720
domain keys

799
00:32:28,720 --> 00:32:32,320
domain name also so basically just look

800
00:32:32,320 --> 00:32:34,799
quite similar but it's not

801
00:32:34,799 --> 00:32:35,679
and

802
00:32:35,679 --> 00:32:38,480
if we would take this

803
00:32:38,480 --> 00:32:40,480
this data here

804
00:32:40,480 --> 00:32:43,200
and go again into the cyber shaft we can

805
00:32:43,200 --> 00:32:45,760
notice that this data is actually not a

806
00:32:45,760 --> 00:32:50,640
key but each slash is actually delimiter

807
00:32:50,640 --> 00:32:52,159
and

808
00:32:52,159 --> 00:32:55,679
if you take for example this string here

809
00:32:55,679 --> 00:32:58,960
you should decode it with base64 once

810
00:32:58,960 --> 00:33:02,080
and then decode it with base64 twice and

811
00:33:02,080 --> 00:33:04,640
then something interesting will

812
00:33:04,640 --> 00:33:08,080
will show up let me just

813
00:33:08,080 --> 00:33:12,480
show you how does it look like

814
00:33:14,559 --> 00:33:18,120
so okay

815
00:33:26,399 --> 00:33:29,678
let's clean that

816
00:33:30,960 --> 00:33:32,480
so this is uh

817
00:33:32,480 --> 00:33:36,000
the record let's do base64

818
00:33:36,000 --> 00:33:37,840
decoding

819
00:33:37,840 --> 00:33:41,519
url safe as usual

820
00:33:41,820 --> 00:33:43,200
[Music]

821
00:33:43,200 --> 00:33:44,880
and then

822
00:33:44,880 --> 00:33:47,919
let's remove

823
00:33:50,840 --> 00:33:53,440
that so here we can see that this is

824
00:33:53,440 --> 00:33:57,120
actually another base 64 uh encoded text

825
00:33:57,120 --> 00:33:59,919
so let's do again basic c4

826
00:33:59,919 --> 00:34:02,159
and this is actually a digit

827
00:34:02,159 --> 00:34:06,559
a a number a 32-bit integer number and

828
00:34:06,559 --> 00:34:07,919
if we would

829
00:34:07,919 --> 00:34:10,560
just you know

830
00:34:10,639 --> 00:34:12,639
use pink to decode it

831
00:34:12,639 --> 00:34:14,960
you can see that actually this is an ip

832
00:34:14,960 --> 00:34:17,359
address

833
00:34:17,760 --> 00:34:20,480
so it is just stored in 32-bit integer

834
00:34:20,480 --> 00:34:22,879
format

835
00:34:23,040 --> 00:34:24,879
so in this record actually we have

836
00:34:24,879 --> 00:34:26,719
several ip addresses of command and

837
00:34:26,719 --> 00:34:29,119
console server here is the one another

838
00:34:29,119 --> 00:34:31,679
one another one

839
00:34:31,679 --> 00:34:34,320
everywhere where you see this 9pq it's a

840
00:34:34,320 --> 00:34:36,879
double equal sign encoded in base64

841
00:34:36,879 --> 00:34:39,199
there is an ipv4 address

842
00:34:39,199 --> 00:34:41,040
so very interesting uh

843
00:34:41,040 --> 00:34:43,119
case as well

844
00:34:43,119 --> 00:34:44,639
another technique which attackers are

845
00:34:44,639 --> 00:34:49,119
using is dji algorithms so they can

846
00:34:49,119 --> 00:34:51,599
basically instead of fixing a domain

847
00:34:51,599 --> 00:34:54,879
name for c2 the malware contains small

848
00:34:54,879 --> 00:34:57,440
small code which will generate

849
00:34:57,440 --> 00:34:59,920
a lot of random

850
00:34:59,920 --> 00:35:01,200
domain names

851
00:35:01,200 --> 00:35:02,880
it can generate like hundreds of

852
00:35:02,880 --> 00:35:05,040
thousand domain names per day

853
00:35:05,040 --> 00:35:06,480
and

854
00:35:06,480 --> 00:35:09,119
attackers register for a specific date

855
00:35:09,119 --> 00:35:11,520
just one of these domain names so when

856
00:35:11,520 --> 00:35:13,680
the malware is uh

857
00:35:13,680 --> 00:35:16,480
will successfully infect a computer

858
00:35:16,480 --> 00:35:18,560
it will generate first domain name try

859
00:35:18,560 --> 00:35:21,280
to resolve it if it's not existing not

860
00:35:21,280 --> 00:35:23,359
existing domain name here we have it

861
00:35:23,359 --> 00:35:25,359
will generate another one not existing

862
00:35:25,359 --> 00:35:28,160
generate another one if he will be lucky

863
00:35:28,160 --> 00:35:30,240
to hit the domain name registered by

864
00:35:30,240 --> 00:35:32,079
registered by the attacker

865
00:35:32,079 --> 00:35:32,880
then

866
00:35:32,880 --> 00:35:35,040
the button will receive an ip address of

867
00:35:35,040 --> 00:35:37,440
command and control server and then c2

868
00:35:37,440 --> 00:35:39,280
communication can start

869
00:35:39,280 --> 00:35:40,960
if this domain name will be blocked by

870
00:35:40,960 --> 00:35:42,320
someone like

871
00:35:42,320 --> 00:35:44,480
firewall dns firewall whatever then

872
00:35:44,480 --> 00:35:46,400
basically malware will generate another

873
00:35:46,400 --> 00:35:48,320
domain name and another and another and

874
00:35:48,320 --> 00:35:50,320
another until it will

875
00:35:50,320 --> 00:35:52,720
hit the the one which attackers has

876
00:35:52,720 --> 00:35:53,839
registered

877
00:35:53,839 --> 00:35:57,040
so basically it makes blocking domain

878
00:35:57,040 --> 00:35:59,920
names much harder because

879
00:35:59,920 --> 00:36:02,320
every time you block one the another one

880
00:36:02,320 --> 00:36:04,880
is generated here attackers are using

881
00:36:04,880 --> 00:36:07,440
random characters digits letters to

882
00:36:07,440 --> 00:36:09,680
build such domain names in more advanced

883
00:36:09,680 --> 00:36:11,839
attack they are using whole words to

884
00:36:11,839 --> 00:36:14,720
build domain name because

885
00:36:14,720 --> 00:36:17,839
uh it's quite easy to actually detect

886
00:36:17,839 --> 00:36:20,880
such domain names uh you are using

887
00:36:20,880 --> 00:36:22,560
different arguments to do that like you

888
00:36:22,560 --> 00:36:23,760
know you check

889
00:36:23,760 --> 00:36:26,960
engram distribution vowel ratio

890
00:36:26,960 --> 00:36:29,760
uh entropy and so on and you can

891
00:36:29,760 --> 00:36:32,640
detect such strange domain names

892
00:36:32,640 --> 00:36:35,520
but if the attacker will build c2 domain

893
00:36:35,520 --> 00:36:38,720
name out of words it's a it's it's much

894
00:36:38,720 --> 00:36:41,200
it's much harder so for example here

895
00:36:41,200 --> 00:36:43,520
here malware has two dictionaries built

896
00:36:43,520 --> 00:36:44,640
in

897
00:36:44,640 --> 00:36:46,800
and whenever malware tries to generate a

898
00:36:46,800 --> 00:36:49,200
domain name it will randomly select a

899
00:36:49,200 --> 00:36:51,200
word from this dictionary from the other

900
00:36:51,200 --> 00:36:53,680
dictionary connect it and then it will

901
00:36:53,680 --> 00:36:56,400
build domains such as this ones so they

902
00:36:56,400 --> 00:36:57,760
look completely

903
00:36:57,760 --> 00:37:00,000
you know normal i would say right so

904
00:37:00,000 --> 00:37:02,079
this is much more difficult technique to

905
00:37:02,079 --> 00:37:05,280
detect but also it's actually possible

906
00:37:05,280 --> 00:37:08,960
let's move to some simple things

907
00:37:08,960 --> 00:37:09,920
so

908
00:37:09,920 --> 00:37:14,079
how about look-alike domain names

909
00:37:14,240 --> 00:37:16,720
why they are used basically

910
00:37:16,720 --> 00:37:18,320
it's used in uh

911
00:37:18,320 --> 00:37:20,079
usually in some phishing campaigns but

912
00:37:20,079 --> 00:37:23,200
not only and they try to build domain

913
00:37:23,200 --> 00:37:25,119
name which will look familiar to the

914
00:37:25,119 --> 00:37:27,119
user uh

915
00:37:27,119 --> 00:37:29,520
if they try to target some brands such

916
00:37:29,520 --> 00:37:32,480
as here we have a netflix phishing

917
00:37:32,480 --> 00:37:34,880
uh netflix targeting phishing

918
00:37:34,880 --> 00:37:37,440
from poland we can see that the

919
00:37:37,440 --> 00:37:39,920
malicious domain name the whole domain

920
00:37:39,920 --> 00:37:41,839
name to here

921
00:37:41,839 --> 00:37:44,560
contains actually partially contains a

922
00:37:44,560 --> 00:37:47,359
good domain name netflix.pl

923
00:37:47,359 --> 00:37:50,320
so for some users they might not notice

924
00:37:50,320 --> 00:37:52,480
it's not netflix.pl but actually it's

925
00:37:52,480 --> 00:37:55,599
some other domain right so it's a simple

926
00:37:55,599 --> 00:37:57,680
look-alike domain name could be more

927
00:37:57,680 --> 00:37:59,839
advanced for example some letters could

928
00:37:59,839 --> 00:38:01,359
be used which look like the other

929
00:38:01,359 --> 00:38:03,599
letters for example here

930
00:38:03,599 --> 00:38:06,000
targeted brand was impost which is a

931
00:38:06,000 --> 00:38:08,079
logistics company

932
00:38:08,079 --> 00:38:11,359
and a logistics delivery company

933
00:38:11,359 --> 00:38:14,000
and here attackers were

934
00:38:14,000 --> 00:38:17,359
have registered domain name ln post.pl

935
00:38:17,359 --> 00:38:20,240
because uh lowercase

936
00:38:20,240 --> 00:38:23,760
l looks like a capital i so exactly like

937
00:38:23,760 --> 00:38:25,359
in the brand name right there isn't

938
00:38:25,359 --> 00:38:28,320
capital i as a first

939
00:38:28,320 --> 00:38:30,079
but actually this domain name on the

940
00:38:30,079 --> 00:38:32,640
left this website on the left

941
00:38:32,640 --> 00:38:35,119
is small issues it looks similar the

942
00:38:35,119 --> 00:38:37,359
domain name looks familiar but actually

943
00:38:37,359 --> 00:38:39,440
when you look in the html code you can

944
00:38:39,440 --> 00:38:41,200
see that the all the credentials you

945
00:38:41,200 --> 00:38:43,920
enter are actually exfiltrated to

946
00:38:43,920 --> 00:38:47,119
malicious server

947
00:38:47,119 --> 00:38:48,320
uh

948
00:38:48,320 --> 00:38:51,520
last year in poland for example we ca we

949
00:38:51,520 --> 00:38:55,119
we saw a lot of com campaigns uh which

950
00:38:55,119 --> 00:38:58,800
were using uh look-alike domain names in

951
00:38:58,800 --> 00:39:00,640
composition with advertisements on

952
00:39:00,640 --> 00:39:02,800
google or facebook and here you have

953
00:39:02,800 --> 00:39:05,520
here you have some examples

954
00:39:05,520 --> 00:39:07,599
why they do that because

955
00:39:07,599 --> 00:39:10,320
some users when they enter the bank web

956
00:39:10,320 --> 00:39:13,760
page they don't put a bank your address

957
00:39:13,760 --> 00:39:17,280
in the url bar but instead they put bank

958
00:39:17,280 --> 00:39:18,240
name

959
00:39:18,240 --> 00:39:20,480
in the google search bar and then they

960
00:39:20,480 --> 00:39:22,320
click the first link because usually

961
00:39:22,320 --> 00:39:24,480
it's their bank but here actually

962
00:39:24,480 --> 00:39:26,560
attackers bought

963
00:39:26,560 --> 00:39:28,480
ads campaigns

964
00:39:28,480 --> 00:39:30,960
and here if you enter uh for example

965
00:39:30,960 --> 00:39:33,200
targeted bank name like getting bank or

966
00:39:33,200 --> 00:39:34,240
sgb

967
00:39:34,240 --> 00:39:36,960
the first link is actually malicious one

968
00:39:36,960 --> 00:39:38,720
the other one is a good one but the

969
00:39:38,720 --> 00:39:41,200
first one is malicious here it can be

970
00:39:41,200 --> 00:39:43,040
easily seen because the url is not

971
00:39:43,040 --> 00:39:43,920
correct

972
00:39:43,920 --> 00:39:45,599
but in the other campaign they actually

973
00:39:45,599 --> 00:39:48,800
got smarter and the ad name was

974
00:39:48,800 --> 00:39:51,359
containing good url

975
00:39:51,359 --> 00:39:54,000
but it was linked linked to the

976
00:39:54,000 --> 00:39:57,119
malicious url here we have similar

977
00:39:57,119 --> 00:39:59,680
campaign but in the facebook

978
00:39:59,680 --> 00:40:02,400
uh pekka bank was targeted and here is a

979
00:40:02,400 --> 00:40:04,000
lookalike domain name

980
00:40:04,000 --> 00:40:08,480
and here uh advertisement

981
00:40:08,960 --> 00:40:12,560
special variation of the look-alikes um

982
00:40:12,560 --> 00:40:14,800
use special characters we call this

983
00:40:14,800 --> 00:40:17,359
technique idn from international domain

984
00:40:17,359 --> 00:40:19,599
name homographs so the domain names

985
00:40:19,599 --> 00:40:23,119
which look quite similar by using quite

986
00:40:23,119 --> 00:40:25,119
similar characters to to the latin

987
00:40:25,119 --> 00:40:27,040
characters but different and here we

988
00:40:27,040 --> 00:40:29,680
have an example adobe.com

989
00:40:29,680 --> 00:40:32,079
with a special b sign

990
00:40:32,079 --> 00:40:34,560
dot under it

991
00:40:34,560 --> 00:40:37,200
here we have a

992
00:40:37,200 --> 00:40:40,319
sms phishing uh targeting lot polish

993
00:40:40,319 --> 00:40:41,839
airlines saying that you know you can

994
00:40:41,839 --> 00:40:44,319
get two free tickets just click here

995
00:40:44,319 --> 00:40:47,599
and we have lot dot com but the o here

996
00:40:47,599 --> 00:40:49,359
has a dot under it

997
00:40:49,359 --> 00:40:51,119
in some communicators such as what

998
00:40:51,119 --> 00:40:53,599
what's up this is also underlined so

999
00:40:53,599 --> 00:40:56,720
this dot is barely visible

1000
00:40:56,720 --> 00:40:58,880
there are also some cases like this one

1001
00:40:58,880 --> 00:41:01,599
so look carefully do you see any

1002
00:41:01,599 --> 00:41:05,040
difference in these domain names

1003
00:41:05,280 --> 00:41:07,200
because if yes then basically you need

1004
00:41:07,200 --> 00:41:09,200
to visit the doctor there is no no

1005
00:41:09,200 --> 00:41:10,480
graphical

1006
00:41:10,480 --> 00:41:13,280
uh difference but actually these are two

1007
00:41:13,280 --> 00:41:15,119
different domain names

1008
00:41:15,119 --> 00:41:16,960
first one is built using serialic

1009
00:41:16,960 --> 00:41:18,800
character set

1010
00:41:18,800 --> 00:41:21,520
uh in syria character said the lighting

1011
00:41:21,520 --> 00:41:23,839
characters are repeated but under

1012
00:41:23,839 --> 00:41:25,359
different codes

1013
00:41:25,359 --> 00:41:26,319
so

1014
00:41:26,319 --> 00:41:28,000
you can build a domain name which will

1015
00:41:28,000 --> 00:41:29,760
look exactly like the you know

1016
00:41:29,760 --> 00:41:32,560
legitimate one but it will be completely

1017
00:41:32,560 --> 00:41:35,040
different name in this case

1018
00:41:35,040 --> 00:41:37,599
this here would be seen in dns system as

1019
00:41:37,599 --> 00:41:38,960
this one

1020
00:41:38,960 --> 00:41:42,079
also you know in in browsers uh right

1021
00:41:42,079 --> 00:41:44,319
now if you put such such domain name

1022
00:41:44,319 --> 00:41:46,000
like this or this or this in the web

1023
00:41:46,000 --> 00:41:49,839
browser the browser will show you this

1024
00:41:49,839 --> 00:41:51,680
puny code

1025
00:41:51,680 --> 00:41:52,800
name

1026
00:41:52,800 --> 00:41:54,880
so especially encoded name

1027
00:41:54,880 --> 00:41:57,760
in outlook unfortunately it's different

1028
00:41:57,760 --> 00:42:01,119
so if you will get such email with such

1029
00:42:01,119 --> 00:42:04,240
domain names they will be shown exactly

1030
00:42:04,240 --> 00:42:06,160
like attackers wants

1031
00:42:06,160 --> 00:42:08,640
the only

1032
00:42:08,720 --> 00:42:11,359
good thing which happened is that if you

1033
00:42:11,359 --> 00:42:13,839
click such link in newest versions of

1034
00:42:13,839 --> 00:42:16,079
outlook outlook will show you a warning

1035
00:42:16,079 --> 00:42:18,880
that possibly you are going to some

1036
00:42:18,880 --> 00:42:21,040
other place that you wanted

1037
00:42:21,040 --> 00:42:22,880
not very clear message but at least

1038
00:42:22,880 --> 00:42:26,160
there is some some warning

1039
00:42:26,160 --> 00:42:27,359
and

1040
00:42:27,359 --> 00:42:29,839
finally

1041
00:42:29,839 --> 00:42:33,119
some simpler case uh sms phishing with

1042
00:42:33,119 --> 00:42:36,079
lookalike domain name so we see uh this

1043
00:42:36,079 --> 00:42:38,000
domain name here it was targeting uh

1044
00:42:38,000 --> 00:42:39,280
check post

1045
00:42:39,280 --> 00:42:41,520
there was an sms sent

1046
00:42:41,520 --> 00:42:43,680
asking you to pay some additional money

1047
00:42:43,680 --> 00:42:46,000
for the package and asking you to pay

1048
00:42:46,000 --> 00:42:48,000
this money under this

1049
00:42:48,000 --> 00:42:49,350
link

1050
00:42:49,350 --> 00:42:50,880
[Music]

1051
00:42:50,880 --> 00:42:54,340
this domain name was a domain name

1052
00:42:54,340 --> 00:42:55,680
[Music]

1053
00:42:55,680 --> 00:42:59,200
registered two days before the attack so

1054
00:42:59,200 --> 00:43:00,960
as you see the creation date of the

1055
00:43:00,960 --> 00:43:03,359
domain name was september 5th

1056
00:43:03,359 --> 00:43:06,400
the first query was seen just 10 minutes

1057
00:43:06,400 --> 00:43:08,800
after registration but actually the

1058
00:43:08,800 --> 00:43:10,960
campaign the phishing campaign started

1059
00:43:10,960 --> 00:43:14,640
on september 7th

1060
00:43:15,760 --> 00:43:17,359
it was quite interesting because when

1061
00:43:17,359 --> 00:43:20,960
you click this page you see this uh

1062
00:43:20,960 --> 00:43:22,640
page to enter credit card data

1063
00:43:22,640 --> 00:43:25,359
information it's in check language

1064
00:43:25,359 --> 00:43:27,119
when you click

1065
00:43:27,119 --> 00:43:28,079
pay

1066
00:43:28,079 --> 00:43:31,440
then the other page is shown and here we

1067
00:43:31,440 --> 00:43:34,079
notice an interesting mistake done by

1068
00:43:34,079 --> 00:43:36,880
attackers because the text here is

1069
00:43:36,880 --> 00:43:39,920
actually not written in czech language

1070
00:43:39,920 --> 00:43:41,440
here on the left you have a google

1071
00:43:41,440 --> 00:43:43,839
translate of this sentence we have now

1072
00:43:43,839 --> 00:43:45,520
sent a one-time code to your mobile

1073
00:43:45,520 --> 00:43:48,240
phones this first one is a czech

1074
00:43:48,240 --> 00:43:50,160
second is in slovakian

1075
00:43:50,160 --> 00:43:53,040
third is in slovenian so you can notice

1076
00:43:53,040 --> 00:43:55,839
this is exactly the same so here

1077
00:43:55,839 --> 00:43:58,079
actually attackers did mistake and they

1078
00:43:58,079 --> 00:44:00,000
were targeting czech republic the first

1079
00:44:00,000 --> 00:44:02,480
page was in check but the second one

1080
00:44:02,480 --> 00:44:05,760
they forget uh to translate so it was

1081
00:44:05,760 --> 00:44:07,520
used probably from the previous phishing

1082
00:44:07,520 --> 00:44:11,920
campaigns in slovenia so they left it

1083
00:44:11,920 --> 00:44:13,200
uh

1084
00:44:13,200 --> 00:44:16,000
on virustotal uh this domain name did

1085
00:44:16,000 --> 00:44:17,440
not have a

1086
00:44:17,440 --> 00:44:19,200
big number of detections so during the

1087
00:44:19,200 --> 00:44:22,079
campaign it was actually zero

1088
00:44:22,079 --> 00:44:24,240
at the evening after the campaign there

1089
00:44:24,240 --> 00:44:25,280
was six

1090
00:44:25,280 --> 00:44:26,960
seven detections

1091
00:44:26,960 --> 00:44:28,880
but one very

1092
00:44:28,880 --> 00:44:31,440
really powerful technique to block such

1093
00:44:31,440 --> 00:44:34,079
campaigns is to block

1094
00:44:34,079 --> 00:44:35,920
newly observed domain names in your

1095
00:44:35,920 --> 00:44:39,359
networks so basically you can block uh

1096
00:44:39,359 --> 00:44:41,760
you can block your users from accessing

1097
00:44:41,760 --> 00:44:43,839
domain names which were registered in

1098
00:44:43,839 --> 00:44:45,920
last let's say three days or which were

1099
00:44:45,920 --> 00:44:48,560
first seen on the internet in last free

1100
00:44:48,560 --> 00:44:50,640
three

1101
00:44:50,640 --> 00:44:52,400
days

1102
00:44:52,400 --> 00:44:54,400
we did some

1103
00:44:54,400 --> 00:44:57,760
measurements with uh my friend

1104
00:44:57,760 --> 00:44:59,440
from france nicola

1105
00:44:59,440 --> 00:45:01,119
and he checked

1106
00:45:01,119 --> 00:45:02,079
how

1107
00:45:02,079 --> 00:45:04,640
much time it takes from a newly observed

1108
00:45:04,640 --> 00:45:07,280
domain name which is malicious one to

1109
00:45:07,280 --> 00:45:09,280
get into the thread feed and in

1110
00:45:09,280 --> 00:45:11,839
different vendors it was more or less

1111
00:45:11,839 --> 00:45:15,920
between 30 to 50 hours the medium time

1112
00:45:15,920 --> 00:45:16,960
in

1113
00:45:16,960 --> 00:45:19,760
many iocs we checked and many vendors it

1114
00:45:19,760 --> 00:45:22,400
was 43 hours so basically when you block

1115
00:45:22,400 --> 00:45:24,240
fresh domain names

1116
00:45:24,240 --> 00:45:27,359
you are getting additional 43 hours on

1117
00:45:27,359 --> 00:45:30,319
average of protection so very good

1118
00:45:30,319 --> 00:45:32,560
technique on the defense

1119
00:45:32,560 --> 00:45:33,920
defense side

1120
00:45:33,920 --> 00:45:37,440
so key takeaways for today

1121
00:45:37,440 --> 00:45:39,599
please remember that dns for the

1122
00:45:39,599 --> 00:45:41,760
attacker is just a method of sending and

1123
00:45:41,760 --> 00:45:43,920
receiving some data that could be

1124
00:45:43,920 --> 00:45:45,359
anything that could be c to server

1125
00:45:45,359 --> 00:45:48,240
address but as well it could be a list

1126
00:45:48,240 --> 00:45:49,760
of tasks to execute it could be

1127
00:45:49,760 --> 00:45:51,520
malicious code sent to the infected

1128
00:45:51,520 --> 00:45:53,520
endpoint it could be sensitive data

1129
00:45:53,520 --> 00:45:55,680
exfiltrated out of the network

1130
00:45:55,680 --> 00:45:59,280
second dns resolvers function as a proxy

1131
00:45:59,280 --> 00:46:01,359
so wherever you have isolated segment in

1132
00:46:01,359 --> 00:46:03,760
your network make sure you also check

1133
00:46:03,760 --> 00:46:06,160
that dns queries cannot go out from this

1134
00:46:06,160 --> 00:46:07,359
segment

1135
00:46:07,359 --> 00:46:09,520
and the third thing to remember that you

1136
00:46:09,520 --> 00:46:11,359
know dns traffic is really well

1137
00:46:11,359 --> 00:46:14,560
monitored not to mention protected

1138
00:46:14,560 --> 00:46:17,119
uh and that's why attackers are using it

1139
00:46:17,119 --> 00:46:18,160
so

1140
00:46:18,160 --> 00:46:20,960
it's basically uh good to have a look at

1141
00:46:20,960 --> 00:46:21,599
it

1142
00:46:21,599 --> 00:46:24,319
so thank you for today i'm available in

1143
00:46:24,319 --> 00:46:25,359
the

1144
00:46:25,359 --> 00:46:27,599
in the chat so if you have any questions

1145
00:46:27,599 --> 00:46:30,000
please don't hesitate to

1146
00:46:30,000 --> 00:46:32,880
to put it in the chat thank you and

1147
00:46:32,880 --> 00:46:35,520
goodbye

