1
00:00:00,030 --> 00:00:05,600
let's begin<font color="#CCCCCC"> with a</font><font color="#E5E5E5"> very short brief</font>

2
00:00:02,730 --> 00:00:05,600
little<font color="#E5E5E5"> demo</font>

3
00:00:06,190 --> 00:01:07,280
[Music]

4
00:01:07,360 --> 00:01:14,659
so who has not seen that<font color="#CCCCCC"> before</font><font color="#E5E5E5"> who has</font>

5
00:01:11,720 --> 00:01:16,759
who is not<font color="#E5E5E5"> aware of that problem</font><font color="#CCCCCC"> are</font>

6
00:01:14,659 --> 00:01:18,229
quite a few<font color="#E5E5E5"> who is a little bit worried</font>

7
00:01:16,759 --> 00:01:20,420
that<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> actually a thing</font>

8
00:01:18,229 --> 00:01:24,500
who didn't spot what the point<font color="#E5E5E5"> of that</font>

9
00:01:20,420 --> 00:01:27,700
<font color="#CCCCCC">video was</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> okay so what</font><font color="#E5E5E5"> you saw</font>

10
00:01:24,500 --> 00:01:30,939
there was a fully<font color="#E5E5E5"> deterministic random</font>

11
00:01:27,700 --> 00:01:35,180
number generator<font color="#E5E5E5"> running on an Arduino</font>

12
00:01:30,939 --> 00:01:37,339
<font color="#E5E5E5">so the Arduino has a very limited space</font>

13
00:01:35,180 --> 00:01:39,710
it's an 8-bit microcontroller

14
00:01:37,340 --> 00:01:41,840
<font color="#E5E5E5">it's the 80 mega 3 2 AP chip for those</font>

15
00:01:39,710 --> 00:01:44,149
of you who are<font color="#CCCCCC"> interested and</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> is</font>

16
00:01:41,840 --> 00:01:46,039
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> the constraint that they're</font>

17
00:01:44,149 --> 00:01:48,920
trying<font color="#CCCCCC"> to satisfy</font><font color="#E5E5E5"> so this is what's</font>

18
00:01:46,039 --> 00:01:51,289
<font color="#CCCCCC">going on this</font><font color="#E5E5E5"> is why it's bad what you</font>

19
00:01:48,920 --> 00:01:54,500
have is I<font color="#E5E5E5"> think of the linear</font>

20
00:01:51,289 --> 00:01:57,409
congruential generator and<font color="#CCCCCC"> LCG ok</font><font color="#E5E5E5"> that's</font>

21
00:01:54,500 --> 00:01:59,990
the five lines of code<font color="#E5E5E5"> top left what</font>

22
00:01:57,409 --> 00:02:02,390
that is<font color="#E5E5E5"> doing is it's</font><font color="#CCCCCC"> just generating</font>

23
00:01:59,990 --> 00:02:04,850
numbers<font color="#CCCCCC"> ok again and again and again</font>

24
00:02:02,390 --> 00:02:08,090
feeding back<font color="#E5E5E5"> into itself and they look</font>

25
00:02:04,850 --> 00:02:10,399
kind<font color="#E5E5E5"> of random the problem is it's fully</font>

26
00:02:08,090 --> 00:02:12,790
deterministic<font color="#E5E5E5"> whatever the seed is</font>

27
00:02:10,399 --> 00:02:18,079
chosen the seed<font color="#E5E5E5"> that's chosen by default</font>

28
00:02:12,790 --> 00:02:20,298
<font color="#CCCCCC">one ok so every</font><font color="#E5E5E5"> Arduino will generate</font>

29
00:02:18,079 --> 00:02:22,940
the same random<font color="#E5E5E5"> numbers in the same</font>

30
00:02:20,299 --> 00:02:24,980
<font color="#E5E5E5">sequence if you change the seed you're</font>

31
00:02:22,940 --> 00:02:26,840
not actually<font color="#E5E5E5"> changing the random numbers</font>

32
00:02:24,980 --> 00:02:30,470
you're just shifting it around this

33
00:02:26,840 --> 00:02:31,850
whole thing<font color="#E5E5E5"> now on</font><font color="#CCCCCC"> an AVR the AVR</font>

34
00:02:30,470 --> 00:02:34,730
microcontrollers the AVR<font color="#CCCCCC"> is the</font>

35
00:02:31,850 --> 00:02:38,750
architecture<font color="#E5E5E5"> it takes about two days</font><font color="#CCCCCC"> to</font>

36
00:02:34,730 --> 00:02:43,640
do a full cycle<font color="#CCCCCC"> ok two days on my laptop</font>

37
00:02:38,750 --> 00:02:46,700
it takes<font color="#E5E5E5"> 26 seconds that gives you the</font>

38
00:02:43,640 --> 00:02:47,750
<font color="#E5E5E5">kind of power disparity</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we're</font>

39
00:02:46,700 --> 00:02:49,250
dealing<font color="#CCCCCC"> with when we're trying</font><font color="#E5E5E5"> to</font>

40
00:02:47,750 --> 00:02:52,519
<font color="#E5E5E5">implement code</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> a microcontroller</font>

41
00:02:49,250 --> 00:02:54,079
versus implementing code on say a laptop

42
00:02:52,519 --> 00:02:57,049
or a server or<font color="#CCCCCC"> some other production</font>

43
00:02:54,079 --> 00:02:59,150
environment now people have said why am

44
00:02:57,049 --> 00:03:01,160
i picking on<font color="#CCCCCC"> arduino i'm not</font><font color="#E5E5E5"> honestly</font>

45
00:02:59,150 --> 00:03:02,660
it's just<font color="#E5E5E5"> the arduino</font><font color="#CCCCCC"> are well it's the</font>

46
00:03:01,160 --> 00:03:04,940
cheapest that<font color="#CCCCCC"> i could</font><font color="#E5E5E5"> find is the most</font>

47
00:03:02,660 --> 00:03:07,459
<font color="#E5E5E5">of readily available and also it's got a</font>

48
00:03:04,940 --> 00:03:09,739
huge<font color="#CCCCCC"> ecosystem with a kind of an</font><font color="#E5E5E5"> ide</font>

49
00:03:07,459 --> 00:03:11,989
that's really easy<font color="#E5E5E5"> to use they get them</font>

50
00:03:09,739 --> 00:03:13,270
out in schools for example<font color="#E5E5E5"> so lots of</font>

51
00:03:11,989 --> 00:03:15,900
people<font color="#CCCCCC"> will you</font>

52
00:03:13,270 --> 00:03:20,350
an Arduino<font color="#E5E5E5"> because of that accessibility</font>

53
00:03:15,900 --> 00:03:22,180
<font color="#E5E5E5">now</font><font color="#CCCCCC"> I am NOT expecting</font><font color="#E5E5E5"> Arduino</font><font color="#CCCCCC"> x' to be</font>

54
00:03:20,350 --> 00:03:24,640
perfect<font color="#CCCCCC"> people said well what</font><font color="#E5E5E5"> did you</font>

55
00:03:22,180 --> 00:03:27,580
expect<font color="#CCCCCC"> it's a $2.00 chip</font><font color="#E5E5E5"> what do you</font>

56
00:03:24,640 --> 00:03:30,010
expect it<font color="#E5E5E5"> well to be honest I could have</font>

57
00:03:27,580 --> 00:03:31,600
<font color="#E5E5E5">been expecting that but the bigger</font>

58
00:03:30,010 --> 00:03:34,299
problem<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that there's</font><font color="#CCCCCC"> nothing of the</font>

59
00:03:31,600 --> 00:03:37,600
documentation anywhere that says this<font color="#CCCCCC"> is</font>

60
00:03:34,300 --> 00:03:39,610
a thing<font color="#E5E5E5"> it</font><font color="#CCCCCC"> just says you</font><font color="#E5E5E5"> can get random</font>

61
00:03:37,600 --> 00:03:41,250
numbers<font color="#E5E5E5"> and no one gives a second</font>

62
00:03:39,610 --> 00:03:43,420
thought as to what<font color="#E5E5E5"> that actually means</font>

63
00:03:41,250 --> 00:03:46,050
<font color="#E5E5E5">so what I'm gonna do today is take you</font>

64
00:03:43,420 --> 00:03:49,179
<font color="#CCCCCC">through</font><font color="#E5E5E5"> what a random</font><font color="#CCCCCC"> number is</font>

65
00:03:46,050 --> 00:03:50,560
mathematically<font color="#CCCCCC"> I make every apology</font><font color="#E5E5E5"> for</font>

66
00:03:49,180 --> 00:03:54,130
my lack of apologies about<font color="#E5E5E5"> the</font>

67
00:03:50,560 --> 00:03:55,030
mathematics<font color="#E5E5E5"> that makes sense think about</font>

68
00:03:54,130 --> 00:03:57,430
it

69
00:03:55,030 --> 00:03:58,420
and I'm<font color="#E5E5E5"> gonna talk a little bit about</font>

70
00:03:57,430 --> 00:04:03,400
mathematics now

71
00:03:58,420 --> 00:04:05,320
so the<font color="#CCCCCC"> LCG has this lovely property</font><font color="#E5E5E5"> in</font>

72
00:04:03,400 --> 00:04:08,020
the late<font color="#E5E5E5"> 60s a paper was published by a</font>

73
00:04:05,320 --> 00:04:10,600
gentleman<font color="#CCCCCC"> called</font><font color="#E5E5E5"> mazzaglia he published</font>

74
00:04:08,020 --> 00:04:14,140
a paper<font color="#E5E5E5"> called random numbers for mainly</font>

75
00:04:10,600 --> 00:04:15,850
<font color="#E5E5E5">in the plains but that's a joke by the</font>

76
00:04:14,140 --> 00:04:19,238
way<font color="#CCCCCC"> ok that's that's</font><font color="#E5E5E5"> a funny you should</font>

77
00:04:15,850 --> 00:04:20,829
tell tell yourselves<font color="#CCCCCC"> so the idea was is</font>

78
00:04:19,238 --> 00:04:22,900
that<font color="#E5E5E5"> he did some analysis</font><font color="#CCCCCC"> and he found</font>

79
00:04:20,829 --> 00:04:25,060
that<font color="#CCCCCC"> the random numbers generated by an</font>

80
00:04:22,900 --> 00:04:27,479
<font color="#CCCCCC">LC G that code over there</font><font color="#E5E5E5"> although you</font>

81
00:04:25,060 --> 00:04:30,280
can change the parameters<font color="#E5E5E5"> that</font>

82
00:04:27,480 --> 00:04:33,460
particular bit<font color="#CCCCCC"> of code</font><font color="#E5E5E5"> spits out numbers</font>

83
00:04:30,280 --> 00:04:35,380
that fall<font color="#CCCCCC"> naturally in a plane or</font><font color="#E5E5E5"> hyper</font>

84
00:04:33,460 --> 00:04:38,500
plane as<font color="#CCCCCC"> it should be called that</font><font color="#E5E5E5"> cuts</font>

85
00:04:35,380 --> 00:04:41,170
through some<font color="#E5E5E5"> n-dimensional cube or that</font>

86
00:04:38,500 --> 00:04:43,000
means is you<font color="#E5E5E5"> can actually slice up this</font>

87
00:04:41,170 --> 00:04:47,080
cube<font color="#E5E5E5"> and go the random numbers are</font>

88
00:04:43,000 --> 00:04:49,990
always<font color="#CCCCCC"> going to be</font><font color="#E5E5E5"> here all</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> and</font>

89
00:04:47,080 --> 00:04:51,810
we've known this<font color="#E5E5E5"> since the 60s</font><font color="#CCCCCC"> we've</font>

90
00:04:49,990 --> 00:04:54,160
known<font color="#E5E5E5"> this technically since before</font>

91
00:04:51,810 --> 00:04:57,669
tcp/ip<font color="#CCCCCC"> was a thing if</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have Miko's</font>

92
00:04:54,160 --> 00:04:59,350
<font color="#E5E5E5">talk earlier so let's take a little bit</font>

93
00:04:57,669 --> 00:05:03,250
<font color="#E5E5E5">of a step back</font><font color="#CCCCCC"> and let's think about</font>

94
00:04:59,350 --> 00:05:04,150
what random numbers really<font color="#E5E5E5"> are</font><font color="#CCCCCC"> ok we use</font>

95
00:05:03,250 --> 00:05:06,850
them in cryptography

96
00:05:04,150 --> 00:05:08,650
<font color="#E5E5E5">I'll come to</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> in the next</font><font color="#CCCCCC"> slide but</font>

97
00:05:06,850 --> 00:05:11,350
<font color="#E5E5E5">we also use them in other</font><font color="#CCCCCC"> areas of</font><font color="#E5E5E5"> life</font>

98
00:05:08,650 --> 00:05:13,479
we<font color="#CCCCCC"> use them in gaming</font><font color="#E5E5E5"> and gambling</font><font color="#CCCCCC"> ok</font>

99
00:05:11,350 --> 00:05:16,870
<font color="#CCCCCC">you have a random number of dice though</font>

100
00:05:13,480 --> 00:05:18,450
have you let's spin<font color="#E5E5E5"> a deck shuffle</font><font color="#CCCCCC"> you</font>

101
00:05:16,870 --> 00:05:21,640
expect it to be<font color="#E5E5E5"> random</font>

102
00:05:18,450 --> 00:05:23,830
<font color="#CCCCCC">ok you don't</font><font color="#E5E5E5"> expect to be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to guess</font>

103
00:05:21,640 --> 00:05:25,000
the<font color="#CCCCCC"> next</font><font color="#E5E5E5"> sequence of cards</font><font color="#CCCCCC"> because</font>

104
00:05:23,830 --> 00:05:27,039
otherwise you'd be<font color="#E5E5E5"> able to gain the</font>

105
00:05:25,000 --> 00:05:29,530
<font color="#CCCCCC">system even digital</font>

106
00:05:27,040 --> 00:05:32,230
systems have quite strict requirements a

107
00:05:29,530 --> 00:05:34,510
4% win over a hundred million spins as a

108
00:05:32,230 --> 00:05:37,930
<font color="#E5E5E5">requirement okay</font><font color="#CCCCCC"> now to be able</font><font color="#E5E5E5"> to</font>

109
00:05:34,510 --> 00:05:39,640
justify that<font color="#E5E5E5"> their games will fit in to</font>

110
00:05:37,930 --> 00:05:41,700
the random numbers such<font color="#CCCCCC"> that this is</font>

111
00:05:39,640 --> 00:05:44,500
<font color="#E5E5E5">going to be true all right</font>

112
00:05:41,700 --> 00:05:46,810
<font color="#E5E5E5">likewise we use it in science a lot</font><font color="#CCCCCC"> ok</font>

113
00:05:44,500 --> 00:05:48,790
statistical sampling<font color="#E5E5E5"> for example relies</font>

114
00:05:46,810 --> 00:05:51,280
on random numbers<font color="#CCCCCC"> ok</font>

115
00:05:48,790 --> 00:05:53,170
likewise control group selection<font color="#CCCCCC"> if you</font>

116
00:05:51,280 --> 00:05:54,969
are selecting a control<font color="#CCCCCC"> group for</font><font color="#E5E5E5"> a</font>

117
00:05:53,170 --> 00:05:56,590
trial you shouldn't be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to predict</font>

118
00:05:54,970 --> 00:05:59,920
who is<font color="#E5E5E5"> or is not going to be in the</font>

119
00:05:56,590 --> 00:06:01,869
<font color="#E5E5E5">control group versus the test group we</font>

120
00:05:59,920 --> 00:06:03,550
also use it<font color="#CCCCCC"> in things like Monte Carlo</font>

121
00:06:01,870 --> 00:06:05,830
simulations if you run the Monte Carlos

122
00:06:03,550 --> 00:06:07,510
elimination<font color="#E5E5E5"> twice an Arduino</font><font color="#CCCCCC"> you'll get</font>

123
00:06:05,830 --> 00:06:08,740
the same output<font color="#E5E5E5"> and if that's what you</font>

124
00:06:07,510 --> 00:06:11,050
<font color="#E5E5E5">think is science is probably not a very</font>

125
00:06:08,740 --> 00:06:12,730
<font color="#E5E5E5">good thing so we need random numbers</font><font color="#CCCCCC"> to</font>

126
00:06:11,050 --> 00:06:15,160
do Monte Carlo simulations on other

127
00:06:12,730 --> 00:06:17,230
statistical simulations<font color="#E5E5E5"> in order to be</font>

128
00:06:15,160 --> 00:06:18,790
<font color="#E5E5E5">effective we also use it in astronomy</font>

129
00:06:17,230 --> 00:06:21,700
and things<font color="#E5E5E5"> like where you have a very</font>

130
00:06:18,790 --> 00:06:24,490
large data set a lot<font color="#E5E5E5"> of it which will</font>

131
00:06:21,700 --> 00:06:26,650
look<font color="#CCCCCC"> very random</font><font color="#E5E5E5"> so what you do is you</font>

132
00:06:24,490 --> 00:06:29,320
generate something<font color="#E5E5E5"> that really is random</font>

133
00:06:26,650 --> 00:06:31,690
and then you do a comparison<font color="#CCCCCC"> okay and</font>

134
00:06:29,320 --> 00:06:35,349
that's how you find patterns<font color="#E5E5E5"> that's how</font>

135
00:06:31,690 --> 00:06:37,210
you find<font color="#E5E5E5"> things out even</font><font color="#CCCCCC"> in history and</font>

136
00:06:35,350 --> 00:06:39,490
art we've used random<font color="#E5E5E5"> numbers for a long</font>

137
00:06:37,210 --> 00:06:42,729
time in ancient<font color="#E5E5E5"> times back in ancient</font>

138
00:06:39,490 --> 00:06:45,820
Greece for example<font color="#E5E5E5"> or ancient cultures</font>

139
00:06:42,730 --> 00:06:47,920
tend<font color="#E5E5E5"> to have tend to have this kind of</font>

140
00:06:45,820 --> 00:06:53,040
thing<font color="#E5E5E5"> what they have is the</font><font color="#CCCCCC"> idea that</font>

141
00:06:47,920 --> 00:06:55,540
randomness<font color="#CCCCCC"> is in some way not humanly</font>

142
00:06:53,040 --> 00:06:58,060
<font color="#E5E5E5">control configurable you can't control</font>

143
00:06:55,540 --> 00:07:00,100
it if you're<font color="#E5E5E5"> human</font><font color="#CCCCCC"> so by casting dice or</font>

144
00:06:58,060 --> 00:07:02,740
casting sticks<font color="#CCCCCC"> you're in some</font><font color="#E5E5E5"> way</font>

145
00:07:00,100 --> 00:07:05,740
communicating with the<font color="#CCCCCC"> gods or whatever</font>

146
00:07:02,740 --> 00:07:08,350
you're<font color="#E5E5E5"> particularly into likewise the</font>

147
00:07:05,740 --> 00:07:10,630
<font color="#CCCCCC">ranging Greeks their democracy was</font>

148
00:07:08,350 --> 00:07:12,520
actually a<font color="#CCCCCC"> sort issue</font><font color="#E5E5E5"> there's a device</font>

149
00:07:10,630 --> 00:07:15,640
for<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Claire</font><font color="#E5E5E5"> Italian and that</font><font color="#CCCCCC"> would</font>

150
00:07:12,520 --> 00:07:17,140
take a<font color="#E5E5E5"> colored dice in a tube or series</font>

151
00:07:15,640 --> 00:07:19,570
<font color="#CCCCCC">of tubes</font><font color="#E5E5E5"> they'd be dropped into a tray</font>

152
00:07:17,140 --> 00:07:21,250
<font color="#E5E5E5">the color would tell you the office and</font>

153
00:07:19,570 --> 00:07:23,110
then the numbers would tell you the

154
00:07:21,250 --> 00:07:26,010
<font color="#E5E5E5">person that's</font><font color="#CCCCCC"> gonna occupy</font><font color="#E5E5E5"> that office</font>

155
00:07:23,110 --> 00:07:30,310
and that's how they did<font color="#E5E5E5"> democracy</font>

156
00:07:26,010 --> 00:07:32,080
likewise in art<font color="#CCCCCC"> dadaism and Jackson</font>

157
00:07:30,310 --> 00:07:34,030
Pollock paintings<font color="#E5E5E5"> you know there's a</font>

158
00:07:32,080 --> 00:07:34,620
real sort<font color="#CCCCCC"> of move towards this kind of</font>

159
00:07:34,030 --> 00:07:36,299
random

160
00:07:34,620 --> 00:07:37,950
and this kind of<font color="#E5E5E5"> feel that</font><font color="#CCCCCC"> we have so</font>

161
00:07:36,300 --> 00:07:40,110
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is where they fit into society</font><font color="#E5E5E5"> but</font>

162
00:07:37,950 --> 00:07:41,880
of course we<font color="#E5E5E5"> don't really care</font><font color="#CCCCCC"> about</font>

163
00:07:40,110 --> 00:07:45,210
<font color="#CCCCCC">that kind</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> stuff what we care about</font><font color="#E5E5E5"> is</font>

164
00:07:41,880 --> 00:07:47,430
cryptography random<font color="#E5E5E5"> numbers are really</font>

165
00:07:45,210 --> 00:07:50,489
important in<font color="#CCCCCC"> cryptography when I teach</font>

166
00:07:47,430 --> 00:07:54,150
at<font color="#CCCCCC"> the university local to me</font><font color="#E5E5E5"> University</font>

167
00:07:50,490 --> 00:07:56,550
<font color="#CCCCCC">Beckett University in</font><font color="#E5E5E5"> Leeds</font><font color="#CCCCCC"> I tend to</font>

168
00:07:54,150 --> 00:07:59,370
tell them that there are<font color="#E5E5E5"> five kind of</font>

169
00:07:56,550 --> 00:08:01,350
pillars of<font color="#CCCCCC"> man of</font><font color="#E5E5E5"> cryptography one of</font>

170
00:07:59,370 --> 00:08:02,850
them is random number generation<font color="#CCCCCC"> other</font>

171
00:08:01,350 --> 00:08:05,700
<font color="#E5E5E5">ones would</font><font color="#CCCCCC"> be things like cipher</font><font color="#E5E5E5"> suites</font>

172
00:08:02,850 --> 00:08:08,250
<font color="#E5E5E5">and then cipher modes is another key</font>

173
00:08:05,700 --> 00:08:10,050
management<font color="#E5E5E5"> is a big one and</font><font color="#CCCCCC"> trapdoor</font><font color="#E5E5E5"> one</font>

174
00:08:08,250 --> 00:08:12,000
<font color="#E5E5E5">way functions for hashing and that kind</font>

175
00:08:10,050 --> 00:08:14,280
of thing<font color="#CCCCCC"> but random numbers I emphasize</font>

176
00:08:12,000 --> 00:08:18,360
<font color="#E5E5E5">they're really important don't mess them</font>

177
00:08:14,280 --> 00:08:20,460
up<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so look</font><font color="#CCCCCC"> here's well how we use</font>

178
00:08:18,360 --> 00:08:24,030
them<font color="#E5E5E5"> we use them in key generation</font><font color="#CCCCCC"> you</font>

179
00:08:20,460 --> 00:08:27,330
should<font color="#E5E5E5"> never be able</font><font color="#CCCCCC"> to guess</font><font color="#E5E5E5"> my key</font><font color="#CCCCCC"> ok</font>

180
00:08:24,030 --> 00:08:28,880
<font color="#E5E5E5">if you can guess my key</font><font color="#CCCCCC"> I can't keep a</font>

181
00:08:27,330 --> 00:08:33,150
secret the way I want to

182
00:08:28,880 --> 00:08:35,429
likewise<font color="#E5E5E5"> IV or n</font><font color="#CCCCCC"> once I say and once</font>

183
00:08:33,150 --> 00:08:39,240
because nonce has a meaning in<font color="#E5E5E5"> this</font>

184
00:08:35,429 --> 00:08:42,000
country saying<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I in n monster</font>

185
00:08:39,240 --> 00:08:43,890
generation you shouldn't ever be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to</font>

186
00:08:42,000 --> 00:08:46,350
predict the IV like if you were to have

187
00:08:43,890 --> 00:08:49,620
oh I<font color="#CCCCCC"> don't know a</font><font color="#E5E5E5"> hardware</font><font color="#CCCCCC"> aetherium</font>

188
00:08:46,350 --> 00:08:52,200
wallet<font color="#E5E5E5"> which had a static IV that might</font>

189
00:08:49,620 --> 00:08:54,270
be considered<font color="#E5E5E5"> a bad</font><font color="#CCCCCC"> thing if anyone's in</font>

190
00:08:52,200 --> 00:08:56,190
the news last week that is a thing by

191
00:08:54,270 --> 00:08:57,689
the way<font color="#E5E5E5"> if you're</font><font color="#CCCCCC"> generating random</font>

192
00:08:56,190 --> 00:08:59,250
salts you don't want the salts

193
00:08:57,690 --> 00:09:01,110
themselves to be predictable<font color="#E5E5E5"> so we use</font>

194
00:08:59,250 --> 00:09:03,660
random numbers<font color="#CCCCCC"> their cookies and session</font>

195
00:09:01,110 --> 00:09:06,090
tokens if I can predict by say taking

196
00:09:03,660 --> 00:09:08,490
the time of day or<font color="#E5E5E5"> the epoch time and</font>

197
00:09:06,090 --> 00:09:11,190
some user<font color="#E5E5E5"> artifacts and I can then</font>

198
00:09:08,490 --> 00:09:14,100
predict your session<font color="#E5E5E5"> token or your</font>

199
00:09:11,190 --> 00:09:16,200
cookie or whatever then I can do<font color="#CCCCCC"> at our</font>

200
00:09:14,100 --> 00:09:18,210
account takeover<font color="#E5E5E5"> and I can really mess</font>

201
00:09:16,200 --> 00:09:20,310
with<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> so if you're generating</font>

202
00:09:18,210 --> 00:09:22,950
random numbers<font color="#CCCCCC"> they shouldn't</font><font color="#E5E5E5"> be</font>

203
00:09:20,310 --> 00:09:26,280
guessable for your tokens<font color="#CCCCCC"> one-time paths</font>

204
00:09:22,950 --> 00:09:30,510
<font color="#E5E5E5">theoretically perfect</font><font color="#CCCCCC"> security relies</font>

205
00:09:26,280 --> 00:09:32,610
very heavily<font color="#E5E5E5"> on random numbers so how do</font>

206
00:09:30,510 --> 00:09:35,760
we<font color="#E5E5E5"> get them well some common methods are</font>

207
00:09:32,610 --> 00:09:37,410
on the right here<font color="#E5E5E5"> we say</font><font color="#CCCCCC"> write to random</font>

208
00:09:35,760 --> 00:09:40,170
number generation<font color="#CCCCCC"> these</font><font color="#E5E5E5"> are the things</font>

209
00:09:37,410 --> 00:09:43,110
<font color="#E5E5E5">you find in is like TPMS and hsn's</font><font color="#CCCCCC"> okay</font>

210
00:09:40,170 --> 00:09:45,089
little chips or<font color="#E5E5E5"> causin chips that do a</font>

211
00:09:43,110 --> 00:09:46,950
lot<font color="#CCCCCC"> of cryptography for you or they do a</font>

212
00:09:45,090 --> 00:09:49,090
lot<font color="#CCCCCC"> of</font>

213
00:09:46,950 --> 00:09:50,800
<font color="#CCCCCC">random number generation and other</font>

214
00:09:49,090 --> 00:09:52,830
things for you<font color="#CCCCCC"> so you include the</font>

215
00:09:50,800 --> 00:09:56,620
silicon and then<font color="#E5E5E5"> you can just talk to</font><font color="#CCCCCC"> it</font>

216
00:09:52,830 --> 00:09:58,150
<font color="#CCCCCC">they generate random numbers</font><font color="#E5E5E5"> in a true</font>

217
00:09:56,620 --> 00:10:01,330
sense<font color="#CCCCCC"> they take an actual source of</font>

218
00:09:58,150 --> 00:10:04,480
randomness<font color="#E5E5E5"> but that's</font><font color="#CCCCCC"> actually very</font><font color="#E5E5E5"> slow</font>

219
00:10:01,330 --> 00:10:06,460
<font color="#E5E5E5">compared</font><font color="#CCCCCC"> to how a laptop might do it so</font>

220
00:10:04,480 --> 00:10:07,540
for<font color="#E5E5E5"> that we</font><font color="#CCCCCC"> have pseudo-random number</font>

221
00:10:06,460 --> 00:10:08,230
<font color="#E5E5E5">generators we've got quite a few</font>

222
00:10:07,540 --> 00:10:11,170
<font color="#CCCCCC">actually</font>

223
00:10:08,230 --> 00:10:13,630
the old ones of history or<font color="#E5E5E5"> this they</font>

224
00:10:11,170 --> 00:10:15,490
should be in my<font color="#E5E5E5"> view are the LCDs in</font><font color="#CCCCCC"> the</font>

225
00:10:13,630 --> 00:10:18,210
<font color="#CCCCCC">lfsrs the linear feedback shift</font>

226
00:10:15,490 --> 00:10:21,790
registers<font color="#E5E5E5"> these are also referred to as</font>

227
00:10:18,210 --> 00:10:23,680
<font color="#E5E5E5">deterministic RMG's</font><font color="#CCCCCC"> DRN jeez that is</font>

228
00:10:21,790 --> 00:10:26,110
they'll<font color="#E5E5E5"> always be the same but we also</font>

229
00:10:23,680 --> 00:10:28,060
have<font color="#E5E5E5"> another</font><font color="#CCCCCC"> kind of subspecies</font><font color="#E5E5E5"> of these</font>

230
00:10:26,110 --> 00:10:31,660
PRNG is called the cryptographically

231
00:10:28,060 --> 00:10:33,579
secure<font color="#CCCCCC"> PR MGS</font><font color="#E5E5E5"> and these are ones where</font>

232
00:10:31,660 --> 00:10:36,250
we<font color="#E5E5E5"> go okay they have enough of an</font>

233
00:10:33,580 --> 00:10:38,650
internal<font color="#E5E5E5"> state to one being called</font>

234
00:10:36,250 --> 00:10:41,190
cryptographically secure<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> one</font>

235
00:10:38,650 --> 00:10:44,860
can<font color="#E5E5E5"> ever kind of catch up with that</font>

236
00:10:41,190 --> 00:10:48,670
so I<font color="#E5E5E5"> mentioned IOT</font><font color="#CCCCCC"> I mentioned this</font>

237
00:10:44,860 --> 00:10:51,190
thing<font color="#E5E5E5"> in the title why well here's one</font>

238
00:10:48,670 --> 00:10:55,030
<font color="#CCCCCC">example here we have a kind</font><font color="#E5E5E5"> of an</font>

239
00:10:51,190 --> 00:10:57,600
<font color="#E5E5E5">overview of of the lower one stack using</font>

240
00:10:55,030 --> 00:11:01,420
<font color="#E5E5E5">things network as your cloud service</font>

241
00:10:57,600 --> 00:11:04,540
notice that you have here a net session

242
00:11:01,420 --> 00:11:06,969
key and<font color="#E5E5E5"> an application session key what</font>

243
00:11:04,540 --> 00:11:10,030
these do is these encrypt<font color="#CCCCCC"> traffic from</font>

244
00:11:06,970 --> 00:11:12,190
the<font color="#CCCCCC"> devices yes the devices</font><font color="#E5E5E5"> all the</font><font color="#CCCCCC"> way</font>

245
00:11:10,030 --> 00:11:13,810
to the network server and then that will

246
00:11:12,190 --> 00:11:17,980
pass on<font color="#CCCCCC"> the data encrypted</font><font color="#E5E5E5"> with the app</font>

247
00:11:13,810 --> 00:11:22,329
session key to the allowed service here

248
00:11:17,980 --> 00:11:24,820
you may think<font color="#E5E5E5"> well what's wrong well the</font>

249
00:11:22,330 --> 00:11:26,950
app session keys are not stored<font color="#CCCCCC"> they're</font>

250
00:11:24,820 --> 00:11:30,190
generated on the fly<font color="#E5E5E5"> in a process called</font>

251
00:11:26,950 --> 00:11:32,170
over-the-air activation so a device and

252
00:11:30,190 --> 00:11:34,980
once and an<font color="#E5E5E5"> application and once are</font>

253
00:11:32,170 --> 00:11:37,360
generated and swapped in the clear<font color="#E5E5E5"> and</font>

254
00:11:34,980 --> 00:11:40,570
they are then used to generate<font color="#CCCCCC"> these</font>

255
00:11:37,360 --> 00:11:43,450
keys<font color="#E5E5E5"> so if I can predict the</font><font color="#CCCCCC"> next random</font>

256
00:11:40,570 --> 00:11:47,470
number<font color="#CCCCCC"> I remove roughly</font><font color="#E5E5E5"> 16 bits of</font>

257
00:11:43,450 --> 00:11:49,840
entropy<font color="#E5E5E5"> from that process okay it also</font>

258
00:11:47,470 --> 00:11:51,940
relies<font color="#E5E5E5"> on a thing called the</font><font color="#CCCCCC"> app key the</font>

259
00:11:49,840 --> 00:11:55,390
app key is interesting because things

260
00:11:51,940 --> 00:11:58,360
network only require that<font color="#CCCCCC"> the app key</font><font color="#E5E5E5"> be</font>

261
00:11:55,390 --> 00:12:00,279
either default<font color="#E5E5E5"> as in every device</font><font color="#CCCCCC"> has it</font>

262
00:11:58,360 --> 00:12:02,050
or they<font color="#E5E5E5"> are</font><font color="#CCCCCC"> perd</font>

263
00:12:00,279 --> 00:12:04,540
there's no<font color="#E5E5E5"> requirement for them to be</font>

264
00:12:02,050 --> 00:12:06,339
per device<font color="#CCCCCC"> it's just if you feel like it</font>

265
00:12:04,540 --> 00:12:09,339
the answer is you probably<font color="#E5E5E5"> should do</font>

266
00:12:06,339 --> 00:12:10,690
that<font color="#E5E5E5"> so if I</font><font color="#CCCCCC"> get your app key and I</font><font color="#E5E5E5"> can</font>

267
00:12:09,339 --> 00:12:13,630
predict<font color="#CCCCCC"> your random numbers that</font><font color="#E5E5E5"> might</font>

268
00:12:10,690 --> 00:12:15,640
<font color="#E5E5E5">be a real problem there is a UK flood</font>

269
00:12:13,630 --> 00:12:18,790
<font color="#CCCCCC">Network where their prototypes were</font>

270
00:12:15,640 --> 00:12:22,720
built on 80 mega<font color="#CCCCCC"> 3 to</font><font color="#E5E5E5"> AP's the chip I</font>

271
00:12:18,790 --> 00:12:25,390
showed you in<font color="#E5E5E5"> the demo they've now moved</font>

272
00:12:22,720 --> 00:12:28,899
on they use stm32f4 ones in some of them

273
00:12:25,390 --> 00:12:30,610
now the mute<font color="#E5E5E5"> moved to</font><font color="#CCCCCC"> numerous</font><font color="#E5E5E5"> sensors</font>

274
00:12:28,899 --> 00:12:32,740
<font color="#CCCCCC">but</font><font color="#E5E5E5"> this could have</font><font color="#CCCCCC"> been quite</font>

275
00:12:30,610 --> 00:12:35,649
<font color="#E5E5E5">problematic</font><font color="#CCCCCC"> okay this could have had</font>

276
00:12:32,740 --> 00:12:39,850
some<font color="#CCCCCC"> ramifications</font><font color="#E5E5E5"> now others might say</font>

277
00:12:35,649 --> 00:12:43,990
well you<font color="#CCCCCC"> have a es12 8 in ECB mode</font>

278
00:12:39,850 --> 00:12:45,790
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> the bad one</font><font color="#CCCCCC"> but as a</font><font color="#E5E5E5"> requirement</font>

279
00:12:43,990 --> 00:12:47,769
you<font color="#E5E5E5"> have key exchange or</font><font color="#CCCCCC"> artifact</font>

280
00:12:45,790 --> 00:12:51,250
exchange<font color="#E5E5E5"> in the clear and there's no</font>

281
00:12:47,769 --> 00:12:54,940
support<font color="#E5E5E5"> in laura1 for exchanging the app</font>

282
00:12:51,250 --> 00:12:56,790
<font color="#E5E5E5">keys</font><font color="#CCCCCC"> ok you have to do it through</font>

283
00:12:54,940 --> 00:12:58,990
firmware update or some other mechanism

284
00:12:56,790 --> 00:13:01,930
<font color="#E5E5E5">assuming you've implemented it which of</font>

285
00:12:58,990 --> 00:13:03,640
<font color="#CCCCCC">course</font><font color="#E5E5E5"> you have to cut you good</font><font color="#CCCCCC"> devs so</font>

286
00:13:01,930 --> 00:13:07,839
this could've been problematic<font color="#E5E5E5"> other</font>

287
00:13:03,640 --> 00:13:10,750
examples<font color="#CCCCCC"> top</font><font color="#E5E5E5"> left</font><font color="#CCCCCC"> you'll see an excerpt</font>

288
00:13:07,839 --> 00:13:12,310
from the<font color="#E5E5E5"> sprits implementation for</font>

289
00:13:10,750 --> 00:13:12,670
<font color="#E5E5E5">arduino this is still the news by the</font>

290
00:13:12,310 --> 00:13:17,229
way

291
00:13:12,670 --> 00:13:20,740
<font color="#CCCCCC">their best practice but Ino file has</font>

292
00:13:17,230 --> 00:13:26,110
this as<font color="#E5E5E5"> the entropy pool the first 64</font>

293
00:13:20,740 --> 00:13:27,850
characters<font color="#E5E5E5"> of Pi mmm now for those of</font>

294
00:13:26,110 --> 00:13:29,649
you who know a<font color="#E5E5E5"> little bit of</font><font color="#CCCCCC"> ASCII magic</font>

295
00:13:27,850 --> 00:13:31,690
you're probably realizing<font color="#E5E5E5"> are that means</font>

296
00:13:29,649 --> 00:13:34,300
that half<font color="#E5E5E5"> of the entropy pool is zero</font>

297
00:13:31,690 --> 00:13:38,079
<font color="#E5E5E5">zero one</font><font color="#CCCCCC"> one guaranteed no house</font><font color="#E5E5E5"> barred</font>

298
00:13:34,300 --> 00:13:40,540
<font color="#CCCCCC">okay that is a</font><font color="#E5E5E5"> problem I submitted a fix</font>

299
00:13:38,079 --> 00:13:41,560
<font color="#E5E5E5">which is absolutely bare minimum because</font>

300
00:13:40,540 --> 00:13:43,060
I didn't want<font color="#E5E5E5"> to start messing with</font>

301
00:13:41,560 --> 00:13:47,020
<font color="#CCCCCC">other</font><font color="#E5E5E5"> people at other people's code too</font>

302
00:13:43,060 --> 00:13:48,489
much and I got told though we're<font color="#E5E5E5"> not</font>

303
00:13:47,020 --> 00:13:51,899
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to push that we're</font><font color="#E5E5E5"> going to put a</font>

304
00:13:48,490 --> 00:13:51,899
warning<font color="#E5E5E5"> instead that'll do it right</font>

305
00:13:52,170 --> 00:13:57,250
<font color="#CCCCCC">sitting a bouncer</font><font color="#E5E5E5"> loose</font><font color="#CCCCCC"> young it's not a</font>

306
00:13:54,279 --> 00:13:59,920
thing I'll<font color="#E5E5E5"> do</font><font color="#CCCCCC"> we know Laura now you'll</font>

307
00:13:57,250 --> 00:14:01,540
see a lot of Laura in this in these

308
00:13:59,920 --> 00:14:04,000
slides<font color="#E5E5E5"> I'm it's a thing</font><font color="#CCCCCC"> that I look at</font>

309
00:14:01,540 --> 00:14:06,069
quite a bit<font color="#CCCCCC"> because I</font><font color="#E5E5E5"> kind of liked the</font>

310
00:14:04,000 --> 00:14:09,520
idea for<font color="#E5E5E5"> those of you who don't know lor</font>

311
00:14:06,070 --> 00:14:12,010
a<font color="#CCCCCC"> Laura is a</font><font color="#E5E5E5"> very long range ultra low</font>

312
00:14:09,520 --> 00:14:12,760
<font color="#CCCCCC">power radio frequency communication</font>

313
00:14:12,010 --> 00:14:16,840
protocol

314
00:14:12,760 --> 00:14:19,870
so with only a few offer normal<font color="#CCCCCC"> sign of</font>

315
00:14:16,840 --> 00:14:22,480
battery you can<font color="#E5E5E5"> get a range of</font><font color="#CCCCCC"> up to</font><font color="#E5E5E5"> 5</font>

316
00:14:19,870 --> 00:14:25,750
<font color="#CCCCCC">kilometers very easily yes it were it</font>

317
00:14:22,480 --> 00:14:28,000
propagates that well through air so I

318
00:14:25,750 --> 00:14:29,440
<font color="#CCCCCC">looked at</font><font color="#E5E5E5"> their implementation and I</font>

319
00:14:28,000 --> 00:14:33,550
found this lovely<font color="#E5E5E5"> little function look</font>

320
00:14:29,440 --> 00:14:35,830
at that<font color="#CCCCCC"> lower class random it just</font>

321
00:14:33,550 --> 00:14:38,380
returns<font color="#E5E5E5"> the RSSI for those of you who</font>

322
00:14:35,830 --> 00:14:40,420
don't<font color="#E5E5E5"> know that's the receives receives</font>

323
00:14:38,380 --> 00:14:43,900
signal strength indicator

324
00:14:40,420 --> 00:14:47,199
it's just how loud is it the problem is

325
00:14:43,900 --> 00:14:49,030
IOT<font color="#E5E5E5"> devices don't move the RSSI is</font><font color="#CCCCCC"> going</font>

326
00:14:47,200 --> 00:14:52,150
<font color="#CCCCCC">to be static what are you doing I start</font>

327
00:14:49,030 --> 00:14:55,350
random<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> you can make it</font><font color="#CCCCCC"> random and</font>

328
00:14:52,150 --> 00:14:58,750
I'll show<font color="#E5E5E5"> you how but that isn't random</font>

329
00:14:55,350 --> 00:15:02,680
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> so I mentioned at the start</font>

330
00:14:58,750 --> 00:15:04,870
<font color="#CCCCCC">there's going to be some mathematics to</font>

331
00:15:02,680 --> 00:15:07,089
make a little<font color="#E5E5E5"> bit easier</font><font color="#CCCCCC"> I have a</font><font color="#E5E5E5"> little</font>

332
00:15:04,870 --> 00:15:10,900
<font color="#E5E5E5">visual cue</font><font color="#CCCCCC"> that will tell you in the</font>

333
00:15:07,090 --> 00:15:13,630
<font color="#E5E5E5">maths is running</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so when this</font>

334
00:15:10,900 --> 00:15:14,770
changes<font color="#E5E5E5"> you're safe</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> because being a</font>

335
00:15:13,630 --> 00:15:17,290
<font color="#CCCCCC">mathematician I get one of</font><font color="#E5E5E5"> three</font>

336
00:15:14,770 --> 00:15:21,579
responses<font color="#CCCCCC"> the first one is kind</font><font color="#E5E5E5"> of like</font>

337
00:15:17,290 --> 00:15:23,980
oh he must be<font color="#E5E5E5"> so clever</font><font color="#CCCCCC"> no I'm really</font>

338
00:15:21,580 --> 00:15:25,630
<font color="#E5E5E5">sorry I'm not you know when I make a cup</font>

339
00:15:23,980 --> 00:15:27,580
of<font color="#CCCCCC"> tea and how I had enough coffee then</font>

340
00:15:25,630 --> 00:15:29,080
<font color="#CCCCCC">you know</font><font color="#E5E5E5"> sort of</font><font color="#CCCCCC"> its I put the teaspoon</font>

341
00:15:27,580 --> 00:15:30,490
in the bin<font color="#CCCCCC"> and the teabag in the sink</font>

342
00:15:29,080 --> 00:15:32,530
<font color="#E5E5E5">and I put the milk on my head it's</font><font color="#CCCCCC"> just</font>

343
00:15:30,490 --> 00:15:34,120
not good it's<font color="#E5E5E5"> not good</font><font color="#CCCCCC"> or I get the</font>

344
00:15:32,530 --> 00:15:36,130
<font color="#E5E5E5">other reaction</font><font color="#CCCCCC"> of kind</font><font color="#E5E5E5"> of oh I was</font>

345
00:15:34,120 --> 00:15:38,230
terrible at maths at school and the

346
00:15:36,130 --> 00:15:40,240
<font color="#E5E5E5">self-deprecation just keeps flowing</font><font color="#CCCCCC"> or</font>

347
00:15:38,230 --> 00:15:43,660
the last one and this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> actually quite</font>

348
00:15:40,240 --> 00:15:46,480
<font color="#E5E5E5">common is I hated maths at school and</font>

349
00:15:43,660 --> 00:15:49,120
it's like well is the<font color="#CCCCCC"> outpour of PTSD</font>

350
00:15:46,480 --> 00:15:51,280
<font color="#CCCCCC">for mrs. Smith</font><font color="#E5E5E5"> your maths teacher</font><font color="#CCCCCC"> I'm</font>

351
00:15:49,120 --> 00:15:52,690
<font color="#E5E5E5">really sorry for what you</font><font color="#CCCCCC"> did / like if</font>

352
00:15:51,280 --> 00:15:53,470
you saw mass the way I did you know

353
00:15:52,690 --> 00:15:55,000
<font color="#E5E5E5">you'd love it</font>

354
00:15:53,470 --> 00:15:57,940
hopefully you'll love a little<font color="#E5E5E5"> bit of</font>

355
00:15:55,000 --> 00:16:00,430
this as well<font color="#CCCCCC"> so I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to use some</font>

356
00:15:57,940 --> 00:16:02,500
<font color="#CCCCCC">slightly unusual notation</font><font color="#E5E5E5"> and</font>

357
00:16:00,430 --> 00:16:04,870
definitions nothing too much<font color="#E5E5E5"> I'm only</font>

358
00:16:02,500 --> 00:16:06,820
going to define things<font color="#E5E5E5"> no theorems no</font>

359
00:16:04,870 --> 00:16:09,190
proofs<font color="#E5E5E5"> nothing what you would</font><font color="#CCCCCC"> call hard</font>

360
00:16:06,820 --> 00:16:11,110
or difficult<font color="#E5E5E5"> so first of all I'm</font><font color="#CCCCCC"> going</font>

361
00:16:09,190 --> 00:16:14,310
<font color="#CCCCCC">to use Greek letters</font><font color="#E5E5E5"> that's what that</font><font color="#CCCCCC"> is</font>

362
00:16:11,110 --> 00:16:16,870
that<font color="#CCCCCC"> little</font><font color="#E5E5E5"> weird-looking</font><font color="#CCCCCC"> o is a Sigma</font>

363
00:16:14,310 --> 00:16:17,859
<font color="#CCCCCC">just in case you didn't</font><font color="#E5E5E5"> know</font><font color="#CCCCCC"> that Sigma</font>

364
00:16:16,870 --> 00:16:20,650
<font color="#CCCCCC">is what I'm going to</font><font color="#E5E5E5"> use to</font><font color="#CCCCCC"> represent</font>

365
00:16:17,860 --> 00:16:23,290
strings<font color="#E5E5E5"> now the straight lines either</font>

366
00:16:20,650 --> 00:16:24,430
side they are<font color="#E5E5E5"> actually taken from linear</font>

367
00:16:23,290 --> 00:16:27,099
<font color="#CCCCCC">algebra so</font><font color="#E5E5E5"> that</font>

368
00:16:24,430 --> 00:16:30,430
<font color="#CCCCCC">does have a magnitude a length literally</font>

369
00:16:27,100 --> 00:16:32,860
<font color="#E5E5E5">so this is the string length the next</font>

370
00:16:30,430 --> 00:16:36,250
one is log<font color="#CCCCCC"> base 2 of</font><font color="#E5E5E5"> why we use that</font><font color="#CCCCCC"> a</font>

371
00:16:32,860 --> 00:16:39,370
lot<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> of this it answers the</font>

372
00:16:36,250 --> 00:16:42,330
<font color="#CCCCCC">question what is the number</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> number X</font>

373
00:16:39,370 --> 00:16:46,120
such that 2 to the<font color="#CCCCCC"> power of X</font><font color="#E5E5E5"> equals y</font>

374
00:16:42,330 --> 00:16:48,610
<font color="#CCCCCC">ok and when we do that</font><font color="#E5E5E5"> well we</font><font color="#CCCCCC"> actually</font>

375
00:16:46,120 --> 00:16:51,339
<font color="#E5E5E5">get out the number of bits needed to</font>

376
00:16:48,610 --> 00:16:55,300
<font color="#CCCCCC">write the number why</font><font color="#E5E5E5"> does that kind of</font>

377
00:16:51,339 --> 00:16:58,120
make sense<font color="#CCCCCC"> yeah ok cool</font><font color="#E5E5E5"> to to the Omega</font>

378
00:16:55,300 --> 00:17:00,310
is shorthand for<font color="#E5E5E5"> the set of 0 and</font><font color="#CCCCCC"> 1 to</font>

379
00:16:58,120 --> 00:17:02,649
<font color="#E5E5E5">the power n that is infinitely many from</font>

380
00:17:00,310 --> 00:17:04,958
that set<font color="#E5E5E5"> that is a thing called the</font>

381
00:17:02,649 --> 00:17:08,530
infinite binary string space<font color="#E5E5E5"> also called</font>

382
00:17:04,959 --> 00:17:11,559
the<font color="#CCCCCC"> contour space after some dead German</font>

383
00:17:08,530 --> 00:17:12,550
guy<font color="#E5E5E5"> so we also use</font><font color="#CCCCCC"> this notation here 2</font>

384
00:17:11,559 --> 00:17:15,280
to the less<font color="#E5E5E5"> than Omega</font>

385
00:17:12,550 --> 00:17:19,839
that just means finite strings<font color="#E5E5E5"> arbitrary</font>

386
00:17:15,280 --> 00:17:21,970
length<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> arbitrary length so it could</font>

387
00:17:19,839 --> 00:17:24,250
be longer<font color="#E5E5E5"> than the visible universe but</font>

388
00:17:21,970 --> 00:17:26,770
it is only it is still finite in some

389
00:17:24,250 --> 00:17:28,510
sense<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is what I want to sort of</font>

390
00:17:26,770 --> 00:17:30,700
show<font color="#CCCCCC"> you</font><font color="#E5E5E5"> we're gonna build up to a</font>

391
00:17:28,510 --> 00:17:33,429
proper<font color="#CCCCCC"> mathematical definition of</font>

392
00:17:30,700 --> 00:17:37,000
<font color="#E5E5E5">randomness</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> I'm gonna</font><font color="#E5E5E5"> build up</font>

393
00:17:33,429 --> 00:17:38,679
<font color="#E5E5E5">there quite quite steadily</font><font color="#CCCCCC"> this won't</font>

394
00:17:37,000 --> 00:17:41,130
<font color="#E5E5E5">take</font><font color="#CCCCCC"> too long don't worry this battery</font>

395
00:17:38,679 --> 00:17:44,320
<font color="#CCCCCC">is finite so I have to you know</font><font color="#E5E5E5"> keep up</font>

396
00:17:41,130 --> 00:17:46,179
<font color="#E5E5E5">take this little game</font><font color="#CCCCCC"> on the</font><font color="#E5E5E5"> left</font><font color="#CCCCCC"> ok the</font>

397
00:17:44,320 --> 00:17:48,250
blocks can<font color="#CCCCCC"> move up and</font><font color="#E5E5E5"> down they can't</font>

398
00:17:46,179 --> 00:17:51,280
go left and<font color="#E5E5E5"> right they</font><font color="#CCCCCC"> only move up and</font>

399
00:17:48,250 --> 00:17:53,020
down the blocks moving up and down<font color="#E5E5E5"> give</font>

400
00:17:51,280 --> 00:17:55,750
you lots of<font color="#E5E5E5"> possible</font><font color="#CCCCCC"> situations that</font>

401
00:17:53,020 --> 00:17:57,340
they can shift into how many<font color="#E5E5E5"> situations</font>

402
00:17:55,750 --> 00:18:01,150
are there how they I<font color="#CCCCCC"> describe this</font>

403
00:17:57,340 --> 00:18:06,100
accurately<font color="#CCCCCC"> well</font><font color="#E5E5E5"> I have 12 bits</font><font color="#CCCCCC"> I have 9</font>

404
00:18:01,150 --> 00:18:10,210
ones<font color="#E5E5E5"> and three</font><font color="#CCCCCC"> zeroes</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> surely it's</font><font color="#E5E5E5"> 12</font>

405
00:18:06,100 --> 00:18:14,050
bits<font color="#E5E5E5"> the answer is no here's why I can</font>

406
00:18:10,210 --> 00:18:16,420
take the blank space at the top or in

407
00:18:14,050 --> 00:18:18,370
the first position or in<font color="#CCCCCC"> the second two</font>

408
00:18:16,420 --> 00:18:24,640
<font color="#CCCCCC">bonds a</font><font color="#E5E5E5"> position</font><font color="#CCCCCC"> or in the</font><font color="#E5E5E5"> last position</font>

409
00:18:18,370 --> 00:18:28,570
<font color="#E5E5E5">so that's 0 0 0 1</font><font color="#CCCCCC"> 1 0</font><font color="#E5E5E5"> 1 1</font><font color="#CCCCCC"> 2 bits 2 bits</font>

410
00:18:24,640 --> 00:18:31,150
<font color="#E5E5E5">per column</font><font color="#CCCCCC"> DAF 6 bits make so if I have</font>

411
00:18:28,570 --> 00:18:34,210
<font color="#CCCCCC">12 bits in this</font><font color="#E5E5E5"> sense</font><font color="#CCCCCC"> I actually only</font>

412
00:18:31,150 --> 00:18:36,690
<font color="#E5E5E5">have 6 free bits of entropy effectively</font>

413
00:18:34,210 --> 00:18:39,090
and<font color="#CCCCCC"> to be here being the</font>

414
00:18:36,690 --> 00:18:41,340
<font color="#CCCCCC">tire state-space and the normally you</font>

415
00:18:39,090 --> 00:18:42,570
apply some probability distribution<font color="#E5E5E5"> that</font>

416
00:18:41,340 --> 00:18:45,270
is<font color="#E5E5E5"> there were some states that</font><font color="#CCCCCC"> are more</font>

417
00:18:42,570 --> 00:18:46,470
likely<font color="#E5E5E5"> and some that are less likely so</font>

418
00:18:45,270 --> 00:18:49,050
it's common when<font color="#E5E5E5"> you speak</font><font color="#CCCCCC"> to people</font>

419
00:18:46,470 --> 00:18:49,440
<font color="#E5E5E5">entropy that's disorder right</font><font color="#CCCCCC"> mm not</font>

420
00:18:49,050 --> 00:18:51,180
really

421
00:18:49,440 --> 00:18:52,650
<font color="#E5E5E5">I refer you to the work of Lydia</font><font color="#CCCCCC"> Glatt</font>

422
00:18:51,180 --> 00:18:55,110
so in Chicago I think<font color="#E5E5E5"> it's Chicago</font>

423
00:18:52,650 --> 00:18:58,110
<font color="#E5E5E5">University</font><font color="#CCCCCC"> and she's</font><font color="#E5E5E5"> working on systems</font>

424
00:18:55,110 --> 00:19:00,750
<font color="#E5E5E5">where the entropy tends towards order</font>

425
00:18:58,110 --> 00:19:04,050
and she's<font color="#E5E5E5"> growing what look a lot like</font>

426
00:19:00,750 --> 00:19:06,300
crystals in simulations by manipulating

427
00:19:04,050 --> 00:19:10,230
the energy<font color="#E5E5E5"> bear the entropy not the</font>

428
00:19:06,300 --> 00:19:11,700
<font color="#E5E5E5">energy of a system so this</font><font color="#CCCCCC"> is quite</font>

429
00:19:10,230 --> 00:19:13,620
important we actually have a name<font color="#CCCCCC"> for</font>

430
00:19:11,700 --> 00:19:15,060
this<font color="#CCCCCC"> in information theory that's what</font>

431
00:19:13,620 --> 00:19:17,520
this<font color="#CCCCCC"> little equation</font><font color="#E5E5E5"> is here</font>

432
00:19:15,060 --> 00:19:22,800
it's called Shannon<font color="#E5E5E5"> entropy and it's</font>

433
00:19:17,520 --> 00:19:25,740
just probabilities multiplied<font color="#E5E5E5"> by the</font>

434
00:19:22,800 --> 00:19:28,919
number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> bits</font><font color="#CCCCCC"> needed to</font><font color="#E5E5E5"> express it</font><font color="#CCCCCC"> ok</font>

435
00:19:25,740 --> 00:19:30,510
<font color="#E5E5E5">and then you sum</font><font color="#CCCCCC"> all that up and you get</font>

436
00:19:28,920 --> 00:19:31,940
some<font color="#E5E5E5"> sort of measure which</font><font color="#CCCCCC"> you can use</font>

437
00:19:30,510 --> 00:19:35,450
all right

438
00:19:31,940 --> 00:19:39,410
we're going to play a<font color="#E5E5E5"> little game</font><font color="#CCCCCC"> okay</font>

439
00:19:35,450 --> 00:19:42,390
there's anyone really not like bananas

440
00:19:39,410 --> 00:19:45,660
<font color="#CCCCCC">right your mum if I throw a banana</font><font color="#E5E5E5"> with</font>

441
00:19:42,390 --> 00:19:48,540
someone<font color="#E5E5E5"> gonna catch it yeah okay</font><font color="#CCCCCC"> one</font>

442
00:19:45,660 --> 00:19:55,710
over there<font color="#E5E5E5"> lovely can stand up for</font><font color="#CCCCCC"> me</font>

443
00:19:48,540 --> 00:19:57,990
<font color="#E5E5E5">I'm one over there okay I just pick up</font>

444
00:19:55,710 --> 00:20:00,690
the banana and<font color="#E5E5E5"> stand up I have</font><font color="#CCCCCC"> pop-up</font>

445
00:19:57,990 --> 00:20:02,400
<font color="#E5E5E5">bananas if you'd like yes that nothing's</font>

446
00:20:00,690 --> 00:20:05,310
gonna<font color="#E5E5E5"> happen what I want to show you is</font>

447
00:20:02,400 --> 00:20:08,730
this<font color="#E5E5E5"> is a</font><font color="#CCCCCC"> room full of 400 chairs</font><font color="#E5E5E5"> okay</font>

448
00:20:05,310 --> 00:20:11,360
<font color="#CCCCCC">and I've randomly chosen two people or</font>

449
00:20:08,730 --> 00:20:14,220
random<font color="#CCCCCC"> ish you know I don't ask first</font>

450
00:20:11,360 --> 00:20:16,439
<font color="#E5E5E5">but I randomly chosen two people out of</font>

451
00:20:14,220 --> 00:20:19,050
this distribution<font color="#E5E5E5"> of people to stand up</font>

452
00:20:16,440 --> 00:20:21,120
<font color="#E5E5E5">and those</font><font color="#CCCCCC"> are getting my I my</font><font color="#E5E5E5"> one bits</font>

453
00:20:19,050 --> 00:20:22,350
and the rest of your<font color="#E5E5E5"> all</font><font color="#CCCCCC"> zeros all the</font>

454
00:20:21,120 --> 00:20:24,899
other seats<font color="#E5E5E5"> are</font><font color="#CCCCCC"> zeros</font><font color="#E5E5E5"> you can sit</font><font color="#CCCCCC"> down</font>

455
00:20:22,350 --> 00:20:27,480
thank you but what<font color="#E5E5E5"> if I have n many</font>

456
00:20:24,900 --> 00:20:29,130
people<font color="#E5E5E5"> okay we're now playing random</font>

457
00:20:27,480 --> 00:20:30,720
games can we enumerate some<font color="#E5E5E5"> sort of</font>

458
00:20:29,130 --> 00:20:33,360
<font color="#E5E5E5">information about this random game and</font>

459
00:20:30,720 --> 00:20:36,480
the answer is yes okay<font color="#CCCCCC"> what are we doing</font>

460
00:20:33,360 --> 00:20:39,990
<font color="#CCCCCC">I'm taking some n the number of empty</font>

461
00:20:36,480 --> 00:20:41,660
buckets<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I'm choosing two of them and</font>

462
00:20:39,990 --> 00:20:44,310
we use<font color="#CCCCCC"> this</font><font color="#E5E5E5"> this is called the binomial</font>

463
00:20:41,660 --> 00:20:46,590
coefficient<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I can define very</font>

464
00:20:44,310 --> 00:20:48,270
rigidly<font color="#E5E5E5"> what how</font><font color="#CCCCCC"> many possible games</font>

465
00:20:46,590 --> 00:20:51,360
there<font color="#CCCCCC"> are for a given</font><font color="#E5E5E5"> n of</font>

466
00:20:48,270 --> 00:20:56,220
game of<font color="#E5E5E5"> two banana throwing okay and the</font>

467
00:20:51,360 --> 00:20:59,610
answer<font color="#CCCCCC"> is N squared minus n over 2 which</font>

468
00:20:56,220 --> 00:21:02,190
is expressible here as<font color="#E5E5E5"> I need this many</font>

469
00:20:59,610 --> 00:21:05,428
bits<font color="#E5E5E5"> to express this number and then I</font>

470
00:21:02,190 --> 00:21:08,760
can address<font color="#E5E5E5"> every single</font><font color="#CCCCCC"> game in</font><font color="#E5E5E5"> the</font>

471
00:21:05,429 --> 00:21:11,510
space<font color="#E5E5E5"> okay so although it looks very</font>

472
00:21:08,760 --> 00:21:14,429
random<font color="#E5E5E5"> it's actually a very small</font>

473
00:21:11,510 --> 00:21:17,250
complexity compared to the overall<font color="#CCCCCC"> space</font>

474
00:21:14,429 --> 00:21:19,080
of<font color="#E5E5E5"> n there are other things I can do I</font>

475
00:21:17,250 --> 00:21:21,420
could<font color="#E5E5E5"> measure for example the whole</font>

476
00:21:19,080 --> 00:21:23,490
length and I could say<font color="#CCCCCC"> to coordinates</font>

477
00:21:21,420 --> 00:21:25,320
the white space on<font color="#E5E5E5"> the left and then the</font>

478
00:21:23,490 --> 00:21:28,080
<font color="#E5E5E5">white space between</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> two bananas and</font>

479
00:21:25,320 --> 00:21:29,939
then I can say<font color="#E5E5E5"> well what's the biggest</font>

480
00:21:28,080 --> 00:21:31,320
number<font color="#CCCCCC"> I can</font><font color="#E5E5E5"> have it's when one's in the</font>

481
00:21:29,940 --> 00:21:33,179
middle and the other<font color="#E5E5E5"> ones at the other</font>

482
00:21:31,320 --> 00:21:35,280
<font color="#E5E5E5">end because</font><font color="#CCCCCC"> then as this one moves this</font>

483
00:21:33,179 --> 00:21:37,950
way<font color="#E5E5E5"> this number</font><font color="#CCCCCC"> gets bigger</font><font color="#E5E5E5"> but this</font>

484
00:21:35,280 --> 00:21:40,620
number<font color="#E5E5E5"> like for light gets smaller give</font>

485
00:21:37,950 --> 00:21:44,100
or take<font color="#E5E5E5"> okay so actually</font><font color="#CCCCCC"> I only need</font>

486
00:21:40,620 --> 00:21:47,010
there<font color="#CCCCCC"> to log to</font><font color="#E5E5E5"> log base</font><font color="#CCCCCC"> 2 of n over 2</font>

487
00:21:44,100 --> 00:21:48,330
<font color="#E5E5E5">which</font><font color="#CCCCCC"> is basically twice times the</font>

488
00:21:47,010 --> 00:21:51,210
number<font color="#E5E5E5"> of bits that are caught</font><font color="#CCCCCC"> to</font>

489
00:21:48,330 --> 00:21:52,649
describe half the space<font color="#E5E5E5"> notice how a</font>

490
00:21:51,210 --> 00:21:54,300
random<font color="#CCCCCC"> gain that have very little</font>

491
00:21:52,650 --> 00:21:57,270
<font color="#E5E5E5">meaning and may or may not be a</font>

492
00:21:54,300 --> 00:21:59,790
contrived example has given us some<font color="#E5E5E5"> sort</font>

493
00:21:57,270 --> 00:22:01,440
of<font color="#CCCCCC"> information about</font><font color="#E5E5E5"> a randomness which</font>

494
00:21:59,790 --> 00:22:03,720
we can then<font color="#E5E5E5"> move forward with what I</font>

495
00:22:01,440 --> 00:22:06,809
want to get to is this<font color="#E5E5E5"> this is common go</font>

496
00:22:03,720 --> 00:22:08,970
of complexity<font color="#E5E5E5"> so we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> deal</font>

497
00:22:06,809 --> 00:22:10,320
with<font color="#E5E5E5"> universal turing machines who's</font>

498
00:22:08,970 --> 00:22:13,710
heard of<font color="#E5E5E5"> those before</font><font color="#CCCCCC"> anyone</font>

499
00:22:10,320 --> 00:22:16,470
<font color="#CCCCCC">okö</font><font color="#E5E5E5"> billion so the</font><font color="#CCCCCC"> comma go of</font>

500
00:22:13,710 --> 00:22:20,210
complexity formally is you say what is

501
00:22:16,470 --> 00:22:23,429
<font color="#E5E5E5">the shortest input to that search that</font>

502
00:22:20,210 --> 00:22:26,160
<font color="#E5E5E5">the machine will run and it will halt</font>

503
00:22:23,429 --> 00:22:29,540
and it will output<font color="#CCCCCC"> the string</font><font color="#E5E5E5"> I want</font>

504
00:22:26,160 --> 00:22:32,550
<font color="#CCCCCC">okay that is</font><font color="#E5E5E5"> the question you're</font><font color="#CCCCCC"> asking</font>

505
00:22:29,540 --> 00:22:35,490
<font color="#E5E5E5">it</font><font color="#CCCCCC"> actually makes sense</font><font color="#E5E5E5"> to say what is</font>

506
00:22:32,550 --> 00:22:37,590
the Python comma go of complexity<font color="#E5E5E5"> you'll</font>

507
00:22:35,490 --> 00:22:38,550
<font color="#E5E5E5">notice it goes from C to K that's</font>

508
00:22:37,590 --> 00:22:41,730
because there's a thing called

509
00:22:38,550 --> 00:22:43,620
<font color="#E5E5E5">prefix-free</font><font color="#CCCCCC"> comig of complexity and</font>

510
00:22:41,730 --> 00:22:46,980
<font color="#E5E5E5">that's actually minimal across all</font>

511
00:22:43,620 --> 00:22:51,419
information content measures that's a

512
00:22:46,980 --> 00:22:52,860
proof<font color="#CCCCCC"> due to Chayton but I the</font><font color="#E5E5E5"> reason</font>

513
00:22:51,420 --> 00:22:55,650
you<font color="#E5E5E5"> would want to have prefix-free says</font>

514
00:22:52,860 --> 00:22:58,409
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> prefix-free set is the set of phone</font>

515
00:22:55,650 --> 00:22:59,970
numbers<font color="#E5E5E5"> what they've got prefixes and</font>

516
00:22:58,410 --> 00:23:02,040
not quite<font color="#E5E5E5"> what it means</font>

517
00:22:59,970 --> 00:23:03,570
you can't take<font color="#CCCCCC"> two phone numbers put</font>

518
00:23:02,040 --> 00:23:06,389
them together and get another one

519
00:23:03,570 --> 00:23:08,669
as in no phone number<font color="#E5E5E5"> is a prefix of</font>

520
00:23:06,390 --> 00:23:10,620
another<font color="#E5E5E5"> so the set of phone numbers is</font>

521
00:23:08,670 --> 00:23:13,650
prefix free<font color="#E5E5E5"> that's all that means</font>

522
00:23:10,620 --> 00:23:16,290
<font color="#E5E5E5">easy easy easy so let's ask ourselves</font>

523
00:23:13,650 --> 00:23:20,700
some questions then<font color="#E5E5E5"> these</font><font color="#CCCCCC"> are three</font>

524
00:23:16,290 --> 00:23:27,330
strings<font color="#E5E5E5"> okay how do they</font><font color="#CCCCCC"> end</font><font color="#E5E5E5"> Oh 100 100</font>

525
00:23:20,700 --> 00:23:32,760
100 100<font color="#E5E5E5"> 100 101 exactly</font><font color="#CCCCCC"> Oh</font><font color="#E5E5E5"> 1 100 1 100 1</font>

526
00:23:27,330 --> 00:23:38,429
101<font color="#E5E5E5"> exactly</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> easy how about this one</font>

527
00:23:32,760 --> 00:23:43,260
<font color="#E5E5E5">100 100 100 0 100 101 101</font><font color="#CCCCCC"> oh 1</font><font color="#E5E5E5"> 100 100</font>

528
00:23:38,430 --> 00:23:48,080
101<font color="#CCCCCC"> 1 you don't know this this song oh</font>

529
00:23:43,260 --> 00:23:48,080
<font color="#CCCCCC">no</font><font color="#E5E5E5"> no it's not it's oh oh but good try</font>

530
00:23:48,770 --> 00:23:53,670
so here we<font color="#CCCCCC"> actually have</font><font color="#E5E5E5"> three strings</font>

531
00:23:51,240 --> 00:23:55,230
<font color="#CCCCCC">I'm gonna</font><font color="#E5E5E5"> call the third one random will</font>

532
00:23:53,670 --> 00:23:58,080
<font color="#E5E5E5">imagine it keeps on going forever that's</font>

533
00:23:55,230 --> 00:23:59,910
required<font color="#CCCCCC"> and I can write</font><font color="#E5E5E5"> these very</font>

534
00:23:58,080 --> 00:24:02,689
short<font color="#CCCCCC"> little programs and will reproduce</font>

535
00:23:59,910 --> 00:24:04,920
<font color="#E5E5E5">the first two strings but I can't</font>

536
00:24:02,690 --> 00:24:08,070
algorithmically reproduce the third

537
00:24:04,920 --> 00:24:13,080
string with ease the easiest way to do

538
00:24:08,070 --> 00:24:15,300
it is to just<font color="#E5E5E5"> write it out and that's</font>

539
00:24:13,080 --> 00:24:17,790
<font color="#E5E5E5">the</font><font color="#CCCCCC"> intuition behind</font><font color="#E5E5E5"> comig of of</font>

540
00:24:15,300 --> 00:24:19,590
complexity the shortest program to

541
00:24:17,790 --> 00:24:21,510
produce a string if the string is

542
00:24:19,590 --> 00:24:24,600
complicated<font color="#E5E5E5"> enough the only</font><font color="#CCCCCC"> way to do it</font>

543
00:24:21,510 --> 00:24:26,400
<font color="#CCCCCC">is to print the thing</font><font color="#E5E5E5"> okay and we have</font><font color="#CCCCCC"> a</font>

544
00:24:24,600 --> 00:24:28,439
name<font color="#CCCCCC"> for that</font><font color="#E5E5E5"> it's called</font><font color="#CCCCCC"> C</font><font color="#E5E5E5"> income</font>

545
00:24:26,400 --> 00:24:30,060
<font color="#CCCCCC">possibility these</font><font color="#E5E5E5"> are all things you can</font>

546
00:24:28,440 --> 00:24:32,520
<font color="#E5E5E5">go in Google later</font><font color="#CCCCCC"> it's absolutely fine</font>

547
00:24:30,060 --> 00:24:35,610
<font color="#CCCCCC">I will answer questions with beer</font><font color="#E5E5E5"> for</font>

548
00:24:32,520 --> 00:24:37,830
hours about<font color="#E5E5E5"> this kind of thing</font><font color="#CCCCCC"> if that's</font>

549
00:24:35,610 --> 00:24:41,100
your bag<font color="#E5E5E5"> come and speak</font><font color="#CCCCCC"> to me but if we</font>

550
00:24:37,830 --> 00:24:44,730
take any finite string<font color="#E5E5E5"> Sigma we can ask</font>

551
00:24:41,100 --> 00:24:49,439
well is there a string<font color="#E5E5E5"> C is a number C</font>

552
00:24:44,730 --> 00:24:53,970
sorry<font color="#E5E5E5"> which will keep the length of the</font>

553
00:24:49,440 --> 00:24:56,910
string<font color="#E5E5E5"> under its complexity is asking</font>

554
00:24:53,970 --> 00:25:00,270
the opposite<font color="#E5E5E5"> question okay but if it can</font>

555
00:24:56,910 --> 00:25:02,760
I<font color="#E5E5E5"> claim that the string is long enough</font>

556
00:25:00,270 --> 00:25:04,650
<font color="#CCCCCC">that whenever</font><font color="#E5E5E5"> you process it the only</font>

557
00:25:02,760 --> 00:25:07,830
way to generate<font color="#E5E5E5"> that string is</font><font color="#CCCCCC"> just to</font>

558
00:25:04,650 --> 00:25:08,490
print<font color="#E5E5E5"> it out so intuitively we can't do</font>

559
00:25:07,830 --> 00:25:10,530
<font color="#E5E5E5">better</font>

560
00:25:08,490 --> 00:25:11,760
<font color="#E5E5E5">than producing</font><font color="#CCCCCC"> the string with a print</font>

561
00:25:10,530 --> 00:25:16,440
<font color="#CCCCCC">function of some kind</font>

562
00:25:11,760 --> 00:25:18,150
all right so<font color="#CCCCCC"> comic incompressibility</font>

563
00:25:16,440 --> 00:25:22,350
leads to this<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a mathematical</font>

564
00:25:18,150 --> 00:25:26,270
<font color="#CCCCCC">definition of randomness okay a string</font>

565
00:25:22,350 --> 00:25:29,610
is one random<font color="#E5E5E5"> the one refers to the</font>

566
00:25:26,270 --> 00:25:31,290
<font color="#CCCCCC">cheering jump of it</font><font color="#E5E5E5"> so two random is</font>

567
00:25:29,610 --> 00:25:32,790
above the double<font color="#E5E5E5"> jump</font><font color="#CCCCCC"> aside below the</font>

568
00:25:31,290 --> 00:25:34,379
double<font color="#E5E5E5"> jump and then three unknowns</font>

569
00:25:32,790 --> 00:25:37,350
below the triple<font color="#CCCCCC"> jump and</font><font color="#E5E5E5"> all that sort</font>

570
00:25:34,380 --> 00:25:42,180
of stuff<font color="#E5E5E5"> it's one random if I can take</font>

571
00:25:37,350 --> 00:25:45,270
<font color="#E5E5E5">any initial segment</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that doesn't</font>

572
00:25:42,180 --> 00:25:47,370
give me<font color="#CCCCCC"> a clue as to</font><font color="#E5E5E5"> the next bit it's</font>

573
00:25:45,270 --> 00:25:49,920
always gonna be seeing compressible<font color="#E5E5E5"> okay</font>

574
00:25:47,370 --> 00:25:52,469
the whole<font color="#E5E5E5"> infinite string there</font><font color="#CCCCCC"> was a</font>

575
00:25:49,920 --> 00:25:54,870
<font color="#E5E5E5">finite number see that minimizes at</font>

576
00:25:52,470 --> 00:25:57,660
below its complexity<font color="#E5E5E5"> okay</font>

577
00:25:54,870 --> 00:26:00,719
<font color="#E5E5E5">and</font><font color="#CCCCCC"> that string</font><font color="#E5E5E5"> can effectively be</font><font color="#CCCCCC"> zero</font>

578
00:25:57,660 --> 00:26:03,000
<font color="#E5E5E5">if you want this is where we're going</font>

579
00:26:00,720 --> 00:26:06,120
<font color="#CCCCCC">okay this is actually used the</font><font color="#E5E5E5"> owl's</font>

580
00:26:03,000 --> 00:26:08,580
<font color="#E5E5E5">next bits test is based on exactly this</font>

581
00:26:06,120 --> 00:26:09,840
idea<font color="#E5E5E5"> and</font><font color="#CCCCCC"> it's equivalent a lot to</font>

582
00:26:08,580 --> 00:26:11,429
another very important notion<font color="#E5E5E5"> of</font>

583
00:26:09,840 --> 00:26:13,409
randomness<font color="#E5E5E5"> called Martin loaf and of us</font>

584
00:26:11,430 --> 00:26:15,930
but ultimately<font color="#E5E5E5"> that's all I wanted to do</font>

585
00:26:13,410 --> 00:26:18,780
<font color="#CCCCCC">there's a</font><font color="#E5E5E5"> little summary entropy</font><font color="#CCCCCC"> the</font>

586
00:26:15,930 --> 00:26:21,900
measure of a number of<font color="#CCCCCC"> arrangements with</font>

587
00:26:18,780 --> 00:26:23,790
a probability distribution<font color="#E5E5E5"> complexity is</font>

588
00:26:21,900 --> 00:26:25,560
basically the shortest string<font color="#E5E5E5"> that we</font>

589
00:26:23,790 --> 00:26:28,110
need to reproduce<font color="#CCCCCC"> some</font><font color="#E5E5E5"> other</font><font color="#CCCCCC"> strength</font>

590
00:26:25,560 --> 00:26:30,090
and randomness<font color="#E5E5E5"> is a string that doesn't</font>

591
00:26:28,110 --> 00:26:32,399
have that can't be squashed into<font color="#E5E5E5"> an</font>

592
00:26:30,090 --> 00:26:34,139
algorithm<font color="#CCCCCC"> okay it can only just be</font>

593
00:26:32,400 --> 00:26:36,570
reproduced<font color="#E5E5E5"> and that's as good</font><font color="#CCCCCC"> as well as</font>

594
00:26:34,140 --> 00:26:37,740
good<font color="#E5E5E5"> as you can do if you're interested</font>

595
00:26:36,570 --> 00:26:39,659
<font color="#E5E5E5">in this stuff and you want to keep</font>

596
00:26:37,740 --> 00:26:41,640
<font color="#CCCCCC">reading there is a handy one</font>

597
00:26:39,660 --> 00:26:43,320
thousand-page book called<font color="#E5E5E5"> algorithmic</font>

598
00:26:41,640 --> 00:26:44,670
randomness and complexity by<font color="#CCCCCC"> Downey and</font>

599
00:26:43,320 --> 00:26:47,220
<font color="#CCCCCC">Hersh</font><font color="#E5E5E5"> fault that I can</font><font color="#CCCCCC"> thoroughly</font>

600
00:26:44,670 --> 00:26:53,450
recommend<font color="#E5E5E5"> if it's not your thing we'll</font>

601
00:26:47,220 --> 00:26:55,440
leave it there<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> you're now safe so</font>

602
00:26:53,450 --> 00:26:56,610
if you didn't understand<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font>

603
00:26:55,440 --> 00:26:57,900
<font color="#CCCCCC">probably shouldn't</font><font color="#E5E5E5"> be talking</font><font color="#CCCCCC"> about</font>

604
00:26:56,610 --> 00:26:59,790
random<font color="#E5E5E5"> numbers if I'm honest with you</font>

605
00:26:57,900 --> 00:27:01,470
but this<font color="#CCCCCC"> is the</font><font color="#E5E5E5"> kind of stuff that's</font>

606
00:26:59,790 --> 00:27:03,810
<font color="#CCCCCC">going on</font><font color="#E5E5E5"> relatively sequential</font>

607
00:27:01,470 --> 00:27:05,610
definitions nothing that I think is

608
00:27:03,810 --> 00:27:07,800
particularly hard maybe a<font color="#E5E5E5"> little bit</font>

609
00:27:05,610 --> 00:27:10,520
mind-bending at the start but this is

610
00:27:07,800 --> 00:27:13,080
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> stuff that we can understand so</font>

611
00:27:10,520 --> 00:27:15,150
what are we doing<font color="#E5E5E5"> what I mentioned</font>

612
00:27:13,080 --> 00:27:16,980
<font color="#CCCCCC">Arduino and</font><font color="#E5E5E5"> that's bad well what's good</font>

613
00:27:15,150 --> 00:27:19,860
what is<font color="#E5E5E5"> good look like I claim this</font><font color="#CCCCCC"> is</font>

614
00:27:16,980 --> 00:27:22,089
what<font color="#E5E5E5"> good looks like okay who thinks</font>

615
00:27:19,860 --> 00:27:24,279
this<font color="#E5E5E5"> looks relatively uncomplicated</font>

616
00:27:22,089 --> 00:27:25,329
good I<font color="#CCCCCC"> think it's very</font><font color="#E5E5E5"> complicated</font><font color="#CCCCCC"> I</font>

617
00:27:24,279 --> 00:27:27,309
<font color="#E5E5E5">think that's a good</font><font color="#CCCCCC"> thing</font>

618
00:27:25,329 --> 00:27:29,979
this is the Linux random number

619
00:27:27,309 --> 00:27:32,619
generator this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> how you get random</font>

620
00:27:29,979 --> 00:27:34,419
numbers out of<font color="#CCCCCC"> slash dev slash</font><font color="#E5E5E5"> random or</font>

621
00:27:32,619 --> 00:27:37,689
slash dev slash<font color="#E5E5E5"> you random if you're not</font>

622
00:27:34,419 --> 00:27:39,309
fussy<font color="#CCCCCC"> about blocking okay</font><font color="#E5E5E5"> notice it has</font>

623
00:27:37,690 --> 00:27:41,769
a lovely little<font color="#E5E5E5"> bit of stuff to measure</font>

624
00:27:39,309 --> 00:27:43,450
the entropy so we're now calculating

625
00:27:41,769 --> 00:27:45,309
entropy<font color="#CCCCCC"> okay I</font><font color="#E5E5E5"> feel</font><font color="#CCCCCC"> like a weatherman</font>

626
00:27:43,450 --> 00:27:47,139
<font color="#E5E5E5">doing this when</font><font color="#CCCCCC"> are calculating entropy</font>

627
00:27:45,309 --> 00:27:49,239
<font color="#CCCCCC">now when it falls below</font><font color="#E5E5E5"> a value were to</font>

628
00:27:47,139 --> 00:27:51,189
pull some out<font color="#CCCCCC"> of the entropy pool that</font>

629
00:27:49,239 --> 00:27:53,409
we've<font color="#E5E5E5"> been</font><font color="#CCCCCC"> managing with this little bit</font>

630
00:27:51,190 --> 00:27:56,049
of circuitry here which is<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to then</font>

631
00:27:53,409 --> 00:28:00,519
make sure<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the probabilities are</font><font color="#CCCCCC"> as</font>

632
00:27:56,049 --> 00:28:02,619
unbiased as<font color="#CCCCCC"> possible</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> I won't bore</font>

633
00:28:00,519 --> 00:28:05,409
you with why I think<font color="#CCCCCC"> you had enough of</font>

634
00:28:02,619 --> 00:28:08,199
<font color="#CCCCCC">that but this</font><font color="#E5E5E5"> is what good works out now</font>

635
00:28:05,409 --> 00:28:12,099
remember those five short lines of code

636
00:28:08,200 --> 00:28:14,739
<font color="#E5E5E5">took two days</font><font color="#CCCCCC"> to fully cycle on an AVR</font>

637
00:28:12,099 --> 00:28:18,189
compared to 26<font color="#E5E5E5"> seconds</font><font color="#CCCCCC"> that gives you an</font>

638
00:28:14,739 --> 00:28:21,549
idea<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> order of magnitude of lost</font>

639
00:28:18,190 --> 00:28:24,129
power by moving<font color="#E5E5E5"> from a laptop to a</font>

640
00:28:21,549 --> 00:28:28,149
microcontroller<font color="#E5E5E5"> you're never gonna get</font>

641
00:28:24,129 --> 00:28:30,129
this<font color="#CCCCCC"> I claimed on an an Arduino</font><font color="#E5E5E5"> well you</font>

642
00:28:28,149 --> 00:28:31,869
can but you won't be able<font color="#E5E5E5"> to do anything</font>

643
00:28:30,129 --> 00:28:35,259
else<font color="#E5E5E5"> with</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> and it might get a</font><font color="#CCCCCC"> little</font>

644
00:28:31,869 --> 00:28:40,689
bit too steep<font color="#E5E5E5"> okay so what</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> we gonna</font>

645
00:28:35,259 --> 00:28:42,879
<font color="#E5E5E5">do what can we do well we can do this we</font>

646
00:28:40,690 --> 00:28:45,940
know the fundamental idea is take some

647
00:28:42,879 --> 00:28:48,428
entropy<font color="#CCCCCC"> pull it do something with it to</font>

648
00:28:45,940 --> 00:28:50,349
make<font color="#E5E5E5"> sure it's there and then seed a</font>

649
00:28:48,429 --> 00:28:55,059
pseudo-random number generator that's<font color="#E5E5E5"> a</font>

650
00:28:50,349 --> 00:28:56,979
lot faster<font color="#E5E5E5"> usually</font><font color="#CCCCCC"> and use that as our</font>

651
00:28:55,059 --> 00:28:59,408
random number<font color="#E5E5E5"> source on a micro</font>

652
00:28:56,979 --> 00:29:03,070
controller<font color="#E5E5E5"> now do we have better</font>

653
00:28:59,409 --> 00:29:04,329
candidates<font color="#E5E5E5"> yes we do</font><font color="#CCCCCC"> sue demanded number</font>

654
00:29:03,070 --> 00:29:07,450
generators<font color="#CCCCCC"> that are could do currently</font>

655
00:29:04,329 --> 00:29:10,119
secure<font color="#E5E5E5"> things like salsa 20 that has</font>

656
00:29:07,450 --> 00:29:13,389
some acceleration if I remember I've

657
00:29:10,119 --> 00:29:14,769
seen support for<font color="#CCCCCC"> cha-cha 20 okay someone</font>

658
00:29:13,389 --> 00:29:18,488
<font color="#E5E5E5">really likes their Latin American dance</font>

659
00:29:14,769 --> 00:29:21,629
<font color="#E5E5E5">ISM</font><font color="#CCCCCC"> the Gimli permutation engine named</font>

660
00:29:18,489 --> 00:29:21,629
<font color="#E5E5E5">because it's really short</font>

661
00:29:22,530 --> 00:29:27,010
<font color="#E5E5E5">that's using</font><font color="#CCCCCC"> live hydrogen that</font><font color="#E5E5E5"> was</font>

662
00:29:24,970 --> 00:29:32,860
developed by<font color="#E5E5E5"> Bernstein</font><font color="#CCCCCC"> that Al and that</font>

663
00:29:27,010 --> 00:29:35,470
<font color="#CCCCCC">is optimized</font><font color="#E5E5E5"> for use on embedded</font><font color="#CCCCCC"> systems</font>

664
00:29:32,860 --> 00:29:37,629
so we have better permutation engines

665
00:29:35,470 --> 00:29:41,110
for generating<font color="#E5E5E5"> these numbers but what we</font>

666
00:29:37,630 --> 00:29:43,480
don't have is a thorough treatment<font color="#E5E5E5"> of</font>

667
00:29:41,110 --> 00:29:45,610
entropy sources and<font color="#E5E5E5"> therefore that are</font>

668
00:29:43,480 --> 00:29:48,160
usually<font color="#CCCCCC"> kind of fingered as being very</font>

669
00:29:45,610 --> 00:29:51,610
<font color="#E5E5E5">good priority the first one is the</font>

670
00:29:48,160 --> 00:29:56,590
watchdog<font color="#CCCCCC"> timer jitter thermal noise from</font>

671
00:29:51,610 --> 00:29:59,080
an ADC and analog/digital converter<font color="#CCCCCC"> RSSI</font>

672
00:29:56,590 --> 00:30:02,159
noise okay<font color="#CCCCCC"> so the</font><font color="#E5E5E5"> noise</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can get</font>

673
00:29:59,080 --> 00:30:03,429
out<font color="#CCCCCC"> of a signal strength value and</font>

674
00:30:02,160 --> 00:30:05,110
thermistor

675
00:30:03,430 --> 00:30:07,690
jitter there's always a little

676
00:30:05,110 --> 00:30:09,790
thermistor<font color="#CCCCCC"> on a CPU in our inside every</font>

677
00:30:07,690 --> 00:30:11,260
microcontroller<font color="#CCCCCC"> and that one is there</font>

678
00:30:09,790 --> 00:30:12,909
<font color="#E5E5E5">for making sure that if the chip gets a</font>

679
00:30:11,260 --> 00:30:14,560
<font color="#E5E5E5">little bit toasty like I mentioned it</font>

680
00:30:12,910 --> 00:30:18,190
shuts off<font color="#CCCCCC"> and saves</font><font color="#E5E5E5"> itself it doesn't</font>

681
00:30:14,560 --> 00:30:19,929
set fire to the building<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so we can</font>

682
00:30:18,190 --> 00:30:22,900
use these<font color="#CCCCCC"> sources but</font><font color="#E5E5E5"> I couldn't find</font>

683
00:30:19,930 --> 00:30:24,700
when I was looking<font color="#E5E5E5"> and I did try maybe I</font>

684
00:30:22,900 --> 00:30:25,810
was<font color="#E5E5E5"> looking</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> wrong language or</font>

685
00:30:24,700 --> 00:30:27,670
<font color="#E5E5E5">something if someone knows I mean I</font>

686
00:30:25,810 --> 00:30:29,379
don't please do let me know<font color="#E5E5E5"> but</font><font color="#CCCCCC"> I tried</font>

687
00:30:27,670 --> 00:30:31,630
<font color="#CCCCCC">to</font><font color="#E5E5E5"> find a thorough treatment of this and</font>

688
00:30:29,380 --> 00:30:34,090
I couldn't really<font color="#E5E5E5"> find it so I decided</font>

689
00:30:31,630 --> 00:30:35,770
to<font color="#E5E5E5"> say why what do we need so</font><font color="#CCCCCC"> we have</font>

690
00:30:34,090 --> 00:30:38,350
<font color="#E5E5E5">these things reference the top left</font>

691
00:30:35,770 --> 00:30:41,950
<font color="#E5E5E5">here's what we need I think a simple</font>

692
00:30:38,350 --> 00:30:44,770
<font color="#CCCCCC">testbed for assessing entropy sources</font>

693
00:30:41,950 --> 00:30:46,690
all right if we can<font color="#CCCCCC"> do that we</font><font color="#E5E5E5"> can get a</font>

694
00:30:44,770 --> 00:30:48,670
like-for-like comparison across<font color="#E5E5E5"> lots of</font>

695
00:30:46,690 --> 00:30:51,310
different<font color="#CCCCCC"> sources and we</font><font color="#E5E5E5"> can do it</font>

696
00:30:48,670 --> 00:30:55,030
between microcontrollers as well<font color="#E5E5E5"> okay</font>

697
00:30:51,310 --> 00:30:57,490
that I think is a useful activity some

698
00:30:55,030 --> 00:31:00,070
code<font color="#CCCCCC"> will get as reasonably good random</font>

699
00:30:57,490 --> 00:31:01,930
number sources and others will give us

700
00:31:00,070 --> 00:31:03,460
very bad<font color="#E5E5E5"> what we should be able to see</font>

701
00:31:01,930 --> 00:31:06,160
<font color="#E5E5E5">that I always want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> look at things</font>

702
00:31:03,460 --> 00:31:07,570
like speed<font color="#CCCCCC"> okay</font>

703
00:31:06,160 --> 00:31:09,460
I'm memory is cheap<font color="#CCCCCC"> so I'm not too</font>

704
00:31:07,570 --> 00:31:11,649
worried about size<font color="#E5E5E5"> but it tends to be</font>

705
00:31:09,460 --> 00:31:14,230
small<font color="#E5E5E5"> anyway I'm worried about speed</font>

706
00:31:11,650 --> 00:31:16,540
<font color="#E5E5E5">okay if you have to wait half an hour to</font>

707
00:31:14,230 --> 00:31:19,840
get entropy<font color="#E5E5E5"> that's probably not</font>

708
00:31:16,540 --> 00:31:21,250
practical<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> hence you know using a</font>

709
00:31:19,840 --> 00:31:23,059
<font color="#CCCCCC">four-year-old</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> a big</font><font color="#E5E5E5"> button isn't</font>

710
00:31:21,250 --> 00:31:25,700
<font color="#E5E5E5">really gonna work</font>

711
00:31:23,059 --> 00:31:27,908
and I also want to<font color="#E5E5E5"> measure like how many</font>

712
00:31:25,700 --> 00:31:30,380
<font color="#E5E5E5">components you need to</font><font color="#CCCCCC"> add what's the</font>

713
00:31:27,909 --> 00:31:32,659
expected cost not just in code but

714
00:31:30,380 --> 00:31:34,640
actually in the Bill<font color="#CCCCCC"> of Materials okay</font>

715
00:31:32,659 --> 00:31:36,740
<font color="#E5E5E5">how much is it going to cost you to</font>

716
00:31:34,640 --> 00:31:39,350
<font color="#E5E5E5">implement this so we set up some sort of</font>

717
00:31:36,740 --> 00:31:41,600
test rig<font color="#E5E5E5"> and to be gathering some sort</font>

718
00:31:39,350 --> 00:31:43,908
of pooling some processing the functions

719
00:31:41,600 --> 00:31:45,049
called extractors what these do is<font color="#CCCCCC"> they</font>

720
00:31:43,909 --> 00:31:47,480
do a little<font color="#CCCCCC"> bit of what's called</font>

721
00:31:45,049 --> 00:31:49,908
whitening it just sort<font color="#CCCCCC"> of flattens out</font>

722
00:31:47,480 --> 00:31:52,669
<font color="#CCCCCC">the probabilities a little bit</font><font color="#E5E5E5"> such that</font>

723
00:31:49,909 --> 00:31:54,679
you can get<font color="#E5E5E5"> better and</font><font color="#CCCCCC"> rupee out so an</font>

724
00:31:52,669 --> 00:31:57,110
entropy sauce that you're reading<font color="#E5E5E5"> might</font>

725
00:31:54,679 --> 00:31:59,360
sink<font color="#E5E5E5"> two zeros or two ones every now and</font>

726
00:31:57,110 --> 00:32:00,649
again<font color="#E5E5E5"> and you don't want that you</font><font color="#CCCCCC"> want</font>

727
00:31:59,360 --> 00:32:02,719
to do something to<font color="#E5E5E5"> make sure</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you've</font>

728
00:32:00,649 --> 00:32:04,908
got<font color="#E5E5E5"> a better likelihood</font><font color="#CCCCCC"> of having a</font>

729
00:32:02,720 --> 00:32:07,909
decent<font color="#E5E5E5"> or what we've got a fair random</font>

730
00:32:04,909 --> 00:32:10,149
bit<font color="#E5E5E5"> and the output of this is gonna be</font>

731
00:32:07,909 --> 00:32:12,440
we can just plug these things<font color="#E5E5E5"> into</font>

732
00:32:10,149 --> 00:32:14,899
random number generators and<font color="#E5E5E5"> then we get</font>

733
00:32:12,440 --> 00:32:17,409
proper random numbers and<font color="#E5E5E5"> for a set</font>

734
00:32:14,899 --> 00:32:19,489
<font color="#E5E5E5">amount of</font><font color="#CCCCCC"> time then we receive</font><font color="#E5E5E5"> okay</font>

735
00:32:17,409 --> 00:32:20,870
they've<font color="#CCCCCC"> honest with me so far you can</font>

736
00:32:19,490 --> 00:32:22,639
<font color="#E5E5E5">probably hopefully see that the output</font>

737
00:32:20,870 --> 00:32:24,590
<font color="#CCCCCC">will</font><font color="#E5E5E5"> be quite</font><font color="#CCCCCC"> useful we can say</font><font color="#E5E5E5"> this is</font>

738
00:32:22,639 --> 00:32:26,449
good and<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is bad and</font><font color="#E5E5E5"> here's why</font>

739
00:32:24,590 --> 00:32:27,980
because<font color="#E5E5E5"> it did this in this test and it</font>

740
00:32:26,450 --> 00:32:30,019
<font color="#E5E5E5">did this thing that this in this test</font>

741
00:32:27,980 --> 00:32:31,909
and this one doesn't<font color="#E5E5E5"> have any components</font>

742
00:32:30,019 --> 00:32:33,470
but<font color="#E5E5E5"> it's faster this one's really slow</font>

743
00:32:31,909 --> 00:32:36,830
<font color="#CCCCCC">requires you know sort of</font><font color="#E5E5E5"> a</font>

744
00:32:33,470 --> 00:32:39,230
<font color="#E5E5E5">supercomputer we can make informed</font>

745
00:32:36,830 --> 00:32:41,990
decisions<font color="#E5E5E5"> and make informed assessments</font>

746
00:32:39,230 --> 00:32:44,779
<font color="#CCCCCC">about what's going on so this is</font><font color="#E5E5E5"> what I</font>

747
00:32:41,990 --> 00:32:49,460
<font color="#CCCCCC">came up with this is code</font><font color="#E5E5E5"> that is more</font>

748
00:32:44,779 --> 00:32:52,820
<font color="#CCCCCC">or less lifted from POC or</font><font color="#E5E5E5"> gtfo oxo one</font>

749
00:32:49,460 --> 00:32:55,519
is fully due<font color="#E5E5E5"> to Dan Kaminsky gets full</font>

750
00:32:52,820 --> 00:32:58,220
<font color="#CCCCCC">credit for</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> this he was looking at</font>

751
00:32:55,519 --> 00:33:00,409
<font color="#CCCCCC">clock jitter</font><font color="#E5E5E5"> on JavaScript as a</font>

752
00:32:58,220 --> 00:33:03,110
randomness source and it<font color="#E5E5E5"> was found that</font>

753
00:33:00,409 --> 00:33:05,059
actually<font color="#E5E5E5"> it isn't</font><font color="#CCCCCC"> very it isn't reliably</font>

754
00:33:03,110 --> 00:33:07,699
good there's very in Firefox

755
00:33:05,059 --> 00:33:10,090
<font color="#E5E5E5">there were various phase locks where the</font>

756
00:33:07,700 --> 00:33:12,139
clocks would get reset and at that point

757
00:33:10,090 --> 00:33:14,529
you<font color="#E5E5E5"> would kind of either be able to</font>

758
00:33:12,139 --> 00:33:17,510
predict or would be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to guess</font>

759
00:33:14,529 --> 00:33:20,659
reliably<font color="#E5E5E5"> what the random numbers are</font>

760
00:33:17,510 --> 00:33:22,039
<font color="#E5E5E5">going to</font><font color="#CCCCCC"> be but this is</font><font color="#E5E5E5"> actually a very</font>

761
00:33:20,659 --> 00:33:24,110
<font color="#CCCCCC">good test ring so here's what you've got</font>

762
00:33:22,039 --> 00:33:27,529
you got what we call<font color="#E5E5E5"> the coin flip so</font>

763
00:33:24,110 --> 00:33:30,168
we're gonna get a bit<font color="#E5E5E5"> okay a 0 or a 1</font>

764
00:33:27,529 --> 00:33:31,940
<font color="#CCCCCC">get magic is just something</font><font color="#E5E5E5"> that's going</font>

765
00:33:30,169 --> 00:33:33,910
to<font color="#E5E5E5"> give us</font><font color="#CCCCCC"> a bite and I only care about</font>

766
00:33:31,940 --> 00:33:36,670
<font color="#E5E5E5">the LSB</font><font color="#CCCCCC"> okay</font>

767
00:33:33,910 --> 00:33:39,160
I can also change<font color="#E5E5E5"> it to only care about</font>

768
00:33:36,670 --> 00:33:40,690
<font color="#E5E5E5">some bit in the middle or</font><font color="#CCCCCC"> the MSB or</font>

769
00:33:39,160 --> 00:33:42,310
whatever<font color="#E5E5E5"> okay but it should be</font>

770
00:33:40,690 --> 00:33:45,550
<font color="#CCCCCC">extensible enough that we can actually</font>

771
00:33:42,310 --> 00:33:48,760
extract out what we want it's a test

772
00:33:45,550 --> 00:33:50,500
that is<font color="#E5E5E5"> I want to get a fair bit now</font>

773
00:33:48,760 --> 00:33:53,140
this is<font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> this is</font><font color="#E5E5E5"> called a von</font>

774
00:33:50,500 --> 00:33:55,660
Neumann extractor so we take a is a coin

775
00:33:53,140 --> 00:33:59,620
flip<font color="#CCCCCC"> and if a is not equal to another</font>

776
00:33:55,660 --> 00:34:05,260
coin flip we return a that is if we get

777
00:33:59,620 --> 00:34:08,290
0 0<font color="#E5E5E5"> or 1</font><font color="#CCCCCC"> 1 we ignore it if we get 0</font><font color="#E5E5E5"> 1</font><font color="#CCCCCC"> we</font>

778
00:34:05,260 --> 00:34:11,440
accept it return 0<font color="#CCCCCC"> if we get 1 0 we</font>

779
00:34:08,290 --> 00:34:14,080
accept it<font color="#CCCCCC"> we return 1</font><font color="#E5E5E5"> and it might look</font>

780
00:34:11,440 --> 00:34:16,990
like<font color="#E5E5E5"> well what's the point in that</font>

781
00:34:14,080 --> 00:34:19,750
there's<font color="#CCCCCC"> nice work on the perimeter and</font>

782
00:34:16,989 --> 00:34:22,239
<font color="#E5E5E5">the extractor by von</font><font color="#CCCCCC"> Neumann</font><font color="#E5E5E5"> where it</font>

783
00:34:19,750 --> 00:34:24,130
shows that it kind of it<font color="#E5E5E5"> tries to get as</font>

784
00:34:22,239 --> 00:34:26,649
close<font color="#E5E5E5"> as it</font><font color="#CCCCCC"> can that</font><font color="#E5E5E5"> the probability</font><font color="#CCCCCC"> of</font>

785
00:34:24,130 --> 00:34:29,620
1 and probability<font color="#CCCCCC"> of 0 is as close to</font>

786
00:34:26,650 --> 00:34:32,440
<font color="#E5E5E5">0.5 as possible by minimizing the bias</font>

787
00:34:29,620 --> 00:34:35,020
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> and that's what we're that's</font><font color="#E5E5E5"> what</font>

788
00:34:32,440 --> 00:34:36,760
we're after<font color="#CCCCCC"> and then the last bit</font><font color="#E5E5E5"> is</font>

789
00:34:35,020 --> 00:34:39,730
<font color="#E5E5E5">just to make a bite out of these coin</font>

790
00:34:36,760 --> 00:34:41,770
flips<font color="#CCCCCC"> okay so this is the kind of setup</font>

791
00:34:39,730 --> 00:34:43,750
that<font color="#CCCCCC"> I used very very</font><font color="#E5E5E5"> simple it will</font>

792
00:34:41,770 --> 00:34:45,940
install and compile on pretty much

793
00:34:43,750 --> 00:34:48,668
anything we want and it<font color="#E5E5E5"> gives us</font><font color="#CCCCCC"> a</font>

794
00:34:45,940 --> 00:34:51,580
<font color="#E5E5E5">reasonable sense of what's going on in</font>

795
00:34:48,668 --> 00:34:54,600
an entropy<font color="#CCCCCC"> source this</font><font color="#E5E5E5"> is what I did</font><font color="#CCCCCC"> ok</font>

796
00:34:51,580 --> 00:34:57,040
first thing don't ask why this is

797
00:34:54,600 --> 00:34:59,290
soldered the wrong way<font color="#CCCCCC"> around that's</font><font color="#E5E5E5"> a</font>

798
00:34:57,040 --> 00:35:01,990
very long<font color="#E5E5E5"> story</font>

799
00:34:59,290 --> 00:35:03,670
likewise you know sort of don't<font color="#E5E5E5"> ask</font>

800
00:35:01,990 --> 00:35:06,490
where the<font color="#CCCCCC"> paperclip came from I don't</font>

801
00:35:03,670 --> 00:35:07,810
remember<font color="#E5E5E5"> that's why but yeah</font><font color="#CCCCCC"> so here I'm</font>

802
00:35:06,490 --> 00:35:11,379
<font color="#CCCCCC">just</font><font color="#E5E5E5"> using a capacitor</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> a resistor</font>

803
00:35:07,810 --> 00:35:14,259
<font color="#CCCCCC">I'm charging this little circuit up on a</font>

804
00:35:11,380 --> 00:35:17,560
pin a digital right of Wang to the pin

805
00:35:14,260 --> 00:35:19,470
that<font color="#E5E5E5"> I'm reading it on a</font><font color="#CCCCCC"> 6 which is</font><font color="#E5E5E5"> what</font>

806
00:35:17,560 --> 00:35:23,410
<font color="#E5E5E5">that code is saying and then I'm just</font>

807
00:35:19,470 --> 00:35:27,129
passing this output<font color="#E5E5E5"> into my basic</font><font color="#CCCCCC"> burst</font>

808
00:35:23,410 --> 00:35:29,649
<font color="#E5E5E5">Kaminsky basic generator now this gives</font>

809
00:35:27,130 --> 00:35:33,010
you reasonably good<font color="#E5E5E5"> random numbers and</font>

810
00:35:29,650 --> 00:35:35,260
it's very slow compared to<font color="#E5E5E5"> the others</font>

811
00:35:33,010 --> 00:35:37,210
<font color="#E5E5E5">okay when I first</font><font color="#CCCCCC"> did it</font><font color="#E5E5E5"> I was quite</font>

812
00:35:35,260 --> 00:35:40,940
pleased I was<font color="#E5E5E5"> getting what looked like</font>

813
00:35:37,210 --> 00:35:44,000
decent entropy<font color="#E5E5E5"> however it was taking</font><font color="#CCCCCC"> 4</font>

814
00:35:40,940 --> 00:35:45,859
<font color="#CCCCCC">vertook</font><font color="#E5E5E5"> button</font><font color="#CCCCCC"> all right so it's very</font>

815
00:35:44,000 --> 00:35:47,869
<font color="#E5E5E5">slow now that could be because I was</font>

816
00:35:45,859 --> 00:35:49,910
using you know through-hole components

817
00:35:47,869 --> 00:35:52,190
maybe if I tried<font color="#E5E5E5"> it again</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> surface</font>

818
00:35:49,910 --> 00:35:53,569
mount components<font color="#E5E5E5"> that might be faster</font>

819
00:35:52,190 --> 00:35:55,369
<font color="#E5E5E5">because that's where you know thermal</font>

820
00:35:53,569 --> 00:35:58,369
properties are propagating less maybe

821
00:35:55,369 --> 00:36:00,589
that's involved<font color="#E5E5E5"> ultimately I</font><font color="#CCCCCC"> decided you</font>

822
00:35:58,369 --> 00:36:03,560
<font color="#E5E5E5">can use it but here's the real problem</font>

823
00:36:00,589 --> 00:36:06,670
<font color="#CCCCCC">you have to add traces to ground you</font>

824
00:36:03,560 --> 00:36:10,700
have<font color="#E5E5E5"> to remove the use of at least one</font>

825
00:36:06,670 --> 00:36:12,260
pin for reading one<font color="#E5E5E5"> ADC pin and those</font>

826
00:36:10,700 --> 00:36:14,990
are valuable<font color="#E5E5E5"> that are gold when you're</font>

827
00:36:12,260 --> 00:36:16,730
building a device and then you also have

828
00:36:14,990 --> 00:36:18,919
to<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know if either power it in a</font>

829
00:36:16,730 --> 00:36:21,290
<font color="#E5E5E5">controlled way or have something that</font>

830
00:36:18,920 --> 00:36:22,670
will<font color="#CCCCCC"> actually allow you</font><font color="#E5E5E5"> to send a signal</font>

831
00:36:21,290 --> 00:36:26,329
and<font color="#CCCCCC"> then cut it</font><font color="#E5E5E5"> off and</font><font color="#CCCCCC"> all that</font><font color="#E5E5E5"> other</font>

832
00:36:22,670 --> 00:36:28,089
stuff<font color="#CCCCCC"> so overall it does work the people</font>

833
00:36:26,329 --> 00:36:30,170
who are saying it works they<font color="#CCCCCC"> are right</font>

834
00:36:28,089 --> 00:36:37,060
<font color="#E5E5E5">but</font><font color="#CCCCCC"> I don't think</font><font color="#E5E5E5"> this is the best</font>

835
00:36:30,170 --> 00:36:41,000
option<font color="#E5E5E5"> okay so a DC jitter not that good</font>

836
00:36:37,060 --> 00:36:43,490
the next one was watchdog timer so there

837
00:36:41,000 --> 00:36:46,940
is a<font color="#E5E5E5"> a load of forums and indeed an</font>

838
00:36:43,490 --> 00:36:49,750
<font color="#E5E5E5">Arduino library on github which will get</font>

839
00:36:46,940 --> 00:36:53,030
entropy from the watchdog<font color="#CCCCCC"> timer jitter</font>

840
00:36:49,750 --> 00:36:54,770
<font color="#E5E5E5">okay so as the water timer runs the</font>

841
00:36:53,030 --> 00:36:57,890
<font color="#CCCCCC">copper generates a lovely little</font><font color="#E5E5E5"> bit of</font>

842
00:36:54,770 --> 00:36:59,630
jitter for you and that is<font color="#E5E5E5"> random okay</font>

843
00:36:57,890 --> 00:37:02,779
because jitter generally is a random

844
00:36:59,630 --> 00:37:05,839
thing<font color="#E5E5E5"> however I found a problem</font><font color="#CCCCCC"> as you</font>

845
00:37:02,780 --> 00:37:07,910
<font color="#CCCCCC">can see here this was my</font><font color="#E5E5E5"> fourth attempt</font>

846
00:37:05,839 --> 00:37:11,150
it is and this<font color="#CCCCCC"> is the start of</font><font color="#E5E5E5"> my second</font>

847
00:37:07,910 --> 00:37:13,040
attempt at it okay so I've seeded a

848
00:37:11,150 --> 00:37:14,750
random number<font color="#CCCCCC"> generator the LCG in this</font>

849
00:37:13,040 --> 00:37:17,720
case and I've just<font color="#E5E5E5"> fed it and pulled</font>

850
00:37:14,750 --> 00:37:20,349
these numbers<font color="#E5E5E5"> out</font><font color="#CCCCCC"> and in case you</font>

851
00:37:17,720 --> 00:37:23,419
haven't seen<font color="#E5E5E5"> it</font><font color="#CCCCCC"> they're exactly the same</font>

852
00:37:20,349 --> 00:37:26,750
this<font color="#E5E5E5"> is on this is</font><font color="#CCCCCC"> on device reset okay</font>

853
00:37:23,420 --> 00:37:28,310
<font color="#E5E5E5">this is the problem when you reset the</font>

854
00:37:26,750 --> 00:37:30,260
<font color="#E5E5E5">device</font><font color="#CCCCCC"> and it makes sense when you think</font>

855
00:37:28,310 --> 00:37:33,170
about it when you reset the device<font color="#E5E5E5"> the</font>

856
00:37:30,260 --> 00:37:35,060
clocks reset so the jitter you built up

857
00:37:33,170 --> 00:37:37,520
<font color="#CCCCCC">the jitter a lovely</font><font color="#E5E5E5"> wonderful excellent</font>

858
00:37:35,060 --> 00:37:39,619
jitter that you found has disappeared

859
00:37:37,520 --> 00:37:43,250
<font color="#CCCCCC">it's evaporated</font><font color="#E5E5E5"> okay you've basically</font>

860
00:37:39,619 --> 00:37:45,260
done<font color="#E5E5E5"> away</font><font color="#CCCCCC"> with it</font><font color="#E5E5E5"> so I wouldn't</font>

861
00:37:43,250 --> 00:37:49,700
recommend<font color="#E5E5E5"> this because it's very very</font>

862
00:37:45,260 --> 00:37:51,619
<font color="#CCCCCC">easy</font><font color="#E5E5E5"> to trigger a device reset in fact</font>

863
00:37:49,700 --> 00:37:53,710
ironically<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the ways of doing it</font>

864
00:37:51,619 --> 00:37:56,530
is<font color="#CCCCCC"> by invoking</font><font color="#E5E5E5"> the watchdog</font><font color="#CCCCCC"> timer</font>

865
00:37:53,710 --> 00:37:58,869
but<font color="#CCCCCC"> nevermind alright but yeah so this</font>

866
00:37:56,530 --> 00:38:01,510
<font color="#CCCCCC">is</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> a lot is said about</font><font color="#E5E5E5"> watchdog</font>

867
00:37:58,869 --> 00:38:03,160
timer jitter<font color="#CCCCCC"> and when</font><font color="#E5E5E5"> I first put this</font>

868
00:38:01,510 --> 00:38:05,109
out on<font color="#CCCCCC"> Twitter saying</font><font color="#E5E5E5"> I want some</font>

869
00:38:03,160 --> 00:38:06,520
entropy sources from people<font color="#E5E5E5"> I got</font>

870
00:38:05,109 --> 00:38:10,420
<font color="#E5E5E5">recommended this I think more than any</font>

871
00:38:06,520 --> 00:38:13,210
other and it does work<font color="#E5E5E5"> not the fastest</font>

872
00:38:10,420 --> 00:38:15,400
<font color="#CCCCCC">but</font><font color="#E5E5E5"> it does work</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> it takes about a</font>

873
00:38:13,210 --> 00:38:17,920
second or<font color="#CCCCCC"> two seconds</font><font color="#E5E5E5"> which in</font>

874
00:38:15,400 --> 00:38:20,890
microcontroller<font color="#E5E5E5"> times Andy Fox is an</font>

875
00:38:17,920 --> 00:38:22,750
absolute eternity if I remember rightly

876
00:38:20,890 --> 00:38:25,299
<font color="#E5E5E5">I think</font><font color="#CCCCCC"> it's automotive that has a</font>

877
00:38:22,750 --> 00:38:27,700
requirement<font color="#CCCCCC"> of like</font><font color="#E5E5E5"> 400 milliseconds</font>

878
00:38:25,300 --> 00:38:30,880
<font color="#E5E5E5">from like sort</font><font color="#CCCCCC"> of power up to</font><font color="#E5E5E5"> being</font>

879
00:38:27,700 --> 00:38:33,669
ready<font color="#CCCCCC"> to go</font><font color="#E5E5E5"> like it's quick</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> and you</font>

880
00:38:30,880 --> 00:38:36,190
<font color="#E5E5E5">have to solve that problem</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> maybe you</font>

881
00:38:33,670 --> 00:38:40,000
could take this one and the<font color="#CCCCCC"> previous</font>

882
00:38:36,190 --> 00:38:44,200
example<font color="#E5E5E5"> and say well what if we store</font>

883
00:38:40,000 --> 00:38:46,180
the entropy<font color="#E5E5E5"> and then on reboot we</font>

884
00:38:44,200 --> 00:38:48,939
recover it and<font color="#E5E5E5"> do some permutation</font><font color="#CCCCCC"> and</font>

885
00:38:46,180 --> 00:38:51,098
that's fine you can<font color="#E5E5E5"> do that</font><font color="#CCCCCC"> okay that</font>

886
00:38:48,940 --> 00:38:54,900
would<font color="#E5E5E5"> work and that's what's done on</font>

887
00:38:51,099 --> 00:38:56,980
other microcontroller systems however<font color="#CCCCCC"> I</font>

888
00:38:54,900 --> 00:38:59,560
found<font color="#CCCCCC"> that the</font><font color="#E5E5E5"> next two were</font>

889
00:38:56,980 --> 00:39:03,010
significantly better<font color="#E5E5E5"> so I want to sort</font>

890
00:38:59,560 --> 00:39:08,410
<font color="#CCCCCC">of</font><font color="#E5E5E5"> have a look at those so the</font><font color="#CCCCCC"> mister</font>

891
00:39:03,010 --> 00:39:10,780
noise<font color="#E5E5E5"> on an Arduino you have eight pins</font>

892
00:39:08,410 --> 00:39:13,270
for doing a DC a<font color="#E5E5E5"> zero through a seven</font>

893
00:39:10,780 --> 00:39:16,230
<font color="#CCCCCC">there's actually a hidden pin inside</font>

894
00:39:13,270 --> 00:39:18,700
<font color="#E5E5E5">that is the ADC for the thermistor and</font>

895
00:39:16,230 --> 00:39:20,740
you can read it this is the code<font color="#CCCCCC"> to</font>

896
00:39:18,700 --> 00:39:22,868
enable<font color="#E5E5E5"> it this is then passed into the</font>

897
00:39:20,740 --> 00:39:25,509
basic<font color="#CCCCCC"> kaminsky generator and I did my</font>

898
00:39:22,869 --> 00:39:28,270
assessment the<font color="#CCCCCC"> code will be available</font>

899
00:39:25,510 --> 00:39:29,830
<font color="#CCCCCC">after the talk so everyone I want people</font>

900
00:39:28,270 --> 00:39:31,300
<font color="#E5E5E5">to</font><font color="#CCCCCC"> sort of go home and</font><font color="#E5E5E5"> either tell me</font>

901
00:39:29,830 --> 00:39:32,490
<font color="#CCCCCC">I'm wrong or something</font><font color="#E5E5E5"> oh my god</font>

902
00:39:31,300 --> 00:39:35,920
<font color="#E5E5E5">everything's broken</font>

903
00:39:32,490 --> 00:39:37,839
<font color="#CCCCCC">but yeah so you read</font><font color="#E5E5E5"> the thermistor</font><font color="#CCCCCC"> and</font>

904
00:39:35,920 --> 00:39:40,000
what I did<font color="#E5E5E5"> was I take the LSB</font><font color="#CCCCCC"> of that</font>

905
00:39:37,839 --> 00:39:42,910
okay because I'm looking<font color="#E5E5E5"> at the tiny</font>

906
00:39:40,000 --> 00:39:45,760
fluctuations in temperature<font color="#E5E5E5"> okay the</font>

907
00:39:42,910 --> 00:39:49,839
point one or point two degree changes

908
00:39:45,760 --> 00:39:51,250
because that is<font color="#E5E5E5"> going to tell me</font><font color="#CCCCCC"> I said</font>

909
00:39:49,839 --> 00:39:52,180
<font color="#CCCCCC">they</font><font color="#E5E5E5"> give me better noise it's</font><font color="#CCCCCC"> not going</font>

910
00:39:51,250 --> 00:39:53,830
to tell me<font color="#CCCCCC"> what the temperature is I</font>

911
00:39:52,180 --> 00:39:57,460
<font color="#E5E5E5">don't care</font><font color="#CCCCCC"> it's gonna give me better</font>

912
00:39:53,830 --> 00:39:58,810
noise source than looking at the<font color="#CCCCCC"> most</font>

913
00:39:57,460 --> 00:40:02,710
significant byte which in most cases

914
00:39:58,810 --> 00:40:03,910
again<font color="#E5E5E5"> will change but very slowly as the</font>

915
00:40:02,710 --> 00:40:07,270
device slowly<font color="#CCCCCC"> wore</font>

916
00:40:03,910 --> 00:40:10,868
up or cools down<font color="#CCCCCC"> so I took this and</font><font color="#E5E5E5"> run</font>

917
00:40:07,270 --> 00:40:13,119
<font color="#CCCCCC">it in and it's quick okay</font><font color="#E5E5E5"> it really</font><font color="#CCCCCC"> does</font>

918
00:40:10,869 --> 00:40:16,270
<font color="#E5E5E5">work</font><font color="#CCCCCC"> got a big advantage</font><font color="#E5E5E5"> as well</font>

919
00:40:13,119 --> 00:40:18,280
every<font color="#E5E5E5"> CPU more or less has a thermistor</font>

920
00:40:16,270 --> 00:40:18,788
in it although<font color="#E5E5E5"> I'm yet</font><font color="#CCCCCC"> to find</font><font color="#E5E5E5"> one that</font>

921
00:40:18,280 --> 00:40:22,869
doesn't

922
00:40:18,789 --> 00:40:24,849
<font color="#E5E5E5">okay and in that sense it's very easy to</font>

923
00:40:22,869 --> 00:40:26,200
<font color="#E5E5E5">find the code to</font><font color="#CCCCCC"> access that value</font><font color="#E5E5E5"> and</font>

924
00:40:24,849 --> 00:40:27,880
<font color="#E5E5E5">then you can use that in your entropy</font>

925
00:40:26,200 --> 00:40:30,430
pooling<font color="#E5E5E5"> and that's a good thing and it's</font>

926
00:40:27,880 --> 00:40:32,770
quick and yes if you breathe on<font color="#CCCCCC"> it the</font>

927
00:40:30,430 --> 00:40:34,899
numbers come<font color="#E5E5E5"> out faster okay that's</font>

928
00:40:32,770 --> 00:40:36,609
<font color="#E5E5E5">usually a good</font><font color="#CCCCCC"> sign my</font><font color="#E5E5E5"> neighbors already</font>

929
00:40:34,900 --> 00:40:38,230
<font color="#E5E5E5">think I'm weird so the sight of me</font>

930
00:40:36,609 --> 00:40:40,538
breathing<font color="#E5E5E5"> on microcontrollers in a</font>

931
00:40:38,230 --> 00:40:43,569
window was probably not that unusual<font color="#E5E5E5"> for</font>

932
00:40:40,539 --> 00:40:44,950
them but anyway<font color="#CCCCCC"> I digress so this is</font>

933
00:40:43,569 --> 00:40:47,410
actually I think a thing that we<font color="#CCCCCC"> should</font>

934
00:40:44,950 --> 00:40:50,970
use<font color="#E5E5E5"> okay we should recommend this</font><font color="#CCCCCC"> as one</font>

935
00:40:47,410 --> 00:40:53,230
of<font color="#E5E5E5"> our one of our sources</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> entropy</font><font color="#CCCCCC"> I</font>

936
00:40:50,970 --> 00:40:55,569
didn't have any problems implementing

937
00:40:53,230 --> 00:40:57,220
this<font color="#E5E5E5"> but I did for the</font><font color="#CCCCCC"> next one because</font>

938
00:40:55,569 --> 00:41:01,150
I'm looking at<font color="#CCCCCC"> RSSI annoyance</font>

939
00:40:57,220 --> 00:41:03,038
<font color="#CCCCCC">so receive strengths</font><font color="#E5E5E5"> a signal indicator</font>

940
00:41:01,150 --> 00:41:06,670
<font color="#E5E5E5">so I</font><font color="#CCCCCC"> receive signal</font><font color="#E5E5E5"> strength indicator</font>

941
00:41:03,039 --> 00:41:09,910
<font color="#E5E5E5">sorry is</font><font color="#CCCCCC"> common it's in the I Triple</font><font color="#E5E5E5"> E</font>

942
00:41:06,670 --> 00:41:12,880
standard every I Triple E 802 11<font color="#CCCCCC"> device</font>

943
00:41:09,910 --> 00:41:16,660
has to have some<font color="#E5E5E5"> sort of</font><font color="#CCCCCC"> RSS I output</font>

944
00:41:12,880 --> 00:41:20,020
<font color="#E5E5E5">okay so again if you</font><font color="#CCCCCC"> have a radio</font><font color="#E5E5E5"> and</font>

945
00:41:16,660 --> 00:41:24,009
<font color="#E5E5E5">that's the big if if you have a radio</font>

946
00:41:20,020 --> 00:41:25,869
<font color="#E5E5E5">then you can ask it for the RSS</font><font color="#CCCCCC"> hi for</font>

947
00:41:24,010 --> 00:41:28,420
<font color="#E5E5E5">those of you who don't</font><font color="#CCCCCC"> know maybe not</font>

948
00:41:25,869 --> 00:41:31,270
<font color="#E5E5E5">fully afraid you can have radio cause on</font>

949
00:41:28,420 --> 00:41:33,880
a chip<font color="#E5E5E5"> actually built into the silicon</font>

950
00:41:31,270 --> 00:41:35,740
or you can actually<font color="#E5E5E5"> get a core which</font>

951
00:41:33,880 --> 00:41:38,170
<font color="#E5E5E5">what I did I actually use the nee SP 32</font>

952
00:41:35,740 --> 00:41:41,828
based hand<font color="#E5E5E5"> tech</font><font color="#CCCCCC"> louver device sorry</font>

953
00:41:38,170 --> 00:41:43,960
<font color="#E5E5E5">wrong one</font><font color="#CCCCCC"> I know but I use one of</font><font color="#E5E5E5"> these</font>

954
00:41:41,829 --> 00:41:48,490
<font color="#E5E5E5">devices and I programmed it to give me</font>

955
00:41:43,960 --> 00:41:50,410
the output<font color="#CCCCCC"> through SP is this is now</font>

956
00:41:48,490 --> 00:41:53,500
similar sort of code running on<font color="#E5E5E5"> an</font><font color="#CCCCCC"> ASP</font>

957
00:41:50,410 --> 00:41:55,359
32 this time modulo clock speed and

958
00:41:53,500 --> 00:41:56,109
<font color="#E5E5E5">modular few other things the code is</font>

959
00:41:55,359 --> 00:41:58,779
comparable

960
00:41:56,109 --> 00:42:01,328
<font color="#E5E5E5">it speaks</font><font color="#CCCCCC"> SPI to the chip it asks for</font>

961
00:41:58,779 --> 00:42:03,220
the RSSI value by saying<font color="#E5E5E5"> read me the</font>

962
00:42:01,329 --> 00:42:05,770
address<font color="#CCCCCC"> and the address</font><font color="#E5E5E5"> translates to a</font>

963
00:42:03,220 --> 00:42:08,500
register that<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the RSSI value that the</font>

964
00:42:05,770 --> 00:42:10,779
chip is updating all the<font color="#E5E5E5"> time and I pull</font>

965
00:42:08,500 --> 00:42:13,390
that<font color="#E5E5E5"> back using the</font><font color="#CCCCCC"> lower dot random</font>

966
00:42:10,779 --> 00:42:15,910
function and then I use the<font color="#CCCCCC"> LSB of</font><font color="#E5E5E5"> that</font>

967
00:42:13,390 --> 00:42:16,580
<font color="#E5E5E5">why the LSB well it's accurate to</font><font color="#CCCCCC"> a 10</font>

968
00:42:15,910 --> 00:42:20,870
<font color="#E5E5E5">point</font>

969
00:42:16,580 --> 00:42:25,069
one of a decibel okay<font color="#E5E5E5"> so even</font><font color="#CCCCCC"> in a very</font>

970
00:42:20,870 --> 00:42:27,740
static context where<font color="#CCCCCC"> you're your signal</font>

971
00:42:25,070 --> 00:42:29,720
strength isn't<font color="#CCCCCC"> gonna vary</font><font color="#E5E5E5"> okay it's not</font>

972
00:42:27,740 --> 00:42:32,330
going to really change<font color="#E5E5E5"> your IOT device</font>

973
00:42:29,720 --> 00:42:35,569
<font color="#E5E5E5">unless it's on a train</font><font color="#CCCCCC"> I know there are</font>

974
00:42:32,330 --> 00:42:37,190
devices<font color="#E5E5E5"> on trains but unless it's not on</font>

975
00:42:35,570 --> 00:42:39,740
something<font color="#E5E5E5"> like a train or a ship or</font>

976
00:42:37,190 --> 00:42:42,500
<font color="#CCCCCC">somewhere</font><font color="#E5E5E5"> the context changes then it's</font>

977
00:42:39,740 --> 00:42:45,979
going<font color="#E5E5E5"> to be relatively static but the</font>

978
00:42:42,500 --> 00:42:48,140
LSB<font color="#CCCCCC"> will change because the signal</font>

979
00:42:45,980 --> 00:42:50,720
strength<font color="#E5E5E5"> will move as someone walks past</font>

980
00:42:48,140 --> 00:42:52,819
with Wi-Fi on<font color="#E5E5E5"> their phone or someone</font>

981
00:42:50,720 --> 00:42:54,200
sort of knocks it to<font color="#CCCCCC"> the floor will</font>

982
00:42:52,820 --> 00:42:56,090
<font color="#E5E5E5">probably have an effect for various</font>

983
00:42:54,200 --> 00:42:57,980
reasons I don't<font color="#CCCCCC"> know why</font><font color="#E5E5E5"> but yeah you</font>

984
00:42:56,090 --> 00:43:00,440
can see that<font color="#CCCCCC"> actually this is a very</font>

985
00:42:57,980 --> 00:43:03,740
<font color="#CCCCCC">good</font><font color="#E5E5E5"> source it's very very fast</font><font color="#CCCCCC"> only if</font>

986
00:43:00,440 --> 00:43:06,950
you keep<font color="#CCCCCC"> asking it for RSSI values some</font>

987
00:43:03,740 --> 00:43:10,220
chips<font color="#CCCCCC"> just fall over they</font><font color="#E5E5E5"> just go nah</font>

988
00:43:06,950 --> 00:43:11,870
too much<font color="#CCCCCC"> mate</font><font color="#E5E5E5"> Donna you know</font><font color="#CCCCCC"> it doesn't</font>

989
00:43:10,220 --> 00:43:14,419
<font color="#E5E5E5">return than ever it just stops</font>

990
00:43:11,870 --> 00:43:18,920
responding<font color="#CCCCCC"> you know so</font><font color="#E5E5E5"> that's not</font>

991
00:43:14,420 --> 00:43:21,500
probably the best the best source<font color="#CCCCCC"> but I</font>

992
00:43:18,920 --> 00:43:24,680
think that if you took this particular

993
00:43:21,500 --> 00:43:27,280
<font color="#E5E5E5">example</font><font color="#CCCCCC"> and the previous example I think</font>

994
00:43:24,680 --> 00:43:29,870
<font color="#CCCCCC">you'd</font><font color="#E5E5E5"> actually have a very good kind of</font>

995
00:43:27,280 --> 00:43:34,370
metric and matrix of potential<font color="#E5E5E5"> energy</font>

996
00:43:29,870 --> 00:43:36,380
resources<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is an overview</font><font color="#CCCCCC"> get</font>

997
00:43:34,370 --> 00:43:38,480
<font color="#CCCCCC">slab github whatever link is</font><font color="#E5E5E5"> gonna</font>

998
00:43:36,380 --> 00:43:40,490
follow<font color="#E5E5E5"> I'll decide</font><font color="#CCCCCC"> on one or whatever</font>

999
00:43:38,480 --> 00:43:42,710
<font color="#E5E5E5">depending on what people are saying and</font>

1000
00:43:40,490 --> 00:43:44,720
I've done<font color="#E5E5E5"> some articles</font><font color="#CCCCCC"> about this on</font>

1001
00:43:42,710 --> 00:43:47,540
<font color="#E5E5E5">medium and here's a link also to the</font>

1002
00:43:44,720 --> 00:43:49,189
<font color="#E5E5E5">NIST specifications on this yes NIST</font>

1003
00:43:47,540 --> 00:43:52,880
have a specification<font color="#E5E5E5"> for their entropy</font>

1004
00:43:49,190 --> 00:43:55,310
sources and these are the results<font color="#CCCCCC"> okay</font>

1005
00:43:52,880 --> 00:43:58,310
<font color="#E5E5E5">hopefully this is now kind of fairly</font>

1006
00:43:55,310 --> 00:43:59,509
obvious<font color="#E5E5E5"> okay so I managed to</font><font color="#CCCCCC"> split them</font>

1007
00:43:58,310 --> 00:44:01,100
<font color="#CCCCCC">in two well</font><font color="#E5E5E5"> this'll be fast I'm</font>

1008
00:43:59,510 --> 00:44:03,860
relatively<font color="#E5E5E5"> slow which was one of the</font>

1009
00:44:01,100 --> 00:44:06,500
<font color="#E5E5E5">metrics I had if it's slow for me that's</font>

1010
00:44:03,860 --> 00:44:07,120
worse if it's faster<font color="#CCCCCC"> for me</font><font color="#E5E5E5"> that's</font>

1011
00:44:06,500 --> 00:44:11,560
better

1012
00:44:07,120 --> 00:44:15,859
<font color="#E5E5E5">also</font><font color="#CCCCCC"> I prefer</font><font color="#E5E5E5"> not to have components</font>

1013
00:44:11,560 --> 00:44:17,540
<font color="#E5E5E5">okay I</font><font color="#CCCCCC"> would prefer to</font><font color="#E5E5E5"> have no impact on</font>

1014
00:44:15,860 --> 00:44:19,610
my bill of materials for a device

1015
00:44:17,540 --> 00:44:22,100
because<font color="#CCCCCC"> that's the first question I get</font>

1016
00:44:19,610 --> 00:44:25,880
asked whenever I do security<font color="#E5E5E5"> for an IOT</font>

1017
00:44:22,100 --> 00:44:27,799
company right<font color="#E5E5E5"> what's the cost and I have</font>

1018
00:44:25,880 --> 00:44:29,040
to give them<font color="#CCCCCC"> a physical cost as well</font><font color="#E5E5E5"> as</font>

1019
00:44:27,800 --> 00:44:31,560
<font color="#CCCCCC">all the development costs</font>

1020
00:44:29,040 --> 00:44:34,020
well if you have to add an HSN<font color="#E5E5E5"> that's</font>

1021
00:44:31,560 --> 00:44:36,870
expensive<font color="#E5E5E5"> when</font><font color="#CCCCCC"> you multiply it up by a</font>

1022
00:44:34,020 --> 00:44:38,820
million devices<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> that's a big effect</font>

1023
00:44:36,870 --> 00:44:41,609
on<font color="#E5E5E5"> the bottom</font><font color="#CCCCCC"> line reading thermistor</font>

1024
00:44:38,820 --> 00:44:42,300
<font color="#CCCCCC">noise that's fine that's that's built-in</font>

1025
00:44:41,610 --> 00:44:45,600
anyway

1026
00:44:42,300 --> 00:44:48,120
likewise if<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have a radio call and if</font>

1027
00:44:45,600 --> 00:44:49,980
your radio<font color="#CCCCCC"> core is either</font><font color="#E5E5E5"> built-in or if</font>

1028
00:44:48,120 --> 00:44:51,960
it's not built-in then it is gonna<font color="#E5E5E5"> be</font>

1029
00:44:49,980 --> 00:44:53,400
kind<font color="#E5E5E5"> of associated to the chip strongly</font>

1030
00:44:51,960 --> 00:44:55,560
or<font color="#E5E5E5"> it comes on a little</font><font color="#CCCCCC"> bore little</font>

1031
00:44:53,400 --> 00:44:58,290
<font color="#E5E5E5">module then you can ask</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> for</font>

1032
00:44:55,560 --> 00:45:00,480
information<font color="#E5E5E5"> and then feed</font><font color="#CCCCCC"> that into your</font>

1033
00:44:58,290 --> 00:45:02,100
<font color="#CCCCCC">mantle number generation</font><font color="#E5E5E5"> so I kind of</font>

1034
00:45:00,480 --> 00:45:04,050
<font color="#CCCCCC">color-coded it to make it sort</font><font color="#E5E5E5"> of</font>

1035
00:45:02,100 --> 00:45:05,370
obvious mainly for me because you know

1036
00:45:04,050 --> 00:45:08,010
<font color="#CCCCCC">I'm something here giving a talk and</font>

1037
00:45:05,370 --> 00:45:09,690
<font color="#E5E5E5">didn't want to get it wrong but but</font>

1038
00:45:08,010 --> 00:45:15,990
ultimately this is<font color="#CCCCCC"> this table of results</font>

1039
00:45:09,690 --> 00:45:18,120
so<font color="#CCCCCC"> far so far</font><font color="#E5E5E5"> I'd like to continue so</font>

1040
00:45:15,990 --> 00:45:19,589
these are<font color="#E5E5E5"> kind of more closing remarks I</font>

1041
00:45:18,120 --> 00:45:21,240
didn't want to keep boring you with<font color="#E5E5E5"> lots</font>

1042
00:45:19,590 --> 00:45:23,610
of mathematics I'm a<font color="#E5E5E5"> long haired</font><font color="#CCCCCC"> Scout</font>

1043
00:45:21,240 --> 00:45:25,020
so it's bad enough<font color="#E5E5E5"> as</font><font color="#CCCCCC"> it is but what I</font>

1044
00:45:23,610 --> 00:45:27,360
wanted to do is<font color="#E5E5E5"> just give you some kind</font>

1045
00:45:25,020 --> 00:45:28,470
<font color="#E5E5E5">of</font><font color="#CCCCCC"> idea</font><font color="#E5E5E5"> of what I want to do next</font><font color="#CCCCCC"> okay</font>

1046
00:45:27,360 --> 00:45:30,420
so the conclusions<font color="#E5E5E5"> are fairly</font>

1047
00:45:28,470 --> 00:45:33,709
straightforward<font color="#CCCCCC"> the problem is not</font>

1048
00:45:30,420 --> 00:45:37,080
<font color="#CCCCCC">limited to</font><font color="#E5E5E5"> AVR okay this is a tweet</font><font color="#CCCCCC"> from</font>

1049
00:45:33,710 --> 00:45:40,070
under<font color="#CCCCCC"> taenia</font><font color="#E5E5E5"> pentas partners where we</font>

1050
00:45:37,080 --> 00:45:44,880
found<font color="#E5E5E5"> a device which on factory reset</font>

1051
00:45:40,070 --> 00:45:49,980
<font color="#E5E5E5">would generate a key within a thousand</font>

1052
00:45:44,880 --> 00:45:54,810
resets<font color="#E5E5E5"> there was a key collision this is</font>

1053
00:45:49,980 --> 00:45:57,660
real this<font color="#CCCCCC"> is happening</font><font color="#E5E5E5"> that shouldn't be</font>

1054
00:45:54,810 --> 00:45:59,730
happening<font color="#CCCCCC"> okay we need microcontrollers</font>

1055
00:45:57,660 --> 00:46:01,799
to be comparable<font color="#E5E5E5"> than unlike for like</font>

1056
00:45:59,730 --> 00:46:04,410
manner<font color="#CCCCCC"> I would hope that this is moving</font>

1057
00:46:01,800 --> 00:46:06,120
some way<font color="#CCCCCC"> towards that</font><font color="#E5E5E5"> goal we also need</font>

1058
00:46:04,410 --> 00:46:07,799
to look<font color="#CCCCCC"> towards improving random number</font>

1059
00:46:06,120 --> 00:46:09,600
generation across the board<font color="#CCCCCC"> there were</font>

1060
00:46:07,800 --> 00:46:12,540
some very good valid number generations

1061
00:46:09,600 --> 00:46:16,200
<font color="#E5E5E5">I want to call out</font><font color="#CCCCCC"> for example the ESP</font>

1062
00:46:12,540 --> 00:46:18,930
32 chips<font color="#E5E5E5"> the ESP IDF integrated</font>

1063
00:46:16,200 --> 00:46:22,020
<font color="#E5E5E5">developer something whether they're</font>

1064
00:46:18,930 --> 00:46:27,000
basically<font color="#E5E5E5"> their SDK includes by default</font>

1065
00:46:22,020 --> 00:46:30,060
<font color="#CCCCCC">lib sodium yeah Lib sodium and it also</font>

1066
00:46:27,000 --> 00:46:33,840
has by default<font color="#CCCCCC"> a built-in HSM with</font>

1067
00:46:30,060 --> 00:46:36,570
native<font color="#E5E5E5"> AAS 1 to 8 support in a chip that</font>

1068
00:46:33,840 --> 00:46:40,080
<font color="#CCCCCC">is marginally more expensive than the</font>

1069
00:46:36,570 --> 00:46:41,520
esp8266<font color="#CCCCCC"> which is very very</font><font color="#E5E5E5"> popular</font>

1070
00:46:40,080 --> 00:46:43,380
I actually<font color="#E5E5E5"> challenged the guy I said</font>

1071
00:46:41,520 --> 00:46:45,480
well what if I can get a key out off<font color="#CCCCCC"> the</font>

1072
00:46:43,380 --> 00:46:46,860
<font color="#CCCCCC">hsm</font><font color="#E5E5E5"> and he said on Twitter and I think</font>

1073
00:46:45,480 --> 00:46:48,300
is on the<font color="#E5E5E5"> website</font><font color="#CCCCCC"> now he said</font><font color="#E5E5E5"> he put</font><font color="#CCCCCC"> it</font>

1074
00:46:46,860 --> 00:46:50,300
there<font color="#E5E5E5"> tell you what I'll give you three</font>

1075
00:46:48,300 --> 00:46:53,490
and<font color="#E5E5E5"> a half thousand dollars if you do it</font>

1076
00:46:50,300 --> 00:46:57,300
<font color="#E5E5E5">straight up putting your money</font><font color="#CCCCCC"> where</font>

1077
00:46:53,490 --> 00:46:59,310
your mouth is you know that is

1078
00:46:57,300 --> 00:47:01,470
unfortunately an exception to the rule

1079
00:46:59,310 --> 00:47:03,750
<font color="#CCCCCC">if I could have something</font><font color="#E5E5E5"> tomorrow</font><font color="#CCCCCC"> I can</font>

1080
00:47:01,470 --> 00:47:05,549
have my Christmas<font color="#E5E5E5"> early okay what I</font>

1081
00:47:03,750 --> 00:47:07,860
would<font color="#E5E5E5"> want is simple I'm not expecting</font>

1082
00:47:05,550 --> 00:47:10,380
<font color="#CCCCCC">Atmel or microchip here on them to</font>

1083
00:47:07,860 --> 00:47:12,690
<font color="#E5E5E5">change the silicon on a device that is</font><font color="#CCCCCC"> a</font>

1084
00:47:10,380 --> 00:47:14,430
big ask I'm not<font color="#E5E5E5"> asking for that</font><font color="#CCCCCC"> I'm not</font>

1085
00:47:12,690 --> 00:47:16,740
asking for things<font color="#CCCCCC"> to change in the SDK</font>

1086
00:47:14,430 --> 00:47:19,350
even if I can have something<font color="#CCCCCC"> tomorrow</font><font color="#E5E5E5"> I</font>

1087
00:47:16,740 --> 00:47:22,140
would just want<font color="#E5E5E5"> a warning</font><font color="#CCCCCC"> I would like</font>

1088
00:47:19,350 --> 00:47:24,569
the words not cryptographically secure

1089
00:47:22,140 --> 00:47:26,279
<font color="#E5E5E5">to be in the documentation because if</font>

1090
00:47:24,570 --> 00:47:28,860
you read it you would<font color="#CCCCCC"> think it was</font>

1091
00:47:26,280 --> 00:47:30,510
<font color="#E5E5E5">secure unless you were thinking in a</font>

1092
00:47:28,860 --> 00:47:34,140
<font color="#CCCCCC">more adversarial manner</font><font color="#E5E5E5"> which of course</font>

1093
00:47:30,510 --> 00:47:35,940
<font color="#E5E5E5">every developer does as we all know that</font>

1094
00:47:34,140 --> 00:47:37,230
was a<font color="#E5E5E5"> joke as well anyway so</font>

1095
00:47:35,940 --> 00:47:38,910
<font color="#CCCCCC">manufactures need</font><font color="#E5E5E5"> to be held to account</font>

1096
00:47:37,230 --> 00:47:40,830
this we need to start<font color="#CCCCCC"> asking them</font>

1097
00:47:38,910 --> 00:47:42,680
<font color="#E5E5E5">questions why are you not</font><font color="#CCCCCC"> doing this or</font>

1098
00:47:40,830 --> 00:47:45,029
why are you doing<font color="#E5E5E5"> it in this way</font><font color="#CCCCCC"> and</font>

1099
00:47:42,680 --> 00:47:48,480
developers also<font color="#E5E5E5"> need to be more aware in</font>

1100
00:47:45,030 --> 00:47:52,860
security we<font color="#E5E5E5"> talk so much</font><font color="#CCCCCC"> about the who</font>

1101
00:47:48,480 --> 00:47:56,460
<font color="#E5E5E5">and</font><font color="#CCCCCC"> the what and the how we very rarely</font>

1102
00:47:52,860 --> 00:47:58,770
<font color="#E5E5E5">talk about the when of security if you</font>

1103
00:47:56,460 --> 00:48:00,480
have a long<font color="#CCCCCC"> rapport</font><font color="#E5E5E5"> with lots of things</font>

1104
00:47:58,770 --> 00:48:02,160
in it if<font color="#E5E5E5"> you're a consultant</font>

1105
00:48:00,480 --> 00:48:03,780
hopefully you break it down and<font color="#CCCCCC"> say</font>

1106
00:48:02,160 --> 00:48:05,819
these<font color="#E5E5E5"> things these things</font><font color="#CCCCCC"> first these</font>

1107
00:48:03,780 --> 00:48:07,470
<font color="#E5E5E5">need doing by Tuesday</font><font color="#CCCCCC"> idea okay fact</font>

1108
00:48:05,820 --> 00:48:09,660
they need<font color="#E5E5E5"> doing by last Tuesday but</font><font color="#CCCCCC"> will</font>

1109
00:48:07,470 --> 00:48:12,509
give you<font color="#CCCCCC"> a week and then you</font><font color="#E5E5E5"> and then</font>

1110
00:48:09,660 --> 00:48:15,270
other<font color="#E5E5E5"> things can wait</font><font color="#CCCCCC"> right but that's</font>

1111
00:48:12,510 --> 00:48:16,740
that's<font color="#E5E5E5"> not necessarily all that common</font>

1112
00:48:15,270 --> 00:48:18,630
I'm sure everyone in this<font color="#E5E5E5"> room does it</font>

1113
00:48:16,740 --> 00:48:20,729
but I've had situations where<font color="#E5E5E5"> it</font><font color="#CCCCCC"> isn't</font>

1114
00:48:18,630 --> 00:48:23,490
it isn't manageable<font color="#CCCCCC"> because there's no</font>

1115
00:48:20,730 --> 00:48:25,470
when when do<font color="#E5E5E5"> I do security when do I</font>

1116
00:48:23,490 --> 00:48:27,149
make<font color="#E5E5E5"> these decisions okay</font>

1117
00:48:25,470 --> 00:48:29,220
we need to be more honest about<font color="#E5E5E5"> that</font>

1118
00:48:27,150 --> 00:48:31,140
kind of<font color="#E5E5E5"> thing with IOT your</font>

1119
00:48:29,220 --> 00:48:34,169
cryptographic decisions need to be made

1120
00:48:31,140 --> 00:48:37,190
<font color="#E5E5E5">when you choose the integrated circuit</font>

1121
00:48:34,170 --> 00:48:40,950
you're going to be developing<font color="#CCCCCC"> for</font>

1122
00:48:37,190 --> 00:48:44,850
because cryptography is very hard to<font color="#CCCCCC"> do</font>

1123
00:48:40,950 --> 00:48:46,589
backwards on a microcontroller<font color="#E5E5E5"> if</font><font color="#CCCCCC"> your</font>

1124
00:48:44,850 --> 00:48:49,319
chip doesn't have native<font color="#CCCCCC"> support for</font>

1125
00:48:46,590 --> 00:48:51,960
aes-128<font color="#E5E5E5"> adding it in yeah you can add</font>

1126
00:48:49,320 --> 00:48:53,519
the<font color="#E5E5E5"> code but you saw</font><font color="#CCCCCC"> what five lines did</font>

1127
00:48:51,960 --> 00:48:55,769
okay how<font color="#E5E5E5"> long</font>

1128
00:48:53,519 --> 00:48:56,669
compared to<font color="#CCCCCC"> a</font><font color="#E5E5E5"> laptop you're just gonna</font>

1129
00:48:55,769 --> 00:48:59,218
make it<font color="#CCCCCC"> harder</font>

1130
00:48:56,669 --> 00:49:01,799
<font color="#E5E5E5">IES was chosen our rijndael cipher was</font>

1131
00:48:59,219 --> 00:49:06,149
chosen because it had<font color="#E5E5E5"> good optimization</font>

1132
00:49:01,799 --> 00:49:08,429
<font color="#CCCCCC">in hardware ok</font><font color="#E5E5E5"> so if you</font><font color="#CCCCCC"> need</font>

1133
00:49:06,149 --> 00:49:10,759
cartography identify it<font color="#CCCCCC"> early and</font><font color="#E5E5E5"> then</font>

1134
00:49:08,429 --> 00:49:14,099
make<font color="#E5E5E5"> your integrated circuit choice then</font>

1135
00:49:10,759 --> 00:49:16,109
<font color="#E5E5E5">based off that decision amongst all the</font>

1136
00:49:14,099 --> 00:49:17,729
other things you're<font color="#CCCCCC"> looking at because</font>

1137
00:49:16,109 --> 00:49:19,828
you<font color="#CCCCCC"> can't do it backwards you</font><font color="#E5E5E5"> can't do</font>

1138
00:49:17,729 --> 00:49:22,859
it later on it way you can but that's

1139
00:49:19,829 --> 00:49:24,479
<font color="#CCCCCC">expensive</font><font color="#E5E5E5"> and very very difficult so</font>

1140
00:49:22,859 --> 00:49:25,709
future work what<font color="#CCCCCC"> else do I want</font><font color="#E5E5E5"> to do</font>

1141
00:49:24,479 --> 00:49:28,169
<font color="#E5E5E5">how do I want to take this kind of</font>

1142
00:49:25,709 --> 00:49:30,479
project forward<font color="#CCCCCC"> well</font><font color="#E5E5E5"> I want to keep</font>

1143
00:49:28,169 --> 00:49:33,269
analyzing<font color="#E5E5E5"> random number generators</font><font color="#CCCCCC"> I</font>

1144
00:49:30,479 --> 00:49:34,408
have one of<font color="#E5E5E5"> these infinite noise dongles</font>

1145
00:49:33,269 --> 00:49:36,359
if anyone wants to have a<font color="#E5E5E5"> look at it</font>

1146
00:49:34,409 --> 00:49:39,209
that's a<font color="#E5E5E5"> very</font><font color="#CCCCCC"> nice design using</font>

1147
00:49:36,359 --> 00:49:42,959
operational amplifiers and compressors

1148
00:49:39,209 --> 00:49:45,569
and or audio circuitry<font color="#E5E5E5"> analog circuitry</font>

1149
00:49:42,959 --> 00:49:47,428
<font color="#CCCCCC">to generate random numbers</font><font color="#E5E5E5"> into a USB</font>

1150
00:49:45,569 --> 00:49:49,049
<font color="#E5E5E5">dongle</font><font color="#CCCCCC"> I want to see if I was</font><font color="#E5E5E5"> good</font>

1151
00:49:47,429 --> 00:49:51,390
<font color="#CCCCCC">enough</font><font color="#E5E5E5"> I would look at other potential</font>

1152
00:49:49,049 --> 00:49:55,109
<font color="#E5E5E5">sources of randomness and noise that can</font>

1153
00:49:51,390 --> 00:49:56,729
be fed<font color="#CCCCCC"> into either</font><font color="#E5E5E5"> IOT like if you</font>

1154
00:49:55,109 --> 00:49:58,649
really<font color="#CCCCCC"> want really</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> to be</font><font color="#CCCCCC"> sauce</font>

1155
00:49:56,729 --> 00:50:00,839
<font color="#E5E5E5">here's a really fast little circuit you</font>

1156
00:49:58,649 --> 00:50:03,149
<font color="#CCCCCC">can add and it adds this much to your</font>

1157
00:50:00,839 --> 00:50:05,759
<font color="#CCCCCC">Bill</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> Materials but I also want to</font>

1158
00:50:03,149 --> 00:50:08,399
start<font color="#E5E5E5"> saying well can</font><font color="#CCCCCC"> we extend the test</font>

1159
00:50:05,759 --> 00:50:09,839
rig to include entropy estimation an

1160
00:50:08,399 --> 00:50:14,638
interesting point<font color="#CCCCCC"> about the</font><font color="#E5E5E5"> NIST such a</font>

1161
00:50:09,839 --> 00:50:16,589
<font color="#E5E5E5">set up their specification is doing</font>

1162
00:50:14,639 --> 00:50:18,749
things<font color="#CCCCCC"> that the von Neumann extractor</font>

1163
00:50:16,589 --> 00:50:21,029
isn't required<font color="#CCCCCC"> but doing things like</font>

1164
00:50:18,749 --> 00:50:24,359
entropy estimation is<font color="#CCCCCC"> that is necessary</font>

1165
00:50:21,029 --> 00:50:26,399
<font color="#E5E5E5">that's actually required part</font><font color="#CCCCCC"> ok so if</font>

1166
00:50:24,359 --> 00:50:27,779
we<font color="#CCCCCC"> are</font><font color="#E5E5E5"> being honest with ourselves we</font>

1167
00:50:26,399 --> 00:50:29,638
should<font color="#E5E5E5"> also think what can we add some</font>

1168
00:50:27,779 --> 00:50:30,989
entropy estimation in is<font color="#E5E5E5"> there a fast</font>

1169
00:50:29,639 --> 00:50:32,909
way of<font color="#CCCCCC"> doing that</font><font color="#E5E5E5"> if anyone's got any</font>

1170
00:50:30,989 --> 00:50:35,849
ideas do let me know I'd love<font color="#CCCCCC"> to</font><font color="#E5E5E5"> hear</font>

1171
00:50:32,909 --> 00:50:37,739
<font color="#E5E5E5">and then use this</font><font color="#CCCCCC"> information get gather</font>

1172
00:50:35,849 --> 00:50:40,139
a body of information<font color="#E5E5E5"> put</font><font color="#CCCCCC"> it in a public</font>

1173
00:50:37,739 --> 00:50:42,689
<font color="#CCCCCC">place and then go you know</font><font color="#E5E5E5"> what here is</font>

1174
00:50:40,139 --> 00:50:45,359
what is what<font color="#E5E5E5"> you have here are the tools</font>

1175
00:50:42,689 --> 00:50:46,649
that<font color="#E5E5E5"> seem to work and then</font><font color="#CCCCCC"> developers</font>

1176
00:50:45,359 --> 00:50:48,389
for things like<font color="#E5E5E5"> live hydrogen another</font>

1177
00:50:46,649 --> 00:50:51,469
really<font color="#E5E5E5"> good project that works</font><font color="#CCCCCC"> does have</font>

1178
00:50:48,389 --> 00:50:53,789
a<font color="#E5E5E5"> lightweight version of live sodium</font>

1179
00:50:51,469 --> 00:50:55,380
<font color="#CCCCCC">they've already spoken</font><font color="#E5E5E5"> to me very</font>

1180
00:50:53,789 --> 00:50:57,449
briefly<font color="#E5E5E5"> but I've been really busy so I</font>

1181
00:50:55,380 --> 00:50:59,120
haven't<font color="#E5E5E5"> been able to talk</font><font color="#CCCCCC"> to them I will</font>

1182
00:50:57,449 --> 00:51:02,220
<font color="#E5E5E5">honest</font>

1183
00:50:59,120 --> 00:51:04,290
but we can use this to inform<font color="#E5E5E5"> our</font>

1184
00:51:02,220 --> 00:51:06,330
development of<font color="#CCCCCC"> co-development of</font>

1185
00:51:04,290 --> 00:51:10,800
<font color="#E5E5E5">libraries to</font><font color="#CCCCCC"> make</font><font color="#E5E5E5"> things a little bit</font>

1186
00:51:06,330 --> 00:51:12,090
<font color="#CCCCCC">less well</font><font color="#E5E5E5"> crap</font><font color="#CCCCCC"> okay that's it I</font><font color="#E5E5E5"> hope it</font>

1187
00:51:10,800 --> 00:51:13,830
wasn't too much<font color="#E5E5E5"> mathematics thank you</font>

1188
00:51:12,090 --> 00:51:16,070
very much<font color="#E5E5E5"> for your time eyes ears and</font>

1189
00:51:13,830 --> 00:51:21,859
<font color="#E5E5E5">patience thank you</font>

1190
00:51:16,070 --> 00:51:21,859
[Applause]

