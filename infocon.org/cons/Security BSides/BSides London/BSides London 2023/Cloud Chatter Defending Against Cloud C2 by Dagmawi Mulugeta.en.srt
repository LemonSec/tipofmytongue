1
00:00:05,060 --> 00:00:07,440
uh thank you everyone for showing up I

2
00:00:07,440 --> 00:00:09,660
know it's kind of a busy season with the

3
00:00:09,660 --> 00:00:11,400
Christmas stuff so I appreciate everyone

4
00:00:11,400 --> 00:00:13,440
making the time to come to this

5
00:00:13,440 --> 00:00:15,839
talk uh we do have something very

6
00:00:15,839 --> 00:00:17,580
exciting prepared for you today so I

7
00:00:17,580 --> 00:00:19,560
hope everyone has a little bit they've

8
00:00:19,560 --> 00:00:21,240
taken away with them so that they can

9
00:00:21,240 --> 00:00:22,619
make their environments that much more

10
00:00:22,619 --> 00:00:23,699
secure

11
00:00:23,699 --> 00:00:25,619
now with that being said I'll I'll get

12
00:00:25,619 --> 00:00:27,660
started my name is dagmai muligeta I'm a

13
00:00:27,660 --> 00:00:29,099
threat researcher at netscope threat

14
00:00:29,099 --> 00:00:30,480
labs and today we're going to be talking

15
00:00:30,480 --> 00:00:32,940
about a specific attack technique that

16
00:00:32,940 --> 00:00:35,700
we refer to as Cloud CG

17
00:00:35,700 --> 00:00:37,739
awesome so

18
00:00:37,739 --> 00:00:39,899
so uh we talked like this I typically

19
00:00:39,899 --> 00:00:41,760
try to have an outline so that people

20
00:00:41,760 --> 00:00:43,500
have an idea of where we're at and

21
00:00:43,500 --> 00:00:44,940
what's to come

22
00:00:44,940 --> 00:00:46,320
um so we're going to start with

23
00:00:46,320 --> 00:00:48,539
introducing what cloud C2 is what do we

24
00:00:48,539 --> 00:00:50,520
mean with this you know crazy wacky term

25
00:00:50,520 --> 00:00:52,020
and we'll talk about how that's

26
00:00:52,020 --> 00:00:54,539
different from traditional C2

27
00:00:54,539 --> 00:00:56,100
and then we'll take an offensive look

28
00:00:56,100 --> 00:00:58,140
into things and then we'll uh we do this

29
00:00:58,140 --> 00:00:59,760
by doing a deep dive into how you can

30
00:00:59,760 --> 00:01:01,620
simulate this in your environment and

31
00:01:01,620 --> 00:01:02,940
see what the controls you have in place

32
00:01:02,940 --> 00:01:05,159
are willing to detect and then we'll

33
00:01:05,159 --> 00:01:07,080
take a defensive look into things and

34
00:01:07,080 --> 00:01:10,260
see why um you know certain to certain

35
00:01:10,260 --> 00:01:11,880
detection methods might have challenge

36
00:01:11,880 --> 00:01:14,159
detecting this technique and then we'll

37
00:01:14,159 --> 00:01:16,680
move to how you can actually try to

38
00:01:16,680 --> 00:01:18,420
detect this using a new set of behavior

39
00:01:18,420 --> 00:01:20,100
signals and that'll be this takeaway

40
00:01:20,100 --> 00:01:22,619
section and then finally we'll conclude

41
00:01:22,619 --> 00:01:24,060
everything by reviewing the key

42
00:01:24,060 --> 00:01:26,580
takeaways from all this awesome so let's

43
00:01:26,580 --> 00:01:28,020
get started

44
00:01:28,020 --> 00:01:30,900
um so what is cloud C2 right so before

45
00:01:30,900 --> 00:01:32,759
we get into Cloud C2 let's talk a little

46
00:01:32,759 --> 00:01:34,860
bit into about what community control is

47
00:01:34,860 --> 00:01:36,960
right so command and control for that

48
00:01:36,960 --> 00:01:38,700
maybe one person that doesn't know this

49
00:01:38,700 --> 00:01:40,560
in here right it's a stage in the Cyber

50
00:01:40,560 --> 00:01:42,600
kill chain the Cyber kill chain is a set

51
00:01:42,600 --> 00:01:44,579
of steps an attacker uses when they

52
00:01:44,579 --> 00:01:46,140
compromise the target system right it

53
00:01:46,140 --> 00:01:48,060
typically starts with uh doing some

54
00:01:48,060 --> 00:01:49,259
reconnaissance

55
00:01:49,259 --> 00:01:51,360
though you then use this the information

56
00:01:51,360 --> 00:01:53,939
they've gathered from uh Recon to find a

57
00:01:53,939 --> 00:01:56,520
weakness that they'll use to find that

58
00:01:56,520 --> 00:01:58,439
they'll use to you know generate a

59
00:01:58,439 --> 00:02:00,240
payload against deliver that payload

60
00:02:00,240 --> 00:02:02,280
this payload will exploit this weakness

61
00:02:02,280 --> 00:02:04,200
they found during this Recon phase and

62
00:02:04,200 --> 00:02:05,520
then that will install a particular

63
00:02:05,520 --> 00:02:07,799
piece of malware that'll phone back home

64
00:02:07,799 --> 00:02:09,780
and pull for additional commands all

65
00:02:09,780 --> 00:02:11,640
right so this network communication of

66
00:02:11,640 --> 00:02:13,739
polling for additional commands is what

67
00:02:13,739 --> 00:02:15,660
we refer to as command control

68
00:02:15,660 --> 00:02:17,640
traditionally this has been done by

69
00:02:17,640 --> 00:02:20,640
mediums like https and DNS directly to

70
00:02:20,640 --> 00:02:22,560
the attacker controlled server and if

71
00:02:22,560 --> 00:02:23,879
you wanted to simulate this you could do

72
00:02:23,879 --> 00:02:25,440
this with Cobalt strike and Powershell

73
00:02:25,440 --> 00:02:27,300
Empire right

74
00:02:27,300 --> 00:02:29,340
so that's a quick crash course into what

75
00:02:29,340 --> 00:02:31,379
command and control is right so what is

76
00:02:31,379 --> 00:02:33,060
cloud command and control so

77
00:02:33,060 --> 00:02:35,280
traditionally what attackers do they'll

78
00:02:35,280 --> 00:02:37,080
set up uh you know their own servers

79
00:02:37,080 --> 00:02:38,640
their own domain their own IP addresses

80
00:02:38,640 --> 00:02:41,040
right their own infrastructure to pull

81
00:02:41,040 --> 00:02:42,840
these commands back and forth and you

82
00:02:42,840 --> 00:02:44,580
can see this in the top right where a

83
00:02:44,580 --> 00:02:45,900
compromised device is going to reach out

84
00:02:45,900 --> 00:02:47,459
to the attacker controlled

85
00:02:47,459 --> 00:02:50,459
infrastructure to pull for commands but

86
00:02:50,459 --> 00:02:53,760
and this has been tough to detect but I

87
00:02:53,760 --> 00:02:55,379
know the security Community has done a

88
00:02:55,379 --> 00:02:56,760
pretty good job of using threat

89
00:02:56,760 --> 00:02:59,400
intelligence feeds to identify uh this

90
00:02:59,400 --> 00:03:00,900
attacker-owned infrastructure and block

91
00:03:00,900 --> 00:03:03,000
communication to it

92
00:03:03,000 --> 00:03:05,340
so what attackers have started to do

93
00:03:05,340 --> 00:03:07,080
more of recently this is actually not

94
00:03:07,080 --> 00:03:08,640
new but we've seen a large uptick

95
00:03:08,640 --> 00:03:11,280
recently as they started using abusing

96
00:03:11,280 --> 00:03:13,260
Cloud applications as a medium for

97
00:03:13,260 --> 00:03:14,700
command control so they're using things

98
00:03:14,700 --> 00:03:16,980
like Dropbox folders Google Drive slack

99
00:03:16,980 --> 00:03:19,200
channels to send these commands back and

100
00:03:19,200 --> 00:03:21,180
forth so why would they want to do this

101
00:03:21,180 --> 00:03:23,400
well firstly it's a very minimal setup

102
00:03:23,400 --> 00:03:25,920
right same reason why most of us want to

103
00:03:25,920 --> 00:03:28,560
use this right it's very cost efficient

104
00:03:28,560 --> 00:03:30,599
most of these apps have a free tier so

105
00:03:30,599 --> 00:03:32,099
you can quickly get set up and get going

106
00:03:32,099 --> 00:03:33,180
for free

107
00:03:33,180 --> 00:03:36,120
and it's that much tougher to detect I

108
00:03:36,120 --> 00:03:38,159
mean almost everyone has a Google

109
00:03:38,159 --> 00:03:39,780
account where I have the Google Drive so

110
00:03:39,780 --> 00:03:41,220
if you want to blend into existing

111
00:03:41,220 --> 00:03:42,180
traffic

112
00:03:42,180 --> 00:03:44,099
using one of these apps makes it that

113
00:03:44,099 --> 00:03:47,879
much more enticing as an attacker

114
00:03:47,879 --> 00:03:50,819
so how often does this happen in the

115
00:03:50,819 --> 00:03:52,860
real world though right so this is a

116
00:03:52,860 --> 00:03:54,239
little bit of a noisy slide so I

117
00:03:54,239 --> 00:03:55,920
apologize to that but what I wanted to

118
00:03:55,920 --> 00:03:58,140
show are the malware samples and the

119
00:03:58,140 --> 00:03:59,819
cloud apps they've abused for command

120
00:03:59,819 --> 00:04:02,280
control and you can see uh box con

121
00:04:02,280 --> 00:04:04,980
Nimble Mamba and crutch of abuse Dropbox

122
00:04:04,980 --> 00:04:07,200
graphite and blue light have a beast one

123
00:04:07,200 --> 00:04:09,659
drive a clip has a view slack we've seen

124
00:04:09,659 --> 00:04:11,580
GitHub abuse Google Drive abuse Twitter

125
00:04:11,580 --> 00:04:14,159
Tumblr Blogspot Google Docs Google

126
00:04:14,159 --> 00:04:15,959
scripts pasteman one Hub telegram right

127
00:04:15,959 --> 00:04:17,399
all these apps have been abused for

128
00:04:17,399 --> 00:04:18,959
command and control and this is actually

129
00:04:18,959 --> 00:04:20,820
a very select list a much more detailed

130
00:04:20,820 --> 00:04:23,100
list can be found on miter's page as

131
00:04:23,100 --> 00:04:25,680
well and you can see that there's really

132
00:04:25,680 --> 00:04:27,660
no Cloud app that's immune to this it's

133
00:04:27,660 --> 00:04:29,759
not you know just one Cloud apps problem

134
00:04:29,759 --> 00:04:32,040
an attacker can use any Cloud app for

135
00:04:32,040 --> 00:04:35,160
command control and they have

136
00:04:35,160 --> 00:04:37,860
cool so that's a very quick crash course

137
00:04:37,860 --> 00:04:40,259
into Cloud C2 and how it's happening

138
00:04:40,259 --> 00:04:42,840
right so let's now take a closer look at

139
00:04:42,840 --> 00:04:44,220
how you can simulate this in your

140
00:04:44,220 --> 00:04:45,720
corporate environments and take an

141
00:04:45,720 --> 00:04:48,360
offensive look into things right

142
00:04:48,360 --> 00:04:50,100
cool so we're going to look at three

143
00:04:50,100 --> 00:04:53,100
tools primarily here uh Empire C3 and

144
00:04:53,100 --> 00:04:54,600
Covenant some of you might already know

145
00:04:54,600 --> 00:04:55,919
these tools

146
00:04:55,919 --> 00:04:57,540
um and we're gonna take a look at two

147
00:04:57,540 --> 00:05:00,000
apps in particular Dropbox and slack

148
00:05:00,000 --> 00:05:01,979
these are the apps that are generally

149
00:05:01,979 --> 00:05:05,160
more uh popular with attackers and uh

150
00:05:05,160 --> 00:05:06,540
individuals as well in corporate

151
00:05:06,540 --> 00:05:08,280
environments so we wanted to start look

152
00:05:08,280 --> 00:05:10,380
at those and then for each of these apps

153
00:05:10,380 --> 00:05:11,400
what we're going to do is we're going to

154
00:05:11,400 --> 00:05:13,199
talk about what the cloud op is meant to

155
00:05:13,199 --> 00:05:13,860
do

156
00:05:13,860 --> 00:05:15,720
and we'll talk about why an attacker

157
00:05:15,720 --> 00:05:17,580
might prefer This Cloud app and then

158
00:05:17,580 --> 00:05:19,740
we'll go over one real world example of

159
00:05:19,740 --> 00:05:21,960
an abuse of this Cloud app and then for

160
00:05:21,960 --> 00:05:23,699
the bulk of this exercise we're gonna

161
00:05:23,699 --> 00:05:25,740
we're gonna go through a detailed

162
00:05:25,740 --> 00:05:27,539
walkthrough of how you can simulate this

163
00:05:27,539 --> 00:05:29,100
and you're uh you know they've never

164
00:05:29,100 --> 00:05:30,419
read the team engagement or a

165
00:05:30,419 --> 00:05:32,580
penetration test assessment

166
00:05:32,580 --> 00:05:35,280
and then finally we'll briefly look at a

167
00:05:35,280 --> 00:05:37,080
behind the scenes look just under the

168
00:05:37,080 --> 00:05:38,580
hood of how this Cloud app is actually

169
00:05:38,580 --> 00:05:41,820
being abused for command control

170
00:05:41,820 --> 00:05:44,940
cool so the tools we used a lot of tools

171
00:05:44,940 --> 00:05:46,740
in this research but the three primary

172
00:05:46,740 --> 00:05:49,740
ones are Empire Covenant and C3 so

173
00:05:49,740 --> 00:05:51,900
Empire is a Powershell and Python 3 post

174
00:05:51,900 --> 00:05:54,419
exploitation uh free markets open source

175
00:05:54,419 --> 00:05:56,160
maintained by BC security it's a really

176
00:05:56,160 --> 00:05:57,900
cool tool it kind of get set up and get

177
00:05:57,900 --> 00:06:00,660
going it's a Linux based tool

178
00:06:00,660 --> 00:06:02,580
um Covenant on the other hand is Windows

179
00:06:02,580 --> 00:06:06,060
based it's a net C2 framework it's also

180
00:06:06,060 --> 00:06:08,100
open source and it's also a great tool

181
00:06:08,100 --> 00:06:10,199
to play around with and then the third

182
00:06:10,199 --> 00:06:11,520
tool we're going to use is custom

183
00:06:11,520 --> 00:06:13,380
command and control so this might not be

184
00:06:13,380 --> 00:06:16,259
as popular as the other ones uh but it's

185
00:06:16,259 --> 00:06:18,600
actually really really useful

186
00:06:18,600 --> 00:06:21,240
um to test Cloud Q2 specifically because

187
00:06:21,240 --> 00:06:23,880
it provides a vast variety of mediums to

188
00:06:23,880 --> 00:06:25,380
send your commands through and it

189
00:06:25,380 --> 00:06:27,060
integrates with Cobalt dragon covenant

190
00:06:27,060 --> 00:06:28,919
so it doesn't really worry about the

191
00:06:28,919 --> 00:06:30,960
command execution and interpretation bit

192
00:06:30,960 --> 00:06:33,539
it kind of also offloads that on Cobalt

193
00:06:33,539 --> 00:06:35,280
striking Covenant it'll just provide a

194
00:06:35,280 --> 00:06:36,900
vast variety of these mediums you can

195
00:06:36,900 --> 00:06:40,259
use it's also maintained by f-secure

196
00:06:40,259 --> 00:06:42,300
labs and all of these three tools are

197
00:06:42,300 --> 00:06:44,160
you know highly recommend them to kind

198
00:06:44,160 --> 00:06:46,139
of get set up and get going

199
00:06:46,139 --> 00:06:48,300
cool so let's start the Deep dive with

200
00:06:48,300 --> 00:06:49,380
Dropbox

201
00:06:49,380 --> 00:06:52,319
right Dropbox is a cloud storage app and

202
00:06:52,319 --> 00:06:54,360
like most cloud storage apps you've seen

203
00:06:54,360 --> 00:06:56,400
they tend to be abused by uploading

204
00:06:56,400 --> 00:06:58,440
downloading and deleting encrypted and

205
00:06:58,440 --> 00:07:00,720
encoded files this caught up actually

206
00:07:00,720 --> 00:07:02,819
you know provides a very flexible app

207
00:07:02,819 --> 00:07:04,440
development interface and just quickly

208
00:07:04,440 --> 00:07:07,020
you can get set up quite quick and as a

209
00:07:07,020 --> 00:07:09,060
bonus for the attacker it exists as both

210
00:07:09,060 --> 00:07:11,039
the Enterprise and personal cloud so if

211
00:07:11,039 --> 00:07:12,900
you're going after a company that may be

212
00:07:12,900 --> 00:07:15,300
an Enterprise level customer of Dropbox

213
00:07:15,300 --> 00:07:16,800
you know as an attacker you're that much

214
00:07:16,800 --> 00:07:18,960
more entice to use the this app for

215
00:07:18,960 --> 00:07:20,880
command control

216
00:07:20,880 --> 00:07:23,819
cool so uh just going over one real

217
00:07:23,819 --> 00:07:26,099
world example of abuse

218
00:07:26,099 --> 00:07:28,860
uh we mole rats this threat actor was

219
00:07:28,860 --> 00:07:30,479
found abusing Dropbox for command

220
00:07:30,479 --> 00:07:32,759
control earlier this year uh now this

221
00:07:32,759 --> 00:07:34,740
threat actor is known for being stealthy

222
00:07:34,740 --> 00:07:36,240
and they've used this technique before

223
00:07:36,240 --> 00:07:37,979
with using Cloud apps but what was

224
00:07:37,979 --> 00:07:40,199
interesting in this case was they were

225
00:07:40,199 --> 00:07:41,880
using multiple accounts for

226
00:07:41,880 --> 00:07:43,500
communication so you can see an attack

227
00:07:43,500 --> 00:07:45,539
flow here where a malicious Office

228
00:07:45,539 --> 00:07:48,120
document gets downloaded that downloads

229
00:07:48,120 --> 00:07:49,979
and executes uh that executes a

230
00:07:49,979 --> 00:07:51,720
Powershell command 9 that downloads a

231
00:07:51,720 --> 00:07:53,520
net backdoor right that was reaching out

232
00:07:53,520 --> 00:07:55,620
to the attacker via multiple Dropbox

233
00:07:55,620 --> 00:07:58,020
accounts right and they were uh

234
00:07:58,020 --> 00:07:59,699
separating responsibilities out through

235
00:07:59,699 --> 00:08:01,199
these accounts so they were using one

236
00:08:01,199 --> 00:08:02,880
for you know Community Control another

237
00:08:02,880 --> 00:08:04,740
for file infiltration and a different

238
00:08:04,740 --> 00:08:06,840
one for backup C2 and they were doing

239
00:08:06,840 --> 00:08:08,940
this for resilience right so if one of

240
00:08:08,940 --> 00:08:10,680
these accounts gets burned they have

241
00:08:10,680 --> 00:08:12,660
other ways of communicating to the

242
00:08:12,660 --> 00:08:15,680
compromise machines

243
00:08:15,780 --> 00:08:17,759
so how can you simulate this we're gonna

244
00:08:17,759 --> 00:08:19,560
you can do this using a variety of Open

245
00:08:19,560 --> 00:08:21,960
Source tools Dropbox C2 see-through

246
00:08:21,960 --> 00:08:23,879
Empire we're going to use Empire here

247
00:08:23,879 --> 00:08:25,680
but that's somewhat arbitrary you can

248
00:08:25,680 --> 00:08:26,879
really do this with any of the other

249
00:08:26,879 --> 00:08:28,919
tools we're going to follow a four-step

250
00:08:28,919 --> 00:08:30,180
process right we're going to create the

251
00:08:30,180 --> 00:08:31,919
account we're going to set up the Empire

252
00:08:31,919 --> 00:08:33,779
listener with the access token from the

253
00:08:33,779 --> 00:08:36,000
account we're going to generate the

254
00:08:36,000 --> 00:08:37,979
payload and deliver that directly to the

255
00:08:37,979 --> 00:08:40,320
victim now normally with this step what

256
00:08:40,320 --> 00:08:42,360
you'd want to do is maybe you want to

257
00:08:42,360 --> 00:08:43,919
simulate you want to have like a

258
00:08:43,919 --> 00:08:46,200
phishing campaign that compromises a

259
00:08:46,200 --> 00:08:49,019
that a you know victim will fall victim

260
00:08:49,019 --> 00:08:51,240
to right and it'll download a malicious

261
00:08:51,240 --> 00:08:52,740
Office document then this is the next

262
00:08:52,740 --> 00:08:54,839
stage payload but for the sake of

263
00:08:54,839 --> 00:08:56,820
brevity we're just gonna directly just

264
00:08:56,820 --> 00:08:58,920
compromise that machine just simulate a

265
00:08:58,920 --> 00:09:00,899
compromise and go from there and then

266
00:09:00,899 --> 00:09:02,399
once we have everything set up we're

267
00:09:02,399 --> 00:09:03,899
going to interact with the compromise

268
00:09:03,899 --> 00:09:06,180
device by uh tunnel and commands through

269
00:09:06,180 --> 00:09:08,279
the Dropbox account so the full attack

270
00:09:08,279 --> 00:09:09,600
flow will kind of look like the

271
00:09:09,600 --> 00:09:11,100
following where the Empire server is

272
00:09:11,100 --> 00:09:13,320
going to upload commands to Dropbox the

273
00:09:13,320 --> 00:09:15,120
malicious process or the agent on the

274
00:09:15,120 --> 00:09:16,200
victim is going to pull the those

275
00:09:16,200 --> 00:09:18,360
commands down execute them upload their

276
00:09:18,360 --> 00:09:20,040
results back to Dropbox and then the

277
00:09:20,040 --> 00:09:21,540
Empire console is going to pull that

278
00:09:21,540 --> 00:09:23,399
down

279
00:09:23,399 --> 00:09:25,860
cool so first things first we're going

280
00:09:25,860 --> 00:09:28,019
to create the attacker control Dropbox

281
00:09:28,019 --> 00:09:29,820
with the access token so we signed up

282
00:09:29,820 --> 00:09:32,279
for Dropbox here and we've created an

283
00:09:32,279 --> 00:09:34,920
app named it Empire C2 and we're going

284
00:09:34,920 --> 00:09:36,240
to give it full read and write

285
00:09:36,240 --> 00:09:38,640
permissions to this account and this is

286
00:09:38,640 --> 00:09:40,380
free right it took maybe like three

287
00:09:40,380 --> 00:09:42,540
minutes to do this

288
00:09:42,540 --> 00:09:44,040
and then what we're going to do is we're

289
00:09:44,040 --> 00:09:45,600
going to set up the Empire listener here

290
00:09:45,600 --> 00:09:47,360
so we've downloaded an installed Empire

291
00:09:47,360 --> 00:09:50,339
we've configured uh Dropbox listener

292
00:09:50,339 --> 00:09:51,779
here with all these configurations and

293
00:09:51,779 --> 00:09:53,640
we're going to pass it the API token

294
00:09:53,640 --> 00:09:55,860
from the previous step and if we've

295
00:09:55,860 --> 00:09:57,600
configured everything correctly when we

296
00:09:57,600 --> 00:09:59,880
type execute you can see that the

297
00:09:59,880 --> 00:10:01,500
Dropbox listener has successfully

298
00:10:01,500 --> 00:10:03,839
started

299
00:10:03,839 --> 00:10:05,640
and what this does actually in our

300
00:10:05,640 --> 00:10:07,980
account uh is the following race so it's

301
00:10:07,980 --> 00:10:09,540
going to go in and create this Empire

302
00:10:09,540 --> 00:10:12,480
folder now this is um doesn't have to be

303
00:10:12,480 --> 00:10:14,220
Empire you can change this we just stuck

304
00:10:14,220 --> 00:10:16,080
with the default name but it's gonna get

305
00:10:16,080 --> 00:10:18,660
go ahead and create this Empire folder

306
00:10:18,660 --> 00:10:20,640
and then three subfolders underneath it

307
00:10:20,640 --> 00:10:22,740
like result staging and taskings right

308
00:10:22,740 --> 00:10:24,779
so you can kind of see it's kind of

309
00:10:24,779 --> 00:10:26,279
laying the foundation here for that

310
00:10:26,279 --> 00:10:29,459
communication that's about to happen

311
00:10:29,459 --> 00:10:31,500
and then we're gonna go ahead and

312
00:10:31,500 --> 00:10:33,300
generate a payload and deliver that

313
00:10:33,300 --> 00:10:34,860
directly to the victim right so we're

314
00:10:34,860 --> 00:10:37,140
gonna on the attacker side set the

315
00:10:37,140 --> 00:10:39,540
listener to Dropbox download this or

316
00:10:39,540 --> 00:10:42,360
sorry create this Windows batch file

317
00:10:42,360 --> 00:10:43,980
um copy that to the victim and run it

318
00:10:43,980 --> 00:10:45,480
you should see this Powershell process

319
00:10:45,480 --> 00:10:47,700
startup and then on the attacker side

320
00:10:47,700 --> 00:10:49,500
you'll see an agent check-in right and

321
00:10:49,500 --> 00:10:52,500
this will have details like agent ID uh

322
00:10:52,500 --> 00:10:53,940
the language it's running as which is

323
00:10:53,940 --> 00:10:57,420
Powershell the IP address the username

324
00:10:57,420 --> 00:11:00,360
process process ID uh the delay in

325
00:11:00,360 --> 00:11:02,399
Jitter the last time it was seen and

326
00:11:02,399 --> 00:11:04,380
most importantly here the medium is

327
00:11:04,380 --> 00:11:07,880
communicating through which is Dropbox

328
00:11:08,760 --> 00:11:12,600
cool so let's see quick demo for this

329
00:11:12,600 --> 00:11:15,860
looks like this works

330
00:11:17,579 --> 00:11:20,120
okay

331
00:11:20,959 --> 00:11:23,399
so this is on the victim side you can

332
00:11:23,399 --> 00:11:25,260
see we have this batch file we're going

333
00:11:25,260 --> 00:11:27,000
to run it as administrator because why

334
00:11:27,000 --> 00:11:28,980
not and you can see this Powershell

335
00:11:28,980 --> 00:11:31,500
process startup and then on the attacker

336
00:11:31,500 --> 00:11:33,420
console you can see it just takes a few

337
00:11:33,420 --> 00:11:34,980
seconds to get fully set up but you can

338
00:11:34,980 --> 00:11:38,100
see this agent has checked in

339
00:11:38,100 --> 00:11:40,440
um it is a multi-stage deployment so you

340
00:11:40,440 --> 00:11:42,300
do need to wait a few more seconds for

341
00:11:42,300 --> 00:11:45,180
it to get fully set up

342
00:11:45,180 --> 00:11:48,180
then yeah that's why these are blank you

343
00:11:48,180 --> 00:11:51,620
just needs a one more second

344
00:11:53,940 --> 00:11:55,860
possible so you see now we have all

345
00:11:55,860 --> 00:11:57,180
those details we saw in the previous

346
00:11:57,180 --> 00:11:58,620
slide right

347
00:11:58,620 --> 00:12:00,180
and we're going to go ahead and interact

348
00:12:00,180 --> 00:12:02,160
with this and we're going to ask it uh

349
00:12:02,160 --> 00:12:04,380
to run two commands who am I and a list

350
00:12:04,380 --> 00:12:07,800
of the processes that are running

351
00:12:07,800 --> 00:12:10,380
uh while this uh does take a second to

352
00:12:10,380 --> 00:12:11,940
kind of fully propagate we can go ahead

353
00:12:11,940 --> 00:12:13,620
and look at the Dropbox account to see

354
00:12:13,620 --> 00:12:15,360
what that communication looks like you

355
00:12:15,360 --> 00:12:18,660
can see it's um doing it's sending these

356
00:12:18,660 --> 00:12:20,160
commands back and forth through these

357
00:12:20,160 --> 00:12:23,420
text files right and the name of these

358
00:12:23,420 --> 00:12:25,740
files is the name of the agent so that's

359
00:12:25,740 --> 00:12:27,060
kind of how it's managing its

360
00:12:27,060 --> 00:12:30,079
bookkeeping internally

361
00:12:32,550 --> 00:12:34,500
[Music]

362
00:12:34,500 --> 00:12:36,180
so if you go back to the attacker

363
00:12:36,180 --> 00:12:38,339
console it does take a while to get

364
00:12:38,339 --> 00:12:39,420
voice out but that kind of happened

365
00:12:39,420 --> 00:12:40,680
quickly so you see a list of the

366
00:12:40,680 --> 00:12:42,480
processes here right the process process

367
00:12:42,480 --> 00:12:46,260
ID the you know username Etc

368
00:12:46,260 --> 00:12:48,720
so if we take a look at the victim side

369
00:12:48,720 --> 00:12:50,100
we're going to look at this tool called

370
00:12:50,100 --> 00:12:53,160
Fiddler so Fiddler is a debugging proxy

371
00:12:53,160 --> 00:12:55,380
we've used to look at the communication

372
00:12:55,380 --> 00:12:56,880
going outbound if you take a look at

373
00:12:56,880 --> 00:12:58,440
what's happening from this Powershell

374
00:12:58,440 --> 00:13:00,300
process you can see it's trying to grab

375
00:13:00,300 --> 00:13:03,180
details around this file

376
00:13:03,180 --> 00:13:05,639
right and if we try to see what the

377
00:13:05,639 --> 00:13:07,620
contents of those file are when it tries

378
00:13:07,620 --> 00:13:10,339
to download it

379
00:13:12,120 --> 00:13:14,279
you see that you know the data is kind

380
00:13:14,279 --> 00:13:15,660
of gibberish right it's encrypted

381
00:13:15,660 --> 00:13:17,279
encoded you can't make sense of it at

382
00:13:17,279 --> 00:13:20,839
this stage at least in the middle

383
00:13:25,860 --> 00:13:28,019
cool

384
00:13:28,019 --> 00:13:30,800
do that again

385
00:13:34,079 --> 00:13:36,240
awesome so we just looked at

386
00:13:36,240 --> 00:13:37,800
um how this communication is happening

387
00:13:37,800 --> 00:13:39,240
right we saw it was through these text

388
00:13:39,240 --> 00:13:40,740
files that were being uploaded and

389
00:13:40,740 --> 00:13:42,480
downloaded we've tried to look at the

390
00:13:42,480 --> 00:13:44,519
content of one of these text files we

391
00:13:44,519 --> 00:13:46,139
can't really make sense of it and that's

392
00:13:46,139 --> 00:13:47,639
because it's encrypted right you can

393
00:13:47,639 --> 00:13:49,200
look at the routine and the code that's

394
00:13:49,200 --> 00:13:52,399
actually doing that as well

395
00:13:53,100 --> 00:13:55,380
so that's I know that was kind of quick

396
00:13:55,380 --> 00:13:57,000
but let's quickly summarize what we just

397
00:13:57,000 --> 00:13:59,040
saw for Dropbox it's a cloud storage app

398
00:13:59,040 --> 00:14:00,660
that's abused by uploading downloading

399
00:14:00,660 --> 00:14:02,760
deleting these encrypted files if you

400
00:14:02,760 --> 00:14:04,440
wanted to simulate this you can using

401
00:14:04,440 --> 00:14:07,079
Dropbox C2C through Empire and depending

402
00:14:07,079 --> 00:14:08,940
on maybe the certification level you're

403
00:14:08,940 --> 00:14:10,200
trying to model you can do a few

404
00:14:10,200 --> 00:14:11,880
different things right you can if you're

405
00:14:11,880 --> 00:14:13,320
trying to model not very sophisticated

406
00:14:13,320 --> 00:14:14,820
third actor you could use the default

407
00:14:14,820 --> 00:14:16,680
configs if you want to model a model

408
00:14:16,680 --> 00:14:18,240
it's the sophisticated thread actor to

409
00:14:18,240 --> 00:14:19,800
customize the configs or a little bit

410
00:14:19,800 --> 00:14:21,180
and if you want to model a very

411
00:14:21,180 --> 00:14:22,800
sophisticated threat you could do like

412
00:14:22,800 --> 00:14:24,480
what we saw in the example which is use

413
00:14:24,480 --> 00:14:27,120
multiple accounts to send uh commands

414
00:14:27,120 --> 00:14:28,800
back and forth so the responsibilities

415
00:14:28,800 --> 00:14:31,079
are segregated

416
00:14:31,079 --> 00:14:33,300
awesome so let's do one more Deep dive

417
00:14:33,300 --> 00:14:34,680
with Slack

418
00:14:34,680 --> 00:14:37,320
so slack again I think most people are

419
00:14:37,320 --> 00:14:38,940
familiar with it but in case you're not

420
00:14:38,940 --> 00:14:40,980
it's a collaboration app and it's useful

421
00:14:40,980 --> 00:14:42,959
for sending messages internally within

422
00:14:42,959 --> 00:14:45,180
an org uh and attackers tend to abuse

423
00:14:45,180 --> 00:14:46,740
this by creating channels sending

424
00:14:46,740 --> 00:14:48,899
messages or reading and writing to

425
00:14:48,899 --> 00:14:51,180
messages so replying to messages this

426
00:14:51,180 --> 00:14:53,220
also exists as an Enterprise and this is

427
00:14:53,220 --> 00:14:55,380
personal cloud further which further

428
00:14:55,380 --> 00:14:57,060
enables an attacker to want to use this

429
00:14:57,060 --> 00:14:58,279
right

430
00:14:58,279 --> 00:15:01,260
uh going over one real world example so

431
00:15:01,260 --> 00:15:03,540
this is uh you know malware sampling

432
00:15:03,540 --> 00:15:07,260
eclip was abusing slack for C2 I think a

433
00:15:07,260 --> 00:15:09,660
year ago now and it was targeting an

434
00:15:09,660 --> 00:15:12,000
airline to steal reservation data and

435
00:15:12,000 --> 00:15:13,440
you can see in the attack flow on the

436
00:15:13,440 --> 00:15:16,260
right side in what was interesting about

437
00:15:16,260 --> 00:15:18,000
this is they were using different

438
00:15:18,000 --> 00:15:20,040
channels for communication so they were

439
00:15:20,040 --> 00:15:22,560
using slacks features to kind of make

440
00:15:22,560 --> 00:15:24,180
their lives easier as well right so

441
00:15:24,180 --> 00:15:26,339
they're using uh one channel to send

442
00:15:26,339 --> 00:15:28,860
system information upon compromise a

443
00:15:28,860 --> 00:15:30,420
different channel for sending commands

444
00:15:30,420 --> 00:15:32,519
back and forth and then a third one to

445
00:15:32,519 --> 00:15:34,440
send the results of these commands as

446
00:15:34,440 --> 00:15:36,660
well as any result any files that might

447
00:15:36,660 --> 00:15:38,160
have been requested right so they're

448
00:15:38,160 --> 00:15:41,220
kind of uh really getting the most for

449
00:15:41,220 --> 00:15:45,480
from this uh subscription from Slack

450
00:15:45,480 --> 00:15:48,240
cool so if we do the same thing we did

451
00:15:48,240 --> 00:15:51,300
with Dropbox we can simulate this with

452
00:15:51,300 --> 00:15:53,880
stock or slack C2 bot or stock show we

453
00:15:53,880 --> 00:15:55,380
just use see-through covenants because

454
00:15:55,380 --> 00:15:58,019
they have very uh detailed set of steps

455
00:15:58,019 --> 00:15:59,399
that we could use again we're going to

456
00:15:59,399 --> 00:16:01,380
use a four-step process here we're going

457
00:16:01,380 --> 00:16:04,139
to sign up for the account create a you

458
00:16:04,139 --> 00:16:07,260
know set up C3 and Covenant with the

459
00:16:07,260 --> 00:16:09,959
um with the stock account that we set up

460
00:16:09,959 --> 00:16:11,880
then we're going to generate a payload

461
00:16:11,880 --> 00:16:13,920
and move that to the victim machine and

462
00:16:13,920 --> 00:16:15,120
then we're going to interact with the

463
00:16:15,120 --> 00:16:17,100
compromise device by commonly coming

464
00:16:17,100 --> 00:16:19,800
into slack right

465
00:16:19,800 --> 00:16:22,620
so um first things first we sign up for

466
00:16:22,620 --> 00:16:24,180
the stock account create a set of

467
00:16:24,180 --> 00:16:26,040
application credentials that we want to

468
00:16:26,040 --> 00:16:28,019
use

469
00:16:28,019 --> 00:16:29,279
then we're going to use these

470
00:16:29,279 --> 00:16:32,639
credentials to set up uh C3 and Covenant

471
00:16:32,639 --> 00:16:34,920
um and you can see C3 has this nice

472
00:16:34,920 --> 00:16:37,199
graphical interface that you could use

473
00:16:37,199 --> 00:16:39,199
we're going to go ahead and set up a

474
00:16:39,199 --> 00:16:41,880
slack Channel we're going to give it the

475
00:16:41,880 --> 00:16:43,800
the token or the credentials that we

476
00:16:43,800 --> 00:16:45,240
created and if we set up everything

477
00:16:45,240 --> 00:16:47,759
correctly you should see a graph like on

478
00:16:47,759 --> 00:16:49,320
the bottom right side where you have the

479
00:16:49,320 --> 00:16:51,660
Gateway and that's communicating out to

480
00:16:51,660 --> 00:16:54,360
the to through that channel one thing to

481
00:16:54,360 --> 00:16:56,279
note if you do this is see-through and

482
00:16:56,279 --> 00:16:58,019
Covenant are two different repos so we

483
00:16:58,019 --> 00:16:59,880
had some issues with integrating them

484
00:16:59,880 --> 00:17:01,920
that commit hash works the best for us

485
00:17:01,920 --> 00:17:04,079
we did something to make a note of if

486
00:17:04,079 --> 00:17:05,220
you do end up going through this

487
00:17:05,220 --> 00:17:07,339
exercise

488
00:17:07,559 --> 00:17:09,959
so what this does similar to how we saw

489
00:17:09,959 --> 00:17:11,939
that Empire directory being created in

490
00:17:11,939 --> 00:17:13,919
Dropbox is this is going to go ahead and

491
00:17:13,919 --> 00:17:15,660
create up a create a stock channel for

492
00:17:15,660 --> 00:17:18,119
us to use right so the six Eep channel

493
00:17:18,119 --> 00:17:21,240
gets created and we see the C3 uh bot

494
00:17:21,240 --> 00:17:23,760
gets uh joins that stock channel so it's

495
00:17:23,760 --> 00:17:25,380
kind of setting that groundwork for that

496
00:17:25,380 --> 00:17:27,959
communication right

497
00:17:27,959 --> 00:17:29,580
so what we're going to do at this point

498
00:17:29,580 --> 00:17:31,740
is we're going to generate this payload

499
00:17:31,740 --> 00:17:33,660
that has a stock token it's all auto

500
00:17:33,660 --> 00:17:35,220
generated we're going to download this

501
00:17:35,220 --> 00:17:37,260
payload that's called a relay in C3

502
00:17:37,260 --> 00:17:39,419
we're going to copy that relay over to

503
00:17:39,419 --> 00:17:43,400
our victim machine and run it as admin

504
00:17:43,799 --> 00:17:46,440
cool so what this does is it's once we

505
00:17:46,440 --> 00:17:47,940
have fully set up you can see on the

506
00:17:47,940 --> 00:17:49,500
right side this is going to create that

507
00:17:49,500 --> 00:17:50,820
whole uh tackle where you have the

508
00:17:50,820 --> 00:17:52,740
Gateway it's communicating through

509
00:17:52,740 --> 00:17:55,140
channels to the victim machine on the

510
00:17:55,140 --> 00:17:57,480
right side and we have Covenant set up

511
00:17:57,480 --> 00:17:58,620
with the whole thing so we can run

512
00:17:58,620 --> 00:18:00,960
commands like who am I and get the card

513
00:18:00,960 --> 00:18:02,820
directory and that'll kind of flow

514
00:18:02,820 --> 00:18:04,740
through slack all the way to the victim

515
00:18:04,740 --> 00:18:06,660
get executed and then come back to the

516
00:18:06,660 --> 00:18:08,160
to the Gateway and show up on our

517
00:18:08,160 --> 00:18:09,960
console right the results will show up

518
00:18:09,960 --> 00:18:12,600
on our console

519
00:18:12,600 --> 00:18:14,820
so if we take a look at a you know quick

520
00:18:14,820 --> 00:18:17,760
video this we can request the processes

521
00:18:17,760 --> 00:18:20,220
here and you can see the request getting

522
00:18:20,220 --> 00:18:21,960
written out to the slack channel the

523
00:18:21,960 --> 00:18:23,640
victim's gonna download all that stuff

524
00:18:23,640 --> 00:18:26,100
and delete it and then upload the

525
00:18:26,100 --> 00:18:27,780
results here

526
00:18:27,780 --> 00:18:29,700
um and then the attacker is going to

527
00:18:29,700 --> 00:18:31,140
download and delete it and show it in

528
00:18:31,140 --> 00:18:33,840
their console so if we just take a look

529
00:18:33,840 --> 00:18:35,039
at that one more time that was kind of

530
00:18:35,039 --> 00:18:36,900
quick we ask for a list of the processes

531
00:18:36,900 --> 00:18:39,059
here from the attacker side and then the

532
00:18:39,059 --> 00:18:40,919
stock channel that request gets written

533
00:18:40,919 --> 00:18:43,020
out really quickly right it's encrypted

534
00:18:43,020 --> 00:18:44,640
encoded you can't really make sense of

535
00:18:44,640 --> 00:18:46,020
it here

536
00:18:46,020 --> 00:18:50,000
um and then the results get written back

537
00:18:50,160 --> 00:18:52,260
it's deleted and it shows up in the

538
00:18:52,260 --> 00:18:55,039
attacker console

539
00:18:55,799 --> 00:18:58,500
cool again that was uh very quick but

540
00:18:58,500 --> 00:19:00,240
just to summarize everything we talked

541
00:19:00,240 --> 00:19:01,860
about to collaborate stock is a

542
00:19:01,860 --> 00:19:03,600
collaboration app that's abused by

543
00:19:03,600 --> 00:19:06,539
sending commands through slack channels

544
00:19:06,539 --> 00:19:07,919
um if you wanted to simulate a threat

545
00:19:07,919 --> 00:19:09,539
actor doing this you could do this using

546
00:19:09,539 --> 00:19:11,880
it using uh tools like C3 and Covenant

547
00:19:11,880 --> 00:19:14,100
and depending on the sophistication

548
00:19:14,100 --> 00:19:16,020
level you want to model you could do a

549
00:19:16,020 --> 00:19:19,580
few different things for this as well

550
00:19:19,860 --> 00:19:22,140
awesome so let's talk about the fun

551
00:19:22,140 --> 00:19:25,799
stuff right uh defenses so what can you

552
00:19:25,799 --> 00:19:27,419
do to defend this but before you get

553
00:19:27,419 --> 00:19:29,280
into that why can't in my existing C2

554
00:19:29,280 --> 00:19:30,960
controller just detect this in the first

555
00:19:30,960 --> 00:19:33,900
place right why do we have to introduce

556
00:19:33,900 --> 00:19:36,720
this whole new Cloud C2 concept

557
00:19:36,720 --> 00:19:38,940
um so here is a screen cap from um

558
00:19:38,940 --> 00:19:41,179
Fiddler so we had

559
00:19:41,179 --> 00:19:44,220
two different processes running here uh

560
00:19:44,220 --> 00:19:46,500
the first is the GitHub desktop

561
00:19:46,500 --> 00:19:48,059
application that's you know valid

562
00:19:48,059 --> 00:19:49,559
executable from GitHub that we

563
00:19:49,559 --> 00:19:51,360
downloaded and installed

564
00:19:51,360 --> 00:19:53,100
um the second was a malicious process

565
00:19:53,100 --> 00:19:55,080
from sheet3 called the relay that was

566
00:19:55,080 --> 00:19:57,720
abusing GitHub for Community Control all

567
00:19:57,720 --> 00:19:59,580
right you can see in both of these cases

568
00:19:59,580 --> 00:20:02,039
the malicious and benign case right the

569
00:20:02,039 --> 00:20:04,100
traffic is going to the same domain it's

570
00:20:04,100 --> 00:20:06,600
epi.github.com right the domain is a

571
00:20:06,600 --> 00:20:08,520
valid clockwriter domain and the traffic

572
00:20:08,520 --> 00:20:10,679
is encrypted the same way using the

573
00:20:10,679 --> 00:20:12,179
cloud provider certificate right so if

574
00:20:12,179 --> 00:20:13,919
you have an IP or domain based block

575
00:20:13,919 --> 00:20:15,240
list here that's not going to work

576
00:20:15,240 --> 00:20:16,919
because all this is going to GitHub

577
00:20:16,919 --> 00:20:19,380
servers unless no one in your org uses

578
00:20:19,380 --> 00:20:21,660
GitHub you definitely don't want to lock

579
00:20:21,660 --> 00:20:24,000
this uh GitHub servers right so you need

580
00:20:24,000 --> 00:20:26,419
a different kind of approach to detect

581
00:20:26,419 --> 00:20:29,820
this particular type of C2

582
00:20:29,820 --> 00:20:31,919
so before we get into how we're going to

583
00:20:31,919 --> 00:20:34,740
detect this I just want to give you a

584
00:20:34,740 --> 00:20:36,900
quick layout of what our typical victim

585
00:20:36,900 --> 00:20:39,240
machine looks like so we had the

586
00:20:39,240 --> 00:20:40,679
following three types of processes

587
00:20:40,679 --> 00:20:42,480
running so we had the nine processes

588
00:20:42,480 --> 00:20:44,700
like browsers uh you know your Chrome's

589
00:20:44,700 --> 00:20:46,980
and your firefoxes etc those were

590
00:20:46,980 --> 00:20:48,840
installed in running we also had these

591
00:20:48,840 --> 00:20:51,120
native apps that we call sync clients

592
00:20:51,120 --> 00:20:53,280
installed as well so these are like the

593
00:20:53,280 --> 00:20:55,980
slack app itself the GitHub app itself

594
00:20:55,980 --> 00:20:58,440
from the website right these were

595
00:20:58,440 --> 00:21:00,840
installed and running as well and we had

596
00:21:00,840 --> 00:21:02,220
people using them like how they would

597
00:21:02,220 --> 00:21:04,140
normally and then we also had some

598
00:21:04,140 --> 00:21:06,000
malicious processes running so these are

599
00:21:06,000 --> 00:21:08,520
like C3 payloads Empire payloads that

600
00:21:08,520 --> 00:21:10,140
are used to generate this malicious

601
00:21:10,140 --> 00:21:12,780
Cloud C2 traffic those are installed as

602
00:21:12,780 --> 00:21:14,460
well and all of this traffic was flowing

603
00:21:14,460 --> 00:21:16,559
through Fiddler and we used Fiddler to

604
00:21:16,559 --> 00:21:19,140
get log that data exported out as a DOT

605
00:21:19,140 --> 00:21:21,240
SEC file for analysis all right this is

606
00:21:21,240 --> 00:21:24,360
what a typical victim looks like right

607
00:21:24,360 --> 00:21:26,700
cool so

608
00:21:26,700 --> 00:21:29,460
what does our detection logic look like

609
00:21:29,460 --> 00:21:32,159
at this point so from our victim machine

610
00:21:32,159 --> 00:21:34,440
we had this traffic that we call inline

611
00:21:34,440 --> 00:21:36,659
traffic right and we had this inline

612
00:21:36,659 --> 00:21:37,919
traffic coming out of this victim

613
00:21:37,919 --> 00:21:39,840
machine going to the internet and we

614
00:21:39,840 --> 00:21:42,360
wanted to extract a set of signals right

615
00:21:42,360 --> 00:21:44,100
these signals can be categorized into

616
00:21:44,100 --> 00:21:46,799
five groups the first were signals that

617
00:21:46,799 --> 00:21:48,960
tell you about beaconing that might be

618
00:21:48,960 --> 00:21:51,600
present in the traffic second are any

619
00:21:51,600 --> 00:21:53,460
anomalous behavior that might be

620
00:21:53,460 --> 00:21:54,840
different from the Baseline you've come

621
00:21:54,840 --> 00:21:56,940
to understand for the user or the Org

622
00:21:56,940 --> 00:21:58,860
the third is that content what's the

623
00:21:58,860 --> 00:22:00,179
nature of the content that's flowing

624
00:22:00,179 --> 00:22:02,820
user encrypted or encoded in any way

625
00:22:02,820 --> 00:22:05,640
the fourth is host access patterns do we

626
00:22:05,640 --> 00:22:07,380
see any host access pattern that's

627
00:22:07,380 --> 00:22:10,080
relate they're closely relates Cloud C2

628
00:22:10,080 --> 00:22:12,480
type of behavior and then lastly our

629
00:22:12,480 --> 00:22:14,400
sequences are there any sequences here

630
00:22:14,400 --> 00:22:17,700
that we identify with C2 that's abusing

631
00:22:17,700 --> 00:22:19,380
Cloud apps right we're going to extract

632
00:22:19,380 --> 00:22:21,000
those signals from that inline traffic

633
00:22:21,000 --> 00:22:22,500
and then feed it to this decision

634
00:22:22,500 --> 00:22:24,480
component that's then I'm going to say

635
00:22:24,480 --> 00:22:27,179
is this benign Cloud traffic in which

636
00:22:27,179 --> 00:22:29,220
case it's allowed that's fine or is it

637
00:22:29,220 --> 00:22:31,260
malicious Cloud C2 traffic in which case

638
00:22:31,260 --> 00:22:32,760
it's blocked right so we're going to

639
00:22:32,760 --> 00:22:34,440
look at the traffic extract a set of

640
00:22:34,440 --> 00:22:36,059
signals that we're going to then going

641
00:22:36,059 --> 00:22:38,340
to use to decide is this okay to let to

642
00:22:38,340 --> 00:22:40,880
the internet or not right

643
00:22:40,880 --> 00:22:44,280
so what are the signals that we uh just

644
00:22:44,280 --> 00:22:46,500
briefly talked about right so the first

645
00:22:46,500 --> 00:22:48,600
set of signals uh give us information

646
00:22:48,600 --> 00:22:53,039
around beaconing so here we have two um

647
00:22:53,039 --> 00:22:55,740
screen caps in this Slide the top is uh

648
00:22:55,740 --> 00:22:58,080
Empire using Dropbox for command and

649
00:22:58,080 --> 00:23:00,240
control and then the bottom is C3

650
00:23:00,240 --> 00:23:02,760
abusing GitHub so in both of these you

651
00:23:02,760 --> 00:23:04,020
know two different tools two different

652
00:23:04,020 --> 00:23:05,280
Cloud apps

653
00:23:05,280 --> 00:23:08,820
and we can see in both of these cases

654
00:23:08,820 --> 00:23:11,039
that there were frequent checks to the

655
00:23:11,039 --> 00:23:13,440
same URL rights iterative at a regular

656
00:23:13,440 --> 00:23:15,840
time interval just checking uh we see

657
00:23:15,840 --> 00:23:17,820
it's a repeated request and a response

658
00:23:17,820 --> 00:23:20,580
so it's a a 409 on a get request at the

659
00:23:20,580 --> 00:23:22,559
top and then it's a 200 on a get request

660
00:23:22,559 --> 00:23:24,780
at the bottom right we can see it's an

661
00:23:24,780 --> 00:23:26,580
unusual process making this request it's

662
00:23:26,580 --> 00:23:28,380
not the browser or the same client it's

663
00:23:28,380 --> 00:23:30,240
something else and there's not much

664
00:23:30,240 --> 00:23:32,280
deviation in the data that's being sent

665
00:23:32,280 --> 00:23:34,020
back and forth right and we're going to

666
00:23:34,020 --> 00:23:36,179
extract these features or these signals

667
00:23:36,179 --> 00:23:37,440
and that's going to give us information

668
00:23:37,440 --> 00:23:39,600
around whether process is weakening from

669
00:23:39,600 --> 00:23:42,659
a system now uh one thing to note I

670
00:23:42,659 --> 00:23:44,100
should have done this earlier none of

671
00:23:44,100 --> 00:23:46,380
these um tell us and none of these are

672
00:23:46,380 --> 00:23:47,760
the Silver Bullet like you know at least

673
00:23:47,760 --> 00:23:49,140
by itself is going to tell us this is

674
00:23:49,140 --> 00:23:50,940
cloud C2 right we're going to use these

675
00:23:50,940 --> 00:23:53,340
signals to make an educated decision as

676
00:23:53,340 --> 00:23:55,320
to whether this might be Cloud C2 or not

677
00:23:55,320 --> 00:23:57,059
right so that's what we're going through

678
00:23:57,059 --> 00:23:59,360
here

679
00:23:59,940 --> 00:24:01,320
um the second set of signals or

680
00:24:01,320 --> 00:24:03,299
anomalousness signals so this is going

681
00:24:03,299 --> 00:24:06,059
to give us information around whether

682
00:24:06,059 --> 00:24:07,500
um you know there might be deviations

683
00:24:07,500 --> 00:24:09,419
from what we understand the Baseline to

684
00:24:09,419 --> 00:24:12,000
be for this particular user so the first

685
00:24:12,000 --> 00:24:13,679
set of signals are unusual Cloud

686
00:24:13,679 --> 00:24:15,659
entities so things like slack channels

687
00:24:15,659 --> 00:24:18,059
GitHub repos Dropbox folders Etc right

688
00:24:18,059 --> 00:24:20,039
different a different set of cloud

689
00:24:20,039 --> 00:24:22,260
entities than what this user typically

690
00:24:22,260 --> 00:24:23,520
accesses

691
00:24:23,520 --> 00:24:26,400
the second is an unusual user agent or

692
00:24:26,400 --> 00:24:28,440
you know even worse if the user agent is

693
00:24:28,440 --> 00:24:31,020
associated with the known malware right

694
00:24:31,020 --> 00:24:33,240
um if typically what malware authors

695
00:24:33,240 --> 00:24:34,919
will do they'll find that you know

696
00:24:34,919 --> 00:24:36,840
popular user agent at a given moment and

697
00:24:36,840 --> 00:24:38,940
use that as part of their communication

698
00:24:38,940 --> 00:24:41,039
flow that might be different from what a

699
00:24:41,039 --> 00:24:42,659
normal user uses and if that's the case

700
00:24:42,659 --> 00:24:44,780
we want to flag that as well

701
00:24:44,780 --> 00:24:47,220
the third is if there's an unusual

702
00:24:47,220 --> 00:24:48,960
username that's being used to log into

703
00:24:48,960 --> 00:24:50,460
the app so typically in a corporate

704
00:24:50,460 --> 00:24:51,840
environment you know a user has a

705
00:24:51,840 --> 00:24:53,460
handful of these usernames that they use

706
00:24:53,460 --> 00:24:55,740
to log in if you see a new username

707
00:24:55,740 --> 00:24:57,600
pop-up that's something you want to flag

708
00:24:57,600 --> 00:25:00,780
as well and then lastly is if there's an

709
00:25:00,780 --> 00:25:02,520
unusual authentication method so it's

710
00:25:02,520 --> 00:25:03,780
again typically in corporate

711
00:25:03,780 --> 00:25:06,240
environments there's for these SAS apps

712
00:25:06,240 --> 00:25:07,860
they'll use like an SSO solution like

713
00:25:07,860 --> 00:25:10,260
OCTA to log into everything right now if

714
00:25:10,260 --> 00:25:11,760
you see like a token being used to

715
00:25:11,760 --> 00:25:13,380
communicate to GitHub or something we

716
00:25:13,380 --> 00:25:16,940
want to flag that too

717
00:25:17,520 --> 00:25:20,340
awesome um so the third is content right

718
00:25:20,340 --> 00:25:23,400
we saw earlier I think a few times as if

719
00:25:23,400 --> 00:25:25,320
the data is encrypted or encoded that's

720
00:25:25,320 --> 00:25:27,000
something we want to make a note of and

721
00:25:27,000 --> 00:25:28,919
you can see on the on the right side

722
00:25:28,919 --> 00:25:31,020
that the attacker is using GitHub to

723
00:25:31,020 --> 00:25:33,059
communicate and it's you know encrypted

724
00:25:33,059 --> 00:25:34,679
and you're encoding these tasks files

725
00:25:34,679 --> 00:25:36,539
and committing them to the repo the

726
00:25:36,539 --> 00:25:38,700
victim's gonna download that and upload

727
00:25:38,700 --> 00:25:40,559
its own encrypted encoded results right

728
00:25:40,559 --> 00:25:42,659
same thing for a Dropbox as well these

729
00:25:42,659 --> 00:25:44,220
text files contained encrypted and

730
00:25:44,220 --> 00:25:45,960
included data right so if you see that

731
00:25:45,960 --> 00:25:49,500
you want to make a note of that too

732
00:25:49,500 --> 00:25:52,559
the fourth set of features we actually

733
00:25:52,559 --> 00:25:55,260
got from uh f-secure's blog they have a

734
00:25:55,260 --> 00:25:57,900
really nice blog of how to detect uh C3

735
00:25:57,900 --> 00:26:00,000
specifically so I do recommend looking

736
00:26:00,000 --> 00:26:02,039
at that but what what they need a note

737
00:26:02,039 --> 00:26:03,419
of is first

738
00:26:03,419 --> 00:26:05,640
um well if no one uses slack and you see

739
00:26:05,640 --> 00:26:07,500
communication to slack.com obviously

740
00:26:07,500 --> 00:26:09,600
that's a giveaway all right but let's

741
00:26:09,600 --> 00:26:12,179
say you are using slack you see that the

742
00:26:12,179 --> 00:26:14,820
actual um slack executable communicates

743
00:26:14,820 --> 00:26:16,740
the different set of hosts that you know

744
00:26:16,740 --> 00:26:18,600
malicious process that's just using slot

745
00:26:18,600 --> 00:26:20,700
the actual slack executable reaches out

746
00:26:20,700 --> 00:26:22,799
to a variety of other hosts to grab you

747
00:26:22,799 --> 00:26:25,320
know CSS to grab avatars to grab you

748
00:26:25,320 --> 00:26:27,659
know gifs Etc but you know malware

749
00:26:27,659 --> 00:26:30,059
process that's abusing slack really only

750
00:26:30,059 --> 00:26:32,279
reaches out to a handful of things it's

751
00:26:32,279 --> 00:26:35,340
slack.com and files.slack.com so if you

752
00:26:35,340 --> 00:26:37,740
see a difference in this deviation we

753
00:26:37,740 --> 00:26:39,120
want to make a note of that as well

754
00:26:39,120 --> 00:26:40,620
because that may be indicative of

755
00:26:40,620 --> 00:26:42,960
something that's just abusing slacks API

756
00:26:42,960 --> 00:26:45,740
for communication

757
00:26:47,159 --> 00:26:47,760
um

758
00:26:47,760 --> 00:26:49,980
next up is sequences before I dive into

759
00:26:49,980 --> 00:26:52,679
sequences we also want to flag any known

760
00:26:52,679 --> 00:26:55,140
hard-coded endpoint so again this is not

761
00:26:55,140 --> 00:26:57,120
we just don't want to alert just on this

762
00:26:57,120 --> 00:26:59,880
but if we see communication to endpoints

763
00:26:59,880 --> 00:27:02,039
we know are hard-coded in these tools or

764
00:27:02,039 --> 00:27:03,539
these you know what malware typically

765
00:27:03,539 --> 00:27:05,039
reaches out to we want to see if there's

766
00:27:05,039 --> 00:27:07,559
any spikes in these right so if we see

767
00:27:07,559 --> 00:27:09,480
that one day suddenly a user is reaching

768
00:27:09,480 --> 00:27:11,460
out to the Dropbox download API you know

769
00:27:11,460 --> 00:27:13,500
500 times more than normal that's

770
00:27:13,500 --> 00:27:15,120
something you want to make a note of as

771
00:27:15,120 --> 00:27:15,840
well

772
00:27:15,840 --> 00:27:17,880
and we also want to see sequences right

773
00:27:17,880 --> 00:27:19,620
like how we saw in the beginning on the

774
00:27:19,620 --> 00:27:21,600
offensive side typically communication

775
00:27:21,600 --> 00:27:24,059
is a download from Dropbox right a

776
00:27:24,059 --> 00:27:25,740
delete from Dropbox and then upload to

777
00:27:25,740 --> 00:27:27,539
Dropbox if we see this over and over

778
00:27:27,539 --> 00:27:29,460
again right that's not really a human

779
00:27:29,460 --> 00:27:31,380
interacting with Dropbox it's more of a

780
00:27:31,380 --> 00:27:33,960
like a robot right so if we see that we

781
00:27:33,960 --> 00:27:36,860
want to flag that too

782
00:27:37,440 --> 00:27:39,240
cool so I know we just covered a bunch

783
00:27:39,240 --> 00:27:42,600
of these uh signals for our POC that's

784
00:27:42,600 --> 00:27:44,100
kind of starting at this point we're

785
00:27:44,100 --> 00:27:45,600
going to use a select list of these

786
00:27:45,600 --> 00:27:48,600
signals to help us identify Cloud C2

787
00:27:48,600 --> 00:27:50,340
um and this select list is on this slide

788
00:27:50,340 --> 00:27:52,320
right the if we see a low number of

789
00:27:52,320 --> 00:27:54,779
domains that are being communicated to

790
00:27:54,779 --> 00:27:56,640
if there's a low number of preferred

791
00:27:56,640 --> 00:27:58,740
traffic so malicious traffic or C2

792
00:27:58,740 --> 00:28:01,320
traffic generally isn't referred

793
00:28:01,320 --> 00:28:03,600
um if we see a set of known Cloud C2

794
00:28:03,600 --> 00:28:05,880
domains that are being contacted if the

795
00:28:05,880 --> 00:28:07,799
data is encrypted or encoded in any way

796
00:28:07,799 --> 00:28:09,900
right if there's a not much deviation

797
00:28:09,900 --> 00:28:11,940
between requests right so if it's every

798
00:28:11,940 --> 00:28:15,299
five seconds if you see a beacon go out

799
00:28:15,299 --> 00:28:17,039
um if there's an unusual authentication

800
00:28:17,039 --> 00:28:19,799
method unusual user agent unusual Cloud

801
00:28:19,799 --> 00:28:22,440
repo unusual username slack Channel apps

802
00:28:22,440 --> 00:28:24,120
or Bots we want to flag these as well

803
00:28:24,120 --> 00:28:26,279
and we're going to use this

804
00:28:26,279 --> 00:28:27,299
um

805
00:28:27,299 --> 00:28:28,980
we're going to use this and send this to

806
00:28:28,980 --> 00:28:30,960
the decision component now this is an

807
00:28:30,960 --> 00:28:33,059
area that's still in research but for

808
00:28:33,059 --> 00:28:35,220
the sake of you know just completing the

809
00:28:35,220 --> 00:28:37,440
process and seeing it for Orcs we uh

810
00:28:37,440 --> 00:28:39,299
created our own decision component that

811
00:28:39,299 --> 00:28:41,520
just says if the traffic from one

812
00:28:41,520 --> 00:28:44,159
process to one domain contains more than

813
00:28:44,159 --> 00:28:45,960
five of these signals we're going to

814
00:28:45,960 --> 00:28:48,179
raise an alert right so that's just a

815
00:28:48,179 --> 00:28:50,100
simple check at this point ideally we

816
00:28:50,100 --> 00:28:51,600
want something a little bit more robust

817
00:28:51,600 --> 00:28:52,860
you know something that's a little bit

818
00:28:52,860 --> 00:28:55,320
more statistical but for the sake of uh

819
00:28:55,320 --> 00:28:57,720
you know just doing the POC we just went

820
00:28:57,720 --> 00:29:00,840
with that particular detection

821
00:29:00,840 --> 00:29:03,360
so just revisiting what we're gonna do

822
00:29:03,360 --> 00:29:05,520
one more time uh we have these victim

823
00:29:05,520 --> 00:29:07,320
machines that have benign emulsious

824
00:29:07,320 --> 00:29:09,480
processes running right we're going to

825
00:29:09,480 --> 00:29:11,520
extract that traffic from that traffic

826
00:29:11,520 --> 00:29:12,900
we're going to extract the set of

827
00:29:12,900 --> 00:29:14,340
signals that we're going to pass this

828
00:29:14,340 --> 00:29:16,320
decision component and if more than five

829
00:29:16,320 --> 00:29:17,820
of these signals are present we're going

830
00:29:17,820 --> 00:29:21,539
to raise an alert right

831
00:29:21,539 --> 00:29:24,120
cool so let's go over a quick demo of

832
00:29:24,120 --> 00:29:26,039
how these signals look

833
00:29:26,039 --> 00:29:28,919
so first is Empire using Dropbox like we

834
00:29:28,919 --> 00:29:31,320
saw so Empire uh this is what the attack

835
00:29:31,320 --> 00:29:33,240
flow looks like so the Empire console is

836
00:29:33,240 --> 00:29:35,399
going to upload commands to the attacker

837
00:29:35,399 --> 00:29:37,860
control Dropbox account the agent that's

838
00:29:37,860 --> 00:29:39,240
running on the victim is going to pull

839
00:29:39,240 --> 00:29:41,700
those commands down execute them upload

840
00:29:41,700 --> 00:29:44,220
the results to Dropbox and then uh the

841
00:29:44,220 --> 00:29:45,419
Empire server is going to pull those

842
00:29:45,419 --> 00:29:47,399
results down and show them right so we

843
00:29:47,399 --> 00:29:49,980
ran this traffic for um

844
00:29:49,980 --> 00:29:52,559
about a day a day and a half on this

845
00:29:52,559 --> 00:29:55,140
victim's machine we extracted that data

846
00:29:55,140 --> 00:29:57,600
and we want to take a look at what these

847
00:29:57,600 --> 00:29:59,640
signals might show us right so if you

848
00:29:59,640 --> 00:30:02,580
take a look at that so

849
00:30:02,580 --> 00:30:04,980
um here we have that dot SEC file that

850
00:30:04,980 --> 00:30:07,020
we exported and we're going to just do

851
00:30:07,020 --> 00:30:07,980
what we said right we're going to

852
00:30:07,980 --> 00:30:09,539
extract those signals see if see if

853
00:30:09,539 --> 00:30:11,279
there's anything useful there

854
00:30:11,279 --> 00:30:12,960
it is a day and a half worth of data so

855
00:30:12,960 --> 00:30:14,880
it does take a few seconds to fully

856
00:30:14,880 --> 00:30:16,860
process

857
00:30:16,860 --> 00:30:18,480
um

858
00:30:18,480 --> 00:30:21,240
yeah so we have about 4 000 sessions

859
00:30:21,240 --> 00:30:23,340
here a session is uh you know one

860
00:30:23,340 --> 00:30:25,320
process communicating out to one domain

861
00:30:25,320 --> 00:30:27,659
you can see most of this is the browser

862
00:30:27,659 --> 00:30:29,520
Community communicating out to a large

863
00:30:29,520 --> 00:30:31,559
variety of these domains but we see we

864
00:30:31,559 --> 00:30:34,080
flawed one process communicating to one

865
00:30:34,080 --> 00:30:36,840
domain as likely Cloud C2 and we want to

866
00:30:36,840 --> 00:30:38,760
dive into that a little bit more to see

867
00:30:38,760 --> 00:30:42,260
what the indicators were

868
00:30:44,220 --> 00:30:46,340
thank you

869
00:30:48,299 --> 00:30:51,059
cool so if we see we saw this Powershell

870
00:30:51,059 --> 00:30:53,419
process communicating to

871
00:30:53,419 --> 00:30:55,500
content.dropboxapi.com and that was

872
00:30:55,500 --> 00:30:57,779
flagged as likely Cloud C2 right and why

873
00:30:57,779 --> 00:31:00,240
was this we saw uh we're like telling us

874
00:31:00,240 --> 00:31:02,700
that it's because it sent 865 requests

875
00:31:02,700 --> 00:31:05,039
to only two domains none of this traffic

876
00:31:05,039 --> 00:31:07,500
was referred the authentication method

877
00:31:07,500 --> 00:31:09,539
being used here was a Vera token right

878
00:31:09,539 --> 00:31:11,880
the content was encrypted their time

879
00:31:11,880 --> 00:31:13,500
interval between requests was two

880
00:31:13,500 --> 00:31:15,840
seconds with almost no deviation right

881
00:31:15,840 --> 00:31:18,419
and the user agent was unusual for this

882
00:31:18,419 --> 00:31:19,620
user

883
00:31:19,620 --> 00:31:20,940
um it's actually a default for Empire

884
00:31:20,940 --> 00:31:23,340
and it sent requests to two known

885
00:31:23,340 --> 00:31:25,260
domains associated with Cloud cheats and

886
00:31:25,260 --> 00:31:27,059
because of this we flag this is likely

887
00:31:27,059 --> 00:31:29,100
Cloud C2 tracker right

888
00:31:29,100 --> 00:31:31,620
and if we repeat the process for GitHub

889
00:31:31,620 --> 00:31:34,799
uh and C3 you can see uh we just used

890
00:31:34,799 --> 00:31:36,240
you know a different Cloud up in a

891
00:31:36,240 --> 00:31:38,220
different tool we flagged two instances

892
00:31:38,220 --> 00:31:40,380
in this case uh both the relay

893
00:31:40,380 --> 00:31:43,559
communicating out to apigithub.com and

894
00:31:43,559 --> 00:31:44,960
then the second one is raw

895
00:31:44,960 --> 00:31:46,679
githubusercontent.com right so two

896
00:31:46,679 --> 00:31:48,899
different domains uh in both of these

897
00:31:48,899 --> 00:31:51,059
cases it's a large variety of it's a

898
00:31:51,059 --> 00:31:52,559
large number of requests to only two

899
00:31:52,559 --> 00:31:54,539
domains none of this traffic was

900
00:31:54,539 --> 00:31:57,059
referred right it was a token that was

901
00:31:57,059 --> 00:31:59,460
being used for communication the content

902
00:31:59,460 --> 00:32:02,100
was base64 encoded the time interval

903
00:32:02,100 --> 00:32:04,080
between request was five seconds and we

904
00:32:04,080 --> 00:32:05,640
can't see it probably from Far Behind

905
00:32:05,640 --> 00:32:07,620
the time interval is five seconds with

906
00:32:07,620 --> 00:32:09,799
two second standard deviation

907
00:32:09,799 --> 00:32:12,120
there was communication with unusual

908
00:32:12,120 --> 00:32:14,220
repositories here and you can see that

909
00:32:14,220 --> 00:32:16,799
the you know reached out to a vast

910
00:32:16,799 --> 00:32:19,440
variety of these uh Cloud repos and it

911
00:32:19,440 --> 00:32:21,659
was actually uh also using an unusual

912
00:32:21,659 --> 00:32:24,240
username to talk to these uh Cloud repos

913
00:32:24,240 --> 00:32:25,919
right in this case it's like Insider

914
00:32:25,919 --> 00:32:28,799
threat 648 or something right and it's

915
00:32:28,799 --> 00:32:31,320
the same similar set of signals for the

916
00:32:31,320 --> 00:32:33,659
second domain as well

917
00:32:33,659 --> 00:32:35,760
and then we can repeat this process for

918
00:32:35,760 --> 00:32:38,340
slack and C3 as well uh you can see

919
00:32:38,340 --> 00:32:39,899
large number of requests only two

920
00:32:39,899 --> 00:32:42,419
domains in order for Vera token the

921
00:32:42,419 --> 00:32:44,580
content was encrypted and encoded

922
00:32:44,580 --> 00:32:46,620
the time interval is five seconds or two

923
00:32:46,620 --> 00:32:48,779
second deviation there was unusual

924
00:32:48,779 --> 00:32:50,760
usernames that were being used to

925
00:32:50,760 --> 00:32:52,620
communicate out to stock unusual stock

926
00:32:52,620 --> 00:32:54,360
channels so you can see that six Eep

927
00:32:54,360 --> 00:32:57,299
slack channels there as well the hacking

928
00:32:57,299 --> 00:32:58,500
Channel

929
00:32:58,500 --> 00:33:00,779
uh communication with unusual apps

930
00:33:00,779 --> 00:33:03,600
unusual Bots the C3 bot was there and it

931
00:33:03,600 --> 00:33:05,340
reached out to seven known endpoints

932
00:33:05,340 --> 00:33:07,380
associated with Cloud C2 because of this

933
00:33:07,380 --> 00:33:09,480
we flagged this is likely cause YouTube

934
00:33:09,480 --> 00:33:11,640
traffic

935
00:33:11,640 --> 00:33:15,779
awesome so hope that was um

936
00:33:15,779 --> 00:33:18,059
yeah a little bit earlier

937
00:33:18,059 --> 00:33:19,740
um awesome so you know we covered a

938
00:33:19,740 --> 00:33:21,720
whole lot but just going back to the

939
00:33:21,720 --> 00:33:23,159
beginning and just concluding you know

940
00:33:23,159 --> 00:33:24,840
all the points that we hit on we started

941
00:33:24,840 --> 00:33:26,760
by asking what is cloud c2s how that's

942
00:33:26,760 --> 00:33:28,320
command and control that abuses Cloud

943
00:33:28,320 --> 00:33:30,659
apps right and we saw that you know

944
00:33:30,659 --> 00:33:32,399
which apps are abused for cloud C2 we

945
00:33:32,399 --> 00:33:34,140
saw a vast majority of them can be

946
00:33:34,140 --> 00:33:36,240
abused uh we saw how you can simulate

947
00:33:36,240 --> 00:33:38,220
this in your traffic we can use Empire

948
00:33:38,220 --> 00:33:40,980
and C3 in a four-step process to you

949
00:33:40,980 --> 00:33:42,600
know quickly get this set up and test

950
00:33:42,600 --> 00:33:45,000
for cloud C2 and then we went over why

951
00:33:45,000 --> 00:33:46,740
this is hard to detect and it's because

952
00:33:46,740 --> 00:33:48,779
the traffic is going to a valid cloud

953
00:33:48,779 --> 00:33:51,240
provider server and then we talked about

954
00:33:51,240 --> 00:33:53,220
what defenses we can put in place and we

955
00:33:53,220 --> 00:33:55,260
saw that we can use a set of behavior

956
00:33:55,260 --> 00:34:00,260
signals to identify uh Cloud C2 traffic

957
00:34:00,299 --> 00:34:02,220
awesome so I'll be happy to take

958
00:34:02,220 --> 00:34:04,320
questions in just a second but in case I

959
00:34:04,320 --> 00:34:06,000
don't get to it or you'd like to stay

960
00:34:06,000 --> 00:34:08,820
connected my Twitter handles at dog mulu

961
00:34:08,820 --> 00:34:11,219
my LinkedIn is demo geta and we'll have

962
00:34:11,219 --> 00:34:12,960
a bunch of updates on this and future

963
00:34:12,960 --> 00:34:14,940
Cloud application research on our blog

964
00:34:14,940 --> 00:34:17,580
so please do give that a follow

965
00:34:17,580 --> 00:34:19,918
um outside of that I'll be happy to

966
00:34:19,918 --> 00:34:23,960
take any questions if anybody has them

967
00:34:30,840 --> 00:34:33,839
[Applause]

968
00:34:33,839 --> 00:34:37,080
hi in terms of Frameworks and detection

969
00:34:37,080 --> 00:34:40,560
uh environments are there any open

970
00:34:40,560 --> 00:34:42,239
source or is this all proprietary

971
00:34:42,239 --> 00:34:46,520
rule-based Frameworks around

972
00:34:47,820 --> 00:34:50,040
no detection

973
00:34:50,040 --> 00:34:51,060
so

974
00:34:51,060 --> 00:34:52,800
we weren't many could you use the

975
00:34:52,800 --> 00:34:55,440
microphone again sorry microphone oh

976
00:34:55,440 --> 00:34:56,580
sorry

977
00:34:56,580 --> 00:34:58,440
so so the question if I understood it

978
00:34:58,440 --> 00:35:00,060
correctly is for the detection aspect

979
00:35:00,060 --> 00:35:02,520
are there any plans of or open sourcing

980
00:35:02,520 --> 00:35:04,140
or do we are there any available open

981
00:35:04,140 --> 00:35:06,780
source tools for this so we weren't

982
00:35:06,780 --> 00:35:09,240
actually planning on it but we've gotten

983
00:35:09,240 --> 00:35:10,859
that question so much that's making me

984
00:35:10,859 --> 00:35:12,540
wonder if I should go back and you know

985
00:35:12,540 --> 00:35:14,400
clean this up and release this so that

986
00:35:14,400 --> 00:35:16,859
people have access to it so yeah maybe

987
00:35:16,859 --> 00:35:20,480
maybe I will yeah great question

988
00:35:20,480 --> 00:35:22,859
hey uh thank you that was really

989
00:35:22,859 --> 00:35:24,240
interesting

990
00:35:24,240 --> 00:35:26,040
um where are you sorry

991
00:35:26,040 --> 00:35:28,740
there you are okay

992
00:35:28,740 --> 00:35:30,119
um

993
00:35:30,119 --> 00:35:32,220
I guess whose problem do you think this

994
00:35:32,220 --> 00:35:35,400
is for example for should slack be

995
00:35:35,400 --> 00:35:37,260
scanning their customers and go oh we

996
00:35:37,260 --> 00:35:39,180
think you're using us to do party too or

997
00:35:39,180 --> 00:35:41,220
do you think they should step back and

998
00:35:41,220 --> 00:35:43,200
say this isn't our responsibility yeah

999
00:35:43,200 --> 00:35:44,940
that's that's a great question I think

1000
00:35:44,940 --> 00:35:47,640
that's probably uh the first question I

1001
00:35:47,640 --> 00:35:49,260
got from my research team when I brought

1002
00:35:49,260 --> 00:35:51,060
this up with them so

1003
00:35:51,060 --> 00:35:53,460
um yes it's it's definitely both

1004
00:35:53,460 --> 00:35:55,200
people's responsibility and I see that

1005
00:35:55,200 --> 00:35:57,000
because the cloud providers are actually

1006
00:35:57,000 --> 00:35:58,920
doing you know their best to kind of

1007
00:35:58,920 --> 00:36:02,280
detect this so um f-secure the team that

1008
00:36:02,280 --> 00:36:04,020
wrote C3 they actually wrote A Blog

1009
00:36:04,020 --> 00:36:06,359
about how Microsoft is making it harder

1010
00:36:06,359 --> 00:36:09,240
for them to abuse these uh these apps

1011
00:36:09,240 --> 00:36:10,920
and that's because they're kind of being

1012
00:36:10,920 --> 00:36:12,780
proactive but if you take a look at it

1013
00:36:12,780 --> 00:36:15,060
from their side of things it's really

1014
00:36:15,060 --> 00:36:17,520
just what they see is these files they

1015
00:36:17,520 --> 00:36:20,400
didn't uploaded and downloaded so they

1016
00:36:20,400 --> 00:36:23,040
can't really tell what the content is or

1017
00:36:23,040 --> 00:36:25,079
if it's being malicious in any way right

1018
00:36:25,079 --> 00:36:27,180
it's only when someone reports it they

1019
00:36:27,180 --> 00:36:29,040
can be proactive and take it down or

1020
00:36:29,040 --> 00:36:31,500
reactive and take it down right so they

1021
00:36:31,500 --> 00:36:33,660
try to Art they try to do their part but

1022
00:36:33,660 --> 00:36:35,339
at some point you have to realize okay

1023
00:36:35,339 --> 00:36:37,800
this is something I need to do I need to

1024
00:36:37,800 --> 00:36:39,420
be better at on mine as well as a

1025
00:36:39,420 --> 00:36:41,040
Defender so I would say it's kind of

1026
00:36:41,040 --> 00:36:43,640
it's kind of

1027
00:36:46,859 --> 00:36:49,380
okay all right

1028
00:36:49,380 --> 00:36:50,880
um during the course of your research

1029
00:36:50,880 --> 00:36:52,920
did you see any evidence of people

1030
00:36:52,920 --> 00:36:55,740
trying to hide the C2 Communications

1031
00:36:55,740 --> 00:36:58,320
Saints like just by encoding them as

1032
00:36:58,320 --> 00:37:02,000
innocuous chat about the weather or

1033
00:37:02,000 --> 00:37:06,119
yeah so not often but we did see it so

1034
00:37:06,119 --> 00:37:08,520
there was one example where we saw a

1035
00:37:08,520 --> 00:37:11,400
person was abusing YouTube comments to

1036
00:37:11,400 --> 00:37:14,040
send C2 and they were saying oh my

1037
00:37:14,040 --> 00:37:16,079
keyboard doesn't work and then it was

1038
00:37:16,079 --> 00:37:18,480
gibberish after but it was actually

1039
00:37:18,480 --> 00:37:20,579
encoded commands they wanted people to

1040
00:37:20,579 --> 00:37:22,560
execute right so they they kind of get

1041
00:37:22,560 --> 00:37:25,920
crave over the clever with it typically

1042
00:37:25,920 --> 00:37:27,780
um you know especially for a little

1043
00:37:27,780 --> 00:37:29,940
maybe moderately sophisticated not that

1044
00:37:29,940 --> 00:37:31,859
often but if someone really really wants

1045
00:37:31,859 --> 00:37:33,839
to evade that kind of stuff

1046
00:37:33,839 --> 00:37:35,700
um they can you can still use some of

1047
00:37:35,700 --> 00:37:37,920
these signals against them uh in that

1048
00:37:37,920 --> 00:37:40,079
case so I I guess my answer is you do

1049
00:37:40,079 --> 00:37:42,240
see it sometimes but it still works to

1050
00:37:42,240 --> 00:37:43,920
use these signals for the vast majority

1051
00:37:43,920 --> 00:37:47,240
of attacks that we see

1052
00:37:48,140 --> 00:37:50,700
uh thank you very much for the talk

1053
00:37:50,700 --> 00:37:52,680
um one question was when you saw this

1054
00:37:52,680 --> 00:37:55,200
being abused in the wild were was this

1055
00:37:55,200 --> 00:37:57,420
cloudy too often the first initial

1056
00:37:57,420 --> 00:37:59,760
access or were they trying with a

1057
00:37:59,760 --> 00:38:01,920
traditional C2 for example to go to get

1058
00:38:01,920 --> 00:38:03,540
the initial access and then dump the

1059
00:38:03,540 --> 00:38:04,800
processes and see what's on the box

1060
00:38:04,800 --> 00:38:06,960
before they tried to blend in with that

1061
00:38:06,960 --> 00:38:08,760
traffic or do they do that kind of front

1062
00:38:08,760 --> 00:38:10,380
heavy on the Recon before they even

1063
00:38:10,380 --> 00:38:12,119
attempt to get there

1064
00:38:12,119 --> 00:38:14,520
so we've seen a little bit of both I

1065
00:38:14,520 --> 00:38:15,599
would say

1066
00:38:15,599 --> 00:38:16,500
um

1067
00:38:16,500 --> 00:38:19,020
I'm trying to think how is but typically

1068
00:38:19,020 --> 00:38:21,839
the initial delivery is not uh but we

1069
00:38:21,839 --> 00:38:23,520
see it from like you know a Google drive

1070
00:38:23,520 --> 00:38:25,380
forward or something like that but

1071
00:38:25,380 --> 00:38:27,359
they're still like EDR Solutions and

1072
00:38:27,359 --> 00:38:28,740
traditional approaches to detect that

1073
00:38:28,740 --> 00:38:31,140
but once they've uh set up Cloud C2

1074
00:38:31,140 --> 00:38:32,760
that's when it gets a little bit more

1075
00:38:32,760 --> 00:38:34,800
challenging and that's when we started

1076
00:38:34,800 --> 00:38:37,020
thinking about this the

1077
00:38:37,020 --> 00:38:39,000
initial deployment we haven't really

1078
00:38:39,000 --> 00:38:40,680
looked at too much in depth so I would

1079
00:38:40,680 --> 00:38:43,200
say it's maybe 50 50 but I'll have to go

1080
00:38:43,200 --> 00:38:45,180
back and check just to be sure that's a

1081
00:38:45,180 --> 00:38:46,800
great question by the way

1082
00:38:46,800 --> 00:38:49,680
hi there yeah uh thanks for all really

1083
00:38:49,680 --> 00:38:53,339
interesting uh I want to ask so the the

1084
00:38:53,339 --> 00:38:57,060
whole point of being Cloud that you send

1085
00:38:57,060 --> 00:38:58,800
like the commands through the

1086
00:38:58,800 --> 00:39:01,760
distractions right uh I mean

1087
00:39:01,760 --> 00:39:06,060
for example the slack Channel and where

1088
00:39:06,060 --> 00:39:09,300
is the Empire server for example sitting

1089
00:39:09,300 --> 00:39:11,940
would it be Cloud as well or would be

1090
00:39:11,940 --> 00:39:14,880
like on the attacker's side

1091
00:39:14,880 --> 00:39:17,940
oh um so the the Empire Dropbox

1092
00:39:17,940 --> 00:39:19,619
configuration specifically right the

1093
00:39:19,619 --> 00:39:21,839
Empire would be it would be separate

1094
00:39:21,839 --> 00:39:23,700
right it wouldn't be uh running in the

1095
00:39:23,700 --> 00:39:25,260
cloud just be abusing the cloud sorry

1096
00:39:25,260 --> 00:39:26,880
let me understand your question so here

1097
00:39:26,880 --> 00:39:28,920
you asked um

1098
00:39:28,920 --> 00:39:30,900
with the with the attack setup

1099
00:39:30,900 --> 00:39:33,480
specifically is the Empire listener is

1100
00:39:33,480 --> 00:39:36,180
that running also in the cloud yeah

1101
00:39:36,180 --> 00:39:38,280
um I mean you can run it like on an AWS

1102
00:39:38,280 --> 00:39:41,760
server or something but uh it doesn't

1103
00:39:41,760 --> 00:39:43,200
necessarily have to be in the cloud

1104
00:39:43,200 --> 00:39:45,180
right it just that first interaction

1105
00:39:45,180 --> 00:39:47,460
from the victim side is where you want

1106
00:39:47,460 --> 00:39:49,859
the cloud to be after that you can even

1107
00:39:49,859 --> 00:39:51,420
change that with using like traditional

1108
00:39:51,420 --> 00:39:53,460
C2 which attackers generally do is

1109
00:39:53,460 --> 00:39:55,200
they'll use like uh you know their

1110
00:39:55,200 --> 00:39:57,300
normal server and then at the front of

1111
00:39:57,300 --> 00:39:58,920
that they'll have like a Dropbox account

1112
00:39:58,920 --> 00:40:00,839
or slack account so they are like

1113
00:40:00,839 --> 00:40:02,880
multiple stages before it gets to them

1114
00:40:02,880 --> 00:40:07,079
just to be that much more resilient yeah

1115
00:40:07,079 --> 00:40:10,200
thank you do you have any more questions

1116
00:40:10,200 --> 00:40:13,220
one more back

1117
00:40:15,900 --> 00:40:17,760
and thank you for the talk uh you are

1118
00:40:17,760 --> 00:40:19,500
talking about

1119
00:40:19,500 --> 00:40:22,320
um the communications between being

1120
00:40:22,320 --> 00:40:24,660
encrypted um did you look into what sort

1121
00:40:24,660 --> 00:40:26,040
of encryption scheme they were using we

1122
00:40:26,040 --> 00:40:27,500
were using anything particularly strong

1123
00:40:27,500 --> 00:40:30,599
yeah so we did not we just tried to see

1124
00:40:30,599 --> 00:40:32,400
if the content was encrypted or not but

1125
00:40:32,400 --> 00:40:33,780
that is an area we're trying to look

1126
00:40:33,780 --> 00:40:36,480
into a little bit more so the next

1127
00:40:36,480 --> 00:40:38,700
phase of this that we're doing just like

1128
00:40:38,700 --> 00:40:40,200
a slight preview for people is

1129
00:40:40,200 --> 00:40:42,780
exfiltration uh and with that we're

1130
00:40:42,780 --> 00:40:44,880
doing a very deep dive into like how the

1131
00:40:44,880 --> 00:40:46,859
content is encrypted you know what kind

1132
00:40:46,859 --> 00:40:48,839
of encryption works if maybe encryption

1133
00:40:48,839 --> 00:40:50,880
and coding and then another level of

1134
00:40:50,880 --> 00:40:52,140
encryption or something like that would

1135
00:40:52,140 --> 00:40:54,180
work better that kind of stuff so uh

1136
00:40:54,180 --> 00:40:55,920
right now we just saw the content was

1137
00:40:55,920 --> 00:40:59,240
encrypted or not yeah

1138
00:40:59,280 --> 00:41:01,800
great questions

1139
00:41:01,800 --> 00:41:04,079
is there more questions thank you very

1140
00:41:04,079 --> 00:41:05,820
much awesome I'll be hovering around so

1141
00:41:05,820 --> 00:41:08,180
if anybody has any more I'd be happy to

1142
00:41:08,180 --> 00:41:11,299
thank you

