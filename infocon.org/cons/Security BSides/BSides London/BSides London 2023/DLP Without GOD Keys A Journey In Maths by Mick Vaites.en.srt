1
00:00:02,899 --> 00:00:05,580
okay who am I

2
00:00:05,580 --> 00:00:07,919
I'm not going to read it other than to

3
00:00:07,919 --> 00:00:09,960
say I love the I'm fascinated by the

4
00:00:09,960 --> 00:00:13,139
predictability of humans and there's a

5
00:00:13,139 --> 00:00:14,580
bit of a story in that aligned to

6
00:00:14,580 --> 00:00:15,660
mathematics

7
00:00:15,660 --> 00:00:17,699
[Music]

8
00:00:17,699 --> 00:00:19,500
also I've been I've been advised for the

9
00:00:19,500 --> 00:00:21,240
health warning mark

10
00:00:21,240 --> 00:00:23,640
uh about there was two formulas but

11
00:00:23,640 --> 00:00:25,619
there's also a lot of old stuff so this

12
00:00:25,619 --> 00:00:26,880
is a lot of there's a lot of old stuff

13
00:00:26,880 --> 00:00:29,220
in this one

14
00:00:29,220 --> 00:00:32,098
first things first bit of a a bit of a

15
00:00:32,098 --> 00:00:35,280
recap on what data exfiltration is it is

16
00:00:35,280 --> 00:00:38,100
where a document is being leaked from a

17
00:00:38,100 --> 00:00:39,180
place

18
00:00:39,180 --> 00:00:42,180
to another place possibly through a uh

19
00:00:42,180 --> 00:00:44,280
through a network cage device and quite

20
00:00:44,280 --> 00:00:47,040
often documents that you you may want to

21
00:00:47,040 --> 00:00:49,680
have some control over

22
00:00:49,680 --> 00:00:52,039
attacks alteration

23
00:00:52,039 --> 00:00:55,440
is is the transmission of the same

24
00:00:55,440 --> 00:00:58,199
documents but actually you're not

25
00:00:58,199 --> 00:01:00,800
allowed to so the no entry sign for FTP

26
00:01:00,800 --> 00:01:03,780
eventually sign for FTP says you can't

27
00:01:03,780 --> 00:01:05,459
actually transmit it but there are other

28
00:01:05,459 --> 00:01:08,340
mechanisms and one of them being DNS

29
00:01:08,340 --> 00:01:13,140
it's iodine which is uh TCP over DNS so

30
00:01:13,140 --> 00:01:16,260
far transfer protocol over TCP over DNS

31
00:01:16,260 --> 00:01:21,299
and in its simplest form a DNS lookup is

32
00:01:21,299 --> 00:01:24,299
made so I've got a base 36 encoded

33
00:01:24,299 --> 00:01:25,920
message

34
00:01:25,920 --> 00:01:27,720
um that's a domain name that no one will

35
00:01:27,720 --> 00:01:29,280
recognize

36
00:01:29,280 --> 00:01:30,780
um to transmit a message on the outside

37
00:01:30,780 --> 00:01:33,299
and it's to a controlled DNS server and

38
00:01:33,299 --> 00:01:34,799
the responses normally come back through

39
00:01:34,799 --> 00:01:37,079
text encoded Fields so that tends to be

40
00:01:37,079 --> 00:01:39,420
how it's done

41
00:01:39,420 --> 00:01:42,240
data leakage protection is normally

42
00:01:42,240 --> 00:01:43,979
through some kind of proxy

43
00:01:43,979 --> 00:01:46,920
in that particular case

44
00:01:46,920 --> 00:01:49,320
um data is deposited onto the inspection

45
00:01:49,320 --> 00:01:51,600
proxy quite often if there's encryption

46
00:01:51,600 --> 00:01:53,479
involved the inspection proxy will then

47
00:01:53,479 --> 00:01:56,520
represent the uh the individual that's

48
00:01:56,520 --> 00:01:58,860
that it's uh sorry the individual that

49
00:01:58,860 --> 00:02:00,659
is transmitting the data through what

50
00:02:00,659 --> 00:02:02,399
I've refer to as a god key there's a

51
00:02:02,399 --> 00:02:03,960
number of problems with this one of them

52
00:02:03,960 --> 00:02:06,899
is confidentiality it breaks all kinds

53
00:02:06,899 --> 00:02:08,758
of protocols and the other one is it

54
00:02:08,758 --> 00:02:10,500
really messes with any form of

55
00:02:10,500 --> 00:02:12,060
authentication that uses certificates

56
00:02:12,060 --> 00:02:13,680
because effectively you the certificates

57
00:02:13,680 --> 00:02:14,879
aren't being passed through they're

58
00:02:14,879 --> 00:02:16,440
always around that but impacts with that

59
00:02:16,440 --> 00:02:18,599
causes a bit of a problem

60
00:02:18,599 --> 00:02:23,119
so my question was is there another way

61
00:02:26,459 --> 00:02:28,860
so first point of call and that is

62
00:02:28,860 --> 00:02:31,680
deliberately sort of obscured that is a

63
00:02:31,680 --> 00:02:33,840
white shark dump of a conversation

64
00:02:33,840 --> 00:02:36,239
between my PC

65
00:02:36,239 --> 00:02:39,180
um and the BBC website BBC website and

66
00:02:39,180 --> 00:02:40,500
it's basically a background push

67
00:02:40,500 --> 00:02:42,060
notification

68
00:02:42,060 --> 00:02:45,000
um you can see you've got things

69
00:02:45,000 --> 00:02:46,560
um in in this particular case I've set

70
00:02:46,560 --> 00:02:48,440
the timing to be

71
00:02:48,440 --> 00:02:51,120
microseconds the into packets arrival

72
00:02:51,120 --> 00:02:53,280
time because it's a good one to work

73
00:02:53,280 --> 00:02:54,300
with

74
00:02:54,300 --> 00:02:55,319
um you've also got Source IP address

75
00:02:55,319 --> 00:02:57,239
that's a nice job here destination IP

76
00:02:57,239 --> 00:02:59,700
address and then you've got packet links

77
00:02:59,700 --> 00:03:01,379
um there's a lot more of it and I assure

78
00:03:01,379 --> 00:03:02,640
you it starts to get into a bit of a

79
00:03:02,640 --> 00:03:04,620
drum beat so there is a rhythm there but

80
00:03:04,620 --> 00:03:06,300
the further intense purposes it doesn't

81
00:03:06,300 --> 00:03:07,680
appear on the face of it to be a lot of

82
00:03:07,680 --> 00:03:10,160
useful information

83
00:03:11,159 --> 00:03:12,659
um I then introduced I have to stare at

84
00:03:12,659 --> 00:03:13,800
this because I can remember this guy's

85
00:03:13,800 --> 00:03:16,440
name Stefan birash

86
00:03:16,440 --> 00:03:18,300
who produced an absolutely incredible

87
00:03:18,300 --> 00:03:19,980
talk I did say there was some old stuff

88
00:03:19,980 --> 00:03:24,720
uh back in 2011 at the Berlin uh

89
00:03:24,720 --> 00:03:26,879
chaos conference

90
00:03:26,879 --> 00:03:28,019
um I've always wanted to go but I've got

91
00:03:28,019 --> 00:03:29,400
kids so it's always a problem because it

92
00:03:29,400 --> 00:03:31,319
occurs between Christmas and New Year

93
00:03:31,319 --> 00:03:33,060
which is not a good time anyway

94
00:03:33,060 --> 00:03:35,340
basically what he said was

95
00:03:35,340 --> 00:03:36,900
um the human ear is an incredible thing

96
00:03:36,900 --> 00:03:38,760
because it effectively performs Fourier

97
00:03:38,760 --> 00:03:40,680
transforms that's how we recognize

98
00:03:40,680 --> 00:03:42,239
things it's a really really cool

99
00:03:42,239 --> 00:03:43,739
approach

100
00:03:43,739 --> 00:03:46,260
um and what he did was he's got a um

101
00:03:46,260 --> 00:03:47,519
he's got a talk

102
00:03:47,519 --> 00:03:49,739
that starts off with the pro with the

103
00:03:49,739 --> 00:03:51,420
premise that uh you should be thinking

104
00:03:51,420 --> 00:03:53,340
out somewhat outside the box

105
00:03:53,340 --> 00:03:54,780
um and what he's looking to do is to

106
00:03:54,780 --> 00:03:58,200
detect a specific sequence of of of a

107
00:03:58,200 --> 00:04:00,000
particular message even though it's

108
00:04:00,000 --> 00:04:02,159
actually encrypted in a Skype packet and

109
00:04:02,159 --> 00:04:03,720
he does it either by looking at timing

110
00:04:03,720 --> 00:04:06,659
so he looks at effectively the into

111
00:04:06,659 --> 00:04:09,180
arrival time of a packet

112
00:04:09,180 --> 00:04:11,159
um and he also includes the the packet

113
00:04:11,159 --> 00:04:13,860
sizes there are ways to defeat it and

114
00:04:13,860 --> 00:04:15,599
there's lots of encryption systems where

115
00:04:15,599 --> 00:04:17,459
you actually pad the packets out but for

116
00:04:17,459 --> 00:04:19,500
all intents purposes Skype doesn't do

117
00:04:19,500 --> 00:04:20,430
that

118
00:04:20,430 --> 00:04:21,740
[Music]

119
00:04:21,740 --> 00:04:24,419
what's also quite interesting one of his

120
00:04:24,419 --> 00:04:25,979
research students and again I'm going to

121
00:04:25,979 --> 00:04:27,180
look at this because I can never imagine

122
00:04:27,180 --> 00:04:30,600
pronounce it pikatito actually did a

123
00:04:30,600 --> 00:04:32,340
piece of research

124
00:04:32,340 --> 00:04:34,500
um one of the problems with the approach

125
00:04:34,500 --> 00:04:35,759
that

126
00:04:35,759 --> 00:04:37,560
um was identified was you actually need

127
00:04:37,560 --> 00:04:40,320
context you need the sentence

128
00:04:40,320 --> 00:04:42,120
um so what they've done is they aligned

129
00:04:42,120 --> 00:04:44,160
that to looking at file transfer

130
00:04:44,160 --> 00:04:46,740
protocols in this particular case and to

131
00:04:46,740 --> 00:04:48,960
the Keen Eye you'll notice that the

132
00:04:48,960 --> 00:04:51,720
graph on the left which is effectively

133
00:04:51,720 --> 00:04:54,780
the percentage of packets and the pack

134
00:04:54,780 --> 00:04:56,880
against the packet sizes and what you'll

135
00:04:56,880 --> 00:04:58,020
notice if you look at the graph on the

136
00:04:58,020 --> 00:04:59,220
left and the right they're very similar

137
00:04:59,220 --> 00:05:01,740
and for the Keen Eye there's roughly 100

138
00:05:01,740 --> 00:05:03,240
bytes between the one on the left and

139
00:05:03,240 --> 00:05:05,160
one on the right which happens to be the

140
00:05:05,160 --> 00:05:06,720
encryption overhead it's the overhead

141
00:05:06,720 --> 00:05:09,840
encryption packet but the point is that

142
00:05:09,840 --> 00:05:12,900
even though that is a ESP encrypted the

143
00:05:12,900 --> 00:05:14,699
actual over the envelope looks the same

144
00:05:14,699 --> 00:05:16,740
which is which is quite an interesting

145
00:05:16,740 --> 00:05:19,139
characteristic

146
00:05:19,139 --> 00:05:20,639
at this point I'm bringing you I

147
00:05:20,639 --> 00:05:22,380
introduce

148
00:05:22,380 --> 00:05:24,300
um a bit of a

149
00:05:24,300 --> 00:05:25,800
I'm not going to say quite say a hero of

150
00:05:25,800 --> 00:05:27,180
mine but

151
00:05:27,180 --> 00:05:29,699
um Cloud Shannon father of information

152
00:05:29,699 --> 00:05:30,960
Theory

153
00:05:30,960 --> 00:05:32,639
um he's particularly famous for juggling

154
00:05:32,639 --> 00:05:34,380
on a unicycle

155
00:05:34,380 --> 00:05:38,400
um but he was also a researcher and one

156
00:05:38,400 --> 00:05:39,720
of the chief Engineers over at

157
00:05:39,720 --> 00:05:42,479
laboratories and he's the responsibility

158
00:05:42,479 --> 00:05:45,419
for the notes and ones so he actually he

159
00:05:45,419 --> 00:05:47,460
effectively turned around and gave

160
00:05:47,460 --> 00:05:49,860
information a quantity he said there is

161
00:05:49,860 --> 00:05:51,300
a quantitative information in that and

162
00:05:51,300 --> 00:05:53,039
here's a way of doing it and it was

163
00:05:53,039 --> 00:05:56,460
doing it in bits so this is what I said

164
00:05:56,460 --> 00:05:58,020
um so

165
00:05:58,020 --> 00:06:00,240
if you consider files are typically a

166
00:06:00,240 --> 00:06:01,860
byte in size

167
00:06:01,860 --> 00:06:04,500
there are eight bits of information in

168
00:06:04,500 --> 00:06:05,940
that file there are there is the

169
00:06:05,940 --> 00:06:07,080
potential for eight bits of information

170
00:06:07,080 --> 00:06:08,340
in that file

171
00:06:08,340 --> 00:06:10,080
so one of the things that he was looking

172
00:06:10,080 --> 00:06:12,060
at was how could I possibly transmit

173
00:06:12,060 --> 00:06:14,400
this efficiently well if I allow for all

174
00:06:14,400 --> 00:06:16,320
files to be of eight bits of entropy

175
00:06:16,320 --> 00:06:17,639
that isn't going to take advantage of

176
00:06:17,639 --> 00:06:19,259
any efficiencies that could be achieved

177
00:06:19,259 --> 00:06:21,360
and he created a concept or a

178
00:06:21,360 --> 00:06:23,759
calculation entropy there's the first

179
00:06:23,759 --> 00:06:28,199
Formula and entropy is effectively the

180
00:06:28,199 --> 00:06:29,419
um the average

181
00:06:29,419 --> 00:06:31,500
utilization of each of the characters

182
00:06:31,500 --> 00:06:33,240
within the file

183
00:06:33,240 --> 00:06:35,880
to make it slightly easier to to get

184
00:06:35,880 --> 00:06:37,319
your head around this

185
00:06:37,319 --> 00:06:39,060
what I've done is I've created a couple

186
00:06:39,060 --> 00:06:42,720
of bar charts so first and foremost

187
00:06:42,720 --> 00:06:43,979
um there's a text file which is

188
00:06:43,979 --> 00:06:46,020
literally the characters not tonight and

189
00:06:46,020 --> 00:06:49,139
the the the A to Z

190
00:06:49,139 --> 00:06:50,220
um in the order they appear on your

191
00:06:50,220 --> 00:06:51,660
keyboard

192
00:06:51,660 --> 00:06:55,759
um in this particular case uh there are

193
00:06:55,759 --> 00:06:59,100
5.2 bits of entropy what that means is

194
00:06:59,100 --> 00:07:02,400
that to represent those 37 characters

195
00:07:02,400 --> 00:07:04,560
and I say 37 because we've also got the

196
00:07:04,560 --> 00:07:07,199
carriage return on the end 36 plus the

197
00:07:07,199 --> 00:07:08,940
the carriage return to represent those

198
00:07:08,940 --> 00:07:11,639
we need roughly 5.2 bits of entropy to

199
00:07:11,639 --> 00:07:14,039
achieve that so 2 to the power L 5.2

200
00:07:14,039 --> 00:07:15,900
comes to roughly 37 it's not quite but

201
00:07:15,900 --> 00:07:17,340
it's thereabouts

202
00:07:17,340 --> 00:07:18,479
um the other thing I want to draw

203
00:07:18,479 --> 00:07:19,680
attention to which I'll come back to

204
00:07:19,680 --> 00:07:22,680
later in the talk is the efficiency

205
00:07:22,680 --> 00:07:25,979
um and in Shannon speak if you will each

206
00:07:25,979 --> 00:07:27,180
of those characters is what they're

207
00:07:27,180 --> 00:07:28,620
refer to as a symbol so they're

208
00:07:28,620 --> 00:07:30,300
characters but he sees them the symbols

209
00:07:30,300 --> 00:07:31,680
and you'll hear me talk about a little

210
00:07:31,680 --> 00:07:33,419
bit about the efficiencies of symbol

211
00:07:33,419 --> 00:07:35,099
utilization which is what we've got

212
00:07:35,099 --> 00:07:37,080
there in that particular case because of

213
00:07:37,080 --> 00:07:39,060
the way that I have used them in that in

214
00:07:39,060 --> 00:07:41,220
there we're seeing an efficiency of 65

215
00:07:41,220 --> 00:07:43,560
so we are not making good good efficient

216
00:07:43,560 --> 00:07:46,199
use of that symbol set

217
00:07:46,199 --> 00:07:48,240
we can get slightly more efficient if I

218
00:07:48,240 --> 00:07:50,160
actually put all the way around my

219
00:07:50,160 --> 00:07:51,479
keyboard so literally I've gone all the

220
00:07:51,479 --> 00:07:52,380
way around my keyboard and all the

221
00:07:52,380 --> 00:07:54,000
printable characters and in that

222
00:07:54,000 --> 00:07:56,280
particular case you'll see over on the

223
00:07:56,280 --> 00:07:58,020
left hand side of the bar chart you'll

224
00:07:58,020 --> 00:07:59,520
see that the entropy has been pushed up

225
00:07:59,520 --> 00:08:02,099
6.4 or thereabouts but also the

226
00:08:02,099 --> 00:08:04,020
efficiency has gone to 80 percent

227
00:08:04,020 --> 00:08:06,240
because we're making better use of the

228
00:08:06,240 --> 00:08:07,440
character set that we've been given or

229
00:08:07,440 --> 00:08:09,960
the symbols we've been given and again

230
00:08:09,960 --> 00:08:11,819
what will come up when you've got a

231
00:08:11,819 --> 00:08:14,340
couple of other graphs just to show it

232
00:08:14,340 --> 00:08:17,580
is also possible to to to by plotting a

233
00:08:17,580 --> 00:08:19,440
file or the the order of the symbols in

234
00:08:19,440 --> 00:08:21,599
a file it can be possible to detect the

235
00:08:21,599 --> 00:08:23,160
type of file that you're looking at just

236
00:08:23,160 --> 00:08:25,080
by looking at effectively this this uh

237
00:08:25,080 --> 00:08:27,660
this distribution

238
00:08:27,660 --> 00:08:31,979
this one here is a is an audio file

239
00:08:31,979 --> 00:08:34,080
um linking back to audio well the reason

240
00:08:34,080 --> 00:08:37,140
it looks this way is because effectively

241
00:08:37,140 --> 00:08:38,640
that's what that's how audio looks like

242
00:08:38,640 --> 00:08:40,260
because you get pluses and minuses so

243
00:08:40,260 --> 00:08:41,940
that's why that looks that way there's a

244
00:08:41,940 --> 00:08:43,140
little bit more data in there it's

245
00:08:43,140 --> 00:08:46,500
slightly more efficient 74.96 and we're

246
00:08:46,500 --> 00:08:48,000
seeing that in this particular case

247
00:08:48,000 --> 00:08:52,279
there's nearly six bits of entropy 5.99

248
00:08:53,040 --> 00:08:56,940
this is a 24-bit graphic tile and again

249
00:08:56,940 --> 00:08:59,459
because it is encoded it is somewhat

250
00:08:59,459 --> 00:09:01,760
more efficient

251
00:09:01,760 --> 00:09:04,800
97.97.9 and this is pushing the envelope

252
00:09:04,800 --> 00:09:06,300
so again we're getting closer and closer

253
00:09:06,300 --> 00:09:07,860
to these eight bits so in this

254
00:09:07,860 --> 00:09:09,019
particular case

255
00:09:09,019 --> 00:09:11,820
it's 7.8 I wasn't trying to look over

256
00:09:11,820 --> 00:09:14,060
there anyway

257
00:09:14,940 --> 00:09:17,480
a compressed file is by definition

258
00:09:17,480 --> 00:09:19,860
efficient you take out all of the

259
00:09:19,860 --> 00:09:21,779
duplications therefore we can see

260
00:09:21,779 --> 00:09:25,140
efficiency running at 99.99 and the

261
00:09:25,140 --> 00:09:26,580
entropy is getting really really close

262
00:09:26,580 --> 00:09:29,880
and this time it's 7.993 it's getting

263
00:09:29,880 --> 00:09:31,920
really close and

264
00:09:31,920 --> 00:09:33,899
if I then look at an encrypted file no

265
00:09:33,899 --> 00:09:35,399
surprises that that's getting slightly

266
00:09:35,399 --> 00:09:38,160
further but it is not much more

267
00:09:38,160 --> 00:09:41,760
so how can we use this

268
00:09:41,760 --> 00:09:44,519
how does Shannon use this

269
00:09:44,519 --> 00:09:45,120
um

270
00:09:45,120 --> 00:09:47,220
Morse code but it's actually it's

271
00:09:47,220 --> 00:09:48,360
International Morse code International

272
00:09:48,360 --> 00:09:49,500
which is aligned to International

273
00:09:49,500 --> 00:09:50,640
English

274
00:09:50,640 --> 00:09:52,800
it is an encoding system that is

275
00:09:52,800 --> 00:09:54,180
specifically designed to carry the

276
00:09:54,180 --> 00:09:57,360
English language that's why the E and

277
00:09:57,360 --> 00:09:59,459
the T which are the most frequently used

278
00:09:59,459 --> 00:10:00,720
characters

279
00:10:00,720 --> 00:10:02,580
appear with the select with the smallest

280
00:10:02,580 --> 00:10:04,200
amount of data to to effectively deliver

281
00:10:04,200 --> 00:10:05,880
them smallest amount of requirements in

282
00:10:05,880 --> 00:10:07,680
the encoding system deliver them whereas

283
00:10:07,680 --> 00:10:11,580
z y x and H I think somewhere in there

284
00:10:11,580 --> 00:10:13,440
as well and they're all four which

285
00:10:13,440 --> 00:10:14,700
affects me means that they take more

286
00:10:14,700 --> 00:10:17,040
effort to encode them so

287
00:10:17,040 --> 00:10:19,200
going back to the inventory question if

288
00:10:19,200 --> 00:10:20,519
I were to put another language through

289
00:10:20,519 --> 00:10:22,500
that had a different uh different

290
00:10:22,500 --> 00:10:24,480
structure then effectively would we

291
00:10:24,480 --> 00:10:25,920
nowhere near as efficient and we'd need

292
00:10:25,920 --> 00:10:27,180
a different Morse code to make it more

293
00:10:27,180 --> 00:10:29,540
efficient

294
00:10:32,060 --> 00:10:34,500
mathematicians too

295
00:10:34,500 --> 00:10:37,800
um these guys are effectively that's the

296
00:10:37,800 --> 00:10:39,540
reason why not say I saw her about this

297
00:10:39,540 --> 00:10:41,540
um Colby and libler

298
00:10:41,540 --> 00:10:45,420
provided a mechanism to look at the

299
00:10:45,420 --> 00:10:47,880
efficiency of based on an encoding

300
00:10:47,880 --> 00:10:50,700
system what they did was they said that

301
00:10:50,700 --> 00:10:52,140
if you have an encoding system that is

302
00:10:52,140 --> 00:10:54,720
optimized for a particular particular

303
00:10:54,720 --> 00:10:56,880
data transmission how much more or less

304
00:10:56,880 --> 00:10:58,680
efficiently would that encoding system

305
00:10:58,680 --> 00:11:01,079
be used on another date not another

306
00:11:01,079 --> 00:11:02,940
stream of data

307
00:11:02,940 --> 00:11:05,700
um so effectively data stream Q what

308
00:11:05,700 --> 00:11:07,320
we're saying here is that the

309
00:11:07,320 --> 00:11:10,860
probability of P given Q it's it's it'll

310
00:11:10,860 --> 00:11:12,480
provide you a mechanism to compare the

311
00:11:12,480 --> 00:11:14,040
two

312
00:11:14,040 --> 00:11:16,380
um they're also founder members of um

313
00:11:16,380 --> 00:11:17,760
I'm trying to know what the paper was

314
00:11:17,760 --> 00:11:20,220
called so they they also were fan and

315
00:11:20,220 --> 00:11:22,380
scientists at the NSA

316
00:11:22,380 --> 00:11:23,940
um where is it where at the NSA they

317
00:11:23,940 --> 00:11:25,440
were looking for alternative mechanisms

318
00:11:25,440 --> 00:11:27,420
for actually stripping out or

319
00:11:27,420 --> 00:11:29,160
identifying

320
00:11:29,160 --> 00:11:30,899
um crypto looking for keys and other

321
00:11:30,899 --> 00:11:31,980
things

322
00:11:31,980 --> 00:11:34,260
um with within uh with it within data

323
00:11:34,260 --> 00:11:36,540
streams

324
00:11:36,540 --> 00:11:38,940
to illustrate my point and I hope this

325
00:11:38,940 --> 00:11:41,279
comes out what I've done is I've gone

326
00:11:41,279 --> 00:11:43,260
back to the first two files

327
00:11:43,260 --> 00:11:46,920
and ask for the cobit libler Divergence

328
00:11:46,920 --> 00:11:50,040
which is effectively how much how more

329
00:11:50,040 --> 00:11:52,620
efficient would the encoding system be

330
00:11:52,620 --> 00:11:54,360
from one to another and what we're

331
00:11:54,360 --> 00:11:55,800
saying here is and again it was no

332
00:11:55,800 --> 00:11:57,839
surprise it was it became obvious from

333
00:11:57,839 --> 00:11:59,640
uh from looking at the first two slides

334
00:11:59,640 --> 00:12:02,579
that the additional entropy or the

335
00:12:02,579 --> 00:12:05,519
inefficiency is 1.185 so what we're

336
00:12:05,519 --> 00:12:07,980
saying here is that if you look at the

337
00:12:07,980 --> 00:12:09,660
amount of data the amount of entropy

338
00:12:09,660 --> 00:12:11,160
that was required to transmit the first

339
00:12:11,160 --> 00:12:13,560
file and then use an encoding system

340
00:12:13,560 --> 00:12:16,079
that was optimized for that how much how

341
00:12:16,079 --> 00:12:17,579
much of an overhead how inefficient

342
00:12:17,579 --> 00:12:19,620
would it be and that's that effectively

343
00:12:19,620 --> 00:12:21,000
provides us a calculation to deliver

344
00:12:21,000 --> 00:12:21,899
that

345
00:12:21,899 --> 00:12:24,300
one of the problems with Copic libraries

346
00:12:24,300 --> 00:12:27,540
it's not reversible so just because it

347
00:12:27,540 --> 00:12:31,380
would take an extra 1.185 186 bits to

348
00:12:31,380 --> 00:12:33,420
transmit a smaller file over a more

349
00:12:33,420 --> 00:12:35,700
complex file doesn't necessarily mean it

350
00:12:35,700 --> 00:12:39,120
is minus 1.185 and I think if you if you

351
00:12:39,120 --> 00:12:40,800
reverse the calculation it's it's about

352
00:12:40,800 --> 00:12:42,959
half a half a bit of entropy into the

353
00:12:42,959 --> 00:12:44,820
reverse applies because this is all

354
00:12:44,820 --> 00:12:47,279
about the encoding it's about the

355
00:12:47,279 --> 00:12:48,779
efficiency of the character set within

356
00:12:48,779 --> 00:12:52,459
the encoding so it's not quite the same

357
00:12:55,260 --> 00:12:57,779
okay so

358
00:12:57,779 --> 00:13:01,079
going back to my

359
00:13:01,079 --> 00:13:02,459
paper I didn't mention at the beginning

360
00:13:02,459 --> 00:13:04,620
oops sorry

361
00:13:04,620 --> 00:13:05,880
um

362
00:13:05,880 --> 00:13:07,440
the fourth sorry the fourth

363
00:13:07,440 --> 00:13:10,079
mathematician I want to introduce a chap

364
00:13:10,079 --> 00:13:13,019
called Uh George as if who produces

365
00:13:13,019 --> 00:13:17,519
ifscilla effectively he identified that

366
00:13:17,519 --> 00:13:20,700
human beings typically if you were if

367
00:13:20,700 --> 00:13:22,740
you were to analyze

368
00:13:22,740 --> 00:13:23,459
um

369
00:13:23,459 --> 00:13:26,339
letters words that a human being has

370
00:13:26,339 --> 00:13:29,040
generated you would find that the most

371
00:13:29,040 --> 00:13:30,600
common

372
00:13:30,600 --> 00:13:32,820
um the most common word appeared twice

373
00:13:32,820 --> 00:13:35,160
as often as the second most often it

374
00:13:35,160 --> 00:13:37,139
doesn't make sense when you first think

375
00:13:37,139 --> 00:13:41,220
about it but it the problem is it's true

376
00:13:41,220 --> 00:13:44,040
um and to to demonstrate this

377
00:13:44,040 --> 00:13:47,399
um he I would uh some work was done some

378
00:13:47,399 --> 00:13:49,139
research was done in 2015 apologies it

379
00:13:49,139 --> 00:13:51,899
was 2015 is the most recent in 2015 what

380
00:13:51,899 --> 00:13:53,459
someone did is they got all of the

381
00:13:53,459 --> 00:13:55,320
versions of Wikipedia

382
00:13:55,320 --> 00:13:58,380
crunched the first 10 million words from

383
00:13:58,380 --> 00:14:01,019
all of them and effectively on a log log

384
00:14:01,019 --> 00:14:02,579
graph which basically means instead of

385
00:14:02,579 --> 00:14:04,320
it being an exponential curve it's it's

386
00:14:04,320 --> 00:14:06,300
nearly straight just makes it easier to

387
00:14:06,300 --> 00:14:08,339
read and they plotted that and they've

388
00:14:08,339 --> 00:14:09,959
shown that that just is the case which

389
00:14:09,959 --> 00:14:12,060
basically means we are predictable in

390
00:14:12,060 --> 00:14:14,579
what we do everything we do is in that

391
00:14:14,579 --> 00:14:15,720
particular regard it's totally

392
00:14:15,720 --> 00:14:17,040
predictable

393
00:14:17,040 --> 00:14:18,959
um and the paper that I glossed over

394
00:14:18,959 --> 00:14:20,459
Russ at the beginning I apologize my

395
00:14:20,459 --> 00:14:21,420
nerves

396
00:14:21,420 --> 00:14:25,339
um Shannon effectively took hold of this

397
00:14:25,339 --> 00:14:28,139
particular aspect and he's provided he

398
00:14:28,139 --> 00:14:30,300
provided a mechanism to predict what

399
00:14:30,300 --> 00:14:31,980
comes next in a sentence that which is

400
00:14:31,980 --> 00:14:33,360
which is sort of where I got hooked with

401
00:14:33,360 --> 00:14:35,820
this whole thing or 20 odd years ago

402
00:14:35,820 --> 00:14:38,040
um it would literally allows you to

403
00:14:38,040 --> 00:14:40,500
predict what is coming next

404
00:14:40,500 --> 00:14:42,060
um so what I'm saying is is there a way

405
00:14:42,060 --> 00:14:44,160
that I can use that somehow

406
00:14:44,160 --> 00:14:46,680
going back to the uh to to the to the to

407
00:14:46,680 --> 00:14:48,120
the original to the original problem

408
00:14:48,120 --> 00:14:50,820
well as it happens

409
00:14:50,820 --> 00:14:53,699
for DNS tunnel detection uh some

410
00:14:53,699 --> 00:14:57,000
research was done in o4 and what they've

411
00:14:57,000 --> 00:14:59,160
actually done is they've shown that if

412
00:14:59,160 --> 00:15:01,620
you were to look at DNS names versus

413
00:15:01,620 --> 00:15:05,639
subdomains that have effectively

414
00:15:05,639 --> 00:15:08,220
um yeah the the totally Untamed so

415
00:15:08,220 --> 00:15:10,380
normal DNS names they actually form the

416
00:15:10,380 --> 00:15:12,720
blue graph which is which follows the

417
00:15:12,720 --> 00:15:14,540
azithian Curve

418
00:15:14,540 --> 00:15:16,980
whereas in comparison if you actually

419
00:15:16,980 --> 00:15:18,440
look at

420
00:15:18,440 --> 00:15:21,060
TCP over DNS or other forms of DNS

421
00:15:21,060 --> 00:15:22,620
tunneling mechanisms you can actually

422
00:15:22,620 --> 00:15:24,600
see that the plot is almost flat and the

423
00:15:24,600 --> 00:15:26,100
reason being is that encoding systems

424
00:15:26,100 --> 00:15:27,899
with encryption otherwise how I try to

425
00:15:27,899 --> 00:15:29,639
be as efficient as possible so whereas

426
00:15:29,639 --> 00:15:31,079
us humans are inefficient with

427
00:15:31,079 --> 00:15:33,120
characters encryption systems many

428
00:15:33,120 --> 00:15:35,579
coding systems are very efficient

429
00:15:35,579 --> 00:15:37,500
so

430
00:15:37,500 --> 00:15:39,839
I think in essence there is a strategy I

431
00:15:39,839 --> 00:15:41,459
have another I have another slide that I

432
00:15:41,459 --> 00:15:43,019
took out which effectively shows that

433
00:15:43,019 --> 00:15:44,639
this this technique has been used for

434
00:15:44,639 --> 00:15:46,800
detecting the likes of iodine and has

435
00:15:46,800 --> 00:15:48,600
been detected for has been used for

436
00:15:48,600 --> 00:15:51,060
detecting different types of of

437
00:15:51,060 --> 00:15:53,519
exfiltration covert exfiltration systems

438
00:15:53,519 --> 00:15:55,310
such which is quite neat

439
00:15:55,310 --> 00:15:58,199
[Music]

440
00:15:58,199 --> 00:16:00,380
foreign

441
00:16:00,920 --> 00:16:03,899
is it possible to to to to implement

442
00:16:03,899 --> 00:16:05,699
some kind of watermark

443
00:16:05,699 --> 00:16:09,060
so my take on it is quite simple

444
00:16:09,060 --> 00:16:13,260
I if we were to apply a city a watermark

445
00:16:13,260 --> 00:16:14,399
or some description let's call it a

446
00:16:14,399 --> 00:16:16,860
certificate to a document in all

447
00:16:16,860 --> 00:16:20,160
probability no pun intended we could

448
00:16:20,160 --> 00:16:21,899
detect that the fact that the watermark

449
00:16:21,899 --> 00:16:23,339
is there and the reason being that the

450
00:16:23,339 --> 00:16:25,079
watermark is machine generated and the

451
00:16:25,079 --> 00:16:26,279
certificates tend to have very high

452
00:16:26,279 --> 00:16:27,720
entropy so that you're going to be able

453
00:16:27,720 --> 00:16:29,940
to see them so the analogy I would see

454
00:16:29,940 --> 00:16:31,740
is that effectively you'll see entropy

455
00:16:31,740 --> 00:16:33,180
moving to a certain rate and you'll see

456
00:16:33,180 --> 00:16:35,760
a bump the problem is that if that's

457
00:16:35,760 --> 00:16:37,680
been put through any form of encryption

458
00:16:37,680 --> 00:16:39,420
system or any encoding system that is

459
00:16:39,420 --> 00:16:41,220
efficient by definition you will

460
00:16:41,220 --> 00:16:44,000
harmonize that out

461
00:16:45,779 --> 00:16:47,699
sort of come to the end of course we've

462
00:16:47,699 --> 00:16:49,440
got already sorry

463
00:16:49,440 --> 00:16:51,240
I've come to I've come come to the end

464
00:16:51,240 --> 00:16:52,780
what's it got a bit carried away

465
00:16:52,780 --> 00:16:54,480
[Music]

466
00:16:54,480 --> 00:16:56,880
any questions and apologies if that's a

467
00:16:56,880 --> 00:16:59,300
bit of a mess

468
00:17:01,000 --> 00:17:06,630
[Applause]

469
00:17:11,520 --> 00:17:14,520
sense

470
00:17:16,740 --> 00:17:17,579
um

471
00:17:17,579 --> 00:17:20,040
I'd like to think so by virtue of the

472
00:17:20,040 --> 00:17:21,720
fact that the alternative is that either

473
00:17:21,720 --> 00:17:23,040
someone's got a spine absolutely

474
00:17:23,040 --> 00:17:24,299
everything

475
00:17:24,299 --> 00:17:25,740
um I have a firm belief that I trust

476
00:17:25,740 --> 00:17:27,299
mathematics I don't trust configuration

477
00:17:27,299 --> 00:17:29,340
So to that end I don't want someone

478
00:17:29,340 --> 00:17:30,900
reading the data

479
00:17:30,900 --> 00:17:32,700
part of the problem that

480
00:17:32,700 --> 00:17:36,059
um I I identified quite soon on is that

481
00:17:36,059 --> 00:17:38,100
if you're looking at if you're saying

482
00:17:38,100 --> 00:17:39,660
that the maximum entropy is available is

483
00:17:39,660 --> 00:17:40,919
is eight

484
00:17:40,919 --> 00:17:42,780
and what we're saying is that the

485
00:17:42,780 --> 00:17:44,220
envelope of the packet that's going

486
00:17:44,220 --> 00:17:47,160
through has an entropy of 7.99999 you

487
00:17:47,160 --> 00:17:49,080
don't really have a lot of space to tell

488
00:17:49,080 --> 00:17:50,580
that something else is going on or

489
00:17:50,580 --> 00:17:52,260
something that's in there and that's

490
00:17:52,260 --> 00:17:53,760
part of the problem so I think all the

491
00:17:53,760 --> 00:17:55,500
tools are there

492
00:17:55,500 --> 00:17:57,299
um but it's one of those things we're

493
00:17:57,299 --> 00:17:58,620
buying in the present moment you have

494
00:17:58,620 --> 00:18:00,480
such a small element to play with it

495
00:18:00,480 --> 00:18:01,919
becomes quite difficult and I think

496
00:18:01,919 --> 00:18:04,200
that's my that's my realization

497
00:18:04,200 --> 00:18:06,260
um

498
00:18:09,240 --> 00:18:12,200
to learn

499
00:18:17,220 --> 00:18:19,220
tonight

500
00:18:26,179 --> 00:18:28,679
I think parts of my concern in that

501
00:18:28,679 --> 00:18:31,260
particular front is accuracy

502
00:18:31,260 --> 00:18:32,580
um you want to have a high level of

503
00:18:32,580 --> 00:18:34,140
certainty that you are seeing something

504
00:18:34,140 --> 00:18:35,760
and it's not an outlier it's not some

505
00:18:35,760 --> 00:18:39,000
element and and uh

506
00:18:39,000 --> 00:18:42,960
um I have a real problem with Bayes

507
00:18:42,960 --> 00:18:45,000
by virtue of the fact that one of the

508
00:18:45,000 --> 00:18:46,799
problems is that the the principles a

509
00:18:46,799 --> 00:18:48,299
lot of machine learning is that you're

510
00:18:48,299 --> 00:18:50,160
you're using a force back model for a

511
00:18:50,160 --> 00:18:51,960
force by model so ultimately you are

512
00:18:51,960 --> 00:18:54,000
going to make the same mistakes so but

513
00:18:54,000 --> 00:18:55,980
I'm not sure it's a it's an accuracy

514
00:18:55,980 --> 00:18:58,440
problem it's not a it's not a fact that

515
00:18:58,440 --> 00:18:59,940
I haven't seen this before I've seen it

516
00:18:59,940 --> 00:19:01,380
a different way it's it's actually about

517
00:19:01,380 --> 00:19:03,059
the accuracy

518
00:19:03,059 --> 00:19:05,940
um if if there was a way and another

519
00:19:05,940 --> 00:19:07,980
Avenue of this which I have started

520
00:19:07,980 --> 00:19:09,720
looking at is to start to say let's look

521
00:19:09,720 --> 00:19:11,340
in it starts looking at things like 16

522
00:19:11,340 --> 00:19:13,559
bit 32-bit entropy one of the problems

523
00:19:13,559 --> 00:19:14,940
is they're quite hard to calculate

524
00:19:14,940 --> 00:19:16,500
because you've now got a really really

525
00:19:16,500 --> 00:19:18,960
massive uh but if you if you bear in

526
00:19:18,960 --> 00:19:19,799
mind if you're talking about a

527
00:19:19,799 --> 00:19:22,380
potentiary you're talking about 256

528
00:19:22,380 --> 00:19:24,059
symbols as soon as you suddenly go to

529
00:19:24,059 --> 00:19:25,980
32-bit entropy you're up to the billions

530
00:19:25,980 --> 00:19:27,179
as soon as you get six four entry there

531
00:19:27,179 --> 00:19:28,740
means are massive numbers so to actually

532
00:19:28,740 --> 00:19:30,780
be able to calculate something and

533
00:19:30,780 --> 00:19:33,299
actually create yourself some definition

534
00:19:33,299 --> 00:19:35,760
um the the example I hypothesized was if

535
00:19:35,760 --> 00:19:37,679
I come back after six months of

536
00:19:37,679 --> 00:19:39,780
processing and I still say I can only

537
00:19:39,780 --> 00:19:41,700
give you a sort of a 50 50 likelihood

538
00:19:41,700 --> 00:19:42,900
this was there I'm not really getting

539
00:19:42,900 --> 00:19:45,419
think they're going to go coin toss much

540
00:19:45,419 --> 00:19:47,640
more accurate much quicker

541
00:19:47,640 --> 00:19:50,760
if that sort of makes sense

542
00:19:50,760 --> 00:19:52,380
I have a question

543
00:19:52,380 --> 00:19:54,000
um really great talk thank you very much

544
00:19:54,000 --> 00:19:55,919
I I enjoyed it but I think I might be

545
00:19:55,919 --> 00:19:57,900
biased because I'm a mathematician thank

546
00:19:57,900 --> 00:19:59,880
you um but really great I was I was

547
00:19:59,880 --> 00:20:02,580
going to ask about uh speed and accuracy

548
00:20:02,580 --> 00:20:04,799
and if you've tried say the Fourier

549
00:20:04,799 --> 00:20:07,500
approach or other ideas to try and pull

550
00:20:07,500 --> 00:20:08,520
out

551
00:20:08,520 --> 00:20:11,100
like almost other periodicities within

552
00:20:11,100 --> 00:20:13,220
data within patterns that you find in

553
00:20:13,220 --> 00:20:17,360
inefficient unencoded data

554
00:20:17,520 --> 00:20:20,760
um the research that was done off the

555
00:20:20,760 --> 00:20:22,559
back of and again I can never remember

556
00:20:22,559 --> 00:20:24,539
his name is buttery

557
00:20:24,539 --> 00:20:26,100
um and again I would Advocate I'm more

558
00:20:26,100 --> 00:20:27,240
than happy to share the slides anyone

559
00:20:27,240 --> 00:20:28,860
just get a chance to see that slide the

560
00:20:28,860 --> 00:20:31,200
guy is brilliant he quotes Sagan you

561
00:20:31,200 --> 00:20:33,000
know think outside the box don't go for

562
00:20:33,000 --> 00:20:34,260
the she's pretty much what you're saying

563
00:20:34,260 --> 00:20:35,220
up

564
00:20:35,220 --> 00:20:36,419
um

565
00:20:36,419 --> 00:20:38,640
part of his issue is that a lot of these

566
00:20:38,640 --> 00:20:40,980
things are defeatable so for example

567
00:20:40,980 --> 00:20:43,559
current encryption algorithms have

568
00:20:43,559 --> 00:20:45,240
weaknesses because their keys are of a

569
00:20:45,240 --> 00:20:46,260
certain size and so on so forth

570
00:20:46,260 --> 00:20:48,179
therefore you have periodic periodicy

571
00:20:48,179 --> 00:20:49,980
that you can rely on since there's only

572
00:20:49,980 --> 00:20:52,080
so much you can morph the traffic but as

573
00:20:52,080 --> 00:20:54,480
soon as you start having clever hacking

574
00:20:54,480 --> 00:20:56,640
mechanisms that are difficult to defeat

575
00:20:56,640 --> 00:20:58,919
and packing mechanisms ourselves are

576
00:20:58,919 --> 00:21:00,120
defeatable if you know what the

577
00:21:00,120 --> 00:21:01,860
algorithm is to do them

578
00:21:01,860 --> 00:21:03,900
the problem is that each time you are

579
00:21:03,900 --> 00:21:05,520
you know you're up in the ante but you

580
00:21:05,520 --> 00:21:06,780
still come you still have this issue

581
00:21:06,780 --> 00:21:10,140
with uh with effectively with accuracy

582
00:21:10,140 --> 00:21:11,820
um in in his particular case he was

583
00:21:11,820 --> 00:21:14,400
looking for speech and he started off

584
00:21:14,400 --> 00:21:16,200
with the with the principle whereby I'm

585
00:21:16,200 --> 00:21:17,760
looking for this particular sequence of

586
00:21:17,760 --> 00:21:19,919
speech speech naturally forms therefore

587
00:21:19,919 --> 00:21:21,120
if you encrypt it you were going to

588
00:21:21,120 --> 00:21:22,740
struggle to lose that particular

589
00:21:22,740 --> 00:21:24,600
perspective

590
00:21:24,600 --> 00:21:27,179
um the only other thing I I did look at

591
00:21:27,179 --> 00:21:29,900
and again I've got

592
00:21:29,900 --> 00:21:33,360
pieces on which was it was it possible

593
00:21:33,360 --> 00:21:35,159
to take a different approach for

594
00:21:35,159 --> 00:21:39,360
attacking a DNS or uh for to effectively

595
00:21:39,360 --> 00:21:41,820
defeat DNS encryption or DNS tunneling

596
00:21:41,820 --> 00:21:43,260
and one of them is to turn around and

597
00:21:43,260 --> 00:21:45,000
say if you can identify the timing

598
00:21:45,000 --> 00:21:48,120
associated with FTP is it possible to

599
00:21:48,120 --> 00:21:50,280
effectively identify outliers or places

600
00:21:50,280 --> 00:21:52,559
where FTP is being misused for tunneling

601
00:21:52,559 --> 00:21:55,260
so for example FTP is typically you'll

602
00:21:55,260 --> 00:21:56,640
see a lot going in One Direction but not

603
00:21:56,640 --> 00:21:57,539
so much coming in the other direction

604
00:21:57,539 --> 00:21:59,580
and you'll see other scenarios which may

605
00:21:59,580 --> 00:22:01,320
show through the issue with a lot of

606
00:22:01,320 --> 00:22:03,059
these things is it's really really cool

607
00:22:03,059 --> 00:22:04,860
for looking for modeling TCP related

608
00:22:04,860 --> 00:22:06,780
things as soon as you go into UDP it

609
00:22:06,780 --> 00:22:08,340
becomes a real problem it's very very

610
00:22:08,340 --> 00:22:09,720
difficult to do because the caching and

611
00:22:09,720 --> 00:22:12,380
all the things that go on

612
00:22:13,140 --> 00:22:14,480
all right

613
00:22:14,480 --> 00:22:18,780
cool sorry was that okay how was that

614
00:22:18,780 --> 00:22:20,280
pitched sorry should I ask that question

615
00:22:20,280 --> 00:22:22,740
how was that pitched was it because I

616
00:22:22,740 --> 00:22:24,720
was really I had a lot more maths in

617
00:22:24,720 --> 00:22:27,179
there because it's my passion and I took

618
00:22:27,179 --> 00:22:28,559
a lot of math out because I really want

619
00:22:28,559 --> 00:22:29,820
to share because I am so passionate

620
00:22:29,820 --> 00:22:31,140
about this subject and I wanted to make

621
00:22:31,140 --> 00:22:32,940
sure it was accessible to people

622
00:22:32,940 --> 00:22:34,500
and I've just was it how was that

623
00:22:34,500 --> 00:22:36,720
pitched was it is it okay

624
00:22:36,720 --> 00:22:38,120
thank you

625
00:22:38,120 --> 00:22:40,250
thank you

626
00:22:40,250 --> 00:22:43,529
[Applause]

