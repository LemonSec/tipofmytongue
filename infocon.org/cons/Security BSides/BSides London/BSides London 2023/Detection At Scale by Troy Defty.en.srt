1
00:00:03,140 --> 00:00:05,040
all right hi there everyone just to

2
00:00:05,040 --> 00:00:06,060
check everyone can hear me at the back

3
00:00:06,060 --> 00:00:07,859
and stuff like that right yep Back Road

4
00:00:07,859 --> 00:00:08,880
awesome

5
00:00:08,880 --> 00:00:10,500
um so first of all thanks for everyone's

6
00:00:10,500 --> 00:00:12,780
time and thanks for the to the b-sides

7
00:00:12,780 --> 00:00:14,160
organizers for kind of giving me the

8
00:00:14,160 --> 00:00:15,900
opportunity to present today

9
00:00:15,900 --> 00:00:17,340
um it's great to be able to give back to

10
00:00:17,340 --> 00:00:18,720
a community that supported me for so

11
00:00:18,720 --> 00:00:20,820
long when I was here in London but

12
00:00:20,820 --> 00:00:22,740
Google's Google has a pretty big

13
00:00:22,740 --> 00:00:24,300
security presence right and pretty much

14
00:00:24,300 --> 00:00:26,699
the entire security team is really

15
00:00:26,699 --> 00:00:28,260
focused on defending and protecting

16
00:00:28,260 --> 00:00:30,960
Google alphabet all of our users I

17
00:00:30,960 --> 00:00:33,120
imagine many of whom here might be users

18
00:00:33,120 --> 00:00:36,059
as well and from Badness right and we do

19
00:00:36,059 --> 00:00:37,440
this through building Technical

20
00:00:37,440 --> 00:00:39,239
mitigations and controls into our

21
00:00:39,239 --> 00:00:41,040
platforms our environmental sort of

22
00:00:41,040 --> 00:00:42,960
stuff that basically mean that they're

23
00:00:42,960 --> 00:00:44,700
more resilient to attack

24
00:00:44,700 --> 00:00:46,920
and part of this posture is building

25
00:00:46,920 --> 00:00:48,600
detections for when gaps are found in

26
00:00:48,600 --> 00:00:50,100
these controls so we can kind of like

27
00:00:50,100 --> 00:00:52,320
cover our bases as best we can

28
00:00:52,320 --> 00:00:54,840
but in detection our priority is to

29
00:00:54,840 --> 00:00:56,579
defend against nation-state backed

30
00:00:56,579 --> 00:00:57,780
attackers and these are the groups of

31
00:00:57,780 --> 00:00:59,940
people who we think are probably most

32
00:00:59,940 --> 00:01:02,399
likely interested in taking taking a pop

33
00:01:02,399 --> 00:01:04,379
at this right so when we think about

34
00:01:04,379 --> 00:01:06,420
defending we have to think about this

35
00:01:06,420 --> 00:01:08,040
problem at a pretty large scale because

36
00:01:08,040 --> 00:01:09,960
of the size at which we operate

37
00:01:09,960 --> 00:01:12,180
so today I'll talk a bit about how we're

38
00:01:12,180 --> 00:01:13,979
just our mindset to basically you know

39
00:01:13,979 --> 00:01:15,840
work at this kind of scale

40
00:01:15,840 --> 00:01:18,000
but before I get into that sorry I need

41
00:01:18,000 --> 00:01:19,860
to talk this way I always talk that way

42
00:01:19,860 --> 00:01:21,060
to the slide

43
00:01:21,060 --> 00:01:22,920
um for the past two and a bit years I've

44
00:01:22,920 --> 00:01:24,780
been a security engineering manager at

45
00:01:24,780 --> 00:01:25,740
Google

46
00:01:25,740 --> 00:01:27,479
um down under in the land of dinner

47
00:01:27,479 --> 00:01:29,400
plate size spiders and drop bears in

48
00:01:29,400 --> 00:01:31,799
Sydney Australia and if this isn't a

49
00:01:31,799 --> 00:01:33,600
detection team and basically as a team

50
00:01:33,600 --> 00:01:36,720
we are the people who comb through the

51
00:01:36,720 --> 00:01:38,700
you know Galaxy of Haystacks looking for

52
00:01:38,700 --> 00:01:40,860
the needle that is Badness right that's

53
00:01:40,860 --> 00:01:42,180
the people that would try and see us

54
00:01:42,180 --> 00:01:43,140
fail

55
00:01:43,140 --> 00:01:45,299
but before this I was actually on the

56
00:01:45,299 --> 00:01:46,560
other side of the fence I was in red

57
00:01:46,560 --> 00:01:47,880
teaming for about eight and a half years

58
00:01:47,880 --> 00:01:49,920
both here in London and later on in

59
00:01:49,920 --> 00:01:52,140
Sydney and I haven't quite hung up those

60
00:01:52,140 --> 00:01:54,360
shoes for good yet I still am headed

61
00:01:54,360 --> 00:01:56,159
into like ICS and Hardware stuff so if

62
00:01:56,159 --> 00:01:57,299
you're into that as well you know please

63
00:01:57,299 --> 00:01:58,740
let me know

64
00:01:58,740 --> 00:02:00,780
but to start with a very existential

65
00:02:00,780 --> 00:02:02,220
question you know like why are we all

66
00:02:02,220 --> 00:02:03,659
here and I'm not asking you know why are

67
00:02:03,659 --> 00:02:05,340
we all like watching me talk right

68
00:02:05,340 --> 00:02:06,899
um it's more about you know how we come

69
00:02:06,899 --> 00:02:08,580
as an industry to be where we are where

70
00:02:08,580 --> 00:02:10,979
we see today and how we all gravitate

71
00:02:10,979 --> 00:02:12,720
gravitated together on a weekend to kind

72
00:02:12,720 --> 00:02:13,920
of like spend our time at these

73
00:02:13,920 --> 00:02:15,599
conferences right and a lot of this

74
00:02:15,599 --> 00:02:17,400
really unfolds because of events over

75
00:02:17,400 --> 00:02:21,060
the past sort of like 45 to 50 years

76
00:02:21,060 --> 00:02:24,300
so back in the 1960s the US government

77
00:02:24,300 --> 00:02:25,860
realized that they had a problem on

78
00:02:25,860 --> 00:02:27,599
their hands they had these big computers

79
00:02:27,599 --> 00:02:28,860
like you know would fill this entire

80
00:02:28,860 --> 00:02:31,140
room but they realized that they were no

81
00:02:31,140 --> 00:02:33,780
longer single user devices they shared

82
00:02:33,780 --> 00:02:35,819
resources they had multiple users using

83
00:02:35,819 --> 00:02:37,620
it at the same time and they really

84
00:02:37,620 --> 00:02:39,180
asked pretty early on that they had a

85
00:02:39,180 --> 00:02:40,440
pretty big problem on their hands and

86
00:02:40,440 --> 00:02:42,480
that was what if all of these users

87
00:02:42,480 --> 00:02:44,400
could like see each other's things so

88
00:02:44,400 --> 00:02:46,080
that's probably not a good thing I'm not

89
00:02:46,080 --> 00:02:47,580
sure if that was me or not so apologies

90
00:02:47,580 --> 00:02:49,920
if it was it is me okay

91
00:02:49,920 --> 00:02:51,420
oh because I'm breathing into the mic

92
00:02:51,420 --> 00:02:52,620
okay

93
00:02:52,620 --> 00:02:54,360
um I'll Stand a bit further back so

94
00:02:54,360 --> 00:02:56,220
apologies for that

95
00:02:56,220 --> 00:02:58,739
um but by 1972 James Anderson had

96
00:02:58,739 --> 00:03:00,360
written a paper on this topic called the

97
00:03:00,360 --> 00:03:01,920
computer security technology planning

98
00:03:01,920 --> 00:03:04,080
study and he correctly posited in this

99
00:03:04,080 --> 00:03:05,760
study that the things we were building

100
00:03:05,760 --> 00:03:08,459
couldn't defend themselves and James had

101
00:03:08,459 --> 00:03:09,959
a background in meteorology which gave

102
00:03:09,959 --> 00:03:11,580
him a unique understanding of like the

103
00:03:11,580 --> 00:03:13,739
interplay between systems particularly

104
00:03:13,739 --> 00:03:15,659
as things might play out into the future

105
00:03:15,659 --> 00:03:17,040
when they become more connected over

106
00:03:17,040 --> 00:03:17,879
time

107
00:03:17,879 --> 00:03:20,099
and by the 1980s he further developed

108
00:03:20,099 --> 00:03:21,720
how we needed to start auditing and

109
00:03:21,720 --> 00:03:23,340
monitoring what users do on these

110
00:03:23,340 --> 00:03:25,319
systems he wrote another paper a

111
00:03:25,319 --> 00:03:26,760
computer security threat modeling and

112
00:03:26,760 --> 00:03:28,500
surveillance paper which described that

113
00:03:28,500 --> 00:03:30,720
we needed to you know audit logs we had

114
00:03:30,720 --> 00:03:32,280
to centralize these logs we needed

115
00:03:32,280 --> 00:03:34,800
people looking at them and we needed or

116
00:03:34,800 --> 00:03:36,300
they kind of started describing the

117
00:03:36,300 --> 00:03:38,640
kinds of auditing that we needed to do

118
00:03:38,640 --> 00:03:40,440
and this is actually one of the seminal

119
00:03:40,440 --> 00:03:42,480
papers that kind of like fueled a lot of

120
00:03:42,480 --> 00:03:45,440
the careers that we see today

121
00:03:46,319 --> 00:03:48,480
and these are the examples of the kinds

122
00:03:48,480 --> 00:03:50,040
of things that these papers that suggest

123
00:03:50,040 --> 00:03:52,319
that we do and each box here represents

124
00:03:52,319 --> 00:03:54,239
a topic that turns up in academic

125
00:03:54,239 --> 00:03:56,220
literature or commercial products around

126
00:03:56,220 --> 00:03:57,239
the time

127
00:03:57,239 --> 00:03:58,920
and the very first thing they suggest

128
00:03:58,920 --> 00:04:01,080
that we try is manual analysis it's

129
00:04:01,080 --> 00:04:02,400
literally just like looking through

130
00:04:02,400 --> 00:04:03,659
order logs

131
00:04:03,659 --> 00:04:05,580
and shortly after that we start seeing

132
00:04:05,580 --> 00:04:07,319
things like behavioral anomalies come up

133
00:04:07,319 --> 00:04:09,180
this is still pretty early though but

134
00:04:09,180 --> 00:04:10,560
it's looking at answering questions like

135
00:04:10,560 --> 00:04:12,659
what does normal look like and can we

136
00:04:12,659 --> 00:04:14,159
use statistics to determine what normal

137
00:04:14,159 --> 00:04:16,440
looks like and can we use these like

138
00:04:16,440 --> 00:04:18,418
self-learning expert systems to help us

139
00:04:18,418 --> 00:04:20,639
determine what normal looks like and all

140
00:04:20,639 --> 00:04:22,079
of this comes like very early in the

141
00:04:22,079 --> 00:04:23,699
picture

142
00:04:23,699 --> 00:04:26,880
but by the 1990s we start to hear things

143
00:04:26,880 --> 00:04:29,460
that we hear about today data mining you

144
00:04:29,460 --> 00:04:31,380
know artificial intelligence you know we

145
00:04:31,380 --> 00:04:33,120
give people user interfaces to do

146
00:04:33,120 --> 00:04:34,440
analysis in so they can like actually

147
00:04:34,440 --> 00:04:36,360
click on stuff like wow nice clicking on

148
00:04:36,360 --> 00:04:38,160
things like and make this stuff much

149
00:04:38,160 --> 00:04:39,240
easier to find that it would have been

150
00:04:39,240 --> 00:04:41,820
seen previously so conceptually kind of

151
00:04:41,820 --> 00:04:43,560
like our e ancestors I kind of thought

152
00:04:43,560 --> 00:04:45,960
of this stuff already

153
00:04:45,960 --> 00:04:48,419
and by the 2000s we start to combine a

154
00:04:48,419 --> 00:04:49,560
lot of this stuff

155
00:04:49,560 --> 00:04:52,080
we see a real emergence of like machine

156
00:04:52,080 --> 00:04:54,360
learning and using different algorithmic

157
00:04:54,360 --> 00:04:56,040
representations to try and like model

158
00:04:56,040 --> 00:04:58,139
security problems and it's pretty

159
00:04:58,139 --> 00:04:59,460
interesting to see how all of the stuff

160
00:04:59,460 --> 00:05:01,620
progresses but there's one common theme

161
00:05:01,620 --> 00:05:03,479
that all of these technologies have

162
00:05:03,479 --> 00:05:05,880
and that they are meant to be assistance

163
00:05:05,880 --> 00:05:08,460
they're meant to point a human in a

164
00:05:08,460 --> 00:05:10,259
direction you know when we are humans

165
00:05:10,259 --> 00:05:12,240
we're out there looking for Badness you

166
00:05:12,240 --> 00:05:13,919
know these Technologies are here to

167
00:05:13,919 --> 00:05:17,160
assist us in finding that Badness

168
00:05:17,160 --> 00:05:20,160
so anyone here who's ever started a sock

169
00:05:20,160 --> 00:05:22,259
can probably relate to this history so

170
00:05:22,259 --> 00:05:24,720
far you start out with a bunch of people

171
00:05:24,720 --> 00:05:27,060
looking at logs and once you figure out

172
00:05:27,060 --> 00:05:29,100
what to do with all of this log stuff

173
00:05:29,100 --> 00:05:30,660
you can kind of like use assistive

174
00:05:30,660 --> 00:05:32,820
Technologies to help make this task

175
00:05:32,820 --> 00:05:34,020
easier

176
00:05:34,020 --> 00:05:36,000
and when Google first started our sock

177
00:05:36,000 --> 00:05:38,220
we did exactly that we hired analysts to

178
00:05:38,220 --> 00:05:40,919
effectively stare at logs and until we

179
00:05:40,919 --> 00:05:42,600
figured out what analysts were good at

180
00:05:42,600 --> 00:05:44,639
doing and we figured out that we had to

181
00:05:44,639 --> 00:05:47,280
draw a line between manual investigation

182
00:05:47,280 --> 00:05:49,500
and automated investigation

183
00:05:49,500 --> 00:05:51,660
and in some ways this is almost the

184
00:05:51,660 --> 00:05:53,639
original intent behind our careers

185
00:05:53,639 --> 00:05:55,259
according to James Anderson back in the

186
00:05:55,259 --> 00:05:56,880
1980s

187
00:05:56,880 --> 00:05:59,039
so when we read that same literature and

188
00:05:59,039 --> 00:06:00,660
we look at the same timeline through a

189
00:06:00,660 --> 00:06:02,340
slightly different lens we see that

190
00:06:02,340 --> 00:06:04,139
we've been classified almost we became

191
00:06:04,139 --> 00:06:06,360
the names and titles and way back in the

192
00:06:06,360 --> 00:06:08,160
1980s James Anderson called this the

193
00:06:08,160 --> 00:06:10,380
activity security officer which in many

194
00:06:10,380 --> 00:06:12,419
ways is kind of like correct today still

195
00:06:12,419 --> 00:06:14,580
yeah we monitor activity with a security

196
00:06:14,580 --> 00:06:16,680
lens and even in the 1980s this concept

197
00:06:16,680 --> 00:06:18,000
is still around

198
00:06:18,000 --> 00:06:20,280
we also start to see words like order to

199
00:06:20,280 --> 00:06:22,680
appear and the the security out of this

200
00:06:22,680 --> 00:06:24,419
role was kind of born around the 1980s

201
00:06:24,419 --> 00:06:26,160
as well so this job that we're talking

202
00:06:26,160 --> 00:06:27,539
about has been around for a pretty long

203
00:06:27,539 --> 00:06:29,280
time

204
00:06:29,280 --> 00:06:31,020
and then we fast forward we start to see

205
00:06:31,020 --> 00:06:32,280
you know the Security administrator

206
00:06:32,280 --> 00:06:34,380
appear which is a Twist on the it admin

207
00:06:34,380 --> 00:06:36,479
and some of you may be familiar with

208
00:06:36,479 --> 00:06:38,280
both of these roles at once which is you

209
00:06:38,280 --> 00:06:39,660
know the better or worse the reality of

210
00:06:39,660 --> 00:06:41,280
the world at the moment

211
00:06:41,280 --> 00:06:43,620
and by the late 1990s and 2000s we

212
00:06:43,620 --> 00:06:45,180
invent the sock this is like collections

213
00:06:45,180 --> 00:06:46,680
of all of these people and you're

214
00:06:46,680 --> 00:06:48,240
working together to try and solve the

215
00:06:48,240 --> 00:06:50,039
security problem

216
00:06:50,039 --> 00:06:51,840
and then we invented the term threat

217
00:06:51,840 --> 00:06:54,240
Hunter but the work here is relatively

218
00:06:54,240 --> 00:06:55,440
similar to some of the other roles that

219
00:06:55,440 --> 00:06:58,139
we've already seen

220
00:06:58,139 --> 00:07:00,960
so we can't by combining these views can

221
00:07:00,960 --> 00:07:03,000
see that you know assisted by technology

222
00:07:03,000 --> 00:07:04,680
the whole principle here is that humans

223
00:07:04,680 --> 00:07:07,319
try and find bad things and that's

224
00:07:07,319 --> 00:07:09,240
relatively speaking kind of like where

225
00:07:09,240 --> 00:07:11,699
we find ourselves today

226
00:07:11,699 --> 00:07:13,199
and you might be asking like hey why do

227
00:07:13,199 --> 00:07:14,699
we keep Reinventing this stuff like why

228
00:07:14,699 --> 00:07:16,319
do we keep seeing the same themes emerge

229
00:07:16,319 --> 00:07:18,180
over time and we have a bit of a

230
00:07:18,180 --> 00:07:19,620
hypothesis it might be poorly

231
00:07:19,620 --> 00:07:21,720
constructed and might not hold a huge

232
00:07:21,720 --> 00:07:23,400
amount of weight but we have this

233
00:07:23,400 --> 00:07:25,440
feeling that every four to five years or

234
00:07:25,440 --> 00:07:28,080
so something might just not quite be

235
00:07:28,080 --> 00:07:31,319
working as we intended to do

236
00:07:31,319 --> 00:07:32,940
we're not detecting what we think we

237
00:07:32,940 --> 00:07:34,919
might should be so we basically decide

238
00:07:34,919 --> 00:07:36,599
to start a new and we start with humans

239
00:07:36,599 --> 00:07:38,220
we always start with the analysts in

240
00:07:38,220 --> 00:07:39,240
this picture

241
00:07:39,240 --> 00:07:41,759
but analysts need data

242
00:07:41,759 --> 00:07:44,220
and it's really easy to give analysts

243
00:07:44,220 --> 00:07:45,599
too much data when you before you've

244
00:07:45,599 --> 00:07:47,280
figured out like we have a lot of data

245
00:07:47,280 --> 00:07:48,900
here we have to we have to do something

246
00:07:48,900 --> 00:07:50,699
with it so then we naturally start to

247
00:07:50,699 --> 00:07:53,520
build tooling we build assistance

248
00:07:53,520 --> 00:07:54,780
but it turns out that this doesn't

249
00:07:54,780 --> 00:07:56,580
entirely work either because we know

250
00:07:56,580 --> 00:07:58,680
that humans can do this better

251
00:07:58,680 --> 00:08:01,020
so we kind of end up conceptually back

252
00:08:01,020 --> 00:08:02,400
where we started we may have probably

253
00:08:02,400 --> 00:08:04,500
learned a few things along the way but

254
00:08:04,500 --> 00:08:07,440
we pretty much end up where we began

255
00:08:07,440 --> 00:08:09,360
and when we look at this cycle over time

256
00:08:09,360 --> 00:08:11,099
and we look at the kinds of technology

257
00:08:11,099 --> 00:08:12,720
that have been available and the

258
00:08:12,720 --> 00:08:14,039
intelligent assistance that we've been

259
00:08:14,039 --> 00:08:16,319
giving people it begins actually with

260
00:08:16,319 --> 00:08:18,120
something very simple and back in the

261
00:08:18,120 --> 00:08:20,639
1980s James Anderson's advice was to

262
00:08:20,639 --> 00:08:22,740
print out the order records create a

263
00:08:22,740 --> 00:08:24,960
case File and hand it to an officer to

264
00:08:24,960 --> 00:08:26,280
kind of like read the stuff and review

265
00:08:26,280 --> 00:08:27,180
it

266
00:08:27,180 --> 00:08:28,740
and you can imagine that people doing

267
00:08:28,740 --> 00:08:30,180
this work probably didn't find it very

268
00:08:30,180 --> 00:08:31,919
rewarding and it actually doesn't really

269
00:08:31,919 --> 00:08:34,860
work because fatigue toil all these

270
00:08:34,860 --> 00:08:36,360
kinds of like human elements have an

271
00:08:36,360 --> 00:08:37,919
impact on the investigative quality of

272
00:08:37,919 --> 00:08:39,719
this kind of methodology

273
00:08:39,719 --> 00:08:41,279
so what we do is we invent a new

274
00:08:41,279 --> 00:08:43,440
technology we give them database backs

275
00:08:43,440 --> 00:08:45,300
user interfaces we have pages that can

276
00:08:45,300 --> 00:08:46,860
go off when rules fire all this kind of

277
00:08:46,860 --> 00:08:48,839
stuff and by the 2000s we start getting

278
00:08:48,839 --> 00:08:50,760
more sophisticated we're doing signature

279
00:08:50,760 --> 00:08:52,860
detection and seam and then we put a

280
00:08:52,860 --> 00:08:54,180
sock in place to look at all of this

281
00:08:54,180 --> 00:08:56,580
stuff 24 7. and now we have you know

282
00:08:56,580 --> 00:08:58,200
like threat hunting tools like themes

283
00:08:58,200 --> 00:09:00,060
data science ML and a whole bunch of

284
00:09:00,060 --> 00:09:01,140
other things right

285
00:09:01,140 --> 00:09:03,600
but every five years or so we kind of go

286
00:09:03,600 --> 00:09:05,279
through this revolution of trying to

287
00:09:05,279 --> 00:09:06,779
improve the intelligent assistance that

288
00:09:06,779 --> 00:09:08,760
we're using and this kind of results in

289
00:09:08,760 --> 00:09:10,320
the somewhat iterative approach that we

290
00:09:10,320 --> 00:09:12,000
see here

291
00:09:12,000 --> 00:09:13,800
yeah this might sound pretty bleak it's

292
00:09:13,800 --> 00:09:15,360
like hey like we did every five years we

293
00:09:15,360 --> 00:09:16,620
kind of end up back where we started we

294
00:09:16,620 --> 00:09:18,120
might have had a little bit and sorry

295
00:09:18,120 --> 00:09:19,500
for kind of like bringing the tone down

296
00:09:19,500 --> 00:09:20,760
on the on the Outlook of the security

297
00:09:20,760 --> 00:09:21,899
industry

298
00:09:21,899 --> 00:09:22,560
um

299
00:09:22,560 --> 00:09:24,180
but let's look at the future right so

300
00:09:24,180 --> 00:09:25,980
the future really holds something quite

301
00:09:25,980 --> 00:09:27,720
valuable I think and it might sound

302
00:09:27,720 --> 00:09:29,100
somewhat controversial with these

303
00:09:29,100 --> 00:09:31,380
opinions but I think by about ultimately

304
00:09:31,380 --> 00:09:34,440
2050 we'll have something in place to

305
00:09:34,440 --> 00:09:36,180
solve James Anderson's original problem

306
00:09:36,180 --> 00:09:38,160
and we'll basically have some kind of a

307
00:09:38,160 --> 00:09:40,019
system or systems that can defend

308
00:09:40,019 --> 00:09:42,240
themselves they might be either better

309
00:09:42,240 --> 00:09:44,760
constructed or self-healing but they

310
00:09:44,760 --> 00:09:46,680
typically won't need humans in the same

311
00:09:46,680 --> 00:09:48,959
way that systems need us today

312
00:09:48,959 --> 00:09:50,700
and this means that the systems we have

313
00:09:50,700 --> 00:09:52,380
today where the machines are kind of

314
00:09:52,380 --> 00:09:54,120
like Reliant upon humans to defend them

315
00:09:54,120 --> 00:09:56,100
will become less and less relevant over

316
00:09:56,100 --> 00:09:57,000
time

317
00:09:57,000 --> 00:09:59,339
and this kind of is a solution to the

318
00:09:59,339 --> 00:10:00,720
original problem about James Anderson

319
00:10:00,720 --> 00:10:03,240
outlined in the 1980s

320
00:10:03,240 --> 00:10:04,920
and it's probably going to take a while

321
00:10:04,920 --> 00:10:06,300
to get there but I'm pretty hopeful we

322
00:10:06,300 --> 00:10:08,220
kind of see signs of this already

323
00:10:08,220 --> 00:10:09,959
um you may be familiar with the Cyber

324
00:10:09,959 --> 00:10:12,180
Grand Challenge held by DARPA

325
00:10:12,180 --> 00:10:13,800
um this was building about cyber

326
00:10:13,800 --> 00:10:15,360
reasoning systems that actually played

327
00:10:15,360 --> 00:10:18,180
in the the 2016 Defcon CTF and the

328
00:10:18,180 --> 00:10:19,860
challenge itself was held over the span

329
00:10:19,860 --> 00:10:22,080
of about two years and the goal was to

330
00:10:22,080 --> 00:10:23,820
build a cyber reasoning system that

331
00:10:23,820 --> 00:10:25,440
could detect vulnerabilities exploit

332
00:10:25,440 --> 00:10:27,120
them and then patch them and you can

333
00:10:27,120 --> 00:10:28,860
kind of think of this in some ways as

334
00:10:28,860 --> 00:10:30,180
being a system that can kind of like

335
00:10:30,180 --> 00:10:33,120
defend them within reason heal itself

336
00:10:33,120 --> 00:10:35,459
so the real question then is like what's

337
00:10:35,459 --> 00:10:36,899
the role of the human in this cycle

338
00:10:36,899 --> 00:10:39,180
right like the real reason that we're

339
00:10:39,180 --> 00:10:40,800
all here that the meaning behind all of

340
00:10:40,800 --> 00:10:42,180
the work that we're doing and the

341
00:10:42,180 --> 00:10:43,920
reality is that once we build a system

342
00:10:43,920 --> 00:10:45,899
that can learn we need to teach you

343
00:10:45,899 --> 00:10:47,820
pretty much everything that we know we

344
00:10:47,820 --> 00:10:49,920
need to teach it things about like how

345
00:10:49,920 --> 00:10:51,959
understanding how threats work how to

346
00:10:51,959 --> 00:10:54,240
defend systems how to identify and

347
00:10:54,240 --> 00:10:55,920
attack what an attack looks like how

348
00:10:55,920 --> 00:10:57,959
attackers work how governments build

349
00:10:57,959 --> 00:10:59,760
teams to attack other systems all of

350
00:10:59,760 --> 00:11:01,620
these kinds of fundamental principles

351
00:11:01,620 --> 00:11:04,079
and all of that will play into how we

352
00:11:04,079 --> 00:11:05,339
teach the computers to kind of like

353
00:11:05,339 --> 00:11:06,779
defend themselves

354
00:11:06,779 --> 00:11:08,339
and I think that's the real reason we're

355
00:11:08,339 --> 00:11:09,839
here right like this kind of like

356
00:11:09,839 --> 00:11:13,019
educational like wave of computing

357
00:11:13,019 --> 00:11:15,300
in the meantime you know we still get to

358
00:11:15,300 --> 00:11:18,060
defend and we have to chase attacks too

359
00:11:18,060 --> 00:11:19,800
so enough of the conceptual stuff right

360
00:11:19,800 --> 00:11:21,060
let's talk about how we do things at

361
00:11:21,060 --> 00:11:22,079
Google

362
00:11:22,079 --> 00:11:23,399
um this is a high level view of our

363
00:11:23,399 --> 00:11:24,899
detection pipeline

364
00:11:24,899 --> 00:11:26,940
whenever a computer light does a thing

365
00:11:26,940 --> 00:11:28,800
you know whatever that thing is

366
00:11:28,800 --> 00:11:30,240
um they generate a log for it it might

367
00:11:30,240 --> 00:11:32,399
be big it might be small but it's logged

368
00:11:32,399 --> 00:11:34,800
and logs are essential for debugging but

369
00:11:34,800 --> 00:11:36,360
they're actually crucial to detection

370
00:11:36,360 --> 00:11:39,480
and response and we consume huge volumes

371
00:11:39,480 --> 00:11:41,399
of log data every day we store it for

372
00:11:41,399 --> 00:11:43,140
long periods of time in this big data

373
00:11:43,140 --> 00:11:45,120
store which we replicate across multiple

374
00:11:45,120 --> 00:11:47,700
data centers and then over this data we

375
00:11:47,700 --> 00:11:49,500
run a number of detection systems on a

376
00:11:49,500 --> 00:11:51,240
very regular basis and some of these

377
00:11:51,240 --> 00:11:52,740
detection systems are pretty simple

378
00:11:52,740 --> 00:11:55,200
right they use static rules for example

379
00:11:55,200 --> 00:11:56,760
looking for malware fingerprints or

380
00:11:56,760 --> 00:11:58,920
hashes and some have more advanced

381
00:11:58,920 --> 00:12:00,360
models where they're using a bit of

382
00:12:00,360 --> 00:12:02,339
machine learning statistical analysis

383
00:12:02,339 --> 00:12:04,079
like anomaly detection all this kind of

384
00:12:04,079 --> 00:12:06,420
stuff but generally we know we use a lot

385
00:12:06,420 --> 00:12:08,760
of different tools to comb through this

386
00:12:08,760 --> 00:12:10,260
data set looking for indicators of

387
00:12:10,260 --> 00:12:11,579
Badness

388
00:12:11,579 --> 00:12:13,620
we also test everything to make sure our

389
00:12:13,620 --> 00:12:15,420
systems are reliable and behaviors we

390
00:12:15,420 --> 00:12:16,980
expect now as a former pen tester like

391
00:12:16,980 --> 00:12:18,720
Michael was terrible right

392
00:12:18,720 --> 00:12:20,339
um and having joined this more

393
00:12:20,339 --> 00:12:22,200
engineering focused role

394
00:12:22,200 --> 00:12:24,000
you miss an end-to-end an integration

395
00:12:24,000 --> 00:12:26,339
tests are fantastic so if you're writing

396
00:12:26,339 --> 00:12:28,079
any kind of tooling as a pen tester like

397
00:12:28,079 --> 00:12:30,120
I highly recommend unit testing it you

398
00:12:30,120 --> 00:12:32,640
will thank me later and anyway

399
00:12:32,640 --> 00:12:34,200
um detection systems in this case you

400
00:12:34,200 --> 00:12:36,000
know generate events to generate alerts

401
00:12:36,000 --> 00:12:38,760
and these are bundles of data that might

402
00:12:38,760 --> 00:12:40,860
be interesting to a human right that a

403
00:12:40,860 --> 00:12:42,660
human can look at

404
00:12:42,660 --> 00:12:45,120
and about 80 of these events that

405
00:12:45,120 --> 00:12:47,040
managed to get to a human are already

406
00:12:47,040 --> 00:12:48,959
enriched with everything as an analyst

407
00:12:48,959 --> 00:12:50,459
you need to know about the circumstances

408
00:12:50,459 --> 00:12:52,560
that led to the event firing

409
00:12:52,560 --> 00:12:54,540
and this is kind of almost in many ways

410
00:12:54,540 --> 00:12:55,860
like everything you would need to know

411
00:12:55,860 --> 00:12:57,779
to determine whether or not a given

412
00:12:57,779 --> 00:13:00,240
event is truly bad or not

413
00:13:00,240 --> 00:13:02,040
so to give you an example imagine you

414
00:13:02,040 --> 00:13:03,959
have a binary execute on the fleet and

415
00:13:03,959 --> 00:13:05,940
when I say Fleet I mean every device

416
00:13:05,940 --> 00:13:08,279
within Google's corporate Network

417
00:13:08,279 --> 00:13:09,899
and we have an antivirus program that

418
00:13:09,899 --> 00:13:11,279
notices you know this execution take

419
00:13:11,279 --> 00:13:12,899
place so we get the AV alert we know

420
00:13:12,899 --> 00:13:15,000
that I'd execute we will go and grab a

421
00:13:15,000 --> 00:13:16,440
copy of the binary and run it through

422
00:13:16,440 --> 00:13:18,060
you know many many binary analysis

423
00:13:18,060 --> 00:13:19,800
pipeline systems you can think of virus

424
00:13:19,800 --> 00:13:21,959
tilt as an example of one of those here

425
00:13:21,959 --> 00:13:23,579
we'll also know like everything about

426
00:13:23,579 --> 00:13:25,200
the user right we'll know where the user

427
00:13:25,200 --> 00:13:26,880
was we'll know how long the machine was

428
00:13:26,880 --> 00:13:28,800
there for we know how they authenticate

429
00:13:28,800 --> 00:13:30,120
to the machine all these other these

430
00:13:30,120 --> 00:13:32,100
bits and pieces and all of this data

431
00:13:32,100 --> 00:13:34,019
gets grouped up and put in front of an

432
00:13:34,019 --> 00:13:36,240
analyst and the idea is that they spend

433
00:13:36,240 --> 00:13:38,880
the minimal amount of toy toil doing

434
00:13:38,880 --> 00:13:41,040
this toils and tasks right they we want

435
00:13:41,040 --> 00:13:42,480
them to spend their time doing the

436
00:13:42,480 --> 00:13:44,579
things that humans are really good at we

437
00:13:44,579 --> 00:13:45,779
don't want them to answer questions that

438
00:13:45,779 --> 00:13:47,220
we know are going to be useful we solve

439
00:13:47,220 --> 00:13:48,600
that problem for them

440
00:13:48,600 --> 00:13:50,339
and the idea is they can spend that time

441
00:13:50,339 --> 00:13:51,959
determining whether or not the system is

442
00:13:51,959 --> 00:13:53,940
actually compromised or not

443
00:13:53,940 --> 00:13:55,740
and when we talk about machine learning

444
00:13:55,740 --> 00:13:57,360
like this is actually where we want

445
00:13:57,360 --> 00:13:58,980
machines to help us today we want them

446
00:13:58,980 --> 00:14:01,560
to assist the human in making a decision

447
00:14:01,560 --> 00:14:03,060
and and to kind of try and help point

448
00:14:03,060 --> 00:14:05,639
this in the right direction

449
00:14:05,639 --> 00:14:08,040
but we definitely don't do this alone we

450
00:14:08,040 --> 00:14:09,360
have many many partner teams that we

451
00:14:09,360 --> 00:14:11,220
work with and organizationally this is

452
00:14:11,220 --> 00:14:12,600
roughly how we're structured for those

453
00:14:12,600 --> 00:14:13,860
of you in blue team rules this might

454
00:14:13,860 --> 00:14:15,360
look somewhat similar

455
00:14:15,360 --> 00:14:17,100
we have a team that does threat analysis

456
00:14:17,100 --> 00:14:18,779
some of you may have heard of tag or the

457
00:14:18,779 --> 00:14:20,160
threat analysis group they post some

458
00:14:20,160 --> 00:14:21,660
really great blog posts I'd recommend

459
00:14:21,660 --> 00:14:22,860
checking them out if you haven't seen

460
00:14:22,860 --> 00:14:25,260
them yet but these are the people who

461
00:14:25,260 --> 00:14:26,639
spend time learning about what different

462
00:14:26,639 --> 00:14:28,560
threat groups are into like being a

463
00:14:28,560 --> 00:14:29,940
financial crime or spying on different

464
00:14:29,940 --> 00:14:32,459
countries and this all like informs our

465
00:14:32,459 --> 00:14:34,560
detection strategy

466
00:14:34,560 --> 00:14:36,360
we also have a team that builds all of

467
00:14:36,360 --> 00:14:38,760
our security tooling and these are

468
00:14:38,760 --> 00:14:40,560
basically huge projects that can store

469
00:14:40,560 --> 00:14:42,899
and analyze massive volumes of telemetry

470
00:14:42,899 --> 00:14:44,820
and alerting and all this kind of stuff

471
00:14:44,820 --> 00:14:46,620
we then have the security surveillance

472
00:14:46,620 --> 00:14:47,880
team which is where I sit the detection

473
00:14:47,880 --> 00:14:49,560
team I mentioned before and these are

474
00:14:49,560 --> 00:14:50,880
the humans that we were talking about

475
00:14:50,880 --> 00:14:52,320
earlier who see the output of our

476
00:14:52,320 --> 00:14:53,820
detection pipeline

477
00:14:53,820 --> 00:14:55,320
and we've actually borrowed a lot of

478
00:14:55,320 --> 00:14:56,760
this language from James Anderson this

479
00:14:56,760 --> 00:14:58,860
idea of surveillance not just detection

480
00:14:58,860 --> 00:15:00,959
and surveillance in this context is

481
00:15:00,959 --> 00:15:02,699
actively looking for bad stuff on the

482
00:15:02,699 --> 00:15:04,079
network not just waiting for alerts to

483
00:15:04,079 --> 00:15:06,180
come to us and in some ways this is kind

484
00:15:06,180 --> 00:15:07,740
of like active defense but this term is

485
00:15:07,740 --> 00:15:10,500
like very overloaded nowadays

486
00:15:10,500 --> 00:15:12,420
we also have a digital forensics team

487
00:15:12,420 --> 00:15:14,459
and an instant management team and these

488
00:15:14,459 --> 00:15:16,199
are the folks kind of that handle doing

489
00:15:16,199 --> 00:15:17,940
deeper Dives on things or The Wider

490
00:15:17,940 --> 00:15:19,680
coordination of incidents

491
00:15:19,680 --> 00:15:21,779
um when they when they do happen and we

492
00:15:21,779 --> 00:15:23,639
also draw very clear boundaries of

493
00:15:23,639 --> 00:15:25,920
responsibility so that we understand you

494
00:15:25,920 --> 00:15:27,360
know how many people in each of these

495
00:15:27,360 --> 00:15:29,399
teams we need to engage at a time and

496
00:15:29,399 --> 00:15:31,199
but in reality a lot of this work is

497
00:15:31,199 --> 00:15:34,079
heavily cross-functional

498
00:15:34,079 --> 00:15:35,579
we also work very closely with our

499
00:15:35,579 --> 00:15:37,199
internal red team and their goal is not

500
00:15:37,199 --> 00:15:39,480
to find every single bug but it's to

501
00:15:39,480 --> 00:15:41,160
find the gaps and the places where our

502
00:15:41,160 --> 00:15:43,620
detection systems may be lacking and

503
00:15:43,620 --> 00:15:45,720
they often mimic you know ttps from Real

504
00:15:45,720 --> 00:15:47,760
actors they they help us fine-tune our

505
00:15:47,760 --> 00:15:49,139
detection and test our response

506
00:15:49,139 --> 00:15:51,660
capabilities and they really do keep us

507
00:15:51,660 --> 00:15:53,040
on their toes in many ways they're

508
00:15:53,040 --> 00:15:54,839
actually our most targeted threat actor

509
00:15:54,839 --> 00:15:56,579
that we regularly see

510
00:15:56,579 --> 00:15:58,380
and we also regularly run combined red

511
00:15:58,380 --> 00:16:00,060
and blue team exercises where we kind of

512
00:16:00,060 --> 00:16:01,380
work together to better understand our

513
00:16:01,380 --> 00:16:03,420
posture and so you know focus on the

514
00:16:03,420 --> 00:16:04,980
blue side go with red for a bit and vice

515
00:16:04,980 --> 00:16:06,240
versa

516
00:16:06,240 --> 00:16:07,680
um because a key component of being a

517
00:16:07,680 --> 00:16:09,180
good attacker is understanding Defenders

518
00:16:09,180 --> 00:16:10,980
and vice versa of understanding

519
00:16:10,980 --> 00:16:13,040
Defenders being an attacker

520
00:16:13,040 --> 00:16:15,240
but all these collaborative events as

521
00:16:15,240 --> 00:16:16,260
you can imagine are great learning

522
00:16:16,260 --> 00:16:18,120
exercises but

523
00:16:18,120 --> 00:16:19,680
this is probably the most important

524
00:16:19,680 --> 00:16:21,360
thing that we've realized that we should

525
00:16:21,360 --> 00:16:23,940
only ever hunt once and this is somewhat

526
00:16:23,940 --> 00:16:26,699
analogous to only ever automating once

527
00:16:26,699 --> 00:16:28,560
so when we dive into hunting we have

528
00:16:28,560 --> 00:16:29,699
this kind of like thought process

529
00:16:29,699 --> 00:16:31,800
similar to the slide here so the first

530
00:16:31,800 --> 00:16:32,940
thing we'll do is typically start with

531
00:16:32,940 --> 00:16:34,260
research right we'll try and understand

532
00:16:34,260 --> 00:16:36,360
something new well understand the threat

533
00:16:36,360 --> 00:16:38,339
model the ttps the behaviors whatever it

534
00:16:38,339 --> 00:16:39,839
might be that we're basing our research

535
00:16:39,839 --> 00:16:41,699
on so one of the things for example

536
00:16:41,699 --> 00:16:43,500
hypothetically might be let's say we're

537
00:16:43,500 --> 00:16:44,519
trying to understand the difference

538
00:16:44,519 --> 00:16:46,680
between persistence mechanisms on

539
00:16:46,680 --> 00:16:48,839
Windows 10 and 11 and see whether or not

540
00:16:48,839 --> 00:16:49,980
an attack is trying to do that stuff

541
00:16:49,980 --> 00:16:52,139
honestly so the first thing we do is

542
00:16:52,139 --> 00:16:53,940
build a hypothe or a set of hypotheses

543
00:16:53,940 --> 00:16:55,380
these are basically the questions we

544
00:16:55,380 --> 00:16:56,399
want to answer with the investigation

545
00:16:56,399 --> 00:16:58,620
that we undertake and then what we do is

546
00:16:58,620 --> 00:17:00,120
we start hunting we'll initially hunt

547
00:17:00,120 --> 00:17:01,500
manually through the log sources all

548
00:17:01,500 --> 00:17:03,180
this data that we have and then we kind

549
00:17:03,180 --> 00:17:04,679
of like have this iterative automation

550
00:17:04,679 --> 00:17:06,720
process and we iterate on this process

551
00:17:06,720 --> 00:17:09,419
until the Hunt works as we intended to

552
00:17:09,419 --> 00:17:11,280
until we've also created the backlog of

553
00:17:11,280 --> 00:17:13,559
relevant events until we can basically

554
00:17:13,559 --> 00:17:14,880
understand whether or not the fleet

555
00:17:14,880 --> 00:17:16,319
itself is compromised

556
00:17:16,319 --> 00:17:17,640
and once we've done that and we're happy

557
00:17:17,640 --> 00:17:19,319
with where it is we'll kind of refactor

558
00:17:19,319 --> 00:17:20,640
the code and we'll re we'll actually

559
00:17:20,640 --> 00:17:22,260
write like a true detector that will run

560
00:17:22,260 --> 00:17:24,059
indefinitely into the future and this is

561
00:17:24,059 --> 00:17:26,099
where hunting is entirely automated at

562
00:17:26,099 --> 00:17:26,939
this point

563
00:17:26,939 --> 00:17:28,799
and we'll also write unit tests for it

564
00:17:28,799 --> 00:17:30,780
as I mentioned before and the idea here

565
00:17:30,780 --> 00:17:32,100
being that you should never have signal

566
00:17:32,100 --> 00:17:34,320
right you should always know and be able

567
00:17:34,320 --> 00:17:36,720
to attest that your detection Works in a

568
00:17:36,720 --> 00:17:38,940
way that you would expect it to work

569
00:17:38,940 --> 00:17:40,559
and this cycle continues but it

570
00:17:40,559 --> 00:17:41,940
basically means that we never hunt for

571
00:17:41,940 --> 00:17:43,500
something that we research before more

572
00:17:43,500 --> 00:17:46,260
than once and the only exception here is

573
00:17:46,260 --> 00:17:47,760
when we have to do it again in a new

574
00:17:47,760 --> 00:17:49,559
environment so for those of you in

575
00:17:49,559 --> 00:17:50,640
companies where you might acquire

576
00:17:50,640 --> 00:17:52,380
another company and that company might

577
00:17:52,380 --> 00:17:53,820
have some negative Legacy infrastructure

578
00:17:53,820 --> 00:17:55,740
or something it could be anything so

579
00:17:55,740 --> 00:17:57,539
redoing your hunts in this situation is

580
00:17:57,539 --> 00:17:59,160
actually a really good thing to do

581
00:17:59,160 --> 00:18:00,780
and it can help you basically understand

582
00:18:00,780 --> 00:18:02,340
whether or not the infrastructure you're

583
00:18:02,340 --> 00:18:04,020
about to kind of like on board is

584
00:18:04,020 --> 00:18:05,580
already compromised and pre-owned for

585
00:18:05,580 --> 00:18:06,960
all intents and purposes or if it's kind

586
00:18:06,960 --> 00:18:08,700
of like relatively clean

587
00:18:08,700 --> 00:18:10,740
and this and this model requires minimal

588
00:18:10,740 --> 00:18:12,179
setup and deployment because as long as

589
00:18:12,179 --> 00:18:13,860
we have eyes in the right places as long

590
00:18:13,860 --> 00:18:15,480
as we're ingesting the right log sources

591
00:18:15,480 --> 00:18:17,580
all of our detection handles the rest of

592
00:18:17,580 --> 00:18:19,200
this the entire detection pipeline kicks

593
00:18:19,200 --> 00:18:21,059
in and does the job for us which affects

594
00:18:21,059 --> 00:18:22,559
us kind of like outscale the amount of

595
00:18:22,559 --> 00:18:25,080
stuff that we're looking at

596
00:18:25,080 --> 00:18:26,580
so I've mentioned hunting a few times

597
00:18:26,580 --> 00:18:28,440
now and we actually have three kinds of

598
00:18:28,440 --> 00:18:29,760
hunting grounds I guess you can call

599
00:18:29,760 --> 00:18:31,559
them one of course is like this big

600
00:18:31,559 --> 00:18:34,440
repository of stored raw data which we

601
00:18:34,440 --> 00:18:37,380
hunt through with a sql-like interface

602
00:18:37,380 --> 00:18:38,880
um and we can also take the data out of

603
00:18:38,880 --> 00:18:40,559
here and process it into other tools if

604
00:18:40,559 --> 00:18:42,900
necessary and this is data like DNS

605
00:18:42,900 --> 00:18:45,059
logging file monitoring execution logs

606
00:18:45,059 --> 00:18:46,320
user Behavior there's a lot of stuff

607
00:18:46,320 --> 00:18:48,299
that kind of like falls into this bucket

608
00:18:48,299 --> 00:18:50,340
and all of these things stand in the

609
00:18:50,340 --> 00:18:51,900
historical record right and they're very

610
00:18:51,900 --> 00:18:54,299
very good for manually hunting through

611
00:18:54,299 --> 00:18:56,039
the second category because our

612
00:18:56,039 --> 00:18:58,260
detection generates sorry our detection

613
00:18:58,260 --> 00:19:00,480
system generates so many alerts we

614
00:19:00,480 --> 00:19:01,860
actually make a clear delineation

615
00:19:01,860 --> 00:19:04,140
between high confidence signaling and

616
00:19:04,140 --> 00:19:06,660
low confidence signaling and we actually

617
00:19:06,660 --> 00:19:08,280
spend a lot of time looking through this

618
00:19:08,280 --> 00:19:09,960
like potentially noisy mess of low

619
00:19:09,960 --> 00:19:11,820
confidence signals and this is actually

620
00:19:11,820 --> 00:19:13,799
where we see the creativity of analysts

621
00:19:13,799 --> 00:19:16,260
come into play so those who might enjoy

622
00:19:16,260 --> 00:19:18,419
a particular detection domain that we

623
00:19:18,419 --> 00:19:20,100
know has been researched or developed at

624
00:19:20,100 --> 00:19:22,320
some point in the past sorry at some

625
00:19:22,320 --> 00:19:24,000
point in the past or what kind of I

626
00:19:24,000 --> 00:19:25,620
typically gravitate to this kind of a

627
00:19:25,620 --> 00:19:26,880
domain

628
00:19:26,880 --> 00:19:28,919
and usually we have a few tricks up our

629
00:19:28,919 --> 00:19:30,480
sleeves to kind of like help sift

630
00:19:30,480 --> 00:19:32,340
through this data but there's no right

631
00:19:32,340 --> 00:19:33,660
or wrong way of doing this and that's

632
00:19:33,660 --> 00:19:34,919
kind of like a really important point

633
00:19:34,919 --> 00:19:37,620
but threat modeling definitely helps

634
00:19:37,620 --> 00:19:39,360
reduce the ambiguity and the complexity

635
00:19:39,360 --> 00:19:41,160
of this kind of data set

636
00:19:41,160 --> 00:19:42,900
and there's also natural variance here

637
00:19:42,900 --> 00:19:44,520
due to analyst creativity and we

638
00:19:44,520 --> 00:19:45,840
actually kind of want this we want to

639
00:19:45,840 --> 00:19:47,520
have diversity of thought and kind of

640
00:19:47,520 --> 00:19:49,500
approach here because we know that an

641
00:19:49,500 --> 00:19:52,020
attacker or the set of attackers will be

642
00:19:52,020 --> 00:19:53,520
you know doing exactly the same thing as

643
00:19:53,520 --> 00:19:55,100
what we want to do

644
00:19:55,100 --> 00:19:57,660
and once you can find stuff in the noisy

645
00:19:57,660 --> 00:19:59,340
data then you iterate on the existing

646
00:19:59,340 --> 00:20:00,660
detections to try and make them more

647
00:20:00,660 --> 00:20:02,160
accurate try and make them have a higher

648
00:20:02,160 --> 00:20:03,000
confidence

649
00:20:03,000 --> 00:20:05,220
and then finally we have the live Fleet

650
00:20:05,220 --> 00:20:07,740
and an agent particularly called

651
00:20:07,740 --> 00:20:08,700
um this is probably one of the most

652
00:20:08,700 --> 00:20:10,440
powerful Tools in our Network it's an

653
00:20:10,440 --> 00:20:12,660
agent-based system originally designed

654
00:20:12,660 --> 00:20:14,880
to do live forensics remotely

655
00:20:14,880 --> 00:20:16,559
um historically for example in some

656
00:20:16,559 --> 00:20:18,240
countries it was pretty challenging to

657
00:20:18,240 --> 00:20:20,340
get devices shipped to us to be able to

658
00:20:20,340 --> 00:20:22,380
image disks and stuff like this but

659
00:20:22,380 --> 00:20:24,299
since deploying we no longer have to you

660
00:20:24,299 --> 00:20:25,620
know wait for these this to be

661
00:20:25,620 --> 00:20:27,720
physically present with us and we've had

662
00:20:27,720 --> 00:20:28,980
it on the fleet for a while you know

663
00:20:28,980 --> 00:20:30,240
probably nearly a decade at this point

664
00:20:30,240 --> 00:20:31,260
sorry

665
00:20:31,260 --> 00:20:32,700
um It's relatively stable it runs on

666
00:20:32,700 --> 00:20:34,500
your windows the next Mac or the sort of

667
00:20:34,500 --> 00:20:35,820
stuff and we use it for all kinds of

668
00:20:35,820 --> 00:20:38,580
hunting and detection as well

669
00:20:38,580 --> 00:20:40,260
I'll talk a bit more about later on as

670
00:20:40,260 --> 00:20:42,240
well if I mentioned the the security

671
00:20:42,240 --> 00:20:44,039
surveillance team a few times and this

672
00:20:44,039 --> 00:20:45,780
is effectively our attempt at making a

673
00:20:45,780 --> 00:20:48,299
fully automated sock so everything sorry

674
00:20:48,299 --> 00:20:50,039
about 80 of everything that ends up in

675
00:20:50,039 --> 00:20:51,900
front of an analyst has been enriched

676
00:20:51,900 --> 00:20:53,640
with data of some kind

677
00:20:53,640 --> 00:20:55,440
and we also have a large proportion of

678
00:20:55,440 --> 00:20:56,820
incidents that are handled by the

679
00:20:56,820 --> 00:20:58,140
pipeline which are automatically

680
00:20:58,140 --> 00:21:01,740
resolved by your machines today and so

681
00:21:01,740 --> 00:21:03,299
for example if it's like a very mundane

682
00:21:03,299 --> 00:21:04,799
event which is either routine or not

683
00:21:04,799 --> 00:21:06,600
really concerning and all of this stuff

684
00:21:06,600 --> 00:21:08,039
will be resolved automatically by the

685
00:21:08,039 --> 00:21:09,480
pipeline

686
00:21:09,480 --> 00:21:11,520
we also split our time between basically

687
00:21:11,520 --> 00:21:13,860
two core sets of activities forty

688
00:21:13,860 --> 00:21:15,480
percent of our time is what we call

689
00:21:15,480 --> 00:21:17,640
tactical surveillance or operations and

690
00:21:17,640 --> 00:21:19,500
this is very task driven uh it's

691
00:21:19,500 --> 00:21:20,820
typically going to shift kind of model

692
00:21:20,820 --> 00:21:22,559
so that you can spend your series of

693
00:21:22,559 --> 00:21:24,480
time oh that was really loud sorry about

694
00:21:24,480 --> 00:21:25,320
that

695
00:21:25,320 --> 00:21:26,760
um so you can send the set amount of

696
00:21:26,760 --> 00:21:28,200
time kind of like doing this sort of

697
00:21:28,200 --> 00:21:29,340
stuff before you can take a bit of a

698
00:21:29,340 --> 00:21:31,140
rest

699
00:21:31,140 --> 00:21:32,340
um but this is kind of thing is like

700
00:21:32,340 --> 00:21:34,080
event triage you're hunting in

701
00:21:34,080 --> 00:21:36,360
pre-processed data at Fleet checks for

702
00:21:36,360 --> 00:21:37,679
new intelligence to see if it's actually

703
00:21:37,679 --> 00:21:39,840
been seen on the feet or not

704
00:21:39,840 --> 00:21:41,520
um things like that

705
00:21:41,520 --> 00:21:44,039
and the other 40 of our time is spent

706
00:21:44,039 --> 00:21:45,960
looking at technology-specific projects

707
00:21:45,960 --> 00:21:47,520
so Google has like a lot of Technologies

708
00:21:47,520 --> 00:21:48,720
as you can probably imagine right we

709
00:21:48,720 --> 00:21:51,179
have like Windows Linux Mac Android iOS

710
00:21:51,179 --> 00:21:54,000
like cloud like pretty much everything

711
00:21:54,000 --> 00:21:56,039
um so we divide the responsibilities for

712
00:21:56,039 --> 00:21:58,020
this 40 of time amongst the different

713
00:21:58,020 --> 00:22:00,179
platforms and this allows us to become

714
00:22:00,179 --> 00:22:02,820
very specialized in a given field and

715
00:22:02,820 --> 00:22:05,100
means that we can learn or try to learn

716
00:22:05,100 --> 00:22:06,299
everything that there is to know about

717
00:22:06,299 --> 00:22:08,640
for example Linux persistence or Mac

718
00:22:08,640 --> 00:22:10,200
persistence and all of how all of these

719
00:22:10,200 --> 00:22:12,360
platforms have like work together but we

720
00:22:12,360 --> 00:22:14,159
do treat all of these platforms more or

721
00:22:14,159 --> 00:22:15,600
less equally because we you know can't

722
00:22:15,600 --> 00:22:17,280
consider one to be more or less

723
00:22:17,280 --> 00:22:18,480
important than the other a lot of the

724
00:22:18,480 --> 00:22:20,580
time and we know from experience that

725
00:22:20,580 --> 00:22:22,440
our adversaries do the same like they

726
00:22:22,440 --> 00:22:23,940
have people who are highly specialized

727
00:22:23,940 --> 00:22:25,860
in one particular area if they need

728
00:22:25,860 --> 00:22:27,480
someone to go and I don't know like do

729
00:22:27,480 --> 00:22:29,159
dll stuff in Windows they'll go and get

730
00:22:29,159 --> 00:22:30,720
the person to do dll stuff on Windows we

731
00:22:30,720 --> 00:22:32,039
want to be able to replicate this kind

732
00:22:32,039 --> 00:22:34,020
of experience

733
00:22:34,020 --> 00:22:36,299
and we also work significantly on a meta

734
00:22:36,299 --> 00:22:37,980
level of things like you know Automation

735
00:22:37,980 --> 00:22:39,600
and testing within that respective field

736
00:22:39,600 --> 00:22:41,159
you know spending time on how many

737
00:22:41,159 --> 00:22:42,720
platforms we have how they change over

738
00:22:42,720 --> 00:22:45,120
time and how many people we need to

739
00:22:45,120 --> 00:22:46,679
engineer detection coverage in a

740
00:22:46,679 --> 00:22:49,140
specific platform and this is really all

741
00:22:49,140 --> 00:22:50,820
about you know determining how much time

742
00:22:50,820 --> 00:22:53,520
we set aside to do creative hunting

743
00:22:53,520 --> 00:22:55,140
that's what we want people to do most of

744
00:22:55,140 --> 00:22:57,360
the time and this helps keep us move

745
00:22:57,360 --> 00:22:58,559
forward and moving forward helps keep

746
00:22:58,559 --> 00:23:00,179
our detection detection posture kind of

747
00:23:00,179 --> 00:23:02,400
advancing and the key neither of you

748
00:23:02,400 --> 00:23:03,539
might be like hey well this is only 80

749
00:23:03,539 --> 00:23:05,220
and you're right obviously

750
00:23:05,220 --> 00:23:07,200
um the rest of that 20 of time is this

751
00:23:07,200 --> 00:23:09,539
kind of like Google wide um sort of

752
00:23:09,539 --> 00:23:11,039
thing where you can do projects on other

753
00:23:11,039 --> 00:23:12,960
teams like engage in community work all

754
00:23:12,960 --> 00:23:14,580
kinds of other stuff so we were looking

755
00:23:14,580 --> 00:23:16,799
about 80 of the time across full-time

756
00:23:16,799 --> 00:23:19,260
employee analysts

757
00:23:19,260 --> 00:23:20,580
but this might be the easiest to

758
00:23:20,580 --> 00:23:22,860
visualize with some examples like the

759
00:23:22,860 --> 00:23:25,080
hunting activities we do so

760
00:23:25,080 --> 00:23:26,580
um to get a look at some examples of

761
00:23:26,580 --> 00:23:28,020
that raw data set that I mentioned

762
00:23:28,020 --> 00:23:29,580
before and it's it you know the way that

763
00:23:29,580 --> 00:23:31,440
we interface with this is through an SQL

764
00:23:31,440 --> 00:23:33,419
like system that Google invented

765
00:23:33,419 --> 00:23:34,679
um it's very much like a tool we

766
00:23:34,679 --> 00:23:36,000
actually make publicly available called

767
00:23:36,000 --> 00:23:38,880
bigquery and bigquery is really good at

768
00:23:38,880 --> 00:23:40,799
tasks like this because it is basically

769
00:23:40,799 --> 00:23:42,360
a means of massive massively

770
00:23:42,360 --> 00:23:45,480
parallelizing single query tasks across

771
00:23:45,480 --> 00:23:47,820
huge volumes of computing and then you

772
00:23:47,820 --> 00:23:49,320
know aggregating the results back very

773
00:23:49,320 --> 00:23:50,159
quickly

774
00:23:50,159 --> 00:23:51,840
and this means that we can search for

775
00:23:51,840 --> 00:23:53,580
things like executions or of a

776
00:23:53,580 --> 00:23:55,559
particular binary or a command string

777
00:23:55,559 --> 00:23:58,740
across all of Google across all time and

778
00:23:58,740 --> 00:24:00,240
we receive the results in like a few

779
00:24:00,240 --> 00:24:01,620
seconds basically

780
00:24:01,620 --> 00:24:03,240
but anyway when we're hunting the very

781
00:24:03,240 --> 00:24:04,860
first thing that we do is kind of like

782
00:24:04,860 --> 00:24:06,419
build a set of hypotheses so let's look

783
00:24:06,419 --> 00:24:08,400
at an example of that

784
00:24:08,400 --> 00:24:10,320
let's say we have a hypothesis of okay

785
00:24:10,320 --> 00:24:12,240
we have an attacker using a given domain

786
00:24:12,240 --> 00:24:13,620
for command and control

787
00:24:13,620 --> 00:24:14,820
so the very first thing we do is

788
00:24:14,820 --> 00:24:16,260
consider like what what does this look

789
00:24:16,260 --> 00:24:17,760
like like what might the attacker do

790
00:24:17,760 --> 00:24:19,980
with this domain what might be C what

791
00:24:19,980 --> 00:24:21,419
kind of threat intelligence do we have

792
00:24:21,419 --> 00:24:23,940
to support a specific technique or the

793
00:24:23,940 --> 00:24:25,380
specific domain

794
00:24:25,380 --> 00:24:27,900
and then we can compare the DNS requests

795
00:24:27,900 --> 00:24:29,400
that are happening and have happened on

796
00:24:29,400 --> 00:24:30,960
the Google corporate network of which we

797
00:24:30,960 --> 00:24:32,460
have all of them we have every DNS

798
00:24:32,460 --> 00:24:34,559
that's ever been sorry every DNS request

799
00:24:34,559 --> 00:24:36,360
that's ever been issued at Google since

800
00:24:36,360 --> 00:24:38,159
about September 2009 and keep all of

801
00:24:38,159 --> 00:24:40,140
this and using this data we can kind of

802
00:24:40,140 --> 00:24:42,240
like find hits to this potentially bad

803
00:24:42,240 --> 00:24:43,440
domain

804
00:24:43,440 --> 00:24:45,000
and this is the kind of hunt that we

805
00:24:45,000 --> 00:24:46,799
probably do once initially and then we

806
00:24:46,799 --> 00:24:48,299
automate and kind of like you know kick

807
00:24:48,299 --> 00:24:49,740
it into the pipeline so it does all this

808
00:24:49,740 --> 00:24:51,380
stuff for us

809
00:24:51,380 --> 00:24:53,520
another example looking at the live

810
00:24:53,520 --> 00:24:55,320
Fleet this time using go as I mentioned

811
00:24:55,320 --> 00:24:56,159
before

812
00:24:56,159 --> 00:24:57,840
there's a few things that we might like

813
00:24:57,840 --> 00:24:59,880
to do particularly when we're trying to

814
00:24:59,880 --> 00:25:02,039
onboard a newly acquired environment

815
00:25:02,039 --> 00:25:03,120
that we might have just bought something

816
00:25:03,120 --> 00:25:04,020
like that

817
00:25:04,020 --> 00:25:05,280
so the very first thing we'll do is

818
00:25:05,280 --> 00:25:06,780
typically deploy amongst other things

819
00:25:06,780 --> 00:25:08,520
ger and we have like this basic

820
00:25:08,520 --> 00:25:10,260
hypothesis right maybe the attackers if

821
00:25:10,260 --> 00:25:12,059
they were there left something really

822
00:25:12,059 --> 00:25:13,799
common behind that we can find

823
00:25:13,799 --> 00:25:15,299
and this might be for example something

824
00:25:15,299 --> 00:25:17,039
like an after a Cron job so for those

825
00:25:17,039 --> 00:25:18,960
who may be familiar with this these kind

826
00:25:18,960 --> 00:25:20,400
of tooling you use to schedule automated

827
00:25:20,400 --> 00:25:22,799
tasks and they're pretty small files you

828
00:25:22,799 --> 00:25:24,419
can collect them across the entire fleet

829
00:25:24,419 --> 00:25:27,179
and process them with some some code

830
00:25:27,179 --> 00:25:29,039
um and basically understand what's been

831
00:25:29,039 --> 00:25:31,260
executing as scheduled tasks in this new

832
00:25:31,260 --> 00:25:33,000
environment and then once you have this

833
00:25:33,000 --> 00:25:34,980
big data set you typically start looking

834
00:25:34,980 --> 00:25:36,779
at the outliers because there's

835
00:25:36,779 --> 00:25:38,220
obviously like stuff in the noise still

836
00:25:38,220 --> 00:25:39,600
but the outliers are where you really

837
00:25:39,600 --> 00:25:41,760
find like the the clear signs of Badness

838
00:25:41,760 --> 00:25:43,919
here and it's pretty basic but honestly

839
00:25:43,919 --> 00:25:45,960
about nine out of ten times it works

840
00:25:45,960 --> 00:25:48,480
reasonably well

841
00:25:48,480 --> 00:25:50,220
and another example you might see is

842
00:25:50,220 --> 00:25:52,559
like launch demons on Mac so this this

843
00:25:52,559 --> 00:25:53,940
is where detections can come a bit more

844
00:25:53,940 --> 00:25:56,100
complicated so launch demons are scripts

845
00:25:56,100 --> 00:25:57,480
which automatically manage system

846
00:25:57,480 --> 00:25:59,700
processors on OS X

847
00:25:59,700 --> 00:26:01,080
um and attackers might use these to

848
00:26:01,080 --> 00:26:03,299
maintain persistence on a device and

849
00:26:03,299 --> 00:26:04,919
generally if we're looking at server

850
00:26:04,919 --> 00:26:06,120
infrastructure here for malicious

851
00:26:06,120 --> 00:26:08,580
software like this kind of a search can

852
00:26:08,580 --> 00:26:09,600
actually work pretty well because

853
00:26:09,600 --> 00:26:12,000
servers are like usually well maintained

854
00:26:12,000 --> 00:26:13,620
you kind of like know exactly what

855
00:26:13,620 --> 00:26:14,580
should be running on them they're

856
00:26:14,580 --> 00:26:16,080
typically you know single or limited

857
00:26:16,080 --> 00:26:18,299
purpose but once you get to end user

858
00:26:18,299 --> 00:26:19,679
devices they become this becomes

859
00:26:19,679 --> 00:26:21,600
significantly less clear you know people

860
00:26:21,600 --> 00:26:23,580
will install just about anything on

861
00:26:23,580 --> 00:26:25,620
their laptops and as a result you can

862
00:26:25,620 --> 00:26:27,360
end up with way too many launch demons

863
00:26:27,360 --> 00:26:29,520
to review manually and a lot of the

864
00:26:29,520 --> 00:26:30,900
results aren't actually that interesting

865
00:26:30,900 --> 00:26:32,580
either you might just find a lot of like

866
00:26:32,580 --> 00:26:34,380
adware for example which is that AOK you

867
00:26:34,380 --> 00:26:35,700
should do something about but it's not

868
00:26:35,700 --> 00:26:36,960
like the APT group that we're looking

869
00:26:36,960 --> 00:26:37,799
for

870
00:26:37,799 --> 00:26:39,360
but automation can help us out here too

871
00:26:39,360 --> 00:26:42,080
as you can probably imagine

872
00:26:42,179 --> 00:26:45,179
so another way Google attempts to tackle

873
00:26:45,179 --> 00:26:47,100
this detection and scale problem is

874
00:26:47,100 --> 00:26:48,900
through a tool called Deja this

875
00:26:48,900 --> 00:26:49,919
for those of you who are fans of

876
00:26:49,919 --> 00:26:51,360
Resident Evil I'm aware of what the logo

877
00:26:51,360 --> 00:26:52,980
looks like

878
00:26:52,980 --> 00:26:53,760
um

879
00:26:53,760 --> 00:26:55,980
its name itself is a portmento of deja

880
00:26:55,980 --> 00:26:57,360
vu and disassembly

881
00:26:57,360 --> 00:27:00,779
Deja this is a system developed by tag

882
00:27:00,779 --> 00:27:02,400
Google's threatened threat intelligence

883
00:27:02,400 --> 00:27:04,320
group or the threat analysis group and

884
00:27:04,320 --> 00:27:07,679
the Google Dynamics Team amongst others

885
00:27:07,679 --> 00:27:10,080
um it's designed to tackle a few of the

886
00:27:10,080 --> 00:27:11,760
really difficult problems when dealing

887
00:27:11,760 --> 00:27:14,580
with binary analysis at scale today

888
00:27:14,580 --> 00:27:16,740
and part of this is that first thing we

889
00:27:16,740 --> 00:27:18,000
need to talk about reverse engineering

890
00:27:18,000 --> 00:27:20,159
and reverse engineering is really hard

891
00:27:20,159 --> 00:27:22,679
and really expensive to apply for

892
00:27:22,679 --> 00:27:24,120
example like a single module of the

893
00:27:24,120 --> 00:27:26,220
flame malware contains about 40 000

894
00:27:26,220 --> 00:27:27,960
functions and Flames nearly a decade old

895
00:27:27,960 --> 00:27:29,880
now so even if you could reverse

896
00:27:29,880 --> 00:27:31,919
engineer one function every 60 seconds

897
00:27:31,919 --> 00:27:34,320
which isn't really realistic the entire

898
00:27:34,320 --> 00:27:35,880
module will take about a month to

899
00:27:35,880 --> 00:27:37,440
understand and there's obviously all the

900
00:27:37,440 --> 00:27:38,640
other modules as well you have to go

901
00:27:38,640 --> 00:27:39,360
through

902
00:27:39,360 --> 00:27:40,980
so the learning curve here is like

903
00:27:40,980 --> 00:27:42,779
really steep the knowledge even required

904
00:27:42,779 --> 00:27:44,940
to start reversing is pretty high

905
00:27:44,940 --> 00:27:47,159
and so when we're talking about binary

906
00:27:47,159 --> 00:27:49,500
detection and binary analysis at scale

907
00:27:49,500 --> 00:27:50,880
we have to kind of acknowledge that

908
00:27:50,880 --> 00:27:52,500
reverse engineering is a scalpel that we

909
00:27:52,500 --> 00:27:55,679
have to apply very judiciously

910
00:27:55,679 --> 00:27:57,960
so anyway what stage of this so these

911
00:27:57,960 --> 00:27:59,700
are this is basically a similarity

912
00:27:59,700 --> 00:28:02,520
engine for functions and executables

913
00:28:02,520 --> 00:28:04,260
creates a met like a set of meta

914
00:28:04,260 --> 00:28:05,940
information associated with functions

915
00:28:05,940 --> 00:28:07,919
things like function names like specific

916
00:28:07,919 --> 00:28:10,200
attacker techniques common cryptographic

917
00:28:10,200 --> 00:28:12,000
routines all this kind of stuff and it's

918
00:28:12,000 --> 00:28:14,460
made easily discoverable to any analyst

919
00:28:14,460 --> 00:28:15,659
who might need it

920
00:28:15,659 --> 00:28:17,700
and it also earns new information every

921
00:28:17,700 --> 00:28:19,740
day it can be used to find names and

922
00:28:19,740 --> 00:28:23,100
uses functions or label entire sets of

923
00:28:23,100 --> 00:28:24,720
executables just to determine for

924
00:28:24,720 --> 00:28:26,700
example if a particular set of functions

925
00:28:26,700 --> 00:28:29,279
is a common everyday part of openssl for

926
00:28:29,279 --> 00:28:30,120
example that we don't need to

927
00:28:30,120 --> 00:28:31,679
investigate

928
00:28:31,679 --> 00:28:33,840
and every binary that enters the Google

929
00:28:33,840 --> 00:28:36,000
binary analysis pipeline is also

930
00:28:36,000 --> 00:28:38,520
available and processed by Deja this

931
00:28:38,520 --> 00:28:40,260
so this basically provides us a

932
00:28:40,260 --> 00:28:42,000
constantly updated reference of how

933
00:28:42,000 --> 00:28:43,440
binaries are connected how they relate

934
00:28:43,440 --> 00:28:44,820
to each other

935
00:28:44,820 --> 00:28:47,039
and we can also approach Deja this from

936
00:28:47,039 --> 00:28:49,380
another angle so we can use data this to

937
00:28:49,380 --> 00:28:51,179
quickly pivot on a single function in

938
00:28:51,179 --> 00:28:53,520
highly variant malware so if we can find

939
00:28:53,520 --> 00:28:55,320
a particularly common function through

940
00:28:55,320 --> 00:28:58,380
disassembly which we use judiciously and

941
00:28:58,380 --> 00:29:00,179
give Deja this a sample hash and a

942
00:29:00,179 --> 00:29:02,400
function offset it will spread out and

943
00:29:02,400 --> 00:29:04,380
find all the variants available in its

944
00:29:04,380 --> 00:29:06,659
data store over all time and label them

945
00:29:06,659 --> 00:29:08,760
as related known Badness to the function

946
00:29:08,760 --> 00:29:11,039
the function that we're looking at

947
00:29:11,039 --> 00:29:13,080
and then automatically find the label

948
00:29:13,080 --> 00:29:15,120
all future binaries that it sees for the

949
00:29:15,120 --> 00:29:16,740
same malware fan money that enters the

950
00:29:16,740 --> 00:29:18,659
pipeline at a future date

951
00:29:18,659 --> 00:29:20,399
but it doesn't necessarily need this

952
00:29:20,399 --> 00:29:22,440
human step we actually once it's

953
00:29:22,440 --> 00:29:24,480
actually seen enough kind of types of

954
00:29:24,480 --> 00:29:26,640
Badness of a certain kind it'll start

955
00:29:26,640 --> 00:29:28,860
formulating its own ideas about how

956
00:29:28,860 --> 00:29:30,419
binaries are connect connected and

957
00:29:30,419 --> 00:29:32,220
related together

958
00:29:32,220 --> 00:29:34,260
if a new never-before-seen binary is

959
00:29:34,260 --> 00:29:35,820
linked to a bunch of existing known

960
00:29:35,820 --> 00:29:37,440
through actor tooling via function

961
00:29:37,440 --> 00:29:39,360
similarity for example that you'll

962
00:29:39,360 --> 00:29:40,919
automatically generate a new detection

963
00:29:40,919 --> 00:29:43,200
rule out the back of that our pipeline

964
00:29:43,200 --> 00:29:44,640
can kind of see this Rule and propagate

965
00:29:44,640 --> 00:29:45,899
it through all of the log data that we

966
00:29:45,899 --> 00:29:47,460
have to service a new detection that

967
00:29:47,460 --> 00:29:48,840
didn't exist before

968
00:29:48,840 --> 00:29:51,000
and all of this is really designed to

969
00:29:51,000 --> 00:29:53,760
save time effort resources of the humans

970
00:29:53,760 --> 00:29:55,080
involved remember humans are the key

971
00:29:55,080 --> 00:29:57,600
part of all of this

972
00:29:57,600 --> 00:29:59,220
I don't have a huge amount of time to go

973
00:29:59,220 --> 00:30:00,840
into like War Stories using Deja this

974
00:30:00,840 --> 00:30:03,120
but I will leave with one which is how

975
00:30:03,120 --> 00:30:04,919
it was able to attribute a sample of now

976
00:30:04,919 --> 00:30:07,500
the now Infamous wannacry so back in May

977
00:30:07,500 --> 00:30:09,659
2017 uh the one of crime malware was

978
00:30:09,659 --> 00:30:12,299
really hitting in full force fire

979
00:30:12,299 --> 00:30:14,340
Eternal blue exploitation of you know

980
00:30:14,340 --> 00:30:16,799
unpatched Windows systems worldwide I

981
00:30:16,799 --> 00:30:18,120
imagine that many people in this room

982
00:30:18,120 --> 00:30:19,260
are very familiar with it given the

983
00:30:19,260 --> 00:30:20,580
impact here

984
00:30:20,580 --> 00:30:22,740
but one of the questions that actually

985
00:30:22,740 --> 00:30:23,880
for those who aren't familiar want to

986
00:30:23,880 --> 00:30:25,200
cry was ransomware right it's like you

987
00:30:25,200 --> 00:30:27,179
encrypt your stuff demands payment for

988
00:30:27,179 --> 00:30:30,000
their safe return in theory

989
00:30:30,000 --> 00:30:31,440
but one of the questions I was asked

990
00:30:31,440 --> 00:30:33,000
very quickly was like what's the origin

991
00:30:33,000 --> 00:30:34,799
of wannacry and for those of you who

992
00:30:34,799 --> 00:30:36,059
might be in threat intelligence you

993
00:30:36,059 --> 00:30:37,380
might know that attribution is like

994
00:30:37,380 --> 00:30:39,419
really really hard to get right

995
00:30:39,419 --> 00:30:41,520
it's really expensive as well it often

996
00:30:41,520 --> 00:30:43,440
requires a large knowledge base of like

997
00:30:43,440 --> 00:30:46,200
threat actor ttps time patience to

998
00:30:46,200 --> 00:30:47,580
reverse engineer all of this stuff

999
00:30:47,580 --> 00:30:49,500
before you can come to a good conclusion

1000
00:30:49,500 --> 00:30:51,179
and even with that conclusion it's

1001
00:30:51,179 --> 00:30:52,919
difficult to be sure

1002
00:30:52,919 --> 00:30:56,399
on the 15th of May 2017 Neil Metro tag

1003
00:30:56,399 --> 00:30:57,659
posted this kind of like somewhat

1004
00:30:57,659 --> 00:30:59,760
cryptic tweet with the hashtag wanna

1005
00:30:59,760 --> 00:31:01,799
Crypt a hashtag a one equipped

1006
00:31:01,799 --> 00:31:03,840
attribution hashtag so like what did he

1007
00:31:03,840 --> 00:31:06,860
mean with this tweet

1008
00:31:06,899 --> 00:31:08,399
he was actually posting the results from

1009
00:31:08,399 --> 00:31:11,279
data this so they should analyze Wanna

1010
00:31:11,279 --> 00:31:14,220
Cry and as well as you know malware from

1011
00:31:14,220 --> 00:31:15,840
many many other operations they had seen

1012
00:31:15,840 --> 00:31:18,120
and it's normal operation mode it was

1013
00:31:18,120 --> 00:31:20,760
able to find an 81 similarity between

1014
00:31:20,760 --> 00:31:23,399
the functions shared in wannacry with

1015
00:31:23,399 --> 00:31:25,559
canopy the back door malware that was

1016
00:31:25,559 --> 00:31:28,140
linked in 2015 to a Lazarus group also

1017
00:31:28,140 --> 00:31:30,240
known as North Korea and following

1018
00:31:30,240 --> 00:31:32,820
Neil's tweet um Kaspersky Symantec and a

1019
00:31:32,820 --> 00:31:34,620
bunch of others went public to also

1020
00:31:34,620 --> 00:31:36,240
State their opinions of strong links

1021
00:31:36,240 --> 00:31:38,700
between wannacry and North Korea

1022
00:31:38,700 --> 00:31:41,399
but the the ability to quickly pivot on

1023
00:31:41,399 --> 00:31:42,840
this information allows us to understand

1024
00:31:42,840 --> 00:31:44,820
our adversaries quickly and it means

1025
00:31:44,820 --> 00:31:46,440
that we can also understand the motives

1026
00:31:46,440 --> 00:31:50,000
behind the threats that we see daily

1027
00:31:50,760 --> 00:31:52,440
another technology we use to try and

1028
00:31:52,440 --> 00:31:53,880
Tackle this detection and scale problem

1029
00:31:53,880 --> 00:31:56,220
is the notion of State collection and

1030
00:31:56,220 --> 00:31:58,020
state reconstruction across the fleet

1031
00:31:58,020 --> 00:31:59,399
the fleet Google's corporate

1032
00:31:59,399 --> 00:32:01,260
infrastructure

1033
00:32:01,260 --> 00:32:03,779
and this is basically about being able

1034
00:32:03,779 --> 00:32:05,399
to recall the state of all of our

1035
00:32:05,399 --> 00:32:07,679
machines at all points in time and the

1036
00:32:07,679 --> 00:32:08,820
kind of state information we're

1037
00:32:08,820 --> 00:32:10,679
interested in is things like process

1038
00:32:10,679 --> 00:32:13,559
executions Network flow disk operations

1039
00:32:13,559 --> 00:32:15,600
all of this kind of stuff and we want to

1040
00:32:15,600 --> 00:32:17,220
record it in such a way that we can

1041
00:32:17,220 --> 00:32:19,440
reconstruct for a point in time the

1042
00:32:19,440 --> 00:32:21,360
state of the machine

1043
00:32:21,360 --> 00:32:23,399
and this process is most often seen in

1044
00:32:23,399 --> 00:32:25,440
digital forensics and usually applied

1045
00:32:25,440 --> 00:32:27,539
like ad hoc during these kinds of

1046
00:32:27,539 --> 00:32:29,039
Investigations and it typically involves

1047
00:32:29,039 --> 00:32:31,380
things like memory and disk acquisition

1048
00:32:31,380 --> 00:32:33,779
and in this case it doesn't kind of

1049
00:32:33,779 --> 00:32:35,279
prevent itself to solving the detection

1050
00:32:35,279 --> 00:32:36,120
problem

1051
00:32:36,120 --> 00:32:37,679
but it's still actually an incredibly

1052
00:32:37,679 --> 00:32:39,840
valuable system because it kind of gives

1053
00:32:39,840 --> 00:32:41,340
us the ability to understand in real

1054
00:32:41,340 --> 00:32:42,840
time the state of the fleet you know

1055
00:32:42,840 --> 00:32:45,179
what's executing who executed it how

1056
00:32:45,179 --> 00:32:46,559
they affect the network stack for

1057
00:32:46,559 --> 00:32:48,539
example how they relate to each other

1058
00:32:48,539 --> 00:32:50,100
and so as a result we built the system

1059
00:32:50,100 --> 00:32:52,260
that can do this the idea being that

1060
00:32:52,260 --> 00:32:53,880
maintaining the state for our entire

1061
00:32:53,880 --> 00:32:55,860
fleet in real time could be a solvable

1062
00:32:55,860 --> 00:32:58,140
problem with the massive caveat of

1063
00:32:58,140 --> 00:32:59,940
providing you have a modest amount of

1064
00:32:59,940 --> 00:33:02,640
computing and memory spare

1065
00:33:02,640 --> 00:33:04,559
and we call this the shadow machine but

1066
00:33:04,559 --> 00:33:06,360
what we really mean is that some kind of

1067
00:33:06,360 --> 00:33:08,520
an abstract virtual machine we actually

1068
00:33:08,520 --> 00:33:10,140
borrowed some Concepts from virtual

1069
00:33:10,140 --> 00:33:12,179
machine introspection as part of this

1070
00:33:12,179 --> 00:33:14,700
abstract VM architecture and with VMI

1071
00:33:14,700 --> 00:33:16,320
guest applications run on a guest

1072
00:33:16,320 --> 00:33:18,419
operating system this generates events

1073
00:33:18,419 --> 00:33:20,580
which are observed by a monitor layer at

1074
00:33:20,580 --> 00:33:22,860
the host layer for example so first of

1075
00:33:22,860 --> 00:33:24,600
all we get input from the fleet we know

1076
00:33:24,600 --> 00:33:26,460
it comes from all of our platforms from

1077
00:33:26,460 --> 00:33:28,919
like a variety of detection agents and

1078
00:33:28,919 --> 00:33:30,299
some of these agents we write ourselves

1079
00:33:30,299 --> 00:33:32,519
and but also some of these kind of like

1080
00:33:32,519 --> 00:33:33,960
things we can ingest come from

1081
00:33:33,960 --> 00:33:35,640
third-party tools as well

1082
00:33:35,640 --> 00:33:38,399
but for example on OS X we have a binary

1083
00:33:38,399 --> 00:33:40,740
agent called Santa and Santa is an open

1084
00:33:40,740 --> 00:33:42,419
source allow listing tool written by

1085
00:33:42,419 --> 00:33:44,519
Google if you're interested we also open

1086
00:33:44,519 --> 00:33:45,840
source the allow listing management

1087
00:33:45,840 --> 00:33:47,760
platform upload

1088
00:33:47,760 --> 00:33:48,840
um and in Linux we use things like

1089
00:33:48,840 --> 00:33:50,279
Integrity measurement architecture or

1090
00:33:50,279 --> 00:33:53,460
IMA and which we get via order d

1091
00:33:53,460 --> 00:33:54,960
and so the system monitor receives all

1092
00:33:54,960 --> 00:33:57,120
these events as input it starts pattern

1093
00:33:57,120 --> 00:33:58,500
matching to determine if the input

1094
00:33:58,500 --> 00:34:00,960
depends on the host site or not and this

1095
00:34:00,960 --> 00:34:02,519
bit this is basically to try and decide

1096
00:34:02,519 --> 00:34:04,019
whether or not to send the input to an

1097
00:34:04,019 --> 00:34:05,460
abstract interpreter

1098
00:34:05,460 --> 00:34:07,260
and the abstract interpreter is

1099
00:34:07,260 --> 00:34:08,820
responsible for modeling the effects of

1100
00:34:08,820 --> 00:34:11,099
the input on the host state

1101
00:34:11,099 --> 00:34:13,980
and we kind of use this in things like

1102
00:34:13,980 --> 00:34:16,619
you know compiler optimization program

1103
00:34:16,619 --> 00:34:18,960
analysis as well but in that case we use

1104
00:34:18,960 --> 00:34:20,399
them to understand the effects of the

1105
00:34:20,399 --> 00:34:21,659
program without running it here we're

1106
00:34:21,659 --> 00:34:24,300
trying to do it with a machine

1107
00:34:24,300 --> 00:34:25,560
so yeah we're trying to understand the

1108
00:34:25,560 --> 00:34:26,940
effect of the event without re-running

1109
00:34:26,940 --> 00:34:28,560
the entire system and in our in our

1110
00:34:28,560 --> 00:34:30,540
monitor the state could be considered

1111
00:34:30,540 --> 00:34:32,339
almost as like a graph where State

1112
00:34:32,339 --> 00:34:34,320
changes are adding or deleting vertices

1113
00:34:34,320 --> 00:34:35,580
on this graph

1114
00:34:35,580 --> 00:34:37,500
and we know all of the state changes and

1115
00:34:37,500 --> 00:34:39,418
can play them forward and backwards as

1116
00:34:39,418 --> 00:34:41,820
the state changes over time and the

1117
00:34:41,820 --> 00:34:43,260
abstract interpreters I mentioned before

1118
00:34:43,260 --> 00:34:44,940
can freely call other abstract

1119
00:34:44,940 --> 00:34:46,500
interpreters so we can kind of like have

1120
00:34:46,500 --> 00:34:48,239
this multi-layered kind of a stack of

1121
00:34:48,239 --> 00:34:50,460
events in many ways

1122
00:34:50,460 --> 00:34:52,260
so the idea being if a host change

1123
00:34:52,260 --> 00:34:54,480
happens the change or state change is

1124
00:34:54,480 --> 00:34:56,699
recorded and the end result is this

1125
00:34:56,699 --> 00:34:58,619
detailed state of a real machine that we

1126
00:34:58,619 --> 00:35:00,660
can almost consider to be a shadow

1127
00:35:00,660 --> 00:35:02,640
and we can query this in real time using

1128
00:35:02,640 --> 00:35:04,500
a query language invented specifically

1129
00:35:04,500 --> 00:35:06,960
for this purpose

1130
00:35:06,960 --> 00:35:09,300
so while processing and recording State

1131
00:35:09,300 --> 00:35:10,740
changes we have the opportunity to

1132
00:35:10,740 --> 00:35:12,960
evaluate them against the rule set and

1133
00:35:12,960 --> 00:35:14,280
this is probably the most important

1134
00:35:14,280 --> 00:35:15,599
usage of the system for the detection

1135
00:35:15,599 --> 00:35:17,880
team so the idea being that with minimal

1136
00:35:17,880 --> 00:35:19,980
code we can describe a state change of

1137
00:35:19,980 --> 00:35:21,720
interest and this might be for example

1138
00:35:21,720 --> 00:35:24,119
bash forking tools normally associated

1139
00:35:24,119 --> 00:35:25,440
with reconnaissance right and a new

1140
00:35:25,440 --> 00:35:26,760
detection is born

1141
00:35:26,760 --> 00:35:28,680
but we can put more constraints here too

1142
00:35:28,680 --> 00:35:30,660
so we could say that it matters that in

1143
00:35:30,660 --> 00:35:32,040
this kind of like flow of things there's

1144
00:35:32,040 --> 00:35:34,680
also netflow in this execution so for

1145
00:35:34,680 --> 00:35:37,260
example I bash my execute it might Fork

1146
00:35:37,260 --> 00:35:38,820
python which then communicates over the

1147
00:35:38,820 --> 00:35:40,800
network and then that might Fork to do

1148
00:35:40,800 --> 00:35:42,240
some kind of like Recon command or

1149
00:35:42,240 --> 00:35:43,500
something like that and this might even

1150
00:35:43,500 --> 00:35:45,359
be an even higher priority signal than

1151
00:35:45,359 --> 00:35:46,920
the one I mentioned before

1152
00:35:46,920 --> 00:35:48,540
so the graph on the slide here is an

1153
00:35:48,540 --> 00:35:50,760
example extraction of a small section of

1154
00:35:50,760 --> 00:35:52,800
the state fired from a detection rule

1155
00:35:52,800 --> 00:35:54,960
Written In This Very system where the

1156
00:35:54,960 --> 00:35:56,820
rule is described in a few handfuls of

1157
00:35:56,820 --> 00:35:59,280
lines of code and it's designed to look

1158
00:35:59,280 --> 00:36:00,780
for a reconnectivity congruent with

1159
00:36:00,780 --> 00:36:02,640
someone who successfully gets a reverse

1160
00:36:02,640 --> 00:36:03,839
shell

1161
00:36:03,839 --> 00:36:05,040
but there's one thing I didn't mention

1162
00:36:05,040 --> 00:36:06,780
about this Rule and the fact and it's

1163
00:36:06,780 --> 00:36:08,220
basically the fact that we don't have to

1164
00:36:08,220 --> 00:36:10,020
Define what a reverse shell looks like

1165
00:36:10,020 --> 00:36:12,000
we don't have to say like oh a reverse

1166
00:36:12,000 --> 00:36:12,839
shell probably starts with someone

1167
00:36:12,839 --> 00:36:14,339
running like python hyphen C import

1168
00:36:14,339 --> 00:36:16,260
socket whatever or like bashes piping

1169
00:36:16,260 --> 00:36:18,060
stuff around and we didn't describe any

1170
00:36:18,060 --> 00:36:20,400
of that all we described is that if we

1171
00:36:20,400 --> 00:36:22,560
see any new process execution that

1172
00:36:22,560 --> 00:36:25,200
results in outbound net flow that Forks

1173
00:36:25,200 --> 00:36:27,359
a Recon tool of some kind like bin mount

1174
00:36:27,359 --> 00:36:29,280
for example then that's of interest to

1175
00:36:29,280 --> 00:36:30,420
us

1176
00:36:30,420 --> 00:36:31,859
and once we write this kind of a

1177
00:36:31,859 --> 00:36:33,660
detection then we can run it across the

1178
00:36:33,660 --> 00:36:35,940
entire fleet of Shadow machines for

1179
00:36:35,940 --> 00:36:37,460
current and historical State information

1180
00:36:37,460 --> 00:36:39,540
and this basically means that we can

1181
00:36:39,540 --> 00:36:41,640
find any machine that has previously

1182
00:36:41,640 --> 00:36:43,260
exhibited this kind of behavior and the

1183
00:36:43,260 --> 00:36:44,339
result of this kind of search is

1184
00:36:44,339 --> 00:36:46,859
actually very very high fidelity

1185
00:36:46,859 --> 00:36:48,540
foreign

1186
00:36:48,540 --> 00:36:50,520
so to return kind of like fundamentally

1187
00:36:50,520 --> 00:36:52,680
to an existential question I mean like

1188
00:36:52,680 --> 00:36:53,880
what's coming next to this model we've

1189
00:36:53,880 --> 00:36:55,500
got some stuff like what do we think is

1190
00:36:55,500 --> 00:36:56,579
going to happen next

1191
00:36:56,579 --> 00:36:58,619
and I think the the reality is like the

1192
00:36:58,619 --> 00:37:00,119
more complexity we build into our

1193
00:37:00,119 --> 00:37:01,680
systems the more we need to understand

1194
00:37:01,680 --> 00:37:03,960
and acknowledge that humans won't be

1195
00:37:03,960 --> 00:37:05,640
able to defend them forever the

1196
00:37:05,640 --> 00:37:07,680
complexity is rapidly outstanding out

1197
00:37:07,680 --> 00:37:09,359
expanding what we are capable of people

1198
00:37:09,359 --> 00:37:11,280
as doing

1199
00:37:11,280 --> 00:37:13,200
so as a result kind of by building these

1200
00:37:13,200 --> 00:37:15,960
self-defending systems using AI ML and

1201
00:37:15,960 --> 00:37:17,460
all of this stuff might be the best path

1202
00:37:17,460 --> 00:37:19,560
for us but this takes you know research

1203
00:37:19,560 --> 00:37:21,540
development experimentation proof

1204
00:37:21,540 --> 00:37:23,700
metrics testing many many other things

1205
00:37:23,700 --> 00:37:25,619
and it really isn't easy I'm definitely

1206
00:37:25,619 --> 00:37:26,940
not acknowledging that this is you know

1207
00:37:26,940 --> 00:37:28,560
an easy task going oh just you can do

1208
00:37:28,560 --> 00:37:30,000
this no problem

1209
00:37:30,000 --> 00:37:31,740
but it means in some ways that we

1210
00:37:31,740 --> 00:37:33,180
actually are putting ourselves out of a

1211
00:37:33,180 --> 00:37:35,040
job right

1212
00:37:35,040 --> 00:37:37,079
perhaps we'll move into kind of like new

1213
00:37:37,079 --> 00:37:38,400
and more interesting rules of actually

1214
00:37:38,400 --> 00:37:40,079
teaching machines how to do this

1215
00:37:40,079 --> 00:37:41,760
themselves but I mean realistically the

1216
00:37:41,760 --> 00:37:44,339
only time we'll tell here

1217
00:37:44,339 --> 00:37:45,960
so I've included a few resources on the

1218
00:37:45,960 --> 00:37:47,579
slide for completeness here and feel

1219
00:37:47,579 --> 00:37:48,839
free to take photos of the slide if you

1220
00:37:48,839 --> 00:37:50,220
want to by the way

1221
00:37:50,220 --> 00:37:52,380
um I'll pause this for a few seconds

1222
00:37:52,380 --> 00:37:55,099
while we do that

1223
00:37:57,359 --> 00:37:59,280
if not I can like leave the slider at

1224
00:37:59,280 --> 00:38:00,359
the end so don't worry about like

1225
00:38:00,359 --> 00:38:03,359
smashing the camera button okay I'll

1226
00:38:03,359 --> 00:38:04,500
probably take it down now so apologies

1227
00:38:04,500 --> 00:38:06,180
or not um but for those of you who might

1228
00:38:06,180 --> 00:38:07,560
be interested in finding out more about

1229
00:38:07,560 --> 00:38:09,480
the wider security team at Google I'd

1230
00:38:09,480 --> 00:38:10,619
really recommend checking out the

1231
00:38:10,619 --> 00:38:11,940
hacking Google documentary which is

1232
00:38:11,940 --> 00:38:13,680
available on YouTube and it's available

1233
00:38:13,680 --> 00:38:15,960
at g dot Co slash safety hacking Google

1234
00:38:15,960 --> 00:38:17,940
and it actually features many of my

1235
00:38:17,940 --> 00:38:19,260
colleagues and the partner teams that I

1236
00:38:19,260 --> 00:38:20,700
mentioned before

1237
00:38:20,700 --> 00:38:22,020
um but at that point I think thanks for

1238
00:38:22,020 --> 00:38:23,160
your time and I can probably stop the

1239
00:38:23,160 --> 00:38:24,540
questions

1240
00:38:24,540 --> 00:38:27,020
thanks

1241
00:38:27,450 --> 00:38:28,859
[Applause]

1242
00:38:28,859 --> 00:38:31,020
awesome guys thank you very much uh

1243
00:38:31,020 --> 00:38:33,060
we'll take some questions uh there was a

1244
00:38:33,060 --> 00:38:36,660
hand here very quickly

1245
00:38:36,660 --> 00:38:39,500
foreign

1246
00:38:40,760 --> 00:38:43,320
thank you uh so the question is how do

1247
00:38:43,320 --> 00:38:45,720
you test your detections after they've

1248
00:38:45,720 --> 00:38:47,280
been rolled out

1249
00:38:47,280 --> 00:38:48,599
as in like once they're live in

1250
00:38:48,599 --> 00:38:51,420
production yes so it's probably partly

1251
00:38:51,420 --> 00:38:52,680
through unit testing I like each

1252
00:38:52,680 --> 00:38:53,940
component of the pipeline that's like

1253
00:38:53,940 --> 00:38:56,280
using the whatever platform specifically

1254
00:38:56,280 --> 00:38:58,200
like in golang for example just the unit

1255
00:38:58,200 --> 00:38:59,880
testing languages at libraries and

1256
00:38:59,880 --> 00:39:02,099
golang we also have some systems that

1257
00:39:02,099 --> 00:39:04,680
can do extended integration testing so

1258
00:39:04,680 --> 00:39:07,440
we expect at one end to put something in

1259
00:39:07,440 --> 00:39:09,359
three or four systems down the pipeline

1260
00:39:09,359 --> 00:39:10,619
we expect something to come out and we

1261
00:39:10,619 --> 00:39:12,300
can do this pretty granular granularly

1262
00:39:12,300 --> 00:39:13,800
between each system

1263
00:39:13,800 --> 00:39:15,780
I probably can't mention like specifics

1264
00:39:15,780 --> 00:39:17,280
of how we do it because it's very

1265
00:39:17,280 --> 00:39:19,200
bespoke to be honest

1266
00:39:19,200 --> 00:39:21,000
um but it's like a blend of

1267
00:39:21,000 --> 00:39:23,040
unit testing and integration testing and

1268
00:39:23,040 --> 00:39:25,740
within reason in some cases end to end

1269
00:39:25,740 --> 00:39:27,240
um with the idea being we fire an event

1270
00:39:27,240 --> 00:39:28,859
at one end ourselves using a set of

1271
00:39:28,859 --> 00:39:30,420
testing Rigs and we see if it propagates

1272
00:39:30,420 --> 00:39:33,060
all the way out to the queue

1273
00:39:33,060 --> 00:39:34,920
[Music]

1274
00:39:34,920 --> 00:39:36,599
yeah yeah so the question was do we do

1275
00:39:36,599 --> 00:39:38,040
internal Road teaming on top of that and

1276
00:39:38,040 --> 00:39:39,780
we do have an internal red team um it's

1277
00:39:39,780 --> 00:39:41,640
the offensive security team

1278
00:39:41,640 --> 00:39:43,700
um they

1279
00:39:43,700 --> 00:39:46,500
Sorry probably one of the best uh tests

1280
00:39:46,500 --> 00:39:48,060
of production detections that we have to

1281
00:39:48,060 --> 00:39:49,200
be honest

1282
00:39:49,200 --> 00:39:50,339
um and we work very closely with them

1283
00:39:50,339 --> 00:39:52,680
like every time we do one exercise or

1284
00:39:52,680 --> 00:39:55,020
they sorry they do an exercise we kind

1285
00:39:55,020 --> 00:39:57,300
of like get their activity log and we go

1286
00:39:57,300 --> 00:39:58,800
through and see hey dude how much of

1287
00:39:58,800 --> 00:40:00,359
this did we see like is the things we

1288
00:40:00,359 --> 00:40:02,700
can improve on so they're like the real

1289
00:40:02,700 --> 00:40:04,980
broadcast I guess

1290
00:40:04,980 --> 00:40:06,240
um but we have all of that other kind of

1291
00:40:06,240 --> 00:40:08,520
like back testing that supports it as

1292
00:40:08,520 --> 00:40:09,540
well does that answer your question

1293
00:40:09,540 --> 00:40:11,700
awesome cheers thanks

1294
00:40:11,700 --> 00:40:14,280
yeah uh first of all thank you very much

1295
00:40:14,280 --> 00:40:16,680
um and one of the earlier slides you

1296
00:40:16,680 --> 00:40:18,900
talked through the life cycle

1297
00:40:18,900 --> 00:40:21,720
um one like uh

1298
00:40:21,720 --> 00:40:24,180
this one yes yep so you said that you

1299
00:40:24,180 --> 00:40:26,700
take something uh as a TTP you go away

1300
00:40:26,700 --> 00:40:28,500
and you research it with the amount of

1301
00:40:28,500 --> 00:40:31,079
ttps there are coming out and the rapid

1302
00:40:31,079 --> 00:40:33,480
changing how do you decide which ones to

1303
00:40:33,480 --> 00:40:34,980
prioritize and do you automate that as

1304
00:40:34,980 --> 00:40:37,440
well yeah or does that kind of the

1305
00:40:37,440 --> 00:40:39,180
manual start of it all that's a good

1306
00:40:39,180 --> 00:40:42,420
question because ttps are unbounded in

1307
00:40:42,420 --> 00:40:45,599
their growth right and we probably do a

1308
00:40:45,599 --> 00:40:47,040
few things the first is to know whether

1309
00:40:47,040 --> 00:40:48,480
or not we have threat intelligence to

1310
00:40:48,480 --> 00:40:49,680
back their usage in the real world

1311
00:40:49,680 --> 00:40:51,180
that's probably the most important

1312
00:40:51,180 --> 00:40:53,280
factor the second factor of it is

1313
00:40:53,280 --> 00:40:55,500
whether or not we know between detection

1314
00:40:55,500 --> 00:40:56,940
and control like what the current

1315
00:40:56,940 --> 00:40:59,040
hardening state of it a given set of

1316
00:40:59,040 --> 00:41:00,359
systems that might be targeted by a

1317
00:41:00,359 --> 00:41:03,180
specific ttb and a lot of this stuff is

1318
00:41:03,180 --> 00:41:04,980
done semi-manually but we do have like

1319
00:41:04,980 --> 00:41:07,079
some way of automating kind of like you

1320
00:41:07,079 --> 00:41:08,460
know what stuff do we see most

1321
00:41:08,460 --> 00:41:09,960
frequently we have metrics that can

1322
00:41:09,960 --> 00:41:11,220
support it

1323
00:41:11,220 --> 00:41:13,680
um but you you're right it grows

1324
00:41:13,680 --> 00:41:14,940
unbounded and that's one of the things

1325
00:41:14,940 --> 00:41:16,079
like we're currently trying to figure

1326
00:41:16,079 --> 00:41:18,180
out it's like rttp is a good way of

1327
00:41:18,180 --> 00:41:20,579
expressing detection like or expressing

1328
00:41:20,579 --> 00:41:22,020
Behavior because they're very difficult

1329
00:41:22,020 --> 00:41:24,060
and they're very granular which don't

1330
00:41:24,060 --> 00:41:25,619
always map well

1331
00:41:25,619 --> 00:41:27,300
um so it's a few things but threat

1332
00:41:27,300 --> 00:41:28,740
intelligence definitely have the informs

1333
00:41:28,740 --> 00:41:30,420
it as well let's answer your question

1334
00:41:30,420 --> 00:41:31,859
awesome

1335
00:41:31,859 --> 00:41:35,880
yep great talk um sorry thanks cheers

1336
00:41:35,880 --> 00:41:39,119
um my question was around desjardis and

1337
00:41:39,119 --> 00:41:41,640
uh false positives

1338
00:41:41,640 --> 00:41:43,440
um that's a good question

1339
00:41:43,440 --> 00:41:45,900
um you know as with every kind of like

1340
00:41:45,900 --> 00:41:47,520
granular system where it's like a number

1341
00:41:47,520 --> 00:41:49,320
between zero and a hundred right it's

1342
00:41:49,320 --> 00:41:52,500
like was is 73 bad or is like 24 bad

1343
00:41:52,500 --> 00:41:54,420
like and defining that takes a lot of

1344
00:41:54,420 --> 00:41:56,940
tuning to be honest like in this case

1345
00:41:56,940 --> 00:41:58,440
um this was actually kind of like

1346
00:41:58,440 --> 00:42:00,900
manually determined to be correct before

1347
00:42:00,900 --> 00:42:02,579
we went live with it

1348
00:42:02,579 --> 00:42:03,300
um

1349
00:42:03,300 --> 00:42:05,339
there is definitely a false positive

1350
00:42:05,339 --> 00:42:06,660
writing it I'm not gonna it's definitely

1351
00:42:06,660 --> 00:42:08,339
not perfect right and typically what

1352
00:42:08,339 --> 00:42:09,960
happens is if we see something where

1353
00:42:09,960 --> 00:42:12,420
it's between thresholds of what we think

1354
00:42:12,420 --> 00:42:14,280
is almost bad we'll kind of like go back

1355
00:42:14,280 --> 00:42:16,260
to human be like hey like we probably

1356
00:42:16,260 --> 00:42:17,940
need to figure out a bit more accurately

1357
00:42:17,940 --> 00:42:19,619
whether or not it's bad

1358
00:42:19,619 --> 00:42:21,420
um but to be honest with some of the

1359
00:42:21,420 --> 00:42:22,859
detections we have do actually utilize

1360
00:42:22,859 --> 00:42:24,300
this but only above a certain threshold

1361
00:42:24,300 --> 00:42:25,680
when we know it's going to be bad or

1362
00:42:25,680 --> 00:42:27,180
it's likely bad

1363
00:42:27,180 --> 00:42:28,619
um the stuff that's kind of like towards

1364
00:42:28,619 --> 00:42:30,780
the lower end of Badness we're like

1365
00:42:30,780 --> 00:42:33,540
not that convinced yeah so it's again

1366
00:42:33,540 --> 00:42:34,920
it's like combined with a bunch of other

1367
00:42:34,920 --> 00:42:37,079
stuff as well to make a decision

1368
00:42:37,079 --> 00:42:39,060
um Sansa yeah

1369
00:42:39,060 --> 00:42:41,460
microphone yeah thanks for the talk um

1370
00:42:41,460 --> 00:42:43,200
I'm curious if you could speak to some

1371
00:42:43,200 --> 00:42:45,839
of the challenges of introducing the AI

1372
00:42:45,839 --> 00:42:48,119
into environments that you don't control

1373
00:42:48,119 --> 00:42:49,680
so it makes sense when you're talking

1374
00:42:49,680 --> 00:42:51,180
about this on your own corporate Network

1375
00:42:51,180 --> 00:42:53,220
corporate laptops but Google obviously

1376
00:42:53,220 --> 00:42:56,579
provides uh lots of services to users

1377
00:42:56,579 --> 00:42:58,800
and I imagine it'd be a lot harder to

1378
00:42:58,800 --> 00:43:00,300
kind of Baseline what normal looks like

1379
00:43:00,300 --> 00:43:02,040
there when it is a lot more out of your

1380
00:43:02,040 --> 00:43:04,200
control yeah so actually one big caveat

1381
00:43:04,200 --> 00:43:05,400
I mentioned here this is actually only

1382
00:43:05,400 --> 00:43:07,319
internal Focus so we don't ingest any

1383
00:43:07,319 --> 00:43:09,780
user information in this in this model

1384
00:43:09,780 --> 00:43:11,640
um but you are right I think a big part

1385
00:43:11,640 --> 00:43:13,260
of the challenge of AI and this kind of

1386
00:43:13,260 --> 00:43:15,660
detection problem is determining normal

1387
00:43:15,660 --> 00:43:17,220
and whether or not you have sufficient

1388
00:43:17,220 --> 00:43:19,140
data to determine that

1389
00:43:19,140 --> 00:43:20,520
um so I can't really comment on the user

1390
00:43:20,520 --> 00:43:22,079
Behavior stuff because we don't do like

1391
00:43:22,079 --> 00:43:23,940
customer data it's really internal only

1392
00:43:23,940 --> 00:43:25,319
for Google

1393
00:43:25,319 --> 00:43:27,540
um but there's a lot of training and a

1394
00:43:27,540 --> 00:43:28,859
lot of proof and we've often just been

1395
00:43:28,859 --> 00:43:30,960
like hey this thing just doesn't work so

1396
00:43:30,960 --> 00:43:32,880
we just like scrap it basically like it

1397
00:43:32,880 --> 00:43:34,319
might take us a few months or years to

1398
00:43:34,319 --> 00:43:35,760
get there but we're kind of a big

1399
00:43:35,760 --> 00:43:37,319
believer and not continue on something

1400
00:43:37,319 --> 00:43:39,420
if it's not worth continuing on

1401
00:43:39,420 --> 00:43:42,859
it's like kind of answer your question

1402
00:43:48,300 --> 00:43:51,780
that's a very long answer

1403
00:43:51,780 --> 00:43:55,020
um we can talk about outside if you want

1404
00:43:55,020 --> 00:43:56,880
okay

1405
00:43:56,880 --> 00:43:58,500
um thanks for the talk it was really

1406
00:43:58,500 --> 00:44:00,780
interesting with regards to the shadow

1407
00:44:00,780 --> 00:44:02,579
machines that you're running what level

1408
00:44:02,579 --> 00:44:04,740
of granularity do you have in terms of

1409
00:44:04,740 --> 00:44:06,240
being able to go back in the data are we

1410
00:44:06,240 --> 00:44:07,500
talking like literally system level

1411
00:44:07,500 --> 00:44:10,020
calls or just like process executed or

1412
00:44:10,020 --> 00:44:11,579
something like that yeah and it's a more

1413
00:44:11,579 --> 00:44:12,839
kind of like something like symbolic

1414
00:44:12,839 --> 00:44:14,520
execution or in terms of processes or

1415
00:44:14,520 --> 00:44:16,260
something like that yeah we do draw a

1416
00:44:16,260 --> 00:44:18,060
line and only look at certain like for

1417
00:44:18,060 --> 00:44:19,800
example on The Cisco example of only

1418
00:44:19,800 --> 00:44:21,480
certain ciscals of interest and that's

1419
00:44:21,480 --> 00:44:23,339
primarily because it's it there's a lot

1420
00:44:23,339 --> 00:44:25,319
of data that we can pull here so we do

1421
00:44:25,319 --> 00:44:26,819
have to make a call in terms of like

1422
00:44:26,819 --> 00:44:29,040
what we're interested in and typically

1423
00:44:29,040 --> 00:44:31,560
like the Cisco level is roughly where we

1424
00:44:31,560 --> 00:44:33,599
in terms of writing detections we don't

1425
00:44:33,599 --> 00:44:35,339
typically go lower than that in this

1426
00:44:35,339 --> 00:44:37,800
particular engine but we do have some

1427
00:44:37,800 --> 00:44:39,900
lower stuff than that and but it really

1428
00:44:39,900 --> 00:44:41,579
heavily depends on the platform on which

1429
00:44:41,579 --> 00:44:42,839
it comes because if it's basically if

1430
00:44:42,839 --> 00:44:45,180
it's not logged we don't see it right

1431
00:44:45,180 --> 00:44:47,339
that's kind of the Crux of it so

1432
00:44:47,339 --> 00:44:49,200
um some platforms are more effective in

1433
00:44:49,200 --> 00:44:50,760
this model but

1434
00:44:50,760 --> 00:44:52,619
um typically like Cisco is where we when

1435
00:44:52,619 --> 00:44:53,940
we're writing detections the lowest will

1436
00:44:53,940 --> 00:44:56,040
typically go

1437
00:44:56,040 --> 00:44:59,099
yep thank you for the talk a good

1438
00:44:59,099 --> 00:45:01,440
question about the hypothesis testing

1439
00:45:01,440 --> 00:45:03,000
what do you do

1440
00:45:03,000 --> 00:45:04,980
um say you made a hypothesis and the

1441
00:45:04,980 --> 00:45:07,079
hypothesis didn't span out do you use

1442
00:45:07,079 --> 00:45:08,880
the data you collected or do you just

1443
00:45:08,880 --> 00:45:10,680
start from scratch and go back to the

1444
00:45:10,680 --> 00:45:13,319
slot yeah I think you know like it's

1445
00:45:13,319 --> 00:45:15,359
always worth documenting everything that

1446
00:45:15,359 --> 00:45:16,859
you do right and that this is basically

1447
00:45:16,859 --> 00:45:18,060
one of the main reasons for doing it

1448
00:45:18,060 --> 00:45:20,640
it's like you might never realize like

1449
00:45:20,640 --> 00:45:22,140
two years now I'm like oh we've looked

1450
00:45:22,140 --> 00:45:23,460
at this before like how far do we get

1451
00:45:23,460 --> 00:45:25,140
there so even if we go through this

1452
00:45:25,140 --> 00:45:27,420
hypothesis and get to a point where it's

1453
00:45:27,420 --> 00:45:30,000
not feasible we might still have a

1454
00:45:30,000 --> 00:45:31,560
detection that's in that low confidence

1455
00:45:31,560 --> 00:45:32,940
signaling base that I mentioned before

1456
00:45:32,940 --> 00:45:34,380
that we might be able to combine with

1457
00:45:34,380 --> 00:45:36,300
other stuff at a later date

1458
00:45:36,300 --> 00:45:37,920
um but sometimes we do actually just see

1459
00:45:37,920 --> 00:45:39,960
stuff where we might even leave it in

1460
00:45:39,960 --> 00:45:41,640
that low confidence signaling bucket and

1461
00:45:41,640 --> 00:45:43,980
it might be so inaccurate that it's just

1462
00:45:43,980 --> 00:45:46,079
worth turning off entirely and that's

1463
00:45:46,079 --> 00:45:48,480
pretty pretty common as well because we

1464
00:45:48,480 --> 00:45:50,460
when we combine all of this stuff like

1465
00:45:50,460 --> 00:45:52,680
we can be reasonably sure about how it

1466
00:45:52,680 --> 00:45:54,000
all plays together but it's not until

1467
00:45:54,000 --> 00:45:55,079
you actually run it in the real

1468
00:45:55,079 --> 00:45:56,579
environment that you realize how Goods

1469
00:45:56,579 --> 00:45:58,260
or bad something is

1470
00:45:58,260 --> 00:46:01,020
um so some some stuff we reuse and part

1471
00:46:01,020 --> 00:46:02,579
of that is turning it off if it doesn't

1472
00:46:02,579 --> 00:46:03,900
work

1473
00:46:03,900 --> 00:46:06,720
um but not all of it is kind of in that

1474
00:46:06,720 --> 00:46:08,640
bucket at the same time is that good

1475
00:46:08,640 --> 00:46:10,859
okay awesome um just before I finish um

1476
00:46:10,859 --> 00:46:11,940
if you have any other questions that you

1477
00:46:11,940 --> 00:46:12,839
didn't want to ask them in this forum

1478
00:46:12,839 --> 00:46:15,000
I'll be outside so please just come to

1479
00:46:15,000 --> 00:46:16,920
me and ask him wonderful Troy wonderful

1480
00:46:16,920 --> 00:46:18,060
thanks very much for getting one more

1481
00:46:18,060 --> 00:46:20,180
time

