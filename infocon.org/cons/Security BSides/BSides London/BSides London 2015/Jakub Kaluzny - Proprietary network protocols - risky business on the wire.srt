1
00:00:00,000 --> 00:00:07,890
<font color="#E5E5E5">okay hi so welcome to my presentation so</font>

2
00:00:05,490 --> 00:00:10,500
this<font color="#CCCCCC"> is a joint research by me and my</font>

3
00:00:07,890 --> 00:00:13,080
colleague<font color="#CCCCCC"> from securing her but she</font>

4
00:00:10,500 --> 00:00:15,210
could not attend this time so we are pen

5
00:00:13,080 --> 00:00:16,920
testers yeah well<font color="#E5E5E5"> this is some corporate</font>

6
00:00:15,210 --> 00:00:18,720
<font color="#E5E5E5">blahblah ng I have to say so we do</font>

7
00:00:16,920 --> 00:00:21,689
<font color="#CCCCCC">security assessments of applications of</font>

8
00:00:18,720 --> 00:00:24,779
networks and all of<font color="#E5E5E5"> different system</font>

9
00:00:21,689 --> 00:00:27,710
which also contains some devices and

10
00:00:24,779 --> 00:00:30,509
actually this talk will be about weird

11
00:00:27,710 --> 00:00:31,980
devices which connect to the internet or

12
00:00:30,510 --> 00:00:35,190
to the<font color="#E5E5E5"> networks through proprietary</font>

13
00:00:31,980 --> 00:00:39,270
network protocols so<font color="#CCCCCC"> I will show you a</font>

14
00:00:35,190 --> 00:00:42,690
few case studies which we found during

15
00:00:39,270 --> 00:00:44,489
our penetration<font color="#E5E5E5"> test so we are talking</font>

16
00:00:42,690 --> 00:00:47,129
about<font color="#E5E5E5"> home automation</font><font color="#CCCCCC"> pool printing</font>

17
00:00:44,489 --> 00:00:50,519
solutions some forex trading software

18
00:00:47,129 --> 00:00:53,370
and remote desktops I've got a few other

19
00:00:50,520 --> 00:00:55,620
examples if I have enough time and<font color="#E5E5E5"> i'll</font>

20
00:00:53,370 --> 00:00:59,218
<font color="#E5E5E5">also like to show you some cheat sheets</font>

21
00:00:55,620 --> 00:01:02,358
or of how to develop proprietary network

22
00:00:59,219 --> 00:01:08,460
protocols how to do it properly<font color="#E5E5E5"> and</font>

23
00:01:02,359 --> 00:01:10,830
securely<font color="#CCCCCC"> okay so what probably some of</font>

24
00:01:08,460 --> 00:01:12,899
you are pen testers have<font color="#E5E5E5"> you encountered</font>

25
00:01:10,830 --> 00:01:18,860
a proprietary network protocol during

26
00:01:12,900 --> 00:01:22,130
your<font color="#CCCCCC"> nutrition test any</font><font color="#E5E5E5"> okay great so</font>

27
00:01:18,860 --> 00:01:24,780
it's obvious you don't know how to

28
00:01:22,130 --> 00:01:26,280
create<font color="#CCCCCC"> requests with this proprietary</font>

29
00:01:24,780 --> 00:01:31,520
network protocol you don't have

30
00:01:26,280 --> 00:01:34,680
documentation and you cannot connect

31
00:01:31,520 --> 00:01:37,590
<font color="#CCCCCC">well-known</font><font color="#E5E5E5"> local properties like</font><font color="#CCCCCC"> burp or</font>

32
00:01:34,680 --> 00:01:41,369
sub box or whatever which works with

33
00:01:37,590 --> 00:01:43,740
HTTP right so you have to do<font color="#CCCCCC"> something</font>

34
00:01:41,369 --> 00:01:45,750
<font color="#E5E5E5">you compile the client may be searched</font>

35
00:01:43,740 --> 00:01:48,449
for some tools maybe<font color="#E5E5E5"> Google for the</font>

36
00:01:45,750 --> 00:01:51,420
documentation of a closed protocol maybe

37
00:01:48,450 --> 00:01:56,119
just watch the rope pockets so let's

38
00:01:51,420 --> 00:02:02,090
give it a try the first<font color="#E5E5E5"> example is is</font>

39
00:01:56,119 --> 00:02:05,810
with home automation device so it works

40
00:02:02,090 --> 00:02:08,550
well just like that you have<font color="#E5E5E5"> to buy the</font>

41
00:02:05,810 --> 00:02:10,619
<font color="#CCCCCC">appliance the appliance</font><font color="#E5E5E5"> is just the box</font>

42
00:02:08,550 --> 00:02:13,230
which you connect to<font color="#E5E5E5"> the internet and it</font>

43
00:02:10,619 --> 00:02:17,489
has the output and it collects the input

44
00:02:13,230 --> 00:02:19,649
from your smart home additionally you

45
00:02:17,489 --> 00:02:23,580
get<font color="#E5E5E5"> a mobile application for example for</font>

46
00:02:19,650 --> 00:02:27,690
<font color="#E5E5E5">Android from which you can control your</font>

47
00:02:23,580 --> 00:02:29,819
smartphone and during this test we found

48
00:02:27,690 --> 00:02:33,150
some proprietary network protocol which

49
00:02:29,819 --> 00:02:36,390
is<font color="#E5E5E5"> working from</font><font color="#CCCCCC"> the mobile application</font>

50
00:02:33,150 --> 00:02:38,190
to<font color="#CCCCCC"> the server to this box and I would</font>

51
00:02:36,390 --> 00:02:44,369
like<font color="#CCCCCC"> to show you the wireshark capture</font>

52
00:02:38,190 --> 00:02:47,400
from from this box so so the client is

53
00:02:44,370 --> 00:02:49,860
actually the box and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> server</font><font color="#E5E5E5"> is the</font>

54
00:02:47,400 --> 00:02:53,879
cloud service which is provided by the

55
00:02:49,860 --> 00:02:56,760
appliance vendor so the authorization to

56
00:02:53,879 --> 00:03:02,149
this device<font color="#E5E5E5"> is just the password without</font>

57
00:02:56,760 --> 00:03:06,540
any user name<font color="#CCCCCC"> or something please leave</font>

58
00:03:02,150 --> 00:03:09,560
yeah well so obviously all<font color="#CCCCCC"> of the</font>

59
00:03:06,540 --> 00:03:13,920
requests from this box contained

60
00:03:09,560 --> 00:03:18,000
contained some some similar fragment of

61
00:03:13,920 --> 00:03:21,268
the<font color="#E5E5E5"> packet right well what we first</font>

62
00:03:18,000 --> 00:03:24,959
tried to<font color="#E5E5E5"> do was changing the password to</font>

63
00:03:21,269 --> 00:03:30,840
this appliance so we took three<font color="#CCCCCC"> of these</font>

64
00:03:24,959 --> 00:03:36,720
passwords and actually only this<font color="#CCCCCC"> 10-part</font>

65
00:03:30,840 --> 00:03:39,630
10 bytes changed so well obviously do

66
00:03:36,720 --> 00:03:42,269
you know any 10 bytes hash function or

67
00:03:39,630 --> 00:03:45,418
something like that well probably it

68
00:03:42,269 --> 00:03:48,060
will it was cut or something like that

69
00:03:45,419 --> 00:03:51,480
<font color="#CCCCCC">so let's let's give it a</font><font color="#E5E5E5"> try let's</font>

70
00:03:48,060 --> 00:03:55,440
disassemble this protocol and and try we

71
00:03:51,480 --> 00:03:58,560
actually<font color="#CCCCCC"> tried to brute force actually</font>

72
00:03:55,440 --> 00:04:01,530
find all hashing algorithms of this

73
00:03:58,560 --> 00:04:05,669
password trying to solve this and so on

74
00:04:01,530 --> 00:04:09,690
and<font color="#E5E5E5"> we</font><font color="#CCCCCC"> found</font><font color="#E5E5E5"> that it is md5 but only the</font>

75
00:04:05,669 --> 00:04:11,510
first 10 bytes of the md5 of password so

76
00:04:09,690 --> 00:04:14,549
actually<font color="#CCCCCC"> what was possible it was</font>

77
00:04:11,510 --> 00:04:16,260
sniffing the traffic and actually

78
00:04:14,549 --> 00:04:20,190
perform active man-in-the-middle attack

79
00:04:16,260 --> 00:04:22,079
and collect the<font color="#E5E5E5"> information and actually</font>

80
00:04:20,190 --> 00:04:24,120
break the access control because you

81
00:04:22,079 --> 00:04:26,670
don't need<font color="#E5E5E5"> the password if you can</font><font color="#CCCCCC"> just</font>

82
00:04:24,120 --> 00:04:30,690
replace ok well the vulnerability

83
00:04:26,670 --> 00:04:32,970
here was not very stronger or not<font color="#CCCCCC"> very</font>

84
00:04:30,690 --> 00:04:36,150
complex but<font color="#E5E5E5"> I would like to show you</font>

85
00:04:32,970 --> 00:04:39,980
what was<font color="#CCCCCC"> the process of getting vendor</font>

86
00:04:36,150 --> 00:04:44,039
to fix this yeah so these were the risks

87
00:04:39,980 --> 00:04:47,370
so as always we try to contact vendors

88
00:04:44,040 --> 00:04:50,910
and we wrote him a report that he's got

89
00:04:47,370 --> 00:04:55,590
some vulnerabilities in his appliance so

90
00:04:50,910 --> 00:04:58,890
he said okay I will patch it by su as

91
00:04:55,590 --> 00:05:00,330
you said I will Padgett biases help so

92
00:04:58,890 --> 00:05:05,300
in the<font color="#CCCCCC"> mobile application the new</font>

93
00:05:00,330 --> 00:05:09,810
version that that was<font color="#E5E5E5"> in the Play Store</font>

94
00:05:05,300 --> 00:05:12,570
there were new four lines and does

95
00:05:09,810 --> 00:05:18,690
anybody see like vulnerability here in

96
00:05:12,570 --> 00:05:22,250
the ssl connection yeah yeah well the

97
00:05:18,690 --> 00:05:25,800
trust manager is empty so the server

98
00:05:22,250 --> 00:05:28,950
will actually accept all of the

99
00:05:25,800 --> 00:05:31,080
certificates any any certificate so the

100
00:05:28,950 --> 00:05:34,550
man in the middle is still still

101
00:05:31,080 --> 00:05:38,760
possible right<font color="#E5E5E5"> okay it's a funny thing</font>

102
00:05:34,550 --> 00:05:42,660
so my friend who is<font color="#E5E5E5"> actually building</font>

103
00:05:38,760 --> 00:05:45,630
his own smartphone didn't want to buy

104
00:05:42,660 --> 00:05:48,750
big appliance which is which was<font color="#E5E5E5"> very</font>

105
00:05:45,630 --> 00:05:52,820
expensive<font color="#E5E5E5"> actually this box just cost</font>

106
00:05:48,750 --> 00:05:55,380
about like<font color="#E5E5E5"> 1,000 pounds and he emulated</font>

107
00:05:52,820 --> 00:05:58,490
everything that was in this box by a

108
00:05:55,380 --> 00:06:00,840
simple<font color="#CCCCCC"> raspberry pi connected to his</font>

109
00:05:58,490 --> 00:06:07,650
sensors and everything in a smartphone

110
00:06:00,840 --> 00:06:09,630
and writing one line<font color="#CCCCCC"> of bosch code which</font>

111
00:06:07,650 --> 00:06:12,299
emulated the first version<font color="#E5E5E5"> of the</font>

112
00:06:09,630 --> 00:06:14,340
software<font color="#E5E5E5"> and after adding the ssl it was</font>

113
00:06:12,300 --> 00:06:18,930
<font color="#E5E5E5">actually still one line of code but</font>

114
00:06:14,340 --> 00:06:24,359
little bit longer so so this<font color="#CCCCCC"> is how it</font>

115
00:06:18,930 --> 00:06:28,410
works<font color="#CCCCCC"> okay now let's move to</font><font color="#E5E5E5"> the example</font>

116
00:06:24,360 --> 00:06:30,420
that is a little bit more complex we

117
00:06:28,410 --> 00:06:35,180
<font color="#E5E5E5">often see</font><font color="#CCCCCC"> that in proprietary network</font>

118
00:06:30,420 --> 00:06:38,780
protocols the outer layer is<font color="#CCCCCC"> very</font>

119
00:06:35,180 --> 00:06:38,780
obscure like I mean

120
00:06:38,960 --> 00:06:43,698
it's hidden and you don't<font color="#E5E5E5"> get</font>

121
00:06:40,729 --> 00:06:46,250
documentation but underneath there are a

122
00:06:43,699 --> 00:06:48,229
lot of vulnerabilities connected to

123
00:06:46,250 --> 00:06:51,560
access control like a function access

124
00:06:48,229 --> 00:06:53,419
control<font color="#CCCCCC"> of data access control and I did</font>

125
00:06:51,560 --> 00:06:57,440
a big research on<font color="#CCCCCC"> pool printing</font>

126
00:06:53,419 --> 00:06:59,030
solutions which I probably you know how

127
00:06:57,440 --> 00:07:01,190
it works you don't print directly to the

128
00:06:59,030 --> 00:07:06,318
server to the<font color="#E5E5E5"> printer you print through</font>

129
00:07:01,190 --> 00:07:08,539
the<font color="#CCCCCC"> top server and you collect these</font>

130
00:07:06,319 --> 00:07:12,199
things at the printer by swiping your

131
00:07:08,539 --> 00:07:15,530
card or entering your username and the

132
00:07:12,199 --> 00:07:20,180
printer requests the job files from the

133
00:07:15,530 --> 00:07:22,309
server yeah well it's very<font color="#E5E5E5"> it's getting</font>

134
00:07:20,180 --> 00:07:24,199
very popular right<font color="#CCCCCC"> now and actually</font><font color="#E5E5E5"> the</font>

135
00:07:22,310 --> 00:07:26,930
big biggest risk in pool printing

136
00:07:24,199 --> 00:07:31,430
solution is stealing confidential data

137
00:07:26,930 --> 00:07:36,259
right like I getting the<font color="#CCCCCC"> queue</font><font color="#E5E5E5"> of print</font>

138
00:07:31,430 --> 00:07:39,590
queue of a CEO right so the biggest

139
00:07:36,259 --> 00:07:41,720
risks for a proprietary for a full

140
00:07:39,590 --> 00:07:44,169
printing solution is sniffing the

141
00:07:41,720 --> 00:07:46,550
traffic from<font color="#CCCCCC"> the server to the printer</font>

142
00:07:44,169 --> 00:07:49,130
also<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the user from the user</font>

143
00:07:46,550 --> 00:07:51,380
computer to<font color="#E5E5E5"> the server getting to the</font>

144
00:07:49,130 --> 00:07:54,169
other print queues tampering the

145
00:07:51,380 --> 00:07:56,780
accountability because in some companies

146
00:07:54,169 --> 00:08:00,799
you have right to print like let's say

147
00:07:56,780 --> 00:08:03,619
100 pages a day and not not some more

148
00:08:00,800 --> 00:08:09,050
and<font color="#CCCCCC"> also stealing</font><font color="#E5E5E5"> users data and users</font>

149
00:08:03,620 --> 00:08:11,630
credentials so let's see yeah well so

150
00:08:09,050 --> 00:08:13,759
sniffing is done here access to the

151
00:08:11,630 --> 00:08:18,860
other print queues here you got the

152
00:08:13,759 --> 00:08:21,830
vector attacks<font color="#CCCCCC"> okay let's move to the to</font>

153
00:08:18,860 --> 00:08:24,979
<font color="#CCCCCC">the vendor claims before the test will</font>

154
00:08:21,830 --> 00:08:27,080
really like to open the vendor website

155
00:08:24,979 --> 00:08:29,780
and see what is he claiming so this one

156
00:08:27,080 --> 00:08:31,669
is saying<font color="#CCCCCC"> that he's got roots in</font>

157
00:08:29,780 --> 00:08:34,399
education and he<font color="#E5E5E5"> understands that</font>

158
00:08:31,669 --> 00:08:37,279
college kids like to hack so they are

159
00:08:34,399 --> 00:08:40,339
focusing on security and they ensure

160
00:08:37,279 --> 00:08:42,409
that it's completely secure and

161
00:08:40,339 --> 00:08:45,380
documents are printed only when the

162
00:08:42,409 --> 00:08:48,439
collecting user is present we<font color="#E5E5E5"> always</font>

163
00:08:45,380 --> 00:08:50,420
like to verify vendor claims so let's

164
00:08:48,440 --> 00:08:55,779
see the binary protocol in this

165
00:08:50,420 --> 00:08:58,819
printing solution so here is like

166
00:08:55,779 --> 00:09:00,439
quality analyzes of this protocol<font color="#CCCCCC"> of the</font>

167
00:08:58,820 --> 00:09:05,120
pockets of the<font color="#CCCCCC"> robe pockets on the</font><font color="#E5E5E5"> on</font>

168
00:09:00,440 --> 00:09:08,810
the cable the print server sends a short

169
00:09:05,120 --> 00:09:11,180
hello message after user swipes his card

170
00:09:08,810 --> 00:09:14,060
at<font color="#CCCCCC"> the printer the printer sends his</font>

171
00:09:11,180 --> 00:09:16,579
username the server responds with some

172
00:09:14,060 --> 00:09:19,939
token the printer sends a hash of<font color="#CCCCCC"> these</font>

173
00:09:16,579 --> 00:09:22,939
passwords<font color="#CCCCCC"> in token the server verifies</font>

174
00:09:19,940 --> 00:09:26,750
it and the printer set sends a message

175
00:09:22,940 --> 00:09:31,180
to release the print queue of this user

176
00:09:26,750 --> 00:09:35,060
and also let's say charge me for

177
00:09:31,180 --> 00:09:37,969
printing 100 pages take it from<font color="#E5E5E5"> my</font>

178
00:09:35,060 --> 00:09:40,369
balance<font color="#CCCCCC"> and the server responds so I'd</font>

179
00:09:37,970 --> 00:09:45,139
like<font color="#CCCCCC"> to ask you workwear where is the</font>

180
00:09:40,370 --> 00:09:52,699
point<font color="#E5E5E5"> that we will attack here which</font>

181
00:09:45,139 --> 00:09:55,870
pocket is the<font color="#E5E5E5"> most interesting</font><font color="#CCCCCC"> yeah ok</font>

182
00:09:52,699 --> 00:09:59,000
let's let's see<font color="#E5E5E5"> how</font><font color="#CCCCCC"> it works how</font><font color="#E5E5E5"> it</font>

183
00:09:55,870 --> 00:10:01,040
looks on<font color="#CCCCCC"> the cable so the blue</font>

184
00:09:59,000 --> 00:10:04,310
communication is from the server the

185
00:10:01,040 --> 00:10:06,380
<font color="#CCCCCC">server sent some permissions about the</font>

186
00:10:04,310 --> 00:10:10,750
user to the printer so for<font color="#E5E5E5"> example that</font>

187
00:10:06,380 --> 00:10:14,420
he can only he can print color pages

188
00:10:10,750 --> 00:10:16,760
because some of the users could not so

189
00:10:14,420 --> 00:10:20,420
our first idea was to<font color="#E5E5E5"> change</font><font color="#CCCCCC"> the data</font>

190
00:10:16,760 --> 00:10:22,939
that is about about the permissions and

191
00:10:20,420 --> 00:10:27,319
it actually worked so after changing

192
00:10:22,940 --> 00:10:30,440
this value well previously it was Kent

193
00:10:27,320 --> 00:10:33,649
or there was no color copy so the user

194
00:10:30,440 --> 00:10:36,760
could not copy in color we change it

195
00:10:33,649 --> 00:10:39,529
that he can and after this a printer

196
00:10:36,760 --> 00:10:43,339
sends the file it is printed in<font color="#E5E5E5"> color</font>

197
00:10:39,529 --> 00:10:46,130
and the server does not verify if really

198
00:10:43,339 --> 00:10:48,709
this user can print in color it was only

199
00:10:46,130 --> 00:10:52,189
changed in the user<font color="#CCCCCC"> interface on the</font>

200
00:10:48,709 --> 00:10:56,449
printer so what the world the attack

201
00:10:52,190 --> 00:10:59,300
that<font color="#E5E5E5"> you mentioned here you've got begin</font>

202
00:10:56,449 --> 00:11:02,400
device transaction of the guest XYZ and

203
00:10:59,300 --> 00:11:05,729
actually the user was already

204
00:11:02,400 --> 00:11:08,939
authenticated in the previous<font color="#E5E5E5"> request in</font>

205
00:11:05,730 --> 00:11:11,460
<font color="#CCCCCC">the previous communication so what is</font>

206
00:11:08,940 --> 00:11:14,940
the point of sending username here well

207
00:11:11,460 --> 00:11:18,470
the point is that well we can change it

208
00:11:14,940 --> 00:11:22,620
now on the cable<font color="#E5E5E5"> we did it and it worked</font>

209
00:11:18,470 --> 00:11:24,980
so actually<font color="#E5E5E5"> we were able to release the</font>

210
00:11:22,620 --> 00:11:30,180
print queue of other user and what is

211
00:11:24,980 --> 00:11:33,750
even more funny the account<font color="#CCCCCC"> that was</font>

212
00:11:30,180 --> 00:11:36,510
charged for for printing these pages was

213
00:11:33,750 --> 00:11:39,720
his account because later there there

214
00:11:36,510 --> 00:11:42,540
was there was another transaction for

215
00:11:39,720 --> 00:11:48,410
charging user account for printing these

216
00:11:42,540 --> 00:11:52,110
jobs so actually<font color="#E5E5E5"> attacking this protocol</font>

217
00:11:48,410 --> 00:11:54,449
showed us that all<font color="#CCCCCC"> the key risks were</font>

218
00:11:52,110 --> 00:11:56,010
broken here so we could sniff we can

219
00:11:54,450 --> 00:11:57,450
print the other print queues time for

220
00:11:56,010 --> 00:12:02,280
the accountability and actually get

221
00:11:57,450 --> 00:12:05,310
other users data and communication with

222
00:12:02,280 --> 00:12:10,439
this vendor was very nice I mean this

223
00:12:05,310 --> 00:12:12,449
happens not very it's not<font color="#E5E5E5"> very</font><font color="#CCCCCC"> common so</font>

224
00:12:10,440 --> 00:12:14,490
he gave us access<font color="#E5E5E5"> to his knowledge base</font>

225
00:12:12,450 --> 00:12:16,530
<font color="#E5E5E5">and the other version versions of his</font>

226
00:12:14,490 --> 00:12:19,610
software because on his website there

227
00:12:16,530 --> 00:12:22,730
was one only educational educational

228
00:12:19,610 --> 00:12:25,620
version of the software he got some

229
00:12:22,730 --> 00:12:28,080
<font color="#CCCCCC">enterprise full printing solution for</font>

230
00:12:25,620 --> 00:12:31,800
big companies and she also wanted<font color="#CCCCCC"> to see</font>

231
00:12:28,080 --> 00:12:34,770
if it's secure so we also found some

232
00:12:31,800 --> 00:12:38,370
vulnerabilities there and he really

233
00:12:34,770 --> 00:12:39,870
liked that that we pan tested him I

234
00:12:38,370 --> 00:12:42,540
don't know if it happens to<font color="#CCCCCC"> you if you</font>

235
00:12:39,870 --> 00:12:46,950
<font color="#E5E5E5">pen test vendor like completely black</font>

236
00:12:42,540 --> 00:12:51,060
box without without the the order or the

237
00:12:46,950 --> 00:12:57,080
request they vendors don't look happy to

238
00:12:51,060 --> 00:13:00,479
be fantastic<font color="#CCCCCC"> today okay now let's get to</font>

239
00:12:57,080 --> 00:13:04,020
<font color="#E5E5E5">another example which is quite more</font>

240
00:13:00,480 --> 00:13:06,660
complicated<font color="#CCCCCC"> and very funny</font><font color="#E5E5E5"> for us we</font>

241
00:13:04,020 --> 00:13:11,490
tested<font color="#CCCCCC"> one of remote desktop protocols</font>

242
00:13:06,660 --> 00:13:13,439
these protocols are optimized for for

243
00:13:11,490 --> 00:13:15,370
the latency our front for the<font color="#E5E5E5"> data</font>

244
00:13:13,440 --> 00:13:21,550
amount of data that is

245
00:13:15,370 --> 00:13:27,250
sent for the cable so the vendor claims

246
00:13:21,550 --> 00:13:29,620
that his his solution is very secure it

247
00:13:27,250 --> 00:13:32,200
is really<font color="#E5E5E5"> we've seen this in one</font><font color="#CCCCCC"> of the</font>

248
00:13:29,620 --> 00:13:36,870
bank's it is used for critical business

249
00:13:32,200 --> 00:13:41,190
operations and they claim that they are

250
00:13:36,870 --> 00:13:44,860
validated with the<font color="#CCCCCC"> F IPS norm which is</font>

251
00:13:41,190 --> 00:13:48,089
quite strict and they provide end-to-end

252
00:13:44,860 --> 00:13:52,690
a data decrypt encryption so let's see

253
00:13:48,089 --> 00:13:55,300
if it's<font color="#E5E5E5"> really end to end encryption so</font>

254
00:13:52,690 --> 00:13:57,940
the communication was for the<font color="#E5E5E5"> first look</font>

255
00:13:55,300 --> 00:14:00,040
it was very simple<font color="#E5E5E5"> the client sent four</font>

256
00:13:57,940 --> 00:14:03,730
bytes to the server several responded

257
00:14:00,040 --> 00:14:07,829
with<font color="#E5E5E5"> four bytes and there was a big load</font>

258
00:14:03,730 --> 00:14:07,830
of communication which was actually ssl

259
00:14:09,000 --> 00:14:17,260
so if you would tamper these requests

260
00:14:14,350 --> 00:14:19,860
where would you tamper where would you

261
00:14:17,260 --> 00:14:19,860
change anything

262
00:14:25,200 --> 00:14:31,830
okay well so first idea was to<font color="#E5E5E5"> change</font>

263
00:14:29,250 --> 00:14:33,720
these values but actually<font color="#CCCCCC"> it didn't</font>

264
00:14:31,830 --> 00:14:36,120
change anything the<font color="#E5E5E5"> government the</font>

265
00:14:33,720 --> 00:14:39,720
communication was was still was still

266
00:14:36,120 --> 00:14:43,910
this way but when we tampered this value

267
00:14:39,720 --> 00:14:50,040
which is 0 B which stands<font color="#E5E5E5"> for 11 right</font>

268
00:14:43,910 --> 00:14:59,040
we change it to just 01 do you have any

269
00:14:50,040 --> 00:15:03,020
<font color="#CCCCCC">idea what</font><font color="#E5E5E5"> would happen yeah well when we</font>

270
00:14:59,040 --> 00:15:05,550
read like 500 pages of documentation of

271
00:15:03,020 --> 00:15:08,100
implementing<font color="#CCCCCC"> the</font><font color="#E5E5E5"> solution in the</font>

272
00:15:05,550 --> 00:15:10,680
<font color="#E5E5E5">corporation we found that</font><font color="#CCCCCC"> it is</font>

273
00:15:08,100 --> 00:15:12,600
backwards compatibility because some of

274
00:15:10,680 --> 00:15:15,709
older versions of the software are still

275
00:15:12,600 --> 00:15:20,430
used in critical business infrastructure

276
00:15:15,710 --> 00:15:23,430
it's unlikely<font color="#CCCCCC"> to be updated so to be</font>

277
00:15:20,430 --> 00:15:25,050
backwards compatible they just provided

278
00:15:23,430 --> 00:15:26,939
an option to connect with an old version

279
00:15:25,050 --> 00:15:31,800
of protocol and his old version of

280
00:15:26,940 --> 00:15:33,510
protocol didn't didn't support ssl so

281
00:15:31,800 --> 00:15:36,599
first of all the men in the middle

282
00:15:33,510 --> 00:15:38,390
attack was possible in the communication

283
00:15:36,600 --> 00:15:42,930
we found the username and<font color="#E5E5E5"> the password</font>

284
00:15:38,390 --> 00:15:45,569
which was encoded so we took we changed

285
00:15:42,930 --> 00:15:50,329
the password<font color="#CCCCCC"> to a long one it's the</font>

286
00:15:45,570 --> 00:15:56,580
ascii<font color="#CCCCCC"> hex of this password on the cable</font>

287
00:15:50,330 --> 00:15:58,470
we got this encoded password so like the

288
00:15:56,580 --> 00:16:02,340
first thing you would say about this is

289
00:15:58,470 --> 00:16:06,420
the hash of hash function of of this

290
00:16:02,340 --> 00:16:08,610
password well not<font color="#E5E5E5"> really</font><font color="#CCCCCC"> because the</font>

291
00:16:06,420 --> 00:16:14,490
length of this is is the same of this

292
00:16:08,610 --> 00:16:21,710
right so any other encryption algorithm

293
00:16:14,490 --> 00:16:26,880
oh well I've heard somewhere<font color="#CCCCCC"> sorry right</font>

294
00:16:21,710 --> 00:16:30,000
so you know how saw works right you

295
00:16:26,880 --> 00:16:33,920
<font color="#CCCCCC">serve the password like the plain text</font>

296
00:16:30,000 --> 00:16:39,660
with the key and<font color="#E5E5E5"> you receive the this</font>

297
00:16:33,920 --> 00:16:45,270
ciphered text but if you<font color="#E5E5E5"> soar ciphered</font>

298
00:16:39,660 --> 00:16:48,270
text with the plain text<font color="#CCCCCC"> you'll recieve</font>

299
00:16:45,270 --> 00:16:50,069
the key which was<font color="#CCCCCC"> actually this is</font>

300
00:16:48,270 --> 00:16:52,650
<font color="#E5E5E5">redacted it was actually actually the</font>

301
00:16:50,070 --> 00:16:57,920
name of the company<font color="#E5E5E5"> communications</font>

302
00:16:52,650 --> 00:17:02,040
<font color="#E5E5E5">limited so and actually</font><font color="#CCCCCC"> in the binary</font>

303
00:16:57,920 --> 00:17:05,159
executable file of this solution you

304
00:17:02,040 --> 00:17:07,379
could actually find find this data to so

305
00:17:05,160 --> 00:17:10,800
all the communication was the password

306
00:17:07,380 --> 00:17:17,010
<font color="#E5E5E5">was encoded with weeks or and this key</font>

307
00:17:10,800 --> 00:17:19,980
<font color="#CCCCCC">okay so let's focus</font><font color="#E5E5E5"> on the ssl ssl</font>

308
00:17:17,010 --> 00:17:22,109
version of of this solution the default

309
00:17:19,980 --> 00:17:24,360
configuration was like that the client

310
00:17:22,109 --> 00:17:29,699
connected with his cipher<font color="#E5E5E5"> suits the</font>

311
00:17:24,359 --> 00:17:32,340
server responded with with no

312
00:17:29,700 --> 00:17:34,530
certificates and this cipher suit so

313
00:17:32,340 --> 00:17:41,040
what's what's specific about this cipher

314
00:17:34,530 --> 00:17:42,840
suit yeah it's anonymous<font color="#E5E5E5"> so whatever you</font>

315
00:17:41,040 --> 00:17:45,840
you do a man-in-the-middle attack and

316
00:17:42,840 --> 00:17:48,000
you put any certificate you don't have

317
00:17:45,840 --> 00:17:51,629
to do this actually because<font color="#CCCCCC"> the server</font>

318
00:17:48,000 --> 00:17:53,490
does not send any certificate<font color="#E5E5E5"> okay it</font>

319
00:17:51,630 --> 00:17:58,310
was default configuration there was an

320
00:17:53,490 --> 00:18:02,460
option<font color="#E5E5E5"> in this software to switch to the</font>

321
00:17:58,310 --> 00:18:06,389
certificate version of<font color="#E5E5E5"> SSL yeah well did</font>

322
00:18:02,460 --> 00:18:08,250
this was you won't think so<font color="#E5E5E5"> this time</font>

323
00:18:06,390 --> 00:18:12,480
certificate responded with some

324
00:18:08,250 --> 00:18:14,910
non-animal cypresses and there was a

325
00:18:12,480 --> 00:18:18,120
certificate pinning implemented so for

326
00:18:14,910 --> 00:18:21,120
the first connection the server stored

327
00:18:18,120 --> 00:18:26,010
the client certificate and on the

328
00:18:21,120 --> 00:18:27,600
following connections if you try to do a

329
00:18:26,010 --> 00:18:30,629
man-in-the-middle attack with wrong

330
00:18:27,600 --> 00:18:38,070
certificate it alerted with with

331
00:18:30,630 --> 00:18:44,490
a terror so what would<font color="#E5E5E5"> you do why don't</font>

332
00:18:38,070 --> 00:18:49,020
I yeah okay well well what we did was

333
00:18:44,490 --> 00:18:52,380
trying to not do this like the server

334
00:18:49,020 --> 00:18:55,800
wanted it to do but be backward

335
00:18:52,380 --> 00:18:59,370
compatible with the<font color="#E5E5E5"> first one so even</font>

336
00:18:55,800 --> 00:19:04,169
that the server sends not unknown animal

337
00:18:59,370 --> 00:19:07,229
suits we tried to connect with with no

338
00:19:04,170 --> 00:19:09,570
certificate so this<font color="#CCCCCC"> time if you connect</font>

339
00:19:07,230 --> 00:19:15,890
with a wrong certificate the server

340
00:19:09,570 --> 00:19:18,210
responded with an error but if you

341
00:19:15,890 --> 00:19:20,670
change<font color="#CCCCCC"> the communicate from the server</font>

342
00:19:18,210 --> 00:19:23,490
to the client and client thought that it

343
00:19:20,670 --> 00:19:25,920
should<font color="#E5E5E5"> be anonymous suit and the client</font>

344
00:19:23,490 --> 00:19:30,420
responded with no certificate the server

345
00:19:25,920 --> 00:19:32,160
responded<font color="#CCCCCC"> okay let's connect so yeah a</font>

346
00:19:30,420 --> 00:19:35,430
lot of backwards compatibility

347
00:19:32,160 --> 00:19:37,710
vulnerabilities there yeah this

348
00:19:35,430 --> 00:19:42,600
communication which this<font color="#E5E5E5"> vendor was was</font>

349
00:19:37,710 --> 00:19:44,820
really hard we tried to send them our

350
00:19:42,600 --> 00:19:49,409
report and we try to encrypt this but

351
00:19:44,820 --> 00:19:52,830
they didn't know PGP and they asked

352
00:19:49,410 --> 00:19:55,050
asked us to use a zip file with cos name

353
00:19:52,830 --> 00:19:56,879
as a password but when we opened their

354
00:19:55,050 --> 00:20:00,540
website there was five CEOs in this

355
00:19:56,880 --> 00:20:04,950
company<font color="#E5E5E5"> okay so finally</font><font color="#CCCCCC"> after like one</font>

356
00:20:00,540 --> 00:20:08,399
<font color="#E5E5E5">month of doing some phone calls sending</font>

357
00:20:04,950 --> 00:20:11,520
emails and so on we achieved like a

358
00:20:08,400 --> 00:20:14,760
proper encrypted<font color="#E5E5E5"> channel and they</font>

359
00:20:11,520 --> 00:20:16,740
<font color="#CCCCCC">respond the day sorry we do not plan to</font>

360
00:20:14,760 --> 00:20:18,629
solve these issues they completely

361
00:20:16,740 --> 00:20:21,260
ignored our emails they said that

362
00:20:18,630 --> 00:20:25,160
they've got so<font color="#E5E5E5"> many clients that</font>

363
00:20:21,260 --> 00:20:31,110
updating all this for their customers

364
00:20:25,160 --> 00:20:32,460
would be impossible so we disclose it

365
00:20:31,110 --> 00:20:35,330
publicly completely on the full

366
00:20:32,460 --> 00:20:38,630
disclosure list it was about like

367
00:20:35,330 --> 00:20:41,090
one half year ago well and the fury few

368
00:20:38,630 --> 00:20:45,040
weeks<font color="#E5E5E5"> later the full disclosure was</font>

369
00:20:41,090 --> 00:20:51,459
closed I hope it was not because of us

370
00:20:45,040 --> 00:20:53,930
<font color="#E5E5E5">okay another example is also encryption</font>

371
00:20:51,460 --> 00:20:57,620
vulnerability in proprietary network

372
00:20:53,930 --> 00:20:59,900
protocol so the vendor claims that this

373
00:20:57,620 --> 00:21:01,340
printing solution safeguards document

374
00:20:59,900 --> 00:21:03,860
confidentiality blah blah blah<font color="#CCCCCC"> and</font>

375
00:21:01,340 --> 00:21:05,990
provides airtight security when I see

376
00:21:03,860 --> 00:21:10,280
such claim I take out my laptop<font color="#CCCCCC"> and try</font>

377
00:21:05,990 --> 00:21:13,910
to hack the vendor ensures that like the

378
00:21:10,280 --> 00:21:15,050
old key risks of this solution it's not

379
00:21:13,910 --> 00:21:17,150
possible to break them because

380
00:21:15,050 --> 00:21:18,919
everything is confidential it's safe

381
00:21:17,150 --> 00:21:20,990
anytime and anywhere and it's get secure

382
00:21:18,920 --> 00:21:23,420
<font color="#E5E5E5">okay so the first look of the</font>

383
00:21:20,990 --> 00:21:27,740
<font color="#CCCCCC">communication was the old communication</font>

384
00:21:23,420 --> 00:21:30,020
was on to<font color="#CCCCCC"> TCP port there was</font><font color="#E5E5E5"> no ssl like</font>

385
00:21:27,740 --> 00:21:33,470
for example<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Wireshark did not</font>

386
00:21:30,020 --> 00:21:35,389
recognize it<font color="#E5E5E5"> as ssl but it seemed to</font>

387
00:21:33,470 --> 00:21:37,610
follow some scheme and<font color="#CCCCCC"> i would like</font><font color="#E5E5E5"> to</font>

388
00:21:35,390 --> 00:21:39,560
<font color="#E5E5E5">show you this scheme so this is</font><font color="#CCCCCC"> a</font>

389
00:21:37,610 --> 00:21:44,750
quantitative<font color="#CCCCCC"> analysis of the traffic</font>

390
00:21:39,560 --> 00:21:46,669
from<font color="#CCCCCC"> the print server to the printer so</font>

391
00:21:44,750 --> 00:21:50,030
first like a free short communicates

392
00:21:46,670 --> 00:21:53,090
then a lot of small communication and a

393
00:21:50,030 --> 00:21:55,610
huge amount of data so if it's like

394
00:21:53,090 --> 00:21:58,280
whole communication is one<font color="#E5E5E5"> point one</font>

395
00:21:55,610 --> 00:22:00,649
megabyte and this is one<font color="#E5E5E5"> point oh five</font>

396
00:21:58,280 --> 00:22:05,899
megabytes so what is it<font color="#E5E5E5"> in printing</font>

397
00:22:00,650 --> 00:22:08,180
solution files<font color="#CCCCCC"> okay so more quantitative</font>

398
00:22:05,900 --> 00:22:13,220
<font color="#CCCCCC">analysis the first communicate was</font>

399
00:22:08,180 --> 00:22:15,110
always constant 263 bites look like that

400
00:22:13,220 --> 00:22:20,210
there is some crypt so probably there is

401
00:22:15,110 --> 00:22:22,610
some encryption the second one was some

402
00:22:20,210 --> 00:22:30,200
padding on the<font color="#E5E5E5"> end also some padding and</font>

403
00:22:22,610 --> 00:22:33,199
this was X<font color="#CCCCCC"> bytes this X was 512 when the</font>

404
00:22:30,200 --> 00:22:38,240
when the indie administrative interface

405
00:22:33,200 --> 00:22:42,470
there was an option of RSA 512 bytes<font color="#E5E5E5"> so</font>

406
00:22:38,240 --> 00:22:44,350
what<font color="#E5E5E5"> is</font><font color="#CCCCCC"> it probably a public key well</font>

407
00:22:42,470 --> 00:22:47,310
actually not a public keyboard like

408
00:22:44,350 --> 00:22:54,879
exponent of public key right

409
00:22:47,310 --> 00:22:57,610
<font color="#E5E5E5">okay always different 40 64 bytes so</font><font color="#CCCCCC"> if</font>

410
00:22:54,880 --> 00:23:00,430
they are<font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to do something like</font><font color="#E5E5E5"> SSL</font>

411
00:22:57,610 --> 00:23:02,969
probably if this was a public<font color="#E5E5E5"> key for a</font>

412
00:23:00,430 --> 00:23:06,580
symmetric encryption outside this<font color="#E5E5E5"> is a</font>

413
00:23:02,970 --> 00:23:09,490
encrypted with this public<font color="#E5E5E5"> key the token</font>

414
00:23:06,580 --> 00:23:11,800
key for a session key for the symmetric

415
00:23:09,490 --> 00:23:14,860
encryption inside right now we've<font color="#CCCCCC"> got</font>

416
00:23:11,800 --> 00:23:16,480
this huge amount of data<font color="#E5E5E5"> and in the</font>

417
00:23:14,860 --> 00:23:20,260
wireshark capture we've seen that there

418
00:23:16,480 --> 00:23:24,910
<font color="#E5E5E5">are many many identical 16 bytes blocks</font>

419
00:23:20,260 --> 00:23:26,920
and<font color="#E5E5E5"> I would like</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> ask you how must</font>

420
00:23:24,910 --> 00:23:29,500
have been this file is encrypted that

421
00:23:26,920 --> 00:23:35,050
they were<font color="#E5E5E5"> the these are many identical</font>

422
00:23:29,500 --> 00:23:38,590
box anybody yeah well so if you encrypt

423
00:23:35,050 --> 00:23:41,320
for example a bitmap with an ECB mode of

424
00:23:38,590 --> 00:23:43,540
encryption electronic over break you

425
00:23:41,320 --> 00:23:46,330
still you cannot get the right colors

426
00:23:43,540 --> 00:23:49,060
but you probably will at least know the

427
00:23:46,330 --> 00:23:51,490
shapes so the print files are actually

428
00:23:49,060 --> 00:23:53,200
quite the same these are post script

429
00:23:51,490 --> 00:23:56,560
files which are text files and actually

430
00:23:53,200 --> 00:24:00,250
you cannot get exact words of the print

431
00:23:56,560 --> 00:24:03,820
file but you can get some<font color="#E5E5E5"> Sun scheme so</font>

432
00:24:00,250 --> 00:24:05,620
we can probably you can crack it okay so

433
00:24:03,820 --> 00:24:08,800
this<font color="#CCCCCC"> was some kind</font><font color="#E5E5E5"> of a hello message</font>

434
00:24:05,620 --> 00:24:10,810
than a<font color="#CCCCCC"> Hello certificate session key for</font>

435
00:24:08,800 --> 00:24:12,730
the symmetric encryption<font color="#E5E5E5"> side and these</font>

436
00:24:10,810 --> 00:24:16,149
were the<font color="#CCCCCC"> PostScript print files</font>

437
00:24:12,730 --> 00:24:21,070
encrypted in ECB mode of encryption it

438
00:24:16,150 --> 00:24:23,800
was a<font color="#E5E5E5"> very bad idea so we found in the</font>

439
00:24:21,070 --> 00:24:26,050
embedded software that was<font color="#E5E5E5"> installed on</font>

440
00:24:23,800 --> 00:24:29,800
the printer hard called adores a

441
00:24:26,050 --> 00:24:32,320
certificate on the server there was no

442
00:24:29,800 --> 00:24:34,080
trust or so the many of the middle

443
00:24:32,320 --> 00:24:40,750
attack was possibly just by changing

444
00:24:34,080 --> 00:24:42,970
changing this this 512 bytes nonetheless

445
00:24:40,750 --> 00:24:49,030
what was the key size if it was two

446
00:24:42,970 --> 00:24:51,340
thousand bytes or more yeah so the same

447
00:24:49,030 --> 00:24:53,649
as we<font color="#CCCCCC"> found the same protocol in the</font>

448
00:24:51,340 --> 00:24:54,909
urban interface so we could do also

449
00:24:53,650 --> 00:24:57,790
<font color="#E5E5E5">dominating the attack for the</font>

450
00:24:54,910 --> 00:24:59,560
administrator of this device of<font color="#CCCCCC"> course</font>

451
00:24:57,790 --> 00:24:59,950
the consequences of this attack are

452
00:24:59,560 --> 00:25:01,720
pretty

453
00:24:59,950 --> 00:25:04,750
the same all of the<font color="#CCCCCC"> cure risks for a</font>

454
00:25:01,720 --> 00:25:07,360
full printing solution were broken we

455
00:25:04,750 --> 00:25:10,919
can<font color="#E5E5E5"> we could do actually all</font><font color="#CCCCCC"> of the</font>

456
00:25:07,360 --> 00:25:15,580
attacks and<font color="#E5E5E5"> okay how much time we've got</font>

457
00:25:10,919 --> 00:25:18,490
so we tried to notify this vendor and he

458
00:25:15,580 --> 00:25:21,939
responded that sorry many of the devices

459
00:25:18,490 --> 00:25:26,440
do not have the<font color="#E5E5E5"> CPU power and we like</font>

460
00:25:21,940 --> 00:25:32,260
features small latency and speed then

461
00:25:26,440 --> 00:25:34,480
security does it happen to<font color="#CCCCCC"> you well they</font>

462
00:25:32,260 --> 00:25:35,950
<font color="#E5E5E5">claim that changing ECB to CBC mode of</font>

463
00:25:34,480 --> 00:25:38,260
encryption would cause slower

464
00:25:35,950 --> 00:25:40,590
performance and their customers are very

465
00:25:38,260 --> 00:25:45,039
reluctant to see it implemented right

466
00:25:40,590 --> 00:25:47,649
well<font color="#E5E5E5"> actually on one credit processors</font>

467
00:25:45,039 --> 00:25:51,309
changing ECB to CBC mode of encryption

468
00:25:47,649 --> 00:25:54,268
does not cause a slower performance and

469
00:25:51,309 --> 00:25:57,760
and actually they told us that now sorry

470
00:25:54,269 --> 00:25:59,350
you we've got no vulnerabilities you

471
00:25:57,760 --> 00:26:02,529
could not find vulnerabilities because

472
00:25:59,350 --> 00:26:07,980
the system has already passed some

473
00:26:02,529 --> 00:26:12,340
internal audits in big companies so yeah

474
00:26:07,980 --> 00:26:17,230
a very very hard vendor to communicate

475
00:26:12,340 --> 00:26:20,918
and to achieve like a proper patch for

476
00:26:17,230 --> 00:26:23,380
the for<font color="#CCCCCC"> the report</font><font color="#E5E5E5"> okay now I want</font><font color="#CCCCCC"> to</font>

477
00:26:20,919 --> 00:26:26,250
present you the most interesting example

478
00:26:23,380 --> 00:26:30,580
from from proprietary network protocols

479
00:26:26,250 --> 00:26:34,960
we had possibility to test a trading

480
00:26:30,580 --> 00:26:37,779
protocol for the forex industry so

481
00:26:34,960 --> 00:26:41,260
actually<font color="#CCCCCC"> the software that</font><font color="#E5E5E5"> clients log</font>

482
00:26:37,779 --> 00:26:45,880
into and put some real money take big

483
00:26:41,260 --> 00:26:48,340
risk and win or lose rather<font color="#CCCCCC"> lose so it</font>

484
00:26:45,880 --> 00:26:51,309
was an online application but it

485
00:26:48,340 --> 00:26:54,580
communicated through a proprietary

486
00:26:51,309 --> 00:26:57,519
network protocol it was binary to

487
00:26:54,580 --> 00:27:01,658
minimize the delays and it was<font color="#CCCCCC"> actually</font>

488
00:26:57,519 --> 00:27:03,399
<font color="#E5E5E5">TCP in the SSL tunnel so we had to do a</font>

489
00:27:01,659 --> 00:27:05,320
man-in-the-middle attack first there<font color="#CCCCCC"> was</font>

490
00:27:03,399 --> 00:27:06,850
some pic the awesome pinning it was not

491
00:27:05,320 --> 00:27:09,730
possible to do a man-in-the-middle<font color="#E5E5E5"> later</font>

492
00:27:06,850 --> 00:27:12,158
on the other customer on<font color="#CCCCCC"> the other</font>

493
00:27:09,730 --> 00:27:12,690
client but just<font color="#E5E5E5"> in the in our lab</font><font color="#CCCCCC"> we</font>

494
00:27:12,159 --> 00:27:14,880
were

495
00:27:12,690 --> 00:27:18,350
able to do a man-in-the-middle attack

496
00:27:14,880 --> 00:27:21,680
and tamper<font color="#CCCCCC"> the communication inside so</font>

497
00:27:18,350 --> 00:27:23,760
we've been sitting like few days on the

498
00:27:21,680 --> 00:27:26,490
world wars in the inside in these

499
00:27:23,760 --> 00:27:28,350
communications sitting the next day the

500
00:27:26,490 --> 00:27:31,890
next day next day and we didn't find

501
00:27:28,350 --> 00:27:36,679
anything until one day when there were

502
00:27:31,890 --> 00:27:42,110
some HTML fragments and on the next<font color="#E5E5E5"> one</font>

503
00:27:36,680 --> 00:27:46,620
we've seen something like this which

504
00:27:42,110 --> 00:27:49,050
closer looks like that it is<font color="#E5E5E5"> a soap</font>

505
00:27:46,620 --> 00:27:52,820
communication right soap message

506
00:27:49,050 --> 00:27:56,760
response from the server now we can

507
00:27:52,820 --> 00:27:59,460
let's say suppose that this is the path

508
00:27:56,760 --> 00:28:02,879
for the web service and the method is

509
00:27:59,460 --> 00:28:07,440
this cluster right so we tried to

510
00:28:02,880 --> 00:28:10,320
<font color="#CCCCCC">brute-force other methods in this</font>

511
00:28:07,440 --> 00:28:11,850
<font color="#E5E5E5">communication we found some admin</font>

512
00:28:10,320 --> 00:28:16,230
service but but there were some

513
00:28:11,850 --> 00:28:18,389
exceptions after doing some brute

514
00:28:16,230 --> 00:28:21,900
forcing we found the method which was

515
00:28:18,390 --> 00:28:24,000
called register user why it was in the

516
00:28:21,900 --> 00:28:28,700
client interface not only<font color="#E5E5E5"> in the admin</font>

517
00:28:24,000 --> 00:28:33,150
interface we don't know so the answer

518
00:28:28,700 --> 00:28:37,380
for a empty request with the<font color="#E5E5E5"> method</font>

519
00:28:33,150 --> 00:28:42,650
register user was incorrect login so

520
00:28:37,380 --> 00:28:46,470
what do you do you<font color="#CCCCCC"> just add another</font>

521
00:28:42,650 --> 00:28:49,500
entity with with<font color="#E5E5E5"> the</font><font color="#CCCCCC"> login</font><font color="#E5E5E5"> right and</font><font color="#CCCCCC"> the</font>

522
00:28:46,470 --> 00:28:52,170
response which incorrect password so we

523
00:28:49,500 --> 00:28:54,270
put a password in this in response with

524
00:28:52,170 --> 00:28:59,700
incorrect first name actually all<font color="#CCCCCC"> of the</font>

525
00:28:54,270 --> 00:29:03,120
form form inputs were responded as an

526
00:28:59,700 --> 00:29:05,700
error so we put the<font color="#E5E5E5"> first name and it</font>

527
00:29:03,120 --> 00:29:07,860
responded that group with name new does

528
00:29:05,700 --> 00:29:10,590
not exist if you would<font color="#E5E5E5"> like to choose a</font>

529
00:29:07,860 --> 00:29:13,199
group for your user in the<font color="#E5E5E5"> forex trading</font>

530
00:29:10,590 --> 00:29:16,020
software what would you choose admin

531
00:29:13,200 --> 00:29:19,910
admin does not exist other administrator

532
00:29:16,020 --> 00:29:23,720
<font color="#E5E5E5">reset does not exist any one</font><font color="#CCCCCC"> route and</font>

533
00:29:19,910 --> 00:29:31,070
the answer for changing this

534
00:29:23,720 --> 00:29:34,490
was so this was an installation of<font color="#E5E5E5"> forex</font>

535
00:29:31,070 --> 00:29:38,178
software for one of the<font color="#E5E5E5"> banks so the</font>

536
00:29:34,490 --> 00:29:42,919
banks in forex industry are like there

537
00:29:38,179 --> 00:29:44,539
are some groups of banks and if you can

538
00:29:42,919 --> 00:29:47,650
imagine like<font color="#CCCCCC"> the whole amount of money</font>

539
00:29:44,539 --> 00:29:52,210
that is on the<font color="#E5E5E5"> forex software this</font><font color="#CCCCCC"> bank</font>

540
00:29:47,650 --> 00:29:56,600
could do transaction about like one<font color="#E5E5E5"> of</font>

541
00:29:52,210 --> 00:30:00,140
thousands of the whole<font color="#E5E5E5"> amount well it's</font>

542
00:29:56,600 --> 00:30:05,178
<font color="#CCCCCC">still enough it's still enough okay so</font>

543
00:30:00,140 --> 00:30:06,980
it was it was very epic fail the user of

544
00:30:05,179 --> 00:30:10,340
course had all the administrator rights

545
00:30:06,980 --> 00:30:13,820
I could put false money on the accounts

546
00:30:10,340 --> 00:30:16,580
<font color="#E5E5E5">and so on and completely</font><font color="#CCCCCC"> tampering</font><font color="#E5E5E5"> the</font>

547
00:30:13,820 --> 00:30:19,610
accountability of this system when we

548
00:30:16,580 --> 00:30:23,600
contacted<font color="#E5E5E5"> the vendor actually the bank</font>

549
00:30:19,610 --> 00:30:27,080
contacted the vendor they could not get

550
00:30:23,600 --> 00:30:32,389
how we hacked this solution because

551
00:30:27,080 --> 00:30:36,649
they've got the firewall and they

552
00:30:32,390 --> 00:30:40,490
thought<font color="#E5E5E5"> that we physically went into</font>

553
00:30:36,650 --> 00:30:42,710
their location to their server and put

554
00:30:40,490 --> 00:30:46,429
the cable here and i'll drop<font color="#CCCCCC"> a drone</font>

555
00:30:42,710 --> 00:30:49,210
with Wi-Fi hard hacking tool or

556
00:30:46,429 --> 00:30:52,490
something and it was very hard to

557
00:30:49,210 --> 00:30:54,440
<font color="#E5E5E5">explain them that we just tempered the</font>

558
00:30:52,490 --> 00:30:56,090
proprietary network protocol which was

559
00:30:54,440 --> 00:31:00,230
coming<font color="#E5E5E5"> through the firewall because it</font>

560
00:30:56,090 --> 00:31:06,590
was the accessible way of contacting

561
00:31:00,230 --> 00:31:09,110
this<font color="#E5E5E5"> okay so okay</font><font color="#CCCCCC"> ten minutes</font><font color="#E5E5E5"> I would</font>

562
00:31:06,590 --> 00:31:11,928
like<font color="#CCCCCC"> to</font><font color="#E5E5E5"> show you some cheat sheet if you</font>

563
00:31:09,110 --> 00:31:14,479
are owner of such solution if you are a

564
00:31:11,929 --> 00:31:17,539
buyer of solution which uses proprietary

565
00:31:14,480 --> 00:31:21,260
network protocol so first of all get it

566
00:31:17,539 --> 00:31:25,850
pen tested verify vendor claims and ask

567
00:31:21,260 --> 00:31:28,429
how do this vendor address

568
00:31:25,850 --> 00:31:33,559
vulnerabilities which could be<font color="#E5E5E5"> found by</font>

569
00:31:28,429 --> 00:31:36,169
any any hacker or somebody see how

570
00:31:33,559 --> 00:31:37,230
previously found bugs were addressed and

571
00:31:36,169 --> 00:31:40,679
if word

572
00:31:37,230 --> 00:31:45,120
past of course and if you are developer

573
00:31:40,679 --> 00:31:47,309
of that solution well remember security

574
00:31:45,120 --> 00:31:49,709
by obscurity doesn't work so use a

575
00:31:47,309 --> 00:31:52,500
proper encryption and don't try to write

576
00:31:49,710 --> 00:31:54,210
your own encryption<font color="#CCCCCC"> algorithm</font><font color="#E5E5E5"> because if</font>

577
00:31:52,500 --> 00:31:57,960
you are not<font color="#E5E5E5"> a specialist in that field</font>

578
00:31:54,210 --> 00:31:59,910
probably will fail so remember about

579
00:31:57,960 --> 00:32:03,450
that the protocol is only the outer

580
00:31:59,910 --> 00:32:04,770
<font color="#E5E5E5">layer maybe it's impossible to do a</font>

581
00:32:03,450 --> 00:32:07,590
man-in-the-middle attack of the outer

582
00:32:04,770 --> 00:32:09,360
protocol but in the lab you can you

583
00:32:07,590 --> 00:32:12,059
could do a men in<font color="#CCCCCC"> the middle attack for</font>

584
00:32:09,360 --> 00:32:16,500
yourself and tamper<font color="#CCCCCC"> the communication</font>

585
00:32:12,059 --> 00:32:17,879
inside and of<font color="#CCCCCC"> course we were the</font>

586
00:32:16,500 --> 00:32:21,840
backwards compatibility<font color="#CCCCCC"> as in the</font>

587
00:32:17,880 --> 00:32:23,760
remotest protocols the question is

588
00:32:21,840 --> 00:32:26,250
because<font color="#E5E5E5"> like I think that most of you</font>

589
00:32:23,760 --> 00:32:28,740
are pen testers or specialized in that

590
00:32:26,250 --> 00:32:30,240
field how to hack protocols there is

591
00:32:28,740 --> 00:32:31,770
actually<font color="#E5E5E5"> I found that there is another</font>

592
00:32:30,240 --> 00:32:35,630
presentation about proprietary network

593
00:32:31,770 --> 00:32:38,010
protocols at<font color="#CCCCCC"> Infosecurity</font><font color="#E5E5E5"> Rob I</font>

594
00:32:35,630 --> 00:32:40,320
contacted<font color="#CCCCCC"> the guy i think it was Daniel</font>

595
00:32:38,010 --> 00:32:45,299
<font color="#CCCCCC">Monday who is creating a log key</font>

596
00:32:40,320 --> 00:32:47,760
software which works somehow like Escape

597
00:32:45,299 --> 00:32:51,840
key to escape you for proprietor yeah

598
00:32:47,760 --> 00:32:54,660
well well these are some<font color="#CCCCCC"> ways for</font>

599
00:32:51,840 --> 00:32:56,850
<font color="#CCCCCC">example for me if I was</font><font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> hack</font>

600
00:32:54,660 --> 00:33:00,720
these<font color="#E5E5E5"> protocols we escaped he probably</font>

601
00:32:56,850 --> 00:33:03,330
it will take me twice more time that I

602
00:33:00,720 --> 00:33:08,850
did it by myself just<font color="#CCCCCC"> with small Python</font>

603
00:33:03,330 --> 00:33:10,500
or PHP scripts well so like the funny

604
00:33:08,850 --> 00:33:17,040
thing is that you should<font color="#E5E5E5"> really google</font>

605
00:33:10,500 --> 00:33:19,470
for it we found some unofficial client

606
00:33:17,040 --> 00:33:23,220
just in the internet but really funny

607
00:33:19,470 --> 00:33:26,429
was finding on google and actually in

608
00:33:23,220 --> 00:33:28,860
the Russian internet the documentation

609
00:33:26,429 --> 00:33:32,669
of the proprietary network protocol<font color="#E5E5E5"> used</font>

610
00:33:28,860 --> 00:33:36,059
in the forex trading software which is

611
00:33:32,669 --> 00:33:37,830
actually unacceptable if you handle with

612
00:33:36,059 --> 00:33:42,629
such amount of money and software which

613
00:33:37,830 --> 00:33:44,399
<font color="#E5E5E5">handle such amount of money okay so of</font>

614
00:33:42,630 --> 00:33:46,440
course you could decompile the client

615
00:33:44,400 --> 00:33:48,870
it's well if it's an<font color="#E5E5E5"> Android application</font>

616
00:33:46,440 --> 00:33:52,559
<font color="#E5E5E5">without obfuscation it's it's very easy</font>

617
00:33:48,870 --> 00:33:54,120
right or dotnet application but

618
00:33:52,559 --> 00:33:56,460
sometimes<font color="#CCCCCC"> it can be really</font>

619
00:33:54,120 --> 00:34:03,570
<font color="#E5E5E5">time-consuming and the</font><font color="#CCCCCC"> time consuming of</font>

620
00:33:56,460 --> 00:34:08,310
that will be<font color="#E5E5E5"> not will be not really good</font>

621
00:34:03,570 --> 00:34:10,199
used right so well our approach<font color="#E5E5E5"> to</font>

622
00:34:08,310 --> 00:34:12,230
<font color="#E5E5E5">testing these protocols is actually</font>

623
00:34:10,199 --> 00:34:15,359
<font color="#CCCCCC">actually watching their own pockets and</font>

624
00:34:12,230 --> 00:34:18,540
trying to think what developers could

625
00:34:15,360 --> 00:34:23,100
write about this solution that it looks

626
00:34:18,540 --> 00:34:27,149
like<font color="#E5E5E5"> this on the</font><font color="#CCCCCC"> cable well try</font><font color="#E5E5E5"> to spot</font>

627
00:34:23,100 --> 00:34:31,500
some scheme so we<font color="#CCCCCC"> try to use some</font>

628
00:34:27,149 --> 00:34:34,560
machine learning to find a scheme in the

629
00:34:31,500 --> 00:34:39,000
communication but actually<font color="#E5E5E5"> it does not</font>

630
00:34:34,560 --> 00:34:41,719
work<font color="#CCCCCC"> like we invented more with our</font>

631
00:34:39,000 --> 00:34:45,060
brains than the machine learning thing

632
00:34:41,719 --> 00:34:47,850
well of<font color="#CCCCCC"> course use for this research we</font>

633
00:34:45,060 --> 00:34:50,909
mostly use wireshark TCP dump ssl down

634
00:34:47,850 --> 00:34:54,989
and our own scripts in Python and PHP<font color="#E5E5E5"> to</font>

635
00:34:50,909 --> 00:34:58,290
intercept traffic on the TCP layer yeah

636
00:34:54,989 --> 00:34:59,669
well well<font color="#E5E5E5"> I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> I've</font><font color="#CCCCCC"> got a few</font><font color="#E5E5E5"> more</font>

637
00:34:58,290 --> 00:35:02,850
minutes I would like to<font color="#CCCCCC"> show you some</font>

638
00:34:59,670 --> 00:35:06,450
some more examples of proprietary

639
00:35:02,850 --> 00:35:10,860
network protocols so once we tested

640
00:35:06,450 --> 00:35:18,120
industrial systems for tracking error

641
00:35:10,860 --> 00:35:20,700
feet tags so there was some appliance

642
00:35:18,120 --> 00:35:24,630
with with access to the<font color="#E5E5E5"> internet and</font>

643
00:35:20,700 --> 00:35:27,930
with modbus tcp protocols well this is

644
00:35:24,630 --> 00:35:28,920
some interface web interface of this

645
00:35:27,930 --> 00:35:30,810
solution whether it's not very

646
00:35:28,920 --> 00:35:34,650
interesting<font color="#CCCCCC"> what is interesting there</font>

647
00:35:30,810 --> 00:35:37,710
was<font color="#E5E5E5"> error feed reader at the gate of the</font>

648
00:35:34,650 --> 00:35:41,820
company and its read all the graffiti

649
00:35:37,710 --> 00:35:45,800
attacks which were on the tracks and

650
00:35:41,820 --> 00:35:51,150
automatically open the gate so this box

651
00:35:45,800 --> 00:35:54,840
had some open ports in<font color="#CCCCCC"> the documentation</font>

652
00:35:51,150 --> 00:35:57,420
<font color="#E5E5E5">of this we found that sending an error</font>

653
00:35:54,840 --> 00:36:00,980
feed to this box is also possible for

654
00:35:57,420 --> 00:36:04,910
telnet on the port<font color="#E5E5E5"> 4007</font>

655
00:36:00,980 --> 00:36:09,080
and you have to put these these raw

656
00:36:04,910 --> 00:36:12,080
values on the<font color="#CCCCCC"> cable so of</font><font color="#E5E5E5"> course we</font>

657
00:36:09,080 --> 00:36:16,250
connected<font color="#CCCCCC"> with this and we could open</font>

658
00:36:12,080 --> 00:36:20,630
<font color="#CCCCCC">the gate</font><font color="#E5E5E5"> just from the</font><font color="#CCCCCC"> actual um network</font>

659
00:36:16,250 --> 00:36:22,730
of this solution but the proprietary

660
00:36:20,630 --> 00:36:26,359
network protocol is it's not very it's

661
00:36:22,730 --> 00:36:28,609
not very complicated here<font color="#CCCCCC"> okay and here</font>

662
00:36:26,359 --> 00:36:33,770
in the<font color="#E5E5E5"> hex dump of this communication we</font>

663
00:36:28,609 --> 00:36:35,509
found the araphi tax identifiers but

664
00:36:33,770 --> 00:36:38,869
actually<font color="#CCCCCC"> should we worry about this like</font>

665
00:36:35,510 --> 00:36:42,260
what what is the<font color="#E5E5E5"> problem even there was</font>

666
00:36:38,869 --> 00:36:44,900
a physically physical security guy over

667
00:36:42,260 --> 00:36:48,320
there so he could watch if we<font color="#E5E5E5"> are</font>

668
00:36:44,900 --> 00:36:53,720
entering with a wrong car or not with a

669
00:36:48,320 --> 00:36:57,830
<font color="#CCCCCC">truck but there is now it's a big hype</font>

670
00:36:53,720 --> 00:37:02,299
on Bluetooth smart IOT things which is

671
00:36:57,830 --> 00:37:04,250
<font color="#E5E5E5">cloud computing and so on and so well</font>

672
00:37:02,300 --> 00:37:08,270
there is the slides about bluetooth but

673
00:37:04,250 --> 00:37:10,010
i want<font color="#CCCCCC"> to show you this funny thing well</font>

674
00:37:08,270 --> 00:37:12,859
there<font color="#E5E5E5"> are some for example NFC tags</font>

675
00:37:10,010 --> 00:37:17,090
bluetooth tags in the museum so you can

676
00:37:12,859 --> 00:37:18,980
see what is what is on the image or on

677
00:37:17,090 --> 00:37:20,570
the picture that is in the museum well

678
00:37:18,980 --> 00:37:23,270
that's not very interesting but there is

679
00:37:20,570 --> 00:37:27,170
<font color="#CCCCCC">a thing called cruise control for</font>

680
00:37:23,270 --> 00:37:29,150
pedestrians anybody heard about this so

681
00:37:27,170 --> 00:37:31,280
this<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> Bluetooth device which</font>

682
00:37:29,150 --> 00:37:34,130
contacts which contains some electrodes

683
00:37:31,280 --> 00:37:36,520
you put it<font color="#E5E5E5"> on the legs with wine does it</font>

684
00:37:34,130 --> 00:37:36,520
<font color="#E5E5E5">move work</font>

685
00:37:38,599 --> 00:37:44,809
okay and from the<font color="#CCCCCC"> Bluetooth from the</font>

686
00:37:42,440 --> 00:37:49,119
<font color="#CCCCCC">mobile application you can move some</font>

687
00:37:44,809 --> 00:37:52,549
somebody's leg right so if you hug this

688
00:37:49,119 --> 00:37:56,150
this communication this protocol on the

689
00:37:52,549 --> 00:37:59,390
wire it works<font color="#CCCCCC"> like automatically yeah</font>

690
00:37:56,150 --> 00:38:02,569
that's that's what they're climbing so

691
00:37:59,390 --> 00:38:07,569
our first idea like what would happen if

692
00:38:02,569 --> 00:38:07,569
you<font color="#CCCCCC"> hack this solution right all this</font>

693
00:38:09,160 --> 00:38:17,259
<font color="#E5E5E5">okay well there there are many different</font>

694
00:38:13,700 --> 00:38:21,470
devices like there is smart cup which

695
00:38:17,259 --> 00:38:23,119
tests what is inside the drink and it

696
00:38:21,470 --> 00:38:26,118
communicates with the<font color="#E5E5E5"> mobile</font><font color="#CCCCCC"> application</font>

697
00:38:23,119 --> 00:38:28,670
through bluetooth and actually bluetooth

698
00:38:26,119 --> 00:38:30,229
is well it's not it's<font color="#CCCCCC"> not proprietary</font>

699
00:38:28,670 --> 00:38:31,970
network protocol there is the common

700
00:38:30,229 --> 00:38:35,930
tation do you know how many pages is the

701
00:38:31,970 --> 00:38:38,479
Bluetooth<font color="#E5E5E5"> Low Energy documentation to</font>

702
00:38:35,930 --> 00:38:39,859
actually create pockets and understand

703
00:38:38,479 --> 00:38:45,229
what's going<font color="#E5E5E5"> on there you have</font><font color="#CCCCCC"> to read</font>

704
00:38:39,859 --> 00:38:48,078
<font color="#CCCCCC">3,000 pages so we call it</font><font color="#E5E5E5"> proprietary</font>

705
00:38:45,229 --> 00:38:51,279
and well in my city there was<font color="#E5E5E5"> a hacking</font>

706
00:38:48,079 --> 00:38:54,440
competition by startup which invented

707
00:38:51,279 --> 00:38:56,059
appliance in the car which connects with

708
00:38:54,440 --> 00:38:59,960
a<font color="#E5E5E5"> mobile device and you can open your</font>

709
00:38:56,059 --> 00:39:04,369
car with a<font color="#E5E5E5"> mobile application and</font>

710
00:38:59,960 --> 00:39:06,589
actually we hug this competition even

711
00:39:04,369 --> 00:39:09,430
though somebody told them that it's

712
00:39:06,589 --> 00:39:13,460
unbreakable because the you use of AES

713
00:39:09,430 --> 00:39:17,479
and actually it<font color="#CCCCCC"> the</font><font color="#E5E5E5"> topic of connected</font>

714
00:39:13,460 --> 00:39:19,880
cars is very is very big now like BMW

715
00:39:17,479 --> 00:39:23,419
<font color="#E5E5E5">Audis and Volkswagens are implementing</font>

716
00:39:19,880 --> 00:39:26,089
all they're connected<font color="#CCCCCC"> car devices which</font>

717
00:39:23,420 --> 00:39:27,440
which you can open the car with the

718
00:39:26,089 --> 00:39:29,808
mobile<font color="#E5E5E5"> device you can control the air</font>

719
00:39:27,440 --> 00:39:31,700
conditioning<font color="#E5E5E5"> well well I've got some</font>

720
00:39:29,809 --> 00:39:35,420
funny stories about<font color="#E5E5E5"> that when i entered</font>

721
00:39:31,700 --> 00:39:37,669
the volkswagen dealer and tried to hack

722
00:39:35,420 --> 00:39:40,489
this connected car but<font color="#CCCCCC"> okay maybe that's</font>

723
00:39:37,670 --> 00:39:41,630
<font color="#E5E5E5">for the after party</font><font color="#CCCCCC"> okay I would like to</font>

724
00:39:40,489 --> 00:39:44,749
really thank you<font color="#E5E5E5"> for attending my</font>

725
00:39:41,630 --> 00:39:48,469
presentation well my company invented

726
00:39:44,749 --> 00:39:52,669
some like<font color="#CCCCCC"> think for a better world we</font>

727
00:39:48,469 --> 00:39:54,829
provide free consultancy of security we

728
00:39:52,670 --> 00:39:56,509
spend one hour per week for a free

729
00:39:54,829 --> 00:39:58,430
consultation see if you have any not

730
00:39:56,509 --> 00:40:00,410
<font color="#E5E5E5">only business like we have private</font>

731
00:39:58,430 --> 00:40:03,618
concerns about security you<font color="#E5E5E5"> can ask this</font>

732
00:40:00,410 --> 00:40:05,749
well the link is in<font color="#CCCCCC"> Polish but if you</font>

733
00:40:03,619 --> 00:40:08,420
send me<font color="#E5E5E5"> an email actually I can send you</font>

734
00:40:05,749 --> 00:40:10,519
<font color="#CCCCCC">the english version sorry and if you</font>

735
00:40:08,420 --> 00:40:13,579
have if you<font color="#CCCCCC"> have got any questions you</font>

736
00:40:10,519 --> 00:40:15,499
can ask me and leave your business card

737
00:40:13,579 --> 00:40:18,190
if<font color="#E5E5E5"> you want the presentation or my other</font>

738
00:40:15,499 --> 00:40:18,189
presentations

