1
00:00:02,600 --> 00:00:10,320
my name is Ella Himani I consider myself

2
00:00:07,680 --> 00:00:14,269
as a Malvern slash stop reverse engineer

3
00:00:10,320 --> 00:00:17,160
and I'm based in Montreal Canada was

4
00:00:14,269 --> 00:00:19,710
formerly part of chrome Protection team

5
00:00:17,160 --> 00:00:23,480
at Google Montreal and recently I joined

6
00:00:19,710 --> 00:00:26,490
Symantec modern OS security team we

7
00:00:23,480 --> 00:00:30,510
continuously research new mobile threats

8
00:00:26,490 --> 00:00:34,700
and we focus mostly on enterprise apps

9
00:00:30,510 --> 00:00:38,670
but on both markets Android and iOS and

10
00:00:34,700 --> 00:00:43,340
peace can apps and provide detection for

11
00:00:38,670 --> 00:00:46,590
unwanted malware or any misusing apps

12
00:00:43,340 --> 00:00:52,430
today I am going to talk about analytic

13
00:00:46,590 --> 00:00:54,510
SDKs and session recording technology

14
00:00:52,430 --> 00:00:56,610
for those of you who might not be

15
00:00:54,510 --> 00:00:58,739
familiar with session replay is a

16
00:00:56,610 --> 00:01:02,190
technology provided by analytic SDKs

17
00:00:58,739 --> 00:01:05,548
mostly to monitor user interaction with

18
00:01:02,190 --> 00:01:08,850
the app it can contain any information

19
00:01:05,549 --> 00:01:11,700
like touch mouse movement scrolling type

20
00:01:08,850 --> 00:01:16,880
in court base literally anything any

21
00:01:11,700 --> 00:01:20,280
interaction and this helps developer to

22
00:01:16,880 --> 00:01:22,979
find when and where with their

23
00:01:20,280 --> 00:01:24,630
application crashes or it's for

24
00:01:22,979 --> 00:01:26,750
marketing purpose to see which part of

25
00:01:24,630 --> 00:01:29,939
their application is most popular and

26
00:01:26,750 --> 00:01:32,970
this sort of stuff but some holistic

27
00:01:29,939 --> 00:01:36,779
SDKs they take one step further and they

28
00:01:32,970 --> 00:01:43,500
want to watch you as you interact with

29
00:01:36,780 --> 00:01:45,270
the app and they basically take in APIs

30
00:01:43,500 --> 00:01:48,479
screenshots or the actual recording

31
00:01:45,270 --> 00:02:01,170
while you are using the application I am

32
00:01:48,479 --> 00:02:03,899
going to show you one little this is ab

33
00:02:01,170 --> 00:02:08,729
c-- sdk one of the popular SDKs with

34
00:02:03,899 --> 00:02:10,619
session recording capability you see you

35
00:02:08,729 --> 00:02:13,319
can browse all the sessions that are

36
00:02:10,619 --> 00:02:13,830
recorded and the sessions are all and

37
00:02:13,319 --> 00:02:15,690
the third power

38
00:02:13,830 --> 00:02:19,230
the application or third-party servers

39
00:02:15,690 --> 00:02:21,900
and you can replay the session to see

40
00:02:19,230 --> 00:02:24,899
where and when the crash happens

41
00:02:21,900 --> 00:02:29,100
this is alleged use case for analytic

42
00:02:24,900 --> 00:02:34,550
SDK but looking at other SDK like

43
00:02:29,100 --> 00:02:37,950
breakout room this one is a calendar or

44
00:02:34,550 --> 00:02:40,140
presentation scheduling app and this is

45
00:02:37,950 --> 00:02:42,089
a sample recording where you can see all

46
00:02:40,140 --> 00:02:43,980
the content and even user profile

47
00:02:42,090 --> 00:02:46,740
picture and everything and on the right

48
00:02:43,980 --> 00:02:56,970
side you see a lot of user specific

49
00:02:46,740 --> 00:02:59,400
information okay so in other word we can

50
00:02:56,970 --> 00:03:01,770
say they are looking over your shoulder

51
00:02:59,400 --> 00:03:04,560
and watch you as you interact with the

52
00:03:01,770 --> 00:03:06,900
app and the extent of data that is being

53
00:03:04,560 --> 00:03:09,959
recorded for exceed user expectations

54
00:03:06,900 --> 00:03:12,570
when you type in a form even before

55
00:03:09,959 --> 00:03:15,290
submitting that form or when you are

56
00:03:12,570 --> 00:03:18,570
editing a photo a private photo in your

57
00:03:15,290 --> 00:03:21,329
application all I mean everything can be

58
00:03:18,570 --> 00:03:24,480
recorded and monitored and everything is

59
00:03:21,330 --> 00:03:26,340
done without any user indication because

60
00:03:24,480 --> 00:03:29,579
this SDKs they don't need any specific

61
00:03:26,340 --> 00:03:30,989
permission so user most of the time they

62
00:03:29,580 --> 00:03:36,360
have no idea that they are being

63
00:03:30,989 --> 00:03:38,850
recorded security concern and incidents

64
00:03:36,360 --> 00:03:42,180
associated with this SDKs is not

65
00:03:38,850 --> 00:03:47,310
something new we had a couple of

66
00:03:42,180 --> 00:03:50,580
incidents Mixpanel in 2017 or ab c test

67
00:03:47,310 --> 00:03:55,260
very SDKs in 2018 and most recent one

68
00:03:50,580 --> 00:03:57,660
glassworks sdk in 2019 where a lot of

69
00:03:55,260 --> 00:04:00,840
PRI information like postal code credit

70
00:03:57,660 --> 00:04:05,130
card numbers they were leaked and with

71
00:04:00,840 --> 00:04:07,290
GlassBox sdk a lot of big and popular

72
00:04:05,130 --> 00:04:10,200
apps they were using glass box air

73
00:04:07,290 --> 00:04:15,420
canada hotels.com singapore airline and

74
00:04:10,200 --> 00:04:19,079
Expedia so with air canada incident the

75
00:04:15,420 --> 00:04:21,719
problem was this SDKs they provide basic

76
00:04:19,079 --> 00:04:24,389
API to hide or mask certain fields and

77
00:04:21,720 --> 00:04:26,249
sensitive fields and

78
00:04:24,389 --> 00:04:28,889
Canada was using glass box and they were

79
00:04:26,249 --> 00:04:31,499
the developer they were aware of such a

80
00:04:28,889 --> 00:04:33,719
the api's to mask certain fields and you

81
00:04:31,499 --> 00:04:35,400
see on the left side they were masking

82
00:04:33,719 --> 00:04:38,219
credit card numbers or address

83
00:04:35,400 --> 00:04:41,489
information but in another view they

84
00:04:38,219 --> 00:04:44,310
were they failed to mask those fields

85
00:04:41,490 --> 00:04:46,199
and they were recorded as plain text in

86
00:04:44,310 --> 00:04:50,729
the second screenshot in another view

87
00:04:46,199 --> 00:04:54,150
and it's the same that's the case for

88
00:04:50,729 --> 00:04:57,090
password field to the left screenshot

89
00:04:54,150 --> 00:04:58,919
they mask the password and that's the

90
00:04:57,090 --> 00:05:02,758
login page but on the right side

91
00:04:58,919 --> 00:05:04,438
screenshots that they are for initial

92
00:05:02,759 --> 00:05:07,439
login attempt or when you would create

93
00:05:04,439 --> 00:05:10,379
an account they fail to mask a password

94
00:05:07,439 --> 00:05:14,009
field and they are included in the

95
00:05:10,379 --> 00:05:16,199
screenshots and akov is one of the

96
00:05:14,009 --> 00:05:18,900
applications that collect a lot of PII

97
00:05:16,199 --> 00:05:23,129
information password number data pairs I

98
00:05:18,900 --> 00:05:26,638
mean and credit card numbers and it's

99
00:05:23,129 --> 00:05:29,129
not easy to test an app for this sort of

100
00:05:26,639 --> 00:05:31,500
stuff because you have to test all views

101
00:05:29,129 --> 00:05:33,569
and all fields to make sure you capture

102
00:05:31,500 --> 00:05:37,979
all the interactions and nothing is

103
00:05:33,569 --> 00:05:41,729
passed so it's not an easy job another

104
00:05:37,979 --> 00:05:45,149
problem with these SDKs is that they let

105
00:05:41,729 --> 00:05:47,099
you identify sessions by collecting and

106
00:05:45,149 --> 00:05:50,069
associating some user specific

107
00:05:47,099 --> 00:05:53,188
information like actual name that user

108
00:05:50,069 --> 00:05:56,250
used inside the app or address postal

109
00:05:53,189 --> 00:05:59,689
code on or UUID or any device

110
00:05:56,250 --> 00:06:02,939
information for user attribution and

111
00:05:59,689 --> 00:06:07,409
these pictures are from again breakout

112
00:06:02,939 --> 00:06:10,649
room SDK and shockingly they put user

113
00:06:07,409 --> 00:06:13,050
profile picture inside the session and

114
00:06:10,649 --> 00:06:20,189
we sought other information like email

115
00:06:13,050 --> 00:06:23,639
address name and real address and etc as

116
00:06:20,189 --> 00:06:26,550
I said they can also use a unreadable

117
00:06:23,639 --> 00:06:29,729
unique ID or device IDs as well like

118
00:06:26,550 --> 00:06:34,360
IMEI MSI and despise all the

119
00:06:29,729 --> 00:06:37,219
recommendation that they tell us use

120
00:06:34,360 --> 00:06:39,200
randomly generated IDs per installation

121
00:06:37,220 --> 00:06:42,020
that we see a lot of apps they're still

122
00:06:39,200 --> 00:06:47,719
using IMEI and IMS I'll or phone number

123
00:06:42,020 --> 00:06:50,450
and numbers is high okay

124
00:06:47,720 --> 00:06:52,310
there are different methods to take in

125
00:06:50,450 --> 00:06:57,590
alpha screenshots or make a video

126
00:06:52,310 --> 00:07:01,100
recording in iOS 9 and later we have

127
00:06:57,590 --> 00:07:04,489
replay kit but you can use to just

128
00:07:01,100 --> 00:07:06,530
stream video from from the screen but it

129
00:07:04,490 --> 00:07:09,710
requires user constant so this is not

130
00:07:06,530 --> 00:07:12,890
something that SDKs videos the other

131
00:07:09,710 --> 00:07:16,909
option is using UI graphic begin image

132
00:07:12,890 --> 00:07:22,820
contacts API to capture the content of

133
00:07:16,910 --> 00:07:25,670
topmost UI window that the top one and a

134
00:07:22,820 --> 00:07:27,740
story that's UI image in this case all

135
00:07:25,670 --> 00:07:29,690
the popovers and alerts will also be

136
00:07:27,740 --> 00:07:32,780
included in the screenshot the second

137
00:07:29,690 --> 00:07:36,680
one is basically similar but capturing

138
00:07:32,780 --> 00:07:43,760
all the UI view content inside a UI

139
00:07:36,680 --> 00:07:46,970
image another technique is leveraging

140
00:07:43,760 --> 00:07:49,130
JavaScript bridge to manipulate or

141
00:07:46,970 --> 00:07:52,610
capture everything inside the do Mui

142
00:07:49,130 --> 00:07:55,010
pepper you do em and then make an actual

143
00:07:52,610 --> 00:07:56,690
recording the only caveat here is that

144
00:07:55,010 --> 00:07:59,870
you need to have all the static

145
00:07:56,690 --> 00:08:02,690
information of that you stored in the

146
00:07:59,870 --> 00:08:04,760
third-party SDK then mix it with what

147
00:08:02,690 --> 00:08:07,969
you capture from the do em and make it a

148
00:08:04,760 --> 00:08:10,099
pixel perfect perfect recording this

149
00:08:07,970 --> 00:08:13,190
doesn't need any user permission or

150
00:08:10,100 --> 00:08:15,290
consent and its platform independent and

151
00:08:13,190 --> 00:08:21,440
that's the popular technique used by and

152
00:08:15,290 --> 00:08:24,230
I'll take SDKs so um okay alright we

153
00:08:21,440 --> 00:08:26,840
talked about SDKs but how do we detect

154
00:08:24,230 --> 00:08:29,390
them and how do we identify SDKs inside

155
00:08:26,840 --> 00:08:32,980
the app or more importantly how we can I

156
00:08:29,390 --> 00:08:35,720
mean how can we identify misusing apps

157
00:08:32,980 --> 00:08:38,720
it's not easy to decompose an

158
00:08:35,720 --> 00:08:40,370
application into SDKs you can look for

159
00:08:38,720 --> 00:08:44,720
static information like Android manifest

160
00:08:40,370 --> 00:08:47,060
or in populace or class dump and check

161
00:08:44,720 --> 00:08:47,560
them against predefined signatures for

162
00:08:47,060 --> 00:08:51,310
and

163
00:08:47,560 --> 00:08:53,619
sdks popular SDKs or you can look into

164
00:08:51,310 --> 00:08:55,239
dynamic if you have dynamic analysis you

165
00:08:53,620 --> 00:08:58,930
can look at the trace dawn file

166
00:08:55,240 --> 00:09:02,440
to see all the calls to the analytic

167
00:08:58,930 --> 00:09:04,719
SDKs api's and a better way or maybe

168
00:09:02,440 --> 00:09:08,140
more automated way is to use

169
00:09:04,720 --> 00:09:10,900
classification and classify apps based

170
00:09:08,140 --> 00:09:12,850
on their method calls and the frequency

171
00:09:10,900 --> 00:09:15,189
we expect if you are calls with the

172
00:09:12,850 --> 00:09:17,980
higher frequency to be part of SDK and

173
00:09:15,190 --> 00:09:24,630
then you can try to extract the SDK name

174
00:09:17,980 --> 00:09:29,080
from the package we looked into five

175
00:09:24,630 --> 00:09:30,939
analytic SDKs and apps is one of them

176
00:09:29,080 --> 00:09:34,630
we absolutely you have server-side

177
00:09:30,940 --> 00:09:37,120
setting and you can exclude user input

178
00:09:34,630 --> 00:09:38,620
or certain fields on service or certain

179
00:09:37,120 --> 00:09:41,040
views from the session recording or

180
00:09:38,620 --> 00:09:44,620
nothing basically and capture everything

181
00:09:41,040 --> 00:09:48,250
on the developer side you have mark us

182
00:09:44,620 --> 00:09:48,880
sensitive API or you can use resume and

183
00:09:48,250 --> 00:09:51,279
paws-up

184
00:09:48,880 --> 00:09:55,330
right before and after entering a

185
00:09:51,279 --> 00:09:57,070
sensitive view we checked our database

186
00:09:55,330 --> 00:09:59,380
to see if the applications are using

187
00:09:57,070 --> 00:10:01,930
this API s or not and with the static

188
00:09:59,380 --> 00:10:06,430
detection we found around 24,000 apps

189
00:10:01,930 --> 00:10:10,620
that are using app C and our trace dump

190
00:10:06,430 --> 00:10:13,180
shows that around 3500 apps they

191
00:10:10,620 --> 00:10:15,700
actually started recording during the

192
00:10:13,180 --> 00:10:18,910
dynamic analysis and less than half of

193
00:10:15,700 --> 00:10:23,290
them used markup us sensitive API and

194
00:10:18,910 --> 00:10:25,900
only 200 used pause and resume so what

195
00:10:23,290 --> 00:10:28,089
about the remaining apps here's the list

196
00:10:25,900 --> 00:10:30,780
of application that they started

197
00:10:28,089 --> 00:10:33,610
recording and they never called hype

198
00:10:30,780 --> 00:10:36,610
sensitive view API we see big

199
00:10:33,610 --> 00:10:39,750
applications like CheapOair Adobe photo

200
00:10:36,610 --> 00:10:46,720
editing app or go shopping

201
00:10:39,750 --> 00:10:49,480
babies Corinth all and etc Tesla is

202
00:10:46,720 --> 00:10:52,060
another SDK something interesting about

203
00:10:49,480 --> 00:10:55,780
this tech test way is that it provides a

204
00:10:52,060 --> 00:10:59,920
separate API to set user ID it led a

205
00:10:55,780 --> 00:11:03,850
developer to identify sessions basically

206
00:10:59,920 --> 00:11:06,608
you can pass or set attributes like age

207
00:11:03,850 --> 00:11:09,069
phone number and again you see example

208
00:11:06,609 --> 00:11:11,889
here but if you check the documentation

209
00:11:09,069 --> 00:11:15,160
it says this API should only be used on

210
00:11:11,889 --> 00:11:19,149
a private cloud or on a on premise

211
00:11:15,160 --> 00:11:22,238
solution but we found 25 applications

212
00:11:19,149 --> 00:11:24,459
that they were using this API and on and

213
00:11:22,239 --> 00:11:29,499
on it's not it wasn't quite private

214
00:11:24,459 --> 00:11:34,809
cloud and for again it has high view API

215
00:11:29,499 --> 00:11:38,649
and the static detection 25,000 apps we

216
00:11:34,809 --> 00:11:40,299
are using test very 3000 apps they

217
00:11:38,649 --> 00:11:43,540
started recording during dynamic

218
00:11:40,299 --> 00:11:44,980
analysis and only eight of them used

219
00:11:43,540 --> 00:11:50,439
hide view API

220
00:11:44,980 --> 00:11:54,970
and this set user ID as I said 25 apps

221
00:11:50,439 --> 00:11:56,829
they're setting user ID and I will give

222
00:11:54,970 --> 00:12:00,069
you an example of that application very

223
00:11:56,829 --> 00:12:02,199
soon so these are applications that they

224
00:12:00,069 --> 00:12:05,618
started recording and they didn't hide

225
00:12:02,199 --> 00:12:06,998
sensitive views we see this I do I'm not

226
00:12:05,619 --> 00:12:09,339
sure if I'm pronouncing this application

227
00:12:06,999 --> 00:12:12,279
correctly uh a dating app with more than

228
00:12:09,339 --> 00:12:14,860
100 million downloads and the other

229
00:12:12,279 --> 00:12:18,189
dating app for whatever reason Tesla was

230
00:12:14,860 --> 00:12:21,759
very popular and dating apps I don't

231
00:12:18,189 --> 00:12:26,049
know and we have our popular Enterprise

232
00:12:21,759 --> 00:12:29,350
at the slack here and both and transfer

233
00:12:26,049 --> 00:12:32,199
they or money transfer app and also

234
00:12:29,350 --> 00:12:37,419
we're getting app if you are fan it's

235
00:12:32,199 --> 00:12:40,269
just one of them and here's a here's

236
00:12:37,419 --> 00:12:44,410
their example at that use users set user

237
00:12:40,269 --> 00:12:48,220
ID and we looked deeper to see what it

238
00:12:44,410 --> 00:12:52,480
passes as user ID if it's a random ID or

239
00:12:48,220 --> 00:12:54,699
is it something identifiable and looking

240
00:12:52,480 --> 00:12:57,819
at the manifest file you see it has yet

241
00:12:54,699 --> 00:13:00,549
account permission and it also calls a

242
00:12:57,819 --> 00:13:03,488
con manager which means it can grab the

243
00:13:00,549 --> 00:13:06,730
actual Google divided Google ID from the

244
00:13:03,489 --> 00:13:08,499
device and it also collects other

245
00:13:06,730 --> 00:13:10,410
information like SIM card information

246
00:13:08,499 --> 00:13:14,610
and networking formation and

247
00:13:10,410 --> 00:13:17,009
basically passes everything glass box I

248
00:13:14,610 --> 00:13:18,930
talked about it in a Canada case the

249
00:13:17,009 --> 00:13:24,899
number of apps using glass books they

250
00:13:18,930 --> 00:13:27,359
were lower we had 500 883 apps in our

251
00:13:24,899 --> 00:13:31,110
static detection and dynamic detection

252
00:13:27,360 --> 00:13:33,899
account 73 apps and only six of them use

253
00:13:31,110 --> 00:13:37,379
set a screen as sensitive or set views

254
00:13:33,899 --> 00:13:41,550
as sensitive api's and example apps I

255
00:13:37,379 --> 00:13:43,949
already mentioned them uux cam is

256
00:13:41,550 --> 00:13:45,479
another example of ux camera is doing

257
00:13:43,949 --> 00:13:47,550
slightly better in terms of

258
00:13:45,480 --> 00:13:50,269
documentation they have different api's

259
00:13:47,550 --> 00:13:53,420
for hiding sensitive views or fields or

260
00:13:50,269 --> 00:13:57,209
screen they have separate api's and

261
00:13:53,420 --> 00:14:01,469
again 3,000 or 4,000 applications and

262
00:13:57,209 --> 00:14:04,258
only who among 2,000 applications in

263
00:14:01,470 --> 00:14:09,629
dynamic analysis only 217 they were

264
00:14:04,259 --> 00:14:11,850
using one of these api's and here's

265
00:14:09,629 --> 00:14:15,389
example of pad apps that they started

266
00:14:11,850 --> 00:14:17,699
recording and you see leafy application

267
00:14:15,389 --> 00:14:20,399
it's marijuana application to find years

268
00:14:17,699 --> 00:14:23,099
to a nearby can abuse it and this might

269
00:14:20,399 --> 00:14:27,410
have some medical or I don't know

270
00:14:23,100 --> 00:14:27,410
preferences user preferences in it

271
00:14:28,670 --> 00:14:35,430
alright so here's the overview of

272
00:14:32,000 --> 00:14:38,189
applications in each category SDK and

273
00:14:35,430 --> 00:14:42,180
you see tests very and app see they have

274
00:14:38,189 --> 00:14:43,980
highest number followed by UX cam and on

275
00:14:42,180 --> 00:14:46,529
the right side we have platform

276
00:14:43,980 --> 00:14:51,240
distribution and as you can see iOS is

277
00:14:46,529 --> 00:14:53,910
dominant so yeah I just want to wrap up

278
00:14:51,240 --> 00:14:56,309
my presentation analytic SDK is not

279
00:14:53,910 --> 00:14:58,050
something or such high replay technology

280
00:14:56,309 --> 00:15:00,269
it's not something that is likely to go

281
00:14:58,050 --> 00:15:03,149
away very soon developers and companies

282
00:15:00,269 --> 00:15:04,980
they rely on this data for marketing

283
00:15:03,149 --> 00:15:08,250
purposes and it's important for them to

284
00:15:04,980 --> 00:15:10,800
know where the application what happens

285
00:15:08,250 --> 00:15:13,439
inside their application and etc but the

286
00:15:10,800 --> 00:15:16,378
fact that they don't publicize such

287
00:15:13,439 --> 00:15:19,589
behavior just shows that they know how

288
00:15:16,379 --> 00:15:22,950
creepy it is and so

289
00:15:19,590 --> 00:15:25,320
in Canada incident Apple enforce all the

290
00:15:22,950 --> 00:15:28,010
developers to either remove this session

291
00:15:25,320 --> 00:15:31,500
replay or session recording behavior or

292
00:15:28,010 --> 00:15:32,880
updated my privacy page and let the user

293
00:15:31,500 --> 00:15:36,930
know but I mean it's still pretty

294
00:15:32,880 --> 00:15:39,390
Android they don't have to and also user

295
00:15:36,930 --> 00:15:41,489
again they don't have a clear idea of

296
00:15:39,390 --> 00:15:45,569
the extent of data that can be captured

297
00:15:41,490 --> 00:15:47,490
with these SDKs yeah I can stop here and

298
00:15:45,570 --> 00:16:09,780
if there's any questions comments feel

299
00:15:47,490 --> 00:16:12,600
free to ask yeah also for Android is

300
00:16:09,780 --> 00:16:15,839
pretty similar to iOS there's a thing

301
00:16:12,600 --> 00:16:18,390
again kit I don't remember the name but

302
00:16:15,840 --> 00:16:20,610
for that you need the user constant but

303
00:16:18,390 --> 00:16:23,100
for the other technique that I mentioned

304
00:16:20,610 --> 00:16:25,470
UI webview and using javascript you

305
00:16:23,100 --> 00:16:36,740
don't need basically any permission it's

306
00:16:25,470 --> 00:16:39,750
very similar to iOS like I said after

307
00:16:36,740 --> 00:16:41,790
Canada incident it was a big news and

308
00:16:39,750 --> 00:16:45,360
the only thing that happened after that

309
00:16:41,790 --> 00:16:47,490
was Apple asking developers to exclude

310
00:16:45,360 --> 00:16:49,650
such behavior just publicize I mean just

311
00:16:47,490 --> 00:16:52,140
to mention that they are recording but

312
00:16:49,650 --> 00:16:54,590
I'm not aware of any illegal or a de any

313
00:16:52,140 --> 00:16:58,860
law change regarding these recordings

314
00:16:54,590 --> 00:17:01,230
and it's again developers responsibility

315
00:16:58,860 --> 00:17:03,390
because SDKs they just provide you some

316
00:17:01,230 --> 00:17:07,500
api's and ask developers to hide fields

317
00:17:03,390 --> 00:17:10,859
but even with those api's like the demo

318
00:17:07,500 --> 00:17:13,440
that i showed a few minutes ago it can

319
00:17:10,859 --> 00:17:16,290
capture other contents like the actual

320
00:17:13,440 --> 00:17:18,510
text that insider or photo that you are

321
00:17:16,290 --> 00:17:20,220
editing they can't mask at the photo

322
00:17:18,510 --> 00:17:23,990
because that's still the whole point of

323
00:17:20,220 --> 00:17:23,990
recording yes

324
00:17:28,750 --> 00:17:30,750
Oh

325
00:17:40,260 --> 00:17:46,230
some of this thing is like I think you

326
00:17:43,540 --> 00:17:49,690
ex cam was one of them they they are

327
00:17:46,230 --> 00:17:51,580
hiding just password fields by default

328
00:17:49,690 --> 00:17:52,930
but that's all they do

329
00:17:51,580 --> 00:17:55,120
they're basically they don't care they

330
00:17:52,930 --> 00:17:57,340
just want their customers are developers

331
00:17:55,120 --> 00:17:58,750
and they want to make them happy and app

332
00:17:57,340 --> 00:18:03,520
developers they want to see everything

333
00:17:58,750 --> 00:18:05,820
right well that's the kind of reason yes

334
00:18:03,520 --> 00:18:05,820
sir

335
00:18:09,420 --> 00:18:15,820
so I'm not supposed to kind of advertise

336
00:18:12,550 --> 00:18:20,460
for my company but that's what we do at

337
00:18:15,820 --> 00:18:24,280
Symantec we have set mobile app just

338
00:18:20,460 --> 00:18:25,690
icon here that's the set mobile app so

339
00:18:24,280 --> 00:18:27,910
most of these techniques that I

340
00:18:25,690 --> 00:18:29,590
mentioned here we basically follow

341
00:18:27,910 --> 00:18:32,410
follow them all these through your

342
00:18:29,590 --> 00:18:34,810
static and dynamic detection and for SDK

343
00:18:32,410 --> 00:18:37,270
identification and also for misusing

344
00:18:34,810 --> 00:18:39,850
apps we have a combination of a static

345
00:18:37,270 --> 00:18:42,129
and dynamic detection to find misusing

346
00:18:39,850 --> 00:18:44,110
the but I mean it's not easy again you

347
00:18:42,130 --> 00:18:45,670
have to look at both the static and

348
00:18:44,110 --> 00:18:49,030
dynamic analysis is not something and

349
00:18:45,670 --> 00:18:51,010
again even with dynamic analysis if you

350
00:18:49,030 --> 00:18:52,960
see an application that is using height

351
00:18:51,010 --> 00:18:55,660
view it doesn't mean that they are used

352
00:18:52,960 --> 00:18:58,540
hiding everything it's just you know

353
00:18:55,660 --> 00:19:00,880
they are using this API is but it's not

354
00:18:58,540 --> 00:19:10,060
search and to say this is 100% perfect

355
00:19:00,880 --> 00:19:27,670
app yes everything from app stores both

356
00:19:10,060 --> 00:19:29,649
Android and iOS - yeah yes I'm not sure

357
00:19:27,670 --> 00:19:33,120
if you're talking about the the

358
00:19:29,650 --> 00:19:33,120
detection companies like

359
00:19:33,390 --> 00:19:36,479
[Music]

360
00:19:48,330 --> 00:19:54,100
well again they give you some api's and

361
00:19:51,940 --> 00:19:55,929
the documentation but that'sthat's the

362
00:19:54,100 --> 00:19:57,760
thing that most of the time developers

363
00:19:55,929 --> 00:19:59,590
they don't follow documentation at they

364
00:19:57,760 --> 00:20:03,850
find the easiest way and they just use

365
00:19:59,590 --> 00:20:07,120
the Stack Overflow mostly and so I mean

366
00:20:03,850 --> 00:20:09,219
for I believe SDKs they can provide

367
00:20:07,120 --> 00:20:11,709
better I mean they can't do better in

368
00:20:09,220 --> 00:20:14,500
terms of providing any parts or forcing

369
00:20:11,710 --> 00:20:17,110
him one thing I forgot to mention a lot

370
00:20:14,500 --> 00:20:20,559
of crashlytics data and analysis data we

371
00:20:17,110 --> 00:20:24,070
checked they send them to analytic SDKs

372
00:20:20,559 --> 00:20:26,678
over HTTP and that was in the focus of

373
00:20:24,070 --> 00:20:28,750
this talk and crashlytics logs can

374
00:20:26,679 --> 00:20:30,850
contain a lot of PII information or

375
00:20:28,750 --> 00:20:34,480
Enterprise Information can lick a lot of

376
00:20:30,850 --> 00:20:36,820
stuff but again nobody forcing them to

377
00:20:34,480 --> 00:20:38,320
use HTTP for example that's something

378
00:20:36,820 --> 00:20:40,809
that you can actually enforce but I

379
00:20:38,320 --> 00:20:57,340
don't know why maybe that's why we are

380
00:20:40,809 --> 00:21:01,450
in business and making money yes oh good

381
00:20:57,340 --> 00:21:08,070
question I would say SDKs because you

382
00:21:01,450 --> 00:21:10,659
can't rely on developers I mean I'm not

383
00:21:08,070 --> 00:21:12,700
you can't rely on that other purse but

384
00:21:10,659 --> 00:21:14,500
for security purposes I mean because

385
00:21:12,700 --> 00:21:16,990
that's their business when something

386
00:21:14,500 --> 00:21:19,150
like that's what's happened developers

387
00:21:16,990 --> 00:21:22,270
they were not affected it's the company

388
00:21:19,150 --> 00:21:32,460
that crashes so I would say maybe both

389
00:21:22,270 --> 00:21:32,460
but mostly SDKs any other question

390
00:21:35,410 --> 00:21:50,980
yes yeah good question again um for

391
00:21:47,920 --> 00:21:53,160
snapshots they can store them inside the

392
00:21:50,980 --> 00:21:57,640
app so you can just go browse the

393
00:21:53,160 --> 00:22:00,010
recorded snapshots but the the end goal

394
00:21:57,640 --> 00:22:01,720
is to send them somewhere or an

395
00:22:00,010 --> 00:22:06,220
all-seater purpose and mining so they

396
00:22:01,720 --> 00:22:09,370
send it to either the SDK company like

397
00:22:06,220 --> 00:22:11,410
glass box server or their custom servers

398
00:22:09,370 --> 00:22:13,449
for mining and but at the end they will

399
00:22:11,410 --> 00:22:17,010
send everything today

400
00:22:13,450 --> 00:22:17,010
third parties yeah

401
00:22:22,270 --> 00:22:29,710
there's oh the idea is basically similar

402
00:22:25,660 --> 00:22:31,810
in web and in-app but in a bazaar

403
00:22:29,710 --> 00:22:33,220
I would say they're just identical

404
00:22:31,810 --> 00:22:35,440
they're saying this at the amount of

405
00:22:33,220 --> 00:22:37,960
data but the only difference is for web

406
00:22:35,440 --> 00:22:41,770
application you don't you might have

407
00:22:37,960 --> 00:22:44,050
used more user specific information but

408
00:22:41,770 --> 00:22:46,780
as is different because inside the app

409
00:22:44,050 --> 00:22:50,470
you are dealing with private data like

410
00:22:46,780 --> 00:22:51,970
like I said you can edit your photo well

411
00:22:50,470 --> 00:22:54,190
I mean you can do the same thing in web

412
00:22:51,970 --> 00:22:56,680
browser but the browser or I mean they

413
00:22:54,190 --> 00:23:00,250
might they might collect less private

414
00:22:56,680 --> 00:23:16,420
information or be less risky but they

415
00:23:00,250 --> 00:23:19,770
basically say yes so a static analysis

416
00:23:16,420 --> 00:23:22,720
if you have before if you are using an

417
00:23:19,770 --> 00:23:25,000
SDK you have to define it in a domestic

418
00:23:22,720 --> 00:23:28,270
manifest file as a service or you you

419
00:23:25,000 --> 00:23:30,610
will see the the package because you you

420
00:23:28,270 --> 00:23:32,680
include that package inside your app so

421
00:23:30,610 --> 00:23:34,570
you see it in class dump just by looking

422
00:23:32,680 --> 00:23:36,700
into their class stop use you see the

423
00:23:34,570 --> 00:23:39,520
package name and then you can look into

424
00:23:36,700 --> 00:23:41,620
the api's and again based on some

425
00:23:39,520 --> 00:23:43,360
signatures that you have you can use it

426
00:23:41,620 --> 00:23:46,000
but again you just have to have a

427
00:23:43,360 --> 00:23:49,149
predefined signatures of common or

428
00:23:46,000 --> 00:23:52,530
popular SDKs but if you want to die

429
00:23:49,150 --> 00:23:54,970
any SDKs that's I mean hard and tricky

430
00:23:52,530 --> 00:23:56,680
that's where you can use classification

431
00:23:54,970 --> 00:23:59,050
on method calls and that's against that

432
00:23:56,680 --> 00:24:02,470
if you can just grab the class stomp

433
00:23:59,050 --> 00:24:04,570
information or you can use it tre stomp

434
00:24:02,470 --> 00:24:06,700
if you want to have dynamic information

435
00:24:04,570 --> 00:24:08,260
just to make sure because studying

436
00:24:06,700 --> 00:24:11,950
information that will let you that app

437
00:24:08,260 --> 00:24:14,260
has the possible or capability but it

438
00:24:11,950 --> 00:24:16,150
it's not necessarily this is necessarily

439
00:24:14,260 --> 00:24:17,830
tell you that it is actually recording

440
00:24:16,150 --> 00:24:19,360
that's why we look at both the static

441
00:24:17,830 --> 00:24:22,629
and dynamic to see if they start

442
00:24:19,360 --> 00:24:24,669
recording and our dynamic analysis as

443
00:24:22,630 --> 00:24:26,410
the default is two minutes so inside two

444
00:24:24,670 --> 00:24:53,500
minute and we see that they started

445
00:24:26,410 --> 00:24:56,290
recording yes yeah it's either the

446
00:24:53,500 --> 00:24:58,390
company a web server the company server

447
00:24:56,290 --> 00:25:00,040
you say send it to me cuz I mean they're

448
00:24:58,390 --> 00:25:03,429
studying you can specify where you want

449
00:25:00,040 --> 00:25:05,678
to send data or it's the comp at the SDK

450
00:25:03,429 --> 00:25:09,250
company server you can send everything

451
00:25:05,679 --> 00:25:11,200
to glass box or popsie as you see and

452
00:25:09,250 --> 00:25:19,120
the demo other I showed you you have

453
00:25:11,200 --> 00:25:22,420
both options yeah yeah you can also look

454
00:25:19,120 --> 00:25:24,040
at the network traffic to see if you see

455
00:25:22,420 --> 00:25:26,350
any connections to any of this if you

456
00:25:24,040 --> 00:25:32,860
have list of non domains of this excuse

457
00:25:26,350 --> 00:25:35,199
yeah pusher right the only thing is you

458
00:25:32,860 --> 00:25:37,090
have to make sure that they send data in

459
00:25:35,200 --> 00:25:45,010
that two minutes or during your dynamic

460
00:25:37,090 --> 00:25:47,790
analysis that's why all right yes that's

461
00:25:45,010 --> 00:25:47,790
it

462
00:25:48,400 --> 00:25:50,460
you

