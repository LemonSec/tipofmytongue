1
00:00:03,440 --> 00:00:07,140
yep that's right so good morning

2
00:00:05,250 --> 00:00:09,120
everyone welcome to be sites and welcome

3
00:00:07,140 --> 00:00:13,290
to Trek three so I'll be your first

4
00:00:09,120 --> 00:00:18,350
presentation this morning just as Mark

5
00:00:13,290 --> 00:00:21,119
said I will be introduced that is right

6
00:00:18,350 --> 00:00:24,600
okay um so just to briefly introduce

7
00:00:21,119 --> 00:00:27,119
myself so I'm Vita I work at PwC in the

8
00:00:24,600 --> 00:00:28,619
endpoint threat detection team which

9
00:00:27,119 --> 00:00:30,150
means that I help with threat detection

10
00:00:28,619 --> 00:00:32,009
and compromises coffee that sort of

11
00:00:30,150 --> 00:00:33,570
thing we help lines with that I'm new to

12
00:00:32,009 --> 00:00:35,700
be sites so it's my first time here

13
00:00:33,570 --> 00:00:37,649
thank you very much for having me this

14
00:00:35,700 --> 00:00:39,030
also first presentation so no pressure

15
00:00:37,649 --> 00:00:41,820
there like what could possibly go wrong

16
00:00:39,030 --> 00:00:44,370
right so I'm gonna talk to you in the

17
00:00:41,820 --> 00:00:47,010
next 45 minutes or so about attack or

18
00:00:44,370 --> 00:00:48,780
emulation first I will just briefly

19
00:00:47,010 --> 00:00:50,489
introduce what it is and why you would

20
00:00:48,780 --> 00:00:52,800
want to do it so hopefully those of you

21
00:00:50,489 --> 00:00:54,059
who don't do it I can convince that it's

22
00:00:52,800 --> 00:00:55,890
actually a good thing you should look

23
00:00:54,059 --> 00:00:58,230
into it then a little bit on the how

24
00:00:55,890 --> 00:00:59,399
like how can you do it and she will see

25
00:00:58,230 --> 00:01:00,358
there's a lot of tools available that

26
00:00:59,399 --> 00:01:02,190
can help you with these sort of things

27
00:01:00,359 --> 00:01:03,359
and at the end I will show you some cool

28
00:01:02,190 --> 00:01:04,619
stuff and that's the real reason you're

29
00:01:03,359 --> 00:01:07,260
here right like this that's the actual

30
00:01:04,619 --> 00:01:09,210
stuff you want to see so without further

31
00:01:07,260 --> 00:01:11,220
ado let's just start attack your

32
00:01:09,210 --> 00:01:14,100
emulation so let's get the definition

33
00:01:11,220 --> 00:01:15,780
straight right out of the way so in the

34
00:01:14,100 --> 00:01:17,908
broader sense when we talk about attack

35
00:01:15,780 --> 00:01:20,369
or emulation we talk about the act of

36
00:01:17,909 --> 00:01:22,920
doing what an attacker would do you know

37
00:01:20,369 --> 00:01:25,020
how people sometimes say to catch a

38
00:01:22,920 --> 00:01:27,000
thief to think like a thief and I think

39
00:01:25,020 --> 00:01:30,179
that very much applies to the cyberspace

40
00:01:27,000 --> 00:01:32,670
as well if you are defending as

41
00:01:30,180 --> 00:01:34,860
individual as an organization and you

42
00:01:32,670 --> 00:01:36,150
probably have an idea of who you were

43
00:01:34,860 --> 00:01:38,250
defending yourself against right

44
00:01:36,150 --> 00:01:39,570
especially if you work for a larger

45
00:01:38,250 --> 00:01:41,579
organization you probably have like

46
00:01:39,570 --> 00:01:43,199
threat intelligence and that should give

47
00:01:41,579 --> 00:01:45,210
you a better idea of where your

48
00:01:43,200 --> 00:01:47,220
adversaries are and what what techniques

49
00:01:45,210 --> 00:01:47,699
they use whether they're after who are

50
00:01:47,220 --> 00:01:49,649
they

51
00:01:47,700 --> 00:01:52,409
what vulnerabilities exploits do they

52
00:01:49,649 --> 00:01:55,290
use that's a very good start so as a

53
00:01:52,409 --> 00:01:56,759
defender hopefully you do stuff to make

54
00:01:55,290 --> 00:01:58,469
sure that you detect that or even

55
00:01:56,759 --> 00:02:00,090
prevent that and where that is on an

56
00:01:58,469 --> 00:02:02,280
endpoint level or a network level

57
00:02:00,090 --> 00:02:05,100
hopefully you make sure that the two are

58
00:02:02,280 --> 00:02:08,399
aligns right the big question is however

59
00:02:05,100 --> 00:02:11,400
how do you make sure that you are that

60
00:02:08,399 --> 00:02:13,140
your defenses are effective really so if

61
00:02:11,400 --> 00:02:14,880
you're you know we

62
00:02:13,140 --> 00:02:15,989
hopefully you have some defenses in

63
00:02:14,880 --> 00:02:17,970
place but how do you know that you

64
00:02:15,990 --> 00:02:21,750
actually will catch it if they try and

65
00:02:17,970 --> 00:02:23,910
get into your system so your threat

66
00:02:21,750 --> 00:02:25,920
intelligence might if you are you cease

67
00:02:23,910 --> 00:02:28,500
or it might give you behavioral rules

68
00:02:25,920 --> 00:02:30,030
hopefully you've stuff in place to

69
00:02:28,500 --> 00:02:32,459
detect that how can you make sure that

70
00:02:30,030 --> 00:02:34,800
you're detecting the right thing is is

71
00:02:32,459 --> 00:02:36,840
really ironically three you can't see

72
00:02:34,800 --> 00:02:37,980
what you can't see so you can if you

73
00:02:36,840 --> 00:02:39,780
detect something you know that you can

74
00:02:37,980 --> 00:02:42,299
detect it if you miss something

75
00:02:39,780 --> 00:02:44,190
and it's too late right so by the time

76
00:02:42,300 --> 00:02:46,080
you find out about that so that's why

77
00:02:44,190 --> 00:02:49,350
you might want to look into attack your

78
00:02:46,080 --> 00:02:51,480
emulation so as I said one of the main

79
00:02:49,350 --> 00:02:53,700
reasons for us is testing your own

80
00:02:51,480 --> 00:02:55,380
detection capability so making sure that

81
00:02:53,700 --> 00:02:57,450
you can detect what you're trying to

82
00:02:55,380 --> 00:02:59,340
detect Ana so we'll show you in a few

83
00:02:57,450 --> 00:03:01,890
slides time there's multiple ways of

84
00:02:59,340 --> 00:03:03,810
doing attack or emulation and I think

85
00:03:01,890 --> 00:03:06,179
really good advantages that you can do

86
00:03:03,810 --> 00:03:08,000
it we're realistic attack model what it

87
00:03:06,180 --> 00:03:10,739
will look like I'll show in a bit

88
00:03:08,000 --> 00:03:13,860
another reason why you might want to

89
00:03:10,739 --> 00:03:15,510
look into it is research so it's sort of

90
00:03:13,860 --> 00:03:17,100
like a collateral thing but I found when

91
00:03:15,510 --> 00:03:19,018
I started looking into attacker

92
00:03:17,100 --> 00:03:20,609
emulation that you really have to start

93
00:03:19,019 --> 00:03:22,049
thinking like you're at a ket which

94
00:03:20,610 --> 00:03:23,640
means that you really have to understand

95
00:03:22,049 --> 00:03:25,530
the tools they use in the film abilities

96
00:03:23,640 --> 00:03:27,720
they use so rather than just read a

97
00:03:25,530 --> 00:03:29,850
report and write a signature on the base

98
00:03:27,720 --> 00:03:31,950
of that you really have to do the

99
00:03:29,850 --> 00:03:33,390
exploitation yourself and that forced me

100
00:03:31,950 --> 00:03:34,798
to really think about like what am I

101
00:03:33,390 --> 00:03:36,630
trying to do here and it really helped

102
00:03:34,799 --> 00:03:38,220
me improve my defenses because either

103
00:03:36,630 --> 00:03:40,920
way better understanding of what I was

104
00:03:38,220 --> 00:03:43,109
doing so for a personal point of view

105
00:03:40,920 --> 00:03:45,480
research like it really helps you

106
00:03:43,110 --> 00:03:48,239
understand in your attacker and thirdly

107
00:03:45,480 --> 00:03:50,280
not an important I think is showing off

108
00:03:48,239 --> 00:03:52,260
is we all want to write so whether

109
00:03:50,280 --> 00:03:53,940
you're trying to impress a client or

110
00:03:52,260 --> 00:03:56,269
maybe someone in your organization

111
00:03:53,940 --> 00:03:59,010
someone more senior or even board level

112
00:03:56,269 --> 00:04:01,980
it is pretty good if you can in an

113
00:03:59,010 --> 00:04:03,840
automated fashion emulate what attack it

114
00:04:01,980 --> 00:04:05,609
will do and show that what you're doing

115
00:04:03,840 --> 00:04:07,230
in terms of defending is actually

116
00:04:05,610 --> 00:04:09,090
working right so you can actually show

117
00:04:07,230 --> 00:04:11,488
whether that's on an endpoint or network

118
00:04:09,090 --> 00:04:14,790
level that you are able to detect your

119
00:04:11,489 --> 00:04:16,798
adversary bear in mind that this is not

120
00:04:14,790 --> 00:04:18,298
a little proof right so when you emulate

121
00:04:16,798 --> 00:04:20,250
in the sector it's just an example of

122
00:04:18,298 --> 00:04:21,570
what an attacker might do so you can't

123
00:04:20,250 --> 00:04:23,220
prove that you will always catch your

124
00:04:21,570 --> 00:04:24,830
attacking but it's just really good in

125
00:04:23,220 --> 00:04:26,300
terms of proving to yourself

126
00:04:24,830 --> 00:04:30,620
for all this what you're doing makes

127
00:04:26,300 --> 00:04:32,780
sense and has impact right so now let's

128
00:04:30,620 --> 00:04:33,800
have a closer look at how like what do

129
00:04:32,780 --> 00:04:35,359
we mean that we're there techie

130
00:04:33,800 --> 00:04:39,530
emulation how do you put that into

131
00:04:35,360 --> 00:04:42,020
practice so what you would usually do is

132
00:04:39,530 --> 00:04:43,818
you would have systems in your sights

133
00:04:42,020 --> 00:04:46,250
usually you would isolate them from your

134
00:04:43,819 --> 00:04:47,840
actual machines so actual machines with

135
00:04:46,250 --> 00:04:49,789
you know your base image with all your

136
00:04:47,840 --> 00:04:51,530
tools and point tools whatever like

137
00:04:49,789 --> 00:04:52,878
basically what a normal machine in your

138
00:04:51,530 --> 00:04:55,900
state would look like in a normal

139
00:04:52,879 --> 00:04:58,370
network configuration and within that

140
00:04:55,900 --> 00:04:59,539
representative test environment you

141
00:04:58,370 --> 00:05:01,729
would do it on there take it with you

142
00:04:59,539 --> 00:05:03,710
you would try and break stuff you try

143
00:05:01,729 --> 00:05:05,900
and move laterally create persistence

144
00:05:03,710 --> 00:05:07,789
all that sort of jazz and so the

145
00:05:05,900 --> 00:05:09,169
assumption here is that you already have

146
00:05:07,789 --> 00:05:11,690
been compromised this is a post

147
00:05:09,169 --> 00:05:12,460
compromised assumption so in this test

148
00:05:11,690 --> 00:05:14,449
environment

149
00:05:12,460 --> 00:05:16,279
you're not going to deal with you know

150
00:05:14,449 --> 00:05:17,900
trying to infect it you just assume that

151
00:05:16,279 --> 00:05:19,879
has already happened what you're really

152
00:05:17,900 --> 00:05:21,888
interested in is answering like okay

153
00:05:19,879 --> 00:05:23,629
even their tacit got guessing what would

154
00:05:21,889 --> 00:05:26,810
it do would it move laterally would it

155
00:05:23,629 --> 00:05:27,919
able to would it create persistence that

156
00:05:26,810 --> 00:05:30,680
that's the sort of question you're

157
00:05:27,919 --> 00:05:32,659
trying to answer here so post compromise

158
00:05:30,680 --> 00:05:36,169
in a representative test environment

159
00:05:32,659 --> 00:05:38,389
that is the setting we're dealing in so

160
00:05:36,169 --> 00:05:40,310
there's a few options you have and

161
00:05:38,389 --> 00:05:41,779
that's all different depending on what

162
00:05:40,310 --> 00:05:43,940
you're trying to do so the first one is

163
00:05:41,779 --> 00:05:46,580
the manner in which you do attack your

164
00:05:43,940 --> 00:05:48,349
emulation you can do it in a manual way

165
00:05:46,580 --> 00:05:50,870
we just literally just you know type

166
00:05:48,349 --> 00:05:53,089
commands basically mimic in actual

167
00:05:50,870 --> 00:05:54,889
attack it and to see if your detection

168
00:05:53,089 --> 00:05:57,770
picks it up if it maybe prevent it from

169
00:05:54,889 --> 00:05:59,569
happening or it shows up in loaves which

170
00:05:57,770 --> 00:06:01,159
is which is great and if you do it as a

171
00:05:59,569 --> 00:06:03,199
one-off thing there might be the right

172
00:06:01,159 --> 00:06:05,629
way for you what I think is way more

173
00:06:03,199 --> 00:06:07,909
interesting is the automated element of

174
00:06:05,629 --> 00:06:09,710
it because let's face it roll cyber

175
00:06:07,909 --> 00:06:11,449
people we're lazy we don't want to do

176
00:06:09,710 --> 00:06:13,729
stuff right we want to script it up we

177
00:06:11,449 --> 00:06:15,650
want to do it repeatedly so the

178
00:06:13,729 --> 00:06:17,599
advantage of doing stuff in an automated

179
00:06:15,650 --> 00:06:19,580
fashion is that it saves a lot of time

180
00:06:17,599 --> 00:06:21,378
and you can rerun this often as you want

181
00:06:19,580 --> 00:06:24,339
you can almost use it as a sort of

182
00:06:21,379 --> 00:06:26,509
integration tests we run an attack

183
00:06:24,339 --> 00:06:28,969
emulation and you just see what happens

184
00:06:26,509 --> 00:06:31,759
on various levels endpoint network logs

185
00:06:28,969 --> 00:06:33,319
whatever so I'll be focusing on

186
00:06:31,759 --> 00:06:35,870
automated but just bear in mind maybe

187
00:06:33,319 --> 00:06:38,600
for your case manual might be the right

188
00:06:35,870 --> 00:06:40,520
answer then another

189
00:06:38,600 --> 00:06:42,890
question is the scope which is a little

190
00:06:40,520 --> 00:06:45,080
bit more tricky there's multiple ways of

191
00:06:42,890 --> 00:06:46,460
doing a secular emulation so as I said

192
00:06:45,080 --> 00:06:49,039
you do what an attacker does blah blah

193
00:06:46,460 --> 00:06:52,599
blah we get that but how do you do that

194
00:06:49,040 --> 00:06:55,550
so if you for instance want to test your

195
00:06:52,600 --> 00:06:56,900
behavioral detection system maybe you

196
00:06:55,550 --> 00:06:58,870
have separate rules you just want to

197
00:06:56,900 --> 00:07:01,310
test them one by one or as a unit test

198
00:06:58,870 --> 00:07:03,020
so atomic tests will be really good for

199
00:07:01,310 --> 00:07:05,570
that you would for every rule you have

200
00:07:03,020 --> 00:07:07,280
create an individual action

201
00:07:05,570 --> 00:07:10,370
maybe like a one-liner and with

202
00:07:07,280 --> 00:07:13,280
malicious behavior you just see if your

203
00:07:10,370 --> 00:07:14,360
rule fires and if it does pass and if

204
00:07:13,280 --> 00:07:16,070
not feel right it's really

205
00:07:14,360 --> 00:07:17,810
straightforward you just run them one

206
00:07:16,070 --> 00:07:19,430
after another you see what rules fires

207
00:07:17,810 --> 00:07:20,390
and then they give you an idea of what

208
00:07:19,430 --> 00:07:22,430
your defenses are doing

209
00:07:20,390 --> 00:07:24,169
you could almost script it up a set of

210
00:07:22,430 --> 00:07:26,060
paths or a batch script right it's just

211
00:07:24,170 --> 00:07:28,580
literally just run it and you see what

212
00:07:26,060 --> 00:07:30,440
happens it's very simple very

213
00:07:28,580 --> 00:07:32,390
straightforward there's also other ways

214
00:07:30,440 --> 00:07:34,490
available so on the other end of this so

215
00:07:32,390 --> 00:07:36,320
atomic is really basic and like one on

216
00:07:34,490 --> 00:07:38,690
one on the other end of the spectrum you

217
00:07:36,320 --> 00:07:41,360
have end to end so that is where it gets

218
00:07:38,690 --> 00:07:43,790
more realistic is end to end what I mean

219
00:07:41,360 --> 00:07:44,930
by that is actually emulating what an

220
00:07:43,790 --> 00:07:47,630
attacker would do from the very start

221
00:07:44,930 --> 00:07:48,830
till the very end right if you follow

222
00:07:47,630 --> 00:07:50,960
some sort of kill chain model or

223
00:07:48,830 --> 00:07:52,700
whatever is really from the point where

224
00:07:50,960 --> 00:07:54,469
you've got the initial infection to the

225
00:07:52,700 --> 00:07:56,719
point where you execute your final

226
00:07:54,470 --> 00:07:59,930
action I mean maybe even cover tracks

227
00:07:56,720 --> 00:08:01,280
and remove yourself that sort of jazz so

228
00:07:59,930 --> 00:08:03,080
I think that's a lot more clever because

229
00:08:01,280 --> 00:08:05,210
that means that you don't do individual

230
00:08:03,080 --> 00:08:07,419
actions individual attacks who you

231
00:08:05,210 --> 00:08:10,130
actually use the in and outputs of

232
00:08:07,420 --> 00:08:12,080
individual actions for other stuff for

233
00:08:10,130 --> 00:08:14,150
as an example I might want to test what

234
00:08:12,080 --> 00:08:16,880
happens if I run the password thumping

235
00:08:14,150 --> 00:08:20,390
to mimic guests you know who knows movie

236
00:08:16,880 --> 00:08:23,330
cats and sweet most-viewed good and what

237
00:08:20,390 --> 00:08:24,740
you would expect so maybe my first test

238
00:08:23,330 --> 00:08:26,419
is I'm gonna run mimic cats and see if I

239
00:08:24,740 --> 00:08:28,670
detect that so that could be an atomic

240
00:08:26,420 --> 00:08:30,530
action but to make it more end to end I

241
00:08:28,670 --> 00:08:32,539
could say okay once I run them you cats

242
00:08:30,530 --> 00:08:35,089
and this successful I'm going to use the

243
00:08:32,539 --> 00:08:36,799
output the credentials are find to move

244
00:08:35,090 --> 00:08:38,810
laterally or create persistence on

245
00:08:36,799 --> 00:08:41,059
another system something like that so

246
00:08:38,809 --> 00:08:42,468
end to end is you use the in and outputs

247
00:08:41,059 --> 00:08:44,510
of other actions chain them together

248
00:08:42,469 --> 00:08:47,540
link them together in a clever way and

249
00:08:44,510 --> 00:08:49,040
in a way make it more look like what

250
00:08:47,540 --> 00:08:52,969
your attacker would leave

251
00:08:49,040 --> 00:08:54,500
if he was actually in your estate so two

252
00:08:52,970 --> 00:08:56,360
actions it's not really a right or wrong

253
00:08:54,500 --> 00:08:58,459
answer here you can choose for either

254
00:08:56,360 --> 00:09:00,380
depending on what your way trying to do

255
00:08:58,459 --> 00:09:02,119
so for me this is what it would look

256
00:09:00,380 --> 00:09:03,920
like in terms of usability and ease of

257
00:09:02,120 --> 00:09:05,600
use that's very easy views and

258
00:09:03,920 --> 00:09:08,060
usefulness so I thought make is really

259
00:09:05,600 --> 00:09:09,800
easy to do right you should just maybe

260
00:09:08,060 --> 00:09:12,290
just the one line or you can script it

261
00:09:09,800 --> 00:09:13,279
up you run it once you see pass fulfill

262
00:09:12,290 --> 00:09:15,170
and then you're done

263
00:09:13,279 --> 00:09:17,810
so it's really relatively easy to use

264
00:09:15,170 --> 00:09:19,579
but for me usefulness is relatively low

265
00:09:17,810 --> 00:09:20,719
I didn't let the trying of all the way

266
00:09:19,579 --> 00:09:23,439
to the bottom because it's more like

267
00:09:20,720 --> 00:09:25,730
it's not completely useless but it means

268
00:09:23,440 --> 00:09:27,620
it's very individual action so you're

269
00:09:25,730 --> 00:09:29,329
checking rather than a full attack cycle

270
00:09:27,620 --> 00:09:31,310
so you get an idea of what you would

271
00:09:29,329 --> 00:09:32,719
pick up but not like it's going to

272
00:09:31,310 --> 00:09:34,430
generate a lot of noise right so it's

273
00:09:32,720 --> 00:09:37,160
not very representative of what you

274
00:09:34,430 --> 00:09:38,569
would normally see so change is sort of

275
00:09:37,160 --> 00:09:40,069
in the middle where it is still atomic

276
00:09:38,569 --> 00:09:41,839
but it's in an order that you would

277
00:09:40,069 --> 00:09:44,029
expect in an attack you might not even

278
00:09:41,839 --> 00:09:45,800
rely on the in and out groups it's just

279
00:09:44,029 --> 00:09:48,170
still separate actions just the American

280
00:09:45,800 --> 00:09:49,639
set border or sn2 ends and what that

281
00:09:48,170 --> 00:09:50,779
will what that actually means it will

282
00:09:49,639 --> 00:09:52,970
show you in a minute because there's

283
00:09:50,779 --> 00:09:54,800
what I will be focusing on it's for me

284
00:09:52,970 --> 00:09:57,589
way more useful because it is actual to

285
00:09:54,800 --> 00:09:59,180
four attack a lifecycle however that

286
00:09:57,589 --> 00:10:00,680
means that you need to whatever

287
00:09:59,180 --> 00:10:02,329
framework you're using you need to

288
00:10:00,680 --> 00:10:03,888
configure that to make sure that it

289
00:10:02,329 --> 00:10:05,120
actually links actions together right

290
00:10:03,889 --> 00:10:07,040
you need to tell it that if I were a

291
00:10:05,120 --> 00:10:08,329
mimic that's I need to pass the

292
00:10:07,040 --> 00:10:09,829
credential somehow and then use

293
00:10:08,329 --> 00:10:11,359
therefore let's remove them somehow so

294
00:10:09,829 --> 00:10:13,040
you need to link them together and that

295
00:10:11,360 --> 00:10:14,870
is not as straightforward as it might

296
00:10:13,040 --> 00:10:16,250
look but you will see it doesn't

297
00:10:14,870 --> 00:10:20,839
necessarily mean that it will be

298
00:10:16,250 --> 00:10:22,190
difficult either right okay so now we

299
00:10:20,839 --> 00:10:22,760
have a few parameters here where we can

300
00:10:22,190 --> 00:10:24,860
play with

301
00:10:22,760 --> 00:10:26,899
I think end to end is more interesting I

302
00:10:24,860 --> 00:10:29,810
will show you in a bit why I think it

303
00:10:26,899 --> 00:10:31,220
will really help there's a few tools

304
00:10:29,810 --> 00:10:32,839
available that can help you here so

305
00:10:31,220 --> 00:10:33,949
fortunately you don't have to do this

306
00:10:32,839 --> 00:10:36,410
all yourself you don't have to start

307
00:10:33,949 --> 00:10:37,880
from scratch River which might be

308
00:10:36,410 --> 00:10:39,469
tempting right sometimes feel like I can

309
00:10:37,880 --> 00:10:41,180
do it in Python but you'll see

310
00:10:39,470 --> 00:10:43,100
especially end-to-end it gets really

311
00:10:41,180 --> 00:10:45,410
complicated so it's a few tools

312
00:10:43,100 --> 00:10:47,480
available there that can help you I'm

313
00:10:45,410 --> 00:10:49,490
sure you've all seen this xkcd comic

314
00:10:47,480 --> 00:10:51,050
about standards about you know there's

315
00:10:49,490 --> 00:10:53,329
14 standards and some of those are as

316
00:10:51,050 --> 00:10:55,219
ridiculous they created one overarching

317
00:10:53,329 --> 00:10:58,579
solution and then you have 15 standards

318
00:10:55,220 --> 00:11:01,610
great so that's kind of what happened

319
00:10:58,579 --> 00:11:02,349
here it's not quite 14 it's 13 but and

320
00:11:01,610 --> 00:11:04,180
this is

321
00:11:02,350 --> 00:11:06,220
tools that I found that all claim to do

322
00:11:04,180 --> 00:11:07,900
more or less the same thing and bear in

323
00:11:06,220 --> 00:11:10,450
mind this is just open source and

324
00:11:07,900 --> 00:11:11,920
aligned to the attack matrix so imagine

325
00:11:10,450 --> 00:11:13,420
if you do also closed source and not

326
00:11:11,920 --> 00:11:17,349
allowing your technology there's a lot

327
00:11:13,420 --> 00:11:18,880
of function out here they all do roughly

328
00:11:17,350 --> 00:11:20,500
the same they're all slightly different

329
00:11:18,880 --> 00:11:22,390
so with the parameters I just showed you

330
00:11:20,500 --> 00:11:25,600
in terms of like how atomic or

331
00:11:22,390 --> 00:11:28,090
end-to-end it is and they vary a bit but

332
00:11:25,600 --> 00:11:29,890
if you're new to this this sort of thing

333
00:11:28,090 --> 00:11:31,630
attacker emulation it can be quite

334
00:11:29,890 --> 00:11:33,040
overwhelming right like where do you saw

335
00:11:31,630 --> 00:11:34,570
what what are the differences is there

336
00:11:33,040 --> 00:11:36,849
is a recruit one and a bad one

337
00:11:34,570 --> 00:11:38,350
and I find that quite complex actually

338
00:11:36,850 --> 00:11:40,420
it requires some time to figure it out

339
00:11:38,350 --> 00:11:42,160
so one of my calls to action would

340
00:11:40,420 --> 00:11:43,870
actually be how great would it be for

341
00:11:42,160 --> 00:11:46,390
just a few they were really good rather

342
00:11:43,870 --> 00:11:48,310
than 13 at all more or less the same

343
00:11:46,390 --> 00:11:50,080
thing and they're not cross compatible

344
00:11:48,310 --> 00:11:51,400
either so if you're right if you go for

345
00:11:50,080 --> 00:11:53,800
one of these solutions you might not be

346
00:11:51,400 --> 00:11:55,780
able to around in another so this is a

347
00:11:53,800 --> 00:11:58,089
bit of a risk there so um yeah

348
00:11:55,780 --> 00:11:59,980
unfortunately it is like that so I will

349
00:11:58,090 --> 00:12:01,840
focus just on a few that are relatively

350
00:11:59,980 --> 00:12:05,140
popular or more lively in the open

351
00:12:01,840 --> 00:12:07,600
source area so some of you might have

352
00:12:05,140 --> 00:12:09,250
heard of rat Canaries atomic bread which

353
00:12:07,600 --> 00:12:12,490
is really good so it's almost like a

354
00:12:09,250 --> 00:12:14,440
library of action so it's aligned to the

355
00:12:12,490 --> 00:12:15,910
attack framework if you're not heard of

356
00:12:14,440 --> 00:12:20,160
it like look it up it's really helpful

357
00:12:15,910 --> 00:12:22,449
resource to fall for our tech is behave

358
00:12:20,160 --> 00:12:24,760
so they have a really good and get up a

359
00:12:22,450 --> 00:12:26,830
really good open source framework we

360
00:12:24,760 --> 00:12:28,980
have for each almost I think almost

361
00:12:26,830 --> 00:12:32,620
every attack technique of really good

362
00:12:28,980 --> 00:12:34,930
social scripts you can run so it is kind

363
00:12:32,620 --> 00:12:36,310
of manual it's not dynamic either this

364
00:12:34,930 --> 00:12:37,569
is like hard coded scripts there's no

365
00:12:36,310 --> 00:12:40,209
random file names it's literally a

366
00:12:37,570 --> 00:12:42,580
script you run you see if your detection

367
00:12:40,210 --> 00:12:43,720
picks it up but it is cross-platform so

368
00:12:42,580 --> 00:12:45,420
it's really good and it is one of the

369
00:12:43,720 --> 00:12:48,010
more lively is one of the more active

370
00:12:45,420 --> 00:12:50,199
open source projects you might have

371
00:12:48,010 --> 00:12:52,540
heard of ubers meta which is automated

372
00:12:50,200 --> 00:12:54,430
which is quite nice still not dynamic

373
00:12:52,540 --> 00:12:56,890
and static scripts are coded file names

374
00:12:54,430 --> 00:13:00,640
or whatever so there's some limitations

375
00:12:56,890 --> 00:13:03,040
there but also cross-platform then we

376
00:13:00,640 --> 00:13:04,810
have caldera which is from meited

377
00:13:03,040 --> 00:13:06,699
themselves so my touristy organization

378
00:13:04,810 --> 00:13:08,770
behind attack and they started it as a

379
00:13:06,700 --> 00:13:11,770
research projects think about 1/2 year

380
00:13:08,770 --> 00:13:14,920
ago now so you had caldera 1.0 which was

381
00:13:11,770 --> 00:13:16,000
really cool fully automated and dynamic

382
00:13:14,920 --> 00:13:17,979
in Python

383
00:13:16,000 --> 00:13:20,589
I will tell you more about in a minute

384
00:13:17,980 --> 00:13:22,000
it's just windows though so then think

385
00:13:20,589 --> 00:13:24,639
about a month ago they release color a

386
00:13:22,000 --> 00:13:26,800
2.0 which contains all the functionality

387
00:13:24,639 --> 00:13:28,569
of caldera one but also with what they

388
00:13:26,800 --> 00:13:30,399
call it change mode which is a bit more

389
00:13:28,569 --> 00:13:33,849
like what uber does with matter so it's

390
00:13:30,399 --> 00:13:35,410
more individual actions hard-coded so

391
00:13:33,850 --> 00:13:37,089
it's lights like both dynamic and not

392
00:13:35,410 --> 00:13:38,889
fun IMing but the advantage is that it

393
00:13:37,089 --> 00:13:41,560
is cross-platform now so that's really

394
00:13:38,889 --> 00:13:44,800
good then you also have like and games

395
00:13:41,560 --> 00:13:47,199
RT a Red Team automation it's very

396
00:13:44,800 --> 00:13:48,969
similar to a caldera I think see there's

397
00:13:47,199 --> 00:13:50,859
a few options out there and there is

398
00:13:48,970 --> 00:13:52,990
again not necessarily a right answer but

399
00:13:50,860 --> 00:13:57,279
for the purposes of this talk I will be

400
00:13:52,990 --> 00:13:58,750
focusing on caldera BAM oh yeah so just

401
00:13:57,279 --> 00:14:01,420
to remind you before before remove the

402
00:13:58,750 --> 00:14:03,310
caldera like picking the right tool can

403
00:14:01,420 --> 00:14:05,110
be tricky so have a think beforehand

404
00:14:03,310 --> 00:14:06,369
what you're trying to do right what is

405
00:14:05,110 --> 00:14:07,629
your goal are you doing is there's a

406
00:14:06,370 --> 00:14:10,509
one-off thing why are you going to do

407
00:14:07,629 --> 00:14:12,160
this more frequently that might help you

408
00:14:10,509 --> 00:14:14,290
identify if you go for automate not

409
00:14:12,160 --> 00:14:16,089
automated what is your scope are you

410
00:14:14,290 --> 00:14:18,160
literally trying to test individual

411
00:14:16,089 --> 00:14:20,709
rules or do you want to get like the

412
00:14:18,160 --> 00:14:22,839
full lifecycle of an attack it however

413
00:14:20,709 --> 00:14:24,189
you listed do you want it to be easy to

414
00:14:22,839 --> 00:14:27,639
maintain so that sort of links back to

415
00:14:24,189 --> 00:14:30,550
the all atomic and end-to-end sort of

416
00:14:27,639 --> 00:14:35,050
question so have a think and find your

417
00:14:30,550 --> 00:14:38,229
Eve so then more about caldera as I said

418
00:14:35,050 --> 00:14:40,359
open source research project by mighty

419
00:14:38,230 --> 00:14:43,240
so it's a bit research he so don't

420
00:14:40,360 --> 00:14:45,670
expect fleshy user interfaces but as you

421
00:14:43,240 --> 00:14:48,220
will see the the what happens under the

422
00:14:45,670 --> 00:14:49,779
booth is really good so is there's a lot

423
00:14:48,220 --> 00:14:52,059
of stuff you need there that is sort of

424
00:14:49,779 --> 00:14:54,069
like outside my area of expertise but

425
00:14:52,059 --> 00:14:55,480
they handle that for you so that's

426
00:14:54,069 --> 00:14:56,920
really good

427
00:14:55,480 --> 00:14:58,779
caldera right if you install that like

428
00:14:56,920 --> 00:15:01,719
without doing anything it already comes

429
00:14:58,779 --> 00:15:03,220
with a lot of attack or actions for

430
00:15:01,720 --> 00:15:05,199
instance they have a profile for the

431
00:15:03,220 --> 00:15:07,240
Lazarus group so without having to do

432
00:15:05,199 --> 00:15:08,920
anything yourself you can install called

433
00:15:07,240 --> 00:15:11,769
our on your environment and if you run

434
00:15:08,920 --> 00:15:14,199
it you can emulate an lazarus group like

435
00:15:11,769 --> 00:15:14,769
attacker so methods they use you can run

436
00:15:14,199 --> 00:15:16,540
on your estate

437
00:15:14,769 --> 00:15:18,399
you can just see with your own detection

438
00:15:16,540 --> 00:15:20,620
mechanisms what would I see what would I

439
00:15:18,399 --> 00:15:23,470
pick up what would I miss that in itself

440
00:15:20,620 --> 00:15:24,880
already is really helpful and what we'll

441
00:15:23,470 --> 00:15:28,029
be talking about is how you can extend

442
00:15:24,880 --> 00:15:29,950
that and make it for like adapted to

443
00:15:28,029 --> 00:15:32,980
your attacker

444
00:15:29,950 --> 00:15:35,410
so for me why it sets itself apart from

445
00:15:32,980 --> 00:15:37,360
the other other ones I just mentioned

446
00:15:35,410 --> 00:15:39,399
so these attack erections are defined in

447
00:15:37,360 --> 00:15:40,720
Python and while that it might not be

448
00:15:39,399 --> 00:15:43,630
the best language for this sort of thing

449
00:15:40,720 --> 00:15:45,130
like most of my team at least read

450
00:15:43,630 --> 00:15:47,139
Python most of them write Python as well

451
00:15:45,130 --> 00:15:49,060
so it's easier to maintain also going

452
00:15:47,139 --> 00:15:51,370
forward you don't have to good use of

453
00:15:49,060 --> 00:15:53,768
any new syntax is like a like a accepted

454
00:15:51,370 --> 00:15:55,180
language it works with pre and post

455
00:15:53,769 --> 00:15:57,250
conditions so this is where the whole

456
00:15:55,180 --> 00:15:58,239
end-to-end thing comes in and what that

457
00:15:57,250 --> 00:16:00,430
will look like I will show you in a

458
00:15:58,240 --> 00:16:02,110
slide or two which means that caldera

459
00:16:00,430 --> 00:16:03,729
can really cleverly link actions

460
00:16:02,110 --> 00:16:05,949
together and make it look like an actual

461
00:16:03,730 --> 00:16:09,040
attack and it does that using the

462
00:16:05,949 --> 00:16:10,449
heuristic planet so that's one of the

463
00:16:09,040 --> 00:16:12,189
things that like this that's really

464
00:16:10,449 --> 00:16:14,469
difficult this outside my area of

465
00:16:12,190 --> 00:16:16,300
expertise but as long as you do your pre

466
00:16:14,470 --> 00:16:19,120
and post conditions caldera Google will

467
00:16:16,300 --> 00:16:23,829
do all the difficult stuff so that's a

468
00:16:19,120 --> 00:16:26,440
win-win there so a very simple setup for

469
00:16:23,829 --> 00:16:27,849
caldera I say just do for you what it

470
00:16:26,440 --> 00:16:30,699
might look like in your environment so

471
00:16:27,850 --> 00:16:31,630
as I said these are the three hosts at

472
00:16:30,699 --> 00:16:33,250
the bottom there should be

473
00:16:31,630 --> 00:16:35,230
representative of machines in your

474
00:16:33,250 --> 00:16:37,269
network you will base image your

475
00:16:35,230 --> 00:16:38,829
endpoint tools network configuration

476
00:16:37,269 --> 00:16:40,630
everything in place as it was like a

477
00:16:38,829 --> 00:16:43,000
normal Network you probably want to

478
00:16:40,630 --> 00:16:44,680
isolate it as you'll see in a minute

479
00:16:43,000 --> 00:16:47,440
and then have a separate books the

480
00:16:44,680 --> 00:16:50,260
caldera server which is almost like a c2

481
00:16:47,440 --> 00:16:52,060
channel server so it literally sends

482
00:16:50,260 --> 00:16:55,209
instructions to the hosts to you know

483
00:16:52,060 --> 00:16:59,170
move laterally great resistance dumped

484
00:16:55,209 --> 00:17:01,149
credentials that sort of thing so on

485
00:16:59,170 --> 00:17:02,380
your estates you might want to on your

486
00:17:01,149 --> 00:17:04,449
test environment you might want to

487
00:17:02,380 --> 00:17:06,040
infect one of the hosts as I said we

488
00:17:04,449 --> 00:17:07,990
assume it's already been compromised

489
00:17:06,040 --> 00:17:09,819
right so you have to install a caldera

490
00:17:07,990 --> 00:17:13,059
agents on at least one of the machines

491
00:17:09,819 --> 00:17:14,589
and from that point on you can log into

492
00:17:13,059 --> 00:17:17,799
the caldera server and instruct it to

493
00:17:14,589 --> 00:17:19,990
run emulation starting at post a maybe

494
00:17:17,799 --> 00:17:21,629
and then it will you know do this

495
00:17:19,990 --> 00:17:23,620
persistence try and move laterally

496
00:17:21,630 --> 00:17:26,100
depending on how you define your

497
00:17:23,619 --> 00:17:26,099
attacker

498
00:17:26,699 --> 00:17:31,000
so what would that look like

499
00:17:28,510 --> 00:17:32,799
so imagine in my caldera instance I

500
00:17:31,000 --> 00:17:34,570
define my attacker and my attacker is

501
00:17:32,799 --> 00:17:35,679
able to do these things so in the

502
00:17:34,570 --> 00:17:38,379
interval for kobera

503
00:17:35,679 --> 00:17:39,700
I have these probably more options

504
00:17:38,380 --> 00:17:41,890
available and I've selected for my

505
00:17:39,700 --> 00:17:43,690
attacker that it has these capabilities

506
00:17:41,890 --> 00:17:46,750
it can do persistence with run DLL phone

507
00:17:43,690 --> 00:17:49,990
- it might copy a file remotely can do

508
00:17:46,750 --> 00:17:51,700
exultation with gifts I know it can

509
00:17:49,990 --> 00:17:54,040
delete event logs you can do piece exec

510
00:17:51,700 --> 00:17:57,490
in staged data and it can do mimic house

511
00:17:54,040 --> 00:17:59,530
right so I just tell caldera that might

512
00:17:57,490 --> 00:18:02,169
attack it can do this and then once you

513
00:17:59,530 --> 00:18:04,360
say okay start my emulation run on this

514
00:18:02,169 --> 00:18:07,090
host and see where you can do it will

515
00:18:04,360 --> 00:18:09,610
then figure out the most likely path and

516
00:18:07,090 --> 00:18:11,080
attack it would take so again using pre

517
00:18:09,610 --> 00:18:14,379
and post conditions it will find out

518
00:18:11,080 --> 00:18:16,629
okay for peers exec I need credentials

519
00:18:14,380 --> 00:18:18,669
so maybe I should bring mimic at first

520
00:18:16,630 --> 00:18:21,010
and then if there works I can do be as

521
00:18:18,669 --> 00:18:23,919
exec and once I have B as exec I can

522
00:18:21,010 --> 00:18:26,320
move a file to another hosts all the way

523
00:18:23,919 --> 00:18:28,059
down to the lead event loads so this

524
00:18:26,320 --> 00:18:29,559
figuring this out this is something

525
00:18:28,059 --> 00:18:31,918
called errors really good at as long as

526
00:18:29,559 --> 00:18:34,030
you define your pre and post conditions

527
00:18:31,919 --> 00:18:35,830
some stuff is sort of like

528
00:18:34,030 --> 00:18:38,139
non-deterministic so we have the

529
00:18:35,830 --> 00:18:39,549
persistence there at the top and it made

530
00:18:38,140 --> 00:18:41,559
it the fourth action but you might as

531
00:18:39,549 --> 00:18:44,080
well do it as the fifth or maybe add

532
00:18:41,559 --> 00:18:45,490
assault or whatever sometimes it doesn't

533
00:18:44,080 --> 00:18:47,620
really matter what order you do stuff

534
00:18:45,490 --> 00:18:49,780
right so there's also an element of non

535
00:18:47,620 --> 00:18:51,760
determinism there but again that is good

536
00:18:49,780 --> 00:18:53,799
your own emulation is that means that

537
00:18:51,760 --> 00:18:56,169
you're you know over engineering ominous

538
00:18:53,799 --> 00:18:57,340
like a single scenario the more random I

539
00:18:56,169 --> 00:19:03,280
think the better it is for your

540
00:18:57,340 --> 00:19:05,199
protection right so what wouldn't

541
00:19:03,280 --> 00:19:07,990
what would a choleric class look like

542
00:19:05,200 --> 00:19:10,510
for as I said all your actions are

543
00:19:07,990 --> 00:19:12,460
written in Python and they've roughly

544
00:19:10,510 --> 00:19:13,870
have three sections each class in which

545
00:19:12,460 --> 00:19:15,870
you define an action to this is where it

546
00:19:13,870 --> 00:19:17,860
gets more like bringing it to life so

547
00:19:15,870 --> 00:19:20,830
roughly the first section is where you

548
00:19:17,860 --> 00:19:22,479
define your pre and post conditions then

549
00:19:20,830 --> 00:19:24,220
you have the biggest section is

550
00:19:22,480 --> 00:19:26,620
obviously where you in Python define

551
00:19:24,220 --> 00:19:29,230
what your remote access tool your ret

552
00:19:26,620 --> 00:19:31,120
should do on the infected host and at

553
00:19:29,230 --> 00:19:33,190
the end you there's also a clean up

554
00:19:31,120 --> 00:19:35,320
section so that's I think another cool

555
00:19:33,190 --> 00:19:37,450
feature about caldera is that once you

556
00:19:35,320 --> 00:19:38,710
run it you will attack your machine

557
00:19:37,450 --> 00:19:40,750
right so you will create your systems

558
00:19:38,710 --> 00:19:42,159
and you will change you drop files to

559
00:19:40,750 --> 00:19:44,620
change the registry keys that sort of

560
00:19:42,159 --> 00:19:46,120
jazz but if you want to run it again

561
00:19:44,620 --> 00:19:47,860
like you don't want to reimage your

562
00:19:46,120 --> 00:19:49,899
machine over and over again right so

563
00:19:47,860 --> 00:19:51,850
caldera offers you the option to sort of

564
00:19:49,899 --> 00:19:53,770
undo what you changed so if you drop a

565
00:19:51,850 --> 00:19:55,209
file you can then at the end say well

566
00:19:53,770 --> 00:19:56,530
once you're done you want to clean up

567
00:19:55,210 --> 00:19:58,000
just delete the file

568
00:19:56,530 --> 00:20:00,520
right or if you change your register key

569
00:19:58,000 --> 00:20:02,260
change it back at the end that just make

570
00:20:00,520 --> 00:20:04,690
sure that and you can without having to

571
00:20:02,260 --> 00:20:09,490
do anything rerun your emulation over

572
00:20:04,690 --> 00:20:11,860
and over again so just as an example so

573
00:20:09,490 --> 00:20:15,430
imagine I want to implement a mimic s

574
00:20:11,860 --> 00:20:17,530
action so first I need to define my pre

575
00:20:15,430 --> 00:20:19,450
and post conditions so if you know mimic

576
00:20:17,530 --> 00:20:21,399
s you know in order for it to work you

577
00:20:19,450 --> 00:20:22,390
need a ping potential you mean admin

578
00:20:21,400 --> 00:20:24,640
rights right

579
00:20:22,390 --> 00:20:27,520
so my precondition will be if you have

580
00:20:24,640 --> 00:20:29,170
admin rights I can run this my post

581
00:20:27,520 --> 00:20:32,080
condition will be if this was successful

582
00:20:29,170 --> 00:20:34,420
and you will have credentials so you

583
00:20:32,080 --> 00:20:36,580
need to tell Caldera in Python in there

584
00:20:34,420 --> 00:20:38,710
with using that classes that this is the

585
00:20:36,580 --> 00:20:41,679
case so called our ad and notice how to

586
00:20:38,710 --> 00:20:43,300
work together with the other actions so

587
00:20:41,680 --> 00:20:44,800
then the action itself so that's where

588
00:20:43,300 --> 00:20:46,470
you in Python say like okay maybe

589
00:20:44,800 --> 00:20:49,149
parallel mimic has from this location

590
00:20:46,470 --> 00:20:51,790
running the PowerShell do something

591
00:20:49,150 --> 00:20:53,590
clever with the outputs and then you

592
00:20:51,790 --> 00:20:55,780
also need to tell caldera what to do

593
00:20:53,590 --> 00:20:57,310
it's like if you find credentials you

594
00:20:55,780 --> 00:20:58,690
need to tell call there are in a

595
00:20:57,310 --> 00:21:01,090
structured format like these are the

596
00:20:58,690 --> 00:21:03,700
credentials so that further actions know

597
00:21:01,090 --> 00:21:05,919
how to access username password so and

598
00:21:03,700 --> 00:21:08,380
clean up so if you drop files or if you

599
00:21:05,920 --> 00:21:11,290
maybe in this case I would trade logs or

600
00:21:08,380 --> 00:21:13,540
whatever you can in your Python plus say

601
00:21:11,290 --> 00:21:16,389
like okay delete them at the end to undo

602
00:21:13,540 --> 00:21:17,350
the damage you did so this is what it

603
00:21:16,390 --> 00:21:18,850
would look like I'm not going to go

604
00:21:17,350 --> 00:21:20,620
through it line by line don't worry but

605
00:21:18,850 --> 00:21:23,080
it's also a simplified version but you

606
00:21:20,620 --> 00:21:25,570
can see at the top you see precondition

607
00:21:23,080 --> 00:21:27,520
it says ret remote access tool and it

608
00:21:25,570 --> 00:21:29,679
says elevated is true so my precondition

609
00:21:27,520 --> 00:21:32,050
is I need my ride access tool to be

610
00:21:29,680 --> 00:21:34,330
elevated in order for this action to be

611
00:21:32,050 --> 00:21:37,690
able to run and then my post conditions

612
00:21:34,330 --> 00:21:39,010
are I will be aware of users right these

613
00:21:37,690 --> 00:21:41,530
mimic s also give your user names

614
00:21:39,010 --> 00:21:43,420
obviously but more importantly I will

615
00:21:41,530 --> 00:21:45,100
have credentials and again post

616
00:21:43,420 --> 00:21:48,580
condition assumes it was successful so

617
00:21:45,100 --> 00:21:51,040
precondition pod condition then the

618
00:21:48,580 --> 00:21:53,199
middle bit this is the action itself so

619
00:21:51,040 --> 00:21:55,330
you might see here like literally it's a

620
00:21:53,200 --> 00:21:57,640
URL to a github page with invoke

621
00:21:55,330 --> 00:21:59,230
mimikatz Lapierre's one and then the

622
00:21:57,640 --> 00:22:02,890
rule below it you literally see it

623
00:21:59,230 --> 00:22:05,130
running powershell with IE x IWR and

624
00:22:02,890 --> 00:22:08,500
then the link so if you know a little of

625
00:22:05,130 --> 00:22:10,340
powershell you know that IE X so for Evo

626
00:22:08,500 --> 00:22:14,840
like the evaluation function

627
00:22:10,340 --> 00:22:16,279
hi WR is downloads URL to stream so this

628
00:22:14,840 --> 00:22:18,230
will literally if you run this one line

629
00:22:16,279 --> 00:22:19,520
it will literally run mimic hats and

630
00:22:18,230 --> 00:22:21,470
don't get out putting your standard out

631
00:22:19,520 --> 00:22:23,389
the advantage of this that it is

632
00:22:21,470 --> 00:22:24,919
fireless like you don't leave any trades

633
00:22:23,390 --> 00:22:26,270
in your there's no file for you to

634
00:22:24,919 --> 00:22:28,730
download because everything happens in

635
00:22:26,270 --> 00:22:30,200
memory it's quite it's quite cool so

636
00:22:28,730 --> 00:22:32,600
this is where we prepare it and then

637
00:22:30,200 --> 00:22:34,880
here is telling calderas ret to

638
00:22:32,600 --> 00:22:36,320
literally run this command line and then

639
00:22:34,880 --> 00:22:39,679
do something clever with the output and

640
00:22:36,320 --> 00:22:41,480
then here's step two is literally making

641
00:22:39,679 --> 00:22:43,520
caldera aware of it so where our post

642
00:22:41,480 --> 00:22:46,429
condition is user G in credential G you

643
00:22:43,520 --> 00:22:48,289
now see register user G with the found

644
00:22:46,429 --> 00:22:51,230
username and registered credential G

645
00:22:48,289 --> 00:22:52,580
with the found password so that's like

646
00:22:51,230 --> 00:22:54,440
this is simplified version this is more

647
00:22:52,580 --> 00:22:56,418
or less what's going on and then in this

648
00:22:54,440 --> 00:22:58,220
case there's nothing to clean up right

649
00:22:56,419 --> 00:23:00,350
is it won't drop any files it won't

650
00:22:58,220 --> 00:23:02,059
change any registry keys you don't even

651
00:23:00,350 --> 00:23:05,059
need to kill any processes this is it

652
00:23:02,059 --> 00:23:07,850
so your cleanup is nothing so this is

653
00:23:05,059 --> 00:23:09,168
this was really simple this is pretty

654
00:23:07,850 --> 00:23:11,270
cool so you can do this this is an

655
00:23:09,169 --> 00:23:15,789
example dump credentials obviously you

656
00:23:11,270 --> 00:23:18,379
can do this for all sort of thing so

657
00:23:15,789 --> 00:23:20,090
before I move on to showing you and

658
00:23:18,380 --> 00:23:21,260
showing you what we did to extend it to

659
00:23:20,090 --> 00:23:23,330
make it even more exciting

660
00:23:21,260 --> 00:23:25,250
there's a few challenges here right so

661
00:23:23,330 --> 00:23:26,990
we now know how could ever works and how

662
00:23:25,250 --> 00:23:28,100
you can implement your own stuff or even

663
00:23:26,990 --> 00:23:29,720
if you don't want to implement stuff

664
00:23:28,100 --> 00:23:32,000
like Paul Dirac already comes with a lot

665
00:23:29,720 --> 00:23:33,919
of built-in stuff there's a few

666
00:23:32,000 --> 00:23:36,200
challenges here so once you know you're

667
00:23:33,919 --> 00:23:38,270
at a ket making sure that you have all

668
00:23:36,200 --> 00:23:40,070
their capabilities in Caldera is one of

669
00:23:38,270 --> 00:23:42,049
our challenges right making sure that

670
00:23:40,070 --> 00:23:43,700
it's actually a good representation of

671
00:23:42,049 --> 00:23:46,970
the attacker you're trying to defend

672
00:23:43,700 --> 00:23:49,940
yourself against another one is a big

673
00:23:46,970 --> 00:23:51,679
one is the detection itself so in the

674
00:23:49,940 --> 00:23:53,299
example I just showed you you saw that

675
00:23:51,679 --> 00:23:55,730
literally the command line contains the

676
00:23:53,299 --> 00:23:57,529
word mimic hats right so if you really

677
00:23:55,730 --> 00:23:59,330
if you have a really stupid rule-based

678
00:23:57,529 --> 00:24:01,250
system you might say oh I know how to

679
00:23:59,330 --> 00:24:02,750
detect mimic hats just by looking at the

680
00:24:01,250 --> 00:24:05,630
command line if I see the word mimic

681
00:24:02,750 --> 00:24:06,950
hats then I found it yay well that's

682
00:24:05,630 --> 00:24:09,169
obviously not what you're looking for

683
00:24:06,950 --> 00:24:10,850
right so even though in this emulation

684
00:24:09,169 --> 00:24:12,260
you might have a rule that detectives

685
00:24:10,850 --> 00:24:13,789
you're really looking for the wrong

686
00:24:12,260 --> 00:24:16,370
thing by what you should be looking for

687
00:24:13,789 --> 00:24:18,860
is these ways powershell arguments or

688
00:24:16,370 --> 00:24:21,649
maybe the dll powershell knows is that

689
00:24:18,860 --> 00:24:24,080
would also be like different from normal

690
00:24:21,649 --> 00:24:25,879
so a challenge here

691
00:24:24,080 --> 00:24:27,529
that even if you implemented you should

692
00:24:25,880 --> 00:24:30,140
make it as random as possible so that

693
00:24:27,529 --> 00:24:31,100
you don't detect the wrong thing the

694
00:24:30,140 --> 00:24:33,679
same we'd like if you have anything

695
00:24:31,100 --> 00:24:35,510
artificial intelligence related like it

696
00:24:33,679 --> 00:24:37,039
might pick up that all your evil stuff

697
00:24:35,510 --> 00:24:39,490
always contains the word mimic hats will

698
00:24:37,039 --> 00:24:41,539
always go to know your internal github

699
00:24:39,490 --> 00:24:42,559
that's obviously the wrong thing that's

700
00:24:41,539 --> 00:24:44,090
not where you're after so that is a

701
00:24:42,559 --> 00:24:46,639
challenge so make sure that once you run

702
00:24:44,090 --> 00:24:48,110
it you detect the right thing and well

703
00:24:46,640 --> 00:24:51,080
same with realism right what techniques

704
00:24:48,110 --> 00:24:52,370
you use timing so in called area can

705
00:24:51,080 --> 00:24:54,649
also set like the interval between

706
00:24:52,370 --> 00:24:57,080
individual actions if you really want to

707
00:24:54,649 --> 00:24:58,370
make sure that it is realistic make sure

708
00:24:57,080 --> 00:25:04,158
that you set all these parameters right

709
00:24:58,370 --> 00:25:06,408
so it looks like an actual attack sweet

710
00:25:04,159 --> 00:25:08,600
so that was a crash course into normal

711
00:25:06,409 --> 00:25:10,970
called error and that is really good

712
00:25:08,600 --> 00:25:12,049
there is there's an open-source version

713
00:25:10,970 --> 00:25:13,820
of it which you can obviously use

714
00:25:12,049 --> 00:25:16,940
there's people contributing to it which

715
00:25:13,820 --> 00:25:19,039
is pretty cool what we did is extended

716
00:25:16,940 --> 00:25:20,899
even further so beyond standard caldera

717
00:25:19,039 --> 00:25:22,940
there's a few things that you see in the

718
00:25:20,899 --> 00:25:24,590
world quite often that you can't do

719
00:25:22,940 --> 00:25:26,870
normally but I'm we've changed caldera

720
00:25:24,590 --> 00:25:27,980
to do these things and I'm gonna walk

721
00:25:26,870 --> 00:25:29,899
you through them so there's three things

722
00:25:27,980 --> 00:25:32,450
here you start with all bins or all

723
00:25:29,899 --> 00:25:33,918
busts and then we have some very simple

724
00:25:32,450 --> 00:25:37,370
office keishon techniques also

725
00:25:33,919 --> 00:25:42,590
masquerading techniques little bins who

726
00:25:37,370 --> 00:25:44,870
here knows little bins okay so law bins

727
00:25:42,590 --> 00:25:46,850
or sometimes a law bus stands for living

728
00:25:44,870 --> 00:25:50,080
of the land wineries or law passes

729
00:25:46,850 --> 00:25:53,029
living off the land wineries and scripts

730
00:25:50,080 --> 00:25:55,279
whatever it is is tools that are either

731
00:25:53,029 --> 00:25:57,380
included in your operating system like

732
00:25:55,279 --> 00:25:59,809
Windows or come with standard software

733
00:25:57,380 --> 00:26:02,720
like Microsoft Office Java that sort of

734
00:25:59,809 --> 00:26:06,019
thing there are legitimate tools may be

735
00:26:02,720 --> 00:26:08,840
signed even and that you used to do like

736
00:26:06,019 --> 00:26:10,539
stuff it's not intended to do so obvious

737
00:26:08,840 --> 00:26:13,189
examples here will be PowerShell is

738
00:26:10,539 --> 00:26:15,080
present on every operating system after

739
00:26:13,190 --> 00:26:16,639
Windows XP and you can just write any

740
00:26:15,080 --> 00:26:18,379
script you want right you can asset

741
00:26:16,639 --> 00:26:20,539
issue so you can download files you can

742
00:26:18,380 --> 00:26:22,460
run processes whatever so that is a

743
00:26:20,539 --> 00:26:26,179
really obvious one you also got W script

744
00:26:22,460 --> 00:26:29,120
and C script for your VB script MSHDA

745
00:26:26,179 --> 00:26:31,580
that that's the obvious options there's

746
00:26:29,120 --> 00:26:33,260
also more obscure ones so if you are

747
00:26:31,580 --> 00:26:35,090
familiar with the attack framework you

748
00:26:33,260 --> 00:26:37,250
know that well sometimes it's look like

749
00:26:35,090 --> 00:26:40,340
half of them but I think it's like a

750
00:26:37,250 --> 00:26:43,190
quarter is law Benson there's so many

751
00:26:40,340 --> 00:26:46,340
windows processes that you can abuse to

752
00:26:43,190 --> 00:26:47,659
do suffice more meant to do so a few

753
00:26:46,340 --> 00:26:50,059
other examples are just randomly picked

754
00:26:47,659 --> 00:26:50,750
so we've got rag Azzam axe whizzes is

755
00:26:50,059 --> 00:26:53,899
quite cool

756
00:26:50,750 --> 00:26:56,390
I miss bills or puppy Rendell fee WS

757
00:26:53,900 --> 00:26:57,980
this is an example of a script it's a

758
00:26:56,390 --> 00:26:59,750
Microsoft signed scripts that you can

759
00:26:57,980 --> 00:27:02,270
trick into executing pretty much

760
00:26:59,750 --> 00:27:03,500
whatever you want so why would you want

761
00:27:02,270 --> 00:27:05,299
to do this isn't that Tackett well

762
00:27:03,500 --> 00:27:07,520
because you're already in write like why

763
00:27:05,299 --> 00:27:09,340
would you need these tools so it's a way

764
00:27:07,520 --> 00:27:12,799
to stay under the radar because it means

765
00:27:09,340 --> 00:27:16,970
if you are using for instance out of my

766
00:27:12,799 --> 00:27:18,799
msbuild to contact your c2 server your

767
00:27:16,970 --> 00:27:20,539
detection mechanism might think like oh

768
00:27:18,799 --> 00:27:23,150
i've seen i must build reaching out to

769
00:27:20,539 --> 00:27:25,610
to network posts before that's probably

770
00:27:23,150 --> 00:27:28,760
fine right or if you use rag as them to

771
00:27:25,610 --> 00:27:30,350
execute a bad command it might think oh

772
00:27:28,760 --> 00:27:32,419
it's a Microsoft signed binary that then

773
00:27:30,350 --> 00:27:33,469
whatever it spawns is probably good as

774
00:27:32,419 --> 00:27:36,409
well I could don't need to worry about

775
00:27:33,470 --> 00:27:38,690
that so that's one way another way is

776
00:27:36,409 --> 00:27:39,320
that some organizations have application

777
00:27:38,690 --> 00:27:42,350
whitelisting

778
00:27:39,320 --> 00:27:44,210
so you can only run certain processes a

779
00:27:42,350 --> 00:27:46,639
common thing to do is just allow

780
00:27:44,210 --> 00:27:48,799
Microsoft sign processes for instance so

781
00:27:46,640 --> 00:27:50,510
imagine if you use reg Azzam I think

782
00:27:48,799 --> 00:27:52,460
it's signed and you trick it into

783
00:27:50,510 --> 00:27:54,530
running your evil process you can bypass

784
00:27:52,460 --> 00:27:56,450
your application whitelisting right

785
00:27:54,530 --> 00:27:59,980
who's quite often these sign processes

786
00:27:56,450 --> 00:28:03,559
are allowed to spawn whatever they want

787
00:27:59,980 --> 00:28:04,159
right so law bins so how do you do this

788
00:28:03,559 --> 00:28:06,559
in caldera

789
00:28:04,159 --> 00:28:08,450
so for caldera to understand it you

790
00:28:06,559 --> 00:28:11,570
again need to think about pre and post

791
00:28:08,450 --> 00:28:13,490
conditions so a precondition will be the

792
00:28:11,570 --> 00:28:16,490
in order to run a login I need to know

793
00:28:13,490 --> 00:28:18,530
command that I want to run right session

794
00:28:16,490 --> 00:28:21,080
precondition your post condition will be

795
00:28:18,530 --> 00:28:25,250
if Milo Boone was successful the command

796
00:28:21,080 --> 00:28:26,899
will have executed so simple example so

797
00:28:25,250 --> 00:28:30,169
if I want a machine and I want to run my

798
00:28:26,900 --> 00:28:32,659
evil dog X a binary and I want to stay

799
00:28:30,169 --> 00:28:34,730
on the radar I will pick a random login

800
00:28:32,659 --> 00:28:37,580
so in this example I chose Verizon with

801
00:28:34,730 --> 00:28:39,919
the /u parameter so that requires you to

802
00:28:37,580 --> 00:28:41,240
compile a custom DLL so that will be the

803
00:28:39,919 --> 00:28:43,909
action and then the post condition will

804
00:28:41,240 --> 00:28:47,899
be well it runs successfully so as you

805
00:28:43,909 --> 00:28:49,850
can so you can see here on the slide

806
00:28:47,899 --> 00:28:50,479
this is what it might look like if

807
00:28:49,850 --> 00:28:52,310
you're anything call

808
00:28:50,480 --> 00:28:54,200
so you have the command little taxi

809
00:28:52,310 --> 00:28:56,810
process here which is called Airbus

810
00:28:54,200 --> 00:28:59,060
process red sofa can run solder on the

811
00:28:56,810 --> 00:29:00,710
craft form really then you see it's

812
00:28:59,060 --> 00:29:02,450
spawning rag Azzam so system clearly

813
00:29:00,710 --> 00:29:05,450
through binary and you see it here

814
00:29:02,450 --> 00:29:08,090
calling it with this parameter adobe

815
00:29:05,450 --> 00:29:09,560
updated of yellow so I don't know about

816
00:29:08,090 --> 00:29:11,030
you but I've seen Adobe doing where

817
00:29:09,560 --> 00:29:12,860
they're things so if I see something

818
00:29:11,030 --> 00:29:15,740
like this I'll be like I believe it

819
00:29:12,860 --> 00:29:17,149
might be JIT actually obviously in this

820
00:29:15,740 --> 00:29:19,880
example that it's evil so this is a

821
00:29:17,150 --> 00:29:23,210
compiled dll that will trigger a guys

822
00:29:19,880 --> 00:29:25,670
into executing my temp processes called

823
00:29:23,210 --> 00:29:27,740
evil so this is what it might look like

824
00:29:25,670 --> 00:29:30,770
so it's a very good way to stay on the

825
00:29:27,740 --> 00:29:34,910
derailleur or avoid application like

826
00:29:30,770 --> 00:29:36,139
this bypassing right so there's one so

827
00:29:34,910 --> 00:29:39,440
what that will look like in practice all

828
00:29:36,140 --> 00:29:42,680
showing a demo after this so then

829
00:29:39,440 --> 00:29:43,910
obfuscation the principle is really

830
00:29:42,680 --> 00:29:44,630
simple like it's not it's not it's not

831
00:29:43,910 --> 00:29:47,030
rocket science

832
00:29:44,630 --> 00:29:49,100
a lot of rule-based systems look for

833
00:29:47,030 --> 00:29:51,800
keywords right so you might say in the

834
00:29:49,100 --> 00:29:53,840
example I showed you if I see PowerShell

835
00:29:51,800 --> 00:29:56,480
and I see it running a command line that

836
00:29:53,840 --> 00:29:58,790
contains ie X based ways I don't want

837
00:29:56,480 --> 00:30:00,470
that so a lot of systems if you're

838
00:29:58,790 --> 00:30:03,230
looking for Bay fuel stuff rely on

839
00:30:00,470 --> 00:30:06,800
keywords so what if you try and hide

840
00:30:03,230 --> 00:30:08,180
these keywords with with this various

841
00:30:06,800 --> 00:30:10,370
ways of doing it so there's another

842
00:30:08,180 --> 00:30:12,290
resource so presentation will be

843
00:30:10,370 --> 00:30:13,760
available at the end by the way both the

844
00:30:12,290 --> 00:30:15,649
slides and all the code I've shown you

845
00:30:13,760 --> 00:30:17,540
the implementation equal there will be

846
00:30:15,650 --> 00:30:18,830
on my github including all the

847
00:30:17,540 --> 00:30:20,149
references you see in the presentation

848
00:30:18,830 --> 00:30:22,100
so if you're interested in up the

849
00:30:20,150 --> 00:30:25,280
station's really good resource they're a

850
00:30:22,100 --> 00:30:27,830
few simple examples are imagine you are

851
00:30:25,280 --> 00:30:31,040
looking for the keyword hello world one

852
00:30:27,830 --> 00:30:33,020
simple way of doing that is just cutting

853
00:30:31,040 --> 00:30:34,310
the string up in pieces so here you see

854
00:30:33,020 --> 00:30:37,550
how the world and it's now three pieces

855
00:30:34,310 --> 00:30:38,360
and my detection mechanism won't detects

856
00:30:37,550 --> 00:30:40,100
hello world anymore

857
00:30:38,360 --> 00:30:42,590
this is interrupted with these annoying

858
00:30:40,100 --> 00:30:44,689
codes and plus signs so that's one way

859
00:30:42,590 --> 00:30:46,250
of doing it another simple ways escaping

860
00:30:44,690 --> 00:30:48,170
it so in PowerShell the escape

861
00:30:46,250 --> 00:30:49,580
characters are backtick so you just

862
00:30:48,170 --> 00:30:51,140
escaped a few characters that don't need

863
00:30:49,580 --> 00:30:52,429
escaping PowerShell will still

864
00:30:51,140 --> 00:30:55,550
understand it but your rule based

865
00:30:52,430 --> 00:30:58,100
detection mechanism might miss it format

866
00:30:55,550 --> 00:31:00,680
string also quite nice so basically you

867
00:30:58,100 --> 00:31:02,870
allows you to reorder a string in in a

868
00:31:00,680 --> 00:31:04,130
in a random order making it both are to

869
00:31:02,870 --> 00:31:06,110
look at

870
00:31:04,130 --> 00:31:08,480
humans it's hard to read what it says

871
00:31:06,110 --> 00:31:09,979
now right and but also for machines like

872
00:31:08,480 --> 00:31:13,130
it might miss the actual keyword it's

873
00:31:09,980 --> 00:31:14,570
for people pay 64 encodes also

874
00:31:13,130 --> 00:31:16,340
low-hanging fruit like you would be

875
00:31:14,570 --> 00:31:18,860
surprised how easy it is to run

876
00:31:16,340 --> 00:31:21,860
base64-encoded commands and a lot of

877
00:31:18,860 --> 00:31:23,000
systems don't detect it and unencoded so

878
00:31:21,860 --> 00:31:25,370
again if you're looking for certain

879
00:31:23,000 --> 00:31:29,030
commands if you just place 64 encoded

880
00:31:25,370 --> 00:31:31,310
you might completely miss it so just to

881
00:31:29,030 --> 00:31:33,050
remind you this is just simple software

882
00:31:31,310 --> 00:31:35,899
really stupid systems if you have more

883
00:31:33,050 --> 00:31:37,370
clever stuff like entropy analysis will

884
00:31:35,900 --> 00:31:38,660
reveal this is doing something weird

885
00:31:37,370 --> 00:31:41,439
right these normal commands won't have

886
00:31:38,660 --> 00:31:43,670
as many quotes or loss signs or tactics

887
00:31:41,440 --> 00:31:45,680
so there are obviously all the ways to

888
00:31:43,670 --> 00:31:47,030
detected which is really nice where you

889
00:31:45,680 --> 00:31:49,520
will see in practice a lot of attackers

890
00:31:47,030 --> 00:31:52,070
you'll still try it even if they get

891
00:31:49,520 --> 00:31:55,460
detected it's just maybe your detection

892
00:31:52,070 --> 00:31:57,830
will miss it so what will they look like

893
00:31:55,460 --> 00:32:00,050
in Caldera so again precondition post

894
00:31:57,830 --> 00:32:00,590
condition so my precondition is I need a

895
00:32:00,050 --> 00:32:03,080
command

896
00:32:00,590 --> 00:32:06,169
so this is our mimic s command again ye

897
00:32:03,080 --> 00:32:08,689
xie w and then this will give up your

898
00:32:06,170 --> 00:32:10,790
own so now we implemented this

899
00:32:08,690 --> 00:32:12,290
obfuscation it will randomly pick one of

900
00:32:10,790 --> 00:32:16,190
the ones I just mentioned so in this

901
00:32:12,290 --> 00:32:17,360
case it shows format string so well good

902
00:32:16,190 --> 00:32:18,650
luck understanding what it says here

903
00:32:17,360 --> 00:32:20,179
right like if you don't see this you

904
00:32:18,650 --> 00:32:21,980
just see that you can tell something

905
00:32:20,180 --> 00:32:23,750
weird is going on but if you're looking

906
00:32:21,980 --> 00:32:25,460
for the word mimic hats like it's now in

907
00:32:23,750 --> 00:32:27,710
three separate pieces right so I think

908
00:32:25,460 --> 00:32:30,050
it's like 40 full strings of four

909
00:32:27,710 --> 00:32:32,720
characters so it makes it more difficult

910
00:32:30,050 --> 00:32:34,159
to if you're in it actually works if you

911
00:32:32,720 --> 00:32:36,410
run this one and will actually check

912
00:32:34,160 --> 00:32:38,450
they will actually remember casts this

913
00:32:36,410 --> 00:32:40,640
is a lot harder to detect although as I

914
00:32:38,450 --> 00:32:41,890
said if you have entropy analysis or

915
00:32:40,640 --> 00:32:44,270
something off the lights

916
00:32:41,890 --> 00:32:46,130
you're still detected and hopefully you

917
00:32:44,270 --> 00:32:47,720
will still do other cleverer ways of

918
00:32:46,130 --> 00:32:49,340
detecting it anyway but this is just a

919
00:32:47,720 --> 00:32:51,470
good way to check like do Shu system

920
00:32:49,340 --> 00:32:57,800
actually go beyond normal keyword

921
00:32:51,470 --> 00:32:59,270
checking then finally masquerading this

922
00:32:57,800 --> 00:33:00,800
is something we saw more recently and

923
00:32:59,270 --> 00:33:03,710
again we think about it it's quite

924
00:33:00,800 --> 00:33:06,680
simple so you take a legitimate utility

925
00:33:03,710 --> 00:33:08,120
like PowerShell w scape whatever and you

926
00:33:06,680 --> 00:33:12,020
put it in a temp folder you call it

927
00:33:08,120 --> 00:33:13,639
something else and profit so imagine in

928
00:33:12,020 --> 00:33:16,250
the example I gave you you have a rule

929
00:33:13,640 --> 00:33:17,639
that says are looking for PowerShell in

930
00:33:16,250 --> 00:33:19,889
combination with IE

931
00:33:17,639 --> 00:33:21,869
you come online what if I call it's

932
00:33:19,889 --> 00:33:23,758
definitely not PowerShell but XE and put

933
00:33:21,869 --> 00:33:24,299
in a temp folder and I've run the same

934
00:33:23,759 --> 00:33:26,159
commands

935
00:33:24,299 --> 00:33:28,440
can you still work right but will your

936
00:33:26,159 --> 00:33:30,359
rule based detection system still

937
00:33:28,440 --> 00:33:32,029
detected is not called PowerShell

938
00:33:30,359 --> 00:33:34,978
anymore all right

939
00:33:32,029 --> 00:33:38,789
or what about this browse is the second

940
00:33:34,979 --> 00:33:40,649
one does anyone recognize the icon it's

941
00:33:38,789 --> 00:33:42,690
I think it's C scripts or double used to

942
00:33:40,649 --> 00:33:44,820
give one of the two if I call it SVC

943
00:33:42,690 --> 00:33:46,619
hosts and I put it in temp there might

944
00:33:44,820 --> 00:33:47,849
be a lot of like even like if you look

945
00:33:46,619 --> 00:33:50,149
at it with the human eye you might think

946
00:33:47,849 --> 00:33:52,439
yeah could be

947
00:33:50,149 --> 00:33:54,899
so what would that look like in an

948
00:33:52,440 --> 00:33:58,259
attack so imagine I want to run the

949
00:33:54,899 --> 00:34:00,958
command WC EJ scripts evil DOJ's

950
00:33:58,259 --> 00:34:03,119
if I run this like that it might get

951
00:34:00,959 --> 00:34:06,629
detected very easily this is not like a

952
00:34:03,119 --> 00:34:08,460
normal way of using W scripts but with

953
00:34:06,629 --> 00:34:10,139
our implementation in caldera it will

954
00:34:08,460 --> 00:34:12,149
just randomize the name it will copy it

955
00:34:10,139 --> 00:34:14,010
to a temple to give it a random name but

956
00:34:12,149 --> 00:34:17,098
sort of legit sounding so in this case

957
00:34:14,010 --> 00:34:18,990
it shows Google update the Lexi and now

958
00:34:17,099 --> 00:34:21,089
instead of running W scripts it will run

959
00:34:18,989 --> 00:34:22,469
Google update and because there's a copy

960
00:34:21,089 --> 00:34:24,359
of the binary it will still work as

961
00:34:22,469 --> 00:34:27,089
expected but it looks a lot less

962
00:34:24,359 --> 00:34:29,460
suspicious right so again if this is

963
00:34:27,089 --> 00:34:31,589
your so we saw there's actually being

964
00:34:29,460 --> 00:34:33,539
used for persistence so imagine you have

965
00:34:31,589 --> 00:34:35,339
an auto run entry that is called

966
00:34:33,539 --> 00:34:37,710
ceaseless window slash template Google

967
00:34:35,339 --> 00:34:39,719
up labeled Lexi and with this parameters

968
00:34:37,710 --> 00:34:41,730
maybe you wouldn't call evil but yes but

969
00:34:39,719 --> 00:34:44,009
imagine it's called like accept EULA

970
00:34:41,730 --> 00:34:45,869
dodged as if you see it isn't your auto

971
00:34:44,009 --> 00:34:48,029
run entries you might think a single

972
00:34:45,869 --> 00:34:50,599
will run from temper fall and yeah

973
00:34:48,029 --> 00:34:53,940
that's something that Google might do so

974
00:34:50,599 --> 00:34:55,740
it's actually running W scripts and if

975
00:34:53,940 --> 00:34:57,180
you use an AV it will tell you like oh

976
00:34:55,739 --> 00:34:58,618
actually it's a trust of Microsoft

977
00:34:57,180 --> 00:35:00,960
process and there's zero detection so

978
00:34:58,619 --> 00:35:02,970
nothing going on here so this is just a

979
00:35:00,960 --> 00:35:04,890
really easy way to bypass systems that

980
00:35:02,970 --> 00:35:07,680
don't go the extra mile that just look

981
00:35:04,890 --> 00:35:09,000
at the superficial things so again we

982
00:35:07,680 --> 00:35:11,609
accept a caldera to do this stuff

983
00:35:09,000 --> 00:35:15,329
randomized filename and this is what it

984
00:35:11,609 --> 00:35:18,440
might look like in your process tree in

985
00:35:15,329 --> 00:35:22,079
phone lines including well right so

986
00:35:18,440 --> 00:35:24,180
putting it into contexts so what I did

987
00:35:22,079 --> 00:35:25,859
for a demo is that I created in

988
00:35:24,180 --> 00:35:29,129
etiquette which is some random

989
00:35:25,859 --> 00:35:31,500
capabilities and I ran it and it will

990
00:35:29,130 --> 00:35:34,109
use masquerading obfuscation and law

991
00:35:31,500 --> 00:35:35,099
and just to give you an idea of what

992
00:35:34,109 --> 00:35:38,549
that would look like and what it would

993
00:35:35,099 --> 00:35:41,460
look like in your estate so for this

994
00:35:38,550 --> 00:35:43,020
attack you obviously in fact you often

995
00:35:41,460 --> 00:35:45,780
assumed that you've been affected so

996
00:35:43,020 --> 00:35:47,550
state zero is outside of scope so maybe

997
00:35:45,780 --> 00:35:50,430
then my techid ism discovery techniques

998
00:35:47,550 --> 00:35:52,950
some lateral movement maybe we'll do

999
00:35:50,430 --> 00:35:54,779
some execution then maybe use that to

1000
00:35:52,950 --> 00:35:57,540
create resistance to say on the network

1001
00:35:54,780 --> 00:35:59,040
and at the end for tracks and that's

1002
00:35:57,540 --> 00:36:01,050
between brackets because for their AB

1003
00:35:59,040 --> 00:36:02,430
how with the Box supports undoing what

1004
00:36:01,050 --> 00:36:05,849
you do right so the cover attracts is

1005
00:36:02,430 --> 00:36:08,009
sort of copied by that so imagine we

1006
00:36:05,849 --> 00:36:09,960
have this so in the discovery and Left

1007
00:36:08,010 --> 00:36:12,060
row movement face it can run mimic hats

1008
00:36:09,960 --> 00:36:14,099
you can find administrators you can find

1009
00:36:12,060 --> 00:36:16,440
other machines on the same network it

1010
00:36:14,099 --> 00:36:17,520
can move through other machines there's

1011
00:36:16,440 --> 00:36:19,140
a good start right so this is what I

1012
00:36:17,520 --> 00:36:22,410
defined in caldera this is what my

1013
00:36:19,140 --> 00:36:24,839
attacker can do for execution so this is

1014
00:36:22,410 --> 00:36:27,089
where the more like interesting stuff

1015
00:36:24,839 --> 00:36:29,549
computers stuff we implemented ourselves

1016
00:36:27,089 --> 00:36:31,828
it can download a web server but also

1017
00:36:29,550 --> 00:36:34,410
set up a web shell using that download

1018
00:36:31,829 --> 00:36:37,800
and maybe it can accelerate data using

1019
00:36:34,410 --> 00:36:39,960
the web shell if it was successful

1020
00:36:37,800 --> 00:36:41,520
maybe then with persistence it can

1021
00:36:39,960 --> 00:36:43,920
create an autorun entry for the web show

1022
00:36:41,520 --> 00:36:46,170
so that it can even survive a reboot and

1023
00:36:43,920 --> 00:36:48,210
can still do exfiltration or send it

1024
00:36:46,170 --> 00:36:49,849
malicious commands and as I said cover

1025
00:36:48,210 --> 00:36:52,230
tracks right caldera at the end will

1026
00:36:49,849 --> 00:36:54,180
clear all files registry keys whatever

1027
00:36:52,230 --> 00:37:01,440
as long as you define it in your caldera

1028
00:36:54,180 --> 00:37:03,899
action right demo time so just before I

1029
00:37:01,440 --> 00:37:05,730
start the clip so we have here on the

1030
00:37:03,900 --> 00:37:08,180
left hand side the interface of caldera

1031
00:37:05,730 --> 00:37:11,040
rooms is caldera 2.0 you will see

1032
00:37:08,180 --> 00:37:12,299
initially gray boxes popping up and then

1033
00:37:11,040 --> 00:37:14,329
if they were successful they turn green

1034
00:37:12,300 --> 00:37:17,339
if they were unsuccessful it turned red

1035
00:37:14,329 --> 00:37:18,990
then on the right-hand side here you see

1036
00:37:17,339 --> 00:37:21,569
the victim machine so I've just one

1037
00:37:18,990 --> 00:37:23,399
machine just keep it simple at the

1038
00:37:21,569 --> 00:37:25,170
bottom here you see the temp folder this

1039
00:37:23,400 --> 00:37:27,180
is ro caldera we'll drop a lot of files

1040
00:37:25,170 --> 00:37:31,020
so just so you can see what's going on

1041
00:37:27,180 --> 00:37:33,629
then here I have process explorer so at

1042
00:37:31,020 --> 00:37:36,450
the top you see see agent Alexei which

1043
00:37:33,630 --> 00:37:37,890
is the surface that runs the caldera you

1044
00:37:36,450 --> 00:37:39,240
will see that it will spawn commander

1045
00:37:37,890 --> 00:37:41,310
and then you'll see all the commands

1046
00:37:39,240 --> 00:37:44,640
that are caldera will run to emulate

1047
00:37:41,310 --> 00:37:45,180
your attack I have a magnified version

1048
00:37:44,640 --> 00:37:46,740
at the

1049
00:37:45,180 --> 00:37:48,509
because it's quite small vote for you

1050
00:37:46,740 --> 00:37:49,799
guys at the back and see it so this is

1051
00:37:48,510 --> 00:37:51,960
the more interesting bit and I will

1052
00:37:49,800 --> 00:37:55,020
describe what's happening here so let's

1053
00:37:51,960 --> 00:37:56,010
start so as I said the first thing that

1054
00:37:55,020 --> 00:37:59,819
we'll do is it will create command

1055
00:37:56,010 --> 00:38:01,440
Aleksey so and now here starting so now

1056
00:37:59,819 --> 00:38:03,240
it's see here it says running mimic hats

1057
00:38:01,440 --> 00:38:05,210
so let's pause it

1058
00:38:03,240 --> 00:38:07,558
so what you can see now is that it's

1059
00:38:05,210 --> 00:38:10,230
decided to run the example I gave you

1060
00:38:07,559 --> 00:38:13,230
with the IE xie W and the whole give up

1061
00:38:10,230 --> 00:38:14,490
URL but it kind of falls off the page

1062
00:38:13,230 --> 00:38:17,069
but as you can see here it's using

1063
00:38:14,490 --> 00:38:20,220
format string so if the full version if

1064
00:38:17,069 --> 00:38:22,589
cut up the string into I think ten

1065
00:38:20,220 --> 00:38:24,240
different parts and it gave it to

1066
00:38:22,589 --> 00:38:27,119
PowerShell so this is one of the

1067
00:38:24,240 --> 00:38:27,950
techniques right this is the office

1068
00:38:27,119 --> 00:38:29,940
keishon technique

1069
00:38:27,950 --> 00:38:32,759
hopefully eat this box will turn green

1070
00:38:29,940 --> 00:38:35,490
meaning that it was successful so it's

1071
00:38:32,760 --> 00:38:36,599
now running and it's fireless so you

1072
00:38:35,490 --> 00:38:40,169
don't see anything here right i

1073
00:38:36,599 --> 00:38:41,609
hopefully this won't turn green and if

1074
00:38:40,170 --> 00:38:42,839
you care it currently says zero

1075
00:38:41,609 --> 00:38:45,690
credentials but if this was successful

1076
00:38:42,839 --> 00:38:47,069
it Massa's 13 credentials so that works

1077
00:38:45,690 --> 00:38:50,700
so we have credentials so we can move

1078
00:38:47,069 --> 00:38:52,470
laterally that's cool so as I said

1079
00:38:50,700 --> 00:38:54,689
Cabrera is non-deterministic so it now

1080
00:38:52,470 --> 00:38:56,430
decided to enumerate all the computers

1081
00:38:54,690 --> 00:38:57,869
in the domain could have done that's the

1082
00:38:56,430 --> 00:39:01,890
first action right but it doesn't really

1083
00:38:57,869 --> 00:39:04,619
matter right okay so now I decided to

1084
00:39:01,890 --> 00:39:06,240
start downloading the web server and it

1085
00:39:04,619 --> 00:39:09,049
decided to use a little bin for that so

1086
00:39:06,240 --> 00:39:11,368
it decided to use cert util which is a

1087
00:39:09,049 --> 00:39:12,930
binary that's I think present all pretty

1088
00:39:11,369 --> 00:39:15,540
much every Windows operating system

1089
00:39:12,930 --> 00:39:17,308
since Windows XP which is a weird

1090
00:39:15,540 --> 00:39:20,130
vulnerability that you can make it trick

1091
00:39:17,309 --> 00:39:21,839
to downloading any file you want so you

1092
00:39:20,130 --> 00:39:24,030
can see here cert util and if you look

1093
00:39:21,839 --> 00:39:26,400
here it makes me see it going to a URL

1094
00:39:24,030 --> 00:39:27,839
right download some binary and if there

1095
00:39:26,400 --> 00:39:29,760
was successful you can now see the zip

1096
00:39:27,839 --> 00:39:31,799
file view we've randomized the name

1097
00:39:29,760 --> 00:39:34,109
again to make sure that my detection

1098
00:39:31,799 --> 00:39:35,579
system doesn't like just look at the

1099
00:39:34,109 --> 00:39:38,190
file name but really looks at the

1100
00:39:35,579 --> 00:39:40,920
behavior right so box turned green we

1101
00:39:38,190 --> 00:39:42,440
got a web server now so again

1102
00:39:40,920 --> 00:39:46,290
non-determinism it decided now to

1103
00:39:42,440 --> 00:39:48,540
enumerate admin groups so it's using

1104
00:39:46,290 --> 00:39:51,359
PowerShell for that and if you look at

1105
00:39:48,540 --> 00:39:53,279
the command line you will see that it

1106
00:39:51,359 --> 00:39:54,720
there's nothing on the command doesn't

1107
00:39:53,280 --> 00:39:56,339
showing that there's nothing on the

1108
00:39:54,720 --> 00:39:58,430
command line you so it uses to stand it

1109
00:39:56,339 --> 00:39:59,840
in so if you just look at command

1110
00:39:58,430 --> 00:40:01,640
you won't see any malicious behavior

1111
00:39:59,840 --> 00:40:04,340
this is literally putting the equal

1112
00:40:01,640 --> 00:40:05,540
months in the standard in and again it's

1113
00:40:04,340 --> 00:40:09,530
fireless so you won't you won't see

1114
00:40:05,540 --> 00:40:12,200
anything so give that a few more seconds

1115
00:40:09,530 --> 00:40:16,870
and then hopefully you move on to the

1116
00:40:12,200 --> 00:40:18,890
next one okay that is finished right

1117
00:40:16,870 --> 00:40:21,620
okay so now we decided to create

1118
00:40:18,890 --> 00:40:23,450
persistence so I think this one actually

1119
00:40:21,620 --> 00:40:25,609
runs inside caldera so you don't

1120
00:40:23,450 --> 00:40:28,549
actually see any processes nor do you

1121
00:40:25,610 --> 00:40:30,770
see any files dropped right so now this

1122
00:40:28,550 --> 00:40:33,560
new box is great it says down launching

1123
00:40:30,770 --> 00:40:35,750
web server using run DLL 32 there's

1124
00:40:33,560 --> 00:40:38,360
another law bin so it realized that it

1125
00:40:35,750 --> 00:40:40,820
has a downloaded version of this web

1126
00:40:38,360 --> 00:40:42,740
server what you can see here it might be

1127
00:40:40,820 --> 00:40:45,740
a bit small so it there's now a process

1128
00:40:42,740 --> 00:40:47,180
here this is updates daemon and if you

1129
00:40:45,740 --> 00:40:48,310
recognize the I can this is the icon for

1130
00:40:47,180 --> 00:40:51,049
run DLL

1131
00:40:48,310 --> 00:40:53,840
32 and you can see it also drops a

1132
00:40:51,050 --> 00:40:55,850
random file here and SCT script with a

1133
00:40:53,840 --> 00:40:58,250
random over to random filename so what

1134
00:40:55,850 --> 00:41:01,850
we'll do now is use another login would

1135
00:40:58,250 --> 00:41:04,190
run DLL 32 to exit extract the zip file

1136
00:41:01,850 --> 00:41:05,990
into a folder here and then run the web

1137
00:41:04,190 --> 00:41:08,030
server so let's see if that works

1138
00:41:05,990 --> 00:41:09,770
so as you can see you can see new folder

1139
00:41:08,030 --> 00:41:12,290
here random file name box turned green

1140
00:41:09,770 --> 00:41:13,910
so we know it was successful so now it

1141
00:41:12,290 --> 00:41:17,480
actually trying to set up the web shell

1142
00:41:13,910 --> 00:41:23,330
I think it was really quick but you see

1143
00:41:17,480 --> 00:41:26,810
if I can get that back right so you can

1144
00:41:23,330 --> 00:41:28,850
see here my commander process forms

1145
00:41:26,810 --> 00:41:30,529
PowerShell and then spawns this process

1146
00:41:28,850 --> 00:41:34,509
called use be web server which spawns

1147
00:41:30,530 --> 00:41:36,770
Apache binaries for my temp folder and

1148
00:41:34,510 --> 00:41:38,840
caldera actually checks if it can reach

1149
00:41:36,770 --> 00:41:41,240
out to his web server it uses a read

1150
00:41:38,840 --> 00:41:43,730
dodgy PHP script to just execute random

1151
00:41:41,240 --> 00:41:46,160
commands they can then check if it X is

1152
00:41:43,730 --> 00:41:47,330
able to actual trade information so the

1153
00:41:46,160 --> 00:41:48,859
Box turned green so we know that was

1154
00:41:47,330 --> 00:41:50,360
successful bet you saw that happen in

1155
00:41:48,860 --> 00:41:53,180
like 2 seconds it was really really

1156
00:41:50,360 --> 00:41:55,340
quick right this is the final stage

1157
00:41:53,180 --> 00:41:56,930
should now tries to move laterally so it

1158
00:41:55,340 --> 00:41:58,490
creates a share on another host that it

1159
00:41:56,930 --> 00:42:01,370
found using one of the other actions and

1160
00:41:58,490 --> 00:42:03,109
then it copies the caldera process to

1161
00:42:01,370 --> 00:42:06,049
the other hosts which was also

1162
00:42:03,110 --> 00:42:08,090
successful so that's where it stops so

1163
00:42:06,050 --> 00:42:09,800
it now goes through the cleanup face and

1164
00:42:08,090 --> 00:42:12,140
as you'll see here all the files that

1165
00:42:09,800 --> 00:42:15,710
were created will now disappear

1166
00:42:12,140 --> 00:42:17,779
in a matter of time there we go so that

1167
00:42:15,710 --> 00:42:19,130
was it so this is how you can inkle Dera

1168
00:42:17,780 --> 00:42:21,700
emulate it and this is what it will look

1169
00:42:19,130 --> 00:42:24,890
like on your fix-it machine

1170
00:42:21,700 --> 00:42:26,230
so I just have this next slide just for

1171
00:42:24,890 --> 00:42:29,299
reference I'm not going to go through it

1172
00:42:26,230 --> 00:42:30,890
this one and what I go through like all

1173
00:42:29,300 --> 00:42:32,510
the actions and sort of like how which

1174
00:42:30,890 --> 00:42:33,740
actions rely on others and what tech

1175
00:42:32,510 --> 00:42:36,890
needs to be used right so we saw off the

1176
00:42:33,740 --> 00:42:40,399
station send it in Loeb in more little

1177
00:42:36,890 --> 00:42:42,230
bin saw masquerading yeah have a look at

1178
00:42:40,400 --> 00:42:44,480
is at home if you want to but just to

1179
00:42:42,230 --> 00:42:47,150
remind you that this is just not random

1180
00:42:44,480 --> 00:42:49,250
tests just firing random commands but

1181
00:42:47,150 --> 00:42:51,140
it's actually relying it's actually

1182
00:42:49,250 --> 00:42:53,060
thought about the order and it also

1183
00:42:51,140 --> 00:42:55,430
relies on past actions right so this one

1184
00:42:53,060 --> 00:42:56,840
can only run in action for successful

1185
00:42:55,430 --> 00:43:00,190
and for can only run if three was

1186
00:42:56,840 --> 00:43:03,170
successful so pretty cool stuff I think

1187
00:43:00,190 --> 00:43:05,570
but as I said this is just a start right

1188
00:43:03,170 --> 00:43:07,820
so now you have successfully emulated an

1189
00:43:05,570 --> 00:43:09,620
attack you have done what an attacker

1190
00:43:07,820 --> 00:43:11,510
would do but the challenges dig you

1191
00:43:09,620 --> 00:43:12,740
detect it right if you in this case

1192
00:43:11,510 --> 00:43:14,540
didn't stop it right because it was

1193
00:43:12,740 --> 00:43:16,759
successful but can you detect it at

1194
00:43:14,540 --> 00:43:18,830
least so this is an example of what that

1195
00:43:16,760 --> 00:43:21,260
might look like in your analytics

1196
00:43:18,830 --> 00:43:23,270
platforms this is mine so the challenge

1197
00:43:21,260 --> 00:43:24,590
now is to see what did I what did I find

1198
00:43:23,270 --> 00:43:27,080
what did I miss

1199
00:43:24,590 --> 00:43:28,520
can I improve it somehow so the example

1200
00:43:27,080 --> 00:43:30,200
I gave with the file names like maybe

1201
00:43:28,520 --> 00:43:33,200
you see that you're detecting the wrong

1202
00:43:30,200 --> 00:43:34,939
thing but can i improve it so it really

1203
00:43:33,200 --> 00:43:37,220
starts now only so this is all cool

1204
00:43:34,940 --> 00:43:38,450
stuff and as I said you can I will be

1205
00:43:37,220 --> 00:43:40,370
sharing the code so you can pretty much

1206
00:43:38,450 --> 00:43:43,720
do this yourself by installing it but

1207
00:43:40,370 --> 00:43:47,930
the big question is what did you see

1208
00:43:43,720 --> 00:43:49,520
right so I'm gonna wrap up so attacker

1209
00:43:47,930 --> 00:43:52,160
emulation going forward so I showed you

1210
00:43:49,520 --> 00:43:54,860
a lot of cool stuff and for me I think

1211
00:43:52,160 --> 00:43:56,720
my mind my vision will be that a lot of

1212
00:43:54,860 --> 00:43:58,220
people should look into this but not

1213
00:43:56,720 --> 00:44:01,069
only look into it and we also share

1214
00:43:58,220 --> 00:44:02,509
their work so to set an example I will

1215
00:44:01,070 --> 00:44:04,490
be sharing my code but I really hope

1216
00:44:02,510 --> 00:44:06,020
that other people well that the solution

1217
00:44:04,490 --> 00:44:07,819
you're using whether that's caldera one

1218
00:44:06,020 --> 00:44:09,200
of the others and that you share what

1219
00:44:07,820 --> 00:44:11,620
you're doing so other people can use it

1220
00:44:09,200 --> 00:44:13,549
and you don't have to reinvent the wheel

1221
00:44:11,620 --> 00:44:15,170
it would be great if you had like

1222
00:44:13,550 --> 00:44:16,790
modules you can share just like matters

1223
00:44:15,170 --> 00:44:18,500
flow and people could just sort of plug

1224
00:44:16,790 --> 00:44:20,270
in and with these five are pre and post

1225
00:44:18,500 --> 00:44:22,580
conditions you can just with minimal a

1226
00:44:20,270 --> 00:44:24,860
fluid emulate specific attackers right

1227
00:44:22,580 --> 00:44:25,460
imagine you could download like an apt

1228
00:44:24,860 --> 00:44:27,530
on

1229
00:44:25,460 --> 00:44:29,480
one two three profile you can run it and

1230
00:44:27,530 --> 00:44:31,010
just within seconds see what you can

1231
00:44:29,480 --> 00:44:33,619
detect I thought I think it will be

1232
00:44:31,010 --> 00:44:36,530
amazing and the industry-standard idea

1233
00:44:33,619 --> 00:44:38,990
so these tools are not cross tool

1234
00:44:36,530 --> 00:44:40,700
compatible so would be nice if you

1235
00:44:38,990 --> 00:44:42,470
somehow people come up with a profile

1236
00:44:40,700 --> 00:44:45,549
that all tools can accept me you can

1237
00:44:42,470 --> 00:44:47,660
just choose whatever tool you like

1238
00:44:45,550 --> 00:44:50,210
before I go through my final slide just

1239
00:44:47,660 --> 00:44:51,830
just a reminder as I said it's great it

1240
00:44:50,210 --> 00:44:54,320
can help you a lot but it's not a silver

1241
00:44:51,830 --> 00:44:55,970
bullet and it's going to help you see

1242
00:44:54,320 --> 00:44:58,070
that what you're doing as an impact but

1243
00:44:55,970 --> 00:44:59,810
it's not proof by no means right it's

1244
00:44:58,070 --> 00:45:02,270
just for yourself to see what you're

1245
00:44:59,810 --> 00:45:03,560
doing makes sense it's maybe to tell

1246
00:45:02,270 --> 00:45:06,170
others that what you're doing actually

1247
00:45:03,560 --> 00:45:08,240
has an impact but it's not gonna it is

1248
00:45:06,170 --> 00:45:12,050
this is not like a universal solution to

1249
00:45:08,240 --> 00:45:13,580
everything so I think it's my

1250
00:45:12,050 --> 00:45:14,780
penultimate slide so key takeaways I

1251
00:45:13,580 --> 00:45:16,549
really hope when you're back home you

1252
00:45:14,780 --> 00:45:18,470
think like what was this weird guy

1253
00:45:16,550 --> 00:45:20,690
rambling on about in the morning so for

1254
00:45:18,470 --> 00:45:23,330
things and psycho emulation helps you

1255
00:45:20,690 --> 00:45:25,130
not just understand the threats you're

1256
00:45:23,330 --> 00:45:27,650
facing but also your defenses are you

1257
00:45:25,130 --> 00:45:29,030
really looking for the right thing if

1258
00:45:27,650 --> 00:45:30,440
you do a tech emulation do it the right

1259
00:45:29,030 --> 00:45:32,450
way right make it as random as possible

1260
00:45:30,440 --> 00:45:34,550
make it as real as possible so you can

1261
00:45:32,450 --> 00:45:37,279
have actual results that give a good

1262
00:45:34,550 --> 00:45:39,380
idea of your the status of your defenses

1263
00:45:37,280 --> 00:45:41,450
it doesn't have to be difficult is all

1264
00:45:39,380 --> 00:45:42,800
the stuff I showed you is what I did but

1265
00:45:41,450 --> 00:45:44,149
you can just reuse that you don't have

1266
00:45:42,800 --> 00:45:47,030
to do it yourself so it doesn't have to

1267
00:45:44,150 --> 00:45:48,740
be difficult and as I said community

1268
00:45:47,030 --> 00:45:50,630
based sharing I really hope that some of

1269
00:45:48,740 --> 00:45:53,330
you are inspired and that you all be

1270
00:45:50,630 --> 00:45:54,700
sharing yours work so we can all see

1271
00:45:53,330 --> 00:45:57,799
what you what you were doing

1272
00:45:54,700 --> 00:45:59,240
so both the slides and the code can be

1273
00:45:57,800 --> 00:46:02,480
found on my github page get up with

1274
00:45:59,240 --> 00:46:03,979
Carlos pizza any feedback or whatever

1275
00:46:02,480 --> 00:46:05,990
use follow me on Twitter

1276
00:46:03,980 --> 00:46:08,030
shoot me a message or send me an email

1277
00:46:05,990 --> 00:46:12,319
you can also just find me during the

1278
00:46:08,030 --> 00:46:15,919
break and another chat thank you

1279
00:46:12,320 --> 00:46:15,919
[Applause]

