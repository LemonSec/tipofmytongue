1
00:00:00,000 --> 00:00:08,730
thank you<font color="#CCCCCC"> all right so my name is Rob my</font>

2
00:00:06,750 --> 00:00:12,000
handle is<font color="#CCCCCC"> boot</font><font color="#E5E5E5"> Cano's which means</font>

3
00:00:08,730 --> 00:00:13,740
duckbill platypus in Russian and today

4
00:00:12,000 --> 00:00:16,079
I'm<font color="#CCCCCC"> going to be</font><font color="#E5E5E5"> talking about open</font>

5
00:00:13,740 --> 00:00:18,300
source malware labs and how to automate

6
00:00:16,079 --> 00:00:20,909
them and how to connect different

7
00:00:18,300 --> 00:00:22,500
components together and also<font color="#E5E5E5"> how to use</font>

8
00:00:20,910 --> 00:00:29,550
some<font color="#CCCCCC"> of the components that that</font><font color="#E5E5E5"> I'm</font>

9
00:00:22,500 --> 00:00:33,180
going<font color="#E5E5E5"> to talk about so who am i next</font>

10
00:00:29,550 --> 00:00:34,860
slot there we go<font color="#E5E5E5"> all right I'm the</font>

11
00:00:33,180 --> 00:00:38,300
director of research innovation a threat

12
00:00:34,860 --> 00:00:41,850
connect and I run the innovation team

13
00:00:38,300 --> 00:00:43,890
component of the research team and we're

14
00:00:41,850 --> 00:00:47,579
responsible<font color="#E5E5E5"> for finding new ways to</font>

15
00:00:43,890 --> 00:00:51,890
analyze malware and analyze threats and

16
00:00:47,579 --> 00:00:55,920
come up with innovative ways to protect

17
00:00:51,890 --> 00:00:57,780
organizations so why do<font color="#E5E5E5"> you need a</font>

18
00:00:55,920 --> 00:00:59,520
malware analysis lab so there's a number

19
00:00:57,780 --> 00:01:02,399
<font color="#CCCCCC">of different reasons</font><font color="#E5E5E5"> why you might need</font>

20
00:00:59,520 --> 00:01:04,320
a malware analysis<font color="#E5E5E5"> lab and what I want</font>

21
00:01:02,399 --> 00:01:08,729
to show you on the right side this<font color="#CCCCCC"> is</font>

22
00:01:04,319 --> 00:01:11,130
from<font color="#CCCCCC"> lenny's ulcers forensics 610 class</font>

23
00:01:08,729 --> 00:01:14,549
this<font color="#CCCCCC"> is a graphic from</font><font color="#E5E5E5"> that and it</font>

24
00:01:11,130 --> 00:01:18,089
describes the different stages of

25
00:01:14,549 --> 00:01:20,880
malware<font color="#E5E5E5"> analysis and in increasing</font>

26
00:01:18,090 --> 00:01:22,619
difficulty so fully automated malware

27
00:01:20,880 --> 00:01:25,439
analysis is at the bottom and then you

28
00:01:22,619 --> 00:01:29,159
have static analysis<font color="#E5E5E5"> and then the</font><font color="#CCCCCC"> next</font>

29
00:01:25,439 --> 00:01:31,529
step up is interactive malware analysis

30
00:01:29,159 --> 00:01:34,979
and then the top most difficult part is

31
00:01:31,530 --> 00:01:36,689
full reverse engineering to know the

32
00:01:34,979 --> 00:01:39,689
capabilities in looking at the code

33
00:01:36,689 --> 00:01:42,449
itself so what we're going to talk about

34
00:01:39,689 --> 00:01:45,270
today<font color="#E5E5E5"> is the bottom two so these are the</font>

35
00:01:42,450 --> 00:01:47,369
easiest these are the easiest of the the

36
00:01:45,270 --> 00:01:48,750
malware analysis stages but these are

37
00:01:47,369 --> 00:01:53,549
also<font color="#E5E5E5"> the ones that are ripe for</font>

38
00:01:48,750 --> 00:01:55,290
automation so one of the main reasons

39
00:01:53,549 --> 00:01:56,790
you would need an automated malware

40
00:01:55,290 --> 00:01:59,159
analysis<font color="#E5E5E5"> lab and this is the thing</font><font color="#CCCCCC"> that</font>

41
00:01:56,790 --> 00:02:01,740
I do is malware research so consuming

42
00:01:59,159 --> 00:02:05,960
files from a lot of<font color="#CCCCCC"> different</font><font color="#E5E5E5"> locations</font>

43
00:02:01,740 --> 00:02:08,068
and consuming different feeds and then

44
00:02:05,960 --> 00:02:08,410
analyzing them in an automated way and

45
00:02:08,068 --> 00:02:12,070
look

46
00:02:08,410 --> 00:02:16,690
for you know c2 and and other<font color="#CCCCCC"> features</font>

47
00:02:12,070 --> 00:02:18,730
of<font color="#E5E5E5"> malware in volume also if you have a</font>

48
00:02:16,690 --> 00:02:22,079
<font color="#CCCCCC">one-off if you need to research one</font>

49
00:02:18,730 --> 00:02:24,369
particular file this works as well so

50
00:02:22,080 --> 00:02:25,840
you also can enhance your threat

51
00:02:24,370 --> 00:02:28,270
intelligence so if you have a threat

52
00:02:25,840 --> 00:02:30,670
intelligence program you can analyze

53
00:02:28,270 --> 00:02:33,100
malware from infirm<font color="#CCCCCC"> Incident Response</font>

54
00:02:30,670 --> 00:02:35,589
<font color="#CCCCCC">Teams you can also analyze malware</font>

55
00:02:33,100 --> 00:02:38,109
that's found from hunt teams and then

56
00:02:35,590 --> 00:02:39,850
it's also one of the basic pieces of

57
00:02:38,110 --> 00:02:42,240
automated malware analysis is<font color="#E5E5E5"> network</font>

58
00:02:39,850 --> 00:02:44,560
defense so it would need<font color="#E5E5E5"> to have a</font>

59
00:02:42,240 --> 00:02:48,280
automated malware<font color="#CCCCCC"> analysis system it's</font>

60
00:02:44,560 --> 00:02:51,040
pulling files from network intrusion

61
00:02:48,280 --> 00:02:52,450
detection systems such as bro and

62
00:02:51,040 --> 00:02:55,929
actually we'll talk about<font color="#E5E5E5"> bro in a</font>

63
00:02:52,450 --> 00:02:58,420
little bit but from network traffic you

64
00:02:55,930 --> 00:03:00,310
also have email attachments and then

65
00:02:58,420 --> 00:03:02,890
some host-based intrusion detection

66
00:03:00,310 --> 00:03:06,300
systems will pick a file that has been

67
00:03:02,890 --> 00:03:09,070
identified as<font color="#CCCCCC"> either suspicious or</font>

68
00:03:06,300 --> 00:03:11,590
hasn't been seen before and then they

69
00:03:09,070 --> 00:03:13,600
will send that in to the central either

70
00:03:11,590 --> 00:03:15,820
a sim or somewhere else and<font color="#CCCCCC"> then from</font>

71
00:03:13,600 --> 00:03:17,980
<font color="#CCCCCC">there that file</font><font color="#E5E5E5"> would need to be</font>

72
00:03:15,820 --> 00:03:20,260
analyzed and so an<font color="#E5E5E5"> AMA is the way you</font>

73
00:03:17,980 --> 00:03:22,179
would analyze it and then finally<font color="#CCCCCC"> this</font>

74
00:03:20,260 --> 00:03:23,890
<font color="#CCCCCC">is the main reason I like it is it's a</font>

75
00:03:22,180 --> 00:03:28,990
lot<font color="#CCCCCC"> of fun malware analysis really</font>

76
00:03:23,890 --> 00:03:31,029
awesome so<font color="#CCCCCC"> I'm going to focus on for</font>

77
00:03:28,990 --> 00:03:32,890
entry points in the malware analysis

78
00:03:31,030 --> 00:03:35,470
process there's a<font color="#E5E5E5"> lot more than this</font>

79
00:03:32,890 --> 00:03:38,589
there's many places you can begin a

80
00:03:35,470 --> 00:03:40,600
malware analysis process but what I

81
00:03:38,590 --> 00:03:43,810
wanted to do is narrow it down to the

82
00:03:40,600 --> 00:03:45,640
four major look the four major ways that

83
00:03:43,810 --> 00:03:49,050
you can enter a malware<font color="#E5E5E5"> analysis process</font>

84
00:03:45,640 --> 00:03:52,450
so you have a file so a file can be any

85
00:03:49,050 --> 00:03:57,730
executable file it could be a flash file

86
00:03:52,450 --> 00:04:00,549
it can be a java jar it could be a word

87
00:03:57,730 --> 00:04:02,560
document it could be a PDF basically

88
00:04:00,550 --> 00:04:07,150
anything that you anything<font color="#CCCCCC"> that can</font>

89
00:04:02,560 --> 00:04:09,310
execute code or through an exploit also

90
00:04:07,150 --> 00:04:13,030
execute code on a workstation or server

91
00:04:09,310 --> 00:04:15,010
so those files are the first first entry

92
00:04:13,030 --> 00:04:17,950
point that i'm<font color="#E5E5E5"> going to talk about</font><font color="#CCCCCC"> the</font>

93
00:04:15,010 --> 00:04:22,120
second entry point is a URL and so when

94
00:04:17,950 --> 00:04:23,500
I<font color="#CCCCCC"> talk about URLs there's two just</font><font color="#E5E5E5"> basic</font>

95
00:04:22,120 --> 00:04:25,870
rays of<font color="#E5E5E5"> URL that we're going to talk</font>

96
00:04:23,500 --> 00:04:27,610
about with regards to malware analysis

97
00:04:25,870 --> 00:04:30,690
there's a lot<font color="#CCCCCC"> more if you're going</font><font color="#E5E5E5"> to</font>

98
00:04:27,610 --> 00:04:32,740
talk about fishing and you know

99
00:04:30,690 --> 00:04:35,380
credential drops and things like that

100
00:04:32,740 --> 00:04:37,570
but<font color="#E5E5E5"> what we're going to talk about right</font>

101
00:04:35,380 --> 00:04:40,360
now is basically malware download<font color="#E5E5E5"> URLs</font>

102
00:04:37,570 --> 00:04:43,120
and then drive-bys and a drive-by is

103
00:04:40,360 --> 00:04:47,110
where there is some form of exploit and

104
00:04:43,120 --> 00:04:49,090
the user visits the visits this URL and

105
00:04:47,110 --> 00:04:51,400
then<font color="#E5E5E5"> a payload is delivered without</font>

106
00:04:49,090 --> 00:04:52,840
their knowledge sometimes some of<font color="#CCCCCC"> the</font>

107
00:04:51,400 --> 00:04:54,280
exploits are a little bit<font color="#E5E5E5"> better and it</font>

108
00:04:52,840 --> 00:04:57,219
won't crash the browser and they won't

109
00:04:54,280 --> 00:04:58,780
notice but many<font color="#E5E5E5"> of the drive-by drive-by</font>

110
00:04:57,220 --> 00:05:01,690
downloads it might crash your browser

111
00:04:58,780 --> 00:05:04,690
but either way malicious code has been

112
00:05:01,690 --> 00:05:06,610
<font color="#E5E5E5">delivered without any user interaction</font>

113
00:05:04,690 --> 00:05:08,949
you know the user hasn't said yes to

114
00:05:06,610 --> 00:05:11,199
download something they haven't run

115
00:05:08,949 --> 00:05:15,610
something they've<font color="#E5E5E5"> just visited a URL</font>

116
00:05:11,199 --> 00:05:17,650
typically it's buried in a an email and

117
00:05:15,610 --> 00:05:20,470
<font color="#CCCCCC">you know a phishing email and they may</font>

118
00:05:17,650 --> 00:05:22,900
click a URL<font color="#E5E5E5"> that looks like you know a</font>

119
00:05:20,470 --> 00:05:25,300
linkedin request or something like this

120
00:05:22,900 --> 00:05:26,770
so these are another entry point to the

121
00:05:25,300 --> 00:05:29,800
malware analysis process that we're

122
00:05:26,770 --> 00:05:32,260
going<font color="#CCCCCC"> to talk about and then the</font><font color="#E5E5E5"> last</font>

123
00:05:29,800 --> 00:05:34,210
two maybe a little bit less obvious but

124
00:05:32,260 --> 00:05:37,710
these are really rich ways that you can

125
00:05:34,210 --> 00:05:41,289
get more<font color="#E5E5E5"> information about malware so</font>

126
00:05:37,710 --> 00:05:43,030
the first<font color="#E5E5E5"> of them is a pcap and soapy</font>

127
00:05:41,289 --> 00:05:45,039
cap is a packet capture this is

128
00:05:43,030 --> 00:05:48,400
basically a recording of network traffic

129
00:05:45,039 --> 00:05:50,650
between two points in time and so from

130
00:05:48,400 --> 00:05:53,198
that network traffic you<font color="#CCCCCC"> can learn a lot</font>

131
00:05:50,650 --> 00:05:55,810
about the malware and what it you know

132
00:05:53,199 --> 00:05:58,990
what<font color="#E5E5E5"> it's saying what it's doing and</font>

133
00:05:55,810 --> 00:06:01,449
finally a memory image and so a memory

134
00:05:58,990 --> 00:06:04,270
image is exactly that it's an image of

135
00:06:01,449 --> 00:06:06,490
all of the volatile<font color="#CCCCCC"> RAM captured at one</font>

136
00:06:04,270 --> 00:06:09,039
point in<font color="#CCCCCC"> time off of a workstation or a</font>

137
00:06:06,490 --> 00:06:11,349
virtual machine and<font color="#E5E5E5"> from</font><font color="#CCCCCC"> that memory</font>

138
00:06:09,039 --> 00:06:14,110
image you can also learn a lot you can

139
00:06:11,349 --> 00:06:16,030
learn a<font color="#E5E5E5"> lot about what the malware I</font>

140
00:06:14,110 --> 00:06:17,680
like<font color="#E5E5E5"> to say the memory image is what you</font>

141
00:06:16,030 --> 00:06:20,229
you can learn what the malware is

142
00:06:17,680 --> 00:06:24,849
thinking and the pcap is where you learn

143
00:06:20,229 --> 00:06:28,810
what the malware is saying so to to

144
00:06:24,849 --> 00:06:31,390
analyze these four types of data we're

145
00:06:28,810 --> 00:06:33,940
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to look at for open source tools</font>

146
00:06:31,390 --> 00:06:36,340
all of these are publicly available each

147
00:06:33,940 --> 00:06:38,830
one you can download and install

148
00:06:36,340 --> 00:06:40,840
and also contact<font color="#E5E5E5"> me after this if you</font>

149
00:06:38,830 --> 00:06:43,000
need<font color="#CCCCCC"> help installing these or if you</font>

150
00:06:40,840 --> 00:06:45,820
<font color="#E5E5E5">need to learn</font><font color="#CCCCCC"> more about them I can</font>

151
00:06:43,000 --> 00:06:48,310
point you in the right direction so coo

152
00:06:45,820 --> 00:06:51,520
coo sandbox is a automated malware

153
00:06:48,310 --> 00:06:52,960
<font color="#E5E5E5">analysis system I know many of you that</font>

154
00:06:51,520 --> 00:06:55,359
have used cuckoo you're going to say

155
00:06:52,960 --> 00:06:57,520
well cuckoo includes volatility but

156
00:06:55,360 --> 00:06:59,050
there's a nuance with volatility and

157
00:06:57,520 --> 00:07:02,320
cuckoo that I'll talk about in a<font color="#E5E5E5"> little</font>

158
00:06:59,050 --> 00:07:04,690
bit but the second one<font color="#CCCCCC"> is thug and thug</font>

159
00:07:02,320 --> 00:07:07,000
is a low interaction honey client so

160
00:07:04,690 --> 00:07:09,310
this is<font color="#CCCCCC"> what you would use to visit a</font>

161
00:07:07,000 --> 00:07:11,650
malware download URL to capture that

162
00:07:09,310 --> 00:07:14,320
<font color="#E5E5E5">piece</font><font color="#CCCCCC"> of malware or to visit a drive-by</font>

163
00:07:11,650 --> 00:07:16,979
and<font color="#E5E5E5"> hopefully trigger the drive-by</font>

164
00:07:14,320 --> 00:07:19,540
exploit and then capture<font color="#CCCCCC"> the payload and</font>

165
00:07:16,979 --> 00:07:23,169
then bro<font color="#E5E5E5"> bros and network security</font>

166
00:07:19,540 --> 00:07:25,690
monitoring tool and many of you may be

167
00:07:23,169 --> 00:07:28,120
familiar with bro but we are not<font color="#E5E5E5"> going</font>

168
00:07:25,690 --> 00:07:30,729
to<font color="#CCCCCC"> use bro in the way that you typically</font>

169
00:07:28,120 --> 00:07:32,740
use bro you<font color="#E5E5E5"> probably use bros and</font>

170
00:07:30,729 --> 00:07:34,060
network security monitoring tool we're

171
00:07:32,740 --> 00:07:36,039
going to use it as a malware analysis

172
00:07:34,060 --> 00:07:38,970
<font color="#E5E5E5">tool and these two things are slightly</font>

173
00:07:36,039 --> 00:07:43,510
different<font color="#E5E5E5"> and you'll see why soon so</font>

174
00:07:38,970 --> 00:07:46,180
volatility is a memory analyzer it's

175
00:07:43,510 --> 00:07:50,560
built in<font color="#CCCCCC"> python and it analyzes memory</font>

176
00:07:46,180 --> 00:07:52,870
looking for a variety of indicators so

177
00:07:50,560 --> 00:07:54,970
you can find things that are different

178
00:07:52,870 --> 00:07:56,770
you can also extract information from

179
00:07:54,970 --> 00:07:59,410
memory and we'll talk about that in a

180
00:07:56,770 --> 00:08:01,510
moment as<font color="#E5E5E5"> well so the first thing we're</font>

181
00:07:59,410 --> 00:08:03,789
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> talk about is cuckoo sandbox oh</font>

182
00:08:01,510 --> 00:08:07,479
coo coo sandbox provides static and

183
00:08:03,789 --> 00:08:09,610
dynamic malware analysis and this is

184
00:08:07,479 --> 00:08:13,330
this is just a screen capture of one of

185
00:08:09,610 --> 00:08:15,039
my cuckoo sandbox instances and if

186
00:08:13,330 --> 00:08:17,409
you're not familiar with<font color="#CCCCCC"> the sandbox a</font>

187
00:08:15,039 --> 00:08:18,820
sandbox<font color="#CCCCCC"> offers</font><font color="#E5E5E5"> you a controlled</font>

188
00:08:17,410 --> 00:08:22,450
environment where you<font color="#E5E5E5"> can detonate</font>

189
00:08:18,820 --> 00:08:25,780
malware safely<font color="#CCCCCC"> I would</font><font color="#E5E5E5"> recommend that</font>

190
00:08:22,450 --> 00:08:28,659
you put your your malware sandbox off of

191
00:08:25,780 --> 00:08:30,429
your own network isolated completely I

192
00:08:28,660 --> 00:08:32,919
know some people<font color="#CCCCCC"> who have begun using</font>

193
00:08:30,430 --> 00:08:34,870
<font color="#E5E5E5">about cuckoo they've downloaded it and</font>

194
00:08:32,919 --> 00:08:36,880
loaded on their laptop and then all of a

195
00:08:34,870 --> 00:08:39,520
sudden<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know they've got see two</font>

196
00:08:36,880 --> 00:08:41,200
callbacks coming from their home IP

197
00:08:39,520 --> 00:08:44,319
address so you know make sure<font color="#E5E5E5"> that you</font>

198
00:08:41,200 --> 00:08:46,790
separate your malware sandbox from your

199
00:08:44,320 --> 00:08:48,650
own network and when you begin the

200
00:08:46,790 --> 00:08:50,449
a good way to begin is actually to have

201
00:08:48,650 --> 00:08:53,120
a closed<font color="#CCCCCC"> Network and just observe them</font>

202
00:08:50,450 --> 00:08:56,870
our traffic without having<font color="#E5E5E5"> it reach out</font>

203
00:08:53,120 --> 00:08:59,030
<font color="#E5E5E5">to the</font><font color="#CCCCCC"> Internet so this is a place where</font>

204
00:08:56,870 --> 00:09:02,630
you can also get static<font color="#E5E5E5"> analysis</font>

205
00:08:59,030 --> 00:09:04,970
<font color="#CCCCCC">technique so static analysis</font><font color="#E5E5E5"> basically</font>

206
00:09:02,630 --> 00:09:08,689
comes for free because static<font color="#E5E5E5"> analysis</font>

207
00:09:04,970 --> 00:09:11,270
does not take as much resources as

208
00:09:08,690 --> 00:09:12,890
dynamic analysis does so dynamic

209
00:09:11,270 --> 00:09:16,160
analysis you're actually running the

210
00:09:12,890 --> 00:09:18,530
malware in a vm<font color="#E5E5E5"> for</font><font color="#CCCCCC"> 5 minutes 10 minutes</font>

211
00:09:16,160 --> 00:09:20,420
or some amount of time and so running<font color="#E5E5E5"> an</font>

212
00:09:18,530 --> 00:09:22,910
entire operating system even<font color="#E5E5E5"> if you're</font>

213
00:09:20,420 --> 00:09:26,660
emulating it that is a resource

214
00:09:22,910 --> 00:09:29,630
intensive process and so to look at

215
00:09:26,660 --> 00:09:32,329
certain<font color="#E5E5E5"> static analysis features in</font>

216
00:09:29,630 --> 00:09:34,939
static features in malware that takes a

217
00:09:32,330 --> 00:09:37,780
very short<font color="#CCCCCC"> period of time so it's you</font>

218
00:09:34,940 --> 00:09:40,040
<font color="#CCCCCC">know you there's no additional time for</font>

219
00:09:37,780 --> 00:09:43,069
<font color="#E5E5E5">looking for strings and things like that</font>

220
00:09:40,040 --> 00:09:47,270
<font color="#CCCCCC">so it basically get it for free with</font>

221
00:09:43,070 --> 00:09:50,030
cuckoo so<font color="#E5E5E5"> I know everyone wanted to see</font>

222
00:09:47,270 --> 00:09:52,400
<font color="#CCCCCC">something as long as a dynamic analysis</font>

223
00:09:50,030 --> 00:09:54,920
but you know what dynamic analysis is

224
00:09:52,400 --> 00:09:57,680
<font color="#CCCCCC">very obvious what you use it for so</font>

225
00:09:54,920 --> 00:10:00,020
dynamic analysis you run the malware it

226
00:09:57,680 --> 00:10:02,810
calls back to an IP<font color="#CCCCCC"> address or a domain</font>

227
00:10:00,020 --> 00:10:04,460
name or<font color="#E5E5E5"> a URL and then communicates with</font>

228
00:10:02,810 --> 00:10:06,910
its command and control structure and

229
00:10:04,460 --> 00:10:09,470
then you capture those indicators of

230
00:10:06,910 --> 00:10:12,110
where it's calling back<font color="#CCCCCC"> to you that's</font>

231
00:10:09,470 --> 00:10:15,740
pretty<font color="#CCCCCC"> obvious if you</font><font color="#E5E5E5"> ask me so I wanted</font>

232
00:10:12,110 --> 00:10:17,690
<font color="#CCCCCC">to focus more on static analysis</font>

233
00:10:15,740 --> 00:10:21,470
techniques that you can use<font color="#CCCCCC"> to get stuff</font>

234
00:10:17,690 --> 00:10:23,330
from cuckoo that can shortcut your

235
00:10:21,470 --> 00:10:27,140
analysis process these are things that

236
00:10:23,330 --> 00:10:29,420
can assist you<font color="#CCCCCC"> with kind</font><font color="#E5E5E5"> of looking</font>

237
00:10:27,140 --> 00:10:34,180
around later in your analysis process so

238
00:10:29,420 --> 00:10:37,670
one<font color="#CCCCCC"> of them this is a sample</font><font color="#E5E5E5"> of Mac OS</font>

239
00:10:34,180 --> 00:10:40,910
ransomware this is called key<font color="#CCCCCC"> Ranger and</font>

240
00:10:37,670 --> 00:10:42,890
so I ran it through coo coo sandbox and

241
00:10:40,910 --> 00:10:46,430
got back to got back some information

242
00:10:42,890 --> 00:10:49,040
<font color="#CCCCCC">and so one of the things when you're</font>

243
00:10:46,430 --> 00:10:51,920
doing those later more<font color="#E5E5E5"> difficult stages</font>

244
00:10:49,040 --> 00:10:54,079
of malware analysis is you need<font color="#CCCCCC"> to</font>

245
00:10:51,920 --> 00:10:57,500
reverse<font color="#E5E5E5"> engineer the malware and get the</font>

246
00:10:54,080 --> 00:10:58,860
assembly code from it so to do that you

247
00:10:57,500 --> 00:11:00,720
have to run

248
00:10:58,860 --> 00:11:03,710
through whatever<font color="#CCCCCC"> Packer it was packed</font>

249
00:11:00,720 --> 00:11:07,860
with and so sometimes you need you can

250
00:11:03,710 --> 00:11:11,550
either ways to detect the packer also

251
00:11:07,860 --> 00:11:14,430
like you see here<font color="#E5E5E5"> I ran strings and it</font>

252
00:11:11,550 --> 00:11:17,550
shows what<font color="#CCCCCC"> packard this was what Packer</font>

253
00:11:14,430 --> 00:11:20,219
was<font color="#E5E5E5"> used and then also which version so</font>

254
00:11:17,550 --> 00:11:21,750
this can actually be forged I mean I

255
00:11:20,220 --> 00:11:24,390
could go in there with the hex editor

256
00:11:21,750 --> 00:11:26,790
and change this but malware authors are

257
00:11:24,390 --> 00:11:29,640
typically lazy and so this<font color="#CCCCCC"> is probably</font>

258
00:11:26,790 --> 00:11:32,030
the true version of upx so now<font color="#E5E5E5"> I know</font>

259
00:11:29,640 --> 00:11:35,400
which upx version to use to unpack it

260
00:11:32,030 --> 00:11:38,310
and so I<font color="#E5E5E5"> don't need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> go figure out</font>

261
00:11:35,400 --> 00:11:40,380
which one to use here you have a vida

262
00:11:38,310 --> 00:11:43,260
tection so for every file that you

263
00:11:40,380 --> 00:11:46,560
submit you can also submit it to a<font color="#E5E5E5"> navy</font>

264
00:11:43,260 --> 00:11:48,290
scanner bank and so these are AV

265
00:11:46,560 --> 00:11:50,969
detections that you get<font color="#E5E5E5"> back from it and</font>

266
00:11:48,290 --> 00:11:53,760
these sometimes you'll see something

267
00:11:50,970 --> 00:11:56,790
<font color="#E5E5E5">that's a very generic detection such as</font>

268
00:11:53,760 --> 00:11:59,430
the kaspersky detection but also ESET

269
00:11:56,790 --> 00:12:01,949
and trend micro they have actually<font color="#E5E5E5"> got a</font>

270
00:11:59,430 --> 00:12:04,050
very specific signature for key<font color="#E5E5E5"> Ranger a</font>

271
00:12:01,950 --> 00:12:06,990
and so they tell you this is key Ranger

272
00:12:04,050 --> 00:12:10,589
a and<font color="#E5E5E5"> because i saw to AVS that said the</font>

273
00:12:06,990 --> 00:12:13,950
same thing it's more more likely that

274
00:12:10,590 --> 00:12:15,570
this is correct or<font color="#CCCCCC"> i mean the other</font>

275
00:12:13,950 --> 00:12:17,190
<font color="#CCCCCC">thing is</font><font color="#E5E5E5"> they share signatures so they</font>

276
00:12:15,570 --> 00:12:20,490
share the same bad signature but at

277
00:12:17,190 --> 00:12:23,070
least<font color="#CCCCCC"> i have some idea of what this is</font>

278
00:12:20,490 --> 00:12:25,770
and so instead<font color="#CCCCCC"> of just fumbling around</font>

279
00:12:23,070 --> 00:12:28,320
looking<font color="#E5E5E5"> at the malware</font><font color="#CCCCCC"> i can actually go</font>

280
00:12:25,770 --> 00:12:30,090
to google and get a shortcut and see if

281
00:12:28,320 --> 00:12:31,530
anyone<font color="#E5E5E5"> else has begun reverse</font>

282
00:12:30,090 --> 00:12:34,130
engineering this malware it has

283
00:12:31,530 --> 00:12:37,050
information that<font color="#E5E5E5"> i can start with</font>

284
00:12:34,130 --> 00:12:38,340
because if you if you've<font color="#CCCCCC"> been hit with</font>

285
00:12:37,050 --> 00:12:40,410
something and you're on an incident

286
00:12:38,340 --> 00:12:43,020
response team time is of the essence and

287
00:12:40,410 --> 00:12:44,699
if cheating if it means cheating and

288
00:12:43,020 --> 00:12:47,490
going to<font color="#E5E5E5"> google and finding someone</font>

289
00:12:44,700 --> 00:12:52,290
else's<font color="#CCCCCC"> work and using</font><font color="#E5E5E5"> it all by all</font>

290
00:12:47,490 --> 00:12:54,150
means please do so the<font color="#E5E5E5"> next part is this</font>

291
00:12:52,290 --> 00:12:57,390
<font color="#E5E5E5">is actually</font><font color="#CCCCCC"> a different malware sample</font>

292
00:12:54,150 --> 00:13:01,140
as you can see these are PE specific

293
00:12:57,390 --> 00:13:05,430
portable executable<font color="#CCCCCC"> microsoft windows</font>

294
00:13:01,140 --> 00:13:08,189
specific components of a file and so

295
00:13:05,430 --> 00:13:10,739
I've run this through cuckoo again and

296
00:13:08,190 --> 00:13:14,010
gotten back a few interesting things

297
00:13:10,740 --> 00:13:17,160
so if you take these sections and this

298
00:13:14,010 --> 00:13:20,100
is the dot r sr c section and take the

299
00:13:17,160 --> 00:13:22,079
md5 of this and then when you take when

300
00:13:20,100 --> 00:13:25,290
you take the hash values of the sections

301
00:13:22,080 --> 00:13:27,810
in a piece of malware you can find

302
00:13:25,290 --> 00:13:30,510
related malware that uses that same

303
00:13:27,810 --> 00:13:33,660
section and so you can set up kind of

304
00:13:30,510 --> 00:13:37,529
families of malware that are potentially

305
00:13:33,660 --> 00:13:40,740
related and so this<font color="#E5E5E5"> is actually the md5</font>

306
00:13:37,529 --> 00:13:42,720
that<font color="#E5E5E5"> I use to search in virus</font><font color="#CCCCCC"> Soto for</font>

307
00:13:40,740 --> 00:13:46,020
other files that are related to this

308
00:13:42,720 --> 00:13:50,190
particular PE file and I found<font color="#E5E5E5"> 52 other</font>

309
00:13:46,020 --> 00:13:51,990
files so now I have a you know a group

310
00:13:50,190 --> 00:13:54,180
of files that i can<font color="#E5E5E5"> send all of them</font>

311
00:13:51,990 --> 00:13:56,790
through my automated male or analysis

312
00:13:54,180 --> 00:13:58,620
system and then<font color="#CCCCCC"> i can take features</font><font color="#E5E5E5"> and</font>

313
00:13:56,790 --> 00:14:00,000
say well this one's a false positive<font color="#E5E5E5"> i</font>

314
00:13:58,620 --> 00:14:03,270
don't think<font color="#E5E5E5"> this one is actually related</font>

315
00:14:00,000 --> 00:14:06,750
but this set is related and then from

316
00:14:03,270 --> 00:14:09,540
<font color="#CCCCCC">there I can gather maybe not</font><font color="#E5E5E5"> just one</font>

317
00:14:06,750 --> 00:14:12,209
see to address now<font color="#E5E5E5"> I have a set of</font><font color="#CCCCCC"> c2</font>

318
00:14:09,540 --> 00:14:15,089
<font color="#E5E5E5">addresses I have a set of domain names</font>

319
00:14:12,209 --> 00:14:17,430
that I can now watch for IP changes and

320
00:14:15,089 --> 00:14:19,620
I can look for other patterns that I can

321
00:14:17,430 --> 00:14:21,149
find more information about the

322
00:14:19,620 --> 00:14:25,079
adversary that might be running<font color="#E5E5E5"> this</font>

323
00:14:21,149 --> 00:14:28,860
particular attack so in the same way as

324
00:14:25,079 --> 00:14:31,399
sections and I apologize this<font color="#E5E5E5"> one it ran</font>

325
00:14:28,860 --> 00:14:34,740
over this is a Boop sorry<font color="#E5E5E5"> this is a</font>

326
00:14:31,399 --> 00:14:38,550
<font color="#CCCCCC">sha256 under the RT version and it ran</font>

327
00:14:34,740 --> 00:14:41,790
to two lines just very long but so this

328
00:14:38,550 --> 00:14:45,060
is<font color="#CCCCCC"> a resource in the PE file RT</font>

329
00:14:41,790 --> 00:14:47,339
underscore version and so I found by

330
00:14:45,060 --> 00:14:50,189
running this through the<font color="#E5E5E5"> virus total</font>

331
00:14:47,339 --> 00:14:53,940
database I<font color="#E5E5E5"> found 99 other files that are</font>

332
00:14:50,190 --> 00:14:56,370
related and used this same the same RT

333
00:14:53,940 --> 00:14:59,399
version resource so then I can take

334
00:14:56,370 --> 00:15:00,660
those 99 combined it with<font color="#E5E5E5"> the 52 there</font>

335
00:14:59,399 --> 00:15:03,360
is<font color="#E5E5E5"> actually a lot of overlap between</font>

336
00:15:00,660 --> 00:15:05,189
those two groups of files and now I have

337
00:15:03,360 --> 00:15:07,320
an even larger set of files that i can

338
00:15:05,190 --> 00:15:09,270
<font color="#E5E5E5">analyze and find more information about</font>

339
00:15:07,320 --> 00:15:12,750
what's happening<font color="#CCCCCC"> to me</font><font color="#E5E5E5"> in this</font>

340
00:15:09,270 --> 00:15:15,449
particular file that<font color="#CCCCCC"> i found now this</font>

341
00:15:12,750 --> 00:15:17,180
<font color="#E5E5E5">last one this is this is a really</font>

342
00:15:15,450 --> 00:15:21,930
<font color="#CCCCCC">awesome technique by the way this is</font>

343
00:15:17,180 --> 00:15:24,089
very very awesome so every PE file has

344
00:15:21,930 --> 00:15:26,309
the has a field

345
00:15:24,089 --> 00:15:28,019
it's not always filled out some some

346
00:15:26,309 --> 00:15:30,360
malware authors will just<font color="#E5E5E5"> zero it out</font>

347
00:15:28,019 --> 00:15:34,319
and it'll say you know January first

348
00:15:30,360 --> 00:15:37,110
nineteen seventy but the this is<font color="#CCCCCC"> the</font>

349
00:15:34,319 --> 00:15:39,660
compile and Link time of the file and so

350
00:15:37,110 --> 00:15:41,850
what you can do is if<font color="#E5E5E5"> they didn't adjust</font>

351
00:15:39,660 --> 00:15:45,329
this if they have their clock set

352
00:15:41,850 --> 00:15:47,370
correctly you can<font color="#E5E5E5"> then compare this to</font>

353
00:15:45,329 --> 00:15:50,008
the time<font color="#CCCCCC"> that it was submitted to</font>

354
00:15:47,370 --> 00:15:53,519
virustotal or submitted to malware or

355
00:15:50,009 --> 00:15:55,110
submit it to whatever public sandbox or

356
00:15:53,519 --> 00:15:58,889
place that you've got thats collecting

357
00:15:55,110 --> 00:16:02,100
the data and so as you can see this was

358
00:15:58,889 --> 00:16:03,629
compiled in linked at<font color="#CCCCCC"> 9 41</font><font color="#E5E5E5"> and 34</font>

359
00:16:02,100 --> 00:16:08,610
seconds and then<font color="#E5E5E5"> it was submitted to</font>

360
00:16:03,629 --> 00:16:12,779
virustotal at 9 42 and 47 seconds so my

361
00:16:08,610 --> 00:16:15,360
theory is that this did not go out to a

362
00:16:12,779 --> 00:16:17,220
<font color="#E5E5E5">email and infect someone and then</font>

363
00:16:15,360 --> 00:16:21,420
someone take it and then report it to

364
00:16:17,220 --> 00:16:25,680
virustotal this is the malware author so

365
00:16:21,420 --> 00:16:28,498
virus<font color="#CCCCCC"> odel gives you a hash of the</font>

366
00:16:25,680 --> 00:16:31,138
submitter and so now<font color="#CCCCCC"> in the future as</font>

367
00:16:28,499 --> 00:16:34,199
this same individual submits other

368
00:16:31,139 --> 00:16:36,749
payloads for testing<font color="#CCCCCC"> to virustotal i can</font>

369
00:16:34,199 --> 00:16:38,699
see those payloads and know<font color="#E5E5E5"> about them</font>

370
00:16:36,749 --> 00:16:40,439
immediately without them actually<font color="#CCCCCC"> going</font>

371
00:16:38,699 --> 00:16:43,109
out into the<font color="#E5E5E5"> world and starting</font><font color="#CCCCCC"> to</font>

372
00:16:40,439 --> 00:16:44,730
infect people so this<font color="#CCCCCC"> is a very</font>

373
00:16:43,110 --> 00:16:48,809
interesting<font color="#E5E5E5"> technique</font><font color="#CCCCCC"> I hope you take</font>

374
00:16:44,730 --> 00:16:52,040
take<font color="#CCCCCC"> it with you so let's</font><font color="#E5E5E5"> look at the</font>

375
00:16:48,809 --> 00:16:54,689
different sandbox flavors of cuckoo and

376
00:16:52,040 --> 00:16:57,149
so we have plain vanilla this is still

377
00:16:54,689 --> 00:16:59,429
the version 1.2 stable version right<font color="#CCCCCC"> now</font>

378
00:16:57,149 --> 00:17:01,949
about a month<font color="#CCCCCC"> and a half two months ago</font>

379
00:16:59,429 --> 00:17:03,779
<font color="#E5E5E5">they released the 2 point 0 release</font>

380
00:17:01,949 --> 00:17:05,549
candidate<font color="#CCCCCC"> 1 so this is</font><font color="#E5E5E5"> the next next</font>

381
00:17:03,779 --> 00:17:08,429
generation and they're probably<font color="#E5E5E5"> going to</font>

382
00:17:05,549 --> 00:17:11,309
release the full 2 point 0 at some point

383
00:17:08,429 --> 00:17:15,179
this year and cuckoo modified this is

384
00:17:11,309 --> 00:17:17,158
actually a fork that was created<font color="#E5E5E5"> by an</font>

385
00:17:15,179 --> 00:17:20,250
individual<font color="#E5E5E5"> that worked for a Q vant and</font>

386
00:17:17,159 --> 00:17:23,459
it basically fixed a lot<font color="#E5E5E5"> of the things</font>

387
00:17:20,250 --> 00:17:26,369
<font color="#E5E5E5">that he found wrong with the analysis in</font>

388
00:17:23,459 --> 00:17:28,140
cuckoo<font color="#E5E5E5"> and a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> changes the</font>

389
00:17:26,369 --> 00:17:31,129
modifications that he made have now been

390
00:17:28,140 --> 00:17:34,470
up streamed into the 2 point 0 version

391
00:17:31,130 --> 00:17:37,169
so what<font color="#CCCCCC"> are the things that that this</font>

392
00:17:34,470 --> 00:17:37,940
<font color="#E5E5E5">gets you coo coo modified over the 1.2</font>

393
00:17:37,169 --> 00:17:40,230
version

394
00:17:37,940 --> 00:17:41,850
normalization of file and registry paths

395
00:17:40,230 --> 00:17:43,310
and this is<font color="#CCCCCC"> actually very important for</font>

396
00:17:41,850 --> 00:17:46,889
analysis and<font color="#E5E5E5"> I'll show you</font><font color="#CCCCCC"> in a moment</font>

397
00:17:43,310 --> 00:17:49,169
but you get<font color="#CCCCCC"> 64-bit analysis service</font>

398
00:17:46,890 --> 00:17:50,970
monitoring you get an extended API you

399
00:17:49,170 --> 00:17:53,760
can use tour for the outbound

400
00:17:50,970 --> 00:17:56,970
connections and then it has a<font color="#CCCCCC"> Malheur</font>

401
00:17:53,760 --> 00:17:59,910
integration for looking at heuristics so

402
00:17:56,970 --> 00:18:02,280
why is normalization important so

403
00:17:59,910 --> 00:18:05,640
normalization of pathways is very

404
00:18:02,280 --> 00:18:09,450
important because those two paths at the

405
00:18:05,640 --> 00:18:13,290
top are essentially<font color="#CCCCCC"> the same piece of</font>

406
00:18:09,450 --> 00:18:15,630
<font color="#E5E5E5">malware dropping this you know in the</font>

407
00:18:13,290 --> 00:18:19,740
<font color="#E5E5E5">bonzo directory that it created and then</font>

408
00:18:15,630 --> 00:18:21,900
the AI DVF p.jpg this is a file<font color="#E5E5E5"> that was</font>

409
00:18:19,740 --> 00:18:23,670
<font color="#E5E5E5">dropped by the malware and then these</font>

410
00:18:21,900 --> 00:18:26,340
<font color="#CCCCCC">are just two versions of Windows</font>

411
00:18:23,670 --> 00:18:28,800
operating system so if you want<font color="#CCCCCC"> to have</font>

412
00:18:26,340 --> 00:18:30,540
a variety<font color="#CCCCCC"> of sand boxes and you're</font>

413
00:18:28,800 --> 00:18:33,480
collecting data from a variety of sand

414
00:18:30,540 --> 00:18:35,159
boxes you now have a problem for doing

415
00:18:33,480 --> 00:18:38,730
data analysis across these different

416
00:18:35,160 --> 00:18:41,400
flavors of sandbox<font color="#E5E5E5"> and so when you</font>

417
00:18:38,730 --> 00:18:44,760
normalize it you replace the the the

418
00:18:41,400 --> 00:18:47,850
unique unique sections of the path with

419
00:18:44,760 --> 00:18:49,379
the official environment variable that

420
00:18:47,850 --> 00:18:51,719
you know the recognized environment

421
00:18:49,380 --> 00:18:54,390
variable for that path location and now

422
00:18:51,720 --> 00:18:56,430
you have<font color="#E5E5E5"> one path for both of these</font>

423
00:18:54,390 --> 00:19:00,270
sandbox flavors and you can do analysis

424
00:18:56,430 --> 00:19:02,250
across a lot of<font color="#CCCCCC"> different</font><font color="#E5E5E5"> sandboxes so</font>

425
00:19:00,270 --> 00:19:05,190
cuckoo next generation has a lot<font color="#CCCCCC"> of new</font>

426
00:19:02,250 --> 00:19:08,160
features<font color="#CCCCCC"> I'm actually going</font><font color="#E5E5E5"> to kind of</font>

427
00:19:05,190 --> 00:19:10,560
fast forward through this you can see

428
00:19:08,160 --> 00:19:12,240
these slides later they'll be posted

429
00:19:10,560 --> 00:19:13,740
online and I've already given this talk

430
00:19:12,240 --> 00:19:17,340
<font color="#CCCCCC">at a few other</font><font color="#E5E5E5"> be side so you can get</font>

431
00:19:13,740 --> 00:19:21,950
<font color="#E5E5E5">the slides there but so this is paranoid</font>

432
00:19:17,340 --> 00:19:24,840
fish so paranoid fish is a way of

433
00:19:21,950 --> 00:19:27,690
discovering anti analysis techniques

434
00:19:24,840 --> 00:19:30,840
that you have not corrected for in a

435
00:19:27,690 --> 00:19:33,690
sandbox so many many malware authors

436
00:19:30,840 --> 00:19:36,720
will put things into the malware which

437
00:19:33,690 --> 00:19:40,560
looks for certain registry keys or looks

438
00:19:36,720 --> 00:19:43,500
for certain features inside of a vm to

439
00:19:40,560 --> 00:19:46,530
know that this is a vm or that this is a

440
00:19:43,500 --> 00:19:48,780
sandbox<font color="#E5E5E5"> or that this is an you know a</font>

441
00:19:46,530 --> 00:19:51,399
debugger and the sort of thing so all of

442
00:19:48,780 --> 00:19:54,680
<font color="#E5E5E5">these anti analysis techniques</font>

443
00:19:51,400 --> 00:19:57,020
have been rolled into this executable

444
00:19:54,680 --> 00:20:00,500
file called paranoid fish or<font color="#CCCCCC"> paw fish</font>

445
00:19:57,020 --> 00:20:03,170
and so what it does<font color="#CCCCCC"> is it tries each one</font>

446
00:20:00,500 --> 00:20:05,150
of these anti analysis techniques while

447
00:20:03,170 --> 00:20:07,220
it's running in<font color="#E5E5E5"> your sandbox and then at</font>

448
00:20:05,150 --> 00:20:09,140
<font color="#E5E5E5">the end it reports back and it just</font>

449
00:20:07,220 --> 00:20:10,760
basically displays this on the screen

450
00:20:09,140 --> 00:20:13,820
and you can if you have a screen capture

451
00:20:10,760 --> 00:20:15,379
of it you can see you know your<font color="#CCCCCC"> okay on</font>

452
00:20:13,820 --> 00:20:18,350
<font color="#CCCCCC">all of these things you know wine</font>

453
00:20:15,380 --> 00:20:21,650
detection<font color="#E5E5E5"> okay with virtualbox</font><font color="#CCCCCC"> vmware</font>

454
00:20:18,350 --> 00:20:24,199
but they trace this one registry key

455
00:20:21,650 --> 00:20:26,450
which has detected that this is running

456
00:20:24,200 --> 00:20:28,370
in virtualbox and so this<font color="#E5E5E5"> is the time</font>

457
00:20:26,450 --> 00:20:29,720
where a malware would probably say all

458
00:20:28,370 --> 00:20:32,330
<font color="#E5E5E5">right I'm not going to do anything I'm</font>

459
00:20:29,720 --> 00:20:35,210
just going to sit here<font color="#E5E5E5"> so what you know</font>

460
00:20:32,330 --> 00:20:37,280
now is how to correct for this and so

461
00:20:35,210 --> 00:20:39,410
you<font color="#CCCCCC"> know the next</font><font color="#E5E5E5"> this begs the question</font>

462
00:20:37,280 --> 00:20:41,090
how do i correct correct for all of

463
00:20:39,410 --> 00:20:43,430
these things<font color="#E5E5E5"> that malware is going to</font>

464
00:20:41,090 --> 00:20:46,550
detect so there's another open source

465
00:20:43,430 --> 00:20:48,650
project called vm cloak and vm club gets

466
00:20:46,550 --> 00:20:52,000
you two things it actually dynamically

467
00:20:48,650 --> 00:20:54,980
builds your mouth your malware vm<font color="#E5E5E5"> and</font>

468
00:20:52,000 --> 00:20:59,930
install software for you and installs

469
00:20:54,980 --> 00:21:02,300
the red the windows registration key but

470
00:20:59,930 --> 00:21:04,400
it also obfuscates all of these things

471
00:21:02,300 --> 00:21:06,820
that<font color="#E5E5E5"> malware looks for is an anti</font>

472
00:21:04,400 --> 00:21:10,670
debugging and anti analysis technique so

473
00:21:06,820 --> 00:21:13,399
you can not only build your your VMs in

474
00:21:10,670 --> 00:21:14,690
an automated way similar to vagrant when

475
00:21:13,400 --> 00:21:16,850
you're using vagrant you just type

476
00:21:14,690 --> 00:21:19,100
vagrant up and then it builds your your

477
00:21:16,850 --> 00:21:20,600
vm<font color="#CCCCCC"> and then after a while it's done so</font>

478
00:21:19,100 --> 00:21:23,209
this is<font color="#CCCCCC"> the same sort of thing you know</font>

479
00:21:20,600 --> 00:21:24,770
<font color="#CCCCCC">you run the vm click command you go get</font>

480
00:21:23,210 --> 00:21:28,450
coffee and you come back and<font color="#E5E5E5"> you've got</font>

481
00:21:24,770 --> 00:21:33,020
a fully operational windows vm which is

482
00:21:28,450 --> 00:21:34,640
obfuscated 'add so what<font color="#E5E5E5"> are the what are</font>

483
00:21:33,020 --> 00:21:36,260
the cuckoo output so there's a<font color="#E5E5E5"> number of</font>

484
00:21:34,640 --> 00:21:38,270
different cuckoo outputs but I want<font color="#E5E5E5"> to</font>

485
00:21:36,260 --> 00:21:41,540
<font color="#CCCCCC">focus on</font><font color="#E5E5E5"> a few that are important for</font>

486
00:21:38,270 --> 00:21:44,090
<font color="#E5E5E5">this talk specifically so it's going to</font>

487
00:21:41,540 --> 00:21:46,220
<font color="#E5E5E5">give you a pcap file and it's also going</font>

488
00:21:44,090 --> 00:21:48,260
to give you a memory image it's also

489
00:21:46,220 --> 00:21:50,450
going to give you dropped file so drop

490
00:21:48,260 --> 00:21:52,730
files you're going to want to send<font color="#E5E5E5"> back</font>

491
00:21:50,450 --> 00:21:54,830
to<font color="#E5E5E5"> cuckoo and have it analyzed any of</font>

492
00:21:52,730 --> 00:22:00,830
them that<font color="#E5E5E5"> are executable you also want</font>

493
00:21:54,830 --> 00:22:03,010
<font color="#CCCCCC">to have a gut check in your in your loop</font>

494
00:22:00,830 --> 00:22:05,760
there because you don't<font color="#CCCCCC"> want to have a</font>

495
00:22:03,010 --> 00:22:08,650
a piece of malware that writes a

496
00:22:05,760 --> 00:22:11,290
differently padded version of itself as

497
00:22:08,650 --> 00:22:12,970
a drop file and then you're going<font color="#E5E5E5"> to get</font>

498
00:22:11,290 --> 00:22:16,000
into this nasty infinite loop of

499
00:22:12,970 --> 00:22:20,260
actually the same malware so I typically

500
00:22:16,000 --> 00:22:24,040
<font color="#E5E5E5">say do about six deep you know six six</font>

501
00:22:20,260 --> 00:22:26,500
children down and then stop it<font color="#E5E5E5"> but then</font>

502
00:22:24,040 --> 00:22:29,170
also alert you know have<font color="#CCCCCC"> a little alert</font>

503
00:22:26,500 --> 00:22:31,210
for yourself to tell you hey this thing

504
00:22:29,170 --> 00:22:33,820
hits six maybe you should look and see

505
00:22:31,210 --> 00:22:35,740
if<font color="#E5E5E5"> this is actually just dropping</font>

506
00:22:33,820 --> 00:22:37,540
different copies of itself or if this<font color="#E5E5E5"> is</font>

507
00:22:35,740 --> 00:22:39,640
<font color="#E5E5E5">some sort of you know strange new</font>

508
00:22:37,540 --> 00:22:43,930
malware that actually drops six children

509
00:22:39,640 --> 00:22:45,820
before it hits a payload so my<font color="#CCCCCC"> pcap and</font>

510
00:22:43,930 --> 00:22:48,730
memory image like<font color="#CCCCCC"> I said earlier the</font>

511
00:22:45,820 --> 00:22:52,840
memory image from cuckoo is actually

512
00:22:48,730 --> 00:22:54,790
it's fine for cuckoos own analysis of

513
00:22:52,840 --> 00:22:56,830
the memory image it's perfectly fine

514
00:22:54,790 --> 00:23:00,070
however<font color="#E5E5E5"> if you're using some volatility</font>

515
00:22:56,830 --> 00:23:02,260
techniques coo coo uses some<font color="#CCCCCC"> of the same</font>

516
00:23:00,070 --> 00:23:07,270
techniques that malware does to observe

517
00:23:02,260 --> 00:23:09,160
malware and so the cuckoo mon the cuckoo

518
00:23:07,270 --> 00:23:11,020
mon component of cuckoo actually

519
00:23:09,160 --> 00:23:13,330
pollutes the memory image in certain

520
00:23:11,020 --> 00:23:16,180
ways and<font color="#CCCCCC"> so it's better if you want to</font>

521
00:23:13,330 --> 00:23:18,250
have a clean memory image to extract

522
00:23:16,180 --> 00:23:19,780
your memory image separately than

523
00:23:18,250 --> 00:23:22,270
running it through cuckoo so run it

524
00:23:19,780 --> 00:23:24,310
through cuckoo allow cuckoo to look at

525
00:23:22,270 --> 00:23:26,680
its own memory image and the<font color="#E5E5E5"> data that</font>

526
00:23:24,310 --> 00:23:30,340
it can extract out of it but if you<font color="#CCCCCC"> want</font>

527
00:23:26,680 --> 00:23:32,170
<font color="#E5E5E5">to do more analysis using volatility you</font>

528
00:23:30,340 --> 00:23:34,419
want to collect your own separate memory

529
00:23:32,170 --> 00:23:38,530
image from a clean vm that has nothing

530
00:23:34,420 --> 00:23:41,920
<font color="#CCCCCC">else in it or from from a piece of bare</font>

531
00:23:38,530 --> 00:23:44,350
metal hardware so let's talk about Thug

532
00:23:41,920 --> 00:23:48,070
thug is a low interaction honey client

533
00:23:44,350 --> 00:23:50,889
and a low interaction honey client is is

534
00:23:48,070 --> 00:23:52,899
a it's this particular one is written in

535
00:23:50,890 --> 00:23:55,180
Python and it pretends<font color="#E5E5E5"> to be a browser</font>

536
00:23:52,900 --> 00:23:58,750
pretends<font color="#E5E5E5"> to have certain versions of</font>

537
00:23:55,180 --> 00:24:00,490
<font color="#E5E5E5">Java a certain version of PDF and you</font>

538
00:23:58,750 --> 00:24:02,860
can configure all of these and<font color="#E5E5E5"> it's</font>

539
00:24:00,490 --> 00:24:05,890
basically pretending so that it can

540
00:24:02,860 --> 00:24:07,570
trigger a drive-by by being the

541
00:24:05,890 --> 00:24:11,290
vulnerable thing that that malware

542
00:24:07,570 --> 00:24:13,689
drive-by is looking for and so the goal

543
00:24:11,290 --> 00:24:16,870
is<font color="#CCCCCC"> to capture the payload capture the</font>

544
00:24:13,690 --> 00:24:20,019
malware payload from that<font color="#E5E5E5"> drive-by and I</font>

545
00:24:16,870 --> 00:24:22,928
like to say that<font color="#E5E5E5"> that thug is a wolf in</font>

546
00:24:20,019 --> 00:24:24,940
sheep's<font color="#CCCCCC"> clothing so they're one of</font><font color="#E5E5E5"> the</font>

547
00:24:22,929 --> 00:24:27,039
things that<font color="#E5E5E5"> you can configure is the</font>

548
00:24:24,940 --> 00:24:29,409
user agent you can change the user agent

549
00:24:27,039 --> 00:24:32,019
to be almost anything you<font color="#E5E5E5"> want and these</font>

550
00:24:29,409 --> 00:24:34,480
are two sites that I use when I want to

551
00:24:32,019 --> 00:24:37,269
configure my user agent and you know be

552
00:24:34,480 --> 00:24:39,700
a little bit stealth phul or try to find

553
00:24:37,269 --> 00:24:41,980
one that malware is actually<font color="#E5E5E5"> looking for</font>

554
00:24:39,700 --> 00:24:45,370
so this top one is user agent string

555
00:24:41,980 --> 00:24:48,669
<font color="#E5E5E5">this is just a library of almost every</font>

556
00:24:45,370 --> 00:24:53,168
known user agent string and then browser

557
00:24:48,669 --> 00:24:56,350
info net user agents this one is an

558
00:24:53,169 --> 00:24:58,899
individual who<font color="#CCCCCC"> is collecting the user</font>

559
00:24:56,350 --> 00:25:03,580
agent strings that visit his website and

560
00:24:58,899 --> 00:25:06,189
so he ranks them in frequency of being

561
00:25:03,580 --> 00:25:09,279
observed and so you<font color="#CCCCCC"> know for at least</font>

562
00:25:06,190 --> 00:25:11,950
his sample size<font color="#E5E5E5"> of visitors on the</font>

563
00:25:09,279 --> 00:25:15,279
<font color="#CCCCCC">internet it can tell you what is the</font>

564
00:25:11,950 --> 00:25:18,159
<font color="#CCCCCC">most popular user agent string and then</font>

565
00:25:15,279 --> 00:25:21,549
you know again it simulates the variety

566
00:25:18,159 --> 00:25:24,879
of versions of vulnerable software that

567
00:25:21,549 --> 00:25:28,210
you can have as plugins this is just a

568
00:25:24,879 --> 00:25:30,370
list<font color="#E5E5E5"> of the variety of user agents and</font>

569
00:25:28,210 --> 00:25:33,490
operating<font color="#CCCCCC"> system combinations that are</font>

570
00:25:30,370 --> 00:25:37,389
provided with it the<font color="#CCCCCC"> Firefox on windows</font>

571
00:25:33,490 --> 00:25:42,190
7 I found is a pretty good one also ie8

572
00:25:37,389 --> 00:25:45,428
in<font color="#CCCCCC"> Windows 7</font><font color="#E5E5E5"> is another very good one so</font>

573
00:25:42,190 --> 00:25:47,649
what<font color="#E5E5E5"> are the output of thug it gives you</font>

574
00:25:45,429 --> 00:25:49,539
a lot of payload files so if it gets the

575
00:25:47,649 --> 00:25:51,879
payload it gives you the payload it also

576
00:25:49,539 --> 00:25:53,889
collects all of the different HTML and

577
00:25:51,879 --> 00:25:56,019
<font color="#E5E5E5">JavaScript files that get you there and</font>

578
00:25:53,889 --> 00:25:57,580
<font color="#E5E5E5">so you can analyze those and one of the</font>

579
00:25:56,019 --> 00:26:01,389
neat things about it is it arranged

580
00:25:57,580 --> 00:26:04,570
<font color="#CCCCCC">a--'s them in time so you have you know</font>

581
00:26:01,389 --> 00:26:06,459
the the<font color="#CCCCCC"> URL that you visited and then at</font>

582
00:26:04,570 --> 00:26:09,220
children and the time<font color="#CCCCCC"> that it visits</font>

583
00:26:06,460 --> 00:26:11,919
them you know you see the sort of family

584
00:26:09,220 --> 00:26:15,210
tree<font color="#CCCCCC"> of what begat what and</font><font color="#E5E5E5"> then</font><font color="#CCCCCC"> what we</font>

585
00:26:11,919 --> 00:26:18,309
got what and which loaded which URLs

586
00:26:15,210 --> 00:26:20,230
there's a lot<font color="#CCCCCC"> of other types of output</font>

587
00:26:18,309 --> 00:26:23,799
but the main thing that<font color="#E5E5E5"> you're going</font><font color="#CCCCCC"> to</font>

588
00:26:20,230 --> 00:26:26,870
<font color="#E5E5E5">get from thug is the payload files which</font>

589
00:26:23,799 --> 00:26:30,780
are then going<font color="#E5E5E5"> to send automated</font><font color="#CCCCCC"> back</font>

590
00:26:26,870 --> 00:26:32,520
coo coo and<font color="#E5E5E5"> i wanted to mention one of</font>

591
00:26:30,780 --> 00:26:34,250
<font color="#E5E5E5">these</font><font color="#CCCCCC"> i know that we're not</font><font color="#E5E5E5"> going to</font><font color="#CCCCCC"> be</font>

592
00:26:32,520 --> 00:26:37,410
talking about<font color="#E5E5E5"> this specifically in my</font>

593
00:26:34,250 --> 00:26:41,070
presentation today but HP feeds is

594
00:26:37,410 --> 00:26:45,240
really cool so HP feeds is a published

595
00:26:41,070 --> 00:26:47,550
subscribe protocol it's run by and and

596
00:26:45,240 --> 00:26:49,830
published by the you know the source

597
00:26:47,550 --> 00:26:53,250
<font color="#E5E5E5">code and</font><font color="#CCCCCC"> everything is from honeynet</font>

598
00:26:49,830 --> 00:26:55,139
project and one of the individuals in

599
00:26:53,250 --> 00:26:59,100
<font color="#CCCCCC">hunting net project also runs a website</font>

600
00:26:55,140 --> 00:27:03,960
called HP friends and so HP friends is

601
00:26:59,100 --> 00:27:07,050
basically a social social media site for

602
00:27:03,960 --> 00:27:08,640
malware researchers and so you can sit

603
00:27:07,050 --> 00:27:10,530
there and chat with<font color="#CCCCCC"> each other and</font><font color="#E5E5E5"> you</font>

604
00:27:08,640 --> 00:27:12,660
can also publish and subscribe to each

605
00:27:10,530 --> 00:27:15,510
other's thug and coo coo and other

606
00:27:12,660 --> 00:27:18,420
instances that speak HP feeds and you

607
00:27:15,510 --> 00:27:20,879
could<font color="#E5E5E5"> subscribe to each other's feeds of</font>

608
00:27:18,420 --> 00:27:24,840
malware and malware data it's<font color="#E5E5E5"> pretty</font>

609
00:27:20,880 --> 00:27:26,280
neat so this is<font color="#E5E5E5"> this is sort of one of</font>

610
00:27:24,840 --> 00:27:28,590
my favorite parts of the talk so<font color="#E5E5E5"> I'm</font>

611
00:27:26,280 --> 00:27:30,990
going to talk about bro and this is a

612
00:27:28,590 --> 00:27:33,840
network<font color="#E5E5E5"> you know it's a network analysis</font>

613
00:27:30,990 --> 00:27:38,520
framework but we're not<font color="#CCCCCC"> going to really</font>

614
00:27:33,840 --> 00:27:40,379
use it<font color="#E5E5E5"> for its typical use case typical</font>

615
00:27:38,520 --> 00:27:42,360
use case is network security monitoring

616
00:27:40,380 --> 00:27:45,180
so you would<font color="#CCCCCC"> have it doing live capture</font>

617
00:27:42,360 --> 00:27:48,300
and then looking for things that are

618
00:27:45,180 --> 00:27:49,860
unusual that occur on your network we

619
00:27:48,300 --> 00:27:51,629
are<font color="#E5E5E5"> not going to</font><font color="#CCCCCC"> use it for that because</font>

620
00:27:49,860 --> 00:27:53,639
I'm going<font color="#E5E5E5"> to run something that I know</font>

621
00:27:51,630 --> 00:27:57,900
is malicious and I'm going<font color="#CCCCCC"> to listen</font><font color="#E5E5E5"> to</font>

622
00:27:53,640 --> 00:28:00,510
<font color="#CCCCCC">it using bro so Bros a series of scripts</font>

623
00:27:57,900 --> 00:28:04,950
these scripts generate logs and the logs

624
00:28:00,510 --> 00:28:06,690
are text files in sold it so it's a

625
00:28:04,950 --> 00:28:10,770
little bit like a comma separated or

626
00:28:06,690 --> 00:28:14,340
space separated<font color="#CCCCCC"> text file but it's a</font>

627
00:28:10,770 --> 00:28:15,900
little bit more<font color="#E5E5E5"> to</font><font color="#CCCCCC"> it than that and</font>

628
00:28:14,340 --> 00:28:18,179
there's a<font color="#E5E5E5"> very rich community that</font>

629
00:28:15,900 --> 00:28:19,980
produces<font color="#E5E5E5"> open source scripts and so all</font>

630
00:28:18,180 --> 00:28:23,580
<font color="#CCCCCC">over github there's many other bros</font>

631
00:28:19,980 --> 00:28:26,850
scripts out there for for this talk i'm

632
00:28:23,580 --> 00:28:28,889
only using<font color="#E5E5E5"> the plain vanilla bro scripts</font>

633
00:28:26,850 --> 00:28:34,260
that come with bro itself when you

634
00:28:28,890 --> 00:28:37,890
download the original source so what I

635
00:28:34,260 --> 00:28:39,000
wanted to do here is just focus on bro

636
00:28:37,890 --> 00:28:42,540
for a moment

637
00:28:39,000 --> 00:28:45,690
and not think about any other tools at

638
00:28:42,540 --> 00:28:49,260
all<font color="#E5E5E5"> so I'm tying my hand behind my back</font>

639
00:28:45,690 --> 00:28:53,970
and only using bro so my analysis target

640
00:28:49,260 --> 00:28:57,480
is this<font color="#E5E5E5"> Excel document and I collected</font>

641
00:28:53,970 --> 00:29:00,630
<font color="#E5E5E5">this from a free you know open public</font>

642
00:28:57,480 --> 00:29:03,360
malware sandbox called hybrid analysis

643
00:29:00,630 --> 00:29:05,910
so if you wanted to later you<font color="#E5E5E5"> know</font>

644
00:29:03,360 --> 00:29:07,770
follow along<font color="#CCCCCC"> with my analysis here you</font>

645
00:29:05,910 --> 00:29:10,620
can download this file the sha-1 is

646
00:29:07,770 --> 00:29:15,480
listed and I want to answer the question

647
00:29:10,620 --> 00:29:17,250
what<font color="#E5E5E5"> can I learn</font><font color="#CCCCCC"> from pcap only so the</font>

648
00:29:15,480 --> 00:29:19,410
first thing I do is I go to the

649
00:29:17,250 --> 00:29:21,180
<font color="#E5E5E5">connection log so the first log the</font>

650
00:29:19,410 --> 00:29:23,580
first most important log that you want

651
00:29:21,180 --> 00:29:26,490
<font color="#E5E5E5">to look at and bro is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> con dog and</font>

652
00:29:23,580 --> 00:29:29,490
soak on dot log shows you each and every

653
00:29:26,490 --> 00:29:31,890
<font color="#E5E5E5">single granular connection that has been</font>

654
00:29:29,490 --> 00:29:34,830
<font color="#E5E5E5">found in that particular packet capture</font>

655
00:29:31,890 --> 00:29:37,740
and so the first thing you want to do is

656
00:29:34,830 --> 00:29:39,870
get rid<font color="#CCCCCC"> of the garbage so most operating</font>

657
00:29:37,740 --> 00:29:42,330
systems are going to have typical

658
00:29:39,870 --> 00:29:45,629
traffic that they naturally you know

659
00:29:42,330 --> 00:29:48,000
just create as their you<font color="#CCCCCC"> know</font>

660
00:29:45,630 --> 00:29:50,490
housekeeping and typical traffic that's

661
00:29:48,000 --> 00:29:53,520
all benign so you want to remove<font color="#E5E5E5"> all of</font>

662
00:29:50,490 --> 00:29:56,910
that so this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the this is the you know</font>

663
00:29:53,520 --> 00:29:58,200
operating<font color="#CCCCCC"> system benign traffic and so</font>

664
00:29:56,910 --> 00:30:01,760
as you can see there's a lot there's

665
00:29:58,200 --> 00:30:06,270
some ICMP pings that occurred on ipv6

666
00:30:01,760 --> 00:30:08,250
there's a little bit of ipv6 name

667
00:30:06,270 --> 00:30:13,800
resolution local name resolution and

668
00:30:08,250 --> 00:30:15,210
some broadcast broadcast traffic so not

669
00:30:13,800 --> 00:30:19,710
worrying about this so I want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> just</font>

670
00:30:15,210 --> 00:30:22,710
<font color="#E5E5E5">ignore that this is important so this</font><font color="#CCCCCC"> is</font>

671
00:30:19,710 --> 00:30:26,360
<font color="#E5E5E5">the typical DNS traffic and so this is</font>

672
00:30:22,710 --> 00:30:29,430
<font color="#CCCCCC">the malware trying to resolve to to</font>

673
00:30:26,360 --> 00:30:31,250
<font color="#CCCCCC">hosting excuse me to host names so this</font>

674
00:30:29,430 --> 00:30:35,100
is important we'll come back to that

675
00:30:31,250 --> 00:30:38,100
this is<font color="#E5E5E5"> also important it made</font><font color="#CCCCCC"> two HTTP</font>

676
00:30:35,100 --> 00:30:41,639
<font color="#E5E5E5">connections outbound on port 80 to these</font>

677
00:30:38,100 --> 00:30:43,949
two IP addresses and then this<font color="#CCCCCC"> is the</font>

678
00:30:41,640 --> 00:30:47,310
traffic so bro being a network security

679
00:30:43,950 --> 00:30:49,940
monitoring tool you know it's it the the

680
00:30:47,310 --> 00:30:52,279
<font color="#E5E5E5">the output and the way you you</font>

681
00:30:49,940 --> 00:30:55,240
cat it is<font color="#E5E5E5"> different than Wireshark but</font>

682
00:30:52,279 --> 00:30:58,789
the idea is the same it is configured<font color="#CCCCCC"> to</font>

683
00:30:55,240 --> 00:31:00,970
understand and identify many many many

684
00:30:58,789 --> 00:31:05,149
many many protocols that are used

685
00:31:00,970 --> 00:31:08,029
legitimate protocols so here if the

686
00:31:05,149 --> 00:31:10,610
service has a dash this means<font color="#CCCCCC"> braud</font>

687
00:31:08,029 --> 00:31:13,549
doesn't know what that protocol is I

688
00:31:10,610 --> 00:31:16,490
usually<font color="#CCCCCC"> call this the WTF traffic and</font>

689
00:31:13,549 --> 00:31:20,269
that is almost<font color="#E5E5E5"> always see to traffic</font>

690
00:31:16,490 --> 00:31:23,330
from<font color="#CCCCCC"> the malware so let's look</font><font color="#E5E5E5"> at the</font>

691
00:31:20,269 --> 00:31:26,240
<font color="#E5E5E5">DNS log the first thing you see here</font>

692
00:31:23,330 --> 00:31:30,799
whoop sorry first thing you<font color="#E5E5E5"> see here is</font>

693
00:31:26,240 --> 00:31:33,409
<font color="#E5E5E5">it's resolved a query to s01 Yap files</font>

694
00:31:30,799 --> 00:31:38,480
da true and as you can see it looks like

695
00:31:33,409 --> 00:31:41,240
<font color="#CCCCCC">this is either round robin DNS or this</font>

696
00:31:38,480 --> 00:31:43,279
is a fast flux botnet but the<font color="#E5E5E5"> thing is I</font>

697
00:31:41,240 --> 00:31:45,080
you know I<font color="#E5E5E5"> went visited Yap files and I</font>

698
00:31:43,279 --> 00:31:47,480
can see this is a<font color="#E5E5E5"> file sharing site and</font>

699
00:31:45,080 --> 00:31:50,449
so I'm going<font color="#E5E5E5"> to guess this is just this</font>

700
00:31:47,480 --> 00:31:55,580
is a benign site being leveraged by the

701
00:31:50,450 --> 00:31:58,370
malware so this second one arm and sis

702
00:31:55,580 --> 00:32:00,350
true is interesting so we're going<font color="#E5E5E5"> to</font>

703
00:31:58,370 --> 00:32:03,469
take a little bit of a<font color="#E5E5E5"> look at that</font><font color="#CCCCCC"> in a</font>

704
00:32:00,350 --> 00:32:06,340
moment but so I went<font color="#E5E5E5"> and I looked at Yap</font>

705
00:32:03,470 --> 00:32:10,340
files da true and I found that this is a

706
00:32:06,340 --> 00:32:11,990
image and video sharing site for<font color="#E5E5E5"> rush a</font>

707
00:32:10,340 --> 00:32:15,019
<font color="#E5E5E5">russian-language image and videos</font>

708
00:32:11,990 --> 00:32:18,769
sharing site and you can upload a file

709
00:32:15,019 --> 00:32:21,559
so of<font color="#E5E5E5"> course I'm thinking all</font><font color="#CCCCCC"> right so</font>

710
00:32:18,769 --> 00:32:24,289
this is<font color="#E5E5E5"> a you know a little bit</font>

711
00:32:21,559 --> 00:32:26,480
suspicious so let's<font color="#E5E5E5"> look at our man sis</font>

712
00:32:24,289 --> 00:32:28,519
so I go to<font color="#E5E5E5"> our man sis and I mean I I</font>

713
00:32:26,480 --> 00:32:30,919
speak fluent Russian so I can read the

714
00:32:28,519 --> 00:32:34,299
rest of this but for you<font color="#CCCCCC"> see</font><font color="#E5E5E5"> remote</font>

715
00:32:30,919 --> 00:32:37,279
manipulator that is you<font color="#CCCCCC"> know very</font>

716
00:32:34,299 --> 00:32:40,460
suspicious this is in the same sort of

717
00:32:37,279 --> 00:32:43,759
vein of what I<font color="#E5E5E5"> would still consider</font>

718
00:32:40,460 --> 00:32:46,100
malware as Hawkeye keylogger and things

719
00:32:43,759 --> 00:32:48,440
like this<font color="#E5E5E5"> that they're selling it as</font>

720
00:32:46,100 --> 00:32:51,139
legitimate software there's actually an

721
00:32:48,440 --> 00:32:53,090
office with a phone and people and

722
00:32:51,139 --> 00:32:54,620
printers and you know the police are not

723
00:32:53,090 --> 00:32:58,340
arresting all of them which they<font color="#CCCCCC"> should</font>

724
00:32:54,620 --> 00:33:00,408
but but you know this<font color="#CCCCCC"> is this software</font>

725
00:32:58,340 --> 00:33:02,600
is supposed to be it the the target

726
00:33:00,409 --> 00:33:02,940
audience<font color="#E5E5E5"> of this software is if you want</font>

727
00:33:02,600 --> 00:33:05,490
to

728
00:33:02,940 --> 00:33:08,340
put a keylogger on your children's you

729
00:33:05,490 --> 00:33:10,890
know a machine or<font color="#E5E5E5"> if you want to spy on</font>

730
00:33:08,340 --> 00:33:14,790
your wife or something<font color="#CCCCCC"> like that and so</font>

731
00:33:10,890 --> 00:33:17,280
you know there's a gray area about that

732
00:33:14,790 --> 00:33:20,490
but I<font color="#E5E5E5"> consider it all malware so this so</font>

733
00:33:17,280 --> 00:33:22,830
now remember what we're only listening

734
00:33:20,490 --> 00:33:26,780
to the malware I have<font color="#E5E5E5"> not looked at the</font>

735
00:33:22,830 --> 00:33:29,580
malware file itself yet but I now know

736
00:33:26,780 --> 00:33:32,670
perhaps how it's communicating so it's

737
00:33:29,580 --> 00:33:34,710
communicating with<font color="#CCCCCC"> that yap files and I</font>

738
00:33:32,670 --> 00:33:37,200
have a pretty good<font color="#E5E5E5"> guess as to</font><font color="#CCCCCC"> the</font>

739
00:33:34,710 --> 00:33:40,470
identity of the malware what what am i

740
00:33:37,200 --> 00:33:43,980
working<font color="#E5E5E5"> with here so the next</font><font color="#CCCCCC"> thing I</font>

741
00:33:40,470 --> 00:33:47,610
<font color="#E5E5E5">want to do is look at the HTTP log and</font>

742
00:33:43,980 --> 00:33:52,110
as you can see up here the malware does

743
00:33:47,610 --> 00:33:56,990
it get to s01<font color="#E5E5E5"> yap files da true of a</font>

744
00:33:52,110 --> 00:34:00,810
<font color="#E5E5E5">JPEG but because bro is smarter than</font>

745
00:33:56,990 --> 00:34:03,150
your average computer program it knows

746
00:34:00,810 --> 00:34:06,300
<font color="#CCCCCC">that this is this has a mime type of</font>

747
00:34:03,150 --> 00:34:11,520
application x daus exact so<font color="#CCCCCC"> i'm going to</font>

748
00:34:06,300 --> 00:34:12,840
guess that this is not a<font color="#CCCCCC"> jpeg so even</font>

749
00:34:11,520 --> 00:34:14,639
though i said i'm going<font color="#E5E5E5"> to guess i'm</font>

750
00:34:12,840 --> 00:34:16,560
actually going to go<font color="#CCCCCC"> out</font><font color="#E5E5E5"> and try it try</font>

751
00:34:14,639 --> 00:34:20,310
<font color="#E5E5E5">to check it out so i tried to load that</font>

752
00:34:16,560 --> 00:34:24,870
<font color="#E5E5E5">jpg in a browser to see if it actually</font>

753
00:34:20,310 --> 00:34:26,370
loads and as you can see the image s01

754
00:34:24,870 --> 00:34:30,089
blah blah blah<font color="#E5E5E5"> cannot be displayed</font>

755
00:34:26,370 --> 00:34:32,549
because it contains errors really what

756
00:34:30,090 --> 00:34:34,980
<font color="#E5E5E5">kind of errors does it can contain does</font>

757
00:34:32,550 --> 00:34:39,030
it start<font color="#CCCCCC"> with the characters MZ maybe i</font>

758
00:34:34,980 --> 00:34:43,050
don't<font color="#E5E5E5"> know alright so the next thing i</font>

759
00:34:39,030 --> 00:34:46,710
want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> look at is the this so this</font><font color="#CCCCCC"> is</font>

760
00:34:43,050 --> 00:34:51,480
<font color="#E5E5E5">the fu ID bro is really awesome because</font>

761
00:34:46,710 --> 00:34:56,100
when it finds one granular thing like 11

762
00:34:51,480 --> 00:34:59,640
row in its in its log output each row is

763
00:34:56,100 --> 00:35:02,880
assigned a UID so that you can take<font color="#CCCCCC"> that</font>

764
00:34:59,640 --> 00:35:06,150
one row and relate it via that you ID to

765
00:35:02,880 --> 00:35:08,340
other bro logs and you can<font color="#E5E5E5"> follow either</font>

766
00:35:06,150 --> 00:35:10,920
that connection across different

767
00:35:08,340 --> 00:35:13,140
protocols or you if it downloads a file

768
00:35:10,920 --> 00:35:15,450
in this case<font color="#CCCCCC"> i can go to the extracted</font>

769
00:35:13,140 --> 00:35:16,390
files directory there it's carved all

770
00:35:15,450 --> 00:35:19,450
the files out

771
00:35:16,390 --> 00:35:22,660
drop them I can see which file it is

772
00:35:19,450 --> 00:35:26,019
that was<font color="#E5E5E5"> dropped there so I then go to</font>

773
00:35:22,660 --> 00:35:29,788
extracted files and<font color="#E5E5E5"> then run the file</font>

774
00:35:26,019 --> 00:35:32,649
command to look for the magic string and

775
00:35:29,789 --> 00:35:34,720
you know that the magic string says that

776
00:35:32,650 --> 00:35:39,099
this is a PE executable so this<font color="#E5E5E5"> is</font>

777
00:35:34,720 --> 00:35:41,709
definitely not<font color="#E5E5E5"> a JPEG</font><font color="#CCCCCC"> all right so now</font>

778
00:35:39,099 --> 00:35:43,150
what I want<font color="#E5E5E5"> to do is gather a little bit</font>

779
00:35:41,710 --> 00:35:47,109
of stuff that<font color="#E5E5E5"> I</font><font color="#CCCCCC"> want to collect for</font>

780
00:35:43,150 --> 00:35:48,970
later so I run I look at the files dot

781
00:35:47,109 --> 00:35:51,250
log and files log gives you the bite

782
00:35:48,970 --> 00:35:54,730
size of the file and then goes ahead and

783
00:35:51,250 --> 00:35:59,049
creates the three hashes so md5 sha-1

784
00:35:54,730 --> 00:36:03,420
shop do 256 now I want<font color="#E5E5E5"> to look at the</font>

785
00:35:59,049 --> 00:36:05,680
WTF traffic what's going<font color="#E5E5E5"> on here and</font>

786
00:36:03,420 --> 00:36:07,900
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> one part where I'm going to</font>

787
00:36:05,680 --> 00:36:11,710
cheat I want to<font color="#E5E5E5"> replace this part of the</font>

788
00:36:07,900 --> 00:36:14,109
talk with using<font color="#E5E5E5"> T shark rather than</font>

789
00:36:11,710 --> 00:36:17,019
Wireshark but because bro you don't have

790
00:36:14,109 --> 00:36:20,230
a very<font color="#CCCCCC"> good look at what the packet</font>

791
00:36:17,019 --> 00:36:24,069
itself is so what I've done is actually

792
00:36:20,230 --> 00:36:27,579
opened that one packet or 11 connection

793
00:36:24,069 --> 00:36:31,630
in wireshark and you know lo and<font color="#CCCCCC"> behold</font>

794
00:36:27,579 --> 00:36:33,759
we've got<font color="#E5E5E5"> xml see to traffic going back</font>

795
00:36:31,630 --> 00:36:36,099
and forth between<font color="#E5E5E5"> these two locations I</font>

796
00:36:33,759 --> 00:36:39,369
know this looks a little bit like angry

797
00:36:36,099 --> 00:36:41,890
fruit salad so I'm going<font color="#CCCCCC"> to kind</font><font color="#E5E5E5"> of</font>

798
00:36:39,369 --> 00:36:46,329
spell it out for you here where you know

799
00:36:41,890 --> 00:36:48,308
when I review what we've learned<font color="#E5E5E5"> so what</font>

800
00:36:46,329 --> 00:36:50,170
do we<font color="#E5E5E5"> learn just listening to the</font>

801
00:36:48,309 --> 00:36:52,359
malware and not actually looking<font color="#E5E5E5"> at the</font>

802
00:36:50,170 --> 00:36:55,299
file itself so we know<font color="#CCCCCC"> that the</font>

803
00:36:52,359 --> 00:36:57,400
adversary is likely<font color="#CCCCCC"> rissa phone they use</font>

804
00:36:55,299 --> 00:36:59,259
an office document and the office

805
00:36:57,400 --> 00:37:01,150
document is generating network traffic

806
00:36:59,259 --> 00:37:03,849
if you have an office document in

807
00:37:01,150 --> 00:37:07,599
generating network traffic that's bad

808
00:37:03,849 --> 00:37:10,779
very bad the payload is remote

809
00:37:07,599 --> 00:37:13,029
manipulator the payload we offer even

810
00:37:10,779 --> 00:37:15,369
<font color="#E5E5E5">have a TTP here you know tactics</font>

811
00:37:13,029 --> 00:37:19,089
techniques and procedures so we've got

812
00:37:15,369 --> 00:37:22,750
the pay hide a payload as a public image

813
00:37:19,089 --> 00:37:24,578
sharing site as a JPEG and then this

814
00:37:22,750 --> 00:37:26,769
stuff at the bottom i extracted from

815
00:37:24,579 --> 00:37:29,860
that<font color="#E5E5E5"> xml we saw just a moment ago and</font>

816
00:37:26,769 --> 00:37:33,100
<font color="#E5E5E5">now this is very unique I mean</font>

817
00:37:29,860 --> 00:37:34,990
I've got the license number for the c2

818
00:37:33,100 --> 00:37:38,020
server that they bought from remote

819
00:37:34,990 --> 00:37:41,259
manipulator its internal ID trojan

820
00:37:38,020 --> 00:37:43,960
version and you know server versions so

821
00:37:41,260 --> 00:37:46,390
now i can write a very accurate<font color="#E5E5E5"> snort</font>

822
00:37:43,960 --> 00:37:49,210
signature that will find this

823
00:37:46,390 --> 00:37:51,220
adversaries SI toos when they reuse it

824
00:37:49,210 --> 00:37:53,770
with a<font color="#CCCCCC"> different attack if they</font><font color="#E5E5E5"> put</font>

825
00:37:51,220 --> 00:37:56,410
another payload out there and reuse

826
00:37:53,770 --> 00:38:00,610
their c 2 i'll be able to connect that

827
00:37:56,410 --> 00:38:02,440
c2 back to this one so this is<font color="#CCCCCC"> a set of</font>

828
00:38:00,610 --> 00:38:04,420
indicators that<font color="#CCCCCC"> I've gathered from this</font>

829
00:38:02,440 --> 00:38:07,210
you know I've given them a couple of

830
00:38:04,420 --> 00:38:09,640
different ratings<font color="#E5E5E5"> Yap files I rated this</font>

831
00:38:07,210 --> 00:38:11,290
one's goal which is<font color="#E5E5E5"> just suspicious</font>

832
00:38:09,640 --> 00:38:14,740
rather than actually malicious because

833
00:38:11,290 --> 00:38:16,930
it is a<font color="#E5E5E5"> a benign website I did contact</font>

834
00:38:14,740 --> 00:38:19,419
them and I said hey you might want<font color="#E5E5E5"> to</font>

835
00:38:16,930 --> 00:38:21,940
check<font color="#CCCCCC"> that</font><font color="#E5E5E5"> things are actually JPEGs</font>

836
00:38:19,420 --> 00:38:26,140
before you allow them to be uploaded but

837
00:38:21,940 --> 00:38:29,020
I didn't<font color="#E5E5E5"> hear back</font><font color="#CCCCCC"> and this is actually</font>

838
00:38:26,140 --> 00:38:32,350
on github right now on my github page

839
00:38:29,020 --> 00:38:36,640
this<font color="#CCCCCC"> is my bro configuration so this is</font>

840
00:38:32,350 --> 00:38:40,450
<font color="#CCCCCC">my local bro config file and so please</font>

841
00:38:36,640 --> 00:38:43,270
take this use it I spent quite<font color="#E5E5E5"> a lot of</font>

842
00:38:40,450 --> 00:38:45,430
<font color="#E5E5E5">time going through each and every config</font>

843
00:38:43,270 --> 00:38:48,100
and making sure I know what it does and

844
00:38:45,430 --> 00:38:51,700
how to use it<font color="#CCCCCC"> and how to configure it</font>

845
00:38:48,100 --> 00:38:53,560
properly so<font color="#E5E5E5"> bro gives you a number of</font>

846
00:38:51,700 --> 00:38:55,540
<font color="#E5E5E5">different logs and then it extracts</font>

847
00:38:53,560 --> 00:38:58,180
files those files that you get extracted

848
00:38:55,540 --> 00:39:00,009
from here like<font color="#E5E5E5"> that payload I would want</font>

849
00:38:58,180 --> 00:39:02,950
to send to cuckoo and do further

850
00:39:00,010 --> 00:39:06,160
analysis there so let's move on<font color="#CCCCCC"> to</font>

851
00:39:02,950 --> 00:39:08,770
volatility volatility is a memory

852
00:39:06,160 --> 00:39:10,960
analysis framework it's a very very very

853
00:39:08,770 --> 00:39:13,630
<font color="#E5E5E5">good way to extract artifacts from</font>

854
00:39:10,960 --> 00:39:16,960
memory while the malware is running and

855
00:39:13,630 --> 00:39:18,700
so it gives you a really good view into

856
00:39:16,960 --> 00:39:20,880
the malware it's also a<font color="#CCCCCC"> very good pen</font>

857
00:39:18,700 --> 00:39:24,310
test tool because you can see you know

858
00:39:20,880 --> 00:39:26,740
logins after reboot and fun stuff like

859
00:39:24,310 --> 00:39:29,470
that I encourage you to<font color="#E5E5E5"> look into</font>

860
00:39:26,740 --> 00:39:32,859
volatility and use it all the time it's

861
00:39:29,470 --> 00:39:35,410
really fun there's also a tool in the

862
00:39:32,860 --> 00:39:38,320
recall project which is similar to

863
00:39:35,410 --> 00:39:40,629
volatility the recoil project has a tool

864
00:39:38,320 --> 00:39:42,230
to dump running memory so you can

865
00:39:40,630 --> 00:39:45,020
actually pipe

866
00:39:42,230 --> 00:39:47,450
memory into volatility while you're in

867
00:39:45,020 --> 00:39:50,420
the vm so you're<font color="#E5E5E5"> you're looking at live</font>

868
00:39:47,450 --> 00:39:52,310
memory pages which is very useful and

869
00:39:50,420 --> 00:39:57,920
there's a there's a version of that<font color="#E5E5E5"> for</font>

870
00:39:52,310 --> 00:40:01,490
<font color="#E5E5E5">Linux for for OS X for windows etc so it</font>

871
00:39:57,920 --> 00:40:05,300
supports<font color="#E5E5E5"> Windows operating oh s X and it</font>

872
00:40:01,490 --> 00:40:07,729
also supports Linux and what we're<font color="#E5E5E5"> going</font>

873
00:40:05,300 --> 00:40:10,400
to do again is the same exercise I did

874
00:40:07,730 --> 00:40:13,040
just a moment ago and I'm going to

875
00:40:10,400 --> 00:40:15,380
<font color="#E5E5E5">analyze one piece of malware but without</font>

876
00:40:13,040 --> 00:40:16,910
looking at the malware file itself I'm

877
00:40:15,380 --> 00:40:20,060
just going<font color="#E5E5E5"> to look at what the malware</font>

878
00:40:16,910 --> 00:40:22,009
is thinking in memory<font color="#E5E5E5"> and by the way if</font>

879
00:40:20,060 --> 00:40:27,170
you see an executable file that's like

880
00:40:22,010 --> 00:40:31,430
be exe or<font color="#CCCCCC"> 2 DX e or f dot exe that's</font>

881
00:40:27,170 --> 00:40:33,560
malware that's almost<font color="#E5E5E5"> always malware so</font>

882
00:40:31,430 --> 00:40:35,779
again I encourage you to<font color="#CCCCCC"> follow along</font>

883
00:40:33,560 --> 00:40:38,200
<font color="#E5E5E5">with</font><font color="#CCCCCC"> my analysis here you can go</font>

884
00:40:35,780 --> 00:40:41,810
download a copy of this malware yourself

885
00:40:38,200 --> 00:40:44,990
same place and this<font color="#E5E5E5"> is the sha-1 for</font>

886
00:40:41,810 --> 00:40:48,200
this piece of malware so one of the

887
00:40:44,990 --> 00:40:51,830
things and you can look this up when I

888
00:40:48,200 --> 00:40:54,140
publish the slides later but so I beat

889
00:40:51,830 --> 00:40:56,420
my head against this problem a number of

890
00:40:54,140 --> 00:41:00,529
times I'm like okay I<font color="#CCCCCC"> dump the memory</font>

891
00:40:56,420 --> 00:41:02,720
image from from a virtualbox volatility

892
00:41:00,530 --> 00:41:04,990
doesn't like it what's going on so I

893
00:41:02,720 --> 00:41:08,990
<font color="#E5E5E5">finally figured out</font><font color="#CCCCCC"> that you</font><font color="#E5E5E5"> have to run</font>

894
00:41:04,990 --> 00:41:11,600
first you<font color="#E5E5E5"> dump the memory image from</font>

895
00:41:08,990 --> 00:41:14,118
from virtual box and then you have to

896
00:41:11,600 --> 00:41:17,240
<font color="#CCCCCC">use volatility to convert it to a format</font>

897
00:41:14,119 --> 00:41:19,070
that volatility understands and so you

898
00:41:17,240 --> 00:41:20,930
<font color="#CCCCCC">don't need to bump your head against the</font>

899
00:41:19,070 --> 00:41:23,210
same thing<font color="#E5E5E5"> that I did so just follow</font>

900
00:41:20,930 --> 00:41:26,000
this process and you'll have<font color="#E5E5E5"> a perfectly</font>

901
00:41:23,210 --> 00:41:27,440
<font color="#E5E5E5">good piece of for perfectly good memory</font>

902
00:41:26,000 --> 00:41:31,340
image that you can analyze using

903
00:41:27,440 --> 00:41:33,859
volatility so one of the<font color="#CCCCCC"> first things</font>

904
00:41:31,340 --> 00:41:37,580
that you want<font color="#E5E5E5"> to do is take a memory</font>

905
00:41:33,859 --> 00:41:40,310
image of the vm or the people or the<font color="#E5E5E5"> the</font>

906
00:41:37,580 --> 00:41:41,779
works<font color="#CCCCCC"> in when its clean so that you can</font>

907
00:41:40,310 --> 00:41:44,540
compare some<font color="#CCCCCC"> of the output from</font>

908
00:41:41,780 --> 00:41:47,060
<font color="#E5E5E5">volatility so one of the things that you</font>

909
00:41:44,540 --> 00:41:50,000
would do is PS list and PS list shows

910
00:41:47,060 --> 00:41:53,060
running processes and so as you can see

911
00:41:50,000 --> 00:41:55,269
<font color="#E5E5E5">I did</font><font color="#CCCCCC"> the PS list from the clean memory</font>

912
00:41:53,060 --> 00:41:57,578
image and from the malware a memory

913
00:41:55,269 --> 00:42:00,399
and now I've taken a diff of the two

914
00:41:57,579 --> 00:42:02,859
outputs and you can see so search

915
00:42:00,399 --> 00:42:04,839
protocol and search filter and service

916
00:42:02,859 --> 00:42:07,839
host these are all clean these are part

917
00:42:04,839 --> 00:42:11,589
of the clean image but now you can see

918
00:42:07,839 --> 00:42:14,589
<font color="#E5E5E5">explorer.exe is now running in this</font><font color="#CCCCCC"> VM</font>

919
00:42:11,589 --> 00:42:17,799
<font color="#E5E5E5">and by the way I</font><font color="#CCCCCC"> did not run</font>

920
00:42:14,589 --> 00:42:21,999
explorer.exe I clicked on<font color="#CCCCCC"> a malware</font>

921
00:42:17,799 --> 00:42:24,339
executable so this is<font color="#CCCCCC"> very suspicious so</font>

922
00:42:21,999 --> 00:42:27,098
let's take<font color="#E5E5E5"> a deeper look into what's</font>

923
00:42:24,339 --> 00:42:29,828
happening<font color="#CCCCCC"> there and run it through mal</font>

924
00:42:27,099 --> 00:42:33,189
fine so mal find looks for process

925
00:42:29,829 --> 00:42:35,640
injection and any anything<font color="#E5E5E5"> that has been</font>

926
00:42:33,189 --> 00:42:38,408
injected<font color="#E5E5E5"> and you can see explorer.exe</font>

927
00:42:35,640 --> 00:42:40,359
and again you know you'll see a theme

928
00:42:38,409 --> 00:42:42,789
when you're using things like volatility

929
00:42:40,359 --> 00:42:45,038
if you run one tool and you see<font color="#CCCCCC"> ha</font>

930
00:42:42,789 --> 00:42:47,739
explorer.exe is running then you run mal

931
00:42:45,039 --> 00:42:50,859
find and oh so<font color="#E5E5E5"> explore died exe was</font>

932
00:42:47,739 --> 00:42:54,669
actually injected so clearly it was

933
00:42:50,859 --> 00:42:57,009
injected you've got da MZ which is PE

934
00:42:54,669 --> 00:43:01,959
executable so PA executed was actually

935
00:42:57,009 --> 00:43:04,779
shoved into<font color="#CCCCCC"> Explorer and then</font><font color="#E5E5E5"> I dumped</font>

936
00:43:01,959 --> 00:43:08,379
those so I dumped those processes and

937
00:43:04,779 --> 00:43:12,789
ran that dumped file through virustotal

938
00:43:08,380 --> 00:43:16,649
and i found that avira and<font color="#CCCCCC"> qui who 360</font>

939
00:43:12,789 --> 00:43:20,079
have flagged this memory address as

940
00:43:16,649 --> 00:43:22,058
malicious and then<font color="#E5E5E5"> qui who 360 also</font>

941
00:43:20,079 --> 00:43:26,380
flagged the second one so both of those

942
00:43:22,059 --> 00:43:28,599
are found to be malware now what I want

943
00:43:26,380 --> 00:43:31,869
<font color="#E5E5E5">to do</font><font color="#CCCCCC"> is look at the connections so</font>

944
00:43:28,599 --> 00:43:34,959
again I can find what outbound network

945
00:43:31,869 --> 00:43:37,359
connections what out<font color="#E5E5E5"> ground network</font>

946
00:43:34,959 --> 00:43:40,569
connections were made in that memory

947
00:43:37,359 --> 00:43:42,249
image and so in the clean image no you

948
00:43:40,569 --> 00:43:43,599
know<font color="#CCCCCC"> no network connections and then all</font>

949
00:43:42,249 --> 00:43:46,468
of a sudden<font color="#CCCCCC"> when I clicked on</font><font color="#E5E5E5"> this</font>

950
00:43:43,599 --> 00:43:51,699
malware executable I've got these two

951
00:43:46,469 --> 00:43:56,469
these two connections and so 216 171 26

952
00:43:51,699 --> 00:43:59,469
105 now we have a c2 IP address so what

953
00:43:56,469 --> 00:44:01,630
have we learned<font color="#E5E5E5"> using volatility we know</font>

954
00:43:59,469 --> 00:44:04,899
<font color="#E5E5E5">that the sample that we observed uses</font>

955
00:44:01,630 --> 00:44:07,380
process in<font color="#E5E5E5"> injection we know that it</font>

956
00:44:04,899 --> 00:44:09,240
injects specifically explorer.exe

957
00:44:07,380 --> 00:44:11,039
and then we've also gathered a

958
00:44:09,240 --> 00:44:13,788
command-and-control IP address that we

959
00:44:11,039 --> 00:44:17,279
can then<font color="#E5E5E5"> use to look maybe through</font>

960
00:44:13,789 --> 00:44:20,549
passive DNS this IP address might have

961
00:44:17,279 --> 00:44:23,579
further domains and host names that we

962
00:44:20,549 --> 00:44:26,940
can use to pivot out to look at previous

963
00:44:23,579 --> 00:44:29,400
attacks and get an idea of who it<font color="#CCCCCC"> is or</font>

964
00:44:26,940 --> 00:44:31,799
what organization or what malware family

965
00:44:29,400 --> 00:44:37,950
or or connect this particular attack

966
00:44:31,799 --> 00:44:40,140
with previous attacks so again the

967
00:44:37,950 --> 00:44:42,509
organizer said we're running<font color="#E5E5E5"> late so I'm</font>

968
00:44:40,140 --> 00:44:44,220
going to to kind of skip over this this

969
00:44:42,509 --> 00:44:46,410
is<font color="#E5E5E5"> something you can this is just tools</font>

970
00:44:44,220 --> 00:44:48,808
that I find very interesting and useful

971
00:44:46,410 --> 00:44:52,049
and volatility so you can come back to

972
00:44:48,809 --> 00:44:54,089
this from my slide deck and then

973
00:44:52,049 --> 00:44:56,460
volatility there's a<font color="#E5E5E5"> lot of things that</font>

974
00:44:54,089 --> 00:44:58,170
<font color="#E5E5E5">it will extract but mainly you're going</font>

975
00:44:56,460 --> 00:45:00,599
to be pulling<font color="#CCCCCC"> dll's you'll be pulling</font>

976
00:44:58,170 --> 00:45:02,670
processes sometimes if you pull a

977
00:45:00,599 --> 00:45:06,509
process that's in memory you may need to

978
00:45:02,670 --> 00:45:08,670
reconstruct the<font color="#CCCCCC"> the import table but</font>

979
00:45:06,509 --> 00:45:10,140
there's techniques to do that but you

980
00:45:08,670 --> 00:45:11,819
want it you<font color="#E5E5E5"> basically want to take any</font>

981
00:45:10,140 --> 00:45:16,140
of those executables and then run them

982
00:45:11,819 --> 00:45:17,940
through through cuckoo you may get<font color="#CCCCCC"> URLs</font>

983
00:45:16,140 --> 00:45:22,348
one of the<font color="#E5E5E5"> things as cool as volatility</font>

984
00:45:17,940 --> 00:45:24,960
can look at your internet explorer visit

985
00:45:22,349 --> 00:45:27,269
history so kind of scary but also you

986
00:45:24,960 --> 00:45:29,849
can pull<font color="#E5E5E5"> urls that that have been</font>

987
00:45:27,269 --> 00:45:33,629
visited there so you might<font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to if</font>

988
00:45:29,849 --> 00:45:35,670
you had a memory image from a you know

989
00:45:33,630 --> 00:45:38,789
incident response of a user and they

990
00:45:35,670 --> 00:45:41,970
clicked on a<font color="#CCCCCC"> drive-by</font><font color="#E5E5E5"> now you can</font>

991
00:45:38,789 --> 00:45:44,430
collect that<font color="#E5E5E5"> drive-by URL you know</font>

992
00:45:41,970 --> 00:45:46,890
forensic<font color="#CCCCCC"> Lee collected from that that</font>

993
00:45:44,430 --> 00:45:50,730
<font color="#CCCCCC">workstation</font><font color="#E5E5E5"> and then you can visit it</font>

994
00:45:46,890 --> 00:45:54,390
using thug so I want to tie all of this

995
00:45:50,730 --> 00:45:56,849
together and so that<font color="#CCCCCC"> I hope this is not</font>

996
00:45:54,390 --> 00:45:58,950
<font color="#CCCCCC">too much spaghetti to look at but I'll</font>

997
00:45:56,849 --> 00:46:01,500
kind of explain it here so you start

998
00:45:58,950 --> 00:46:04,230
<font color="#CCCCCC">with a file you upload the</font><font color="#E5E5E5"> file to</font>

999
00:46:01,500 --> 00:46:06,420
cuckoo sandbox it performs static

1000
00:46:04,230 --> 00:46:09,390
analysis<font color="#E5E5E5"> it then performs dynamic</font>

1001
00:46:06,420 --> 00:46:11,759
analysis at this<font color="#E5E5E5"> point the output</font><font color="#CCCCCC"> from</font>

1002
00:46:09,390 --> 00:46:13,859
cuckoo you want to upload<font color="#CCCCCC"> to a threat</font>

1003
00:46:11,759 --> 00:46:16,259
intelligence platform and then if it

1004
00:46:13,859 --> 00:46:19,619
collects a URL or if it collects Pee cap

1005
00:46:16,259 --> 00:46:20,359
you want to start and send those to thug

1006
00:46:19,619 --> 00:46:23,989
<font color="#E5E5E5">it's</font>

1007
00:46:20,359 --> 00:46:27,259
and a URL to thug send the pcap to bro

1008
00:46:23,989 --> 00:46:29,329
and then start their analysis process so

1009
00:46:27,259 --> 00:46:31,849
you process the URL you process the pcap

1010
00:46:29,329 --> 00:46:34,339
you want to have some logic in your

1011
00:46:31,849 --> 00:46:36,890
queuing system where if you have seen a

1012
00:46:34,339 --> 00:46:39,710
file before you don't need<font color="#E5E5E5"> to send it</font>

1013
00:46:36,890 --> 00:46:41,808
over here again so if it has been<font color="#CCCCCC"> seen</font>

1014
00:46:39,710 --> 00:46:43,009
before you want to send the output of

1015
00:46:41,809 --> 00:46:45,170
that to your threat intelligence

1016
00:46:43,009 --> 00:46:48,049
platform and then send if you have not

1017
00:46:45,170 --> 00:46:50,660
<font color="#CCCCCC">seen it before you want to analyze it</font>

1018
00:46:48,049 --> 00:46:53,630
using cuckoo sandbox I know<font color="#E5E5E5"> that</font>

1019
00:46:50,660 --> 00:46:55,489
volatility is not in this set of swim

1020
00:46:53,630 --> 00:46:58,190
lanes that's because if you add

1021
00:46:55,489 --> 00:47:01,160
volatility it just all looks<font color="#E5E5E5"> like</font>

1022
00:46:58,190 --> 00:47:03,259
complete spaghetti but what I've done is

1023
00:47:01,160 --> 00:47:04,730
I've separated volatility out and you

1024
00:47:03,259 --> 00:47:07,489
can on your own kind of logically

1025
00:47:04,730 --> 00:47:10,640
combine these two but visually it just

1026
00:47:07,489 --> 00:47:13,779
<font color="#E5E5E5">doesn't work very well so volatility you</font>

1027
00:47:10,640 --> 00:47:16,788
upload<font color="#CCCCCC"> the memory image from volatility</font>

1028
00:47:13,779 --> 00:47:19,489
does memory<font color="#E5E5E5"> analysis if you've seen a</font>

1029
00:47:16,789 --> 00:47:21,380
URL and you know this<font color="#CCCCCC"> is basically the</font>

1030
00:47:19,489 --> 00:47:24,049
<font color="#CCCCCC">same logic over and over if you've seen</font>

1031
00:47:21,380 --> 00:47:25,400
it then take that analysis add it to

1032
00:47:24,049 --> 00:47:27,470
your threat intelligence platform if you

1033
00:47:25,400 --> 00:47:31,460
haven't seen it before then<font color="#E5E5E5"> and analyze</font>

1034
00:47:27,470 --> 00:47:33,730
it with the next open<font color="#E5E5E5"> source tool so</font>

1035
00:47:31,460 --> 00:47:35,839
when you're orchestrating this and

1036
00:47:33,730 --> 00:47:38,150
automating it there's a number<font color="#E5E5E5"> of</font>

1037
00:47:35,839 --> 00:47:41,720
<font color="#CCCCCC">different ways</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you can have your</font>

1038
00:47:38,150 --> 00:47:44,059
message queue set up rabbitmq and Redis

1039
00:47:41,720 --> 00:47:49,029
so Redis is a memory key value store

1040
00:47:44,059 --> 00:47:52,940
database excuse me and then<font color="#E5E5E5"> zeromq is a</font>

1041
00:47:49,029 --> 00:47:55,549
distributed very quick memory not memory

1042
00:47:52,940 --> 00:47:59,150
<font color="#E5E5E5">I'm sorry a message queue I prefer</font>

1043
00:47:55,549 --> 00:48:01,069
zeromq it's very clean very fast one of

1044
00:47:59,150 --> 00:48:02,690
the things again like I've beaten my

1045
00:48:01,069 --> 00:48:04,849
head against certain things in the past

1046
00:48:02,690 --> 00:48:07,700
and I don't want you<font color="#CCCCCC"> two to do that</font>

1047
00:48:04,849 --> 00:48:11,059
yourself and so when you're transferring

1048
00:48:07,700 --> 00:48:13,189
files among different systems you want

1049
00:48:11,059 --> 00:48:16,819
to use the message<font color="#E5E5E5"> queue to tell that</font>

1050
00:48:13,190 --> 00:48:18,019
next tool I have<font color="#E5E5E5"> something ready for you</font>

1051
00:48:16,819 --> 00:48:20,420
but you<font color="#E5E5E5"> don't want to use the message</font>

1052
00:48:18,019 --> 00:48:22,609
<font color="#E5E5E5">queue to transmit the file itself you</font>

1053
00:48:20,420 --> 00:48:24,529
want to use engine X or a patchy or

1054
00:48:22,609 --> 00:48:27,288
something like that and have the tool

1055
00:48:24,529 --> 00:48:30,799
drop the file into engine X and then the

1056
00:48:27,289 --> 00:48:32,660
message queue says pick up<font color="#E5E5E5"> file XYZ at</font>

1057
00:48:30,799 --> 00:48:35,720
this URL and then

1058
00:48:32,660 --> 00:48:38,899
have it collect the file using HTTP or

1059
00:48:35,720 --> 00:48:41,029
ftp or<font color="#E5E5E5"> whichever you want to use because</font>

1060
00:48:38,900 --> 00:48:44,420
those protocols are built to transfer

1061
00:48:41,030 --> 00:48:48,230
files it's it's cleaner easier and less

1062
00:48:44,420 --> 00:48:50,210
headache and then<font color="#CCCCCC"> i use elasticsearch to</font>

1063
00:48:48,230 --> 00:48:53,869
pull all of the data and kind<font color="#E5E5E5"> of you</font>

1064
00:48:50,210 --> 00:48:57,289
know collect it and so cuckoo cuckoo

1065
00:48:53,869 --> 00:49:02,299
modified has a elasticsearch output thug

1066
00:48:57,289 --> 00:49:04,910
has native elasticsearch export bro you

1067
00:49:02,299 --> 00:49:07,700
can export logs in JSON format there's a

1068
00:49:04,910 --> 00:49:10,848
line in<font color="#E5E5E5"> your local bro which tells bro</font>

1069
00:49:07,700 --> 00:49:13,129
to create<font color="#CCCCCC"> JSON format logs and then</font>

1070
00:49:10,849 --> 00:49:16,010
volatility as well there's a switch in

1071
00:49:13,130 --> 00:49:17,990
each one of<font color="#E5E5E5"> the when you run vol there's</font>

1072
00:49:16,010 --> 00:49:22,010
a switch that says I<font color="#E5E5E5"> would like the</font>

1073
00:49:17,990 --> 00:49:23,720
output to be in JSON format and then<font color="#E5E5E5"> I</font>

1074
00:49:22,010 --> 00:49:28,460
prefer to glue everything together with

1075
00:49:23,720 --> 00:49:30,649
Python 3 Python 2 is dead<font color="#E5E5E5"> I hate it it's</font>

1076
00:49:28,460 --> 00:49:33,619
gone and especially like the way that it

1077
00:49:30,650 --> 00:49:37,670
that it handles utf-8 and character

1078
00:49:33,619 --> 00:49:40,480
encoding stick to Python 3 so do<font color="#E5E5E5"> you</font>

1079
00:49:37,670 --> 00:49:40,480
have any questions

