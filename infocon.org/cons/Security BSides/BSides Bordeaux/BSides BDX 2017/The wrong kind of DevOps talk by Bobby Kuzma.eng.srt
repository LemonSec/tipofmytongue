1
00:00:02,639 --> 00:00:07,600
hello everyone thank you for having me

2
00:00:06,130 --> 00:00:09,309
and for some reason your immigration

3
00:00:07,600 --> 00:00:10,629
folks actually let me in the country

4
00:00:09,309 --> 00:00:13,209
which was kind of a mistake on their

5
00:00:10,630 --> 00:00:18,220
part but you know I'm not really going

6
00:00:13,210 --> 00:00:21,130
to question that too much so a couple of

7
00:00:18,220 --> 00:00:24,189
things as we get going with this this

8
00:00:21,130 --> 00:00:27,070
talk is kind of a lessons learned and

9
00:00:24,189 --> 00:00:30,070
tools overview for what I've adopted to

10
00:00:27,070 --> 00:00:32,580
do keep the capture the flag environment

11
00:00:30,070 --> 00:00:35,950
that I run for core security and it's a

12
00:00:32,580 --> 00:00:38,829
simulated healthcare enterprise network

13
00:00:35,950 --> 00:00:41,320
shows a lot of vm's a lot of

14
00:00:38,829 --> 00:00:44,050
configuration details a bunch of stuff

15
00:00:41,320 --> 00:00:46,570
that gets not completely to hell every

16
00:00:44,050 --> 00:00:51,370
time folks play on it so it has to be

17
00:00:46,570 --> 00:00:53,469
rebuilt so this is not about using

18
00:00:51,370 --> 00:00:55,750
DevOps in production if it is I'm sorry

19
00:00:53,469 --> 00:00:59,110
if you've got experience using DevOps in

20
00:00:55,750 --> 00:01:00,550
production you can go take a nap and in

21
00:00:59,110 --> 00:01:02,620
keeping in my fine tradition of

22
00:01:00,550 --> 00:01:05,319
providing my leadership team with

23
00:01:02,620 --> 00:01:07,119
plausible deniability this material has

24
00:01:05,319 --> 00:01:12,759
not been approved by marketing or any

25
00:01:07,119 --> 00:01:16,180
other responsible adult yeah you know

26
00:01:12,760 --> 00:01:20,740
where that's gonna go so hi I'm Bobby

27
00:01:16,180 --> 00:01:23,049
Kuzma I am a security researcher and

28
00:01:20,740 --> 00:01:25,949
product evangelist for course security

29
00:01:23,049 --> 00:01:28,659
so I break things I talk to people I

30
00:01:25,950 --> 00:01:38,020
rack up way too many nights in hotels a

31
00:01:28,659 --> 00:01:41,290
year so hi I'm Bobby and I'm a hacker so

32
00:01:38,020 --> 00:01:43,600
one of the things that came up as I

33
00:01:41,290 --> 00:01:45,610
started doing capture-the-flag events

34
00:01:43,600 --> 00:01:48,130
and this started from an ISS a chapter

35
00:01:45,610 --> 00:01:49,840
going hey Bobby can you build us a like

36
00:01:48,130 --> 00:01:54,820
fake healthcare environment for us to go

37
00:01:49,840 --> 00:02:01,149
 with and they're like like okay so

38
00:01:54,820 --> 00:02:04,949
I built it by hand so this was kind of a

39
00:02:01,149 --> 00:02:07,149
a road block for me because our

40
00:02:04,950 --> 00:02:09,820
executive team figured out I was doing

41
00:02:07,149 --> 00:02:11,890
it and they decided hey you could take

42
00:02:09,820 --> 00:02:15,040
that to other places and we could use

43
00:02:11,890 --> 00:02:16,600
that and it could be marketing and we

44
00:02:15,040 --> 00:02:18,579
could expose people to that

45
00:02:16,600 --> 00:02:23,519
and we want you doing like three or four

46
00:02:18,580 --> 00:02:28,690
of them a week I'm like really

47
00:02:23,520 --> 00:02:31,090
so before I let the door slam on that

48
00:02:28,690 --> 00:02:33,720
like okay so let's let's think about how

49
00:02:31,090 --> 00:02:36,790
we can do this we can start with just

50
00:02:33,720 --> 00:02:38,230
snapshotting the things right except if

51
00:02:36,790 --> 00:02:41,140
you don't run them for a while windows

52
00:02:38,230 --> 00:02:44,670
gets big rot and trust relationships

53
00:02:41,140 --> 00:02:48,399
blow up and you know then you have those

54
00:02:44,670 --> 00:02:50,829
folks that will go to two separate

55
00:02:48,400 --> 00:02:53,700
events within a six hour drive and if

56
00:02:50,830 --> 00:02:57,010
you don't change all the flags you know

57
00:02:53,700 --> 00:03:00,940
you ain't cheating me in trying right so

58
00:02:57,010 --> 00:03:03,480
you end up kind of thinking like okay so

59
00:03:00,940 --> 00:03:05,859
I could ask IT for help with this but I

60
00:03:03,480 --> 00:03:10,269
don't want to wait six months for them

61
00:03:05,860 --> 00:03:11,920
to even look at the ticket so following

62
00:03:10,270 --> 00:03:19,270
my traditional problem-solving

63
00:03:11,920 --> 00:03:20,529
methodology I did it myself so you know

64
00:03:19,270 --> 00:03:22,150
when we think about DevOps

65
00:03:20,530 --> 00:03:24,160
yeah normally you're thinking about

66
00:03:22,150 --> 00:03:26,610
doing the same things over and over and

67
00:03:24,160 --> 00:03:30,340
over again really really quickly so that

68
00:03:26,610 --> 00:03:32,860
there's no you know humans screwing it

69
00:03:30,340 --> 00:03:34,000
up in different ways every time you know

70
00:03:32,860 --> 00:03:36,790
we want consistency we want

71
00:03:34,000 --> 00:03:40,240
repeatability all that fun stuff so when

72
00:03:36,790 --> 00:03:41,890
we're building a lab network and it

73
00:03:40,240 --> 00:03:43,450
doesn't have to be for like you capture

74
00:03:41,890 --> 00:03:45,519
the pipe this could be something that

75
00:03:43,450 --> 00:03:47,260
you're using for internal training for

76
00:03:45,520 --> 00:03:49,240
your team it could be something that

77
00:03:47,260 --> 00:03:54,280
you're using for skills development

78
00:03:49,240 --> 00:03:56,440
within a class or with a user group or

79
00:03:54,280 --> 00:03:58,300
passing it around amongst your buddies

80
00:03:56,440 --> 00:04:01,120
you don't want to be shipping you know

81
00:03:58,300 --> 00:04:03,210
multi-gigabyte VMs around across the

82
00:04:01,120 --> 00:04:08,970
internet or god forbid on you know

83
00:04:03,210 --> 00:04:11,770
sneakernet okay so our starting point is

84
00:04:08,970 --> 00:04:14,830
we got to build images right so we got

85
00:04:11,770 --> 00:04:17,260
to start somewhere with a base OS and

86
00:04:14,830 --> 00:04:20,650
all that fun stuff so there's a little

87
00:04:17,260 --> 00:04:22,210
bit of a philosophical question how many

88
00:04:20,649 --> 00:04:27,120
times can you do the same windows

89
00:04:22,210 --> 00:04:27,120
install before you go stark raving mad

90
00:04:29,250 --> 00:04:36,639
it's about 50 in my case before I

91
00:04:32,949 --> 00:04:38,979
required a little bit of psychiatric

92
00:04:36,639 --> 00:04:42,250
help

93
00:04:38,979 --> 00:04:44,860
and you know there was medication

94
00:04:42,250 --> 00:04:49,870
involved and getting through that

95
00:04:44,860 --> 00:04:52,990
particular phase of the bad so as it

96
00:04:49,870 --> 00:04:55,990
turns out because no problem in computer

97
00:04:52,990 --> 00:04:57,639
science or an IT ops has remained

98
00:04:55,990 --> 00:04:59,409
unsolved at this point it's just a

99
00:04:57,639 --> 00:05:01,270
matter of knowing what tools have been

100
00:04:59,409 --> 00:05:04,060
built by some other poor bastard and

101
00:05:01,270 --> 00:05:07,630
being able to bend them to fit what

102
00:05:04,060 --> 00:05:11,650
you're trying to do right so there's

103
00:05:07,630 --> 00:05:14,080
this lovely concept of immutability that

104
00:05:11,650 --> 00:05:16,568
the devops heads like using they don't

105
00:05:14,080 --> 00:05:21,039
like applying updates to things they

106
00:05:16,569 --> 00:05:22,810
like starting with an OS that they know

107
00:05:21,039 --> 00:05:24,789
what's there and then loading their

108
00:05:22,810 --> 00:05:26,710
stack on top of that and then when a new

109
00:05:24,789 --> 00:05:29,349
update comes out they don't apply an

110
00:05:26,710 --> 00:05:33,520
update to it god no they built a whole

111
00:05:29,349 --> 00:05:36,580
new OS image update that sucker up apply

112
00:05:33,520 --> 00:05:39,340
their stack and then burn down all of

113
00:05:36,580 --> 00:05:42,130
the other stuff okay so it's stand up to

114
00:05:39,340 --> 00:05:44,229
new infrastructure test it transfer the

115
00:05:42,130 --> 00:05:45,610
load shoot the old stuff in the back of

116
00:05:44,229 --> 00:05:47,830
the head you're done with it you don't

117
00:05:45,610 --> 00:05:50,229
need to worry about it you don't care at

118
00:05:47,830 --> 00:05:53,800
that point so we've got this

119
00:05:50,229 --> 00:05:55,900
immutability thing going on and you know

120
00:05:53,800 --> 00:05:58,930
it's not necessarily frozen in time but

121
00:05:55,900 --> 00:06:01,840
in my case because we're simulating a

122
00:05:58,930 --> 00:06:04,060
relatively moderately okay managed

123
00:06:01,840 --> 00:06:07,929
healthcare Network which means nothing's

124
00:06:04,060 --> 00:06:10,449
been patched in years I wouldn't want to

125
00:06:07,930 --> 00:06:12,250
put my medical data in there which is

126
00:06:10,449 --> 00:06:16,569
ironic because guess what I see that the

127
00:06:12,250 --> 00:06:18,580
EMR with my medical data so there's this

128
00:06:16,569 --> 00:06:23,319
lovely tool that's called packer and

129
00:06:18,580 --> 00:06:25,180
Packer is really really nice for

130
00:06:23,319 --> 00:06:29,069
building these base images without

131
00:06:25,180 --> 00:06:31,360
having to do all of that stuff now

132
00:06:29,069 --> 00:06:34,050
probably the most boring thing that you

133
00:06:31,360 --> 00:06:35,979
can do in your entire life is

134
00:06:34,050 --> 00:06:40,120
troubleshooting an automated Windows

135
00:06:35,979 --> 00:06:41,370
install because it's we're going to

136
00:06:40,120 --> 00:06:42,360
tweak align the config and

137
00:06:41,370 --> 00:06:44,280
we're gonna run it and then we're going

138
00:06:42,360 --> 00:06:46,080
to go grab a beer and then it's going to

139
00:06:44,280 --> 00:06:47,638
abort out because something didn't work

140
00:06:46,080 --> 00:06:48,810
and then we're gonna tweak the line a

141
00:06:47,639 --> 00:06:51,120
little bit more and then we're gonna run

142
00:06:48,810 --> 00:06:52,560
it again and so on and so forth which is

143
00:06:51,120 --> 00:06:56,070
how I got away with buying a lot of

144
00:06:52,560 --> 00:07:00,210
really really fast SSD storage because

145
00:06:56,070 --> 00:07:03,719
all of this stuff io bound you know it's

146
00:07:00,210 --> 00:07:05,969
it's a thing so Packer uses json-based

147
00:07:03,720 --> 00:07:07,680
configs and there's three different

148
00:07:05,970 --> 00:07:12,949
chunks of it that you have to worry

149
00:07:07,680 --> 00:07:15,090
about okay so you start out with

150
00:07:12,949 --> 00:07:18,240
builders and these are hypervisor

151
00:07:15,090 --> 00:07:20,989
specific so you end up having let's say

152
00:07:18,240 --> 00:07:23,850
that you've got and and if you've got

153
00:07:20,990 --> 00:07:25,770
devs or different guys doing different

154
00:07:23,850 --> 00:07:27,479
types pop stuff you know some people are

155
00:07:25,770 --> 00:07:29,310
going to be using VirtualBox some people

156
00:07:27,479 --> 00:07:30,659
are going to be using hyper-v some

157
00:07:29,310 --> 00:07:32,639
people are gonna be using VMware

158
00:07:30,660 --> 00:07:36,570
Workstation some people are going to be

159
00:07:32,639 --> 00:07:37,889
using Xen why I don't know but you're

160
00:07:36,570 --> 00:07:40,800
gonna have all those different

161
00:07:37,889 --> 00:07:42,870
hypervisors in play and with Packer you

162
00:07:40,800 --> 00:07:45,419
can have one config that generates out

163
00:07:42,870 --> 00:07:47,400
each one of those different VM types

164
00:07:45,419 --> 00:07:50,700
separately so the builders take care of

165
00:07:47,400 --> 00:07:52,799
the hypervisor specific stuff then

166
00:07:50,700 --> 00:07:55,289
you've got provisioners which are common

167
00:07:52,800 --> 00:07:57,300
and these can be copying files into the

168
00:07:55,289 --> 00:08:00,120
VMS they could be running scripts we

169
00:07:57,300 --> 00:08:01,919
doing all kinds of fun things doing

170
00:08:00,120 --> 00:08:03,510
reboots because I mean you can't really

171
00:08:01,919 --> 00:08:08,130
configure a Windows box without at least

172
00:08:03,510 --> 00:08:11,430
45 reboots maybe maybe 60 it depends on

173
00:08:08,130 --> 00:08:13,139
the version yeah Linux - depending on

174
00:08:11,430 --> 00:08:15,990
how screwy the stuff that you're doing

175
00:08:13,139 --> 00:08:18,090
is and then once you've got these built

176
00:08:15,990 --> 00:08:20,430
you want to do things to these images

177
00:08:18,090 --> 00:08:24,530
that's where the post processors come

178
00:08:20,430 --> 00:08:27,240
into play so these will do things like

179
00:08:24,530 --> 00:08:29,010
defragging and compressing the VM so

180
00:08:27,240 --> 00:08:30,630
that they're going to take a minimal

181
00:08:29,010 --> 00:08:33,708
amount of space packaging up them up

182
00:08:30,630 --> 00:08:36,929
into virtual appliance files or

183
00:08:33,708 --> 00:08:39,478
packaging them up into boxes for vagrant

184
00:08:36,929 --> 00:08:42,779
okay vagrant is another one of those

185
00:08:39,479 --> 00:08:45,270
lovely tools that not a lot of people

186
00:08:42,779 --> 00:08:48,089
outside of like the dev space know a lot

187
00:08:45,270 --> 00:08:50,250
about but it's something that you should

188
00:08:48,089 --> 00:08:53,100
know about particularly if you end up

189
00:08:50,250 --> 00:08:54,660
screwing your box up fourteen Lee like I

190
00:08:53,100 --> 00:09:00,279
do

191
00:08:54,660 --> 00:09:02,439
IT doesn't like me so you know Packer

192
00:09:00,279 --> 00:09:04,270
it's like Packer build and then the

193
00:09:02,440 --> 00:09:05,920
Jason file name and then you go and walk

194
00:09:04,270 --> 00:09:10,270
away and then come back and you've got

195
00:09:05,920 --> 00:09:12,099
VMs that's it okay it's not this arcane

196
00:09:10,270 --> 00:09:13,890
set of commands that you've got to

197
00:09:12,100 --> 00:09:15,959
memorize to make this go it's just

198
00:09:13,890 --> 00:09:18,760
Packer

199
00:09:15,959 --> 00:09:21,430
what you're building that's it that's

200
00:09:18,760 --> 00:09:22,120
all you got to do now this gets us our

201
00:09:21,430 --> 00:09:24,819
base stuff

202
00:09:22,120 --> 00:09:29,350
now what if you're talking about wanting

203
00:09:24,820 --> 00:09:31,450
to spin up a lab type scenario on your

204
00:09:29,350 --> 00:09:34,350
machine itself let's say that you want

205
00:09:31,450 --> 00:09:38,709
to practice doing sequel injection

206
00:09:34,350 --> 00:09:41,170
attacks on a realistic stack and most

207
00:09:38,709 --> 00:09:42,790
people with a moderate clue about

208
00:09:41,170 --> 00:09:44,500
architecture are not going to be putting

209
00:09:42,790 --> 00:09:46,990
their database and their web tier on the

210
00:09:44,500 --> 00:09:50,970
same box so you need to separate those

211
00:09:46,990 --> 00:09:54,279
things out so we got lab on the machine

212
00:09:50,970 --> 00:09:57,310
vagrant is the lovely tool

213
00:09:54,279 --> 00:10:00,070
cross-platform it extracts away all of

214
00:09:57,310 --> 00:10:02,380
the nitty-gritty that you have

215
00:10:00,070 --> 00:10:06,540
to deal with with standing up virtual

216
00:10:02,380 --> 00:10:09,610
machines from you so it takes care of

217
00:10:06,540 --> 00:10:12,490
among other things this classic dev

218
00:10:09,610 --> 00:10:17,800
problem and the the classic dev problem

219
00:10:12,490 --> 00:10:19,500
is it works on my machine because you

220
00:10:17,800 --> 00:10:22,779
know you've got all of these

221
00:10:19,500 --> 00:10:27,130
dependencies that you can't reproduce

222
00:10:22,779 --> 00:10:31,540
from person to person or god forbid from

223
00:10:27,130 --> 00:10:33,209
dev to QA to staging to prod so

224
00:10:31,540 --> 00:10:35,709
everybody has a testing environment

225
00:10:33,209 --> 00:10:37,569
whether you know it or not just some of

226
00:10:35,709 --> 00:10:41,969
us are lucky enough to have a testing

227
00:10:37,570 --> 00:10:45,430
environment that isn't production so

228
00:10:41,970 --> 00:10:49,870
vagrant starts with this canned format

229
00:10:45,430 --> 00:10:51,609
for beginning with a base virtual

230
00:10:49,870 --> 00:10:54,850
machine it's called the box format and

231
00:10:51,610 --> 00:10:59,320
in your vagrant file and this is an

232
00:10:54,850 --> 00:11:02,260
example of one that I used so at

233
00:10:59,320 --> 00:11:03,880
blackhat we had shirts that had hacker

234
00:11:02,260 --> 00:11:04,610
recipes that we handed out at our booth

235
00:11:03,880 --> 00:11:07,370
and one

236
00:11:04,610 --> 00:11:10,040
those shirts had a blob of hex vomit on

237
00:11:07,370 --> 00:11:11,870
the back of it so it was actually it was

238
00:11:10,040 --> 00:11:13,579
shellcode that if you actually bothered

239
00:11:11,870 --> 00:11:15,410
running it it would connect up to a box

240
00:11:13,579 --> 00:11:16,699
and then drop some stuff on the machine

241
00:11:15,410 --> 00:11:18,199
and then tell you to come by the booth

242
00:11:16,700 --> 00:11:21,019
and talk to me and then I'd give you

243
00:11:18,200 --> 00:11:23,060
like a year's impact see no one actually

244
00:11:21,019 --> 00:11:24,920
bother doing it because I think folks at

245
00:11:23,060 --> 00:11:27,229
blackhat don't like you know trying to

246
00:11:24,920 --> 00:11:28,189
run random blobs of hex that they see on

247
00:11:27,230 --> 00:11:32,600
the shirt

248
00:11:28,190 --> 00:11:34,660
I don't know why but anyway this was the

249
00:11:32,600 --> 00:11:39,410
Deb environment that I used for that so

250
00:11:34,660 --> 00:11:43,550
we're pulling down a specific box so

251
00:11:39,410 --> 00:11:46,130
this is a canned Ubuntu box that is

252
00:11:43,550 --> 00:11:49,819
provided most of the flavors of the open

253
00:11:46,130 --> 00:11:51,079
source OS is there's pre-built boxes

254
00:11:49,820 --> 00:11:53,600
they're maintained by the community for

255
00:11:51,079 --> 00:11:55,489
Windows stuff you pretty much have to

256
00:11:53,600 --> 00:11:58,339
roll your own and then put it up on a

257
00:11:55,490 --> 00:12:00,170
private internal repo for that kind of

258
00:11:58,339 --> 00:12:01,610
thing but you know if you're rebuilding

259
00:12:00,170 --> 00:12:05,029
it with Packer if you're building them

260
00:12:01,610 --> 00:12:07,640
with Packer I'm using the eval ISOs then

261
00:12:05,029 --> 00:12:10,310
you know once a week you do a build and

262
00:12:07,640 --> 00:12:13,430
then you've got a 90 day bit with it so

263
00:12:10,310 --> 00:12:21,349
it's all all shiny and good so with this

264
00:12:13,430 --> 00:12:24,079
we grab our box we set a hostname we run

265
00:12:21,350 --> 00:12:26,149
a script on it to do actual provisioning

266
00:12:24,079 --> 00:12:29,050
when we set up the networking and what's

267
00:12:26,149 --> 00:12:31,430
cool about this is we can go and set up

268
00:12:29,050 --> 00:12:34,010
relatively complex network topologies

269
00:12:31,430 --> 00:12:35,660
you know just using the hypervisor

270
00:12:34,010 --> 00:12:37,699
that's on the machine whether it's

271
00:12:35,660 --> 00:12:41,769
virtual box or be a more workstation or

272
00:12:37,699 --> 00:12:44,899
whatever which makes life really really

273
00:12:41,769 --> 00:12:47,089
simple for this type of thing and then

274
00:12:44,899 --> 00:12:50,630
when you run it you end up typing

275
00:12:47,089 --> 00:12:52,070
vagrant up and then it goes and turns it

276
00:12:50,630 --> 00:12:54,170
might take a couple of minutes of s to

277
00:12:52,070 --> 00:12:56,600
download a box from somewhere otherwise

278
00:12:54,170 --> 00:13:00,949
it's just basically disk IO that's

279
00:12:56,600 --> 00:13:03,230
getting sucked down and it's really

280
00:13:00,949 --> 00:13:07,370
really straightforward and how

281
00:13:03,230 --> 00:13:11,329
straightforward is it well the kid can

282
00:13:07,370 --> 00:13:12,949
do it and has done it because I don't

283
00:13:11,329 --> 00:13:15,229
let her run a persistent minecraft

284
00:13:12,949 --> 00:13:17,680
server she has to stand it up on her

285
00:13:15,230 --> 00:13:18,850
laptop and that's how she's staying

286
00:13:17,680 --> 00:13:22,089
that's how she stands it up on her

287
00:13:18,850 --> 00:13:26,430
laptop as you know the home VM forms

288
00:13:22,089 --> 00:13:26,430
busy running other things like plex

289
00:13:28,649 --> 00:13:35,140
anyway so what if we want to actually

290
00:13:32,680 --> 00:13:37,449
deploy and configure on more complex

291
00:13:35,140 --> 00:13:40,029
things like we've got a you know ESX

292
00:13:37,450 --> 00:13:43,060
cluster or some other hypervisor we want

293
00:13:40,029 --> 00:13:44,350
to spin stuff up in AWS there's a lot of

294
00:13:43,060 --> 00:13:47,199
different ways that this stuff can be

295
00:13:44,350 --> 00:13:51,640
done so we come across this fundamental

296
00:13:47,200 --> 00:13:55,060
rule and that's scripting size because

297
00:13:51,640 --> 00:13:58,209
inevitably what started as a 5-line

298
00:13:55,060 --> 00:14:00,040
script for setting something out because

299
00:13:58,209 --> 00:14:02,109
you've got all of these different ways

300
00:14:00,040 --> 00:14:04,029
that it can go horribly wrong and

301
00:14:02,110 --> 00:14:07,360
inconsistent and you know that most

302
00:14:04,029 --> 00:14:11,470
recent OS patch breaks something in the

303
00:14:07,360 --> 00:14:16,800
middle of that you end up with like 2%

304
00:14:11,470 --> 00:14:20,550
actual work and 98% error handling and

305
00:14:16,800 --> 00:14:23,740
exception management so most

306
00:14:20,550 --> 00:14:26,050
provisioning scripts by the time they

307
00:14:23,740 --> 00:14:31,529
get to a certain level of complexity end

308
00:14:26,050 --> 00:14:35,439
up looking kind of like that you know or

309
00:14:31,529 --> 00:14:38,830
they start resembling you know the IKEA

310
00:14:35,440 --> 00:14:40,779
bit except you know all the labels have

311
00:14:38,830 --> 00:14:48,160
been removed because who the hell

312
00:14:40,779 --> 00:14:50,560
comments there's threads so there's this

313
00:14:48,160 --> 00:14:53,620
word that we went and we didn't quite

314
00:14:50,560 --> 00:14:56,319
invent it but we borrowed it okay

315
00:14:53,620 --> 00:15:01,779
we stole it from a totally unrelated

316
00:14:56,320 --> 00:15:05,380
area of computer science and it's a

317
00:15:01,779 --> 00:15:06,790
weird word idempotency so the simplest

318
00:15:05,380 --> 00:15:10,540
way I can explain this without a

319
00:15:06,790 --> 00:15:14,949
whiteboard and like 2 years worth of CS

320
00:15:10,540 --> 00:15:17,589
background is I want to declare that it

321
00:15:14,950 --> 00:15:19,360
shall look like this and I don't care

322
00:15:17,589 --> 00:15:22,570
how it gets there from wherever it

323
00:15:19,360 --> 00:15:23,110
starts but it must be like this when I'm

324
00:15:22,570 --> 00:15:26,230
done

325
00:15:23,110 --> 00:15:28,440
that's idempotence it so this is the

326
00:15:26,230 --> 00:15:31,660
declarative way of looking at it this is

327
00:15:28,440 --> 00:15:33,250
akin to saying okay

328
00:15:31,660 --> 00:15:35,439
here's the blueprint what it needs to

329
00:15:33,250 --> 00:15:40,990
look like when we're done I'll catch you

330
00:15:35,440 --> 00:15:42,670
later build it so there's this entire

331
00:15:40,990 --> 00:15:44,740
ecosystem of tools that have sprung up

332
00:15:42,670 --> 00:15:47,680
around this that have become again very

333
00:15:44,740 --> 00:15:49,450
popular in certain circles because guess

334
00:15:47,680 --> 00:15:53,290
what humans are expensive and humans

335
00:15:49,450 --> 00:15:57,940
break and quit and go stark raving mad

336
00:15:53,290 --> 00:16:01,180
so you know config management tools the

337
00:15:57,940 --> 00:16:05,830
big four in that space are puppet chef

338
00:16:01,180 --> 00:16:09,069
hands bolt and salt okay so this is

339
00:16:05,830 --> 00:16:14,340
almost lineage puppet in chef builds on

340
00:16:09,070 --> 00:16:14,340
top of Ruby which I don't want to learn

341
00:16:14,880 --> 00:16:19,720
hands will insult build some type of

342
00:16:16,960 --> 00:16:21,310
Python okay we use Python for all of our

343
00:16:19,720 --> 00:16:26,700
exploit code and impact I know Python

344
00:16:21,310 --> 00:16:29,829
that's cool the other thing is that

345
00:16:26,700 --> 00:16:32,320
puppet chef and salt all primarily

346
00:16:29,830 --> 00:16:35,110
require a binary be dropped on the

347
00:16:32,320 --> 00:16:38,230
target in order to do the thing so

348
00:16:35,110 --> 00:16:41,320
you've got to put an extra piece of

349
00:16:38,230 --> 00:16:43,900
software on this now I'm building

350
00:16:41,320 --> 00:16:47,740
systems that a bunch of hackers are

351
00:16:43,900 --> 00:16:51,130
going to screw with do I want to leave

352
00:16:47,740 --> 00:16:57,180
anything extra that I didn't plan on all

353
00:16:51,130 --> 00:16:59,830
those systems probably not so ansible

354
00:16:57,180 --> 00:17:04,240
it's evolution was entirely

355
00:16:59,830 --> 00:17:06,329
agentless so it wants an SSH or in the

356
00:17:04,240 --> 00:17:10,300
case of Windows boxes of win RM

357
00:17:06,329 --> 00:17:13,629
connection in order to perform its

358
00:17:10,300 --> 00:17:16,750
configuration actions now puppet chef

359
00:17:13,630 --> 00:17:19,990
and salt do have agentless modes they

360
00:17:16,750 --> 00:17:24,640
are not anywhere near as powerful as the

361
00:17:19,990 --> 00:17:27,699
agented mode and despite my somewhat

362
00:17:24,640 --> 00:17:31,090
flipped Ness about not wanting to learn

363
00:17:27,699 --> 00:17:32,860
Ruby I did actually do a POC with each

364
00:17:31,090 --> 00:17:33,370
of these platforms but we're settling on

365
00:17:32,860 --> 00:17:35,409
ansible

366
00:17:33,370 --> 00:17:37,510
turns out it's a lot harder to build a

367
00:17:35,410 --> 00:17:40,840
domain when you don't have anything to

368
00:17:37,510 --> 00:17:45,520
start with then programmatically then

369
00:17:40,840 --> 00:17:50,590
you would expect so in Anza Bowl

370
00:17:45,520 --> 00:17:52,389
it uses a format called llamo yet

371
00:17:50,590 --> 00:17:54,850
another markup language because we

372
00:17:52,390 --> 00:17:57,010
couldn't just use JSON or XML we have to

373
00:17:54,850 --> 00:18:02,760
go and pull something outside of our

374
00:17:57,010 --> 00:18:07,960
back size so you start with a series of

375
00:18:02,760 --> 00:18:09,340
tasks and play books and we start with

376
00:18:07,960 --> 00:18:10,899
where are we running it from well we're

377
00:18:09,340 --> 00:18:14,439
gonna run we're going to provision a VM

378
00:18:10,899 --> 00:18:16,870
first okay so we'll run this from the

379
00:18:14,440 --> 00:18:18,909
local ansible box and here's the

380
00:18:16,870 --> 00:18:21,129
beautiful thing about with the Packer

381
00:18:18,909 --> 00:18:23,710
thing I can actually build the ansible

382
00:18:21,130 --> 00:18:26,260
master box for a particular CTF instance

383
00:18:23,710 --> 00:18:28,809
with Packer and then just drop it into

384
00:18:26,260 --> 00:18:30,879
the environment booted up and then fire

385
00:18:28,809 --> 00:18:36,970
it off so I don't have to configure that

386
00:18:30,880 --> 00:18:38,770
by hand at all we go into our ESX clone

387
00:18:36,970 --> 00:18:41,409
out the appropriate VM set the network

388
00:18:38,770 --> 00:18:43,299
stuff and then downstream once it's

389
00:18:41,409 --> 00:18:46,659
started up we can start configuring

390
00:18:43,299 --> 00:18:48,399
things on this box and we don't

391
00:18:46,659 --> 00:18:50,950
configure them by saying you know

392
00:18:48,399 --> 00:18:55,899
you know install feature or add feature

393
00:18:50,950 --> 00:18:57,610
or whatever we do it by saying we want

394
00:18:55,899 --> 00:19:01,090
to have a feature we want to have gpmc

395
00:18:57,610 --> 00:19:03,158
and we want it to be present so when it

396
00:19:01,090 --> 00:19:05,770
runs it goes takes an inventory of the

397
00:19:03,159 --> 00:19:07,990
system looks at that looks at that thing

398
00:19:05,770 --> 00:19:09,730
goes ok is this feature installed if

399
00:19:07,990 --> 00:19:11,590
this feature is installed then it's

400
00:19:09,730 --> 00:19:15,190
already present we've met the state

401
00:19:11,590 --> 00:19:17,949
that's expected we move on otherwise it

402
00:19:15,190 --> 00:19:19,539
applies its own set of logic to figuring

403
00:19:17,950 --> 00:19:21,760
out how do I get from the current state

404
00:19:19,539 --> 00:19:24,129
not installed to the desired State

405
00:19:21,760 --> 00:19:27,908
installed and this can get pretty

406
00:19:24,130 --> 00:19:34,330
complex ok who here isn't ever had to

407
00:19:27,909 --> 00:19:36,159
install an exchange cluster ok this

408
00:19:34,330 --> 00:19:38,199
entire the entire process of building

409
00:19:36,159 --> 00:19:40,390
the domain and then installing exchange

410
00:19:38,200 --> 00:19:42,250
and then populating the users and then

411
00:19:40,390 --> 00:19:44,710
putting content in their mailboxes is

412
00:19:42,250 --> 00:19:46,210
all done through ansvil and our CTF

413
00:19:44,710 --> 00:19:48,250
environment we actually stand up an

414
00:19:46,210 --> 00:19:50,919
exchange cluster in the simulated

415
00:19:48,250 --> 00:19:52,419
healthcare work and some people have

416
00:19:50,919 --> 00:19:54,600
gotten it to send email to the outside

417
00:19:52,419 --> 00:19:54,600
world

418
00:19:55,090 --> 00:20:02,759
that's about as fun as you can expect

419
00:19:59,350 --> 00:20:05,639
when I start getting ransom demands

420
00:20:02,759 --> 00:20:11,320
usually in the form of beer

421
00:20:05,639 --> 00:20:13,840
so as ansible runs we have our task

422
00:20:11,320 --> 00:20:16,240
we've got some debug information and

423
00:20:13,840 --> 00:20:19,809
then we have some color coding yellow

424
00:20:16,240 --> 00:20:21,669
means it's changed things when we

425
00:20:19,809 --> 00:20:23,049
finished its recapped

426
00:20:21,669 --> 00:20:24,399
we have things that we're already good

427
00:20:23,049 --> 00:20:26,230
we have things that were changed and

428
00:20:24,399 --> 00:20:30,428
things that were failed move on move on

429
00:20:26,230 --> 00:20:32,379
move on okay so this is all cool Bobby

430
00:20:30,429 --> 00:20:37,509
but why should I care

431
00:20:32,379 --> 00:20:39,158
right well I care very much and my wife

432
00:20:37,509 --> 00:20:40,619
cares very much because I'm no longer

433
00:20:39,159 --> 00:20:43,360
spending a huge amount of time

434
00:20:40,619 --> 00:20:43,570
rebuilding this thing but what's it look

435
00:20:43,360 --> 00:20:48,998
like

436
00:20:43,570 --> 00:20:51,039
so in our CTF environment we have 20

437
00:20:48,999 --> 00:20:54,929
target VMs which include end-user

438
00:20:51,039 --> 00:20:59,590
workstations 5 infrastructure VMs and

439
00:20:54,929 --> 00:21:01,539
between 30 and 120 jump boxes that are

440
00:20:59,590 --> 00:21:04,779
what the players access the environment

441
00:21:01,539 --> 00:21:06,700
so we provide an isolation layer to keep

442
00:21:04,779 --> 00:21:09,070
them from frat reciting their laptops

443
00:21:06,700 --> 00:21:10,619
against each other because you know that

444
00:21:09,070 --> 00:21:14,200
that's gonna happen if you don't have

445
00:21:10,619 --> 00:21:16,990
controls against that 1,300 step

446
00:21:14,200 --> 00:21:20,919
checklist yeah I don't know about you

447
00:21:16,990 --> 00:21:23,830
but my eyes start crossing at about 200

448
00:21:20,919 --> 00:21:25,840
steps and then I start skipping them

449
00:21:23,830 --> 00:21:27,759
which means that things don't work

450
00:21:25,840 --> 00:21:30,158
downstream which means I have to go back

451
00:21:27,759 --> 00:21:32,440
which means I have to start it again so

452
00:21:30,159 --> 00:21:34,990
turning this environment over whisking

453
00:21:32,440 --> 00:21:37,919
was taking like basically a workweek

454
00:21:34,990 --> 00:21:41,529
with me in front of the machine and

455
00:21:37,919 --> 00:21:44,019
basically 70 to 80 hours of physical

456
00:21:41,529 --> 00:21:46,779
wall plot time assuming everything was

457
00:21:44,019 --> 00:21:51,129
optimal at that point to take the

458
00:21:46,779 --> 00:21:56,379
environment from nothing to fully ready

459
00:21:51,129 --> 00:21:58,389
to do an event with what you know I like

460
00:21:56,379 --> 00:22:01,360
not working but I'd prefer that my not

461
00:21:58,389 --> 00:22:05,049
working be you know relaxing not working

462
00:22:01,360 --> 00:22:06,490
you know hacking on something not not

463
00:22:05,049 --> 00:22:08,929
working because I'm sitting here

464
00:22:06,490 --> 00:22:10,820
watching a progress bar move slow

465
00:22:08,929 --> 00:22:12,200
to the right yeah this isn't I'm not

466
00:22:10,820 --> 00:22:15,730
doing a forensic investigation or

467
00:22:12,200 --> 00:22:18,019
anything where I can build that time so

468
00:22:15,730 --> 00:22:20,240
when we do our Packer builds we're

469
00:22:18,019 --> 00:22:24,620
building various flavors of Ubuntu and

470
00:22:20,240 --> 00:22:29,320
CentOS Windows 7 Windows 10 servers 2008

471
00:22:24,620 --> 00:22:32,149
r2 2012 r2 building the in zaboo box I

472
00:22:29,320 --> 00:22:34,100
omitted we've got a 2016 box which is

473
00:22:32,149 --> 00:22:35,570
what the scoreboard runs launches good

474
00:22:34,100 --> 00:22:39,529
god I want to make sure that things on

475
00:22:35,570 --> 00:22:43,158
the latest code yes people have popped

476
00:22:39,529 --> 00:22:45,799
the scoreboard yes you get a special

477
00:22:43,159 --> 00:22:48,279
prize when you pop our scoreboard we

478
00:22:45,799 --> 00:22:50,870
don't let you get all the flags that way

479
00:22:48,279 --> 00:22:52,760
that's cheating I appreciate that kind

480
00:22:50,870 --> 00:22:55,250
of cheating but you know it goes against

481
00:22:52,760 --> 00:22:58,850
the spirit take 60 to 70 minutes on this

482
00:22:55,250 --> 00:23:03,019
laptop to build all those VMs that's it

483
00:22:58,850 --> 00:23:04,668
I can do this pull down a github repo as

484
00:23:03,019 --> 00:23:07,610
long as Packers on the box and I've got

485
00:23:04,669 --> 00:23:09,190
a decent internet connection that

486
00:23:07,610 --> 00:23:11,449
includes the download through the ISOs

487
00:23:09,190 --> 00:23:14,690
60 or 70 minutes it can actually

488
00:23:11,450 --> 00:23:18,320
parallel a lot of that stuff once we do

489
00:23:14,690 --> 00:23:20,269
the deploy it spins up the VMS it starts

490
00:23:18,320 --> 00:23:21,769
building the domain installs and

491
00:23:20,269 --> 00:23:24,320
configures the baseline software it

492
00:23:21,769 --> 00:23:26,240
drops the flags builds the users it

493
00:23:24,320 --> 00:23:28,039
takes about two two and a half hours

494
00:23:26,240 --> 00:23:29,659
assuming I haven't screwed with any of

495
00:23:28,039 --> 00:23:32,120
the scripts which I typically screw the

496
00:23:29,659 --> 00:23:34,429
scripts so there's usually at least one

497
00:23:32,120 --> 00:23:35,918
oh well that didn't work let's re-roll

498
00:23:34,429 --> 00:23:42,799
that bet

499
00:23:35,919 --> 00:23:45,080
so going from 80 hours with a full work

500
00:23:42,799 --> 00:23:47,389
we could me in front of it - I can do

501
00:23:45,080 --> 00:23:49,039
this in the evening before I fly out the

502
00:23:47,389 --> 00:23:52,459
following morning to the next event site

503
00:23:49,039 --> 00:23:53,450
that's not bad that's good that's a

504
00:23:52,460 --> 00:23:56,299
pretty good good and reasonable

505
00:23:53,450 --> 00:23:58,850
improvement and I'm not having to schlep

506
00:23:56,299 --> 00:24:04,940
hundreds of gigs worth of VM images

507
00:23:58,850 --> 00:24:08,449
around with this the base code that I

508
00:24:04,940 --> 00:24:10,370
have to start with including like Packer

509
00:24:08,450 --> 00:24:13,460
and everything is under 500 Meg's and

510
00:24:10,370 --> 00:24:15,768
it's mostly yeah me and more workstation

511
00:24:13,460 --> 00:24:19,159
the hypervisor installers all that crap

512
00:24:15,769 --> 00:24:22,170
the actual config code that's behind

513
00:24:19,159 --> 00:24:25,740
this is under met under met

514
00:24:22,170 --> 00:24:28,230
and put it up on github version control

515
00:24:25,740 --> 00:24:32,160
so I can share this with my colleagues

516
00:24:28,230 --> 00:24:34,650
if using the same same bets our support

517
00:24:32,160 --> 00:24:39,840
team if they're having issues with a

518
00:24:34,650 --> 00:24:41,700
particular behavior I can build them a

519
00:24:39,840 --> 00:24:43,290
quickie PSE showing yes the product

520
00:24:41,700 --> 00:24:45,900
works as its supposed to it's something

521
00:24:43,290 --> 00:24:47,760
weird within the target environment and

522
00:24:45,900 --> 00:24:49,980
they can share that with the customer

523
00:24:47,760 --> 00:24:51,810
and have them demonstrate but yes it

524
00:24:49,980 --> 00:24:56,910
does work there's something jacked with

525
00:24:51,810 --> 00:24:58,040
your your space so you know what it

526
00:24:56,910 --> 00:25:01,170
boils down to

527
00:24:58,040 --> 00:25:04,440
at peak I'm running two or three events

528
00:25:01,170 --> 00:25:09,720
a week in different time zones with us

529
00:25:04,440 --> 00:25:13,460
then and because the majority of hotels

530
00:25:09,720 --> 00:25:16,230
their internet sucks can't do it in AWS

531
00:25:13,460 --> 00:25:19,440
we bring hardware locally it's the best

532
00:25:16,230 --> 00:25:21,030
best experience so you know I'm

533
00:25:19,440 --> 00:25:23,940
typically shipping a pallet around

534
00:25:21,030 --> 00:25:28,080
within the US and I've got three of them

535
00:25:23,940 --> 00:25:29,760
so we rotate through international stuff

536
00:25:28,080 --> 00:25:35,159
it all fits in a pelican that I can

537
00:25:29,760 --> 00:25:37,800
carry on which makes customs fun I have

538
00:25:35,160 --> 00:25:40,260
paperwork really but that with that

539
00:25:37,800 --> 00:25:44,280
quick turnaround and those types you

540
00:25:40,260 --> 00:25:46,050
know that type of cadence we you know

541
00:25:44,280 --> 00:25:48,540
one of the things I'm I'm looking at

542
00:25:46,050 --> 00:25:50,580
with this like why are like more

543
00:25:48,540 --> 00:25:53,820
organizations not using this type of

544
00:25:50,580 --> 00:25:56,280
thing for infrastructure stuff and at

545
00:25:53,820 --> 00:26:03,030
this point I have one conclusion that I

546
00:25:56,280 --> 00:26:04,500
have to be able to draw from that why

547
00:26:03,030 --> 00:26:11,460
are you doing things that you can

548
00:26:04,500 --> 00:26:14,160
automate why I get it like if you have

549
00:26:11,460 --> 00:26:16,290
to use older Windows environments you

550
00:26:14,160 --> 00:26:17,970
know up until Server 2008 r2 Microsoft

551
00:26:16,290 --> 00:26:19,470
had really brought the concept that

552
00:26:17,970 --> 00:26:23,700
people might want to configure things

553
00:26:19,470 --> 00:26:26,880
from the can line so there's a reason

554
00:26:23,700 --> 00:26:30,120
why we only use from there forward in

555
00:26:26,880 --> 00:26:30,690
the environment but it's it's one of

556
00:26:30,120 --> 00:26:35,389
those things

557
00:26:30,690 --> 00:26:35,390
so with that ooh

558
00:26:35,760 --> 00:26:42,290
at 30 minutes so with that does anyone

559
00:26:39,930 --> 00:26:42,290
have any questions

560
00:26:43,010 --> 00:26:58,860
god yes sir no I want the I want the

561
00:26:56,370 --> 00:27:03,030
attack surface available because that's

562
00:26:58,860 --> 00:27:06,449
a I don't encounter core in a lot of

563
00:27:03,030 --> 00:27:10,460
production environments so you know this

564
00:27:06,450 --> 00:27:13,500
is designed to be a fairly realistic

565
00:27:10,460 --> 00:27:16,110
moderately mismanaged enterprise

566
00:27:13,500 --> 00:27:19,770
organization and all the vulnerabilities

567
00:27:16,110 --> 00:27:21,240
that I deliberately left in are things

568
00:27:19,770 --> 00:27:25,410
that I've encountered in the last three

569
00:27:21,240 --> 00:27:27,030
years on pen tests so you know the core

570
00:27:25,410 --> 00:27:29,630
isn't something I encounter a lot and

571
00:27:27,030 --> 00:27:32,790
realistically the time savings on that

572
00:27:29,630 --> 00:27:35,550
is not significant enough to be worth

573
00:27:32,790 --> 00:27:41,600
the change in the the user experience on

574
00:27:35,550 --> 00:27:44,700
the playthroughs anyone else

575
00:27:41,600 --> 00:27:45,459
cool awesome thank you very much for

576
00:27:44,700 --> 00:27:48,729
having me

577
00:27:45,460 --> 00:27:48,729
[Applause]

