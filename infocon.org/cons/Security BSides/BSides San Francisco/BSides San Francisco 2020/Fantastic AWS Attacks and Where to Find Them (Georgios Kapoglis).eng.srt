1
00:00:00,000 --> 00:00:05,069
due to technical difficulties a portion

2
00:00:02,520 --> 00:00:06,779
of this presentation was not recorded we

3
00:00:05,069 --> 00:00:07,699
are joining the program already in

4
00:00:06,779 --> 00:00:11,790
progress

5
00:00:07,700 --> 00:00:15,450
alright oh okay

6
00:00:11,790 --> 00:00:18,750
the tactics essentially are a goal of

7
00:00:15,450 --> 00:00:21,240
the attacker like based on the step of

8
00:00:18,750 --> 00:00:23,220
the acute saying the attacker is the

9
00:00:21,240 --> 00:00:24,900
goal might be the initial axis right or

10
00:00:23,220 --> 00:00:28,198
the goal might be to establish

11
00:00:24,900 --> 00:00:31,049
persistence and then the drop down is a

12
00:00:28,199 --> 00:00:33,899
specific technique being used for that

13
00:00:31,050 --> 00:00:36,870
particular attack so actually this is

14
00:00:33,899 --> 00:00:41,340
pretty recent we didn't have a cloud

15
00:00:36,870 --> 00:00:43,440
matrix as before October but October as

16
00:00:41,340 --> 00:00:45,329
you see over ninth this year might have

17
00:00:43,440 --> 00:00:47,309
actually published this it's a really

18
00:00:45,329 --> 00:00:50,160
good start and I really want to actually

19
00:00:47,309 --> 00:00:54,629
contribute to build it more so jamming

20
00:00:50,160 --> 00:00:58,140
writing the code that you see with p1 1

21
00:00:54,629 --> 00:01:00,390
9 0 or the T 1 1 1 1 3 3 6 is

22
00:00:58,140 --> 00:01:04,530
essentially the reference code to the

23
00:01:00,390 --> 00:01:06,990
attack matrix to be attack matrix and is

24
00:01:04,530 --> 00:01:09,689
a we're gonna go through it and I'm

25
00:01:06,990 --> 00:01:14,310
gonna give you some of the attacks that

26
00:01:09,689 --> 00:01:15,630
we see based on the the tactic and then

27
00:01:14,310 --> 00:01:16,890
a specific technique the specific

28
00:01:15,630 --> 00:01:19,380
technique is gonna be the specific

29
00:01:16,890 --> 00:01:21,330
reference code that you see so for

30
00:01:19,380 --> 00:01:23,880
initial axis I mean the first thing that

31
00:01:21,330 --> 00:01:25,530
you're gonna seen in in an attack it's

32
00:01:23,880 --> 00:01:27,780
gonna be initial axis right how they're

33
00:01:25,530 --> 00:01:30,689
gonna get in and what happens actually

34
00:01:27,780 --> 00:01:33,990
is that even though we might have the

35
00:01:30,689 --> 00:01:35,699
best tools in a cloud security to

36
00:01:33,990 --> 00:01:38,759
protect our environment we're still

37
00:01:35,700 --> 00:01:40,530
gonna have issues on a horse Bay on the

38
00:01:38,759 --> 00:01:42,360
host level so you're gonna see all the

39
00:01:40,530 --> 00:01:44,820
time are you're gonna see our CSS

40
00:01:42,360 --> 00:01:47,729
arrives you name it anything that you

41
00:01:44,820 --> 00:01:50,548
can get a code execution or a command

42
00:01:47,729 --> 00:01:52,950
line execution on a server can actually

43
00:01:50,549 --> 00:01:55,470
give you the initial foothold in the AWS

44
00:01:52,950 --> 00:01:58,740
account and how you do that

45
00:01:55,470 --> 00:02:01,380
actually such there's a new feature now

46
00:01:58,740 --> 00:02:05,009
for my W is that might that tries to

47
00:02:01,380 --> 00:02:07,530
stop that but right now it's a little

48
00:02:05,009 --> 00:02:09,509
bit slow in adoption and most of the

49
00:02:07,530 --> 00:02:12,030
people still use the version 1 of the

50
00:02:09,508 --> 00:02:14,100
metadata service and essentially if you

51
00:02:12,030 --> 00:02:16,080
can get a chimeric security on

52
00:02:14,100 --> 00:02:20,190
serve on a wet on an on a public-facing

53
00:02:16,080 --> 00:02:22,320
application then you can request the

54
00:02:20,190 --> 00:02:24,770
credentials the secure AWS security

55
00:02:22,320 --> 00:02:27,900
credentials for this particular account

56
00:02:24,770 --> 00:02:29,750
next we have a technique with through

57
00:02:27,900 --> 00:02:33,120
valid accounts which can be for example

58
00:02:29,750 --> 00:02:35,370
if you there are the having cases of

59
00:02:33,120 --> 00:02:38,190
people having exposed credentials over

60
00:02:35,370 --> 00:02:39,780
AWS in github repos or other places and

61
00:02:38,190 --> 00:02:42,990
then attack you can just grab these and

62
00:02:39,780 --> 00:02:45,780
just go in like a valid user then I have

63
00:02:42,990 --> 00:02:47,040
so the next up I have here it's based on

64
00:02:45,780 --> 00:02:49,680
the attack metrics framework it's

65
00:02:47,040 --> 00:02:52,019
persistence but I'm gonna skip it and

66
00:02:49,680 --> 00:02:53,610
I'm gonna come back to it because what I

67
00:02:52,020 --> 00:02:57,840
think is the next phase of the attack

68
00:02:53,610 --> 00:02:59,880
kill chain is discovery or

69
00:02:57,840 --> 00:03:00,840
reconnaissance you call it what you say

70
00:02:59,880 --> 00:03:02,820
what do you want to call it

71
00:03:00,840 --> 00:03:05,310
because right after when we see an

72
00:03:02,820 --> 00:03:07,440
attacker gaining credential access to

73
00:03:05,310 --> 00:03:10,560
our it'll use environment the next thing

74
00:03:07,440 --> 00:03:14,550
that we're gonna see is he more hair try

75
00:03:10,560 --> 00:03:16,860
to do discover in our environment try to

76
00:03:14,550 --> 00:03:18,240
release trolls try to see the specific

77
00:03:16,860 --> 00:03:20,130
role that they got what access they have

78
00:03:18,240 --> 00:03:22,020
because they don't know usually if it

79
00:03:20,130 --> 00:03:23,820
has got some AWS credentials and they

80
00:03:22,020 --> 00:03:25,650
try to figure out what can I do with

81
00:03:23,820 --> 00:03:27,420
this right they're not really sure what

82
00:03:25,650 --> 00:03:29,040
to do with this they're gonna do the

83
00:03:27,420 --> 00:03:31,290
account discovery the permissions group

84
00:03:29,040 --> 00:03:34,079
discovery and we map all of these in

85
00:03:31,290 --> 00:03:35,459
different techniques and you're gonna

86
00:03:34,080 --> 00:03:38,580
see why this important on the next

87
00:03:35,460 --> 00:03:41,730
session with discovery so next after

88
00:03:38,580 --> 00:03:44,010
discovery we have persistence and then

89
00:03:41,730 --> 00:03:46,260
what if you get access to an account

90
00:03:44,010 --> 00:03:48,810
that essentially you want to get

91
00:03:46,260 --> 00:03:50,370
different ways that you can access again

92
00:03:48,810 --> 00:03:51,690
or continue your access right you can

93
00:03:50,370 --> 00:03:53,430
create new accounts if you have the

94
00:03:51,690 --> 00:03:55,620
permissions you can attach existing

95
00:03:53,430 --> 00:03:57,690
policies and something are really cool

96
00:03:55,620 --> 00:03:59,580
also is that if you have the permissions

97
00:03:57,690 --> 00:04:02,460
to make changes to security groups you

98
00:03:59,580 --> 00:04:04,500
can essentially open up a specific port

99
00:04:02,460 --> 00:04:07,490
for you to open to get to access through

100
00:04:04,500 --> 00:04:11,670
you're attacking machine then the

101
00:04:07,490 --> 00:04:14,250
defensive vision I don't have a specific

102
00:04:11,670 --> 00:04:16,320
technique attached here because there

103
00:04:14,250 --> 00:04:18,180
was not one already in the matrix

104
00:04:16,320 --> 00:04:20,010
framework that they that matter have

105
00:04:18,180 --> 00:04:21,750
published and I'm planning actually to

106
00:04:20,010 --> 00:04:25,020
see how can I contribute to it to add

107
00:04:21,750 --> 00:04:27,240
this so if the attacker has the

108
00:04:25,020 --> 00:04:29,549
permissions and if there

109
00:04:27,240 --> 00:04:32,220
good at what they do they're gonna

110
00:04:29,550 --> 00:04:34,470
essentially stop try to stop logging and

111
00:04:32,220 --> 00:04:35,699
stop the security services like they're

112
00:04:34,470 --> 00:04:37,139
gonna stop cloud so we're gonna see what

113
00:04:35,699 --> 00:04:39,780
cultural ease right after they're gonna

114
00:04:37,139 --> 00:04:41,699
start guard duty if you have it because

115
00:04:39,780 --> 00:04:43,380
they don't want us to catch them and the

116
00:04:41,699 --> 00:04:45,449
last one cadet Alexis were here this SSL

117
00:04:43,380 --> 00:04:47,039
it goes maps back to the initial axis

118
00:04:45,449 --> 00:04:51,380
and it's the way how they're gonna get

119
00:04:47,039 --> 00:04:51,380
the metadata API to get the credentials

120
00:04:52,580 --> 00:04:55,979
brilliance creation essentially overlaps

121
00:04:54,720 --> 00:04:58,949
a little bit with persistence it's a

122
00:04:55,979 --> 00:05:01,169
little bit about the same techniques but

123
00:04:58,949 --> 00:05:02,909
I'm gonna go more about it on the

124
00:05:01,169 --> 00:05:05,039
detection side we talked about discovery

125
00:05:02,909 --> 00:05:06,900
and lastly detection last but not least

126
00:05:05,039 --> 00:05:09,360
right because this can be essentially

127
00:05:06,900 --> 00:05:11,219
the goals of the attacker I mean they

128
00:05:09,360 --> 00:05:13,860
can have other goals as well like an I

129
00:05:11,220 --> 00:05:16,409
don't know potentially have want to

130
00:05:13,860 --> 00:05:18,210
establish it to to have a crypto mining

131
00:05:16,409 --> 00:05:20,699
service and your AWS account and cost

132
00:05:18,210 --> 00:05:23,250
you a lot of money but something that we

133
00:05:20,699 --> 00:05:24,870
look for is if they if the attacker can

134
00:05:23,250 --> 00:05:27,449
get access to a role that has access to

135
00:05:24,870 --> 00:05:29,550
our confidential s3 buckets for example

136
00:05:27,449 --> 00:05:31,530
let's say they might try to get those

137
00:05:29,550 --> 00:05:35,060
files exfiltrate those files and we're

138
00:05:31,530 --> 00:05:35,059
gonna see how we can catch that actually

139
00:05:35,449 --> 00:05:40,710
so cloud shell I cannot see everybody

140
00:05:38,099 --> 00:05:43,400
but please can you tell me if you are

141
00:05:40,710 --> 00:05:47,060
familiar with cloud shell and what it is

142
00:05:43,400 --> 00:05:48,570
all right so it's like 3/4 of the room

143
00:05:47,060 --> 00:05:51,900
really quickly

144
00:05:48,570 --> 00:05:54,509
essentially cloud trail is the service

145
00:05:51,900 --> 00:05:56,520
that records all the API calls and AWS

146
00:05:54,509 --> 00:05:58,319
actions in AWS it's gonna record

147
00:05:56,520 --> 00:06:01,289
everything that happens on the API level

148
00:05:58,319 --> 00:06:03,870
and essentially that's everything that

149
00:06:01,289 --> 00:06:05,310
happens in AWS everything all the

150
00:06:03,870 --> 00:06:07,620
different services connect with each

151
00:06:05,310 --> 00:06:10,169
other through API calls and all of that

152
00:06:07,620 --> 00:06:13,289
is logged in cloud trail so it's really

153
00:06:10,169 --> 00:06:14,818
it's our holy grail of artifacts you

154
00:06:13,289 --> 00:06:16,530
want to say logs you want to call it

155
00:06:14,819 --> 00:06:18,750
whatever you want to call it is really

156
00:06:16,530 --> 00:06:21,989
important for us defenders to understand

157
00:06:18,750 --> 00:06:24,690
how cloud what cloud chilis and addition

158
00:06:21,990 --> 00:06:26,990
the scheme of it so we can put

159
00:06:24,690 --> 00:06:29,190
detections we're gonna see right after

160
00:06:26,990 --> 00:06:30,840
so here is what it looks like

161
00:06:29,190 --> 00:06:32,370
essentially in the beginning we have the

162
00:06:30,840 --> 00:06:37,020
user identity which essentially the

163
00:06:32,370 --> 00:06:38,699
entity that performs any action then we

164
00:06:37,020 --> 00:06:41,039
have additional information about the

165
00:06:38,699 --> 00:06:43,469
event like this is from

166
00:06:41,039 --> 00:06:46,318
initiative in from basic to service and

167
00:06:43,469 --> 00:06:50,490
the event name are you see over here let

168
00:06:46,319 --> 00:06:53,960
me see the event name essentially says

169
00:06:50,490 --> 00:06:56,069
what was the action that happened right

170
00:06:53,960 --> 00:06:59,339
then really important to make

171
00:06:56,069 --> 00:07:01,080
attribution is the user agent and the

172
00:06:59,339 --> 00:07:04,949
source IP address believe me I've been

173
00:07:01,080 --> 00:07:08,369
able to actually find like specific

174
00:07:04,949 --> 00:07:10,710
activity and attributed back to some pen

175
00:07:08,369 --> 00:07:12,119
testers through just unique user agent

176
00:07:10,710 --> 00:07:14,308
you were just that simple it's really

177
00:07:12,119 --> 00:07:16,199
some people may say that I don't want to

178
00:07:14,309 --> 00:07:18,389
look for user agents it's like really

179
00:07:16,199 --> 00:07:19,439
neat like something old we look at all

180
00:07:18,389 --> 00:07:21,569
in the old days but it's really

181
00:07:19,439 --> 00:07:23,399
important to make attribution here and

182
00:07:21,569 --> 00:07:27,029
then lastly really important you have

183
00:07:23,399 --> 00:07:28,319
the request and response elements so

184
00:07:27,029 --> 00:07:29,550
it's the request parameters and response

185
00:07:28,319 --> 00:07:31,379
elements or I don't have it here in

186
00:07:29,550 --> 00:07:32,759
detail essentially the request

187
00:07:31,379 --> 00:07:34,919
parameters she's gonna have all the

188
00:07:32,759 --> 00:07:37,050
information that your request is asking

189
00:07:34,919 --> 00:07:39,448
the service to do and for example if you

190
00:07:37,050 --> 00:07:41,399
would change the security group you

191
00:07:39,449 --> 00:07:43,589
would have the changes of a security

192
00:07:41,399 --> 00:07:46,080
group that you request like open up port

193
00:07:43,589 --> 00:07:47,699
80 and then in the response elements

194
00:07:46,080 --> 00:07:49,589
you're gonna have every time if there

195
00:07:47,699 --> 00:07:51,300
was a change that was successful you're

196
00:07:49,589 --> 00:07:54,599
gonna have that on the response elements

197
00:07:51,300 --> 00:07:56,249
all the time so now let's jump right

198
00:07:54,599 --> 00:08:01,019
into the detection saying I think I have

199
00:07:56,249 --> 00:08:04,740
ok time so for the initial axis I so let

200
00:08:01,019 --> 00:08:06,689
me explain that I have on red I have the

201
00:08:04,740 --> 00:08:09,779
event names that you need to look for in

202
00:08:06,689 --> 00:08:12,629
cloud trail that have high fidelity and

203
00:08:09,779 --> 00:08:18,689
really really good signal so for example

204
00:08:12,629 --> 00:08:21,089
on this first slide I told you in the

205
00:08:18,689 --> 00:08:23,009
beginning that an attacker can get the

206
00:08:21,089 --> 00:08:24,629
credentials through through the metadata

207
00:08:23,009 --> 00:08:28,259
service if you they get access to your

208
00:08:24,629 --> 00:08:31,050
instance right but what do they get they

209
00:08:28,259 --> 00:08:33,779
get the STS simple token service keys

210
00:08:31,050 --> 00:08:35,669
which are like 1 to 6 hours usually they

211
00:08:33,779 --> 00:08:37,639
and then they refresh and they're gonna

212
00:08:35,669 --> 00:08:40,649
get these keys but what happens and

213
00:08:37,639 --> 00:08:42,448
actually this is a really good paper

214
00:08:40,649 --> 00:08:44,760
from Netflix I have a reference at the

215
00:08:42,448 --> 00:08:46,380
end that they describe this technique in

216
00:08:44,760 --> 00:08:48,269
detail they don't give you as I'll give

217
00:08:46,380 --> 00:08:49,949
you over here the query exactly but they

218
00:08:48,269 --> 00:08:51,510
describe it so much in detail that you

219
00:08:49,949 --> 00:08:54,540
can build your own data analysis and

220
00:08:51,510 --> 00:08:54,939
query to hunt for that essentially what

221
00:08:54,540 --> 00:08:57,670
happens

222
00:08:54,940 --> 00:08:59,230
that whenever you get a creation of

223
00:08:57,670 --> 00:09:02,380
these credentials you're gonna have a

224
00:08:59,230 --> 00:09:04,390
cloud Sherlock with an adventurous STS

225
00:09:02,380 --> 00:09:06,850
and then an event named assume role

226
00:09:04,390 --> 00:09:08,920
that's gonna come only from the ec2

227
00:09:06,850 --> 00:09:11,140
instance that requires these credentials

228
00:09:08,920 --> 00:09:13,120
and the thing that is really important

229
00:09:11,140 --> 00:09:15,610
is that these credentials are only

230
00:09:13,120 --> 00:09:17,320
supposed to be used by Verity to

231
00:09:15,610 --> 00:09:21,850
instance they're not supposed to be used

232
00:09:17,320 --> 00:09:25,750
by anything else so then whenever

233
00:09:21,850 --> 00:09:27,700
bespoke sorry let me go back whenever

234
00:09:25,750 --> 00:09:30,070
these keys are being used you're gonna

235
00:09:27,700 --> 00:09:33,760
see a cloud show log with a user

236
00:09:30,070 --> 00:09:36,520
identity that type assumed role like let

237
00:09:33,760 --> 00:09:40,660
me go back right over here and the user

238
00:09:36,520 --> 00:09:43,060
identity type assumed role now if we see

239
00:09:40,660 --> 00:09:45,310
that from very c2 instance that is

240
00:09:43,060 --> 00:09:48,369
normal right but if we see that through

241
00:09:45,310 --> 00:09:50,140
any other resource like a really good

242
00:09:48,370 --> 00:09:52,210
signal would be external IP but even

243
00:09:50,140 --> 00:09:53,980
even through like within a it obvious

244
00:09:52,210 --> 00:09:56,650
because they may like it might be using

245
00:09:53,980 --> 00:09:58,630
any c2 instance then that is a really

246
00:09:56,650 --> 00:10:01,329
good detection for you guys I'm telling

247
00:09:58,630 --> 00:10:02,980
you and you can go up and read a Netflix

248
00:10:01,330 --> 00:10:05,050
paper or have more time to discuss about

249
00:10:02,980 --> 00:10:07,450
it it's really you can build a really

250
00:10:05,050 --> 00:10:11,319
high fidelity detection then on the

251
00:10:07,450 --> 00:10:13,420
persistence side of things on the create

252
00:10:11,320 --> 00:10:14,890
account and occur manipulation something

253
00:10:13,420 --> 00:10:17,079
that has a really good signal is the

254
00:10:14,890 --> 00:10:21,040
create user because from what I've seen

255
00:10:17,080 --> 00:10:22,840
it doesn't happen too often and the rest

256
00:10:21,040 --> 00:10:25,689
add user to group and create access key

257
00:10:22,840 --> 00:10:27,940
they have a little bit more noise but if

258
00:10:25,690 --> 00:10:31,150
you if you can hand for these and like

259
00:10:27,940 --> 00:10:33,010
let's say look for unique IPS or

260
00:10:31,150 --> 00:10:34,449
abnormal user agents that you don't see

261
00:10:33,010 --> 00:10:37,540
in your environment that is also a

262
00:10:34,450 --> 00:10:40,890
really good signal next for persistence

263
00:10:37,540 --> 00:10:43,630
again I discussed before about how

264
00:10:40,890 --> 00:10:46,150
someone can make changes to the security

265
00:10:43,630 --> 00:10:48,370
group or the ingress or the egrets and

266
00:10:46,150 --> 00:10:52,030
essentially you would hunt for these

267
00:10:48,370 --> 00:10:54,100
looking for adventures easy to do easy

268
00:10:52,030 --> 00:10:59,230
to service and then authorize security

269
00:10:54,100 --> 00:11:02,200
group ingress then one of the best ways

270
00:10:59,230 --> 00:11:04,180
to hunt for and put detections for an

271
00:11:02,200 --> 00:11:05,440
attack in your environment is when they

272
00:11:04,180 --> 00:11:08,770
are on the privilege escalation phase

273
00:11:05,440 --> 00:11:08,940
because most of the time they're going

274
00:11:08,770 --> 00:11:12,020
to

275
00:11:08,940 --> 00:11:14,610
I mean and they're gonna get access to

276
00:11:12,020 --> 00:11:16,530
it like probably a low-level account

277
00:11:14,610 --> 00:11:21,030
hopefully so they're gonna try to get

278
00:11:16,530 --> 00:11:22,740
higher privileges so the ones that I

279
00:11:21,030 --> 00:11:24,589
have here in black the event names are a

280
00:11:22,740 --> 00:11:27,450
little bit noisy but if you see a

281
00:11:24,590 --> 00:11:32,390
attachable policy or as usual policy

282
00:11:27,450 --> 00:11:35,520
with on the right over here oh is that

283
00:11:32,390 --> 00:11:37,830
on the right with administrator access

284
00:11:35,520 --> 00:11:39,720
well then that's something that you need

285
00:11:37,830 --> 00:11:43,140
to look for like your user shouldn't be

286
00:11:39,720 --> 00:11:44,880
attaching to this policy normally then

287
00:11:43,140 --> 00:11:47,340
something really cool that I found out

288
00:11:44,880 --> 00:11:51,420
actually this past month is this thing

289
00:11:47,340 --> 00:11:53,850
over here so said people policy version

290
00:11:51,420 --> 00:11:56,160
what happens here is that if you create

291
00:11:53,850 --> 00:11:58,980
a policy for your role or your instance

292
00:11:56,160 --> 00:12:00,810
and you create multiple versions of that

293
00:11:58,980 --> 00:12:02,940
and let's say sometime during your

294
00:12:00,810 --> 00:12:04,560
development phase you're devs

295
00:12:02,940 --> 00:12:05,880
wanted to get admin access because they

296
00:12:04,560 --> 00:12:08,819
couldn't figure out what access they

297
00:12:05,880 --> 00:12:10,770
needed to create something then that's a

298
00:12:08,820 --> 00:12:13,020
version stored for that and if they

299
00:12:10,770 --> 00:12:15,480
attacker if the role that the attacker

300
00:12:13,020 --> 00:12:18,090
got access has the permissions to change

301
00:12:15,480 --> 00:12:21,380
the default policy version they can roll

302
00:12:18,090 --> 00:12:23,700
it back to the administrator access

303
00:12:21,380 --> 00:12:25,950
policy that you that your developer

304
00:12:23,700 --> 00:12:27,090
thought that had deleted in the past so

305
00:12:25,950 --> 00:12:30,060
this is really important to look for

306
00:12:27,090 --> 00:12:34,080
this this has really good signal really

307
00:12:30,060 --> 00:12:36,270
good signal moving on so on the

308
00:12:34,080 --> 00:12:37,860
discovery phase in general

309
00:12:36,270 --> 00:12:43,620
reconnaissance this is these are really

310
00:12:37,860 --> 00:12:45,390
noisy but again if you see any like an

311
00:12:43,620 --> 00:12:47,430
assumed reduction that we discussed

312
00:12:45,390 --> 00:12:49,620
before from an external IP or an

313
00:12:47,430 --> 00:12:55,170
abnormal IP and right after you see

314
00:12:49,620 --> 00:12:57,030
discovery artifacts then this is 100% an

315
00:12:55,170 --> 00:12:58,740
attacker or a pen tester or your red

316
00:12:57,030 --> 00:13:00,870
team someone that is trying to do

317
00:12:58,740 --> 00:13:03,210
something bad I wouldn't expect to see

318
00:13:00,870 --> 00:13:05,100
assumed role from a new IP the rather in

319
00:13:03,210 --> 00:13:08,550
relation to instance and in discovery

320
00:13:05,100 --> 00:13:11,250
like listing roles we generating reports

321
00:13:08,550 --> 00:13:13,170
about credentials I wouldn't expect that

322
00:13:11,250 --> 00:13:16,050
to see as a normal use case at all

323
00:13:13,170 --> 00:13:19,110
whatsoever and then last over here

324
00:13:16,050 --> 00:13:21,030
as general detections what a really good

325
00:13:19,110 --> 00:13:22,529
thing is that if you have specific roles

326
00:13:21,030 --> 00:13:24,899
or users or go

327
00:13:22,529 --> 00:13:27,449
that should always be going through your

328
00:13:24,899 --> 00:13:29,759
single sign-on to go to AWS and using

329
00:13:27,449 --> 00:13:31,978
multi-factor authentication then you can

330
00:13:29,759 --> 00:13:33,959
look for this tag there's a tag MFA

331
00:13:31,979 --> 00:13:35,579
authenticated and if it's false but it

332
00:13:33,959 --> 00:13:38,549
shouldn't be false then in social

333
00:13:35,579 --> 00:13:39,539
another red flag and then something

334
00:13:38,549 --> 00:13:42,989
really important is to look for the

335
00:13:39,539 --> 00:13:44,669
error code because any of although

336
00:13:42,989 --> 00:13:47,489
they've been names that I already showed

337
00:13:44,669 --> 00:13:51,509
you that have access denied' of an

338
00:13:47,489 --> 00:13:54,059
author unauthorized operation and failed

339
00:13:51,509 --> 00:13:56,309
access that should also be something to

340
00:13:54,059 --> 00:13:58,019
investigate I mean it happens especially

341
00:13:56,309 --> 00:14:00,449
in the discovery it happens from

342
00:13:58,019 --> 00:14:04,049
developers but with some data analyses

343
00:14:00,449 --> 00:14:05,939
you can really easily clear those the

344
00:14:04,049 --> 00:14:11,399
cases that are normal for your day to

345
00:14:05,939 --> 00:14:12,929
day out and lastly we have the defense

346
00:14:11,399 --> 00:14:16,589
evasion which is actually something with

347
00:14:12,929 --> 00:14:18,600
really high fidelity if you see and act

348
00:14:16,589 --> 00:14:21,419
like someone trying to stop your cloud

349
00:14:18,600 --> 00:14:24,629
real logs why they're doing that even

350
00:14:21,419 --> 00:14:26,609
more if they delete your trail then if

351
00:14:24,629 --> 00:14:27,959
you have got duty which is actually

352
00:14:26,609 --> 00:14:31,169
really awesome in the beginning I didn't

353
00:14:27,959 --> 00:14:32,608
thought I would like it but I like while

354
00:14:31,169 --> 00:14:33,839
being using it and seeing the alerts

355
00:14:32,609 --> 00:14:35,730
that they deny rate that thing is pretty

356
00:14:33,839 --> 00:14:38,129
cool because it actually detects all the

357
00:14:35,730 --> 00:14:39,779
behavioral stuff based on what I already

358
00:14:38,129 --> 00:14:42,359
showed you on the specific techniques

359
00:14:39,779 --> 00:14:43,829
they try to determine if there is a

360
00:14:42,359 --> 00:14:47,459
different behavior and those techniques

361
00:14:43,829 --> 00:14:50,219
from a particular resource so if someone

362
00:14:47,459 --> 00:14:51,839
tries to stop that from monitoring why

363
00:14:50,220 --> 00:14:53,549
they would do that this is really good -

364
00:14:51,839 --> 00:14:58,859
deleted detections that you can pull

365
00:14:53,549 --> 00:15:00,629
right away in your ALW environment so in

366
00:14:58,859 --> 00:15:02,369
the last one is collection and something

367
00:15:00,629 --> 00:15:04,859
I want to mention here is that when you

368
00:15:02,369 --> 00:15:06,209
when you get object level logging

369
00:15:04,859 --> 00:15:07,679
because you need to have object level

370
00:15:06,209 --> 00:15:09,779
logging in the cloud trail to series

371
00:15:07,679 --> 00:15:11,639
this I'm not really a big fan of the

372
00:15:09,779 --> 00:15:13,109
server access lodging because it doesn't

373
00:15:11,639 --> 00:15:15,839
give you the video that I want on cloud

374
00:15:13,109 --> 00:15:17,459
trail and you can look for let's say

375
00:15:15,839 --> 00:15:20,009
that an attacker is already downloading

376
00:15:17,459 --> 00:15:22,919
something you can look for the eventual

377
00:15:20,009 --> 00:15:24,689
size 3 event name get object and then

378
00:15:22,919 --> 00:15:26,728
request parameters you're gonna have the

379
00:15:24,689 --> 00:15:28,529
file names download it so you can see

380
00:15:26,729 --> 00:15:30,959
any of your confidential files secret

381
00:15:28,529 --> 00:15:32,819
files for downloaded or also in the

382
00:15:30,959 --> 00:15:34,589
additional event data you're gonna see

383
00:15:32,819 --> 00:15:36,150
the total amount of data X which a so

384
00:15:34,589 --> 00:15:38,160
you can see like if you were success

385
00:15:36,150 --> 00:15:41,250
not because right when we do IR or

386
00:15:38,160 --> 00:15:42,930
forensics we need to report what was

387
00:15:41,250 --> 00:15:46,650
stolen right is one of the major

388
00:15:42,930 --> 00:15:48,599
questions of our process so this is

389
00:15:46,650 --> 00:15:50,850
gonna help you a lot of figuring out oh

390
00:15:48,600 --> 00:15:52,830
okay they got access here but we're able

391
00:15:50,850 --> 00:15:54,060
to download anything if I see zero one

392
00:15:52,830 --> 00:15:56,390
additional I've been dead or maybe they

393
00:15:54,060 --> 00:15:58,469
filled that I'm good maybe

394
00:15:56,390 --> 00:16:00,600
I'm sorry that I'm running because I

395
00:15:58,470 --> 00:16:02,370
just have another five minutes I'm gonna

396
00:16:00,600 --> 00:16:05,310
go over here I was gonna put that whole

397
00:16:02,370 --> 00:16:08,070
scenario into place but I'm gonna keep

398
00:16:05,310 --> 00:16:12,170
on skipping this because I don't have

399
00:16:08,070 --> 00:16:15,390
time and I want to jump right in to

400
00:16:12,170 --> 00:16:17,189
operationalise detections so okay really

401
00:16:15,390 --> 00:16:20,430
quickly I showed you some examples of

402
00:16:17,190 --> 00:16:23,040
what to look for for the specific on the

403
00:16:20,430 --> 00:16:26,130
specific technique and tactic to find an

404
00:16:23,040 --> 00:16:27,449
attacker in your environment now in

405
00:16:26,130 --> 00:16:28,890
order to start thinking about how to

406
00:16:27,450 --> 00:16:31,620
operationalize and put it on your soak

407
00:16:28,890 --> 00:16:32,400
in your incident response team the first

408
00:16:31,620 --> 00:16:34,710
thing that you need to do with

409
00:16:32,400 --> 00:16:36,750
centralized aw looks you shouldn't have

410
00:16:34,710 --> 00:16:39,089
them in the different accounts that you

411
00:16:36,750 --> 00:16:42,330
have in your environment you should send

412
00:16:39,089 --> 00:16:44,130
it to your own security account and if

413
00:16:42,330 --> 00:16:46,770
that difficult I'm going to tell you we

414
00:16:44,130 --> 00:16:49,830
have at version media we have about more

415
00:16:46,770 --> 00:16:52,079
than 1,000 AK a unique AWS accounts and

416
00:16:49,830 --> 00:16:55,080
we send them all all the clouds we logs

417
00:16:52,080 --> 00:16:56,700
to a specific account that we the

418
00:16:55,080 --> 00:17:00,360
security team have access to and we can

419
00:16:56,700 --> 00:17:04,020
secure these logs then choose you to sit

420
00:17:00,360 --> 00:17:06,870
right there are some amazing open source

421
00:17:04,020 --> 00:17:08,699
tools like stream alert from Airbnb or I

422
00:17:06,869 --> 00:17:09,899
found another one that I haven't Alice

423
00:17:08,699 --> 00:17:12,360
on the reference and you went from

424
00:17:09,900 --> 00:17:15,750
endgame that you can essentially

425
00:17:12,359 --> 00:17:20,339
streamline your cloud trail logs put

426
00:17:15,750 --> 00:17:22,410
rules and detections with lambda

427
00:17:20,339 --> 00:17:23,970
functions essentially they tell you how

428
00:17:22,410 --> 00:17:25,230
this would work it will be that you

429
00:17:23,970 --> 00:17:26,880
would have a lambda function logic and

430
00:17:25,230 --> 00:17:29,400
your cloud tree logs and based on some

431
00:17:26,880 --> 00:17:31,320
rules you generate alerts and then you

432
00:17:29,400 --> 00:17:33,809
can either send it I can email it to

433
00:17:31,320 --> 00:17:35,879
your distro or send it to a slack board

434
00:17:33,809 --> 00:17:38,190
or to your Splunk or whatever you want

435
00:17:35,880 --> 00:17:40,740
to send it to and create detections that

436
00:17:38,190 --> 00:17:41,970
way then of course you realize the

437
00:17:40,740 --> 00:17:44,400
attack framework to build the detections

438
00:17:41,970 --> 00:17:46,530
because it's really easy to build a

439
00:17:44,400 --> 00:17:48,240
really good picture of the whole attack

440
00:17:46,530 --> 00:17:49,000
rather than just having directions here

441
00:17:48,240 --> 00:17:50,679
and there

442
00:17:49,000 --> 00:17:53,500
the the attack matter framework helps

443
00:17:50,679 --> 00:17:56,440
you a lot on figuring out what are your

444
00:17:53,500 --> 00:17:58,000
gaps what can you take what do you have

445
00:17:56,440 --> 00:18:00,130
defenses on and so on

446
00:17:58,000 --> 00:18:02,950
and lastly yeah I start with the

447
00:18:00,130 --> 00:18:06,730
workflow from the alert and action on

448
00:18:02,950 --> 00:18:08,260
detection sieve you want to so here my

449
00:18:06,730 --> 00:18:10,539
reference is I have the first one is on

450
00:18:08,260 --> 00:18:12,070
the Netflix pay the Netflix paper about

451
00:18:10,539 --> 00:18:14,470
the density they sell compromising it'll

452
00:18:12,070 --> 00:18:16,389
yes I definitely recommend reading on

453
00:18:14,470 --> 00:18:19,539
that if you want to build a really

454
00:18:16,390 --> 00:18:21,850
amazing data analysis detection here

455
00:18:19,539 --> 00:18:23,860
then Rhino labs does an amazing job on

456
00:18:21,850 --> 00:18:28,240
posting a lot of really cool information

457
00:18:23,860 --> 00:18:31,000
about AWS then we have the two open

458
00:18:28,240 --> 00:18:34,120
source tools by Airbnb endgame similar

459
00:18:31,000 --> 00:18:36,159
in varna now swim alert is a little bit

460
00:18:34,120 --> 00:18:38,439
is amazing by it's a little bit

461
00:18:36,159 --> 00:18:40,570
complicated you need someone to maintain

462
00:18:38,440 --> 00:18:43,120
it I believe then varna from endgame

463
00:18:40,570 --> 00:18:45,189
I've seen risk just recently it's a

464
00:18:43,120 --> 00:18:47,320
little bit simpler does it do all the

465
00:18:45,190 --> 00:18:51,400
things that try maletas but i think it's

466
00:18:47,320 --> 00:18:53,470
really good to put what try one of these

467
00:18:51,400 --> 00:18:55,419
and consider them for your sock and to

468
00:18:53,470 --> 00:18:57,880
put detections and alerting if you don't

469
00:18:55,419 --> 00:19:04,690
have a service like guard duty for my

470
00:18:57,880 --> 00:19:08,230
double years that was it thank you have

471
00:19:04,690 --> 00:19:23,679
any time for questions we have to meet

472
00:19:08,230 --> 00:19:25,570
for questions yes so that's a great

473
00:19:23,679 --> 00:19:27,460
question I'm gonna first of all I'm

474
00:19:25,570 --> 00:19:29,320
gonna post the slides right after but

475
00:19:27,460 --> 00:19:33,309
I'm planning to also publish a github

476
00:19:29,320 --> 00:19:35,678
repo with sig Sigma rules that are going

477
00:19:33,309 --> 00:19:37,450
to have all the techniques and then have

478
00:19:35,679 --> 00:19:39,309
queries that you can put your own your

479
00:19:37,450 --> 00:19:44,980
plan or your open source tool to a

480
00:19:39,309 --> 00:19:48,220
personalizes yes dick about goose I have

481
00:19:44,980 --> 00:19:51,150
it on the first you got yeah let me code

482
00:19:48,220 --> 00:19:51,150
the first yeah please

483
00:19:51,789 --> 00:20:01,408
I mean we have a pretty big team hey

