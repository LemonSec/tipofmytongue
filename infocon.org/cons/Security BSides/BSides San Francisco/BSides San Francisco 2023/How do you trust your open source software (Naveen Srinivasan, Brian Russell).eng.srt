1
00:00:00,420 --> 00:00:03,419
how do you trust open source software

2
00:00:03,419 --> 00:00:06,299
um introducing open source scorecard

3
00:00:06,299 --> 00:00:09,120
hi I'm Naveen srinivasan

4
00:00:09,120 --> 00:00:12,179
um I'm excited to be here at besides SF

5
00:00:12,179 --> 00:00:13,559
this year

6
00:00:13,559 --> 00:00:15,719
um I'm all about open source and supply

7
00:00:15,719 --> 00:00:18,000
chain security I'm a contributor I

8
00:00:18,000 --> 00:00:20,640
contribute to a few open source projects

9
00:00:20,640 --> 00:00:21,359
um

10
00:00:21,359 --> 00:00:23,100
and I'm one of the maintainers of

11
00:00:23,100 --> 00:00:25,380
scorecard

12
00:00:25,380 --> 00:00:28,560
Brian I'm Brian Russell I'm a product

13
00:00:28,560 --> 00:00:30,599
manager on Google's open source security

14
00:00:30,599 --> 00:00:31,740
team

15
00:00:31,740 --> 00:00:34,680
and I work a lot with openss scorecards

16
00:00:34,680 --> 00:00:37,320
as well with Naveen

17
00:00:37,320 --> 00:00:39,540
so before we get into the the meat of

18
00:00:39,540 --> 00:00:41,460
the presentation we can start with just

19
00:00:41,460 --> 00:00:43,739
a fundamental question of really what is

20
00:00:43,739 --> 00:00:45,120
Trust

21
00:00:45,120 --> 00:00:46,620
you know we can look at a formal

22
00:00:46,620 --> 00:00:49,500
dictionary definition I tend to think of

23
00:00:49,500 --> 00:00:51,059
it as

24
00:00:51,059 --> 00:00:53,039
at what level can you feel comfortable

25
00:00:53,039 --> 00:00:55,020
about something that you can rest easy

26
00:00:55,020 --> 00:00:57,000
kind of knowing that that things are

27
00:00:57,000 --> 00:00:59,699
safe and taken care of

28
00:00:59,699 --> 00:01:02,699
when we think about it in terms of how

29
00:01:02,699 --> 00:01:04,559
you build trust

30
00:01:04,559 --> 00:01:06,240
we're going to look at in two different

31
00:01:06,240 --> 00:01:08,760
ways there's kind of the ideal gradual

32
00:01:08,760 --> 00:01:11,100
way of doing that

33
00:01:11,100 --> 00:01:12,900
that's where we can really get to know

34
00:01:12,900 --> 00:01:15,180
you know a person or an organization

35
00:01:15,180 --> 00:01:18,540
over time by doing that you start to get

36
00:01:18,540 --> 00:01:19,799
to know them

37
00:01:19,799 --> 00:01:22,259
you can really just directly see what's

38
00:01:22,259 --> 00:01:24,240
working are they doing things that seem

39
00:01:24,240 --> 00:01:27,240
safe are they doing things that aren't

40
00:01:27,240 --> 00:01:29,700
the issue with that is that scalability

41
00:01:29,700 --> 00:01:32,340
is really difficult especially if you

42
00:01:32,340 --> 00:01:34,799
start thinking about in terms of Open

43
00:01:34,799 --> 00:01:36,659
Source software and all the dependencies

44
00:01:36,659 --> 00:01:37,920
that go in

45
00:01:37,920 --> 00:01:40,439
there's just no way you know you as one

46
00:01:40,439 --> 00:01:42,659
person or even a team of people can go

47
00:01:42,659 --> 00:01:46,320
out and just meet everybody that

48
00:01:46,320 --> 00:01:49,920
basically builds all those dependencies

49
00:01:49,920 --> 00:01:51,600
so let's think about how we could jump

50
00:01:51,600 --> 00:01:53,280
start that

51
00:01:53,280 --> 00:01:55,920
if we could just find a way to get to

52
00:01:55,920 --> 00:01:57,899
know someone to be able to build some

53
00:01:57,899 --> 00:01:59,880
trust up front

54
00:01:59,880 --> 00:02:01,740
one way to do that is really just

55
00:02:01,740 --> 00:02:04,860
looking for evidence of how things are

56
00:02:04,860 --> 00:02:06,740
operating when it comes to a project

57
00:02:06,740 --> 00:02:09,660
what kind of best practices are they

58
00:02:09,660 --> 00:02:10,979
employing

59
00:02:10,979 --> 00:02:13,560
and when we start to do this approach

60
00:02:13,560 --> 00:02:15,720
and look at it from an evidence-based

61
00:02:15,720 --> 00:02:17,760
perspective that's something that we can

62
00:02:17,760 --> 00:02:20,819
do with really high scalability we can

63
00:02:20,819 --> 00:02:22,500
go out and we can collect that evidence

64
00:02:22,500 --> 00:02:24,360
repeatably for all these different

65
00:02:24,360 --> 00:02:27,680
projects that we're interested in

66
00:02:27,900 --> 00:02:30,720
so thinking a little bit more in terms

67
00:02:30,720 --> 00:02:32,280
of software

68
00:02:32,280 --> 00:02:33,959
what kinds of best practices really

69
00:02:33,959 --> 00:02:35,640
start to matter and you could ask

70
00:02:35,640 --> 00:02:37,260
yourself things like if I had a couple

71
00:02:37,260 --> 00:02:38,819
of projects

72
00:02:38,819 --> 00:02:42,060
how would you feel if you know one of

73
00:02:42,060 --> 00:02:43,739
them was conducting code reviews and

74
00:02:43,739 --> 00:02:45,420
another one wasn't

75
00:02:45,420 --> 00:02:48,000
or one of them has unfixed

76
00:02:48,000 --> 00:02:49,560
vulnerabilities

77
00:02:49,560 --> 00:02:52,739
or one cares about permissioning things

78
00:02:52,739 --> 00:02:54,660
in a way that that really makes sense

79
00:02:54,660 --> 00:02:57,599
for an open source project and whether

80
00:02:57,599 --> 00:02:59,519
or not there's activity or if this

81
00:02:59,519 --> 00:03:02,340
project is is just sitting there without

82
00:03:02,340 --> 00:03:05,640
a lot of people still watching it

83
00:03:05,640 --> 00:03:07,800
so these are the kinds of of best

84
00:03:07,800 --> 00:03:09,660
practices that you could start to look

85
00:03:09,660 --> 00:03:12,859
at project by project

86
00:03:13,319 --> 00:03:15,540
now if we think about building that

87
00:03:15,540 --> 00:03:18,599
trust in the context of

88
00:03:18,599 --> 00:03:21,840
a very specific problem we start with

89
00:03:21,840 --> 00:03:24,319
this block diagram in this block diagram

90
00:03:24,319 --> 00:03:26,819
really represents

91
00:03:26,819 --> 00:03:28,800
what modern digital infrastructure looks

92
00:03:28,800 --> 00:03:31,500
like when you pull back that first layer

93
00:03:31,500 --> 00:03:33,599
you have a lot of components some are

94
00:03:33,599 --> 00:03:37,200
big some are small some are really well

95
00:03:37,200 --> 00:03:39,840
maintained others might have one

96
00:03:39,840 --> 00:03:41,940
critical point of failure

97
00:03:41,940 --> 00:03:44,459
what you don't really have when you just

98
00:03:44,459 --> 00:03:47,040
look at it like this is a lot of insight

99
00:03:47,040 --> 00:03:51,120
into what's going on only you know what

100
00:03:51,120 --> 00:03:53,519
really is is important for your

101
00:03:53,519 --> 00:03:55,980
particular system

102
00:03:55,980 --> 00:03:57,120
so what if we start thinking about

103
00:03:57,120 --> 00:03:58,920
evidence and what if we start thinking

104
00:03:58,920 --> 00:04:00,780
about what if we build some insight

105
00:04:00,780 --> 00:04:04,440
Within These different dependencies

106
00:04:04,440 --> 00:04:06,959
what if we started being able to look at

107
00:04:06,959 --> 00:04:08,940
it in a way where you could see that

108
00:04:08,940 --> 00:04:11,459
some dependencies are really in great

109
00:04:11,459 --> 00:04:14,159
shape and other dependencies really have

110
00:04:14,159 --> 00:04:15,560
a lot of work to do

111
00:04:15,560 --> 00:04:18,478
and you know some are doing a pretty

112
00:04:18,478 --> 00:04:20,040
good job but but have some room for

113
00:04:20,040 --> 00:04:21,238
improvement

114
00:04:21,238 --> 00:04:23,940
it's that kind of insight that we want

115
00:04:23,940 --> 00:04:26,220
to think about tools that we could use

116
00:04:26,220 --> 00:04:29,759
to really start building that and that

117
00:04:29,759 --> 00:04:32,880
is really what the open ssf scorecard

118
00:04:32,880 --> 00:04:35,880
project was created to do is to help

119
00:04:35,880 --> 00:04:38,759
really collect best practices

120
00:04:38,759 --> 00:04:41,280
or evidence thereof in one place such

121
00:04:41,280 --> 00:04:43,020
that you can evaluate projects really

122
00:04:43,020 --> 00:04:45,240
quickly

123
00:04:45,240 --> 00:04:46,740
so

124
00:04:46,740 --> 00:04:49,320
if you want to take a look uh at a

125
00:04:49,320 --> 00:04:52,259
scorecard right now you can go to this

126
00:04:52,259 --> 00:04:54,320
site called depths.dev

127
00:04:54,320 --> 00:04:56,880
slight disclaimer since I'm at Google

128
00:04:56,880 --> 00:04:59,160
depths.dev is a Google project but they

129
00:04:59,160 --> 00:05:03,000
are also the biggest consumer of all of

130
00:05:03,000 --> 00:05:06,600
our scorecards data and at the moment

131
00:05:06,600 --> 00:05:09,479
they have the main ux to look at

132
00:05:09,479 --> 00:05:12,120
scorecards so if you navigate there I

133
00:05:12,120 --> 00:05:13,320
encourage you to just think of a project

134
00:05:13,320 --> 00:05:16,380
that you use and if you don't have one

135
00:05:16,380 --> 00:05:17,699
off the top of your head you could just

136
00:05:17,699 --> 00:05:21,180
look at the scorecard project itself uh

137
00:05:21,180 --> 00:05:23,699
do a search for it click on the project

138
00:05:23,699 --> 00:05:26,880
piece if we have scorecard data for it

139
00:05:26,880 --> 00:05:29,180
you should see it on that project page

140
00:05:29,180 --> 00:05:32,220
and you can start to look at within

141
00:05:32,220 --> 00:05:34,979
those set of best practices or checks as

142
00:05:34,979 --> 00:05:36,840
we call them you know what's going well

143
00:05:36,840 --> 00:05:38,759
on this project and and what could have

144
00:05:38,759 --> 00:05:40,800
room for improvement so to give an

145
00:05:40,800 --> 00:05:42,180
example

146
00:05:42,180 --> 00:05:45,900
of you know one particular check

147
00:05:45,900 --> 00:05:48,120
each of these checks have roughly the

148
00:05:48,120 --> 00:05:51,840
same kind of structure you have a title

149
00:05:51,840 --> 00:05:53,759
of what it is a description of what it

150
00:05:53,759 --> 00:05:56,880
is and a risk level associated with it

151
00:05:56,880 --> 00:05:59,460
so in the case of binary artifacts

152
00:05:59,460 --> 00:06:02,460
this is a case where you have binaries

153
00:06:02,460 --> 00:06:04,259
actually checked into a source repo

154
00:06:04,259 --> 00:06:06,539
which means that you can't actually see

155
00:06:06,539 --> 00:06:09,660
the code behind them and even if the

156
00:06:09,660 --> 00:06:11,520
code is supposed to be in the repo too

157
00:06:11,520 --> 00:06:13,320
there's not that strong link between the

158
00:06:13,320 --> 00:06:14,039
two

159
00:06:14,039 --> 00:06:15,720
so what scorecard does is looks for

160
00:06:15,720 --> 00:06:17,520
evidence of that and then for each

161
00:06:17,520 --> 00:06:20,220
binary that it finds it just in kind of

162
00:06:20,220 --> 00:06:22,080
an Olympic scoring kind of way starts

163
00:06:22,080 --> 00:06:24,780
subtracting from 10 a point for each

164
00:06:24,780 --> 00:06:26,580
binary that's found

165
00:06:26,580 --> 00:06:28,080
and that's really what you would see

166
00:06:28,080 --> 00:06:30,300
across these different checks this same

167
00:06:30,300 --> 00:06:34,080
kind of basic formula of this is a best

168
00:06:34,080 --> 00:06:35,699
practice and then there's a scoring

169
00:06:35,699 --> 00:06:37,800
mechanism under the hood if you look on

170
00:06:37,800 --> 00:06:39,600
the project page you can start to get

171
00:06:39,600 --> 00:06:41,819
more details on on how all of those are

172
00:06:41,819 --> 00:06:44,639
counted and what what really each check

173
00:06:44,639 --> 00:06:47,060
means

174
00:06:47,940 --> 00:06:49,800
so at this point you might be wondering

175
00:06:49,800 --> 00:06:52,319
you know can I use core cards if

176
00:06:52,319 --> 00:06:54,539
you have a private repo versus a public

177
00:06:54,539 --> 00:06:57,960
repo the answer is yes scorecards comes

178
00:06:57,960 --> 00:07:00,060
in a few different flavors but

179
00:07:00,060 --> 00:07:01,919
essentially what you can do

180
00:07:01,919 --> 00:07:04,979
is run it as a CLI run as a GitHub

181
00:07:04,979 --> 00:07:07,800
action or consume the public scorecard

182
00:07:07,800 --> 00:07:09,660
data that's already there

183
00:07:09,660 --> 00:07:12,840
what if you use git but not GitHub

184
00:07:12,840 --> 00:07:15,479
you can use it in a slightly limited way

185
00:07:15,479 --> 00:07:17,819
but those checks are there and you'll be

186
00:07:17,819 --> 00:07:21,560
able to run like the CLI tool to do that

187
00:07:21,560 --> 00:07:24,979
and for fans of gitlab out there

188
00:07:24,979 --> 00:07:28,020
if you have that stay tuned that's

189
00:07:28,020 --> 00:07:29,099
something that we're working on right

190
00:07:29,099 --> 00:07:31,340
now

191
00:07:31,860 --> 00:07:34,259
so a brief note on just

192
00:07:34,259 --> 00:07:37,199
what really supply chain security is

193
00:07:37,199 --> 00:07:38,940
looking like like why scorecards really

194
00:07:38,940 --> 00:07:40,319
came about

195
00:07:40,319 --> 00:07:42,479
and then we'll we'll go into some actual

196
00:07:42,479 --> 00:07:44,940
demos and and kind of go into a little

197
00:07:44,940 --> 00:07:47,160
bit more of the mechanics

198
00:07:47,160 --> 00:07:49,500
uh the long story short

199
00:07:49,500 --> 00:07:51,660
um we could pull up more stats than just

200
00:07:51,660 --> 00:07:53,759
these but open source software

201
00:07:53,759 --> 00:07:55,740
consumption is growing it already

202
00:07:55,740 --> 00:07:57,360
accounts for

203
00:07:57,360 --> 00:07:59,819
a really big chunk of most people's

204
00:07:59,819 --> 00:08:01,440
infrastructure or the code that they're

205
00:08:01,440 --> 00:08:03,419
shipping and that volume is only

206
00:08:03,419 --> 00:08:05,280
increasing over time

207
00:08:05,280 --> 00:08:07,440
uh after this presentation is available

208
00:08:07,440 --> 00:08:09,479
you know you can look a little bit more

209
00:08:09,479 --> 00:08:11,039
at what the Linux Foundation found

210
00:08:11,039 --> 00:08:12,599
what's behind these numbers and what

211
00:08:12,599 --> 00:08:14,580
sonotype published in their their annual

212
00:08:14,580 --> 00:08:16,699
state of software supply chain support

213
00:08:16,699 --> 00:08:19,620
but what you see is strong growth and

214
00:08:19,620 --> 00:08:22,259
with that growth unfortunately you also

215
00:08:22,259 --> 00:08:26,039
see a steep increase in supply chain

216
00:08:26,039 --> 00:08:29,220
attacks themselves so this has become an

217
00:08:29,220 --> 00:08:31,620
increasing problem and something that

218
00:08:31,620 --> 00:08:32,880
more and more people are starting to

219
00:08:32,880 --> 00:08:34,620
look at uh

220
00:08:34,620 --> 00:08:37,799
this graph comes from sonotype's annual

221
00:08:37,799 --> 00:08:39,779
state of the software supply chain

222
00:08:39,779 --> 00:08:42,240
report uh if you have a chance take a

223
00:08:42,240 --> 00:08:43,520
look at it

224
00:08:43,520 --> 00:08:47,640
it will go a lot more in depth into both

225
00:08:47,640 --> 00:08:49,860
the problem itself but also look at how

226
00:08:49,860 --> 00:08:51,720
different tools can be used to help

227
00:08:51,720 --> 00:08:54,180
mitigate that and it takes a special

228
00:08:54,180 --> 00:08:56,160
look at its scorecards in particular as

229
00:08:56,160 --> 00:08:58,200
well

230
00:08:58,200 --> 00:09:01,080
so with that uh we'll get to some demos

231
00:09:01,080 --> 00:09:03,720
and I'll hand it back to Naveen

232
00:09:03,720 --> 00:09:05,399
thanks Brian

233
00:09:05,399 --> 00:09:07,019
um

234
00:09:07,019 --> 00:09:10,500
last year we launched scorecards API

235
00:09:10,500 --> 00:09:11,820
um and I want to take this opportunity

236
00:09:11,820 --> 00:09:14,399
go discuss about the API why we built it

237
00:09:14,399 --> 00:09:18,500
what is the reason and all that

238
00:09:19,260 --> 00:09:21,680
the API is available at

239
00:09:21,680 --> 00:09:24,300
api.tickets.com Dev one of the critical

240
00:09:24,300 --> 00:09:27,660
things which we made a decision was to

241
00:09:27,660 --> 00:09:29,700
provide the data that scorecard already

242
00:09:29,700 --> 00:09:31,380
collects

243
00:09:31,380 --> 00:09:34,380
um it collects 1.2 million GitHub scans

244
00:09:34,380 --> 00:09:36,839
every week and all of the data is

245
00:09:36,839 --> 00:09:39,360
available as bigquery but we spoke to a

246
00:09:39,360 --> 00:09:40,980
few customers and all of them wanted

247
00:09:40,980 --> 00:09:43,500
some way of getting it using standard

248
00:09:43,500 --> 00:09:45,120
HTTP so that's one of the critical

249
00:09:45,120 --> 00:09:47,700
reasons we build the API

250
00:09:47,700 --> 00:09:51,420
this API does not require any tokens so

251
00:09:51,420 --> 00:09:53,519
anybody should be able to utilize this

252
00:09:53,519 --> 00:09:54,720
API

253
00:09:54,720 --> 00:09:57,420
um we also made the API predictable so

254
00:09:57,420 --> 00:10:00,240
you can hear in the in the call command

255
00:10:00,240 --> 00:10:01,740
you can see it's kubernetes communities

256
00:10:01,740 --> 00:10:04,380
that you should be able to replace with

257
00:10:04,380 --> 00:10:06,600
any of the

258
00:10:06,600 --> 00:10:09,540
hopefully the 1.2 million GitHub scans

259
00:10:09,540 --> 00:10:12,540
uh get up scans if you do the question

260
00:10:12,540 --> 00:10:15,120
then comes what if a repository is not

261
00:10:15,120 --> 00:10:17,160
being scanned we will have answers for

262
00:10:17,160 --> 00:10:19,560
that as we proceed further but this is

263
00:10:19,560 --> 00:10:21,420
the this is the way this is one of the

264
00:10:21,420 --> 00:10:23,640
reasons which we build this API it's a

265
00:10:23,640 --> 00:10:25,260
standard rest API

266
00:10:25,260 --> 00:10:28,140
um it does get and post but uh right now

267
00:10:28,140 --> 00:10:31,019
I'm going to focus on get but I will uh

268
00:10:31,019 --> 00:10:34,200
as the demo goes on we will show why we

269
00:10:34,200 --> 00:10:38,420
use post 4 and how we're using this

270
00:10:39,420 --> 00:10:42,180
like I mentioned um what is this API

271
00:10:42,180 --> 00:10:44,820
serving it's still it's serving 1.2

272
00:10:44,820 --> 00:10:45,899
million

273
00:10:45,899 --> 00:10:48,899
um GitHub weekly scans so scorecard team

274
00:10:48,899 --> 00:10:50,160
runs

275
00:10:50,160 --> 00:10:52,440
um scorecard on 1.2 million get a

276
00:10:52,440 --> 00:10:55,320
repositories collect the data and when

277
00:10:55,320 --> 00:10:57,720
you hit the API you get those scans so

278
00:10:57,720 --> 00:10:59,399
essentially you can make decisions based

279
00:10:59,399 --> 00:11:01,700
on that

280
00:11:03,120 --> 00:11:05,700
um we launched this API late fall last

281
00:11:05,700 --> 00:11:07,860
year we are seeing about 200 000

282
00:11:07,860 --> 00:11:10,140
requests uh not too much but this is

283
00:11:10,140 --> 00:11:12,240
this is running as public server so

284
00:11:12,240 --> 00:11:15,800
anybody should be able to utilize this

285
00:11:16,800 --> 00:11:18,839
who is using the API we don't know who's

286
00:11:18,839 --> 00:11:20,760
using the API so if you're using the API

287
00:11:20,760 --> 00:11:22,260
please come and talk to us we would love

288
00:11:22,260 --> 00:11:24,839
to hear uh for what you're using for

289
00:11:24,839 --> 00:11:27,660
here in this example uh we we saw

290
00:11:27,660 --> 00:11:30,420
somebody open an issue they were trying

291
00:11:30,420 --> 00:11:32,220
to ask without do we have any weight

292
00:11:32,220 --> 00:11:34,680
limiting right now we don't enforce any

293
00:11:34,680 --> 00:11:36,420
rate limiting

294
00:11:36,420 --> 00:11:40,939
um explicitly but don't deed ask this

295
00:11:41,339 --> 00:11:43,800
so what can we do with this API

296
00:11:43,800 --> 00:11:44,579
um

297
00:11:44,579 --> 00:11:47,820
what you see here right now is um is a

298
00:11:47,820 --> 00:11:51,240
pie chart diagram of specifically of one

299
00:11:51,240 --> 00:11:53,160
of the checks called code review code

300
00:11:53,160 --> 00:11:54,779
review is one of the the most critical

301
00:11:54,779 --> 00:11:56,940
checks in the state of supply chain

302
00:11:56,940 --> 00:11:58,500
security report

303
00:11:58,500 --> 00:12:00,600
what we decided is

304
00:12:00,600 --> 00:12:04,519
how cool will it be to use the API to

305
00:12:04,519 --> 00:12:07,019
decide how the top thousand critical

306
00:12:07,019 --> 00:12:09,360
projects are I'll talk about how what

307
00:12:09,360 --> 00:12:11,160
this critical thousand critical projects

308
00:12:11,160 --> 00:12:13,680
are so we pulled the top thousand

309
00:12:13,680 --> 00:12:16,260
critical projects use the API pull the

310
00:12:16,260 --> 00:12:18,480
data of them and we wanted to see how

311
00:12:18,480 --> 00:12:20,700
they are performing and we can see in

312
00:12:20,700 --> 00:12:21,779
this

313
00:12:21,779 --> 00:12:25,079
but most of them are doing well but a

314
00:12:25,079 --> 00:12:26,880
few of them need some help

315
00:12:26,880 --> 00:12:28,800
um coming back to specifically critical

316
00:12:28,800 --> 00:12:31,140
projects there's another open ssf

317
00:12:31,140 --> 00:12:33,420
project called criticality score it's

318
00:12:33,420 --> 00:12:36,540
specifically measures the criticality of

319
00:12:36,540 --> 00:12:38,820
Any Given Project based on an algorithm

320
00:12:38,820 --> 00:12:40,800
Rob Pike built

321
00:12:40,800 --> 00:12:42,720
um and the cool thing about that is you

322
00:12:42,720 --> 00:12:44,940
can use you can use it for your own

323
00:12:44,940 --> 00:12:46,740
needs all this data is available free

324
00:12:46,740 --> 00:12:48,300
and

325
00:12:48,300 --> 00:12:50,579
um you should be able to tweak your

326
00:12:50,579 --> 00:12:52,800
criticality based on your own parameters

327
00:12:52,800 --> 00:12:55,079
it has conf it has configuration to go

328
00:12:55,079 --> 00:12:57,899
utilize that so we use that to go build

329
00:12:57,899 --> 00:13:01,940
this essentially using the API

330
00:13:02,160 --> 00:13:04,980
okay enough with all the dark can you

331
00:13:04,980 --> 00:13:06,779
show me the code please

332
00:13:06,779 --> 00:13:09,120
uh I don't want it bored with code over

333
00:13:09,120 --> 00:13:12,300
here so the code is uh on my personal

334
00:13:12,300 --> 00:13:13,980
GitHub repo so you should be able to

335
00:13:13,980 --> 00:13:17,579
clone it uh use this it's written go

336
00:13:17,579 --> 00:13:19,680
um scorecards written go I'm familiar

337
00:13:19,680 --> 00:13:21,000
with go but you should be able to

338
00:13:21,000 --> 00:13:22,500
utilize any modern programming language

339
00:13:22,500 --> 00:13:24,420
to pull this it's a pretty simple

340
00:13:24,420 --> 00:13:27,260
project

341
00:13:28,860 --> 00:13:31,079
let's talk about the usefulness of this

342
00:13:31,079 --> 00:13:32,519
API

343
00:13:32,519 --> 00:13:35,519
I am going to be the contributor

344
00:13:35,519 --> 00:13:37,740
and I will be a security maintainer for

345
00:13:37,740 --> 00:13:40,040
a project

346
00:13:40,860 --> 00:13:42,660
I want to submit a new PR with the

347
00:13:42,660 --> 00:13:44,279
dependency Brian

348
00:13:44,279 --> 00:13:46,019
I mean that sounds pretty pretty

349
00:13:46,019 --> 00:13:48,779
reasonable uh but you know is this

350
00:13:48,779 --> 00:13:51,920
dependency really healthy

351
00:13:52,560 --> 00:13:56,040
what does scorecard be helpful Brian

352
00:13:56,040 --> 00:13:57,779
you know if I knew what that was I might

353
00:13:57,779 --> 00:14:00,180
be able to tell you

354
00:14:00,180 --> 00:14:01,560
have you checked out the scorecards

355
00:14:01,560 --> 00:14:03,120
apostrophe Brian

356
00:14:03,120 --> 00:14:05,100
well uh

357
00:14:05,100 --> 00:14:07,260
uh you know now that I have uh this is

358
00:14:07,260 --> 00:14:09,240
great in fact I think I'm going to use

359
00:14:09,240 --> 00:14:11,040
this API for checking all future

360
00:14:11,040 --> 00:14:12,720
dependencies

361
00:14:12,720 --> 00:14:14,880
in fact I think I might add it to my CI

362
00:14:14,880 --> 00:14:16,800
CD workflow tool

363
00:14:16,800 --> 00:14:19,560
and also it's just so easy to use

364
00:14:19,560 --> 00:14:21,839
makes me wonder why doesn't everyone use

365
00:14:21,839 --> 00:14:24,620
this at this point

366
00:14:25,260 --> 00:14:27,959
thanks Brian

367
00:14:27,959 --> 00:14:31,620
um so we decided to build this as

368
00:14:31,620 --> 00:14:34,079
um another get up action it's still a

369
00:14:34,079 --> 00:14:36,540
work in progress feature which we are

370
00:14:36,540 --> 00:14:39,120
working on what you can see over here is

371
00:14:39,120 --> 00:14:42,120
if you add any new dependency it'll come

372
00:14:42,120 --> 00:14:44,279
back and give you a score and that can

373
00:14:44,279 --> 00:14:46,320
help you decide whether you want to add

374
00:14:46,320 --> 00:14:48,720
or whatever you want to do reject the PR

375
00:14:48,720 --> 00:14:51,360
but it does not but this is this is what

376
00:14:51,360 --> 00:14:53,519
we are trying to work towards and the

377
00:14:53,519 --> 00:14:55,139
whole idea behind this is you should be

378
00:14:55,139 --> 00:14:56,820
able to utilize the API to make your own

379
00:14:56,820 --> 00:14:58,500
decisions and that's the whole idea

380
00:14:58,500 --> 00:15:00,980
behind this

381
00:15:03,839 --> 00:15:08,100
um next is we also launched last year an

382
00:15:08,100 --> 00:15:11,839
open ssf scorecards badge

383
00:15:11,880 --> 00:15:13,620
what is the idea of the badges the

384
00:15:13,620 --> 00:15:15,839
badges is for the project repository

385
00:15:15,839 --> 00:15:18,660
owners to showcase

386
00:15:18,660 --> 00:15:20,339
how what are the score for their

387
00:15:20,339 --> 00:15:22,260
repositories it's for consumers to come

388
00:15:22,260 --> 00:15:24,300
and see that that's the basic idea

389
00:15:24,300 --> 00:15:27,000
behind this this

390
00:15:27,000 --> 00:15:30,360
in turn uses the API so if you run these

391
00:15:30,360 --> 00:15:33,899
scorecards get up action it uses the API

392
00:15:33,899 --> 00:15:36,480
to post the data so that's why if you if

393
00:15:36,480 --> 00:15:38,160
you if you bring up a new repository and

394
00:15:38,160 --> 00:15:40,560
their repository does not we are not

395
00:15:40,560 --> 00:15:41,880
scanning it you should be able to use

396
00:15:41,880 --> 00:15:44,040
the GitHub action install it run it and

397
00:15:44,040 --> 00:15:45,240
you should be able to get start getting

398
00:15:45,240 --> 00:15:47,459
your scores so that's another way to get

399
00:15:47,459 --> 00:15:52,380
scores uh populated into scorecards API

400
00:15:52,380 --> 00:15:53,459
so

401
00:15:53,459 --> 00:15:56,339
so we want to take a take an example and

402
00:15:56,339 --> 00:15:58,860
Brian was we don't want to fumble in

403
00:15:58,860 --> 00:16:00,360
front of everybody to install the demo

404
00:16:00,360 --> 00:16:03,240
Brian was thankful enough to help us uh

405
00:16:03,240 --> 00:16:06,660
make this so we just pre-ken recorded it

406
00:16:06,660 --> 00:16:09,060
so hopefully it should should show us

407
00:16:09,060 --> 00:16:11,760
how it's not pretty hard so if you go to

408
00:16:11,760 --> 00:16:13,680
school class repositories specifically

409
00:16:13,680 --> 00:16:16,019
scroll down to the detection of how to

410
00:16:16,019 --> 00:16:19,500
how to get the badge we have we have

411
00:16:19,500 --> 00:16:22,260
given it uh something that you can copy

412
00:16:22,260 --> 00:16:25,380
it so you should be able to navigate to

413
00:16:25,380 --> 00:16:28,980
your readme and paste it and change only

414
00:16:28,980 --> 00:16:32,339
two things the the owner and the

415
00:16:32,339 --> 00:16:35,040
repository the moment you change that

416
00:16:35,040 --> 00:16:38,519
and commit it commit that in you should

417
00:16:38,519 --> 00:16:42,600
be able to see those badges for the

418
00:16:42,600 --> 00:16:46,079
Repository like I mentioned the critical

419
00:16:46,079 --> 00:16:48,600
thing for this is the data should be

420
00:16:48,600 --> 00:16:53,300
available in the scorecards API

421
00:16:59,880 --> 00:17:02,160
if I only have 30 seconds

422
00:17:02,160 --> 00:17:04,799
go to depths.dev that should be able to

423
00:17:04,799 --> 00:17:08,520
provide you scorecard's data

424
00:17:08,520 --> 00:17:10,380
if you have five minutes run the

425
00:17:10,380 --> 00:17:13,160
scorecard's cry

426
00:17:13,919 --> 00:17:15,720
if you have 15 minutes

427
00:17:15,720 --> 00:17:17,880
install the GitHub action add a batch to

428
00:17:17,880 --> 00:17:20,459
your Repository

429
00:17:20,459 --> 00:17:22,140
just to know if I if you use a private

430
00:17:22,140 --> 00:17:23,880
repository if you don't want to share

431
00:17:23,880 --> 00:17:26,040
your data we have that option not to

432
00:17:26,040 --> 00:17:27,480
share so you don't have to share your

433
00:17:27,480 --> 00:17:31,320
data with scorecards API

434
00:17:31,320 --> 00:17:32,940
if you have more than a day include

435
00:17:32,940 --> 00:17:36,860
incorporate the API into your workflow

436
00:17:38,880 --> 00:17:40,500
so

437
00:17:40,500 --> 00:17:42,240
to close this out I just want to say a

438
00:17:42,240 --> 00:17:44,760
few words about the organization in

439
00:17:44,760 --> 00:17:46,880
which this scorecard is being developed

440
00:17:46,880 --> 00:17:49,500
the open ssf has a number of different

441
00:17:49,500 --> 00:17:52,559
projects but it's an organization

442
00:17:52,559 --> 00:17:55,380
that is really meant to bring

443
00:17:55,380 --> 00:17:57,600
a whole bunch of different people

444
00:17:57,600 --> 00:18:00,240
together that have a vested interest in

445
00:18:00,240 --> 00:18:02,100
trying to make open source software more

446
00:18:02,100 --> 00:18:03,059
secure

447
00:18:03,059 --> 00:18:05,280
so it has a variety of different members

448
00:18:05,280 --> 00:18:08,520
that have come together under it to

449
00:18:08,520 --> 00:18:11,580
really work towards making open source

450
00:18:11,580 --> 00:18:13,919
you know as safe as any software as you

451
00:18:13,919 --> 00:18:15,660
could have

452
00:18:15,660 --> 00:18:20,460
so participation is very open uh there

453
00:18:20,460 --> 00:18:21,900
are a number of different ways to really

454
00:18:21,900 --> 00:18:25,020
engage with the openssf and see not just

455
00:18:25,020 --> 00:18:26,700
the scorecards project but a number of

456
00:18:26,700 --> 00:18:28,740
other projects that are really critical

457
00:18:28,740 --> 00:18:31,260
towards skier towards securing open

458
00:18:31,260 --> 00:18:34,380
source software uh some of them are here

459
00:18:34,380 --> 00:18:36,360
uh there is also kind of the one

460
00:18:36,360 --> 00:18:39,660
catch-all page which is openssf.org get

461
00:18:39,660 --> 00:18:41,580
involved where you can get all those

462
00:18:41,580 --> 00:18:44,100
links on the last slide

463
00:18:44,100 --> 00:18:46,559
so I think we're at the close at this

464
00:18:46,559 --> 00:18:49,020
point uh and I just like to thank you

465
00:18:49,020 --> 00:18:51,419
all for coming I know especially into

466
00:18:51,419 --> 00:18:53,820
the day talk I appreciate everybody that

467
00:18:53,820 --> 00:18:59,220
that really came out uh at that point

468
00:18:59,220 --> 00:19:01,880
we'll go to questions

469
00:19:06,240 --> 00:19:09,539
great thank you guys let's go into q a

470
00:19:09,539 --> 00:19:10,679
mode

471
00:19:10,679 --> 00:19:13,799
do I have any questions out here I'll be

472
00:19:13,799 --> 00:19:16,460
on my way

473
00:19:19,020 --> 00:19:22,400
you I'll meet you

474
00:19:23,160 --> 00:19:25,740
thank you Sako is here my question is

475
00:19:25,740 --> 00:19:28,740
around first of all amazing job like we

476
00:19:28,740 --> 00:19:30,780
are going through this dependency hell I

477
00:19:30,780 --> 00:19:33,240
would say but are you having roadmap

478
00:19:33,240 --> 00:19:35,400
also some automation around updating

479
00:19:35,400 --> 00:19:39,179
let's say to new releases and so forth

480
00:19:39,179 --> 00:19:42,179
so it's a great question thank you

481
00:19:42,179 --> 00:19:45,120
in terms of kind of I I think you're

482
00:19:45,120 --> 00:19:47,460
asking about are there ways to automate

483
00:19:47,460 --> 00:19:49,500
fixes based on the findings of

484
00:19:49,500 --> 00:19:52,740
scorecards so that would definitely be

485
00:19:52,740 --> 00:19:55,080
an extension of where it's at today uh

486
00:19:55,080 --> 00:19:56,640
at the moment we're still very focused

487
00:19:56,640 --> 00:19:59,640
on detection and making people aware so

488
00:19:59,640 --> 00:20:01,620
that they can go in and make the fixes

489
00:20:01,620 --> 00:20:04,740
it's not to say we went ever enter uh

490
00:20:04,740 --> 00:20:06,660
into that but

491
00:20:06,660 --> 00:20:08,580
um in the moment it's it's not on the

492
00:20:08,580 --> 00:20:11,418
immediate roadmap

493
00:20:11,940 --> 00:20:13,559
go ahead

494
00:20:13,559 --> 00:20:15,559
thank you

495
00:20:15,660 --> 00:20:17,280
thank you great um we have five more

496
00:20:17,280 --> 00:20:19,260
minutes does anyone else have any

497
00:20:19,260 --> 00:20:20,400
questions

498
00:20:20,400 --> 00:20:22,559
coming around I'm going to go up and

499
00:20:22,559 --> 00:20:25,700
then down to you if that's okay

500
00:20:28,919 --> 00:20:32,120
coming right at you

501
00:20:32,700 --> 00:20:34,679
um the work in progress feature you

502
00:20:34,679 --> 00:20:37,140
mentioned to post on PR as many new

503
00:20:37,140 --> 00:20:38,940
dependencies introduced seems really

504
00:20:38,940 --> 00:20:40,799
awesome and will work really well for

505
00:20:40,799 --> 00:20:42,840
those of us who work at companies where

506
00:20:42,840 --> 00:20:45,360
there's a massive mono repo things like

507
00:20:45,360 --> 00:20:47,820
that how can we get updates about when

508
00:20:47,820 --> 00:20:49,320
this is introduced and I'm also really

509
00:20:49,320 --> 00:20:51,720
interested in the

510
00:20:51,720 --> 00:20:53,460
um you know the point about when we do

511
00:20:53,460 --> 00:20:55,559
dependency version upgrades are we

512
00:20:55,559 --> 00:20:58,080
downgrading actually perhaps security

513
00:20:58,080 --> 00:21:01,559
wise can we know that via a PR comment

514
00:21:01,559 --> 00:21:03,000
absolutely

515
00:21:03,000 --> 00:21:05,400
um that's a that's a very valid that's a

516
00:21:05,400 --> 00:21:07,260
very valid concern um you should be able

517
00:21:07,260 --> 00:21:10,860
to I can go back to that I'm sorry

518
00:21:10,860 --> 00:21:13,080
um the reason I'm going back is you you

519
00:21:13,080 --> 00:21:15,419
should be able to follow this PR thread

520
00:21:15,419 --> 00:21:18,299
and you should be able to

521
00:21:18,299 --> 00:21:20,460
um I'm the pr owner

522
00:21:20,460 --> 00:21:23,400
um so hopefully in the next few weeks I

523
00:21:23,400 --> 00:21:25,140
should be able to merge this in and get

524
00:21:25,140 --> 00:21:27,000
it working but if you follow this PR

525
00:21:27,000 --> 00:21:30,000
thread we will do that and also like

526
00:21:30,000 --> 00:21:32,580
what Brian mentioned if you follow the

527
00:21:32,580 --> 00:21:35,340
open ssf in from Twitter to everything

528
00:21:35,340 --> 00:21:39,240
there will be a a release with that

529
00:21:39,240 --> 00:21:40,980
being in a blog post you also you should

530
00:21:40,980 --> 00:21:43,140
be able to utilize that information

531
00:21:43,140 --> 00:21:46,760
hope that answers your question

532
00:21:48,539 --> 00:21:52,820
he coming down to our next question

533
00:21:59,340 --> 00:22:02,520
yeah so um what was the process for

534
00:22:02,520 --> 00:22:04,080
coming up with all the things on the

535
00:22:04,080 --> 00:22:05,700
sort card and how do you see that

536
00:22:05,700 --> 00:22:07,500
changing in the future if that will

537
00:22:07,500 --> 00:22:10,260
evolve d

538
00:22:10,260 --> 00:22:12,539
so it's a great question you know when

539
00:22:12,539 --> 00:22:14,159
you have a whole bunch of different best

540
00:22:14,159 --> 00:22:16,320
practices who's really to say you know

541
00:22:16,320 --> 00:22:19,200
these are the right best practices uh

542
00:22:19,200 --> 00:22:20,940
initially we started out with just

543
00:22:20,940 --> 00:22:23,280
things where a broad group of people who

544
00:22:23,280 --> 00:22:25,799
was working on this project universally

545
00:22:25,799 --> 00:22:28,260
said you know yes that would roughly

546
00:22:28,260 --> 00:22:31,260
increase my trust in a project I don't

547
00:22:31,260 --> 00:22:32,539
think there was

548
00:22:32,539 --> 00:22:36,240
uh a super rigorous methodology it also

549
00:22:36,240 --> 00:22:38,340
predates my time of working on the

550
00:22:38,340 --> 00:22:41,100
project but

551
00:22:41,100 --> 00:22:43,860
the starter set was really just you know

552
00:22:43,860 --> 00:22:45,840
people who had worked in the space for a

553
00:22:45,840 --> 00:22:46,860
while had been thinking about the

554
00:22:46,860 --> 00:22:48,840
problem for a while

555
00:22:48,840 --> 00:22:50,760
um you know came together and basically

556
00:22:50,760 --> 00:22:53,460
said I think this is a good set if we if

557
00:22:53,460 --> 00:22:55,200
we knew these things that would help

558
00:22:55,200 --> 00:22:57,419
influence decisions about whether or not

559
00:22:57,419 --> 00:23:00,000
we would want to use this project

560
00:23:00,000 --> 00:23:03,380
I hope that answers the question

561
00:23:04,380 --> 00:23:07,500
do I see any further questions

562
00:23:07,500 --> 00:23:10,159
coming over

563
00:23:16,679 --> 00:23:18,360
there you are

564
00:23:18,360 --> 00:23:20,100
just as a follow-up tool I was asked

565
00:23:20,100 --> 00:23:22,020
what is the process for adding a new you

566
00:23:22,020 --> 00:23:24,000
know line item

567
00:23:24,000 --> 00:23:25,220
so oh

568
00:23:25,220 --> 00:23:27,600
that's a config that's a config setting

569
00:23:27,600 --> 00:23:31,080
for that um you mean for the the oh I

570
00:23:31,080 --> 00:23:34,080
think he means checks

571
00:23:34,080 --> 00:23:36,900
oh and you a new track Oh Oh you mean a

572
00:23:36,900 --> 00:23:38,400
new metric so

573
00:23:38,400 --> 00:23:39,120
um

574
00:23:39,120 --> 00:23:41,520
for that you gotta you got to create an

575
00:23:41,520 --> 00:23:45,059
issue we have a discussion and then we

576
00:23:45,059 --> 00:23:47,520
go about doing it so it's like any other

577
00:23:47,520 --> 00:23:49,799
new features on any other open prior

578
00:23:49,799 --> 00:23:51,179
open source project that you want to do

579
00:23:51,179 --> 00:23:53,580
you come back and specifically give us

580
00:23:53,580 --> 00:23:57,539
why how and and then you should be able

581
00:23:57,539 --> 00:23:59,640
to go ahead and get that working

582
00:23:59,640 --> 00:24:01,919
yeah the short answer is come talk to us

583
00:24:01,919 --> 00:24:04,140
go to the get involved page and and you

584
00:24:04,140 --> 00:24:07,140
know join meetings open PR's

585
00:24:07,140 --> 00:24:08,220
um all those will start the right

586
00:24:08,220 --> 00:24:10,559
discussions

587
00:24:10,559 --> 00:24:14,400
we have time for one more question

588
00:24:14,400 --> 00:24:18,000
okay well thank you guys for being here

589
00:24:18,000 --> 00:24:22,380
today on behalf of b-sides SF and doyan

590
00:24:22,380 --> 00:24:23,880
sec I would like to present you with

591
00:24:23,880 --> 00:24:27,780
these gifts from our sponsor doinsek and

592
00:24:27,780 --> 00:24:29,340
thank you so much guys for wrapping it

593
00:24:29,340 --> 00:24:31,500
up today thank you let's give him a

594
00:24:31,500 --> 00:24:35,059
round of applause thank you

