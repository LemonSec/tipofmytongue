1
00:00:00,000 --> 00:01:23,509
folksy not calling mark now we're here
to try to last for real-time detection

2
00:01:23,509 --> 00:01:29,920
polymorphic where I got some of my life
for you

3
00:01:29,920 --> 00:01:41,009
ok alright well first of all I really
want to apologize you know this talk

4
00:01:41,009 --> 00:01:45,710
it's kind of technical I didn't realize
that I needed to add a lot of like cats

5
00:01:45,710 --> 00:01:50,389
pictures and dog pictures and make it
really really funny I will do that the

6
00:01:50,390 --> 00:01:56,560
next time I promise and this is a little
bit on the technical side I'll try to

7
00:01:56,560 --> 00:02:02,180
make it as humorous as possible and feel
free to stop by anytime before any

8
00:02:02,180 --> 00:02:05,750
questions I know that you know you guys
wanna head out somewhere probably really

9
00:02:05,750 --> 00:02:08,360
soon and I'll try to do my best

10
00:02:08,360 --> 00:02:15,100
totally thank you

11
00:02:15,100 --> 00:02:25,160
alright so named Kevin Rajan I am
currently security researcher I used to

12
00:02:25,160 --> 00:02:31,790
be at Fidelis before this actually any
Fidelis people over here for the rest of

13
00:02:31,790 --> 00:02:39,420
you guys I'm actually in stealth mode
right now so it's just me out sorry I

14
00:02:39,420 --> 00:02:46,230
double booked on prior to this until
about two months ago I was I was at

15
00:02:46,230 --> 00:02:47,179
Fidelis

16
00:02:47,180 --> 00:02:52,840
you know in various director roles of a
shout out a lot of this research was

17
00:02:52,840 --> 00:02:57,560
done while I was at Fidelis this was in
the summer of last year had an intern

18
00:02:57,560 --> 00:03:03,060
from New Haven a massive dick and he
helped me on a lot of these projects and

19
00:03:03,060 --> 00:03:08,010
trying to run in in terms of running the
experiments and so on so a big shout out

20
00:03:08,010 --> 00:03:11,200
to him for actually getting a lot of
this work done and of course for Fidelis

21
00:03:11,200 --> 00:03:17,190
for providing a lot of the data so what
exactly am I trying to do over here this

22
00:03:17,190 --> 00:03:22,450
talk is actually a little bit about just
looking at malware which is something

23
00:03:22,450 --> 00:03:27,768
that we did a lot of trying to make some
sense of what does what any somebody's

24
00:03:27,769 --> 00:03:34,070
patterns that we're seeing and you don't
try and improve detection so jealous box

25
00:03:34,070 --> 00:03:42,470
for example is a network security device
we can you know how it goes by in and

26
00:03:42,470 --> 00:03:48,549
out of an organization and then we try
to do it really well so 11 at one of the

27
00:03:48,549 --> 00:03:55,430
requirements was that how can we improve
our fast detection techniques for

28
00:03:55,430 --> 00:04:01,610
malware and and that's what this
research was focused on so now we're

29
00:04:01,610 --> 00:04:06,910
generally distributed to multiple ways a
couple of them listed already air pushes

30
00:04:06,910 --> 00:04:12,430
websites email you get my email phishing
spam and then if you happen to be

31
00:04:12,430 --> 00:04:17,320
infected by some kind of a box or
something like that then there's now

32
00:04:17,320 --> 00:04:19,519
that can come in or command control
challenges

33
00:04:19,519 --> 00:04:25,789
so those are like the various mechanism
for distributing power onto detection

34
00:04:25,789 --> 00:04:32,479
techniques so there are various types
detection techniques and usually you try

35
00:04:32,479 --> 00:04:40,680
each one so if for example you get a
file and you see that it matches a

36
00:04:40,680 --> 00:04:41,780
little

37
00:04:41,780 --> 00:04:45,549
matches one amongst a list of signatures
that you potentially have then you can

38
00:04:45,550 --> 00:04:50,470
say okay no exact match probably this
malware you probably have some some

39
00:04:50,470 --> 00:04:53,849
attributes that go along with that
signature and you can see that ok I'm

40
00:04:53,849 --> 00:05:03,130
done now I can I can I can rest if not
then you move on to and then mystics and

41
00:05:03,130 --> 00:05:07,740
then ultimately to emulation and
missionary Holika sandbox environment

42
00:05:07,740 --> 00:05:14,250
and so on and the key here is that you
can see how the time scales are

43
00:05:14,250 --> 00:05:20,490
progresses so signature-based detection
literally is in the micro second you

44
00:05:20,490 --> 00:05:25,430
know range all the way up to you know
several minutes we're doing a Malaysian

45
00:05:25,430 --> 00:05:32,110
so you want you can somehow get your
detection as close to you know

46
00:05:32,110 --> 00:05:37,050
microsecond milliseconds possible dan
your speed off detecting malware

47
00:05:37,050 --> 00:05:42,860
obviously is significantly higher so so
you want it you want to sort of focus on

48
00:05:42,860 --> 00:05:47,639
those techniques that you can do it
really fast detection with rather than

49
00:05:47,639 --> 00:05:54,870
you know the stakes animation techniques
because obviously you can send every

50
00:05:54,870 --> 00:06:02,669
single file for deletion analysis so
what we were trying to do was weak in

51
00:06:02,669 --> 00:06:08,370
this report every day of malware that we
are various sensors have seen in the

52
00:06:08,370 --> 00:06:15,250
field and what we were noticing is that
we saw a particular file you know that

53
00:06:15,250 --> 00:06:17,240
was determined to be an hour

54
00:06:17,240 --> 00:06:22,520
and we would seem like a boatload of MB
files associated with that one

55
00:06:22,520 --> 00:06:27,240
particular so obviously signature
matching was not working for that

56
00:06:27,240 --> 00:06:31,860
particular style and also why are we
seeing so many different Mb fives for

57
00:06:31,860 --> 00:06:38,490
the same files so we analyze that a
little bit more and found that these

58
00:06:38,490 --> 00:06:45,229
were malicious websites that were
continuously modifying the files on the

59
00:06:45,229 --> 00:06:54,310
web server itself so and and this
modification is called poly markers are

60
00:06:54,310 --> 00:07:00,460
familiar with that term and what they do
is the code or the other file is altered

61
00:07:00,460 --> 00:07:08,198
by changing its all you can do
encryption scared but ultimately the

62
00:07:08,199 --> 00:07:14,919
characteristics of what the file does is
exactly the same ok and as far as

63
00:07:14,919 --> 00:07:19,639
polymorphism cell just concerned this
oversight polymorphism is what we were

64
00:07:19,639 --> 00:07:25,940
observing would be multiple and defy
files that we were observing and they're

65
00:07:25,940 --> 00:07:30,740
two different techniques that we saw we
saw sites that the volume out there so

66
00:07:30,740 --> 00:07:36,169
for example they would send out a mass
email to millions of people would like

67
00:07:36,169 --> 00:07:40,500
some URL in there so that the final game
stayed the same for everyone and then

68
00:07:40,500 --> 00:07:46,460
asked clicked on those links and went to
that website it would then serve out new

69
00:07:46,460 --> 00:07:51,560
variations of that filed by altering the
fire slightly compared that with on

70
00:07:51,560 --> 00:07:56,520
demand however where the much more
targeted attack where they can encrypt

71
00:07:56,520 --> 00:08:01,210
it and office gated and so on but then
it obviously takes a lot more time do

72
00:08:01,210 --> 00:08:06,919
these things and therefore volume
however you know just has a few bits

73
00:08:06,919 --> 00:08:11,859
that are there are modified and so what
our goal was to try and see if we could

74
00:08:11,860 --> 00:08:18,979
figure out or or detect this volume
malware which was escaping a

75
00:08:18,979 --> 00:08:23,949
signature-based detection using some
other technique that was really fast

76
00:08:23,949 --> 00:08:29,550
rather than doing the static dearest a
correlation-based analysis and again

77
00:08:30,190 --> 00:08:33,679
couldn't tell at that point which one of
those are actually being hit we

78
00:08:33,679 --> 00:08:38,859
definitely knew it was not signature and
what our goal is to detect that using

79
00:08:38,860 --> 00:08:50,410
something close to it real with me so
far so enter so how many of you guys

80
00:08:50,410 --> 00:09:00,850
know as a couple of Andrea ok so as deep
is essentially an algorithm for figuring

81
00:09:00,850 --> 00:09:08,650
out what is called a fuzzy cash office
file as compared to again be five or

82
00:09:08,650 --> 00:09:17,260
shot shot shot 56 and so on so the way
it works is that the algorithm sort of

83
00:09:17,260 --> 00:09:23,420
cycles to the file and then it breaks it
up into chunks and then crashes each one

84
00:09:23,420 --> 00:09:29,199
of those chunks into a single bite and
then concatenate so it's sort of like a

85
00:09:29,200 --> 00:09:33,470
compressed representation of their
entire file I mean I don't want to go

86
00:09:33,470 --> 00:09:40,200
into the details of how it works just
google SSD hits on that hand and an

87
00:09:40,200 --> 00:09:45,960
essential you get a day what is called
an SSD cache or fuzzy hash ok I

88
00:09:45,960 --> 00:09:53,240
understand I'm sort of give you an
approximate idea how that works and a

89
00:09:53,240 --> 00:09:56,300
lot of malware sites today

90
00:09:56,300 --> 00:10:02,579
compute this SSD cache so for example
this little snippet here is from my

91
00:10:02,580 --> 00:10:05,580
startle you can see that

92
00:10:06,200 --> 00:10:12,340
amongst the malware properties which
include you know Andy fives and shower

93
00:10:12,340 --> 00:10:17,810
and all that BS is ash has also provided
in pretty much all of the popular now

94
00:10:17,810 --> 00:10:25,660
analysis sites provide that as an
attribute $4 ok and so how do you use

95
00:10:25,660 --> 00:10:33,860
this so they saw the SSDP algorithm that
you can download from you know from

96
00:10:33,860 --> 00:10:39,920
sourceforge.net source which are already
over whether it's hosted right now has a

97
00:10:39,920 --> 00:10:45,930
mechanism to compare two files so what
it what did you tell you is that if you

98
00:10:45,930 --> 00:10:50,120
give it to files and run as deep on that
it will tell you that you know it

99
00:10:50,120 --> 00:10:56,850
51 matches file to an interview at its
core a bberry in and that score will

100
00:10:56,850 --> 00:11:02,340
tell you how close those two files are
together ok so in this case over here by

101
00:11:02,340 --> 00:11:05,720
1-5 to ninety-nine ninety-nine percent
of you know they're they're identical

102
00:11:05,720 --> 00:11:10,060
opposed it completely 800 but in this
case maybe there was a very small

103
00:11:10,060 --> 00:11:14,640
difference in the two files and then
again if you don't see much as 54 44

104
00:11:14,640 --> 00:11:18,380
that mean that there is a significant
difference but there is some commonality

105
00:11:18,380 --> 00:11:24,580
elements in between the two files and
another use case for something like SSD

106
00:11:24,580 --> 00:11:33,360
is in grading exam papers are reports
you know so what they do is they look at

107
00:11:33,360 --> 00:11:40,200
2 answers and see if there's like like a
similarity between these two word that

108
00:11:40,200 --> 00:11:43,200
the use and so on a side note

109
00:11:43,779 --> 00:11:51,889
anyway so back to what we were trying to
do I showed you this report that we were

110
00:11:51,889 --> 00:11:57,879
analyzing and we saw these files that
had different Mb fives and at the same

111
00:11:57,879 --> 00:12:04,160
time so what we did was we looked
started looking more closely into those

112
00:12:04,160 --> 00:12:09,189
files are in this case we looked at this
thing called da ticket or exe this was a

113
00:12:09,189 --> 00:12:15,360
campaign run by some now and if you just
went to Ryerson total

114
00:12:15,360 --> 00:12:21,809
indeed to Kodiak see it gave literally
thousands of entries all obviously a lot

115
00:12:21,809 --> 00:12:26,740
of the malware Wenders had submitted
these files for analysis to virustotal

116
00:12:26,740 --> 00:12:32,610
and they had copies of all of those
files in addition to what we had done a

117
00:12:32,610 --> 00:12:39,870
whole bunch of samples from Meijer store
and in here you can see that the last

118
00:12:39,870 --> 00:12:46,059
field like in this first line over here
that says 0074 adept at MB file the file

119
00:12:46,059 --> 00:12:53,300
and every one of these has a different
Andy five and the very first the first

120
00:12:53,300 --> 00:12:58,670
feel it has a bunch of numbers in there
is the beginning of the SSD cache ok so

121
00:12:58,670 --> 00:13:05,349
all of these are matches what it what it
shows is the block sites there are two

122
00:13:05,350 --> 00:13:12,279
hashes and then the filing and if you
start looking at the way these houses

123
00:13:12,279 --> 00:13:15,759
are constructed like to look at the
second and third entries you'll start

124
00:13:15,759 --> 00:13:21,550
seeing that that is the same character
that start occurring until probably like

125
00:13:21,550 --> 00:13:27,059
somewhere close to very end so that just
sort of shows you what how similar they

126
00:13:27,059 --> 00:13:28,880
potentially are

127
00:13:28,880 --> 00:13:33,810
so then we started digging in further
into these files so does it a quick hex

128
00:13:33,810 --> 00:13:41,430
dump file itself and noticed that
there's just one line that is being

129
00:13:41,430 --> 00:13:48,329
continuously monitor a lot of these
files and on the right over here we did

130
00:13:48,330 --> 00:13:55,480
the results found that over a thousand
files had a 99 percent difference

131
00:13:55,480 --> 00:14:02,900
1919 Burton similarity between each
other ok so clearly there's polymorphism

132
00:14:02,900 --> 00:14:10,430
out there very very rampant now the
question was so how can we use SSD

133
00:14:10,430 --> 00:14:15,819
potentially improve our look up because
that's the that that was the key goal of

134
00:14:15,820 --> 00:14:18,890
trying to use something as deep to do
lookups I mean you can do comparisons

135
00:14:18,890 --> 00:14:25,199
between filed you got a malware files
show you can find other similar or not

136
00:14:25,200 --> 00:14:30,600
but then now I receive email it filed
for analysis I have a whole bunch of

137
00:14:30,600 --> 00:14:35,690
asses deep ashes and Michael Jackson
compare every single one of them so

138
00:14:35,690 --> 00:14:39,230
that's that's an order and problem in
some sense just gonna take way too long

139
00:14:39,230 --> 00:14:44,120
so that's the essence deep look a
problem in some sense she got an input

140
00:14:44,120 --> 00:14:50,970
file coming in we have a huge list of
huge database of hashes and then we'd

141
00:14:50,970 --> 00:14:55,360
literally have to compare every one of
these houses to figure out which one of

142
00:14:55,360 --> 00:15:02,380
the places and if there's a close match
in there so as you look so good there in

143
00:15:02,380 --> 00:15:08,220
in its base storm in the way they had
they had started the corn and soybean

144
00:15:08,220 --> 00:15:11,410
need to make some changes in our heart
long and hard about this particular

145
00:15:11,410 --> 00:15:18,740
problem so what we did was we decided
that he would take that hash and then we

146
00:15:18,740 --> 00:15:24,350
would bring it up into chunks and then
create an index lost each one of those

147
00:15:24,350 --> 00:15:32,230
chunks and then try and look up each one
of those chunks individually and make a

148
00:15:32,230 --> 00:15:35,520
little linked list if there were
additional entries in there and then

149
00:15:35,520 --> 00:15:38,790
link it back into the mean

150
00:15:38,790 --> 00:15:47,439
and that immediately gave us a
significantly higher rate of almost like

151
00:15:47,440 --> 00:15:57,020
order one in in all of our lookups so
that was that was a huge win for us in

152
00:15:57,020 --> 00:16:01,760
terms of how we can do lookups using as
deep and not having to do a file

153
00:16:01,760 --> 00:16:07,750
comparison with every single so the next
question was now an okay so we've got

154
00:16:07,750 --> 00:16:13,830
the SDP look up now working pretty well
but how do we create this / database do

155
00:16:13,830 --> 00:16:18,120
we take all are now where samples and if
we just stick them all into the house

156
00:16:18,120 --> 00:16:22,290
database then you know we're going to
have a very very large database and

157
00:16:22,290 --> 00:16:27,620
there's gonna be a lot of similarities
in the database itself so our next

158
00:16:27,620 --> 00:16:28,500
problem

159
00:16:28,500 --> 00:16:37,240
laws do sort of figure out how can we
optimize the database cells so this case

160
00:16:37,240 --> 00:16:42,920
the problem became ok I've got a input
file I'm going to stick that in the

161
00:16:42,920 --> 00:16:47,449
database and the question as to whether
I need to or not or is this something

162
00:16:47,450 --> 00:16:53,170
else that's already similar to that
particular and we played on the couple

163
00:16:53,170 --> 00:16:57,319
of algorithms what we did was while we
were inserting the file into the

164
00:16:57,320 --> 00:17:01,800
database we found that there was almost
always a natural fit if there was one

165
00:17:01,800 --> 00:17:06,379
already in there we can set be
rescheduled in there and if there was

166
00:17:06,380 --> 00:17:10,350
then we could apply one or one of many
algorithms in terms of either replacing

167
00:17:10,349 --> 00:17:14,959
the new one of the old old one keeping
the old one or if the pressure was low

168
00:17:14,960 --> 00:17:18,780
enough just added in there so those were
those are some of the database

169
00:17:18,780 --> 00:17:21,780
optimizations that that we had me

170
00:17:22,290 --> 00:17:25,290
so many questions

171
00:17:26,920 --> 00:17:38,570
oK so that's that we develop for using
SSD from a perspective rather than just

172
00:17:38,570 --> 00:17:47,340
a combat comparison of two files now the
question was is really the gold standard

173
00:17:47,340 --> 00:17:49,100
for doing

174
00:17:49,100 --> 00:17:56,500
gnashing and the answer is probably not
an entirely surprised that it hasn't

175
00:17:56,500 --> 00:18:01,460
been replaced by all these Mallory
vendors by something that the more

176
00:18:01,460 --> 00:18:08,400
powerful learn more current so first of
all this technology is circa 20 2006

177
00:18:08,400 --> 00:18:13,890
that when it was first developed and
since then there have been multiple hour

178
00:18:13,890 --> 00:18:19,830
then you know just nvm as the house and
hash you know some big boob girl and

179
00:18:19,830 --> 00:18:23,470
then there's this whole area of
approximation matching that people are

180
00:18:23,470 --> 00:18:28,590
some researchers are working on and
there are some some experiments being

181
00:18:28,590 --> 00:18:33,510
done right now in comparing the
effectiveness of these algorithms with

182
00:18:33,510 --> 00:18:39,260
us as deep and in almost all cases they
find that the new algorithm way we are

183
00:18:39,260 --> 00:18:46,629
what does one more thing is that as he
has a limitation in that you can't

184
00:18:46,630 --> 00:18:53,220
compare two files that are very
different in terms of their size so the

185
00:18:53,220 --> 00:18:59,120
initial block size does matter alot so
if you do you create another file that

186
00:18:59,120 --> 00:19:02,949
actually identical in terms of its
content but then you just had a lot of

187
00:19:02,950 --> 00:19:11,520
euros or or no then this is Charles
doesn't doesn't work so well so it does

188
00:19:11,520 --> 00:19:18,600
have those limitations and the next
thing is that as we started looking into

189
00:19:18,600 --> 00:19:25,399
more of these files are files that we
were seeing detecting in the field we

190
00:19:25,400 --> 00:19:31,410
were we began to see a smaller trend in
an hour on Thurs going from polymorphic

191
00:19:31,410 --> 00:19:34,700
malware and

192
00:19:34,700 --> 00:19:38,890
what this means is that polymorphism
simple changes in the files like I said

193
00:19:38,890 --> 00:19:45,630
you know a few bits change and coding
encryption is not emotion is more about

194
00:19:45,630 --> 00:19:50,950
just changing the overall structure
itself but if yer tends to be the scene

195
00:19:50,950 --> 00:19:54,020
so we're seeing you seeing that
happening is also getting less and less

196
00:19:54,020 --> 00:20:00,450
hit snow in terms of the sale of the
different MB files and seemed so now

197
00:20:00,450 --> 00:20:04,350
what we're thinking is maybe there's
something like machine learning that

198
00:20:04,350 --> 00:20:10,360
might be a better fit for detecting be
sort of approximation and so on and

199
00:20:10,360 --> 00:20:19,429
that's something that we're going right
now I think I did pretty well so awesome

200
00:20:19,430 --> 00:20:20,000
thank you

201
00:20:20,000 --> 00:20:23,230
any questions

202
00:20:23,230 --> 00:20:45,670
yeah I know what that is correct we only
use yet we have not done it but the same

203
00:20:45,670 --> 00:20:59,090
same concept can be applied to any of
those that is correct so encryption

204
00:20:59,090 --> 00:21:04,189
would work over here what you have to do
you have to unencrypted and then work on

205
00:21:04,190 --> 00:21:08,740
the unencrypted so with encryption
that's the that's the issue and again

206
00:21:08,740 --> 00:21:14,090
you can also do things like you can take
a memory dump off every single file and

207
00:21:14,090 --> 00:21:19,010
then analyzed that this is Deepak that
we can do it at multiple stages

208
00:21:19,010 --> 00:21:23,440
depending upon where your comfort level
of operation as yep

209
00:21:24,050 --> 00:22:24,120
absolutely so so the thing is as deep in
its raw but with its raw binary format

210
00:22:24,120 --> 00:22:28,489
analysis will completely fail in those
cases so what you have to do is you have

211
00:22:28,490 --> 00:22:32,330
to take every one of these files and
sort of normalizing which is you have to

212
00:22:32,330 --> 00:22:38,659
as I said go on the ultimate ultimate
mechanism for using it is to get a

213
00:22:38,660 --> 00:22:43,520
memory dump so that you eliminate all
those you know no ops and all that kind

214
00:22:43,520 --> 00:22:50,310
of stuff and then see if you can light
so that that's sort of the only we had

215
00:22:50,310 --> 00:22:59,030
eluded in my last few slides even . be
subverted by my now at all just today

216
00:22:59,030 --> 00:23:05,340
there's a huge trend towards going to
metamorphic now where where they changed

217
00:23:05,340 --> 00:23:09,260
the entire set of instructions like for
example encino register in the memory

218
00:23:09,260 --> 00:23:13,070
they will start using register be and
then you know change the an order of

219
00:23:13,070 --> 00:23:18,399
instructions such that it does the same
thing but then in different sequences

220
00:23:18,400 --> 00:23:22,930
ultimate behavior is the same but you
know you have you have different

221
00:23:22,930 --> 00:23:26,320
different ways of sequencing things and
all of those things were completely

222
00:23:26,320 --> 00:23:28,740
defeated

223
00:23:28,740 --> 00:24:36,090
ok

