1
00:00:00,060 --> 00:00:05,850
welcome everyone<font color="#CCCCCC"> we're almost at the end</font>

2
00:00:02,550 --> 00:00:08,010
<font color="#E5E5E5">this is it's been a long two days with</font>

3
00:00:05,850 --> 00:00:10,410
lots<font color="#E5E5E5"> of good talks and we got one more</font>

4
00:00:08,010 --> 00:00:12,210
here<font color="#CCCCCC"> before the closing remarks so I'm</font>

5
00:00:10,410 --> 00:00:16,350
gonna<font color="#E5E5E5"> hand it over and let the speaker</font>

6
00:00:12,210 --> 00:00:18,960
begin thanks<font color="#E5E5E5"> John thank you everybody</font>

7
00:00:16,350 --> 00:00:19,650
for coming<font color="#CCCCCC"> to my talk I know</font><font color="#E5E5E5"> it's almost</font>

8
00:00:18,960 --> 00:00:22,289
<font color="#E5E5E5">closing time</font>

9
00:00:19,650 --> 00:00:24,150
<font color="#E5E5E5">so I'll try</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make it</font><font color="#CCCCCC"> quick</font><font color="#E5E5E5"> well I want</font>

10
00:00:22,289 --> 00:00:25,439
<font color="#CCCCCC">to say to thank yous</font><font color="#E5E5E5"> actually first of</font>

11
00:00:24,150 --> 00:00:27,359
all<font color="#E5E5E5"> to everybody who is</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> this room</font>

12
00:00:25,439 --> 00:00:27,990
today<font color="#CCCCCC"> listening to this I appreciate you</font>

13
00:00:27,359 --> 00:00:30,480
<font color="#E5E5E5">coming in</font>

14
00:00:27,990 --> 00:00:31,859
giving me some<font color="#E5E5E5"> of your time and I also</font>

15
00:00:30,480 --> 00:00:33,390
want to say thank<font color="#CCCCCC"> you</font><font color="#E5E5E5"> to everybody in</font>

16
00:00:31,859 --> 00:00:36,030
the security<font color="#CCCCCC"> community who has thought</font>

17
00:00:33,390 --> 00:00:37,829
about worked on and tried to<font color="#E5E5E5"> implement</font>

18
00:00:36,030 --> 00:00:40,320
<font color="#E5E5E5">our security automation at some point in</font>

19
00:00:37,829 --> 00:00:43,379
time<font color="#E5E5E5"> in their career much of what I've</font>

20
00:00:40,320 --> 00:00:44,760
I'm talking about<font color="#E5E5E5"> today</font><font color="#CCCCCC"> is based off of</font>

21
00:00:43,379 --> 00:00:46,800
what I've<font color="#CCCCCC"> learned</font><font color="#E5E5E5"> from the community and</font>

22
00:00:44,760 --> 00:00:49,320
so this is sort<font color="#E5E5E5"> of a way to try</font><font color="#CCCCCC"> and get</font>

23
00:00:46,800 --> 00:00:51,180
back<font color="#CCCCCC"> um</font><font color="#E5E5E5"> you may have noticed that the</font>

24
00:00:49,320 --> 00:00:54,120
title of<font color="#E5E5E5"> my talk changed that's because</font>

25
00:00:51,180 --> 00:00:55,110
I refocused it but it's still<font color="#CCCCCC"> pretty</font>

26
00:00:54,120 --> 00:00:56,250
<font color="#E5E5E5">much we're going to be talking about</font>

27
00:00:55,110 --> 00:00:57,750
automation<font color="#E5E5E5"> here today</font><font color="#CCCCCC"> and our</font>

28
00:00:56,250 --> 00:01:00,870
civilization framework that we've built

29
00:00:57,750 --> 00:01:04,019
<font color="#CCCCCC">artists as a team Who am I</font>

30
00:01:00,870 --> 00:01:05,970
my name is Bonnie<font color="#CCCCCC"> balligan</font><font color="#E5E5E5"> I am a senior</font>

31
00:01:04,019 --> 00:01:06,810
<font color="#CCCCCC">security engineer at olio I've been</font>

32
00:01:05,970 --> 00:01:08,310
there for three<font color="#CCCCCC"> years</font>

33
00:01:06,810 --> 00:01:12,930
thank you that<font color="#E5E5E5"> is my team showing</font>

34
00:01:08,310 --> 00:01:15,689
support team<font color="#CCCCCC"> Talia I've been there</font><font color="#E5E5E5"> for</font>

35
00:01:12,930 --> 00:01:16,799
<font color="#CCCCCC">three years and</font><font color="#E5E5E5"> I've</font><font color="#CCCCCC"> been focused</font>

36
00:01:15,689 --> 00:01:18,809
predominantly on the<font color="#E5E5E5"> challenge of</font>

37
00:01:16,799 --> 00:01:20,939
automating security operations response

38
00:01:18,810 --> 00:01:23,610
<font color="#CCCCCC">plans I am a software engineer</font><font color="#E5E5E5"> at heart</font>

39
00:01:20,939 --> 00:01:24,960
<font color="#E5E5E5">and that's kind of why I'm here today to</font>

40
00:01:23,610 --> 00:01:27,570
<font color="#E5E5E5">talk about some of the stuff</font><font color="#CCCCCC"> that we've</font>

41
00:01:24,960 --> 00:01:29,908
been<font color="#E5E5E5"> working on what</font><font color="#CCCCCC"> exactly</font><font color="#E5E5E5"> am I on</font>

42
00:01:27,570 --> 00:01:31,350
about on our team we've been<font color="#E5E5E5"> creating a</font>

43
00:01:29,909 --> 00:01:33,210
<font color="#CCCCCC">service</font><font color="#E5E5E5"> security automation framework</font>

44
00:01:31,350 --> 00:01:36,509
<font color="#E5E5E5">I'm going to talk about why we built it</font>

45
00:01:33,210 --> 00:01:38,158
<font color="#E5E5E5">sort of our story what exactly it is how</font>

46
00:01:36,509 --> 00:01:39,329
we built it<font color="#E5E5E5"> and I'm gonna leave you with</font>

47
00:01:38,159 --> 00:01:41,400
a call to<font color="#CCCCCC"> action</font>

48
00:01:39,329 --> 00:01:43,079
I will spoil<font color="#E5E5E5"> the call to</font><font color="#CCCCCC"> action a little</font>

49
00:01:41,400 --> 00:01:45,210
ahead<font color="#E5E5E5"> of time just</font><font color="#CCCCCC"> to set expectations</font>

50
00:01:43,079 --> 00:01:47,130
right<font color="#E5E5E5"> we don't have a public github</font>

51
00:01:45,210 --> 00:01:49,380
today but I still<font color="#CCCCCC"> have a way for each</font>

52
00:01:47,130 --> 00:01:51,270
and every<font color="#E5E5E5"> one each everybody</font><font color="#CCCCCC"> each and</font>

53
00:01:49,380 --> 00:01:53,429
every person<font color="#E5E5E5"> in the audience to engage</font>

54
00:01:51,270 --> 00:01:55,140
<font color="#CCCCCC">with me after this</font><font color="#E5E5E5"> because our goal is</font>

55
00:01:53,430 --> 00:01:58,140
to<font color="#E5E5E5"> open-source</font><font color="#CCCCCC"> war we've been working on</font>

56
00:01:55,140 --> 00:02:00,930
if you have questions<font color="#E5E5E5"> during the course</font>

57
00:01:58,140 --> 00:02:03,030
of my<font color="#E5E5E5"> talk slider</font><font color="#CCCCCC"> you can push</font><font color="#E5E5E5"> the</font>

58
00:02:00,930 --> 00:02:04,860
questions there but<font color="#CCCCCC"> I</font><font color="#E5E5E5"> will also</font><font color="#CCCCCC"> try</font><font color="#E5E5E5"> and</font>

59
00:02:03,030 --> 00:02:07,649
be I will hang<font color="#CCCCCC"> around afterwards</font><font color="#E5E5E5"> and you</font>

60
00:02:04,860 --> 00:02:12,000
<font color="#E5E5E5">can ask me more</font><font color="#CCCCCC"> in-depth questions</font><font color="#E5E5E5"> cool</font>

61
00:02:07,649 --> 00:02:13,680
so<font color="#E5E5E5"> let's really begin secure</font><font color="#CCCCCC"> why did we</font>

62
00:02:12,000 --> 00:02:17,519
create<font color="#CCCCCC"> a server security</font><font color="#E5E5E5"> automation</font>

63
00:02:13,680 --> 00:02:19,250
<font color="#E5E5E5">framework</font><font color="#CCCCCC"> whoa</font><font color="#E5E5E5"> because of this like one</font>

64
00:02:17,519 --> 00:02:21,420
day we woke up and<font color="#E5E5E5"> we realized that</font>

65
00:02:19,250 --> 00:02:24,269
security operations<font color="#CCCCCC"> had become</font><font color="#E5E5E5"> way too</font>

66
00:02:21,420 --> 00:02:26,849
hard<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the reason it became hard for</font>

67
00:02:24,269 --> 00:02:28,739
us was<font color="#E5E5E5"> because at Twilio</font><font color="#CCCCCC"> we operated</font>

68
00:02:26,849 --> 00:02:31,768
overwhelming scale and we do so with

69
00:02:28,739 --> 00:02:33,840
<font color="#E5E5E5">really small teams as</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> security</font>

70
00:02:31,769 --> 00:02:35,549
operations team our job is to<font color="#E5E5E5"> detect and</font>

71
00:02:33,840 --> 00:02:37,859
respond<font color="#CCCCCC"> to</font><font color="#E5E5E5"> threats in</font><font color="#CCCCCC"> Toyo's environment</font>

72
00:02:35,549 --> 00:02:40,560
<font color="#CCCCCC">we do this</font><font color="#E5E5E5"> through numerous procedures</font>

73
00:02:37,859 --> 00:02:43,139
like<font color="#CCCCCC"> is Incident Response for mobility</font>

74
00:02:40,560 --> 00:02:44,760
<font color="#E5E5E5">management</font><font color="#CCCCCC"> threat detection</font><font color="#E5E5E5"> compliance</font>

75
00:02:43,139 --> 00:02:47,700
auditing<font color="#E5E5E5"> all of the good stuff</font><font color="#CCCCCC"> that</font>

76
00:02:44,760 --> 00:02:49,950
we've heard<font color="#CCCCCC"> different talks about during</font>

77
00:02:47,700 --> 00:02:51,388
the<font color="#E5E5E5"> course of this conference the</font>

78
00:02:49,950 --> 00:02:53,339
environment that we operating and

79
00:02:51,389 --> 00:02:54,930
operate in is extremely<font color="#CCCCCC"> large</font><font color="#E5E5E5"> and</font>

80
00:02:53,340 --> 00:02:57,840
extremely<font color="#E5E5E5"> diverse</font><font color="#CCCCCC"> and it continues to</font>

81
00:02:54,930 --> 00:03:00,689
<font color="#E5E5E5">grow and our</font><font color="#CCCCCC"> engineering team is our</font>

82
00:02:57,840 --> 00:03:04,349
security<font color="#CCCCCC"> operations team it's</font><font color="#E5E5E5"> pretty</font>

83
00:03:00,689 --> 00:03:06,209
small<font color="#E5E5E5"> so very early on we</font><font color="#CCCCCC"> learned</font><font color="#E5E5E5"> kind</font>

84
00:03:04,349 --> 00:03:09,030
<font color="#E5E5E5">of the hard way that the</font><font color="#CCCCCC"> path to success</font>

85
00:03:06,209 --> 00:03:12,629
<font color="#CCCCCC">for us is to focus on the right things</font>

86
00:03:09,030 --> 00:03:15,540
<font color="#E5E5E5">for</font><font color="#CCCCCC"> us we felt that the right thing was</font>

87
00:03:12,629 --> 00:03:17,489
to help our organization<font color="#CCCCCC"> figure</font><font color="#E5E5E5"> out what</font>

88
00:03:15,540 --> 00:03:20,489
it needs to<font color="#E5E5E5"> do right</font><font color="#CCCCCC"> help it figure out</font>

89
00:03:17,489 --> 00:03:22,590
<font color="#E5E5E5">the processes procedures</font><font color="#CCCCCC"> relationships</font>

90
00:03:20,489 --> 00:03:25,069
and technologies<font color="#E5E5E5"> that it needs to</font><font color="#CCCCCC"> have</font>

91
00:03:22,590 --> 00:03:26,940
in place to uplevel<font color="#E5E5E5"> its security game</font>

92
00:03:25,069 --> 00:03:28,440
unfortunately for us we<font color="#CCCCCC"> found</font><font color="#E5E5E5"> ourselves</font>

93
00:03:26,940 --> 00:03:31,409
in a<font color="#CCCCCC"> situation where we were spending</font>

94
00:03:28,440 --> 00:03:33,930
too much time<font color="#CCCCCC"> executing procedures</font>

95
00:03:31,409 --> 00:03:36,720
manually that<font color="#E5E5E5"> we couldn't invest as much</font>

96
00:03:33,930 --> 00:03:39,780
<font color="#CCCCCC">time as we</font><font color="#E5E5E5"> wanted in up</font><font color="#CCCCCC"> levelling our</font>

97
00:03:36,720 --> 00:03:41,579
security<font color="#E5E5E5"> program our ideal state of</font>

98
00:03:39,780 --> 00:03:44,370
things was<font color="#CCCCCC"> to</font><font color="#E5E5E5"> spend a lot of time</font>

99
00:03:41,579 --> 00:03:48,120
creating<font color="#E5E5E5"> procedures and very little time</font>

100
00:03:44,370 --> 00:03:51,359
<font color="#E5E5E5">executing them to get there what we felt</font>

101
00:03:48,120 --> 00:03:53,930
<font color="#E5E5E5">we needed was some sort of magic box</font>

102
00:03:51,359 --> 00:03:56,459
<font color="#CCCCCC">that would take the procedures we create</font>

103
00:03:53,930 --> 00:03:57,870
executed<font color="#CCCCCC"> providers feedback on the</font>

104
00:03:56,459 --> 00:04:00,090
execution<font color="#CCCCCC"> of those procedures or</font>

105
00:03:57,870 --> 00:04:03,299
escalate<font color="#E5E5E5"> those executions to us as</font>

106
00:04:00,090 --> 00:04:06,150
necessary<font color="#E5E5E5"> and do all of this while</font><font color="#CCCCCC"> being</font>

107
00:04:03,299 --> 00:04:09,090
low effort<font color="#CCCCCC"> low</font><font color="#E5E5E5"> effort to operate in low</font>

108
00:04:06,150 --> 00:04:10,739
effort<font color="#E5E5E5"> to develop so we wanted this</font>

109
00:04:09,090 --> 00:04:12,540
magic box we realized that<font color="#E5E5E5"> the magic box</font>

110
00:04:10,739 --> 00:04:16,798
<font color="#E5E5E5">could have been full</font><font color="#CCCCCC"> of anything</font><font color="#E5E5E5"> cats</font>

111
00:04:12,540 --> 00:04:18,570
dogs<font color="#E5E5E5"> humans machines we didn't try but</font>

112
00:04:16,798 --> 00:04:21,599
<font color="#CCCCCC">we</font><font color="#E5E5E5"> suspect that a cats and dogs wouldn't</font>

113
00:04:18,570 --> 00:04:23,310
work<font color="#CCCCCC"> very well</font><font color="#E5E5E5"> but we realized and we</font>

114
00:04:21,599 --> 00:04:25,710
couldn't quite<font color="#CCCCCC"> offer</font><font color="#E5E5E5"> all of our</font>

115
00:04:23,310 --> 00:04:27,930
procedures<font color="#CCCCCC"> to humans directly</font>

116
00:04:25,710 --> 00:04:29,669
because we didn't feel<font color="#CCCCCC"> that</font><font color="#E5E5E5"> one we</font>

117
00:04:27,930 --> 00:04:31,889
didn't feel<font color="#E5E5E5"> was a frugal solution to buy</font>

118
00:04:29,669 --> 00:04:33,780
a sock and<font color="#E5E5E5"> two we just</font><font color="#CCCCCC"> felt that</font><font color="#E5E5E5"> there</font>

119
00:04:31,889 --> 00:04:36,419
could possibly<font color="#CCCCCC"> be a better way some sort</font>

120
00:04:33,780 --> 00:04:38,940
of<font color="#E5E5E5"> synergy between humans and</font>

121
00:04:36,419 --> 00:04:41,210
automations<font color="#CCCCCC"> so we figured that</font>

122
00:04:38,940 --> 00:04:45,180
automation might be the route to<font color="#E5E5E5"> go with</font>

123
00:04:41,210 --> 00:04:47,070
<font color="#CCCCCC">for our</font><font color="#E5E5E5"> magic box but when we looked out</font>

124
00:04:45,180 --> 00:04:49,199
there we found<font color="#CCCCCC"> very few</font><font color="#E5E5E5"> perfect</font>

125
00:04:47,070 --> 00:04:51,840
implementations of the magic box<font color="#E5E5E5"> that we</font>

126
00:04:49,199 --> 00:04:53,759
wanted<font color="#E5E5E5"> we felt good implementations we</font>

127
00:04:51,840 --> 00:04:56,580
found some good magic<font color="#CCCCCC"> and we found</font><font color="#E5E5E5"> some</font>

128
00:04:53,759 --> 00:04:59,100
good boxes but we didn't<font color="#E5E5E5"> quite find the</font>

129
00:04:56,580 --> 00:05:01,050
perfect<font color="#CCCCCC"> amount of box</font><font color="#E5E5E5"> we saw great</font>

130
00:04:59,100 --> 00:05:03,360
articles<font color="#E5E5E5"> they told us that what you</font><font color="#CCCCCC"> are</font>

131
00:05:01,050 --> 00:05:05,820
<font color="#E5E5E5">looking for</font><font color="#CCCCCC"> is a security</font><font color="#E5E5E5"> orchestration</font>

132
00:05:03,360 --> 00:05:06,930
and automation<font color="#CCCCCC"> our framework but many of</font>

133
00:05:05,820 --> 00:05:10,229
<font color="#E5E5E5">those articles didn't ship with a</font>

134
00:05:06,930 --> 00:05:12,720
concrete implementation of a saw<font color="#E5E5E5"> that's</font>

135
00:05:10,229 --> 00:05:14,340
<font color="#CCCCCC">what they call it when we did</font><font color="#E5E5E5"> see</font>

136
00:05:12,720 --> 00:05:16,800
<font color="#CCCCCC">conquered implementations in the form of</font>

137
00:05:14,340 --> 00:05:19,409
security<font color="#E5E5E5"> products they were either not</font>

138
00:05:16,800 --> 00:05:22,349
good<font color="#E5E5E5"> or they were actually good but it</font>

139
00:05:19,410 --> 00:05:25,139
came<font color="#E5E5E5"> with</font><font color="#CCCCCC"> a high cost</font><font color="#E5E5E5"> and some</font>

140
00:05:22,349 --> 00:05:26,699
orchestration requirements<font color="#E5E5E5"> that didn't</font>

141
00:05:25,139 --> 00:05:28,610
<font color="#E5E5E5">quite</font><font color="#CCCCCC"> fit into our environment or that</font>

142
00:05:26,699 --> 00:05:31,680
we as a<font color="#E5E5E5"> small team didn't want to adopt</font>

143
00:05:28,610 --> 00:05:33,650
we did see some community<font color="#E5E5E5"> are examples</font>

144
00:05:31,680 --> 00:05:35,970
<font color="#E5E5E5">that got really close</font><font color="#CCCCCC"> to being perfect</font>

145
00:05:33,650 --> 00:05:39,679
<font color="#CCCCCC">there</font><font color="#E5E5E5"> are only</font><font color="#CCCCCC"> challenged there was</font><font color="#E5E5E5"> that</font>

146
00:05:35,970 --> 00:05:42,360
they were either to use<font color="#E5E5E5"> case specific or</font>

147
00:05:39,680 --> 00:05:44,310
they were examples that showed us how<font color="#E5E5E5"> to</font>

148
00:05:42,360 --> 00:05:46,530
get<font color="#CCCCCC"> started but</font><font color="#E5E5E5"> not how to go all the</font>

149
00:05:44,310 --> 00:05:49,380
way through<font color="#CCCCCC"> in solving our use cases so</font>

150
00:05:46,530 --> 00:05:50,698
we<font color="#E5E5E5"> thought</font><font color="#CCCCCC"> hmmm</font><font color="#E5E5E5"> maybe we should take a</font>

151
00:05:49,380 --> 00:05:54,330
swing<font color="#E5E5E5"> here trying to build out this</font>

152
00:05:50,699 --> 00:05:55,889
perfect<font color="#CCCCCC"> magic box for ourselves</font><font color="#E5E5E5"> the</font>

153
00:05:54,330 --> 00:05:58,260
first thing that we had<font color="#E5E5E5"> to do was define</font>

154
00:05:55,889 --> 00:05:59,580
what it was<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to do well it was</font>

155
00:05:58,260 --> 00:06:01,320
<font color="#E5E5E5">going to be sort of</font><font color="#CCCCCC"> like a security</font>

156
00:05:59,580 --> 00:06:02,789
automation and orchestration framework

157
00:06:01,320 --> 00:06:04,409
<font color="#CCCCCC">something that would</font><font color="#E5E5E5"> allow us to</font>

158
00:06:02,789 --> 00:06:07,139
<font color="#E5E5E5">automate any of the security procedures</font>

159
00:06:04,409 --> 00:06:08,610
<font color="#CCCCCC">that we have</font><font color="#E5E5E5"> with minimal development an</font>

160
00:06:07,139 --> 00:06:09,780
orchestration effort<font color="#E5E5E5"> that was the</font>

161
00:06:08,610 --> 00:06:11,840
additional<font color="#CCCCCC"> constraint that we</font><font color="#E5E5E5"> gave</font>

162
00:06:09,780 --> 00:06:14,090
ourselves<font color="#CCCCCC"> it has to take very little</font>

163
00:06:11,840 --> 00:06:17,820
<font color="#CCCCCC">development time and orchestration time</font>

164
00:06:14,090 --> 00:06:20,159
how is<font color="#CCCCCC"> it going to do it well by not</font>

165
00:06:17,820 --> 00:06:22,139
being<font color="#CCCCCC"> perfect</font><font color="#E5E5E5"> by not being magic in by</font>

166
00:06:20,159 --> 00:06:23,550
not<font color="#E5E5E5"> being a box right we wanted a</font>

167
00:06:22,139 --> 00:06:26,909
perfect magic box<font color="#E5E5E5"> that was actually not</font>

168
00:06:23,550 --> 00:06:28,919
<font color="#E5E5E5">perfect not magic</font><font color="#CCCCCC"> and not a box myth</font>

169
00:06:26,909 --> 00:06:30,750
on some level might seem like<font color="#E5E5E5"> doesn't</font>

170
00:06:28,919 --> 00:06:33,479
make sense<font color="#E5E5E5"> but what I mean</font><font color="#CCCCCC"> by not</font>

171
00:06:30,750 --> 00:06:37,139
<font color="#E5E5E5">perfect was</font><font color="#CCCCCC"> that we weren't</font><font color="#E5E5E5"> looking for</font>

172
00:06:33,479 --> 00:06:38,130
<font color="#E5E5E5">a</font><font color="#CCCCCC"> canned solution that claimed to solve</font>

173
00:06:37,139 --> 00:06:40,560
our problem in

174
00:06:38,130 --> 00:06:43,590
what we wanted<font color="#E5E5E5"> was a framework that will</font>

175
00:06:40,560 --> 00:06:45,330
<font color="#E5E5E5">allow</font><font color="#CCCCCC"> us very quickly</font><font color="#E5E5E5"> create the use</font>

176
00:06:43,590 --> 00:06:49,140
cases and automate the use cases that<font color="#E5E5E5"> we</font>

177
00:06:45,330 --> 00:06:51,810
wanted<font color="#E5E5E5"> by not magic</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> wanted to stay</font>

178
00:06:49,140 --> 00:06:53,580
with simple technologies in simple

179
00:06:51,810 --> 00:06:55,650
components<font color="#CCCCCC"> build up built on top of</font>

180
00:06:53,580 --> 00:06:57,000
solid design principles that<font color="#E5E5E5"> software</font>

181
00:06:55,650 --> 00:06:59,520
engineers have<font color="#E5E5E5"> been using for a</font><font color="#CCCCCC"> long</font>

182
00:06:57,000 --> 00:07:02,190
time<font color="#E5E5E5"> to build</font><font color="#CCCCCC"> their frameworks</font><font color="#E5E5E5"> and by</font>

183
00:06:59,520 --> 00:07:04,289
not a box<font color="#E5E5E5"> we didn't want something that</font>

184
00:07:02,190 --> 00:07:06,630
lived<font color="#E5E5E5"> on a server that had proprietary</font>

185
00:07:04,290 --> 00:07:09,030
components that we had to figure<font color="#CCCCCC"> out how</font>

186
00:07:06,630 --> 00:07:12,120
<font color="#E5E5E5">to scale or deal with when we run into</font>

187
00:07:09,030 --> 00:07:13,830
<font color="#E5E5E5">situations so to frame the</font><font color="#CCCCCC"> rest of the</font>

188
00:07:12,120 --> 00:07:15,630
conversation<font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to show a little bit</font>

189
00:07:13,830 --> 00:07:18,780
<font color="#E5E5E5">of a demo of a use case</font><font color="#CCCCCC"> that we've</font>

190
00:07:15,630 --> 00:07:21,900
<font color="#E5E5E5">automated internally oh and to give a</font>

191
00:07:18,780 --> 00:07:25,830
little<font color="#E5E5E5"> bit of background here</font><font color="#CCCCCC"> we have in</font>

192
00:07:21,900 --> 00:07:28,080
our environment<font color="#CCCCCC"> we have socks boxes</font>

193
00:07:25,830 --> 00:07:29,609
socks compliant rolls<font color="#CCCCCC"> whenever an</font>

194
00:07:28,080 --> 00:07:32,010
engineer<font color="#E5E5E5"> SS agents into one of those</font>

195
00:07:29,610 --> 00:07:33,810
boxes<font color="#E5E5E5"> they are required to</font><font color="#CCCCCC"> provide a</font>

196
00:07:32,010 --> 00:07:36,930
tracking ticket that says<font color="#E5E5E5"> hey this</font><font color="#CCCCCC"> is</font>

197
00:07:33,810 --> 00:07:38,280
why I'm SS<font color="#CCCCCC"> Aging in this is the reason</font>

198
00:07:36,930 --> 00:07:40,650
that<font color="#E5E5E5"> I'm trying to</font><font color="#CCCCCC"> change something on</font>

199
00:07:38,280 --> 00:07:43,619
<font color="#E5E5E5">the box as a security operations team</font>

200
00:07:40,650 --> 00:07:45,630
our job is to<font color="#E5E5E5"> take that ticket validate</font>

201
00:07:43,620 --> 00:07:47,580
that<font color="#E5E5E5"> it actually exists</font><font color="#CCCCCC"> and in the event</font>

202
00:07:45,630 --> 00:07:50,700
that<font color="#E5E5E5"> it doesn't exist follow up with the</font>

203
00:07:47,580 --> 00:07:54,090
engineer<font color="#E5E5E5"> right not entirely the most</font>

204
00:07:50,700 --> 00:07:55,530
complex<font color="#E5E5E5"> tasks are and it was something</font>

205
00:07:54,090 --> 00:07:57,719
that we felt<font color="#CCCCCC"> would be</font><font color="#E5E5E5"> better served if</font>

206
00:07:55,530 --> 00:08:02,960
we could<font color="#CCCCCC"> automate it so this</font><font color="#E5E5E5"> is a video</font>

207
00:07:57,720 --> 00:08:02,960
<font color="#E5E5E5">showing just if I can</font><font color="#CCCCCC"> find my</font><font color="#E5E5E5"> mouse here</font>

208
00:08:03,020 --> 00:08:11,960
what that automation looks like so this

209
00:08:06,960 --> 00:08:16,500
<font color="#E5E5E5">is the engineers view the SSH into a box</font>

210
00:08:11,960 --> 00:08:19,799
<font color="#E5E5E5">put their password they get prompted to</font>

211
00:08:16,500 --> 00:08:21,720
put<font color="#E5E5E5"> in a ticket number they put in a</font>

212
00:08:19,800 --> 00:08:24,060
<font color="#E5E5E5">ticket number it lets them go into</font><font color="#CCCCCC"> the</font>

213
00:08:21,720 --> 00:08:27,060
box<font color="#E5E5E5"> on the back end our automations</font><font color="#CCCCCC"> are</font>

214
00:08:24,060 --> 00:08:29,160
validating<font color="#CCCCCC"> that ticket and shortly they</font>

215
00:08:27,060 --> 00:08:30,120
get a<font color="#E5E5E5"> message that says</font><font color="#CCCCCC"> hey we noticed</font>

216
00:08:29,160 --> 00:08:32,820
you<font color="#E5E5E5"> logged into a box</font>

217
00:08:30,120 --> 00:08:34,469
you provided a ticket however that

218
00:08:32,820 --> 00:08:37,289
ticket<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you provided</font><font color="#E5E5E5"> isn't quite</font>

219
00:08:34,469 --> 00:08:38,669
<font color="#CCCCCC">valid</font><font color="#E5E5E5"> maybe they put in a typo can you</font>

220
00:08:37,289 --> 00:08:39,960
give me<font color="#E5E5E5"> another ticket do you have a</font>

221
00:08:38,669 --> 00:08:42,510
<font color="#CCCCCC">Jared ticket you have</font><font color="#E5E5E5"> an incident</font>

222
00:08:39,960 --> 00:08:45,330
tracking ticket the engineer says hey we

223
00:08:42,510 --> 00:08:50,460
have<font color="#E5E5E5"> you got</font><font color="#CCCCCC"> your ticket a</font><font color="#E5E5E5"> pop-up comes</font>

224
00:08:45,330 --> 00:08:52,080
up it<font color="#E5E5E5"> takes the ticket goes back on</font><font color="#CCCCCC"> the</font>

225
00:08:50,460 --> 00:08:55,920
back<font color="#E5E5E5"> end and validates that</font>

226
00:08:52,080 --> 00:08:57,269
and eventually<font color="#E5E5E5"> after validating it sends</font>

227
00:08:55,920 --> 00:08:59,610
<font color="#E5E5E5">them another message and says hey</font><font color="#CCCCCC"> okay</font>

228
00:08:57,269 --> 00:09:01,620
we validated thank you for going<font color="#CCCCCC"> through</font>

229
00:08:59,610 --> 00:09:03,149
this process<font color="#E5E5E5"> with us so that's a high</font>

230
00:09:01,620 --> 00:09:05,550
<font color="#E5E5E5">level of one type of procedure that we</font>

231
00:09:03,149 --> 00:09:07,430
wanted<font color="#E5E5E5"> to automate we have very many</font>

232
00:09:05,550 --> 00:09:11,490
<font color="#CCCCCC">different</font><font color="#E5E5E5"> types of procedures like a</font>

233
00:09:07,430 --> 00:09:14,489
phishing email dispatch or just

234
00:09:11,490 --> 00:09:18,750
following<font color="#E5E5E5"> up on on suspicious</font><font color="#CCCCCC"> silence</font>

235
00:09:14,490 --> 00:09:20,970
that we see in our environment so this

236
00:09:18,750 --> 00:09:23,310
<font color="#E5E5E5">is the circles view of things like the</font>

237
00:09:20,970 --> 00:09:24,839
security<font color="#CCCCCC"> operations</font><font color="#E5E5E5"> engineer when our</font>

238
00:09:23,310 --> 00:09:27,180
automations are done<font color="#CCCCCC"> cuts enjoy</font>

239
00:09:24,839 --> 00:09:28,860
<font color="#E5E5E5">etiquette and</font><font color="#CCCCCC"> provide</font><font color="#E5E5E5"> all of the</font>

240
00:09:27,180 --> 00:09:31,019
<font color="#CCCCCC">information that they collected from the</font>

241
00:09:28,860 --> 00:09:32,730
user in<font color="#CCCCCC"> that your etiquette right</font><font color="#E5E5E5"> so</font>

242
00:09:31,019 --> 00:09:34,560
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> an example of</font><font color="#E5E5E5"> something that we</font>

243
00:09:32,730 --> 00:09:36,060
built<font color="#E5E5E5"> out on top of our</font><font color="#CCCCCC"> framework</font><font color="#E5E5E5"> it's</font>

244
00:09:34,560 --> 00:09:38,369
the kind<font color="#E5E5E5"> of things</font><font color="#CCCCCC"> that we wanted to</font>

245
00:09:36,060 --> 00:09:40,380
<font color="#E5E5E5">build and we felt that there was room</font>

246
00:09:38,370 --> 00:09:42,450
for<font color="#CCCCCC"> this in the community as well so</font>

247
00:09:40,380 --> 00:09:44,010
<font color="#CCCCCC">let's let's go a little</font><font color="#E5E5E5"> bit deep inside</font>

248
00:09:42,450 --> 00:09:45,810
this<font color="#E5E5E5"> framework and talk about the</font>

249
00:09:44,010 --> 00:09:49,019
<font color="#E5E5E5">technology behind it right like how does</font>

250
00:09:45,810 --> 00:09:50,550
<font color="#CCCCCC">this thing actually work show of hands</font>

251
00:09:49,019 --> 00:09:53,670
how many people<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> room are familiar</font>

252
00:09:50,550 --> 00:09:56,609
<font color="#CCCCCC">with AWS step functions</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> that's a</font>

253
00:09:53,670 --> 00:09:58,740
number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> people um if I'll just take a</font>

254
00:09:56,610 --> 00:10:01,170
little detour here<font color="#CCCCCC"> and say if you were</font>

255
00:09:58,740 --> 00:10:03,329
<font color="#E5E5E5">trying to automate security operations</font>

256
00:10:01,170 --> 00:10:05,160
procedures and you're looking for<font color="#CCCCCC"> a way</font>

257
00:10:03,329 --> 00:10:07,589
to<font color="#E5E5E5"> get</font><font color="#CCCCCC"> started I</font><font color="#E5E5E5"> think a</font><font color="#CCCCCC"> DeBeers step</font>

258
00:10:05,160 --> 00:10:09,029
functions is a good way to start<font color="#CCCCCC"> Oh</font><font color="#E5E5E5"> what</font>

259
00:10:07,589 --> 00:10:10,800
we did however was take that<font color="#E5E5E5"> technology</font>

260
00:10:09,029 --> 00:10:13,110
<font color="#CCCCCC">at a very high level</font>

261
00:10:10,800 --> 00:10:16,170
it's a<font color="#CCCCCC"> workflow automation engine that</font>

262
00:10:13,110 --> 00:10:19,200
is hosted by<font color="#E5E5E5"> AWS we took that technology</font>

263
00:10:16,170 --> 00:10:21,510
<font color="#E5E5E5">which we saw as ideal for automating</font>

264
00:10:19,200 --> 00:10:23,430
response<font color="#E5E5E5"> plants and we surrounded it</font>

265
00:10:21,510 --> 00:10:25,740
<font color="#CCCCCC">with the additional infrastructure and</font>

266
00:10:23,430 --> 00:10:28,649
code libraries that we needed<font color="#E5E5E5"> to</font><font color="#CCCCCC"> create</font>

267
00:10:25,740 --> 00:10:30,540
a<font color="#E5E5E5"> full-fledged security orchestration</font>

268
00:10:28,649 --> 00:10:32,399
<font color="#CCCCCC">and automation</font><font color="#E5E5E5"> framework right</font><font color="#CCCCCC"> so the</font>

269
00:10:30,540 --> 00:10:35,459
infrastructure and the code that<font color="#CCCCCC"> we</font>

270
00:10:32,399 --> 00:10:38,310
added<font color="#CCCCCC"> was focused</font><font color="#E5E5E5"> on solving</font><font color="#CCCCCC"> problems</font>

271
00:10:35,459 --> 00:10:41,069
like<font color="#E5E5E5"> executing executing actions taking</font>

272
00:10:38,310 --> 00:10:43,829
in events processing events<font color="#E5E5E5"> storing data</font>

273
00:10:41,070 --> 00:10:46,940
<font color="#CCCCCC">long-term enabling human interactions in</font>

274
00:10:43,829 --> 00:10:50,250
helping developers or create procedures

275
00:10:46,940 --> 00:10:53,130
<font color="#E5E5E5">so much more so let's go a little bit</font>

276
00:10:50,250 --> 00:10:55,800
and talk<font color="#E5E5E5"> about what is inside this</font><font color="#CCCCCC"> box</font>

277
00:10:53,130 --> 00:10:57,810
now<font color="#E5E5E5"> we started to build it up for</font>

278
00:10:55,800 --> 00:10:59,550
compute what we do is we write<font color="#E5E5E5"> AWS</font>

279
00:10:57,810 --> 00:11:01,560
Thunder functions so<font color="#CCCCCC"> we take our</font>

280
00:10:59,550 --> 00:11:03,540
procedures which we typically define in

281
00:11:01,560 --> 00:11:05,649
words we split them<font color="#E5E5E5"> out into different</font>

282
00:11:03,540 --> 00:11:08,649
<font color="#E5E5E5">tasks and</font><font color="#CCCCCC"> write one eight</font>

283
00:11:05,649 --> 00:11:10,589
<font color="#CCCCCC">via slander per task</font><font color="#E5E5E5"> Italy Istanbul</font>

284
00:11:08,649 --> 00:11:13,240
<font color="#E5E5E5">function service our unit at work</font><font color="#CCCCCC"> and</font>

285
00:11:10,589 --> 00:11:15,910
when we design our functions we designed

286
00:11:13,240 --> 00:11:18,490
<font color="#E5E5E5">them to be modular</font><font color="#CCCCCC"> so that</font><font color="#E5E5E5"> we can write</font>

287
00:11:15,910 --> 00:11:21,399
a function once and use it<font color="#E5E5E5"> over and over</font>

288
00:11:18,490 --> 00:11:24,970
<font color="#E5E5E5">again in multiple response plans this is</font>

289
00:11:21,399 --> 00:11:26,529
how we cut down<font color="#E5E5E5"> the automation time for</font>

290
00:11:24,970 --> 00:11:30,639
the<font color="#E5E5E5"> development time for automation</font>

291
00:11:26,529 --> 00:11:32,559
<font color="#E5E5E5">tasks here are two sample lambda</font>

292
00:11:30,639 --> 00:11:35,679
functions that we use for the sake of

293
00:11:32,559 --> 00:11:38,110
the conference<font color="#E5E5E5"> I stripped out a majority</font>

294
00:11:35,679 --> 00:11:40,540
of<font color="#E5E5E5"> the error checking code but the rest</font>

295
00:11:38,110 --> 00:11:41,769
of it is actually deployed into<font color="#E5E5E5"> our</font>

296
00:11:40,540 --> 00:11:43,389
environment<font color="#CCCCCC"> and doing things</font><font color="#E5E5E5"> for us</font>

297
00:11:41,769 --> 00:11:45,480
right now<font color="#E5E5E5"> the key things that I want you</font>

298
00:11:43,389 --> 00:11:47,499
<font color="#CCCCCC">to</font><font color="#E5E5E5"> focus on here</font><font color="#CCCCCC"> are one</font><font color="#E5E5E5"> they're short</font>

299
00:11:45,480 --> 00:11:48,850
<font color="#E5E5E5">lambda functions are pretty easy to</font>

300
00:11:47,499 --> 00:11:50,319
<font color="#E5E5E5">write if</font><font color="#CCCCCC"> you can write a script in</font>

301
00:11:48,850 --> 00:11:52,749
Python<font color="#CCCCCC"> you can write a lambda function</font>

302
00:11:50,319 --> 00:11:54,998
and that was what we were<font color="#CCCCCC"> going</font><font color="#E5E5E5"> for and</font>

303
00:11:52,749 --> 00:11:57,699
they are modular<font color="#E5E5E5"> we don't hard-code any</font>

304
00:11:54,999 --> 00:11:59,350
of the specifics of the<font color="#CCCCCC"> request that</font>

305
00:11:57,699 --> 00:12:01,979
they are<font color="#E5E5E5"> trying to make to whatever</font><font color="#CCCCCC"> API</font>

306
00:11:59,350 --> 00:12:04,089
<font color="#E5E5E5">that they are interacting</font><font color="#CCCCCC"> with and so</font>

307
00:12:01,980 --> 00:12:05,619
because we<font color="#CCCCCC"> don't hard-code</font><font color="#E5E5E5"> any of that</font>

308
00:12:04,089 --> 00:12:09,399
<font color="#CCCCCC">they're modular we can move</font><font color="#E5E5E5"> them around</font>

309
00:12:05,619 --> 00:12:12,600
between<font color="#E5E5E5"> frameworks between sorry</font><font color="#CCCCCC"> between</font>

310
00:12:09,399 --> 00:12:12,600
procedures<font color="#E5E5E5"> I'm gonna take a water break</font>

311
00:12:16,199 --> 00:12:20,889
go so we<font color="#E5E5E5"> have these modular lambda</font>

312
00:12:18,759 --> 00:12:23,379
functions<font color="#CCCCCC"> modular lambda functions that</font>

313
00:12:20,889 --> 00:12:26,800
we<font color="#E5E5E5"> can put in different procedures and</font>

314
00:12:23,379 --> 00:12:28,480
<font color="#E5E5E5">also share around to other people the</font>

315
00:12:26,800 --> 00:12:30,059
next<font color="#CCCCCC"> thing we do is that we orchestrate</font>

316
00:12:28,480 --> 00:12:32,949
<font color="#E5E5E5">them together using a workflow engine</font>

317
00:12:30,059 --> 00:12:35,889
this workflow<font color="#CCCCCC"> engine is AWS step</font>

318
00:12:32,949 --> 00:12:37,929
functions at a very high<font color="#CCCCCC"> level what</font><font color="#E5E5E5"> it</font>

319
00:12:35,889 --> 00:12:39,610
does is takes a whole bunch<font color="#E5E5E5"> of</font><font color="#CCCCCC"> lambda</font>

320
00:12:37,929 --> 00:12:42,399
functions and organizes<font color="#CCCCCC"> them into</font><font color="#E5E5E5"> a</font>

321
00:12:39,610 --> 00:12:44,230
procedure the procedure<font color="#E5E5E5"> can have linear</font>

322
00:12:42,399 --> 00:12:46,329
components where things execute<font color="#E5E5E5"> inline</font>

323
00:12:44,230 --> 00:12:48,610
power components where they execute

324
00:12:46,329 --> 00:12:51,878
together<font color="#CCCCCC"> or conditional components who</font>

325
00:12:48,610 --> 00:12:53,949
are the<font color="#E5E5E5"> the path of execution changes</font>

326
00:12:51,879 --> 00:12:56,170
based off of some new data that<font color="#CCCCCC"> is</font>

327
00:12:53,949 --> 00:12:59,410
generated<font color="#CCCCCC"> by a previous lambda function</font>

328
00:12:56,170 --> 00:13:04,049
in the execution<font color="#E5E5E5"> a Tobias step functions</font>

329
00:12:59,410 --> 00:13:07,868
represents procedures as state machines

330
00:13:04,049 --> 00:13:10,480
here is what a state machine<font color="#E5E5E5"> looks like</font>

331
00:13:07,869 --> 00:13:12,369
in the development<font color="#E5E5E5"> phase</font><font color="#CCCCCC"> it's literally</font>

332
00:13:10,480 --> 00:13:15,249
just<font color="#CCCCCC"> a</font><font color="#E5E5E5"> Jason field like it's a</font><font color="#CCCCCC"> jason</font>

333
00:13:12,369 --> 00:13:16,420
object that has a description of what

334
00:13:15,249 --> 00:13:19,150
are the<font color="#CCCCCC"> different states the state</font>

335
00:13:16,420 --> 00:13:20,469
machine has what resources

336
00:13:19,150 --> 00:13:22,360
for the most<font color="#CCCCCC"> part which are lambda</font>

337
00:13:20,470 --> 00:13:24,400
functions is it using and what

338
00:13:22,360 --> 00:13:26,050
parameters are<font color="#E5E5E5"> being passed to those</font>

339
00:13:24,400 --> 00:13:28,810
lambda functions to get them to do<font color="#E5E5E5"> their</font>

340
00:13:26,050 --> 00:13:30,459
<font color="#E5E5E5">work right so with a</font><font color="#CCCCCC"> Tobias</font><font color="#E5E5E5"> lambda and</font>

341
00:13:28,810 --> 00:13:32,650
with Olivia step functions we pretty

342
00:13:30,460 --> 00:13:34,930
much<font color="#E5E5E5"> just these two components pretty</font>

343
00:13:32,650 --> 00:13:36,880
bare-bones<font color="#CCCCCC"> you already have a workable</font>

344
00:13:34,930 --> 00:13:39,760
<font color="#CCCCCC">our security automation and</font>

345
00:13:36,880 --> 00:13:42,160
orchestration framework but<font color="#E5E5E5"> they're not</font>

346
00:13:39,760 --> 00:13:44,040
enough<font color="#CCCCCC"> there's some challenges that they</font>

347
00:13:42,160 --> 00:13:46,630
don't solve by themselves<font color="#CCCCCC"> out of</font><font color="#E5E5E5"> the box</font>

348
00:13:44,040 --> 00:13:48,069
<font color="#E5E5E5">one of</font><font color="#CCCCCC"> them is data storage</font>

349
00:13:46,630 --> 00:13:51,910
so let's how cool the challenge<font color="#E5E5E5"> of data</font>

350
00:13:48,070 --> 00:13:54,490
storage what we use is AWS<font color="#CCCCCC"> dynamodb</font><font color="#E5E5E5"> we</font>

351
00:13:51,910 --> 00:13:56,110
use<font color="#CCCCCC"> DynamoDB for two reasons one to</font>

352
00:13:54,490 --> 00:13:58,839
store the execution<font color="#E5E5E5"> results of lambda</font>

353
00:13:56,110 --> 00:14:01,230
functions and<font color="#CCCCCC"> two to store data</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> the</font>

354
00:13:58,839 --> 00:14:05,380
events<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> coming into our system</font>

355
00:14:01,230 --> 00:14:07,570
<font color="#CCCCCC">the first</font><font color="#E5E5E5"> one is I think more fun to</font>

356
00:14:05,380 --> 00:14:09,130
talk about<font color="#E5E5E5"> because what we do there with</font>

357
00:14:07,570 --> 00:14:11,500
storing the execution<font color="#E5E5E5"> of lambda</font>

358
00:14:09,130 --> 00:14:14,050
functions is<font color="#CCCCCC"> that every time a lambda</font>

359
00:14:11,500 --> 00:14:16,300
function executes within our system we

360
00:14:14,050 --> 00:14:19,000
automatically write the execution

361
00:14:16,300 --> 00:14:21,130
results to a<font color="#CCCCCC"> dynamodb table so that all</font>

362
00:14:19,000 --> 00:14:23,800
<font color="#CCCCCC">of its results</font><font color="#E5E5E5"> become available</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

363
00:14:21,130 --> 00:14:26,740
subsequent<font color="#E5E5E5"> lambda functions in</font><font color="#CCCCCC"> this step</font>

364
00:14:23,800 --> 00:14:28,150
function state machine<font color="#CCCCCC"> EWS has its own</font>

365
00:14:26,740 --> 00:14:29,500
<font color="#CCCCCC">database step functions has its own</font>

366
00:14:28,150 --> 00:14:31,480
mechanism for passing data between

367
00:14:29,500 --> 00:14:33,550
lambda<font color="#E5E5E5"> functions we found it to me a</font>

368
00:14:31,480 --> 00:14:35,830
little<font color="#CCCCCC"> bit limited and we found that we</font>

369
00:14:33,550 --> 00:14:38,020
couldn't in the future do analytics<font color="#E5E5E5"> on</font>

370
00:14:35,830 --> 00:14:41,050
top of the<font color="#E5E5E5"> results if</font><font color="#CCCCCC"> we wanted to so</font><font color="#E5E5E5"> we</font>

371
00:14:38,020 --> 00:14:42,910
took all<font color="#CCCCCC"> of the state or execution</font>

372
00:14:41,050 --> 00:14:45,370
<font color="#E5E5E5">context management outside of a table a</font>

373
00:14:42,910 --> 00:14:48,459
step functions<font color="#E5E5E5"> and we put it in</font><font color="#CCCCCC"> dynamodb</font>

374
00:14:45,370 --> 00:14:50,350
tables the next<font color="#E5E5E5"> challenge</font><font color="#CCCCCC"> for us</font><font color="#E5E5E5"> so</font>

375
00:14:48,459 --> 00:14:53,199
<font color="#CCCCCC">dynamodb was pretty much</font><font color="#E5E5E5"> how</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> solved</font>

376
00:14:50,350 --> 00:14:56,620
the<font color="#E5E5E5"> problem of managing the the state or</font>

377
00:14:53,200 --> 00:14:59,650
<font color="#CCCCCC">the execution context of a procedure as</font>

378
00:14:56,620 --> 00:15:04,750
<font color="#E5E5E5">the procedure executed over time the</font>

379
00:14:59,650 --> 00:15:07,180
next<font color="#CCCCCC"> challenge to</font><font color="#E5E5E5"> solve was getting</font>

380
00:15:04,750 --> 00:15:10,839
<font color="#CCCCCC">information</font><font color="#E5E5E5"> into the system for</font><font color="#CCCCCC"> that we</font>

381
00:15:07,180 --> 00:15:13,420
<font color="#CCCCCC">leverage</font><font color="#E5E5E5"> AWS</font><font color="#CCCCCC"> API gateway and Olivia's</font>

382
00:15:10,839 --> 00:15:16,060
<font color="#E5E5E5">cloud watch events we use API gateway</font>

383
00:15:13,420 --> 00:15:19,120
<font color="#E5E5E5">for</font><font color="#CCCCCC"> real-time events to ingest</font><font color="#E5E5E5"> real-time</font>

384
00:15:16,060 --> 00:15:22,839
events<font color="#E5E5E5"> into the system and we use AWS</font>

385
00:15:19,120 --> 00:15:25,360
<font color="#E5E5E5">cloud watch to invent to run scheduled</font>

386
00:15:22,839 --> 00:15:29,200
events into<font color="#E5E5E5"> our system</font><font color="#CCCCCC"> we typically</font>

387
00:15:25,360 --> 00:15:31,270
write one event per endpoint and at the

388
00:15:29,200 --> 00:15:32,860
event<font color="#E5E5E5"> endpoints we</font>

389
00:15:31,270 --> 00:15:35,680
a couple of things<font color="#E5E5E5"> like processing the</font>

390
00:15:32,860 --> 00:15:37,720
events taking<font color="#CCCCCC"> them in deduplicating the</font>

391
00:15:35,680 --> 00:15:39,699
events to ensure that<font color="#E5E5E5"> we're not running</font>

392
00:15:37,720 --> 00:15:42,550
the same response plan<font color="#E5E5E5"> twice for</font>

393
00:15:39,700 --> 00:15:45,670
something that we've already seen<font color="#E5E5E5"> and we</font>

394
00:15:42,550 --> 00:15:47,260
<font color="#E5E5E5">also route the events that comment the</font>

395
00:15:45,670 --> 00:15:51,370
appropriate response plan that should<font color="#E5E5E5"> be</font>

396
00:15:47,260 --> 00:15:52,720
<font color="#CCCCCC">executed the other component that we</font>

397
00:15:51,370 --> 00:15:54,520
really needed<font color="#E5E5E5"> to build was</font><font color="#CCCCCC"> the human</font>

398
00:15:52,720 --> 00:15:56,350
interaction component<font color="#E5E5E5"> the the portion</font>

399
00:15:54,520 --> 00:15:58,600
<font color="#CCCCCC">that allows our system to go out there</font>

400
00:15:56,350 --> 00:16:01,030
interact<font color="#E5E5E5"> with the human virus something</font>

401
00:15:58,600 --> 00:16:03,970
<font color="#E5E5E5">like a slot channel</font><font color="#CCCCCC"> pull information</font>

402
00:16:01,030 --> 00:16:05,560
back into<font color="#E5E5E5"> the system and then change the</font>

403
00:16:03,970 --> 00:16:08,470
course<font color="#E5E5E5"> of its decision based off of the</font>

404
00:16:05,560 --> 00:16:10,719
information<font color="#CCCCCC"> that it pulled in the way we</font>

405
00:16:08,470 --> 00:16:13,060
pull this<font color="#E5E5E5"> off</font><font color="#CCCCCC"> is to leverage</font><font color="#E5E5E5"> again EWS</font>

406
00:16:10,720 --> 00:16:15,130
<font color="#CCCCCC">is step of feature in</font><font color="#E5E5E5"> AWS type functions</font>

407
00:16:13,060 --> 00:16:17,500
called an activity the activity

408
00:16:15,130 --> 00:16:19,420
essentially allows you to pause the

409
00:16:17,500 --> 00:16:22,900
execution of a playbook<font color="#E5E5E5"> until some</font>

410
00:16:19,420 --> 00:16:25,240
external job is<font color="#E5E5E5"> is accomplished so we</font>

411
00:16:22,900 --> 00:16:27,250
took<font color="#CCCCCC"> that functionality</font><font color="#E5E5E5"> of a double step</font>

412
00:16:25,240 --> 00:16:29,370
functions and created around the

413
00:16:27,250 --> 00:16:31,900
additional architecture to support

414
00:16:29,370 --> 00:16:34,210
<font color="#E5E5E5">pulling to support interacting with an</font>

415
00:16:31,900 --> 00:16:38,020
individual and pulling data back into

416
00:16:34,210 --> 00:16:39,760
AWS step functions<font color="#CCCCCC"> a very high level the</font>

417
00:16:38,020 --> 00:16:41,199
<font color="#E5E5E5">way it works is that</font><font color="#CCCCCC"> we have</font><font color="#E5E5E5"> one lambda</font>

418
00:16:39,760 --> 00:16:43,660
<font color="#E5E5E5">function send out a message to the</font>

419
00:16:41,200 --> 00:16:45,310
individual then trigger<font color="#E5E5E5"> an activity</font>

420
00:16:43,660 --> 00:16:48,100
which pauses the execution<font color="#E5E5E5"> of the</font>

421
00:16:45,310 --> 00:16:50,500
procedure<font color="#CCCCCC"> when the</font><font color="#E5E5E5"> person responds we</font>

422
00:16:48,100 --> 00:16:53,590
take the response in through another AWS

423
00:16:50,500 --> 00:16:57,220
API gateway<font color="#E5E5E5"> endpoint and we put</font><font color="#CCCCCC"> that</font>

424
00:16:53,590 --> 00:16:58,990
<font color="#CCCCCC">information back into the</font><font color="#E5E5E5"> procedure</font><font color="#CCCCCC"> via</font>

425
00:16:57,220 --> 00:17:01,270
the interview<font color="#CCCCCC"> staff functions activity</font>

426
00:16:58,990 --> 00:17:03,400
<font color="#CCCCCC">in this way we are able to reach</font><font color="#E5E5E5"> often</font>

427
00:17:01,270 --> 00:17:05,349
people<font color="#E5E5E5"> get information</font><font color="#CCCCCC"> pull it in and</font>

428
00:17:03,400 --> 00:17:10,510
then change the course of our execution

429
00:17:05,349 --> 00:17:12,609
<font color="#E5E5E5">based off of that</font><font color="#CCCCCC"> so all of this</font><font color="#E5E5E5"> are is</font>

430
00:17:10,510 --> 00:17:14,260
you know all<font color="#CCCCCC"> of what we</font><font color="#E5E5E5"> did was take a</font>

431
00:17:12,609 --> 00:17:16,869
degree<font color="#CCCCCC"> of star functions and build a lot</font>

432
00:17:14,260 --> 00:17:18,190
of<font color="#CCCCCC"> the missing components around</font><font color="#E5E5E5"> it the</font>

433
00:17:16,869 --> 00:17:20,050
thing<font color="#CCCCCC"> that</font><font color="#E5E5E5"> really glues all</font><font color="#CCCCCC"> those</font>

434
00:17:18,190 --> 00:17:21,760
missing<font color="#E5E5E5"> components together are is the</font>

435
00:17:20,050 --> 00:17:25,149
code library that we wrote for<font color="#E5E5E5"> this</font>

436
00:17:21,760 --> 00:17:29,080
called<font color="#CCCCCC"> Atlas core</font><font color="#E5E5E5"> it's implemented in</font>

437
00:17:25,150 --> 00:17:31,270
Python<font color="#CCCCCC"> it's what really makes this a</font>

438
00:17:29,080 --> 00:17:32,679
<font color="#E5E5E5">framework</font><font color="#CCCCCC"> for us right it's what takes a</font>

439
00:17:31,270 --> 00:17:34,900
double<font color="#E5E5E5"> your step functions from being</font>

440
00:17:32,680 --> 00:17:37,930
just a<font color="#CCCCCC"> workflow engine</font><font color="#E5E5E5"> to being the</font>

441
00:17:34,900 --> 00:17:40,390
<font color="#CCCCCC">Atlas automation framework firms we</font><font color="#E5E5E5"> ship</font>

442
00:17:37,930 --> 00:17:42,820
the the library with every lambda

443
00:17:40,390 --> 00:17:44,500
function that we write and<font color="#E5E5E5"> its goal is</font>

444
00:17:42,820 --> 00:17:47,639
<font color="#CCCCCC">to solve some of</font><font color="#E5E5E5"> the common</font>

445
00:17:44,500 --> 00:17:50,500
of automating security<font color="#CCCCCC"> or frameworks</font><font color="#E5E5E5"> so</font>

446
00:17:47,640 --> 00:17:53,110
<font color="#E5E5E5">specifically things like hey ensuring</font>

447
00:17:50,500 --> 00:17:55,419
that the<font color="#CCCCCC"> data that is generated</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> part</font>

448
00:17:53,110 --> 00:17:57,668
of the execution<font color="#CCCCCC"> of a response plan</font><font color="#E5E5E5"> gets</font>

449
00:17:55,419 --> 00:17:59,020
stored in<font color="#E5E5E5"> the right place ensuring that</font>

450
00:17:57,669 --> 00:18:01,539
<font color="#E5E5E5">lambda functions are processing data</font>

451
00:17:59,020 --> 00:18:03,250
correctly<font color="#E5E5E5"> ensuring that people have</font><font color="#CCCCCC"> the</font>

452
00:18:01,539 --> 00:18:05,320
<font color="#E5E5E5">right tools that they need to</font><font color="#CCCCCC"> implement</font>

453
00:18:03,250 --> 00:18:06,760
some of<font color="#E5E5E5"> the most common use cases that</font>

454
00:18:05,320 --> 00:18:09,220
<font color="#CCCCCC">they have with</font><font color="#E5E5E5"> lambda functions like</font>

455
00:18:06,760 --> 00:18:12,309
pulling data from<font color="#E5E5E5"> an s3 bucket</font><font color="#CCCCCC"> into a</font>

456
00:18:09,220 --> 00:18:14,650
lambda function<font color="#E5E5E5"> for processing so that</font>

457
00:18:12,309 --> 00:18:16,418
<font color="#CCCCCC">is the job of</font><font color="#E5E5E5"> the the code library it</font>

458
00:18:14,650 --> 00:18:17,980
just brings everything together and

459
00:18:16,419 --> 00:18:21,030
makes it easy<font color="#E5E5E5"> for people to continue to</font>

460
00:18:17,980 --> 00:18:23,409
<font color="#E5E5E5">build on</font><font color="#CCCCCC"> top of this as they</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> forward</font>

461
00:18:21,030 --> 00:18:27,539
all<font color="#E5E5E5"> of this together is what we call our</font>

462
00:18:23,409 --> 00:18:29,409
Atlas automation framework to recap

463
00:18:27,539 --> 00:18:31,539
events<font color="#E5E5E5"> coming through the left side</font>

464
00:18:29,409 --> 00:18:34,090
<font color="#E5E5E5">either through a Tobias</font><font color="#CCCCCC"> AP a gateway</font>

465
00:18:31,539 --> 00:18:37,750
<font color="#E5E5E5">endpoints or a cloud watch events</font>

466
00:18:34,090 --> 00:18:40,629
<font color="#E5E5E5">triggered a cloud scheduled event events</font>

467
00:18:37,750 --> 00:18:42,220
get stored in a<font color="#E5E5E5"> dynamo DB table</font><font color="#CCCCCC"> and then</font>

468
00:18:40,630 --> 00:18:44,679
the endpoints trigger the execution<font color="#E5E5E5"> of</font>

469
00:18:42,220 --> 00:18:47,130
our procedures<font color="#E5E5E5"> the procedures execute</font>

470
00:18:44,679 --> 00:18:49,690
<font color="#E5E5E5">each and every step of the response plan</font>

471
00:18:47,130 --> 00:18:51,340
reaching out to humans is necessary to

472
00:18:49,690 --> 00:18:54,039
gather more<font color="#E5E5E5"> information and pull that in</font>

473
00:18:51,340 --> 00:18:55,928
and<font color="#CCCCCC"> all</font><font color="#E5E5E5"> of the executions from the</font>

474
00:18:54,039 --> 00:18:58,690
lambda functions get stored in<font color="#CCCCCC"> dynamodb</font>

475
00:18:55,929 --> 00:19:00,549
tables making<font color="#CCCCCC"> them available</font><font color="#E5E5E5"> during</font><font color="#CCCCCC"> the</font>

476
00:18:58,690 --> 00:19:02,950
course of<font color="#E5E5E5"> execution as well as after</font><font color="#CCCCCC"> the</font>

477
00:19:00,549 --> 00:19:04,389
course of execution<font color="#CCCCCC"> so like in the</font>

478
00:19:02,950 --> 00:19:07,870
future<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can do analytics or</font>

479
00:19:04,390 --> 00:19:09,340
<font color="#E5E5E5">dashboarding as necessary so I want to</font>

480
00:19:07,870 --> 00:19:10,959
take that<font color="#CCCCCC"> thermal procedure that</font><font color="#E5E5E5"> I</font>

481
00:19:09,340 --> 00:19:13,418
showed you<font color="#E5E5E5"> early on and show you a</font>

482
00:19:10,960 --> 00:19:15,820
little<font color="#E5E5E5"> bit more of it of the behind the</font>

483
00:19:13,419 --> 00:19:17,620
scenes of what<font color="#CCCCCC"> actually goes on on</font><font color="#E5E5E5"> the</font>

484
00:19:15,820 --> 00:19:20,049
<font color="#CCCCCC">nab a step function side of things when</font>

485
00:19:17,620 --> 00:19:23,949
a procedure<font color="#E5E5E5"> is executing so on the</font><font color="#CCCCCC"> Left</font>

486
00:19:20,049 --> 00:19:25,539
<font color="#E5E5E5">you still have your slack your engineer</font>

487
00:19:23,950 --> 00:19:28,179
at<font color="#CCCCCC"> there slack</font>

488
00:19:25,539 --> 00:19:30,100
there's slack<font color="#E5E5E5"> up responding to a message</font>

489
00:19:28,179 --> 00:19:32,470
on the<font color="#E5E5E5"> right you have the aw step</font>

490
00:19:30,100 --> 00:19:36,100
functions console showing step functions

491
00:19:32,470 --> 00:19:38,590
in action what you were looking here

492
00:19:36,100 --> 00:19:41,918
looking at here is the<font color="#E5E5E5"> full-fledged</font>

493
00:19:38,590 --> 00:19:43,809
<font color="#E5E5E5">response plan each box is either a</font>

494
00:19:41,919 --> 00:19:47,049
lambda<font color="#CCCCCC"> function that is taking an action</font>

495
00:19:43,809 --> 00:19:49,780
or an<font color="#CCCCCC"> aw step functions mechanism for</font>

496
00:19:47,049 --> 00:19:55,480
making choices<font color="#E5E5E5"> based off of the data</font>

497
00:19:49,780 --> 00:19:55,800
that<font color="#E5E5E5"> is in</font><font color="#CCCCCC"> the system cool just that was</font>

498
00:19:55,480 --> 00:19:57,180
<font color="#E5E5E5">just</font>

499
00:19:55,800 --> 00:19:59,250
zooming in<font color="#E5E5E5"> to get you a better view</font><font color="#CCCCCC"> and</font>

500
00:19:57,180 --> 00:20:01,350
as<font color="#CCCCCC"> you can see as</font><font color="#E5E5E5"> the individual</font>

501
00:19:59,250 --> 00:20:04,980
interacts step function progresses

502
00:20:01,350 --> 00:20:07,050
through<font color="#CCCCCC"> the execution of the response</font>

503
00:20:04,980 --> 00:20:09,660
plan<font color="#CCCCCC"> it does a good job of giving</font>

504
00:20:07,050 --> 00:20:12,419
<font color="#E5E5E5">feedback about what succeeded and what</font>

505
00:20:09,660 --> 00:20:14,520
<font color="#E5E5E5">failed and because everything</font><font color="#CCCCCC"> is modular</font>

506
00:20:12,420 --> 00:20:17,730
<font color="#E5E5E5">and tied together</font><font color="#CCCCCC"> it makes</font><font color="#E5E5E5"> it easy for</font>

507
00:20:14,520 --> 00:20:19,889
<font color="#E5E5E5">us when</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> debugging response plans</font>

508
00:20:17,730 --> 00:20:26,400
to figure out what was<font color="#E5E5E5"> the component</font>

509
00:20:19,890 --> 00:20:28,560
that<font color="#E5E5E5"> was an issue so that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> step</font>

510
00:20:26,400 --> 00:20:30,030
functions in<font color="#CCCCCC"> abysus</font><font color="#E5E5E5"> step functions</font>

511
00:20:28,560 --> 00:20:33,379
<font color="#CCCCCC">back-end</font><font color="#E5E5E5"> just showing a little</font><font color="#CCCCCC"> bit of</font>

512
00:20:30,030 --> 00:20:36,660
<font color="#E5E5E5">how it</font><font color="#CCCCCC"> works what it does ultimately</font>

513
00:20:33,380 --> 00:20:38,220
<font color="#E5E5E5">going forward we think any BSC step</font>

514
00:20:36,660 --> 00:20:39,600
functions visuals are good there are

515
00:20:38,220 --> 00:20:41,070
<font color="#CCCCCC">some things that</font><font color="#E5E5E5"> they are lacking we</font>

516
00:20:39,600 --> 00:20:43,830
would love<font color="#E5E5E5"> to continue to build on top</font>

517
00:20:41,070 --> 00:20:46,710
<font color="#CCCCCC">of</font><font color="#E5E5E5"> this and are the components that they</font>

518
00:20:43,830 --> 00:20:49,530
may be<font color="#E5E5E5"> missing so let me go through some</font>

519
00:20:46,710 --> 00:20:52,050
<font color="#CCCCCC">of highlights again</font><font color="#E5E5E5"> the whole thing</font><font color="#CCCCCC"> is</font>

520
00:20:49,530 --> 00:20:53,700
<font color="#CCCCCC">service</font><font color="#E5E5E5"> which means that as a team</font><font color="#CCCCCC"> we</font>

521
00:20:52,050 --> 00:20:56,100
<font color="#CCCCCC">don't have to worry too much about</font>

522
00:20:53,700 --> 00:20:58,470
orchestrating servers<font color="#E5E5E5"> and ensuring that</font>

523
00:20:56,100 --> 00:21:02,159
<font color="#E5E5E5">hey like this thing this the server that</font>

524
00:20:58,470 --> 00:21:03,560
I bought<font color="#E5E5E5"> from someone stays up</font><font color="#CCCCCC"> we don't</font>

525
00:21:02,160 --> 00:21:05,670
have to<font color="#CCCCCC"> organize</font><font color="#E5E5E5"> figure out how to</font>

526
00:21:03,560 --> 00:21:07,620
orchestrate our<font color="#E5E5E5"> servers into a high</font>

527
00:21:05,670 --> 00:21:09,870
<font color="#E5E5E5">availability configuration it's also</font>

528
00:21:07,620 --> 00:21:13,050
<font color="#CCCCCC">ballast also because it's</font><font color="#E5E5E5"> selfless</font>

529
00:21:09,870 --> 00:21:15,899
<font color="#E5E5E5">things</font><font color="#CCCCCC"> auto-scale ridiculously well they</font>

530
00:21:13,050 --> 00:21:17,700
don't<font color="#CCCCCC"> auto</font><font color="#E5E5E5"> scale infinitely but the auto</font>

531
00:21:15,900 --> 00:21:20,280
scale very<font color="#CCCCCC"> well liked so</font><font color="#E5E5E5"> for example</font>

532
00:21:17,700 --> 00:21:22,800
lambda<font color="#E5E5E5"> functions I think with AWS you</font>

533
00:21:20,280 --> 00:21:24,899
can have a starting limit of a thousand

534
00:21:22,800 --> 00:21:26,550
<font color="#CCCCCC">concrete lambda functions running at the</font>

535
00:21:24,900 --> 00:21:28,490
same time<font color="#E5E5E5"> but you can follow the support</font>

536
00:21:26,550 --> 00:21:31,320
<font color="#CCCCCC">ticket in AWS</font><font color="#E5E5E5"> who bump that up for you</font>

537
00:21:28,490 --> 00:21:32,850
with AWS step functions their state

538
00:21:31,320 --> 00:21:34,710
machines which is what we use<font color="#E5E5E5"> to</font>

539
00:21:32,850 --> 00:21:36,379
represent<font color="#E5E5E5"> our procedures you can have a</font>

540
00:21:34,710 --> 00:21:39,270
million<font color="#CCCCCC"> of</font><font color="#E5E5E5"> those running concurrently</font>

541
00:21:36,380 --> 00:21:40,650
<font color="#CCCCCC">again</font><font color="#E5E5E5"> that's the starting limit there</font>

542
00:21:39,270 --> 00:21:42,870
will be there will<font color="#E5E5E5"> happily bump that</font>

543
00:21:40,650 --> 00:21:44,760
<font color="#CCCCCC">lemon up for you so that you can scale</font>

544
00:21:42,870 --> 00:21:45,709
as needed<font color="#E5E5E5"> or so that we can scale</font><font color="#CCCCCC"> as</font>

545
00:21:44,760 --> 00:21:48,540
needed

546
00:21:45,710 --> 00:21:50,610
so everything<font color="#CCCCCC"> Auto scales you don't have</font>

547
00:21:48,540 --> 00:21:53,520
to worry<font color="#E5E5E5"> about auto scaling we found</font>

548
00:21:50,610 --> 00:21:56,219
that in<font color="#E5E5E5"> using this framework we've had a</font>

549
00:21:53,520 --> 00:22:00,030
rapid automation<font color="#CCCCCC"> life cycle</font><font color="#E5E5E5"> so for us</font><font color="#CCCCCC"> it</font>

550
00:21:56,220 --> 00:22:03,360
typically<font color="#E5E5E5"> takes two</font><font color="#CCCCCC"> weeks which is one</font>

551
00:22:00,030 --> 00:22:06,629
sprint to take like an automation use

552
00:22:03,360 --> 00:22:08,080
case from idea<font color="#E5E5E5"> to come to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> concrete</font>

553
00:22:06,630 --> 00:22:10,120
implementation

554
00:22:08,080 --> 00:22:12,820
the for the most part we<font color="#CCCCCC"> found that the</font>

555
00:22:10,120 --> 00:22:15,639
hardest<font color="#CCCCCC"> part of</font><font color="#E5E5E5"> it is actually</font><font color="#CCCCCC"> figuring</font>

556
00:22:12,820 --> 00:22:17,950
<font color="#E5E5E5">out what the right response plan should</font>

557
00:22:15,640 --> 00:22:19,540
<font color="#CCCCCC">look like</font><font color="#E5E5E5"> which is what we want to be</font>

558
00:22:17,950 --> 00:22:21,180
doing<font color="#CCCCCC"> as security operations engineers</font>

559
00:22:19,540 --> 00:22:24,190
<font color="#CCCCCC">you don't want to be</font><font color="#E5E5E5"> two balls down</font>

560
00:22:21,180 --> 00:22:25,600
developing things<font color="#E5E5E5"> but we want to know</font><font color="#CCCCCC"> to</font>

561
00:22:24,190 --> 00:22:27,430
figure<font color="#E5E5E5"> out hey like what should the</font>

562
00:22:25,600 --> 00:22:29,230
procedure look like right here<font color="#E5E5E5"> and then</font>

563
00:22:27,430 --> 00:22:31,840
very quickly implement that<font color="#E5E5E5"> so we have a</font>

564
00:22:29,230 --> 00:22:33,040
<font color="#E5E5E5">very like our development lifecycle</font><font color="#CCCCCC"> in</font>

565
00:22:31,840 --> 00:22:36,010
terms of automation<font color="#CCCCCC"> has come down</font>

566
00:22:33,040 --> 00:22:38,560
significantly<font color="#E5E5E5"> all of the infrastructure</font>

567
00:22:36,010 --> 00:22:42,070
<font color="#E5E5E5">lives this code which makes it easy for</font>

568
00:22:38,560 --> 00:22:43,510
<font color="#E5E5E5">us to deploy an audit as well and thanks</font>

569
00:22:42,070 --> 00:22:48,510
<font color="#CCCCCC">to how</font><font color="#E5E5E5"> any of your step functions works</font>

570
00:22:43,510 --> 00:22:51,760
<font color="#E5E5E5">our procedures live us code as well</font>

571
00:22:48,510 --> 00:22:54,820
everything is extensible<font color="#CCCCCC"> it is all</font><font color="#E5E5E5"> built</font>

572
00:22:51,760 --> 00:22:57,250
on top of<font color="#CCCCCC"> a WSS architecture</font><font color="#E5E5E5"> and we try</font>

573
00:22:54,820 --> 00:23:00,159
to<font color="#E5E5E5"> build</font><font color="#CCCCCC"> in a way that makes it easy for</font>

574
00:22:57,250 --> 00:23:03,160
<font color="#E5E5E5">us</font><font color="#CCCCCC"> to reuse</font><font color="#E5E5E5"> components as well as extend</font>

575
00:23:00,160 --> 00:23:05,880
components as our use cases grow<font color="#E5E5E5"> so over</font>

576
00:23:03,160 --> 00:23:10,090
time we<font color="#E5E5E5"> have integrated like s/3 s/3</font>

577
00:23:05,880 --> 00:23:11,980
into our framework<font color="#CCCCCC"> and we're continually</font>

578
00:23:10,090 --> 00:23:13,649
evaluating and figuring<font color="#E5E5E5"> out like hey</font>

579
00:23:11,980 --> 00:23:16,300
what<font color="#E5E5E5"> else do we need to get the job done</font>

580
00:23:13,650 --> 00:23:18,460
<font color="#CCCCCC">we really like the fact that we're</font>

581
00:23:16,300 --> 00:23:23,050
trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> keep all of this open because</font>

582
00:23:18,460 --> 00:23:24,520
<font color="#CCCCCC">we know that</font><font color="#E5E5E5"> hey even if it's not even</font>

583
00:23:23,050 --> 00:23:26,649
if<font color="#E5E5E5"> we run</font><font color="#CCCCCC"> into a situation where the</font>

584
00:23:24,520 --> 00:23:28,360
framework<font color="#CCCCCC"> isn't doing what we want it to</font>

585
00:23:26,650 --> 00:23:30,700
do right now<font color="#E5E5E5"> and here</font><font color="#CCCCCC"> it isn't</font><font color="#E5E5E5"> able to</font>

586
00:23:28,360 --> 00:23:32,800
do what we wanted to<font color="#E5E5E5"> do like it's</font>

587
00:23:30,700 --> 00:23:34,840
extensible<font color="#E5E5E5"> we can go build it ourselves</font>

588
00:23:32,800 --> 00:23:36,940
<font color="#CCCCCC">we don't have to wait for somebody</font>

589
00:23:34,840 --> 00:23:39,490
<font color="#E5E5E5">else's</font><font color="#CCCCCC"> roadmap to</font><font color="#E5E5E5"> figure out if we're</font>

590
00:23:36,940 --> 00:23:40,510
going<font color="#E5E5E5"> to get this feature or not and the</font>

591
00:23:39,490 --> 00:23:43,120
last thing that<font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> mention</font><font color="#E5E5E5"> here</font>

592
00:23:40,510 --> 00:23:45,970
<font color="#E5E5E5">is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> designed this</font><font color="#E5E5E5"> thing for open</font>

593
00:23:43,120 --> 00:23:47,590
sourcing from<font color="#E5E5E5"> day one it was all it is</font>

594
00:23:45,970 --> 00:23:49,570
always our intention we are committed<font color="#CCCCCC"> to</font>

595
00:23:47,590 --> 00:23:54,340
it it<font color="#E5E5E5"> is our second priority which</font>

596
00:23:49,570 --> 00:23:56,590
brings<font color="#E5E5E5"> me</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> my last component which is</font>

597
00:23:54,340 --> 00:23:58,480
<font color="#E5E5E5">the call to</font><font color="#CCCCCC"> action we would</font><font color="#E5E5E5"> like you to</font>

598
00:23:56,590 --> 00:24:00,669
come build<font color="#CCCCCC"> this thing with us we</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> on</font>

599
00:23:58,480 --> 00:24:02,200
our journey to<font color="#E5E5E5"> open source the initial</font>

600
00:24:00,670 --> 00:24:05,770
<font color="#E5E5E5">plan was to</font><font color="#CCCCCC"> have this ready to open</font>

601
00:24:02,200 --> 00:24:08,140
source<font color="#CCCCCC"> today</font><font color="#E5E5E5"> but hey life happens</font><font color="#CCCCCC"> but</font>

602
00:24:05,770 --> 00:24:10,180
<font color="#E5E5E5">what we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> going to do is if you text</font>

603
00:24:08,140 --> 00:24:12,580
that<font color="#CCCCCC"> number you will</font><font color="#E5E5E5"> get my contact</font>

604
00:24:10,180 --> 00:24:14,680
<font color="#E5E5E5">details the way we will approach open</font>

605
00:24:12,580 --> 00:24:17,620
sourcing<font color="#E5E5E5"> this is by building</font><font color="#CCCCCC"> a community</font>

606
00:24:14,680 --> 00:24:19,150
we think<font color="#E5E5E5"> the technology is great but</font>

607
00:24:17,620 --> 00:24:20,449
<font color="#E5E5E5">when it comes to security automation and</font>

608
00:24:19,150 --> 00:24:22,790
orchestration

609
00:24:20,450 --> 00:24:24,350
I think that the bigger thing is<font color="#CCCCCC"> having</font>

610
00:24:22,790 --> 00:24:26,180
<font color="#E5E5E5">a community</font><font color="#CCCCCC"> of people who</font><font color="#E5E5E5"> are all</font>

611
00:24:24,350 --> 00:24:27,679
approaching the<font color="#E5E5E5"> problem</font><font color="#CCCCCC"> in a similar way</font>

612
00:24:26,180 --> 00:24:30,170
so that we can all help<font color="#E5E5E5"> each other</font>

613
00:24:27,680 --> 00:24:32,240
<font color="#E5E5E5">figure out how to get this thing done</font>

614
00:24:30,170 --> 00:24:33,680
better<font color="#E5E5E5"> quicker and faster</font><font color="#CCCCCC"> so we want</font><font color="#E5E5E5"> to</font>

615
00:24:32,240 --> 00:24:36,260
approach<font color="#CCCCCC"> it by</font><font color="#E5E5E5"> building out a community</font>

616
00:24:33,680 --> 00:24:39,830
<font color="#CCCCCC">of people starting by working</font><font color="#E5E5E5"> closely</font>

617
00:24:36,260 --> 00:24:42,050
with a handful<font color="#E5E5E5"> of people who are excited</font>

618
00:24:39,830 --> 00:24:46,399
about having<font color="#CCCCCC"> an open-source alternative</font>

619
00:24:42,050 --> 00:24:48,040
<font color="#E5E5E5">to secure automation so if you feel like</font>

620
00:24:46,400 --> 00:24:50,450
you want to<font color="#E5E5E5"> get in on the ground floor</font>

621
00:24:48,040 --> 00:24:53,120
<font color="#E5E5E5">text that</font><font color="#CCCCCC"> number or come talk to me</font>

622
00:24:50,450 --> 00:24:55,280
<font color="#E5E5E5">afterwards and</font><font color="#CCCCCC"> we will see how we</font><font color="#E5E5E5"> can</font>

623
00:24:53,120 --> 00:24:58,250
get you building on top<font color="#E5E5E5"> of</font><font color="#CCCCCC"> this thing as</font>

624
00:24:55,280 --> 00:25:01,070
<font color="#E5E5E5">quickly as possible</font><font color="#CCCCCC"> another way</font><font color="#E5E5E5"> to come</font>

625
00:24:58,250 --> 00:25:03,020
build is to join our<font color="#E5E5E5"> team we are</font><font color="#CCCCCC"> always</font>

626
00:25:01,070 --> 00:25:06,020
<font color="#E5E5E5">hiring we are actually hiring a lot</font>

627
00:25:03,020 --> 00:25:08,000
right now<font color="#E5E5E5"> at oil I think the boots might</font>

628
00:25:06,020 --> 00:25:10,940
be<font color="#E5E5E5"> close but much of my team is here you</font>

629
00:25:08,000 --> 00:25:14,120
can grab<font color="#E5E5E5"> them talk</font><font color="#CCCCCC"> to them see how you</font>

630
00:25:10,940 --> 00:25:16,010
fit into<font color="#E5E5E5"> our organization you can visit</font>

631
00:25:14,120 --> 00:25:19,520
<font color="#E5E5E5">our jobs page as well and I'm gonna be</font>

632
00:25:16,010 --> 00:25:21,020
<font color="#E5E5E5">hanging around come talk to me yeah</font>

633
00:25:19,520 --> 00:25:22,610
<font color="#E5E5E5">that's pretty much it</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> my time I</font>

634
00:25:21,020 --> 00:25:24,670
finished<font color="#E5E5E5"> with a lot of time to spare I</font>

635
00:25:22,610 --> 00:25:27,988
can't believe it

636
00:25:24,670 --> 00:25:27,989
[Applause]

637
00:25:28,240 --> 00:25:38,930
questions yes use<font color="#CCCCCC"> cases we have about</font>

638
00:25:35,810 --> 00:25:40,010
<font color="#CCCCCC">ten right now ten use cases that we've</font>

639
00:25:38,930 --> 00:25:42,800
deployed<font color="#E5E5E5"> into our</font><font color="#CCCCCC"> production environment</font>

640
00:25:40,010 --> 00:25:44,300
<font color="#CCCCCC">we are</font><font color="#E5E5E5"> continuously building more on top</font>

641
00:25:42,800 --> 00:25:46,129
<font color="#E5E5E5">of this we actually</font><font color="#CCCCCC"> have one in the</font>

642
00:25:44,300 --> 00:25:48,290
pipeline<font color="#E5E5E5"> right</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> do the demo</font><font color="#CCCCCC"> that I</font>

643
00:25:46,130 --> 00:25:51,340
showed you<font color="#E5E5E5"> is in the pipeline</font><font color="#CCCCCC"> we're</font>

644
00:25:48,290 --> 00:25:53,810
going to be deploying that this week<font color="#E5E5E5"> and</font>

645
00:25:51,340 --> 00:25:56,270
<font color="#CCCCCC">ten is a good start but we feel</font><font color="#E5E5E5"> like hey</font>

646
00:25:53,810 --> 00:25:58,040
we can do more so as much as<font color="#CCCCCC"> possible we</font>

647
00:25:56,270 --> 00:26:00,020
want<font color="#CCCCCC"> to get we want to do more</font><font color="#E5E5E5"> which is</font>

648
00:25:58,040 --> 00:26:04,639
why we want the community to pitch in

649
00:26:00,020 --> 00:26:06,920
here question<font color="#CCCCCC"> over here</font><font color="#E5E5E5"> yeah hi yeah</font>

650
00:26:04,640 --> 00:26:10,910
sorry<font color="#CCCCCC"> okay um</font><font color="#E5E5E5"> great talk I really</font>

651
00:26:06,920 --> 00:26:12,980
enjoyed it<font color="#E5E5E5"> and I also work on a team</font>

652
00:26:10,910 --> 00:26:15,980
<font color="#CCCCCC">that has a lot of resourcing problems so</font>

653
00:26:12,980 --> 00:26:19,190
this really<font color="#E5E5E5"> resonated with me</font><font color="#CCCCCC"> I wanted</font>

654
00:26:15,980 --> 00:26:20,840
<font color="#CCCCCC">to ask you</font><font color="#E5E5E5"> about the slide</font><font color="#CCCCCC"> that you</font>

655
00:26:19,190 --> 00:26:24,440
showed<font color="#CCCCCC"> that was the lambda function for</font>

656
00:26:20,840 --> 00:26:27,679
<font color="#CCCCCC">necess hopefully this isn't too</font><font color="#E5E5E5"> deep of</font>

657
00:26:24,440 --> 00:26:29,400
<font color="#E5E5E5">a cut but I wanted</font><font color="#CCCCCC"> to ask you did that</font>

658
00:26:27,680 --> 00:26:34,170
code have

659
00:26:29,400 --> 00:26:35,730
<font color="#CCCCCC">nessus secret hard-coded into</font><font color="#E5E5E5"> it let me</font>

660
00:26:34,170 --> 00:26:37,530
see<font color="#E5E5E5"> I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> believe so because we</font>

661
00:26:35,730 --> 00:26:40,070
absolutely<font color="#E5E5E5"> don't hard-code anything</font><font color="#CCCCCC"> but</font>

662
00:26:37,530 --> 00:26:42,540
there was a reference to<font color="#CCCCCC"> a NASA</font><font color="#E5E5E5"> secret</font>

663
00:26:40,070 --> 00:26:43,590
so what we do that's<font color="#E5E5E5"> a good that's a</font>

664
00:26:42,540 --> 00:26:45,149
great question let's actually talk about

665
00:26:43,590 --> 00:26:47,070
<font color="#E5E5E5">how we handle secret management in our</font>

666
00:26:45,150 --> 00:26:53,130
framework<font color="#E5E5E5"> what we do is</font><font color="#CCCCCC"> that we</font><font color="#E5E5E5"> use</font>

667
00:26:47,070 --> 00:26:56,909
another<font color="#E5E5E5"> what we</font><font color="#CCCCCC"> do is that we use</font><font color="#E5E5E5"> a</font>

668
00:26:53,130 --> 00:26:58,410
another yeah no secret what<font color="#E5E5E5"> we do is</font>

669
00:26:56,910 --> 00:27:03,060
<font color="#E5E5E5">that we</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> an a degree a service called</font>

670
00:26:58,410 --> 00:27:03,420
<font color="#E5E5E5">a secret manager SSM that's what it's</font>

671
00:27:03,060 --> 00:27:05,490
called

672
00:27:03,420 --> 00:27:07,620
so in<font color="#E5E5E5"> our framework we store all</font><font color="#CCCCCC"> of our</font>

673
00:27:05,490 --> 00:27:08,940
credentials<font color="#E5E5E5"> in that service and when we</font>

674
00:27:07,620 --> 00:27:10,409
are deploying our<font color="#CCCCCC"> lambda functions we</font>

675
00:27:08,940 --> 00:27:12,870
<font color="#CCCCCC">have it pull those credentials</font><font color="#E5E5E5"> and</font>

676
00:27:10,410 --> 00:27:13,950
deploy them as environment<font color="#E5E5E5"> variables and</font>

677
00:27:12,870 --> 00:27:15,689
what you're looking<font color="#CCCCCC"> at</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> a</font>

678
00:27:13,950 --> 00:27:17,040
reference<font color="#CCCCCC"> to an environment variable in</font>

679
00:27:15,690 --> 00:27:21,690
the<font color="#E5E5E5"> lambda function that has the</font>

680
00:27:17,040 --> 00:27:26,570
<font color="#E5E5E5">credentials</font><font color="#CCCCCC"> whitelisting IP is further</font>

681
00:27:21,690 --> 00:27:31,140
<font color="#CCCCCC">necess</font><font color="#E5E5E5"> source IPS like their engines yes</font>

682
00:27:26,570 --> 00:27:37,050
so white listing the<font color="#CCCCCC"> Nessus is or can</font>

683
00:27:31,140 --> 00:27:38,790
you say that again<font color="#E5E5E5"> please I'm not super</font>

684
00:27:37,050 --> 00:27:40,889
<font color="#CCCCCC">familiar with necess because we use a</font>

685
00:27:38,790 --> 00:27:44,970
different<font color="#CCCCCC"> tool</font><font color="#E5E5E5"> but when they're scanning</font>

686
00:27:40,890 --> 00:27:47,880
<font color="#E5E5E5">your</font><font color="#CCCCCC"> server</font><font color="#E5E5E5"> say how are you handling</font>

687
00:27:44,970 --> 00:27:53,900
<font color="#E5E5E5">that</font><font color="#CCCCCC"> they're able to</font><font color="#E5E5E5"> scan</font><font color="#CCCCCC"> and send</font><font color="#E5E5E5"> that</font>

688
00:27:47,880 --> 00:27:53,900
traffic yeah<font color="#CCCCCC"> so the</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> meses does that</font>

689
00:27:53,960 --> 00:27:59,670
so on<font color="#CCCCCC"> we do for the most part we do</font>

690
00:27:57,270 --> 00:28:01,170
external<font color="#CCCCCC"> Scott's right</font><font color="#E5E5E5"> so we scan our</font>

691
00:27:59,670 --> 00:28:02,100
parameter and when we want to do

692
00:28:01,170 --> 00:28:03,960
internal scans

693
00:28:02,100 --> 00:28:07,709
<font color="#CCCCCC">Nessus allows you to</font><font color="#E5E5E5"> deploy something in</font>

694
00:28:03,960 --> 00:28:09,300
your environment<font color="#CCCCCC"> that does a scan</font><font color="#E5E5E5"> so we</font>

695
00:28:07,710 --> 00:28:11,400
<font color="#E5E5E5">threw</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> like we set up our security</font>

696
00:28:09,300 --> 00:28:13,620
<font color="#E5E5E5">groups to allow the</font><font color="#CCCCCC"> necess internal</font>

697
00:28:11,400 --> 00:28:15,390
scanner to scan our internal resources

698
00:28:13,620 --> 00:28:18,510
<font color="#E5E5E5">as we need it</font><font color="#CCCCCC"> to</font>

699
00:28:15,390 --> 00:28:20,220
so for external scanning we don't<font color="#CCCCCC"> need</font>

700
00:28:18,510 --> 00:28:21,750
to<font color="#E5E5E5"> whitelist and for internal scanning</font>

701
00:28:20,220 --> 00:28:23,900
we do need<font color="#E5E5E5"> to whitelist</font>

702
00:28:21,750 --> 00:28:26,010
<font color="#E5E5E5">we deploy in essence box and then</font>

703
00:28:23,900 --> 00:28:27,900
configure our security groups to allow

704
00:28:26,010 --> 00:28:31,320
it access to the hosts in our

705
00:28:27,900 --> 00:28:32,700
environment<font color="#E5E5E5"> that we want to</font><font color="#CCCCCC"> scan we do</font>

706
00:28:31,320 --> 00:28:34,620
that through automation<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we've active</font>

707
00:28:32,700 --> 00:28:36,300
you in<font color="#E5E5E5"> another set of automations on our</font>

708
00:28:34,620 --> 00:28:38,520
framework to handle the deployment of

709
00:28:36,300 --> 00:28:41,070
<font color="#E5E5E5">our</font><font color="#CCCCCC"> nasa scanners triggering our</font>

710
00:28:38,520 --> 00:28:43,639
scanning<font color="#E5E5E5"> and tearing down those hosts so</font>

711
00:28:41,070 --> 00:28:48,090
we don't<font color="#E5E5E5"> have to worry</font>

712
00:28:43,640 --> 00:28:50,190
hello<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> really cool I'm definitely</font>

713
00:28:48,090 --> 00:28:53,970
a<font color="#CCCCCC"> fan and I'm definitely going to text</font>

714
00:28:50,190 --> 00:28:56,220
<font color="#CCCCCC">that</font><font color="#E5E5E5"> number as well</font><font color="#CCCCCC"> I wanted</font><font color="#E5E5E5"> to ask you</font>

715
00:28:53,970 --> 00:28:58,860
about<font color="#E5E5E5"> the dev</font><font color="#CCCCCC"> environment so how do you</font>

716
00:28:56,220 --> 00:29:02,190
set up<font color="#CCCCCC"> dev environment for something</font>

717
00:28:58,860 --> 00:29:05,189
like<font color="#E5E5E5"> this what do you use beautiful</font>

718
00:29:02,190 --> 00:29:06,750
<font color="#CCCCCC">question Oh so the way we</font><font color="#E5E5E5"> have all</font><font color="#CCCCCC"> of I</font>

719
00:29:05,190 --> 00:29:10,410
think<font color="#E5E5E5"> this goes</font><font color="#CCCCCC"> back to how we</font>

720
00:29:06,750 --> 00:29:11,820
orchestrate a little bit how many people

721
00:29:10,410 --> 00:29:15,750
are familiar with<font color="#E5E5E5"> the server list</font>

722
00:29:11,820 --> 00:29:17,540
framework yes cool<font color="#E5E5E5"> for those of you who</font>

723
00:29:15,750 --> 00:29:22,680
<font color="#CCCCCC">want familiar</font><font color="#E5E5E5"> with the service framework</font>

724
00:29:17,540 --> 00:29:23,970
<font color="#E5E5E5">it is sort of in the context of AWS you</font>

725
00:29:22,680 --> 00:29:25,170
can think<font color="#E5E5E5"> of it as a wrapper around</font>

726
00:29:23,970 --> 00:29:28,710
<font color="#CCCCCC">CloudFormation</font>

727
00:29:25,170 --> 00:29:30,060
<font color="#E5E5E5">it allows you to very quickly deploy</font>

728
00:29:28,710 --> 00:29:33,300
lambda functions for service

729
00:29:30,060 --> 00:29:35,100
applications so<font color="#CCCCCC"> we orchestrate all of</font>

730
00:29:33,300 --> 00:29:38,370
this framework is orchestrated using the

731
00:29:35,100 --> 00:29:39,959
service framework<font color="#E5E5E5"> and what we do right</font>

732
00:29:38,370 --> 00:29:42,300
<font color="#CCCCCC">now for a development environment is</font>

733
00:29:39,960 --> 00:29:44,250
that<font color="#E5E5E5"> we deploy to one region</font><font color="#CCCCCC"> of AWS for</font>

734
00:29:42,300 --> 00:29:47,940
development and another region for<font color="#CCCCCC"> our</font>

735
00:29:44,250 --> 00:29:50,730
production<font color="#CCCCCC"> then answer your</font><font color="#E5E5E5"> question yes</font>

736
00:29:47,940 --> 00:29:52,640
that's how we<font color="#E5E5E5"> handle it</font><font color="#CCCCCC"> the trace of</font>

737
00:29:50,730 --> 00:29:54,900
<font color="#E5E5E5">step functions is pretty brilliant</font>

738
00:29:52,640 --> 00:30:01,680
<font color="#CCCCCC">reserve anything suboptimal that you ran</font>

739
00:29:54,900 --> 00:30:03,990
into<font color="#E5E5E5"> with step functions yeah yes yes in</font>

740
00:30:01,680 --> 00:30:05,970
many<font color="#E5E5E5"> ways much of the library that we</font>

741
00:30:03,990 --> 00:30:10,500
built around step functions<font color="#E5E5E5"> was to</font>

742
00:30:05,970 --> 00:30:12,600
<font color="#E5E5E5">tackle the limitations of</font><font color="#CCCCCC"> AWS at</font>

743
00:30:10,500 --> 00:30:15,690
functions right one of the limitations

744
00:30:12,600 --> 00:30:20,399
for example<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that the AWS is like step</font>

745
00:30:15,690 --> 00:30:22,470
functions default execution memory<font color="#E5E5E5"> for</font>

746
00:30:20,400 --> 00:30:27,120
the lack<font color="#CCCCCC"> of a better term is limited to</font>

747
00:30:22,470 --> 00:30:28,500
<font color="#CCCCCC">about 32,000 characters that's not that</font>

748
00:30:27,120 --> 00:30:31,409
<font color="#E5E5E5">we founded that wasn't enough</font>

749
00:30:28,500 --> 00:30:33,630
when automating a response plan<font color="#E5E5E5"> where</font>

750
00:30:31,410 --> 00:30:36,030
you have to keep all of<font color="#CCCCCC"> the state</font><font color="#E5E5E5"> from</font>

751
00:30:33,630 --> 00:30:38,460
previous lambda functions to satisfy

752
00:30:36,030 --> 00:30:40,680
like lambda<font color="#E5E5E5"> function down the line so we</font>

753
00:30:38,460 --> 00:30:43,380
broke all<font color="#CCCCCC"> of that out all of that state</font>

754
00:30:40,680 --> 00:30:48,230
management<font color="#E5E5E5"> out</font><font color="#CCCCCC"> dynamodb which I think</font>

755
00:30:43,380 --> 00:30:51,950
has about<font color="#E5E5E5"> four gigs per record so</font><font color="#CCCCCC"> they</font>

756
00:30:48,230 --> 00:30:55,310
significantly expanding the<font color="#E5E5E5"> amount of</font>

757
00:30:51,950 --> 00:30:58,040
memory we have to store data<font color="#CCCCCC"> span</font><font color="#E5E5E5"> over</font>

758
00:30:55,310 --> 00:31:01,310
execution<font color="#CCCCCC"> that was</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> of them another</font>

759
00:30:58,040 --> 00:31:04,070
one of them was<font color="#CCCCCC"> that initially when step</font>

760
00:31:01,310 --> 00:31:05,510
functions launched it didn't have a good

761
00:31:04,070 --> 00:31:07,730
<font color="#E5E5E5">way</font><font color="#CCCCCC"> to allow you</font><font color="#E5E5E5"> to create a modular</font>

762
00:31:05,510 --> 00:31:09,410
<font color="#E5E5E5">lambda function because it didn't have a</font>

763
00:31:07,730 --> 00:31:12,170
mechanisms<font color="#E5E5E5"> and dynamically</font><font color="#CCCCCC"> passed</font>

764
00:31:09,410 --> 00:31:15,290
parameters<font color="#CCCCCC"> to a lambda function so we</font>

765
00:31:12,170 --> 00:31:18,500
wrote around that<font color="#E5E5E5"> functionality with</font><font color="#CCCCCC"> the</font>

766
00:31:15,290 --> 00:31:21,379
<font color="#CCCCCC">help of our libraries</font><font color="#E5E5E5"> um but in I think</font>

767
00:31:18,500 --> 00:31:23,600
last year they did launch some support

768
00:31:21,380 --> 00:31:25,910
for parameters it's something that we're

769
00:31:23,600 --> 00:31:28,580
<font color="#E5E5E5">going to look at and see if we can now</font>

770
00:31:25,910 --> 00:31:31,250
adopt those like those nice features

771
00:31:28,580 --> 00:31:32,840
into our<font color="#E5E5E5"> framework or and see how we can</font>

772
00:31:31,250 --> 00:31:34,610
benefit from<font color="#E5E5E5"> it so there were a couple</font>

773
00:31:32,840 --> 00:31:37,189
of limitations<font color="#E5E5E5"> and stuff functions that</font>

774
00:31:34,610 --> 00:31:39,979
we saw<font color="#E5E5E5"> but overall we felt that the core</font>

775
00:31:37,190 --> 00:31:42,140
was great<font color="#CCCCCC"> and it</font><font color="#E5E5E5"> has proven to</font><font color="#CCCCCC"> us that</font>

776
00:31:39,980 --> 00:31:45,530
<font color="#CCCCCC">it is great and so we've</font><font color="#E5E5E5"> invested time</font>

777
00:31:42,140 --> 00:31:48,140
<font color="#CCCCCC">and building around</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> okay with</font><font color="#E5E5E5"> that we</font>

778
00:31:45,530 --> 00:31:50,990
are<font color="#E5E5E5"> at time so I want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> thank you</font><font color="#CCCCCC"> all</font>

779
00:31:48,140 --> 00:31:52,280
for<font color="#E5E5E5"> being here we have a closing remarks</font>

780
00:31:50,990 --> 00:31:54,890
<font color="#E5E5E5">coming up I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know if they're in</font>

781
00:31:52,280 --> 00:31:56,930
<font color="#E5E5E5">this room but very much I want to thank</font>

782
00:31:54,890 --> 00:31:59,060
you for<font color="#E5E5E5"> that presentation is very good</font>

783
00:31:56,930 --> 00:32:01,360
and<font color="#E5E5E5"> very interesting and I wish I can</font>

784
00:31:59,060 --> 00:32:03,440
<font color="#E5E5E5">get some of my people automate more so</font>

785
00:32:01,360 --> 00:32:06,929
<font color="#E5E5E5">everybody thank you very much for coming</font>

786
00:32:03,440 --> 00:32:13,160
there will be some closing remarks and

787
00:32:06,930 --> 00:32:13,160
[Applause]

