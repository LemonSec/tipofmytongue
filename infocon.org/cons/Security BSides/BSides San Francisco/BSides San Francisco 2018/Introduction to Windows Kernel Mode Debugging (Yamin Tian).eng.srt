1
00:00:03,620 --> 00:00:06,740
[Music]

2
00:00:19,820 --> 00:00:27,770
hello everyone<font color="#E5E5E5"> I'm yameen</font><font color="#CCCCCC"> Thien from</font>

3
00:00:23,300 --> 00:00:31,220
<font color="#E5E5E5">endgame</font><font color="#CCCCCC"> I'm a</font><font color="#E5E5E5"> kernel developer and today</font>

4
00:00:27,770 --> 00:00:34,580
I<font color="#E5E5E5"> get to do a introduction to Windows</font>

5
00:00:31,220 --> 00:00:44,180
kernel debugging so let<font color="#E5E5E5"> me share my</font>

6
00:00:34,580 --> 00:00:46,910
slides for those of you new to kernel

7
00:00:44,180 --> 00:00:49,309
debugging<font color="#E5E5E5"> you probably already collected</font>

8
00:00:46,910 --> 00:00:53,300
a bunch<font color="#E5E5E5"> of books and</font><font color="#CCCCCC"> law</font><font color="#E5E5E5"> online</font>

9
00:00:49,309 --> 00:00:56,800
materials<font color="#E5E5E5"> and yet still you might feel</font>

10
00:00:53,300 --> 00:01:00,589
<font color="#E5E5E5">like standing in front of a huge giant</font>

11
00:00:56,800 --> 00:01:04,819
<font color="#E5E5E5">mysterious store built by elves</font><font color="#CCCCCC"> and the</font>

12
00:01:00,589 --> 00:01:10,460
<font color="#CCCCCC">door is asking you for password to enter</font>

13
00:01:04,819 --> 00:01:14,000
<font color="#E5E5E5">and don't worry</font><font color="#CCCCCC"> I get you I can</font><font color="#E5E5E5"> remember</font>

14
00:01:10,460 --> 00:01:17,330
like<font color="#E5E5E5"> 10 years ago when I first get my</font>

15
00:01:14,000 --> 00:01:22,130
when I get my first kernel assignment

16
00:01:17,330 --> 00:01:24,800
<font color="#E5E5E5">back then I had no any kernel developing</font>

17
00:01:22,130 --> 00:01:28,640
or kernel developing debugging

18
00:01:24,800 --> 00:01:33,590
experience<font color="#CCCCCC"> and out of glue I received a</font>

19
00:01:28,640 --> 00:01:37,210
ticket<font color="#E5E5E5"> with the blue screen</font><font color="#CCCCCC"> okay P P SOT</font>

20
00:01:33,590 --> 00:01:40,160
<font color="#CCCCCC">dump</font><font color="#E5E5E5"> it's also a kernel crash dump</font>

21
00:01:37,210 --> 00:01:43,940
<font color="#CCCCCC">attached</font><font color="#E5E5E5"> to the</font><font color="#CCCCCC"> crew to the ticket and</font>

22
00:01:40,160 --> 00:01:47,509
it says the<font color="#E5E5E5"> ticket says it's from</font>

23
00:01:43,940 --> 00:01:51,500
customer side and customer is running

24
00:01:47,510 --> 00:01:55,520
our software and it crashed<font color="#E5E5E5"> so I was</font>

25
00:01:51,500 --> 00:01:59,260
like I was really<font color="#E5E5E5"> scary back then I I</font>

26
00:01:55,520 --> 00:02:04,789
thought oh I need to<font color="#E5E5E5"> go back</font><font color="#CCCCCC"> to college</font>

27
00:01:59,260 --> 00:02:09,679
<font color="#CCCCCC">and but now when I</font><font color="#E5E5E5"> look back there's no</font>

28
00:02:04,790 --> 00:02:12,080
need<font color="#CCCCCC"> to panic</font><font color="#E5E5E5"> and I think now I think as</font>

29
00:02:09,679 --> 00:02:15,260
<font color="#CCCCCC">long as</font><font color="#E5E5E5"> you have some C programming</font>

30
00:02:12,080 --> 00:02:17,349
background<font color="#E5E5E5"> and you have some</font>

31
00:02:15,260 --> 00:02:21,440
<font color="#E5E5E5">understanding</font><font color="#CCCCCC"> of operating system</font>

32
00:02:17,349 --> 00:02:28,358
anybody can enter the door so let me

33
00:02:21,440 --> 00:02:31,099
show<font color="#E5E5E5"> you my agenda you need some tools</font>

34
00:02:28,359 --> 00:02:32,340
<font color="#CCCCCC">first of all you</font><font color="#E5E5E5"> need to get over your</font>

35
00:02:31,099 --> 00:02:34,799
fears

36
00:02:32,340 --> 00:02:38,370
then you need some tools<font color="#E5E5E5"> so here I</font>

37
00:02:34,800 --> 00:02:42,000
recommend<font color="#E5E5E5"> windbg windbg</font>

38
00:02:38,370 --> 00:02:45,000
which is the best kernel debugger<font color="#E5E5E5"> of all</font>

39
00:02:42,000 --> 00:02:49,379
and then<font color="#CCCCCC"> you need</font><font color="#E5E5E5"> to know several things</font>

40
00:02:45,000 --> 00:02:53,580
<font color="#E5E5E5">load</font><font color="#CCCCCC"> cymbals</font><font color="#E5E5E5"> how to load cymbals and</font>

41
00:02:49,379 --> 00:02:56,280
then how<font color="#E5E5E5"> to collect</font><font color="#CCCCCC"> BSOD dumps</font><font color="#E5E5E5"> and then</font>

42
00:02:53,580 --> 00:03:02,069
know how<font color="#CCCCCC"> to configure live kernel</font>

43
00:02:56,280 --> 00:03:05,430
debugging<font color="#E5E5E5"> with</font><font color="#CCCCCC"> VMware</font><font color="#E5E5E5"> with that</font><font color="#CCCCCC"> set</font><font color="#E5E5E5"> it's</font>

44
00:03:02,069 --> 00:03:10,280
like a<font color="#E5E5E5"> quick start to get you get your</font>

45
00:03:05,430 --> 00:03:14,730
hands on<font color="#CCCCCC"> it</font><font color="#E5E5E5"> I'm not encouraging you to</font>

46
00:03:10,280 --> 00:03:18,000
take any shortcut because kernel

47
00:03:14,730 --> 00:03:21,328
debugging is really a science<font color="#CCCCCC"> there's a</font>

48
00:03:18,000 --> 00:03:24,180
lot of<font color="#E5E5E5"> background knowledge in it it's</font>

49
00:03:21,329 --> 00:03:28,920
<font color="#E5E5E5">not it cannot be mastered in one night</font>

50
00:03:24,180 --> 00:03:31,950
<font color="#CCCCCC">over one night</font><font color="#E5E5E5"> so what I'm what I the</font>

51
00:03:28,920 --> 00:03:36,179
point I'm trying to make is<font color="#CCCCCC"> that if as a</font>

52
00:03:31,950 --> 00:03:39,810
beginner<font color="#E5E5E5"> today you are able to remove a</font>

53
00:03:36,180 --> 00:03:43,139
one one<font color="#E5E5E5"> small piece of rock that's</font>

54
00:03:39,810 --> 00:03:45,780
<font color="#E5E5E5">blocking your way and you keep</font><font color="#CCCCCC"> doing it</font>

55
00:03:43,139 --> 00:03:49,170
day by day month by<font color="#E5E5E5"> month years by years</font>

56
00:03:45,780 --> 00:03:53,239
and<font color="#E5E5E5"> then years later you will be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to</font>

57
00:03:49,170 --> 00:03:56,280
move the mountain so that's my point<font color="#CCCCCC"> and</font>

58
00:03:53,239 --> 00:04:01,049
to be able<font color="#E5E5E5"> to help you get inside of</font>

59
00:03:56,280 --> 00:04:04,889
door<font color="#E5E5E5"> I'm gonna show you three most</font>

60
00:04:01,049 --> 00:04:09,319
common problems of kernel kernel mode

61
00:04:04,889 --> 00:04:14,519
software and<font color="#E5E5E5"> I'm gonna also show you my</font>

62
00:04:09,319 --> 00:04:16,950
debugging<font color="#E5E5E5"> my approach to how to debug</font>

63
00:04:14,519 --> 00:04:19,728
<font color="#E5E5E5">them and then finally I'm gonna talk a</font>

64
00:04:16,950 --> 00:04:24,270
little bit up<font color="#E5E5E5"> about how to fix them so</font>

65
00:04:19,728 --> 00:04:28,320
<font color="#E5E5E5">if you are those who's all already</font>

66
00:04:24,270 --> 00:04:31,620
inside<font color="#E5E5E5"> the</font><font color="#CCCCCC"> door you might find</font><font color="#E5E5E5"> that my</font>

67
00:04:28,320 --> 00:04:34,020
approach<font color="#E5E5E5"> might be</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> little bit different</font>

68
00:04:31,620 --> 00:04:36,080
from yours<font color="#E5E5E5"> may be totally</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> from</font>

69
00:04:34,020 --> 00:04:39,389
yours<font color="#E5E5E5"> and that's totally fine</font><font color="#CCCCCC"> too</font>

70
00:04:36,080 --> 00:04:41,650
<font color="#CCCCCC">because there is no Universal way to</font>

71
00:04:39,389 --> 00:04:43,870
<font color="#CCCCCC">debug and sometimes</font>

72
00:04:41,650 --> 00:04:46,630
it can be a little bit<font color="#CCCCCC"> personal</font><font color="#E5E5E5"> and</font>

73
00:04:43,870 --> 00:04:49,060
that's<font color="#E5E5E5"> totally fine</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> those for you</font>

74
00:04:46,630 --> 00:04:49,810
for those<font color="#CCCCCC"> of</font><font color="#E5E5E5"> you who</font><font color="#CCCCCC"> already inside the</font>

75
00:04:49,060 --> 00:04:54,370
<font color="#E5E5E5">door</font>

76
00:04:49,810 --> 00:05:02,500
this talk is like<font color="#E5E5E5"> exchange of ideas</font><font color="#CCCCCC"> so</font>

77
00:04:54,370 --> 00:05:07,600
let<font color="#E5E5E5"> me get started</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> of all how to</font>

78
00:05:02,500 --> 00:05:11,440
load<font color="#E5E5E5"> symbols</font><font color="#CCCCCC"> I'm not sure if you are</font>

79
00:05:07,600 --> 00:05:11,830
<font color="#E5E5E5">able to see it in the back row but don't</font>

80
00:05:11,440 --> 00:05:15,310
worry

81
00:05:11,830 --> 00:05:17,979
so if you<font color="#CCCCCC"> missed any details</font><font color="#E5E5E5"> or if you</font>

82
00:05:15,310 --> 00:05:22,440
are not able to see clearly<font color="#CCCCCC"> I have a</font>

83
00:05:17,979 --> 00:05:23,680
blog<font color="#CCCCCC"> post</font><font color="#E5E5E5"> and it's in the end of this</font>

84
00:05:22,440 --> 00:05:28,060
PPT

85
00:05:23,680 --> 00:05:30,699
<font color="#CCCCCC">I also shared a blog post</font><font color="#E5E5E5"> and if you</font>

86
00:05:28,060 --> 00:05:34,300
have time you can read the article the

87
00:05:30,699 --> 00:05:39,010
blog post offline<font color="#CCCCCC"> so here I just</font><font color="#E5E5E5"> go over</font>

88
00:05:34,300 --> 00:05:43,169
<font color="#E5E5E5">quickly that how to how to configure the</font>

89
00:05:39,010 --> 00:05:47,620
symbols<font color="#CCCCCC"> basically you pass</font><font color="#E5E5E5"> this string</font>

90
00:05:43,169 --> 00:05:52,990
<font color="#E5E5E5">symbol stream started as</font><font color="#CCCCCC"> RV the string</font>

91
00:05:47,620 --> 00:05:56,020
<font color="#E5E5E5">into that windbg window it's a simple</font>

92
00:05:52,990 --> 00:05:59,979
<font color="#CCCCCC">path window</font><font color="#E5E5E5"> top pack copy pass into it</font>

93
00:05:56,020 --> 00:06:04,799
<font color="#CCCCCC">and then reload check reload on the</font>

94
00:05:59,979 --> 00:06:10,240
lower left corner<font color="#E5E5E5"> and then click OK and</font>

95
00:06:04,800 --> 00:06:14,289
<font color="#CCCCCC">then in</font><font color="#E5E5E5"> case if</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have your own symbol</font>

96
00:06:10,240 --> 00:06:17,349
server<font color="#E5E5E5"> you also need to tell windbg your</font>

97
00:06:14,289 --> 00:06:22,750
own<font color="#CCCCCC"> Windows overpass here here's an</font>

98
00:06:17,349 --> 00:06:28,090
<font color="#E5E5E5">example and also another case is if you</font>

99
00:06:22,750 --> 00:06:30,550
don't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> single server you can</font>

100
00:06:28,090 --> 00:06:34,799
download symbol of your driver to your

101
00:06:30,550 --> 00:06:38,440
<font color="#CCCCCC">localhost and then configure windbg</font><font color="#E5E5E5"> to</font>

102
00:06:34,800 --> 00:06:44,530
understand the path of your<font color="#E5E5E5"> symbol just</font>

103
00:06:38,440 --> 00:06:48,310
<font color="#E5E5E5">like that so here you go</font>

104
00:06:44,530 --> 00:06:51,789
remember I<font color="#E5E5E5"> mentioned that my first</font><font color="#CCCCCC"> BSOD</font>

105
00:06:48,310 --> 00:06:54,880
really scares me<font color="#E5E5E5"> but what I just talked</font>

106
00:06:51,789 --> 00:06:55,479
about<font color="#E5E5E5"> was really all I</font><font color="#CCCCCC"> need to figure</font>

107
00:06:54,880 --> 00:06:59,230
out my

108
00:06:55,480 --> 00:07:02,890
first<font color="#CCCCCC"> blue-screen so this is the</font><font color="#E5E5E5"> symptom</font>

109
00:06:59,230 --> 00:07:06,040
of my my first<font color="#CCCCCC"> blue-screen am</font><font color="#E5E5E5"> I'm able</font>

110
00:07:02,890 --> 00:07:09,280
to<font color="#E5E5E5"> recreate it right I'm able to write</font>

111
00:07:06,040 --> 00:07:11,980
<font color="#CCCCCC">my own new sample and recreate the same</font>

112
00:07:09,280 --> 00:07:16,020
problem<font color="#CCCCCC"> I remember it very well</font>

113
00:07:11,980 --> 00:07:18,240
and let's look at how<font color="#CCCCCC"> I figure out the</font>

114
00:07:16,020 --> 00:07:23,740
<font color="#CCCCCC">problem</font>

115
00:07:18,240 --> 00:07:28,060
so in windbg<font color="#CCCCCC"> I loaded a symbol</font><font color="#E5E5E5"> just like</font>

116
00:07:23,740 --> 00:07:31,810
I<font color="#CCCCCC"> mentioned before</font><font color="#E5E5E5"> and then just like</font>

117
00:07:28,060 --> 00:07:35,470
magic<font color="#E5E5E5"> windbg is able to point you to the</font>

118
00:07:31,810 --> 00:07:39,820
problem<font color="#E5E5E5"> area it's pointed by the red</font>

119
00:07:35,470 --> 00:07:42,310
arrow<font color="#E5E5E5"> the at red arrow already points</font>

120
00:07:39,820 --> 00:07:50,080
you at a problem the crashing location

121
00:07:42,310 --> 00:07:54,370
of my source code and let's look at<font color="#E5E5E5"> the</font>

122
00:07:50,080 --> 00:07:57,490
source<font color="#CCCCCC"> code if you are not able to see</font>

123
00:07:54,370 --> 00:08:00,850
it<font color="#CCCCCC"> clearly the source code</font><font color="#E5E5E5"> is also in my</font>

124
00:07:57,490 --> 00:08:03,700
<font color="#E5E5E5">blog post</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can find them at the end</font>

125
00:08:00,850 --> 00:08:07,570
of my blog<font color="#CCCCCC"> posts which I have linked to</font>

126
00:08:03,700 --> 00:08:10,120
this presentation<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> see that</font>

127
00:08:07,570 --> 00:08:13,349
<font color="#E5E5E5">matching what the bugger information</font>

128
00:08:10,120 --> 00:08:16,750
with the source<font color="#E5E5E5"> code you can immediately</font>

129
00:08:13,350 --> 00:08:21,130
figure<font color="#E5E5E5"> out what's wrong with your source</font>

130
00:08:16,750 --> 00:08:24,760
code and then fix it<font color="#E5E5E5"> and that's all I</font>

131
00:08:21,130 --> 00:08:28,690
need<font color="#E5E5E5"> to figure out my first blue screen</font>

132
00:08:24,760 --> 00:08:32,799
and it doesn't require any<font color="#E5E5E5"> require any</font>

133
00:08:28,690 --> 00:08:39,849
special kernel or knowledge right so

134
00:08:32,799 --> 00:08:42,819
that's<font color="#E5E5E5"> how I get started</font><font color="#CCCCCC"> next thing we</font>

135
00:08:39,849 --> 00:08:47,110
<font color="#E5E5E5">need to know is how to collect</font><font color="#CCCCCC"> BSOD</font>

136
00:08:42,820 --> 00:08:50,110
<font color="#CCCCCC">dumps all the detailed steps is</font><font color="#E5E5E5"> also in</font>

137
00:08:47,110 --> 00:08:54,520
my<font color="#E5E5E5"> blog post</font><font color="#CCCCCC"> in case if</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> are not able</font>

138
00:08:50,110 --> 00:08:56,410
to see the windows here basically<font color="#CCCCCC"> you</font><font color="#E5E5E5"> go</font>

139
00:08:54,520 --> 00:09:01,000
to the<font color="#E5E5E5"> target system</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> are about to</font>

140
00:08:56,410 --> 00:09:04,209
<font color="#E5E5E5">debug and then configure the startup and</font>

141
00:09:01,000 --> 00:09:07,240
<font color="#CCCCCC">the recovery settings there and in</font><font color="#E5E5E5"> that</font>

142
00:09:04,210 --> 00:09:09,930
<font color="#CCCCCC">drop-down list</font><font color="#E5E5E5"> you you choose kernel</font>

143
00:09:07,240 --> 00:09:09,930
memory dump

144
00:09:11,400 --> 00:09:21,150
third thing is how<font color="#E5E5E5"> to configure life</font>

145
00:09:15,230 --> 00:09:25,410
<font color="#E5E5E5">kernel debugging with VMware so this</font>

146
00:09:21,150 --> 00:09:29,250
figure<font color="#CCCCCC"> shows the</font><font color="#E5E5E5"> basic component of life</font>

147
00:09:25,410 --> 00:09:30,390
kernel debugging<font color="#E5E5E5"> with VMware basically</font>

148
00:09:29,250 --> 00:09:34,200
three<font color="#CCCCCC"> components</font>

149
00:09:30,390 --> 00:09:37,949
you got a host machine<font color="#E5E5E5"> and then you have</font>

150
00:09:34,200 --> 00:09:40,890
a<font color="#CCCCCC"> VMware</font><font color="#E5E5E5"> inside</font><font color="#CCCCCC"> a VMware you have your</font>

151
00:09:37,950 --> 00:09:44,580
target<font color="#CCCCCC"> Windows</font><font color="#E5E5E5"> system running and then</font>

152
00:09:40,890 --> 00:09:49,350
you have windbg<font color="#E5E5E5"> debugger connected to</font>

153
00:09:44,580 --> 00:09:51,900
your target<font color="#E5E5E5"> through a pipe</font><font color="#CCCCCC"> we need to</font>

154
00:09:49,350 --> 00:09:55,980
configure the<font color="#E5E5E5"> three location the three</font>

155
00:09:51,900 --> 00:10:02,040
<font color="#CCCCCC">piece</font><font color="#E5E5E5"> of them separately in in the host</font>

156
00:09:55,980 --> 00:10:04,500
OS we create a virtual device<font color="#CCCCCC"> we create</font>

157
00:10:02,040 --> 00:10:07,589
a serial virtual serial device through

158
00:10:04,500 --> 00:10:11,700
the based on pipe<font color="#E5E5E5"> and then we inside</font>

159
00:10:07,590 --> 00:10:16,290
<font color="#CCCCCC">VMware inside the target Windows OS we</font>

160
00:10:11,700 --> 00:10:20,190
configure the<font color="#E5E5E5"> Palouse the kernel</font>

161
00:10:16,290 --> 00:10:23,099
debugging session<font color="#E5E5E5"> again</font><font color="#CCCCCC"> the detail step</font>

162
00:10:20,190 --> 00:10:27,150
is not shown<font color="#E5E5E5"> in this figure</font><font color="#CCCCCC"> but you can</font>

163
00:10:23,100 --> 00:10:30,540
find the<font color="#CCCCCC"> detail step in my blog post</font><font color="#E5E5E5"> so</font>

164
00:10:27,150 --> 00:10:34,620
here I just catch you familiar with

165
00:10:30,540 --> 00:10:41,339
<font color="#CCCCCC">seeing the steps and then I will go</font>

166
00:10:34,620 --> 00:10:45,210
quickly to to my to describe my approach

167
00:10:41,340 --> 00:10:48,020
to the common software problems instead

168
00:10:45,210 --> 00:10:52,470
<font color="#CCCCCC">of describing the detailed steps here</font>

169
00:10:48,020 --> 00:10:56,010
because the detailed steps can it's<font color="#E5E5E5"> hard</font>

170
00:10:52,470 --> 00:10:59,520
to<font color="#E5E5E5"> mem memorize and if I work on</font><font color="#CCCCCC"> a</font>

171
00:10:56,010 --> 00:11:02,490
specific<font color="#E5E5E5"> problem</font><font color="#CCCCCC"> I can remember each</font>

172
00:10:59,520 --> 00:11:06,000
command I use I do I use<font color="#E5E5E5"> it every day</font>

173
00:11:02,490 --> 00:11:09,030
<font color="#E5E5E5">and I'm very familiar</font><font color="#CCCCCC"> with them but if I</font>

174
00:11:06,000 --> 00:11:12,240
go<font color="#CCCCCC"> on vacation and</font><font color="#E5E5E5"> after two weeks</font><font color="#CCCCCC"> I</font>

175
00:11:09,030 --> 00:11:15,000
forgot all<font color="#CCCCCC"> of them</font><font color="#E5E5E5"> so what's the</font><font color="#CCCCCC"> point</font>

176
00:11:12,240 --> 00:11:17,760
you make<font color="#E5E5E5"> people memorize all the detail</font>

177
00:11:15,000 --> 00:11:20,010
steps and the<font color="#E5E5E5"> commands</font><font color="#CCCCCC"> you're using</font>

178
00:11:17,760 --> 00:11:21,779
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> destined</font><font color="#CCCCCC"> to be</font><font color="#E5E5E5"> forgotten right</font>

179
00:11:20,010 --> 00:11:24,810
so here

180
00:11:21,779 --> 00:11:28,259
in the talk<font color="#CCCCCC"> I'm trying to describe the</font>

181
00:11:24,810 --> 00:11:31,378
general<font color="#E5E5E5"> approach to the three</font><font color="#CCCCCC"> kinds of</font>

182
00:11:28,259 --> 00:11:35,009
<font color="#E5E5E5">problems</font><font color="#CCCCCC"> I don't require require you to</font>

183
00:11:31,379 --> 00:11:38,309
<font color="#E5E5E5">memorize specific commands because once</font>

184
00:11:35,009 --> 00:11:40,949
you have these general ideas<font color="#E5E5E5"> about how</font>

185
00:11:38,309 --> 00:11:43,469
to<font color="#E5E5E5"> approach them you can just look up</font>

186
00:11:40,949 --> 00:11:49,439
online and find your own<font color="#E5E5E5"> tools or</font>

187
00:11:43,470 --> 00:11:53,370
commands<font color="#E5E5E5"> to to to use so let's move</font>

188
00:11:49,439 --> 00:11:57,769
forward<font color="#CCCCCC"> my first the</font><font color="#E5E5E5"> first general</font>

189
00:11:53,370 --> 00:12:03,449
problem<font color="#E5E5E5"> the common problem is 100% CPU</font>

190
00:11:57,769 --> 00:12:07,259
so 100%<font color="#E5E5E5"> CPU in the kernel my sound very</font>

191
00:12:03,449 --> 00:12:10,258
scary<font color="#E5E5E5"> to you but for</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> it's really the</font>

192
00:12:07,259 --> 00:12:13,019
<font color="#E5E5E5">most simplest problem of all so</font><font color="#CCCCCC"> why</font>

193
00:12:10,259 --> 00:12:17,100
that's why I let<font color="#CCCCCC"> it list it first it's</font>

194
00:12:13,019 --> 00:12:19,829
easy<font color="#E5E5E5"> to troubleshoot and easy to fix</font>

195
00:12:17,100 --> 00:12:22,350
it's a to<font color="#E5E5E5"> begin with it's a little bit</font>

196
00:12:19,829 --> 00:12:27,739
complicated to<font color="#CCCCCC"> figure out there is</font><font color="#E5E5E5"> such</font>

197
00:12:22,350 --> 00:12:31,379
a problem<font color="#CCCCCC"> there is a 100% CPU problem</font>

198
00:12:27,740 --> 00:12:34,970
<font color="#CCCCCC">because sometimes you cannot</font><font color="#E5E5E5"> may not be</font>

199
00:12:31,379 --> 00:12:39,769
so straightforward<font color="#E5E5E5"> to identify it</font>

200
00:12:34,970 --> 00:12:43,910
why let's take a look at the CPU chart

201
00:12:39,769 --> 00:12:47,959
this chart looks<font color="#CCCCCC"> straight forward</font><font color="#E5E5E5"> it's</font>

202
00:12:43,910 --> 00:12:52,800
100% CPU<font color="#CCCCCC"> I use the windows task manager</font>

203
00:12:47,959 --> 00:12:55,079
<font color="#CCCCCC">that come with every</font><font color="#E5E5E5"> windows so you</font><font color="#CCCCCC"> can</font>

204
00:12:52,800 --> 00:12:59,819
<font color="#CCCCCC">easily run this tool and figure out</font><font color="#E5E5E5"> oh</font>

205
00:12:55,079 --> 00:13:03,059
there is a 100%<font color="#E5E5E5"> CPU I enable the kernel</font>

206
00:12:59,819 --> 00:13:07,740
time<font color="#CCCCCC"> so it's shown in</font><font color="#E5E5E5"> red so it means</font>

207
00:13:03,059 --> 00:13:11,429
<font color="#E5E5E5">the kernel is taking 100%</font><font color="#CCCCCC"> CPU so this</font>

208
00:13:07,740 --> 00:13:17,179
one is<font color="#E5E5E5"> a straightforward example the</font>

209
00:13:11,429 --> 00:13:21,809
<font color="#E5E5E5">next one is also straightforward I have</font>

210
00:13:17,179 --> 00:13:26,429
my computer<font color="#E5E5E5"> has</font><font color="#CCCCCC"> 2 cores 2 CPU core on</font>

211
00:13:21,809 --> 00:13:30,449
each of them<font color="#E5E5E5"> I got 100% CPU so that's</font>

212
00:13:26,429 --> 00:13:36,420
also<font color="#E5E5E5"> straightforward but what if for</font>

213
00:13:30,449 --> 00:13:40,170
this case is now it's not shown as<font color="#E5E5E5"> 100%</font>

214
00:13:36,420 --> 00:13:44,699
<font color="#E5E5E5">I to demonstrate this case I wrote</font><font color="#CCCCCC"> a</font>

215
00:13:40,170 --> 00:13:47,520
simple code<font color="#CCCCCC"> the sample code has</font><font color="#E5E5E5"> one</font>

216
00:13:44,700 --> 00:13:52,440
thread<font color="#E5E5E5"> that's running running in</font><font color="#CCCCCC"> our</font>

217
00:13:47,520 --> 00:13:56,430
loop and one thread is taking the 100%

218
00:13:52,440 --> 00:14:00,660
CPU usage<font color="#E5E5E5"> but because I have I only have</font>

219
00:13:56,430 --> 00:14:03,479
one thread<font color="#CCCCCC"> looping the thread and the</font>

220
00:14:00,660 --> 00:14:07,620
this CPU usage of<font color="#CCCCCC"> that</font><font color="#E5E5E5"> one's thread is</font>

221
00:14:03,480 --> 00:14:08,520
being distributed<font color="#CCCCCC"> into onto two cores so</font>

222
00:14:07,620 --> 00:14:13,620
averagely

223
00:14:08,520 --> 00:14:18,149
you don't see<font color="#E5E5E5"> 100 you only see 5 50</font>

224
00:14:13,620 --> 00:14:22,020
<font color="#CCCCCC">percent of CPU usage so that's a little</font>

225
00:14:18,149 --> 00:14:25,620
bit not<font color="#E5E5E5"> straightforward</font><font color="#CCCCCC"> and then let's</font>

226
00:14:22,020 --> 00:14:30,089
look at this case this<font color="#E5E5E5"> case</font><font color="#CCCCCC"> mice my</font>

227
00:14:25,620 --> 00:14:35,310
computer has<font color="#CCCCCC"> four has eight cores</font><font color="#E5E5E5"> so I</font>

228
00:14:30,089 --> 00:14:38,670
have one looping thread<font color="#E5E5E5"> well the thread</font>

229
00:14:35,310 --> 00:14:42,770
is taking a look at moving forever<font color="#E5E5E5"> it's</font>

230
00:14:38,670 --> 00:14:46,529
taking<font color="#E5E5E5"> 100% CPU but that thread is</font>

231
00:14:42,770 --> 00:14:50,760
spreaded to<font color="#E5E5E5"> on to</font><font color="#CCCCCC"> eight</font><font color="#E5E5E5"> cores so</font>

232
00:14:46,529 --> 00:14:55,500
<font color="#CCCCCC">averages between speaking</font><font color="#E5E5E5"> the CPU usage</font>

233
00:14:50,760 --> 00:14:59,610
<font color="#CCCCCC">is pretty low</font><font color="#E5E5E5"> it's only taking like</font><font color="#CCCCCC"> 12</font>

234
00:14:55,500 --> 00:15:06,360
around 12 percent<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> overall video</font>

235
00:14:59,610 --> 00:15:09,870
usage but so to identify<font color="#E5E5E5"> that's the</font>

236
00:15:06,360 --> 00:15:12,440
<font color="#E5E5E5">little country complications</font><font color="#CCCCCC"> that it's a</font>

237
00:15:09,870 --> 00:15:17,370
<font color="#E5E5E5">little hard to identify there is such</font>

238
00:15:12,440 --> 00:15:20,310
<font color="#E5E5E5">CPU hundred</font><font color="#CCCCCC"> percent CPU problem but to</font>

239
00:15:17,370 --> 00:15:23,190
<font color="#CCCCCC">identify</font><font color="#E5E5E5"> the problem it's preferred if</font>

240
00:15:20,310 --> 00:15:26,550
you have one core system run your

241
00:15:23,190 --> 00:15:31,010
program on your<font color="#CCCCCC"> own one core system so</font>

242
00:15:26,550 --> 00:15:34,709
the 100%<font color="#E5E5E5"> CPU will problem will stand out</font>

243
00:15:31,010 --> 00:15:37,500
<font color="#CCCCCC">if not possible</font><font color="#E5E5E5"> there's other indicators</font>

244
00:15:34,709 --> 00:15:44,550
<font color="#E5E5E5">so let's take a look at that</font><font color="#CCCCCC"> a the</font>

245
00:15:37,500 --> 00:15:48,120
course the a core<font color="#E5E5E5"> CPU graph normally</font>

246
00:15:44,550 --> 00:15:53,040
speaking if your<font color="#CCCCCC"> software system is</font>

247
00:15:48,120 --> 00:15:56,279
good health<font color="#CCCCCC"> the CPU</font><font color="#E5E5E5"> usage will be evenly</font>

248
00:15:53,040 --> 00:15:59,160
spreaded<font color="#E5E5E5"> two different course but in</font>

249
00:15:56,279 --> 00:16:02,220
<font color="#E5E5E5">this graph you</font><font color="#CCCCCC"> can see it's not</font><font color="#E5E5E5"> even</font>

250
00:15:59,160 --> 00:16:05,010
some of the course has<font color="#E5E5E5"> really spiked</font>

251
00:16:02,220 --> 00:16:12,420
high CPUs but the other<font color="#E5E5E5"> of them has</font>

252
00:16:05,010 --> 00:16:15,330
<font color="#E5E5E5">really low CPUs</font><font color="#CCCCCC"> that means problem so in</font>

253
00:16:12,420 --> 00:16:18,050
the<font color="#E5E5E5"> Health Eastern if you got your load</font>

254
00:16:15,330 --> 00:16:22,140
your system load gets higher your

255
00:16:18,050 --> 00:16:25,859
<font color="#E5E5E5">average CPU will get higher together on</font>

256
00:16:22,140 --> 00:16:29,670
each course<font color="#E5E5E5"> not like spike in one of</font>

257
00:16:25,860 --> 00:16:33,380
them or some other<font color="#CCCCCC"> - too high and some</font>

258
00:16:29,670 --> 00:16:37,890
of them too low<font color="#E5E5E5"> so the uneven CPU</font>

259
00:16:33,380 --> 00:16:41,520
distribution is an indicator of<font color="#CCCCCC"> the CPU</font>

260
00:16:37,890 --> 00:16:45,870
problems in your software<font color="#CCCCCC"> so now we're</font>

261
00:16:41,520 --> 00:16:49,560
able<font color="#CCCCCC"> to identify that a CPU 100% CPU</font>

262
00:16:45,870 --> 00:16:52,320
have a problem is happening<font color="#E5E5E5"> so let's</font><font color="#CCCCCC"> go</font>

263
00:16:49,560 --> 00:16:58,050
to the<font color="#E5E5E5"> next step how to troubleshoot</font>

264
00:16:52,320 --> 00:17:03,180
them<font color="#CCCCCC"> the key word</font><font color="#E5E5E5"> is snapshot the</font>

265
00:16:58,050 --> 00:17:07,169
<font color="#E5E5E5">snapshot is the memory the target system</font>

266
00:17:03,180 --> 00:17:09,899
<font color="#CCCCCC">memory while the high CPU usage is</font>

267
00:17:07,170 --> 00:17:12,630
happening it can be your kernel memory

268
00:17:09,900 --> 00:17:15,360
dump<font color="#E5E5E5"> and it can be a live kernel</font>

269
00:17:12,630 --> 00:17:18,689
debugging session<font color="#CCCCCC"> a</font><font color="#E5E5E5"> real-time and then</font>

270
00:17:15,359 --> 00:17:23,540
in the snapshot<font color="#CCCCCC"> you</font><font color="#E5E5E5"> examine other</font><font color="#CCCCCC"> call</font>

271
00:17:18,689 --> 00:17:27,030
<font color="#CCCCCC">stacks</font><font color="#E5E5E5"> so that's the general approach</font><font color="#CCCCCC"> I</font>

272
00:17:23,540 --> 00:17:32,940
can take you<font color="#CCCCCC"> through the example that</font><font color="#E5E5E5"> I</font>

273
00:17:27,030 --> 00:17:35,428
created<font color="#E5E5E5"> my example has a 100% CPU</font>

274
00:17:32,940 --> 00:17:38,460
problem so I just go through<font color="#CCCCCC"> this</font>

275
00:17:35,429 --> 00:17:40,470
example<font color="#E5E5E5"> really quickly</font><font color="#CCCCCC"> because the</font>

276
00:17:38,460 --> 00:17:45,210
<font color="#E5E5E5">detailed content is online in the blog</font>

277
00:17:40,470 --> 00:17:48,210
<font color="#CCCCCC">post I connect we need windbg</font><font color="#E5E5E5"> debugger</font>

278
00:17:45,210 --> 00:17:53,010
and<font color="#E5E5E5"> break into</font><font color="#CCCCCC"> it to get a snapshot and</font>

279
00:17:48,210 --> 00:17:56,910
<font color="#E5E5E5">then</font><font color="#CCCCCC"> I get the call stack of my driver</font>

280
00:17:53,010 --> 00:18:00,030
the call stack<font color="#E5E5E5"> already pointing is</font>

281
00:17:56,910 --> 00:18:02,460
already pointing<font color="#CCCCCC"> at my code which is</font>

282
00:18:00,030 --> 00:18:05,700
looping so

283
00:18:02,460 --> 00:18:09,440
once you get the<font color="#CCCCCC"> cost backs</font><font color="#E5E5E5"> it can show</font>

284
00:18:05,700 --> 00:18:13,320
you the location<font color="#CCCCCC"> your code is looping</font>

285
00:18:09,440 --> 00:18:18,090
that's how<font color="#CCCCCC"> powerful this debugger is and</font>

286
00:18:13,320 --> 00:18:22,620
it also it's also telling<font color="#CCCCCC"> you that 100%</font>

287
00:18:18,090 --> 00:18:26,280
CPU problem is not scary at all<font color="#E5E5E5"> so let's</font>

288
00:18:22,620 --> 00:18:29,340
go back<font color="#CCCCCC"> to the code</font><font color="#E5E5E5"> because just now the</font>

289
00:18:26,280 --> 00:18:33,810
debugger already pointed out<font color="#CCCCCC"> the code</font>

290
00:18:29,340 --> 00:18:36,629
location so by matching that information

291
00:18:33,810 --> 00:18:39,389
with<font color="#CCCCCC"> real code we can</font><font color="#E5E5E5"> see there is</font><font color="#CCCCCC"> a</font>

292
00:18:36,630 --> 00:18:44,490
infinite<font color="#CCCCCC"> whoo loop there in the code</font><font color="#E5E5E5"> so</font>

293
00:18:39,390 --> 00:18:52,350
<font color="#CCCCCC">this code is just a demonstration</font><font color="#E5E5E5"> to fix</font>

294
00:18:44,490 --> 00:18:55,530
it<font color="#CCCCCC"> fixing is not Universal</font><font color="#E5E5E5"> to fix a 100%</font>

295
00:18:52,350 --> 00:18:59,520
CPU problem<font color="#E5E5E5"> you need to really know</font><font color="#CCCCCC"> your</font>

296
00:18:55,530 --> 00:19:03,420
code logic<font color="#E5E5E5"> really well and choose the</font>

297
00:18:59,520 --> 00:19:05,970
fix based on your needs for<font color="#CCCCCC"> example you</font>

298
00:19:03,420 --> 00:19:09,770
need<font color="#E5E5E5"> to set a break condition to jump</font>

299
00:19:05,970 --> 00:19:13,470
out<font color="#CCCCCC"> of loops</font><font color="#E5E5E5"> and consider yielding</font>

300
00:19:09,770 --> 00:19:18,690
yielding CPU by calling API such<font color="#CCCCCC"> as</font>

301
00:19:13,470 --> 00:19:22,970
sleep<font color="#CCCCCC"> zero so for</font><font color="#E5E5E5"> times sake</font>

302
00:19:18,690 --> 00:19:27,990
I'm gonna go quickly to the<font color="#CCCCCC"> next</font><font color="#E5E5E5"> example</font>

303
00:19:22,970 --> 00:19:31,290
<font color="#CCCCCC">next</font><font color="#E5E5E5"> common problem is deadlock dialogue</font>

304
00:19:27,990 --> 00:19:34,620
usually involves two entity<font color="#E5E5E5"> usually</font>

305
00:19:31,290 --> 00:19:39,149
typically it's two thread and two

306
00:19:34,620 --> 00:19:43,679
<font color="#E5E5E5">different resource like thread a already</font>

307
00:19:39,150 --> 00:19:46,710
acquired resource<font color="#E5E5E5"> a but it's waiting on</font>

308
00:19:43,680 --> 00:19:50,430
resource<font color="#CCCCCC"> B and then the other thread</font>

309
00:19:46,710 --> 00:19:55,950
thread B already acquired resource P and

310
00:19:50,430 --> 00:19:59,040
is waiting<font color="#E5E5E5"> on resource a so they form</font>

311
00:19:55,950 --> 00:20:01,440
upper circle and nobody can get out<font color="#CCCCCC"> of</font>

312
00:19:59,040 --> 00:20:06,260
this circle<font color="#E5E5E5"> therefore nobody moving</font>

313
00:20:01,440 --> 00:20:11,400
<font color="#E5E5E5">forward so that's the typical deadlock</font>

314
00:20:06,260 --> 00:20:15,480
how to debug<font color="#CCCCCC"> that lock</font><font color="#E5E5E5"> first of all most</font>

315
00:20:11,400 --> 00:20:20,820
important<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> cos tax</font><font color="#E5E5E5"> first you get the</font>

316
00:20:15,480 --> 00:20:23,910
<font color="#E5E5E5">tax and then find out</font><font color="#CCCCCC"> the lock</font>

317
00:20:20,820 --> 00:20:26,850
information on your system to figure<font color="#E5E5E5"> out</font>

318
00:20:23,910 --> 00:20:35,730
which lock is already held by which

319
00:20:26,850 --> 00:20:45,270
threat and I also created a sample<font color="#E5E5E5"> code</font>

320
00:20:35,730 --> 00:20:47,520
that<font color="#E5E5E5"> has a typical dialogue in it so I'm</font>

321
00:20:45,270 --> 00:20:50,610
demonstrating how I<font color="#CCCCCC"> debug it</font>

322
00:20:47,520 --> 00:20:54,060
debug the<font color="#CCCCCC"> dialogue problem in my sample</font>

323
00:20:50,610 --> 00:20:57,330
<font color="#E5E5E5">code so this is the cost that just like</font>

324
00:20:54,060 --> 00:21:01,860
I just<font color="#E5E5E5"> mentioned</font><font color="#CCCCCC"> that the debugger</font><font color="#E5E5E5"> is</font>

325
00:20:57,330 --> 00:21:06,389
able to<font color="#E5E5E5"> figure out the</font><font color="#CCCCCC"> current status of</font>

326
00:21:01,860 --> 00:21:09,570
<font color="#E5E5E5">all</font><font color="#CCCCCC"> of your threats and you can see that</font>

327
00:21:06,390 --> 00:21:12,870
the two red arrow<font color="#CCCCCC"> they're pointing</font><font color="#E5E5E5"> at</font>

328
00:21:09,570 --> 00:21:15,419
codes that never move forward<font color="#E5E5E5"> so that's</font>

329
00:21:12,870 --> 00:21:19,879
<font color="#E5E5E5">the first step of</font><font color="#CCCCCC"> getting</font><font color="#E5E5E5"> call stack</font>

330
00:21:15,420 --> 00:21:25,170
next step is getting lock information

331
00:21:19,880 --> 00:21:28,830
<font color="#E5E5E5">here I</font><font color="#CCCCCC"> recommend using</font><font color="#E5E5E5"> the command band</font>

332
00:21:25,170 --> 00:21:31,800
<font color="#CCCCCC">locks this command can help you get the</font>

333
00:21:28,830 --> 00:21:37,260
lock information like which lock is held

334
00:21:31,800 --> 00:21:40,710
by which thread yeah<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> I'm not</font><font color="#CCCCCC"> sure</font>

335
00:21:37,260 --> 00:21:44,310
if<font color="#E5E5E5"> everyone can see it clearly so this</font>

336
00:21:40,710 --> 00:21:49,430
information<font color="#E5E5E5"> already indicated that lock</font>

337
00:21:44,310 --> 00:21:53,760
a is acquired<font color="#E5E5E5"> by law by my thread a and</font>

338
00:21:49,430 --> 00:21:57,600
lock<font color="#CCCCCC"> B is already acquired by thread B</font>

339
00:21:53,760 --> 00:22:02,190
<font color="#E5E5E5">and each one each thread</font><font color="#CCCCCC"> is waiting</font><font color="#E5E5E5"> on</font>

340
00:21:57,600 --> 00:22:04,969
the other lock so combining the two

341
00:22:02,190 --> 00:22:07,740
informations indicated by the debugger

342
00:22:04,970 --> 00:22:10,590
we can go ahead and<font color="#CCCCCC"> match the location</font>

343
00:22:07,740 --> 00:22:15,270
<font color="#E5E5E5">in the source code</font><font color="#CCCCCC"> so in that source</font>

344
00:22:10,590 --> 00:22:17,699
<font color="#CCCCCC">code as the red arrow points out</font><font color="#E5E5E5"> that's</font>

345
00:22:15,270 --> 00:22:25,139
<font color="#E5E5E5">the location where</font><font color="#CCCCCC"> nobody's</font><font color="#E5E5E5"> moving</font>

346
00:22:17,700 --> 00:22:29,240
<font color="#E5E5E5">forward</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> we figure out the problem</font>

347
00:22:25,140 --> 00:22:32,750
location in source let's proceed to<font color="#E5E5E5"> fix</font>

348
00:22:29,240 --> 00:22:33,950
again for a developer<font color="#CCCCCC"> fix</font><font color="#E5E5E5"> is not</font>

349
00:22:32,750 --> 00:22:36,560
<font color="#CCCCCC">universal</font>

350
00:22:33,950 --> 00:22:39,950
that the<font color="#E5E5E5"> develop developer really needs</font>

351
00:22:36,560 --> 00:22:42,940
to<font color="#E5E5E5"> know where your code is going I can</font>

352
00:22:39,950 --> 00:22:46,460
only provide some general suggestions

353
00:22:42,940 --> 00:22:50,180
number one is I<font color="#E5E5E5"> try to</font><font color="#CCCCCC"> avoid using</font>

354
00:22:46,460 --> 00:22:52,880
<font color="#E5E5E5">nested locks like after holding lock a</font>

355
00:22:50,180 --> 00:22:56,570
acquire lock B and a while holding the

356
00:22:52,880 --> 00:23:00,530
<font color="#E5E5E5">locks</font><font color="#CCCCCC"> I try</font><font color="#E5E5E5"> to acquire lock see</font>

357
00:22:56,570 --> 00:23:03,010
so that's nested and make the<font color="#E5E5E5"> coding</font>

358
00:23:00,530 --> 00:23:05,740
scenario really really<font color="#CCCCCC"> complicated and</font>

359
00:23:03,010 --> 00:23:09,440
eventually it's easy to get locked

360
00:23:05,740 --> 00:23:12,140
another thing is always<font color="#E5E5E5"> acquire locks in</font>

361
00:23:09,440 --> 00:23:16,370
the same order<font color="#CCCCCC"> so in case you really</font>

362
00:23:12,140 --> 00:23:19,580
<font color="#E5E5E5">need to acquire two locks always</font><font color="#CCCCCC"> acquire</font>

363
00:23:16,370 --> 00:23:22,750
in the same order getting<font color="#E5E5E5"> a lock a</font><font color="#CCCCCC"> firs</font>

364
00:23:19,580 --> 00:23:26,179
<font color="#CCCCCC">and then getting lock B do not in any</font>

365
00:23:22,750 --> 00:23:30,110
circumstances having different order

366
00:23:26,180 --> 00:23:33,110
<font color="#E5E5E5">like a one doing a and B the other doing</font>

367
00:23:30,110 --> 00:23:37,969
B and a that's the recipe<font color="#E5E5E5"> for for</font><font color="#CCCCCC"> that</font>

368
00:23:33,110 --> 00:23:41,360
<font color="#CCCCCC">lock</font><font color="#E5E5E5"> and inside inside</font><font color="#CCCCCC"> a lock</font><font color="#E5E5E5"> try to</font>

369
00:23:37,970 --> 00:23:45,800
avoid lengthy<font color="#E5E5E5"> operations and try to</font>

370
00:23:41,360 --> 00:23:51,649
avoid API<font color="#E5E5E5"> costs what I'm going to avoid</font>

371
00:23:45,800 --> 00:23:54,200
here is to<font color="#E5E5E5"> avoid issuing new IO to the</font>

372
00:23:51,650 --> 00:23:58,820
lower driver<font color="#E5E5E5"> when I'm holding a lock</font>

373
00:23:54,200 --> 00:24:02,360
because<font color="#E5E5E5"> that's also disaster recipe you</font>

374
00:23:58,820 --> 00:24:07,520
know in a lock region try not to create

375
00:24:02,360 --> 00:24:11,600
<font color="#E5E5E5">new i/o so that's one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the rule so</font>

376
00:24:07,520 --> 00:24:15,260
that's about<font color="#E5E5E5"> that lock let me proceed to</font>

377
00:24:11,600 --> 00:24:20,050
the third<font color="#E5E5E5"> common problem which is blue</font>

378
00:24:15,260 --> 00:24:23,920
screen<font color="#E5E5E5"> blue screen is really</font><font color="#CCCCCC"> complicated</font>

379
00:24:20,050 --> 00:24:27,649
problem because behind<font color="#E5E5E5"> each blue screen</font>

380
00:24:23,920 --> 00:24:29,450
the reason can<font color="#CCCCCC"> be different even even</font>

381
00:24:27,650 --> 00:24:31,940
the ones have<font color="#CCCCCC"> been having</font><font color="#E5E5E5"> the same</font>

382
00:24:29,450 --> 00:24:35,420
<font color="#CCCCCC">symptom</font><font color="#E5E5E5"> but the reason can</font><font color="#CCCCCC"> be still</font>

383
00:24:31,940 --> 00:24:38,630
different for the<font color="#CCCCCC"> time sake</font>

384
00:24:35,420 --> 00:24:41,690
I'm gonna only<font color="#E5E5E5"> cover one most common</font>

385
00:24:38,630 --> 00:24:45,380
type of blue screen as you can<font color="#E5E5E5"> see the</font>

386
00:24:41,690 --> 00:24:49,160
<font color="#CCCCCC">bug check number there</font><font color="#E5E5E5"> I can read to you</font>

387
00:24:45,380 --> 00:24:53,990
<font color="#CCCCCC">i RQ or</font><font color="#E5E5E5"> across some people call it</font>

388
00:24:49,160 --> 00:24:56,210
<font color="#CCCCCC">Oracle not less or</font><font color="#E5E5E5"> eco so that's one</font><font color="#CCCCCC"> of</font>

389
00:24:53,990 --> 00:24:59,390
<font color="#E5E5E5">the most common symptoms of blue screen</font>

390
00:24:56,210 --> 00:25:03,160
<font color="#CCCCCC">I created a</font><font color="#E5E5E5"> simple driver that's causing</font>

391
00:24:59,390 --> 00:25:07,790
this kind of bug check<font color="#E5E5E5"> blue screen</font><font color="#CCCCCC"> and</font>

392
00:25:03,160 --> 00:25:12,530
using your debugger start with the the

393
00:25:07,790 --> 00:25:15,560
command panel<font color="#CCCCCC"> allies -</font><font color="#E5E5E5"> V that's a very</font>

394
00:25:12,530 --> 00:25:19,639
useful command you can use it pretty

395
00:25:15,560 --> 00:25:22,220
<font color="#E5E5E5">much for every crash dumps sometimes by</font>

396
00:25:19,640 --> 00:25:24,170
running the close<font color="#E5E5E5"> the command you can</font>

397
00:25:22,220 --> 00:25:28,010
already figure out the problem<font color="#CCCCCC"> for</font>

398
00:25:24,170 --> 00:25:31,010
<font color="#E5E5E5">example in my case the red line already</font>

399
00:25:28,010 --> 00:25:34,700
pointing at the crashing crashing

400
00:25:31,010 --> 00:25:38,180
location in my source code<font color="#CCCCCC"> and I go back</font>

401
00:25:34,700 --> 00:25:41,510
<font color="#E5E5E5">to</font><font color="#CCCCCC"> a source code and find out the</font><font color="#E5E5E5"> the</font>

402
00:25:38,180 --> 00:25:47,140
problem with<font color="#E5E5E5"> the line</font><font color="#CCCCCC"> of the code with</font>

403
00:25:41,510 --> 00:25:48,400
the problem finally we<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to</font>

404
00:25:47,140 --> 00:25:53,330
[Music]

405
00:25:48,400 --> 00:25:57,860
understand why in the in<font color="#E5E5E5"> that example</font>

406
00:25:53,330 --> 00:26:00,710
that's a why it is a problem<font color="#CCCCCC"> and to</font>

407
00:25:57,860 --> 00:26:04,790
understand this one we need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have some</font>

408
00:26:00,710 --> 00:26:09,860
kernel specific<font color="#E5E5E5"> background</font><font color="#CCCCCC"> some core</font>

409
00:26:04,790 --> 00:26:12,770
concepts to master<font color="#E5E5E5"> this science because</font>

410
00:26:09,860 --> 00:26:17,320
<font color="#E5E5E5">kernel is different from the user land</font>

411
00:26:12,770 --> 00:26:22,010
<font color="#E5E5E5">it has some unique</font><font color="#CCCCCC"> rules and conditions</font>

412
00:26:17,320 --> 00:26:26,679
this<font color="#CCCCCC"> simple code it crashed their</font><font color="#E5E5E5"> crash</font>

413
00:26:22,010 --> 00:26:29,300
location<font color="#CCCCCC"> at line 63</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> violates some</font>

414
00:26:26,680 --> 00:26:34,760
kernel rules

415
00:26:29,300 --> 00:26:36,639
<font color="#CCCCCC">I listed</font><font color="#E5E5E5"> here it's accessing page pool</font>

416
00:26:34,760 --> 00:26:42,460
<font color="#CCCCCC">inside a spin lock</font>

417
00:26:36,640 --> 00:26:46,840
so<font color="#CCCCCC"> for</font><font color="#E5E5E5"> and the other reason is on the</font>

418
00:26:42,460 --> 00:26:49,100
the inside<font color="#E5E5E5"> spin lock the Oracle level is</font>

419
00:26:46,840 --> 00:26:53,090
inappropriate<font color="#CCCCCC"> for this kind of memory</font>

420
00:26:49,100 --> 00:26:53,659
operation<font color="#E5E5E5"> so if</font><font color="#CCCCCC"> if you</font><font color="#E5E5E5"> are new</font><font color="#CCCCCC"> to this</font>

421
00:26:53,090 --> 00:26:56,000
kind<font color="#E5E5E5"> of</font>

422
00:26:53,660 --> 00:26:59,150
thing if you<font color="#CCCCCC"> are new to</font><font color="#E5E5E5"> Windows</font>

423
00:26:56,000 --> 00:27:02,930
debugging<font color="#CCCCCC"> you might not be familiar</font><font color="#E5E5E5"> with</font>

424
00:26:59,150 --> 00:27:07,690
the the concepts but I have the links in

425
00:27:02,930 --> 00:27:10,580
this blog in this PPT<font color="#CCCCCC"> so</font><font color="#E5E5E5"> and I also</font>

426
00:27:07,690 --> 00:27:15,850
provide the information<font color="#E5E5E5"> in</font><font color="#CCCCCC"> my blog post</font>

427
00:27:10,580 --> 00:27:15,850
<font color="#E5E5E5">you can get it from the presentation</font>

428
00:27:16,240 --> 00:27:24,860
<font color="#CCCCCC">finally it's the fix try to avoid</font><font color="#E5E5E5"> try to</font>

429
00:27:21,710 --> 00:27:28,790
access<font color="#E5E5E5"> page pool and</font><font color="#CCCCCC"> non</font><font color="#E5E5E5"> page pool</font><font color="#CCCCCC"> at</font>

430
00:27:24,860 --> 00:27:31,550
the right<font color="#CCCCCC"> berkel level</font><font color="#E5E5E5"> and sometimes you</font>

431
00:27:28,790 --> 00:27:35,510
need<font color="#CCCCCC"> to access</font><font color="#E5E5E5"> usable memory from kernel</font>

432
00:27:31,550 --> 00:27:38,690
try to protect the memory<font color="#CCCCCC"> access with</font>

433
00:27:35,510 --> 00:27:42,350
the try exception block and always

434
00:27:38,690 --> 00:27:46,910
synchronize your<font color="#E5E5E5"> threats so that's</font>

435
00:27:42,350 --> 00:27:49,689
pretty much that's<font color="#E5E5E5"> all my three examples</font>

436
00:27:46,910 --> 00:27:53,240
of<font color="#E5E5E5"> the common kernel problems and</font>

437
00:27:49,690 --> 00:27:56,720
finally<font color="#E5E5E5"> you need to hack get your hands</font>

438
00:27:53,240 --> 00:27:59,480
<font color="#E5E5E5">on</font><font color="#CCCCCC"> it as soon as</font><font color="#E5E5E5"> possible</font><font color="#CCCCCC"> because kernel</font>

439
00:27:56,720 --> 00:28:04,400
debugging is a very practical science

440
00:27:59,480 --> 00:28:07,730
and it's a lot of<font color="#E5E5E5"> fun so hopefully my</font>

441
00:28:04,400 --> 00:28:10,850
talk it's not<font color="#E5E5E5"> it's not covering a lot</font>

442
00:28:07,730 --> 00:28:14,510
but it<font color="#E5E5E5"> covers a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> things I wish I</font>

443
00:28:10,850 --> 00:28:22,389
had when I first<font color="#E5E5E5"> started my</font><font color="#CCCCCC"> 10 years</font><font color="#E5E5E5"> ago</font>

444
00:28:14,510 --> 00:28:22,390
<font color="#E5E5E5">so hope it helps and thank you very much</font>

445
00:28:25,320 --> 00:28:36,379
<font color="#E5E5E5">I share my blog link blog post link here</font>

446
00:28:33,450 --> 00:28:39,380
<font color="#E5E5E5">and hopefully I have some time for</font><font color="#CCCCCC"> some</font>

447
00:28:36,380 --> 00:28:39,380
<font color="#CCCCCC">questions</font>

448
00:28:56,920 --> 00:29:01,060
thank you for<font color="#E5E5E5"> the presentation that was</font>

449
00:28:58,630 --> 00:29:05,140
really cool<font color="#CCCCCC"> I used to do</font><font color="#E5E5E5"> kernel</font>

450
00:29:01,060 --> 00:29:07,480
debugging<font color="#E5E5E5"> back when it was da so it's</font>

451
00:29:05,140 --> 00:29:09,520
good<font color="#E5E5E5"> to come up to date now what what</font>

452
00:29:07,480 --> 00:29:13,750
what made you get into this are you a

453
00:29:09,520 --> 00:29:16,330
kernel<font color="#E5E5E5"> architect are related to folks</font>

454
00:29:13,750 --> 00:29:20,140
<font color="#E5E5E5">that write Windows kernels or how did</font>

455
00:29:16,330 --> 00:29:25,449
<font color="#E5E5E5">you what led you to debugging at the</font>

456
00:29:20,140 --> 00:29:29,280
kernel level<font color="#CCCCCC"> I I didn't really clear</font>

457
00:29:25,450 --> 00:29:32,080
<font color="#E5E5E5">here very clearly so what led you to</font>

458
00:29:29,280 --> 00:29:33,760
debugging at the kernel level<font color="#CCCCCC"> are</font><font color="#E5E5E5"> you do</font>

459
00:29:32,080 --> 00:29:37,240
work with<font color="#E5E5E5"> kernel architects are you</font>

460
00:29:33,760 --> 00:29:42,310
colonel writer I'm a kernel developer

461
00:29:37,240 --> 00:29:45,280
and kernel debugging<font color="#E5E5E5"> is a part of kernel</font>

462
00:29:42,310 --> 00:29:47,169
development it's always<font color="#E5E5E5"> together you</font>

463
00:29:45,280 --> 00:29:49,420
have developing and then you have the

464
00:29:47,170 --> 00:29:51,910
<font color="#E5E5E5">debugging they always come together</font><font color="#CCCCCC"> it</font>

465
00:29:49,420 --> 00:29:55,660
<font color="#E5E5E5">debugging is not avoidable</font>

466
00:29:51,910 --> 00:29:59,890
so that's debugging is the means to

467
00:29:55,660 --> 00:30:07,750
<font color="#CCCCCC">create correct and efficient</font><font color="#E5E5E5"> software so</font>

468
00:29:59,890 --> 00:30:14,200
that's<font color="#E5E5E5"> why I'm I do it do we have any</font>

469
00:30:07,750 --> 00:30:16,770
more<font color="#E5E5E5"> questions</font><font color="#CCCCCC"> in the audience this</font><font color="#E5E5E5"> is</font>

470
00:30:14,200 --> 00:30:19,360
<font color="#CCCCCC">this is kind of a general</font><font color="#E5E5E5"> thing but</font>

471
00:30:16,770 --> 00:30:22,360
given that RSA security is next door<font color="#E5E5E5"> and</font>

472
00:30:19,360 --> 00:30:25,120
<font color="#E5E5E5">that you have any thoughts on security</font>

473
00:30:22,360 --> 00:30:28,510
aspects so your work<font color="#E5E5E5"> how it can be</font>

474
00:30:25,120 --> 00:30:32,439
useful to deal with<font color="#CCCCCC"> rootkits or anything</font>

475
00:30:28,510 --> 00:30:35,800
like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> oh I may be too big a question</font>

476
00:30:32,440 --> 00:30:38,500
I don't<font color="#E5E5E5"> know yeah</font><font color="#CCCCCC"> it's 30</font><font color="#E5E5E5"> minutes talk I</font>

477
00:30:35,800 --> 00:30:41,379
know<font color="#E5E5E5"> I'm not able</font><font color="#CCCCCC"> to cover</font><font color="#E5E5E5"> a lot because</font>

478
00:30:38,500 --> 00:30:45,010
kernel debugging is really a huge and

479
00:30:41,380 --> 00:30:47,650
vast topic<font color="#CCCCCC"> so today I'm</font><font color="#E5E5E5"> just trying to</font>

480
00:30:45,010 --> 00:30:51,910
<font color="#E5E5E5">make some topic initially when I plan</font>

481
00:30:47,650 --> 00:30:56,230
this talk I did plan<font color="#CCCCCC"> to add an example</font>

482
00:30:51,910 --> 00:30:58,410
of analyzing<font color="#E5E5E5"> through rootkit and</font><font color="#CCCCCC"> then</font>

483
00:30:56,230 --> 00:31:02,290
when I did that

484
00:30:58,410 --> 00:31:07,080
rehearsal run and then<font color="#CCCCCC"> involves some</font>

485
00:31:02,290 --> 00:31:10,000
kernel specific concepts and then people

486
00:31:07,080 --> 00:31:10,480
suggest me to<font color="#E5E5E5"> just cut it because</font><font color="#CCCCCC"> it</font>

487
00:31:10,000 --> 00:31:13,630
takes<font color="#E5E5E5"> out</font>

488
00:31:10,480 --> 00:31:16,750
long time to explain<font color="#CCCCCC"> each but if you are</font>

489
00:31:13,630 --> 00:31:21,429
<font color="#E5E5E5">interested I can follow up I can be</font>

490
00:31:16,750 --> 00:31:26,049
<font color="#E5E5E5">reached</font><font color="#CCCCCC"> through email em I'm</font><font color="#E5E5E5"> AM around</font><font color="#CCCCCC"> I</font>

491
00:31:21,429 --> 00:31:27,730
can talk<font color="#E5E5E5"> to you that's all the</font><font color="#CCCCCC"> time we</font>

492
00:31:26,049 --> 00:31:30,230
have for<font color="#CCCCCC"> questions</font><font color="#E5E5E5"> let's thank our</font>

493
00:31:27,730 --> 00:31:34,369
speaker again

494
00:31:30,230 --> 00:31:34,369
[Applause]

