1
00:00:00,240 --> 00:00:01,839
all right everyone now ready to get

2
00:00:01,839 --> 00:00:04,800
started with our next talk

3
00:00:06,000 --> 00:00:08,559
so our next speakers are nicole fishbain

4
00:00:08,559 --> 00:00:10,160
and ryan robinson

5
00:00:10,160 --> 00:00:12,080
nicole fishbain is a security researcher

6
00:00:12,080 --> 00:00:13,840
and malware analyst nicole has been part

7
00:00:13,840 --> 00:00:16,239
of a research that led to discovery of

8
00:00:16,239 --> 00:00:18,640
phishing campaigns undetected malware

9
00:00:18,640 --> 00:00:20,400
and attacks on linux-based cloud

10
00:00:20,400 --> 00:00:21,760
environments

11
00:00:21,760 --> 00:00:23,119
and ryan robinson is a security

12
00:00:23,119 --> 00:00:26,240
researcher for intesar he specializes in

13
00:00:26,240 --> 00:00:28,080
malware reverse engineering and threat

14
00:00:28,080 --> 00:00:29,519
intelligence

15
00:00:29,519 --> 00:00:32,320
today's talk is go with the workflow

16
00:00:32,320 --> 00:00:34,000
thank you very much

17
00:00:34,000 --> 00:00:37,680
i'll just start our wee timer here so

18
00:00:37,840 --> 00:00:38,879
there we go

19
00:00:38,879 --> 00:00:40,800
thank you very much for coming to our

20
00:00:40,800 --> 00:00:43,440
talk and pretty simply what our talk is

21
00:00:43,440 --> 00:00:47,039
is it's about workflow applications and

22
00:00:47,039 --> 00:00:49,840
the security implications that

23
00:00:49,840 --> 00:00:52,000
come sort of with them which turns out

24
00:00:52,000 --> 00:00:53,760
it's quite a lot but first let us

25
00:00:53,760 --> 00:00:55,360
properly introduce ourselves actually

26
00:00:55,360 --> 00:00:57,600
know that introduction is very good but

27
00:00:57,600 --> 00:01:02,480
so i'm ryan i'm a researcher at intelzer

28
00:01:02,480 --> 00:01:04,799
i mainly specialize in i guess cloud

29
00:01:04,799 --> 00:01:05,760
frauds

30
00:01:05,760 --> 00:01:07,840
a malware

31
00:01:07,840 --> 00:01:10,159
in previous roles i was

32
00:01:10,159 --> 00:01:12,240
a security engineer for consulting

33
00:01:12,240 --> 00:01:13,920
company and then a research and

34
00:01:13,920 --> 00:01:16,479
anomalies threat research team

35
00:01:16,479 --> 00:01:17,680
on yourself

36
00:01:17,680 --> 00:01:19,439
hi my name is nicole fishbein i'm a

37
00:01:19,439 --> 00:01:21,520
security researcher at intesar and

38
00:01:21,520 --> 00:01:23,759
previous to that i was in the embedded r

39
00:01:23,759 --> 00:01:27,840
d department in the idf

40
00:01:29,280 --> 00:01:30,960
all right so today we're going to talk

41
00:01:30,960 --> 00:01:33,200
about workflows and how dangerous it

42
00:01:33,200 --> 00:01:35,119
could be when you misconfigure them and

43
00:01:35,119 --> 00:01:36,479
expose them

44
00:01:36,479 --> 00:01:37,840
and we're going to present two case

45
00:01:37,840 --> 00:01:39,840
studies one is argo and the other one is

46
00:01:39,840 --> 00:01:42,079
airflow we will explain a bit about the

47
00:01:42,079 --> 00:01:44,240
different features of each platform and

48
00:01:44,240 --> 00:01:46,000
how it was misconfigured and what

49
00:01:46,000 --> 00:01:48,240
information we were able to retweet from

50
00:01:48,240 --> 00:01:49,280
there

51
00:01:49,280 --> 00:01:51,119
and we're not going to leave you without

52
00:01:51,119 --> 00:01:53,600
some practical advices on how to you how

53
00:01:53,600 --> 00:01:55,079
you can detect this type of

54
00:01:55,079 --> 00:01:57,520
misconfigurations and

55
00:01:57,520 --> 00:02:01,039
detect it in your organizations

56
00:02:03,439 --> 00:02:05,840
all right so let's start with what is a

57
00:02:05,840 --> 00:02:08,720
workflow let's say you have some data in

58
00:02:08,720 --> 00:02:10,878
a source database and you want to move

59
00:02:10,878 --> 00:02:13,120
it to another centralized database so

60
00:02:13,120 --> 00:02:14,400
for that you will need to get

61
00:02:14,400 --> 00:02:16,720
information maybe analyze it and then

62
00:02:16,720 --> 00:02:19,040
store it each of these functions can be

63
00:02:19,040 --> 00:02:21,360
broken into smaller things like smaller

64
00:02:21,360 --> 00:02:24,160
functions smaller tasks where each task

65
00:02:24,160 --> 00:02:26,400
will pipeline pipe the relevant

66
00:02:26,400 --> 00:02:29,040
information to the next task

67
00:02:29,040 --> 00:02:31,599
and that's how you have a workflow

68
00:02:31,599 --> 00:02:34,000
and you're probably going to

69
00:02:34,000 --> 00:02:36,640
want to schedule it to execute execute

70
00:02:36,640 --> 00:02:39,360
on certain hours certain dates and so on

71
00:02:39,360 --> 00:02:41,519
so that's exactly what works of

72
00:02:41,519 --> 00:02:43,599
platforms are meant to do and provide

73
00:02:43,599 --> 00:02:46,080
you with disability

74
00:02:46,080 --> 00:02:48,400
and some workflow platforms cost money

75
00:02:48,400 --> 00:02:51,440
some are free and some are open sourced

76
00:02:51,440 --> 00:02:54,560
so our research focused specifically on

77
00:02:54,560 --> 00:02:57,760
the most popular workflow platforms

78
00:02:57,760 --> 00:02:59,519
based on github

79
00:02:59,519 --> 00:03:01,680
repo and stars

80
00:03:01,680 --> 00:03:04,560
and we wanted to see can we find someone

81
00:03:04,560 --> 00:03:07,840
that misconfigured the workflow instance

82
00:03:07,840 --> 00:03:10,560
and now we can access the dashboard and

83
00:03:10,560 --> 00:03:12,959
if so what kind of information we can

84
00:03:12,959 --> 00:03:15,760
find there and lastly if we have access

85
00:03:15,760 --> 00:03:18,959
to the dashboard can we execute malware

86
00:03:18,959 --> 00:03:23,280
so the first case study is argo

87
00:03:24,319 --> 00:03:27,440
okay so yeah our first case study is

88
00:03:27,440 --> 00:03:29,599
argo workflows in my opinion the

89
00:03:29,599 --> 00:03:32,319
workflow software with the best logo i

90
00:03:32,319 --> 00:03:33,840
love that guy it's like a squid or

91
00:03:33,840 --> 00:03:35,760
something uh

92
00:03:35,760 --> 00:03:37,840
octopus but so

93
00:03:37,840 --> 00:03:40,480
just a short about uh argo workflows

94
00:03:40,480 --> 00:03:42,239
there's also an oversolver called the

95
00:03:42,239 --> 00:03:45,200
argo cd um but this one's really really

96
00:03:45,200 --> 00:03:47,760
popular so container native uh

97
00:03:47,760 --> 00:03:49,920
workflow engine and for those who don't

98
00:03:49,920 --> 00:03:51,599
know what container native means it's

99
00:03:51,599 --> 00:03:53,840
kind of it's the best level of uh

100
00:03:53,840 --> 00:03:55,599
infrastructure so hypothetically if you

101
00:03:55,599 --> 00:03:57,360
can run kubernetes or containers and

102
00:03:57,360 --> 00:03:59,680
stuff you can run the software so you

103
00:03:59,680 --> 00:04:01,519
can't it's uh

104
00:04:01,519 --> 00:04:03,760
open source which obviously we love open

105
00:04:03,760 --> 00:04:05,680
source fantastic it makes it also

106
00:04:05,680 --> 00:04:08,400
slightly easier to do some research on

107
00:04:08,400 --> 00:04:10,000
so it does you know compared to pen per

108
00:04:10,000 --> 00:04:11,840
product and doing sort of research on

109
00:04:11,840 --> 00:04:12,879
that

110
00:04:12,879 --> 00:04:14,720
it's designed for kubernetes

111
00:04:14,720 --> 00:04:17,600
um great stuff and it's incubated by the

112
00:04:17,600 --> 00:04:19,519
cloud neural computing foundation and

113
00:04:19,519 --> 00:04:20,639
these are also the cm people that

114
00:04:20,639 --> 00:04:24,479
maintain kubernetes so it's probably as

115
00:04:24,479 --> 00:04:25,919
unofficial a workflow engine for

116
00:04:25,919 --> 00:04:27,280
kubernetes as

117
00:04:27,280 --> 00:04:28,479
you'll get

118
00:04:28,479 --> 00:04:30,720
and then i set up that as my last point

119
00:04:30,720 --> 00:04:32,800
there it's great for compute in terms of

120
00:04:32,800 --> 00:04:35,360
jobs and away when key fees for sort of

121
00:04:35,360 --> 00:04:37,360
foreshadowing

122
00:04:37,360 --> 00:04:39,120
but the first talk about what a workflow

123
00:04:39,120 --> 00:04:39,919
is

124
00:04:39,919 --> 00:04:41,600
nicole's pretty much covered it all

125
00:04:41,600 --> 00:04:44,720
already but in argo it's defined in yaml

126
00:04:44,720 --> 00:04:46,080
and you'll probably notice quite well

127
00:04:46,080 --> 00:04:48,960
like similar to jason

128
00:04:48,960 --> 00:04:50,000
so it is

129
00:04:50,000 --> 00:04:51,680
a workflow would consist of one or more

130
00:04:51,680 --> 00:04:52,880
steps

131
00:04:52,880 --> 00:04:55,199
typically a step will be a container it

132
00:04:55,199 --> 00:04:57,360
can be a few other things it can be like

133
00:04:57,360 --> 00:05:00,240
scripts or kubernetes resources but

134
00:05:00,240 --> 00:05:01,520
for the most point people running

135
00:05:01,520 --> 00:05:04,639
computers inside that and very simply

136
00:05:04,639 --> 00:05:06,960
start a step with an

137
00:05:06,960 --> 00:05:07,919
input

138
00:05:07,919 --> 00:05:10,320
capture the output of the processing

139
00:05:10,320 --> 00:05:12,080
from that step for a container and then

140
00:05:12,080 --> 00:05:14,720
use that output as another input and

141
00:05:14,720 --> 00:05:17,600
next step and busy so on until

142
00:05:17,600 --> 00:05:20,800
you finish what it looks like

143
00:05:20,800 --> 00:05:23,759
that's just some yaml for a

144
00:05:23,759 --> 00:05:26,960
world um for hargo and then

145
00:05:26,960 --> 00:05:28,639
um that's what it looks like whenever

146
00:05:28,639 --> 00:05:30,720
you can submit it through

147
00:05:30,720 --> 00:05:33,840
the server uh ui there's also a cli tool

148
00:05:33,840 --> 00:05:35,120
if you know

149
00:05:35,120 --> 00:05:36,639
you kind of like the terminal more than

150
00:05:36,639 --> 00:05:39,280
using sort of an annoying kind of

151
00:05:39,280 --> 00:05:40,960
browser you know

152
00:05:40,960 --> 00:05:42,080
um

153
00:05:42,080 --> 00:05:44,720
so there's one other important concept

154
00:05:44,720 --> 00:05:47,840
is called off mode or

155
00:05:47,840 --> 00:05:50,160
authorization mode um there's three of

156
00:05:50,160 --> 00:05:51,199
them

157
00:05:51,199 --> 00:05:52,880
oh please click

158
00:05:52,880 --> 00:05:56,960
okay there's server client and sso

159
00:05:56,960 --> 00:05:59,199
and for the purposes of this talk we're

160
00:05:59,199 --> 00:06:02,080
going to focus on server so we are but

161
00:06:02,080 --> 00:06:03,280
one thing i'll just point out before i

162
00:06:03,280 --> 00:06:05,520
go further is that server was the

163
00:06:05,520 --> 00:06:06,479
default

164
00:06:06,479 --> 00:06:09,520
until version 3.0 and maybe this you'll

165
00:06:09,520 --> 00:06:11,360
kind of find out why

166
00:06:11,360 --> 00:06:13,680
so and what the

167
00:06:13,680 --> 00:06:15,759
the sort of definition of that is is

168
00:06:15,759 --> 00:06:17,600
that server see here

169
00:06:17,600 --> 00:06:20,400
in hosting mode use the cube config of

170
00:06:20,400 --> 00:06:22,479
the service account in local mode use

171
00:06:22,479 --> 00:06:24,639
your local queue config

172
00:06:24,639 --> 00:06:27,280
and in short terms it's pretty much

173
00:06:27,280 --> 00:06:29,039
if you can access

174
00:06:29,039 --> 00:06:31,840
the web gui for this and it's in server

175
00:06:31,840 --> 00:06:34,560
mode you inherit those permissions

176
00:06:34,560 --> 00:06:35,280
so

177
00:06:35,280 --> 00:06:36,800
um

178
00:06:36,800 --> 00:06:39,840
what this is here is the ammo for the um

179
00:06:39,840 --> 00:06:41,280
you know you can use a cube cuddle and

180
00:06:41,280 --> 00:06:44,000
apply like the quick start but

181
00:06:44,000 --> 00:06:46,639
um in the default quick start that i got

182
00:06:46,639 --> 00:06:48,639
you got all these permissions here

183
00:06:48,639 --> 00:06:50,240
pretty much the full monthly permissions

184
00:06:50,240 --> 00:06:53,039
so um pretty much out of the box like

185
00:06:53,039 --> 00:06:54,560
the default configuration or at least

186
00:06:54,560 --> 00:06:57,759
for the quick start it came kind of uh

187
00:06:57,759 --> 00:07:00,319
about the permission heavy so that

188
00:07:00,319 --> 00:07:01,759
and

189
00:07:01,759 --> 00:07:02,720
so

190
00:07:02,720 --> 00:07:04,880
busy hugging that be exploded and i kind

191
00:07:04,880 --> 00:07:06,720
of brought it down into a simple

192
00:07:06,720 --> 00:07:07,759
equation

193
00:07:07,759 --> 00:07:09,840
on the equation i sort of say it's

194
00:07:09,840 --> 00:07:12,240
server off plus excessive permissions

195
00:07:12,240 --> 00:07:14,080
plus external access

196
00:07:14,080 --> 00:07:15,599
equals profit

197
00:07:15,599 --> 00:07:17,199
so it does and

198
00:07:17,199 --> 00:07:18,560
you know you can

199
00:07:18,560 --> 00:07:19,840
sort of think what you can do with that

200
00:07:19,840 --> 00:07:22,160
and uh but for this case study we find

201
00:07:22,160 --> 00:07:24,000
something pretty interesting but

202
00:07:24,000 --> 00:07:25,280
obviously to find something interesting

203
00:07:25,280 --> 00:07:26,400
what you first have to do is kind of

204
00:07:26,400 --> 00:07:27,680
look for stuff

205
00:07:27,680 --> 00:07:29,680
so what we've done is we tried to find

206
00:07:29,680 --> 00:07:30,960
as many

207
00:07:30,960 --> 00:07:33,680
um instances as possible that were open

208
00:07:33,680 --> 00:07:34,960
in the world and you'll see this with

209
00:07:34,960 --> 00:07:36,639
our second case study that we find even

210
00:07:36,639 --> 00:07:39,520
more as well but sort of what we've done

211
00:07:39,520 --> 00:07:41,680
for this is use internet census tools

212
00:07:41,680 --> 00:07:44,240
stuff like showdown census uh i know

213
00:07:44,240 --> 00:07:45,280
that uh

214
00:07:45,280 --> 00:07:47,520
robert 7 have like open set of data as

215
00:07:47,520 --> 00:07:50,319
well where to scan the internet and you

216
00:07:50,319 --> 00:07:51,919
get those results

217
00:07:51,919 --> 00:07:53,599
um if it's setting out on the internet

218
00:07:53,599 --> 00:07:55,120
there's probably a good chance that it's

219
00:07:55,120 --> 00:07:57,680
being indexed by google or ally you know

220
00:07:57,680 --> 00:07:59,039
so you can just kind of google it and it

221
00:07:59,039 --> 00:08:00,080
shows up

222
00:08:00,080 --> 00:08:01,680
or what's a

223
00:08:01,680 --> 00:08:03,199
slightly more experimental one you don't

224
00:08:03,199 --> 00:08:04,879
get as many hits but it still does work

225
00:08:04,879 --> 00:08:07,199
is what i call the brake force so

226
00:08:07,199 --> 00:08:08,879
whenever many companies

227
00:08:08,879 --> 00:08:10,879
will deploy something especially for

228
00:08:10,879 --> 00:08:12,960
production they'll create a certificate

229
00:08:12,960 --> 00:08:14,560
for it and like

230
00:08:14,560 --> 00:08:17,120
a sort of domain and you know it used to

231
00:08:17,120 --> 00:08:20,080
be something like argo.company.com

232
00:08:20,080 --> 00:08:21,919
you can actually just permutate a lot of

233
00:08:21,919 --> 00:08:24,240
company names and then just stick

234
00:08:24,240 --> 00:08:25,599
argo in the front of it and you'll

235
00:08:25,599 --> 00:08:27,520
actually be surprised at how many you

236
00:08:27,520 --> 00:08:30,240
can find and yeah we did find some crazy

237
00:08:30,240 --> 00:08:32,320
ones so that's that's pretty much how i

238
00:08:32,320 --> 00:08:34,159
went through finding it just

239
00:08:34,159 --> 00:08:35,839
google it

240
00:08:35,839 --> 00:08:38,159
so when going through one we find this

241
00:08:38,159 --> 00:08:39,440
like what

242
00:08:39,440 --> 00:08:41,039
so um

243
00:08:41,039 --> 00:08:42,240
to most people this might not be that

244
00:08:42,240 --> 00:08:44,480
shocking it's just some yaml but what we

245
00:08:44,480 --> 00:08:47,360
found on a few of the clusters was so

246
00:08:47,360 --> 00:08:49,040
this one in particular running for nine

247
00:08:49,040 --> 00:08:51,760
months by the time we found it was a

248
00:08:51,760 --> 00:08:53,360
axam rig

249
00:08:53,360 --> 00:08:56,000
monero cryptocurrency miner

250
00:08:56,000 --> 00:08:56,880
and

251
00:08:56,880 --> 00:08:59,279
so yeah on on a few of the clusters we

252
00:08:59,279 --> 00:09:00,399
had found that

253
00:09:00,399 --> 00:09:02,399
i guess uh fret actors whatever you want

254
00:09:02,399 --> 00:09:04,640
to call them had gone on and started

255
00:09:04,640 --> 00:09:10,240
using argo to deploy um you know

256
00:09:11,200 --> 00:09:13,680
exam rig miners across like all these

257
00:09:13,680 --> 00:09:15,519
clusters like many many different nodes

258
00:09:15,519 --> 00:09:18,240
in each cluster so that's that's the

259
00:09:18,240 --> 00:09:20,000
great part about the compute in town

260
00:09:20,000 --> 00:09:23,519
support that particular image was on

261
00:09:23,519 --> 00:09:25,279
docker help it got taken down now it had

262
00:09:25,279 --> 00:09:27,360
been used millions of times and it was

263
00:09:27,360 --> 00:09:29,440
even an azure blog for being used

264
00:09:29,440 --> 00:09:32,320
against mass attacks against

265
00:09:32,320 --> 00:09:33,920
kubernetes clusters

266
00:09:33,920 --> 00:09:35,600
and so yeah we found it quite

267
00:09:35,600 --> 00:09:36,959
interesting i wouldn't say it was fully

268
00:09:36,959 --> 00:09:38,880
wide scale across all of them it's

269
00:09:38,880 --> 00:09:39,920
almost maybe like someone was

270
00:09:39,920 --> 00:09:42,000
experimenting and had a few of them or

271
00:09:42,000 --> 00:09:43,440
else other people find it out and kind

272
00:09:43,440 --> 00:09:44,160
of

273
00:09:44,160 --> 00:09:46,000
wiped it out but yeah so we found it

274
00:09:46,000 --> 00:09:47,920
really interesting so you can on your

275
00:09:47,920 --> 00:09:50,480
workflow software you can get some

276
00:09:50,480 --> 00:09:54,800
malware as well so her next key is today

277
00:09:55,760 --> 00:09:57,839
all right so the next case study is

278
00:09:57,839 --> 00:10:00,399
airflow and airflow is the most popular

279
00:10:00,399 --> 00:10:03,360
open source workflow platforms based on

280
00:10:03,360 --> 00:10:06,800
stars in github with over 25k stars

281
00:10:06,800 --> 00:10:09,120
workflow is based on python so you can

282
00:10:09,120 --> 00:10:11,440
write your tasks using python and it

283
00:10:11,440 --> 00:10:14,399
supports multiple plugin and play

284
00:10:14,399 --> 00:10:15,920
plugins

285
00:10:15,920 --> 00:10:18,800
and the core unit sorry the core concept

286
00:10:18,800 --> 00:10:22,560
of airflow are the directed acicli graph

287
00:10:22,560 --> 00:10:25,200
so as we describe the workflows when we

288
00:10:25,200 --> 00:10:28,160
create a few tasks and we one pipe the

289
00:10:28,160 --> 00:10:29,839
information to the next one you can

290
00:10:29,839 --> 00:10:32,399
create branches and so on

291
00:10:32,399 --> 00:10:34,800
and the core unit is a task

292
00:10:34,800 --> 00:10:36,880
uh writing in python

293
00:10:36,880 --> 00:10:38,800
now your workflow is going to use

294
00:10:38,800 --> 00:10:40,959
different variables global variables and

295
00:10:40,959 --> 00:10:43,200
you can store them in a

296
00:10:43,200 --> 00:10:45,360
structure called variables

297
00:10:45,360 --> 00:10:47,440
and your workflow is probably going to

298
00:10:47,440 --> 00:10:50,079
connect to other services and databases

299
00:10:50,079 --> 00:10:53,600
and so on so to connect securely and

300
00:10:53,600 --> 00:10:55,519
store the passwords and api keys that

301
00:10:55,519 --> 00:10:57,360
you need for the connections you can use

302
00:10:57,360 --> 00:10:59,839
the connection

303
00:10:59,839 --> 00:11:02,000
and airflow supports logging mechanism

304
00:11:02,000 --> 00:11:05,440
to emit metrics and to better understand

305
00:11:05,440 --> 00:11:08,640
what is going on in your workflow

306
00:11:08,640 --> 00:11:09,600
now

307
00:11:09,600 --> 00:11:12,079
we were able to find credentials to

308
00:11:12,079 --> 00:11:15,600
these applications like aws api keys

309
00:11:15,600 --> 00:11:18,720
azure api keys paypal wallet ids and so

310
00:11:18,720 --> 00:11:19,519
on

311
00:11:19,519 --> 00:11:21,519
all in plain sight

312
00:11:21,519 --> 00:11:23,360
and just to be clear we're not saying

313
00:11:23,360 --> 00:11:25,519
that these logos are compromised who are

314
00:11:25,519 --> 00:11:28,160
saying that we find lots of credentials

315
00:11:28,160 --> 00:11:30,959
to these applications

316
00:11:30,959 --> 00:11:33,440
and these credentials were still stored

317
00:11:33,440 --> 00:11:35,920
all over the features of airflow that we

318
00:11:35,920 --> 00:11:37,279
just covered

319
00:11:37,279 --> 00:11:39,760
all in plain sight all are visible

320
00:11:39,760 --> 00:11:43,079
through the dashboards

321
00:11:43,519 --> 00:11:45,920
so to understand how we were able to see

322
00:11:45,920 --> 00:11:47,680
all this information

323
00:11:47,680 --> 00:11:48,800
we just

324
00:11:48,800 --> 00:11:50,480
access the dashboards

325
00:11:50,480 --> 00:11:52,560
and we access different tabs

326
00:11:52,560 --> 00:11:55,040
so the top play is where we were able to

327
00:11:55,040 --> 00:11:56,480
find credentials

328
00:11:56,480 --> 00:11:58,160
was in the code

329
00:11:58,160 --> 00:12:00,480
bad code practices lead to leakage of

330
00:12:00,480 --> 00:12:03,120
information

331
00:12:04,480 --> 00:12:07,040
one level of obstruction is when you put

332
00:12:07,040 --> 00:12:09,920
your api keys and credentials in the

333
00:12:09,920 --> 00:12:11,040
variables

334
00:12:11,040 --> 00:12:11,920
well

335
00:12:11,920 --> 00:12:14,079
the information is not getting encrypted

336
00:12:14,079 --> 00:12:17,519
and it's in plain sight

337
00:12:18,399 --> 00:12:21,519
and the connection structure is actually

338
00:12:21,519 --> 00:12:24,240
the one and correct place to store your

339
00:12:24,240 --> 00:12:26,720
credentials you will need to enter the

340
00:12:26,720 --> 00:12:29,200
information to the password field well

341
00:12:29,200 --> 00:12:31,440
when it will get encrypted and will not

342
00:12:31,440 --> 00:12:33,200
be in plain sight

343
00:12:33,200 --> 00:12:35,839
lots of users did the opposite thing

344
00:12:35,839 --> 00:12:37,920
when they put the information in the

345
00:12:37,920 --> 00:12:39,680
extra field where it's not getting

346
00:12:39,680 --> 00:12:42,319
encrypted

347
00:12:43,120 --> 00:12:45,519
the logging mechanism and airflow has an

348
00:12:45,519 --> 00:12:47,040
actual cv

349
00:12:47,040 --> 00:12:48,560
because when you would

350
00:12:48,560 --> 00:12:51,279
enter your credentials through the cli

351
00:12:51,279 --> 00:12:53,600
it will be get it will be

352
00:12:53,600 --> 00:12:56,480
presented in plain sight

353
00:12:56,480 --> 00:12:58,639
and if you connect to the uh using the

354
00:12:58,639 --> 00:13:00,079
password field in the connection

355
00:13:00,079 --> 00:13:02,079
structure it will be once again logged

356
00:13:02,079 --> 00:13:03,680
in the plain sight

357
00:13:03,680 --> 00:13:06,240
and this vulnerability was fixed in

358
00:13:06,240 --> 00:13:10,800
airflow version 1.10 and later

359
00:13:11,680 --> 00:13:14,320
the configuration file is created as

360
00:13:14,320 --> 00:13:16,160
soon as you create your first airflow

361
00:13:16,160 --> 00:13:17,279
instance

362
00:13:17,279 --> 00:13:19,279
and lots of users put their credentials

363
00:13:19,279 --> 00:13:21,360
in this configuration file

364
00:13:21,360 --> 00:13:22,560
now

365
00:13:22,560 --> 00:13:24,320
maybe that will be fine

366
00:13:24,320 --> 00:13:26,480
but the thing is that the configuration

367
00:13:26,480 --> 00:13:29,440
file can be stored in plain text on the

368
00:13:29,440 --> 00:13:31,680
dashboard when a certain flag is set to

369
00:13:31,680 --> 00:13:32,639
true

370
00:13:32,639 --> 00:13:35,360
so once again we will we find lots of

371
00:13:35,360 --> 00:13:39,360
credentials in the configuration file

372
00:13:40,000 --> 00:13:42,880
and the ad-hoc query uh allows you to

373
00:13:42,880 --> 00:13:44,880
run queries on whatever platform is

374
00:13:44,880 --> 00:13:47,120
connected to your workflow

375
00:13:47,120 --> 00:13:49,440
and if you're connected to a database

376
00:13:49,440 --> 00:13:52,320
anyone with access to the dashboard can

377
00:13:52,320 --> 00:13:55,839
query the database now if your dashboard

378
00:13:55,839 --> 00:13:58,079
is

379
00:13:58,800 --> 00:14:00,959
is accessible to anyone

380
00:14:00,959 --> 00:14:03,360
anyone can query your database

381
00:14:03,360 --> 00:14:06,800
so it's a very dangerous feature

382
00:14:06,800 --> 00:14:09,040
and now we're left with one question

383
00:14:09,040 --> 00:14:12,959
can we run malware and the answer is yes

384
00:14:12,959 --> 00:14:15,199
during our research we were able to find

385
00:14:15,199 --> 00:14:16,880
lots of

386
00:14:16,880 --> 00:14:19,040
container images that are publicly

387
00:14:19,040 --> 00:14:21,519
available so threat doctors could

388
00:14:21,519 --> 00:14:23,440
replace the legitimate image with a

389
00:14:23,440 --> 00:14:26,320
malicious image and when the workflow

390
00:14:26,320 --> 00:14:29,040
will be executed anyone can

391
00:14:29,040 --> 00:14:31,839
sorry everybody can uh run a malicious

392
00:14:31,839 --> 00:14:35,199
smaller amorous container

393
00:14:35,199 --> 00:14:36,160
and

394
00:14:36,160 --> 00:14:38,480
we set up a test lab in our test lab and

395
00:14:38,480 --> 00:14:40,079
airflow instance

396
00:14:40,079 --> 00:14:42,800
where we used a plugin called code

397
00:14:42,800 --> 00:14:45,440
editor that allows you to run to write

398
00:14:45,440 --> 00:14:47,279
and run python code

399
00:14:47,279 --> 00:14:50,240
and we were able to create a malicious

400
00:14:50,240 --> 00:14:52,720
container

401
00:14:54,000 --> 00:14:54,800
so

402
00:14:54,800 --> 00:14:56,480
we found lots of information that we

403
00:14:56,480 --> 00:14:58,800
were not supposed to be to see

404
00:14:58,800 --> 00:15:00,959
and it was caused by

405
00:15:00,959 --> 00:15:03,760
insecure coding practices by using the

406
00:15:03,760 --> 00:15:05,680
features in a wrong way or

407
00:15:05,680 --> 00:15:07,120
vulnerabilities

408
00:15:07,120 --> 00:15:09,760
but airflow did an excellent job on

409
00:15:09,760 --> 00:15:12,079
improving the platform and now it's up

410
00:15:12,079 --> 00:15:14,240
to the users to actually um they update

411
00:15:14,240 --> 00:15:16,880
their versions

412
00:15:17,199 --> 00:15:18,720
hobby days and library to action

413
00:15:18,720 --> 00:15:20,320
actually we're doing quite good in time

414
00:15:20,320 --> 00:15:22,079
i started laughing especially for the

415
00:15:22,079 --> 00:15:23,680
airflow um

416
00:15:23,680 --> 00:15:25,519
slides like it's just it's just a blur

417
00:15:25,519 --> 00:15:27,519
of like pixels it's like all sensitive

418
00:15:27,519 --> 00:15:30,399
information it was insane like to

419
00:15:30,399 --> 00:15:32,639
quantify how many credentials we find i

420
00:15:32,639 --> 00:15:34,079
just want to say it's on an absurd

421
00:15:34,079 --> 00:15:35,279
amount

422
00:15:35,279 --> 00:15:36,639
so

423
00:15:36,639 --> 00:15:37,839
but anyway

424
00:15:37,839 --> 00:15:40,560
um so for the protection part

425
00:15:40,560 --> 00:15:41,680
uh

426
00:15:41,680 --> 00:15:43,519
i would sum it down to one phrase really

427
00:15:43,519 --> 00:15:45,600
and it's the basics

428
00:15:45,600 --> 00:15:46,480
really

429
00:15:46,480 --> 00:15:49,920
and so the way i said that is um and i

430
00:15:49,920 --> 00:15:51,440
really want to put this point to the top

431
00:15:51,440 --> 00:15:52,399
is that

432
00:15:52,399 --> 00:15:55,360
each of these issues on their own

433
00:15:55,360 --> 00:15:57,680
might not actually be that bad but when

434
00:15:57,680 --> 00:15:59,519
you chain them all together it can be

435
00:15:59,519 --> 00:16:02,079
really really catastrophic so and like

436
00:16:02,079 --> 00:16:04,720
we like we've seen this stuff like mod

437
00:16:04,720 --> 00:16:06,639
you know you'll have someone they'll

438
00:16:06,639 --> 00:16:09,680
deploy or flow to their cloud instance

439
00:16:09,680 --> 00:16:11,680
and then maybe the one of the first

440
00:16:11,680 --> 00:16:13,199
things they do wrong is the security

441
00:16:13,199 --> 00:16:15,040
groups or the firewall rules

442
00:16:15,040 --> 00:16:17,519
as configured anyone can access so

443
00:16:17,519 --> 00:16:19,680
someone can access from the outside they

444
00:16:19,680 --> 00:16:22,480
get to your flow instance it's a

445
00:16:22,480 --> 00:16:24,560
outdated version unpatched version or

446
00:16:24,560 --> 00:16:26,519
something therefore there's no

447
00:16:26,519 --> 00:16:28,800
authentication there's no

448
00:16:28,800 --> 00:16:31,120
login whatever so they can get past that

449
00:16:31,120 --> 00:16:35,360
stage then they can get the cr code and

450
00:16:35,360 --> 00:16:37,360
the code has hardcoded the credentials

451
00:16:37,360 --> 00:16:39,680
inside that the credentials you know we

452
00:16:39,680 --> 00:16:42,000
sell a lot of uh aws

453
00:16:42,000 --> 00:16:42,959
keys

454
00:16:42,959 --> 00:16:44,639
they have like way too many permissions

455
00:16:44,639 --> 00:16:46,320
and then from that you know

456
00:16:46,320 --> 00:16:48,639
steal customer data do whatever there's

457
00:16:48,639 --> 00:16:50,800
so much sensitive information we saw so

458
00:16:50,800 --> 00:16:52,320
you know there are kind of multiple

459
00:16:52,320 --> 00:16:53,600
points along that line that you could

460
00:16:53,600 --> 00:16:54,639
have stopped that you could have done

461
00:16:54,639 --> 00:16:55,759
the permissions correct you could have

462
00:16:55,759 --> 00:16:57,120
even just done like the firewall rules

463
00:16:57,120 --> 00:16:58,560
collect but

464
00:16:58,560 --> 00:17:01,040
people just it's every step of the way

465
00:17:01,040 --> 00:17:03,199
that they will mess that up and it leads

466
00:17:03,199 --> 00:17:05,199
to something utterly catastrophic so it

467
00:17:05,199 --> 00:17:07,119
does so and not to say it's kind of like

468
00:17:07,119 --> 00:17:09,280
a lecture bsx matter secure coding

469
00:17:09,280 --> 00:17:10,319
practices

470
00:17:10,319 --> 00:17:12,880
even if you feel that you know you're

471
00:17:12,880 --> 00:17:14,160
sort of making code for something and

472
00:17:14,160 --> 00:17:15,599
you feel that no one else will ever see

473
00:17:15,599 --> 00:17:16,400
it

474
00:17:16,400 --> 00:17:18,240
you know are you sure about that because

475
00:17:18,240 --> 00:17:19,599
you know depending on how you do

476
00:17:19,599 --> 00:17:21,839
processes within your company like

477
00:17:21,839 --> 00:17:23,919
someone else could maybe mess up and

478
00:17:23,919 --> 00:17:25,679
someone else gets access to that code he

479
00:17:25,679 --> 00:17:27,359
shouldn't see that code

480
00:17:27,359 --> 00:17:29,760
and then that becomes an issue patching

481
00:17:29,760 --> 00:17:31,520
updating you know what's really really

482
00:17:31,520 --> 00:17:33,280
nice with um both of these that we've

483
00:17:33,280 --> 00:17:36,080
shown on other uh softwares as well you

484
00:17:36,080 --> 00:17:37,760
know they have

485
00:17:37,760 --> 00:17:39,679
like uh airflow itself has something

486
00:17:39,679 --> 00:17:40,720
like

487
00:17:40,720 --> 00:17:42,880
three thousand contributors you know it

488
00:17:42,880 --> 00:17:45,120
is being updated all the time and you

489
00:17:45,120 --> 00:17:47,039
see that but like version two it's so

490
00:17:47,039 --> 00:17:48,799
much more secure they even have like a

491
00:17:48,799 --> 00:17:50,880
security tab now when you go in with

492
00:17:50,880 --> 00:17:53,280
like permissions control so update that

493
00:17:53,280 --> 00:17:55,520
get rid of like the cvs and all

494
00:17:55,520 --> 00:17:57,600
um secure configuration

495
00:17:57,600 --> 00:17:58,720
just sort of goes about saying

496
00:17:58,720 --> 00:17:59,679
especially if you're going to use

497
00:17:59,679 --> 00:18:01,039
someone within

498
00:18:01,039 --> 00:18:02,240
production

499
00:18:02,240 --> 00:18:03,679
you know they're sure that the

500
00:18:03,679 --> 00:18:05,039
configuration that you've said that is

501
00:18:05,039 --> 00:18:07,039
actually good

502
00:18:07,039 --> 00:18:10,320
um permissions yeah use the principle of

503
00:18:10,320 --> 00:18:12,000
least privilege you know you don't need

504
00:18:12,000 --> 00:18:14,960
to give the intern kind of god mode for

505
00:18:14,960 --> 00:18:17,200
your hey oas clyde you know again i've

506
00:18:17,200 --> 00:18:19,520
seen it happen before it's very common

507
00:18:19,520 --> 00:18:22,320
and the word for party plugins so you

508
00:18:22,320 --> 00:18:24,320
know i really like the nice example of

509
00:18:24,320 --> 00:18:26,799
that there's a code editor um for

510
00:18:26,799 --> 00:18:28,960
airflow usually you submit you know you

511
00:18:28,960 --> 00:18:30,799
can submit the code via

512
00:18:30,799 --> 00:18:32,559
like the cli tool but they're like no

513
00:18:32,559 --> 00:18:35,280
let's put it into the server and so

514
00:18:35,280 --> 00:18:37,280
whilst that third party plug-in it might

515
00:18:37,280 --> 00:18:38,480
be

516
00:18:38,480 --> 00:18:40,160
useful for you it could also be useful

517
00:18:40,160 --> 00:18:41,360
for

518
00:18:41,360 --> 00:18:43,120
an attacker as well and you can also

519
00:18:43,120 --> 00:18:46,080
actually introduce more sort of

520
00:18:46,080 --> 00:18:47,679
vulnerabilities than that you know if

521
00:18:47,679 --> 00:18:50,160
you think about it um the plug-in is

522
00:18:50,160 --> 00:18:51,440
being

523
00:18:51,440 --> 00:18:52,880
uh

524
00:18:52,880 --> 00:18:55,280
it's being made you know in a separate

525
00:18:55,280 --> 00:18:58,000
repository from the main run so like the

526
00:18:58,000 --> 00:19:00,240
the maintenance of them are not in par

527
00:19:00,240 --> 00:19:02,000
with each other so

528
00:19:02,000 --> 00:19:04,640
yeah beware third party plugins and i

529
00:19:04,640 --> 00:19:06,559
always wanted a full slide for this next

530
00:19:06,559 --> 00:19:08,880
build point the default configuration

531
00:19:08,880 --> 00:19:10,960
does not equal the secure configuration

532
00:19:10,960 --> 00:19:12,320
so if you're going to put something in

533
00:19:12,320 --> 00:19:14,320
the production and do the you know the

534
00:19:14,320 --> 00:19:16,880
quick start sort of thing that's that's

535
00:19:16,880 --> 00:19:18,960
probably not a good way to go again if

536
00:19:18,960 --> 00:19:21,039
right time you see like kubernetes gets

537
00:19:21,039 --> 00:19:22,880
more secure our flows get more secure

538
00:19:22,880 --> 00:19:24,480
argo as well

539
00:19:24,480 --> 00:19:26,480
over time it does get more secure but

540
00:19:26,480 --> 00:19:27,280
you know

541
00:19:27,280 --> 00:19:29,120
whatever that you're deploying millions

542
00:19:29,120 --> 00:19:31,200
of things the default configuration is

543
00:19:31,200 --> 00:19:34,000
not always secure just think about that

544
00:19:34,000 --> 00:19:35,039
and

545
00:19:35,039 --> 00:19:37,280
last but not least the documentation is

546
00:19:37,280 --> 00:19:39,360
your friend again for each one of these

547
00:19:39,360 --> 00:19:41,440
on more products there is a security

548
00:19:41,440 --> 00:19:43,760
page that is dedicated specifically for

549
00:19:43,760 --> 00:19:45,760
our product and genuinely read it

550
00:19:45,760 --> 00:19:47,520
because it's got some really good advice

551
00:19:47,520 --> 00:19:49,039
so it does you know you might actually

552
00:19:49,039 --> 00:19:50,160
understand

553
00:19:50,160 --> 00:19:51,280
what's going on

554
00:19:51,280 --> 00:19:53,600
and uh i'm going to leave with some open

555
00:19:53,600 --> 00:19:56,000
source tills um

556
00:19:56,000 --> 00:19:57,760
i'm i'm not really going to go for any

557
00:19:57,760 --> 00:20:00,320
uh all of these you know you can sort

558
00:20:00,320 --> 00:20:02,320
out or take a photo but a couple ones

559
00:20:02,320 --> 00:20:04,320
that i really want to point out um the

560
00:20:04,320 --> 00:20:06,799
get secrets one is fantastic it'll stop

561
00:20:06,799 --> 00:20:08,400
you from committing

562
00:20:08,400 --> 00:20:11,280
uh any credentials to your code so it'll

563
00:20:11,280 --> 00:20:12,720
sort of scream at you if you try to do

564
00:20:12,720 --> 00:20:15,200
that um clay custodian is a really

565
00:20:15,200 --> 00:20:16,400
really good one

566
00:20:16,400 --> 00:20:17,360
um

567
00:20:17,360 --> 00:20:19,760
you develop

568
00:20:19,760 --> 00:20:21,760
sort of policies within yaml files as

569
00:20:21,760 --> 00:20:23,280
well and then you can run that with sort

570
00:20:23,280 --> 00:20:25,440
of aws lambda or cloud functions

571
00:20:25,440 --> 00:20:27,760
whatever cloud you're using and then you

572
00:20:27,760 --> 00:20:29,200
can find the

573
00:20:29,200 --> 00:20:32,720
violations of that and i like

574
00:20:32,720 --> 00:20:35,600
the magpie project as well it's really

575
00:20:35,600 --> 00:20:37,520
good especially if you want to

576
00:20:37,520 --> 00:20:39,200
find what's exposed and all you know

577
00:20:39,200 --> 00:20:40,960
i've had my season come to me and go you

578
00:20:40,960 --> 00:20:42,400
know what's our exposure in our cloud

579
00:20:42,400 --> 00:20:43,520
environments

580
00:20:43,520 --> 00:20:45,679
i don't know like we've got a lot of

581
00:20:45,679 --> 00:20:47,760
stuff up there so that'll really help

582
00:20:47,760 --> 00:20:49,760
you defined stuff

583
00:20:49,760 --> 00:20:52,400
and pretty much we're about the 20

584
00:20:52,400 --> 00:20:54,880
minute work and we can go for questions

585
00:20:54,880 --> 00:20:57,039
there's two of the blogs that we wrote

586
00:20:57,039 --> 00:20:59,919
on i assume the left one is

587
00:20:59,919 --> 00:21:02,559
um yeah oh yeah so that's the argo one

588
00:21:02,559 --> 00:21:05,120
and that's the airflow one and there's a

589
00:21:05,120 --> 00:21:06,960
lot sort of more

590
00:21:06,960 --> 00:21:09,120
screenshots in all so yeah with

591
00:21:09,120 --> 00:21:10,799
uh that's also up to 20 minutes any

592
00:21:10,799 --> 00:21:13,360
questions from anyone oh thank you very

593
00:21:13,360 --> 00:21:17,240
much thank you

594
00:21:20,480 --> 00:21:21,840
that's about to say if anyone puts up

595
00:21:21,840 --> 00:21:24,799
their hands i really can't say

596
00:21:27,520 --> 00:21:28,799
you can also post your questions on

597
00:21:28,799 --> 00:21:30,799
slido

598
00:21:30,799 --> 00:21:33,200
hashtag besides

599
00:21:33,200 --> 00:21:35,440
okay

600
00:21:42,799 --> 00:21:45,120
how many

601
00:21:46,320 --> 00:21:48,000
most of the containers

602
00:21:48,000 --> 00:21:51,120
most of the instances were version one

603
00:21:51,120 --> 00:21:54,400
and as we continued our research we saw

604
00:21:54,400 --> 00:21:56,400
more version two but most of them are

605
00:21:56,400 --> 00:21:58,960
version ones yeah especially when i came

606
00:21:58,960 --> 00:22:00,559
that you can sort of tell there's a lot

607
00:22:00,559 --> 00:22:02,320
of version two out there but they're not

608
00:22:02,320 --> 00:22:03,919
necessarily exposed it's like you hit

609
00:22:03,919 --> 00:22:06,880
the login page for it so whenever km2

610
00:22:06,880 --> 00:22:09,520
misconfigured airflows i would honestly

611
00:22:09,520 --> 00:22:12,320
say about 95 of them were version one

612
00:22:12,320 --> 00:22:13,760
and then there was about five percent

613
00:22:13,760 --> 00:22:15,760
version two where even though it comes

614
00:22:15,760 --> 00:22:17,200
more secure out of the box they still

615
00:22:17,200 --> 00:22:19,280
somehow manage to misconfigure it it's

616
00:22:19,280 --> 00:22:21,039
almost like you have to actively kind of

617
00:22:21,039 --> 00:22:23,919
sabotage version two to make it

618
00:22:23,919 --> 00:22:26,640
yeah but people did the major thing in

619
00:22:26,640 --> 00:22:29,520
version 2 is that they added uh enforced

620
00:22:29,520 --> 00:22:30,559
login

621
00:22:30,559 --> 00:22:33,200
so you can just access anything without

622
00:22:33,200 --> 00:22:35,200
logging your authentication

623
00:22:35,200 --> 00:22:37,120
um so yeah

624
00:22:37,120 --> 00:22:39,520
yeah so i guess the fact that most most

625
00:22:39,520 --> 00:22:41,200
of the exposed zones we find were

626
00:22:41,200 --> 00:22:42,960
version one it's a really good way to

627
00:22:42,960 --> 00:22:44,640
say yeah like

628
00:22:44,640 --> 00:22:46,000
update your stuff

629
00:22:46,000 --> 00:22:48,320
you know

630
00:22:49,440 --> 00:22:52,840
anyone else

631
00:22:56,480 --> 00:22:59,320
no it sounds worse thank you very much

632
00:22:59,320 --> 00:23:04,629
[Applause]

