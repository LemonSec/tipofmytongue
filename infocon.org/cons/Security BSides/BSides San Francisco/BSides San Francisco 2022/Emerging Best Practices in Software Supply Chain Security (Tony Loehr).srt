1
00:00:00,799 --> 00:00:01,599
hi

2
00:00:01,599 --> 00:00:03,520
how's everyone doing

3
00:00:03,520 --> 00:00:04,960
sorry to keep you all waiting anyways

4
00:00:04,960 --> 00:00:06,799
i'll get right into it um today i'm

5
00:00:06,799 --> 00:00:08,960
giving a presentation on the uh google

6
00:00:08,960 --> 00:00:11,679
salsa and nist ssdf supply chain or

7
00:00:11,679 --> 00:00:13,120
correction software supply chain

8
00:00:13,120 --> 00:00:14,160
frameworks

9
00:00:14,160 --> 00:00:15,679
and we are going to uh together

10
00:00:15,679 --> 00:00:18,160
construct a road map on how to actually

11
00:00:18,160 --> 00:00:21,119
utilize these frameworks to uh create a

12
00:00:21,119 --> 00:00:24,320
complete best practices guide so let's

13
00:00:24,320 --> 00:00:26,480
uh just hop right into it um first

14
00:00:26,480 --> 00:00:29,119
question is why do we need new uh appsec

15
00:00:29,119 --> 00:00:32,079
uh security uh frameworks the answer is

16
00:00:32,079 --> 00:00:34,640
attackers are shifting priorities from

17
00:00:34,640 --> 00:00:36,800
uh production apps to software delivery

18
00:00:36,800 --> 00:00:38,719
pipelines and the developers of your

19
00:00:38,719 --> 00:00:40,719
applications software supply chain

20
00:00:40,719 --> 00:00:42,480
attacks are on the rise i don't think i

21
00:00:42,480 --> 00:00:44,239
need to explain solar winds to anyone

22
00:00:44,239 --> 00:00:45,760
who came to this talk

23
00:00:45,760 --> 00:00:49,440
um nor code cove the cassaya attack or

24
00:00:49,440 --> 00:00:51,920
xcode spy but there's been plenty of

25
00:00:51,920 --> 00:00:54,000
other attacks and they're certainly

26
00:00:54,000 --> 00:00:56,640
increasing in frequency

27
00:00:56,640 --> 00:00:59,840
by 2025 gartner predicts that 45 of

28
00:00:59,840 --> 00:01:02,000
organizations worldwide will have

29
00:01:02,000 --> 00:01:03,760
experienced attacks on their software

30
00:01:03,760 --> 00:01:05,840
supply chains which is a three-fold

31
00:01:05,840 --> 00:01:08,240
increase from last year

32
00:01:08,240 --> 00:01:09,760
the first framework that we are going to

33
00:01:09,760 --> 00:01:13,119
get into is the nist ssdf

34
00:01:13,119 --> 00:01:15,920
now the nest ssdf is a recently

35
00:01:15,920 --> 00:01:18,159
announced framework that uh pulls a lot

36
00:01:18,159 --> 00:01:20,880
of inspiration from owasp's sam and it

37
00:01:20,880 --> 00:01:22,720
also lists gartner the white house and

38
00:01:22,720 --> 00:01:24,960
the department of defense as general

39
00:01:24,960 --> 00:01:27,839
resources

40
00:01:30,000 --> 00:01:31,600
uh the reason why this framework was

41
00:01:31,600 --> 00:01:34,000
actually created was in results of a

42
00:01:34,000 --> 00:01:36,320
presidential executive order um from

43
00:01:36,320 --> 00:01:38,640
midway last year

44
00:01:38,640 --> 00:01:40,880
this order was uh announced in response

45
00:01:40,880 --> 00:01:43,439
to the colonial pipeline attack and was

46
00:01:43,439 --> 00:01:45,840
specifically designed to harden actual

47
00:01:45,840 --> 00:01:48,799
infrastructure but since it has uh since

48
00:01:48,799 --> 00:01:50,960
its announcement it has been extended to

49
00:01:50,960 --> 00:01:53,840
uh cover other particular aspects

50
00:01:53,840 --> 00:01:55,759
particularly software supply chain

51
00:01:55,759 --> 00:01:57,680
security the development of commercial

52
00:01:57,680 --> 00:02:00,000
software often lacks transparency

53
00:02:00,000 --> 00:02:02,079
sufficient focus on the ability of

54
00:02:02,079 --> 00:02:04,799
software to resist attack and adequate

55
00:02:04,799 --> 00:02:06,560
controls to prevent tampering by

56
00:02:06,560 --> 00:02:08,959
malicious actors ultimately

57
00:02:08,959 --> 00:02:10,160
applications just don't have the

58
00:02:10,160 --> 00:02:13,040
visibility into what they actually have

59
00:02:13,040 --> 00:02:14,720
within them

60
00:02:14,720 --> 00:02:17,280
and of course

61
00:02:17,360 --> 00:02:20,319
anti-security thrives in a world where

62
00:02:20,319 --> 00:02:22,560
there is no visibility um the nest

63
00:02:22,560 --> 00:02:23,599
executive

64
00:02:23,599 --> 00:02:26,319
order has been following this timeline

65
00:02:26,319 --> 00:02:28,080
we've since

66
00:02:28,080 --> 00:02:30,480
seen an actual ioc framework announced

67
00:02:30,480 --> 00:02:32,480
in direct response to this

68
00:02:32,480 --> 00:02:34,480
we've seen additional guidelines

69
00:02:34,480 --> 00:02:36,959
surrounding the specific aspects which

70
00:02:36,959 --> 00:02:38,400
this framework covers

71
00:02:38,400 --> 00:02:40,160
and uh since

72
00:02:40,160 --> 00:02:41,680
its announcement we've actually seen a

73
00:02:41,680 --> 00:02:44,239
final version of the uh nist ssdf

74
00:02:44,239 --> 00:02:47,840
announced uh v 1.1

75
00:02:47,840 --> 00:02:50,480
and critical software as defined by by

76
00:02:50,480 --> 00:02:52,000
nist includes

77
00:02:52,000 --> 00:02:54,000
software that is uh created and

78
00:02:54,000 --> 00:02:55,440
maintained by

79
00:02:55,440 --> 00:02:57,920
federal organizations federal agencies

80
00:02:57,920 --> 00:03:00,080
and other critical infrastructure this

81
00:03:00,080 --> 00:03:02,879
can include health care this can include

82
00:03:02,879 --> 00:03:04,560
electricity this can include water

83
00:03:04,560 --> 00:03:07,200
resources

84
00:03:07,280 --> 00:03:08,239
uh

85
00:03:08,239 --> 00:03:10,560
yeah and uh nist is to publish security

86
00:03:10,560 --> 00:03:13,200
measure guidance by july 11th

87
00:03:13,200 --> 00:03:14,800
they'll be consulting with the office of

88
00:03:14,800 --> 00:03:16,560
management and budget cyber security

89
00:03:16,560 --> 00:03:18,480
infrastructure security agency

90
00:03:18,480 --> 00:03:20,480
and these guidelines will help outline

91
00:03:20,480 --> 00:03:24,080
security measures for critical software

92
00:03:24,080 --> 00:03:26,480
the nist ss

93
00:03:26,480 --> 00:03:30,159
correction the sscs

94
00:03:30,640 --> 00:03:32,799
directs um

95
00:03:32,799 --> 00:03:35,680
direct organizations to utilize the uh

96
00:03:35,680 --> 00:03:37,840
secure software development framework

97
00:03:37,840 --> 00:03:39,840
uh as defined here

98
00:03:39,840 --> 00:03:41,680
i'm gonna skip over some of this for

99
00:03:41,680 --> 00:03:43,599
sake of time because ultimately this is

100
00:03:43,599 --> 00:03:45,920
extraneous but i know a lot of people in

101
00:03:45,920 --> 00:03:48,400
here are probably interested in iot

102
00:03:48,400 --> 00:03:51,280
um part of the nest ssdf actually covers

103
00:03:51,280 --> 00:03:53,599
uh internet of things and other

104
00:03:53,599 --> 00:03:54,560
um

105
00:03:54,560 --> 00:03:56,000
potential uh

106
00:03:56,000 --> 00:03:57,519
accessories that could have access to

107
00:03:57,519 --> 00:03:59,360
critical infrastructure

108
00:03:59,360 --> 00:04:01,680
ultimately the one of the main takeaways

109
00:04:01,680 --> 00:04:02,799
from this

110
00:04:02,799 --> 00:04:06,560
ssdf is the five objectives which

111
00:04:06,560 --> 00:04:08,799
include protecting the executive order

112
00:04:08,799 --> 00:04:10,640
critical software from unauthorized

113
00:04:10,640 --> 00:04:12,840
access and usage protecting the

114
00:04:12,840 --> 00:04:14,400
confidentiality

115
00:04:14,400 --> 00:04:16,798
and availability of the data used within

116
00:04:16,798 --> 00:04:19,600
these resources identifying the exact

117
00:04:19,600 --> 00:04:21,519
dependencies used within this software

118
00:04:21,519 --> 00:04:23,919
we've heard the term s-bomb used

119
00:04:23,919 --> 00:04:25,440
quite a lot recently especially in the

120
00:04:25,440 --> 00:04:26,880
world of aptek

121
00:04:26,880 --> 00:04:29,680
and ultimately the goal of that is just

122
00:04:29,680 --> 00:04:31,680
to uh produce a software bill of

123
00:04:31,680 --> 00:04:33,520
materials that enumerates all of your

124
00:04:33,520 --> 00:04:35,840
dependencies you can't really secure

125
00:04:35,840 --> 00:04:38,240
what you uh aren't aware you have and

126
00:04:38,240 --> 00:04:40,000
i've probably thrown the statistic out

127
00:04:40,000 --> 00:04:42,639
to a few of you that i've talked to but

128
00:04:42,639 --> 00:04:45,919
80 corrections 70 to 80 percent of all

129
00:04:45,919 --> 00:04:49,280
breaches that occur are caused by a

130
00:04:49,280 --> 00:04:51,040
known vulnerability that has gone

131
00:04:51,040 --> 00:04:53,120
unpatched which

132
00:04:53,120 --> 00:04:55,520
to rephrase means that 70 to 80 percent

133
00:04:55,520 --> 00:04:57,440
of all bridges could have been prevented

134
00:04:57,440 --> 00:04:59,280
by individuals keeping their uh

135
00:04:59,280 --> 00:05:01,199
dependencies updated

136
00:05:01,199 --> 00:05:03,440
um objective four includes rapid

137
00:05:03,440 --> 00:05:05,039
response which involves quickly

138
00:05:05,039 --> 00:05:06,880
detecting responding to and recovering

139
00:05:06,880 --> 00:05:09,039
from threats and incidents a lot of that

140
00:05:09,039 --> 00:05:11,199
just goes back to basic planning and

141
00:05:11,199 --> 00:05:13,919
objective five is training which is

142
00:05:13,919 --> 00:05:16,000
ensuring that the most important part of

143
00:05:16,000 --> 00:05:18,080
your organization which is the people

144
00:05:18,080 --> 00:05:20,160
involved in it understand

145
00:05:20,160 --> 00:05:22,400
the priorities in terms of security that

146
00:05:22,400 --> 00:05:25,280
your organization has

147
00:05:25,280 --> 00:05:26,960
an additional thing that the ssdf

148
00:05:26,960 --> 00:05:30,320
produces is a risk severity schema

149
00:05:30,320 --> 00:05:32,160
you can read through most of

150
00:05:32,160 --> 00:05:33,600
most of this on your own time i think

151
00:05:33,600 --> 00:05:35,199
the slides are available

152
00:05:35,199 --> 00:05:38,160
but the one of the keys is that anything

153
00:05:38,160 --> 00:05:40,800
above significant risk

154
00:05:40,800 --> 00:05:41,680
has

155
00:05:41,680 --> 00:05:44,720
a mandatory reporting

156
00:05:44,720 --> 00:05:46,560
required which is designed to help

157
00:05:46,560 --> 00:05:47,840
prevent

158
00:05:47,840 --> 00:05:50,320
vulnerabilities from going unchecked

159
00:05:50,320 --> 00:05:51,600
because

160
00:05:51,600 --> 00:05:52,960
as we've seen with incidents such as

161
00:05:52,960 --> 00:05:55,680
log4j if one organization is affected by

162
00:05:55,680 --> 00:05:58,720
dependency uh breach chances are others

163
00:05:58,720 --> 00:06:02,639
uh might be affected similarly

164
00:06:04,160 --> 00:06:06,160
and we can skip over that so the key

165
00:06:06,160 --> 00:06:09,039
practices of the ssdf come down to

166
00:06:09,039 --> 00:06:11,280
preparing the organization protecting

167
00:06:11,280 --> 00:06:13,280
the software of your organization

168
00:06:13,280 --> 00:06:15,680
producing well-secured software that has

169
00:06:15,680 --> 00:06:16,960
undergone

170
00:06:16,960 --> 00:06:18,800
vetting and

171
00:06:18,800 --> 00:06:20,560
other checks and responding to

172
00:06:20,560 --> 00:06:22,000
vulnerabilities

173
00:06:22,000 --> 00:06:24,319
in a uh

174
00:06:24,319 --> 00:06:26,639
in a uh um

175
00:06:26,639 --> 00:06:28,240
sufficient amount of time you don't

176
00:06:28,240 --> 00:06:30,880
waste time responding to vulnerabilities

177
00:06:30,880 --> 00:06:32,960
i don't think i need to explain that one

178
00:06:32,960 --> 00:06:35,680
uh moving on to the google salsa the

179
00:06:35,680 --> 00:06:38,319
google salsa framework was uh released

180
00:06:38,319 --> 00:06:42,560
early last year and it was created as a

181
00:06:42,560 --> 00:06:45,680
a sequel to binary authorization for

182
00:06:45,680 --> 00:06:47,919
borg which is a bit of a ridiculous name

183
00:06:47,919 --> 00:06:50,319
but it's uh google's internal standard

184
00:06:50,319 --> 00:06:51,599
that they've been using for quite a

185
00:06:51,599 --> 00:06:53,440
while and i

186
00:06:53,440 --> 00:06:55,280
i should probably update this

187
00:06:55,280 --> 00:06:57,520
salsa has moved away from using google

188
00:06:57,520 --> 00:06:59,759
and they've moved towards using openssf

189
00:06:59,759 --> 00:07:00,720
which is

190
00:07:00,720 --> 00:07:02,720
an organization that uh their main

191
00:07:02,720 --> 00:07:04,160
purpose is

192
00:07:04,160 --> 00:07:06,240
uh helping uh secure open source

193
00:07:06,240 --> 00:07:09,280
software moving on though

194
00:07:09,280 --> 00:07:12,880
google salsa entails different levels

195
00:07:12,880 --> 00:07:15,280
and these different levels correspond to

196
00:07:15,280 --> 00:07:19,680
different rigor of cyber security

197
00:07:19,680 --> 00:07:21,599
google salsa level one is pretty much no

198
00:07:21,599 --> 00:07:23,520
guarantees there really

199
00:07:23,520 --> 00:07:25,599
isn't any guarantee of uh source or

200
00:07:25,599 --> 00:07:26,880
build security

201
00:07:26,880 --> 00:07:28,560
level one though

202
00:07:28,560 --> 00:07:30,720
um entails the build process being fully

203
00:07:30,720 --> 00:07:34,080
scripted and able to generate provenance

204
00:07:34,080 --> 00:07:34,960
um

205
00:07:34,960 --> 00:07:36,880
salsa level two requires using version

206
00:07:36,880 --> 00:07:39,440
control and hosted build services that

207
00:07:39,440 --> 00:07:41,680
generate authenticated provenance this

208
00:07:41,680 --> 00:07:44,240
helps mitigate some risks inherent to uh

209
00:07:44,240 --> 00:07:46,800
human tampering or potentially uh

210
00:07:46,800 --> 00:07:48,639
malicious behaviors

211
00:07:48,639 --> 00:07:50,800
uh salsa level three entails the source

212
00:07:50,800 --> 00:07:52,560
and build platforms meeting specific

213
00:07:52,560 --> 00:07:54,960
standards to guarantee the availability

214
00:07:54,960 --> 00:07:57,360
of the source and the integrity of the

215
00:07:57,360 --> 00:07:59,360
governance or correction provenance

216
00:07:59,360 --> 00:08:02,080
respectively

217
00:08:02,240 --> 00:08:04,479
and salsa level four is the highest

218
00:08:04,479 --> 00:08:06,800
rigor of cyber security according to the

219
00:08:06,800 --> 00:08:09,120
salsa framework this requires two-person

220
00:08:09,120 --> 00:08:11,360
review of all changes and a hermetic

221
00:08:11,360 --> 00:08:13,840
reproducible build process which is

222
00:08:13,840 --> 00:08:15,599
another way of saying you need to have

223
00:08:15,599 --> 00:08:17,840
oversight over all changes that go into

224
00:08:17,840 --> 00:08:19,759
your code base and you need to make sure

225
00:08:19,759 --> 00:08:22,000
that your build isn't dependent on

226
00:08:22,000 --> 00:08:23,520
humans

227
00:08:23,520 --> 00:08:25,280
inputting anything that could possibly

228
00:08:25,280 --> 00:08:28,638
result in error later

229
00:08:35,919 --> 00:08:37,440
i find that this is a pretty good model

230
00:08:37,440 --> 00:08:38,240
for

231
00:08:38,240 --> 00:08:40,958
demonstrating the different places that

232
00:08:40,958 --> 00:08:43,360
vulnerabilities can enter into your

233
00:08:43,360 --> 00:08:46,399
source build packaging use

234
00:08:46,399 --> 00:08:48,080
and it should be noted

235
00:08:48,080 --> 00:08:50,160
that this chain exists within all

236
00:08:50,160 --> 00:08:54,000
dependencies as well recursively

237
00:08:54,000 --> 00:08:55,519
there are five categories of salsa

238
00:08:55,519 --> 00:08:58,640
requirements build source provenance

239
00:08:58,640 --> 00:09:00,480
provenance content and common

240
00:09:00,480 --> 00:09:03,120
requirements

241
00:09:04,160 --> 00:09:06,800
first is source requirements

242
00:09:06,800 --> 00:09:08,560
this entails the application being

243
00:09:08,560 --> 00:09:10,320
version controlled having verified

244
00:09:10,320 --> 00:09:13,120
history being retained indefinitely or

245
00:09:13,120 --> 00:09:15,120
at least for a certain period of time

246
00:09:15,120 --> 00:09:17,440
and uh two person reviewed it's over

247
00:09:17,440 --> 00:09:20,080
there by the way

248
00:09:20,839 --> 00:09:22,560
um

249
00:09:22,560 --> 00:09:24,959
let's see in terms of build um this in

250
00:09:24,959 --> 00:09:25,839
terms

251
00:09:25,839 --> 00:09:27,519
this entails having a scripted build

252
00:09:27,519 --> 00:09:30,240
that is reproducible able to

253
00:09:30,240 --> 00:09:31,279
uh

254
00:09:31,279 --> 00:09:34,399
be created a theme early um and also

255
00:09:34,399 --> 00:09:36,959
isolated so that it doesn't affect other

256
00:09:36,959 --> 00:09:38,160
environments and so that other

257
00:09:38,160 --> 00:09:40,160
environments don't affect it

258
00:09:40,160 --> 00:09:42,480
this for example could uh entail

259
00:09:42,480 --> 00:09:43,920
creating a

260
00:09:43,920 --> 00:09:46,720
build test environment a build source

261
00:09:46,720 --> 00:09:48,480
environment a build production

262
00:09:48,480 --> 00:09:49,920
environment ultimately you want to be

263
00:09:49,920 --> 00:09:51,200
able to separate out your different

264
00:09:51,200 --> 00:09:53,040
environments

265
00:09:53,040 --> 00:09:55,120
and you also want it to be reproducible

266
00:09:55,120 --> 00:09:57,360
because chances are if your application

267
00:09:57,360 --> 00:09:59,760
isn't or your build is not reproducible

268
00:09:59,760 --> 00:10:01,279
certain errors can be introduced it

269
00:10:01,279 --> 00:10:04,240
should be noted that this is not a salsa

270
00:10:04,240 --> 00:10:07,040
requirement though

271
00:10:07,279 --> 00:10:09,040
i don't think i need to explain all of

272
00:10:09,040 --> 00:10:10,640
this

273
00:10:10,640 --> 00:10:12,320
uh let's move on directly to the key

274
00:10:12,320 --> 00:10:14,240
learnings of the nes ssdf and google

275
00:10:14,240 --> 00:10:17,200
salsa the sscf focuses more on what

276
00:10:17,200 --> 00:10:19,760
whereas salsa focuses on how a way i

277
00:10:19,760 --> 00:10:22,240
like to articulate this is that ssdf is

278
00:10:22,240 --> 00:10:23,200
much more

279
00:10:23,200 --> 00:10:25,200
descriptive of the security practices

280
00:10:25,200 --> 00:10:27,760
whereas salsa is much more prescriptive

281
00:10:27,760 --> 00:10:29,440
of what you should do to secure your

282
00:10:29,440 --> 00:10:31,279
software

283
00:10:31,279 --> 00:10:32,880
and as such they are complementary

284
00:10:32,880 --> 00:10:34,800
frameworks

285
00:10:34,800 --> 00:10:36,959
they also uh both have concepts of tiers

286
00:10:36,959 --> 00:10:39,120
versus levels with higher levels and

287
00:10:39,120 --> 00:10:41,760
tiers uh corresponding to higher

288
00:10:41,760 --> 00:10:45,200
um guarantees of security

289
00:10:45,200 --> 00:10:47,920
um nist recommends a review for

290
00:10:47,920 --> 00:10:50,800
hard-coded secrets

291
00:10:50,800 --> 00:10:53,920
let's see both of them uh

292
00:10:53,920 --> 00:10:56,160
require uh utilizing um

293
00:10:56,160 --> 00:10:58,880
or question enforcing security policy uh

294
00:10:58,880 --> 00:11:00,800
consistently in other words having

295
00:11:00,800 --> 00:11:02,240
strong governance of your security

296
00:11:02,240 --> 00:11:04,000
policy

297
00:11:04,000 --> 00:11:05,839
they also suggest to detect and

298
00:11:05,839 --> 00:11:08,079
remediate misconfigurations as they're

299
00:11:08,079 --> 00:11:09,920
occurring for example configuration

300
00:11:09,920 --> 00:11:12,320
drift for those of you use terraform in

301
00:11:12,320 --> 00:11:14,320
your environments

302
00:11:14,320 --> 00:11:16,079
and additionally reducing

303
00:11:16,079 --> 00:11:18,640
code tampering risk which

304
00:11:18,640 --> 00:11:21,120
entails requiring a two-person review

305
00:11:21,120 --> 00:11:23,200
using hermetic builds and utilizing code

306
00:11:23,200 --> 00:11:24,720
signing

307
00:11:24,720 --> 00:11:26,640
even as complementary frameworks though

308
00:11:26,640 --> 00:11:28,560
they these two frameworks don't cover

309
00:11:28,560 --> 00:11:30,560
everything and there are some gaps

310
00:11:30,560 --> 00:11:31,760
some gaps

311
00:11:31,760 --> 00:11:33,760
include identifying suspicious behavior

312
00:11:33,760 --> 00:11:36,399
and code leaks for example a developer

313
00:11:36,399 --> 00:11:38,000
just put in their two weeks notice a

314
00:11:38,000 --> 00:11:39,760
couple weeks ago suddenly they're

315
00:11:39,760 --> 00:11:41,760
cloning a lot of repositories chances

316
00:11:41,760 --> 00:11:43,519
are you'd probably want to notice that

317
00:11:43,519 --> 00:11:44,560
or

318
00:11:44,560 --> 00:11:46,160
at least flag it doesn't necessarily

319
00:11:46,160 --> 00:11:48,240
imply guilt but

320
00:11:48,240 --> 00:11:50,000
it could

321
00:11:50,000 --> 00:11:51,519
additionally you want to slow down

322
00:11:51,519 --> 00:11:54,079
attackers with each layer of protection

323
00:11:54,079 --> 00:11:56,320
this comes back to least privileged

324
00:11:56,320 --> 00:11:57,760
access

325
00:11:57,760 --> 00:12:00,000
additionally you want to perform anomaly

326
00:12:00,000 --> 00:12:02,480
detection which helps prevent any sort

327
00:12:02,480 --> 00:12:05,360
of anomalies um from going undetected as

328
00:12:05,360 --> 00:12:07,120
i described before

329
00:12:07,120 --> 00:12:09,839
um and these this usually comes from

330
00:12:09,839 --> 00:12:11,839
multiple different sources the main way

331
00:12:11,839 --> 00:12:13,279
that you can actually perform anomaly

332
00:12:13,279 --> 00:12:14,320
detection

333
00:12:14,320 --> 00:12:16,480
effectively is by comparing data from

334
00:12:16,480 --> 00:12:18,000
multiple sources in your software

335
00:12:18,000 --> 00:12:20,079
development life cycle as this helps

336
00:12:20,079 --> 00:12:21,839
prevent

337
00:12:21,839 --> 00:12:23,279
potential tampering from slipping

338
00:12:23,279 --> 00:12:25,680
through

339
00:12:25,680 --> 00:12:28,720
i have a description of all these uh

340
00:12:28,720 --> 00:12:30,720
frameworks and more in pretty explicit

341
00:12:30,720 --> 00:12:32,240
detail

342
00:12:32,240 --> 00:12:34,399
on scicode's website

343
00:12:34,399 --> 00:12:36,560
um yeah and this page should be live now

344
00:12:36,560 --> 00:12:38,639
let me know if it doesn't work uh and

345
00:12:38,639 --> 00:12:40,480
yeah sorry i had to rush out a little

346
00:12:40,480 --> 00:12:42,240
bit but uh yeah we should have like a

347
00:12:42,240 --> 00:12:44,000
minute or two for q a if anyone has any

348
00:12:44,000 --> 00:12:47,000
questions

349
00:12:48,270 --> 00:12:55,259
[Applause]

350
00:13:00,800 --> 00:13:03,360
i agree i agree salsa.dev is actually on

351
00:13:03,360 --> 00:13:05,519
the resources page as well should be the

352
00:13:05,519 --> 00:13:09,279
last link under the salsa section

353
00:13:13,839 --> 00:13:15,760
do we have any questions for tony

354
00:13:15,760 --> 00:13:19,160
like 30 seconds

355
00:13:32,959 --> 00:13:35,920
so nist technically because it's it's

356
00:13:35,920 --> 00:13:38,240
cyber security framework came first

357
00:13:38,240 --> 00:13:40,079
salsa is still very new it's actually

358
00:13:40,079 --> 00:13:41,920
still an act of development

359
00:13:41,920 --> 00:13:42,800
um

360
00:13:42,800 --> 00:13:44,160
certain refinements still need to be

361
00:13:44,160 --> 00:13:46,240
made of course particularly with regards

362
00:13:46,240 --> 00:13:47,199
to

363
00:13:47,199 --> 00:13:49,680
what does provenance look like

364
00:13:49,680 --> 00:13:50,959
some say that

365
00:13:50,959 --> 00:13:52,560
that could actually be what s-bombs end

366
00:13:52,560 --> 00:13:54,320
up becoming but

367
00:13:54,320 --> 00:13:55,839
from what i've read on salsa's site

368
00:13:55,839 --> 00:13:58,800
there's a vision of potentially just

369
00:13:58,800 --> 00:14:00,399
integrating with an application or a

370
00:14:00,399 --> 00:14:03,199
build system and running a scan to

371
00:14:03,199 --> 00:14:05,120
determine configurations and generating

372
00:14:05,120 --> 00:14:07,680
a salsa provenance certificate from that

373
00:14:07,680 --> 00:14:09,279
again not entirely sure how that will

374
00:14:09,279 --> 00:14:11,279
work but that is on the roadmap as i

375
00:14:11,279 --> 00:14:13,920
understand it

376
00:14:13,920 --> 00:14:16,079
all right that's all the time we have

377
00:14:16,079 --> 00:14:17,600
thank you tony for presenting our

378
00:14:17,600 --> 00:14:22,040
besides this uh thanks for having me

379
00:14:22,730 --> 00:14:25,730
[Applause]

