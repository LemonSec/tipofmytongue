1
00:00:02,560 --> 00:00:04,799
all right everyone uh we are ready to

2
00:00:04,799 --> 00:00:06,799
start our next talk

3
00:00:06,799 --> 00:00:08,720
our next speaker

4
00:00:08,720 --> 00:00:10,559
uh will be

5
00:00:10,559 --> 00:00:12,160
brad

6
00:00:12,160 --> 00:00:14,719
uh brad richardson and mother

7
00:00:14,719 --> 00:00:16,239
motherboard

8
00:00:16,239 --> 00:00:19,759
brad is here to talk about

9
00:00:20,720 --> 00:00:23,039
very easily to talk about uh the rig

10
00:00:23,039 --> 00:00:25,119
team engagement in gcp let's take it

11
00:00:25,119 --> 00:00:26,000
away

12
00:00:26,000 --> 00:00:27,519
thank you

13
00:00:27,519 --> 00:00:29,199
all right

14
00:00:29,199 --> 00:00:31,039
good afternoon b-sides thanks for

15
00:00:31,039 --> 00:00:32,880
joining me this week red team

16
00:00:32,880 --> 00:00:35,120
engagements in gcp

17
00:00:35,120 --> 00:00:38,800
and uh we'll be talking about

18
00:00:38,800 --> 00:00:39,920
what it's like to do a red team

19
00:00:39,920 --> 00:00:42,840
engagement in gcp

20
00:00:42,840 --> 00:00:47,120
um a lot of it will come from taking our

21
00:00:47,120 --> 00:00:48,320
typical

22
00:00:48,320 --> 00:00:51,039
attacker objectives the tactics that you

23
00:00:51,039 --> 00:00:52,559
know any red team

24
00:00:52,559 --> 00:00:54,719
finds itself walking through

25
00:00:54,719 --> 00:00:56,960
and we'll be applying it to

26
00:00:56,960 --> 00:01:00,559
resources that uh are unique to gcp

27
00:01:00,559 --> 00:01:01,680
um

28
00:01:01,680 --> 00:01:04,239
a lot of what you'll see is kind of what

29
00:01:04,239 --> 00:01:07,040
i call uh living off the cloud so you've

30
00:01:07,040 --> 00:01:08,560
heard of living off the land this is

31
00:01:08,560 --> 00:01:10,240
more living off the cloud so we'll be

32
00:01:10,240 --> 00:01:13,360
taking normal functionality and we'll be

33
00:01:13,360 --> 00:01:17,360
using it red team style

34
00:01:17,520 --> 00:01:18,560
and

35
00:01:18,560 --> 00:01:20,720
i just want to point out that

36
00:01:20,720 --> 00:01:22,080
mottobot

37
00:01:22,080 --> 00:01:23,759
would have been here he had a personal

38
00:01:23,759 --> 00:01:26,320
conflict we would have co-presented this

39
00:01:26,320 --> 00:01:28,000
together

40
00:01:28,000 --> 00:01:29,600
i know he was super bummed that he

41
00:01:29,600 --> 00:01:31,520
couldn't be here with us today

42
00:01:31,520 --> 00:01:34,479
a lot of what you're going to see

43
00:01:34,479 --> 00:01:35,280
he

44
00:01:35,280 --> 00:01:36,479
uh

45
00:01:36,479 --> 00:01:38,320
he's directly

46
00:01:38,320 --> 00:01:41,040
contributed to it a lot of this material

47
00:01:41,040 --> 00:01:43,280
uh comes from him i'll also be talking

48
00:01:43,280 --> 00:01:46,000
about a tool that we co-wrote together

49
00:01:46,000 --> 00:01:48,399
uh but even a lot of that

50
00:01:48,399 --> 00:01:49,280
is

51
00:01:49,280 --> 00:01:51,200
his evil genius i want to make sure that

52
00:01:51,200 --> 00:01:55,079
he gets proper credit

53
00:01:56,399 --> 00:01:59,280
so just jumping in a quick disclaimer a

54
00:01:59,280 --> 00:02:01,200
lot of what we do even though we're

55
00:02:01,200 --> 00:02:03,600
professional red teamers

56
00:02:03,600 --> 00:02:05,920
is done

57
00:02:05,920 --> 00:02:06,960
on our

58
00:02:06,960 --> 00:02:09,280
spare time it's our own views that we've

59
00:02:09,280 --> 00:02:10,639
developed over

60
00:02:10,639 --> 00:02:13,599
uh several years doing uh red team

61
00:02:13,599 --> 00:02:15,840
engagements um

62
00:02:15,840 --> 00:02:19,200
both for like uh with the government

63
00:02:19,200 --> 00:02:22,480
uh also you know just typical corporate

64
00:02:22,480 --> 00:02:23,760
but what you see

65
00:02:23,760 --> 00:02:25,840
not necessarily reflects anything from

66
00:02:25,840 --> 00:02:27,440
our employer

67
00:02:27,440 --> 00:02:29,520
but really just what comes out of a lot

68
00:02:29,520 --> 00:02:32,000
of our own personal research

69
00:02:32,000 --> 00:02:34,160
personal tool development

70
00:02:34,160 --> 00:02:36,959
that kind of thing um

71
00:02:36,959 --> 00:02:39,040
so with that out of the way

72
00:02:39,040 --> 00:02:41,040
uh who am i of course i'm brad

73
00:02:41,040 --> 00:02:43,519
richardson i tweet at jb

74
00:02:43,519 --> 00:02:45,840
uh i'll offset engineer currently at

75
00:02:45,840 --> 00:02:47,120
credit karma

76
00:02:47,120 --> 00:02:48,080
i

77
00:02:48,080 --> 00:02:49,519
like to blog things i think are

78
00:02:49,519 --> 00:02:50,400
practical

79
00:02:50,400 --> 00:02:52,800
useful to the security community

80
00:02:52,800 --> 00:02:54,879
uh at medium

81
00:02:54,879 --> 00:02:55,680
and

82
00:02:55,680 --> 00:02:58,000
probably my most recent tool at least

83
00:02:58,000 --> 00:03:00,879
the one that i'm uh kind of proud of is

84
00:03:00,879 --> 00:03:03,280
called slackhound it's a reconnaissance

85
00:03:03,280 --> 00:03:06,239
tool for red teams uh for slack

86
00:03:06,239 --> 00:03:10,239
workspaces so check that out

87
00:03:10,720 --> 00:03:13,920
and uh i'll introduce motto uh

88
00:03:13,920 --> 00:03:16,239
he tweets at desi jarvis

89
00:03:16,239 --> 00:03:18,319
also we work together he's an offset

90
00:03:18,319 --> 00:03:21,519
engineer at credit karma as well um

91
00:03:21,519 --> 00:03:23,519
blogs at medium

92
00:03:23,519 --> 00:03:24,799
writes uh

93
00:03:24,799 --> 00:03:28,159
tools himself and he's a contributor to

94
00:03:28,159 --> 00:03:32,679
a red atomic red team

95
00:03:33,599 --> 00:03:35,760
so i said that we would be walking

96
00:03:35,760 --> 00:03:38,560
through typical tactics phases that any

97
00:03:38,560 --> 00:03:40,400
red team would go through in this case

98
00:03:40,400 --> 00:03:42,159
unique to gcp

99
00:03:42,159 --> 00:03:45,599
um that's exactly what we'll do so we'll

100
00:03:45,599 --> 00:03:48,640
orient ourselves a little bit to gcp

101
00:03:48,640 --> 00:03:50,159
we'll walk through a little bit of an

102
00:03:50,159 --> 00:03:52,000
initial foothold we'll go through

103
00:03:52,000 --> 00:03:54,239
persistence privilege escalation command

104
00:03:54,239 --> 00:03:56,480
and control lateral movement

105
00:03:56,480 --> 00:04:00,000
and we'll finish off because uh normally

106
00:04:00,000 --> 00:04:02,000
you know we need to do all of these

107
00:04:02,000 --> 00:04:03,200
things

108
00:04:03,200 --> 00:04:05,280
to accomplish our objectives

109
00:04:05,280 --> 00:04:07,040
but often more times than not our

110
00:04:07,040 --> 00:04:09,439
objective is about data we'll talk about

111
00:04:09,439 --> 00:04:14,519
data and decryption exfiltration

112
00:04:15,760 --> 00:04:19,040
so just a little bit of gcp 101.

113
00:04:19,040 --> 00:04:20,959
so if you're into pictures

114
00:04:20,959 --> 00:04:23,440
gcp kind of looks like this from an

115
00:04:23,440 --> 00:04:25,600
attack perspective especially

116
00:04:25,600 --> 00:04:27,600
so at the top level you have your

117
00:04:27,600 --> 00:04:29,440
organizational node

118
00:04:29,440 --> 00:04:31,199
that might be you know your domain

119
00:04:31,199 --> 00:04:33,919
redteam.com

120
00:04:33,919 --> 00:04:37,759
below that you may have suborgs

121
00:04:37,759 --> 00:04:39,759
and below that projects and really

122
00:04:39,759 --> 00:04:41,759
projects is where your resources are

123
00:04:41,759 --> 00:04:42,720
going to

124
00:04:42,720 --> 00:04:45,199
be under where the magic's going to

125
00:04:45,199 --> 00:04:46,080
happen

126
00:04:46,080 --> 00:04:47,919
when i say resources you think of your

127
00:04:47,919 --> 00:04:50,320
compute your storage

128
00:04:50,320 --> 00:04:51,840
secret management

129
00:04:51,840 --> 00:04:52,800
network

130
00:04:52,800 --> 00:04:56,320
those types of things

131
00:04:56,320 --> 00:04:58,880
and uh if pictures aren't your thing and

132
00:04:58,880 --> 00:05:01,360
lists or more your style this is the

133
00:05:01,360 --> 00:05:04,160
same thing in uh list so you have your

134
00:05:04,160 --> 00:05:06,479
organization at the top

135
00:05:06,479 --> 00:05:09,199
your projects will fall under that in

136
00:05:09,199 --> 00:05:11,199
larger enterprises you may encounter

137
00:05:11,199 --> 00:05:12,400
folders

138
00:05:12,400 --> 00:05:14,720
uh folders are you know i think of those

139
00:05:14,720 --> 00:05:17,520
of as ways of just organizing like your

140
00:05:17,520 --> 00:05:20,160
iam permissions maybe you think of like

141
00:05:20,160 --> 00:05:24,160
having uh departments um

142
00:05:24,160 --> 00:05:26,639
those fit neatly up under folders but

143
00:05:26,639 --> 00:05:29,360
you don't have to have folders for uh

144
00:05:29,360 --> 00:05:30,479
gcp

145
00:05:30,479 --> 00:05:32,560
but you definitely have to have projects

146
00:05:32,560 --> 00:05:34,639
and under the projects like say

147
00:05:34,639 --> 00:05:38,120
will be your resources

148
00:05:38,880 --> 00:05:40,400
so we'll jump into a little bit of

149
00:05:40,400 --> 00:05:42,000
initial foothold

150
00:05:42,000 --> 00:05:44,639
uh i won't spend too much time on this

151
00:05:44,639 --> 00:05:46,080
hopefully if you are doing red team

152
00:05:46,080 --> 00:05:48,560
engagements

153
00:05:48,560 --> 00:05:50,880
you know you're at a maturity level

154
00:05:50,880 --> 00:05:51,919
where

155
00:05:51,919 --> 00:05:53,600
you're spending the majority of your

156
00:05:53,600 --> 00:05:56,720
engagement in other attack phases

157
00:05:56,720 --> 00:05:59,759
so you get the most information kind of

158
00:05:59,759 --> 00:06:01,759
across for the board

159
00:06:01,759 --> 00:06:03,039
if you're

160
00:06:03,039 --> 00:06:05,360
spending a lot of time in initial access

161
00:06:05,360 --> 00:06:07,520
you're um you know you're trying to do

162
00:06:07,520 --> 00:06:09,919
fishing you're trying to at that point

163
00:06:09,919 --> 00:06:10,800
prove

164
00:06:10,800 --> 00:06:12,880
uh maybe that

165
00:06:12,880 --> 00:06:16,880
more of an attacker or advanced

166
00:06:16,880 --> 00:06:19,199
attacker can get into the environment

167
00:06:19,199 --> 00:06:22,479
then you may be losing uh time

168
00:06:22,479 --> 00:06:24,400
time is money

169
00:06:24,400 --> 00:06:26,880
and data from how you know your

170
00:06:26,880 --> 00:06:29,600
defenders respond in those other parts

171
00:06:29,600 --> 00:06:30,240
of

172
00:06:30,240 --> 00:06:32,240
the kill chain

173
00:06:32,240 --> 00:06:33,039
but

174
00:06:33,039 --> 00:06:34,720
uh with that said

175
00:06:34,720 --> 00:06:36,080
you know there's nothing wrong with

176
00:06:36,080 --> 00:06:38,800
working initial uh getting an initial

177
00:06:38,800 --> 00:06:41,120
foothold a lot of good data does come

178
00:06:41,120 --> 00:06:42,720
out of that

179
00:06:42,720 --> 00:06:45,199
so uh i wouldn't want to leave you

180
00:06:45,199 --> 00:06:46,960
without some

181
00:06:46,960 --> 00:06:50,160
information in this attack phase

182
00:06:50,160 --> 00:06:52,639
one thing you know i mentioned phishing

183
00:06:52,639 --> 00:06:55,680
if you are using this attack vector

184
00:06:55,680 --> 00:06:57,919
definitely check out

185
00:06:57,919 --> 00:06:58,720
a

186
00:06:58,720 --> 00:07:00,960
write-up by cedric owens he talks about

187
00:07:00,960 --> 00:07:03,120
how to get a tool called evil jinx up

188
00:07:03,120 --> 00:07:06,240
and running uh evil jinx really makes

189
00:07:06,240 --> 00:07:09,120
fishing a lot easier especially you know

190
00:07:09,120 --> 00:07:12,560
if your organization is using

191
00:07:12,560 --> 00:07:14,639
identity portals like

192
00:07:14,639 --> 00:07:17,919
office 365 or octa

193
00:07:17,919 --> 00:07:19,840
could be any of those sas based identity

194
00:07:19,840 --> 00:07:23,680
portals um evil jeans makes this easy uh

195
00:07:23,680 --> 00:07:26,479
you would still do your uh typical

196
00:07:26,479 --> 00:07:27,440
fishing

197
00:07:27,440 --> 00:07:29,919
but the ban and middle attack

198
00:07:29,919 --> 00:07:31,759
takes a lot of the pain out of phishing

199
00:07:31,759 --> 00:07:32,960
where you're you know you're you're

200
00:07:32,960 --> 00:07:35,520
trying to set up a site scrape a lot of

201
00:07:35,520 --> 00:07:38,319
uh css make it look legitimate well the

202
00:07:38,319 --> 00:07:40,080
man in the middle attack will

203
00:07:40,080 --> 00:07:41,520
do what you want which is you know

204
00:07:41,520 --> 00:07:42,880
capture those username password

205
00:07:42,880 --> 00:07:44,720
credentials

206
00:07:44,720 --> 00:07:47,759
potentially bypass qfa

207
00:07:47,759 --> 00:07:49,680
and get you a valid session into that

208
00:07:49,680 --> 00:07:52,080
portal

209
00:07:52,160 --> 00:07:54,240
one thing to be on the lookout

210
00:07:54,240 --> 00:07:56,400
because it's gcp

211
00:07:56,400 --> 00:07:58,960
probably familiar red teams are always

212
00:07:58,960 --> 00:08:01,440
looking for credentials maybe in

213
00:08:01,440 --> 00:08:03,520
uh you know if you're doing aws maybe an

214
00:08:03,520 --> 00:08:04,879
s3 bucket

215
00:08:04,879 --> 00:08:06,720
if you've compromised endpoints during

216
00:08:06,720 --> 00:08:08,479
your red team operation you're looking

217
00:08:08,479 --> 00:08:09,199
at

218
00:08:09,199 --> 00:08:10,720
traditional things

219
00:08:10,720 --> 00:08:13,680
keys and and different types of secrets

220
00:08:13,680 --> 00:08:16,639
and and you're looking for specific file

221
00:08:16,639 --> 00:08:18,960
extensions that'll you know maybe lead

222
00:08:18,960 --> 00:08:20,479
to something that will help you

223
00:08:20,479 --> 00:08:22,560
laterally move from uh your initial

224
00:08:22,560 --> 00:08:26,960
foothold well for gcp look for json file

225
00:08:26,960 --> 00:08:28,240
extensions

226
00:08:28,240 --> 00:08:29,599
p12

227
00:08:29,599 --> 00:08:31,120
files as well

228
00:08:31,120 --> 00:08:33,039
the difference being here

229
00:08:33,039 --> 00:08:36,240
as i like to think of them as

230
00:08:36,240 --> 00:08:38,880
one is more google managed

231
00:08:38,880 --> 00:08:41,039
keys and the other one more customer

232
00:08:41,039 --> 00:08:44,159
managed and uploaded

233
00:08:44,159 --> 00:08:46,320
and uh don't want to discount you know

234
00:08:46,320 --> 00:08:48,160
traditional methods of getting initial

235
00:08:48,160 --> 00:08:49,680
footholds so

236
00:08:49,680 --> 00:08:52,240
things like ssrf vulnerabilities

237
00:08:52,240 --> 00:08:54,399
still come into play it doesn't matter

238
00:08:54,399 --> 00:08:57,519
this gcp

239
00:08:57,519 --> 00:08:58,640
so

240
00:08:58,640 --> 00:09:00,320
one other thing i'll point out on this

241
00:09:00,320 --> 00:09:02,800
slide is um maybe you're aware maybe

242
00:09:02,800 --> 00:09:05,680
you're not it's been reported to google

243
00:09:05,680 --> 00:09:07,920
if you're usually using programmatic

244
00:09:07,920 --> 00:09:11,279
access like gcloud gsutil

245
00:09:11,279 --> 00:09:14,080
to do a lot of automation

246
00:09:14,080 --> 00:09:15,920
for gcp

247
00:09:15,920 --> 00:09:19,600
the credentials are stored in clear text

248
00:09:19,600 --> 00:09:23,040
that's what you'll find under um a

249
00:09:23,040 --> 00:09:24,959
compromise endpoint or you know it could

250
00:09:24,959 --> 00:09:28,080
be even yours uh your home directory uh

251
00:09:28,080 --> 00:09:30,959
documents slash vcloud uh if you find

252
00:09:30,959 --> 00:09:32,240
credentials in there and there's an

253
00:09:32,240 --> 00:09:35,120
active session all you need to do as uh

254
00:09:35,120 --> 00:09:37,680
the red teamer download those files and

255
00:09:37,680 --> 00:09:39,600
you can take over that session assuming

256
00:09:39,600 --> 00:09:41,760
again it's it's a valid session

257
00:09:41,760 --> 00:09:44,160
those you know do time out

258
00:09:44,160 --> 00:09:46,000
but if it hasn't you can assume that

259
00:09:46,000 --> 00:09:49,279
session this is not unique to gcp

260
00:09:49,279 --> 00:09:50,240
certainly

261
00:09:50,240 --> 00:09:53,200
none of what i'm saying i ever intend to

262
00:09:53,200 --> 00:09:55,040
pick on gcp

263
00:09:55,040 --> 00:09:57,040
aws and azure it's a little bit

264
00:09:57,040 --> 00:09:59,440
different still suffer the

265
00:09:59,440 --> 00:10:01,839
same kind of issues

266
00:10:01,839 --> 00:10:03,839
and so

267
00:10:03,839 --> 00:10:06,079
if you haven't heard of this uh

268
00:10:06,079 --> 00:10:08,959
particular uh technique uh there's a

269
00:10:08,959 --> 00:10:12,079
write-up uh that motto did about how to

270
00:10:12,079 --> 00:10:13,760
go about doing this ex-filling those

271
00:10:13,760 --> 00:10:16,079
databases of course if you're getting a

272
00:10:16,079 --> 00:10:18,399
foothold on an endpoint you at least

273
00:10:18,399 --> 00:10:20,399
have the privileges of that user that

274
00:10:20,399 --> 00:10:22,560
you know clicked on that phishing email

275
00:10:22,560 --> 00:10:24,240
or or whatever it is it's not going to

276
00:10:24,240 --> 00:10:26,880
require root or administrator privileges

277
00:10:26,880 --> 00:10:29,200
um and so you'll be able to read those

278
00:10:29,200 --> 00:10:31,120
uh database credentials and download

279
00:10:31,120 --> 00:10:33,120
that should be able to

280
00:10:33,120 --> 00:10:33,920
and

281
00:10:33,920 --> 00:10:37,199
i know i have links here

282
00:10:37,440 --> 00:10:38,720
i think that they're going to make these

283
00:10:38,720 --> 00:10:40,320
slides available

284
00:10:40,320 --> 00:10:42,959
i've also

285
00:10:43,519 --> 00:10:45,760
linked to it so that you can download in

286
00:10:45,760 --> 00:10:48,560
pdf and all the links are available you

287
00:10:48,560 --> 00:10:50,160
can go out in your own spare time and

288
00:10:50,160 --> 00:10:53,120
read these write-ups

289
00:10:54,079 --> 00:10:56,240
but continuing on we won't spend too

290
00:10:56,240 --> 00:10:57,519
much time here

291
00:10:57,519 --> 00:10:59,519
but just if you're not familiar with

292
00:10:59,519 --> 00:11:00,560
what

293
00:11:00,560 --> 00:11:03,040
like service account keys look like and

294
00:11:03,040 --> 00:11:06,160
and credentials in gcp look

295
00:11:06,160 --> 00:11:08,240
how they appear and you find yourself in

296
00:11:08,240 --> 00:11:11,040
an engagement in this cloud environment

297
00:11:11,040 --> 00:11:11,920
you see

298
00:11:11,920 --> 00:11:15,760
this is an example here the things that

299
00:11:15,760 --> 00:11:17,279
help orient you

300
00:11:17,279 --> 00:11:20,000
we're using gcloud

301
00:11:20,000 --> 00:11:20,880
and

302
00:11:20,880 --> 00:11:23,440
we see that we have the project that

303
00:11:23,440 --> 00:11:25,040
we're in so if you think about getting a

304
00:11:25,040 --> 00:11:27,680
foothold on an endpoint

305
00:11:27,680 --> 00:11:29,440
you want to get situational awareness

306
00:11:29,440 --> 00:11:30,959
just like you would an on-prem

307
00:11:30,959 --> 00:11:32,560
traditional network

308
00:11:32,560 --> 00:11:33,920
so you see

309
00:11:33,920 --> 00:11:35,600
just a few commands

310
00:11:35,600 --> 00:11:38,160
or looking at that

311
00:11:38,160 --> 00:11:39,360
that

312
00:11:39,360 --> 00:11:41,360
service account key

313
00:11:41,360 --> 00:11:44,079
to see your project and uh pretty much

314
00:11:44,079 --> 00:11:46,000
everything in gcp kind of looks like an

315
00:11:46,000 --> 00:11:48,480
email address for service accounts so

316
00:11:48,480 --> 00:11:50,720
you know you see that

317
00:11:50,720 --> 00:11:53,120
at red team project one and g surface

318
00:11:53,120 --> 00:11:55,360
account.com

319
00:11:55,360 --> 00:11:58,399
just be aware of that

320
00:11:59,519 --> 00:12:03,519
so we'll jump into persistence

321
00:12:04,000 --> 00:12:06,160
two main takeaways here

322
00:12:06,160 --> 00:12:08,720
what you see on the left side

323
00:12:08,720 --> 00:12:10,639
if you're gaining initial access via

324
00:12:10,639 --> 00:12:13,760
user account or access token

325
00:12:13,760 --> 00:12:15,760
and you're working as a red team

326
00:12:15,760 --> 00:12:16,959
these are

327
00:12:16,959 --> 00:12:19,200
short-lived

328
00:12:19,200 --> 00:12:22,079
account access so red team needs to move

329
00:12:22,079 --> 00:12:24,320
fast if you find one of these and it's

330
00:12:24,320 --> 00:12:26,480
an active session

331
00:12:26,480 --> 00:12:28,720
whereas if your initial access comes

332
00:12:28,720 --> 00:12:31,920
from a service account you are good

333
00:12:31,920 --> 00:12:35,120
these are very long live

334
00:12:35,120 --> 00:12:36,720
sessions and i'll show you a little

335
00:12:36,720 --> 00:12:40,320
later just how long by default um but if

336
00:12:40,320 --> 00:12:41,600
you come across service account and

337
00:12:41,600 --> 00:12:43,200
that's why i point out the extensions

338
00:12:43,200 --> 00:12:44,800
why they're important to keep an eye out

339
00:12:44,800 --> 00:12:46,399
when you're doing reconnaissance where

340
00:12:46,399 --> 00:12:48,639
you land on an end point uh you may have

341
00:12:48,639 --> 00:12:50,560
just killed two birds with one stone

342
00:12:50,560 --> 00:12:51,519
with

343
00:12:51,519 --> 00:12:55,440
the ability to have your persistence and

344
00:12:55,440 --> 00:12:59,120
hopefully move laterally

345
00:12:59,839 --> 00:13:02,000
and here what here's what you see very

346
00:13:02,000 --> 00:13:05,519
uh tactical examples so at the top

347
00:13:05,519 --> 00:13:07,360
we're working with ssh keys for

348
00:13:07,360 --> 00:13:10,079
persistence you see the google cloud

349
00:13:10,079 --> 00:13:13,600
console web-based gui

350
00:13:13,600 --> 00:13:14,720
and

351
00:13:14,720 --> 00:13:17,200
in here

352
00:13:17,200 --> 00:13:18,959
you have

353
00:13:18,959 --> 00:13:21,760
the ssh public key

354
00:13:21,760 --> 00:13:25,040
uh for uh the test account and below you

355
00:13:25,040 --> 00:13:27,680
see what it looks like

356
00:13:27,680 --> 00:13:30,560
from the cli so i've catted

357
00:13:30,560 --> 00:13:33,600
just a fake public key you see the key

358
00:13:33,600 --> 00:13:34,399
there

359
00:13:34,399 --> 00:13:39,279
and what you see in the in the red box

360
00:13:39,440 --> 00:13:40,880
is

361
00:13:40,880 --> 00:13:43,440
successfully adding using

362
00:13:43,440 --> 00:13:45,760
google's own built-in

363
00:13:45,760 --> 00:13:48,480
sdk so in this case we're using gcloud

364
00:13:48,480 --> 00:13:51,199
compute instances add it to the instance

365
00:13:51,199 --> 00:13:53,920
we want we can give it a local file

366
00:13:53,920 --> 00:13:56,959
in this case the public ssh key portion

367
00:13:56,959 --> 00:14:00,079
and it works and tying back into the top

368
00:14:00,079 --> 00:14:02,399
here the key is added one thing that i

369
00:14:02,399 --> 00:14:04,560
want to point out is very important

370
00:14:04,560 --> 00:14:06,399
if you think about the the format of the

371
00:14:06,399 --> 00:14:08,320
public key in your traditional linux

372
00:14:08,320 --> 00:14:09,279
host

373
00:14:09,279 --> 00:14:10,800
it's a little bit different than what

374
00:14:10,800 --> 00:14:13,040
google expects so

375
00:14:13,040 --> 00:14:16,399
if you're using this method um you want

376
00:14:16,399 --> 00:14:18,320
to take note

377
00:14:18,320 --> 00:14:21,440
we have the the account the colon ssh

378
00:14:21,440 --> 00:14:25,360
rsa the space the key material

379
00:14:25,360 --> 00:14:27,839
if it's not in this format

380
00:14:27,839 --> 00:14:30,480
google may or may not throw an error

381
00:14:30,480 --> 00:14:33,600
but you'll go to log in or sshn it won't

382
00:14:33,600 --> 00:14:35,839
work you may not know why so i want to

383
00:14:35,839 --> 00:14:37,600
point that out in case you're using this

384
00:14:37,600 --> 00:14:39,920
method

385
00:14:41,040 --> 00:14:42,800
and so kind of going back to service

386
00:14:42,800 --> 00:14:43,839
accounts

387
00:14:43,839 --> 00:14:47,600
here you see the google cloud console

388
00:14:47,600 --> 00:14:49,360
one thing to note

389
00:14:49,360 --> 00:14:50,320
is

390
00:14:50,320 --> 00:14:52,639
in gcp a service account can have

391
00:14:52,639 --> 00:14:54,480
multiple keys if you come across a

392
00:14:54,480 --> 00:14:56,320
service account

393
00:14:56,320 --> 00:14:58,240
and you see a key you obviously don't

394
00:14:58,240 --> 00:15:00,399
have the key but it doesn't mean

395
00:15:00,399 --> 00:15:02,160
that with the

396
00:15:02,160 --> 00:15:04,000
right permissions that you can't add

397
00:15:04,000 --> 00:15:06,480
additional keys you can

398
00:15:06,480 --> 00:15:09,040
and also i said that service account

399
00:15:09,040 --> 00:15:12,079
keys are long lift in this case by

400
00:15:12,079 --> 00:15:14,480
default they're good until december 31st

401
00:15:14,480 --> 00:15:19,440
99.99 i call that long lift

402
00:15:21,040 --> 00:15:23,199
and so uh to me

403
00:15:23,199 --> 00:15:25,040
one of the funnest things about red

404
00:15:25,040 --> 00:15:27,920
teaming is when i can find

405
00:15:27,920 --> 00:15:30,800
normal built-in functionality and kind

406
00:15:30,800 --> 00:15:33,040
of turn it towards the advantage of the

407
00:15:33,040 --> 00:15:37,279
red team so in gcp

408
00:15:37,600 --> 00:15:38,560
you have

409
00:15:38,560 --> 00:15:40,160
startup scripts that you can attach to

410
00:15:40,160 --> 00:15:41,839
compute instances

411
00:15:41,839 --> 00:15:44,399
it will execute those

412
00:15:44,399 --> 00:15:47,759
they can be very complicated

413
00:15:47,759 --> 00:15:51,440
you can also find keys and tokens

414
00:15:51,440 --> 00:15:55,040
as well in startup scripts just normal

415
00:15:55,040 --> 00:15:57,519
you know admins

416
00:15:57,519 --> 00:16:00,480
working to make things do what they want

417
00:16:00,480 --> 00:16:02,079
but we can use this functionality as

418
00:16:02,079 --> 00:16:04,880
well so what you're seeing again is a

419
00:16:04,880 --> 00:16:06,800
very simple example but it doesn't you

420
00:16:06,800 --> 00:16:08,079
know it doesn't really matter it will

421
00:16:08,079 --> 00:16:11,199
work so you know i create my example

422
00:16:11,199 --> 00:16:13,839
shell script here i see h modded to be

423
00:16:13,839 --> 00:16:16,480
executable i use again

424
00:16:16,480 --> 00:16:20,560
the google provided sdk gcloud command i

425
00:16:20,560 --> 00:16:24,000
give it the instance that i want and uh

426
00:16:24,000 --> 00:16:26,079
in this case i can run it

427
00:16:26,079 --> 00:16:28,720
i have that script locally

428
00:16:28,720 --> 00:16:30,800
and it will attach that

429
00:16:30,800 --> 00:16:33,839
startup script and when this host uh

430
00:16:33,839 --> 00:16:36,639
whenever it reboots it will execute my

431
00:16:36,639 --> 00:16:38,720
code in this case what it's doing you

432
00:16:38,720 --> 00:16:39,680
see

433
00:16:39,680 --> 00:16:41,360
you see it there in the cloud console

434
00:16:41,360 --> 00:16:43,360
where it's been added

435
00:16:43,360 --> 00:16:45,360
and below you see root of the instance

436
00:16:45,360 --> 00:16:47,839
three you grab the host name

437
00:16:47,839 --> 00:16:50,079
and then i check to see that that file

438
00:16:50,079 --> 00:16:53,440
was successfully created uh cat it so

439
00:16:53,440 --> 00:16:56,720
it's in etsy you see beacon.sh

440
00:16:56,720 --> 00:16:59,199
and i just echoed the command for the

441
00:16:59,199 --> 00:17:01,680
example and you see the text there my

442
00:17:01,680 --> 00:17:04,799
beacon runs on bacon and so our startup

443
00:17:04,799 --> 00:17:07,359
script worked of course you know in a

444
00:17:07,359 --> 00:17:08,720
real red team engagement you're going to

445
00:17:08,720 --> 00:17:12,000
put something besides that

446
00:17:14,480 --> 00:17:15,599
so

447
00:17:15,599 --> 00:17:17,280
you know sometimes depending on how the

448
00:17:17,280 --> 00:17:18,640
enterprise

449
00:17:18,640 --> 00:17:20,959
has architected these things

450
00:17:20,959 --> 00:17:23,280
maybe you don't have cli access or maybe

451
00:17:23,280 --> 00:17:26,240
you're just more comfortable working in

452
00:17:26,240 --> 00:17:28,960
more of a gui based

453
00:17:28,960 --> 00:17:30,320
interface

454
00:17:30,320 --> 00:17:32,640
no problem if you need once you have

455
00:17:32,640 --> 00:17:36,240
this persistence you're able to log in

456
00:17:36,240 --> 00:17:39,200
through whatever method

457
00:17:39,200 --> 00:17:41,919
thankfully gcp supports ssh login

458
00:17:41,919 --> 00:17:46,360
through the browser as well

459
00:17:47,840 --> 00:17:50,000
and uh establishing persistence on

460
00:17:50,000 --> 00:17:51,039
project

461
00:17:51,039 --> 00:17:55,840
um what you see here is um

462
00:17:56,080 --> 00:17:58,240
you can add

463
00:17:58,240 --> 00:18:01,200
even gmail accounts to

464
00:18:01,200 --> 00:18:03,840
a project so once you have enough iam

465
00:18:03,840 --> 00:18:05,200
permission

466
00:18:05,200 --> 00:18:07,760
and you want to add an account

467
00:18:07,760 --> 00:18:10,240
um that doesn't necessarily have to be

468
00:18:10,240 --> 00:18:12,160
an email address

469
00:18:12,160 --> 00:18:15,200
in your organization uh when i've tried

470
00:18:15,200 --> 00:18:18,000
this it uh it will complain if it is

471
00:18:18,000 --> 00:18:19,919
outside of

472
00:18:19,919 --> 00:18:22,000
the organization's domain

473
00:18:22,000 --> 00:18:25,039
uh or gmail but gmail works

474
00:18:25,039 --> 00:18:26,320
even though you know you think

475
00:18:26,320 --> 00:18:28,240
redteam.com it would need to be a

476
00:18:28,240 --> 00:18:30,799
redteam.com address

477
00:18:30,799 --> 00:18:32,080
i assume

478
00:18:32,080 --> 00:18:34,160
that there's functionality to disable

479
00:18:34,160 --> 00:18:35,039
this

480
00:18:35,039 --> 00:18:39,120
but by default works just fine

481
00:18:40,080 --> 00:18:42,559
and uh

482
00:18:42,559 --> 00:18:45,039
google will send or gcp will send the

483
00:18:45,039 --> 00:18:46,960
email uh to

484
00:18:46,960 --> 00:18:47,760
the

485
00:18:47,760 --> 00:18:50,000
email address that you specify and

486
00:18:50,000 --> 00:18:52,000
that's what you see on the right side so

487
00:18:52,000 --> 00:18:53,600
i invite you to join the google

488
00:18:53,600 --> 00:18:55,200
developer console

489
00:18:55,200 --> 00:18:57,679
the project's redacted there

490
00:18:57,679 --> 00:19:00,160
but once you accept the invite whatever

491
00:19:00,160 --> 00:19:02,559
role you were granted

492
00:19:02,559 --> 00:19:05,200
you're good to go

493
00:19:06,160 --> 00:19:08,480
so uh persistence on project again just

494
00:19:08,480 --> 00:19:10,799
continuing i mentioned earlier you know

495
00:19:10,799 --> 00:19:13,760
be on the lookout for json keys

496
00:19:13,760 --> 00:19:15,679
once you have the right permissions you

497
00:19:15,679 --> 00:19:18,559
go to create a service account uh it's

498
00:19:18,559 --> 00:19:20,160
going to give you the ability it's going

499
00:19:20,160 --> 00:19:24,000
to ask you to to download and save that

500
00:19:24,000 --> 00:19:26,240
json file that is the service account

501
00:19:26,240 --> 00:19:28,960
key uh whenever i see in any application

502
00:19:28,960 --> 00:19:31,360
it warning me something via fact service

503
00:19:31,360 --> 00:19:33,039
account keys could pose a security risk

504
00:19:33,039 --> 00:19:34,799
if compromised that's very interesting

505
00:19:34,799 --> 00:19:36,559
to me as a red teamer

506
00:19:36,559 --> 00:19:38,880
and so here again we're just downloading

507
00:19:38,880 --> 00:19:41,120
the key and now we have that persistent

508
00:19:41,120 --> 00:19:43,439
access

509
00:19:46,240 --> 00:19:48,240
and again you see uh we're doing

510
00:19:48,240 --> 00:19:50,960
persistence and we can add even a gmail

511
00:19:50,960 --> 00:19:53,039
address

512
00:19:53,039 --> 00:19:54,240
in this case

513
00:19:54,240 --> 00:19:56,960
for the organization so even escalating

514
00:19:56,960 --> 00:19:59,280
our privileges a bit

515
00:19:59,280 --> 00:20:01,760
in the role we're setting is owner in

516
00:20:01,760 --> 00:20:04,240
this case

517
00:20:05,760 --> 00:20:07,360
however

518
00:20:07,360 --> 00:20:08,799
a bit of this sounds

519
00:20:08,799 --> 00:20:10,320
kind of uh

520
00:20:10,320 --> 00:20:12,320
simple right we've all seen where you're

521
00:20:12,320 --> 00:20:14,159
working test labs test labs are very

522
00:20:14,159 --> 00:20:17,440
small everything is very default um

523
00:20:17,440 --> 00:20:18,720
you know

524
00:20:18,720 --> 00:20:21,600
a large company may have thousands of

525
00:20:21,600 --> 00:20:23,280
projects may have

526
00:20:23,280 --> 00:20:24,720
you know things broken out in the

527
00:20:24,720 --> 00:20:27,600
folders uh using you know

528
00:20:27,600 --> 00:20:29,600
lots of different resources

529
00:20:29,600 --> 00:20:30,640
and so

530
00:20:30,640 --> 00:20:32,480
uh of course you need the appropriate

531
00:20:32,480 --> 00:20:34,320
permissions that doesn't change in the

532
00:20:34,320 --> 00:20:37,440
cloud from how it is on-prem

533
00:20:37,440 --> 00:20:39,039
you still need that

534
00:20:39,039 --> 00:20:41,360
you know that level of access to do

535
00:20:41,360 --> 00:20:43,360
these things

536
00:20:43,360 --> 00:20:45,919
and so finding the right accounts

537
00:20:45,919 --> 00:20:48,480
finding the right compute instances

538
00:20:48,480 --> 00:20:50,400
just as much challenge as it is in

539
00:20:50,400 --> 00:20:52,480
on-prem networks

540
00:20:52,480 --> 00:20:54,799
so what do we do about that

541
00:20:54,799 --> 00:20:57,039
well

542
00:20:58,320 --> 00:21:00,400
we'll talk about privilege escalation

543
00:21:00,400 --> 00:21:03,840
but i want to um also bring up a tool

544
00:21:03,840 --> 00:21:06,720
that me and motto have written together

545
00:21:06,720 --> 00:21:09,919
um it is to it automates a lot of what

546
00:21:09,919 --> 00:21:12,480
you have seen in this presentation and a

547
00:21:12,480 --> 00:21:15,200
lot of things uh that will come

548
00:21:15,200 --> 00:21:17,679
um if you are in an environment where

549
00:21:17,679 --> 00:21:19,120
you're talking about

550
00:21:19,120 --> 00:21:21,039
you know hundreds thousands tens of

551
00:21:21,039 --> 00:21:23,760
thousands of projects lots of uh

552
00:21:23,760 --> 00:21:25,840
accounts and different roles

553
00:21:25,840 --> 00:21:26,640
um

554
00:21:26,640 --> 00:21:30,240
be too overwhelming for you know

555
00:21:30,240 --> 00:21:32,240
maybe your red team is five people ten

556
00:21:32,240 --> 00:21:35,200
people uh or smaller

557
00:21:35,200 --> 00:21:38,080
you would burn all your your your time

558
00:21:38,080 --> 00:21:41,120
uh potentially trying to figure out uh

559
00:21:41,120 --> 00:21:42,840
who has the power in the

560
00:21:42,840 --> 00:21:45,600
kingdom gcp hound

561
00:21:45,600 --> 00:21:47,280
really helps with this

562
00:21:47,280 --> 00:21:49,679
so i have a link there

563
00:21:49,679 --> 00:21:51,360
this will take you out to

564
00:21:51,360 --> 00:21:54,159
medium article motto wrote it will tell

565
00:21:54,159 --> 00:21:56,720
you how to download gcp hound get it up

566
00:21:56,720 --> 00:21:58,960
and running runs in a docker container

567
00:21:58,960 --> 00:22:01,679
very lightweight

568
00:22:02,000 --> 00:22:04,159
currently it has

569
00:22:04,159 --> 00:22:07,120
it helps abuse iam compute

570
00:22:07,120 --> 00:22:10,000
project gcs kms a lot of the things i'm

571
00:22:10,000 --> 00:22:12,480
talking about and i'll show you examples

572
00:22:12,480 --> 00:22:15,039
of it as well

573
00:22:16,240 --> 00:22:18,480
so

574
00:22:18,480 --> 00:22:21,280
it queries iam in this case

575
00:22:21,280 --> 00:22:22,400
it

576
00:22:22,400 --> 00:22:25,600
it also has a gui for the iam portion i

577
00:22:25,600 --> 00:22:26,880
think

578
00:22:26,880 --> 00:22:29,440
we will add all of the modules and all

579
00:22:29,440 --> 00:22:31,360
the functionality to eventually be under

580
00:22:31,360 --> 00:22:32,240
gui

581
00:22:32,240 --> 00:22:35,679
but we started with iaem because of just

582
00:22:35,679 --> 00:22:37,440
how do you decouple when you're talking

583
00:22:37,440 --> 00:22:38,400
about

584
00:22:38,400 --> 00:22:40,720
so much data and so that's what you see

585
00:22:40,720 --> 00:22:42,559
here hopefully you can see it might be a

586
00:22:42,559 --> 00:22:44,720
little blurry on the screen um but it

587
00:22:44,720 --> 00:22:46,080
just makes it more clear when you're

588
00:22:46,080 --> 00:22:48,320
trying to find out who has you know the

589
00:22:48,320 --> 00:22:51,440
roles they that you're going after

590
00:22:51,440 --> 00:22:52,840
it is fast and stealthy it is

591
00:22:52,840 --> 00:22:55,360
multi-threaded it does random sweep time

592
00:22:55,360 --> 00:22:57,840
to potentially throw off you know rate

593
00:22:57,840 --> 00:23:01,760
limiting or the blue team

594
00:23:02,320 --> 00:23:06,320
and so it is also customizable

595
00:23:07,360 --> 00:23:09,840
by default

596
00:23:10,000 --> 00:23:12,000
it will populate this file these are

597
00:23:12,000 --> 00:23:13,039
typical

598
00:23:13,039 --> 00:23:15,280
uh juicy accounts that you'll probably

599
00:23:15,280 --> 00:23:17,919
be going after but you can change that

600
00:23:17,919 --> 00:23:19,919
if you find in your organization there's

601
00:23:19,919 --> 00:23:22,000
a particular role

602
00:23:22,000 --> 00:23:23,679
you know maybe it's it's custom it's

603
00:23:23,679 --> 00:23:26,240
unique and uh you want to add it add it

604
00:23:26,240 --> 00:23:29,039
in here this text file no problem and it

605
00:23:29,039 --> 00:23:31,520
will pull all that data in and show it

606
00:23:31,520 --> 00:23:33,840
in a nice gui for you

607
00:23:33,840 --> 00:23:37,320
to help you out

608
00:23:38,640 --> 00:23:41,279
so uh escalation and persistence

609
00:23:41,279 --> 00:23:42,880
remember we talked about service account

610
00:23:42,880 --> 00:23:45,440
persistence

611
00:23:45,440 --> 00:23:46,720
you know

612
00:23:46,720 --> 00:23:48,880
you can run the gcloud commands

613
00:23:48,880 --> 00:23:50,640
certainly some of those get pretty

614
00:23:50,640 --> 00:23:51,760
lengthy

615
00:23:51,760 --> 00:23:53,039
quite a bit to

616
00:23:53,039 --> 00:23:54,559
type at times

617
00:23:54,559 --> 00:23:57,360
gcp hound helps shorten that it also

618
00:23:57,360 --> 00:23:59,120
helps automate you know what we're

619
00:23:59,120 --> 00:24:01,679
really trying to do save us time so what

620
00:24:01,679 --> 00:24:03,200
you see here

621
00:24:03,200 --> 00:24:06,000
gcp hound create service account key you

622
00:24:06,000 --> 00:24:07,919
give it the project give the service

623
00:24:07,919 --> 00:24:09,840
account that you want created

624
00:24:09,840 --> 00:24:11,200
and uh there's a couple other things

625
00:24:11,200 --> 00:24:12,720
that you know google

626
00:24:12,720 --> 00:24:14,000
gcp

627
00:24:14,000 --> 00:24:15,200
expects

628
00:24:15,200 --> 00:24:16,960
but what it is doing here is it will

629
00:24:16,960 --> 00:24:18,799
check to see that your session is still

630
00:24:18,799 --> 00:24:21,760
valid uh that you're still logged in and

631
00:24:21,760 --> 00:24:23,600
it's going to create some local

632
00:24:23,600 --> 00:24:25,679
directories for you

633
00:24:25,679 --> 00:24:27,520
and it will attempt to create that

634
00:24:27,520 --> 00:24:29,360
service account

635
00:24:29,360 --> 00:24:31,919
if that service account already exists

636
00:24:31,919 --> 00:24:33,520
you might recall we can have multiple

637
00:24:33,520 --> 00:24:35,120
service account keys it'll go ahead and

638
00:24:35,120 --> 00:24:36,720
download that key store it for you so

639
00:24:36,720 --> 00:24:37,600
that

640
00:24:37,600 --> 00:24:40,159
you have it to use and a little bit of

641
00:24:40,159 --> 00:24:42,480
automation so of course if we can become

642
00:24:42,480 --> 00:24:45,360
owner let's become owner and gcp hound

643
00:24:45,360 --> 00:24:47,440
as it does uh the first part of that

644
00:24:47,440 --> 00:24:49,360
it'll also go ahead assuming it has the

645
00:24:49,360 --> 00:24:51,120
right permissions it will attempt to put

646
00:24:51,120 --> 00:24:53,039
you in the owner role as well for that

647
00:24:53,039 --> 00:24:54,559
service account

648
00:24:54,559 --> 00:24:56,400
and what you see here it's a bit

649
00:24:56,400 --> 00:24:58,799
redacted but you see the green box it

650
00:24:58,799 --> 00:25:01,360
was successful up here and you see kind

651
00:25:01,360 --> 00:25:04,559
of validating it in the cloud console um

652
00:25:04,559 --> 00:25:06,320
our service account that we created as

653
00:25:06,320 --> 00:25:07,840
owner

654
00:25:07,840 --> 00:25:11,200
and you see we got a nice 55 78 out of

655
00:25:11,200 --> 00:25:15,840
55 78 xs permissions

656
00:25:16,559 --> 00:25:18,000
so we'll jump into a little bit of

657
00:25:18,000 --> 00:25:20,480
command and control

658
00:25:20,480 --> 00:25:22,480
you know not every engagement requires

659
00:25:22,480 --> 00:25:23,520
that

660
00:25:23,520 --> 00:25:25,600
you establish c2

661
00:25:25,600 --> 00:25:27,600
but it's always nice to have

662
00:25:27,600 --> 00:25:29,919
so if you're doing

663
00:25:29,919 --> 00:25:32,640
red team engagement in gcp

664
00:25:32,640 --> 00:25:33,600
and

665
00:25:33,600 --> 00:25:34,720
let's say you're working in a really

666
00:25:34,720 --> 00:25:36,960
restrictive environment

667
00:25:36,960 --> 00:25:38,080
well

668
00:25:38,080 --> 00:25:40,559
i'll leave you here with two potential

669
00:25:40,559 --> 00:25:43,120
options the first one is to use google

670
00:25:43,120 --> 00:25:45,919
sheets so i wrote in medium post and i

671
00:25:45,919 --> 00:25:48,480
also put it out in my personal github

672
00:25:48,480 --> 00:25:50,159
some python code

673
00:25:50,159 --> 00:25:52,640
that helps you establish c2 using a

674
00:25:52,640 --> 00:25:54,400
google sheet

675
00:25:54,400 --> 00:25:56,799
what i like about this is that you know

676
00:25:56,799 --> 00:25:58,960
it's a little harder for google to block

677
00:25:58,960 --> 00:26:01,760
google so gcp back to

678
00:26:01,760 --> 00:26:03,360
a google doc

679
00:26:03,360 --> 00:26:05,520
by default of course it runs over https

680
00:26:05,520 --> 00:26:07,679
so our channel is encrypted we didn't

681
00:26:07,679 --> 00:26:10,960
have to do anything special for that

682
00:26:10,960 --> 00:26:15,039
if you go to go this route

683
00:26:15,039 --> 00:26:16,799
it really only requires a couple things

684
00:26:16,799 --> 00:26:19,520
to get up and running

685
00:26:19,520 --> 00:26:21,360
the nice thing about sas is it helps us

686
00:26:21,360 --> 00:26:24,080
out here so you need python you need a

687
00:26:24,080 --> 00:26:26,400
gcp service account that gcp service

688
00:26:26,400 --> 00:26:29,039
account doesn't need to be

689
00:26:29,039 --> 00:26:31,120
privileged i don't think it even needs

690
00:26:31,120 --> 00:26:32,240
to be in the project that you're

691
00:26:32,240 --> 00:26:34,320
targeting you just need a gcp service

692
00:26:34,320 --> 00:26:35,919
account

693
00:26:35,919 --> 00:26:37,760
and of course you need a google sheet

694
00:26:37,760 --> 00:26:38,480
and

695
00:26:38,480 --> 00:26:40,720
you will need to enable the google sheet

696
00:26:40,720 --> 00:26:42,880
api to get this working

697
00:26:42,880 --> 00:26:44,400
but other than that you don't really

698
00:26:44,400 --> 00:26:46,480
need anything else

699
00:26:46,480 --> 00:26:47,600
and uh

700
00:26:47,600 --> 00:26:48,960
if you check out the python code that i

701
00:26:48,960 --> 00:26:50,840
put out in

702
00:26:50,840 --> 00:26:53,760
github um

703
00:26:53,760 --> 00:26:55,520
you know it's not going to be as full

704
00:26:55,520 --> 00:26:57,279
feature to something like

705
00:26:57,279 --> 00:26:59,919
mythic or cobalt strike but it doesn't

706
00:26:59,919 --> 00:27:02,159
mean that you can't do your initial

707
00:27:02,159 --> 00:27:04,799
reconnaissance establish situational

708
00:27:04,799 --> 00:27:09,200
awareness and then uh i built in a

709
00:27:09,200 --> 00:27:10,400
you know a

710
00:27:10,400 --> 00:27:11,840
command

711
00:27:11,840 --> 00:27:14,000
so that it will download

712
00:27:14,000 --> 00:27:15,919
whatever you point it to it's not going

713
00:27:15,919 --> 00:27:19,279
to use curl it's more uh python cis

714
00:27:19,279 --> 00:27:21,840
internal so it's a little bit stealthier

715
00:27:21,840 --> 00:27:23,840
than running you know uh running

716
00:27:23,840 --> 00:27:25,120
something on the command line to

717
00:27:25,120 --> 00:27:27,840
download uh potentially you know a

718
00:27:27,840 --> 00:27:29,600
payload that you want to use to upgrade

719
00:27:29,600 --> 00:27:32,840
your c2 from this to something more

720
00:27:32,840 --> 00:27:35,120
full-featured but

721
00:27:35,120 --> 00:27:37,600
there's also dns cat 2. i didn't write

722
00:27:37,600 --> 00:27:40,000
that i did put the author up there

723
00:27:40,000 --> 00:27:41,679
this works really well if you find

724
00:27:41,679 --> 00:27:43,760
yourself in a super restricted

725
00:27:43,760 --> 00:27:46,799
environment acls are really locked down

726
00:27:46,799 --> 00:27:48,799
you can't you know make it out to the

727
00:27:48,799 --> 00:27:50,559
internet on any it doesn't seem like you

728
00:27:50,559 --> 00:27:54,000
make it out to any uh tcp or gdp port

729
00:27:54,000 --> 00:27:55,760
from a project because it's that

730
00:27:55,760 --> 00:27:58,559
restricted well normally you know

731
00:27:58,559 --> 00:28:02,240
typical dns functionality uh

732
00:28:02,240 --> 00:28:04,240
google will help you out by forwarding

733
00:28:04,240 --> 00:28:06,240
you know the the client queries outbound

734
00:28:06,240 --> 00:28:08,480
the internet and so that may be an

735
00:28:08,480 --> 00:28:11,200
option for you

736
00:28:13,520 --> 00:28:16,080
so i did say that you need to enable

737
00:28:16,080 --> 00:28:18,480
google sheets api

738
00:28:18,480 --> 00:28:20,480
and create a service account these are

739
00:28:20,480 --> 00:28:24,000
really simple to do in gcp

740
00:28:24,480 --> 00:28:26,320
and an example of what it looks like

741
00:28:26,320 --> 00:28:28,480
with my

742
00:28:28,480 --> 00:28:30,640
python based uh

743
00:28:30,640 --> 00:28:32,799
c2 over google sheets so what you see up

744
00:28:32,799 --> 00:28:35,760
here in the top portion is just running

745
00:28:35,760 --> 00:28:38,960
the python client it is calling out to

746
00:28:38,960 --> 00:28:41,919
that google sheet uh if you're familiar

747
00:28:41,919 --> 00:28:43,360
with

748
00:28:43,360 --> 00:28:45,360
a google sheet

749
00:28:45,360 --> 00:28:48,480
the same way that you share

750
00:28:48,480 --> 00:28:50,399
a sheet with a person normally looks

751
00:28:50,399 --> 00:28:53,120
like a an email address right

752
00:28:53,120 --> 00:28:54,799
well so

753
00:28:54,799 --> 00:28:56,640
remember we talked about

754
00:28:56,640 --> 00:28:59,200
how the service accounts look like an

755
00:28:59,200 --> 00:29:01,520
email address we just take our service

756
00:29:01,520 --> 00:29:02,799
account

757
00:29:02,799 --> 00:29:03,760
id

758
00:29:03,760 --> 00:29:05,840
and share it with that

759
00:29:05,840 --> 00:29:07,919
and then our sheets here you know i've

760
00:29:07,919 --> 00:29:10,480
added a couple columns to make it

761
00:29:10,480 --> 00:29:12,960
just more manageable you see c2 command

762
00:29:12,960 --> 00:29:16,720
command output timestamp so the client

763
00:29:16,720 --> 00:29:18,480
reads from that cell

764
00:29:18,480 --> 00:29:20,960
very simply grabs the who mi executes it

765
00:29:20,960 --> 00:29:23,360
up here we see that it's root

766
00:29:23,360 --> 00:29:25,120
it'll automatically go to the next row

767
00:29:25,120 --> 00:29:27,120
so it catches seos release we get our

768
00:29:27,120 --> 00:29:28,799
situational awareness

769
00:29:28,799 --> 00:29:30,159
we see kind of

770
00:29:30,159 --> 00:29:31,919
the operating system where we're working

771
00:29:31,919 --> 00:29:32,720
from

772
00:29:32,720 --> 00:29:35,760
and we can do you know curl dash version

773
00:29:35,760 --> 00:29:37,919
and we see that there and it timestamps

774
00:29:37,919 --> 00:29:39,120
each of it

775
00:29:39,120 --> 00:29:40,559
each command that it runs which is

776
00:29:40,559 --> 00:29:41,919
always helpful the red team because you

777
00:29:41,919 --> 00:29:43,679
know we're trying to manage the red team

778
00:29:43,679 --> 00:29:44,799
log and

779
00:29:44,799 --> 00:29:46,640
be able to go back later and say you

780
00:29:46,640 --> 00:29:48,240
know what was the host and when did we

781
00:29:48,240 --> 00:29:53,159
execute it so this helps with that too

782
00:29:54,159 --> 00:29:58,159
we'll dive into lateral movement

783
00:29:58,399 --> 00:29:59,120
so

784
00:29:59,120 --> 00:30:03,200
by default every compute instance in gcp

785
00:30:03,200 --> 00:30:03,990
has a

786
00:30:03,990 --> 00:30:05,679
[Music]

787
00:30:05,679 --> 00:30:08,480
compute default service account attached

788
00:30:08,480 --> 00:30:10,320
to it

789
00:30:10,320 --> 00:30:12,000
now this can be customized this can be

790
00:30:12,000 --> 00:30:14,399
changed but just talking defaults

791
00:30:14,399 --> 00:30:16,640
in large environments

792
00:30:16,640 --> 00:30:18,799
especially you might find variations of

793
00:30:18,799 --> 00:30:21,919
this by default that account is it has

794
00:30:21,919 --> 00:30:24,559
the editor role

795
00:30:24,559 --> 00:30:26,799
however this does not mean that you know

796
00:30:26,799 --> 00:30:29,360
you can use all of those

797
00:30:29,360 --> 00:30:31,520
permissions

798
00:30:31,520 --> 00:30:34,640
so if the account has an active

799
00:30:34,640 --> 00:30:38,080
token the session you're trying to abuse

800
00:30:38,080 --> 00:30:40,720
what you see here is we can run a few

801
00:30:40,720 --> 00:30:42,559
simple gcloud

802
00:30:42,559 --> 00:30:44,960
commands and sort of orient this to the

803
00:30:44,960 --> 00:30:47,679
host that we're on so gcloud auth list

804
00:30:47,679 --> 00:30:51,120
project swiss projects get an iam policy

805
00:30:51,120 --> 00:30:54,080
and what you see in the screenshots is

806
00:30:54,080 --> 00:30:57,519
uh that being ran so you see in the the

807
00:30:57,519 --> 00:30:59,840
red box at the top that tells us that

808
00:30:59,840 --> 00:31:02,399
the host that we've landed on

809
00:31:02,399 --> 00:31:04,960
is using that compute default service

810
00:31:04,960 --> 00:31:06,399
account

811
00:31:06,399 --> 00:31:08,159
and then

812
00:31:08,159 --> 00:31:11,519
you can curl the metadata server from

813
00:31:11,519 --> 00:31:13,919
the compute instance

814
00:31:13,919 --> 00:31:15,840
just like you see here and that will

815
00:31:15,840 --> 00:31:18,559
come back with your access scopes so

816
00:31:18,559 --> 00:31:20,799
kind of two things determine what you

817
00:31:20,799 --> 00:31:22,000
can

818
00:31:22,000 --> 00:31:24,640
what apis you can query in gcp from say

819
00:31:24,640 --> 00:31:26,159
a compute instance

820
00:31:26,159 --> 00:31:27,519
and um

821
00:31:27,519 --> 00:31:30,080
so iam permissions are only half the

822
00:31:30,080 --> 00:31:32,320
battle what you see here is actually

823
00:31:32,320 --> 00:31:34,559
pretty restricted the access scopes

824
00:31:34,559 --> 00:31:36,720
determine you know what we can do with

825
00:31:36,720 --> 00:31:40,000
those other cloud resource apis

826
00:31:40,000 --> 00:31:42,399
by default it is pretty restricted so

827
00:31:42,399 --> 00:31:44,480
you see you know you have some read-only

828
00:31:44,480 --> 00:31:46,399
permissions for

829
00:31:46,399 --> 00:31:48,559
storage and monitoring

830
00:31:48,559 --> 00:31:50,640
trace append

831
00:31:50,640 --> 00:31:53,440
but if you land on a compute instance

832
00:31:53,440 --> 00:31:56,159
and you have that editor role and you

833
00:31:56,159 --> 00:31:58,399
query and find that you have access goes

834
00:31:58,399 --> 00:32:00,640
like for example if you see cloud dash

835
00:32:00,640 --> 00:32:02,080
platform

836
00:32:02,080 --> 00:32:04,240
or a whole lot of additional permissions

837
00:32:04,240 --> 00:32:06,799
like just got a lot better

838
00:32:06,799 --> 00:32:10,480
that means you have a lot more access

839
00:32:11,919 --> 00:32:13,440
so i wouldn't want to leave windows out

840
00:32:13,440 --> 00:32:15,679
gcp obviously supports windows not

841
00:32:15,679 --> 00:32:18,480
everyone is in a linux environment

842
00:32:18,480 --> 00:32:20,320
um here

843
00:32:20,320 --> 00:32:22,480
we are targeting a windows host let's

844
00:32:22,480 --> 00:32:24,320
say in our red team engagement you know

845
00:32:24,320 --> 00:32:26,080
all of the data that we're after

846
00:32:26,080 --> 00:32:28,640
whatever the objective is is on a

847
00:32:28,640 --> 00:32:30,960
windows host

848
00:32:30,960 --> 00:32:33,440
using the gcloud command we can use

849
00:32:33,440 --> 00:32:35,279
gcloud compute reset windows password

850
00:32:35,279 --> 00:32:37,039
give it the instance name

851
00:32:37,039 --> 00:32:40,559
the zone in the user account now if that

852
00:32:40,559 --> 00:32:42,880
service account does not exist we have

853
00:32:42,880 --> 00:32:45,039
the right iem permissions this is all we

854
00:32:45,039 --> 00:32:48,159
need to create that service account

855
00:32:48,159 --> 00:32:51,200
gcp will do this very easily for us and

856
00:32:51,200 --> 00:32:53,120
it will also drop it into the local

857
00:32:53,120 --> 00:32:55,279
windows administrator group it returns

858
00:32:55,279 --> 00:32:59,360
us the password that you see uh in here

859
00:32:59,360 --> 00:33:01,039
and we're good to go

860
00:33:01,039 --> 00:33:02,799
if we're targeting an account that does

861
00:33:02,799 --> 00:33:04,480
exist we know it exists from

862
00:33:04,480 --> 00:33:07,440
reconnaissance or some other means

863
00:33:07,440 --> 00:33:09,200
we do the same thing it'll change the

864
00:33:09,200 --> 00:33:11,360
password it'll give us a password and

865
00:33:11,360 --> 00:33:14,000
we're good to go

866
00:33:15,679 --> 00:33:17,279
so again

867
00:33:17,279 --> 00:33:19,760
i love it when we can take normal gcp

868
00:33:19,760 --> 00:33:21,600
functionality and use it for red team

869
00:33:21,600 --> 00:33:25,440
purposes what you see here gcp includes

870
00:33:25,440 --> 00:33:26,480
the

871
00:33:26,480 --> 00:33:27,760
ability to

872
00:33:27,760 --> 00:33:31,120
patch our gcp instances at scale you can

873
00:33:31,120 --> 00:33:33,039
set up patch jobs so that you know if

874
00:33:33,039 --> 00:33:34,640
you want to target one

875
00:33:34,640 --> 00:33:37,039
say linux compute instance you can if

876
00:33:37,039 --> 00:33:38,480
you want to target all linux compute

877
00:33:38,480 --> 00:33:40,960
instances you can you you know whatever

878
00:33:40,960 --> 00:33:43,200
subset if you're

879
00:33:43,200 --> 00:33:44,960
really gutsy

880
00:33:44,960 --> 00:33:48,240
not worried about triggering alarms

881
00:33:48,240 --> 00:33:49,519
you can tell it everything in the

882
00:33:49,519 --> 00:33:51,039
project

883
00:33:51,039 --> 00:33:52,799
but in this case what you see is we're

884
00:33:52,799 --> 00:33:55,279
using gcp hound to make it a little bit

885
00:33:55,279 --> 00:33:56,320
easier

886
00:33:56,320 --> 00:33:58,640
we give it an instance

887
00:33:58,640 --> 00:34:00,320
just like with normal

888
00:34:00,320 --> 00:34:02,880
gcp functionality we can specify a local

889
00:34:02,880 --> 00:34:06,159
file we can specify a file that's in a

890
00:34:06,159 --> 00:34:09,359
google cloud storage bucket

891
00:34:09,359 --> 00:34:11,440
and what we can do is we'll run our past

892
00:34:11,440 --> 00:34:13,760
job we'll patch the compute instance

893
00:34:13,760 --> 00:34:16,159
just like an admin would except we'll

894
00:34:16,159 --> 00:34:18,719
also run you know our code we can use a

895
00:34:18,719 --> 00:34:19,839
script

896
00:34:19,839 --> 00:34:21,679
apply it to the compute instance the

897
00:34:21,679 --> 00:34:23,918
only thing about it is is

898
00:34:23,918 --> 00:34:26,399
like with normal patching it probably

899
00:34:26,399 --> 00:34:29,199
will reboot the compute instance

900
00:34:29,199 --> 00:34:30,960
but it's fairly stealthy and so you know

901
00:34:30,960 --> 00:34:32,159
sometimes

902
00:34:32,159 --> 00:34:33,599
your admins will be like why did the

903
00:34:33,599 --> 00:34:37,520
host reboot oh well looks like it uh you

904
00:34:37,520 --> 00:34:38,239
know

905
00:34:38,239 --> 00:34:40,000
there was a cron job or something happen

906
00:34:40,000 --> 00:34:42,320
we see that what it did was it was uh

907
00:34:42,320 --> 00:34:44,560
just patching so that's why it rebooted

908
00:34:44,560 --> 00:34:46,560
we'll you know we'll make a note of it

909
00:34:46,560 --> 00:34:48,079
so you might get through even though it

910
00:34:48,079 --> 00:34:50,239
rebooted as a red team and what you see

911
00:34:50,239 --> 00:34:51,839
down here in the cloud console is you

912
00:34:51,839 --> 00:34:54,159
see the past job uh

913
00:34:54,159 --> 00:34:55,918
was successful

914
00:34:55,918 --> 00:34:58,240
so it patched the host from my past job

915
00:34:58,240 --> 00:34:59,760
patchy real good

916
00:34:59,760 --> 00:35:02,720
and uh it would have executed our uh our

917
00:35:02,720 --> 00:35:05,440
code as well uh pretty stuffy a stealthy

918
00:35:05,440 --> 00:35:07,760
method uh one thing i'll point out here

919
00:35:07,760 --> 00:35:10,400
is if you use this method

920
00:35:10,400 --> 00:35:13,200
and you supply a gcs

921
00:35:13,200 --> 00:35:15,440
location so you have your your script

922
00:35:15,440 --> 00:35:17,839
that you want to run on the host

923
00:35:17,839 --> 00:35:19,920
you need to turn on versioning this was

924
00:35:19,920 --> 00:35:22,480
not very clear to me at first

925
00:35:22,480 --> 00:35:24,720
and i kept wondering why the past job

926
00:35:24,720 --> 00:35:26,000
was failing

927
00:35:26,000 --> 00:35:29,119
if you call a script in gcs versioning

928
00:35:29,119 --> 00:35:30,480
needs to be turned on

929
00:35:30,480 --> 00:35:31,599
or

930
00:35:31,599 --> 00:35:34,880
you know it won't work

931
00:35:36,960 --> 00:35:37,839
so

932
00:35:37,839 --> 00:35:40,000
back to lateral movement in

933
00:35:40,000 --> 00:35:43,280
using ssh keys

934
00:35:43,839 --> 00:35:45,359
what you see here

935
00:35:45,359 --> 00:35:50,720
is uh we're using gcloud again uh we can

936
00:35:50,720 --> 00:35:53,599
we can modify the metadata for the

937
00:35:53,599 --> 00:35:54,960
project of course we can do that with

938
00:35:54,960 --> 00:35:57,200
the compute instance as well when we saw

939
00:35:57,200 --> 00:35:59,280
that

940
00:35:59,280 --> 00:36:00,720
if you're

941
00:36:00,720 --> 00:36:03,359
if you're using gcloud or gcp hound to

942
00:36:03,359 --> 00:36:05,119
add an ssh

943
00:36:05,119 --> 00:36:07,760
your ssh public key it's a compute

944
00:36:07,760 --> 00:36:08,720
instance

945
00:36:08,720 --> 00:36:10,720
you see that in

946
00:36:10,720 --> 00:36:12,960
the metadata for the compute instance in

947
00:36:12,960 --> 00:36:14,800
the cloud console in this case we're

948
00:36:14,800 --> 00:36:16,480
looking at the project

949
00:36:16,480 --> 00:36:19,520
uh what i point out here is

950
00:36:19,520 --> 00:36:22,400
what makes this particularly cool

951
00:36:22,400 --> 00:36:23,680
is

952
00:36:23,680 --> 00:36:26,079
if we add it to compute instance well we

953
00:36:26,079 --> 00:36:28,320
can ssh into that computing but if we

954
00:36:28,320 --> 00:36:29,920
add it to the project

955
00:36:29,920 --> 00:36:32,960
then we can ssh into every compute

956
00:36:32,960 --> 00:36:35,119
instance in that project

957
00:36:35,119 --> 00:36:36,000
now

958
00:36:36,000 --> 00:36:37,680
i'll point out that there's a way kind

959
00:36:37,680 --> 00:36:40,160
of to defend against this you can set in

960
00:36:40,160 --> 00:36:43,599
the compute instance to ignore keys

961
00:36:43,599 --> 00:36:45,359
but generally you're probably not going

962
00:36:45,359 --> 00:36:47,119
to find that to be the case

963
00:36:47,119 --> 00:36:48,000
and

964
00:36:48,000 --> 00:36:50,720
one other thing is if you add your ssh

965
00:36:50,720 --> 00:36:53,280
key to the project metadata then not

966
00:36:53,280 --> 00:36:56,400
only do you have ssh access into

967
00:36:56,400 --> 00:36:59,200
your running instances already but you

968
00:36:59,200 --> 00:37:01,200
know an admin goes in tomorrow the next

969
00:37:01,200 --> 00:37:03,280
day builds more compute instances you'll

970
00:37:03,280 --> 00:37:07,400
have access to those as well

971
00:37:09,599 --> 00:37:13,200
and i said earlier that um you know when

972
00:37:13,200 --> 00:37:15,359
doing c2 firewall rules may be

973
00:37:15,359 --> 00:37:17,680
restrictive may find yourself in a

974
00:37:17,680 --> 00:37:20,079
particular signific environment but this

975
00:37:20,079 --> 00:37:22,320
is kind of what it looks like by default

976
00:37:22,320 --> 00:37:24,079
so you may not

977
00:37:24,079 --> 00:37:26,000
and

978
00:37:26,000 --> 00:37:27,839
so you see if you just go build a

979
00:37:27,839 --> 00:37:30,160
standard project this is what your

980
00:37:30,160 --> 00:37:31,680
firewall

981
00:37:31,680 --> 00:37:33,359
firewall rules will look like so you see

982
00:37:33,359 --> 00:37:36,720
ingress rules here icmp all tcp ports

983
00:37:36,720 --> 00:37:38,480
all udp ports

984
00:37:38,480 --> 00:37:41,680
and default rules for 33 89 and 22 for

985
00:37:41,680 --> 00:37:42,800
ssh

986
00:37:42,800 --> 00:37:44,880
doesn't mean that admins

987
00:37:44,880 --> 00:37:47,119
can't restrict this tighten these rules

988
00:37:47,119 --> 00:37:49,119
up use least privilege of course they

989
00:37:49,119 --> 00:37:51,119
can of course they should

990
00:37:51,119 --> 00:37:53,839
we're there to help the defenders defend

991
00:37:53,839 --> 00:37:55,040
better

992
00:37:55,040 --> 00:37:56,480
but just to show you what it would look

993
00:37:56,480 --> 00:37:59,680
like by default

994
00:37:59,920 --> 00:38:00,800
and

995
00:38:00,800 --> 00:38:03,119
gcloud compute ssh

996
00:38:03,119 --> 00:38:04,960
this is a particularly

997
00:38:04,960 --> 00:38:06,480
nice feature

998
00:38:06,480 --> 00:38:07,920
in gcp

999
00:38:07,920 --> 00:38:09,760
so

1000
00:38:09,760 --> 00:38:12,960
you think about normally ssh into

1001
00:38:12,960 --> 00:38:15,040
typical linux box well you can use

1002
00:38:15,040 --> 00:38:17,599
gcloud compute ssh and you see up there

1003
00:38:17,599 --> 00:38:19,520
in the red box we give it the instance

1004
00:38:19,520 --> 00:38:21,280
name we give it the zone

1005
00:38:21,280 --> 00:38:22,720
assuming we have the right iam

1006
00:38:22,720 --> 00:38:24,480
permissions it will ask us for the pass

1007
00:38:24,480 --> 00:38:26,880
rate of print passphrase of our key

1008
00:38:26,880 --> 00:38:28,640
assuming we've set a passphrase for our

1009
00:38:28,640 --> 00:38:29,599
key

1010
00:38:29,599 --> 00:38:32,000
and we're in

1011
00:38:32,000 --> 00:38:33,920
we don't have to have an external ip

1012
00:38:33,920 --> 00:38:35,599
address this is a difference between

1013
00:38:35,599 --> 00:38:37,839
your traditional on-prem networks

1014
00:38:37,839 --> 00:38:39,920
versus the cloud

1015
00:38:39,920 --> 00:38:42,720
in this case you know on-prem network we

1016
00:38:42,720 --> 00:38:44,960
might need to set up some netting rule

1017
00:38:44,960 --> 00:38:46,640
firewall rule

1018
00:38:46,640 --> 00:38:49,119
to route from external to internal

1019
00:38:49,119 --> 00:38:51,760
google gcp takes care of this for us

1020
00:38:51,760 --> 00:38:54,480
assuming we have the right permissions

1021
00:38:54,480 --> 00:38:57,119
the instance i used in this example did

1022
00:38:57,119 --> 00:38:59,040
not have an external ip address or

1023
00:38:59,040 --> 00:39:01,520
ephemeral ip address only an internal

1024
00:39:01,520 --> 00:39:03,440
but i have the right id and permissions

1025
00:39:03,440 --> 00:39:05,839
to actually use this gcloud command and

1026
00:39:05,839 --> 00:39:08,560
i'm able to sshn one other thing that

1027
00:39:08,560 --> 00:39:10,400
i'll point out here is you see the red

1028
00:39:10,400 --> 00:39:14,640
box around the 35 235 340 ip address

1029
00:39:14,640 --> 00:39:17,040
well that's on my home ip address or

1030
00:39:17,040 --> 00:39:19,119
external ip that's google's ip address

1031
00:39:19,119 --> 00:39:21,359
so i get a little extra stealth out of

1032
00:39:21,359 --> 00:39:23,680
this i didn't have to do anything for it

1033
00:39:23,680 --> 00:39:25,440
if someone's looking at who logged in

1034
00:39:25,440 --> 00:39:26,640
and from where

1035
00:39:26,640 --> 00:39:30,240
well looks like i logged in from google

1036
00:39:32,160 --> 00:39:34,560
and last section we'll talk about data

1037
00:39:34,560 --> 00:39:37,520
exfiltration and decryption

1038
00:39:37,520 --> 00:39:39,200
the other sections you know those are

1039
00:39:39,200 --> 00:39:41,359
things that red teams have to do those

1040
00:39:41,359 --> 00:39:43,680
are the tactics that we typically walk

1041
00:39:43,680 --> 00:39:44,800
through to

1042
00:39:44,800 --> 00:39:46,079
eventually be able to action on

1043
00:39:46,079 --> 00:39:48,079
objectives

1044
00:39:48,079 --> 00:39:50,160
more times than not the real objective

1045
00:39:50,160 --> 00:39:51,920
you know has something to do with data

1046
00:39:51,920 --> 00:39:53,359
right so we're

1047
00:39:53,359 --> 00:39:54,800
trying to

1048
00:39:54,800 --> 00:39:57,119
test the assumption that a determinant

1049
00:39:57,119 --> 00:39:58,720
attacker could get

1050
00:39:58,720 --> 00:40:00,880
to wherever the data is kept

1051
00:40:00,880 --> 00:40:02,480
you know could they

1052
00:40:02,480 --> 00:40:04,480
read the data could they modify the data

1053
00:40:04,480 --> 00:40:06,880
could they exfil the data so

1054
00:40:06,880 --> 00:40:09,760
a lot of times it's all about the data

1055
00:40:09,760 --> 00:40:10,720
so

1056
00:40:10,720 --> 00:40:13,680
here uh you see we're using

1057
00:40:13,680 --> 00:40:15,599
gcp hound

1058
00:40:15,599 --> 00:40:17,119
a couple of different functions that

1059
00:40:17,119 --> 00:40:20,480
miyamoto have added to make this uh more

1060
00:40:20,480 --> 00:40:21,440
simple

1061
00:40:21,440 --> 00:40:25,440
less to type so gcp helm bucket list

1062
00:40:25,440 --> 00:40:27,839
an x fill bucket so

1063
00:40:27,839 --> 00:40:29,119
again you're working in a big

1064
00:40:29,119 --> 00:40:31,119
environment could be you know hundreds

1065
00:40:31,119 --> 00:40:32,800
thousands of buckets could be lots of

1066
00:40:32,800 --> 00:40:36,160
objects in those buckets uh you know

1067
00:40:36,160 --> 00:40:37,920
a lot of times where teams are drinking

1068
00:40:37,920 --> 00:40:39,920
from a fire hose you know there's so so

1069
00:40:39,920 --> 00:40:42,560
much to go through red teams you know

1070
00:40:42,560 --> 00:40:44,480
aren't exactly like a nation state where

1071
00:40:44,480 --> 00:40:47,040
you know you think about a

1072
00:40:47,040 --> 00:40:48,720
red team opera

1073
00:40:48,720 --> 00:40:51,119
airplane hangar uh usually red teams and

1074
00:40:51,119 --> 00:40:53,040
corporate environments are pretty small

1075
00:40:53,040 --> 00:40:56,720
and uh it's tough right so gcp hounds

1076
00:40:56,720 --> 00:41:00,000
through that data a lot more quickly so

1077
00:41:00,000 --> 00:41:02,079
you see where uh we think we've come

1078
00:41:02,079 --> 00:41:03,440
across a project

1079
00:41:03,440 --> 00:41:05,680
that project looks interesting we can

1080
00:41:05,680 --> 00:41:07,119
use bucket list

1081
00:41:07,119 --> 00:41:09,760
gcp hound will check that our session is

1082
00:41:09,760 --> 00:41:12,319
still valid make sure we're still logged

1083
00:41:12,319 --> 00:41:14,720
in and it will pull a list and it will

1084
00:41:14,720 --> 00:41:17,040
start querying everything

1085
00:41:17,040 --> 00:41:19,680
in gcs for that project

1086
00:41:19,680 --> 00:41:20,400
and

1087
00:41:20,400 --> 00:41:22,880
what you see here is in my test

1088
00:41:22,880 --> 00:41:24,400
environment that i've

1089
00:41:24,400 --> 00:41:26,079
created

1090
00:41:26,079 --> 00:41:28,000
it is pulling all of the available

1091
00:41:28,000 --> 00:41:31,359
buckets and downloading them to my local

1092
00:41:31,359 --> 00:41:33,359
machine

1093
00:41:33,359 --> 00:41:35,680
and uh so there's your listing and

1094
00:41:35,680 --> 00:41:37,520
there's your x filling

1095
00:41:37,520 --> 00:41:40,319
all made simple

1096
00:41:40,400 --> 00:41:41,920
of course you know

1097
00:41:41,920 --> 00:41:43,359
the data may be

1098
00:41:43,359 --> 00:41:45,359
encrypted we need to decrypt it

1099
00:41:45,359 --> 00:41:47,280
otherwise it's useless

1100
00:41:47,280 --> 00:41:50,079
in google you have kms

1101
00:41:50,079 --> 00:41:51,920
you know that typically helps you

1102
00:41:51,920 --> 00:41:53,839
encrypt the data

1103
00:41:53,839 --> 00:41:56,560
gcloud of course has commands to both

1104
00:41:56,560 --> 00:41:59,200
encrypt and decrypt the data to you know

1105
00:41:59,200 --> 00:42:03,280
store your keys create your key rings

1106
00:42:03,280 --> 00:42:06,000
but what you see up here although a lot

1107
00:42:06,000 --> 00:42:08,400
of it is redacted of course we can do

1108
00:42:08,400 --> 00:42:10,240
you know traditional things like when we

1109
00:42:10,240 --> 00:42:12,400
cap the data and we see

1110
00:42:12,400 --> 00:42:15,200
we would see that the data is encrypted

1111
00:42:15,200 --> 00:42:18,480
we can type out these very long tcp from

1112
00:42:18,480 --> 00:42:20,480
key cloud commands

1113
00:42:20,480 --> 00:42:22,720
and they work of course

1114
00:42:22,720 --> 00:42:25,119
and once we find the right key from the

1115
00:42:25,119 --> 00:42:28,000
right key ring

1116
00:42:28,160 --> 00:42:30,720
we can decrypt the data again if you're

1117
00:42:30,720 --> 00:42:32,480
in a very large environment

1118
00:42:32,480 --> 00:42:34,319
it would take a lot of time

1119
00:42:34,319 --> 00:42:37,119
gcp helm root decrypt we just need to

1120
00:42:37,119 --> 00:42:39,680
give it the project id give it the key

1121
00:42:39,680 --> 00:42:44,079
ring region and the file that we want

1122
00:42:44,079 --> 00:42:45,359
so it doesn't matter how big the

1123
00:42:45,359 --> 00:42:48,400
environment is uh it again checks to see

1124
00:42:48,400 --> 00:42:49,920
that the session is valid that we're

1125
00:42:49,920 --> 00:42:53,119
logged in it will go out and

1126
00:42:53,119 --> 00:42:55,119
based on that those few parameters we

1127
00:42:55,119 --> 00:42:57,760
had to specify we gave it the

1128
00:42:57,760 --> 00:42:59,520
the key ring and you see with the green

1129
00:42:59,520 --> 00:43:01,200
box around it's trying the keys from

1130
00:43:01,200 --> 00:43:04,160
that key re and it will try every key

1131
00:43:04,160 --> 00:43:06,240
until it finds the right key for the

1132
00:43:06,240 --> 00:43:08,800
data you want decrypted once it does you

1133
00:43:08,800 --> 00:43:11,359
see decryption successful and it stores

1134
00:43:11,359 --> 00:43:13,599
the output there locally for us

1135
00:43:13,599 --> 00:43:14,560
and

1136
00:43:14,560 --> 00:43:17,839
of course i put a just a b in that file

1137
00:43:17,839 --> 00:43:20,319
but basically showing that the file was

1138
00:43:20,319 --> 00:43:23,839
successfully decrypted

1139
00:43:25,440 --> 00:43:28,000
and so just kind of closing remarks uh

1140
00:43:28,000 --> 00:43:30,079
we went through things that i think are

1141
00:43:30,079 --> 00:43:31,359
practical

1142
00:43:31,359 --> 00:43:32,560
um

1143
00:43:32,560 --> 00:43:34,400
things that red teams can

1144
00:43:34,400 --> 00:43:36,560
do to live off the cloud take the

1145
00:43:36,560 --> 00:43:39,200
resources that are there and use them

1146
00:43:39,200 --> 00:43:42,400
from a red team's perspective

1147
00:43:42,400 --> 00:43:46,000
we talked a lot you know around compute

1148
00:43:46,000 --> 00:43:48,400
a little bit around like kms and

1149
00:43:48,400 --> 00:43:49,760
encryption

1150
00:43:49,760 --> 00:43:52,000
gcs there's a lot more right that we

1151
00:43:52,000 --> 00:43:54,880
didn't cover this was just a subset

1152
00:43:54,880 --> 00:43:56,800
gcp is really powerful a lot of

1153
00:43:56,800 --> 00:43:58,480
resources

1154
00:43:58,480 --> 00:44:00,079
and functions you think about cloud

1155
00:44:00,079 --> 00:44:01,760
function secret management firewall

1156
00:44:01,760 --> 00:44:03,440
policies we really just scratch the

1157
00:44:03,440 --> 00:44:04,560
surface

1158
00:44:04,560 --> 00:44:06,319
but hopefully those examples were very

1159
00:44:06,319 --> 00:44:07,920
practical and down to earth and if

1160
00:44:07,920 --> 00:44:09,599
you're starting a red team engagement in

1161
00:44:09,599 --> 00:44:12,480
gcp maybe you haven't done one before

1162
00:44:12,480 --> 00:44:14,000
or maybe you have and you just wanted to

1163
00:44:14,000 --> 00:44:16,480
see you know what's an approach that you

1164
00:44:16,480 --> 00:44:18,079
know another red team might take

1165
00:44:18,079 --> 00:44:21,440
hopefully that's been helpful

1166
00:44:21,440 --> 00:44:23,760
and kind of just thinking about cloud

1167
00:44:23,760 --> 00:44:25,280
security and i talked about g-cloud

1168
00:44:25,280 --> 00:44:27,359
compute ssh how you didn't have to have

1169
00:44:27,359 --> 00:44:30,480
an external ip address um but you would

1170
00:44:30,480 --> 00:44:33,040
still in some cases uh it would create

1171
00:44:33,040 --> 00:44:36,000
an iap tunnel for you allow you to ssh

1172
00:44:36,000 --> 00:44:38,160
in

1173
00:44:38,319 --> 00:44:40,160
you know we we have to kind of think

1174
00:44:40,160 --> 00:44:42,560
about the security issues we had in

1175
00:44:42,560 --> 00:44:44,720
on-prem traditional networks and how

1176
00:44:44,720 --> 00:44:46,880
they might be the same in the cloud or

1177
00:44:46,880 --> 00:44:49,040
they might be a little bit different

1178
00:44:49,040 --> 00:44:51,040
our job as a red team is to validate

1179
00:44:51,040 --> 00:44:53,200
assumptions don't just assume that the

1180
00:44:53,200 --> 00:44:54,960
security controls that we're helping to

1181
00:44:54,960 --> 00:44:57,359
build helping to mature

1182
00:44:57,359 --> 00:44:58,880
uh work

1183
00:44:58,880 --> 00:45:00,079
of course

1184
00:45:00,079 --> 00:45:02,480
not picking on security vendors

1185
00:45:02,480 --> 00:45:04,160
but they always work according to the

1186
00:45:04,160 --> 00:45:06,240
security vendors

1187
00:45:06,240 --> 00:45:08,079
but we have to test those

1188
00:45:08,079 --> 00:45:10,560
we can't take it for granted because we

1189
00:45:10,560 --> 00:45:12,480
want to make those security controls

1190
00:45:12,480 --> 00:45:15,760
stronger and validation is part of that

1191
00:45:15,760 --> 00:45:18,079
so be careful cloud infrastructure may

1192
00:45:18,079 --> 00:45:21,040
not be any more secure than the on-prem

1193
00:45:21,040 --> 00:45:23,520
version that you had before the cloud

1194
00:45:23,520 --> 00:45:25,920
provider may or they may not provide the

1195
00:45:25,920 --> 00:45:28,480
basic security controls you know ipy

1196
00:45:28,480 --> 00:45:30,880
listing very basic been around a long

1197
00:45:30,880 --> 00:45:33,040
time don't assume that you know that

1198
00:45:33,040 --> 00:45:35,200
it's just taken care of for you or that

1199
00:45:35,200 --> 00:45:37,359
it even you know can be done in some

1200
00:45:37,359 --> 00:45:40,400
cases and of course you know it's 2022 a

1201
00:45:40,400 --> 00:45:42,960
lot of these things seem like stuff that

1202
00:45:42,960 --> 00:45:44,480
you know we as a security industry

1203
00:45:44,480 --> 00:45:47,119
should have fixed a long time ago

1204
00:45:47,119 --> 00:45:49,040
but not necessarily so you assume that

1205
00:45:49,040 --> 00:45:51,520
any car you buy in 2022

1206
00:45:51,520 --> 00:45:53,440
comes with airbags

1207
00:45:53,440 --> 00:45:55,599
we can't assume just because it's 2022

1208
00:45:55,599 --> 00:45:57,359
and we're in the cloud the things are

1209
00:45:57,359 --> 00:45:59,920
just naturally by default more secure

1210
00:45:59,920 --> 00:46:02,720
you heard me talk about a lot of

1211
00:46:02,720 --> 00:46:05,200
configurations in in

1212
00:46:05,200 --> 00:46:06,880
the way that it's set up when it's

1213
00:46:06,880 --> 00:46:09,920
default and how it can be abused well

1214
00:46:09,920 --> 00:46:13,119
just don't take anything for granted

1215
00:46:13,119 --> 00:46:15,200
and uh with that i appreciate everyone

1216
00:46:15,200 --> 00:46:17,760
coming out and uh listening to the talk

1217
00:46:17,760 --> 00:46:20,800
allowing me to share some information um

1218
00:46:20,800 --> 00:46:22,560
hopefully you found it helpful big

1219
00:46:22,560 --> 00:46:25,359
thanks to besides sf uh for allowing me

1220
00:46:25,359 --> 00:46:27,839
to share as well and if we have any time

1221
00:46:27,839 --> 00:46:30,079
left happy to take questions or if you'd

1222
00:46:30,079 --> 00:46:31,200
like to

1223
00:46:31,200 --> 00:46:34,380
chat afterwards happy to do that as well

1224
00:46:34,380 --> 00:46:42,209
[Applause]

1225
00:46:44,880 --> 00:46:46,960
yeah

1226
00:46:46,960 --> 00:46:48,720
i saw one of the first inspectors was

1227
00:46:48,720 --> 00:46:50,640
creating a new service account are there

1228
00:46:50,640 --> 00:46:52,319
any artifacts like email artifacts that

1229
00:46:52,319 --> 00:46:55,800
happen when those

1230
00:47:00,240 --> 00:47:01,119
yeah

1231
00:47:01,119 --> 00:47:04,240
so the question was is when you're using

1232
00:47:04,240 --> 00:47:06,240
or creating service accounts

1233
00:47:06,240 --> 00:47:08,319
potentially for persistence

1234
00:47:08,319 --> 00:47:10,720
are there any artifacts left around

1235
00:47:10,720 --> 00:47:13,040
such as like an email you saw on one of

1236
00:47:13,040 --> 00:47:15,520
the screenshots where uh you get the

1237
00:47:15,520 --> 00:47:18,800
email uh in one case um to accept you

1238
00:47:18,800 --> 00:47:21,440
know that invite um

1239
00:47:21,440 --> 00:47:23,520
from what i've seen it's actually an

1240
00:47:23,520 --> 00:47:26,880
option so you can tell it not to

1241
00:47:26,880 --> 00:47:28,000
if you're trying to be particularly

1242
00:47:28,000 --> 00:47:30,720
stealthy and not generate that email

1243
00:47:30,720 --> 00:47:32,960
or you can generate the email

1244
00:47:32,960 --> 00:47:34,000
is it

1245
00:47:34,000 --> 00:47:36,480
an artifact in that case i would say it

1246
00:47:36,480 --> 00:47:39,599
is especially in the case where let's

1247
00:47:39,599 --> 00:47:42,000
say that you've compromised an employee

1248
00:47:42,000 --> 00:47:43,920
account and you have access to their

1249
00:47:43,920 --> 00:47:46,000
email and you generate that artifact now

1250
00:47:46,000 --> 00:47:48,240
an attacker could set up a rule so that

1251
00:47:48,240 --> 00:47:51,119
that email goes into trash very quickly

1252
00:47:51,119 --> 00:47:52,640
but that's still an artifact right

1253
00:47:52,640 --> 00:47:54,319
absolutely and you could potentially a

1254
00:47:54,319 --> 00:47:55,680
word on that

1255
00:47:55,680 --> 00:47:59,799
cool thank you yep

1256
00:48:06,240 --> 00:48:08,480
thanks so much um i have a question

1257
00:48:08,480 --> 00:48:11,599
about the os patching management i'm not

1258
00:48:11,599 --> 00:48:13,280
that familiar with that feature so i'm

1259
00:48:13,280 --> 00:48:15,599
just wondering is there possible to for

1260
00:48:15,599 --> 00:48:18,160
the admin to configure to check

1261
00:48:18,160 --> 00:48:21,599
integrity or often authenticity of that

1262
00:48:21,599 --> 00:48:23,520
patch

1263
00:48:23,520 --> 00:48:25,440
to avoid the attack that you just

1264
00:48:25,440 --> 00:48:27,920
explained

1265
00:48:27,920 --> 00:48:30,160
so the the question is is could an admin

1266
00:48:30,160 --> 00:48:31,359
potentially

1267
00:48:31,359 --> 00:48:32,160
check

1268
00:48:32,160 --> 00:48:34,400
the integrity of the patch

1269
00:48:34,400 --> 00:48:35,760
um

1270
00:48:35,760 --> 00:48:37,359
so

1271
00:48:37,359 --> 00:48:39,839
i believe that is the case

1272
00:48:39,839 --> 00:48:42,960
however it becomes um in my mind

1273
00:48:42,960 --> 00:48:47,359
uh detection versus prevention so

1274
00:48:47,359 --> 00:48:48,559
uh

1275
00:48:48,559 --> 00:48:50,720
when we create a a script that we're

1276
00:48:50,720 --> 00:48:52,319
going to attach to the compute instance

1277
00:48:52,319 --> 00:48:55,119
and run after the the patch job uh you

1278
00:48:55,119 --> 00:48:58,640
know completes um

1279
00:48:58,960 --> 00:49:00,960
as far as i know you

1280
00:49:00,960 --> 00:49:03,839
would not be able to

1281
00:49:03,839 --> 00:49:06,800
by default uh functionality that's built

1282
00:49:06,800 --> 00:49:08,640
in be able to detect

1283
00:49:08,640 --> 00:49:10,880
or be able to check the integrity of the

1284
00:49:10,880 --> 00:49:13,200
script that you're running without kind

1285
00:49:13,200 --> 00:49:15,599
of creating something custom as far as i

1286
00:49:15,599 --> 00:49:17,839
know

1287
00:49:17,920 --> 00:49:19,920
in the example that you saw

1288
00:49:19,920 --> 00:49:22,640
i did not tamper with any of the actual

1289
00:49:22,640 --> 00:49:24,800
rpms in the past job that were pulled

1290
00:49:24,800 --> 00:49:29,040
down i just created my own

1291
00:49:29,280 --> 00:49:33,040
pre and post patch uh script to run so

1292
00:49:33,040 --> 00:49:35,440
as an attacker probably what i would do

1293
00:49:35,440 --> 00:49:37,920
is then go and see if i could remove

1294
00:49:37,920 --> 00:49:40,160
that pass job of course as red teamers i

1295
00:49:40,160 --> 00:49:41,280
don't really like to remove the

1296
00:49:41,280 --> 00:49:42,880
artifacts i want to leave it there for

1297
00:49:42,880 --> 00:49:45,040
the blue team to potentially investigate

1298
00:49:45,040 --> 00:49:46,319
hopefully fine

1299
00:49:46,319 --> 00:49:48,559
but the best i can answer your question

1300
00:49:48,559 --> 00:49:50,240
i don't think it would be an integrity

1301
00:49:50,240 --> 00:49:51,200
issue

1302
00:49:51,200 --> 00:49:53,119
unless you built something it could be

1303
00:49:53,119 --> 00:49:55,280
wrong but that's what i think how about

1304
00:49:55,280 --> 00:49:57,760
the authenticity like do is that

1305
00:49:57,760 --> 00:49:59,599
possible to configure so for example you

1306
00:49:59,599 --> 00:50:02,559
need to init some signature uh in a

1307
00:50:02,559 --> 00:50:04,640
patch and check the signature to make

1308
00:50:04,640 --> 00:50:08,400
sure that it's from the legit or region

1309
00:50:08,400 --> 00:50:10,960
so if if you're uh wanting to check the

1310
00:50:10,960 --> 00:50:13,280
integrity of like for example the rpms

1311
00:50:13,280 --> 00:50:16,400
will be pulled down and installed yes

1312
00:50:16,400 --> 00:50:19,520
uh you can check the integrity of your

1313
00:50:19,520 --> 00:50:21,200
rpms you can limit

1314
00:50:21,200 --> 00:50:22,640
uh just

1315
00:50:22,640 --> 00:50:24,400
you know typical patching

1316
00:50:24,400 --> 00:50:26,480
you would want to do that anyway or i

1317
00:50:26,480 --> 00:50:28,559
would want to do that so that no rpms

1318
00:50:28,559 --> 00:50:31,200
got installed it didn't come from

1319
00:50:31,200 --> 00:50:32,720
validated

1320
00:50:32,720 --> 00:50:34,400
verified

1321
00:50:34,400 --> 00:50:39,800
rpm repos yeah thank you

