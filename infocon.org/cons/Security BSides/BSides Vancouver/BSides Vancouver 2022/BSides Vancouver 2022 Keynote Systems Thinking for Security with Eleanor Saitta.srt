1
00:00:00,240 --> 00:00:03,439
day two of b-sides vancouver uh i'm

2
00:00:03,439 --> 00:00:05,839
really really excited to have eleanor

3
00:00:05,839 --> 00:00:08,400
saeeta here with us

4
00:00:08,400 --> 00:00:10,160
and um

5
00:00:10,160 --> 00:00:12,719
sorry getting distracted here uh

6
00:00:12,719 --> 00:00:15,120
she is the principal security consultant

7
00:00:15,120 --> 00:00:17,199
for systems

8
00:00:17,199 --> 00:00:19,439
structure limited which is a boutique

9
00:00:19,439 --> 00:00:21,199
security consultancy that deals almost

10
00:00:21,199 --> 00:00:24,000
exclusively with fractional cso services

11
00:00:24,000 --> 00:00:27,519
for series a b and c internet companies

12
00:00:27,519 --> 00:00:28,800
she has been in

13
00:00:28,800 --> 00:00:31,279
for 20 years with uh

14
00:00:31,279 --> 00:00:33,440
consultants such as io active and bishop

15
00:00:33,440 --> 00:00:34,719
fox

16
00:00:34,719 --> 00:00:37,200
did a stint as the security architect

17
00:00:37,200 --> 00:00:38,640
for etsy

18
00:00:38,640 --> 00:00:41,120
and has spent five years supporting ngos

19
00:00:41,120 --> 00:00:42,879
that were targeted by nation states so

20
00:00:42,879 --> 00:00:44,399
as a wealth of

21
00:00:44,399 --> 00:00:46,640
experience to share with us and uh i'm

22
00:00:46,640 --> 00:00:48,239
just going to hand it off to her and

23
00:00:48,239 --> 00:00:50,320
thank you very much

24
00:00:50,320 --> 00:00:52,960
thanks cindy i'm super happy to be here

25
00:00:52,960 --> 00:00:54,239
um so

26
00:00:54,239 --> 00:00:56,239
today i'm mostly going to talk about

27
00:00:56,239 --> 00:00:58,800
systems thinking for security and we'll

28
00:00:58,800 --> 00:01:00,399
get into a little bit in a second what

29
00:01:00,399 --> 00:01:02,000
that means um

30
00:01:02,000 --> 00:01:04,720
but uh because it's been at least for uh

31
00:01:04,720 --> 00:01:06,240
the americans in the room an interesting

32
00:01:06,240 --> 00:01:07,439
news day

33
00:01:07,439 --> 00:01:08,880
i've got some other stuff that i want to

34
00:01:08,880 --> 00:01:10,400
talk through a little bit as well just

35
00:01:10,400 --> 00:01:11,600
uh because

36
00:01:11,600 --> 00:01:13,600
i don't know it's not really not really

37
00:01:13,600 --> 00:01:16,000
in the headspace to just give a

38
00:01:16,000 --> 00:01:18,080
a straight uh straight systems theory

39
00:01:18,080 --> 00:01:19,439
talk today

40
00:01:19,439 --> 00:01:23,119
so um when i say system in the context

41
00:01:23,119 --> 00:01:24,400
of

42
00:01:24,400 --> 00:01:26,400
really most conversations but especially

43
00:01:26,400 --> 00:01:29,040
talking to security folks i'm talking

44
00:01:29,040 --> 00:01:31,759
about a system that exists to do

45
00:01:31,759 --> 00:01:34,000
something in the world and so this means

46
00:01:34,000 --> 00:01:36,159
yes you know a set of applications yes a

47
00:01:36,159 --> 00:01:38,560
set of computers etc but it's also a set

48
00:01:38,560 --> 00:01:40,240
of business processes right it's a set

49
00:01:40,240 --> 00:01:43,119
of all of the things around that system

50
00:01:43,119 --> 00:01:45,119
that actually make it deliver outcomes

51
00:01:45,119 --> 00:01:47,680
in the real world not just kind of this

52
00:01:47,680 --> 00:01:50,159
thing off to the side that's um

53
00:01:50,159 --> 00:01:51,840
you know that's just doing a technical

54
00:01:51,840 --> 00:01:53,680
thing it's about the thing in the world

55
00:01:53,680 --> 00:01:56,640
now to be useful a system needs to have

56
00:01:56,640 --> 00:01:57,920
certain properties and these are

57
00:01:57,920 --> 00:02:00,640
properties that come from the entire

58
00:02:00,640 --> 00:02:03,520
system operating together in a specific

59
00:02:03,520 --> 00:02:06,799
context um and just jump ahead and look

60
00:02:06,799 --> 00:02:09,199
at so these are these are properties

61
00:02:09,199 --> 00:02:11,520
like um correctness right if the system

62
00:02:11,520 --> 00:02:13,120
doesn't do the thing that you think it's

63
00:02:13,120 --> 00:02:16,000
going to do then it's probably not going

64
00:02:16,000 --> 00:02:18,000
to you know going to have the function

65
00:02:18,000 --> 00:02:20,000
in the world that you expect it to

66
00:02:20,000 --> 00:02:22,720
um performance right if a system isn't

67
00:02:22,720 --> 00:02:25,840
sufficiently performative for um

68
00:02:25,840 --> 00:02:27,120
the you know for the problem it's trying

69
00:02:27,120 --> 00:02:28,319
to solve for the money that you can

70
00:02:28,319 --> 00:02:31,280
afford to run it etc then you know you

71
00:02:31,280 --> 00:02:32,959
have to fix that right you have to have

72
00:02:32,959 --> 00:02:34,000
um

73
00:02:34,000 --> 00:02:35,680
you know you have to have it have enough

74
00:02:35,680 --> 00:02:38,480
performance enough efficiency etc to

75
00:02:38,480 --> 00:02:40,000
actually meet the problem domain and

76
00:02:40,000 --> 00:02:41,920
accomplish those goals you probably need

77
00:02:41,920 --> 00:02:44,560
to know what the system is doing um

78
00:02:44,560 --> 00:02:46,720
and from our perspective you need it to

79
00:02:46,720 --> 00:02:48,959
be secure um and also resilience we'll

80
00:02:48,959 --> 00:02:50,160
talk about resilience a little bit more

81
00:02:50,160 --> 00:02:51,200
later because that one's a bit more

82
00:02:51,200 --> 00:02:53,280
complicated but so all of these are

83
00:02:53,280 --> 00:02:56,000
properties that emerge from the entire

84
00:02:56,000 --> 00:02:58,159
system running in a context right you

85
00:02:58,159 --> 00:02:59,360
can't say

86
00:02:59,360 --> 00:03:00,239
that

87
00:03:00,239 --> 00:03:02,159
um you know the correctness of one

88
00:03:02,159 --> 00:03:04,000
component in a system is not the

89
00:03:04,000 --> 00:03:06,080
correctness of the whole system and the

90
00:03:06,080 --> 00:03:08,640
correctness of the technical system is

91
00:03:08,640 --> 00:03:11,120
not the correctness of the system

92
00:03:11,120 --> 00:03:12,800
operating in the world

93
00:03:12,800 --> 00:03:15,440
right that's the you know that requires

94
00:03:15,440 --> 00:03:17,440
the human parts of the system as well as

95
00:03:17,440 --> 00:03:19,200
just the digital parts

96
00:03:19,200 --> 00:03:21,040
um and all of these things are things

97
00:03:21,040 --> 00:03:22,800
which require unified effort across a

98
00:03:22,800 --> 00:03:25,120
bunch of teams to deliver right no one

99
00:03:25,120 --> 00:03:28,080
team can deliver efficiency no one team

100
00:03:28,080 --> 00:03:30,400
can deliver performance etc all of this

101
00:03:30,400 --> 00:03:31,760
stuff is is

102
00:03:31,760 --> 00:03:35,440
hopefully fairly obvious um

103
00:03:35,440 --> 00:03:38,159
so now let's talk about what security is

104
00:03:38,159 --> 00:03:40,159
a lot of us are kind of coming from a

105
00:03:40,159 --> 00:03:41,599
mindset where

106
00:03:41,599 --> 00:03:43,200
security is

107
00:03:43,200 --> 00:03:45,680
a specific property of technical systems

108
00:03:45,680 --> 00:03:48,480
right you can say that you know oh this

109
00:03:48,480 --> 00:03:51,280
uh this web front end is secure it has

110
00:03:51,280 --> 00:03:53,599
no cross-site scripting attacks except i

111
00:03:53,599 --> 00:03:55,120
think that that's actually not a very

112
00:03:55,120 --> 00:03:58,159
useful understanding of security

113
00:03:58,159 --> 00:04:00,000
when we look at the work that we're

114
00:04:00,000 --> 00:04:02,080
actually doing right because what we're

115
00:04:02,080 --> 00:04:04,319
actually trying to do with the system is

116
00:04:04,319 --> 00:04:06,879
to enable some set of people to

117
00:04:06,879 --> 00:04:09,200
predictably predictably accomplish their

118
00:04:09,200 --> 00:04:11,360
goals in the world right that's what we

119
00:04:11,360 --> 00:04:12,640
actually care about we don't actually

120
00:04:12,640 --> 00:04:14,799
care about cross-site scripting we care

121
00:04:14,799 --> 00:04:17,918
about what this thing actually does and

122
00:04:17,918 --> 00:04:19,358
we expect them to be able to do so in

123
00:04:19,358 --> 00:04:21,440
the face of a set of a chosen set of

124
00:04:21,440 --> 00:04:25,120
adversaries i say chosen set because um

125
00:04:25,120 --> 00:04:27,280
you know you probably are not going to

126
00:04:27,280 --> 00:04:29,520
in most cases build a system that says

127
00:04:29,520 --> 00:04:31,360
no one in the world can possibly

128
00:04:31,360 --> 00:04:32,639
interact with this in a way that we

129
00:04:32,639 --> 00:04:34,160
don't want because you don't have the

130
00:04:34,160 --> 00:04:36,240
budget for that right you're looking at

131
00:04:36,240 --> 00:04:38,160
the set of adversaries that you think

132
00:04:38,160 --> 00:04:39,040
are

133
00:04:39,040 --> 00:04:40,800
relevant to the work that you're doing

134
00:04:40,800 --> 00:04:42,880
are likely to actually be attacking you

135
00:04:42,880 --> 00:04:44,400
and also the set of adversaries that you

136
00:04:44,400 --> 00:04:46,240
can afford to defend against because you

137
00:04:46,240 --> 00:04:48,720
can't afford to defend against everyone

138
00:04:48,720 --> 00:04:50,479
um

139
00:04:50,479 --> 00:04:53,600
and oh did that ah did that font get cut

140
00:04:53,600 --> 00:04:57,360
off yeah it did um anyway so predictably

141
00:04:57,360 --> 00:04:59,520
prevents that chosen set of adversaries

142
00:04:59,520 --> 00:05:00,320
from

143
00:05:00,320 --> 00:05:03,039
uh accomplishing a separate set of goals

144
00:05:03,039 --> 00:05:05,199
right so this is um you know an

145
00:05:05,199 --> 00:05:06,960
adversary doesn't care about stopping

146
00:05:06,960 --> 00:05:09,120
your users from doing anything but they

147
00:05:09,120 --> 00:05:12,160
want to use your system to mine bitcoin

148
00:05:12,160 --> 00:05:13,520
or do whatever it is they're doing this

149
00:05:13,520 --> 00:05:16,080
week right so it's it's both the

150
00:05:16,080 --> 00:05:17,440
positive

151
00:05:17,440 --> 00:05:19,680
you know the uh the chosen the chosen

152
00:05:19,680 --> 00:05:22,479
users can accomplish their goals and a

153
00:05:22,479 --> 00:05:25,280
negative the uh you know other people

154
00:05:25,280 --> 00:05:26,880
can't accomplish their goals using your

155
00:05:26,880 --> 00:05:29,039
system

156
00:05:29,039 --> 00:05:31,199
and so and this is a this is a set of

157
00:05:31,199 --> 00:05:32,720
this is a definition of security that we

158
00:05:32,720 --> 00:05:35,280
can actually reason about more directly

159
00:05:35,280 --> 00:05:36,240
um

160
00:05:36,240 --> 00:05:39,280
you know we can say is a system secure

161
00:05:39,280 --> 00:05:42,080
with respect to a set of goals even if

162
00:05:42,080 --> 00:05:44,000
individual components are compromised

163
00:05:44,000 --> 00:05:44,880
right

164
00:05:44,880 --> 00:05:45,840
um

165
00:05:45,840 --> 00:05:48,320
and reliability and predictability and

166
00:05:48,320 --> 00:05:51,600
correctness here become interesting um

167
00:05:51,600 --> 00:05:53,039
you know where we know that all

168
00:05:53,039 --> 00:05:55,199
components eventually probably have some

169
00:05:55,199 --> 00:05:56,960
set of vulnerabilities in them and

170
00:05:56,960 --> 00:05:59,280
that's fine well or it has to be fine

171
00:05:59,280 --> 00:06:00,880
because we don't have another option

172
00:06:00,880 --> 00:06:03,600
right so another way of saying this is

173
00:06:03,600 --> 00:06:05,199
that it's about reliability and

174
00:06:05,199 --> 00:06:07,199
correctness of outcomes in the presence

175
00:06:07,199 --> 00:06:09,039
of an adversary and it's also about

176
00:06:09,039 --> 00:06:10,800
defense of those outcomes right because

177
00:06:10,800 --> 00:06:12,880
it's not you know this is the security

178
00:06:12,880 --> 00:06:15,600
is a process etc um

179
00:06:15,600 --> 00:06:16,880
you know so there's there's kind of

180
00:06:16,880 --> 00:06:19,280
again there's two components here

181
00:06:19,280 --> 00:06:20,800
and

182
00:06:20,800 --> 00:06:22,800
this is interesting when we start

183
00:06:22,800 --> 00:06:25,600
talking about resilience so

184
00:06:25,600 --> 00:06:27,440
um

185
00:06:27,440 --> 00:06:29,440
if you're if you find this this next bit

186
00:06:29,440 --> 00:06:30,720
interesting i'd recommend looking up

187
00:06:30,720 --> 00:06:31,759
some of the work of the resilience

188
00:06:31,759 --> 00:06:33,440
engineering association

189
00:06:33,440 --> 00:06:35,120
resilience is basically the ability of a

190
00:06:35,120 --> 00:06:38,240
system to deal with failures that

191
00:06:38,240 --> 00:06:40,800
no one was expecting right we are

192
00:06:40,800 --> 00:06:42,639
relatively good at this point in

193
00:06:42,639 --> 00:06:44,080
engineering of saying okay yes we have

194
00:06:44,080 --> 00:06:46,080
fault tolerance we have failover we have

195
00:06:46,080 --> 00:06:48,319
backups etc there are a bunch of

196
00:06:48,319 --> 00:06:50,639
categories of failure of modes of

197
00:06:50,639 --> 00:06:53,360
failure that are foreseen right that are

198
00:06:53,360 --> 00:06:55,840
expected right we expect that we might

199
00:06:55,840 --> 00:06:58,160
get data loss in some context because we

200
00:06:58,160 --> 00:06:59,680
know it happens enough so we have

201
00:06:59,680 --> 00:07:03,039
backups you know we expect that um you

202
00:07:03,039 --> 00:07:05,280
know that individual nodes will crash so

203
00:07:05,280 --> 00:07:07,680
we have multiple of them we expect that

204
00:07:07,680 --> 00:07:10,479
ddos this might happen so we have

205
00:07:10,479 --> 00:07:12,639
you know load balancers and upstream

206
00:07:12,639 --> 00:07:14,400
filters etc so we have these we have

207
00:07:14,400 --> 00:07:16,000
these predictable failure modes

208
00:07:16,000 --> 00:07:18,560
resilience is um

209
00:07:18,560 --> 00:07:19,840
you know when you have an unpredictable

210
00:07:19,840 --> 00:07:22,160
failure mode and this is often um

211
00:07:22,160 --> 00:07:24,880
you know any any real compromise

212
00:07:24,880 --> 00:07:27,919
generally becomes or often becomes a

213
00:07:27,919 --> 00:07:30,479
resilience exercise unless you're in a

214
00:07:30,479 --> 00:07:32,639
team that's big enough that

215
00:07:32,639 --> 00:07:35,120
dealing with compromises and kind of the

216
00:07:35,120 --> 00:07:38,160
flow of individual compromises becomes

217
00:07:38,160 --> 00:07:40,400
predictable which is honestly pretty

218
00:07:40,400 --> 00:07:41,840
rare because if you can predict a

219
00:07:41,840 --> 00:07:44,800
compromise mode you probably fix it and

220
00:07:44,800 --> 00:07:46,800
you know instead of having to deal with

221
00:07:46,800 --> 00:07:48,720
uh responding to that same instant again

222
00:07:48,720 --> 00:07:49,759
and again

223
00:07:49,759 --> 00:07:50,879
now this is interesting because

224
00:07:50,879 --> 00:07:52,639
resilience is not a property of code

225
00:07:52,639 --> 00:07:54,960
right resilience comes from the human

226
00:07:54,960 --> 00:07:57,280
team who is managing the

227
00:07:57,280 --> 00:08:00,240
um managing that system

228
00:08:00,240 --> 00:08:01,360
and

229
00:08:01,360 --> 00:08:03,520
uh

230
00:08:03,759 --> 00:08:05,919
when we look at designing for a kind of

231
00:08:05,919 --> 00:08:07,919
a resilient security right a security

232
00:08:07,919 --> 00:08:08,720
that

233
00:08:08,720 --> 00:08:11,120
can allow us to deal with more of the

234
00:08:11,120 --> 00:08:15,599
unforeseen we can look at this from um

235
00:08:15,599 --> 00:08:17,440
uh sort of a principle-centric approach

236
00:08:17,440 --> 00:08:18,479
and this is something that i've been

237
00:08:18,479 --> 00:08:19,680
spending

238
00:08:19,680 --> 00:08:22,000
gosh well it's been

239
00:08:22,000 --> 00:08:24,319
it's been probably like 15 or 20 years

240
00:08:24,319 --> 00:08:26,400
in some ways thinking about now and it

241
00:08:26,400 --> 00:08:28,720
sort of started from looking at

242
00:08:28,720 --> 00:08:32,000
um kind of cia and you know cia tried

243
00:08:32,000 --> 00:08:33,919
and some of those existing kind of

244
00:08:33,919 --> 00:08:36,399
models for how do we think about

245
00:08:36,399 --> 00:08:37,679
um

246
00:08:37,679 --> 00:08:40,240
modeling the security of an application

247
00:08:40,240 --> 00:08:42,799
and realizing that actually these

248
00:08:42,799 --> 00:08:45,680
um kind of fail to capture as much as

249
00:08:45,680 --> 00:08:47,360
they do you know as much as they do

250
00:08:47,360 --> 00:08:48,320
capture

251
00:08:48,320 --> 00:08:50,720
and they're not very good

252
00:08:50,720 --> 00:08:51,519
for

253
00:08:51,519 --> 00:08:53,120
um

254
00:08:53,120 --> 00:08:55,200
like they're they're not very good for

255
00:08:55,200 --> 00:08:57,200
reasoning ahead of time

256
00:08:57,200 --> 00:08:59,360
about the security properties of a

257
00:08:59,360 --> 00:09:02,080
system right um and and

258
00:09:02,080 --> 00:09:03,440
even you know when you think about it

259
00:09:03,440 --> 00:09:05,519
the requirements level how do you

260
00:09:05,519 --> 00:09:08,720
specify that a system must be secure

261
00:09:08,720 --> 00:09:10,880
well often you know you have the

262
00:09:10,880 --> 00:09:12,560
you know the um

263
00:09:12,560 --> 00:09:14,000
technical design dock and there's a

264
00:09:14,000 --> 00:09:15,360
section at the bottom that everybody

265
00:09:15,360 --> 00:09:18,399
leaves blank which is security um and

266
00:09:18,399 --> 00:09:19,920
everybody leaves it blank in part

267
00:09:19,920 --> 00:09:21,120
because

268
00:09:21,120 --> 00:09:22,480
they don't really know what to put in

269
00:09:22,480 --> 00:09:24,320
there and they don't really know how to

270
00:09:24,320 --> 00:09:26,240
think about this structure

271
00:09:26,240 --> 00:09:28,000
um so

272
00:09:28,000 --> 00:09:29,920
this is the um

273
00:09:29,920 --> 00:09:31,600
this kind of principle-centric approach

274
00:09:31,600 --> 00:09:32,720
is is

275
00:09:32,720 --> 00:09:33,760
um

276
00:09:33,760 --> 00:09:36,000
my approach or or you know a start of an

277
00:09:36,000 --> 00:09:39,040
approach at how do we get better at

278
00:09:39,040 --> 00:09:41,279
thinking about security ahead of time

279
00:09:41,279 --> 00:09:44,640
how do we get better at um

280
00:09:44,640 --> 00:09:46,959
at you know doing the kind of design and

281
00:09:46,959 --> 00:09:48,800
architectural work to understand if the

282
00:09:48,800 --> 00:09:50,560
system that we're about to build is

283
00:09:50,560 --> 00:09:54,399
going to end up being fit for purpose

284
00:09:54,480 --> 00:09:57,279
so i'm going to stop here a little bit

285
00:09:57,279 --> 00:09:58,640
because it has been

286
00:09:58,640 --> 00:10:02,640
an interesting political day and

287
00:10:02,640 --> 00:10:04,160
as security engineers we're all

288
00:10:04,160 --> 00:10:06,079
responsible for the impact of our work

289
00:10:06,079 --> 00:10:08,240
on people's lives

290
00:10:08,240 --> 00:10:12,160
this is especially important when

291
00:10:12,160 --> 00:10:14,880
we are in a situation where

292
00:10:14,880 --> 00:10:18,560
the um the security environment of the

293
00:10:18,560 --> 00:10:20,079
of the kind of the world we live in is

294
00:10:20,079 --> 00:10:21,920
changing pretty quickly

295
00:10:21,920 --> 00:10:22,800
um

296
00:10:22,800 --> 00:10:24,560
now a lot of companies will decide that

297
00:10:24,560 --> 00:10:27,200
well we're willing to overlook

298
00:10:27,200 --> 00:10:30,160
this harm right we're not willing to

299
00:10:30,160 --> 00:10:33,279
spend more than x effort to protect our

300
00:10:33,279 --> 00:10:34,880
users or

301
00:10:34,880 --> 00:10:37,839
it's more important that we reduce the

302
00:10:37,839 --> 00:10:38,880
friction

303
00:10:38,880 --> 00:10:41,600
to people signing up to our system than

304
00:10:41,600 --> 00:10:42,640
it is

305
00:10:42,640 --> 00:10:45,600
us um you know ensure that our

306
00:10:45,600 --> 00:10:47,680
authentication is sufficiently strong

307
00:10:47,680 --> 00:10:49,360
for the purposes that we're aware that

308
00:10:49,360 --> 00:10:51,120
people are using it for

309
00:10:51,120 --> 00:10:52,959
um

310
00:10:52,959 --> 00:10:55,200
i would argue pretty strongly that it's

311
00:10:55,200 --> 00:10:57,760
maybe time to start thinking about some

312
00:10:57,760 --> 00:10:59,839
of those things a bit differently and to

313
00:10:59,839 --> 00:11:02,880
push back a lot more um

314
00:11:02,880 --> 00:11:06,079
we're looking at a situation and like

315
00:11:06,079 --> 00:11:08,000
i would say that this is probably going

316
00:11:08,000 --> 00:11:09,680
to be

317
00:11:09,680 --> 00:11:13,440
as true in canada as it is in the us

318
00:11:13,440 --> 00:11:16,959
sooner than any of us would like um

319
00:11:16,959 --> 00:11:18,160
we've got a lot of systems that were

320
00:11:18,160 --> 00:11:19,680
designed for operating an environment

321
00:11:19,680 --> 00:11:20,959
where they were fundamentally working

322
00:11:20,959 --> 00:11:22,480
under the rule of law

323
00:11:22,480 --> 00:11:24,240
and they're now going to be operated

324
00:11:24,240 --> 00:11:26,240
outside that scope you know we've made a

325
00:11:26,240 --> 00:11:28,640
lot of assumptions about lawful

326
00:11:28,640 --> 00:11:31,440
intercept is lawful um

327
00:11:31,440 --> 00:11:34,079
what happens when it isn't um

328
00:11:34,079 --> 00:11:35,360
you know

329
00:11:35,360 --> 00:11:36,959
and i would say that our our

330
00:11:36,959 --> 00:11:39,680
responsibility to think about the impact

331
00:11:39,680 --> 00:11:41,200
of our actions

332
00:11:41,200 --> 00:11:43,600
is not just

333
00:11:43,600 --> 00:11:45,360
for mitigating known harms it's for

334
00:11:45,360 --> 00:11:47,600
looking at harms that are probable it's

335
00:11:47,600 --> 00:11:49,120
for looking at

336
00:11:49,120 --> 00:11:50,480
the

337
00:11:50,480 --> 00:11:52,800
structure of our work in that kind of

338
00:11:52,800 --> 00:11:54,880
larger context

339
00:11:54,880 --> 00:11:56,800
and this is where this is one of the

340
00:11:56,800 --> 00:11:58,720
kinds of places where

341
00:11:58,720 --> 00:12:01,760
this way of thinking about

342
00:12:01,760 --> 00:12:04,160
things from first principles i find sort

343
00:12:04,160 --> 00:12:06,720
of clarifies a lot of stuff

344
00:12:06,720 --> 00:12:08,399
um

345
00:12:08,399 --> 00:12:11,279
so i want to talk a little bit about

346
00:12:11,279 --> 00:12:13,519
you know when we say you've chosen a set

347
00:12:13,519 --> 00:12:15,519
of users right you know what are the

348
00:12:15,519 --> 00:12:17,920
goals of your chosen users right and not

349
00:12:17,920 --> 00:12:19,680
the goals with them using their system

350
00:12:19,680 --> 00:12:21,760
but the goals of they're trying to do

351
00:12:21,760 --> 00:12:25,120
things in the world right so let's say

352
00:12:25,120 --> 00:12:27,920
you run a chat service which is

353
00:12:27,920 --> 00:12:30,959
sometimes used um for you know social

354
00:12:30,959 --> 00:12:34,639
stuff and sometimes used for work stuff

355
00:12:34,639 --> 00:12:36,480
so here's a few personas that you might

356
00:12:36,480 --> 00:12:39,200
think about examining in the context of

357
00:12:39,200 --> 00:12:41,200
designing that chat system

358
00:12:41,200 --> 00:12:43,279
say you are a domestic violence victim

359
00:12:43,279 --> 00:12:45,519
seeking an abortion say you're a queer

360
00:12:45,519 --> 00:12:46,399
teen

361
00:12:46,399 --> 00:12:49,680
say you're a union organizer

362
00:12:49,680 --> 00:12:51,760
each of these is interesting

363
00:12:51,760 --> 00:12:53,600
because they break some of the

364
00:12:53,600 --> 00:12:55,839
expectations that we have when we're

365
00:12:55,839 --> 00:12:58,000
designing systems right

366
00:12:58,000 --> 00:13:00,320
if you are looking at doing

367
00:13:00,320 --> 00:13:02,079
authentication for a system that will be

368
00:13:02,079 --> 00:13:04,240
used by domestic violence victims

369
00:13:04,240 --> 00:13:06,880
and i can guarantee you if you are doing

370
00:13:06,880 --> 00:13:08,720
if you're designing a system

371
00:13:08,720 --> 00:13:10,959
that uses authentication you are

372
00:13:10,959 --> 00:13:12,639
designing a system that a domestic

373
00:13:12,639 --> 00:13:14,240
violence victim will be using to

374
00:13:14,240 --> 00:13:15,440
authenticate

375
00:13:15,440 --> 00:13:16,639
um

376
00:13:16,639 --> 00:13:18,079
you know simply because they're you know

377
00:13:18,079 --> 00:13:20,240
these people exist in lots of contexts

378
00:13:20,240 --> 00:13:21,680
this is not you know you can't say oh

379
00:13:21,680 --> 00:13:23,519
well we're not social right you know

380
00:13:23,519 --> 00:13:25,440
we're a web shop we don't need to think

381
00:13:25,440 --> 00:13:26,959
about this

382
00:13:26,959 --> 00:13:28,720
well you probably do

383
00:13:28,720 --> 00:13:30,320
um

384
00:13:30,320 --> 00:13:31,839
and this is an interesting one because

385
00:13:31,839 --> 00:13:33,680
it means that you can't for instance

386
00:13:33,680 --> 00:13:34,800
assume

387
00:13:34,800 --> 00:13:36,480
that the user has control over their

388
00:13:36,480 --> 00:13:37,839
devices

389
00:13:37,839 --> 00:13:40,240
you can't assume that the user has

390
00:13:40,240 --> 00:13:41,760
reliable control over their email

391
00:13:41,760 --> 00:13:43,440
address

392
00:13:43,440 --> 00:13:44,800
you know somebody else might be able to

393
00:13:44,800 --> 00:13:46,639
send mail from that address somebody

394
00:13:46,639 --> 00:13:48,320
else can almost certainly read email

395
00:13:48,320 --> 00:13:49,680
from that address

396
00:13:49,680 --> 00:13:51,519
um

397
00:13:51,519 --> 00:13:53,440
and i know in a lot of cases that sounds

398
00:13:53,440 --> 00:13:54,720
like well this is impossible right we

399
00:13:54,720 --> 00:13:56,720
can't possibly do anything here

400
00:13:56,720 --> 00:13:58,880
um except you can right so let's say

401
00:13:58,880 --> 00:14:00,959
you've got uh let's say you know you're

402
00:14:00,959 --> 00:14:02,480
this chat system

403
00:14:02,480 --> 00:14:03,519
well

404
00:14:03,519 --> 00:14:05,120
so let's say you support deleting

405
00:14:05,120 --> 00:14:07,680
messages great do you leave a tombstone

406
00:14:07,680 --> 00:14:09,279
for those messages right if you look at

407
00:14:09,279 --> 00:14:12,240
a chat log after the fact do you see so

408
00:14:12,240 --> 00:14:13,839
and so deleted a message so and so

409
00:14:13,839 --> 00:14:15,360
deleted a message

410
00:14:15,360 --> 00:14:17,440
do you need those tombstones right maybe

411
00:14:17,440 --> 00:14:19,199
you make those vanish you know they show

412
00:14:19,199 --> 00:14:21,760
up for 30 seconds just so that kind of

413
00:14:21,760 --> 00:14:23,600
the user knows what happened to you know

414
00:14:23,600 --> 00:14:25,600
to smooth over the ux and then they go

415
00:14:25,600 --> 00:14:26,639
away

416
00:14:26,639 --> 00:14:28,320
so if you look back

417
00:14:28,320 --> 00:14:30,399
at that chat log in

418
00:14:30,399 --> 00:14:33,120
two hours you can't see anything right

419
00:14:33,120 --> 00:14:35,839
that means because at the end of the day

420
00:14:35,839 --> 00:14:37,760
that user is gonna be

421
00:14:37,760 --> 00:14:39,600
trying to have some conversations

422
00:14:39,600 --> 00:14:42,160
moment-to-moment right and they may know

423
00:14:42,160 --> 00:14:45,199
okay i've got two hours where

424
00:14:45,199 --> 00:14:46,320
i know

425
00:14:46,320 --> 00:14:48,399
that the person who i'm trying to to

426
00:14:48,399 --> 00:14:50,720
stay safe from won't be able to read

427
00:14:50,720 --> 00:14:53,199
this chat log okay i can now use this

428
00:14:53,199 --> 00:14:56,320
tool to go have a quick conversation to

429
00:14:56,320 --> 00:14:58,160
i don't know arrange and exit do all do

430
00:14:58,160 --> 00:15:00,079
all sorts of whatever get support any

431
00:15:00,079 --> 00:15:01,199
number of things

432
00:15:01,199 --> 00:15:02,560
um

433
00:15:02,560 --> 00:15:03,920
you know so things like account

434
00:15:03,920 --> 00:15:05,600
recoveries understanding are there other

435
00:15:05,600 --> 00:15:07,920
sessions currently logged into

436
00:15:07,920 --> 00:15:10,160
uh into my account right facebook has

437
00:15:10,160 --> 00:15:11,279
actually gotten pretty good about this

438
00:15:11,279 --> 00:15:13,199
you can see oh yeah here are all of the

439
00:15:13,199 --> 00:15:15,839
sessions that have accessed this account

440
00:15:15,839 --> 00:15:18,000
that are currently accessing etc there's

441
00:15:18,000 --> 00:15:19,600
a nice button log out all the other

442
00:15:19,600 --> 00:15:22,000
sessions which makes it pretty fast to

443
00:15:22,000 --> 00:15:24,320
do an account recovery to say okay

444
00:15:24,320 --> 00:15:25,440
um

445
00:15:25,440 --> 00:15:27,120
log out all the other sessions change

446
00:15:27,120 --> 00:15:29,120
the password okay now change the

447
00:15:29,120 --> 00:15:31,040
recovery tokens you know change change

448
00:15:31,040 --> 00:15:33,199
which um which email address something's

449
00:15:33,199 --> 00:15:34,480
associated to

450
00:15:34,480 --> 00:15:36,240
um you know and obviously this goes both

451
00:15:36,240 --> 00:15:37,440
ways right that means you know if you

452
00:15:37,440 --> 00:15:39,040
make that easy then it's easy for

453
00:15:39,040 --> 00:15:40,560
anybody who does have access to that

454
00:15:40,560 --> 00:15:41,839
account

455
00:15:41,839 --> 00:15:42,720
but

456
00:15:42,720 --> 00:15:44,880
um you know this is where we look at you

457
00:15:44,880 --> 00:15:46,800
know some of the kind of um

458
00:15:46,800 --> 00:15:48,959
interactions where that uh that abuser

459
00:15:48,959 --> 00:15:52,720
is probably not necessarily trying to

460
00:15:52,720 --> 00:15:54,959
um eliminate access because they want to

461
00:15:54,959 --> 00:15:56,880
retain long-term access

462
00:15:56,880 --> 00:15:59,120
um queer teens are interesting when we

463
00:15:59,120 --> 00:16:01,519
think about parental controls right we

464
00:16:01,519 --> 00:16:03,360
spend a lot of you know if you're if

465
00:16:03,360 --> 00:16:05,519
you're designing apps for kids there is

466
00:16:05,519 --> 00:16:07,600
a lot of concern into like okay making

467
00:16:07,600 --> 00:16:10,079
sure that parents can see things etc

468
00:16:10,079 --> 00:16:11,600
but

469
00:16:11,600 --> 00:16:13,519
you know that's not necessarily actually

470
00:16:13,519 --> 00:16:15,279
always going to be useful and figuring

471
00:16:15,279 --> 00:16:16,160
out

472
00:16:16,160 --> 00:16:17,920
how do you um

473
00:16:17,920 --> 00:16:20,079
how do you balance those different needs

474
00:16:20,079 --> 00:16:22,959
you know like some of the um

475
00:16:22,959 --> 00:16:26,560
the first round of the apple um

476
00:16:26,560 --> 00:16:28,959
uh csam reporting system where they were

477
00:16:28,959 --> 00:16:29,920
gonna do

478
00:16:29,920 --> 00:16:31,519
client-side scanning for anything that

479
00:16:31,519 --> 00:16:34,959
might be csam on devices owned by kids

480
00:16:34,959 --> 00:16:37,519
and the first version of that was and

481
00:16:37,519 --> 00:16:40,160
then we'll send it to your parents

482
00:16:40,160 --> 00:16:41,839
on the assumption that well yeah the

483
00:16:41,839 --> 00:16:43,759
parents are a trusted party who should

484
00:16:43,759 --> 00:16:46,320
know what's going on except now you pray

485
00:16:46,320 --> 00:16:48,000
you've built a machine that just outs

486
00:16:48,000 --> 00:16:51,199
people to their parents um you know and

487
00:16:51,199 --> 00:16:52,800
now they do something of like blurring

488
00:16:52,800 --> 00:16:55,040
the content by default and you know

489
00:16:55,040 --> 00:16:58,480
suggesting access to resources so that

490
00:16:58,480 --> 00:17:00,800
you know folks can still be protected

491
00:17:00,800 --> 00:17:02,959
against some of this kind of stuff

492
00:17:02,959 --> 00:17:06,079
but there isn't this kind of um you know

493
00:17:06,079 --> 00:17:07,359
there isn't this structure that will

494
00:17:07,359 --> 00:17:10,240
magnify and literally create instances

495
00:17:10,240 --> 00:17:11,520
of abuse

496
00:17:11,520 --> 00:17:12,400
um

497
00:17:12,400 --> 00:17:15,679
a union organizer right this is um

498
00:17:15,679 --> 00:17:16,880
you know i mean i think most of the

499
00:17:16,880 --> 00:17:18,400
folks doing union organizing at this

500
00:17:18,400 --> 00:17:20,319
point well yeah you don't use company

501
00:17:20,319 --> 00:17:22,720
slack because we know that the company

502
00:17:22,720 --> 00:17:25,599
slack has all of us in it and we may

503
00:17:25,599 --> 00:17:27,760
have been told by you know somebody in

504
00:17:27,760 --> 00:17:30,559
in corporate to take a look at stuff or

505
00:17:30,559 --> 00:17:32,880
hand certain things over legal et cetera

506
00:17:32,880 --> 00:17:34,400
um

507
00:17:34,400 --> 00:17:36,640
i don't know do you want to always have

508
00:17:36,640 --> 00:17:38,160
everything internal logged in all

509
00:17:38,160 --> 00:17:40,640
contexts you know do you want to set up

510
00:17:40,640 --> 00:17:42,320
so you know and i mean slack has done

511
00:17:42,320 --> 00:17:44,559
this right where the default is dms are

512
00:17:44,559 --> 00:17:46,799
actually private and you have to tell

513
00:17:46,799 --> 00:17:48,240
people if they're going to get turned on

514
00:17:48,240 --> 00:17:50,160
right that's i

515
00:17:50,160 --> 00:17:51,760
you know slack hasn't made all great

516
00:17:51,760 --> 00:17:53,120
choices everywhere it'd be nice if they

517
00:17:53,120 --> 00:17:54,640
had like some anti-abuse tooling in

518
00:17:54,640 --> 00:17:56,960
there but um but that is a great choice

519
00:17:56,960 --> 00:17:59,280
where by default not everybody does have

520
00:17:59,280 --> 00:18:00,480
that access

521
00:18:00,480 --> 00:18:02,799
so i think this is something where

522
00:18:02,799 --> 00:18:04,880
as we as we think about the tools that

523
00:18:04,880 --> 00:18:06,160
we're building as we think about what

524
00:18:06,160 --> 00:18:07,679
they actually mean

525
00:18:07,679 --> 00:18:10,320
it changes our understanding of the

526
00:18:10,320 --> 00:18:13,200
products we build of the way we respond

527
00:18:13,200 --> 00:18:15,440
to um different kinds of security

528
00:18:15,440 --> 00:18:18,799
situations etc um you know if you have

529
00:18:18,799 --> 00:18:19,919
um

530
00:18:19,919 --> 00:18:22,240
if you have a customer service context

531
00:18:22,240 --> 00:18:24,880
and or you have an abuse line etc you

532
00:18:24,880 --> 00:18:27,679
probably do need to be in a position to

533
00:18:27,679 --> 00:18:28,720
deal with

534
00:18:28,720 --> 00:18:29,679
um

535
00:18:29,679 --> 00:18:31,520
abuse victims from a bunch of these

536
00:18:31,520 --> 00:18:33,120
kinds of things you know from a bunch of

537
00:18:33,120 --> 00:18:35,280
these of these kinds of personas

538
00:18:35,280 --> 00:18:38,000
who may end up you know in some

539
00:18:38,000 --> 00:18:40,720
situation where they're stuck and

540
00:18:40,720 --> 00:18:42,160
because of their situation they don't

541
00:18:42,160 --> 00:18:44,799
have recourse to the usual channels

542
00:18:44,799 --> 00:18:46,720
and you know this is just kind of one

543
00:18:46,720 --> 00:18:49,039
little corner right you know these are

544
00:18:49,039 --> 00:18:52,320
these are illustrative personas because

545
00:18:52,320 --> 00:18:54,160
they show us

546
00:18:54,160 --> 00:18:55,520
a lot of the assumptions that we make

547
00:18:55,520 --> 00:18:57,120
are not necessarily going to hold true

548
00:18:57,120 --> 00:18:58,960
for all of our users

549
00:18:58,960 --> 00:19:00,799
but this does you know this is uh this

550
00:19:00,799 --> 00:19:02,960
is not sort of the total set of of

551
00:19:02,960 --> 00:19:04,559
context that you need to consider but

552
00:19:04,559 --> 00:19:07,679
it's a start and it's a start at kind of

553
00:19:07,679 --> 00:19:11,440
getting away from you know some of those

554
00:19:11,440 --> 00:19:13,840
those baseline assumptions and looking

555
00:19:13,840 --> 00:19:14,640
at

556
00:19:14,640 --> 00:19:16,640
what do our tools mean

557
00:19:16,640 --> 00:19:18,559
when they're used in contexts we don't

558
00:19:18,559 --> 00:19:19,919
expect

559
00:19:19,919 --> 00:19:22,559
and i think that as we start looking at

560
00:19:22,559 --> 00:19:24,720
um

561
00:19:24,720 --> 00:19:26,799
as we start looking at

562
00:19:26,799 --> 00:19:28,720
more and more authoritarian company

563
00:19:28,720 --> 00:19:31,039
countries and possibly much more of the

564
00:19:31,039 --> 00:19:33,360
internet becoming more authoritarian

565
00:19:33,360 --> 00:19:35,600
um and becoming policed and many more

566
00:19:35,600 --> 00:19:36,640
people

567
00:19:36,640 --> 00:19:38,720
needing recourse to private

568
00:19:38,720 --> 00:19:40,160
communications

569
00:19:40,160 --> 00:19:42,240
needing recourse to being able to remove

570
00:19:42,240 --> 00:19:45,440
data about themselves being able to

571
00:19:45,440 --> 00:19:48,799
not be caught up in surveillance

572
00:19:48,799 --> 00:19:50,240
a lot of our jobs are going to get a lot

573
00:19:50,240 --> 00:19:53,039
more complicated because the harms that

574
00:19:53,039 --> 00:19:55,679
were called upon to balance are not

575
00:19:55,679 --> 00:19:57,360
going to be as straightforward you know

576
00:19:57,360 --> 00:20:00,000
and we may also be in positions of

577
00:20:00,000 --> 00:20:01,600
you know well

578
00:20:01,600 --> 00:20:03,440
there's a you know there's a lawful

579
00:20:03,440 --> 00:20:07,280
access request for data that you hold um

580
00:20:07,280 --> 00:20:09,039
it's a system that we've designed so

581
00:20:09,039 --> 00:20:10,880
that there aren't logs of internal data

582
00:20:10,880 --> 00:20:12,880
deletions

583
00:20:12,880 --> 00:20:13,679
which

584
00:20:13,679 --> 00:20:16,000
lawful access requests do you respond to

585
00:20:16,000 --> 00:20:18,159
which do you not you know

586
00:20:18,159 --> 00:20:20,720
and kind of understanding what the

587
00:20:20,720 --> 00:20:22,240
direct cost

588
00:20:22,240 --> 00:20:24,480
to humans who've trusted you

589
00:20:24,480 --> 00:20:26,240
to enable them to do the things that

590
00:20:26,240 --> 00:20:27,520
they're trying to do in the world is

591
00:20:27,520 --> 00:20:28,480
going to be

592
00:20:28,480 --> 00:20:29,760
is going to become more and more

593
00:20:29,760 --> 00:20:31,120
important

594
00:20:31,120 --> 00:20:32,080
um

595
00:20:32,080 --> 00:20:33,520
unfortunately for probably pretty

596
00:20:33,520 --> 00:20:35,039
rapidly

597
00:20:35,039 --> 00:20:36,240
so

598
00:20:36,240 --> 00:20:37,520
sermon over

599
00:20:37,520 --> 00:20:39,280
um

600
00:20:39,280 --> 00:20:41,039
i would really like to live in a world

601
00:20:41,039 --> 00:20:43,120
where we needed to think about some of

602
00:20:43,120 --> 00:20:44,960
this stuff less but unfortunately that's

603
00:20:44,960 --> 00:20:47,840
not the world we live in

604
00:20:47,840 --> 00:20:50,320
let's talk about how we do some of these

605
00:20:50,320 --> 00:20:52,080
things around designing for resilient

606
00:20:52,080 --> 00:20:54,000
security um

607
00:20:54,000 --> 00:20:57,760
the first four of these principles are

608
00:20:57,760 --> 00:21:00,799
are heavily tied together and we'll kind

609
00:21:00,799 --> 00:21:02,559
of run through them and i think

610
00:21:02,559 --> 00:21:04,080
hopefully

611
00:21:04,080 --> 00:21:05,120
um

612
00:21:05,120 --> 00:21:08,000
i'll give you guys a bit of a feel of

613
00:21:08,000 --> 00:21:10,320
how this kind of principle-centric

614
00:21:10,320 --> 00:21:12,320
thinking works

615
00:21:12,320 --> 00:21:14,480
in this uh in the context of this kind

616
00:21:14,480 --> 00:21:16,480
of systems analysis

617
00:21:16,480 --> 00:21:17,360
so

618
00:21:17,360 --> 00:21:19,600
um state and logic right services should

619
00:21:19,600 --> 00:21:22,240
either do computation or hold state not

620
00:21:22,240 --> 00:21:23,200
both

621
00:21:23,200 --> 00:21:25,760
and this is

622
00:21:25,760 --> 00:21:27,600
i mean i think probably familiar to some

623
00:21:27,600 --> 00:21:29,360
of you who've looked at 12-factor apps

624
00:21:29,360 --> 00:21:31,200
and all of that kind of modern

625
00:21:31,200 --> 00:21:32,400
you know sort of more modern dev

626
00:21:32,400 --> 00:21:34,640
principles but from a security

627
00:21:34,640 --> 00:21:36,400
perspective complexity is basically

628
00:21:36,400 --> 00:21:38,320
enemy zero right

629
00:21:38,320 --> 00:21:40,799
um you know every increment of

630
00:21:40,799 --> 00:21:42,400
complexity you know you've got this

631
00:21:42,400 --> 00:21:45,440
exponential curve of how difficult it is

632
00:21:45,440 --> 00:21:47,520
to secure a system because all of your

633
00:21:47,520 --> 00:21:48,960
components interact with all of your

634
00:21:48,960 --> 00:21:51,120
other components so the simpler those

635
00:21:51,120 --> 00:21:53,039
individual components are and the

636
00:21:53,039 --> 00:21:54,960
simpler the interactions between those

637
00:21:54,960 --> 00:21:56,960
components are the easier it is to

638
00:21:56,960 --> 00:21:59,600
understand what your system is actually

639
00:21:59,600 --> 00:22:01,360
doing um

640
00:22:01,360 --> 00:22:02,880
some of this gets into the kind of weird

641
00:22:02,880 --> 00:22:04,559
machines territory

642
00:22:04,559 --> 00:22:06,400
um show of hands for how many people are

643
00:22:06,400 --> 00:22:08,320
familiar with that phrase um i know

644
00:22:08,320 --> 00:22:09,600
there's a bit of a delay so i'll keep

645
00:22:09,600 --> 00:22:10,640
talking but

646
00:22:10,640 --> 00:22:11,520
um

647
00:22:11,520 --> 00:22:14,000
so yeah so uh this is basically saying

648
00:22:14,000 --> 00:22:15,039
if you have a service that does

649
00:22:15,039 --> 00:22:16,960
computation right if you have if you

650
00:22:16,960 --> 00:22:19,120
have a web service etc it should be

651
00:22:19,120 --> 00:22:21,280
completely stateless if you have to have

652
00:22:21,280 --> 00:22:22,640
back end state

653
00:22:22,640 --> 00:22:24,320
put it in a separate cache layer that

654
00:22:24,320 --> 00:22:26,159
you know it could be a sidecar it can be

655
00:22:26,159 --> 00:22:28,480
whatever um and just make sure that you

656
00:22:28,480 --> 00:22:30,080
can decouple these and that they're

657
00:22:30,080 --> 00:22:31,760
inspectable right

658
00:22:31,760 --> 00:22:33,600
if you have a separate

659
00:22:33,600 --> 00:22:34,559
um

660
00:22:34,559 --> 00:22:36,159
a separate service that's holding your

661
00:22:36,159 --> 00:22:39,039
state you're more likely to be able to

662
00:22:39,039 --> 00:22:41,120
you know go in and inspect etc than if

663
00:22:41,120 --> 00:22:42,559
it's just like well we have a big blob

664
00:22:42,559 --> 00:22:44,640
in memory which is all of the state that

665
00:22:44,640 --> 00:22:48,400
this service instance is uh is using um

666
00:22:48,400 --> 00:22:50,000
so i'll explain the weird machines thing

667
00:22:50,000 --> 00:22:51,600
this is uh

668
00:22:51,600 --> 00:22:53,919
um oh god len sasseman i think is the

669
00:22:53,919 --> 00:22:56,320
original credit for this um he it's

670
00:22:56,320 --> 00:22:58,640
basically the idea that every machine

671
00:22:58,640 --> 00:23:00,559
every every piece of software

672
00:23:00,559 --> 00:23:02,640
has a um

673
00:23:02,640 --> 00:23:04,320
unintended function

674
00:23:04,320 --> 00:23:06,159
that you know its intended input its

675
00:23:06,159 --> 00:23:08,240
intended outputs but most pieces of

676
00:23:08,240 --> 00:23:10,400
software also have some weird functions

677
00:23:10,400 --> 00:23:11,919
where if you send it some unintended

678
00:23:11,919 --> 00:23:15,200
input you get unintended outputs um and

679
00:23:15,200 --> 00:23:16,400
this is just kind of another way of

680
00:23:16,400 --> 00:23:18,720
describing you know it's a vulnerability

681
00:23:18,720 --> 00:23:19,840
but

682
00:23:19,840 --> 00:23:21,280
if you think about well we've got a

683
00:23:21,280 --> 00:23:23,360
bunch of apis that are stitched together

684
00:23:23,360 --> 00:23:25,200
and they're all mostly correct but you

685
00:23:25,200 --> 00:23:26,880
know some of them also

686
00:23:26,880 --> 00:23:30,000
will do other stuff sometimes um it

687
00:23:30,000 --> 00:23:32,320
makes it more likely that an adversary

688
00:23:32,320 --> 00:23:33,760
can stitch together a machine that does

689
00:23:33,760 --> 00:23:36,480
something that's useful to them

690
00:23:36,480 --> 00:23:39,039
um you know out of those those normal

691
00:23:39,039 --> 00:23:40,799
machines and their weird functionality

692
00:23:40,799 --> 00:23:42,960
they can build a weird machine that lets

693
00:23:42,960 --> 00:23:45,679
them accomplish a goal in the world so

694
00:23:45,679 --> 00:23:47,279
um

695
00:23:47,279 --> 00:23:48,559
getting away from this kind of

696
00:23:48,559 --> 00:23:51,039
complexity makes it less likely that you

697
00:23:51,039 --> 00:23:54,720
accidentally build useful weird machines

698
00:23:54,720 --> 00:23:57,279
so now immutability and ephemerality

699
00:23:57,279 --> 00:23:59,200
also relatively familiar ways of

700
00:23:59,200 --> 00:24:02,400
thinking about systems at this point now

701
00:24:02,400 --> 00:24:04,880
the way i like to think about this is

702
00:24:04,880 --> 00:24:06,640
that you're like okay obviously data is

703
00:24:06,640 --> 00:24:08,799
state right cache is state um

704
00:24:08,799 --> 00:24:10,960
configuration is also state memory is

705
00:24:10,960 --> 00:24:13,120
also state um

706
00:24:13,120 --> 00:24:15,200
kind of obviously um

707
00:24:15,200 --> 00:24:17,360
if you have if your systems are

708
00:24:17,360 --> 00:24:18,400
immutable

709
00:24:18,400 --> 00:24:20,799
then you eliminate state that is not

710
00:24:20,799 --> 00:24:23,919
necessary right because if i can't edit

711
00:24:23,919 --> 00:24:26,159
a thing right if i can't change a thing

712
00:24:26,159 --> 00:24:28,640
then it's not actually state it's just

713
00:24:28,640 --> 00:24:30,799
the structure of the thing

714
00:24:30,799 --> 00:24:31,760
um

715
00:24:31,760 --> 00:24:33,840
and you can look at limiting kind of the

716
00:24:33,840 --> 00:24:36,000
scope of editability of state in terms

717
00:24:36,000 --> 00:24:36,880
of like

718
00:24:36,880 --> 00:24:38,559
you know is configuration editable

719
00:24:38,559 --> 00:24:40,559
instead of container or is it you know

720
00:24:40,559 --> 00:24:42,400
completely um

721
00:24:42,400 --> 00:24:45,600
completely you know completely um

722
00:24:45,600 --> 00:24:46,480
uh

723
00:24:46,480 --> 00:24:48,880
you know read only or you know can i

724
00:24:48,880 --> 00:24:50,080
change things okay that's one way of

725
00:24:50,080 --> 00:24:51,840
eliminating state you can also look at

726
00:24:51,840 --> 00:24:54,720
eliminating state on a time scale right

727
00:24:54,720 --> 00:24:57,840
so every time you respin a cluster um

728
00:24:57,840 --> 00:25:00,080
you've now reset the state of that

729
00:25:00,080 --> 00:25:02,240
cluster right which is another way of

730
00:25:02,240 --> 00:25:04,720
limiting the scope that an adversary

731
00:25:04,720 --> 00:25:06,080
could potentially

732
00:25:06,080 --> 00:25:08,480
edit and change the

733
00:25:08,480 --> 00:25:11,120
change the state of that system

734
00:25:11,120 --> 00:25:13,679
so we also want kind of minimal

735
00:25:13,679 --> 00:25:15,440
canonical state

736
00:25:15,440 --> 00:25:17,840
ideally every single piece of state

737
00:25:17,840 --> 00:25:20,080
should exist canonically in exactly one

738
00:25:20,080 --> 00:25:22,400
place right so this mean this might mean

739
00:25:22,400 --> 00:25:24,799
that for instance in an ideal world the

740
00:25:24,799 --> 00:25:27,200
entire configuration of your of your aws

741
00:25:27,200 --> 00:25:29,200
environment would live in github

742
00:25:29,200 --> 00:25:30,080
great

743
00:25:30,080 --> 00:25:31,360
now i can

744
00:25:31,360 --> 00:25:33,919
validate and verify

745
00:25:33,919 --> 00:25:37,440
that um or now i can assume that aws

746
00:25:37,440 --> 00:25:39,600
always has this state assuming my

747
00:25:39,600 --> 00:25:41,840
deployment system you know only goes in

748
00:25:41,840 --> 00:25:44,559
one direction assuming my um you know i

749
00:25:44,559 --> 00:25:46,720
never make changes in production

750
00:25:46,720 --> 00:25:49,679
and so you know in theory i've got okay

751
00:25:49,679 --> 00:25:52,720
github is master and aws

752
00:25:52,720 --> 00:25:56,080
always matches that now in practice you

753
00:25:56,080 --> 00:25:57,600
actually do have duplicated state

754
00:25:57,600 --> 00:26:00,080
because you can't ensure that aws can't

755
00:26:00,080 --> 00:26:02,080
be edited so now you have to validate it

756
00:26:02,080 --> 00:26:03,440
but you do at least have an

757
00:26:03,440 --> 00:26:06,159
authoritative copy of what that state is

758
00:26:06,159 --> 00:26:08,320
supposed to be which means that it's

759
00:26:08,320 --> 00:26:10,559
possible to validate it right if you

760
00:26:10,559 --> 00:26:12,960
only have your non-canonical

761
00:26:12,960 --> 00:26:15,360
non-versioned copy sitting in aws

762
00:26:15,360 --> 00:26:18,720
validation is manual validation is

763
00:26:18,720 --> 00:26:20,000
look through this thing hopefully you

764
00:26:20,000 --> 00:26:22,159
can find all the pieces of state

765
00:26:22,159 --> 00:26:25,760
and then try and validate it so as few

766
00:26:25,760 --> 00:26:28,640
places as possible should be stores of

767
00:26:28,640 --> 00:26:31,600
state right this is kind of the

768
00:26:31,600 --> 00:26:33,520
underlying reason for immutability you

769
00:26:33,520 --> 00:26:35,840
don't want those additional state stores

770
00:26:35,840 --> 00:26:37,120
you don't want to have to think about

771
00:26:37,120 --> 00:26:39,200
configuration drift you know all of

772
00:26:39,200 --> 00:26:40,880
these are sort of opportunities to

773
00:26:40,880 --> 00:26:44,960
introduce unintentional vulnerabilities

774
00:26:44,960 --> 00:26:46,080
and

775
00:26:46,080 --> 00:26:47,840
what this fundamentally gets back back

776
00:26:47,840 --> 00:26:50,159
to is this is kind of a version of least

777
00:26:50,159 --> 00:26:51,360
privilege right

778
00:26:51,360 --> 00:26:54,240
if mutating state in production isn't

779
00:26:54,240 --> 00:26:56,720
required for the system to do the things

780
00:26:56,720 --> 00:26:58,640
that it's trying to do in the world then

781
00:26:58,640 --> 00:27:00,880
it shouldn't be possible this is still

782
00:27:00,880 --> 00:27:02,960
true even if there's no intentional

783
00:27:02,960 --> 00:27:05,200
interface to allow

784
00:27:05,200 --> 00:27:08,240
um users to do this because attackers

785
00:27:08,240 --> 00:27:10,080
may be using unintentional interfaces

786
00:27:10,080 --> 00:27:11,440
right so you still

787
00:27:11,440 --> 00:27:13,840
you know it's it's a kind of an iterated

788
00:27:13,840 --> 00:27:15,919
version of least privilege where you're

789
00:27:15,919 --> 00:27:17,679
looking at privilege even if those

790
00:27:17,679 --> 00:27:20,559
things you know even if those um

791
00:27:20,559 --> 00:27:22,559
you know those interfaces etc aren't

792
00:27:22,559 --> 00:27:25,039
intentionally created

793
00:27:25,039 --> 00:27:26,559
so

794
00:27:26,559 --> 00:27:28,399
this is maybe a little it's kind of a

795
00:27:28,399 --> 00:27:31,120
chain of things of looking at state and

796
00:27:31,120 --> 00:27:33,120
systems and this is you know

797
00:27:33,120 --> 00:27:34,480
it's just a sort of a few little

798
00:27:34,480 --> 00:27:36,559
principles off in the corner of look but

799
00:27:36,559 --> 00:27:40,000
it has implications for

800
00:27:40,000 --> 00:27:42,159
the larger way we think and reason about

801
00:27:42,159 --> 00:27:43,200
systems

802
00:27:43,200 --> 00:27:45,520
and the whole goal of this entire chain

803
00:27:45,520 --> 00:27:48,720
of things is to reduce that structural

804
00:27:48,720 --> 00:27:51,279
complexity to simplify the system to

805
00:27:51,279 --> 00:27:53,600
make it more predictable to make it

806
00:27:53,600 --> 00:27:56,000
easier to reason about

807
00:27:56,000 --> 00:27:58,960
um now talk about one other

808
00:27:58,960 --> 00:28:02,000
principle at the kind of component level

809
00:28:02,000 --> 00:28:04,240
um that's more technical which is

810
00:28:04,240 --> 00:28:07,120
unlinkability so

811
00:28:07,120 --> 00:28:09,039
obviously there's a lot of folks talking

812
00:28:09,039 --> 00:28:11,120
about privacy there's a lot of you know

813
00:28:11,120 --> 00:28:12,880
systems like tor etc that are trying to

814
00:28:12,880 --> 00:28:15,120
create anonymity um one of the things

815
00:28:15,120 --> 00:28:16,960
that i've found in you know again in a

816
00:28:16,960 --> 00:28:19,440
while of looking at this in contexts

817
00:28:19,440 --> 00:28:22,480
where it's mattered um is that it's

818
00:28:22,480 --> 00:28:25,120
often very difficult for

819
00:28:25,120 --> 00:28:27,279
engineers or teams to define what they

820
00:28:27,279 --> 00:28:29,200
mean by anonymity

821
00:28:29,200 --> 00:28:31,520
and so i like to think about it as

822
00:28:31,520 --> 00:28:34,000
unlinkability instead because this is

823
00:28:34,000 --> 00:28:36,240
something that we can actually analyze

824
00:28:36,240 --> 00:28:38,240
in a meaningful way right

825
00:28:38,240 --> 00:28:39,039
if

826
00:28:39,039 --> 00:28:41,840
you know a piece of data like this user

827
00:28:41,840 --> 00:28:44,080
clicked on this link right so you've got

828
00:28:44,080 --> 00:28:46,240
a user identity and

829
00:28:46,240 --> 00:28:49,600
an action right and if you can say okay

830
00:28:49,600 --> 00:28:51,679
you know this ip address right we're

831
00:28:51,679 --> 00:28:53,440
using ip addresses as a proxy for

832
00:28:53,440 --> 00:28:55,600
identity here so this ip address is

833
00:28:55,600 --> 00:28:57,520
unlinkable to

834
00:28:57,520 --> 00:29:00,320
this link click under some set of

835
00:29:00,320 --> 00:29:02,399
assumptions that you know like the

836
00:29:02,399 --> 00:29:04,640
adversary isn't on the local network

837
00:29:04,640 --> 00:29:09,440
that um less than x percent of the nodes

838
00:29:09,440 --> 00:29:13,600
in this um in this onion network are um

839
00:29:13,600 --> 00:29:15,840
are compromised um

840
00:29:15,840 --> 00:29:18,240
so this is basically a way of

841
00:29:18,240 --> 00:29:19,919
reasoning about

842
00:29:19,919 --> 00:29:23,200
where you do and don't want to have

843
00:29:23,200 --> 00:29:24,080
um

844
00:29:24,080 --> 00:29:27,440
specific kinds of

845
00:29:27,440 --> 00:29:28,480
um

846
00:29:28,480 --> 00:29:30,399
sort of structural uh structural

847
00:29:30,399 --> 00:29:32,480
leakages and structural linkages

848
00:29:32,480 --> 00:29:35,200
and in general i would suggest that in a

849
00:29:35,200 --> 00:29:36,799
lot of contexts

850
00:29:36,799 --> 00:29:39,520
it's useful to a it's useful to actually

851
00:29:39,520 --> 00:29:41,279
actively define this

852
00:29:41,279 --> 00:29:43,520
about which things you are and are not

853
00:29:43,520 --> 00:29:47,440
willing to be linkable and also to whom

854
00:29:47,440 --> 00:29:50,640
you know for instance if you have a um

855
00:29:50,640 --> 00:29:52,559
if you have you know some random web

856
00:29:52,559 --> 00:29:54,559
application that has a bunch of sas

857
00:29:54,559 --> 00:29:56,559
services that it interacts with

858
00:29:56,559 --> 00:29:58,559
um and in some of those you're gonna

859
00:29:58,559 --> 00:30:01,600
call out with like oh i've got a user id

860
00:30:01,600 --> 00:30:03,200
and some piece of data that they're

861
00:30:03,200 --> 00:30:05,600
gonna you know look up send somewhere

862
00:30:05,600 --> 00:30:08,080
process in some way

863
00:30:08,080 --> 00:30:10,000
does that user id need to be the same

864
00:30:10,000 --> 00:30:12,240
user id that you use internally and that

865
00:30:12,240 --> 00:30:14,559
you use with other vendors right

866
00:30:14,559 --> 00:30:16,720
so let's say you're comfortable with the

867
00:30:16,720 --> 00:30:19,200
privacy impact of using this fender

868
00:30:19,200 --> 00:30:21,679
separately and this vendor separately

869
00:30:21,679 --> 00:30:23,120
you know so you've got you've got these

870
00:30:23,120 --> 00:30:25,440
two vendors each of those pieces of data

871
00:30:25,440 --> 00:30:27,679
it's acceptable to have out in the world

872
00:30:27,679 --> 00:30:30,480
separately but maybe it's not acceptable

873
00:30:30,480 --> 00:30:32,640
to have both of those pieces of data

874
00:30:32,640 --> 00:30:33,840
together

875
00:30:33,840 --> 00:30:35,679
you know cross-linked

876
00:30:35,679 --> 00:30:38,320
so if you use the same user id for both

877
00:30:38,320 --> 00:30:40,559
of these things then if those two sites

878
00:30:40,559 --> 00:30:41,679
get a breach

879
00:30:41,679 --> 00:30:43,919
a third party can combine those two data

880
00:30:43,919 --> 00:30:46,080
streams you know and this is using uh

881
00:30:46,080 --> 00:30:48,240
using a non-opic identifier like email

882
00:30:48,240 --> 00:30:50,159
as your key that you send to the third

883
00:30:50,159 --> 00:30:52,480
party or using the same guide for all

884
00:30:52,480 --> 00:30:54,559
the third parties whereas if every

885
00:30:54,559 --> 00:30:56,640
vendor gets a separate guide for the

886
00:30:56,640 --> 00:30:58,720
same user so that you've got you know

887
00:30:58,720 --> 00:31:01,039
here's our here's our good stream for

888
00:31:01,039 --> 00:31:02,480
for vendor y our google stream for

889
00:31:02,480 --> 00:31:05,120
vendor z etc then it doesn't matter if

890
00:31:05,120 --> 00:31:06,880
those breaches happen it doesn't give

891
00:31:06,880 --> 00:31:08,799
the adversary the ability to cross-link

892
00:31:08,799 --> 00:31:10,960
those those pieces of data

893
00:31:10,960 --> 00:31:11,840
um

894
00:31:11,840 --> 00:31:13,600
so yeah this is this is kind of and i'm

895
00:31:13,600 --> 00:31:15,840
not i'm not uh i'm not claiming right

896
00:31:15,840 --> 00:31:17,600
now that this uh the set of principles

897
00:31:17,600 --> 00:31:19,760
i'm talking through here are a

898
00:31:19,760 --> 00:31:22,559
complete set of principles for designing

899
00:31:22,559 --> 00:31:24,799
from a systems thinking perspective more

900
00:31:24,799 --> 00:31:26,799
that they are a um you know these are a

901
00:31:26,799 --> 00:31:29,519
few interesting principles um i'm trying

902
00:31:29,519 --> 00:31:31,279
to you know not keep you guys here all

903
00:31:31,279 --> 00:31:33,519
day for for this talk

904
00:31:33,519 --> 00:31:34,640
um

905
00:31:34,640 --> 00:31:36,559
so let's talk a little bit more now

906
00:31:36,559 --> 00:31:38,960
about process principles um and these

907
00:31:38,960 --> 00:31:41,679
are more about how we do the work um how

908
00:31:41,679 --> 00:31:44,000
we interact with the system how we you

909
00:31:44,000 --> 00:31:46,559
know how we work as teams than it is

910
00:31:46,559 --> 00:31:47,600
about

911
00:31:47,600 --> 00:31:49,679
um the kind of the specific technical

912
00:31:49,679 --> 00:31:51,840
components

913
00:31:51,840 --> 00:31:55,279
um so the first one is looking at

914
00:31:55,279 --> 00:31:58,640
declarative versus procedural logic um

915
00:31:58,640 --> 00:32:01,919
in general if you can configure

916
00:32:01,919 --> 00:32:03,760
something declaratively it is going to

917
00:32:03,760 --> 00:32:06,480
be much easier for

918
00:32:06,480 --> 00:32:07,919
both humans and sometimes also the

919
00:32:07,919 --> 00:32:09,919
computers but especially the humans to

920
00:32:09,919 --> 00:32:11,279
understand

921
00:32:11,279 --> 00:32:13,919
the end state of the thing right so you

922
00:32:13,919 --> 00:32:16,559
have state a you apply a configuration

923
00:32:16,559 --> 00:32:19,440
you end up in state b if you declare

924
00:32:19,440 --> 00:32:21,440
that configuration then you can

925
00:32:21,440 --> 00:32:23,919
generally look at state a look at the

926
00:32:23,919 --> 00:32:25,600
declaration of of the you know the

927
00:32:25,600 --> 00:32:27,919
transition and understand okay this is

928
00:32:27,919 --> 00:32:30,320
what state b is going to look like

929
00:32:30,320 --> 00:32:32,880
if you have a bunch of for loops that

930
00:32:32,880 --> 00:32:35,440
iterate over various things figuring out

931
00:32:35,440 --> 00:32:37,360
okay what's the end configuration is

932
00:32:37,360 --> 00:32:39,279
often very very difficult

933
00:32:39,279 --> 00:32:40,799
um

934
00:32:40,799 --> 00:32:43,039
and this this concept applies in a bunch

935
00:32:43,039 --> 00:32:45,600
of different places um so for instance

936
00:32:45,600 --> 00:32:47,120
if you're looking at a parser right

937
00:32:47,120 --> 00:32:48,799
you're receiving something in off the

938
00:32:48,799 --> 00:32:51,760
network and you need to make sure that

939
00:32:51,760 --> 00:32:53,679
it is well-formed and you need to

940
00:32:53,679 --> 00:32:55,760
understand like you know okay here's the

941
00:32:55,760 --> 00:32:56,960
here's the set of elements that we're

942
00:32:56,960 --> 00:32:58,880
trying to get from this um you know

943
00:32:58,880 --> 00:33:00,320
you've probably got an idea if you're

944
00:33:00,320 --> 00:33:02,000
you've got an example data right you've

945
00:33:02,000 --> 00:33:03,200
got the thing that you're expecting to

946
00:33:03,200 --> 00:33:05,760
receive but understanding whether or not

947
00:33:05,760 --> 00:33:07,679
the parser that you wrote

948
00:33:07,679 --> 00:33:09,600
actually matches

949
00:33:09,600 --> 00:33:12,000
the spec that you have is incredibly

950
00:33:12,000 --> 00:33:14,080
difficult right that is a very

951
00:33:14,080 --> 00:33:16,159
hard comparison

952
00:33:16,159 --> 00:33:18,720
um question like actually both for

953
00:33:18,720 --> 00:33:21,120
computers and for humans um it's not

954
00:33:21,120 --> 00:33:23,600
just hard for for humans so instead if

955
00:33:23,600 --> 00:33:25,840
you say okay we're going to write a spec

956
00:33:25,840 --> 00:33:27,279
declaratively

957
00:33:27,279 --> 00:33:28,240
and then

958
00:33:28,240 --> 00:33:30,559
generate with a with a tested parser

959
00:33:30,559 --> 00:33:33,919
generator a parser that will um

960
00:33:33,919 --> 00:33:37,120
you know uh that will just accept those

961
00:33:37,120 --> 00:33:39,360
things you're much more likely to end up

962
00:33:39,360 --> 00:33:42,080
with a purser that doesn't accidentally

963
00:33:42,080 --> 00:33:44,240
accept something weird and this kind of

964
00:33:44,240 --> 00:33:47,039
goes back to the weird machines um

965
00:33:47,039 --> 00:33:48,399
you know the

966
00:33:48,399 --> 00:33:51,919
second to uh second to memory issues

967
00:33:51,919 --> 00:33:54,000
partial issues are kind of

968
00:33:54,000 --> 00:33:56,240
you know one of the most common classes

969
00:33:56,240 --> 00:33:57,760
of vulnerability

970
00:33:57,760 --> 00:34:00,240
um you know xss all these things are all

971
00:34:00,240 --> 00:34:02,559
fundamentally parser issues

972
00:34:02,559 --> 00:34:04,480
and we still haven't gotten yet we're

973
00:34:04,480 --> 00:34:06,240
still letting people write parsers by

974
00:34:06,240 --> 00:34:07,200
hand

975
00:34:07,200 --> 00:34:08,399
um

976
00:34:08,399 --> 00:34:10,560
and when you look at say oh no we don't

977
00:34:10,560 --> 00:34:11,760
we don't need to worry about parsers

978
00:34:11,760 --> 00:34:13,520
because we've got we've got json now

979
00:34:13,520 --> 00:34:15,520
right and there's a nice you know

980
00:34:15,520 --> 00:34:18,399
validated json parser built in but you

981
00:34:18,399 --> 00:34:21,359
write javascript and so you accept an

982
00:34:21,359 --> 00:34:23,280
object and that object has some

983
00:34:23,280 --> 00:34:25,199
structure does it have the structure

984
00:34:25,199 --> 00:34:26,800
that you expect it to

985
00:34:26,800 --> 00:34:28,639
um

986
00:34:28,639 --> 00:34:30,399
you know if you use a strongly typed

987
00:34:30,399 --> 00:34:32,000
language you can actually make some

988
00:34:32,000 --> 00:34:34,320
assertions we've declared the structure

989
00:34:34,320 --> 00:34:36,639
of this object right we've declared the

990
00:34:36,639 --> 00:34:38,480
allowable structure

991
00:34:38,480 --> 00:34:39,599
and now

992
00:34:39,599 --> 00:34:40,719
you know

993
00:34:40,719 --> 00:34:42,399
throw the json in there throw it okay

994
00:34:42,399 --> 00:34:43,918
type error right

995
00:34:43,918 --> 00:34:44,879
um

996
00:34:44,879 --> 00:34:46,639
state machines are another context you

997
00:34:46,639 --> 00:34:49,040
know the number of times

998
00:34:49,040 --> 00:34:50,960
both like looking at all the all the

999
00:34:50,960 --> 00:34:52,639
platforms that have had uh ip

1000
00:34:52,639 --> 00:34:54,639
fragmentation issues and then the number

1001
00:34:54,639 --> 00:34:56,159
of times that we've reinvented that

1002
00:34:56,159 --> 00:34:58,240
problem in different places in the stack

1003
00:34:58,240 --> 00:35:01,520
like um you know sip fragmentation you

1004
00:35:01,520 --> 00:35:03,599
know okay now you know we've we've we've

1005
00:35:03,599 --> 00:35:05,839
built a messaging system on top of ip

1006
00:35:05,839 --> 00:35:08,160
and now it needs to frac oh and we have

1007
00:35:08,160 --> 00:35:10,320
the same you know 90s fragmentation

1008
00:35:10,320 --> 00:35:11,200
issues

1009
00:35:11,200 --> 00:35:12,240
um

1010
00:35:12,240 --> 00:35:13,760
you know if you have a state machine

1011
00:35:13,760 --> 00:35:15,680
generator that

1012
00:35:15,680 --> 00:35:17,839
simply drives that structure

1013
00:35:17,839 --> 00:35:18,640
it

1014
00:35:18,640 --> 00:35:19,839
it lets you

1015
00:35:19,839 --> 00:35:21,680
get an outcome where you actually can

1016
00:35:21,680 --> 00:35:24,400
say things strongly about no no you

1017
00:35:24,400 --> 00:35:26,480
can't enter in a legal state the system

1018
00:35:26,480 --> 00:35:29,200
won't allow you to skip this step

1019
00:35:29,200 --> 00:35:32,079
um and this doesn't have to be a formal

1020
00:35:32,079 --> 00:35:34,720
methods world thing right this doesn't

1021
00:35:34,720 --> 00:35:35,920
have to be

1022
00:35:35,920 --> 00:35:38,079
something that's like

1023
00:35:38,079 --> 00:35:40,480
it's not just an aerospace world thing

1024
00:35:40,480 --> 00:35:41,920
um

1025
00:35:41,920 --> 00:35:44,240
using a parser generator is faster than

1026
00:35:44,240 --> 00:35:46,640
writing a parser using a state machine

1027
00:35:46,640 --> 00:35:48,800
generator is faster than writing a state

1028
00:35:48,800 --> 00:35:50,320
machine by hand

1029
00:35:50,320 --> 00:35:52,240
um you know obviously you know there's a

1030
00:35:52,240 --> 00:35:53,520
little bit of overhead you have to learn

1031
00:35:53,520 --> 00:35:55,200
the library the first one might be

1032
00:35:55,200 --> 00:35:57,200
slower the first five might be slower

1033
00:35:57,200 --> 00:35:59,040
once you get through that place

1034
00:35:59,040 --> 00:36:01,440
um it is a lot faster right but this is

1035
00:36:01,440 --> 00:36:04,240
also terraform right this is also

1036
00:36:04,240 --> 00:36:07,200
infrastructure is code it's saying i

1037
00:36:07,200 --> 00:36:09,200
declare that i want this to be the state

1038
00:36:09,200 --> 00:36:10,560
of of

1039
00:36:10,560 --> 00:36:12,560
my ecosystem

1040
00:36:12,560 --> 00:36:14,800
figure out how to make it that rather

1041
00:36:14,800 --> 00:36:16,079
than

1042
00:36:16,079 --> 00:36:18,640
run this set of commands and hopefully

1043
00:36:18,640 --> 00:36:21,359
it ends up in the state that you want

1044
00:36:21,359 --> 00:36:23,200
um you know a lot of this is basically

1045
00:36:23,200 --> 00:36:26,480
let's let's build systems in a way that

1046
00:36:26,480 --> 00:36:27,280
uh

1047
00:36:27,280 --> 00:36:30,160
allows humans to actually

1048
00:36:30,160 --> 00:36:32,240
interact with them in a reliable way you

1049
00:36:32,240 --> 00:36:33,760
know let's make things as easy as

1050
00:36:33,760 --> 00:36:35,599
possible for the computers but also for

1051
00:36:35,599 --> 00:36:37,359
the humans

1052
00:36:37,359 --> 00:36:41,359
um designing for failure right um

1053
00:36:41,359 --> 00:36:43,040
i don't know how many of you when you're

1054
00:36:43,040 --> 00:36:44,320
when you're kind of especially if you're

1055
00:36:44,320 --> 00:36:45,520
looking at like

1056
00:36:45,520 --> 00:36:47,599
a relatively greenfield security

1057
00:36:47,599 --> 00:36:48,880
environment where you're standing up a

1058
00:36:48,880 --> 00:36:50,800
lot of stuff

1059
00:36:50,800 --> 00:36:53,520
you know we we generally kind of will do

1060
00:36:53,520 --> 00:36:55,280
a little bit of designing the system

1061
00:36:55,280 --> 00:36:57,359
we'd like to have but then it's like oh

1062
00:36:57,359 --> 00:36:59,599
well but we really did need uh you know

1063
00:36:59,599 --> 00:37:01,040
we needed a forensics environment we

1064
00:37:01,040 --> 00:37:02,560
needed a whatever

1065
00:37:02,560 --> 00:37:04,079
um

1066
00:37:04,079 --> 00:37:05,359
you know

1067
00:37:05,359 --> 00:37:06,800
the

1068
00:37:06,800 --> 00:37:09,440
being able to say that okay we know that

1069
00:37:09,440 --> 00:37:10,720
for

1070
00:37:10,720 --> 00:37:12,720
at least the kinds of compromise that we

1071
00:37:12,720 --> 00:37:14,400
can foresee

1072
00:37:14,400 --> 00:37:16,880
we have these tools in place right

1073
00:37:16,880 --> 00:37:18,720
instead of saying well

1074
00:37:18,720 --> 00:37:20,079
we've got

1075
00:37:20,079 --> 00:37:22,720
a control for auth authentication we've

1076
00:37:22,720 --> 00:37:25,760
got a control for data backup

1077
00:37:25,760 --> 00:37:26,640
um

1078
00:37:26,640 --> 00:37:30,000
we don't have a control for

1079
00:37:30,000 --> 00:37:31,839
you know data backup in the context

1080
00:37:31,839 --> 00:37:33,599
where the authentication system fails it

1081
00:37:33,599 --> 00:37:36,480
allows someone to go delete stuff um you

1082
00:37:36,480 --> 00:37:39,520
know so designing with the assumption

1083
00:37:39,520 --> 00:37:40,320
that

1084
00:37:40,320 --> 00:37:42,400
any given layer is probably going to

1085
00:37:42,400 --> 00:37:44,720
fail and sometimes the answer may be

1086
00:37:44,720 --> 00:37:47,040
well we can't actually completely

1087
00:37:47,040 --> 00:37:49,520
duplicate this layer like we don't have

1088
00:37:49,520 --> 00:37:51,200
a way of saying

1089
00:37:51,200 --> 00:37:53,520
oh well no one can delete data if you

1090
00:37:53,520 --> 00:37:55,440
know um

1091
00:37:55,440 --> 00:37:57,359
you know because we you know the auth

1092
00:37:57,359 --> 00:38:00,000
system might fail that's not viable fine

1093
00:38:00,000 --> 00:38:01,680
you know but you say okay if we keep

1094
00:38:01,680 --> 00:38:04,160
backups for 30 days even after deletion

1095
00:38:04,160 --> 00:38:06,880
um they're only accessible through

1096
00:38:06,880 --> 00:38:08,880
some other process you know and then

1097
00:38:08,880 --> 00:38:10,400
okay we have to balance versus lawful

1098
00:38:10,400 --> 00:38:11,760
intercept if somebody really needed that

1099
00:38:11,760 --> 00:38:13,359
data gone like there's you know there's

1100
00:38:13,359 --> 00:38:14,640
trade-offs in

1101
00:38:14,640 --> 00:38:16,079
all of these directions

1102
00:38:16,079 --> 00:38:17,440
but just assuming that kind of

1103
00:38:17,440 --> 00:38:19,680
compromise is inevitable in the same way

1104
00:38:19,680 --> 00:38:22,400
that we assume that um

1105
00:38:22,400 --> 00:38:24,480
you know that we assume that a uh like a

1106
00:38:24,480 --> 00:38:26,480
given component a given node is probably

1107
00:38:26,480 --> 00:38:28,640
going to crash at some point right

1108
00:38:28,640 --> 00:38:30,879
um

1109
00:38:31,680 --> 00:38:33,680
so this is we're getting now more into

1110
00:38:33,680 --> 00:38:35,359
kind of the um

1111
00:38:35,359 --> 00:38:37,920
the actual resilience side of things

1112
00:38:37,920 --> 00:38:40,160
so one of the things that we've seen

1113
00:38:40,160 --> 00:38:41,040
when

1114
00:38:41,040 --> 00:38:42,640
looking at

1115
00:38:42,640 --> 00:38:45,599
um resilience with teams operating in

1116
00:38:45,599 --> 00:38:48,400
high risk situations uh or kind of high

1117
00:38:48,400 --> 00:38:50,800
high consequence situations and so this

1118
00:38:50,800 --> 00:38:53,280
is stuff like you know yes it's ops

1119
00:38:53,280 --> 00:38:55,680
teams but it's also um like

1120
00:38:55,680 --> 00:38:58,160
hospital operating rooms um

1121
00:38:58,160 --> 00:39:00,160
you know flight decks these kinds of

1122
00:39:00,160 --> 00:39:04,000
places is that it's often very critical

1123
00:39:04,000 --> 00:39:04,880
for

1124
00:39:04,880 --> 00:39:06,720
safe outcomes and i think also for

1125
00:39:06,720 --> 00:39:08,480
secure outcomes

1126
00:39:08,480 --> 00:39:11,359
with some caveats that decisions are

1127
00:39:11,359 --> 00:39:13,599
happening closer to the edge right that

1128
00:39:13,599 --> 00:39:15,680
the person who is deciding

1129
00:39:15,680 --> 00:39:17,520
is a thing safe

1130
00:39:17,520 --> 00:39:19,520
is a thing functional is the person

1131
00:39:19,520 --> 00:39:22,079
who's actually engaged in the full

1132
00:39:22,079 --> 00:39:23,680
context of the work

1133
00:39:23,680 --> 00:39:24,880
um

1134
00:39:24,880 --> 00:39:26,079
and that means that you need to be

1135
00:39:26,079 --> 00:39:28,880
focusing more on coordination and

1136
00:39:28,880 --> 00:39:30,320
communication

1137
00:39:30,320 --> 00:39:33,599
and less on central control right

1138
00:39:33,599 --> 00:39:35,839
um you know and in some cases this is

1139
00:39:35,839 --> 00:39:39,520
saying to this might be saying to a um

1140
00:39:39,520 --> 00:39:41,599
you know to a development team you know

1141
00:39:41,599 --> 00:39:43,119
this is the set of things that you can

1142
00:39:43,119 --> 00:39:45,280
deploy without any oversight this is the

1143
00:39:45,280 --> 00:39:47,599
structure this is you know

1144
00:39:47,599 --> 00:39:49,440
i mean let's say we're thinking about

1145
00:39:49,440 --> 00:39:52,320
reliability or efficiency like you know

1146
00:39:52,320 --> 00:39:54,480
you can go you know you can spike 2x or

1147
00:39:54,480 --> 00:39:57,280
3x or 10x over your normal compute

1148
00:39:57,280 --> 00:39:58,560
budget

1149
00:39:58,560 --> 00:40:00,160
you know to keep the system up right

1150
00:40:00,160 --> 00:40:01,680
we're fine you know we're fine taking

1151
00:40:01,680 --> 00:40:03,839
that cost at some point we need to kind

1152
00:40:03,839 --> 00:40:06,000
of you know tie it in

1153
00:40:06,000 --> 00:40:08,319
you know but but getting those decisions

1154
00:40:08,319 --> 00:40:09,359
closer

1155
00:40:09,359 --> 00:40:11,200
to the place where there's context is

1156
00:40:11,200 --> 00:40:12,640
really useful

1157
00:40:12,640 --> 00:40:13,839
um

1158
00:40:13,839 --> 00:40:15,680
what you need to do this

1159
00:40:15,680 --> 00:40:16,720
is

1160
00:40:16,720 --> 00:40:18,800
you need thick thick horizontal

1161
00:40:18,800 --> 00:40:20,960
relationships right and this is what i

1162
00:40:20,960 --> 00:40:22,240
was talking kind of at the beginning

1163
00:40:22,240 --> 00:40:23,359
about

1164
00:40:23,359 --> 00:40:26,079
needing um you know these are

1165
00:40:26,079 --> 00:40:27,839
any of these kind of emergent properties

1166
00:40:27,839 --> 00:40:30,800
require the entire set of people working

1167
00:40:30,800 --> 00:40:32,960
on a system to operate

1168
00:40:32,960 --> 00:40:36,079
collectively you know this is the well

1169
00:40:36,079 --> 00:40:37,839
you know you can't ship a secure system

1170
00:40:37,839 --> 00:40:39,920
if the dev team is isn't also trying to

1171
00:40:39,920 --> 00:40:42,240
ship a secure system and that means that

1172
00:40:42,240 --> 00:40:44,000
the dev team needs to know who security

1173
00:40:44,000 --> 00:40:45,440
is because they're going to have

1174
00:40:45,440 --> 00:40:47,200
questions right and like yeah you can

1175
00:40:47,200 --> 00:40:49,040
have your security champions program and

1176
00:40:49,040 --> 00:40:50,560
your this and your that

1177
00:40:50,560 --> 00:40:53,200
um but like for instance at etsy um you

1178
00:40:53,200 --> 00:40:54,160
know there were a bunch of healthy

1179
00:40:54,160 --> 00:40:56,079
snacks in the building and then security

1180
00:40:56,079 --> 00:40:58,240
had candy right and a whole lot of

1181
00:40:58,240 --> 00:41:00,480
people from a whole lot of different

1182
00:41:00,480 --> 00:41:02,560
places would show up and come get candy

1183
00:41:02,560 --> 00:41:04,400
from security and that meant that

1184
00:41:04,400 --> 00:41:07,839
literally like we knew a bunch of people

1185
00:41:07,839 --> 00:41:10,160
in a bunch of different contexts that we

1186
00:41:10,160 --> 00:41:11,839
wouldn't necessarily have known

1187
00:41:11,839 --> 00:41:13,119
otherwise

1188
00:41:13,119 --> 00:41:15,040
just you know for those kind of social

1189
00:41:15,040 --> 00:41:16,480
reasons which meant that it was much

1190
00:41:16,480 --> 00:41:19,440
easier to go and you know like when when

1191
00:41:19,440 --> 00:41:21,680
somebody had a security question they

1192
00:41:21,680 --> 00:41:23,520
probably knew somebody on the security

1193
00:41:23,520 --> 00:41:25,760
team well enough to kind of lower that

1194
00:41:25,760 --> 00:41:28,079
bar to just you know ping them on slack

1195
00:41:28,079 --> 00:41:29,200
etc

1196
00:41:29,200 --> 00:41:30,240
um

1197
00:41:30,240 --> 00:41:33,440
you know and we could get that kind of

1198
00:41:33,440 --> 00:41:35,440
thick communication

1199
00:41:35,440 --> 00:41:37,920
decentralized coordination

1200
00:41:37,920 --> 00:41:40,400
not top-down control

1201
00:41:40,400 --> 00:41:42,800
um which allowed for

1202
00:41:42,800 --> 00:41:45,599
better response etc when things did go

1203
00:41:45,599 --> 00:41:47,839
kind of outside the outside the bounds

1204
00:41:47,839 --> 00:41:51,839
of normal normal operation

1205
00:41:51,920 --> 00:41:56,319
um prioritize replanning um

1206
00:41:56,319 --> 00:41:58,480
this is again like you know this is

1207
00:41:58,480 --> 00:41:59,920
something for resilient systems in

1208
00:41:59,920 --> 00:42:04,240
general i think it's especially true for

1209
00:42:04,240 --> 00:42:05,839
you know things like instant response we

1210
00:42:05,839 --> 00:42:07,920
know we end up doing this a bunch but

1211
00:42:07,920 --> 00:42:10,640
also for um

1212
00:42:10,640 --> 00:42:13,040
you know looking at like major security

1213
00:42:13,040 --> 00:42:16,240
initiatives etc right we know that you

1214
00:42:16,240 --> 00:42:17,839
know you make a plan mostly to have

1215
00:42:17,839 --> 00:42:19,359
something to destroy as soon as you

1216
00:42:19,359 --> 00:42:20,560
start work

1217
00:42:20,560 --> 00:42:23,119
um you could basically guarantee that

1218
00:42:23,119 --> 00:42:26,160
that plan is going to change

1219
00:42:26,160 --> 00:42:28,319
um

1220
00:42:28,319 --> 00:42:29,280
now

1221
00:42:29,280 --> 00:42:31,839
that means that you need to be like

1222
00:42:31,839 --> 00:42:34,160
you need to focus on replanning instead

1223
00:42:34,160 --> 00:42:36,079
of focusing on on like

1224
00:42:36,079 --> 00:42:37,920
making that initial plan as heavy as you

1225
00:42:37,920 --> 00:42:40,160
know as correct as possible

1226
00:42:40,160 --> 00:42:41,119
um

1227
00:42:41,119 --> 00:42:42,640
and this is you know

1228
00:42:42,640 --> 00:42:44,160
i think one of the things that like at

1229
00:42:44,160 --> 00:42:45,040
the

1230
00:42:45,040 --> 00:42:47,440
at the sort of at the sprint level

1231
00:42:47,440 --> 00:42:49,280
we've gotten better at this right we're

1232
00:42:49,280 --> 00:42:50,960
kind of used to re-planning on that

1233
00:42:50,960 --> 00:42:54,170
context we're not necessarily used to

1234
00:42:54,170 --> 00:42:55,280
[Music]

1235
00:42:55,280 --> 00:42:58,160
managing resynchronization as stuff

1236
00:42:58,160 --> 00:43:00,560
changes across teams on a sprint by

1237
00:43:00,560 --> 00:43:03,280
sprint basis and we're definitely not

1238
00:43:03,280 --> 00:43:04,800
good at

1239
00:43:04,800 --> 00:43:07,119
managing this kind of replanning at the

1240
00:43:07,119 --> 00:43:09,440
structural level um

1241
00:43:09,440 --> 00:43:12,640
i have yet to see

1242
00:43:12,640 --> 00:43:17,280
a large dev org that could reliably do

1243
00:43:17,280 --> 00:43:18,640
reorgs

1244
00:43:18,640 --> 00:43:21,040
without someone quitting

1245
00:43:21,040 --> 00:43:23,839
you know and that to me feels like given

1246
00:43:23,839 --> 00:43:25,760
that we know that reorgs are inevitable

1247
00:43:25,760 --> 00:43:27,599
we know that replanting is inevitable we

1248
00:43:27,599 --> 00:43:30,000
know that shuffling goals is inevitable

1249
00:43:30,000 --> 00:43:32,160
that seems like a pretty big you know

1250
00:43:32,160 --> 00:43:33,280
failure

1251
00:43:33,280 --> 00:43:35,520
given the way that we know we have to

1252
00:43:35,520 --> 00:43:36,720
work

1253
00:43:36,720 --> 00:43:38,800
in a resilient scenario and i think as

1254
00:43:38,800 --> 00:43:40,560
we're looking at

1255
00:43:40,560 --> 00:43:44,720
our threat environments changing our um

1256
00:43:44,720 --> 00:43:47,520
you know our um the the meaning of our

1257
00:43:47,520 --> 00:43:49,040
systems changing

1258
00:43:49,040 --> 00:43:51,440
and changing fairly rapidly

1259
00:43:51,440 --> 00:43:55,920
this is gonna have an impact on the um

1260
00:43:55,920 --> 00:43:58,000
on the you know on security

1261
00:43:58,000 --> 00:44:00,560
teams more and more directly um just to

1262
00:44:00,560 --> 00:44:01,839
answer the question on balancing

1263
00:44:01,839 --> 00:44:03,359
decentralized decision making versus

1264
00:44:03,359 --> 00:44:06,000
having a single sort of truth um

1265
00:44:06,000 --> 00:44:10,240
what i'm talking about here is the um

1266
00:44:10,240 --> 00:44:12,640
uh decentralized decision making in the

1267
00:44:12,640 --> 00:44:16,000
context of um

1268
00:44:16,000 --> 00:44:17,599
of the engineers doing the work not

1269
00:44:17,599 --> 00:44:19,520
necessarily like i'm not saying that you

1270
00:44:19,520 --> 00:44:21,359
know there shouldn't be still a single

1271
00:44:21,359 --> 00:44:23,520
search of truth but i think this is this

1272
00:44:23,520 --> 00:44:25,359
is one of the things where if you

1273
00:44:25,359 --> 00:44:27,280
if you have as a principle

1274
00:44:27,280 --> 00:44:28,880
like that's that's kind of accepted that

1275
00:44:28,880 --> 00:44:32,000
we will always ship systems that have a

1276
00:44:32,000 --> 00:44:33,839
single source of truth

1277
00:44:33,839 --> 00:44:36,000
then it's basically a forcing function

1278
00:44:36,000 --> 00:44:37,760
right that principle exists as a forcing

1279
00:44:37,760 --> 00:44:39,680
function to save those two teams like

1280
00:44:39,680 --> 00:44:40,640
look

1281
00:44:40,640 --> 00:44:42,400
you can figure this out directly right

1282
00:44:42,400 --> 00:44:44,079
you're empowered to go make that

1283
00:44:44,079 --> 00:44:46,400
decision between the two of you

1284
00:44:46,400 --> 00:44:49,280
you probably also required as you know

1285
00:44:49,280 --> 00:44:50,880
as kind of the caveat to that power to

1286
00:44:50,880 --> 00:44:53,119
go find the other stakeholders

1287
00:44:53,119 --> 00:44:54,000
um

1288
00:44:54,000 --> 00:44:55,040
but

1289
00:44:55,040 --> 00:44:56,079
um

1290
00:44:56,079 --> 00:44:57,280
that doesn't mean you get to bend the

1291
00:44:57,280 --> 00:44:59,839
principal right you still have to say

1292
00:44:59,839 --> 00:45:02,400
like one of you two has to win

1293
00:45:02,400 --> 00:45:03,359
and

1294
00:45:03,359 --> 00:45:06,319
ideally you're in a context where you

1295
00:45:06,319 --> 00:45:08,240
are on the same side

1296
00:45:08,240 --> 00:45:10,480
and you're not dealing with um you know

1297
00:45:10,480 --> 00:45:13,200
inter-team or inter-dev org in fights

1298
00:45:13,200 --> 00:45:16,240
about you know territory and power etc

1299
00:45:16,240 --> 00:45:18,079
um but if you are you should probably

1300
00:45:18,079 --> 00:45:19,440
solve those

1301
00:45:19,440 --> 00:45:21,920
instead of bending the principles for

1302
00:45:21,920 --> 00:45:23,440
your system design

1303
00:45:23,440 --> 00:45:25,280
you know and this this kind of gets into

1304
00:45:25,280 --> 00:45:27,200
the um

1305
00:45:27,200 --> 00:45:28,880
you know like the incentive structure

1306
00:45:28,880 --> 00:45:30,720
that you design

1307
00:45:30,720 --> 00:45:32,240
in your organization is going to

1308
00:45:32,240 --> 00:45:33,760
determine the applications that you

1309
00:45:33,760 --> 00:45:37,040
build right the reason why aws has so

1310
00:45:37,040 --> 00:45:39,520
many services is that above a certain

1311
00:45:39,520 --> 00:45:41,599
point you have to launch a new service

1312
00:45:41,599 --> 00:45:43,599
to get promoted

1313
00:45:43,599 --> 00:45:45,839
this is a very dumb way to design a

1314
00:45:45,839 --> 00:45:48,800
cloud ecosystem um we should perhaps not

1315
00:45:48,800 --> 00:45:49,920
do that

1316
00:45:49,920 --> 00:45:51,520
um

1317
00:45:51,520 --> 00:45:52,400
so

1318
00:45:52,400 --> 00:45:54,400
one last one um

1319
00:45:54,400 --> 00:45:56,079
slack right

1320
00:45:56,079 --> 00:45:58,880
you cannot resiliently respond to out

1321
00:45:58,880 --> 00:46:01,680
out-of-context problems when you have a

1322
00:46:01,680 --> 00:46:04,240
team that hasn't taken vacations in

1323
00:46:04,240 --> 00:46:06,400
three years where everyone's working

1324
00:46:06,400 --> 00:46:08,079
70-hour weeks

1325
00:46:08,079 --> 00:46:10,319
um you know this means yeah you need to

1326
00:46:10,319 --> 00:46:12,319
have big enough on-call rotations you

1327
00:46:12,319 --> 00:46:14,079
need to make sure people actually take

1328
00:46:14,079 --> 00:46:16,079
all of their vacation you should be

1329
00:46:16,079 --> 00:46:18,319
tracking out of hours work especially

1330
00:46:18,319 --> 00:46:19,200
for

1331
00:46:19,200 --> 00:46:22,560
sec ops and ops teams um and you should

1332
00:46:22,560 --> 00:46:26,640
have like actual caps on how fast you're

1333
00:46:26,640 --> 00:46:29,119
actually going to try and change stuff

1334
00:46:29,119 --> 00:46:30,240
um

1335
00:46:30,240 --> 00:46:33,280
anytime you're trying to improve these

1336
00:46:33,280 --> 00:46:35,760
kind of emergent properties across whole

1337
00:46:35,760 --> 00:46:38,480
systems it is going to take more time

1338
00:46:38,480 --> 00:46:40,880
than the bare minimum and any time you

1339
00:46:40,880 --> 00:46:44,319
get outside of kind of planned outcomes

1340
00:46:44,319 --> 00:46:46,640
you're going to end up asking your team

1341
00:46:46,640 --> 00:46:48,880
to put in a bunch of additional work so

1342
00:46:48,880 --> 00:46:50,800
in both of those contexts you make you

1343
00:46:50,800 --> 00:46:52,800
need to make sure that the teens

1344
00:46:52,800 --> 00:46:54,560
actually have the time

1345
00:46:54,560 --> 00:46:56,800
to uh to do the work that they need to

1346
00:46:56,800 --> 00:46:58,960
do for those properties not just for the

1347
00:46:58,960 --> 00:47:02,160
bare minimum correctness but also that

1348
00:47:02,160 --> 00:47:03,200
when

1349
00:47:03,200 --> 00:47:04,640
you hit a wall

1350
00:47:04,640 --> 00:47:06,560
and you know all of a sudden it's like

1351
00:47:06,560 --> 00:47:07,760
okay

1352
00:47:07,760 --> 00:47:09,200
we've got a bunch of stuff in the logs

1353
00:47:09,200 --> 00:47:10,560
that shouldn't look there this looks

1354
00:47:10,560 --> 00:47:11,599
serious

1355
00:47:11,599 --> 00:47:14,000
everybody cancel your weekends

1356
00:47:14,000 --> 00:47:16,240
um that people aren't just like you know

1357
00:47:16,240 --> 00:47:19,040
i'm just going to ignore that message

1358
00:47:19,040 --> 00:47:21,280
i don't really care they can fire me

1359
00:47:21,280 --> 00:47:22,640
that is not a thing that you want to

1360
00:47:22,640 --> 00:47:24,000
find out that you have your teams in

1361
00:47:24,000 --> 00:47:25,040
that state

1362
00:47:25,040 --> 00:47:27,760
during an incident um so you very least

1363
00:47:27,760 --> 00:47:29,760
need to know where they are and you

1364
00:47:29,760 --> 00:47:31,520
probably need to actively manage this

1365
00:47:31,520 --> 00:47:32,400
stuff

1366
00:47:32,400 --> 00:47:34,480
um and i know that a lot of folks in

1367
00:47:34,480 --> 00:47:36,000
security and i've been in this position

1368
00:47:36,000 --> 00:47:37,920
myself end up with this kind of

1369
00:47:37,920 --> 00:47:40,079
superhero mentality of like this is

1370
00:47:40,079 --> 00:47:42,319
important we're gonna save the world

1371
00:47:42,319 --> 00:47:45,040
yeah it doesn't actually work um

1372
00:47:45,040 --> 00:47:47,760
all you do is get burnt out and not save

1373
00:47:47,760 --> 00:47:51,520
anything um so take your vacations

1374
00:47:51,520 --> 00:47:53,280
anyway um

1375
00:47:53,280 --> 00:47:56,160
if this stuff is interesting and you

1376
00:47:56,160 --> 00:47:57,680
aren't in security and have a startup

1377
00:47:57,680 --> 00:47:59,520
i'd be happy to talk to you about how

1378
00:47:59,520 --> 00:48:02,240
you build a security team from xero um

1379
00:48:02,240 --> 00:48:04,559
and i'm also happy to talk through

1380
00:48:04,559 --> 00:48:07,559
questions

1381
00:48:11,119 --> 00:48:13,040
all right thank you very much eleanor uh

1382
00:48:13,040 --> 00:48:14,960
there's one question here is how do you

1383
00:48:14,960 --> 00:48:16,960
deal with unlinkability over multiple

1384
00:48:16,960 --> 00:48:18,079
degrees so

1385
00:48:18,079 --> 00:48:19,920
two pieces of data that can you know

1386
00:48:19,920 --> 00:48:21,440
with a link that can be inferred through

1387
00:48:21,440 --> 00:48:23,440
a third piece of data

1388
00:48:23,440 --> 00:48:25,359
yeah i mean i think it's it's gonna

1389
00:48:25,359 --> 00:48:28,240
depend on the context of of how

1390
00:48:28,240 --> 00:48:30,800
specifically you wanna tease those apart

1391
00:48:30,800 --> 00:48:34,079
um you know in general switching from uh

1392
00:48:34,079 --> 00:48:36,400
shared identifiers to opaque identifiers

1393
00:48:36,400 --> 00:48:37,359
um

1394
00:48:37,359 --> 00:48:39,119
moving to

1395
00:48:39,119 --> 00:48:40,640
you know systems where you send

1396
00:48:40,640 --> 00:48:43,359
transformed information instead of um

1397
00:48:43,359 --> 00:48:45,440
instead of raw information

1398
00:48:45,440 --> 00:48:46,800
all of these kinds of things let you

1399
00:48:46,800 --> 00:48:49,359
start teasing it apart um you know but

1400
00:48:49,359 --> 00:48:51,040
it's gonna it's really gonna depend on

1401
00:48:51,040 --> 00:48:53,359
the specific context um

1402
00:48:53,359 --> 00:48:56,559
you know there are um

1403
00:48:56,559 --> 00:48:58,079
there's been a bunch of work on some of

1404
00:48:58,079 --> 00:48:59,599
the kind of like privacy preserving

1405
00:48:59,599 --> 00:49:01,040
matching systems where you have a

1406
00:49:01,040 --> 00:49:04,160
certain privacy budget etc some of that

1407
00:49:04,160 --> 00:49:06,160
work turns out to maybe not actually

1408
00:49:06,160 --> 00:49:08,240
work as well as we thought it did like

1409
00:49:08,240 --> 00:49:09,920
there's a there's a whole evolving field

1410
00:49:09,920 --> 00:49:13,119
there um but honestly even if all you

1411
00:49:13,119 --> 00:49:15,920
look at is the identifiers you use where

1412
00:49:15,920 --> 00:49:18,160
they go to which third parties what data

1413
00:49:18,160 --> 00:49:19,839
you actually need to send to those third

1414
00:49:19,839 --> 00:49:22,160
parties what data you can avoid and in

1415
00:49:22,160 --> 00:49:24,240
general basically

1416
00:49:24,240 --> 00:49:28,240
um treat information as a as a cost

1417
00:49:28,240 --> 00:49:30,880
right every piece of data that you

1418
00:49:30,880 --> 00:49:33,280
store send you share

1419
00:49:33,280 --> 00:49:36,079
has a specific cost and kind of try to

1420
00:49:36,079 --> 00:49:38,880
minimize that cost yourself um you know

1421
00:49:38,880 --> 00:49:41,599
you end up kind of minimizing that risk

1422
00:49:41,599 --> 00:49:43,920
if you have more complicated situations

1423
00:49:43,920 --> 00:49:45,040
where you need to start looking at

1424
00:49:45,040 --> 00:49:47,599
interesting crypto and stuff cetera uh

1425
00:49:47,599 --> 00:49:49,440
i'm happy to talk about that offline

1426
00:49:49,440 --> 00:49:50,559
because those problems get super

1427
00:49:50,559 --> 00:49:52,079
fascinating but there also aren't

1428
00:49:52,079 --> 00:49:54,800
general answers

1429
00:49:55,200 --> 00:49:56,319
thank you

1430
00:49:56,319 --> 00:49:58,319
how do you balance decentralized

1431
00:49:58,319 --> 00:50:00,000
decision making with having single

1432
00:50:00,000 --> 00:50:02,319
sources of truth for state for instance

1433
00:50:02,319 --> 00:50:04,000
two teams i already covered this a

1434
00:50:04,000 --> 00:50:06,319
little bit earlier actually

1435
00:50:06,319 --> 00:50:07,839
yeah no i think it's i think it's

1436
00:50:07,839 --> 00:50:11,599
basically this is a question of um

1437
00:50:11,599 --> 00:50:13,760
making sure that you've

1438
00:50:13,760 --> 00:50:14,960
you know making sure that you're doing

1439
00:50:14,960 --> 00:50:17,040
your design intentionally making sure

1440
00:50:17,040 --> 00:50:18,720
the teams are actually talking to each

1441
00:50:18,720 --> 00:50:19,520
other

1442
00:50:19,520 --> 00:50:21,520
and also making sure that your system

1443
00:50:21,520 --> 00:50:23,359
architecture isn't determined by

1444
00:50:23,359 --> 00:50:26,319
politics which i know is um incredibly

1445
00:50:26,319 --> 00:50:28,640
difficult in a lot of contexts

1446
00:50:28,640 --> 00:50:30,880
but um i mean one of the things i'll

1447
00:50:30,880 --> 00:50:34,000
just i'll i'll pick on aws some more um

1448
00:50:34,000 --> 00:50:36,400
but i think a lot of a lot of uh cloud

1449
00:50:36,400 --> 00:50:38,319
providers are doing this right now

1450
00:50:38,319 --> 00:50:41,119
um complexity is lock-in right and so

1451
00:50:41,119 --> 00:50:43,680
they have there is no

1452
00:50:43,680 --> 00:50:47,359
um there is no drive to simplify

1453
00:50:47,359 --> 00:50:49,119
our cloud stacks

1454
00:50:49,119 --> 00:50:50,400
because

1455
00:50:50,400 --> 00:50:52,400
you know you give people a lot of

1456
00:50:52,400 --> 00:50:55,359
individual canned features that map very

1457
00:50:55,359 --> 00:50:58,400
directly to user problems it's faster

1458
00:50:58,400 --> 00:51:00,160
hey talk to your aws rep and they'll

1459
00:51:00,160 --> 00:51:02,240
tell you how to fix this um and i mean i

1460
00:51:02,240 --> 00:51:03,839
could in a lot of cases i could say the

1461
00:51:03,839 --> 00:51:06,960
same thing about gcp and azure um

1462
00:51:06,960 --> 00:51:09,119
whereas if we think about this from kind

1463
00:51:09,119 --> 00:51:11,119
of an emergent complexity structure

1464
00:51:11,119 --> 00:51:12,559
actually we need to be we need to be

1465
00:51:12,559 --> 00:51:15,440
flattening stuff a lot right we need to

1466
00:51:15,440 --> 00:51:17,680
you know the the number of layers that

1467
00:51:17,680 --> 00:51:20,000
we kind of stack on top of each other

1468
00:51:20,000 --> 00:51:22,800
each one of those layers has some set of

1469
00:51:22,800 --> 00:51:25,440
unpredictable failure modes um you know

1470
00:51:25,440 --> 00:51:26,880
and obviously

1471
00:51:26,880 --> 00:51:28,720
it's not a trivial thing for us to just

1472
00:51:28,720 --> 00:51:31,119
go out and like well let's um let's

1473
00:51:31,119 --> 00:51:32,720
redesign let's just boil the entire

1474
00:51:32,720 --> 00:51:35,440
ocean redesign the world in one go

1475
00:51:35,440 --> 00:51:36,720
but at a certain point we're gonna have

1476
00:51:36,720 --> 00:51:38,559
to start kind of knocking out some of

1477
00:51:38,559 --> 00:51:41,920
those layers flattening stuff out etc or

1478
00:51:41,920 --> 00:51:44,160
you know we can't just keep adding craft

1479
00:51:44,160 --> 00:51:46,720
on croft

1480
00:51:49,200 --> 00:51:50,720
thank you very much

1481
00:51:50,720 --> 00:51:53,280
um i i think that that's it for for the

1482
00:51:53,280 --> 00:51:57,040
questions that i've seen pop up here

1483
00:51:57,680 --> 00:52:00,240
give anyone a last second here

1484
00:52:00,240 --> 00:52:03,119
if not thank you very much for for the

1485
00:52:03,119 --> 00:52:04,880
presentation uh you covered a lot of

1486
00:52:04,880 --> 00:52:07,040
really important topics and uh gave a

1487
00:52:07,040 --> 00:52:09,440
lot to think about as well i know that i

1488
00:52:09,440 --> 00:52:12,000
at least um i'm having a few new

1489
00:52:12,000 --> 00:52:13,920
questions to add to my repertoire when

1490
00:52:13,920 --> 00:52:15,280
when dealing with clients so i really

1491
00:52:15,280 --> 00:52:16,800
really appreciate that

1492
00:52:16,800 --> 00:52:18,720
um thank you very much for for kicking

1493
00:52:18,720 --> 00:52:21,040
off day two of b-sides vancouver and to

1494
00:52:21,040 --> 00:52:23,119
everyone who's watching uh please enjoy

1495
00:52:23,119 --> 00:52:25,680
the conference we've got a number of uh

1496
00:52:25,680 --> 00:52:28,160
fantastic speakers lined up for the rest

1497
00:52:28,160 --> 00:52:30,960
of the day uh big thanks again to our

1498
00:52:30,960 --> 00:52:33,599
sponsors who helped us put this on

1499
00:52:33,599 --> 00:52:35,200
we just can't do it without you so we

1500
00:52:35,200 --> 00:52:37,680
really appreciate your support

1501
00:52:37,680 --> 00:52:39,280
thank you very much for having me thank

1502
00:52:39,280 --> 00:52:42,920
you bye

1503
00:52:58,800 --> 00:53:00,880
you

