1
00:00:01,680 --> 00:00:02,879
hi everyone

2
00:00:02,879 --> 00:00:04,720
time for cracking passwords for fun and

3
00:00:04,720 --> 00:00:06,720
profit uh my name is chris timmons i'm a

4
00:00:06,720 --> 00:00:08,080
penetration tester and security

5
00:00:08,080 --> 00:00:10,480
specialist team lead at ion united

6
00:00:10,480 --> 00:00:11,679
um

7
00:00:11,679 --> 00:00:13,200
second time presenting for b-sides

8
00:00:13,200 --> 00:00:15,519
vancouver so let's hope it's a good one

9
00:00:15,519 --> 00:00:16,720
this time

10
00:00:16,720 --> 00:00:18,960
so passwords everyone has one

11
00:00:18,960 --> 00:00:21,600
um and they you know people make

12
00:00:21,600 --> 00:00:24,160
passwords differently um you know you

13
00:00:24,160 --> 00:00:25,760
look at the complexity requirements and

14
00:00:25,760 --> 00:00:27,359
things some people think they know how

15
00:00:27,359 --> 00:00:29,119
to create a good password some people

16
00:00:29,119 --> 00:00:30,960
don't we're actually going to take a

17
00:00:30,960 --> 00:00:32,800
look at the back end on it and see how

18
00:00:32,800 --> 00:00:34,239
some of that stuff

19
00:00:34,239 --> 00:00:35,440
works when we're actually trying to

20
00:00:35,440 --> 00:00:36,880
crack passwords so if we're doing a pen

21
00:00:36,880 --> 00:00:38,800
test and we're getting passwords how

22
00:00:38,800 --> 00:00:40,960
quickly and easy can we crack them

23
00:00:40,960 --> 00:00:42,719
and some of the human nature around it i

24
00:00:42,719 --> 00:00:44,640
mean obviously a lot of people

25
00:00:44,640 --> 00:00:46,480
understand why but we're going to dive

26
00:00:46,480 --> 00:00:47,920
into that a little bit for those who

27
00:00:47,920 --> 00:00:50,160
don't

28
00:00:50,239 --> 00:00:52,239
so who am i as i mentioned security

29
00:00:52,239 --> 00:00:54,079
specialist team leader ion i've been

30
00:00:54,079 --> 00:00:57,360
doing this for about 27 years i've

31
00:00:57,360 --> 00:00:58,719
been in the department of national

32
00:00:58,719 --> 00:01:00,719
defense i've held senior roles at

33
00:01:00,719 --> 00:01:02,640
various companies i've been working at

34
00:01:02,640 --> 00:01:05,438
ion united as a pen tester for just over

35
00:01:05,438 --> 00:01:07,200
three years now

36
00:01:07,200 --> 00:01:09,040
so we have

37
00:01:09,040 --> 00:01:10,840
done lots of

38
00:01:10,840 --> 00:01:13,280
things and according to my what loving

39
00:01:13,280 --> 00:01:15,360
wife and i have to say loving wife my

40
00:01:15,360 --> 00:01:17,439
workshop can act as a nasa disaster

41
00:01:17,439 --> 00:01:20,240
recovery location it is got stuff all

42
00:01:20,240 --> 00:01:22,159
over the place and it's used to help

43
00:01:22,159 --> 00:01:24,560
extract passwords i do forensic hacking

44
00:01:24,560 --> 00:01:26,400
i do

45
00:01:26,400 --> 00:01:28,560
password cracking hardware hacking a bit

46
00:01:28,560 --> 00:01:29,759
of wireless

47
00:01:29,759 --> 00:01:31,840
did smartphones for a while

48
00:01:31,840 --> 00:01:32,799
uh

49
00:01:32,799 --> 00:01:34,240
obviously doing a lot of forensics for

50
00:01:34,240 --> 00:01:36,400
things like incident response and i used

51
00:01:36,400 --> 00:01:38,079
to play around with robots and stuff as

52
00:01:38,079 --> 00:01:40,720
part of an innovation team so hacking a

53
00:01:40,720 --> 00:01:43,520
robot is fun

54
00:01:43,920 --> 00:01:46,159
so why well i like shiny things and i am

55
00:01:46,159 --> 00:01:48,560
a chronic procrastinator if there is a

56
00:01:48,560 --> 00:01:50,479
reason not to do work my boss is going

57
00:01:50,479 --> 00:01:53,920
to think that i do it um i'm also a huge

58
00:01:53,920 --> 00:01:55,520
fan of build once and use many if you're

59
00:01:55,520 --> 00:01:57,759
gonna do it once great if you know that

60
00:01:57,759 --> 00:01:59,119
you're gonna have to do it twice just

61
00:01:59,119 --> 00:02:00,799
automate it because then you'll thank

62
00:02:00,799 --> 00:02:02,399
yourself the third fourth fifth sixth

63
00:02:02,399 --> 00:02:05,439
seventh time you've done it

64
00:02:05,680 --> 00:02:06,960
and as i mentioned i like cracking

65
00:02:06,960 --> 00:02:09,199
passwords so this is my home rig right

66
00:02:09,199 --> 00:02:12,720
here i've got four nvidia gtx 1080s in

67
00:02:12,720 --> 00:02:13,360
it

68
00:02:13,360 --> 00:02:14,239
with

69
00:02:14,239 --> 00:02:16,560
terabytes and terabytes of space

70
00:02:16,560 --> 00:02:18,239
because i like to collect things i'm a

71
00:02:18,239 --> 00:02:20,720
data hoarder so i've got password list

72
00:02:20,720 --> 00:02:22,480
anytime i find a dictionary on the

73
00:02:22,480 --> 00:02:24,160
internet i grab it i check the quality

74
00:02:24,160 --> 00:02:27,200
of it breach compilation data um

75
00:02:27,200 --> 00:02:29,680
i've got it all and just sit there and

76
00:02:29,680 --> 00:02:30,560
keep

77
00:02:30,560 --> 00:02:34,760
building up more and more and more

78
00:02:36,480 --> 00:02:38,160
so i'm going to dive into a little bit

79
00:02:38,160 --> 00:02:40,400
on hash cat and i'm going to focus on

80
00:02:40,400 --> 00:02:42,879
hash cat today just because uh nothing

81
00:02:42,879 --> 00:02:44,800
against john

82
00:02:44,800 --> 00:02:46,640
it's just i wanted to use haskat for the

83
00:02:46,640 --> 00:02:48,879
presentation today

84
00:02:48,879 --> 00:02:50,800
so

85
00:02:50,800 --> 00:02:52,879
one of the things with hash cat is it's

86
00:02:52,879 --> 00:02:55,280
very versatile um it supports what are

87
00:02:55,280 --> 00:02:56,720
called a number of different attack

88
00:02:56,720 --> 00:02:59,680
modes straight combination brute force

89
00:02:59,680 --> 00:03:02,159
which technically is a mask attack

90
00:03:02,159 --> 00:03:04,239
and then two different kinds of hybrid

91
00:03:04,239 --> 00:03:06,560
word list plus masks so word list and

92
00:03:06,560 --> 00:03:08,800
mask or mask and wordless and then

93
00:03:08,800 --> 00:03:10,560
another one that a lot of people don't

94
00:03:10,560 --> 00:03:12,480
know about uh called an association

95
00:03:12,480 --> 00:03:13,920
attack so we're actually going to go and

96
00:03:13,920 --> 00:03:17,799
walk through some of these

97
00:03:18,480 --> 00:03:19,840
so

98
00:03:19,840 --> 00:03:21,440
some of the basics on this one so

99
00:03:21,440 --> 00:03:23,680
dictionaries dictionaries are big giant

100
00:03:23,680 --> 00:03:25,519
word lists and they're either two things

101
00:03:25,519 --> 00:03:26,400
one

102
00:03:26,400 --> 00:03:28,799
they're a compilation of exposed

103
00:03:28,799 --> 00:03:30,640
breached passwords so things like rock

104
00:03:30,640 --> 00:03:31,599
you

105
00:03:31,599 --> 00:03:33,440
weak pass is a good one because they go

106
00:03:33,440 --> 00:03:35,040
and they get all the breach data and

107
00:03:35,040 --> 00:03:36,640
stuff that comes out scrapes it and

108
00:03:36,640 --> 00:03:38,159
basically puts all the passwords and

109
00:03:38,159 --> 00:03:40,640
stuff into a file and it's a big file uh

110
00:03:40,640 --> 00:03:43,120
the latest weak pass three

111
00:03:43,120 --> 00:03:45,200
is just over 100 gigabytes in size so

112
00:03:45,200 --> 00:03:47,280
that is a lot of passwords

113
00:03:47,280 --> 00:03:49,120
um and they do a pretty decent job of

114
00:03:49,120 --> 00:03:50,720
cleaning it up crack station was one

115
00:03:50,720 --> 00:03:52,239
from a couple years ago it's a decent

116
00:03:52,239 --> 00:03:53,360
size

117
00:03:53,360 --> 00:03:55,680
um but it's beyond just looking at

118
00:03:55,680 --> 00:03:57,120
passwords that are exposed you know like

119
00:03:57,120 --> 00:03:59,040
summer 2022.

120
00:03:59,040 --> 00:04:00,640
great it's in a password file but what

121
00:04:00,640 --> 00:04:02,480
about other things that don't have

122
00:04:02,480 --> 00:04:03,840
letters and numbers and special

123
00:04:03,840 --> 00:04:04,879
characters on it and that's where

124
00:04:04,879 --> 00:04:07,439
dictionaries really come in so use all

125
00:04:07,439 --> 00:04:09,040
the languages why because well you don't

126
00:04:09,040 --> 00:04:11,760
know what languages might be in use of

127
00:04:11,760 --> 00:04:13,599
the password that you're cracking

128
00:04:13,599 --> 00:04:16,720
um they could be using um

129
00:04:16,720 --> 00:04:19,120
german or russian

130
00:04:19,120 --> 00:04:20,720
characters or something with um lots in

131
00:04:20,720 --> 00:04:22,400
them and that's why i mentioned about

132
00:04:22,400 --> 00:04:24,479
utf-encoded dictionaries are the best to

133
00:04:24,479 --> 00:04:26,840
use because they support

134
00:04:26,840 --> 00:04:32,000
it um other wordless sports sport teams

135
00:04:32,000 --> 00:04:33,280
music

136
00:04:33,280 --> 00:04:36,240
names of songs

137
00:04:36,240 --> 00:04:38,400
breeds of dogs that's actually a pretty

138
00:04:38,400 --> 00:04:39,840
common one

139
00:04:39,840 --> 00:04:42,000
another one is pass phrases um i've got

140
00:04:42,000 --> 00:04:44,000
some stuff in here i'll show you guys on

141
00:04:44,000 --> 00:04:46,240
how to get some good passphrases and

142
00:04:46,240 --> 00:04:48,320
we're talking things like every verse of

143
00:04:48,320 --> 00:04:51,840
the bible or every lyric to every song

144
00:04:51,840 --> 00:04:54,800
ever made or you know those are phrases

145
00:04:54,800 --> 00:04:56,080
that people can use when they're

146
00:04:56,080 --> 00:04:58,240
creating a password

147
00:04:58,240 --> 00:04:59,919
and of course i mentioned data breaches

148
00:04:59,919 --> 00:05:03,039
there's just a lot um so i don't rely

149
00:05:03,039 --> 00:05:04,960
necessarily on week pass and stuff like

150
00:05:04,960 --> 00:05:06,880
that to go get them for me i've got a

151
00:05:06,880 --> 00:05:08,880
couple of terabytes of breach data that

152
00:05:08,880 --> 00:05:10,800
i go munging through whenever i need

153
00:05:10,800 --> 00:05:13,199
something

154
00:05:15,680 --> 00:05:18,000
one of the things about is

155
00:05:18,000 --> 00:05:19,360
if you

156
00:05:19,360 --> 00:05:20,479
are ever

157
00:05:20,479 --> 00:05:22,240
pen testing or

158
00:05:22,240 --> 00:05:24,880
cracking passwords against a customer

159
00:05:24,880 --> 00:05:26,720
one of the important things to do is

160
00:05:26,720 --> 00:05:28,080
make sure that you're using words in

161
00:05:28,080 --> 00:05:29,919
terminology and things that are relative

162
00:05:29,919 --> 00:05:31,120
to that company

163
00:05:31,120 --> 00:05:33,280
um the number of times we've gone in and

164
00:05:33,280 --> 00:05:35,120
and we're doing password cracking for a

165
00:05:35,120 --> 00:05:36,720
customer

166
00:05:36,720 --> 00:05:39,520
and they're using words that are posted

167
00:05:39,520 --> 00:05:41,199
on their website they're using the name

168
00:05:41,199 --> 00:05:44,320
of the company um so cool is a custom

169
00:05:44,320 --> 00:05:46,000
word list generator it's just a little

170
00:05:46,000 --> 00:05:48,240
rui app you tell it to go spyder a

171
00:05:48,240 --> 00:05:49,680
website it goes and searches through all

172
00:05:49,680 --> 00:05:52,720
the metadata pulls out names of things

173
00:05:52,720 --> 00:05:54,560
and software and that was used to create

174
00:05:54,560 --> 00:05:56,639
the file

175
00:05:56,639 --> 00:05:58,319
and then it compresses it all into a

176
00:05:58,319 --> 00:06:00,720
nice sorted list and you can tell it to

177
00:06:00,720 --> 00:06:01,840
make it all lower case and you can

178
00:06:01,840 --> 00:06:03,520
mangle the data however you want

179
00:06:03,520 --> 00:06:04,880
afterwards

180
00:06:04,880 --> 00:06:08,000
but it's extremely effective um

181
00:06:08,000 --> 00:06:09,520
first thing i run anytime i'm doing

182
00:06:09,520 --> 00:06:11,840
ocent on a customer uh just getting

183
00:06:11,840 --> 00:06:13,360
ready for password cracking because the

184
00:06:13,360 --> 00:06:16,160
number of times that it's

185
00:06:16,160 --> 00:06:17,520
company name

186
00:06:17,520 --> 00:06:20,720
12345 is the password or

187
00:06:20,720 --> 00:06:22,639
the name of a software project or

188
00:06:22,639 --> 00:06:24,240
something that they're working on and

189
00:06:24,240 --> 00:06:25,840
we'll actually get more into the name of

190
00:06:25,840 --> 00:06:27,680
the software project in just a little

191
00:06:27,680 --> 00:06:29,840
bit

192
00:06:30,479 --> 00:06:33,120
second part of hashcat is rules and the

193
00:06:33,120 --> 00:06:35,520
rules as part of the mask attack

194
00:06:35,520 --> 00:06:37,840
are just these are just some examples of

195
00:06:37,840 --> 00:06:39,680
some of the good ones that uh hashcat

196
00:06:39,680 --> 00:06:42,319
has in it and a couple that aren't

197
00:06:42,319 --> 00:06:44,800
um and rules this basically take

198
00:06:44,800 --> 00:06:47,199
letters and characters within a password

199
00:06:47,199 --> 00:06:49,840
and flip it so it can make

200
00:06:49,840 --> 00:06:51,599
lowercase to uppercase so the toggles

201
00:06:51,599 --> 00:06:54,000
rules for example will capitalize one to

202
00:06:54,000 --> 00:06:55,759
five characters in the password

203
00:06:55,759 --> 00:06:59,039
concurrently so a toggles two rule we'll

204
00:06:59,039 --> 00:07:01,120
just take two characters so first

205
00:07:01,120 --> 00:07:02,639
character and last character and then

206
00:07:02,639 --> 00:07:04,000
first character and third character and

207
00:07:04,000 --> 00:07:05,840
just keeps going through the iterations

208
00:07:05,840 --> 00:07:10,080
um trying variations on it

209
00:07:10,440 --> 00:07:12,479
99.999999 percent of the time human

210
00:07:12,479 --> 00:07:15,120
nature people will put a capital letter

211
00:07:15,120 --> 00:07:17,759
somewhere usually not more than a couple

212
00:07:17,759 --> 00:07:19,440
though and it's usually in the first

213
00:07:19,440 --> 00:07:20,720
spot

214
00:07:20,720 --> 00:07:22,639
a second one is a combinator rule where

215
00:07:22,639 --> 00:07:24,160
you can actually combine two words so

216
00:07:24,160 --> 00:07:25,919
you take two dictionaries

217
00:07:25,919 --> 00:07:27,599
or even the same dictionary and you

218
00:07:27,599 --> 00:07:28,880
throw it together

219
00:07:28,880 --> 00:07:30,960
why well because way back in the day

220
00:07:30,960 --> 00:07:32,560
people were telling people make good

221
00:07:32,560 --> 00:07:34,160
passwords and then so you would make a

222
00:07:34,160 --> 00:07:36,160
password your password be the name of

223
00:07:36,160 --> 00:07:37,120
your dog

224
00:07:37,120 --> 00:07:38,639
and then they realized oh well you need

225
00:07:38,639 --> 00:07:40,240
to make a better password it's got to

226
00:07:40,240 --> 00:07:43,759
meet windows complexity requirements so

227
00:07:43,759 --> 00:07:46,319
it has to be a longer word oh okay well

228
00:07:46,319 --> 00:07:48,319
let's get the name of both of my dogs

229
00:07:48,319 --> 00:07:49,440
together

230
00:07:49,440 --> 00:07:51,520
combinator rule

231
00:07:51,520 --> 00:07:53,120
uh and of course

232
00:07:53,120 --> 00:07:55,199
you can't crack passwords without leap

233
00:07:55,199 --> 00:07:58,879
speak because everybody makes a password

234
00:07:58,879 --> 00:08:02,000
uh the dead rule um just one of the ones

235
00:08:02,000 --> 00:08:05,039
that i find between that and best 64. uh

236
00:08:05,039 --> 00:08:06,639
they you know they're a little older but

237
00:08:06,639 --> 00:08:09,360
they get the job done uh there's even a

238
00:08:09,360 --> 00:08:12,240
reduced version of the dead rule which

239
00:08:12,240 --> 00:08:14,800
takes the 75 000 rules or something and

240
00:08:14,800 --> 00:08:16,960
dumps it down to like 1500 so it's like

241
00:08:16,960 --> 00:08:19,039
really small very efficient

242
00:08:19,039 --> 00:08:20,960
because what happens with a lot of rules

243
00:08:20,960 --> 00:08:23,840
and i'll show you some statistics after

244
00:08:23,840 --> 00:08:25,919
you hit kind of a point of okay we've

245
00:08:25,919 --> 00:08:28,000
gotten just about everything so but

246
00:08:28,000 --> 00:08:29,520
you're still processing things in the

247
00:08:29,520 --> 00:08:31,280
background and it's not

248
00:08:31,280 --> 00:08:34,240
doing anything useful

249
00:08:34,240 --> 00:08:36,080
the one rule to rule them all as i

250
00:08:36,080 --> 00:08:37,519
mentioned it's not a lord of the rings

251
00:08:37,519 --> 00:08:39,760
reference but it does work uh it's

252
00:08:39,760 --> 00:08:42,799
probably it's a large rule but it tends

253
00:08:42,799 --> 00:08:44,640
to be highly effective and really it

254
00:08:44,640 --> 00:08:46,080
depends on what you're cracking at the

255
00:08:46,080 --> 00:08:49,360
time um i usually just put them all i'll

256
00:08:49,360 --> 00:08:51,040
you can you

257
00:08:51,040 --> 00:08:52,480
you can load up all the rules at the

258
00:08:52,480 --> 00:08:55,839
same time but it'll just take forever

259
00:08:56,399 --> 00:08:58,240
think of your talk

260
00:08:58,240 --> 00:09:00,959
nice one data

261
00:09:02,000 --> 00:09:03,440
the second thing is so when you take a

262
00:09:03,440 --> 00:09:05,200
look at when you're creating rules and

263
00:09:05,200 --> 00:09:07,440
masks and stuff

264
00:09:07,440 --> 00:09:08,720
you use character sets and these

265
00:09:08,720 --> 00:09:10,320
character sets all break down into

266
00:09:10,320 --> 00:09:12,959
different ones so

267
00:09:12,959 --> 00:09:15,120
the l is lowercase and upper is

268
00:09:15,120 --> 00:09:17,760
uppercase d is digit s stands for

269
00:09:17,760 --> 00:09:20,080
special characters

270
00:09:20,080 --> 00:09:22,000
a lot of people use the a which is all

271
00:09:22,000 --> 00:09:23,760
four of them uh you can also define

272
00:09:23,760 --> 00:09:25,519
custom character sets so i could use

273
00:09:25,519 --> 00:09:27,360
like dash one

274
00:09:27,360 --> 00:09:29,200
and say i just want lower upper and

275
00:09:29,200 --> 00:09:31,279
digits and no special characters and

276
00:09:31,279 --> 00:09:33,360
then i can use that in my mask so i'm

277
00:09:33,360 --> 00:09:34,880
not having to type it all out and i'll

278
00:09:34,880 --> 00:09:36,640
try those three different variations

279
00:09:36,640 --> 00:09:39,360
within the character set

280
00:09:39,360 --> 00:09:42,160
some of the lesser known ones of course

281
00:09:42,160 --> 00:09:44,640
hexadecimal and uppercase or lowercase

282
00:09:44,640 --> 00:09:47,760
it's got a flag for both

283
00:09:48,399 --> 00:09:50,800
so why do we use masks well the masks

284
00:09:50,800 --> 00:09:52,800
are based on the whole strong password

285
00:09:52,800 --> 00:09:55,279
rules we've forced on users for years

286
00:09:55,279 --> 00:09:57,279
and unfortunately users are really bad

287
00:09:57,279 --> 00:09:59,200
at picking passwords usually it's a word

288
00:09:59,200 --> 00:10:00,880
and a number and a special character and

289
00:10:00,880 --> 00:10:02,399
as i mentioned it always starts with an

290
00:10:02,399 --> 00:10:04,880
uppercase letter knowing this you can

291
00:10:04,880 --> 00:10:06,240
actually

292
00:10:06,240 --> 00:10:08,560
say well let's not test every password

293
00:10:08,560 --> 00:10:10,160
we'll just test the

294
00:10:10,160 --> 00:10:13,120
key space that we want to that we assume

295
00:10:13,120 --> 00:10:15,040
that the users are going to go and take

296
00:10:15,040 --> 00:10:17,200
a look so if you use a mask of upper

297
00:10:17,200 --> 00:10:19,360
lower lower lower digit digital that

298
00:10:19,360 --> 00:10:21,200
equals spring 2020t

299
00:10:21,200 --> 00:10:22,079
perfect

300
00:10:22,079 --> 00:10:23,600
so and because we don't have to go

301
00:10:23,600 --> 00:10:25,120
through all these special characters and

302
00:10:25,120 --> 00:10:26,880
uppercase characters and everything else

303
00:10:26,880 --> 00:10:29,519
you're only checking 26

304
00:10:29,519 --> 00:10:30,560
potential

305
00:10:30,560 --> 00:10:32,800
tries for each position instead of the

306
00:10:32,800 --> 00:10:35,839
you know 300 and some so it makes it

307
00:10:35,839 --> 00:10:39,200
happen very very fast

308
00:10:40,320 --> 00:10:41,839
how do you generate masks well you can

309
00:10:41,839 --> 00:10:43,120
do it manually

310
00:10:43,120 --> 00:10:44,399
and there's a couple of different ways

311
00:10:44,399 --> 00:10:45,839
there's two that i've got here in the

312
00:10:45,839 --> 00:10:48,160
presentation the first is mass processor

313
00:10:48,160 --> 00:10:50,079
which is built into hashcat

314
00:10:50,079 --> 00:10:51,519
and you can actually just basically

315
00:10:51,519 --> 00:10:54,320
generate a word list that has a whatever

316
00:10:54,320 --> 00:10:56,800
you want so in this case i used mass

317
00:10:56,800 --> 00:10:58,560
processor and i said i want to make b

318
00:10:58,560 --> 00:11:01,040
sides and i want to a file

319
00:11:01,040 --> 00:11:02,079
that has

320
00:11:02,079 --> 00:11:03,040
every

321
00:11:03,040 --> 00:11:05,040
possible combination or potential

322
00:11:05,040 --> 00:11:07,519
combination of this one so i made it and

323
00:11:07,519 --> 00:11:09,760
now i have a file that has b sides zero

324
00:11:09,760 --> 00:11:11,040
zero zero and it'll go all the way to

325
00:11:11,040 --> 00:11:12,959
nine nine nine nine nine

326
00:11:12,959 --> 00:11:14,880
obviously you're not you're you're now

327
00:11:14,880 --> 00:11:16,480
throwing a file at it but you know if

328
00:11:16,480 --> 00:11:19,040
you're using a cpu based attacker you it

329
00:11:19,040 --> 00:11:20,959
sometimes comes in a little handier but

330
00:11:20,959 --> 00:11:22,640
you can also then take this dictionary

331
00:11:22,640 --> 00:11:24,640
file and use it with other rules like

332
00:11:24,640 --> 00:11:26,959
one ruler or leap speaker something like

333
00:11:26,959 --> 00:11:30,399
that and generate better candidates

334
00:11:30,880 --> 00:11:32,240
another thing that's really handy is

335
00:11:32,240 --> 00:11:33,760
called packs the password analysis and

336
00:11:33,760 --> 00:11:35,360
cracking toolkit

337
00:11:35,360 --> 00:11:37,920
it basically you feed it a

338
00:11:37,920 --> 00:11:39,920
password file

339
00:11:39,920 --> 00:11:41,600
and it just goes through and generates

340
00:11:41,600 --> 00:11:42,880
everything and i wish i had made this

341
00:11:42,880 --> 00:11:45,279
screenshot a little bigger i'm sorry um

342
00:11:45,279 --> 00:11:47,040
but it tells you the character sets that

343
00:11:47,040 --> 00:11:48,800
you're using if you look on here it says

344
00:11:48,800 --> 00:11:51,200
we're using lower alpha num so there's

345
00:11:51,200 --> 00:11:53,120
no special characters in 90 of the

346
00:11:53,120 --> 00:11:55,200
passwords in this and then at the end it

347
00:11:55,200 --> 00:11:56,800
generates masks

348
00:11:56,800 --> 00:11:58,399
what you can do with pack afterwards

349
00:11:58,399 --> 00:11:59,360
then

350
00:11:59,360 --> 00:12:02,240
is generate what's called a hashcat mask

351
00:12:02,240 --> 00:12:03,920
and it basically says here's a list of

352
00:12:03,920 --> 00:12:05,839
all the different rules i want or not

353
00:12:05,839 --> 00:12:07,920
rules masks i want you to try so i want

354
00:12:07,920 --> 00:12:09,959
to look at all the upper lower lower

355
00:12:09,959 --> 00:12:12,560
digited kind of ones and then i want a

356
00:12:12,560 --> 00:12:14,639
whole bunch and with a special character

357
00:12:14,639 --> 00:12:15,839
on the end and things like that and

358
00:12:15,839 --> 00:12:17,279
it'll just run through so that makes

359
00:12:17,279 --> 00:12:18,800
your password cracking much more

360
00:12:18,800 --> 00:12:21,279
efficient

361
00:12:22,000 --> 00:12:23,680
and what are we cracking well

362
00:12:23,680 --> 00:12:27,040
common hash types for using md5 because

363
00:12:27,040 --> 00:12:28,639
anybody finding a backup file on the

364
00:12:28,639 --> 00:12:30,720
internet that's where we find it uh shaw

365
00:12:30,720 --> 00:12:33,360
one microsoft office files ntlm

366
00:12:33,360 --> 00:12:36,000
obviously the gold uh when you're doing

367
00:12:36,000 --> 00:12:37,839
pen testing that's the one you want net

368
00:12:37,839 --> 00:12:40,480
nclem v2 very common as well and then

369
00:12:40,480 --> 00:12:42,560
there's three types of kerberos and a

370
00:12:42,560 --> 00:12:44,399
little pro tip on this one if you use

371
00:12:44,399 --> 00:12:47,360
invoke kerberos dot powershell

372
00:12:47,360 --> 00:12:48,160
uh

373
00:12:48,160 --> 00:12:50,000
you won't you'll you'll get these but

374
00:12:50,000 --> 00:12:51,200
you won't be able to crack them because

375
00:12:51,200 --> 00:12:52,639
the formats are all wrong and the

376
00:12:52,639 --> 00:12:55,440
salting is all weird but if you pull

377
00:12:55,440 --> 00:12:57,600
a kerberos with rubus instead

378
00:12:57,600 --> 00:13:00,079
every time

379
00:13:02,000 --> 00:13:02,880
so

380
00:13:02,880 --> 00:13:04,560
hashes said here's all the different

381
00:13:04,560 --> 00:13:05,839
kinds what were you going to get them as

382
00:13:05,839 --> 00:13:08,639
i mentioned config backup files this is

383
00:13:08,639 --> 00:13:10,639
actually one i pulled off during a pen

384
00:13:10,639 --> 00:13:14,480
test got access to a digi connect router

385
00:13:14,480 --> 00:13:17,440
and pulled out the the config file

386
00:13:17,440 --> 00:13:19,680
and there's the password

387
00:13:19,680 --> 00:13:20,399
in

388
00:13:20,399 --> 00:13:22,800
md5 which took me and because it ended

389
00:13:22,800 --> 00:13:25,040
up it was actually the default password

390
00:13:25,040 --> 00:13:26,720
still for the router they hadn't changed

391
00:13:26,720 --> 00:13:30,000
it so digiconnect by default has root

392
00:13:30,000 --> 00:13:32,880
and the password is dbps so that took me

393
00:13:32,880 --> 00:13:35,200
about a half a sec i think it took me

394
00:13:35,200 --> 00:13:36,560
longer to type in the command than it

395
00:13:36,560 --> 00:13:38,560
did actually crack the password

396
00:13:38,560 --> 00:13:39,839
um

397
00:13:39,839 --> 00:13:41,199
curb roasting of course i mentioned

398
00:13:41,199 --> 00:13:43,839
before this type 23 tends to be a little

399
00:13:43,839 --> 00:13:46,160
faster than the 17 and 18 so if you can

400
00:13:46,160 --> 00:13:48,320
go for that henceforth rubio so you have

401
00:13:48,320 --> 00:13:50,959
you have an option to downgrade

402
00:13:50,959 --> 00:13:54,000
dc sync of course is always a fun one um

403
00:13:54,000 --> 00:13:55,600
one thing i've always had a problem with

404
00:13:55,600 --> 00:13:57,519
is when you get the log file from it

405
00:13:57,519 --> 00:13:58,720
it's painful so there's a little

406
00:13:58,720 --> 00:14:01,120
powershell script uh that you can use to

407
00:14:01,120 --> 00:14:03,279
just efficiently get all those files out

408
00:14:03,279 --> 00:14:05,760
and of course nttds.dit extraction so

409
00:14:05,760 --> 00:14:07,519
this is when you're actually either

410
00:14:07,519 --> 00:14:09,680
you've taken off um the volume shadow

411
00:14:09,680 --> 00:14:12,560
copy service from a domain controller or

412
00:14:12,560 --> 00:14:13,839
as i get into it you're actually going

413
00:14:13,839 --> 00:14:15,360
to do it just for fun

414
00:14:15,360 --> 00:14:17,839
um

415
00:14:18,399 --> 00:14:20,399
so but how do you know what when your

416
00:14:20,399 --> 00:14:22,320
hashes when you're taking a look at them

417
00:14:22,320 --> 00:14:24,480
so for example

418
00:14:24,480 --> 00:14:26,480
i know this is an md5 just because of

419
00:14:26,480 --> 00:14:28,320
the config file and i knew that that's

420
00:14:28,320 --> 00:14:30,320
would do but how do you identify that

421
00:14:30,320 --> 00:14:31,920
well the good thing is hashcat actually

422
00:14:31,920 --> 00:14:33,839
has an auto detect mode

423
00:14:33,839 --> 00:14:34,720
um

424
00:14:34,720 --> 00:14:36,320
i rarely do it

425
00:14:36,320 --> 00:14:37,920
just because

426
00:14:37,920 --> 00:14:40,240
um i'm i have the example hashes

427
00:14:40,240 --> 00:14:42,000
bookmarked and i literally just look for

428
00:14:42,000 --> 00:14:43,760
the right string

429
00:14:43,760 --> 00:14:46,399
hash id is an older application it's

430
00:14:46,399 --> 00:14:48,160
about seven years old but it still gets

431
00:14:48,160 --> 00:14:50,240
the job done as well so you can just

432
00:14:50,240 --> 00:14:52,160
either have a file full of hashes or

433
00:14:52,160 --> 00:14:54,240
just put it in on the command line and

434
00:14:54,240 --> 00:14:56,480
hit go and it'll tell you statistically

435
00:14:56,480 --> 00:14:57,440
which

436
00:14:57,440 --> 00:14:59,839
hash type it probably is scifi and cyber

437
00:14:59,839 --> 00:15:01,040
chef

438
00:15:01,040 --> 00:15:02,079
limited support they're not going to

439
00:15:02,079 --> 00:15:03,600
tell you have an ntlm hash or things

440
00:15:03,600 --> 00:15:05,279
like that um

441
00:15:05,279 --> 00:15:07,120
but they are very good for a couple

442
00:15:07,120 --> 00:15:08,959
things scifi is really good

443
00:15:08,959 --> 00:15:10,000
if you don't actually want to get

444
00:15:10,000 --> 00:15:11,519
hashcat up and doing like if you're on a

445
00:15:11,519 --> 00:15:13,199
ctf or something and you've just got

446
00:15:13,199 --> 00:15:14,880
encrypted text

447
00:15:14,880 --> 00:15:16,800
cyphy will actually use an ai engine in

448
00:15:16,800 --> 00:15:18,000
the background

449
00:15:18,000 --> 00:15:20,000
and crack it for you so most of the time

450
00:15:20,000 --> 00:15:22,560
if you have like a sha-1 encrypted

451
00:15:22,560 --> 00:15:23,519
or

452
00:15:23,519 --> 00:15:25,440
if it's using weird ciphers like veneer

453
00:15:25,440 --> 00:15:27,519
or caesar or things like that it'll just

454
00:15:27,519 --> 00:15:29,199
crack it and spit out the plain text for

455
00:15:29,199 --> 00:15:31,199
you so very handy to have nice little

456
00:15:31,199 --> 00:15:33,199
command line tool and of course cyber

457
00:15:33,199 --> 00:15:34,480
chef is

458
00:15:34,480 --> 00:15:36,000
in use all over the place as well i do

459
00:15:36,000 --> 00:15:38,560
find cyphy works a lot faster

460
00:15:38,560 --> 00:15:39,680
on

461
00:15:39,680 --> 00:15:40,959
some of the auto

462
00:15:40,959 --> 00:15:42,480
cracking stuff just because the way the

463
00:15:42,480 --> 00:15:46,800
back end is but cyber chef's just gold

464
00:15:47,360 --> 00:15:49,839
okay so if we're going to show you guys

465
00:15:49,839 --> 00:15:52,160
any cracking stuff first we need hashes

466
00:15:52,160 --> 00:15:52,880
so

467
00:15:52,880 --> 00:15:54,720
what i've done is i've actually used the

468
00:15:54,720 --> 00:15:56,240
ntdds.dit

469
00:15:56,240 --> 00:15:57,920
customer files um

470
00:15:57,920 --> 00:16:00,320
by lauren gallant um

471
00:16:00,320 --> 00:16:02,480
with the she actually does a domain

472
00:16:02,480 --> 00:16:05,040
password analysis toolkit and so she had

473
00:16:05,040 --> 00:16:06,560
some sample data and there was actually

474
00:16:06,560 --> 00:16:07,680
a

475
00:16:07,680 --> 00:16:10,399
active directory populated from rock u

476
00:16:10,399 --> 00:16:11,759
so this actually works out really well

477
00:16:11,759 --> 00:16:14,160
for some of the demos

478
00:16:14,160 --> 00:16:16,399
um

479
00:16:17,040 --> 00:16:18,560
so straight out dictionary attack so

480
00:16:18,560 --> 00:16:20,399
this is where we're gonna take

481
00:16:20,399 --> 00:16:21,920
i actually had demos and i was actually

482
00:16:21,920 --> 00:16:23,440
going to do video demos for this entire

483
00:16:23,440 --> 00:16:25,199
thing and up until the two days ago i

484
00:16:25,199 --> 00:16:27,680
realized i can't do videos

485
00:16:27,680 --> 00:16:30,000
i apologize for the the screenshots

486
00:16:30,000 --> 00:16:32,399
there's a lot of them um

487
00:16:32,399 --> 00:16:33,759
we take a look at this so what we've

488
00:16:33,759 --> 00:16:35,839
done we've extracted all of our ntlm

489
00:16:35,839 --> 00:16:39,079
files into it we've got the our actual

490
00:16:39,079 --> 00:16:40,880
customer.hashes file

491
00:16:40,880 --> 00:16:42,480
and what we've done is we've just run a

492
00:16:42,480 --> 00:16:44,320
straight out

493
00:16:44,320 --> 00:16:46,079
thing against rockyou

494
00:16:46,079 --> 00:16:46,959
now

495
00:16:46,959 --> 00:16:49,519
the flag dash 0 actually limits the

496
00:16:49,519 --> 00:16:50,639
password

497
00:16:50,639 --> 00:16:52,959
size that you can crack so normally you

498
00:16:52,959 --> 00:16:54,920
can crack up like 200

499
00:16:54,920 --> 00:16:57,360
256 characters

500
00:16:57,360 --> 00:16:59,120
when you use an optimized kernel it

501
00:16:59,120 --> 00:17:01,360
squishes it down to 32

502
00:17:01,360 --> 00:17:03,360
so you won't crack any passwords that

503
00:17:03,360 --> 00:17:05,039
are bigger than 32 when you're using

504
00:17:05,039 --> 00:17:06,079
that flag

505
00:17:06,079 --> 00:17:07,039
um

506
00:17:07,039 --> 00:17:10,079
in this case we're using roku and 99 of

507
00:17:10,079 --> 00:17:12,319
the files in there are all like

508
00:17:12,319 --> 00:17:14,799
8 to 12 16 character kind of passwords

509
00:17:14,799 --> 00:17:17,039
so it did make a difference on this one

510
00:17:17,039 --> 00:17:19,679
but you can see here so on this

511
00:17:19,679 --> 00:17:22,240
we ram rock you just straight out

512
00:17:22,240 --> 00:17:24,400
it took 12 seconds to run and we got

513
00:17:24,400 --> 00:17:26,559
99.98

514
00:17:26,559 --> 00:17:28,000
of the digests

515
00:17:28,000 --> 00:17:30,799
so we're missing like 20 passwords or 21

516
00:17:30,799 --> 00:17:32,799
passwords out of the entire

517
00:17:32,799 --> 00:17:36,400
87 000 that we were able to get pull

518
00:17:36,400 --> 00:17:39,440
so that that's pretty fast

519
00:17:39,440 --> 00:17:40,960
let me take a look at start adding some

520
00:17:40,960 --> 00:17:42,960
rules so hash cat supports rules and

521
00:17:42,960 --> 00:17:44,480
when you actually create a rules file

522
00:17:44,480 --> 00:17:46,080
there's all these things so like a t

523
00:17:46,080 --> 00:17:48,160
means for transpose letters and stuff

524
00:17:48,160 --> 00:17:49,440
like that we're not going to get too

525
00:17:49,440 --> 00:17:50,799
much into that one because i don't think

526
00:17:50,799 --> 00:17:52,000
anybody on here is going to start

527
00:17:52,000 --> 00:17:54,320
creating their own rules from scratch

528
00:17:54,320 --> 00:17:56,000
um

529
00:17:56,000 --> 00:17:57,760
but so we'll take a look at this we did

530
00:17:57,760 --> 00:17:59,760
this again we ran rocky and we threw on

531
00:17:59,760 --> 00:18:01,600
the one rule to rule them all it took 48

532
00:18:01,600 --> 00:18:03,760
seconds so you know four times increase

533
00:18:03,760 --> 00:18:05,200
in in time

534
00:18:05,200 --> 00:18:08,080
we actually got 99.99

535
00:18:08,080 --> 00:18:10,080
so now we're down to just

536
00:18:10,080 --> 00:18:12,320
13 passwords that we didn't get

537
00:18:12,320 --> 00:18:14,720
and just by doing that whenever i ran

538
00:18:14,720 --> 00:18:17,280
these um attacks i was using a flag on

539
00:18:17,280 --> 00:18:20,480
hash cat called disable pot file

540
00:18:20,480 --> 00:18:22,559
um and that just makes sure that it's

541
00:18:22,559 --> 00:18:23,919
always in memory i'm not pulling it out

542
00:18:23,919 --> 00:18:25,200
of my pod file

543
00:18:25,200 --> 00:18:26,840
this is raw

544
00:18:26,840 --> 00:18:29,679
results and and thanks dana for uh

545
00:18:29,679 --> 00:18:31,600
posting all the links it's great thank

546
00:18:31,600 --> 00:18:32,400
you

547
00:18:32,400 --> 00:18:33,760
um

548
00:18:33,760 --> 00:18:36,640
one small pro tip is if you have a small

549
00:18:36,640 --> 00:18:39,360
dictionary and a lot of rules so if i

550
00:18:39,360 --> 00:18:40,400
had

551
00:18:40,400 --> 00:18:42,880
a cool word list for example that only

552
00:18:42,880 --> 00:18:45,840
has like 50 60 17 you know anything up

553
00:18:45,840 --> 00:18:48,720
to a couple of hundred words in it uh

554
00:18:48,720 --> 00:18:50,559
throw dash s on it and you'll see a

555
00:18:50,559 --> 00:18:53,440
speed increase from like an hour to like

556
00:18:53,440 --> 00:18:55,280
seconds

557
00:18:55,280 --> 00:18:58,000
um but if you try and do it with a

558
00:18:58,000 --> 00:18:59,679
larger word list it'll tell you because

559
00:18:59,679 --> 00:19:01,280
you'll realize really fast because your

560
00:19:01,280 --> 00:19:04,080
cracking goes from an hour to like three

561
00:19:04,080 --> 00:19:06,159
so

562
00:19:07,120 --> 00:19:08,960
so now what up i mentioned passphrases

563
00:19:08,960 --> 00:19:10,559
so passphrases are definitely something

564
00:19:10,559 --> 00:19:13,039
that's becoming a lot more common um you

565
00:19:13,039 --> 00:19:14,559
know people are saying oh passwords are

566
00:19:14,559 --> 00:19:17,200
bad stop using spring 2022. make a

567
00:19:17,200 --> 00:19:18,720
passphrase remember that you can use

568
00:19:18,720 --> 00:19:21,360
spaces and things like that

569
00:19:21,360 --> 00:19:23,760
and and so people do and you know i've

570
00:19:23,760 --> 00:19:25,280
already started cracking passwords where

571
00:19:25,280 --> 00:19:27,039
because somebody's typing in uh quick

572
00:19:27,039 --> 00:19:29,760
brown fox jumped over a lazy dog uh if

573
00:19:29,760 --> 00:19:32,559
it's a known phrase that is very popular

574
00:19:32,559 --> 00:19:35,120
well we've pulled it why so on init

575
00:19:35,120 --> 00:19:38,559
string created a pass free word list uh

576
00:19:38,559 --> 00:19:41,120
last updated i think in october uh so it

577
00:19:41,120 --> 00:19:43,360
keeps up being recent but it he cites

578
00:19:43,360 --> 00:19:45,679
all the sources he's pulling stuff so

579
00:19:45,679 --> 00:19:47,679
he's pulling from like wikipedia like

580
00:19:47,679 --> 00:19:49,760
actually every word off wikipedia or

581
00:19:49,760 --> 00:19:51,679
quotes

582
00:19:51,679 --> 00:19:53,440
famous quotes bible verses everything

583
00:19:53,440 --> 00:19:55,200
it's all in there and there's two rules

584
00:19:55,200 --> 00:19:57,679
that are in there the first rule deals

585
00:19:57,679 --> 00:19:59,840
with capitalizations and stuff like that

586
00:19:59,840 --> 00:20:02,159
the second one deals with permutations

587
00:20:02,159 --> 00:20:04,480
so things like adding spaces between

588
00:20:04,480 --> 00:20:07,039
words or putting underscores or dots or

589
00:20:07,039 --> 00:20:08,960
things that people might do

590
00:20:08,960 --> 00:20:11,520
when creating their secure passphrase

591
00:20:11,520 --> 00:20:13,440
so it'll create a thousand permutations

592
00:20:13,440 --> 00:20:15,520
of each phrase so a quick round dog

593
00:20:15,520 --> 00:20:17,760
jumped over would become like uppercase

594
00:20:17,760 --> 00:20:20,240
a lowercase a or a dot or an underscore

595
00:20:20,240 --> 00:20:22,799
and on and on and on

596
00:20:22,799 --> 00:20:24,480
when we take a look at that

597
00:20:24,480 --> 00:20:25,840
um

598
00:20:25,840 --> 00:20:27,919
oops hang on

599
00:20:27,919 --> 00:20:30,080
there it is um

600
00:20:30,080 --> 00:20:31,600
same thing i mentioned this before watch

601
00:20:31,600 --> 00:20:32,960
out when using dash show with pass

602
00:20:32,960 --> 00:20:34,559
phrases because you're still limited to

603
00:20:34,559 --> 00:20:37,280
32 characters and past phrases can

604
00:20:37,280 --> 00:20:39,520
typically get longer than that so

605
00:20:39,520 --> 00:20:41,760
um

606
00:20:41,760 --> 00:20:44,159
sometimes maybe run it with a dash oh

607
00:20:44,159 --> 00:20:45,600
see what you can get and then run it

608
00:20:45,600 --> 00:20:47,360
again without the dash oh

609
00:20:47,360 --> 00:20:49,360
just to get some of the the low hanging

610
00:20:49,360 --> 00:20:51,678
fruit

611
00:20:51,760 --> 00:20:54,000
one of the things that we also have is

612
00:20:54,000 --> 00:20:55,440
what's called a combinator attack so

613
00:20:55,440 --> 00:20:57,120
very similar but this takes multiple

614
00:20:57,120 --> 00:20:58,720
dictionaries into an attack where you

615
00:20:58,720 --> 00:21:00,159
can use the same file it's whatever you

616
00:21:00,159 --> 00:21:02,400
want um

617
00:21:02,400 --> 00:21:04,480
you just put it in the mode you take

618
00:21:04,480 --> 00:21:05,919
your hash files and then you list out

619
00:21:05,919 --> 00:21:07,840
the files so for example if you think

620
00:21:07,840 --> 00:21:10,240
people are making passwords with um

621
00:21:10,240 --> 00:21:12,159
breed of dogs and breed of cats you

622
00:21:12,159 --> 00:21:13,679
could put in here's your dog dictionary

623
00:21:13,679 --> 00:21:15,120
here's your tactics nerd and i'll just

624
00:21:15,120 --> 00:21:17,840
try every word so it'll be like you know

625
00:21:17,840 --> 00:21:19,520
or apples oranges and then i'll try

626
00:21:19,520 --> 00:21:21,440
oranges apples

627
00:21:21,440 --> 00:21:23,200
so tends to work pretty good with that

628
00:21:23,200 --> 00:21:25,039
you can throw rules and stuff on those

629
00:21:25,039 --> 00:21:26,799
sometimes as well

630
00:21:26,799 --> 00:21:28,880
if you can't use a rule this is where

631
00:21:28,880 --> 00:21:30,960
you can generate back

632
00:21:30,960 --> 00:21:32,559
what i mentioned for the the mass

633
00:21:32,559 --> 00:21:34,559
generator because you can go create one

634
00:21:34,559 --> 00:21:36,159
of the files with all the digits on the

635
00:21:36,159 --> 00:21:39,039
end and then just use it on this one

636
00:21:39,039 --> 00:21:40,960
and so we take a look at how far we did

637
00:21:40,960 --> 00:21:42,400
on this one this one said it was going

638
00:21:42,400 --> 00:21:45,280
to take two hours which yeah it's about

639
00:21:45,280 --> 00:21:47,039
the right thing

640
00:21:47,039 --> 00:21:50,480
but it also creates a lot of potentials

641
00:21:50,480 --> 00:21:52,960
that's why it takes two hours um however

642
00:21:52,960 --> 00:21:54,880
you'll see that within 22 seconds i

643
00:21:54,880 --> 00:21:57,520
still had that as 99.98 just because

644
00:21:57,520 --> 00:22:00,400
we're using rocky

645
00:22:00,480 --> 00:22:02,960
but it if i had to do the full run it

646
00:22:02,960 --> 00:22:04,799
would take two hours

647
00:22:04,799 --> 00:22:07,120
which isn't too bad

648
00:22:07,120 --> 00:22:09,039
but a lot of people ask me why and the

649
00:22:09,039 --> 00:22:11,200
thing is when you start dealing with

650
00:22:11,200 --> 00:22:13,120
combinations of words and you want to

651
00:22:13,120 --> 00:22:14,960
take this word and then this word so

652
00:22:14,960 --> 00:22:17,760
imagine two lists of a thousand words a

653
00:22:17,760 --> 00:22:19,919
thousand words isn't that much but that

654
00:22:19,919 --> 00:22:21,360
creates a million

655
00:22:21,360 --> 00:22:22,880
entries because you're looking at every

656
00:22:22,880 --> 00:22:25,200
word to every word in the list and then

657
00:22:25,200 --> 00:22:27,840
the second word every word in the list

658
00:22:27,840 --> 00:22:28,960
um

659
00:22:28,960 --> 00:22:31,120
you can do an attack called a combinator

660
00:22:31,120 --> 00:22:33,120
three and i don't really go into that

661
00:22:33,120 --> 00:22:34,400
one too much

662
00:22:34,400 --> 00:22:36,960
but there's a utility called combinator

663
00:22:36,960 --> 00:22:40,400
three uh in the hashcat utils and

664
00:22:40,400 --> 00:22:42,400
you can actually tell it to do

665
00:22:42,400 --> 00:22:45,360
three which makes perfect sense it takes

666
00:22:45,360 --> 00:22:46,960
forever

667
00:22:46,960 --> 00:22:48,720
um but when you're telling people to do

668
00:22:48,720 --> 00:22:51,440
passphrases and stuff like that or you

669
00:22:51,440 --> 00:22:53,679
know pick three words two you like when

670
00:22:53,679 --> 00:22:55,760
you don't um that's how you're gonna

671
00:22:55,760 --> 00:22:57,600
have to run it um

672
00:22:57,600 --> 00:22:59,039
when you

673
00:22:59,039 --> 00:23:00,559
when you're running it in full memory

674
00:23:00,559 --> 00:23:02,080
it's it's

675
00:23:02,080 --> 00:23:04,159
you know like a thousand word file is

676
00:23:04,159 --> 00:23:07,280
only tiny it's a couple of kilobytes

677
00:23:07,280 --> 00:23:09,600
not that big at all uh if you were to

678
00:23:09,600 --> 00:23:11,600
try and write out all possible

679
00:23:11,600 --> 00:23:13,520
permutations of it

680
00:23:13,520 --> 00:23:15,440
we're talking petabytes

681
00:23:15,440 --> 00:23:17,919
of size file like the files would just

682
00:23:17,919 --> 00:23:19,600
become astronomical

683
00:23:19,600 --> 00:23:22,640
i did a combinator 3 attack kind of a

684
00:23:22,640 --> 00:23:25,679
halfway one so i took a thousand word

685
00:23:25,679 --> 00:23:26,880
word file

686
00:23:26,880 --> 00:23:30,000
um ran it as an output um to generate

687
00:23:30,000 --> 00:23:31,760
one larger file that had the million

688
00:23:31,760 --> 00:23:32,880
words in it

689
00:23:32,880 --> 00:23:34,559
and then just ran rules against it so i

690
00:23:34,559 --> 00:23:36,799
did a combinator attack with a

691
00:23:36,799 --> 00:23:39,600
two word dictionary and then a third one

692
00:23:39,600 --> 00:23:42,240
the challenge of that of course is um it

693
00:23:42,240 --> 00:23:44,640
can't insert the word into the middle

694
00:23:44,640 --> 00:23:45,919
because you have to try all different

695
00:23:45,919 --> 00:23:47,760
three combinations so

696
00:23:47,760 --> 00:23:49,440
you have to generate it twice and then

697
00:23:49,440 --> 00:23:51,600
do it again

698
00:23:51,600 --> 00:23:53,600
but they're little tricks and hacks and

699
00:23:53,600 --> 00:23:55,440
things that you can do but they tend to

700
00:23:55,440 --> 00:23:58,320
work for the most part

701
00:23:59,200 --> 00:24:01,279
and i mentioned before we did the brute

702
00:24:01,279 --> 00:24:02,880
force mask attack we're doing it a

703
00:24:02,880 --> 00:24:04,720
little differently on this one

704
00:24:04,720 --> 00:24:06,159
um

705
00:24:06,159 --> 00:24:08,240
you'll see here we did lowercase across

706
00:24:08,240 --> 00:24:10,480
the board and then two digits on the end

707
00:24:10,480 --> 00:24:12,799
it only took one second

708
00:24:12,799 --> 00:24:15,360
and we got 3.64 percent of the hashes so

709
00:24:15,360 --> 00:24:17,919
we got 3000 passwords in just one sec

710
00:24:17,919 --> 00:24:19,600
just from that so if you know what

711
00:24:19,600 --> 00:24:21,840
you're looking for it's pretty fast and

712
00:24:21,840 --> 00:24:23,360
easy to do a mask

713
00:24:23,360 --> 00:24:25,039
and it's much more effective than brute

714
00:24:25,039 --> 00:24:26,799
forcing because when you get into brute

715
00:24:26,799 --> 00:24:28,640
forcing so if using every special

716
00:24:28,640 --> 00:24:31,200
character and every possible like letter

717
00:24:31,200 --> 00:24:32,480
and digit

718
00:24:32,480 --> 00:24:34,159
you can see that exact same attack that

719
00:24:34,159 --> 00:24:35,520
took a second

720
00:24:35,520 --> 00:24:36,880
is now going to take me two days and

721
00:24:36,880 --> 00:24:38,080
seven hours

722
00:24:38,080 --> 00:24:39,760
so this and

723
00:24:39,760 --> 00:24:42,080
so and and take a look at these this has

724
00:24:42,080 --> 00:24:44,400
been running for 50 seconds and we've

725
00:24:44,400 --> 00:24:46,400
only gotten two percent of the digest so

726
00:24:46,400 --> 00:24:48,080
only 1900 so

727
00:24:48,080 --> 00:24:50,159
um from a speed and uh capability

728
00:24:50,159 --> 00:24:52,960
perspective this got much faster results

729
00:24:52,960 --> 00:24:55,679
um with a lot less effort

730
00:24:55,679 --> 00:24:57,760
and sometimes when you're pen testing um

731
00:24:57,760 --> 00:24:59,360
you know it's a it's a roller coaster

732
00:24:59,360 --> 00:25:01,520
it's as kirk mentioned yesterday in his

733
00:25:01,520 --> 00:25:03,919
talk uh you know i love cracking

734
00:25:03,919 --> 00:25:05,600
passwords so when i crack a password i'm

735
00:25:05,600 --> 00:25:08,240
like yeah do the little happy dance and

736
00:25:08,240 --> 00:25:09,600
love to see it ringing the shelves and

737
00:25:09,600 --> 00:25:12,000
everything else um

738
00:25:12,000 --> 00:25:13,200
but when i'm sitting there trying to

739
00:25:13,200 --> 00:25:14,960
crack that like when you're looking at a

740
00:25:14,960 --> 00:25:16,799
list of this and you've got you know

741
00:25:16,799 --> 00:25:19,279
like 13 passwords left you want to get

742
00:25:19,279 --> 00:25:22,159
that hundred percent you're like

743
00:25:22,159 --> 00:25:23,679
right this is where you got to start

744
00:25:23,679 --> 00:25:25,200
pulling out some of the interesting

745
00:25:25,200 --> 00:25:26,320
things and taking a look and that's

746
00:25:26,320 --> 00:25:27,600
where tools like pack and everything

747
00:25:27,600 --> 00:25:28,640
else

748
00:25:28,640 --> 00:25:30,799
come in really handy because it helps

749
00:25:30,799 --> 00:25:32,720
you try and find what's left over

750
00:25:32,720 --> 00:25:34,559
because some of the times if you if you

751
00:25:34,559 --> 00:25:36,640
go back and take a look at

752
00:25:36,640 --> 00:25:40,400
one of the previous slides with pack

753
00:25:40,400 --> 00:25:42,159
you can see at the bottom you can see

754
00:25:42,159 --> 00:25:45,120
the advanced masks and you'll see like

755
00:25:45,120 --> 00:25:47,760
one percent of your passwords are 0.1

756
00:25:47,760 --> 00:25:49,440
percent of the passwords are using this

757
00:25:49,440 --> 00:25:50,480
mask

758
00:25:50,480 --> 00:25:52,320
um so you might have another one you

759
00:25:52,320 --> 00:25:54,240
might not but it

760
00:25:54,240 --> 00:25:55,919
though those ones

761
00:25:55,919 --> 00:25:58,559
typically uh take several hours or days

762
00:25:58,559 --> 00:26:00,720
to run

763
00:26:00,720 --> 00:26:02,159
and of course i said when

764
00:26:02,159 --> 00:26:03,679
you know when all else fails sometimes

765
00:26:03,679 --> 00:26:06,000
you just have to brute force uh pro tip

766
00:26:06,000 --> 00:26:08,000
a lot of customers are coming down and

767
00:26:08,000 --> 00:26:10,159
using 15 character passwords this is why

768
00:26:10,159 --> 00:26:11,600
it's so important to use proper

769
00:26:11,600 --> 00:26:13,919
dictionary attacks and masks

770
00:26:13,919 --> 00:26:15,120
because if you actually try and brute

771
00:26:15,120 --> 00:26:16,880
force anything over 15 characters

772
00:26:16,880 --> 00:26:19,919
there's actually a math problem

773
00:26:19,919 --> 00:26:21,679
and and you'll actually get an integer

774
00:26:21,679 --> 00:26:24,720
overflow by doing it

775
00:26:24,720 --> 00:26:26,320
uh so we had a question can you modify

776
00:26:26,320 --> 00:26:29,360
change or modify your lists on the fly

777
00:26:29,360 --> 00:26:32,159
once you start a cracking one um

778
00:26:32,159 --> 00:26:33,760
it loads it up in memory and it creates

779
00:26:33,760 --> 00:26:36,559
an index and so if you modify that file

780
00:26:36,559 --> 00:26:37,840
while it's running it's not going to

781
00:26:37,840 --> 00:26:39,760
pick it up

782
00:26:39,760 --> 00:26:42,159
i do cheat once in a while by deleting

783
00:26:42,159 --> 00:26:44,799
the index or

784
00:26:44,799 --> 00:26:47,440
doing a pause on the thing when you

785
00:26:47,440 --> 00:26:49,200
pause hash cat if you're in the middle

786
00:26:49,200 --> 00:26:51,600
of a run it creates a restore session

787
00:26:51,600 --> 00:26:52,400
file

788
00:26:52,400 --> 00:26:53,919
and it basically just tells you where in

789
00:26:53,919 --> 00:26:55,440
the index it was

790
00:26:55,440 --> 00:26:57,039
and

791
00:26:57,039 --> 00:26:59,039
um you know all the settings that you

792
00:26:59,039 --> 00:27:00,400
had done well if they can't find the

793
00:27:00,400 --> 00:27:02,400
index it'll rebuild it and it sometimes

794
00:27:02,400 --> 00:27:03,679
it might start from scratch but

795
00:27:03,679 --> 00:27:05,039
depending on how

796
00:27:05,039 --> 00:27:07,520
um how far in you were like if you were

797
00:27:07,520 --> 00:27:09,840
a month into it

798
00:27:09,840 --> 00:27:11,520
you know i've seen pastor craft over a

799
00:27:11,520 --> 00:27:13,360
month if if you're a month into it and

800
00:27:13,360 --> 00:27:15,520
you don't want to lose your spot

801
00:27:15,520 --> 00:27:17,039
you're probably better off just

802
00:27:17,039 --> 00:27:19,200
checkpointing it stopping it

803
00:27:19,200 --> 00:27:20,960
taking a look at the results and then

804
00:27:20,960 --> 00:27:22,159
trying something else because you're

805
00:27:22,159 --> 00:27:23,360
probably not going to get it at that

806
00:27:23,360 --> 00:27:25,279
point

807
00:27:25,279 --> 00:27:27,919
it doesn't mean it's impossible um but

808
00:27:27,919 --> 00:27:29,440
you're you're typically going to have

809
00:27:29,440 --> 00:27:31,679
those you know like 30 day crack runs

810
00:27:31,679 --> 00:27:33,120
and stuff when you're doing a full brute

811
00:27:33,120 --> 00:27:34,720
force not necessarily a dictionary

812
00:27:34,720 --> 00:27:35,600
attack

813
00:27:35,600 --> 00:27:36,640
um

814
00:27:36,640 --> 00:27:38,720
like if you were to take the weak pass

815
00:27:38,720 --> 00:27:41,360
the big hundred gig file that i did and

816
00:27:41,360 --> 00:27:43,520
threw one rule against it

817
00:27:43,520 --> 00:27:46,240
it's gonna take a couple of days um just

818
00:27:46,240 --> 00:27:47,600
because that's

819
00:27:47,600 --> 00:27:49,600
how long it's going to take to run

820
00:27:49,600 --> 00:27:52,120
you know 100 000 rules against

821
00:27:52,120 --> 00:27:56,080
168 billion passwords

822
00:27:57,360 --> 00:27:59,440
i don't brute force often

823
00:27:59,440 --> 00:28:02,559
but you know if there's a chance

824
00:28:02,559 --> 00:28:03,600
um

825
00:28:03,600 --> 00:28:05,120
one of the better ones that we find are

826
00:28:05,120 --> 00:28:06,880
actually a hybrid attack so very similar

827
00:28:06,880 --> 00:28:08,399
to the mask one but what you're doing

828
00:28:08,399 --> 00:28:09,919
with this one is actually saying i've

829
00:28:09,919 --> 00:28:12,240
got a known word so things like company

830
00:28:12,240 --> 00:28:13,200
name

831
00:28:13,200 --> 00:28:14,159
or

832
00:28:14,159 --> 00:28:16,399
you know name of the season

833
00:28:16,399 --> 00:28:18,720
and just you can say i want

834
00:28:18,720 --> 00:28:20,559
every word in this file so as seasons as

835
00:28:20,559 --> 00:28:22,080
you know it's got spring summer fall

836
00:28:22,080 --> 00:28:24,720
january february march april may um and

837
00:28:24,720 --> 00:28:27,200
throw all the digits on the end of it go

838
00:28:27,200 --> 00:28:29,279
done

839
00:28:29,279 --> 00:28:31,840
uh speed dependent on gpu or cpu or both

840
00:28:31,840 --> 00:28:34,960
typically uh it's gpu dependent um when

841
00:28:34,960 --> 00:28:37,440
you're loading up very large dictionary

842
00:28:37,440 --> 00:28:40,000
files it loads it into memory so

843
00:28:40,000 --> 00:28:42,159
having more memory helps more than your

844
00:28:42,159 --> 00:28:43,360
cpu

845
00:28:43,360 --> 00:28:44,880
you can

846
00:28:44,880 --> 00:28:47,520
include your cpu uh in password

847
00:28:47,520 --> 00:28:49,520
crackings but what happens sometimes is

848
00:28:49,520 --> 00:28:51,120
then the operating system starts getting

849
00:28:51,120 --> 00:28:53,600
a lot leggy and stuff from i o and

850
00:28:53,600 --> 00:28:54,320
um

851
00:28:54,320 --> 00:28:56,799
so i i typically don't unless i really

852
00:28:56,799 --> 00:28:58,799
desperate for just that last little bit

853
00:28:58,799 --> 00:29:01,039
of performance

854
00:29:01,039 --> 00:29:02,640
um

855
00:29:02,640 --> 00:29:03,360
but

856
00:29:03,360 --> 00:29:05,760
for the most part yeah

857
00:29:05,760 --> 00:29:07,840
if you're gonna get a box like if i were

858
00:29:07,840 --> 00:29:09,600
to say

859
00:29:09,600 --> 00:29:12,880
add another gpu or add another sticker

860
00:29:12,880 --> 00:29:15,919
ram or add another cpu i'd say

861
00:29:15,919 --> 00:29:17,279
gpu first

862
00:29:17,279 --> 00:29:19,200
ram second

863
00:29:19,200 --> 00:29:21,679
after that it's all about io for ssd and

864
00:29:21,679 --> 00:29:23,919
stuff for for pulling these files off

865
00:29:23,919 --> 00:29:26,640
the list so like for me i've got

866
00:29:26,640 --> 00:29:28,000
um

867
00:29:28,000 --> 00:29:31,039
all my stuff is using internal static

868
00:29:31,039 --> 00:29:33,039
the six gigabit per second stuff and

869
00:29:33,039 --> 00:29:34,720
anything i've got plugged in on usb is

870
00:29:34,720 --> 00:29:37,440
all using like usb 3.1 so it's you know

871
00:29:37,440 --> 00:29:39,840
i've got

872
00:29:39,840 --> 00:29:42,640
40 gigabytes per second of throughput so

873
00:29:42,640 --> 00:29:46,720
it's usually pretty decent on that one

874
00:29:47,440 --> 00:29:49,679
um so i mentioned about the association

875
00:29:49,679 --> 00:29:52,480
attack before and so this is really

876
00:29:52,480 --> 00:29:55,120
really works well for very large salted

877
00:29:55,120 --> 00:29:57,120
hash lists for example bcrypt

878
00:29:57,120 --> 00:29:59,919
um it doesn't work so well for ntlm um

879
00:29:59,919 --> 00:30:01,200
and the reason is when you pull an

880
00:30:01,200 --> 00:30:02,760
active directory database it's so

881
00:30:02,760 --> 00:30:06,000
ntdbs.dip file there's one salt for the

882
00:30:06,000 --> 00:30:07,200
entire thing

883
00:30:07,200 --> 00:30:09,919
and the association attack has to needs

884
00:30:09,919 --> 00:30:11,919
the number of words in the word list to

885
00:30:11,919 --> 00:30:13,520
be perfectly in sync with the number of

886
00:30:13,520 --> 00:30:15,520
unique salts if there's a one like if

887
00:30:15,520 --> 00:30:17,840
you have 99 in one file and 100 in the

888
00:30:17,840 --> 00:30:19,440
other it'll just stop

889
00:30:19,440 --> 00:30:20,480
um

890
00:30:20,480 --> 00:30:22,799
so on this one what we did uh for this

891
00:30:22,799 --> 00:30:24,880
example is i i decrypted

892
00:30:24,880 --> 00:30:27,039
uh a thousand names

893
00:30:27,039 --> 00:30:29,600
i took here's a word list

894
00:30:29,600 --> 00:30:31,679
and then i made that word list decrypted

895
00:30:31,679 --> 00:30:32,640
them all

896
00:30:32,640 --> 00:30:35,520
and then fed them that same name

897
00:30:35,520 --> 00:30:37,600
um i'll get to that question stop in

898
00:30:37,600 --> 00:30:38,559
just a sec

899
00:30:38,559 --> 00:30:40,799
um

900
00:30:41,200 --> 00:30:42,240
when

901
00:30:42,240 --> 00:30:43,760
um

902
00:30:43,760 --> 00:30:46,320
so you have the salt you have the hash

903
00:30:46,320 --> 00:30:48,480
what happens is there's a hint for lack

904
00:30:48,480 --> 00:30:50,080
of a better word so the hint of the

905
00:30:50,080 --> 00:30:52,399
username might contain the same kind of

906
00:30:52,399 --> 00:30:54,320
thing and in this case you can see we

907
00:30:54,320 --> 00:30:59,279
ran a full 10 000 names in one second

908
00:30:59,279 --> 00:31:00,159
100

909
00:31:00,159 --> 00:31:02,559
success rate uh because well obviously i

910
00:31:02,559 --> 00:31:03,840
mean kind of cheating a little bit

911
00:31:03,840 --> 00:31:06,399
because we had the known decrypt hashes

912
00:31:06,399 --> 00:31:08,320
but all we did was set it the name of a

913
00:31:08,320 --> 00:31:10,720
file and it went okay and went

914
00:31:10,720 --> 00:31:11,760
and just to make sure it wasn't

915
00:31:11,760 --> 00:31:13,600
perfectly like i sorted and shuffled and

916
00:31:13,600 --> 00:31:15,600
all that stuff and the reason this is an

917
00:31:15,600 --> 00:31:16,960
important one and i wanted to bring it

918
00:31:16,960 --> 00:31:20,399
up is because people tend to use names

919
00:31:20,399 --> 00:31:22,320
as part of the password the number of

920
00:31:22,320 --> 00:31:24,159
times we've been on a pen test and the

921
00:31:24,159 --> 00:31:26,159
service account password

922
00:31:26,159 --> 00:31:28,159
is the name of the service account with

923
00:31:28,159 --> 00:31:30,159
like one two three exclamation on the

924
00:31:30,159 --> 00:31:31,279
end of it

925
00:31:31,279 --> 00:31:33,760
happens all the time so if

926
00:31:33,760 --> 00:31:36,159
so commonly what i do is when i'm

927
00:31:36,159 --> 00:31:37,760
cracking stuff

928
00:31:37,760 --> 00:31:39,200
i'll pull all the usernames out so when

929
00:31:39,200 --> 00:31:41,039
i extract like the ntds file for example

930
00:31:41,039 --> 00:31:42,399
i'll pull all the usernames and search

931
00:31:42,399 --> 00:31:45,279
accounts and stuff out and i'll use that

932
00:31:45,279 --> 00:31:48,399
in an association tech if i have to

933
00:31:48,399 --> 00:31:51,440
or if i'm even throwing it back at it

934
00:31:51,440 --> 00:31:54,080
during the password cracks

935
00:31:54,080 --> 00:31:57,679
because it it works

936
00:31:57,679 --> 00:31:59,039
don't run into this one often just

937
00:31:59,039 --> 00:32:00,399
because of the kind of hashes that we're

938
00:32:00,399 --> 00:32:02,159
running into but things like decrypt if

939
00:32:02,159 --> 00:32:03,200
you do have

940
00:32:03,200 --> 00:32:04,240
um

941
00:32:04,240 --> 00:32:05,679
certain logins and stuff that have been

942
00:32:05,679 --> 00:32:08,399
exposed it's gonna find it really fast

943
00:32:08,399 --> 00:32:10,960
if that works

944
00:32:10,960 --> 00:32:12,720
uh actually before i go on to that one

945
00:32:12,720 --> 00:32:14,559
so slava um

946
00:32:14,559 --> 00:32:16,960
cloud gpu instance ironically i just

947
00:32:16,960 --> 00:32:18,720
finished setting up an aws crowd

948
00:32:18,720 --> 00:32:21,120
clacking crap crap

949
00:32:21,120 --> 00:32:24,960
cloud cracking incident for a client um

950
00:32:24,960 --> 00:32:26,159
they wanted to get some password

951
00:32:26,159 --> 00:32:27,760
cracking they're looking at enhancing

952
00:32:27,760 --> 00:32:29,279
some password policies and things like

953
00:32:29,279 --> 00:32:30,799
that so they wanted to see how bad it

954
00:32:30,799 --> 00:32:33,519
was um so i worked with them to set up

955
00:32:33,519 --> 00:32:36,159
an aws instance using um

956
00:32:36,159 --> 00:32:39,600
like uh aws machine learning ubuntu

957
00:32:39,600 --> 00:32:40,799
image

958
00:32:40,799 --> 00:32:42,399
throw a bunch of stuff on it it's

959
00:32:42,399 --> 00:32:44,559
actually for using a one large was all

960
00:32:44,559 --> 00:32:46,399
that we set up now

961
00:32:46,399 --> 00:32:47,600
because we're able to get so many

962
00:32:47,600 --> 00:32:49,600
password cracking efficiencies

963
00:32:49,600 --> 00:32:50,880
we didn't have to go to like a four

964
00:32:50,880 --> 00:32:53,440
times large or anything so in that has a

965
00:32:53,440 --> 00:32:56,799
tesla v100 and i was getting 100 giga

966
00:32:56,799 --> 00:32:58,799
hashes a second out of that one so my

967
00:32:58,799 --> 00:33:01,600
home rig was getting 160

968
00:33:01,600 --> 00:33:03,840
and the single tesla v100 was getting a

969
00:33:03,840 --> 00:33:04,799
hundred

970
00:33:04,799 --> 00:33:08,159
gigahashes so 100 billion per second um

971
00:33:08,159 --> 00:33:09,760
but using the combinations of like

972
00:33:09,760 --> 00:33:11,279
dictionary attacks and and everything

973
00:33:11,279 --> 00:33:15,279
else that we did um i think i've got 26

974
00:33:15,279 --> 00:33:17,039
success rate out of

975
00:33:17,039 --> 00:33:19,760
and have to understand there's like

976
00:33:19,760 --> 00:33:21,279
because they had full 12 character

977
00:33:21,279 --> 00:33:23,679
password history there's something like

978
00:33:23,679 --> 00:33:26,000
120 000

979
00:33:26,000 --> 00:33:27,760
password entries that we're cracking and

980
00:33:27,760 --> 00:33:30,559
i've already got 20 i got 26 of them in

981
00:33:30,559 --> 00:33:32,159
like an hour

982
00:33:32,159 --> 00:33:34,399
like uh obviously going through the

983
00:33:34,399 --> 00:33:37,039
history the history 12 is always

984
00:33:37,039 --> 00:33:39,039
a easier password to crack than history

985
00:33:39,039 --> 00:33:40,720
six because as people create better

986
00:33:40,720 --> 00:33:42,799
password policies you know they always

987
00:33:42,799 --> 00:33:44,399
change but it's interesting because when

988
00:33:44,399 --> 00:33:46,080
you start analyzing the password history

989
00:33:46,080 --> 00:33:47,519
it gives you a chance to figure out what

990
00:33:47,519 --> 00:33:49,120
their new password might be you'll see

991
00:33:49,120 --> 00:33:50,720
those things where people are just

992
00:33:50,720 --> 00:33:54,080
incrementing a number one or adding um

993
00:33:54,080 --> 00:33:56,240
some people realize oh password one oh i

994
00:33:56,240 --> 00:33:57,600
gotta make it past for two well let's

995
00:33:57,600 --> 00:33:58,960
make it a special character so they just

996
00:33:58,960 --> 00:34:01,279
go shift and the second one is the

997
00:34:01,279 --> 00:34:03,200
second key and the third one's the third

998
00:34:03,200 --> 00:34:05,360
key and yeah and that's just going crazy

999
00:34:05,360 --> 00:34:06,399
on that one

1000
00:34:06,399 --> 00:34:08,320
um

1001
00:34:08,320 --> 00:34:10,079
another interesting one is called prince

1002
00:34:10,079 --> 00:34:10,879
so

1003
00:34:10,879 --> 00:34:12,719
prince processor purple rain attack and

1004
00:34:12,719 --> 00:34:15,119
basically what you do is you just feed

1005
00:34:15,119 --> 00:34:16,719
things back in so instead of taking like

1006
00:34:16,719 --> 00:34:18,719
a combinator where you're taking too

1007
00:34:18,719 --> 00:34:20,079
wordless and going you're taking one

1008
00:34:20,079 --> 00:34:22,079
word list and then it's just kind of

1009
00:34:22,079 --> 00:34:23,520
like

1010
00:34:23,520 --> 00:34:25,520
chaining all of the words together and

1011
00:34:25,520 --> 00:34:28,079
just throwing them in to find out uh you

1012
00:34:28,079 --> 00:34:29,679
can read more about the purple rain

1013
00:34:29,679 --> 00:34:33,839
attack on that one it's pretty effective

1014
00:34:33,839 --> 00:34:36,159
it it basically like if

1015
00:34:36,159 --> 00:34:37,839
it's probably one of the ones that i do

1016
00:34:37,839 --> 00:34:40,800
about like number five or number six uh

1017
00:34:40,800 --> 00:34:42,399
just because i want to have a good list

1018
00:34:42,399 --> 00:34:44,639
on it and one of the things i always do

1019
00:34:44,639 --> 00:34:46,800
is do a poor person's prints i always

1020
00:34:46,800 --> 00:34:49,119
take my pot file spit out the password

1021
00:34:49,119 --> 00:34:49,839
so

1022
00:34:49,839 --> 00:34:50,719
you know

1023
00:34:50,719 --> 00:34:52,399
colons in your password will screw up

1024
00:34:52,399 --> 00:34:54,560
workflows uh commas work great for data

1025
00:34:54,560 --> 00:34:57,119
breaches um this command here will

1026
00:34:57,119 --> 00:35:00,720
actually just it flips the um the string

1027
00:35:00,720 --> 00:35:02,720
around and then describes the first one

1028
00:35:02,720 --> 00:35:04,240
so you're not trying to grab the end one

1029
00:35:04,240 --> 00:35:05,760
which you might have a

1030
00:35:05,760 --> 00:35:07,119
this one goes right up from the first

1031
00:35:07,119 --> 00:35:09,280
one so if there's no

1032
00:35:09,280 --> 00:35:11,200
uh colon in it then

1033
00:35:11,200 --> 00:35:12,960
it grabs the whole file

1034
00:35:12,960 --> 00:35:14,079
and then i just keep running it again

1035
00:35:14,079 --> 00:35:16,720
with all the rules and everything else

1036
00:35:16,720 --> 00:35:19,119
yeah i've got a really good um uh link

1037
00:35:19,119 --> 00:35:21,440
that sans actually had put out on

1038
00:35:21,440 --> 00:35:23,760
setting up an aws cracking instance

1039
00:35:23,760 --> 00:35:27,839
um i'll try and find it um actually

1040
00:35:27,839 --> 00:35:30,880
i'll put it in the um in the chat here

1041
00:35:30,880 --> 00:35:33,200
as well

1042
00:35:36,960 --> 00:35:38,800
we actually followed that one pretty

1043
00:35:38,800 --> 00:35:40,640
closely there was a few things that it

1044
00:35:40,640 --> 00:35:42,079
didn't have

1045
00:35:42,079 --> 00:35:43,440
but for the most part that was pretty

1046
00:35:43,440 --> 00:35:45,839
informative as well

1047
00:35:45,839 --> 00:35:47,680
um and then so yeah with the four-person

1048
00:35:47,680 --> 00:35:49,119
sprints like i'll pull up my password

1049
00:35:49,119 --> 00:35:51,200
file and i will just keep using it again

1050
00:35:51,200 --> 00:35:53,359
and again and again and again and you'll

1051
00:35:53,359 --> 00:35:55,119
find as i go through different rules so

1052
00:35:55,119 --> 00:35:56,560
i'll use one rule and then i'll use like

1053
00:35:56,560 --> 00:35:59,359
the dead best 64. and then i'll go use

1054
00:35:59,359 --> 00:36:00,880
like generated two or whatever i'll just

1055
00:36:00,880 --> 00:36:02,560
keep going back and forth and you'll

1056
00:36:02,560 --> 00:36:05,200
find um as you get more passwords

1057
00:36:05,200 --> 00:36:07,200
exposed you get more success and more

1058
00:36:07,200 --> 00:36:08,880
success and you start pulling up some

1059
00:36:08,880 --> 00:36:12,400
really weird ones that way

1060
00:36:12,400 --> 00:36:14,000
i wanted to give a couple neat little

1061
00:36:14,000 --> 00:36:16,240
tricks and tips and stuff um near the

1062
00:36:16,240 --> 00:36:17,920
end of this one

1063
00:36:17,920 --> 00:36:20,400
i do a lot of ctfs just because why not

1064
00:36:20,400 --> 00:36:22,240
it's a lot of fun if you're cracking a

1065
00:36:22,240 --> 00:36:23,520
password a dictionary you need to create

1066
00:36:23,520 --> 00:36:25,280
a rule because when you try and crack

1067
00:36:25,280 --> 00:36:26,880
the password is always not just like the

1068
00:36:26,880 --> 00:36:28,640
word rock or you know like rocky uber

1069
00:36:28,640 --> 00:36:30,720
summer 2020 it's always wrapped in the

1070
00:36:30,720 --> 00:36:32,720
flag so um

1071
00:36:32,720 --> 00:36:35,119
you know curly bracket flag calling

1072
00:36:35,119 --> 00:36:36,160
password

1073
00:36:36,160 --> 00:36:37,839
so you have to create a rule to actually

1074
00:36:37,839 --> 00:36:38,800
wrap

1075
00:36:38,800 --> 00:36:41,040
anything in it so the problem is when

1076
00:36:41,040 --> 00:36:42,880
you create a rule it actually applies it

1077
00:36:42,880 --> 00:36:44,880
in reverse order

1078
00:36:44,880 --> 00:36:46,720
so you would think you know i need to

1079
00:36:46,720 --> 00:36:47,839
write

1080
00:36:47,839 --> 00:36:48,800
flag

1081
00:36:48,800 --> 00:36:50,320
well you actually have to go opposite

1082
00:36:50,320 --> 00:36:53,520
way so semicolon g-a-l kind of thing so

1083
00:36:53,520 --> 00:36:56,160
your rule looks like that

1084
00:36:56,160 --> 00:36:57,920
you know flag that rule looks like this

1085
00:36:57,920 --> 00:36:59,839
boom and then you can run it against it

1086
00:36:59,839 --> 00:37:01,760
so if you're doing a ctf and you need to

1087
00:37:01,760 --> 00:37:04,560
crack a password um 90 make sure your

1088
00:37:04,560 --> 00:37:06,079
flag values are set to what they're

1089
00:37:06,079 --> 00:37:08,079
looking for and you'll have a lot more

1090
00:37:08,079 --> 00:37:09,520
efficient on the password crafting on

1091
00:37:09,520 --> 00:37:10,720
that one

1092
00:37:10,720 --> 00:37:12,720
because typically on ctfs they do two

1093
00:37:12,720 --> 00:37:14,160
things they always wrap in a flag and

1094
00:37:14,160 --> 00:37:17,520
they're always using rock you so

1095
00:37:20,000 --> 00:37:22,320
little things people for things like

1096
00:37:22,320 --> 00:37:25,359
passwords for files um you can you i

1097
00:37:25,359 --> 00:37:26,960
mentioned microsoft office files because

1098
00:37:26,960 --> 00:37:28,880
you can actually pull out the the

1099
00:37:28,880 --> 00:37:30,880
encrypted file and brute force it that

1100
00:37:30,880 --> 00:37:31,920
way i

1101
00:37:31,920 --> 00:37:34,720
get asked to do that all the time um

1102
00:37:34,720 --> 00:37:36,079
some people are losing things like

1103
00:37:36,079 --> 00:37:37,839
bitcoin wallets and passwords and stuff

1104
00:37:37,839 --> 00:37:40,560
like that how you get the hash is

1105
00:37:40,560 --> 00:37:44,079
up to the mind of the reader um

1106
00:37:44,079 --> 00:37:46,320
but basically create a file with

1107
00:37:46,320 --> 00:37:47,920
what you think your password is going to

1108
00:37:47,920 --> 00:37:50,000
be or what you think it might have been

1109
00:37:50,000 --> 00:37:51,599
or what you might have typed or if you

1110
00:37:51,599 --> 00:37:53,440
know it taps lock accidentally on kind

1111
00:37:53,440 --> 00:37:54,400
of thing

1112
00:37:54,400 --> 00:37:55,839
and then to start creating a whole bunch

1113
00:37:55,839 --> 00:37:58,160
of permutations of it so

1114
00:37:58,160 --> 00:38:00,240
basically read in the rules put it out

1115
00:38:00,240 --> 00:38:02,160
and then it creates another file with

1116
00:38:02,160 --> 00:38:03,680
here's all the permutations of it based

1117
00:38:03,680 --> 00:38:06,000
on the rule

1118
00:38:06,000 --> 00:38:07,040
and then just

1119
00:38:07,040 --> 00:38:08,560
start banging on it

1120
00:38:08,560 --> 00:38:10,960
eventually you'll get it this works more

1121
00:38:10,960 --> 00:38:14,720
often than i'd really care to expect

1122
00:38:14,720 --> 00:38:16,320
if you have no idea what the password is

1123
00:38:16,320 --> 00:38:18,480
then yeah just kind of throw everything

1124
00:38:18,480 --> 00:38:21,359
at it um in this case it was a 7-zip

1125
00:38:21,359 --> 00:38:23,040
file

1126
00:38:23,040 --> 00:38:25,280
you might get lucky

1127
00:38:25,280 --> 00:38:26,720
i mean it doesn't work too well against

1128
00:38:26,720 --> 00:38:28,079
things like

1129
00:38:28,079 --> 00:38:29,520
things that you know you only have five

1130
00:38:29,520 --> 00:38:31,680
chances before it deletes or itself or

1131
00:38:31,680 --> 00:38:34,160
something so um obviously this is mostly

1132
00:38:34,160 --> 00:38:36,560
taken off like for an office file

1133
00:38:36,560 --> 00:38:38,320
there's you can run a command and john

1134
00:38:38,320 --> 00:38:40,240
actually there's um

1135
00:38:40,240 --> 00:38:41,920
was it office to john

1136
00:38:41,920 --> 00:38:44,240
and it'll just pull out the encrypted

1137
00:38:44,240 --> 00:38:48,399
hash and then you just run it

1138
00:38:49,839 --> 00:38:52,160
i wanted to obviously i've

1139
00:38:52,160 --> 00:38:54,240
had to go through this a little fast

1140
00:38:54,240 --> 00:38:56,320
but

1141
00:38:56,320 --> 00:38:57,280
practice

1142
00:38:57,280 --> 00:38:59,359
it's the best way i mean i can't always

1143
00:38:59,359 --> 00:39:01,040
predict that i'm going to actually you

1144
00:39:01,040 --> 00:39:02,480
know get demanded men on it on a

1145
00:39:02,480 --> 00:39:04,079
customer and stuff and we have limited

1146
00:39:04,079 --> 00:39:06,000
engagements so when you're cracking

1147
00:39:06,000 --> 00:39:06,880
those

1148
00:39:06,880 --> 00:39:08,640
you you only have so much time you know

1149
00:39:08,640 --> 00:39:10,240
we've got a week to do the pen test and

1150
00:39:10,240 --> 00:39:12,320
stuff so there's a you know you want

1151
00:39:12,320 --> 00:39:14,640
what can you get an hour go

1152
00:39:14,640 --> 00:39:16,240
um

1153
00:39:16,240 --> 00:39:18,079
corelogic runs a cracked me if you can

1154
00:39:18,079 --> 00:39:19,920
contest every year at defcon

1155
00:39:19,920 --> 00:39:21,760
the nice thing is all of the previous

1156
00:39:21,760 --> 00:39:23,359
contest files are always available so

1157
00:39:23,359 --> 00:39:25,520
everything going back to 2010 are there

1158
00:39:25,520 --> 00:39:27,440
so if you go and download the contest

1159
00:39:27,440 --> 00:39:29,680
files it's got you know whether it's a

1160
00:39:29,680 --> 00:39:31,040
list of different hash types that they

1161
00:39:31,040 --> 00:39:33,520
want you to crack or anything else last

1162
00:39:33,520 --> 00:39:35,680
year

1163
00:39:35,680 --> 00:39:37,040
they threw everybody for a loop and

1164
00:39:37,040 --> 00:39:38,800
actually just provided an ova file of a

1165
00:39:38,800 --> 00:39:40,400
windows domain controller and said here

1166
00:39:40,400 --> 00:39:42,800
have fun um and then you have to go find

1167
00:39:42,800 --> 00:39:44,079
everything

1168
00:39:44,079 --> 00:39:45,920
right and so that's you know like

1169
00:39:45,920 --> 00:39:48,960
grepping through ntds for um you know

1170
00:39:48,960 --> 00:39:51,440
clear text passwords and descriptions

1171
00:39:51,440 --> 00:39:53,520
and stuff like that it was insane um but

1172
00:39:53,520 --> 00:39:55,119
it was a lot of fun

1173
00:39:55,119 --> 00:39:57,920
and so you can go and

1174
00:39:57,920 --> 00:39:59,839
you know download the contest files go

1175
00:39:59,839 --> 00:40:01,280
take a look at them

1176
00:40:01,280 --> 00:40:03,440
um try cracking them yourself and see

1177
00:40:03,440 --> 00:40:05,760
how good you do and then then go look at

1178
00:40:05,760 --> 00:40:06,560
the

1179
00:40:06,560 --> 00:40:07,920
at the explanations and all the

1180
00:40:07,920 --> 00:40:09,839
write-ups and stuff and see how close

1181
00:40:09,839 --> 00:40:11,760
she got and then try it again and then

1182
00:40:11,760 --> 00:40:13,359
you know practice practice practice try

1183
00:40:13,359 --> 00:40:16,160
and do it um agile bits a company makes

1184
00:40:16,160 --> 00:40:18,000
one password actually puts out some

1185
00:40:18,000 --> 00:40:19,440
password cracking challenges once and

1186
00:40:19,440 --> 00:40:22,240
all on their github page um

1187
00:40:22,240 --> 00:40:24,640
they're kind of fun

1188
00:40:24,640 --> 00:40:26,720
but if you're looking for ways of of

1189
00:40:26,720 --> 00:40:29,359
things to crack that are beyond like the

1190
00:40:29,359 --> 00:40:30,880
the rocky

1191
00:40:30,880 --> 00:40:34,319
file that um pvat put out was fantastic

1192
00:40:34,319 --> 00:40:36,319
great for demos and stuff like that

1193
00:40:36,319 --> 00:40:37,599
um

1194
00:40:37,599 --> 00:40:38,800
but when you get into some of the core

1195
00:40:38,800 --> 00:40:40,480
logic once they start throwing weird

1196
00:40:40,480 --> 00:40:41,920
loops at you where they're you know

1197
00:40:41,920 --> 00:40:43,680
they're inserting two characters into a

1198
00:40:43,680 --> 00:40:45,520
word and you have to kind of like write

1199
00:40:45,520 --> 00:40:47,280
a tool or something to figure out how to

1200
00:40:47,280 --> 00:40:49,359
crack that so it lets you play around

1201
00:40:49,359 --> 00:40:51,119
with a lot of different kind of hash

1202
00:40:51,119 --> 00:40:52,960
types and rules and processing so going

1203
00:40:52,960 --> 00:40:54,240
over some of the

1204
00:40:54,240 --> 00:40:56,800
like the combinator attacks and the um

1205
00:40:56,800 --> 00:40:58,800
the hybrid attacks in six and seven

1206
00:40:58,800 --> 00:41:00,640
those are ways of cracking a lot of

1207
00:41:00,640 --> 00:41:02,079
those passwords and that's why they're

1208
00:41:02,079 --> 00:41:03,200
doing them

1209
00:41:03,200 --> 00:41:04,560
they're taking passphrases they're

1210
00:41:04,560 --> 00:41:06,960
mangling them they're um they're

1211
00:41:06,960 --> 00:41:08,800
throwing leap speak at things and things

1212
00:41:08,800 --> 00:41:10,640
like that so a lot of fun to do and a

1213
00:41:10,640 --> 00:41:11,920
lot of really interesting ways to

1214
00:41:11,920 --> 00:41:14,160
practice

1215
00:41:14,160 --> 00:41:14,960
so

1216
00:41:14,960 --> 00:41:16,560
and with that

1217
00:41:16,560 --> 00:41:21,480
that was it perfect we got time for q a

1218
00:41:26,319 --> 00:41:28,160
do you have any q a

1219
00:41:28,160 --> 00:41:29,680
that's awesome chris yeah anyone who's

1220
00:41:29,680 --> 00:41:32,000
got any questions now's the time to ask

1221
00:41:32,000 --> 00:41:33,520
you can put it in the chat window or in

1222
00:41:33,520 --> 00:41:35,200
a q a poll i actually do see something

1223
00:41:35,200 --> 00:41:37,200
that just went into the cuny ball

1224
00:41:37,200 --> 00:41:39,920
how secure is bcrip considered as a

1225
00:41:39,920 --> 00:41:41,760
hashing mechanism

1226
00:41:41,760 --> 00:41:43,520
it's actually pretty good bcrypt is

1227
00:41:43,520 --> 00:41:45,280
really nice because it's very fast to

1228
00:41:45,280 --> 00:41:48,480
encrypt and very hard to decrypt aws put

1229
00:41:48,480 --> 00:41:50,800
out a or amazon put out a fantastic

1230
00:41:50,800 --> 00:41:53,119
write-up on

1231
00:41:53,119 --> 00:41:56,800
on how they implemented bcrypt for aws

1232
00:41:56,800 --> 00:41:57,680
and it

1233
00:41:57,680 --> 00:42:00,079
they did not pull any punches they went

1234
00:42:00,079 --> 00:42:02,079
through all the deep technical specs on

1235
00:42:02,079 --> 00:42:03,680
it um

1236
00:42:03,680 --> 00:42:05,359
and it is hard to brute force it and

1237
00:42:05,359 --> 00:42:06,960
that's where things like the association

1238
00:42:06,960 --> 00:42:08,960
attack are so powerful because

1239
00:42:08,960 --> 00:42:10,319
it lets you

1240
00:42:10,319 --> 00:42:12,560
get a a potential

1241
00:42:12,560 --> 00:42:15,359
up on that one because it's such a slow

1242
00:42:15,359 --> 00:42:18,160
um decryption

1243
00:42:18,160 --> 00:42:20,319
i saw another question up here too as

1244
00:42:20,319 --> 00:42:21,920
well it was

1245
00:42:21,920 --> 00:42:23,359
here's one here can you send the

1246
00:42:23,359 --> 00:42:25,200
passwords to encrypted file or do you

1247
00:42:25,200 --> 00:42:29,720
perform them in a veracrypt container

1248
00:42:31,359 --> 00:42:33,280
uh actually usually just directly in the

1249
00:42:33,280 --> 00:42:35,520
file so if if i'm brute forcing like a

1250
00:42:35,520 --> 00:42:37,520
7-zip file or anything like that

1251
00:42:37,520 --> 00:42:39,119
um

1252
00:42:39,119 --> 00:42:40,880
like i'm extracting the password hash

1253
00:42:40,880 --> 00:42:42,240
from the file

1254
00:42:42,240 --> 00:42:44,800
brute forcing it is just a text file or

1255
00:42:44,800 --> 00:42:46,319
something on my rig and then i'm going

1256
00:42:46,319 --> 00:42:47,680
back to the 7-zip and typing it in

1257
00:42:47,680 --> 00:42:48,880
manually

1258
00:42:48,880 --> 00:42:50,960
um

1259
00:42:50,960 --> 00:42:52,640
there's another question here it was

1260
00:42:52,640 --> 00:42:53,760
when creating these setups what

1261
00:42:53,760 --> 00:42:55,680
prevention methods do you take to ensure

1262
00:42:55,680 --> 00:42:57,920
that these passwords are not exposed so

1263
00:42:57,920 --> 00:43:00,240
there's a lot so for example the aws

1264
00:43:00,240 --> 00:43:02,720
setup um absolutely firewalled

1265
00:43:02,720 --> 00:43:06,480
completely off the internet um i had to

1266
00:43:06,480 --> 00:43:08,000
to to do this

1267
00:43:08,000 --> 00:43:09,760
i created a

1268
00:43:09,760 --> 00:43:10,880
nok

1269
00:43:10,880 --> 00:43:13,280
and i threw in a storage array on it and

1270
00:43:13,280 --> 00:43:14,960
put all my files on it and there's a

1271
00:43:14,960 --> 00:43:17,680
cali vm on it um so all my dictionaries

1272
00:43:17,680 --> 00:43:19,760
and and you know public stuff is on

1273
00:43:19,760 --> 00:43:20,640
there

1274
00:43:20,640 --> 00:43:24,079
and then i have to vpn in uh using mfa

1275
00:43:24,079 --> 00:43:27,119
and everything to to a jump post

1276
00:43:27,119 --> 00:43:28,640
connect to that cali box which is

1277
00:43:28,640 --> 00:43:30,000
firewalled off and on a special

1278
00:43:30,000 --> 00:43:31,680
management network

1279
00:43:31,680 --> 00:43:33,440
then i have access they put firewall

1280
00:43:33,440 --> 00:43:35,680
rule in for me to get up to the aws

1281
00:43:35,680 --> 00:43:37,680
instance again with mfa and everything

1282
00:43:37,680 --> 00:43:39,839
else uh and i had to run everything

1283
00:43:39,839 --> 00:43:41,119
through that

1284
00:43:41,119 --> 00:43:43,520
uh the passwords never left the box and

1285
00:43:43,520 --> 00:43:45,440
like when we moved them off the domain

1286
00:43:45,440 --> 00:43:47,680
controller it was a coordinated effort

1287
00:43:47,680 --> 00:43:50,160
you know we encrypted the and the zip

1288
00:43:50,160 --> 00:43:51,359
file and the registry hives and

1289
00:43:51,359 --> 00:43:53,200
everything right on the server threw it

1290
00:43:53,200 --> 00:43:54,880
over

1291
00:43:54,880 --> 00:43:57,040
and then no password hashes or anything

1292
00:43:57,040 --> 00:43:59,599
were decrypted until everything was

1293
00:43:59,599 --> 00:44:03,119
firewalled off and ready to go

1294
00:44:03,119 --> 00:44:03,920
so

1295
00:44:03,920 --> 00:44:07,319
excellent question

1296
00:44:09,520 --> 00:44:11,040
someone was asking can we get a link to

1297
00:44:11,040 --> 00:44:13,920
the slides afterwards um

1298
00:44:13,920 --> 00:44:16,560
yeah and and we will be taking this

1299
00:44:16,560 --> 00:44:19,119
presentation and be putting it

1300
00:44:19,119 --> 00:44:21,599
up on our youtube channel so i'll just

1301
00:44:21,599 --> 00:44:24,960
add that right now in the chat window

1302
00:44:24,960 --> 00:44:27,280
feel free to subscribe to that so you'll

1303
00:44:27,280 --> 00:44:29,680
see it when it

1304
00:44:29,680 --> 00:44:31,200
goes live

1305
00:44:31,200 --> 00:44:33,440
and then i've got a pdf of this one so

1306
00:44:33,440 --> 00:44:35,839
excellent so there'll be a pdf as well

1307
00:44:35,839 --> 00:44:37,520
blast it out on the twitters and

1308
00:44:37,520 --> 00:44:39,440
everything and you know

1309
00:44:39,440 --> 00:44:42,720
we'll get it to you if you need it

1310
00:44:43,680 --> 00:44:45,440
any last minute questions we still got

1311
00:44:45,440 --> 00:44:48,000
some time

1312
00:44:48,960 --> 00:44:51,040
yeah we can go back over anything or

1313
00:44:51,040 --> 00:44:53,040
anything anybody wants here's another

1314
00:44:53,040 --> 00:44:56,079
question from alan um would a mining rig

1315
00:44:56,079 --> 00:44:58,560
work well for cracking also not sure if

1316
00:44:58,560 --> 00:45:00,240
they're optimized for this purpose or

1317
00:45:00,240 --> 00:45:03,599
not or does it depend on the scenario

1318
00:45:03,599 --> 00:45:05,920
ironically uh my password rig when i

1319
00:45:05,920 --> 00:45:08,240
first was setting it up uh i was gonna

1320
00:45:08,240 --> 00:45:09,680
start this is

1321
00:45:09,680 --> 00:45:12,720
right before the ethereum wall got hit

1322
00:45:12,720 --> 00:45:14,880
uh so the plan for it was i was gonna

1323
00:45:14,880 --> 00:45:16,640
sit there and mine ethereum all day and

1324
00:45:16,640 --> 00:45:18,319
then when i needed crack passwords i

1325
00:45:18,319 --> 00:45:20,800
would flip it over and then go back

1326
00:45:20,800 --> 00:45:22,800
uh but yeah these rigs are exactly

1327
00:45:22,800 --> 00:45:25,920
that's exactly built for it um

1328
00:45:25,920 --> 00:45:27,520
you know if i had to do mine again i

1329
00:45:27,520 --> 00:45:29,359
might put it in a better location

1330
00:45:29,359 --> 00:45:31,280
because um my lab does not have quite

1331
00:45:31,280 --> 00:45:32,960
the ac that i need

1332
00:45:32,960 --> 00:45:34,720
um

1333
00:45:34,720 --> 00:45:36,319
loudness wouldn't be much better either

1334
00:45:36,319 --> 00:45:38,079
for that well it works great in the

1335
00:45:38,079 --> 00:45:40,960
summer not so much in the winter um

1336
00:45:40,960 --> 00:45:44,079
but yeah it's pretty good um but yeah a

1337
00:45:44,079 --> 00:45:47,119
mining rig is exactly perfect um if you

1338
00:45:47,119 --> 00:45:49,040
if you're doing that then you can easily

1339
00:45:49,040 --> 00:45:51,040
flip back and forth between them

1340
00:45:51,040 --> 00:45:52,240
um

1341
00:45:52,240 --> 00:45:54,240
and you don't necessarily mean i mean i

1342
00:45:54,240 --> 00:45:55,680
have this big rig because i need the

1343
00:45:55,680 --> 00:45:59,280
speed um you don't need a big rig to do

1344
00:45:59,280 --> 00:46:02,000
this you can force cpu usage it's

1345
00:46:02,000 --> 00:46:03,200
obviously going to take a little bit

1346
00:46:03,200 --> 00:46:05,359
longer um but

1347
00:46:05,359 --> 00:46:07,440
a lot of laptops um even some of the

1348
00:46:07,440 --> 00:46:09,200
smaller ones with like the ends and

1349
00:46:09,200 --> 00:46:10,880
stuff

1350
00:46:10,880 --> 00:46:12,240
they work they're just going to be a

1351
00:46:12,240 --> 00:46:14,800
little slower and not so much

1352
00:46:14,800 --> 00:46:17,440
i i have a surface book and i use vms

1353
00:46:17,440 --> 00:46:19,119
for everything and i can never use hash

1354
00:46:19,119 --> 00:46:20,960
cat i have to use john

1355
00:46:20,960 --> 00:46:23,040
because in the virtualization i just

1356
00:46:23,040 --> 00:46:25,040
don't have the right uh

1357
00:46:25,040 --> 00:46:28,400
uh oomph for hashcat to run well so it's

1358
00:46:28,400 --> 00:46:30,240
all about what you have and how you use

1359
00:46:30,240 --> 00:46:31,200
it i guess

1360
00:46:31,200 --> 00:46:32,560
yeah i mean i went off and grabbed

1361
00:46:32,560 --> 00:46:35,200
another gtx 1080 and threw it into um i

1362
00:46:35,200 --> 00:46:37,119
have a server

1363
00:46:37,119 --> 00:46:38,880
thing that's running a bunch of torrents

1364
00:46:38,880 --> 00:46:40,960
and everything else and so i threw that

1365
00:46:40,960 --> 00:46:42,720
in um

1366
00:46:42,720 --> 00:46:44,720
into there just so i could you know if i

1367
00:46:44,720 --> 00:46:46,960
have a little job that i wanted to run

1368
00:46:46,960 --> 00:46:49,920
while um the big jobs are going on i can

1369
00:46:49,920 --> 00:46:54,040
just kind of jump over and do that

1370
00:46:56,000 --> 00:46:56,340
um

1371
00:46:56,340 --> 00:46:58,400
[Music]

1372
00:46:58,400 --> 00:47:01,440
anything else i'm just just checking the

1373
00:47:01,440 --> 00:47:02,960
q a q

1374
00:47:02,960 --> 00:47:04,880
nothing more in there the chat looks

1375
00:47:04,880 --> 00:47:07,520
pretty open

1376
00:47:08,640 --> 00:47:11,200
wow i guess it gives us a little time to

1377
00:47:11,200 --> 00:47:14,000
grab a quick bite or a coffee before our

1378
00:47:14,000 --> 00:47:16,560
next session

1379
00:47:16,560 --> 00:47:20,480
let me just do a quick check here

1380
00:47:21,040 --> 00:47:25,040
yeah manny's in our next session

1381
00:47:25,040 --> 00:47:26,960
excuse to expense a gaming tower

1382
00:47:26,960 --> 00:47:29,280
absolutely

1383
00:47:29,280 --> 00:47:30,960
unfortunately for some strange reason

1384
00:47:30,960 --> 00:47:32,319
when i started getting into passwords i

1385
00:47:32,319 --> 00:47:35,440
don't play games as much

1386
00:47:35,440 --> 00:47:38,079
well now it should be your vr setup

1387
00:47:38,079 --> 00:47:41,040
right yes actually so that's the reality

1388
00:47:41,040 --> 00:47:42,559
of it all is you can say that you're

1389
00:47:42,559 --> 00:47:44,640
building and you need the compute power

1390
00:47:44,640 --> 00:47:48,240
and gpus so you can do vr

1391
00:47:48,240 --> 00:47:50,319
might get that written off that way

1392
00:47:50,319 --> 00:47:52,800
or or i can try and you know because my

1393
00:47:52,800 --> 00:47:55,520
uh my kid's teacher um uses uh oculus

1394
00:47:55,520 --> 00:47:57,839
and stuff for um acron like this big

1395
00:47:57,839 --> 00:48:00,240
squirrel attack a tree game and stuff so

1396
00:48:00,240 --> 00:48:02,400
i you know i can say hey look let's fun

1397
00:48:02,400 --> 00:48:05,880
time for the summer

1398
00:48:07,839 --> 00:48:09,839
but anyways yeah if anybody has any

1399
00:48:09,839 --> 00:48:11,520
questions and stuff like um you've got

1400
00:48:11,520 --> 00:48:13,119
my twitter and

1401
00:48:13,119 --> 00:48:14,800
everything else hit me up send me an

1402
00:48:14,800 --> 00:48:17,280
email whatever the case may be and uh

1403
00:48:17,280 --> 00:48:18,559
glad to answer any other questions you

1404
00:48:18,559 --> 00:48:19,520
have

1405
00:48:19,520 --> 00:48:21,599
it was awesome thanks chris appreciate

1406
00:48:21,599 --> 00:48:25,599
all of your work that was great research

