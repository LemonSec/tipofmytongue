1
00:00:02,879 --> 00:00:05,759
welcome aboard at my talking i'm glad

2
00:00:05,759 --> 00:00:07,759
for this view for all

3
00:00:07,759 --> 00:00:09,920
my talk is called the throne i see the

4
00:00:09,920 --> 00:00:14,320
variety with iggy hunter to get a show

5
00:00:14,960 --> 00:00:18,000
my name is concordia but you can call me

6
00:00:18,000 --> 00:00:20,560
by my nicky name hodox

7
00:00:20,560 --> 00:00:22,480
i read about me

8
00:00:22,480 --> 00:00:25,920
i'm penetration tester instructor id

9
00:00:25,920 --> 00:00:27,519
consultant information security

10
00:00:27,519 --> 00:00:29,599
throughout 30 years

11
00:00:29,599 --> 00:00:32,399
certified ethical hacker basic council

12
00:00:32,399 --> 00:00:34,880
already gave it taxes to hack in the box

13
00:00:34,880 --> 00:00:37,680
psychopath security conference murderer

14
00:00:37,680 --> 00:00:40,239
lucas that confronted him village inside

15
00:00:40,239 --> 00:00:43,360
skull guys besides attendance etc

16
00:00:43,360 --> 00:00:45,920
about 129 magazine about stackable

17
00:00:45,920 --> 00:00:48,320
flowing painters magazine about to cover

18
00:00:48,320 --> 00:00:50,239
you from frozen to get a shower

19
00:00:50,239 --> 00:00:53,920
pronunciation right at the shell

20
00:00:53,920 --> 00:00:56,480
here i leave here my liquid in profile

21
00:00:56,480 --> 00:01:00,640
by my name my email for who wants to

22
00:01:00,640 --> 00:01:03,039
take out some doubts after this

23
00:01:03,039 --> 00:01:06,960
presentation you can write to me

24
00:01:06,960 --> 00:01:12,439
on my editing profile my or my email

25
00:01:13,200 --> 00:01:15,119
our agenda

26
00:01:15,119 --> 00:01:18,000
we are learning about sc8 instructed

27
00:01:18,000 --> 00:01:21,040
exception handler buffer flow we have a

28
00:01:21,040 --> 00:01:24,479
park impossible learning see the variety

29
00:01:24,479 --> 00:01:26,560
charting jump aggie hunter medic

30
00:01:26,560 --> 00:01:29,040
characters reverse shell and you have a

31
00:01:29,040 --> 00:01:31,600
questions

32
00:01:36,799 --> 00:01:38,799
exceptional hunter

33
00:01:38,799 --> 00:01:41,759
reception 100 is a chunk of the code

34
00:01:41,759 --> 00:01:44,960
from inside of an application which have

35
00:01:44,960 --> 00:01:48,159
the objective to handle any exceptions

36
00:01:48,159 --> 00:01:50,960
that can occur during exception of a

37
00:01:50,960 --> 00:01:54,560
software receptor look like with

38
00:01:54,560 --> 00:01:56,880
here we have tried to catch

39
00:01:56,880 --> 00:01:59,680
when the flow of execution passing dry

40
00:01:59,680 --> 00:02:02,560
execute some code this of course some

41
00:02:02,560 --> 00:02:05,360
exception should jump to catch

42
00:02:05,360 --> 00:02:06,799
and catch

43
00:02:06,799 --> 00:02:08,399
execute some specific

44
00:02:08,399 --> 00:02:12,160
code where exceptional code

45
00:02:12,800 --> 00:02:17,520
conception is an expected event an error

46
00:02:17,520 --> 00:02:19,040
that occurs

47
00:02:19,040 --> 00:02:21,440
in a running system or program

48
00:02:21,440 --> 00:02:23,520
where exception occurs

49
00:02:23,520 --> 00:02:26,160
the program's normal flow of execution

50
00:02:26,160 --> 00:02:27,840
is interactive

51
00:02:27,840 --> 00:02:30,640
it is important that the application can

52
00:02:30,640 --> 00:02:31,920
handle

53
00:02:31,920 --> 00:02:34,640
the exception or error to continue

54
00:02:34,640 --> 00:02:37,120
running normally

55
00:02:37,120 --> 00:02:39,599
the address of the exception holder are

56
00:02:39,599 --> 00:02:40,560
stored

57
00:02:40,560 --> 00:02:42,319
on the stack

58
00:02:42,319 --> 00:02:44,959
the windows operation system has a

59
00:02:44,959 --> 00:02:46,319
forehander

60
00:02:46,319 --> 00:02:47,920
that gets

61
00:02:47,920 --> 00:02:50,640
any exception that is not handled by the

62
00:02:50,640 --> 00:02:52,319
program

63
00:02:52,319 --> 00:02:55,440
so so the window sensor has your own

64
00:02:55,440 --> 00:02:57,200
accepts handler

65
00:02:57,200 --> 00:02:59,680
when windows handles reception

66
00:02:59,680 --> 00:03:02,560
in a application you usually

67
00:03:02,560 --> 00:03:05,519
see message program has encountered a

68
00:03:05,519 --> 00:03:08,959
problem it needs to close

69
00:03:15,360 --> 00:03:18,560
the sc8 works in a chain and they are

70
00:03:18,560 --> 00:03:22,319
localized in the end of a stack

71
00:03:22,400 --> 00:03:25,120
in the classic birth overflow vanilla

72
00:03:25,120 --> 00:03:28,000
the exploit of writes the return address

73
00:03:28,000 --> 00:03:30,400
without worrying about the world writing

74
00:03:30,400 --> 00:03:31,280
more

75
00:03:31,280 --> 00:03:32,799
in stack

76
00:03:32,799 --> 00:03:36,080
but with the se8 of rights technique

77
00:03:36,080 --> 00:03:38,799
it's possible to be taken more space for

78
00:03:38,799 --> 00:03:41,680
the shell code in order to have exploit

79
00:03:41,680 --> 00:03:44,480
more stable

80
00:03:44,560 --> 00:03:45,760
so here

81
00:03:45,760 --> 00:03:47,200
we can see

82
00:03:47,200 --> 00:03:50,080
that the sc80 works in a chain we have

83
00:03:50,080 --> 00:03:50,879
here

84
00:03:50,879 --> 00:03:54,239
next s8 recording

85
00:03:54,239 --> 00:03:57,120
passing to next state recording passing

86
00:03:57,120 --> 00:04:00,400
to nexus 380 recording in the office

87
00:04:00,400 --> 00:04:02,720
chain

88
00:04:03,840 --> 00:04:05,599
buffer flow

89
00:04:05,599 --> 00:04:07,920
buffer flow is a normally where a

90
00:04:07,920 --> 00:04:11,120
program while writing data to a buffer

91
00:04:11,120 --> 00:04:13,439
overall the buffers boundaries and the

92
00:04:13,439 --> 00:04:16,320
variety to set the memory location

93
00:04:16,320 --> 00:04:19,199
mighty beam will be based placing the

94
00:04:19,199 --> 00:04:21,759
memory which locates a large amount of

95
00:04:21,759 --> 00:04:24,960
the data and dynamic a stacking based

96
00:04:24,960 --> 00:04:27,680
allocated unlimited or fixed size of the

97
00:04:27,680 --> 00:04:30,080
data such as data from account variables

98
00:04:30,080 --> 00:04:32,800
or functions

99
00:04:34,400 --> 00:04:36,720
here we have a left major in the right

100
00:04:36,720 --> 00:04:39,440
images inactivates we have a label 4

101
00:04:39,440 --> 00:04:42,240
with 11 a's right imagine have variable

102
00:04:42,240 --> 00:04:44,560
4 is 150 eighths

103
00:04:44,560 --> 00:04:47,680
as we can see when we in like in writing

104
00:04:47,680 --> 00:04:48,560
menu

105
00:04:48,560 --> 00:04:51,040
we have overwrite the resistability

106
00:04:51,040 --> 00:04:54,160
character a in the variety in end of

107
00:04:54,160 --> 00:04:58,560
stack because sc8 is localized in end of

108
00:04:58,560 --> 00:05:03,600
stacking we override the c82

109
00:05:05,520 --> 00:05:07,360
now we have a park

110
00:05:07,360 --> 00:05:08,960
the attacking machine will use the

111
00:05:08,960 --> 00:05:12,400
kylian 3200 20.3

112
00:05:12,400 --> 00:05:15,440
and the level sources that review usd

113
00:05:15,440 --> 00:05:19,039
file sharing web 7.2

114
00:05:19,039 --> 00:05:22,639
running on windows xp service packet 3

115
00:05:22,639 --> 00:05:25,120
here we have him i like to find a load

116
00:05:25,120 --> 00:05:27,919
of enable software

117
00:05:27,919 --> 00:05:30,000
i'll make it available on my linkedin

118
00:05:30,000 --> 00:05:32,960
profile the link for this slide for who

119
00:05:32,960 --> 00:05:34,880
want to download

120
00:05:34,880 --> 00:05:36,960
the enable software

121
00:05:36,960 --> 00:05:38,960
you can find the available software

122
00:05:38,960 --> 00:05:42,160
linking on this lines that will

123
00:05:42,160 --> 00:05:47,560
became available money including profile

124
00:05:57,600 --> 00:06:00,600
okay

125
00:06:08,000 --> 00:06:13,960
now we have this we have received a park

126
00:06:22,080 --> 00:06:25,520
let's see the video park

127
00:06:33,199 --> 00:06:37,199
let's open the vulnerable software

128
00:06:37,840 --> 00:06:40,080
easy file sharing web server is running

129
00:06:40,080 --> 00:06:42,560
on part 80

130
00:06:42,560 --> 00:06:45,520
open the moodle debugger

131
00:06:45,520 --> 00:06:49,799
click menu file attached

132
00:06:54,479 --> 00:06:56,720
choose the vulnerable software

133
00:06:56,720 --> 00:07:00,440
by clicking attach

134
00:07:04,800 --> 00:07:08,800
the softest parts clicking button run

135
00:07:08,800 --> 00:07:13,000
for running the vulnerable software

136
00:07:19,280 --> 00:07:21,360
now let's

137
00:07:21,360 --> 00:07:25,520
open the exploit code in kali linux

138
00:07:25,520 --> 00:07:27,680
vi is collector

139
00:07:27,680 --> 00:07:29,599
the exploited code

140
00:07:29,599 --> 00:07:33,919
this is the exploit code is writing

141
00:07:34,160 --> 00:07:35,520
in python

142
00:07:35,520 --> 00:07:37,680
we have very procrastinate with a lot

143
00:07:37,680 --> 00:07:39,759
amount of characters

144
00:07:39,759 --> 00:07:41,520
we will save the select amount of

145
00:07:41,520 --> 00:07:45,840
characters against the target software

146
00:07:48,720 --> 00:07:50,479
the target

147
00:07:50,479 --> 00:07:53,280
we have a payload equals method getting

148
00:07:53,280 --> 00:07:56,720
plus question for labor class world

149
00:07:56,720 --> 00:07:59,520
will send them within the right amount

150
00:07:59,520 --> 00:08:02,000
of characters local writing valuable

151
00:08:02,000 --> 00:08:06,479
questions against the tag type party 80.

152
00:08:06,479 --> 00:08:08,960
this roth amount of characters

153
00:08:08,960 --> 00:08:12,960
was generated by 2.8

154
00:08:12,960 --> 00:08:15,520
uh again separate amount of characters

155
00:08:15,520 --> 00:08:17,919
was in eighty

156
00:08:17,919 --> 00:08:20,800
by two pancreatic

157
00:08:20,800 --> 00:08:23,280
is localized before the metasploit

158
00:08:23,280 --> 00:08:25,759
framework it tools exploited you should

159
00:08:25,759 --> 00:08:26,720
type

160
00:08:26,720 --> 00:08:29,440
panel create

161
00:08:29,440 --> 00:08:32,159
dash ld link

162
00:08:32,159 --> 00:08:35,120
5000

163
00:08:36,240 --> 00:08:38,320
5000

164
00:08:38,320 --> 00:08:40,958
and we have here out amount of

165
00:08:40,958 --> 00:08:43,598
characters

166
00:08:44,640 --> 00:08:45,839
you must

167
00:08:45,839 --> 00:08:48,560
copy sort the amount of characters and

168
00:08:48,560 --> 00:08:52,000
paste in your variable question

169
00:08:52,000 --> 00:08:55,839
exploit the code

170
00:09:05,600 --> 00:09:08,080
to the paste in variable questions in

171
00:09:08,080 --> 00:09:11,040
exploit code

172
00:09:21,600 --> 00:09:23,680
so we will send a lot amount of

173
00:09:23,680 --> 00:09:25,839
characters against the tag team at the

174
00:09:25,839 --> 00:09:28,399
getty in party eight let's save the

175
00:09:28,399 --> 00:09:30,399
exploited code

176
00:09:30,399 --> 00:09:31,519
in the same

177
00:09:31,519 --> 00:09:33,920
title name of exploit the code is

178
00:09:33,920 --> 00:09:35,600
correct on two

179
00:09:35,600 --> 00:09:37,200
prime pi

180
00:09:37,200 --> 00:09:39,120
saying that x

181
00:09:39,120 --> 00:09:42,800
center guess the vulnerable software

182
00:09:42,800 --> 00:09:44,959
the flow of execution is top tier

183
00:09:44,959 --> 00:09:47,920
acceleration we have it click menu view

184
00:09:47,920 --> 00:09:49,279
sc8

185
00:09:49,279 --> 00:09:54,480
chain and we have here a value of the

186
00:09:54,480 --> 00:09:57,120
sc 100

187
00:09:57,120 --> 00:09:59,920
this value

188
00:10:00,080 --> 00:10:02,640
we have do

189
00:10:02,640 --> 00:10:05,440
a lot amount of characters

190
00:10:05,440 --> 00:10:07,760
with this value we need to find the

191
00:10:07,760 --> 00:10:12,000
office 30 of the se hundred

192
00:10:12,000 --> 00:10:14,959
we need to find our office set of 300.

193
00:10:14,959 --> 00:10:16,480
find office set

194
00:10:16,480 --> 00:10:20,000
we use a two parent of a set part of set

195
00:10:20,000 --> 00:10:25,760
space dash l link 5000 dash q

196
00:10:25,760 --> 00:10:27,040
dash q

197
00:10:27,040 --> 00:10:31,640
and the value of a c hundred

198
00:10:32,320 --> 00:10:34,399
46

199
00:10:34,399 --> 00:10:37,200
35

200
00:10:40,800 --> 00:10:46,519
46 35 66 46

201
00:10:50,959 --> 00:10:53,040
6 66

202
00:10:53,040 --> 00:10:54,320
46

203
00:10:54,320 --> 00:10:58,640
when we found off 35 out 65

204
00:10:58,640 --> 00:10:59,720
offset

205
00:10:59,720 --> 00:11:03,360
5.65 is of 75 300

206
00:11:03,360 --> 00:11:06,959
we need to ah entity of the office 30 in

207
00:11:06,959 --> 00:11:08,560
exploit code

208
00:11:08,560 --> 00:11:12,160
so now we have it

209
00:11:12,160 --> 00:11:15,519
we have variable crash world character a

210
00:11:15,519 --> 00:11:17,440
multiplied by

211
00:11:17,440 --> 00:11:20,800
office 34.61

212
00:11:20,800 --> 00:11:24,160
plus b multiplied by 4 plus c multiplied

213
00:11:24,160 --> 00:11:25,360
by 4

214
00:11:25,360 --> 00:11:30,160
plus 90. 90 means noop is no prison

215
00:11:30,160 --> 00:11:31,519
do nothing

216
00:11:31,519 --> 00:11:35,040
no means no patience because do nothing

217
00:11:35,040 --> 00:11:38,560
so we will feel will say against

218
00:11:38,560 --> 00:11:40,399
the target we're saying against the

219
00:11:40,399 --> 00:11:42,000
target

220
00:11:42,000 --> 00:11:44,200
5

221
00:11:44,200 --> 00:11:47,360
5.61 character a and there's real

222
00:11:47,360 --> 00:11:49,360
variety

223
00:11:49,360 --> 00:11:52,399
after we will variety the sc 100 with

224
00:11:52,399 --> 00:11:54,720
character b character c

225
00:11:54,720 --> 00:11:56,800
again we'll write

226
00:11:56,800 --> 00:12:01,120
sc 100 with character b character see

227
00:12:04,639 --> 00:12:09,079
let's restart the movie debugger

228
00:12:10,160 --> 00:12:13,680
clicking button run

229
00:12:14,160 --> 00:12:16,480
resize the mood of the burger

230
00:12:16,480 --> 00:12:18,720
running the money the burger run the

231
00:12:18,720 --> 00:12:22,279
vanilla softimage

232
00:12:26,959 --> 00:12:30,000
sandy executes the exploited code the

233
00:12:30,000 --> 00:12:32,320
pythonxconnect tree

234
00:12:32,320 --> 00:12:35,120
executes the exploit code

235
00:12:35,120 --> 00:12:36,839
sending the

236
00:12:36,839 --> 00:12:40,240
payload we have a flow flow of execution

237
00:12:40,240 --> 00:12:41,360
stock t

238
00:12:41,360 --> 00:12:43,839
acceleration minute view

239
00:12:43,839 --> 00:12:47,839
sc8 chain and now we have in c hundred

240
00:12:47,839 --> 00:12:50,240
forty two forty two forty two forty

241
00:12:50,240 --> 00:12:52,959
three forty three forty right button

242
00:12:52,959 --> 00:12:54,880
follow address in stack

243
00:12:54,880 --> 00:12:56,320
and we have

244
00:12:56,320 --> 00:12:59,120
pointer to nexus 300

245
00:12:59,120 --> 00:13:00,639
bpb

246
00:13:00,639 --> 00:13:03,839
ac 100 cc ccc

247
00:13:03,839 --> 00:13:05,120
we

248
00:13:05,120 --> 00:13:06,800
as we can see

249
00:13:06,800 --> 00:13:09,760
we get a contour of a 600

250
00:13:09,760 --> 00:13:13,360
so we get a contour of a c hundred we

251
00:13:13,360 --> 00:13:17,519
have b b b b in pointer to next is

252
00:13:17,519 --> 00:13:20,320
recorded

253
00:13:27,519 --> 00:13:30,720
you get a controversy hundred let's open

254
00:13:30,720 --> 00:13:34,519
the exploit code

255
00:13:36,959 --> 00:13:41,040
now we need to find the ax instruction

256
00:13:41,040 --> 00:13:42,880
an instruction

257
00:13:42,880 --> 00:13:45,680
pop-up return

258
00:13:45,680 --> 00:13:46,959
for this

259
00:13:46,959 --> 00:13:49,199
we need to type in command bar

260
00:13:49,199 --> 00:13:51,199
exclamation mark

261
00:13:51,199 --> 00:13:56,320
sc 100 sch8 exclamation mona sch click

262
00:13:56,320 --> 00:13:57,519
menu view

263
00:13:57,519 --> 00:13:59,440
log

264
00:13:59,440 --> 00:14:02,800
and we have here all the first 20 points

265
00:14:02,800 --> 00:14:06,480
i show here for my point is open sc

266
00:14:06,480 --> 00:14:07,839
80

267
00:14:07,839 --> 00:14:09,440
dash detect

268
00:14:09,440 --> 00:14:12,079
let's learn more about it let's learn

269
00:14:12,079 --> 00:14:14,880
more about

270
00:14:15,760 --> 00:14:16,800
sc

271
00:14:16,800 --> 00:14:19,920
pop-up return

272
00:14:28,160 --> 00:14:30,240
now we need to find immunity or

273
00:14:30,240 --> 00:14:32,639
instruction pop-up return

274
00:14:32,639 --> 00:14:35,360
this instruction will actually image

275
00:14:35,360 --> 00:14:38,079
below make a return to the pointer to

276
00:14:38,079 --> 00:14:40,800
next we activate the recording the

277
00:14:40,800 --> 00:14:44,320
pointer to next create recorded variety

278
00:14:44,320 --> 00:14:47,440
with a jump to our show called to get a

279
00:14:47,440 --> 00:14:48,880
versus shell

280
00:14:48,880 --> 00:14:52,000
so let's understand this imagine

281
00:14:52,000 --> 00:14:55,279
when expressing flow of execution is

282
00:14:55,279 --> 00:14:58,800
stop in acts violation flow of execution

283
00:14:58,800 --> 00:15:01,839
stopped in explanation

284
00:15:01,839 --> 00:15:03,760
after

285
00:15:03,760 --> 00:15:07,360
it's handled by c80 because associated

286
00:15:07,360 --> 00:15:09,680
this is the exception hundred of the

287
00:15:09,680 --> 00:15:11,120
windows

288
00:15:11,120 --> 00:15:14,639
in korean sc 800 we are variety with

289
00:15:14,639 --> 00:15:16,399
pop-up return

290
00:15:16,399 --> 00:15:20,360
so from of execution is passing coin

291
00:15:20,360 --> 00:15:24,639
ts800 and will execute the box box and

292
00:15:24,639 --> 00:15:27,600
return it in eternity we will return the

293
00:15:27,600 --> 00:15:31,040
pointer to nexus c80 recording that he

294
00:15:31,040 --> 00:15:34,000
pointed to nexus 380 was override with

295
00:15:34,000 --> 00:15:36,639
he jumped to show called it's a short

296
00:15:36,639 --> 00:15:37,680
jump

297
00:15:37,680 --> 00:15:40,240
so flow of execution is a core

298
00:15:40,240 --> 00:15:41,759
explanation

299
00:15:41,759 --> 00:15:45,120
so your variety created your variety

300
00:15:45,120 --> 00:15:48,240
greatest 300 pop-up return

301
00:15:48,240 --> 00:15:52,160
so we'll execute box pop and return it

302
00:15:52,160 --> 00:15:54,639
here return it

303
00:15:54,639 --> 00:15:58,160
will follow out in point to the next s8

304
00:15:58,160 --> 00:15:59,920
recording

305
00:15:59,920 --> 00:16:02,959
pointer to necessary to record will

306
00:16:02,959 --> 00:16:06,480
execute one short jumping and we will

307
00:16:06,480 --> 00:16:09,120
jump for our show code to get a mercy

308
00:16:09,120 --> 00:16:11,440
show

309
00:16:11,839 --> 00:16:15,920
for this now we need to

310
00:16:16,560 --> 00:16:18,639
we need to find it

311
00:16:18,639 --> 00:16:23,000
i sushi pop-pop return

312
00:16:38,880 --> 00:16:41,120
open the local c

313
00:16:41,120 --> 00:16:43,279
programs file

314
00:16:43,279 --> 00:16:46,560
immunity emulator debugger

315
00:16:46,560 --> 00:16:50,000
and then we have a log of the c80

316
00:16:50,000 --> 00:16:52,959
point text a c8 point text

317
00:16:52,959 --> 00:16:54,959
we need to find the instruction pop-up

318
00:16:54,959 --> 00:16:59,680
return without secure mechanisms

319
00:17:01,279 --> 00:17:05,760
without we need to find it

320
00:17:05,760 --> 00:17:07,760
a pop-up return without security

321
00:17:07,760 --> 00:17:09,199
mechanisms

322
00:17:09,199 --> 00:17:10,559
we use it

323
00:17:10,559 --> 00:17:14,679
either stem 0103 fe

324
00:17:14,679 --> 00:17:17,439
1003 fc

325
00:17:17,439 --> 00:17:19,520
and we have here

326
00:17:19,520 --> 00:17:22,880
pci popping the i return

327
00:17:22,880 --> 00:17:26,720
as we can see we you we will use to hear

328
00:17:26,720 --> 00:17:29,200
about pci pdi return

329
00:17:29,200 --> 00:17:32,640
with secure mechanisms asadi asdis files

330
00:17:32,640 --> 00:17:34,559
repair files

331
00:17:34,559 --> 00:17:38,880
save se8 as files as files we use this

332
00:17:38,880 --> 00:17:40,600
address

333
00:17:40,600 --> 00:17:44,160
1003 pci for pdi return

334
00:17:44,160 --> 00:17:47,840
without security mechanisms

335
00:17:55,760 --> 00:17:58,799
so we need to create the inaugural code

336
00:17:58,799 --> 00:18:01,120
available sc80 with

337
00:18:01,120 --> 00:18:04,240
address fe-03010

338
00:18:04,240 --> 00:18:08,559
is our address for pop-up return

339
00:18:10,200 --> 00:18:14,480
1003 fe we need to type and like

340
00:18:14,480 --> 00:18:17,679
view architecture 86

341
00:18:17,679 --> 00:18:20,480
you should you should we must type in

342
00:18:20,480 --> 00:18:21,440
like

343
00:18:21,440 --> 00:18:24,440
fv03010

344
00:18:26,240 --> 00:18:28,480
and now we need to

345
00:18:28,480 --> 00:18:30,480
find the x

346
00:18:30,480 --> 00:18:32,320
instruction

347
00:18:32,320 --> 00:18:35,280
jump shot

348
00:18:36,000 --> 00:18:38,480
i should instruction jump chart because

349
00:18:38,480 --> 00:18:40,720
we will

350
00:18:40,840 --> 00:18:44,480
make pop-up return and you use the

351
00:18:44,480 --> 00:18:47,600
return file jump shot in short jump you

352
00:18:47,600 --> 00:18:51,360
make a charge jump to our show code

353
00:18:51,360 --> 00:18:53,520
for before finding i'll be called to

354
00:18:53,520 --> 00:18:57,840
find short example users

355
00:18:58,480 --> 00:19:01,360
we need to create it

356
00:19:01,360 --> 00:19:03,520
we need to create

357
00:19:03,520 --> 00:19:06,240
available any se8

358
00:19:06,240 --> 00:19:06,960
with

359
00:19:06,960 --> 00:19:09,960
1999

360
00:19:10,160 --> 00:19:13,200
6 and b06

361
00:19:13,200 --> 00:19:16,240
is up code for short jump

362
00:19:16,240 --> 00:19:20,720
as we can see in as michelle

363
00:19:22,960 --> 00:19:26,320
you should type you must type jump

364
00:19:26,320 --> 00:19:28,160
short

365
00:19:28,160 --> 00:19:29,440
8

366
00:19:29,440 --> 00:19:32,720
and we have code in b06

367
00:19:32,720 --> 00:19:37,840
if b06 is our code if i jump short

368
00:19:37,840 --> 00:19:43,120
need to add the eb06 in our exploit code

369
00:19:43,120 --> 00:19:46,640
we have labeled nsc8 1990

370
00:19:46,640 --> 00:19:50,240
xeb x06

371
00:19:50,240 --> 00:19:52,320
variable sc8

372
00:19:52,320 --> 00:19:53,559
fe

373
00:19:53,559 --> 00:19:57,760
03010 pop up return

374
00:19:57,760 --> 00:20:00,960
and then now we have available crash one

375
00:20:00,960 --> 00:20:03,600
character aimed private by officiate

376
00:20:03,600 --> 00:20:08,720
plus nsc80 plus s8 plus 90. that's our

377
00:20:08,720 --> 00:20:11,720
noobs

378
00:20:26,720 --> 00:20:31,000
save the exploit code

379
00:20:38,400 --> 00:20:42,400
the restart the model debugger

380
00:20:42,880 --> 00:20:46,640
restart the moodle debugger

381
00:20:47,440 --> 00:20:50,640
click button run

382
00:20:50,640 --> 00:20:51,840
to start

383
00:20:51,840 --> 00:20:54,000
to run the vulnerable shaft immunity

384
00:20:54,000 --> 00:20:57,480
debugger again

385
00:21:03,280 --> 00:21:07,678
execute that sprite code

386
00:21:10,240 --> 00:21:13,120
we have act violation

387
00:21:13,120 --> 00:21:14,960
click menu view

388
00:21:14,960 --> 00:21:18,000
sc8 chain and then now we have the ic

389
00:21:18,000 --> 00:21:19,039
hundred

390
00:21:19,039 --> 00:21:21,200
the edits for pop-up returning shorty

391
00:21:21,200 --> 00:21:24,320
jump click button right bottom

392
00:21:24,320 --> 00:21:26,799
phone and using stacking and then we

393
00:21:26,799 --> 00:21:30,480
have here in s300 i i ended for a pop-up

394
00:21:30,480 --> 00:21:32,880
return he pointed to next i see he

395
00:21:32,880 --> 00:21:34,400
recorded

396
00:21:34,400 --> 00:21:37,520
ash 1990 looping

397
00:21:37,520 --> 00:21:41,760
eb 060 be our shortage jump

398
00:21:41,760 --> 00:21:43,840
we have here get the control of the c

399
00:21:43,840 --> 00:21:46,000
hundred and the variety of c hundreds

400
00:21:46,000 --> 00:21:48,400
pop-pop attorney the variety i see

401
00:21:48,400 --> 00:21:52,840
hundreds with you try to jump

402
00:22:00,240 --> 00:22:02,559
click

403
00:22:03,120 --> 00:22:06,960
if you write a button go to expression

404
00:22:06,960 --> 00:22:07,679
and

405
00:22:07,679 --> 00:22:12,159
type identify pop-up return 100

406
00:22:12,159 --> 00:22:13,720
and do we have a key

407
00:22:13,720 --> 00:22:17,200
10-0 i just have pop-pop return puppy

408
00:22:17,200 --> 00:22:19,760
see eye-popping the eye return

409
00:22:19,760 --> 00:22:22,480
pick your right bottom puppy ci bracket

410
00:22:22,480 --> 00:22:24,880
punch toggle to put the bracket pointed

411
00:22:24,880 --> 00:22:26,640
puppy

412
00:22:26,640 --> 00:22:29,440
breaking point is to stop the flow of

413
00:22:29,440 --> 00:22:32,080
execution this means that the flow of

414
00:22:32,080 --> 00:22:36,080
execution is stopping pci

415
00:22:38,240 --> 00:22:41,760
press 50 f7 to pass flop execution and

416
00:22:41,760 --> 00:22:43,600
the clicking button run

417
00:22:43,600 --> 00:22:46,000
and the flow of execution is stopped by

418
00:22:46,000 --> 00:22:48,159
pci

419
00:22:48,159 --> 00:22:50,480
pass the flow of execution

420
00:22:50,480 --> 00:22:53,600
f7 f7 f7

421
00:22:53,600 --> 00:22:55,440
and do we turn it

422
00:22:55,440 --> 00:22:57,840
through our loops

423
00:22:57,840 --> 00:23:00,240
we'll return

424
00:23:00,240 --> 00:23:03,679
so an open loop is any jump shot we have

425
00:23:03,679 --> 00:23:09,039
here a b06 the visual six hour

426
00:23:09,039 --> 00:23:10,559
jump shot

427
00:23:10,559 --> 00:23:12,400
pass nope nope

428
00:23:12,400 --> 00:23:14,559
f7 f7

429
00:23:14,559 --> 00:23:17,600
pass jump short for f7 and the follow

430
00:23:17,600 --> 00:23:19,440
out in loops

431
00:23:19,440 --> 00:23:23,039
we have here our loops in this place of

432
00:23:23,039 --> 00:23:24,480
these loops

433
00:23:24,480 --> 00:23:27,919
we will put our shell called together

434
00:23:27,919 --> 00:23:28,960
shell

435
00:23:28,960 --> 00:23:32,240
but i know that this is isn't enough

436
00:23:32,240 --> 00:23:33,760
space

437
00:23:33,760 --> 00:23:36,080
we don't have enough space to put our

438
00:23:36,080 --> 00:23:37,840
shell code here

439
00:23:37,840 --> 00:23:41,200
so again in this place of these loops we

440
00:23:41,200 --> 00:23:43,520
should put our

441
00:23:43,520 --> 00:23:46,080
shell code together shell

442
00:23:46,080 --> 00:23:49,200
but i know that is we don't have

443
00:23:49,200 --> 00:23:50,799
enough space

444
00:23:50,799 --> 00:23:52,320
to put

445
00:23:52,320 --> 00:23:54,159
our

446
00:23:54,159 --> 00:23:57,440
code here for this we use a technique

447
00:23:57,440 --> 00:24:01,039
called aggie hunter

448
00:24:02,000 --> 00:24:06,720
we use a technique called the egg hunter

449
00:24:08,880 --> 00:24:09,760
as

450
00:24:09,760 --> 00:24:12,559
we can see we have here our loops

451
00:24:12,559 --> 00:24:13,360
but

452
00:24:13,360 --> 00:24:14,240
even

453
00:24:14,240 --> 00:24:17,520
being a lot amount of space this isn't

454
00:24:17,520 --> 00:24:20,799
enough space for our show code

455
00:24:20,799 --> 00:24:22,799
we don't have enough space for our show

456
00:24:22,799 --> 00:24:25,279
code we need to use a technique called

457
00:24:25,279 --> 00:24:26,640
aggie hunter

458
00:24:26,640 --> 00:24:29,279
let's learn more about technique

459
00:24:29,279 --> 00:24:33,000
called ali hunter

460
00:24:44,880 --> 00:24:46,799
we know that we have a little space

461
00:24:46,799 --> 00:24:48,559
threshold code

462
00:24:48,559 --> 00:24:51,200
for this we will use a technique called

463
00:24:51,200 --> 00:24:52,559
any hunter

464
00:24:52,559 --> 00:24:55,120
aggie hunter is a small piece of scale

465
00:24:55,120 --> 00:24:56,080
code

466
00:24:56,080 --> 00:24:59,520
which search for a 12-bit space

467
00:24:59,520 --> 00:25:02,000
which the attacker was not able to

468
00:25:02,000 --> 00:25:04,640
feeding the available buffer space

469
00:25:04,640 --> 00:25:07,120
for this make use of this little space

470
00:25:07,120 --> 00:25:09,760
official called the aggie hunter to have

471
00:25:09,760 --> 00:25:11,919
direct execution of the flow

472
00:25:11,919 --> 00:25:15,679
to shall call the bigger so as we can

473
00:25:15,679 --> 00:25:18,480
understand here

474
00:25:18,480 --> 00:25:20,960
the ali hunter is a small piece of shell

475
00:25:20,960 --> 00:25:24,240
code as we can see image below

476
00:25:24,240 --> 00:25:27,200
small piece official code that will have

477
00:25:27,200 --> 00:25:29,600
directors for a bigger space

478
00:25:29,600 --> 00:25:32,159
where in this bigger space we can put

479
00:25:32,159 --> 00:25:36,919
our shell code into the diversity shell

480
00:25:47,520 --> 00:25:48,880
so

481
00:25:48,880 --> 00:25:51,440
we must type in command by exclamation

482
00:25:51,440 --> 00:25:53,840
mark

483
00:25:53,840 --> 00:25:54,840
help

484
00:25:54,840 --> 00:25:56,480
egg

485
00:25:56,480 --> 00:25:59,039
and here we can see this comedy very

486
00:25:59,039 --> 00:26:01,120
common the egg

487
00:26:01,120 --> 00:26:04,159
these options for the comedy egg we have

488
00:26:04,159 --> 00:26:06,960
the four value is root wood is a default

489
00:26:06,960 --> 00:26:10,640
label that will you use it after we use

490
00:26:10,640 --> 00:26:12,080
it later

491
00:26:12,080 --> 00:26:15,039
default label would

492
00:26:15,039 --> 00:26:19,679
and you should type extra mesh

493
00:26:19,760 --> 00:26:22,000
extra mesh

494
00:26:22,000 --> 00:26:25,679
to find the eddie hunter eddie hunter

495
00:26:25,679 --> 00:26:28,720
again a small piece of shell code as we

496
00:26:28,720 --> 00:26:30,480
can see here

497
00:26:30,480 --> 00:26:31,440
we

498
00:26:31,440 --> 00:26:33,840
must copy we write the bottom copy

499
00:26:33,840 --> 00:26:35,760
clippy board the whole i

500
00:26:35,760 --> 00:26:37,360
copied the small piece of the shell

501
00:26:37,360 --> 00:26:40,480
called the pcrx price code the small

502
00:26:40,480 --> 00:26:42,320
piece of the shell called called the

503
00:26:42,320 --> 00:26:44,799
incentive will hit the reactors for a

504
00:26:44,799 --> 00:26:47,360
bigger space where in this bigger space

505
00:26:47,360 --> 00:26:49,200
we can put our shell code together

506
00:26:49,200 --> 00:26:52,600
versus shell

507
00:26:58,320 --> 00:27:02,799
let's open our exploit code

508
00:27:04,400 --> 00:27:07,360
edit paste in our sprite code our id

509
00:27:07,360 --> 00:27:09,039
hunter

510
00:27:09,039 --> 00:27:13,200
write the bottom and paste selection

511
00:27:13,200 --> 00:27:15,840
now we have here

512
00:27:15,840 --> 00:27:17,520
our little

513
00:27:17,520 --> 00:27:21,039
piece of shell code called aggie hunter

514
00:27:21,039 --> 00:27:23,120
and we have variable crash world

515
00:27:23,120 --> 00:27:24,799
character aim to play the ball for

516
00:27:24,799 --> 00:27:27,799
searching

517
00:27:35,520 --> 00:27:38,399
character aimed about facility plus any

518
00:27:38,399 --> 00:27:42,960
sc 80 i tried to jump in plus sc8 i pop

519
00:27:42,960 --> 00:27:46,159
up with 30 plus 90

520
00:27:46,159 --> 00:27:50,080
plus eggy hunter plus 90 that is our

521
00:27:50,080 --> 00:27:52,480
noobs

522
00:27:58,080 --> 00:28:00,960
and we have here payload 2 equals bad

523
00:28:00,960 --> 00:28:03,440
shines

524
00:28:09,520 --> 00:28:11,520
we have a character in question

525
00:28:11,520 --> 00:28:14,840
character aimed by facility or

526
00:28:14,840 --> 00:28:18,240
variety se8 if you pop up return

527
00:28:18,240 --> 00:28:19,440
override

528
00:28:19,440 --> 00:28:22,320
nsca to visuality jumping

529
00:28:22,320 --> 00:28:28,320
plus 90 loops plus 800 plus 90 or loops

530
00:28:28,320 --> 00:28:30,720
and the payload true equals medical

531
00:28:30,720 --> 00:28:32,559
spanish highs

532
00:28:32,559 --> 00:28:34,080
we will send

533
00:28:34,080 --> 00:28:37,120
these characters since zero one zero two

534
00:28:37,120 --> 00:28:40,240
zero three and etcetera up f

535
00:28:40,240 --> 00:28:43,600
against the target for fine belly shy

536
00:28:43,600 --> 00:28:46,000
let's learn more about what is betty

537
00:28:46,000 --> 00:28:48,480
shares

538
00:28:51,120 --> 00:28:52,799
now we need to search for betty

539
00:28:52,799 --> 00:28:54,159
characters

540
00:28:54,159 --> 00:28:56,080
depending on the application type of

541
00:28:56,080 --> 00:28:58,880
vulnerability and the protocols use it

542
00:28:58,880 --> 00:29:00,799
may be certain characters which are

543
00:29:00,799 --> 00:29:02,480
considered bad

544
00:29:02,480 --> 00:29:03,760
and did not

545
00:29:03,760 --> 00:29:06,799
and should not be used in your buffer or

546
00:29:06,799 --> 00:29:08,159
shell code

547
00:29:08,159 --> 00:29:11,039
one example of many characters is a zero

548
00:29:11,039 --> 00:29:15,200
zero this character is considered badly

549
00:29:15,200 --> 00:29:16,320
because

550
00:29:16,320 --> 00:29:19,039
a new byte is also used to terminate the

551
00:29:19,039 --> 00:29:22,159
three cooperation it's used to get our

552
00:29:22,159 --> 00:29:24,320
buffer whenever which did no byte

553
00:29:24,320 --> 00:29:25,440
appeals

554
00:29:25,440 --> 00:29:26,960
so

555
00:29:26,960 --> 00:29:30,080
we'll send it

556
00:29:30,399 --> 00:29:33,120
you said against the type this all these

557
00:29:33,120 --> 00:29:36,559
characters since they know of fff

558
00:29:36,559 --> 00:29:39,200
with objective if it caused some

559
00:29:39,200 --> 00:29:42,559
you call some error in this software

560
00:29:42,559 --> 00:29:44,480
we

561
00:29:44,480 --> 00:29:47,440
want to change the zero zero because we

562
00:29:47,440 --> 00:29:49,520
already know that zero zero is so many

563
00:29:49,520 --> 00:29:50,799
characters

564
00:29:50,799 --> 00:29:53,200
again zero zeros are many characters but

565
00:29:53,200 --> 00:29:55,840
we need to know if

566
00:29:55,840 --> 00:29:58,480
there is always many characters

567
00:29:58,480 --> 00:30:00,720
for this we will say the player will say

568
00:30:00,720 --> 00:30:04,600
the audacity targeting this character

569
00:30:04,600 --> 00:30:09,279
010203 etc up f3 first if question

570
00:30:09,279 --> 00:30:11,760
errors

571
00:30:18,480 --> 00:30:22,799
try this put here payout 2 equals

572
00:30:22,799 --> 00:30:24,559
better shines

573
00:30:24,559 --> 00:30:28,799
you send this bad shots against the tag

574
00:30:28,799 --> 00:30:33,840
and we have here payload user agent

575
00:30:44,120 --> 00:30:47,209
[Music]

576
00:30:49,200 --> 00:30:51,600
but after we put in parallel to our

577
00:30:51,600 --> 00:30:55,678
shell code to get the mercy shell

578
00:30:56,320 --> 00:31:00,519
save the exploit code

579
00:31:10,799 --> 00:31:12,159
restart the

580
00:31:12,159 --> 00:31:15,159
debugger

581
00:31:24,000 --> 00:31:25,840
click the button run

582
00:31:25,840 --> 00:31:27,679
run the vulnerable software debugger

583
00:31:27,679 --> 00:31:30,000
again

584
00:31:30,720 --> 00:31:33,200
find the pop-up return address if you

585
00:31:33,200 --> 00:31:36,320
write a button go to expression

586
00:31:36,320 --> 00:31:40,000
find it pop ci

587
00:31:40,320 --> 00:31:43,039
put a bracket quality puppy psi right a

588
00:31:43,039 --> 00:31:45,440
button break punch toggle to stop flow

589
00:31:45,440 --> 00:31:50,039
of execution copy ci

590
00:32:03,440 --> 00:32:06,320
execute our trade code

591
00:32:06,320 --> 00:32:08,100
python exchange

592
00:32:08,100 --> 00:32:11,149
[Music]

593
00:32:11,600 --> 00:32:13,200
five

594
00:32:13,200 --> 00:32:15,840
send the payload

595
00:32:19,840 --> 00:32:21,760
pause the vlog of the question we have

596
00:32:21,760 --> 00:32:23,519
here actual violation

597
00:32:23,519 --> 00:32:26,559
press shift f7 to pass the acceleration

598
00:32:26,559 --> 00:32:27,360
pass

599
00:32:27,360 --> 00:32:30,640
f7 to pass accumulation

600
00:32:30,640 --> 00:32:33,440
after clicking

601
00:32:33,440 --> 00:32:38,600
press f9 or click button run

602
00:32:49,440 --> 00:32:52,799
four of the execution stops import pci

603
00:32:52,799 --> 00:32:56,799
best proposition f7 f7 f7 returning

604
00:32:56,799 --> 00:32:59,840
fellow auction loops f7

605
00:32:59,840 --> 00:33:04,640
jump charge f7 loops f7 and here we have

606
00:33:04,640 --> 00:33:08,480
our aggie hunter these this instructions

607
00:33:08,480 --> 00:33:12,320
is our aggie hunter

608
00:33:12,320 --> 00:33:15,840
it's our audi hunter

609
00:33:15,840 --> 00:33:18,240
let's put a breakpoint in scans right

610
00:33:18,240 --> 00:33:22,000
button scans breakpoints toggle to stop

611
00:33:22,000 --> 00:33:26,240
the flow of the execution is scanned

612
00:33:29,120 --> 00:33:32,518
clicking button

613
00:33:39,360 --> 00:33:40,150
whatever

614
00:33:40,150 --> 00:33:42,320
[Music]

615
00:33:42,320 --> 00:33:45,279
flow of execution stopped in scans

616
00:33:45,279 --> 00:33:47,279
let's see the value in scans right

617
00:33:47,279 --> 00:33:50,080
button in the x

618
00:33:50,080 --> 00:33:54,080
right button is history dx

619
00:33:54,720 --> 00:33:57,519
following dunk

620
00:33:58,399 --> 00:34:00,320
we have here

621
00:34:00,320 --> 00:34:01,919
who choose

622
00:34:01,919 --> 00:34:04,399
this the full labor of the country

623
00:34:04,399 --> 00:34:07,279
indicates after the solution will come

624
00:34:07,279 --> 00:34:10,480
in our shell code in this case our bench

625
00:34:10,480 --> 00:34:12,800
shines but it has to put our shell code

626
00:34:12,800 --> 00:34:16,239
together with shell pacific 7 jump to

627
00:34:16,239 --> 00:34:19,479
the ipf7

628
00:34:20,639 --> 00:34:22,320
and here we have

629
00:34:22,320 --> 00:34:26,359
our bench side z10203.505.60709

630
00:34:28,960 --> 00:34:32,480
0 a 0 b 0c and etc

631
00:34:32,480 --> 00:34:35,800
up ff

632
00:34:40,000 --> 00:34:42,719
we have all this bad size

633
00:34:42,719 --> 00:34:46,639
since 0 1 up f

634
00:34:46,639 --> 00:34:50,879
c 0 up ff

635
00:34:56,159 --> 00:34:58,320
we have the bad size

636
00:34:58,320 --> 00:35:01,920
c01 up ff as we can see we don't have a

637
00:35:01,920 --> 00:35:03,359
more air hole

638
00:35:03,359 --> 00:35:05,680
we don't have more air because we have

639
00:35:05,680 --> 00:35:10,160
here all these values into zero l up f

640
00:35:10,160 --> 00:35:12,800
this indicates that just zero zero is a

641
00:35:12,800 --> 00:35:14,320
better characteristic

642
00:35:14,320 --> 00:35:16,160
for our software

643
00:35:16,160 --> 00:35:18,240
for our software just

644
00:35:18,240 --> 00:35:20,320
zero zero is a better character and we

645
00:35:20,320 --> 00:35:23,119
don't have my others many characters

646
00:35:23,119 --> 00:35:25,359
beyond zero zero

647
00:35:25,359 --> 00:35:29,200
so now we can we will generate our shell

648
00:35:29,200 --> 00:35:31,760
code together with shell

649
00:35:31,760 --> 00:35:34,240
to generate our shall code it

650
00:35:34,240 --> 00:35:37,920
without zero zero just without zero zero

651
00:35:37,920 --> 00:35:42,119
so we started the monarch debugger

652
00:35:51,920 --> 00:35:55,720
the start of the movie

653
00:36:03,780 --> 00:36:06,720
[Music]

654
00:36:06,720 --> 00:36:10,560
go to express to find a pop-up return

655
00:36:10,560 --> 00:36:12,720
put the backing point poppy ci to write

656
00:36:12,720 --> 00:36:14,800
the button

657
00:36:14,800 --> 00:36:18,240
breakpoints toggle

658
00:36:18,560 --> 00:36:22,599
put a back point to pci

659
00:36:31,520 --> 00:36:34,480
open the exploit code

660
00:36:34,480 --> 00:36:39,359
and then we here we have a shell code

661
00:36:39,839 --> 00:36:42,320
erase this odd shell code to cope to

662
00:36:42,320 --> 00:36:44,480
base of neutral code

663
00:36:44,480 --> 00:36:47,040
first generator shall call do you use a

664
00:36:47,040 --> 00:36:52,200
tool called mscf we know

665
00:36:56,640 --> 00:37:00,320
we use a tool called msf window for

666
00:37:00,320 --> 00:37:01,839
generating

667
00:37:01,839 --> 00:37:02,960
our

668
00:37:02,960 --> 00:37:04,480
shell code

669
00:37:04,480 --> 00:37:09,560
you should type you must type msfvino

670
00:37:34,839 --> 00:37:39,040
python degenerate payload

671
00:37:39,040 --> 00:37:41,760
for file python

672
00:37:41,760 --> 00:37:44,640
and in this

673
00:37:47,839 --> 00:37:50,000
in this message we know we generate a

674
00:37:50,000 --> 00:37:54,160
shell cody avoiding a better characters

675
00:37:54,160 --> 00:37:56,879
zero zero

676
00:37:56,960 --> 00:37:58,720
generate our

677
00:37:58,720 --> 00:38:01,040
shall call divided by character zero

678
00:38:01,040 --> 00:38:02,240
zero

679
00:38:02,240 --> 00:38:05,359
let's erase this old shell cody

680
00:38:05,359 --> 00:38:09,720
to paste our initial code

681
00:38:42,000 --> 00:38:44,560
we have here we will crash one character

682
00:38:44,560 --> 00:38:48,960
empty plied by offsets plus nsc80 are

683
00:38:48,960 --> 00:38:53,280
short jump plus s8 our pop-pop return

684
00:38:53,280 --> 00:38:58,640
plus 90 multiplied by 5vr loops plus 800

685
00:38:58,640 --> 00:39:02,560
plus 90 our noobs and below payload 2

686
00:39:02,560 --> 00:39:06,799
equals birth buffy is our

687
00:39:06,880 --> 00:39:09,839
birth is our shell code and here we have

688
00:39:09,839 --> 00:39:11,040
payload

689
00:39:11,040 --> 00:39:14,480
equals other agency

690
00:39:21,599 --> 00:39:24,599
shell

691
00:39:49,920 --> 00:39:51,920
is our shell code

692
00:39:51,920 --> 00:39:54,640
so let's copy our shell code and paste

693
00:39:54,640 --> 00:39:57,839
in our exploit code

694
00:40:10,960 --> 00:40:14,400
copy i shall code

695
00:40:17,440 --> 00:40:20,240
edit paste

696
00:40:20,400 --> 00:40:24,520
in our exploit code

697
00:40:24,640 --> 00:40:27,599
this show code will generate biomass

698
00:40:27,599 --> 00:40:32,680
vino to get a reverse shell

699
00:40:38,240 --> 00:40:42,680
let's save the exploit code

700
00:41:02,240 --> 00:41:06,759
let's save our sprite code

701
00:41:13,119 --> 00:41:16,800
and let's execute msf

702
00:41:16,800 --> 00:41:19,760
metasploit at the equipment sprite with

703
00:41:19,760 --> 00:41:21,760
msf console

704
00:41:21,760 --> 00:41:23,920
the messy f console to the equity

705
00:41:23,920 --> 00:41:25,599
automatic sprite

706
00:41:25,599 --> 00:41:26,599
to

707
00:41:26,599 --> 00:41:31,640
lision.555 to get a connected back

708
00:41:52,319 --> 00:41:56,319
type use much handler

709
00:41:56,319 --> 00:41:58,880
search payload

710
00:41:58,880 --> 00:42:00,839
windows

711
00:42:00,839 --> 00:42:05,440
shell reverse tcp

712
00:42:08,319 --> 00:42:12,079
windows shell reverse tcp

713
00:42:13,280 --> 00:42:15,200
search

714
00:42:15,200 --> 00:42:18,000
ali host

715
00:42:20,960 --> 00:42:24,599
look how i be

716
00:42:36,160 --> 00:42:40,319
search any part to listen on part 4 4 4

717
00:42:40,319 --> 00:42:43,319
4.

718
00:42:44,960 --> 00:42:48,160
and then security

719
00:42:48,480 --> 00:42:49,680
execute

720
00:42:49,680 --> 00:42:53,520
meta sprite command x sprite

721
00:42:53,520 --> 00:42:57,720
to listen comedy sprite

722
00:42:58,160 --> 00:43:00,480
now let's execute

723
00:43:00,480 --> 00:43:05,240
our exploit code pythonxcollector6

724
00:43:11,599 --> 00:43:15,040
and we have absolution

725
00:43:15,040 --> 00:43:18,079
bypass acceleration if

726
00:43:18,079 --> 00:43:20,640
shifty f7

727
00:43:20,640 --> 00:43:25,560
shift f7 to pass ax violation

728
00:43:29,520 --> 00:43:31,040
and after

729
00:43:31,040 --> 00:43:33,040
press f9

730
00:43:33,040 --> 00:43:36,240
to go f9 click button run

731
00:43:36,240 --> 00:43:39,440
and stop the flow of execution pci

732
00:43:39,440 --> 00:43:43,839
passport ci puppy guy returning f777

733
00:43:43,839 --> 00:43:46,800
press loops if f7 pass jumper short with

734
00:43:46,800 --> 00:43:51,280
f7 and then we have the our aggie hunter

735
00:43:51,280 --> 00:43:53,680
we have our aggie hood put the part in

736
00:43:53,680 --> 00:43:55,119
scans

737
00:43:55,119 --> 00:43:57,839
right the button in scans bracket punch

738
00:43:57,839 --> 00:44:00,000
toggle

739
00:44:00,000 --> 00:44:03,599
put back parking scans

740
00:44:04,800 --> 00:44:07,440
click button run

741
00:44:07,440 --> 00:44:09,760
flow of the execution we stopped in

742
00:44:09,760 --> 00:44:12,240
scans

743
00:44:13,839 --> 00:44:16,079
let's see the content in scans right

744
00:44:16,079 --> 00:44:20,079
button in registering the x

745
00:44:20,079 --> 00:44:22,319
right button resisting the x following

746
00:44:22,319 --> 00:44:23,680
them

747
00:44:23,680 --> 00:44:27,680
and we have here a default label root

748
00:44:27,680 --> 00:44:30,400
the four label root this indicates that

749
00:44:30,400 --> 00:44:33,680
after root will come in our shell code

750
00:44:33,680 --> 00:44:37,359
after root will come our shell code

751
00:44:37,359 --> 00:44:40,160
write importantly the x following them

752
00:44:40,160 --> 00:44:44,240
and here we have here our root

753
00:44:48,800 --> 00:44:51,599
pass scans

754
00:44:51,599 --> 00:44:55,119
which with f7

755
00:44:59,040 --> 00:45:01,040
f7

756
00:45:01,040 --> 00:45:05,520
f7 pass jump pdi with f7

757
00:45:05,520 --> 00:45:09,440
pass the mpdi with f7

758
00:45:09,599 --> 00:45:14,079
and we have here our show code the adc

759
00:45:14,079 --> 00:45:17,079
d974

760
00:45:21,760 --> 00:45:23,440
this is a

761
00:45:23,440 --> 00:45:25,119
the same value

762
00:45:25,119 --> 00:45:29,760
of our shall cody in our exploit code

763
00:45:29,760 --> 00:45:32,720
we have in our expert code in our shell

764
00:45:32,720 --> 00:45:37,319
called dna dc d974

765
00:45:39,280 --> 00:45:43,119
this is our shell code you know

766
00:45:43,119 --> 00:45:46,240
is executing in our vulnerable soft

767
00:45:46,240 --> 00:45:49,200
social code executing of enable software

768
00:45:49,200 --> 00:45:50,960
click button run

769
00:45:50,960 --> 00:45:52,400
button run to

770
00:45:52,400 --> 00:45:55,920
to pass the executive flow of execution

771
00:45:55,920 --> 00:45:59,319
button run

772
00:46:04,800 --> 00:46:07,119
and we have him at the sprite we got a

773
00:46:07,119 --> 00:46:08,319
shell

774
00:46:08,319 --> 00:46:12,160
we got a shell metasploit

775
00:46:12,720 --> 00:46:16,400
you can type net user to cd users using

776
00:46:16,400 --> 00:46:20,000
hotdogs and administrator

777
00:46:20,000 --> 00:46:21,920
you can type it to

778
00:46:21,920 --> 00:46:23,680
ipconfig

779
00:46:23,680 --> 00:46:27,520
tv to see the ip of victim

780
00:46:27,520 --> 00:46:30,480
we have here ip of victim

781
00:46:30,480 --> 00:46:32,880
this is everyone this is

782
00:46:32,880 --> 00:46:35,599
a video part of how you can write on

783
00:46:35,599 --> 00:46:40,400
exploit code using a technique

784
00:46:40,640 --> 00:46:43,920
se8 variety with egg hunter

785
00:46:43,920 --> 00:46:47,440
in this slides we have here step by step

786
00:46:47,440 --> 00:46:49,760
of how you can write your express calls

787
00:46:49,760 --> 00:46:51,920
using a technique

788
00:46:51,920 --> 00:46:55,200
se8 a variety of any hunter

789
00:46:55,200 --> 00:46:57,599
for who want to see again

790
00:46:57,599 --> 00:46:58,560
i'll

791
00:46:58,560 --> 00:47:02,400
became available my linkedin profile

792
00:47:02,400 --> 00:47:06,079
the link for these slides

793
00:47:06,079 --> 00:47:08,560
i'll make available managers and provide

794
00:47:08,560 --> 00:47:10,720
link for this inside

795
00:47:10,720 --> 00:47:13,680
receipt everyone

796
00:47:13,680 --> 00:47:16,160
now i open for the questions thank you

797
00:47:16,160 --> 00:47:19,480
very much

798
00:47:26,880 --> 00:47:28,960
you

