1
00:00:07,839 --> 00:00:10,639
okay cool hi everyone i'm jeff mcdonald

2
00:00:10,639 --> 00:00:11,759
today i'm going to be talking to you

3
00:00:11,759 --> 00:00:13,519
about large generative language machine

4
00:00:13,519 --> 00:00:15,040
learning models and their upcoming

5
00:00:15,040 --> 00:00:17,520
impact on cyber security

6
00:00:17,520 --> 00:00:19,680
i'm jeff i manage

7
00:00:19,680 --> 00:00:22,720
i manage a team of data science data

8
00:00:22,720 --> 00:00:24,800
scientist teams who work on microsoft

9
00:00:24,800 --> 00:00:27,119
defender for endpoint we work on both

10
00:00:27,119 --> 00:00:29,439
the antivirus product as well as the edr

11
00:00:29,439 --> 00:00:32,159
product and network protection product

12
00:00:32,159 --> 00:00:35,040
i'm personally based in vancouver canada

13
00:00:35,040 --> 00:00:36,880
a lot of our data science teams are

14
00:00:36,880 --> 00:00:38,000
based in

15
00:00:38,000 --> 00:00:40,640
based in redmond and across the u.s

16
00:00:40,640 --> 00:00:42,239
although we do have some data scientists

17
00:00:42,239 --> 00:00:43,920
researchers research teams here in

18
00:00:43,920 --> 00:00:46,000
vancouver as well and we do have a lot

19
00:00:46,000 --> 00:00:47,920
of uh security and reverse engineering

20
00:00:47,920 --> 00:00:49,520
teams actually based here in vancouver

21
00:00:49,520 --> 00:00:51,280
as well

22
00:00:51,280 --> 00:00:53,199
cool uh yeah so

23
00:00:53,199 --> 00:00:55,280
um i guess about me personally i have a

24
00:00:55,280 --> 00:00:57,280
background in cyber security i've done

25
00:00:57,280 --> 00:01:00,160
like reverse engineering uh particularly

26
00:01:00,160 --> 00:01:03,199
on the antivirus product and i've done

27
00:01:03,199 --> 00:01:04,640
like i've done a bunch of deep security

28
00:01:04,640 --> 00:01:06,560
research for probably about maybe five

29
00:01:06,560 --> 00:01:08,640
years before transitioning to data

30
00:01:08,640 --> 00:01:10,880
scientists data science data science

31
00:01:10,880 --> 00:01:11,920
which i've been working at for

32
00:01:11,920 --> 00:01:13,600
approximately the past

33
00:01:13,600 --> 00:01:16,720
about five or six years now

34
00:01:16,720 --> 00:01:18,960
cool uh so my talk today is going to be

35
00:01:18,960 --> 00:01:20,560
uh introducing you to some of the large

36
00:01:20,560 --> 00:01:22,479
scale network

37
00:01:22,479 --> 00:01:24,880
the large generative language models uh

38
00:01:24,880 --> 00:01:26,240
so i'm specifically going to be talking

39
00:01:26,240 --> 00:01:28,320
about the generation task large language

40
00:01:28,320 --> 00:01:29,600
models today

41
00:01:29,600 --> 00:01:31,680
so i'm just going to enable my laser

42
00:01:31,680 --> 00:01:34,000
pointer here

43
00:01:34,000 --> 00:01:36,640
so generally generally these are these

44
00:01:36,640 --> 00:01:38,240
these are i'm talking the generative

45
00:01:38,240 --> 00:01:39,759
language models which generally read

46
00:01:39,759 --> 00:01:41,920
text from left to right so like the

47
00:01:41,920 --> 00:01:44,079
malicious document is and then they sort

48
00:01:44,079 --> 00:01:46,479
of predict the next token that follows a

49
00:01:46,479 --> 00:01:48,479
token is sort of like a word

50
00:01:48,479 --> 00:01:50,479
however less common words will be broken

51
00:01:50,479 --> 00:01:52,560
up into multiple tokens so a token can

52
00:01:52,560 --> 00:01:54,560
represent a whole word it can represent

53
00:01:54,560 --> 00:01:56,719
a set of characters or like a single

54
00:01:56,719 --> 00:01:59,119
character even as well

55
00:01:59,119 --> 00:02:00,560
so for example it might predict the next

56
00:02:00,560 --> 00:02:02,159
token in this is any one of the

57
00:02:02,159 --> 00:02:03,439
following words and then it's going to

58
00:02:03,439 --> 00:02:05,200
randomly sample one of those words in

59
00:02:05,200 --> 00:02:06,399
this case it's going to say that the

60
00:02:06,399 --> 00:02:08,399
next word is bread

61
00:02:08,399 --> 00:02:10,479
so this can be repeated this can be

62
00:02:10,479 --> 00:02:12,239
repeated multiple times to auto complete

63
00:02:12,239 --> 00:02:14,319
whole sentences or whole paragraphs or

64
00:02:14,319 --> 00:02:15,920
you can get to generate whole stories

65
00:02:15,920 --> 00:02:18,319
all by itself for example so if we were

66
00:02:18,319 --> 00:02:20,239
to predict the full sentence here we can

67
00:02:20,239 --> 00:02:23,040
say this document is read via

68
00:02:23,040 --> 00:02:24,080
fifth

69
00:02:24,080 --> 00:02:25,360
phishing

70
00:02:25,360 --> 00:02:27,840
emails period so you can see for example

71
00:02:27,840 --> 00:02:30,560
phishing was not as popular war of a

72
00:02:30,560 --> 00:02:32,400
word in the vocabulary that the model is

73
00:02:32,400 --> 00:02:34,080
trained on so it actually split into two

74
00:02:34,080 --> 00:02:36,480
words for example

75
00:02:36,480 --> 00:02:39,200
so these large generative generative

76
00:02:39,200 --> 00:02:41,440
task language models are trained to

77
00:02:41,440 --> 00:02:43,599
predict the next token from a very large

78
00:02:43,599 --> 00:02:45,440
collection of text

79
00:02:45,440 --> 00:02:46,959
and then they read the text from left to

80
00:02:46,959 --> 00:02:48,800
right and then they predict the next

81
00:02:48,800 --> 00:02:50,400
token that follows and they can be used

82
00:02:50,400 --> 00:02:52,239
for many different sort of tasks that

83
00:02:52,239 --> 00:02:55,040
we're going to see here today

84
00:02:55,040 --> 00:02:56,640
so these models are generally trained

85
00:02:56,640 --> 00:02:58,720
these large these large language models

86
00:02:58,720 --> 00:03:00,560
are trained from very large corpuses of

87
00:03:00,560 --> 00:03:02,239
text data

88
00:03:02,239 --> 00:03:04,080
one of the most common training sets is

89
00:03:04,080 --> 00:03:05,840
called the pile which is almost a

90
00:03:05,840 --> 00:03:08,879
terabyte of text data the training data

91
00:03:08,879 --> 00:03:10,720
comes from many different sources like

92
00:03:10,720 --> 00:03:12,879
the the largest one is common crawl

93
00:03:12,879 --> 00:03:15,200
which is like for crawling of websites

94
00:03:15,200 --> 00:03:17,120
but it trains on the contents of books

95
00:03:17,120 --> 00:03:19,599
github research papers you'll see like

96
00:03:19,599 --> 00:03:21,599
wikipedia is included here so it

97
00:03:21,599 --> 00:03:23,599
actually trains on a mix of both text as

98
00:03:23,599 --> 00:03:25,920
well as code content and actually

99
00:03:25,920 --> 00:03:27,360
through this training process gets a

100
00:03:27,360 --> 00:03:28,720
good amount of understanding about a

101
00:03:28,720 --> 00:03:30,959
broad variety of fields including cyber

102
00:03:30,959 --> 00:03:33,440
security so this can be used in like you

103
00:03:33,440 --> 00:03:35,360
can do question answering on cyber

104
00:03:35,360 --> 00:03:37,120
security documents like what is a supply

105
00:03:37,120 --> 00:03:39,200
chain attack and it will auto complete a

106
00:03:39,200 --> 00:03:41,120
paragraph describing what a supply chain

107
00:03:41,120 --> 00:03:43,920
attack is for example

108
00:03:43,920 --> 00:03:45,200
cool now

109
00:03:45,200 --> 00:03:47,120
i'm going to quickly cover what zero

110
00:03:47,120 --> 00:03:50,480
shot one shot and fu shot learning is

111
00:03:50,480 --> 00:03:52,319
so with these large generative models

112
00:03:52,319 --> 00:03:53,840
you don't actually need to train the

113
00:03:53,840 --> 00:03:55,519
model to your task you can actually just

114
00:03:55,519 --> 00:03:57,920
use these really large generative models

115
00:03:57,920 --> 00:03:59,040
to

116
00:03:59,040 --> 00:04:00,799
to apply to your task without any

117
00:04:00,799 --> 00:04:02,560
training without any label data or

118
00:04:02,560 --> 00:04:03,680
anything

119
00:04:03,680 --> 00:04:05,599
so the first example is like imagine you

120
00:04:05,599 --> 00:04:08,159
want to translate english to french so

121
00:04:08,159 --> 00:04:09,760
you might use a template where the text

122
00:04:09,760 --> 00:04:12,080
is english colon and then you'll specify

123
00:04:12,080 --> 00:04:13,680
you'll write in text the english

124
00:04:13,680 --> 00:04:15,040
sentence that you that you want to

125
00:04:15,040 --> 00:04:17,440
translate and then you type french colon

126
00:04:17,440 --> 00:04:18,880
and then get it to predict the next

127
00:04:18,880 --> 00:04:20,959
characters of the output the next tokens

128
00:04:20,959 --> 00:04:22,400
that are output and you hope that it

129
00:04:22,400 --> 00:04:24,320
understands that you're trying to

130
00:04:24,320 --> 00:04:26,400
translate that the french colon is sort

131
00:04:26,400 --> 00:04:28,400
of going to be the friends translation

132
00:04:28,400 --> 00:04:30,240
of the same sentence

133
00:04:30,240 --> 00:04:32,000
so using this you might say english our

134
00:04:32,000 --> 00:04:34,240
cloud service will host 10 nodes french

135
00:04:34,240 --> 00:04:35,919
colon and you predict the next

136
00:04:35,919 --> 00:04:38,000
characters which is the output and you

137
00:04:38,000 --> 00:04:39,759
hope that this is the proper french

138
00:04:39,759 --> 00:04:42,000
translation

139
00:04:42,000 --> 00:04:43,360
you actually didn't train the model to

140
00:04:43,360 --> 00:04:44,880
do english french translation you're

141
00:04:44,880 --> 00:04:46,560
just using the

142
00:04:46,560 --> 00:04:48,320
the next token prediction in order to

143
00:04:48,320 --> 00:04:50,080
get it to do the translation text and

144
00:04:50,080 --> 00:04:53,040
more like generalized intelligence

145
00:04:53,040 --> 00:04:54,880
so few shot learning is where you give

146
00:04:54,880 --> 00:04:57,280
it uh a couple examples of the task that

147
00:04:57,280 --> 00:04:58,880
you're performing so in this case you

148
00:04:58,880 --> 00:05:01,440
give it a couple uh you let it read a

149
00:05:01,440 --> 00:05:03,360
couple translations first so english

150
00:05:03,360 --> 00:05:05,840
french english french english french and

151
00:05:05,840 --> 00:05:08,400
now you apply your translation task so

152
00:05:08,400 --> 00:05:10,000
here it has a bit of an understanding of

153
00:05:10,000 --> 00:05:11,520
the format of the output that you're

154
00:05:11,520 --> 00:05:13,680
expecting and you'll get a much better

155
00:05:13,680 --> 00:05:15,600
result usually so now you apply the

156
00:05:15,600 --> 00:05:17,280
translation task with what you actually

157
00:05:17,280 --> 00:05:19,440
want to translate so again you haven't

158
00:05:19,440 --> 00:05:21,199
trained the model you haven't provided

159
00:05:21,199 --> 00:05:23,039
really any label data you've just sort

160
00:05:23,039 --> 00:05:24,720
of provide a template with a few shot

161
00:05:24,720 --> 00:05:27,280
examples

162
00:05:27,280 --> 00:05:28,720
so here's a quick plot of like you know

163
00:05:28,720 --> 00:05:30,560
how much that impacts the quality of the

164
00:05:30,560 --> 00:05:31,600
models

165
00:05:31,600 --> 00:05:33,840
if you do zero shot you can see the

166
00:05:33,840 --> 00:05:35,680
quality of the models perform

167
00:05:35,680 --> 00:05:37,919
not very good according to the accuracy

168
00:05:37,919 --> 00:05:40,080
in some of the tasks however even if you

169
00:05:40,080 --> 00:05:42,160
give one a single example of the format

170
00:05:42,160 --> 00:05:44,560
you expect it gets way better results

171
00:05:44,560 --> 00:05:47,120
and it gets quite a bit results up to 10

172
00:05:47,120 --> 00:05:49,840
10 shot examples and and beyond that it

173
00:05:49,840 --> 00:05:52,080
gets even more improvements so again

174
00:05:52,080 --> 00:05:53,440
you're not training the model you're

175
00:05:53,440 --> 00:05:55,440
just providing a template with a few

176
00:05:55,440 --> 00:05:57,600
shot examples

177
00:05:57,600 --> 00:06:00,000
now you can actually train the model to

178
00:06:00,000 --> 00:06:01,759
fine-tune the models as well to your

179
00:06:01,759 --> 00:06:05,120
task to your task as well so imagine you

180
00:06:05,120 --> 00:06:07,120
might have maybe

181
00:06:07,120 --> 00:06:08,479
a hundred

182
00:06:08,479 --> 00:06:10,880
english to french translations already

183
00:06:10,880 --> 00:06:12,639
that maybe even used a few shot or zero

184
00:06:12,639 --> 00:06:14,160
shot learning to help you create because

185
00:06:14,160 --> 00:06:16,000
maybe you don't know french at all but

186
00:06:16,000 --> 00:06:17,680
once you get like a few hundred examples

187
00:06:17,680 --> 00:06:19,520
you can maybe do a few trainee epochs of

188
00:06:19,520 --> 00:06:21,360
these large model on the data so you're

189
00:06:21,360 --> 00:06:23,759
just slightly adjusting the really large

190
00:06:23,759 --> 00:06:27,280
model to learn from your specific task

191
00:06:27,280 --> 00:06:28,960
and then you might use it in jira start

192
00:06:28,960 --> 00:06:30,639
learning which makes it a bit cheaper to

193
00:06:30,639 --> 00:06:33,039
inference the model

194
00:06:33,039 --> 00:06:34,160
okay now i'm going to give a couple

195
00:06:34,160 --> 00:06:35,680
examples of what these types of machine

196
00:06:35,680 --> 00:06:38,160
learning models are used for uh

197
00:06:38,160 --> 00:06:40,160
one one that you probably see the most

198
00:06:40,160 --> 00:06:42,400
is probably auto complete so for example

199
00:06:42,400 --> 00:06:44,319
if you're auto completing emails maybe

200
00:06:44,319 --> 00:06:46,400
automatic suggestion for what you should

201
00:06:46,400 --> 00:06:48,479
reply in a text message a lot of these

202
00:06:48,479 --> 00:06:50,080
would be using these type of really

203
00:06:50,080 --> 00:06:51,840
large machine learning models and here's

204
00:06:51,840 --> 00:06:53,680
an example of some security problem on

205
00:06:53,680 --> 00:06:54,960
them if you're training obviously with

206
00:06:54,960 --> 00:06:57,759
customer data it could reveal some

207
00:06:57,759 --> 00:06:59,520
some information if you've seen this

208
00:06:59,520 --> 00:07:03,599
xkcd comment it's pretty good

209
00:07:03,599 --> 00:07:05,280
it's also used a lot in it's also

210
00:07:05,280 --> 00:07:07,680
starting to be used in code writing so i

211
00:07:07,680 --> 00:07:09,520
highly recommend checking out github

212
00:07:09,520 --> 00:07:12,720
copilot this is uh this is more in code

213
00:07:12,720 --> 00:07:14,240
generation

214
00:07:14,240 --> 00:07:16,720
and i've given it a try i've used it in

215
00:07:16,720 --> 00:07:18,560
some of my personal hobby coping and

216
00:07:18,560 --> 00:07:20,400
it's been it's been amazing it's been

217
00:07:20,400 --> 00:07:22,400
blowing my mind with the proposed

218
00:07:22,400 --> 00:07:24,479
solutions that it goes goes that it

219
00:07:24,479 --> 00:07:26,720
proposes and it's an extremely useful

220
00:07:26,720 --> 00:07:28,960
asset already in coding so basically you

221
00:07:28,960 --> 00:07:30,400
can write the definition of the function

222
00:07:30,400 --> 00:07:31,840
maybe a comment of what it does then

223
00:07:31,840 --> 00:07:33,199
it's going to write the whole function

224
00:07:33,199 --> 00:07:35,039
for you or it's going to propose many

225
00:07:35,039 --> 00:07:36,560
different solutions the same function

226
00:07:36,560 --> 00:07:39,280
for you you can also use it to i often

227
00:07:39,280 --> 00:07:40,880
would use it more to

228
00:07:40,880 --> 00:07:42,319
write code filling just part of the

229
00:07:42,319 --> 00:07:43,680
routine like you might write a comment

230
00:07:43,680 --> 00:07:45,360
this part i'm going to take the data

231
00:07:45,360 --> 00:07:46,960
frame and i don't know featurize it in a

232
00:07:46,960 --> 00:07:48,720
certain way then it will suggest the

233
00:07:48,720 --> 00:07:50,400
code to autocomplete that for you and

234
00:07:50,400 --> 00:07:52,160
it's been kind of a really amazing

235
00:07:52,160 --> 00:07:54,000
experience i highly recommend signing up

236
00:07:54,000 --> 00:07:55,599
for the beta and trying it out with vs

237
00:07:55,599 --> 00:07:57,599
code

238
00:07:57,599 --> 00:08:00,000
it's also used for example in uh games

239
00:08:00,000 --> 00:08:01,759
uh starting to be used in more games

240
00:08:01,759 --> 00:08:04,319
there are some text writing uh text

241
00:08:04,319 --> 00:08:06,720
writing games where you can basically uh

242
00:08:06,720 --> 00:08:08,720
interact with a more like a choose your

243
00:08:08,720 --> 00:08:10,560
own adventure game where you can write

244
00:08:10,560 --> 00:08:12,240
whatever you do in the world and then it

245
00:08:12,240 --> 00:08:13,840
will generate what happens in the world

246
00:08:13,840 --> 00:08:15,680
in response to what you said

247
00:08:15,680 --> 00:08:18,400
so it's a completely open-ended choose

248
00:08:18,400 --> 00:08:20,240
your own adventure text generation games

249
00:08:20,240 --> 00:08:22,240
and i highly recommend trying them out

250
00:08:22,240 --> 00:08:24,720
it's quite

251
00:08:24,840 --> 00:08:27,120
entertaining uh so in terms of these

252
00:08:27,120 --> 00:08:29,520
these models that do the natural that do

253
00:08:29,520 --> 00:08:31,120
the generation task of the large

254
00:08:31,120 --> 00:08:33,599
language models are extremely big most

255
00:08:33,599 --> 00:08:35,120
of these models can't be run on your

256
00:08:35,120 --> 00:08:36,799
local device even like with a really

257
00:08:36,799 --> 00:08:39,120
large gpu they generally have to be you

258
00:08:39,120 --> 00:08:40,799
can't load the whole models onto a

259
00:08:40,799 --> 00:08:43,200
single gpu you have to run multiple gpus

260
00:08:43,200 --> 00:08:46,720
in order to even inference them

261
00:08:48,560 --> 00:08:50,320
one thing to note here is probably most

262
00:08:50,320 --> 00:08:52,160
of the largest models are closed source

263
00:08:52,160 --> 00:08:54,240
they're not open source the largest open

264
00:08:54,240 --> 00:08:55,519
source one that i'm aware of was

265
00:08:55,519 --> 00:08:57,200
released a couple months ago the gpt

266
00:08:57,200 --> 00:09:00,560
neox 20 billion is a is the largest open

267
00:09:00,560 --> 00:09:03,120
source model now pretty much anything 12

268
00:09:03,120 --> 00:09:05,440
billion above is applicable for most of

269
00:09:05,440 --> 00:09:07,200
the cyber security attacks that i'm

270
00:09:07,200 --> 00:09:09,680
about to demonstrate especially when

271
00:09:09,680 --> 00:09:12,000
fine-tuned to the application now what

272
00:09:12,000 --> 00:09:13,279
i'm going to be demoing today is the

273
00:09:13,279 --> 00:09:15,920
openai gbt3 davinci which i'm going to

274
00:09:15,920 --> 00:09:17,760
be demoing for for all the attacks here

275
00:09:17,760 --> 00:09:20,080
today

276
00:09:21,279 --> 00:09:22,640
cool so now i'm going to start with all

277
00:09:22,640 --> 00:09:23,920
the fun stuff i'm going to show about

278
00:09:23,920 --> 00:09:25,760
how all the cyber security risks these

279
00:09:25,760 --> 00:09:27,519
text generation models have at least

280
00:09:27,519 --> 00:09:29,200
some of the ideas from my own

281
00:09:29,200 --> 00:09:31,440
experimentations that i see is the risks

282
00:09:31,440 --> 00:09:33,600
coming risk to cyber security and i'm

283
00:09:33,600 --> 00:09:35,200
going to demo each of these attacks as

284
00:09:35,200 --> 00:09:36,399
well

285
00:09:36,399 --> 00:09:38,800
so the first one is

286
00:09:38,800 --> 00:09:42,000
i can't move my mouse anymore

287
00:09:42,000 --> 00:09:43,600
okay cool

288
00:09:43,600 --> 00:09:45,279
i think i froze i hope everyone can

289
00:09:45,279 --> 00:09:46,880
still see me perfect good

290
00:09:46,880 --> 00:09:47,760
okay

291
00:09:47,760 --> 00:09:50,760
so

292
00:09:50,880 --> 00:09:51,839
so the first one i'm going to

293
00:09:51,839 --> 00:09:54,399
demonstrate is e is

294
00:09:54,399 --> 00:09:56,000
phishing targeted phishing emails at

295
00:09:56,000 --> 00:09:58,399
scale so this is the the opening at

296
00:09:58,399 --> 00:09:59,600
playground that i'm going to demo with

297
00:09:59,600 --> 00:10:02,600
here

298
00:10:05,120 --> 00:10:08,240
perfect so so what this what this is is

299
00:10:08,240 --> 00:10:10,399
we're doing a few shot learning so i

300
00:10:10,399 --> 00:10:13,120
give a couple examples of of targeted

301
00:10:13,120 --> 00:10:15,279
phishing emails you specify the target

302
00:10:15,279 --> 00:10:16,800
like the company the company of the

303
00:10:16,800 --> 00:10:18,640
target for the target phishing email

304
00:10:18,640 --> 00:10:20,640
attack you target the person you're

305
00:10:20,640 --> 00:10:22,399
targeting within the company you talk

306
00:10:22,399 --> 00:10:23,920
about the role within the company and

307
00:10:23,920 --> 00:10:25,600
then you provide the payloads url that

308
00:10:25,600 --> 00:10:28,320
you want them to click on for example

309
00:10:28,320 --> 00:10:30,399
so in this case i give a total of one

310
00:10:30,399 --> 00:10:31,360
two

311
00:10:31,360 --> 00:10:33,839
three i give three examples and then i

312
00:10:33,839 --> 00:10:35,680
then i carry out a generation task where

313
00:10:35,680 --> 00:10:37,440
my target is gonna be from walmart i'm

314
00:10:37,440 --> 00:10:39,600
gonna be talking targeting james scott

315
00:10:39,600 --> 00:10:41,200
who works in public relations and this

316
00:10:41,200 --> 00:10:42,959
is the link i'd like to use

317
00:10:42,959 --> 00:10:44,880
and now you can sort of generate uh you

318
00:10:44,880 --> 00:10:47,200
can generate these

319
00:10:47,200 --> 00:10:49,200
phishing emails and each time you

320
00:10:49,200 --> 00:10:51,360
generate it it will generate a different

321
00:10:51,360 --> 00:10:54,000
phishing email

322
00:10:55,600 --> 00:10:58,720
i'm just going to let it finish here

323
00:10:58,720 --> 00:11:00,959
i think it's still generating

324
00:11:00,959 --> 00:11:02,800
perfect there we go so now here's an

325
00:11:02,800 --> 00:11:04,240
example of the target efficient email

326
00:11:04,240 --> 00:11:05,519
i'm going to try regenerating a few

327
00:11:05,519 --> 00:11:08,399
times to see if i can get a more

328
00:11:08,399 --> 00:11:11,839
pr focused one often we'll get some

329
00:11:11,839 --> 00:11:15,640
better examples here

330
00:11:19,040 --> 00:11:20,399
perfect so here's another target

331
00:11:20,399 --> 00:11:22,320
phishing email i'm going to cross my

332
00:11:22,320 --> 00:11:24,399
fingers i want to get a good one

333
00:11:24,399 --> 00:11:27,040
targeting pr perfect

334
00:11:27,040 --> 00:11:28,800
okay yeah this looks like a pretty good

335
00:11:28,800 --> 00:11:31,600
one okay so it says i'm gonna wait for

336
00:11:31,600 --> 00:11:34,640
this to finish generating

337
00:11:35,040 --> 00:11:37,040
perfect so i hope this email finds you

338
00:11:37,040 --> 00:11:38,240
well i'm a journalist with the wall

339
00:11:38,240 --> 00:11:39,440
street journal and i'm writing an

340
00:11:39,440 --> 00:11:41,600
article about walmart's public relations

341
00:11:41,600 --> 00:11:43,360
strategy i'd love to speak about this

342
00:11:43,360 --> 00:11:45,600
topic and your insights you can find

343
00:11:45,600 --> 00:11:46,959
more information about my article my

344
00:11:46,959 --> 00:11:48,720
website here i look forward to hearing

345
00:11:48,720 --> 00:11:50,240
from you and you can really write

346
00:11:50,240 --> 00:11:52,079
whatever name you want and it's gonna

347
00:11:52,079 --> 00:11:54,560
it's gonna generate a target email to

348
00:11:54,560 --> 00:11:57,200
the specific target

349
00:11:57,200 --> 00:12:00,399
okay cool um

350
00:12:01,360 --> 00:12:04,560
yes back to presentation

351
00:12:04,560 --> 00:12:06,800
i'm sorry it looks like my powerpoint

352
00:12:06,800 --> 00:12:10,199
actually crashed

353
00:12:10,720 --> 00:12:14,519
so just give me a minute

354
00:12:50,720 --> 00:12:53,360
okay cool um so i'd say like the

355
00:12:53,360 --> 00:12:55,200
targeted phishing emails at scale i

356
00:12:55,200 --> 00:12:56,880
think it's an immediate high risk

357
00:12:56,880 --> 00:12:59,680
problem uh if you combine it with with

358
00:12:59,680 --> 00:13:02,240
for example uh scraping of linkedin

359
00:13:02,240 --> 00:13:04,720
profiles uh or for example business

360
00:13:04,720 --> 00:13:06,480
listings you can create

361
00:13:06,480 --> 00:13:08,720
targeted emails at scale specific to the

362
00:13:08,720 --> 00:13:10,800
person's role specific to the person and

363
00:13:10,800 --> 00:13:12,880
the company and i think it's going to be

364
00:13:12,880 --> 00:13:14,399
starting to change some of the fishing

365
00:13:14,399 --> 00:13:16,079
techniques that we see

366
00:13:16,079 --> 00:13:18,320
the defensive technologies that rely on

367
00:13:18,320 --> 00:13:20,959
the same large natural language models i

368
00:13:20,959 --> 00:13:23,200
don't think get as good of a benefit as

369
00:13:23,200 --> 00:13:24,800
as the attackers unfortunately in this

370
00:13:24,800 --> 00:13:26,399
case because the

371
00:13:26,399 --> 00:13:27,920
emails that are generated with this are

372
00:13:27,920 --> 00:13:30,480
generated to more closely look like a

373
00:13:30,480 --> 00:13:33,440
real human that's writing the content

374
00:13:33,440 --> 00:13:34,880
i think a lot of the defenses in this

375
00:13:34,880 --> 00:13:36,399
case are going to continue to be based

376
00:13:36,399 --> 00:13:38,320
on like sender and url reputation in

377
00:13:38,320 --> 00:13:39,360
order to

378
00:13:39,360 --> 00:13:41,519
detect and protect prevent again protect

379
00:13:41,519 --> 00:13:44,399
against these attacks

380
00:13:44,480 --> 00:13:46,320
cool so now i'm going to apply it to the

381
00:13:46,320 --> 00:13:48,320
next task i'm going to be talking about

382
00:13:48,320 --> 00:13:52,399
how we can obfuscate powershell script

383
00:13:54,800 --> 00:13:57,279
perfect

384
00:14:01,600 --> 00:14:03,199
perfect so again we apply like a few

385
00:14:03,199 --> 00:14:05,680
shot learning template here we apply to

386
00:14:05,680 --> 00:14:07,920
we give it two examples of example of

387
00:14:07,920 --> 00:14:10,160
powershell script uh unobfuscated and

388
00:14:10,160 --> 00:14:11,600
then we provide an example of it

389
00:14:11,600 --> 00:14:13,920
obfuscated so in this case we've added a

390
00:14:13,920 --> 00:14:15,120
whole bunch of

391
00:14:15,120 --> 00:14:16,959
very basic string obfuscation in order

392
00:14:16,959 --> 00:14:18,959
to try to avoid av detections or edr

393
00:14:18,959 --> 00:14:20,240
detections

394
00:14:20,240 --> 00:14:22,720
uh and then another example of using

395
00:14:22,720 --> 00:14:24,880
invoke invoke obfuscation

396
00:14:24,880 --> 00:14:27,519
uh here's an here's an example

397
00:14:27,519 --> 00:14:29,440
and then you can then here's an attempt

398
00:14:29,440 --> 00:14:32,079
of trying to use it to obfuscate uh this

399
00:14:32,079 --> 00:14:34,160
input powershell command and in this

400
00:14:34,160 --> 00:14:35,839
case we give it a hint to use super

401
00:14:35,839 --> 00:14:38,000
advanced obfuscation in this case

402
00:14:38,000 --> 00:14:39,120
so now i'm going to generate a few

403
00:14:39,120 --> 00:14:40,959
examples using this sometimes you'll get

404
00:14:40,959 --> 00:14:42,959
like almost no obligation sometimes

405
00:14:42,959 --> 00:14:44,079
you'll get some sort of basic

406
00:14:44,079 --> 00:14:46,240
obfuscation

407
00:14:46,240 --> 00:14:47,760
and sometimes you get completely wrong

408
00:14:47,760 --> 00:14:49,680
solutions like in this case that was not

409
00:14:49,680 --> 00:14:53,199
a not a good real answer

410
00:14:53,839 --> 00:14:55,839
there's again no obligation at all in

411
00:14:55,839 --> 00:14:57,760
that case

412
00:14:57,760 --> 00:14:59,519
no i think we're starting to get a basic

413
00:14:59,519 --> 00:15:03,519
obfuscation example once it finishes

414
00:15:03,519 --> 00:15:06,079
perfect cool so now here is sort of a

415
00:15:06,079 --> 00:15:08,000
sort of simple more simple obfuscation

416
00:15:08,000 --> 00:15:08,880
where they've sort of hidden the

417
00:15:08,880 --> 00:15:11,839
characters involved with it

418
00:15:11,839 --> 00:15:13,760
so sort of my assessment of whether that

419
00:15:13,760 --> 00:15:15,279
would be sort of the use case to create

420
00:15:15,279 --> 00:15:16,959
obfuscate a powershell script i don't

421
00:15:16,959 --> 00:15:19,600
think it's uh i don't think it's a very

422
00:15:19,600 --> 00:15:20,880
i don't think it's a very effective

423
00:15:20,880 --> 00:15:23,040
method i don't think it's an improvement

424
00:15:23,040 --> 00:15:25,040
on the existing attacker techniques in

425
00:15:25,040 --> 00:15:28,000
the way that they obfuscate scripts

426
00:15:28,000 --> 00:15:29,920
i think it i think it doesn't model the

427
00:15:29,920 --> 00:15:31,680
way that the attackers generate their

428
00:15:31,680 --> 00:15:32,880
obfuscated scripts either because i

429
00:15:32,880 --> 00:15:34,399
think they're writing coding routines

430
00:15:34,399 --> 00:15:36,240
like like you can imagine like a python

431
00:15:36,240 --> 00:15:38,240
function which will which will do the

432
00:15:38,240 --> 00:15:40,639
obfuscation of the powershell script

433
00:15:40,639 --> 00:15:42,720
so it doesn't really closely match the

434
00:15:42,720 --> 00:15:44,639
techniques and it can't match the same

435
00:15:44,639 --> 00:15:47,360
complexity that would be involved either

436
00:15:47,360 --> 00:15:50,560
so i think instead of instead of using

437
00:15:50,560 --> 00:15:52,959
using it to directly obfuscate the power

438
00:15:52,959 --> 00:15:55,279
skill powershell script i think what

439
00:15:55,279 --> 00:15:57,440
it's going to be used to do is to author

440
00:15:57,440 --> 00:15:59,680
code which obviously it's powershell and

441
00:15:59,680 --> 00:16:03,120
i'm going to give a demo of that now

442
00:16:06,560 --> 00:16:08,480
perfect so in this case we're starting

443
00:16:08,480 --> 00:16:10,320
to define a python function build

444
00:16:10,320 --> 00:16:12,800
malware loader and then you specify

445
00:16:12,800 --> 00:16:15,920
you specify the url um that you wanted

446
00:16:15,920 --> 00:16:17,519
to download the payload from you give it

447
00:16:17,519 --> 00:16:19,199
a specific you give it a short comment

448
00:16:19,199 --> 00:16:20,880
as what you want the function to do so

449
00:16:20,880 --> 00:16:22,000
in this case we're going to build an

450
00:16:22,000 --> 00:16:23,440
obfuscated powershell command to

451
00:16:23,440 --> 00:16:25,600
download and execute an executable from

452
00:16:25,600 --> 00:16:27,440
a specified url

453
00:16:27,440 --> 00:16:29,199
so then you get it to author powershell

454
00:16:29,199 --> 00:16:31,758
script here

455
00:16:32,720 --> 00:16:35,839
which sometimes will have a decent

456
00:16:35,839 --> 00:16:38,240
output

457
00:16:38,480 --> 00:16:39,440
i'm just going to let it finish

458
00:16:39,440 --> 00:16:42,399
generating this function

459
00:16:43,440 --> 00:16:45,519
perfect i'm going to go ahead and

460
00:16:45,519 --> 00:16:49,720
generate another one as an example

461
00:17:01,839 --> 00:17:04,079
and i'm gonna try generally one last one

462
00:17:04,079 --> 00:17:08,079
after this one finishes perfect

463
00:17:10,319 --> 00:17:12,240
yes so sometimes it doesn't do a very

464
00:17:12,240 --> 00:17:13,919
good job

465
00:17:13,919 --> 00:17:16,480
um here's one of the best examples i got

466
00:17:16,480 --> 00:17:18,160
for code generation this one was from

467
00:17:18,160 --> 00:17:20,160
github copilot actually so it's the

468
00:17:20,160 --> 00:17:22,559
exact same function and it actually was

469
00:17:22,559 --> 00:17:24,959
able to output a solution which uh

470
00:17:24,959 --> 00:17:27,439
ignores it with uh exhaust each each of

471
00:17:27,439 --> 00:17:29,280
the bytes with nine for example these

472
00:17:29,280 --> 00:17:30,559
xor encoding

473
00:17:30,559 --> 00:17:31,679
and then it actually authored a

474
00:17:31,679 --> 00:17:33,679
powershell script for example here which

475
00:17:33,679 --> 00:17:36,400
would go through and ignore each byte by

476
00:17:36,400 --> 00:17:38,320
nine to reverse it and then execute the

477
00:17:38,320 --> 00:17:39,600
powershell command which would then

478
00:17:39,600 --> 00:17:41,360
download the file and start the process

479
00:17:41,360 --> 00:17:43,440
for example which is a pretty good

480
00:17:43,440 --> 00:17:45,600
example but you do get a lot of a lot of

481
00:17:45,600 --> 00:17:49,200
cases where it creates uh failure

482
00:17:49,200 --> 00:17:50,960
failure cases where it won't generate

483
00:17:50,960 --> 00:17:53,679
successful uh script content

484
00:17:53,679 --> 00:17:55,520
so but i think you can combine it with

485
00:17:55,520 --> 00:17:57,520
uh unit tests where you can generate uh

486
00:17:57,520 --> 00:17:59,600
you know a hundred thousand or tens of

487
00:17:59,600 --> 00:18:01,679
thousands of these routines and put them

488
00:18:01,679 --> 00:18:04,799
to unit tests into uh scripts functions

489
00:18:04,799 --> 00:18:06,400
that actually generate powershell code

490
00:18:06,400 --> 00:18:08,799
that successfully executes that url

491
00:18:08,799 --> 00:18:10,960
would be the test

492
00:18:10,960 --> 00:18:12,559
and then you can basically get it to

493
00:18:12,559 --> 00:18:14,559
author many different python functions

494
00:18:14,559 --> 00:18:16,559
which will generate python or powershell

495
00:18:16,559 --> 00:18:18,160
loaders for you

496
00:18:18,160 --> 00:18:19,440
with many different obfuscation

497
00:18:19,440 --> 00:18:21,440
techniques

498
00:18:21,440 --> 00:18:24,000
so that makes it that that makes it

499
00:18:24,000 --> 00:18:25,039
harder

500
00:18:25,039 --> 00:18:26,799
harder for the defenders

501
00:18:26,799 --> 00:18:29,039
in order to detect the attacks because

502
00:18:29,039 --> 00:18:30,799
of the wide variety of techniques that

503
00:18:30,799 --> 00:18:32,400
they'll be using to obfuscate their

504
00:18:32,400 --> 00:18:33,840
attacks

505
00:18:33,840 --> 00:18:35,760
one thing to note is it does understand

506
00:18:35,760 --> 00:18:38,080
like it can begin to understand more

507
00:18:38,080 --> 00:18:40,400
complicated asks as well like you can

508
00:18:40,400 --> 00:18:41,760
say build an obfuscated powershell

509
00:18:41,760 --> 00:18:43,360
command to enable rdp and send

510
00:18:43,360 --> 00:18:45,520
credentials to specified url now this is

511
00:18:45,520 --> 00:18:47,360
too advanced for whether models can be

512
00:18:47,360 --> 00:18:48,400
right now

513
00:18:48,400 --> 00:18:50,400
but for example the models do recognize

514
00:18:50,400 --> 00:18:52,960
how to how to enable rdp in the device

515
00:18:52,960 --> 00:18:55,120
for example

516
00:18:55,120 --> 00:18:56,960
so it starts to get some of the more uh

517
00:18:56,960 --> 00:19:00,400
complex parts already

518
00:19:00,640 --> 00:19:02,400
you can also get it to generate like

519
00:19:02,400 --> 00:19:03,840
other coding languages it doesn't have

520
00:19:03,840 --> 00:19:05,520
to be powershell you can get a generate

521
00:19:05,520 --> 00:19:08,320
office macros vbscript or javascript

522
00:19:08,320 --> 00:19:11,280
loaders as well so i'd say like this is

523
00:19:11,280 --> 00:19:13,600
it is an immediate risk but i think it's

524
00:19:13,600 --> 00:19:15,440
not a great improvement on the

525
00:19:15,440 --> 00:19:16,720
techniques that the attackers are

526
00:19:16,720 --> 00:19:18,400
currently using

527
00:19:18,400 --> 00:19:20,559
it might increase the diversity of the

528
00:19:20,559 --> 00:19:23,039
of the script attacks that we see

529
00:19:23,039 --> 00:19:24,880
but i think it's not like a great

530
00:19:24,880 --> 00:19:26,880
improvement a lot like a humongous

531
00:19:26,880 --> 00:19:28,640
improvement upon the existing attacking

532
00:19:28,640 --> 00:19:31,200
techniques here

533
00:19:31,200 --> 00:19:32,799
um

534
00:19:32,799 --> 00:19:34,799
this technology can be used defensively

535
00:19:34,799 --> 00:19:36,400
in this case as well and i'd actually

536
00:19:36,400 --> 00:19:38,559
argue that maybe benefits the defenders

537
00:19:38,559 --> 00:19:40,320
more in this case

538
00:19:40,320 --> 00:19:42,000
because the

539
00:19:42,000 --> 00:19:43,679
you can either generate

540
00:19:43,679 --> 00:19:45,280
a large number of diverse attacks using

541
00:19:45,280 --> 00:19:46,720
this approach as the defender then you

542
00:19:46,720 --> 00:19:48,320
train a model to classify all these

543
00:19:48,320 --> 00:19:49,760
attacks even if though they haven't been

544
00:19:49,760 --> 00:19:50,960
observed yet

545
00:19:50,960 --> 00:19:52,880
or you can train like a large nlp model

546
00:19:52,880 --> 00:19:55,280
using similar transformer models

547
00:19:55,280 --> 00:19:57,520
to do in binary classification tasks

548
00:19:57,520 --> 00:19:58,720
because these

549
00:19:58,720 --> 00:20:00,559
often these powershell scripts and macro

550
00:20:00,559 --> 00:20:02,720
content really isn't doesn't look

551
00:20:02,720 --> 00:20:05,520
doesn't isn't trying to look clean

552
00:20:05,520 --> 00:20:06,880
so it makes it

553
00:20:06,880 --> 00:20:09,039
fairly easy to identify as malicious by

554
00:20:09,039 --> 00:20:12,320
these large language models

555
00:20:12,559 --> 00:20:14,640
okay cool now i'm going to go into more

556
00:20:14,640 --> 00:20:16,720
of a futuristic one which is automating

557
00:20:16,720 --> 00:20:18,720
a human-operated

558
00:20:18,720 --> 00:20:20,480
human-operated ransomware attacks on an

559
00:20:20,480 --> 00:20:23,039
enterprise

560
00:20:23,679 --> 00:20:25,120
i'm going to go ahead and demo this

561
00:20:25,120 --> 00:20:27,600
example

562
00:20:32,720 --> 00:20:34,240
perfect

563
00:20:34,240 --> 00:20:36,400
so for example you can give the you can

564
00:20:36,400 --> 00:20:38,640
give the model a little bit of context

565
00:20:38,640 --> 00:20:40,480
of what the objective of the attack is

566
00:20:40,480 --> 00:20:42,080
you can say here we are carrying out an

567
00:20:42,080 --> 00:20:44,480
attack using metasploit on an enterprise

568
00:20:44,480 --> 00:20:46,480
the attacker goal is to infect a machine

569
00:20:46,480 --> 00:20:48,159
elevate privileges and move laterally to

570
00:20:48,159 --> 00:20:49,600
the domain controller

571
00:20:49,600 --> 00:20:51,120
afterwards we'll push out a policy to

572
00:20:51,120 --> 00:20:53,039
encrypt all devices on the network and

573
00:20:53,039 --> 00:20:54,640
you could maybe the attacker could even

574
00:20:54,640 --> 00:20:57,280
specify the exact url to download

575
00:20:57,280 --> 00:20:59,039
to download the payload to do the actual

576
00:20:59,039 --> 00:21:01,120
ransomware encryption which would which

577
00:21:01,120 --> 00:21:02,000
enact

578
00:21:02,000 --> 00:21:03,760
so that they'd actually encrypt it with

579
00:21:03,760 --> 00:21:05,600
the right key and everything

580
00:21:05,600 --> 00:21:07,120
so you could add that the attacker can

581
00:21:07,120 --> 00:21:08,640
add that to the description

582
00:21:08,640 --> 00:21:10,400
so then you can get it to output like

583
00:21:10,400 --> 00:21:11,760
the first commands that it would do to

584
00:21:11,760 --> 00:21:14,880
create the the fishing kit

585
00:21:14,880 --> 00:21:17,679
um

586
00:21:17,679 --> 00:21:19,360
i'm going to go ahead and retry this a

587
00:21:19,360 --> 00:21:22,678
couple times

588
00:21:33,440 --> 00:21:35,760
perfect

589
00:21:38,080 --> 00:21:39,840
so this obviously didn't generate the

590
00:21:39,840 --> 00:21:41,760
right code

591
00:21:41,760 --> 00:21:42,960
it's trying to

592
00:21:42,960 --> 00:21:45,280
exploit the internal blue

593
00:21:45,280 --> 00:21:47,120
blue

594
00:21:47,120 --> 00:21:49,039
blue vulnerability but i'm going to go

595
00:21:49,039 --> 00:21:50,960
ahead and

596
00:21:50,960 --> 00:21:53,360
assume that was sort of right

597
00:21:53,360 --> 00:21:56,080
and then i'm going to

598
00:21:56,080 --> 00:21:57,520
assume that you have like a reverse

599
00:21:57,520 --> 00:21:59,760
shell then you ask

600
00:21:59,760 --> 00:22:01,360
what your next step is going to be and

601
00:22:01,360 --> 00:22:02,480
then it's going to generate the next

602
00:22:02,480 --> 00:22:03,840
steps once you have a reverse shell on

603
00:22:03,840 --> 00:22:05,360
the device so it says it's going to

604
00:22:05,360 --> 00:22:08,720
execute a privilege of escalation

605
00:22:08,720 --> 00:22:10,400
and then often it'll do like a

606
00:22:10,400 --> 00:22:13,600
credential access yes than it does maybe

607
00:22:13,600 --> 00:22:15,600
i'm actually not a super expert at

608
00:22:15,600 --> 00:22:17,840
metasploit but i imagine some of this

609
00:22:17,840 --> 00:22:19,360
will be somewhat right but i imagine it

610
00:22:19,360 --> 00:22:20,960
won't be it won't be actually

611
00:22:20,960 --> 00:22:22,400
technically correct

612
00:22:22,400 --> 00:22:23,840
so then for example it'll run the

613
00:22:23,840 --> 00:22:26,080
credentials your cadential manager let's

614
00:22:26,080 --> 00:22:28,559
assume that that this would then give us

615
00:22:28,559 --> 00:22:30,799
the credentials

616
00:22:30,799 --> 00:22:32,480
i'm going to go ahead and go to the last

617
00:22:32,480 --> 00:22:35,120
stage of the attack

618
00:22:35,120 --> 00:22:38,479
i think it gets really interesting

619
00:22:38,799 --> 00:22:40,960
perfect so let's say

620
00:22:40,960 --> 00:22:43,440
now for the last stage of the attack

621
00:22:43,440 --> 00:22:44,960
the last stage of the attack i think you

622
00:22:44,960 --> 00:22:46,960
could effectively

623
00:22:46,960 --> 00:22:49,120
you can basically effectively loop a

624
00:22:49,120 --> 00:22:50,640
giving output of the command that they

625
00:22:50,640 --> 00:22:52,720
give you successfully got the

626
00:22:52,720 --> 00:22:54,400
credentials and then next i'll do the

627
00:22:54,400 --> 00:22:56,080
following so

628
00:22:56,080 --> 00:22:58,720
basically you do the next action of the

629
00:22:58,720 --> 00:23:00,799
steps then you give the output back to

630
00:23:00,799 --> 00:23:02,400
the model so it understands the output

631
00:23:02,400 --> 00:23:03,760
of the tool that it runs and then you

632
00:23:03,760 --> 00:23:06,960
repeat the step indefinitely in order to

633
00:23:06,960 --> 00:23:09,679
let the ai start to learn

634
00:23:09,679 --> 00:23:10,960
learn about the environment that it's

635
00:23:10,960 --> 00:23:12,400
attacking as well as respond to the

636
00:23:12,400 --> 00:23:13,840
output of the tools in more like a

637
00:23:13,840 --> 00:23:16,639
human-like way

638
00:23:16,720 --> 00:23:18,960
so

639
00:23:20,240 --> 00:23:22,320
perfect and i guess it attempted to

640
00:23:22,320 --> 00:23:24,400
escalate privilege again here

641
00:23:24,400 --> 00:23:26,000
perfect

642
00:23:26,000 --> 00:23:27,280
so basically

643
00:23:27,280 --> 00:23:29,760
once you once you you basically repeat

644
00:23:29,760 --> 00:23:31,679
this loop of you see the output from the

645
00:23:31,679 --> 00:23:33,520
tool and then you ask it what the next

646
00:23:33,520 --> 00:23:35,360
commands that should be ran so if you

647
00:23:35,360 --> 00:23:37,120
repeat this process repeatedly you can

648
00:23:37,120 --> 00:23:40,159
get it to respond reactively towards

649
00:23:40,159 --> 00:23:41,679
what it's seen in your environment and

650
00:23:41,679 --> 00:23:42,960
the output of the tools that it's

651
00:23:42,960 --> 00:23:43,919
running

652
00:23:43,919 --> 00:23:45,840
and then it can like

653
00:23:45,840 --> 00:23:48,000
eventually once the mod once these

654
00:23:48,000 --> 00:23:50,400
natural language models get good enough

655
00:23:50,400 --> 00:23:52,080
it is going to be a risk to be able to

656
00:23:52,080 --> 00:23:53,919
automate a human-operated ransomware

657
00:23:53,919 --> 00:23:55,039
attack where you could be automating

658
00:23:55,039 --> 00:23:57,360
metasploit or cobalt right on a network

659
00:23:57,360 --> 00:23:59,200
and you just give it in general terms

660
00:23:59,200 --> 00:24:00,640
like general general

661
00:24:00,640 --> 00:24:02,080
written english

662
00:24:02,080 --> 00:24:03,120
what the

663
00:24:03,120 --> 00:24:04,480
what the goal of the attack on

664
00:24:04,480 --> 00:24:06,240
enterprise is which is to download human

665
00:24:06,240 --> 00:24:07,520
operate ransomware encryption from the

666
00:24:07,520 --> 00:24:10,080
specified url on all devices and execute

667
00:24:10,080 --> 00:24:12,799
it for example

668
00:24:12,799 --> 00:24:14,640
um i would say

669
00:24:14,640 --> 00:24:16,240
i would say the

670
00:24:16,240 --> 00:24:18,720
that this is a distant high risk on to

671
00:24:18,720 --> 00:24:20,880
cyber security probably in the next

672
00:24:20,880 --> 00:24:22,960
decade we might be able to see there

673
00:24:22,960 --> 00:24:24,080
might be

674
00:24:24,080 --> 00:24:25,360
there might unfortunately be large

675
00:24:25,360 --> 00:24:28,240
enough advantages in nlp that this that

676
00:24:28,240 --> 00:24:30,080
could make this a real risk and that's

677
00:24:30,080 --> 00:24:32,400
going to completely change the cyber

678
00:24:32,400 --> 00:24:33,679
security

679
00:24:33,679 --> 00:24:34,880
game

680
00:24:34,880 --> 00:24:36,480
because now they don't need human

681
00:24:36,480 --> 00:24:40,000
experts to carry out the attacks

682
00:24:41,440 --> 00:24:43,120
defensive technologies benefit from

683
00:24:43,120 --> 00:24:44,880
these same advances

684
00:24:44,880 --> 00:24:46,640
however it's more costly for defenders

685
00:24:46,640 --> 00:24:48,799
due to the scale of this log of the

686
00:24:48,799 --> 00:24:50,960
security logs and these

687
00:24:50,960 --> 00:24:52,400
these large nlp models are really

688
00:24:52,400 --> 00:24:54,720
expensive to run over over a large

689
00:24:54,720 --> 00:24:57,360
amount of data

690
00:24:58,720 --> 00:25:00,640
these can also be used for

691
00:25:00,640 --> 00:25:03,200
propaganda fake news and social social

692
00:25:03,200 --> 00:25:05,200
media attacks i'm going to go ahead and

693
00:25:05,200 --> 00:25:08,640
show you some examples of those

694
00:25:13,440 --> 00:25:15,520
so in this case uh you can define say

695
00:25:15,520 --> 00:25:17,840
your platform i say i'm running for the

696
00:25:17,840 --> 00:25:20,080
prime minister of canada for example

697
00:25:20,080 --> 00:25:21,919
and maybe this is the platform my

698
00:25:21,919 --> 00:25:24,400
election platform and then i make i

699
00:25:24,400 --> 00:25:25,679
describe that my tweets are going to be

700
00:25:25,679 --> 00:25:26,799
aggressive and attacking and

701
00:25:26,799 --> 00:25:29,039
discrediting the person that tweets and

702
00:25:29,039 --> 00:25:30,480
then i give it a couple examples where a

703
00:25:30,480 --> 00:25:32,400
person tweeted something and then i i

704
00:25:32,400 --> 00:25:33,919
give a reply

705
00:25:33,919 --> 00:25:36,400
to it so this is again two shot learning

706
00:25:36,400 --> 00:25:38,240
and now in this case someone's tweeted

707
00:25:38,240 --> 00:25:40,000
this jeff's plan is crazy we can't just

708
00:25:40,000 --> 00:25:42,480
steal crypto we need a real jobs plan

709
00:25:42,480 --> 00:25:44,159
and then it will generate uh it'll

710
00:25:44,159 --> 00:25:46,080
generate tweet replies to it so

711
00:25:46,080 --> 00:25:47,440
basically you can

712
00:25:47,440 --> 00:25:50,320
you can automatically create um

713
00:25:50,320 --> 00:25:53,120
fairly intelligent uh

714
00:25:53,120 --> 00:25:55,520
social media interactions

715
00:25:55,520 --> 00:25:57,360
um social media

716
00:25:57,360 --> 00:25:59,200
social media interactions which uh

717
00:25:59,200 --> 00:26:01,520
promote specific agendas or it could be

718
00:26:01,520 --> 00:26:04,080
against specific people or it could be

719
00:26:04,080 --> 00:26:06,240
promoting like your your political

720
00:26:06,240 --> 00:26:08,000
candidate or attacking opposing

721
00:26:08,000 --> 00:26:10,960
political candidates

722
00:26:10,960 --> 00:26:12,080
um

723
00:26:12,080 --> 00:26:14,400
so this is obviously uh i think this is

724
00:26:14,400 --> 00:26:16,400
a current problem this isn't probably

725
00:26:16,400 --> 00:26:18,400
anything new that you probably haven't

726
00:26:18,400 --> 00:26:20,110
heard of before

727
00:26:20,110 --> 00:26:21,279
[Music]

728
00:26:21,279 --> 00:26:22,640
but i think like in terms of like

729
00:26:22,640 --> 00:26:24,320
propaganda fake news social media

730
00:26:24,320 --> 00:26:25,760
attacks i think a lot of what's been

731
00:26:25,760 --> 00:26:27,919
done currently is like human generate

732
00:26:27,919 --> 00:26:30,400
content but i think imagine some of it

733
00:26:30,400 --> 00:26:32,880
already is uh these large generative

734
00:26:32,880 --> 00:26:34,880
language models creating content towards

735
00:26:34,880 --> 00:26:38,480
their specific platforms as well so i

736
00:26:38,480 --> 00:26:39,760
don't know i don't know what the

737
00:26:39,760 --> 00:26:42,320
solution should exactly be here i think

738
00:26:42,320 --> 00:26:43,679
like

739
00:26:43,679 --> 00:26:45,440
elon musk is saying hey they're going to

740
00:26:45,440 --> 00:26:47,440
add identity verification to all users

741
00:26:47,440 --> 00:26:48,720
of twitter

742
00:26:48,720 --> 00:26:50,720
like we can have strict identity

743
00:26:50,720 --> 00:26:52,640
validation in order to help solve this

744
00:26:52,640 --> 00:26:54,880
problem however obviously that comes at

745
00:26:54,880 --> 00:26:58,400
its own privacy cost as well

746
00:26:59,200 --> 00:27:01,279
this can also be used to fully automate

747
00:27:01,279 --> 00:27:03,279
starting to be possible to fully

748
00:27:03,279 --> 00:27:05,279
automate scam attacks i'm going to give

749
00:27:05,279 --> 00:27:07,440
a quick demo of what that looks like in

750
00:27:07,440 --> 00:27:10,720
an automated scam attack

751
00:27:15,360 --> 00:27:17,520
so

752
00:27:18,080 --> 00:27:20,159
so for example one of the one of the

753
00:27:20,159 --> 00:27:22,320
facebook scams and this is one that i've

754
00:27:22,320 --> 00:27:24,240
seen myself as well

755
00:27:24,240 --> 00:27:25,840
is that the the attackers will

756
00:27:25,840 --> 00:27:28,559
compromise a facebook account uh usually

757
00:27:28,559 --> 00:27:30,240
using a weak password of some inactive

758
00:27:30,240 --> 00:27:32,640
user then they'll go to go and go join

759
00:27:32,640 --> 00:27:34,399
some facebook groups like parenting

760
00:27:34,399 --> 00:27:36,159
parenting groups for example and then

761
00:27:36,159 --> 00:27:38,880
they post like a saab story there

762
00:27:38,880 --> 00:27:41,120
they'll post a sob story and then the

763
00:27:41,120 --> 00:27:44,879
how the scam works is that they will

764
00:27:45,120 --> 00:27:46,960
is that they hope that people initiate

765
00:27:46,960 --> 00:27:48,960
conversations with them to help cover

766
00:27:48,960 --> 00:27:50,559
whatever whatever

767
00:27:50,559 --> 00:27:52,159
scenario they're in

768
00:27:52,159 --> 00:27:53,440
so then they start a chat with the

769
00:27:53,440 --> 00:27:55,360
person and they ask them to to basically

770
00:27:55,360 --> 00:27:56,559
send them money

771
00:27:56,559 --> 00:27:59,760
is how the scam works

772
00:28:00,080 --> 00:28:01,919
so you can get it to create targeted

773
00:28:01,919 --> 00:28:04,080
scam emails which you can which then can

774
00:28:04,080 --> 00:28:06,480
be posted to the facebook specific space

775
00:28:06,480 --> 00:28:08,640
facebook groups and then

776
00:28:08,640 --> 00:28:11,520
even the chat conversations uh within

777
00:28:11,520 --> 00:28:13,200
like facebook for example could be fully

778
00:28:13,200 --> 00:28:15,200
automated where the ai is reading the

779
00:28:15,200 --> 00:28:17,840
chat in response to the story and come

780
00:28:17,840 --> 00:28:19,520
up with sensible replies to even fully

781
00:28:19,520 --> 00:28:21,600
automate the human interaction the human

782
00:28:21,600 --> 00:28:23,520
conversation part of the

783
00:28:23,520 --> 00:28:25,760
part of the attack

784
00:28:25,760 --> 00:28:28,000
so basically i think the whole the whole

785
00:28:28,000 --> 00:28:29,520
camp the whole

786
00:28:29,520 --> 00:28:31,679
scam campaign could be could be

787
00:28:31,679 --> 00:28:33,200
automated already with the current

788
00:28:33,200 --> 00:28:35,200
technology it might not be as effective

789
00:28:35,200 --> 00:28:36,799
as a person operating but i think it

790
00:28:36,799 --> 00:28:38,799
would have a good amount of success that

791
00:28:38,799 --> 00:28:42,840
it is starting to become a risk

792
00:28:44,240 --> 00:28:46,799
uh so i guess in conclusion targeted

793
00:28:46,799 --> 00:28:48,480
efficient emails at scale is an

794
00:28:48,480 --> 00:28:50,559
immediate risk and it does not equally

795
00:28:50,559 --> 00:28:52,799
benefit the defenders automated malware

796
00:28:52,799 --> 00:28:54,399
loader and authoring is on the verge of

797
00:28:54,399 --> 00:28:56,399
being effective uh

798
00:28:56,399 --> 00:28:58,559
and i'd say it benefits luckily it

799
00:28:58,559 --> 00:29:00,559
benefits defenders more than attackers i

800
00:29:00,559 --> 00:29:02,640
think in this scenario

801
00:29:02,640 --> 00:29:04,720
automated human operated ransomware

802
00:29:04,720 --> 00:29:07,039
attacks i think are on the horizon uh

803
00:29:07,039 --> 00:29:08,720
but this is more on that like in the

804
00:29:08,720 --> 00:29:10,720
within the next decade type horizon

805
00:29:10,720 --> 00:29:12,720
which is going to be really

806
00:29:12,720 --> 00:29:13,840
which would be like a really game

807
00:29:13,840 --> 00:29:15,279
changer really big game changer for the

808
00:29:15,279 --> 00:29:17,600
cyber security field disinformation is

809
00:29:17,600 --> 00:29:19,279
already a problem

810
00:29:19,279 --> 00:29:20,880
and scams of the future i think are

811
00:29:20,880 --> 00:29:22,399
going to start to leverage these models

812
00:29:22,399 --> 00:29:24,640
as well

813
00:29:24,640 --> 00:29:27,039
and uh i highly recommend playing with

814
00:29:27,039 --> 00:29:28,399
these models yourself you can try out

815
00:29:28,399 --> 00:29:31,360
the openai api you can sign up for it uh

816
00:29:31,360 --> 00:29:32,799
you can sign up for the beta for github

817
00:29:32,799 --> 00:29:34,880
copilot for the code generation

818
00:29:34,880 --> 00:29:37,679
interactions guci is a lower cost

819
00:29:37,679 --> 00:29:40,640
implementation of the of the open source

820
00:29:40,640 --> 00:29:42,320
large text generation models which you

821
00:29:42,320 --> 00:29:43,520
can try out

822
00:29:43,520 --> 00:29:45,039
and i highly recommend trying out the

823
00:29:45,039 --> 00:29:46,799
games that work with this technology as

824
00:29:46,799 --> 00:29:50,600
well yeah thank you everyone

