1
00:00:01,439 --> 00:00:04,560
hi everyone like thursday from the world

2
00:00:04,560 --> 00:00:07,520
so today i will be uh talking about a

3
00:00:07,520 --> 00:00:10,960
bit of how we can inject automation into

4
00:00:10,960 --> 00:00:12,240
pen testing

5
00:00:12,240 --> 00:00:14,719
this is not just limited to pen testing

6
00:00:14,719 --> 00:00:15,519
but

7
00:00:15,519 --> 00:00:17,199
it can range from any work in the

8
00:00:17,199 --> 00:00:20,480
security uh this is just i would like to

9
00:00:20,480 --> 00:00:23,840
give a hunch to everyone of how can

10
00:00:23,840 --> 00:00:26,160
they automate their work and be a bit

11
00:00:26,160 --> 00:00:28,560
lazy

12
00:00:29,039 --> 00:00:31,119
so a bit about myself

13
00:00:31,119 --> 00:00:33,280
uh currently i'm working as a security

14
00:00:33,280 --> 00:00:35,680
engineer at a company called mobiquity

15
00:00:35,680 --> 00:00:38,719
mostly my work here revolves around uh

16
00:00:38,719 --> 00:00:40,719
for the things such as devsecops code

17
00:00:40,719 --> 00:00:42,719
reviews and automations

18
00:00:42,719 --> 00:00:43,520
but

19
00:00:43,520 --> 00:00:46,320
i have always been uh into band testing

20
00:00:46,320 --> 00:00:49,200
like since three years and here also i

21
00:00:49,200 --> 00:00:51,199
do some pen testing but not that much

22
00:00:51,199 --> 00:00:53,280
but i always do pen testing so that's

23
00:00:53,280 --> 00:00:55,760
why i'm active in work boundaries uh

24
00:00:55,760 --> 00:00:57,760
everyone might have heard of

25
00:00:57,760 --> 00:00:59,840
synagogue so currently i'm

26
00:00:59,840 --> 00:01:02,640
as a cinegra team member at level four

27
00:01:02,640 --> 00:01:03,600
there

28
00:01:03,600 --> 00:01:04,400
and

29
00:01:04,400 --> 00:01:07,760
apart from infosec stuff and everything

30
00:01:07,760 --> 00:01:11,119
i play a bit apex legends if

31
00:01:11,119 --> 00:01:13,040
someone's there you can bring me there

32
00:01:13,040 --> 00:01:16,320
we can leave it there

33
00:01:17,439 --> 00:01:18,479
okay

34
00:01:18,479 --> 00:01:20,159
so uh

35
00:01:20,159 --> 00:01:21,920
to start uh

36
00:01:21,920 --> 00:01:23,520
we could say

37
00:01:23,520 --> 00:01:26,479
where the bug originates right uh where

38
00:01:26,479 --> 00:01:29,680
is the existence of it so we know that

39
00:01:29,680 --> 00:01:31,600
most of the developers share

40
00:01:31,600 --> 00:01:33,680
the same mindset

41
00:01:33,680 --> 00:01:36,000
not the same mindset as an all in all

42
00:01:36,000 --> 00:01:38,400
but even if we say in the team they have

43
00:01:38,400 --> 00:01:40,240
their same mindset they would have some

44
00:01:40,240 --> 00:01:43,280
standards of the code that uh

45
00:01:43,280 --> 00:01:46,000
they want to follow uh like

46
00:01:46,000 --> 00:01:47,680
how a function would be returned how

47
00:01:47,680 --> 00:01:49,840
would you it would be called what how

48
00:01:49,840 --> 00:01:51,840
the command should look like then

49
00:01:51,840 --> 00:01:54,560
companies enforce this that

50
00:01:54,560 --> 00:01:56,240
a developer should write this code in

51
00:01:56,240 --> 00:01:58,640
this way so that uh

52
00:01:58,640 --> 00:02:00,479
all the code without throughout the

53
00:02:00,479 --> 00:02:02,320
company looks same

54
00:02:02,320 --> 00:02:05,119
so i see a problem here that a pattern

55
00:02:05,119 --> 00:02:07,040
will be repeated here and there every

56
00:02:07,040 --> 00:02:10,080
time right the next thing is everyone

57
00:02:10,080 --> 00:02:13,280
copies everyone else's code right so

58
00:02:13,280 --> 00:02:16,319
do hail stack overflow right because of

59
00:02:16,319 --> 00:02:19,200
this everyone is using the same snippets

60
00:02:19,200 --> 00:02:21,360
of code i have seen that many times

61
00:02:21,360 --> 00:02:23,520
quantum code has been

62
00:02:23,520 --> 00:02:25,920
uh referred to in this stack overflow

63
00:02:25,920 --> 00:02:26,640
with

64
00:02:26,640 --> 00:02:29,040
thousands of phones and everyone just

65
00:02:29,040 --> 00:02:31,360
think how many people might have copied

66
00:02:31,360 --> 00:02:34,560
it right so this leads to like

67
00:02:34,560 --> 00:02:36,800
introduction of security bundle is at

68
00:02:36,800 --> 00:02:39,519
different places i mean at places like

69
00:02:39,519 --> 00:02:41,440
we can't even think of

70
00:02:41,440 --> 00:02:43,680
everyone knows http requests modeling

71
00:02:43,680 --> 00:02:45,920
right so it existed in the chain of this

72
00:02:45,920 --> 00:02:47,840
server who might have thought like years

73
00:02:47,840 --> 00:02:52,239
before that it could be vulnerable

74
00:02:52,239 --> 00:02:53,760
okay

75
00:02:53,760 --> 00:02:55,280
the next thing

76
00:02:55,280 --> 00:02:56,400
is

77
00:02:56,400 --> 00:02:58,159
that

78
00:02:58,159 --> 00:03:01,440
every sdl scene i won't say every sd but

79
00:03:01,440 --> 00:03:04,319
almost most of the sdlcs lack security

80
00:03:04,319 --> 00:03:06,400
controls uh like

81
00:03:06,400 --> 00:03:09,440
security gun controls are not even uh

82
00:03:09,440 --> 00:03:12,239
implemented at any stage mostly this is

83
00:03:12,239 --> 00:03:14,800
due to timing budget and price

84
00:03:14,800 --> 00:03:18,319
requirement i mean uh due to this stuff

85
00:03:18,319 --> 00:03:19,200
but

86
00:03:19,200 --> 00:03:22,159
yes there are no sas or static analyzers

87
00:03:22,159 --> 00:03:24,400
or dynamic analyzer uh

88
00:03:24,400 --> 00:03:27,040
that is been executed on the core itself

89
00:03:27,040 --> 00:03:28,959
so that even the low hanging fruits

90
00:03:28,959 --> 00:03:30,000
would get

91
00:03:30,000 --> 00:03:32,239
sorted out in the starting this is i

92
00:03:32,239 --> 00:03:35,760
would say mostly uh habit that is uh

93
00:03:35,760 --> 00:03:37,360
mostly people have been

94
00:03:37,360 --> 00:03:39,599
also the main constraint i would say

95
00:03:39,599 --> 00:03:42,159
that not even the habit is the budget

96
00:03:42,159 --> 00:03:45,200
because everything is depends on

97
00:03:45,200 --> 00:03:47,040
in how much the client wants the project

98
00:03:47,040 --> 00:03:49,280
to be ready and

99
00:03:49,280 --> 00:03:51,519
yes due to this only there is no budget

100
00:03:51,519 --> 00:03:53,120
but after breach

101
00:03:53,120 --> 00:03:54,400
everything

102
00:03:54,400 --> 00:03:56,560
goes into security like even the ceo

103
00:03:56,560 --> 00:03:58,239
salary would go into

104
00:03:58,239 --> 00:03:59,120
uh

105
00:03:59,120 --> 00:04:00,879
implementing security for the project

106
00:04:00,879 --> 00:04:03,040
because it's one speech and now it need

107
00:04:03,040 --> 00:04:04,400
to be secure

108
00:04:04,400 --> 00:04:06,319
there is no uh so

109
00:04:06,319 --> 00:04:08,159
this slide says that there is no shift

110
00:04:08,159 --> 00:04:10,159
left uh

111
00:04:10,159 --> 00:04:12,480
version here most of uh in most of the

112
00:04:12,480 --> 00:04:17,839
companies because of this constraints

113
00:04:17,839 --> 00:04:21,279
okay so this was where our issues

114
00:04:21,279 --> 00:04:22,560
were

115
00:04:22,560 --> 00:04:25,199
like or restricted now let's say due to

116
00:04:25,199 --> 00:04:28,000
some reason or to contract or do

117
00:04:28,000 --> 00:04:29,120
anything

118
00:04:29,120 --> 00:04:31,440
you have been given a appendec task

119
00:04:31,440 --> 00:04:32,560
right

120
00:04:32,560 --> 00:04:33,919
so

121
00:04:33,919 --> 00:04:35,600
in the starting we all knows that

122
00:04:35,600 --> 00:04:38,000
reconnaissance of the scope starts

123
00:04:38,000 --> 00:04:40,160
that what lies in summer scope how many

124
00:04:40,160 --> 00:04:42,320
servers are there what applications are

125
00:04:42,320 --> 00:04:44,720
there on what next stack it is running

126
00:04:44,720 --> 00:04:46,400
as well as what are the different chains

127
00:04:46,400 --> 00:04:49,280
of servers such as reverse proxy and

128
00:04:49,280 --> 00:04:50,720
uh

129
00:04:50,720 --> 00:04:53,040
i would say reverse proxy or any gene of

130
00:04:53,040 --> 00:04:55,520
the server that can be in in between it

131
00:04:55,520 --> 00:04:57,600
right so for example uh we would be

132
00:04:57,600 --> 00:04:59,919
first listing out the sub domains uh

133
00:04:59,919 --> 00:05:01,919
doing a board scan of the server effects

134
00:05:01,919 --> 00:05:04,240
it's a network contest or even checking

135
00:05:04,240 --> 00:05:06,160
service out of the boots that what

136
00:05:06,160 --> 00:05:08,840
services are we offered uh is there any

137
00:05:08,840 --> 00:05:12,639
ftp or ssh or even

138
00:05:12,639 --> 00:05:14,800
any of the service that is open to us

139
00:05:14,800 --> 00:05:17,520
and they can be exploited so from that

140
00:05:17,520 --> 00:05:20,639
phase our work starts right uh everyone

141
00:05:20,639 --> 00:05:22,080
might be knowing that

142
00:05:22,080 --> 00:05:23,840
once you see

143
00:05:23,840 --> 00:05:26,000
some of the things such as let's say a

144
00:05:26,000 --> 00:05:29,440
banner where cisco is referred or let's

145
00:05:29,440 --> 00:05:31,440
say when you're doing an android pen

146
00:05:31,440 --> 00:05:34,320
testing or an even ios you whenever you

147
00:05:34,320 --> 00:05:35,280
see the

148
00:05:35,280 --> 00:05:38,000
keyword firebase you would start finding

149
00:05:38,000 --> 00:05:41,520
the url of the firebase right or even uh

150
00:05:41,520 --> 00:05:43,600
let's say you see some services such as

151
00:05:43,600 --> 00:05:46,080
ftp you'll be checking that is anonymous

152
00:05:46,080 --> 00:05:48,800
ftp uh

153
00:05:48,800 --> 00:05:51,039
i mean anonymous ftp services enabled on

154
00:05:51,039 --> 00:05:53,039
but you can just logged in as anonymous

155
00:05:53,039 --> 00:05:55,680
anonymous user and access the file so

156
00:05:55,680 --> 00:05:57,280
these checks are like

157
00:05:57,280 --> 00:06:00,080
that much intuitive that once we see it

158
00:06:00,080 --> 00:06:02,160
we will be jumping into a check in it

159
00:06:02,160 --> 00:06:03,120
but

160
00:06:03,120 --> 00:06:06,319
what i say is that this test are quite

161
00:06:06,319 --> 00:06:08,240
quite obvious right that we would be

162
00:06:08,240 --> 00:06:10,880
doing it once we see such uh

163
00:06:10,880 --> 00:06:12,160
triggers right

164
00:06:12,160 --> 00:06:14,720
second it's a bit time consuming not

165
00:06:14,720 --> 00:06:18,240
taking hours but even minutes because uh

166
00:06:18,240 --> 00:06:19,759
we have done it every time we would be

167
00:06:19,759 --> 00:06:21,440
knowing what we would be doing so it's

168
00:06:21,440 --> 00:06:24,000
pointless to do right and the main thing

169
00:06:24,000 --> 00:06:26,560
that i would be we would be focusing on

170
00:06:26,560 --> 00:06:28,319
is that this task could easily be

171
00:06:28,319 --> 00:06:30,639
automated right you don't need to do it

172
00:06:30,639 --> 00:06:31,919
every time

173
00:06:31,919 --> 00:06:33,039
so

174
00:06:33,039 --> 00:06:35,440
where's the hurdle i mean

175
00:06:35,440 --> 00:06:38,240
if such tests are

176
00:06:38,240 --> 00:06:40,160
so much obvious and it could be

177
00:06:40,160 --> 00:06:42,639
automated why not everyone using it

178
00:06:42,639 --> 00:06:44,240
right

179
00:06:44,240 --> 00:06:46,160
so yes so

180
00:06:46,160 --> 00:06:48,720
uh that is then this mindset of using an

181
00:06:48,720 --> 00:06:50,880
automation from frameworks that people

182
00:06:50,880 --> 00:06:52,800
will be saying that

183
00:06:52,800 --> 00:06:54,639
let's get up some automation framework

184
00:06:54,639 --> 00:06:56,800
that is already in the market i am not

185
00:06:56,800 --> 00:06:57,840
saying that

186
00:06:57,840 --> 00:07:00,000
all the frameworks are

187
00:07:00,000 --> 00:07:02,240
less efficient some of them are quite

188
00:07:02,240 --> 00:07:05,520
quite great right but still the thing is

189
00:07:05,520 --> 00:07:08,319
that people don't like coding many times

190
00:07:08,319 --> 00:07:10,319
especially the pentester i have met many

191
00:07:10,319 --> 00:07:12,720
people who think that coding is boring

192
00:07:12,720 --> 00:07:15,039
and let's just keep up with the manual

193
00:07:15,039 --> 00:07:17,759
searching stuff but yeah that's the

194
00:07:17,759 --> 00:07:19,039
thing and the

195
00:07:19,039 --> 00:07:20,560
three things that i would like to hide

196
00:07:20,560 --> 00:07:22,080
here for

197
00:07:22,080 --> 00:07:23,680
about the automation framework that

198
00:07:23,680 --> 00:07:26,479
first they lack contextual awareness

199
00:07:26,479 --> 00:07:28,319
right they are not aware that what

200
00:07:28,319 --> 00:07:30,319
application on which application it is

201
00:07:30,319 --> 00:07:31,840
been tested

202
00:07:31,840 --> 00:07:33,120
the second thing is they are not

203
00:07:33,120 --> 00:07:34,960
tailor-made right it's not according to

204
00:07:34,960 --> 00:07:37,280
your requirement the developer of that

205
00:07:37,280 --> 00:07:39,680
framework would be using generic word

206
00:07:39,680 --> 00:07:41,840
list right generic test as well as

207
00:07:41,840 --> 00:07:43,599
generic list of ports or anything that

208
00:07:43,599 --> 00:07:45,199
would be used in assessing those

209
00:07:45,199 --> 00:07:47,520
applications and it's not different as

210
00:07:47,520 --> 00:07:49,520
per application it's all static same

211
00:07:49,520 --> 00:07:51,919
right so this let's do like more noise

212
00:07:51,919 --> 00:07:53,599
client would be complaining that a huge

213
00:07:53,599 --> 00:07:55,120
amount of traffic is being generated

214
00:07:55,120 --> 00:07:56,960
from your side right

215
00:07:56,960 --> 00:07:59,120
many high number of false positives

216
00:07:59,120 --> 00:08:02,080
would be given uh everyone knows that

217
00:08:02,080 --> 00:08:04,479
right using nicto or

218
00:08:04,479 --> 00:08:05,280
uh

219
00:08:05,280 --> 00:08:07,759
any such scanner you would see many

220
00:08:07,759 --> 00:08:09,919
false positives but uh

221
00:08:09,919 --> 00:08:12,000
and less number of for i would say true

222
00:08:12,000 --> 00:08:14,000
positive one ratings right and i would

223
00:08:14,000 --> 00:08:16,080
say it's quite nice efficient right due

224
00:08:16,080 --> 00:08:17,440
to this

225
00:08:17,440 --> 00:08:19,919
reasons

226
00:08:23,199 --> 00:08:24,560
okay so

227
00:08:24,560 --> 00:08:26,560
the light bulb moment right so

228
00:08:26,560 --> 00:08:28,639
let's see what we can do

229
00:08:28,639 --> 00:08:31,520
to avoid such stuff right so let's see

230
00:08:31,520 --> 00:08:34,719
what if we are able to like

231
00:08:34,719 --> 00:08:36,719
automate such tasks such as of recon

232
00:08:36,719 --> 00:08:38,080
such as of busy checks or

233
00:08:38,080 --> 00:08:40,640
vulnerabilities and such one could be

234
00:08:40,640 --> 00:08:43,440
automated right uh yes

235
00:08:43,440 --> 00:08:45,680
many of us would think that a

236
00:08:45,680 --> 00:08:47,920
five-minute task might take hours to

237
00:08:47,920 --> 00:08:50,640
code like debugging the code uh where

238
00:08:50,640 --> 00:08:53,920
the error is happening or printing the

239
00:08:53,920 --> 00:08:55,680
output so that

240
00:08:55,680 --> 00:08:58,480
a tool or even it is human readable such

241
00:08:58,480 --> 00:09:01,279
stuff could uh like take hours to code

242
00:09:01,279 --> 00:09:03,279
right but the thing is that

243
00:09:03,279 --> 00:09:05,279
it would collectively be beneficial for

244
00:09:05,279 --> 00:09:08,000
us in the long run in the money aspect

245
00:09:08,000 --> 00:09:09,839
as well as the time expect right we

246
00:09:09,839 --> 00:09:12,080
won't be uh using that much time and

247
00:09:12,080 --> 00:09:14,160
that much money and let's say if a

248
00:09:14,160 --> 00:09:16,480
company is maintaining a repo where all

249
00:09:16,480 --> 00:09:18,959
such automation uh scripts are stored

250
00:09:18,959 --> 00:09:20,640
right and any of the pen tester could

251
00:09:20,640 --> 00:09:23,680
just access it so he would be uh

252
00:09:23,680 --> 00:09:26,160
yeah yeah so that would be quite good so

253
00:09:26,160 --> 00:09:27,920
i would say uh that i would

254
00:09:27,920 --> 00:09:29,680
differentiate this approach into two

255
00:09:29,680 --> 00:09:32,800
tasks one is uh the our text techniques

256
00:09:32,800 --> 00:09:35,519
and second is the smallest the first one

257
00:09:35,519 --> 00:09:38,000
would be like preparing a set of uh

258
00:09:38,000 --> 00:09:40,480
tests which is uh like technology

259
00:09:40,480 --> 00:09:42,640
agnostic it would be only uh targeting

260
00:09:42,640 --> 00:09:45,839
to that technology and uh

261
00:09:45,839 --> 00:09:47,760
you can use it whenever you uh in the

262
00:09:47,760 --> 00:09:51,040
next apprentice you find it right but uh

263
00:09:51,040 --> 00:09:53,200
it's quite hard right to write such

264
00:09:53,200 --> 00:09:55,519
tests for the initial for the for one

265
00:09:55,519 --> 00:09:58,399
technology at an initial level so that's

266
00:09:58,399 --> 00:10:00,640
where the second thing comes up like you

267
00:10:00,640 --> 00:10:03,360
can write small small scripts and

268
00:10:03,360 --> 00:10:05,279
which could pass information could do

269
00:10:05,279 --> 00:10:08,480
some test cases or even it can provide

270
00:10:08,480 --> 00:10:10,320
uh output which is can be fit into

271
00:10:10,320 --> 00:10:12,560
another two so what you can do is that

272
00:10:12,560 --> 00:10:15,360
you can write such uh scripts then club

273
00:10:15,360 --> 00:10:18,560
them together according to their uses

274
00:10:18,560 --> 00:10:20,959
and you have your technology

275
00:10:20,959 --> 00:10:23,600
technology based automation framework

276
00:10:23,600 --> 00:10:26,160
right it doesn't needs to be like a

277
00:10:26,160 --> 00:10:27,760
single kick

278
00:10:27,760 --> 00:10:29,200
single button

279
00:10:29,200 --> 00:10:31,200
turning on and killing them all

280
00:10:31,200 --> 00:10:34,800
but it could be a set of scripts right

281
00:10:34,800 --> 00:10:36,720
we'll be going into examples as well as

282
00:10:36,720 --> 00:10:39,440
some of the ideas but i would be giving

283
00:10:39,440 --> 00:10:42,320
a bit theory up till now so let's jump

284
00:10:42,320 --> 00:10:45,040
on to examples right so basically uh

285
00:10:45,040 --> 00:10:48,399
let's say that there is uh a task where

286
00:10:48,399 --> 00:10:50,320
uh subdomains need to be

287
00:10:50,320 --> 00:10:52,079
find right

288
00:10:52,079 --> 00:10:54,000
this bash it's a basically a bash

289
00:10:54,000 --> 00:10:56,800
command which could be a little bit uh

290
00:10:56,800 --> 00:10:59,200
seen like a spiderweb but believe me it

291
00:10:59,200 --> 00:11:01,760
is not uh basically what i am doing here

292
00:11:01,760 --> 00:11:04,480
that from three resources such as search

293
00:11:04,480 --> 00:11:05,600
spotter

294
00:11:05,600 --> 00:11:08,800
dot sh and dns buffer over uh i'm

295
00:11:08,800 --> 00:11:10,480
getting uh

296
00:11:10,480 --> 00:11:13,519
like domain data from that fetching it

297
00:11:13,519 --> 00:11:15,440
parsing it as well as putting into a

298
00:11:15,440 --> 00:11:17,519
file called or dot

299
00:11:17,519 --> 00:11:20,000
domains right and uh

300
00:11:20,000 --> 00:11:22,000
yes we have a list of domains just by

301
00:11:22,000 --> 00:11:24,399
using this command i can use it as my

302
00:11:24,399 --> 00:11:28,640
basil bash alias or even i can like

303
00:11:28,640 --> 00:11:30,720
put it in another basket which

304
00:11:30,720 --> 00:11:32,399
which can do my work

305
00:11:32,399 --> 00:11:34,880
right it is just uh

306
00:11:34,880 --> 00:11:37,120
i would say when you want minimum number

307
00:11:37,120 --> 00:11:38,480
of

308
00:11:38,480 --> 00:11:40,640
domains from this you can use this this

309
00:11:40,640 --> 00:11:43,680
one right the this is the second script

310
00:11:43,680 --> 00:11:47,120
which like when i have a minimum list of

311
00:11:47,120 --> 00:11:48,320
sub domains

312
00:11:48,320 --> 00:11:50,160
and i want

313
00:11:50,160 --> 00:11:52,399
that to uh do sub domains subtitles so

314
00:11:52,399 --> 00:11:55,519
like the all other uh like

315
00:11:55,519 --> 00:11:57,680
running a recursive scan right so we can

316
00:11:57,680 --> 00:11:59,839
use this script it's actually a very

317
00:11:59,839 --> 00:12:02,160
simple script even though it can be a

318
00:12:02,160 --> 00:12:04,959
bit uh long so basically what i'm doing

319
00:12:04,959 --> 00:12:06,959
here here is that i'm

320
00:12:06,959 --> 00:12:10,079
using sublister and taking domains out

321
00:12:10,079 --> 00:12:12,320
of it i'm i'm again running the dns

322
00:12:12,320 --> 00:12:14,639
forward for each and every single domain

323
00:12:14,639 --> 00:12:17,519
i'm also using you know the ema's enum

324
00:12:17,519 --> 00:12:19,920
data which is passive i'm not doing any

325
00:12:19,920 --> 00:12:22,480
intrusive scan currently just using the

326
00:12:22,480 --> 00:12:24,720
passive data then i'm fetching from sir

327
00:12:24,720 --> 00:12:27,920
dot ss or spotter as well as sort dot sh

328
00:12:27,920 --> 00:12:29,920
again like uh

329
00:12:29,920 --> 00:12:31,680
from the subdomains to extract the

330
00:12:31,680 --> 00:12:34,240
subdomain's domains right and at the

331
00:12:34,240 --> 00:12:36,079
final i'm just sorting out each and

332
00:12:36,079 --> 00:12:38,560
every data and

333
00:12:38,560 --> 00:12:40,880
like pushing it into a uni or let's say

334
00:12:40,880 --> 00:12:43,600
domain name dash unique dot txt this

335
00:12:43,600 --> 00:12:46,399
look would go all the way up till uh

336
00:12:46,399 --> 00:12:48,639
until the lines of domains has been

337
00:12:48,639 --> 00:12:51,279
exhausted right and it finally would

338
00:12:51,279 --> 00:12:54,560
give you a clean output uh where you can

339
00:12:54,560 --> 00:12:56,480
you have all the scope that you need and

340
00:12:56,480 --> 00:12:57,760
then finally

341
00:12:57,760 --> 00:13:01,360
you can move on with your test

342
00:13:02,880 --> 00:13:03,920
okay

343
00:13:03,920 --> 00:13:07,479
the next thing

344
00:13:08,000 --> 00:13:08,880
okay

345
00:13:08,880 --> 00:13:09,600
so

346
00:13:09,600 --> 00:13:12,320
this was like a cool experience of one

347
00:13:12,320 --> 00:13:14,880
of of one of the appenders uh it was

348
00:13:14,880 --> 00:13:17,200
actually a e-commerce application which

349
00:13:17,200 --> 00:13:20,560
i was testing and what happened was that

350
00:13:20,560 --> 00:13:23,519
there had a claim a discount button

351
00:13:23,519 --> 00:13:25,440
right so whenever i clicks it i get a

352
00:13:25,440 --> 00:13:27,360
discount button and the button would be

353
00:13:27,360 --> 00:13:29,920
like disabled forever but uh the thing

354
00:13:29,920 --> 00:13:31,920
was that developer was only disabling

355
00:13:31,920 --> 00:13:33,600
card on the front-end side but not on

356
00:13:33,600 --> 00:13:34,880
the back answer

357
00:13:34,880 --> 00:13:37,760
so uh i told him that this is about for

358
00:13:37,760 --> 00:13:40,320
like for rate limiting i can get as

359
00:13:40,320 --> 00:13:43,519
money as discount coupon as i want and

360
00:13:43,519 --> 00:13:45,199
still i won't be stopped by the code

361
00:13:45,199 --> 00:13:48,720
itself so basically what he do

362
00:13:48,720 --> 00:13:51,760
sorry i'm only

363
00:13:54,720 --> 00:13:57,199
sorry it's lagging a bit from my side

364
00:13:57,199 --> 00:13:58,720
okay yes this one

365
00:13:58,720 --> 00:14:01,760
yes so what he did that he implemented a

366
00:14:01,760 --> 00:14:03,519
csrf token

367
00:14:03,519 --> 00:14:06,079
to immediately spontaneously i found it

368
00:14:06,079 --> 00:14:09,040
to be a bit bizarre but i think it

369
00:14:09,040 --> 00:14:09,920
worked

370
00:14:09,920 --> 00:14:12,160
what he was doing that he was getting

371
00:14:12,160 --> 00:14:14,240
csr to come from previous token

372
00:14:14,240 --> 00:14:17,120
embedding that into the next request and

373
00:14:17,120 --> 00:14:19,680
it was going on but the thing here is

374
00:14:19,680 --> 00:14:21,519
that i am still

375
00:14:21,519 --> 00:14:23,120
uh

376
00:14:23,120 --> 00:14:24,880
okay there is one question that i am

377
00:14:24,880 --> 00:14:25,839
seeing

378
00:14:25,839 --> 00:14:30,920
that about a git repo just

379
00:14:33,519 --> 00:14:36,320
uh to be honest yes uh to be honest i

380
00:14:36,320 --> 00:14:39,120
have never maintained a git repo but the

381
00:14:39,120 --> 00:14:40,880
code that i would be sharing here i

382
00:14:40,880 --> 00:14:43,519
could share them in my gate repo and

383
00:14:43,519 --> 00:14:45,839
could like give it with this slides so

384
00:14:45,839 --> 00:14:48,000
that everyone can access it i have like

385
00:14:48,000 --> 00:14:51,120
many small scripts uh which everyone can

386
00:14:51,120 --> 00:14:54,240
use so yes there is nothing such as

387
00:14:54,240 --> 00:14:57,440
private it is for public use only yes so

388
00:14:57,440 --> 00:14:59,920
on this one will rotate itself so yes

389
00:14:59,920 --> 00:15:02,320
the csrf token was actually like

390
00:15:02,320 --> 00:15:04,320
stopping the request but only for one

391
00:15:04,320 --> 00:15:06,240
time but let's see if i'm getting a new

392
00:15:06,240 --> 00:15:08,720
csrf token i can

393
00:15:08,720 --> 00:15:09,519
like

394
00:15:09,519 --> 00:15:12,240
get a number of tokens right so what i

395
00:15:12,240 --> 00:15:14,959
did that i simply uh

396
00:15:14,959 --> 00:15:17,199
called the first request grab the csrf

397
00:15:17,199 --> 00:15:20,480
token uh put it into the second request

398
00:15:20,480 --> 00:15:23,360
and start the loop again right and

399
00:15:23,360 --> 00:15:25,600
i i was i mean i i know that it was

400
00:15:25,600 --> 00:15:28,079
vulnerable but there should be some poc

401
00:15:28,079 --> 00:15:29,680
that can show me that at least i'm able

402
00:15:29,680 --> 00:15:32,240
to dump 15 or i would say 20 discount

403
00:15:32,240 --> 00:15:34,959
coupons uh just to show to the developer

404
00:15:34,959 --> 00:15:37,519
so i showed it to developer initially he

405
00:15:37,519 --> 00:15:40,079
thought that no actually it's not valid

406
00:15:40,079 --> 00:15:42,480
but later he fixed it with ip basically

407
00:15:42,480 --> 00:15:45,360
limiting so the gist of this example was

408
00:15:45,360 --> 00:15:46,160
that

409
00:15:46,160 --> 00:15:48,880
uh just by thinking a little bit outside

410
00:15:48,880 --> 00:15:50,079
of

411
00:15:50,079 --> 00:15:52,720
what we provide as a poc i i provided a

412
00:15:52,720 --> 00:15:54,399
bachelor as a poc

413
00:15:54,399 --> 00:15:56,800
and actually it worked so the thing is

414
00:15:56,800 --> 00:15:59,040
that we can sometimes even automate our

415
00:15:59,040 --> 00:16:03,000
pocs as well right

416
00:16:08,560 --> 00:16:09,440
okay

417
00:16:09,440 --> 00:16:10,399
so

418
00:16:10,399 --> 00:16:12,959
uh now uh many of you will be thinking

419
00:16:12,959 --> 00:16:14,399
that uh

420
00:16:14,399 --> 00:16:16,959
how shall i do my own or

421
00:16:16,959 --> 00:16:19,519
such kind of scripting or automation or

422
00:16:19,519 --> 00:16:21,839
such stuff i don't have any background

423
00:16:21,839 --> 00:16:24,079
or anything or any knowledge in that so

424
00:16:24,079 --> 00:16:26,240
see i would suggest that

425
00:16:26,240 --> 00:16:28,639
pick up a language it could be any

426
00:16:28,639 --> 00:16:30,880
language right it could be bash python

427
00:16:30,880 --> 00:16:34,320
or even node.js just pick it up and try

428
00:16:34,320 --> 00:16:36,079
to get the basic context out that how

429
00:16:36,079 --> 00:16:38,079
can you do some basic stuff i would

430
00:16:38,079 --> 00:16:40,480
recommend to start with bash

431
00:16:40,480 --> 00:16:42,800
then moving on to python and then you

432
00:16:42,800 --> 00:16:45,360
can choose go rust or any of these such

433
00:16:45,360 --> 00:16:48,079
fancy languages uh so in this starting

434
00:16:48,079 --> 00:16:50,480
uh maker uh i would say a list of checks

435
00:16:50,480 --> 00:16:52,560
that you would be doing every time many

436
00:16:52,560 --> 00:16:54,399
people have habit that whenever they get

437
00:16:54,399 --> 00:16:56,639
up at the pentester or start about with

438
00:16:56,639 --> 00:16:57,680
the performance

439
00:16:57,680 --> 00:16:59,600
they will start directly forcing a

440
00:16:59,600 --> 00:17:02,160
target so do it just

441
00:17:02,160 --> 00:17:03,920
like make a bash release or make a

442
00:17:03,920 --> 00:17:06,559
script which do this right so the thing

443
00:17:06,559 --> 00:17:08,799
is that give a thought of how this test

444
00:17:08,799 --> 00:17:10,959
could be automated immediately right

445
00:17:10,959 --> 00:17:13,439
just i would say

446
00:17:13,439 --> 00:17:16,079
implement it even though you are not

447
00:17:16,079 --> 00:17:19,599
happy with your uh code just do it even

448
00:17:19,599 --> 00:17:21,760
though it might be the dirtiest code but

449
00:17:21,760 --> 00:17:24,000
with that time you can refine it i i

450
00:17:24,000 --> 00:17:25,839
would give i can give example that when

451
00:17:25,839 --> 00:17:28,559
i was learning bash or in my college

452
00:17:28,559 --> 00:17:31,679
days i literally passed her sqlite file

453
00:17:31,679 --> 00:17:33,600
with bash just to get our data or

454
00:17:33,600 --> 00:17:35,679
something out of it because i was

455
00:17:35,679 --> 00:17:39,520
feeling uh too uh

456
00:17:40,640 --> 00:17:43,679
i was feeling too lazy for it right

457
00:17:43,679 --> 00:17:46,559
that who's gonna learn how to fetch

458
00:17:46,559 --> 00:17:49,360
without it so i i got it from that so

459
00:17:49,360 --> 00:17:52,160
yes you can do it uh basically start

460
00:17:52,160 --> 00:17:54,720
dirty and then refine the core as you go

461
00:17:54,720 --> 00:17:56,480
and let's say once those checks are up

462
00:17:56,480 --> 00:17:58,240
and running as i told earlier you can

463
00:17:58,240 --> 00:18:02,559
like combine them uh with one another of

464
00:18:02,559 --> 00:18:04,720
like let's say for the relevant test and

465
00:18:04,720 --> 00:18:06,640
you have like your own technological

466
00:18:06,640 --> 00:18:09,440
based framework which you can run

467
00:18:09,440 --> 00:18:10,640
like

468
00:18:10,640 --> 00:18:13,280
on any of the target right so this is

469
00:18:13,280 --> 00:18:14,880
the starting point from where you can

470
00:18:14,880 --> 00:18:16,640
become i would be sharing some more

471
00:18:16,640 --> 00:18:20,919
ideas in the next slides as well

472
00:18:28,160 --> 00:18:29,760
okay so

473
00:18:29,760 --> 00:18:31,840
let's start with some of the ideas which

474
00:18:31,840 --> 00:18:34,240
you can implement in your automation

475
00:18:34,240 --> 00:18:36,960
framework so fuzzy scripts

476
00:18:36,960 --> 00:18:39,600
many of the people which would be in

477
00:18:39,600 --> 00:18:41,120
let's say thick line security would be

478
00:18:41,120 --> 00:18:43,840
knowing what a fuzzer is but in web uh

479
00:18:43,840 --> 00:18:46,400
it is uh it's it's used but not at that

480
00:18:46,400 --> 00:18:48,960
smart scheme so basically what a fuzzy a

481
00:18:48,960 --> 00:18:50,960
fuzzer is a program which injects

482
00:18:50,960 --> 00:18:53,760
semi-random random or let's say curated

483
00:18:53,760 --> 00:18:56,720
uh data into a program just to see that

484
00:18:56,720 --> 00:18:59,360
uh how a bugs happen right let's say you

485
00:18:59,360 --> 00:19:00,720
have a list

486
00:19:00,720 --> 00:19:02,480
of

487
00:19:02,480 --> 00:19:05,280
call a single column semicolon and

488
00:19:05,280 --> 00:19:06,559
double quotes and some special

489
00:19:06,559 --> 00:19:08,559
characters you are injecting it in let's

490
00:19:08,559 --> 00:19:11,760
say random headers parameters and such

491
00:19:11,760 --> 00:19:14,480
stuff just to see what error the server

492
00:19:14,480 --> 00:19:15,520
is through

493
00:19:15,520 --> 00:19:17,760
let's say if a stack trace is generating

494
00:19:17,760 --> 00:19:18,559
then

495
00:19:18,559 --> 00:19:19,919
what it is showing

496
00:19:19,919 --> 00:19:21,919
if let's say single comma uh a single

497
00:19:21,919 --> 00:19:24,960
quote is entering is it generating uh

498
00:19:24,960 --> 00:19:27,919
sqlite or let's say a sql or mysql or

499
00:19:27,919 --> 00:19:31,360
even postgrade uh so this error or what

500
00:19:31,360 --> 00:19:33,440
it is so basically what i would suggest

501
00:19:33,440 --> 00:19:36,880
is makes uh some word list out of this

502
00:19:36,880 --> 00:19:39,120
data you can use some open source you

503
00:19:39,120 --> 00:19:41,280
can start with some open source

504
00:19:41,280 --> 00:19:43,120
i would say report is a repository such

505
00:19:43,120 --> 00:19:45,039
as set list and then you can start

506
00:19:45,039 --> 00:19:47,440
curating your own based on that

507
00:19:47,440 --> 00:19:50,240
what you can do is take those word list

508
00:19:50,240 --> 00:19:52,240
select those parameters or which you

509
00:19:52,240 --> 00:19:53,919
want or parameters or writer that you

510
00:19:53,919 --> 00:19:56,640
want to first and uh proxy all your

511
00:19:56,640 --> 00:19:58,480
traffic to the bug okay i think you can

512
00:19:58,480 --> 00:20:00,400
you do or do it quite simply like

513
00:20:00,400 --> 00:20:03,840
basically from tools such as ffuf or

514
00:20:03,840 --> 00:20:05,520
let's say even if with the call you just

515
00:20:05,520 --> 00:20:07,520
need to proxy to your work and then you

516
00:20:07,520 --> 00:20:09,520
can start manually scanning that

517
00:20:09,520 --> 00:20:12,000
what the the logs are from the scans

518
00:20:12,000 --> 00:20:13,840
right what all uh

519
00:20:13,840 --> 00:20:15,760
the response has been gotten from the

520
00:20:15,760 --> 00:20:17,919
server so this is the first basic idea

521
00:20:17,919 --> 00:20:19,280
that i would like to give about the

522
00:20:19,280 --> 00:20:21,520
fuzzing scripts you can make submit such

523
00:20:21,520 --> 00:20:24,240
scripts where you can just need to input

524
00:20:24,240 --> 00:20:27,039
the request and you would have a whole

525
00:20:27,039 --> 00:20:29,440
lot of perk where which you can like go

526
00:20:29,440 --> 00:20:31,520
through work for some

527
00:20:31,520 --> 00:20:33,520
esoteric quantities it could be anything

528
00:20:33,520 --> 00:20:35,360
right depends on the implementation

529
00:20:35,360 --> 00:20:36,320
itself

530
00:20:36,320 --> 00:20:38,799
the only thing that i would like to

531
00:20:38,799 --> 00:20:41,039
add here is just don't spam the target

532
00:20:41,039 --> 00:20:44,240
with heavy traffic sometimes uh

533
00:20:44,240 --> 00:20:46,480
we try to use a tool that is extreme

534
00:20:46,480 --> 00:20:48,480
faster but

535
00:20:48,480 --> 00:20:50,880
it can like take down the server i have

536
00:20:50,880 --> 00:20:53,440
seen that even many times people use

537
00:20:53,440 --> 00:20:55,840
ffuf so much i mean without any

538
00:20:55,840 --> 00:20:58,080
configuration that it took down the

539
00:20:58,080 --> 00:21:00,080
whole server itself not

540
00:21:00,080 --> 00:21:02,320
allowing the legitimate user to access

541
00:21:02,320 --> 00:21:04,559
it in such case people can land into the

542
00:21:04,559 --> 00:21:07,280
problem so yes configure your tools for

543
00:21:07,280 --> 00:21:08,880
speed right

544
00:21:08,880 --> 00:21:11,760
uh the second thing is to use historical

545
00:21:11,760 --> 00:21:13,679
data right what i mean by historical

546
00:21:13,679 --> 00:21:15,919
data and everyone knows right that what

547
00:21:15,919 --> 00:21:19,039
uh way back url is uh it it's actually a

548
00:21:19,039 --> 00:21:22,159
tool that fetches uh past urls from

549
00:21:22,159 --> 00:21:25,280
uh internet dot i i i think web

550
00:21:25,280 --> 00:21:28,880
archive.org yes and also the same is

551
00:21:28,880 --> 00:21:31,120
like alienware and there is a go base

552
00:21:31,120 --> 00:21:33,679
tool which is written uh which is

553
00:21:33,679 --> 00:21:36,080
written to fetch all of these urls what

554
00:21:36,080 --> 00:21:38,480
you can do is simply grab those urls

555
00:21:38,480 --> 00:21:39,520
right

556
00:21:39,520 --> 00:21:42,000
see that where if there have any get

557
00:21:42,000 --> 00:21:45,120
parameters or not and which could be

558
00:21:45,120 --> 00:21:47,360
like integrating uh like interacting

559
00:21:47,360 --> 00:21:49,600
with the backend database uh there is a

560
00:21:49,600 --> 00:21:53,360
cool tool called gf or graphic go or

561
00:21:53,360 --> 00:21:55,679
it is basically a crap based tool

562
00:21:55,679 --> 00:21:58,679
right

563
00:21:58,960 --> 00:22:02,080
uh yes you can basically uh take this uh

564
00:22:02,080 --> 00:22:05,600
yes uh the database and uh

565
00:22:05,600 --> 00:22:06,960
now yes

566
00:22:06,960 --> 00:22:08,960
what i was on that yes you can take this

567
00:22:08,960 --> 00:22:09,840
data

568
00:22:09,840 --> 00:22:13,440
pass the url or query parameters and you

569
00:22:13,440 --> 00:22:16,000
can feed it to sql map like configure it

570
00:22:16,000 --> 00:22:18,000
to the lowest setting so that you can

571
00:22:18,000 --> 00:22:20,320
have a detection and i would suggest to

572
00:22:20,320 --> 00:22:22,720
attach proxy like work

573
00:22:22,720 --> 00:22:26,240
for this and what you can do is that sql

574
00:22:26,240 --> 00:22:28,720
map would be testing for sql injection

575
00:22:28,720 --> 00:22:31,120
and you would you just need to confirm

576
00:22:31,120 --> 00:22:33,200
it up until update the detection phase

577
00:22:33,200 --> 00:22:35,600
only and let's see uh the detection

578
00:22:35,600 --> 00:22:37,760
confirms that there is a sequel here you

579
00:22:37,760 --> 00:22:40,400
can like go with manual experimentation

580
00:22:40,400 --> 00:22:42,240
so you can just think that how much

581
00:22:42,240 --> 00:22:45,360
effort your was saved uh for finding the

582
00:22:45,360 --> 00:22:47,520
sequel it's totally automatic process i

583
00:22:47,520 --> 00:22:49,679
won't say it won't it will find 99 of

584
00:22:49,679 --> 00:22:51,840
this equally but there is a chance that

585
00:22:51,840 --> 00:22:54,240
at least if it is a well-known target

586
00:22:54,240 --> 00:22:56,000
then at least uh

587
00:22:56,000 --> 00:22:57,919
one sequel would be sqlite would be

588
00:22:57,919 --> 00:22:59,600
found the same ideology could be

589
00:22:59,600 --> 00:23:02,480
implemented for excesses itself there

590
00:23:02,480 --> 00:23:04,120
are many tools such as

591
00:23:04,120 --> 00:23:06,159
h-a-h-w-l i know i don't know how to

592
00:23:06,159 --> 00:23:08,720
pronounce it but it's a really and good

593
00:23:08,720 --> 00:23:10,799
automatic tool to find seek to find

594
00:23:10,799 --> 00:23:13,440
accesses you can like give it urls it

595
00:23:13,440 --> 00:23:15,840
will just randomly

596
00:23:15,840 --> 00:23:19,200
enter payload there and yes uh you can

597
00:23:19,200 --> 00:23:21,520
see again in the parkour itself right

598
00:23:21,520 --> 00:23:24,080
because very there is no way the tools

599
00:23:24,080 --> 00:23:26,240
itself could exploit it as well as give

600
00:23:26,240 --> 00:23:28,480
you the verification uh i would say

601
00:23:28,480 --> 00:23:31,200
limit your uh such kind of ideas to

602
00:23:31,200 --> 00:23:33,440
detection only and exploitation could be

603
00:23:33,440 --> 00:23:36,600
done manually

604
00:23:40,480 --> 00:23:41,360
okay

605
00:23:41,360 --> 00:23:42,240
uh

606
00:23:42,240 --> 00:23:44,320
this is the last idea of mine which i'm

607
00:23:44,320 --> 00:23:46,400
going to talk about is

608
00:23:46,400 --> 00:23:48,080
let's say uh

609
00:23:48,080 --> 00:23:50,880
i i would say that many of the numerous

610
00:23:50,880 --> 00:23:53,279
leads or i would say like people of

611
00:23:53,279 --> 00:23:55,600
information security have made such good

612
00:23:55,600 --> 00:23:57,760
tools uh that that is available for us

613
00:23:57,760 --> 00:24:01,679
let's say ferox master ffuf g cow nuclei

614
00:24:01,679 --> 00:24:04,400
and bot i mean the list is quite quite

615
00:24:04,400 --> 00:24:06,720
quite exhausting you can like

616
00:24:06,720 --> 00:24:08,640
search on let's say

617
00:24:08,640 --> 00:24:11,039
secret finder link finder you can find

618
00:24:11,039 --> 00:24:13,200
tool related to it so what i would

619
00:24:13,200 --> 00:24:15,760
suggest is according to your methodology

620
00:24:15,760 --> 00:24:16,559
just

621
00:24:16,559 --> 00:24:18,159
grab those tools and change them

622
00:24:18,159 --> 00:24:20,799
together right it could be used for any

623
00:24:20,799 --> 00:24:22,559
and anything for example what i have

624
00:24:22,559 --> 00:24:23,760
done is

625
00:24:23,760 --> 00:24:26,159
that you can grab a list of domains yeah

626
00:24:26,159 --> 00:24:29,120
right you can uh request gout to

627
00:24:29,120 --> 00:24:30,960
i mean all the list of domains could be

628
00:24:30,960 --> 00:24:32,880
input uh could be used as input for

629
00:24:32,880 --> 00:24:34,960
governor the output of the governor

630
00:24:34,960 --> 00:24:37,440
which be a list of euros could be like

631
00:24:37,440 --> 00:24:39,440
given to a graph command

632
00:24:39,440 --> 00:24:42,320
where each and every url is piped into

633
00:24:42,320 --> 00:24:44,000
this graph function where i am just

634
00:24:44,000 --> 00:24:46,080
fetching js files

635
00:24:46,080 --> 00:24:48,480
and this js files could be given input

636
00:24:48,480 --> 00:24:49,760
into the truffle

637
00:24:49,760 --> 00:24:51,600
actually truffle hog is a tool which

638
00:24:51,600 --> 00:24:54,559
fetches secrets from the gs file itself

639
00:24:54,559 --> 00:24:56,880
so yes uh you have like made an

640
00:24:56,880 --> 00:24:59,520
automation to find uh secrets from the

641
00:24:59,520 --> 00:25:00,400
javascript

642
00:25:00,400 --> 00:25:03,120
same can be used to find extract uh like

643
00:25:03,120 --> 00:25:07,039
uh links uh in or apis from the uh js

644
00:25:07,039 --> 00:25:09,360
file itself which are not been called so

645
00:25:09,360 --> 00:25:11,039
this is your automation it it's quite

646
00:25:11,039 --> 00:25:13,600
simple right you can just tool you can

647
00:25:13,600 --> 00:25:15,440
actually you are just basing your

648
00:25:15,440 --> 00:25:17,760
automation on someone else's work and

649
00:25:17,760 --> 00:25:19,840
your works is also reduced as well as

650
00:25:19,840 --> 00:25:21,360
the other person who would also be happy

651
00:25:21,360 --> 00:25:23,840
that history is bad he's been used

652
00:25:23,840 --> 00:25:25,520
industry

653
00:25:25,520 --> 00:25:29,440
okay so this was the last idea of mine

654
00:25:29,440 --> 00:25:32,480
okay just a second

655
00:25:35,120 --> 00:25:37,039
okay uh

656
00:25:37,039 --> 00:25:40,240
a bit of the warning before we like

657
00:25:40,240 --> 00:25:43,039
exit or complete our talk the first

658
00:25:43,039 --> 00:25:46,000
thing is the automation is here just to

659
00:25:46,000 --> 00:25:48,320
help you a bit it's like a additional

660
00:25:48,320 --> 00:25:52,240
hand that you can use in your pen test

661
00:25:52,240 --> 00:25:56,720
don't rely on it 100 right that i would

662
00:25:56,720 --> 00:25:58,880
use such automation and my work would

663
00:25:58,880 --> 00:26:01,679
get done the thing can replace manual

664
00:26:01,679 --> 00:26:04,640
testing ever even if either work from

665
00:26:04,640 --> 00:26:06,720
the all over the world and could control

666
00:26:06,720 --> 00:26:08,960
our brain it won't be able to pander

667
00:26:08,960 --> 00:26:10,559
because humans still maybe would be

668
00:26:10,559 --> 00:26:12,960
coding it right the the second thing is

669
00:26:12,960 --> 00:26:15,440
that over reliance on such frameworks

670
00:26:15,440 --> 00:26:17,600
could result into a high number of false

671
00:26:17,600 --> 00:26:20,640
positives and could uh like result into

672
00:26:20,640 --> 00:26:23,120
the missing of for critical contributes

673
00:26:23,120 --> 00:26:24,400
so i would suggest

674
00:26:24,400 --> 00:26:26,799
go with the manual pen test

675
00:26:26,799 --> 00:26:28,080
uh

676
00:26:28,080 --> 00:26:30,320
like get some experience and with some

677
00:26:30,320 --> 00:26:31,600
experience you would be knowing what

678
00:26:31,600 --> 00:26:32,799
tests to do

679
00:26:32,799 --> 00:26:35,039
and you can like input your knowledge to

680
00:26:35,039 --> 00:26:36,880
make such automations right

681
00:26:36,880 --> 00:26:38,880
so i have completed

682
00:26:38,880 --> 00:26:41,039
my talk here

683
00:26:41,039 --> 00:26:42,080
any of

684
00:26:42,080 --> 00:26:46,158
the questions that anyone want to ask

685
00:26:50,799 --> 00:26:52,799
okay i will be taking it from the chat

686
00:26:52,799 --> 00:26:54,320
itself

687
00:26:54,320 --> 00:26:56,159
uh yes so the first question that i

688
00:26:56,159 --> 00:26:58,559
answered was that yes i have some of the

689
00:26:58,559 --> 00:27:00,559
scripts which i would be giving out in

690
00:27:00,559 --> 00:27:03,120
my github repo uh which i will be

691
00:27:03,120 --> 00:27:04,000
sharing

692
00:27:04,000 --> 00:27:06,559
on on the slide itself so no parts of

693
00:27:06,559 --> 00:27:08,799
worry you can like

694
00:27:08,799 --> 00:27:10,640
grab that code and use it for your own

695
00:27:10,640 --> 00:27:11,840
purpose

696
00:27:11,840 --> 00:27:12,640
the

697
00:27:12,640 --> 00:27:15,200
second is is there any repos of fuzzing

698
00:27:15,200 --> 00:27:17,120
scripts to use with

699
00:27:17,120 --> 00:27:21,520
or osf uh i'm not aware of such uh

700
00:27:21,520 --> 00:27:24,240
scripts already that has been made uh my

701
00:27:24,240 --> 00:27:27,279
point in the uh in this slides was that

702
00:27:27,279 --> 00:27:30,080
you can basically like make some bash

703
00:27:30,080 --> 00:27:32,640
script right which makes such a request

704
00:27:32,640 --> 00:27:34,559
and it is proxy throughput

705
00:27:34,559 --> 00:27:36,399
you don't need any scripts for burp

706
00:27:36,399 --> 00:27:38,559
itself you are just using the purpose of

707
00:27:38,559 --> 00:27:40,320
proxy uh

708
00:27:40,320 --> 00:27:42,480
let's say uh as your browser is

709
00:27:42,480 --> 00:27:45,279
processing data into the box

710
00:27:45,279 --> 00:27:47,279
same as the call would be proxying your

711
00:27:47,279 --> 00:27:49,760
data through the report so your work

712
00:27:49,760 --> 00:27:52,240
would be the log or logs where you can

713
00:27:52,240 --> 00:27:54,799
see that what request was initiated and

714
00:27:54,799 --> 00:27:59,200
what response were given so in that way

715
00:28:00,240 --> 00:28:04,399
i don't any other questions than this

716
00:28:11,360 --> 00:28:14,000
okay and apart from that if anyone have

717
00:28:14,000 --> 00:28:16,240
any questions regarding to this talk or

718
00:28:16,240 --> 00:28:18,799
wants to talk with me or do anything you

719
00:28:18,799 --> 00:28:21,679
can just reach out at my twitter handle

720
00:28:21,679 --> 00:28:24,000
that is mentioned here

721
00:28:24,000 --> 00:28:27,880
and i would be happy to help

722
00:28:33,200 --> 00:28:35,200
okay

723
00:28:35,200 --> 00:28:38,840
would like to ask

724
00:28:46,960 --> 00:28:48,880
so thanks everyone for

725
00:28:48,880 --> 00:28:49,840
for

726
00:28:49,840 --> 00:28:51,760
giving out the time and really

727
00:28:51,760 --> 00:28:55,399
appreciate this opportunity

728
00:29:23,840 --> 00:29:25,918
you

