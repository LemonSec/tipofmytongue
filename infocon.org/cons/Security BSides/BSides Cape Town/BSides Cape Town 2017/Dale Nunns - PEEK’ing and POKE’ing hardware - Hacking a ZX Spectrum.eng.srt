1
00:00:00,030 --> 00:00:03,199
<font color="#E5E5E5">okay hi</font>

2
00:00:05,540 --> 00:00:13,440
so yeah this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the talk peeking poking</font>

3
00:00:10,260 --> 00:00:15,240
memory<font color="#E5E5E5"> hacking a ZX Spectrum so those of</font>

4
00:00:13,440 --> 00:00:18,359
you curious

5
00:00:15,240 --> 00:00:20,789
I'm Dale<font color="#CCCCCC"> I work by day as a software</font>

6
00:00:18,359 --> 00:00:22,949
developer<font color="#E5E5E5"> at</font><font color="#CCCCCC"> Kempton called sign it I do</font>

7
00:00:20,789 --> 00:00:25,590
lots of<font color="#E5E5E5"> mobile stuff and all</font><font color="#CCCCCC"> kinds other</font>

8
00:00:22,949 --> 00:00:27,449
crazy things<font color="#E5E5E5"> I'm not a security</font>

9
00:00:25,590 --> 00:00:27,779
consultant<font color="#CCCCCC"> I don't do any of that</font><font color="#E5E5E5"> kind</font>

10
00:00:27,449 --> 00:00:32,210
<font color="#E5E5E5">of stuff</font>

11
00:00:27,779 --> 00:00:35,850
I just goof around on weekends

12
00:00:32,210 --> 00:00:36,989
if you want<font color="#E5E5E5"> follow me on</font><font color="#CCCCCC"> Twitter</font><font color="#E5E5E5"> and</font>

13
00:00:35,850 --> 00:00:41,129
that's<font color="#E5E5E5"> my webpage</font>

14
00:00:36,989 --> 00:00:44,640
<font color="#E5E5E5">I never</font><font color="#CCCCCC"> update so we'll start</font><font color="#E5E5E5"> off with</font>

15
00:00:41,129 --> 00:00:47,730
<font color="#CCCCCC">the 1980s judging by</font><font color="#E5E5E5"> the room most you</font>

16
00:00:44,640 --> 00:00:49,230
probably<font color="#CCCCCC"> remember this time period for</font>

17
00:00:47,730 --> 00:00:51,599
those who don't will give you a quick

18
00:00:49,230 --> 00:00:55,890
intro I'm sure you'll recognize those

19
00:00:51,600 --> 00:00:59,219
guys sure you<font color="#E5E5E5"> remember</font><font color="#CCCCCC"> that and who</font><font color="#E5E5E5"> can</font>

20
00:00:55,890 --> 00:01:00,469
<font color="#E5E5E5">forget him and my</font><font color="#CCCCCC"> favorite MacGyver</font><font color="#E5E5E5"> that</font>

21
00:00:59,219 --> 00:01:02,910
was the 80s

22
00:01:00,469 --> 00:01:04,589
<font color="#E5E5E5">for those of you don't know this was</font>

23
00:01:02,910 --> 00:01:08,640
what computing in<font color="#E5E5E5"> the 80s looked like</font>

24
00:01:04,589 --> 00:01:11,789
<font color="#E5E5E5">that is a Commodore 64 very popular old</font>

25
00:01:08,640 --> 00:01:13,500
computer<font color="#E5E5E5"> that there is a BBC micro and</font>

26
00:01:11,790 --> 00:01:18,509
pretty<font color="#E5E5E5"> much what I learned to program on</font>

27
00:01:13,500 --> 00:01:21,539
and that is an<font color="#CCCCCC"> Apple 2 now all those</font>

28
00:01:18,509 --> 00:01:23,689
computers are<font color="#CCCCCC"> really cool the problem is</font>

29
00:01:21,540 --> 00:01:30,210
at that<font color="#E5E5E5"> time</font><font color="#CCCCCC"> they were</font><font color="#E5E5E5"> very expensive</font>

30
00:01:23,689 --> 00:01:33,210
<font color="#CCCCCC">this is the Sinclair ZX Spectrum it was</font>

31
00:01:30,210 --> 00:01:35,970
a relatively<font color="#CCCCCC"> cheap machine and even in</font>

32
00:01:33,210 --> 00:01:37,530
<font color="#E5E5E5">South Africa it was very popular the</font>

33
00:01:35,970 --> 00:01:40,650
computer was made by company called

34
00:01:37,530 --> 00:01:44,189
<font color="#E5E5E5">Sinclair research which was created by</font>

35
00:01:40,650 --> 00:01:46,049
Clive Sinclair<font color="#E5E5E5"> now Sir Clive Sinclair</font><font color="#CCCCCC"> it</font>

36
00:01:44,189 --> 00:01:49,798
was their third<font color="#E5E5E5"> computer</font><font color="#CCCCCC"> it was first</font>

37
00:01:46,049 --> 00:01:51,899
released on 23rd of April 1982 which

38
00:01:49,799 --> 00:01:56,250
means they're<font color="#E5E5E5"> technically this machine</font>

39
00:01:51,899 --> 00:01:58,409
is older than<font color="#E5E5E5"> I am</font><font color="#CCCCCC"> it was replaced it</font>

40
00:01:56,250 --> 00:02:01,799
rose<font color="#E5E5E5"> the replacement to the zx80</font><font color="#CCCCCC"> in the</font>

41
00:01:58,409 --> 00:02:03,060
zx81<font color="#E5E5E5"> if you ever get to play with those</font>

42
00:02:01,799 --> 00:02:05,430
machines<font color="#CCCCCC"> they're very interesting</font>

43
00:02:03,060 --> 00:02:07,110
pressing a keyboard<font color="#E5E5E5"> when you type on the</font>

44
00:02:05,430 --> 00:02:09,179
keyboard<font color="#CCCCCC"> the screen switches</font><font color="#E5E5E5"> off because</font>

45
00:02:07,110 --> 00:02:12,989
<font color="#E5E5E5">it can't drive both the screen and the</font>

46
00:02:09,179 --> 00:02:14,010
key read the keys at<font color="#CCCCCC"> the same time over</font>

47
00:02:12,989 --> 00:02:16,140
<font color="#E5E5E5">five million</font>

48
00:02:14,010 --> 00:02:17,939
of these ZX<font color="#E5E5E5"> Spectrum</font><font color="#CCCCCC"> Xin various models</font>

49
00:02:16,140 --> 00:02:20,640
were<font color="#E5E5E5"> assault that excludes the clones</font>

50
00:02:17,939 --> 00:02:24,780
<font color="#E5E5E5">they were copied all over</font><font color="#CCCCCC"> Russia and</font>

51
00:02:20,640 --> 00:02:28,048
places like<font color="#CCCCCC"> that and I was only</font><font color="#E5E5E5"> finally</font>

52
00:02:24,780 --> 00:02:31,440
discontinued in 1992<font color="#CCCCCC"> Alan Sugar's</font>

53
00:02:28,049 --> 00:02:32,790
company actually<font color="#E5E5E5"> bought over most of</font>

54
00:02:31,440 --> 00:02:34,319
Sinclair's research and they<font color="#E5E5E5"> just</font>

55
00:02:32,790 --> 00:02:37,319
carried on<font color="#CCCCCC"> making them because they were</font>

56
00:02:34,319 --> 00:02:40,409
<font color="#E5E5E5">selling</font><font color="#CCCCCC"> and people are making money so</font>

57
00:02:37,319 --> 00:02:42,328
some details<font color="#CCCCCC"> about the ZX Spectrum the</font>

58
00:02:40,409 --> 00:02:45,140
one I have yeah and the one<font color="#E5E5E5"> I've hacked</font>

59
00:02:42,329 --> 00:02:48,930
is an issue<font color="#CCCCCC"> three</font><font color="#E5E5E5"> be released in 1983</font>

60
00:02:45,140 --> 00:02:50,720
<font color="#CCCCCC">it's got a zilog z80 CPU running it a</font>

61
00:02:48,930 --> 00:02:54,870
<font color="#CCCCCC">hole 3.5</font><font color="#E5E5E5"> megahertz</font>

62
00:02:50,720 --> 00:02:56,700
it's got a 16<font color="#CCCCCC"> K ROM</font><font color="#E5E5E5"> forty-eight K</font><font color="#CCCCCC"> Ram</font>

63
00:02:54,870 --> 00:02:58,950
although technically originally they got

64
00:02:56,700 --> 00:03:02,310
released<font color="#E5E5E5"> with 16 K and you had to buy</font>

65
00:02:58,950 --> 00:03:04,500
the extra 32 K upgrade thankfully by the

66
00:03:02,310 --> 00:03:07,530
time they got<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> 3b they decided</font><font color="#CCCCCC"> to</font>

67
00:03:04,500 --> 00:03:10,319
include it it's got an RF modulator<font color="#CCCCCC"> for</font>

68
00:03:07,530 --> 00:03:14,099
<font color="#E5E5E5">TV output a tape interface</font><font color="#CCCCCC"> from air</font>

69
00:03:10,319 --> 00:03:16,078
<font color="#CCCCCC">storage an edge connector and the iconic</font>

70
00:03:14,099 --> 00:03:17,429
<font color="#E5E5E5">rubber keyboard which if you ever used</font>

71
00:03:16,079 --> 00:03:20,579
<font color="#E5E5E5">one in things you'll know is the worst</font>

72
00:03:17,430 --> 00:03:22,500
<font color="#E5E5E5">thing ever created so for those of</font><font color="#CCCCCC"> you</font>

73
00:03:20,579 --> 00:03:24,810
who don't understand<font color="#E5E5E5"> what I mean by mass</font>

74
00:03:22,500 --> 00:03:27,569
storage this<font color="#E5E5E5"> is what</font><font color="#CCCCCC"> 80s mass storage</font>

75
00:03:24,810 --> 00:03:29,069
looked like that's<font color="#E5E5E5"> what you stored all</font>

76
00:03:27,569 --> 00:03:31,500
your<font color="#CCCCCC"> programs on and that's what you</font>

77
00:03:29,069 --> 00:03:37,048
copied when you wanted<font color="#E5E5E5"> to borrow someone</font>

78
00:03:31,500 --> 00:03:38,549
else's program yeah<font color="#CCCCCC"> obviously destroyed</font>

79
00:03:37,049 --> 00:03:38,940
by heat<font color="#E5E5E5"> Sun and all kinds of other</font>

80
00:03:38,549 --> 00:03:41,970
things

81
00:03:38,940 --> 00:03:43,829
<font color="#E5E5E5">and good luck</font><font color="#CCCCCC"> to anyone who</font><font color="#E5E5E5"> actually got</font>

82
00:03:41,970 --> 00:03:48,150
them successfully to load on first try

83
00:03:43,829 --> 00:03:49,790
<font color="#E5E5E5">they never seem to interestingly in the</font>

84
00:03:48,150 --> 00:03:53,250
<font color="#E5E5E5">eighties there was actually open source</font>

85
00:03:49,790 --> 00:03:55,590
<font color="#CCCCCC">github</font><font color="#E5E5E5"> looked like this for those of you</font>

86
00:03:53,250 --> 00:03:56,909
<font color="#CCCCCC">don't know in the back</font><font color="#E5E5E5"> of magazines</font><font color="#CCCCCC"> and</font>

87
00:03:55,590 --> 00:03:59,579
that your<font color="#E5E5E5"> local library you could buy</font>

88
00:03:56,909 --> 00:04:02,190
books with that that is actually basic

89
00:03:59,579 --> 00:04:05,040
code<font color="#E5E5E5"> it's all you had to type it in</font>

90
00:04:02,190 --> 00:04:06,989
there was little indicators to say hey

91
00:04:05,040 --> 00:04:10,379
this<font color="#CCCCCC"> is a con for Commodore this is for</font>

92
00:04:06,989 --> 00:04:11,879
<font color="#CCCCCC">a Sinclair</font><font color="#E5E5E5"> etc the favorite was you type</font>

93
00:04:10,379 --> 00:04:13,470
all this in someone would pull the plug

94
00:04:11,879 --> 00:04:15,358
<font color="#CCCCCC">in the thing</font><font color="#E5E5E5"> would reset and you'd have</font>

95
00:04:13,470 --> 00:04:16,940
<font color="#CCCCCC">to start again</font><font color="#E5E5E5"> and worse</font><font color="#CCCCCC"> you made a</font>

96
00:04:15,359 --> 00:04:19,859
<font color="#CCCCCC">mistake somewhere</font>

97
00:04:16,940 --> 00:04:22,409
I'm not<font color="#CCCCCC"> joking when</font><font color="#E5E5E5"> I say this actual</font>

98
00:04:19,858 --> 00:04:24,388
code<font color="#E5E5E5"> there is a zoomed in image you can</font>

99
00:04:22,409 --> 00:04:26,219
see<font color="#CCCCCC"> the data lines etc</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> of that is</font>

100
00:04:24,389 --> 00:04:27,960
<font color="#CCCCCC">actually machine code</font><font color="#E5E5E5"> so the trick to</font>

101
00:04:26,219 --> 00:04:30,030
<font color="#CCCCCC">getting speed was you did</font>

102
00:04:27,960 --> 00:04:31,680
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> coding basic and then the speed</font>

103
00:04:30,030 --> 00:04:35,299
<font color="#E5E5E5">optimize things you did in machine code</font>

104
00:04:31,680 --> 00:04:37,470
as data entries and loaded them<font color="#E5E5E5"> in</font>

105
00:04:35,300 --> 00:04:39,300
programming on these machines was all

106
00:04:37,470 --> 00:04:41,280
done in a basic interpreter<font color="#E5E5E5"> those of you</font>

107
00:04:39,300 --> 00:04:44,160
played with the<font color="#CCCCCC"> badges</font><font color="#E5E5E5"> will find one on</font>

108
00:04:41,280 --> 00:04:45,479
<font color="#E5E5E5">there</font><font color="#CCCCCC"> that was the standard way the</font>

109
00:04:44,160 --> 00:04:46,979
<font color="#E5E5E5">machine booted up into a basic</font>

110
00:04:45,479 --> 00:04:49,590
interpreter and you<font color="#CCCCCC"> coded all</font><font color="#E5E5E5"> your pro</font>

111
00:04:46,979 --> 00:04:52,289
code in basic the other option was

112
00:04:49,590 --> 00:04:54,568
machine code<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> after you've</font>

113
00:04:52,289 --> 00:04:57,750
assembled your<font color="#E5E5E5"> code there was assembly</font>

114
00:04:54,569 --> 00:04:59,610
available and you if you were lucky

115
00:04:57,750 --> 00:05:01,139
<font color="#E5E5E5">enough you could get a tape load the</font>

116
00:04:59,610 --> 00:05:02,250
tape and you've got an assembler but

117
00:05:01,139 --> 00:05:04,229
there was no real point because the

118
00:05:02,250 --> 00:05:05,970
assembly<font color="#E5E5E5"> matched over to the machine</font>

119
00:05:04,229 --> 00:05:08,039
code relatively easy you could hand

120
00:05:05,970 --> 00:05:10,080
assemble the code there were no real

121
00:05:08,039 --> 00:05:12,930
compilers<font color="#E5E5E5"> you have to remember this</font>

122
00:05:10,080 --> 00:05:15,508
<font color="#E5E5E5">machine ran at</font><font color="#CCCCCC"> 3.5</font><font color="#E5E5E5"> megahertz and at</font><font color="#CCCCCC"> 48k</font>

123
00:05:12,930 --> 00:05:16,889
<font color="#CCCCCC">ram</font><font color="#E5E5E5"> you're not gonna put a C compiler in</font>

124
00:05:15,509 --> 00:05:19,080
that<font color="#E5E5E5"> easily you're not gonna put a</font>

125
00:05:16,889 --> 00:05:20,729
pascal compiler in that easy<font color="#E5E5E5"> so</font><font color="#CCCCCC"> normally</font>

126
00:05:19,080 --> 00:05:22,500
what<font color="#E5E5E5"> you would do is you</font><font color="#CCCCCC"> would run</font><font color="#E5E5E5"> your</font>

127
00:05:20,729 --> 00:05:24,270
<font color="#CCCCCC">write</font><font color="#E5E5E5"> your code on a much more</font><font color="#CCCCCC"> powerful</font>

128
00:05:22,500 --> 00:05:26,849
machine compile it<font color="#CCCCCC"> down and transfer</font><font color="#E5E5E5"> it</font>

129
00:05:24,270 --> 00:05:28,770
across<font color="#E5E5E5"> that's assuming you</font><font color="#CCCCCC"> actually</font>

130
00:05:26,849 --> 00:05:32,130
bother to use that a lot of<font color="#E5E5E5"> the code was</font>

131
00:05:28,770 --> 00:05:37,469
<font color="#E5E5E5">written as hand coded fine-tuned machine</font>

132
00:05:32,130 --> 00:05:40,289
code so why on earth am i hacking a 35

133
00:05:37,470 --> 00:05:42,030
<font color="#E5E5E5">year old computer so I guess the first</font>

134
00:05:40,289 --> 00:05:45,690
thing<font color="#E5E5E5"> is unlikely to</font><font color="#CCCCCC"> be used in the AI</font>

135
00:05:42,030 --> 00:05:47,309
uprising or anything else like<font color="#CCCCCC"> that the</font>

136
00:05:45,690 --> 00:05:49,440
<font color="#E5E5E5">other one</font><font color="#CCCCCC"> is I'm not</font><font color="#E5E5E5"> gonna</font><font color="#CCCCCC"> get arrested</font>

137
00:05:47,310 --> 00:05:52,500
<font color="#CCCCCC">no black helicopters</font><font color="#E5E5E5"> going to land in my</font>

138
00:05:49,440 --> 00:05:54,240
backyard<font color="#E5E5E5"> or anything else no one cares</font>

139
00:05:52,500 --> 00:05:56,250
about<font color="#E5E5E5"> this machine anymore the</font>

140
00:05:54,240 --> 00:05:58,289
copyrights<font color="#CCCCCC"> have expired a lot</font><font color="#E5E5E5"> of the</font>

141
00:05:56,250 --> 00:05:59,729
<font color="#CCCCCC">companies have</font><font color="#E5E5E5"> opened what is</font><font color="#CCCCCC"> there</font>

142
00:05:58,289 --> 00:06:01,469
<font color="#CCCCCC">available you can</font><font color="#E5E5E5"> download the</font>

143
00:05:59,729 --> 00:06:04,250
schematics<font color="#E5E5E5"> for these machines</font><font color="#CCCCCC"> you can</font>

144
00:06:01,469 --> 00:06:08,430
<font color="#CCCCCC">get all the information online</font>

145
00:06:04,250 --> 00:06:10,320
truthfully that's<font color="#E5E5E5"> the reason I enjoy</font>

146
00:06:08,430 --> 00:06:13,530
<font color="#E5E5E5">learning new</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> and this seemed</font><font color="#CCCCCC"> like</font>

147
00:06:10,320 --> 00:06:16,229
a fun<font color="#CCCCCC"> challenge so the cool thing about</font>

148
00:06:13,530 --> 00:06:18,900
a ZX<font color="#CCCCCC"> spectrum is one person can truly</font>

149
00:06:16,229 --> 00:06:21,840
understand<font color="#E5E5E5"> this machine what I mean by</font>

150
00:06:18,900 --> 00:06:29,008
<font color="#CCCCCC">that is that is</font><font color="#E5E5E5"> the complete</font><font color="#CCCCCC"> mainboard</font>

151
00:06:21,840 --> 00:06:31,349
<font color="#CCCCCC">of my ZX</font><font color="#E5E5E5"> spectrum that's the z80</font><font color="#CCCCCC"> cpu</font><font color="#E5E5E5"> OVA</font>

152
00:06:29,009 --> 00:06:33,180
is the ula<font color="#E5E5E5"> now the ula handles the</font>

153
00:06:31,349 --> 00:06:35,250
drawing functions<font color="#E5E5E5"> and</font><font color="#CCCCCC"> everything else so</font>

154
00:06:33,180 --> 00:06:38,339
<font color="#E5E5E5">what it does is there's a portion of the</font>

155
00:06:35,250 --> 00:06:41,010
memory<font color="#CCCCCC"> the ull ula takes</font><font color="#E5E5E5"> that memory and</font>

156
00:06:38,339 --> 00:06:41,520
draws<font color="#CCCCCC"> it to your screen</font><font color="#E5E5E5"> the ula</font><font color="#CCCCCC"> is will</font>

157
00:06:41,010 --> 00:06:44,190
<font color="#E5E5E5">service</font>

158
00:06:41,520 --> 00:06:45,810
<font color="#CCCCCC">one support</font><font color="#E5E5E5"> for the clock of the CPU so</font>

159
00:06:44,190 --> 00:06:47,430
what happens is there's<font color="#CCCCCC"> a bunch</font><font color="#E5E5E5"> of</font>

160
00:06:45,810 --> 00:06:49,379
<font color="#CCCCCC">crystals there that generate the clock</font>

161
00:06:47,430 --> 00:06:51,750
signal they flow<font color="#E5E5E5"> into the ula and then</font>

162
00:06:49,379 --> 00:06:55,080
the ula sends their clock signal on to

163
00:06:51,750 --> 00:06:58,590
<font color="#E5E5E5">the z80</font><font color="#CCCCCC"> cpu what this means is the ula</font>

164
00:06:55,080 --> 00:07:00,258
can pause the CPU<font color="#E5E5E5"> or stretch time by</font>

165
00:06:58,590 --> 00:07:03,750
<font color="#E5E5E5">making those pulses shorter and longer</font>

166
00:07:00,259 --> 00:07:06,210
<font color="#E5E5E5">which makes for interesting things</font><font color="#CCCCCC"> but</font>

167
00:07:03,750 --> 00:07:08,370
<font color="#CCCCCC">basically if the ula decides to draw to</font>

168
00:07:06,210 --> 00:07:10,289
the screen<font color="#E5E5E5"> it can hold the</font><font color="#CCCCCC"> CPU without</font>

169
00:07:08,370 --> 00:07:12,150
actually holding the CPU just<font color="#E5E5E5"> saying</font>

170
00:07:10,289 --> 00:07:13,409
your clock<font color="#CCCCCC"> cycle is</font><font color="#E5E5E5"> going to take a</font>

171
00:07:12,150 --> 00:07:14,638
<font color="#E5E5E5">little bit longer this time</font><font color="#CCCCCC"> around and</font>

172
00:07:13,409 --> 00:07:16,530
<font color="#E5E5E5">it goes</font><font color="#CCCCCC"> and reach from the memory and</font>

173
00:07:14,639 --> 00:07:18,630
<font color="#E5E5E5">writes to the screen it means hacking</font>

174
00:07:16,530 --> 00:07:22,349
this thing is<font color="#E5E5E5"> really weird as you'll see</font>

175
00:07:18,630 --> 00:07:24,750
other<font color="#CCCCCC"> than</font><font color="#E5E5E5"> that over here is the 16 K</font>

176
00:07:22,349 --> 00:07:27,539
<font color="#CCCCCC">Ram</font><font color="#E5E5E5"> that's what original</font><font color="#CCCCCC"> shift on the</font>

177
00:07:24,750 --> 00:07:29,789
machine<font color="#E5E5E5"> that should be on this model</font>

178
00:07:27,539 --> 00:07:32,400
<font color="#E5E5E5">DRAM which means that it's got to be</font>

179
00:07:29,789 --> 00:07:34,759
constantly refreshed over there's the

180
00:07:32,400 --> 00:07:37,229
<font color="#E5E5E5">upper</font><font color="#CCCCCC"> ram which</font><font color="#E5E5E5"> is the 32 k</font><font color="#CCCCCC"> ram</font>

181
00:07:34,759 --> 00:07:39,479
<font color="#E5E5E5">interestingly a lot of those ram chips</font>

182
00:07:37,229 --> 00:07:42,150
were normally<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> 8 K but</font><font color="#CCCCCC"> they</font>

183
00:07:39,479 --> 00:07:44,430
were actually 16 K<font color="#CCCCCC"> RAM chips</font><font color="#E5E5E5"> they just</font>

184
00:07:42,150 --> 00:07:47,219
use half<font color="#E5E5E5"> that way they could buy dodgy</font>

185
00:07:44,430 --> 00:07:49,889
16 K Ram<font color="#E5E5E5"> where and then pick which half</font>

186
00:07:47,219 --> 00:07:53,639
of<font color="#E5E5E5"> the chip worked</font><font color="#CCCCCC"> this machine was</font>

187
00:07:49,889 --> 00:07:56,639
built to a price as<font color="#CCCCCC"> youth becomes</font>

188
00:07:53,639 --> 00:07:58,949
evident the more you play with<font color="#CCCCCC"> them over</font>

189
00:07:56,639 --> 00:08:01,080
there is the 16 K<font color="#E5E5E5"> ROM which holds</font><font color="#CCCCCC"> bate a</font>

190
00:07:58,949 --> 00:08:03,659
basic interpreter and whatever minimal

191
00:08:01,080 --> 00:08:06,330
codes required to boot the<font color="#E5E5E5"> machine that</font>

192
00:08:03,659 --> 00:08:08,669
is<font color="#E5E5E5"> the RF modulator</font><font color="#CCCCCC"> on these machines</font>

193
00:08:06,330 --> 00:08:10,680
<font color="#E5E5E5">back in the day no one had you didn't</font>

194
00:08:08,669 --> 00:08:13,349
have high<font color="#CCCCCC"> resolution displays not at</font>

195
00:08:10,680 --> 00:08:15,300
home so what<font color="#E5E5E5"> you would do is you'd plug</font>

196
00:08:13,349 --> 00:08:19,710
this thing into your<font color="#E5E5E5"> antenna jack on</font>

197
00:08:15,300 --> 00:08:21,389
<font color="#E5E5E5">your old big CRT TV and this and</font><font color="#CCCCCC"> tune to</font>

198
00:08:19,710 --> 00:08:25,080
a<font color="#CCCCCC"> specific</font><font color="#E5E5E5"> channel and then this thing</font>

199
00:08:21,389 --> 00:08:28,319
would display<font color="#CCCCCC"> the imaging</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> is the</font>

200
00:08:25,080 --> 00:08:30,120
trusty tape interface this is the

201
00:08:28,319 --> 00:08:33,390
<font color="#E5E5E5">expansion port which I'll come to</font><font color="#CCCCCC"> bit</font>

202
00:08:30,120 --> 00:08:34,679
<font color="#CCCCCC">later and that's the beep speaker which</font>

203
00:08:33,390 --> 00:08:37,049
anyone who's played<font color="#CCCCCC"> with these things</font>

204
00:08:34,679 --> 00:08:39,390
will know they sound terrible<font color="#CCCCCC"> but you</font>

205
00:08:37,049 --> 00:08:42,899
know it's got a<font color="#E5E5E5"> beat and over there is</font>

206
00:08:39,390 --> 00:08:45,510
<font color="#E5E5E5">the power so that is the edge connector</font>

207
00:08:42,899 --> 00:08:52,470
<font color="#CCCCCC">ok you can't quite</font><font color="#E5E5E5"> see but the edge</font>

208
00:08:45,510 --> 00:08:54,630
connector<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> 50 full pin aid PCB edge</font>

209
00:08:52,470 --> 00:08:56,460
connector and this is what got<font color="#E5E5E5"> me</font>

210
00:08:54,630 --> 00:09:00,240
interested in this<font color="#E5E5E5"> whole hacking as an</font>

211
00:08:56,460 --> 00:09:02,610
expectorant<font color="#CCCCCC"> if you look at those various</font>

212
00:09:00,240 --> 00:09:06,420
<font color="#CCCCCC">pins</font><font color="#E5E5E5"> you'll notice something</font><font color="#CCCCCC"> interesting</font>

213
00:09:02,610 --> 00:09:09,960
this is a<font color="#E5E5E5"> z80</font><font color="#CCCCCC"> CPU pan out</font><font color="#E5E5E5"> there's an</font>

214
00:09:06,420 --> 00:09:12,780
<font color="#E5E5E5">address bus of 16 bits an</font><font color="#CCCCCC"> 8-bit data bus</font>

215
00:09:09,960 --> 00:09:14,640
<font color="#E5E5E5">the</font><font color="#CCCCCC"> CPU control system control and</font>

216
00:09:12,780 --> 00:09:17,510
various other<font color="#CCCCCC"> things if you just take a</font>

217
00:09:14,640 --> 00:09:19,890
look at those<font color="#E5E5E5"> names and then look at the</font>

218
00:09:17,510 --> 00:09:23,460
bus again<font color="#E5E5E5"> you'll see the</font><font color="#CCCCCC"> same thing</font>

219
00:09:19,890 --> 00:09:25,189
there is the address<font color="#E5E5E5"> bus for</font><font color="#CCCCCC"> the z80</font><font color="#E5E5E5"> CPU</font>

220
00:09:23,460 --> 00:09:28,650
<font color="#CCCCCC">there's the data bus</font>

221
00:09:25,190 --> 00:09:30,870
there's the<font color="#E5E5E5"> i/o control lines and this</font>

222
00:09:28,650 --> 00:09:33,530
one is the<font color="#CCCCCC"> interesting one that they</font><font color="#E5E5E5"> in</font>

223
00:09:30,870 --> 00:09:36,210
the corner is a<font color="#E5E5E5"> ROM</font><font color="#CCCCCC"> seus or chip select</font>

224
00:09:33,530 --> 00:09:38,550
by<font color="#CCCCCC"> change</font><font color="#E5E5E5"> between that line I</font><font color="#CCCCCC"> think it's</font>

225
00:09:36,210 --> 00:09:40,830
<font color="#E5E5E5">low what happens is it disables the</font>

226
00:09:38,550 --> 00:09:42,890
<font color="#E5E5E5">on-board</font><font color="#CCCCCC"> ROM built into the ZX spectrum</font>

227
00:09:40,830 --> 00:09:46,320
<font color="#E5E5E5">and allows you to plug at ROM externally</font>

228
00:09:42,890 --> 00:09:49,170
now<font color="#E5E5E5"> my crazy plan when I saw this was</font>

229
00:09:46,320 --> 00:09:52,290
does that mean I<font color="#E5E5E5"> can emulate a ROM chip</font>

230
00:09:49,170 --> 00:09:56,310
<font color="#E5E5E5">in code and load my</font><font color="#CCCCCC"> own</font><font color="#E5E5E5"> code</font><font color="#CCCCCC"> onto a ZX</font>

231
00:09:52,290 --> 00:09:57,839
<font color="#CCCCCC">Spectrum</font><font color="#E5E5E5"> so we'll get to that peaking of</font>

232
00:09:56,310 --> 00:10:00,930
poking what do I mean<font color="#E5E5E5"> by peeking and</font>

233
00:09:57,840 --> 00:10:02,520
poking that's how you read memory<font color="#CCCCCC"> on a</font>

234
00:10:00,930 --> 00:10:05,459
ZX<font color="#CCCCCC"> Spectrum you can read the entire</font>

235
00:10:02,520 --> 00:10:08,939
<font color="#E5E5E5">range at the moment</font><font color="#CCCCCC"> 4000</font><font color="#E5E5E5"> is the frame</font>

236
00:10:05,460 --> 00:10:11,550
buffer<font color="#E5E5E5"> you literally at basic prompt</font>

237
00:10:08,940 --> 00:10:13,860
<font color="#CCCCCC">just say a equals peak read a value and</font>

238
00:10:11,550 --> 00:10:14,490
it will<font color="#E5E5E5"> read</font><font color="#CCCCCC"> the byte</font><font color="#E5E5E5"> that is at that</font>

239
00:10:13,860 --> 00:10:16,470
address

240
00:10:14,490 --> 00:10:19,230
poking is the same you<font color="#CCCCCC"> can just write</font>

241
00:10:16,470 --> 00:10:20,760
any value to<font color="#E5E5E5"> any memory anywhere which</font>

242
00:10:19,230 --> 00:10:22,710
means that if you're fooling around you

243
00:10:20,760 --> 00:10:24,930
can very easily reset the<font color="#CCCCCC"> Machine</font><font color="#E5E5E5"> draw</font>

244
00:10:22,710 --> 00:10:27,600
<font color="#E5E5E5">finding characters onto</font><font color="#CCCCCC"> the screen crash</font>

245
00:10:24,930 --> 00:10:30,030
it or<font color="#E5E5E5"> yeah do all kinds of interesting</font>

246
00:10:27,600 --> 00:10:31,710
<font color="#CCCCCC">things</font><font color="#E5E5E5"> play audio and stuff</font><font color="#CCCCCC"> like that</font>

247
00:10:30,030 --> 00:10:33,689
this is<font color="#CCCCCC"> how one of</font><font color="#E5E5E5"> the ways that people</font>

248
00:10:31,710 --> 00:10:35,220
<font color="#E5E5E5">would write optimized code for it which</font>

249
00:10:33,690 --> 00:10:37,860
you could<font color="#E5E5E5"> actually poke values into</font><font color="#CCCCCC"> ram</font>

250
00:10:35,220 --> 00:10:41,760
for your own code<font color="#CCCCCC"> or</font><font color="#E5E5E5"> machine code jump</font>

251
00:10:37,860 --> 00:10:44,790
to<font color="#E5E5E5"> that location and executors so that's</font>

252
00:10:41,760 --> 00:10:47,520
the memory map of<font color="#CCCCCC"> their</font><font color="#E5E5E5"> ZX</font><font color="#CCCCCC"> spectrum the</font>

253
00:10:44,790 --> 00:10:50,790
first<font color="#CCCCCC"> 16k is the ROM then there's a bit</font>

254
00:10:47,520 --> 00:10:52,500
<font color="#E5E5E5">of screen memory after that comes the</font>

255
00:10:50,790 --> 00:10:54,569
<font color="#E5E5E5">more screen memory which stores the</font>

256
00:10:52,500 --> 00:10:58,230
<font color="#E5E5E5">color data the color date is broken up</font>

257
00:10:54,570 --> 00:11:00,690
into blocks<font color="#E5E5E5"> and each</font><font color="#CCCCCC"> each bikes</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> 8</font>

258
00:10:58,230 --> 00:11:02,070
dots on the<font color="#CCCCCC"> screen and so what happens</font>

259
00:11:00,690 --> 00:11:05,250
<font color="#CCCCCC">you can only set the color for a</font>

260
00:11:02,070 --> 00:11:07,500
specific<font color="#E5E5E5"> block on the screen so graphics</font>

261
00:11:05,250 --> 00:11:08,400
gets a little weird there are tricks by

262
00:11:07,500 --> 00:11:11,100
looping

263
00:11:08,400 --> 00:11:14,490
quickly<font color="#E5E5E5"> and fiddling with</font><font color="#CCCCCC"> RAM values you</font>

264
00:11:11,100 --> 00:11:16,620
can actually set individual pixels<font color="#CCCCCC"> I</font><font color="#E5E5E5"> try</font>

265
00:11:14,490 --> 00:11:19,260
<font color="#E5E5E5">to do some of this yeah my coding skills</font>

266
00:11:16,620 --> 00:11:26,180
<font color="#E5E5E5">aren't that good so good</font><font color="#CCCCCC"> luck</font><font color="#E5E5E5"> to those</font>

267
00:11:19,260 --> 00:11:30,689
<font color="#E5E5E5">who want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> try it so yeah this is how</font>

268
00:11:26,180 --> 00:11:32,010
<font color="#CCCCCC">you hacked a ZX</font><font color="#E5E5E5"> spectrum in the 80s this</font>

269
00:11:30,690 --> 00:11:33,810
<font color="#CCCCCC">is a wonderful tool called the</font>

270
00:11:32,010 --> 00:11:36,450
<font color="#CCCCCC">multi-phase one by a company called</font>

271
00:11:33,810 --> 00:11:38,910
romantic<font color="#E5E5E5"> robot you have</font><font color="#CCCCCC"> to love 80s</font>

272
00:11:36,450 --> 00:11:40,710
computer<font color="#CCCCCC"> campy names</font><font color="#E5E5E5"> so this device</font>

273
00:11:38,910 --> 00:11:42,209
plugged into the back<font color="#CCCCCC"> of the ZX spectrum</font>

274
00:11:40,710 --> 00:11:44,580
what would happen is by pressing<font color="#CCCCCC"> that</font>

275
00:11:42,210 --> 00:11:46,380
<font color="#E5E5E5">fancy red button on there it</font><font color="#CCCCCC"> sends an on</font>

276
00:11:44,580 --> 00:11:50,160
<font color="#CCCCCC">it's triggers</font><font color="#E5E5E5"> and non mosque will</font>

277
00:11:46,380 --> 00:11:52,140
interrupt<font color="#E5E5E5"> it causes the basically this</font>

278
00:11:50,160 --> 00:11:54,480
is<font color="#E5E5E5"> that</font><font color="#CCCCCC"> eighty CPU to jump</font><font color="#E5E5E5"> to a specific</font>

279
00:11:52,140 --> 00:11:56,730
<font color="#E5E5E5">address in the ROM and execute whatever</font>

280
00:11:54,480 --> 00:11:59,250
codes in there<font color="#CCCCCC"> on the standards at</font>

281
00:11:56,730 --> 00:12:03,450
eighty that expect from ROM all that

282
00:11:59,250 --> 00:12:06,360
does is reboot the<font color="#E5E5E5"> machine but what the</font>

283
00:12:03,450 --> 00:12:08,430
romantic robot<font color="#CCCCCC"> company</font><font color="#E5E5E5"> did is they built</font>

284
00:12:06,360 --> 00:12:11,520
their own<font color="#CCCCCC"> ROM image which sits in that</font>

285
00:12:08,430 --> 00:12:13,859
box<font color="#E5E5E5"> so when you press the button</font><font color="#CCCCCC"> it's</font>

286
00:12:11,520 --> 00:12:16,020
what they<font color="#E5E5E5"> ROM in which has got a fancy</font>

287
00:12:13,860 --> 00:12:18,000
<font color="#CCCCCC">little bit of code at that</font><font color="#E5E5E5"> address so</font>

288
00:12:16,020 --> 00:12:21,390
when<font color="#E5E5E5"> you press the</font><font color="#CCCCCC"> button it</font><font color="#E5E5E5"> launches</font>

289
00:12:18,000 --> 00:12:24,450
<font color="#E5E5E5">that</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> this application</font><font color="#CCCCCC"> allows you</font><font color="#E5E5E5"> to</font>

290
00:12:21,390 --> 00:12:26,490
<font color="#E5E5E5">do is poke values into the current</font>

291
00:12:24,450 --> 00:12:29,010
running application<font color="#E5E5E5"> you can dump the</font>

292
00:12:26,490 --> 00:12:31,290
current memory<font color="#E5E5E5"> to a tape drive and you</font>

293
00:12:29,010 --> 00:12:31,620
<font color="#E5E5E5">can put</font><font color="#CCCCCC"> a new general</font><font color="#E5E5E5"> cause all kinds of</font>

294
00:12:31,290 --> 00:12:33,630
<font color="#E5E5E5">havoc</font>

295
00:12:31,620 --> 00:12:35,100
<font color="#E5E5E5">the most common use</font><font color="#CCCCCC"> for this was</font>

296
00:12:33,630 --> 00:12:36,930
pirating games that you couldn't

297
00:12:35,100 --> 00:12:39,450
otherwise<font color="#CCCCCC"> parent</font><font color="#E5E5E5"> so if you had a rom</font>

298
00:12:36,930 --> 00:12:41,310
game<font color="#E5E5E5"> you could dump once it was loaded</font>

299
00:12:39,450 --> 00:12:43,290
into memory and<font color="#E5E5E5"> then dump it out to tape</font>

300
00:12:41,310 --> 00:12:45,000
and things like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> so most</font><font color="#E5E5E5"> people own</font>

301
00:12:43,290 --> 00:12:47,370
<font color="#E5E5E5">these</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> used</font><font color="#CCCCCC"> it for</font><font color="#E5E5E5"> that but you</font>

302
00:12:45,000 --> 00:12:49,410
<font color="#E5E5E5">can also use</font><font color="#CCCCCC"> it for</font><font color="#E5E5E5"> more sort of legal</font>

303
00:12:47,370 --> 00:12:51,930
reasons<font color="#E5E5E5"> like in the old</font><font color="#CCCCCC"> days debugging</font>

304
00:12:49,410 --> 00:12:54,360
applications and<font color="#E5E5E5"> things like</font><font color="#CCCCCC"> that on a</font>

305
00:12:51,930 --> 00:12:56,489
ZX<font color="#CCCCCC"> spectrum</font><font color="#E5E5E5"> there's no real way to like</font>

306
00:12:54,360 --> 00:12:59,430
do normal debugging and<font color="#E5E5E5"> step throughs</font>

307
00:12:56,490 --> 00:13:02,250
and things like<font color="#CCCCCC"> that</font><font color="#E5E5E5"> that's you can but</font>

308
00:12:59,430 --> 00:13:04,709
yeah it back in the<font color="#E5E5E5"> 80s it wasn't easy</font>

309
00:13:02,250 --> 00:13:06,960
<font color="#CCCCCC">so at least this way you could actually</font>

310
00:13:04,710 --> 00:13:11,760
go and<font color="#CCCCCC"> see and read memory values and</font>

311
00:13:06,960 --> 00:13:15,000
stuff<font color="#CCCCCC"> okay so I won't</font><font color="#E5E5E5"> do the demo but my</font>

312
00:13:11,760 --> 00:13:16,560
plan<font color="#E5E5E5"> so this is how it all got started</font><font color="#CCCCCC"> I</font>

313
00:13:15,000 --> 00:13:19,830
decided<font color="#E5E5E5"> I was</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> take a Raspberry</font>

314
00:13:16,560 --> 00:13:21,079
Pi<font color="#E5E5E5"> and forcing it to the back of a ZX</font>

315
00:13:19,830 --> 00:13:23,660
<font color="#E5E5E5">Spectrum</font>

316
00:13:21,080 --> 00:13:27,650
unfortunately there's a few<font color="#CCCCCC"> problems the</font>

317
00:13:23,660 --> 00:13:30,439
Raspberry Pi is a 3.3 volt device the ZX

318
00:13:27,650 --> 00:13:35,000
<font color="#CCCCCC">Spectrum is a 5 volt</font><font color="#E5E5E5"> the Raspberry Pi is</font>

319
00:13:30,440 --> 00:13:37,790
not 5 volt<font color="#E5E5E5"> tolerant what this means</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> 5</font>

320
00:13:35,000 --> 00:13:40,730
is greater<font color="#E5E5E5"> than 3.3 so freedom that</font>

321
00:13:37,790 --> 00:13:43,400
happens<font color="#E5E5E5"> I thankfully didn't let the</font>

322
00:13:40,730 --> 00:13:44,750
magic<font color="#CCCCCC"> smoke out but technically you'll</font>

323
00:13:43,400 --> 00:13:46,130
damage your<font color="#CCCCCC"> eyes berry pie if you plug</font>

324
00:13:44,750 --> 00:13:47,480
it into the<font color="#E5E5E5"> back there</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> ways</font><font color="#CCCCCC"> around</font>

325
00:13:46,130 --> 00:13:51,110
this<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can fix it</font><font color="#CCCCCC"> with a</font>

326
00:13:47,480 --> 00:13:55,220
bi-directional<font color="#E5E5E5"> level shifter</font><font color="#CCCCCC"> the ones I</font>

327
00:13:51,110 --> 00:13:58,160
use use little<font color="#CCCCCC"> FETs</font><font color="#E5E5E5"> it does work the</font>

328
00:13:55,220 --> 00:14:01,640
next problem was I needed<font color="#CCCCCC"> iron</font>

329
00:13:58,160 --> 00:14:03,110
there's a 16 address lines<font color="#E5E5E5"> 8</font><font color="#CCCCCC"> date of</font>

330
00:14:01,640 --> 00:14:05,480
<font color="#CCCCCC">birth Alliance for their database</font>

331
00:14:03,110 --> 00:14:07,430
there's<font color="#CCCCCC"> 3 a minimum of</font><font color="#E5E5E5"> 3 control lines I</font>

332
00:14:05,480 --> 00:14:10,160
<font color="#CCCCCC">would need readwrite in the memory</font>

333
00:14:07,430 --> 00:14:15,160
<font color="#CCCCCC">requests and</font><font color="#E5E5E5"> then</font><font color="#CCCCCC"> the clock line if you</font>

334
00:14:10,160 --> 00:14:18,170
add<font color="#CCCCCC"> all those up you come to 20 what 20</font>

335
00:14:15,160 --> 00:14:21,829
27 28 or something

336
00:14:18,170 --> 00:14:25,069
there's<font color="#E5E5E5"> only 26</font><font color="#CCCCCC"> free io lines available</font>

337
00:14:21,830 --> 00:14:27,980
on a<font color="#CCCCCC"> Raspberry Pi you can get more by</font>

338
00:14:25,070 --> 00:14:30,530
using<font color="#E5E5E5"> shift registers and things like</font>

339
00:14:27,980 --> 00:14:32,630
that<font color="#E5E5E5"> but it greatly complex complicates</font>

340
00:14:30,530 --> 00:14:38,060
life<font color="#CCCCCC"> and I was trying</font><font color="#E5E5E5"> to do this without</font>

341
00:14:32,630 --> 00:14:39,189
complicating my life so yeah so now this

342
00:14:38,060 --> 00:14:42,050
<font color="#CCCCCC">is what my plan was</font>

343
00:14:39,190 --> 00:14:45,470
<font color="#E5E5E5">let's take a Raspberry Pi and what they</font>

344
00:14:42,050 --> 00:14:47,390
call a bus expansion<font color="#E5E5E5"> chip these</font>

345
00:14:45,470 --> 00:14:48,890
particular chips by microchip are very

346
00:14:47,390 --> 00:14:51,740
cool what they allow you<font color="#E5E5E5"> to do is you</font>

347
00:14:48,890 --> 00:14:56,750
<font color="#E5E5E5">can talk I to them and it gives you a</font>

348
00:14:51,740 --> 00:14:58,670
16-bit<font color="#CCCCCC"> GPIO open up the pant they allow</font>

349
00:14:56,750 --> 00:15:00,890
for bi-directional<font color="#CCCCCC"> and technically you</font>

350
00:14:58,670 --> 00:15:03,469
can clock them at 20 megahertz<font color="#E5E5E5"> so the</font>

351
00:15:00,890 --> 00:15:06,590
plan<font color="#CCCCCC"> was I will take two of those</font><font color="#E5E5E5"> which</font>

352
00:15:03,470 --> 00:15:08,060
would<font color="#CCCCCC"> give me 32</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> oh lines</font><font color="#E5E5E5"> wire that</font><font color="#CCCCCC"> up</font>

353
00:15:06,590 --> 00:15:11,750
to the right to the back of<font color="#CCCCCC"> the ZX</font>

354
00:15:08,060 --> 00:15:13,880
<font color="#CCCCCC">spectrum and that should work</font><font color="#E5E5E5"> right yeah</font>

355
00:15:11,750 --> 00:15:17,390
I know it doesn't the problem comes<font color="#E5E5E5"> in</font>

356
00:15:13,880 --> 00:15:19,790
is this<font color="#E5E5E5"> Linux is not a real-time OS what</font>

357
00:15:17,390 --> 00:15:22,699
I mean by real-time<font color="#E5E5E5"> is there is no I</font>

358
00:15:19,790 --> 00:15:25,730
<font color="#E5E5E5">don't know how long or how</font><font color="#CCCCCC"> many</font><font color="#E5E5E5"> clock</font>

359
00:15:22,700 --> 00:15:27,590
cycles will occur between<font color="#E5E5E5"> each core so</font>

360
00:15:25,730 --> 00:15:30,530
what will normally happen is you'll say

361
00:15:27,590 --> 00:15:32,360
get me some data<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> get me some</font>

362
00:15:30,530 --> 00:15:33,810
<font color="#CCCCCC">more data</font><font color="#E5E5E5"> the gap between those two</font>

363
00:15:32,360 --> 00:15:35,520
<font color="#CCCCCC">gates can be</font><font color="#E5E5E5"> anything</font>

364
00:15:33,810 --> 00:15:38,279
from milliseconds to<font color="#CCCCCC"> 10 minutes</font>

365
00:15:35,520 --> 00:15:40,650
<font color="#E5E5E5">depending on what your system</font><font color="#CCCCCC"> systemd</font>

366
00:15:38,279 --> 00:15:43,920
and all the other rubbish<font color="#E5E5E5"> running on a</font>

367
00:15:40,650 --> 00:15:46,230
<font color="#E5E5E5">Linux system</font><font color="#CCCCCC"> tax</font><font color="#E5E5E5"> so what you can do if</font>

368
00:15:43,920 --> 00:15:48,360
you brave<font color="#E5E5E5"> you can write a kernel driver</font>

369
00:15:46,230 --> 00:15:51,240
<font color="#CCCCCC">I don't know how many</font><font color="#E5E5E5"> of you written</font>

370
00:15:48,360 --> 00:15:53,420
kernel drivers<font color="#CCCCCC"> it's not fun</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> not</font>

371
00:15:51,240 --> 00:15:55,830
quick<font color="#CCCCCC"> and no I'm</font><font color="#E5E5E5"> not going to do that</font>

372
00:15:53,420 --> 00:15:58,529
the<font color="#CCCCCC"> other option</font><font color="#E5E5E5"> is you can write bare</font>

373
00:15:55,830 --> 00:16:01,080
metal<font color="#E5E5E5"> arm code the Raspberry Pi is very</font>

374
00:15:58,529 --> 00:16:03,000
cool because they're all the compilers

375
00:16:01,080 --> 00:16:05,430
are<font color="#E5E5E5"> made available so if you really want</font>

376
00:16:03,000 --> 00:16:08,370
to you<font color="#CCCCCC"> can write on code and run it on</font>

377
00:16:05,430 --> 00:16:10,859
the Raspberry Pi<font color="#CCCCCC"> as a BEM machine</font><font color="#E5E5E5"> the</font>

378
00:16:08,370 --> 00:16:12,600
problem is<font color="#E5E5E5"> it requires a lot of code</font>

379
00:16:10,860 --> 00:16:14,279
just<font color="#E5E5E5"> to bring up things like displays</font>

380
00:16:12,600 --> 00:16:16,050
and all that kind of thing let alone<font color="#E5E5E5"> the</font>

381
00:16:14,279 --> 00:16:18,029
<font color="#E5E5E5">Wi-Fi networking or any of the other</font>

382
00:16:16,050 --> 00:16:21,930
functions<font color="#E5E5E5"> that I would like when I'm</font>

383
00:16:18,029 --> 00:16:24,960
trying<font color="#CCCCCC"> to integrate with</font><font color="#E5E5E5"> us so my new</font>

384
00:16:21,930 --> 00:16:27,750
plan<font color="#E5E5E5"> take replace the Raspberry Pi with</font>

385
00:16:24,960 --> 00:16:31,040
<font color="#E5E5E5">one of these things this is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> st</font>

386
00:16:27,750 --> 00:16:35,700
discovery for it's made by

387
00:16:31,040 --> 00:16:36,300
<font color="#CCCCCC">STMicroelectronics it's got a 168</font>

388
00:16:35,700 --> 00:16:39,660
<font color="#E5E5E5">megahertz</font>

389
00:16:36,300 --> 00:16:45,719
arm cortex-m<font color="#CCCCCC"> for processor</font><font color="#E5E5E5"> one mega or</font>

390
00:16:39,660 --> 00:16:49,110
flash 192k of ram about 56<font color="#CCCCCC"> i open</font>

391
00:16:45,720 --> 00:16:51,480
depending<font color="#E5E5E5"> on how you configure it it's</font><font color="#CCCCCC"> 5</font>

392
00:16:49,110 --> 00:16:54,450
volt<font color="#E5E5E5"> tolerance a tiny chip registers it</font>

393
00:16:51,480 --> 00:16:57,030
supports DMA which I'll<font color="#E5E5E5"> get</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> and it's</font>

394
00:16:54,450 --> 00:17:01,410
got lots<font color="#E5E5E5"> and lots of yarns</font><font color="#CCCCCC"> so the new</font>

395
00:16:57,030 --> 00:17:04,079
plan<font color="#E5E5E5"> goes like this USB to the STM over</font>

396
00:17:01,410 --> 00:17:07,230
a serial<font color="#E5E5E5"> adapter yes that is the baud</font>

397
00:17:04,079 --> 00:17:10,438
rate underneath there and that's stable

398
00:17:07,230 --> 00:17:11,970
I tried double that and<font color="#E5E5E5"> unfortunately it</font>

399
00:17:10,439 --> 00:17:13,589
doesn't<font color="#CCCCCC"> work you start</font><font color="#E5E5E5"> losing character</font>

400
00:17:11,970 --> 00:17:16,890
so<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> about the the maximum</font><font color="#E5E5E5"> baud</font>

401
00:17:13,589 --> 00:17:18,990
rate I could<font color="#E5E5E5"> get using an FTDI chip</font><font color="#CCCCCC"> USB</font>

402
00:17:16,890 --> 00:17:21,480
to serial adapter that things plugged

403
00:17:18,990 --> 00:17:24,300
<font color="#E5E5E5">into the back of the ZX spectrum now for</font>

404
00:17:21,480 --> 00:17:27,689
those<font color="#E5E5E5"> of</font><font color="#CCCCCC"> you curious</font><font color="#E5E5E5"> this bundle of</font>

405
00:17:24,300 --> 00:17:31,980
wires<font color="#CCCCCC"> there on my</font><font color="#E5E5E5"> desk is more or less</font>

406
00:17:27,689 --> 00:17:33,510
what<font color="#E5E5E5"> it looks like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> does work as</font>

407
00:17:31,980 --> 00:17:35,130
long as<font color="#CCCCCC"> I don't touch it as long as my</font>

408
00:17:33,510 --> 00:17:36,960
kid doesn't<font color="#E5E5E5"> come near it as long as the</font>

409
00:17:35,130 --> 00:17:40,679
<font color="#E5E5E5">wind doesn't change direction</font><font color="#CCCCCC"> and</font>

410
00:17:36,960 --> 00:17:43,280
<font color="#E5E5E5">everything else but it does work</font><font color="#CCCCCC"> so the</font>

411
00:17:40,679 --> 00:17:45,840
code on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> ste discovery does this</font>

412
00:17:43,280 --> 00:17:47,840
there's a interrupt routine<font color="#E5E5E5"> that gets</font>

413
00:17:45,840 --> 00:17:50,389
triggered<font color="#CCCCCC"> on every single clock</font>

414
00:17:47,840 --> 00:17:53,629
from the ZX<font color="#CCCCCC"> spectrum</font><font color="#E5E5E5"> each</font><font color="#CCCCCC"> clock pulse I</font>

415
00:17:50,390 --> 00:17:56,570
get the<font color="#CCCCCC"> readwrite states of the bus I</font>

416
00:17:53,630 --> 00:17:58,730
then read the address<font color="#CCCCCC"> I then read the</font>

417
00:17:56,570 --> 00:18:01,490
data bus<font color="#E5E5E5"> and then I push all that into a</font>

418
00:17:58,730 --> 00:18:03,950
buffer<font color="#CCCCCC"> now</font><font color="#E5E5E5"> if you've tried you've got to</font>

419
00:18:01,490 --> 00:18:05,900
do this<font color="#E5E5E5"> in as little code as possible</font>

420
00:18:03,950 --> 00:18:07,370
<font color="#CCCCCC">because you</font><font color="#E5E5E5"> are limited because</font>

421
00:18:05,900 --> 00:18:08,630
obviously there's a clock pulse<font color="#E5E5E5"> every</font>

422
00:18:07,370 --> 00:18:11,000
three point well it's three point five

423
00:18:08,630 --> 00:18:12,740
megahertz so you've got a constantly

424
00:18:11,000 --> 00:18:14,090
<font color="#CCCCCC">grab stuff</font><font color="#E5E5E5"> and throw it into this</font><font color="#CCCCCC"> buffer</font>

425
00:18:12,740 --> 00:18:15,680
now you got<font color="#CCCCCC"> to lying in a buffer and</font>

426
00:18:14,090 --> 00:18:19,010
<font color="#E5E5E5">you've got to get that off</font><font color="#CCCCCC"> of your</font>

427
00:18:15,680 --> 00:18:22,070
<font color="#E5E5E5">microcontroller</font><font color="#CCCCCC"> onto your PC that's what</font>

428
00:18:19,010 --> 00:18:25,370
took me<font color="#E5E5E5"> a number of</font><font color="#CCCCCC"> weeks to get right</font>

429
00:18:22,070 --> 00:18:27,260
in the end<font color="#CCCCCC"> you use the DMA transfer</font><font color="#E5E5E5"> DMA</font>

430
00:18:25,370 --> 00:18:28,820
is really cool<font color="#E5E5E5"> on these chips in</font><font color="#CCCCCC"> that</font>

431
00:18:27,260 --> 00:18:30,620
you configure the<font color="#E5E5E5"> DMA</font><font color="#CCCCCC"> controller in the</font>

432
00:18:28,820 --> 00:18:33,740
background you say<font color="#E5E5E5"> take the</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> from</font>

433
00:18:30,620 --> 00:18:35,719
this<font color="#E5E5E5"> array and spit it out of this port</font>

434
00:18:33,740 --> 00:18:37,190
<font color="#E5E5E5">and everything will then quietly happen</font>

435
00:18:35,720 --> 00:18:39,380
in the background<font color="#CCCCCC"> you</font><font color="#E5E5E5"> don't have to</font>

436
00:18:37,190 --> 00:18:40,940
service it<font color="#E5E5E5"> and it doesn't take</font><font color="#CCCCCC"> any of</font>

437
00:18:39,380 --> 00:18:43,520
the clock cycles<font color="#E5E5E5"> away from the standard</font>

438
00:18:40,940 --> 00:18:45,350
<font color="#E5E5E5">way the CPU works</font><font color="#CCCCCC"> in this case it's just</font>

439
00:18:43,520 --> 00:18:46,760
a circular giant<font color="#E5E5E5"> circular buffer so I</font>

440
00:18:45,350 --> 00:18:48,860
just<font color="#E5E5E5"> keep throwing things in and it</font>

441
00:18:46,760 --> 00:18:52,250
keeps spitting them<font color="#E5E5E5"> out on the serial</font>

442
00:18:48,860 --> 00:18:54,290
port<font color="#CCCCCC"> I then read this data and pull it</font>

443
00:18:52,250 --> 00:18:56,360
into<font color="#E5E5E5"> a Python script that I can display</font>

444
00:18:54,290 --> 00:18:58,730
<font color="#E5E5E5">on screen the nice thing is now my PC</font>

445
00:18:56,360 --> 00:19:00,469
<font color="#E5E5E5">only has to handle the characters coming</font>

446
00:18:58,730 --> 00:19:02,030
across the serial link<font color="#CCCCCC"> I don't have to</font>

447
00:19:00,470 --> 00:19:04,070
try<font color="#E5E5E5"> and read from ports and that's I can</font>

448
00:19:02,030 --> 00:19:07,010
just use<font color="#E5E5E5"> Python and display it so in the</font>

449
00:19:04,070 --> 00:19:09,260
end<font color="#E5E5E5"> I wrote that</font><font color="#CCCCCC"> comm quite see but what</font>

450
00:19:07,010 --> 00:19:10,730
<font color="#E5E5E5">that is is all the read values are being</font>

451
00:19:09,260 --> 00:19:12,620
written to<font color="#E5E5E5"> those memory addresses and</font>

452
00:19:10,730 --> 00:19:15,560
all the green values are being<font color="#E5E5E5"> read from</font>

453
00:19:12,620 --> 00:19:18,649
<font color="#CCCCCC">those memory addresses</font><font color="#E5E5E5"> this application</font>

454
00:19:15,560 --> 00:19:20,840
<font color="#CCCCCC">allows me to read the</font><font color="#E5E5E5"> entire dress range</font>

455
00:19:18,650 --> 00:19:23,480
<font color="#E5E5E5">on the ZX as the ZX scans through the</font>

456
00:19:20,840 --> 00:19:26,600
address<font color="#E5E5E5"> range I can also poke new values</font>

457
00:19:23,480 --> 00:19:29,120
into all<font color="#E5E5E5"> those locations</font><font color="#CCCCCC"> so technically</font>

458
00:19:26,600 --> 00:19:31,639
<font color="#E5E5E5">I can scrub</font><font color="#CCCCCC"> my ZX</font><font color="#E5E5E5"> everything should be</font>

459
00:19:29,120 --> 00:19:33,110
<font color="#CCCCCC">happening</font><font color="#E5E5E5"> over this data bus so I can</font>

460
00:19:31,640 --> 00:19:33,470
control<font color="#E5E5E5"> the keyboard and things like</font>

461
00:19:33,110 --> 00:19:36,919
<font color="#E5E5E5">that</font>

462
00:19:33,470 --> 00:19:40,670
<font color="#CCCCCC">I</font><font color="#E5E5E5"> say technically because it kind of</font>

463
00:19:36,920 --> 00:19:44,120
works<font color="#E5E5E5"> the</font><font color="#CCCCCC"> reading</font><font color="#E5E5E5"> spell would be must be</font>

464
00:19:40,670 --> 00:19:46,490
fast<font color="#CCCCCC"> my code is good but not good enough</font>

465
00:19:44,120 --> 00:19:48,709
yet<font color="#E5E5E5"> at some point I</font><font color="#CCCCCC"> will get</font><font color="#E5E5E5"> it faster</font>

466
00:19:46,490 --> 00:19:49,790
<font color="#E5E5E5">either I need to speed up my transmit</font>

467
00:19:48,710 --> 00:19:51,800
speed because I'm losing<font color="#CCCCCC"> a few</font>

468
00:19:49,790 --> 00:19:56,030
characters and<font color="#E5E5E5"> so in my circular</font><font color="#CCCCCC"> buffer</font>

469
00:19:51,800 --> 00:19:58,280
<font color="#E5E5E5">or I need</font><font color="#CCCCCC"> to read</font><font color="#E5E5E5"> faster bad connections</font>

470
00:19:56,030 --> 00:19:59,810
as you saw my current and<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> when</font>

471
00:19:58,280 --> 00:20:00,500
<font color="#E5E5E5">this box if anyone would like</font><font color="#CCCCCC"> to see it</font>

472
00:19:59,810 --> 00:20:03,260
is<font color="#E5E5E5"> a lot</font>

473
00:20:00,500 --> 00:20:06,470
and lots of wires<font color="#E5E5E5"> or badly joint this</font>

474
00:20:03,260 --> 00:20:09,980
means that<font color="#E5E5E5"> anything I do I can easily</font>

475
00:20:06,470 --> 00:20:13,120
<font color="#CCCCCC">lose a bet and if you know anything</font><font color="#E5E5E5"> one</font>

476
00:20:09,980 --> 00:20:15,920
but is really<font color="#E5E5E5"> bad if you lose it so yeah</font>

477
00:20:13,120 --> 00:20:18,260
<font color="#E5E5E5">when writing if you get your</font><font color="#CCCCCC"> timing</font>

478
00:20:15,920 --> 00:20:20,150
wrong<font color="#CCCCCC"> it kills your sedex</font>

479
00:20:18,260 --> 00:20:22,690
either the<font color="#CCCCCC"> Zed</font><font color="#E5E5E5"> X will crash with pretty</font>

480
00:20:20,150 --> 00:20:26,000
<font color="#E5E5E5">colors if you're lucky or it just resets</font>

481
00:20:22,690 --> 00:20:27,980
<font color="#E5E5E5">bus collisions if the Z X is right</font>

482
00:20:26,000 --> 00:20:30,530
talking<font color="#CCCCCC"> on the bus while I'm talking</font><font color="#E5E5E5"> on</font>

483
00:20:27,980 --> 00:20:32,540
<font color="#E5E5E5">the bus the two collide and whoever</font>

484
00:20:30,530 --> 00:20:37,330
happened to talk last seems to one

485
00:20:32,540 --> 00:20:40,010
sometimes<font color="#E5E5E5"> again this resets the Zed X so</font>

486
00:20:37,330 --> 00:20:41,750
how would<font color="#E5E5E5"> I improve this</font><font color="#CCCCCC"> well the first</font>

487
00:20:40,010 --> 00:20:44,000
<font color="#E5E5E5">thing is make</font><font color="#CCCCCC"> a PCB so I get rid of</font><font color="#E5E5E5"> all</font>

488
00:20:41,750 --> 00:20:45,260
<font color="#CCCCCC">my stupid</font><font color="#E5E5E5"> wire connections if I have</font>

489
00:20:44,000 --> 00:20:47,060
less connections hopefully<font color="#E5E5E5"> it'd be</font>

490
00:20:45,260 --> 00:20:50,720
better<font color="#E5E5E5"> the correct way to do this is</font><font color="#CCCCCC"> a</font>

491
00:20:47,060 --> 00:20:52,100
<font color="#CCCCCC">Cpl D or an FPGA that way what I'm</font>

492
00:20:50,720 --> 00:20:53,720
<font color="#E5E5E5">currently a lot of what I'm doing in</font>

493
00:20:52,100 --> 00:20:56,149
<font color="#E5E5E5">software can be done in hardware which</font>

494
00:20:53,720 --> 00:21:01,100
means speed no longer matters hardware

495
00:20:56,150 --> 00:21:04,970
<font color="#E5E5E5">is near-instant for this in this the</font>

496
00:21:01,100 --> 00:21:06,860
other<font color="#E5E5E5"> thing I tried was using SRAM so if</font>

497
00:21:04,970 --> 00:21:09,770
you put a<font color="#CCCCCC"> Ram chip on the address bus</font>

498
00:21:06,860 --> 00:21:11,659
<font color="#E5E5E5">and the data bus it will just write to</font>

499
00:21:09,770 --> 00:21:14,000
it because that's<font color="#E5E5E5"> how it's being built</font>

500
00:21:11,660 --> 00:21:15,800
<font color="#E5E5E5">and you can then if you have something</font>

501
00:21:14,000 --> 00:21:18,230
<font color="#CCCCCC">like</font><font color="#E5E5E5"> dual port</font><font color="#CCCCCC"> Ram</font><font color="#E5E5E5"> which allows you to</font>

502
00:21:15,800 --> 00:21:20,090
<font color="#E5E5E5">read while it's being written to you can</font>

503
00:21:18,230 --> 00:21:21,950
<font color="#CCCCCC">actually read the information</font><font color="#E5E5E5"> out these</font>

504
00:21:20,090 --> 00:21:25,189
are sort of<font color="#CCCCCC"> my plan for the</font><font color="#E5E5E5"> future I'm</font>

505
00:21:21,950 --> 00:21:27,500
not giving<font color="#E5E5E5"> up yet but I had</font><font color="#CCCCCC"> badge code</font>

506
00:21:25,190 --> 00:21:29,420
to write and other things so this<font color="#CCCCCC"> is</font>

507
00:21:27,500 --> 00:21:30,980
sort<font color="#CCCCCC"> of had a lot of</font><font color="#E5E5E5"> fire I got for</font>

508
00:21:29,420 --> 00:21:33,160
those who want to try<font color="#CCCCCC"> this kind of stuff</font>

509
00:21:30,980 --> 00:21:37,190
<font color="#CCCCCC">I suggest you</font><font color="#E5E5E5"> get one</font><font color="#CCCCCC"> of these things</font>

510
00:21:33,160 --> 00:21:39,380
<font color="#CCCCCC">this is an</font><font color="#E5E5E5"> 8 channel logic analyzer</font><font color="#CCCCCC"> you</font>

511
00:21:37,190 --> 00:21:42,200
can buy them for<font color="#E5E5E5"> about 250 ran locally</font>

512
00:21:39,380 --> 00:21:45,320
or for about somewhere<font color="#E5E5E5"> between</font><font color="#CCCCCC"> five and</font>

513
00:21:42,200 --> 00:21:47,210
<font color="#CCCCCC">ten at</font><font color="#E5E5E5"> ten dollars</font><font color="#CCCCCC"> or China or please</font>

514
00:21:45,320 --> 00:21:49,129
take<font color="#E5E5E5"> into account the 24 range shipping</font>

515
00:21:47,210 --> 00:21:52,040
fee our local post office now charges

516
00:21:49,130 --> 00:21:54,200
but this is a knockoff

517
00:21:52,040 --> 00:21:56,149
so<font color="#E5E5E5"> say</font><font color="#CCCCCC"> da make a really really good one</font>

518
00:21:54,200 --> 00:21:59,360
<font color="#CCCCCC">this is a knockoff</font>

519
00:21:56,150 --> 00:22:01,310
but it's good<font color="#CCCCCC"> enough it in theory goes</font>

520
00:21:59,360 --> 00:22:03,800
up to 24<font color="#CCCCCC"> megahertz I wouldn't bother</font>

521
00:22:01,310 --> 00:22:06,320
trying to<font color="#E5E5E5"> go that fast but for the ZX</font>

522
00:22:03,800 --> 00:22:08,180
Spectrum is perfectly fine there's a

523
00:22:06,320 --> 00:22:11,178
open<font color="#E5E5E5"> source project that talks to this</font>

524
00:22:08,180 --> 00:22:14,000
called<font color="#E5E5E5"> sing rock</font><font color="#CCCCCC"> this is the pulse view</font>

525
00:22:11,179 --> 00:22:16,130
which is<font color="#CCCCCC"> their</font><font color="#E5E5E5"> online or they</font><font color="#CCCCCC"> gtk</font>

526
00:22:14,000 --> 00:22:18,380
<font color="#E5E5E5">to fester</font><font color="#CCCCCC"> which is really really</font><font color="#E5E5E5"> cool</font><font color="#CCCCCC"> so</font>

527
00:22:16,130 --> 00:22:20,810
you can see the individual pulses<font color="#E5E5E5"> for</font>

528
00:22:18,380 --> 00:22:22,370
the channels it's got decoding so it can

529
00:22:20,810 --> 00:22:24,679
decode the parallel bus

530
00:22:22,370 --> 00:22:26,899
it's got<font color="#CCCCCC"> SPI decoding and a whole lot of</font>

531
00:22:24,680 --> 00:22:30,080
other things<font color="#CCCCCC"> and that like I say it</font>

532
00:22:26,900 --> 00:22:32,980
<font color="#E5E5E5">costs 250</font><font color="#CCCCCC"> R and I used mine pretty</font><font color="#E5E5E5"> much</font>

533
00:22:30,080 --> 00:22:34,939
constantly<font color="#E5E5E5"> in this whole project because</font>

534
00:22:32,980 --> 00:22:36,680
while I was<font color="#E5E5E5"> trying to figure out what's</font>

535
00:22:34,940 --> 00:22:40,940
<font color="#E5E5E5">wrong why bits are being lost this</font>

536
00:22:36,680 --> 00:22:42,920
allows you<font color="#CCCCCC"> to see it the other</font><font color="#E5E5E5"> thing</font>

537
00:22:40,940 --> 00:22:44,450
<font color="#E5E5E5">about this is that it's fully scriptable</font>

538
00:22:42,920 --> 00:22:47,360
through pythons<font color="#CCCCCC"> so they've</font><font color="#E5E5E5"> actually got</font>

539
00:22:44,450 --> 00:22:48,950
a Python interface<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> access all</font>

540
00:22:47,360 --> 00:22:50,209
the<font color="#E5E5E5"> data and that which means that</font><font color="#CCCCCC"> you</font>

541
00:22:48,950 --> 00:22:52,640
can write some of<font color="#E5E5E5"> the things that I've</font>

542
00:22:50,210 --> 00:22:54,470
<font color="#E5E5E5">written in code you could actually just</font>

543
00:22:52,640 --> 00:22:56,990
use<font color="#E5E5E5"> one of these and and do it the</font>

544
00:22:54,470 --> 00:22:58,760
<font color="#CCCCCC">problem is it's only a</font><font color="#E5E5E5"> channel</font><font color="#CCCCCC"> the jump</font>

545
00:22:56,990 --> 00:23:01,490
<font color="#E5E5E5">to</font><font color="#CCCCCC"> sixteen channel goes through the roof</font>

546
00:22:58,760 --> 00:23:04,220
<font color="#CCCCCC">pricing wise you can get a 24 and a</font><font color="#E5E5E5"> 32</font>

547
00:23:01,490 --> 00:23:07,400
channel one<font color="#E5E5E5"> but yeah I know I don't</font><font color="#CCCCCC"> have</font>

548
00:23:04,220 --> 00:23:11,270
<font color="#E5E5E5">that kind of money there are much much</font>

549
00:23:07,400 --> 00:23:14,540
better ones if you<font color="#E5E5E5"> own a</font><font color="#CCCCCC"> Rygel</font><font color="#E5E5E5"> scope the</font>

550
00:23:11,270 --> 00:23:16,970
new Rygel<font color="#E5E5E5"> oscilloscopes do have logic</font>

551
00:23:14,540 --> 00:23:19,010
analyzers<font color="#E5E5E5"> built in a lot of new hardware</font>

552
00:23:16,970 --> 00:23:21,890
<font color="#E5E5E5">that comes out does have logic analyzers</font>

553
00:23:19,010 --> 00:23:23,960
like I say this is cheap<font color="#CCCCCC"> for those of us</font>

554
00:23:21,890 --> 00:23:27,590
like me who do this as a hobby<font color="#CCCCCC"> this</font>

555
00:23:23,960 --> 00:23:29,680
<font color="#E5E5E5">thing is very nice so if you want to try</font>

556
00:23:27,590 --> 00:23:33,399
this yourself

557
00:23:29,680 --> 00:23:36,440
<font color="#E5E5E5">yeah that's</font><font color="#CCCCCC"> title wrong pin anyway so</font>

558
00:23:33,400 --> 00:23:38,300
you<font color="#E5E5E5"> can use emulators</font><font color="#CCCCCC"> if you want to</font>

559
00:23:36,440 --> 00:23:43,370
play<font color="#E5E5E5"> around with the ZX</font><font color="#CCCCCC"> spectrum</font><font color="#E5E5E5"> there's</font>

560
00:23:38,300 --> 00:23:45,620
the fuse<font color="#CCCCCC"> gtk emulator it's really really</font>

561
00:23:43,370 --> 00:23:47,959
good<font color="#E5E5E5"> it actually emulates the multi</font>

562
00:23:45,620 --> 00:23:50,000
<font color="#CCCCCC">phase one</font><font color="#E5E5E5"> so you can do things</font><font color="#CCCCCC"> like</font>

563
00:23:47,960 --> 00:23:53,120
break<font color="#E5E5E5"> the running app and all that kind</font>

564
00:23:50,000 --> 00:23:55,490
of stuff<font color="#E5E5E5"> it does the entire range of ZX</font>

565
00:23:53,120 --> 00:23:57,649
spectrum you can<font color="#E5E5E5"> also read the currently</font>

566
00:23:55,490 --> 00:23:59,840
running memory you can poke values into

567
00:23:57,650 --> 00:24:01,490
the<font color="#E5E5E5"> memory you can pause it you</font><font color="#CCCCCC"> can step</font>

568
00:23:59,840 --> 00:24:05,020
through<font color="#E5E5E5"> the running code and all that</font>

569
00:24:01,490 --> 00:24:05,020
kind of thing<font color="#E5E5E5"> so if you're interested</font>

