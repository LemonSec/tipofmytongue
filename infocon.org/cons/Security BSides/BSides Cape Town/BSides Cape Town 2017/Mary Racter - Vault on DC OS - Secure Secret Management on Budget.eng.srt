1
00:00:00,000 --> 00:00:06,990
hi everyone<font color="#CCCCCC"> we'll be stopping</font><font color="#E5E5E5"> the next</font>

2
00:00:01,829 --> 00:00:10,980
talk now so<font color="#E5E5E5"> Mary will</font><font color="#CCCCCC"> be telling us</font>

3
00:00:06,990 --> 00:00:16,859
<font color="#E5E5E5">about vault on</font><font color="#CCCCCC"> DCOs</font><font color="#E5E5E5"> secure secret</font>

4
00:00:10,980 --> 00:00:20,759
management<font color="#E5E5E5"> on budget friends I see I got</font>

5
00:00:16,859 --> 00:00:22,320
<font color="#CCCCCC">all the devs</font><font color="#E5E5E5"> yeah thanks</font><font color="#CCCCCC"> for coming yeah</font>

6
00:00:20,760 --> 00:00:26,039
so my talk is<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> take you through</font>

7
00:00:22,320 --> 00:00:27,840
some basics of good<font color="#E5E5E5"> management</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> you</font>

8
00:00:26,039 --> 00:00:29,010
are used to<font color="#E5E5E5"> working with</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> in-house</font>

9
00:00:27,840 --> 00:00:30,390
solution of your own you're probably

10
00:00:29,010 --> 00:00:32,250
gonna roll<font color="#E5E5E5"> your eyes a little bit</font>

11
00:00:30,390 --> 00:00:34,320
because this<font color="#E5E5E5"> is a different</font><font color="#CCCCCC"> approach</font><font color="#E5E5E5"> but</font>

12
00:00:32,250 --> 00:00:38,430
<font color="#CCCCCC">I hope there's still</font><font color="#E5E5E5"> some valuable</font>

13
00:00:34,320 --> 00:00:42,090
things<font color="#CCCCCC"> that I can show you</font><font color="#E5E5E5"> great so Who</font>

14
00:00:38,430 --> 00:00:44,309
am I<font color="#CCCCCC"> I'm Mary I work at precalc</font><font color="#E5E5E5"> org</font>

15
00:00:42,090 --> 00:00:45,840
which is a<font color="#CCCCCC"> non-profit</font><font color="#E5E5E5"> and it works in</font>

16
00:00:44,309 --> 00:00:47,489
the<font color="#E5E5E5"> health and youth sectors so what it</font>

17
00:00:45,840 --> 00:00:50,430
<font color="#E5E5E5">does is it</font><font color="#CCCCCC"> builds</font><font color="#E5E5E5"> some mobile</font>

18
00:00:47,489 --> 00:00:52,440
technologies and it helps people<font color="#E5E5E5"> with</font>

19
00:00:50,430 --> 00:00:54,059
supporting their lifestyle like maybe if

20
00:00:52,440 --> 00:00:55,379
you're pregnant<font color="#CCCCCC"> there's a</font><font color="#E5E5E5"> service that</font>

21
00:00:54,059 --> 00:00:57,390
<font color="#E5E5E5">can help you with that says hey your</font>

22
00:00:55,379 --> 00:00:59,070
baby is like six months<font color="#E5E5E5"> old</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> go to</font>

23
00:00:57,390 --> 00:01:01,260
<font color="#E5E5E5">the doctor don't drink alcohol that kind</font>

24
00:00:59,070 --> 00:01:03,390
of thing<font color="#E5E5E5"> the other one is the youth</font>

25
00:01:01,260 --> 00:01:05,280
portfolio which<font color="#E5E5E5"> is very cool this is</font>

26
00:01:03,390 --> 00:01:07,920
aspirational picture of what people

27
00:01:05,280 --> 00:01:09,630
using<font color="#E5E5E5"> our service might might do you</font>

28
00:01:07,920 --> 00:01:12,270
know<font color="#CCCCCC"> log on</font><font color="#E5E5E5"> to service with their phones</font>

29
00:01:09,630 --> 00:01:15,449
and that gives interesting discussions

30
00:01:12,270 --> 00:01:17,070
about youth topics like my<font color="#E5E5E5"> blessed does</font>

31
00:01:15,450 --> 00:01:20,850
not want<font color="#E5E5E5"> to use a condom what I do which</font>

32
00:01:17,070 --> 00:01:22,740
<font color="#CCCCCC">is you know</font><font color="#E5E5E5"> relevant to these today so</font>

33
00:01:20,850 --> 00:01:25,619
what is the purpose<font color="#E5E5E5"> of the talk to</font>

34
00:01:22,740 --> 00:01:26,939
anchor this talk I'm going<font color="#CCCCCC"> to give you a</font>

35
00:01:25,619 --> 00:01:28,979
bit of an introduction<font color="#E5E5E5"> to secret</font>

36
00:01:26,939 --> 00:01:31,559
<font color="#E5E5E5">management's from very basic first</font>

37
00:01:28,979 --> 00:01:33,119
principles<font color="#CCCCCC"> and</font><font color="#E5E5E5"> hopefully introduce some</font>

38
00:01:31,560 --> 00:01:35,790
<font color="#E5E5E5">cybersecurity tools and primitives for</font>

39
00:01:33,119 --> 00:01:37,650
<font color="#E5E5E5">secret management scale and then the</font>

40
00:01:35,790 --> 00:01:39,780
very<font color="#CCCCCC"> last thing is like some learnings</font>

41
00:01:37,650 --> 00:01:41,820
<font color="#CCCCCC">about how and how not to handle</font><font color="#E5E5E5"> secrets</font>

42
00:01:39,780 --> 00:01:43,460
because you can do<font color="#E5E5E5"> it the right way</font><font color="#CCCCCC"> and</font>

43
00:01:41,820 --> 00:01:47,720
<font color="#E5E5E5">then you can do it</font><font color="#CCCCCC"> the wrong</font><font color="#E5E5E5"> way that</font>

44
00:01:43,460 --> 00:01:51,860
makes<font color="#CCCCCC"> people happy</font><font color="#E5E5E5"> and do talks about so</font>

45
00:01:47,720 --> 00:01:54,270
very<font color="#E5E5E5"> basic stuff what is a secret you</font>

46
00:01:51,860 --> 00:01:56,430
<font color="#CCCCCC">all</font><font color="#E5E5E5"> probably have</font><font color="#CCCCCC"> an intuitive idea</font><font color="#E5E5E5"> of</font>

47
00:01:54,270 --> 00:01:58,679
what a secret<font color="#CCCCCC"> is basically it's some</font>

48
00:01:56,430 --> 00:02:00,630
kind<font color="#CCCCCC"> of knowledge</font><font color="#E5E5E5"> or piece</font><font color="#CCCCCC"> of</font>

49
00:01:58,680 --> 00:02:03,420
<font color="#E5E5E5">information that's hidden</font><font color="#CCCCCC"> from entities</font>

50
00:02:00,630 --> 00:02:04,949
<font color="#CCCCCC">I've not supposed to know them</font><font color="#E5E5E5"> and the</font>

51
00:02:03,420 --> 00:02:07,860
knowledge<font color="#E5E5E5"> of the secret is usually used</font>

52
00:02:04,950 --> 00:02:11,239
<font color="#CCCCCC">to authorize people and</font><font color="#E5E5E5"> really confirm</font>

53
00:02:07,860 --> 00:02:13,560
that the<font color="#E5E5E5"> identity is the same there</font><font color="#CCCCCC"> are</font>

54
00:02:11,239 --> 00:02:16,920
examples of secrets in<font color="#E5E5E5"> computing</font>

55
00:02:13,560 --> 00:02:18,870
passwords<font color="#E5E5E5"> are a</font><font color="#CCCCCC"> private Keys encryption</font>

56
00:02:16,920 --> 00:02:21,260
keys<font color="#E5E5E5"> API took and</font><font color="#CCCCCC"> so as</font><font color="#E5E5E5"> I secret you</font>

57
00:02:18,870 --> 00:02:23,940
shouldn't be<font color="#E5E5E5"> telling them to</font><font color="#CCCCCC"> boyfriend's</font>

58
00:02:21,260 --> 00:02:25,829
<font color="#E5E5E5">so there are lots of ways</font><font color="#CCCCCC"> to actually</font>

59
00:02:23,940 --> 00:02:27,930
<font color="#E5E5E5">break into</font><font color="#CCCCCC"> some software</font><font color="#E5E5E5"> infrastructure</font>

60
00:02:25,830 --> 00:02:30,120
but one<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> most I mean one of the</font>

61
00:02:27,930 --> 00:02:32,160
low-hanging fruit ways is<font color="#CCCCCC"> to</font><font color="#E5E5E5"> compromise</font>

62
00:02:30,120 --> 00:02:33,900
passwords and to<font color="#E5E5E5"> look for places</font><font color="#CCCCCC"> where</font>

63
00:02:32,160 --> 00:02:36,630
people have<font color="#CCCCCC"> been handling them</font>

64
00:02:33,900 --> 00:02:38,610
carelessly so if you're you know either

65
00:02:36,630 --> 00:02:40,440
<font color="#E5E5E5">being an offensive role getting</font>

66
00:02:38,610 --> 00:02:42,239
passwords has always been you<font color="#E5E5E5"> know one</font>

67
00:02:40,440 --> 00:02:45,650
of the things<font color="#CCCCCC"> that you do</font><font color="#E5E5E5"> first just to</font>

68
00:02:42,239 --> 00:02:45,650
see<font color="#E5E5E5"> if</font><font color="#CCCCCC"> you can get in</font><font color="#E5E5E5"> that way</font>

69
00:02:47,420 --> 00:02:52,260
cool<font color="#CCCCCC"> and so let's talk</font><font color="#E5E5E5"> about the anatomy</font>

70
00:02:50,220 --> 00:02:53,609
<font color="#E5E5E5">of a secret not the regular Nats of you</font>

71
00:02:52,260 --> 00:02:56,010
but<font color="#CCCCCC"> the anatomy that hackers actually</font>

72
00:02:53,610 --> 00:02:59,340
care<font color="#CCCCCC"> about</font><font color="#E5E5E5"> so let's look at the attack</font>

73
00:02:56,010 --> 00:03:01,769
<font color="#CCCCCC">surface</font><font color="#E5E5E5"> so the attack surface can be</font>

74
00:02:59,340 --> 00:03:03,120
<font color="#E5E5E5">comprised of many parameters but three</font>

75
00:03:01,769 --> 00:03:05,370
<font color="#CCCCCC">very important ones</font><font color="#E5E5E5"> that we're going to</font>

76
00:03:03,120 --> 00:03:07,530
look at today<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the temporal attack</font>

77
00:03:05,370 --> 00:03:09,870
surface which is<font color="#E5E5E5"> the period of</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> for</font>

78
00:03:07,530 --> 00:03:11,340
which a secret is valid and that that

79
00:03:09,870 --> 00:03:13,410
<font color="#E5E5E5">means that there's more time for you to</font>

80
00:03:11,340 --> 00:03:15,780
get the secret and win a<font color="#E5E5E5"> lot</font>

81
00:03:13,410 --> 00:03:17,160
there's the<font color="#E5E5E5"> also the spatial attack</font>

82
00:03:15,780 --> 00:03:18,959
surface<font color="#E5E5E5"> so that's the number of</font>

83
00:03:17,160 --> 00:03:20,730
interfaces for which your secret is

84
00:03:18,959 --> 00:03:23,070
<font color="#E5E5E5">balanced</font><font color="#CCCCCC"> so if you're using the same</font>

85
00:03:20,730 --> 00:03:24,780
secret<font color="#CCCCCC"> on a lot of</font><font color="#E5E5E5"> different interfaces</font>

86
00:03:23,070 --> 00:03:26,489
<font color="#E5E5E5">you're increasing your spatial attack</font>

87
00:03:24,780 --> 00:03:28,170
<font color="#CCCCCC">surface which means that there's</font><font color="#E5E5E5"> more</font>

88
00:03:26,489 --> 00:03:30,180
opportunities<font color="#CCCCCC"> and</font><font color="#E5E5E5"> more places</font><font color="#CCCCCC"> where</font>

89
00:03:28,170 --> 00:03:33,149
<font color="#CCCCCC">people can poke and get at</font><font color="#E5E5E5"> that secret</font>

90
00:03:30,180 --> 00:03:34,739
<font color="#E5E5E5">the last one is the algorithmic attack</font>

91
00:03:33,150 --> 00:03:36,840
surface which is<font color="#E5E5E5"> the algorithmic</font>

92
00:03:34,739 --> 00:03:38,760
determinism<font color="#E5E5E5"> of the secret and accounts</font>

93
00:03:36,840 --> 00:03:41,940
like people are likely<font color="#E5E5E5"> to</font><font color="#CCCCCC"> use admin</font>

94
00:03:38,760 --> 00:03:44,220
admin as a algorithmic determinism<font color="#CCCCCC"> and</font>

95
00:03:41,940 --> 00:03:46,350
so the algorithm<font color="#E5E5E5"> ik determinism is</font>

96
00:03:44,220 --> 00:03:48,480
basically properties of that secret

97
00:03:46,350 --> 00:03:50,370
generation algorithm that allows<font color="#E5E5E5"> you</font><font color="#CCCCCC"> to</font>

98
00:03:48,480 --> 00:03:52,290
maybe sequence it and figure out how

99
00:03:50,370 --> 00:03:58,590
<font color="#CCCCCC">it's generated and then you make your</font>

100
00:03:52,290 --> 00:04:00,269
<font color="#E5E5E5">own values</font><font color="#CCCCCC"> and yeah</font><font color="#E5E5E5"> so a full 80 percent</font>

101
00:03:58,590 --> 00:04:02,579
of data<font color="#CCCCCC"> breaches you know like around</font>

102
00:04:00,269 --> 00:04:03,959
that area<font color="#E5E5E5"> are caused by silly mistakes</font>

103
00:04:02,579 --> 00:04:06,660
and people<font color="#CCCCCC"> being</font><font color="#E5E5E5"> careless when they're</font>

104
00:04:03,959 --> 00:04:08,489
handling<font color="#E5E5E5"> secrets it's not that you know</font>

105
00:04:06,660 --> 00:04:10,109
people breaking crypto

106
00:04:08,489 --> 00:04:13,590
necessarily being<font color="#E5E5E5"> extremely</font>

107
00:04:10,109 --> 00:04:16,079
sophisticated in<font color="#E5E5E5"> their attacks</font><font color="#CCCCCC"> it may be</font>

108
00:04:13,590 --> 00:04:19,709
is secret management simple injection

109
00:04:16,079 --> 00:04:22,079
<font color="#CCCCCC">very basic</font><font color="#E5E5E5"> stuff so to anchor this talk</font>

110
00:04:19,709 --> 00:04:25,229
I'd really like to tell the<font color="#CCCCCC"> story</font><font color="#E5E5E5"> about</font>

111
00:04:22,079 --> 00:04:26,770
our infrastructure<font color="#E5E5E5"> and if you've been</font><font color="#CCCCCC"> to</font>

112
00:04:25,229 --> 00:04:28,880
<font color="#CCCCCC">the dacha</font><font color="#E5E5E5"> talk earlier</font>

113
00:04:26,770 --> 00:04:33,890
<font color="#CCCCCC">be</font><font color="#E5E5E5"> really great because</font><font color="#CCCCCC"> there's some</font>

114
00:04:28,880 --> 00:04:37,130
continuity cool<font color="#E5E5E5"> so here's the</font><font color="#CCCCCC"> example</font>

115
00:04:33,890 --> 00:04:39,440
<font color="#E5E5E5">so I</font><font color="#CCCCCC"> freaked out that bug</font><font color="#E5E5E5"> we use a lot</font>

116
00:04:37,130 --> 00:04:43,490
of<font color="#E5E5E5"> open source</font><font color="#CCCCCC"> software nonprofit not so</font>

117
00:04:39,440 --> 00:04:45,290
much money<font color="#E5E5E5"> things</font><font color="#CCCCCC"> so what happens is we</font>

118
00:04:43,490 --> 00:04:47,630
usually<font color="#CCCCCC"> run out Python web applications</font>

119
00:04:45,290 --> 00:04:50,480
as docker containers on<font color="#CCCCCC"> the open source</font>

120
00:04:47,630 --> 00:04:52,400
<font color="#E5E5E5">version</font><font color="#CCCCCC"> of missus PSD</font><font color="#E5E5E5"> CRS and what that</font>

121
00:04:50,480 --> 00:04:55,340
is is it's a container orchestration

122
00:04:52,400 --> 00:04:57,979
platform so in the<font color="#E5E5E5"> previous talk about</font>

123
00:04:55,340 --> 00:04:59,659
docker<font color="#E5E5E5"> you were there you know you were</font>

124
00:04:57,980 --> 00:05:01,580
introduced to maybe how to run docker

125
00:04:59,660 --> 00:05:03,110
containers from<font color="#CCCCCC"> the command line</font><font color="#E5E5E5"> but</font>

126
00:05:01,580 --> 00:05:05,390
<font color="#E5E5E5">what if you want to do that at scale</font><font color="#CCCCCC"> so</font>

127
00:05:03,110 --> 00:05:07,070
what if you want<font color="#E5E5E5"> your web applications</font>

128
00:05:05,390 --> 00:05:09,620
<font color="#CCCCCC">to be able</font><font color="#E5E5E5"> to serve lots and lots of</font>

129
00:05:07,070 --> 00:05:12,590
<font color="#CCCCCC">people</font><font color="#E5E5E5"> so we are ambitious in that way</font>

130
00:05:09,620 --> 00:05:14,870
we're not<font color="#CCCCCC"> huge scale but we are medium</font>

131
00:05:12,590 --> 00:05:16,700
scale so we expect to<font color="#E5E5E5"> serve millions of</font>

132
00:05:14,870 --> 00:05:18,890
connections<font color="#E5E5E5"> we expect to be sending</font>

133
00:05:16,700 --> 00:05:20,390
<font color="#CCCCCC">millions of</font><font color="#E5E5E5"> messages every day and so</font>

134
00:05:18,890 --> 00:05:23,090
<font color="#E5E5E5">ultrastructure needs to scale</font><font color="#CCCCCC"> to</font>

135
00:05:20,390 --> 00:05:25,909
accommodate<font color="#CCCCCC"> that so</font><font color="#E5E5E5"> nice thing about</font>

136
00:05:23,090 --> 00:05:28,070
class container orchestration<font color="#E5E5E5"> is that it</font>

137
00:05:25,910 --> 00:05:29,810
helps<font color="#E5E5E5"> you to</font><font color="#CCCCCC"> put your docker containers</font>

138
00:05:28,070 --> 00:05:31,580
where you actually have<font color="#E5E5E5"> resources so</font>

139
00:05:29,810 --> 00:05:33,979
maybe you<font color="#CCCCCC"> have so for</font><font color="#E5E5E5"> high availability</font>

140
00:05:31,580 --> 00:05:36,740
<font color="#CCCCCC">kind of things you have several servers</font>

141
00:05:33,979 --> 00:05:38,810
<font color="#E5E5E5">and according</font><font color="#CCCCCC"> to the</font><font color="#E5E5E5"> resources and</font>

142
00:05:36,740 --> 00:05:40,430
according<font color="#CCCCCC"> to the availability</font><font color="#E5E5E5"> of</font>

143
00:05:38,810 --> 00:05:43,010
<font color="#CCCCCC">resources on those</font><font color="#E5E5E5"> services</font><font color="#CCCCCC"> you might</font>

144
00:05:40,430 --> 00:05:44,930
provision docker containers on one or

145
00:05:43,010 --> 00:05:47,510
maybe on the<font color="#CCCCCC"> other</font><font color="#E5E5E5"> so that's what an</font>

146
00:05:44,930 --> 00:05:49,700
orchestration framework<font color="#E5E5E5"> can do for you</font>

147
00:05:47,510 --> 00:05:51,620
yeah and the other<font color="#E5E5E5"> important</font><font color="#CCCCCC"> thing is we</font>

148
00:05:49,700 --> 00:05:54,800
heard we host our code bases on github

149
00:05:51,620 --> 00:05:58,030
<font color="#CCCCCC">so both our web application code bases</font>

150
00:05:54,800 --> 00:05:59,960
and our configuration<font color="#E5E5E5"> database is like</font>

151
00:05:58,030 --> 00:06:01,760
like puppets

152
00:05:59,960 --> 00:06:05,000
we host<font color="#E5E5E5"> those all on github</font><font color="#CCCCCC"> and the</font>

153
00:06:01,760 --> 00:06:06,550
conflicts<font color="#E5E5E5"> are a private</font><font color="#CCCCCC"> but it's still</font>

154
00:06:05,000 --> 00:06:09,979
<font color="#E5E5E5">on get up</font>

155
00:06:06,550 --> 00:06:11,900
so what does this architecture look like

156
00:06:09,979 --> 00:06:14,750
in practice<font color="#E5E5E5"> this is vastly simplified</font>

157
00:06:11,900 --> 00:06:17,299
but what happens is say somebody<font color="#CCCCCC"> wants</font>

158
00:06:14,750 --> 00:06:20,150
to<font color="#CCCCCC"> launch a web app</font><font color="#E5E5E5"> and it says</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so</font>

159
00:06:17,300 --> 00:06:23,240
<font color="#E5E5E5">here if you're not very familiar</font><font color="#CCCCCC"> with a</font>

160
00:06:20,150 --> 00:06:26,229
class to set up or yeah if you're<font color="#CCCCCC"> not</font>

161
00:06:23,240 --> 00:06:28,700
familiar<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Kuster I hope this is not</font>

162
00:06:26,229 --> 00:06:30,590
reasonably intuitive<font color="#E5E5E5"> so what happens is</font>

163
00:06:28,700 --> 00:06:32,870
you<font color="#CCCCCC"> have some</font><font color="#E5E5E5"> controllers</font><font color="#CCCCCC"> over here and</font>

164
00:06:30,590 --> 00:06:35,039
they have knowledge<font color="#E5E5E5"> of basically what</font>

165
00:06:32,870 --> 00:06:39,210
resources are available

166
00:06:35,040 --> 00:06:41,250
I mean<font color="#E5E5E5"> worker nodes and some staple</font>

167
00:06:39,210 --> 00:06:43,830
services<font color="#E5E5E5"> what happens is somebody says</font>

168
00:06:41,250 --> 00:06:45,810
<font color="#E5E5E5">hey please run this docker image with</font>

169
00:06:43,830 --> 00:06:47,580
<font color="#E5E5E5">these</font><font color="#CCCCCC"> parameters to the controllers and</font>

170
00:06:45,810 --> 00:06:49,919
<font color="#E5E5E5">the controller is like hey everybody who</font>

171
00:06:47,580 --> 00:06:52,620
has capacity maybe<font color="#E5E5E5"> you work at</font><font color="#CCCCCC"> Sears</font>

172
00:06:49,919 --> 00:06:54,719
like y'all<font color="#CCCCCC"> like it</font><font color="#E5E5E5"> so then you end up</font>

173
00:06:52,620 --> 00:06:57,509
<font color="#E5E5E5">running your stop and</font><font color="#CCCCCC"> continue</font><font color="#E5E5E5"> on</font>

174
00:06:54,720 --> 00:07:00,690
<font color="#CCCCCC">working</font><font color="#E5E5E5"> to attain</font><font color="#CCCCCC"> orchestrations pretty</font>

175
00:06:57,509 --> 00:07:03,199
<font color="#E5E5E5">awesome</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> what happens is as you can</font>

176
00:07:00,690 --> 00:07:06,120
<font color="#E5E5E5">see</font><font color="#CCCCCC"> from that</font><font color="#E5E5E5"> particular container</font>

177
00:07:03,199 --> 00:07:09,720
example 1 it might connect to some

178
00:07:06,120 --> 00:07:11,100
stateful services<font color="#CCCCCC"> so in</font><font color="#E5E5E5"> general like I</font>

179
00:07:09,720 --> 00:07:13,169
<font color="#E5E5E5">don't want</font><font color="#CCCCCC"> to be too prescriptive us</font>

180
00:07:11,100 --> 00:07:14,910
about this but in general<font color="#CCCCCC"> you don't</font>

181
00:07:13,169 --> 00:07:17,099
really want<font color="#CCCCCC"> to run stateful services</font>

182
00:07:14,910 --> 00:07:18,930
<font color="#E5E5E5">inside doctor because doctors it's meant</font>

183
00:07:17,100 --> 00:07:22,199
<font color="#CCCCCC">to</font><font color="#E5E5E5"> you know</font><font color="#CCCCCC"> be kind of fail faster but</font>

184
00:07:18,930 --> 00:07:23,880
you<font color="#CCCCCC"> know if it's poop like you need to</font>

185
00:07:22,199 --> 00:07:25,979
be able to<font color="#E5E5E5"> restart it very quickly</font><font color="#CCCCCC"> and</font>

186
00:07:23,880 --> 00:07:28,020
if you have<font color="#E5E5E5"> stains in there</font><font color="#CCCCCC"> even if that</font>

187
00:07:25,979 --> 00:07:30,030
state<font color="#CCCCCC"> so usually we have stable services</font>

188
00:07:28,020 --> 00:07:31,799
outside<font color="#CCCCCC"> of that paradigm</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> those</font>

189
00:07:30,030 --> 00:07:33,270
containers<font color="#CCCCCC"> connectors if you need like a</font>

190
00:07:31,800 --> 00:07:36,330
<font color="#CCCCCC">post or is our base where you rabbit</font>

191
00:07:33,270 --> 00:07:41,130
and cue the<font color="#CCCCCC"> hosts they do connections to</font>

192
00:07:36,330 --> 00:07:42,930
those persistent services great so I'll

193
00:07:41,130 --> 00:07:47,190
containers run routes that need<font color="#E5E5E5"> stable</font>

194
00:07:42,930 --> 00:07:49,889
<font color="#E5E5E5">services as I mentioned and yeah I mean</font>

195
00:07:47,190 --> 00:07:51,479
<font color="#E5E5E5">these are faces message queues but now</font>

196
00:07:49,889 --> 00:07:52,979
<font color="#E5E5E5">they're</font><font color="#CCCCCC"> ready for another stuff so how</font>

197
00:07:51,479 --> 00:07:54,930
do these web apps get<font color="#E5E5E5"> access to the</font>

198
00:07:52,979 --> 00:07:57,150
<font color="#E5E5E5">staple services why</font><font color="#CCCCCC"> they'll</font><font color="#E5E5E5"> with them to</font>

199
00:07:54,930 --> 00:08:01,560
keep them<font color="#E5E5E5"> against them with a secret of</font>

200
00:07:57,150 --> 00:08:03,929
course<font color="#CCCCCC"> oh so what do</font><font color="#E5E5E5"> we do at the</font><font color="#CCCCCC"> moment</font>

201
00:08:01,560 --> 00:08:05,760
<font color="#E5E5E5">at the</font><font color="#CCCCCC"> moment this</font><font color="#E5E5E5"> is um this is</font><font color="#CCCCCC"> what</font>

202
00:08:03,930 --> 00:08:07,590
not<font color="#E5E5E5"> to do you think at the</font><font color="#CCCCCC"> moment we</font>

203
00:08:05,760 --> 00:08:10,710
create<font color="#E5E5E5"> some configure stateful services</font>

204
00:08:07,590 --> 00:08:12,119
manually um using<font color="#E5E5E5"> puppets so we write</font>

205
00:08:10,710 --> 00:08:14,599
the public<font color="#CCCCCC"> our theories get to push to</font>

206
00:08:12,120 --> 00:08:17,430
github<font color="#CCCCCC"> and then you know the puppets</font>

207
00:08:14,599 --> 00:08:20,190
agents on the<font color="#E5E5E5"> host wanna configure run</font>

208
00:08:17,430 --> 00:08:21,780
those<font color="#E5E5E5"> convicts</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> any</font><font color="#CCCCCC"> usernames and</font>

209
00:08:20,190 --> 00:08:23,880
passwords required on these<font color="#E5E5E5"> services are</font>

210
00:08:21,780 --> 00:08:26,638
described in the puppet<font color="#E5E5E5"> config which is</font>

211
00:08:23,880 --> 00:08:30,620
a nugget<font color="#CCCCCC"> helping poke and you can</font>

212
00:08:26,639 --> 00:08:34,560
probably<font color="#E5E5E5"> see might be an issue</font><font color="#CCCCCC"> but first</font>

213
00:08:30,620 --> 00:08:37,169
what we do<font color="#E5E5E5"> on redeploy</font><font color="#CCCCCC"> is we then</font><font color="#E5E5E5"> copy</font>

214
00:08:34,559 --> 00:08:39,510
<font color="#E5E5E5">paste those credentials from the repo</font>

215
00:08:37,169 --> 00:08:41,218
<font color="#E5E5E5">into the environment variables when we</font>

216
00:08:39,510 --> 00:08:42,900
<font color="#E5E5E5">try</font><font color="#CCCCCC"> to launch our containers</font><font color="#E5E5E5"> so what</font>

217
00:08:41,219 --> 00:08:45,510
happens is<font color="#E5E5E5"> hey please run this docker</font>

218
00:08:42,900 --> 00:08:47,110
container by the way<font color="#E5E5E5"> you need to connect</font>

219
00:08:45,510 --> 00:08:49,180
to<font color="#CCCCCC"> the Postgres database on</font>

220
00:08:47,110 --> 00:08:52,240
<font color="#E5E5E5">particular dress it's called Postgres</font>

221
00:08:49,180 --> 00:08:54,099
<font color="#CCCCCC">and as an</font><font color="#E5E5E5"> environment variable username</font>

222
00:08:52,240 --> 00:08:57,670
is admin<font color="#CCCCCC"> and your password</font><font color="#E5E5E5"> is admin</font>

223
00:08:54,100 --> 00:09:00,899
that's<font color="#E5E5E5"> how we do</font><font color="#CCCCCC"> things these days</font><font color="#E5E5E5"> as</font>

224
00:08:57,670 --> 00:09:04,810
you can<font color="#E5E5E5"> tell this is pretty risky but</font>

225
00:09:00,899 --> 00:09:06,430
just clarify on why that<font color="#E5E5E5"> is risky so</font>

226
00:09:04,810 --> 00:09:07,449
there's two big<font color="#CCCCCC"> issues here the</font><font color="#E5E5E5"> first</font>

227
00:09:06,430 --> 00:09:09,609
<font color="#E5E5E5">thing is that we're storing static</font>

228
00:09:07,450 --> 00:09:11,860
credentials<font color="#E5E5E5"> and github</font><font color="#CCCCCC"> and the second</font>

229
00:09:09,610 --> 00:09:13,720
issue is<font color="#E5E5E5"> that we're passing</font><font color="#CCCCCC"> in the</font>

230
00:09:11,860 --> 00:09:16,630
credentials as environment<font color="#E5E5E5"> variables and</font>

231
00:09:13,720 --> 00:09:18,100
if you have been<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> offensive side</font>

232
00:09:16,630 --> 00:09:23,019
<font color="#CCCCCC">of things one of</font><font color="#E5E5E5"> the first things you</font>

233
00:09:18,100 --> 00:09:24,970
get<font color="#E5E5E5"> when</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> get a shell is like so the</font>

234
00:09:23,019 --> 00:09:26,860
risks of passing secret as secrets as

235
00:09:24,970 --> 00:09:29,769
environment variables somebody<font color="#E5E5E5"> manages</font>

236
00:09:26,860 --> 00:09:31,720
to break into<font color="#CCCCCC"> your</font><font color="#E5E5E5"> darker container they</font>

237
00:09:29,769 --> 00:09:33,130
can get your secrets<font color="#E5E5E5"> environment</font>

238
00:09:31,720 --> 00:09:36,519
<font color="#CCCCCC">variables are coming the experts and</font>

239
00:09:33,130 --> 00:09:38,610
application logs<font color="#E5E5E5"> so sometimes like you</font>

240
00:09:36,519 --> 00:09:41,079
don't expect<font color="#CCCCCC"> them to do</font><font color="#E5E5E5"> it but do</font><font color="#CCCCCC"> that</font>

241
00:09:38,610 --> 00:09:42,700
<font color="#CCCCCC">many way about</font><font color="#E5E5E5"> frameworks debug mode</font>

242
00:09:41,079 --> 00:09:44,140
will display environment variables<font color="#CCCCCC"> right</font>

243
00:09:42,700 --> 00:09:46,029
<font color="#E5E5E5">before them by way about</font><font color="#CCCCCC"> permits I mean</font>

244
00:09:44,140 --> 00:09:48,610
like<font color="#CCCCCC"> Python Django that can be put debug</font>

245
00:09:46,029 --> 00:09:49,930
mode<font color="#E5E5E5"> there's some there's some filters</font>

246
00:09:48,610 --> 00:09:51,100
you<font color="#E5E5E5"> can put in on what variables it</font>

247
00:09:49,930 --> 00:09:52,779
displays or not but if you're working

248
00:09:51,100 --> 00:09:55,209
<font color="#CCCCCC">with arbitrary environment variables</font>

249
00:09:52,779 --> 00:09:57,279
<font color="#E5E5E5">that's very difficult to control so</font>

250
00:09:55,209 --> 00:09:58,569
having a lot of<font color="#E5E5E5"> thing is the credential</font>

251
00:09:57,279 --> 00:10:00,600
leaks should happen if your process

252
00:09:58,570 --> 00:10:02,350
folks to interact<font color="#CCCCCC"> with the third-party</font>

253
00:10:00,600 --> 00:10:04,329
<font color="#E5E5E5">application and</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> third-party</font>

254
00:10:02,350 --> 00:10:05,320
application hasn't does it access to

255
00:10:04,329 --> 00:10:06,939
your environment<font color="#CCCCCC"> so</font><font color="#E5E5E5"> this doesn't really</font>

256
00:10:05,320 --> 00:10:13,060
<font color="#CCCCCC">happen that</font><font color="#E5E5E5"> much in practice but it can</font>

257
00:10:06,940 --> 00:10:15,040
happen<font color="#E5E5E5"> the next thing is storing</font><font color="#CCCCCC"> secure</font>

258
00:10:13,060 --> 00:10:17,709
secrets and github<font color="#E5E5E5"> static secrets</font><font color="#CCCCCC"> in</font>

259
00:10:15,040 --> 00:10:20,230
<font color="#CCCCCC">github</font><font color="#E5E5E5"> so can I get a show of hands like</font>

260
00:10:17,709 --> 00:10:23,768
does anybody do<font color="#CCCCCC"> this like</font><font color="#E5E5E5"> in a private</font>

261
00:10:20,230 --> 00:10:26,769
repos anybody done this<font color="#E5E5E5"> I appreciate</font>

262
00:10:23,769 --> 00:10:28,240
your candor<font color="#E5E5E5"> so here are some</font><font color="#CCCCCC"> risks</font><font color="#E5E5E5"> you</font>

263
00:10:26,769 --> 00:10:29,800
<font color="#E5E5E5">probably already know this but</font><font color="#CCCCCC"> just as</font>

264
00:10:28,240 --> 00:10:31,839
<font color="#E5E5E5">like</font><font color="#CCCCCC"> ready</font><font color="#E5E5E5"> spell it out</font>

265
00:10:29,800 --> 00:10:33,849
github is designed to<font color="#CCCCCC"> preserve history</font>

266
00:10:31,839 --> 00:10:36,310
<font color="#E5E5E5">so I'm remote credentials and</font><font color="#CCCCCC"> git</font>

267
00:10:33,850 --> 00:10:38,430
history<font color="#E5E5E5"> are a point of exposure and as</font>

268
00:10:36,310 --> 00:10:40,329
I'm going<font color="#E5E5E5"> to mention later</font><font color="#CCCCCC"> even if</font><font color="#E5E5E5"> those</font>

269
00:10:38,430 --> 00:10:42,640
<font color="#E5E5E5">credentials are revoked</font>

270
00:10:40,329 --> 00:10:43,390
they can still expose you to a<font color="#CCCCCC"> little</font>

271
00:10:42,640 --> 00:10:46,029
bit<font color="#E5E5E5"> of risk</font>

272
00:10:43,390 --> 00:10:48,399
<font color="#CCCCCC">asami I could have really wanted your C</font>

273
00:10:46,029 --> 00:10:50,470
codes they could get them<font color="#E5E5E5"> it's quite</font>

274
00:10:48,399 --> 00:10:52,810
<font color="#E5E5E5">possible</font><font color="#CCCCCC"> to make a private repo public</font>

275
00:10:50,470 --> 00:10:55,930
by accident<font color="#E5E5E5"> and that has happened</font><font color="#CCCCCC"> and it</font>

276
00:10:52,810 --> 00:10:57,939
<font color="#E5E5E5">is not good</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> it's very</font><font color="#CCCCCC"> easy to expose</font>

277
00:10:55,930 --> 00:10:59,770
more secrets than<font color="#CCCCCC"> either</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> third-party</font>

278
00:10:57,940 --> 00:11:00,140
contractors and interns it's like the

279
00:10:59,770 --> 00:11:01,910
intern

280
00:11:00,140 --> 00:11:03,350
it's access to<font color="#E5E5E5"> maybe the one Postgres</font>

281
00:11:01,910 --> 00:11:05,780
database but you're like<font color="#E5E5E5"> okay I'll give</font>

282
00:11:03,350 --> 00:11:08,540
you access to the some puppet repository

283
00:11:05,780 --> 00:11:10,189
right<font color="#CCCCCC"> that's got</font><font color="#E5E5E5"> credits</font><font color="#CCCCCC"> to like all</font>

284
00:11:08,540 --> 00:11:12,500
other<font color="#E5E5E5"> databases but like just pretend</font>

285
00:11:10,190 --> 00:11:15,310
<font color="#CCCCCC">and see them</font><font color="#E5E5E5"> so it's very hard</font><font color="#CCCCCC"> to</font>

286
00:11:12,500 --> 00:11:18,500
isolate<font color="#E5E5E5"> access that way</font>

287
00:11:15,310 --> 00:11:19,969
<font color="#E5E5E5">whoa</font><font color="#CCCCCC"> so it's really easy for those with</font>

288
00:11:18,500 --> 00:11:22,250
access<font color="#CCCCCC"> to four can clone secrets</font>

289
00:11:19,970 --> 00:11:25,400
wholesale<font color="#E5E5E5"> that</font><font color="#CCCCCC"> has happened with us</font>

290
00:11:22,250 --> 00:11:27,770
<font color="#CCCCCC">before and it was not pleasant like</font><font color="#E5E5E5"> this</font>

291
00:11:25,400 --> 00:11:31,730
that's so weird<font color="#CCCCCC"> but in the end if they</font>

292
00:11:27,770 --> 00:11:33,439
wanted a database<font color="#CCCCCC"> potentially</font><font color="#E5E5E5"> and then</font>

293
00:11:31,730 --> 00:11:34,850
as I<font color="#CCCCCC"> mentioned earlier this very</font>

294
00:11:33,440 --> 00:11:36,920
<font color="#CCCCCC">coarse-grained</font><font color="#E5E5E5"> access control so you</font>

295
00:11:34,850 --> 00:11:39,440
<font color="#E5E5E5">can't really say like</font><font color="#CCCCCC"> oh you get access</font>

296
00:11:36,920 --> 00:11:41,360
<font color="#CCCCCC">to this portion of secrets</font><font color="#E5E5E5"> and you don't</font>

297
00:11:39,440 --> 00:11:42,590
if<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> both in the</font><font color="#CCCCCC"> same gets</font><font color="#E5E5E5"> out</font>

298
00:11:41,360 --> 00:11:45,350
repository because<font color="#E5E5E5"> that's how the</font>

299
00:11:42,590 --> 00:11:46,520
<font color="#E5E5E5">controls are enforced the last thing is</font>

300
00:11:45,350 --> 00:11:48,080
you<font color="#E5E5E5"> need to</font><font color="#CCCCCC"> rotate and revoke</font>

301
00:11:46,520 --> 00:11:49,699
credentials manually which becomes

302
00:11:48,080 --> 00:11:51,260
<font color="#E5E5E5">really tedious for</font><font color="#CCCCCC"> more stateful</font>

303
00:11:49,700 --> 00:11:52,730
services you need<font color="#E5E5E5"> to</font><font color="#CCCCCC"> manage which brings</font>

304
00:11:51,260 --> 00:11:54,920
me<font color="#CCCCCC"> to the very important part which is</font>

305
00:11:52,730 --> 00:11:56,450
it does not<font color="#CCCCCC"> allow for</font><font color="#E5E5E5"> security best</font>

306
00:11:54,920 --> 00:12:00,170
practice of scale<font color="#CCCCCC"> so things</font><font color="#E5E5E5"> like key</font>

307
00:11:56,450 --> 00:12:03,110
rolling<font color="#E5E5E5"> things like revocation that's</font>

308
00:12:00,170 --> 00:12:08,180
heavily manual with<font color="#E5E5E5"> this</font><font color="#CCCCCC"> set up and in</font>

309
00:12:03,110 --> 00:12:11,360
general<font color="#CCCCCC"> just not a great idea so</font><font color="#E5E5E5"> it's</font>

310
00:12:08,180 --> 00:12:12,920
trying to<font color="#E5E5E5"> that's right okay so let</font><font color="#CCCCCC"> me</font>

311
00:12:11,360 --> 00:12:14,570
outline some of<font color="#E5E5E5"> the secret management</font>

312
00:12:12,920 --> 00:12:16,579
tasks that you should be<font color="#E5E5E5"> looking at so</font>

313
00:12:14,570 --> 00:12:20,290
the first thing is creating secret teams

314
00:12:16,580 --> 00:12:22,900
<font color="#E5E5E5">created good secret admin Adam good</font>

315
00:12:20,290 --> 00:12:26,719
storage<font color="#E5E5E5"> of secrets so secure storage</font>

316
00:12:22,900 --> 00:12:29,060
<font color="#E5E5E5">storing them in plain text</font><font color="#CCCCCC"> the</font>

317
00:12:26,720 --> 00:12:30,890
distribution<font color="#E5E5E5"> of Secrets which is the the</font>

318
00:12:29,060 --> 00:12:33,079
<font color="#E5E5E5">really fun</font><font color="#CCCCCC"> stuff is to try</font><font color="#E5E5E5"> to get the</font>

319
00:12:30,890 --> 00:12:35,240
secret from<font color="#E5E5E5"> your storage to your</font>

320
00:12:33,080 --> 00:12:37,070
consumer security and the last thing is

321
00:12:35,240 --> 00:12:39,620
to manage the<font color="#E5E5E5"> lifecycle of this input so</font>

322
00:12:37,070 --> 00:12:41,780
when I<font color="#E5E5E5"> mentioned</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> temple</font><font color="#CCCCCC"> the taxon it</font>

323
00:12:39,620 --> 00:12:46,100
was for the secret lifecycle management

324
00:12:41,780 --> 00:12:48,170
helps narrow that<font color="#CCCCCC"> so in terms of</font>

325
00:12:46,100 --> 00:12:49,760
creation<font color="#CCCCCC"> and</font><font color="#E5E5E5"> storage we're migrating our</font>

326
00:12:48,170 --> 00:12:52,880
<font color="#CCCCCC">secret creation and storage</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> hash</font>

327
00:12:49,760 --> 00:12:55,900
<font color="#CCCCCC">table</font><font color="#E5E5E5"> sports again of hands who's been</font>

328
00:12:52,880 --> 00:12:59,570
<font color="#E5E5E5">looking at both</font><font color="#CCCCCC"> poking at both ooh</font>

329
00:12:55,900 --> 00:13:01,250
so both<font color="#E5E5E5"> is very very exciting it's a</font>

330
00:12:59,570 --> 00:13:04,460
<font color="#E5E5E5">secret management solution</font><font color="#CCCCCC"> that is well</font>

331
00:13:01,250 --> 00:13:05,840
maintained<font color="#E5E5E5"> it's open source so guys with</font>

332
00:13:04,460 --> 00:13:07,850
us and<font color="#E5E5E5"> it's designed with high</font>

333
00:13:05,840 --> 00:13:10,040
<font color="#E5E5E5">availability and container orchestrators</font>

334
00:13:07,850 --> 00:13:12,170
in mind<font color="#E5E5E5"> so it doesn't have</font><font color="#CCCCCC"> components</font>

335
00:13:10,040 --> 00:13:14,500
<font color="#CCCCCC">that does that but it has</font><font color="#E5E5E5"> API that plays</font>

336
00:13:12,170 --> 00:13:17,300
well with those kinds of sir

337
00:13:14,500 --> 00:13:19,070
what can it<font color="#E5E5E5"> do for you can generate</font>

338
00:13:17,300 --> 00:13:21,290
<font color="#E5E5E5">secure store and control access to</font>

339
00:13:19,070 --> 00:13:24,140
tokens<font color="#CCCCCC"> password certificates API keys</font>

340
00:13:21,290 --> 00:13:26,839
and<font color="#E5E5E5"> other secrets</font><font color="#CCCCCC"> it's gone</font><font color="#E5E5E5"> through</font><font color="#CCCCCC"> a</font>

341
00:13:24,140 --> 00:13:29,660
couple<font color="#E5E5E5"> of independent audits and orders</font>

342
00:13:26,840 --> 00:13:31,040
came out pretty<font color="#E5E5E5"> good</font><font color="#CCCCCC"> what it also does</font>

343
00:13:29,660 --> 00:13:33,170
is<font color="#E5E5E5"> can help you with</font>

344
00:13:31,040 --> 00:13:35,870
leasing here<font color="#E5E5E5"> in vacation</font><font color="#CCCCCC"> key rolling and</font>

345
00:13:33,170 --> 00:13:37,939
auditing because it<font color="#CCCCCC"> keeps</font><font color="#E5E5E5"> some logs and</font>

346
00:13:35,870 --> 00:13:39,440
<font color="#E5E5E5">this leasing system is tied to like the</font>

347
00:13:37,940 --> 00:13:41,870
time where stuff<font color="#CCCCCC"> was issued</font>

348
00:13:39,440 --> 00:13:43,460
so auditing it becomes maybe a bit

349
00:13:41,870 --> 00:13:45,770
easier<font color="#CCCCCC"> because you can narrow down the</font>

350
00:13:43,460 --> 00:13:47,990
times where credentials were issued or

351
00:13:45,770 --> 00:13:49,640
revoked<font color="#E5E5E5"> and the nice thing</font><font color="#CCCCCC"> is that it</font>

352
00:13:47,990 --> 00:13:52,520
<font color="#E5E5E5">exposes all</font><font color="#CCCCCC"> of the stuff</font><font color="#E5E5E5"> through</font><font color="#CCCCCC"> a REST</font>

353
00:13:49,640 --> 00:13:53,990
API which is the fashionable<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> with</font>

354
00:13:52,520 --> 00:13:58,340
which<font color="#E5E5E5"> micro services might like to</font>

355
00:13:53,990 --> 00:14:01,520
<font color="#E5E5E5">communicate these days right so</font><font color="#CCCCCC"> vault is</font>

356
00:13:58,340 --> 00:14:03,710
only one piece of<font color="#CCCCCC"> the puzzle as</font><font color="#E5E5E5"> I</font>

357
00:14:01,520 --> 00:14:05,660
<font color="#E5E5E5">mentioned it</font><font color="#CCCCCC"> pays</font><font color="#E5E5E5"> well with all of</font><font color="#CCCCCC"> these</font>

358
00:14:03,710 --> 00:14:07,730
<font color="#CCCCCC">other workflows</font><font color="#E5E5E5"> but it doesn't actually</font>

359
00:14:05,660 --> 00:14:12,350
do<font color="#CCCCCC"> anything in terms of um</font><font color="#E5E5E5"> secure</font>

360
00:14:07,730 --> 00:14:13,940
distribution so which<font color="#E5E5E5"> brings</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> for the</font>

361
00:14:12,350 --> 00:14:15,890
<font color="#E5E5E5">next part secret management which is</font>

362
00:14:13,940 --> 00:14:18,740
distributing secrets so<font color="#E5E5E5"> what does that</font>

363
00:14:15,890 --> 00:14:20,030
<font color="#CCCCCC">entail</font><font color="#E5E5E5"> well its entails getting</font><font color="#CCCCCC"> the</font>

364
00:14:18,740 --> 00:14:22,430
secret from<font color="#E5E5E5"> vault to the correct</font>

365
00:14:20,030 --> 00:14:25,040
consumer<font color="#CCCCCC"> you need to keep the secret</font>

366
00:14:22,430 --> 00:14:27,410
safe from<font color="#CCCCCC"> exploitation during</font><font color="#E5E5E5"> transits</font>

367
00:14:25,040 --> 00:14:28,910
<font color="#E5E5E5">and then scaling that secret</font>

368
00:14:27,410 --> 00:14:31,880
distribution with large numbers<font color="#E5E5E5"> of</font>

369
00:14:28,910 --> 00:14:34,280
consumers<font color="#E5E5E5"> because some with this is kind</font>

370
00:14:31,880 --> 00:14:38,330
of container orchestration and things

371
00:14:34,280 --> 00:14:40,790
<font color="#E5E5E5">like</font><font color="#CCCCCC"> that we're talking about</font><font color="#E5E5E5"> so before</font>

372
00:14:38,330 --> 00:14:44,180
I go any further<font color="#E5E5E5"> I'd like to talk about</font>

373
00:14:40,790 --> 00:14:46,849
some secret management primitives<font color="#E5E5E5"> so one</font>

374
00:14:44,180 --> 00:14:48,589
of<font color="#E5E5E5"> these things is trust so I think I</font>

375
00:14:46,850 --> 00:14:50,510
hope everybody has a<font color="#E5E5E5"> reason the</font>

376
00:14:48,590 --> 00:14:53,000
intuitive<font color="#E5E5E5"> idea of what</font><font color="#CCCCCC"> trusts might be</font>

377
00:14:50,510 --> 00:14:55,130
but just<font color="#E5E5E5"> to spell that out</font><font color="#CCCCCC"> trust between</font>

378
00:14:53,000 --> 00:14:57,260
<font color="#E5E5E5">software actors refers to maybe</font><font color="#CCCCCC"> waiving</font>

379
00:14:55,130 --> 00:14:59,660
the frequency or rigor with which an

380
00:14:57,260 --> 00:15:01,819
authorization routine is conducted for

381
00:14:59,660 --> 00:15:03,469
<font color="#E5E5E5">privileged requests so an</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> of</font>

382
00:15:01,820 --> 00:15:05,780
<font color="#E5E5E5">this in real</font><font color="#CCCCCC"> life is you might</font><font color="#E5E5E5"> consider</font>

383
00:15:03,470 --> 00:15:08,030
installing some burglar bars or an alarm

384
00:15:05,780 --> 00:15:10,069
in your<font color="#CCCCCC"> house but once you're inside the</font>

385
00:15:08,030 --> 00:15:12,709
<font color="#E5E5E5">house like putting burglar bars on</font><font color="#CCCCCC"> your</font>

386
00:15:10,070 --> 00:15:14,840
bathroom<font color="#CCCCCC"> as men you just prove so</font>

387
00:15:12,710 --> 00:15:16,340
usually what happens is once you've gone

388
00:15:14,840 --> 00:15:18,380
through<font color="#E5E5E5"> the front door and the alarm</font>

389
00:15:16,340 --> 00:15:20,720
<font color="#E5E5E5">doesn't get set off that is a trust zone</font>

390
00:15:18,380 --> 00:15:22,400
<font color="#E5E5E5">that you're in and you</font><font color="#CCCCCC"> know you</font><font color="#E5E5E5"> don't</font>

391
00:15:20,720 --> 00:15:25,190
need<font color="#E5E5E5"> to like authenticate yourself</font><font color="#CCCCCC"> or</font>

392
00:15:22,400 --> 00:15:27,120
use any<font color="#E5E5E5"> keys or codes to get into any</font>

393
00:15:25,190 --> 00:15:29,850
other rooms

394
00:15:27,120 --> 00:15:32,550
in terms of software<font color="#E5E5E5"> some example</font>

395
00:15:29,850 --> 00:15:34,320
preconditions are you know the same

396
00:15:32,550 --> 00:15:38,099
<font color="#E5E5E5">network trust</font><font color="#CCCCCC"> zone so what this happens</font>

397
00:15:34,320 --> 00:15:40,650
is like well if<font color="#E5E5E5"> you can SSH</font><font color="#CCCCCC"> into this</font>

398
00:15:38,100 --> 00:15:41,790
particular<font color="#E5E5E5"> service your internal cluster</font>

399
00:15:40,650 --> 00:15:44,910
<font color="#E5E5E5">and you can go to any of the other</font>

400
00:15:41,790 --> 00:15:46,980
servers<font color="#CCCCCC"> which is</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> people</font>

401
00:15:44,910 --> 00:15:50,370
<font color="#CCCCCC">always exploitable natural</font><font color="#E5E5E5"> movements in</font>

402
00:15:46,980 --> 00:15:52,590
contests and yeah the same kind of thing

403
00:15:50,370 --> 00:15:54,870
even<font color="#CCCCCC"> in web apps a valid session token</font>

404
00:15:52,590 --> 00:15:56,190
is also kind of<font color="#E5E5E5"> like trust so you don't</font>

405
00:15:54,870 --> 00:15:58,020
have<font color="#E5E5E5"> to keep on putting your username</font>

406
00:15:56,190 --> 00:15:59,430
and<font color="#CCCCCC"> password there as long</font><font color="#E5E5E5"> as you have</font>

407
00:15:58,020 --> 00:16:00,840
that valid session token the web app

408
00:15:59,430 --> 00:16:02,989
<font color="#CCCCCC">trust those you</font><font color="#E5E5E5"> and you can go around</font>

409
00:16:00,840 --> 00:16:05,700
<font color="#E5E5E5">the</font><font color="#CCCCCC"> web app without</font><font color="#E5E5E5"> real</font><font color="#CCCCCC"> pentacle to</font>

410
00:16:02,990 --> 00:16:08,730
<font color="#E5E5E5">think about</font><font color="#CCCCCC"> trusses</font><font color="#E5E5E5"> I can be one-way or</font>

411
00:16:05,700 --> 00:16:11,940
mutual<font color="#E5E5E5"> so with like mutual TLS that's a</font>

412
00:16:08,730 --> 00:16:14,790
mutual<font color="#CCCCCC"> trust with just regular TLS</font>

413
00:16:11,940 --> 00:16:16,620
that's one way<font color="#E5E5E5"> and so what</font><font color="#CCCCCC"> I want to</font>

414
00:16:14,790 --> 00:16:18,540
<font color="#CCCCCC">introduce here is coupling in terms of</font>

415
00:16:16,620 --> 00:16:19,950
security<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> combination of</font>

416
00:16:18,540 --> 00:16:24,930
mutual<font color="#CCCCCC"> trust and degree of</font>

417
00:16:19,950 --> 00:16:27,120
interdependence so let's talk about<font color="#E5E5E5"> the</font>

418
00:16:24,930 --> 00:16:29,790
cash dollar solutions that you could be

419
00:16:27,120 --> 00:16:31,170
deploying maybe you<font color="#CCCCCC"> work for Amazon or</font>

420
00:16:29,790 --> 00:16:34,910
<font color="#CCCCCC">something like that</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you've got your</font>

421
00:16:31,170 --> 00:16:37,589
cool<font color="#CCCCCC"> empower secret management systems</font>

422
00:16:34,910 --> 00:16:39,540
<font color="#CCCCCC">but in general what's out there</font><font color="#E5E5E5"> is that</font>

423
00:16:37,590 --> 00:16:41,550
<font color="#E5E5E5">many enterprise container orchestration</font>

424
00:16:39,540 --> 00:16:43,199
platforms<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> like have their own</font>

425
00:16:41,550 --> 00:16:46,140
way<font color="#CCCCCC"> of distributing secrets and most of</font>

426
00:16:43,200 --> 00:16:47,700
that<font color="#E5E5E5"> actually leverages exploiting some</font>

427
00:16:46,140 --> 00:16:48,569
trans relationships to get<font color="#E5E5E5"> the secret</font>

428
00:16:47,700 --> 00:16:52,860
<font color="#CCCCCC">recipe</font>

429
00:16:48,570 --> 00:16:55,380
so yeah<font color="#E5E5E5"> it's mostly secret injection or</font>

430
00:16:52,860 --> 00:16:58,590
maybe mounting like a shared volume<font color="#E5E5E5"> in</font>

431
00:16:55,380 --> 00:17:00,180
the case of<font color="#CCCCCC"> Cuban</font><font color="#E5E5E5"> 80s</font><font color="#CCCCCC"> what you do</font><font color="#E5E5E5"> is you</font>

432
00:16:58,590 --> 00:17:02,640
didn't cook the storage and then<font color="#E5E5E5"> mount</font>

433
00:17:00,180 --> 00:17:05,730
<font color="#E5E5E5">it</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the container and decrypt it</font><font color="#CCCCCC"> and</font>

434
00:17:02,640 --> 00:17:06,990
that's how<font color="#E5E5E5"> it gets its secrets</font><font color="#CCCCCC"> or some</font>

435
00:17:05,730 --> 00:17:10,520
<font color="#E5E5E5">of these other</font><font color="#CCCCCC"> solution was mostly</font>

436
00:17:06,990 --> 00:17:13,770
injected in environment variables and

437
00:17:10,520 --> 00:17:15,270
then stay with me<font color="#CCCCCC"> there's also some</font>

438
00:17:13,770 --> 00:17:17,639
<font color="#CCCCCC">open-source tools that leverages</font>

439
00:17:15,270 --> 00:17:19,410
<font color="#E5E5E5">paradigm so it requires ecosystem</font><font color="#CCCCCC"> buyer</font>

440
00:17:17,640 --> 00:17:21,870
so there's<font color="#E5E5E5"> end console that works on</font>

441
00:17:19,410 --> 00:17:24,000
systems<font color="#E5E5E5"> that use console as service</font>

442
00:17:21,869 --> 00:17:26,219
<font color="#E5E5E5">discovery module</font><font color="#CCCCCC"> so a console is a key</font>

443
00:17:24,000 --> 00:17:28,140
value<font color="#E5E5E5"> store and what happens with end</font>

444
00:17:26,220 --> 00:17:29,820
console is<font color="#E5E5E5"> that the key value store is</font>

445
00:17:28,140 --> 00:17:32,490
then coupled with the secret storage<font color="#E5E5E5"> and</font>

446
00:17:29,820 --> 00:17:35,770
in the end it injects containers

447
00:17:32,490 --> 00:17:38,090
<font color="#CCCCCC">indexes</font><font color="#E5E5E5"> secrets into the containers at</font>

448
00:17:35,770 --> 00:17:39,950
but what do<font color="#E5E5E5"> you do if you don't have</font>

449
00:17:38,090 --> 00:17:41,449
control<font color="#CCCCCC"> over</font><font color="#E5E5E5"> your scheduler logic you</font>

450
00:17:39,950 --> 00:17:43,520
can't<font color="#CCCCCC"> afford an</font><font color="#E5E5E5"> enterprise license</font><font color="#CCCCCC"> or a</font>

451
00:17:41,450 --> 00:17:46,610
<font color="#E5E5E5">product and or don't want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> invest in</font>

452
00:17:43,520 --> 00:17:50,210
<font color="#E5E5E5">the new orchestration ecosystem yeah I</font>

453
00:17:46,610 --> 00:17:52,280
guess you checks all three<font color="#CCCCCC"> boxes so if</font>

454
00:17:50,210 --> 00:17:54,320
you want to reason<font color="#CCCCCC"> about this from</font><font color="#E5E5E5"> first</font>

455
00:17:52,280 --> 00:17:56,420
principles<font color="#CCCCCC"> you might be like okay cool</font>

456
00:17:54,320 --> 00:17:58,280
<font color="#CCCCCC">how about I launch the container and the</font>

457
00:17:56,420 --> 00:18:01,670
container<font color="#CCCCCC"> makes some calls</font><font color="#E5E5E5"> to ask folks</font>

458
00:17:58,280 --> 00:18:03,410
<font color="#E5E5E5">for secrets of the launch</font><font color="#CCCCCC"> so the problem</font>

459
00:18:01,670 --> 00:18:06,740
is<font color="#E5E5E5"> that once you've launched a container</font>

460
00:18:03,410 --> 00:18:08,600
<font color="#CCCCCC">you shouldn't be</font><font color="#E5E5E5"> trusting it so with</font>

461
00:18:06,740 --> 00:18:10,580
trust you can trust<font color="#CCCCCC"> a container as long</font>

462
00:18:08,600 --> 00:18:11,990
as you haven't launched it yet<font color="#CCCCCC"> but once</font>

463
00:18:10,580 --> 00:18:13,939
you have launched it and it's<font color="#CCCCCC"> making</font>

464
00:18:11,990 --> 00:18:17,180
calls<font color="#CCCCCC"> your internal network that could</font>

465
00:18:13,940 --> 00:18:19,580
<font color="#E5E5E5">be any object so</font><font color="#CCCCCC"> you shouldn't</font><font color="#E5E5E5"> be</font>

466
00:18:17,180 --> 00:18:21,290
<font color="#E5E5E5">trusting your containers if the content</font>

467
00:18:19,580 --> 00:18:23,629
authenticates devolved with the secrets

468
00:18:21,290 --> 00:18:25,280
<font color="#E5E5E5">how does that you could get there in</font><font color="#CCCCCC"> the</font>

469
00:18:23,630 --> 00:18:28,130
first<font color="#CCCCCC"> place so if you're not really</font>

470
00:18:25,280 --> 00:18:30,410
<font color="#E5E5E5">doing the cool trust stuff beforehand</font>

471
00:18:28,130 --> 00:18:32,360
<font color="#E5E5E5">you know it gets</font><font color="#CCCCCC"> really difficult to get</font>

472
00:18:30,410 --> 00:18:34,940
that<font color="#E5E5E5"> first secret that makes sure</font><font color="#CCCCCC"> that</font>

473
00:18:32,360 --> 00:18:36,290
those containers<font color="#CCCCCC"> legit the other</font>

474
00:18:34,940 --> 00:18:38,180
question is how<font color="#CCCCCC"> does</font><font color="#E5E5E5"> well confirm the</font>

475
00:18:36,290 --> 00:18:41,629
identity<font color="#CCCCCC"> and permissions of the</font><font color="#E5E5E5"> client</font>

476
00:18:38,180 --> 00:18:43,370
container<font color="#CCCCCC"> right you know they're solving</font>

477
00:18:41,630 --> 00:18:45,530
this<font color="#CCCCCC"> by trusting all the</font><font color="#E5E5E5"> actors you</font><font color="#CCCCCC"> can</font>

478
00:18:43,370 --> 00:18:47,570
connect over<font color="#CCCCCC"> a private interface is like</font>

479
00:18:45,530 --> 00:18:50,540
possibly a solution but it<font color="#CCCCCC"> is too coarse</font>

480
00:18:47,570 --> 00:18:52,070
<font color="#E5E5E5">grain so what I mean by</font><font color="#CCCCCC"> that is you</font>

481
00:18:50,540 --> 00:18:54,680
<font color="#E5E5E5">might</font><font color="#CCCCCC"> have different container</font><font color="#E5E5E5"> classes</font>

482
00:18:52,070 --> 00:18:57,200
that need<font color="#E5E5E5"> different different access to</font>

483
00:18:54,680 --> 00:19:00,770
different different levels<font color="#E5E5E5"> of access</font><font color="#CCCCCC"> to</font>

484
00:18:57,200 --> 00:19:02,690
<font color="#CCCCCC">your stateful services</font><font color="#E5E5E5"> if you just be</font>

485
00:19:00,770 --> 00:19:04,280
like<font color="#E5E5E5"> okay one size fits all if you can</font>

486
00:19:02,690 --> 00:19:07,640
<font color="#E5E5E5">kick in a connect over</font><font color="#CCCCCC"> this interface</font>

487
00:19:04,280 --> 00:19:09,230
then you get access to<font color="#E5E5E5"> everything that's</font>

488
00:19:07,640 --> 00:19:12,740
how<font color="#CCCCCC"> that rule is natural movement</font>

489
00:19:09,230 --> 00:19:15,380
happens<font color="#E5E5E5"> so let's</font><font color="#CCCCCC"> not do that</font><font color="#E5E5E5"> well this</font>

490
00:19:12,740 --> 00:19:17,000
<font color="#E5E5E5">brings me to this overarching concept in</font>

491
00:19:15,380 --> 00:19:19,370
secret distribution which is<font color="#E5E5E5"> called the</font>

492
00:19:17,000 --> 00:19:21,740
security<font color="#E5E5E5"> reduction problem and what that</font>

493
00:19:19,370 --> 00:19:24,020
<font color="#E5E5E5">basically means is that if we</font><font color="#CCCCCC"> can</font>

494
00:19:21,740 --> 00:19:26,660
securely get the initial secret<font color="#CCCCCC"> granting</font>

495
00:19:24,020 --> 00:19:28,280
the container access to both or your

496
00:19:26,660 --> 00:19:29,660
secret management system in the

497
00:19:28,280 --> 00:19:32,090
container<font color="#E5E5E5"> can securely fetch all</font>

498
00:19:29,660 --> 00:19:35,960
subsequent secrets<font color="#E5E5E5"> but how do we fetch</font>

499
00:19:32,090 --> 00:19:38,360
<font color="#E5E5E5">this</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> secret</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> Jeff Mitchell which</font>

500
00:19:35,960 --> 00:19:40,280
is one<font color="#E5E5E5"> of the engineers at BOTS</font><font color="#CCCCCC"> had a</font>

501
00:19:38,360 --> 00:19:42,229
<font color="#E5E5E5">really good talk about one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

502
00:19:40,280 --> 00:19:44,120
patterns that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can use which is the</font>

503
00:19:42,230 --> 00:19:46,550
<font color="#E5E5E5">security option agent</font><font color="#CCCCCC"> if you're</font>

504
00:19:44,120 --> 00:19:47,879
interested<font color="#CCCCCC"> here is his YouTube talk and</font>

505
00:19:46,550 --> 00:19:51,329
he has like<font color="#CCCCCC"> my</font>

506
00:19:47,879 --> 00:19:53,069
clean pictures over there<font color="#CCCCCC"> and yeah I</font>

507
00:19:51,329 --> 00:19:54,389
<font color="#E5E5E5">really highly</font><font color="#CCCCCC"> recommend</font><font color="#E5E5E5"> it the</font><font color="#CCCCCC"> talk it's</font>

508
00:19:53,069 --> 00:19:58,949
called secure introduction at scale

509
00:19:54,389 --> 00:20:00,569
<font color="#E5E5E5">think like a vault developer so what</font>

510
00:19:58,949 --> 00:20:01,979
does this<font color="#CCCCCC"> acure introduction agent do</font>

511
00:20:00,569 --> 00:20:04,229
and what<font color="#E5E5E5"> does it</font><font color="#CCCCCC"> look like how does it</font>

512
00:20:01,979 --> 00:20:05,699
<font color="#CCCCCC">fit</font><font color="#E5E5E5"> and stuff so what it is is it's</font>

513
00:20:04,229 --> 00:20:08,249
<font color="#CCCCCC">closely coupled with the cluster</font>

514
00:20:05,699 --> 00:20:09,919
<font color="#E5E5E5">scheduler and maintains a mapping of the</font>

515
00:20:08,249 --> 00:20:13,349
container properties for example

516
00:20:09,919 --> 00:20:16,259
<font color="#E5E5E5">launched app name or contain name</font><font color="#CCCCCC"> - both</font>

517
00:20:13,349 --> 00:20:17,609
policies what this happens is to

518
00:20:16,259 --> 00:20:20,519
<font color="#CCCCCC">minimize the attack surface of</font><font color="#E5E5E5"> the</font>

519
00:20:17,609 --> 00:20:23,789
initial secrets<font color="#E5E5E5"> we use</font><font color="#CCCCCC"> wrap tokens</font><font color="#E5E5E5"> what</font>

520
00:20:20,519 --> 00:20:25,589
is a wrap token you might pass well it's

521
00:20:23,789 --> 00:20:28,408
basically a<font color="#CCCCCC"> single-use token whose</font>

522
00:20:25,589 --> 00:20:30,389
purpose is to encapsulate<font color="#E5E5E5"> a token</font><font color="#CCCCCC"> value</font>

523
00:20:28,409 --> 00:20:32,729
<font color="#E5E5E5">so this is one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> very nice things about</font>

524
00:20:30,389 --> 00:20:34,918
wrap token is that it can bypass some<font color="#E5E5E5"> of</font>

525
00:20:32,729 --> 00:20:36,869
<font color="#CCCCCC">the concerns</font><font color="#E5E5E5"> you might have with passing</font>

526
00:20:34,919 --> 00:20:38,999
things on as environment variables it is

527
00:20:36,869 --> 00:20:41,369
single-use once the true token value<font color="#E5E5E5"> is</font>

528
00:20:38,999 --> 00:20:43,379
extracted the wrapping token is useless

529
00:20:41,369 --> 00:20:47,819
<font color="#E5E5E5">so</font><font color="#CCCCCC"> okay who cares of an attacker gets it</font>

530
00:20:43,379 --> 00:20:49,408
like it's not useful to<font color="#CCCCCC"> that yeah</font><font color="#E5E5E5"> and it</font>

531
00:20:47,819 --> 00:20:52,559
also knows<font color="#CCCCCC"> the risk of exposure through</font>

532
00:20:49,409 --> 00:20:54,769
logs or<font color="#CCCCCC"> lots of intermediary services</font>

533
00:20:52,559 --> 00:20:58,579
that that<font color="#E5E5E5"> wrapped up in my pass through</font>

534
00:20:54,769 --> 00:21:02,819
so how does this<font color="#E5E5E5"> look in practice</font><font color="#CCCCCC"> so if</font>

535
00:20:58,579 --> 00:21:04,889
you are<font color="#CCCCCC"> familiar with DCOs or miss I saw</font>

536
00:21:02,819 --> 00:21:06,418
it touched that ecosystem before<font color="#E5E5E5"> this</font>

537
00:21:04,889 --> 00:21:09,059
might make<font color="#E5E5E5"> a bit more sense because I've</font>

538
00:21:06,419 --> 00:21:11,879
got the<font color="#CCCCCC"> schedule as</font><font color="#E5E5E5"> matter from there</font><font color="#CCCCCC"> or</font>

539
00:21:09,059 --> 00:21:13,979
it can be nice if you don't<font color="#CCCCCC"> you've got</font>

540
00:21:11,879 --> 00:21:16,678
<font color="#CCCCCC">to save some services as an example</font><font color="#E5E5E5"> of</font>

541
00:21:13,979 --> 00:21:18,419
<font color="#CCCCCC">Postgres here volts is all friend here</font>

542
00:21:16,679 --> 00:21:21,539
and then the new actor here is<font color="#E5E5E5"> the</font>

543
00:21:18,419 --> 00:21:23,190
<font color="#CCCCCC">secrete</font><font color="#E5E5E5"> secure introduction agent and at</font>

544
00:21:21,539 --> 00:21:25,259
the<font color="#E5E5E5"> moment we're using gatekeeper but</font>

545
00:21:23,190 --> 00:21:27,929
<font color="#E5E5E5">I'm sure there are other agents out</font>

546
00:21:25,259 --> 00:21:29,219
<font color="#CCCCCC">there that can do that so if you go</font>

547
00:21:27,929 --> 00:21:31,709
ahead and<font color="#E5E5E5"> say to the scheduler hey</font>

548
00:21:29,219 --> 00:21:33,859
please run<font color="#CCCCCC"> this target image by the way</font>

549
00:21:31,709 --> 00:21:37,169
it means<font color="#E5E5E5"> access to this</font><font color="#CCCCCC"> Postgres I</font>

550
00:21:33,859 --> 00:21:39,509
<font color="#CCCCCC">schedulers are cool and they launched</font>

551
00:21:37,169 --> 00:21:42,389
the container<font color="#E5E5E5"> so once I containers</font>

552
00:21:39,509 --> 00:21:44,699
<font color="#CCCCCC">launch it's like hey everybody container</font>

553
00:21:42,389 --> 00:21:46,559
<font color="#E5E5E5">you know I need a boat so I can to get</font>

554
00:21:44,699 --> 00:21:48,329
my price grants credentials<font color="#E5E5E5"> and what</font>

555
00:21:46,559 --> 00:21:50,219
that does is it asks the secure

556
00:21:48,329 --> 00:21:51,869
introduction agent for that<font color="#CCCCCC"> scary</font>

557
00:21:50,219 --> 00:21:53,399
<font color="#E5E5E5">introduction agent by the way like it's</font>

558
00:21:51,869 --> 00:21:58,948
very closely coupled with the scheduler

559
00:21:53,399 --> 00:22:01,500
so yeah<font color="#CCCCCC"> and the secure introduction asks</font>

560
00:21:58,949 --> 00:22:04,260
the schedule ahead<font color="#E5E5E5"> Cara is</font><font color="#CCCCCC"> verbal</font><font color="#E5E5E5"> rain</font>

561
00:22:01,500 --> 00:22:07,080
container<font color="#CCCCCC"> and that's how identity</font>

562
00:22:04,260 --> 00:22:09,330
identity<font color="#CCCCCC"> is verified</font><font color="#E5E5E5"> so as you might</font>

563
00:22:07,080 --> 00:22:11,129
probably start thinking<font color="#CCCCCC"> now you're</font>

564
00:22:09,330 --> 00:22:12,419
<font color="#E5E5E5">really into like look at your secure</font>

565
00:22:11,130 --> 00:22:17,580
introduction agent make sure it's

566
00:22:12,420 --> 00:22:19,680
actually<font color="#E5E5E5"> coupled there and secured so</font>

567
00:22:17,580 --> 00:22:23,040
once it gets<font color="#CCCCCC"> confirmation that Purple</font>

568
00:22:19,680 --> 00:22:25,140
<font color="#CCCCCC">Rain</font><font color="#E5E5E5"> is a little container then then it</font>

569
00:22:23,040 --> 00:22:27,210
looks to its own internal mappings of

570
00:22:25,140 --> 00:22:29,160
the purple red container<font color="#E5E5E5"> and they're</font>

571
00:22:27,210 --> 00:22:31,260
both policies<font color="#E5E5E5"> so what this does is</font><font color="#CCCCCC"> it</font>

572
00:22:29,160 --> 00:22:33,630
says okay<font color="#CCCCCC"> well the container that is</font>

573
00:22:31,260 --> 00:22:35,640
<font color="#E5E5E5">prefixed with purple rain' can log into</font>

574
00:22:33,630 --> 00:22:40,410
<font color="#CCCCCC">vaults and read these defaults and</font>

575
00:22:35,640 --> 00:22:42,450
Postgres credentials then a ghost of

576
00:22:40,410 --> 00:22:44,310
<font color="#CCCCCC">alton</font><font color="#E5E5E5"> it says hi vault it's me the</font>

577
00:22:42,450 --> 00:22:45,720
secure introduction agent please make my

578
00:22:44,310 --> 00:22:47,940
friend a token with the default and

579
00:22:45,720 --> 00:22:50,610
Postgres policies<font color="#E5E5E5"> here's my earth token</font>

580
00:22:47,940 --> 00:22:53,430
by the way which<font color="#E5E5E5"> I got</font><font color="#CCCCCC"> at some points</font>

581
00:22:50,610 --> 00:22:56,490
<font color="#E5E5E5">and if all goes well</font><font color="#CCCCCC"> vault will pass</font>

582
00:22:53,430 --> 00:22:58,380
back a<font color="#E5E5E5"> wrapped token to the</font><font color="#CCCCCC"> si agent</font>

583
00:22:56,490 --> 00:23:00,300
says yep<font color="#CCCCCC"> give it to your friend who can</font>

584
00:22:58,380 --> 00:23:01,800
redeem it<font color="#E5E5E5"> for the real token value it's</font>

585
00:23:00,300 --> 00:23:03,120
important to note that at<font color="#E5E5E5"> this point the</font>

586
00:23:01,800 --> 00:23:05,730
<font color="#CCCCCC">secure introduction agent does not</font>

587
00:23:03,120 --> 00:23:07,169
<font color="#E5E5E5">unwrap the value and that's that's for</font>

588
00:23:05,730 --> 00:23:09,120
<font color="#E5E5E5">good reason</font><font color="#CCCCCC"> because if it has any logs</font>

589
00:23:07,170 --> 00:23:11,550
<font color="#E5E5E5">or if something intercepts</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> value</font>

590
00:23:09,120 --> 00:23:15,080
and you know can't<font color="#E5E5E5"> get access</font><font color="#CCCCCC"> to vault</font>

591
00:23:11,550 --> 00:23:18,389
that means that it's<font color="#E5E5E5"> not useful</font><font color="#CCCCCC"> for them</font>

592
00:23:15,080 --> 00:23:20,790
who then the SI engine passes<font color="#E5E5E5"> it to the</font>

593
00:23:18,390 --> 00:23:24,690
<font color="#E5E5E5">container as there you go</font><font color="#CCCCCC"> Purple Rain</font>

594
00:23:20,790 --> 00:23:26,399
have you taken and what the container

595
00:23:24,690 --> 00:23:27,900
can<font color="#CCCCCC"> do is make some calls to vault</font><font color="#E5E5E5"> to be</font>

596
00:23:26,400 --> 00:23:29,670
like please unwrap<font color="#CCCCCC"> this trick</font><font color="#E5E5E5"> and give</font>

597
00:23:27,900 --> 00:23:30,930
me the real value<font color="#E5E5E5"> because at the</font><font color="#CCCCCC"> moment</font>

598
00:23:29,670 --> 00:23:33,930
you can't<font color="#E5E5E5"> really do anything with</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> at</font>

599
00:23:30,930 --> 00:23:35,220
value on<font color="#CCCCCC"> bolts</font><font color="#E5E5E5"> and then unwrap once</font>

600
00:23:33,930 --> 00:23:37,080
that's<font color="#E5E5E5"> unwrapped the real token value</font>

601
00:23:35,220 --> 00:23:39,600
<font color="#E5E5E5">goes</font><font color="#CCCCCC"> back to the Purple Reign container</font>

602
00:23:37,080 --> 00:23:44,850
<font color="#E5E5E5">happy days it can now make Costa vault</font>

603
00:23:39,600 --> 00:23:47,490
and ask it for credentials<font color="#E5E5E5"> which it does</font>

604
00:23:44,850 --> 00:23:49,350
in this next step<font color="#CCCCCC"> high volt</font><font color="#E5E5E5"> please give</font>

605
00:23:47,490 --> 00:23:52,350
me secrets for<font color="#E5E5E5"> Postgres</font><font color="#CCCCCC"> here's my token</font>

606
00:23:49,350 --> 00:23:54,449
by the way that's<font color="#E5E5E5"> the wrapped value all</font>

607
00:23:52,350 --> 00:23:56,520
goes well<font color="#E5E5E5"> and both says there you go</font>

608
00:23:54,450 --> 00:23:59,580
<font color="#E5E5E5">Postgres the username is admin</font><font color="#CCCCCC"> isolate</font>

609
00:23:56,520 --> 00:24:03,740
the admin and then you can use those

610
00:23:59,580 --> 00:24:06,179
<font color="#CCCCCC">credentials to make constant sequences</font>

611
00:24:03,740 --> 00:24:09,870
that's<font color="#E5E5E5"> pretty cool but some you might</font>

612
00:24:06,180 --> 00:24:11,850
notice<font color="#CCCCCC"> that it's admin admin</font><font color="#E5E5E5"> again like</font>

613
00:24:09,870 --> 00:24:13,229
<font color="#E5E5E5">surely we can do better</font><font color="#CCCCCC"> than this</font><font color="#E5E5E5"> for</font>

614
00:24:11,850 --> 00:24:14,419
<font color="#E5E5E5">all clients and connecting</font><font color="#CCCCCC"> to that</font>

615
00:24:13,230 --> 00:24:16,160
<font color="#E5E5E5">resource</font>

616
00:24:14,420 --> 00:24:18,200
<font color="#E5E5E5">marry that's how lateral movement</font>

617
00:24:16,160 --> 00:24:21,970
happens so let's<font color="#CCCCCC"> try and kill this burn</font>

618
00:24:18,200 --> 00:24:24,520
and a different bird with<font color="#E5E5E5"> one stone</font><font color="#CCCCCC"> next</font>

619
00:24:21,970 --> 00:24:27,260
so once we've distributed<font color="#E5E5E5"> our secrets</font>

620
00:24:24,520 --> 00:24:29,840
<font color="#CCCCCC">it's time</font><font color="#E5E5E5"> to manage the secret lifecycle</font>

621
00:24:27,260 --> 00:24:31,760
<font color="#E5E5E5">so as I mentioned this is to narrow the</font>

622
00:24:29,840 --> 00:24:33,790
<font color="#E5E5E5">temple attack surface better doesn't</font>

623
00:24:31,760 --> 00:24:36,440
have some other surprising advantages

624
00:24:33,790 --> 00:24:38,210
what you need to do it miss you need<font color="#E5E5E5"> to</font>

625
00:24:36,440 --> 00:24:39,590
revoke secrets<font color="#E5E5E5"> from entities no longer</font>

626
00:24:38,210 --> 00:24:41,300
acquiring them<font color="#CCCCCC"> these</font><font color="#E5E5E5"> are of a</font>

627
00:24:39,590 --> 00:24:43,850
<font color="#E5E5E5">compromised secrets and issues and new</font>

628
00:24:41,300 --> 00:24:46,070
ones which is<font color="#E5E5E5"> a key wording destroying</font>

629
00:24:43,850 --> 00:24:47,959
<font color="#E5E5E5">valid secrets and prevent reuse of the</font>

630
00:24:46,070 --> 00:24:50,629
secret value<font color="#E5E5E5"> and you can actually do all</font>

631
00:24:47,960 --> 00:24:54,740
<font color="#CCCCCC">of this in one in a couple of fell</font>

632
00:24:50,630 --> 00:24:57,050
swoops<font color="#CCCCCC"> and here are the benefits that</font>

633
00:24:54,740 --> 00:24:58,760
<font color="#E5E5E5">you get so you reduce the valid validity</font>

634
00:24:57,050 --> 00:25:00,710
period of Secrets to<font color="#E5E5E5"> narrow its</font><font color="#CCCCCC"> temporal</font>

635
00:24:58,760 --> 00:25:02,600
attack<font color="#E5E5E5"> surface you can reduce the</font>

636
00:25:00,710 --> 00:25:04,280
algorithmic attack surface by not

637
00:25:02,600 --> 00:25:06,409
exposing<font color="#E5E5E5"> expired potentials with the</font>

638
00:25:04,280 --> 00:25:08,000
same generation method you can reduce

639
00:25:06,410 --> 00:25:09,980
the<font color="#CCCCCC"> reduce fulness of compromised</font>

640
00:25:08,000 --> 00:25:13,160
credentials to<font color="#E5E5E5"> the malicious parties and</font>

641
00:25:09,980 --> 00:25:18,050
then you think<font color="#E5E5E5"> about automating this at</font>

642
00:25:13,160 --> 00:25:19,940
scale because scaling is<font color="#CCCCCC"> interesting so</font>

643
00:25:18,050 --> 00:25:21,800
how do<font color="#E5E5E5"> we actually do</font><font color="#CCCCCC"> this I'm going to</font>

644
00:25:19,940 --> 00:25:25,760
introduce some<font color="#E5E5E5"> primitives and some glue</font>

645
00:25:21,800 --> 00:25:27,169
that puts everything together<font color="#E5E5E5"> cool so</font>

646
00:25:25,760 --> 00:25:29,690
the first secret management firms earth

647
00:25:27,170 --> 00:25:31,670
is dynamic sequence<font color="#CCCCCC"> so our dynamic</font>

648
00:25:29,690 --> 00:25:34,240
secrets<font color="#E5E5E5"> they're lazily generated when</font>

649
00:25:31,670 --> 00:25:36,620
they're<font color="#E5E5E5"> needed from one master secret</font><font color="#CCCCCC"> so</font>

650
00:25:34,240 --> 00:25:39,080
<font color="#E5E5E5">I'll explain how that works</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the next</font>

651
00:25:36,620 --> 00:25:41,000
section but the advantages is that<font color="#E5E5E5"> it</font>

652
00:25:39,080 --> 00:25:43,280
<font color="#E5E5E5">prevents hard-coding of</font><font color="#CCCCCC"> secrets</font><font color="#E5E5E5"> it</font>

653
00:25:41,000 --> 00:25:45,410
prevents<font color="#CCCCCC"> secretly reuse by automating</font>

654
00:25:43,280 --> 00:25:47,120
new secret generation it supports

655
00:25:45,410 --> 00:25:49,070
automated renewal<font color="#E5E5E5"> and rotation of</font>

656
00:25:47,120 --> 00:25:50,689
<font color="#CCCCCC">secrets and the nice thing about this</font><font color="#E5E5E5"> it</font>

657
00:25:49,070 --> 00:25:53,240
<font color="#CCCCCC">does actually scale well for unique</font>

658
00:25:50,690 --> 00:25:54,980
passwords in 1 to infinity resource

659
00:25:53,240 --> 00:25:56,990
client scenario<font color="#CCCCCC"> so if you have like n</font>

660
00:25:54,980 --> 00:25:58,820
clients that are trying<font color="#E5E5E5"> to connect your</font>

661
00:25:56,990 --> 00:26:01,460
single<font color="#E5E5E5"> resource all of them can have a</font>

662
00:25:58,820 --> 00:26:05,179
unique<font color="#CCCCCC"> password that</font><font color="#E5E5E5"> can be rolled that</font>

663
00:26:01,460 --> 00:26:09,590
can be<font color="#CCCCCC"> audited and you don't</font><font color="#E5E5E5"> have to</font>

664
00:26:05,180 --> 00:26:12,440
reuse the same credentials cool so an

665
00:26:09,590 --> 00:26:14,990
example of<font color="#E5E5E5"> this is maybe trying to</font>

666
00:26:12,440 --> 00:26:17,390
connect<font color="#E5E5E5"> Postgres so secret management</font>

667
00:26:14,990 --> 00:26:19,370
<font color="#E5E5E5">services holds a master secret</font><font color="#CCCCCC"> which is</font>

668
00:26:17,390 --> 00:26:21,620
maybe username and password<font color="#CCCCCC"> to a</font>

669
00:26:19,370 --> 00:26:23,479
Postgres database so this master secret

670
00:26:21,620 --> 00:26:25,850
<font color="#E5E5E5">is authorized to create new roles it has</font>

671
00:26:23,480 --> 00:26:27,030
the like create role privilege on

672
00:26:25,850 --> 00:26:28,740
<font color="#E5E5E5">Postgres</font>

673
00:26:27,030 --> 00:26:30,389
when a consumer<font color="#E5E5E5"> needs access to that</font>

674
00:26:28,740 --> 00:26:33,000
database<font color="#E5E5E5"> it requests a new set of</font>

675
00:26:30,390 --> 00:26:34,380
<font color="#E5E5E5">dynamic secrets from vault both then</font>

676
00:26:33,000 --> 00:26:36,540
authenticates to the Postgres database

677
00:26:34,380 --> 00:26:38,190
with the master secrets then run<font color="#CCCCCC"> some</font>

678
00:26:36,540 --> 00:26:39,450
queries to create the dynamic secret so

679
00:26:38,190 --> 00:26:42,450
it<font color="#E5E5E5"> runs actually like create</font><font color="#CCCCCC"> role</font>

680
00:26:39,450 --> 00:26:44,100
queries<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> post greater spits out</font>

681
00:26:42,450 --> 00:26:46,710
some new credentials<font color="#E5E5E5"> and the important</font>

682
00:26:44,100 --> 00:26:49,620
part<font color="#E5E5E5"> is familiar with Postgres there's a</font>

683
00:26:46,710 --> 00:26:51,210
password expiry<font color="#E5E5E5"> and so it spits out new</font>

684
00:26:49,620 --> 00:26:54,239
credentials with an expiry period on

685
00:26:51,210 --> 00:26:56,010
credentials<font color="#E5E5E5"> and then Bob wraps the new</font>

686
00:26:54,240 --> 00:26:57,290
<font color="#E5E5E5">secret with some metadata and returns it</font>

687
00:26:56,010 --> 00:27:00,090
to<font color="#E5E5E5"> the consumer</font>

688
00:26:57,290 --> 00:27:01,970
what is this metadata you might ask is

689
00:27:00,090 --> 00:27:04,590
the second<font color="#E5E5E5"> parameter which is</font><font color="#CCCCCC"> visas so</font>

690
00:27:01,970 --> 00:27:06,600
<font color="#CCCCCC">theses are metadata for issued secrets</font>

691
00:27:04,590 --> 00:27:09,810
that describe the<font color="#E5E5E5"> validity</font><font color="#CCCCCC"> so each</font>

692
00:27:06,600 --> 00:27:12,689
dynamic secret<font color="#CCCCCC"> and auth token issued</font><font color="#E5E5E5"> has</font>

693
00:27:09,810 --> 00:27:15,149
a nice ID and it also has some<font color="#E5E5E5"> info on</font>

694
00:27:12,690 --> 00:27:17,640
you know like how how long<font color="#E5E5E5"> does the</font>

695
00:27:15,150 --> 00:27:20,910
secret have to<font color="#E5E5E5"> live which is the title</font>

696
00:27:17,640 --> 00:27:22,710
of value<font color="#CCCCCC"> is it renewable can</font><font color="#E5E5E5"> I renew the</font>

697
00:27:20,910 --> 00:27:23,790
secret and extend<font color="#E5E5E5"> its time to love</font>

698
00:27:22,710 --> 00:27:26,040
<font color="#CCCCCC">renewing it</font>

699
00:27:23,790 --> 00:27:27,840
this is<font color="#CCCCCC"> allow the</font><font color="#E5E5E5"> validity</font><font color="#CCCCCC"> period of</font>

700
00:27:26,040 --> 00:27:30,420
<font color="#CCCCCC">Secrets to</font><font color="#E5E5E5"> be extended for secrets to</font>

701
00:27:27,840 --> 00:27:32,580
the universe<font color="#CCCCCC"> and then this</font><font color="#E5E5E5"> is with a</font>

702
00:27:30,420 --> 00:27:34,230
short TTL forces consumers to check in

703
00:27:32,580 --> 00:27:36,600
<font color="#E5E5E5">with both continuously to keep</font><font color="#CCCCCC"> the</font>

704
00:27:34,230 --> 00:27:37,980
secrets from expiring<font color="#E5E5E5"> so that is a</font>

705
00:27:36,600 --> 00:27:39,870
really<font color="#CCCCCC"> great advantage</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> it can</font>

706
00:27:37,980 --> 00:27:42,870
automate<font color="#CCCCCC"> secret cleanup if your</font>

707
00:27:39,870 --> 00:27:44,550
consumers did it no longer<font color="#E5E5E5"> renews those</font>

708
00:27:42,870 --> 00:27:46,469
<font color="#E5E5E5">credentials and the credentials expire</font>

709
00:27:44,550 --> 00:27:49,620
<font color="#E5E5E5">you</font><font color="#CCCCCC"> don't have to do that manually at</font>

710
00:27:46,470 --> 00:27:53,040
all so how do we put all<font color="#CCCCCC"> of this</font>

711
00:27:49,620 --> 00:27:55,320
together<font color="#E5E5E5"> so in a very general</font><font color="#CCCCCC"> sense but</font>

712
00:27:53,040 --> 00:27:58,260
container<font color="#E5E5E5"> launches it goes through the</font>

713
00:27:55,320 --> 00:27:59,939
<font color="#CCCCCC">dancer</font><font color="#E5E5E5"> it gets its credentials and maybe</font>

714
00:27:58,260 --> 00:28:02,400
in<font color="#E5E5E5"> your container you</font><font color="#CCCCCC"> have a</font><font color="#E5E5E5"> helper</font>

715
00:27:59,940 --> 00:28:04,890
process that fetches the<font color="#E5E5E5"> required</font>

716
00:28:02,400 --> 00:28:07,080
secrets to a file or to the<font color="#CCCCCC"> environment</font>

717
00:28:04,890 --> 00:28:08,700
<font color="#E5E5E5">file</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> a bit better but honestly</font>

718
00:28:07,080 --> 00:28:11,129
<font color="#E5E5E5">like</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> you've compromised</font><font color="#CCCCCC"> the process</font>

719
00:28:08,700 --> 00:28:13,370
of the application<font color="#CCCCCC"> that's exposed to</font>

720
00:28:11,130 --> 00:28:15,750
<font color="#CCCCCC">Internet like you know you can</font><font color="#E5E5E5"> read it</font>

721
00:28:13,370 --> 00:28:17,760
<font color="#CCCCCC">help the process also</font><font color="#E5E5E5"> makes</font><font color="#CCCCCC"> cause to</font>

722
00:28:15,750 --> 00:28:19,890
vote to renew the leases on the<font color="#CCCCCC"> secrets</font>

723
00:28:17,760 --> 00:28:21,540
so while the consumers still<font color="#E5E5E5"> alive</font>

724
00:28:19,890 --> 00:28:23,130
the helper process keeps thinking about

725
00:28:21,540 --> 00:28:24,930
<font color="#CCCCCC">and be like yeah please renew</font><font color="#E5E5E5"> those fees</font>

726
00:28:23,130 --> 00:28:28,470
<font color="#E5E5E5">in</font><font color="#CCCCCC"> use like a</font><font color="#E5E5E5"> library book</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> never</font>

727
00:28:24,930 --> 00:28:30,120
gets returned<font color="#CCCCCC"> and so as long as</font><font color="#E5E5E5"> the</font>

728
00:28:28,470 --> 00:28:31,890
container is alive presumably the

729
00:28:30,120 --> 00:28:34,199
secrets remain valid<font color="#E5E5E5"> it's really great</font>

730
00:28:31,890 --> 00:28:35,700
but if the content dies<font color="#CCCCCC"> help a process</font>

731
00:28:34,200 --> 00:28:38,360
<font color="#CCCCCC">start to renew your nieces</font><font color="#E5E5E5"> and it's</font><font color="#CCCCCC"> this</font>

732
00:28:35,700 --> 00:28:38,360
if it's expired

733
00:28:38,490 --> 00:28:43,230
so in conclusion<font color="#CCCCCC"> secret management and</font>

734
00:28:42,510 --> 00:28:45,060
<font color="#E5E5E5">medium-scale</font>

735
00:28:43,230 --> 00:28:46,920
<font color="#CCCCCC">open-source systems is still relatively</font>

736
00:28:45,060 --> 00:28:50,129
unexplored<font color="#CCCCCC"> there are a lot of solutions</font>

737
00:28:46,920 --> 00:28:52,440
out<font color="#E5E5E5"> there already but in terms of</font>

738
00:28:50,130 --> 00:28:54,300
already mature solutions that's it's

739
00:28:52,440 --> 00:28:56,700
more<font color="#CCCCCC"> of an enterprise</font><font color="#E5E5E5"> space or like you</font>

740
00:28:54,300 --> 00:28:58,860
<font color="#E5E5E5">know an in-house solution for things you</font>

741
00:28:56,700 --> 00:29:00,870
want to do things<font color="#CCCCCC"> open-source it's a</font>

742
00:28:58,860 --> 00:29:02,969
really<font color="#E5E5E5"> great playground to have a look</font>

743
00:29:00,870 --> 00:29:04,350
and<font color="#CCCCCC"> think about</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> workflows in a</font>

744
00:29:02,970 --> 00:29:06,450
pinch you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> use your schedule as</font>

745
00:29:04,350 --> 00:29:10,110
identity server for<font color="#CCCCCC"> client side consumer</font>

746
00:29:06,450 --> 00:29:11,760
<font color="#CCCCCC">secrets moving beyond storing secrets</font>

747
00:29:10,110 --> 00:29:13,770
and cloud repositories is possible

748
00:29:11,760 --> 00:29:15,240
without you know paying fiat<font color="#CCCCCC"> currencies</font>

749
00:29:13,770 --> 00:29:17,370
<font color="#CCCCCC">let's spend some time to like</font><font color="#E5E5E5"> make it</font>

750
00:29:15,240 --> 00:29:18,930
<font color="#E5E5E5">work but you don't</font><font color="#CCCCCC"> have to pay</font><font color="#E5E5E5"> for your</font>

751
00:29:17,370 --> 00:29:21,209
license or anything<font color="#E5E5E5"> because you can also</font>

752
00:29:18,930 --> 00:29:24,210
do this with<font color="#CCCCCC"> open</font><font color="#E5E5E5"> source tools and the</font>

753
00:29:21,210 --> 00:29:25,770
last thing is pretty<font color="#E5E5E5"> interesting which</font>

754
00:29:24,210 --> 00:29:27,570
is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> most secret management solutions</font>

755
00:29:25,770 --> 00:29:29,700
for container orchestration platforms

756
00:29:27,570 --> 00:29:31,470
they exploit<font color="#CCCCCC"> trusts and companies to</font>

757
00:29:29,700 --> 00:29:34,080
<font color="#E5E5E5">distribute secrets so you're not I don't</font>

758
00:29:31,470 --> 00:29:38,360
<font color="#E5E5E5">think you're gonna see</font><font color="#CCCCCC"> containers</font>

759
00:29:34,080 --> 00:29:40,949
authenticating back to your custom

760
00:29:38,360 --> 00:29:43,260
<font color="#E5E5E5">you'll contain orchestration apps and</font>

761
00:29:40,950 --> 00:29:45,780
proving its own identity what it does is

762
00:29:43,260 --> 00:29:47,160
it usually and<font color="#E5E5E5"> usually exploits a trust</font>

763
00:29:45,780 --> 00:29:49,889
relationship<font color="#CCCCCC"> that</font><font color="#E5E5E5"> happens before the</font>

764
00:29:47,160 --> 00:29:53,730
container is launched so see<font color="#E5E5E5"> if</font><font color="#CCCCCC"> you can</font>

765
00:29:49,890 --> 00:29:55,650
spot where it happens and if you<font color="#E5E5E5"> can</font>

766
00:29:53,730 --> 00:29:57,590
hear some<font color="#E5E5E5"> open source tools that have to</font>

767
00:29:55,650 --> 00:30:01,710
<font color="#CCCCCC">cobalt is there you can check that</font><font color="#E5E5E5"> out</font>

768
00:29:57,590 --> 00:30:04,530
<font color="#CCCCCC">for a secure introduction agent and it's</font>

769
00:30:01,710 --> 00:30:06,900
reasonably reasonably<font color="#CCCCCC"> okay it's called</font>

770
00:30:04,530 --> 00:30:08,610
<font color="#E5E5E5">both gatekeeper Vsauce you can pull that</font>

771
00:30:06,900 --> 00:30:12,150
<font color="#CCCCCC">and have a</font><font color="#E5E5E5"> look at it it has</font><font color="#CCCCCC"> a docker</font>

772
00:30:08,610 --> 00:30:13,830
image<font color="#CCCCCC"> I'm not very easily</font>

773
00:30:12,150 --> 00:30:16,590
there's<font color="#E5E5E5"> also both keeper so when I</font>

774
00:30:13,830 --> 00:30:18,889
<font color="#E5E5E5">mentioned</font><font color="#CCCCCC"> the agents</font><font color="#E5E5E5"> that's inside the</font>

775
00:30:16,590 --> 00:30:21,120
content of the<font color="#E5E5E5"> benches and renew secrets</font>

776
00:30:18,890 --> 00:30:22,980
there is a tool that we both<font color="#E5E5E5"> caught both</font>

777
00:30:21,120 --> 00:30:24,209
<font color="#E5E5E5">keeper which which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> that kind of tool</font>

778
00:30:22,980 --> 00:30:26,340
for docker containers and it's

779
00:30:24,210 --> 00:30:28,190
<font color="#E5E5E5">especially good</font><font color="#CCCCCC"> because it solves some</font>

780
00:30:26,340 --> 00:30:32,129
problems<font color="#E5E5E5"> that might</font><font color="#CCCCCC"> be presented on</font>

781
00:30:28,190 --> 00:30:33,990
<font color="#E5E5E5">Python and unicorn applications</font><font color="#CCCCCC"> and then</font>

782
00:30:32,130 --> 00:30:35,910
very lastly there's<font color="#CCCCCC"> an console that's</font>

783
00:30:33,990 --> 00:30:38,100
<font color="#E5E5E5">very cool that's also one of the things</font>

784
00:30:35,910 --> 00:30:38,970
that<font color="#CCCCCC"> is</font><font color="#E5E5E5"> coupled with the scheduler but</font>

785
00:30:38,100 --> 00:30:43,800
<font color="#E5E5E5">it injects</font>

786
00:30:38,970 --> 00:30:47,160
<font color="#E5E5E5">secrets as environment variables</font><font color="#CCCCCC"> thank</font>

787
00:30:43,800 --> 00:30:50,399
you<font color="#CCCCCC"> very much if</font><font color="#E5E5E5"> you're King feel free</font>

788
00:30:47,160 --> 00:30:51,700
to drop me<font color="#E5E5E5"> mail at my email address cool</font>

789
00:30:50,400 --> 00:31:00,550
questions

790
00:30:51,700 --> 00:31:13,780
thanks very much<font color="#E5E5E5"> question Oh</font><font color="#CCCCCC"> anybody</font><font color="#E5E5E5"> has</font>

791
00:31:00,550 --> 00:31:15,879
any questions yes no I think that's<font color="#E5E5E5"> a</font>

792
00:31:13,780 --> 00:31:18,520
very<font color="#E5E5E5"> good point because if you want to</font>

793
00:31:15,880 --> 00:31:19,450
<font color="#E5E5E5">be automating things at scale</font><font color="#CCCCCC"> you want</font>

794
00:31:18,520 --> 00:31:22,450
to be able<font color="#CCCCCC"> to store these things</font>

795
00:31:19,450 --> 00:31:24,550
<font color="#E5E5E5">involved so the one solution that</font><font color="#CCCCCC"> we we</font>

796
00:31:22,450 --> 00:31:27,190
want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> using is happening bolts</font>

797
00:31:24,550 --> 00:31:29,909
<font color="#E5E5E5">which you know it leads you back to the</font>

798
00:31:27,190 --> 00:31:32,260
same<font color="#E5E5E5"> problem</font><font color="#CCCCCC"> so at the</font><font color="#E5E5E5"> moment I haven't</font>

799
00:31:29,910 --> 00:31:34,600
really seen any good solutions<font color="#CCCCCC"> for that</font>

800
00:31:32,260 --> 00:31:39,190
but that<font color="#E5E5E5"> is definitely</font><font color="#CCCCCC"> the next step</font><font color="#E5E5E5"> to</font>

801
00:31:34,600 --> 00:31:52,689
make<font color="#CCCCCC"> is useful</font><font color="#E5E5E5"> for people any other</font>

802
00:31:39,190 --> 00:31:55,060
persons<font color="#CCCCCC"> oh no I wish</font><font color="#E5E5E5"> yes yes actually</font>

803
00:31:52,690 --> 00:31:57,430
<font color="#E5E5E5">bolts can use as a instead</font><font color="#CCCCCC"> of an initial</font>

804
00:31:55,060 --> 00:32:00,190
<font color="#E5E5E5">north token</font><font color="#CCCCCC"> fault does have integrations</font>

805
00:31:57,430 --> 00:32:01,780
for LDAP and<font color="#CCCCCC"> earth</font><font color="#E5E5E5"> as well so you can</font>

806
00:32:00,190 --> 00:32:03,940
<font color="#CCCCCC">use those solutions</font><font color="#E5E5E5"> as well at the</font>

807
00:32:01,780 --> 00:32:05,889
moment<font color="#CCCCCC"> like we</font><font color="#E5E5E5"> do today to have our own</font>

808
00:32:03,940 --> 00:32:11,250
LDAP server<font color="#E5E5E5"> we swallow</font><font color="#CCCCCC"> these tokens</font><font color="#E5E5E5"> but</font>

809
00:32:05,890 --> 00:32:11,250
yeah you can't so feel free to yeah yeah

810
00:32:19,700 --> 00:32:25,010
yes you can use<font color="#E5E5E5"> it for others so when I</font>

811
00:32:22,970 --> 00:32:26,360
made an example<font color="#CCCCCC"> with</font><font color="#E5E5E5"> Postgres both</font>

812
00:32:25,010 --> 00:32:28,370
supports a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> different backends</font>

813
00:32:26,360 --> 00:32:29,870
that actually can use<font color="#E5E5E5"> the tech</font><font color="#CCCCCC"> hammock</font>

814
00:32:28,370 --> 00:32:32,030
dynamic sequence<font color="#CCCCCC"> from that</font><font color="#E5E5E5"> both even</font>

815
00:32:29,870 --> 00:32:33,889
access<font color="#E5E5E5"> Leica it can actually be a</font>

816
00:32:32,030 --> 00:32:36,620
certificate server view<font color="#E5E5E5"> really</font><font color="#CCCCCC"> why's</font><font color="#E5E5E5"> it</font>

817
00:32:33,890 --> 00:32:50,330
<font color="#E5E5E5">so it's got a lot of support for</font><font color="#CCCCCC"> four</font>

818
00:32:36,620 --> 00:32:52,669
key generation<font color="#E5E5E5"> and</font><font color="#CCCCCC"> stop</font><font color="#E5E5E5"> sorry yeah yeah</font>

819
00:32:50,330 --> 00:32:55,909
so at the<font color="#E5E5E5"> moment we we try to</font><font color="#CCCCCC"> reserving</font>

820
00:32:52,670 --> 00:32:57,670
<font color="#E5E5E5">HTTP from the cluster</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> this it's a</font>

821
00:32:55,910 --> 00:32:59,600
bit of a pain trying<font color="#E5E5E5"> to distribute this</font>

822
00:32:57,670 --> 00:33:02,090
<font color="#E5E5E5">certificates on to all our load</font>

823
00:32:59,600 --> 00:33:03,760
balancers actually so using<font color="#CCCCCC"> bolt</font><font color="#E5E5E5"> as a</font>

824
00:33:02,090 --> 00:33:06,290
central place<font color="#CCCCCC"> to store and distribute</font>

825
00:33:03,760 --> 00:33:07,940
certificates is the next step and<font color="#CCCCCC"> that's</font>

826
00:33:06,290 --> 00:33:19,810
in the<font color="#E5E5E5"> fantasy league we really like to</font>

827
00:33:07,940 --> 00:33:19,810
<font color="#E5E5E5">do that</font><font color="#CCCCCC"> that's right</font>

828
00:33:30,789 --> 00:33:34,359
that's a really<font color="#E5E5E5"> good</font><font color="#CCCCCC"> question south of</font>

829
00:33:32,709 --> 00:33:36,190
<font color="#E5E5E5">awe at the moment both has a lot of</font>

830
00:33:34,359 --> 00:33:38,049
<font color="#E5E5E5">different</font><font color="#CCCCCC"> modules that</font><font color="#E5E5E5"> you can manage</font>

831
00:33:36,190 --> 00:33:39,759
<font color="#E5E5E5">sequence with and you're right if you</font>

832
00:33:38,049 --> 00:33:42,429
<font color="#E5E5E5">want to</font><font color="#CCCCCC"> manage arbitrary secrets you</font>

833
00:33:39,759 --> 00:33:44,949
will have to it needs a new secret

834
00:33:42,429 --> 00:33:46,119
<font color="#CCCCCC">back-end</font><font color="#E5E5E5"> involves</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> process at the</font>

835
00:33:44,949 --> 00:33:48,009
<font color="#CCCCCC">moments</font><font color="#E5E5E5"> that they don't accept</font>

836
00:33:46,119 --> 00:33:49,389
submissions<font color="#CCCCCC"> or</font><font color="#E5E5E5"> not so that's maybe a bit</font>

837
00:33:48,009 --> 00:33:51,789
<font color="#E5E5E5">of a weakness they have a general</font>

838
00:33:49,389 --> 00:33:53,918
generic storage back-end but<font color="#E5E5E5"> if you're</font>

839
00:33:51,789 --> 00:33:56,349
<font color="#E5E5E5">wanting</font><font color="#CCCCCC"> to do dynamic support</font><font color="#E5E5E5"> stuff you</font>

840
00:33:53,919 --> 00:33:57,549
want native support for<font color="#E5E5E5"> it</font><font color="#CCCCCC"> at the</font><font color="#E5E5E5"> moment</font>

841
00:33:56,349 --> 00:33:58,809
they're<font color="#CCCCCC"> not accepting requests because</font>

842
00:33:57,549 --> 00:34:02,158
they don't trust people who you know

843
00:33:58,809 --> 00:34:02,158
<font color="#E5E5E5">roll their own secret stuff</font>

844
00:34:11,370 --> 00:34:16,589
yes and no so<font color="#E5E5E5"> for databases there is a</font>

845
00:34:15,000 --> 00:34:18,170
plug-in<font color="#E5E5E5"> system and you can write your</font>

846
00:34:16,590 --> 00:34:21,780
own<font color="#E5E5E5"> plug-in and that's that's the judge</font>

847
00:34:18,170 --> 00:34:26,040
<font color="#E5E5E5">for not that database things</font><font color="#CCCCCC"> it's it's a</font>

848
00:34:21,780 --> 00:34:28,290
bit trickier but it's got some<font color="#E5E5E5"> people</font>

849
00:34:26,040 --> 00:34:30,480
featured<font color="#CCCCCC"> um you know the list of</font>

850
00:34:28,290 --> 00:34:33,060
<font color="#CCCCCC">back-end</font><font color="#E5E5E5"> offerings</font><font color="#CCCCCC"> this is pretty good</font>

851
00:34:30,480 --> 00:34:45,920
so maybe<font color="#E5E5E5"> have a look stuff yes there was</font>

852
00:34:33,060 --> 00:34:45,920
a question<font color="#E5E5E5"> back there yes yeah yes yeah</font>

853
00:34:48,620 --> 00:34:53,909
<font color="#CCCCCC">hsm</font><font color="#E5E5E5"> I'm not so sure</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> but it does</font>

854
00:34:51,420 --> 00:34:57,270
have does have support for encrypting

855
00:34:53,909 --> 00:34:59,609
<font color="#E5E5E5">like data streams and generating he's</font>

856
00:34:57,270 --> 00:35:02,480
for that<font color="#E5E5E5"> but maybe have a look at it</font>

857
00:34:59,610 --> 00:35:11,850
<font color="#CCCCCC">because as</font><font color="#E5E5E5"> always it is always adding</font>

858
00:35:02,480 --> 00:35:13,140
yes<font color="#E5E5E5"> hmm excellent</font><font color="#CCCCCC"> yeah this as always</font>

859
00:35:11,850 --> 00:35:18,750
there's a Enterprise version and then

860
00:35:13,140 --> 00:35:20,580
it's it's<font color="#E5E5E5"> like yeah</font><font color="#CCCCCC"> maybe a bit out of</font>

861
00:35:18,750 --> 00:35:22,830
scope for<font color="#E5E5E5"> the budget</font><font color="#CCCCCC"> talk but I'm very</font>

862
00:35:20,580 --> 00:35:26,279
<font color="#E5E5E5">glad to hear that</font>

863
00:35:22,830 --> 00:35:28,520
any more questions but thank you<font color="#E5E5E5"> very</font>

864
00:35:26,280 --> 00:35:28,520
<font color="#E5E5E5">much</font>

