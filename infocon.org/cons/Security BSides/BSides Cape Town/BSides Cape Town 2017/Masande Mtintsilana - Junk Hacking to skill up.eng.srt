1
00:00:00,030 --> 00:00:08,299
now we have Sunday and<font color="#CCCCCC"> they're talking</font>

2
00:00:03,840 --> 00:00:17,640
<font color="#CCCCCC">to us about junk hacking</font><font color="#E5E5E5"> to scale up</font>

3
00:00:08,300 --> 00:00:20,970
okay IRA<font color="#CCCCCC"> so thanks for coming to attend</font>

4
00:00:17,640 --> 00:00:23,390
my talk<font color="#E5E5E5"> so</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> the title of my talk is</font>

5
00:00:20,970 --> 00:00:26,369
<font color="#E5E5E5">John taking to scale up learning through</font>

6
00:00:23,390 --> 00:00:29,580
reversing embedded devices<font color="#CCCCCC"> which I</font><font color="#E5E5E5"> plan</font>

7
00:00:26,369 --> 00:00:32,399
<font color="#CCCCCC">to share my personal journey</font><font color="#E5E5E5"> in hacking</font>

8
00:00:29,580 --> 00:00:34,140
a particular consumer product and trying

9
00:00:32,399 --> 00:00:37,850
<font color="#E5E5E5">some useful tools and techniques which</font>

10
00:00:34,140 --> 00:00:39,600
might be<font color="#CCCCCC"> helpful for your</font><font color="#E5E5E5"> own</font><font color="#CCCCCC"> projects</font>

11
00:00:37,850 --> 00:00:41,820
<font color="#CCCCCC">the overarching goal of this</font>

12
00:00:39,600 --> 00:00:43,590
presentation is to<font color="#CCCCCC"> provide a sense</font><font color="#E5E5E5"> can</font>

13
00:00:41,820 --> 00:00:45,539
you<font color="#E5E5E5"> guys hear me right</font><font color="#CCCCCC"> okay the</font>

14
00:00:43,590 --> 00:00:48,690
<font color="#CCCCCC">overarching goal of this presentation is</font>

15
00:00:45,539 --> 00:00:50,010
<font color="#CCCCCC">bright this sense that opening up and</font>

16
00:00:48,690 --> 00:00:51,660
trying<font color="#E5E5E5"> to understand how things work</font><font color="#CCCCCC"> on</font>

17
00:00:50,010 --> 00:00:55,320
<font color="#E5E5E5">the inside is a good way to</font><font color="#CCCCCC"> approach</font>

18
00:00:51,660 --> 00:00:58,260
<font color="#E5E5E5">learning so disappeared about</font><font color="#CCCCCC"> myself so</font>

19
00:00:55,320 --> 00:01:00,629
I'm a security consultant at<font color="#E5E5E5"> MWR where I</font>

20
00:00:58,260 --> 00:01:03,870
spend most of my time<font color="#CCCCCC"> saying web and</font>

21
00:01:00,629 --> 00:01:06,840
mobile applications<font color="#CCCCCC"> I actually started</font>

22
00:01:03,870 --> 00:01:08,039
here in Cape Town<font color="#E5E5E5"> at you city did a</font>

23
00:01:06,840 --> 00:01:10,710
degree<font color="#CCCCCC"> in electrical</font><font color="#E5E5E5"> and computer</font>

24
00:01:08,040 --> 00:01:14,310
engineering<font color="#CCCCCC"> and as many</font><font color="#E5E5E5"> of you know</font>

25
00:01:10,710 --> 00:01:16,500
<font color="#CCCCCC">universities typically approach</font><font color="#E5E5E5"> learning</font>

26
00:01:14,310 --> 00:01:17,729
form starting from first principles work

27
00:01:16,500 --> 00:01:19,560
your way up until<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can expose</font>

28
00:01:17,729 --> 00:01:21,119
something so this<font color="#E5E5E5"> is actually the first</font>

29
00:01:19,560 --> 00:01:22,740
<font color="#E5E5E5">time way I start from a finished product</font>

30
00:01:21,119 --> 00:01:26,220
<font color="#E5E5E5">working my way</font><font color="#CCCCCC"> backwards and trying to</font>

31
00:01:22,740 --> 00:01:29,250
understand<font color="#E5E5E5"> how things work so yeah</font>

32
00:01:26,220 --> 00:01:30,570
<font color="#E5E5E5">before</font><font color="#CCCCCC"> I actually get into what I</font><font color="#E5E5E5"> looked</font>

33
00:01:29,250 --> 00:01:32,729
into I'll just talk<font color="#CCCCCC"> about my</font><font color="#E5E5E5"> inspiration</font>

34
00:01:30,570 --> 00:01:36,029
<font color="#CCCCCC">so there's this YouTube channel run by</font>

35
00:01:32,729 --> 00:01:37,740
<font color="#E5E5E5">user named live overflow</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> he</font><font color="#CCCCCC"> doubts on</font>

36
00:01:36,030 --> 00:01:40,159
<font color="#E5E5E5">the point short of hacking tutorials</font>

37
00:01:37,740 --> 00:01:41,970
about cryptography<font color="#E5E5E5"> reverse engineering</font>

38
00:01:40,159 --> 00:01:43,530
<font color="#E5E5E5">things like that</font>

39
00:01:41,970 --> 00:01:46,740
so at the<font color="#CCCCCC"> beginning of</font><font color="#E5E5E5"> the year least a</font>

40
00:01:43,530 --> 00:01:49,500
two part series<font color="#E5E5E5"> where he reversed this</font>

41
00:01:46,740 --> 00:01:52,199
particular device which is called<font color="#CCCCCC"> a</font>

42
00:01:49,500 --> 00:01:53,820
personal<font color="#E5E5E5"> cloud device by ionic basically</font>

43
00:01:52,200 --> 00:01:56,490
it's<font color="#E5E5E5"> Wi-Fi enabled</font>

44
00:01:53,820 --> 00:01:58,829
<font color="#CCCCCC">palshare so you can connect to it</font><font color="#E5E5E5"> and</font>

45
00:01:56,490 --> 00:02:00,630
get<font color="#E5E5E5"> out</font><font color="#CCCCCC"> of it but the point</font><font color="#E5E5E5"> of it</font><font color="#CCCCCC"> is</font>

46
00:01:58,829 --> 00:02:03,479
<font color="#CCCCCC">that he found</font><font color="#E5E5E5"> multiple</font><font color="#CCCCCC"> vulnerabilities</font>

47
00:02:00,630 --> 00:02:04,860
in<font color="#E5E5E5"> it which allowed him to get shell on</font>

48
00:02:03,479 --> 00:02:08,429
<font color="#E5E5E5">this device it looked interesting little</font>

49
00:02:04,860 --> 00:02:11,340
fun I<font color="#E5E5E5"> was</font><font color="#CCCCCC"> owning</font><font color="#E5E5E5"> what I</font><font color="#CCCCCC"> would say so I</font>

50
00:02:08,429 --> 00:02:12,690
had a look on take a lot<font color="#CCCCCC"> PC there's</font>

51
00:02:11,340 --> 00:02:13,920
anything that<font color="#CCCCCC"> matches this description I</font>

52
00:02:12,690 --> 00:02:16,740
came<font color="#E5E5E5"> across something called</font>

53
00:02:13,920 --> 00:02:18,690
not cloud storage and media streamer so

54
00:02:16,740 --> 00:02:21,150
how this thing works is you've got an SD

55
00:02:18,690 --> 00:02:23,640
<font color="#CCCCCC">card you put media files on it</font><font color="#E5E5E5"> such as</font>

56
00:02:21,150 --> 00:02:26,370
mp3s mp4s<font color="#CCCCCC"> you plug it in you turn</font><font color="#E5E5E5"> it on</font>

57
00:02:23,640 --> 00:02:28,500
<font color="#CCCCCC">and then it's</font><font color="#E5E5E5"> like a tablet or cell</font>

58
00:02:26,370 --> 00:02:30,360
phones you can just install<font color="#CCCCCC"> a tap in it</font>

59
00:02:28,500 --> 00:02:33,570
<font color="#E5E5E5">and then connect to</font><font color="#CCCCCC"> this device and the</font>

60
00:02:30,360 --> 00:02:35,310
<font color="#CCCCCC">interesting content so I was like ok</font>

61
00:02:33,570 --> 00:02:45,209
that's a reasonable thing<font color="#CCCCCC"> to want</font><font color="#E5E5E5"> to</font>

62
00:02:35,310 --> 00:02:46,620
have can i hack it<font color="#CCCCCC"> so yeah so many</font><font color="#E5E5E5"> of</font>

63
00:02:45,209 --> 00:02:49,530
you know who are on the<font color="#CCCCCC"> offensive side</font>

64
00:02:46,620 --> 00:02:52,290
<font color="#CCCCCC">of security</font><font color="#E5E5E5"> probably know there's this</font>

65
00:02:49,530 --> 00:02:54,769
<font color="#E5E5E5">obsession with getting of unauthorized</font>

66
00:02:52,290 --> 00:02:56,940
code execution or a<font color="#E5E5E5"> shell on device and</font>

67
00:02:54,769 --> 00:02:59,580
the quickest way<font color="#CCCCCC"> of getting that is</font>

68
00:02:56,940 --> 00:03:00,900
finding the low-hanging<font color="#E5E5E5"> fruit</font><font color="#CCCCCC"> so to</font><font color="#E5E5E5"> find</font>

69
00:02:59,580 --> 00:03:02,250
out what are the low-hanging fruit you

70
00:03:00,900 --> 00:03:05,430
need to find<font color="#E5E5E5"> out what</font><font color="#CCCCCC"> is actually</font>

71
00:03:02,250 --> 00:03:07,320
running on<font color="#E5E5E5"> this device</font><font color="#CCCCCC"> so one</font><font color="#E5E5E5"> reader of</font>

72
00:03:05,430 --> 00:03:09,810
thinness is<font color="#E5E5E5"> asking it</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> services are</font>

73
00:03:07,320 --> 00:03:14,340
running so how this<font color="#E5E5E5"> is practically done</font>

74
00:03:09,810 --> 00:03:16,769
is you tell in map the device so yeah

75
00:03:14,340 --> 00:03:18,570
this was the<font color="#E5E5E5"> list that came up so if</font>

76
00:03:16,769 --> 00:03:20,549
<font color="#E5E5E5">your strategy at this point was</font><font color="#CCCCCC"> to poke</font>

77
00:03:18,570 --> 00:03:21,900
at<font color="#CCCCCC"> the first service</font><font color="#E5E5E5"> nope and then work</font>

78
00:03:20,549 --> 00:03:23,269
your<font color="#CCCCCC"> way down you</font><font color="#E5E5E5"> driven in luck because</font>

79
00:03:21,900 --> 00:03:26,250
the<font color="#E5E5E5"> first thing</font><font color="#CCCCCC"> that was there was</font>

80
00:03:23,269 --> 00:03:28,650
<font color="#CCCCCC">Talmadge and it had</font><font color="#E5E5E5"> rich guests were</font>

81
00:03:26,250 --> 00:03:30,480
credentials of Edmund Edmund<font color="#E5E5E5"> so</font><font color="#CCCCCC"> within</font>

82
00:03:28,650 --> 00:03:34,070
10 minutes of buying the device<font color="#E5E5E5"> opening</font>

83
00:03:30,480 --> 00:03:36,149
it<font color="#E5E5E5"> I had a root</font><font color="#CCCCCC"> shell in device yeah</font><font color="#E5E5E5"> I</font>

84
00:03:34,070 --> 00:03:38,220
hadn't<font color="#E5E5E5"> learned anything at</font><font color="#CCCCCC"> this point so</font>

85
00:03:36,150 --> 00:03:41,549
I<font color="#E5E5E5"> said</font><font color="#CCCCCC"> ok I'm gonna ignore this and move</font>

86
00:03:38,220 --> 00:03:44,040
on<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I thought to myself I'm quite</font>

87
00:03:41,549 --> 00:03:47,100
familiar<font color="#E5E5E5"> with mobile applications</font><font color="#CCCCCC"> so let</font>

88
00:03:44,040 --> 00:03:48,420
me start with what I know best<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the</font>

89
00:03:47,100 --> 00:03:50,310
<font color="#CCCCCC">reason why I like studying</font><font color="#E5E5E5"> mobile</font>

90
00:03:48,420 --> 00:03:52,140
applications because mobile applications

91
00:03:50,310 --> 00:03:55,769
provide a detailed<font color="#CCCCCC"> description of</font><font color="#E5E5E5"> how</font><font color="#CCCCCC"> to</font>

92
00:03:52,140 --> 00:03:57,540
use a<font color="#E5E5E5"> specific API</font><font color="#CCCCCC"> the in this</font><font color="#E5E5E5"> case</font><font color="#CCCCCC"> is</font>

93
00:03:55,769 --> 00:03:59,670
<font color="#E5E5E5">an</font><font color="#CCCCCC"> application I</font><font color="#E5E5E5"> am just</font><font color="#CCCCCC"> devices for the</font>

94
00:03:57,540 --> 00:04:01,320
some API<font color="#E5E5E5"> so it exposes what functions</font>

95
00:03:59,670 --> 00:04:03,809
can<font color="#CCCCCC"> be called</font><font color="#E5E5E5"> what arguments</font><font color="#CCCCCC"> do these</font>

96
00:04:01,320 --> 00:04:08,130
functions<font color="#E5E5E5"> need and what data types the</font>

97
00:04:03,810 --> 00:04:10,109
<font color="#E5E5E5">arguments are so the reason why you can</font>

98
00:04:08,130 --> 00:04:12,570
do this is because Android applications

99
00:04:10,109 --> 00:04:14,760
are<font color="#E5E5E5"> easily be compatible especially if</font>

100
00:04:12,570 --> 00:04:17,548
they're written in Java so there's

101
00:04:14,760 --> 00:04:20,519
various<font color="#CCCCCC"> java decompiler is out there</font>

102
00:04:17,548 --> 00:04:26,340
such as JD<font color="#E5E5E5"> dead x CF orphan flower how</font>

103
00:04:20,519 --> 00:04:27,880
this<font color="#E5E5E5"> actually looks so yeah so I open it</font>

104
00:04:26,340 --> 00:04:29,320
<font color="#E5E5E5">this application</font>

105
00:04:27,880 --> 00:04:34,090
it's<font color="#E5E5E5"> cool what's called shouts interact</font>

106
00:04:29,320 --> 00:04:35,920
<font color="#CCCCCC">I open it up in decompiler where I</font><font color="#E5E5E5"> think</font>

107
00:04:34,090 --> 00:04:38,729
it was<font color="#E5E5E5"> jeddaks so</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> basically hide</font>

108
00:04:35,920 --> 00:04:40,960
looks if you can get back

109
00:04:38,730 --> 00:04:44,380
basically the functions that<font color="#E5E5E5"> are being</font>

110
00:04:40,960 --> 00:04:46,690
<font color="#CCCCCC">call</font><font color="#E5E5E5"> that I understand the data types of</font>

111
00:04:44,380 --> 00:04:49,090
these the data types of the<font color="#E5E5E5"> arguments</font>

112
00:04:46,690 --> 00:04:51,610
the names of the variables<font color="#CCCCCC"> things</font><font color="#E5E5E5"> like</font>

113
00:04:49,090 --> 00:04:54,030
that<font color="#E5E5E5"> so it looks</font><font color="#CCCCCC"> pretty much how I</font>

114
00:04:51,610 --> 00:04:55,930
<font color="#CCCCCC">imagine the source code to</font><font color="#E5E5E5"> look right</font><font color="#CCCCCC"> so</font>

115
00:04:54,030 --> 00:04:58,239
<font color="#CCCCCC">often</font><font color="#E5E5E5"> reading the source code for awhile</font>

116
00:04:55,930 --> 00:04:59,800
<font color="#CCCCCC">I came across something looks like</font><font color="#E5E5E5"> this</font>

117
00:04:58,240 --> 00:05:03,340
they were<font color="#E5E5E5"> creating a</font><font color="#CCCCCC"> cake request</font><font color="#E5E5E5"> where</font>

118
00:04:59,800 --> 00:05:08,230
the constructing indicate parameter they

119
00:05:03,340 --> 00:05:10,989
had<font color="#E5E5E5"> get parameter hat that had the value</font>

120
00:05:08,230 --> 00:05:12,730
of like RM and make<font color="#E5E5E5"> their and move so</font><font color="#CCCCCC"> i</font>

121
00:05:10,990 --> 00:05:15,400
did a search<font color="#E5E5E5"> for</font><font color="#CCCCCC"> the source code for the</font>

122
00:05:12,730 --> 00:05:18,310
specific string and you came<font color="#CCCCCC"> up multiple</font>

123
00:05:15,400 --> 00:05:21,549
types so seeing this I'm like okay can<font color="#E5E5E5"> I</font>

124
00:05:18,310 --> 00:05:23,470
change<font color="#CCCCCC"> that because</font><font color="#E5E5E5"> RM</font><font color="#CCCCCC"> maker</font><font color="#E5E5E5"> and move</font>

125
00:05:21,550 --> 00:05:26,710
all<font color="#CCCCCC"> the flight Linux come on</font>

126
00:05:23,470 --> 00:05:28,810
so maybe let me change that<font color="#CCCCCC"> just to my</font>

127
00:05:26,710 --> 00:05:31,989
own<font color="#CCCCCC"> command</font><font color="#E5E5E5"> and see</font><font color="#CCCCCC"> if I can get</font><font color="#E5E5E5"> come on</font>

128
00:05:28,810 --> 00:05:34,840
injection<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I captured one request</font>

129
00:05:31,990 --> 00:05:36,580
which was<font color="#CCCCCC"> the gate parameters</font><font color="#E5E5E5"> something</font>

130
00:05:34,840 --> 00:05:39,429
like that

131
00:05:36,580 --> 00:05:41,440
so like in the CMD<font color="#CCCCCC"> gate</font><font color="#E5E5E5"> parameter you</font>

132
00:05:39,430 --> 00:05:45,010
got the value<font color="#E5E5E5"> of vector and then it the</font>

133
00:05:41,440 --> 00:05:47,850
name is the folder that<font color="#E5E5E5"> is created so I</font>

134
00:05:45,010 --> 00:05:51,460
<font color="#E5E5E5">change the command to</font><font color="#CCCCCC"> try ping</font><font color="#E5E5E5"> myself</font>

135
00:05:47,850 --> 00:05:53,140
<font color="#E5E5E5">that fell so I'm like okay</font><font color="#CCCCCC"> maybe they're</font>

136
00:05:51,460 --> 00:05:56,620
<font color="#CCCCCC">doing something</font><font color="#E5E5E5"> right to this so I moved</font>

137
00:05:53,140 --> 00:06:00,130
<font color="#E5E5E5">on and I tried to attend my command to</font>

138
00:05:56,620 --> 00:06:02,170
the<font color="#CCCCCC"> end of the foul</font><font color="#E5E5E5"> that also failed so</font>

139
00:06:00,130 --> 00:06:04,630
I realized<font color="#CCCCCC"> that you</font><font color="#E5E5E5"> need to play around</font>

140
00:06:02,170 --> 00:06:06,900
<font color="#E5E5E5">with quotation marks</font><font color="#CCCCCC"> so I added two</font>

141
00:06:04,630 --> 00:06:09,100
double quotes and I got a ping back I

142
00:06:06,900 --> 00:06:15,179
think<font color="#CCCCCC"> the basic show</font><font color="#E5E5E5"> this is with the</font>

143
00:06:09,100 --> 00:06:15,180
demo<font color="#CCCCCC"> okay</font>

144
00:06:27,500 --> 00:06:30,949
<font color="#CCCCCC">you guys see that</font>

145
00:06:35,539 --> 00:06:46,409
okay so let me<font color="#E5E5E5"> just</font><font color="#CCCCCC"> show you the script</font>

146
00:06:38,970 --> 00:06:51,060
<font color="#E5E5E5">that I created for the so basically I've</font>

147
00:06:46,410 --> 00:06:54,030
<font color="#CCCCCC">got this that did that requests</font><font color="#E5E5E5"> that I</font>

148
00:06:51,060 --> 00:06:56,370
captured<font color="#CCCCCC"> what I'm</font><font color="#E5E5E5"> doing is adding a new</font>

149
00:06:54,030 --> 00:06:58,409
<font color="#CCCCCC">user called</font><font color="#E5E5E5"> back to</font><font color="#CCCCCC"> a user into the ATC</font>

150
00:06:56,370 --> 00:07:00,660
<font color="#CCCCCC">posted file and then afterwards</font>

151
00:06:58,410 --> 00:07:02,340
connecting at the town it<font color="#E5E5E5"> write some</font>

152
00:07:00,660 --> 00:07:05,550
creating new news on the device<font color="#E5E5E5"> so that</font>

153
00:07:02,340 --> 00:07:24,150
<font color="#CCCCCC">I can connect to the Talmud</font><font color="#E5E5E5"> it should</font>

154
00:07:05,550 --> 00:07:24,690
work but<font color="#E5E5E5"> yeah running</font><font color="#CCCCCC"> okay created a new</font>

155
00:07:24,150 --> 00:07:27,929
user

156
00:07:24,690 --> 00:07:32,030
now put a towel niche connection to it

157
00:07:27,930 --> 00:07:34,530
and I can catch<font color="#CCCCCC"> EGC</font><font color="#E5E5E5"> password</font>

158
00:07:32,030 --> 00:07:41,419
so using<font color="#E5E5E5"> that command injection creating</font>

159
00:07:34,530 --> 00:07:41,419
<font color="#E5E5E5">user chemicals on</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> if you watch</font>

160
00:07:45,439 --> 00:07:59,189
<font color="#E5E5E5">okay yeah yeah so everything</font><font color="#CCCCCC"> runs into</font>

161
00:07:55,889 --> 00:08:01,709
it on<font color="#E5E5E5"> this device and this anyway okay</font>

162
00:07:59,189 --> 00:08:06,149
so I<font color="#E5E5E5"> just went I'm like okay I haven't</font>

163
00:08:01,709 --> 00:08:09,269
learnt anything about I use the skills

164
00:08:06,149 --> 00:08:11,489
that<font color="#E5E5E5"> I've I normally use</font><font color="#CCCCCC"> in web</font>

165
00:08:09,269 --> 00:08:14,489
application assessment<font color="#CCCCCC"> but I wanted</font><font color="#E5E5E5"> to</font>

166
00:08:11,489 --> 00:08:17,489
know if I can<font color="#CCCCCC"> use a fact that</font><font color="#E5E5E5"> are part</font>

167
00:08:14,489 --> 00:08:20,909
physical access<font color="#CCCCCC"> to this device to just</font>

168
00:08:17,490 --> 00:08:25,439
sort of get the applications of it<font color="#E5E5E5"> maybe</font>

169
00:08:20,909 --> 00:08:26,580
dump the firmware<font color="#E5E5E5"> so a lot of</font>

170
00:08:25,439 --> 00:08:28,740
experiences this<font color="#E5E5E5"> so I did a lot of</font>

171
00:08:26,580 --> 00:08:31,558
research<font color="#E5E5E5"> and so what people do online</font>

172
00:08:28,740 --> 00:08:33,959
and<font color="#CCCCCC"> actually found out</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> a common</font>

173
00:08:31,559 --> 00:08:38,339
problem<font color="#E5E5E5"> that</font><font color="#CCCCCC"> hardware hackers have so</font>

174
00:08:33,958 --> 00:08:41,039
the security<font color="#E5E5E5"> researcher named Nettie</font>

175
00:08:38,339 --> 00:08:43,800
<font color="#E5E5E5">Ivanovich who works at project zero</font>

176
00:08:41,039 --> 00:08:47,610
<font color="#E5E5E5">where she hacked a tamagotchi which is a</font>

177
00:08:43,799 --> 00:08:49,290
virtual<font color="#E5E5E5"> pet right</font><font color="#CCCCCC"> the later</font><font color="#E5E5E5"> releases of</font>

178
00:08:47,610 --> 00:08:50,490
this virtual pet had<font color="#E5E5E5"> these figures</font><font color="#CCCCCC"> the</font>

179
00:08:49,290 --> 00:08:53,250
screen thing on the right that<font color="#E5E5E5"> you can</font>

180
00:08:50,490 --> 00:08:56,790
attach to<font color="#E5E5E5"> the top of that right</font><font color="#CCCCCC"> what she</font>

181
00:08:53,250 --> 00:08:58,319
found is that she<font color="#CCCCCC"> couldn't control</font>

182
00:08:56,790 --> 00:08:59,880
<font color="#CCCCCC">weighing memory code is being executed</font>

183
00:08:58,319 --> 00:09:03,360
with this figure<font color="#E5E5E5"> and she wanted</font><font color="#CCCCCC"> to dump</font>

184
00:08:59,880 --> 00:09:05,100
the firmware<font color="#CCCCCC"> but also the thing that you</font>

185
00:09:03,360 --> 00:09:07,949
could do<font color="#E5E5E5"> this figure is display images</font>

186
00:09:05,100 --> 00:09:08,490
on the Tamagotchi<font color="#CCCCCC"> and these images are</font>

187
00:09:07,949 --> 00:09:10,949
stored in<font color="#E5E5E5"> memory</font>

188
00:09:08,490 --> 00:09:14,339
right so<font color="#E5E5E5"> she wrote shellcode and</font>

189
00:09:10,949 --> 00:09:15,630
embedded it in an image<font color="#CCCCCC"> and then point</font>

190
00:09:14,339 --> 00:09:18,180
using<font color="#E5E5E5"> the fact that you could point in</font>

191
00:09:15,630 --> 00:09:21,329
<font color="#CCCCCC">win memory and execute the code they she</font>

192
00:09:18,180 --> 00:09:22,949
executed code form her image which was<font color="#E5E5E5"> a</font>

193
00:09:21,329 --> 00:09:24,959
<font color="#E5E5E5">shell code and what the shout would did</font>

194
00:09:22,949 --> 00:09:27,029
was to dump the firmware<font color="#E5E5E5"> out of one of</font>

195
00:09:24,959 --> 00:09:28,349
<font color="#CCCCCC">the buttons so she was one of the input</font>

196
00:09:27,029 --> 00:09:31,230
buttons and an output so that<font color="#CCCCCC"> she could</font>

197
00:09:28,350 --> 00:09:34,139
dump the foaming<font color="#CCCCCC"> spider price to that</font>

198
00:09:31,230 --> 00:09:36,569
<font color="#E5E5E5">but luckily for me it was it</font><font color="#CCCCCC"> needed that</font>

199
00:09:34,139 --> 00:09:37,829
<font color="#E5E5E5">complicated</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> yeah for me to get</font>

200
00:09:36,569 --> 00:09:39,000
started<font color="#CCCCCC"> this I need to</font><font color="#E5E5E5"> find out what is</font>

201
00:09:37,829 --> 00:09:43,050
<font color="#CCCCCC">actually running on this device</font><font color="#E5E5E5"> so I</font>

202
00:09:39,000 --> 00:09:44,639
open it up what I found<font color="#E5E5E5"> so it had it was</font>

203
00:09:43,050 --> 00:09:47,729
<font color="#CCCCCC">a header</font><font color="#E5E5E5"> a rolling or two five three</font>

204
00:09:44,639 --> 00:09:48,569
five zero<font color="#E5E5E5"> MIPS processor</font><font color="#CCCCCC"> drain it 360</font>

205
00:09:47,730 --> 00:09:50,880
<font color="#CCCCCC">megahertz</font>

206
00:09:48,569 --> 00:09:53,610
it's got 32 megabytes of RAM which<font color="#E5E5E5"> is a</font>

207
00:09:50,880 --> 00:09:55,470
<font color="#E5E5E5">blue to do that long blue chip</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> then</font>

208
00:09:53,610 --> 00:09:58,300
on top<font color="#E5E5E5"> of it it's there's an</font><font color="#CCCCCC"> eight</font>

209
00:09:55,470 --> 00:10:02,140
<font color="#E5E5E5">megabytes flash</font>

210
00:09:58,300 --> 00:10:05,199
to turn the device<font color="#E5E5E5"> around you see</font>

211
00:10:02,140 --> 00:10:08,020
<font color="#CCCCCC">there's a SD card</font><font color="#E5E5E5"> reader but then on the</font>

212
00:10:05,200 --> 00:10:11,620
top<font color="#E5E5E5"> is this mango</font><font color="#CCCCCC"> pad</font>

213
00:10:08,020 --> 00:10:15,130
so I<font color="#E5E5E5"> came across a blog called</font><font color="#CCCCCC"> apt to</font><font color="#E5E5E5"> is</font>

214
00:10:11,620 --> 00:10:17,380
<font color="#E5E5E5">zero and he defined he describes a way</font>

215
00:10:15,130 --> 00:10:19,720
of how<font color="#E5E5E5"> you can dump Fermi by trying to</font>

216
00:10:17,380 --> 00:10:22,360
find<font color="#CCCCCC"> C reports and what C reports are</font>

217
00:10:19,720 --> 00:10:23,920
normally<font color="#CCCCCC"> used for is to</font><font color="#E5E5E5"> sort of spread</font>

218
00:10:22,360 --> 00:10:25,300
out debug messages or also<font color="#CCCCCC"> to</font>

219
00:10:23,920 --> 00:10:28,780
<font color="#E5E5E5">interactive device while</font><font color="#CCCCCC"> it's of</font>

220
00:10:25,300 --> 00:10:32,260
developing the thing so what he<font color="#E5E5E5"> says you</font>

221
00:10:28,780 --> 00:10:34,810
should<font color="#CCCCCC"> do is for serial communications</font>

222
00:10:32,260 --> 00:10:42,010
you normally have<font color="#E5E5E5"> four pens a VCC ground</font>

223
00:10:34,810 --> 00:10:44,170
<font color="#CCCCCC">TX pin and an or expand right so he says</font>

224
00:10:42,010 --> 00:10:46,540
<font color="#CCCCCC">ok if you find something that sort of</font>

225
00:10:44,170 --> 00:10:48,490
matches this description you need you to

226
00:10:46,540 --> 00:10:50,530
find<font color="#CCCCCC"> dispensed</font><font color="#E5E5E5"> so you can make</font><font color="#CCCCCC"> educated</font>

227
00:10:48,490 --> 00:10:52,180
guesses right in my<font color="#E5E5E5"> case I could see</font>

228
00:10:50,530 --> 00:10:53,949
there was<font color="#CCCCCC"> a ground pin and there's</font><font color="#E5E5E5"> a on</font>

229
00:10:52,180 --> 00:10:56,050
the floor right there's like<font color="#E5E5E5"> a</font><font color="#CCCCCC"> 3.3</font><font color="#E5E5E5"> what</font>

230
00:10:53,950 --> 00:11:01,360
<font color="#E5E5E5">label so I knew those</font><font color="#CCCCCC"> were the ground</font>

231
00:10:56,050 --> 00:11:03,490
and<font color="#E5E5E5"> participants but then yeah the basic</font>

232
00:11:01,360 --> 00:11:04,780
<font color="#E5E5E5">assumptions were that</font><font color="#CCCCCC"> with GCC pen it'll</font>

233
00:11:03,490 --> 00:11:06,190
always<font color="#CCCCCC"> stay the constant voltage of</font>

234
00:11:04,780 --> 00:11:08,260
different<font color="#CCCCCC"> three volts when the</font><font color="#E5E5E5"> things on</font>

235
00:11:06,190 --> 00:11:10,390
then ground panel of<font color="#CCCCCC"> these zero volts</font>

236
00:11:08,260 --> 00:11:12,400
<font color="#E5E5E5">the</font><font color="#CCCCCC"> T expand when data's</font><font color="#E5E5E5"> being</font>

237
00:11:10,390 --> 00:11:15,100
transmitted out<font color="#E5E5E5"> of this thing it will</font>

238
00:11:12,400 --> 00:11:22,780
fluctuate<font color="#E5E5E5"> and they are</font><font color="#CCCCCC"> explained which</font>

239
00:11:15,100 --> 00:11:24,430
is when you're<font color="#CCCCCC"> sending</font><font color="#E5E5E5"> okay so when you</font>

240
00:11:22,780 --> 00:11:26,560
<font color="#CCCCCC">sending data</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> this device you pull the</font>

241
00:11:24,430 --> 00:11:29,109
or<font color="#E5E5E5"> expand down yeah but that's</font>

242
00:11:26,560 --> 00:11:30,520
<font color="#E5E5E5">unimportant right now suppose I want</font><font color="#CCCCCC"> to</font>

243
00:11:29,110 --> 00:11:46,780
<font color="#CCCCCC">see if I can if this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> accurately</font>

244
00:11:30,520 --> 00:11:49,720
<font color="#CCCCCC">backwards so I sold</font><font color="#E5E5E5"> it on okay so I sold</font>

245
00:11:46,780 --> 00:11:54,100
it on breakaway<font color="#E5E5E5"> pins</font><font color="#CCCCCC"> onto</font><font color="#E5E5E5"> those pads for</font>

246
00:11:49,720 --> 00:11:56,440
them and then I connect a jumper cables

247
00:11:54,100 --> 00:11:58,120
which go<font color="#CCCCCC"> through a USB to UART converter</font>

248
00:11:56,440 --> 00:11:59,920
which is<font color="#E5E5E5"> that red</font><font color="#CCCCCC"> thing</font><font color="#E5E5E5"> there</font>

249
00:11:58,120 --> 00:12:02,170
what<font color="#E5E5E5"> basically that does it takes the</font>

250
00:11:59,920 --> 00:12:04,199
silicon<font color="#E5E5E5"> that come out of this device and</font>

251
00:12:02,170 --> 00:12:08,880
<font color="#E5E5E5">converts it to</font><font color="#CCCCCC"> to a format that my</font>

252
00:12:04,200 --> 00:12:08,880
laptop<font color="#CCCCCC"> can understand and then</font>

253
00:12:10,540 --> 00:12:14,660
part of this is<font color="#CCCCCC"> also trying</font><font color="#E5E5E5"> to determine</font>

254
00:12:12,740 --> 00:12:16,640
what<font color="#E5E5E5"> the</font><font color="#CCCCCC"> board rate</font><font color="#E5E5E5"> is basically what</font>

255
00:12:14,660 --> 00:12:18,500
board rate is is trying<font color="#E5E5E5"> to know how many</font>

256
00:12:16,640 --> 00:12:19,250
<font color="#E5E5E5">bits per second does this device spit</font>

257
00:12:18,500 --> 00:12:20,660
out

258
00:12:19,250 --> 00:12:23,210
so<font color="#CCCCCC"> today's our</font><font color="#E5E5E5"> finalist is actually</font>

259
00:12:20,660 --> 00:12:25,459
<font color="#E5E5E5">within</font><font color="#CCCCCC"> the process a data sheet</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> just</font>

260
00:12:23,210 --> 00:12:28,310
taking educated guess because they are

261
00:12:25,460 --> 00:12:30,500
common baud rate that you<font color="#E5E5E5"> can use so</font>

262
00:12:28,310 --> 00:12:49,510
yeah then you try demonstrate how<font color="#CCCCCC"> the</font>

263
00:12:30,500 --> 00:12:49,510
<font color="#CCCCCC">statue looks</font><font color="#E5E5E5"> all right</font>

264
00:13:00,630 --> 00:13:06,000
<font color="#CCCCCC">alright so the same guy</font><font color="#E5E5E5"> runs a</font><font color="#CCCCCC"> block</font>

265
00:13:03,690 --> 00:13:11,639
<font color="#E5E5E5">dave22 is or created a tool called baud</font>

266
00:13:06,000 --> 00:13:16,139
rate by<font color="#CCCCCC"> which basically tries different</font>

267
00:13:11,639 --> 00:13:17,430
baud rates to see if if any<font color="#CCCCCC"> day</font><font color="#E5E5E5"> it is</font>

268
00:13:16,139 --> 00:13:20,100
coming<font color="#E5E5E5"> out</font><font color="#CCCCCC"> of this</font><font color="#E5E5E5"> device that</font><font color="#CCCCCC"> it can</font>

269
00:13:17,430 --> 00:13:21,170
understand so firstly if if you've got

270
00:13:20,100 --> 00:13:23,250
the wrong<font color="#E5E5E5"> baud rate you'll get</font>

271
00:13:21,170 --> 00:13:25,160
nonsensical<font color="#CCCCCC"> data coming out but</font><font color="#E5E5E5"> once you</font>

272
00:13:23,250 --> 00:13:41,910
<font color="#E5E5E5">get to the right baud rate you'll get</font>

273
00:13:25,160 --> 00:13:45,329
eschatos<font color="#CCCCCC"> ticks okay so okay so it's</font>

274
00:13:41,910 --> 00:13:47,569
shining<font color="#E5E5E5"> that</font><font color="#CCCCCC"> port right here one one</font>

275
00:13:45,329 --> 00:13:49,769
<font color="#CCCCCC">five two zero zero so when I start</font><font color="#E5E5E5"> it up</font>

276
00:13:47,569 --> 00:13:51,569
<font color="#CCCCCC">it doesn't understand what it's spitting</font>

277
00:13:49,769 --> 00:13:56,959
out so if I change<font color="#E5E5E5"> the border edge to</font>

278
00:13:51,569 --> 00:14:00,329
that<font color="#E5E5E5"> so nothing nothing nothing</font>

279
00:13:56,959 --> 00:14:03,508
<font color="#E5E5E5">okay I'm getting</font><font color="#CCCCCC"> full stops</font><font color="#E5E5E5"> ah right I'm</font>

280
00:14:00,329 --> 00:14:05,069
getting printable ASCII characters so at

281
00:14:03,509 --> 00:14:06,389
this point now<font color="#CCCCCC"> I can only get data</font>

282
00:14:05,069 --> 00:14:07,620
coming out<font color="#E5E5E5"> of this device I can't</font>

283
00:14:06,389 --> 00:14:09,329
actually<font color="#CCCCCC"> interact with it so I need a</font>

284
00:14:07,620 --> 00:14:21,120
serial terminal<font color="#E5E5E5"> to connect to this thing</font>

285
00:14:09,329 --> 00:14:22,680
<font color="#CCCCCC">so I'm gonna stop this okay so I'm</font>

286
00:14:21,120 --> 00:14:24,839
sucking<font color="#E5E5E5"> at the</font><font color="#CCCCCC"> dark</font><font color="#E5E5E5"> those are debug</font>

287
00:14:22,680 --> 00:14:25,800
messages<font color="#E5E5E5"> coming out but also now I can</font>

288
00:14:24,839 --> 00:14:27,420
interact<font color="#E5E5E5"> with this so I'm just gonna</font>

289
00:14:25,800 --> 00:14:32,479
wait<font color="#CCCCCC"> for some</font><font color="#E5E5E5"> of the debug messages to</font>

290
00:14:27,420 --> 00:14:36,269
stop until I can<font color="#E5E5E5"> maybe interact with it</font>

291
00:14:32,480 --> 00:14:40,339
yeah<font color="#E5E5E5"> so they're gonna put sort of a</font>

292
00:14:36,269 --> 00:14:44,730
Cylon<font color="#E5E5E5"> device debug messages</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> between</font>

293
00:14:40,339 --> 00:14:49,980
<font color="#CCCCCC">kppc for the game to get</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> use oh yeah</font>

294
00:14:44,730 --> 00:14:52,680
I<font color="#CCCCCC"> shot again but now I wanted the Fermi</font>

295
00:14:49,980 --> 00:14:56,220
of this device so there is a character

296
00:14:52,680 --> 00:14:59,459
device in the dev folder which is<font color="#E5E5E5"> called</font>

297
00:14:56,220 --> 00:15:01,350
entity<font color="#E5E5E5"> block which maps onto the to the</font>

298
00:14:59,459 --> 00:15:04,319
flash<font color="#CCCCCC"> memory so if you catch one of</font>

299
00:15:01,350 --> 00:15:13,740
<font color="#E5E5E5">these files out to instance the SD card</font>

300
00:15:04,319 --> 00:15:27,030
you can<font color="#E5E5E5"> get a dump of the flash</font><font color="#CCCCCC"> okay</font>

301
00:15:13,740 --> 00:15:30,060
so okay<font color="#CCCCCC"> so with with that shawl I want</font>

302
00:15:27,030 --> 00:15:31,550
them to get dumped the firm way<font color="#E5E5E5"> but I</font>

303
00:15:30,060 --> 00:15:34,859
didn't really<font color="#CCCCCC"> know</font><font color="#E5E5E5"> what was involved</font>

304
00:15:31,550 --> 00:15:36,839
<font color="#E5E5E5">what makes up</font><font color="#CCCCCC"> a firmer image so there's</font>

305
00:15:34,860 --> 00:15:38,850
a bit of research online<font color="#CCCCCC"> and I found</font><font color="#E5E5E5"> out</font>

306
00:15:36,840 --> 00:15:41,310
that the<font color="#CCCCCC"> firmware image is can basically</font>

307
00:15:38,850 --> 00:15:43,440
<font color="#CCCCCC">basically people for broken up into</font>

308
00:15:41,310 --> 00:15:44,010
three parts<font color="#CCCCCC"> so firstly</font><font color="#E5E5E5"> brought the</font>

309
00:15:43,440 --> 00:15:47,580
bootloader

310
00:15:44,010 --> 00:15:49,230
<font color="#E5E5E5">which is when you turn</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> sister</font>

311
00:15:47,580 --> 00:15:51,180
<font color="#CCCCCC">face this is</font><font color="#E5E5E5"> the first program that runs</font>

312
00:15:49,230 --> 00:15:55,530
and it initializes<font color="#E5E5E5"> the hard way and</font><font color="#CCCCCC"> then</font>

313
00:15:51,180 --> 00:15:58,199
loads up the kernel<font color="#E5E5E5"> welcome back</font>

314
00:15:55,530 --> 00:15:59,370
yeah so once kernel is started the

315
00:15:58,200 --> 00:16:02,910
kernel does what it does<font color="#E5E5E5"> in this case</font>

316
00:15:59,370 --> 00:16:14,520
<font color="#CCCCCC">across linux and can we</font><font color="#E5E5E5"> move on to load</font>

317
00:16:02,910 --> 00:16:19,469
the root filesystem<font color="#E5E5E5"> so so so yeah those</font>

318
00:16:14,520 --> 00:16:21,660
come on<font color="#E5E5E5"> J is what I used to dump</font><font color="#CCCCCC"> the the</font>

319
00:16:19,470 --> 00:16:23,400
flash image and then you<font color="#E5E5E5"> can use tools</font>

320
00:16:21,660 --> 00:16:25,589
like Ben Walker for my my pitch to

321
00:16:23,400 --> 00:16:28,620
<font color="#E5E5E5">analyze this from an image to see what</font>

322
00:16:25,590 --> 00:16:31,410
are the sections<font color="#CCCCCC"> of the Femi image so</font>

323
00:16:28,620 --> 00:16:36,690
you can<font color="#E5E5E5"> see at hex address</font><font color="#CCCCCC"> 17</font><font color="#E5E5E5"> 5</font><font color="#CCCCCC"> D 0</font>

324
00:16:31,410 --> 00:16:39,329
there's the<font color="#CCCCCC"> yeah this is you watch and</font>

325
00:16:36,690 --> 00:16:43,830
then address<font color="#CCCCCC"> 50000 there's a Linux</font>

326
00:16:39,330 --> 00:16:47,490
kernel kernel image and then at 18<font color="#CCCCCC"> to</font>

327
00:16:43,830 --> 00:16:50,460
<font color="#CCCCCC">ef3 there's a root fastest images of the</font>

328
00:16:47,490 --> 00:16:51,960
<font color="#E5E5E5">squatchiest file format I'm</font><font color="#CCCCCC"> so I matched</font>

329
00:16:50,460 --> 00:16:54,030
up with the expectation of what<font color="#CCCCCC"> I read</font>

330
00:16:51,960 --> 00:16:58,260
online<font color="#CCCCCC"> I was</font><font color="#E5E5E5"> happy about that</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> what</font>

331
00:16:54,030 --> 00:17:01,319
from<font color="#E5E5E5"> day I dumped I got</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> I extracted</font>

332
00:16:58,260 --> 00:17:09,910
the file system and then got<font color="#E5E5E5"> the</font>

333
00:17:01,320 --> 00:17:12,640
applications of it so

334
00:17:09,910 --> 00:17:14,110
once I got<font color="#E5E5E5"> the applications of it I</font>

335
00:17:12,640 --> 00:17:16,870
found<font color="#E5E5E5"> it as one of those one of these</font>

336
00:17:14,109 --> 00:17:20,760
applications<font color="#CCCCCC"> called mini Deal DLNA</font>

337
00:17:16,869 --> 00:17:23,109
that's on it right<font color="#E5E5E5"> what this application</font>

338
00:17:20,760 --> 00:17:38,590
<font color="#CCCCCC">don't really know should</font><font color="#E5E5E5"> I plug it in</font>

339
00:17:23,109 --> 00:17:41,139
and<font color="#E5E5E5"> out again</font><font color="#CCCCCC"> okay so yeah</font><font color="#E5E5E5"> so the minute</font>

340
00:17:38,590 --> 00:17:43,540
<font color="#E5E5E5">II DLNA application is used to serve</font>

341
00:17:41,140 --> 00:17:46,300
files<font color="#E5E5E5"> to client applications at</font><font color="#CCCCCC"> the</font>

342
00:17:43,540 --> 00:17:48,760
<font color="#CCCCCC">under</font><font color="#E5E5E5"> network so this is your the app</font>

343
00:17:46,300 --> 00:17:51,700
that<font color="#CCCCCC"> is installed on your mobile phone</font>

344
00:17:48,760 --> 00:17:55,000
<font color="#E5E5E5">on</font><font color="#CCCCCC"> your tablet right</font><font color="#E5E5E5"> so why this is an</font>

345
00:17:51,700 --> 00:17:57,340
<font color="#E5E5E5">interesting targeted</font><font color="#CCCCCC"> application is</font>

346
00:17:55,000 --> 00:17:59,680
because this application parses media

347
00:17:57,340 --> 00:18:03,070
files and<font color="#CCCCCC"> plus the</font><font color="#E5E5E5"> media files it's</font>

348
00:17:59,680 --> 00:18:05,970
quite a difficult thing to do<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

349
00:18:03,070 --> 00:18:08,470
just<font color="#E5E5E5"> like you you know you hear from</font>

350
00:18:05,970 --> 00:18:10,330
<font color="#CCCCCC">future researchers</font><font color="#E5E5E5"> online</font><font color="#CCCCCC"> so it's a</font><font color="#E5E5E5"> good</font>

351
00:18:08,470 --> 00:18:12,190
candidate<font color="#E5E5E5"> for trying</font><font color="#CCCCCC"> to find memory</font>

352
00:18:10,330 --> 00:18:15,370
corruption bugs so there's two ways<font color="#CCCCCC"> you</font>

353
00:18:12,190 --> 00:18:17,740
<font color="#E5E5E5">can go about finding the bugs so you can</font>

354
00:18:15,370 --> 00:18:21,310
do it dynamically<font color="#E5E5E5"> where you take and in</font>

355
00:18:17,740 --> 00:18:23,500
mp3<font color="#E5E5E5"> file mp4 file and then change random</font>

356
00:18:21,310 --> 00:18:25,659
parts of it like<font color="#E5E5E5"> literally flipping</font>

357
00:18:23,500 --> 00:18:26,920
random bits and bytes<font color="#CCCCCC"> open it up with</font>

358
00:18:25,660 --> 00:18:29,110
the application<font color="#E5E5E5"> and see if the</font>

359
00:18:26,920 --> 00:18:33,760
application crashes ideally you want<font color="#E5E5E5"> to</font>

360
00:18:29,110 --> 00:18:35,139
do this thousands of<font color="#E5E5E5"> times but there is</font>

361
00:18:33,760 --> 00:18:38,260
a bit<font color="#E5E5E5"> of a high set-up cost on this</font>

362
00:18:35,140 --> 00:18:39,910
<font color="#CCCCCC">because you</font><font color="#E5E5E5"> need to be able</font><font color="#CCCCCC"> to restart</font>

363
00:18:38,260 --> 00:18:46,180
the application if it crashes<font color="#CCCCCC"> collect</font>

364
00:18:39,910 --> 00:18:48,010
debug<font color="#CCCCCC"> know crash dumps and also like the</font>

365
00:18:46,180 --> 00:18:49,900
input<font color="#CCCCCC"> so this is a lot involved with it</font>

366
00:18:48,010 --> 00:18:53,010
<font color="#E5E5E5">second approach is statically where you</font>

367
00:18:49,900 --> 00:18:55,300
can just give you the source<font color="#CCCCCC"> code</font><font color="#E5E5E5"> so</font>

368
00:18:53,010 --> 00:18:58,030
<font color="#CCCCCC">this application</font><font color="#E5E5E5"> is an open source</font>

369
00:18:55,300 --> 00:19:01,990
<font color="#CCCCCC">application so since</font><font color="#E5E5E5"> I had access to the</font>

370
00:18:58,030 --> 00:19:03,670
binary<font color="#E5E5E5"> of it I stringed it for the</font>

371
00:19:01,990 --> 00:19:06,910
version<font color="#CCCCCC"> I mean I wrap</font><font color="#E5E5E5"> it for the version</font>

372
00:19:03,670 --> 00:19:09,010
and then got<font color="#E5E5E5"> the version of it</font><font color="#CCCCCC"> so then</font>

373
00:19:06,910 --> 00:19:11,230
download the<font color="#E5E5E5"> source code of it and then</font>

374
00:19:09,010 --> 00:19:13,510
got<font color="#CCCCCC"> the latest source code and then</font>

375
00:19:11,230 --> 00:19:18,760
<font color="#E5E5E5">compared these two source code bases to</font>

376
00:19:13,510 --> 00:19:21,570
see if<font color="#CCCCCC"> there's any security bug fixes so</font>

377
00:19:18,760 --> 00:19:23,950
yeah<font color="#CCCCCC"> i'm using a tool called mount</font><font color="#E5E5E5"> which</font>

378
00:19:21,570 --> 00:19:25,809
opens<font color="#E5E5E5"> up the to source code bases and</font>

379
00:19:23,950 --> 00:19:27,400
shows you the<font color="#E5E5E5"> differences so in the</font>

380
00:19:25,809 --> 00:19:30,370
second line<font color="#CCCCCC"> you can see they fixed a</font>

381
00:19:27,400 --> 00:19:36,419
string copy to a string and<font color="#E5E5E5"> copy which</font>

382
00:19:30,370 --> 00:19:38,559
and string copies are normally signed<font color="#E5E5E5"> of</font>

383
00:19:36,419 --> 00:19:40,919
<font color="#E5E5E5">there's a potential buffer overflow in</font>

384
00:19:38,559 --> 00:19:43,210
this application so if I remove

385
00:19:40,919 --> 00:19:45,250
unimportant details what this code

386
00:19:43,210 --> 00:19:50,440
basically does is it<font color="#E5E5E5"> forms a sequel</font>

387
00:19:45,250 --> 00:19:51,940
request and then from it<font color="#CCCCCC"> so there's a</font>

388
00:19:50,440 --> 00:19:55,120
database<font color="#E5E5E5"> on this device it from the</font><font color="#CCCCCC"> city</font>

389
00:19:51,940 --> 00:19:57,929
<font color="#E5E5E5">request and then gets the album which is</font>

390
00:19:55,120 --> 00:20:01,299
album name from this<font color="#CCCCCC"> result and then</font>

391
00:19:57,929 --> 00:20:04,900
create an object<font color="#E5E5E5"> which is of the type</font>

392
00:20:01,299 --> 00:20:09,639
struct virtual icon and then following

393
00:20:04,900 --> 00:20:10,960
<font color="#E5E5E5">this it takes if album if it</font><font color="#CCCCCC"> returns all</font>

394
00:20:09,640 --> 00:20:13,480
<font color="#E5E5E5">for the album and if it did it just</font>

395
00:20:10,960 --> 00:20:16,450
copies it into this last album<font color="#CCCCCC"> that name</font>

396
00:20:13,480 --> 00:20:19,270
buffer the problem is it<font color="#E5E5E5"> doesn't check</font>

397
00:20:16,450 --> 00:20:22,120
that the last<font color="#E5E5E5"> album dot name</font><font color="#CCCCCC"> buffer we</font>

398
00:20:19,270 --> 00:20:25,809
were able<font color="#CCCCCC"> to fit the data</font><font color="#E5E5E5"> then it's come</font>

399
00:20:22,120 --> 00:20:27,699
<font color="#E5E5E5">from album so just a quick primer on</font>

400
00:20:25,809 --> 00:20:32,559
buffer overflows<font color="#CCCCCC"> so why this is the</font>

401
00:20:27,700 --> 00:20:35,500
<font color="#E5E5E5">program is the cause and right so in</font><font color="#CCCCCC"> c</font>

402
00:20:32,559 --> 00:20:39,340
and<font color="#CCCCCC"> c++ if you try to put</font><font color="#E5E5E5"> more data than</font>

403
00:20:35,500 --> 00:20:41,260
a<font color="#E5E5E5"> perfect and handle c c will allow you</font>

404
00:20:39,340 --> 00:20:43,870
<font color="#E5E5E5">to do that and</font><font color="#CCCCCC"> it'll override</font><font color="#E5E5E5"> adjacent</font>

405
00:20:41,260 --> 00:20:47,559
memory<font color="#E5E5E5"> and the result of this is that</font>

406
00:20:43,870 --> 00:20:49,299
<font color="#E5E5E5">you can override important addresses</font>

407
00:20:47,559 --> 00:20:54,460
<font color="#CCCCCC">around</font><font color="#E5E5E5"> memory such as function pointers</font>

408
00:20:49,299 --> 00:20:55,650
return addresses and then since you can

409
00:20:54,460 --> 00:20:58,990
<font color="#E5E5E5">overwrite these addresses you can</font>

410
00:20:55,650 --> 00:21:02,080
redirect your<font color="#E5E5E5"> code to</font><font color="#CCCCCC"> another location</font>

411
00:20:58,990 --> 00:21:06,039
and in the worst case<font color="#E5E5E5"> cause arbitrary</font>

412
00:21:02,080 --> 00:21:08,320
code execution<font color="#E5E5E5"> but there are two</font>

413
00:21:06,039 --> 00:21:10,629
<font color="#CCCCCC">conditions to be able</font><font color="#E5E5E5"> to exploit a</font>

414
00:21:08,320 --> 00:21:13,960
buffer overflow<font color="#E5E5E5"> so firstly you</font><font color="#CCCCCC"> need to</font>

415
00:21:10,630 --> 00:21:19,830
<font color="#CCCCCC">be able to pause use a controllable</font><font color="#E5E5E5"> data</font>

416
00:21:13,960 --> 00:21:24,100
to the application<font color="#CCCCCC"> so in my case the</font>

417
00:21:19,830 --> 00:21:25,418
string that<font color="#E5E5E5"> was vulnerable was or the</font>

418
00:21:24,100 --> 00:21:26,770
part of empathy file that was<font color="#E5E5E5"> wonderful</font>

419
00:21:25,419 --> 00:21:28,870
<font color="#CCCCCC">was the other name so</font><font color="#E5E5E5"> I could just</font>

420
00:21:26,770 --> 00:21:30,668
<font color="#E5E5E5">change</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> name to whatever I wanted and</font>

421
00:21:28,870 --> 00:21:33,699
then<font color="#E5E5E5"> open up in the application and you</font>

422
00:21:30,669 --> 00:21:34,960
okay<font color="#E5E5E5"> so yeah shake the second one was I</font>

423
00:21:33,700 --> 00:21:37,180
need to be able to<font color="#E5E5E5"> change</font>

424
00:21:34,960 --> 00:21:39,730
code that has a string<font color="#CCCCCC"> copy in it</font><font color="#E5E5E5"> so</font>

425
00:21:37,180 --> 00:21:42,130
this<font color="#E5E5E5"> application used the I notified</font>

426
00:21:39,730 --> 00:21:43,540
subsystem which basically monitors<font color="#E5E5E5"> for</font>

427
00:21:42,130 --> 00:21:47,260
read<font color="#CCCCCC"> and write in a specific directory</font>

428
00:21:43,540 --> 00:21:49,899
<font color="#CCCCCC">and once read and write event occurs it</font>

429
00:21:47,260 --> 00:21:51,790
calls a function<font color="#E5E5E5"> which resulted in</font><font color="#CCCCCC"> this</font>

430
00:21:49,900 --> 00:21:55,170
specific<font color="#CCCCCC"> function being</font><font color="#E5E5E5"> called so I</font>

431
00:21:51,790 --> 00:21:58,990
could<font color="#CCCCCC"> trigger this code</font><font color="#E5E5E5"> quite reliably</font>

432
00:21:55,170 --> 00:22:01,120
<font color="#CCCCCC">to test</font><font color="#E5E5E5"> that theory I just changed</font><font color="#CCCCCC"> the</font>

433
00:21:58,990 --> 00:22:04,270
other name of an mp3 file and<font color="#E5E5E5"> then</font>

434
00:22:01,120 --> 00:22:07,179
uploaded it<font color="#E5E5E5"> tried 100 crash Charles no</font>

435
00:22:04,270 --> 00:22:10,030
crash<font color="#E5E5E5"> tried a thousand no cache try</font>

436
00:22:07,180 --> 00:22:14,800
<font color="#CCCCCC">10,000</font><font color="#E5E5E5"> I got a crash but I know why it</font>

437
00:22:10,030 --> 00:22:16,990
crashed<font color="#CCCCCC"> so I need to debug</font><font color="#E5E5E5"> that so</font>

438
00:22:14,800 --> 00:22:19,540
there's two approaches<font color="#E5E5E5"> that I could have</font>

439
00:22:16,990 --> 00:22:22,090
done<font color="#CCCCCC"> for debugging</font><font color="#E5E5E5"> local debugging way I</font>

440
00:22:19,540 --> 00:22:24,340
use something like<font color="#CCCCCC"> fimo to emulate a</font>

441
00:22:22,090 --> 00:22:26,770
MIPS processor and then in this one

442
00:22:24,340 --> 00:22:30,820
<font color="#CCCCCC">suffered a</font><font color="#E5E5E5"> monotonous processor I saw</font>

443
00:22:26,770 --> 00:22:32,500
<font color="#E5E5E5">the</font><font color="#CCCCCC"> red space</font><font color="#E5E5E5"> Linux and then I stole gdb</font>

444
00:22:30,820 --> 00:22:33,970
and<font color="#E5E5E5"> then start this</font><font color="#CCCCCC"> application and</font>

445
00:22:32,500 --> 00:22:37,300
attach it so that I can<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> debug</font>

446
00:22:33,970 --> 00:22:38,800
it but the support for me it seemed like

447
00:22:37,300 --> 00:22:40,510
gonna<font color="#E5E5E5"> take a bit of time and I was</font><font color="#CCCCCC"> like</font>

448
00:22:38,800 --> 00:22:44,980
familiar with a lot of<font color="#E5E5E5"> the tools</font><font color="#CCCCCC"> yeah so</font>

449
00:22:40,510 --> 00:22:47,260
I skip through the next<font color="#E5E5E5"> approach which</font>

450
00:22:44,980 --> 00:22:49,480
is<font color="#E5E5E5"> remote debugging yet so what you do</font>

451
00:22:47,260 --> 00:22:51,670
in this<font color="#CCCCCC"> case you upload a</font><font color="#E5E5E5"> gdb server</font>

452
00:22:49,480 --> 00:22:53,410
<font color="#CCCCCC">onto</font><font color="#E5E5E5"> the embedded device and then you</font>

453
00:22:51,670 --> 00:22:55,960
just start the<font color="#E5E5E5"> gdb server and it'll</font>

454
00:22:53,410 --> 00:22:58,120
connect to that unity like DLNA process

455
00:22:55,960 --> 00:23:02,560
and then from<font color="#E5E5E5"> your local machine using</font>

456
00:22:58,120 --> 00:23:04,620
gdb you can<font color="#E5E5E5"> debug this device so yeah</font>

457
00:23:02,560 --> 00:23:06,639
that's what I<font color="#E5E5E5"> did</font>

458
00:23:04,620 --> 00:23:12,449
after debugging it<font color="#CCCCCC"> for a while I</font>

459
00:23:06,640 --> 00:23:15,400
realized that from like<font color="#CCCCCC"> reading online</font>

460
00:23:12,450 --> 00:23:17,020
how<font color="#E5E5E5"> to exploit stack I mean buffer which</font>

461
00:23:15,400 --> 00:23:19,600
was normally<font color="#E5E5E5"> this will happen</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font>

462
00:23:17,020 --> 00:23:23,590
stack but<font color="#E5E5E5"> in my</font><font color="#CCCCCC"> case it was</font><font color="#E5E5E5"> a little bit</font>

463
00:23:19,600 --> 00:23:26,010
<font color="#E5E5E5">different so when an operating system</font>

464
00:23:23,590 --> 00:23:28,419
starts an<font color="#E5E5E5"> application the allocates</font>

465
00:23:26,010 --> 00:23:30,660
certain parts of<font color="#E5E5E5"> memory for this</font>

466
00:23:28,420 --> 00:23:33,670
application right<font color="#E5E5E5"> so the ones</font><font color="#CCCCCC"> that</font>

467
00:23:30,660 --> 00:23:34,930
developers and other people<font color="#E5E5E5"> are mostly</font>

468
00:23:33,670 --> 00:23:36,970
familiar with it's like<font color="#CCCCCC"> the stake the</font>

469
00:23:34,930 --> 00:23:39,460
stack the heap right<font color="#E5E5E5"> through the stack</font>

470
00:23:36,970 --> 00:23:41,500
it's where it stores local variables<font color="#E5E5E5"> so</font>

471
00:23:39,460 --> 00:23:43,000
when you're<font color="#E5E5E5"> calling a function all those</font>

472
00:23:41,500 --> 00:23:45,730
variables<font color="#E5E5E5"> within the function are</font>

473
00:23:43,000 --> 00:23:48,880
normally stored<font color="#CCCCCC"> in the stack and the</font>

474
00:23:45,730 --> 00:23:51,730
heap<font color="#E5E5E5"> is when you keep this area where</font>

475
00:23:48,880 --> 00:23:53,920
dynamic memory is allocated so when you

476
00:23:51,730 --> 00:23:56,200
come<font color="#E5E5E5"> back and things like that the PSS</font>

477
00:23:53,920 --> 00:23:58,510
section is very<font color="#E5E5E5"> aesthetic uninitialized</font>

478
00:23:56,200 --> 00:24:01,710
variables or stored<font color="#E5E5E5"> which in my case</font>

479
00:23:58,510 --> 00:24:06,280
<font color="#CCCCCC">that</font><font color="#E5E5E5"> started</font><font color="#CCCCCC"> lost of album object was</font>

480
00:24:01,710 --> 00:24:09,550
<font color="#E5E5E5">stack</font><font color="#CCCCCC"> together</font><font color="#E5E5E5"> so when I was overflowing</font>

481
00:24:06,280 --> 00:24:12,220
the name buffer I overrode have a

482
00:24:09,550 --> 00:24:14,409
function pointer<font color="#E5E5E5"> the thing that I need</font>

483
00:24:12,220 --> 00:24:17,170
to<font color="#E5E5E5"> be to consider is because if I added</font>

484
00:24:14,410 --> 00:24:19,030
<font color="#E5E5E5">too much data to the loss</font><font color="#CCCCCC"> of that name</font>

485
00:24:17,170 --> 00:24:20,560
buffer<font color="#E5E5E5"> out over item mutex lock and the</font>

486
00:24:19,030 --> 00:24:23,860
application<font color="#CCCCCC"> will crash in a way that</font>

487
00:24:20,560 --> 00:24:26,110
<font color="#E5E5E5">it's not exploitable so I needed</font><font color="#CCCCCC"> to play</font>

488
00:24:23,860 --> 00:24:27,280
<font color="#E5E5E5">within that bigger room I had there but</font>

489
00:24:26,110 --> 00:24:28,629
at the<font color="#CCCCCC"> point is</font><font color="#E5E5E5"> not I could override a</font>

490
00:24:27,280 --> 00:24:30,610
function point and I realized I could

491
00:24:28,630 --> 00:24:35,800
<font color="#E5E5E5">control where the code is</font><font color="#CCCCCC"> going to</font>

492
00:24:30,610 --> 00:24:37,000
execute next so normally what<font color="#E5E5E5"> will</font>

493
00:24:35,800 --> 00:24:39,389
happen at this point<font color="#CCCCCC"> you would generate</font>

494
00:24:37,000 --> 00:24:42,070
<font color="#CCCCCC">shellcode that I too</font><font color="#E5E5E5"> like MSF venom</font>

495
00:24:39,390 --> 00:24:43,870
creature<font color="#E5E5E5"> exploit exploit</font><font color="#CCCCCC"> the device</font><font color="#E5E5E5"> to</font>

496
00:24:42,070 --> 00:24:45,120
the<font color="#CCCCCC"> shell</font><font color="#E5E5E5"> but in my case things were</font>

497
00:24:43,870 --> 00:24:48,280
different

498
00:24:45,120 --> 00:24:51,850
<font color="#CCCCCC">so the</font><font color="#E5E5E5"> album name is stored as</font><font color="#CCCCCC"> utf-8</font>

499
00:24:48,280 --> 00:24:55,389
<font color="#E5E5E5">string what this practically means for</font>

500
00:24:51,850 --> 00:24:58,870
me is that so this table<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> is</font>

501
00:24:55,390 --> 00:25:01,630
basically just it's showing so for each

502
00:24:58,870 --> 00:25:04,419
byte right<font color="#E5E5E5"> it can be</font><font color="#CCCCCC"> represented by two</font>

503
00:25:01,630 --> 00:25:06,160
XML<font color="#CCCCCC"> T digits ranging from 0 to F so you</font>

504
00:25:04,420 --> 00:25:08,440
got<font color="#CCCCCC"> zero at the top and then ending at</font>

505
00:25:06,160 --> 00:25:11,700
FF so those are all<font color="#E5E5E5"> the babies you</font><font color="#CCCCCC"> can</font>

506
00:25:08,440 --> 00:25:15,370
<font color="#E5E5E5">have for a byte represent in hexadecimal</font>

507
00:25:11,700 --> 00:25:18,730
<font color="#E5E5E5">I could only use the bytes in the green</font>

508
00:25:15,370 --> 00:25:19,899
range from 0 to<font color="#CCCCCC"> 80 7f anything in the</font>

509
00:25:18,730 --> 00:25:24,280
yellow range<font color="#CCCCCC"> had to follow specific</font>

510
00:25:19,900 --> 00:25:26,290
rules which<font color="#E5E5E5"> meant that the</font><font color="#CCCCCC"> shout code</font>

511
00:25:24,280 --> 00:25:29,020
that of<font color="#CCCCCC"> generator with msf venom or in</font>

512
00:25:26,290 --> 00:25:32,409
<font color="#CCCCCC">word</font><font color="#E5E5E5"> or other expert development rules</font>

513
00:25:29,020 --> 00:25:35,850
didn't have encoders to<font color="#E5E5E5"> make</font><font color="#CCCCCC"> it UTF</font>

514
00:25:32,410 --> 00:25:42,460
compatible<font color="#E5E5E5"> so this was quite a problem</font>

515
00:25:35,850 --> 00:25:44,980
<font color="#E5E5E5">so I thought</font><font color="#CCCCCC"> okay if they isn't you to</font>

516
00:25:42,460 --> 00:25:46,660
<font color="#CCCCCC">have 18 coders from</font><font color="#E5E5E5"> its I need to try</font>

517
00:25:44,980 --> 00:25:49,540
<font color="#E5E5E5">find another buffer overflow so that I</font>

518
00:25:46,660 --> 00:25:51,280
can<font color="#E5E5E5"> get a shot</font><font color="#CCCCCC"> on this device</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I found</font>

519
00:25:49,540 --> 00:25:53,260
other places where there was a buffer

520
00:25:51,280 --> 00:25:55,990
overflow so the artist<font color="#CCCCCC"> named the album</font>

521
00:25:53,260 --> 00:25:58,060
<font color="#E5E5E5">name the joinin name</font><font color="#CCCCCC"> the day taken</font><font color="#E5E5E5"> name</font>

522
00:25:55,990 --> 00:26:01,330
<font color="#E5E5E5">of an entity</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> causes puff</font>

523
00:25:58,060 --> 00:26:02,620
<font color="#E5E5E5">overflow but it all had the same</font>

524
00:26:01,330 --> 00:26:07,720
restriction of<font color="#E5E5E5"> EGF</font>

525
00:26:02,620 --> 00:26:09,158
awkward<font color="#E5E5E5"> so yeah it seems like when I</font>

526
00:26:07,720 --> 00:26:09,840
have<font color="#E5E5E5"> to try right you have compatible</font>

527
00:26:09,159 --> 00:26:14,610
<font color="#CCCCCC">charcoal</font>

528
00:26:09,840 --> 00:26:17,860
so I generated an MS<font color="#E5E5E5"> using a mr. venom</font>

529
00:26:14,610 --> 00:26:19,959
<font color="#CCCCCC">Maps</font><font color="#E5E5E5"> professional shell code which</font>

530
00:26:17,860 --> 00:26:21,039
basically<font color="#E5E5E5"> what that does is when this</font>

531
00:26:19,960 --> 00:26:22,510
thing runs on<font color="#E5E5E5"> the device I get a</font>

532
00:26:21,039 --> 00:26:25,029
<font color="#CCCCCC">connection back to me then</font><font color="#E5E5E5"> I can do more</font>

533
00:26:22,510 --> 00:26:28,890
to control this<font color="#E5E5E5"> device so I took each</font>

534
00:26:25,029 --> 00:26:32,080
instruction of the shell code right<font color="#E5E5E5"> and</font>

535
00:26:28,890 --> 00:26:33,610
tried to<font color="#CCCCCC"> get let me</font><font color="#E5E5E5"> go through this</font>

536
00:26:32,080 --> 00:26:34,960
<font color="#E5E5E5">example yeah</font><font color="#CCCCCC"> so on the left</font><font color="#E5E5E5"> hand side</font>

537
00:26:33,610 --> 00:26:37,658
you've got a<font color="#CCCCCC"> st. the instruction or</font>

538
00:26:34,960 --> 00:26:42,370
pointing structure which is this cage

539
00:26:37,659 --> 00:26:44,200
move the<font color="#CCCCCC"> Amman add the value 0 to the SP</font>

540
00:26:42,370 --> 00:26:46,299
register and store it in<font color="#E5E5E5"> the a user</font>

541
00:26:44,200 --> 00:26:49,360
register the machine code representation

542
00:26:46,299 --> 00:26:51,789
is two<font color="#CCCCCC"> zero two zero</font><font color="#E5E5E5"> eight zero</font><font color="#CCCCCC"> zero</font>

543
00:26:49,360 --> 00:26:56,070
three<font color="#CCCCCC"> the problem is now that a zero is</font>

544
00:26:51,789 --> 00:26:59,500
in that range that<font color="#CCCCCC"> I don't want which</font>

545
00:26:56,070 --> 00:27:01,029
yeah so I had to change<font color="#E5E5E5"> the instruction</font>

546
00:26:59,500 --> 00:27:05,200
<font color="#E5E5E5">to something that does the</font><font color="#CCCCCC"> equivalent</font>

547
00:27:01,029 --> 00:27:07,899
thing<font color="#E5E5E5"> but so that that</font><font color="#CCCCCC"> doesn't have</font><font color="#E5E5E5"> this</font>

548
00:27:05,200 --> 00:27:10,029
<font color="#CCCCCC">eight zero in it</font><font color="#E5E5E5"> so basically once I</font>

549
00:27:07,899 --> 00:27:12,668
swapped<font color="#CCCCCC"> either</font><font color="#E5E5E5"> an SP in the instruction</font>

550
00:27:10,029 --> 00:27:14,049
<font color="#E5E5E5">it was in a format that didn't have that</font>

551
00:27:12,669 --> 00:27:15,990
restriction so<font color="#E5E5E5"> look okay I could do this</font>

552
00:27:14,049 --> 00:27:18,399
for each<font color="#E5E5E5"> instruction in the shellcode</font>

553
00:27:15,990 --> 00:27:21,429
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> I moved</font><font color="#E5E5E5"> on to</font><font color="#CCCCCC"> another instruction</font>

554
00:27:18,399 --> 00:27:25,750
<font color="#E5E5E5">so such as adding zero to 160</font><font color="#CCCCCC"> they're</font>

555
00:27:21,429 --> 00:27:29,440
<font color="#CCCCCC">stored in a one</font><font color="#E5E5E5"> register</font><font color="#CCCCCC"> the equivalent</font>

556
00:27:25,750 --> 00:27:32,890
of instruction was adding<font color="#CCCCCC"> ten</font><font color="#E5E5E5"> to the</font><font color="#CCCCCC"> a</font>

557
00:27:29,440 --> 00:27:34,840
<font color="#E5E5E5">one register and then shifting it left</font>

558
00:27:32,890 --> 00:27:37,470
by four which is basically pumping<font color="#CCCCCC"> a</font>

559
00:27:34,840 --> 00:27:40,720
point 64 those were familiar with<font color="#E5E5E5"> binary</font>

560
00:27:37,470 --> 00:27:44,289
<font color="#E5E5E5">so it got public ated real quickly when</font>

561
00:27:40,720 --> 00:27:49,270
stuff<font color="#CCCCCC"> like this happen so like okay</font><font color="#E5E5E5"> okay</font>

562
00:27:44,289 --> 00:27:51,070
<font color="#CCCCCC">now I can't do this</font><font color="#E5E5E5"> so I'm gonna need to</font>

563
00:27:49,270 --> 00:27:54,490
try find another place in memory<font color="#E5E5E5"> back</font>

564
00:27:51,070 --> 00:27:56,918
<font color="#CCCCCC">and</font><font color="#E5E5E5"> show my shell code so I read the</font>

565
00:27:54,490 --> 00:28:01,390
source code<font color="#CCCCCC"> I gave</font><font color="#E5E5E5"> up read the source</font>

566
00:27:56,919 --> 00:28:05,289
code gave up over and over<font color="#CCCCCC"> again</font><font color="#E5E5E5"> but</font>

567
00:28:01,390 --> 00:28:07,330
then that's really example<font color="#E5E5E5"> I showed you</font>

568
00:28:05,289 --> 00:28:11,440
with<font color="#E5E5E5"> the</font><font color="#CCCCCC"> tamagochi where delayed they</font>

569
00:28:07,330 --> 00:28:14,799
naturally put her short code image<font color="#E5E5E5"> I</font>

570
00:28:11,440 --> 00:28:16,180
mean short code in an image<font color="#CCCCCC"> seed</font>

571
00:28:14,799 --> 00:28:19,210
relevant yeah<font color="#CCCCCC"> so</font>

572
00:28:16,180 --> 00:28:23,740
the mini<font color="#E5E5E5"> DLNA application process the</font>

573
00:28:19,210 --> 00:28:29,560
album art out<font color="#CCCCCC"> of an mp3 file right and</font>

574
00:28:23,740 --> 00:28:31,420
then so on<font color="#CCCCCC"> at an uber</font><font color="#E5E5E5"> body image is a</font>

575
00:28:29,560 --> 00:28:33,310
JPEG<font color="#CCCCCC"> image and JPEG images doesn't have</font>

576
00:28:31,420 --> 00:28:35,530
<font color="#E5E5E5">this utf-8 restriction and what I found</font>

577
00:28:33,310 --> 00:28:40,179
when the application cache this JPEG

578
00:28:35,530 --> 00:28:43,720
image was in memory<font color="#E5E5E5"> so I could use the</font>

579
00:28:40,180 --> 00:28:45,790
JPEG image to put<font color="#E5E5E5"> my chakra in it so to</font>

580
00:28:43,720 --> 00:28:50,200
test this<font color="#E5E5E5"> I embedded a unique thing into</font>

581
00:28:45,790 --> 00:28:52,750
an image and then edit an image to the

582
00:28:50,200 --> 00:28:55,540
cover art<font color="#E5E5E5"> of an mp3 file and then ran</font>

583
00:28:52,750 --> 00:28:59,740
<font color="#CCCCCC">the application</font><font color="#E5E5E5"> until it crashed once I</font>

584
00:28:55,540 --> 00:29:04,240
uploaded mp3 image and then there's a

585
00:28:59,740 --> 00:29:07,840
useful<font color="#CCCCCC"> gdb plugin called poem DBG which</font>

586
00:29:04,240 --> 00:29:11,740
has come on called<font color="#CCCCCC"> DMAP which will give</font>

587
00:29:07,840 --> 00:29:13,270
you all<font color="#CCCCCC"> the like the area of the heap</font><font color="#E5E5E5"> on</font>

588
00:29:11,740 --> 00:29:15,220
the<font color="#E5E5E5"> stack and I knew</font><font color="#CCCCCC"> that the image was</font>

589
00:29:13,270 --> 00:29:16,450
going to be in the heap<font color="#E5E5E5"> so</font><font color="#CCCCCC"> yeah I</font><font color="#E5E5E5"> found</font>

590
00:29:15,220 --> 00:29:19,180
the address<font color="#E5E5E5"> range of the heap</font>

591
00:29:16,450 --> 00:29:27,250
what we are other opinions<font color="#E5E5E5"> is caching</font>

592
00:29:19,180 --> 00:29:31,150
and apartments follow this<font color="#CCCCCC"> process so I</font>

593
00:29:27,250 --> 00:29:34,540
try to<font color="#E5E5E5"> search memory for my string but</font>

594
00:29:31,150 --> 00:29:36,670
<font color="#CCCCCC">do to be kept fading so a workaround of</font>

595
00:29:34,540 --> 00:29:38,230
this I just<font color="#CCCCCC"> dumped</font><font color="#E5E5E5"> a heap into a file</font>

596
00:29:36,670 --> 00:29:41,770
and<font color="#CCCCCC"> then manually search the file for my</font>

597
00:29:38,230 --> 00:29:44,190
string<font color="#E5E5E5"> what I found is that the</font><font color="#CCCCCC"> string</font>

598
00:29:41,770 --> 00:29:48,010
is always in a different<font color="#CCCCCC"> location every</font>

599
00:29:44,190 --> 00:29:50,770
<font color="#CCCCCC">single time I</font><font color="#E5E5E5"> run this so it's not</font><font color="#CCCCCC"> in a</font>

600
00:29:48,010 --> 00:29:52,510
fixed<font color="#CCCCCC"> location in memory so I</font><font color="#E5E5E5"> needed to</font>

601
00:29:50,770 --> 00:29:54,220
build a<font color="#E5E5E5"> shell code that is reliable so</font>

602
00:29:52,510 --> 00:29:58,230
that it's<font color="#E5E5E5"> always in that location that I</font>

603
00:29:54,220 --> 00:30:01,270
want<font color="#E5E5E5"> it to be a memory so what I did is</font>

604
00:29:58,230 --> 00:30:02,530
took<font color="#CCCCCC"> lob instructions which is an</font>

605
00:30:01,270 --> 00:30:04,480
<font color="#CCCCCC">abstraction that does nothing</font><font color="#E5E5E5"> and</font>

606
00:30:02,530 --> 00:30:06,010
appended it through my shell code to

607
00:30:04,480 --> 00:30:08,190
<font color="#E5E5E5">make my shell code really big so it's in</font>

608
00:30:06,010 --> 00:30:10,780
a certain place in<font color="#CCCCCC"> memory and then</font><font color="#E5E5E5"> I</font>

609
00:30:08,190 --> 00:30:13,090
sort of stitched many of these<font color="#E5E5E5"> payloads</font>

610
00:30:10,780 --> 00:30:19,330
together<font color="#E5E5E5"> so that just</font><font color="#CCCCCC"> to make</font><font color="#E5E5E5"> it more</font>

611
00:30:13,090 --> 00:30:20,620
<font color="#E5E5E5">reliable so</font><font color="#CCCCCC"> a summary of</font><font color="#E5E5E5"> what I need to</font>

612
00:30:19,330 --> 00:30:21,970
do<font color="#E5E5E5"> takes for this thing so I need to</font>

613
00:30:20,620 --> 00:30:24,399
generate<font color="#CCCCCC"> a map</font><font color="#E5E5E5"> shellcode</font><font color="#CCCCCC"> is easier</font><font color="#E5E5E5"> to</font>

614
00:30:21,970 --> 00:30:27,310
like<font color="#CCCCCC"> msi</font><font color="#E5E5E5"> venom and then add might not</font>

615
00:30:24,400 --> 00:30:30,170
sled<font color="#E5E5E5"> and then chain it together and then</font>

616
00:30:27,310 --> 00:30:32,060
add the JPEG image into

617
00:30:30,170 --> 00:30:35,870
so a -<font color="#E5E5E5"> opportunity big image and then</font>

618
00:30:32,060 --> 00:30:38,389
add the JPEG image to mp3<font color="#E5E5E5"> file and then</font>

619
00:30:35,870 --> 00:30:43,209
start an activist on<font color="#E5E5E5"> my device upload</font>

620
00:30:38,390 --> 00:30:43,210
<font color="#E5E5E5">this mp3 image and then</font><font color="#CCCCCC"> write</font><font color="#E5E5E5"> forward</font>

621
00:31:15,730 --> 00:31:27,260
<font color="#E5E5E5">okay so oh my better side so my this</font>

622
00:31:24,140 --> 00:31:31,820
device had a<font color="#CCCCCC"> Cindy she so I could</font>

623
00:31:27,260 --> 00:31:33,770
connect<font color="#CCCCCC"> to it so this directly</font><font color="#E5E5E5"> here is</font>

624
00:31:31,820 --> 00:31:35,540
connected to say Cindy Sharon<font color="#CCCCCC"> threat so</font>

625
00:31:33,770 --> 00:31:37,520
<font color="#CCCCCC">I could get</font><font color="#E5E5E5"> the father</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> in a specific</font>

626
00:31:35,540 --> 00:31:39,500
<font color="#E5E5E5">directory but I'm only restricted to</font>

627
00:31:37,520 --> 00:31:44,120
this directory on<font color="#CCCCCC"> my machine</font>

628
00:31:39,500 --> 00:31:46,130
yeah<font color="#CCCCCC"> I've created this malicious mp3</font>

629
00:31:44,120 --> 00:31:46,520
file<font color="#E5E5E5"> we just</font><font color="#CCCCCC"> got myself would embed</font><font color="#E5E5E5"> into</font>

630
00:31:46,130 --> 00:31:52,220
<font color="#E5E5E5">it</font>

631
00:31:46,520 --> 00:32:06,379
so whatever<font color="#CCCCCC"> idea is further let catalyst</font>

632
00:31:52,220 --> 00:32:06,850
now<font color="#E5E5E5"> okay and then okay okay so the</font>

633
00:32:06,380 --> 00:32:13,290
listener

634
00:32:06,850 --> 00:32:16,389
<font color="#E5E5E5">started copy it onto the device now wait</font>

635
00:32:13,290 --> 00:32:22,230
<font color="#CCCCCC">then shake on this am</font><font color="#E5E5E5"> I actually</font>

636
00:32:16,390 --> 00:32:29,540
<font color="#E5E5E5">predicted the public</font>

637
00:32:22,230 --> 00:32:29,540
[Laughter]

638
00:32:48,030 --> 00:33:02,180
so there's no connection to the foot<font color="#CCCCCC"> but</font>

639
00:32:52,530 --> 00:33:02,180
the listener<font color="#E5E5E5"> hey-up loan yet</font>

640
00:33:10,760 --> 00:33:16,890
[Applause]

641
00:33:20,919 --> 00:33:28,580
<font color="#E5E5E5">okay yeah</font>

642
00:33:24,619 --> 00:33:30,289
<font color="#E5E5E5">after this a now of</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> flat</font><font color="#CCCCCC"> pop so the</font>

643
00:33:28,580 --> 00:33:32,468
conclusion is<font color="#E5E5E5"> that</font><font color="#CCCCCC"> better device is a</font>

644
00:33:30,289 --> 00:33:34,639
great way to learn about<font color="#E5E5E5"> this aspect of</font>

645
00:33:32,469 --> 00:33:36,589
security<font color="#CCCCCC"> whether things</font><font color="#E5E5E5"> like network</font>

646
00:33:34,639 --> 00:33:39,109
services that mobile apps it sometimes

647
00:33:36,589 --> 00:33:41,269
<font color="#E5E5E5">come</font><font color="#CCCCCC"> with this actual hardware and then</font>

648
00:33:39,109 --> 00:33:46,658
there's<font color="#CCCCCC"> was a web application</font><font color="#E5E5E5"> this</font>

649
00:33:41,269 --> 00:33:49,129
device<font color="#CCCCCC"> that I didn't actually look at</font>

650
00:33:46,659 --> 00:33:50,690
I'm<font color="#E5E5E5"> trying to find a way to write utf-8</font>

651
00:33:49,129 --> 00:33:54,009
compatible<font color="#CCCCCC"> short code I've got an idea</font>

652
00:33:50,690 --> 00:34:00,139
<font color="#E5E5E5">where</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> could do this generically</font><font color="#CCCCCC"> but</font>

653
00:33:54,009 --> 00:34:02,179
<font color="#CCCCCC">there may be future</font><font color="#E5E5E5"> project and</font><font color="#CCCCCC"> nightly</font>

654
00:34:00,139 --> 00:34:03,978
in her talk<font color="#E5E5E5"> made a good point about</font>

655
00:34:02,179 --> 00:34:05,809
reverse engineering<font color="#CCCCCC"> she said</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> just</font>

656
00:34:03,979 --> 00:34:08,539
wanted to have<font color="#CCCCCC"> fun</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know all those</font>

657
00:34:05,809 --> 00:34:09,770
<font color="#E5E5E5">cool</font><font color="#CCCCCC"> kids</font><font color="#E5E5E5"> go out go to</font><font color="#CCCCCC"> cloth</font><font color="#E5E5E5"> they just</font>

658
00:34:08,539 --> 00:34:15,500
<font color="#E5E5E5">haven't discovered reverse engineering</font>

659
00:34:09,770 --> 00:34:22,480
yet<font color="#CCCCCC"> okay</font>

660
00:34:15,500 --> 00:34:22,480
<font color="#CCCCCC">Christians yes uh-huh</font>

661
00:34:24,069 --> 00:34:31,699
next question<font color="#CCCCCC"> now so I did you put this</font>

662
00:34:29,239 --> 00:34:36,219
<font color="#E5E5E5">to the original manufacturer I got no</font>

663
00:34:31,699 --> 00:34:38,839
emails back for them so this product was

664
00:34:36,219 --> 00:34:40,638
rear-ended by another company<font color="#CCCCCC"> I did send</font>

665
00:34:38,839 --> 00:34:43,509
them an email<font color="#E5E5E5"> and they said</font><font color="#CCCCCC"> Oh give me a</font>

666
00:34:40,639 --> 00:34:56,270
call<font color="#E5E5E5"> back and then they</font><font color="#CCCCCC"> never go back</font>

667
00:34:43,510 --> 00:35:01,000
what can<font color="#E5E5E5"> I do in terms of hours I would</font>

668
00:34:56,270 --> 00:35:05,319
<font color="#E5E5E5">say maybe about a hundred or so but yeah</font>

669
00:35:01,000 --> 00:35:09,470
<font color="#E5E5E5">yeah it was like two</font><font color="#CCCCCC"> weeks research</font>

670
00:35:05,319 --> 00:35:11,920
<font color="#E5E5E5">almost</font><font color="#CCCCCC"> every day and then few hours</font><font color="#E5E5E5"> off</font>

671
00:35:09,470 --> 00:35:11,919
dollars

672
00:35:19,880 --> 00:35:28,409
[Applause]

