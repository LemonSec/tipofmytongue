1
00:00:00,000 --> 00:00:07,890
getting people<font color="#CCCCCC"> gift might be</font><font color="#E5E5E5"> broken all</font>

2
00:00:06,000 --> 00:00:10,650
<font color="#E5E5E5">right but anyway</font><font color="#CCCCCC"> but similar</font><font color="#E5E5E5"> a similar</font>

3
00:00:07,890 --> 00:00:12,059
<font color="#CCCCCC">concept</font><font color="#E5E5E5"> when you invite</font><font color="#CCCCCC"> someone to bloom</font>

4
00:00:10,650 --> 00:00:13,950
you have to sign<font color="#CCCCCC"> that person's</font><font color="#E5E5E5"> email</font>

5
00:00:12,059 --> 00:00:15,268
address<font color="#CCCCCC"> you can validate</font><font color="#E5E5E5"> okay</font>

6
00:00:13,950 --> 00:00:16,859
I actually want to<font color="#E5E5E5"> sign this person</font>

7
00:00:15,269 --> 00:00:20,250
invite this<font color="#CCCCCC"> person and</font><font color="#E5E5E5"> not this other</font>

8
00:00:16,859 --> 00:00:21,449
person<font color="#E5E5E5"> now let's talk</font><font color="#CCCCCC"> about that</font><font color="#E5E5E5"> other</font>

9
00:00:20,250 --> 00:00:25,500
prong that I talked about attacking<font color="#E5E5E5"> the</font>

10
00:00:21,449 --> 00:00:27,269
smart contracts directly smart contracts

11
00:00:25,500 --> 00:00:28,619
have a whole host of popular

12
00:00:27,269 --> 00:00:30,570
vulnerabilities associated with them

13
00:00:28,619 --> 00:00:32,130
<font color="#E5E5E5">there's a really good site called -</font><font color="#CCCCCC"> Co</font>

14
00:00:30,570 --> 00:00:34,890
it's like a wasp

15
00:00:32,130 --> 00:00:36,420
but for a theory<font color="#E5E5E5"> I'm and it talks about</font>

16
00:00:34,890 --> 00:00:38,100
kind of<font color="#E5E5E5"> the top ten for aetherium</font>

17
00:00:36,420 --> 00:00:39,980
I'm not sure how those were chosen

18
00:00:38,100 --> 00:00:41,550
exactly but they're<font color="#E5E5E5"> very good examples</font>

19
00:00:39,980 --> 00:00:43,078
re-entrance<font color="#CCCCCC"> the attacks</font>

20
00:00:41,550 --> 00:00:44,370
overflow and underflow denial of service

21
00:00:43,079 --> 00:00:48,660
these<font color="#E5E5E5"> are all good examples you'll find</font>

22
00:00:44,370 --> 00:00:52,288
there I'll give an example<font color="#CCCCCC"> of an</font>

23
00:00:48,660 --> 00:00:53,339
overflow<font color="#CCCCCC"> this</font><font color="#E5E5E5"> was a recent I think three</font>

24
00:00:52,289 --> 00:00:57,050
<font color="#CCCCCC">months ago</font><font color="#E5E5E5"> four months ago</font>

25
00:00:53,340 --> 00:01:00,270
it's called batch overflow vulnerability

26
00:00:57,050 --> 00:01:02,849
<font color="#E5E5E5">basically these</font><font color="#CCCCCC"> people implemented a</font>

27
00:01:00,270 --> 00:01:05,909
token and they<font color="#E5E5E5"> wanted</font><font color="#CCCCCC"> to make</font>

28
00:01:02,850 --> 00:01:07,680
transferring tokens<font color="#E5E5E5"> cost less gas by</font>

29
00:01:05,909 --> 00:01:09,450
batching the transaction into one

30
00:01:07,680 --> 00:01:11,880
transaction<font color="#E5E5E5"> rather than having</font>

31
00:01:09,450 --> 00:01:12,930
<font color="#E5E5E5">individual transfers individual</font>

32
00:01:11,880 --> 00:01:15,720
transactions<font color="#E5E5E5"> for every single</font>

33
00:01:12,930 --> 00:01:16,740
<font color="#CCCCCC">transaction right</font><font color="#E5E5E5"> for transfer rather so</font>

34
00:01:15,720 --> 00:01:19,320
what they<font color="#E5E5E5"> did was they implemented this</font>

35
00:01:16,740 --> 00:01:21,000
batch transfer function so<font color="#CCCCCC"> you call it</font>

36
00:01:19,320 --> 00:01:22,229
<font color="#E5E5E5">once you have an array of all</font><font color="#CCCCCC"> the people</font>

37
00:01:21,000 --> 00:01:26,340
you<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to receive a token and</font><font color="#E5E5E5"> you</font>

38
00:01:22,229 --> 00:01:28,560
<font color="#CCCCCC">provide the value unfortunately they</font>

39
00:01:26,340 --> 00:01:30,180
didn't check for<font color="#CCCCCC"> an overflow so</font><font color="#E5E5E5"> there's</font>

40
00:01:28,560 --> 00:01:33,990
an overflow vulnerability here<font color="#E5E5E5"> in which</font>

41
00:01:30,180 --> 00:01:35,700
the attacker was<font color="#E5E5E5"> able</font><font color="#CCCCCC"> to basically Forge</font>

42
00:01:33,990 --> 00:01:37,020
the fact<font color="#CCCCCC"> that they don't</font><font color="#E5E5E5"> have they got</font>

43
00:01:35,700 --> 00:01:38,810
to pretend<font color="#CCCCCC"> that they had millions of</font>

44
00:01:37,020 --> 00:01:41,490
<font color="#E5E5E5">dollars of tokens essentially and that</font>

45
00:01:38,810 --> 00:01:45,149
<font color="#E5E5E5">DASCO site goes into this kind</font><font color="#CCCCCC"> of step</font>

46
00:01:41,490 --> 00:01:46,439
by step there's another one so

47
00:01:45,149 --> 00:01:48,840
permissions we talked about<font color="#E5E5E5"> that earlier</font>

48
00:01:46,439 --> 00:01:52,079
<font color="#E5E5E5">this an it wallet function this</font><font color="#CCCCCC"> is in</font>

49
00:01:48,840 --> 00:01:53,670
the parity one of the parity issues<font color="#E5E5E5"> this</font>

50
00:01:52,079 --> 00:01:54,419
didn't have any modifiers<font color="#E5E5E5"> associated</font>

51
00:01:53,670 --> 00:01:56,880
with it right

52
00:01:54,420 --> 00:01:59,820
this sets kind of the owner of<font color="#E5E5E5"> the</font>

53
00:01:56,880 --> 00:02:01,500
wallet<font color="#E5E5E5"> and it sets who the owners are so</font>

54
00:01:59,820 --> 00:02:02,939
it wasn't in a constructor so it's not

55
00:02:01,500 --> 00:02:04,920
like it was<font color="#CCCCCC"> only called once it was in a</font>

56
00:02:02,939 --> 00:02:08,250
<font color="#CCCCCC">library</font><font color="#E5E5E5"> so anyone could call this at any</font>

57
00:02:04,920 --> 00:02:09,420
point<font color="#CCCCCC"> and because anyone could call this</font>

58
00:02:08,250 --> 00:02:10,889
<font color="#E5E5E5">at any point</font><font color="#CCCCCC"> you definitely need to</font>

59
00:02:09,419 --> 00:02:13,350
modify<font color="#CCCCCC"> or associated with</font><font color="#E5E5E5"> it so you</font>

60
00:02:10,889 --> 00:02:14,489
could restrict who<font color="#E5E5E5"> is</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to call it</font>

61
00:02:13,350 --> 00:02:16,230
so if you're gonna<font color="#E5E5E5"> update the ownership</font>

62
00:02:14,490 --> 00:02:18,210
<font color="#E5E5E5">of the contract</font><font color="#CCCCCC"> you need to make sure</font>

63
00:02:16,230 --> 00:02:19,859
the initial owner was the<font color="#CCCCCC"> one</font><font color="#E5E5E5"> sending</font>

64
00:02:18,210 --> 00:02:21,810
that transaction in the first place<font color="#CCCCCC"> they</font>

65
00:02:19,860 --> 00:02:24,360
didn't do that<font color="#CCCCCC"> so someone set themself</font>

66
00:02:21,810 --> 00:02:27,330
as the owner<font color="#E5E5E5"> and blew the entire thing</font>

67
00:02:24,360 --> 00:02:28,170
up<font color="#E5E5E5"> these are</font><font color="#CCCCCC"> real-world</font><font color="#E5E5E5"> world problems</font><font color="#CCCCCC"> I</font>

68
00:02:27,330 --> 00:02:29,130
mean these are the kind<font color="#CCCCCC"> of</font>

69
00:02:28,170 --> 00:02:31,859
vulnerabilities we're dealing with right

70
00:02:29,130 --> 00:02:33,299
<font color="#CCCCCC">now</font><font color="#E5E5E5"> very simple very straightforward so</font>

71
00:02:31,860 --> 00:02:36,500
it'll be good to<font color="#E5E5E5"> have all your eyes on</font>

72
00:02:33,300 --> 00:02:36,500
it<font color="#E5E5E5"> after after this talk hopefully</font>

73
00:02:37,220 --> 00:02:43,350
<font color="#E5E5E5">symbolic execution</font><font color="#CCCCCC"> is kind of</font><font color="#E5E5E5"> a really</font>

74
00:02:40,590 --> 00:02:44,880
<font color="#CCCCCC">powerful</font><font color="#E5E5E5"> tool to use towards auditing</font>

75
00:02:43,350 --> 00:02:47,190
smart contracts<font color="#E5E5E5"> I'm gonna go over a</font>

76
00:02:44,880 --> 00:02:50,490
<font color="#E5E5E5">brief example of what it is</font><font color="#CCCCCC"> and some</font>

77
00:02:47,190 --> 00:02:52,560
tools out<font color="#CCCCCC"> there that employ it</font><font color="#E5E5E5"> so</font>

78
00:02:50,490 --> 00:02:54,660
instead<font color="#CCCCCC"> of concrete execution</font><font color="#E5E5E5"> where</font>

79
00:02:52,560 --> 00:02:57,360
variables are given<font color="#CCCCCC"> concrete values</font><font color="#E5E5E5"> like</font>

80
00:02:54,660 --> 00:02:58,799
four<font color="#E5E5E5"> or five or six mmm symbolic</font>

81
00:02:57,360 --> 00:03:01,800
execution allows you to parse through a

82
00:02:58,800 --> 00:03:04,440
program<font color="#E5E5E5"> and provide a symbolic value</font><font color="#CCCCCC"> so</font>

83
00:03:01,800 --> 00:03:08,130
it's not tied to<font color="#CCCCCC"> one value</font><font color="#E5E5E5"> but basically</font>

84
00:03:04,440 --> 00:03:09,180
a range of<font color="#E5E5E5"> values</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are possible so</font>

85
00:03:08,130 --> 00:03:12,570
when you're going through<font color="#E5E5E5"> the program</font>

86
00:03:09,180 --> 00:03:14,040
<font color="#E5E5E5">you fork it every conditional the the</font>

87
00:03:12,570 --> 00:03:16,140
symbolic execution<font color="#E5E5E5"> engine will</font>

88
00:03:14,040 --> 00:03:18,090
essentially<font color="#CCCCCC"> fork</font><font color="#E5E5E5"> and Traverse every path</font>

89
00:03:16,140 --> 00:03:19,859
and at the end of<font color="#CCCCCC"> that path when it</font><font color="#E5E5E5"> gets</font>

90
00:03:18,090 --> 00:03:22,350
to the<font color="#E5E5E5"> end state it'll tell you the</font>

91
00:03:19,860 --> 00:03:24,870
conditions necessary to get<font color="#E5E5E5"> to that end</font>

92
00:03:22,350 --> 00:03:27,359
<font color="#CCCCCC">state</font><font color="#E5E5E5"> so ultimately you can find out a</font>

93
00:03:24,870 --> 00:03:29,730
<font color="#CCCCCC">way in which a smart contract at</font>

94
00:03:27,360 --> 00:03:33,690
<font color="#E5E5E5">overflow by following the logic</font><font color="#CCCCCC"> of what</font>

95
00:03:29,730 --> 00:03:35,130
<font color="#E5E5E5">conditions are necessary to get there so</font>

96
00:03:33,690 --> 00:03:38,250
here's an example<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> Mark</font>

97
00:03:35,130 --> 00:03:39,570
<font color="#E5E5E5">Mossberg at trail of bits</font><font color="#CCCCCC"> they're really</font>

98
00:03:38,250 --> 00:03:40,950
really great<font color="#CCCCCC"> people at auditing</font>

99
00:03:39,570 --> 00:03:43,650
contracts and they've done<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of</font>

100
00:03:40,950 --> 00:03:46,950
great development work<font color="#E5E5E5"> if you had a</font>

101
00:03:43,650 --> 00:03:49,380
concrete<font color="#E5E5E5"> value here like</font><font color="#CCCCCC"> var was</font><font color="#E5E5E5"> 45</font>

102
00:03:46,950 --> 00:03:52,200
<font color="#E5E5E5">right you'd skip the first part of the</font>

103
00:03:49,380 --> 00:03:54,060
conditional and you jump to<font color="#CCCCCC"> the else but</font>

104
00:03:52,200 --> 00:03:57,359
in a symbolic<font color="#CCCCCC"> if it was a</font><font color="#E5E5E5"> sign</font><font color="#CCCCCC"> of</font>

105
00:03:54,060 --> 00:04:01,530
symbolic value rather when you get to

106
00:03:57,360 --> 00:04:03,210
the if<font color="#CCCCCC"> var equals 42</font><font color="#E5E5E5"> the symbolic engine</font>

107
00:04:01,530 --> 00:04:04,890
would go through that but it would also

108
00:04:03,210 --> 00:04:06,900
fork and it would go<font color="#E5E5E5"> down the else as</font>

109
00:04:04,890 --> 00:04:08,429
well and<font color="#E5E5E5"> I would just keep in mind the</font>

110
00:04:06,900 --> 00:04:11,670
values or the<font color="#E5E5E5"> conditions rather that I</font>

111
00:04:08,430 --> 00:04:13,920
needed<font color="#CCCCCC"> to</font><font color="#E5E5E5"> to meet to get down that path</font>

112
00:04:11,670 --> 00:04:15,299
<font color="#E5E5E5">so when it</font><font color="#CCCCCC"> gets</font><font color="#E5E5E5"> to the</font><font color="#CCCCCC"> end it would say</font>

113
00:04:13,920 --> 00:04:16,950
<font color="#E5E5E5">okay I had to</font><font color="#CCCCCC"> meet this condition</font><font color="#E5E5E5"> in</font>

114
00:04:15,300 --> 00:04:18,450
<font color="#E5E5E5">this condition this condition</font><font color="#CCCCCC"> let's see</font>

115
00:04:16,950 --> 00:04:21,539
if these three<font color="#CCCCCC"> conditions are ever</font>

116
00:04:18,450 --> 00:04:22,919
possible and if values<font color="#CCCCCC"> exists that meet</font>

117
00:04:21,540 --> 00:04:23,610
all those<font color="#CCCCCC"> conditions then you can get</font><font color="#E5E5E5"> to</font>

118
00:04:22,919 --> 00:04:27,030
<font color="#E5E5E5">that end</font><font color="#CCCCCC"> State</font>

119
00:04:23,610 --> 00:04:30,889
ultimately it's another slide from<font color="#CCCCCC"> mark</font>

120
00:04:27,030 --> 00:04:34,919
from<font color="#CCCCCC"> Trello bits this</font><font color="#E5E5E5"> is an example of</font>

121
00:04:30,889 --> 00:04:37,199
how that<font color="#E5E5E5"> end state calculation gets done</font>

122
00:04:34,919 --> 00:04:39,419
<font color="#E5E5E5">so when these are all assigned when you</font>

123
00:04:37,199 --> 00:04:41,669
have a B and C assigned symbolic values

124
00:04:39,419 --> 00:04:44,219
you can<font color="#E5E5E5"> go down every path here in this</font>

125
00:04:41,669 --> 00:04:45,810
tree<font color="#E5E5E5"> and you'll get the end States and</font>

126
00:04:44,219 --> 00:04:47,969
the conditions<font color="#E5E5E5"> necessary to get to that</font>

127
00:04:45,810 --> 00:04:49,590
end<font color="#CCCCCC"> State so what we're checking here is</font>

128
00:04:47,969 --> 00:04:53,460
to see<font color="#E5E5E5"> if that assertion ever fails</font>

129
00:04:49,590 --> 00:04:56,188
<font color="#CCCCCC">right</font><font color="#E5E5E5"> assert X plus y plus not Z Z does</font>

130
00:04:53,460 --> 00:04:59,370
not equal 3<font color="#CCCCCC"> there is a path in</font><font color="#E5E5E5"> which</font>

131
00:04:56,189 --> 00:05:02,580
that<font color="#E5E5E5"> assertion takes fails and it's when</font>

132
00:04:59,370 --> 00:05:04,650
not a and B<font color="#CCCCCC"> is less than</font><font color="#E5E5E5"> 5 and sorry not</font>

133
00:05:02,580 --> 00:05:05,789
those<font color="#E5E5E5"> are Greek letters but when that</font>

134
00:05:04,650 --> 00:05:07,469
<font color="#E5E5E5">takes</font><font color="#CCCCCC"> place when</font><font color="#E5E5E5"> those conditions are</font>

135
00:05:05,789 --> 00:05:09,330
<font color="#E5E5E5">met so that's how the symbolic actions</font>

136
00:05:07,469 --> 00:05:11,279
<font color="#E5E5E5">execution engine works it'll tell you</font>

137
00:05:09,330 --> 00:05:14,490
<font color="#CCCCCC">okay I got to</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> search assert</font>

138
00:05:11,279 --> 00:05:16,349
failing<font color="#E5E5E5"> if and only if these criteria</font>

139
00:05:14,490 --> 00:05:18,060
<font color="#CCCCCC">are met and then what's called the</font>

140
00:05:16,349 --> 00:05:20,490
constraint engine<font color="#E5E5E5"> a constraint solver</font>

141
00:05:18,060 --> 00:05:22,500
<font color="#E5E5E5">will then tell you if those constraints</font>

142
00:05:20,490 --> 00:05:25,439
<font color="#E5E5E5">are solvable essentially if that's a</font>

143
00:05:22,500 --> 00:05:27,300
valid situation if that can happen<font color="#E5E5E5"> and</font>

144
00:05:25,439 --> 00:05:29,219
the thing about symbolic execution<font color="#E5E5E5"> it's</font>

145
00:05:27,300 --> 00:05:31,469
powerful<font color="#E5E5E5"> against smart contracts in</font>

146
00:05:29,219 --> 00:05:34,650
particular<font color="#E5E5E5"> less so for things like</font>

147
00:05:31,469 --> 00:05:35,789
sandbox for<font color="#CCCCCC"> sandboxes so in sandboxes</font>

148
00:05:34,650 --> 00:05:37,529
for example it would<font color="#CCCCCC"> be really valuable</font>

149
00:05:35,789 --> 00:05:40,139
to<font color="#E5E5E5"> be able to reverse every single path</font>

150
00:05:37,529 --> 00:05:42,449
of a binary but the issue<font color="#CCCCCC"> is when you're</font>

151
00:05:40,139 --> 00:05:45,870
dealing<font color="#CCCCCC"> with really</font><font color="#E5E5E5"> large binaries that</font>

152
00:05:42,449 --> 00:05:48,839
<font color="#E5E5E5">are importing</font><font color="#CCCCCC"> VLS with thousands</font><font color="#E5E5E5"> of</font>

153
00:05:45,870 --> 00:05:49,979
lines of<font color="#E5E5E5"> code it's difficult</font><font color="#CCCCCC"> we'd run</font>

154
00:05:48,839 --> 00:05:52,469
out of computing resources<font color="#CCCCCC"> it's</font>

155
00:05:49,979 --> 00:05:54,680
impossible a lot of these malware

156
00:05:52,469 --> 00:05:57,180
samples<font color="#E5E5E5"> send you on a wild goose</font><font color="#CCCCCC"> chase</font>

157
00:05:54,680 --> 00:05:59,490
<font color="#CCCCCC">so smart contracts are limited in size</font>

158
00:05:57,180 --> 00:06:01,139
<font color="#E5E5E5">because of</font><font color="#CCCCCC"> gas considerations</font><font color="#E5E5E5"> it costs</font>

159
00:05:59,490 --> 00:06:03,300
<font color="#E5E5E5">money real</font><font color="#CCCCCC"> money to publish a smart</font>

160
00:06:01,139 --> 00:06:05,339
contract<font color="#CCCCCC"> it part</font><font color="#E5E5E5"> cost a lot of</font><font color="#CCCCCC"> money to</font>

161
00:06:03,300 --> 00:06:07,710
issue transactions to that smart

162
00:06:05,339 --> 00:06:10,919
contract<font color="#E5E5E5"> so it's more powerful</font><font color="#CCCCCC"> against</font>

163
00:06:07,710 --> 00:06:12,060
smart contracts so<font color="#CCCCCC"> Manticore is a good</font>

164
00:06:10,919 --> 00:06:13,799
example<font color="#CCCCCC"> I mentioned that it's by the</font>

165
00:06:12,060 --> 00:06:15,629
people at a trail of bits<font color="#CCCCCC"> it's a</font>

166
00:06:13,800 --> 00:06:18,510
symbolic execution tool and it will

167
00:06:15,629 --> 00:06:22,580
traverse these<font color="#E5E5E5"> paths like I mentioned</font>

168
00:06:18,510 --> 00:06:22,580
and let me see<font color="#E5E5E5"> if I can get this to play</font>

169
00:06:32,599 --> 00:06:39,710
<font color="#E5E5E5">okay so here's an example of it so you</font>

170
00:06:36,619 --> 00:06:41,029
have this burnable token right here and

171
00:06:39,710 --> 00:06:42,318
that's<font color="#E5E5E5"> the source code for it right</font>

172
00:06:41,029 --> 00:06:43,909
there's intentionally some bugs<font color="#E5E5E5"> in it</font>

173
00:06:42,319 --> 00:06:45,740
<font color="#E5E5E5">and they run</font><font color="#CCCCCC"> Manticore against that</font>

174
00:06:43,909 --> 00:06:47,029
contract and it's<font color="#E5E5E5"> going through all</font>

175
00:06:45,740 --> 00:06:49,279
<font color="#E5E5E5">these n states and it's finding the</font>

176
00:06:47,029 --> 00:06:50,419
conditions necessary for<font color="#CCCCCC"> that so soon</font>

177
00:06:49,279 --> 00:06:54,979
it's gonna find an underflow

178
00:06:50,419 --> 00:06:56,299
vulnerability<font color="#E5E5E5"> and it'll essentially see</font>

179
00:06:54,979 --> 00:06:58,938
here it<font color="#E5E5E5"> is enters</font><font color="#CCCCCC"> or underflow its</font><font color="#E5E5E5"> sub</font>

180
00:06:56,300 --> 00:07:00,800
instruction it'll remember<font color="#CCCCCC"> that n state</font>

181
00:06:58,939 --> 00:07:03,319
and it'll<font color="#E5E5E5"> tell you the arguments needed</font>

182
00:07:00,800 --> 00:07:04,669
that satisfied that condition<font color="#E5E5E5"> an example</font>

183
00:07:03,319 --> 00:07:07,059
those arguments<font color="#CCCCCC"> that satisfied that</font>

184
00:07:04,669 --> 00:07:07,058
condition

185
00:07:20,330 --> 00:07:26,359
another thing<font color="#E5E5E5"> for another approach</font>

186
00:07:24,050 --> 00:07:28,820
<font color="#E5E5E5">rather than doing symbolic execution is</font>

187
00:07:26,360 --> 00:07:30,650
<font color="#E5E5E5">just going through the binary yourself</font>

188
00:07:28,820 --> 00:07:32,150
<font color="#E5E5E5">right so you can actually use</font><font color="#CCCCCC"> ether</font>

189
00:07:30,650 --> 00:07:34,340
<font color="#CCCCCC">splay for example and other tool by</font>

190
00:07:32,150 --> 00:07:35,919
<font color="#E5E5E5">trail bits to get the</font><font color="#CCCCCC"> bytecode of a</font>

191
00:07:34,340 --> 00:07:38,539
smart<font color="#CCCCCC"> contract in an</font><font color="#E5E5E5"> address and</font>

192
00:07:35,920 --> 00:07:40,490
disassemble it and go through it<font color="#E5E5E5"> and</font>

193
00:07:38,540 --> 00:07:43,550
it's very<font color="#CCCCCC"> easy to</font><font color="#E5E5E5"> do there aren't that</font>

194
00:07:40,490 --> 00:07:44,840
many instructions in the EVM<font color="#CCCCCC"> so I</font>

195
00:07:43,550 --> 00:07:47,780
recommend doing it<font color="#E5E5E5"> I actually wrote a</font>

196
00:07:44,840 --> 00:07:49,700
blog<font color="#CCCCCC"> post about this too which is pretty</font>

197
00:07:47,780 --> 00:07:51,440
<font color="#E5E5E5">easy</font><font color="#CCCCCC"> to follow</font><font color="#E5E5E5"> along and another really</font>

198
00:07:49,700 --> 00:07:53,510
popular symbolic execution engine if you

199
00:07:51,440 --> 00:07:56,900
are interested is mithril by consensus

200
00:07:53,510 --> 00:07:59,719
<font color="#E5E5E5">so similar concept to</font><font color="#CCCCCC"> Manticore both</font>

201
00:07:56,900 --> 00:08:02,539
have<font color="#E5E5E5"> really good documentation and I</font>

202
00:07:59,720 --> 00:08:04,880
mentioned that reversing<font color="#E5E5E5"> post so I'll</font>

203
00:08:02,540 --> 00:08:07,820
just I'll put it<font color="#CCCCCC"> here for</font><font color="#E5E5E5"> anyone who</font>

204
00:08:04,880 --> 00:08:08,930
wants<font color="#E5E5E5"> to check it out that's it thank</font>

205
00:08:07,820 --> 00:08:10,310
<font color="#E5E5E5">you</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> much if you're interested in</font>

206
00:08:08,930 --> 00:08:12,110
<font color="#CCCCCC">coming to the party</font><font color="#E5E5E5"> like I mentioned</font>

207
00:08:10,310 --> 00:08:13,190
just feel<font color="#E5E5E5"> free to reach out</font><font color="#CCCCCC"> to me and if</font>

208
00:08:12,110 --> 00:08:14,870
you<font color="#E5E5E5"> have a resume or</font><font color="#CCCCCC"> anything</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> that</font>

209
00:08:13,190 --> 00:08:16,120
come up<font color="#E5E5E5"> afterwards</font><font color="#CCCCCC"> I'll take any</font>

210
00:08:14,870 --> 00:08:20,040
<font color="#CCCCCC">questions thank</font><font color="#E5E5E5"> you</font>

211
00:08:16,120 --> 00:08:20,040
[Applause]

212
00:08:20,770 --> 00:08:24,310
just to remind her again if you have any

213
00:08:22,660 --> 00:08:26,199
<font color="#E5E5E5">questions please raise your hand so I</font>

214
00:08:24,310 --> 00:08:26,860
<font color="#E5E5E5">can bring the mic to you so everyone can</font>

215
00:08:26,199 --> 00:08:35,860
hear<font color="#E5E5E5"> it</font>

216
00:08:26,860 --> 00:08:39,120
any questions really<font color="#CCCCCC"> high does</font><font color="#E5E5E5"> anyone</font>

217
00:08:35,860 --> 00:08:39,120
have any<font color="#E5E5E5"> questions</font><font color="#CCCCCC"> just raise your hand</font>

218
00:08:48,930 --> 00:08:53,500
it's a first<font color="#E5E5E5"> of all great talk really</font>

219
00:08:51,040 --> 00:08:56,019
<font color="#E5E5E5">enjoyed it thank you</font><font color="#CCCCCC"> John</font><font color="#E5E5E5"> yeah</font>

220
00:08:53,500 --> 00:09:00,310
see you've been<font color="#CCCCCC"> in the Theorem space for</font>

221
00:08:56,019 --> 00:09:01,899
<font color="#E5E5E5">for what like a year</font><font color="#CCCCCC"> now uh what do you</font>

222
00:09:00,310 --> 00:09:03,579
<font color="#E5E5E5">say that obviously</font><font color="#CCCCCC"> it's a very young</font>

223
00:09:01,899 --> 00:09:05,440
space would<font color="#E5E5E5"> he'd notice do you notice</font>

224
00:09:03,579 --> 00:09:06,969
like that<font color="#CCCCCC"> the space is maturing</font><font color="#E5E5E5"> or</font>

225
00:09:05,440 --> 00:09:09,130
improving are there are there<font color="#E5E5E5"> tools that</font>

226
00:09:06,970 --> 00:09:10,810
are there<font color="#CCCCCC"> that weren't for uh should we</font>

227
00:09:09,130 --> 00:09:11,800
<font color="#E5E5E5">expect a bunch of like</font><font color="#CCCCCC"> really big</font><font color="#E5E5E5"> hacks</font>

228
00:09:10,810 --> 00:09:14,138
<font color="#CCCCCC">like we've seen so far</font>

229
00:09:11,800 --> 00:09:15,670
etc<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> a good question John thank</font>

230
00:09:14,139 --> 00:09:18,430
<font color="#CCCCCC">you for asking</font><font color="#E5E5E5"> it</font>

231
00:09:15,670 --> 00:09:19,779
I see kind of there's a<font color="#E5E5E5"> little bit of</font><font color="#CCCCCC"> a</font>

232
00:09:18,430 --> 00:09:21,160
<font color="#E5E5E5">barrier to entry right now and that</font>

233
00:09:19,779 --> 00:09:25,360
there<font color="#CCCCCC"> aren't</font><font color="#E5E5E5"> that many people teaching</font>

234
00:09:21,160 --> 00:09:27,100
kind of these concepts<font color="#CCCCCC"> smart contracts</font>

235
00:09:25,360 --> 00:09:29,050
are difficult to write right now<font color="#CCCCCC"> also</font>

236
00:09:27,100 --> 00:09:31,300
<font color="#E5E5E5">because the auditing is really expensive</font>

237
00:09:29,050 --> 00:09:33,279
right<font color="#CCCCCC"> now</font><font color="#E5E5E5"> so I'd like to see a lot</font><font color="#CCCCCC"> more</font>

238
00:09:31,300 --> 00:09:34,810
<font color="#E5E5E5">people from the traditional pen testing</font>

239
00:09:33,279 --> 00:09:37,660
space<font color="#E5E5E5"> get into this because it's</font><font color="#CCCCCC"> very</font>

240
00:09:34,810 --> 00:09:39,430
<font color="#CCCCCC">easy like I mentioned</font><font color="#E5E5E5"> so I think we're</font>

241
00:09:37,660 --> 00:09:41,380
gonna start<font color="#CCCCCC"> seeing</font><font color="#E5E5E5"> that soon but there's</font>

242
00:09:39,430 --> 00:09:44,430
<font color="#E5E5E5">not a lot</font><font color="#CCCCCC"> of active security</font><font color="#E5E5E5"> research</font>

243
00:09:41,380 --> 00:09:44,430
going<font color="#E5E5E5"> on which would be great to see</font>

244
00:09:47,769 --> 00:09:53,410
<font color="#CCCCCC">I think it's my turn so sometime this</font>

245
00:09:51,519 --> 00:09:56,139
year<font color="#E5E5E5"> there was a report that was</font>

246
00:09:53,410 --> 00:09:58,569
<font color="#E5E5E5">released with like 34,000</font>

247
00:09:56,139 --> 00:10:01,149
vulnerabilities<font color="#E5E5E5"> and currently publicly</font>

248
00:09:58,569 --> 00:10:03,128
available smart contracts<font color="#E5E5E5"> did you read</font>

249
00:10:01,149 --> 00:10:05,679
that<font color="#E5E5E5"> I think I've heard</font><font color="#CCCCCC"> something</font>

250
00:10:03,129 --> 00:10:07,660
similar<font color="#CCCCCC"> but I don't know the numbers</font>

251
00:10:05,679 --> 00:10:09,100
<font color="#E5E5E5">there are people who run like automated</font>

252
00:10:07,660 --> 00:10:10,209
<font color="#CCCCCC">tools against all these smart contracts</font>

253
00:10:09,100 --> 00:10:12,730
<font color="#E5E5E5">out there and they'll find like small</font>

254
00:10:10,209 --> 00:10:15,008
<font color="#CCCCCC">things a lot of</font><font color="#E5E5E5"> times so that's probably</font>

255
00:10:12,730 --> 00:10:17,170
similar<font color="#E5E5E5"> to that yeah that's what I was</font>

256
00:10:15,009 --> 00:10:26,709
gonna<font color="#E5E5E5"> ask</font><font color="#CCCCCC"> man yeah that's definitely</font><font color="#E5E5E5"> a</font>

257
00:10:17,170 --> 00:10:29,170
real thing so we<font color="#CCCCCC"> talk I'm just wanting</font>

258
00:10:26,709 --> 00:10:31,569
to ask you<font color="#E5E5E5"> if there is any difference</font><font color="#CCCCCC"> in</font>

259
00:10:29,170 --> 00:10:34,809
in the<font color="#E5E5E5"> process of finding bugs in</font>

260
00:10:31,569 --> 00:10:38,110
different versions<font color="#CCCCCC"> of solidity you know</font>

261
00:10:34,809 --> 00:10:44,019
I know that<font color="#CCCCCC"> there is</font><font color="#E5E5E5"> some changes in the</font>

262
00:10:38,110 --> 00:10:46,119
code in the version 0.304<font color="#E5E5E5"> so yeah it's a</font>

263
00:10:44,019 --> 00:10:47,379
good<font color="#CCCCCC"> question</font><font color="#E5E5E5"> so I think as of late the</font>

264
00:10:46,119 --> 00:10:51,339
most recent<font color="#CCCCCC"> change is literally</font><font color="#E5E5E5"> I've</font>

265
00:10:47,379 --> 00:10:54,429
seen have been<font color="#CCCCCC"> things</font><font color="#E5E5E5"> aimed at how you</font>

266
00:10:51,339 --> 00:10:57,490
can<font color="#E5E5E5"> readability and optimizations right</font>

267
00:10:54,429 --> 00:10:59,319
<font color="#E5E5E5">I haven't seen a lot</font><font color="#CCCCCC"> of bug fixes for</font>

268
00:10:57,490 --> 00:11:00,519
example<font color="#E5E5E5"> so a good example</font><font color="#CCCCCC"> of a recent</font>

269
00:10:59,319 --> 00:11:02,469
she's like a relatively recent change

270
00:11:00,519 --> 00:11:05,049
was adding<font color="#E5E5E5"> the payable modifier so you</font>

271
00:11:02,470 --> 00:11:07,779
can't<font color="#E5E5E5"> actually send ether to a function</font>

272
00:11:05,049 --> 00:11:09,549
<font color="#CCCCCC">that doesn't expect to</font><font color="#E5E5E5"> get</font><font color="#CCCCCC"> ether unless</font>

273
00:11:07,779 --> 00:11:13,179
you have this payable modifier at the

274
00:11:09,549 --> 00:11:15,879
end of it<font color="#CCCCCC"> so that kind of that edition</font>

275
00:11:13,179 --> 00:11:18,939
from solidity<font color="#E5E5E5"> has I'm sure</font><font color="#CCCCCC"> resulted in a</font>

276
00:11:15,879 --> 00:11:20,139
ton less vulnerabilities<font color="#E5E5E5"> but yeah mostly</font>

277
00:11:18,939 --> 00:11:25,209
<font color="#E5E5E5">around optimizations cuz that's been a</font>

278
00:11:20,139 --> 00:11:29,330
big<font color="#CCCCCC"> concern of solidity lately anyone</font>

279
00:11:25,209 --> 00:11:36,319
else have a<font color="#CCCCCC"> question okay thank you</font>

280
00:11:29,330 --> 00:11:36,320
[Applause]

281
00:11:41,290 --> 00:11:57,099
[Music]

282
00:11:59,930 --> 00:12:54,609
[Music]

283
00:13:05,650 --> 00:13:10,059
[Music]

284
00:13:14,200 --> 00:13:17,309
[Music]

285
00:13:38,680 --> 00:13:49,618
[Music]

286
00:13:53,160 --> 00:13:56,209
[Music]

287
00:14:01,880 --> 00:14:10,820
[Music]

288
00:14:24,250 --> 00:14:27,379
[Applause]

289
00:14:36,890 --> 00:14:40,899
[Music]

290
00:14:45,330 --> 00:14:48,940
[Music]

291
00:15:07,590 --> 00:15:11,159
[Music]

292
00:15:21,860 --> 00:15:47,220
[Music]

293
00:15:50,870 --> 00:15:55,950
[Music]

294
00:16:07,290 --> 00:16:26,860
[Music]

295
00:16:37,340 --> 00:16:40,399
[Music]

296
00:16:44,850 --> 00:16:48,379
[Music]

297
00:16:51,930 --> 00:16:55,030
[Music]

298
00:16:59,330 --> 00:17:24,439
[Music]

299
00:17:29,840 --> 00:17:32,939
[Music]

300
00:17:35,660 --> 00:17:40,000
[Music]

301
00:17:44,060 --> 00:17:51,029
[Music]

302
00:17:47,910 --> 00:17:51,029
[Applause]

303
00:17:51,610 --> 00:18:11,260
[Music]

304
00:18:13,880 --> 00:18:20,080
[Music]

305
00:18:17,390 --> 00:18:24,799
[Applause]

306
00:18:20,080 --> 00:18:24,799
[Music]

307
00:18:28,280 --> 00:19:38,400
[Music]

308
00:19:42,590 --> 00:20:50,649
[Music]

309
00:20:58,010 --> 00:21:06,829
[Music]

310
00:21:09,520 --> 00:21:14,379
[Music]

311
00:21:17,250 --> 00:21:22,079
[Music]

312
00:21:29,370 --> 00:21:47,698
[Music]

313
00:21:50,560 --> 00:22:10,030
[Music]

314
00:22:15,490 --> 00:22:21,480
[Music]

315
00:22:25,920 --> 00:22:29,039
[Music]

316
00:22:31,420 --> 00:22:41,980
[Music]

317
00:22:44,920 --> 00:22:52,059
[Music]

318
00:22:58,280 --> 00:23:01,660
[Music]

319
00:23:05,510 --> 00:23:19,329
[Music]

320
00:23:21,020 --> 00:23:24,790
[Applause]

321
00:23:22,860 --> 00:23:28,079
[Music]

322
00:23:24,790 --> 00:23:28,079
[Applause]

323
00:23:34,890 --> 00:23:55,150
[Music]

324
00:23:56,740 --> 00:23:59,869
[Applause]

325
00:24:17,920 --> 00:25:02,170
[Music]

326
00:25:09,310 --> 00:25:13,649
[Music]

327
00:25:17,520 --> 00:25:20,809
[Music]

328
00:25:26,610 --> 00:25:40,889
[Music]

329
00:25:43,890 --> 00:25:48,749
[Music]

330
00:25:50,760 --> 00:25:57,259
[Music]

331
00:26:01,900 --> 00:26:05,299
[Music]

332
00:26:08,520 --> 00:26:14,030
[Music]

333
00:26:16,190 --> 00:26:47,599
[Music]

334
00:26:57,450 --> 00:27:20,549
[Music]

335
00:27:28,030 --> 00:27:31,180
[Music]

336
00:27:34,740 --> 00:27:37,849
[Music]

337
00:27:41,250 --> 00:27:46,709
[Music]

338
00:27:48,900 --> 00:28:05,670
[Music]

339
00:28:09,230 --> 00:28:26,009
[Music]

340
00:28:30,840 --> 00:28:57,889
[Music]

341
00:29:00,530 --> 00:29:08,480
[Music]

342
00:29:21,780 --> 00:29:40,539
[Music]

343
00:29:51,350 --> 00:29:55,399
hi everyone<font color="#CCCCCC"> welcome to the last talk of</font>

344
00:29:53,750 --> 00:29:57,350
the day here<font color="#CCCCCC"> at</font><font color="#E5E5E5"> breaking ground we've</font>

345
00:29:55,400 --> 00:30:00,110
got<font color="#CCCCCC"> eras who we'll be talking about</font>

346
00:29:57,350 --> 00:30:07,189
<font color="#E5E5E5">serverless infections let's give it up</font>

347
00:30:00,110 --> 00:30:09,770
<font color="#E5E5E5">for</font><font color="#CCCCCC"> her is just a couple</font><font color="#E5E5E5"> of quick notes</font>

348
00:30:07,190 --> 00:30:11,960
<font color="#CCCCCC">before we begin first to thank our</font>

349
00:30:09,770 --> 00:30:14,900
sponsors we'd like to thank<font color="#CCCCCC"> inner circle</font>

350
00:30:11,960 --> 00:30:17,120
sponsor<font color="#E5E5E5"> rapid7 stellar sponsors Amazon</font>

351
00:30:14,900 --> 00:30:19,250
oath<font color="#E5E5E5"> palace and SEMO</font>

352
00:30:17,120 --> 00:30:20,899
it's their support along with<font color="#E5E5E5"> other</font>

353
00:30:19,250 --> 00:30:23,000
sponsors<font color="#CCCCCC"> and donors that made</font><font color="#E5E5E5"> this</font>

354
00:30:20,900 --> 00:30:26,660
possible so<font color="#E5E5E5"> without them we would not be</font>

355
00:30:23,000 --> 00:30:28,130
<font color="#E5E5E5">here today so thank you</font><font color="#CCCCCC"> to them quick</font>

356
00:30:26,660 --> 00:30:29,690
note about<font color="#E5E5E5"> cell phones please make sure</font>

357
00:30:28,130 --> 00:30:31,430
<font color="#CCCCCC">that they are in silent because</font><font color="#E5E5E5"> these</font>

358
00:30:29,690 --> 00:30:32,900
talks are being<font color="#CCCCCC"> live streamed so you</font>

359
00:30:31,430 --> 00:30:34,100
don't want any distractions<font color="#E5E5E5"> if you're on</font>

360
00:30:32,900 --> 00:30:36,290
call<font color="#E5E5E5"> and you have to take something</font>

361
00:30:34,100 --> 00:30:39,110
<font color="#E5E5E5">please step out so as not to disturb</font><font color="#CCCCCC"> the</font>

362
00:30:36,290 --> 00:30:42,170
<font color="#E5E5E5">rest of the talk</font><font color="#CCCCCC"> and at the end there</font>

363
00:30:39,110 --> 00:30:43,790
will be a Q&A session<font color="#CCCCCC"> so I'll give</font>

364
00:30:42,170 --> 00:30:45,980
<font color="#CCCCCC">another brief reminder but if you can</font>

365
00:30:43,790 --> 00:30:48,110
<font color="#E5E5E5">raise your hand really high so I can go</font>

366
00:30:45,980 --> 00:30:49,700
around<font color="#E5E5E5"> and give the mic so</font><font color="#CCCCCC"> that you can</font>

367
00:30:48,110 --> 00:30:53,449
ask<font color="#E5E5E5"> your question everyone can hear it</font>

368
00:30:49,700 --> 00:30:54,880
and with that<font color="#E5E5E5"> Kara's will take over</font>

369
00:30:53,450 --> 00:30:58,580
thank<font color="#E5E5E5"> you</font>

370
00:30:54,880 --> 00:31:01,940
so hi<font color="#E5E5E5"> everyone thank you for staying so</font>

371
00:30:58,580 --> 00:31:04,520
late<font color="#E5E5E5"> in this day some</font><font color="#CCCCCC"> of you may be</font>

372
00:31:01,940 --> 00:31:07,310
expecting<font color="#CCCCCC"> Mattie seaman to give this</font>

373
00:31:04,520 --> 00:31:09,230
talk it was kind of a last-minute change

374
00:31:07,310 --> 00:31:11,030
but it's the same talk<font color="#E5E5E5"> so you're in the</font>

375
00:31:09,230 --> 00:31:13,850
<font color="#E5E5E5">right room although it's a different</font>

376
00:31:11,030 --> 00:31:15,290
<font color="#CCCCCC">speaker</font><font color="#E5E5E5"> so today we're going to talk</font>

377
00:31:13,850 --> 00:31:21,139
about<font color="#E5E5E5"> serverless</font>

378
00:31:15,290 --> 00:31:22,970
<font color="#CCCCCC">summer</font><font color="#E5E5E5"> lessons infections I'm at the</font>

379
00:31:21,140 --> 00:31:27,470
head of<font color="#CCCCCC"> absolutely</font><font color="#E5E5E5"> search in check marks</font>

380
00:31:22,970 --> 00:31:29,900
<font color="#E5E5E5">I've been for the</font><font color="#CCCCCC"> last</font><font color="#E5E5E5"> four years these</font>

381
00:31:27,470 --> 00:31:31,120
<font color="#E5E5E5">are probably the best ways to contact me</font>

382
00:31:29,900 --> 00:31:33,680
if needed

383
00:31:31,120 --> 00:31:35,389
<font color="#CCCCCC">and if you have questions or anything</font>

384
00:31:33,680 --> 00:31:38,540
else that<font color="#CCCCCC"> you would</font><font color="#E5E5E5"> like I'll be happy</font>

385
00:31:35,390 --> 00:31:41,960
to<font color="#E5E5E5"> answer</font><font color="#CCCCCC"> also this is usually</font><font color="#E5E5E5"> the place</font>

386
00:31:38,540 --> 00:31:44,810
where people need to justify<font color="#E5E5E5"> what gives</font>

387
00:31:41,960 --> 00:31:47,990
them the right to stand here<font color="#E5E5E5"> and give</font>

388
00:31:44,810 --> 00:31:55,399
you the talk so my justification is that

389
00:31:47,990 --> 00:31:59,030
<font color="#CCCCCC">I see a</font><font color="#E5E5E5"> lot of elbows being developed in</font>

390
00:31:55,400 --> 00:32:02,590
the industry<font color="#E5E5E5"> by developers</font><font color="#CCCCCC"> and now when</font>

391
00:31:59,030 --> 00:32:04,790
<font color="#CCCCCC">serverless</font><font color="#E5E5E5"> is getting more and</font><font color="#CCCCCC"> more</font>

392
00:32:02,590 --> 00:32:10,459
let's say out there

393
00:32:04,790 --> 00:32:13,909
the mistakes<font color="#E5E5E5"> also we see them more often</font>

394
00:32:10,460 --> 00:32:15,970
than we used to<font color="#CCCCCC"> the problem is</font><font color="#E5E5E5"> that a</font>

395
00:32:13,910 --> 00:32:20,330
<font color="#E5E5E5">lot</font><font color="#CCCCCC"> of people think that serverless</font>

396
00:32:15,970 --> 00:32:23,720
<font color="#E5E5E5">gives them</font><font color="#CCCCCC"> let's say the right to</font><font color="#E5E5E5"> right</font>

397
00:32:20,330 --> 00:32:27,799
vulnerable code and it makes it immune

398
00:32:23,720 --> 00:32:31,610
to<font color="#E5E5E5"> two usual attacks so this is kind of</font>

399
00:32:27,799 --> 00:32:35,690
trying<font color="#CCCCCC"> to show</font><font color="#E5E5E5"> differently so let's</font>

400
00:32:31,610 --> 00:32:39,020
start<font color="#E5E5E5"> the agenda here is to give a quick</font>

401
00:32:35,690 --> 00:32:41,150
intro to serverless architecture<font color="#E5E5E5"> hoping</font>

402
00:32:39,020 --> 00:32:44,600
some of<font color="#E5E5E5"> you already know what it is and</font>

403
00:32:41,150 --> 00:32:51,200
we'll<font color="#E5E5E5"> talk specifically about Amazon's</font>

404
00:32:44,600 --> 00:32:54,469
AWS lambda<font color="#CCCCCC"> we'll discuss a few</font><font color="#E5E5E5"> demos</font>

405
00:32:51,200 --> 00:32:56,030
that<font color="#E5E5E5"> we made</font><font color="#CCCCCC"> pocs that actually managed</font>

406
00:32:54,470 --> 00:32:58,730
to<font color="#E5E5E5"> show that from a simple code</font>

407
00:32:56,030 --> 00:33:02,090
injection<font color="#CCCCCC"> we managed to create a viral</font>

408
00:32:58,730 --> 00:33:04,360
<font color="#E5E5E5">infection</font><font color="#CCCCCC"> we'll talk</font><font color="#E5E5E5"> more about the</font>

409
00:33:02,090 --> 00:33:07,280
security<font color="#E5E5E5"> aspects of the lambdas and</font>

410
00:33:04,360 --> 00:33:10,760
hopefully get to<font color="#E5E5E5"> the key takeaways in</font>

411
00:33:07,280 --> 00:33:15,889
the end so<font color="#CCCCCC"> let's start with some legal</font>

412
00:33:10,760 --> 00:33:19,070
stuff<font color="#CCCCCC"> I understand that in the last</font>

413
00:33:15,890 --> 00:33:23,770
couple<font color="#CCCCCC"> of months</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> year</font><font color="#E5E5E5"> it is illegal</font>

414
00:33:19,070 --> 00:33:26,149
<font color="#E5E5E5">to talk about cloud and about service</font>

415
00:33:23,770 --> 00:33:29,600
technologies<font color="#CCCCCC"> without showing this</font>

416
00:33:26,150 --> 00:33:31,280
picture so here it is<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> very</font>

417
00:33:29,600 --> 00:33:34,580
important<font color="#E5E5E5"> that everyone acknowledged</font>

418
00:33:31,280 --> 00:33:38,090
that they saw it<font color="#E5E5E5"> now we can put it</font>

419
00:33:34,580 --> 00:33:40,790
behind<font color="#E5E5E5"> us</font><font color="#CCCCCC"> and continue</font><font color="#E5E5E5"> so what is this</font>

420
00:33:38,090 --> 00:33:47,090
<font color="#CCCCCC">serverless thing</font><font color="#E5E5E5"> let's talk in terms of</font>

421
00:33:40,790 --> 00:33:48,760
<font color="#E5E5E5">evolution</font><font color="#CCCCCC"> not that long ago this</font><font color="#E5E5E5"> is at</font>

422
00:33:47,090 --> 00:33:51,678
<font color="#CCCCCC">least all I'm telling myself</font>

423
00:33:48,760 --> 00:33:54,140
<font color="#CCCCCC">we had hardware as a unit if we wanted</font>

424
00:33:51,679 --> 00:33:57,169
to<font color="#E5E5E5"> scale up we had to bring more</font>

425
00:33:54,140 --> 00:34:01,910
<font color="#CCCCCC">Hardware more servers put them in actual</font>

426
00:33:57,169 --> 00:34:05,299
<font color="#E5E5E5">rooms we call them data centers</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> was</font>

427
00:34:01,910 --> 00:34:07,450
back then<font color="#E5E5E5"> in the past and we had to to</font>

428
00:34:05,299 --> 00:34:12,530
make<font color="#CCCCCC"> sure everything is</font><font color="#E5E5E5"> taken</font><font color="#CCCCCC"> care of</font>

429
00:34:07,450 --> 00:34:16,918
<font color="#E5E5E5">hosting environment etc after that came</font>

430
00:34:12,530 --> 00:34:19,950
the infrastructure<font color="#E5E5E5"> as a service when</font>

431
00:34:16,918 --> 00:34:22,980
we didn't<font color="#CCCCCC"> really had to buy hardware</font>

432
00:34:19,949 --> 00:34:26,370
anymore<font color="#CCCCCC"> a good example is Amazon AWS for</font>

433
00:34:22,980 --> 00:34:28,679
<font color="#E5E5E5">example the operating system was the</font>

434
00:34:26,370 --> 00:34:33,929
unit of scale if I wanted something<font color="#CCCCCC"> just</font>

435
00:34:28,679 --> 00:34:34,639
bring<font color="#CCCCCC"> another OS so it obstructed the</font>

436
00:34:33,929 --> 00:34:37,889
hardware

437
00:34:34,639 --> 00:34:40,529
the<font color="#E5E5E5"> next phase in the evolution was</font><font color="#CCCCCC"> the</font>

438
00:34:37,889 --> 00:34:43,020
<font color="#E5E5E5">platform as a service</font><font color="#CCCCCC"> where</font><font color="#E5E5E5"> the</font>

439
00:34:40,530 --> 00:34:46,290
<font color="#E5E5E5">application was</font><font color="#CCCCCC"> the unit of scale if you</font>

440
00:34:43,020 --> 00:34:48,389
<font color="#CCCCCC">want an</font><font color="#E5E5E5"> example</font><font color="#CCCCCC"> Salesforce have Hiroko I</font>

441
00:34:46,290 --> 00:34:52,620
don't know if<font color="#E5E5E5"> people</font><font color="#CCCCCC"> know it but it's a</font>

442
00:34:48,389 --> 00:34:54,779
<font color="#E5E5E5">very good</font><font color="#CCCCCC"> example of that</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> you don't</font>

443
00:34:52,620 --> 00:34:56,009
need<font color="#E5E5E5"> to know what the OS is you don't</font>

444
00:34:54,780 --> 00:34:59,310
<font color="#E5E5E5">even care</font><font color="#CCCCCC"> you just</font><font color="#E5E5E5"> deploy your</font>

445
00:34:56,010 --> 00:35:01,410
application<font color="#E5E5E5"> and you run and now it's the</font>

446
00:34:59,310 --> 00:35:04,140
<font color="#E5E5E5">edge of server list server list means</font>

447
00:35:01,410 --> 00:35:08,190
that we're doing<font color="#E5E5E5"> function as a service</font>

448
00:35:04,140 --> 00:35:12,509
the function is the unit<font color="#CCCCCC"> you don't care</font>

449
00:35:08,190 --> 00:35:16,410
at all about the of course<font color="#E5E5E5"> the hardware</font>

450
00:35:12,510 --> 00:35:18,630
the OS you sometimes don't<font color="#E5E5E5"> even care</font>

451
00:35:16,410 --> 00:35:22,830
<font color="#CCCCCC">about the language it runs on</font><font color="#E5E5E5"> so it's</font>

452
00:35:18,630 --> 00:35:23,670
all about<font color="#CCCCCC"> the functions and</font><font color="#E5E5E5"> a nicer way</font>

453
00:35:22,830 --> 00:35:26,580
<font color="#CCCCCC">to show it</font>

454
00:35:23,670 --> 00:35:29,340
<font color="#E5E5E5">Oh a different direction</font><font color="#CCCCCC"> and he's</font>

455
00:35:26,580 --> 00:35:32,759
talking<font color="#E5E5E5"> about the time</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> timelines so</font>

456
00:35:29,340 --> 00:35:35,670
while we had data<font color="#E5E5E5"> centers it took months</font>

457
00:35:32,760 --> 00:35:39,600
to deploy new<font color="#E5E5E5"> servers and the</font>

458
00:35:35,670 --> 00:35:41,030
application lives lived years on them it

459
00:35:39,600 --> 00:35:45,180
slowly

460
00:35:41,030 --> 00:35:48,030
minimized<font color="#CCCCCC"> during the virtualized</font><font color="#E5E5E5"> and</font>

461
00:35:45,180 --> 00:35:51,600
cloud<font color="#E5E5E5"> revolution and then the container</font>

462
00:35:48,030 --> 00:35:53,030
deployment<font color="#E5E5E5"> it got down to to deployment</font>

463
00:35:51,600 --> 00:35:56,009
by the second

464
00:35:53,030 --> 00:35:58,080
sometimes application ran for<font color="#E5E5E5"> a couple</font>

465
00:35:56,010 --> 00:36:00,810
<font color="#E5E5E5">of seconds sometimes hours but not</font>

466
00:35:58,080 --> 00:36:04,620
needed<font color="#CCCCCC"> more than that and now in the</font>

467
00:36:00,810 --> 00:36:06,330
<font color="#CCCCCC">last stage of the evolution with the</font>

468
00:36:04,620 --> 00:36:09,839
server<font color="#CCCCCC"> less we just deploy in</font>

469
00:36:06,330 --> 00:36:12,810
milliseconds we<font color="#E5E5E5"> have not applications</font>

470
00:36:09,840 --> 00:36:14,790
but actual functions that<font color="#E5E5E5"> live for</font>

471
00:36:12,810 --> 00:36:17,120
between milliseconds and seconds and

472
00:36:14,790 --> 00:36:21,570
this<font color="#CCCCCC"> is all we need</font>

473
00:36:17,120 --> 00:36:23,790
the<font color="#E5E5E5"> magic looks like this all you need</font>

474
00:36:21,570 --> 00:36:26,430
to do is to<font color="#E5E5E5"> develop a function you don't</font>

475
00:36:23,790 --> 00:36:28,890
care<font color="#CCCCCC"> about anything else you push</font><font color="#E5E5E5"> it or</font>

476
00:36:26,430 --> 00:36:31,919
deploy it to the cloud

477
00:36:28,890 --> 00:36:33,779
waiting<font color="#CCCCCC"> for a trigger of some</font><font color="#E5E5E5"> sort</font><font color="#CCCCCC"> we</font>

478
00:36:31,920 --> 00:36:36,660
will talk<font color="#E5E5E5"> about these triggers in a</font>

479
00:36:33,779 --> 00:36:38,069
second when the trigger comes the

480
00:36:36,660 --> 00:36:41,009
function is doing what it's supposed<font color="#E5E5E5"> to</font>

481
00:36:38,069 --> 00:36:43,410
do and then it vanishes<font color="#E5E5E5"> it cleans it</font>

482
00:36:41,009 --> 00:36:47,970
dies<font color="#E5E5E5"> and that's it</font>

483
00:36:43,410 --> 00:36:52,049
<font color="#E5E5E5">no persistency</font><font color="#CCCCCC"> nothing stays after</font><font color="#E5E5E5"> that</font>

484
00:36:47,970 --> 00:36:53,609
<font color="#E5E5E5">so the benefits other than being able to</font>

485
00:36:52,049 --> 00:36:56,549
say<font color="#E5E5E5"> that you're using server list which</font>

486
00:36:53,609 --> 00:36:58,650
is a great buzz word<font color="#CCCCCC"> you can say your</font>

487
00:36:56,549 --> 00:37:02,190
scalable that's also a buzz<font color="#E5E5E5"> word so you</font>

488
00:36:58,650 --> 00:37:04,559
have to but it's<font color="#E5E5E5"> really is scalable</font><font color="#CCCCCC"> I</font>

489
00:37:02,190 --> 00:37:06,900
mean you have your functions on the

490
00:37:04,559 --> 00:37:09,089
cloud and then from<font color="#CCCCCC"> that second you</font>

491
00:37:06,900 --> 00:37:12,059
don't<font color="#E5E5E5"> even care if</font><font color="#CCCCCC"> you need to run and</font>

492
00:37:09,089 --> 00:37:14,700
<font color="#CCCCCC">append trigger the function let's</font><font color="#E5E5E5"> say</font>

493
00:37:12,059 --> 00:37:16,650
once a day or thousands of<font color="#CCCCCC"> times a</font>

494
00:37:14,700 --> 00:37:20,189
second it's<font color="#E5E5E5"> the same it's transparent</font>

495
00:37:16,650 --> 00:37:23,519
<font color="#E5E5E5">for you you just</font><font color="#CCCCCC"> run it</font><font color="#E5E5E5"> the scalability</font>

496
00:37:20,190 --> 00:37:26,160
is obviously a very<font color="#CCCCCC"> good</font><font color="#E5E5E5"> plus</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> that no</font>

497
00:37:23,519 --> 00:37:29,328
ops<font color="#E5E5E5"> you don't care anymore</font><font color="#CCCCCC"> as we said</font>

498
00:37:26,160 --> 00:37:32,749
<font color="#E5E5E5">before how do</font><font color="#CCCCCC"> well</font><font color="#E5E5E5"> memory hard drives</font>

499
00:37:29,329 --> 00:37:35,609
<font color="#E5E5E5">patches updates all these operations</font>

500
00:37:32,749 --> 00:37:39,749
<font color="#CCCCCC">this really lowers or the headaches of</font>

501
00:37:35,609 --> 00:37:41,640
the operations<font color="#E5E5E5"> and low cost</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't</font>

502
00:37:39,749 --> 00:37:43,709
really have<font color="#CCCCCC"> the numbers to back that up</font>

503
00:37:41,640 --> 00:37:46,470
but I hear it<font color="#E5E5E5"> from all around the</font>

504
00:37:43,710 --> 00:37:49,109
<font color="#E5E5E5">industry</font><font color="#CCCCCC"> people are</font><font color="#E5E5E5"> saying that the</font>

505
00:37:46,470 --> 00:37:51,269
model of paying for only<font color="#E5E5E5"> what you're</font>

506
00:37:49,109 --> 00:37:55,769
using and being able to throttle your

507
00:37:51,269 --> 00:37:59,249
<font color="#E5E5E5">use</font><font color="#CCCCCC"> for down times</font><font color="#E5E5E5"> instead</font><font color="#CCCCCC"> of really</font>

508
00:37:55,769 --> 00:38:02,488
busy times they really<font color="#CCCCCC"> manage to lower</font>

509
00:37:59,249 --> 00:38:05,999
<font color="#CCCCCC">the costs</font><font color="#E5E5E5"> some of them significantly so</font>

510
00:38:02,489 --> 00:38:08,460
this is definitely<font color="#CCCCCC"> a benefit why why</font>

511
00:38:05,999 --> 00:38:10,730
then people don't<font color="#E5E5E5"> all of them why not</font>

512
00:38:08,460 --> 00:38:15,299
all<font color="#E5E5E5"> companies move to server less</font>

513
00:38:10,730 --> 00:38:18,839
obviously there are downsides<font color="#CCCCCC"> one of the</font>

514
00:38:15,299 --> 00:38:20,670
big downsides is the it's a new<font color="#E5E5E5"> paradigm</font>

515
00:38:18,839 --> 00:38:25,009
it starts from developers that need to

516
00:38:20,670 --> 00:38:28,230
actually<font color="#E5E5E5"> learn how to code differently</font>

517
00:38:25,009 --> 00:38:30,900
it goes through the designers and

518
00:38:28,230 --> 00:38:37,499
architects<font color="#E5E5E5"> that</font><font color="#CCCCCC"> need to</font><font color="#E5E5E5"> actually think</font>

519
00:38:30,900 --> 00:38:39,930
<font color="#CCCCCC">about new ways new structures of using</font>

520
00:38:37,499 --> 00:38:42,589
their code and organizations that

521
00:38:39,930 --> 00:38:50,460
sometimes are a<font color="#E5E5E5"> bit</font>

522
00:38:42,589 --> 00:38:57,089
let's say have problems<font color="#E5E5E5"> adopting new new</font>

523
00:38:50,460 --> 00:39:00,359
ways<font color="#CCCCCC"> also it</font><font color="#E5E5E5"> is a bit slower instead of</font>

524
00:38:57,089 --> 00:39:04,710
running<font color="#E5E5E5"> something local as we know you</font>

525
00:39:00,359 --> 00:39:07,680
will<font color="#E5E5E5"> need to deploy copy run it on a on</font>

526
00:39:04,710 --> 00:39:10,859
a container<font color="#E5E5E5"> somewhere what the clouds</font>

527
00:39:07,680 --> 00:39:14,250
<font color="#CCCCCC">usually do is if there is a</font><font color="#E5E5E5"> function</font>

528
00:39:10,859 --> 00:39:16,920
that is<font color="#CCCCCC"> used constantly it is</font><font color="#E5E5E5"> being</font>

529
00:39:14,250 --> 00:39:21,570
<font color="#E5E5E5">cached but still there always is some</font>

530
00:39:16,920 --> 00:39:23,910
sort of an overhead for this there is

531
00:39:21,570 --> 00:39:26,070
problem monitoring<font color="#E5E5E5"> when you have</font>

532
00:39:23,910 --> 00:39:29,160
everything<font color="#CCCCCC"> running on one server</font><font color="#E5E5E5"> it's</font>

533
00:39:26,070 --> 00:39:31,020
really easy to<font color="#E5E5E5"> monitor everything but</font>

534
00:39:29,160 --> 00:39:33,618
now when you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> a function</font><font color="#CCCCCC"> as a</font>

535
00:39:31,020 --> 00:39:37,349
service<font color="#E5E5E5"> you don't</font><font color="#CCCCCC"> even know what it runs</font>

536
00:39:33,619 --> 00:39:38,900
<font color="#E5E5E5">I'm not even talking about servers you</font>

537
00:39:37,349 --> 00:39:42,420
have<font color="#E5E5E5"> absolutely no idea</font>

538
00:39:38,900 --> 00:39:46,339
companies<font color="#CCCCCC"> are trying</font><font color="#E5E5E5"> to start thinking</font>

539
00:39:42,420 --> 00:39:46,339
about how to cope with<font color="#CCCCCC"> it</font>

540
00:39:46,369 --> 00:39:52,589
<font color="#E5E5E5">but it's supposed</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> a big downsize</font>

541
00:39:49,500 --> 00:39:55,560
especially for management and the last

542
00:39:52,589 --> 00:39:58,380
thing<font color="#CCCCCC"> the people say that makes them not</font>

543
00:39:55,560 --> 00:40:01,950
<font color="#CCCCCC">grow serverless</font><font color="#E5E5E5"> is the platform</font>

544
00:39:58,380 --> 00:40:05,010
dependent<font color="#E5E5E5"> there is no unity so if you</font>

545
00:40:01,950 --> 00:40:07,379
actually start deploying on Amazon

546
00:40:05,010 --> 00:40:09,990
<font color="#E5E5E5">you'll have really hard time moving to</font>

547
00:40:07,380 --> 00:40:14,040
other platforms<font color="#E5E5E5"> by Google or Microsoft</font>

548
00:40:09,990 --> 00:40:17,490
or anything<font color="#E5E5E5"> else so</font><font color="#CCCCCC"> goofy man</font><font color="#E5E5E5"> if we</font>

549
00:40:14,040 --> 00:40:21,109
<font color="#CCCCCC">mentioned the</font><font color="#E5E5E5"> companies probably most of</font>

550
00:40:17,490 --> 00:40:23,669
you<font color="#E5E5E5"> know all the commercial solutions</font>

551
00:40:21,109 --> 00:40:28,619
there<font color="#CCCCCC"> is the</font><font color="#E5E5E5"> the Google cloud platform</font>

552
00:40:23,670 --> 00:40:30,750
<font color="#CCCCCC">in</font><font color="#E5E5E5"> Amazon AWS lambda Microsoft</font><font color="#CCCCCC"> where</font>

553
00:40:28,619 --> 00:40:33,000
<font color="#E5E5E5">they have their own and they also IBM</font>

554
00:40:30,750 --> 00:40:35,970
<font color="#E5E5E5">there are also a bunch of</font><font color="#CCCCCC"> open-source</font>

555
00:40:33,000 --> 00:40:42,270
<font color="#CCCCCC">solutions</font><font color="#E5E5E5"> everyone has their own pros</font>

556
00:40:35,970 --> 00:40:44,399
and cons but<font color="#CCCCCC"> this technology of function</font>

557
00:40:42,270 --> 00:40:47,730
<font color="#CCCCCC">as a service is</font><font color="#E5E5E5"> probably here to stay</font>

558
00:40:44,400 --> 00:40:50,460
for a while<font color="#CCCCCC"> because a lot of</font><font color="#E5E5E5"> companies</font>

559
00:40:47,730 --> 00:40:52,490
<font color="#CCCCCC">really put a lot of effort to make it</font>

560
00:40:50,460 --> 00:40:55,850
work seamlessly

561
00:40:52,490 --> 00:40:55,850
[Music]

562
00:40:59,230 --> 00:41:10,610
<font color="#E5E5E5">okay so we wanted to</font><font color="#CCCCCC"> start and do some</font>

563
00:41:06,010 --> 00:41:15,740
hacking<font color="#E5E5E5"> and check how safe are these</font>

564
00:41:10,610 --> 00:41:20,120
platforms we made the small<font color="#E5E5E5"> comparison</font>

565
00:41:15,740 --> 00:41:22,700
and decided to<font color="#E5E5E5"> go with AWS lambda it</font>

566
00:41:20,120 --> 00:41:25,430
seems the most common and mature<font color="#E5E5E5"> they</font>

567
00:41:22,700 --> 00:41:27,950
had an interesting<font color="#E5E5E5"> wide language</font>

568
00:41:25,430 --> 00:41:30,589
coverage and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> where we put most</font>

569
00:41:27,950 --> 00:41:35,750
of our effort<font color="#E5E5E5"> in the demo so let's</font>

570
00:41:30,590 --> 00:41:38,060
<font color="#E5E5E5">discuss</font><font color="#CCCCCC"> that in a nutshell so the AWS</font>

571
00:41:35,750 --> 00:41:42,080
lambda functions<font color="#E5E5E5"> service it was</font>

572
00:41:38,060 --> 00:41:45,920
introduced in 2014<font color="#E5E5E5"> they support a lot</font><font color="#CCCCCC"> of</font>

573
00:41:42,080 --> 00:41:47,420
languages<font color="#E5E5E5"> nodejs Python Java</font><font color="#CCCCCC"> we got very</font>

574
00:41:45,920 --> 00:41:49,690
excited because they<font color="#E5E5E5"> added go in the</font>

575
00:41:47,420 --> 00:41:53,030
<font color="#E5E5E5">beginning of the year which is nice</font>

576
00:41:49,690 --> 00:41:58,250
<font color="#CCCCCC">dotnet</font><font color="#E5E5E5"> Co everything runs on Linux</font>

577
00:41:53,030 --> 00:42:02,510
containers and<font color="#CCCCCC"> everything is fun</font><font color="#E5E5E5"> so if</font>

578
00:41:58,250 --> 00:42:05,150
you want to<font color="#E5E5E5"> trigger a function on the</font>

579
00:42:02,510 --> 00:42:09,230
AWS lambda service there<font color="#E5E5E5"> are two ways to</font>

580
00:42:05,150 --> 00:42:10,820
<font color="#E5E5E5">do that one way is the</font><font color="#CCCCCC"> explicit one just</font>

581
00:42:09,230 --> 00:42:14,660
to use the REST API to call a lambda

582
00:42:10,820 --> 00:42:18,890
function<font color="#CCCCCC"> and the</font><font color="#E5E5E5"> other one is use any</font>

583
00:42:14,660 --> 00:42:22,279
other trigger<font color="#E5E5E5"> from the plethora of what</font>

584
00:42:18,890 --> 00:42:26,480
Amazon gives us we can see all the

585
00:42:22,280 --> 00:42:29,510
<font color="#CCCCCC">services here but you can use it as a</font>

586
00:42:26,480 --> 00:42:34,390
trigger<font color="#CCCCCC"> that</font><font color="#E5E5E5"> SP update or pushing an IOT</font>

587
00:42:29,510 --> 00:42:35,620
button<font color="#E5E5E5"> CLI tasks</font><font color="#CCCCCC"> a lot of people used</font>

588
00:42:34,390 --> 00:42:40,100
[Music]

589
00:42:35,620 --> 00:42:41,480
the code pipeline for DevOps<font color="#CCCCCC"> so it's</font>

590
00:42:40,100 --> 00:42:46,069
really it's really<font color="#E5E5E5"> nice</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have all</font>

591
00:42:41,480 --> 00:42:51,400
<font color="#E5E5E5">these triggers</font><font color="#CCCCCC"> wired</font><font color="#E5E5E5"> into the into the</font>

592
00:42:46,070 --> 00:42:57,640
functions the common uses<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we see</font>

593
00:42:51,400 --> 00:43:00,440
for the for the<font color="#CCCCCC"> service architecture</font>

594
00:42:57,640 --> 00:43:03,500
<font color="#E5E5E5">mainly mobile functionalities back-end</font>

595
00:43:00,440 --> 00:43:04,380
<font color="#E5E5E5">also IOT backend we see a lot of boats</font>

596
00:43:03,500 --> 00:43:07,190
and<font color="#E5E5E5"> chat BOTS</font>

597
00:43:04,380 --> 00:43:10,220
using that which makes a<font color="#E5E5E5"> lot of sense</font>

598
00:43:07,190 --> 00:43:13,349
<font color="#CCCCCC">especially in the scalability part</font>

599
00:43:10,220 --> 00:43:18,589
<font color="#CCCCCC">scheduled tasks everything</font><font color="#E5E5E5"> that is high</font>

600
00:43:13,349 --> 00:43:21,029
CPU utilization<font color="#CCCCCC"> on-demand final imaging</font>

601
00:43:18,589 --> 00:43:23,819
processing everything<font color="#E5E5E5"> that is</font>

602
00:43:21,029 --> 00:43:25,589
<font color="#E5E5E5">distributed computing fuzzers machine</font>

603
00:43:23,819 --> 00:43:28,979
learning<font color="#E5E5E5"> if you need to crack a password</font>

604
00:43:25,589 --> 00:43:33,690
<font color="#CCCCCC">this is probably the right way</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> Alexa</font>

605
00:43:28,979 --> 00:43:36,749
skills<font color="#E5E5E5"> did use this as back-end so</font>

606
00:43:33,690 --> 00:43:37,609
<font color="#CCCCCC">service is great</font><font color="#E5E5E5"> right what else could</font>

607
00:43:36,749 --> 00:43:43,890
you ask for

608
00:43:37,609 --> 00:43:47,308
so<font color="#CCCCCC"> how about</font><font color="#E5E5E5"> security for example as I</font>

609
00:43:43,890 --> 00:43:48,960
told you a<font color="#E5E5E5"> lot of developers and we see</font>

610
00:43:47,309 --> 00:43:51,869
it now also in<font color="#CCCCCC"> people who</font><font color="#E5E5E5"> are doing</font>

611
00:43:48,960 --> 00:43:53,339
auditing we show them<font color="#CCCCCC"> the problems in</font>

612
00:43:51,869 --> 00:43:56,099
the code and they say this<font color="#E5E5E5"> is not</font><font color="#CCCCCC"> a</font>

613
00:43:53,339 --> 00:43:57,920
problem<font color="#E5E5E5"> because</font><font color="#CCCCCC"> this is</font><font color="#E5E5E5"> service</font><font color="#CCCCCC"> this is</font>

614
00:43:56,099 --> 00:44:01,109
a function that<font color="#E5E5E5"> goes to the cloud and</font>

615
00:43:57,920 --> 00:44:05,640
when we ask why why is it<font color="#E5E5E5"> safe this is</font>

616
00:44:01,109 --> 00:44:08,519
the explanations we get and it's true in

617
00:44:05,640 --> 00:44:11,700
a way<font color="#E5E5E5"> so the lambda security</font><font color="#CCCCCC"> advantage</font>

618
00:44:08,519 --> 00:44:13,979
the advantages<font color="#CCCCCC"> are mainly that</font><font color="#E5E5E5"> it is</font>

619
00:44:11,700 --> 00:44:18,299
running<font color="#E5E5E5"> in its own environment</font><font color="#CCCCCC"> okay when</font>

620
00:44:13,979 --> 00:44:20,160
running in the environment<font color="#E5E5E5"> you have the</font>

621
00:44:18,299 --> 00:44:24,509
potential<font color="#E5E5E5"> damage is very limited what we</font>

622
00:44:20,160 --> 00:44:27,210
<font color="#CCCCCC">like to call sometimes sandbox so here</font>

623
00:44:24,509 --> 00:44:30,420
in a way as well it is sandbox

624
00:44:27,210 --> 00:44:33,509
the second thing is that<font color="#E5E5E5"> the environment</font>

625
00:44:30,420 --> 00:44:35,930
<font color="#CCCCCC">is disposed after run this means that</font>

626
00:44:33,509 --> 00:44:39,180
there is no stored<font color="#E5E5E5"> no persistent damage</font>

627
00:44:35,930 --> 00:44:43,919
<font color="#E5E5E5">even</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> there is some</font><font color="#CCCCCC"> sort</font><font color="#E5E5E5"> of micro</font>

628
00:44:39,180 --> 00:44:49,049
damage it will be vanished<font color="#E5E5E5"> after 60 100</font>

629
00:44:43,920 --> 00:44:51,319
200<font color="#CCCCCC"> milliseconds a lot</font><font color="#E5E5E5"> of people think</font>

630
00:44:49,049 --> 00:44:58,430
that combining these two together<font color="#CCCCCC"> make</font>

631
00:44:51,319 --> 00:45:01,049
<font color="#CCCCCC">every vulnerability obsolete so</font>

632
00:44:58,430 --> 00:45:06,269
challenge accepted<font color="#E5E5E5"> we decided to check</font>

633
00:45:01,049 --> 00:45:07,920
this this way of using known

634
00:45:06,269 --> 00:45:10,738
vulnerabilities just because it's

635
00:45:07,920 --> 00:45:14,759
serverless<font color="#E5E5E5"> and we decided</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> try and</font>

636
00:45:10,739 --> 00:45:16,470
exploit<font color="#E5E5E5"> a simple code injection in</font>

637
00:45:14,759 --> 00:45:18,930
lambda<font color="#E5E5E5"> function that everything</font>

638
00:45:16,470 --> 00:45:21,450
everyone thinks<font color="#CCCCCC"> that it will</font><font color="#E5E5E5"> it cannot</font>

639
00:45:18,930 --> 00:45:23,669
do anything serious<font color="#E5E5E5"> because</font><font color="#CCCCCC"> as I</font><font color="#E5E5E5"> said</font>

640
00:45:21,450 --> 00:45:27,299
<font color="#CCCCCC">it's sandboxed and it's it's</font><font color="#E5E5E5"> going to</font>

641
00:45:23,670 --> 00:45:29,520
<font color="#E5E5E5">live for 60 milliseconds we decided to</font>

642
00:45:27,300 --> 00:45:31,770
create<font color="#E5E5E5"> something and it will be called</font>

643
00:45:29,520 --> 00:45:35,550
persistent<font color="#CCCCCC"> we cannot really run</font>

644
00:45:31,770 --> 00:45:37,200
something outside of code but we wanted

645
00:45:35,550 --> 00:45:40,380
<font color="#CCCCCC">to change</font><font color="#E5E5E5"> the code to have the code</font>

646
00:45:37,200 --> 00:45:44,220
<font color="#E5E5E5">itself all the vulnerability</font><font color="#CCCCCC"> and make it</font>

647
00:45:40,380 --> 00:45:47,460
even<font color="#E5E5E5"> viral if possible the link below by</font>

648
00:45:44,220 --> 00:45:50,759
rich Jones<font color="#CCCCCC"> you should read it probably</font>

649
00:45:47,460 --> 00:45:58,140
<font color="#E5E5E5">he has a lot of other challenges</font><font color="#CCCCCC"> up for</font>

650
00:45:50,760 --> 00:45:59,880
grabs<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> service architecture</font><font color="#E5E5E5"> so let</font>

651
00:45:58,140 --> 00:46:03,810
<font color="#E5E5E5">me explain our playground before we</font>

652
00:45:59,880 --> 00:46:07,740
start the demos<font color="#E5E5E5"> it's really easy</font>

653
00:46:03,810 --> 00:46:12,660
<font color="#E5E5E5">it obviously runs on AWS lambda you have</font>

654
00:46:07,740 --> 00:46:15,319
a very small app with three functions

655
00:46:12,660 --> 00:46:18,799
<font color="#E5E5E5">one function is the main that is parsing</font>

656
00:46:15,320 --> 00:46:23,910
input from the URL<font color="#E5E5E5"> and calling either</font>

657
00:46:18,800 --> 00:46:26,599
<font color="#E5E5E5">cars or users if any of you is a UI</font>

658
00:46:23,910 --> 00:46:31,560
person I'm sorry

659
00:46:26,599 --> 00:46:39,960
so this is how it looks<font color="#E5E5E5"> like I said I'm</font>

660
00:46:31,560 --> 00:46:44,820
sorry you can<font color="#CCCCCC"> see that in the URL part</font>

661
00:46:39,960 --> 00:46:48,089
we call either cows or users this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font>

662
00:46:44,820 --> 00:46:52,290
part of the main function<font color="#E5E5E5"> this is the</font>

663
00:46:48,089 --> 00:46:55,650
part of the cars<font color="#E5E5E5"> all users</font><font color="#CCCCCC"> and the</font>

664
00:46:52,290 --> 00:46:59,279
number<font color="#E5E5E5"> here is just the</font><font color="#CCCCCC"> number of</font><font color="#E5E5E5"> cow or</font>

665
00:46:55,650 --> 00:47:02,490
user this<font color="#E5E5E5"> is the simple yet here's</font>

666
00:46:59,280 --> 00:47:05,430
example<font color="#CCCCCC"> fusers it is user number</font><font color="#E5E5E5"> one and</font>

667
00:47:02,490 --> 00:47:09,020
this<font color="#E5E5E5"> is how it looks</font><font color="#CCCCCC"> like so this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> the</font>

668
00:47:05,430 --> 00:47:09,020
playground<font color="#E5E5E5"> let's see how it works</font>

669
00:47:11,130 --> 00:47:30,550
<font color="#E5E5E5">okay changing user to user</font><font color="#CCCCCC"> to user to</font>

670
00:47:17,700 --> 00:47:34,509
changing cars okay so let's<font color="#E5E5E5"> discuss code</font>

671
00:47:30,550 --> 00:47:37,060
injection<font color="#CCCCCC"> what is code injection</font><font color="#E5E5E5"> usually</font>

672
00:47:34,510 --> 00:47:38,410
I'm taking definitions from<font color="#CCCCCC"> OS</font><font color="#E5E5E5"> because</font>

673
00:47:37,060 --> 00:47:42,370
<font color="#E5E5E5">they're doing really good jobs in</font>

674
00:47:38,410 --> 00:47:44,680
definitions<font color="#E5E5E5"> so</font><font color="#CCCCCC"> called injections</font><font color="#E5E5E5"> code</font>

675
00:47:42,370 --> 00:47:47,170
injection is an injection of<font color="#E5E5E5"> code</font><font color="#CCCCCC"> that</font>

676
00:47:44,680 --> 00:47:51,580
<font color="#E5E5E5">is then</font><font color="#CCCCCC"> interpreted or executed by the</font>

677
00:47:47,170 --> 00:47:54,340
application<font color="#E5E5E5"> as simple as</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and this</font>

678
00:47:51,580 --> 00:47:57,910
is what we wanted to<font color="#E5E5E5"> put in our code</font><font color="#CCCCCC"> so</font>

679
00:47:54,340 --> 00:48:01,080
we made sure<font color="#E5E5E5"> that</font><font color="#CCCCCC"> our code is vulnerable</font>

680
00:47:57,910 --> 00:48:05,170
to<font color="#E5E5E5"> code injection anyone can see it</font><font color="#CCCCCC"> No</font>

681
00:48:01,080 --> 00:48:08,610
so this is the code the code<font color="#CCCCCC"> of</font><font color="#E5E5E5"> main</font>

682
00:48:05,170 --> 00:48:11,830
just parses the URL takes the resource

683
00:48:08,610 --> 00:48:15,550
and<font color="#CCCCCC"> the number</font><font color="#E5E5E5"> concatenates it together</font>

684
00:48:11,830 --> 00:48:20,350
and then uses evil most of you should

685
00:48:15,550 --> 00:48:23,830
cringe right now and it makes perfect

686
00:48:20,350 --> 00:48:26,950
<font color="#E5E5E5">sense</font><font color="#CCCCCC"> most of you also know that this is</font>

687
00:48:23,830 --> 00:48:33,040
<font color="#E5E5E5">extremely common this is something we</font>

688
00:48:26,950 --> 00:48:35,160
<font color="#E5E5E5">see every day this is this is what</font>

689
00:48:33,040 --> 00:48:38,680
what's<font color="#CCCCCC"> happening outside</font><font color="#E5E5E5"> as we speak</font>

690
00:48:35,160 --> 00:48:42,430
<font color="#E5E5E5">evils everywhere so it's</font><font color="#CCCCCC"> okay you cringe</font>

691
00:48:38,680 --> 00:48:46,450
but this is this<font color="#E5E5E5"> is life so this is our</font>

692
00:48:42,430 --> 00:48:52,629
code<font color="#E5E5E5"> injection it's on purpose now let's</font>

693
00:48:46,450 --> 00:48:55,270
start playing so we have a very very

694
00:48:52,630 --> 00:48:57,070
<font color="#E5E5E5">short-lived instance when we run it</font>

695
00:48:55,270 --> 00:48:58,780
<font color="#E5E5E5">we wanted to see if there's anything</font>

696
00:48:57,070 --> 00:49:01,270
<font color="#CCCCCC">interesting we can get out of this</font>

697
00:48:58,780 --> 00:49:03,880
extremely<font color="#E5E5E5"> short and again extremely</font>

698
00:49:01,270 --> 00:49:07,600
short means<font color="#E5E5E5"> milliseconds extremely short</font>

699
00:49:03,880 --> 00:49:09,580
instance so we went<font color="#E5E5E5"> to documentation</font><font color="#CCCCCC"> and</font>

700
00:49:07,600 --> 00:49:12,430
<font color="#CCCCCC">documentation said yes there is</font>

701
00:49:09,580 --> 00:49:15,100
something interesting<font color="#E5E5E5"> there is a</font>

702
00:49:12,430 --> 00:49:18,850
parameter<font color="#E5E5E5"> called lambda</font><font color="#CCCCCC"> tasks root it</font>

703
00:49:15,100 --> 00:49:22,470
tells you in the container<font color="#CCCCCC"> what is the</font>

704
00:49:18,850 --> 00:49:24,069
<font color="#E5E5E5">path the exact path of where your</font>

705
00:49:22,470 --> 00:49:27,310
<font color="#CCCCCC">function seed</font>

706
00:49:24,070 --> 00:49:31,960
the actual<font color="#E5E5E5"> source and that's nice</font>

707
00:49:27,310 --> 00:49:33,970
I mean I guess it's useful so<font color="#E5E5E5"> we wanted</font>

708
00:49:31,960 --> 00:49:37,930
to<font color="#CCCCCC"> know what path is it and we use the</font>

709
00:49:33,970 --> 00:49:43,259
code injection<font color="#CCCCCC"> you can see on top is the</font>

710
00:49:37,930 --> 00:49:48,430
decoded<font color="#E5E5E5"> URL and in the bottom is the</font>

711
00:49:43,260 --> 00:49:52,270
encoded one so we used<font color="#E5E5E5"> it as a payload</font>

712
00:49:48,430 --> 00:49:56,020
<font color="#E5E5E5">to get the process and to get out of it</font>

713
00:49:52,270 --> 00:49:59,070
the lumber<font color="#CCCCCC"> lamda</font><font color="#E5E5E5"> task route so let's see</font>

714
00:49:56,020 --> 00:49:59,070
what we got

715
00:50:03,060 --> 00:50:09,990
okay so that was<font color="#CCCCCC"> a simple</font><font color="#E5E5E5"> we managed to</font>

716
00:50:07,410 --> 00:50:11,520
<font color="#E5E5E5">get the path actually</font><font color="#CCCCCC"> it wasn't</font><font color="#E5E5E5"> that</font>

717
00:50:09,990 --> 00:50:16,890
<font color="#E5E5E5">surprising because this is the default</font>

718
00:50:11,520 --> 00:50:19,410
<font color="#E5E5E5">path when you're deploying new new</font>

719
00:50:16,890 --> 00:50:23,150
functions<font color="#E5E5E5"> but still it's it's good to</font>

720
00:50:19,410 --> 00:50:26,029
validate<font color="#CCCCCC"> that</font><font color="#E5E5E5"> this actually works</font><font color="#CCCCCC"> so</font>

721
00:50:23,150 --> 00:50:28,500
<font color="#CCCCCC">this got us thinking</font><font color="#E5E5E5"> we can get the path</font>

722
00:50:26,030 --> 00:50:31,650
<font color="#E5E5E5">what if we want to get the actual code</font>

723
00:50:28,500 --> 00:50:34,590
the code may be interesting<font color="#E5E5E5"> we want to</font>

724
00:50:31,650 --> 00:50:40,200
get the<font color="#E5E5E5"> entire code of all the functions</font>

725
00:50:34,590 --> 00:50:42,690
that are<font color="#E5E5E5"> in this path</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is</font>

726
00:50:40,200 --> 00:50:49,980
actually<font color="#CCCCCC"> exfiltration</font><font color="#E5E5E5"> of the code</font>

727
00:50:42,690 --> 00:50:52,890
although as<font color="#E5E5E5"> I said</font><font color="#CCCCCC"> it's very short-lived</font>

728
00:50:49,980 --> 00:50:56,000
<font color="#CCCCCC">when it runs</font><font color="#E5E5E5"> also you get</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> exposed</font>

729
00:50:52,890 --> 00:50:59,069
<font color="#E5E5E5">only to one specific function usually</font>

730
00:50:56,000 --> 00:51:01,770
<font color="#E5E5E5">maybe we can use it to get all the code</font>

731
00:50:59,070 --> 00:51:04,620
<font color="#E5E5E5">out</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> this path so we have our</font>

732
00:51:01,770 --> 00:51:09,870
<font color="#E5E5E5">container we know that under</font><font color="#CCCCCC"> the path</font>

733
00:51:04,620 --> 00:51:12,509
<font color="#CCCCCC">without ask who have our</font><font color="#E5E5E5"> three three</font>

734
00:51:09,870 --> 00:51:17,009
functions<font color="#E5E5E5"> what if we could use our own</font>

735
00:51:12,510 --> 00:51:19,950
container or a hacker<font color="#E5E5E5"> container to</font>

736
00:51:17,010 --> 00:51:21,380
somehow copy it for future<font color="#CCCCCC"> reference</font>

737
00:51:19,950 --> 00:51:25,049
<font color="#CCCCCC">let's see</font>

738
00:51:21,380 --> 00:51:29,210
and actually it worked pretty<font color="#E5E5E5"> well so we</font>

739
00:51:25,050 --> 00:51:36,330
<font color="#E5E5E5">managed to tell the entire thing and</font>

740
00:51:29,210 --> 00:51:39,660
send<font color="#E5E5E5"> it</font><font color="#CCCCCC"> to our so this is the container</font>

741
00:51:36,330 --> 00:51:43,160
of<font color="#E5E5E5"> the hacker view so it's empty</font><font color="#CCCCCC"> we're</font>

742
00:51:39,660 --> 00:51:47,370
running<font color="#E5E5E5"> the payload at the moment</font>

743
00:51:43,160 --> 00:51:49,940
successfully now<font color="#CCCCCC"> refreshing the hacker</font>

744
00:51:47,370 --> 00:51:52,200
container<font color="#E5E5E5"> and here it</font><font color="#CCCCCC"> is enter</font>

745
00:51:49,940 --> 00:51:53,970
everything<font color="#E5E5E5"> just</font>

746
00:51:52,200 --> 00:51:57,770
[Music]

747
00:51:53,970 --> 00:52:01,649
hold the code you<font color="#E5E5E5"> can get the index and</font>

748
00:51:57,770 --> 00:52:09,780
this is the actual<font color="#E5E5E5"> source code that you</font>

749
00:52:01,650 --> 00:52:12,530
can get you can see<font color="#CCCCCC"> the the first yay</font>

750
00:52:09,780 --> 00:52:16,859
that<font color="#CCCCCC"> we managed to get out of it</font><font color="#E5E5E5"> because</font>

751
00:52:12,530 --> 00:52:19,079
it exposes the actual API key of the AWS

752
00:52:16,859 --> 00:52:25,529
<font color="#E5E5E5">lambda you can lower your cameras we</font>

753
00:52:19,079 --> 00:52:31,289
<font color="#E5E5E5">already changed it</font><font color="#CCCCCC"> I saw that good</font>

754
00:52:25,530 --> 00:52:36,359
thinking we already<font color="#E5E5E5"> changed it but yeah</font>

755
00:52:31,289 --> 00:52:40,200
that was kind<font color="#E5E5E5"> of too easy but that's</font>

756
00:52:36,359 --> 00:52:43,950
<font color="#E5E5E5">nice so you can do that what else can be</font>

757
00:52:40,200 --> 00:52:47,098
<font color="#CCCCCC">done</font><font color="#E5E5E5"> this was fun but it's not enough so</font>

758
00:52:43,950 --> 00:52:50,879
we went back<font color="#CCCCCC"> to documentation and we saw</font>

759
00:52:47,099 --> 00:52:54,030
that<font color="#CCCCCC"> AWS lamda really wants to</font><font color="#E5E5E5"> help you</font>

760
00:52:50,880 --> 00:52:57,869
so including the functions that<font color="#CCCCCC"> you</font>

761
00:52:54,030 --> 00:53:01,140
<font color="#E5E5E5">created and deployed you have the full</font>

762
00:52:57,869 --> 00:53:03,450
spectrum<font color="#E5E5E5"> of AWS SDK and AWS CLI</font>

763
00:53:01,140 --> 00:53:07,440
which is excellent<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> really</font>

764
00:53:03,450 --> 00:53:10,799
excellent<font color="#CCCCCC"> you have the</font><font color="#E5E5E5"> ability to list</font>

765
00:53:07,440 --> 00:53:13,109
functions and to deploy<font color="#CCCCCC"> new</font><font color="#E5E5E5"> ones to</font>

766
00:53:10,799 --> 00:53:16,200
<font color="#E5E5E5">update</font><font color="#CCCCCC"> existing and in everything can be</font>

767
00:53:13,109 --> 00:53:19,740
invoked<font color="#E5E5E5"> by code this is really</font><font color="#CCCCCC"> really</font>

768
00:53:16,200 --> 00:53:22,319
powerful<font color="#E5E5E5"> so this I'm sure I'm hearing</font>

769
00:53:19,740 --> 00:53:24,200
<font color="#E5E5E5">your voice in your head now saying I'm</font>

770
00:53:22,319 --> 00:53:28,950
sure it needs authorization

771
00:53:24,200 --> 00:53:30,868
authentication anything<font color="#CCCCCC"> Gatien no it</font>

772
00:53:28,950 --> 00:53:33,839
doesn't actually

773
00:53:30,869 --> 00:53:37,349
it kind of<font color="#E5E5E5"> needs authentication but</font>

774
00:53:33,839 --> 00:53:39,990
while you run your own function you

775
00:53:37,349 --> 00:53:44,160
<font color="#E5E5E5">already got it so running your own</font>

776
00:53:39,990 --> 00:53:48,720
<font color="#E5E5E5">function vulnerable function you can</font>

777
00:53:44,160 --> 00:53:53,640
basically run anything<font color="#E5E5E5"> you want so this</font>

778
00:53:48,720 --> 00:53:57,169
is fun so we decided to<font color="#E5E5E5"> change some</font>

779
00:53:53,640 --> 00:53:59,730
source code<font color="#E5E5E5"> after we got it let's</font><font color="#CCCCCC"> update</font>

780
00:53:57,170 --> 00:54:03,089
all the<font color="#E5E5E5"> lambda functions that we can</font>

781
00:53:59,730 --> 00:54:05,819
find in a specific<font color="#E5E5E5"> path so iterating</font>

782
00:54:03,089 --> 00:54:07,470
between<font color="#CCCCCC"> all the functions well in our</font>

783
00:54:05,819 --> 00:54:10,140
example we have only<font color="#E5E5E5"> only</font>

784
00:54:07,470 --> 00:54:12,810
<font color="#CCCCCC">we functions in real life it can be</font>

785
00:54:10,140 --> 00:54:14,660
thousands<font color="#E5E5E5"> it can be even functions of</font>

786
00:54:12,810 --> 00:54:17,400
<font color="#E5E5E5">other applications that are being used</font>

787
00:54:14,660 --> 00:54:21,118
<font color="#E5E5E5">so you can change a lot</font><font color="#CCCCCC"> of things in</font>

788
00:54:17,400 --> 00:54:26,150
this way so iterating and using update

789
00:54:21,119 --> 00:54:29,070
function code that is on our malicious

790
00:54:26,150 --> 00:54:36,440
container<font color="#CCCCCC"> just bring</font><font color="#E5E5E5"> it bringing it in</font>

791
00:54:29,070 --> 00:54:45,260
and updating code<font color="#CCCCCC"> let's see it</font><font color="#E5E5E5"> happen</font>

792
00:54:36,440 --> 00:54:49,380
so this is our clean<font color="#E5E5E5"> cow painting it</font>

793
00:54:45,260 --> 00:54:51,890
successfully refreshing and now<font color="#E5E5E5"> after</font>

794
00:54:49,380 --> 00:54:57,450
the<font color="#CCCCCC"> refreshing</font>

795
00:54:51,890 --> 00:54:59,359
both cars and<font color="#CCCCCC"> Ming have this code</font>

796
00:54:57,450 --> 00:55:07,020
<font color="#CCCCCC">although we only attacked cars</font>

797
00:54:59,359 --> 00:55:09,770
so obviously users is also<font color="#CCCCCC"> tainted at</font>

798
00:55:07,020 --> 00:55:13,619
the moment so what we<font color="#E5E5E5"> actually did here</font>

799
00:55:09,770 --> 00:55:17,130
<font color="#CCCCCC">you can see the code we can see</font><font color="#E5E5E5"> where</font>

800
00:55:13,619 --> 00:55:21,450
you saw<font color="#E5E5E5"> it in the demo and this is just</font>

801
00:55:17,130 --> 00:55:26,820
what we added just<font color="#E5E5E5"> the string</font><font color="#CCCCCC"> extremely</font>

802
00:55:21,450 --> 00:55:30,299
smart<font color="#E5E5E5"> hacked by string so this is pretty</font>

803
00:55:26,820 --> 00:55:34,410
<font color="#E5E5E5">great</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> we actually managed to get</font>

804
00:55:30,300 --> 00:55:37,200
persistent infection<font color="#E5E5E5"> although the</font>

805
00:55:34,410 --> 00:55:39,960
function<font color="#E5E5E5"> will run and then it will die</font>

806
00:55:37,200 --> 00:55:43,490
if I run the same<font color="#E5E5E5"> function later</font>

807
00:55:39,960 --> 00:55:46,710
<font color="#CCCCCC">tomorrow</font><font color="#E5E5E5"> in a month it will still</font><font color="#CCCCCC"> be</font>

808
00:55:43,490 --> 00:55:49,529
infected<font color="#E5E5E5"> but let's say it's</font><font color="#CCCCCC"> not enough</font>

809
00:55:46,710 --> 00:55:51,570
<font color="#CCCCCC">because it's only a one time infection</font>

810
00:55:49,530 --> 00:55:54,390
if someone is going<font color="#E5E5E5"> to clean the</font>

811
00:55:51,570 --> 00:55:58,970
function or update it<font color="#CCCCCC"> or something</font>

812
00:55:54,390 --> 00:55:58,970
<font color="#E5E5E5">it will stay clean so not good enough</font>

813
00:55:59,480 --> 00:56:04,980
<font color="#CCCCCC">here we can see</font><font color="#E5E5E5"> that we</font><font color="#CCCCCC"> added a reset</font>

814
00:56:02,130 --> 00:56:09,650
<font color="#CCCCCC">function</font><font color="#E5E5E5"> and the reset function cleans</font>

815
00:56:04,980 --> 00:56:09,650
cows<font color="#CCCCCC"> restored</font>

816
00:56:11,010 --> 00:56:21,700
and now we can see that<font color="#CCCCCC"> cows is clean</font>

817
00:56:15,130 --> 00:56:25,540
while<font color="#CCCCCC"> Maine is still tainted so we</font>

818
00:56:21,700 --> 00:56:27,848
<font color="#E5E5E5">decided to push push even</font><font color="#CCCCCC"> further the</font>

819
00:56:25,540 --> 00:56:33,220
persistency<font color="#E5E5E5"> and try to do some cross</font>

820
00:56:27,849 --> 00:56:35,500
contamination between<font color="#CCCCCC"> them so actually</font>

821
00:56:33,220 --> 00:56:38,740
this jump is kind of<font color="#E5E5E5"> logic and and</font>

822
00:56:35,500 --> 00:56:40,599
simple<font color="#CCCCCC"> it's in fact</font><font color="#E5E5E5"> in function makes</font>

823
00:56:38,740 --> 00:56:44,040
sure that all other<font color="#E5E5E5"> functions are still</font>

824
00:56:40,599 --> 00:56:46,960
infected<font color="#E5E5E5"> if it's not intact them again</font>

825
00:56:44,040 --> 00:56:48,849
<font color="#E5E5E5">this is</font><font color="#CCCCCC"> actually an actual viral</font>

826
00:56:46,960 --> 00:56:52,990
infection so<font color="#CCCCCC"> we create cross</font>

827
00:56:48,849 --> 00:56:57,160
<font color="#CCCCCC">contamination to make the idea simpler</font>

828
00:56:52,990 --> 00:57:00,310
<font color="#E5E5E5">if we</font><font color="#CCCCCC"> attack users and run it users</font>

829
00:56:57,160 --> 00:57:05,348
attack<font color="#CCCCCC"> mainland cards</font><font color="#E5E5E5"> if we clean</font><font color="#CCCCCC"> many</font>

830
00:57:00,310 --> 00:57:13,270
<font color="#E5E5E5">users cars stays infected and when it</font>

831
00:57:05,349 --> 00:57:15,570
runs<font color="#E5E5E5"> it will infect main users and the</font>

832
00:57:13,270 --> 00:57:15,570
demo

833
00:57:21,450 --> 00:57:30,450
so infected<font color="#CCCCCC"> users successfully now we</font>

834
00:57:26,880 --> 00:57:35,900
can see<font color="#E5E5E5"> that nothing happened to car and</font>

835
00:57:30,450 --> 00:57:35,899
<font color="#E5E5E5">mean</font><font color="#CCCCCC"> but now if we call users</font>

836
00:57:41,400 --> 00:57:45,150
<font color="#CCCCCC">Karl</font><font color="#E5E5E5"> is infected</font>

837
00:57:46,750 --> 00:57:49,770
difficult cars

838
00:57:50,850 --> 00:58:01,370
then we see that<font color="#E5E5E5"> now</font><font color="#CCCCCC"> both cars and</font>

839
00:57:54,140 --> 00:58:01,370
mainly infected<font color="#CCCCCC"> reseting only</font><font color="#E5E5E5"> main</font>

840
00:58:07,720 --> 00:58:10,709
and users

841
00:58:15,500 --> 00:58:21,320
and leaving cars infected is<font color="#E5E5E5"> only good</font>

842
00:58:17,810 --> 00:58:23,770
and<font color="#CCCCCC"> feels someone calls cars when cars</font>

843
00:58:21,320 --> 00:58:23,770
is<font color="#CCCCCC"> cold</font>

844
00:58:32,950 --> 00:58:37,379
we have again<font color="#CCCCCC"> cross-contamination</font>

845
00:58:39,880 --> 00:58:52,539
you can see so it was kind of great

846
00:58:49,809 --> 00:58:55,029
<font color="#CCCCCC">because we actually</font><font color="#E5E5E5"> managed to create</font>

847
00:58:52,539 --> 00:58:59,140
this persistent code contamination we

848
00:58:55,029 --> 00:59:03,490
wanted in an environment that<font color="#CCCCCC"> is by</font>

849
00:58:59,140 --> 00:59:06,490
definition<font color="#CCCCCC"> non persistent</font><font color="#E5E5E5"> and this was</font>

850
00:59:03,490 --> 00:59:10,930
<font color="#E5E5E5">really nice</font><font color="#CCCCCC"> actually did some more</font><font color="#E5E5E5"> plays</font>

851
00:59:06,490 --> 00:59:12,700
and managed<font color="#CCCCCC"> to do some</font><font color="#E5E5E5"> heavy-duty remote</font>

852
00:59:10,930 --> 00:59:15,149
code execution but obviously<font color="#E5E5E5"> you can</font>

853
00:59:12,700 --> 00:59:18,250
understand that<font color="#CCCCCC"> if this</font><font color="#E5E5E5"> was possible</font>

854
00:59:15,150 --> 00:59:19,630
<font color="#E5E5E5">probably</font><font color="#CCCCCC"> we can escalate it to</font><font color="#E5E5E5"> things</font>

855
00:59:18,250 --> 00:59:24,279
that<font color="#E5E5E5"> are much more interesting than cars</font>

856
00:59:19,630 --> 00:59:27,750
and users so a few more words about<font color="#CCCCCC"> AWS</font>

857
00:59:24,279 --> 00:59:31,690
<font color="#E5E5E5">lambda security I want to talk about two</font>

858
00:59:27,750 --> 00:59:34,089
important terms<font color="#CCCCCC"> in it there</font><font color="#E5E5E5"> is the</font>

859
00:59:31,690 --> 00:59:36,940
execution<font color="#E5E5E5"> roll and</font><font color="#CCCCCC"> V PC</font><font color="#E5E5E5"> execution roll</font>

860
00:59:34,089 --> 00:59:40,720
is actually what the function is allowed

861
00:59:36,940 --> 00:59:43,750
to<font color="#E5E5E5"> do while V PC virtual private cloud</font>

862
00:59:40,720 --> 00:59:48,910
it means which virtual private cloud<font color="#E5E5E5"> it</font>

863
00:59:43,750 --> 00:59:54,460
belongs to which<font color="#E5E5E5"> means who where can it</font>

864
00:59:48,910 --> 00:59:58,750
send<font color="#CCCCCC"> the information from from inside</font>

865
00:59:54,460 --> 01:00:03,640
this<font color="#CCCCCC"> V PC</font><font color="#E5E5E5"> so let's talk</font><font color="#CCCCCC"> about execution</font>

866
00:59:58,750 --> 01:00:07,240
roll first<font color="#E5E5E5"> we can look about we can look</font>

867
01:00:03,640 --> 01:00:10,210
at<font color="#CCCCCC"> a Claudia</font><font color="#E5E5E5"> Jas I actually did</font><font color="#CCCCCC"> not know</font>

868
01:00:07,240 --> 01:00:12,279
<font color="#E5E5E5">it well before but I had a chance to</font>

869
01:00:10,210 --> 01:00:15,670
<font color="#E5E5E5">play</font><font color="#CCCCCC"> with it it's really nice it helps</font>

870
01:00:12,279 --> 01:00:22,000
to deploy<font color="#E5E5E5"> nodejs projects to 2 lambda</font>

871
01:00:15,670 --> 01:00:24,819
<font color="#CCCCCC">pretty easily</font><font color="#E5E5E5"> and if you go to the</font>

872
01:00:22,000 --> 01:00:30,309
<font color="#CCCCCC">community</font><font color="#E5E5E5"> to the documentation you can</font>

873
01:00:24,819 --> 01:00:33,940
<font color="#E5E5E5">see that Claudia asks you for full</font>

874
01:00:30,309 --> 01:00:35,609
access you<font color="#E5E5E5"> can see the AWS lambda full</font>

875
01:00:33,940 --> 01:00:40,000
<font color="#CCCCCC">access is required for Claudia</font>

876
01:00:35,609 --> 01:00:43,180
<font color="#E5E5E5">deployment it happens all over the</font>

877
01:00:40,000 --> 01:00:49,740
<font color="#E5E5E5">industry in a lot of</font><font color="#CCCCCC"> places</font><font color="#E5E5E5"> including</font>

878
01:00:43,180 --> 01:00:49,740
Amazon own examples in<font color="#CCCCCC"> Gita</font>

879
01:00:49,960 --> 01:00:56,410
this is from Amazon AWS<font color="#CCCCCC"> Ovilus crud</font>

880
01:00:53,920 --> 01:00:59,530
sample this<font color="#E5E5E5"> is the boilerplate for many</font>

881
01:00:56,410 --> 01:01:01,839
many many<font color="#E5E5E5"> projects all these projects</font>

882
01:00:59,530 --> 01:01:04,870
use the same code<font color="#E5E5E5"> you can see that it's</font>

883
01:01:01,840 --> 01:01:07,870
actually a<font color="#E5E5E5"> prerequisite create I am role</font>

884
01:01:04,870 --> 01:01:12,160
called lambda<font color="#CCCCCC"> role and assign it</font><font color="#E5E5E5"> AWS</font>

885
01:01:07,870 --> 01:01:16,509
lambda full access<font color="#CCCCCC"> so by default</font><font color="#E5E5E5"> and by</font>

886
01:01:12,160 --> 01:01:21,490
recommendation<font color="#CCCCCC"> of Amazon please create</font>

887
01:01:16,510 --> 01:01:28,180
your function<font color="#E5E5E5"> as vulnerable as possible</font>

888
01:01:21,490 --> 01:01:32,740
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> let's talk</font><font color="#E5E5E5"> about the</font><font color="#CCCCCC"> VP's PvP</font>

889
01:01:28,180 --> 01:01:35,649
<font color="#E5E5E5">C's virtual private cloud by</font><font color="#CCCCCC"> default it</font>

890
01:01:32,740 --> 01:01:39,160
starts<font color="#E5E5E5"> with no</font><font color="#CCCCCC"> DPC at all the thing</font><font color="#E5E5E5"> is</font>

891
01:01:35,650 --> 01:01:40,990
that it<font color="#E5E5E5"> opens outbound traffic just to</font>

892
01:01:39,160 --> 01:01:44,259
remind you the first demo we had was

893
01:01:40,990 --> 01:01:47,979
exfiltrating the source code<font color="#E5E5E5"> this would</font>

894
01:01:44,260 --> 01:01:54,010
not be possible<font color="#E5E5E5"> if VPN was correctly so</font>

895
01:01:47,980 --> 01:01:59,560
the default is<font color="#CCCCCC"> no VPC we</font><font color="#E5E5E5"> talked to</font>

896
01:01:54,010 --> 01:02:02,260
<font color="#CCCCCC">amazon about it they said</font><font color="#E5E5E5"> it's fine we</font>

897
01:01:59,560 --> 01:02:07,330
<font color="#E5E5E5">show</font><font color="#CCCCCC"> them the demos</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> explained</font>

898
01:02:02,260 --> 01:02:09,010
everything they still it's fine the<font color="#E5E5E5"> only</font>

899
01:02:07,330 --> 01:02:12,400
<font color="#E5E5E5">thing that they thought they should</font>

900
01:02:09,010 --> 01:02:14,800
<font color="#E5E5E5">change is the example</font><font color="#CCCCCC"> in github</font><font color="#E5E5E5"> which</font>

901
01:02:12,400 --> 01:02:17,280
they didn't do yet<font color="#E5E5E5"> I'm actually checking</font>

902
01:02:14,800 --> 01:02:21,070
every now and then it's been months<font color="#CCCCCC"> now</font>

903
01:02:17,280 --> 01:02:26,080
since<font color="#E5E5E5"> we talked to them it did not</font>

904
01:02:21,070 --> 01:02:32,800
<font color="#E5E5E5">change it so this is Amazon let's talk</font>

905
01:02:26,080 --> 01:02:36,100
about<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> I'll walk you through</font><font color="#CCCCCC"> it</font>

906
01:02:32,800 --> 01:02:39,340
so comparing lambda to Google Cloud and

907
01:02:36,100 --> 01:02:41,710
<font color="#CCCCCC">- as you're talking about</font><font color="#E5E5E5"> access code</font>

908
01:02:39,340 --> 01:02:43,450
via code injection<font color="#CCCCCC"> it's the same with</font>

909
01:02:41,710 --> 01:02:46,860
<font color="#CCCCCC">all three of</font><font color="#E5E5E5"> them</font>

910
01:02:43,450 --> 01:02:49,720
downloading<font color="#CCCCCC"> close to a hacker server</font>

911
01:02:46,860 --> 01:02:52,780
AWS<font color="#E5E5E5"> a lambda we</font><font color="#CCCCCC"> manage</font><font color="#E5E5E5"> because there was</font>

912
01:02:49,720 --> 01:02:57,069
no<font color="#CCCCCC"> V PC in Google</font><font color="#E5E5E5"> there is some sort of</font>

913
01:02:52,780 --> 01:02:59,730
firewall block but it's just using ports

914
01:02:57,070 --> 01:03:02,010
<font color="#E5E5E5">it doesn't really care about IP which</font>

915
01:02:59,730 --> 01:03:03,450
a bit wheel but that's probably<font color="#E5E5E5"> a reason</font>

916
01:03:02,010 --> 01:03:10,710
<font color="#E5E5E5">for that</font>

917
01:03:03,450 --> 01:03:12,930
and Microsoft<font color="#CCCCCC"> again there is</font><font color="#E5E5E5"> the default</font>

918
01:03:10,710 --> 01:03:17,460
is is<font color="#E5E5E5"> really open but it can be blocked</font>

919
01:03:12,930 --> 01:03:20,069
by<font color="#CCCCCC"> network rules modify the function</font>

920
01:03:17,460 --> 01:03:25,250
code<font color="#E5E5E5"> so we saw that we managed</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> it</font>

921
01:03:20,070 --> 01:03:29,310
in AWS<font color="#E5E5E5"> lambda Google they</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> not so</font>

922
01:03:25,250 --> 01:03:35,210
keen to give you all the SDK<font color="#E5E5E5"> by default</font>

923
01:03:29,310 --> 01:03:41,450
so<font color="#E5E5E5"> no in Microsoft it's it's complicated</font>

924
01:03:35,210 --> 01:03:44,340
<font color="#CCCCCC">it depends on settings with very big</font>

925
01:03:41,450 --> 01:03:47,040
<font color="#CCCCCC">modification of code we talked about</font>

926
01:03:44,340 --> 01:03:49,890
permissions<font color="#E5E5E5"> so absolutely no problem</font>

927
01:03:47,040 --> 01:03:56,100
<font color="#E5E5E5">with AWS lambda not possible in Google</font>

928
01:03:49,890 --> 01:03:59,040
yet and again setting stuff in Microsoft

929
01:03:56,100 --> 01:04:02,000
<font color="#E5E5E5">and then our variable injection we</font>

930
01:03:59,040 --> 01:04:09,210
<font color="#E5E5E5">already managed to do it in AWS lambda</font>

931
01:04:02,000 --> 01:04:10,160
walking on the rest so maybe<font color="#E5E5E5"> soon I'll</font>

932
01:04:09,210 --> 01:04:13,980
keep you posted

933
01:04:10,160 --> 01:04:18,509
<font color="#E5E5E5">okay so approaching the end key</font>

934
01:04:13,980 --> 01:04:19,950
takeaways<font color="#E5E5E5"> and actions</font><font color="#CCCCCC"> yes it is</font><font color="#E5E5E5"> server</font>

935
01:04:18,510 --> 01:04:22,290
<font color="#E5E5E5">less but there are at least two servers</font>

936
01:04:19,950 --> 01:04:24,779
that<font color="#CCCCCC"> can be attacked in a</font><font color="#E5E5E5"> server less</font>

937
01:04:22,290 --> 01:04:25,320
architecture<font color="#E5E5E5"> one of them is hosting the</font>

938
01:04:24,780 --> 01:04:30,050
container

939
01:04:25,320 --> 01:04:31,800
<font color="#CCCCCC">the second is hosting the source code</font>

940
01:04:30,050 --> 01:04:35,310
<font color="#CCCCCC">containers should not contain</font>

941
01:04:31,800 --> 01:04:41,730
unnecessary sensitive data<font color="#CCCCCC"> I know it</font>

942
01:04:35,310 --> 01:04:44,640
<font color="#E5E5E5">sounds</font><font color="#CCCCCC"> really obvious</font><font color="#E5E5E5"> it should not the</font>

943
01:04:41,730 --> 01:04:50,310
<font color="#E5E5E5">PC must be defined if you take the</font>

944
01:04:44,640 --> 01:04:53,569
default<font color="#CCCCCC"> V PC off it's a problem</font><font color="#E5E5E5"> so and</font>

945
01:04:50,310 --> 01:04:59,210
there's no reason<font color="#CCCCCC"> for it to be</font><font color="#E5E5E5"> off so</font>

946
01:04:53,570 --> 01:05:01,310
there's just<font color="#E5E5E5"> no actual use case</font><font color="#CCCCCC"> that</font>

947
01:04:59,210 --> 01:05:03,950
it's<font color="#E5E5E5"> needed to</font><font color="#CCCCCC"> be</font>

948
01:05:01,310 --> 01:05:09,830
and the container is already

949
01:05:03,950 --> 01:05:12,680
authenticated as we said<font color="#E5E5E5"> so you need to</font>

950
01:05:09,830 --> 01:05:14,690
<font color="#E5E5E5">know that if the hacker has access to</font>

951
01:05:12,680 --> 01:05:17,029
<font color="#E5E5E5">some</font><font color="#CCCCCC"> sort of owner ability</font><font color="#E5E5E5"> in your</font>

952
01:05:14,690 --> 01:05:18,380
function<font color="#CCCCCC"> he owns everything</font><font color="#E5E5E5"> he has all</font>

953
01:05:17,030 --> 01:05:19,690
the authentication he needs he needs

954
01:05:18,380 --> 01:05:24,020
nothing<font color="#E5E5E5"> else</font>

955
01:05:19,690 --> 01:05:30,830
and obviously the AWS SDK is really<font color="#E5E5E5"> a</font>

956
01:05:24,020 --> 01:05:33,050
nice gift for<font color="#E5E5E5"> that hacker so again use</font>

957
01:05:30,830 --> 01:05:37,220
<font color="#E5E5E5">this privileged role this is right for</font>

958
01:05:33,050 --> 01:05:39,560
everything<font color="#CCCCCC"> not only serverless the AWS</font>

959
01:05:37,220 --> 01:05:42,759
<font color="#CCCCCC">LOM</font><font color="#E5E5E5"> the basic execution role needs to be</font>

960
01:05:39,560 --> 01:05:47,270
<font color="#CCCCCC">fine-grained</font><font color="#E5E5E5"> and not be</font><font color="#CCCCCC"> all-inclusive</font>

961
01:05:42,760 --> 01:05:48,890
<font color="#E5E5E5">with the top permissions and it's</font><font color="#CCCCCC"> always</font>

962
01:05:47,270 --> 01:05:52,940
good to<font color="#CCCCCC"> check the quality</font><font color="#E5E5E5"> of the code</font>

963
01:05:48,890 --> 01:05:56,029
<font color="#E5E5E5">eventually especially in service</font>

964
01:05:52,940 --> 01:05:57,590
computing if we started by people<font color="#E5E5E5"> who</font>

965
01:05:56,030 --> 01:06:00,290
are not<font color="#E5E5E5"> checking the code because</font><font color="#CCCCCC"> it's</font>

966
01:05:57,590 --> 01:06:02,900
service now we can tell them<font color="#E5E5E5"> especially</font>

967
01:06:00,290 --> 01:06:06,940
<font color="#E5E5E5">because it's serverless you need to make</font>

968
01:06:02,900 --> 01:06:12,280
sure<font color="#E5E5E5"> you have no vulnerabilities and</font>

969
01:06:06,940 --> 01:06:12,280
that's it any questions

970
01:06:15,270 --> 01:06:18,520
just<font color="#CCCCCC"> a reminder if</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have any</font>

971
01:06:17,140 --> 01:06:20,160
questions if you can raise<font color="#CCCCCC"> your hand</font>

972
01:06:18,520 --> 01:06:22,509
<font color="#E5E5E5">really high so I can bring the mic</font>

973
01:06:20,160 --> 01:06:27,100
<font color="#E5E5E5">really high so you can see because it's</font>

974
01:06:22,510 --> 01:06:29,350
hard<font color="#CCCCCC"> to say</font><font color="#E5E5E5"> over people also if someone</font>

975
01:06:27,100 --> 01:06:32,529
does not<font color="#E5E5E5"> like</font><font color="#CCCCCC"> to ask questions in a big</font>

976
01:06:29,350 --> 01:06:35,799
room<font color="#E5E5E5"> full of people</font><font color="#CCCCCC"> you can contact me I</font>

977
01:06:32,530 --> 01:06:38,530
promise<font color="#E5E5E5"> to answer</font><font color="#CCCCCC"> ok so I have a</font><font color="#E5E5E5"> two</font>

978
01:06:35,800 --> 01:06:42,280
<font color="#E5E5E5">parter if you'll</font><font color="#CCCCCC"> allow it the first</font>

979
01:06:38,530 --> 01:06:43,660
question is obviously the SDK if you get

980
01:06:42,280 --> 01:06:46,320
<font color="#CCCCCC">access to that through</font><font color="#E5E5E5"> an eval that's</font>

981
01:06:43,660 --> 01:06:50,680
crazy<font color="#E5E5E5"> you could potentially do anything</font>

982
01:06:46,320 --> 01:06:52,780
<font color="#CCCCCC">but do you need an eval</font><font color="#E5E5E5"> is that pretty</font>

983
01:06:50,680 --> 01:06:55,120
<font color="#E5E5E5">much prerequisite for any type</font><font color="#CCCCCC"> of viral</font>

984
01:06:52,780 --> 01:06:58,090
<font color="#CCCCCC">infection</font><font color="#E5E5E5"> or what we what we try to show</font>

985
01:06:55,120 --> 01:07:01,960
<font color="#E5E5E5">here is</font><font color="#CCCCCC"> the reason you need to actually</font>

986
01:06:58,090 --> 01:07:05,440
<font color="#E5E5E5">treat vulnerabilities in code of course</font>

987
01:07:01,960 --> 01:07:09,550
we took the<font color="#CCCCCC"> most simple one</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> as a</font>

988
01:07:05,440 --> 01:07:11,920
POC<font color="#CCCCCC"> it's really important to understand</font>

989
01:07:09,550 --> 01:07:16,870
<font color="#CCCCCC">that if it can</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> used outside of the</font>

990
01:07:11,920 --> 01:07:18,820
<font color="#E5E5E5">scope of functions it can</font><font color="#CCCCCC"> be used in a</font>

991
01:07:16,870 --> 01:07:20,680
function on a<font color="#CCCCCC"> server list as well</font><font color="#E5E5E5"> this</font>

992
01:07:18,820 --> 01:07:24,940
<font color="#E5E5E5">was</font><font color="#CCCCCC"> the point</font><font color="#E5E5E5"> that we</font><font color="#CCCCCC"> tried</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> put</font><font color="#E5E5E5"> so</font>

993
01:07:20,680 --> 01:07:26,830
the evil was planted on<font color="#CCCCCC"> purpose if you</font>

994
01:07:24,940 --> 01:07:29,500
have any other vulnerability in the<font color="#E5E5E5"> code</font>

995
01:07:26,830 --> 01:07:33,100
we can<font color="#E5E5E5"> probably find a</font><font color="#CCCCCC"> way to use it</font><font color="#E5E5E5"> so</font>

996
01:07:29,500 --> 01:07:36,550
the evil was an example<font color="#CCCCCC"> oh and so the</font>

997
01:07:33,100 --> 01:07:38,950
other<font color="#E5E5E5"> the second part here is if you</font>

998
01:07:36,550 --> 01:07:40,570
extend the lifetime<font color="#E5E5E5"> of you know if you</font>

999
01:07:38,950 --> 01:07:41,830
<font color="#CCCCCC">add code to</font><font color="#E5E5E5"> an eval</font><font color="#CCCCCC"> or something right</font>

1000
01:07:40,570 --> 01:07:43,870
<font color="#CCCCCC">you've got something that's processing</font>

1001
01:07:41,830 --> 01:07:46,450
<font color="#E5E5E5">if you're increasing the length of time</font>

1002
01:07:43,870 --> 01:07:48,160
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the average you know lambda operation</font>

1003
01:07:46,450 --> 01:07:50,290
is that<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to be cut by lambda</font>

1004
01:07:48,160 --> 01:07:51,670
naturally is it gonna just say oh I'm

1005
01:07:50,290 --> 01:07:55,120
alive for too long I'm going<font color="#E5E5E5"> to</font>

1006
01:07:51,670 --> 01:07:59,440
<font color="#CCCCCC">terminate okay so this turns me to</font><font color="#E5E5E5"> the</font>

1007
01:07:55,120 --> 01:08:00,790
<font color="#E5E5E5">reason</font><font color="#CCCCCC"> why some organizations are not</font>

1008
01:07:59,440 --> 01:08:03,160
moving<font color="#E5E5E5"> to server list and this is</font>

1009
01:08:00,790 --> 01:08:05,920
<font color="#E5E5E5">monitoring</font><font color="#CCCCCC"> it's really hard at the</font>

1010
01:08:03,160 --> 01:08:08,670
moment<font color="#CCCCCC"> to monitor all your activity it</font>

1011
01:08:05,920 --> 01:08:12,610
happens in many places at the same<font color="#E5E5E5"> time</font>

1012
01:08:08,670 --> 01:08:15,940
<font color="#E5E5E5">different containers sometimes different</font>

1013
01:08:12,610 --> 01:08:18,760
places on the globe<font color="#CCCCCC"> it's really hard to</font>

1014
01:08:15,940 --> 01:08:21,220
monitor<font color="#CCCCCC"> I know Amazon</font><font color="#E5E5E5"> is working on it</font>

1015
01:08:18,760 --> 01:08:23,710
so I would like<font color="#E5E5E5"> to say that there is a</font>

1016
01:08:21,220 --> 01:08:27,730
possibility<font color="#CCCCCC"> to monitor that</font><font color="#E5E5E5"> but I'm</font><font color="#CCCCCC"> not</font>

1017
01:08:23,710 --> 01:08:30,700
not 100<font color="#E5E5E5"> cent you also also I</font><font color="#CCCCCC"> think</font>

1018
01:08:27,729 --> 01:08:33,059
you'll have<font color="#E5E5E5"> a bit of</font><font color="#CCCCCC"> a problem to know</font>

1019
01:08:30,700 --> 01:08:36,040
in advance how long you want this

1020
01:08:33,060 --> 01:08:39,220
specific<font color="#E5E5E5"> function to work for you unless</font>

1021
01:08:36,040 --> 01:08:45,399
you have some sort<font color="#E5E5E5"> of clue in general</font>

1022
01:08:39,220 --> 01:08:47,820
terms make sense<font color="#CCCCCC"> ok does anyone</font><font color="#E5E5E5"> else</font>

1023
01:08:45,399 --> 01:08:47,819
<font color="#E5E5E5">have a question</font>

1024
01:08:52,330 --> 01:09:00,500
so the the<font color="#E5E5E5"> the SDK provides a way to</font>

1025
01:08:57,830 --> 01:09:03,500
<font color="#E5E5E5">access the source code or what is that</font>

1026
01:09:00,500 --> 01:09:08,000
<font color="#CCCCCC">is that like intended part of it the</font><font color="#E5E5E5"> SDK</font>

1027
01:09:03,500 --> 01:09:09,979
is<font color="#E5E5E5"> something that Amazon gives you it's</font>

1028
01:09:08,000 --> 01:09:13,160
a bunch it's like a<font color="#E5E5E5"> toolbox</font>

1029
01:09:09,979 --> 01:09:15,410
it's a toolbox of functions<font color="#E5E5E5"> that</font><font color="#CCCCCC"> enables</font>

1030
01:09:13,160 --> 01:09:17,870
you to work<font color="#CCCCCC"> with you</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> all your</font>

1031
01:09:15,410 --> 01:09:20,450
<font color="#CCCCCC">functions sometimes it's only to list</font>

1032
01:09:17,870 --> 01:09:24,290
them sometimes it's to update them to

1033
01:09:20,450 --> 01:09:28,970
deploy them change the code<font color="#E5E5E5"> even delete</font>

1034
01:09:24,290 --> 01:09:33,410
so this is<font color="#E5E5E5"> something that Amazon lets</font>

1035
01:09:28,970 --> 01:09:37,810
you do hoping that you're doing<font color="#E5E5E5"> it with</font>

1036
01:09:33,410 --> 01:09:37,809
the<font color="#CCCCCC"> owners hat obviously</font>

1037
01:09:48,078 --> 01:09:52,818
yeah just<font color="#E5E5E5"> real quick</font><font color="#CCCCCC"> question to check</font>

1038
01:09:50,299 --> 01:09:54,739
my understanding<font color="#CCCCCC"> so the permission issue</font>

1039
01:09:52,819 --> 01:09:56,540
where it's<font color="#CCCCCC"> they're being</font><font color="#E5E5E5"> granted</font><font color="#CCCCCC"> too</font>

1040
01:09:54,739 --> 01:09:59,839
many permissions<font color="#E5E5E5"> for the further for the</font>

1041
01:09:56,540 --> 01:10:02,389
function<font color="#E5E5E5"> would that if you had the lower</font>

1042
01:09:59,840 --> 01:10:04,639
permissions the correct permissions<font color="#E5E5E5"> that</font>

1043
01:10:02,389 --> 01:10:06,710
would restrict<font color="#E5E5E5"> being able to modify</font>

1044
01:10:04,639 --> 01:10:08,840
<font color="#E5E5E5">other functions but it wouldn't restrict</font>

1045
01:10:06,710 --> 01:10:12,320
the exfiltration<font color="#CCCCCC"> right</font><font color="#E5E5E5"> exactly actually</font>

1046
01:10:08,840 --> 01:10:16,510
there is a very<font color="#E5E5E5"> nice fine grain level</font>

1047
01:10:12,320 --> 01:10:19,250
<font color="#E5E5E5">that you can get to you can restrict</font>

1048
01:10:16,510 --> 01:10:24,320
<font color="#E5E5E5">what you can change if you can touch</font>

1049
01:10:19,250 --> 01:10:27,409
<font color="#E5E5E5">other functions when you can do it under</font>

1050
01:10:24,320 --> 01:10:29,449
which terms specific methods or specific

1051
01:10:27,409 --> 01:10:32,540
functions in these terms<font color="#CCCCCC"> that can do</font>

1052
01:10:29,449 --> 01:10:34,428
specific<font color="#CCCCCC"> things</font><font color="#E5E5E5"> obviously</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> easiest</font>

1053
01:10:32,540 --> 01:10:37,699
way<font color="#E5E5E5"> is to say okay everyone can do</font>

1054
01:10:34,429 --> 01:10:44,090
everything<font color="#E5E5E5"> and no no debugging you need</font>

1055
01:10:37,699 --> 01:10:48,290
<font color="#E5E5E5">this from now on</font><font color="#CCCCCC"> right great</font><font color="#E5E5E5"> thanks hi</font>

1056
01:10:44,090 --> 01:10:49,639
and your example<font color="#CCCCCC"> you showed that the you</font>

1057
01:10:48,290 --> 01:10:50,719
know<font color="#E5E5E5"> the function has access to an</font>

1058
01:10:49,639 --> 01:10:52,760
environmental variable that should<font color="#E5E5E5"> with</font>

1059
01:10:50,719 --> 01:10:54,800
<font color="#E5E5E5">the source code is being read from I was</font>

1060
01:10:52,760 --> 01:10:55,820
hoping you could elaborate on maybe some

1061
01:10:54,800 --> 01:10:57,619
of the other variables<font color="#E5E5E5"> that you might</font>

1062
01:10:55,820 --> 01:11:00,710
<font color="#E5E5E5">have access to in the</font><font color="#CCCCCC"> environment the</font>

1063
01:10:57,619 --> 01:11:04,369
other variables are not something<font color="#CCCCCC"> that</font>

1064
01:11:00,710 --> 01:11:07,699
we went for but other variables for

1065
01:11:04,369 --> 01:11:11,179
example<font color="#E5E5E5"> on which continent the container</font>

1066
01:11:07,699 --> 01:11:14,058
<font color="#E5E5E5">is what time was the last time that</font><font color="#CCCCCC"> the</font>

1067
01:11:11,179 --> 01:11:18,260
specific function was deployed more like

1068
01:11:14,059 --> 01:11:22,090
<font color="#CCCCCC">metadata</font><font color="#E5E5E5"> let's say I think</font><font color="#CCCCCC"> that the path</font>

1069
01:11:18,260 --> 01:11:22,090
<font color="#E5E5E5">1 was the most interesting</font>

1070
01:11:26,300 --> 01:11:36,889
anyone else have<font color="#E5E5E5"> a</font><font color="#CCCCCC"> question</font><font color="#E5E5E5"> one last</font>

1071
01:11:31,829 --> 01:11:36,889
<font color="#CCCCCC">call</font><font color="#E5E5E5"> all right thank you so much</font>

1072
01:11:38,119 --> 01:11:45,268
so thanks everyone<font color="#E5E5E5"> I'm available</font><font color="#CCCCCC"> for</font>

1073
01:11:42,179 --> 01:11:48,499
further<font color="#CCCCCC"> discussions</font><font color="#E5E5E5"> and questions and</font>

1074
01:11:45,269 --> 01:11:48,499
have a nice evening

1075
01:12:02,870 --> 01:15:00,259
[Music]

1076
01:15:02,950 --> 01:15:06,059
[Music]

1077
01:15:08,970 --> 01:15:33,069
[Music]

1078
01:15:37,160 --> 01:15:40,949
[Music]

1079
01:15:45,880 --> 01:16:01,790
[Music]

1080
01:16:03,810 --> 01:16:07,009
[Music]

1081
01:16:12,420 --> 01:16:57,189
[Music]

1082
01:17:05,550 --> 01:17:31,969
[Music]

1083
01:17:36,790 --> 01:17:45,589
[Music]

1084
01:18:02,750 --> 01:18:05,970
[Music]

1085
01:18:12,460 --> 01:18:21,899
[Music]

1086
01:18:23,950 --> 01:18:29,619
[Music]

1087
01:18:32,800 --> 01:19:03,540
[Music]

1088
01:19:09,390 --> 01:19:53,339
[Music]

1089
01:19:53,790 --> 01:20:09,369
[Applause]

1090
01:19:56,250 --> 01:20:09,369
[Music]

1091
01:20:14,090 --> 01:20:50,910
[Music]

1092
01:21:01,940 --> 01:21:06,349
[Music]

1093
01:21:10,300 --> 01:21:13,600
[Music]

1094
01:21:32,250 --> 01:21:38,329
[Music]

1095
01:21:41,120 --> 01:21:45,920
[Music]

1096
01:21:49,250 --> 01:21:52,359
[Music]

1097
01:21:58,170 --> 01:22:07,109
[Music]

1098
01:22:10,100 --> 01:22:14,790
[Music]

1099
01:22:20,520 --> 01:22:23,749
[Applause]

1100
01:22:33,170 --> 01:22:37,180
[Music]

1101
01:22:41,620 --> 01:22:45,239
[Music]

1102
01:23:03,910 --> 01:23:07,460
[Music]

1103
01:23:18,150 --> 01:23:43,519
[Music]

1104
01:23:47,160 --> 01:23:52,239
[Music]

1105
01:24:03,580 --> 01:24:23,600
[Music]

1106
01:24:26,550 --> 01:24:29,680
[Music]

1107
01:24:33,640 --> 01:24:36,709
[Music]

1108
01:24:41,160 --> 01:24:44,670
[Music]

1109
01:24:48,230 --> 01:24:51,330
[Music]

