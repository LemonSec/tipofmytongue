1
00:00:00,089 --> 00:00:06,569
welcome to breaking ground the<font color="#CCCCCC"> next talk</font>

2
00:00:03,720 --> 00:00:10,080
is<font color="#CCCCCC"> by Ryan</font><font color="#E5E5E5"> and it is micro services and</font>

3
00:00:06,569 --> 00:00:17,699
functions<font color="#E5E5E5"> as service for offensive</font>

4
00:00:10,080 --> 00:00:19,859
<font color="#CCCCCC">security so Ryan</font><font color="#E5E5E5"> okay</font>

5
00:00:17,699 --> 00:00:22,020
afternoon thanks<font color="#E5E5E5"> for having me</font><font color="#CCCCCC"> here and</font>

6
00:00:19,859 --> 00:00:23,400
thanks<font color="#E5E5E5"> for coming out to</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> today</font>

7
00:00:22,020 --> 00:00:25,500
<font color="#CCCCCC">I'm</font><font color="#E5E5E5"> going to talk</font><font color="#CCCCCC"> about micro services</font>

8
00:00:23,400 --> 00:00:27,869
and<font color="#CCCCCC"> functions as a service</font><font color="#E5E5E5"> for offensive</font>

9
00:00:25,500 --> 00:00:30,150
security<font color="#CCCCCC"> a little bit about me my name</font>

10
00:00:27,869 --> 00:00:33,469
is<font color="#E5E5E5"> Ryan</font><font color="#CCCCCC"> I worked as a penetration tester</font>

11
00:00:30,150 --> 00:00:36,269
at Centurion<font color="#CCCCCC"> in Singapore and</font><font color="#E5E5E5"> my first</font>

12
00:00:33,469 --> 00:00:39,149
discovery<font color="#CCCCCC"> of functions of the service</font>

13
00:00:36,270 --> 00:00:40,800
started in January 2015<font color="#CCCCCC"> where an AWS</font>

14
00:00:39,149 --> 00:00:43,079
came out with<font color="#E5E5E5"> lambda available for</font>

15
00:00:40,800 --> 00:00:45,089
general preview<font color="#CCCCCC"> to all</font><font color="#E5E5E5"> customers and</font>

16
00:00:43,079 --> 00:00:49,289
what really became<font color="#E5E5E5"> interesting about</font>

17
00:00:45,090 --> 00:00:52,620
lambda<font color="#E5E5E5"> to me was</font><font color="#CCCCCC"> that it allows you</font><font color="#E5E5E5"> to</font>

18
00:00:49,289 --> 00:00:55,800
run 1 million executions of your code

19
00:00:52,620 --> 00:00:57,390
<font color="#CCCCCC">for free every every month</font><font color="#E5E5E5"> and</font>

20
00:00:55,800 --> 00:00:59,669
<font color="#E5E5E5">essentially the</font><font color="#CCCCCC"> idea</font><font color="#E5E5E5"> is you upload your</font>

21
00:00:57,390 --> 00:01:01,710
code<font color="#E5E5E5"> and that gets triggered and it does</font>

22
00:00:59,670 --> 00:01:06,270
some function for you<font color="#E5E5E5"> similar to the</font>

23
00:01:01,710 --> 00:01:07,920
idea<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a micro service yeah so the when</font>

24
00:01:06,270 --> 00:01:08,580
lambda first came out it<font color="#CCCCCC"> only supported</font>

25
00:01:07,920 --> 00:01:11,280
nodejs

26
00:01:08,580 --> 00:01:13,229
and what kind<font color="#CCCCCC"> of got more interesting is</font>

27
00:01:11,280 --> 00:01:14,640
when I<font color="#E5E5E5"> discovered lamb - by Erik Hammond</font>

28
00:01:13,229 --> 00:01:16,409
<font color="#CCCCCC">and that allowed you to kind of</font><font color="#E5E5E5"> get a</font>

29
00:01:14,640 --> 00:01:19,040
shell so<font color="#E5E5E5"> you could run some commands</font>

30
00:01:16,409 --> 00:01:20,850
inject that into the<font color="#E5E5E5"> lambda function</font>

31
00:01:19,040 --> 00:01:23,810
give you the<font color="#CCCCCC"> output and</font><font color="#E5E5E5"> you could</font>

32
00:01:20,850 --> 00:01:26,970
explore this temporary shell environment

33
00:01:23,810 --> 00:01:29,549
so this led to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> idea of server lists</font>

34
00:01:26,970 --> 00:01:30,780
and<font color="#E5E5E5"> server list is this concept of where</font>

35
00:01:29,549 --> 00:01:32,820
<font color="#E5E5E5">you don't need to worry</font><font color="#CCCCCC"> about the</font>

36
00:01:30,780 --> 00:01:34,890
server's managing them<font color="#E5E5E5"> running them</font>

37
00:01:32,820 --> 00:01:36,570
keeping<font color="#CCCCCC"> them running paying for them</font>

38
00:01:34,890 --> 00:01:38,549
when<font color="#E5E5E5"> they're</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> being used and the</font>

39
00:01:36,570 --> 00:01:41,639
ability to<font color="#E5E5E5"> kind of scale up based on</font>

40
00:01:38,549 --> 00:01:44,729
demand for your code if we look at the

41
00:01:41,640 --> 00:01:46,770
stack<font color="#CCCCCC"> functions</font><font color="#E5E5E5"> of the service is on the</font>

42
00:01:44,729 --> 00:01:48,270
far right<font color="#E5E5E5"> so we see that you just put</font>

43
00:01:46,770 --> 00:01:49,740
<font color="#E5E5E5">your code in there and then the</font>

44
00:01:48,270 --> 00:01:51,689
<font color="#E5E5E5">interpreter such as like Python and</font>

45
00:01:49,740 --> 00:01:53,009
<font color="#E5E5E5">nodejs and everything down from</font><font color="#CCCCCC"> the</font>

46
00:01:51,689 --> 00:01:56,100
stack is all managed by the service

47
00:01:53,009 --> 00:01:58,320
provider<font color="#CCCCCC"> one very</font><font color="#E5E5E5"> simple example</font><font color="#CCCCCC"> which</font>

48
00:01:56,100 --> 00:02:00,929
is always given by<font color="#CCCCCC"> lambda is you have a</font>

49
00:01:58,320 --> 00:02:02,758
photograph<font color="#CCCCCC"> taken by some users they</font>

50
00:02:00,930 --> 00:02:04,829
upload to an s3<font color="#CCCCCC"> bucket and that</font><font color="#E5E5E5"> triggers</font>

51
00:02:02,759 --> 00:02:07,259
a lambda<font color="#E5E5E5"> function</font><font color="#CCCCCC"> and that</font><font color="#E5E5E5"> will</font><font color="#CCCCCC"> in turn</font>

52
00:02:04,829 --> 00:02:09,269
<font color="#E5E5E5">maybe add some terrible filter to</font><font color="#CCCCCC"> your</font>

53
00:02:07,259 --> 00:02:13,560
photograph and<font color="#CCCCCC"> then upload that</font><font color="#E5E5E5"> back to</font>

54
00:02:09,270 --> 00:02:16,140
the<font color="#E5E5E5"> user so</font><font color="#CCCCCC"> we look more</font>

55
00:02:13,560 --> 00:02:18,540
security perspective Airbnb came out

56
00:02:16,140 --> 00:02:21,359
with<font color="#E5E5E5"> stream alert which is a way to</font>

57
00:02:18,540 --> 00:02:24,030
scale up your<font color="#E5E5E5"> log parsing ingestion kind</font>

58
00:02:21,360 --> 00:02:26,100
of rule that you that you would<font color="#E5E5E5"> apply to</font>

59
00:02:24,030 --> 00:02:28,800
any kind<font color="#CCCCCC"> of blog</font><font color="#E5E5E5"> so if</font><font color="#CCCCCC"> you have a</font>

60
00:02:26,100 --> 00:02:30,390
scalable<font color="#E5E5E5"> server infrastructure we're</font>

61
00:02:28,800 --> 00:02:32,310
generating lots of logs based on user

62
00:02:30,390 --> 00:02:33,988
demand<font color="#E5E5E5"> you can now have a scalable</font>

63
00:02:32,310 --> 00:02:36,330
logging infrastructure to capture all

64
00:02:33,989 --> 00:02:38,610
that information<font color="#CCCCCC"> run some rules this</font>

65
00:02:36,330 --> 00:02:40,770
kind of detect abuse<font color="#CCCCCC"> and then trigger</font>

66
00:02:38,610 --> 00:02:43,200
another function<font color="#CCCCCC"> to send maybe an alert</font>

67
00:02:40,770 --> 00:02:46,410
the pager duty or slack<font color="#E5E5E5"> and so on so</font>

68
00:02:43,200 --> 00:02:48,209
it's been<font color="#E5E5E5"> quite a few related projects</font>

69
00:02:46,410 --> 00:02:50,700
with lambda<font color="#E5E5E5"> that people have discovered</font>

70
00:02:48,209 --> 00:02:53,030
<font color="#E5E5E5">another one is looking kind of</font>

71
00:02:50,700 --> 00:02:55,619
automating so you might have<font color="#CCCCCC"> a ec2</font>

72
00:02:53,030 --> 00:02:58,080
firewall rules that you want to allow a

73
00:02:55,620 --> 00:02:59,700
developer<font color="#E5E5E5"> test</font><font color="#CCCCCC"> H</font><font color="#E5E5E5"> into a server so then</font>

74
00:02:58,080 --> 00:03:01,470
maybe they hit an API endpoint that

75
00:02:59,700 --> 00:03:03,750
<font color="#E5E5E5">triggers the lambda function to run</font>

76
00:03:01,470 --> 00:03:06,300
which changes the security groups<font color="#E5E5E5"> and</font>

77
00:03:03,750 --> 00:03:09,360
then the developer can log in<font color="#E5E5E5"> you could</font>

78
00:03:06,300 --> 00:03:11,430
also have like monitoring<font color="#E5E5E5"> CDN Network</font><font color="#CCCCCC"> so</font>

79
00:03:09,360 --> 00:03:13,410
you look<font color="#E5E5E5"> at maybe cloud</font><font color="#CCCCCC"> flares servers</font>

80
00:03:11,430 --> 00:03:16,380
<font color="#E5E5E5">and you automatically update that list</font>

81
00:03:13,410 --> 00:03:18,209
<font color="#E5E5E5">into your your web servers security</font>

82
00:03:16,380 --> 00:03:20,489
<font color="#CCCCCC">group so</font><font color="#E5E5E5"> that CloudFlare can always</font>

83
00:03:18,209 --> 00:03:25,110
connect in and get<font color="#CCCCCC"> their</font><font color="#E5E5E5"> latest</font><font color="#CCCCCC"> cache</font>

84
00:03:20,489 --> 00:03:26,850
content of your web servers<font color="#E5E5E5"> so recently</font>

85
00:03:25,110 --> 00:03:29,130
AWS came out with<font color="#E5E5E5"> their web application</font>

86
00:03:26,850 --> 00:03:30,840
firewall<font color="#E5E5E5"> and they tied together the</font><font color="#CCCCCC"> use</font>

87
00:03:29,130 --> 00:03:32,190
of lambda to<font color="#E5E5E5"> be able to make sense of</font>

88
00:03:30,840 --> 00:03:35,010
the<font color="#E5E5E5"> web application firewall logs in</font>

89
00:03:32,190 --> 00:03:37,799
another way that you could detect abuse

90
00:03:35,010 --> 00:03:39,989
and then automatically you<font color="#CCCCCC"> know</font>

91
00:03:37,799 --> 00:03:43,980
<font color="#E5E5E5">blacklist an IP address or kick out a</font>

92
00:03:39,989 --> 00:03:46,920
user so now we're going to<font color="#E5E5E5"> look at a</font>

93
00:03:43,980 --> 00:03:48,810
simple hello world<font color="#CCCCCC"> so if you have a few</font>

94
00:03:46,920 --> 00:03:50,510
<font color="#E5E5E5">examples</font><font color="#CCCCCC"> here to run through</font><font color="#E5E5E5"> first it's</font>

95
00:03:48,810 --> 00:03:53,100
going<font color="#E5E5E5"> to be Google cloud platform</font>

96
00:03:50,510 --> 00:03:55,260
<font color="#E5E5E5">essentially they only support</font><font color="#CCCCCC"> nodejs</font><font color="#E5E5E5"> at</font>

97
00:03:53,100 --> 00:03:58,620
the moment but<font color="#E5E5E5"> if you use Python shell</font>

98
00:03:55,260 --> 00:04:01,230
<font color="#E5E5E5">by this extra bacon on github you</font><font color="#CCCCCC"> can</font>

99
00:03:58,620 --> 00:04:05,000
just have a Python<font color="#E5E5E5"> script wrap it in</font>

100
00:04:01,230 --> 00:04:08,340
this nodejs module and then you can just

101
00:04:05,000 --> 00:04:10,079
use your<font color="#CCCCCC"> python script</font><font color="#E5E5E5"> that you have so</font>

102
00:04:08,340 --> 00:04:12,060
<font color="#E5E5E5">very simple we just click Next Next Next</font>

103
00:04:10,079 --> 00:04:14,609
<font color="#E5E5E5">through everything as</font><font color="#CCCCCC"> usual and we get</font>

104
00:04:12,060 --> 00:04:16,769
to the zip file upload and basically we

105
00:04:14,609 --> 00:04:20,728
<font color="#CCCCCC">just</font><font color="#E5E5E5"> need to wrap everything into a one</font>

106
00:04:16,769 --> 00:04:24,180
folder and we sip it up and we<font color="#E5E5E5"> have a</font>

107
00:04:20,728 --> 00:04:26,400
<font color="#E5E5E5">very simple nodejs file which is just</font>

108
00:04:24,180 --> 00:04:27,389
gonna<font color="#E5E5E5"> call our</font><font color="#CCCCCC"> worker</font><font color="#E5E5E5"> py and I work</font>

109
00:04:26,400 --> 00:04:29,998
<font color="#E5E5E5">about py script</font>

110
00:04:27,389 --> 00:04:32,280
just three<font color="#E5E5E5"> lines</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> Python to do URL Lib</font>

111
00:04:29,999 --> 00:04:33,840
<font color="#E5E5E5">make a call</font><font color="#CCCCCC"> out to Open DNS</font><font color="#E5E5E5"> get the car</font>

112
00:04:32,280 --> 00:04:36,599
<font color="#E5E5E5">an IP address</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> write it out</font><font color="#CCCCCC"> so we can</font>

113
00:04:33,840 --> 00:04:38,039
<font color="#CCCCCC">kind of get to see a little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of where</font>

114
00:04:36,599 --> 00:04:41,039
we're offering from when we upload to

115
00:04:38,039 --> 00:04:42,479
<font color="#E5E5E5">Google</font><font color="#CCCCCC"> Cloud so</font><font color="#E5E5E5"> we do that</font><font color="#CCCCCC"> we upload it</font>

116
00:04:41,039 --> 00:04:44,219
<font color="#CCCCCC">and we test the function and</font><font color="#E5E5E5"> we get IP</font>

117
00:04:42,479 --> 00:04:46,199
version 6 address<font color="#E5E5E5"> so what's interesting</font>

118
00:04:44,219 --> 00:04:47,909
<font color="#E5E5E5">about Google Cloud</font><font color="#CCCCCC"> and functions is that</font>

119
00:04:46,199 --> 00:04:49,590
<font color="#E5E5E5">you get</font><font color="#CCCCCC"> a native</font><font color="#E5E5E5"> IP version 6 address</font>

120
00:04:47,909 --> 00:04:52,050
and this<font color="#E5E5E5"> is kind</font><font color="#CCCCCC"> of unique compared</font><font color="#E5E5E5"> to</font>

121
00:04:49,590 --> 00:04:54,719
the other service providers<font color="#E5E5E5"> if we look</font>

122
00:04:52,050 --> 00:04:56,279
at IBM's<font color="#CCCCCC"> Open whisk what's unique about</font>

123
00:04:54,719 --> 00:04:58,439
this is<font color="#CCCCCC"> that they allow you</font><font color="#E5E5E5"> to upload</font><font color="#CCCCCC"> a</font>

124
00:04:56,279 --> 00:04:59,759
docker image<font color="#CCCCCC"> so instead of just</font><font color="#E5E5E5"> having a</font>

125
00:04:58,439 --> 00:05:00,870
piece<font color="#E5E5E5"> of code or some script that you</font>

126
00:04:59,759 --> 00:05:02,669
upload where you don't<font color="#E5E5E5"> really have much</font>

127
00:05:00,870 --> 00:05:04,650
<font color="#CCCCCC">control over</font><font color="#E5E5E5"> the environment it runs in</font>

128
00:05:02,669 --> 00:05:06,419
you can now upload<font color="#E5E5E5"> like a docker image</font>

129
00:05:04,650 --> 00:05:09,120
and have that run<font color="#E5E5E5"> so a lot more</font>

130
00:05:06,419 --> 00:05:13,378
flexibility there<font color="#CCCCCC"> and this also they</font>

131
00:05:09,120 --> 00:05:17,340
also give you a IP version 4 address so

132
00:05:13,379 --> 00:05:19,650
we talked<font color="#E5E5E5"> about docker</font><font color="#CCCCCC"> there's also this</font>

133
00:05:17,340 --> 00:05:21,029
site called play with docker<font color="#E5E5E5"> and the</font>

134
00:05:19,650 --> 00:05:23,849
idea behind this<font color="#CCCCCC"> is to</font><font color="#E5E5E5"> leverage on</font>

135
00:05:21,029 --> 00:05:25,710
docker swarm<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so you go to</font><font color="#CCCCCC"> the site</font>

136
00:05:23,849 --> 00:05:27,628
play with docker<font color="#CCCCCC"> calm you've clicked</font><font color="#E5E5E5"> the</font>

137
00:05:25,710 --> 00:05:29,039
<font color="#E5E5E5">CAPTCHA and</font><font color="#CCCCCC"> you get four</font><font color="#E5E5E5"> hours of like</font>

138
00:05:27,629 --> 00:05:30,900
basically<font color="#E5E5E5"> a free shell where you can</font>

139
00:05:29,039 --> 00:05:32,279
just play<font color="#E5E5E5"> around with docker and see the</font>

140
00:05:30,900 --> 00:05:35,460
environment<font color="#CCCCCC"> and see what it would</font><font color="#E5E5E5"> be</font>

141
00:05:32,279 --> 00:05:37,680
like<font color="#E5E5E5"> so they have a play with docker</font>

142
00:05:35,460 --> 00:05:39,388
calm and they also have the code up

143
00:05:37,680 --> 00:05:41,009
there<font color="#E5E5E5"> if</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> want to run it locally and</font>

144
00:05:39,389 --> 00:05:42,960
<font color="#E5E5E5">set it up and test it on your own</font>

145
00:05:41,009 --> 00:05:44,759
environment<font color="#CCCCCC"> and essentially what they're</font>

146
00:05:42,960 --> 00:05:48,149
doing is they're running it on AWS

147
00:05:44,759 --> 00:05:49,620
<font color="#E5E5E5">instance and they have a Python</font><font color="#CCCCCC"> setup so</font>

148
00:05:48,149 --> 00:05:50,639
some<font color="#CCCCCC"> of the pros of</font><font color="#E5E5E5"> this is that it's</font>

149
00:05:49,620 --> 00:05:52,199
anonymous there's no account

150
00:05:50,639 --> 00:05:54,060
<font color="#E5E5E5">registration you don't have to identify</font>

151
00:05:52,199 --> 00:05:56,819
<font color="#E5E5E5">yourself in any</font><font color="#CCCCCC"> way just need to take a</font>

152
00:05:54,060 --> 00:05:58,529
box on a CAPTCHA<font color="#E5E5E5"> but the downside</font><font color="#CCCCCC"> is of</font>

153
00:05:56,819 --> 00:05:59,909
course you use time limited<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then</font>

154
00:05:58,529 --> 00:06:01,680
there's a CAPTCHA so it can be<font color="#CCCCCC"> difficult</font>

155
00:05:59,909 --> 00:06:06,210
to automate kind of getting this free

156
00:06:01,680 --> 00:06:08,789
shell for<font color="#E5E5E5"> four hours</font><font color="#CCCCCC"> every time ok let's</font>

157
00:06:06,210 --> 00:06:10,859
talk<font color="#E5E5E5"> a little bit</font><font color="#CCCCCC"> about cost so this is</font>

158
00:06:08,789 --> 00:06:12,270
site called serverless<font color="#CCCCCC"> kal calm</font><font color="#E5E5E5"> which</font>

159
00:06:10,860 --> 00:06:14,069
gives you a<font color="#E5E5E5"> very</font><font color="#CCCCCC"> good</font><font color="#E5E5E5"> overview of the</font>

160
00:06:12,270 --> 00:06:16,589
cost of different<font color="#CCCCCC"> platforms if we think</font>

161
00:06:14,069 --> 00:06:18,360
<font color="#E5E5E5">back</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> example I showed just simple</font>

162
00:06:16,589 --> 00:06:19,979
<font color="#E5E5E5">three line Python script to run get your</font>

163
00:06:18,360 --> 00:06:22,439
current<font color="#E5E5E5"> IP address and I'll put it it</font>

164
00:06:19,979 --> 00:06:24,419
<font color="#E5E5E5">runs in</font><font color="#CCCCCC"> three hundred</font><font color="#E5E5E5"> milliseconds so</font>

165
00:06:22,439 --> 00:06:27,029
they do measurements<font color="#E5E5E5"> in 100 milliseconds</font>

166
00:06:24,419 --> 00:06:28,649
at a time<font color="#CCCCCC"> so this 300 milliseconds you</font>

167
00:06:27,029 --> 00:06:31,649
could run<font color="#E5E5E5"> that</font><font color="#CCCCCC"> 10 million</font><font color="#E5E5E5"> times a month</font>

168
00:06:28,649 --> 00:06:33,719
<font color="#CCCCCC">for a dollar and</font><font color="#E5E5E5"> 80 cents</font><font color="#CCCCCC"> so we see and</font>

169
00:06:31,649 --> 00:06:35,129
you also get<font color="#E5E5E5"> a million executions for</font>

170
00:06:33,719 --> 00:06:36,899
free<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> can see it is very cost</font>

171
00:06:35,129 --> 00:06:38,610
effective to<font color="#CCCCCC"> just run your</font><font color="#E5E5E5"> code and</font>

172
00:06:36,899 --> 00:06:41,140
upload it<font color="#E5E5E5"> there and only pay when it</font>

173
00:06:38,610 --> 00:06:43,690
runs and the time it takes<font color="#E5E5E5"> to</font><font color="#CCCCCC"> run</font>

174
00:06:41,140 --> 00:06:46,150
so if you look across<font color="#E5E5E5"> all the different</font>

175
00:06:43,690 --> 00:06:47,830
service<font color="#CCCCCC"> providers you</font><font color="#E5E5E5"> can see Amazon and</font>

176
00:06:46,150 --> 00:06:49,719
as you're clearly<font color="#CCCCCC"> leading the pack</font>

177
00:06:47,830 --> 00:06:52,719
because<font color="#E5E5E5"> they have the most support by</font>

178
00:06:49,720 --> 00:06:55,540
region<font color="#E5E5E5"> and if we give a quick overview</font>

179
00:06:52,720 --> 00:06:58,060
<font color="#CCCCCC">we can see the benefits of</font><font color="#E5E5E5"> Google is</font>

180
00:06:55,540 --> 00:06:59,760
that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> get IP version 6 IBM you get a</font>

181
00:06:58,060 --> 00:07:03,700
docker image that you can play<font color="#E5E5E5"> with and</font>

182
00:06:59,760 --> 00:07:06,010
for AWS<font color="#CCCCCC"> you have 14 regions this year</font><font color="#E5E5E5"> of</font>

183
00:07:03,700 --> 00:07:08,469
23 some of the differences<font color="#E5E5E5"> like is</font><font color="#CCCCCC"> your</font>

184
00:07:06,010 --> 00:07:10,990
<font color="#CCCCCC">they support</font><font color="#E5E5E5"> PowerShell so if</font><font color="#CCCCCC"> your we</font>

185
00:07:08,470 --> 00:07:12,400
want to run like<font color="#E5E5E5"> yeah you can</font><font color="#CCCCCC"> have like</font>

186
00:07:10,990 --> 00:07:16,210
more flexibility<font color="#CCCCCC"> in the scripts that</font>

187
00:07:12,400 --> 00:07:17,739
you're running so I would say in summary

188
00:07:16,210 --> 00:07:20,409
<font color="#E5E5E5">if you look at the advantages of</font>

189
00:07:17,740 --> 00:07:22,360
<font color="#E5E5E5">function to</font><font color="#CCCCCC"> the service this</font><font color="#E5E5E5"> low cost</font>

190
00:07:20,410 --> 00:07:24,760
<font color="#E5E5E5">you get</font><font color="#CCCCCC"> signup credit but most of the</font>

191
00:07:22,360 --> 00:07:27,010
like AWS you sign up they give you $300

192
00:07:24,760 --> 00:07:28,090
<font color="#E5E5E5">it's pretty hard to use all that $300 if</font>

193
00:07:27,010 --> 00:07:31,570
you're<font color="#E5E5E5"> only going to use the function</font><font color="#CCCCCC"> of</font>

194
00:07:28,090 --> 00:07:33,460
the service<font color="#E5E5E5"> platform you get unspecified</font>

195
00:07:31,570 --> 00:07:35,469
source IP address<font color="#E5E5E5"> because your code is</font>

196
00:07:33,460 --> 00:07:36,880
being<font color="#E5E5E5"> injected into some random server</font>

197
00:07:35,470 --> 00:07:39,490
within<font color="#E5E5E5"> their infrastructure which they</font>

198
00:07:36,880 --> 00:07:41,530
manage and you have a<font color="#E5E5E5"> global data</font><font color="#CCCCCC"> center</font>

199
00:07:39,490 --> 00:07:43,390
<font color="#E5E5E5">so you can</font><font color="#CCCCCC"> imagine</font><font color="#E5E5E5"> you can get maybe an</font>

200
00:07:41,530 --> 00:07:48,700
IP address out of China<font color="#E5E5E5"> and you can do</font>

201
00:07:43,390 --> 00:07:51,039
certain simulated attacks with that so

202
00:07:48,700 --> 00:07:52,599
<font color="#E5E5E5">this led</font><font color="#CCCCCC"> me to what I started</font><font color="#E5E5E5"> with</font>

203
00:07:51,040 --> 00:07:54,580
<font color="#CCCCCC">Project thunderstruck which is finding</font>

204
00:07:52,600 --> 00:07:57,100
use cases for functions<font color="#E5E5E5"> of the service</font>

205
00:07:54,580 --> 00:07:58,570
and offensive security<font color="#E5E5E5"> and my whole goal</font>

206
00:07:57,100 --> 00:08:00,820
with this is<font color="#CCCCCC"> to</font><font color="#E5E5E5"> explore the</font><font color="#CCCCCC"> different</font>

207
00:07:58,570 --> 00:08:02,560
cloud service providers and try to get

208
00:08:00,820 --> 00:08:05,409
<font color="#CCCCCC">supercomputer resources without paying</font>

209
00:08:02,560 --> 00:08:07,030
supercomputer prices and today<font color="#E5E5E5"> besides</font>

210
00:08:05,410 --> 00:08:14,470
I'm going to be<font color="#E5E5E5"> talking about searching</font>

211
00:08:07,030 --> 00:08:15,630
<font color="#CCCCCC">an IP version 6 so a little</font><font color="#E5E5E5"> bit of the</font>

212
00:08:14,470 --> 00:08:19,180
past work in this area

213
00:08:15,630 --> 00:08:21,850
<font color="#CCCCCC">tobias 5-bit gave a talk at ccc about 6</font>

214
00:08:19,180 --> 00:08:23,590
months ago<font color="#E5E5E5"> in</font><font color="#CCCCCC"> december and he was</font>

215
00:08:21,850 --> 00:08:26,920
<font color="#E5E5E5">building upon the work by peter van</font><font color="#CCCCCC"> dyke</font>

216
00:08:23,590 --> 00:08:29,950
and essentially<font color="#CCCCCC"> their</font><font color="#E5E5E5"> mapping out the</font>

217
00:08:26,920 --> 00:08:34,030
usage of<font color="#E5E5E5"> IP version 4 by looking at dns</font>

218
00:08:29,950 --> 00:08:37,179
reverse entries so a standard compliant

219
00:08:34,030 --> 00:08:40,120
name server<font color="#E5E5E5"> if it complies to</font><font color="#CCCCCC"> RFC 8020</font>

220
00:08:37,179 --> 00:08:42,640
if you go to search<font color="#E5E5E5"> for a IP version 6</font>

221
00:08:40,120 --> 00:08:45,220
reverse<font color="#CCCCCC"> address it will reply with</font><font color="#E5E5E5"> no</font>

222
00:08:42,640 --> 00:08:47,290
error<font color="#E5E5E5"> if there is nothing</font><font color="#CCCCCC"> at that</font>

223
00:08:45,220 --> 00:08:49,240
specific address but something more

224
00:08:47,290 --> 00:08:50,709
specific<font color="#E5E5E5"> and it will reply with</font><font color="#CCCCCC"> NX</font>

225
00:08:49,240 --> 00:08:52,870
<font color="#E5E5E5">domain if there's nothing</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> and</font>

226
00:08:50,710 --> 00:08:54,820
nothing below<font color="#CCCCCC"> it as well so by using</font>

227
00:08:52,870 --> 00:08:56,830
this difference in response when looking

228
00:08:54,820 --> 00:08:59,050
or the reverse<font color="#E5E5E5"> addresses you can narrow</font>

229
00:08:56,830 --> 00:09:02,350
the search the amount<font color="#E5E5E5"> of space</font><font color="#CCCCCC"> you need</font>

230
00:08:59,050 --> 00:09:04,839
to<font color="#E5E5E5"> search and inside of IP version 6</font>

231
00:09:02,350 --> 00:09:06,490
<font color="#E5E5E5">so put more simply on a command line if</font>

232
00:09:04,840 --> 00:09:08,470
<font color="#E5E5E5">you're running a dig and</font><font color="#CCCCCC"> you dig</font><font color="#E5E5E5"> for</font>

233
00:09:06,490 --> 00:09:10,030
this IP address<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> left</font><font color="#E5E5E5"> you'll get a</font>

234
00:09:08,470 --> 00:09:11,800
no error<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> know that there's</font>

235
00:09:10,030 --> 00:09:16,089
<font color="#E5E5E5">nothing at</font><font color="#CCCCCC"> that specific address but</font>

236
00:09:11,800 --> 00:09:17,829
there's something further<font color="#E5E5E5"> down</font><font color="#CCCCCC"> and if</font>

237
00:09:16,090 --> 00:09:20,200
you do a<font color="#E5E5E5"> 5 you see you get</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> X domain</font>

238
00:09:17,830 --> 00:09:23,400
<font color="#E5E5E5">so you can</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> try these out on</font>

239
00:09:20,200 --> 00:09:25,600
these<font color="#E5E5E5"> IP</font><font color="#CCCCCC"> addresses to see the difference</font>

240
00:09:23,400 --> 00:09:27,550
<font color="#CCCCCC">Tobias has work he</font><font color="#E5E5E5"> used the</font>

241
00:09:25,600 --> 00:09:30,130
<font color="#CCCCCC">supercomputer as</font><font color="#E5E5E5"> you know University</font>

242
00:09:27,550 --> 00:09:31,780
which was used for<font color="#E5E5E5"> machine</font><font color="#CCCCCC"> learning</font><font color="#E5E5E5"> so</font>

243
00:09:30,130 --> 00:09:34,600
he had this you know<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> Gigabit Ethernet</font>

244
00:09:31,780 --> 00:09:37,480
connection<font color="#E5E5E5"> 80 threads is crazy</font>

245
00:09:34,600 --> 00:09:40,480
<font color="#CCCCCC">supercomputer and he ran his script to</font>

246
00:09:37,480 --> 00:09:42,730
kind of enumerate all<font color="#CCCCCC"> the DNS records in</font>

247
00:09:40,480 --> 00:09:44,620
IP<font color="#E5E5E5"> version 6 it's the first first</font>

248
00:09:42,730 --> 00:09:46,900
attempt<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> in one week he found 70</font>

249
00:09:44,620 --> 00:09:48,640
million records<font color="#CCCCCC"> but he also received a</font>

250
00:09:46,900 --> 00:09:51,610
<font color="#CCCCCC">lot</font><font color="#E5E5E5"> of abuse complaints from different</font>

251
00:09:48,640 --> 00:09:54,600
ISPs because he's<font color="#E5E5E5"> basically enumerate</font>

252
00:09:51,610 --> 00:09:58,810
every<font color="#E5E5E5"> single possibility</font><font color="#CCCCCC"> out of ISPs DNS</font>

253
00:09:54,600 --> 00:10:00,610
server and all<font color="#E5E5E5"> their reverse zones so</font>

254
00:09:58,810 --> 00:10:03,219
some ISPs<font color="#CCCCCC"> will just assign a reverse</font>

255
00:10:00,610 --> 00:10:05,050
reverse zone for every<font color="#E5E5E5"> single IP version</font>

256
00:10:03,220 --> 00:10:06,910
6 address<font color="#E5E5E5"> search they have in their</font>

257
00:10:05,050 --> 00:10:09,459
space including maybe IP version 4<font color="#E5E5E5"> and</font>

258
00:10:06,910 --> 00:10:13,089
so a numerating all of them generates a

259
00:10:09,460 --> 00:10:16,720
lot of<font color="#CCCCCC"> DNS traffic to that server</font><font color="#E5E5E5"> so in</font>

260
00:10:13,090 --> 00:10:18,880
<font color="#E5E5E5">the second attempt he then created kind</font>

261
00:10:16,720 --> 00:10:20,980
<font color="#E5E5E5">of some parsing to detect auto-generated</font>

262
00:10:18,880 --> 00:10:24,040
zones and the idea<font color="#E5E5E5"> was that if he finds</font>

263
00:10:20,980 --> 00:10:26,290
<font color="#CCCCCC">one that's responds</font><font color="#E5E5E5"> and then three</font>

264
00:10:24,040 --> 00:10:28,150
others<font color="#E5E5E5"> nearby then he considers that</font><font color="#CCCCCC"> to</font>

265
00:10:26,290 --> 00:10:30,219
be a dynamically generated zone and he

266
00:10:28,150 --> 00:10:32,890
ignores the rest of that zone moves<font color="#E5E5E5"> on</font>

267
00:10:30,220 --> 00:10:36,160
<font color="#CCCCCC">so we ran a script for three days he got</font>

268
00:10:32,890 --> 00:10:37,810
<font color="#CCCCCC">one</font><font color="#E5E5E5"> point six million records now it's</font>

269
00:10:36,160 --> 00:10:41,260
important to<font color="#E5E5E5"> note that there</font><font color="#CCCCCC"> are not all</font>

270
00:10:37,810 --> 00:10:44,500
DNS servers<font color="#E5E5E5"> are RFC</font><font color="#CCCCCC"> 80 20 compliant so</font>

271
00:10:41,260 --> 00:10:46,510
this is<font color="#E5E5E5"> not a foolproof way</font><font color="#CCCCCC"> to you know</font>

272
00:10:44,500 --> 00:10:50,230
<font color="#E5E5E5">search the whole space there is some</font>

273
00:10:46,510 --> 00:10:51,700
limitations<font color="#E5E5E5"> in this and what</font><font color="#CCCCCC"> Tobias then</font>

274
00:10:50,230 --> 00:10:53,500
did is he came up with<font color="#CCCCCC"> a way</font><font color="#E5E5E5"> of seeding</font>

275
00:10:51,700 --> 00:10:55,540
<font color="#E5E5E5">so where do you start from an IP version</font>

276
00:10:53,500 --> 00:10:58,510
6 so we looked<font color="#E5E5E5"> at routing information</font>

277
00:10:55,540 --> 00:11:01,449
from route views and ripe<font color="#E5E5E5"> NCC and then</font>

278
00:10:58,510 --> 00:11:03,640
he carves out all the advertised IP

279
00:11:01,450 --> 00:11:05,200
version 6 networks<font color="#E5E5E5"> and used them</font><font color="#CCCCCC"> as</font>

280
00:11:03,640 --> 00:11:07,180
starting points to start looking for

281
00:11:05,200 --> 00:11:08,500
<font color="#E5E5E5">reverse DNS entries within those</font>

282
00:11:07,180 --> 00:11:10,540
advertised networks<font color="#E5E5E5"> so</font>

283
00:11:08,500 --> 00:11:12,430
of doing<font color="#CCCCCC"> the whole</font><font color="#E5E5E5"> IP version 6</font><font color="#CCCCCC"> just</font>

284
00:11:10,540 --> 00:11:15,459
<font color="#E5E5E5">look at what's advertised and then drill</font>

285
00:11:12,430 --> 00:11:18,189
down<font color="#CCCCCC"> from there so</font><font color="#E5E5E5"> in third attempt</font><font color="#CCCCCC"> I</font>

286
00:11:15,460 --> 00:11:21,400
<font color="#E5E5E5">ran his script ran for 70</font><font color="#CCCCCC"> hours</font><font color="#E5E5E5"> he were</font>

287
00:11:18,190 --> 00:11:24,160
at 80 threads and he managed<font color="#CCCCCC"> to find 5.3</font>

288
00:11:21,400 --> 00:11:25,569
million records<font color="#E5E5E5"> and then in his fourth</font>

289
00:11:24,160 --> 00:11:27,640
attempt he tried to scale it even faster

290
00:11:25,570 --> 00:11:30,580
<font color="#CCCCCC">by</font><font color="#E5E5E5"> running more threads and he ran 400</font>

291
00:11:27,640 --> 00:11:33,520
threads<font color="#CCCCCC"> and it</font><font color="#E5E5E5"> ran for 22 hours</font><font color="#CCCCCC"> but he</font>

292
00:11:30,580 --> 00:11:35,320
<font color="#E5E5E5">only found 2.2 million and the limit</font>

293
00:11:33,520 --> 00:11:37,150
that he<font color="#E5E5E5"> reached is that he found out</font>

294
00:11:35,320 --> 00:11:39,700
<font color="#CCCCCC">that he was</font><font color="#E5E5E5"> only using one IP</font><font color="#CCCCCC"> address on</font>

295
00:11:37,150 --> 00:11:42,250
<font color="#CCCCCC">this</font><font color="#E5E5E5"> supercomputer</font><font color="#CCCCCC"> and his server ran</font>

296
00:11:39,700 --> 00:11:43,990
out<font color="#CCCCCC"> of sockets</font><font color="#E5E5E5"> so when I saw this I</font>

297
00:11:42,250 --> 00:11:45,460
figured this must be a good<font color="#E5E5E5"> case for you</font>

298
00:11:43,990 --> 00:11:47,170
think functions at<font color="#CCCCCC"> the service because</font>

299
00:11:45,460 --> 00:11:48,460
I'm<font color="#CCCCCC"> running</font><font color="#E5E5E5"> code it's running on all</font>

300
00:11:47,170 --> 00:11:50,380
these different<font color="#CCCCCC"> servers all over the</font>

301
00:11:48,460 --> 00:11:54,310
place<font color="#CCCCCC"> so maybe I</font><font color="#E5E5E5"> can kind of overcome</font>

302
00:11:50,380 --> 00:11:56,260
this limitation<font color="#E5E5E5"> that he</font><font color="#CCCCCC"> faced so I took</font>

303
00:11:54,310 --> 00:11:58,689
a look<font color="#E5E5E5"> at this code they released and</font>

304
00:11:56,260 --> 00:12:00,790
basically it's doing W get curl to get

305
00:11:58,690 --> 00:12:02,710
the information<font color="#CCCCCC"> using bgp dump to carve</font>

306
00:12:00,790 --> 00:12:04,959
out<font color="#CCCCCC"> all those IP version 6 networks and</font>

307
00:12:02,710 --> 00:12:08,530
then some sort in parallel and<font color="#CCCCCC"> then some</font>

308
00:12:04,960 --> 00:12:11,320
<font color="#E5E5E5">Python scripts to enumerate the</font><font color="#CCCCCC"> DMS so</font>

309
00:12:08,530 --> 00:12:12,790
my plan<font color="#CCCCCC"> so then at the end</font><font color="#E5E5E5"> of his talk</font>

310
00:12:11,320 --> 00:12:14,800
someone asked him<font color="#E5E5E5"> where's this data set</font>

311
00:12:12,790 --> 00:12:16,240
and he didn't release<font color="#CCCCCC"> it so he just said</font>

312
00:12:14,800 --> 00:12:18,699
<font color="#CCCCCC">it's stored in</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> distributed manner</font>

313
00:12:16,240 --> 00:12:20,920
across<font color="#E5E5E5"> lots of DNS service so my plan</font>

314
00:12:18,700 --> 00:12:22,720
<font color="#CCCCCC">was to</font><font color="#E5E5E5"> kind of come</font><font color="#CCCCCC"> up with</font><font color="#E5E5E5"> a way to get</font>

315
00:12:20,920 --> 00:12:25,420
same data set so I could<font color="#E5E5E5"> start to</font><font color="#CCCCCC"> look</font>

316
00:12:22,720 --> 00:12:27,460
at<font color="#E5E5E5"> some</font><font color="#CCCCCC"> more interesting</font><font color="#E5E5E5"> DNS entries</font>

317
00:12:25,420 --> 00:12:28,750
<font color="#E5E5E5">that</font><font color="#CCCCCC"> are out there so gonna</font><font color="#E5E5E5"> follow the</font>

318
00:12:27,460 --> 00:12:31,480
same steps download the routing

319
00:12:28,750 --> 00:12:34,380
<font color="#E5E5E5">information</font><font color="#CCCCCC"> pars it get the IP version</font><font color="#E5E5E5"> 6</font>

320
00:12:31,480 --> 00:12:36,910
addresses<font color="#E5E5E5"> start and numerating and go on</font>

321
00:12:34,380 --> 00:12:39,490
so this<font color="#E5E5E5"> is kind of the architecture of</font>

322
00:12:36,910 --> 00:12:41,949
<font color="#E5E5E5">the plan that I had I have a get dated</font>

323
00:12:39,490 --> 00:12:44,110
<font color="#E5E5E5">up py script can go and download all the</font>

324
00:12:41,950 --> 00:12:45,730
latest routing information positive

325
00:12:44,110 --> 00:12:47,650
running through<font color="#CCCCCC"> BGP dump write it</font><font color="#E5E5E5"> all</font>

326
00:12:45,730 --> 00:12:48,970
out<font color="#E5E5E5"> to a text file then I run start</font>

327
00:12:47,650 --> 00:12:50,439
workers and start workers<font color="#E5E5E5"> it's just</font>

328
00:12:48,970 --> 00:12:52,180
gonna<font color="#E5E5E5"> start triggering lambda workers</font>

329
00:12:50,440 --> 00:12:54,310
and every time it finds<font color="#E5E5E5"> a no error</font>

330
00:12:52,180 --> 00:12:56,199
response<font color="#E5E5E5"> from a DNS server in a certain</font>

331
00:12:54,310 --> 00:12:58,959
<font color="#E5E5E5">zone it's just gonna spawn itself again</font>

332
00:12:56,200 --> 00:13:00,640
<font color="#CCCCCC">and this</font><font color="#E5E5E5"> is because in a doriath lambda</font>

333
00:12:58,960 --> 00:13:02,710
you have a time limited window of<font color="#E5E5E5"> which</font>

334
00:13:00,640 --> 00:13:04,569
your script can run so the maximum<font color="#E5E5E5"> you</font>

335
00:13:02,710 --> 00:13:07,540
can set is<font color="#E5E5E5"> 5 minutes so if</font><font color="#CCCCCC"> you're</font>

336
00:13:04,570 --> 00:13:08,980
<font color="#E5E5E5">enumerated a DNS entry zone and it's</font>

337
00:13:07,540 --> 00:13:10,540
running for<font color="#E5E5E5"> more than</font><font color="#CCCCCC"> five</font><font color="#E5E5E5"> minutes it's</font>

338
00:13:08,980 --> 00:13:11,860
<font color="#E5E5E5">going to die and then you've lost that</font>

339
00:13:10,540 --> 00:13:13,900
state you<font color="#E5E5E5"> don't know if there's anything</font>

340
00:13:11,860 --> 00:13:15,400
further down in there so<font color="#CCCCCC"> making a</font>

341
00:13:13,900 --> 00:13:16,390
recursive<font color="#CCCCCC"> call to</font><font color="#E5E5E5"> start again</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> the</font>

342
00:13:15,400 --> 00:13:18,970
<font color="#E5E5E5">same information</font><font color="#CCCCCC"> that's a way to</font>

343
00:13:16,390 --> 00:13:20,170
overcome<font color="#CCCCCC"> that and if I find any PTR</font>

344
00:13:18,970 --> 00:13:21,970
records I'm just<font color="#E5E5E5"> going to store them</font>

345
00:13:20,170 --> 00:13:26,079
<font color="#CCCCCC">into DynamoDB</font><font color="#E5E5E5"> and I</font>

346
00:13:21,970 --> 00:13:28,389
use the web<font color="#CCCCCC"> interface</font><font color="#E5E5E5"> to look at it so I</font>

347
00:13:26,079 --> 00:13:31,089
ran my script<font color="#CCCCCC"> I got all the</font><font color="#E5E5E5"> data</font>

348
00:13:28,389 --> 00:13:33,399
I ran the start workers and I triggered

349
00:13:31,089 --> 00:13:36,490
all the workers<font color="#E5E5E5"> to start in about five</font>

350
00:13:33,399 --> 00:13:38,139
minutes in 48 seconds<font color="#CCCCCC"> which</font><font color="#E5E5E5"> it seems</font>

351
00:13:36,490 --> 00:13:40,959
really fast and but I only managed to

352
00:13:38,139 --> 00:13:42,339
get<font color="#CCCCCC"> 250,000</font><font color="#E5E5E5"> records so scratching my</font>

353
00:13:40,959 --> 00:13:44,138
head figuring out what what happened

354
00:13:42,339 --> 00:13:45,879
<font color="#CCCCCC">what went</font><font color="#E5E5E5"> wrong with this and</font><font color="#CCCCCC"> what I</font>

355
00:13:44,139 --> 00:13:47,980
realized is that<font color="#E5E5E5"> I didn't scale up</font>

356
00:13:45,879 --> 00:13:50,740
dynamic<font color="#E5E5E5"> DB enough all right so I had all</font>

357
00:13:47,980 --> 00:13:53,290
these like maybe<font color="#CCCCCC"> 200,000</font><font color="#E5E5E5"> workers all</font>

358
00:13:50,740 --> 00:13:55,839
<font color="#CCCCCC">going at</font><font color="#E5E5E5"> one time all turn around</font><font color="#CCCCCC"> dynamo</font>

359
00:13:53,290 --> 00:13:57,879
DB and dynamo DB is just limiting it to

360
00:13:55,839 --> 00:14:00,850
<font color="#CCCCCC">a certain limit to say nope you can only</font>

361
00:13:57,879 --> 00:14:02,949
<font color="#E5E5E5">write you know 100 items per per second</font>

362
00:14:00,850 --> 00:14:06,279
<font color="#E5E5E5">I'm trying to write</font><font color="#CCCCCC"> like 300,000</font><font color="#E5E5E5"> per</font>

363
00:14:02,949 --> 00:14:08,589
second<font color="#E5E5E5"> so I got a kind of scale it</font><font color="#CCCCCC"> down</font>

364
00:14:06,279 --> 00:14:11,470
and try<font color="#E5E5E5"> and figure out a way to more</font>

365
00:14:08,589 --> 00:14:13,779
scale the<font color="#E5E5E5"> back end so if you look at the</font>

366
00:14:11,470 --> 00:14:16,540
<font color="#E5E5E5">capacity calculator that dynamic DB has</font>

367
00:14:13,779 --> 00:14:21,040
if<font color="#E5E5E5"> you want to do like</font><font color="#CCCCCC"> basic</font><font color="#E5E5E5"> just some</font>

368
00:14:16,540 --> 00:14:22,990
rough numbers<font color="#CCCCCC"> I wanted to do 1500 writes</font>

369
00:14:21,040 --> 00:14:26,079
per second to<font color="#CCCCCC"> the database it would cost</font>

370
00:14:22,990 --> 00:14:29,110
me 800 US dollars a month<font color="#E5E5E5"> so it's</font>

371
00:14:26,079 --> 00:14:30,849
getting<font color="#E5E5E5"> a little bit expensive</font><font color="#CCCCCC"> so I did</font>

372
00:14:29,110 --> 00:14:33,910
my<font color="#E5E5E5"> first run and the improvements I came</font>

373
00:14:30,850 --> 00:14:37,720
up with<font color="#E5E5E5"> was that</font><font color="#CCCCCC"> I had to control</font><font color="#E5E5E5"> the</font>

374
00:14:33,910 --> 00:14:39,129
<font color="#CCCCCC">amount of scale that I have in my</font>

375
00:14:37,720 --> 00:14:40,389
functions I can't always<font color="#E5E5E5"> recall a</font>

376
00:14:39,129 --> 00:14:42,279
recursive function<font color="#E5E5E5"> I have</font><font color="#CCCCCC"> to kind of</font>

377
00:14:40,389 --> 00:14:44,439
slow it down<font color="#E5E5E5"> so I came</font><font color="#CCCCCC"> up with the timer</font>

378
00:14:42,279 --> 00:14:46,449
<font color="#CCCCCC">if you look in the AWS lambda they have</font>

379
00:14:44,439 --> 00:14:48,250
a context function you can<font color="#E5E5E5"> see how much</font>

380
00:14:46,449 --> 00:14:50,559
<font color="#E5E5E5">time is remaining in that script that</font>

381
00:14:48,250 --> 00:14:53,319
<font color="#E5E5E5">you're running so if I have like a</font>

382
00:14:50,559 --> 00:14:55,689
simple check that if there's 30 seconds

383
00:14:53,319 --> 00:14:57,128
or less remaining<font color="#E5E5E5"> then I take the</font>

384
00:14:55,689 --> 00:14:59,469
current state and<font color="#CCCCCC"> trigger a new worker</font>

385
00:14:57,129 --> 00:15:03,160
<font color="#E5E5E5">pass it off</font><font color="#CCCCCC"> to that</font><font color="#E5E5E5"> one so kind of slow</font>

386
00:14:59,470 --> 00:15:05,170
it down a<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> I also created a depth</font>

387
00:15:03,160 --> 00:15:07,329
<font color="#E5E5E5">search limit and the idea is that</font>

388
00:15:05,170 --> 00:15:08,979
<font color="#CCCCCC">instead of trying to search the whole IP</font>

389
00:15:07,329 --> 00:15:10,989
version 6<font color="#E5E5E5"> base I just search a little</font>

390
00:15:08,980 --> 00:15:12,399
<font color="#CCCCCC">bit down at one time and then I use all</font>

391
00:15:10,990 --> 00:15:14,170
<font color="#E5E5E5">that as a starting point to search</font><font color="#CCCCCC"> a</font>

392
00:15:12,399 --> 00:15:16,360
<font color="#E5E5E5">little</font><font color="#CCCCCC"> bit further more specific and</font>

393
00:15:14,170 --> 00:15:18,628
<font color="#CCCCCC">more specific</font><font color="#E5E5E5"> and then starting</font><font color="#CCCCCC"> the</font>

394
00:15:16,360 --> 00:15:21,550
worker slowly is to not kind<font color="#CCCCCC"> of overload</font>

395
00:15:18,629 --> 00:15:23,379
<font color="#E5E5E5">everything that's going on and a trick</font>

396
00:15:21,550 --> 00:15:25,029
with<font color="#E5E5E5"> the name ODB is that you can scale</font>

397
00:15:23,379 --> 00:15:26,550
it<font color="#E5E5E5"> up for when you need</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then you</font>

398
00:15:25,029 --> 00:15:28,660
can scale<font color="#CCCCCC"> it down for when you're not</font>

399
00:15:26,550 --> 00:15:30,459
<font color="#CCCCCC">when you don't</font><font color="#E5E5E5"> need that time so you can</font>

400
00:15:28,660 --> 00:15:31,779
only pay for when<font color="#E5E5E5"> it's scaled up and</font>

401
00:15:30,459 --> 00:15:33,089
<font color="#CCCCCC">then you can scale it back down and pay</font>

402
00:15:31,779 --> 00:15:35,669
a few<font color="#E5E5E5"> dollars</font>

403
00:15:33,089 --> 00:15:38,759
and the<font color="#E5E5E5"> web interface</font><font color="#CCCCCC"> for dynamo TV</font>

404
00:15:35,669 --> 00:15:41,369
which looks<font color="#CCCCCC"> like</font><font color="#E5E5E5"> this is quite clunky</font>

405
00:15:38,759 --> 00:15:42,479
<font color="#E5E5E5">and it usually</font><font color="#CCCCCC"> has</font><font color="#E5E5E5"> that pause button at</font>

406
00:15:41,369 --> 00:15:43,889
the top so whenever<font color="#E5E5E5"> you search for</font>

407
00:15:42,479 --> 00:15:47,309
<font color="#CCCCCC">something it searches and searches and</font>

408
00:15:43,889 --> 00:15:49,679
<font color="#E5E5E5">then it asks</font><font color="#CCCCCC"> you to</font><font color="#E5E5E5"> click resume and</font>

409
00:15:47,309 --> 00:15:52,679
it's not not<font color="#CCCCCC"> very</font><font color="#E5E5E5"> great so what did I</font>

410
00:15:49,679 --> 00:15:55,348
find<font color="#E5E5E5"> so I found a lot of kind of</font><font color="#CCCCCC"> KBM</font>

411
00:15:52,679 --> 00:15:57,749
<font color="#E5E5E5">like management DNS entries that were</font>

412
00:15:55,349 --> 00:16:02,099
out<font color="#CCCCCC"> there so</font><font color="#E5E5E5"> you can see things</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> the</font>

413
00:15:57,749 --> 00:16:04,379
if me<font color="#E5E5E5"> i lo out of</font><font color="#CCCCCC"> bound</font><font color="#E5E5E5"> like Drac the</font>

414
00:16:02,099 --> 00:16:06,629
dell remote access controller<font color="#E5E5E5"> we find</font>

415
00:16:04,379 --> 00:16:10,469
them<font color="#E5E5E5"> on a lot of interesting sites so</font>

416
00:16:06,629 --> 00:16:12,839
things like<font color="#CCCCCC"> NIST gov is in there and</font>

417
00:16:10,469 --> 00:16:15,779
some like service providers they just

418
00:16:12,839 --> 00:16:19,169
have<font color="#CCCCCC"> like ESX servers all with their</font>

419
00:16:15,779 --> 00:16:23,579
<font color="#CCCCCC">ILO's with IP</font><font color="#E5E5E5"> version 6 and advertising</font>

420
00:16:19,169 --> 00:16:26,249
them<font color="#E5E5E5"> you know through</font><font color="#CCCCCC"> DNS records I also</font>

421
00:16:23,579 --> 00:16:29,248
looked<font color="#CCCCCC"> like did a search for dot mil and</font>

422
00:16:26,249 --> 00:16:32,039
I found some someone interesting<font color="#E5E5E5"> dot mil</font>

423
00:16:29,249 --> 00:16:35,039
addresses and gov gov you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> see like</font>

424
00:16:32,039 --> 00:16:36,769
routing<font color="#E5E5E5"> protocols</font><font color="#CCCCCC"> HS are P and V are PS</font>

425
00:16:35,039 --> 00:16:39,149
they see a lot<font color="#CCCCCC"> of network infrastructure</font>

426
00:16:36,769 --> 00:16:40,739
firewalls and<font color="#E5E5E5"> maybe some interesting</font>

427
00:16:39,149 --> 00:16:42,839
naming convention<font color="#CCCCCC"> that can give you a</font>

428
00:16:40,739 --> 00:16:44,609
clue<font color="#CCCCCC"> to what's</font><font color="#E5E5E5"> going on and what those</font>

429
00:16:42,839 --> 00:16:49,099
IP version 6 addresses are being used

430
00:16:44,609 --> 00:16:52,529
<font color="#E5E5E5">for I also managed</font><font color="#CCCCCC"> to find some</font>

431
00:16:49,099 --> 00:16:55,079
interesting<font color="#E5E5E5"> infrastructure out</font><font color="#CCCCCC"> there so</font>

432
00:16:52,529 --> 00:16:57,479
if you look<font color="#E5E5E5"> at like a clinics</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> big data</font>

433
00:16:55,079 --> 00:16:58,799
<font color="#E5E5E5">center provider they actually have site</font>

434
00:16:57,479 --> 00:17:00,239
site links between<font color="#E5E5E5"> all their data</font>

435
00:16:58,799 --> 00:17:02,419
<font color="#E5E5E5">centers and they both about a lot of</font>

436
00:17:00,239 --> 00:17:05,610
interconnectivity<font color="#E5E5E5"> and when you look at</font>

437
00:17:02,419 --> 00:17:08,609
the DNS entries you<font color="#E5E5E5"> can see not only</font>

438
00:17:05,609 --> 00:17:10,049
where like physiographically where those

439
00:17:08,609 --> 00:17:11,969
data centers<font color="#E5E5E5"> are and where those routers</font>

440
00:17:10,049 --> 00:17:13,559
are for the IP version<font color="#E5E5E5"> 6 but also the</font>

441
00:17:11,970 --> 00:17:15,749
clients who<font color="#CCCCCC"> are using those systems</font><font color="#E5E5E5"> so</font>

442
00:17:13,559 --> 00:17:18,209
that's kind quite interesting to kind of

443
00:17:15,749 --> 00:17:20,939
see that you have like<font color="#E5E5E5"> CloudFlare and</font>

444
00:17:18,209 --> 00:17:22,289
<font color="#E5E5E5">oracle box and twitter and vmware</font><font color="#CCCCCC"> and</font>

445
00:17:20,939 --> 00:17:24,659
<font color="#CCCCCC">netflix you can kind of see all their</font>

446
00:17:22,289 --> 00:17:28,169
customers you<font color="#E5E5E5"> can also see kind of</font>

447
00:17:24,659 --> 00:17:30,330
loopback addresses for routing devices

448
00:17:28,169 --> 00:17:34,019
<font color="#E5E5E5">right so if you look</font><font color="#CCCCCC"> at networking</font>

449
00:17:30,330 --> 00:17:35,639
devices<font color="#E5E5E5"> usually have a loop</font><font color="#CCCCCC"> 0 of L o</font><font color="#E5E5E5"> 0</font>

450
00:17:34,019 --> 00:17:40,529
and that's<font color="#E5E5E5"> like the management</font><font color="#CCCCCC"> interface</font>

451
00:17:35,639 --> 00:17:43,229
<font color="#CCCCCC">for that</font><font color="#E5E5E5"> network device</font><font color="#CCCCCC"> also managed to</font>

452
00:17:40,529 --> 00:17:45,700
find the kind of<font color="#E5E5E5"> d-wave quantum computer</font>

453
00:17:43,230 --> 00:17:48,940
that<font color="#CCCCCC"> nasa</font><font color="#E5E5E5"> uses so they have</font>

454
00:17:45,700 --> 00:17:51,430
DNS entries in<font color="#CCCCCC"> therefore I guess they</font>

455
00:17:48,940 --> 00:17:52,390
have<font color="#CCCCCC"> like a firewall a</font><font color="#E5E5E5"> monitor a QC I</font>

456
00:17:51,430 --> 00:17:56,410
don't know what those<font color="#CCCCCC"> things</font><font color="#E5E5E5"> are but</font>

457
00:17:52,390 --> 00:18:01,030
<font color="#CCCCCC">they look kind of</font><font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> alright so</font>

458
00:17:56,410 --> 00:18:03,970
in summary<font color="#E5E5E5"> I've managed to replicate two</font>

459
00:18:01,030 --> 00:18:06,040
biases work<font color="#E5E5E5"> using functions as a service</font>

460
00:18:03,970 --> 00:18:08,140
<font color="#E5E5E5">to</font><font color="#CCCCCC"> do it for much cheaper without access</font>

461
00:18:06,040 --> 00:18:11,530
to<font color="#E5E5E5"> supercomputers</font><font color="#CCCCCC"> I didn't receive any</font>

462
00:18:08,140 --> 00:18:14,830
abuse emails<font color="#E5E5E5"> because I guess nobody</font>

463
00:18:11,530 --> 00:18:17,070
really<font color="#E5E5E5"> can tie it back</font><font color="#CCCCCC"> between me using</font>

464
00:18:14,830 --> 00:18:20,379
<font color="#CCCCCC">Amazon service to do all this DNS</font>

465
00:18:17,070 --> 00:18:23,139
<font color="#CCCCCC">recursive queries versus you know Tobias</font>

466
00:18:20,380 --> 00:18:24,550
<font color="#CCCCCC">for</font><font color="#E5E5E5"> using an</font><font color="#CCCCCC"> isp using his</font><font color="#E5E5E5"> university</font>

467
00:18:23,140 --> 00:18:28,240
and<font color="#E5E5E5"> everyone kind of knows</font><font color="#CCCCCC"> word of</font>

468
00:18:24,550 --> 00:18:31,210
report<font color="#E5E5E5"> then to some of the things</font><font color="#CCCCCC"> i</font>

469
00:18:28,240 --> 00:18:32,980
<font color="#E5E5E5">learned were to kind of avoid using a</font>

470
00:18:31,210 --> 00:18:35,410
recursive<font color="#CCCCCC"> function all</font><font color="#E5E5E5"> the time so when</font>

471
00:18:32,980 --> 00:18:37,600
<font color="#CCCCCC">i was practicing this when</font><font color="#E5E5E5"> i was trying</font>

472
00:18:35,410 --> 00:18:39,970
out what<font color="#E5E5E5"> i was</font><font color="#CCCCCC"> doing</font><font color="#E5E5E5"> i basically ended</font>

473
00:18:37,600 --> 00:18:42,490
up recursing too much and spawning up

474
00:18:39,970 --> 00:18:44,260
<font color="#CCCCCC">tons</font><font color="#E5E5E5"> and tons of workers and so</font><font color="#CCCCCC"> i kind</font>

475
00:18:42,490 --> 00:18:48,280
of got<font color="#E5E5E5"> to learn how to control that</font><font color="#CCCCCC"> and</font>

476
00:18:44,260 --> 00:18:49,660
build<font color="#E5E5E5"> something in place and in terms of</font>

477
00:18:48,280 --> 00:18:52,360
the<font color="#CCCCCC"> backend</font><font color="#E5E5E5"> when I first started I used</font>

478
00:18:49,660 --> 00:18:55,440
elasticsearch<font color="#CCCCCC"> but that didn't scale very</font>

479
00:18:52,360 --> 00:18:58,209
<font color="#CCCCCC">well it didn't scale on the</font><font color="#E5E5E5"> 2gig of RAM</font>

480
00:18:55,440 --> 00:19:01,390
<font color="#CCCCCC">like</font><font color="#E5E5E5"> digitalocean server that I used and</font>

481
00:18:58,210 --> 00:19:05,500
using<font color="#E5E5E5"> Amazon kind of hosted service for</font>

482
00:19:01,390 --> 00:19:06,820
<font color="#E5E5E5">elasticsearch just was too expensive so</font>

483
00:19:05,500 --> 00:19:08,890
I<font color="#CCCCCC"> think in order to kind of take this a</font>

484
00:19:06,820 --> 00:19:10,810
bit<font color="#CCCCCC"> further it's</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> getting</font><font color="#E5E5E5"> more data</font>

485
00:19:08,890 --> 00:19:12,870
for<font color="#CCCCCC"> seedings so looking at maybe</font><font color="#E5E5E5"> like</font>

486
00:19:10,810 --> 00:19:15,010
trusted<font color="#CCCCCC"> sex they have the hard cider</font>

487
00:19:12,870 --> 00:19:16,540
<font color="#CCCCCC">which is very</font><font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of gets</font>

488
00:19:15,010 --> 00:19:18,040
same<font color="#CCCCCC"> idea like getting more routing</font>

489
00:19:16,540 --> 00:19:20,530
information<font color="#CCCCCC"> figuring</font><font color="#E5E5E5"> out what's</font>

490
00:19:18,040 --> 00:19:22,540
advertised and then using that that<font color="#E5E5E5"> data</font>

491
00:19:20,530 --> 00:19:25,120
may<font color="#CCCCCC"> be looking for some more public</font>

492
00:19:22,540 --> 00:19:27,520
<font color="#CCCCCC">datasets as well the good</font><font color="#E5E5E5"> thing with</font>

493
00:19:25,120 --> 00:19:29,530
dynamic DB is you can set up triggers<font color="#CCCCCC"> so</font>

494
00:19:27,520 --> 00:19:31,030
when there's a new<font color="#CCCCCC"> write into dynamic</font><font color="#E5E5E5"> TV</font>

495
00:19:29,530 --> 00:19:32,740
<font color="#E5E5E5">you can trigger another lambda function</font>

496
00:19:31,030 --> 00:19:34,240
so<font color="#E5E5E5"> you could trigger another lambda</font>

497
00:19:32,740 --> 00:19:36,370
function to maybe do a port scan or

498
00:19:34,240 --> 00:19:38,830
maybe<font color="#CCCCCC"> look up in like</font><font color="#E5E5E5"> census mr.</font><font color="#CCCCCC"> lecoeur</font>

499
00:19:36,370 --> 00:19:39,909
<font color="#E5E5E5">or like show</font><font color="#CCCCCC"> dan to try and figure out</font>

500
00:19:38,830 --> 00:19:43,689
<font color="#E5E5E5">what's the publicly</font><font color="#CCCCCC"> available</font>

501
00:19:39,910 --> 00:19:45,730
information on that IP version 6<font color="#CCCCCC"> and the</font>

502
00:19:43,690 --> 00:19:48,340
trick with AWS lambda is that they give

503
00:19:45,730 --> 00:19:49,990
you a free those free 1 million

504
00:19:48,340 --> 00:19:52,149
executions which you have<font color="#CCCCCC"> or per region</font>

505
00:19:49,990 --> 00:19:53,230
<font color="#E5E5E5">so if you spread your function out</font><font color="#CCCCCC"> and</font>

506
00:19:52,150 --> 00:19:55,030
your workload across different regions

507
00:19:53,230 --> 00:19:57,240
<font color="#CCCCCC">you can</font><font color="#E5E5E5"> maximize getting enough free</font>

508
00:19:55,030 --> 00:19:57,240
<font color="#CCCCCC">time</font>

509
00:20:01,260 --> 00:20:05,260
<font color="#CCCCCC">okay so if you find</font><font color="#E5E5E5"> this interesting</font><font color="#CCCCCC"> I'd</font>

510
00:20:03,940 --> 00:20:07,380
highly recommend<font color="#E5E5E5"> you</font><font color="#CCCCCC"> check out some</font>

511
00:20:05,260 --> 00:20:10,120
<font color="#CCCCCC">previous talks on the left we've gone 16</font>

512
00:20:07,380 --> 00:20:12,010
<font color="#E5E5E5">milliseconds by rich Jones</font><font color="#CCCCCC"> it's also</font>

513
00:20:10,120 --> 00:20:14,199
<font color="#E5E5E5">some talks that happened at blackhat</font>

514
00:20:12,010 --> 00:20:18,400
last year and this year there's a talk

515
00:20:14,200 --> 00:20:21,310
tomorrow<font color="#CCCCCC"> at blackhat</font><font color="#E5E5E5"> and another talk at</font>

516
00:20:18,400 --> 00:20:23,380
<font color="#E5E5E5">Def Con</font><font color="#CCCCCC"> on micro services</font><font color="#E5E5E5"> and then I'll</font>

517
00:20:21,310 --> 00:20:24,790
be speaking<font color="#E5E5E5"> again on Def Con on Saturday</font>

518
00:20:23,380 --> 00:20:27,130
<font color="#CCCCCC">but I'm going to</font><font color="#E5E5E5"> be talking about two</font>

519
00:20:24,790 --> 00:20:28,629
different attacks<font color="#E5E5E5"> so one is using just</font>

520
00:20:27,130 --> 00:20:33,940
creating a distributed<font color="#CCCCCC"> denial-of-service</font>

521
00:20:28,630 --> 00:20:38,140
attack and then<font color="#CCCCCC"> brute forcing SMS OTP so</font>

522
00:20:33,940 --> 00:20:39,490
if you find<font color="#E5E5E5"> this interesting</font><font color="#CCCCCC"> some more</font>

523
00:20:38,140 --> 00:20:41,020
<font color="#E5E5E5">things that might kind of spark your</font>

524
00:20:39,490 --> 00:20:45,280
interest<font color="#E5E5E5"> and kind</font><font color="#CCCCCC"> of looking into this</font>

525
00:20:41,020 --> 00:20:48,370
this area is<font color="#E5E5E5"> AWS also has a kind</font><font color="#CCCCCC"> of high</font>

526
00:20:45,280 --> 00:20:52,210
memory instance for lambda<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is 1.5</font>

527
00:20:48,370 --> 00:20:54,370
<font color="#E5E5E5">gigs in memory and</font><font color="#CCCCCC"> you can run and two</font>

528
00:20:52,210 --> 00:20:56,890
hundred<font color="#CCCCCC"> and sixty-six thousand seconds</font>

529
00:20:54,370 --> 00:20:58,989
<font color="#E5E5E5">for free every month in this high memory</font>

530
00:20:56,890 --> 00:21:01,060
environment<font color="#E5E5E5"> and if you want to look</font><font color="#CCCCCC"> more</font>

531
00:20:58,990 --> 00:21:03,820
into<font color="#E5E5E5"> like the</font><font color="#CCCCCC"> china hosting there is a</font>

532
00:21:01,060 --> 00:21:05,889
<font color="#E5E5E5">Alibaba cloud</font><font color="#CCCCCC"> allien</font><font color="#E5E5E5"> but you need a plus</font>

533
00:21:03,820 --> 00:21:08,200
<font color="#CCCCCC">86</font><font color="#E5E5E5"> mobile number and you need to go and</font>

534
00:21:05,890 --> 00:21:10,030
<font color="#E5E5E5">register on the China</font><font color="#CCCCCC"> website and then I</font>

535
00:21:08,200 --> 00:21:11,500
think<font color="#CCCCCC"> IBM's</font><font color="#E5E5E5"> open</font><font color="#CCCCCC"> whisk with the docker</font>

536
00:21:10,030 --> 00:21:12,940
support is very interesting because<font color="#CCCCCC"> you</font>

537
00:21:11,500 --> 00:21:17,440
<font color="#E5E5E5">get much more control over the</font>

538
00:21:12,940 --> 00:21:19,090
environment<font color="#E5E5E5"> that's running yeah yeah and</font>

539
00:21:17,440 --> 00:21:23,610
<font color="#E5E5E5">if you want</font><font color="#CCCCCC"> to try</font><font color="#E5E5E5"> it out</font><font color="#CCCCCC"> on your own I</font>

540
00:21:19,090 --> 00:21:25,209
<font color="#E5E5E5">recommend looking at this github</font>

541
00:21:23,610 --> 00:21:28,080
repository on the right because<font color="#E5E5E5"> it's</font>

542
00:21:25,210 --> 00:21:30,340
<font color="#E5E5E5">used what's used in</font><font color="#CCCCCC"> a play with</font><font color="#E5E5E5"> docker</font>

543
00:21:28,080 --> 00:21:32,080
<font color="#E5E5E5">if you want to if you don't want</font><font color="#CCCCCC"> to play</font>

544
00:21:30,340 --> 00:21:35,560
<font color="#CCCCCC">for a service</font><font color="#E5E5E5"> and you want to try it out</font>

545
00:21:32,080 --> 00:21:37,780
yourself<font color="#CCCCCC"> so I hope that</font><font color="#E5E5E5"> it part of my</font>

546
00:21:35,560 --> 00:21:40,810
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> that I was able to</font><font color="#E5E5E5"> kind of get</font>

547
00:21:37,780 --> 00:21:42,129
across the message that my interest in

548
00:21:40,810 --> 00:21:43,480
function of the service and try and

549
00:21:42,130 --> 00:21:45,880
generate some<font color="#CCCCCC"> of your interest it kind</font>

550
00:21:43,480 --> 00:21:48,300
of<font color="#E5E5E5"> sparked more security projects in</font>

551
00:21:45,880 --> 00:21:50,470
this space and scale all the<font color="#E5E5E5"> things and</font>

552
00:21:48,300 --> 00:21:52,840
that's the end<font color="#E5E5E5"> of my talk and I'm going</font>

553
00:21:50,470 --> 00:21:56,790
<font color="#CCCCCC">to be putting</font><font color="#E5E5E5"> up my slides and some code</font>

554
00:21:52,840 --> 00:21:56,790
examples<font color="#CCCCCC"> as a</font><font color="#E5E5E5"> github link below</font>

555
00:22:01,500 --> 00:22:07,960
<font color="#CCCCCC">when do you want to take questions</font><font color="#E5E5E5"> you</font>

556
00:22:03,730 --> 00:22:10,930
have<font color="#CCCCCC"> ten</font><font color="#E5E5E5"> minutes more yes any any</font>

557
00:22:07,960 --> 00:22:26,470
<font color="#E5E5E5">questions</font><font color="#CCCCCC"> found you can raise</font><font color="#E5E5E5"> your hands</font>

558
00:22:10,930 --> 00:22:28,450
<font color="#E5E5E5">again</font><font color="#CCCCCC"> I bring the mic to you yeah if you</font>

559
00:22:26,470 --> 00:22:31,000
are<font color="#E5E5E5"> doing some</font><font color="#CCCCCC"> of these things</font><font color="#E5E5E5"> with AWS</font>

560
00:22:28,450 --> 00:22:32,380
in terms of trying<font color="#E5E5E5"> to scan other sites</font>

561
00:22:31,000 --> 00:22:34,630
and so on aw it doesn't particularly

562
00:22:32,380 --> 00:22:36,970
like<font color="#CCCCCC"> you doing these</font><font color="#E5E5E5"> kind of things</font><font color="#CCCCCC"> yes</font>

563
00:22:34,630 --> 00:22:38,190
so they'll shut your account down and

564
00:22:36,970 --> 00:22:40,960
they'll do all kinds<font color="#CCCCCC"> and</font><font color="#E5E5E5"> stuff like that</font>

565
00:22:38,190 --> 00:22:43,240
<font color="#E5E5E5">so you have to be a little bit careful</font>

566
00:22:40,960 --> 00:22:46,180
<font color="#E5E5E5">yeah I mean you raise a</font><font color="#CCCCCC"> really good</font>

567
00:22:43,240 --> 00:22:48,040
point<font color="#E5E5E5"> if you look at using ec2 instances</font>

568
00:22:46,180 --> 00:22:49,630
and Amazon you always get the abuse

569
00:22:48,040 --> 00:22:51,970
emails because you don't<font color="#E5E5E5"> sign up for</font>

570
00:22:49,630 --> 00:22:54,880
like<font color="#E5E5E5"> pen testing requests which is what</font>

571
00:22:51,970 --> 00:22:57,190
I always<font color="#CCCCCC"> end up doing but if but I</font>

572
00:22:54,880 --> 00:23:00,850
didn't get any<font color="#CCCCCC"> of those</font><font color="#E5E5E5"> similar abuse</font>

573
00:22:57,190 --> 00:23:02,980
kind of reports<font color="#E5E5E5"> using lambda so maybe</font>

574
00:23:00,850 --> 00:23:07,230
there's an<font color="#CCCCCC"> opportunity for Amazon to</font>

575
00:23:02,980 --> 00:23:07,230
<font color="#E5E5E5">look deeper into monitoring lambda</font>

576
00:23:12,030 --> 00:23:15,360
questions<font color="#CCCCCC"> anymore</font>

577
00:23:20,460 --> 00:23:28,930
fine<font color="#CCCCCC"> Thank</font><font color="#E5E5E5"> You Ryan</font><font color="#CCCCCC"> okay thanks</font>

578
00:23:23,870 --> 00:23:28,929
[Applause]

