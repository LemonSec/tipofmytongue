1
00:00:00,000 --> 00:00:04,799
<font color="#CCCCCC">hi-oh</font><font color="#E5E5E5"> this is a talk about check please</font>

2
00:00:02,340 --> 00:00:06,660
<font color="#E5E5E5">a new repository we're releasing it's on</font>

3
00:00:04,799 --> 00:00:12,000
<font color="#CCCCCC">implant security which we</font><font color="#E5E5E5"> believe</font><font color="#CCCCCC"> to be</font>

4
00:00:06,660 --> 00:00:14,190
<font color="#E5E5E5">the future</font><font color="#CCCCCC"> of sandbox detection my name</font>

5
00:00:12,000 --> 00:00:15,780
is<font color="#CCCCCC"> Brandon Arvin Auggie I'm an associate</font>

6
00:00:14,190 --> 00:00:17,160
consultant<font color="#CCCCCC"> at mandiant and while I've</font>

7
00:00:15,780 --> 00:00:19,410
been<font color="#E5E5E5"> there</font>

8
00:00:17,160 --> 00:00:21,300
I guess Chris added to my slide a little

9
00:00:19,410 --> 00:00:22,710
<font color="#E5E5E5">bit I've</font><font color="#CCCCCC"> been doing red teaming some</font>

10
00:00:21,300 --> 00:00:25,470
reverse engineering<font color="#E5E5E5"> and tool</font><font color="#CCCCCC"> development</font>

11
00:00:22,710 --> 00:00:27,689
<font color="#E5E5E5">and before</font><font color="#CCCCCC"> our shell reverse engineer</font>

12
00:00:25,470 --> 00:00:31,830
<font color="#E5E5E5">and before that I studied computer</font>

13
00:00:27,689 --> 00:00:33,899
science<font color="#E5E5E5"> at Vanderbilt University</font><font color="#CCCCCC"> my name</font>

14
00:00:31,830 --> 00:00:36,540
<font color="#CCCCCC">is Chris hunter</font><font color="#E5E5E5"> I'm a previous sysadmin</font>

15
00:00:33,899 --> 00:00:39,540
<font color="#CCCCCC">turned red teamer</font><font color="#E5E5E5"> I'm in charge of</font>

16
00:00:36,540 --> 00:00:41,850
<font color="#CCCCCC">mandaeans</font><font color="#E5E5E5"> West Coast for all of our red</font>

17
00:00:39,540 --> 00:00:43,410
team<font color="#CCCCCC"> and I'm an open source developer</font>

18
00:00:41,850 --> 00:00:47,960
<font color="#CCCCCC">working a</font><font color="#E5E5E5"> variety of different projects</font>

19
00:00:43,410 --> 00:00:51,538
<font color="#E5E5E5">that</font><font color="#CCCCCC"> I like to work</font><font color="#E5E5E5"> on in my spare time</font>

20
00:00:47,960 --> 00:00:52,890
<font color="#E5E5E5">so let's start with the pop quiz we've</font>

21
00:00:51,539 --> 00:00:55,020
evolved from one answer<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> other</font>

22
00:00:52,890 --> 00:00:56,520
<font color="#E5E5E5">that's that's your head which is more</font>

23
00:00:55,020 --> 00:00:58,829
<font color="#E5E5E5">effective at stopping malicious</font>

24
00:00:56,520 --> 00:01:01,559
applications from executing is it black

25
00:00:58,829 --> 00:01:04,519
listing or white listing anyone can

26
00:01:01,559 --> 00:01:06,929
raise their hand<font color="#E5E5E5"> and answer yes</font>

27
00:01:04,519 --> 00:01:07,909
<font color="#E5E5E5">excellent answer it couldn't of said it</font>

28
00:01:06,930 --> 00:01:09,900
better myself

29
00:01:07,909 --> 00:01:12,210
application whitelisting is how we've

30
00:01:09,900 --> 00:01:14,760
evolved rather than trying to<font color="#E5E5E5"> figure</font><font color="#CCCCCC"> out</font>

31
00:01:12,210 --> 00:01:16,770
every single malicious application<font color="#E5E5E5"> that</font>

32
00:01:14,760 --> 00:01:18,450
we don't want to run<font color="#E5E5E5"> we've started to</font>

33
00:01:16,770 --> 00:01:20,670
whitelist those that we do want to run

34
00:01:18,450 --> 00:01:23,250
we disallow<font color="#E5E5E5"> everything else and we're</font>

35
00:01:20,670 --> 00:01:25,020
seeing this new system integrated<font color="#E5E5E5"> into</font>

36
00:01:23,250 --> 00:01:27,750
Windows now with<font color="#E5E5E5"> a blocker and different</font>

37
00:01:25,020 --> 00:01:30,770
<font color="#E5E5E5">technologies as well remember</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> said</font>

38
00:01:27,750 --> 00:01:33,619
that<font color="#E5E5E5"> it's gonna be an important point</font>

39
00:01:30,770 --> 00:01:35,460
let's<font color="#CCCCCC"> pip at the sandbox detection</font><font color="#E5E5E5"> a</font>

40
00:01:33,619 --> 00:01:37,259
sandbox is a virtual environment

41
00:01:35,460 --> 00:01:39,809
designed to simulate a real computer

42
00:01:37,259 --> 00:01:41,640
<font color="#E5E5E5">that can analyze malware behavior it's</font>

43
00:01:39,810 --> 00:01:44,369
for dynamic analysis most of you know

44
00:01:41,640 --> 00:01:46,170
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> already malware does not want to</font>

45
00:01:44,369 --> 00:01:48,869
<font color="#E5E5E5">be analyzed so when it thinks that it's</font>

46
00:01:46,170 --> 00:01:53,820
inside<font color="#E5E5E5"> of a sandbox</font><font color="#CCCCCC"> it'll act benign</font>

47
00:01:48,869 --> 00:01:55,649
with a calculator the old thinking<font color="#E5E5E5"> when</font>

48
00:01:53,820 --> 00:01:58,169
it came to sandbox detection<font color="#E5E5E5"> was that</font>

49
00:01:55,649 --> 00:02:00,960
<font color="#E5E5E5">sandbox is look and feel a certain way</font>

50
00:01:58,170 --> 00:02:03,240
so let's specifically check to see if

51
00:02:00,960 --> 00:02:06,960
we're in<font color="#CCCCCC"> a sandbox and if we are in a</font>

52
00:02:03,240 --> 00:02:08,848
sandbox<font color="#CCCCCC"> will act benign things that</font>

53
00:02:06,960 --> 00:02:12,269
could<font color="#E5E5E5"> indicate a sandbox are registry</font>

54
00:02:08,848 --> 00:02:14,099
keys values<font color="#CCCCCC"> MAC addresses limited ramp</font>

55
00:02:12,270 --> 00:02:17,310
size etc

56
00:02:14,099 --> 00:02:21,760
but I want you<font color="#E5E5E5"> all to think about this</font>

57
00:02:17,310 --> 00:02:23,650
we<font color="#E5E5E5"> are specifically</font><font color="#CCCCCC"> looking for</font><font color="#E5E5E5"> sand</font>

58
00:02:21,760 --> 00:02:26,340
<font color="#E5E5E5">boxes we are specifically looking</font><font color="#CCCCCC"> for a</font>

59
00:02:23,650 --> 00:02:30,030
specific<font color="#E5E5E5"> kind of system to not run on</font>

60
00:02:26,340 --> 00:02:32,530
what does<font color="#CCCCCC"> that</font><font color="#E5E5E5"> sound like to</font><font color="#CCCCCC"> you</font>

61
00:02:30,030 --> 00:02:34,530
<font color="#CCCCCC">sandbox detection is a form of</font>

62
00:02:32,530 --> 00:02:36,730
<font color="#CCCCCC">blacklisting and that is the problem</font>

63
00:02:34,530 --> 00:02:38,500
<font color="#E5E5E5">when you blacklist you run into problems</font>

64
00:02:36,730 --> 00:02:40,299
<font color="#CCCCCC">because you</font><font color="#E5E5E5"> can't predict what every</font>

65
00:02:38,500 --> 00:02:42,010
single<font color="#E5E5E5"> sandbox looks like we've been</font>

66
00:02:40,300 --> 00:02:46,180
<font color="#E5E5E5">doing this wrong in our opinion for a</font>

67
00:02:42,010 --> 00:02:47,890
long time and now let's think<font color="#E5E5E5"> why do we</font>

68
00:02:46,180 --> 00:02:50,050
write sandbox detection modules in the

69
00:02:47,890 --> 00:02:52,720
first place why do we add them to our

70
00:02:50,050 --> 00:02:55,510
<font color="#E5E5E5">code</font><font color="#CCCCCC"> why do we add if we're in a sandbox</font>

71
00:02:52,720 --> 00:02:57,069
let's not run<font color="#CCCCCC"> is it because we're</font>

72
00:02:55,510 --> 00:02:59,560
curious<font color="#E5E5E5"> about what sand boxes look like</font>

73
00:02:57,069 --> 00:03:02,109
<font color="#CCCCCC">is it</font><font color="#E5E5E5"> because we care about being in a</font>

74
00:02:59,560 --> 00:03:03,430
sandbox specifically<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> think so I</font>

75
00:03:02,110 --> 00:03:05,310
think<font color="#CCCCCC"> there's a greater</font><font color="#E5E5E5"> point here that</font>

76
00:03:03,430 --> 00:03:07,750
<font color="#CCCCCC">we're missing</font>

77
00:03:05,310 --> 00:03:11,080
we want our malware<font color="#E5E5E5"> to run where we</font>

78
00:03:07,750 --> 00:03:12,370
expect that is why we check for<font color="#CCCCCC"> sand</font>

79
00:03:11,080 --> 00:03:13,930
<font color="#CCCCCC">boxes</font><font color="#E5E5E5"> in the first place it's got</font>

80
00:03:12,370 --> 00:03:16,150
nothing<font color="#CCCCCC"> to do with the sandbox sandbox</font>

81
00:03:13,930 --> 00:03:18,209
it's just another place<font color="#CCCCCC"> that it could be</font>

82
00:03:16,150 --> 00:03:20,799
running<font color="#E5E5E5"> that we don't want it to run in</font>

83
00:03:18,209 --> 00:03:23,500
general we want<font color="#E5E5E5"> our malware to run where</font>

84
00:03:20,799 --> 00:03:26,079
we expect and avoiding sand boxes is a

85
00:03:23,500 --> 00:03:28,000
byproduct of that that is not our<font color="#CCCCCC"> goal</font>

86
00:03:26,079 --> 00:03:29,890
when<font color="#E5E5E5"> delivering a payload</font><font color="#CCCCCC"> to look for</font>

87
00:03:28,000 --> 00:03:32,530
sand boxes<font color="#E5E5E5"> this is not a scavenger hunt</font>

88
00:03:29,890 --> 00:03:36,399
<font color="#CCCCCC">we just want our malware to run where we</font>

89
00:03:32,530 --> 00:03:38,560
expect implant security is how you can

90
00:03:36,400 --> 00:03:40,480
do that<font color="#CCCCCC"> by securing your implant you can</font>

91
00:03:38,560 --> 00:03:42,120
know<font color="#CCCCCC"> exactly where and how in the</font>

92
00:03:40,480 --> 00:03:45,760
<font color="#E5E5E5">context in</font><font color="#CCCCCC"> which your malware runs</font>

93
00:03:42,120 --> 00:03:47,890
sandbox detection is a subset of<font color="#CCCCCC"> that so</font>

94
00:03:45,760 --> 00:03:49,989
what does implant security it means

95
00:03:47,890 --> 00:03:51,970
securing your implant so<font color="#CCCCCC"> that it doesn't</font>

96
00:03:49,989 --> 00:03:54,549
<font color="#E5E5E5">run unless for</font><font color="#CCCCCC"> example the MAC addresses</font>

97
00:03:51,970 --> 00:03:56,470
as you expect<font color="#E5E5E5"> unless the</font><font color="#CCCCCC"> username</font><font color="#E5E5E5"> is</font>

98
00:03:54,549 --> 00:04:00,280
what you expect<font color="#E5E5E5"> unless</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> hostname</font><font color="#CCCCCC"> is</font>

99
00:03:56,470 --> 00:04:01,780
what you expect<font color="#E5E5E5"> the domain etc and if</font>

100
00:04:00,280 --> 00:04:03,010
that's the<font color="#CCCCCC"> case if you're only</font><font color="#E5E5E5"> running</font>

101
00:04:01,780 --> 00:04:04,569
<font color="#E5E5E5">where all these conditions are</font><font color="#CCCCCC"> met</font>

102
00:04:03,010 --> 00:04:06,310
<font color="#E5E5E5">you're also not going</font><font color="#CCCCCC"> to run in a</font>

103
00:04:04,569 --> 00:04:08,108
sandbox<font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> need to specifically</font>

104
00:04:06,310 --> 00:04:10,720
look after a sandbox in the first place

105
00:04:08,109 --> 00:04:12,850
that's<font color="#E5E5E5"> blacklisting let's whitelist our</font>

106
00:04:10,720 --> 00:04:14,530
payloads<font color="#E5E5E5"> let let's whitelist the systems</font>

107
00:04:12,850 --> 00:04:16,418
and the users we target<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is the</font>

108
00:04:14,530 --> 00:04:21,279
<font color="#E5E5E5">future in our opinion of sandbox</font>

109
00:04:16,418 --> 00:04:23,560
detection so here's kind<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> workflow</font>

110
00:04:21,279 --> 00:04:25,419
<font color="#E5E5E5">to get to this point your initial access</font>

111
00:04:23,560 --> 00:04:27,159
into the domain it's difficult to target

112
00:04:25,419 --> 00:04:27,609
<font color="#E5E5E5">your payload it's difficult to have a</font>

113
00:04:27,159 --> 00:04:30,219
super

114
00:04:27,610 --> 00:04:33,069
<font color="#E5E5E5">your implant but people get in one way</font>

115
00:04:30,219 --> 00:04:35,169
or<font color="#CCCCCC"> another right one of the first things</font>

116
00:04:33,069 --> 00:04:37,539
we do<font color="#E5E5E5"> on our engagements before we just</font>

117
00:04:35,169 --> 00:04:39,849
randomly<font color="#CCCCCC"> dump credits</font><font color="#E5E5E5"> is we import Power</font>

118
00:04:37,539 --> 00:04:42,219
<font color="#E5E5E5">View and just exfiltrate data about the</font>

119
00:04:39,849 --> 00:04:44,110
domain<font color="#E5E5E5"> so that's</font><font color="#CCCCCC"> user names that's host</font>

120
00:04:42,219 --> 00:04:47,590
names<font color="#CCCCCC"> it's phone numbers</font><font color="#E5E5E5"> things that are</font>

121
00:04:44,110 --> 00:04:50,560
useful from then on<font color="#E5E5E5"> any time we use</font><font color="#CCCCCC"> a</font>

122
00:04:47,590 --> 00:04:52,960
payload<font color="#E5E5E5"> it can be targeted we have the</font>

123
00:04:50,560 --> 00:04:55,060
users<font color="#E5E5E5"> user name we have the host name we</font>

124
00:04:52,960 --> 00:04:57,128
can make a profile<font color="#E5E5E5"> about how many</font>

125
00:04:55,060 --> 00:04:59,740
processors systems on that domain<font color="#E5E5E5"> have</font>

126
00:04:57,129 --> 00:05:01,629
what<font color="#E5E5E5"> kind of registry sizes all sorts of</font>

127
00:04:59,740 --> 00:05:03,819
<font color="#CCCCCC">little tidbits</font><font color="#E5E5E5"> of information to</font><font color="#CCCCCC"> protect</font>

128
00:05:01,629 --> 00:05:06,039
our payload if we ever<font color="#E5E5E5"> run a payload</font>

129
00:05:03,819 --> 00:05:07,719
again<font color="#E5E5E5"> it should be targeted it will be</font>

130
00:05:06,039 --> 00:05:09,909
targeted<font color="#E5E5E5"> this way it doesn't just run</font>

131
00:05:07,719 --> 00:05:11,259
out there anywhere<font color="#E5E5E5"> some malware</font><font color="#CCCCCC"> analysts</font>

132
00:05:09,909 --> 00:05:12,490
<font color="#E5E5E5">of this big company can just look at it</font>

133
00:05:11,259 --> 00:05:14,319
and<font color="#E5E5E5"> say oh it runs perfectly on</font><font color="#CCCCCC"> my</font>

134
00:05:12,490 --> 00:05:16,000
computer<font color="#CCCCCC"> it's malware you don't need to</font>

135
00:05:14,319 --> 00:05:21,849
do<font color="#E5E5E5"> that anymore</font><font color="#CCCCCC"> you target your payload</font>

136
00:05:16,000 --> 00:05:23,500
to where you want<font color="#E5E5E5"> it to run so let's</font>

137
00:05:21,849 --> 00:05:25,330
discuss some of<font color="#E5E5E5"> the problems</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> purely</font>

138
00:05:23,500 --> 00:05:27,699
trying to identify<font color="#E5E5E5"> a sandbox not just</font>

139
00:05:25,330 --> 00:05:29,289
securing your implant the problem number

140
00:05:27,699 --> 00:05:32,349
<font color="#E5E5E5">one is</font><font color="#CCCCCC"> that you're not as smart</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> you</font>

141
00:05:29,289 --> 00:05:34,000
think you<font color="#CCCCCC"> are</font><font color="#E5E5E5"> it is hard enough to</font>

142
00:05:32,349 --> 00:05:36,099
<font color="#E5E5E5">figure out why your payload won't run</font>

143
00:05:34,000 --> 00:05:37,900
<font color="#E5E5E5">who here has had a problem where their</font>

144
00:05:36,099 --> 00:05:41,139
payload didn't run on a system and they

145
00:05:37,900 --> 00:05:42,279
couldn't figure<font color="#E5E5E5"> out why okay good</font>

146
00:05:41,139 --> 00:05:43,240
everyone's raising their hand I know you

147
00:05:42,279 --> 00:05:46,719
can't see<font color="#CCCCCC"> it all but everyone just</font>

148
00:05:43,240 --> 00:05:48,129
<font color="#CCCCCC">raised it</font><font color="#E5E5E5"> yeah sometimes it's the Avs</font>

149
00:05:46,719 --> 00:05:49,509
fault sometimes<font color="#E5E5E5"> it's the rat you're</font>

150
00:05:48,129 --> 00:05:51,550
using<font color="#E5E5E5"> sometimes it's</font><font color="#CCCCCC"> because of</font>

151
00:05:49,509 --> 00:05:53,879
<font color="#CCCCCC">whitelisting</font><font color="#E5E5E5"> but it takes a long time</font><font color="#CCCCCC"> on</font>

152
00:05:51,550 --> 00:05:57,279
one of<font color="#E5E5E5"> our engagements the client had</font>

153
00:05:53,879 --> 00:05:58,419
<font color="#CCCCCC">PowerShell injection</font><font color="#E5E5E5"> that was they</font>

154
00:05:57,279 --> 00:06:00,610
protected against that they wouldn't let

155
00:05:58,419 --> 00:06:02,560
PowerShell that<font color="#CCCCCC"> exe run when shellcode</font>

156
00:06:00,610 --> 00:06:03,819
was injected directly<font color="#E5E5E5"> into it and we had</font>

157
00:06:02,560 --> 00:06:05,199
no way<font color="#CCCCCC"> of knowing that we had to debug</font>

158
00:06:03,819 --> 00:06:07,539
for two days as the wire payloads

159
00:06:05,199 --> 00:06:09,939
<font color="#E5E5E5">weren't calling back it's hard</font><font color="#CCCCCC"> enough so</font>

160
00:06:07,539 --> 00:06:11,860
<font color="#E5E5E5">adding this tic-tac little sandbox</font>

161
00:06:09,939 --> 00:06:13,270
detection module<font color="#CCCCCC"> it's gonna make</font><font color="#E5E5E5"> it even</font>

162
00:06:11,860 --> 00:06:15,210
<font color="#CCCCCC">harder to figure out why your payloads</font>

163
00:06:13,270 --> 00:06:19,688
not right

164
00:06:15,210 --> 00:06:21,279
number two<font color="#CCCCCC"> VMs</font><font color="#E5E5E5"> vm's used to be a really</font>

165
00:06:19,689 --> 00:06:23,740
<font color="#E5E5E5">cool</font><font color="#CCCCCC"> idea you know the computer</font><font color="#E5E5E5"> is</font>

166
00:06:21,279 --> 00:06:26,409
inside the computer it's like a strange

167
00:06:23,740 --> 00:06:29,169
concept<font color="#E5E5E5"> right but today bm's are using</font>

168
00:06:26,409 --> 00:06:31,150
<font color="#E5E5E5">day to day functionality</font><font color="#CCCCCC"> sandboxes look</font>

169
00:06:29,169 --> 00:06:34,419
like<font color="#CCCCCC"> VMS because they are often VMS and</font>

170
00:06:31,150 --> 00:06:37,120
by<font color="#CCCCCC"> avoiding</font><font color="#E5E5E5"> VMs avoiding VM registry</font>

171
00:06:34,419 --> 00:06:39,609
<font color="#CCCCCC">keys registry names MAC addresses you're</font>

172
00:06:37,120 --> 00:06:41,240
really<font color="#E5E5E5"> avoiding a critical asset</font><font color="#CCCCCC"> that a</font>

173
00:06:39,610 --> 00:06:44,090
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> companies use today</font>

174
00:06:41,240 --> 00:06:45,889
we want to target<font color="#CCCCCC"> VMs now</font><font color="#E5E5E5"> so if we're</font>

175
00:06:44,090 --> 00:06:47,869
<font color="#E5E5E5">avoiding the sandbox we're also avoiding</font>

176
00:06:45,889 --> 00:06:51,590
VMs most of the time we want<font color="#CCCCCC"> the amps</font>

177
00:06:47,870 --> 00:06:53,120
<font color="#E5E5E5">that's how we can get</font><font color="#CCCCCC"> more access so</font>

178
00:06:51,590 --> 00:06:54,469
don't just look to see<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you're a VM</font>

179
00:06:53,120 --> 00:06:55,880
and<font color="#E5E5E5"> say it's a sandbox let's get out of</font>

180
00:06:54,470 --> 00:07:00,259
<font color="#CCCCCC">here that's</font><font color="#E5E5E5"> another problem with pure</font>

181
00:06:55,880 --> 00:07:02,750
sandbox detection<font color="#E5E5E5"> number three sandbox</font>

182
00:07:00,259 --> 00:07:04,160
is look like legacy systems<font color="#E5E5E5"> what are</font>

183
00:07:02,750 --> 00:07:07,699
<font color="#E5E5E5">some characteristics of sandbox Azure</font>

184
00:07:04,160 --> 00:07:10,099
VMs right small amount<font color="#E5E5E5"> of RAM small disk</font>

185
00:07:07,699 --> 00:07:14,210
size etc<font color="#E5E5E5"> I</font><font color="#CCCCCC"> think this is</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> cuckoo</font>

186
00:07:10,099 --> 00:07:15,469
sandbox<font color="#E5E5E5"> right there it's a picture but</font>

187
00:07:14,210 --> 00:07:17,840
the issue with that is<font color="#E5E5E5"> that legacy</font>

188
00:07:15,470 --> 00:07:21,050
systems are<font color="#E5E5E5"> often some of the easiest</font>

189
00:07:17,840 --> 00:07:22,400
and<font color="#CCCCCC"> most effective at targeting</font><font color="#E5E5E5"> a lot of</font>

190
00:07:21,050 --> 00:07:24,650
the new antivirus don't even run<font color="#E5E5E5"> on the</font>

191
00:07:22,400 --> 00:07:26,320
old systems<font color="#E5E5E5"> but you can get persistence</font>

192
00:07:24,650 --> 00:07:28,549
on those<font color="#E5E5E5"> systems and it's really nice</font>

193
00:07:26,320 --> 00:07:30,110
but they look<font color="#E5E5E5"> like a sandbox</font><font color="#CCCCCC"> because</font>

194
00:07:28,550 --> 00:07:31,759
they're old<font color="#E5E5E5"> they're updated they don't</font>

195
00:07:30,110 --> 00:07:33,440
have a lot<font color="#CCCCCC"> of good specs on them and</font>

196
00:07:31,759 --> 00:07:37,070
you're gonna miss out<font color="#CCCCCC"> on all</font><font color="#E5E5E5"> these</font>

197
00:07:33,440 --> 00:07:43,370
systems if you<font color="#E5E5E5"> add some sort of pure</font><font color="#CCCCCC"> mi</font>

198
00:07:37,070 --> 00:07:47,300
in a VM check and your payload anteye

199
00:07:43,370 --> 00:07:50,030
anteye<font color="#CCCCCC"> VM</font><font color="#E5E5E5"> sandboxes are looking for your</font>

200
00:07:47,300 --> 00:07:53,000
anti<font color="#E5E5E5"> VM measures how many</font><font color="#CCCCCC"> more ant eyes</font>

201
00:07:50,030 --> 00:07:55,070
do you<font color="#E5E5E5"> want seriously this is a game of</font>

202
00:07:53,000 --> 00:07:56,840
cat and mouse<font color="#E5E5E5"> I mean we all signed up to</font>

203
00:07:55,070 --> 00:07:59,500
be<font color="#E5E5E5"> in the security industry</font><font color="#CCCCCC"> that's fair</font>

204
00:07:56,840 --> 00:08:02,090
we're all playing<font color="#E5E5E5"> cat and mouse but</font>

205
00:07:59,500 --> 00:08:05,060
you're just diving<font color="#E5E5E5"> headfirst by adding a</font>

206
00:08:02,090 --> 00:08:08,138
sandbox detection check you think<font color="#E5E5E5"> about</font>

207
00:08:05,060 --> 00:08:11,090
what happened with wanna cry it was a

208
00:08:08,139 --> 00:08:13,520
check to a<font color="#E5E5E5"> URL it didn't exist</font><font color="#CCCCCC"> right</font>

209
00:08:11,090 --> 00:08:16,008
and some<font color="#E5E5E5"> 22</font><font color="#CCCCCC"> year old bought that</font><font color="#E5E5E5"> domain</font>

210
00:08:13,520 --> 00:08:17,900
<font color="#CCCCCC">and because of that the entire kill</font>

211
00:08:16,009 --> 00:08:20,150
switch worked across every single want

212
00:08:17,900 --> 00:08:21,770
to cry<font color="#CCCCCC"> incident there's problems with</font>

213
00:08:20,150 --> 00:08:23,508
<font color="#E5E5E5">that that payload was working perfectly</font>

214
00:08:21,770 --> 00:08:25,340
until that<font color="#E5E5E5"> mount now we're off it got</font>

215
00:08:23,509 --> 00:08:28,389
cute<font color="#CCCCCC"> and added a sandbox detection check</font>

216
00:08:25,340 --> 00:08:28,388
that blew<font color="#CCCCCC"> up in his</font><font color="#E5E5E5"> face</font>

217
00:08:29,380 --> 00:08:36,229
let's talk<font color="#CCCCCC"> about our repository now it's</font>

218
00:08:32,089 --> 00:08:38,270
an implant security repository what

219
00:08:36,229 --> 00:08:41,149
we've seen is<font color="#CCCCCC"> that implant security</font>

220
00:08:38,270 --> 00:08:43,490
modules or sandbox detection checks that

221
00:08:41,149 --> 00:08:46,160
we've read on articles or blogs<font color="#E5E5E5"> they're</font>

222
00:08:43,490 --> 00:08:48,920
<font color="#CCCCCC">always discussed</font><font color="#E5E5E5"> at a high level</font><font color="#CCCCCC"> very</font>

223
00:08:46,160 --> 00:08:50,240
rarely ever implemented<font color="#CCCCCC"> Oh malware</font>

224
00:08:48,920 --> 00:08:51,469
authors are doing this new technique

225
00:08:50,240 --> 00:08:54,260
it's<font color="#E5E5E5"> very innovative let me tell you</font>

226
00:08:51,470 --> 00:08:56,960
about it<font color="#CCCCCC"> right</font><font color="#E5E5E5"> or just written in C if</font>

227
00:08:54,260 --> 00:09:00,710
<font color="#E5E5E5">is written at all but</font><font color="#CCCCCC"> paler deliverance</font>

228
00:08:56,960 --> 00:09:03,140
is growing in<font color="#CCCCCC"> non-si languages python</font>

229
00:09:00,710 --> 00:09:05,120
<font color="#CCCCCC">there was a talk about</font><font color="#E5E5E5"> go reversing</font>

230
00:09:03,140 --> 00:09:10,360
yesterday it was a good talk<font color="#CCCCCC"> PowerShell</font>

231
00:09:05,120 --> 00:09:13,430
<font color="#E5E5E5">Perl Ruby let's make a repository</font><font color="#CCCCCC"> a</font>

232
00:09:10,360 --> 00:09:15,650
centralized one where every<font color="#E5E5E5"> single</font>

233
00:09:13,430 --> 00:09:19,609
module<font color="#CCCCCC"> is implemented in all these</font>

234
00:09:15,650 --> 00:09:26,020
<font color="#E5E5E5">languages so we started with C they went</font>

235
00:09:19,610 --> 00:09:31,190
to<font color="#CCCCCC"> c-sharp powershell python go Ruby and</font>

236
00:09:26,020 --> 00:09:33,020
Perl<font color="#E5E5E5"> we're not fans of Perl this is what</font>

237
00:09:31,190 --> 00:09:34,970
<font color="#E5E5E5">part of the repository looks like you</font>

238
00:09:33,020 --> 00:09:37,090
have it broken<font color="#E5E5E5"> down by the kind of</font>

239
00:09:34,970 --> 00:09:39,290
implant security or sandbox check and

240
00:09:37,090 --> 00:09:40,850
you can break<font color="#E5E5E5"> it down</font><font color="#CCCCCC"> even</font><font color="#E5E5E5"> further so we</font>

241
00:09:39,290 --> 00:09:43,370
<font color="#E5E5E5">have this size here minimum number of</font>

242
00:09:40,850 --> 00:09:46,010
running processes<font color="#E5E5E5"> USB drives ever</font>

243
00:09:43,370 --> 00:09:49,130
mounted things that you can create<font color="#E5E5E5"> a</font>

244
00:09:46,010 --> 00:09:50,900
profile about<font color="#E5E5E5"> your domain with when you</font>

245
00:09:49,130 --> 00:09:52,250
break into<font color="#E5E5E5"> one of them you'll</font><font color="#CCCCCC"> have the</font>

246
00:09:50,900 --> 00:09:58,490
different modules<font color="#E5E5E5"> and all the different</font>

247
00:09:52,250 --> 00:10:00,710
languages so let's talk<font color="#E5E5E5"> about why</font>

248
00:09:58,490 --> 00:10:04,190
sandboxes can't just go follow all<font color="#E5E5E5"> these</font>

249
00:10:00,710 --> 00:10:04,730
paths<font color="#E5E5E5"> say you have a username check</font>

250
00:10:04,190 --> 00:10:06,550
right

251
00:10:04,730 --> 00:10:09,080
don't run unless<font color="#E5E5E5"> this is the username</font>

252
00:10:06,550 --> 00:10:11,300
<font color="#E5E5E5">it's a design decision for sandbox it's</font>

253
00:10:09,080 --> 00:10:12,980
not to follow every single path<font color="#CCCCCC"> that it</font>

254
00:10:11,300 --> 00:10:15,469
could follow not to follow every single

255
00:10:12,980 --> 00:10:17,750
if<font color="#E5E5E5"> wrench the reason is because we don't</font>

256
00:10:15,470 --> 00:10:20,720
<font color="#CCCCCC">have</font><font color="#E5E5E5"> the computing power</font><font color="#CCCCCC"> to follow every</font>

257
00:10:17,750 --> 00:10:22,610
single path<font color="#E5E5E5"> if a sandbox follows some</font>

258
00:10:20,720 --> 00:10:27,170
path that could never exist if<font color="#E5E5E5"> I put in</font>

259
00:10:22,610 --> 00:10:29,060
if username<font color="#E5E5E5"> is</font><font color="#CCCCCC"> ZYX w t u v</font><font color="#E5E5E5"> whatever the</font>

260
00:10:27,170 --> 00:10:31,189
sandbox won't follow it<font color="#E5E5E5"> because if i</font>

261
00:10:29,060 --> 00:10:33,530
sent it on some goose chase<font color="#CCCCCC"> you know</font>

262
00:10:31,190 --> 00:10:34,730
<font color="#CCCCCC">solve traveling salesperson problem</font><font color="#E5E5E5"> we'd</font>

263
00:10:33,530 --> 00:10:37,160
run out<font color="#E5E5E5"> of resources on that computer</font>

264
00:10:34,730 --> 00:10:39,410
<font color="#E5E5E5">the sandbox is rendered</font><font color="#CCCCCC"> useless</font><font color="#E5E5E5"> so stan</font>

265
00:10:37,160 --> 00:10:41,630
boxes have<font color="#E5E5E5"> to follow the normal path of</font>

266
00:10:39,410 --> 00:10:44,390
execution<font color="#CCCCCC"> sandbox is will only follow</font>

267
00:10:41,630 --> 00:10:45,740
what the code<font color="#CCCCCC"> says to</font><font color="#E5E5E5"> follow it doesn't</font>

268
00:10:44,390 --> 00:10:47,000
they don't<font color="#E5E5E5"> typically break out into all</font>

269
00:10:45,740 --> 00:10:49,220
these<font color="#CCCCCC"> different checks</font>

270
00:10:47,000 --> 00:10:53,050
that's why implant security is effective

271
00:10:49,220 --> 00:10:53,050
against dynamic analysis right now

272
00:10:55,270 --> 00:11:02,910
so let's talk about<font color="#E5E5E5"> some of these</font>

273
00:10:56,770 --> 00:11:05,500
modules when you deliver a payload<font color="#CCCCCC"> you</font>

274
00:11:02,910 --> 00:11:08,290
<font color="#CCCCCC">should know what the</font><font color="#E5E5E5"> parent process of</font>

275
00:11:05,500 --> 00:11:09,970
that<font color="#E5E5E5"> payload is if you're delivering a</font>

276
00:11:08,290 --> 00:11:12,579
word macro<font color="#E5E5E5"> for example the parent</font>

277
00:11:09,970 --> 00:11:16,959
<font color="#CCCCCC">process might be windward but it won't</font>

278
00:11:12,580 --> 00:11:19,300
be cmd.exe<font color="#CCCCCC"> right it's a PDF document</font><font color="#E5E5E5"> and</font>

279
00:11:16,959 --> 00:11:21,160
<font color="#CCCCCC">hto plication any of that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> should</font>

280
00:11:19,300 --> 00:11:23,859
know how your payload<font color="#E5E5E5"> is getting</font>

281
00:11:21,160 --> 00:11:25,839
delivered on<font color="#E5E5E5"> that system so why would</font>

282
00:11:23,860 --> 00:11:27,520
you<font color="#CCCCCC"> allow</font><font color="#E5E5E5"> your payload to run if it</font>

283
00:11:25,839 --> 00:11:30,279
wasn't being delivered<font color="#E5E5E5"> how you expect it</font>

284
00:11:27,520 --> 00:11:32,470
to<font color="#E5E5E5"> there's no reason you should and</font>

285
00:11:30,279 --> 00:11:35,589
that's<font color="#CCCCCC"> an easy</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> to get in trouble or</font>

286
00:11:32,470 --> 00:11:38,830
<font color="#E5E5E5">get caught by a company now most</font>

287
00:11:35,589 --> 00:11:41,020
languages<font color="#E5E5E5"> allow you to find the PPID of</font>

288
00:11:38,830 --> 00:11:43,360
the process here<font color="#E5E5E5"> and that's a parent</font>

289
00:11:41,020 --> 00:11:46,449
process<font color="#E5E5E5"> ID because in Windows that's</font>

290
00:11:43,360 --> 00:11:47,860
actually<font color="#E5E5E5"> part of the</font><font color="#CCCCCC"> peb which has</font>

291
00:11:46,450 --> 00:11:50,589
information about<font color="#E5E5E5"> the process and its</font>

292
00:11:47,860 --> 00:11:52,899
<font color="#CCCCCC">parent process</font><font color="#E5E5E5"> if you use that parent</font>

293
00:11:50,589 --> 00:11:55,270
<font color="#E5E5E5">process ID from your payload</font><font color="#CCCCCC"> you can do</font>

294
00:11:52,899 --> 00:11:57,610
a query just querying all the processes

295
00:11:55,270 --> 00:12:00,550
<font color="#E5E5E5">running on that system check that parent</font>

296
00:11:57,610 --> 00:12:02,709
<font color="#E5E5E5">process ID and look which process name</font>

297
00:12:00,550 --> 00:12:04,839
corresponds to it<font color="#CCCCCC"> if the process name is</font>

298
00:12:02,709 --> 00:12:07,959
not how you expect this is the Python

299
00:12:04,839 --> 00:12:10,390
implementation<font color="#E5E5E5"> then don't proceed but in</font>

300
00:12:07,959 --> 00:12:13,089
this<font color="#E5E5E5"> one you can</font><font color="#CCCCCC"> see we have</font><font color="#E5E5E5"> OS get</font><font color="#CCCCCC"> DP</font>

301
00:12:10,390 --> 00:12:15,279
<font color="#CCCCCC">ID and you do a WMI query to get</font><font color="#E5E5E5"> the</font>

302
00:12:13,089 --> 00:12:16,959
string name of that in this case we're

303
00:12:15,279 --> 00:12:19,870
<font color="#E5E5E5">looking for Firefox it's just the basic</font>

304
00:12:16,959 --> 00:12:21,699
<font color="#CCCCCC">hard-coded</font><font color="#E5E5E5"> value I put</font><font color="#CCCCCC"> in and if it's</font>

305
00:12:19,870 --> 00:12:23,470
<font color="#E5E5E5">not as expected</font><font color="#CCCCCC"> you don't proceed</font><font color="#E5E5E5"> the</font>

306
00:12:21,700 --> 00:12:25,779
malware<font color="#CCCCCC"> doesn't execute but if it is</font>

307
00:12:23,470 --> 00:12:28,120
Firefox<font color="#E5E5E5"> if it did come from Firefox then</font>

308
00:12:25,779 --> 00:12:29,890
you proceed<font color="#CCCCCC"> just as the heads-up</font><font color="#E5E5E5"> in case</font>

309
00:12:28,120 --> 00:12:31,570
<font color="#E5E5E5">these slides are a little bit tiny or</font>

310
00:12:29,890 --> 00:12:34,569
harder to<font color="#E5E5E5"> see Brandon will also be</font>

311
00:12:31,570 --> 00:12:35,649
tweeting these out for<font color="#E5E5E5"> review</font><font color="#CCCCCC"> so we</font>

312
00:12:34,570 --> 00:12:37,300
realize it may be a little hard<font color="#CCCCCC"> right</font>

313
00:12:35,649 --> 00:12:42,700
now but you'll<font color="#CCCCCC"> be able to</font><font color="#E5E5E5"> download this</font>

314
00:12:37,300 --> 00:12:43,569
and<font color="#CCCCCC"> see them right again we showed all</font>

315
00:12:42,700 --> 00:12:45,399
the different<font color="#E5E5E5"> languages will be</font>

316
00:12:43,570 --> 00:12:47,230
implemented<font color="#E5E5E5"> these in so I just wanted to</font>

317
00:12:45,399 --> 00:12:49,450
<font color="#E5E5E5">show</font><font color="#CCCCCC"> you again in</font><font color="#E5E5E5"> PowerShell how it look</font>

318
00:12:47,230 --> 00:12:52,300
a<font color="#E5E5E5"> little differently this is another</font>

319
00:12:49,450 --> 00:12:53,860
another<font color="#CCCCCC"> WMI query where you can query</font>

320
00:12:52,300 --> 00:12:56,500
<font color="#E5E5E5">the parent</font><font color="#CCCCCC"> process</font><font color="#E5E5E5"> ID to see the</font>

321
00:12:53,860 --> 00:12:59,860
<font color="#E5E5E5">corresponding process name and check it</font>

322
00:12:56,500 --> 00:13:01,570
against<font color="#E5E5E5"> the value you expect</font><font color="#CCCCCC"> as you can</font>

323
00:12:59,860 --> 00:13:03,010
see we implemented all these<font color="#E5E5E5"> modules in</font>

324
00:13:01,570 --> 00:13:04,779
<font color="#E5E5E5">our</font><font color="#CCCCCC"> repository to accept a command-line</font>

325
00:13:03,010 --> 00:13:06,279
<font color="#E5E5E5">argument so if you want to play with it</font>

326
00:13:04,779 --> 00:13:08,830
<font color="#E5E5E5">on your</font><font color="#CCCCCC"> own just</font><font color="#E5E5E5"> in your own environment</font>

327
00:13:06,279 --> 00:13:11,500
<font color="#E5E5E5">you just pass it on the command line</font>

328
00:13:08,830 --> 00:13:13,390
you say I<font color="#CCCCCC"> want this parent</font><font color="#E5E5E5"> process ID</font><font color="#CCCCCC"> to</font>

329
00:13:11,500 --> 00:13:15,310
to have this string name and if it

330
00:13:13,390 --> 00:13:16,420
<font color="#E5E5E5">doesn't tell</font><font color="#CCCCCC"> run but we'll</font><font color="#E5E5E5"> talk about</font>

331
00:13:15,310 --> 00:13:21,280
how you<font color="#E5E5E5"> can port it</font><font color="#CCCCCC"> over to</font><font color="#E5E5E5"> your</font>

332
00:13:16,420 --> 00:13:23,650
<font color="#E5E5E5">payloads</font><font color="#CCCCCC"> in a second</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> Krista</font><font color="#E5E5E5"> talked</font>

333
00:13:21,280 --> 00:13:25,480
about sleeping<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so this is</font>

334
00:13:23,650 --> 00:13:27,819
<font color="#E5E5E5">actually kind of one</font><font color="#CCCCCC"> of my favorite</font>

335
00:13:25,480 --> 00:13:29,230
<font color="#CCCCCC">modules that we've worked on</font><font color="#E5E5E5"> where again</font>

336
00:13:27,820 --> 00:13:31,450
<font color="#E5E5E5">like Brandon</font><font color="#CCCCCC"> mentioned we're not here</font>

337
00:13:29,230 --> 00:13:33,400
<font color="#E5E5E5">trying to purely do sandbox evasion but</font>

338
00:13:31,450 --> 00:13:35,530
because we care more about the problem

339
00:13:33,400 --> 00:13:37,420
of delivering<font color="#E5E5E5"> our payloads having that</font>

340
00:13:35,530 --> 00:13:40,390
code run<font color="#E5E5E5"> exactly where we wanted to run</font>

341
00:13:37,420 --> 00:13:43,060
and minimize its ability to<font color="#E5E5E5"> run anywhere</font>

342
00:13:40,390 --> 00:13:47,080
else<font color="#E5E5E5"> although like he did mention in</font>

343
00:13:43,060 --> 00:13:48,819
sandbox evasion is a part<font color="#CCCCCC"> of that so one</font>

344
00:13:47,080 --> 00:13:51,760
of<font color="#E5E5E5"> the things that a</font><font color="#CCCCCC"> lot of</font><font color="#E5E5E5"> people try</font>

345
00:13:48,820 --> 00:13:53,260
to do when they're going<font color="#E5E5E5"> to be trying to</font>

346
00:13:51,760 --> 00:13:55,000
<font color="#CCCCCC">avoid a sandbox</font><font color="#E5E5E5"> is they're</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> add</font>

347
00:13:53,260 --> 00:13:58,350
like basic<font color="#E5E5E5"> sleeps right like this is</font>

348
00:13:55,000 --> 00:14:00,670
kind of almost sandbox evasion 101 so

349
00:13:58,350 --> 00:14:02,350
you can assume or most people<font color="#CCCCCC"> would</font>

350
00:14:00,670 --> 00:14:04,750
reasonably assume<font color="#CCCCCC"> that if a sandbox is</font>

351
00:14:02,350 --> 00:14:06,370
<font color="#E5E5E5">gonna run your code</font><font color="#CCCCCC"> it's only</font><font color="#E5E5E5"> going to</font>

352
00:14:04,750 --> 00:14:08,410
<font color="#E5E5E5">run it for what maybe two minutes and</font>

353
00:14:06,370 --> 00:14:10,960
<font color="#E5E5E5">try to observe any action that that</font>

354
00:14:08,410 --> 00:14:13,900
<font color="#E5E5E5">piece of malware program takes it's not</font>

355
00:14:10,960 --> 00:14:16,120
going to sit<font color="#E5E5E5"> there forever</font><font color="#CCCCCC"> so if we can</font>

356
00:14:13,900 --> 00:14:18,510
make our our code<font color="#CCCCCC"> sleep for about</font><font color="#E5E5E5"> an</font>

357
00:14:16,120 --> 00:14:21,820
hour<font color="#E5E5E5"> we're gonna beat this system right</font>

358
00:14:18,510 --> 00:14:23,110
<font color="#E5E5E5">well that's not actually</font><font color="#CCCCCC"> obviously how</font>

359
00:14:21,820 --> 00:14:25,720
it works

360
00:14:23,110 --> 00:14:27,790
sandbox developers obviously<font color="#CCCCCC"> also</font><font color="#E5E5E5"> know</font>

361
00:14:25,720 --> 00:14:29,260
that this<font color="#E5E5E5"> is just a simple trick</font><font color="#CCCCCC"> that</font>

362
00:14:27,790 --> 00:14:31,390
any malware<font color="#E5E5E5"> author is</font><font color="#CCCCCC"> going to try to</font>

363
00:14:29,260 --> 00:14:33,790
<font color="#E5E5E5">write to do and so what they do is they</font>

364
00:14:31,390 --> 00:14:35,860
<font color="#CCCCCC">look for these sleep calls in your code</font>

365
00:14:33,790 --> 00:14:37,990
and<font color="#E5E5E5"> they basically</font><font color="#CCCCCC"> hook that function</font>

366
00:14:35,860 --> 00:14:40,120
and<font color="#CCCCCC"> fast-forward through it so</font><font color="#E5E5E5"> you may</font>

367
00:14:37,990 --> 00:14:41,860
tell your your malware your piece<font color="#E5E5E5"> of</font>

368
00:14:40,120 --> 00:14:43,570
code<font color="#E5E5E5"> whatever it is that you wrote to</font>

369
00:14:41,860 --> 00:14:45,490
actually sleep for<font color="#E5E5E5"> a</font><font color="#CCCCCC"> thirty minutes</font>

370
00:14:43,570 --> 00:14:47,710
sleep<font color="#E5E5E5"> for two hours</font><font color="#CCCCCC"> whatever that amount</font>

371
00:14:45,490 --> 00:14:48,940
of time is and it's actually<font color="#CCCCCC"> just going</font>

372
00:14:47,710 --> 00:14:51,220
immediately<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the next line because</font>

373
00:14:48,940 --> 00:14:54,790
<font color="#E5E5E5">it's not actually sitting there for that</font>

374
00:14:51,220 --> 00:14:57,070
long<font color="#CCCCCC"> so the next question is how can</font>

375
00:14:54,790 --> 00:15:00,969
this be beaten if we want<font color="#E5E5E5"> to try to add</font>

376
00:14:57,070 --> 00:15:05,410
<font color="#CCCCCC">this functionality</font><font color="#E5E5E5"> in but basically not</font>

377
00:15:00,970 --> 00:15:06,760
get caught by sandbox well the way that

378
00:15:05,410 --> 00:15:08,980
<font color="#E5E5E5">we tried to solve this is we're</font>

379
00:15:06,760 --> 00:15:12,640
outsourcing time request to an NTP

380
00:15:08,980 --> 00:15:14,520
server so we've added code and<font color="#E5E5E5"> we'll</font>

381
00:15:12,640 --> 00:15:17,140
show a demo<font color="#CCCCCC"> of</font><font color="#E5E5E5"> it in just a second or</font><font color="#CCCCCC"> a</font>

382
00:15:14,520 --> 00:15:18,640
sample of the code base where the first

383
00:15:17,140 --> 00:15:20,230
<font color="#CCCCCC">thing that our code will do if we want</font>

384
00:15:18,640 --> 00:15:21,790
to<font color="#E5E5E5"> perform this</font><font color="#CCCCCC"> check is to</font><font color="#E5E5E5"> make a</font>

385
00:15:20,230 --> 00:15:22,810
request<font color="#E5E5E5"> for</font><font color="#CCCCCC"> the current time</font><font color="#E5E5E5"> against an</font>

386
00:15:21,790 --> 00:15:26,060
empty

387
00:15:22,810 --> 00:15:28,069
once we do that we'll try<font color="#CCCCCC"> to sleep</font><font color="#E5E5E5"> for</font>

388
00:15:26,060 --> 00:15:30,170
<font color="#E5E5E5">the requested amount of time</font><font color="#CCCCCC"> that we</font>

389
00:15:28,070 --> 00:15:32,450
want<font color="#E5E5E5"> 30 minutes five minutes</font><font color="#CCCCCC"> however</font>

390
00:15:30,170 --> 00:15:35,349
<font color="#CCCCCC">long it is</font><font color="#E5E5E5"> and then after that</font><font color="#CCCCCC"> point</font><font color="#E5E5E5"> we</font>

391
00:15:32,450 --> 00:15:38,060
make another<font color="#E5E5E5"> request to an NTP server</font>

392
00:15:35,350 --> 00:15:39,830
<font color="#E5E5E5">basically at</font><font color="#CCCCCC"> that point</font><font color="#E5E5E5"> we're doing a</font>

393
00:15:38,060 --> 00:15:42,349
comparison<font color="#E5E5E5"> of the time responses that we</font>

394
00:15:39,830 --> 00:15:45,050
get back from the NTP servers<font color="#E5E5E5"> are they</font>

395
00:15:42,350 --> 00:15:47,240
<font color="#E5E5E5">actually sleeping for 30 minutes 60</font>

396
00:15:45,050 --> 00:15:49,370
minutes<font color="#CCCCCC"> or is</font><font color="#E5E5E5"> it really</font><font color="#CCCCCC"> basically like</font>

397
00:15:47,240 --> 00:15:52,190
one second right<font color="#CCCCCC"> after another</font><font color="#E5E5E5"> if that's</font>

398
00:15:49,370 --> 00:15:55,040
the case then we can<font color="#E5E5E5"> if it didn't sleep</font>

399
00:15:52,190 --> 00:15:57,470
for<font color="#E5E5E5"> thirty seconds or</font><font color="#CCCCCC"> ten</font><font color="#E5E5E5"> hours however</font>

400
00:15:55,040 --> 00:15:59,420
long we<font color="#E5E5E5"> want it we can assume reasonably</font>

401
00:15:57,470 --> 00:16:02,060
that<font color="#E5E5E5"> we're probably</font><font color="#CCCCCC"> in a sandbox or in</font>

402
00:15:59,420 --> 00:16:03,709
<font color="#E5E5E5">some weird environment that's not acting</font>

403
00:16:02,060 --> 00:16:06,140
<font color="#CCCCCC">completely normal</font><font color="#E5E5E5"> and so we don't want</font>

404
00:16:03,710 --> 00:16:10,760
<font color="#E5E5E5">our code</font><font color="#CCCCCC"> to run in that</font><font color="#E5E5E5"> if it is that</font>

405
00:16:06,140 --> 00:16:13,760
<font color="#E5E5E5">lets actually execute our code an</font>

406
00:16:10,760 --> 00:16:16,400
alternative<font color="#CCCCCC"> option</font><font color="#E5E5E5"> that we are adding in</font>

407
00:16:13,760 --> 00:16:18,140
is instead<font color="#CCCCCC"> of</font><font color="#E5E5E5"> making the problem with</font>

408
00:16:16,400 --> 00:16:19,850
that<font color="#E5E5E5"> first issue is you're making</font><font color="#CCCCCC"> an NTP</font>

409
00:16:18,140 --> 00:16:21,949
request<font color="#CCCCCC"> you've got</font><font color="#E5E5E5"> anyone that's</font>

410
00:16:19,850 --> 00:16:24,260
actually looking<font color="#E5E5E5"> at dynamic behavior of</font>

411
00:16:21,950 --> 00:16:26,000
<font color="#E5E5E5">your malware is going to be seen that</font>

412
00:16:24,260 --> 00:16:27,770
there's a UDP request going<font color="#E5E5E5"> out there</font>

413
00:16:26,000 --> 00:16:31,400
we're talking to an NTP<font color="#E5E5E5"> server and</font>

414
00:16:27,770 --> 00:16:34,100
something's going on<font color="#CCCCCC"> well</font><font color="#E5E5E5"> let's just</font>

415
00:16:31,400 --> 00:16:35,630
<font color="#E5E5E5">also recreate that functionality</font><font color="#CCCCCC"> inside</font>

416
00:16:34,100 --> 00:16:39,440
a<font color="#CCCCCC"> program that may take</font><font color="#E5E5E5"> a certain amount</font>

417
00:16:35,630 --> 00:16:42,230
<font color="#CCCCCC">of time</font><font color="#E5E5E5"> so let's say it's factoring</font>

418
00:16:39,440 --> 00:16:44,810
certain prime values<font color="#E5E5E5"> let's just say we</font>

419
00:16:42,230 --> 00:16:46,460
can do<font color="#CCCCCC"> I mean some sort of other math</font>

420
00:16:44,810 --> 00:16:48,949
activity that is going<font color="#CCCCCC"> to take maybe</font>

421
00:16:46,460 --> 00:16:50,930
<font color="#E5E5E5">half</font><font color="#CCCCCC"> a second or a second</font><font color="#E5E5E5"> complete well</font>

422
00:16:48,950 --> 00:16:52,100
if we can reasonably start figuring out

423
00:16:50,930 --> 00:16:54,739
<font color="#CCCCCC">okay this function is</font><font color="#E5E5E5"> going to take</font>

424
00:16:52,100 --> 00:16:56,990
<font color="#CCCCCC">about five seconds to complete or half a</font>

425
00:16:54,740 --> 00:16:58,700
second<font color="#CCCCCC"> you can just iterate</font><font color="#E5E5E5"> over that</font>

426
00:16:56,990 --> 00:17:00,530
function<font color="#CCCCCC"> obviously as many times as</font>

427
00:16:58,700 --> 00:17:03,440
you'd like<font color="#E5E5E5"> and kind of remove this</font>

428
00:17:00,530 --> 00:17:06,379
<font color="#E5E5E5">network dependency for a check to occur</font>

429
00:17:03,440 --> 00:17:10,520
<font color="#E5E5E5">area for a network request to occur in</font>

430
00:17:06,380 --> 00:17:13,280
<font color="#E5E5E5">your payload and so here's a basic</font>

431
00:17:10,520 --> 00:17:15,230
<font color="#E5E5E5">example in Python</font><font color="#CCCCCC"> where</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> here we're</font>

432
00:17:13,280 --> 00:17:17,839
<font color="#CCCCCC">just basically</font><font color="#E5E5E5"> doing a request</font><font color="#CCCCCC"> reaching</font>

433
00:17:15,230 --> 00:17:19,910
<font color="#E5E5E5">out to us pool at NTP org gathering that</font>

434
00:17:17,839 --> 00:17:22,220
data<font color="#E5E5E5"> are gathering the current time</font>

435
00:17:19,910 --> 00:17:24,380
trying to<font color="#E5E5E5"> perform a sleep making a</font>

436
00:17:22,220 --> 00:17:25,490
second request<font color="#E5E5E5"> and then down here</font><font color="#CCCCCC"> we're</font>

437
00:17:24,380 --> 00:17:27,530
actually trying to figure<font color="#CCCCCC"> out</font><font color="#E5E5E5"> is there</font>

438
00:17:25,490 --> 00:17:28,940
difference between these two times and

439
00:17:27,530 --> 00:17:30,170
<font color="#E5E5E5">so essentially if there is a difference</font>

440
00:17:28,940 --> 00:17:32,600
<font color="#E5E5E5">in the difference</font><font color="#CCCCCC"> that's what we expect</font>

441
00:17:30,170 --> 00:17:33,950
it should be then our<font color="#E5E5E5"> malware should run</font>

442
00:17:32,600 --> 00:17:36,620
or our code that we're try

443
00:17:33,950 --> 00:17:41,090
<font color="#CCCCCC">protect should run if not then become a</font>

444
00:17:36,620 --> 00:17:43,129
calculator next up so we're kind of

445
00:17:41,090 --> 00:17:46,300
going<font color="#E5E5E5"> to talk about encryption when it</font>

446
00:17:43,130 --> 00:17:49,880
comes for trying to<font color="#E5E5E5"> protect</font><font color="#CCCCCC"> our implants</font>

447
00:17:46,300 --> 00:17:53,540
one thing<font color="#E5E5E5"> that I would</font><font color="#CCCCCC"> argue in once you</font>

448
00:17:49,880 --> 00:17:55,340
state is if you if it<font color="#CCCCCC"> your malware gets</font>

449
00:17:53,540 --> 00:17:57,649
<font color="#CCCCCC">to a point</font><font color="#E5E5E5"> where it's in the hands of a</font>

450
00:17:55,340 --> 00:18:00,379
<font color="#E5E5E5">skilled reverse engineer</font><font color="#CCCCCC"> this stuff</font>

451
00:17:57,650 --> 00:18:04,490
alone is not going<font color="#E5E5E5"> to beat</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so this</font>

452
00:18:00,380 --> 00:18:05,900
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not designed to</font><font color="#E5E5E5"> beat anyone that</font>

453
00:18:04,490 --> 00:18:08,480
knows what they're<font color="#CCCCCC"> doing what</font><font color="#E5E5E5"> we're</font>

454
00:18:05,900 --> 00:18:09,920
looking to<font color="#CCCCCC"> be is kind</font><font color="#E5E5E5"> of quick automated</font>

455
00:18:08,480 --> 00:18:12,350
analysis<font color="#CCCCCC"> by different tools out</font><font color="#E5E5E5"> there</font>

456
00:18:09,920 --> 00:18:14,660
<font color="#E5E5E5">that</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> a be on a product it may be</font>

457
00:18:12,350 --> 00:18:17,270
sandbox<font color="#CCCCCC"> of a sandbox that is running</font><font color="#E5E5E5"> in</font>

458
00:18:14,660 --> 00:18:20,630
<font color="#E5E5E5">just something that makes our code not</font>

459
00:18:17,270 --> 00:18:23,389
look like malware<font color="#E5E5E5"> for through a quick</font>

460
00:18:20,630 --> 00:18:26,630
<font color="#CCCCCC">observation in the event</font><font color="#E5E5E5"> obviously</font><font color="#CCCCCC"> again</font>

461
00:18:23,390 --> 00:18:28,310
that it's getting actually analyzed then

462
00:18:26,630 --> 00:18:31,520
that's that's a<font color="#E5E5E5"> different issue</font><font color="#CCCCCC"> and</font>

463
00:18:28,310 --> 00:18:34,850
that's<font color="#CCCCCC"> not we're trying to solve so one</font>

464
00:18:31,520 --> 00:18:36,530
<font color="#E5E5E5">thing that we want to do is try to start</font>

465
00:18:34,850 --> 00:18:39,290
adding basic encryption<font color="#CCCCCC"> of payloads so</font>

466
00:18:36,530 --> 00:18:41,480
this is saying hey what if I want<font color="#E5E5E5"> to</font>

467
00:18:39,290 --> 00:18:43,790
drop dynamically draw indicators from

468
00:18:41,480 --> 00:18:46,790
the host<font color="#E5E5E5"> system that my code is running</font>

469
00:18:43,790 --> 00:18:49,490
on so if we know ahead<font color="#CCCCCC"> of time that we</font>

470
00:18:46,790 --> 00:18:52,940
want<font color="#CCCCCC"> to compromise system a and system</font><font color="#E5E5E5"> a</font>

471
00:18:49,490 --> 00:18:54,950
is<font color="#E5E5E5"> part of whatever domain it has a MAC</font>

472
00:18:52,940 --> 00:18:57,650
address<font color="#E5E5E5"> of this value we can basically</font>

473
00:18:54,950 --> 00:19:01,550
generate<font color="#CCCCCC"> a piece of malware on our side</font>

474
00:18:57,650 --> 00:19:04,070
and encrypt all that data using that

475
00:19:01,550 --> 00:19:06,649
information<font color="#CCCCCC"> so MAC address</font><font color="#E5E5E5"> username host</font>

476
00:19:04,070 --> 00:19:09,320
name domain whatever it is then when

477
00:19:06,650 --> 00:19:11,210
this payload runs at<font color="#CCCCCC"> runtime</font><font color="#E5E5E5"> it pulls</font>

478
00:19:09,320 --> 00:19:13,220
all that information off of<font color="#E5E5E5"> the system</font>

479
00:19:11,210 --> 00:19:15,950
that<font color="#E5E5E5"> is running on and concatenates</font>

480
00:19:13,220 --> 00:19:19,190
those that information<font color="#CCCCCC"> back</font><font color="#E5E5E5"> in a</font>

481
00:19:15,950 --> 00:19:21,080
repeatable manner<font color="#CCCCCC"> to generate a key for</font>

482
00:19:19,190 --> 00:19:24,530
<font color="#CCCCCC">the system it's on and so what we would</font>

483
00:19:21,080 --> 00:19:26,750
<font color="#E5E5E5">do is try</font><font color="#CCCCCC"> okay does this</font><font color="#E5E5E5"> actually does</font>

484
00:19:24,530 --> 00:19:28,430
this key match this<font color="#CCCCCC"> encrypted data can</font>

485
00:19:26,750 --> 00:19:29,420
<font color="#CCCCCC">actually decrypt and run my original</font>

486
00:19:28,430 --> 00:19:31,700
code

487
00:19:29,420 --> 00:19:33,950
if so then assume I'm on the system that

488
00:19:31,700 --> 00:19:35,930
<font color="#CCCCCC">I want to be on</font><font color="#E5E5E5"> that I'm targeting</font><font color="#CCCCCC"> if</font>

489
00:19:33,950 --> 00:19:39,340
I'm not able<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> that then it's</font>

490
00:19:35,930 --> 00:19:39,340
probably<font color="#E5E5E5"> on a different system again</font>

491
00:19:39,800 --> 00:19:45,470
<font color="#CCCCCC">a great example of that</font><font color="#E5E5E5"> out there</font><font color="#CCCCCC"> right</font>

492
00:19:43,010 --> 00:19:48,320
now there is is a tool that<font color="#E5E5E5"> does very</font>

493
00:19:45,470 --> 00:19:50,090
similar work is is called Ebola<font color="#CCCCCC"> josh</font>

494
00:19:48,320 --> 00:19:52,850
<font color="#CCCCCC">Pitts is</font><font color="#E5E5E5"> one of the developers of this</font>

495
00:19:50,090 --> 00:19:54,860
this works really well against a bunch

496
00:19:52,850 --> 00:19:57,409
of anti viruses actually<font color="#E5E5E5"> that claim to</font>

497
00:19:54,860 --> 00:19:59,090
<font color="#E5E5E5">do a lot</font><font color="#CCCCCC"> of machine learning silence is</font>

498
00:19:57,410 --> 00:20:02,300
one of them that<font color="#E5E5E5"> this will specifically</font>

499
00:19:59,090 --> 00:20:04,550
target<font color="#E5E5E5"> and bypass so it's it's a really</font>

500
00:20:02,300 --> 00:20:08,540
solid tool I also recommend<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> at</font>

501
00:20:04,550 --> 00:20:12,590
this<font color="#E5E5E5"> all right so we</font><font color="#CCCCCC"> have a different</font>

502
00:20:08,540 --> 00:20:16,159
module<font color="#E5E5E5"> also in</font><font color="#CCCCCC"> check please</font><font color="#E5E5E5"> called delay</font>

503
00:20:12,590 --> 00:20:20,209
analysis so has<font color="#E5E5E5"> anyone here ever worked</font>

504
00:20:16,160 --> 00:20:22,760
or seen or<font color="#E5E5E5"> used a tool Hyperion so I</font>

505
00:20:20,210 --> 00:20:24,260
<font color="#E5E5E5">think it's</font><font color="#CCCCCC"> always</font><font color="#E5E5E5"> okay Hyperion is a</font>

506
00:20:22,760 --> 00:20:26,570
really kind<font color="#E5E5E5"> of cool concept that we</font>

507
00:20:24,260 --> 00:20:28,970
basically rewrote in these languages

508
00:20:26,570 --> 00:20:31,639
<font color="#E5E5E5">that we're supporting what Hyperion does</font>

509
00:20:28,970 --> 00:20:34,580
is it's a compiled binary you put it on

510
00:20:31,640 --> 00:20:35,810
your system<font color="#CCCCCC"> you give it a program</font><font color="#E5E5E5"> so</font>

511
00:20:34,580 --> 00:20:36,919
this could<font color="#CCCCCC"> be again your malware it</font>

512
00:20:35,810 --> 00:20:37,250
could be anything you want it<font color="#E5E5E5"> doesn't</font>

513
00:20:36,920 --> 00:20:39,560
<font color="#E5E5E5">matter</font>

514
00:20:37,250 --> 00:20:43,520
<font color="#E5E5E5">you give it stat and it also didn't just</font>

515
00:20:39,560 --> 00:20:45,800
outputs an encrypted file well<font color="#E5E5E5"> this file</font>

516
00:20:43,520 --> 00:20:48,830
<font color="#E5E5E5">is your original program that you gave</font>

517
00:20:45,800 --> 00:20:51,110
it that's encrypted<font color="#E5E5E5"> the problem is there</font>

518
00:20:48,830 --> 00:20:53,960
<font color="#E5E5E5">is no decryption key stored inside this</font>

519
00:20:51,110 --> 00:20:57,260
file so the way<font color="#CCCCCC"> that this tool works is</font>

520
00:20:53,960 --> 00:21:00,590
every time it runs it brute forces

521
00:20:57,260 --> 00:21:01,790
itself so it's trying every single key

522
00:21:00,590 --> 00:21:04,909
and the way that it does it is through

523
00:21:01,790 --> 00:21:05,990
an artificially constrained key space<font color="#CCCCCC"> so</font>

524
00:21:04,910 --> 00:21:08,330
let's just say and I'll show our

525
00:21:05,990 --> 00:21:11,780
implementation of<font color="#E5E5E5"> this but if you have a</font>

526
00:21:08,330 --> 00:21:13,490
32 character AES key 25<font color="#E5E5E5"> characters may</font>

527
00:21:11,780 --> 00:21:16,040
<font color="#E5E5E5">be just</font><font color="#CCCCCC"> random letters</font><font color="#E5E5E5"> numbers symbols</font>

528
00:21:13,490 --> 00:21:18,770
whatever it is and the last<font color="#CCCCCC"> seven may</font>

529
00:21:16,040 --> 00:21:21,110
only be digits<font color="#E5E5E5"> or may only be letters</font>

530
00:21:18,770 --> 00:21:24,200
<font color="#E5E5E5">and what you can do is programmatically</font>

531
00:21:21,110 --> 00:21:27,050
iterate over all<font color="#E5E5E5"> of those numbers or</font>

532
00:21:24,200 --> 00:21:28,580
letters or whatever it<font color="#E5E5E5"> is and actually</font>

533
00:21:27,050 --> 00:21:30,409
just<font color="#E5E5E5"> brute for attempt</font><font color="#CCCCCC"> to brute-force</font>

534
00:21:28,580 --> 00:21:33,340
yourself until you find<font color="#E5E5E5"> your actual</font>

535
00:21:30,410 --> 00:21:36,020
<font color="#E5E5E5">excuse me key to decrypt your code so</font>

536
00:21:33,340 --> 00:21:37,399
<font color="#CCCCCC">let's</font><font color="#E5E5E5"> recreate this</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> we'll do</font>

537
00:21:36,020 --> 00:21:39,230
<font color="#E5E5E5">click down on a second</font><font color="#CCCCCC"> foot</font><font color="#E5E5E5"> delay</font>

538
00:21:37,400 --> 00:21:41,060
analysis is this tool as written in

539
00:21:39,230 --> 00:21:42,650
Python<font color="#E5E5E5"> basically you give it the source</font>

540
00:21:41,060 --> 00:21:44,870
code so<font color="#CCCCCC"> we're not working at a compiled</font>

541
00:21:42,650 --> 00:21:47,090
binary<font color="#CCCCCC"> level</font><font color="#E5E5E5"> we're looking</font><font color="#CCCCCC"> at your</font>

542
00:21:44,870 --> 00:21:49,399
<font color="#CCCCCC">original</font><font color="#E5E5E5"> source code before you compile</font>

543
00:21:47,090 --> 00:21:51,230
<font color="#CCCCCC">it</font><font color="#E5E5E5"> you basically just provide the</font>

544
00:21:49,400 --> 00:21:53,420
language that your code is<font color="#CCCCCC"> developed in</font>

545
00:21:51,230 --> 00:21:56,360
and it'll output<font color="#CCCCCC"> encrypted</font>

546
00:21:53,420 --> 00:21:58,280
in that<font color="#E5E5E5"> format so and I'll show you what</font>

547
00:21:56,360 --> 00:22:00,740
this<font color="#E5E5E5"> actually looks like when</font><font color="#CCCCCC"> we run</font><font color="#E5E5E5"> it</font>

548
00:21:58,280 --> 00:22:02,030
<font color="#E5E5E5">this is basically the code it's really a</font>

549
00:22:00,740 --> 00:22:04,130
minimal amount<font color="#CCCCCC"> of line just</font><font color="#E5E5E5"> a couple</font>

550
00:22:02,030 --> 00:22:06,320
<font color="#E5E5E5">functions</font><font color="#CCCCCC"> that just encrypt data we're</font>

551
00:22:04,130 --> 00:22:08,570
getting a random 25 character key and

552
00:22:06,320 --> 00:22:10,129
then<font color="#CCCCCC"> seven this</font><font color="#E5E5E5"> is actually just</font>

553
00:22:08,570 --> 00:22:11,810
<font color="#E5E5E5">returning seven numbers so that's</font>

554
00:22:10,130 --> 00:22:13,790
exactly<font color="#CCCCCC"> what we're doing is creating</font>

555
00:22:11,810 --> 00:22:15,800
<font color="#E5E5E5">that artificially constrained key space</font>

556
00:22:13,790 --> 00:22:19,639
<font color="#CCCCCC">that</font><font color="#E5E5E5"> words</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> brute-force ourself</font>

557
00:22:15,800 --> 00:22:22,460
over so<font color="#E5E5E5"> high level</font><font color="#CCCCCC"> because I'm terrible</font>

558
00:22:19,640 --> 00:22:24,560
at<font color="#CCCCCC"> vizio this is what you get is this</font><font color="#E5E5E5"> is</font>

559
00:22:22,460 --> 00:22:27,980
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of how it works is we just</font><font color="#E5E5E5"> start at</font>

560
00:22:24,560 --> 00:22:29,840
one<font color="#CCCCCC"> and then we'll try to decrypt</font>

561
00:22:27,980 --> 00:22:32,270
whatever the code is inside it'll

562
00:22:29,840 --> 00:22:34,370
decrypt and decode it<font color="#CCCCCC"> and then if that</font>

563
00:22:32,270 --> 00:22:36,490
string basically<font color="#CCCCCC"> matches what we expect</font>

564
00:22:34,370 --> 00:22:39,169
and so this is specifically for<font color="#E5E5E5"> Perl</font>

565
00:22:36,490 --> 00:22:41,900
<font color="#CCCCCC">we'll have an encrypted</font><font color="#E5E5E5"> string alongside</font>

566
00:22:39,170 --> 00:22:44,030
the<font color="#CCCCCC"> original code that we want to run if</font>

567
00:22:41,900 --> 00:22:46,130
this is what we expect it to<font color="#CCCCCC"> be then</font>

568
00:22:44,030 --> 00:22:48,260
decrypt<font color="#E5E5E5"> and inject their shellcode or</font>

569
00:22:46,130 --> 00:22:51,170
run whatever<font color="#E5E5E5"> our malware is that we want</font>

570
00:22:48,260 --> 00:22:52,760
<font color="#CCCCCC">to if it's</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> the key that</font><font color="#E5E5E5"> we expect it</font>

571
00:22:51,170 --> 00:22:54,890
to<font color="#E5E5E5"> be and we cannot decrypt</font><font color="#CCCCCC"> a string</font>

572
00:22:52,760 --> 00:23:05,360
it'll<font color="#E5E5E5"> go back up and iterate down to the</font>

573
00:22:54,890 --> 00:23:08,510
next value so a quick demo of<font color="#CCCCCC"> that is so</font>

574
00:23:05,360 --> 00:23:10,820
we<font color="#E5E5E5"> have this hello world over here we're</font>

575
00:23:08,510 --> 00:23:12,500
<font color="#E5E5E5">basically just doing a</font><font color="#CCCCCC"> printout</font><font color="#E5E5E5"> and so</font>

576
00:23:10,820 --> 00:23:21,830
if<font color="#E5E5E5"> I oak and no one could probably see</font>

577
00:23:12,500 --> 00:23:24,350
that so if I do a brute-force<font color="#E5E5E5"> give it</font>

578
00:23:21,830 --> 00:23:26,990
the file<font color="#E5E5E5"> hello world and tell it to you</font>

579
00:23:24,350 --> 00:23:27,860
<font color="#E5E5E5">icon it's going to print</font><font color="#CCCCCC"> out so this</font><font color="#E5E5E5"> is</font>

580
00:23:26,990 --> 00:23:30,440
actually going to<font color="#E5E5E5"> take a little else</font>

581
00:23:27,860 --> 00:23:31,729
<font color="#CCCCCC">we'll go another key</font><font color="#E5E5E5"> all right so here's</font>

582
00:23:30,440 --> 00:23:34,520
<font color="#CCCCCC">a</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> key so basically it just</font>

583
00:23:31,730 --> 00:23:37,310
<font color="#E5E5E5">writes out a file to disk which</font><font color="#CCCCCC"> is this</font>

584
00:23:34,520 --> 00:23:42,379
<font color="#E5E5E5">encrypted</font><font color="#CCCCCC"> PI and so if you want</font><font color="#E5E5E5"> to take</font>

585
00:23:37,310 --> 00:23:45,310
a look at what<font color="#E5E5E5"> that</font><font color="#CCCCCC"> looks like see if I</font>

586
00:23:42,380 --> 00:23:45,310
can make<font color="#E5E5E5"> this zoom in</font>

587
00:23:52,029 --> 00:23:55,269
is basically<font color="#CCCCCC"> right here is our encoded</font>

588
00:23:54,820 --> 00:23:56,649
data

589
00:23:55,269 --> 00:23:59,139
the original script which is<font color="#E5E5E5"> just that</font>

590
00:23:56,649 --> 00:24:01,059
hello world<font color="#E5E5E5"> and basically right</font><font color="#CCCCCC"> now</font>

591
00:23:59,139 --> 00:24:03,218
we're just iterating over<font color="#E5E5E5"> this range I</font>

592
00:24:01,059 --> 00:24:06,519
think it's a<font color="#E5E5E5"> hundred thousand to a</font>

593
00:24:03,219 --> 00:24:07,929
million this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the original</font><font color="#E5E5E5"> key down</font>

594
00:24:06,519 --> 00:24:09,999
<font color="#CCCCCC">here we're just appending that to that</font>

595
00:24:07,929 --> 00:24:12,820
<font color="#CCCCCC">and then brute-forcing</font><font color="#E5E5E5"> and trying to</font>

596
00:24:09,999 --> 00:24:16,989
decode and decrypt this script at

597
00:24:12,820 --> 00:24:22,330
<font color="#E5E5E5">runtime</font><font color="#CCCCCC"> so an example if i come on plus</font>

598
00:24:16,989 --> 00:24:24,789
<font color="#CCCCCC">x encrypted that we call it this may</font>

599
00:24:22,330 --> 00:24:26,769
take what<font color="#E5E5E5"> five ten seconds at this point</font>

600
00:24:24,789 --> 00:24:28,749
<font color="#E5E5E5">we'll see but right now it's going</font><font color="#CCCCCC"> to be</font>

601
00:24:26,769 --> 00:24:31,330
just iterating<font color="#E5E5E5"> over the entire key space</font>

602
00:24:28,749 --> 00:24:32,759
in the background<font color="#CCCCCC"> and ideally within</font><font color="#E5E5E5"> a</font>

603
00:24:31,330 --> 00:24:35,439
couple<font color="#CCCCCC"> of seconds we should see this</font>

604
00:24:32,759 --> 00:24:37,450
program<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> just print out</font><font color="#E5E5E5"> hello</font>

605
00:24:35,440 --> 00:24:38,559
world<font color="#CCCCCC"> the</font><font color="#E5E5E5"> only thing to be</font><font color="#CCCCCC"> aware of is</font>

606
00:24:37,450 --> 00:24:41,019
obviously<font color="#E5E5E5"> when you're doing something</font>

607
00:24:38,559 --> 00:24:43,210
like<font color="#E5E5E5"> this it's going</font><font color="#CCCCCC"> to take up a decent</font>

608
00:24:41,019 --> 00:24:44,679
<font color="#E5E5E5">amount of processor like</font><font color="#CCCCCC"> runtime</font>

609
00:24:43,210 --> 00:24:46,629
<font color="#E5E5E5">essentially so if you have a single</font>

610
00:24:44,679 --> 00:24:49,419
processor system<font color="#E5E5E5"> which I don't know why</font>

611
00:24:46,629 --> 00:24:52,299
you wouldn't<font color="#E5E5E5"> anymore today</font><font color="#CCCCCC"> but you're</font>

612
00:24:49,419 --> 00:24:54,190
gonna spike your process CPU usage<font color="#CCCCCC"> I was</font>

613
00:24:52,299 --> 00:24:56,139
so yeah so here we go in this<font color="#E5E5E5"> case you</font>

614
00:24:54,190 --> 00:24:57,369
<font color="#CCCCCC">just printed</font><font color="#E5E5E5"> out our code which we're</font>

615
00:24:56,139 --> 00:24:59,738
just printing<font color="#CCCCCC"> out hello world</font>

616
00:24:57,369 --> 00:25:01,689
essentially<font color="#E5E5E5"> and so we can you can apply</font>

617
00:24:59,739 --> 00:25:02,739
this<font color="#CCCCCC"> concept for any code</font><font color="#E5E5E5"> that you've</font>

618
00:25:01,690 --> 00:25:06,399
<font color="#CCCCCC">written</font>

619
00:25:02,739 --> 00:25:08,679
right now we have<font color="#CCCCCC"> python powershell</font>

620
00:25:06,399 --> 00:25:10,869
<font color="#E5E5E5">pearl and c-sharp is getting</font><font color="#CCCCCC"> added in</font>

621
00:25:08,679 --> 00:25:12,309
like<font color="#E5E5E5"> within an hour or</font><font color="#CCCCCC"> two and we're</font>

622
00:25:10,869 --> 00:25:14,789
finishing expanding<font color="#E5E5E5"> this to other</font>

623
00:25:12,309 --> 00:25:14,789
<font color="#E5E5E5">languages</font>

624
00:25:20,020 --> 00:25:28,389
<font color="#CCCCCC">I think this is you so let's talk a</font>

625
00:25:27,010 --> 00:25:30,340
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more about building a profile</font>

626
00:25:28,390 --> 00:25:32,290
<font color="#E5E5E5">about where you expect</font><font color="#CCCCCC"> to run</font><font color="#E5E5E5"> we talked</font>

627
00:25:30,340 --> 00:25:34,240
about rofo<font color="#E5E5E5"> I didn't notice</font><font color="#CCCCCC"> oh it's kind</font>

628
00:25:32,290 --> 00:25:35,770
<font color="#E5E5E5">of cut</font><font color="#CCCCCC"> off</font><font color="#E5E5E5"> we talked about profiles</font><font color="#CCCCCC"> and</font>

629
00:25:34,240 --> 00:25:37,510
that<font color="#E5E5E5"> when you have a good idea</font><font color="#CCCCCC"> of the</font>

630
00:25:35,770 --> 00:25:38,889
domain you're on you<font color="#E5E5E5"> can learn things</font>

631
00:25:37,510 --> 00:25:41,020
<font color="#E5E5E5">about the systems and then you can</font>

632
00:25:38,890 --> 00:25:43,810
target them even better<font color="#E5E5E5"> so that if it's</font>

633
00:25:41,020 --> 00:25:48,400
running at company a it won't<font color="#E5E5E5"> even run a</font>

634
00:25:43,810 --> 00:25:50,409
<font color="#E5E5E5">company</font><font color="#CCCCCC"> B process names</font><font color="#E5E5E5"> if you want to</font>

635
00:25:48,400 --> 00:25:51,790
go the sandbox detection route<font color="#E5E5E5"> you can</font>

636
00:25:50,410 --> 00:25:53,860
look for a<font color="#E5E5E5"> specific</font><font color="#CCCCCC"> process names like</font>

637
00:25:51,790 --> 00:25:55,600
Wireshark<font color="#CCCCCC"> vmware</font><font color="#E5E5E5"> process explorer etc</font>

638
00:25:53,860 --> 00:25:57,280
and if you see those on you don't<font color="#E5E5E5"> run</font>

639
00:25:55,600 --> 00:25:59,620
but if you want to go in a<font color="#CCCCCC"> different</font>

640
00:25:57,280 --> 00:26:01,149
route if every computer on<font color="#CCCCCC"> that domain</font>

641
00:25:59,620 --> 00:26:03,219
has a certain process<font color="#E5E5E5"> running sort of</font>

642
00:26:01,150 --> 00:26:04,930
<font color="#CCCCCC">management tool something like that you</font>

643
00:26:03,220 --> 00:26:09,070
can avoid that as well<font color="#E5E5E5"> you can you can</font>

644
00:26:04,930 --> 00:26:11,200
say this needs to<font color="#E5E5E5"> be running as well</font><font color="#CCCCCC"> so</font>

645
00:26:09,070 --> 00:26:13,120
here's an<font color="#CCCCCC"> example in PowerShell this is</font>

646
00:26:11,200 --> 00:26:14,490
just a sandbox detection pure module

647
00:26:13,120 --> 00:26:17,379
where<font color="#E5E5E5"> you look for all these different</font>

648
00:26:14,490 --> 00:26:22,420
analysis tools and you won't run if you

649
00:26:17,380 --> 00:26:24,580
find any<font color="#E5E5E5"> of them Windows updates is</font>

650
00:26:22,420 --> 00:26:27,040
another one<font color="#CCCCCC"> companies patch their</font>

651
00:26:24,580 --> 00:26:28,480
systems at<font color="#CCCCCC"> different rates so if one</font><font color="#E5E5E5"> of</font>

652
00:26:27,040 --> 00:26:30,460
them has a certain amount<font color="#CCCCCC"> of Windows</font>

653
00:26:28,480 --> 00:26:32,950
updates or there's a specific<font color="#E5E5E5"> Windows</font>

654
00:26:30,460 --> 00:26:34,840
Update you're looking for you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> search</font>

655
00:26:32,950 --> 00:26:37,270
for<font color="#CCCCCC"> that before you run your payload</font><font color="#E5E5E5"> if</font>

656
00:26:34,840 --> 00:26:39,639
there's a patch<font color="#CCCCCC"> Windows apply that fixes</font>

657
00:26:37,270 --> 00:26:40,840
some sort of vulnerability well you can

658
00:26:39,640 --> 00:26:42,640
check<font color="#CCCCCC"> to see if that's there before</font>

659
00:26:40,840 --> 00:26:48,370
actually executing and triggering all

660
00:26:42,640 --> 00:26:49,600
sorts of alarms so here's an

661
00:26:48,370 --> 00:26:52,389
implementation<font color="#CCCCCC"> of PowerShell again</font>

662
00:26:49,600 --> 00:26:55,149
<font color="#CCCCCC">looking</font><font color="#E5E5E5"> for Microsoft Windows Update</font>

663
00:26:52,390 --> 00:27:02,740
client<font color="#CCCCCC"> to see how many have been</font><font color="#E5E5E5"> updated</font>

664
00:26:55,150 --> 00:27:04,270
<font color="#E5E5E5">on</font><font color="#CCCCCC"> that system registry size</font><font color="#E5E5E5"> if you want</font>

665
00:27:02,740 --> 00:27:06,520
<font color="#CCCCCC">a computer that's more in use than</font>

666
00:27:04,270 --> 00:27:07,870
others then the<font color="#CCCCCC"> registry is gonna get</font>

667
00:27:06,520 --> 00:27:09,550
bloated over time that's<font color="#CCCCCC"> just what</font>

668
00:27:07,870 --> 00:27:11,649
happens in Windows<font color="#E5E5E5"> when you use your</font>

669
00:27:09,550 --> 00:27:14,350
system<font color="#CCCCCC"> a long time you install things</font>

670
00:27:11,650 --> 00:27:17,410
<font color="#E5E5E5">the registry bubbles up and</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> gets big</font>

671
00:27:14,350 --> 00:27:19,600
<font color="#E5E5E5">so this can be</font><font color="#CCCCCC"> used as a fingerprint for</font>

672
00:27:17,410 --> 00:27:22,120
<font color="#CCCCCC">the kind of</font><font color="#E5E5E5"> system you're on</font><font color="#CCCCCC"> company</font>

673
00:27:19,600 --> 00:27:25,240
<font color="#E5E5E5">you're on check for a certain size of</font>

674
00:27:22,120 --> 00:27:27,159
registry and<font color="#E5E5E5"> again I'm just showing</font>

675
00:27:25,240 --> 00:27:30,180
these in PowerShell<font color="#E5E5E5"> where we have them</font>

676
00:27:27,160 --> 00:27:30,180
in<font color="#E5E5E5"> every language though</font>

677
00:27:32,260 --> 00:27:36,460
so now let's talk<font color="#CCCCCC"> about user activity</font>

678
00:27:36,790 --> 00:27:40,700
there are a lot of<font color="#E5E5E5"> reasons you want to</font>

679
00:27:38,660 --> 00:27:42,980
<font color="#CCCCCC">user</font><font color="#E5E5E5"> present besides just checking to</font>

680
00:27:40,700 --> 00:27:44,720
see if you're in a sandbox<font color="#CCCCCC"> number one</font>

681
00:27:42,980 --> 00:27:46,430
you<font color="#E5E5E5"> might be off to that system but you</font>

682
00:27:44,720 --> 00:27:48,800
don't have<font color="#E5E5E5"> that users credentials so you</font>

683
00:27:46,430 --> 00:27:50,930
could present a pop-up<font color="#E5E5E5"> box that prompts</font>

684
00:27:48,800 --> 00:27:53,990
them for their credentials<font color="#E5E5E5"> number two</font>

685
00:27:50,930 --> 00:27:55,940
<font color="#CCCCCC">we've actually had success with</font><font color="#E5E5E5"> this we</font>

686
00:27:53,990 --> 00:27:57,770
were running cobalt strike and we didn't

687
00:27:55,940 --> 00:28:00,200
know how to<font color="#E5E5E5"> get</font><font color="#CCCCCC"> into the</font><font color="#E5E5E5"> clients PCI</font>

688
00:27:57,770 --> 00:28:00,770
environment so we did was we just set up

689
00:28:00,200 --> 00:28:03,080
<font color="#E5E5E5">VNC</font>

690
00:28:00,770 --> 00:28:05,260
<font color="#E5E5E5">we watched the user for a little bit and</font>

691
00:28:03,080 --> 00:28:07,250
we saw what sites he navigated<font color="#CCCCCC"> to</font>

692
00:28:05,260 --> 00:28:09,590
eventually we found<font color="#E5E5E5"> a portal that led to</font>

693
00:28:07,250 --> 00:28:12,560
<font color="#CCCCCC">their PCI environment and that</font><font color="#E5E5E5"> was just</font>

694
00:28:09,590 --> 00:28:13,639
<font color="#E5E5E5">a little</font><font color="#CCCCCC"> bit of watching another reason</font>

695
00:28:12,560 --> 00:28:15,590
you<font color="#CCCCCC"> might want to use</font><font color="#E5E5E5"> a present</font><font color="#CCCCCC"> is</font>

696
00:28:13,640 --> 00:28:17,600
because you have some<font color="#E5E5E5"> two-factor system</font>

697
00:28:15,590 --> 00:28:20,240
where you need them<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> present and to</font>

698
00:28:17,600 --> 00:28:21,230
click<font color="#CCCCCC"> YES on</font><font color="#E5E5E5"> a prompt and that happens</font>

699
00:28:20,240 --> 00:28:23,180
<font color="#E5E5E5">more often than you</font><font color="#CCCCCC"> think</font>

700
00:28:21,230 --> 00:28:25,730
in our<font color="#E5E5E5"> experience if you just ask a user</font>

701
00:28:23,180 --> 00:28:27,230
<font color="#E5E5E5">to two factors authenticate us they'll</font>

702
00:28:25,730 --> 00:28:28,960
<font color="#E5E5E5">just click yes</font><font color="#CCCCCC"> and without thinking</font>

703
00:28:27,230 --> 00:28:31,700
twice

704
00:28:28,960 --> 00:28:33,320
so<font color="#CCCCCC"> maskless</font><font color="#E5E5E5"> is a good way to</font><font color="#CCCCCC"> check if</font><font color="#E5E5E5"> a</font>

705
00:28:31,700 --> 00:28:35,360
<font color="#E5E5E5">user's present if the mouse is</font>

706
00:28:33,320 --> 00:28:38,149
<font color="#CCCCCC">registering</font><font color="#E5E5E5"> clicks they're probably</font>

707
00:28:35,360 --> 00:28:39,740
there so if you require a certain<font color="#E5E5E5"> amount</font>

708
00:28:38,150 --> 00:28:41,360
<font color="#E5E5E5">of clicks</font><font color="#CCCCCC"> your pay little</font><font color="#E5E5E5"> just sit there</font>

709
00:28:39,740 --> 00:28:44,870
<font color="#E5E5E5">until the users back at his or her</font>

710
00:28:41,360 --> 00:28:48,590
<font color="#CCCCCC">computer and here's an implementation in</font>

711
00:28:44,870 --> 00:28:50,780
<font color="#CCCCCC">python there's a import win32 api it's a</font>

712
00:28:48,590 --> 00:28:52,629
good way<font color="#CCCCCC"> of interacting</font><font color="#E5E5E5"> with the you</font>

713
00:28:50,780 --> 00:28:56,180
know<font color="#E5E5E5"> the kernels and</font><font color="#CCCCCC"> all that</font>

714
00:28:52,630 --> 00:28:57,380
look the kernel libraries so you<font color="#CCCCCC"> can get</font>

715
00:28:56,180 --> 00:28:59,000
the key state and you just keep

716
00:28:57,380 --> 00:29:00,920
iterating through<font color="#E5E5E5"> this while loop and</font>

717
00:28:59,000 --> 00:29:05,510
you can<font color="#E5E5E5"> just increment</font><font color="#CCCCCC"> the count</font><font color="#E5E5E5"> until</font>

718
00:29:00,920 --> 00:29:06,680
the user is present<font color="#E5E5E5"> here is in</font>

719
00:29:05,510 --> 00:29:08,690
PowerShell again just a different

720
00:29:06,680 --> 00:29:09,920
<font color="#CCCCCC">implementation of the same concept</font><font color="#E5E5E5"> so</font>

721
00:29:08,690 --> 00:29:12,620
this would be<font color="#CCCCCC"> good</font><font color="#E5E5E5"> and like PowerShell</font>

722
00:29:09,920 --> 00:29:14,630
<font color="#E5E5E5">Empire or you know any powershell</font>

723
00:29:12,620 --> 00:29:18,620
payload you<font color="#E5E5E5"> have to just port this over</font>

724
00:29:14,630 --> 00:29:20,360
if you want the<font color="#E5E5E5"> user to be present</font><font color="#CCCCCC"> Mouse</font>

725
00:29:18,620 --> 00:29:22,550
position<font color="#E5E5E5"> is another way to</font><font color="#CCCCCC"> check up the</font>

726
00:29:20,360 --> 00:29:23,929
users present<font color="#E5E5E5"> if the users at their</font>

727
00:29:22,550 --> 00:29:26,899
computer they'll be moving their Mouse

728
00:29:23,930 --> 00:29:28,580
it's a fact<font color="#E5E5E5"> of life so if you get the x</font>

729
00:29:26,900 --> 00:29:30,650
and<font color="#CCCCCC"> y-coordinates of the mouse at a</font>

730
00:29:28,580 --> 00:29:32,360
certain point in time<font color="#E5E5E5"> you wait a little</font>

731
00:29:30,650 --> 00:29:36,140
<font color="#E5E5E5">bit you do like a long process or you</font>

732
00:29:32,360 --> 00:29:38,209
sleep<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you check again then it should</font>

733
00:29:36,140 --> 00:29:39,230
<font color="#CCCCCC">be in a different location and if it's</font>

734
00:29:38,210 --> 00:29:42,890
<font color="#E5E5E5">in a</font><font color="#CCCCCC"> different location the users</font>

735
00:29:39,230 --> 00:29:47,360
<font color="#CCCCCC">probably using that mouse to move</font><font color="#E5E5E5"> around</font>

736
00:29:42,890 --> 00:29:49,429
and here<font color="#E5E5E5"> isn't going you get the first</font>

737
00:29:47,360 --> 00:29:51,919
<font color="#CCCCCC">X&Y coordinates</font><font color="#E5E5E5"> you sleep for</font><font color="#CCCCCC"> a little</font>

738
00:29:49,429 --> 00:29:53,870
<font color="#CCCCCC">bit</font><font color="#E5E5E5"> you check again</font><font color="#CCCCCC"> and you'll just</font>

739
00:29:51,920 --> 00:29:56,120
<font color="#E5E5E5">print out cursor hasn't moved</font><font color="#CCCCCC"> do not</font>

740
00:29:53,870 --> 00:30:00,530
proceed or<font color="#E5E5E5"> the cursor has</font><font color="#CCCCCC"> mu if the</font>

741
00:29:56,120 --> 00:30:01,549
users probably<font color="#CCCCCC"> here</font><font color="#E5E5E5"> proceed and go by</font>

742
00:30:00,530 --> 00:30:03,740
<font color="#E5E5E5">the way has a very neat way</font><font color="#CCCCCC"> of</font>

743
00:30:01,549 --> 00:30:06,620
interacting<font color="#E5E5E5"> with windows functions like</font>

744
00:30:03,740 --> 00:30:09,350
<font color="#E5E5E5">cordial else you can just import a lazy</font>

745
00:30:06,620 --> 00:30:11,330
<font color="#E5E5E5">dll up there and you can just</font><font color="#CCCCCC"> reference</font>

746
00:30:09,350 --> 00:30:18,110
all<font color="#CCCCCC"> the functions with it on safe</font>

747
00:30:11,330 --> 00:30:20,178
pointer another one is just presenting a

748
00:30:18,110 --> 00:30:21,469
user with a<font color="#E5E5E5"> peer popup box</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is kind</font>

749
00:30:20,179 --> 00:30:25,010
of one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> my favorites and despite how</font>

750
00:30:21,470 --> 00:30:27,080
simple it is if they click<font color="#E5E5E5"> OK</font><font color="#CCCCCC"> on a box</font>

751
00:30:25,010 --> 00:30:28,610
that<font color="#CCCCCC"> means there</font><font color="#E5E5E5"> there that</font><font color="#CCCCCC"> box can sit</font>

752
00:30:27,080 --> 00:30:31,040
<font color="#E5E5E5">on their computer for days hours</font>

753
00:30:28,610 --> 00:30:34,250
whatever but when we have<font color="#E5E5E5"> our code that</font>

754
00:30:31,040 --> 00:30:36,200
presents<font color="#CCCCCC"> this popup</font><font color="#E5E5E5"> box</font><font color="#CCCCCC"> when they click</font>

755
00:30:34,250 --> 00:30:38,780
it we can execute<font color="#E5E5E5"> so here's how we</font>

756
00:30:36,200 --> 00:30:40,580
<font color="#E5E5E5">implemented it in Ruby again these</font>

757
00:30:38,780 --> 00:30:42,649
<font color="#E5E5E5">accept</font><font color="#CCCCCC"> command-line</font><font color="#E5E5E5"> parameters so you</font>

758
00:30:40,580 --> 00:30:44,659
<font color="#CCCCCC">can</font><font color="#E5E5E5"> just pass in the title as the first</font>

759
00:30:42,650 --> 00:30:47,510
<font color="#E5E5E5">argument and the message</font><font color="#CCCCCC"> that you want</font>

760
00:30:44,660 --> 00:30:49,190
to present<font color="#E5E5E5"> and the next one and</font><font color="#CCCCCC"> well</font>

761
00:30:47,510 --> 00:30:51,470
<font color="#E5E5E5">print at</font><font color="#CCCCCC"> the end now</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> users</font><font color="#E5E5E5"> clicked</font>

762
00:30:49,190 --> 00:30:53,630
<font color="#E5E5E5">ok or close the box</font><font color="#CCCCCC"> we'll proceed</font><font color="#E5E5E5"> with</font>

763
00:30:51,470 --> 00:30:54,740
<font color="#E5E5E5">our payload so this is a really</font>

764
00:30:53,630 --> 00:30:56,330
effective way<font color="#CCCCCC"> of figuring out</font><font color="#E5E5E5"> if the</font>

765
00:30:54,740 --> 00:30:59,600
users at<font color="#E5E5E5"> their at their computer or not</font>

766
00:30:56,330 --> 00:31:01,879
and here's a really<font color="#CCCCCC"> bad gift that I made</font>

767
00:30:59,600 --> 00:31:03,980
he's<font color="#E5E5E5"> not a</font><font color="#CCCCCC"> Visio embedded</font><font color="#E5E5E5"> gift</font><font color="#CCCCCC"> I guess</font>

768
00:31:01,880 --> 00:31:05,900
<font color="#E5E5E5">but this is in the power chill</font>

769
00:31:03,980 --> 00:31:08,120
implementation we present the title

770
00:31:05,900 --> 00:31:09,260
security update the message box<font color="#E5E5E5"> will say</font>

771
00:31:08,120 --> 00:31:11,510
your system<font color="#E5E5E5"> has been updated</font>

772
00:31:09,260 --> 00:31:14,419
<font color="#CCCCCC">successfully</font><font color="#E5E5E5"> here it is when I clicked</font>

773
00:31:11,510 --> 00:31:16,549
<font color="#E5E5E5">ok the new line print it out it said</font>

774
00:31:14,419 --> 00:31:17,900
it's time<font color="#E5E5E5"> to execute our payload</font><font color="#CCCCCC"> and you</font>

775
00:31:16,549 --> 00:31:19,730
can<font color="#E5E5E5"> customize that however you want for</font>

776
00:31:17,900 --> 00:31:21,799
whatever engagement if the client has

777
00:31:19,730 --> 00:31:23,840
some sort<font color="#E5E5E5"> of software they use you can</font>

778
00:31:21,799 --> 00:31:25,040
say hey this encountered problem<font color="#CCCCCC"> this</font>

779
00:31:23,840 --> 00:31:29,928
<font color="#E5E5E5">software</font><font color="#CCCCCC"> it gathered a problem please</font>

780
00:31:25,040 --> 00:31:31,340
click<font color="#E5E5E5"> OK there's a lot</font><font color="#CCCCCC"> of other ways to</font>

781
00:31:29,929 --> 00:31:32,960
<font color="#E5E5E5">secure your</font><font color="#CCCCCC"> implants and we went through</font>

782
00:31:31,340 --> 00:31:34,370
<font color="#CCCCCC">a lot of</font><font color="#E5E5E5"> them and</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> took a long</font><font color="#CCCCCC"> time</font>

783
00:31:32,960 --> 00:31:36,650
but there's so many<font color="#E5E5E5"> more that we can and</font>

784
00:31:34,370 --> 00:31:38,020
<font color="#CCCCCC">will implement</font><font color="#E5E5E5"> here's just a few</font><font color="#CCCCCC"> more I</font>

785
00:31:36,650 --> 00:31:40,970
encourage<font color="#E5E5E5"> you all</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> check out the</font>

786
00:31:38,020 --> 00:31:42,650
repository when you get a chance<font color="#CCCCCC"> and at</font>

787
00:31:40,970 --> 00:31:44,000
this point<font color="#CCCCCC"> I'd like to say that</font><font color="#E5E5E5"> we would</font>

788
00:31:42,650 --> 00:31:45,919
<font color="#E5E5E5">really like contributions from the</font>

789
00:31:44,000 --> 00:31:47,330
<font color="#CCCCCC">open-source community because we want</font>

790
00:31:45,919 --> 00:31:50,059
this to<font color="#CCCCCC"> be a centralized repo for</font>

791
00:31:47,330 --> 00:31:51,530
everyone to add and pull<font color="#E5E5E5"> from so</font><font color="#CCCCCC"> I'll</font>

792
00:31:50,059 --> 00:31:53,300
get it merged in a few if<font color="#CCCCCC"> you have any</font>

793
00:31:51,530 --> 00:31:54,379
<font color="#E5E5E5">ideas you want</font><font color="#CCCCCC"> implement and if you want</font>

794
00:31:53,300 --> 00:31:57,610
to get practice<font color="#CCCCCC"> of all these</font><font color="#E5E5E5"> different</font>

795
00:31:54,380 --> 00:31:57,610
languages<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a good way to do it</font>

796
00:31:58,990 --> 00:32:02,419
now<font color="#E5E5E5"> Chris is going to talk about porting</font>

797
00:32:01,100 --> 00:32:05,779
this to your payload<font color="#CCCCCC"> they can get a</font>

798
00:32:02,419 --> 00:32:07,879
actually<font color="#E5E5E5"> usable</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so thanks man</font>

799
00:32:05,779 --> 00:32:08,690
yeah<font color="#E5E5E5"> finally the way that we so we</font>

800
00:32:07,879 --> 00:32:09,918
obviously<font color="#E5E5E5"> wouldn't were a bunch of</font>

801
00:32:08,690 --> 00:32:12,409
<font color="#E5E5E5">random a couple different random</font>

802
00:32:09,919 --> 00:32:14,330
techniques<font color="#CCCCCC"> one may be effective in a</font>

803
00:32:12,409 --> 00:32:18,019
certain environment<font color="#CCCCCC"> in</font><font color="#E5E5E5"> a certain</font>

804
00:32:14,330 --> 00:32:19,369
environment<font color="#CCCCCC"> it also may not</font><font color="#E5E5E5"> be one thing</font>

805
00:32:18,019 --> 00:32:21,139
<font color="#E5E5E5">that we like to think</font><font color="#CCCCCC"> is you're not</font>

806
00:32:19,369 --> 00:32:23,149
constrained<font color="#E5E5E5"> obviously it's just</font><font color="#CCCCCC"> a single</font>

807
00:32:21,139 --> 00:32:24,918
check either<font color="#E5E5E5"> the way a good way to look</font>

808
00:32:23,149 --> 00:32:27,799
at this is if you're able to<font color="#E5E5E5"> write your</font>

809
00:32:24,919 --> 00:32:29,179
malware or your code<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be exactly for</font>

810
00:32:27,799 --> 00:32:30,499
the environment<font color="#E5E5E5"> that you want you can</font>

811
00:32:29,179 --> 00:32:32,330
chain a lot of these different checks

812
00:32:30,499 --> 00:32:34,159
together to try<font color="#E5E5E5"> to ensure</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you're on</font>

813
00:32:32,330 --> 00:32:36,350
the system<font color="#E5E5E5"> that you're targeting or that</font>

814
00:32:34,159 --> 00:32:38,360
you want to target<font color="#E5E5E5"> and have your code</font>

815
00:32:36,350 --> 00:32:40,248
run at that point<font color="#E5E5E5"> so in this case</font>

816
00:32:38,360 --> 00:32:41,600
there's a PowerShell implementation

817
00:32:40,249 --> 00:32:45,610
looks<font color="#E5E5E5"> like</font><font color="#CCCCCC"> we're it's</font><font color="#E5E5E5"> just trying to</font>

818
00:32:41,600 --> 00:32:48,350
pull the domain via<font color="#E5E5E5"> a</font><font color="#CCCCCC"> WMI query of the</font>

819
00:32:45,610 --> 00:32:49,519
<font color="#E5E5E5">right here in this check and so this is</font>

820
00:32:48,350 --> 00:32:51,320
one thing<font color="#CCCCCC"> that you</font><font color="#E5E5E5"> can add obviously</font><font color="#CCCCCC"> to</font>

821
00:32:49,519 --> 00:32:52,700
<font color="#E5E5E5">PowerShell code the next</font><font color="#CCCCCC"> thing is</font>

822
00:32:51,320 --> 00:32:54,710
obviously we're<font color="#CCCCCC"> just starting</font><font color="#E5E5E5"> to build</font>

823
00:32:52,700 --> 00:32:55,460
<font color="#E5E5E5">on</font><font color="#CCCCCC"> top of this</font><font color="#E5E5E5"> so we're now trying to</font>

824
00:32:54,710 --> 00:32:57,110
<font color="#E5E5E5">say</font><font color="#CCCCCC"> okay</font>

825
00:32:55,460 --> 00:32:58,580
run on this domain<font color="#E5E5E5"> but if I'm not</font>

826
00:32:57,110 --> 00:33:01,070
<font color="#E5E5E5">running under the context of this</font>

827
00:32:58,580 --> 00:33:02,360
specific<font color="#E5E5E5"> user account</font><font color="#CCCCCC"> don't execute this</font>

828
00:33:01,070 --> 00:33:05,168
code<font color="#E5E5E5"> because I don't care about anyone</font>

829
00:33:02,360 --> 00:33:07,969
<font color="#E5E5E5">except if the</font><font color="#CCCCCC"> single user is running it</font>

830
00:33:05,169 --> 00:33:11,600
another one is with all<font color="#CCCCCC"> of that said</font>

831
00:33:07,970 --> 00:33:14,570
only<font color="#E5E5E5"> also run this malware or my code</font>

832
00:33:11,600 --> 00:33:16,100
originally if I'm on a system or<font color="#E5E5E5"> this</font>

833
00:33:14,570 --> 00:33:19,149
specific<font color="#CCCCCC"> system</font><font color="#E5E5E5"> that I'm running target</font>

834
00:33:16,100 --> 00:33:22,789
<font color="#E5E5E5">so if I if all of these basically chains</font>

835
00:33:19,149 --> 00:33:25,330
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> hit if one misses then completely</font>

836
00:33:22,789 --> 00:33:28,519
<font color="#E5E5E5">just ignore running my original code</font>

837
00:33:25,330 --> 00:33:32,269
become a calculator do something fairly

838
00:33:28,519 --> 00:33:34,429
<font color="#E5E5E5">benign and try to just sit there</font><font color="#CCCCCC"> and and</font>

839
00:33:32,269 --> 00:33:36,320
have the<font color="#E5E5E5"> program die and so that's</font>

840
00:33:34,429 --> 00:33:37,879
basically<font color="#CCCCCC"> what</font><font color="#E5E5E5"> we would do is so we</font>

841
00:33:36,320 --> 00:33:39,860
start to<font color="#E5E5E5"> build out when we start writing</font>

842
00:33:37,879 --> 00:33:43,719
<font color="#E5E5E5">malware for our assessments and try to</font>

843
00:33:39,860 --> 00:33:46,519
move laterally<font color="#CCCCCC"> is we can do this from a</font>

844
00:33:43,720 --> 00:33:48,919
<font color="#CCCCCC">Red Team</font><font color="#E5E5E5"> perspective or</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> a our</font>

845
00:33:46,519 --> 00:33:51,409
clients also<font color="#E5E5E5"> really have seemed to like</font>

846
00:33:48,919 --> 00:33:53,450
<font color="#E5E5E5">this as well because one issue for just</font>

847
00:33:51,409 --> 00:33:57,529
writing generalized malware that's<font color="#E5E5E5"> not</font>

848
00:33:53,450 --> 00:34:00,139
doing specific targeting<font color="#E5E5E5"> if we hit</font><font color="#CCCCCC"> a</font>

849
00:33:57,529 --> 00:34:02,029
user at their home system<font color="#E5E5E5"> or if their</font>

850
00:34:00,139 --> 00:34:05,149
opening email anywhere<font color="#CCCCCC"> basically outside</font>

851
00:34:02,029 --> 00:34:07,340
<font color="#E5E5E5">of the domain if it's non targeted then</font>

852
00:34:05,149 --> 00:34:10,000
it likely is very possible that it could

853
00:34:07,340 --> 00:34:11,889
<font color="#E5E5E5">run obviously we</font>

854
00:34:10,000 --> 00:34:13,810
don't have the<font color="#CCCCCC"> ability to just hack</font>

855
00:34:11,889 --> 00:34:16,089
everything<font color="#E5E5E5"> in hack anyone that we want</font>

856
00:34:13,810 --> 00:34:18,609
to<font color="#E5E5E5"> so we have started</font><font color="#CCCCCC"> to start building</font>

857
00:34:16,089 --> 00:34:20,980
in these constraints limiting again like

858
00:34:18,609 --> 00:34:22,359
checking<font color="#E5E5E5"> a</font><font color="#CCCCCC"> very validate that</font><font color="#E5E5E5"> the</font>

859
00:34:20,980 --> 00:34:24,159
workstation that<font color="#E5E5E5"> our code is running on</font>

860
00:34:22,359 --> 00:34:27,489
is joined to a domain and it's running

861
00:34:24,159 --> 00:34:29,050
<font color="#E5E5E5">under this user account and our</font><font color="#CCCCCC"> clients</font>

862
00:34:27,489 --> 00:34:30,819
have actually started to<font color="#E5E5E5"> see this and</font>

863
00:34:29,050 --> 00:34:32,950
<font color="#E5E5E5">I've actually preferred and started</font>

864
00:34:30,819 --> 00:34:34,270
<font color="#CCCCCC">asking for that as we present</font><font color="#E5E5E5"> it as an</font>

865
00:34:32,949 --> 00:34:36,759
option<font color="#CCCCCC"> it takes a little bit more time</font>

866
00:34:34,270 --> 00:34:37,719
<font color="#CCCCCC">obviously but it generally</font><font color="#E5E5E5"> works out and</font>

867
00:34:36,760 --> 00:34:40,960
the better<font color="#E5E5E5"> for everyone</font>

868
00:34:37,719 --> 00:34:43,928
anyways<font color="#E5E5E5"> so one thing is</font><font color="#CCCCCC"> that this also</font>

869
00:34:40,960 --> 00:34:46,659
provided a good opportunity to<font color="#CCCCCC"> I work on</font>

870
00:34:43,929 --> 00:34:49,780
a tool veil and doing something<font color="#CCCCCC"> like</font>

871
00:34:46,659 --> 00:34:51,909
this is a pretty cool thing<font color="#CCCCCC"> where I</font>

872
00:34:49,780 --> 00:34:54,280
would<font color="#CCCCCC"> wanted to add</font><font color="#E5E5E5"> this ability</font><font color="#CCCCCC"> into</font>

873
00:34:51,909 --> 00:34:56,470
veil but<font color="#E5E5E5"> we can start adding basic</font>

874
00:34:54,280 --> 00:34:58,510
checks for payloads<font color="#E5E5E5"> and so we spend the</font>

875
00:34:56,469 --> 00:35:00,040
<font color="#CCCCCC">time writing this</font><font color="#E5E5E5"> and actually</font><font color="#CCCCCC"> I have a</font>

876
00:34:58,510 --> 00:35:02,380
pull request<font color="#CCCCCC"> right here</font><font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to</font>

877
00:35:00,040 --> 00:35:05,470
<font color="#E5E5E5">merge this in and so what this will do</font>

878
00:35:02,380 --> 00:35:08,260
is this<font color="#CCCCCC"> will merge a ton of</font><font color="#E5E5E5"> different</font>

879
00:35:05,470 --> 00:35:10,810
checks<font color="#E5E5E5"> from that we have from check</font>

880
00:35:08,260 --> 00:35:12,220
police<font color="#E5E5E5"> into veil and so this is a</font><font color="#CCCCCC"> neat</font>

881
00:35:10,810 --> 00:35:13,810
immediately now available in<font color="#E5E5E5"> case you</font>

882
00:35:12,220 --> 00:35:16,509
guys are using veil just start

883
00:35:13,810 --> 00:35:20,549
customizing your pay list so we'll<font color="#E5E5E5"> do a</font>

884
00:35:16,510 --> 00:35:20,550
quick demo of<font color="#E5E5E5"> what</font><font color="#CCCCCC"> that looks like now</font>

885
00:35:24,270 --> 00:35:27,630
do<font color="#E5E5E5"> a pull</font>

886
00:35:28,490 --> 00:35:32,058
see when I have<font color="#CCCCCC"> internet</font>

887
00:35:35,740 --> 00:35:50,379
there we go<font color="#E5E5E5"> all right</font><font color="#CCCCCC"> oh that didn't</font>

888
00:35:44,150 --> 00:35:50,380
just work<font color="#E5E5E5"> right there I'm sorry one sec</font>

889
00:35:50,980 --> 00:35:58,150
we're all familiar with the demo<font color="#E5E5E5"> gods</font>

890
00:35:53,089 --> 00:35:58,150
here guy<font color="#CCCCCC"> wants</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> little Mike just work</font>

891
00:35:59,920 --> 00:36:09,519
that's why that one's<font color="#E5E5E5"> not liking</font><font color="#CCCCCC"> all</font>

892
00:36:08,660 --> 00:36:12,710
<font color="#CCCCCC">right</font>

893
00:36:09,519 --> 00:36:14,660
so<font color="#CCCCCC"> lewd</font><font color="#E5E5E5"> veil let's say we want to use</font>

894
00:36:12,710 --> 00:36:17,420
<font color="#CCCCCC">just a Python</font><font color="#E5E5E5"> payload so we'll do this</font>

895
00:36:14,660 --> 00:36:19,098
flat one<font color="#CCCCCC"> what that mean what flat means</font>

896
00:36:17,420 --> 00:36:21,259
by the way<font color="#E5E5E5"> is that there's no occupation</font>

897
00:36:19,099 --> 00:36:23,329
<font color="#CCCCCC">no encryption or anything</font>

898
00:36:21,259 --> 00:36:24,380
I had it part of<font color="#E5E5E5"> it</font><font color="#CCCCCC"> obviously you can</font>

899
00:36:23,329 --> 00:36:26,210
<font color="#CCCCCC">see</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> do there's other payloads that</font>

900
00:36:24,380 --> 00:36:27,890
are<font color="#E5E5E5"> encrypted</font><font color="#CCCCCC"> the reason why flat</font>

901
00:36:26,210 --> 00:36:29,720
payloads are released in<font color="#E5E5E5"> the first place</font>

902
00:36:27,890 --> 00:36:31,549
is in case anyone wants<font color="#CCCCCC"> to figure</font><font color="#E5E5E5"> out</font>

903
00:36:29,720 --> 00:36:34,609
how to write malware in whatever

904
00:36:31,549 --> 00:36:36,410
language<font color="#CCCCCC"> that you select</font><font color="#E5E5E5"> it's a it's a</font>

905
00:36:34,609 --> 00:36:38,930
baseline so you can look<font color="#E5E5E5"> at this see</font>

906
00:36:36,410 --> 00:36:41,149
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> I understand how</font><font color="#E5E5E5"> shellcode is</font>

907
00:36:38,930 --> 00:36:42,680
<font color="#E5E5E5">injecting or how I'm able to do these</font>

908
00:36:41,150 --> 00:36:44,839
<font color="#CCCCCC">some malicious actions and provides the</font>

909
00:36:42,680 --> 00:36:46,788
ability<font color="#CCCCCC"> for anyone</font><font color="#E5E5E5"> else to kind of take</font>

910
00:36:44,839 --> 00:36:48,650
that<font color="#E5E5E5"> and customize it</font><font color="#CCCCCC"> and run with it to</font>

911
00:36:46,789 --> 00:36:50,779
work<font color="#E5E5E5"> for their environment</font><font color="#CCCCCC"> so lets going</font>

912
00:36:48,650 --> 00:36:52,640
<font color="#CCCCCC">to</font><font color="#E5E5E5"> use that so now we have these</font>

913
00:36:50,779 --> 00:36:55,279
<font color="#E5E5E5">different checks that</font><font color="#CCCCCC"> are available</font><font color="#E5E5E5"> so</font>

914
00:36:52,640 --> 00:36:58,640
we talked<font color="#E5E5E5"> about i like the user prompt</font>

915
00:36:55,279 --> 00:37:00,500
so set user prompt will say true because

916
00:36:58,640 --> 00:37:05,269
we want<font color="#E5E5E5"> to check</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> that and let's do</font>

917
00:37:00,500 --> 00:37:09,829
UTC times they'll set UTC check true<font color="#E5E5E5"> so</font>

918
00:37:05,269 --> 00:37:11,209
what this<font color="#E5E5E5"> should do now is yeah so we</font>

919
00:37:09,829 --> 00:37:13,099
have it set<font color="#CCCCCC"> it true it should prompt</font><font color="#E5E5E5"> the</font>

920
00:37:11,210 --> 00:37:14,690
user once we generate<font color="#CCCCCC"> this payload</font><font color="#E5E5E5"> once</font>

921
00:37:13,099 --> 00:37:17,089
it runs and<font color="#CCCCCC"> it should also check the</font>

922
00:37:14,690 --> 00:37:19,069
system<font color="#E5E5E5"> in this case what it's doing is</font>

923
00:37:17,089 --> 00:37:21,670
validating that<font color="#E5E5E5"> it's not the system is</font>

924
00:37:19,069 --> 00:37:25,058
<font color="#E5E5E5">running on it's not in the UTC time zone</font>

925
00:37:21,670 --> 00:37:28,599
so we can<font color="#E5E5E5"> generate</font><font color="#CCCCCC"> oh let's generate</font>

926
00:37:25,059 --> 00:37:28,599
<font color="#E5E5E5">shell code real quick</font>

927
00:37:32,030 --> 00:37:44,810
<font color="#E5E5E5">I will do</font><font color="#CCCCCC"> UTC</font><font color="#E5E5E5"> prompt mean now I'll do a</font>

928
00:37:43,370 --> 00:37:46,400
quick<font color="#E5E5E5"> check the look at the source</font><font color="#CCCCCC"> code</font>

929
00:37:44,810 --> 00:37:51,190
so<font color="#CCCCCC"> if we can see</font><font color="#E5E5E5"> that it's</font><font color="#CCCCCC"> actually in</font>

930
00:37:46,400 --> 00:37:51,190
<font color="#E5E5E5">here all right</font>

931
00:37:57,150 --> 00:38:01,249
and if we look at the code

932
00:38:11,180 --> 00:38:16,730
so now what's happening<font color="#E5E5E5"> in this case</font>

933
00:38:12,980 --> 00:38:20,150
we're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be setting a title of</font>

934
00:38:16,730 --> 00:38:21,710
system error<font color="#E5E5E5"> and</font><font color="#CCCCCC"> this value this</font><font color="#E5E5E5"> is just</font>

935
00:38:20,150 --> 00:38:24,140
the basic dialog box it's going<font color="#CCCCCC"> to pop</font>

936
00:38:21,710 --> 00:38:26,000
up<font color="#CCCCCC"> we're</font><font color="#E5E5E5"> calling message box W now and</font>

937
00:38:24,140 --> 00:38:27,080
then we're also<font color="#E5E5E5"> performing a check right</font>

938
00:38:26,000 --> 00:38:29,030
<font color="#CCCCCC">here where we're trying to pull the</font>

939
00:38:27,080 --> 00:38:31,400
current time zone from<font color="#CCCCCC"> the system</font><font color="#E5E5E5"> and</font>

940
00:38:29,030 --> 00:38:33,530
<font color="#E5E5E5">trying to validate</font><font color="#CCCCCC"> is this actually</font><font color="#E5E5E5"> it's</font>

941
00:38:31,400 --> 00:38:35,900
<font color="#CCCCCC">just not part of coordinated</font><font color="#E5E5E5"> Universal</font>

942
00:38:33,530 --> 00:38:37,900
<font color="#CCCCCC">time</font><font color="#E5E5E5"> and as long as it's not then</font>

943
00:38:35,900 --> 00:38:40,430
basically run our malware underneath it

944
00:38:37,900 --> 00:38:48,440
so just<font color="#E5E5E5"> make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> you have a handler</font>

945
00:38:40,430 --> 00:38:49,730
<font color="#E5E5E5">going so here now we're running it okay</font>

946
00:38:48,440 --> 00:38:52,100
so we ran into encountered an error

947
00:38:49,730 --> 00:38:53,600
<font color="#E5E5E5">please click OK</font><font color="#CCCCCC"> click OK</font><font color="#E5E5E5"> and obviously</font>

948
00:38:52,100 --> 00:38:54,980
<font color="#E5E5E5">this is the only time we're</font><font color="#CCCCCC"> gonna be</font>

949
00:38:53,600 --> 00:38:56,810
using<font color="#CCCCCC"> something like this is if we</font><font color="#E5E5E5"> want</font>

950
00:38:54,980 --> 00:38:58,910
<font color="#E5E5E5">to actually validate someone is at the</font>

951
00:38:56,810 --> 00:39:01,310
system before it code runs so we just

952
00:38:58,910 --> 00:39:03,259
<font color="#E5E5E5">click OK doing a check and right now</font>

953
00:39:01,310 --> 00:39:05,930
this<font color="#E5E5E5"> is going up which is basically</font>

954
00:39:03,260 --> 00:39:07,910
indicative of the meterpreter<font color="#CCCCCC"> dll being</font>

955
00:39:05,930 --> 00:39:11,569
<font color="#CCCCCC">loaded</font><font color="#E5E5E5"> and right here we have</font><font color="#CCCCCC"> recession</font>

956
00:39:07,910 --> 00:39:13,250
<font color="#CCCCCC">so it's basics like this or you can</font>

957
00:39:11,570 --> 00:39:15,320
start so in this case<font color="#CCCCCC"> obviously we only</font>

958
00:39:13,250 --> 00:39:17,750
have two checks enabled if I were to go

959
00:39:15,320 --> 00:39:18,950
through<font color="#CCCCCC"> and enable</font><font color="#E5E5E5"> ten of them or five</font>

960
00:39:17,750 --> 00:39:20,960
of them<font color="#CCCCCC"> that</font><font color="#E5E5E5"> are there</font><font color="#CCCCCC"> for that</font><font color="#E5E5E5"> Python</font>

961
00:39:18,950 --> 00:39:23,960
payload<font color="#E5E5E5"> it would perform</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> of those</font>

962
00:39:20,960 --> 00:39:25,610
checks<font color="#E5E5E5"> and if one</font><font color="#CCCCCC"> misses our code won't</font>

963
00:39:23,960 --> 00:39:27,620
run<font color="#E5E5E5"> and that's kind of the way that</font>

964
00:39:25,610 --> 00:39:29,330
we've preferred to start writing<font color="#CCCCCC"> our</font>

965
00:39:27,620 --> 00:39:31,779
payloads and that's how we wanted<font color="#E5E5E5"> to</font>

966
00:39:29,330 --> 00:39:31,779
build<font color="#E5E5E5"> this in</font>

967
00:39:41,640 --> 00:39:48,940
<font color="#E5E5E5">all right we'll just</font><font color="#CCCCCC"> go</font><font color="#E5E5E5"> I think at that</font>

968
00:39:45,940 --> 00:39:51,450
<font color="#CCCCCC">point that's actually it anyway</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> the</font>

969
00:39:48,940 --> 00:39:53,769
repo is available it's under Brandon's

970
00:39:51,450 --> 00:39:55,598
github<font color="#E5E5E5"> page</font><font color="#CCCCCC"> it's on</font><font color="#E5E5E5"> your check please</font>

971
00:39:53,769 --> 00:39:56,890
again we have all<font color="#E5E5E5"> these different</font><font color="#CCCCCC"> pieces</font>

972
00:39:55,599 --> 00:39:59,470
of<font color="#E5E5E5"> code that are out</font><font color="#CCCCCC"> there it's just</font>

973
00:39:56,890 --> 00:40:00,730
<font color="#E5E5E5">quick one offs where we wanted to make</font>

974
00:39:59,470 --> 00:40:04,359
<font color="#E5E5E5">it available so if you want to add a</font>

975
00:40:00,730 --> 00:40:06,849
single<font color="#E5E5E5"> quick check it's easy to do you</font>

976
00:40:04,359 --> 00:40:08,980
can<font color="#CCCCCC"> also just</font><font color="#E5E5E5"> chain one of them right</font>

977
00:40:06,849 --> 00:40:10,930
<font color="#E5E5E5">after another</font><font color="#CCCCCC"> add as</font><font color="#E5E5E5"> many different</font>

978
00:40:08,980 --> 00:40:12,880
checks in there as<font color="#E5E5E5"> possible to</font><font color="#CCCCCC"> customize</font>

979
00:40:10,930 --> 00:40:15,029
your payload for your environment<font color="#CCCCCC"> and</font>

980
00:40:12,880 --> 00:40:16,720
just basically<font color="#CCCCCC"> again copy</font><font color="#E5E5E5"> and paste code</font>

981
00:40:15,029 --> 00:40:18,279
<font color="#E5E5E5">and that's about if there's any</font>

982
00:40:16,720 --> 00:40:20,879
questions<font color="#E5E5E5"> we'll take them otherwise</font>

983
00:40:18,279 --> 00:40:20,880
<font color="#CCCCCC">Thanks</font>

984
00:40:21,310 --> 00:40:28,420
[Applause]

