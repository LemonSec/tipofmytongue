1
00:00:00,030 --> 00:00:06,210
hey everybody welcome<font color="#E5E5E5"> to the ground</font>

2
00:00:02,760 --> 00:00:08,700
truth track besides Las Vegas<font color="#E5E5E5"> please</font>

3
00:00:06,210 --> 00:00:10,800
remember to<font color="#E5E5E5"> visit our sponsors out in</font>

4
00:00:08,700 --> 00:00:12,420
the chill-out<font color="#E5E5E5"> area</font><font color="#CCCCCC"> because they're</font>

5
00:00:10,800 --> 00:00:17,550
awesome<font color="#CCCCCC"> and this couldn't happen without</font>

6
00:00:12,420 --> 00:00:19,800
them<font color="#CCCCCC"> without further ado this is</font><font color="#E5E5E5"> Hiram</font>

7
00:00:17,550 --> 00:00:23,400
<font color="#E5E5E5">Anderson</font><font color="#CCCCCC"> he's a principal data scientist</font>

8
00:00:19,800 --> 00:00:25,019
at endgame<font color="#E5E5E5"> and at the alternate title</font><font color="#CCCCCC"> of</font>

9
00:00:23,400 --> 00:00:27,778
his talk<font color="#E5E5E5"> which she told</font><font color="#CCCCCC"> me should have</font>

10
00:00:25,019 --> 00:00:31,729
<font color="#E5E5E5">been the real title</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> deep learning red</font>

11
00:00:27,779 --> 00:00:31,730
teaming<font color="#E5E5E5"> thanks give it up</font>

12
00:00:34,700 --> 00:00:40,320
<font color="#CCCCCC">Thanks am grateful for take in if you</font>

13
00:00:38,219 --> 00:00:43,530
caught the previous talk in this session

14
00:00:40,320 --> 00:00:45,510
was<font color="#E5E5E5"> really good and with apologies akin</font>

15
00:00:43,530 --> 00:00:47,430
<font color="#E5E5E5">my name is Hiram and I am a data</font>

16
00:00:45,510 --> 00:00:49,710
scientist so that's a confession<font color="#E5E5E5"> and I</font>

17
00:00:47,430 --> 00:00:51,210
do like<font color="#CCCCCC"> Tomatoes I guess so</font><font color="#E5E5E5"> the purpose</font>

18
00:00:49,710 --> 00:00:53,640
of my talk today<font color="#CCCCCC"> is</font><font color="#E5E5E5"> is really threefold</font>

19
00:00:51,210 --> 00:00:55,770
<font color="#CCCCCC">and I hope</font><font color="#E5E5E5"> that you'll find at</font><font color="#CCCCCC"> least</font><font color="#E5E5E5"> one</font>

20
00:00:53,640 --> 00:00:57,500
of them interesting number one is that

21
00:00:55,770 --> 00:01:00,390
I'm<font color="#CCCCCC"> gonna spend</font><font color="#E5E5E5"> a little bit of time</font>

22
00:00:57,500 --> 00:01:03,300
<font color="#CCCCCC">simplifying and demystifying hopefully</font>

23
00:01:00,390 --> 00:01:05,460
what is deep learning which<font color="#CCCCCC"> is being</font>

24
00:01:03,300 --> 00:01:08,369
<font color="#E5E5E5">touted failure not as one of the key</font>

25
00:01:05,459 --> 00:01:10,408
enablers for<font color="#CCCCCC"> you know signature</font><font color="#E5E5E5"> Mountain</font>

26
00:01:08,369 --> 00:01:12,750
malware malware detection and<font color="#E5E5E5"> other</font>

27
00:01:10,409 --> 00:01:13,590
threat detection technologies so we're

28
00:01:12,750 --> 00:01:15,450
gonna bring it<font color="#CCCCCC"> down a</font><font color="#E5E5E5"> little bit</font>

29
00:01:13,590 --> 00:01:18,240
simplify that<font color="#E5E5E5"> that's objective number</font>

30
00:01:15,450 --> 00:01:20,340
one objective<font color="#CCCCCC"> number two is that I want</font>

31
00:01:18,240 --> 00:01:22,259
<font color="#E5E5E5">to show that like all defensive</font>

32
00:01:20,340 --> 00:01:24,439
technologies<font color="#E5E5E5"> machine learning and deep</font>

33
00:01:22,259 --> 00:01:27,060
learning<font color="#E5E5E5"> have vulnerabilities</font><font color="#CCCCCC"> and</font>

34
00:01:24,439 --> 00:01:29,548
actually what makes deep<font color="#CCCCCC"> learning so</font>

35
00:01:27,060 --> 00:01:32,009
great<font color="#E5E5E5"> for</font><font color="#CCCCCC"> a data science</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> trained</font>

36
00:01:29,549 --> 00:01:34,799
with also makes it<font color="#E5E5E5"> really convenient to</font>

37
00:01:32,009 --> 00:01:36,240
exploit and so we're<font color="#E5E5E5"> gonna exploit a bit</font>

38
00:01:34,799 --> 00:01:39,960
of our<font color="#E5E5E5"> own deep learning models today</font>

39
00:01:36,240 --> 00:01:43,020
<font color="#E5E5E5">and the third thing the third</font><font color="#CCCCCC"> takeaway</font>

40
00:01:39,960 --> 00:01:44,789
<font color="#CCCCCC">from</font><font color="#E5E5E5"> this talk is that what we're</font>

41
00:01:43,020 --> 00:01:46,979
actually gonna do is build<font color="#E5E5E5"> two deep</font>

42
00:01:44,790 --> 00:01:48,689
learning<font color="#E5E5E5"> models one of</font><font color="#CCCCCC"> which will will</font>

43
00:01:46,979 --> 00:01:50,310
exploit one will take the place of a

44
00:01:48,689 --> 00:01:52,020
blue team one of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> red team and</font>

45
00:01:50,310 --> 00:01:54,119
they'll play<font color="#E5E5E5"> an adverse shell game</font>

46
00:01:52,020 --> 00:01:55,740
against<font color="#E5E5E5"> each other and</font><font color="#CCCCCC"> we'll use this</font><font color="#E5E5E5"> to</font>

47
00:01:54,119 --> 00:01:56,880
be<font color="#E5E5E5"> able to patch some</font><font color="#CCCCCC"> of the</font>

48
00:01:55,740 --> 00:01:59,100
<font color="#CCCCCC">vulnerabilities in our</font><font color="#E5E5E5"> deep learning</font>

49
00:01:56,880 --> 00:02:00,750
<font color="#E5E5E5">model so I've just given you my talk if</font>

50
00:01:59,100 --> 00:02:03,298
you<font color="#E5E5E5"> want to leave you could do that now</font>

51
00:02:00,750 --> 00:02:05,939
but<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> want details</font><font color="#E5E5E5"> stick around for</font>

52
00:02:03,299 --> 00:02:07,590
the<font color="#E5E5E5"> remaining parts of this talk</font><font color="#CCCCCC"> so</font>

53
00:02:05,939 --> 00:02:09,538
Andrea<font color="#E5E5E5"> if she raised her hand made me</font>

54
00:02:07,590 --> 00:02:11,700
put this slide<font color="#E5E5E5"> and I mean I've spent 30</font>

55
00:02:09,538 --> 00:02:12,569
seconds<font color="#E5E5E5"> on my name's</font><font color="#CCCCCC"> Hiram</font><font color="#E5E5E5"> I'm a data</font>

56
00:02:11,700 --> 00:02:15,000
scientist and

57
00:02:12,569 --> 00:02:18,230
I've spent<font color="#E5E5E5"> some time in the</font><font color="#CCCCCC"> National</font>

58
00:02:15,000 --> 00:02:22,109
<font color="#E5E5E5">Labs and at other</font><font color="#CCCCCC"> infoset companies</font><font color="#E5E5E5"> and</font>

59
00:02:18,230 --> 00:02:23,040
I have research interests<font color="#CCCCCC"> and you can</font>

60
00:02:22,109 --> 00:02:26,239
follow<font color="#E5E5E5"> me on Twitter</font>

61
00:02:23,040 --> 00:02:30,239
<font color="#E5E5E5">okay so let me motivate this talk today</font>

62
00:02:26,239 --> 00:02:32,849
<font color="#CCCCCC">by a not a</font><font color="#E5E5E5"> machine</font><font color="#CCCCCC"> learning thing we're</font>

63
00:02:30,239 --> 00:02:34,980
<font color="#E5E5E5">really going to release a product</font><font color="#CCCCCC"> and we</font>

64
00:02:32,849 --> 00:02:36,439
<font color="#CCCCCC">want</font><font color="#E5E5E5"> to make darn sure that when we</font>

65
00:02:34,980 --> 00:02:39,659
release this product to our customers

66
00:02:36,439 --> 00:02:41,939
<font color="#CCCCCC">that it doesn't fall over</font><font color="#E5E5E5"> so we have one</font>

67
00:02:39,659 --> 00:02:45,269
<font color="#E5E5E5">of our our spooky internal</font><font color="#CCCCCC"> Red Team</font><font color="#E5E5E5"> guys</font>

68
00:02:41,939 --> 00:02:47,909
<font color="#E5E5E5">start throwing in this case domains at</font>

69
00:02:45,269 --> 00:02:50,400
<font color="#CCCCCC">it make sure that Indian</font><font color="#E5E5E5"> got calm passes</font>

70
00:02:47,909 --> 00:02:53,909
through<font color="#E5E5E5"> our</font><font color="#CCCCCC"> products successfully but</font>

71
00:02:50,400 --> 00:02:57,030
that a<font color="#E5E5E5"> malicious</font><font color="#CCCCCC"> website</font><font color="#E5E5E5"> you know some</font>

72
00:02:53,909 --> 00:03:01,138
some phishing website<font color="#E5E5E5"> in game - 2016 is</font>

73
00:02:57,030 --> 00:03:03,269
<font color="#E5E5E5">properly detected as bad and then my</font>

74
00:03:01,139 --> 00:03:07,489
goodness<font color="#E5E5E5"> he does find one that should be</font>

75
00:03:03,269 --> 00:03:09,599
bad in<font color="#CCCCCC"> em to gain calm but our product</font>

76
00:03:07,489 --> 00:03:11,849
product says<font color="#E5E5E5"> that</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> event is good and</font>

77
00:03:09,599 --> 00:03:14,668
he finds a problem<font color="#CCCCCC"> so of course he then</font>

78
00:03:11,849 --> 00:03:16,679
<font color="#E5E5E5">takes this feedback to the</font><font color="#CCCCCC"> products team</font>

79
00:03:14,669 --> 00:03:18,329
<font color="#E5E5E5">and they patched that hole so that</font>

80
00:03:16,680 --> 00:03:21,060
<font color="#CCCCCC">hopefully the product that</font><font color="#E5E5E5"> he releases</font>

81
00:03:18,329 --> 00:03:23,340
doesn't have that that vulnerability<font color="#CCCCCC"> now</font>

82
00:03:21,060 --> 00:03:25,409
this is no<font color="#E5E5E5"> different</font><font color="#CCCCCC"> than</font><font color="#E5E5E5"> what we do</font><font color="#CCCCCC"> and</font>

83
00:03:23,340 --> 00:03:26,849
if you cut<font color="#E5E5E5"> kids taught previously what</font>

84
00:03:25,409 --> 00:03:28,470
<font color="#E5E5E5">we do when we releasing machine learning</font>

85
00:03:26,849 --> 00:03:30,448
model<font color="#E5E5E5"> there's a there's a similar</font>

86
00:03:28,470 --> 00:03:33,000
process<font color="#E5E5E5"> of validation where a human is</font>

87
00:03:30,449 --> 00:03:36,389
in<font color="#CCCCCC"> the loop and is trying</font><font color="#E5E5E5"> to make our</font>

88
00:03:33,000 --> 00:03:38,310
model fall over so replace product with

89
00:03:36,389 --> 00:03:41,340
<font color="#CCCCCC">machine learning</font><font color="#E5E5E5"> model the process is</font>

90
00:03:38,310 --> 00:03:43,829
almost identical<font color="#CCCCCC"> this process will never</font>

91
00:03:41,340 --> 00:03:46,019
go away<font color="#E5E5E5"> we'll always need our super</font>

92
00:03:43,829 --> 00:03:48,750
smart<font color="#E5E5E5"> security guide to poke holes to</font>

93
00:03:46,019 --> 00:03:51,150
find holes and to patch vulnerabilities

94
00:03:48,750 --> 00:03:53,849
in our machine<font color="#CCCCCC"> learning models</font><font color="#E5E5E5"> but part</font>

95
00:03:51,150 --> 00:03:58,919
<font color="#E5E5E5">of the thesis</font><font color="#CCCCCC"> today is that we can</font>

96
00:03:53,849 --> 00:04:01,649
enable<font color="#E5E5E5"> and scale by giving that human</font>

97
00:03:58,919 --> 00:04:04,769
<font color="#CCCCCC">also the extra power of an additional</font>

98
00:04:01,650 --> 00:04:06,659
<font color="#E5E5E5">Red Team model and the Red Team model is</font>

99
00:04:04,769 --> 00:04:08,909
going<font color="#CCCCCC"> to be specifically designed</font>

100
00:04:06,659 --> 00:04:11,759
designed<font color="#E5E5E5"> to poke holes in our blue team</font>

101
00:04:08,909 --> 00:04:13,739
<font color="#CCCCCC">model and</font><font color="#E5E5E5"> by poking holes and</font>

102
00:04:11,759 --> 00:04:16,469
discovering<font color="#E5E5E5"> those we can go ahead</font><font color="#CCCCCC"> and</font>

103
00:04:13,739 --> 00:04:18,449
<font color="#E5E5E5">turn around</font><font color="#CCCCCC"> patch</font><font color="#E5E5E5"> those holes and feel</font>

104
00:04:16,470 --> 00:04:21,049
safer about<font color="#E5E5E5"> releasing our machine</font>

105
00:04:18,449 --> 00:04:23,419
learning<font color="#E5E5E5"> product to</font><font color="#CCCCCC"> our customers</font>

106
00:04:21,048 --> 00:04:25,250
so that's the 40,000<font color="#E5E5E5"> foot overview and</font>

107
00:04:23,419 --> 00:04:27,919
here here's<font color="#E5E5E5"> the</font><font color="#CCCCCC"> outline spend just a few</font>

108
00:04:25,250 --> 00:04:29,569
<font color="#E5E5E5">minutes</font><font color="#CCCCCC"> on introducing</font><font color="#E5E5E5"> some of the</font>

109
00:04:27,919 --> 00:04:31,609
concepts<font color="#E5E5E5"> behind deep learning</font>

110
00:04:29,569 --> 00:04:34,460
hopefully simplify it a little<font color="#E5E5E5"> bit and</font>

111
00:04:31,610 --> 00:04:40,069
demystify<font color="#CCCCCC"> what can</font><font color="#E5E5E5"> sometimes seem like</font>

112
00:04:34,460 --> 00:04:42,318
<font color="#CCCCCC">hocus pocus I'll</font><font color="#E5E5E5"> I'll then sort of jump</font>

113
00:04:40,069 --> 00:04:44,030
<font color="#E5E5E5">into the meat</font><font color="#CCCCCC"> of the talk</font><font color="#E5E5E5"> today about</font>

114
00:04:42,319 --> 00:04:47,330
how<font color="#CCCCCC"> to assemble</font><font color="#E5E5E5"> these deep learning</font>

115
00:04:44,030 --> 00:04:49,849
components to form this adversarial game

116
00:04:47,330 --> 00:04:51,919
that<font color="#E5E5E5"> we're two models play against each</font>

117
00:04:49,849 --> 00:04:53,060
<font color="#E5E5E5">other</font><font color="#CCCCCC"> and then the the sort of the</font>

118
00:04:51,919 --> 00:04:56,630
application<font color="#E5E5E5"> today we're going to be</font>

119
00:04:53,060 --> 00:04:58,970
talking<font color="#E5E5E5"> about is detecting dynamically</font>

120
00:04:56,630 --> 00:05:00,919
generated domain names<font color="#E5E5E5"> that malware</font>

121
00:04:58,970 --> 00:05:04,310
sometimes use just to establish<font color="#CCCCCC"> see two</font>

122
00:05:00,919 --> 00:05:06,830
channels call home<font color="#E5E5E5"> so without further</font>

123
00:05:04,310 --> 00:05:08,960
<font color="#CCCCCC">ado to talk</font><font color="#E5E5E5"> about deep learning I'm</font>

124
00:05:06,830 --> 00:05:11,300
gonna take you back<font color="#CCCCCC"> to what deep</font>

125
00:05:08,960 --> 00:05:12,758
learning<font color="#E5E5E5"> people call shallow learning so</font>

126
00:05:11,300 --> 00:05:15,979
shallow learning goes like this

127
00:05:12,759 --> 00:05:18,650
first<font color="#CCCCCC"> there</font><font color="#E5E5E5"> are three general</font><font color="#CCCCCC"> steps</font>

128
00:05:15,979 --> 00:05:20,900
there's a pre-processing<font color="#E5E5E5"> step there's a</font>

129
00:05:18,650 --> 00:05:24,020
feature representation step and there's

130
00:05:20,900 --> 00:05:26,330
a<font color="#CCCCCC"> modeling step so the pre-processing</font>

131
00:05:24,020 --> 00:05:28,818
step are things like we<font color="#E5E5E5"> don't care</font><font color="#CCCCCC"> about</font>

132
00:05:26,330 --> 00:05:31,068
<font color="#E5E5E5">dub dub dub or</font><font color="#CCCCCC"> calm let's get rid of</font>

133
00:05:28,819 --> 00:05:32,810
those we're gonna prepare<font color="#CCCCCC"> our data the</font>

134
00:05:31,069 --> 00:05:35,120
feature representation step is all about

135
00:05:32,810 --> 00:05:38,300
our mission<font color="#CCCCCC"> our models are good with</font>

136
00:05:35,120 --> 00:05:41,449
<font color="#CCCCCC">numbers</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> we express</font><font color="#E5E5E5"> in this case our</font>

137
00:05:38,300 --> 00:05:42,919
<font color="#E5E5E5">domain name using numbers</font><font color="#CCCCCC"> and then our</font>

138
00:05:41,449 --> 00:05:44,990
predictive modeling step is going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font>

139
00:05:42,919 --> 00:05:47,568
how do<font color="#E5E5E5"> we use those numbers to predict</font>

140
00:05:44,990 --> 00:05:49,190
on more numbers more domain names that

141
00:05:47,569 --> 00:05:51,380
have been pre processed and represent

142
00:05:49,190 --> 00:05:52,960
integers so in shallow<font color="#E5E5E5"> learning the</font>

143
00:05:51,380 --> 00:05:55,789
process<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> bit like this let's take</font>

144
00:05:52,960 --> 00:05:58,520
<font color="#E5E5E5">endgame just the root of our</font><font color="#CCCCCC"> domain and</font>

145
00:05:55,789 --> 00:06:01,009
<font color="#CCCCCC">we'll break it down into a bag of by</font>

146
00:05:58,520 --> 00:06:04,609
grams<font color="#CCCCCC"> of every consecutive</font><font color="#E5E5E5"> pair of</font>

147
00:06:01,009 --> 00:06:07,009
characters<font color="#CCCCCC"> so Ian</font><font color="#E5E5E5"> in DD</font><font color="#CCCCCC"> GGA am eme and</font>

148
00:06:04,610 --> 00:06:09,430
then we're gonna sort<font color="#E5E5E5"> of arbitrarily at</font>

149
00:06:07,009 --> 00:06:13,279
this point and this<font color="#E5E5E5"> is kind of a point</font>

150
00:06:09,430 --> 00:06:16,520
<font color="#E5E5E5">figure</font><font color="#CCCCCC"> out a way</font><font color="#E5E5E5"> to express these these</font>

151
00:06:13,279 --> 00:06:19,099
by<font color="#E5E5E5"> grams as numbers so what we're gonna</font>

152
00:06:16,520 --> 00:06:21,889
do is<font color="#CCCCCC"> express every bigram as a vector a</font>

153
00:06:19,099 --> 00:06:25,340
stack of<font color="#E5E5E5"> zeros where one</font><font color="#CCCCCC"> bin in that</font>

154
00:06:21,889 --> 00:06:27,650
stack of numbers is is a<font color="#E5E5E5"> is a one that</font>

155
00:06:25,340 --> 00:06:29,570
one that that bin corresponds<font color="#E5E5E5"> in the</font>

156
00:06:27,650 --> 00:06:32,089
first vector<font color="#E5E5E5"> to</font><font color="#CCCCCC"> in the second two in G</font>

157
00:06:29,570 --> 00:06:33,169
and so on and then<font color="#E5E5E5"> let's you know for</font>

158
00:06:32,089 --> 00:06:34,260
the sake of being<font color="#E5E5E5"> completely arbitrary</font>

159
00:06:33,169 --> 00:06:36,180
<font color="#CCCCCC">well we'll just</font><font color="#E5E5E5"> add</font>

160
00:06:34,260 --> 00:06:39,180
all<font color="#E5E5E5"> together to get our our feature</font>

161
00:06:36,180 --> 00:06:41,820
<font color="#CCCCCC">representation the vector X which now is</font>

162
00:06:39,180 --> 00:06:43,980
a bag of<font color="#E5E5E5"> these</font><font color="#CCCCCC"> diagrams that represents</font>

163
00:06:41,820 --> 00:06:46,590
<font color="#CCCCCC">endgame</font><font color="#E5E5E5"> so there are problems with</font><font color="#CCCCCC"> this</font>

164
00:06:43,980 --> 00:06:48,060
right you could you could scramble<font color="#CCCCCC"> the</font>

165
00:06:46,590 --> 00:06:49,500
letters of<font color="#E5E5E5"> in game a bit and get a</font>

166
00:06:48,060 --> 00:06:51,870
vectors either very close to or

167
00:06:49,500 --> 00:06:56,430
identical<font color="#E5E5E5"> to this but this this is one</font>

168
00:06:51,870 --> 00:06:59,310
way to express<font color="#CCCCCC"> endgame as a as a bag of</font>

169
00:06:56,430 --> 00:07:02,910
numbers<font color="#E5E5E5"> that's now suitable to a model</font>

170
00:06:59,310 --> 00:07:05,580
<font color="#CCCCCC">and so the</font><font color="#E5E5E5"> the model that I'm going to</font>

171
00:07:02,910 --> 00:07:09,090
just show really briefly<font color="#CCCCCC"> today is based</font>

172
00:07:05,580 --> 00:07:11,400
a little bit on the linear model<font color="#CCCCCC"> that</font>

173
00:07:09,090 --> 00:07:12,929
<font color="#CCCCCC">Ken showed in the previous</font><font color="#E5E5E5"> talk and all</font>

174
00:07:11,400 --> 00:07:15,659
it is<font color="#E5E5E5"> is this essentially we're gonna</font>

175
00:07:12,930 --> 00:07:19,500
take this bin of vector and we're gonna

176
00:07:15,660 --> 00:07:22,440
learn<font color="#E5E5E5"> weights for every bin and do a</font>

177
00:07:19,500 --> 00:07:25,260
<font color="#CCCCCC">multiplied weight by bin bin value add</font>

178
00:07:22,440 --> 00:07:28,680
them all up<font color="#E5E5E5"> squash</font><font color="#CCCCCC"> that number between</font><font color="#E5E5E5"> 0</font>

179
00:07:25,260 --> 00:07:30,990
<font color="#CCCCCC">and</font><font color="#E5E5E5"> 1 and you now</font><font color="#CCCCCC"> have a</font><font color="#E5E5E5"> 1 means bad and</font>

180
00:07:28,680 --> 00:07:32,760
<font color="#E5E5E5">0 means good for example and this is</font>

181
00:07:30,990 --> 00:07:35,370
called logistic<font color="#E5E5E5"> regression and what I've</font>

182
00:07:32,760 --> 00:07:37,800
just<font color="#CCCCCC"> explained to you</font><font color="#E5E5E5"> is a can be a</font>

183
00:07:35,370 --> 00:07:39,690
really<font color="#E5E5E5"> time-consuming process because if</font>

184
00:07:37,800 --> 00:07:41,760
I learn a model<font color="#CCCCCC"> that</font><font color="#E5E5E5"> doesn't give me the</font>

185
00:07:39,690 --> 00:07:44,219
right<font color="#E5E5E5"> answers I'm gonna</font><font color="#CCCCCC"> probably blame</font>

186
00:07:41,760 --> 00:07:45,780
the way I represented my features or or

187
00:07:44,220 --> 00:07:47,850
I can blame the model<font color="#E5E5E5"> but there's the</font>

188
00:07:45,780 --> 00:07:50,880
kind<font color="#CCCCCC"> of two moving parts three moving</font>

189
00:07:47,850 --> 00:07:52,830
<font color="#E5E5E5">parts if I count pre-processing so this</font>

190
00:07:50,880 --> 00:07:55,590
is what we call well what deep<font color="#E5E5E5"> learning</font>

191
00:07:52,830 --> 00:07:57,690
people call shallow learning<font color="#CCCCCC"> I have done</font>

192
00:07:55,590 --> 00:08:00,960
this separate step of trying to figure

193
00:07:57,690 --> 00:08:04,230
<font color="#CCCCCC">out a way</font><font color="#E5E5E5"> a convenient way</font><font color="#CCCCCC"> to express</font>

194
00:08:00,960 --> 00:08:07,830
<font color="#E5E5E5">endgame so that my model can ingest it</font>

195
00:08:04,230 --> 00:08:10,200
and<font color="#E5E5E5"> then make predictions so deep</font>

196
00:08:07,830 --> 00:08:13,950
learning deep learning<font color="#E5E5E5"> all all it is in</font>

197
00:08:10,200 --> 00:08:16,979
a<font color="#E5E5E5"> nutshell is trying to jointly learn</font>

198
00:08:13,950 --> 00:08:19,020
both the model and the way that we

199
00:08:16,980 --> 00:08:21,840
express things<font color="#CCCCCC"> in our model the way that</font>

200
00:08:19,020 --> 00:08:24,750
we represent<font color="#E5E5E5"> them and</font><font color="#CCCCCC"> it's so called</font>

201
00:08:21,840 --> 00:08:28,020
deep because it requires not<font color="#CCCCCC"> just sort</font>

202
00:08:24,750 --> 00:08:32,010
of<font color="#E5E5E5"> this one layer of logic but another</font>

203
00:08:28,020 --> 00:08:35,880
layer to<font color="#E5E5E5"> express how we how</font><font color="#CCCCCC"> we represent</font>

204
00:08:32,010 --> 00:08:37,349
<font color="#E5E5E5">those features so deep learning in a</font>

205
00:08:35,880 --> 00:08:42,780
nutshell learning both the features and

206
00:08:37,349 --> 00:08:45,870
the model so if<font color="#CCCCCC"> you</font><font color="#E5E5E5"> if you could if you</font>

207
00:08:42,780 --> 00:08:47,510
were to spend 30 minutes<font color="#E5E5E5"> today firing up</font>

208
00:08:45,870 --> 00:08:49,310
<font color="#E5E5E5">your deep learning is found</font>

209
00:08:47,510 --> 00:08:50,900
<font color="#CCCCCC">it's becoming commoditized or suffer</font>

210
00:08:49,310 --> 00:08:53,150
<font color="#CCCCCC">packages they're excellent that can</font>

211
00:08:50,900 --> 00:08:55,870
allow you<font color="#E5E5E5"> to assemble</font><font color="#CCCCCC"> deep learning</font>

212
00:08:53,150 --> 00:08:58,550
models in relatively short<font color="#E5E5E5"> order and</font>

213
00:08:55,870 --> 00:09:02,570
<font color="#E5E5E5">just as as a you know kind of an</font>

214
00:08:58,550 --> 00:09:05,510
anecdote<font color="#CCCCCC"> with something like two hours</font>

215
00:09:02,570 --> 00:09:08,000
<font color="#E5E5E5">of coding and</font><font color="#CCCCCC"> twelve hours of training</font><font color="#E5E5E5"> a</font>

216
00:09:05,510 --> 00:09:11,450
model at<font color="#E5E5E5"> in-game we produced a HipChat</font>

217
00:09:08,000 --> 00:09:13,190
<font color="#CCCCCC">trump font that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> talk to it and it</font><font color="#E5E5E5"> it</font>

218
00:09:11,450 --> 00:09:18,170
<font color="#E5E5E5">talks back to you</font><font color="#CCCCCC"> in slightly</font><font color="#E5E5E5"> racial</font>

219
00:09:13,190 --> 00:09:21,500
overtones<font color="#E5E5E5"> so but but the</font><font color="#CCCCCC"> idea here is</font>

220
00:09:18,170 --> 00:09:23,000
that the the the<font color="#E5E5E5"> big win comes that you</font>

221
00:09:21,500 --> 00:09:24,920
spend<font color="#CCCCCC"> only a little time to</font><font color="#E5E5E5"> feel like a</font>

222
00:09:23,000 --> 00:09:28,070
<font color="#E5E5E5">model and</font><font color="#CCCCCC"> data is the key ingredient to</font>

223
00:09:24,920 --> 00:09:29,449
<font color="#E5E5E5">making this thing go and you assemble</font>

224
00:09:28,070 --> 00:09:31,730
<font color="#E5E5E5">these things kind of</font><font color="#CCCCCC"> like you</font><font color="#E5E5E5"> dissemble</font>

225
00:09:29,450 --> 00:09:33,290
Legos or you know<font color="#E5E5E5"> these would be your</font>

226
00:09:31,730 --> 00:09:35,510
resistors and capacitors and transistors

227
00:09:33,290 --> 00:09:37,130
of<font color="#CCCCCC"> a circuit board</font><font color="#E5E5E5"> once you get the</font>

228
00:09:35,510 --> 00:09:38,660
basic idea bath they work you sort<font color="#E5E5E5"> of</font>

229
00:09:37,130 --> 00:09:40,670
plug them together and you know it just

230
00:09:38,660 --> 00:09:42,260
<font color="#CCCCCC">kind of works</font><font color="#E5E5E5"> because of the hard</font><font color="#CCCCCC"> work</font>

231
00:09:40,670 --> 00:09:44,750
that's been done<font color="#CCCCCC"> by a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of these folks</font>

232
00:09:42,260 --> 00:09:46,430
<font color="#CCCCCC">and preparing</font><font color="#E5E5E5"> these you know</font>

233
00:09:44,750 --> 00:09:47,690
commoditizing deep learning packages

234
00:09:46,430 --> 00:09:50,359
that<font color="#E5E5E5"> I'll explain</font><font color="#CCCCCC"> to you in just a</font>

235
00:09:47,690 --> 00:09:51,890
moment<font color="#E5E5E5"> but the first the first layer let</font>

236
00:09:50,360 --> 00:09:54,080
me just go<font color="#CCCCCC"> through these five here</font>

237
00:09:51,890 --> 00:09:56,180
because they'll become<font color="#E5E5E5"> useful in a</font>

238
00:09:54,080 --> 00:09:57,650
moment but<font color="#E5E5E5"> the first one I already</font>

239
00:09:56,180 --> 00:10:01,479
described is called logistic<font color="#E5E5E5"> regression</font>

240
00:09:57,650 --> 00:10:03,920
<font color="#E5E5E5">I take an input</font><font color="#CCCCCC"> vector and I add add the</font>

241
00:10:01,480 --> 00:10:05,210
<font color="#E5E5E5">inputs</font><font color="#CCCCCC"> together and</font><font color="#E5E5E5"> I squash it</font><font color="#CCCCCC"> with</font>

242
00:10:03,920 --> 00:10:07,849
some squashing function and have an

243
00:10:05,210 --> 00:10:09,650
output<font color="#E5E5E5"> the next layer is called a fully</font>

244
00:10:07,850 --> 00:10:12,080
connected<font color="#E5E5E5"> layer and it's just like a</font>

245
00:10:09,650 --> 00:10:13,910
logistic regression layer but repeated

246
00:10:12,080 --> 00:10:15,260
the output is repeated three times so

247
00:10:13,910 --> 00:10:18,469
there are three<font color="#CCCCCC"> different outputs</font><font color="#E5E5E5"> and</font>

248
00:10:15,260 --> 00:10:21,560
this is useful when<font color="#CCCCCC"> you want</font><font color="#E5E5E5"> to express</font>

249
00:10:18,470 --> 00:10:24,140
this<font color="#CCCCCC"> to reexpress the input as some</font>

250
00:10:21,560 --> 00:10:26,270
intermediate representation<font color="#E5E5E5"> and the key</font>

251
00:10:24,140 --> 00:10:28,670
<font color="#CCCCCC">here is you</font><font color="#E5E5E5"> don't tell it how to</font>

252
00:10:26,270 --> 00:10:30,439
represent<font color="#E5E5E5"> the model learns how to</font>

253
00:10:28,670 --> 00:10:34,130
represent based on the task of<font color="#E5E5E5"> you're</font>

254
00:10:30,440 --> 00:10:37,010
trying<font color="#CCCCCC"> to solve okay</font><font color="#E5E5E5"> then another useful</font>

255
00:10:34,130 --> 00:10:37,910
layer that is<font color="#E5E5E5"> really popular</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you</font>

256
00:10:37,010 --> 00:10:40,160
should know<font color="#E5E5E5"> about is called</font><font color="#CCCCCC"> the</font>

257
00:10:37,910 --> 00:10:42,709
convolutional layer and it's very much

258
00:10:40,160 --> 00:10:45,260
<font color="#E5E5E5">like</font><font color="#CCCCCC"> a connected layer except where</font>

259
00:10:42,710 --> 00:10:47,330
these blue<font color="#E5E5E5"> arrows are colored they all</font>

260
00:10:45,260 --> 00:10:50,830
share the<font color="#CCCCCC"> same weights</font><font color="#E5E5E5"> so this gives</font>

261
00:10:47,330 --> 00:10:52,730
<font color="#E5E5E5">kind of two things</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> is that</font>

262
00:10:50,830 --> 00:10:55,460
convolutional layers are good at

263
00:10:52,730 --> 00:10:57,710
<font color="#CCCCCC">detecting that</font><font color="#E5E5E5"> there is something but</font>

264
00:10:55,460 --> 00:10:58,350
not where it<font color="#CCCCCC"> is there's a translational</font>

265
00:10:57,710 --> 00:11:01,020
invariant

266
00:10:58,350 --> 00:11:02,400
and second is<font color="#E5E5E5"> that because there</font><font color="#CCCCCC"> are</font>

267
00:11:01,020 --> 00:11:03,960
fewer weights involved<font color="#CCCCCC"> this becomes a</font>

268
00:11:02,400 --> 00:11:05,189
really compact model I<font color="#CCCCCC"> taught this store</font>

269
00:11:03,960 --> 00:11:08,910
as much<font color="#E5E5E5"> so that's kind of an</font>

270
00:11:05,190 --> 00:11:12,030
implementation<font color="#E5E5E5"> issue so the</font><font color="#CCCCCC"> top</font><font color="#E5E5E5"> three</font>

271
00:11:08,910 --> 00:11:13,949
<font color="#CCCCCC">layer</font><font color="#E5E5E5"> Legos are also called feed-forward</font>

272
00:11:12,030 --> 00:11:16,650
they take an<font color="#CCCCCC"> input and transform it to</font>

273
00:11:13,950 --> 00:11:18,570
<font color="#E5E5E5">an output and the the model and the</font>

274
00:11:16,650 --> 00:11:21,360
objective learn how to tune those

275
00:11:18,570 --> 00:11:22,680
weights<font color="#CCCCCC"> the weights in this case being</font>

276
00:11:21,360 --> 00:11:24,990
the edges between<font color="#E5E5E5"> the input and output</font>

277
00:11:22,680 --> 00:11:27,209
nodes<font color="#E5E5E5"> on the bottom layer I'm showing</font>

278
00:11:24,990 --> 00:11:29,160
just two<font color="#E5E5E5"> simple recurrent neural</font>

279
00:11:27,210 --> 00:11:32,010
networks<font color="#E5E5E5"> where the output is a function</font>

280
00:11:29,160 --> 00:11:34,589
<font color="#CCCCCC">of</font><font color="#E5E5E5"> both</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> input</font><font color="#CCCCCC"> and the output itself</font>

281
00:11:32,010 --> 00:11:37,050
<font color="#CCCCCC">and so this is really interesting</font>

282
00:11:34,590 --> 00:11:40,350
<font color="#E5E5E5">because if I instead of feeding one</font>

283
00:11:37,050 --> 00:11:43,829
input<font color="#CCCCCC"> vector</font><font color="#E5E5E5"> if I feed a sequence so</font>

284
00:11:40,350 --> 00:11:48,000
first I feed<font color="#CCCCCC"> it a 1 B</font><font color="#E5E5E5"> 1 C</font><font color="#CCCCCC"> 1 and then a 2</font>

285
00:11:43,830 --> 00:11:50,460
B<font color="#CCCCCC"> 2 C 2</font><font color="#E5E5E5"> and then a 3 B 3 C</font><font color="#CCCCCC"> 3 in that</font>

286
00:11:48,000 --> 00:11:53,580
<font color="#E5E5E5">sequence</font><font color="#CCCCCC"> it's going to learn in</font><font color="#E5E5E5"> these</font>

287
00:11:50,460 --> 00:11:55,470
output<font color="#CCCCCC"> States D and</font><font color="#E5E5E5"> E some kind of you</font>

288
00:11:53,580 --> 00:11:57,510
know<font color="#E5E5E5"> state some notion to capture</font>

289
00:11:55,470 --> 00:11:59,700
meaning about this sequence of things

290
00:11:57,510 --> 00:12:02,730
<font color="#E5E5E5">plugged in because there's this feedback</font>

291
00:11:59,700 --> 00:12:04,230
<font color="#E5E5E5">part of it and this thing</font><font color="#CCCCCC"> is it looks</font>

292
00:12:02,730 --> 00:12:06,420
very<font color="#CCCCCC"> complicated I'll not say much about</font>

293
00:12:04,230 --> 00:12:08,400
<font color="#E5E5E5">it</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> it turns out that</font><font color="#CCCCCC"> these simple</font>

294
00:12:06,420 --> 00:12:11,280
sort of recurrent networks are very<font color="#CCCCCC"> hard</font>

295
00:12:08,400 --> 00:12:13,439
<font color="#E5E5E5">to train and there are other mechanisms</font>

296
00:12:11,280 --> 00:12:17,069
<font color="#CCCCCC">and in fact the the deep learning folks</font>

297
00:12:13,440 --> 00:12:18,900
have have taken this<font color="#CCCCCC"> from computer so so</font>

298
00:12:17,070 --> 00:12:20,850
they have read<font color="#E5E5E5"> and write gates that</font>

299
00:12:18,900 --> 00:12:23,430
allow one<font color="#CCCCCC"> to</font><font color="#E5E5E5"> train and store</font><font color="#CCCCCC"> information</font>

300
00:12:20,850 --> 00:12:24,840
efficiently<font color="#CCCCCC"> over a sequence</font><font color="#E5E5E5"> so that's</font>

301
00:12:23,430 --> 00:12:27,359
all say these<font color="#E5E5E5"> if these are Legos</font>

302
00:12:24,840 --> 00:12:28,980
these are<font color="#E5E5E5"> Legos and once you learn what</font>

303
00:12:27,360 --> 00:12:32,790
the Legos do you can stack them<font color="#E5E5E5"> together</font>

304
00:12:28,980 --> 00:12:34,080
and and write write really small code so

305
00:12:32,790 --> 00:12:36,120
I'm<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> just give a shout out to this</font>

306
00:12:34,080 --> 00:12:39,030
<font color="#E5E5E5">package called Kerris which you can</font>

307
00:12:36,120 --> 00:12:40,590
write in<font color="#E5E5E5"> Python a deep learning model</font>

308
00:12:39,030 --> 00:12:44,400
and about I<font color="#CCCCCC"> don't know 10 lines of code</font>

309
00:12:40,590 --> 00:12:47,700
and so what you do<font color="#CCCCCC"> here</font><font color="#E5E5E5"> is I'm going to</font>

310
00:12:44,400 --> 00:12:50,490
<font color="#E5E5E5">define a shallow model first the the</font>

311
00:12:47,700 --> 00:12:53,300
model will just be an input<font color="#CCCCCC"> so I say</font>

312
00:12:50,490 --> 00:12:56,340
model dot add this<font color="#CCCCCC"> this input</font><font color="#E5E5E5"> layer and</font>

313
00:12:53,300 --> 00:12:58,650
<font color="#E5E5E5">I've chosen then the number of the</font>

314
00:12:56,340 --> 00:12:59,940
<font color="#E5E5E5">number</font><font color="#CCCCCC"> of dimensions with which to</font>

315
00:12:58,650 --> 00:13:01,709
<font color="#E5E5E5">express my input</font>

316
00:12:59,940 --> 00:13:03,330
that's called embedding dimension and

317
00:13:01,710 --> 00:13:04,320
then I'll have a single<font color="#CCCCCC"> output layer</font>

318
00:13:03,330 --> 00:13:06,840
again that's<font color="#E5E5E5"> called the logistic</font>

319
00:13:04,320 --> 00:13:09,600
<font color="#E5E5E5">regression layer a single</font><font color="#CCCCCC"> output with a</font>

320
00:13:06,840 --> 00:13:10,720
sigmoid activation and that will that

321
00:13:09,600 --> 00:13:13,629
will<font color="#E5E5E5"> give me a number</font>

322
00:13:10,720 --> 00:13:16,959
<font color="#CCCCCC">zero</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> one so all I have to</font><font color="#E5E5E5"> do now is</font>

323
00:13:13,629 --> 00:13:19,240
feed it<font color="#E5E5E5"> input data and labels and it</font>

324
00:13:16,959 --> 00:13:21,579
will learn by twiddling these weights

325
00:13:19,240 --> 00:13:23,980
which ones<font color="#CCCCCC"> it's it assigned to</font><font color="#E5E5E5"> zero and</font>

326
00:13:21,579 --> 00:13:25,599
<font color="#E5E5E5">which ones would have signed to one so</font>

327
00:13:23,980 --> 00:13:27,490
this<font color="#CCCCCC"> is really easy if we</font><font color="#E5E5E5"> can you know</font>

328
00:13:25,600 --> 00:13:29,129
add this shallow learning<font color="#CCCCCC"> with just a</font>

329
00:13:27,490 --> 00:13:31,750
few<font color="#E5E5E5"> lines</font><font color="#CCCCCC"> of code we can certainly</font><font color="#E5E5E5"> add</font>

330
00:13:29,129 --> 00:13:33,670
we<font color="#E5E5E5"> can certainly add another layer this</font>

331
00:13:31,750 --> 00:13:36,430
the second layer now<font color="#CCCCCC"> we'll have some</font>

332
00:13:33,670 --> 00:13:39,569
some other intermediate representation

333
00:13:36,430 --> 00:13:41,979
about about how to express<font color="#E5E5E5"> our data and</font>

334
00:13:39,569 --> 00:13:43,660
and here's the key to<font color="#E5E5E5"> deep learning</font><font color="#CCCCCC"> now</font>

335
00:13:41,980 --> 00:13:46,089
is internally in game we actually<font color="#CCCCCC"> call</font>

336
00:13:43,660 --> 00:13:48,009
this<font color="#CCCCCC"> brute-force differentiable learning</font>

337
00:13:46,089 --> 00:13:50,500
because why<font color="#CCCCCC"> not add a million layers</font>

338
00:13:48,009 --> 00:13:54,040
<font color="#E5E5E5">because the software</font><font color="#CCCCCC"> is going to do its</font>

339
00:13:50,500 --> 00:13:56,230
best to try<font color="#E5E5E5"> to try</font><font color="#CCCCCC"> to optimize your</font>

340
00:13:54,040 --> 00:13:57,849
<font color="#E5E5E5">output you give it</font><font color="#CCCCCC"> for the inputs you</font>

341
00:13:56,230 --> 00:14:02,290
give it and just learn all<font color="#E5E5E5"> these weights</font>

342
00:13:57,850 --> 00:14:04,540
<font color="#E5E5E5">and so this becomes just kind of an</font>

343
00:14:02,290 --> 00:14:06,939
engineering game<font color="#E5E5E5"> you try things and</font>

344
00:14:04,540 --> 00:14:09,129
<font color="#E5E5E5">usually it'll kind of work and then you</font>

345
00:14:06,939 --> 00:14:10,329
<font color="#E5E5E5">flip or it flips um you know replace</font>

346
00:14:09,129 --> 00:14:12,399
some Legos and<font color="#E5E5E5"> it kind of works a little</font>

347
00:14:10,329 --> 00:14:13,540
better<font color="#E5E5E5"> and at the end of the day you can</font>

348
00:14:12,399 --> 00:14:18,670
build a HipChat

349
00:14:13,540 --> 00:14:22,300
<font color="#CCCCCC">jump</font><font color="#E5E5E5"> bot so you know just incidentally I</font>

350
00:14:18,670 --> 00:14:23,979
think our HipChat<font color="#CCCCCC"> trump bot was was just</font>

351
00:14:22,300 --> 00:14:25,300
about<font color="#CCCCCC"> 20 lines of</font><font color="#E5E5E5"> code and looked very</font>

352
00:14:23,980 --> 00:14:30,069
<font color="#CCCCCC">much like this</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> it was</font><font color="#E5E5E5"> really the</font>

353
00:14:25,300 --> 00:14:33,250
data<font color="#E5E5E5"> that made it work okay</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> a dirty</font>

354
00:14:30,069 --> 00:14:36,490
<font color="#E5E5E5">secret about machine learning</font><font color="#CCCCCC"> and about</font>

355
00:14:33,250 --> 00:14:38,860
<font color="#E5E5E5">deep learning is that they have they</font>

356
00:14:36,490 --> 00:14:41,290
have vulnerabilities<font color="#CCCCCC"> like all defensive</font>

357
00:14:38,860 --> 00:14:43,389
products<font color="#E5E5E5"> and</font><font color="#CCCCCC"> they're there</font><font color="#E5E5E5"> is there's</font>

358
00:14:41,290 --> 00:14:45,309
not a machine<font color="#E5E5E5"> learning model unless</font><font color="#CCCCCC"> your</font>

359
00:14:43,389 --> 00:14:50,259
data is trivial that will not make a

360
00:14:45,309 --> 00:14:51,850
mistake<font color="#CCCCCC"> its effect</font><font color="#E5E5E5"> in fact one thing</font>

361
00:14:50,259 --> 00:14:54,519
<font color="#E5E5E5">that makes deep learning so attractive</font>

362
00:14:51,850 --> 00:14:56,709
is<font color="#E5E5E5"> that I can solve these massive</font>

363
00:14:54,519 --> 00:14:59,350
problems and<font color="#E5E5E5"> take on these big models</font>

364
00:14:56,709 --> 00:15:01,388
because the model<font color="#E5E5E5"> is differentiable and</font>

365
00:14:59,350 --> 00:15:02,800
if if<font color="#E5E5E5"> you took high school calculus</font><font color="#CCCCCC"> from</font>

366
00:15:01,389 --> 00:15:04,720
<font color="#E5E5E5">over a chain rule if you differentiate</font>

367
00:15:02,800 --> 00:15:06,579
something you with respect<font color="#CCCCCC"> to another</font>

368
00:15:04,720 --> 00:15:08,860
<font color="#E5E5E5">function you do this</font><font color="#CCCCCC"> chain rule</font><font color="#E5E5E5"> and that</font>

369
00:15:06,579 --> 00:15:10,000
<font color="#E5E5E5">is all that deep learning is solving</font>

370
00:15:08,860 --> 00:15:12,189
that<font color="#E5E5E5"> is just the chain</font><font color="#CCCCCC"> rule</font><font color="#E5E5E5"> and</font>

371
00:15:10,000 --> 00:15:15,530
application but guess what<font color="#CCCCCC"> because of</font>

372
00:15:12,189 --> 00:15:20,060
calculus hashtag thank you calculus

373
00:15:15,530 --> 00:15:22,280
we can<font color="#E5E5E5"> also exploit deep learning and it</font>

374
00:15:20,060 --> 00:15:23,989
because machine learning<font color="#E5E5E5"> and deep</font>

375
00:15:22,280 --> 00:15:26,360
learning have these blind spots<font color="#E5E5E5"> I'm</font>

376
00:15:23,990 --> 00:15:29,660
gonna show you<font color="#CCCCCC"> exactly how</font><font color="#E5E5E5"> to do that so</font>

377
00:15:26,360 --> 00:15:31,910
just just for fun there's a deep

378
00:15:29,660 --> 00:15:34,969
learning model an image credit here that

379
00:15:31,910 --> 00:15:37,670
<font color="#E5E5E5">with 57 percent confidence believes that</font>

380
00:15:34,970 --> 00:15:41,300
image is a panda<font color="#E5E5E5"> now I'm going to just</font>

381
00:15:37,670 --> 00:15:43,040
add the tiniest<font color="#E5E5E5"> fraction of noise</font><font color="#CCCCCC"> if</font>

382
00:15:41,300 --> 00:15:44,449
you'll<font color="#CCCCCC"> notice it's this is</font><font color="#E5E5E5"> what the</font>

383
00:15:43,040 --> 00:15:46,849
noise<font color="#E5E5E5"> looks like but it's scaled by</font>

384
00:15:44,450 --> 00:15:48,410
<font color="#E5E5E5">seven one</font><font color="#CCCCCC"> thousandth</font><font color="#E5E5E5"> so it would look</font>

385
00:15:46,850 --> 00:15:50,180
black<font color="#E5E5E5"> to you you you wouldn't notice</font>

386
00:15:48,410 --> 00:15:54,469
<font color="#E5E5E5">what the additive noise even</font><font color="#CCCCCC"> look like</font>

387
00:15:50,180 --> 00:15:56,810
<font color="#CCCCCC">and incidentally if you</font><font color="#E5E5E5"> fed this almost</font>

388
00:15:54,470 --> 00:15:58,280
black image that's scaled for<font color="#CCCCCC"> visibility</font>

389
00:15:56,810 --> 00:16:00,410
<font color="#CCCCCC">if you've had</font><font color="#E5E5E5"> this to a Depot new model</font>

390
00:15:58,280 --> 00:16:02,360
<font color="#E5E5E5">it would say that to nematode with 8.2</font>

391
00:16:00,410 --> 00:16:04,250
percent confidence and if you<font color="#E5E5E5"> add those</font>

392
00:16:02,360 --> 00:16:06,110
two<font color="#E5E5E5"> together well my goodness now the</font>

393
00:16:04,250 --> 00:16:09,500
deep learning model<font color="#E5E5E5"> thinks that you have</font>

394
00:16:06,110 --> 00:16:10,610
a Gibbon which is not a panda with

395
00:16:09,500 --> 00:16:13,460
ninety nine point three percent

396
00:16:10,610 --> 00:16:15,380
confidence so this is a problem<font color="#E5E5E5"> this is</font>

397
00:16:13,460 --> 00:16:16,640
<font color="#CCCCCC">a</font><font color="#E5E5E5"> problem</font><font color="#CCCCCC"> for those people trying</font><font color="#E5E5E5"> to</font>

398
00:16:15,380 --> 00:16:18,470
tell the difference<font color="#E5E5E5"> between</font><font color="#CCCCCC"> Candis and</font>

399
00:16:16,640 --> 00:16:20,589
Gibbons obviously but think about<font color="#E5E5E5"> the</font>

400
00:16:18,470 --> 00:16:24,110
problem in information security<font color="#E5E5E5"> where</font>

401
00:16:20,589 --> 00:16:25,790
<font color="#E5E5E5">these kind of images instead of images</font>

402
00:16:24,110 --> 00:16:29,660
we're working with<font color="#E5E5E5"> we're working as an</font>

403
00:16:25,790 --> 00:16:31,400
adversary so this is an important slide

404
00:16:29,660 --> 00:16:33,829
if you remember<font color="#CCCCCC"> nothing else from</font><font color="#E5E5E5"> where</font>

405
00:16:31,400 --> 00:16:34,910
the slide all machine learning<font color="#CCCCCC"> models</font>

406
00:16:33,830 --> 00:16:38,270
have blind<font color="#CCCCCC"> spots</font>

407
00:16:34,910 --> 00:16:40,730
they have vulnerabilities<font color="#E5E5E5"> because deep</font>

408
00:16:38,270 --> 00:16:42,620
learning is makes this these challenging

409
00:16:40,730 --> 00:16:46,010
problems simple to solve<font color="#E5E5E5"> it also makes</font>

410
00:16:42,620 --> 00:16:50,600
them especially<font color="#CCCCCC"> well-suited for</font>

411
00:16:46,010 --> 00:16:52,160
exploitation<font color="#CCCCCC"> what a third</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> that</font>

412
00:16:50,600 --> 00:16:54,620
we're gonna<font color="#CCCCCC"> exploiting</font><font color="#E5E5E5"> this talk is that</font>

413
00:16:52,160 --> 00:16:57,439
if I<font color="#CCCCCC"> find this</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of scary</font><font color="#E5E5E5"> if I can</font>

414
00:16:54,620 --> 00:16:59,900
find an adversarial example for deep

415
00:16:57,440 --> 00:17:03,380
learning<font color="#E5E5E5"> there's a good chance that that</font>

416
00:16:59,900 --> 00:17:05,629
adversarial example will also fool<font color="#E5E5E5"> a</font>

417
00:17:03,380 --> 00:17:07,189
completely<font color="#CCCCCC"> different model be a deep</font>

418
00:17:05,630 --> 00:17:09,140
<font color="#CCCCCC">learning or</font><font color="#E5E5E5"> anaphora store support</font>

419
00:17:07,189 --> 00:17:12,079
vector machine whatever<font color="#E5E5E5"> there's a good</font>

420
00:17:09,140 --> 00:17:13,760
chance<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the these can translate</font>

421
00:17:12,079 --> 00:17:17,000
<font color="#E5E5E5">across different machine learning models</font>

422
00:17:13,760 --> 00:17:18,949
so that's a bit scary<font color="#CCCCCC"> that means that</font>

423
00:17:17,000 --> 00:17:21,500
the adversary doesn't<font color="#E5E5E5"> need your model he</font>

424
00:17:18,949 --> 00:17:23,679
just needs a model and maybe he can

425
00:17:21,500 --> 00:17:26,029
begin<font color="#E5E5E5"> to find these</font>

426
00:17:23,679 --> 00:17:28,279
so a key<font color="#E5E5E5"> difference this has</font><font color="#CCCCCC"> been</font>

427
00:17:26,029 --> 00:17:30,259
studied<font color="#CCCCCC"> in in academia</font><font color="#E5E5E5"> for the last</font>

428
00:17:28,279 --> 00:17:32,480
several years<font color="#E5E5E5"> this notion of adversarial</font>

429
00:17:30,259 --> 00:17:34,880
examples but there's a difference

430
00:17:32,480 --> 00:17:37,429
between adversarial examples for<font color="#E5E5E5"> an</font>

431
00:17:34,880 --> 00:17:39,019
image classifier and adversarial

432
00:17:37,429 --> 00:17:43,639
examples<font color="#E5E5E5"> in an</font><font color="#CCCCCC"> Information Security</font>

433
00:17:39,019 --> 00:17:46,820
domain<font color="#E5E5E5"> and the key is that if we don't</font>

434
00:17:43,639 --> 00:17:49,519
patch it<font color="#E5E5E5"> somebody will</font><font color="#CCCCCC"> find it very</font>

435
00:17:46,820 --> 00:17:52,070
unlikely<font color="#CCCCCC"> that this you</font><font color="#E5E5E5"> know this picture</font>

436
00:17:49,519 --> 00:17:53,600
<font color="#CCCCCC">is going to</font><font color="#E5E5E5"> show</font><font color="#CCCCCC"> up in the wild and an</font>

437
00:17:52,070 --> 00:17:57,049
image classifier will you know make a

438
00:17:53,600 --> 00:17:58,549
big mistake<font color="#CCCCCC"> calling a panda</font><font color="#E5E5E5"> a given but</font>

439
00:17:57,049 --> 00:17:59,960
<font color="#CCCCCC">information</font><font color="#E5E5E5"> secure that the costs are</font>

440
00:17:58,549 --> 00:18:03,500
different<font color="#E5E5E5"> we're working against an</font>

441
00:17:59,960 --> 00:18:05,779
adversary<font color="#E5E5E5"> so what we're gonna do is try</font>

442
00:18:03,500 --> 00:18:07,820
<font color="#E5E5E5">to be proactive</font><font color="#CCCCCC"> and discover those</font>

443
00:18:05,779 --> 00:18:12,370
vulnerabilities ourself<font color="#E5E5E5"> in our own</font>

444
00:18:07,820 --> 00:18:14,809
models and try to patch them<font color="#CCCCCC"> okay</font>

445
00:18:12,370 --> 00:18:16,580
<font color="#E5E5E5">machine learning talk is mostly over</font>

446
00:18:14,809 --> 00:18:19,549
<font color="#E5E5E5">we're</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> move on in application and</font>

447
00:18:16,580 --> 00:18:21,799
dive in to a<font color="#CCCCCC"> little bit</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the details</font>

448
00:18:19,549 --> 00:18:24,408
about<font color="#E5E5E5"> how we construct this adversarial</font>

449
00:18:21,799 --> 00:18:25,879
game<font color="#E5E5E5"> so just as a review that the</font>

450
00:18:24,409 --> 00:18:30,980
application we're talking about<font color="#E5E5E5"> today is</font>

451
00:18:25,879 --> 00:18:32,959
going to<font color="#E5E5E5"> be detecting</font><font color="#CCCCCC"> DJ's so domain</font>

452
00:18:30,980 --> 00:18:36,440
<font color="#E5E5E5">generation algorithms use by malware to</font>

453
00:18:32,960 --> 00:18:38,450
call home<font color="#CCCCCC"> they they're really it's not</font>

454
00:18:36,440 --> 00:18:41,629
not a fair fight because the adversary

455
00:18:38,450 --> 00:18:43,879
<font color="#E5E5E5">has</font><font color="#CCCCCC"> to you know register 100 million</font>

456
00:18:41,629 --> 00:18:45,709
domains but the malware only has to

457
00:18:43,879 --> 00:18:48,289
success successfully connect to one of

458
00:18:45,710 --> 00:18:49,940
those right so it's really important<font color="#E5E5E5"> to</font>

459
00:18:48,289 --> 00:18:52,039
find them<font color="#CCCCCC"> otherwise</font><font color="#E5E5E5"> they'll they'll</font>

460
00:18:49,940 --> 00:18:54,320
<font color="#CCCCCC">establish a C</font><font color="#E5E5E5"> channel so kind of this</font>

461
00:18:52,039 --> 00:18:56,720
<font color="#E5E5E5">how it works you know the the the</font>

462
00:18:54,320 --> 00:18:58,789
<font color="#CCCCCC">malware on your</font><font color="#E5E5E5"> laptop</font><font color="#CCCCCC"> and the</font><font color="#E5E5E5"> the</font>

463
00:18:56,720 --> 00:19:00,470
<font color="#E5E5E5">server share a key and they pseudo</font>

464
00:18:58,789 --> 00:19:02,120
randomly generate a list of domain<font color="#E5E5E5"> names</font>

465
00:19:00,470 --> 00:19:04,759
one of<font color="#CCCCCC"> the time in the same order and</font>

466
00:19:02,120 --> 00:19:06,559
the the<font color="#CCCCCC"> malware will try one</font><font color="#E5E5E5"> it doesn't</font>

467
00:19:04,759 --> 00:19:09,139
<font color="#E5E5E5">exist he'll try another one it doesn't</font>

468
00:19:06,559 --> 00:19:11,149
exist<font color="#CCCCCC"> and finally he'll be successful in</font>

469
00:19:09,139 --> 00:19:13,779
establishing<font color="#E5E5E5"> connection be able to call</font>

470
00:19:11,149 --> 00:19:18,739
home<font color="#E5E5E5"> what we're gonna do in this talk is</font>

471
00:19:13,779 --> 00:19:21,019
develop a model that<font color="#E5E5E5"> looks</font><font color="#CCCCCC"> only at</font><font color="#E5E5E5"> the</font>

472
00:19:18,740 --> 00:19:23,240
domain name and tries<font color="#CCCCCC"> to determine</font>

473
00:19:21,019 --> 00:19:25,039
<font color="#E5E5E5">whether that has been generated</font>

474
00:19:23,240 --> 00:19:27,379
pseudorandomly or if<font color="#E5E5E5"> that is a</font>

475
00:19:25,039 --> 00:19:31,179
legitimate<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> human hand coded</font>

476
00:19:27,379 --> 00:19:31,178
domain<font color="#E5E5E5"> so that's that's the problem</font>

477
00:19:31,350 --> 00:19:36,429
the way we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to do this is I</font>

478
00:19:33,610 --> 00:19:40,750
alluded<font color="#CCCCCC"> to previously is by setting</font><font color="#E5E5E5"> up</font>

479
00:19:36,430 --> 00:19:43,390
this game of red<font color="#CCCCCC"> versus blue</font><font color="#E5E5E5"> so the blue</font>

480
00:19:40,750 --> 00:19:46,510
the blue team's job<font color="#CCCCCC"> obviously is to take</font>

481
00:19:43,390 --> 00:19:50,950
as as input a domain and try to tell if

482
00:19:46,510 --> 00:19:54,250
it's<font color="#CCCCCC"> DJ or not a</font><font color="#E5E5E5"> dg8 the red team's job</font>

483
00:19:50,950 --> 00:19:57,310
is<font color="#CCCCCC"> only one thing and it's to fool the</font>

484
00:19:54,250 --> 00:19:59,470
blue team<font color="#E5E5E5"> okay so all I'm going</font><font color="#CCCCCC"> to do is</font>

485
00:19:57,310 --> 00:20:01,389
<font color="#E5E5E5">I may have two models I'm</font><font color="#CCCCCC"> gonna connect</font>

486
00:19:59,470 --> 00:20:04,810
<font color="#E5E5E5">them together</font><font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is again</font>

487
00:20:01,390 --> 00:20:07,780
<font color="#E5E5E5">brute-force differentiable learning deep</font>

488
00:20:04,810 --> 00:20:11,530
learning<font color="#E5E5E5"> by by giving it a random seed</font>

489
00:20:07,780 --> 00:20:13,360
and saying that what whatever domain

490
00:20:11,530 --> 00:20:15,730
comes out at<font color="#E5E5E5"> the output I want to call</font>

491
00:20:13,360 --> 00:20:18,610
<font color="#CCCCCC">that I want to fool the blue team</font><font color="#E5E5E5"> and</font>

492
00:20:15,730 --> 00:20:20,200
make it call it good<font color="#E5E5E5"> so that's move</font>

493
00:20:18,610 --> 00:20:23,350
number<font color="#CCCCCC"> one by the red team</font><font color="#E5E5E5"> train this</font>

494
00:20:20,200 --> 00:20:26,140
generator to<font color="#E5E5E5"> randomly</font><font color="#CCCCCC"> generate a domain</font>

495
00:20:23,350 --> 00:20:29,740
an imposter<font color="#E5E5E5"> that will check the blue</font>

496
00:20:26,140 --> 00:20:33,010
team move number two is by the blue team

497
00:20:29,740 --> 00:20:35,380
<font color="#E5E5E5">and it will take that imposter the the</font>

498
00:20:33,010 --> 00:20:37,300
red team has served his purpose he will

499
00:20:35,380 --> 00:20:39,790
feed now these imposter samples to<font color="#E5E5E5"> the</font>

500
00:20:37,300 --> 00:20:41,379
blue team who will retrain with an

501
00:20:39,790 --> 00:20:44,080
Augmented data set with these

502
00:20:41,380 --> 00:20:45,060
vulnerabilities now exposed<font color="#E5E5E5"> and</font><font color="#CCCCCC"> harden</font>

503
00:20:44,080 --> 00:20:47,949
plug those holes

504
00:20:45,060 --> 00:20:54,389
so that's<font color="#CCCCCC"> move two and</font><font color="#E5E5E5"> we'll do this</font>

505
00:20:47,950 --> 00:20:54,390
over and over<font color="#CCCCCC"> and over</font><font color="#E5E5E5"> and over again so</font>

506
00:20:55,820 --> 00:20:59,479
now I need to tell you that<font color="#CCCCCC"> I</font><font color="#E5E5E5"> told you</font>

507
00:20:58,249 --> 00:21:01,220
<font color="#E5E5E5">that if you you know if you go home</font>

508
00:20:59,479 --> 00:21:03,619
<font color="#E5E5E5">tonight and play for</font><font color="#CCCCCC"> about a half hour</font>

509
00:21:01,220 --> 00:21:05,389
you can get pretty dangerous at creating

510
00:21:03,619 --> 00:21:07,728
your own shrimp<font color="#CCCCCC"> boat or</font><font color="#E5E5E5"> whatever you can</font>

511
00:21:05,389 --> 00:21:11,029
do that<font color="#E5E5E5"> these these more sophisticated</font>

512
00:21:07,729 --> 00:21:12,979
<font color="#E5E5E5">networks are are can be hard and hard to</font>

513
00:21:11,029 --> 00:21:14,989
train<font color="#E5E5E5"> and so there's some tricks that we</font>

514
00:21:12,979 --> 00:21:17,809
employ<font color="#CCCCCC"> to try to make the training</font>

515
00:21:14,989 --> 00:21:20,179
simpler and one of<font color="#E5E5E5"> those is it was</font>

516
00:21:17,809 --> 00:21:24,139
what's called<font color="#CCCCCC"> an</font><font color="#E5E5E5"> autoencoder not own</font>

517
00:21:20,179 --> 00:21:28,879
coder is nothing more than a tool in

518
00:21:24,139 --> 00:21:31,668
which we input a domain and try to

519
00:21:28,879 --> 00:21:34,908
output the same<font color="#CCCCCC"> domain</font><font color="#E5E5E5"> and it's just</font>

520
00:21:31,669 --> 00:21:37,220
trying to learn the right<font color="#CCCCCC"> representation</font>

521
00:21:34,909 --> 00:21:40,220
for all<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> domains in our data set</font>

522
00:21:37,220 --> 00:21:42,739
<font color="#E5E5E5">so that it can</font><font color="#CCCCCC"> accurately reproduce it</font>

523
00:21:40,220 --> 00:21:45,019
<font color="#E5E5E5">this is if you listed the last talk this</font>

524
00:21:42,739 --> 00:21:47,570
<font color="#E5E5E5">is an example of unsupervised learning</font>

525
00:21:45,019 --> 00:21:50,179
where<font color="#CCCCCC"> we need no labels</font><font color="#E5E5E5"> but we can train</font>

526
00:21:47,570 --> 00:21:53,119
the weights of our model based on<font color="#E5E5E5"> just</font>

527
00:21:50,179 --> 00:21:55,879
globs of data<font color="#E5E5E5"> so in this case we will</font>

528
00:21:53,119 --> 00:21:58,099
train our<font color="#E5E5E5"> encoder</font><font color="#CCCCCC"> on the alot Alexa top</font>

529
00:21:55,879 --> 00:21:59,658
ten thousand or Alexa top<font color="#E5E5E5"> 1 million and</font>

530
00:21:58,099 --> 00:22:01,668
it will learn an efficient way<font color="#CCCCCC"> to</font>

531
00:21:59,659 --> 00:22:05,539
represent<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of these domains in the</font>

532
00:22:01,669 --> 00:22:09,229
<font color="#CCCCCC">knobs and dials of deep learning in</font>

533
00:22:05,539 --> 00:22:12,408
order<font color="#CCCCCC"> to correctly express those after</font>

534
00:22:09,229 --> 00:22:15,739
that's done<font color="#CCCCCC"> we have we have successfully</font>

535
00:22:12,409 --> 00:22:18,649
<font color="#E5E5E5">solved a key part of our adversarial</font>

536
00:22:15,739 --> 00:22:20,450
problem<font color="#E5E5E5"> most of the meat of this model</font>

537
00:22:18,649 --> 00:22:22,070
is learning how to represent<font color="#E5E5E5"> things</font>

538
00:22:20,450 --> 00:22:24,229
remember deep learning<font color="#E5E5E5"> is</font><font color="#CCCCCC"> about</font>

539
00:22:22,070 --> 00:22:26,840
representing things once we solve that

540
00:22:24,229 --> 00:22:29,570
problem<font color="#E5E5E5"> we can repurpose our</font><font color="#CCCCCC"> auto</font>

541
00:22:26,840 --> 00:22:32,059
<font color="#CCCCCC">encoder</font><font color="#E5E5E5"> and just add these tiny top</font>

542
00:22:29,570 --> 00:22:34,639
layers that the purpose of<font color="#E5E5E5"> this top</font>

543
00:22:32,059 --> 00:22:37,158
layer<font color="#CCCCCC"> is to transform</font><font color="#E5E5E5"> a random seed to</font>

544
00:22:34,639 --> 00:22:39,139
that same kind<font color="#E5E5E5"> of representation</font><font color="#CCCCCC"> for a</font>

545
00:22:37,159 --> 00:22:41,599
domain<font color="#E5E5E5"> that</font><font color="#CCCCCC"> was learned</font><font color="#E5E5E5"> and the purpose</font>

546
00:22:39,139 --> 00:22:43,939
of<font color="#E5E5E5"> this last layer is to decode a</font>

547
00:22:41,599 --> 00:22:46,609
representation<font color="#E5E5E5"> and and classified as</font>

548
00:22:43,940 --> 00:22:49,340
<font color="#CCCCCC">either being</font><font color="#E5E5E5"> pseudo randomly generated</font>

549
00:22:46,609 --> 00:22:52,279
or human<font color="#E5E5E5"> generated so that's</font><font color="#CCCCCC"> it that's</font>

550
00:22:49,340 --> 00:22:55,599
one trick what we've<font color="#CCCCCC"> used to train our</font>

551
00:22:52,279 --> 00:22:59,299
so<font color="#E5E5E5"> called generative adversarial</font><font color="#CCCCCC"> network</font>

552
00:22:55,599 --> 00:23:01,820
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> technical deep dive is mostly over</font><font color="#CCCCCC"> I</font>

553
00:22:59,299 --> 00:23:04,309
want to show you what I think<font color="#E5E5E5"> are kind</font>

554
00:23:01,820 --> 00:23:06,010
<font color="#E5E5E5">of curious results from this game of</font>

555
00:23:04,309 --> 00:23:09,490
adversarial deep learning

556
00:23:06,010 --> 00:23:11,890
so on on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> left-hand side I'm showing</font>

557
00:23:09,490 --> 00:23:13,840
you<font color="#E5E5E5"> the results</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the auto encoder so</font>

558
00:23:11,890 --> 00:23:16,360
remember<font color="#E5E5E5"> input a domain name try to</font>

559
00:23:13,840 --> 00:23:18,699
reproduce<font color="#CCCCCC"> that same domain</font><font color="#E5E5E5"> name and it's</font>

560
00:23:16,360 --> 00:23:20,229
going<font color="#E5E5E5"> to make mistakes because</font><font color="#CCCCCC"> if it</font>

561
00:23:18,700 --> 00:23:22,720
didn't make mistakes<font color="#E5E5E5"> we'd be overfitting</font>

562
00:23:20,230 --> 00:23:26,080
and have a bad<font color="#E5E5E5"> model so the top here are</font>

563
00:23:22,720 --> 00:23:28,720
<font color="#E5E5E5">our successful examples of our auto</font>

564
00:23:26,080 --> 00:23:30,970
encoder<font color="#E5E5E5"> representing those domains so</font>

565
00:23:28,720 --> 00:23:32,620
<font color="#CCCCCC">Chi F Costa kayak and</font><font color="#E5E5E5"> the bottom are</font>

566
00:23:30,970 --> 00:23:35,559
some I think<font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of hilarious</font>

567
00:23:32,620 --> 00:23:38,139
mistakes<font color="#CCCCCC"> that it makes so input</font><font color="#E5E5E5"> gillian</font>

568
00:23:35,559 --> 00:23:40,178
<font color="#E5E5E5">anderson and output you'll</font><font color="#CCCCCC"> Gilead and</font>

569
00:23:38,140 --> 00:23:41,860
<font color="#CCCCCC">Olson which is kind of cool</font>

570
00:23:40,179 --> 00:23:45,490
looks kind of<font color="#E5E5E5"> real but it's a completely</font>

571
00:23:41,860 --> 00:23:48,790
artificial domain<font color="#E5E5E5"> one interesting</font><font color="#CCCCCC"> thing</font>

572
00:23:45,490 --> 00:23:50,679
about this we<font color="#CCCCCC"> are inputting</font><font color="#E5E5E5"> characters</font>

573
00:23:48,790 --> 00:23:53,980
and outputting characters it<font color="#E5E5E5"> has no</font>

574
00:23:50,679 --> 00:23:55,740
knowledge about about English language

575
00:23:53,980 --> 00:23:59,140
<font color="#CCCCCC">it's learning</font><font color="#E5E5E5"> this all from</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> data</font>

576
00:23:55,740 --> 00:24:01,150
<font color="#CCCCCC">okay on the</font><font color="#E5E5E5"> right hand</font><font color="#CCCCCC"> side</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> this this</font>

577
00:23:59,140 --> 00:24:04,179
was step one we trained an<font color="#E5E5E5"> autoencoder</font>

578
00:24:01,150 --> 00:24:06,100
and then we re-engineered<font color="#E5E5E5"> our little</font>

579
00:24:04,179 --> 00:24:09,190
<font color="#E5E5E5">network to play adversarial gating and</font>

580
00:24:06,100 --> 00:24:11,290
<font color="#E5E5E5">at the end of that adversarial game the</font>

581
00:24:09,190 --> 00:24:13,600
red team has<font color="#E5E5E5"> learned to bypass the blue</font>

582
00:24:11,290 --> 00:24:15,970
team<font color="#E5E5E5"> and these are the kinds of domains</font>

583
00:24:13,600 --> 00:24:18,129
<font color="#E5E5E5">that it generates that are totally</font>

584
00:24:15,970 --> 00:24:20,260
random<font color="#CCCCCC"> so I would just want to press</font>

585
00:24:18,130 --> 00:24:22,929
upon you<font color="#CCCCCC"> the input to this was a random</font>

586
00:24:20,260 --> 00:24:26,410
seed and the output is a domain<font color="#CCCCCC"> name</font>

587
00:24:22,929 --> 00:24:27,970
that<font color="#E5E5E5"> says fire fi RI</font><font color="#CCCCCC"> APs which could</font>

588
00:24:26,410 --> 00:24:29,950
totally be legitimate if one were to

589
00:24:27,970 --> 00:24:31,270
look at<font color="#E5E5E5"> it again there's a lot of</font>

590
00:24:29,950 --> 00:24:33,460
actually one of<font color="#E5E5E5"> these leaner outcome is</font>

591
00:24:31,270 --> 00:24:34,990
actually<font color="#CCCCCC"> a registered domain that was</font>

592
00:24:33,460 --> 00:24:37,600
generated<font color="#E5E5E5"> from just a random number</font>

593
00:24:34,990 --> 00:24:40,270
<font color="#E5E5E5">which is kind of cool the point of this</font>

594
00:24:37,600 --> 00:24:43,149
talk<font color="#CCCCCC"> of course is not to develop develop</font>

595
00:24:40,270 --> 00:24:46,330
a DG algorithm<font color="#E5E5E5"> but to harden our</font>

596
00:24:43,150 --> 00:24:48,100
classifier before right before I move on

597
00:24:46,330 --> 00:24:51,970
to<font color="#CCCCCC"> that I</font><font color="#E5E5E5"> want to compare for a moment</font>

598
00:24:48,100 --> 00:24:54,879
what these these<font color="#CCCCCC"> d GA domains look like</font>

599
00:24:51,970 --> 00:24:57,210
compared<font color="#E5E5E5"> to an actual DJ so here here's</font>

600
00:24:54,880 --> 00:24:59,410
cryptolocker<font color="#E5E5E5"> right ransomware that</font>

601
00:24:57,210 --> 00:25:01,240
<font color="#E5E5E5">here's the code to generate it but its</font>

602
00:24:59,410 --> 00:25:02,650
domains look like this and if<font color="#E5E5E5"> you to</font>

603
00:25:01,240 --> 00:25:04,510
<font color="#CCCCCC">look at</font><font color="#E5E5E5"> that you could tell</font><font color="#CCCCCC"> right away</font>

604
00:25:02,650 --> 00:25:06,100
<font color="#E5E5E5">you know sort of fixed length random</font>

605
00:25:04,510 --> 00:25:09,160
randomly choosing<font color="#E5E5E5"> characters kind of</font>

606
00:25:06,100 --> 00:25:11,949
easy<font color="#CCCCCC"> for a</font><font color="#E5E5E5"> model to tell here's another</font>

607
00:25:09,160 --> 00:25:14,200
example<font color="#CCCCCC"> the SEM 2d GA here's here's</font><font color="#E5E5E5"> the</font>

608
00:25:11,950 --> 00:25:15,730
code to<font color="#E5E5E5"> produce it fixed length kind of</font>

609
00:25:14,200 --> 00:25:17,080
easy to<font color="#E5E5E5"> tell some of them are clever</font>

610
00:25:15,730 --> 00:25:19,750
<font color="#CCCCCC">because they you know alternate</font>

611
00:25:17,080 --> 00:25:22,370
consonants and vowels but

612
00:25:19,750 --> 00:25:24,140
you know I think<font color="#E5E5E5"> you'd agree</font><font color="#CCCCCC"> that sort</font>

613
00:25:22,370 --> 00:25:26,209
of<font color="#E5E5E5"> this list is a more compelling list</font>

614
00:25:24,140 --> 00:25:32,300
of<font color="#CCCCCC"> domain names</font><font color="#E5E5E5"> that could</font><font color="#CCCCCC"> full full and</font>

615
00:25:26,210 --> 00:25:35,150
classifier<font color="#E5E5E5"> okay so in what follows I'm</font>

616
00:25:32,300 --> 00:25:37,550
going to first train not a deep learning

617
00:25:35,150 --> 00:25:40,820
<font color="#E5E5E5">model</font><font color="#CCCCCC"> a totally</font><font color="#E5E5E5"> different model a random</font>

618
00:25:37,550 --> 00:25:43,430
forest model<font color="#E5E5E5"> to detect deep</font><font color="#CCCCCC"> GGA domains</font>

619
00:25:40,820 --> 00:25:45,350
<font color="#CCCCCC">a deep DJ is what we're calling</font><font color="#E5E5E5"> these</font>

620
00:25:43,430 --> 00:25:48,440
these<font color="#E5E5E5"> adversary</font><font color="#CCCCCC"> generated domains and</font>

621
00:25:45,350 --> 00:25:51,139
only those so as one job<font color="#E5E5E5"> detect these</font>

622
00:25:48,440 --> 00:25:53,270
domains<font color="#E5E5E5"> and you can see as we play a</font>

623
00:25:51,140 --> 00:25:55,690
<font color="#E5E5E5">number of adversarial games with our</font>

624
00:25:53,270 --> 00:25:58,430
<font color="#E5E5E5">model its ability to detect</font><font color="#CCCCCC"> these things</font>

625
00:25:55,690 --> 00:26:00,440
decreases this<font color="#E5E5E5"> is a by the way this is a</font>

626
00:25:58,430 --> 00:26:02,300
<font color="#E5E5E5">rock curve and it's showing</font><font color="#CCCCCC"> the</font>

627
00:26:00,440 --> 00:26:04,670
trade-off<font color="#CCCCCC"> between the false positive and</font>

628
00:26:02,300 --> 00:26:06,740
false negative rate<font color="#E5E5E5"> so performance</font>

629
00:26:04,670 --> 00:26:09,140
<font color="#E5E5E5">increases as you</font><font color="#CCCCCC"> move to the</font><font color="#E5E5E5"> upper</font>

630
00:26:06,740 --> 00:26:12,080
<font color="#CCCCCC">left-hand</font><font color="#E5E5E5"> corner and decreases as</font><font color="#CCCCCC"> you as</font>

631
00:26:09,140 --> 00:26:14,000
you<font color="#E5E5E5"> sort of shrink that curve another</font>

632
00:26:12,080 --> 00:26:16,639
<font color="#E5E5E5">interesting example so now</font><font color="#CCCCCC"> instead of</font>

633
00:26:14,000 --> 00:26:18,560
trying<font color="#CCCCCC"> to detect</font><font color="#E5E5E5"> you know our method and</font>

634
00:26:16,640 --> 00:26:20,600
only our method<font color="#E5E5E5"> let's build a</font>

635
00:26:18,560 --> 00:26:23,120
<font color="#CCCCCC">general-purpose classifier</font><font color="#E5E5E5"> to detect all</font>

636
00:26:20,600 --> 00:26:25,370
<font color="#E5E5E5">BGA's and I might and you'll see that I</font>

637
00:26:23,120 --> 00:26:27,530
<font color="#E5E5E5">can detect almost everything except with</font>

638
00:26:25,370 --> 00:26:29,870
a rate of<font color="#E5E5E5"> less than</font><font color="#CCCCCC"> half it detects our</font>

639
00:26:27,530 --> 00:26:33,830
things<font color="#CCCCCC"> okay so let's</font><font color="#E5E5E5"> look this on its</font>

640
00:26:29,870 --> 00:26:35,959
head<font color="#E5E5E5"> now</font><font color="#CCCCCC"> all of these</font><font color="#E5E5E5"> families</font><font color="#CCCCCC"> by the</font>

641
00:26:33,830 --> 00:26:37,879
way miss this plot were equally

642
00:26:35,960 --> 00:26:39,170
represented in the<font color="#CCCCCC"> training set what</font>

643
00:26:37,880 --> 00:26:42,200
we're gonna do now is<font color="#CCCCCC"> harden</font><font color="#E5E5E5"> our</font>

644
00:26:39,170 --> 00:26:44,900
classifier and add a disproportionate

645
00:26:42,200 --> 00:26:47,060
amount<font color="#E5E5E5"> of these these samples we've</font>

646
00:26:44,900 --> 00:26:49,130
generated<font color="#CCCCCC"> to our model to try to harden</font>

647
00:26:47,060 --> 00:26:52,179
it and the results<font color="#E5E5E5"> are like this</font>

648
00:26:49,130 --> 00:26:56,090
so before hardening<font color="#E5E5E5"> we can detect a</font>

649
00:26:52,180 --> 00:26:58,580
family we've never seen with not<font color="#E5E5E5"> very</font>

650
00:26:56,090 --> 00:27:01,040
well<font color="#E5E5E5"> right by the way this this is a</font>

651
00:26:58,580 --> 00:27:04,449
especially<font color="#CCCCCC"> difficult example because</font>

652
00:27:01,040 --> 00:27:06,590
while we've trained on only characters

653
00:27:04,450 --> 00:27:09,650
<font color="#E5E5E5">character based</font><font color="#CCCCCC"> DJ's we're trying to</font>

654
00:27:06,590 --> 00:27:11,959
detect<font color="#E5E5E5"> a DJ based on that appends random</font>

655
00:27:09,650 --> 00:27:12,620
<font color="#E5E5E5">words together from the from the English</font>

656
00:27:11,960 --> 00:27:14,300
dictionary

657
00:27:12,620 --> 00:27:16,550
now we've seen improvement after<font color="#CCCCCC"> we've</font>

658
00:27:14,300 --> 00:27:19,220
trained adversarial<font color="#CCCCCC"> this is even</font><font color="#E5E5E5"> more</font>

659
00:27:16,550 --> 00:27:21,139
stark when we to try our classifier

660
00:27:19,220 --> 00:27:23,000
against a method<font color="#E5E5E5"> that's like the</font>

661
00:27:21,140 --> 00:27:25,670
training<font color="#E5E5E5"> data that is based on</font>

662
00:27:23,000 --> 00:27:27,470
characters we see it<font color="#CCCCCC"> jump from an 85</font>

663
00:27:25,670 --> 00:27:29,830
<font color="#CCCCCC">percent detection rate to</font><font color="#E5E5E5"> almost 100</font>

664
00:27:27,470 --> 00:27:29,830
<font color="#CCCCCC">percent</font>

665
00:27:30,000 --> 00:27:36,730
okay so here's<font color="#CCCCCC"> my conclusion slide</font>

666
00:27:34,050 --> 00:27:40,780
number one all machine<font color="#CCCCCC"> learning models</font>

667
00:27:36,730 --> 00:27:42,190
have blind spots<font color="#CCCCCC"> and the nice thing</font>

668
00:27:40,780 --> 00:27:44,649
<font color="#CCCCCC">about deep learning</font><font color="#E5E5E5"> that makes the</font><font color="#CCCCCC"> easy</font>

669
00:27:42,190 --> 00:27:47,130
to<font color="#CCCCCC"> Train</font><font color="#E5E5E5"> makes it also easy to exploit</font>

670
00:27:44,650 --> 00:27:49,120
and that's the differentiable nature

671
00:27:47,130 --> 00:27:51,070
adversarial examples can<font color="#E5E5E5"> be shared</font>

672
00:27:49,120 --> 00:27:52,959
<font color="#E5E5E5">across models and this should scare</font><font color="#CCCCCC"> you</font>

673
00:27:51,070 --> 00:27:55,750
just a little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> that if I find an</font>

674
00:27:52,960 --> 00:27:57,490
adversarial example for one model<font color="#CCCCCC"> as I</font>

675
00:27:55,750 --> 00:27:58,930
showed<font color="#CCCCCC"> you I found it</font><font color="#E5E5E5"> for a deep</font>

676
00:27:57,490 --> 00:28:01,210
learning model and it<font color="#E5E5E5"> works pretty</font><font color="#CCCCCC"> well</font>

677
00:27:58,930 --> 00:28:04,870
against<font color="#CCCCCC"> the</font><font color="#E5E5E5"> random</font><font color="#CCCCCC"> forest model</font><font color="#E5E5E5"> number</font>

678
00:28:01,210 --> 00:28:06,550
three<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have come up with</font><font color="#CCCCCC"> a way to try</font>

679
00:28:04,870 --> 00:28:08,979
to<font color="#CCCCCC"> harden</font><font color="#E5E5E5"> these models by playing this</font>

680
00:28:06,550 --> 00:28:11,889
adversarial game<font color="#E5E5E5"> and the resulting</font>

681
00:28:08,980 --> 00:28:15,160
domains<font color="#E5E5E5"> from that game</font><font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> use to add</font>

682
00:28:11,890 --> 00:28:16,420
to<font color="#E5E5E5"> our training set to</font><font color="#CCCCCC"> robusta phi to</font>

683
00:28:15,160 --> 00:28:19,870
strengthen our model against future

684
00:28:16,420 --> 00:28:21,250
<font color="#CCCCCC">attacks and I've seen families the</font><font color="#E5E5E5"> way</font>

685
00:28:19,870 --> 00:28:23,110
that you play these<font color="#E5E5E5"> games are actually</font>

686
00:28:21,250 --> 00:28:24,370
<font color="#CCCCCC">really hard problems and if there</font><font color="#E5E5E5"> any</font>

687
00:28:23,110 --> 00:28:26,800
data scientists in the room<font color="#CCCCCC"> would like</font>

688
00:28:24,370 --> 00:28:27,850
to take a deeper<font color="#CCCCCC"> dive I do have slides</font>

689
00:28:26,800 --> 00:28:30,340
I'm not presenting<font color="#CCCCCC"> to the general</font>

690
00:28:27,850 --> 00:28:32,350
audience<font color="#E5E5E5"> because you'll fall asleep that</font>

691
00:28:30,340 --> 00:28:34,330
maybe you'd<font color="#E5E5E5"> find interesting about how</font>

692
00:28:32,350 --> 00:28:37,449
to you know<font color="#E5E5E5"> how to do some of these</font>

693
00:28:34,330 --> 00:28:39,310
tricks<font color="#CCCCCC"> the one-liner is</font><font color="#E5E5E5"> that you know</font>

694
00:28:37,450 --> 00:28:40,720
<font color="#E5E5E5">instead</font><font color="#CCCCCC"> of you know instead of trying to</font>

695
00:28:39,310 --> 00:28:42,909
find<font color="#E5E5E5"> optimum we're trying to find this</font>

696
00:28:40,720 --> 00:28:44,680
Nash equilibrium<font color="#CCCCCC"> in a game theoretic</font>

697
00:28:42,910 --> 00:28:46,300
setting where there's an equal

698
00:28:44,680 --> 00:28:48,130
competition between<font color="#E5E5E5"> generate</font><font color="#CCCCCC"> and</font>

699
00:28:46,300 --> 00:28:50,139
<font color="#CCCCCC">injector</font><font color="#E5E5E5"> so this game theory thing makes</font>

700
00:28:48,130 --> 00:28:51,190
it really<font color="#E5E5E5"> hard to train so enough</font><font color="#CCCCCC"> for</font>

701
00:28:50,140 --> 00:28:53,860
<font color="#E5E5E5">that that was actually three lines I</font>

702
00:28:51,190 --> 00:28:55,630
apologize<font color="#E5E5E5"> last cool applications we can</font>

703
00:28:53,860 --> 00:28:58,240
<font color="#E5E5E5">both generate malicious domains that I</font>

704
00:28:55,630 --> 00:28:59,500
think are pretty pretty pretty cool<font color="#E5E5E5"> and</font>

705
00:28:58,240 --> 00:29:02,440
<font color="#CCCCCC">we</font><font color="#E5E5E5"> can use those domains to harden our</font>

706
00:28:59,500 --> 00:29:04,510
models with that I'd love to<font color="#E5E5E5"> take your</font>

707
00:29:02,440 --> 00:29:07,050
questions<font color="#CCCCCC"> and</font><font color="#E5E5E5"> thank you for having me</font>

708
00:29:04,510 --> 00:29:07,050
here<font color="#CCCCCC"> besides</font>

709
00:29:19,540 --> 00:29:34,810
today<font color="#E5E5E5"> there so going back</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> to a to</font>

710
00:29:30,330 --> 00:29:41,110
<font color="#CCCCCC">going</font><font color="#E5E5E5"> back to boy if I can talk today</font>

711
00:29:34,810 --> 00:29:45,360
<font color="#CCCCCC">going</font><font color="#E5E5E5"> back to each of going back to each</font>

712
00:29:41,110 --> 00:29:45,360
of your

713
00:29:47,549 --> 00:29:58,990
<font color="#E5E5E5">iteration head layers are do you all</font>

714
00:29:55,990 --> 00:30:02,080
like really weighted<font color="#CCCCCC"> the layers</font><font color="#E5E5E5"> the</font>

715
00:29:58,990 --> 00:30:03,659
layers themselves<font color="#CCCCCC"> those do you mean the</font>

716
00:30:02,080 --> 00:30:06,189
iterations<font color="#E5E5E5"> or the layers of the model</font>

717
00:30:03,659 --> 00:30:08,110
iterations<font color="#E5E5E5"> the iterations they</font>

718
00:30:06,190 --> 00:30:09,999
<font color="#E5E5E5">regenerated the same number they were</font>

719
00:30:08,110 --> 00:30:14,678
equally weighted<font color="#E5E5E5"> yeah okay</font>

720
00:30:09,999 --> 00:30:16,389
why<font color="#CCCCCC"> that's good so in in the hardening</font>

721
00:30:14,679 --> 00:30:18,279
we only use<font color="#CCCCCC"> the</font><font color="#E5E5E5"> last iteration</font><font color="#CCCCCC"> like</font>

722
00:30:16,389 --> 00:30:20,408
<font color="#E5E5E5">after the game had concluded okay those</font>

723
00:30:18,279 --> 00:30:23,220
were<font color="#CCCCCC"> the best</font><font color="#E5E5E5"> that the most devious</font>

724
00:30:20,409 --> 00:30:29,740
domain names came<font color="#E5E5E5"> to the last round yes</font>

725
00:30:23,220 --> 00:30:36,549
how do you measure<font color="#E5E5E5"> how that last was</font><font color="#CCCCCC"> the</font>

726
00:30:29,740 --> 00:30:40,029
best<font color="#CCCCCC"> like this so this this is a measure</font>

727
00:30:36,549 --> 00:30:41,860
about how well a model can be<font color="#CCCCCC"> Technos</font>

728
00:30:40,029 --> 00:30:44,019
when it wasn't trained on<font color="#CCCCCC"> what when it</font>

729
00:30:41,860 --> 00:30:47,469
was trained on those and<font color="#CCCCCC"> only those so</font>

730
00:30:44,019 --> 00:30:51,309
it's<font color="#E5E5E5"> its ability</font><font color="#CCCCCC"> to catch them</font><font color="#E5E5E5"> decreases</font>

731
00:30:47,470 --> 00:30:54,840
as<font color="#CCCCCC"> you play this game</font><font color="#E5E5E5"> yeah okay</font><font color="#CCCCCC"> all</font>

732
00:30:51,309 --> 00:30:54,840
right<font color="#E5E5E5"> thanks yep you bet</font>

733
00:31:00,830 --> 00:31:05,449
<font color="#E5E5E5">all right cool awesome talk um</font><font color="#CCCCCC"> so you</font>

734
00:31:03,920 --> 00:31:07,100
<font color="#E5E5E5">spoke a bit about</font><font color="#CCCCCC"> auto-encoders to</font>

735
00:31:05,450 --> 00:31:09,560
encode domains into embeddings<font color="#CCCCCC"> have you</font>

736
00:31:07,100 --> 00:31:11,300
tried using them<font color="#CCCCCC"> for like other you know</font>

737
00:31:09,560 --> 00:31:15,230
contacts<font color="#E5E5E5"> like malware or sim logs or</font>

738
00:31:11,300 --> 00:31:19,040
anything like that<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> we have we</font><font color="#E5E5E5"> have</font>

739
00:31:15,230 --> 00:31:21,830
tried things<font color="#E5E5E5"> so we've tried I think many</font>

740
00:31:19,040 --> 00:31:24,649
times unsuccessfully<font color="#CCCCCC"> like HTTP headers</font>

741
00:31:21,830 --> 00:31:27,050
<font color="#CCCCCC">malware's hard because</font><font color="#E5E5E5"> there there's big</font>

742
00:31:24,650 --> 00:31:29,120
and variety but after feature izing the

743
00:31:27,050 --> 00:31:29,870
<font color="#E5E5E5">malware so representing a set of a</font>

744
00:31:29,120 --> 00:31:31,429
sequence<font color="#CCCCCC"> of bytes</font>

745
00:31:29,870 --> 00:31:33,889
you know stripping out PE information

746
00:31:31,430 --> 00:31:36,560
for<font color="#CCCCCC"> PE files whatever those we can</font><font color="#E5E5E5"> auto</font>

747
00:31:33,890 --> 00:31:41,180
encode<font color="#CCCCCC"> all so to some extent it's a good</font>

748
00:31:36,560 --> 00:31:44,840
<font color="#E5E5E5">question</font><font color="#CCCCCC"> Alice I have a question</font><font color="#E5E5E5"> um if I</font>

749
00:31:41,180 --> 00:31:47,200
understood correctly<font color="#CCCCCC"> there was a very</font>

750
00:31:44,840 --> 00:31:49,760
low detection<font color="#CCCCCC"> rate on the deep</font><font color="#E5E5E5"> DGA</font>

751
00:31:47,200 --> 00:31:53,720
<font color="#E5E5E5">because you're actually withholding the</font>

752
00:31:49,760 --> 00:31:55,010
the training data<font color="#CCCCCC"> that would I mean of</font>

753
00:31:53,720 --> 00:31:58,760
the things that were generated<font color="#CCCCCC"> by it</font>

754
00:31:55,010 --> 00:32:03,620
<font color="#E5E5E5">right yeah</font>

755
00:31:58,760 --> 00:32:05,060
so you were<font color="#E5E5E5"> not you actually had deep</font><font color="#CCCCCC"> TJ</font>

756
00:32:03,620 --> 00:32:06,560
represented on the<font color="#E5E5E5"> training set as well</font>

757
00:32:05,060 --> 00:32:07,669
<font color="#E5E5E5">it was in the training set</font><font color="#CCCCCC"> okay the</font>

758
00:32:06,560 --> 00:32:09,350
difference<font color="#CCCCCC"> between this</font><font color="#E5E5E5"> slide and the</font>

759
00:32:07,670 --> 00:32:11,390
previous slide is the classifier is

760
00:32:09,350 --> 00:32:14,090
trying to catch all the things not just

761
00:32:11,390 --> 00:32:16,760
deep DGA<font color="#E5E5E5"> mm-hmm so when we have a broad</font>

762
00:32:14,090 --> 00:32:19,129
<font color="#E5E5E5">defense it has a hard time these</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> the</font>

763
00:32:16,760 --> 00:32:20,600
sneakiest one<font color="#CCCCCC"> about all</font><font color="#E5E5E5"> of them yeah you</font>

764
00:32:19,130 --> 00:32:22,580
know mobile<font color="#E5E5E5"> trainings</font><font color="#CCCCCC"> yeah I have to</font>

765
00:32:20,600 --> 00:32:24,050
look<font color="#E5E5E5"> a little bit closer on how you did</font>

766
00:32:22,580 --> 00:32:26,030
this generation<font color="#E5E5E5"> because yes so this is</font>

767
00:32:24,050 --> 00:32:28,100
<font color="#CCCCCC">it this is if if so it's this is</font>

768
00:32:26,030 --> 00:32:30,230
<font color="#CCCCCC">definitely interesting this is a their</font>

769
00:32:28,100 --> 00:32:33,800
10,000 samples in every from every

770
00:32:30,230 --> 00:32:36,680
family equally weighted<font color="#E5E5E5"> because on the</font>

771
00:32:33,800 --> 00:32:38,720
next<font color="#CCCCCC"> slide</font><font color="#E5E5E5"> and were like plus</font><font color="#CCCCCC"> deep DGA</font>

772
00:32:36,680 --> 00:32:41,510
it got me the impression<font color="#CCCCCC"> that you had</font>

773
00:32:38,720 --> 00:32:43,370
<font color="#CCCCCC">actually withheld the deep DGA or yawns</font>

774
00:32:41,510 --> 00:32:45,830
<font color="#E5E5E5">the difference here</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> a really good</font>

775
00:32:43,370 --> 00:32:47,959
<font color="#E5E5E5">question</font><font color="#CCCCCC"> Ellis deep GJ is</font><font color="#E5E5E5"> not we're not</font>

776
00:32:45,830 --> 00:32:50,510
trying<font color="#E5E5E5"> to catch DG it's not in the test</font>

777
00:32:47,960 --> 00:32:52,880
set<font color="#E5E5E5"> uh-huh so this is how I can catch</font>

778
00:32:50,510 --> 00:32:55,520
only<font color="#CCCCCC"> this family volatile that was not</font>

779
00:32:52,880 --> 00:32:59,120
in the training set<font color="#CCCCCC"> but I've added</font><font color="#E5E5E5"> deep</font>

780
00:32:55,520 --> 00:33:01,910
<font color="#E5E5E5">DGA to the training set that</font><font color="#CCCCCC"> makes sense</font>

781
00:32:59,120 --> 00:33:04,580
<font color="#E5E5E5">I trained</font><font color="#CCCCCC"> on all all the things all the</font>

782
00:33:01,910 --> 00:33:06,410
things<font color="#CCCCCC"> Plus D PGA</font><font color="#E5E5E5"> and that allowed me to</font>

783
00:33:04,580 --> 00:33:07,399
catch this family I didn't train on

784
00:33:06,410 --> 00:33:09,440
that's interesting

785
00:33:07,400 --> 00:33:10,850
<font color="#E5E5E5">okay okay no yeah this is so the same</font>

786
00:33:09,440 --> 00:33:11,900
thing here this is actually<font color="#CCCCCC"> a really</font><font color="#E5E5E5"> bad</font>

787
00:33:10,850 --> 00:33:13,850
example cuz<font color="#E5E5E5"> they're still only</font><font color="#CCCCCC"> getting</font>

788
00:33:11,900 --> 00:33:15,590
<font color="#E5E5E5">50%</font><font color="#CCCCCC"> there's a really hard</font><font color="#E5E5E5"> one this is</font>

789
00:33:13,850 --> 00:33:18,350
pretty astounding<font color="#CCCCCC"> it means that you know</font>

790
00:33:15,590 --> 00:33:20,800
my my false negative rate goes from<font color="#E5E5E5"> 15</font>

791
00:33:18,350 --> 00:33:23,990
percent to almost zero because I've

792
00:33:20,800 --> 00:33:28,280
totally artificially created part of my

793
00:33:23,990 --> 00:33:30,500
data set with<font color="#CCCCCC"> DDG right so no work yeah</font>

794
00:33:28,280 --> 00:33:36,410
except data science<font color="#CCCCCC"> our I'd be very</font>

795
00:33:30,500 --> 00:33:39,500
curious<font color="#CCCCCC"> I'm very curious</font><font color="#E5E5E5"> to see how this</font>

796
00:33:36,410 --> 00:33:42,350
impact<font color="#E5E5E5"> the cost positive rate I see the</font>

797
00:33:39,500 --> 00:33:44,060
ROC<font color="#CCCCCC"> curve of course but but yeah this</font><font color="#E5E5E5"> is</font>

798
00:33:42,350 --> 00:33:45,740
<font color="#E5E5E5">this is this is really</font><font color="#CCCCCC"> interesting I do</font>

799
00:33:44,060 --> 00:33:46,879
have one I'm sorry<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> hardly in the</font>

800
00:33:45,740 --> 00:33:51,830
<font color="#E5E5E5">microphone</font><font color="#CCCCCC"> I just have one more question</font>

801
00:33:46,880 --> 00:33:53,360
<font color="#CCCCCC">but uh especially when you say attend if</font>

802
00:33:51,830 --> 00:33:55,100
there's other scenario example would<font color="#CCCCCC"> be</font>

803
00:33:53,360 --> 00:33:57,169
like you could be generalize it over

804
00:33:55,100 --> 00:33:58,909
across different models yeah<font color="#E5E5E5"> I mean</font>

805
00:33:57,170 --> 00:34:00,350
<font color="#CCCCCC">assuming that people were doing</font><font color="#E5E5E5"> the lazy</font>

806
00:33:58,910 --> 00:34:01,640
thing on deep<font color="#E5E5E5"> learning where they don't</font>

807
00:34:00,350 --> 00:34:03,889
actually think<font color="#E5E5E5"> of all the features they</font>

808
00:34:01,640 --> 00:34:07,130
<font color="#E5E5E5">just hot encoded and just feed it to</font>

809
00:34:03,890 --> 00:34:08,900
<font color="#CCCCCC">anything else</font><font color="#E5E5E5"> right it's it's the same</font>

810
00:34:07,130 --> 00:34:11,330
the<font color="#E5E5E5"> same principle right if someone</font>

811
00:34:08,900 --> 00:34:13,580
actually<font color="#E5E5E5"> sat</font><font color="#CCCCCC"> down and tried</font><font color="#E5E5E5"> to to create</font>

812
00:34:11,330 --> 00:34:16,370
<font color="#E5E5E5">different features</font><font color="#CCCCCC"> and then feed them to</font>

813
00:34:13,580 --> 00:34:19,130
the thing<font color="#E5E5E5"> yeah not necessarily</font><font color="#CCCCCC"> they</font>

814
00:34:16,370 --> 00:34:20,569
would be yeah<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I didn't have</font><font color="#E5E5E5"> time Alex</font>

815
00:34:19,130 --> 00:34:23,510
but this is kind of<font color="#CCCCCC"> interesting I think</font>

816
00:34:20,570 --> 00:34:24,860
<font color="#E5E5E5">you'll appreciate is</font><font color="#CCCCCC"> that I use real</font>

817
00:34:23,510 --> 00:34:26,510
deep learning<font color="#CCCCCC"> to generate</font><font color="#E5E5E5"> these things</font>

818
00:34:24,860 --> 00:34:29,000
there's there's a it learned the feature

819
00:34:26,510 --> 00:34:31,040
<font color="#E5E5E5">presentation</font><font color="#CCCCCC"> the random forests that</font><font color="#E5E5E5"> I'm</font>

820
00:34:29,000 --> 00:34:33,850
using to<font color="#E5E5E5"> test here was a feature</font>

821
00:34:31,040 --> 00:34:36,469
<font color="#CCCCCC">handcrafted features in the manual sense</font>

822
00:34:33,850 --> 00:34:38,870
which<font color="#E5E5E5"> is kind of alarming to me yeah</font>

823
00:34:36,469 --> 00:34:41,209
<font color="#E5E5E5">that it turns out that those adverse</font>

824
00:34:38,870 --> 00:34:43,670
<font color="#E5E5E5">sale examples for deep DGA worked</font>

825
00:34:41,210 --> 00:34:46,040
against a handcrafted feature you know

826
00:34:43,670 --> 00:34:48,380
robust in that sense<font color="#E5E5E5"> random forest model</font>

827
00:34:46,040 --> 00:34:50,090
<font color="#E5E5E5">you know kind of kind of scary no no</font>

828
00:34:48,380 --> 00:34:52,730
yeah this is<font color="#E5E5E5"> a yeah I didn't catch that</font>

829
00:34:50,090 --> 00:34:55,570
<font color="#CCCCCC">that</font><font color="#E5E5E5"> one as well man</font><font color="#CCCCCC"> great work man</font>

830
00:34:52,730 --> 00:34:55,570
congratulations

831
00:34:57,200 --> 00:35:05,540
<font color="#E5E5E5">hey</font><font color="#CCCCCC"> thanks for the awesome talking um so</font>

832
00:35:01,650 --> 00:35:08,550
my question is<font color="#CCCCCC"> also three folks sorry</font>

833
00:35:05,540 --> 00:35:11,160
<font color="#E5E5E5">well the first one is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> what what</font>

834
00:35:08,550 --> 00:35:13,950
about<font color="#CCCCCC"> the</font><font color="#E5E5E5"> false negative rate yeah</font><font color="#CCCCCC"> what</font>

835
00:35:11,160 --> 00:35:20,970
<font color="#CCCCCC">would I be it's a good question so all</font>

836
00:35:13,950 --> 00:35:23,100
of these here were we only yeah the

837
00:35:20,970 --> 00:35:25,740
results I've shown we're only trying to

838
00:35:23,100 --> 00:35:29,339
<font color="#E5E5E5">catch bad things but false thing of</font><font color="#CCCCCC"> rate</font>

839
00:35:25,740 --> 00:35:30,810
is<font color="#E5E5E5"> a huge problem</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so the</font><font color="#CCCCCC"> only</font>

840
00:35:29,340 --> 00:35:33,090
graphic I can show you today is<font color="#E5E5E5"> this</font>

841
00:35:30,810 --> 00:35:35,370
right<font color="#CCCCCC"> and so</font><font color="#E5E5E5"> this is the kind</font><font color="#CCCCCC"> of</font>

842
00:35:33,090 --> 00:35:38,820
representation<font color="#CCCCCC"> if it's trying to catch</font>

843
00:35:35,370 --> 00:35:41,190
deep da but that there<font color="#E5E5E5"> is a false the</font>

844
00:35:38,820 --> 00:35:44,070
talk today is<font color="#E5E5E5"> not</font><font color="#CCCCCC"> necessarily about that</font>

845
00:35:41,190 --> 00:35:45,750
<font color="#E5E5E5">it's about hardening classifiers yep I</font>

846
00:35:44,070 --> 00:35:48,150
don't know right now<font color="#E5E5E5"> what's a good thing</font>

847
00:35:45,750 --> 00:35:50,460
<font color="#CCCCCC">to look into how that</font><font color="#E5E5E5"> might improve</font>

848
00:35:48,150 --> 00:35:51,900
<font color="#E5E5E5">maybe the false negative false negative</font>

849
00:35:50,460 --> 00:35:52,730
rate or false positive rate yeah it's<font color="#CCCCCC"> a</font>

850
00:35:51,900 --> 00:35:55,440
really<font color="#CCCCCC"> good question</font>

851
00:35:52,730 --> 00:35:59,190
yep<font color="#CCCCCC"> so so you know</font><font color="#E5E5E5"> I've</font><font color="#CCCCCC"> been</font><font color="#E5E5E5"> doing this</font>

852
00:35:55,440 --> 00:36:01,230
a while ago<font color="#CCCCCC"> and so the second question</font>

853
00:35:59,190 --> 00:36:04,590
<font color="#CCCCCC">would be you know</font><font color="#E5E5E5"> that there's some</font>

854
00:36:01,230 --> 00:36:08,190
Chinese<font color="#CCCCCC"> assisity of the domains some</font>

855
00:36:04,590 --> 00:36:12,150
Chinese domains we start seeing<font color="#E5E5E5"> that</font>

856
00:36:08,190 --> 00:36:19,920
really looks like a<font color="#CCCCCC"> DGA domain but in in</font>

857
00:36:12,150 --> 00:36:21,480
<font color="#E5E5E5">fact they are legit</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> Yap</font><font color="#CCCCCC"> unicode</font>

858
00:36:19,920 --> 00:36:23,730
actually there are app<font color="#CCCCCC"> unicode in the</font>

859
00:36:21,480 --> 00:36:25,200
Alexa top women they were trained on<font color="#E5E5E5"> I'm</font>

860
00:36:23,730 --> 00:36:27,420
having examples here but punic<font color="#E5E5E5"> punic</font>

861
00:36:25,200 --> 00:36:29,580
code is hard for our auto encoder to

862
00:36:27,420 --> 00:36:33,420
represent and I imagine<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the legit</font>

863
00:36:29,580 --> 00:36:36,210
<font color="#E5E5E5">Jenny's domains are also hard yeah</font>

864
00:36:33,420 --> 00:36:39,450
because<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> a abbreviations of Chinese</font>

865
00:36:36,210 --> 00:36:41,870
paintings so they really look like they

866
00:36:39,450 --> 00:36:43,620
<font color="#E5E5E5">even look like to Italy to my</font><font color="#CCCCCC"> paradise</font>

867
00:36:41,870 --> 00:36:46,319
yeah yeah<font color="#E5E5E5"> something like that</font>

868
00:36:43,620 --> 00:36:48,480
<font color="#CCCCCC">well</font><font color="#E5E5E5"> that'd</font><font color="#CCCCCC"> be problem so the surf</font>

869
00:36:46,320 --> 00:36:50,910
question would<font color="#CCCCCC"> be like um</font><font color="#E5E5E5"> you've said</font>

870
00:36:48,480 --> 00:36:55,290
the<font color="#E5E5E5"> motto is</font><font color="#CCCCCC"> prong has some</font>

871
00:36:50,910 --> 00:36:58,319
<font color="#CCCCCC">vulnerabilities and two is it</font><font color="#E5E5E5"> can any</font>

872
00:36:55,290 --> 00:37:01,610
better if we<font color="#CCCCCC"> use a</font><font color="#E5E5E5"> some boat</font><font color="#CCCCCC"> model or</font>

873
00:36:58,320 --> 00:37:05,280
what kind of model as<font color="#CCCCCC"> ensemble ensemble</font>

874
00:37:01,610 --> 00:37:06,540
<font color="#CCCCCC">yes but again</font><font color="#E5E5E5"> ensemble methods have</font>

875
00:37:05,280 --> 00:37:07,279
<font color="#CCCCCC">vulnerabilities so I showed</font><font color="#E5E5E5"> you one</font>

876
00:37:06,540 --> 00:37:10,950
<font color="#CCCCCC">random four</font>

877
00:37:07,279 --> 00:37:13,229
supplemented<font color="#E5E5E5"> yeah exact so it is prone</font>

878
00:37:10,950 --> 00:37:14,999
not just<font color="#E5E5E5"> to vulnerabilities but in fact</font>

879
00:37:13,229 --> 00:37:16,968
some of<font color="#E5E5E5"> the same vulnerabilities we</font>

880
00:37:14,999 --> 00:37:18,479
discovered for a deep<font color="#CCCCCC"> learning model</font>

881
00:37:16,969 --> 00:37:26,209
<font color="#E5E5E5">okay thank you</font>

882
00:37:18,479 --> 00:37:30,390
you bet eating up here at<font color="#CCCCCC"> lunchtime I</font>

883
00:37:26,209 --> 00:37:32,368
apologize<font color="#E5E5E5"> minimally</font><font color="#CCCCCC"> so from a</font>

884
00:37:30,390 --> 00:37:33,900
vulnerability standpoint<font color="#E5E5E5"> if we think</font>

885
00:37:32,369 --> 00:37:36,839
that models have vulnerabilities<font color="#E5E5E5"> and</font>

886
00:37:33,900 --> 00:37:40,229
we're<font color="#E5E5E5"> continuously training models to</font>

887
00:37:36,839 --> 00:37:41,670
find<font color="#E5E5E5"> them in miles to be protected</font>

888
00:37:40,229 --> 00:37:43,769
against them<font color="#E5E5E5"> and defend against them is</font>

889
00:37:41,670 --> 00:37:45,450
it<font color="#CCCCCC"> going to be like vulnerability</font>

890
00:37:43,769 --> 00:37:48,629
assessment where there is<font color="#E5E5E5"> always the</font>

891
00:37:45,450 --> 00:37:51,299
next vulnerability<font color="#E5E5E5"> and if so are we what</font>

892
00:37:48,630 --> 00:37:52,349
do we gain by finding vulnerability in

893
00:37:51,299 --> 00:37:56,609
when there will always be a

894
00:37:52,349 --> 00:37:59,599
<font color="#CCCCCC">vulnerability in</font><font color="#E5E5E5"> plus one yeah I may be</font>

895
00:37:56,609 --> 00:38:01,769
more<font color="#CCCCCC"> of a philosophical</font><font color="#E5E5E5"> question because</font>

896
00:37:59,599 --> 00:38:03,900
you know<font color="#CCCCCC"> I don't think</font><font color="#E5E5E5"> that anyone</font>

897
00:38:01,769 --> 00:38:05,939
believes<font color="#E5E5E5"> that there's one tool to catch</font>

898
00:38:03,900 --> 00:38:07,829
all the<font color="#CCCCCC"> bad things right</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> and kind</font>

899
00:38:05,940 --> 00:38:08,789
<font color="#CCCCCC">of this layer defense is kind of a back</font>

900
00:38:07,829 --> 00:38:11,339
to the previous question isn't<font color="#CCCCCC"> this</font>

901
00:38:08,789 --> 00:38:12,719
ensemble<font color="#E5E5E5"> of ways to catch things things</font>

902
00:38:11,339 --> 00:38:14,308
will still<font color="#E5E5E5"> get through from time to time</font>

903
00:38:12,719 --> 00:38:17,880
and I<font color="#CCCCCC"> think that's the way</font><font color="#E5E5E5"> to go</font>

904
00:38:14,309 --> 00:38:23,729
<font color="#E5E5E5">so you pardoned the things you have and</font>

905
00:38:17,880 --> 00:38:25,229
you lots of them<font color="#E5E5E5"> so yeah and I guess</font><font color="#CCCCCC"> my</font>

906
00:38:23,729 --> 00:38:28,529
<font color="#E5E5E5">technical</font><font color="#CCCCCC"> question you're feeding in</font>

907
00:38:25,229 --> 00:38:30,180
ultimately<font color="#E5E5E5"> you're using diagrams</font><font color="#CCCCCC"> to</font>

908
00:38:28,529 --> 00:38:31,709
<font color="#E5E5E5">represent the domains</font><font color="#CCCCCC"> before it</font><font color="#E5E5E5"> said</font>

909
00:38:30,180 --> 00:38:34,109
that was<font color="#E5E5E5"> just the shallow learning so</font>

910
00:38:31,709 --> 00:38:36,868
<font color="#E5E5E5">that okay they were using for a good</font>

911
00:38:34,109 --> 00:38:39,180
<font color="#CCCCCC">questions so what we did</font><font color="#E5E5E5"> is we we</font>

912
00:38:36,869 --> 00:38:41,640
allowed the deep learning<font color="#E5E5E5"> model to</font>

913
00:38:39,180 --> 00:38:43,049
choose a representation<font color="#CCCCCC"> and</font>

914
00:38:41,640 --> 00:38:46,229
<font color="#E5E5E5">twenty-minute dimensional space for</font>

915
00:38:43,049 --> 00:38:47,788
every character<font color="#CCCCCC"> okay and it learned</font>

916
00:38:46,229 --> 00:38:49,439
everything<font color="#E5E5E5"> else okay so you're feeding</font>

917
00:38:47,789 --> 00:38:50,940
the characters in like one by one<font color="#CCCCCC"> yeah</font>

918
00:38:49,440 --> 00:38:52,769
we feed it an integer<font color="#CCCCCC"> that</font><font color="#E5E5E5"> represents a</font>

919
00:38:50,940 --> 00:38:57,469
character<font color="#CCCCCC"> yep okay</font>

920
00:38:52,769 --> 00:38:57,468
and so okay<font color="#E5E5E5"> thanks</font>

921
00:38:59,109 --> 00:39:03,190
Gabe can<font color="#CCCCCC"> I</font><font color="#E5E5E5"> dismiss people to lunch</font>

