1
00:00:00,000 --> 00:00:06,420
<font color="#E5E5E5">okay so next up we have John Seymour</font>

2
00:00:03,449 --> 00:00:08,899
from zero<font color="#E5E5E5"> Fox so put your hands together</font>

3
00:00:06,420 --> 00:00:08,899
for John

4
00:00:27,720 --> 00:00:33,000
<font color="#CCCCCC">you know and we're good awesome cool so</font>

5
00:00:31,259 --> 00:00:35,220
today<font color="#E5E5E5"> I'll be talking about labeling the</font>

6
00:00:33,000 --> 00:00:36,629
virus share data set and indexing it so

7
00:00:35,220 --> 00:00:38,180
that people<font color="#E5E5E5"> can actually use it for</font>

8
00:00:36,629 --> 00:00:40,349
machine learning and things like that

9
00:00:38,180 --> 00:00:42,300
before I start<font color="#CCCCCC"> I just kind of want to</font>

10
00:00:40,350 --> 00:00:43,920
get<font color="#E5E5E5"> a feel for people here how many</font>

11
00:00:42,300 --> 00:00:47,190
people<font color="#CCCCCC"> are</font><font color="#E5E5E5"> like in the data scientist</font>

12
00:00:43,920 --> 00:00:48,930
I'd of infosec you know<font color="#E5E5E5"> okay and how</font>

13
00:00:47,190 --> 00:00:50,550
many like reverse engineers or malware

14
00:00:48,930 --> 00:00:52,290
analysts or anything like that do we

15
00:00:50,550 --> 00:00:54,239
have some okay cool I would love<font color="#CCCCCC"> to</font>

16
00:00:52,290 --> 00:00:58,110
speak with you guys after this talk so

17
00:00:54,239 --> 00:01:00,360
feel free to<font color="#E5E5E5"> come on up as as was</font>

18
00:00:58,110 --> 00:01:02,280
<font color="#E5E5E5">mentioned my name is John Seymour here's</font>

19
00:01:00,360 --> 00:01:05,610
my<font color="#E5E5E5"> UMBC email because this is part of my</font>

20
00:01:02,280 --> 00:01:07,320
<font color="#E5E5E5">PhD work and my twitter handles here</font>

21
00:01:05,610 --> 00:01:09,000
follow me I'll tweet out some links

22
00:01:07,320 --> 00:01:13,529
after the talk you can download some

23
00:01:09,000 --> 00:01:15,030
cool stuff so who am i well I'm a PhD

24
00:01:13,530 --> 00:01:17,460
student at the University of Maryland

25
00:01:15,030 --> 00:01:19,860
Baltimore County i'm also a data

26
00:01:17,460 --> 00:01:21,990
scientist at<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> fox and i do a lot of</font>

27
00:01:19,860 --> 00:01:23,970
security machine learning work my

28
00:01:21,990 --> 00:01:27,149
interests are mainly in like<font color="#CCCCCC"> datasets</font>

29
00:01:23,970 --> 00:01:28,590
<font color="#E5E5E5">and proving that they don't suck and can</font>

30
00:01:27,150 --> 00:01:30,509
<font color="#E5E5E5">actually be</font><font color="#CCCCCC"> used for gaining information</font>

31
00:01:28,590 --> 00:01:34,110
on what we're building machine learning

32
00:01:30,509 --> 00:01:36,720
models on so we'll<font color="#E5E5E5"> start today by</font>

33
00:01:34,110 --> 00:01:37,950
talking just basically introduction for

34
00:01:36,720 --> 00:01:40,350
some of you on the security side of

35
00:01:37,950 --> 00:01:42,720
things like a very<font color="#E5E5E5"> very high level</font>

36
00:01:40,350 --> 00:01:45,809
description of malware classification in

37
00:01:42,720 --> 00:01:47,729
general what works what doesn't then

38
00:01:45,810 --> 00:01:49,560
we'll segue into labeling the virus

39
00:01:47,729 --> 00:01:52,860
share corpus why that's<font color="#CCCCCC"> good how it</font>

40
00:01:49,560 --> 00:01:54,930
helps<font color="#E5E5E5"> on building an index why we need</font>

41
00:01:52,860 --> 00:01:57,210
an index in<font color="#E5E5E5"> the first place what that</font>

42
00:01:54,930 --> 00:01:58,680
means using<font color="#CCCCCC"> a cool sexy tool that I</font>

43
00:01:57,210 --> 00:02:01,350
wanted<font color="#E5E5E5"> to learn about called PI spark</font>

44
00:01:58,680 --> 00:02:03,420
and<font color="#E5E5E5"> we'll end up</font><font color="#CCCCCC"> with some pretty</font><font color="#E5E5E5"> graphs</font>

45
00:02:01,350 --> 00:02:06,869
and words of caution and some useful

46
00:02:03,420 --> 00:02:08,818
extensions for these<font color="#E5E5E5"> things so the main</font>

47
00:02:06,870 --> 00:02:10,289
problem here is there's more malware

48
00:02:08,818 --> 00:02:12,119
variants created every day than we can

49
00:02:10,288 --> 00:02:13,379
possibly ever analyzed right there's

50
00:02:12,120 --> 00:02:15,299
this thing called polymorphic malware

51
00:02:13,379 --> 00:02:17,129
which basically means you run the

52
00:02:15,299 --> 00:02:19,349
malware and it changes its you know

53
00:02:17,129 --> 00:02:20,760
<font color="#CCCCCC">sha-256 you know hash or whatever</font>

54
00:02:19,349 --> 00:02:23,099
signatures that are being used<font color="#E5E5E5"> to</font>

55
00:02:20,760 --> 00:02:25,170
classify these things right<font color="#CCCCCC"> so we want</font>

56
00:02:23,099 --> 00:02:26,939
to automate this process and how do we

57
00:02:25,170 --> 00:02:29,819
automate it well one thought is maybe we

58
00:02:26,939 --> 00:02:31,859
can apply machine learning to it so what

59
00:02:29,819 --> 00:02:33,659
<font color="#CCCCCC">is machine learning well at a high level</font>

60
00:02:31,860 --> 00:02:34,769
it's finding patterns in data right you

61
00:02:33,659 --> 00:02:36,599
have all this data<font color="#E5E5E5"> you want to find</font>

62
00:02:34,769 --> 00:02:38,280
patterns in it so<font color="#CCCCCC"> you can maybe say hey</font>

63
00:02:36,599 --> 00:02:39,810
that's likely<font color="#E5E5E5"> this thing is you know</font>

64
00:02:38,280 --> 00:02:41,250
malicious maybe we should check it<font color="#E5E5E5"> out</font>

65
00:02:39,810 --> 00:02:43,920
or maybe this

66
00:02:41,250 --> 00:02:45,450
thing is obviously you<font color="#CCCCCC"> know standard</font>

67
00:02:43,920 --> 00:02:48,959
procedure we don't need to look at it at

68
00:02:45,450 --> 00:02:50,820
all right and what we call these sort of

69
00:02:48,960 --> 00:02:54,060
patterns that we're looking<font color="#CCCCCC"> at we call</font>

70
00:02:50,820 --> 00:02:56,640
them features um and we use models which

71
00:02:54,060 --> 00:02:59,040
are statistical things just to make

72
00:02:56,640 --> 00:03:00,660
sense<font color="#E5E5E5"> of these features and there</font><font color="#CCCCCC"> of</font>

73
00:02:59,040 --> 00:03:03,359
course libraries in every programming

74
00:03:00,660 --> 00:03:05,010
language you want to use I love Python I

75
00:03:03,360 --> 00:03:07,650
know a lot of people<font color="#E5E5E5"> like are in Weka we</font>

76
00:03:05,010 --> 00:03:09,870
just saw talk with<font color="#CCCCCC"> like a arm and here</font>

77
00:03:07,650 --> 00:03:11,700
are<font color="#E5E5E5"> two links that I love for you know</font>

78
00:03:09,870 --> 00:03:16,770
just getting<font color="#E5E5E5"> started on the data science</font>

79
00:03:11,700 --> 00:03:18,869
side of things yep so cool if<font color="#CCCCCC"> we want</font><font color="#E5E5E5"> to</font>

80
00:03:16,770 --> 00:03:21,690
do data science we<font color="#E5E5E5"> have to have data to</font>

81
00:03:18,870 --> 00:03:23,900
actually work with right and so where do

82
00:03:21,690 --> 00:03:26,459
we<font color="#E5E5E5"> find data in the malware domain um</font>

83
00:03:23,900 --> 00:03:28,620
here's some of the<font color="#E5E5E5"> best places that I've</font>

84
00:03:26,459 --> 00:03:30,360
found from malware I know there are lots

85
00:03:28,620 --> 00:03:32,070
of others can<font color="#CCCCCC"> taji omal share things</font>

86
00:03:30,360 --> 00:03:35,190
like that these are the things<font color="#E5E5E5"> that I've</font>

87
00:03:32,070 --> 00:03:38,359
found<font color="#E5E5E5"> to be used most you know in in the</font>

88
00:03:35,190 --> 00:03:41,850
industry and academia things all of<font color="#CCCCCC"> them</font>

89
00:03:38,360 --> 00:03:44,760
so the first place<font color="#E5E5E5"> I love is malware</font>

90
00:03:41,850 --> 00:03:46,890
traffic analysis net it's<font color="#E5E5E5"> only got about</font>

91
00:03:44,760 --> 00:03:48,480
<font color="#E5E5E5">600 samples so it's not very useful for</font>

92
00:03:46,890 --> 00:03:51,119
like full scale you know production eyes

93
00:03:48,480 --> 00:03:52,768
machine learning right um but the it's

94
00:03:51,120 --> 00:03:54,989
got a couple really good points to it

95
00:03:52,769 --> 00:03:57,060
first there's lots of exploit kits in it

96
00:03:54,989 --> 00:03:58,560
and exploit kits were you know all the

97
00:03:57,060 --> 00:04:01,709
rage like<font color="#E5E5E5"> a year ago or something like</font>

98
00:03:58,560 --> 00:04:04,049
that and it includes the analyses for

99
00:04:01,709 --> 00:04:05,610
every<font color="#E5E5E5"> single sample so there's this guy</font>

100
00:04:04,049 --> 00:04:08,070
<font color="#E5E5E5">who actually goes through you know</font>

101
00:04:05,610 --> 00:04:10,019
rights up you know takes a<font color="#CCCCCC"> peek app</font>

102
00:04:08,070 --> 00:04:12,239
takes the executable uploads its fire

103
00:04:10,019 --> 00:04:15,299
share tells how he reverse engineered

104
00:04:12,239 --> 00:04:17,010
this executable and he actually writes

105
00:04:15,299 --> 00:04:19,620
it all down so you can go back<font color="#CCCCCC"> and read</font>

106
00:04:17,010 --> 00:04:21,719
<font color="#CCCCCC">it and learn actually how to do all this</font>

107
00:04:19,620 --> 00:04:23,520
<font color="#E5E5E5">reverse engineering stuff which is very</font>

108
00:04:21,720 --> 00:04:25,200
useful<font color="#CCCCCC"> when you're creating models</font>

109
00:04:23,520 --> 00:04:27,270
because you actually need a little bit

110
00:04:25,200 --> 00:04:30,030
of domain expertise to know like what's

111
00:04:27,270 --> 00:04:33,419
going<font color="#E5E5E5"> on what's you know 192 dot you</font>

112
00:04:30,030 --> 00:04:35,309
know<font color="#CCCCCC"> 0021 or whatever is a totally fine</font>

113
00:04:33,419 --> 00:04:38,820
don't worry about<font color="#CCCCCC"> things</font><font color="#E5E5E5"> that call out</font>

114
00:04:35,310 --> 00:04:40,550
to it things<font color="#CCCCCC"> like that um so so you can</font>

115
00:04:38,820 --> 00:04:43,169
get<font color="#E5E5E5"> a little bit of domain expertise</font>

116
00:04:40,550 --> 00:04:44,700
then there's<font color="#E5E5E5"> the</font><font color="#CCCCCC"> cattle data set for</font>

117
00:04:43,169 --> 00:04:46,680
those of<font color="#E5E5E5"> you who</font><font color="#CCCCCC"> don't know Kaggle is a</font>

118
00:04:44,700 --> 00:04:49,770
data science competition hosting site

119
00:04:46,680 --> 00:04:51,810
and last year<font color="#E5E5E5"> Microsoft hosted a</font>

120
00:04:49,770 --> 00:04:54,240
competition on<font color="#E5E5E5"> cattle for classifying</font>

121
00:04:51,810 --> 00:04:57,020
malware I'll<font color="#E5E5E5"> get it into</font>

122
00:04:54,240 --> 00:04:59,669
that in a bit but they released about

123
00:04:57,020 --> 00:05:03,389
11,000 samples of malware they neutered

124
00:04:59,669 --> 00:05:05,060
them bit and which is 500 gigabytes on

125
00:05:03,389 --> 00:05:07,800
your hard drive can fit pretty well on

126
00:05:05,060 --> 00:05:09,780
and the task was to say hey here<font color="#CCCCCC"> are</font>

127
00:05:07,800 --> 00:05:12,900
these nine families of malware figure

128
00:05:09,780 --> 00:05:15,179
out which executables on in this test

129
00:05:12,900 --> 00:05:18,388
set that we don't know belong to<font color="#CCCCCC"> which</font>

130
00:05:15,180 --> 00:05:20,610
families and how they distributed this

131
00:05:18,389 --> 00:05:24,389
data was they gave heck stumps and<font color="#CCCCCC"> it's</font>

132
00:05:20,610 --> 00:05:26,849
disassembled files from<font color="#E5E5E5"> ida pro arm that</font>

133
00:05:24,389 --> 00:05:28,080
they removed<font color="#E5E5E5"> all the PE headers from so</font>

134
00:05:26,849 --> 00:05:32,400
nobody could actually execute the

135
00:05:28,080 --> 00:05:33,479
follows but basically<font color="#CCCCCC"> um people use you</font>

136
00:05:32,400 --> 00:05:34,799
know standard natural language

137
00:05:33,479 --> 00:05:37,080
processing techniques and stuff like

138
00:05:34,800 --> 00:05:40,319
that in order to actually fulfill the

139
00:05:37,080 --> 00:05:42,960
competition the next data set that<font color="#CCCCCC"> I'd</font>

140
00:05:40,319 --> 00:05:44,220
like<font color="#E5E5E5"> to talk about is</font><font color="#CCCCCC"> BX heaven so VX</font>

141
00:05:42,960 --> 00:05:46,818
heaven has about an order of magnitude

142
00:05:44,220 --> 00:05:52,110
more samples than<font color="#CCCCCC"> Kaggle actually had on</font>

143
00:05:46,819 --> 00:05:55,979
each file in VX heaven is actually named

144
00:05:52,110 --> 00:05:58,020
with Kaspersky antivirus labels so for

145
00:05:55,979 --> 00:05:59,580
example if kaspersky labeled it a trojan

146
00:05:58,020 --> 00:06:01,500
or something like that then<font color="#E5E5E5"> it'll have</font>

147
00:05:59,580 --> 00:06:04,139
children and the hash and stuff like

148
00:06:01,500 --> 00:06:05,880
that in the file name and it's really

149
00:06:04,139 --> 00:06:09,389
<font color="#E5E5E5">nice because it's</font><font color="#CCCCCC"> really well organized</font>

150
00:06:05,880 --> 00:06:11,699
but<font color="#E5E5E5"> it was last updated in 2007 which if</font>

151
00:06:09,389 --> 00:06:14,180
you know malware things have<font color="#CCCCCC"> changed a</font>

152
00:06:11,699 --> 00:06:17,340
<font color="#E5E5E5">little bit since XP was still alive and</font>

153
00:06:14,180 --> 00:06:19,050
yeah so it's pretty stale<font color="#E5E5E5"> um but it is</font>

154
00:06:17,340 --> 00:06:22,320
the most<font color="#E5E5E5"> used academic data set so it's</font>

155
00:06:19,050 --> 00:06:25,680
nice to<font color="#E5E5E5"> know about what we'll be talking</font>

156
00:06:22,320 --> 00:06:27,090
about today is buyer share on it has<font color="#CCCCCC"> i</font>

157
00:06:25,680 --> 00:06:29,009
<font color="#CCCCCC">think it's increased in size actually</font>

158
00:06:27,090 --> 00:06:31,318
<font color="#E5E5E5">since i made this slide but it has about</font>

159
00:06:29,009 --> 00:06:34,380
25 million samples which is quite a bit

160
00:06:31,319 --> 00:06:35,699
um it's split into chunks<font color="#E5E5E5"> and this is</font>

161
00:06:34,380 --> 00:06:37,889
<font color="#CCCCCC">actually kind of important i'll get back</font>

162
00:06:35,699 --> 00:06:41,310
to this in a minute but it split into

163
00:06:37,889 --> 00:06:44,550
chunks of<font color="#CCCCCC"> 65,536 samples each so</font>

164
00:06:41,310 --> 00:06:46,680
basically trunk<font color="#E5E5E5"> 0 has the first</font><font color="#CCCCCC"> 65536</font>

165
00:06:44,550 --> 00:06:50,330
files that this guy found then chunk<font color="#CCCCCC"> 1</font>

166
00:06:46,680 --> 00:06:52,199
has the next<font color="#CCCCCC"> 65,536 files etc etc etc</font>

167
00:06:50,330 --> 00:06:54,419
this actually ends up being pretty

168
00:06:52,199 --> 00:06:57,569
useful but we'll talk about that<font color="#E5E5E5"> in a</font>

169
00:06:54,419 --> 00:06:59,490
minute um all the malware is available

170
00:06:57,569 --> 00:07:02,099
by torrent it's a<font color="#E5E5E5"> simple password to get</font>

171
00:06:59,490 --> 00:07:03,719
into on<font color="#CCCCCC"> the guy's awesome you know he</font>

172
00:07:02,099 --> 00:07:07,409
didn't pay me anything to give this talk

173
00:07:03,719 --> 00:07:08,100
but um I like him a lot and the main

174
00:07:07,409 --> 00:07:10,170
issue with the

175
00:07:08,100 --> 00:07:12,420
<font color="#E5E5E5">data set though is that it was unlabeled</font>

176
00:07:10,170 --> 00:07:14,760
so as the last talked talked about

177
00:07:12,420 --> 00:07:16,290
ground truth is really really important

178
00:07:14,760 --> 00:07:17,909
when<font color="#E5E5E5"> you're doing machine learning but</font>

179
00:07:16,290 --> 00:07:20,550
it's also the most<font color="#E5E5E5"> expensive part of it</font>

180
00:07:17,910 --> 00:07:23,070
it's really really hard to do and so

181
00:07:20,550 --> 00:07:26,280
what we've actually done today is label

182
00:07:23,070 --> 00:07:27,810
<font color="#E5E5E5">this corpus and then I also want to</font>

183
00:07:26,280 --> 00:07:29,489
shout<font color="#CCCCCC"> out to virustotal and mal tree</font>

184
00:07:27,810 --> 00:07:34,440
which both have methods for collecting

185
00:07:29,490 --> 00:07:35,970
malware as well um they you know there's

186
00:07:34,440 --> 00:07:37,830
no limit to<font color="#CCCCCC"> how many pieces of malware</font>

187
00:07:35,970 --> 00:07:39,330
that you can grab from them there's a

188
00:07:37,830 --> 00:07:42,450
couple<font color="#E5E5E5"> issues with both</font><font color="#CCCCCC"> of those um</font>

189
00:07:39,330 --> 00:07:44,760
first virustotal generally you need the

190
00:07:42,450 --> 00:07:47,430
private api in order to do useful things

191
00:07:44,760 --> 00:07:50,849
with it<font color="#CCCCCC"> um such as you know download</font>

192
00:07:47,430 --> 00:07:52,710
<font color="#E5E5E5">malware and there's there's a lot of a</font>

193
00:07:50,850 --> 00:07:55,020
it's really really<font color="#E5E5E5"> freaking expensive</font>

194
00:07:52,710 --> 00:07:56,280
but be there are these licensing issues

195
00:07:55,020 --> 00:07:58,020
where you're<font color="#E5E5E5"> not actually allowed to</font>

196
00:07:56,280 --> 00:08:00,630
release raw data that you obtained<font color="#E5E5E5"> from</font>

197
00:07:58,020 --> 00:08:02,849
the<font color="#CCCCCC"> platform and my research is into</font>

198
00:08:00,630 --> 00:08:04,590
like reproducibility of MLL you know

199
00:08:02,850 --> 00:08:06,570
experiments and things like that so<font color="#CCCCCC"> it'd</font>

200
00:08:04,590 --> 00:08:08,669
be<font color="#E5E5E5"> nice to have an open data set</font><font color="#CCCCCC"> that we</font>

201
00:08:06,570 --> 00:08:10,290
can work with<font color="#CCCCCC"> that bench you know we can</font>

202
00:08:08,670 --> 00:08:13,050
benchmark all our machine learning tools

203
00:08:10,290 --> 00:08:15,660
on and stuff like that so<font color="#CCCCCC"> virustotal</font>

204
00:08:13,050 --> 00:08:17,940
ends up<font color="#CCCCCC"> I think probably being the wrong</font>

205
00:08:15,660 --> 00:08:20,340
way to go in terms of actually obtaining

206
00:08:17,940 --> 00:08:21,600
your data set it is still<font color="#E5E5E5"> really nice</font>

207
00:08:20,340 --> 00:08:23,940
for their labeling and things like that

208
00:08:21,600 --> 00:08:27,210
<font color="#E5E5E5">and if the licensing issues you know</font>

209
00:08:23,940 --> 00:08:29,580
change<font color="#CCCCCC"> obviously and then maltreat as</font>

210
00:08:27,210 --> 00:08:31,140
well basically there's this crawler that

211
00:08:29,580 --> 00:08:33,179
<font color="#CCCCCC">goes around downloads all the malware</font>

212
00:08:31,140 --> 00:08:35,370
you want um but<font color="#E5E5E5"> what I've found in my</font>

213
00:08:33,179 --> 00:08:36,929
own research is<font color="#CCCCCC"> that when people collect</font>

214
00:08:35,370 --> 00:08:39,210
their own data sets in that sort of

215
00:08:36,929 --> 00:08:43,140
fashion they end up overfitting pretty

216
00:08:39,210 --> 00:08:45,330
bad um there's a<font color="#E5E5E5"> study in 2012 from that</font>

217
00:08:43,140 --> 00:08:49,350
actually<font color="#E5E5E5"> went to black hat that Adobe</font>

218
00:08:45,330 --> 00:08:50,580
made and basically they said hey we have

219
00:08:49,350 --> 00:08:52,200
these<font color="#CCCCCC"> nine features we can classify</font>

220
00:08:50,580 --> 00:08:54,330
malware with them with<font color="#CCCCCC"> ninety-eight</font>

221
00:08:52,200 --> 00:08:57,990
<font color="#CCCCCC">percent accuracy and it turned out that</font>

222
00:08:54,330 --> 00:09:01,020
it was<font color="#E5E5E5"> just over fitting to</font><font color="#CCCCCC"> Microsoft</font>

223
00:08:57,990 --> 00:09:02,580
specific coding standards so anything

224
00:09:01,020 --> 00:09:04,949
that wasn't written by Microsoft ended

225
00:09:02,580 --> 00:09:06,750
up being labeled as malware on these are

226
00:09:04,950 --> 00:09:10,980
things we want to<font color="#E5E5E5"> avoid and this is how</font>

227
00:09:06,750 --> 00:09:13,500
we do it so some of the features<font color="#E5E5E5"> that</font>

228
00:09:10,980 --> 00:09:15,960
are commonly used<font color="#E5E5E5"> in</font><font color="#CCCCCC"> this domain on</font>

229
00:09:13,500 --> 00:09:19,200
there's p file metadata which is

230
00:09:15,960 --> 00:09:21,480
basically things inside your executable

231
00:09:19,200 --> 00:09:24,209
that<font color="#E5E5E5"> tell windows hey this is how you</font>

232
00:09:21,480 --> 00:09:26,070
this executable this is how it should

233
00:09:24,209 --> 00:09:29,130
actually you know be interpreted by the

234
00:09:26,070 --> 00:09:31,019
<font color="#E5E5E5">machine and I'm</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to get too</font>

235
00:09:29,130 --> 00:09:33,510
deep into it but there are headers and

236
00:09:31,019 --> 00:09:35,220
sections and people use these to grab

237
00:09:33,510 --> 00:09:38,550
features from<font color="#CCCCCC"> theirs you know it's rich</font>

238
00:09:35,220 --> 00:09:41,160
with data and there's a<font color="#E5E5E5"> very good python</font>

239
00:09:38,550 --> 00:09:43,439
file sorry python library called<font color="#E5E5E5"> pd file</font>

240
00:09:41,160 --> 00:09:47,100
which<font color="#CCCCCC"> is excellent for actually scraping</font>

241
00:09:43,440 --> 00:09:48,959
all this from your executables another

242
00:09:47,100 --> 00:09:51,930
feature that's really commonly used in

243
00:09:48,959 --> 00:09:53,550
<font color="#E5E5E5">this domain arendt grams so</font><font color="#CCCCCC"> m grams are</font>

244
00:09:51,930 --> 00:09:55,709
just if you think<font color="#CCCCCC"> about like a sliding</font>

245
00:09:53,550 --> 00:09:59,550
window over text on every<font color="#CCCCCC"> two byte</font>

246
00:09:55,709 --> 00:10:01,380
sequence in the executable um you just

247
00:09:59,550 --> 00:10:05,069
<font color="#E5E5E5">count those up and use that as features</font>

248
00:10:01,380 --> 00:10:09,360
so for example in deadbeef d EAD a DBE

249
00:10:05,070 --> 00:10:10,889
and BEF are all to<font color="#CCCCCC"> buy 10 grams and so</font>

250
00:10:09,360 --> 00:10:13,949
your features would be those three

251
00:10:10,889 --> 00:10:15,600
engrams with a count of one each um this

252
00:10:13,949 --> 00:10:17,370
is actually mainly what was used during

253
00:10:15,600 --> 00:10:18,899
the cattle competition since they had

254
00:10:17,370 --> 00:10:29,850
stripped all the useful information out

255
00:10:18,899 --> 00:10:32,190
of the files<font color="#CCCCCC"> I did uh no</font><font color="#E5E5E5"> brown</font><font color="#CCCCCC"> eminem's</font>

256
00:10:29,850 --> 00:10:35,490
no green eminem's no<font color="#E5E5E5"> greener okay</font>

257
00:10:32,190 --> 00:10:42,720
alright whatever thank you so<font color="#E5E5E5"> much all</font>

258
00:10:35,490 --> 00:10:45,149
<font color="#E5E5E5">right cool awesome um so some other</font>

259
00:10:42,720 --> 00:10:47,100
<font color="#CCCCCC">features that</font><font color="#E5E5E5"> are commonly used opcodes</font>

260
00:10:45,149 --> 00:10:49,019
imports you know assembly instructions

261
00:10:47,100 --> 00:10:50,279
things like that people are just<font color="#E5E5E5"> trying</font>

262
00:10:49,019 --> 00:10:52,829
to find data everywhere in these

263
00:10:50,279 --> 00:10:54,930
executables if you'd like to learn more

264
00:10:52,829 --> 00:10:58,560
you know there's a lot<font color="#CCCCCC"> of references</font>

265
00:10:54,930 --> 00:11:00,149
come talk to me after<font color="#E5E5E5"> the talk and then</font>

266
00:10:58,560 --> 00:11:02,849
finally<font color="#CCCCCC"> some of the</font><font color="#E5E5E5"> top performing</font>

267
00:11:00,149 --> 00:11:04,410
models in this domain support vector

268
00:11:02,850 --> 00:11:06,720
machines are kind of old school at this

269
00:11:04,410 --> 00:11:08,910
point but a lot of people<font color="#E5E5E5"> like to use</font>

270
00:11:06,720 --> 00:11:11,120
them they're robust against overfitting

271
00:11:08,910 --> 00:11:13,529
in certain ways and<font color="#E5E5E5"> they're nice um</font>

272
00:11:11,120 --> 00:11:15,510
there's this new thing called XG boost

273
00:11:13,529 --> 00:11:18,720
extreme gradient decision tree boosting

274
00:11:15,510 --> 00:11:20,399
on it pretty much kills everything if

275
00:11:18,720 --> 00:11:23,220
you know random<font color="#CCCCCC"> forests their decision</font>

276
00:11:20,399 --> 00:11:26,699
trees think of XG boost as a random

277
00:11:23,220 --> 00:11:29,430
<font color="#E5E5E5">forest on super super steroids um and</font>

278
00:11:26,699 --> 00:11:31,319
then<font color="#E5E5E5"> finally deep learning is a cool hot</font>

279
00:11:29,430 --> 00:11:33,660
topic that people are starting to use<font color="#E5E5E5"> in</font>

280
00:11:31,319 --> 00:11:35,219
<font color="#E5E5E5">this domain to there are libraries in</font>

281
00:11:33,660 --> 00:11:41,490
Python for all of these I can't

282
00:11:35,220 --> 00:11:43,230
for<font color="#E5E5E5"> weka are all right so let's talk</font>

283
00:11:41,490 --> 00:11:45,899
about labeling the virus share corpus

284
00:11:43,230 --> 00:11:48,120
and what<font color="#CCCCCC"> n went into this um so my</font>

285
00:11:45,899 --> 00:11:50,819
motivation was there's this<font color="#CCCCCC"> capital</font>

286
00:11:48,120 --> 00:11:53,100
competition and I'm try if<font color="#CCCCCC"> the models in</font>

287
00:11:50,819 --> 00:11:54,959
this capital competition<font color="#CCCCCC"> over fit and so</font>

288
00:11:53,100 --> 00:11:57,720
what I need<font color="#CCCCCC"> to do is I need to find in</font>

289
00:11:54,959 --> 00:12:00,000
some disparate data set a lot more of

290
00:11:57,720 --> 00:12:02,339
the families that were in the cattle

291
00:12:00,000 --> 00:12:04,980
competition so<font color="#E5E5E5"> we have like things like</font>

292
00:12:02,339 --> 00:12:06,629
this label remnant we want to be able to

293
00:12:04,980 --> 00:12:08,279
<font color="#E5E5E5">find lots more examples of remnant</font>

294
00:12:06,629 --> 00:12:09,600
somewhere else so that<font color="#CCCCCC"> we can run the</font>

295
00:12:08,279 --> 00:12:12,240
models that were built<font color="#E5E5E5"> in the cago</font>

296
00:12:09,600 --> 00:12:15,660
competition on these other other

297
00:12:12,240 --> 00:12:18,089
executables that we find and so what

298
00:12:15,660 --> 00:12:20,310
we've done well first we labeled<font color="#E5E5E5"> this</font>

299
00:12:18,089 --> 00:12:22,800
huge corpus using virustotal so that we

300
00:12:20,310 --> 00:12:24,779
can actually you know use it for

301
00:12:22,800 --> 00:12:26,160
supervised learning things like that but

302
00:12:24,779 --> 00:12:28,620
also so that we can create a search

303
00:12:26,160 --> 00:12:30,839
index on top of<font color="#E5E5E5"> it so</font><font color="#CCCCCC"> that we can find</font>

304
00:12:28,620 --> 00:12:33,300
lots of a particular<font color="#E5E5E5"> type of malware and</font>

305
00:12:30,839 --> 00:12:34,680
this could actually be useful for not

306
00:12:33,300 --> 00:12:36,420
only machine learning but I think it

307
00:12:34,680 --> 00:12:38,579
<font color="#E5E5E5">might be useful for pen testing and</font>

308
00:12:36,420 --> 00:12:40,529
reverse engineering practice as<font color="#CCCCCC"> well so</font>

309
00:12:38,579 --> 00:12:44,040
that's<font color="#E5E5E5"> one of</font><font color="#CCCCCC"> the reasons what I'd like</font>

310
00:12:40,529 --> 00:12:46,379
<font color="#E5E5E5">to talk to you guys after the talk so</font>

311
00:12:44,040 --> 00:12:47,790
why did I choose virus share instead<font color="#E5E5E5"> of</font>

312
00:12:46,379 --> 00:12:49,290
one<font color="#CCCCCC"> of the upper you know corpora that's</font>

313
00:12:47,790 --> 00:12:51,689
out there from<font color="#E5E5E5"> our well first off</font>

314
00:12:49,290 --> 00:12:54,660
<font color="#CCCCCC">obviously the size it's huge 27 million</font>

315
00:12:51,689 --> 00:12:56,160
samples that's you<font color="#CCCCCC"> know several several</font>

316
00:12:54,660 --> 00:12:58,559
orders of magnitude bigger than the

317
00:12:56,160 --> 00:13:00,480
<font color="#CCCCCC">cattle</font><font color="#E5E5E5"> dataset size and furthermore it's</font>

318
00:12:58,559 --> 00:13:03,180
just the raw executables so it's not

319
00:13:00,480 --> 00:13:06,180
neutered at all um it's consistently

320
00:13:03,180 --> 00:13:08,399
updated as<font color="#E5E5E5"> I've said like there's 20</font>

321
00:13:06,180 --> 00:13:10,559
more chunks since I actually started

322
00:13:08,399 --> 00:13:15,209
putting these slides together of virus

323
00:13:10,559 --> 00:13:17,730
or malware that um<font color="#E5E5E5"> are already up there</font>

324
00:13:15,209 --> 00:13:22,109
so we can we can<font color="#E5E5E5"> you know consistently</font>

325
00:13:17,730 --> 00:13:24,360
update on the data set but really what I

326
00:13:22,110 --> 00:13:25,649
want to do here<font color="#CCCCCC"> is make future machine</font>

327
00:13:24,360 --> 00:13:27,809
learning<font color="#CCCCCC"> research more reproducible</font>

328
00:13:25,649 --> 00:13:29,430
right so I<font color="#E5E5E5"> already talked about if you</font>

329
00:13:27,809 --> 00:13:30,569
scrape your own you'll probably over fit

330
00:13:29,430 --> 00:13:32,579
and you'll<font color="#E5E5E5"> end up with one</font><font color="#CCCCCC"> of those</font>

331
00:13:30,569 --> 00:13:36,389
<font color="#E5E5E5">Titanic level disasters that was in the</font>

332
00:13:32,579 --> 00:13:37,739
keynote but<font color="#CCCCCC"> uh virustotal you can't</font>

333
00:13:36,389 --> 00:13:41,100
release any raw data from the platform

334
00:13:37,740 --> 00:13:42,750
<font color="#E5E5E5">and that as a data science paper writer</font>

335
00:13:41,100 --> 00:13:44,790
that sucks<font color="#CCCCCC"> for me because</font><font color="#E5E5E5"> I normally</font>

336
00:13:42,750 --> 00:13:47,309
have<font color="#E5E5E5"> a methodology section in my papers</font>

337
00:13:44,790 --> 00:13:48,150
and I need to say like where i got my

338
00:13:47,309 --> 00:13:50,250
data from

339
00:13:48,150 --> 00:13:52,470
and it's really<font color="#CCCCCC"> hard</font><font color="#E5E5E5"> to actually like</font>

340
00:13:50,250 --> 00:13:54,480
download a data set from another you

341
00:13:52,470 --> 00:13:56,040
know academic paper or industry paper

342
00:13:54,480 --> 00:13:58,410
for machine learning because it's all

343
00:13:56,040 --> 00:14:00,270
secret sauce um this is actually<font color="#CCCCCC"> really</font>

344
00:13:58,410 --> 00:14:02,130
nice because since fire share is split

345
00:14:00,270 --> 00:14:04,079
into chunks I can<font color="#E5E5E5"> just say look I</font>

346
00:14:02,130 --> 00:14:06,960
downloaded all the RAM nerd executables

347
00:14:04,080 --> 00:14:08,340
from chunks 25 60 and 90 and that was

348
00:14:06,960 --> 00:14:10,170
<font color="#E5E5E5">the data set I used for my machine</font>

349
00:14:08,340 --> 00:14:12,090
learning corpus here and so it's really

350
00:14:10,170 --> 00:14:13,170
really easy to actually reproduce the

351
00:14:12,090 --> 00:14:16,170
machine learning models that other

352
00:14:13,170 --> 00:14:19,380
people make and it eliminates a lot of

353
00:14:16,170 --> 00:14:20,910
the likes to<font color="#E5E5E5"> cast stochasticity that's</font>

354
00:14:19,380 --> 00:14:24,630
just inherit in the machine learning

355
00:14:20,910 --> 00:14:26,550
process<font color="#E5E5E5"> and so if we actually like start</font>

356
00:14:24,630 --> 00:14:28,140
to you know reproduce machine learning

357
00:14:26,550 --> 00:14:30,240
research we can actually<font color="#E5E5E5"> figure out hey</font>

358
00:14:28,140 --> 00:14:31,890
<font color="#CCCCCC">you know this machine learning model</font>

359
00:14:30,240 --> 00:14:33,750
works or this machine learning model

360
00:14:31,890 --> 00:14:38,069
doesn't work in this you know other

361
00:14:33,750 --> 00:14:39,690
domain that<font color="#E5E5E5"> I tried right so we chose</font>

362
00:14:38,070 --> 00:14:42,150
virustotal to label the executables

363
00:14:39,690 --> 00:14:44,370
right<font color="#CCCCCC"> um obviously</font><font color="#E5E5E5"> because virustotal is</font>

364
00:14:42,150 --> 00:14:46,949
one of the you<font color="#CCCCCC"> know the leading vendor</font>

365
00:14:44,370 --> 00:14:48,570
in the space but also<font color="#E5E5E5"> it has an awesome</font>

366
00:14:46,950 --> 00:14:50,070
<font color="#CCCCCC">API so we can just do this</font>

367
00:14:48,570 --> 00:14:51,990
programmatically we don't need to pay

368
00:14:50,070 --> 00:14:53,730
lots<font color="#E5E5E5"> of malware analysts to you know go</font>

369
00:14:51,990 --> 00:14:55,680
through everything little executable in

370
00:14:53,730 --> 00:14:57,510
the virus<font color="#E5E5E5"> share corpus and say hey I</font>

371
00:14:55,680 --> 00:14:59,339
<font color="#E5E5E5">think this is Vin de or I think</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

372
00:14:57,510 --> 00:15:00,990
ram<font color="#E5E5E5"> knit or I think</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> conficker or</font>

373
00:14:59,340 --> 00:15:04,860
some variant of ransomware that we don't

374
00:15:00,990 --> 00:15:07,290
know about or whatever um so virustotal

375
00:15:04,860 --> 00:15:09,870
has two<font color="#CCCCCC"> different types</font><font color="#E5E5E5"> of api's it has</font>

376
00:15:07,290 --> 00:15:12,360
a private<font color="#E5E5E5"> and research api and a public</font>

377
00:15:09,870 --> 00:15:14,580
<font color="#E5E5E5">api and the difference is that the</font>

378
00:15:12,360 --> 00:15:16,560
public<font color="#CCCCCC"> api is rate limited but the</font>

379
00:15:14,580 --> 00:15:19,440
private research api either<font color="#CCCCCC"> costs money</font>

380
00:15:16,560 --> 00:15:20,819
or has these licensing agreements where

381
00:15:19,440 --> 00:15:24,210
you can't release raw data from the

382
00:15:20,820 --> 00:15:26,190
<font color="#CCCCCC">platform and so if if we labeled using</font>

383
00:15:24,210 --> 00:15:27,930
the private api then we couldn't

384
00:15:26,190 --> 00:15:29,580
actually distribute our results you know

385
00:15:27,930 --> 00:15:32,310
to<font color="#E5E5E5"> the public and other people actually</font>

386
00:15:29,580 --> 00:15:35,790
use them<font color="#E5E5E5"> right so we ended up</font><font color="#CCCCCC"> using the</font>

387
00:15:32,310 --> 00:15:38,689
the public<font color="#CCCCCC"> api and</font><font color="#E5E5E5"> actually this is all</font>

388
00:15:35,790 --> 00:15:41,339
the code to take in a batch of

389
00:15:38,690 --> 00:15:46,050
executables and label it using the virus

390
00:15:41,340 --> 00:15:47,970
total<font color="#CCCCCC"> api</font><font color="#E5E5E5"> okay cool and so this is</font>

391
00:15:46,050 --> 00:15:50,880
actually<font color="#E5E5E5"> what you get back right and so</font>

392
00:15:47,970 --> 00:15:53,370
I've<font color="#CCCCCC"> just formatted it prettily this is</font>

393
00:15:50,880 --> 00:15:55,650
just one line of JSON but you basically

394
00:15:53,370 --> 00:15:58,530
get back each different antivirus and

395
00:15:55,650 --> 00:16:00,780
what that anti virus detected the

396
00:15:58,530 --> 00:16:01,860
executable ass so these are basically

397
00:16:00,780 --> 00:16:03,630
going to<font color="#E5E5E5"> be the labels</font>

398
00:16:01,860 --> 00:16:07,980
we have<font color="#CCCCCC"> for ground truth with working</font>

399
00:16:03,630 --> 00:16:09,990
with this with this corpus and so

400
00:16:07,980 --> 00:16:11,880
generally antivirus labels are pretty

401
00:16:09,990 --> 00:16:15,690
inconsistent but this is definitely in a

402
00:16:11,880 --> 00:16:19,079
step from the right direction<font color="#CCCCCC"> all right</font>

403
00:16:15,690 --> 00:16:22,110
so<font color="#E5E5E5"> using the public public API it</font>

404
00:16:19,079 --> 00:16:24,260
actually<font color="#CCCCCC"> took</font><font color="#E5E5E5"> 30 people and around six</font>

405
00:16:22,110 --> 00:16:29,040
<font color="#E5E5E5">months to label the entire corpus</font>

406
00:16:24,260 --> 00:16:30,360
because of<font color="#E5E5E5"> rate limiting arm we used a</font>

407
00:16:29,040 --> 00:16:34,110
<font color="#E5E5E5">lot of undergraduates wanting extra</font>

408
00:16:30,360 --> 00:16:36,180
credit from UMBC which was nice also

409
00:16:34,110 --> 00:16:38,430
some people<font color="#CCCCCC"> from the ml</font><font color="#E5E5E5"> SEC project</font>

410
00:16:36,180 --> 00:16:39,959
actually helped out and beta tested the

411
00:16:38,430 --> 00:16:42,569
tools and stuff like that<font color="#E5E5E5"> so that was</font>

412
00:16:39,959 --> 00:16:46,130
really cool<font color="#E5E5E5"> too um this is actually all</font>

413
00:16:42,570 --> 00:16:48,060
the labels from chunk 0 2 233<font color="#E5E5E5"> I think</font>

414
00:16:46,130 --> 00:16:49,740
again there have<font color="#CCCCCC"> been more since then</font>

415
00:16:48,060 --> 00:16:53,119
I'll released as after Def Con when i

416
00:16:49,740 --> 00:16:55,709
actually get access to Wi-Fi again but

417
00:16:53,120 --> 00:16:57,930
basically it's I think it's seven gigs

418
00:16:55,709 --> 00:17:01,619
compressed of just those lines that you

419
00:16:57,930 --> 00:17:03,810
<font color="#E5E5E5">saw earlier um and it's you</font><font color="#CCCCCC"> know really</font>

420
00:17:01,620 --> 00:17:07,799
easy to look at<font color="#E5E5E5"> really easy to find</font>

421
00:17:03,810 --> 00:17:09,540
things but but what we<font color="#CCCCCC"> want right is we</font>

422
00:17:07,799 --> 00:17:12,780
want this tool that we<font color="#E5E5E5"> can go</font><font color="#CCCCCC"> through</font>

423
00:17:09,540 --> 00:17:15,359
and<font color="#E5E5E5"> say hey look um we want to find lots</font>

424
00:17:12,780 --> 00:17:18,030
of remnant instances right and what we

425
00:17:15,359 --> 00:17:21,359
have right<font color="#CCCCCC"> now is we have this thing</font>

426
00:17:18,030 --> 00:17:24,839
<font color="#CCCCCC">that says hey in trunk 0 we have you</font>

427
00:17:21,359 --> 00:17:27,208
know win32<font color="#E5E5E5"> HFS adware dot 166 or</font>

428
00:17:24,839 --> 00:17:29,970
whatever we got some pups things like

429
00:17:27,209 --> 00:17:31,290
<font color="#E5E5E5">that right um what we really want is</font>

430
00:17:29,970 --> 00:17:33,870
something that we can just<font color="#E5E5E5"> go through</font>

431
00:17:31,290 --> 00:17:35,610
and<font color="#E5E5E5"> say okay like we have this type of</font>

432
00:17:33,870 --> 00:17:38,760
label that we're looking for<font color="#E5E5E5"> how many</font>

433
00:17:35,610 --> 00:17:41,129
are<font color="#CCCCCC"> in each chunk and this actually</font>

434
00:17:38,760 --> 00:17:43,559
makes it<font color="#E5E5E5"> a lot easier to search over</font>

435
00:17:41,130 --> 00:17:45,750
this data set right um if we wanted you

436
00:17:43,559 --> 00:17:47,820
know only<font color="#E5E5E5"> find malware and chunks for 60</font>

437
00:17:45,750 --> 00:17:50,640
and 90 what we do is we just<font color="#E5E5E5"> say hey</font>

438
00:17:47,820 --> 00:17:54,439
like um grep through it and be<font color="#CCCCCC"> like</font>

439
00:17:50,640 --> 00:17:57,419
what's the<font color="#E5E5E5"> count in chunks for 60 and 90</font>

440
00:17:54,440 --> 00:17:59,070
so this<font color="#E5E5E5"> is called an inverted index and</font>

441
00:17:57,419 --> 00:18:01,080
the<font color="#CCCCCC"> way you do it is</font><font color="#E5E5E5"> basically by</font>

442
00:17:59,070 --> 00:18:02,970
counting things right and apparently

443
00:18:01,080 --> 00:18:06,240
I've heard the MapReduce framework is

444
00:18:02,970 --> 00:18:08,700
awesome for this um actually the PI

445
00:18:06,240 --> 00:18:10,320
spark initial tutorial is exactly this

446
00:18:08,700 --> 00:18:12,090
problem so it works out pretty well

447
00:18:10,320 --> 00:18:15,450
especially since I wanted<font color="#CCCCCC"> to learn pi</font>

448
00:18:12,090 --> 00:18:17,220
spark and this<font color="#E5E5E5"> ends up actually being</font>

449
00:18:15,450 --> 00:18:20,190
the entire script which is really<font color="#E5E5E5"> really</font>

450
00:18:17,220 --> 00:18:22,440
nice um so it's like<font color="#E5E5E5"> what 20 lines of</font>

451
00:18:20,190 --> 00:18:25,830
code everything else is just formatting

452
00:18:22,440 --> 00:18:28,019
and it's really<font color="#CCCCCC"> easy to you know like</font>

453
00:18:25,830 --> 00:18:30,570
learn and use and it's<font color="#E5E5E5"> actually more</font>

454
00:18:28,019 --> 00:18:33,980
work to install<font color="#E5E5E5"> pi spark than to</font>

455
00:18:30,570 --> 00:18:37,049
actually use it<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> pretty cool and</font>

456
00:18:33,980 --> 00:18:38,820
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is what the inverted index actually</font>

457
00:18:37,049 --> 00:18:42,360
looks like after we finished right so

458
00:18:38,820 --> 00:18:46,019
you can<font color="#E5E5E5"> sort of see um here's it's a CSP</font>

459
00:18:42,360 --> 00:18:50,158
with the label how many are<font color="#CCCCCC"> in 000001</font>

460
00:18:46,019 --> 00:18:52,440
etc and it ends up<font color="#CCCCCC"> being really easy to</font>

461
00:18:50,159 --> 00:18:54,210
use<font color="#E5E5E5"> you can just grep for</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> window you</font>

462
00:18:52,440 --> 00:18:56,700
get all the results<font color="#CCCCCC"> for vindo this is</font>

463
00:18:54,210 --> 00:18:58,799
how<font color="#E5E5E5"> many in each you</font><font color="#CCCCCC"> know chunk and you</font>

464
00:18:56,700 --> 00:19:01,049
can even<font color="#E5E5E5"> see by inspection look those</font>

465
00:18:58,799 --> 00:19:02,490
<font color="#CCCCCC">chumps have a lot of window we should if</font>

466
00:19:01,049 --> 00:19:08,070
we want mundo we should download those

467
00:19:02,490 --> 00:19:10,409
chunks<font color="#E5E5E5"> right and then it also this index</font>

468
00:19:08,070 --> 00:19:13,168
also lets<font color="#E5E5E5"> us easily explore this data um</font>

469
00:19:10,409 --> 00:19:16,320
so I really quick in like two minutes

470
00:19:13,169 --> 00:19:19,159
<font color="#E5E5E5">threw up um basically most frequent</font>

471
00:19:16,320 --> 00:19:21,779
malware in the last recent chunks and

472
00:19:19,159 --> 00:19:23,909
yeah you<font color="#E5E5E5"> can see that</font><font color="#CCCCCC"> there's about</font><font color="#E5E5E5"> like</font>

473
00:19:21,779 --> 00:19:26,840
a thousand of risk where adware

474
00:19:23,909 --> 00:19:29,429
<font color="#E5E5E5">screensaver you know win32</font><font color="#CCCCCC"> Eldorado's um</font>

475
00:19:26,840 --> 00:19:33,330
you can find<font color="#E5E5E5"> that out in like less than</font>

476
00:19:29,429 --> 00:19:34,799
two minutes which is<font color="#E5E5E5"> pretty nice and you</font>

477
00:19:33,330 --> 00:19:38,039
can also make a lot of<font color="#E5E5E5"> pretty graphs</font>

478
00:19:34,799 --> 00:19:40,080
which is nice too um so this<font color="#E5E5E5"> is one of</font>

479
00:19:38,039 --> 00:19:42,269
<font color="#E5E5E5">the cool things with virus share is he</font>

480
00:19:40,080 --> 00:19:44,279
actually posts each chunk temporarily

481
00:19:42,269 --> 00:19:46,289
right so he posts chunk<font color="#E5E5E5"> zero first chunk</font>

482
00:19:44,279 --> 00:19:49,649
1 second chunk third you know third etc

483
00:19:46,289 --> 00:19:52,350
um so this means we can<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> use the</font>

484
00:19:49,649 --> 00:19:54,629
chunk number as a proxy<font color="#CCCCCC"> for time and we</font>

485
00:19:52,350 --> 00:19:58,250
can see<font color="#E5E5E5"> how</font><font color="#CCCCCC"> many you know instances of</font>

486
00:19:54,630 --> 00:20:03,210
mundo this guy collected um you<font color="#E5E5E5"> know in</font>

487
00:19:58,250 --> 00:20:05,220
kind of overtime and so<font color="#E5E5E5"> this is um this</font>

488
00:20:03,210 --> 00:20:08,010
is just<font color="#E5E5E5"> a graph again made in like less</font>

489
00:20:05,220 --> 00:20:10,710
than two minutes of how<font color="#CCCCCC"> many instances</font>

490
00:20:08,010 --> 00:20:12,389
of 132 mundo this guy collected and you

491
00:20:10,710 --> 00:20:15,210
can see like there's<font color="#E5E5E5"> a spike there and</font>

492
00:20:12,389 --> 00:20:16,889
there's a you know dip here um there's a

493
00:20:15,210 --> 00:20:20,760
lot of assumptions about this sort of

494
00:20:16,889 --> 00:20:23,879
temporal of you know plotting right like

495
00:20:20,760 --> 00:20:27,330
for example a that the chunks are you

496
00:20:23,879 --> 00:20:28,350
know um sort<font color="#E5E5E5"> of a good proxy for the</font>

497
00:20:27,330 --> 00:20:30,330
time period but be

498
00:20:28,350 --> 00:20:33,840
that the number of instances this guy

499
00:20:30,330 --> 00:20:35,460
collected is actually like proportional

500
00:20:33,840 --> 00:20:39,720
to how<font color="#CCCCCC"> many are floating around or</font>

501
00:20:35,460 --> 00:20:42,240
something<font color="#CCCCCC"> like that um but it's it's</font>

502
00:20:39,720 --> 00:20:43,710
definitely like as long as you're aware

503
00:20:42,240 --> 00:20:48,630
of those assumptions and things like

504
00:20:43,710 --> 00:20:50,100
that um it's useful and we'll talk about

505
00:20:48,630 --> 00:20:54,860
you know maybe how to fix those<font color="#E5E5E5"> things</font>

506
00:20:50,100 --> 00:20:57,840
in a second um so some words<font color="#E5E5E5"> of warning</font>

507
00:20:54,860 --> 00:21:00,240
first off don't use this to compare anti

508
00:20:57,840 --> 00:21:02,129
viruses um so that's one thing that<font color="#CCCCCC"> I</font>

509
00:21:00,240 --> 00:21:03,870
definitely want to<font color="#E5E5E5"> say just</font><font color="#CCCCCC"> to try to</font>

510
00:21:02,130 --> 00:21:07,140
get fire stowed oh maybe off my back<font color="#CCCCCC"> for</font>

511
00:21:03,870 --> 00:21:09,449
this um so they have a big disclaimer on

512
00:21:07,140 --> 00:21:11,900
their site<font color="#CCCCCC"> and there's a couple reasons</font>

513
00:21:09,450 --> 00:21:14,640
that I thought of why this might be and

514
00:21:11,900 --> 00:21:16,380
I<font color="#CCCCCC"> think the main one is if you've ever</font>

515
00:21:14,640 --> 00:21:18,419
actually submitted data back to

516
00:21:16,380 --> 00:21:21,630
virustotal saying like this is malicious

517
00:21:18,419 --> 00:21:23,669
or this is<font color="#E5E5E5"> the file there the anti</font>

518
00:21:21,630 --> 00:21:27,330
viruses choose to do that different ways

519
00:21:23,669 --> 00:21:28,890
um one is you<font color="#CCCCCC"> can actually</font><font color="#E5E5E5"> basically</font>

520
00:21:27,330 --> 00:21:30,090
give your product to virustotal and say

521
00:21:28,890 --> 00:21:32,610
hey run it whenever you run into

522
00:21:30,090 --> 00:21:34,530
something<font color="#E5E5E5"> new but the main way that most</font>

523
00:21:32,610 --> 00:21:37,139
people use is if they encounter

524
00:21:34,530 --> 00:21:39,210
something in the wild they wild they

525
00:21:37,140 --> 00:21:41,909
send it back to virustotal with the

526
00:21:39,210 --> 00:21:44,880
correct label so this ends up actually

527
00:21:41,909 --> 00:21:47,549
meaning a lot of vendors run into sort

528
00:21:44,880 --> 00:21:50,280
of<font color="#CCCCCC"> different sections</font><font color="#E5E5E5"> of malware if that</font>

529
00:21:47,549 --> 00:21:51,990
makes sense and so for example at a

530
00:21:50,280 --> 00:21:53,820
social<font color="#CCCCCC"> media company you might find</font>

531
00:21:51,990 --> 00:21:56,010
links on social media<font color="#E5E5E5"> that you know</font>

532
00:21:53,820 --> 00:22:00,389
kaspersky might not or something like

533
00:21:56,010 --> 00:22:01,890
<font color="#CCCCCC">that um another thing that you</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to</font>

534
00:22:00,390 --> 00:22:04,559
keep in<font color="#CCCCCC"> mind when using this sort of</font>

535
00:22:01,890 --> 00:22:07,590
index or data on ground truth is very

536
00:22:04,559 --> 00:22:09,750
very noisy in this first off we've

537
00:22:07,590 --> 00:22:11,908
already seen that<font color="#CCCCCC"> the antivirus labels</font>

538
00:22:09,750 --> 00:22:13,409
are sometimes different even though<font color="#E5E5E5"> the</font>

539
00:22:11,909 --> 00:22:16,530
specimens are similar just<font color="#E5E5E5"> with</font><font color="#CCCCCC"> that</font>

540
00:22:13,409 --> 00:22:20,789
<font color="#E5E5E5">vindo index here right all of these are</font>

541
00:22:16,530 --> 00:22:23,639
<font color="#E5E5E5">part of the vindow family but um they</font>

542
00:22:20,789 --> 00:22:26,908
get labeled you know as<font color="#E5E5E5"> soon as the</font>

543
00:22:23,640 --> 00:22:29,700
signature for mundo de no longer works

544
00:22:26,909 --> 00:22:34,919
then they increment it and now mundo be

545
00:22:29,700 --> 00:22:38,390
<font color="#CCCCCC">on is you know a new specimen even</font>

546
00:22:34,919 --> 00:22:40,799
though it's a very<font color="#E5E5E5"> similar one but also</font>

547
00:22:38,390 --> 00:22:42,029
antivirus labels are sometimes similar

548
00:22:40,799 --> 00:22:44,099
even when the space

549
00:22:42,029 --> 00:22:46,529
<font color="#CCCCCC">mins are</font><font color="#E5E5E5"> different so like here's an</font>

550
00:22:44,099 --> 00:22:49,439
example of that right um here's a lot of

551
00:22:46,529 --> 00:22:51,659
different<font color="#CCCCCC"> Trojans and I have absolutely</font>

552
00:22:49,440 --> 00:22:54,479
no<font color="#CCCCCC"> idea whether those are actually</font>

553
00:22:51,659 --> 00:22:57,629
similar executables or not based on<font color="#E5E5E5"> the</font>

554
00:22:54,479 --> 00:23:00,869
name<font color="#E5E5E5"> right um so like heuristic that</font>

555
00:22:57,629 --> 00:23:02,849
looks like<font color="#E5E5E5"> chosen is I don't</font><font color="#CCCCCC"> know maybe</font>

556
00:23:00,869 --> 00:23:08,488
a Trojan is basically what that label is

557
00:23:02,849 --> 00:23:12,989
telling you right so so some useful

558
00:23:08,489 --> 00:23:16,409
extensions here um one thing is remember

559
00:23:12,989 --> 00:23:20,070
that graph where we use the chunk number

560
00:23:16,409 --> 00:23:21,779
as a proxy<font color="#CCCCCC"> for time um if if we wanted</font>

561
00:23:20,070 --> 00:23:23,279
to do<font color="#CCCCCC"> that right what we want to do is</font>

562
00:23:21,779 --> 00:23:25,739
add when the specimen was first seen

563
00:23:23,279 --> 00:23:29,190
rather than you know<font color="#CCCCCC"> just how many of</font>

564
00:23:25,739 --> 00:23:31,349
this guy collected over time and that's

565
00:23:29,190 --> 00:23:33,929
only available on the private research

566
00:23:31,349 --> 00:23:37,349
API so it wouldn't<font color="#E5E5E5"> be able to release to</font>

567
00:23:33,929 --> 00:23:40,349
the public if we did that um so

568
00:23:37,349 --> 00:23:44,519
<font color="#E5E5E5">definitely maybe find a way to do this</font>

569
00:23:40,349 --> 00:23:46,049
that might be nice but a the other major

570
00:23:44,519 --> 00:23:48,509
useful extension that<font color="#E5E5E5"> I can see from</font>

571
00:23:46,049 --> 00:23:50,999
this is some sort<font color="#CCCCCC"> of stemming so</font>

572
00:23:48,509 --> 00:23:53,070
stemming and limit ization in machine

573
00:23:50,999 --> 00:23:56,700
learning is basically<font color="#CCCCCC"> like a way of</font>

574
00:23:53,070 --> 00:23:59,519
compressing on words that have similar

575
00:23:56,700 --> 00:24:03,059
routes together right so that you know

576
00:23:59,519 --> 00:24:05,159
generic mundo de and generic mundo be

577
00:24:03,059 --> 00:24:08,219
we'd like them to both be called one

578
00:24:05,159 --> 00:24:10,559
label mundo arm but that<font color="#E5E5E5"> actually ends</font>

579
00:24:08,219 --> 00:24:13,369
up having some issues especially when

580
00:24:10,559 --> 00:24:17,849
you have things like you<font color="#E5E5E5"> know trojan</font>

581
00:24:13,369 --> 00:24:20,129
<font color="#E5E5E5">abcdefg and</font><font color="#CCCCCC"> charge and abcdefg you know</font>

582
00:24:17,849 --> 00:24:21,989
<font color="#CCCCCC">H or something like that it ends up</font>

583
00:24:20,129 --> 00:24:24,689
actually being compressed on the the

584
00:24:21,989 --> 00:24:29,129
actual incremented counter which is kind

585
00:24:24,690 --> 00:24:31,529
of funny<font color="#E5E5E5"> um but if we could somehow</font>

586
00:24:29,129 --> 00:24:33,418
compress those labels that might help

587
00:24:31,529 --> 00:24:35,249
with the antivirus labels being

588
00:24:33,419 --> 00:24:38,279
different even the specimens are similar

589
00:24:35,249 --> 00:24:41,599
problem on which which would be really

590
00:24:38,279 --> 00:24:43,619
<font color="#E5E5E5">really nice um and then finally</font>

591
00:24:41,599 --> 00:24:46,408
antivirus labeling is is very

592
00:24:43,619 --> 00:24:48,389
inconsistent so this would actually help

593
00:24:46,409 --> 00:24:53,039
us get higher granularity on our ground

594
00:24:48,389 --> 00:24:55,709
truth labels um so I know I blaze do

595
00:24:53,039 --> 00:25:01,110
that but<font color="#CCCCCC"> if there are</font><font color="#E5E5E5"> any questions</font>

596
00:24:55,710 --> 00:25:05,070
feel free<font color="#E5E5E5"> to step up to the mic change</font>

597
00:25:01,110 --> 00:25:07,168
the CBE models so<font color="#E5E5E5"> I have not yet that</font>

598
00:25:05,070 --> 00:25:15,600
would definitely be a cool extension on

599
00:25:07,169 --> 00:25:18,059
I would love<font color="#CCCCCC"> to do that what yeah um but</font>

600
00:25:15,600 --> 00:25:22,408
yeah like<font color="#E5E5E5"> I would definitely definitely</font>

601
00:25:18,059 --> 00:25:30,980
like to look<font color="#E5E5E5"> into</font><font color="#CCCCCC"> that too any other</font>

602
00:25:22,409 --> 00:25:34,289
questions so with the names did you

603
00:25:30,980 --> 00:25:38,190
<font color="#E5E5E5">consider Kaz splitting the names of the</font>

604
00:25:34,289 --> 00:25:40,649
brakes and analyzing that way since most

605
00:25:38,190 --> 00:25:43,440
of these are divided by either a period

606
00:25:40,649 --> 00:25:45,090
or<font color="#E5E5E5"> a slash or something so I wanted to</font>

607
00:25:43,440 --> 00:25:47,760
<font color="#E5E5E5">do that if you did like most of the ways</font>

608
00:25:45,090 --> 00:25:51,120
I've tried to split naively so far um

609
00:25:47,760 --> 00:25:52,919
I've run into issues where like there's

610
00:25:51,120 --> 00:25:55,799
all these exceptions that don't fit the

611
00:25:52,919 --> 00:25:57,570
mold kind of like you know the malware

612
00:25:55,799 --> 00:25:59,908
classification problem in general but

613
00:25:57,570 --> 00:26:01,559
and there's just<font color="#E5E5E5"> not enough time in</font><font color="#CCCCCC"> the</font>

614
00:25:59,909 --> 00:26:04,140
day to actually go through and fix all

615
00:26:01,559 --> 00:26:05,549
<font color="#E5E5E5">those exceptions um so I'm actually</font>

616
00:26:04,140 --> 00:26:07,399
<font color="#E5E5E5">looking for maybe some sort of</font>

617
00:26:05,549 --> 00:26:11,908
statistical technique that might help

618
00:26:07,399 --> 00:26:14,330
what a also so one of the things I've

619
00:26:11,909 --> 00:26:17,250
tried and maybe you've tried a better is

620
00:26:14,330 --> 00:26:20,120
looking at the multiple names for the

621
00:26:17,250 --> 00:26:22,890
same malware and building the

622
00:26:20,120 --> 00:26:26,879
relationship graph between the names and

623
00:26:22,890 --> 00:26:29,010
then trying<font color="#E5E5E5"> to kind of get clusters of</font>

624
00:26:26,880 --> 00:26:32,340
these<font color="#E5E5E5"> names are all generally the same</font>

625
00:26:29,010 --> 00:26:33,840
piece<font color="#CCCCCC"> of malware you know and they'll be</font>

626
00:26:32,340 --> 00:26:36,959
<font color="#E5E5E5">overlapping things like that but kind of</font>

627
00:26:33,840 --> 00:26:40,168
try to use<font color="#CCCCCC"> that group names into a more</font>

628
00:26:36,960 --> 00:26:41,549
in a way it helps you get over the you

629
00:26:40,169 --> 00:26:44,070
know one two three four<font color="#CCCCCC"> five problem</font>

630
00:26:41,549 --> 00:26:45,570
yeah so that's actually<font color="#E5E5E5"> the approach</font>

631
00:26:44,070 --> 00:26:50,070
that I'm<font color="#E5E5E5"> thinking I'm going to take in</font>

632
00:26:45,570 --> 00:26:51,840
the next few months um it I think it's

633
00:26:50,070 --> 00:26:54,059
probably<font color="#E5E5E5"> the</font><font color="#CCCCCC"> best way to go but it ends</font>

634
00:26:51,840 --> 00:26:57,480
up<font color="#CCCCCC"> being really like expensive</font><font color="#E5E5E5"> for me oh</font>

635
00:26:54,059 --> 00:27:01,168
so<font color="#CCCCCC"> i'm i'm going to try it and see how</font>

636
00:26:57,480 --> 00:27:03,360
it works<font color="#E5E5E5"> out and maybe see how did you</font>

637
00:27:01,169 --> 00:27:05,130
handle the cases where virustotal label

638
00:27:03,360 --> 00:27:06,330
things is two different virus families

639
00:27:05,130 --> 00:27:08,460
or multiple virus<font color="#CCCCCC"> van</font>

640
00:27:06,330 --> 00:27:11,610
that don't share a similar<font color="#E5E5E5"> basis right</font>

641
00:27:08,460 --> 00:27:13,409
so right<font color="#E5E5E5"> now on I release the labels</font>

642
00:27:11,610 --> 00:27:18,330
with all of the different like<font color="#E5E5E5"> it's</font>

643
00:27:13,409 --> 00:27:21,779
literally this shoe shoe shoe this LD

644
00:27:18,330 --> 00:27:24,689
<font color="#E5E5E5">JSON arm so you can actually like build</font>

645
00:27:21,779 --> 00:27:26,159
the index even on a single antivirus or

646
00:27:24,690 --> 00:27:27,990
something like that I haven't really

647
00:27:26,159 --> 00:27:30,299
found a good solution for<font color="#CCCCCC"> that actual</font>

648
00:27:27,990 --> 00:27:35,760
problem yet again like antivirus labels

649
00:27:30,299 --> 00:27:37,889
are very very<font color="#E5E5E5"> freaking noisy um so yeah</font>

650
00:27:35,760 --> 00:27:39,570
I'm open<font color="#CCCCCC"> to suggestions there actually</font>

651
00:27:37,890 --> 00:27:41,519
is what I can say right now<font color="#E5E5E5"> I've built</font>

652
00:27:39,570 --> 00:27:44,158
the index with all of them<font color="#E5E5E5"> because my</font>

653
00:27:41,519 --> 00:27:48,240
major use case is just like finding lots

654
00:27:44,159 --> 00:27:51,450
of boontem<font color="#CCCCCC"> our and so if if</font><font color="#E5E5E5"> I actually</font>

655
00:27:48,240 --> 00:27:53,429
um you know find a trunk that's not

656
00:27:51,450 --> 00:27:56,159
exactly the optimal chunk because two

657
00:27:53,429 --> 00:27:59,039
different antivirus vendors labeled it

658
00:27:56,159 --> 00:28:02,340
differently it's not majorly a problem

659
00:27:59,039 --> 00:28:04,049
for<font color="#CCCCCC"> me have you considered taking the</font>

660
00:28:02,340 --> 00:28:06,209
data<font color="#E5E5E5"> and running it through like a</font>

661
00:28:04,049 --> 00:28:10,289
relational database as well to see<font color="#E5E5E5"> where</font>

662
00:28:06,210 --> 00:28:13,409
other clusters might exist that don't

663
00:28:10,289 --> 00:28:15,539
like readily come to the surface yeah

664
00:28:13,409 --> 00:28:20,429
that would be<font color="#E5E5E5"> a really cool idea um I'd</font>

665
00:28:15,539 --> 00:28:22,408
love to do that um so um it's a little

666
00:28:20,429 --> 00:28:25,559
further in like sort of the labeling

667
00:28:22,409 --> 00:28:30,179
process then I intended<font color="#E5E5E5"> to go but</font><font color="#CCCCCC"> it's</font>

668
00:28:25,559 --> 00:28:31,740
sounding<font color="#CCCCCC"> like I</font><font color="#E5E5E5"> probably should um but</font>

669
00:28:30,179 --> 00:28:33,750
yeah no actually<font color="#E5E5E5"> that's a really good</font>

670
00:28:31,740 --> 00:28:36,600
idea and have you used something like a

671
00:28:33,750 --> 00:28:39,659
freak pie that does like language

672
00:28:36,600 --> 00:28:41,639
frequency as well on the names that is

673
00:28:39,659 --> 00:28:44,730
that it's<font color="#E5E5E5"> giving back to you to see</font><font color="#CCCCCC"> if</font>

674
00:28:41,639 --> 00:28:46,918
that<font color="#E5E5E5"> provides any sort of analytics so I</font>

675
00:28:44,730 --> 00:28:49,980
have tried like counting you know

676
00:28:46,919 --> 00:28:51,840
different labels different like

677
00:28:49,980 --> 00:28:54,809
substrings within the labels and things

678
00:28:51,840 --> 00:28:56,820
like that um I just still get<font color="#E5E5E5"> into the</font>

679
00:28:54,809 --> 00:29:00,200
issue where there's all these exceptions

680
00:28:56,820 --> 00:29:03,029
we're like again<font color="#E5E5E5"> Turgeon abcdefg like</font>

681
00:29:00,200 --> 00:29:05,159
abcdefg ends up being the string that

682
00:29:03,029 --> 00:29:08,399
occurs more frequently like not<font color="#CCCCCC"> in that</font>

683
00:29:05,159 --> 00:29:10,710
exact example but so with all these

684
00:29:08,399 --> 00:29:12,539
exceptions it would actually<font color="#E5E5E5"> I would</font>

685
00:29:10,710 --> 00:29:18,169
have<font color="#E5E5E5"> to use Amazon's Mechanical Turk or</font>

686
00:29:12,539 --> 00:29:18,169
something to get<font color="#CCCCCC"> rid of them on but yeah</font>

687
00:29:19,830 --> 00:29:26,290
and would you mind sharing how you did

688
00:29:23,110 --> 00:29:27,909
<font color="#CCCCCC">microsoft cargo last year</font><font color="#E5E5E5"> um the</font>

689
00:29:26,290 --> 00:29:31,899
<font color="#CCCCCC">sightings are very hard but we were only</font>

690
00:29:27,910 --> 00:29:33,760
the 44th so<font color="#CCCCCC"> I actually</font><font color="#E5E5E5"> I did not spend</font>

691
00:29:31,900 --> 00:29:36,010
much time on it at<font color="#E5E5E5"> all I actually had a</font>

692
00:29:33,760 --> 00:29:49,480
few<font color="#CCCCCC"> friends in fact</font><font color="#E5E5E5"> Gabe were you on my</font>

693
00:29:36,010 --> 00:29:52,570
team yeah exactly and I was like

694
00:29:49,480 --> 00:29:55,210
presenting my Master's actual project

695
00:29:52,570 --> 00:29:57,669
and stuff like that<font color="#E5E5E5"> so it ended up we</font>

696
00:29:55,210 --> 00:30:02,070
didn't we didn't we didn't try as hard

697
00:29:57,670 --> 00:30:02,070
as I you know if it came out<font color="#E5E5E5"> again maybe</font>

698
00:30:02,220 --> 00:30:08,410
cool is that options anybody else

699
00:30:06,270 --> 00:30:10,360
<font color="#CCCCCC">alright again I'd like to talk to</font>

700
00:30:08,410 --> 00:30:12,220
malware<font color="#CCCCCC"> analysts and reverse engineers</font>

701
00:30:10,360 --> 00:30:13,719
<font color="#CCCCCC">up front or you know</font><font color="#E5E5E5"> outside or</font>

702
00:30:12,220 --> 00:30:17,580
something we'll figure out a space own

703
00:30:13,720 --> 00:30:17,580
but thank you<font color="#CCCCCC"> for having</font><font color="#E5E5E5"> me</font>

