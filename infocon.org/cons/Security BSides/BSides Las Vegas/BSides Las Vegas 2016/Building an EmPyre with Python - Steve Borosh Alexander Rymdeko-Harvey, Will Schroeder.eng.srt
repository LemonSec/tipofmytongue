1
00:00:00,000 --> 00:00:04,410
hello everybody this is<font color="#E5E5E5"> building an</font>

2
00:00:02,190 --> 00:00:07,589
empire with Python just want to say<font color="#E5E5E5"> I</font>

3
00:00:04,410 --> 00:00:09,540
love besides Las Vegas I spoke here last

4
00:00:07,589 --> 00:00:11,190
year on PowerShell Empire we know the

5
00:00:09,540 --> 00:00:12,959
names give a<font color="#E5E5E5"> little weird we'll explain</font>

6
00:00:11,190 --> 00:00:14,399
that<font color="#E5E5E5"> at the end but i love this</font>

7
00:00:12,960 --> 00:00:17,000
conference<font color="#E5E5E5"> i love interacting with</font>

8
00:00:14,400 --> 00:00:19,710
everybody super stoked to be here again

9
00:00:17,000 --> 00:00:21,180
so my name<font color="#CCCCCC"> is well</font><font color="#E5E5E5"> Schrader if anyone</font>

10
00:00:19,710 --> 00:00:23,699
was in the two o'clock<font color="#E5E5E5"> talk for</font>

11
00:00:21,180 --> 00:00:26,009
<font color="#CCCCCC">bloodhound</font><font color="#E5E5E5"> but I'll be brief my handle</font>

12
00:00:23,699 --> 00:00:27,420
<font color="#E5E5E5">is harm joy</font><font color="#CCCCCC"> a researcher Red Team</font><font color="#E5E5E5"> ER for</font>

13
00:00:26,010 --> 00:00:29,340
the adaptive directive vision of<font color="#E5E5E5"> ferrous</font>

14
00:00:27,420 --> 00:00:31,349
group I've done<font color="#CCCCCC"> a lot of offensive power</font>

15
00:00:29,340 --> 00:00:33,360
shell but this will be one<font color="#E5E5E5"> of the first</font>

16
00:00:31,349 --> 00:00:35,579
talks in a bit that I will not say the

17
00:00:33,360 --> 00:00:37,019
word<font color="#E5E5E5"> PowerShell the entire time so here</font>

18
00:00:35,579 --> 00:00:39,030
if you're tired<font color="#E5E5E5"> of hearing me say that</font>

19
00:00:37,020 --> 00:00:40,649
<font color="#CCCCCC">you should hopefully be happy my</font>

20
00:00:39,030 --> 00:00:42,540
co-founder of a few projects and active

21
00:00:40,649 --> 00:00:44,280
developer the<font color="#CCCCCC"> veil framework powershot</font>

22
00:00:42,540 --> 00:00:47,160
on fire in this project<font color="#E5E5E5"> i'm also a</font>

23
00:00:44,280 --> 00:00:52,079
<font color="#E5E5E5">powershell mep and an active powerfully</font>

24
00:00:47,160 --> 00:00:55,440
developer riding on wills coattails<font color="#E5E5E5"> I'm</font>

25
00:00:52,079 --> 00:00:57,690
Steve Steve or affairs group prior to US

26
00:00:55,440 --> 00:01:00,209
Army infantryman kind of get a career

27
00:00:57,690 --> 00:01:02,280
change a few years<font color="#E5E5E5"> ago decided to go pro</font>

28
00:01:00,210 --> 00:01:07,500
kicking in doors to<font color="#E5E5E5"> breaking into</font>

29
00:01:02,280 --> 00:01:09,900
security systems so I've also offered

30
00:01:07,500 --> 00:01:12,840
some tools worked on egress<font color="#E5E5E5"> assess and</font>

31
00:01:09,900 --> 00:01:19,110
fire things like that<font color="#CCCCCC"> and powershell</font>

32
00:01:12,840 --> 00:01:23,070
<font color="#CCCCCC">Empire as well my name is</font><font color="#E5E5E5"> alex</font><font color="#CCCCCC"> room deco</font>

33
00:01:19,110 --> 00:01:25,409
Harvey it is a mouthful for sure my

34
00:01:23,070 --> 00:01:27,869
handle is<font color="#E5E5E5"> kill switch GUI I work for</font>

35
00:01:25,409 --> 00:01:30,810
<font color="#E5E5E5">varus group as well I'm a pen tester red</font>

36
00:01:27,869 --> 00:01:32,549
team or just like<font color="#E5E5E5"> these guys are and a</font>

37
00:01:30,810 --> 00:01:35,400
few things I've helped work on were

38
00:01:32,549 --> 00:01:37,860
simply<font color="#CCCCCC"> mail and simply template cool all</font>

39
00:01:35,400 --> 00:01:39,420
right that's all out of the way<font color="#E5E5E5"> so what</font>

40
00:01:37,860 --> 00:01:42,840
we're going to going to<font color="#CCCCCC"> be talking about</font>

41
00:01:39,420 --> 00:01:44,939
<font color="#E5E5E5">today so I'm gonna go go a bit over the</font>

42
00:01:42,840 --> 00:01:48,570
motivation for<font color="#E5E5E5"> building this project and</font>

43
00:01:44,939 --> 00:01:50,908
then five seconds or<font color="#E5E5E5"> 10 seconds Python</font>

44
00:01:48,570 --> 00:01:52,648
Empire is an OS X and Linux based

45
00:01:50,909 --> 00:01:53,440
matwork agents that it has a very

46
00:01:52,649 --> 00:01:56,110
<font color="#E5E5E5">similar</font>

47
00:01:53,440 --> 00:01:57,730
your GP PowerShell Empire project I'm

48
00:01:56,110 --> 00:01:59,340
going<font color="#E5E5E5"> to go over the we're going to go</font>

49
00:01:57,730 --> 00:02:01,780
over the background of empire the

50
00:01:59,340 --> 00:02:03,730
architectural decisions like kind of you

51
00:02:01,780 --> 00:02:06,040
know rats 101like why we built it this

52
00:02:03,730 --> 00:02:08,830
way go over some of the stagers<font color="#CCCCCC"> Steve</font>

53
00:02:06,040 --> 00:02:12,100
host and network triage for<font color="#CCCCCC"> Steven Alex</font>

54
00:02:08,830 --> 00:02:13,780
lateral movement persistence and had the

55
00:02:12,100 --> 00:02:16,600
like and really<font color="#CCCCCC"> kind of go over how this</font>

56
00:02:13,780 --> 00:02:18,760
agent can facilitate the tradecraft<font color="#E5E5E5"> that</font>

57
00:02:16,600 --> 00:02:21,070
you might be<font color="#CCCCCC"> used to on</font><font color="#E5E5E5"> Windows but do</font>

58
00:02:18,760 --> 00:02:23,140
it instead for<font color="#CCCCCC"> OS X specifically but</font>

59
00:02:21,070 --> 00:02:24,549
also a<font color="#E5E5E5"> bit for weddings it's going to be</font>

60
00:02:23,140 --> 00:02:27,489
an ongoing theme throughout the entire

61
00:02:24,550 --> 00:02:29,100
presentation like<font color="#CCCCCC"> a few</font><font color="#E5E5E5"> comments at the</font>

62
00:02:27,490 --> 00:02:31,000
end of kind of about future plans

63
00:02:29,100 --> 00:02:33,160
combination the code bases and things

64
00:02:31,000 --> 00:02:34,360
like that<font color="#E5E5E5"> and all throughout</font><font color="#CCCCCC"> the</font>

65
00:02:33,160 --> 00:02:36,340
presentation we're going to have like

66
00:02:34,360 --> 00:02:37,510
small demos instead of 1 10 minute demo

67
00:02:36,340 --> 00:02:38,860
at the end we're going<font color="#E5E5E5"> to break it up</font>

68
00:02:37,510 --> 00:02:41,019
into like little two or three minute

69
00:02:38,860 --> 00:02:44,770
chunks so you don't have to hear us just

70
00:02:41,020 --> 00:02:49,540
talk through slides the entire time so

71
00:02:44,770 --> 00:02:51,490
why build this so we do a lot of

72
00:02:49,540 --> 00:02:53,859
engagements we do a lot of pen tests we

73
00:02:51,490 --> 00:02:56,680
do a lot of red<font color="#CCCCCC"> teams which we kind of</font>

74
00:02:53,860 --> 00:02:58,450
define is you know like three to six

75
00:02:56,680 --> 00:03:00,160
week type engagements we had a

76
00:02:58,450 --> 00:03:02,640
particular client or a couple<font color="#CCCCCC"> of clients</font>

77
00:03:00,160 --> 00:03:05,200
<font color="#E5E5E5">that started having more heavy</font>

78
00:03:02,640 --> 00:03:08,260
concentrations of<font color="#CCCCCC"> OSX machines in their</font>

79
00:03:05,200 --> 00:03:10,269
environment this one particular client

80
00:03:08,260 --> 00:03:11,320
they're like well you know<font color="#E5E5E5"> come into</font>

81
00:03:10,270 --> 00:03:13,630
this engagement we did the first

82
00:03:11,320 --> 00:03:16,690
engagement we essentially tried to hit

83
00:03:13,630 --> 00:03:17,890
<font color="#CCCCCC">aldea like Windows virtual machines and</font>

84
00:03:16,690 --> 00:03:20,050
developers and things like that because

85
00:03:17,890 --> 00:03:22,089
we're really heavy<font color="#CCCCCC"> windows tradecraft we</font>

86
00:03:20,050 --> 00:03:23,380
hit that we went back there like super

87
00:03:22,090 --> 00:03:25,150
happy and afterwards like well okay

88
00:03:23,380 --> 00:03:28,170
we're<font color="#E5E5E5"> going to bring you in again but</font>

89
00:03:25,150 --> 00:03:31,720
you have to hit<font color="#E5E5E5"> OS X was late last year</font>

90
00:03:28,170 --> 00:03:34,329
we're like oh you know like OS X

91
00:03:31,720 --> 00:03:35,709
<font color="#CCCCCC">okay like we</font><font color="#E5E5E5"> know a couple of</font><font color="#CCCCCC"> things but</font>

92
00:03:34,330 --> 00:03:38,440
there's not nearly as much information

93
00:03:35,709 --> 00:03:40,180
on OS X as there is on windows right it

94
00:03:38,440 --> 00:03:42,070
has a much smaller market share so

95
00:03:40,180 --> 00:03:45,670
there's not as many<font color="#E5E5E5"> attack tool sets</font>

96
00:03:42,070 --> 00:03:47,859
there's some<font color="#CCCCCC"> few</font><font color="#E5E5E5"> small pieces fuzzing</font>

97
00:03:45,670 --> 00:03:49,869
opted a great presentation 2014<font color="#E5E5E5"> the</font>

98
00:03:47,860 --> 00:03:51,820
Recon if anyone saw it i think<font color="#E5E5E5"> is red</font>

99
00:03:49,870 --> 00:03:54,970
teaming back and forth<font color="#E5E5E5"> five ever where</font>

100
00:03:51,820 --> 00:03:57,880
he talked<font color="#E5E5E5"> about some of these OS</font><font color="#CCCCCC"> X post</font>

101
00:03:54,970 --> 00:03:59,859
xscape ability specifically but we

102
00:03:57,880 --> 00:04:02,620
didn't<font color="#CCCCCC"> really see</font><font color="#E5E5E5"> any kind of complete</font>

103
00:03:59,860 --> 00:04:06,680
OS<font color="#E5E5E5"> X agents right you know there weren't</font>

104
00:04:02,620 --> 00:04:09,799
a huge amount of possibilities for us so

105
00:04:06,680 --> 00:04:11,870
over Christmas last year I spent the

106
00:04:09,799 --> 00:04:14,180
entire break rewrote a Python Mauer

107
00:04:11,870 --> 00:04:15,769
agent for this particular<font color="#E5E5E5"> client and</font>

108
00:04:14,180 --> 00:04:18,590
instead<font color="#CCCCCC"> of writing from scratch I don't</font>

109
00:04:15,769 --> 00:04:20,358
know objective-c Swift whatever for<font color="#CCCCCC"> OS X</font>

110
00:04:18,589 --> 00:04:22,489
<font color="#E5E5E5">on the windows dude so it's</font><font color="#CCCCCC"> like okay</font>

111
00:04:20,358 --> 00:04:24,049
there's Ruby and Python scripting

112
00:04:22,490 --> 00:04:25,990
languages like okay I'm just<font color="#E5E5E5"> going to go</font>

113
00:04:24,050 --> 00:04:28,729
<font color="#CCCCCC">with the PowerShell Empire type</font>

114
00:04:25,990 --> 00:04:30,590
architecture we use a huge amount of the

115
00:04:28,729 --> 00:04:32,060
kind<font color="#E5E5E5"> of the back in PowerShell Empire</font>

116
00:04:30,590 --> 00:04:35,060
controller which<font color="#CCCCCC"> we'll go over</font><font color="#E5E5E5"> here in a</font>

117
00:04:32,060 --> 00:04:37,009
bit<font color="#CCCCCC"> and you have some of some of the</font>

118
00:04:35,060 --> 00:04:39,289
stuff that's out there for OS X so even

119
00:04:37,009 --> 00:04:41,870
though the pen testing community does

120
00:04:39,289 --> 00:04:44,659
<font color="#CCCCCC">not have as many tool sets there is</font>

121
00:04:41,870 --> 00:04:46,729
<font color="#CCCCCC">obviously malicious</font><font color="#E5E5E5"> OS X malware out</font>

122
00:04:44,660 --> 00:04:49,729
there right wire lurker for<font color="#CCCCCC"> Trojan eyes</font>

123
00:04:46,729 --> 00:04:51,469
applications x.x code ghosts for exco

124
00:04:49,729 --> 00:04:53,780
packages kind of a Virginia<font color="#E5E5E5"> from China</font>

125
00:04:51,470 --> 00:04:55,550
hacking team with the leak and all their

126
00:04:53,780 --> 00:05:00,080
source code we got a really nice kind of

127
00:04:55,550 --> 00:05:02,750
view into these more advanced<font color="#E5E5E5"> Nate</font>

128
00:05:00,080 --> 00:05:04,430
almost nation-state style<font color="#CCCCCC"> OSX tools this</font>

129
00:05:02,750 --> 00:05:06,169
is not nearly as good as that obviously

130
00:05:04,430 --> 00:05:09,199
because we're<font color="#E5E5E5"> just a couple of dudes</font>

131
00:05:06,169 --> 00:05:11,810
doing this in our spare time but<font color="#E5E5E5"> again</font>

132
00:05:09,199 --> 00:05:13,520
there has been malicious<font color="#E5E5E5"> OSX tool sets</font>

133
00:05:11,810 --> 00:05:15,470
out there but there hadn't been

134
00:05:13,520 --> 00:05:17,870
something super open source in public

135
00:05:15,470 --> 00:05:20,750
and with the modular architecture that

136
00:05:17,870 --> 00:05:22,610
we're used to operating in as<font color="#E5E5E5"> open</font>

137
00:05:20,750 --> 00:05:27,289
<font color="#E5E5E5">source legitimate pen testers and red</font>

138
00:05:22,610 --> 00:05:28,400
teamers we're going to again we're<font color="#E5E5E5"> going</font>

139
00:05:27,289 --> 00:05:30,620
to touch<font color="#E5E5E5"> on this throughout the entire</font>

140
00:05:28,400 --> 00:05:32,539
presentation but<font color="#CCCCCC"> OSX to us at least</font>

141
00:05:30,620 --> 00:05:35,599
presents a good number<font color="#E5E5E5"> of challenges</font>

142
00:05:32,539 --> 00:05:37,729
versus windows there<font color="#E5E5E5"> are nearly as many</font>

143
00:05:35,599 --> 00:05:41,180
public<font color="#E5E5E5"> OSX attack tool sets because the</font>

144
00:05:37,729 --> 00:05:42,680
market<font color="#CCCCCC"> share in particular there's a few</font>

145
00:05:41,180 --> 00:05:44,509
things that are<font color="#E5E5E5"> really kind of pain</font>

146
00:05:42,680 --> 00:05:47,740
points for us or<font color="#CCCCCC"> OSX</font><font color="#E5E5E5"> from a pen tester</font>

147
00:05:44,509 --> 00:05:49,849
perspective initial access vectors are

148
00:05:47,740 --> 00:05:53,080
<font color="#E5E5E5">there just not that many of them with</font>

149
00:05:49,849 --> 00:05:56,719
<font color="#CCCCCC">windows you have</font><font color="#E5E5E5"> h tas and macros and</font>

150
00:05:53,080 --> 00:05:58,340
like the bridge the red jesse t type

151
00:05:56,720 --> 00:06:00,590
stuff you know it<font color="#E5E5E5"> seems like every few</font>

152
00:05:58,340 --> 00:06:03,080
weeks there's new<font color="#CCCCCC"> axe x</font><font color="#E5E5E5"> access vector</font>

153
00:06:00,590 --> 00:06:05,330
you can<font color="#E5E5E5"> have for windows initial access</font>

154
00:06:03,080 --> 00:06:09,469
through fishing for<font color="#CCCCCC"> OSX there we didn't</font>

155
00:06:05,330 --> 00:06:12,198
really see many vectors like at all so

156
00:06:09,470 --> 00:06:14,779
we ended up kind of creating a macro

157
00:06:12,199 --> 00:06:16,070
based approach which afterwards some

158
00:06:14,779 --> 00:06:17,690
people came<font color="#E5E5E5"> out of the woodwork and like</font>

159
00:06:16,070 --> 00:06:19,460
oh yeah<font color="#E5E5E5"> this has been public but it just</font>

160
00:06:17,690 --> 00:06:21,740
wasn't publicized so we're<font color="#E5E5E5"> not claiming</font>

161
00:06:19,460 --> 00:06:23,539
we invented this stuff we were just

162
00:06:21,740 --> 00:06:25,400
<font color="#CCCCCC">trying</font><font color="#E5E5E5"> to develop solutions on</font><font color="#CCCCCC"> the fly</font>

163
00:06:23,539 --> 00:06:28,370
for engagements that we could be

164
00:06:25,400 --> 00:06:30,469
effective lateral spread is also really

165
00:06:28,370 --> 00:06:32,029
knowing for us if your windows yet

166
00:06:30,469 --> 00:06:34,130
<font color="#CCCCCC">passed the hash and all this really fun</font>

167
00:06:32,029 --> 00:06:37,010
stuff and domain delegated access with

168
00:06:34,130 --> 00:06:38,599
OSX you might have ssh you might not but

169
00:06:37,010 --> 00:06:40,190
other than that it's it's a lot more

170
00:06:38,599 --> 00:06:42,550
difficult for sure and Steve will cover

171
00:06:40,190 --> 00:06:45,860
some of that stuff in the<font color="#E5E5E5"> later section</font>

172
00:06:42,550 --> 00:06:48,229
so brats 101 just a few of<font color="#E5E5E5"> the kind of</font>

173
00:06:45,860 --> 00:06:49,669
thoughts we had when we started

174
00:06:48,229 --> 00:06:52,820
designing the architecture<font color="#E5E5E5"> of this whole</font>

175
00:06:49,669 --> 00:06:55,460
project so<font color="#CCCCCC"> we want staging flexibility</font>

176
00:06:52,820 --> 00:06:57,409
and by that we mean we want an easy way

177
00:06:55,460 --> 00:07:00,138
to generate a large number of stagers

178
00:06:57,409 --> 00:07:02,150
stagers<font color="#CCCCCC"> I mean the first little</font><font color="#E5E5E5"> bit of</font>

179
00:07:00,139 --> 00:07:04,099
code that's executed on a system<font color="#E5E5E5"> that</font>

180
00:07:02,150 --> 00:07:07,520
starts the staging process for<font color="#CCCCCC"> the</font>

181
00:07:04,099 --> 00:07:09,199
entire rat with Empire or<font color="#E5E5E5"> Python empires</font>

182
00:07:07,520 --> 00:07:11,539
PowerShell Empire we don't give you

183
00:07:09,199 --> 00:07:13,520
<font color="#E5E5E5">unless you really want to the entire</font>

184
00:07:11,539 --> 00:07:14,750
racked and one malicious block we have

185
00:07:13,520 --> 00:07:16,159
like key exchange and all this<font color="#E5E5E5"> type of</font>

186
00:07:14,750 --> 00:07:18,050
stuff so you can run just a small little

187
00:07:16,159 --> 00:07:20,870
one-liner snippet in a variety of ways

188
00:07:18,050 --> 00:07:24,050
<font color="#CCCCCC">to get the entire</font><font color="#E5E5E5"> agent staged into</font>

189
00:07:20,870 --> 00:07:25,550
memory modularity just like the

190
00:07:24,050 --> 00:07:27,529
<font color="#E5E5E5">PowerShell Empire project you way we</font>

191
00:07:25,550 --> 00:07:28,940
want people we<font color="#E5E5E5"> want to give</font><font color="#CCCCCC"> people the</font>

192
00:07:27,529 --> 00:07:30,849
ability to build their own modules

193
00:07:28,940 --> 00:07:34,190
naturally they talked right after this

194
00:07:30,849 --> 00:07:36,430
they're dropping some live Python Empire

195
00:07:34,190 --> 00:07:38,570
modules I haven't seen<font color="#E5E5E5"> them at all they</font>

196
00:07:36,430 --> 00:07:40,070
developed<font color="#E5E5E5"> some awesome stuff I</font><font color="#CCCCCC"> don't</font>

197
00:07:38,570 --> 00:07:41,360
actually<font color="#E5E5E5"> know</font><font color="#CCCCCC"> the contents of the</font>

198
00:07:40,070 --> 00:07:43,610
modules they're dropping so we're pretty

199
00:07:41,360 --> 00:07:46,490
<font color="#E5E5E5">excited and also we care a lot about</font>

200
00:07:43,610 --> 00:07:48,320
crypto we don't<font color="#E5E5E5"> want</font><font color="#CCCCCC"> self-signed ssl</font>

201
00:07:46,490 --> 00:07:49,729
certificates to be the only thing that

202
00:07:48,320 --> 00:07:52,130
protects the communications for our

203
00:07:49,729 --> 00:07:55,190
clients environments and these really

204
00:07:52,130 --> 00:07:56,930
high security clients they they care

205
00:07:55,190 --> 00:07:58,969
about crypto as well so if<font color="#CCCCCC"> we can demo</font>

206
00:07:56,930 --> 00:08:00,979
to them like look we have encrypted key

207
00:07:58,969 --> 00:08:02,270
exchange perfect forward secrecy and all

208
00:08:00,979 --> 00:08:03,979
the stuff to show that we thought

209
00:08:02,270 --> 00:08:07,279
through it<font color="#E5E5E5"> hopefully that makes them a</font>

210
00:08:03,979 --> 00:08:08,900
bit more<font color="#E5E5E5"> at ease and also i'll touch</font>

211
00:08:07,279 --> 00:08:11,449
just briefly on the staging problem

212
00:08:08,900 --> 00:08:13,310
<font color="#E5E5E5">somehow your malicious code has to get</font>

213
00:08:11,449 --> 00:08:15,169
<font color="#E5E5E5">to the target whether you package it all</font>

214
00:08:13,310 --> 00:08:17,810
up and send it<font color="#CCCCCC"> to them you know in one</font>

215
00:08:15,169 --> 00:08:19,909
initial payload you can do that but

216
00:08:17,810 --> 00:08:21,380
somehow this code has to traverse the

217
00:08:19,909 --> 00:08:22,520
network to get to the client so there's

218
00:08:21,380 --> 00:08:26,479
a lot<font color="#CCCCCC"> of things</font><font color="#E5E5E5"> that kind of come into</font>

219
00:08:22,520 --> 00:08:30,159
play with that so the solution we built

220
00:08:26,479 --> 00:08:32,689
<font color="#CCCCCC">Python Empire that was our last minute</font>

221
00:08:30,159 --> 00:08:34,099
now slightly regrettable name

222
00:08:32,690 --> 00:08:35,300
mean scheme because it was<font color="#E5E5E5"> like Empire</font>

223
00:08:34,099 --> 00:08:38,150
<font color="#E5E5E5">Empire like what the hell are you</font>

224
00:08:35,299 --> 00:08:39,589
talking about<font color="#E5E5E5"> but you know we</font><font color="#CCCCCC"> thought it</font>

225
00:08:38,150 --> 00:08:42,199
<font color="#E5E5E5">was clever at the time and kind of a</font>

226
00:08:39,590 --> 00:08:45,590
sleep-deprived and caffeine fueled end

227
00:08:42,200 --> 00:08:47,300
of the development cycle this is the

228
00:08:45,590 --> 00:08:49,580
interface just kind of show you guys

229
00:08:47,300 --> 00:08:51,500
that should<font color="#E5E5E5"> look very familiar a to</font>

230
00:08:49,580 --> 00:08:53,630
powershell<font color="#E5E5E5"> empire because it uses</font>

231
00:08:51,500 --> 00:08:57,380
ninety-five percent of the same<font color="#CCCCCC"> back-end</font>

232
00:08:53,630 --> 00:08:59,630
code<font color="#CCCCCC"> base it's a text-based driven tool</font>

233
00:08:57,380 --> 00:09:01,520
we also<font color="#E5E5E5"> have a restful api which I'll</font>

234
00:08:59,630 --> 00:09:03,439
touch touch in what kind of right at the

235
00:09:01,520 --> 00:09:06,319
end or people have started to build

236
00:09:03,440 --> 00:09:07,520
<font color="#E5E5E5">front-end gooeys for these types of tool</font>

237
00:09:06,320 --> 00:09:09,710
sets that we're<font color="#CCCCCC"> building because a</font>

238
00:09:07,520 --> 00:09:11,210
restful api provides the ability to do

239
00:09:09,710 --> 00:09:13,190
so so we're excited about<font color="#CCCCCC"> the future</font>

240
00:09:11,210 --> 00:09:14,480
possibilities if anyone wants to talk

241
00:09:13,190 --> 00:09:16,310
<font color="#E5E5E5">about that later</font><font color="#CCCCCC"> we'll be out</font><font color="#E5E5E5"> for a</font>

242
00:09:14,480 --> 00:09:20,380
little bit<font color="#E5E5E5"> and in the main room of</font>

243
00:09:16,310 --> 00:09:25,609
budget talk shop so the background again

244
00:09:20,380 --> 00:09:28,880
<font color="#CCCCCC">Python pure python-based agent it's it's</font>

245
00:09:25,610 --> 00:09:32,150
Python 2 dot<font color="#CCCCCC"> 7 and 2 dot 6 compatible so</font>

246
00:09:28,880 --> 00:09:34,670
<font color="#E5E5E5">it'll work on most Linux systems and it</font>

247
00:09:32,150 --> 00:09:36,890
will<font color="#E5E5E5"> definitely work on OSX systems this</font>

248
00:09:34,670 --> 00:09:38,089
isn't just a POC tool that<font color="#E5E5E5"> where we</font>

249
00:09:36,890 --> 00:09:40,430
developed you<font color="#CCCCCC"> know a couple</font><font color="#E5E5E5"> months ago</font>

250
00:09:38,090 --> 00:09:42,350
<font color="#E5E5E5">we use this on engagements more than</font>

251
00:09:40,430 --> 00:09:43,339
once it's been extremely effective for

252
00:09:42,350 --> 00:09:46,400
us so we're<font color="#E5E5E5"> happy to share with</font>

253
00:09:43,340 --> 00:09:48,020
everybody and heavily based on the the

254
00:09:46,400 --> 00:09:50,600
<font color="#E5E5E5">PowerShell Empire project it has an</font>

255
00:09:48,020 --> 00:09:54,319
asynchronous communication model so the

256
00:09:50,600 --> 00:09:56,120
client will request at asking over HTTP

257
00:09:54,320 --> 00:09:57,830
or HTTPS at the moment<font color="#CCCCCC"> we're hoping to</font>

258
00:09:56,120 --> 00:10:01,430
incorporate more transport mechanism

259
00:09:57,830 --> 00:10:03,260
mechanisms in<font color="#CCCCCC"> the future the server</font>

260
00:10:01,430 --> 00:10:05,569
returns an encrypted blob but you know

261
00:10:03,260 --> 00:10:07,700
with this instead of<font color="#E5E5E5"> a</font><font color="#CCCCCC"> a and an</font>

262
00:10:05,570 --> 00:10:09,590
established type of connection that's

263
00:10:07,700 --> 00:10:13,220
kept persistent this is all asynchronous

264
00:10:09,590 --> 00:10:14,810
so reach out get the tasking process it

265
00:10:13,220 --> 00:10:16,550
post the results back<font color="#CCCCCC"> and you can have</font>

266
00:10:14,810 --> 00:10:20,900
delay intervals anywhere from five

267
00:10:16,550 --> 00:10:22,490
seconds to hours we have asynchronous we

268
00:10:20,900 --> 00:10:24,079
also have<font color="#E5E5E5"> diffie-hellman based encrypted</font>

269
00:10:22,490 --> 00:10:25,550
key exchange<font color="#E5E5E5"> I won't go into</font><font color="#CCCCCC"> all the</font>

270
00:10:24,080 --> 00:10:27,320
guts of this stuff I find it really

271
00:10:25,550 --> 00:10:30,530
fascinating but I know most<font color="#E5E5E5"> people don't</font>

272
00:10:27,320 --> 00:10:33,740
the<font color="#E5E5E5"> the point with this is</font>

273
00:10:30,530 --> 00:10:35,510
diffie-hellman EK e gives us perfect

274
00:10:33,740 --> 00:10:37,670
forward secrecy with a different session

275
00:10:35,510 --> 00:10:40,010
keep or client so if instant responders

276
00:10:37,670 --> 00:10:41,810
image a particular box and pull<font color="#E5E5E5"> out the</font>

277
00:10:40,010 --> 00:10:43,430
key they can decrypt that clients

278
00:10:41,810 --> 00:10:45,530
communications but they cannot decrypt

279
00:10:43,430 --> 00:10:46,189
any other agent communications they see

280
00:10:45,530 --> 00:10:49,010
in their<font color="#E5E5E5"> network</font>

281
00:10:46,190 --> 00:10:51,080
I think EK<font color="#CCCCCC"> is awesome we have a variety</font>

282
00:10:49,010 --> 00:10:52,160
of post exploitation modules some of

283
00:10:51,080 --> 00:10:55,910
which will be covering during the

284
00:10:52,160 --> 00:10:59,209
presentation<font color="#CCCCCC"> in-depth module development</font>

285
00:10:55,910 --> 00:11:00,530
just like<font color="#CCCCCC"> PowerShell</font><font color="#E5E5E5"> Empire the</font>

286
00:10:59,210 --> 00:11:02,660
development for this project is

287
00:11:00,530 --> 00:11:04,220
extremely quick due to the modular

288
00:11:02,660 --> 00:11:05,689
structure in<font color="#CCCCCC"> the use of a scripting</font>

289
00:11:04,220 --> 00:11:07,250
language so instead of<font color="#E5E5E5"> having something</font>

290
00:11:05,690 --> 00:11:09,200
completely compiled and<font color="#CCCCCC"> you're like you</font>

291
00:11:07,250 --> 00:11:11,870
<font color="#E5E5E5">I want to modify X you</font><font color="#CCCCCC"> have to go</font>

292
00:11:09,200 --> 00:11:13,220
through Xcode and recompile all this

293
00:11:11,870 --> 00:11:15,440
stuff<font color="#E5E5E5"> and it gets pretty difficult with</font>

294
00:11:13,220 --> 00:11:17,090
binary code it's a scripting language

295
00:11:15,440 --> 00:11:18,650
it's just Python so if you want<font color="#E5E5E5"> to</font>

296
00:11:17,090 --> 00:11:20,390
extend something in the field which

297
00:11:18,650 --> 00:11:22,300
we've done several times<font color="#E5E5E5"> is really easy</font>

298
00:11:20,390 --> 00:11:24,380
to do so if you know<font color="#E5E5E5"> what you're doing</font>

299
00:11:22,300 --> 00:11:26,420
modules here essentially metadata

300
00:11:24,380 --> 00:11:28,580
containers for an embedded<font color="#CCCCCC"> Python script</font>

301
00:11:26,420 --> 00:11:31,160
just like<font color="#E5E5E5"> PowerShell Empire and we have</font>

302
00:11:28,580 --> 00:11:32,660
nice little options like whether or not

303
00:11:31,160 --> 00:11:34,430
the model needs administrative access

304
00:11:32,660 --> 00:11:36,350
with<font color="#CCCCCC"> sue do whether it's OPSEC safe</font>

305
00:11:34,430 --> 00:11:38,120
which we care about a lot meaning does

306
00:11:36,350 --> 00:11:40,190
it drop a file to disk or display

307
00:11:38,120 --> 00:11:41,900
something<font color="#CCCCCC"> to the user whether or not you</font>

308
00:11:40,190 --> 00:11:43,850
want<font color="#CCCCCC"> to save file output to a particular</font>

309
00:11:41,900 --> 00:11:47,030
format when things are the results are

310
00:11:43,850 --> 00:11:48,860
kind of sent back and we is really kind

311
00:11:47,030 --> 00:11:51,290
<font color="#E5E5E5">of fun designing our own rat and</font>

312
00:11:48,860 --> 00:11:52,910
building all the little<font color="#CCCCCC"> things into it</font>

313
00:11:51,290 --> 00:11:55,189
that we always<font color="#E5E5E5"> wanted like kill dates</font>

314
00:11:52,910 --> 00:11:58,880
working hours like all all those<font color="#E5E5E5"> nice</font>

315
00:11:55,190 --> 00:12:01,220
little objects cool so<font color="#E5E5E5"> steve is going to</font>

316
00:11:58,880 --> 00:12:05,420
talk about<font color="#CCCCCC"> some of</font><font color="#E5E5E5"> the stagers initial</font>

317
00:12:01,220 --> 00:12:07,790
fishing access<font color="#E5E5E5"> all right thanks so</font>

318
00:12:05,420 --> 00:12:11,270
stagers will talked<font color="#E5E5E5"> about getting our</font>

319
00:12:07,790 --> 00:12:12,770
initial malicious code execution on the

320
00:12:11,270 --> 00:12:15,949
target host so that's what we're going

321
00:12:12,770 --> 00:12:18,470
to talk about here the first stage that

322
00:12:15,950 --> 00:12:22,070
we built we're operating on some of<font color="#E5E5E5"> our</font>

323
00:12:18,470 --> 00:12:23,900
clients were the macros typically we

324
00:12:22,070 --> 00:12:26,390
think about windows when we<font color="#E5E5E5"> think about</font>

325
00:12:23,900 --> 00:12:29,540
office macros what we can do the same

326
00:12:26,390 --> 00:12:34,010
thing for<font color="#CCCCCC"> OSX targets as well Microsoft</font>

327
00:12:29,540 --> 00:12:36,140
and OSX have office in them as well<font color="#E5E5E5"> but</font>

328
00:12:34,010 --> 00:12:39,950
we have<font color="#CCCCCC"> to change how the macro works a</font>

329
00:12:36,140 --> 00:12:41,839
little bit and we'll talk about<font color="#CCCCCC"> that so</font>

330
00:12:39,950 --> 00:12:45,950
this blob of text right here is a

331
00:12:41,839 --> 00:12:49,130
<font color="#E5E5E5">generated macro that Empire creates you</font>

332
00:12:45,950 --> 00:12:51,170
give it the listener where it's going<font color="#E5E5E5"> to</font>

333
00:12:49,130 --> 00:12:53,780
call back to and it generates this<font color="#E5E5E5"> blob</font>

334
00:12:51,170 --> 00:12:55,520
this is the actual macro that you stick

335
00:12:53,780 --> 00:12:58,220
in the office document that you're going

336
00:12:55,520 --> 00:13:00,079
<font color="#CCCCCC">to send</font><font color="#E5E5E5"> to the target it's kind of hard</font>

337
00:12:58,220 --> 00:13:02,750
to see down here but at the bottom

338
00:13:00,080 --> 00:13:06,590
it's actually calling Python it's taken

339
00:13:02,750 --> 00:13:09,650
this entire base 64 encoded blob echoing

340
00:13:06,590 --> 00:13:12,140
<font color="#E5E5E5">it to python and</font><font color="#CCCCCC"> the reason we echo to</font>

341
00:13:09,650 --> 00:13:14,840
python is that way incident responders

342
00:13:12,140 --> 00:13:17,810
can't see the agent running as a process

343
00:13:14,840 --> 00:13:20,750
<font color="#E5E5E5">in memory they just see Python we found</font>

344
00:13:17,810 --> 00:13:23,869
out<font color="#E5E5E5"> during development that just calling</font>

345
00:13:20,750 --> 00:13:27,080
Python to decode the base64 encrypted

346
00:13:23,870 --> 00:13:30,950
blob actually show the entire string of

347
00:13:27,080 --> 00:13:32,510
the agent in memory so just like yeah so

348
00:13:30,950 --> 00:13:34,280
you would<font color="#CCCCCC"> have you know python dash C</font>

349
00:13:32,510 --> 00:13:36,410
equivalent<font color="#E5E5E5"> to like PowerShell dashing</font>

350
00:13:34,280 --> 00:13:39,110
<font color="#CCCCCC">cody command or dash c but if you just</font>

351
00:13:36,410 --> 00:13:41,360
echo components to a<font color="#E5E5E5"> python binary it</font>

352
00:13:39,110 --> 00:13:47,900
accepts anything on standard in as code

353
00:13:41,360 --> 00:13:50,210
and execute sit<font color="#E5E5E5"> taco binaries mock</font>

354
00:13:47,900 --> 00:13:51,890
object<font color="#CCCCCC"> volvo meant for executables so</font>

355
00:13:50,210 --> 00:13:54,200
windows we have executables we can

356
00:13:51,890 --> 00:13:57,650
execute batch files we can execute<font color="#E5E5E5"> h tas</font>

357
00:13:54,200 --> 00:14:00,200
a whole other range of executable

358
00:13:57,650 --> 00:14:03,079
formats this is what we use for<font color="#CCCCCC"> OSX and</font>

359
00:14:00,200 --> 00:14:05,900
what we do<font color="#E5E5E5"> is we hot patch a binary with</font>

360
00:14:03,080 --> 00:14:11,240
the Empire stager it<font color="#E5E5E5"> actually includes</font>

361
00:14:05,900 --> 00:14:15,740
the entire python library interpreter we

362
00:14:11,240 --> 00:14:17,900
use that actually on engagements client

363
00:14:15,740 --> 00:14:20,300
can have like<font color="#E5E5E5"> Casper jamp and they can</font>

364
00:14:17,900 --> 00:14:22,310
push our binary out to the target

365
00:14:20,300 --> 00:14:24,140
machines if they don't<font color="#E5E5E5"> actually want to</font>

366
00:14:22,310 --> 00:14:26,719
go through a fishing exercise you can

367
00:14:24,140 --> 00:14:31,550
<font color="#E5E5E5">just push it out execute it on the</font>

368
00:14:26,720 --> 00:14:33,860
remote system and get your<font color="#E5E5E5"> call back we</font>

369
00:14:31,550 --> 00:14:37,069
also have<font color="#E5E5E5"> died lib hijacking much like</font>

370
00:14:33,860 --> 00:14:40,100
DLL hijacking and windows this research

371
00:14:37,070 --> 00:14:43,430
<font color="#E5E5E5">was based off of</font><font color="#CCCCCC"> Patrick</font><font color="#E5E5E5"> Wartell he has</font>

372
00:14:40,100 --> 00:14:45,290
a great PDF right<font color="#CCCCCC"> there all about it</font><font color="#E5E5E5"> I</font>

373
00:14:43,430 --> 00:14:47,030
won't get<font color="#E5E5E5"> into the details too much</font>

374
00:14:45,290 --> 00:14:50,120
because it's a bit complicated but it's

375
00:14:47,030 --> 00:14:53,449
basically abusing search order loading

376
00:14:50,120 --> 00:14:56,180
if a program wants to load a dial it or

377
00:14:53,450 --> 00:14:57,920
something like dll it has to go in an

378
00:14:56,180 --> 00:15:00,739
order of directories to find that<font color="#E5E5E5"> and we</font>

379
00:14:57,920 --> 00:15:05,510
can abuse that we also use this as a

380
00:15:00,740 --> 00:15:08,480
method of persistence and<font color="#E5E5E5"> Empire this is</font>

381
00:15:05,510 --> 00:15:10,189
the hijack scanner module this was also

382
00:15:08,480 --> 00:15:12,170
<font color="#E5E5E5">based off of</font><font color="#CCCCCC"> Patrick Wartell what</font><font color="#E5E5E5"> this</font>

383
00:15:10,190 --> 00:15:12,690
does is it scans much like if you've

384
00:15:12,170 --> 00:15:17,250
used

385
00:15:12,690 --> 00:15:21,750
in Windows it<font color="#E5E5E5"> scans for possible hijack</font>

386
00:15:17,250 --> 00:15:24,300
locations you have our path which loads

387
00:15:21,750 --> 00:15:26,970
load order hijacking like<font color="#CCCCCC"> dll's and</font>

388
00:15:24,300 --> 00:15:29,550
windows we also can look for weak die

389
00:15:26,970 --> 00:15:31,470
libs which means that that dial it

390
00:15:29,550 --> 00:15:33,540
doesn't actually exist in<font color="#E5E5E5"> the directory</font>

391
00:15:31,470 --> 00:15:35,940
then if we create<font color="#E5E5E5"> one put it in that</font>

392
00:15:33,540 --> 00:15:41,130
directory when that program is launched

393
00:15:35,940 --> 00:15:43,920
it'll launch our stager instead so we

394
00:15:41,130 --> 00:15:46,320
can find<font color="#E5E5E5"> the hijacker</font><font color="#CCCCCC"> ball point and</font>

395
00:15:43,920 --> 00:15:49,740
then when with Empire we can<font color="#E5E5E5"> create a</font>

396
00:15:46,320 --> 00:15:52,530
hijack module run it on the target

397
00:15:49,740 --> 00:15:55,110
<font color="#E5E5E5">system and when that is executed we get</font>

398
00:15:52,530 --> 00:15:56,310
our<font color="#E5E5E5"> call back so at the top here</font><font color="#CCCCCC"> you see</font>

399
00:15:55,110 --> 00:15:57,990
a little<font color="#E5E5E5"> bit of green text it's kind of</font>

400
00:15:56,310 --> 00:16:00,239
fuzzy I'm sorry<font color="#E5E5E5"> about that</font><font color="#CCCCCC"> but that's</font>

401
00:15:57,990 --> 00:16:03,720
the actual agent coming back what we did

402
00:16:00,240 --> 00:16:07,710
in this case we installed xcode on the

403
00:16:03,720 --> 00:16:10,290
<font color="#E5E5E5">target system and</font><font color="#CCCCCC"> xcode by default has</font><font color="#E5E5E5"> a</font>

404
00:16:07,710 --> 00:16:12,360
<font color="#CCCCCC">weak die lab problem so we're</font><font color="#E5E5E5"> able to</font>

405
00:16:10,290 --> 00:16:14,459
hijack that when the user double clicks

406
00:16:12,360 --> 00:16:16,650
on xcode and launches the program it

407
00:16:14,460 --> 00:16:21,990
launches our stager<font color="#E5E5E5"> and then launches</font>

408
00:16:16,650 --> 00:16:24,990
<font color="#CCCCCC">xcode and coops going to spool up a</font>

409
00:16:21,990 --> 00:16:29,600
quick demo on fishing with<font color="#CCCCCC"> the office</font>

410
00:16:24,990 --> 00:16:29,600
macro i think is pretty<font color="#CCCCCC"> cool</font>

411
00:16:32,740 --> 00:16:37,890
you guys probably won't be<font color="#CCCCCC"> able to hear</font>

412
00:16:34,660 --> 00:16:37,890
it Oh

413
00:16:40,010 --> 00:16:45,310
there we go I know the text is a little

414
00:16:42,860 --> 00:16:47,690
bit small but<font color="#CCCCCC"> okay we're starting up</font>

415
00:16:45,310 --> 00:16:50,180
Python Empire we're<font color="#E5E5E5"> going to create a</font>

416
00:16:47,690 --> 00:16:52,040
listener just like<font color="#E5E5E5"> PowerShell Empire and</font>

417
00:16:50,180 --> 00:16:54,229
have your working hours default delay

418
00:16:52,040 --> 00:16:57,349
redirection loss limit those types of

419
00:16:54,230 --> 00:16:59,990
things these<font color="#E5E5E5"> options are what are</font>

420
00:16:57,350 --> 00:17:01,940
patched into the initial agent as soon

421
00:16:59,990 --> 00:17:03,890
as an agent as stage from this

422
00:17:01,940 --> 00:17:06,670
particular listener we're<font color="#E5E5E5"> going to</font>

423
00:17:03,890 --> 00:17:11,480
create<font color="#E5E5E5"> a macro for this listener this it</font>

424
00:17:06,670 --> 00:17:15,980
this is the oh just<font color="#E5E5E5"> want to talk about</font>

425
00:17:11,480 --> 00:17:19,550
<font color="#CCCCCC">okay so an option right here set</font><font color="#E5E5E5"> Little</font>

426
00:17:15,980 --> 00:17:22,069
<font color="#E5E5E5">Snitch to false on an engagement we</font>

427
00:17:19,550 --> 00:17:23,480
found out that<font color="#E5E5E5"> some of</font><font color="#CCCCCC"> our target users</font>

428
00:17:22,069 --> 00:17:25,010
were using<font color="#E5E5E5"> Little Snitch and that</font>

429
00:17:23,480 --> 00:17:27,079
actually got us burned because we've

430
00:17:25,010 --> 00:17:29,270
lost our agent on the remote system as

431
00:17:27,079 --> 00:17:31,550
soon as it tried to<font color="#E5E5E5"> call out it alerted</font>

432
00:17:29,270 --> 00:17:33,650
the user that<font color="#CCCCCC"> our agent was calling out</font>

433
00:17:31,550 --> 00:17:36,919
through Python and they alerted their I

434
00:17:33,650 --> 00:17:39,140
our team so what we found out was that a

435
00:17:36,920 --> 00:17:42,920
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the developers don't use little</font>

436
00:17:39,140 --> 00:17:45,230
snitch and we<font color="#E5E5E5"> entered in an option to</font>

437
00:17:42,920 --> 00:17:46,760
turn that check off so it checks to see

438
00:17:45,230 --> 00:17:48,650
if<font color="#CCCCCC"> Little Snitch</font><font color="#E5E5E5"> is running little</font>

439
00:17:46,760 --> 00:17:50,660
snitch is running the agent just<font color="#CCCCCC"> dies it</font>

440
00:17:48,650 --> 00:17:51,740
won't hold<font color="#E5E5E5"> back yep prettiest we're on a</font>

441
00:17:50,660 --> 00:17:54,920
red team when we're trying to be

442
00:17:51,740 --> 00:17:56,810
stealthy we can you buy that again that

443
00:17:54,920 --> 00:17:58,580
is not exploit<font color="#CCCCCC"> votal snitch is just a</font>

444
00:17:56,810 --> 00:18:01,370
check and then killing the agent it

445
00:17:58,580 --> 00:18:03,470
keeps it from staging so here we're

446
00:18:01,370 --> 00:18:05,600
going<font color="#E5E5E5"> to take that macro paste it into</font>

447
00:18:03,470 --> 00:18:08,210
an<font color="#CCCCCC"> Excel notebook speed up just a little</font>

448
00:18:05,600 --> 00:18:10,370
bit in the interest of time you<font color="#CCCCCC"> know</font>

449
00:18:08,210 --> 00:18:11,960
paste it into just like windows right

450
00:18:10,370 --> 00:18:16,879
paste it in you see what's echoed the

451
00:18:11,960 --> 00:18:18,920
Python<font color="#E5E5E5"> I'm open this click enable macros</font>

452
00:18:16,880 --> 00:18:21,410
because I totally trust this whatever

453
00:18:18,920 --> 00:18:24,350
totally not<font color="#E5E5E5"> phishing email that we that</font>

454
00:18:21,410 --> 00:18:26,420
I sent myself and at that moment that as

455
00:18:24,350 --> 00:18:33,010
soon as that enable macros is clicked an

456
00:18:26,420 --> 00:18:33,010
agent will<font color="#CCCCCC"> be staged macros are not</font>

457
00:18:33,310 --> 00:18:40,790
cool now alex<font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to talk a bit</font>

458
00:18:36,170 --> 00:18:43,010
about<font color="#CCCCCC"> post triage appreciate it just</font>

459
00:18:40,790 --> 00:18:44,840
like on the window side the first things

460
00:18:43,010 --> 00:18:47,480
we generally go through or some type of

461
00:18:44,840 --> 00:18:49,220
situational awareness maybe some<font color="#E5E5E5"> host</font>

462
00:18:47,480 --> 00:18:53,690
surveying scripts so we're going to get

463
00:18:49,220 --> 00:18:55,250
<font color="#E5E5E5">into that part obviously</font><font color="#CCCCCC"> one of</font><font color="#E5E5E5"> the</font>

464
00:18:53,690 --> 00:18:57,380
first things that generally take place

465
00:18:55,250 --> 00:18:59,840
on<font color="#E5E5E5"> an engagement after</font><font color="#CCCCCC"> doing some basic</font>

466
00:18:57,380 --> 00:19:02,030
situational awareness is we want to<font color="#E5E5E5"> know</font>

467
00:18:59,840 --> 00:19:04,760
if we can escalate there's specific

468
00:19:02,030 --> 00:19:06,770
modules within empire that are obviously

469
00:19:04,760 --> 00:19:12,110
going<font color="#E5E5E5"> to require and elevate a context</font>

470
00:19:06,770 --> 00:19:13,370
so on the mac side you're<font color="#E5E5E5"> not going to</font>

471
00:19:12,110 --> 00:19:15,590
see as many let's say privilege

472
00:19:13,370 --> 00:19:17,600
escalation vulnerabilities out there and

473
00:19:15,590 --> 00:19:21,230
if they are they're generally updated

474
00:19:17,600 --> 00:19:22,850
pretty decently fast so just like on the

475
00:19:21,230 --> 00:19:25,480
windows side on our tradecraft where we

476
00:19:22,850 --> 00:19:28,310
generally have to either find passwords

477
00:19:25,480 --> 00:19:31,670
maybe GBP or some other type of like

478
00:19:28,310 --> 00:19:33,530
share or logon script or any type of

479
00:19:31,670 --> 00:19:36,560
like escalation method we can<font color="#E5E5E5"> go</font><font color="#CCCCCC"> through</font>

480
00:19:33,530 --> 00:19:38,990
using power up we would see the<font color="#E5E5E5"> same</font>

481
00:19:36,560 --> 00:19:41,360
<font color="#CCCCCC">kind of methodology applied on the</font><font color="#E5E5E5"> OS</font><font color="#CCCCCC"> x</font>

482
00:19:38,990 --> 00:19:44,300
side<font color="#CCCCCC"> I don't know how many OS</font><font color="#E5E5E5"> X users</font>

483
00:19:41,360 --> 00:19:45,530
are out here or Mac users but on just to

484
00:19:44,300 --> 00:19:50,060
show<font color="#CCCCCC"> of hands how many of you guys</font>

485
00:19:45,530 --> 00:19:55,460
actually run as admin on your own sex

486
00:19:50,060 --> 00:19:58,070
box<font color="#CCCCCC"> ok so few few out there some people</font>

487
00:19:55,460 --> 00:20:00,920
do separate privilege you know privilege

488
00:19:58,070 --> 00:20:03,260
separation properly some<font color="#E5E5E5"> don't on the</font>

489
00:20:00,920 --> 00:20:05,690
development side as developers obviously

490
00:20:03,260 --> 00:20:09,320
in an organization where you're

491
00:20:05,690 --> 00:20:10,940
installing pushing code and and doing

492
00:20:09,320 --> 00:20:14,300
these types of activities you would

493
00:20:10,940 --> 00:20:16,340
often see users as a local admin so that

494
00:20:14,300 --> 00:20:18,710
that<font color="#E5E5E5"> kind of gives us somewhere to start</font>

495
00:20:16,340 --> 00:20:19,850
with in this<font color="#E5E5E5"> case we have two different</font>

496
00:20:18,710 --> 00:20:21,290
<font color="#E5E5E5">ways that we're actually going to talk</font>

497
00:20:19,850 --> 00:20:23,480
on there's a few different privilege

498
00:20:21,290 --> 00:20:25,010
escalation checks you can go<font color="#CCCCCC"> through but</font>

499
00:20:23,480 --> 00:20:28,100
two that have been really<font color="#E5E5E5"> successful for</font>

500
00:20:25,010 --> 00:20:30,110
us are prompting in OS script you can

501
00:20:28,100 --> 00:20:33,230
<font color="#E5E5E5">actually call an application to prompt</font>

502
00:20:30,110 --> 00:20:35,330
the box so we've used this method on

503
00:20:33,230 --> 00:20:37,610
live engagements to gather credentials

504
00:20:35,330 --> 00:20:40,010
so the first one<font color="#CCCCCC"> is the mac out</font>

505
00:20:37,610 --> 00:20:41,659
prompting so you can tell the let's say

506
00:20:40,010 --> 00:20:43,190
app the app store to open up a

507
00:20:41,660 --> 00:20:45,170
application saying hey I need your

508
00:20:43,190 --> 00:20:47,870
password please trust me and give

509
00:20:45,170 --> 00:20:50,720
to me the second one<font color="#E5E5E5"> that we came up</font>

510
00:20:47,870 --> 00:20:52,219
with was the<font color="#E5E5E5"> alley-oop method just like</font>

511
00:20:50,720 --> 00:20:55,610
on<font color="#E5E5E5"> Windows where you can</font><font color="#CCCCCC"> Pompeii you AC</font>

512
00:20:52,220 --> 00:20:58,580
bypass a you could do this same exact

513
00:20:55,610 --> 00:21:01,159
method but<font color="#E5E5E5"> there's an interesting caveat</font>

514
00:20:58,580 --> 00:21:03,679
to this on the<font color="#E5E5E5"> OSX side there's a tool</font>

515
00:21:01,160 --> 00:21:06,110
called security with the security tool

516
00:21:03,680 --> 00:21:08,540
you can force an unlock of the keychain

517
00:21:06,110 --> 00:21:10,820
so<font color="#E5E5E5"> using this method you can prompt the</font>

518
00:21:08,540 --> 00:21:13,550
screensaver force the user to go to the

519
00:21:10,820 --> 00:21:16,040
screensaver not allow them to exit out

520
00:21:13,550 --> 00:21:18,500
take the password check it against the

521
00:21:16,040 --> 00:21:20,450
keychain if it doesn't unlock you're not

522
00:21:18,500 --> 00:21:22,580
going to get through you'll say please

523
00:21:20,450 --> 00:21:24,140
enter<font color="#CCCCCC"> your password correctly if</font><font color="#E5E5E5"> you do</font>

524
00:21:22,580 --> 00:21:26,060
enter it correctly it will<font color="#E5E5E5"> unlock</font><font color="#CCCCCC"> the</font>

525
00:21:24,140 --> 00:21:27,800
key chain and the logic will basically

526
00:21:26,060 --> 00:21:30,590
allow you to log back<font color="#CCCCCC"> into the point 0</font>

527
00:21:27,800 --> 00:21:33,020
spot back into the OS x box so that's

528
00:21:30,590 --> 00:21:34,550
kind of mean definitely not<font color="#CCCCCC"> OPSEC safe</font>

529
00:21:33,020 --> 00:21:37,310
but you can gather credentials this way

530
00:21:34,550 --> 00:21:39,680
in an evil<font color="#E5E5E5"> fashion and once those</font>

531
00:21:37,310 --> 00:21:41,330
credentials are gathered just like you

532
00:21:39,680 --> 00:21:43,790
would potentially elevate on the window

533
00:21:41,330 --> 00:21:45,949
side you could do the<font color="#E5E5E5"> same thing with</font>

534
00:21:43,790 --> 00:21:51,980
the pseudo spawned to get a root context

535
00:21:45,950 --> 00:21:53,930
agent agent so here's a horrible

536
00:21:51,980 --> 00:21:56,150
horrible screenshots that just sadly

537
00:21:53,930 --> 00:21:58,130
didn't come in well but at the top

538
00:21:56,150 --> 00:21:59,930
you're basically if you can actually see

539
00:21:58,130 --> 00:22:02,600
red at the top it actually tells you the

540
00:21:59,930 --> 00:22:04,100
tax return was<font color="#E5E5E5"> password 1234 that was</font>

541
00:22:02,600 --> 00:22:05,929
with the basic one and then actually<font color="#E5E5E5"> on</font>

542
00:22:04,100 --> 00:22:07,550
this<font color="#E5E5E5"> we'll see in the demo as well we</font>

543
00:22:05,930 --> 00:22:08,990
see too bad passwords entered and then

544
00:22:07,550 --> 00:22:11,450
obviously the correct password which

545
00:22:08,990 --> 00:22:13,370
unlock the key chain and that's just the

546
00:22:11,450 --> 00:22:18,550
kind<font color="#CCCCCC"> of a small example of that taking</font>

547
00:22:13,370 --> 00:22:21,409
<font color="#E5E5E5">place so once you</font><font color="#CCCCCC"> have your password</font>

548
00:22:18,550 --> 00:22:22,760
generally developers are inside an

549
00:22:21,410 --> 00:22:24,860
internal environment they might have

550
00:22:22,760 --> 00:22:26,510
tons of different resources that they

551
00:22:24,860 --> 00:22:29,060
have<font color="#E5E5E5"> access to they might have a</font>

552
00:22:26,510 --> 00:22:31,850
<font color="#CCCCCC">password for citrix and they might have</font>

553
00:22:29,060 --> 00:22:34,010
a password<font color="#CCCCCC"> for an employee portal that</font>

554
00:22:31,850 --> 00:22:36,560
we need<font color="#E5E5E5"> to get access to they usually</font>

555
00:22:34,010 --> 00:22:37,970
use some type of password storage it's

556
00:22:36,560 --> 00:22:40,040
too easy to just use the building key

557
00:22:37,970 --> 00:22:43,310
chain unfortunately that building

558
00:22:40,040 --> 00:22:45,649
keychain originally had some issues<font color="#CCCCCC"> with</font>

559
00:22:43,310 --> 00:22:48,800
where it's stored the master key in

560
00:22:45,650 --> 00:22:51,440
memory<font color="#E5E5E5"> so we actually poured it over</font>

561
00:22:48,800 --> 00:22:53,659
<font color="#E5E5E5">actually will</font><font color="#CCCCCC"> port it over a full part</font>

562
00:22:51,440 --> 00:22:55,580
<font color="#E5E5E5">of it from C and was actually</font><font color="#CCCCCC"> able to</font>

563
00:22:53,660 --> 00:22:58,290
<font color="#E5E5E5">implement in Python and we're basically</font>

564
00:22:55,580 --> 00:23:02,960
able to decrypt the

565
00:22:58,290 --> 00:23:05,670
keystore in memory using using yo sews

566
00:23:02,960 --> 00:23:07,980
dlc code which is<font color="#E5E5E5"> really cool but it</font>

567
00:23:05,670 --> 00:23:11,370
only applies to<font color="#CCCCCC"> OSX he owes emit so</font>

568
00:23:07,980 --> 00:23:12,990
that's kind<font color="#E5E5E5"> of kind of a hard point so</font>

569
00:23:11,370 --> 00:23:14,790
while most of us like update as normal

570
00:23:12,990 --> 00:23:17,250
users as you would see in a<font color="#CCCCCC"> windows</font>

571
00:23:14,790 --> 00:23:18,870
environment you're still seeing people

572
00:23:17,250 --> 00:23:20,640
in<font color="#CCCCCC"> Windows 7</font><font color="#E5E5E5"> let alone you're still</font>

573
00:23:18,870 --> 00:23:23,070
possibly seeing windows XP boxes out

574
00:23:20,640 --> 00:23:25,620
there so while you would think as a

575
00:23:23,070 --> 00:23:27,510
normal OS x user you might be upgrading

576
00:23:25,620 --> 00:23:30,389
on a consistent basis and this might not

577
00:23:27,510 --> 00:23:32,790
<font color="#E5E5E5">apply to you we will still</font><font color="#CCCCCC"> see this and</font>

578
00:23:30,390 --> 00:23:34,410
the next one would be the keychain

579
00:23:32,790 --> 00:23:36,480
dumping our chain breaker we actually

580
00:23:34,410 --> 00:23:38,790
<font color="#CCCCCC">did a full port of that as well that</font>

581
00:23:36,480 --> 00:23:40,200
allows for a master password or just a

582
00:23:38,790 --> 00:23:42,870
standard password that you gathered and

583
00:23:40,200 --> 00:23:45,120
you're able<font color="#CCCCCC"> to basically dumped the</font>

584
00:23:42,870 --> 00:23:49,919
entire keychain right inside<font color="#CCCCCC"> the agent</font>

585
00:23:45,120 --> 00:23:53,250
<font color="#CCCCCC">in memory the next thing obviously hash</font>

586
00:23:49,920 --> 00:23:55,980
dumping<font color="#CCCCCC"> well on OSX side the hashes are</font>

587
00:23:53,250 --> 00:23:57,720
quite strong they use quite a cipher to

588
00:23:55,980 --> 00:23:59,400
basically build this hash and it could

589
00:23:57,720 --> 00:24:02,070
take some time but we do get lucky and

590
00:23:59,400 --> 00:24:03,840
one reason why you would want<font color="#E5E5E5"> to do a</font>

591
00:24:02,070 --> 00:24:07,530
hash dump is in a corporate environment

592
00:24:03,840 --> 00:24:09,060
you may see built-in accounts that

593
00:24:07,530 --> 00:24:10,590
basically are used for remote

594
00:24:09,060 --> 00:24:16,110
administration and we'll<font color="#E5E5E5"> talk a little</font>

595
00:24:10,590 --> 00:24:17,909
bit about this more on the ssh side just

596
00:24:16,110 --> 00:24:20,189
a quick example of us just dumping some

597
00:24:17,910 --> 00:24:24,720
hashes in the hash cat ready format so

598
00:24:20,190 --> 00:24:27,000
you can easily crack them just as in<font color="#E5E5E5"> the</font>

599
00:24:24,720 --> 00:24:30,060
window side<font color="#E5E5E5"> I'm sure a lot of you have</font>

600
00:24:27,000 --> 00:24:33,330
used the<font color="#E5E5E5"> the capability of key logging</font>

601
00:24:30,060 --> 00:24:35,280
it's<font color="#E5E5E5"> it's fruitful we generally</font><font color="#CCCCCC"> can</font>

602
00:24:33,330 --> 00:24:37,050
collect a ton of information whether it

603
00:24:35,280 --> 00:24:38,670
be passwords in the background just<font color="#E5E5E5"> keep</font>

604
00:24:37,050 --> 00:24:40,560
it rolling rolling as the agents going

605
00:24:38,670 --> 00:24:41,910
<font color="#CCCCCC">all day you can gather all types</font><font color="#E5E5E5"> of</font>

606
00:24:40,560 --> 00:24:44,429
information that<font color="#E5E5E5"> maybe it will help you</font>

607
00:24:41,910 --> 00:24:45,780
in post exploitation or potentially

608
00:24:44,430 --> 00:24:48,360
gather credentials like let's say from a

609
00:24:45,780 --> 00:24:50,430
putty session or something of a sort and

610
00:24:48,360 --> 00:24:53,399
this<font color="#CCCCCC"> actually is implemented from</font><font color="#E5E5E5"> the</font>

611
00:24:50,430 --> 00:24:54,870
<font color="#E5E5E5">MSF side and is a full port</font><font color="#CCCCCC"> and it</font>

612
00:24:53,400 --> 00:24:57,570
actually<font color="#E5E5E5"> uses Ruby hopefully in the</font>

613
00:24:54,870 --> 00:25:02,280
future<font color="#E5E5E5"> we'll</font><font color="#CCCCCC"> be making a progression to</font>

614
00:24:57,570 --> 00:25:05,590
move it<font color="#E5E5E5"> to a full Python version and of</font>

615
00:25:02,280 --> 00:25:08,178
course<font color="#E5E5E5"> our screenshots</font>

616
00:25:05,590 --> 00:25:09,439
definitely helpful for identifying what

617
00:25:08,179 --> 00:25:11,989
the users up to you<font color="#CCCCCC"> for situational</font>

618
00:25:09,440 --> 00:25:13,989
awareness methods a quick<font color="#E5E5E5"> note we do</font>

619
00:25:11,989 --> 00:25:15,979
support two different<font color="#E5E5E5"> screenshot modules</font>

620
00:25:13,989 --> 00:25:17,269
we'll talk about<font color="#E5E5E5"> that in a second</font><font color="#CCCCCC"> the</font>

621
00:25:15,979 --> 00:25:19,429
first<font color="#E5E5E5"> one is the native this built in</font>

622
00:25:17,269 --> 00:25:21,200
the screenshot tool which<font color="#CCCCCC"> is a command</font>

623
00:25:19,429 --> 00:25:23,479
line option which will output to a file

624
00:25:21,200 --> 00:25:25,100
and then we also use a pure<font color="#E5E5E5"> Python</font>

625
00:25:23,479 --> 00:25:30,759
version<font color="#E5E5E5"> of it using the courts api's</font>

626
00:25:25,100 --> 00:25:37,939
call which is implemented<font color="#E5E5E5"> in</font><font color="#CCCCCC"> Python so</font>

627
00:25:30,759 --> 00:25:39,739
so again which one I actually<font color="#E5E5E5"> don't know</font>

628
00:25:37,940 --> 00:25:41,749
that answer<font color="#E5E5E5"> that one I</font><font color="#CCCCCC"> would</font><font color="#E5E5E5"> have to get</font>

629
00:25:39,739 --> 00:25:44,840
<font color="#E5E5E5">back with you so I would not be giving</font>

630
00:25:41,749 --> 00:25:45,979
you correct false information but every

631
00:25:44,840 --> 00:25:51,439
time I've<font color="#CCCCCC"> done it I've never</font><font color="#E5E5E5"> got the</font>

632
00:25:45,979 --> 00:25:53,479
sound as<font color="#CCCCCC"> I saying before the environment</font>

633
00:25:51,440 --> 00:25:56,389
can dictate heavily on what<font color="#CCCCCC"> tool set you</font>

634
00:25:53,479 --> 00:25:58,129
use if you're<font color="#E5E5E5"> an environment like we've</font>

635
00:25:56,389 --> 00:25:59,539
<font color="#CCCCCC">seen before</font><font color="#E5E5E5"> with carbon black with hips</font>

636
00:25:58,129 --> 00:26:01,519
and devices they will catch these

637
00:25:59,539 --> 00:26:03,229
building methods and you<font color="#CCCCCC"> could</font>

638
00:26:01,519 --> 00:26:04,970
potentially<font color="#CCCCCC"> get flagged very easily an</font>

639
00:26:03,229 --> 00:26:06,679
environment that's potentially being

640
00:26:04,970 --> 00:26:08,090
monitored so that's something that you

641
00:26:06,679 --> 00:26:09,679
have to<font color="#E5E5E5"> identify in the beginning of the</font>

642
00:26:08,090 --> 00:26:12,049
host survey of what tool sets that

643
00:26:09,679 --> 00:26:13,369
you're willing<font color="#E5E5E5"> to use so you don't make</font>

644
00:26:12,049 --> 00:26:16,330
the mistake of using a built-in screen

645
00:26:13,369 --> 00:26:20,178
shot as<font color="#E5E5E5"> well as PV copy for a clipboard</font>

646
00:26:16,330 --> 00:26:23,389
and this actually leads us into

647
00:26:20,179 --> 00:26:26,320
clipboard theft a really solid way of

648
00:26:23,389 --> 00:26:28,728
potentially grabbing passwords from

649
00:26:26,320 --> 00:26:30,099
let's say like LastPass instance where

650
00:26:28,729 --> 00:26:32,239
they are using copy and paste

651
00:26:30,099 --> 00:26:33,950
consistently cool thing about this is

652
00:26:32,239 --> 00:26:35,919
<font color="#E5E5E5">you can basically set it up on a timed</font>

653
00:26:33,950 --> 00:26:37,879
interval let it run for about an hour

654
00:26:35,919 --> 00:26:39,349
<font color="#E5E5E5">and you can gather all the credentials</font>

655
00:26:37,879 --> 00:26:42,259
that you need while they're doing<font color="#E5E5E5"> the</font>

656
00:26:39,349 --> 00:26:45,889
work<font color="#CCCCCC"> and this is also like I mentioned</font>

657
00:26:42,259 --> 00:26:49,460
before this could also be signature from

658
00:26:45,889 --> 00:26:50,748
the PB copy command line version just a

659
00:26:49,460 --> 00:26:53,529
small<font color="#E5E5E5"> example of it actually taking</font>

660
00:26:50,749 --> 00:26:56,119
place<font color="#E5E5E5"> and just different times amps</font>

661
00:26:53,529 --> 00:26:57,940
<font color="#CCCCCC">alright demo time yeah now we're</font><font color="#E5E5E5"> going</font>

662
00:26:56,119 --> 00:27:02,970
<font color="#CCCCCC">to do alex is going to talk to</font>

663
00:26:57,940 --> 00:27:02,970
quick demo on<font color="#CCCCCC"> host-based</font>

664
00:27:07,610 --> 00:27:11,928
yeah so we're just going<font color="#E5E5E5"> to go</font><font color="#CCCCCC"> through a</font>

665
00:27:09,530 --> 00:27:14,120
few of the three of the actual things we

666
00:27:11,929 --> 00:27:14,960
just talked<font color="#CCCCCC"> about just like I want</font><font color="#E5E5E5"> to</font>

667
00:27:14,120 --> 00:27:15,949
<font color="#E5E5E5">actually show you this one</font><font color="#CCCCCC"> because it's</font>

668
00:27:14,960 --> 00:27:18,590
quite<font color="#E5E5E5"> interesting which</font><font color="#CCCCCC"> is the</font>

669
00:27:15,950 --> 00:27:20,920
screensaver alley-oop I'm actually just

670
00:27:18,590 --> 00:27:23,449
going to set this to a small X account

671
00:27:20,920 --> 00:27:25,790
which you can specify so you don't force

672
00:27:23,450 --> 00:27:27,860
the user to consistently like go for<font color="#E5E5E5"> 15</font>

673
00:27:25,790 --> 00:27:29,780
times straight depending<font color="#CCCCCC"> on what you</font>

674
00:27:27,860 --> 00:27:30,979
would feel comfortable doing as you can

675
00:27:29,780 --> 00:27:33,049
see actually brings up the screensaver

676
00:27:30,980 --> 00:27:36,320
to the person it's not<font color="#E5E5E5"> the same exact</font>

677
00:27:33,049 --> 00:27:37,730
login prompt but it may be<font color="#CCCCCC"> trick in</font>

678
00:27:36,320 --> 00:27:38,870
matric them but it will definitely force

679
00:27:37,730 --> 00:27:43,100
them to potentially give you<font color="#E5E5E5"> their</font>

680
00:27:38,870 --> 00:27:44,449
credentials it does lock the keychain so

681
00:27:43,100 --> 00:27:46,219
when the user comes back in for any

682
00:27:44,450 --> 00:27:48,260
application using that keychain they may

683
00:27:46,220 --> 00:27:50,929
actually have to go back and unlock the

684
00:27:48,260 --> 00:27:53,750
key chain once credentials are actually

685
00:27:50,929 --> 00:27:55,490
gathered I servers take a time I missed

686
00:27:53,750 --> 00:27:57,740
I actually removed the pseudo spawn but

687
00:27:55,490 --> 00:28:01,160
I'm<font color="#E5E5E5"> actually changing my agent over to</font>

688
00:27:57,740 --> 00:28:03,230
the to a different agent that's on my

689
00:28:01,160 --> 00:28:07,000
secondary box and<font color="#CCCCCC"> i'm actually</font><font color="#E5E5E5"> going to</font>

690
00:28:03,230 --> 00:28:08,990
<font color="#CCCCCC">use a collection module for gathering</font>

691
00:28:07,000 --> 00:28:13,280
for the keychain that we talked about

692
00:28:08,990 --> 00:28:15,440
before in this case it's a 10 not 11<font color="#CCCCCC"> OSX</font>

693
00:28:13,280 --> 00:28:17,240
instance so<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> not going to use the</font>

694
00:28:15,440 --> 00:28:19,309
keychain dump but I'm used the chain

695
00:28:17,240 --> 00:28:23,809
breaker module which allows<font color="#CCCCCC"> me to dump</font>

696
00:28:19,309 --> 00:28:26,030
the passwords basically forensically

697
00:28:23,809 --> 00:28:28,760
sound target side and again with that

698
00:28:26,030 --> 00:28:30,889
the general tradecraft is prompt the

699
00:28:28,760 --> 00:28:33,350
user for the<font color="#CCCCCC"> password use that to then</font>

700
00:28:30,890 --> 00:28:34,910
respawn a high integrity or<font color="#CCCCCC"> sudu agent</font>

701
00:28:33,350 --> 00:28:37,850
so you can do<font color="#CCCCCC"> the interesting post</font>

702
00:28:34,910 --> 00:28:41,330
exploitation options or effects like

703
00:28:37,850 --> 00:28:45,709
hash<font color="#CCCCCC"> numpy so in a second here</font><font color="#E5E5E5"> we should</font>

704
00:28:41,330 --> 00:28:48,290
hopefully get some credentials back can

705
00:28:45,710 --> 00:28:49,610
you<font color="#E5E5E5"> see the upset check you</font><font color="#CCCCCC"> know so</font>

706
00:28:48,290 --> 00:28:52,250
we're doing<font color="#E5E5E5"> things</font><font color="#CCCCCC"> that may or</font><font color="#E5E5E5"> may not</font>

707
00:28:49,610 --> 00:28:55,189
prompt the user or modify<font color="#E5E5E5"> the system so</font>

708
00:28:52,250 --> 00:28:57,200
it's just<font color="#E5E5E5"> a nice little reminder once</font>

709
00:28:55,190 --> 00:28:59,230
you comes back it<font color="#E5E5E5"> should spit out all</font>

710
00:28:57,200 --> 00:29:01,850
the actual private<font color="#CCCCCC"> keys certificates</font>

711
00:28:59,230 --> 00:29:03,169
passwords the whole<font color="#E5E5E5"> shebang and this</font>

712
00:29:01,850 --> 00:29:04,790
actually works for<font color="#E5E5E5"> not only the login</font>

713
00:29:03,169 --> 00:29:07,850
keychain but also the system keychain

714
00:29:04,790 --> 00:29:09,649
for messages for the<font color="#E5E5E5"> I message in yahoo</font>

715
00:29:07,850 --> 00:29:12,379
accounts and all that stuff so that's

716
00:29:09,650 --> 00:29:14,390
quite<font color="#E5E5E5"> cool capability of this once</font>

717
00:29:12,380 --> 00:29:16,640
passwords are gathered we know we have a

718
00:29:14,390 --> 00:29:17,990
proper password remember<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you do a</font>

719
00:29:16,640 --> 00:29:20,540
pseudo spawn and you mess up the

720
00:29:17,990 --> 00:29:22,940
password you can potentially be flagging

721
00:29:20,540 --> 00:29:24,350
so just keep that in mind so I like<font color="#CCCCCC"> to</font>

722
00:29:22,940 --> 00:29:27,050
actually test this must have ever done

723
00:29:24,350 --> 00:29:28,100
that that's a really cool like thing

724
00:29:27,050 --> 00:29:29,990
about the<font color="#E5E5E5"> keychain is you can actually</font>

725
00:29:28,100 --> 00:29:32,770
<font color="#E5E5E5">test it against the keychain and it does</font>

726
00:29:29,990 --> 00:29:34,640
generate a log but it's not generally

727
00:29:32,770 --> 00:29:36,410
signature Don and this is actually<font color="#E5E5E5"> just</font>

728
00:29:34,640 --> 00:29:38,720
<font color="#E5E5E5">the quick hash dump like we talked about</font>

729
00:29:36,410 --> 00:29:45,560
before outputting and this is actually

730
00:29:38,720 --> 00:29:47,480
<font color="#CCCCCC">the end of the denim grew up Mitch so</font>

731
00:29:45,560 --> 00:29:50,030
with that hash dump what we what we did

732
00:29:47,480 --> 00:29:53,750
on a client engagement was dumped the

733
00:29:50,030 --> 00:29:55,220
hashes crack the password and since it's

734
00:29:53,750 --> 00:29:57,860
in a corporate environment they use the

735
00:29:55,220 --> 00:30:00,050
same<font color="#E5E5E5"> password and had SSH enabled on all</font>

736
00:29:57,860 --> 00:30:03,500
of the hosts so we were then able to

737
00:30:00,050 --> 00:30:05,030
laterally spread to every Hills we could

738
00:30:03,500 --> 00:30:07,070
get into network situational awareness

739
00:30:05,030 --> 00:30:09,139
what do we<font color="#E5E5E5"> do once we're on the host</font>

740
00:30:07,070 --> 00:30:14,149
what's<font color="#E5E5E5"> around us what can we see what</font>

741
00:30:09,140 --> 00:30:17,800
<font color="#CCCCCC">can we do and yes OS X</font><font color="#E5E5E5"> is on the domain</font>

742
00:30:14,150 --> 00:30:20,450
to in our engagements we found that

743
00:30:17,800 --> 00:30:22,490
admins need to admin they need to

744
00:30:20,450 --> 00:30:23,870
enforce corporate policy the group

745
00:30:22,490 --> 00:30:27,170
policy they have to manage their

746
00:30:23,870 --> 00:30:30,229
resources their users objects advertise

747
00:30:27,170 --> 00:30:32,720
resources such as printers and they

748
00:30:30,230 --> 00:30:36,880
benefit<font color="#CCCCCC"> from the single sign-on access</font>

749
00:30:32,720 --> 00:30:36,880
to Active Directory through Kerberos

750
00:30:37,300 --> 00:30:40,850
it's pretty easy to set up<font color="#E5E5E5"> I'm just</font>

751
00:30:39,650 --> 00:30:44,300
showing a picture<font color="#E5E5E5"> of the directory</font>

752
00:30:40,850 --> 00:30:48,620
utility<font color="#E5E5E5"> in OS X and how it attaches to</font>

753
00:30:44,300 --> 00:30:50,570
the domain you see the option for allow

754
00:30:48,620 --> 00:30:53,060
administration by typically its domain

755
00:30:50,570 --> 00:30:54,590
admins and enterprise admins<font color="#E5E5E5"> he found</font>

756
00:30:53,060 --> 00:31:00,200
other users in there maybe<font color="#E5E5E5"> you could</font>

757
00:30:54,590 --> 00:31:03,169
start targeting them OS X and LDAP OS X

758
00:31:00,200 --> 00:31:06,380
has a and most Linux distributions<font color="#CCCCCC"> have</font>

759
00:31:03,170 --> 00:31:09,260
a tool built in called ldap search this

760
00:31:06,380 --> 00:31:11,210
<font color="#E5E5E5">is what we use in Empire to bind to</font>

761
00:31:09,260 --> 00:31:13,070
active directory and then perform the

762
00:31:11,210 --> 00:31:16,010
search that we're<font color="#E5E5E5"> trying to do and get</font>

763
00:31:13,070 --> 00:31:17,679
the data back this bottom line here is

764
00:31:16,010 --> 00:31:21,260
<font color="#E5E5E5">just a quick way to find out where the</font>

765
00:31:17,680 --> 00:31:25,880
domain controller is and or LDAP server

766
00:31:21,260 --> 00:31:28,460
is in the network so how many<font color="#E5E5E5"> people</font>

767
00:31:25,880 --> 00:31:31,400
have used<font color="#CCCCCC"> Power View powershell how are</font>

768
00:31:28,460 --> 00:31:35,810
you<font color="#E5E5E5"> awesome good to see you guys don't</font>

769
00:31:31,400 --> 00:31:37,310
count you're all on our team<font color="#CCCCCC"> so we want</font>

770
00:31:35,810 --> 00:31:41,720
to<font color="#E5E5E5"> deport some of those features of</font>

771
00:31:37,310 --> 00:31:43,639
Power View over to the Empire Python

772
00:31:41,720 --> 00:31:46,270
version as well because even though

773
00:31:43,640 --> 00:31:48,470
we're operating<font color="#E5E5E5"> in an OSX environment</font>

774
00:31:46,270 --> 00:31:51,139
Active Directory can provide us with a

775
00:31:48,470 --> 00:31:53,660
lot<font color="#E5E5E5"> of information perhaps what</font>

776
00:31:51,140 --> 00:31:55,730
computers to target next<font color="#E5E5E5"> what users to</font>

777
00:31:53,660 --> 00:31:58,820
target next<font color="#E5E5E5"> we talked about</font><font color="#CCCCCC"> bloodhound</font>

778
00:31:55,730 --> 00:32:01,670
finding finding pass so we're going to

779
00:31:58,820 --> 00:32:05,350
go<font color="#CCCCCC"> along that that route to find our</font>

780
00:32:01,670 --> 00:32:07,490
next targets with a Power View style

781
00:32:05,350 --> 00:32:11,360
unfortunately there's caveat to this it

782
00:32:07,490 --> 00:32:14,300
does create a log on entry and Event

783
00:32:11,360 --> 00:32:17,949
Viewer for every time an ldap connection

784
00:32:14,300 --> 00:32:17,950
connects to active directory

785
00:32:19,220 --> 00:32:24,020
some of the things we poured it over get

786
00:32:21,710 --> 00:32:25,580
computers tell us what's what computers

787
00:32:24,020 --> 00:32:27,950
are on the network what domain

788
00:32:25,580 --> 00:32:29,980
controllers are on the network our file

789
00:32:27,950 --> 00:32:33,289
servers those might be good places to

790
00:32:29,980 --> 00:32:36,740
hide because they have high uptime group

791
00:32:33,289 --> 00:32:38,990
memberships group members what groups

792
00:32:36,740 --> 00:32:41,960
are out there a lot<font color="#E5E5E5"> of times stuff are</font>

793
00:32:38,990 --> 00:32:44,600
nested in Oh use get user information

794
00:32:41,960 --> 00:32:47,600
<font color="#E5E5E5">actually just grabs all the information</font>

795
00:32:44,600 --> 00:32:49,370
<font color="#E5E5E5">for a specific user and we can list out</font>

796
00:32:47,600 --> 00:32:52,280
all of the users in active directory as

797
00:32:49,370 --> 00:32:54,469
well one thing<font color="#CCCCCC"> that we found</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> we</font>

798
00:32:52,280 --> 00:32:57,379
haven't<font color="#E5E5E5"> been able to do it is enumerate</font>

799
00:32:54,470 --> 00:32:59,210
session data remotely from OS X so

800
00:32:57,380 --> 00:33:00,830
unlike if you saw the Bloodhound stuff

801
00:32:59,210 --> 00:33:03,380
earlier we could figure out who's logged

802
00:33:00,830 --> 00:33:06,620
in where we<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> that ability</font><font color="#E5E5E5"> in</font>

803
00:33:03,380 --> 00:33:10,130
<font color="#E5E5E5">Empire right now if any of you know</font><font color="#CCCCCC"> how</font>

804
00:33:06,620 --> 00:33:12,918
<font color="#E5E5E5">to do that come see so this</font><font color="#CCCCCC"> is a shot of</font>

805
00:33:10,130 --> 00:33:15,559
<font color="#E5E5E5">Power View OS X style basically we're</font>

806
00:33:12,919 --> 00:33:17,390
doing a situational awareness trying to

807
00:33:15,559 --> 00:33:20,000
<font color="#E5E5E5">get the computers that</font><font color="#CCCCCC"> are in active</font>

808
00:33:17,390 --> 00:33:22,370
directory we set our by name this time

809
00:33:20,000 --> 00:33:25,400
<font color="#CCCCCC">we're going</font><font color="#E5E5E5"> to use the user J Frank at</font>

810
00:33:22,370 --> 00:33:27,580
<font color="#CCCCCC">hack me calm of</font><font color="#E5E5E5"> course he's a manager so</font>

811
00:33:25,400 --> 00:33:29,990
his passwords management for life<font color="#E5E5E5"> and</font>

812
00:33:27,580 --> 00:33:31,428
the ldap address that's a domain

813
00:33:29,990 --> 00:33:33,140
controller we're going to execute and it

814
00:33:31,429 --> 00:33:34,400
pops out just a nice list of all the

815
00:33:33,140 --> 00:33:40,100
computer objects that are in active

816
00:33:34,400 --> 00:33:42,559
directory all from OS<font color="#CCCCCC"> x over pass the</font>

817
00:33:40,100 --> 00:33:47,629
hash this is some pretty slick research

818
00:33:42,559 --> 00:33:50,658
done by<font color="#E5E5E5"> gentle kiwi and obscure sec and</font>

819
00:33:47,630 --> 00:33:53,330
then we ported<font color="#CCCCCC"> that over a tweet a guy</font>

820
00:33:50,659 --> 00:33:55,400
passing the hash he actually did this in

821
00:33:53,330 --> 00:33:57,740
OS<font color="#E5E5E5"> X and then we figured out we can port</font>

822
00:33:55,400 --> 00:34:00,140
this<font color="#E5E5E5"> into our Empire basically what this</font>

823
00:33:57,740 --> 00:34:02,090
allows us<font color="#CCCCCC"> to do is if we grab hashes on</font>

824
00:34:00,140 --> 00:34:04,159
the domain we can upgrade those two

825
00:34:02,090 --> 00:34:06,320
Kerberos tickets and then authenticate

826
00:34:04,159 --> 00:34:09,889
in anywhere in the domain with that hash

827
00:34:06,320 --> 00:34:12,230
without having the password some of the

828
00:34:09,889 --> 00:34:14,690
utilities that are with kerberos or<font color="#CCCCCC"> K in</font>

829
00:34:12,230 --> 00:34:16,550
it k lists on<font color="#CCCCCC"> the target to see what</font>

830
00:34:14,690 --> 00:34:18,980
Kerberos credentials<font color="#CCCCCC"> exists on that</font>

831
00:34:16,550 --> 00:34:20,570
target<font color="#E5E5E5"> and then you can use K destroy if</font>

832
00:34:18,980 --> 00:34:26,119
we want to remove any credentials from

833
00:34:20,570 --> 00:34:29,359
the target<font color="#E5E5E5"> site ouch</font><font color="#CCCCCC"> alright this fuzzy</font>

834
00:34:26,119 --> 00:34:31,369
blob is over pass the hash basically we

835
00:34:29,359 --> 00:34:33,980
<font color="#CCCCCC">have an T hash that we found</font>

836
00:34:31,369 --> 00:34:35,659
that were we run over pass the hash it

837
00:34:33,980 --> 00:34:38,179
generates us a Kerberos ticket and then

838
00:34:35,659 --> 00:34:40,490
<font color="#E5E5E5">we can Ellis the domain controller cool</font>

839
00:34:38,179 --> 00:34:43,399
now<font color="#E5E5E5"> steve is going to talk through a</font>

840
00:34:40,489 --> 00:34:45,439
cool little demo with some domain and

841
00:34:43,399 --> 00:34:52,399
<font color="#E5E5E5">immer ation this will be the last demo</font>

842
00:34:45,440 --> 00:34:54,829
for<font color="#CCCCCC"> the talk so we've got our Empire</font>

843
00:34:52,399 --> 00:34:56,779
server running we've got one listener

844
00:34:54,829 --> 00:35:00,079
one agent currently active you<font color="#E5E5E5"> can see</font>

845
00:34:56,779 --> 00:35:03,319
it's on a<font color="#CCCCCC"> Mac box internal IP address</font>

846
00:35:00,079 --> 00:35:09,190
the user J Frank we're<font color="#E5E5E5"> going to use a</font>

847
00:35:03,319 --> 00:35:12,230
module to pull out pulling out here

848
00:35:09,190 --> 00:35:13,789
ghetto use i believe so there's a list

849
00:35:12,230 --> 00:35:15,619
if you tab complete through here

850
00:35:13,789 --> 00:35:18,529
everything is<font color="#CCCCCC"> tab completa belittle list</font>

851
00:35:15,619 --> 00:35:20,180
what's next we're going<font color="#E5E5E5"> to do group</font>

852
00:35:18,529 --> 00:35:22,490
members because we're<font color="#E5E5E5"> going to find who</font>

853
00:35:20,180 --> 00:35:23,960
the domain admins are we want to know

854
00:35:22,490 --> 00:35:27,470
where our domain admins are so we can

855
00:35:23,960 --> 00:35:29,630
start targeting them enter our

856
00:35:27,470 --> 00:35:33,589
authentication stuff to bind with ldap

857
00:35:29,630 --> 00:35:35,660
search execute and then it pulls back

858
00:35:33,589 --> 00:35:40,788
all the users of the domain

859
00:35:35,660 --> 00:35:48,259
administrator group all from OS<font color="#E5E5E5"> X which</font>

860
00:35:40,789 --> 00:35:49,730
<font color="#CCCCCC">is pretty cool now</font><font color="#E5E5E5"> I think as though</font>

861
00:35:48,259 --> 00:35:52,759
ease now we're going to get on to

862
00:35:49,730 --> 00:35:57,200
enumerate ago use a lot<font color="#CCCCCC"> of times there's</font>

863
00:35:52,759 --> 00:36:01,480
some juicy information in there<font color="#E5E5E5"> all</font>

864
00:35:57,200 --> 00:36:01,480
<font color="#E5E5E5">right thought we were wigging out</font>

865
00:36:01,610 --> 00:36:06,510
same thing we want<font color="#E5E5E5"> to use module</font><font color="#CCCCCC"> it's</font>

866
00:36:04,980 --> 00:36:09,000
<font color="#E5E5E5">tab completa</font><font color="#CCCCCC"> bewitch start typing</font>

867
00:36:06,510 --> 00:36:13,110
situational awareness tab complete out

868
00:36:09,000 --> 00:36:16,369
and pull out information for the OU's in

869
00:36:13,110 --> 00:36:16,369
the<font color="#E5E5E5"> Active Directory schema</font>

870
00:36:23,690 --> 00:36:28,520
so now we have<font color="#E5E5E5"> a no you for domain</font>

871
00:36:26,210 --> 00:36:31,130
controllers to service account o use and

872
00:36:28,520 --> 00:36:32,720
the IT admin no use so then we can take

873
00:36:31,130 --> 00:36:35,510
<font color="#CCCCCC">that information and perhaps start</font>

874
00:36:32,720 --> 00:36:37,129
enumerator to gain some more situational

875
00:36:35,510 --> 00:36:44,619
awareness on where we want to go next<font color="#E5E5E5"> in</font>

876
00:36:37,130 --> 00:36:47,560
the network still me<font color="#E5E5E5"> alright cool</font>

877
00:36:44,619 --> 00:36:49,940
lateral movement we started this off by

878
00:36:47,560 --> 00:36:53,328
pressing that lateral movement is hard

879
00:36:49,940 --> 00:36:56,290
on the<font color="#E5E5E5"> OSX side</font><font color="#CCCCCC"> or in Linux side windows</font>

880
00:36:53,329 --> 00:37:00,140
we have great tools like pass the<font color="#CCCCCC"> hash</font>

881
00:36:56,290 --> 00:37:02,509
wmi we can PS exec win RM if it's

882
00:37:00,140 --> 00:37:05,509
enabled we can remote desktop and just

883
00:37:02,510 --> 00:37:07,490
log right in if we need to<font color="#E5E5E5"> OSX</font>

884
00:37:05,510 --> 00:37:10,670
disappoints us a lot on<font color="#E5E5E5"> this front</font>

885
00:37:07,490 --> 00:37:13,220
there's typically<font color="#CCCCCC"> SSH and foremost</font>

886
00:37:10,670 --> 00:37:15,349
<font color="#CCCCCC">standalone systems SSH is disabled by</font>

887
00:37:13,220 --> 00:37:17,859
default a lot of your nod your heads on

888
00:37:15,349 --> 00:37:20,329
that one but in a corporate environment

889
00:37:17,859 --> 00:37:24,319
admins<font color="#CCCCCC"> gotta admin so they typically</font>

890
00:37:20,329 --> 00:37:27,200
have ssh enabled there is a win<font color="#CCCCCC"> exe</font>

891
00:37:24,319 --> 00:37:29,119
package it through homebrew but on a

892
00:37:27,200 --> 00:37:33,078
client engagement we're not going to

893
00:37:29,119 --> 00:37:35,329
install stuff and you know enter more

894
00:37:33,079 --> 00:37:38,300
vulnerable services on<font color="#CCCCCC"> the target host</font>

895
00:37:35,329 --> 00:37:40,220
if we can<font color="#E5E5E5"> keep from it so it would be</font>

896
00:37:38,300 --> 00:37:41,630
nice if we<font color="#E5E5E5"> can pour this over we've been</font>

897
00:37:40,220 --> 00:37:45,348
working on it<font color="#E5E5E5"> haven't had any success</font>

898
00:37:41,630 --> 00:37:48,290
yet to have a win exe type thing to do

899
00:37:45,349 --> 00:37:50,750
pass<font color="#CCCCCC"> the hash on the OSX side</font><font color="#E5E5E5"> hopefully</font>

900
00:37:48,290 --> 00:37:52,940
we'll have that in the future we do have

901
00:37:50,750 --> 00:37:54,710
<font color="#E5E5E5">Empire modules we actually have an</font><font color="#CCCCCC"> SSH</font>

902
00:37:52,940 --> 00:37:57,109
launcher module so what it'll do is

903
00:37:54,710 --> 00:38:00,200
authenticate to the remote system<font color="#CCCCCC"> it'll</font>

904
00:37:57,109 --> 00:38:02,720
<font color="#E5E5E5">run Python in memory with our watcher</font>

905
00:38:00,200 --> 00:38:04,169
strength call back grab bar stager<font color="#E5E5E5"> and</font>

906
00:38:02,720 --> 00:38:09,089
execute it in memory

907
00:38:04,170 --> 00:38:10,650
<font color="#E5E5E5">ghost we also</font><font color="#CCCCCC"> have an SSH command where</font>

908
00:38:09,089 --> 00:38:12,540
we can run a command on the remote

909
00:38:10,650 --> 00:38:14,099
system and then just hit the output back

910
00:38:12,540 --> 00:38:15,869
so if you just<font color="#E5E5E5"> wanted to check pearl</font>

911
00:38:14,099 --> 00:38:17,250
version do you<font color="#E5E5E5"> named tech a or something</font>

912
00:38:15,869 --> 00:38:20,630
like that you<font color="#CCCCCC"> could run that and then</font>

913
00:38:17,250 --> 00:38:23,069
get the information back all through our

914
00:38:20,630 --> 00:38:25,920
web service exploitation we've actually

915
00:38:23,069 --> 00:38:29,190
used this to pivot to the windows side

916
00:38:25,920 --> 00:38:32,460
from the<font color="#CCCCCC"> OS x side one example</font><font color="#E5E5E5"> of that</font>

917
00:38:29,190 --> 00:38:35,819
is to exploit jboss my favorite thing

918
00:38:32,460 --> 00:38:39,480
ever<font color="#E5E5E5"> and we can pass that exploit to an</font>

919
00:38:35,819 --> 00:38:44,670
empire sir powershell at night so here

920
00:38:39,480 --> 00:38:47,430
we've loaded up the jboss exploit module

921
00:38:44,670 --> 00:38:50,299
and what that does is a veces the jboss

922
00:38:47,430 --> 00:38:52,589
flaw in the jmx and volker servlet and

923
00:38:50,299 --> 00:38:53,790
instead<font color="#CCCCCC"> of executing python on the</font>

924
00:38:52,589 --> 00:38:56,578
remote system because it's running

925
00:38:53,790 --> 00:38:58,740
<font color="#E5E5E5">windows it execute our stager that we</font>

926
00:38:56,579 --> 00:39:00,359
loaded<font color="#CCCCCC"> up for powershell empire and we</font>

927
00:38:58,740 --> 00:39:02,098
get it all back<font color="#CCCCCC"> and now have pivoted to</font>

928
00:39:00,359 --> 00:39:04,290
the windows side so we're starting<font color="#E5E5E5"> to</font>

929
00:39:02,099 --> 00:39:06,059
get into mixed environments and we'll

930
00:39:04,290 --> 00:39:09,920
talk about that a<font color="#CCCCCC"> little bit</font><font color="#E5E5E5"> and what</font>

931
00:39:06,059 --> 00:39:09,920
we're going<font color="#CCCCCC"> to do to fix</font><font color="#E5E5E5"> that problem</font>

932
00:39:11,540 --> 00:39:18,800
there you go staying<font color="#E5E5E5"> on the box yep so</font>

933
00:39:14,930 --> 00:39:21,680
the<font color="#E5E5E5"> next obvious you know progression in</font>

934
00:39:18,800 --> 00:39:23,690
an<font color="#CCCCCC"> opera operation is to potentially</font>

935
00:39:21,680 --> 00:39:24,830
install persistence so this<font color="#E5E5E5"> point you've</font>

936
00:39:23,690 --> 00:39:26,540
gathered all your credentials you need

937
00:39:24,830 --> 00:39:28,100
you've gathered all the elevated context

938
00:39:26,540 --> 00:39:31,610
you need now you<font color="#E5E5E5"> just need to know</font><font color="#CCCCCC"> how</font>

939
00:39:28,100 --> 00:39:34,250
to stay overnight just<font color="#CCCCCC"> like you were</font>

940
00:39:31,610 --> 00:39:36,650
with a<font color="#CCCCCC"> Mac they're</font><font color="#E5E5E5"> often they're often</font>

941
00:39:34,250 --> 00:39:40,340
laptops so persistence turned out to be

942
00:39:36,650 --> 00:39:42,740
a<font color="#E5E5E5"> really critical thing for</font><font color="#CCCCCC"> us so on the</font>

943
00:39:40,340 --> 00:39:44,360
window side there<font color="#CCCCCC"> is so much research</font>

944
00:39:42,740 --> 00:39:47,509
out there and there are so many<font color="#E5E5E5"> places</font>

945
00:39:44,360 --> 00:39:50,600
to hide the registry itself I don't know

946
00:39:47,510 --> 00:39:53,260
if anybody truly understands it there's

947
00:39:50,600 --> 00:39:55,370
tons<font color="#E5E5E5"> of research on women dll hijacks</font>

948
00:39:53,260 --> 00:39:57,800
<font color="#E5E5E5">backdoored</font><font color="#CCCCCC"> account startup folders</font>

949
00:39:55,370 --> 00:40:01,460
there's tons of ways to<font color="#CCCCCC"> go about staying</font>

950
00:39:57,800 --> 00:40:03,820
but also on this front OSX actually

951
00:40:01,460 --> 00:40:05,870
surprised us quite a bit there's a few

952
00:40:03,820 --> 00:40:08,480
really popular public you know

953
00:40:05,870 --> 00:40:10,339
persistence methods out there mainly

954
00:40:08,480 --> 00:40:13,340
<font color="#CCCCCC">because it</font><font color="#E5E5E5"> is at the end</font><font color="#CCCCCC"> of the day a</font>

955
00:40:10,340 --> 00:40:14,690
NYX device so<font color="#E5E5E5"> you can use cron tabs they</font>

956
00:40:13,340 --> 00:40:17,240
have their own building login hooks

957
00:40:14,690 --> 00:40:18,890
<font color="#E5E5E5">Damien style of hijacking all these can</font>

958
00:40:17,240 --> 00:40:20,750
be really used and effective on

959
00:40:18,890 --> 00:40:23,270
<font color="#E5E5E5">engagement the first one we'll start</font>

960
00:40:20,750 --> 00:40:27,010
with what is login hooks login hooks are

961
00:40:23,270 --> 00:40:30,020
something Mac developers in place I

962
00:40:27,010 --> 00:40:32,240
think it was<font color="#E5E5E5"> almost in 10.1 or something</font>

963
00:40:30,020 --> 00:40:35,270
of the sort it's actually technically

964
00:40:32,240 --> 00:40:37,609
now deprecated as in its unsupported

965
00:40:35,270 --> 00:40:39,830
functionality some of the<font color="#CCCCCC"> reasons why</font>

966
00:40:37,610 --> 00:40:41,810
you may not want to<font color="#E5E5E5"> use this is the fact</font>

967
00:40:39,830 --> 00:40:43,870
that it<font color="#CCCCCC"> is blocking so if you fail or</font><font color="#E5E5E5"> if</font>

968
00:40:41,810 --> 00:40:46,400
your persistence module fails to execute

969
00:40:43,870 --> 00:40:49,190
you could<font color="#CCCCCC"> potentially stop the user from</font>

970
00:40:46,400 --> 00:40:50,510
logging in the<font color="#CCCCCC"> one reason why this may</font>

971
00:40:49,190 --> 00:40:52,550
be successful for you is let's say you

972
00:40:50,510 --> 00:40:55,330
don't have root access yet<font color="#CCCCCC"> may be</font>

973
00:40:52,550 --> 00:41:00,650
staying in user context is the way to go

974
00:40:55,330 --> 00:41:02,810
so in this case any user or any user on

975
00:41:00,650 --> 00:41:05,780
the<font color="#E5E5E5"> box can be applied at login hook</font>

976
00:41:02,810 --> 00:41:07,520
another unfortunate<font color="#E5E5E5"> khana bout this is</font>

977
00:41:05,780 --> 00:41:09,380
you<font color="#E5E5E5"> can only have one login hook per</font>

978
00:41:07,520 --> 00:41:11,990
user so if that's already being used

979
00:41:09,380 --> 00:41:14,330
your kind of out of luck the next thing

980
00:41:11,990 --> 00:41:16,459
<font color="#CCCCCC">that Steve</font><font color="#E5E5E5"> actually used quite often was</font>

981
00:41:14,330 --> 00:41:19,340
cron tabs in case you want to begin

982
00:41:16,460 --> 00:41:22,880
every hour well you can make that<font color="#CCCCCC"> happen</font>

983
00:41:19,340 --> 00:41:24,200
no problem so same as you would with any

984
00:41:22,880 --> 00:41:25,430
other one you can set up an applescript

985
00:41:24,200 --> 00:41:27,470
binary

986
00:41:25,430 --> 00:41:28,819
or just even a bash or<font color="#E5E5E5"> Python script and</font>

987
00:41:27,470 --> 00:41:31,490
you could have<font color="#CCCCCC"> it executes right from</font>

988
00:41:28,819 --> 00:41:33,020
the crontab itself time to execution of

989
00:41:31,490 --> 00:41:34,520
payload and it's great<font color="#E5E5E5"> for continued</font>

990
00:41:33,020 --> 00:41:37,880
access in case they're restarting

991
00:41:34,520 --> 00:41:40,099
consistently or sleeping the box and in

992
00:41:37,880 --> 00:41:41,599
case your agent dies and there may be

993
00:41:40,099 --> 00:41:44,599
bugs out there so you never know what's

994
00:41:41,599 --> 00:41:47,540
going to happen the<font color="#E5E5E5"> next one is launched</font>

995
00:41:44,599 --> 00:41:50,089
demons this is dust this does require

996
00:41:47,540 --> 00:41:50,990
root obviously but there<font color="#CCCCCC"> we'll talk</font>

997
00:41:50,089 --> 00:41:54,049
about this in a second there is

998
00:41:50,990 --> 00:41:55,129
potential for user context as<font color="#CCCCCC"> well the</font>

999
00:41:54,050 --> 00:41:57,200
<font color="#E5E5E5">interesting thing</font><font color="#CCCCCC"> about launch day</font>

1000
00:41:55,130 --> 00:41:59,660
<font color="#CCCCCC">menses are</font><font color="#E5E5E5"> started during system startup</font>

1001
00:41:57,200 --> 00:42:02,450
before the login prompt is presented

1002
00:41:59,660 --> 00:42:05,750
actually so I netd actually starts these

1003
00:42:02,450 --> 00:42:08,629
up there are a plist file that is then

1004
00:42:05,750 --> 00:42:10,880
taken through key values and executed so

1005
00:42:08,630 --> 00:42:12,589
in this case you<font color="#E5E5E5"> basically can set up a</font>

1006
00:42:10,880 --> 00:42:14,420
<font color="#CCCCCC">a</font><font color="#E5E5E5"> couple different cool keys out there</font>

1007
00:42:12,589 --> 00:42:16,578
you can basically give it a start

1008
00:42:14,420 --> 00:42:18,829
interval you can keep<font color="#E5E5E5"> it running so in</font>

1009
00:42:16,579 --> 00:42:20,119
case that plist file<font color="#CCCCCC"> actor damon's</font>

1010
00:42:18,829 --> 00:42:22,670
actually stopped it will actually

1011
00:42:20,119 --> 00:42:25,430
restart itself<font color="#E5E5E5"> like just like a windows</font>

1012
00:42:22,670 --> 00:42:28,280
<font color="#E5E5E5">service in this case so it'd be like an</font>

1013
00:42:25,430 --> 00:42:29,569
autostart per se so<font color="#CCCCCC"> that's a really</font><font color="#E5E5E5"> cool</font>

1014
00:42:28,280 --> 00:42:32,420
benefit of these and there's also

1015
00:42:29,569 --> 00:42:35,450
potential for<font color="#CCCCCC"> us to move</font><font color="#E5E5E5"> over onto user</font>

1016
00:42:32,420 --> 00:42:37,910
contact side we're using<font color="#CCCCCC"> launch agents</font>

1017
00:42:35,450 --> 00:42:39,859
and the cool thing is as<font color="#E5E5E5"> I talked</font><font color="#CCCCCC"> about</font>

1018
00:42:37,910 --> 00:42:41,930
<font color="#E5E5E5">before if the</font><font color="#CCCCCC"> system's taxed and login</font>

1019
00:42:39,859 --> 00:42:45,130
hooks fail you could<font color="#CCCCCC"> potentially lock a</font>

1020
00:42:41,930 --> 00:42:48,529
user out with this<font color="#E5E5E5"> it doesn't have that</font>

1021
00:42:45,130 --> 00:42:51,049
that that potential con but it will

1022
00:42:48,530 --> 00:42:53,089
basically stay it'll basically launch

1023
00:42:51,049 --> 00:42:56,390
once the system is has enough resources

1024
00:42:53,089 --> 00:43:01,640
to launch your<font color="#E5E5E5"> daemon in that case so</font>

1025
00:42:56,390 --> 00:43:03,920
that's that's quite cool obviously we

1026
00:43:01,640 --> 00:43:05,868
talked about<font color="#CCCCCC"> before</font><font color="#E5E5E5"> Packer ardell did</font>

1027
00:43:03,920 --> 00:43:08,839
this great research on the hijacking<font color="#E5E5E5"> die</font>

1028
00:43:05,869 --> 00:43:11,299
libs it's something<font color="#CCCCCC"> that we've used a</font>

1029
00:43:08,839 --> 00:43:13,910
few times<font color="#CCCCCC"> I've</font><font color="#E5E5E5"> tested a couple times but</font>

1030
00:43:11,299 --> 00:43:15,710
this can also be deployed for a more

1031
00:43:13,910 --> 00:43:19,279
stealthier version of persistence of

1032
00:43:15,710 --> 00:43:20,420
course but the only obvious concern is

1033
00:43:19,280 --> 00:43:21,799
that it's<font color="#E5E5E5"> only when you start that</font>

1034
00:43:20,420 --> 00:43:23,720
application is when you're going<font color="#E5E5E5"> to get</font>

1035
00:43:21,799 --> 00:43:25,309
that agent back so it's<font color="#E5E5E5"> something you</font>

1036
00:43:23,720 --> 00:43:27,319
have<font color="#E5E5E5"> to keep in mind as we talked about</font>

1037
00:43:25,309 --> 00:43:29,150
before there's the scanner but there's

1038
00:43:27,319 --> 00:43:31,940
also the crate hijacked module which

1039
00:43:29,150 --> 00:43:33,520
actually goes through all<font color="#E5E5E5"> the headache</font>

1040
00:43:31,940 --> 00:43:35,660
of actually generating the module

1041
00:43:33,520 --> 00:43:37,849
patching it and then<font color="#E5E5E5"> actually deploying</font>

1042
00:43:35,660 --> 00:43:38,759
<font color="#E5E5E5">an overriding and creating the secondary</font>

1043
00:43:37,849 --> 00:43:40,860
pass

1044
00:43:38,760 --> 00:43:42,740
for the<font color="#CCCCCC"> follow-on so the program does</font>

1045
00:43:40,860 --> 00:43:48,540
launched successfully after you've

1046
00:43:42,740 --> 00:43:50,669
hijacked the dial it so<font color="#E5E5E5"> I'll speak just</font>

1047
00:43:48,540 --> 00:43:52,730
<font color="#E5E5E5">a quick second I know we're about at a</font>

1048
00:43:50,670 --> 00:43:54,930
time future plans for<font color="#E5E5E5"> the project</font>

1049
00:43:52,730 --> 00:43:56,760
everyone's like well<font color="#CCCCCC"> Empire Empire</font>

1050
00:43:54,930 --> 00:43:59,339
<font color="#E5E5E5">PowerShell Empire whatever was this mean</font>

1051
00:43:56,760 --> 00:44:01,380
we're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> combine both code bases</font>

1052
00:43:59,340 --> 00:44:03,150
within the next few weeks so<font color="#CCCCCC"> we'll have</font>

1053
00:44:01,380 --> 00:44:05,340
one command and control platform that

1054
00:44:03,150 --> 00:44:07,740
allows you to attack<font color="#E5E5E5"> Windows systems and</font>

1055
00:44:05,340 --> 00:44:10,020
<font color="#E5E5E5">OSX systems and we'll have some</font><font color="#CCCCCC"> of those</font>

1056
00:44:07,740 --> 00:44:11,939
nice bits that<font color="#E5E5E5"> C talked about a passing</font>

1057
00:44:10,020 --> 00:44:13,950
haejin's between the two kind<font color="#E5E5E5"> of that</font>

1058
00:44:11,940 --> 00:44:16,260
cross-platform attack kind of approach

1059
00:44:13,950 --> 00:44:18,120
that'll be much much nicer we also

1060
00:44:16,260 --> 00:44:19,950
really want<font color="#E5E5E5"> to get socks pivoting in</font>

1061
00:44:18,120 --> 00:44:21,390
that's one of our biggest to do's we'll

1062
00:44:19,950 --> 00:44:23,600
see if Alex that's<font color="#E5E5E5"> being lazy and</font>

1063
00:44:21,390 --> 00:44:27,000
actually finishes all the code but oh

1064
00:44:23,600 --> 00:44:28,680
it's a it's a it's<font color="#E5E5E5"> been a really fun</font>

1065
00:44:27,000 --> 00:44:30,930
project and kind<font color="#E5E5E5"> of blast doing it the</font>

1066
00:44:28,680 --> 00:44:33,960
codes been out there for a couple couple

1067
00:44:30,930 --> 00:44:36,029
months it's on github we forgot to<font color="#E5E5E5"> put</font>

1068
00:44:33,960 --> 00:44:38,430
this up<font color="#CCCCCC"> there github / adaptive threat /</font>

1069
00:44:36,030 --> 00:44:39,690
<font color="#CCCCCC">Ian py</font><font color="#E5E5E5"> re if you just search</font><font color="#CCCCCC"> for the</font>

1070
00:44:38,430 --> 00:44:42,210
<font color="#E5E5E5">project name you should be able to find</font>

1071
00:44:39,690 --> 00:44:45,240
<font color="#E5E5E5">it we also have</font><font color="#CCCCCC"> a large number of blog</font>

1072
00:44:42,210 --> 00:44:46,710
posts that talk<font color="#CCCCCC"> about usage fishing we</font>

1073
00:44:45,240 --> 00:44:50,160
have a ton<font color="#CCCCCC"> of documentation on this</font>

1074
00:44:46,710 --> 00:44:51,690
stuff so with that thank you<font color="#E5E5E5"> and are</font>

1075
00:44:50,160 --> 00:44:52,920
there<font color="#CCCCCC"> any questions there's there's one</font>

1076
00:44:51,690 --> 00:44:55,320
actually one thing<font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to note before</font>

1077
00:44:52,920 --> 00:44:58,110
we get too crazy any questions he talked

1078
00:44:55,320 --> 00:45:00,840
about the fact that<font color="#E5E5E5"> it's OS x + n</font>

1079
00:44:58,110 --> 00:45:02,160
windows we've actually successfully I've

1080
00:45:00,840 --> 00:45:04,230
actually got the successful use this on

1081
00:45:02,160 --> 00:45:06,420
a linux redhat insulation and that's why

1082
00:45:04,230 --> 00:45:09,680
we<font color="#E5E5E5"> will actually went back to 2.6 so</font>

1083
00:45:06,420 --> 00:45:12,240
this<font color="#E5E5E5"> is truly not only just</font><font color="#CCCCCC"> OSX and</font>

1084
00:45:09,680 --> 00:45:14,580
<font color="#CCCCCC">windows this</font><font color="#E5E5E5"> can actually be deployed in</font>

1085
00:45:12,240 --> 00:45:21,529
an<font color="#E5E5E5"> agent scenario where</font><font color="#CCCCCC"> you need linux</font>

1086
00:45:14,580 --> 00:45:21,529
box yes

1087
00:45:21,730 --> 00:45:27,380
so the<font color="#CCCCCC"> question is what's required on</font>

1088
00:45:24,410 --> 00:45:30,350
the<font color="#E5E5E5"> Linux I'd what dependencies the core</font>

1089
00:45:27,380 --> 00:45:32,450
agent is to doc sick to dot<font color="#CCCCCC"> six</font>

1090
00:45:30,350 --> 00:45:35,089
compatible so you need at least Python

1091
00:45:32,450 --> 00:45:36,680
26 but otherwise every single component

1092
00:45:35,090 --> 00:45:39,410
of the core agent depends on the

1093
00:45:36,680 --> 00:45:41,720
standard Python library so the standard

1094
00:45:39,410 --> 00:45:43,220
<font color="#E5E5E5">live there's you don't have to sell any</font>

1095
00:45:41,720 --> 00:45:46,160
packages you know<font color="#E5E5E5"> whatever else it's</font>

1096
00:45:43,220 --> 00:45:48,500
everything that's or automatically comes

1097
00:45:46,160 --> 00:45:51,920
with the stock installations for two

1098
00:45:48,500 --> 00:45:54,260
thousand six and two dots up yes sorry

1099
00:45:51,920 --> 00:45:56,030
what's the question actually can you can

1100
00:45:54,260 --> 00:46:02,270
use my colleagues<font color="#CCCCCC"> might go get my sorry</font>

1101
00:45:56,030 --> 00:46:05,030
looks good I'll your<font color="#E5E5E5"> Frank reverse icon</font>

1102
00:46:02,270 --> 00:46:06,920
with<font color="#CCCCCC"> scythes on but can we</font><font color="#E5E5E5"> compile the</font>

1103
00:46:05,030 --> 00:46:08,840
framework with sights on I<font color="#CCCCCC"> haven't</font>

1104
00:46:06,920 --> 00:46:11,420
<font color="#CCCCCC">looked into that have have you guys have</font>

1105
00:46:08,840 --> 00:46:13,940
<font color="#CCCCCC">we touched</font><font color="#E5E5E5"> not yet no because we want to</font>

1106
00:46:11,420 --> 00:46:16,970
<font color="#E5E5E5">keep this like</font><font color="#CCCCCC"> not like you know have</font><font color="#E5E5E5"> to</font>

1107
00:46:13,940 --> 00:46:20,870
<font color="#E5E5E5">compile it because these runs on linux</font>

1108
00:46:16,970 --> 00:46:24,399
as<font color="#E5E5E5"> does video support running on OS X</font>

1109
00:46:20,870 --> 00:46:27,799
like watching the server OS X as well

1110
00:46:24,400 --> 00:46:30,110
lucky blessed is that but we keep it as

1111
00:46:27,800 --> 00:46:32,630
an open framework haven't compiled it

1112
00:46:30,110 --> 00:46:34,910
that way yep so we don't<font color="#CCCCCC"> have it now but</font>

1113
00:46:32,630 --> 00:46:38,330
uh if you would like to<font color="#E5E5E5"> try to do that</font>

1114
00:46:34,910 --> 00:46:43,420
more request invalid also oh yes I also

1115
00:46:38,330 --> 00:46:43,420
be aware that you can think<font color="#E5E5E5"> about</font>

1116
00:46:47,970 --> 00:46:53,980
yeah yeah it's a sexually in the system

1117
00:46:51,280 --> 00:46:57,190
keychain file that Kate a chain breaker

1118
00:46:53,980 --> 00:47:00,210
file actually the chain breaker module

1119
00:46:57,190 --> 00:47:03,460
not the not the key<font color="#E5E5E5"> dump exploitable one</font>

1120
00:47:00,210 --> 00:47:05,950
that actually does dump you can actually

1121
00:47:03,460 --> 00:47:07,750
<font color="#E5E5E5">pass a specific path for the keychain</font>

1122
00:47:05,950 --> 00:47:09,520
and it will you can actually dumped the

1123
00:47:07,750 --> 00:47:18,100
system cheeky sheen and get Wi-Fi

1124
00:47:09,520 --> 00:47:19,509
passwords oh yeah<font color="#CCCCCC"> definitely talk out</font>

1125
00:47:18,100 --> 00:47:21,580
there yeah we should def a talk quite an

1126
00:47:19,510 --> 00:47:32,700
interesting questions just come off the

1127
00:47:21,580 --> 00:47:32,700
way<font color="#E5E5E5"> please you mentioned Patrick forties</font>

1128
00:47:33,000 --> 00:47:40,450
use word cocoa which yes yeah goes

1129
00:47:38,920 --> 00:47:42,430
through everything that's involved

1130
00:47:40,450 --> 00:47:43,750
changed some electrons to show you

1131
00:47:42,430 --> 00:47:45,879
things to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> baking assistant is</font>

1132
00:47:43,750 --> 00:47:48,940
<font color="#CCCCCC">writing divorce if we're on an</font>

1133
00:47:45,880 --> 00:47:51,880
engagement you asked up knock knock is

1134
00:47:48,940 --> 00:47:54,730
installed right yeah it's about<font color="#E5E5E5"> tall</font>

1135
00:47:51,880 --> 00:47:57,910
garden if no<font color="#CCCCCC"> but since no does it</font><font color="#E5E5E5"> show</font>

1136
00:47:54,730 --> 00:48:00,060
you yes cool knock knock we'll show

1137
00:47:57,910 --> 00:48:03,009
the persistence modules that we have

1138
00:48:00,060 --> 00:48:04,930
currently if we're on an engagement and

1139
00:48:03,010 --> 00:48:07,570
knock<font color="#CCCCCC"> knock is installed maybe we just</font>

1140
00:48:04,930 --> 00:48:09,669
say well in person if we have the access

1141
00:48:07,570 --> 00:48:11,830
<font color="#E5E5E5">two thousand how there's</font><font color="#CCCCCC"> no incidents</font>

1142
00:48:09,670 --> 00:48:13,480
right we'll<font color="#E5E5E5"> get rid of it or</font><font color="#CCCCCC"> remove it</font>

1143
00:48:11,830 --> 00:48:13,779
or hide if i make it<font color="#E5E5E5"> depends if your</font>

1144
00:48:13,480 --> 00:48:16,240
honor

1145
00:48:13,780 --> 00:48:18,220
team or what your scope is what can you

1146
00:48:16,240 --> 00:48:21,370
do on that<font color="#E5E5E5"> there isn't do you have ways</font>

1147
00:48:18,220 --> 00:48:23,140
of evading this if knock knock is

1148
00:48:21,370 --> 00:48:25,750
<font color="#CCCCCC">running with the</font><font color="#E5E5E5"> persistence installed</font>

1149
00:48:23,140 --> 00:48:27,220
it will<font color="#E5E5E5"> detect it I guess at the end of</font>

1150
00:48:25,750 --> 00:48:32,530
<font color="#E5E5E5">the day you just have to flee like quite</font>

1151
00:48:27,220 --> 00:48:33,549
a new method yeah yeah oh I guess it the

1152
00:48:32,530 --> 00:48:47,800
other day you have<font color="#CCCCCC"> to develop</font><font color="#E5E5E5"> something</font>

1153
00:48:33,550 --> 00:48:49,840
to just that's not yours so the<font color="#CCCCCC"> question</font>

1154
00:48:47,800 --> 00:48:52,630
is what types of modules do we have on

1155
00:48:49,840 --> 00:48:54,250
the Linux I'd so the framework was

1156
00:48:52,630 --> 00:48:56,830
originally built for a couple<font color="#CCCCCC"> of clients</font>

1157
00:48:54,250 --> 00:48:58,960
and engagements that were<font color="#CCCCCC"> OSX specific</font>

1158
00:48:56,830 --> 00:49:01,480
so that was where our focus was to<font color="#E5E5E5"> kind</font>

1159
00:48:58,960 --> 00:49:04,090
of get everything done we<font color="#CCCCCC"> really want to</font>

1160
00:49:01,480 --> 00:49:08,410
expand the Linux side instead<font color="#E5E5E5"> of just</font>

1161
00:49:04,090 --> 00:49:11,680
the OS<font color="#E5E5E5"> X side and whistles ooh sorry the</font>

1162
00:49:08,410 --> 00:49:13,029
majority<font color="#E5E5E5"> of it is of OS X but we are one</font>

1163
00:49:11,680 --> 00:49:14,470
<font color="#CCCCCC">of</font><font color="#E5E5E5"> our goals in the next few months is</font>

1164
00:49:13,030 --> 00:49:16,480
to expand the Linux post exploitation

1165
00:49:14,470 --> 00:49:17,890
for example if you stay in<font color="#E5E5E5"> this room for</font>

1166
00:49:16,480 --> 00:49:21,010
the next presentation<font color="#E5E5E5"> I believe they're</font>

1167
00:49:17,890 --> 00:49:22,930
dropping<font color="#E5E5E5"> some linux type OS</font><font color="#CCCCCC"> X</font><font color="#E5E5E5"> opposed to</font>

1168
00:49:21,010 --> 00:49:24,490
exploitation modules I'm hoping they'll

1169
00:49:22,930 --> 00:49:27,160
do a pull request and in the<font color="#E5E5E5"> next few</font>

1170
00:49:24,490 --> 00:49:29,830
weeks yeah I think<font color="#E5E5E5"> we have four modules</font>

1171
00:49:27,160 --> 00:49:31,899
right now just to quicklist them off we

1172
00:49:29,830 --> 00:49:33,759
have<font color="#E5E5E5"> the hash done pillage user the</font>

1173
00:49:31,900 --> 00:49:37,570
<font color="#E5E5E5">Linux probe exchequer and the</font><font color="#CCCCCC"> unix probe</font>

1174
00:49:33,760 --> 00:49:41,100
exchequer and also<font color="#CCCCCC"> a pure in memory pcap</font>

1175
00:49:37,570 --> 00:49:41,100
sniffer yes

1176
00:49:44,110 --> 00:49:49,610
that's<font color="#E5E5E5"> something you have a hard time</font>

1177
00:49:45,920 --> 00:49:52,250
<font color="#CCCCCC">with or funded htp usually works yeah so</font>

1178
00:49:49,610 --> 00:49:53,750
one of<font color="#E5E5E5"> our goals with both the first</font>

1179
00:49:52,250 --> 00:49:55,730
thing the next week we went a combined

1180
00:49:53,750 --> 00:49:57,740
power cell<font color="#E5E5E5"> Empire</font><font color="#CCCCCC"> and Python empire into</font>

1181
00:49:55,730 --> 00:50:00,320
one framework and after that one of the

1182
00:49:57,740 --> 00:50:01,970
goals right after that is to expand and

1183
00:50:00,320 --> 00:50:04,430
modular rise the command and<font color="#E5E5E5"> control</font>

1184
00:50:01,970 --> 00:50:05,990
components for both projects so we want

1185
00:50:04,430 --> 00:50:09,440
<font color="#E5E5E5">to build the architecture that you could</font>

1186
00:50:05,990 --> 00:50:11,569
easily build a module to drop it cool

1187
00:50:09,440 --> 00:50:13,730
yes all right<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> that's about it</font>

1188
00:50:11,570 --> 00:50:16,820
will be out here<font color="#CCCCCC"> for about</font><font color="#E5E5E5"> 1020 minutes</font>

1189
00:50:13,730 --> 00:50:18,880
if you guys want to have thank you<font color="#E5E5E5"> thank</font>

1190
00:50:16,820 --> 00:50:18,880
you

