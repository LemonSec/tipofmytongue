1
00:00:00,030 --> 00:00:04,770
so<font color="#E5E5E5"> let us kick things off</font><font color="#CCCCCC"> first and</font>

2
00:00:02,580 --> 00:00:06,629
<font color="#E5E5E5">foremost I</font><font color="#CCCCCC"> am NOT a data scientist so</font>

3
00:00:04,770 --> 00:00:10,910
please take everything<font color="#E5E5E5"> I say with a</font>

4
00:00:06,629 --> 00:00:13,139
<font color="#CCCCCC">grain of</font><font color="#E5E5E5"> salt</font><font color="#CCCCCC"> and feel</font><font color="#E5E5E5"> free to you</font><font color="#CCCCCC"> know</font>

5
00:00:10,910 --> 00:00:15,570
put me down afterwards

6
00:00:13,139 --> 00:00:17,220
hopefully<font color="#E5E5E5"> not during my talk and tell me</font>

7
00:00:15,570 --> 00:00:19,350
how wrong everything was that I talked

8
00:00:17,220 --> 00:00:23,038
about<font color="#E5E5E5"> but you know hopefully it's not</font>

9
00:00:19,350 --> 00:00:23,939
that<font color="#E5E5E5"> bad but so yeah I'm mark Creager I</font>

10
00:00:23,039 --> 00:00:26,789
do

11
00:00:23,939 --> 00:00:29,460
<font color="#CCCCCC">Mallory search at endgame you know</font>

12
00:00:26,789 --> 00:00:31,619
<font color="#E5E5E5">reverse engineering software dev a bit</font>

13
00:00:29,460 --> 00:00:33,600
and I've<font color="#E5E5E5"> primarily been working on</font>

14
00:00:31,619 --> 00:00:35,910
<font color="#E5E5E5">ransomware protection research for the</font>

15
00:00:33,600 --> 00:00:37,500
<font color="#E5E5E5">past couple of years</font><font color="#CCCCCC"> so this kind of</font>

16
00:00:35,910 --> 00:00:41,940
dovetails into the research that<font color="#E5E5E5"> I</font><font color="#CCCCCC"> did</font>

17
00:00:37,500 --> 00:00:45,090
for this project<font color="#E5E5E5"> so just to go over the</font>

18
00:00:41,940 --> 00:00:47,309
<font color="#E5E5E5">agenda for today</font><font color="#CCCCCC"> I'm going</font><font color="#E5E5E5"> to give a</font>

19
00:00:45,090 --> 00:00:49,289
very<font color="#E5E5E5"> brief overview</font><font color="#CCCCCC"> of ransomware</font>

20
00:00:47,309 --> 00:00:52,709
<font color="#E5E5E5">current</font><font color="#CCCCCC"> rates more detection</font>

21
00:00:49,289 --> 00:00:56,000
methodologies<font color="#CCCCCC"> what ransom notes look</font>

22
00:00:52,710 --> 00:00:59,609
like<font color="#E5E5E5"> typically then I'll delve into</font>

23
00:00:56,000 --> 00:01:01,140
talking about exploratory research<font color="#CCCCCC"> than</font>

24
00:00:59,609 --> 00:01:03,750
some results<font color="#E5E5E5"> that I got from that</font>

25
00:01:01,140 --> 00:01:06,270
<font color="#E5E5E5">initial research that I did</font><font color="#CCCCCC"> and then the</font>

26
00:01:03,750 --> 00:01:08,729
<font color="#E5E5E5">development of a panic</font>

27
00:01:06,270 --> 00:01:10,259
proof of concept framework<font color="#E5E5E5"> along with</font>

28
00:01:08,729 --> 00:01:11,490
the<font color="#E5E5E5"> results from that and wrap things up</font>

29
00:01:10,260 --> 00:01:14,700
with<font color="#E5E5E5"> the conclusion</font><font color="#CCCCCC"> and hopefully I have</font>

30
00:01:11,490 --> 00:01:17,759
time for<font color="#CCCCCC"> questions at the end all</font><font color="#E5E5E5"> right</font>

31
00:01:14,700 --> 00:01:19,860
<font color="#E5E5E5">so a very brief</font><font color="#CCCCCC"> overview of ransomware</font>

32
00:01:17,759 --> 00:01:21,840
if you're not familiar<font color="#E5E5E5"> with it</font><font color="#CCCCCC"> it's</font>

33
00:01:19,860 --> 00:01:24,060
simply<font color="#CCCCCC"> just</font><font color="#E5E5E5"> malicious software that's</font>

34
00:01:21,840 --> 00:01:27,990
going<font color="#CCCCCC"> to encrypt files on your hard</font>

35
00:01:24,060 --> 00:01:29,159
drive<font color="#CCCCCC"> to deny you users access to them I</font>

36
00:01:27,990 --> 00:01:31,939
just<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to tap</font>

37
00:01:29,159 --> 00:01:35,220
typically target common file extensions

38
00:01:31,939 --> 00:01:36,600
so PDFs<font color="#E5E5E5"> text files</font><font color="#CCCCCC"> Docs Excel</font>

39
00:01:35,220 --> 00:01:39,390
spreadsheets<font color="#E5E5E5"> things of that nature</font>

40
00:01:36,600 --> 00:01:41,490
<font color="#E5E5E5">basically</font><font color="#CCCCCC"> they want to get the most bang</font>

41
00:01:39,390 --> 00:01:43,320
for their buck without<font color="#CCCCCC"> file without</font>

42
00:01:41,490 --> 00:01:44,880
<font color="#E5E5E5">encrypting every single file on your</font>

43
00:01:43,320 --> 00:01:47,820
hard drive<font color="#E5E5E5"> and making this</font><font color="#CCCCCC"> system</font>

44
00:01:44,880 --> 00:01:50,369
<font color="#E5E5E5">completely useless</font><font color="#CCCCCC"> there's gonna</font><font color="#E5E5E5"> be two</font>

45
00:01:47,820 --> 00:01:53,939
types<font color="#E5E5E5"> of output that</font><font color="#CCCCCC"> are produced</font><font color="#E5E5E5"> from</font>

46
00:01:50,369 --> 00:01:56,640
ransomware<font color="#CCCCCC"> you know the</font><font color="#E5E5E5"> most obvious is</font>

47
00:01:53,939 --> 00:01:58,408
going to be encrypted files and then

48
00:01:56,640 --> 00:02:01,590
typically it's also going to produce

49
00:01:58,409 --> 00:02:05,130
<font color="#E5E5E5">ransom notes on disk and</font><font color="#CCCCCC"> we'll get into</font>

50
00:02:01,590 --> 00:02:07,770
the purpose of ransom notes in a bit so

51
00:02:05,130 --> 00:02:10,258
the current<font color="#E5E5E5"> say the art for detection</font>

52
00:02:07,770 --> 00:02:12,390
methodologies<font color="#CCCCCC"> can break down free neatly</font>

53
00:02:10,258 --> 00:02:13,450
into two categories you<font color="#CCCCCC"> have static</font>

54
00:02:12,390 --> 00:02:16,730
detection which

55
00:02:13,450 --> 00:02:18,349
they're<font color="#CCCCCC"> gonna take</font><font color="#E5E5E5"> place</font><font color="#CCCCCC"> without any</font>

56
00:02:16,730 --> 00:02:21,230
sort of execution<font color="#E5E5E5"> of code of the</font>

57
00:02:18,349 --> 00:02:24,679
ransomware<font color="#CCCCCC"> so they're gonna be either</font>

58
00:02:21,230 --> 00:02:26,420
more<font color="#E5E5E5"> baby kind of typically oriented or</font>

59
00:02:24,680 --> 00:02:29,209
it's going<font color="#E5E5E5"> to be based off of here</font><font color="#CCCCCC"> is</font>

60
00:02:26,420 --> 00:02:30,649
six<font color="#E5E5E5"> or signatures or something that's a</font>

61
00:02:29,209 --> 00:02:33,170
little more<font color="#E5E5E5"> next-gen that's</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> be</font>

62
00:02:30,650 --> 00:02:35,840
based off<font color="#E5E5E5"> of something</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> sort of</font>

63
00:02:33,170 --> 00:02:37,910
machine learning<font color="#E5E5E5"> model</font><font color="#CCCCCC"> the benefit</font><font color="#E5E5E5"> to</font>

64
00:02:35,840 --> 00:02:39,950
<font color="#E5E5E5">those obviously is</font><font color="#CCCCCC"> that all data is</font>

65
00:02:37,910 --> 00:02:41,989
going to be preserved<font color="#E5E5E5"> and that</font><font color="#CCCCCC"> no code</font>

66
00:02:39,950 --> 00:02:44,899
will be executed<font color="#CCCCCC"> but the drawback</font><font color="#E5E5E5"> to</font>

67
00:02:41,989 --> 00:02:47,180
<font color="#E5E5E5">that is that if you do miss that</font>

68
00:02:44,900 --> 00:02:50,150
detection then essentially your entire

69
00:02:47,180 --> 00:02:55,090
<font color="#CCCCCC">host is</font><font color="#E5E5E5"> open to compromise</font><font color="#CCCCCC"> and all that</font>

70
00:02:50,150 --> 00:02:59,269
data<font color="#E5E5E5"> is</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> be lost in that process</font>

71
00:02:55,090 --> 00:03:02,780
<font color="#E5E5E5">for dynamic detections</font><font color="#CCCCCC"> there's there's a</font>

72
00:02:59,269 --> 00:03:05,450
few things<font color="#E5E5E5"> that can take place one</font>

73
00:03:02,780 --> 00:03:08,390
approach is to<font color="#E5E5E5"> plant canary files onto</font><font color="#CCCCCC"> a</font>

74
00:03:05,450 --> 00:03:11,238
<font color="#E5E5E5">system and basically the purpose of</font>

75
00:03:08,390 --> 00:03:13,670
these is they're going to be monitored

76
00:03:11,239 --> 00:03:16,430
and if they're modified in<font color="#E5E5E5"> any sort of</font>

77
00:03:13,670 --> 00:03:19,429
way<font color="#CCCCCC"> that a user want it</font><font color="#E5E5E5"> then that's</font>

78
00:03:16,430 --> 00:03:21,980
<font color="#CCCCCC">going to be essentially</font><font color="#E5E5E5"> their their</font>

79
00:03:19,430 --> 00:03:23,660
<font color="#E5E5E5">triple</font><font color="#CCCCCC"> er to say hey there's you know</font>

80
00:03:21,980 --> 00:03:28,069
anomalous behavior taking place on<font color="#E5E5E5"> this</font>

81
00:03:23,660 --> 00:03:31,069
on this<font color="#E5E5E5"> host so that's one approach</font><font color="#CCCCCC"> you</font>

82
00:03:28,069 --> 00:03:33,380
know along along that same line is you

83
00:03:31,069 --> 00:03:35,358
know<font color="#E5E5E5"> just having something run aah</font><font color="#CCCCCC"> and</font>

84
00:03:33,380 --> 00:03:38,630
run in the background<font color="#E5E5E5"> and monitoring</font>

85
00:03:35,359 --> 00:03:41,450
processes<font color="#E5E5E5"> searching out</font><font color="#CCCCCC"> anomalous</font>

86
00:03:38,630 --> 00:03:43,668
behavior<font color="#E5E5E5"> so the benefit to a</font><font color="#CCCCCC"> dynamic</font>

87
00:03:41,450 --> 00:03:47,108
<font color="#E5E5E5">approach is that you</font><font color="#CCCCCC"> essentially have</font>

88
00:03:43,669 --> 00:03:51,260
you know while<font color="#E5E5E5"> the processes are ongoing</font>

89
00:03:47,109 --> 00:03:52,970
<font color="#CCCCCC">you have a chance to detect them the</font>

90
00:03:51,260 --> 00:03:55,220
ring somewhere<font color="#E5E5E5"> the drawback to</font><font color="#CCCCCC"> that</font>

91
00:03:52,970 --> 00:03:56,840
though is that in that process<font color="#E5E5E5"> you might</font>

92
00:03:55,220 --> 00:04:00,530
be sacrificing essentially a large

93
00:03:56,840 --> 00:04:06,440
<font color="#E5E5E5">amount of the files</font><font color="#CCCCCC"> in hopes of the</font>

94
00:04:00,530 --> 00:04:09,380
eventual detection so how<font color="#CCCCCC"> can we</font><font color="#E5E5E5"> improve</font>

95
00:04:06,440 --> 00:04:12,889
these you know two categories<font color="#CCCCCC"> of</font>

96
00:04:09,380 --> 00:04:17,238
detections<font color="#E5E5E5"> well the easiest way to do</font>

97
00:04:12,889 --> 00:04:20,000
that<font color="#E5E5E5"> is to combine them</font><font color="#CCCCCC"> so a static and</font>

98
00:04:17,238 --> 00:04:24,409
dynamic<font color="#E5E5E5"> approach a layered security</font>

99
00:04:20,000 --> 00:04:26,780
<font color="#E5E5E5">approach that leverages the the</font>

100
00:04:24,409 --> 00:04:29,060
advantages<font color="#E5E5E5"> of both is</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the most</font>

101
00:04:26,780 --> 00:04:30,200
<font color="#E5E5E5">Neilsen area that you want you obviously</font>

102
00:04:29,060 --> 00:04:31,940
want to<font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to detect something</font>

103
00:04:30,200 --> 00:04:33,580
before any sort<font color="#E5E5E5"> of sort of code exists</font>

104
00:04:31,940 --> 00:04:35,960
that's that's the most ideal scenario

105
00:04:33,580 --> 00:04:38,359
but if that<font color="#E5E5E5"> doesn't</font><font color="#CCCCCC"> work</font><font color="#E5E5E5"> out you still</font>

106
00:04:35,960 --> 00:04:40,549
<font color="#E5E5E5">want a fallback</font><font color="#CCCCCC"> you know that you can</font>

107
00:04:38,360 --> 00:04:44,000
rely on that that may eventually detect

108
00:04:40,550 --> 00:04:45,560
<font color="#E5E5E5">the</font><font color="#CCCCCC"> Ransom are executing you can tailor</font>

109
00:04:44,000 --> 00:04:47,540
your machine learning model to

110
00:04:45,560 --> 00:04:50,810
specifically classify<font color="#E5E5E5"> ransomware instead</font>

111
00:04:47,540 --> 00:04:52,730
of<font color="#E5E5E5"> just generic malware</font><font color="#CCCCCC"> there's a</font>

112
00:04:50,810 --> 00:04:56,180
definitely<font color="#E5E5E5"> you know a lot of research</font>

113
00:04:52,730 --> 00:04:58,850
that<font color="#E5E5E5"> can take place in that</font><font color="#CCCCCC"> and then you</font>

114
00:04:56,180 --> 00:05:01,700
know trying to improve the dynamic

115
00:04:58,850 --> 00:05:03,650
detection methods<font color="#CCCCCC"> to pick up on an</font>

116
00:05:01,700 --> 00:05:06,260
almost behavior<font color="#CCCCCC"> a little more quickly</font>

117
00:05:03,650 --> 00:05:08,510
<font color="#E5E5E5">and that's that's the goal of the</font>

118
00:05:06,260 --> 00:05:11,870
<font color="#CCCCCC">research site that I sought out</font><font color="#E5E5E5"> with</font>

119
00:05:08,510 --> 00:05:15,230
this project<font color="#E5E5E5"> so going back</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> ransom</font>

120
00:05:11,870 --> 00:05:17,630
<font color="#CCCCCC">owes</font><font color="#E5E5E5"> as I discussed</font><font color="#CCCCCC"> earlier so the</font><font color="#E5E5E5"> basic</font>

121
00:05:15,230 --> 00:05:20,750
idea with a<font color="#CCCCCC"> ransom note is that</font><font color="#E5E5E5"> it's</font>

122
00:05:17,630 --> 00:05:23,450
<font color="#CCCCCC">something that is dropped</font><font color="#E5E5E5"> disk in order</font>

123
00:05:20,750 --> 00:05:26,270
<font color="#CCCCCC">to solicit a rat's</font><font color="#E5E5E5"> payment from the</font>

124
00:05:23,450 --> 00:05:28,130
<font color="#E5E5E5">victim of the ransomware so phrases such</font>

125
00:05:26,270 --> 00:05:30,229
as your files<font color="#E5E5E5"> have been encrypted base</font>

126
00:05:28,130 --> 00:05:31,490
and will decrypt your files<font color="#E5E5E5"> things like</font>

127
00:05:30,229 --> 00:05:34,159
that that's<font color="#E5E5E5"> what you're gonna see in a</font>

128
00:05:31,490 --> 00:05:36,290
ransom note<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> multiple file</font><font color="#CCCCCC"> types</font>

129
00:05:34,160 --> 00:05:38,780
that ransom notes can take on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> most</font>

130
00:05:36,290 --> 00:05:41,120
typical that you'll see is dot txt or

131
00:05:38,780 --> 00:05:43,159
<font color="#E5E5E5">just plain text file</font>

132
00:05:41,120 --> 00:05:47,030
there's also formatted<font color="#E5E5E5"> or rich</font><font color="#CCCCCC"> text</font>

133
00:05:43,160 --> 00:05:49,580
format such<font color="#CCCCCC"> as HTML and RTF</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then you</font>

134
00:05:47,030 --> 00:05:52,580
know there's also images<font color="#E5E5E5"> jpg PNG s</font>

135
00:05:49,580 --> 00:05:54,440
<font color="#E5E5E5">things along those lines ransom notes</font>

136
00:05:52,580 --> 00:05:57,289
<font color="#E5E5E5">are typically going to</font><font color="#CCCCCC"> be one of</font><font color="#E5E5E5"> the</font>

137
00:05:54,440 --> 00:05:59,240
first files<font color="#CCCCCC"> ever been to disk that's not</font>

138
00:05:57,289 --> 00:06:01,940
always<font color="#E5E5E5"> the</font><font color="#CCCCCC"> case</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> it's typically what</font>

139
00:05:59,240 --> 00:06:04,070
we see<font color="#CCCCCC"> and in certain ransomware</font>

140
00:06:01,940 --> 00:06:06,140
families<font color="#E5E5E5"> ransom notes are going to be</font>

141
00:06:04,070 --> 00:06:08,630
written to<font color="#CCCCCC"> every single directory on the</font>

142
00:06:06,140 --> 00:06:10,669
<font color="#E5E5E5">host and sometimes if not every single</font>

143
00:06:08,630 --> 00:06:14,479
directory it's just every directory that

144
00:06:10,669 --> 00:06:16,820
<font color="#E5E5E5">is going to that</font><font color="#CCCCCC"> sees a file that's</font>

145
00:06:14,479 --> 00:06:18,469
<font color="#E5E5E5">encrypted within it will have a ransom</font>

146
00:06:16,820 --> 00:06:19,700
note as well<font color="#E5E5E5"> so essentially you're</font>

147
00:06:18,470 --> 00:06:21,500
trying to be this<font color="#CCCCCC"> annoying as possible</font>

148
00:06:19,700 --> 00:06:25,630
<font color="#CCCCCC">just try to get their</font><font color="#E5E5E5"> point across</font><font color="#CCCCCC"> they</font>

149
00:06:21,500 --> 00:06:27,620
really want<font color="#E5E5E5"> their money so here's a</font>

150
00:06:25,630 --> 00:06:29,539
example<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a ransom</font><font color="#CCCCCC"> note</font>

151
00:06:27,620 --> 00:06:32,150
this one's from cryptolocker<font color="#CCCCCC"> this kind</font>

152
00:06:29,539 --> 00:06:34,190
of goes over<font color="#E5E5E5"> some of the phrasing that</font>

153
00:06:32,150 --> 00:06:35,510
I'd<font color="#CCCCCC"> previously discussed</font><font color="#E5E5E5"> you know that</font>

154
00:06:34,190 --> 00:06:37,280
the first<font color="#E5E5E5"> thing you lead off with is</font>

155
00:06:35,510 --> 00:06:40,370
<font color="#E5E5E5">saying your files have</font><font color="#CCCCCC"> been encrypted in</font>

156
00:06:37,280 --> 00:06:43,429
<font color="#E5E5E5">the cryptolocker</font><font color="#CCCCCC"> they tried to just</font>

157
00:06:40,370 --> 00:06:44,720
bribe essentially what encryption is you

158
00:06:43,430 --> 00:06:47,479
know they want you to contact<font color="#E5E5E5"> them</font>

159
00:06:44,720 --> 00:06:49,130
they're giving you a certain expiration

160
00:06:47,479 --> 00:06:51,860
date for<font color="#E5E5E5"> how long the files are gonna</font>

161
00:06:49,130 --> 00:06:53,540
last<font color="#CCCCCC"> they're saying antivirus is not</font>

162
00:06:51,860 --> 00:06:56,840
<font color="#CCCCCC">going to</font><font color="#E5E5E5"> help you at this point and then</font>

163
00:06:53,540 --> 00:07:01,900
they even<font color="#E5E5E5"> get into explaining the OAS</font>

164
00:06:56,840 --> 00:07:04,039
for<font color="#CCCCCC"> ya</font><font color="#E5E5E5"> here's</font><font color="#CCCCCC"> another example you know</font>

165
00:07:01,900 --> 00:07:06,138
now<font color="#CCCCCC"> that you saw the first one</font><font color="#E5E5E5"> from</font>

166
00:07:04,040 --> 00:07:08,000
cryptolocker now you see<font color="#E5E5E5"> this it</font>

167
00:07:06,139 --> 00:07:09,830
<font color="#CCCCCC">basically says the same thing all your</font>

168
00:07:08,000 --> 00:07:12,500
files have been cryptid they talk about

169
00:07:09,830 --> 00:07:14,900
specific document types<font color="#E5E5E5"> they talk about</font>

170
00:07:12,500 --> 00:07:17,120
decrypting<font color="#CCCCCC"> they want you to send Bitcoin</font>

171
00:07:14,900 --> 00:07:18,409
to their address<font color="#CCCCCC"> you know and they</font><font color="#E5E5E5"> even</font>

172
00:07:17,120 --> 00:07:21,949
say thank you at the<font color="#E5E5E5"> end which is very</font>

173
00:07:18,410 --> 00:07:26,289
<font color="#E5E5E5">nice and there's this one which is</font>

174
00:07:21,949 --> 00:07:29,240
<font color="#CCCCCC">actually a image in this</font><font color="#E5E5E5"> case</font><font color="#CCCCCC"> their</font>

175
00:07:26,289 --> 00:07:32,440
ransom<font color="#E5E5E5"> payment is 100 Bitcoin which</font>

176
00:07:29,240 --> 00:07:35,360
currently translates to<font color="#CCCCCC"> about</font><font color="#E5E5E5"> $750,000</font>

177
00:07:32,440 --> 00:07:37,699
so not sure exactly who they're

178
00:07:35,360 --> 00:07:40,490
<font color="#CCCCCC">targeting</font><font color="#E5E5E5"> with the specific ransomware</font>

179
00:07:37,699 --> 00:07:43,910
but you know and they're<font color="#CCCCCC"> also you know</font>

180
00:07:40,490 --> 00:07:47,840
giving a very specific<font color="#E5E5E5"> expiration date</font>

181
00:07:43,910 --> 00:07:50,300
so different approach with that one so

182
00:07:47,840 --> 00:07:53,810
as we've seen you<font color="#CCCCCC"> know just from</font><font color="#E5E5E5"> looking</font>

183
00:07:50,300 --> 00:07:55,310
<font color="#E5E5E5">at</font><font color="#CCCCCC"> three ransom notes right in a row how</font>

184
00:07:53,810 --> 00:07:59,330
you can start<font color="#E5E5E5"> to</font><font color="#CCCCCC"> come up</font><font color="#E5E5E5"> with a template</font>

185
00:07:55,310 --> 00:08:01,250
for<font color="#E5E5E5"> how</font><font color="#CCCCCC"> Ram</font><font color="#E5E5E5"> two notes look your files</font>

186
00:07:59,330 --> 00:08:02,780
have<font color="#CCCCCC"> been encrypted by</font><font color="#E5E5E5"> insert ransomware</font>

187
00:08:01,250 --> 00:08:05,060
name<font color="#E5E5E5"> sometimes</font><font color="#CCCCCC"> they're</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to explain</font>

188
00:08:02,780 --> 00:08:06,619
intricate details in the encryption<font color="#CCCCCC"> you</font>

189
00:08:05,060 --> 00:08:09,699
know just to scare you a little<font color="#E5E5E5"> bit say</font>

190
00:08:06,620 --> 00:08:11,870
<font color="#CCCCCC">hey is</font><font color="#E5E5E5"> 56</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> say to 2048 whatever</font>

191
00:08:09,699 --> 00:08:14,449
they're gonna explain that<font color="#CCCCCC"> your files</font>

192
00:08:11,870 --> 00:08:16,070
can't be decrypted on their own<font color="#CCCCCC"> they</font>

193
00:08:14,449 --> 00:08:19,099
want you<font color="#E5E5E5"> to send a ransom payment to</font>

194
00:08:16,070 --> 00:08:21,169
whatever<font color="#E5E5E5"> their wallet ID is you can</font>

195
00:08:19,099 --> 00:08:22,580
optionally<font color="#E5E5E5"> email them as well and</font>

196
00:08:21,169 --> 00:08:29,169
they're gonna give you an expiration

197
00:08:22,580 --> 00:08:32,299
date so knowing<font color="#E5E5E5"> all this</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> basic idea</font>

198
00:08:29,169 --> 00:08:35,598
<font color="#E5E5E5">kind of mix</font><font color="#CCCCCC"> around this</font><font color="#E5E5E5"> in my head for a</font>

199
00:08:32,299 --> 00:08:37,760
little<font color="#CCCCCC"> bit as you know</font><font color="#E5E5E5"> definitely very</font>

200
00:08:35,599 --> 00:08:40,550
much a data science novice so I wanted

201
00:08:37,760 --> 00:08:42,650
<font color="#E5E5E5">to figure out a</font><font color="#CCCCCC"> way hey can I</font><font color="#E5E5E5"> apply a</font>

202
00:08:40,549 --> 00:08:46,579
data science to essentially detect

203
00:08:42,650 --> 00:08:48,650
ransom notes as they're being written to

204
00:08:46,580 --> 00:08:52,810
disk and can we differentiate them

205
00:08:48,650 --> 00:08:54,110
consistently<font color="#E5E5E5"> from normal text files so</font>

206
00:08:52,810 --> 00:08:56,689
with that

207
00:08:54,110 --> 00:08:58,550
mind<font color="#CCCCCC"> you know first goal was</font><font color="#E5E5E5"> to develop</font>

208
00:08:56,690 --> 00:09:00,920
familiarity with the data science

209
00:08:58,550 --> 00:09:04,219
<font color="#E5E5E5">concepts and tools that I'd be</font><font color="#CCCCCC"> using</font><font color="#E5E5E5"> and</font>

210
00:09:00,920 --> 00:09:06,709
I'd go out and<font color="#E5E5E5"> collect</font><font color="#CCCCCC"> build up a good</font>

211
00:09:04,220 --> 00:09:09,110
collection<font color="#CCCCCC"> of ransom notes</font><font color="#E5E5E5"> and then on</font>

212
00:09:06,709 --> 00:09:11,060
the<font color="#CCCCCC"> flip side I'd also need to put</font>

213
00:09:09,110 --> 00:09:13,490
together a<font color="#CCCCCC"> base benign data set that I</font>

214
00:09:11,060 --> 00:09:16,399
can<font color="#E5E5E5"> prepare</font><font color="#CCCCCC"> the ransom notes</font><font color="#E5E5E5"> to and then</font>

215
00:09:13,490 --> 00:09:18,940
determine how<font color="#E5E5E5"> suitable rancid notes are</font>

216
00:09:16,399 --> 00:09:23,750
to classification<font color="#E5E5E5"> and you know how</font>

217
00:09:18,940 --> 00:09:25,570
solvable this problem really is so a

218
00:09:23,750 --> 00:09:29,240
quick overview<font color="#E5E5E5"> of tools I'd be using</font>

219
00:09:25,570 --> 00:09:33,310
<font color="#E5E5E5">anaconda Python 3 do my most minor work</font>

220
00:09:29,240 --> 00:09:37,640
in Jupiter notebook<font color="#CCCCCC"> psych it and Spacey</font>

221
00:09:33,310 --> 00:09:39,290
okay so for data sets<font color="#CCCCCC"> benign data</font><font color="#E5E5E5"> the</font>

222
00:09:37,640 --> 00:09:42,769
easiest<font color="#E5E5E5"> thing I found to</font><font color="#CCCCCC"> use was just</font>

223
00:09:39,290 --> 00:09:45,680
the<font color="#CCCCCC"> 20 newsgroups</font><font color="#E5E5E5"> data set and that's</font>

224
00:09:42,769 --> 00:09:48,980
around<font color="#CCCCCC"> 11,000</font><font color="#E5E5E5"> samples that spans 20 news</font>

225
00:09:45,680 --> 00:09:51,229
groups that were<font color="#E5E5E5"> I believe that data was</font>

226
00:09:48,980 --> 00:09:53,720
collected<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> like in the 90s or</font>

227
00:09:51,230 --> 00:09:55,940
somewhere<font color="#E5E5E5"> so so it goes away back</font>

228
00:09:53,720 --> 00:09:59,870
<font color="#E5E5E5">there's the the categories all kind of</font>

229
00:09:55,940 --> 00:10:02,570
listed out there<font color="#CCCCCC"> and then the ransom</font>

230
00:09:59,870 --> 00:10:04,640
notes<font color="#CCCCCC"> so the way I collected those was</font>

231
00:10:02,570 --> 00:10:07,579
from actually manually detonating

232
00:10:04,640 --> 00:10:11,569
<font color="#CCCCCC">ransomware samples in virtual virtual</font>

233
00:10:07,579 --> 00:10:15,189
<font color="#E5E5E5">environment and collecting artifacts so</font>

234
00:10:11,570 --> 00:10:17,480
that made up a certain<font color="#CCCCCC"> portion of the of</font>

235
00:10:15,190 --> 00:10:19,399
the corpus and ransom notes the rest

236
00:10:17,480 --> 00:10:23,060
<font color="#E5E5E5">came from just coming</font><font color="#CCCCCC"> through security</font>

237
00:10:19,399 --> 00:10:24,320
research<font color="#E5E5E5"> blog post Twitter downloading</font>

238
00:10:23,060 --> 00:10:26,959
actual text notes when<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> made</font>

239
00:10:24,320 --> 00:10:29,690
available<font color="#E5E5E5"> by pastebin or whatever or</font>

240
00:10:26,959 --> 00:10:32,149
actually downloading screenshots of the

241
00:10:29,690 --> 00:10:38,839
ransom notes<font color="#E5E5E5"> and then using OCR to</font>

242
00:10:32,149 --> 00:10:40,100
extract the text so to get into<font color="#E5E5E5"> the</font>

243
00:10:38,839 --> 00:10:43,010
approach<font color="#CCCCCC"> that I'm</font><font color="#E5E5E5"> taking for the</font>

244
00:10:40,100 --> 00:10:45,740
exploratory research<font color="#CCCCCC"> what we're working</font>

245
00:10:43,010 --> 00:10:49,040
<font color="#CCCCCC">with</font><font color="#E5E5E5"> at the</font><font color="#CCCCCC"> moment or for this problem</font>

246
00:10:45,740 --> 00:10:50,720
is it'll be<font color="#E5E5E5"> unlabeled data</font><font color="#CCCCCC"> we'll take</font>

247
00:10:49,040 --> 00:10:52,069
the<font color="#CCCCCC"> ransom notes</font><font color="#E5E5E5"> and we'll take the 20</font>

248
00:10:50,720 --> 00:10:55,459
years<font color="#CCCCCC"> group's data and we're</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

249
00:10:52,070 --> 00:10:58,010
throw them into one<font color="#E5E5E5"> unlabeled data set</font>

250
00:10:55,459 --> 00:11:02,149
<font color="#E5E5E5">and we're gonna leverage k-means</font>

251
00:10:58,010 --> 00:11:04,760
clustering<font color="#E5E5E5"> and set it to sort the data</font>

252
00:11:02,149 --> 00:11:06,709
<font color="#E5E5E5">into 21 clusters and they met reasoning</font>

253
00:11:04,760 --> 00:11:07,480
behind that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> we have 20s newsgroups</font>

254
00:11:06,709 --> 00:11:09,849
and

255
00:11:07,480 --> 00:11:14,110
we have one<font color="#E5E5E5"> set of ransom notes so</font>

256
00:11:09,850 --> 00:11:16,720
ideally<font color="#E5E5E5"> what we'll see is the ransom</font>

257
00:11:14,110 --> 00:11:18,550
notes all clustered<font color="#E5E5E5"> into one one tiny</font>

258
00:11:16,720 --> 00:11:20,380
cluster and then the<font color="#CCCCCC"> 20</font><font color="#E5E5E5"> newsgroups all</font>

259
00:11:18,550 --> 00:11:23,469
sort out into their<font color="#E5E5E5"> own individual</font>

260
00:11:20,380 --> 00:11:27,459
clusters<font color="#CCCCCC"> in order</font><font color="#E5E5E5"> to get a better idea</font>

261
00:11:23,470 --> 00:11:31,000
of<font color="#E5E5E5"> the data we're working with we'll</font>

262
00:11:27,459 --> 00:11:33,489
also use<font color="#CCCCCC"> a bag</font><font color="#E5E5E5"> of words approach with</font>

263
00:11:31,000 --> 00:11:40,240
account vectorizer and then also use

264
00:11:33,490 --> 00:11:42,430
<font color="#CCCCCC">tf-idf to also look</font><font color="#E5E5E5"> at the features so</font>

265
00:11:40,240 --> 00:11:46,329
first things first<font color="#E5E5E5"> we need to do a</font>

266
00:11:42,430 --> 00:11:49,779
little<font color="#E5E5E5"> bit of data</font><font color="#CCCCCC"> preparation so all</font>

267
00:11:46,329 --> 00:11:51,880
we're<font color="#E5E5E5"> gonna do here is strip out any</font>

268
00:11:49,779 --> 00:11:55,540
<font color="#E5E5E5">sort of newline characters are going</font><font color="#CCCCCC"> to</font>

269
00:11:51,880 --> 00:11:56,829
convert all strings to lowercase<font color="#CCCCCC"> then</font>

270
00:11:55,540 --> 00:11:59,740
we're gonna actually do the tokenization

271
00:11:56,829 --> 00:12:01,510
<font color="#CCCCCC">and so we're splitting</font><font color="#E5E5E5"> a you know a</font>

272
00:11:59,740 --> 00:12:04,000
large string into just the individual

273
00:12:01,510 --> 00:12:07,720
words<font color="#E5E5E5"> and we're going to strip out any</font>

274
00:12:04,000 --> 00:12:10,320
<font color="#CCCCCC">sort of stock words like the a and</font><font color="#E5E5E5"> and</font>

275
00:12:07,720 --> 00:12:14,620
anything<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> gonna be within the</font>

276
00:12:10,320 --> 00:12:19,389
Spacey's default soft words list<font color="#CCCCCC"> then</font>

277
00:12:14,620 --> 00:12:22,060
we're gonna go<font color="#E5E5E5"> from there to only</font><font color="#CCCCCC"> taking</font>

278
00:12:19,389 --> 00:12:25,000
<font color="#CCCCCC">two count alphanumeric</font><font color="#E5E5E5"> alphanumeric</font>

279
00:12:22,060 --> 00:12:28,119
strings<font color="#CCCCCC"> and then we're gonna go</font><font color="#E5E5E5"> ahead</font>

280
00:12:25,000 --> 00:12:31,089
and<font color="#E5E5E5"> lemma ties the strings and basically</font>

281
00:12:28,120 --> 00:12:36,130
convert them to<font color="#E5E5E5"> you know a more generic</font>

282
00:12:31,089 --> 00:12:38,980
form<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the specific word so with this</font>

283
00:12:36,130 --> 00:12:42,579
you know<font color="#E5E5E5"> very simple sample here what</font>

284
00:12:38,980 --> 00:12:44,410
we're going<font color="#CCCCCC"> with is we</font><font color="#E5E5E5"> have essentially</font>

285
00:12:42,579 --> 00:12:47,319
a<font color="#E5E5E5"> string that we you know kind of</font>

286
00:12:44,410 --> 00:12:50,410
constructed that was<font color="#E5E5E5"> describes a very</font>

287
00:12:47,319 --> 00:12:53,740
<font color="#CCCCCC">basic</font><font color="#E5E5E5"> ransom note and then we run it</font>

288
00:12:50,410 --> 00:12:56,380
through<font color="#E5E5E5"> our cleaning</font><font color="#CCCCCC"> routine</font><font color="#E5E5E5"> in order to</font>

289
00:12:53,740 --> 00:12:59,440
clean<font color="#E5E5E5"> everything out</font><font color="#CCCCCC"> and what</font><font color="#E5E5E5"> we end up</font>

290
00:12:56,380 --> 00:13:01,420
<font color="#E5E5E5">with</font><font color="#CCCCCC"> is a pretty simple string in the</font>

291
00:12:59,440 --> 00:13:03,339
end file and<font color="#CCCCCC"> Crips</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> Bitcoin ransom</font>

292
00:13:01,420 --> 00:13:06,010
payment and you can see how<font color="#CCCCCC"> that</font>

293
00:13:03,339 --> 00:13:08,069
definitely ties you<font color="#E5E5E5"> know very closely</font>

294
00:13:06,010 --> 00:13:14,529
with what you would think<font color="#E5E5E5"> a ransom note</font>

295
00:13:08,069 --> 00:13:17,469
<font color="#CCCCCC">is</font><font color="#E5E5E5"> going to portray and when we're</font>

296
00:13:14,529 --> 00:13:21,170
<font color="#CCCCCC">taking</font><font color="#E5E5E5"> into account the count vectorizer</font>

297
00:13:17,470 --> 00:13:26,329
and<font color="#CCCCCC"> tf-idf vectorizer i</font>

298
00:13:21,170 --> 00:13:28,719
we want to get an<font color="#E5E5E5"> idea of what the what</font>

299
00:13:26,329 --> 00:13:31,750
<font color="#CCCCCC">the top words are going to be what what</font>

300
00:13:28,720 --> 00:13:34,610
sort<font color="#E5E5E5"> of phrases are we gonna tip</font><font color="#CCCCCC"> ik Lisi</font>

301
00:13:31,750 --> 00:13:35,750
<font color="#CCCCCC">and it kind of hits along the same sort</font>

302
00:13:34,610 --> 00:13:37,940
<font color="#E5E5E5">of notes that we've been</font><font color="#CCCCCC"> that we've been</font>

303
00:13:35,750 --> 00:13:40,899
seeing so far<font color="#E5E5E5"> so we're talking about</font>

304
00:13:37,940 --> 00:13:44,899
files Bitcoin encryption decryption

305
00:13:40,899 --> 00:13:46,670
<font color="#E5E5E5">sending payments emails computers things</font>

306
00:13:44,899 --> 00:13:49,820
along those lines<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then when you</font>

307
00:13:46,670 --> 00:13:52,389
break it out<font color="#E5E5E5"> to</font><font color="#CCCCCC"> buy grams it makes a</font>

308
00:13:49,820 --> 00:13:55,279
<font color="#E5E5E5">little more sense in terms of phrasing</font>

309
00:13:52,389 --> 00:13:57,949
<font color="#E5E5E5">files are being encrypted files are</font>

310
00:13:55,279 --> 00:13:59,540
being decrypted<font color="#CCCCCC"> you know they want you</font>

311
00:13:57,949 --> 00:14:02,599
to<font color="#E5E5E5"> send in money for a private</font><font color="#CCCCCC"> key</font>

312
00:13:59,540 --> 00:14:06,410
<font color="#E5E5E5">Bitcoin address things</font><font color="#CCCCCC"> along those</font><font color="#E5E5E5"> lines</font>

313
00:14:02,600 --> 00:14:08,570
so it it gives<font color="#E5E5E5"> you an idea that you</font><font color="#CCCCCC"> know</font>

314
00:14:06,410 --> 00:14:14,089
<font color="#E5E5E5">there this language is very kind of</font>

315
00:14:08,570 --> 00:14:16,940
<font color="#E5E5E5">tightly coupled together</font><font color="#CCCCCC"> now well</font>

316
00:14:14,089 --> 00:14:18,680
<font color="#E5E5E5">actually yeah that before that was</font><font color="#CCCCCC"> I was</font>

317
00:14:16,940 --> 00:14:22,329
<font color="#E5E5E5">just looking at the</font><font color="#CCCCCC"> buy grams with the</font>

318
00:14:18,680 --> 00:14:25,310
<font color="#E5E5E5">count vectorizer as well now this is the</font>

319
00:14:22,329 --> 00:14:28,339
<font color="#CCCCCC">tf-idf</font><font color="#E5E5E5"> versus the account vectorizer and</font>

320
00:14:25,310 --> 00:14:30,500
so with this we're still<font color="#CCCCCC"> kind of seeing</font>

321
00:14:28,339 --> 00:14:34,670
<font color="#E5E5E5">the same sort of words that are popping</font>

322
00:14:30,500 --> 00:14:36,920
<font color="#E5E5E5">up</font><font color="#CCCCCC"> they're moved up a little moved up</font>

323
00:14:34,670 --> 00:14:41,110
<font color="#E5E5E5">and</font><font color="#CCCCCC"> down in</font><font color="#E5E5E5"> terms of relevance</font><font color="#CCCCCC"> a little</font>

324
00:14:36,920 --> 00:14:45,079
bit but generally<font color="#E5E5E5"> it's the same data and</font>

325
00:14:41,110 --> 00:14:47,570
so now going<font color="#E5E5E5"> back</font><font color="#CCCCCC"> to the clustering the</font>

326
00:14:45,079 --> 00:14:50,120
way things kind<font color="#E5E5E5"> of sorted out is here's</font>

327
00:14:47,570 --> 00:14:54,079
you<font color="#CCCCCC"> know very you know high overview of</font>

328
00:14:50,120 --> 00:14:58,420
the top<font color="#CCCCCC"> I believe</font><font color="#E5E5E5"> 10 terms</font><font color="#CCCCCC"> the top</font><font color="#E5E5E5"> 10</font>

329
00:14:54,079 --> 00:15:02,170
features<font color="#E5E5E5"> for each cluster and so our</font>

330
00:14:58,420 --> 00:15:05,360
ransom<font color="#E5E5E5"> notes</font><font color="#CCCCCC"> all ended up</font><font color="#E5E5E5"> very nicely</font>

331
00:15:02,170 --> 00:15:08,990
put together in cluster<font color="#E5E5E5"> 3 as you can</font>

332
00:15:05,360 --> 00:15:10,640
<font color="#E5E5E5">kind of see they hit the same list of</font>

333
00:15:08,990 --> 00:15:14,810
features that<font color="#E5E5E5"> we'd previously seen with</font>

334
00:15:10,640 --> 00:15:17,510
the top words and you<font color="#E5E5E5"> know just</font><font color="#CCCCCC"> for</font>

335
00:15:14,810 --> 00:15:18,859
reference<font color="#E5E5E5"> the news group 20</font><font color="#CCCCCC"> categories</font>

336
00:15:17,510 --> 00:15:20,480
or listed<font color="#E5E5E5"> over there's the right and you</font>

337
00:15:18,860 --> 00:15:21,769
<font color="#E5E5E5">can kind of you know group together if</font>

338
00:15:20,480 --> 00:15:24,230
you start<font color="#CCCCCC"> looking at</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> of the other</font>

339
00:15:21,769 --> 00:15:28,910
clusters<font color="#E5E5E5"> you know which specific news</font>

340
00:15:24,230 --> 00:15:31,060
group they might<font color="#E5E5E5"> come from and so</font>

341
00:15:28,910 --> 00:15:35,059
delving into the numbers a little<font color="#CCCCCC"> bit</font>

342
00:15:31,060 --> 00:15:39,018
<font color="#CCCCCC">you know we can see that</font><font color="#E5E5E5"> if we actually</font>

343
00:15:35,059 --> 00:15:40,819
the distance from the centroid for each

344
00:15:39,019 --> 00:15:42,879
of the clusters<font color="#E5E5E5"> for the particular</font>

345
00:15:40,819 --> 00:15:46,189
<font color="#E5E5E5">phrase that we're going to feed</font><font color="#CCCCCC"> in to</font>

346
00:15:42,879 --> 00:15:49,189
interpret<font color="#E5E5E5"> our vectorizer here</font><font color="#CCCCCC"> so we were</font>

347
00:15:46,189 --> 00:15:50,978
<font color="#CCCCCC">actually through a legitimate ransom</font>

348
00:15:49,189 --> 00:15:54,228
note that we ripped from one of our

349
00:15:50,979 --> 00:15:56,839
samples<font color="#E5E5E5"> and provided it to</font><font color="#CCCCCC"> the</font>

350
00:15:54,229 --> 00:16:00,069
vectorizer and you know<font color="#E5E5E5"> we wanted to get</font>

351
00:15:56,839 --> 00:16:03,709
a idea<font color="#E5E5E5"> of which cluster that's going to</font>

352
00:16:00,069 --> 00:16:05,899
essentially<font color="#E5E5E5"> attend towards and lo and</font>

353
00:16:03,709 --> 00:16:09,758
behold<font color="#E5E5E5"> that was cluster 3 which is the</font>

354
00:16:05,899 --> 00:16:09,759
cluster<font color="#CCCCCC"> that has our</font><font color="#E5E5E5"> ransom notes in it</font>

355
00:16:10,629 --> 00:16:18,319
and so if we come up<font color="#CCCCCC"> with a phrase</font>

356
00:16:15,949 --> 00:16:20,988
that's similar to<font color="#CCCCCC"> a ransom note but</font>

357
00:16:18,319 --> 00:16:23,059
actually is in portraying<font color="#E5E5E5"> the exact</font>

358
00:16:20,989 --> 00:16:25,219
purpose<font color="#E5E5E5"> of</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> ransom</font><font color="#CCCCCC"> note</font>

359
00:16:23,059 --> 00:16:27,379
<font color="#E5E5E5">we'll see it actually doesn't you know</font>

360
00:16:25,219 --> 00:16:29,299
sorted into cluster<font color="#CCCCCC"> 3 while it</font><font color="#E5E5E5"> uses some</font>

361
00:16:27,379 --> 00:16:30,889
of the same<font color="#CCCCCC"> language it's not</font><font color="#E5E5E5"> using in</font>

362
00:16:29,299 --> 00:16:33,489
the same manner<font color="#CCCCCC"> so it actually ends up</font>

363
00:16:30,889 --> 00:16:40,069
in cluster number<font color="#E5E5E5"> 4 which is actually a</font>

364
00:16:33,489 --> 00:16:41,629
newsgroup for computer<font color="#E5E5E5"> graphics so the</font>

365
00:16:40,069 --> 00:16:44,059
results<font color="#E5E5E5"> out of the exploratory research</font>

366
00:16:41,629 --> 00:16:47,539
well despite a very<font color="#E5E5E5"> small set of data</font>

367
00:16:44,059 --> 00:16:50,419
<font color="#CCCCCC">and you</font><font color="#E5E5E5"> know to go back we only had 173</font>

368
00:16:47,539 --> 00:16:52,309
ransom notes<font color="#CCCCCC"> the ramps notes clustered</font>

369
00:16:50,419 --> 00:16:55,519
together very<font color="#CCCCCC"> well so they used a lot of</font>

370
00:16:52,309 --> 00:16:57,409
<font color="#E5E5E5">the same</font><font color="#CCCCCC"> language</font><font color="#E5E5E5"> um</font><font color="#CCCCCC"> and with the second</font>

371
00:16:55,519 --> 00:16:59,179
sample<font color="#E5E5E5"> that example that I</font><font color="#CCCCCC"> showed there</font>

372
00:16:57,409 --> 00:17:01,669
with the with the subtle different

373
00:16:59,179 --> 00:17:03,799
phrasing<font color="#CCCCCC"> there is some nuance in how the</font>

374
00:17:01,669 --> 00:17:05,868
data is clustered it's not just going<font color="#E5E5E5"> to</font>

375
00:17:03,799 --> 00:17:09,289
<font color="#E5E5E5">throw anything together that has that</font>

376
00:17:05,868 --> 00:17:12,378
says file and encrypt<font color="#CCCCCC"> you know it's</font>

377
00:17:09,289 --> 00:17:14,919
there's definitely more<font color="#E5E5E5"> to it than that</font>

378
00:17:12,378 --> 00:17:17,329
so seeing how the clustering worked out

379
00:17:14,919 --> 00:17:20,149
<font color="#CCCCCC">we're gonna</font><font color="#E5E5E5"> say that the data set seems</font>

380
00:17:17,329 --> 00:17:23,079
appropriate for<font color="#CCCCCC"> classification you know</font>

381
00:17:20,148 --> 00:17:25,368
and didn't<font color="#E5E5E5"> have time</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> it but</font><font color="#CCCCCC"> ATS</font><font color="#E5E5E5"> any</font>

382
00:17:23,079 --> 00:17:27,829
<font color="#E5E5E5">visualization</font><font color="#CCCCCC"> would have been very nice</font>

383
00:17:25,368 --> 00:17:31,490
for this<font color="#E5E5E5"> project but</font><font color="#CCCCCC"> gain</font><font color="#E5E5E5"> ground get a</font>

384
00:17:27,829 --> 00:17:34,190
lot - okay so building a<font color="#CCCCCC"> proof of</font>

385
00:17:31,490 --> 00:17:36,200
<font color="#CCCCCC">concept framework so what do we really</font>

386
00:17:34,190 --> 00:17:40,220
<font color="#E5E5E5">need well we need a way to obtain file</font>

387
00:17:36,200 --> 00:17:43,340
change events in your real time<font color="#E5E5E5"> and we</font>

388
00:17:40,220 --> 00:17:47,090
need a<font color="#E5E5E5"> way</font><font color="#CCCCCC"> to pass those file pass</font><font color="#E5E5E5"> into</font>

389
00:17:43,340 --> 00:17:48,310
a something that's going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> read in the</font>

390
00:17:47,090 --> 00:17:51,389
file contents

391
00:17:48,310 --> 00:17:54,399
and essentially determine if the text

392
00:17:51,390 --> 00:17:55,630
<font color="#E5E5E5">comprises</font><font color="#CCCCCC"> a rings our note and then if</font>

393
00:17:54,400 --> 00:17:58,030
we've determined if it's<font color="#E5E5E5"> a ransom</font><font color="#CCCCCC"> note</font>

394
00:17:55,630 --> 00:18:02,560
<font color="#CCCCCC">we</font><font color="#E5E5E5"> need to go ahead and suspend</font><font color="#CCCCCC"> that</font>

395
00:17:58,030 --> 00:18:04,120
process and alert the<font color="#CCCCCC"> user</font><font color="#E5E5E5"> so since this</font>

396
00:18:02,560 --> 00:18:06,850
is<font color="#E5E5E5"> a pretty big problem to kind of take</font>

397
00:18:04,120 --> 00:18:09,520
on you know<font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to put put out some</font>

398
00:18:06,850 --> 00:18:11,770
restrictions on<font color="#E5E5E5"> you know how this is</font>

399
00:18:09,520 --> 00:18:14,770
<font color="#E5E5E5">going to play out</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> only going to</font>

400
00:18:11,770 --> 00:18:17,700
<font color="#E5E5E5">work with English notes we're gonna</font>

401
00:18:14,770 --> 00:18:20,110
restrict<font color="#E5E5E5"> things strictly to text files</font>

402
00:18:17,700 --> 00:18:22,690
<font color="#CCCCCC">the reasoning behind this is any sort of</font>

403
00:18:20,110 --> 00:18:24,399
formatted text<font color="#E5E5E5"> is gonna</font><font color="#CCCCCC"> require</font>

404
00:18:22,690 --> 00:18:25,990
<font color="#E5E5E5">additional parsing and I believe that</font>

405
00:18:24,400 --> 00:18:28,780
<font color="#E5E5E5">was kind of outside the scope</font><font color="#CCCCCC"> of the</font>

406
00:18:25,990 --> 00:18:30,280
problem<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we're</font><font color="#CCCCCC"> working</font><font color="#E5E5E5"> with here</font><font color="#CCCCCC"> any</font>

407
00:18:28,780 --> 00:18:32,410
<font color="#E5E5E5">certain images we're gonna have to use</font>

408
00:18:30,280 --> 00:18:34,120
OCR<font color="#CCCCCC"> for that</font><font color="#E5E5E5"> again that's kind of</font>

409
00:18:32,410 --> 00:18:36,430
<font color="#E5E5E5">outside</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> scope of the goal for the</font>

410
00:18:34,120 --> 00:18:38,889
project<font color="#E5E5E5"> here and we're also going to</font>

411
00:18:36,430 --> 00:18:41,080
restrict files to file sizes that are

412
00:18:38,890 --> 00:18:42,880
<font color="#E5E5E5">smaller than 20 kilobytes</font><font color="#CCCCCC"> reasoning</font>

413
00:18:41,080 --> 00:18:45,220
behind<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is once you start</font><font color="#CCCCCC"> looking at</font>

414
00:18:42,880 --> 00:18:48,010
enough ransom notes you'll notice that a

415
00:18:45,220 --> 00:18:50,680
vast<font color="#E5E5E5"> majority of them are smaller than</font>

416
00:18:48,010 --> 00:18:53,290
<font color="#E5E5E5">two kilobytes</font><font color="#CCCCCC"> and so if you</font><font color="#E5E5E5"> provide a</font>

417
00:18:50,680 --> 00:18:54,580
<font color="#E5E5E5">little bit of you know space there</font><font color="#CCCCCC"> for</font>

418
00:18:53,290 --> 00:18:57,700
some<font color="#E5E5E5"> of the larger notes that actually</font>

419
00:18:54,580 --> 00:18:59,860
provide like a you<font color="#CCCCCC"> know the whole modus</font>

420
00:18:57,700 --> 00:19:01,690
operandi behind there

421
00:18:59,860 --> 00:19:03,459
you know<font color="#E5E5E5"> ransomware campaign and that</font>

422
00:19:01,690 --> 00:19:04,870
sort of thing<font color="#E5E5E5"> you know then you have</font>

423
00:19:03,460 --> 00:19:06,640
like some of them bump up a<font color="#E5E5E5"> little bit</font>

424
00:19:04,870 --> 00:19:08,500
but but generally<font color="#E5E5E5"> they're going to be</font>

425
00:19:06,640 --> 00:19:09,880
very small notes they're just trying<font color="#CCCCCC"> to</font>

426
00:19:08,500 --> 00:19:11,860
get their point across<font color="#E5E5E5"> that your files</font>

427
00:19:09,880 --> 00:19:16,840
are<font color="#E5E5E5"> hosed and you know you need to send</font>

428
00:19:11,860 --> 00:19:19,659
them money<font color="#CCCCCC"> so the way we're gonna break</font>

429
00:19:16,840 --> 00:19:21,490
things out<font color="#E5E5E5"> is into you know three</font>

430
00:19:19,660 --> 00:19:24,820
distinct components<font color="#CCCCCC"> but they're gonna</font>

431
00:19:21,490 --> 00:19:27,460
run<font color="#E5E5E5"> within</font><font color="#CCCCCC"> two processes so we'll</font><font color="#E5E5E5"> have a</font>

432
00:19:24,820 --> 00:19:29,620
file change event listener<font color="#E5E5E5"> and the goal</font>

433
00:19:27,460 --> 00:19:32,170
of<font color="#CCCCCC"> that is it's</font><font color="#E5E5E5"> going to take new file</font>

434
00:19:29,620 --> 00:19:35,739
<font color="#CCCCCC">offence</font><font color="#E5E5E5"> and place it into queue for</font><font color="#CCCCCC"> the</font>

435
00:19:32,170 --> 00:19:37,870
second process process<font color="#CCCCCC"> B</font><font color="#E5E5E5"> there's going</font>

436
00:19:35,740 --> 00:19:41,530
to be a component that<font color="#E5E5E5"> will handle the</font>

437
00:19:37,870 --> 00:19:43,870
text<font color="#CCCCCC"> extraction and also the machine</font>

438
00:19:41,530 --> 00:19:45,550
learning classifier that<font color="#CCCCCC"> will retrieve</font>

439
00:19:43,870 --> 00:19:48,100
<font color="#E5E5E5">the events from the</font><font color="#CCCCCC"> queue that</font><font color="#E5E5E5"> process a</font>

440
00:19:45,550 --> 00:19:49,659
<font color="#CCCCCC">is depositing into</font><font color="#E5E5E5"> and the process</font>

441
00:19:48,100 --> 00:19:52,090
mitigation handler will also be in

442
00:19:49,660 --> 00:19:56,560
<font color="#E5E5E5">process B and that's</font><font color="#CCCCCC"> only invoked if the</font>

443
00:19:52,090 --> 00:19:59,470
classifier finds a<font color="#E5E5E5"> minutes ago so here's</font>

444
00:19:56,560 --> 00:20:02,200
kind<font color="#E5E5E5"> of a you know good overview of how</font>

445
00:19:59,470 --> 00:20:04,119
a detection scenario would play

446
00:20:02,200 --> 00:20:06,369
the<font color="#E5E5E5"> ransomware is going to</font><font color="#CCCCCC"> execute and</font>

447
00:20:04,119 --> 00:20:09,999
drop a ransom note<font color="#CCCCCC"> in the root of</font><font color="#E5E5E5"> the C</font>

448
00:20:06,369 --> 00:20:11,289
Drive<font color="#CCCCCC"> the event listener is going to you</font>

449
00:20:09,999 --> 00:20:14,259
know be<font color="#E5E5E5"> pulling for new file change</font>

450
00:20:11,289 --> 00:20:17,070
<font color="#E5E5E5">events and it gets the file path for</font>

451
00:20:14,259 --> 00:20:20,619
ransom note<font color="#E5E5E5"> text</font><font color="#CCCCCC"> into the root of the C</font>

452
00:20:17,070 --> 00:20:23,769
<font color="#E5E5E5">it passes that file path to</font><font color="#CCCCCC"> the text</font>

453
00:20:20,619 --> 00:20:25,509
extractor and classifier the text

454
00:20:23,769 --> 00:20:29,139
extractor will read in<font color="#CCCCCC"> the contents of</font>

455
00:20:25,509 --> 00:20:32,769
<font color="#E5E5E5">the ransom note</font><font color="#CCCCCC"> and pass it to the</font><font color="#E5E5E5"> model</font>

456
00:20:29,139 --> 00:20:37,479
<font color="#CCCCCC">and then</font><font color="#E5E5E5"> the classifier returns yes back</font>

457
00:20:32,769 --> 00:20:43,059
to<font color="#CCCCCC"> the event listener and then</font><font color="#E5E5E5"> the</font>

458
00:20:37,480 --> 00:20:46,950
ransom or bill will be suspended<font color="#CCCCCC"> so for</font>

459
00:20:43,059 --> 00:20:48,970
the framework<font color="#E5E5E5"> what we wanted to do is</font>

460
00:20:46,950 --> 00:20:50,200
come up<font color="#CCCCCC"> with</font><font color="#E5E5E5"> the data set it was</font><font color="#CCCCCC"> going</font>

461
00:20:48,970 --> 00:20:52,029
<font color="#CCCCCC">to be a</font><font color="#E5E5E5"> little more reflective what we</font>

462
00:20:50,200 --> 00:20:56,200
might typically<font color="#E5E5E5"> find on</font><font color="#CCCCCC"> a Windows host</font>

463
00:20:52,029 --> 00:20:58,360
and so we took a subset<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> twenty</font>

464
00:20:56,200 --> 00:21:00,869
newsgroups data set<font color="#CCCCCC"> we're</font><font color="#E5E5E5"> gonna stick</font>

465
00:20:58,360 --> 00:21:04,748
with around<font color="#CCCCCC"> 8,000 messages this time</font><font color="#E5E5E5"> and</font>

466
00:21:00,869 --> 00:21:07,539
then also we pulled in<font color="#E5E5E5"> you know a little</font>

467
00:21:04,749 --> 00:21:11,019
<font color="#CCCCCC">over 3,000 text files from Windows</font><font color="#E5E5E5"> host</font>

468
00:21:07,539 --> 00:21:14,169
and these mostly come comprises of log

469
00:21:11,019 --> 00:21:15,309
files read<font color="#CCCCCC"> Me's and Sawyer files</font><font color="#E5E5E5"> thinks</font>

470
00:21:14,169 --> 00:21:17,799
that nature that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> might typically</font>

471
00:21:15,309 --> 00:21:23,320
find on<font color="#E5E5E5"> it with</font><font color="#CCCCCC"> us host</font><font color="#E5E5E5"> so we ended up</font>

472
00:21:17,799 --> 00:21:24,850
with<font color="#CCCCCC"> around 11,000 files or so and and</font>

473
00:21:23,320 --> 00:21:26,678
yep that's that's kind of what we build

474
00:21:24,850 --> 00:21:29,408
off of<font color="#E5E5E5"> with the ransom</font><font color="#CCCCCC"> notes</font>

475
00:21:26,679 --> 00:21:32,019
we essentially doubled the size of<font color="#E5E5E5"> our</font>

476
00:21:29,409 --> 00:21:34,240
sample set<font color="#E5E5E5"> I was able to find a</font><font color="#CCCCCC"> few more</font>

477
00:21:32,019 --> 00:21:36,100
<font color="#CCCCCC">resources for pulling down ransom notes</font>

478
00:21:34,240 --> 00:21:39,249
so<font color="#CCCCCC"> that helped build</font><font color="#E5E5E5"> that up a little</font>

479
00:21:36,100 --> 00:21:42,219
<font color="#E5E5E5">bit and you know despite doubling the</font>

480
00:21:39,249 --> 00:21:45,580
size of the set of ransom notes<font color="#E5E5E5"> that so</font>

481
00:21:42,220 --> 00:21:48,070
leaves us you know very you know

482
00:21:45,580 --> 00:21:52,570
<font color="#E5E5E5">outnumbered quite a bit</font><font color="#CCCCCC"> above that by</font>

483
00:21:48,070 --> 00:21:54,340
the benign data and so for for the POC

484
00:21:52,570 --> 00:21:56,019
framework what we wanted<font color="#E5E5E5"> to do was try</font>

485
00:21:54,340 --> 00:21:58,178
<font color="#CCCCCC">to address</font><font color="#E5E5E5"> the data set</font><font color="#CCCCCC"> imbalance and</font><font color="#E5E5E5"> so</font>

486
00:21:56,019 --> 00:22:00,909
we're<font color="#E5E5E5"> gonna use smoke</font><font color="#CCCCCC"> to generate our</font>

487
00:21:58,179 --> 00:22:05,679
own synthetic data to try<font color="#CCCCCC"> to make up</font><font color="#E5E5E5"> for</font>

488
00:22:00,909 --> 00:22:07,899
<font color="#E5E5E5">that so the approach for the classifier</font>

489
00:22:05,679 --> 00:22:10,480
<font color="#E5E5E5">we're going to use</font><font color="#CCCCCC"> tf-idf for our</font>

490
00:22:07,899 --> 00:22:12,600
feature selection<font color="#CCCCCC"> use the tf-idf</font>

491
00:22:10,480 --> 00:22:15,399
vectorizer

492
00:22:12,600 --> 00:22:15,879
<font color="#CCCCCC">and what we're doing is we're</font><font color="#E5E5E5"> breaking</font>

493
00:22:15,399 --> 00:22:19,510
this down

494
00:22:15,880 --> 00:22:22,059
<font color="#E5E5E5">to a supervised learning problem we're</font>

495
00:22:19,510 --> 00:22:23,799
using<font color="#CCCCCC"> label</font><font color="#E5E5E5"> data here we're distinctly</font>

496
00:22:22,059 --> 00:22:25,418
labeling them into notes this time<font color="#E5E5E5"> and</font>

497
00:22:23,799 --> 00:22:28,418
then we're distinctly labeling the

498
00:22:25,419 --> 00:22:30,340
benign<font color="#CCCCCC"> data the assignments</font><font color="#E5E5E5"> and you know</font>

499
00:22:28,419 --> 00:22:33,760
<font color="#E5E5E5">we have a binary classification problem</font>

500
00:22:30,340 --> 00:22:35,740
if we're provided a you know a block of

501
00:22:33,760 --> 00:22:37,660
text<font color="#E5E5E5"> is this going to be a ransom note</font>

502
00:22:35,740 --> 00:22:40,270
or is it benign data<font color="#E5E5E5"> that's all we're</font>

503
00:22:37,660 --> 00:22:43,120
trying<font color="#E5E5E5"> to answer and the approach we</font>

504
00:22:40,270 --> 00:22:47,950
decide to<font color="#CCCCCC"> use naive</font><font color="#E5E5E5"> Bayes</font><font color="#CCCCCC"> and you know</font>

505
00:22:43,120 --> 00:22:50,289
more specifically be multinomial<font color="#CCCCCC"> envy so</font>

506
00:22:47,950 --> 00:22:52,270
here's what our<font color="#E5E5E5"> data processing pipeline</font>

507
00:22:50,289 --> 00:22:55,990
essentially looks like we<font color="#E5E5E5"> start with</font><font color="#CCCCCC"> our</font>

508
00:22:52,270 --> 00:22:58,330
label<font color="#E5E5E5"> data set</font><font color="#CCCCCC"> comprised of ransom notes</font>

509
00:22:55,990 --> 00:23:01,350
in benign text in our pre tokenization

510
00:22:58,330 --> 00:23:03,879
step we're gonna strip out characters

511
00:23:01,350 --> 00:23:06,280
convert all the characters to lowercase

512
00:23:03,880 --> 00:23:10,059
<font color="#CCCCCC">we're gonna do the tokenization</font><font color="#E5E5E5"> done</font>

513
00:23:06,280 --> 00:23:11,860
with<font color="#E5E5E5"> Spacey</font><font color="#CCCCCC"> and then</font><font color="#E5E5E5"> post tokenization</font>

514
00:23:10,059 --> 00:23:14,200
<font color="#CCCCCC">we're going to only keep the</font>

515
00:23:11,860 --> 00:23:17,340
alphanumeric<font color="#E5E5E5"> strings as before strip out</font>

516
00:23:14,200 --> 00:23:22,150
stop words<font color="#CCCCCC"> carry</font><font color="#E5E5E5"> out limit sensation</font>

517
00:23:17,340 --> 00:23:26,799
<font color="#CCCCCC">then we'll convert that set of data then</font>

518
00:23:22,150 --> 00:23:29,169
to vector<font color="#E5E5E5"> using a</font><font color="#CCCCCC"> tf-idf vectorizer and</font>

519
00:23:26,799 --> 00:23:30,580
then we'll address the<font color="#E5E5E5"> data set and</font>

520
00:23:29,169 --> 00:23:32,799
<font color="#E5E5E5">balance as I previously mentioned using</font>

521
00:23:30,580 --> 00:23:36,870
<font color="#CCCCCC">spoke and then the training</font><font color="#E5E5E5"> will take</font>

522
00:23:32,799 --> 00:23:36,870
<font color="#E5E5E5">place with the naive</font><font color="#CCCCCC"> Bayes classifier so</font>

523
00:23:37,260 --> 00:23:47,049
<font color="#CCCCCC">for testing</font><font color="#E5E5E5"> we're going to split into a</font>

524
00:23:42,240 --> 00:23:50,830
<font color="#E5E5E5">8020 subsets using trained</font><font color="#CCCCCC"> tests split</font>

525
00:23:47,049 --> 00:23:53,020
and you know just to<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know is</font>

526
00:23:50,830 --> 00:23:54,280
probably you<font color="#E5E5E5"> know might be known by most</font>

527
00:23:53,020 --> 00:23:57,039
see you guys but<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know just going</font>

528
00:23:54,280 --> 00:23:58,840
<font color="#E5E5E5">over some terminology here you know for</font>

529
00:23:57,039 --> 00:24:01,480
<font color="#E5E5E5">accuracy score that's referring to</font><font color="#CCCCCC"> the</font>

530
00:23:58,840 --> 00:24:03,428
accuracy<font color="#CCCCCC"> of the actual classification F</font>

531
00:24:01,480 --> 00:24:06,610
and<font color="#CCCCCC"> the score</font><font color="#E5E5E5"> is a weighted average of</font>

532
00:24:03,429 --> 00:24:11,020
the<font color="#E5E5E5"> precision and recall confusion</font>

533
00:24:06,610 --> 00:24:13,600
matrix just provides a overview<font color="#E5E5E5"> of false</font>

534
00:24:11,020 --> 00:24:16,750
<font color="#E5E5E5">negatives false positive true positives</font>

535
00:24:13,600 --> 00:24:18,520
and true negatives<font color="#E5E5E5"> and in terms of</font>

536
00:24:16,750 --> 00:24:23,890
<font color="#E5E5E5">cross-validation what we're going to do</font>

537
00:24:18,520 --> 00:24:25,690
is it's it's it represents testing the

538
00:24:23,890 --> 00:24:29,770
<font color="#E5E5E5">models ability to predict new data</font>

539
00:24:25,690 --> 00:24:32,230
that's not<font color="#E5E5E5"> being seen previously</font>

540
00:24:29,770 --> 00:24:35,110
so the goal<font color="#CCCCCC"> of that is</font><font color="#E5E5E5"> that you want to</font>

541
00:24:32,230 --> 00:24:38,920
<font color="#E5E5E5">run multiple runs with different</font>

542
00:24:35,110 --> 00:24:42,100
training and<font color="#CCCCCC"> tested</font><font color="#E5E5E5"> test</font><font color="#CCCCCC"> datasets you</font>

543
00:24:38,920 --> 00:24:44,770
know essentially<font color="#E5E5E5"> to test model</font><font color="#CCCCCC"> as in as</font>

544
00:24:42,100 --> 00:24:46,689
many ways<font color="#E5E5E5"> as</font><font color="#CCCCCC"> you can and for</font><font color="#E5E5E5"> our</font>

545
00:24:44,770 --> 00:24:50,860
<font color="#E5E5E5">purposes we're just</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to use Monte</font>

546
00:24:46,690 --> 00:24:53,200
Carlo using a<font color="#E5E5E5"> shuffle split so with one</font>

547
00:24:50,860 --> 00:24:57,100
single<font color="#E5E5E5"> test</font><font color="#CCCCCC"> we actually</font><font color="#E5E5E5"> ended up with</font>

548
00:24:53,200 --> 00:24:57,910
<font color="#CCCCCC">pretty</font><font color="#E5E5E5"> good results 99.5% accuracy</font><font color="#CCCCCC"> 90</font>

549
00:24:57,100 --> 00:25:00,429
<font color="#CCCCCC">1.86</font>

550
00:24:57,910 --> 00:25:03,100
f1 score if we scale<font color="#CCCCCC"> up the valley</font><font color="#E5E5E5"> value</font>

551
00:25:00,430 --> 00:25:05,470
<font color="#E5E5E5">to 100 and with our confusion matrix</font>

552
00:25:03,100 --> 00:25:05,889
<font color="#CCCCCC">results look pretty well</font><font color="#E5E5E5"> pretty good</font><font color="#CCCCCC"> as</font>

553
00:25:05,470 --> 00:25:08,230
well

554
00:25:05,890 --> 00:25:10,960
we have<font color="#E5E5E5"> only we have zero false</font>

555
00:25:08,230 --> 00:25:13,120
negatives only<font color="#E5E5E5"> 14 false positives and</font>

556
00:25:10,960 --> 00:25:16,660
<font color="#E5E5E5">you know everything else seems to sort</font>

557
00:25:13,120 --> 00:25:20,260
<font color="#E5E5E5">itself out well but a single test</font>

558
00:25:16,660 --> 00:25:23,020
doesn't really show you enough<font color="#CCCCCC"> about the</font>

559
00:25:20,260 --> 00:25:25,810
model you might<font color="#E5E5E5"> just have happen</font><font color="#CCCCCC"> to come</font>

560
00:25:23,020 --> 00:25:27,370
upon<font color="#E5E5E5"> they you know an outlier and since</font>

561
00:25:25,810 --> 00:25:29,409
we're doing<font color="#E5E5E5"> the 80/20 split with</font>

562
00:25:27,370 --> 00:25:32,290
randomized<font color="#E5E5E5"> data sets</font>

563
00:25:29,410 --> 00:25:34,060
maybe we just happen upon a very lucky

564
00:25:32,290 --> 00:25:36,340
set that's gonna make our<font color="#E5E5E5"> numbers well</font>

565
00:25:34,060 --> 00:25:41,139
<font color="#E5E5E5">so with the</font><font color="#CCCCCC"> cross-validation</font><font color="#E5E5E5"> we're gonna</font>

566
00:25:36,340 --> 00:25:45,250
run it<font color="#E5E5E5"> ten times with randomized sets</font>

567
00:25:41,140 --> 00:25:46,810
<font color="#E5E5E5">and so the cross-validation</font><font color="#CCCCCC"> as you can</font>

568
00:25:45,250 --> 00:25:48,790
see see<font color="#CCCCCC"> Balmer</font><font color="#E5E5E5"> and Bill Gates are still</font>

569
00:25:46,810 --> 00:25:52,389
clapping and dancing up there<font color="#CCCCCC"> for the</font>

570
00:25:48,790 --> 00:25:55,450
windows<font color="#CCCCCC"> 95 launch</font><font color="#E5E5E5"> release so things are</font>

571
00:25:52,390 --> 00:25:58,690
still going well<font color="#CCCCCC"> average accuracy</font><font color="#E5E5E5"> is</font>

572
00:25:55,450 --> 00:26:01,870
about what<font color="#E5E5E5"> we saw in our one run</font><font color="#CCCCCC"> f1</font>

573
00:25:58,690 --> 00:26:03,580
score about the same and the<font color="#E5E5E5"> confucian</font>

574
00:26:01,870 --> 00:26:06,100
matrix looks about the same<font color="#CCCCCC"> as well</font><font color="#E5E5E5"> so I</font>

575
00:26:03,580 --> 00:26:09,100
think<font color="#E5E5E5"> what</font><font color="#CCCCCC"> that it our specific</font><font color="#E5E5E5"> case</font>

576
00:26:06,100 --> 00:26:12,939
<font color="#CCCCCC">that confirms</font><font color="#E5E5E5"> that the the data does</font>

577
00:26:09,100 --> 00:26:15,189
classify extremely well<font color="#E5E5E5"> here's a</font>

578
00:26:12,940 --> 00:26:19,600
graphical representation of the<font color="#E5E5E5"> scores</font>

579
00:26:15,190 --> 00:26:22,000
<font color="#E5E5E5">that</font><font color="#CCCCCC"> just kind of showed the you know</font>

580
00:26:19,600 --> 00:26:25,449
some fluctuation in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> f1 score but</font>

581
00:26:22,000 --> 00:26:27,940
they generally<font color="#CCCCCC"> at least stay above 85 or</font>

582
00:26:25,450 --> 00:26:29,620
so accuracy<font color="#E5E5E5"> it stays extremely high</font>

583
00:26:27,940 --> 00:26:33,460
above like ninety nine point<font color="#CCCCCC"> three</font>

584
00:26:29,620 --> 00:26:35,590
percent on average<font color="#E5E5E5"> you know as again</font>

585
00:26:33,460 --> 00:26:37,860
that said I'm<font color="#E5E5E5"> not need a scientist but</font>

586
00:26:35,590 --> 00:26:41,350
<font color="#E5E5E5">if we believe</font><font color="#CCCCCC"> these are good results</font>

587
00:26:37,860 --> 00:26:42,240
<font color="#E5E5E5">okay so now going</font><font color="#CCCCCC"> back to our event</font>

588
00:26:41,350 --> 00:26:44,189
listener so

589
00:26:42,240 --> 00:26:45,750
essentially what we need is something

590
00:26:44,190 --> 00:26:48,420
<font color="#CCCCCC">that's going to monitor file change</font>

591
00:26:45,750 --> 00:26:51,179
events for us<font color="#E5E5E5"> we need to monitor all</font>

592
00:26:48,420 --> 00:26:54,360
processes on<font color="#CCCCCC"> the host</font><font color="#E5E5E5"> and what we need</font>

593
00:26:51,179 --> 00:26:57,480
is<font color="#CCCCCC"> a mapping</font><font color="#E5E5E5"> of each</font><font color="#CCCCCC"> specific event to a</font>

594
00:26:54,360 --> 00:26:59,850
specific source process and in

595
00:26:57,480 --> 00:27:02,820
particular for<font color="#CCCCCC"> our case we want to</font>

596
00:26:59,850 --> 00:27:04,230
<font color="#E5E5E5">monitor</font><font color="#CCCCCC"> file creation events</font><font color="#E5E5E5"> and so</font>

597
00:27:02,820 --> 00:27:06,510
there's a few<font color="#CCCCCC"> ways that we could go</font>

598
00:27:04,230 --> 00:27:10,679
about<font color="#CCCCCC"> this but some</font><font color="#E5E5E5"> of them aren't</font><font color="#CCCCCC"> going</font>

599
00:27:06,510 --> 00:27:12,720
to hit every<font color="#CCCCCC"> single of those three</font>

600
00:27:10,679 --> 00:27:14,309
objectives<font color="#CCCCCC"> or they're</font><font color="#E5E5E5"> gonna hit them and</font>

601
00:27:12,720 --> 00:27:18,330
but it's<font color="#E5E5E5"> going to be a little more</font>

602
00:27:14,309 --> 00:27:20,480
difficult<font color="#CCCCCC"> right so since we're</font><font color="#E5E5E5"> code base</font>

603
00:27:18,330 --> 00:27:23,309
that<font color="#E5E5E5"> we're typically using is is Python</font>

604
00:27:20,480 --> 00:27:25,440
<font color="#CCCCCC">you know first the other thing comes -</font>

605
00:27:23,309 --> 00:27:28,550
<font color="#CCCCCC">you might want to use Python watcher the</font>

606
00:27:25,440 --> 00:27:32,550
problem with that<font color="#E5E5E5"> is it relies on the</font>

607
00:27:28,550 --> 00:27:35,340
<font color="#CCCCCC">redirect</font><font color="#E5E5E5"> changes API which I believe</font>

608
00:27:32,550 --> 00:27:39,059
<font color="#E5E5E5">only only operates on a</font><font color="#CCCCCC"> specific</font>

609
00:27:35,340 --> 00:27:41,189
directory<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> little noisy actually is</font>

610
00:27:39,059 --> 00:27:42,840
a pretty<font color="#E5E5E5"> big drag on performance and to</font>

611
00:27:41,190 --> 00:27:45,600
top<font color="#CCCCCC"> it all off</font><font color="#E5E5E5"> does not provide a</font>

612
00:27:42,840 --> 00:27:48,809
mapping of a specific change event to a

613
00:27:45,600 --> 00:27:51,409
specific source process<font color="#E5E5E5"> and the reason</font>

614
00:27:48,809 --> 00:27:55,110
<font color="#CCCCCC">why that isn't suitable for us is that</font>

615
00:27:51,410 --> 00:27:56,640
<font color="#E5E5E5">we would have no idea</font><font color="#CCCCCC"> what process that</font>

616
00:27:55,110 --> 00:27:58,949
specific event<font color="#E5E5E5"> comes from and we don't</font>

617
00:27:56,640 --> 00:28:00,900
<font color="#E5E5E5">know what process to suspend or</font>

618
00:27:58,950 --> 00:28:02,280
terminate in that instance<font color="#E5E5E5"> so</font>

619
00:28:00,900 --> 00:28:04,860
<font color="#E5E5E5">essentially if we're using this as</font><font color="#CCCCCC"> a</font>

620
00:28:02,280 --> 00:28:06,510
detection framework the output of<font color="#E5E5E5"> thats</font>

621
00:28:04,860 --> 00:28:07,860
<font color="#E5E5E5">gonna be pointless for us we would just</font>

622
00:28:06,510 --> 00:28:09,929
know<font color="#E5E5E5"> that there's a ransom</font><font color="#CCCCCC"> note on the</font>

623
00:28:07,860 --> 00:28:13,260
disk<font color="#CCCCCC"> we have no idea what</font><font color="#E5E5E5"> stop so what</font>

624
00:28:09,929 --> 00:28:17,520
are we gonna do<font color="#CCCCCC"> event logs that'd</font><font color="#E5E5E5"> be one</font>

625
00:28:13,260 --> 00:28:20,340
way of of<font color="#E5E5E5"> obtaining events for</font><font color="#CCCCCC"> our</font>

626
00:28:17,520 --> 00:28:23,910
purposes<font color="#E5E5E5"> or you can also write up a file</font>

627
00:28:20,340 --> 00:28:25,260
min mini filter driver<font color="#CCCCCC"> file a mini</font>

628
00:28:23,910 --> 00:28:27,420
filter driver in the long run is

629
00:28:25,260 --> 00:28:29,100
definitely the best approach to take<font color="#E5E5E5"> but</font>

630
00:28:27,420 --> 00:28:31,380
it's also the most<font color="#CCCCCC"> time consuming and</font>

631
00:28:29,100 --> 00:28:32,820
<font color="#CCCCCC">you know if you're writing code for the</font>

632
00:28:31,380 --> 00:28:36,210
kernel you're definitely prone to make

633
00:28:32,820 --> 00:28:38,059
<font color="#CCCCCC">mistakes and crashing box</font><font color="#E5E5E5"> so what do we</font>

634
00:28:36,210 --> 00:28:41,160
do in this case<font color="#E5E5E5"> well luckily for</font><font color="#CCCCCC"> us</font>

635
00:28:38,059 --> 00:28:46,730
there's<font color="#CCCCCC"> syslog and</font><font color="#E5E5E5"> within the last year</font>

636
00:28:41,160 --> 00:28:49,800
or<font color="#CCCCCC"> so sis Mon they opened up their</font>

637
00:28:46,730 --> 00:28:52,200
framework for exposing<font color="#E5E5E5"> file creation</font>

638
00:28:49,800 --> 00:28:55,620
events that they're gonna write to<font color="#E5E5E5"> their</font>

639
00:28:52,200 --> 00:28:58,770
own event log<font color="#E5E5E5"> and so with event</font>

640
00:28:55,620 --> 00:29:01,559
<font color="#E5E5E5">eleven all we need</font><font color="#CCCCCC"> to do essentially</font><font color="#E5E5E5"> is</font>

641
00:28:58,770 --> 00:29:04,139
query the event log<font color="#E5E5E5"> for file creation</font>

642
00:29:01,559 --> 00:29:09,178
events and we're going<font color="#E5E5E5"> to get all the</font>

643
00:29:04,140 --> 00:29:11,100
data<font color="#E5E5E5"> that we</font><font color="#CCCCCC"> need so in order to reduce</font>

644
00:29:09,179 --> 00:29:14,970
the<font color="#E5E5E5"> noise that</font><font color="#CCCCCC"> Sivan creates because</font><font color="#E5E5E5"> if</font>

645
00:29:11,100 --> 00:29:17,730
you ever installed system on and query

646
00:29:14,970 --> 00:29:19,620
<font color="#E5E5E5">the logs occasionally with just default</font>

647
00:29:17,730 --> 00:29:21,840
settings<font color="#E5E5E5"> there's gonna be a lot of noise</font>

648
00:29:19,620 --> 00:29:23,489
in there<font color="#E5E5E5"> so essentially that</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> just</font>

649
00:29:21,840 --> 00:29:26,189
<font color="#E5E5E5">created</font><font color="#CCCCCC"> a very simple stripped-down</font>

650
00:29:23,490 --> 00:29:27,539
<font color="#E5E5E5">config file to just eliminate any sort</font>

651
00:29:26,190 --> 00:29:30,720
of process creation<font color="#E5E5E5"> and termination</font>

652
00:29:27,539 --> 00:29:32,460
events and limit it<font color="#CCCCCC"> only the</font><font color="#E5E5E5"> file</font>

653
00:29:30,720 --> 00:29:34,860
creation events only<font color="#E5E5E5"> to dot exe files</font>

654
00:29:32,460 --> 00:29:36,690
and<font color="#E5E5E5"> that's right there the simple</font>

655
00:29:34,860 --> 00:29:39,360
command<font color="#CCCCCC"> that you</font><font color="#E5E5E5"> need to run in order</font><font color="#CCCCCC"> to</font>

656
00:29:36,690 --> 00:29:43,080
get system on<font color="#CCCCCC"> configured to work</font><font color="#E5E5E5"> with</font>

657
00:29:39,360 --> 00:29:48,178
this<font color="#CCCCCC"> framework</font><font color="#E5E5E5"> and then also to query</font>

658
00:29:43,080 --> 00:29:52,020
the logs<font color="#CCCCCC"> VW of via WMI you need to</font>

659
00:29:48,179 --> 00:29:58,980
specifically<font color="#E5E5E5"> add a event key or register</font>

660
00:29:52,020 --> 00:30:00,510
key to allow event log<font color="#CCCCCC"> query so as</font><font color="#E5E5E5"> I</font>

661
00:29:58,980 --> 00:30:04,919
<font color="#E5E5E5">mentioned before what we're trying to do</font>

662
00:30:00,510 --> 00:30:07,230
is pull the<font color="#E5E5E5"> event log</font><font color="#CCCCCC"> for new file paths</font>

663
00:30:04,919 --> 00:30:09,630
<font color="#E5E5E5">and we're going to be using the WMI</font>

664
00:30:07,230 --> 00:30:11,039
query language we need to limit the<font color="#E5E5E5"> size</font>

665
00:30:09,630 --> 00:30:13,020
<font color="#CCCCCC">of</font><font color="#E5E5E5"> results set in order to reduce</font>

666
00:30:11,039 --> 00:30:16,470
<font color="#E5E5E5">overhead</font><font color="#CCCCCC"> because the event logs can</font>

667
00:30:13,020 --> 00:30:18,600
build up over<font color="#E5E5E5"> time</font><font color="#CCCCCC"> and we need to parse</font>

668
00:30:16,470 --> 00:30:25,110
that data<font color="#CCCCCC"> from</font><font color="#E5E5E5"> the results and then pass</font>

669
00:30:18,600 --> 00:30:28,199
that to our classifier<font color="#E5E5E5"> work</font><font color="#CCCCCC"> queue so in</font>

670
00:30:25,110 --> 00:30:32,010
terms of the process mitigation<font color="#CCCCCC"> all we</font>

671
00:30:28,200 --> 00:30:37,020
need<font color="#E5E5E5"> to do is like at this point we know</font>

672
00:30:32,010 --> 00:30:40,559
<font color="#CCCCCC">that there is a ransom note on disk</font><font color="#E5E5E5"> we</font>

673
00:30:37,020 --> 00:30:42,899
know the source process and we also know

674
00:30:40,559 --> 00:30:45,418
the source process name<font color="#E5E5E5"> so now we need</font>

675
00:30:42,899 --> 00:30:47,370
<font color="#E5E5E5">to</font><font color="#CCCCCC"> determine if that information</font><font color="#E5E5E5"> is</font>

676
00:30:45,419 --> 00:30:51,960
still<font color="#CCCCCC"> accurate if there process still</font>

677
00:30:47,370 --> 00:30:53,549
exists so we're gonna<font color="#E5E5E5"> grab you know</font>

678
00:30:51,960 --> 00:30:55,260
early active process is to try<font color="#E5E5E5"> to</font>

679
00:30:53,549 --> 00:30:58,139
<font color="#E5E5E5">determine if that</font><font color="#CCCCCC"> process still exists</font>

680
00:30:55,260 --> 00:30:59,820
<font color="#CCCCCC">if it is if it does</font><font color="#E5E5E5"> and it's</font><font color="#CCCCCC"> selective</font>

681
00:30:58,140 --> 00:31:01,409
we're gonna suspend it we're gonna

682
00:30:59,820 --> 00:31:04,168
<font color="#E5E5E5">provide a pop-up to the user to tell</font>

683
00:31:01,409 --> 00:31:06,299
them that<font color="#CCCCCC"> a ranter</font><font color="#E5E5E5"> no is detected allow</font>

684
00:31:04,169 --> 00:31:09,120
them to terminate<font color="#E5E5E5"> or resume the process</font>

685
00:31:06,299 --> 00:31:10,620
and<font color="#CCCCCC"> also</font>

686
00:31:09,120 --> 00:31:13,080
if they do resume the process we need<font color="#CCCCCC"> to</font>

687
00:31:10,620 --> 00:31:14,610
<font color="#CCCCCC">maintain a</font><font color="#E5E5E5"> whitelist of process IDs</font><font color="#CCCCCC"> and</font>

688
00:31:13,080 --> 00:31:16,470
process names so<font color="#CCCCCC"> we don't</font><font color="#E5E5E5"> just keep</font>

689
00:31:14,610 --> 00:31:20,219
alerting over and over on the same

690
00:31:16,470 --> 00:31:22,140
process and so at this<font color="#E5E5E5"> point I'm gonna</font>

691
00:31:20,220 --> 00:31:29,070
do a live demo<font color="#E5E5E5"> let's see how this works</font>

692
00:31:22,140 --> 00:31:34,320
<font color="#CCCCCC">a lot of</font><font color="#E5E5E5"> confidence behind this</font><font color="#CCCCCC"> okay so</font>

693
00:31:29,070 --> 00:31:37,500
what we're working<font color="#E5E5E5"> with</font><font color="#CCCCCC"> here is a sample</font>

694
00:31:34,320 --> 00:31:39,120
of the<font color="#E5E5E5"> volcano ransomware and so right</font>

695
00:31:37,500 --> 00:31:40,559
here<font color="#CCCCCC"> I have process monitor running in</font>

696
00:31:39,120 --> 00:31:44,750
the<font color="#CCCCCC"> background I already have a filter</font>

697
00:31:40,559 --> 00:31:47,670
specifically for<font color="#E5E5E5"> right file</font><font color="#CCCCCC"> operations</font>

698
00:31:44,750 --> 00:31:50,970
<font color="#E5E5E5">that are</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> be written out by the</font>

699
00:31:47,670 --> 00:31:57,809
volcano dot exe process and so I execute

700
00:31:50,970 --> 00:32:01,429
this and that was pretty<font color="#E5E5E5"> quick</font><font color="#CCCCCC"> wasn't so</font>

701
00:31:57,809 --> 00:32:04,950
what<font color="#E5E5E5"> we have here</font><font color="#CCCCCC"> is it lists</font><font color="#E5E5E5"> out the</font>

702
00:32:01,429 --> 00:32:07,440
<font color="#E5E5E5">the file path of the ransom note</font><font color="#CCCCCC"> it</font>

703
00:32:04,950 --> 00:32:09,420
tells us the specific process the the

704
00:32:07,440 --> 00:32:11,309
source process path along<font color="#E5E5E5"> with the</font>

705
00:32:09,420 --> 00:32:14,190
specific bed and then it's giving us an

706
00:32:11,309 --> 00:32:17,010
option<font color="#CCCCCC"> click ok to determinate or okay</font>

707
00:32:14,190 --> 00:32:19,320
<font color="#E5E5E5">or cancel to resume and whitelist the</font>

708
00:32:17,010 --> 00:32:23,540
process for<font color="#E5E5E5"> further confirmation that</font>

709
00:32:19,320 --> 00:32:26,280
this worked 24 - 9 - volcano<font color="#E5E5E5"> dot exe</font>

710
00:32:23,540 --> 00:32:32,070
process<font color="#CCCCCC"> explorer is telling us that</font>

711
00:32:26,280 --> 00:32:35,399
suspended and if<font color="#E5E5E5"> we go to the process</font>

712
00:32:32,070 --> 00:32:38,250
<font color="#E5E5E5">monitor output we can see how fast that</font>

713
00:32:35,400 --> 00:32:43,530
<font color="#E5E5E5">actually took place if the first file</font>

714
00:32:38,250 --> 00:32:48,559
<font color="#E5E5E5">right was at you know</font><font color="#CCCCCC"> 536 55 here we're</font>

715
00:32:43,530 --> 00:32:52,620
gonna scroll down here<font color="#E5E5E5"> I can get this</font>

716
00:32:48,559 --> 00:32:56,639
536 56 so essentially one second after

717
00:32:52,620 --> 00:32:58,409
the<font color="#CCCCCC"> file writes begin is when our</font>

718
00:32:56,640 --> 00:33:00,330
detection<font color="#CCCCCC"> you know kicks off and misses</font>

719
00:32:58,410 --> 00:33:02,730
spent the process we can<font color="#CCCCCC"> even drill down</font>

720
00:33:00,330 --> 00:33:07,620
<font color="#CCCCCC">even further into</font><font color="#E5E5E5"> this to see you know</font>

721
00:33:02,730 --> 00:33:13,010
<font color="#E5E5E5">just how</font><font color="#CCCCCC"> long you know</font><font color="#E5E5E5"> it took for us</font><font color="#CCCCCC"> to</font>

722
00:33:07,620 --> 00:33:13,010
detect as soon as we saw a a text file

723
00:33:16,140 --> 00:33:22,690
so as we can<font color="#E5E5E5"> see the first ransom note</font>

724
00:33:20,620 --> 00:33:27,270
was written out to<font color="#CCCCCC"> the install</font><font color="#E5E5E5"> forge a</font>

725
00:33:22,690 --> 00:33:29,380
user actually<font color="#E5E5E5"> just the install forge a</font>

726
00:33:27,270 --> 00:33:32,020
directory<font color="#E5E5E5"> or actually that's the one who</font>

727
00:33:29,380 --> 00:33:33,780
that we<font color="#CCCCCC"> detected on but they all the</font>

728
00:33:32,020 --> 00:33:36,820
file rights took place within

729
00:33:33,780 --> 00:33:38,080
milliseconds of each<font color="#E5E5E5"> other</font><font color="#CCCCCC"> so depending</font>

730
00:33:36,820 --> 00:33:41,020
<font color="#E5E5E5">on how they're they're pulled from the</font>

731
00:33:38,080 --> 00:33:44,290
log<font color="#CCCCCC"> you know one might be seen before</font>

732
00:33:41,020 --> 00:33:46,740
the other<font color="#CCCCCC"> but</font><font color="#E5E5E5"> but essentially as</font><font color="#CCCCCC"> soon as</font>

733
00:33:44,290 --> 00:33:50,290
they<font color="#CCCCCC"> the rain-snow</font><font color="#E5E5E5"> first hits a disk</font>

734
00:33:46,740 --> 00:33:51,850
<font color="#CCCCCC">we're</font><font color="#E5E5E5"> gonna obtain the file pass by</font>

735
00:33:50,290 --> 00:33:55,600
querying out of that log and<font color="#E5E5E5"> we can see</font>

736
00:33:51,850 --> 00:34:01,030
things<font color="#E5E5E5"> and so if we go ahead and click</font>

737
00:33:55,600 --> 00:34:13,839
<font color="#CCCCCC">OK terminate the process</font><font color="#E5E5E5"> why volcana dot</font>

738
00:34:01,030 --> 00:34:16,270
exe<font color="#E5E5E5"> is no more and I'll attempt the demo</font>

739
00:34:13,840 --> 00:34:21,879
gods<font color="#CCCCCC"> one more time here and actually do</font>

740
00:34:16,270 --> 00:34:24,460
one more demo here for you<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> going to</font>

741
00:34:21,879 --> 00:34:26,799
run a sample<font color="#E5E5E5"> of BTC where I believe I</font>

742
00:34:24,460 --> 00:34:30,780
have the filters all set up

743
00:34:26,800 --> 00:34:30,780
<font color="#CCCCCC">oh actually</font><font color="#E5E5E5"> I didn't that wouldn't</font>

744
00:34:34,590 --> 00:34:37,709
[Music]

745
00:34:40,239 --> 00:34:45,939
so yeah just<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> set up my proc</font>

746
00:34:42,879 --> 00:34:50,168
<font color="#E5E5E5">monologue here just to give us</font><font color="#CCCCCC"> some more</font>

747
00:34:45,940 --> 00:35:00,300
<font color="#CCCCCC">of the output</font><font color="#E5E5E5"> okay so if we want BTC</font>

748
00:34:50,168 --> 00:35:02,710
<font color="#E5E5E5">where and we caught that one as well</font>

749
00:35:00,300 --> 00:35:04,990
<font color="#CCCCCC">so you can see that in this case there</font>

750
00:35:02,710 --> 00:35:06,700
were a few more follow<font color="#E5E5E5"> events that took</font>

751
00:35:04,990 --> 00:35:08,618
place<font color="#E5E5E5"> before we</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> came up</font><font color="#CCCCCC"> with</font>

752
00:35:06,700 --> 00:35:10,990
our<font color="#CCCCCC"> detection I mean it's it's</font>

753
00:35:08,619 --> 00:35:14,320
<font color="#E5E5E5">definitely gonna vary from case to case</font>

754
00:35:10,990 --> 00:35:16,089
depending<font color="#E5E5E5"> on how performant the querying</font>

755
00:35:14,320 --> 00:35:19,180
of this of the event<font color="#CCCCCC"> log is</font><font color="#E5E5E5"> going to</font>

756
00:35:16,089 --> 00:35:21,099
take place<font color="#CCCCCC"> you know as I kind of</font><font color="#E5E5E5"> alluded</font>

757
00:35:19,180 --> 00:35:22,598
to before all of our codes<font color="#E5E5E5"> running in</font>

758
00:35:21,099 --> 00:35:24,460
<font color="#E5E5E5">Python we're not running our own mini</font>

759
00:35:22,599 --> 00:35:26,740
filter driver we're simply just querying

760
00:35:24,460 --> 00:35:29,020
an event log repeatedly<font color="#E5E5E5"> every 10</font>

761
00:35:26,740 --> 00:35:30,549
milliseconds so it's gonna be<font color="#CCCCCC"> dragged on</font>

762
00:35:29,020 --> 00:35:32,710
resources<font color="#CCCCCC"> and you know</font><font color="#E5E5E5"> you've been doing</font>

763
00:35:30,550 --> 00:35:35,380
<font color="#CCCCCC">some like sort of timing analysis I I</font>

764
00:35:32,710 --> 00:35:38,200
noticed a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> different you know</font>

765
00:35:35,380 --> 00:35:42,369
results in terms of how long<font color="#CCCCCC"> the queries</font>

766
00:35:38,200 --> 00:35:44,859
were taking place<font color="#E5E5E5"> so not ideal for some</font>

767
00:35:42,369 --> 00:35:46,660
sort of<font color="#E5E5E5"> production</font><font color="#CCCCCC"> ready</font><font color="#E5E5E5"> environment</font>

768
00:35:44,859 --> 00:35:49,540
like please don't deploy this to your

769
00:35:46,660 --> 00:35:51,069
<font color="#E5E5E5">10,000 endpoint</font><font color="#CCCCCC"> network I take</font>

770
00:35:49,540 --> 00:35:55,420
absolutely<font color="#E5E5E5"> no</font><font color="#CCCCCC"> responsibility for</font><font color="#E5E5E5"> what</font>

771
00:35:51,070 --> 00:35:56,349
happens<font color="#CCCCCC"> but</font><font color="#E5E5E5"> you know for a limited</font>

772
00:35:55,420 --> 00:35:57,520
proof-of-concept

773
00:35:56,349 --> 00:36:01,740
<font color="#E5E5E5">this definitely gets the point across</font>

774
00:35:57,520 --> 00:36:01,740
you<font color="#E5E5E5"> can see that process</font><font color="#CCCCCC"> is also got</font>

775
00:36:07,200 --> 00:36:16,180
<font color="#E5E5E5">okay so getting into</font><font color="#CCCCCC"> a few more results</font>

776
00:36:11,970 --> 00:36:20,109
<font color="#E5E5E5">ahead time to test this out on</font><font color="#CCCCCC"> a few</font>

777
00:36:16,180 --> 00:36:22,480
other newer samples<font color="#E5E5E5"> so so out nine</font>

778
00:36:20,109 --> 00:36:25,810
samples<font color="#E5E5E5"> two of which that I showed you</font>

779
00:36:22,480 --> 00:36:28,150
test for<font color="#CCCCCC"> PTC</font><font color="#E5E5E5"> we're in volcano were able</font>

780
00:36:25,810 --> 00:36:31,720
to test<font color="#E5E5E5"> and detect those variants of</font>

781
00:36:28,150 --> 00:36:33,280
<font color="#E5E5E5">water samples</font><font color="#CCCCCC"> so for those specific</font>

782
00:36:31,720 --> 00:36:34,868
samples what makes<font color="#E5E5E5"> those a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> more</font>

783
00:36:33,280 --> 00:36:38,470
unique<font color="#E5E5E5"> is that</font><font color="#CCCCCC"> those ransom notes</font>

784
00:36:34,869 --> 00:36:41,680
weren't<font color="#CCCCCC"> previously seen they weren't</font>

785
00:36:38,470 --> 00:36:43,839
included in<font color="#CCCCCC"> our training set at all</font>

786
00:36:41,680 --> 00:36:46,029
you know that's essentially new data

787
00:36:43,839 --> 00:36:48,720
that that<font color="#E5E5E5"> comprises a little bit of a</font>

788
00:36:46,030 --> 00:36:50,770
<font color="#E5E5E5">holdout set now for us in this case</font>

789
00:36:48,720 --> 00:36:52,660
<font color="#E5E5E5">there's also</font><font color="#CCCCCC"> three samples I</font>

790
00:36:50,770 --> 00:36:55,780
specifically tested that have ransom

791
00:36:52,660 --> 00:36:57,578
notes that are in<font color="#CCCCCC"> our training set that</font>

792
00:36:55,780 --> 00:37:01,930
we were able<font color="#E5E5E5"> to you know test and eject</font>

793
00:36:57,579 --> 00:37:04,569
as well so in order<font color="#E5E5E5"> to get a better idea</font>

794
00:37:01,930 --> 00:37:06,490
of what<font color="#E5E5E5"> this really you know kind of</font>

795
00:37:04,569 --> 00:37:09,430
brings<font color="#E5E5E5"> to the table</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> wanted to produce</font>

796
00:37:06,490 --> 00:37:12,279
some<font color="#E5E5E5"> comparative results</font><font color="#CCCCCC"> I wanted</font><font color="#E5E5E5"> to</font>

797
00:37:09,430 --> 00:37:15,578
compare what the capabilities<font color="#CCCCCC"> this</font>

798
00:37:12,280 --> 00:37:18,819
framework<font color="#CCCCCC"> are</font><font color="#E5E5E5"> versus you know what else</font>

799
00:37:15,579 --> 00:37:22,300
is<font color="#E5E5E5"> out there in</font><font color="#CCCCCC"> terms</font><font color="#E5E5E5"> of free</font><font color="#CCCCCC"> ransom</font>

800
00:37:18,819 --> 00:37:26,550
order detection capabilities so we're

801
00:37:22,300 --> 00:37:30,430
gonna to be doing - very well

802
00:37:26,550 --> 00:37:31,990
unscientific<font color="#E5E5E5"> tests here</font><font color="#CCCCCC"> test one does</font>

803
00:37:30,430 --> 00:37:33,940
the product<font color="#E5E5E5"> detect the sample to me</font>

804
00:37:31,990 --> 00:37:35,379
<font color="#E5E5E5">that's extremely straightforward so</font>

805
00:37:33,940 --> 00:37:39,520
nothing<font color="#E5E5E5"> no I'm not pulling a bunch of</font>

806
00:37:35,380 --> 00:37:43,020
<font color="#E5E5E5">ser tests - we're trying</font><font color="#CCCCCC"> to detect which</font>

807
00:37:39,520 --> 00:37:47,980
is faster the classifier framework or

808
00:37:43,020 --> 00:37:50,829
rival product<font color="#E5E5E5"> A or B or C</font><font color="#CCCCCC"> the the reason</font>

809
00:37:47,980 --> 00:37:52,089
with<font color="#E5E5E5"> this</font><font color="#CCCCCC"> you know that</font><font color="#E5E5E5"> that it's you</font>

810
00:37:50,829 --> 00:37:54,280
know<font color="#E5E5E5"> maybe not the best way to measure</font>

811
00:37:52,089 --> 00:37:55,630
is that<font color="#E5E5E5"> there's definitely potentially a</font>

812
00:37:54,280 --> 00:37:57,490
lot of different complicating factors

813
00:37:55,630 --> 00:38:02,260
one of which could be driver altitude

814
00:37:57,490 --> 00:38:05,828
and assuming that<font color="#E5E5E5"> most of these products</font>

815
00:38:02,260 --> 00:38:09,339
are<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to be based off</font><font color="#CCCCCC"> of foul mini</font>

816
00:38:05,829 --> 00:38:13,030
<font color="#E5E5E5">filter drivers</font><font color="#CCCCCC"> the altitude in which the</font>

817
00:38:09,339 --> 00:38:15,640
drivers installed<font color="#E5E5E5"> could determine you</font>

818
00:38:13,030 --> 00:38:17,589
<font color="#E5E5E5">know which driver gets to see the</font>

819
00:38:15,640 --> 00:38:20,750
particular<font color="#E5E5E5"> file path first and do its</font>

820
00:38:17,589 --> 00:38:23,180
<font color="#CCCCCC">analysis before</font><font color="#E5E5E5"> it releases its access</font>

821
00:38:20,750 --> 00:38:25,550
the file<font color="#CCCCCC"> path you know for the next</font>

822
00:38:23,180 --> 00:38:27,529
<font color="#E5E5E5">driver on the stack</font>

823
00:38:25,550 --> 00:38:29,180
you know<font color="#E5E5E5"> don't exactly know how that</font>

824
00:38:27,530 --> 00:38:30,740
factors into things and you know wasn't

825
00:38:29,180 --> 00:38:33,259
<font color="#CCCCCC">perfectly interested and in reverse</font>

826
00:38:30,740 --> 00:38:35,419
engineering<font color="#E5E5E5"> all these products yeah but</font>

827
00:38:33,260 --> 00:38:36,230
you know definitely<font color="#E5E5E5"> take these results</font>

828
00:38:35,420 --> 00:38:41,000
with a grain of salt

829
00:38:36,230 --> 00:38:42,590
um<font color="#E5E5E5"> so without naming names</font><font color="#CCCCCC"> I was</font><font color="#E5E5E5"> told</font>

830
00:38:41,000 --> 00:38:46,820
<font color="#CCCCCC">you avoid that I don't want to cause</font>

831
00:38:42,590 --> 00:38:50,540
anybody any problems here<font color="#CCCCCC"> but</font><font color="#E5E5E5"> product</font><font color="#CCCCCC"> B</font>

832
00:38:46,820 --> 00:38:52,610
in our<font color="#E5E5E5"> case perform the best and and</font>

833
00:38:50,540 --> 00:38:54,500
<font color="#E5E5E5">also was typically faster than our</font>

834
00:38:52,610 --> 00:38:57,500
framework<font color="#E5E5E5"> there was only one instance I</font>

835
00:38:54,500 --> 00:39:00,140
<font color="#CCCCCC">believe where our framework detected</font>

836
00:38:57,500 --> 00:39:04,120
<font color="#CCCCCC">something before it but most of the</font>

837
00:39:00,140 --> 00:39:06,830
other<font color="#CCCCCC"> results were either ties or the</font>

838
00:39:04,120 --> 00:39:09,920
<font color="#CCCCCC">ordered product B was was faster in its</font>

839
00:39:06,830 --> 00:39:12,500
detection<font color="#E5E5E5"> by second or two</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> as for</font>

840
00:39:09,920 --> 00:39:15,350
product a<font color="#CCCCCC"> and C products C in particular</font>

841
00:39:12,500 --> 00:39:20,240
you know that<font color="#E5E5E5"> pretty spotty coverage in</font>

842
00:39:15,350 --> 00:39:23,810
terms of<font color="#E5E5E5"> detecting ransomware and even</font>

843
00:39:20,240 --> 00:39:27,439
<font color="#E5E5E5">yeah well when it did it at least</font>

844
00:39:23,810 --> 00:39:30,320
<font color="#E5E5E5">outperformed the framework but product</font><font color="#CCCCCC"> a</font>

845
00:39:27,440 --> 00:39:34,610
in<font color="#CCCCCC"> particular</font><font color="#E5E5E5"> yes it literally seemed to</font>

846
00:39:30,320 --> 00:39:37,250
<font color="#E5E5E5">cover all the cases or you</font><font color="#CCCCCC"> know eleven</font>

847
00:39:34,610 --> 00:39:40,610
out of<font color="#CCCCCC"> twelve</font><font color="#E5E5E5"> samples but in every</font>

848
00:39:37,250 --> 00:39:42,380
instance about<font color="#E5E5E5"> one you know our humble</font>

849
00:39:40,610 --> 00:39:43,610
little<font color="#CCCCCC"> Python</font><font color="#E5E5E5"> based framework that's</font>

850
00:39:42,380 --> 00:39:47,290
<font color="#E5E5E5">querying event logs every</font><font color="#CCCCCC"> ten</font>

851
00:39:43,610 --> 00:39:50,540
<font color="#E5E5E5">milliseconds was able to outperform it</font>

852
00:39:47,290 --> 00:39:51,770
so with that being<font color="#E5E5E5"> said to bring us back</font>

853
00:39:50,540 --> 00:39:53,390
<font color="#CCCCCC">down to earth</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know there are</font>

854
00:39:51,770 --> 00:39:56,690
<font color="#CCCCCC">definitely several limitations</font><font color="#E5E5E5"> involved</font>

855
00:39:53,390 --> 00:39:59,799
here you know despite be you know very

856
00:39:56,690 --> 00:40:02,630
<font color="#E5E5E5">promising results</font><font color="#CCCCCC"> that I just showed you</font>

857
00:39:59,800 --> 00:40:05,750
<font color="#CCCCCC">you know it's definitely a little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of</font>

858
00:40:02,630 --> 00:40:07,010
a loaded sort<font color="#E5E5E5"> of test there it's it's a</font>

859
00:40:05,750 --> 00:40:09,380
<font color="#CCCCCC">lone</font><font color="#E5E5E5"> scenario because we're already</font>

860
00:40:07,010 --> 00:40:12,140
<font color="#E5E5E5">working with samples</font><font color="#CCCCCC"> that we</font>

861
00:40:09,380 --> 00:40:15,020
specifically<font color="#E5E5E5"> know drop text file ransom</font>

862
00:40:12,140 --> 00:40:16,990
notes<font color="#E5E5E5"> and so at the moment that's all</font>

863
00:40:15,020 --> 00:40:21,770
<font color="#E5E5E5">that we're it's tuned to use is or</font>

864
00:40:16,990 --> 00:40:23,660
<font color="#E5E5E5">detectives text ransom notes so you</font><font color="#CCCCCC"> know</font>

865
00:40:21,770 --> 00:40:26,890
that's one<font color="#E5E5E5"> huge limitation but that's</font>

866
00:40:23,660 --> 00:40:30,529
one that<font color="#E5E5E5"> we knew at least</font><font color="#CCCCCC"> going in the</font>

867
00:40:26,890 --> 00:40:31,940
there<font color="#E5E5E5"> are some samples</font><font color="#CCCCCC"> I don't know any</font>

868
00:40:30,530 --> 00:40:34,040
specific<font color="#E5E5E5"> families at the moment because</font>

869
00:40:31,940 --> 00:40:35,510
<font color="#E5E5E5">I've tested so</font><font color="#CCCCCC"> many samples it'll pass</font>

870
00:40:34,040 --> 00:40:37,580
years all the family names run together

871
00:40:35,510 --> 00:40:40,040
<font color="#CCCCCC">but there's some samples</font><font color="#E5E5E5"> that don't drop</font>

872
00:40:37,580 --> 00:40:42,799
<font color="#E5E5E5">in ransom notes until nearly the end so</font>

873
00:40:40,040 --> 00:40:44,060
when they've you know especially you

874
00:40:42,800 --> 00:40:45,890
<font color="#CCCCCC">know encrypted everything on the file</font>

875
00:40:44,060 --> 00:40:48,890
system then they go<font color="#CCCCCC"> back and</font><font color="#E5E5E5"> write out</font>

876
00:40:45,890 --> 00:40:49,910
the ransom note so it's kind of you<font color="#E5E5E5"> know</font>

877
00:40:48,890 --> 00:40:52,640
would defeat the<font color="#CCCCCC"> purpose of her</font>

878
00:40:49,910 --> 00:40:54,410
<font color="#E5E5E5">framework and in that instance</font><font color="#CCCCCC"> there are</font>

879
00:40:52,640 --> 00:40:56,690
some samples that<font color="#CCCCCC"> are</font><font color="#E5E5E5"> actually extremely</font>

880
00:40:54,410 --> 00:40:58,910
<font color="#E5E5E5">annoying</font><font color="#CCCCCC"> and will solve some</font><font color="#E5E5E5"> sort of</font>

881
00:40:56,690 --> 00:41:00,950
persistence<font color="#CCCCCC"> ahead of time</font><font color="#E5E5E5"> and actually</font>

882
00:40:58,910 --> 00:41:02,810
<font color="#E5E5E5">keep respawning the same process over</font>

883
00:41:00,950 --> 00:41:03,470
<font color="#E5E5E5">and over attempting to encrypt more and</font>

884
00:41:02,810 --> 00:41:06,460
more files

885
00:41:03,470 --> 00:41:09,379
<font color="#E5E5E5">so in that case yeah we might catch</font><font color="#CCCCCC"> the</font>

886
00:41:06,460 --> 00:41:11,480
grantor process over and<font color="#CCCCCC"> over but you're</font>

887
00:41:09,380 --> 00:41:12,950
<font color="#E5E5E5">still</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> infected</font><font color="#E5E5E5"> and you</font><font color="#CCCCCC"> know</font>

888
00:41:11,480 --> 00:41:16,670
there's definitely<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> more work that</font>

889
00:41:12,950 --> 00:41:19,910
needs<font color="#CCCCCC"> to be done in that case and then</font>

890
00:41:16,670 --> 00:41:22,760
<font color="#E5E5E5">to get into a more</font><font color="#CCCCCC"> wider problem there's</font>

891
00:41:19,910 --> 00:41:23,870
definitely samples that<font color="#E5E5E5"> take a different</font>

892
00:41:22,760 --> 00:41:26,060
approach to ransomware

893
00:41:23,870 --> 00:41:28,540
there were two ones that attack the

894
00:41:26,060 --> 00:41:31,700
<font color="#E5E5E5">system in different</font><font color="#CCCCCC"> ways and besides</font>

895
00:41:28,540 --> 00:41:35,140
encrypting individual files<font color="#CCCCCC"> some will</font>

896
00:41:31,700 --> 00:41:38,029
corrupt the<font color="#CCCCCC"> NPR overwrite the bootloader</font>

897
00:41:35,140 --> 00:41:41,480
<font color="#CCCCCC">they'll do a more full disk</font><font color="#E5E5E5"> encryption</font>

898
00:41:38,030 --> 00:41:43,730
<font color="#CCCCCC">Rob</font><font color="#E5E5E5"> disk based approach</font><font color="#CCCCCC"> or some some are</font>

899
00:41:41,480 --> 00:41:45,350
<font color="#CCCCCC">just simply very annoying screen lockers</font>

900
00:41:43,730 --> 00:41:46,850
<font color="#CCCCCC">which will make it impossible</font><font color="#E5E5E5"> to just</font>

901
00:41:45,350 --> 00:41:50,200
log<font color="#CCCCCC"> into</font><font color="#E5E5E5"> Windows on its own without</font>

902
00:41:46,850 --> 00:41:53,089
actually<font color="#E5E5E5"> corrupting the files in any way</font>

903
00:41:50,200 --> 00:41:54,970
<font color="#CCCCCC">and then last but not</font><font color="#E5E5E5"> least we're only</font>

904
00:41:53,090 --> 00:41:57,110
working<font color="#CCCCCC"> with</font><font color="#E5E5E5"> in English right now</font>

905
00:41:54,970 --> 00:42:00,020
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> definitely ransomware that</font>

906
00:41:57,110 --> 00:42:03,580
targets<font color="#CCCCCC"> spanish-speaking countries</font>

907
00:42:00,020 --> 00:42:05,600
Russian countries<font color="#E5E5E5"> there's you know</font>

908
00:42:03,580 --> 00:42:08,240
russian-speaking countries there's a lot

909
00:42:05,600 --> 00:42:10,130
of you<font color="#CCCCCC"> know other</font><font color="#E5E5E5"> sort of variants out</font>

910
00:42:08,240 --> 00:42:13,100
there but you know<font color="#CCCCCC"> outside the scope</font><font color="#E5E5E5"> of</font>

911
00:42:10,130 --> 00:42:17,330
<font color="#E5E5E5">this talk in this feature for this</font>

912
00:42:13,100 --> 00:42:18,950
presentation so future work the<font color="#E5E5E5"> the</font>

913
00:42:17,330 --> 00:42:20,569
first thing<font color="#E5E5E5"> that comes to mind is we</font>

914
00:42:18,950 --> 00:42:22,879
could<font color="#CCCCCC"> definitely improve the datasets we</font>

915
00:42:20,570 --> 00:42:25,640
could introduce much more ransom notes

916
00:42:22,880 --> 00:42:29,000
which would<font color="#E5E5E5"> mean</font><font color="#CCCCCC"> that we</font><font color="#E5E5E5"> would rely less</font>

917
00:42:25,640 --> 00:42:31,460
on our<font color="#E5E5E5"> synthetic data so we need to keep</font>

918
00:42:29,000 --> 00:42:34,040
pulling in ransom notes as new variants

919
00:42:31,460 --> 00:42:36,230
are discovered<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we'd also</font><font color="#E5E5E5"> we could</font>

920
00:42:34,040 --> 00:42:39,170
also do a much better job of<font color="#CCCCCC"> bringing a</font>

921
00:42:36,230 --> 00:42:41,060
representative benign text data set from

922
00:42:39,170 --> 00:42:44,260
<font color="#E5E5E5">different installers readme files things</font>

923
00:42:41,060 --> 00:42:46,910
like that so you<font color="#E5E5E5"> could use</font><font color="#CCCCCC"> nine night</font>

924
00:42:44,260 --> 00:42:48,180
<font color="#E5E5E5">chocolaty some sort of other mass</font>

925
00:42:46,910 --> 00:42:52,620
installer<font color="#E5E5E5"> to</font>

926
00:42:48,180 --> 00:42:55,049
build up a large corpus of text<font color="#E5E5E5"> files</font>

927
00:42:52,620 --> 00:42:58,799
that<font color="#E5E5E5"> are gonna be written to disk</font><font color="#CCCCCC"> and</font>

928
00:42:55,050 --> 00:43:00,690
kind<font color="#CCCCCC"> of pull from there we do this</font><font color="#E5E5E5"> a few</font>

929
00:42:58,800 --> 00:43:03,390
<font color="#CCCCCC">times but definitely porting to a much</font>

930
00:43:00,690 --> 00:43:05,910
lower level<font color="#CCCCCC"> languages</font><font color="#E5E5E5"> C C++ something</font>

931
00:43:03,390 --> 00:43:08,190
like that<font color="#E5E5E5"> that would yield significant</font>

932
00:43:05,910 --> 00:43:10,470
performance improvements<font color="#E5E5E5"> I mean and if</font>

933
00:43:08,190 --> 00:43:12,720
we also<font color="#E5E5E5"> tie</font><font color="#CCCCCC"> into working with the file</font>

934
00:43:10,470 --> 00:43:14,310
mini filter driver then you'd have you

935
00:43:12,720 --> 00:43:17,009
know<font color="#E5E5E5"> incredible performance and we could</font>

936
00:43:14,310 --> 00:43:19,710
easily<font color="#E5E5E5"> at least for those</font><font color="#CCCCCC"> cases that I</font>

937
00:43:17,010 --> 00:43:21,690
was mentioning<font color="#E5E5E5"> you know outperform</font><font color="#CCCCCC"> you</font>

938
00:43:19,710 --> 00:43:25,920
know products from you know very large

939
00:43:21,690 --> 00:43:30,630
companies and parsers<font color="#CCCCCC"> for other file</font>

940
00:43:25,920 --> 00:43:33,750
types<font color="#E5E5E5"> I alluded to before</font><font color="#CCCCCC"> that the</font><font color="#E5E5E5"> image</font>

941
00:43:30,630 --> 00:43:36,180
<font color="#CCCCCC">based ransom notes ransom notes</font><font color="#E5E5E5"> that use</font>

942
00:43:33,750 --> 00:43:39,270
formatted text<font color="#CCCCCC"> it'd be great to</font><font color="#E5E5E5"> support</font>

943
00:43:36,180 --> 00:43:40,759
those putting the work in<font color="#E5E5E5"> to do those</font>

944
00:43:39,270 --> 00:43:42,630
probably shouldn't be too<font color="#E5E5E5"> much work</font>

945
00:43:40,760 --> 00:43:45,360
<font color="#CCCCCC">expanding language support that'd be</font>

946
00:43:42,630 --> 00:43:47,520
great and<font color="#E5E5E5"> actually you know finally to</font>

947
00:43:45,360 --> 00:43:48,870
go back to<font color="#E5E5E5"> data science experimenting</font>

948
00:43:47,520 --> 00:43:50,330
with different classification approaches

949
00:43:48,870 --> 00:43:52,920
would<font color="#E5E5E5"> be great</font>

950
00:43:50,330 --> 00:43:55,470
<font color="#E5E5E5">naivebayes just just will worked for</font>

951
00:43:52,920 --> 00:43:57,330
<font color="#E5E5E5">this particular</font><font color="#CCCCCC"> problem you know is this</font>

952
00:43:55,470 --> 00:43:59,640
kind<font color="#E5E5E5"> of well low-hanging fruit because</font>

953
00:43:57,330 --> 00:44:01,410
you know<font color="#CCCCCC"> I kind of pulled a couple of</font>

954
00:43:59,640 --> 00:44:02,460
data scientists I work with and you know

955
00:44:01,410 --> 00:44:04,350
they've<font color="#E5E5E5"> told me to go in the</font><font color="#CCCCCC"> direction</font>

956
00:44:02,460 --> 00:44:07,020
of using naive<font color="#E5E5E5"> Bayes and</font><font color="#CCCCCC"> that's the way</font>

957
00:44:04,350 --> 00:44:10,920
I went<font color="#CCCCCC"> Frost</font><font color="#E5E5E5"> the results were good</font>

958
00:44:07,020 --> 00:44:15,780
enough<font color="#CCCCCC"> so</font><font color="#E5E5E5"> that's why I stuck with and so</font>

959
00:44:10,920 --> 00:44:19,200
as of<font color="#CCCCCC"> now</font><font color="#E5E5E5"> the source code for all this</font>

960
00:44:15,780 --> 00:44:22,470
is available<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the endgame github</font>

961
00:44:19,200 --> 00:44:32,180
it is a<font color="#E5E5E5"> GPL v3 and it would live this</font>

962
00:44:22,470 --> 00:44:37,250
morning so to wrap<font color="#CCCCCC"> things up oh sorry</font>

963
00:44:32,180 --> 00:44:37,250
yep<font color="#CCCCCC"> I think I got it into</font><font color="#E5E5E5"> but</font>

964
00:44:39,630 --> 00:44:47,250
all right<font color="#E5E5E5"> everybody good okay</font>

965
00:44:43,200 --> 00:44:49,740
so wrap things up<font color="#CCCCCC"> with</font><font color="#E5E5E5"> our exploratory</font>

966
00:44:47,250 --> 00:44:51,020
research we use clustering to prove that

967
00:44:49,740 --> 00:44:55,470
the data book was suitable for

968
00:44:51,020 --> 00:44:57,210
<font color="#E5E5E5">classification</font><font color="#CCCCCC"> we were able to determine</font>

969
00:44:55,470 --> 00:45:00,209
<font color="#E5E5E5">the ransom notes</font><font color="#CCCCCC"> do share enough</font>

970
00:44:57,210 --> 00:45:04,890
features<font color="#E5E5E5"> across the board</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> would</font>

971
00:45:00,210 --> 00:45:08,190
make this a viable solution<font color="#E5E5E5"> product</font><font color="#CCCCCC"> you</font>

972
00:45:04,890 --> 00:45:10,080
know for this<font color="#E5E5E5"> particular problem and you</font>

973
00:45:08,190 --> 00:45:11,160
know<font color="#E5E5E5"> we very much realize this isn't</font>

974
00:45:10,080 --> 00:45:13,319
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> catch all the waiting somewhere</font>

975
00:45:11,160 --> 00:45:16,170
but going back<font color="#CCCCCC"> to talking about our</font>

976
00:45:13,320 --> 00:45:18,090
layered security<font color="#E5E5E5"> approach</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> can be an</font>

977
00:45:16,170 --> 00:45:22,440
integral<font color="#E5E5E5"> piece of</font><font color="#CCCCCC"> layered detection and</font>

978
00:45:18,090 --> 00:45:25,140
improve the time to detect for a dynamic

979
00:45:22,440 --> 00:45:28,080
dynamic detent detection when we do

980
00:45:25,140 --> 00:45:31,560
happen<font color="#CCCCCC"> to miss something statically as</font>

981
00:45:28,080 --> 00:45:33,330
we see the<font color="#E5E5E5"> PLC does work but there are</font>

982
00:45:31,560 --> 00:45:34,110
many<font color="#CCCCCC"> improvements to be made</font><font color="#E5E5E5"> and if I</font>

983
00:45:33,330 --> 00:45:35,250
can do this

984
00:45:34,110 --> 00:45:36,840
I'm sure you guys<font color="#E5E5E5"> can do much better</font>

985
00:45:35,250 --> 00:45:41,400
<font color="#CCCCCC">because yeah</font><font color="#E5E5E5"> this actually</font><font color="#CCCCCC"> no data</font>

986
00:45:36,840 --> 00:45:43,200
science<font color="#E5E5E5"> it I don't</font><font color="#CCCCCC"> quick what little</font>

987
00:45:41,400 --> 00:45:46,380
plug here<font color="#CCCCCC"> for</font><font color="#E5E5E5"> something from endgame</font>

988
00:45:43,200 --> 00:45:47,790
<font color="#E5E5E5">mani right here will stamp your</font>

989
00:45:46,380 --> 00:45:49,080
passports if you guys picked up the

990
00:45:47,790 --> 00:45:52,500
passport cards from the end<font color="#E5E5E5"> game booth</font>

991
00:45:49,080 --> 00:45:54,180
earlier<font color="#CCCCCC"> if not you can talk to</font><font color="#E5E5E5"> us and</font>

992
00:45:52,500 --> 00:45:59,060
<font color="#E5E5E5">we'll point you in the right direction</font>

993
00:45:54,180 --> 00:45:59,060
<font color="#CCCCCC">so yeah</font><font color="#E5E5E5"> thanks for coming</font><font color="#CCCCCC"> I guess</font>

994
00:45:59,500 --> 00:46:05,699
[Applause]

995
00:46:06,970 --> 00:46:17,589
yeah<font color="#E5E5E5"> you don't have questions find me</font>

996
00:46:09,890 --> 00:46:20,120
<font color="#CCCCCC">later yes</font>

997
00:46:17,590 --> 00:46:21,730
in doing this I realize you're using

998
00:46:20,120 --> 00:46:25,370
<font color="#CCCCCC">high-level in-store</font><font color="#E5E5E5"> low-level language</font>

999
00:46:21,730 --> 00:46:26,750
did<font color="#E5E5E5"> you do any performance</font><font color="#CCCCCC"> tests to see</font>

1000
00:46:25,370 --> 00:46:28,310
<font color="#CCCCCC">like how</font><font color="#E5E5E5"> this would work on a file</font>

1001
00:46:26,750 --> 00:46:30,260
server<font color="#E5E5E5"> so that you can see the</font>

1002
00:46:28,310 --> 00:46:33,470
difference between<font color="#E5E5E5"> that</font><font color="#CCCCCC"> huh using</font><font color="#E5E5E5"> Python</font>

1003
00:46:30,260 --> 00:46:34,820
or even assembly<font color="#E5E5E5"> and doing these kind of</font>

1004
00:46:33,470 --> 00:46:36,680
<font color="#E5E5E5">cuts that's really what</font><font color="#CCCCCC"> this comes down</font>

1005
00:46:34,820 --> 00:46:38,390
<font color="#CCCCCC">to is you're looking</font><font color="#E5E5E5"> for specific</font>

1006
00:46:36,680 --> 00:46:39,950
keywords<font color="#E5E5E5"> mm-hmm</font>

1007
00:46:38,390 --> 00:46:43,480
file servers<font color="#E5E5E5"> are what you're gonna be</font>

1008
00:46:39,950 --> 00:46:46,839
worst hit by by<font color="#E5E5E5"> ransomware so oh yeah um</font>

1009
00:46:43,480 --> 00:46:49,310
yeah I hadn't got<font color="#CCCCCC"> around to like kind of</font>

1010
00:46:46,840 --> 00:46:50,900
<font color="#E5E5E5">you know doing</font><font color="#CCCCCC"> any testing with any sort</font>

1011
00:46:49,310 --> 00:46:53,210
<font color="#E5E5E5">of</font><font color="#CCCCCC"> lower</font><font color="#E5E5E5"> level languages I think</font><font color="#CCCCCC"> you</font>

1012
00:46:50,900 --> 00:46:54,680
know at least<font color="#CCCCCC"> for carrying out</font><font color="#E5E5E5"> the POC</font>

1013
00:46:53,210 --> 00:46:57,230
<font color="#CCCCCC">oh is this</font><font color="#E5E5E5"> easiest to use</font>

1014
00:46:54,680 --> 00:47:00,620
you know<font color="#E5E5E5"> Python</font><font color="#CCCCCC"> and all the performance</font>

1015
00:46:57,230 --> 00:47:01,850
<font color="#E5E5E5">yeah I mean like you definitely yeah I</font>

1016
00:47:00,620 --> 00:47:03,950
can<font color="#E5E5E5"> easily see how that would</font><font color="#CCCCCC"> be</font>

1017
00:47:01,850 --> 00:47:07,490
extremely you know performant for

1018
00:47:03,950 --> 00:47:09,379
carrying<font color="#E5E5E5"> things out in that way</font><font color="#CCCCCC"> but but</font>

1019
00:47:07,490 --> 00:47:11,600
<font color="#E5E5E5">yeah</font><font color="#CCCCCC"> yeah I think</font><font color="#E5E5E5"> that would be you know</font>

1020
00:47:09,380 --> 00:47:14,390
<font color="#E5E5E5">kind of next step</font><font color="#CCCCCC"> is to to go</font><font color="#E5E5E5"> down that</font>

1021
00:47:11,600 --> 00:47:17,509
<font color="#CCCCCC">path and you know</font><font color="#E5E5E5"> you know write our own</font>

1022
00:47:14,390 --> 00:47:21,440
driver<font color="#CCCCCC"> you know and do all the</font><font color="#E5E5E5"> other</font>

1023
00:47:17,510 --> 00:47:30,650
data science of you know at a much lower

1024
00:47:21,440 --> 00:47:31,940
<font color="#CCCCCC">level language in</font><font color="#E5E5E5"> Python 3 do you know</font>

1025
00:47:30,650 --> 00:47:34,370
of any the nerves are working on

1026
00:47:31,940 --> 00:47:36,740
solutions<font color="#CCCCCC"> for masses</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> NetApp and</font>

1027
00:47:34,370 --> 00:47:43,069
integrating directly into their

1028
00:47:36,740 --> 00:47:46,220
functionality<font color="#E5E5E5"> hmm uh not not that I've</font>

1029
00:47:43,070 --> 00:47:48,500
heard of<font color="#CCCCCC"> most</font><font color="#E5E5E5"> of the the applications</font>

1030
00:47:46,220 --> 00:47:51,439
that that you know that<font color="#CCCCCC"> I was kind of</font>

1031
00:47:48,500 --> 00:47:53,030
able<font color="#E5E5E5"> to discover just</font><font color="#CCCCCC"> once by</font><font color="#E5E5E5"> you know</font>

1032
00:47:51,440 --> 00:47:54,920
some some<font color="#CCCCCC"> more the main vendors and</font><font color="#E5E5E5"> they</font>

1033
00:47:53,030 --> 00:47:56,930
just you know<font color="#E5E5E5"> we're kind of</font><font color="#CCCCCC"> tailor</font>

1034
00:47:54,920 --> 00:47:58,640
tailoring them just to you<font color="#CCCCCC"> know kind of</font>

1035
00:47:56,930 --> 00:48:00,410
give<font color="#CCCCCC"> people</font><font color="#E5E5E5"> a rough sense of how their</font>

1036
00:47:58,640 --> 00:48:02,509
detection works and I don't<font color="#E5E5E5"> know if</font>

1037
00:48:00,410 --> 00:48:05,089
that's<font color="#E5E5E5"> necessarily their full enterprise</font>

1038
00:48:02,510 --> 00:48:07,040
support<font color="#CCCCCC"> you know what they would</font><font color="#E5E5E5"> roll</font>

1039
00:48:05,090 --> 00:48:08,270
out if you you know got big contract for

1040
00:48:07,040 --> 00:48:08,810
<font color="#E5E5E5">ten</font><font color="#CCCCCC"> thousand endpoints or</font><font color="#E5E5E5"> something like</font>

1041
00:48:08,270 --> 00:48:12,640
that

1042
00:48:08,810 --> 00:48:12,640
<font color="#E5E5E5">Cisco</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right</font>

1043
00:48:13,930 --> 00:48:31,009
<font color="#E5E5E5">all right down with Cisco</font><font color="#CCCCCC"> melis</font><font color="#E5E5E5"> yeah</font>

1044
00:48:23,450 --> 00:48:32,419
yeah yeah yeah yeah<font color="#E5E5E5"> yeah that that's the</font>

1045
00:48:31,010 --> 00:48:35,349
first<font color="#E5E5E5"> I've heard of it though but but</font>

1046
00:48:32,420 --> 00:48:37,790
yeah I I think<font color="#CCCCCC"> is you know as ransomware</font>

1047
00:48:35,349 --> 00:48:39,650
<font color="#E5E5E5">you know continues to you know pick up</font>

1048
00:48:37,790 --> 00:48:42,380
in prominence<font color="#CCCCCC"> I think that right you'll</font>

1049
00:48:39,650 --> 00:48:44,210
see<font color="#E5E5E5"> more you know specific tailored</font>

1050
00:48:42,380 --> 00:48:47,960
solution for<font color="#E5E5E5"> those solutions for</font>

1051
00:48:44,210 --> 00:48:50,599
<font color="#CCCCCC">different products have you seen any</font>

1052
00:48:47,960 --> 00:48:54,710
other<font color="#CCCCCC"> os's</font><font color="#E5E5E5"> besides Windows that get</font>

1053
00:48:50,599 --> 00:48:56,270
<font color="#E5E5E5">targeted for ransomware yeah um so that</font>

1054
00:48:54,710 --> 00:48:59,000
there's<font color="#CCCCCC"> definitely a few different like</font>

1055
00:48:56,270 --> 00:49:00,970
<font color="#E5E5E5">Mac OS ransomware families but as we've</font>

1056
00:48:59,000 --> 00:49:03,230
been<font color="#CCCCCC"> tracking</font><font color="#E5E5E5"> them they haven't really</font>

1057
00:49:00,970 --> 00:49:05,419
evolved significantly within<font color="#CCCCCC"> the past</font>

1058
00:49:03,230 --> 00:49:07,880
like couple<font color="#CCCCCC"> years or so</font>

1059
00:49:05,420 --> 00:49:10,730
<font color="#CCCCCC">I I don't know</font><font color="#E5E5E5"> if any that are you know</font>

1060
00:49:07,880 --> 00:49:12,950
<font color="#E5E5E5">particularly successful compared to like</font>

1061
00:49:10,730 --> 00:49:14,480
the actors behind Sam Sam or some of the

1062
00:49:12,950 --> 00:49:18,558
other more prominent<font color="#E5E5E5"> ransomware families</font>

1063
00:49:14,480 --> 00:49:20,270
that you hear about<font color="#E5E5E5"> but yeah so you know</font>

1064
00:49:18,559 --> 00:49:23,180
<font color="#E5E5E5">there are some some</font><font color="#CCCCCC"> Mac OS ransomware</font>

1065
00:49:20,270 --> 00:49:25,369
<font color="#CCCCCC">there there's some Linux ransomware but</font>

1066
00:49:23,180 --> 00:49:27,799
I feel like you know that's if you<font color="#E5E5E5"> are</font>

1067
00:49:25,369 --> 00:49:30,589
<font color="#E5E5E5">between and actually the most besides</font>

1068
00:49:27,799 --> 00:49:34,390
<font color="#CCCCCC">Windows I've heard about</font><font color="#E5E5E5"> is where the</font>

1069
00:49:30,589 --> 00:49:37,099
attack targets of Android systems and

1070
00:49:34,390 --> 00:49:39,529
<font color="#E5E5E5">yeah I'm not sure exactly what</font><font color="#CCCCCC"> sort of</font>

1071
00:49:37,099 --> 00:49:50,270
detection capable is there are<font color="#CCCCCC"> four for</font>

1072
00:49:39,530 --> 00:49:54,559
Android right<font color="#E5E5E5"> now yep oh it's just</font><font color="#CCCCCC"> in</font>

1073
00:49:50,270 --> 00:49:56,559
<font color="#E5E5E5">game</font><font color="#CCCCCC"> ich with no dot now</font><font color="#E5E5E5"> okay I blame</font>

1074
00:49:54,559 --> 00:50:00,640
the proofreaders for that<font color="#CCCCCC"> kitchenette</font>

1075
00:49:56,559 --> 00:50:00,640
<font color="#E5E5E5">all right thanks</font>

1076
00:50:01,750 --> 00:50:04,960
[Applause]

