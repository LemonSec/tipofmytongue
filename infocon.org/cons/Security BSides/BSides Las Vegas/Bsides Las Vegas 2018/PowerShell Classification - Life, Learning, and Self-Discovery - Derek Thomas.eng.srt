1
00:00:00,030 --> 00:00:04,380
<font color="#E5E5E5">okay let's get this</font><font color="#CCCCCC"> party started so uh</font>

2
00:00:01,879 --> 00:00:06,210
this<font color="#E5E5E5"> is an overly dramatic title really</font>

3
00:00:04,380 --> 00:00:08,370
<font color="#E5E5E5">so it's uh developing a PowerShell</font>

4
00:00:06,210 --> 00:00:10,019
classification model<font color="#E5E5E5"> and the reason</font><font color="#CCCCCC"> it's</font>

5
00:00:08,370 --> 00:00:11,428
kind of overly dramatic myself

6
00:00:10,019 --> 00:00:13,320
<font color="#E5E5E5">discoveries</font><font color="#CCCCCC"> you know it's got my first</font>

7
00:00:11,429 --> 00:00:14,639
model right and so it was<font color="#E5E5E5"> kind of the</font>

8
00:00:13,320 --> 00:00:17,730
<font color="#E5E5E5">process I went through from</font><font color="#CCCCCC"> start to</font>

9
00:00:14,639 --> 00:00:19,020
finish<font color="#E5E5E5"> from kind of observing</font><font color="#CCCCCC"> high-level</font>

10
00:00:17,730 --> 00:00:20,310
features and kind<font color="#E5E5E5"> of saying hey this</font>

11
00:00:19,020 --> 00:00:22,769
might work<font color="#E5E5E5"> and going through that whole</font>

12
00:00:20,310 --> 00:00:24,570
process<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then</font><font color="#CCCCCC"> also the pitfalls</font><font color="#E5E5E5"> and</font>

13
00:00:22,769 --> 00:00:27,538
solutions we hit we came up with along

14
00:00:24,570 --> 00:00:29,279
the way so this<font color="#E5E5E5"> kind of follows</font><font color="#CCCCCC"> pretty</font>

15
00:00:27,539 --> 00:00:30,840
<font color="#E5E5E5">well after Rams talk with the PowerShell</font>

16
00:00:29,279 --> 00:00:33,239
that he mentioned so that's one<font color="#CCCCCC"> of the</font>

17
00:00:30,840 --> 00:00:34,770
one of<font color="#E5E5E5"> the references that I list at the</font>

18
00:00:33,239 --> 00:00:37,410
end<font color="#E5E5E5"> there was a academic paper they had</font>

19
00:00:34,770 --> 00:00:38,960
at the fairly recently so this kind of

20
00:00:37,410 --> 00:00:41,309
<font color="#E5E5E5">been our process</font><font color="#CCCCCC"> for the last two</font><font color="#E5E5E5"> years</font>

21
00:00:38,960 --> 00:00:43,500
so Who am<font color="#E5E5E5"> I I'm Derrick Thomas I'm</font><font color="#CCCCCC"> a</font>

22
00:00:41,309 --> 00:00:45,660
applied security researcher at East End

23
00:00:43,500 --> 00:00:48,059
<font color="#CCCCCC">tire we do manage detection and response</font>

24
00:00:45,660 --> 00:00:50,699
<font color="#CCCCCC">I'm</font><font color="#E5E5E5"> a converged Detroit conference</font>

25
00:00:48,059 --> 00:00:52,828
<font color="#E5E5E5">organizer</font><font color="#CCCCCC"> just a</font><font color="#E5E5E5"> couple of us around</font>

26
00:00:50,700 --> 00:00:54,989
<font color="#E5E5E5">here so we we hold a security conference</font>

27
00:00:52,829 --> 00:00:58,020
every year<font color="#CCCCCC"> and in a</font><font color="#E5E5E5"> Michigan security</font>

28
00:00:54,989 --> 00:01:00,379
member so I consider<font color="#CCCCCC"> myself</font><font color="#E5E5E5"> a security</font>

29
00:00:58,020 --> 00:01:03,030
data enthusiast<font color="#E5E5E5"> my whole life has been</font>

30
00:01:00,379 --> 00:01:04,319
involving logs<font color="#E5E5E5"> so you're probably saying</font>

31
00:01:03,030 --> 00:01:07,560
to<font color="#E5E5E5"> yourself</font><font color="#CCCCCC"> I've lived a</font><font color="#E5E5E5"> really hard</font>

32
00:01:04,319 --> 00:01:10,110
life and<font color="#E5E5E5"> that's probably true but</font><font color="#CCCCCC"> uh</font><font color="#E5E5E5"> so</font>

33
00:01:07,560 --> 00:01:11,820
if<font color="#E5E5E5"> you if you work with logs your whole</font>

34
00:01:10,110 --> 00:01:13,710
life you've got<font color="#CCCCCC"> to be pretty</font><font color="#E5E5E5"> good at</font>

35
00:01:11,820 --> 00:01:16,229
<font color="#E5E5E5">doing analysis or that's a tool that</font>

36
00:01:13,710 --> 00:01:18,509
<font color="#E5E5E5">should be picked up on Twitter you can</font>

37
00:01:16,229 --> 00:01:19,920
hit me<font color="#CCCCCC"> up</font><font color="#E5E5E5"> D time LinkedIn</font><font color="#CCCCCC"> email if you</font>

38
00:01:18,509 --> 00:01:22,439
<font color="#E5E5E5">want to contact me afterward</font>

39
00:01:19,920 --> 00:01:23,610
I'm always<font color="#CCCCCC"> open</font><font color="#E5E5E5"> so have a couple goals</font>

40
00:01:22,439 --> 00:01:24,899
here I figure the audience is made up of

41
00:01:23,610 --> 00:01:27,119
kind<font color="#CCCCCC"> of data</font><font color="#E5E5E5"> scientists</font><font color="#CCCCCC"> and maybe</font>

42
00:01:24,900 --> 00:01:29,280
security professionals for data

43
00:01:27,119 --> 00:01:31,020
scientists I<font color="#E5E5E5"> think</font><font color="#CCCCCC"> they would</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> to</font>

44
00:01:29,280 --> 00:01:32,520
learn about<font color="#E5E5E5"> this problem</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> strategies</font>

45
00:01:31,020 --> 00:01:34,829
<font color="#E5E5E5">for detection</font><font color="#CCCCCC"> may</font><font color="#E5E5E5"> be working</font><font color="#CCCCCC"> with</font>

46
00:01:32,520 --> 00:01:37,590
<font color="#E5E5E5">subject matter experts</font><font color="#CCCCCC"> on you know how</font>

47
00:01:34,829 --> 00:01:39,508
they see<font color="#E5E5E5"> things and how they identify</font>

48
00:01:37,590 --> 00:01:41,460
malicious activity the processes they go

49
00:01:39,509 --> 00:01:44,640
through<font color="#E5E5E5"> security professionals you know</font>

50
00:01:41,460 --> 00:01:46,500
<font color="#CCCCCC">if</font><font color="#E5E5E5"> this is a concrete</font><font color="#CCCCCC"> ml use case</font><font color="#E5E5E5"> you</font>

51
00:01:44,640 --> 00:01:48,899
see<font color="#E5E5E5"> ml all the time</font><font color="#CCCCCC"> it's buzzwords</font>

52
00:01:46,500 --> 00:01:50,460
someone said ml blockchain AI you know

53
00:01:48,899 --> 00:01:52,350
it's like what<font color="#E5E5E5"> does that actually mean</font>

54
00:01:50,460 --> 00:01:55,259
well this<font color="#E5E5E5"> is a concrete use case and how</font>

55
00:01:52,350 --> 00:01:56,399
we've derived value from it<font color="#CCCCCC"> I think you</font>

56
00:01:55,259 --> 00:01:59,070
<font color="#E5E5E5">should</font><font color="#CCCCCC"> everyone should</font><font color="#E5E5E5"> start looking</font><font color="#CCCCCC"> at</font>

57
00:01:56,399 --> 00:02:00,509
a detection<font color="#CCCCCC"> a bit differently a lot</font><font color="#E5E5E5"> of</font>

58
00:01:59,070 --> 00:02:03,710
security<font color="#E5E5E5"> professionals are very focused</font>

59
00:02:00,509 --> 00:02:05,520
<font color="#E5E5E5">on like atomic IO sees very detailed</font>

60
00:02:03,710 --> 00:02:07,439
observances and<font color="#E5E5E5"> things like</font><font color="#CCCCCC"> that and I</font>

61
00:02:05,520 --> 00:02:09,568
think<font color="#CCCCCC"> that moving</font><font color="#E5E5E5"> up a level</font><font color="#CCCCCC"> to a more</font>

62
00:02:07,439 --> 00:02:12,060
generalized detections<font color="#E5E5E5"> raise the bar</font><font color="#CCCCCC"> for</font>

63
00:02:09,568 --> 00:02:13,379
attackers<font color="#E5E5E5"> and and everyone really</font><font color="#CCCCCC"> just</font>

64
00:02:12,060 --> 00:02:13,890
learned from<font color="#E5E5E5"> my experiences I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> that</font>

65
00:02:13,379 --> 00:02:15,810
if I

66
00:02:13,890 --> 00:02:17,820
saw myself<font color="#CCCCCC"> old</font><font color="#E5E5E5"> Derek saw this</font>

67
00:02:15,810 --> 00:02:21,660
presentation<font color="#CCCCCC"> I would</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> saved myself a</font>

68
00:02:17,820 --> 00:02:23,120
lot<font color="#CCCCCC"> of time so this</font><font color="#E5E5E5"> is our first version</font>

69
00:02:21,660 --> 00:02:25,109
<font color="#E5E5E5">of the PowerShell product this</font><font color="#CCCCCC"> was from</font>

70
00:02:23,120 --> 00:02:27,120
<font color="#E5E5E5">probably implement about two years ago</font>

71
00:02:25,110 --> 00:02:29,280
<font color="#E5E5E5">the process I went developing a proof of</font>

72
00:02:27,120 --> 00:02:30,840
<font color="#CCCCCC">concept and that proof of concept was</font>

73
00:02:29,280 --> 00:02:32,700
<font color="#CCCCCC">used to say hey this</font><font color="#E5E5E5"> is valuable</font>

74
00:02:30,840 --> 00:02:34,380
we need to operationalize<font color="#E5E5E5"> it spend time</font>

75
00:02:32,700 --> 00:02:35,760
and resources to<font color="#E5E5E5"> implement our</font>

76
00:02:34,380 --> 00:02:38,160
production model to do<font color="#E5E5E5"> real-time</font>

77
00:02:35,760 --> 00:02:40,799
<font color="#E5E5E5">PowerShell classification across our</font>

78
00:02:38,160 --> 00:02:42,570
entire<font color="#E5E5E5"> environment</font><font color="#CCCCCC"> and as we go through</font>

79
00:02:40,800 --> 00:02:43,830
<font color="#CCCCCC">this knowing that you're gonna see some</font>

80
00:02:42,570 --> 00:02:45,269
<font color="#CCCCCC">pitfalls you</font><font color="#E5E5E5"> can see some</font><font color="#CCCCCC"> things say hey</font>

81
00:02:43,830 --> 00:02:46,560
that<font color="#E5E5E5"> doesn't really work so</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> gonna</font>

82
00:02:45,270 --> 00:02:49,800
cover at the<font color="#E5E5E5"> end the pitfalls and</font>

83
00:02:46,560 --> 00:02:51,690
solutions to<font color="#CCCCCC"> those problems so here's</font>

84
00:02:49,800 --> 00:02:54,330
the agenda<font color="#CCCCCC"> we're</font><font color="#E5E5E5"> gonna talk about you</font>

85
00:02:51,690 --> 00:02:56,579
know<font color="#E5E5E5"> PowerShell the problem why it's</font>

86
00:02:54,330 --> 00:02:58,080
important how<font color="#E5E5E5"> to get data and properties</font>

87
00:02:56,580 --> 00:02:59,520
<font color="#CCCCCC">of malicious code and then the</font>

88
00:02:58,080 --> 00:03:02,280
<font color="#E5E5E5">PowerShell classification in part</font><font color="#CCCCCC"> two</font>

89
00:02:59,520 --> 00:03:03,750
it's<font color="#CCCCCC"> really just the how I started went</font>

90
00:03:02,280 --> 00:03:07,770
through my<font color="#E5E5E5"> machine learning process</font>

91
00:03:03,750 --> 00:03:09,930
there so this all really<font color="#E5E5E5"> start back</font><font color="#CCCCCC"> in</font>

92
00:03:07,770 --> 00:03:10,770
2016<font color="#E5E5E5"> so a while ago</font><font color="#CCCCCC"> is kind</font><font color="#E5E5E5"> of how I</font>

93
00:03:09,930 --> 00:03:13,440
feel

94
00:03:10,770 --> 00:03:16,020
<font color="#CCCCCC">PowerShell most is use of PowerShell</font>

95
00:03:13,440 --> 00:03:18,510
started to gain extreme popularity<font color="#CCCCCC"> and I</font>

96
00:03:16,020 --> 00:03:22,709
kind<font color="#CCCCCC"> of followed true with</font><font color="#E5E5E5"> Rams slides</font>

97
00:03:18,510 --> 00:03:24,450
<font color="#E5E5E5">there</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> 2017 2016 and this began</font><font color="#CCCCCC"> with</font>

98
00:03:22,709 --> 00:03:26,970
<font color="#E5E5E5">you</font><font color="#CCCCCC"> know as it always does a simple</font>

99
00:03:24,450 --> 00:03:28,440
<font color="#E5E5E5">request from from one of my clients to</font>

100
00:03:26,970 --> 00:03:30,180
monitor and alert on malicious

101
00:03:28,440 --> 00:03:31,829
<font color="#E5E5E5">PowerShell activity so you know</font>

102
00:03:30,180 --> 00:03:33,630
following that's like whoa<font color="#E5E5E5"> what does</font>

103
00:03:31,830 --> 00:03:37,430
that<font color="#E5E5E5"> entail was malicious PowerShell</font>

104
00:03:33,630 --> 00:03:40,500
activity so being from the world of logs

105
00:03:37,430 --> 00:03:42,090
<font color="#CCCCCC">Sims</font><font color="#E5E5E5"> things like that creating use cases</font>

106
00:03:40,500 --> 00:03:43,950
<font color="#CCCCCC">that created</font><font color="#E5E5E5"> rules create hundreds and</font>

107
00:03:42,090 --> 00:03:46,320
hundreds<font color="#E5E5E5"> of rules</font><font color="#CCCCCC"> then I</font><font color="#E5E5E5"> bypass those</font>

108
00:03:43,950 --> 00:03:48,089
rules then I created<font color="#E5E5E5"> more rules and then</font>

109
00:03:46,320 --> 00:03:49,709
I'm<font color="#E5E5E5"> thinking this is insane there's got</font>

110
00:03:48,090 --> 00:03:51,030
to be a<font color="#E5E5E5"> better way for</font><font color="#CCCCCC"> this so that's</font>

111
00:03:49,709 --> 00:03:52,560
when<font color="#E5E5E5"> we kind of clicked and it just you</font>

112
00:03:51,030 --> 00:03:54,510
know hit us that<font color="#CCCCCC"> you know maybe a</font>

113
00:03:52,560 --> 00:03:57,060
classification<font color="#CCCCCC"> model looking at our the</font>

114
00:03:54,510 --> 00:03:58,410
things that we as analysts look at would

115
00:03:57,060 --> 00:04:00,870
<font color="#CCCCCC">be the way to go and</font><font color="#E5E5E5"> so this is that</font>

116
00:03:58,410 --> 00:04:03,000
story<font color="#E5E5E5"> so we'll start off from the</font>

117
00:04:00,870 --> 00:04:04,950
<font color="#E5E5E5">beginning like what is PowerShell it's a</font>

118
00:04:03,000 --> 00:04:07,650
scripting language legitimately used for

119
00:04:04,950 --> 00:04:09,600
any administrative<font color="#E5E5E5"> activity within your</font>

120
00:04:07,650 --> 00:04:10,920
environment<font color="#CCCCCC"> so basically administrators</font>

121
00:04:09,600 --> 00:04:12,359
can<font color="#E5E5E5"> do anything they want</font><font color="#CCCCCC"> and automate</font>

122
00:04:10,920 --> 00:04:14,429
it through PowerShell which is awesome

123
00:04:12,360 --> 00:04:15,570
it's super<font color="#E5E5E5"> flexible but it's also for</font>

124
00:04:14,430 --> 00:04:18,600
those same<font color="#CCCCCC"> reasons that creasing lis</font>

125
00:04:15,570 --> 00:04:21,478
leverage by our adversaries<font color="#E5E5E5"> and pen</font>

126
00:04:18,600 --> 00:04:22,830
testers<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know live to compromise</font>

127
00:04:21,478 --> 00:04:23,760
servers and workstations what we call

128
00:04:22,830 --> 00:04:25,260
living<font color="#E5E5E5"> off the land</font>

129
00:04:23,760 --> 00:04:27,090
PowerShell is available in almost every

130
00:04:25,260 --> 00:04:28,890
organization<font color="#E5E5E5"> and every workstation</font><font color="#CCCCCC"> that</font>

131
00:04:27,090 --> 00:04:30,270
your users<font color="#E5E5E5"> are</font>

132
00:04:28,890 --> 00:04:32,909
so living<font color="#CCCCCC"> off the land is using</font>

133
00:04:30,270 --> 00:04:34,380
legitimate<font color="#E5E5E5"> tools to to meet your</font>

134
00:04:32,910 --> 00:04:35,940
adversaries objectives right so they

135
00:04:34,380 --> 00:04:37,590
<font color="#CCCCCC">have the tools available</font><font color="#E5E5E5"> they</font><font color="#CCCCCC"> can do</font>

136
00:04:35,940 --> 00:04:40,500
almost anything<font color="#CCCCCC"> they</font><font color="#E5E5E5"> want once they have</font>

137
00:04:37,590 --> 00:04:42,599
access<font color="#E5E5E5"> to a system so we dubbed this</font>

138
00:04:40,500 --> 00:04:43,620
project<font color="#E5E5E5"> blue steel and I'm going to talk</font>

139
00:04:42,600 --> 00:04:46,230
<font color="#CCCCCC">about that later everyone either</font>

140
00:04:43,620 --> 00:04:49,170
<font color="#E5E5E5">understands immediately or not so we'll</font>

141
00:04:46,230 --> 00:04:51,810
<font color="#E5E5E5">see who gets that reference or maybe</font>

142
00:04:49,170 --> 00:04:53,400
scared<font color="#CCCCCC"> too</font><font color="#E5E5E5"> to say they do</font><font color="#CCCCCC"> all this was</font>

143
00:04:51,810 --> 00:04:58,400
born<font color="#E5E5E5"> out of client requirements for</font>

144
00:04:53,400 --> 00:04:58,400
effective detective malicious<font color="#E5E5E5"> PowerShell</font>

145
00:04:58,460 --> 00:05:03,210
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> so why is it important</font><font color="#CCCCCC"> you might</font>

146
00:05:01,620 --> 00:05:04,680
say well okay<font color="#E5E5E5"> Derrick you know you can</font>

147
00:05:03,210 --> 00:05:06,930
<font color="#E5E5E5">detect this why is this important why</font>

148
00:05:04,680 --> 00:05:08,190
should I do this<font color="#E5E5E5"> well it can let be</font>

149
00:05:06,930 --> 00:05:09,800
leveraged<font color="#E5E5E5"> in every stage of the</font><font color="#CCCCCC"> attack</font>

150
00:05:08,190 --> 00:05:13,770
look at the<font color="#CCCCCC"> mitre framework they have</font>

151
00:05:09,800 --> 00:05:15,750
one one tactic reference for PowerShell

152
00:05:13,770 --> 00:05:17,609
<font color="#E5E5E5">which is true it's</font><font color="#CCCCCC"> you know it's for a</font>

153
00:05:15,750 --> 00:05:19,440
code execution but with code execution

154
00:05:17,610 --> 00:05:22,320
you can perform<font color="#E5E5E5"> any step within your</font>

155
00:05:19,440 --> 00:05:24,510
kill chain and in meet their objectives

156
00:05:22,320 --> 00:05:27,140
<font color="#CCCCCC">so from recon all the way</font><font color="#E5E5E5"> to</font>

157
00:05:24,510 --> 00:05:29,700
exfiltration and command<font color="#E5E5E5"> and control</font>

158
00:05:27,140 --> 00:05:31,770
<font color="#E5E5E5">it's been it's appeared and</font><font color="#CCCCCC"> crucially</font>

159
00:05:29,700 --> 00:05:33,900
used by our<font color="#E5E5E5"> adversaries so you know</font><font color="#CCCCCC"> I'm</font>

160
00:05:31,770 --> 00:05:35,430
<font color="#CCCCCC">basing my</font><font color="#E5E5E5"> observations strictly off of</font>

161
00:05:33,900 --> 00:05:38,460
you know<font color="#E5E5E5"> new exploit frameworks that are</font>

162
00:05:35,430 --> 00:05:40,860
<font color="#E5E5E5">coming out</font><font color="#CCCCCC"> so we mentioned a few power</font>

163
00:05:38,460 --> 00:05:43,349
<font color="#CCCCCC">sploit ApS attack</font><font color="#E5E5E5"> it seems like every</font>

164
00:05:40,860 --> 00:05:48,660
<font color="#CCCCCC">day there's some new</font><font color="#E5E5E5"> tools to fill fill</font>

165
00:05:43,350 --> 00:05:50,490
a void of offensive capability<font color="#CCCCCC"> just from</font>

166
00:05:48,660 --> 00:05:51,990
<font color="#CCCCCC">going to conferences like this</font><font color="#E5E5E5"> I've seen</font>

167
00:05:50,490 --> 00:05:53,640
<font color="#CCCCCC">an increase in PowerShell talks to say</font>

168
00:05:51,990 --> 00:05:56,040
hey here's how easy<font color="#E5E5E5"> it is to use</font>

169
00:05:53,640 --> 00:05:57,539
PowerShell<font color="#E5E5E5"> to do offensive activities</font>

170
00:05:56,040 --> 00:05:58,950
and defensive ones as well

171
00:05:57,540 --> 00:06:01,169
but I'm more<font color="#CCCCCC"> concerned</font><font color="#E5E5E5"> with the</font>

172
00:05:58,950 --> 00:06:02,760
offensive we observed phishing payloads

173
00:06:01,169 --> 00:06:05,430
to<font color="#E5E5E5"> our customers significantly so it's</font>

174
00:06:02,760 --> 00:06:08,159
been<font color="#E5E5E5"> on the rise</font><font color="#CCCCCC"> over the</font><font color="#E5E5E5"> last two</font><font color="#CCCCCC"> years</font>

175
00:06:05,430 --> 00:06:10,080
and then increased use<font color="#E5E5E5"> and penetration</font>

176
00:06:08,160 --> 00:06:13,080
<font color="#CCCCCC">test so I think penetration testers</font>

177
00:06:10,080 --> 00:06:14,700
often rely on PowerShell<font color="#E5E5E5"> and with the</font>

178
00:06:13,080 --> 00:06:16,140
with the Microsoft implementation for

179
00:06:14,700 --> 00:06:18,990
logging<font color="#E5E5E5"> and script block</font><font color="#CCCCCC"> it's gonna</font>

180
00:06:16,140 --> 00:06:20,430
become more<font color="#E5E5E5"> difficult and so I see this</font>

181
00:06:18,990 --> 00:06:25,380
being less the case in the<font color="#CCCCCC"> future but</font>

182
00:06:20,430 --> 00:06:28,230
right<font color="#CCCCCC"> now it's being used</font><font color="#E5E5E5"> drastically so</font>

183
00:06:25,380 --> 00:06:30,180
PowerShell is extremely flexible it can

184
00:06:28,230 --> 00:06:31,560
<font color="#CCCCCC">be used to to</font><font color="#E5E5E5"> do</font><font color="#CCCCCC"> what used to be high</font>

185
00:06:30,180 --> 00:06:34,470
<font color="#CCCCCC">you</font><font color="#E5E5E5"> can hide in plain</font><font color="#CCCCCC"> sight so</font><font color="#E5E5E5"> you can</font>

186
00:06:31,560 --> 00:06:38,340
achieve<font color="#E5E5E5"> your objectives</font><font color="#CCCCCC"> steal creds or</font>

187
00:06:34,470 --> 00:06:40,410
add a user to<font color="#E5E5E5"> the domain one of the cool</font>

188
00:06:38,340 --> 00:06:41,520
things<font color="#CCCCCC"> and</font><font color="#E5E5E5"> not cool things is it can</font>

189
00:06:40,410 --> 00:06:43,740
execute<font color="#E5E5E5"> in</font><font color="#CCCCCC"> coded command</font>

190
00:06:41,520 --> 00:06:46,440
so you can feed it<font color="#CCCCCC"> a base64 string of</font>

191
00:06:43,740 --> 00:06:47,879
code and it can<font color="#E5E5E5"> execute that natively so</font>

192
00:06:46,440 --> 00:06:50,009
that makes it tough for<font color="#E5E5E5"> me when I'm</font>

193
00:06:47,879 --> 00:06:54,539
looking at logs and<font color="#E5E5E5"> you see an X base 64</font>

194
00:06:50,009 --> 00:06:56,759
blob of text<font color="#E5E5E5"> is that good or</font><font color="#CCCCCC"> is that bad</font>

195
00:06:54,539 --> 00:06:58,800
I<font color="#E5E5E5"> don't know at first</font><font color="#CCCCCC"> yeah I thought</font>

196
00:06:56,759 --> 00:07:01,470
<font color="#E5E5E5">okay this is always going to be bad and</font>

197
00:06:58,800 --> 00:07:03,620
in reality<font color="#E5E5E5"> across a large sample size we</font>

198
00:07:01,470 --> 00:07:06,419
see significant use for legitimate

199
00:07:03,620 --> 00:07:09,240
<font color="#CCCCCC">reasons so see things like</font><font color="#E5E5E5"> chocolaty or</font>

200
00:07:06,419 --> 00:07:11,609
ansible deploying or<font color="#E5E5E5"> doing activities</font>

201
00:07:09,240 --> 00:07:13,349
using<font color="#CCCCCC"> encoding commands</font><font color="#E5E5E5"> so I don't</font>

202
00:07:11,610 --> 00:07:15,810
really<font color="#E5E5E5"> think they'll just identify</font>

203
00:07:13,349 --> 00:07:17,880
encoding commands really works

204
00:07:15,810 --> 00:07:18,870
with PowerShell you can obfuscate and

205
00:07:17,880 --> 00:07:20,849
execute code I'm<font color="#CCCCCC"> going to show some</font>

206
00:07:18,870 --> 00:07:22,800
<font color="#CCCCCC">samples of</font><font color="#E5E5E5"> this basically you</font><font color="#CCCCCC"> can slice</font>

207
00:07:20,849 --> 00:07:24,990
and dice replace rearrange compress

208
00:07:22,800 --> 00:07:27,569
encrypt the data and then execute that

209
00:07:24,990 --> 00:07:30,030
code in<font color="#E5E5E5"> any way you see</font><font color="#CCCCCC"> fit and then</font>

210
00:07:27,569 --> 00:07:31,710
also it's uh it's you can use it for

211
00:07:30,030 --> 00:07:33,840
file<font color="#CCCCCC"> list attack techniques we've seen</font>

212
00:07:31,710 --> 00:07:37,620
<font color="#E5E5E5">this significantly in kind of advanced</font>

213
00:07:33,840 --> 00:07:40,109
attackers so execute code<font color="#CCCCCC"> in memory you</font>

214
00:07:37,620 --> 00:07:41,789
know<font color="#E5E5E5"> run a schedule task and pull the</font>

215
00:07:40,110 --> 00:07:44,699
code<font color="#E5E5E5"> out</font><font color="#CCCCCC"> of maybe</font><font color="#E5E5E5"> a registry entry or</font>

216
00:07:41,789 --> 00:07:46,530
something along<font color="#E5E5E5"> those lines</font><font color="#CCCCCC"> so ok</font>

217
00:07:44,699 --> 00:07:47,840
PowerShell is important<font color="#CCCCCC"> to</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> miner I</font>

218
00:07:46,530 --> 00:07:50,340
hope we're all<font color="#E5E5E5"> on the same page there</font>

219
00:07:47,840 --> 00:07:53,429
<font color="#E5E5E5">well first you got to get the data like</font>

220
00:07:50,340 --> 00:07:55,318
any data science or or use case creation

221
00:07:53,430 --> 00:07:58,620
<font color="#E5E5E5">you got to have the data</font><font color="#CCCCCC"> so so where is</font>

222
00:07:55,319 --> 00:08:00,300
this data reside<font color="#CCCCCC"> Power Cells very</font>

223
00:07:58,620 --> 00:08:02,039
<font color="#E5E5E5">nuanced so it's very difficult</font><font color="#CCCCCC"> data</font>

224
00:08:00,300 --> 00:08:05,279
resides in multiple places<font color="#CCCCCC"> each place</font>

225
00:08:02,039 --> 00:08:07,169
<font color="#E5E5E5">has different amounts of data the</font>

226
00:08:05,279 --> 00:08:08,789
associated with<font color="#E5E5E5"> this so it</font><font color="#CCCCCC"> can be</font>

227
00:08:07,169 --> 00:08:11,849
executed<font color="#CCCCCC"> in memory from</font><font color="#E5E5E5"> the command line</font>

228
00:08:08,789 --> 00:08:13,710
from<font color="#E5E5E5"> a script file</font><font color="#CCCCCC"> so each one logs</font>

229
00:08:11,849 --> 00:08:16,380
differently<font color="#CCCCCC"> so one of</font><font color="#E5E5E5"> the main places we</font>

230
00:08:13,710 --> 00:08:17,909
use<font color="#E5E5E5"> Windows security log</font><font color="#CCCCCC"> they list the</font>

231
00:08:16,380 --> 00:08:20,340
command line<font color="#E5E5E5"> straight from the security</font>

232
00:08:17,909 --> 00:08:22,469
log and<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> very easy to get you</font>

233
00:08:20,340 --> 00:08:24,210
usually<font color="#E5E5E5"> you know most organizations are</font>

234
00:08:22,469 --> 00:08:26,729
collecting these already<font color="#E5E5E5"> you might have</font>

235
00:08:24,210 --> 00:08:29,609
to check to<font color="#CCCCCC"> see if your enabled process</font>

236
00:08:26,729 --> 00:08:33,179
monitoring<font color="#CCCCCC"> oftentimes this is</font><font color="#E5E5E5"> enabled</font>

237
00:08:29,610 --> 00:08:35,159
already in many organizations<font color="#CCCCCC"> even</font>

238
00:08:33,179 --> 00:08:37,500
<font color="#CCCCCC">better would be PowerShell script black</font>

239
00:08:35,159 --> 00:08:39,779
clog so<font color="#E5E5E5"> PowerShell and version I</font><font color="#CCCCCC"> think 4</font>

240
00:08:37,500 --> 00:08:41,219
or<font color="#CCCCCC"> 5 enabled script block logging what</font>

241
00:08:39,779 --> 00:08:42,870
that means is that any code ever

242
00:08:41,219 --> 00:08:45,390
executed by PowerShell is logged in a

243
00:08:42,870 --> 00:08:49,380
file<font color="#E5E5E5"> and available for analysis but this</font>

244
00:08:45,390 --> 00:08:51,300
<font color="#E5E5E5">is a different log channel than then the</font>

245
00:08:49,380 --> 00:08:53,399
<font color="#E5E5E5">security log so sometimes it</font><font color="#CCCCCC"> can be more</font>

246
00:08:51,300 --> 00:08:55,150
<font color="#E5E5E5">difficult to get enabling script block</font>

247
00:08:53,399 --> 00:08:57,400
logging is more<font color="#E5E5E5"> difficult</font>

248
00:08:55,150 --> 00:08:59,350
by far than enabling the audit settings

249
00:08:57,400 --> 00:09:01,209
<font color="#E5E5E5">I'm going to show you a resource for</font>

250
00:08:59,350 --> 00:09:02,920
<font color="#E5E5E5">that</font><font color="#CCCCCC"> buts GPO settings you've got to</font>

251
00:09:01,210 --> 00:09:04,870
have the correct<font color="#CCCCCC"> windows management</font>

252
00:09:02,920 --> 00:09:06,189
<font color="#E5E5E5">framework you gotta have the correct NAT</font>

253
00:09:04,870 --> 00:09:08,230
settings and you may not be<font color="#CCCCCC"> up-to-date</font>

254
00:09:06,190 --> 00:09:09,610
<font color="#CCCCCC">in many organizations we see mature</font>

255
00:09:08,230 --> 00:09:13,060
organizations can easily implement<font color="#CCCCCC"> this</font>

256
00:09:09,610 --> 00:09:13,990
and some it's more<font color="#CCCCCC"> of a</font><font color="#E5E5E5"> challenge</font><font color="#CCCCCC"> system</font>

257
00:09:13,060 --> 00:09:18,130
on offense if<font color="#E5E5E5"> you're familiar with</font>

258
00:09:13,990 --> 00:09:19,540
system on<font color="#CCCCCC"> it's a kind</font><font color="#E5E5E5"> of I don't want</font><font color="#CCCCCC"> to</font>

259
00:09:18,130 --> 00:09:21,340
<font color="#E5E5E5">call</font><font color="#CCCCCC"> a needy</font><font color="#E5E5E5"> our agent but it does</font>

260
00:09:19,540 --> 00:09:23,740
process you know significant process

261
00:09:21,340 --> 00:09:26,350
<font color="#E5E5E5">monitoring on Windows machines</font><font color="#CCCCCC"> it's it's</font>

262
00:09:23,740 --> 00:09:28,330
a<font color="#CCCCCC"> assists internals tool and very</font>

263
00:09:26,350 --> 00:09:30,210
<font color="#CCCCCC">popular in security community this logs</font>

264
00:09:28,330 --> 00:09:33,790
process execution and can be used for

265
00:09:30,210 --> 00:09:35,980
for getting<font color="#E5E5E5"> command lines and then any</font>

266
00:09:33,790 --> 00:09:37,750
any EBR solution<font color="#E5E5E5"> from</font><font color="#CCCCCC"> its EDR solutions</font>

267
00:09:35,980 --> 00:09:39,400
like CrowdStrike carbon black you know

268
00:09:37,750 --> 00:09:40,900
<font color="#E5E5E5">they're doing significant</font><font color="#CCCCCC"> process</font>

269
00:09:39,400 --> 00:09:42,670
monitoring<font color="#E5E5E5"> oftentimes they have logs</font>

270
00:09:40,900 --> 00:09:44,590
<font color="#E5E5E5">that can come out of</font><font color="#CCCCCC"> that or you can</font>

271
00:09:42,670 --> 00:09:47,530
<font color="#E5E5E5">query them for logs and say hey show me</font>

272
00:09:44,590 --> 00:09:50,350
<font color="#E5E5E5">all the PowerShell commands and command</font>

273
00:09:47,530 --> 00:09:52,750
lines so here's an example<font color="#CCCCCC"> and I'm gonna</font>

274
00:09:50,350 --> 00:09:54,820
<font color="#CCCCCC">kind</font><font color="#E5E5E5"> of try to</font><font color="#CCCCCC"> outline the nuance of</font>

275
00:09:52,750 --> 00:09:56,500
collecting these logs<font color="#E5E5E5"> so from a command</font>

276
00:09:54,820 --> 00:09:58,450
line I'm<font color="#E5E5E5"> executing this in</font><font color="#CCCCCC"> coda command</font>

277
00:09:56,500 --> 00:10:00,250
so PowerShell dot exe<font color="#E5E5E5"> with a coded</font>

278
00:09:58,450 --> 00:10:02,080
<font color="#E5E5E5">command and then just a blob of text so</font>

279
00:10:00,250 --> 00:10:03,940
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> what we would see if we're</font>

280
00:10:02,080 --> 00:10:05,560
monitoring<font color="#E5E5E5"> these logs so that can</font><font color="#CCCCCC"> be</font>

281
00:10:03,940 --> 00:10:06,820
difficult<font color="#CCCCCC"> but in reality this is</font><font color="#E5E5E5"> just</font>

282
00:10:05,560 --> 00:10:09,790
showing<font color="#E5E5E5"> the PS version table it's</font>

283
00:10:06,820 --> 00:10:10,570
showing the version of PowerShell<font color="#E5E5E5"> and</font>

284
00:10:09,790 --> 00:10:12,579
I'm going to<font color="#E5E5E5"> show you what these what</font>

285
00:10:10,570 --> 00:10:15,730
this log looks like in the<font color="#E5E5E5"> actual</font><font color="#CCCCCC"> log so</font>

286
00:10:12,580 --> 00:10:18,130
here's the Windows security log<font color="#E5E5E5"> 46 88</font>

287
00:10:15,730 --> 00:10:21,490
<font color="#E5E5E5">you can see that at the bottom it</font><font color="#CCCCCC"> shows</font>

288
00:10:18,130 --> 00:10:23,350
<font color="#E5E5E5">the encoded command what what I really</font>

289
00:10:21,490 --> 00:10:24,940
concerned here is the process command

290
00:10:23,350 --> 00:10:27,070
line at the<font color="#E5E5E5"> very bottom this is a newer</font>

291
00:10:24,940 --> 00:10:30,790
<font color="#E5E5E5">feature in Microsoft you have to enable</font>

292
00:10:27,070 --> 00:10:32,470
this through GPO<font color="#CCCCCC"> and I suggest</font><font color="#E5E5E5"> everyone</font>

293
00:10:30,790 --> 00:10:35,650
does<font color="#E5E5E5"> does this so there's so much more</font>

294
00:10:32,470 --> 00:10:38,110
value and<font color="#E5E5E5"> it's easy to extract the</font>

295
00:10:35,650 --> 00:10:40,090
command lines from this<font color="#E5E5E5"> I'll</font><font color="#CCCCCC"> show you a</font>

296
00:10:38,110 --> 00:10:41,710
reference<font color="#E5E5E5"> for for doing that in a bit</font>

297
00:10:40,090 --> 00:10:43,240
<font color="#E5E5E5">but the important to note that you see</font>

298
00:10:41,710 --> 00:10:44,800
<font color="#E5E5E5">basically exactly what was typed in the</font>

299
00:10:43,240 --> 00:10:48,670
command line<font color="#CCCCCC"> is what's showing up</font><font color="#E5E5E5"> down</font>

300
00:10:44,800 --> 00:10:51,160
there<font color="#CCCCCC"> so here's a Microsoft script block</font>

301
00:10:48,670 --> 00:10:52,900
log and you'll notice<font color="#E5E5E5"> that in the script</font>

302
00:10:51,160 --> 00:10:54,939
block<font color="#CCCCCC"> well you see the actual</font><font color="#E5E5E5"> code those</font>

303
00:10:52,900 --> 00:10:56,860
executed so that was the basic<font color="#E5E5E5"> C</font><font color="#CCCCCC"> 4</font>

304
00:10:54,940 --> 00:10:59,290
<font color="#E5E5E5">encoded command rate that shows you the</font>

305
00:10:56,860 --> 00:11:00,760
<font color="#CCCCCC">version so this gives you I mean if</font>

306
00:10:59,290 --> 00:11:02,439
you're not<font color="#E5E5E5"> seeing</font><font color="#CCCCCC"> this already this</font>

307
00:11:00,760 --> 00:11:04,660
<font color="#E5E5E5">gives you so much more value because you</font>

308
00:11:02,440 --> 00:11:07,060
can see the decoded commands so that's a

309
00:11:04,660 --> 00:11:08,350
step that<font color="#E5E5E5"> you look that you kind of can</font>

310
00:11:07,060 --> 00:11:11,079
skip with your

311
00:11:08,350 --> 00:11:12,640
monitoring solution<font color="#CCCCCC"> identifying the</font>

312
00:11:11,080 --> 00:11:15,310
encoded command and then D<font color="#CCCCCC"> and then</font>

313
00:11:12,640 --> 00:11:17,770
decoding the base64 blob this can be

314
00:11:15,310 --> 00:11:19,569
<font color="#E5E5E5">this might seem easy but</font><font color="#CCCCCC"> it can</font><font color="#E5E5E5"> be it's</font>

315
00:11:17,770 --> 00:11:21,610
difficult<font color="#CCCCCC"> because power shell has</font>

316
00:11:19,570 --> 00:11:24,550
aliases and it's very flexible<font color="#E5E5E5"> with you</font>

317
00:11:21,610 --> 00:11:26,770
know -<font color="#CCCCCC"> EDHEC - and</font><font color="#E5E5E5"> coded command etc</font>

318
00:11:24,550 --> 00:11:28,300
there's a lot of ways to do<font color="#E5E5E5"> this</font><font color="#CCCCCC"> so this</font>

319
00:11:26,770 --> 00:11:31,020
<font color="#E5E5E5">will</font><font color="#CCCCCC"> show that encoded</font><font color="#E5E5E5"> command and</font>

320
00:11:28,300 --> 00:11:33,150
really we use<font color="#E5E5E5"> this for identifying</font>

321
00:11:31,020 --> 00:11:36,160
<font color="#CCCCCC">legitimate uses of encoded command</font>

322
00:11:33,150 --> 00:11:37,270
<font color="#CCCCCC">because we'll see a ton of obfuscated</font>

323
00:11:36,160 --> 00:11:39,610
commands that cannot be decoded

324
00:11:37,270 --> 00:11:42,250
automatically<font color="#CCCCCC"> if we</font><font color="#E5E5E5"> haven't seen it</font>

325
00:11:39,610 --> 00:11:44,860
before<font color="#CCCCCC"> but those are you've never seen a</font>

326
00:11:42,250 --> 00:11:46,240
legitimate use of<font color="#E5E5E5"> that yet</font><font color="#CCCCCC"> so here's</font>

327
00:11:44,860 --> 00:11:48,190
here's<font color="#E5E5E5"> the references for enabling</font>

328
00:11:46,240 --> 00:11:49,660
command line process auditing and enable

329
00:11:48,190 --> 00:11:52,030
script block logging<font color="#CCCCCC"> I definitely</font>

330
00:11:49,660 --> 00:11:53,680
<font color="#E5E5E5">recommend</font><font color="#CCCCCC"> the second link for powershell</font>

331
00:11:52,030 --> 00:11:55,600
loves the blue team<font color="#E5E5E5"> that's kind of what</font>

332
00:11:53,680 --> 00:11:58,089
the blog<font color="#CCCCCC"> posts from lee holmes</font><font color="#E5E5E5"> here like</font>

333
00:11:55,600 --> 00:12:00,100
<font color="#CCCCCC">tony I think in</font><font color="#E5E5E5"> 2015 kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> got me into</font>

334
00:11:58,090 --> 00:12:01,390
really<font color="#E5E5E5"> looking at PowerShell I'm</font>

335
00:12:00,100 --> 00:12:02,650
thinking this<font color="#E5E5E5"> is important and really</font>

336
00:12:01,390 --> 00:12:04,210
how Microsoft some of the features that

337
00:12:02,650 --> 00:12:05,110
they were implementing the time it was a

338
00:12:04,210 --> 00:12:07,630
little<font color="#CCCCCC"> bit difficult for</font><font color="#E5E5E5"> many</font>

339
00:12:05,110 --> 00:12:08,920
organizations to transition to script

340
00:12:07,630 --> 00:12:10,780
block logging and implementing some of

341
00:12:08,920 --> 00:12:14,199
<font color="#E5E5E5">these</font><font color="#CCCCCC"> features but now it's it should be</font>

342
00:12:10,780 --> 00:12:16,120
<font color="#E5E5E5">much more doable so we enable them</font><font color="#CCCCCC"> we're</font>

343
00:12:14,200 --> 00:12:18,690
collecting logs on the workstation<font color="#CCCCCC"> or</font>

344
00:12:16,120 --> 00:12:21,490
server<font color="#CCCCCC"> how do</font><font color="#E5E5E5"> we get them for</font><font color="#CCCCCC"> analysis</font>

345
00:12:18,690 --> 00:12:22,930
<font color="#CCCCCC">really</font><font color="#E5E5E5"> you want to do this any prefer if</font>

346
00:12:21,490 --> 00:12:24,730
you have a sim your preferred<font color="#CCCCCC"> sim vendor</font>

347
00:12:22,930 --> 00:12:26,979
should<font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> help help with this</font>

348
00:12:24,730 --> 00:12:28,060
<font color="#CCCCCC">but I'm gonna</font><font color="#E5E5E5"> go through kind of a</font><font color="#CCCCCC"> built</font>

349
00:12:26,980 --> 00:12:30,070
<font color="#CCCCCC">in function make people to know about</font>

350
00:12:28,060 --> 00:12:32,619
<font color="#CCCCCC">it's easy to use</font><font color="#E5E5E5"> Windows event</font>

351
00:12:30,070 --> 00:12:35,410
forwarding<font color="#E5E5E5"> through GPO to configure the</font>

352
00:12:32,620 --> 00:12:37,150
the forwarding<font color="#E5E5E5"> of PowerShell logs from</font>

353
00:12:35,410 --> 00:12:39,550
<font color="#E5E5E5">the workstations to</font><font color="#CCCCCC"> a central collector</font>

354
00:12:37,150 --> 00:12:41,949
<font color="#E5E5E5">at the central collector you can install</font>

355
00:12:39,550 --> 00:12:43,990
an agent like an<font color="#E5E5E5"> X log and say hey send</font>

356
00:12:41,950 --> 00:12:47,170
all<font color="#CCCCCC"> of these events from</font><font color="#E5E5E5"> the forwarded</font>

357
00:12:43,990 --> 00:12:49,780
<font color="#CCCCCC">event</font><font color="#E5E5E5"> store to a syslog server to a</font>

358
00:12:47,170 --> 00:12:51,219
database<font color="#E5E5E5"> really to anything you want</font><font color="#CCCCCC"> so</font>

359
00:12:49,780 --> 00:12:54,010
it's kind of just<font color="#E5E5E5"> one way for analysis</font>

360
00:12:51,220 --> 00:12:56,170
but<font color="#E5E5E5"> if you have a sim most likely they</font>

361
00:12:54,010 --> 00:12:59,140
should be able<font color="#E5E5E5"> to collect the operation</font>

362
00:12:56,170 --> 00:13:02,219
the script block logs and<font color="#E5E5E5"> Windows</font>

363
00:12:59,140 --> 00:13:04,780
<font color="#CCCCCC">security logs from the endpoints</font>

364
00:13:02,220 --> 00:13:06,970
<font color="#CCCCCC">okay so analyzing the powershell data i</font>

365
00:13:04,780 --> 00:13:09,790
spent so much time trying<font color="#E5E5E5"> to create</font>

366
00:13:06,970 --> 00:13:11,680
<font color="#E5E5E5">rules on detecting malicious powershell</font>

367
00:13:09,790 --> 00:13:15,160
and then just to realize<font color="#CCCCCC"> that i</font><font color="#E5E5E5"> don't</font>

368
00:13:11,680 --> 00:13:16,870
<font color="#CCCCCC">think</font><font color="#E5E5E5"> this is gonna work</font><font color="#CCCCCC"> so you know i</font>

369
00:13:15,160 --> 00:13:18,490
<font color="#E5E5E5">said in the corner and cried for</font><font color="#CCCCCC"> a</font>

370
00:13:16,870 --> 00:13:20,650
little bit and i<font color="#E5E5E5"> got up</font><font color="#CCCCCC"> and i said okay</font>

371
00:13:18,490 --> 00:13:22,170
let's let's<font color="#E5E5E5"> figure</font><font color="#CCCCCC"> out you know</font><font color="#E5E5E5"> how</font>

372
00:13:20,650 --> 00:13:24,180
we're<font color="#CCCCCC"> gonna do</font><font color="#E5E5E5"> this so i</font><font color="#CCCCCC"> - major</font>

373
00:13:22,170 --> 00:13:25,860
from that many most samples were

374
00:13:24,180 --> 00:13:27,449
obfuscated<font color="#E5E5E5"> but when they were obfuscated</font>

375
00:13:25,860 --> 00:13:28,950
immediately they<font color="#E5E5E5"> still after you've</font>

376
00:13:27,450 --> 00:13:30,329
reviewed<font color="#E5E5E5"> hundreds and hundreds of logs</font>

377
00:13:28,950 --> 00:13:32,519
they stick out like a<font color="#CCCCCC"> sore thumb</font>

378
00:13:30,329 --> 00:13:35,040
no programmer in the<font color="#E5E5E5"> right mind can</font>

379
00:13:32,519 --> 00:13:37,050
execute<font color="#E5E5E5"> or can code that I don't if they</font>

380
00:13:35,040 --> 00:13:38,719
do<font color="#CCCCCC"> they're messing with somebody</font><font color="#E5E5E5"> so I</font>

381
00:13:37,050 --> 00:13:42,269
have yet to see a legitimate use of

382
00:13:38,720 --> 00:13:43,769
obfuscated code<font color="#CCCCCC"> if they were</font><font color="#E5E5E5"> not up</font><font color="#CCCCCC"> a</font>

383
00:13:42,269 --> 00:13:45,510
<font color="#CCCCCC">few</font><font color="#E5E5E5"> scared they were</font><font color="#CCCCCC"> frequenting strings</font>

384
00:13:43,769 --> 00:13:47,519
that<font color="#E5E5E5"> are known</font><font color="#CCCCCC"> to be</font><font color="#E5E5E5"> suspicious</font><font color="#CCCCCC"> or</font>

385
00:13:45,510 --> 00:13:50,100
malicious so like<font color="#E5E5E5"> basically that's</font>

386
00:13:47,519 --> 00:13:52,410
saying if I look at at a suspicious

387
00:13:50,100 --> 00:13:55,589
event<font color="#E5E5E5"> almost immediately</font><font color="#CCCCCC"> I can tell that</font>

388
00:13:52,410 --> 00:13:57,420
is this is doing some shady stuff<font color="#CCCCCC"> and I</font>

389
00:13:55,589 --> 00:13:59,910
don't even program in<font color="#CCCCCC"> PowerShell I'm a</font>

390
00:13:57,420 --> 00:14:02,670
threat analyst<font color="#CCCCCC"> I look at Krieger use</font>

391
00:13:59,910 --> 00:14:04,469
<font color="#E5E5E5">cases things like that so it's</font><font color="#CCCCCC"> pretty</font>

392
00:14:02,670 --> 00:14:05,819
straightforward<font color="#E5E5E5"> to understand at least</font>

393
00:14:04,470 --> 00:14:07,709
in my opinion<font color="#E5E5E5"> after you've looked at</font>

394
00:14:05,820 --> 00:14:10,320
some and and<font color="#E5E5E5"> studied this a little bit</font>

395
00:14:07,709 --> 00:14:11,969
what's bad and<font color="#CCCCCC"> what's good so we started</font>

396
00:14:10,320 --> 00:14:13,320
identifying<font color="#E5E5E5"> high level features that</font>

397
00:14:11,970 --> 00:14:15,089
<font color="#E5E5E5">seem to</font><font color="#CCCCCC"> indicate you know what what's</font>

398
00:14:13,320 --> 00:14:16,980
malicious codes if you can look at it

399
00:14:15,089 --> 00:14:18,269
and understand that<font color="#E5E5E5"> it's malicious why</font>

400
00:14:16,980 --> 00:14:20,519
is that so we started<font color="#CCCCCC"> asking myself</font>

401
00:14:18,269 --> 00:14:21,810
questions<font color="#CCCCCC"> why is this</font><font color="#E5E5E5"> motion here's all</font>

402
00:14:20,519 --> 00:14:24,000
the all the reasons why so I'm gonna

403
00:14:21,810 --> 00:14:25,290
start<font color="#CCCCCC"> going through that you know the</font>

404
00:14:24,000 --> 00:14:26,820
first one<font color="#CCCCCC"> really is quantities have</font>

405
00:14:25,290 --> 00:14:28,260
known suspicious of<font color="#E5E5E5"> malicious modules</font>

406
00:14:26,820 --> 00:14:29,970
immediately when you<font color="#E5E5E5"> look at</font><font color="#CCCCCC"> something</font>

407
00:14:28,260 --> 00:14:33,420
you say this<font color="#E5E5E5"> is taken from a real</font>

408
00:14:29,970 --> 00:14:35,850
malware sample deployed through a word

409
00:14:33,420 --> 00:14:38,819
doc<font color="#E5E5E5"> and executed and it has references</font>

410
00:14:35,850 --> 00:14:41,399
<font color="#E5E5E5">to invoke shellcode powersploit</font>

411
00:14:38,820 --> 00:14:42,660
meterpreter<font color="#E5E5E5"> persistence really see</font>

412
00:14:41,399 --> 00:14:44,579
<font color="#E5E5E5">anything that's a red</font><font color="#CCCCCC"> flag immediately</font>

413
00:14:42,660 --> 00:14:46,170
<font color="#E5E5E5">you know something's going on there</font>

414
00:14:44,579 --> 00:14:47,729
<font color="#E5E5E5">hopefully it's a pen test and if it's</font>

415
00:14:46,170 --> 00:14:49,319
not you know<font color="#E5E5E5"> you guys start digging in</font>

416
00:14:47,730 --> 00:14:51,000
there and you see there's a high

417
00:14:49,320 --> 00:14:53,550
quantity<font color="#CCCCCC"> of these in the events that's</font>

418
00:14:51,000 --> 00:14:55,110
being executed<font color="#E5E5E5"> we notice too that there</font>

419
00:14:53,550 --> 00:14:57,569
was a lot of<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> evasion tactics</font>

420
00:14:55,110 --> 00:14:58,709
like strange capitalization<font color="#E5E5E5"> it appeared</font>

421
00:14:57,570 --> 00:15:01,350
<font color="#E5E5E5">that the code would be randomly</font>

422
00:14:58,709 --> 00:15:03,930
uppercase or lowercase<font color="#CCCCCC"> most code is not</font>

423
00:15:01,350 --> 00:15:06,180
gonna not<font color="#CCCCCC"> gonna do that</font><font color="#E5E5E5"> so how would you</font>

424
00:15:03,930 --> 00:15:10,260
identify<font color="#E5E5E5"> that well I imagine that most</font>

425
00:15:06,180 --> 00:15:12,540
of your<font color="#E5E5E5"> code is kind of a known ratio of</font>

426
00:15:10,260 --> 00:15:14,819
uppercase to lowercase<font color="#E5E5E5"> based on the</font>

427
00:15:12,540 --> 00:15:16,860
first letters and<font color="#E5E5E5"> things like</font><font color="#CCCCCC"> that and</font>

428
00:15:14,819 --> 00:15:18,360
these<font color="#E5E5E5"> when you have two times the</font>

429
00:15:16,860 --> 00:15:19,500
uppercase<font color="#E5E5E5"> or equal amount uppercase to</font>

430
00:15:18,360 --> 00:15:22,980
lowercase that's that's<font color="#E5E5E5"> pretty</font>

431
00:15:19,500 --> 00:15:24,930
significant then obfuscation<font color="#E5E5E5"> and coding</font>

432
00:15:22,980 --> 00:15:26,910
this really entails<font color="#E5E5E5"> any custom way an</font>

433
00:15:24,930 --> 00:15:28,920
adversary might try to hide your code so

434
00:15:26,910 --> 00:15:30,930
<font color="#CCCCCC">they can slice it dice it rearrange it</font>

435
00:15:28,920 --> 00:15:35,699
replace it<font color="#E5E5E5"> put it</font><font color="#CCCCCC"> back together compress</font>

436
00:15:30,930 --> 00:15:37,469
it execute or<font color="#CCCCCC"> encode it anything so</font>

437
00:15:35,700 --> 00:15:39,360
there's a great framework<font color="#E5E5E5"> called a</font>

438
00:15:37,470 --> 00:15:41,100
invoke obfuscation that<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> can</font>

439
00:15:39,360 --> 00:15:42,990
take<font color="#E5E5E5"> you know your nice PS version table</font>

440
00:15:41,100 --> 00:15:46,110
make that you know<font color="#CCCCCC"> ten letter command</font>

441
00:15:42,990 --> 00:15:48,030
<font color="#E5E5E5">into a</font><font color="#CCCCCC"> 1000 word</font><font color="#E5E5E5"> command-line argument</font>

442
00:15:46,110 --> 00:15:50,070
that's illegible to any human<font color="#E5E5E5"> and</font>

443
00:15:48,030 --> 00:15:52,650
encoded in multiple<font color="#E5E5E5"> different ways but</font>

444
00:15:50,070 --> 00:15:53,880
yeah it can still be executed and what

445
00:15:52,650 --> 00:15:55,110
<font color="#E5E5E5">this does is obscure the code from</font>

446
00:15:53,880 --> 00:15:57,120
automated<font color="#E5E5E5"> analysis</font>

447
00:15:55,110 --> 00:15:58,440
logs are going in<font color="#CCCCCC"> your sim you're</font>

448
00:15:57,120 --> 00:16:00,180
looking for code and you're looking for

449
00:15:58,440 --> 00:16:01,890
specific strings like<font color="#E5E5E5"> I'm gonna look for</font>

450
00:16:00,180 --> 00:16:04,469
an interpreter invoke<font color="#CCCCCC"> shellcode or</font><font color="#E5E5E5"> maybe</font>

451
00:16:01,890 --> 00:16:10,920
you<font color="#E5E5E5"> got an awesome list</font><font color="#CCCCCC"> but this is</font>

452
00:16:04,470 --> 00:16:12,270
<font color="#CCCCCC">gonna bypass that then we saw in a lot</font>

453
00:16:10,920 --> 00:16:14,910
<font color="#E5E5E5">of samples from malware it would be a</font>

454
00:16:12,270 --> 00:16:16,560
high ratio<font color="#E5E5E5"> special characters</font><font color="#CCCCCC"> you look</font>

455
00:16:14,910 --> 00:16:19,350
at this and I<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> that this is</font>

456
00:16:16,560 --> 00:16:21,630
<font color="#E5E5E5">known PowerShell</font><font color="#CCCCCC"> to anybody</font><font color="#E5E5E5"> I hope not</font>

457
00:16:19,350 --> 00:16:22,950
this just looks ridiculous<font color="#CCCCCC"> and why is it</font>

458
00:16:21,630 --> 00:16:24,840
look ridiculous it just has so many

459
00:16:22,950 --> 00:16:26,670
special<font color="#E5E5E5"> characters so we figured</font><font color="#CCCCCC"> that</font>

460
00:16:24,840 --> 00:16:28,080
would<font color="#E5E5E5"> be a good one</font><font color="#CCCCCC"> to look at</font><font color="#E5E5E5"> and then</font>

461
00:16:26,670 --> 00:16:30,270
finally<font color="#CCCCCC"> what's</font><font color="#E5E5E5"> the cosine similarity</font>

462
00:16:28,080 --> 00:16:32,070
<font color="#E5E5E5">there's a great blog</font><font color="#CCCCCC"> post</font><font color="#E5E5E5"> will reference</font>

463
00:16:30,270 --> 00:16:33,660
<font color="#E5E5E5">here from Lee</font><font color="#CCCCCC"> homes where cosine</font>

464
00:16:32,070 --> 00:16:35,970
<font color="#E5E5E5">similarity basically says does this</font>

465
00:16:33,660 --> 00:16:37,890
event<font color="#E5E5E5"> how similar is it to known good</font>

466
00:16:35,970 --> 00:16:40,290
events if we have a list of known good

467
00:16:37,890 --> 00:16:42,120
<font color="#CCCCCC">label</font><font color="#E5E5E5"> data we could take</font><font color="#CCCCCC"> that event and</font>

468
00:16:40,290 --> 00:16:44,430
<font color="#E5E5E5">say you know score it based on how</font>

469
00:16:42,120 --> 00:16:46,230
<font color="#CCCCCC">similar it is to</font><font color="#E5E5E5"> those so from there we</font>

470
00:16:44,430 --> 00:16:48,599
<font color="#CCCCCC">can</font><font color="#E5E5E5"> here's an example of just taking two</font>

471
00:16:46,230 --> 00:16:50,760
events and it's scoring it you see that

472
00:16:48,600 --> 00:16:52,740
<font color="#CCCCCC">the top one is an event from a good log</font>

473
00:16:50,760 --> 00:16:55,319
source<font color="#E5E5E5"> and a good log source</font><font color="#CCCCCC"> that scores</font>

474
00:16:52,740 --> 00:16:56,820
pretty<font color="#E5E5E5"> high</font><font color="#CCCCCC"> the cosine similarity of a</font>

475
00:16:55,320 --> 00:16:59,370
good log source to a malicious<font color="#E5E5E5"> log</font>

476
00:16:56,820 --> 00:17:00,990
source<font color="#E5E5E5"> very low and what we do is we</font>

477
00:16:59,370 --> 00:17:04,800
take our<font color="#E5E5E5"> set of label known good and</font>

478
00:17:00,990 --> 00:17:07,130
compared to and compared<font color="#E5E5E5"> to the known</font>

479
00:17:04,800 --> 00:17:10,050
bad that we're examining<font color="#E5E5E5"> at that</font><font color="#CCCCCC"> moment</font>

480
00:17:07,130 --> 00:17:11,010
<font color="#E5E5E5">and so just</font><font color="#CCCCCC"> knowing that</font><font color="#E5E5E5"> this is if we</font>

481
00:17:10,050 --> 00:17:14,760
implement it's pretty easy<font color="#E5E5E5"> to implement</font>

482
00:17:11,010 --> 00:17:17,730
in Python or<font color="#CCCCCC"> R so that's just</font><font color="#E5E5E5"> a function</font>

483
00:17:14,760 --> 00:17:19,980
<font color="#E5E5E5">you can use</font><font color="#CCCCCC"> to derive your your features</font>

484
00:17:17,730 --> 00:17:22,110
<font color="#E5E5E5">so we've outlined kind of a lot of</font>

485
00:17:19,980 --> 00:17:23,430
<font color="#CCCCCC">high-level features these are things</font>

486
00:17:22,109 --> 00:17:24,419
that<font color="#E5E5E5"> our analysts are</font><font color="#CCCCCC"> looking at and</font>

487
00:17:23,430 --> 00:17:27,030
<font color="#E5E5E5">saying and these are what they're using</font>

488
00:17:24,420 --> 00:17:29,610
<font color="#E5E5E5">to judge the how suspicious that event</font>

489
00:17:27,030 --> 00:17:31,260
is so now we're<font color="#E5E5E5"> kind of going to you</font>

490
00:17:29,610 --> 00:17:35,550
know why<font color="#CCCCCC"> am i learning</font><font color="#E5E5E5"> and how</font><font color="#CCCCCC"> to</font>

491
00:17:31,260 --> 00:17:36,480
<font color="#CCCCCC">classify this</font><font color="#E5E5E5"> and train a model so as I</font>

492
00:17:35,550 --> 00:17:39,389
learned you know there's a never-ending

493
00:17:36,480 --> 00:17:40,740
cycle of creating rules<font color="#E5E5E5"> and detecting</font>

494
00:17:39,390 --> 00:17:43,530
bad behavior<font color="#E5E5E5"> and then detecting the</font>

495
00:17:40,740 --> 00:17:45,690
bypasses<font color="#E5E5E5"> and touching the bypass bypass</font>

496
00:17:43,530 --> 00:17:49,190
and<font color="#E5E5E5"> go out forever</font><font color="#CCCCCC"> so we have a better</font>

497
00:17:45,690 --> 00:17:51,450
<font color="#E5E5E5">way with those features we kind of</font>

498
00:17:49,190 --> 00:17:52,350
so we had<font color="#E5E5E5"> identified the high level</font>

499
00:17:51,450 --> 00:17:54,179
features those would be tougher to

500
00:17:52,350 --> 00:17:56,279
bypass then you know just string

501
00:17:54,179 --> 00:17:58,950
matching and things like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> and</font>

502
00:17:56,279 --> 00:17:59,820
honestly I as a data<font color="#E5E5E5"> enthusiast want to</font>

503
00:17:58,950 --> 00:18:02,250
work on a problem<font color="#CCCCCC"> that wasn't</font>

504
00:17:59,820 --> 00:18:03,629
classifying flowers right so<font color="#E5E5E5"> I've gone</font>

505
00:18:02,250 --> 00:18:05,220
through some classes and<font color="#E5E5E5"> you see the</font>

506
00:18:03,630 --> 00:18:08,010
same stuff on the internet<font color="#E5E5E5"> and I'm like</font>

507
00:18:05,220 --> 00:18:10,409
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> this is directly applied to me and</font>

508
00:18:08,010 --> 00:18:11,610
I think<font color="#CCCCCC"> that we can do this so it was a</font>

509
00:18:10,409 --> 00:18:13,409
lot<font color="#CCCCCC"> more</font><font color="#E5E5E5"> fun</font>

510
00:18:11,610 --> 00:18:15,840
<font color="#E5E5E5">my machine learning really comes from</font>

511
00:18:13,409 --> 00:18:18,929
<font color="#CCCCCC">self-taught you know I I'm not a</font>

512
00:18:15,840 --> 00:18:20,789
programmer<font color="#CCCCCC"> I'm not a data engineer</font><font color="#E5E5E5"> or</font>

513
00:18:18,929 --> 00:18:22,590
machine learning expert<font color="#CCCCCC"> I've studied</font>

514
00:18:20,789 --> 00:18:24,390
Coursera courses for the last probably

515
00:18:22,590 --> 00:18:25,500
three<font color="#E5E5E5"> or four</font><font color="#CCCCCC"> years and just kind of</font>

516
00:18:24,390 --> 00:18:28,289
tried<font color="#CCCCCC"> to learn because</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> think it's a</font>

517
00:18:25,500 --> 00:18:30,000
tool<font color="#CCCCCC"> that any data analyst secure</font><font color="#E5E5E5"> thread</font>

518
00:18:28,289 --> 00:18:31,289
<font color="#E5E5E5">analyst</font><font color="#CCCCCC"> should pick up</font><font color="#E5E5E5"> because these</font>

519
00:18:30,000 --> 00:18:33,149
this is I think where it's going

520
00:18:31,289 --> 00:18:35,309
adversaries are making their behavior

521
00:18:33,149 --> 00:18:37,760
<font color="#E5E5E5">fit in with normal activity that's</font>

522
00:18:35,309 --> 00:18:39,870
getting tougher and<font color="#CCCCCC"> tougher to</font><font color="#E5E5E5"> identify</font>

523
00:18:37,760 --> 00:18:42,539
everything<font color="#E5E5E5"> I didn't really was in</font><font color="#CCCCCC"> are</font>

524
00:18:39,870 --> 00:18:44,760
but I built<font color="#E5E5E5"> this inside kit</font><font color="#CCCCCC"> learned just</font>

525
00:18:42,539 --> 00:18:46,320
because it transfers<font color="#CCCCCC"> to my team a lot of</font>

526
00:18:44,760 --> 00:18:48,510
<font color="#E5E5E5">people work with Python better I was the</font>

527
00:18:46,320 --> 00:18:50,610
only one<font color="#CCCCCC"> that kind of</font><font color="#E5E5E5"> I wanted to to</font>

528
00:18:48,510 --> 00:18:53,010
work<font color="#E5E5E5"> with things in our psyche learned</font>

529
00:18:50,610 --> 00:18:54,870
is great documentation<font color="#CCCCCC"> so you know I had</font>

530
00:18:53,010 --> 00:18:56,610
learned the the frameworks in<font color="#E5E5E5"> our using</font>

531
00:18:54,870 --> 00:18:59,939
the care package<font color="#E5E5E5"> looking at this I was</font>

532
00:18:56,610 --> 00:19:02,250
<font color="#CCCCCC">able to do this pretty quickly the the</font>

533
00:18:59,940 --> 00:19:03,750
<font color="#CCCCCC">raw events came from both windows</font>

534
00:19:02,250 --> 00:19:05,789
<font color="#E5E5E5">security logs and the windows script</font>

535
00:19:03,750 --> 00:19:07,740
block<font color="#E5E5E5"> log so we we had samples</font><font color="#CCCCCC"> from</font>

536
00:19:05,789 --> 00:19:08,850
<font color="#E5E5E5">people who are friendly and said hey</font>

537
00:19:07,740 --> 00:19:11,700
Derek I'm interested in what you're

538
00:19:08,850 --> 00:19:13,379
doing<font color="#CCCCCC"> here's a whole ton of data we even</font>

539
00:19:11,700 --> 00:19:15,360
<font color="#E5E5E5">generated some malicious samples for you</font>

540
00:19:13,380 --> 00:19:17,870
<font color="#CCCCCC">here you</font><font color="#E5E5E5"> go</font>

541
00:19:15,360 --> 00:19:20,129
so we took those collected them<font color="#CCCCCC"> and</font>

542
00:19:17,870 --> 00:19:21,418
<font color="#E5E5E5">really we need to make it into form</font>

543
00:19:20,130 --> 00:19:22,980
<font color="#CCCCCC">suitable for learning so if you look at</font>

544
00:19:21,419 --> 00:19:25,080
<font color="#E5E5E5">this this is really</font><font color="#CCCCCC"> a free text</font><font color="#E5E5E5"> right so</font>

545
00:19:22,980 --> 00:19:27,210
free text in this case<font color="#E5E5E5"> isn't</font><font color="#CCCCCC"> going to</font>

546
00:19:25,080 --> 00:19:29,990
work<font color="#E5E5E5"> too well</font><font color="#CCCCCC"> in our learn</font><font color="#E5E5E5"> in our in our</font>

547
00:19:27,210 --> 00:19:32,299
learning algorithm<font color="#CCCCCC"> so we need to trans</font>

548
00:19:29,990 --> 00:19:34,919
transform it into a form that<font color="#E5E5E5"> would be</font>

549
00:19:32,299 --> 00:19:36,450
so we<font color="#CCCCCC"> reviewed we locked me and my</font>

550
00:19:34,919 --> 00:19:39,419
partner locked ourselves<font color="#E5E5E5"> in a room for</font>

551
00:19:36,450 --> 00:19:41,549
probably<font color="#E5E5E5"> a months on end classifying</font><font color="#CCCCCC"> you</font>

552
00:19:39,419 --> 00:19:44,820
know I think<font color="#E5E5E5"> we had like initially</font><font color="#CCCCCC"> a lot</font>

553
00:19:41,549 --> 00:19:47,039
pretty thousands and thousands of known

554
00:19:44,820 --> 00:19:49,408
good and known bad events also generated

555
00:19:47,039 --> 00:19:51,210
<font color="#CCCCCC">adversaries samples also</font><font color="#E5E5E5"> collected from</font>

556
00:19:49,409 --> 00:19:53,070
our fishing campaigns things like that

557
00:19:51,210 --> 00:19:54,690
<font color="#E5E5E5">I'm really just begged borrowed and</font>

558
00:19:53,070 --> 00:19:56,250
steeled as many samples<font color="#E5E5E5"> as we could</font><font color="#CCCCCC"> oh</font>

559
00:19:54,690 --> 00:19:59,190
we didn't<font color="#E5E5E5"> steal anything it was</font><font color="#CCCCCC"> AA legit</font>

560
00:19:56,250 --> 00:20:01,049
so<font color="#E5E5E5"> I have to say that</font>

561
00:19:59,190 --> 00:20:02,559
so for<font color="#CCCCCC"> each event we can't we create a</font>

562
00:20:01,049 --> 00:20:04,210
<font color="#E5E5E5">vector of value so first was a</font>

563
00:20:02,559 --> 00:20:06,279
ratio of uppercase to lowercase like I

564
00:20:04,210 --> 00:20:08,080
mentioned special characters<font color="#CCCCCC"> and total</font>

565
00:20:06,279 --> 00:20:10,779
characters elf characters<font color="#CCCCCC"> and total</font>

566
00:20:08,080 --> 00:20:12,580
characters the cosine similarity<font color="#E5E5E5"> the</font>

567
00:20:10,779 --> 00:20:14,320
count of suspicious modules counts of

568
00:20:12,580 --> 00:20:16,029
malicious modules now keep in<font color="#CCCCCC"> mind this</font>

569
00:20:14,320 --> 00:20:17,918
is what we<font color="#E5E5E5"> used at first this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> not</font>

570
00:20:16,029 --> 00:20:20,200
what we use<font color="#CCCCCC"> now and</font><font color="#E5E5E5"> we'll go into the</font>

571
00:20:17,919 --> 00:20:22,690
<font color="#CCCCCC">the details first list did work pretty</font>

572
00:20:20,200 --> 00:20:24,580
well<font color="#E5E5E5"> so here's what we here's a sample</font>

573
00:20:22,690 --> 00:20:26,799
event this<font color="#CCCCCC"> has been some</font><font color="#E5E5E5"> some command</font>

574
00:20:24,580 --> 00:20:29,019
<font color="#E5E5E5">off you skate with invoke a few</font><font color="#CCCCCC"> skatin</font>

575
00:20:26,799 --> 00:20:30,668
<font color="#CCCCCC">we create functions to derive each one</font>

576
00:20:29,019 --> 00:20:32,889
of<font color="#E5E5E5"> those</font><font color="#CCCCCC"> values um those are the values</font>

577
00:20:30,669 --> 00:20:35,139
<font color="#E5E5E5">there and basically it's just a comma</font>

578
00:20:32,889 --> 00:20:48,699
it's like CSV file full of<font color="#E5E5E5"> label data</font>

579
00:20:35,139 --> 00:20:49,990
yes so the events that we got were so

580
00:20:48,700 --> 00:20:54,220
when we<font color="#E5E5E5"> store the events are stored in</font>

581
00:20:49,990 --> 00:20:56,759
raw text<font color="#E5E5E5"> so we collect them and I guess</font>

582
00:20:54,220 --> 00:20:58,929
we definitely<font color="#E5E5E5"> are</font><font color="#CCCCCC"> not store</font><font color="#E5E5E5"> in XML so</font>

583
00:20:56,759 --> 00:21:00,249
<font color="#CCCCCC">we've collected them through the process</font>

584
00:20:58,929 --> 00:21:02,309
<font color="#E5E5E5">kind of similar to what</font><font color="#CCCCCC"> I showed earlier</font>

585
00:21:00,249 --> 00:21:04,720
<font color="#CCCCCC">you have the log sources and it's</font>

586
00:21:02,309 --> 00:21:07,720
collected<font color="#E5E5E5"> at central location</font><font color="#CCCCCC"> NX log</font>

587
00:21:04,720 --> 00:21:10,119
sends them<font color="#CCCCCC"> an x log transmits the in</font>

588
00:21:07,720 --> 00:21:11,769
text<font color="#E5E5E5"> so it's not an XML</font><font color="#CCCCCC"> or any other</font>

589
00:21:10,119 --> 00:21:14,080
format so it's<font color="#CCCCCC"> just open text that we</font>

590
00:21:11,769 --> 00:21:15,639
process<font color="#E5E5E5"> and essentially we extract the</font>

591
00:21:14,080 --> 00:21:17,379
<font color="#E5E5E5">last field says process command line</font>

592
00:21:15,639 --> 00:21:21,850
it's<font color="#E5E5E5"> formatted almost exactly the</font><font color="#CCCCCC"> same -</font>

593
00:21:17,379 --> 00:21:23,559
with the formatting<font color="#E5E5E5"> character so so</font>

594
00:21:21,850 --> 00:21:27,009
<font color="#E5E5E5">here's an example</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> how we</font><font color="#CCCCCC"> derive</font><font color="#E5E5E5"> the</font>

595
00:21:23,559 --> 00:21:29,019
values and what the which each record

596
00:21:27,009 --> 00:21:30,340
looks like it's<font color="#E5E5E5"> just a CSV file when you</font>

597
00:21:29,019 --> 00:21:32,080
think about<font color="#E5E5E5"> it</font>

598
00:21:30,340 --> 00:21:33,070
<font color="#E5E5E5">and ends up looking like this and if</font>

599
00:21:32,080 --> 00:21:34,509
you're familiar with machine learning

600
00:21:33,070 --> 00:21:36,519
<font color="#CCCCCC">and you see a file like</font><font color="#E5E5E5"> this you're</font><font color="#CCCCCC"> like</font>

601
00:21:34,509 --> 00:21:39,029
<font color="#CCCCCC">okay this</font><font color="#E5E5E5"> is kind of all the hard part</font>

602
00:21:36,519 --> 00:21:41,559
has really been done<font color="#CCCCCC"> at</font><font color="#E5E5E5"> this point</font>

603
00:21:39,029 --> 00:21:44,559
<font color="#CCCCCC">there's some issues with</font><font color="#E5E5E5"> this data but</font>

604
00:21:41,559 --> 00:21:47,110
it's there<font color="#CCCCCC"> and it's usable so it's time</font>

605
00:21:44,559 --> 00:21:48,460
to<font color="#E5E5E5"> start evaluating algorithms</font><font color="#CCCCCC"> so</font>

606
00:21:47,110 --> 00:21:49,479
there's so many when<font color="#E5E5E5"> I look at side</font>

607
00:21:48,460 --> 00:21:51,809
killer and there's so many algorithms

608
00:21:49,480 --> 00:21:54,669
<font color="#E5E5E5">I'm not a data scientist so I'm not sure</font>

609
00:21:51,809 --> 00:21:56,889
<font color="#E5E5E5">which ones will work the best</font><font color="#CCCCCC"> so what I</font>

610
00:21:54,669 --> 00:21:58,149
found<font color="#E5E5E5"> was that I'll just try all</font><font color="#CCCCCC"> of the</font>

611
00:21:56,889 --> 00:22:00,490
ones in there so I found some good

612
00:21:58,149 --> 00:22:01,899
<font color="#E5E5E5">sources for</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of creating a test</font>

613
00:22:00,490 --> 00:22:03,940
harness<font color="#E5E5E5"> to iterate</font><font color="#CCCCCC"> through each one</font>

614
00:22:01,899 --> 00:22:05,739
develop the accuracy<font color="#CCCCCC"> don't kind</font><font color="#E5E5E5"> of go</font>

615
00:22:03,940 --> 00:22:09,399
through<font color="#CCCCCC"> that but</font><font color="#E5E5E5"> these were the initial</font>

616
00:22:05,740 --> 00:22:13,570
ones we had more<font color="#E5E5E5"> like</font><font color="#CCCCCC"> an MLP classifier</font>

617
00:22:09,399 --> 00:22:15,290
so<font color="#CCCCCC"> we ended</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> looking at other ones</font><font color="#E5E5E5"> in</font>

618
00:22:13,570 --> 00:22:18,470
addition to these but they all performed

619
00:22:15,290 --> 00:22:20,270
very<font color="#E5E5E5"> similarly</font><font color="#CCCCCC"> we use k-fold validation</font>

620
00:22:18,470 --> 00:22:24,170
so we took our test set that<font color="#E5E5E5"> includes</font>

621
00:22:20,270 --> 00:22:28,639
known good known bad samples<font color="#CCCCCC"> we divide</font>

622
00:22:24,170 --> 00:22:31,250
that up<font color="#E5E5E5"> into like</font><font color="#CCCCCC"> 80/20 with that</font><font color="#E5E5E5"> 80%</font>

623
00:22:28,640 --> 00:22:33,260
data<font color="#E5E5E5"> that sort of</font><font color="#CCCCCC"> test set the 20% was</font>

624
00:22:31,250 --> 00:22:34,640
kind<font color="#E5E5E5"> of our validation set and with that</font>

625
00:22:33,260 --> 00:22:36,020
test set that's what we<font color="#E5E5E5"> used to train</font>

626
00:22:34,640 --> 00:22:38,390
the algorithms and this is kind<font color="#CCCCCC"> of the</font>

627
00:22:36,020 --> 00:22:40,070
<font color="#CCCCCC">process of how we trained we use</font><font color="#E5E5E5"> K full</font>

628
00:22:38,390 --> 00:22:41,870
validation<font color="#E5E5E5"> which what that</font><font color="#CCCCCC"> does is</font><font color="#E5E5E5"> say</font>

629
00:22:40,070 --> 00:22:43,850
hey we're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> put the data up</font><font color="#CCCCCC"> K</font>

630
00:22:41,870 --> 00:22:45,469
<font color="#CCCCCC">time so in this</font><font color="#E5E5E5"> case</font><font color="#CCCCCC"> five</font><font color="#E5E5E5"> and we're</font>

631
00:22:43,850 --> 00:22:47,750
gonna iterate<font color="#CCCCCC"> through that and in</font>

632
00:22:45,470 --> 00:22:50,060
<font color="#E5E5E5">training on four pieces of data and test</font>

633
00:22:47,750 --> 00:22:51,650
the accuracy<font color="#E5E5E5"> our test</font><font color="#CCCCCC"> of metrics on the</font>

634
00:22:50,060 --> 00:22:53,540
fifth piece of<font color="#E5E5E5"> data and then we're going</font>

635
00:22:51,650 --> 00:22:54,800
to<font color="#E5E5E5"> iterate through each piece so all the</font>

636
00:22:53,540 --> 00:22:56,840
data<font color="#CCCCCC"> has been training</font><font color="#E5E5E5"> all the data has</font>

637
00:22:54,800 --> 00:23:00,050
been tested<font color="#CCCCCC"> we did</font>

638
00:22:56,840 --> 00:23:01,850
<font color="#CCCCCC">tenfold ten splits but in this examples</font>

639
00:23:00,050 --> 00:23:05,899
<font color="#CCCCCC">fives but</font><font color="#E5E5E5"> either way it worked pretty</font>

640
00:23:01,850 --> 00:23:07,370
well<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> had scoring with accuracy</font><font color="#E5E5E5"> our</font>

641
00:23:05,900 --> 00:23:08,990
accuracy was off the charts I'm like

642
00:23:07,370 --> 00:23:11,600
<font color="#E5E5E5">okay ninety-nine point seven percent I'm</font>

643
00:23:08,990 --> 00:23:12,830
done<font color="#CCCCCC"> here</font><font color="#E5E5E5"> you go guys and and really</font>

644
00:23:11,600 --> 00:23:16,429
that<font color="#CCCCCC"> was pretty good but there</font><font color="#E5E5E5"> was</font>

645
00:23:12,830 --> 00:23:17,929
issues<font color="#E5E5E5"> with this so we here's the the</font>

646
00:23:16,430 --> 00:23:19,490
distributions of the<font color="#CCCCCC"> different</font>

647
00:23:17,930 --> 00:23:21,950
<font color="#CCCCCC">algorithms and how they worked</font><font color="#E5E5E5"> out see</font>

648
00:23:19,490 --> 00:23:23,840
<font color="#E5E5E5">the random</font><font color="#CCCCCC"> forest linear aggression</font><font color="#E5E5E5"> k KN</font>

649
00:23:21,950 --> 00:23:25,040
and cart worked pretty well there was

650
00:23:23,840 --> 00:23:26,840
some of the other ones<font color="#CCCCCC"> that did not work</font>

651
00:23:25,040 --> 00:23:28,310
<font color="#CCCCCC">very well and</font><font color="#E5E5E5"> I'm going</font><font color="#CCCCCC"> to talk about</font>

652
00:23:26,840 --> 00:23:30,830
<font color="#E5E5E5">why those didn't</font><font color="#CCCCCC"> work well at the end</font>

653
00:23:28,310 --> 00:23:33,409
you may be seeing this already<font color="#CCCCCC"> but</font>

654
00:23:30,830 --> 00:23:35,419
anyways<font color="#CCCCCC"> I saw</font><font color="#E5E5E5"> there's four that worked</font>

655
00:23:33,410 --> 00:23:36,860
approximately the same each time<font color="#CCCCCC"> I ran</font>

656
00:23:35,420 --> 00:23:38,150
through that<font color="#E5E5E5"> that</font><font color="#CCCCCC"> would change slightly</font>

657
00:23:36,860 --> 00:23:39,740
<font color="#E5E5E5">that's one thing to keep in</font><font color="#CCCCCC"> mind with</font>

658
00:23:38,150 --> 00:23:41,180
machine<font color="#CCCCCC"> learning algorithms</font><font color="#E5E5E5"> they don't</font>

659
00:23:39,740 --> 00:23:43,310
it wouldn't be the<font color="#CCCCCC"> same results every</font>

660
00:23:41,180 --> 00:23:45,830
single<font color="#E5E5E5"> time</font><font color="#CCCCCC"> you would get slightly</font>

661
00:23:43,310 --> 00:23:49,220
different<font color="#E5E5E5"> accuracies</font><font color="#CCCCCC"> and metrics each</font>

662
00:23:45,830 --> 00:23:53,120
time you run through<font color="#E5E5E5"> the</font><font color="#CCCCCC"> process</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> okay</font>

663
00:23:49,220 --> 00:23:54,860
<font color="#E5E5E5">accuracies 99.7% but in my data set it's</font>

664
00:23:53,120 --> 00:23:57,830
highly imbalanced<font color="#CCCCCC"> and we'll talk about</font>

665
00:23:54,860 --> 00:24:00,770
<font color="#E5E5E5">that issue</font><font color="#CCCCCC"> later but um</font><font color="#E5E5E5"> so even if I</font>

666
00:23:57,830 --> 00:24:02,689
were to<font color="#E5E5E5"> guess</font><font color="#CCCCCC"> benign every single</font><font color="#E5E5E5"> time I</font>

667
00:24:00,770 --> 00:24:04,430
<font color="#E5E5E5">would have like a 93% accuracy which</font>

668
00:24:02,690 --> 00:24:06,470
sounds good<font color="#E5E5E5"> and reality that's the worst</font>

669
00:24:04,430 --> 00:24:08,600
that<font color="#CCCCCC"> could possibly</font><font color="#E5E5E5"> do so we need</font><font color="#CCCCCC"> to</font>

670
00:24:06,470 --> 00:24:12,350
look at other metrics like fault fault

671
00:24:08,600 --> 00:24:14,149
<font color="#E5E5E5">or precision and recall so these two</font>

672
00:24:12,350 --> 00:24:15,500
<font color="#E5E5E5">metrics kind of are what we're</font>

673
00:24:14,150 --> 00:24:18,110
<font color="#CCCCCC">interested in because we're interested</font>

674
00:24:15,500 --> 00:24:20,660
<font color="#E5E5E5">in a good</font><font color="#CCCCCC"> ratio of catching everything</font>

675
00:24:18,110 --> 00:24:22,820
<font color="#E5E5E5">but not sending false positives to our</font>

676
00:24:20,660 --> 00:24:24,530
sock<font color="#E5E5E5"> too often so what you know</font>

677
00:24:22,820 --> 00:24:26,810
precision<font color="#E5E5E5"> what percentage of suspicious</font>

678
00:24:24,530 --> 00:24:28,770
classifications are truly suspicious<font color="#E5E5E5"> so</font>

679
00:24:26,810 --> 00:24:31,409
if I guess there's a hundred

680
00:24:28,770 --> 00:24:34,139
malicious samples<font color="#E5E5E5"> then what percentage</font>

681
00:24:31,410 --> 00:24:35,280
<font color="#E5E5E5">of those are</font><font color="#CCCCCC"> actually malicious recalls</font>

682
00:24:34,140 --> 00:24:36,750
a little bit different so what

683
00:24:35,280 --> 00:24:38,970
<font color="#E5E5E5">percentage of truly suspicious events</font>

684
00:24:36,750 --> 00:24:41,400
<font color="#E5E5E5">were classified as suspicious so let's</font>

685
00:24:38,970 --> 00:24:44,280
say there's 150 truly suspicious<font color="#E5E5E5"> what</font>

686
00:24:41,400 --> 00:24:46,740
percentage of those<font color="#CCCCCC"> are actually were</font>

687
00:24:44,280 --> 00:24:48,030
we're classified as such so<font color="#CCCCCC"> it's a</font>

688
00:24:46,740 --> 00:24:50,970
slight<font color="#CCCCCC"> difference took my</font><font color="#E5E5E5"> little I took</font>

689
00:24:48,030 --> 00:24:53,010
<font color="#CCCCCC">my head</font><font color="#E5E5E5"> to to a while</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> wrap around it</font>

690
00:24:50,970 --> 00:24:57,000
but<font color="#E5E5E5"> Wikimedia</font><font color="#CCCCCC"> is like the classic</font>

691
00:24:53,010 --> 00:24:58,440
<font color="#E5E5E5">picture</font><font color="#CCCCCC"> of how to take and precision and</font>

692
00:24:57,000 --> 00:25:02,160
recall I suggest taking<font color="#CCCCCC"> a look at that</font>

693
00:24:58,440 --> 00:25:03,810
<font color="#E5E5E5">anyway we use a what we end up</font><font color="#CCCCCC"> using</font>

694
00:25:02,160 --> 00:25:05,130
<font color="#E5E5E5">that</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> one score but here's the</font>

695
00:25:03,810 --> 00:25:08,850
precision so the precision<font color="#E5E5E5"> for random</font>

696
00:25:05,130 --> 00:25:11,250
forests pretty high<font color="#E5E5E5"> 98%</font><font color="#CCCCCC"> so what</font>

697
00:25:08,850 --> 00:25:14,310
<font color="#E5E5E5">percentage</font><font color="#CCCCCC"> did we classify our</font>

698
00:25:11,250 --> 00:25:16,350
collections were truly suspicious<font color="#CCCCCC"> 98% or</font>

699
00:25:14,310 --> 00:25:18,090
recall<font color="#E5E5E5"> what percentage of our truly</font>

700
00:25:16,350 --> 00:25:18,840
suspicious<font color="#CCCCCC"> events were classified as</font>

701
00:25:18,090 --> 00:25:22,800
suspicious

702
00:25:18,840 --> 00:25:24,929
<font color="#CCCCCC">96%</font><font color="#E5E5E5"> so that was pretty good</font><font color="#CCCCCC"> and we end</font>

703
00:25:22,800 --> 00:25:26,700
up<font color="#CCCCCC"> using our</font><font color="#E5E5E5"> F 1 metrics so</font><font color="#CCCCCC"> 97% and</font>

704
00:25:24,930 --> 00:25:28,680
random<font color="#E5E5E5"> for us we're pretty</font><font color="#CCCCCC"> happy</font><font color="#E5E5E5"> with</font>

705
00:25:26,700 --> 00:25:30,690
this is significantly better than<font color="#E5E5E5"> our</font>

706
00:25:28,680 --> 00:25:32,310
<font color="#CCCCCC">rule-based</font><font color="#E5E5E5"> approach</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> triggering</font>

707
00:25:30,690 --> 00:25:35,310
thousands of false positives<font color="#E5E5E5"> to our</font>

708
00:25:32,310 --> 00:25:36,659
<font color="#CCCCCC">stock and missing some some known</font><font color="#E5E5E5"> things</font>

709
00:25:35,310 --> 00:25:37,889
that we thought<font color="#CCCCCC"> it should be catching</font>

710
00:25:36,660 --> 00:25:40,230
and we end<font color="#E5E5E5"> up catching through other</font>

711
00:25:37,890 --> 00:25:44,190
means detection through other products

712
00:25:40,230 --> 00:25:45,930
<font color="#CCCCCC">etc so what this so what we're</font>

713
00:25:44,190 --> 00:25:47,130
interested in is<font color="#E5E5E5"> kind of a good balance</font>

714
00:25:45,930 --> 00:25:49,620
we can't send too many false positives

715
00:25:47,130 --> 00:25:51,450
to<font color="#E5E5E5"> suck we want to catch everything</font><font color="#CCCCCC"> and</font>

716
00:25:49,620 --> 00:25:53,550
so how you show<font color="#CCCCCC"> that through the ROC</font>

717
00:25:51,450 --> 00:25:55,050
curve<font color="#CCCCCC"> knows you know I think this is</font>

718
00:25:53,550 --> 00:25:57,210
<font color="#E5E5E5">obligatory for any machine learning</font>

719
00:25:55,050 --> 00:25:59,430
model this ROC curve looks ridiculous

720
00:25:57,210 --> 00:26:02,190
keep in mind based on one<font color="#E5E5E5"> customers</font>

721
00:25:59,430 --> 00:26:04,470
worth of data<font color="#CCCCCC"> when I created this so you</font>

722
00:26:02,190 --> 00:26:05,850
know<font color="#E5E5E5"> without a extremely varied set</font>

723
00:26:04,470 --> 00:26:08,670
<font color="#E5E5E5">you're gonna get a really</font><font color="#CCCCCC"> good looking</font>

724
00:26:05,850 --> 00:26:11,370
ROC curve<font color="#CCCCCC"> but you know what this shows</font>

725
00:26:08,670 --> 00:26:14,780
is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> it's way better than luck and so</font>

726
00:26:11,370 --> 00:26:16,919
we're we're we're<font color="#CCCCCC"> doing</font><font color="#E5E5E5"> pretty well</font><font color="#CCCCCC"> here</font>

727
00:26:14,780 --> 00:26:18,629
<font color="#E5E5E5">so we end up with</font><font color="#CCCCCC"> the random forest</font>

728
00:26:16,920 --> 00:26:21,120
algorithm it was the most accurate test

729
00:26:18,630 --> 00:26:26,340
at the<font color="#E5E5E5"> time</font><font color="#CCCCCC"> we ran</font><font color="#E5E5E5"> that for a long time</font>

730
00:26:21,120 --> 00:26:27,629
against all of our data<font color="#E5E5E5"> so the</font><font color="#CCCCCC"> algorithm</font>

731
00:26:26,340 --> 00:26:29,100
needs to be<font color="#E5E5E5"> tested against previously</font>

732
00:26:27,630 --> 00:26:31,470
unseen data<font color="#E5E5E5"> so we're training and</font>

733
00:26:29,100 --> 00:26:33,030
testing on the same on<font color="#CCCCCC"> our on our test</font>

734
00:26:31,470 --> 00:26:35,370
set of data now I'm gonna give<font color="#E5E5E5"> the deck</font>

735
00:26:33,030 --> 00:26:36,930
<font color="#CCCCCC">that</font><font color="#E5E5E5"> 20%</font><font color="#CCCCCC"> that I set aside we're gonna</font>

736
00:26:35,370 --> 00:26:39,719
run this model<font color="#E5E5E5"> and say hey how</font><font color="#CCCCCC"> does this</font>

737
00:26:36,930 --> 00:26:41,190
do<font color="#CCCCCC"> I'm previously unseen data it's</font><font color="#E5E5E5"> very</font>

738
00:26:39,720 --> 00:26:42,300
important if you're not familiar with

739
00:26:41,190 --> 00:26:44,520
machine learning

740
00:26:42,300 --> 00:26:47,070
that you don't train<font color="#E5E5E5"> on the data that</font>

741
00:26:44,520 --> 00:26:49,500
that<font color="#E5E5E5"> you're validating at that's like</font>

742
00:26:47,070 --> 00:26:50,939
<font color="#E5E5E5">memorizing version</font><font color="#CCCCCC"> one test</font><font color="#E5E5E5"> and then</font>

743
00:26:49,500 --> 00:26:54,030
giving version two<font color="#CCCCCC"> and you're like aw</font>

744
00:26:50,940 --> 00:26:55,560
crap<font color="#CCCCCC"> none of this is</font><font color="#E5E5E5"> the same so we</font>

745
00:26:54,030 --> 00:26:57,720
<font color="#E5E5E5">train the model</font><font color="#CCCCCC"> and test the accuracy</font><font color="#E5E5E5"> on</font>

746
00:26:55,560 --> 00:27:00,330
the validation<font color="#E5E5E5"> set extremely high so you</font>

747
00:26:57,720 --> 00:27:03,170
see that<font color="#E5E5E5"> on this test we had 1500</font><font color="#CCCCCC"> set</font>

748
00:27:00,330 --> 00:27:05,699
<font color="#CCCCCC">you know roughly 1,800 samples</font>

749
00:27:03,170 --> 00:27:07,710
<font color="#CCCCCC">ninety-nine</font><font color="#E5E5E5"> point eight percent accuracy</font>

750
00:27:05,700 --> 00:27:10,650
<font color="#CCCCCC">and</font><font color="#E5E5E5"> you see the the f1 scores were</font>

751
00:27:07,710 --> 00:27:12,120
really well there so we think that<font color="#E5E5E5"> this</font>

752
00:27:10,650 --> 00:27:14,130
this<font color="#CCCCCC"> was really good at this</font><font color="#E5E5E5"> point is</font>

753
00:27:12,120 --> 00:27:16,830
when I<font color="#CCCCCC"> show</font><font color="#E5E5E5"> this I'm like okay this is</font>

754
00:27:14,130 --> 00:27:18,750
where I'm trying<font color="#E5E5E5"> to justify putting</font>

755
00:27:16,830 --> 00:27:20,850
<font color="#E5E5E5">additional resources to get more data to</font>

756
00:27:18,750 --> 00:27:22,920
<font color="#E5E5E5">talk to more clients to</font><font color="#CCCCCC"> get the pipeline</font>

757
00:27:20,850 --> 00:27:26,669
to<font color="#E5E5E5"> do to say hey we</font><font color="#CCCCCC"> want to apply</font><font color="#E5E5E5"> this</font>

758
00:27:22,920 --> 00:27:27,510
to<font color="#E5E5E5"> everybody and so random force with</font>

759
00:27:26,670 --> 00:27:29,160
the<font color="#E5E5E5"> highest accuracy</font>

760
00:27:27,510 --> 00:27:30,900
<font color="#CCCCCC">we use this for a while it's very</font>

761
00:27:29,160 --> 00:27:32,460
successful<font color="#CCCCCC"> so the you</font><font color="#E5E5E5"> know what what I</font>

762
00:27:30,900 --> 00:27:34,710
shows we reduced false<font color="#E5E5E5"> positives</font>

763
00:27:32,460 --> 00:27:36,890
significantly<font color="#E5E5E5"> our stock was looking at</font>

764
00:27:34,710 --> 00:27:39,810
every instance of encoding commands

765
00:27:36,890 --> 00:27:41,910
<font color="#CCCCCC">that's used quite</font><font color="#E5E5E5"> often for for</font>

766
00:27:39,810 --> 00:27:44,399
legitimate uses<font color="#E5E5E5"> so they would have to</font>

767
00:27:41,910 --> 00:27:46,020
decode the the encoded command<font color="#E5E5E5"> take a</font>

768
00:27:44,400 --> 00:27:48,060
look and<font color="#CCCCCC"> make a</font><font color="#E5E5E5"> judgment</font><font color="#CCCCCC"> call there</font>

769
00:27:46,020 --> 00:27:49,290
that's<font color="#CCCCCC"> time-consuming in a waste and</font>

770
00:27:48,060 --> 00:27:50,960
ends up<font color="#E5E5E5"> being like</font><font color="#CCCCCC"> one percent the</font>

771
00:27:49,290 --> 00:27:53,490
encoded commands were actually malicious

772
00:27:50,960 --> 00:27:55,230
<font color="#E5E5E5">we increased our true positives so</font>

773
00:27:53,490 --> 00:27:57,980
<font color="#E5E5E5">things are being missed before are not</font>

774
00:27:55,230 --> 00:28:00,570
being missed now so when we detect that

775
00:27:57,980 --> 00:28:02,430
<font color="#CCCCCC">most</font><font color="#E5E5E5"> PowerShell actually caused this</font>

776
00:28:00,570 --> 00:28:04,020
service to<font color="#E5E5E5"> run that service running is</font>

777
00:28:02,430 --> 00:28:06,510
what triggered<font color="#E5E5E5"> like a carbon black</font>

778
00:28:04,020 --> 00:28:08,430
<font color="#E5E5E5">watchlist rule we think wow we should</font>

779
00:28:06,510 --> 00:28:11,070
have saw this PowerShell event earlier

780
00:28:08,430 --> 00:28:12,720
why but<font color="#E5E5E5"> now we're seeing those I mean we</font>

781
00:28:11,070 --> 00:28:14,669
decreased false negative so we can do

782
00:28:12,720 --> 00:28:16,920
this<font color="#E5E5E5"> by we ran in parallel with our</font>

783
00:28:14,670 --> 00:28:19,890
existing rules so we could see the

784
00:28:16,920 --> 00:28:21,330
things<font color="#E5E5E5"> that were we're missed by them</font>

785
00:28:19,890 --> 00:28:23,190
and<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we would never have known what</font>

786
00:28:21,330 --> 00:28:24,810
<font color="#CCCCCC">for isn't for this and we also test on</font>

787
00:28:23,190 --> 00:28:27,090
sandbox events we get tons of phishing

788
00:28:24,810 --> 00:28:29,159
documents and so they detonate them in a

789
00:28:27,090 --> 00:28:31,110
kuku sandbox we get the logs we analyze

790
00:28:29,160 --> 00:28:33,270
<font color="#E5E5E5">those if we</font><font color="#CCCCCC"> see a PowerShell sample from</font>

791
00:28:31,110 --> 00:28:35,159
a kuku sandbox<font color="#E5E5E5"> most likely that should</font>

792
00:28:33,270 --> 00:28:37,560
be<font color="#E5E5E5"> malicious and someone that reviews</font>

793
00:28:35,160 --> 00:28:38,850
every single<font color="#CCCCCC"> one of those so that</font><font color="#E5E5E5"> kind</font>

794
00:28:37,560 --> 00:28:42,510
of helps<font color="#E5E5E5"> us say hey okay</font><font color="#CCCCCC"> this thing's</font>

795
00:28:38,850 --> 00:28:45,740
working<font color="#E5E5E5"> well</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's it no I'm just</font>

796
00:28:42,510 --> 00:28:47,820
<font color="#E5E5E5">kidding so if you look</font><font color="#CCCCCC"> through here</font>

797
00:28:45,740 --> 00:28:49,740
<font color="#E5E5E5">pitfalls and lessons learned</font><font color="#CCCCCC"> this is the</font>

798
00:28:47,820 --> 00:28:51,450
<font color="#E5E5E5">gold right like advice if I saw this is</font>

799
00:28:49,740 --> 00:28:53,370
what I would<font color="#CCCCCC"> be</font><font color="#E5E5E5"> happy</font><font color="#CCCCCC"> with so that was</font>

800
00:28:51,450 --> 00:28:55,410
the end of the POC<font color="#CCCCCC"> I'm definitely out</font>

801
00:28:53,370 --> 00:28:56,039
then<font color="#CCCCCC"> the story this</font><font color="#E5E5E5"> was probably the</font>

802
00:28:55,410 --> 00:28:58,679
middle

803
00:28:56,039 --> 00:29:01,710
of 2017 when when<font color="#E5E5E5"> this portion was</font>

804
00:28:58,679 --> 00:29:03,419
<font color="#CCCCCC">donner</font><font color="#E5E5E5"> early 2017</font><font color="#CCCCCC"> so we learned a lot of</font>

805
00:29:01,710 --> 00:29:05,970
<font color="#E5E5E5">lessons and we</font><font color="#CCCCCC"> enhanced this model</font>

806
00:29:03,419 --> 00:29:07,139
significantly<font color="#CCCCCC"> so when I go through</font><font color="#E5E5E5"> some</font>

807
00:29:05,970 --> 00:29:08,609
of<font color="#E5E5E5"> those enhancements</font><font color="#CCCCCC"> talk about some of</font>

808
00:29:07,139 --> 00:29:10,469
<font color="#E5E5E5">the problems obviously can't talk about</font>

809
00:29:08,609 --> 00:29:12,359
<font color="#E5E5E5">the exact</font><font color="#CCCCCC"> specifics</font><font color="#E5E5E5"> of our pipeline that</font>

810
00:29:10,470 --> 00:29:14,190
we're running<font color="#CCCCCC"> you know for for our</font>

811
00:29:12,359 --> 00:29:16,489
clients<font color="#E5E5E5"> but I think that with these</font>

812
00:29:14,190 --> 00:29:18,509
blessings<font color="#CCCCCC"> or what we</font><font color="#E5E5E5"> derived that from</font>

813
00:29:16,489 --> 00:29:21,019
<font color="#CCCCCC">so it's really worth its weight in gold</font>

814
00:29:18,509 --> 00:29:23,100
in ml<font color="#CCCCCC"> so one of</font><font color="#E5E5E5"> the one of the biggest</font>

815
00:29:21,019 --> 00:29:24,629
questions I get<font color="#E5E5E5"> how do you account for</font>

816
00:29:23,100 --> 00:29:27,449
overfitting<font color="#E5E5E5"> how do you you know feature</font>

817
00:29:24,629 --> 00:29:28,649
<font color="#CCCCCC">engineering</font><font color="#E5E5E5"> our data was pretty good</font><font color="#CCCCCC"> we</font>

818
00:29:27,450 --> 00:29:30,179
had a lot of<font color="#E5E5E5"> much of samples we</font>

819
00:29:28,649 --> 00:29:32,549
<font color="#CCCCCC">generally lob malicious samples we were</font>

820
00:29:30,179 --> 00:29:34,739
able<font color="#E5E5E5"> to get them from sandbox events we</font>

821
00:29:32,549 --> 00:29:38,580
were<font color="#CCCCCC"> able to get them from clients and</font>

822
00:29:34,739 --> 00:29:40,859
we took<font color="#CCCCCC"> care to</font><font color="#E5E5E5"> create a separate our</font>

823
00:29:38,580 --> 00:29:42,899
test set<font color="#E5E5E5"> our validation set</font><font color="#CCCCCC"> but one of</font>

824
00:29:40,859 --> 00:29:43,859
the issues<font color="#CCCCCC"> is our hand engineer you can</font>

825
00:29:42,899 --> 00:29:45,719
<font color="#E5E5E5">see that these</font><font color="#CCCCCC"> are really</font><font color="#E5E5E5"> hand</font>

826
00:29:43,859 --> 00:29:47,009
engineered predictors right so we

827
00:29:45,720 --> 00:29:49,470
created<font color="#E5E5E5"> these we decide what's</font>

828
00:29:47,009 --> 00:29:51,659
suspicious<font color="#E5E5E5"> we decide what's malicious it</font>

829
00:29:49,470 --> 00:29:52,529
<font color="#E5E5E5">requires our judgment to do that</font><font color="#CCCCCC"> also</font>

830
00:29:51,659 --> 00:29:54,690
each one of those malicious and

831
00:29:52,529 --> 00:29:58,679
suspicious samples are not are not<font color="#E5E5E5"> this</font>

832
00:29:54,690 --> 00:30:00,320
<font color="#E5E5E5">as malicious</font><font color="#CCCCCC"> as the others right so you</font>

833
00:29:58,679 --> 00:30:02,429
have a suspicious<font color="#CCCCCC"> events you see invoke</font>

834
00:30:00,320 --> 00:30:04,559
expression<font color="#E5E5E5"> often seen</font><font color="#CCCCCC"> in malicious</font>

835
00:30:02,429 --> 00:30:06,299
samples but<font color="#E5E5E5"> also</font><font color="#CCCCCC"> seen in legitimate</font>

836
00:30:04,559 --> 00:30:08,070
samples at first I<font color="#E5E5E5"> thought okay</font><font color="#CCCCCC"> these</font>

837
00:30:06,299 --> 00:30:10,320
<font color="#E5E5E5">were always malicious that's not the</font>

838
00:30:08,070 --> 00:30:12,479
case<font color="#E5E5E5"> at all</font>

839
00:30:10,320 --> 00:30:14,609
so how do we<font color="#E5E5E5"> fix that</font><font color="#CCCCCC"> so we already</font>

840
00:30:12,479 --> 00:30:16,080
<font color="#E5E5E5">played really good close to train eval</font>

841
00:30:14,609 --> 00:30:18,570
to separate our training<font color="#CCCCCC"> and</font><font color="#E5E5E5"> validation</font>

842
00:30:16,080 --> 00:30:20,099
sets what we<font color="#E5E5E5"> did here was update our</font>

843
00:30:18,570 --> 00:30:23,399
feature engineering<font color="#CCCCCC"> to address this</font>

844
00:30:20,099 --> 00:30:26,460
<font color="#E5E5E5">issue</font><font color="#CCCCCC"> we ended up</font><font color="#E5E5E5"> drastically increasing</font>

845
00:30:23,399 --> 00:30:29,248
our feature set<font color="#E5E5E5"> but</font><font color="#CCCCCC"> I can't go too much</font>

846
00:30:26,460 --> 00:30:30,690
<font color="#E5E5E5">into this but</font><font color="#CCCCCC"> basically we stopped using</font>

847
00:30:29,249 --> 00:30:33,210
the suspicious of malicious count list

848
00:30:30,690 --> 00:30:35,729
it worked pretty<font color="#E5E5E5"> well but</font><font color="#CCCCCC"> and better</font>

849
00:30:33,210 --> 00:30:38,279
than our rule set but it did not<font color="#E5E5E5"> work as</font>

850
00:30:35,729 --> 00:30:40,619
well<font color="#CCCCCC"> as we needed</font><font color="#E5E5E5"> it to so I kind of</font>

851
00:30:38,279 --> 00:30:42,210
it's about<font color="#E5E5E5"> as far</font><font color="#CCCCCC"> as I can go there and</font>

852
00:30:40,619 --> 00:30:45,029
if you think about<font color="#E5E5E5"> it if I'm creating</font><font color="#CCCCCC"> a</font>

853
00:30:42,210 --> 00:30:46,830
<font color="#E5E5E5">list of suspicious and malicious modules</font>

854
00:30:45,029 --> 00:30:49,679
<font color="#E5E5E5">that's from my experience reviewing</font>

855
00:30:46,830 --> 00:30:52,099
<font color="#E5E5E5">these logs</font><font color="#CCCCCC"> and so even though I split</font>

856
00:30:49,679 --> 00:30:54,179
the training<font color="#E5E5E5"> and validation set</font><font color="#CCCCCC"> I</font>

857
00:30:52,099 --> 00:30:56,279
<font color="#E5E5E5">essentially looked at the validation set</font>

858
00:30:54,179 --> 00:30:58,529
and generated this list of suspicious

859
00:30:56,279 --> 00:31:00,389
<font color="#CCCCCC">events</font><font color="#E5E5E5"> from that set and now I'm</font>

860
00:30:58,529 --> 00:31:02,190
creating<font color="#CCCCCC"> a</font><font color="#E5E5E5"> true training the model on</font>

861
00:31:00,389 --> 00:31:04,049
that so really<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> kind of</font>

862
00:31:02,190 --> 00:31:06,330
overfitting to that data<font color="#E5E5E5"> and we kind of</font>

863
00:31:04,049 --> 00:31:07,980
<font color="#E5E5E5">learned that afterwards when we saw when</font>

864
00:31:06,330 --> 00:31:09,169
we introduced more data<font color="#CCCCCC"> you start seeing</font>

865
00:31:07,980 --> 00:31:12,530
things like<font color="#E5E5E5"> calm</font>

866
00:31:09,170 --> 00:31:13,880
and common modules used at one<font color="#E5E5E5"> client</font>

867
00:31:12,530 --> 00:31:15,350
<font color="#E5E5E5">that are not used at the other you know</font>

868
00:31:13,880 --> 00:31:16,580
<font color="#CCCCCC">like</font><font color="#E5E5E5"> oh this is actually use I can't</font>

869
00:31:15,350 --> 00:31:21,260
believe<font color="#E5E5E5"> that like encode</font><font color="#CCCCCC"> a command</font><font color="#E5E5E5"> and</font>

870
00:31:16,580 --> 00:31:22,669
<font color="#E5E5E5">VOC expression</font><font color="#CCCCCC"> so that should help if</font>

871
00:31:21,260 --> 00:31:24,590
you're working<font color="#CCCCCC"> on this there's also some</font>

872
00:31:22,670 --> 00:31:26,570
<font color="#E5E5E5">references at the end the bad data so I</font>

873
00:31:24,590 --> 00:31:29,240
found that certain algorithms prefer

874
00:31:26,570 --> 00:31:31,070
normalized event data's rather or event

875
00:31:29,240 --> 00:31:33,200
data rather than<font color="#CCCCCC"> the raw number so if</font>

876
00:31:31,070 --> 00:31:34,250
you<font color="#CCCCCC"> saw we had specific counts like 16</font>

877
00:31:33,200 --> 00:31:38,570
<font color="#CCCCCC">and then we would</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> the cosine</font>

878
00:31:34,250 --> 00:31:40,160
similarity be 0.05<font color="#CCCCCC"> those are those are</font>

879
00:31:38,570 --> 00:31:42,290
<font color="#E5E5E5">not normalized or standardized in any</font>

880
00:31:40,160 --> 00:31:45,770
way and a lot<font color="#CCCCCC"> of algorithms require that</font>

881
00:31:42,290 --> 00:31:47,990
so<font color="#E5E5E5"> basically after when I was looking</font><font color="#CCCCCC"> to</font>

882
00:31:45,770 --> 00:31:49,610
research this standardizing normalizing

883
00:31:47,990 --> 00:31:51,560
those events<font color="#E5E5E5"> are really good for any</font>

884
00:31:49,610 --> 00:31:53,840
algorithm to<font color="#CCCCCC"> work so now everything's a</font>

885
00:31:51,560 --> 00:31:55,250
number between<font color="#E5E5E5"> 0</font><font color="#CCCCCC"> &</font><font color="#E5E5E5"> 1</font><font color="#CCCCCC"> you take all those</font>

886
00:31:53,840 --> 00:31:58,669
suspicious counts and<font color="#E5E5E5"> you convert them</font>

887
00:31:55,250 --> 00:32:00,920
<font color="#E5E5E5">into you know less numbers between 0</font><font color="#CCCCCC"> &</font><font color="#E5E5E5"> 1</font>

888
00:31:58,670 --> 00:32:02,300
<font color="#E5E5E5">like I said and this is probably the</font>

889
00:32:00,920 --> 00:32:03,620
reason for the really poor performance

890
00:32:02,300 --> 00:32:06,080
<font color="#E5E5E5">and some of those algorithms</font><font color="#CCCCCC"> that was</font>

891
00:32:03,620 --> 00:32:07,820
showing<font color="#CCCCCC"> earlier</font><font color="#E5E5E5"> in the distribution</font><font color="#CCCCCC"> we</font>

892
00:32:06,080 --> 00:32:09,500
didn't go<font color="#E5E5E5"> back because random force</font>

893
00:32:07,820 --> 00:32:12,230
worked really well still even when<font color="#E5E5E5"> I</font>

894
00:32:09,500 --> 00:32:13,910
<font color="#CCCCCC">normalized data so</font><font color="#E5E5E5"> and we can really</font>

895
00:32:12,230 --> 00:32:15,770
increase we'd spend a lot of time and

896
00:32:13,910 --> 00:32:20,000
create increasing the<font color="#CCCCCC"> accuracy for</font><font color="#E5E5E5"> very</font>

897
00:32:15,770 --> 00:32:21,379
<font color="#E5E5E5">little gain</font><font color="#CCCCCC"> so here in psyche learning</font>

898
00:32:20,000 --> 00:32:23,030
you<font color="#CCCCCC"> have the the normalizer and standard</font>

899
00:32:21,380 --> 00:32:24,520
<font color="#CCCCCC">scaler you can look that</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> basically we</font>

900
00:32:23,030 --> 00:32:27,200
<font color="#CCCCCC">supply</font><font color="#E5E5E5"> that to the data set and</font><font color="#CCCCCC"> then</font>

901
00:32:24,520 --> 00:32:29,120
<font color="#CCCCCC">train and predict</font><font color="#E5E5E5"> based on that data</font>

902
00:32:27,200 --> 00:32:31,220
<font color="#CCCCCC">here's some links for that if you're</font>

903
00:32:29,120 --> 00:32:32,179
interested<font color="#CCCCCC"> and I really</font><font color="#E5E5E5"> just suggest</font>

904
00:32:31,220 --> 00:32:33,650
look at the<font color="#CCCCCC"> site killer and especially</font>

905
00:32:32,180 --> 00:32:36,410
<font color="#E5E5E5">if you're new it walks you through</font>

906
00:32:33,650 --> 00:32:38,030
everything<font color="#E5E5E5"> and really make sure the data</font>

907
00:32:36,410 --> 00:32:40,190
fits your algorithms<font color="#E5E5E5"> like you know I'm</font>

908
00:32:38,030 --> 00:32:41,930
kind<font color="#E5E5E5"> of blindly saying normalizing data</font>

909
00:32:40,190 --> 00:32:44,510
is best there may be some edge<font color="#CCCCCC"> cases</font>

910
00:32:41,930 --> 00:32:46,730
where that's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> true I'm not sure but</font>

911
00:32:44,510 --> 00:32:48,230
<font color="#E5E5E5">it's worked well</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> us</font><font color="#CCCCCC"> probably the</font>

912
00:32:46,730 --> 00:32:50,270
biggest<font color="#E5E5E5"> one in any machine learning data</font>

913
00:32:48,230 --> 00:32:52,580
science<font color="#E5E5E5"> problem not enough data lack of</font>

914
00:32:50,270 --> 00:32:55,430
diverse data<font color="#CCCCCC"> I'm in a decent position</font>

915
00:32:52,580 --> 00:32:58,220
<font color="#E5E5E5">not</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> good as Microsoft is but we have</font>

916
00:32:55,430 --> 00:32:59,750
quite a bit<font color="#E5E5E5"> of data</font><font color="#CCCCCC"> so we're able to</font><font color="#E5E5E5"> you</font>

917
00:32:58,220 --> 00:33:01,670
know each model makes the predictions

918
00:32:59,750 --> 00:33:03,080
based on what we've previously seen<font color="#CCCCCC"> so</font>

919
00:33:01,670 --> 00:33:04,400
of<font color="#E5E5E5"> course you</font><font color="#CCCCCC"> want to see as much</font><font color="#E5E5E5"> as</font>

920
00:33:03,080 --> 00:33:06,649
<font color="#CCCCCC">possible</font>

921
00:33:04,400 --> 00:33:08,180
not enough<font color="#E5E5E5"> data and and really need</font>

922
00:33:06,650 --> 00:33:09,890
diverse data<font color="#CCCCCC"> so like I had a good</font>

923
00:33:08,180 --> 00:33:11,270
<font color="#CCCCCC">quantity from one client when we</font>

924
00:33:09,890 --> 00:33:12,830
<font color="#E5E5E5">introduced other clients they do things</font>

925
00:33:11,270 --> 00:33:14,750
<font color="#CCCCCC">differently they what's normal to them</font>

926
00:33:12,830 --> 00:33:16,250
<font color="#E5E5E5">is not normal to others so we're able to</font>

927
00:33:14,750 --> 00:33:18,230
<font color="#CCCCCC">kind of differentiate</font><font color="#E5E5E5"> that learn those</font>

928
00:33:16,250 --> 00:33:21,110
features and apply that to<font color="#E5E5E5"> everybody</font>

929
00:33:18,230 --> 00:33:23,030
<font color="#E5E5E5">and really the way to do this get more</font>

930
00:33:21,110 --> 00:33:24,740
data<font color="#E5E5E5"> beg borrow steal</font>

931
00:33:23,030 --> 00:33:27,050
don't steal<font color="#CCCCCC"> it generate additional</font><font color="#E5E5E5"> data</font>

932
00:33:24,740 --> 00:33:28,580
<font color="#CCCCCC">walk with</font><font color="#E5E5E5"> a PowerShell there's lots of</font>

933
00:33:27,050 --> 00:33:30,620
ways to<font color="#E5E5E5"> do this there's like I said</font>

934
00:33:28,580 --> 00:33:32,629
there's those<font color="#CCCCCC"> PowerShell frameworks to</font>

935
00:33:30,620 --> 00:33:35,270
<font color="#E5E5E5">do bad stuff that you don't need to know</font>

936
00:33:32,630 --> 00:33:39,200
PowerShell that well<font color="#E5E5E5"> I'm pretty familiar</font>

937
00:33:35,270 --> 00:33:41,920
with adversary techniques and in tactics

938
00:33:39,200 --> 00:33:43,970
so I'm able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> kind of run this in in a</font>

939
00:33:41,920 --> 00:33:46,430
virtual<font color="#E5E5E5"> environment generate the data</font>

940
00:33:43,970 --> 00:33:49,010
that we<font color="#CCCCCC"> want without much of an issue</font>

941
00:33:46,430 --> 00:33:51,230
<font color="#E5E5E5">but</font><font color="#CCCCCC"> uh it's it's not that difficult also</font>

942
00:33:49,010 --> 00:33:52,970
<font color="#CCCCCC">if you get phishing samples you can</font><font color="#E5E5E5"> take</font>

943
00:33:51,230 --> 00:33:54,410
a<font color="#E5E5E5"> look at that so also</font><font color="#CCCCCC"> even just looking</font>

944
00:33:52,970 --> 00:33:57,880
<font color="#E5E5E5">at Twitter we literally saw samples on</font>

945
00:33:54,410 --> 00:34:01,250
Twitter<font color="#E5E5E5"> so</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> were pretty interesting</font>

946
00:33:57,880 --> 00:34:03,620
<font color="#E5E5E5">oh one other thing would be label label</font>

947
00:34:01,250 --> 00:34:05,300
label make the labeling as easy as

948
00:34:03,620 --> 00:34:07,610
<font color="#CCCCCC">possible when we had a</font><font color="#E5E5E5"> system</font><font color="#CCCCCC"> where it</font>

949
00:34:05,300 --> 00:34:09,168
<font color="#E5E5E5">was</font><font color="#CCCCCC"> difficult you know I'm literally</font>

950
00:34:07,610 --> 00:34:10,850
<font color="#E5E5E5">copying these features from one file</font>

951
00:34:09,168 --> 00:34:11,750
into another and<font color="#E5E5E5"> combining them that</font>

952
00:34:10,850 --> 00:34:13,100
sucks

953
00:34:11,750 --> 00:34:15,260
if you have a system<font color="#E5E5E5"> where you</font><font color="#CCCCCC"> can</font>

954
00:34:13,100 --> 00:34:18,739
review<font color="#CCCCCC"> the</font><font color="#E5E5E5"> event</font><font color="#CCCCCC"> I see the</font><font color="#E5E5E5"> prediction</font>

955
00:34:15,260 --> 00:34:20,149
and classify the event<font color="#CCCCCC"> that's that's</font>

956
00:34:18,739 --> 00:34:23,239
<font color="#E5E5E5">great and then use that for subsequent</font>

957
00:34:20,149 --> 00:34:26,120
<font color="#CCCCCC">training of training</font><font color="#E5E5E5"> from the beginning</font>

958
00:34:23,239 --> 00:34:28,489
<font color="#E5E5E5">measure</font><font color="#CCCCCC"> your performance</font><font color="#E5E5E5"> so I'm a</font>

959
00:34:26,120 --> 00:34:30,440
<font color="#E5E5E5">security guy I'm not a data science guy</font>

960
00:34:28,489 --> 00:34:32,388
I didn't measure hardly anything at

961
00:34:30,440 --> 00:34:34,040
first<font color="#CCCCCC"> probably nothing I just saw all</font>

962
00:34:32,389 --> 00:34:35,570
<font color="#CCCCCC">this classified most everything</font><font color="#E5E5E5"> pretty</font>

963
00:34:34,040 --> 00:34:37,610
well<font color="#CCCCCC"> then I start getting questions</font>

964
00:34:35,570 --> 00:34:39,050
asked like well what's the false

965
00:34:37,610 --> 00:34:40,520
negative rate what's the false positive

966
00:34:39,050 --> 00:34:41,570
rate show me a<font color="#E5E5E5"> confusion</font><font color="#CCCCCC"> matrix show me</font>

967
00:34:40,520 --> 00:34:42,830
a rack curve show me all these things

968
00:34:41,570 --> 00:34:44,360
<font color="#CCCCCC">and</font><font color="#E5E5E5"> I started learning that as I went</font>

969
00:34:42,830 --> 00:34:46,159
through<font color="#E5E5E5"> from the</font><font color="#CCCCCC"> beginning make sure you</font>

970
00:34:44,360 --> 00:34:47,929
can measure that<font color="#CCCCCC"> and we're still</font><font color="#E5E5E5"> working</font>

971
00:34:46,159 --> 00:34:49,310
on<font color="#E5E5E5"> that a little</font><font color="#CCCCCC"> bit I'm just have good</font>

972
00:34:47,929 --> 00:34:52,399
measurements<font color="#CCCCCC"> to say okay this</font><font color="#E5E5E5"> is</font>

973
00:34:49,310 --> 00:34:54,799
operating well because you know<font color="#CCCCCC"> one of</font>

974
00:34:52,399 --> 00:34:56,810
<font color="#E5E5E5">the questions</font><font color="#CCCCCC"> I get allows concepts</font>

975
00:34:54,800 --> 00:34:57,830
what are we classifying now as much<font color="#E5E5E5"> as</font>

976
00:34:56,810 --> 00:34:59,509
that<font color="#E5E5E5"> we may not have generated</font>

977
00:34:57,830 --> 00:35:01,340
classified back then

978
00:34:59,510 --> 00:35:04,300
that's hard to understand<font color="#E5E5E5"> and we take a</font>

979
00:35:01,340 --> 00:35:07,430
look<font color="#CCCCCC"> at that through</font><font color="#E5E5E5"> kind of QA type</font>

980
00:35:04,300 --> 00:35:10,040
activities<font color="#CCCCCC"> when we see things</font><font color="#E5E5E5"> that are</font>

981
00:35:07,430 --> 00:35:11,629
being classified from<font color="#E5E5E5"> a from a sandbox</font>

982
00:35:10,040 --> 00:35:12,950
<font color="#E5E5E5">we take a look</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> that if it's not if</font>

983
00:35:11,630 --> 00:35:14,240
<font color="#E5E5E5">it's classified benign and we need to</font>

984
00:35:12,950 --> 00:35:17,450
understand why it was<font color="#E5E5E5"> classified as</font>

985
00:35:14,240 --> 00:35:20,870
benign<font color="#E5E5E5"> so it's easy to avoid collecting</font>

986
00:35:17,450 --> 00:35:22,310
metrics<font color="#CCCCCC"> want this</font><font color="#E5E5E5"> probably if you don't</font>

987
00:35:20,870 --> 00:35:24,500
if you take one thing<font color="#E5E5E5"> away your ability</font>

988
00:35:22,310 --> 00:35:26,690
to<font color="#CCCCCC"> describe</font><font color="#E5E5E5"> the value</font><font color="#CCCCCC"> of the model is as</font>

989
00:35:24,500 --> 00:35:28,640
creative<font color="#E5E5E5"> as as critical as the</font><font color="#CCCCCC"> value of</font>

990
00:35:26,690 --> 00:35:30,650
<font color="#E5E5E5">classifying the events because if you</font>

991
00:35:28,640 --> 00:35:32,180
cannot describe<font color="#CCCCCC"> the</font><font color="#E5E5E5"> value of this to</font>

992
00:35:30,650 --> 00:35:34,400
people that<font color="#E5E5E5"> are going to give you time</font>

993
00:35:32,180 --> 00:35:36,649
<font color="#E5E5E5">and resources then it's never going to</font>

994
00:35:34,400 --> 00:35:37,789
be implemented this<font color="#E5E5E5"> has to be done and</font>

995
00:35:36,650 --> 00:35:40,520
has to<font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> show that this will</font>

996
00:35:37,789 --> 00:35:41,529
<font color="#E5E5E5">provide value</font><font color="#CCCCCC"> and I'll show</font><font color="#E5E5E5"> you how how</font>

997
00:35:40,520 --> 00:35:44,329
I did that

998
00:35:41,529 --> 00:35:45,980
so for<font color="#CCCCCC"> our use case up</font><font color="#E5E5E5"> precision recall</font>

999
00:35:44,329 --> 00:35:47,779
far more important than accuracy we had

1000
00:35:45,980 --> 00:35:49,670
a highly<font color="#CCCCCC"> unbalanced set</font><font color="#E5E5E5"> one thing I</font>

1001
00:35:47,779 --> 00:35:51,559
<font color="#E5E5E5">learned from this count conference was</font>

1002
00:35:49,670 --> 00:35:55,069
<font color="#CCCCCC">that you know</font><font color="#E5E5E5"> used if I'd known about</font>

1003
00:35:51,559 --> 00:35:56,359
<font color="#E5E5E5">smoke back then for for compensating for</font>

1004
00:35:55,069 --> 00:35:57,859
the imbalance data set that<font color="#E5E5E5"> probably</font>

1005
00:35:56,359 --> 00:35:59,150
<font color="#E5E5E5">that</font><font color="#CCCCCC"> may have helped a little</font><font color="#E5E5E5"> bit we</font>

1006
00:35:57,859 --> 00:36:00,410
didn't<font color="#E5E5E5"> really have that much issues</font>

1007
00:35:59,150 --> 00:36:02,420
though in<font color="#E5E5E5"> terms of our precision and</font>

1008
00:36:00,410 --> 00:36:04,578
recall being affected by<font color="#CCCCCC"> this though</font><font color="#E5E5E5"> so</font>

1009
00:36:02,420 --> 00:36:07,279
I'm not sure<font color="#CCCCCC"> how much</font><font color="#E5E5E5"> of an imbalance</font>

1010
00:36:04,579 --> 00:36:09,440
<font color="#CCCCCC">data set causes problems in</font><font color="#E5E5E5"> this case</font>

1011
00:36:07,279 --> 00:36:12,380
<font color="#E5E5E5">measure everything</font><font color="#CCCCCC"> from the start make</font>

1012
00:36:09,440 --> 00:36:14,930
sure<font color="#CCCCCC"> the value</font><font color="#E5E5E5"> is easy to convey on this</font>

1013
00:36:12,380 --> 00:36:17,059
last one<font color="#CCCCCC"> code names tend</font><font color="#E5E5E5"> to stick around</font>

1014
00:36:14,930 --> 00:36:18,410
<font color="#CCCCCC">so from the beginning we did not know if</font>

1015
00:36:17,059 --> 00:36:20,630
this was ever gonna work it was kind of

1016
00:36:18,410 --> 00:36:22,700
a pie in the sky activity<font color="#E5E5E5"> my partner</font>

1017
00:36:20,630 --> 00:36:25,010
said hey let's<font color="#E5E5E5"> call it a project blue</font>

1018
00:36:22,700 --> 00:36:27,379
steel it sounds cool<font color="#E5E5E5"> it's one from one</font>

1019
00:36:25,010 --> 00:36:30,049
<font color="#E5E5E5">of the best movies known you know</font>

1020
00:36:27,380 --> 00:36:31,520
probably<font color="#E5E5E5"> next to Casablanca so if you</font>

1021
00:36:30,049 --> 00:36:35,359
<font color="#E5E5E5">haven't seen it go</font><font color="#CCCCCC"> check it out you'll</font>

1022
00:36:31,520 --> 00:36:37,279
<font color="#E5E5E5">be overwhelmed</font><font color="#CCCCCC"> I'm sure</font><font color="#E5E5E5"> so obscure</font>

1023
00:36:35,359 --> 00:36:40,250
references are obscure<font color="#E5E5E5"> not everyone has</font>

1024
00:36:37,279 --> 00:36:42,920
seen Zoolander<font color="#E5E5E5"> so that's I learned this</font>

1025
00:36:40,250 --> 00:36:44,450
one the hard way<font color="#CCCCCC"> because blue steel just</font>

1026
00:36:42,920 --> 00:36:46,579
kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> sounds cool if you've never seen</font>

1027
00:36:44,450 --> 00:36:49,848
<font color="#E5E5E5">about it right it's like steel it's blue</font>

1028
00:36:46,579 --> 00:36:51,230
you know but now<font color="#CCCCCC"> it</font><font color="#E5E5E5"> stuck around though</font>

1029
00:36:49,849 --> 00:36:52,940
<font color="#CCCCCC">and you know you may see it if you take</font>

1030
00:36:51,230 --> 00:36:55,309
a look<font color="#E5E5E5"> out</font><font color="#CCCCCC"> there but so here's how</font>

1031
00:36:52,940 --> 00:36:57,589
really how I communicated the results we

1032
00:36:55,309 --> 00:37:00,200
took a look<font color="#E5E5E5"> at our detection efficacy</font><font color="#CCCCCC"> I</font>

1033
00:36:57,589 --> 00:37:01,700
had we had an increase in<font color="#CCCCCC"> 28% true</font>

1034
00:37:00,200 --> 00:37:04,038
positive rate so we're catching more

1035
00:37:01,700 --> 00:37:07,279
stuff with<font color="#E5E5E5"> this our false positive</font>

1036
00:37:04,039 --> 00:37:09,079
reduction was decreased by<font color="#E5E5E5"> 99%</font><font color="#CCCCCC"> and</font>

1037
00:37:07,279 --> 00:37:10,579
that's because we're able to we're not

1038
00:37:09,079 --> 00:37:11,900
investigating<font color="#E5E5E5"> every single instance of</font><font color="#CCCCCC"> a</font>

1039
00:37:10,579 --> 00:37:15,650
<font color="#E5E5E5">coat of command and every single</font>

1040
00:37:11,900 --> 00:37:17,240
instance of invoke invoke expression<font color="#CCCCCC"> and</font>

1041
00:37:15,650 --> 00:37:18,680
we see that a<font color="#E5E5E5"> lot especially where</font>

1042
00:37:17,240 --> 00:37:19,399
people are orchestrating updates and

1043
00:37:18,680 --> 00:37:21,859
things<font color="#E5E5E5"> like that</font>

1044
00:37:19,400 --> 00:37:23,930
<font color="#E5E5E5">that alone showed said hey this reduces</font>

1045
00:37:21,859 --> 00:37:26,779
<font color="#E5E5E5">time saves money reduces analyst load</font>

1046
00:37:23,930 --> 00:37:29,960
which time is money right and in the

1047
00:37:26,779 --> 00:37:33,079
case<font color="#E5E5E5"> of a sock and so</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> okay</font>

1048
00:37:29,960 --> 00:37:35,059
let's let's<font color="#E5E5E5"> move on</font><font color="#CCCCCC"> this so</font><font color="#E5E5E5"> that was</font>

1049
00:37:33,079 --> 00:37:36,289
kind of the<font color="#CCCCCC"> end of</font><font color="#E5E5E5"> the POC at that point</font>

1050
00:37:35,059 --> 00:37:38,089
we moved on it we went<font color="#E5E5E5"> to production</font>

1051
00:37:36,289 --> 00:37:41,029
<font color="#E5E5E5">eyes there we input we implemented</font>

1052
00:37:38,089 --> 00:37:43,160
collecting metrics<font color="#CCCCCC"> at first like</font><font color="#E5E5E5"> on my</font>

1053
00:37:41,029 --> 00:37:44,869
POC<font color="#CCCCCC"> is</font><font color="#E5E5E5"> a batch processing</font><font color="#CCCCCC"> Ram I'm just</font>

1054
00:37:43,160 --> 00:37:46,220
classifying<font color="#CCCCCC"> a whole batch of events</font>

1055
00:37:44,869 --> 00:37:47,900
we're not doing this in<font color="#E5E5E5"> real</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> now</font>

1056
00:37:46,220 --> 00:37:50,410
we've got a real-time pipeline<font color="#CCCCCC"> where</font>

1057
00:37:47,900 --> 00:37:53,020
<font color="#CCCCCC">we're taking a look</font><font color="#E5E5E5"> at a large scale</font>

1058
00:37:50,410 --> 00:37:56,170
<font color="#E5E5E5">pretty much all</font><font color="#CCCCCC"> of our clients</font><font color="#E5E5E5"> data and</font>

1059
00:37:53,020 --> 00:37:59,160
pushing it<font color="#E5E5E5"> through this so</font><font color="#CCCCCC"> we've got so</font>

1060
00:37:56,170 --> 00:38:00,579
<font color="#E5E5E5">much value from what ends up to be far</font>

1061
00:37:59,160 --> 00:38:01,660
<font color="#CCCCCC">to me</font>

1062
00:38:00,579 --> 00:38:03,760
I think being<font color="#E5E5E5"> far less work than</font>

1063
00:38:01,660 --> 00:38:05,078
<font color="#E5E5E5">creating rules</font><font color="#CCCCCC"> constantly updating those</font>

1064
00:38:03,760 --> 00:38:06,339
rules constantly<font color="#CCCCCC"> whitelisting those</font>

1065
00:38:05,079 --> 00:38:09,780
rules constantly creating<font color="#E5E5E5"> new ones</font>

1066
00:38:06,339 --> 00:38:12,160
<font color="#E5E5E5">trying to bypass rules</font><font color="#CCCCCC"> things like that</font>

1067
00:38:09,780 --> 00:38:15,069
<font color="#CCCCCC">so we were quickly able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> iterate and</font>

1068
00:38:12,160 --> 00:38:16,660
<font color="#E5E5E5">generate or both robust model</font><font color="#CCCCCC"> it was</font>

1069
00:38:15,069 --> 00:38:19,450
<font color="#E5E5E5">easily updated so we update with new</font>

1070
00:38:16,660 --> 00:38:20,920
samples constantly we had a training<font color="#CCCCCC"> you</font>

1071
00:38:19,450 --> 00:38:23,288
know a way to<font color="#E5E5E5"> train</font><font color="#CCCCCC"> the data efficiently</font>

1072
00:38:20,920 --> 00:38:25,589
<font color="#CCCCCC">and we constantly monitor for</font><font color="#E5E5E5"> false</font>

1073
00:38:23,289 --> 00:38:27,910
positives<font color="#CCCCCC"> and</font><font color="#E5E5E5"> false negatives right so</font>

1074
00:38:25,589 --> 00:38:31,150
we we obviously take<font color="#E5E5E5"> a look at any false</font>

1075
00:38:27,910 --> 00:38:32,799
positives<font color="#E5E5E5"> that come or any all the</font>

1076
00:38:31,150 --> 00:38:35,230
motion samples anything classify as much

1077
00:38:32,799 --> 00:38:37,030
<font color="#E5E5E5">as being looked at anything that's</font><font color="#CCCCCC"> being</font>

1078
00:38:35,230 --> 00:38:39,309
generated<font color="#E5E5E5"> from a sandbox that's</font>

1079
00:38:37,030 --> 00:38:41,260
classified benign<font color="#CCCCCC"> is</font><font color="#E5E5E5"> being looked at so</font>

1080
00:38:39,309 --> 00:38:42,789
<font color="#E5E5E5">I mean it's impossible say I'm looking</font>

1081
00:38:41,260 --> 00:38:44,319
at all false negatives<font color="#E5E5E5"> obviously it's</font>

1082
00:38:42,789 --> 00:38:46,299
one of the hardest<font color="#E5E5E5"> things you can do but</font>

1083
00:38:44,319 --> 00:38:48,099
<font color="#E5E5E5">we're</font><font color="#CCCCCC"> doing a pretty good</font><font color="#E5E5E5"> job there</font><font color="#CCCCCC"> and</font>

1084
00:38:46,299 --> 00:38:50,799
with this we're raising the bar

1085
00:38:48,099 --> 00:38:52,990
<font color="#E5E5E5">significantly for for our detection so</font>

1086
00:38:50,799 --> 00:38:55,210
it's it's far more<font color="#E5E5E5"> difficult</font><font color="#CCCCCC"> to evade</font>

1087
00:38:52,990 --> 00:38:58,479
this then change the capitalization on

1088
00:38:55,210 --> 00:39:01,930
your on your<font color="#E5E5E5"> script</font><font color="#CCCCCC"> to bypass some</font><font color="#E5E5E5"> case</font>

1089
00:38:58,480 --> 00:39:03,849
sensitive rule<font color="#E5E5E5"> that's in place and</font>

1090
00:39:01,930 --> 00:39:07,240
improved<font color="#E5E5E5"> analyst efficiency so that's</font>

1091
00:39:03,849 --> 00:39:09,430
really<font color="#E5E5E5"> what this was all about and</font><font color="#CCCCCC"> so</font>

1092
00:39:07,240 --> 00:39:11,618
that's<font color="#CCCCCC"> about</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> there's a</font><font color="#E5E5E5"> merging work</font>

1093
00:39:09,430 --> 00:39:13,118
in<font color="#E5E5E5"> this area so detecting malicious</font>

1094
00:39:11,619 --> 00:39:15,760
PowerShell commands using<font color="#E5E5E5"> deep neural</font>

1095
00:39:13,119 --> 00:39:17,920
<font color="#E5E5E5">networks was a was a reference paper</font>

1096
00:39:15,760 --> 00:39:20,289
<font color="#E5E5E5">recently released or academic paper</font>

1097
00:39:17,920 --> 00:39:23,289
<font color="#E5E5E5">recently released</font><font color="#CCCCCC"> I'm not sure if that</font>

1098
00:39:20,289 --> 00:39:24,450
<font color="#CCCCCC">was</font><font color="#E5E5E5"> the one that Ram had referenced but</font>

1099
00:39:23,289 --> 00:39:26,890
it looked<font color="#CCCCCC"> like</font><font color="#E5E5E5"> it could</font><font color="#CCCCCC"> have been</font>

1100
00:39:24,450 --> 00:39:29,740
revoked confiscation is one that<font color="#E5E5E5"> were</font>

1101
00:39:26,890 --> 00:39:31,690
they were<font color="#CCCCCC"> they're using kind</font><font color="#E5E5E5"> of machine</font>

1102
00:39:29,740 --> 00:39:34,149
learning<font color="#E5E5E5"> techniques to detect a few</font>

1103
00:39:31,690 --> 00:39:35,980
skated code and then also<font color="#E5E5E5"> firewall</font><font color="#CCCCCC"> far I</font>

1104
00:39:34,150 --> 00:39:38,559
<font color="#E5E5E5">recently released a blog post</font><font color="#CCCCCC"> those</font>

1105
00:39:35,980 --> 00:39:39,880
<font color="#E5E5E5">similar detection mechanisms so if</font>

1106
00:39:38,559 --> 00:39:42,970
you're interested<font color="#CCCCCC"> in this</font><font color="#E5E5E5"> subject take a</font>

1107
00:39:39,880 --> 00:39:44,170
look at those<font color="#E5E5E5"> they all do differ one of</font>

1108
00:39:42,970 --> 00:39:45,669
us do things<font color="#E5E5E5"> a little bit differently</font>

1109
00:39:44,170 --> 00:39:48,309
every<font color="#E5E5E5"> one of us has had pretty good</font>

1110
00:39:45,670 --> 00:39:50,319
<font color="#CCCCCC">results and we've operationalize</font><font color="#E5E5E5"> this</font>

1111
00:39:48,309 --> 00:39:51,520
for<font color="#E5E5E5"> really two years and it's been we've</font>

1112
00:39:50,319 --> 00:39:54,279
cut we've caught a nation-state

1113
00:39:51,520 --> 00:39:56,230
attackers<font color="#CCCCCC"> pentesters really highly</font>

1114
00:39:54,279 --> 00:39:59,440
advanced<font color="#CCCCCC"> threats across</font><font color="#E5E5E5"> many locations</font>

1115
00:39:56,230 --> 00:40:02,829
<font color="#E5E5E5">so probably the</font><font color="#CCCCCC"> best work I've</font>

1116
00:39:59,440 --> 00:40:04,310
personally implemented so gives<font color="#E5E5E5"> more</font>

1117
00:40:02,829 --> 00:40:06,200
resources<font color="#E5E5E5"> right so</font>

1118
00:40:04,310 --> 00:40:07,580
<font color="#CCCCCC">I have the data set and Jupiter notebook</font>

1119
00:40:06,200 --> 00:40:09,680
<font color="#CCCCCC">online if you</font><font color="#E5E5E5"> want to go through and</font>

1120
00:40:07,580 --> 00:40:11,299
kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> just be kind you know like I</font>

1121
00:40:09,680 --> 00:40:12,470
<font color="#CCCCCC">said I'm not a programmer or</font><font color="#E5E5E5"> a data</font>

1122
00:40:11,300 --> 00:40:13,670
scientist but that's kind of a walk

1123
00:40:12,470 --> 00:40:15,950
through<font color="#CCCCCC"> that you could take a look</font><font color="#E5E5E5"> at</font>

1124
00:40:13,670 --> 00:40:17,630
<font color="#E5E5E5">and do</font><font color="#CCCCCC"> yourself</font><font color="#E5E5E5"> the data set does</font><font color="#CCCCCC"> not</font>

1125
00:40:15,950 --> 00:40:20,540
include PowerShell code because I can't

1126
00:40:17,630 --> 00:40:21,740
show that<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> usually specific to the</font>

1127
00:40:20,540 --> 00:40:23,300
organization you might<font color="#E5E5E5"> even have</font>

1128
00:40:21,740 --> 00:40:27,589
passwords or user names<font color="#CCCCCC"> in that in some</font>

1129
00:40:23,300 --> 00:40:30,790
<font color="#CCCCCC">cases</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> do our</font><font color="#E5E5E5"> best to remove</font><font color="#CCCCCC"> that info</font>

1130
00:40:27,590 --> 00:40:34,340
confiscation<font color="#E5E5E5"> revoke obfuscation from</font>

1131
00:40:30,790 --> 00:40:36,650
Daniel Bohannon<font color="#CCCCCC"> I hope</font><font color="#E5E5E5"> I'm pologize</font><font color="#CCCCCC"> if I</font>

1132
00:40:34,340 --> 00:40:38,300
got that incorrect really<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> how to</font>

1133
00:40:36,650 --> 00:40:42,230
generate<font color="#CCCCCC"> adversarial samples and how to</font>

1134
00:40:38,300 --> 00:40:44,990
detect office<font color="#E5E5E5"> created samples</font><font color="#CCCCCC"> if you</font>

1135
00:40:42,230 --> 00:40:46,790
<font color="#CCCCCC">want to Palo Alto has</font><font color="#E5E5E5"> a ton of</font><font color="#CCCCCC"> encoded</font>

1136
00:40:44,990 --> 00:40:48,109
<font color="#E5E5E5">commands thousands</font><font color="#CCCCCC"> and thousands</font><font color="#E5E5E5"> and</font>

1137
00:40:46,790 --> 00:40:52,730
<font color="#E5E5E5">thousands so if you want to take a look</font>

1138
00:40:48,110 --> 00:40:53,900
some samples<font color="#E5E5E5"> see the the plea</font><font color="#CCCCCC"> home says</font>

1139
00:40:52,730 --> 00:40:56,120
<font color="#CCCCCC">the blog post</font><font color="#E5E5E5"> like cosine similarity</font>

1140
00:40:53,900 --> 00:40:57,590
<font color="#E5E5E5">that's kind of what got</font><font color="#CCCCCC"> me down this row</font>

1141
00:40:56,120 --> 00:41:01,220
when you see<font color="#E5E5E5"> this that was hard to do</font>

1142
00:40:57,590 --> 00:41:04,310
using<font color="#CCCCCC"> that</font><font color="#E5E5E5"> cosine similarity</font><font color="#CCCCCC"> text ops K</font>

1143
00:41:01,220 --> 00:41:05,689
<font color="#E5E5E5">code very well and then machine learning</font>

1144
00:41:04,310 --> 00:41:07,549
mastery process for working<font color="#CCCCCC"> through</font>

1145
00:41:05,690 --> 00:41:09,740
machine learning problems<font color="#E5E5E5"> a very wise</font>

1146
00:41:07,550 --> 00:41:11,570
man showed me<font color="#E5E5E5"> the this process here so</font>

1147
00:41:09,740 --> 00:41:13,609
<font color="#E5E5E5">how you could go through from training</font>

1148
00:41:11,570 --> 00:41:15,020
testing<font color="#E5E5E5"> showing metrics things like that</font>

1149
00:41:13,610 --> 00:41:19,000
and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> good way to do it</font><font color="#CCCCCC"> so</font>

1150
00:41:15,020 --> 00:41:19,000
<font color="#CCCCCC">that's about it do we have any questions</font>

1151
00:41:23,860 --> 00:41:27,500
the things you were classifying were

1152
00:41:25,760 --> 00:41:29,780
they an overall<font color="#CCCCCC"> PowerShell script was it</font>

1153
00:41:27,500 --> 00:41:32,300
a line of code was it an individual

1154
00:41:29,780 --> 00:41:35,870
execution within a line so they were

1155
00:41:32,300 --> 00:41:37,670
<font color="#E5E5E5">either two things</font><font color="#CCCCCC"> they would be from the</font>

1156
00:41:35,870 --> 00:41:40,370
command line<font color="#E5E5E5"> just the just the power</font>

1157
00:41:37,670 --> 00:41:41,930
this the command line process so be<font color="#CCCCCC"> the</font>

1158
00:41:40,370 --> 00:41:44,420
binary and<font color="#CCCCCC"> then the all the arguments</font>

1159
00:41:41,930 --> 00:41:46,100
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you provided also so that's just</font>

1160
00:41:44,420 --> 00:41:47,300
one<font color="#CCCCCC"> of them so it's an event</font><font color="#E5E5E5"> and we're</font>

1161
00:41:46,100 --> 00:41:48,710
pulling<font color="#E5E5E5"> one feel from</font><font color="#CCCCCC"> that if at the</font>

1162
00:41:47,300 --> 00:41:50,420
<font color="#CCCCCC">very bottom one second won't be the</font>

1163
00:41:48,710 --> 00:41:53,270
script block log so if you were to

1164
00:41:50,420 --> 00:41:57,260
execute like let's say<font color="#E5E5E5"> PowerShell that</font>

1165
00:41:53,270 --> 00:41:58,520
<font color="#CCCCCC">exe</font><font color="#E5E5E5"> do bad stuff ps1</font><font color="#CCCCCC"> that you</font><font color="#E5E5E5"> wouldn't</font>

1166
00:41:57,260 --> 00:42:00,110
be able<font color="#CCCCCC"> tallip that's malicious through</font>

1167
00:41:58,520 --> 00:42:02,060
classification<font color="#E5E5E5"> but</font><font color="#CCCCCC"> the code</font><font color="#E5E5E5"> that's</font>

1168
00:42:00,110 --> 00:42:03,380
executed from<font color="#E5E5E5"> that is stored in the logs</font>

1169
00:42:02,060 --> 00:42:04,730
<font color="#E5E5E5">and they divide those</font><font color="#CCCCCC"> up there's like</font><font color="#E5E5E5"> a</font>

1170
00:42:03,380 --> 00:42:07,250
limit<font color="#E5E5E5"> like a thousand character limit</font>

1171
00:42:04,730 --> 00:42:10,270
and they'll divide those up we<font color="#E5E5E5"> take a</font>

1172
00:42:07,250 --> 00:42:10,270
look<font color="#E5E5E5"> at those as well so</font>

1173
00:42:13,810 --> 00:42:23,900
yeah thank you<font color="#CCCCCC"> I'm not gonna</font><font color="#E5E5E5"> say that</font>

1174
00:42:17,960 --> 00:42:24,620
<font color="#E5E5E5">first two lines that I said but I get I</font>

1175
00:42:23,900 --> 00:42:26,630
get<font color="#E5E5E5"> that</font>

1176
00:42:24,620 --> 00:42:28,609
admins need to execute power shell to do

1177
00:42:26,630 --> 00:42:32,060
their job but what if they're doing<font color="#E5E5E5"> at a</font>

1178
00:42:28,610 --> 00:42:34,310
in a window<font color="#E5E5E5"> and if you notice power</font>

1179
00:42:32,060 --> 00:42:37,870
shell being executed<font color="#CCCCCC"> outside that window</font>

1180
00:42:34,310 --> 00:42:40,400
then you<font color="#E5E5E5"> just you just raise an alert</font>

1181
00:42:37,870 --> 00:42:42,259
<font color="#E5E5E5">that would absolutely be the best right</font>

1182
00:42:40,400 --> 00:42:45,650
like if you you<font color="#E5E5E5"> would have</font><font color="#CCCCCC"> that's kind</font>

1183
00:42:42,260 --> 00:42:46,940
of<font color="#E5E5E5"> like</font><font color="#CCCCCC"> a white listing approach</font><font color="#E5E5E5"> and if</font>

1184
00:42:45,650 --> 00:42:48,710
you're in a mature organization that

1185
00:42:46,940 --> 00:42:49,970
would<font color="#CCCCCC"> work very</font><font color="#E5E5E5"> well but I find many</font>

1186
00:42:48,710 --> 00:42:52,370
organizations<font color="#CCCCCC"> have a hard time even</font>

1187
00:42:49,970 --> 00:42:53,480
logging PowerShell so to<font color="#E5E5E5"> implement a</font>

1188
00:42:52,370 --> 00:42:55,549
policy<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that would be extremely</font>

1189
00:42:53,480 --> 00:42:58,640
<font color="#E5E5E5">difficult and unreasonable in many</font>

1190
00:42:55,550 --> 00:43:00,110
places so<font color="#CCCCCC"> yeah absolutely</font><font color="#E5E5E5"> I would say</font>

1191
00:42:58,640 --> 00:43:01,879
that or you could<font color="#E5E5E5"> even create white list</font>

1192
00:43:00,110 --> 00:43:04,280
of people who can<font color="#E5E5E5"> execute like normal</font>

1193
00:43:01,880 --> 00:43:05,840
users may not<font color="#E5E5E5"> execute</font><font color="#CCCCCC"> power shell things</font>

1194
00:43:04,280 --> 00:43:08,180
<font color="#CCCCCC">like</font><font color="#E5E5E5"> that so you could potentially</font><font color="#CCCCCC"> do</font>

1195
00:43:05,840 --> 00:43:09,800
that<font color="#CCCCCC"> a white listing approach but I find</font>

1196
00:43:08,180 --> 00:43:11,210
that<font color="#E5E5E5"> to be difficult and in reality</font>

1197
00:43:09,800 --> 00:43:16,520
isn't<font color="#E5E5E5"> implemented that well if you can</font>

1198
00:43:11,210 --> 00:43:25,510
do that<font color="#E5E5E5"> do it</font><font color="#CCCCCC"> absolutely so right you</font>

1199
00:43:16,520 --> 00:43:28,640
know questions as<font color="#E5E5E5"> far as detecting these</font>

1200
00:43:25,510 --> 00:43:29,690
malicious PowerShell scripts<font color="#E5E5E5"> is there</font>

1201
00:43:28,640 --> 00:43:32,450
anything that you've been<font color="#E5E5E5"> working</font>

1202
00:43:29,690 --> 00:43:34,640
towards to make a case for preventing

1203
00:43:32,450 --> 00:43:39,740
them so that in<font color="#E5E5E5"> real-time</font><font color="#CCCCCC"> that it would</font>

1204
00:43:34,640 --> 00:43:42,020
be stopped before the<font color="#E5E5E5"> damage was done so</font>

1205
00:43:39,740 --> 00:43:44,209
things<font color="#E5E5E5"> like that</font><font color="#CCCCCC"> are done that's kind of</font>

1206
00:43:42,020 --> 00:43:45,740
out<font color="#CCCCCC"> of my realm</font><font color="#E5E5E5"> of concern I'm a threat</font>

1207
00:43:44,210 --> 00:43:48,200
analytics I<font color="#CCCCCC"> developed threat</font><font color="#E5E5E5"> analytics</font>

1208
00:43:45,740 --> 00:43:50,149
right so we have you know really in

1209
00:43:48,200 --> 00:43:52,339
<font color="#CCCCCC">reality</font><font color="#E5E5E5"> if you can do preventative</font>

1210
00:43:50,150 --> 00:43:53,840
measures like least<font color="#E5E5E5"> privilege type stuff</font>

1211
00:43:52,340 --> 00:43:55,160
you know we have advisory services<font color="#E5E5E5"> like</font>

1212
00:43:53,840 --> 00:43:57,110
say hey here's what you guys should<font color="#E5E5E5"> do</font>

1213
00:43:55,160 --> 00:43:58,460
<font color="#E5E5E5">if you you know good passwords don't get</font>

1214
00:43:57,110 --> 00:44:00,260
<font color="#E5E5E5">exploited to begin with so they can</font>

1215
00:43:58,460 --> 00:44:02,180
execute<font color="#E5E5E5"> power shell</font>

1216
00:44:00,260 --> 00:44:03,950
I don't<font color="#E5E5E5"> look</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> much people</font><font color="#CCCCCC"> have talked</font>

1217
00:44:02,180 --> 00:44:06,950
about signed PowerShell things like that

1218
00:44:03,950 --> 00:44:08,600
<font color="#E5E5E5">I think</font><font color="#CCCCCC"> that would help</font><font color="#E5E5E5"> but I'm just</font>

1219
00:44:06,950 --> 00:44:11,870
more only<font color="#E5E5E5"> thing I really like to do is</font>

1220
00:44:08,600 --> 00:44:13,700
to tech bad stuff<font color="#CCCCCC"> so unfortunate a ton</font>

1221
00:44:11,870 --> 00:44:15,980
but I'd be interested<font color="#CCCCCC"> in</font><font color="#E5E5E5"> what what other</font>

1222
00:44:13,700 --> 00:44:20,620
people<font color="#E5E5E5"> are doing there we have only time</font>

1223
00:44:15,980 --> 00:44:20,620
for<font color="#E5E5E5"> one</font><font color="#CCCCCC"> more question any last</font><font color="#E5E5E5"> questions</font>

1224
00:44:22,060 --> 00:44:28,450
hi<font color="#E5E5E5"> I'm so you got data for</font>

1225
00:44:25,790 --> 00:44:31,400
the<font color="#CCCCCC"> Cabal a and also</font><font color="#E5E5E5"> from script block</font>

1226
00:44:28,450 --> 00:44:34,250
<font color="#CCCCCC">and for the scripts they can be very</font>

1227
00:44:31,400 --> 00:44:37,000
<font color="#CCCCCC">long</font><font color="#E5E5E5"> right so do you see any difference</font>

1228
00:44:34,250 --> 00:44:40,190
or<font color="#CCCCCC"> no whether</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> fest when you try to</font>

1229
00:44:37,000 --> 00:44:42,830
get a features or like<font color="#E5E5E5"> notice the ratio</font>

1230
00:44:40,190 --> 00:44:44,960
<font color="#E5E5E5">looks different from the from the data</font>

1231
00:44:42,830 --> 00:44:50,870
from script block<font color="#E5E5E5"> as</font><font color="#CCCCCC"> process from</font><font color="#E5E5E5"> the</font>

1232
00:44:44,960 --> 00:44:53,510
<font color="#E5E5E5">command</font><font color="#CCCCCC"> line so do</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> now</font>

1233
00:44:50,870 --> 00:44:57,170
not really<font color="#CCCCCC"> I haven't noticed that</font><font color="#E5E5E5"> not</font>

1234
00:44:53,510 --> 00:44:58,520
say that there aren't<font color="#E5E5E5"> any</font><font color="#CCCCCC"> I hope that if</font>

1235
00:44:57,170 --> 00:45:00,080
they are that<font color="#E5E5E5"> they're being learned in</font>

1236
00:44:58,520 --> 00:45:02,180
<font color="#E5E5E5">the</font><font color="#CCCCCC"> process because we have you know</font><font color="#E5E5E5"> if</font>

1237
00:45:00,080 --> 00:45:03,529
it's<font color="#CCCCCC"> intermixed</font><font color="#E5E5E5"> also anything you see</font>

1238
00:45:02,180 --> 00:45:04,970
<font color="#E5E5E5">the command line is typically included</font>

1239
00:45:03,530 --> 00:45:06,260
in the script<font color="#E5E5E5"> block log as well so if</font>

1240
00:45:04,970 --> 00:45:07,669
you saw a PowerShell they exceed<font color="#CCCCCC"> what</font>

1241
00:45:06,260 --> 00:45:08,840
<font color="#E5E5E5">the encoded command you'd still see that</font>

1242
00:45:07,670 --> 00:45:11,150
in the script<font color="#CCCCCC"> block as a separate event</font>

1243
00:45:08,840 --> 00:45:13,580
as well<font color="#E5E5E5"> so that would be included and</font>

1244
00:45:11,150 --> 00:45:16,970
even if you're just<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> at the</font>

1245
00:45:13,580 --> 00:45:18,410
encoded command so<font color="#CCCCCC"> I mean definitely the</font>

1246
00:45:16,970 --> 00:45:20,000
<font color="#E5E5E5">the scripts are longer right you got</font>

1247
00:45:18,410 --> 00:45:22,759
<font color="#CCCCCC">heute like backup jobs that are very</font>

1248
00:45:20,000 --> 00:45:24,470
long<font color="#CCCCCC"> but those</font><font color="#E5E5E5"> would also be</font><font color="#CCCCCC"> broken up</font>

1249
00:45:22,760 --> 00:45:26,120
<font color="#E5E5E5">so how you how you whether you</font>

1250
00:45:24,470 --> 00:45:28,730
reassemble<font color="#E5E5E5"> the script blocks or analyze</font>

1251
00:45:26,120 --> 00:45:31,520
them in blocks<font color="#CCCCCC"> kind of getting into</font><font color="#E5E5E5"> too</font>

1252
00:45:28,730 --> 00:45:32,960
much<font color="#E5E5E5"> how we're actually</font><font color="#CCCCCC"> production eyes</font>

1253
00:45:31,520 --> 00:45:34,670
this and<font color="#E5E5E5"> I don't want to get too</font><font color="#CCCCCC"> far but</font>

1254
00:45:32,960 --> 00:45:36,110
you know<font color="#CCCCCC"> you can reassemble the script</font>

1255
00:45:34,670 --> 00:45:38,120
blocks<font color="#E5E5E5"> or you could look at</font><font color="#CCCCCC"> just the</font>

1256
00:45:36,110 --> 00:45:40,400
script blocks<font color="#E5E5E5"> because one of the</font><font color="#CCCCCC"> texts</font>

1257
00:45:38,120 --> 00:45:44,509
you<font color="#CCCCCC"> see is okay well mix lots and lots</font>

1258
00:45:40,400 --> 00:45:47,270
of known good code<font color="#E5E5E5"> to to sway these</font>

1259
00:45:44,510 --> 00:45:49,310
types of heuristics<font color="#E5E5E5"> but if you don't</font>

1260
00:45:47,270 --> 00:45:50,720
reassemble them then you know maybe

1261
00:45:49,310 --> 00:45:52,460
there's a block that<font color="#CCCCCC"> contains</font><font color="#E5E5E5"> that</font>

1262
00:45:50,720 --> 00:45:53,899
potentially<font color="#E5E5E5"> you could spread the code</font>

1263
00:45:52,460 --> 00:45:55,310
throughout<font color="#CCCCCC"> the whole thing what I</font>

1264
00:45:53,900 --> 00:45:59,870
noticed is attackers don't do that yet

1265
00:45:55,310 --> 00:46:01,460
<font color="#CCCCCC">so it doesn't really</font><font color="#E5E5E5"> answer the question</font>

1266
00:45:59,870 --> 00:46:07,060
<font color="#CCCCCC">but</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> haven't</font><font color="#E5E5E5"> seen I haven't observed</font>

1267
00:46:01,460 --> 00:46:07,060
that myself<font color="#E5E5E5"> yeah thank you</font>

1268
00:46:08,430 --> 00:46:11,620
[Applause]

