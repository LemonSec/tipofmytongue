1
00:00:00,030 --> 00:00:03,688
thanks for coming everybody<font color="#E5E5E5"> thanks to be</font>

2
00:00:01,829 --> 00:00:05,670
<font color="#CCCCCC">sized Las Vegas for for hosting me</font><font color="#E5E5E5"> this</font>

3
00:00:03,689 --> 00:00:09,660
is really<font color="#E5E5E5"> excited this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> my first talk</font>

4
00:00:05,670 --> 00:00:10,830
here at<font color="#CCCCCC"> b-sides and I think it's just</font>

5
00:00:09,660 --> 00:00:12,179
thrilled to<font color="#E5E5E5"> be here</font>

6
00:00:10,830 --> 00:00:13,410
I've really enjoyed a<font color="#E5E5E5"> lot of the talks</font>

7
00:00:12,179 --> 00:00:14,849
have been<font color="#CCCCCC"> going</font><font color="#E5E5E5"> on this week and I've</font>

8
00:00:13,410 --> 00:00:16,740
had a lot of fun with<font color="#E5E5E5"> the Metasploit</font>

9
00:00:14,849 --> 00:00:18,150
<font color="#CCCCCC">booth as well if you want check it</font>

10
00:00:16,740 --> 00:00:20,220
<font color="#CCCCCC">out.you behind I have a chance to</font><font color="#E5E5E5"> try</font>

11
00:00:18,150 --> 00:00:22,680
out<font color="#E5E5E5"> the Metasploit</font><font color="#CCCCCC"> of all</font><font color="#E5E5E5"> three CTF what</font>

12
00:00:20,220 --> 00:00:24,740
you've got<font color="#E5E5E5"> running</font><font color="#CCCCCC"> get a shell within</font>

13
00:00:22,680 --> 00:00:28,080
<font color="#E5E5E5">five minutes and you win a free t-shirt</font>

14
00:00:24,740 --> 00:00:29,640
so on<font color="#E5E5E5"> with the</font><font color="#CCCCCC"> show so this</font><font color="#E5E5E5"> talk is</font>

15
00:00:28,080 --> 00:00:31,288
<font color="#CCCCCC">Libra cell pushing the ecosystem that</font>

16
00:00:29,640 --> 00:00:32,790
<font color="#CCCCCC">the crux this talk is we're going</font><font color="#E5E5E5"> to be</font>

17
00:00:31,289 --> 00:00:34,980
talking<font color="#E5E5E5"> about Libra</font><font color="#CCCCCC"> so cell I'm the</font>

18
00:00:32,790 --> 00:00:37,200
<font color="#E5E5E5">affordable maintainer for Libra</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> cell</font>

19
00:00:34,980 --> 00:00:39,148
for the OpenBSD project<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> probably</font>

20
00:00:37,200 --> 00:00:40,469
talking<font color="#CCCCCC"> about</font><font color="#E5E5E5"> not so much the</font><font color="#CCCCCC"> project</font>

21
00:00:39,149 --> 00:00:42,960
itself but some<font color="#CCCCCC"> of the effects its had</font>

22
00:00:40,469 --> 00:00:45,510
<font color="#E5E5E5">on different operating systems different</font>

23
00:00:42,960 --> 00:00:48,270
<font color="#E5E5E5">sort of programs within the sort of the</font>

24
00:00:45,510 --> 00:00:49,860
security tool ecosystem and the ways

25
00:00:48,270 --> 00:00:53,610
<font color="#CCCCCC">that things have changed over</font><font color="#E5E5E5"> the last</font>

26
00:00:49,860 --> 00:00:54,570
four years so this<font color="#E5E5E5"> is kind of our agenda</font>

27
00:00:53,610 --> 00:00:55,860
<font color="#E5E5E5">we're</font><font color="#CCCCCC"> going to be</font><font color="#E5E5E5"> talking a little bit</font>

28
00:00:54,570 --> 00:00:56,940
about introductions<font color="#E5E5E5"> libras to</font><font color="#CCCCCC"> cell if</font>

29
00:00:55,860 --> 00:00:57,989
you've never heard<font color="#E5E5E5"> of it before</font>

30
00:00:56,940 --> 00:00:59,849
I'm<font color="#CCCCCC"> going to tell you a little bit</font><font color="#E5E5E5"> about</font>

31
00:00:57,989 --> 00:01:00,899
it<font color="#CCCCCC"> talk</font><font color="#E5E5E5"> about some</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> things that I</font>

32
00:00:59,850 --> 00:01:02,609
work on which<font color="#E5E5E5"> is mostly around</font>

33
00:01:00,899 --> 00:01:03,180
portability<font color="#CCCCCC"> across multiple operating</font>

34
00:01:02,609 --> 00:01:05,580
systems

35
00:01:03,180 --> 00:01:08,010
it's kind of an unseen unsung job but

36
00:01:05,580 --> 00:01:10,020
it's I kind of enjoy<font color="#E5E5E5"> it partly</font><font color="#CCCCCC"> because</font>

37
00:01:08,010 --> 00:01:12,530
I'm a glutton<font color="#E5E5E5"> for</font><font color="#CCCCCC"> punishment</font><font color="#E5E5E5"> we're gonna</font>

38
00:01:10,020 --> 00:01:14,610
talk about three different<font color="#CCCCCC"> stories that</font>

39
00:01:12,530 --> 00:01:16,290
<font color="#E5E5E5">sort of mentioned things that are</font>

40
00:01:14,610 --> 00:01:17,909
difficult<font color="#E5E5E5"> with in the portable realm and</font>

41
00:01:16,290 --> 00:01:20,189
ways<font color="#CCCCCC"> that we've addressed it with in</font>

42
00:01:17,909 --> 00:01:22,290
<font color="#E5E5E5">Libra</font><font color="#CCCCCC"> SSL and we're gonna</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> talking</font>

43
00:01:20,189 --> 00:01:24,119
<font color="#E5E5E5">about ways</font><font color="#CCCCCC"> that operating systems have</font>

44
00:01:22,290 --> 00:01:25,290
you all to make things easier for us

45
00:01:24,119 --> 00:01:26,670
<font color="#E5E5E5">we're gonna be talking about</font><font color="#CCCCCC"> our core</font>

46
00:01:25,290 --> 00:01:29,189
random which is the<font color="#E5E5E5"> interview generator</font>

47
00:01:26,670 --> 00:01:31,049
format for Libra so cell

48
00:01:29,189 --> 00:01:32,008
I know entropy generation may not be the

49
00:01:31,049 --> 00:01:34,170
<font color="#E5E5E5">most interesting topic</font><font color="#CCCCCC"> to a lot</font><font color="#E5E5E5"> of</font>

50
00:01:32,009 --> 00:01:35,610
people<font color="#E5E5E5"> but it's a really fascinating</font>

51
00:01:34,170 --> 00:01:37,200
topic<font color="#E5E5E5"> especially when you're trying to</font>

52
00:01:35,610 --> 00:01:38,159
<font color="#E5E5E5">be secure about</font><font color="#CCCCCC"> it we're</font><font color="#E5E5E5"> gonna talk</font>

53
00:01:37,200 --> 00:01:39,540
<font color="#CCCCCC">about</font><font color="#E5E5E5"> the ways different operating</font>

54
00:01:38,159 --> 00:01:42,150
systems approach it in ways that<font color="#E5E5E5"> we've</font>

55
00:01:39,540 --> 00:01:43,939
sort<font color="#E5E5E5"> of worked around deficiencies over</font>

56
00:01:42,150 --> 00:01:46,890
time we<font color="#CCCCCC"> talk about environment variables</font>

57
00:01:43,939 --> 00:01:47,850
<font color="#E5E5E5">which everyone I don't</font><font color="#CCCCCC"> know</font>

58
00:01:46,890 --> 00:01:49,920
<font color="#E5E5E5">this is</font><font color="#CCCCCC"> one here</font><font color="#E5E5E5"> like environment</font>

59
00:01:47,850 --> 00:01:52,740
variables<font color="#CCCCCC"> I know you do</font><font color="#E5E5E5"> I know you do</font>

60
00:01:49,920 --> 00:01:54,630
<font color="#E5E5E5">and so we're gonna talk</font><font color="#CCCCCC"> about some</font>

61
00:01:52,740 --> 00:01:55,649
things<font color="#CCCCCC"> that</font><font color="#E5E5E5"> can be bad about environment</font>

62
00:01:54,630 --> 00:01:57,630
<font color="#E5E5E5">variables</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> ways that</font><font color="#CCCCCC"> we've</font><font color="#E5E5E5"> worked</font>

63
00:01:55,649 --> 00:01:59,780
around them<font color="#CCCCCC"> and some other projects that</font>

64
00:01:57,630 --> 00:02:02,339
you may be<font color="#CCCCCC"> interested in</font><font color="#E5E5E5"> learning</font><font color="#CCCCCC"> about</font>

65
00:01:59,780 --> 00:02:03,899
<font color="#E5E5E5">so</font><font color="#CCCCCC"> Larissa sell its four-year</font><font color="#E5E5E5"> old Fork</font>

66
00:02:02,340 --> 00:02:06,060
of<font color="#E5E5E5"> openness to sell it came about</font>

67
00:02:03,899 --> 00:02:07,740
right around<font color="#E5E5E5"> heart bleed when heartbleed</font>

68
00:02:06,060 --> 00:02:10,520
came out the OpenBSD team started

69
00:02:07,740 --> 00:02:12,450
auditing<font color="#E5E5E5"> libras</font><font color="#CCCCCC"> are open SSL and</font><font color="#E5E5E5"> said</font><font color="#CCCCCC"> oh</font>

70
00:02:10,520 --> 00:02:13,410
<font color="#E5E5E5">there's a lot of bad</font><font color="#CCCCCC"> coding here we've</font>

71
00:02:12,450 --> 00:02:15,149
been<font color="#E5E5E5"> just</font><font color="#CCCCCC"> kind of blind</font>

72
00:02:13,410 --> 00:02:16,950
taking<font color="#E5E5E5"> that faith that this is</font>

73
00:02:15,150 --> 00:02:19,410
<font color="#CCCCCC">well-maintained that</font><font color="#E5E5E5"> this is secure</font>

74
00:02:16,950 --> 00:02:20,940
<font color="#E5E5E5">we're going to start ripping out</font><font color="#CCCCCC"> all the</font>

75
00:02:19,410 --> 00:02:22,560
obsolete<font color="#E5E5E5"> broken code out of this system</font>

76
00:02:20,940 --> 00:02:25,620
<font color="#CCCCCC">and we're</font><font color="#E5E5E5"> going to build our own version</font>

77
00:02:22,560 --> 00:02:27,960
called<font color="#CCCCCC"> libro</font><font color="#E5E5E5"> so sell</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of stuffs</font>

78
00:02:25,620 --> 00:02:30,420
been deleted<font color="#E5E5E5"> in fact I think what is it</font>

79
00:02:27,960 --> 00:02:33,270
<font color="#CCCCCC">boy Lika moves in a</font><font color="#E5E5E5"> half million lines</font>

80
00:02:30,420 --> 00:02:35,220
or so that we've deleted<font color="#E5E5E5"> over time</font><font color="#CCCCCC"> we've</font>

81
00:02:33,270 --> 00:02:38,100
added a<font color="#CCCCCC"> lot of new features</font><font color="#E5E5E5"> as well we</font>

82
00:02:35,220 --> 00:02:42,540
were one of<font color="#E5E5E5"> the first SSL Forks to have</font>

83
00:02:38,100 --> 00:02:44,940
<font color="#E5E5E5">crypto crypto support like</font><font color="#CCCCCC"> Chacho 20</font><font color="#E5E5E5"> we</font>

84
00:02:42,540 --> 00:02:47,370
were basically<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> first to come</font>

85
00:02:44,940 --> 00:02:49,859
with a better<font color="#CCCCCC"> api for open ssl as well</font>

86
00:02:47,370 --> 00:02:51,750
we have a<font color="#E5E5E5"> api we call</font><font color="#CCCCCC"> lib TLS which</font><font color="#E5E5E5"> is a</font>

87
00:02:49,860 --> 00:02:53,190
<font color="#E5E5E5">simplified</font><font color="#CCCCCC"> api that makes a lot easier</font>

88
00:02:51,750 --> 00:02:54,240
<font color="#CCCCCC">for software developers</font><font color="#E5E5E5"> to not shoot</font>

89
00:02:53,190 --> 00:02:56,790
themselves in the foot when they're

90
00:02:54,240 --> 00:02:57,810
writing secure<font color="#CCCCCC"> software when the other</font>

91
00:02:56,790 --> 00:02:58,890
kind<font color="#E5E5E5"> of neat things about Lee versus</font>

92
00:02:57,810 --> 00:03:00,420
<font color="#CCCCCC">Allen</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> something we've evolved</font>

93
00:02:58,890 --> 00:03:03,000
over time<font color="#CCCCCC"> is it actually</font><font color="#E5E5E5"> has full</font>

94
00:03:00,420 --> 00:03:05,339
software compatibility with open SSL 101

95
00:03:03,000 --> 00:03:07,740
102<font color="#E5E5E5"> and</font><font color="#CCCCCC"> 1:1 so you can basically</font><font color="#E5E5E5"> write</font>

96
00:03:05,340 --> 00:03:12,030
software for<font color="#E5E5E5"> any of those api's and it</font>

97
00:03:07,740 --> 00:03:14,370
they all work with open<font color="#E5E5E5"> SSL directly we</font>

98
00:03:12,030 --> 00:03:16,590
work<font color="#CCCCCC"> very much</font><font color="#E5E5E5"> in lockstep with open BSD</font>

99
00:03:14,370 --> 00:03:20,160
team every six months we<font color="#E5E5E5"> put out a new</font>

100
00:03:16,590 --> 00:03:22,470
major release<font color="#CCCCCC"> we have about five or six</font>

101
00:03:20,160 --> 00:03:24,810
<font color="#E5E5E5">people that work on the core pieces of</font>

102
00:03:22,470 --> 00:03:27,359
Libre<font color="#CCCCCC"> sell over time</font><font color="#E5E5E5"> it kind of is a</font>

103
00:03:24,810 --> 00:03:29,310
rotating<font color="#E5E5E5"> crew one of the neat</font><font color="#CCCCCC"> things</font>

104
00:03:27,360 --> 00:03:31,440
about the<font color="#CCCCCC"> open</font><font color="#E5E5E5"> SSL or</font><font color="#CCCCCC"> libres or self</font>

105
00:03:29,310 --> 00:03:34,140
development is that anyone within the

106
00:03:31,440 --> 00:03:36,030
OpenBSD project can contribute<font color="#E5E5E5"> to it we</font>

107
00:03:34,140 --> 00:03:38,369
don't<font color="#E5E5E5"> really have sort</font><font color="#CCCCCC"> of this huge</font>

108
00:03:36,030 --> 00:03:40,560
<font color="#CCCCCC">separation between who's like an</font><font color="#E5E5E5"> SSL</font>

109
00:03:38,370 --> 00:03:42,150
developer and who's not<font color="#E5E5E5"> actually</font>

110
00:03:40,560 --> 00:03:43,620
generally within the OpenBSD project the

111
00:03:42,150 --> 00:03:45,030
last person to<font color="#E5E5E5"> have touched a file gets</font>

112
00:03:43,620 --> 00:03:47,760
to<font color="#E5E5E5"> become the de-facto maintainer of</font>

113
00:03:45,030 --> 00:03:49,500
that file<font color="#E5E5E5"> so if you ever want</font><font color="#CCCCCC"> to</font>

114
00:03:47,760 --> 00:03:51,780
accidentally become the NFS maintainer

115
00:03:49,500 --> 00:03:54,270
<font color="#E5E5E5">commit some code</font><font color="#CCCCCC"> to it and then you get</font>

116
00:03:51,780 --> 00:03:57,360
to win that as well<font color="#E5E5E5"> it also has some</font>

117
00:03:54,270 --> 00:04:00,390
<font color="#CCCCCC">interesting features that that were</font>

118
00:03:57,360 --> 00:04:03,930
<font color="#E5E5E5">added to</font><font color="#CCCCCC"> Leber's to sell like privilege</font>

119
00:04:00,390 --> 00:04:05,609
separation and isolation that's specific

120
00:04:03,930 --> 00:04:07,970
to<font color="#E5E5E5"> open BSD like for instance it uses</font>

121
00:04:05,610 --> 00:04:09,930
the the<font color="#CCCCCC"> pledge command quite often</font><font color="#E5E5E5"> to</font>

122
00:04:07,970 --> 00:04:11,850
automatically lower privileges<font color="#CCCCCC"> that are</font>

123
00:04:09,930 --> 00:04:15,330
used within the<font color="#E5E5E5"> project and we'll go</font>

124
00:04:11,850 --> 00:04:17,100
into<font color="#E5E5E5"> that a little bit later so one of</font>

125
00:04:15,330 --> 00:04:18,690
the things that we<font color="#CCCCCC"> approached Woodleigh</font>

126
00:04:17,100 --> 00:04:20,669
<font color="#CCCCCC">bracel specially when we started the</font>

127
00:04:18,690 --> 00:04:22,950
original<font color="#E5E5E5"> fork was we noticed</font><font color="#CCCCCC"> that open</font>

128
00:04:20,668 --> 00:04:25,799
SSL doesn't trust operating systems very

129
00:04:22,950 --> 00:04:26,849
much<font color="#CCCCCC"> it influenced own memory allocator</font>

130
00:04:25,800 --> 00:04:29,190
<font color="#E5E5E5">which is one</font><font color="#CCCCCC"> of the reasons</font>

131
00:04:26,850 --> 00:04:31,500
why<font color="#E5E5E5"> Hartley was exploitable with an open</font>

132
00:04:29,190 --> 00:04:32,790
BSD because it<font color="#CCCCCC"> basically a circumvented</font>

133
00:04:31,500 --> 00:04:35,790
a lot of the memory protections built

134
00:04:32,790 --> 00:04:37,800
<font color="#E5E5E5">into open BSD</font><font color="#CCCCCC"> so one of</font><font color="#E5E5E5"> the things that</font>

135
00:04:35,790 --> 00:04:39,960
we did first<font color="#E5E5E5"> without</font><font color="#CCCCCC"> Libre cell was we</font>

136
00:04:37,800 --> 00:04:42,000
got<font color="#E5E5E5"> rid of a lot of the kind of</font>

137
00:04:39,960 --> 00:04:43,320
duplicate implementations of things like

138
00:04:42,000 --> 00:04:44,550
memory allocators or things that<font color="#CCCCCC"> don't</font>

139
00:04:43,320 --> 00:04:47,490
<font color="#E5E5E5">trust the operating systems to do</font>

140
00:04:44,550 --> 00:04:50,220
something right<font color="#E5E5E5"> in places where the</font>

141
00:04:47,490 --> 00:04:52,110
<font color="#E5E5E5">documentation was wrong</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> fixed that as</font>

142
00:04:50,220 --> 00:04:54,060
well<font color="#CCCCCC"> in</font><font color="#E5E5E5"> fact a ton of work has gone into</font>

143
00:04:52,110 --> 00:04:55,620
Libre cells<font color="#CCCCCC"> man pages I know that</font>

144
00:04:54,060 --> 00:04:58,140
<font color="#CCCCCC">doesn't sound</font><font color="#E5E5E5"> like super sexy</font><font color="#CCCCCC"> either but</font>

145
00:04:55,620 --> 00:05:01,110
I<font color="#E5E5E5"> think Libre cell has some of the bests</font>

146
00:04:58,140 --> 00:05:02,370
<font color="#CCCCCC">OpenSSL</font><font color="#E5E5E5"> man pages around</font><font color="#CCCCCC"> and if</font><font color="#E5E5E5"> you just</font>

147
00:05:01,110 --> 00:05:04,020
take<font color="#E5E5E5"> a look at the number of commits</font>

148
00:05:02,370 --> 00:05:06,900
<font color="#CCCCCC">that go into</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> main pages it's pretty</font>

149
00:05:04,020 --> 00:05:08,729
incredible<font color="#CCCCCC"> we've also tried to remove</font>

150
00:05:06,900 --> 00:05:10,859
all the broken<font color="#CCCCCC"> api's</font><font color="#E5E5E5"> and all the unsafe</font>

151
00:05:08,730 --> 00:05:13,140
api's this is<font color="#CCCCCC"> sometimes a</font><font color="#E5E5E5"> give and take</font>

152
00:05:10,860 --> 00:05:15,030
<font color="#CCCCCC">because you might find that</font><font color="#E5E5E5"> within the</font>

153
00:05:13,140 --> 00:05:19,200
software<font color="#CCCCCC"> ecosystem that</font><font color="#E5E5E5"> a certain API</font>

154
00:05:15,030 --> 00:05:20,609
<font color="#CCCCCC">has</font><font color="#E5E5E5"> used a lot because</font><font color="#CCCCCC"> OpenBSD is an</font>

155
00:05:19,200 --> 00:05:22,680
operating<font color="#CCCCCC"> system</font><font color="#E5E5E5"> into itself it has</font>

156
00:05:20,610 --> 00:05:23,910
about five<font color="#E5E5E5"> six thousand ports that it</font>

157
00:05:22,680 --> 00:05:27,510
needs to<font color="#CCCCCC"> work</font><font color="#E5E5E5"> with and this is</font><font color="#CCCCCC"> the base</font>

158
00:05:23,910 --> 00:05:29,340
<font color="#CCCCCC">SSL layer for it so generally we we find</font>

159
00:05:27,510 --> 00:05:30,810
out<font color="#E5E5E5"> really quickly if we remove a bad</font>

160
00:05:29,340 --> 00:05:32,219
API<font color="#E5E5E5"> and someone's actually using it</font><font color="#CCCCCC"> a</font>

161
00:05:30,810 --> 00:05:33,870
lot<font color="#E5E5E5"> of times we</font><font color="#CCCCCC"> actually work with</font><font color="#E5E5E5"> those</font>

162
00:05:32,220 --> 00:05:35,460
upstream maintainer<font color="#E5E5E5"> and fix their</font>

163
00:05:33,870 --> 00:05:37,110
software upstream<font color="#E5E5E5"> so that they're not</font>

164
00:05:35,460 --> 00:05:39,120
using a bad API<font color="#E5E5E5"> as opposed to just</font>

165
00:05:37,110 --> 00:05:41,580
continuing<font color="#CCCCCC"> to let the</font><font color="#E5E5E5"> status quo move on</font>

166
00:05:39,120 --> 00:05:44,130
<font color="#E5E5E5">so really one of our</font><font color="#CCCCCC"> goals isn't</font><font color="#E5E5E5"> just to</font>

167
00:05:41,580 --> 00:05:45,450
make levers to sell a good<font color="#CCCCCC"> project but</font>

168
00:05:44,130 --> 00:05:46,650
to actually<font color="#E5E5E5"> make the entire</font><font color="#CCCCCC"> ecosystem of</font>

169
00:05:45,450 --> 00:05:47,880
<font color="#E5E5E5">a better</font><font color="#CCCCCC"> project by working with</font>

170
00:05:46,650 --> 00:05:49,739
upstream maintainer<font color="#E5E5E5"> x' working with</font>

171
00:05:47,880 --> 00:05:51,750
other<font color="#CCCCCC"> software and making</font><font color="#E5E5E5"> them</font><font color="#CCCCCC"> better as</font>

172
00:05:49,740 --> 00:05:54,600
at the same time it's a big effort it's

173
00:05:51,750 --> 00:05:56,610
a huge team<font color="#CCCCCC"> effort</font><font color="#E5E5E5"> so how did I get</font>

174
00:05:54,600 --> 00:05:59,640
involved<font color="#E5E5E5"> with this</font><font color="#CCCCCC"> I worked</font><font color="#E5E5E5"> at a</font><font color="#CCCCCC"> company</font>

175
00:05:56,610 --> 00:06:01,320
called boundary<font color="#E5E5E5"> and I worked on our</font>

176
00:05:59,640 --> 00:06:02,909
agent we were<font color="#CCCCCC"> owed</font><font color="#E5E5E5"> an agent and see that</font>

177
00:06:01,320 --> 00:06:04,680
basically monitored network traffic and

178
00:06:02,910 --> 00:06:07,980
<font color="#CCCCCC">sent it all up to the cloud to</font><font color="#E5E5E5"> be</font>

179
00:06:04,680 --> 00:06:10,230
processed<font color="#CCCCCC"> and all the software that</font><font color="#E5E5E5"> we</font>

180
00:06:07,980 --> 00:06:11,220
had is part of our agent<font color="#CCCCCC"> you could</font>

181
00:06:10,230 --> 00:06:12,810
configure it and<font color="#E5E5E5"> build it</font><font color="#CCCCCC"> like this</font>

182
00:06:11,220 --> 00:06:14,250
<font color="#CCCCCC">you've ever built</font><font color="#E5E5E5"> software on Linux you</font>

183
00:06:12,810 --> 00:06:17,940
know configure make install it's easy

184
00:06:14,250 --> 00:06:19,770
<font color="#E5E5E5">right except when you build open SSL you</font>

185
00:06:17,940 --> 00:06:22,710
<font color="#E5E5E5">had to create these huge monstrosity</font><font color="#CCCCCC"> zuv</font>

186
00:06:19,770 --> 00:06:24,960
patches and huge like crap to turn off

187
00:06:22,710 --> 00:06:27,539
all the broken<font color="#E5E5E5"> stuff and you know her no</font>

188
00:06:24,960 --> 00:06:29,640
<font color="#E5E5E5">heart beats no engine no Kerberos no SSL</font>

189
00:06:27,540 --> 00:06:31,050
v2 it's basically<font color="#E5E5E5"> they kept so much</font>

190
00:06:29,640 --> 00:06:32,430
backwards compatibility<font color="#E5E5E5"> that they just</font>

191
00:06:31,050 --> 00:06:35,490
<font color="#CCCCCC">kind of paralyzed</font><font color="#E5E5E5"> and never moved</font>

192
00:06:32,430 --> 00:06:37,169
forward so I didn't like<font color="#E5E5E5"> this and it</font>

193
00:06:35,490 --> 00:06:39,479
didn't happen<font color="#CCCCCC"> to have separate built</font>

194
00:06:37,169 --> 00:06:40,260
steps for everything so really my

195
00:06:39,479 --> 00:06:41,880
<font color="#E5E5E5">interesting</font>

196
00:06:40,260 --> 00:06:43,890
her<font color="#E5E5E5"> cell</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> really just to make</font><font color="#CCCCCC"> it</font>

197
00:06:41,880 --> 00:06:45,690
<font color="#E5E5E5">easier to</font><font color="#CCCCCC"> build software</font><font color="#E5E5E5"> it wasn't I</font>

198
00:06:43,890 --> 00:06:48,140
wasn't<font color="#E5E5E5"> really into the security part</font>

199
00:06:45,690 --> 00:06:51,120
initially later on<font color="#CCCCCC"> I got</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> that but</font>

200
00:06:48,140 --> 00:06:53,039
effectively<font color="#E5E5E5"> that's the reason why I got</font>

201
00:06:51,120 --> 00:06:55,860
more less recruited by<font color="#E5E5E5"> the OpenBSD team</font>

202
00:06:53,040 --> 00:06:57,090
to<font color="#E5E5E5"> work on this project</font><font color="#CCCCCC"> right when libre</font>

203
00:06:55,860 --> 00:06:58,710
<font color="#CCCCCC">cell came out originally</font><font color="#E5E5E5"> they said</font><font color="#CCCCCC"> it's</font>

204
00:06:57,090 --> 00:07:00,060
<font color="#E5E5E5">only gonna be out</font><font color="#CCCCCC"> for open BSD we don't</font>

205
00:06:58,710 --> 00:07:03,450
care<font color="#CCCCCC"> about any other</font><font color="#E5E5E5"> operating system</font>

206
00:07:00,060 --> 00:07:04,680
and so it's kind<font color="#CCCCCC"> of a dare I said well I</font>

207
00:07:03,450 --> 00:07:07,229
wonder if I could<font color="#E5E5E5"> make it work for this</font>

208
00:07:04,680 --> 00:07:09,060
boundary agent you know<font color="#E5E5E5"> and thanks</font><font color="#CCCCCC"> I sat</font>

209
00:07:07,230 --> 00:07:11,340
down<font color="#CCCCCC"> for a couple weeks and I wrote you</font>

210
00:07:09,060 --> 00:07:12,690
know I<font color="#E5E5E5"> like Auto conf and not to make I</font>

211
00:07:11,340 --> 00:07:15,869
<font color="#E5E5E5">don't know if anyone else who likes</font>

212
00:07:12,690 --> 00:07:18,180
those<font color="#CCCCCC"> things but they're not too bad you</font>

213
00:07:15,870 --> 00:07:20,060
a little bit<font color="#E5E5E5"> of em for scripting and you</font>

214
00:07:18,180 --> 00:07:23,190
know you're off to the<font color="#E5E5E5"> races are sort</font><font color="#CCCCCC"> of</font>

215
00:07:20,060 --> 00:07:25,980
and so anyway I was<font color="#E5E5E5"> on</font><font color="#CCCCCC"> vacation with my</font>

216
00:07:23,190 --> 00:07:28,020
family<font color="#CCCCCC"> in Japan and Theo de Raadt</font><font color="#E5E5E5"> starts</font>

217
00:07:25,980 --> 00:07:29,370
emailing me<font color="#E5E5E5"> and says hey you want</font><font color="#CCCCCC"> to</font>

218
00:07:28,020 --> 00:07:32,010
work with<font color="#CCCCCC"> us and make a</font><font color="#E5E5E5"> portable version</font>

219
00:07:29,370 --> 00:07:33,570
<font color="#E5E5E5">of</font><font color="#CCCCCC"> libros a cell and my family was all</font>

220
00:07:32,010 --> 00:07:35,580
jet-lagged<font color="#E5E5E5"> and you know they were all</font>

221
00:07:33,570 --> 00:07:38,130
bouncing around<font color="#E5E5E5"> so I</font><font color="#CCCCCC"> just would go down</font>

222
00:07:35,580 --> 00:07:40,830
<font color="#E5E5E5">to this cafe the Sakura cafe and iki</font>

223
00:07:38,130 --> 00:07:43,950
brocro and<font color="#E5E5E5"> and I would just hack all</font>

224
00:07:40,830 --> 00:07:45,390
night when we were in Tokyo<font color="#E5E5E5"> and I worked</font>

225
00:07:43,950 --> 00:07:47,940
on you know<font color="#E5E5E5"> basically talked with those</font>

226
00:07:45,390 --> 00:07:50,340
guys<font color="#CCCCCC"> and we ended</font><font color="#E5E5E5"> up you know deciding</font>

227
00:07:47,940 --> 00:07:51,719
to meet in<font color="#E5E5E5"> Slovenia in a couple months</font>

228
00:07:50,340 --> 00:07:52,739
<font color="#CCCCCC">so basically I'm just talking to these</font>

229
00:07:51,720 --> 00:07:54,000
random<font color="#CCCCCC"> people on</font><font color="#E5E5E5"> the internet and</font>

230
00:07:52,740 --> 00:07:55,290
they're like hey<font color="#E5E5E5"> come to Slovenia and</font>

231
00:07:54,000 --> 00:07:57,840
half with us<font color="#CCCCCC"> and I've never been to</font>

232
00:07:55,290 --> 00:08:01,350
<font color="#CCCCCC">Europe before</font><font color="#E5E5E5"> so I just you know decided</font>

233
00:07:57,840 --> 00:08:02,880
<font color="#CCCCCC">to</font><font color="#E5E5E5"> go and if people know I'm usually not</font>

234
00:08:01,350 --> 00:08:07,290
<font color="#E5E5E5">a</font><font color="#CCCCCC"> very adventurous</font><font color="#E5E5E5"> person I don't do</font>

235
00:08:02,880 --> 00:08:09,450
things<font color="#E5E5E5"> just on a whim but in this case I</font>

236
00:08:07,290 --> 00:08:10,920
<font color="#E5E5E5">went out there</font><font color="#CCCCCC"> and I met like 70 or</font><font color="#E5E5E5"> so</font>

237
00:08:09,450 --> 00:08:14,159
developers we've hung<font color="#E5E5E5"> out in like a</font>

238
00:08:10,920 --> 00:08:16,050
co-ed hostel and you know<font color="#E5E5E5"> did a bunch of</font>

239
00:08:14,160 --> 00:08:18,300
hacking with with both<font color="#CCCCCC"> Bavarians</font>

240
00:08:16,050 --> 00:08:20,100
<font color="#E5E5E5">so it was a lot of fun we got our first</font>

241
00:08:18,300 --> 00:08:21,930
like five or six releases out that week

242
00:08:20,100 --> 00:08:23,940
I learned<font color="#E5E5E5"> how</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use CVS which I</font><font color="#CCCCCC"> don't</font>

243
00:08:21,930 --> 00:08:26,220
know<font color="#CCCCCC"> I hadn't used</font><font color="#E5E5E5"> that like since</font>

244
00:08:23,940 --> 00:08:28,650
college or so but we got it all hacked

245
00:08:26,220 --> 00:08:31,950
up<font color="#E5E5E5"> pushed it out and then we got</font><font color="#CCCCCC"> our</font>

246
00:08:28,650 --> 00:08:33,270
<font color="#CCCCCC">first</font><font color="#E5E5E5"> well okay first of</font><font color="#CCCCCC"> all I just</font><font color="#E5E5E5"> you</font>

247
00:08:31,950 --> 00:08:35,520
know talking<font color="#E5E5E5"> a little bit about</font><font color="#CCCCCC"> Libre</font>

248
00:08:33,270 --> 00:08:38,689
<font color="#CCCCCC">cell</font><font color="#E5E5E5"> again we support</font><font color="#CCCCCC"> a lot of different</font>

249
00:08:35,520 --> 00:08:41,669
platforms<font color="#CCCCCC"> we support Windows in like</font>

250
00:08:38,690 --> 00:08:44,099
four or five<font color="#E5E5E5"> different incarnations my</font>

251
00:08:41,669 --> 00:08:47,400
ax Mac and West FreeBSD hp-ux Linux

252
00:08:44,099 --> 00:08:48,870
<font color="#E5E5E5">netbsd openbsd Solaris</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> actually</font>

253
00:08:47,400 --> 00:08:51,000
support<font color="#E5E5E5"> some weird stuff like sorting</font>

254
00:08:48,870 --> 00:08:52,570
sand MIDI picks which is also<font color="#E5E5E5"> another</font>

255
00:08:51,000 --> 00:08:55,510
<font color="#E5E5E5">Windows</font><font color="#CCCCCC"> layer</font>

256
00:08:52,570 --> 00:08:57,040
we had three different<font color="#E5E5E5"> build systems we</font>

257
00:08:55,510 --> 00:08:59,439
have<font color="#CCCCCC"> the OpenBSD source tree which</font><font color="#E5E5E5"> is</font>

258
00:08:57,040 --> 00:09:01,390
how<font color="#E5E5E5"> normally gets built</font><font color="#CCCCCC"> Auto conf</font><font color="#E5E5E5"> and we</font>

259
00:08:59,440 --> 00:09:03,670
even support<font color="#E5E5E5"> see make even guys ever you</font>

260
00:09:01,390 --> 00:09:05,890
see make before<font color="#E5E5E5"> it's a pretty cool</font>

261
00:09:03,670 --> 00:09:07,599
project I really<font color="#CCCCCC"> like ninja especially</font>

262
00:09:05,890 --> 00:09:09,550
doing ninja builds<font color="#E5E5E5"> everyone the open B</font>

263
00:09:07,600 --> 00:09:11,980
<font color="#CCCCCC">team is really</font><font color="#E5E5E5"> jealous when I can build</font>

264
00:09:09,550 --> 00:09:13,719
<font color="#E5E5E5">Lee versus L in like 25 seconds and</font>

265
00:09:11,980 --> 00:09:19,000
everything else<font color="#CCCCCC"> takes you know</font><font color="#E5E5E5"> five</font>

266
00:09:13,720 --> 00:09:21,160
<font color="#E5E5E5">minutes</font><font color="#CCCCCC"> this is</font><font color="#E5E5E5"> kind of gonna circle</font>

267
00:09:19,000 --> 00:09:22,810
<font color="#CCCCCC">back to</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> first week where we</font><font color="#E5E5E5"> sat</font>

268
00:09:21,160 --> 00:09:27,339
<font color="#E5E5E5">down in</font><font color="#CCCCCC"> ljubljana</font>

269
00:09:22,810 --> 00:09:29,410
<font color="#E5E5E5">and</font><font color="#CCCCCC"> got those first</font><font color="#E5E5E5"> patches out those</font>

270
00:09:27,340 --> 00:09:31,720
first<font color="#E5E5E5"> releases of</font><font color="#CCCCCC"> libres to</font><font color="#E5E5E5"> sell out and</font>

271
00:09:29,410 --> 00:09:33,040
<font color="#E5E5E5">that is the idea that making things a</font>

272
00:09:31,720 --> 00:09:37,960
pile is easy<font color="#E5E5E5"> making things work</font>

273
00:09:33,040 --> 00:09:40,209
correctly is really hard<font color="#CCCCCC"> and basically</font>

274
00:09:37,960 --> 00:09:41,890
how can we make a<font color="#E5E5E5"> portable version of</font>

275
00:09:40,210 --> 00:09:43,030
<font color="#CCCCCC">Lieber's to sell that doesn't</font><font color="#E5E5E5"> drive us</font>

276
00:09:41,890 --> 00:09:45,760
crazy<font color="#E5E5E5"> doesn't require a bunch of</font><font color="#CCCCCC"> F</font>

277
00:09:43,030 --> 00:09:47,650
<font color="#CCCCCC">destined defines how do we make it</font><font color="#E5E5E5"> so</font>

278
00:09:45,760 --> 00:09:49,090
that we<font color="#E5E5E5"> don't have to have a ton of</font>

279
00:09:47,650 --> 00:09:52,030
patches all<font color="#CCCCCC"> over</font><font color="#E5E5E5"> the place to make this</font>

280
00:09:49,090 --> 00:09:54,220
thing work<font color="#CCCCCC"> one of the approaches that we</font>

281
00:09:52,030 --> 00:09:56,230
<font color="#CCCCCC">took to make this stuff happen is we</font>

282
00:09:54,220 --> 00:09:58,180
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> have this concept of I guess</font>

283
00:09:56,230 --> 00:10:00,430
<font color="#CCCCCC">you'd call them intermediate headers</font>

284
00:09:58,180 --> 00:10:03,370
<font color="#E5E5E5">within</font><font color="#CCCCCC"> labor so sell what it basically</font>

285
00:10:00,430 --> 00:10:05,979
does<font color="#E5E5E5"> is whenever</font><font color="#CCCCCC"> labor</font><font color="#E5E5E5"> sell try student</font>

286
00:10:03,370 --> 00:10:07,930
is<font color="#E5E5E5"> anyone here a C programmer just just</font>

287
00:10:05,980 --> 00:10:09,190
to kind of<font color="#E5E5E5"> start all</font><font color="#CCCCCC"> right so</font><font color="#E5E5E5"> not going</font>

288
00:10:07,930 --> 00:10:10,569
<font color="#E5E5E5">over too many people's heads on the</font>

289
00:10:09,190 --> 00:10:13,480
whole include things<font color="#E5E5E5"> but the</font><font color="#CCCCCC"> idea here</font>

290
00:10:10,570 --> 00:10:15,250
<font color="#CCCCCC">is that they're</font><font color="#E5E5E5"> our definitions of the</font>

291
00:10:13,480 --> 00:10:18,820
way functions look within<font color="#E5E5E5"> the operating</font>

292
00:10:15,250 --> 00:10:20,410
system in these headers and what you'll

293
00:10:18,820 --> 00:10:22,000
find<font color="#E5E5E5"> is that a lot of times these vary</font>

294
00:10:20,410 --> 00:10:23,260
from operating<font color="#E5E5E5"> system operating systems</font>

295
00:10:22,000 --> 00:10:24,670
sometimes<font color="#E5E5E5"> there's a function miss seeing</font>

296
00:10:23,260 --> 00:10:26,740
sometimes<font color="#E5E5E5"> the definition is a</font><font color="#CCCCCC"> little bit</font>

297
00:10:24,670 --> 00:10:28,540
weird<font color="#CCCCCC"> sometimes there's a whole</font>

298
00:10:26,740 --> 00:10:29,740
<font color="#E5E5E5">subsystem that's missing from an OS</font>

299
00:10:28,540 --> 00:10:31,719
whether it's Windows<font color="#E5E5E5"> or Linux or</font>

300
00:10:29,740 --> 00:10:33,370
<font color="#E5E5E5">whatever and so you have to fix it</font>

301
00:10:31,720 --> 00:10:34,960
and so how do you fix it<font color="#E5E5E5"> either you</font>

302
00:10:33,370 --> 00:10:36,790
write in your<font color="#CCCCCC"> C code a bunch of little</font>

303
00:10:34,960 --> 00:10:38,380
you know conditionals like if it's

304
00:10:36,790 --> 00:10:42,339
<font color="#CCCCCC">Windows do this this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> Windows do</font>

305
00:10:38,380 --> 00:10:44,230
that<font color="#E5E5E5"> or you can actually intercept all</font>

306
00:10:42,340 --> 00:10:46,150
of the includes<font color="#E5E5E5"> that happen within the</font>

307
00:10:44,230 --> 00:10:47,830
<font color="#CCCCCC">built system and and include your own</font>

308
00:10:46,150 --> 00:10:49,780
<font color="#E5E5E5">version that automatically fixes all</font>

309
00:10:47,830 --> 00:10:50,890
these system calls for you so like<font color="#E5E5E5"> for</font>

310
00:10:49,780 --> 00:10:52,569
<font color="#CCCCCC">instance whenever</font><font color="#E5E5E5"> we would do time</font>

311
00:10:50,890 --> 00:10:55,000
related functions within<font color="#CCCCCC"> liebherr SSL</font>

312
00:10:52,570 --> 00:10:56,350
includes<font color="#CCCCCC"> timed @h but it actually</font>

313
00:10:55,000 --> 00:10:58,150
<font color="#E5E5E5">includes our own specially modified</font>

314
00:10:56,350 --> 00:10:59,680
version of time<font color="#E5E5E5"> 2h which has all the</font>

315
00:10:58,150 --> 00:11:02,199
missing pieces already incorporated<font color="#E5E5E5"> into</font>

316
00:10:59,680 --> 00:11:03,189
it and then we have this<font color="#E5E5E5"> this kind of</font>

317
00:11:02,200 --> 00:11:04,960
interesting<font color="#CCCCCC"> code here</font><font color="#E5E5E5"> I'm going to point</font>

318
00:11:03,190 --> 00:11:06,520
<font color="#E5E5E5">it out</font>

319
00:11:04,960 --> 00:11:09,130
so what this basically does is it<font color="#E5E5E5"> uses</font>

320
00:11:06,520 --> 00:11:10,300
<font color="#E5E5E5">an</font><font color="#CCCCCC"> interesting little function</font><font color="#E5E5E5"> that you</font>

321
00:11:09,130 --> 00:11:12,460
may<font color="#E5E5E5"> have never seen</font><font color="#CCCCCC"> before or a</font>

322
00:11:10,300 --> 00:11:15,209
directive called include next and on

323
00:11:12,460 --> 00:11:17,590
every compiler<font color="#E5E5E5"> except for visual C</font>

324
00:11:15,210 --> 00:11:19,990
include next will automatically include

325
00:11:17,590 --> 00:11:21,400
the next header file in the path<font color="#E5E5E5"> so it</font>

326
00:11:19,990 --> 00:11:24,700
<font color="#CCCCCC">basically allows</font><font color="#E5E5E5"> you to create an</font>

327
00:11:21,400 --> 00:11:26,949
interceptor that grabs<font color="#E5E5E5"> that that sits</font>

328
00:11:24,700 --> 00:11:30,700
between the<font color="#CCCCCC"> reel header and your the</font>

329
00:11:26,950 --> 00:11:32,830
header<font color="#E5E5E5"> that you want to</font><font color="#CCCCCC"> modify and okay</font>

330
00:11:30,700 --> 00:11:34,840
<font color="#E5E5E5">lets you mutate the</font><font color="#CCCCCC"> effect</font><font color="#E5E5E5"> of including</font>

331
00:11:32,830 --> 00:11:36,340
<font color="#E5E5E5">that header</font><font color="#CCCCCC"> and of course</font><font color="#E5E5E5"> these other</font>

332
00:11:34,840 --> 00:11:38,080
little<font color="#E5E5E5"> things are kind</font><font color="#CCCCCC"> of a weird hack</font>

333
00:11:36,340 --> 00:11:40,840
of a trick<font color="#CCCCCC"> so if you include sort of a</font>

334
00:11:38,080 --> 00:11:42,100
<font color="#E5E5E5">relative path you can trick Visual</font>

335
00:11:40,840 --> 00:11:44,680
<font color="#E5E5E5">Studio into thinking that's actually a</font>

336
00:11:42,100 --> 00:11:46,240
different<font color="#CCCCCC"> header</font><font color="#E5E5E5"> altogether</font><font color="#CCCCCC"> and and get</font>

337
00:11:44,680 --> 00:11:48,520
around the<font color="#E5E5E5"> limitations there but they</font>

338
00:11:46,240 --> 00:11:51,340
<font color="#E5E5E5">don't have include next so that's really</font>

339
00:11:48,520 --> 00:11:53,680
<font color="#E5E5E5">how we do it we we basically rather than</font>

340
00:11:51,340 --> 00:11:55,870
<font color="#CCCCCC">coding</font><font color="#E5E5E5"> around like say windows missing F</font>

341
00:11:53,680 --> 00:11:57,699
<font color="#CCCCCC">open or F open not working</font><font color="#E5E5E5"> properly we</font>

342
00:11:55,870 --> 00:12:00,360
actually define our own<font color="#E5E5E5"> version of POSIX</font>

343
00:11:57,700 --> 00:12:03,430
<font color="#CCCCCC">F F when that acts like POSIX</font><font color="#E5E5E5"> and then</font>

344
00:12:00,360 --> 00:12:05,350
redefines<font color="#E5E5E5"> what F open is inside of</font>

345
00:12:03,430 --> 00:12:07,689
windows code to look like the POSIX F

346
00:12:05,350 --> 00:12:09,790
open<font color="#E5E5E5"> this basically means that the core</font>

347
00:12:07,690 --> 00:12:12,880
code<font color="#E5E5E5"> of</font><font color="#CCCCCC"> larissa</font><font color="#E5E5E5"> cell has know if def</font>

348
00:12:09,790 --> 00:12:13,900
windows in it<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's kind of a goal</font>

349
00:12:12,880 --> 00:12:15,550
of<font color="#E5E5E5"> ours is to make it easier for</font>

350
00:12:13,900 --> 00:12:18,400
<font color="#E5E5E5">developers</font><font color="#CCCCCC"> to develop code without</font>

351
00:12:15,550 --> 00:12:19,449
<font color="#CCCCCC">having problems where one section is has</font>

352
00:12:18,400 --> 00:12:20,620
one behavior another second is a

353
00:12:19,450 --> 00:12:23,140
different behavior<font color="#CCCCCC"> and just</font><font color="#E5E5E5"> comes</font><font color="#CCCCCC"> again</font>

354
00:12:20,620 --> 00:12:24,310
<font color="#CCCCCC">this</font><font color="#E5E5E5"> week spaghettified</font><font color="#CCCCCC"> mess so that's</font>

355
00:12:23,140 --> 00:12:26,080
one way<font color="#CCCCCC"> that we've been working to get</font>

356
00:12:24,310 --> 00:12:28,689
the operating<font color="#CCCCCC"> system to</font><font color="#E5E5E5"> sort of be the</font>

357
00:12:26,080 --> 00:12:32,560
<font color="#CCCCCC">same ideally</font><font color="#E5E5E5"> there's nothing in there at</font>

358
00:12:28,690 --> 00:12:34,990
<font color="#E5E5E5">all</font><font color="#CCCCCC"> another way that</font><font color="#E5E5E5"> we have managed to</font>

359
00:12:32,560 --> 00:12:36,369
make portable<font color="#E5E5E5"> Libre cell work well</font>

360
00:12:34,990 --> 00:12:37,930
<font color="#CCCCCC">within different</font><font color="#E5E5E5"> operating systems as we</font>

361
00:12:36,370 --> 00:12:40,510
do sort<font color="#E5E5E5"> of runtime detection of</font>

362
00:12:37,930 --> 00:12:42,160
operating system attributes for instance

363
00:12:40,510 --> 00:12:44,020
a key<font color="#CCCCCC"> function that</font><font color="#E5E5E5"> we use within</font><font color="#CCCCCC"> libres</font>

364
00:12:42,160 --> 00:12:46,089
<font color="#E5E5E5">a cell for doing entropy generation is a</font>

365
00:12:44,020 --> 00:12:48,130
function called<font color="#E5E5E5"> arc for random now arc</font>

366
00:12:46,090 --> 00:12:50,800
for random is supposed<font color="#E5E5E5"> to be a very</font>

367
00:12:48,130 --> 00:12:52,630
secure<font color="#E5E5E5"> random number generator and</font>

368
00:12:50,800 --> 00:12:53,920
really easy<font color="#E5E5E5"> to use</font><font color="#CCCCCC"> it doesn't even have</font>

369
00:12:52,630 --> 00:12:55,870
a failure mode there's no way for<font color="#CCCCCC"> it to</font>

370
00:12:53,920 --> 00:12:57,160
<font color="#E5E5E5">fail there's no return value you can</font>

371
00:12:55,870 --> 00:12:59,770
give that isn't supposed to be

372
00:12:57,160 --> 00:13:01,500
<font color="#E5E5E5">completely</font><font color="#CCCCCC"> random</font><font color="#E5E5E5"> and unpredictable now</font>

373
00:12:59,770 --> 00:13:04,810
occasionally<font color="#E5E5E5"> people make mistakes and</font>

374
00:13:01,500 --> 00:13:07,030
implement it badly<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so and that's the</font>

375
00:13:04,810 --> 00:13:08,469
<font color="#E5E5E5">case then we</font><font color="#CCCCCC"> actually have code within</font>

376
00:13:07,030 --> 00:13:10,000
<font color="#E5E5E5">libros a cell that can detect like for</font>

377
00:13:08,470 --> 00:13:12,700
<font color="#CCCCCC">instance if you're running netbsd before</font>

378
00:13:10,000 --> 00:13:14,980
<font color="#E5E5E5">version</font><font color="#CCCCCC"> seven</font><font color="#E5E5E5"> arc for random was broken</font>

379
00:13:12,700 --> 00:13:17,140
<font color="#E5E5E5">because</font><font color="#CCCCCC"> they you know</font><font color="#E5E5E5"> actually used a</font>

380
00:13:14,980 --> 00:13:18,329
copy from<font color="#CCCCCC"> open base different</font><font color="#E5E5E5"> like ten</font>

381
00:13:17,140 --> 00:13:20,790
years<font color="#E5E5E5"> ago</font><font color="#CCCCCC"> and then</font>

382
00:13:18,329 --> 00:13:22,859
updated it now eventually we worked with

383
00:13:20,790 --> 00:13:25,589
the net BST team and updated it so that

384
00:13:22,860 --> 00:13:26,220
they did have<font color="#CCCCCC"> a working version of arc</font>

385
00:13:25,589 --> 00:13:28,019
for random

386
00:13:26,220 --> 00:13:29,939
so there's actually<font color="#E5E5E5"> code within</font><font color="#CCCCCC"> Li</font>

387
00:13:28,019 --> 00:13:31,379
versus Zelda automatically patch in and

388
00:13:29,939 --> 00:13:32,429
<font color="#E5E5E5">out arc for random depending on if the</font>

389
00:13:31,379 --> 00:13:36,360
underlying<font color="#CCCCCC"> operating system</font><font color="#E5E5E5"> is</font>

390
00:13:32,429 --> 00:13:41,009
sufficiently good<font color="#CCCCCC"> another</font><font color="#E5E5E5"> thing that we</font>

391
00:13:36,360 --> 00:13:42,689
do is we continually monitor upstream

392
00:13:41,009 --> 00:13:44,670
code<font color="#E5E5E5"> it's really nice</font><font color="#CCCCCC"> that a lot</font><font color="#E5E5E5"> of</font>

393
00:13:42,689 --> 00:13:46,738
people are open source<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> can</font>

394
00:13:44,670 --> 00:13:48,719
actually see if things change<font color="#CCCCCC"> over time</font>

395
00:13:46,739 --> 00:13:51,959
and in fact<font color="#CCCCCC"> as part of</font><font color="#E5E5E5"> kind of our</font>

396
00:13:48,720 --> 00:13:53,519
<font color="#CCCCCC">libres itself porting plan we've</font><font color="#E5E5E5"> seen</font><font color="#CCCCCC"> a</font>

397
00:13:51,959 --> 00:13:57,779
lot of operating systems adopt<font color="#E5E5E5"> things</font>

398
00:13:53,519 --> 00:13:58,980
that we've sort<font color="#E5E5E5"> of been pushing and it's</font>

399
00:13:57,779 --> 00:14:01,829
been kind of rewarding to see<font color="#CCCCCC"> that</font>

400
00:13:58,980 --> 00:14:04,709
happen in reality<font color="#CCCCCC"> we talk</font><font color="#E5E5E5"> about three</font>

401
00:14:01,829 --> 00:14:06,748
different<font color="#E5E5E5"> stories</font><font color="#CCCCCC"> of this kind of</font>

402
00:14:04,709 --> 00:14:08,488
ecosystem push happening in the real

403
00:14:06,749 --> 00:14:10,649
world<font color="#E5E5E5"> first one is around clearing</font>

404
00:14:08,489 --> 00:14:13,699
memory and keeping secrets

405
00:14:10,649 --> 00:14:15,839
so when you have a crypto library

406
00:14:13,699 --> 00:14:18,359
<font color="#CCCCCC">oftentimes it's very important that</font>

407
00:14:15,839 --> 00:14:21,869
<font color="#CCCCCC">things like the secrecy you decrypt</font>

408
00:14:18,360 --> 00:14:22,980
<font color="#CCCCCC">don't hang around memory normally the</font>

409
00:14:21,869 --> 00:14:24,449
operating system will have like a free

410
00:14:22,980 --> 00:14:26,759
commanded<font color="#E5E5E5"> let's you free the memory back</font>

411
00:14:24,449 --> 00:14:27,959
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the operating</font><font color="#CCCCCC"> system itself but that</font>

412
00:14:26,759 --> 00:14:29,489
doesn't necessarily<font color="#E5E5E5"> mean that goes away</font>

413
00:14:27,959 --> 00:14:32,160
<font color="#CCCCCC">someone else could reallocate</font><font color="#E5E5E5"> that</font>

414
00:14:29,489 --> 00:14:33,419
memory and<font color="#E5E5E5"> get that secret right back</font><font color="#CCCCCC"> so</font>

415
00:14:32,160 --> 00:14:35,279
you want to make sure<font color="#E5E5E5"> that you clear</font>

416
00:14:33,419 --> 00:14:39,749
things securely and it's actually

417
00:14:35,279 --> 00:14:43,619
surprisingly hard<font color="#CCCCCC"> so in 2014</font>

418
00:14:39,749 --> 00:14:45,299
<font color="#CCCCCC">libres to sell</font><font color="#E5E5E5"> when we started</font><font color="#CCCCCC"> working</font>

419
00:14:43,619 --> 00:14:48,540
we found a lot of<font color="#E5E5E5"> code like this inside</font>

420
00:14:45,299 --> 00:14:50,459
of open<font color="#CCCCCC"> OpenSSL</font><font color="#E5E5E5"> basically calling memset</font>

421
00:14:48,540 --> 00:14:53,099
<font color="#E5E5E5">now mmm said is a</font><font color="#CCCCCC"> c</font><font color="#E5E5E5"> function that's</font>

422
00:14:50,459 --> 00:14:55,079
supposed to clear out memory however<font color="#CCCCCC"> the</font>

423
00:14:53,100 --> 00:14:56,819
compiler can be really smart<font color="#CCCCCC"> about it</font>

424
00:14:55,079 --> 00:14:58,469
<font color="#E5E5E5">according</font><font color="#CCCCCC"> to the standard the cloud can</font>

425
00:14:56,819 --> 00:15:00,628
say if no one actually<font color="#E5E5E5"> ever reads the</font>

426
00:14:58,470 --> 00:15:02,699
memory then why<font color="#E5E5E5"> bother clearing it at</font>

427
00:15:00,629 --> 00:15:05,669
all<font color="#E5E5E5"> so it connected detect if it's like</font>

428
00:15:02,699 --> 00:15:08,128
for instance<font color="#CCCCCC"> if buffer never gets read</font>

429
00:15:05,669 --> 00:15:09,449
again after it gets written<font color="#CCCCCC"> to then if</font>

430
00:15:08,129 --> 00:15:10,919
it can<font color="#CCCCCC"> actually optimize</font><font color="#E5E5E5"> that code out</font>

431
00:15:09,449 --> 00:15:12,540
<font color="#E5E5E5">and</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> galata compilers</font><font color="#E5E5E5"> will do</font>

432
00:15:10,919 --> 00:15:14,459
that as<font color="#E5E5E5"> soon as you internally in</font><font color="#CCCCCC"> the</font>

433
00:15:12,540 --> 00:15:15,779
optimization<font color="#CCCCCC"> so how do you how you stop</font>

434
00:15:14,459 --> 00:15:17,699
<font color="#E5E5E5">the compiler from doing it well</font>

435
00:15:15,779 --> 00:15:19,079
compilers are going to compile<font color="#E5E5E5"> so</font>

436
00:15:17,699 --> 00:15:20,639
sometimes what yet to do is you have<font color="#CCCCCC"> to</font>

437
00:15:19,079 --> 00:15:23,429
trick them and to make<font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that they're</font>

438
00:15:20,639 --> 00:15:26,699
there<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> often optimizer can't tell</font>

439
00:15:23,429 --> 00:15:29,160
<font color="#E5E5E5">that you didn't read it later</font><font color="#CCCCCC"> so you</font>

440
00:15:26,699 --> 00:15:31,469
know for<font color="#CCCCCC"> OpenBSD 5.5 we implemented a</font>

441
00:15:29,160 --> 00:15:34,410
<font color="#E5E5E5">function called explicit b0 which</font>

442
00:15:31,470 --> 00:15:35,640
calls be 0 but calls it with<font color="#E5E5E5"> one level</font>

443
00:15:34,410 --> 00:15:38,189
<font color="#E5E5E5">of indirection so basically the</font>

444
00:15:35,640 --> 00:15:40,230
<font color="#CCCCCC">underlying function can't be seen so it</font>

445
00:15:38,190 --> 00:15:42,090
doesn't know if you<font color="#CCCCCC"> redditor</font><font color="#E5E5E5"> or not how</font>

446
00:15:40,230 --> 00:15:43,110
it turns out<font color="#E5E5E5"> this is defeatable easily</font>

447
00:15:42,090 --> 00:15:45,810
by something called link time

448
00:15:43,110 --> 00:15:47,040
optimization<font color="#E5E5E5"> where you</font><font color="#CCCCCC"> basically after</font>

449
00:15:45,810 --> 00:15:48,930
you compile the code when you<font color="#E5E5E5"> glue it</font>

450
00:15:47,040 --> 00:15:50,610
<font color="#E5E5E5">all together with the linker the linker</font>

451
00:15:48,930 --> 00:15:52,530
can go oh well then no one really did

452
00:15:50,610 --> 00:15:54,390
ever read this code after all<font color="#E5E5E5"> or read</font>

453
00:15:52,530 --> 00:15:55,980
this memory so it optimizes out remem

454
00:15:54,390 --> 00:15:58,949
set there are<font color="#CCCCCC"> explicitly zero</font>

455
00:15:55,980 --> 00:16:00,210
so how do you<font color="#E5E5E5"> fix that</font><font color="#CCCCCC"> well net bsd</font>

456
00:15:58,950 --> 00:16:02,760
tried to fix it<font color="#E5E5E5"> by adding a bunch of</font>

457
00:16:00,210 --> 00:16:04,170
void star pointers and making the<font color="#CCCCCC"> mem</font>

458
00:16:02,760 --> 00:16:08,520
<font color="#CCCCCC">set function itself sim that</font><font color="#E5E5E5"> could be</font>

459
00:16:04,170 --> 00:16:10,469
replaced<font color="#CCCCCC"> this is interesting in that one</font>

460
00:16:08,520 --> 00:16:12,840
it<font color="#E5E5E5"> makes it so that you can actually</font>

461
00:16:10,470 --> 00:16:15,180
<font color="#E5E5E5">replace</font><font color="#CCCCCC"> mem</font><font color="#E5E5E5"> set with any function</font><font color="#CCCCCC"> you</font>

462
00:16:12,840 --> 00:16:19,290
<font color="#E5E5E5">want so you have a nice sort of a hook</font>

463
00:16:15,180 --> 00:16:23,280
<font color="#E5E5E5">for all the secrets within your program</font>

464
00:16:19,290 --> 00:16:26,310
<font color="#E5E5E5">another neat thing</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> that it</font>

465
00:16:23,280 --> 00:16:27,150
doesn't<font color="#CCCCCC"> always work either so back to</font>

466
00:16:26,310 --> 00:16:30,479
the<font color="#CCCCCC"> drawing board</font>

467
00:16:27,150 --> 00:16:31,680
something else<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we tried actually</font>

468
00:16:30,480 --> 00:16:33,090
<font color="#CCCCCC">here I'm just talking about this you</font>

469
00:16:31,680 --> 00:16:34,500
<font color="#CCCCCC">basically</font><font color="#E5E5E5"> the biggest problem with this</font>

470
00:16:33,090 --> 00:16:36,120
is it creates a nice<font color="#E5E5E5"> little</font><font color="#CCCCCC"> rock gadget</font>

471
00:16:34,500 --> 00:16:38,490
that<font color="#E5E5E5"> you can use</font><font color="#CCCCCC"> within all your other</font>

472
00:16:36,120 --> 00:16:40,230
code something else we tried was was

473
00:16:38,490 --> 00:16:42,030
this<font color="#E5E5E5"> so basically creating a weak</font>

474
00:16:40,230 --> 00:16:43,290
function<font color="#CCCCCC"> what a weak function</font><font color="#E5E5E5"> is if we</font>

475
00:16:42,030 --> 00:16:44,939
were<font color="#E5E5E5"> basically giving a hint to the</font>

476
00:16:43,290 --> 00:16:46,980
linker that<font color="#CCCCCC"> this function</font><font color="#E5E5E5"> could be</font>

477
00:16:44,940 --> 00:16:48,450
replaced<font color="#E5E5E5"> at any time at runtime with</font>

478
00:16:46,980 --> 00:16:50,310
another<font color="#E5E5E5"> function so it</font><font color="#CCCCCC"> basically</font>

479
00:16:48,450 --> 00:16:52,740
prevents the link time optimizer from

480
00:16:50,310 --> 00:16:57,359
being able<font color="#E5E5E5"> to do its work and prevents</font>

481
00:16:52,740 --> 00:16:59,040
it from from working however there's

482
00:16:57,360 --> 00:17:00,990
still an arms race that<font color="#CCCCCC"> you have to do</font>

483
00:16:59,040 --> 00:17:02,939
<font color="#E5E5E5">it turns out that the latest versions of</font>

484
00:17:00,990 --> 00:17:07,470
<font color="#E5E5E5">GCC and LLVM</font><font color="#CCCCCC"> and all that kind of stuff</font>

485
00:17:02,940 --> 00:17:10,800
<font color="#E5E5E5">will still look to see if if if this</font>

486
00:17:07,470 --> 00:17:12,240
works or<font color="#CCCCCC"> not and will</font><font color="#E5E5E5"> well potentially</font>

487
00:17:10,800 --> 00:17:16,200
replace it with with their own versions

488
00:17:12,240 --> 00:17:18,510
<font color="#E5E5E5">so one of the things that we did</font><font color="#CCCCCC"> to</font>

489
00:17:16,200 --> 00:17:21,060
continue sort of pushing the arms race

490
00:17:18,510 --> 00:17:22,829
forward<font color="#E5E5E5"> is try to convince everyone</font>

491
00:17:21,060 --> 00:17:27,210
<font color="#E5E5E5">first of all</font><font color="#CCCCCC"> to this</font><font color="#E5E5E5"> is the right way to</font>

492
00:17:22,829 --> 00:17:30,510
do<font color="#E5E5E5"> it but also creating a way to see go</font>

493
00:17:27,210 --> 00:17:32,010
forward<font color="#E5E5E5"> a way to actually test it let's</font>

494
00:17:30,510 --> 00:17:35,190
see if we can go to<font color="#CCCCCC"> the place where</font>

495
00:17:32,010 --> 00:17:37,830
we're<font color="#CCCCCC"> testing it mmm I didn't clue slide</font>

496
00:17:35,190 --> 00:17:39,000
<font color="#CCCCCC">I'm testing it</font><font color="#E5E5E5"> but the way that we</font>

497
00:17:37,830 --> 00:17:40,500
actually<font color="#E5E5E5"> ended up having to test this</font>

498
00:17:39,000 --> 00:17:41,970
and<font color="#E5E5E5"> so like how do you know that</font><font color="#CCCCCC"> the</font>

499
00:17:40,500 --> 00:17:43,500
compiler<font color="#E5E5E5"> optimized something out or not</font>

500
00:17:41,970 --> 00:17:45,120
<font color="#CCCCCC">without</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> building the code and</font>

501
00:17:43,500 --> 00:17:46,710
testing it in the first place

502
00:17:45,120 --> 00:17:50,158
the way that we figured this out would

503
00:17:46,710 --> 00:17:52,830
was we wrote<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that used signal</font>

504
00:17:50,159 --> 00:17:54,570
handlers<font color="#E5E5E5"> and</font><font color="#CCCCCC"> created an alternate stack</font>

505
00:17:52,830 --> 00:17:56,100
and would change<font color="#CCCCCC"> the</font><font color="#E5E5E5"> memory in the</font>

506
00:17:54,570 --> 00:17:57,389
alternate stack and then<font color="#CCCCCC"> what</font><font color="#E5E5E5"> signal</font>

507
00:17:56,100 --> 00:17:59,370
<font color="#E5E5E5">signal handler and check to see</font><font color="#CCCCCC"> if the</font>

508
00:17:57,390 --> 00:18:00,960
stack changed<font color="#E5E5E5"> under the covers and then</font>

509
00:17:59,370 --> 00:18:03,239
if<font color="#E5E5E5"> that happened then we know new if the</font>

510
00:18:00,960 --> 00:18:05,429
compiler optimized the code out or not

511
00:18:03,240 --> 00:18:07,200
one way that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> work around the the</font>

512
00:18:05,429 --> 00:18:08,640
compilers themselves being extra

513
00:18:07,200 --> 00:18:10,320
optimized is we actually have<font color="#CCCCCC"> a separate</font>

514
00:18:08,640 --> 00:18:12,000
<font color="#E5E5E5">library that we link into Libre cell</font>

515
00:18:10,320 --> 00:18:15,090
that<font color="#E5E5E5"> has all the</font><font color="#CCCCCC"> optimizations disabled</font>

516
00:18:12,000 --> 00:18:16,650
<font color="#E5E5E5">if you do that that for now convinces</font>

517
00:18:15,090 --> 00:18:20,459
most compilers<font color="#E5E5E5"> that you shouldn't</font>

518
00:18:16,650 --> 00:18:22,679
optimize this this code out<font color="#CCCCCC"> something</font>

519
00:18:20,460 --> 00:18:26,039
<font color="#E5E5E5">else to kind of to note is that at least</font>

520
00:18:22,679 --> 00:18:28,799
<font color="#E5E5E5">as a 2016 we didn't have any explicit be</font>

521
00:18:26,039 --> 00:18:32,370
<font color="#CCCCCC">zero or explicit memset</font><font color="#E5E5E5"> inside of G</font>

522
00:18:28,799 --> 00:18:35,190
<font color="#CCCCCC">Lipsy G Lib C 2.24 did eventually</font><font color="#E5E5E5"> adopt</font>

523
00:18:32,370 --> 00:18:36,330
this<font color="#E5E5E5"> they ended up doing their isolation</font>

524
00:18:35,190 --> 00:18:37,710
in a completely different way because

525
00:18:36,330 --> 00:18:39,480
<font color="#E5E5E5">there's a little bit of</font><font color="#CCCCCC"> not invented</font>

526
00:18:37,710 --> 00:18:41,370
<font color="#CCCCCC">here syndrome</font><font color="#E5E5E5"> amongst a lot of different</font>

527
00:18:39,480 --> 00:18:43,169
operating systems<font color="#E5E5E5"> but at least they sort</font>

528
00:18:41,370 --> 00:18:44,850
<font color="#E5E5E5">of adopted the API and sort of accept</font>

529
00:18:43,169 --> 00:18:47,429
responsibility for for implementing it

530
00:18:44,850 --> 00:18:49,020
now<font color="#E5E5E5"> there's still problems with this</font>

531
00:18:47,429 --> 00:18:50,970
there's a recent use next<font color="#E5E5E5"> paper about</font>

532
00:18:49,020 --> 00:18:52,350
debts<font color="#E5E5E5"> to our</font><font color="#CCCCCC"> elimination still being a</font>

533
00:18:50,970 --> 00:18:55,320
<font color="#E5E5E5">problem</font><font color="#CCCCCC"> within a lot of secure software</font>

534
00:18:52,350 --> 00:18:58,439
<font color="#E5E5E5">so strangely enough this is still a</font>

535
00:18:55,320 --> 00:19:00,950
problem<font color="#E5E5E5"> in 2018 with different pieces</font><font color="#CCCCCC"> of</font>

536
00:18:58,440 --> 00:19:03,390
<font color="#CCCCCC">software and different compilers</font>

537
00:19:00,950 --> 00:19:05,370
<font color="#CCCCCC">something to note here is if</font><font color="#E5E5E5"> you read</font>

538
00:19:03,390 --> 00:19:07,230
the current<font color="#CCCCCC"> Linux</font><font color="#E5E5E5"> manual for it it</font>

539
00:19:05,370 --> 00:19:09,418
<font color="#CCCCCC">actually still says explicit B 0 can</font>

540
00:19:07,230 --> 00:19:12,000
decrease<font color="#CCCCCC"> your security if the compiler</font>

541
00:19:09,419 --> 00:19:13,110
<font color="#E5E5E5">is determined enough and decides that</font>

542
00:19:12,000 --> 00:19:15,360
<font color="#CCCCCC">you're all your data stores in a</font>

543
00:19:13,110 --> 00:19:17,070
register<font color="#CCCCCC"> then you can't optimize</font><font color="#E5E5E5"> it out</font>

544
00:19:15,360 --> 00:19:18,770
so it's kind of what those damned if you

545
00:19:17,070 --> 00:19:21,029
do damned if you don't<font color="#E5E5E5"> kind of things</font>

546
00:19:18,770 --> 00:19:22,649
<font color="#CCCCCC">something funny to note is that if you</font>

547
00:19:21,029 --> 00:19:25,770
do some<font color="#CCCCCC"> windows it works perfectly</font><font color="#E5E5E5"> and</font>

548
00:19:22,649 --> 00:19:27,658
has for like a decade<font color="#CCCCCC"> because</font><font color="#E5E5E5"> they had</font><font color="#CCCCCC"> a</font>

549
00:19:25,770 --> 00:19:29,190
<font color="#E5E5E5">secure zero memory function for a long</font>

550
00:19:27,659 --> 00:19:31,110
time they<font color="#E5E5E5"> recognized this as a problem</font>

551
00:19:29,190 --> 00:19:32,700
<font color="#E5E5E5">and so when we added</font><font color="#CCCCCC"> M supposed to be 0</font>

552
00:19:31,110 --> 00:19:34,260
<font color="#CCCCCC">forwarding at the windows was a piece of</font>

553
00:19:32,700 --> 00:19:37,350
<font color="#CCCCCC">cake and you'll find this is</font><font color="#E5E5E5"> actually a</font>

554
00:19:34,260 --> 00:19:40,529
continuing theme in the<font color="#CCCCCC"> windows thing so</font>

555
00:19:37,350 --> 00:19:44,549
arc for random<font color="#CCCCCC"> entropy is hard but</font><font color="#E5E5E5"> why</font>

556
00:19:40,529 --> 00:19:47,610
does it<font color="#CCCCCC"> have to be so hard so prior to</font>

557
00:19:44,549 --> 00:19:49,649
<font color="#CCCCCC">Libre so existing OpenBSD or openness</font>

558
00:19:47,610 --> 00:19:51,479
<font color="#CCCCCC">elf did a lot of</font><font color="#E5E5E5"> weird stuff to</font><font color="#CCCCCC"> create</font>

559
00:19:49,649 --> 00:19:54,479
random<font color="#E5E5E5"> numbers it would do a little bit</font>

560
00:19:51,480 --> 00:19:56,549
<font color="#CCCCCC">of stack and do a little bit of PID</font><font color="#E5E5E5"> it</font>

561
00:19:54,480 --> 00:19:58,169
would try to get<font color="#E5E5E5"> things from good places</font>

562
00:19:56,549 --> 00:19:58,918
<font color="#E5E5E5">and you know dev random and stuff like</font>

563
00:19:58,169 --> 00:20:00,629
that and it

564
00:19:58,919 --> 00:20:03,720
failed it would always fail kind of

565
00:20:00,629 --> 00:20:05,668
crappy<font color="#E5E5E5"> so there was a lot of problems</font>

566
00:20:03,720 --> 00:20:07,230
where there was<font color="#E5E5E5"> just a lot</font><font color="#CCCCCC"> of extra</font>

567
00:20:05,669 --> 00:20:09,119
complexity<font color="#CCCCCC"> and the entropy generator and</font>

568
00:20:07,230 --> 00:20:10,529
<font color="#CCCCCC">OpenSSL</font><font color="#E5E5E5"> in fact that's kind</font><font color="#CCCCCC"> of a</font>

569
00:20:09,119 --> 00:20:12,629
continuing trend<font color="#E5E5E5"> actually recently</font>

570
00:20:10,529 --> 00:20:14,580
rewrote their entropy generator and it's

571
00:20:12,629 --> 00:20:16,799
just as complicated and<font color="#E5E5E5"> just as prone</font>

572
00:20:14,580 --> 00:20:18,779
<font color="#CCCCCC">for failure something we</font><font color="#E5E5E5"> did in</font><font color="#CCCCCC"> Libra as</font>

573
00:20:16,799 --> 00:20:21,889
<font color="#E5E5E5">a cell we actually simplified it down to</font>

574
00:20:18,779 --> 00:20:24,299
this<font color="#E5E5E5"> fact our entire PRNG</font>

575
00:20:21,889 --> 00:20:26,549
system inside<font color="#CCCCCC"> a</font><font color="#E5E5E5"> liver cell</font><font color="#CCCCCC"> fits on this</font>

576
00:20:24,299 --> 00:20:28,408
<font color="#E5E5E5">slide we took out the ability to seed it</font>

577
00:20:26,549 --> 00:20:30,809
<font color="#E5E5E5">we took out the ability</font><font color="#CCCCCC"> to add entropy</font>

578
00:20:28,409 --> 00:20:32,549
and said darn it we're<font color="#E5E5E5"> gonna trust the</font>

579
00:20:30,809 --> 00:20:35,759
operating system<font color="#E5E5E5"> to do the right thing</font>

580
00:20:32,549 --> 00:20:37,109
<font color="#E5E5E5">and always give us random data so we</font>

581
00:20:35,759 --> 00:20:38,879
just<font color="#E5E5E5"> call our four random buff whenever</font>

582
00:20:37,109 --> 00:20:42,509
we need random bytes<font color="#E5E5E5"> now you might ask</font>

583
00:20:38,879 --> 00:20:44,070
well what if it does fail<font color="#E5E5E5"> well</font><font color="#CCCCCC"> Ark for</font>

584
00:20:42,509 --> 00:20:47,340
random is defined as not being<font color="#E5E5E5"> able to</font>

585
00:20:44,070 --> 00:20:48,899
fail so if it can't generate random

586
00:20:47,340 --> 00:20:52,350
numbers<font color="#CCCCCC"> it</font><font color="#E5E5E5"> actually will crash your</font>

587
00:20:48,899 --> 00:20:54,600
<font color="#CCCCCC">program there's no other alternative to</font>

588
00:20:52,350 --> 00:20:57,570
it<font color="#E5E5E5"> so we'll</font><font color="#CCCCCC"> talk a little</font><font color="#E5E5E5"> bit about the</font>

589
00:20:54,600 --> 00:20:58,799
primitives<font color="#CCCCCC"> that go with that</font><font color="#E5E5E5"> so in 2014</font>

590
00:20:57,570 --> 00:21:00,960
<font color="#E5E5E5">when I was doing my</font><font color="#CCCCCC"> intrusion</font><font color="#E5E5E5"> Allah port</font>

591
00:20:58,799 --> 00:21:01,799
<font color="#CCCCCC">my first</font><font color="#E5E5E5"> thought was well suit I need an</font>

592
00:21:00,960 --> 00:21:03,179
<font color="#E5E5E5">ark for</font><font color="#CCCCCC"> rent on the works a lot</font>

593
00:21:01,799 --> 00:21:04,918
<font color="#E5E5E5">different operating systems where am I</font>

594
00:21:03,179 --> 00:21:07,409
gonna get one<font color="#CCCCCC"> well there was a there's a</font>

595
00:21:04,919 --> 00:21:09,029
program called leap Lib<font color="#CCCCCC"> BSD you might</font>

596
00:21:07,409 --> 00:21:10,230
have seen it before<font color="#E5E5E5"> it's actually still</font>

597
00:21:09,029 --> 00:21:13,259
shipped with a lot<font color="#E5E5E5"> of operating systems</font>

598
00:21:10,230 --> 00:21:16,879
<font color="#CCCCCC">and</font><font color="#E5E5E5"> I didn't bother looking at how it</font>

599
00:21:13,259 --> 00:21:19,200
worked<font color="#CCCCCC"> so anyway I incorporated</font><font color="#E5E5E5"> it and</font>

600
00:21:16,879 --> 00:21:21,059
assumed<font color="#E5E5E5"> that the up screen developer had</font>

601
00:21:19,200 --> 00:21:23,309
to implement<font color="#CCCCCC"> arc for random well but</font>

602
00:21:21,059 --> 00:21:26,249
then someone wrote a blog about<font color="#CCCCCC"> my port</font>

603
00:21:23,309 --> 00:21:29,190
and told me how insecure it was and how

604
00:21:26,249 --> 00:21:30,029
terrible<font color="#CCCCCC"> was and then said basically</font><font color="#E5E5E5"> you</font>

605
00:21:29,190 --> 00:21:30,269
know this<font color="#E5E5E5"> guy doesn't</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> what he's</font>

606
00:21:30,029 --> 00:21:32,009
doing

607
00:21:30,269 --> 00:21:33,929
and so I<font color="#E5E5E5"> wasn't looking at</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> and yeah</font>

608
00:21:32,009 --> 00:21:36,090
it calls get time<font color="#E5E5E5"> of day and get PID and</font>

609
00:21:33,929 --> 00:21:37,889
mixes<font color="#CCCCCC"> it together and that's not</font><font color="#E5E5E5"> great</font>

610
00:21:36,090 --> 00:21:39,840
<font color="#CCCCCC">because it</font><font color="#E5E5E5"> creates very predictable</font>

611
00:21:37,889 --> 00:21:43,619
<font color="#E5E5E5">entropy States almost Debian level but</font>

612
00:21:39,840 --> 00:21:44,939
not<font color="#E5E5E5"> quite and so anyway it was nice to</font>

613
00:21:43,619 --> 00:21:46,230
be<font color="#E5E5E5"> able read a blog post to be semi</font>

614
00:21:44,940 --> 00:21:49,859
<font color="#E5E5E5">internet famous for a little while but</font>

615
00:21:46,230 --> 00:21:51,419
<font color="#E5E5E5">we went and</font><font color="#CCCCCC"> fixed it so take two well I</font>

616
00:21:49,859 --> 00:21:52,408
found the code from<font color="#CCCCCC"> OpenSSH and I</font>

617
00:21:51,419 --> 00:21:53,820
thought well those<font color="#E5E5E5"> guys know what</font>

618
00:21:52,409 --> 00:21:55,799
<font color="#E5E5E5">they're doing right I'll use</font><font color="#CCCCCC"> their code</font>

619
00:21:53,820 --> 00:21:57,029
but turns out<font color="#E5E5E5"> they used open SSL random</font>

620
00:21:55,799 --> 00:21:59,519
number generator so it's kind of a

621
00:21:57,029 --> 00:22:01,109
chicken<font color="#CCCCCC"> and egg</font><font color="#E5E5E5"> problem so screw</font><font color="#CCCCCC"> it I'm</font>

622
00:21:59,519 --> 00:22:02,460
<font color="#E5E5E5">gonna use this guy</font><font color="#CCCCCC"> this thing called Lib</font>

623
00:22:01,109 --> 00:22:07,349
Audrey<font color="#E5E5E5"> that looks really good and</font>

624
00:22:02,460 --> 00:22:08,789
complicated I don't know<font color="#CCCCCC"> but if you look</font>

625
00:22:07,349 --> 00:22:10,349
up<font color="#CCCCCC"> liberati</font><font color="#E5E5E5"> you can look up their github</font>

626
00:22:08,789 --> 00:22:12,239
page it basically says that<font color="#E5E5E5"> like your</font>

627
00:22:10,349 --> 00:22:12,790
eyes will<font color="#CCCCCC"> bleed and monkeys will come</font>

628
00:22:12,239 --> 00:22:14,740
down<font color="#E5E5E5"> from this</font>

629
00:22:12,790 --> 00:22:17,080
guy if you use this for anything<font color="#E5E5E5"> they</font>

630
00:22:14,740 --> 00:22:17,560
<font color="#E5E5E5">actually need security</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> you know what</font>

631
00:22:17,080 --> 00:22:18,760
do I do

632
00:22:17,560 --> 00:22:20,830
so anyway this<font color="#CCCCCC"> is actually kind of cool</font>

633
00:22:18,760 --> 00:22:22,629
<font color="#E5E5E5">the OpenBSD guys actually came</font><font color="#CCCCCC"> to me</font><font color="#E5E5E5"> and</font>

634
00:22:20,830 --> 00:22:25,570
<font color="#CCCCCC">said hey we'll help you figure</font><font color="#E5E5E5"> this out</font>

635
00:22:22,630 --> 00:22:26,770
<font color="#E5E5E5">we will build hooks into our random</font>

636
00:22:25,570 --> 00:22:28,629
number<font color="#E5E5E5"> generator that allow you to hook</font>

637
00:22:26,770 --> 00:22:31,330
into<font color="#CCCCCC"> OS intrinsics</font><font color="#E5E5E5"> and write your own</font>

638
00:22:28,630 --> 00:22:34,830
<font color="#CCCCCC">portable versions in fact we even got</font>

639
00:22:31,330 --> 00:22:37,270
the OpenBSD team to write<font color="#CCCCCC"> Windows</font><font color="#E5E5E5"> code</font>

640
00:22:34,830 --> 00:22:39,340
<font color="#CCCCCC">if you look in the OpenBSD tree under</font>

641
00:22:37,270 --> 00:22:41,470
lip<font color="#CCCCCC"> live crypto</font><font color="#E5E5E5"> there's actually</font>

642
00:22:39,340 --> 00:22:42,550
versions of<font color="#E5E5E5"> arc for random for like</font><font color="#CCCCCC"> six</font>

643
00:22:41,470 --> 00:22:44,080
different<font color="#E5E5E5"> operating systems in the</font>

644
00:22:42,550 --> 00:22:46,060
<font color="#E5E5E5">OpenBSD tree that and those are</font>

645
00:22:44,080 --> 00:22:48,850
<font color="#E5E5E5">explicitly there for anyone to use</font>

646
00:22:46,060 --> 00:22:51,490
<font color="#E5E5E5">within their code or within you know</font>

647
00:22:48,850 --> 00:22:53,050
their own portable<font color="#E5E5E5"> libraries and we put</font>

648
00:22:51,490 --> 00:22:54,190
that<font color="#CCCCCC"> there</font><font color="#E5E5E5"> intentionally hoping that</font>

649
00:22:53,050 --> 00:22:56,430
people would<font color="#CCCCCC"> notice it</font><font color="#E5E5E5"> and would say oh</font>

650
00:22:54,190 --> 00:22:59,110
here's how we<font color="#E5E5E5"> can generate entropy</font>

651
00:22:56,430 --> 00:23:03,010
<font color="#E5E5E5">random numbers well and in kind of a</font>

652
00:22:59,110 --> 00:23:04,840
predictable<font color="#E5E5E5"> and non fallible way</font><font color="#CCCCCC"> whether</font>

653
00:23:03,010 --> 00:23:07,060
<font color="#E5E5E5">people actually pick those up or not</font><font color="#CCCCCC"> is</font>

654
00:23:04,840 --> 00:23:09,070
an open question<font color="#E5E5E5"> but you know we tried</font>

655
00:23:07,060 --> 00:23:10,780
<font color="#E5E5E5">our</font><font color="#CCCCCC"> best one of</font><font color="#E5E5E5"> the things that our</font>

656
00:23:09,070 --> 00:23:13,300
random does it's also important is that

657
00:23:10,780 --> 00:23:14,350
<font color="#E5E5E5">every time you fork a process it</font>

658
00:23:13,300 --> 00:23:17,080
automatically clears out<font color="#E5E5E5"> of state that</font>

659
00:23:14,350 --> 00:23:19,449
<font color="#CCCCCC">way if you if to give a child Forks from</font>

660
00:23:17,080 --> 00:23:20,740
a parent you<font color="#E5E5E5"> don't end up cloning the</font>

661
00:23:19,450 --> 00:23:22,390
crypto<font color="#E5E5E5"> state and you don't end up</font><font color="#CCCCCC"> like</font>

662
00:23:20,740 --> 00:23:23,830
<font color="#CCCCCC">safe you were both generating an RSA key</font>

663
00:23:22,390 --> 00:23:26,890
or<font color="#CCCCCC"> something like that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> don't end</font><font color="#E5E5E5"> up</font>

664
00:23:23,830 --> 00:23:28,179
with the<font color="#E5E5E5"> same key</font><font color="#CCCCCC"> simultaneously so one</font>

665
00:23:26,890 --> 00:23:29,890
<font color="#CCCCCC">of the things open beastie has is that</font>

666
00:23:28,180 --> 00:23:31,720
<font color="#CCCCCC">you can allocate</font><font color="#E5E5E5"> memory that never is</font>

667
00:23:29,890 --> 00:23:34,150
<font color="#E5E5E5">inherited</font><font color="#CCCCCC"> by your</font><font color="#E5E5E5"> children right it's</font>

668
00:23:31,720 --> 00:23:39,280
just<font color="#E5E5E5"> a simple in map flap and in that</font>

669
00:23:34,150 --> 00:23:42,790
flab<font color="#E5E5E5"> in map flag and and so that's how</font>

670
00:23:39,280 --> 00:23:44,350
they do it<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it turns out that other</font>

671
00:23:42,790 --> 00:23:45,940
operating systems<font color="#E5E5E5"> don't have a reliable</font>

672
00:23:44,350 --> 00:23:47,350
<font color="#E5E5E5">way to do that</font>

673
00:23:45,940 --> 00:23:49,630
another thing the open<font color="#CCCCCC"> BC added was a</font>

674
00:23:47,350 --> 00:23:51,250
call called get entropy<font color="#E5E5E5"> and this is a</font>

675
00:23:49,630 --> 00:23:53,980
call<font color="#E5E5E5"> through the operating system again</font>

676
00:23:51,250 --> 00:23:56,830
a call that cannot fail<font color="#CCCCCC"> and it returns</font>

677
00:23:53,980 --> 00:23:58,570
up to 128 bits of entropy<font color="#E5E5E5"> and that's</font>

678
00:23:56,830 --> 00:24:00,820
supposedly<font color="#E5E5E5"> all you need to proceed</font><font color="#CCCCCC"> a</font>

679
00:23:58,570 --> 00:24:02,740
random number<font color="#CCCCCC"> generator we gave</font><font color="#E5E5E5"> it out</font>

680
00:24:00,820 --> 00:24:04,950
there<font color="#E5E5E5"> again to hopefully other operating</font>

681
00:24:02,740 --> 00:24:06,790
systems would<font color="#CCCCCC"> implement</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> and</font>

682
00:24:04,950 --> 00:24:08,500
<font color="#E5E5E5">unfortunately there really wasn't a</font>

683
00:24:06,790 --> 00:24:12,820
great<font color="#CCCCCC"> way to do</font><font color="#E5E5E5"> it in any operating</font>

684
00:24:08,500 --> 00:24:15,430
system please not in 2014 so some<font color="#CCCCCC"> of the</font>

685
00:24:12,820 --> 00:24:20,830
things<font color="#E5E5E5"> that we did to implement ones</font>

686
00:24:15,430 --> 00:24:22,900
that would work well you<font color="#CCCCCC"> see</font><font color="#E5E5E5"> this good</font>

687
00:24:20,830 --> 00:24:25,070
<font color="#E5E5E5">entropy</font><font color="#CCCCCC"> Linux Tutsi</font>

688
00:24:22,900 --> 00:24:26,990
there's a lot of sausage in<font color="#E5E5E5"> there</font>

689
00:24:25,070 --> 00:24:29,480
or I guess<font color="#E5E5E5"> sausage-making going on in</font>

690
00:24:26,990 --> 00:24:31,940
there<font color="#CCCCCC"> under the covers what it does is</font>

691
00:24:29,480 --> 00:24:33,890
<font color="#E5E5E5">if it basically can't get random numbers</font>

692
00:24:31,940 --> 00:24:35,630
from<font color="#CCCCCC"> Debu random which is supposed to</font><font color="#E5E5E5"> be</font>

693
00:24:33,890 --> 00:24:38,720
<font color="#CCCCCC">secure on Linux</font>

694
00:24:35,630 --> 00:24:40,910
it tries deprecated<font color="#E5E5E5"> syscall if that</font>

695
00:24:38,720 --> 00:24:43,450
doesn't work<font color="#CCCCCC"> it</font><font color="#E5E5E5"> falls back to the most</font>

696
00:24:40,910 --> 00:24:46,430
crazy well<font color="#E5E5E5"> it's really</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> best effort</font>

697
00:24:43,450 --> 00:24:47,750
<font color="#CCCCCC">it's better than pids and get time of</font>

698
00:24:46,430 --> 00:24:51,050
day<font color="#E5E5E5"> because it actually looks at like</font>

699
00:24:47,750 --> 00:24:52,310
<font color="#CCCCCC">you're a SLR</font><font color="#E5E5E5"> it looks at things that are</font>

700
00:24:51,050 --> 00:24:53,360
pushed<font color="#E5E5E5"> onto the stack it looks at the</font>

701
00:24:52,310 --> 00:24:55,070
entropy<font color="#CCCCCC"> that comes from your memory</font>

702
00:24:53,360 --> 00:24:57,290
allocator<font color="#CCCCCC"> it looks at a lot of</font><font color="#E5E5E5"> different</font>

703
00:24:55,070 --> 00:25:00,020
<font color="#CCCCCC">stuff but in the process of generating</font>

704
00:24:57,290 --> 00:25:02,870
<font color="#CCCCCC">this you know you know better fall back</font>

705
00:25:00,020 --> 00:25:04,100
<font color="#E5E5E5">it's you can see multiple orders of</font>

706
00:25:02,870 --> 00:25:06,020
magnitude slower so<font color="#E5E5E5"> you don't want to</font>

707
00:25:04,100 --> 00:25:09,219
<font color="#E5E5E5">hit this if you don't</font><font color="#CCCCCC"> have to but</font><font color="#E5E5E5"> we</font>

708
00:25:06,020 --> 00:25:11,300
started working with<font color="#E5E5E5"> Ted so</font><font color="#CCCCCC"> and got</font>

709
00:25:09,220 --> 00:25:15,230
something like<font color="#E5E5E5"> get entropy added to the</font>

710
00:25:11,300 --> 00:25:16,909
<font color="#E5E5E5">Linux kernel but unfortunately they</font>

711
00:25:15,230 --> 00:25:20,030
decided to<font color="#CCCCCC"> implement something</font><font color="#E5E5E5"> a little</font>

712
00:25:16,910 --> 00:25:22,730
bit different than get entropy<font color="#E5E5E5"> normally</font>

713
00:25:20,030 --> 00:25:25,430
<font color="#CCCCCC">open BSD</font><font color="#E5E5E5"> requires that you not ask</font><font color="#CCCCCC"> for</font>

714
00:25:22,730 --> 00:25:26,960
more<font color="#CCCCCC"> than 256 bytes</font><font color="#E5E5E5"> of entropy at a time</font>

715
00:25:25,430 --> 00:25:28,430
and the whole reason<font color="#E5E5E5"> for that is so</font><font color="#CCCCCC"> you</font>

716
00:25:26,960 --> 00:25:33,440
<font color="#E5E5E5">don't end up with</font><font color="#CCCCCC"> the exhaustion of your</font>

717
00:25:28,430 --> 00:25:36,860
entropy generator<font color="#E5E5E5"> over time it took a</font>

718
00:25:33,440 --> 00:25:40,370
while<font color="#CCCCCC"> for others to adopt it and about</font>

719
00:25:36,860 --> 00:25:42,229
<font color="#E5E5E5">the</font><font color="#CCCCCC"> only OS that didn't quite just adopt</font>

720
00:25:40,370 --> 00:25:45,080
it exactly<font color="#CCCCCC"> like</font><font color="#E5E5E5"> we specified</font><font color="#CCCCCC"> in open BSD</font>

721
00:25:42,230 --> 00:25:46,160
<font color="#E5E5E5">was Linux and that's because a lot</font><font color="#CCCCCC"> of</font>

722
00:25:45,080 --> 00:25:48,169
people decided<font color="#CCCCCC"> that</font><font color="#E5E5E5"> they needed to</font>

723
00:25:46,160 --> 00:25:50,480
<font color="#E5E5E5">create Monte Carlo simulations and they</font>

724
00:25:48,170 --> 00:25:52,430
<font color="#E5E5E5">needed you know lots of weird little</font>

725
00:25:50,480 --> 00:25:53,510
tweaks and what if I need more<font color="#E5E5E5"> 256 bytes</font>

726
00:25:52,430 --> 00:25:55,070
I don't know we need<font color="#E5E5E5"> to make it</font>

727
00:25:53,510 --> 00:25:56,300
<font color="#CCCCCC">generalize for everybody so intimate</font>

728
00:25:55,070 --> 00:25:58,120
<font color="#E5E5E5">ended up adding something</font><font color="#CCCCCC"> called get</font>

729
00:25:56,300 --> 00:26:03,620
random does anyone here know get random

730
00:25:58,120 --> 00:26:05,330
<font color="#CCCCCC">no ok Adam knows get random so anyway a</font>

731
00:26:03,620 --> 00:26:07,280
committee got involved<font color="#CCCCCC"> a bunch</font><font color="#E5E5E5"> of people</font>

732
00:26:05,330 --> 00:26:08,870
started making requests and we ended<font color="#CCCCCC"> up</font>

733
00:26:07,280 --> 00:26:12,139
with something<font color="#E5E5E5"> called get random get</font>

734
00:26:08,870 --> 00:26:15,379
random is<font color="#CCCCCC"> ok but it has a lot of failure</font>

735
00:26:12,140 --> 00:26:17,780
modes<font color="#E5E5E5"> and we get a lot</font><font color="#CCCCCC"> more ways to</font>

736
00:26:15,380 --> 00:26:20,330
exercise our fallback code in<font color="#E5E5E5"> that</font>

737
00:26:17,780 --> 00:26:22,220
particular case if you follow like say

738
00:26:20,330 --> 00:26:24,290
Python or Ruby or<font color="#CCCCCC"> a few different</font>

739
00:26:22,220 --> 00:26:25,790
languages<font color="#CCCCCC"> that</font><font color="#E5E5E5"> end up being used</font><font color="#CCCCCC"> in like</font>

740
00:26:24,290 --> 00:26:26,990
systems not in<font color="#E5E5E5"> social systems</font>

741
00:26:25,790 --> 00:26:28,850
programming but like early in<font color="#CCCCCC"> the boot</font>

742
00:26:26,990 --> 00:26:30,590
process<font color="#CCCCCC"> you might have noticed that</font>

743
00:26:28,850 --> 00:26:32,959
<font color="#E5E5E5">there's been</font><font color="#CCCCCC"> some bugs that have</font><font color="#E5E5E5"> come</font><font color="#CCCCCC"> up</font>

744
00:26:30,590 --> 00:26:34,310
<font color="#CCCCCC">with get random in early entropy</font>

745
00:26:32,960 --> 00:26:36,320
generation and that<font color="#E5E5E5"> sort of stuff</font><font color="#CCCCCC"> just</font>

746
00:26:34,310 --> 00:26:37,520
<font color="#E5E5E5">because it can fail or</font><font color="#CCCCCC"> it cannot fail</font>

747
00:26:36,320 --> 00:26:39,110
and it might hang

748
00:26:37,520 --> 00:26:40,960
might not<font color="#E5E5E5"> hang and so there's a lot of</font>

749
00:26:39,110 --> 00:26:43,790
<font color="#E5E5E5">issues</font><font color="#CCCCCC"> with it</font>

750
00:26:40,960 --> 00:26:46,160
however turns out that<font color="#E5E5E5"> windows had a</font>

751
00:26:43,790 --> 00:26:49,750
<font color="#CCCCCC">built-in way to do</font><font color="#E5E5E5"> this all along and</font><font color="#CCCCCC"> so</font>

752
00:26:46,160 --> 00:26:52,370
you call<font color="#CCCCCC"> grip gen random</font><font color="#E5E5E5"> and you get a</font>

753
00:26:49,750 --> 00:26:53,960
perfect random<font color="#E5E5E5"> vision generator</font><font color="#CCCCCC"> at least</font>

754
00:26:52,370 --> 00:26:56,959
one<font color="#E5E5E5"> that we're currently trusting the OS</font>

755
00:26:53,960 --> 00:26:58,000
<font color="#E5E5E5">to to provide it for us</font><font color="#CCCCCC"> like I said</font>

756
00:26:56,960 --> 00:27:00,140
<font color="#E5E5E5">before we have eight different</font>

757
00:26:58,000 --> 00:27:02,360
<font color="#E5E5E5">implementations of get entropy again</font>

758
00:27:00,140 --> 00:27:03,320
they're<font color="#CCCCCC"> all in the OpenBSD tree</font><font color="#E5E5E5"> you can</font>

759
00:27:02,360 --> 00:27:08,870
use them

760
00:27:03,320 --> 00:27:11,270
I believe freebsd linux net bsd OSX and

761
00:27:08,870 --> 00:27:14,090
solaris<font color="#E5E5E5"> have all implemented since then</font>

762
00:27:11,270 --> 00:27:15,260
their own versions of get entropy<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so</font>

763
00:27:14,090 --> 00:27:16,970
that basically<font color="#E5E5E5"> means</font><font color="#CCCCCC"> that the lis rest</font>

764
00:27:15,260 --> 00:27:19,010
of<font color="#E5E5E5"> cell code does not ever call any</font><font color="#CCCCCC"> of</font>

765
00:27:16,970 --> 00:27:20,780
these fallback functions if those<font color="#E5E5E5"> other</font>

766
00:27:19,010 --> 00:27:21,950
<font color="#E5E5E5">versions are available and that's</font>

767
00:27:20,780 --> 00:27:24,710
<font color="#E5E5E5">actually pretty</font><font color="#CCCCCC"> cool because that means</font>

768
00:27:21,950 --> 00:27:26,179
<font color="#E5E5E5">that now these kind of secure easy to</font>

769
00:27:24,710 --> 00:27:28,250
<font color="#E5E5E5">use crypto primitives are now</font><font color="#CCCCCC"> available</font>

770
00:27:26,179 --> 00:27:30,050
in a lot<font color="#CCCCCC"> of operating systems</font><font color="#E5E5E5"> partly</font>

771
00:27:28,250 --> 00:27:34,850
<font color="#E5E5E5">because we push</font><font color="#CCCCCC"> libros</font><font color="#E5E5E5"> to sell out into</font>

772
00:27:30,050 --> 00:27:37,909
the<font color="#CCCCCC"> ecosystem in 2018 where's</font><font color="#E5E5E5"> arc for</font>

773
00:27:34,850 --> 00:27:39,530
random<font color="#E5E5E5"> now a lot of people</font><font color="#CCCCCC"> think Oh</font><font color="#E5E5E5"> Lee</font>

774
00:27:37,910 --> 00:27:41,090
<font color="#E5E5E5">versus</font><font color="#CCCCCC"> L all you guys need is</font><font color="#E5E5E5"> get get</font>

775
00:27:39,530 --> 00:27:42,620
entropy to work<font color="#E5E5E5"> well actually I don't</font>

776
00:27:41,090 --> 00:27:44,899
<font color="#E5E5E5">want get entropy I want our current</font>

777
00:27:42,620 --> 00:27:46,340
which is<font color="#E5E5E5"> really the the user space</font><font color="#CCCCCC"> API</font>

778
00:27:44,900 --> 00:27:49,120
that you want for generating<font color="#E5E5E5"> random</font>

779
00:27:46,340 --> 00:27:53,540
numbers<font color="#CCCCCC"> we still have some blacklists</font>

780
00:27:49,120 --> 00:27:55,659
<font color="#CCCCCC">OSX</font><font color="#E5E5E5"> at least 10.12 still had a are to</font>

781
00:27:53,540 --> 00:27:59,230
911 had a<font color="#CCCCCC"> non-complying</font><font color="#E5E5E5"> arc for random</font>

782
00:27:55,660 --> 00:28:02,000
<font color="#E5E5E5">they had some problems with</font><font color="#CCCCCC"> reseeding</font>

783
00:27:59,230 --> 00:28:03,770
freebsd<font color="#E5E5E5"> i thought worked very recently</font>

784
00:28:02,000 --> 00:28:06,470
but<font color="#CCCCCC"> I tried it again</font><font color="#E5E5E5"> recently and it</font>

785
00:28:03,770 --> 00:28:09,110
still fails all the fork tests<font color="#CCCCCC"> that</font>

786
00:28:06,470 --> 00:28:10,550
beastie 700<font color="#E5E5E5"> Solaris a lot of them now</font>

787
00:28:09,110 --> 00:28:12,139
actually provide are for random which is

788
00:28:10,550 --> 00:28:14,120
really great<font color="#E5E5E5"> I like the fact that now</font>

789
00:28:12,140 --> 00:28:19,820
that's<font color="#E5E5E5"> actually available</font><font color="#CCCCCC"> unfortunately</font>

790
00:28:14,120 --> 00:28:21,709
<font color="#E5E5E5">and I include that yeah</font><font color="#CCCCCC"> we tried to get</font>

791
00:28:19,820 --> 00:28:23,899
this get arc for random specified as an

792
00:28:21,710 --> 00:28:25,130
actual standard<font color="#E5E5E5"> and because a lot of</font>

793
00:28:23,900 --> 00:28:27,080
people objected the fact that<font color="#CCCCCC"> it had the</font>

794
00:28:25,130 --> 00:28:28,400
word arc<font color="#CCCCCC"> 4 in it</font><font color="#E5E5E5"> which implied that you</font>

795
00:28:27,080 --> 00:28:31,699
should use art for it doesn't<font color="#E5E5E5"> actually</font>

796
00:28:28,400 --> 00:28:32,990
<font color="#CCCCCC">use that</font><font color="#E5E5E5"> algorithm anymore</font><font color="#CCCCCC"> a lot of</font>

797
00:28:31,700 --> 00:28:34,730
folks kind<font color="#E5E5E5"> of balked at it just based on</font>

798
00:28:32,990 --> 00:28:37,640
the name unfortunately<font color="#CCCCCC"> guys stuck in</font>

799
00:28:34,730 --> 00:28:39,650
<font color="#CCCCCC">committee and</font><font color="#E5E5E5"> so it sort of sits there</font>

800
00:28:37,640 --> 00:28:41,860
<font color="#CCCCCC">for the next</font><font color="#E5E5E5"> last</font><font color="#CCCCCC"> four years and</font><font color="#E5E5E5"> and</font>

801
00:28:39,650 --> 00:28:44,090
it's<font color="#E5E5E5"> not really moving forward so</font>

802
00:28:41,860 --> 00:28:45,969
hopefully it'll just<font color="#CCCCCC"> become an ad hoc</font>

803
00:28:44,090 --> 00:28:48,620
standard and everyone will implement it

804
00:28:45,970 --> 00:28:50,690
<font color="#CCCCCC">here's that here's a here's a one of the</font>

805
00:28:48,620 --> 00:28:51,199
<font color="#CCCCCC">peer and G bugs that recently</font><font color="#E5E5E5"> came up</font>

806
00:28:50,690 --> 00:28:54,970
<font color="#CCCCCC">and</font><font color="#E5E5E5"> on the</font>

807
00:28:51,200 --> 00:28:57,669
mailing lists with regards to get

808
00:28:54,970 --> 00:29:03,139
intricate random<font color="#E5E5E5"> or what was it called</font>

809
00:28:57,669 --> 00:29:04,370
get random yeah with it with<font color="#E5E5E5"> regards to</font>

810
00:29:03,139 --> 00:29:08,570
<font color="#CCCCCC">the Lennox PRNG having early</font>

811
00:29:04,370 --> 00:29:10,189
initialization issues<font color="#CCCCCC"> now</font><font color="#E5E5E5"> all hope is</font>

812
00:29:08,570 --> 00:29:14,240
not lost there's actually<font color="#E5E5E5"> a</font><font color="#CCCCCC"> GFC patch</font>

813
00:29:10,190 --> 00:29:16,460
that's current<font color="#E5E5E5"> for that's sitting in the</font>

814
00:29:14,240 --> 00:29:18,350
patch queue for<font color="#E5E5E5"> implementing our for</font>

815
00:29:16,460 --> 00:29:20,630
random<font color="#CCCCCC"> maybe about twenty years after</font>

816
00:29:18,350 --> 00:29:23,178
we've inflated<font color="#CCCCCC"> and</font><font color="#E5E5E5"> OpenBSD it'll show up</font>

817
00:29:20,630 --> 00:29:24,350
but we'll see<font color="#CCCCCC"> if you've ever implemented</font>

818
00:29:23,179 --> 00:29:25,940
<font color="#CCCCCC">Linux from scratch</font>

819
00:29:24,350 --> 00:29:30,649
it does include it as a patch by default

820
00:29:25,940 --> 00:29:32,450
which is<font color="#E5E5E5"> very nice so one final story of</font>

821
00:29:30,649 --> 00:29:34,250
ways<font color="#E5E5E5"> that we sort of</font><font color="#CCCCCC"> moved the ecosystem</font>

822
00:29:32,450 --> 00:29:37,639
forward is around<font color="#E5E5E5"> environment variables</font>

823
00:29:34,250 --> 00:29:39,440
so if you ever used openness to sell in

824
00:29:37,639 --> 00:29:40,490
anger<font color="#E5E5E5"> before</font><font color="#CCCCCC"> you might have noticed that</font>

825
00:29:39,440 --> 00:29:42,830
there's a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of environment variables</font>

826
00:29:40,490 --> 00:29:44,960
that changes behavior<font color="#CCCCCC"> it's not really a</font>

827
00:29:42,830 --> 00:29:46,908
<font color="#E5E5E5">great</font><font color="#CCCCCC"> idea for libraries to be</font><font color="#E5E5E5"> tweakable</font>

828
00:29:44,960 --> 00:29:48,409
<font color="#E5E5E5">by the user based on environment</font>

829
00:29:46,909 --> 00:29:50,600
variables<font color="#CCCCCC"> so there's a lot of issues</font>

830
00:29:48,409 --> 00:29:52,549
<font color="#E5E5E5">with different OS vendors like Red Hat</font>

831
00:29:50,600 --> 00:29:54,080
patches<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> open SSL to be able to</font>

832
00:29:52,549 --> 00:29:56,679
respond to Red Hat specific environment

833
00:29:54,080 --> 00:29:59,449
variables<font color="#CCCCCC"> there's a lot of problems with</font>

834
00:29:56,679 --> 00:30:01,850
with processes<font color="#E5E5E5"> that raise privileges</font>

835
00:29:59,450 --> 00:30:03,679
<font color="#E5E5E5">whether or not they look at their own</font>

836
00:30:01,850 --> 00:30:07,668
<font color="#CCCCCC">environment variables or they forget</font>

837
00:30:03,679 --> 00:30:08,809
ones that are<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are unsafe is it kind</font>

838
00:30:07,669 --> 00:30:13,039
<font color="#CCCCCC">of an issue</font><font color="#E5E5E5"> especially if I like a set</font>

839
00:30:08,809 --> 00:30:17,539
UID binary the user controls<font color="#E5E5E5"> so under</font>

840
00:30:13,039 --> 00:30:19,490
the covers<font color="#E5E5E5"> open SSL uses a kind</font><font color="#CCCCCC"> of an ad</font>

841
00:30:17,539 --> 00:30:22,100
<font color="#CCCCCC">hoc version of a function call</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> set</font>

842
00:30:19,490 --> 00:30:24,740
you GID<font color="#E5E5E5"> basically that the the idea</font>

843
00:30:22,100 --> 00:30:27,289
behind this function is if a process is

844
00:30:24,740 --> 00:30:30,260
<font color="#E5E5E5">ever escalated privileges</font><font color="#CCCCCC"> is that you</font>

845
00:30:27,289 --> 00:30:32,029
GID should be set<font color="#E5E5E5"> so basically if you've</font>

846
00:30:30,260 --> 00:30:34,100
ever escalated the<font color="#E5E5E5"> route maybe you could</font>

847
00:30:32,029 --> 00:30:36,380
come<font color="#E5E5E5"> back down to</font><font color="#CCCCCC"> a regular user</font><font color="#E5E5E5"> if you</font>

848
00:30:34,100 --> 00:30:38,779
have an Escalade double process<font color="#E5E5E5"> it needs</font>

849
00:30:36,380 --> 00:30:40,880
to<font color="#E5E5E5"> always have is that you GID set</font>

850
00:30:38,779 --> 00:30:41,750
because that<font color="#CCCCCC"> will mean that you should</font>

851
00:30:40,880 --> 00:30:43,880
<font color="#CCCCCC">not trust</font><font color="#E5E5E5"> any of your environment</font>

852
00:30:41,750 --> 00:30:46,399
variables<font color="#E5E5E5"> basically that that trust has</font>

853
00:30:43,880 --> 00:30:48,200
<font color="#E5E5E5">been breached</font><font color="#CCCCCC"> what we found is that this</font>

854
00:30:46,399 --> 00:30:51,080
function<font color="#CCCCCC"> is broken</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> a lot of operating</font>

855
00:30:48,200 --> 00:30:53,480
systems<font color="#CCCCCC"> most of the</font><font color="#E5E5E5"> BSD is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> Mac OS</font>

856
00:30:51,080 --> 00:30:54,799
<font color="#CCCCCC">implement is a</font><font color="#E5E5E5"> Cisco almost everyone</font>

857
00:30:53,480 --> 00:30:58,220
<font color="#CCCCCC">else implemented as kind of</font><font color="#E5E5E5"> an ad-hoc</font>

858
00:30:54,799 --> 00:31:01,220
<font color="#CCCCCC">Lipsy function which had a lot of</font><font color="#E5E5E5"> actual</font>

859
00:30:58,220 --> 00:31:02,659
<font color="#CCCCCC">time of</font><font color="#E5E5E5"> check time abuse functions you</font>

860
00:31:01,220 --> 00:31:05,100
look at this<font color="#E5E5E5"> function here</font><font color="#CCCCCC"> this is a</font>

861
00:31:02,659 --> 00:31:06,690
simplified<font color="#CCCCCC"> version that was</font><font color="#E5E5E5"> an open SSL</font>

862
00:31:05,100 --> 00:31:09,059
basically<font color="#E5E5E5"> check to see if</font><font color="#CCCCCC"> my user ID is</font>

863
00:31:06,690 --> 00:31:10,650
my effective user ID and my group ID is

864
00:31:09,059 --> 00:31:11,879
my effective group ID<font color="#E5E5E5"> but you can</font>

865
00:31:10,650 --> 00:31:13,559
actually<font color="#E5E5E5"> be changing both of these</font>

866
00:31:11,880 --> 00:31:15,720
<font color="#E5E5E5">things while you're running this test so</font>

867
00:31:13,559 --> 00:31:18,270
it can<font color="#CCCCCC"> actually retails open which is</font>

868
00:31:15,720 --> 00:31:19,530
not a great thing<font color="#CCCCCC"> so one of the</font><font color="#E5E5E5"> first</font>

869
00:31:18,270 --> 00:31:22,260
things we did<font color="#CCCCCC"> was</font><font color="#E5E5E5"> like how</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> we</font>

870
00:31:19,530 --> 00:31:25,168
implement this in a way<font color="#E5E5E5"> that actually is</font>

871
00:31:22,260 --> 00:31:26,640
<font color="#E5E5E5">100% reliable</font><font color="#CCCCCC"> for instance on linux GFC</font>

872
00:31:25,169 --> 00:31:28,289
had this thing called get<font color="#CCCCCC"> ox file which</font>

873
00:31:26,640 --> 00:31:30,210
which<font color="#E5E5E5"> you may know there's three</font>

874
00:31:28,289 --> 00:31:33,090
different sets of arguments get passed

875
00:31:30,210 --> 00:31:35,809
to a program there's the program's<font color="#E5E5E5"> name</font>

876
00:31:33,090 --> 00:31:38,600
of the the argument lists like<font color="#CCCCCC"> our Gavi</font>

877
00:31:35,809 --> 00:31:41,370
<font color="#CCCCCC">there's also something</font><font color="#E5E5E5"> there's something</font>

878
00:31:38,600 --> 00:31:42,809
<font color="#CCCCCC">called the</font><font color="#E5E5E5"> auxiliary vector and what</font>

879
00:31:41,370 --> 00:31:44,760
<font color="#CCCCCC">this is is the list of operating</font>

880
00:31:42,809 --> 00:31:46,620
specific arguments that get passed to

881
00:31:44,760 --> 00:31:50,879
<font color="#E5E5E5">any sort of elf binary that have things</font>

882
00:31:46,620 --> 00:31:53,760
like a random number<font color="#E5E5E5"> that</font><font color="#CCCCCC"> seats my</font>

883
00:31:50,880 --> 00:31:55,650
memory allocator<font color="#E5E5E5"> or what is the base</font>

884
00:31:53,760 --> 00:31:56,460
vector of where<font color="#CCCCCC"> i</font><font color="#E5E5E5"> need</font><font color="#CCCCCC"> to like start</font>

885
00:31:55,650 --> 00:31:58,740
loading<font color="#CCCCCC"> libraries</font>

886
00:31:56,460 --> 00:32:01,020
one of them has is<font color="#E5E5E5"> a</font><font color="#CCCCCC"> tea secure</font><font color="#E5E5E5"> which</font>

887
00:31:58,740 --> 00:32:04,260
basically says is this a set UID a

888
00:32:01,020 --> 00:32:06,210
binary or not<font color="#E5E5E5"> so that seemed like a</font>

889
00:32:04,260 --> 00:32:11,400
<font color="#E5E5E5">really good alternative to not having a</font>

890
00:32:06,210 --> 00:32:16,309
syscall however it turns out that<font color="#CCCCCC"> get ox</font>

891
00:32:11,400 --> 00:32:18,690
<font color="#CCCCCC">Val</font><font color="#E5E5E5"> when it fails also returns zero so</font>

892
00:32:16,309 --> 00:32:21,299
you can't tell<font color="#E5E5E5"> digit of failure and</font>

893
00:32:18,690 --> 00:32:23,850
actually having<font color="#E5E5E5"> like a privilege</font>

894
00:32:21,299 --> 00:32:26,580
escalation or not so eventually they fix

895
00:32:23,850 --> 00:32:28,469
that in<font color="#CCCCCC"> G let's see two</font>

896
00:32:26,580 --> 00:32:32,100
<font color="#CCCCCC">so you actually have</font><font color="#E5E5E5"> error checking at</font>

897
00:32:28,470 --> 00:32:33,720
this point<font color="#E5E5E5"> but you ended up with code</font>

898
00:32:32,100 --> 00:32:37,469
like this which also wasn't<font color="#CCCCCC"> that great</font>

899
00:32:33,720 --> 00:32:38,700
<font color="#CCCCCC">and wasn't</font><font color="#E5E5E5"> necessarily the right</font>

900
00:32:37,470 --> 00:32:40,140
approach

901
00:32:38,700 --> 00:32:42,299
there's also<font color="#CCCCCC"> ng ellipses something</font>

902
00:32:40,140 --> 00:32:45,780
called<font color="#E5E5E5"> secure get a and B which actually</font>

903
00:32:42,299 --> 00:32:47,340
it turns out is insecure<font color="#CCCCCC"> a</font><font color="#E5E5E5"> side</font><font color="#CCCCCC"> from its</font>

904
00:32:45,780 --> 00:32:49,740
name because<font color="#CCCCCC"> it actually has the same</font>

905
00:32:47,340 --> 00:32:50,789
time of chat time abuse issues that we

906
00:32:49,740 --> 00:32:53,330
just talked about<font color="#E5E5E5"> a second ago</font><font color="#CCCCCC"> that</font>

907
00:32:50,789 --> 00:32:56,070
we're in the underlying<font color="#E5E5E5"> open</font><font color="#CCCCCC"> SSL</font><font color="#E5E5E5"> library</font>

908
00:32:53,330 --> 00:32:58,408
so we'll go<font color="#CCCCCC"> down a little bit</font><font color="#E5E5E5"> deeper and</font>

909
00:32:56,070 --> 00:33:00,299
we'll check<font color="#CCCCCC"> to</font><font color="#E5E5E5"> see if it's even possible</font>

910
00:32:58,409 --> 00:33:01,860
<font color="#E5E5E5">to override</font><font color="#CCCCCC"> it so it turns out you can</font>

911
00:33:00,299 --> 00:33:03,840
because it also sets an internal

912
00:33:01,860 --> 00:33:05,610
<font color="#CCCCCC">variable</font><font color="#E5E5E5"> you can actually just reference</font>

913
00:33:03,840 --> 00:33:06,928
it and change it on the fly<font color="#E5E5E5"> so you can</font>

914
00:33:05,610 --> 00:33:10,229
<font color="#CCCCCC">actually tweak your programs to</font><font color="#E5E5E5"> be up</font>

915
00:33:06,929 --> 00:33:12,270
and<font color="#E5E5E5"> down and and and change where this</font>

916
00:33:10,230 --> 00:33:16,930
Lib C enables secure<font color="#E5E5E5"> function or</font>

917
00:33:12,270 --> 00:33:20,090
variable is so fun stuff

918
00:33:16,930 --> 00:33:21,350
other operating systems<font color="#CCCCCC"> during the</font>

919
00:33:20,090 --> 00:33:23,090
<font color="#E5E5E5">process of doing the porting actually</font>

920
00:33:21,350 --> 00:33:26,570
found a bug in<font color="#E5E5E5"> FreeBSD s implementation</font>

921
00:33:23,090 --> 00:33:27,770
and that<font color="#CCCCCC"> ATS</font><font color="#E5E5E5"> secure always lied</font><font color="#CCCCCC"> and the</font>

922
00:33:26,570 --> 00:33:29,750
reason why they did<font color="#CCCCCC"> this actually</font><font color="#E5E5E5"> was to</font>

923
00:33:27,770 --> 00:33:31,760
speed up threads<font color="#CCCCCC"> P threads in</font><font color="#E5E5E5"> their</font>

924
00:33:29,750 --> 00:33:34,400
<font color="#CCCCCC">linux emulation layer</font><font color="#E5E5E5"> it took them only</font>

925
00:33:31,760 --> 00:33:36,440
<font color="#E5E5E5">two years to fix the bug</font><font color="#CCCCCC"> but they did</font>

926
00:33:34,400 --> 00:33:37,550
eventually<font color="#CCCCCC"> and there's a</font><font color="#E5E5E5"> security</font>

927
00:33:36,440 --> 00:33:39,050
<font color="#CCCCCC">adviser so it's really</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> only</font>

928
00:33:37,550 --> 00:33:40,669
<font color="#CCCCCC">free/busy security prize ever</font><font color="#E5E5E5"> happened</font>

929
00:33:39,050 --> 00:33:41,990
<font color="#E5E5E5">in</font><font color="#CCCCCC"> my name</font><font color="#E5E5E5"> but I'm pretty excited</font><font color="#CCCCCC"> it</font>

930
00:33:40,670 --> 00:33:46,100
turns out<font color="#E5E5E5"> like five other people also</font>

931
00:33:41,990 --> 00:33:47,120
reported it so glad they fixed it<font color="#CCCCCC"> so</font><font color="#E5E5E5"> it</font>

932
00:33:46,100 --> 00:33:49,429
turns<font color="#E5E5E5"> out because there were so many</font>

933
00:33:47,120 --> 00:33:51,139
bugs in<font color="#CCCCCC"> it set Juji ID for different</font>

934
00:33:49,430 --> 00:33:53,180
operating systems<font color="#CCCCCC"> Mac OS doesn't</font><font color="#E5E5E5"> work</font>

935
00:33:51,140 --> 00:33:56,390
<font color="#CCCCCC">pass</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> fork</font><font color="#E5E5E5"> Solaris didn't work before</font>

936
00:33:53,180 --> 00:33:57,980
11.1 hp-ux was actually perfect<font color="#CCCCCC"> which</font>

937
00:33:56,390 --> 00:34:00,260
was<font color="#E5E5E5"> kind of weird but</font><font color="#CCCCCC"> i'm happy for</font>

938
00:33:57,980 --> 00:34:02,060
those<font color="#E5E5E5"> guys</font><font color="#CCCCCC"> i'm a</font><font color="#E5E5E5"> except so many failure</font>

939
00:34:00,260 --> 00:34:05,060
modes<font color="#CCCCCC"> yeah like it's basically unix</font>

940
00:34:02,060 --> 00:34:06,770
written by aliens<font color="#CCCCCC"> so they have so many</font>

941
00:34:05,060 --> 00:34:08,960
<font color="#E5E5E5">different</font><font color="#CCCCCC"> ways to like escalate</font>

942
00:34:06,770 --> 00:34:12,199
privileges and like it's very<font color="#E5E5E5"> not</font><font color="#CCCCCC"> Unix</font>

943
00:34:08,960 --> 00:34:14,810
<font color="#CCCCCC">II so I just didn't want to</font><font color="#E5E5E5"> get into it</font>

944
00:34:12,199 --> 00:34:16,969
so<font color="#E5E5E5"> basically because they're also broken</font>

945
00:34:14,810 --> 00:34:20,179
<font color="#E5E5E5">we implemented is that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> JD is yeah</font>

946
00:34:16,969 --> 00:34:23,989
everything is always unsafe<font color="#E5E5E5"> never trust</font>

947
00:34:20,179 --> 00:34:25,280
environment variables so we<font color="#CCCCCC"> set that</font>

948
00:34:23,989 --> 00:34:26,928
waited for a year

949
00:34:25,280 --> 00:34:29,300
waited<font color="#E5E5E5"> for someone to scream at us</font><font color="#CCCCCC"> no</font>

950
00:34:26,929 --> 00:34:30,830
one did and we<font color="#E5E5E5"> deleted all</font><font color="#CCCCCC"> the</font>

951
00:34:29,300 --> 00:34:38,390
environment variable usage<font color="#E5E5E5"> out of the</font>

952
00:34:30,830 --> 00:34:39,918
entire library<font color="#E5E5E5"> so so that's good</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we</font>

953
00:34:38,389 --> 00:34:41,299
<font color="#CCCCCC">actually use this approach quite a bit</font>

954
00:34:39,918 --> 00:34:42,889
now this one<font color="#E5E5E5"> was kind of an accident</font>

955
00:34:41,300 --> 00:34:44,120
<font color="#E5E5E5">because</font><font color="#CCCCCC"> I had actually had a bug in</font><font color="#E5E5E5"> my</font>

956
00:34:42,889 --> 00:34:46,819
<font color="#CCCCCC">cafe Kerr script where it automatically</font>

957
00:34:44,120 --> 00:34:48,109
assumed<font color="#E5E5E5"> everyone was broken</font><font color="#CCCCCC"> but because</font>

958
00:34:46,820 --> 00:34:51,440
<font color="#E5E5E5">no one screamed I was happy about that</font>

959
00:34:48,110 --> 00:34:53,630
<font color="#CCCCCC">so some</font><font color="#E5E5E5"> other interesting</font><font color="#CCCCCC"> things that</font>

960
00:34:51,440 --> 00:34:56,840
we've done as far as sort of<font color="#CCCCCC"> moving the</font>

961
00:34:53,630 --> 00:34:58,280
<font color="#CCCCCC">the community forward</font><font color="#E5E5E5"> is this is kind of</font>

962
00:34:56,840 --> 00:35:00,740
a controversial decision when<font color="#E5E5E5"> we first</font>

963
00:34:58,280 --> 00:35:04,610
<font color="#CCCCCC">pad out libres to</font><font color="#E5E5E5"> sell we called the</font>

964
00:35:00,740 --> 00:35:05,990
<font color="#E5E5E5">open</font><font color="#CCCCCC"> SSL version</font><font color="#E5E5E5"> version 2 and initially</font>

965
00:35:04,610 --> 00:35:07,670
that was just kind of a funny<font color="#CCCCCC"> joke</font><font color="#E5E5E5"> and</font>

966
00:35:05,990 --> 00:35:09,049
<font color="#E5E5E5">that we were saying oh they'll never fit</font>

967
00:35:07,670 --> 00:35:10,130
out version<font color="#CCCCCC"> 2 so we'll go ahead and</font>

968
00:35:09,050 --> 00:35:11,480
claim it for<font color="#CCCCCC"> ourselves and they'll have</font>

969
00:35:10,130 --> 00:35:13,790
<font color="#E5E5E5">to jump to three even if they ever get</font>

970
00:35:11,480 --> 00:35:16,010
<font color="#CCCCCC">to</font><font color="#E5E5E5"> two we estimated it would take</font><font color="#CCCCCC"> them</font>

971
00:35:13,790 --> 00:35:17,720
25 more years to get to<font color="#E5E5E5"> that point</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> it</font>

972
00:35:16,010 --> 00:35:19,880
wasn't gonna<font color="#E5E5E5"> be a real problem</font>

973
00:35:17,720 --> 00:35:22,279
but it turns out<font color="#E5E5E5"> that a lot</font><font color="#CCCCCC"> of software</font>

974
00:35:19,880 --> 00:35:23,450
<font color="#E5E5E5">under the covers uses open SSL version</font>

975
00:35:22,280 --> 00:35:25,670
to determine the features are available

976
00:35:23,450 --> 00:35:27,529
<font color="#E5E5E5">like rather than saying do I have this</font>

977
00:35:25,670 --> 00:35:28,980
function it says<font color="#CCCCCC"> oh is open a cell</font>

978
00:35:27,530 --> 00:35:32,160
version greater than<font color="#CCCCCC"> one</font>

979
00:35:28,980 --> 00:35:35,250
oh that<font color="#CCCCCC"> too dot</font><font color="#E5E5E5"> B or something</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> that</font>

980
00:35:32,160 --> 00:35:37,259
and so this caused a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of random</font>

981
00:35:35,250 --> 00:35:39,510
<font color="#E5E5E5">software to fail</font><font color="#CCCCCC"> over time</font><font color="#E5E5E5"> to fail to</font>

982
00:35:37,260 --> 00:35:41,580
compile<font color="#E5E5E5"> now mostly this was like the job</font>

983
00:35:39,510 --> 00:35:44,160
of<font color="#CCCCCC"> our porting team to fix this with</font>

984
00:35:41,580 --> 00:35:46,319
with patches but hope our real hope was

985
00:35:44,160 --> 00:35:49,319
that<font color="#E5E5E5"> software developers would stop</font>

986
00:35:46,320 --> 00:35:50,880
using up<font color="#E5E5E5"> selves SSL version as a signal</font>

987
00:35:49,320 --> 00:35:52,800
and<font color="#CCCCCC"> what instead actually checked see</font>

988
00:35:50,880 --> 00:35:55,830
like as a function<font color="#CCCCCC"> implemented is it not</font>

989
00:35:52,800 --> 00:35:58,109
implemented but<font color="#CCCCCC"> no one ever did and</font><font color="#E5E5E5"> in</font>

990
00:35:55,830 --> 00:36:01,200
<font color="#E5E5E5">fact to this very day</font>

991
00:35:58,109 --> 00:36:02,880
we<font color="#E5E5E5"> continued to</font><font color="#CCCCCC"> push patches up to</font>

992
00:36:01,200 --> 00:36:04,080
upstream projects<font color="#CCCCCC"> nginx is</font><font color="#E5E5E5"> actually a</font>

993
00:36:02,880 --> 00:36:06,810
<font color="#E5E5E5">current one</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we're working on</font><font color="#CCCCCC"> right</font>

994
00:36:04,080 --> 00:36:09,119
<font color="#CCCCCC">now</font><font color="#E5E5E5"> where they just trust open</font><font color="#CCCCCC"> SSL</font>

995
00:36:06,810 --> 00:36:11,150
version<font color="#E5E5E5"> to mean something</font><font color="#CCCCCC"> and it</font><font color="#E5E5E5"> doesn't</font>

996
00:36:09,119 --> 00:36:12,960
necessarily<font color="#E5E5E5"> mean</font><font color="#CCCCCC"> anything at all</font>

997
00:36:11,150 --> 00:36:15,300
<font color="#CCCCCC">something else that we've been</font><font color="#E5E5E5"> working</font>

998
00:36:12,960 --> 00:36:16,950
on a lot lately has been<font color="#E5E5E5"> open SSL 1.1</font>

999
00:36:15,300 --> 00:36:18,780
<font color="#CCCCCC">api does</font><font color="#E5E5E5"> anyone here actually code</font>

1000
00:36:16,950 --> 00:36:22,770
against open SSL and kind<font color="#E5E5E5"> of know the</font>

1001
00:36:18,780 --> 00:36:25,290
differences<font color="#E5E5E5"> between</font><font color="#CCCCCC"> 100 and 1.1 so the</font>

1002
00:36:22,770 --> 00:36:28,440
big<font color="#CCCCCC"> differences</font><font color="#E5E5E5"> between the two are for</font>

1003
00:36:25,290 --> 00:36:31,770
open SSL 1.1 they<font color="#CCCCCC"> decide to</font><font color="#E5E5E5"> make all the</font>

1004
00:36:28,440 --> 00:36:34,770
c structs<font color="#E5E5E5"> opaque</font><font color="#CCCCCC"> and what that means</font><font color="#E5E5E5"> is</font>

1005
00:36:31,770 --> 00:36:36,480
that you can't access<font color="#E5E5E5"> them directly from</font>

1006
00:36:34,770 --> 00:36:38,880
within your<font color="#E5E5E5"> C code</font><font color="#CCCCCC"> services if I have a</font>

1007
00:36:36,480 --> 00:36:40,290
an SSL context or something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that</font>

1008
00:36:38,880 --> 00:36:42,119
<font color="#E5E5E5">and I look inside to get like the</font>

1009
00:36:40,290 --> 00:36:43,259
version<font color="#CCCCCC"> I can't look at it anymore and</font>

1010
00:36:42,119 --> 00:36:45,690
<font color="#E5E5E5">instead have to use an access or</font>

1011
00:36:43,260 --> 00:36:47,520
function to get access to<font color="#E5E5E5"> it</font><font color="#CCCCCC"> now</font>

1012
00:36:45,690 --> 00:36:49,859
you might<font color="#CCCCCC"> ask well why did the open SSL</font>

1013
00:36:47,520 --> 00:36:51,359
team decided<font color="#E5E5E5"> to change this from I can</font>

1014
00:36:49,859 --> 00:36:52,770
get<font color="#E5E5E5"> access trucks to not access trucks</font>

1015
00:36:51,359 --> 00:36:55,560
<font color="#E5E5E5">why</font><font color="#CCCCCC"> I actually</font><font color="#E5E5E5"> found out I went to the</font>

1016
00:36:52,770 --> 00:36:58,290
<font color="#CCCCCC">International</font><font color="#E5E5E5"> cryptographic module</font>

1017
00:36:55,560 --> 00:37:00,150
conference earlier<font color="#CCCCCC"> this year and I asked</font>

1018
00:36:58,290 --> 00:37:02,840
rich salts<font color="#CCCCCC"> why they actually did this</font>

1019
00:37:00,150 --> 00:37:05,760
<font color="#CCCCCC">and it</font><font color="#E5E5E5"> turns out four-fifths compliance</font>

1020
00:37:02,840 --> 00:37:07,859
<font color="#CCCCCC">so because with its compliance you don't</font>

1021
00:37:05,760 --> 00:37:08,940
want to have to change your<font color="#E5E5E5"> binaries</font><font color="#CCCCCC"> you</font>

1022
00:37:07,859 --> 00:37:12,259
don't want to have to change<font color="#E5E5E5"> your API</font>

1023
00:37:08,940 --> 00:37:15,420
for for people's<font color="#E5E5E5"> perform clients testing</font>

1024
00:37:12,260 --> 00:37:16,770
<font color="#CCCCCC">when you have opaque when you have open</font>

1025
00:37:15,420 --> 00:37:18,270
<font color="#CCCCCC">structure like this every</font><font color="#E5E5E5"> time you want</font>

1026
00:37:16,770 --> 00:37:21,810
<font color="#CCCCCC">to add in them remember it changes your</font>

1027
00:37:18,270 --> 00:37:23,160
ABI<font color="#CCCCCC"> by hiding it like this it means</font><font color="#E5E5E5"> that</font>

1028
00:37:21,810 --> 00:37:24,600
they can<font color="#CCCCCC"> actually push</font><font color="#E5E5E5"> out new 50</font>

1029
00:37:23,160 --> 00:37:25,680
releases or that<font color="#E5E5E5"> haven't been the whole</font>

1030
00:37:24,600 --> 00:37:28,200
thing recertified they can just

1031
00:37:25,680 --> 00:37:29,460
<font color="#E5E5E5">recertified one object</font><font color="#CCCCCC"> so that's</font>

1032
00:37:28,200 --> 00:37:31,980
<font color="#CCCCCC">actually the underlying reason it was</font>

1033
00:37:29,460 --> 00:37:33,630
for Phipps compliance now this<font color="#E5E5E5"> wasn't</font><font color="#CCCCCC"> we</font>

1034
00:37:31,980 --> 00:37:36,060
were advertised<font color="#E5E5E5"> that much but I was</font>

1035
00:37:33,630 --> 00:37:38,550
interesting seeing all the really<font color="#E5E5E5"> really</font>

1036
00:37:36,060 --> 00:37:40,680
distraught<font color="#E5E5E5"> government cryptographer</font>

1037
00:37:38,550 --> 00:37:43,200
cryptographic software<font color="#E5E5E5"> writers worrying</font>

1038
00:37:40,680 --> 00:37:45,180
about<font color="#E5E5E5"> the openness l1 at one jump</font>

1039
00:37:43,200 --> 00:37:46,319
so<font color="#E5E5E5"> for for</font><font color="#CCCCCC"> libres or so we don't care</font>

1040
00:37:45,180 --> 00:37:48,779
about<font color="#E5E5E5"> that</font><font color="#CCCCCC"> stuff</font>

1041
00:37:46,319 --> 00:37:50,549
well<font color="#CCCCCC"> will</font><font color="#E5E5E5"> full</font><font color="#CCCCCC"> Fitz I mean</font><font color="#E5E5E5"> partly</font>

1042
00:37:48,779 --> 00:37:52,700
<font color="#E5E5E5">because it's a lot of work and not a</font>

1043
00:37:50,549 --> 00:37:55,288
whole lot of gain<font color="#E5E5E5"> from our point of view</font>

1044
00:37:52,700 --> 00:37:57,750
<font color="#CCCCCC">but the other thing is we don't care</font>

1045
00:37:55,289 --> 00:38:00,269
<font color="#E5E5E5">that much about a</font><font color="#CCCCCC"> BIS and api's well</font><font color="#E5E5E5"> I</font>

1046
00:37:57,750 --> 00:38:01,650
said they're wrong<font color="#CCCCCC"> we care a lot they</font>

1047
00:38:00,269 --> 00:38:04,379
care a lot<font color="#CCCCCC"> about not breaking</font><font color="#E5E5E5"> people's</font>

1048
00:38:01,650 --> 00:38:06,630
old<font color="#E5E5E5"> api's so we try to keep every old</font>

1049
00:38:04,380 --> 00:38:09,210
<font color="#E5E5E5">API available</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> why I Libra sell</font>

1050
00:38:06,630 --> 00:38:11,269
<font color="#E5E5E5">actually works with</font><font color="#CCCCCC"> 101</font><font color="#E5E5E5"> code all the</font><font color="#CCCCCC"> way</font>

1051
00:38:09,210 --> 00:38:13,200
to<font color="#CCCCCC"> 1:1 code because we</font><font color="#E5E5E5"> actually</font>

1052
00:38:11,269 --> 00:38:16,288
<font color="#E5E5E5">incorporated all the api's at the same</font>

1053
00:38:13,200 --> 00:38:18,509
time so code<font color="#E5E5E5"> libras to sell basically</font>

1054
00:38:16,289 --> 00:38:20,940
<font color="#CCCCCC">supports all the API simultaneously now</font>

1055
00:38:18,510 --> 00:38:22,230
another reason<font color="#E5E5E5"> why the</font><font color="#CCCCCC"> OpenSSL team</font>

1056
00:38:20,940 --> 00:38:24,660
decided<font color="#E5E5E5"> to make opaque structs is</font>

1057
00:38:22,230 --> 00:38:26,549
because every<font color="#E5E5E5"> time they</font><font color="#CCCCCC"> change the size</font>

1058
00:38:24,660 --> 00:38:28,769
<font color="#E5E5E5">of their structs are added in a new</font>

1059
00:38:26,549 --> 00:38:29,839
element or<font color="#CCCCCC"> something like that</font><font color="#E5E5E5"> all code</font>

1060
00:38:28,769 --> 00:38:31,828
had to be recompiled

1061
00:38:29,839 --> 00:38:34,769
that's because they never<font color="#E5E5E5"> changed the</font>

1062
00:38:31,829 --> 00:38:36,900
version number in their libraries<font color="#CCCCCC"> if you</font>

1063
00:38:34,769 --> 00:38:38,549
have<font color="#E5E5E5"> open assault 101 it's always called</font>

1064
00:38:36,900 --> 00:38:40,650
<font color="#E5E5E5">open</font><font color="#CCCCCC"> SL 101 even if they add a function</font>

1065
00:38:38,549 --> 00:38:42,210
<font color="#CCCCCC">or remove a function so that causes</font>

1066
00:38:40,650 --> 00:38:44,819
problems<font color="#E5E5E5"> when you have</font><font color="#CCCCCC"> to tell everyone</font>

1067
00:38:42,210 --> 00:38:47,609
to recompile<font color="#CCCCCC"> li vs l</font><font color="#E5E5E5"> actually bumps the</font>

1068
00:38:44,819 --> 00:38:49,440
library version<font color="#E5E5E5"> number every release by</font>

1069
00:38:47,609 --> 00:38:51,029
at<font color="#E5E5E5"> least four or five because our</font>

1070
00:38:49,440 --> 00:38:52,920
<font color="#CCCCCC">philosophy is every time you change the</font>

1071
00:38:51,029 --> 00:38:56,099
<font color="#CCCCCC">API you should bump the version number</font>

1072
00:38:52,920 --> 00:38:57,930
so while<font color="#CCCCCC"> Lee versus L is currently at</font>

1073
00:38:56,099 --> 00:38:59,759
version<font color="#E5E5E5"> 2.8 I put out the release</font><font color="#CCCCCC"> notes</font>

1074
00:38:57,930 --> 00:39:02,788
for<font color="#CCCCCC"> that today the underlying library</font>

1075
00:38:59,759 --> 00:39:04,589
<font color="#E5E5E5">version is like 1.57 or something like</font>

1076
00:39:02,789 --> 00:39:07,380
<font color="#E5E5E5">that</font><font color="#CCCCCC"> so we're like major version 57</font>

1077
00:39:04,589 --> 00:39:08,609
because we bump version numbers<font color="#E5E5E5"> but the</font>

1078
00:39:07,380 --> 00:39:10,140
neat thing<font color="#CCCCCC"> is you can</font><font color="#E5E5E5"> actually have all</font>

1079
00:39:08,609 --> 00:39:12,000
<font color="#CCCCCC">the versions of Libra</font><font color="#E5E5E5"> so installed</font>

1080
00:39:10,140 --> 00:39:13,379
simultaneously so you don't<font color="#E5E5E5"> have to</font>

1081
00:39:12,000 --> 00:39:14,519
recompile your<font color="#E5E5E5"> code you can</font><font color="#CCCCCC"> actually</font>

1082
00:39:13,380 --> 00:39:15,869
keep everything pointing to the old

1083
00:39:14,519 --> 00:39:17,848
<font color="#CCCCCC">version the new version things like that</font>

1084
00:39:15,869 --> 00:39:21,390
I've worked<font color="#CCCCCC"> with a lot of</font><font color="#E5E5E5"> Linux</font>

1085
00:39:17,849 --> 00:39:24,599
distributors and other folks and<font color="#E5E5E5"> said</font>

1086
00:39:21,390 --> 00:39:25,558
hey why<font color="#CCCCCC"> don't you just incorporate some</font>

1087
00:39:24,599 --> 00:39:27,839
way for your<font color="#E5E5E5"> package manager to install</font>

1088
00:39:25,559 --> 00:39:29,250
<font color="#E5E5E5">multiple versions of library no one</font>

1089
00:39:27,839 --> 00:39:31,859
wants to do<font color="#E5E5E5"> it I don't understand why</font>

1090
00:39:29,250 --> 00:39:34,049
<font color="#E5E5E5">but yeah that's that's the breaks there</font>

1091
00:39:31,859 --> 00:39:36,569
are some brave Linux distributions<font color="#CCCCCC"> that</font>

1092
00:39:34,049 --> 00:39:37,799
do incorporate<font color="#CCCCCC"> Li versus</font><font color="#E5E5E5"> l and when we</font>

1093
00:39:36,569 --> 00:39:39,990
put on<font color="#E5E5E5"> your release they just recompile</font>

1094
00:39:37,799 --> 00:39:41,849
the software but<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know what updating</font>

1095
00:39:39,990 --> 00:39:43,589
100 packages<font color="#E5E5E5"> on your machine isn't there</font>

1096
00:39:41,849 --> 00:39:45,779
a<font color="#CCCCCC"> bigger</font><font color="#E5E5E5"> deal anymore</font><font color="#CCCCCC"> maybe back in the</font>

1097
00:39:43,589 --> 00:39:47,009
modem<font color="#CCCCCC"> valid days it was but think</font><font color="#E5E5E5"> about</font>

1098
00:39:45,779 --> 00:39:48,329
like your normal like Debian

1099
00:39:47,009 --> 00:39:50,130
distribution or you know following

1100
00:39:48,329 --> 00:39:52,049
Ubuntu<font color="#CCCCCC"> what do</font><font color="#E5E5E5"> you have to do to install</font>

1101
00:39:50,130 --> 00:39:54,480
like 4 or<font color="#E5E5E5"> 500 packages just after the</font>

1102
00:39:52,049 --> 00:39:56,239
main install<font color="#E5E5E5"> so yeah you know update</font>

1103
00:39:54,480 --> 00:39:58,159
update

1104
00:39:56,239 --> 00:39:59,329
another thing<font color="#CCCCCC"> that we've been working</font><font color="#E5E5E5"> on</font>

1105
00:39:58,159 --> 00:40:01,729
a lot is software configuration

1106
00:39:59,329 --> 00:40:03,259
management<font color="#CCCCCC"> so we've tried</font><font color="#E5E5E5"> to make it so</font>

1107
00:40:01,729 --> 00:40:06,618
that it's easy to<font color="#E5E5E5"> incorporate</font><font color="#CCCCCC"> Lieber's</font>

1108
00:40:03,259 --> 00:40:08,779
to<font color="#CCCCCC"> sell with different software a lot of</font>

1109
00:40:06,619 --> 00:40:11,599
works<font color="#CCCCCC"> been going into the sea make</font><font color="#E5E5E5"> sub</font>

1110
00:40:08,779 --> 00:40:13,279
<font color="#E5E5E5">system</font><font color="#CCCCCC"> we get a lot of feedback we</font>

1111
00:40:11,599 --> 00:40:15,259
<font color="#E5E5E5">finally have a lot of Windows users I</font>

1112
00:40:13,279 --> 00:40:17,689
don't understand why<font color="#CCCCCC"> but</font><font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of folks</font>

1113
00:40:15,259 --> 00:40:19,579
use it<font color="#E5E5E5"> and one of the main reasons is</font>

1114
00:40:17,689 --> 00:40:21,819
actually because we were producing<font color="#E5E5E5"> an</font>

1115
00:40:19,579 --> 00:40:24,259
<font color="#CCCCCC">open Acela exe which is very useful</font>

1116
00:40:21,819 --> 00:40:25,669
<font color="#CCCCCC">turns</font><font color="#E5E5E5"> out some</font><font color="#CCCCCC"> people said if you put</font>

1117
00:40:24,259 --> 00:40:28,309
that<font color="#E5E5E5"> in the Windows Store I would buy it</font>

1118
00:40:25,669 --> 00:40:30,529
<font color="#E5E5E5">so we may</font><font color="#CCCCCC"> have a new</font><font color="#E5E5E5"> revenue source</font><font color="#CCCCCC"> for</font>

1119
00:40:28,309 --> 00:40:34,989
<font color="#CCCCCC">leapers to sell in</font><font color="#E5E5E5"> the future as well</font>

1120
00:40:30,529 --> 00:40:38,419
<font color="#CCCCCC">just just compiled some meeseeks</font><font color="#E5E5E5"> so</font>

1121
00:40:34,989 --> 00:40:39,829
that's really<font color="#CCCCCC"> the gist of it I have lots</font>

1122
00:40:38,419 --> 00:40:41,929
of<font color="#E5E5E5"> more stories</font><font color="#CCCCCC"> to maybe talk about</font><font color="#E5E5E5"> if</font>

1123
00:40:39,829 --> 00:40:43,579
you guys want to<font color="#E5E5E5"> sort you know you know</font>

1124
00:40:41,929 --> 00:40:45,349
<font color="#E5E5E5">ask me after the talk or</font><font color="#CCCCCC"> something like</font>

1125
00:40:43,579 --> 00:40:47,119
that<font color="#CCCCCC"> I also have a lot of different</font>

1126
00:40:45,349 --> 00:40:50,449
<font color="#E5E5E5">other projects that</font><font color="#CCCCCC"> we can also talk</font>

1127
00:40:47,119 --> 00:40:53,449
about<font color="#E5E5E5"> a little bit offline</font><font color="#CCCCCC"> Lib TLS which</font>

1128
00:40:50,449 --> 00:40:56,150
is our simplified<font color="#E5E5E5"> abstraction layer on</font>

1129
00:40:53,449 --> 00:41:00,439
top of<font color="#CCCCCC"> open SSL it</font><font color="#E5E5E5"> basically makes it</font>

1130
00:40:56,150 --> 00:41:02,599
<font color="#E5E5E5">really bulletproof to to get a secure</font>

1131
00:41:00,439 --> 00:41:04,549
application running<font color="#E5E5E5"> within see we also</font>

1132
00:41:02,599 --> 00:41:06,769
have go bindings we have<font color="#E5E5E5"> Python bindings</font>

1133
00:41:04,549 --> 00:41:09,349
and I<font color="#CCCCCC"> forgot a couple of</font><font color="#E5E5E5"> other languages</font>

1134
00:41:06,769 --> 00:41:11,658
<font color="#E5E5E5">but those are the main</font><font color="#CCCCCC"> ones we have a</font>

1135
00:41:09,349 --> 00:41:14,089
net cat<font color="#E5E5E5"> so you guys like net cat</font>

1136
00:41:11,659 --> 00:41:16,569
you guys are all<font color="#CCCCCC"> hackers right</font><font color="#E5E5E5"> so so</font>

1137
00:41:14,089 --> 00:41:18,799
actually<font color="#E5E5E5"> Libre cell shifts with net cat</font>

1138
00:41:16,569 --> 00:41:20,900
but it's a special netcat that knows how

1139
00:41:18,799 --> 00:41:22,579
to<font color="#E5E5E5"> do TLS as well now you might have</font>

1140
00:41:20,900 --> 00:41:25,699
used<font color="#E5E5E5"> what is what is the one that comes</font>

1141
00:41:22,579 --> 00:41:30,019
with<font color="#E5E5E5"> the Wireshark is it called in cat</font>

1142
00:41:25,699 --> 00:41:32,539
<font color="#E5E5E5">yeah and in that cat I forget anyway</font><font color="#CCCCCC"> so</font>

1143
00:41:30,019 --> 00:41:34,038
similar<font color="#CCCCCC"> to</font><font color="#E5E5E5"> that if you compile</font><font color="#CCCCCC"> it with</font>

1144
00:41:32,539 --> 00:41:35,599
like enable net cat will actually

1145
00:41:34,039 --> 00:41:38,179
install<font color="#E5E5E5"> it for you so if you want</font><font color="#CCCCCC"> to use</font>

1146
00:41:35,599 --> 00:41:39,229
the cool enabled netcat we have to use

1147
00:41:38,179 --> 00:41:40,999
it for<font color="#E5E5E5"> all of our testing because it</font>

1148
00:41:39,229 --> 00:41:43,308
actually has every feature enabled<font color="#E5E5E5"> so</font>

1149
00:41:40,999 --> 00:41:45,499
<font color="#E5E5E5">you can enable OCSP States stapling</font>

1150
00:41:43,309 --> 00:41:47,659
within that<font color="#E5E5E5"> cat if you want you can do</font>

1151
00:41:45,499 --> 00:41:48,948
all<font color="#E5E5E5"> kinds of crazy stuff we have a whole</font>

1152
00:41:47,659 --> 00:41:50,449
<font color="#E5E5E5">bunch of other cool stuff - we have an</font>

1153
00:41:48,949 --> 00:41:51,979
<font color="#E5E5E5">acne client which like just lets you do</font>

1154
00:41:50,449 --> 00:41:53,719
<font color="#CCCCCC">blessing crypt</font><font color="#E5E5E5"> with the see it uses</font>

1155
00:41:51,979 --> 00:41:56,328
<font color="#CCCCCC">Lieber's</font><font color="#E5E5E5"> to sell under</font><font color="#CCCCCC"> the covers</font><font color="#E5E5E5"> we</font>

1156
00:41:53,719 --> 00:41:58,159
have<font color="#CCCCCC"> a special open vs</font><font color="#E5E5E5"> DHCP server</font>

1157
00:41:56,329 --> 00:42:01,339
<font color="#E5E5E5">I've got a portable version if anyone's</font>

1158
00:41:58,159 --> 00:42:03,650
<font color="#CCCCCC">interested in it</font><font color="#E5E5E5"> that lets you basically</font>

1159
00:42:01,339 --> 00:42:05,839
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> just a simple HTTP server but</font><font color="#E5E5E5"> the</font>

1160
00:42:03,650 --> 00:42:08,029
idea here<font color="#CCCCCC"> is that it the main goal is it</font>

1161
00:42:05,839 --> 00:42:09,170
supports really<font color="#E5E5E5"> good privilege</font>

1162
00:42:08,029 --> 00:42:11,599
separation so it<font color="#E5E5E5"> actually</font>

1163
00:42:09,170 --> 00:42:13,339
like one process that's in a sandbox

1164
00:42:11,599 --> 00:42:15,559
that<font color="#E5E5E5"> can't do anything but conserve</font>

1165
00:42:13,339 --> 00:42:17,630
files<font color="#CCCCCC"> another one</font><font color="#E5E5E5"> that can really just</font>

1166
00:42:15,559 --> 00:42:18,980
bind to a port<font color="#E5E5E5"> and then like a third one</font>

1167
00:42:17,630 --> 00:42:21,529
<font color="#E5E5E5">that handles all the configuration</font>

1168
00:42:18,980 --> 00:42:24,230
management<font color="#E5E5E5"> real ad which is the</font><font color="#CCCCCC"> gateway</font>

1169
00:42:21,529 --> 00:42:26,480
load balancer same<font color="#E5E5E5"> kind of thing and I'm</font>

1170
00:42:24,230 --> 00:42:27,950
also the maintainer for open and TPP

1171
00:42:26,480 --> 00:42:30,109
well you might wonder<font color="#E5E5E5"> why an interview</font>

1172
00:42:27,950 --> 00:42:32,569
client would be<font color="#E5E5E5"> here the entropy client</font>

1173
00:42:30,109 --> 00:42:35,269
actually<font color="#E5E5E5"> doesn't trust NTP servers by</font>

1174
00:42:32,569 --> 00:42:37,250
default<font color="#CCCCCC"> it can actually ask random TLS</font>

1175
00:42:35,269 --> 00:42:38,899
servers<font color="#E5E5E5"> if they also collaborate that</font>

1176
00:42:37,250 --> 00:42:41,210
the time<font color="#E5E5E5"> roughly matches what the NTP</font>

1177
00:42:38,900 --> 00:42:42,769
servers are saying<font color="#E5E5E5"> so open ntpd by</font>

1178
00:42:41,210 --> 00:42:46,010
default confer instance<font color="#E5E5E5"> talk to Google</font>

1179
00:42:42,769 --> 00:42:48,558
<font color="#E5E5E5">look at Google's headers over TLS and</font>

1180
00:42:46,010 --> 00:42:51,190
see what time it says from<font color="#E5E5E5"> that point of</font>

1181
00:42:48,559 --> 00:42:53,720
<font color="#CCCCCC">view</font><font color="#E5E5E5"> and see if your netcat if your NTP</font>

1182
00:42:51,190 --> 00:42:55,519
servers are lying to<font color="#E5E5E5"> you or not and will</font>

1183
00:42:53,720 --> 00:42:57,259
automatically<font color="#CCCCCC"> desync</font><font color="#E5E5E5"> if it turns out</font>

1184
00:42:55,519 --> 00:42:58,660
<font color="#E5E5E5">that they</font><font color="#CCCCCC"> can't reach a consensus</font><font color="#E5E5E5"> and</font>

1185
00:42:57,260 --> 00:43:01,250
one of the biggest<font color="#E5E5E5"> problems with that</font>

1186
00:42:58,660 --> 00:43:03,049
<font color="#E5E5E5">reasons for that is because NTP itself</font>

1187
00:43:01,250 --> 00:43:05,029
is not really a secure protocol<font color="#E5E5E5"> and</font>

1188
00:43:03,049 --> 00:43:07,309
there's been a lot<font color="#CCCCCC"> of work</font><font color="#E5E5E5"> on like a</font>

1189
00:43:05,029 --> 00:43:11,510
secure version<font color="#E5E5E5"> of NTP</font><font color="#CCCCCC"> but it's never</font>

1190
00:43:07,309 --> 00:43:13,849
<font color="#E5E5E5">really been</font><font color="#CCCCCC"> successful yet so anyway</font>

1191
00:43:11,510 --> 00:43:14,990
that's<font color="#E5E5E5"> my talk thanks for coming guys</font>

1192
00:43:13,849 --> 00:43:16,750
<font color="#E5E5E5">and let me know if you have any</font>

1193
00:43:14,990 --> 00:43:22,169
questions

1194
00:43:16,750 --> 00:43:22,170
[Applause]

1195
00:43:23,780 --> 00:43:32,400
thank you<font color="#CCCCCC"> quick question on</font><font color="#E5E5E5"> filing when</font>

1196
00:43:27,900 --> 00:43:34,890
you run out<font color="#CCCCCC"> of entropy</font><font color="#E5E5E5"> crashing</font><font color="#CCCCCC"> so if I</font>

1197
00:43:32,400 --> 00:43:36,810
<font color="#E5E5E5">don't want my program</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> crash</font><font color="#CCCCCC"> do I have</font>

1198
00:43:34,890 --> 00:43:39,690
to<font color="#CCCCCC"> rap I can't remember what function</font>

1199
00:43:36,810 --> 00:43:42,779
with<font color="#E5E5E5"> R and bytes</font><font color="#CCCCCC"> to have to wrap it with</font>

1200
00:43:39,690 --> 00:43:44,700
like said long jump<font color="#E5E5E5"> or what are my</font>

1201
00:43:42,780 --> 00:43:47,700
options<font color="#CCCCCC"> so the interesting</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> about</font>

1202
00:43:44,700 --> 00:43:49,919
this function and<font color="#CCCCCC"> of</font><font color="#E5E5E5"> course I</font>

1203
00:43:47,700 --> 00:43:51,569
<font color="#CCCCCC">open-source</font><font color="#E5E5E5"> you can check it out is it</font>

1204
00:43:49,920 --> 00:43:54,300
actually<font color="#E5E5E5"> only ever seeds itself at the</font>

1205
00:43:51,570 --> 00:43:56,430
very beginning so whenever you first

1206
00:43:54,300 --> 00:44:00,510
start your<font color="#CCCCCC"> program</font><font color="#E5E5E5"> it will either seed</font>

1207
00:43:56,430 --> 00:44:02,910
<font color="#E5E5E5">or it will fail and basically after that</font>

1208
00:44:00,510 --> 00:44:04,920
<font color="#E5E5E5">first set of entropy it's now stored</font>

1209
00:44:02,910 --> 00:44:07,350
within the state of<font color="#CCCCCC"> art for random and</font>

1210
00:44:04,920 --> 00:44:09,750
it<font color="#E5E5E5"> uses</font><font color="#CCCCCC"> chacha</font><font color="#E5E5E5"> 20 I believe to actually</font>

1211
00:44:07,350 --> 00:44:11,130
produce the rest of the byte stream that

1212
00:44:09,750 --> 00:44:13,950
<font color="#E5E5E5">ends</font><font color="#CCCCCC"> up being used for the real random</font>

1213
00:44:11,130 --> 00:44:15,330
<font color="#E5E5E5">number generation so it'll crash right</font>

1214
00:44:13,950 --> 00:44:16,770
at the<font color="#E5E5E5"> beginning or no that's right you</font>

1215
00:44:15,330 --> 00:44:19,170
either completely work or you<font color="#E5E5E5"> completely</font>

1216
00:44:16,770 --> 00:44:21,300
fail<font color="#CCCCCC"> there's no</font><font color="#E5E5E5"> in-between like I might</font>

1217
00:44:19,170 --> 00:44:22,950
fail at a day or two or like that<font color="#E5E5E5"> do you</font>

1218
00:44:21,300 --> 00:44:25,710
think<font color="#CCCCCC"> there's some cases where blocking</font>

1219
00:44:22,950 --> 00:44:29,189
could actually end up getting<font color="#CCCCCC"> the entry</font>

1220
00:44:25,710 --> 00:44:32,550
<font color="#E5E5E5">pool filled up yeah absolutely</font>

1221
00:44:29,190 --> 00:44:34,590
so<font color="#CCCCCC"> our</font><font color="#E5E5E5"> I'm get entropy is supposed to</font>

1222
00:44:32,550 --> 00:44:36,270
<font color="#E5E5E5">block it needs to block until it gets</font>

1223
00:44:34,590 --> 00:44:38,430
the data<font color="#E5E5E5"> that it needs or if it can't it</font>

1224
00:44:36,270 --> 00:44:43,380
can't can't<font color="#CCCCCC"> be succeeded then it will</font>

1225
00:44:38,430 --> 00:44:47,069
fail<font color="#E5E5E5"> inside of</font><font color="#CCCCCC"> open BSD it's not a</font>

1226
00:44:43,380 --> 00:44:48,780
problem because open BSD always reseats

1227
00:44:47,070 --> 00:44:51,150
<font color="#CCCCCC">its random error generator from the</font>

1228
00:44:48,780 --> 00:44:52,950
bootloader into the kernel<font color="#CCCCCC"> and whenever</font>

1229
00:44:51,150 --> 00:44:54,180
<font color="#E5E5E5">every boots it saves the last state at</font>

1230
00:44:52,950 --> 00:44:55,560
the random<font color="#CCCCCC"> number generator</font><font color="#E5E5E5"> in a file</font>

1231
00:44:54,180 --> 00:44:57,480
<font color="#E5E5E5">that the bootloader knows how to read on</font>

1232
00:44:55,560 --> 00:45:02,100
the next reboot<font color="#E5E5E5"> so it's basically kind</font>

1233
00:44:57,480 --> 00:45:04,080
<font color="#CCCCCC">of a cyclic issue</font><font color="#E5E5E5"> in Linux it's not so</font>

1234
00:45:02,100 --> 00:45:05,640
<font color="#E5E5E5">much the case</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> will block until it's</font>

1235
00:45:04,080 --> 00:45:07,950
got enough entropy<font color="#E5E5E5"> from I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know</font>

1236
00:45:05,640 --> 00:45:09,480
<font color="#E5E5E5">network disk activity stuff like that</font>

1237
00:45:07,950 --> 00:45:10,980
<font color="#E5E5E5">but this is</font><font color="#CCCCCC"> really a problem</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> a lot</font>

1238
00:45:09,480 --> 00:45:12,120
of<font color="#E5E5E5"> like cloud environments where</font>

1239
00:45:10,980 --> 00:45:15,480
everyone boots and there's like<font color="#E5E5E5"> no</font>

1240
00:45:12,120 --> 00:45:18,569
entropy coming<font color="#E5E5E5"> in to the systems</font><font color="#CCCCCC"> and so</font>

1241
00:45:15,480 --> 00:45:20,130
in that case currently<font color="#E5E5E5"> Libre cells</font>

1242
00:45:18,570 --> 00:45:22,560
implementation will fall<font color="#E5E5E5"> back</font><font color="#CCCCCC"> to that</font>

1243
00:45:20,130 --> 00:45:24,570
kind<font color="#E5E5E5"> of crappy 67 per second you know</font>

1244
00:45:22,560 --> 00:45:26,520
fall back which under the covers is

1245
00:45:24,570 --> 00:45:29,490
really still asking Linux for entropy

1246
00:45:26,520 --> 00:45:33,210
anyway so it's kind of it turns out it

1247
00:45:29,490 --> 00:45:34,899
works<font color="#E5E5E5"> maybe due to a quirk in Linux what</font>

1248
00:45:33,210 --> 00:45:36,460
we really<font color="#E5E5E5"> like is</font><font color="#CCCCCC"> for</font>

1249
00:45:34,900 --> 00:45:39,039
and other<font color="#CCCCCC"> references</font><font color="#E5E5E5"> the influent get</font>

1250
00:45:36,460 --> 00:45:40,900
entropy to have some way to<font color="#E5E5E5"> reliably see</font>

1251
00:45:39,039 --> 00:45:42,400
their<font color="#CCCCCC"> intrument generator on boot I</font>

1252
00:45:40,900 --> 00:45:43,529
don't<font color="#E5E5E5"> think anyone's really solved that</font>

1253
00:45:42,400 --> 00:45:45,460
problem<font color="#E5E5E5"> one of the one of the</font>

1254
00:45:43,529 --> 00:45:47,440
hesitations at least<font color="#E5E5E5"> I've heard from the</font>

1255
00:45:45,460 --> 00:45:50,740
<font color="#E5E5E5">likes community is because the kernels</font>

1256
00:45:47,440 --> 00:45:52,029
the<font color="#E5E5E5"> boot loaders the ellipses the init</font>

1257
00:45:50,740 --> 00:45:53,589
RDS all those kind of<font color="#E5E5E5"> things are all</font>

1258
00:45:52,029 --> 00:45:55,359
maintained by different people<font color="#CCCCCC"> no one</font>

1259
00:45:53,589 --> 00:45:57,730
<font color="#E5E5E5">really wants</font><font color="#CCCCCC"> to work together to come up</font>

1260
00:45:55,359 --> 00:45:59,038
<font color="#E5E5E5">with the solution so that's the crux of</font>

1261
00:45:57,730 --> 00:46:02,140
<font color="#CCCCCC">the problem right</font><font color="#E5E5E5"> there</font>

1262
00:45:59,039 --> 00:46:04,720
hi thanks for the<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> and did you leave</font>

1263
00:46:02,140 --> 00:46:07,839
<font color="#CCCCCC">SSL guys do anything with the asn.1 code</font>

1264
00:46:04,720 --> 00:46:10,480
yeah<font color="#CCCCCC"> one of the first things we've been</font>

1265
00:46:07,839 --> 00:46:13,390
<font color="#CCCCCC">doing is we have unrolled all the macros</font>

1266
00:46:10,480 --> 00:46:15,369
<font color="#CCCCCC">so one of the biggest problems is that</font>

1267
00:46:13,390 --> 00:46:18,788
like the C code is all meta programmed

1268
00:46:15,369 --> 00:46:20,799
<font color="#E5E5E5">and it's kind of crazy</font><font color="#CCCCCC"> and that you</font>

1269
00:46:18,789 --> 00:46:22,630
can't tell what's implemented where

1270
00:46:20,799 --> 00:46:24,490
because you have to follow four or five

1271
00:46:22,630 --> 00:46:27,220
different macro levels just just to read

1272
00:46:24,490 --> 00:46:29,020
it so actually<font color="#CCCCCC"> joel singh</font><font color="#E5E5E5"> actually</font>

1273
00:46:27,220 --> 00:46:30,879
unrolled all the<font color="#E5E5E5"> macros in all the asn.1</font>

1274
00:46:29,020 --> 00:46:34,660
code to just just<font color="#E5E5E5"> to make it</font><font color="#CCCCCC"> readable in</font>

1275
00:46:30,880 --> 00:46:36,730
the first place in addition we've been

1276
00:46:34,660 --> 00:46:38,980
doing a<font color="#E5E5E5"> lot of work to make a bit more</font>

1277
00:46:36,730 --> 00:46:40,539
<font color="#CCCCCC">memory safe</font><font color="#E5E5E5"> we've removed a lot of the</font>

1278
00:46:38,980 --> 00:46:43,660
allocations and deallocations from that

1279
00:46:40,539 --> 00:46:44,890
code<font color="#E5E5E5"> we've had a few foibles along the</font>

1280
00:46:43,660 --> 00:46:47,379
way we tried to<font color="#CCCCCC"> simplify things</font>

1281
00:46:44,890 --> 00:46:48,609
sometimes and have failed especially

1282
00:46:47,380 --> 00:46:51,279
with regards to<font color="#E5E5E5"> like certificate</font>

1283
00:46:48,609 --> 00:46:54,220
validations<font color="#CCCCCC"> date time is another issue</font>

1284
00:46:51,279 --> 00:46:55,779
<font color="#E5E5E5">that's interesting in</font><font color="#CCCCCC"> that when we're</font>

1285
00:46:54,220 --> 00:46:58,328
looking<font color="#E5E5E5"> at the different versions of</font>

1286
00:46:55,779 --> 00:47:00,609
dates<font color="#E5E5E5"> you know 32-bit 64-bit dates and</font>

1287
00:46:58,329 --> 00:47:04,000
that<font color="#E5E5E5"> sort of thing we didn't want to add</font>

1288
00:47:00,609 --> 00:47:06,578
<font color="#E5E5E5">32 bit compatibility code to</font><font color="#CCCCCC"> libres</font><font color="#E5E5E5"> to</font>

1289
00:47:04,000 --> 00:47:09,220
<font color="#E5E5E5">sell just to have again the we don't</font>

1290
00:47:06,579 --> 00:47:10,750
like<font color="#CCCCCC"> F deafs all</font><font color="#E5E5E5"> over the place and we</font>

1291
00:47:09,220 --> 00:47:13,990
really wanted<font color="#E5E5E5"> to sort of try to get</font>

1292
00:47:10,750 --> 00:47:16,380
<font color="#E5E5E5">everyone on 64-bit time T's and right</font>

1293
00:47:13,990 --> 00:47:20,098
now<font color="#CCCCCC"> Libre cell has some workarounds for</font>

1294
00:47:16,380 --> 00:47:22,420
<font color="#CCCCCC">32-bit code but they're very minimal and</font>

1295
00:47:20,099 --> 00:47:24,190
<font color="#E5E5E5">we throw a big warning whenever we</font>

1296
00:47:22,420 --> 00:47:26,980
compile on a 32-bit<font color="#E5E5E5"> system that doesn't</font>

1297
00:47:24,190 --> 00:47:31,150
<font color="#CCCCCC">have</font><font color="#E5E5E5"> 32-bit time T that hey this will</font>

1298
00:47:26,980 --> 00:47:35,289
stop working<font color="#E5E5E5"> in 2030</font><font color="#CCCCCC"> ish and you better</font>

1299
00:47:31,150 --> 00:47:37,420
fix your system before<font color="#E5E5E5"> that time</font><font color="#CCCCCC"> high so</font>

1300
00:47:35,289 --> 00:47:39,579
this is less<font color="#E5E5E5"> about like</font><font color="#CCCCCC"> libra asses out</font>

1301
00:47:37,420 --> 00:47:41,470
portability<font color="#E5E5E5"> but like TLS 1.3 just got</font>

1302
00:47:39,579 --> 00:47:43,660
ratified<font color="#E5E5E5"> yeah and like</font><font color="#CCCCCC"> libri SSL</font>

1303
00:47:41,470 --> 00:47:45,430
compared to like<font color="#E5E5E5"> open SSL</font><font color="#CCCCCC"> and boring SSL</font>

1304
00:47:43,660 --> 00:47:47,430
kind of tends to be more conservative

1305
00:47:45,430 --> 00:47:48,720
<font color="#E5E5E5">with implementing drafts of that's</font>

1306
00:47:47,430 --> 00:47:50,279
right implementations I think that's

1307
00:47:48,720 --> 00:47:53,308
great<font color="#E5E5E5"> but now that it's been ratified</font>

1308
00:47:50,280 --> 00:47:55,890
you know and<font color="#CCCCCC"> OpenSSL has it or in their</font>

1309
00:47:53,309 --> 00:47:57,900
beta and how what<font color="#CCCCCC"> does that timeline</font>

1310
00:47:55,890 --> 00:47:59,640
look like for<font color="#CCCCCC"> Libra asses okay</font><font color="#E5E5E5"> are you</font>

1311
00:47:57,900 --> 00:48:03,000
are you waiting for<font color="#E5E5E5"> opening cell to get</font>

1312
00:47:59,640 --> 00:48:05,730
<font color="#E5E5E5">out of beta</font><font color="#CCCCCC"> 1.1.1 or like are you trying</font>

1313
00:48:03,000 --> 00:48:07,800
<font color="#CCCCCC">to match compatibility with OpenSSL</font>

1314
00:48:05,730 --> 00:48:10,920
we're just kind of waiting<font color="#CCCCCC"> to</font><font color="#E5E5E5"> see what</font>

1315
00:48:07,800 --> 00:48:13,440
happens<font color="#CCCCCC"> I would say like a</font><font color="#E5E5E5"> lot of open</font>

1316
00:48:10,920 --> 00:48:15,660
<font color="#E5E5E5">source</font><font color="#CCCCCC"> software a lot</font><font color="#E5E5E5"> of that's written</font>

1317
00:48:13,440 --> 00:48:18,540
to scratch<font color="#CCCCCC"> a personal itch</font><font color="#E5E5E5"> so a lot of</font>

1318
00:48:15,660 --> 00:48:20,180
<font color="#E5E5E5">the folks that develop Libra</font><font color="#CCCCCC"> SSL do use</font>

1319
00:48:18,540 --> 00:48:22,410
it and like say some business capacity

1320
00:48:20,180 --> 00:48:24,660
<font color="#E5E5E5">may they build like routers and stuff</font>

1321
00:48:22,410 --> 00:48:26,790
<font color="#E5E5E5">like that on</font><font color="#CCCCCC"> it but</font><font color="#E5E5E5"> no one internally</font>

1322
00:48:24,660 --> 00:48:30,089
really has like that it's<font color="#E5E5E5"> that they need</font>

1323
00:48:26,790 --> 00:48:33,210
to scratch for for building open SSL or

1324
00:48:30,089 --> 00:48:35,640
I'm<font color="#E5E5E5"> sorry I sell one or TLS one two one</font>

1325
00:48:33,210 --> 00:48:40,200
three compatibility but we are having a

1326
00:48:35,640 --> 00:48:41,790
hackathon<font color="#CCCCCC"> next</font><font color="#E5E5E5"> I know March February</font><font color="#CCCCCC"> or</font>

1327
00:48:40,200 --> 00:48:42,990
something like<font color="#E5E5E5"> that and maybe we'll get</font>

1328
00:48:41,790 --> 00:48:44,460
together and<font color="#E5E5E5"> they're gonna own you that</font>

1329
00:48:42,990 --> 00:48:48,750
is zero round-trip time you know you got

1330
00:48:44,460 --> 00:48:50,309
to get<font color="#E5E5E5"> it correctly</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> I guess it kind</font>

1331
00:48:48,750 --> 00:48:52,020
of depends if<font color="#CCCCCC"> Sun wants to sponsor</font><font color="#E5E5E5"> this</font>

1332
00:48:50,309 --> 00:48:53,460
and maybe<font color="#E5E5E5"> let me take a six-month</font>

1333
00:48:52,020 --> 00:48:55,500
sabbatical or something like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> yeah</font>

1334
00:48:53,460 --> 00:48:59,250
well I don't<font color="#CCCCCC"> know Kaylee gave me a</font><font color="#E5E5E5"> weird</font>

1335
00:48:55,500 --> 00:49:00,869
look anyway yeah<font color="#E5E5E5"> so so yeah</font><font color="#CCCCCC"> everyone</font>

1336
00:48:59,250 --> 00:49:02,849
<font color="#CCCCCC">kind</font><font color="#E5E5E5"> of depends occasionally we do</font>

1337
00:49:00,869 --> 00:49:06,000
sponsor people<font color="#E5E5E5"> to just</font><font color="#CCCCCC"> tack on</font><font color="#E5E5E5"> things</font>

1338
00:49:02,849 --> 00:49:08,540
and fix it up it's it's<font color="#CCCCCC"> in their own</font>

1339
00:49:06,000 --> 00:49:08,540
possibility

1340
00:49:11,900 --> 00:49:15,890
for your for your<font color="#CCCCCC"> random</font><font color="#E5E5E5"> number seating</font>

1341
00:49:14,509 --> 00:49:19,069
<font color="#E5E5E5">have you ever worked with the hardware</font>

1342
00:49:15,890 --> 00:49:20,930
<font color="#CCCCCC">random number generators so the random</font>

1343
00:49:19,069 --> 00:49:23,058
<font color="#E5E5E5">number standard random number seating</font>

1344
00:49:20,930 --> 00:49:24,828
<font color="#CCCCCC">trust the operating system</font><font color="#E5E5E5"> to do the</font>

1345
00:49:23,059 --> 00:49:27,980
right thing if your<font color="#CCCCCC"> operating</font><font color="#E5E5E5"> system</font>

1346
00:49:24,829 --> 00:49:30,440
uses say Intel's<font color="#CCCCCC"> you know random number</font>

1347
00:49:27,980 --> 00:49:32,210
generation code or arms or anyone elses

1348
00:49:30,440 --> 00:49:35,450
<font color="#E5E5E5">we're going to trust the operating</font>

1349
00:49:32,210 --> 00:49:37,579
system<font color="#E5E5E5"> to do the right thing I forget</font><font color="#CCCCCC"> if</font>

1350
00:49:35,450 --> 00:49:40,029
open BSD itself<font color="#E5E5E5"> actually includes it but</font>

1351
00:49:37,579 --> 00:49:43,849
it certainly doesn't solely rely on it

1352
00:49:40,029 --> 00:49:46,579
<font color="#E5E5E5">into its entropy generation</font><font color="#CCCCCC"> I would say</font>

1353
00:49:43,849 --> 00:49:48,799
that most<font color="#CCCCCC"> folks that use</font><font color="#E5E5E5"> like say cpu</font>

1354
00:49:46,579 --> 00:49:51,319
generations<font color="#E5E5E5"> they still always whiten it</font>

1355
00:49:48,799 --> 00:49:53,150
with some sort<font color="#CCCCCC"> of</font><font color="#E5E5E5"> other source and don't</font>

1356
00:49:51,319 --> 00:49:56,299
trust it as the sole source<font color="#E5E5E5"> make it so</font>

1357
00:49:53,150 --> 00:49:58,249
<font color="#CCCCCC">that you know when some random thing</font>

1358
00:49:56,299 --> 00:50:00,019
comes<font color="#E5E5E5"> out about it just doesn't work or</font>

1359
00:49:58,249 --> 00:50:03,230
maybe<font color="#E5E5E5"> maliciously</font><font color="#CCCCCC"> unintentionally</font>

1360
00:50:00,019 --> 00:50:06,499
whatever<font color="#CCCCCC"> we're not sort</font><font color="#E5E5E5"> of have all our</font>

1361
00:50:03,230 --> 00:50:08,869
goodies in one basket<font color="#CCCCCC"> but effectively</font>

1362
00:50:06,499 --> 00:50:10,308
<font color="#E5E5E5">that's kind of for the implementer to</font>

1363
00:50:08,869 --> 00:50:12,470
decide and that<font color="#CCCCCC"> involves something</font><font color="#E5E5E5"> we're</font>

1364
00:50:10,309 --> 00:50:18,890
<font color="#CCCCCC">trying</font><font color="#E5E5E5"> to be opinionated</font><font color="#CCCCCC"> about in Libra</font>

1365
00:50:12,470 --> 00:50:20,299
so um<font color="#E5E5E5"> we did run a</font><font color="#CCCCCC"> Tantra</font><font color="#E5E5E5"> P when doing</font>

1366
00:50:18,890 --> 00:50:23,058
<font color="#E5E5E5">it</font><font color="#CCCCCC"> was kind of a cloud-based solution</font>

1367
00:50:20,299 --> 00:50:25,970
<font color="#E5E5E5">running on a hypervisor</font><font color="#CCCCCC"> we ran to a</font>

1368
00:50:23,059 --> 00:50:29,299
couple things we ran into older<font color="#CCCCCC"> hardware</font>

1369
00:50:25,970 --> 00:50:32,299
<font color="#E5E5E5">versions of the VMS where the things</font>

1370
00:50:29,299 --> 00:50:34,220
that<font color="#CCCCCC"> linux used to generate and</font><font color="#E5E5E5"> Trippi</font>

1371
00:50:32,299 --> 00:50:38,029
weren't available<font color="#E5E5E5"> during</font><font color="#CCCCCC"> the virtual</font>

1372
00:50:34,220 --> 00:50:39,589
<font color="#CCCCCC">chipset</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> so that was a bummer</font>

1373
00:50:38,029 --> 00:50:41,210
and then<font color="#CCCCCC"> we've learned</font><font color="#E5E5E5"> that if there's a</font>

1374
00:50:39,589 --> 00:50:43,578
<font color="#E5E5E5">lot of programs executing because of</font>

1375
00:50:41,210 --> 00:50:45,739
what you<font color="#CCCCCC"> pointed out earlier</font><font color="#E5E5E5"> that they</font>

1376
00:50:43,579 --> 00:50:47,720
use random numbers for<font color="#E5E5E5"> loading the</font>

1377
00:50:45,739 --> 00:50:50,049
<font color="#CCCCCC">program's</font><font color="#E5E5E5"> you could also run outta</font>

1378
00:50:47,720 --> 00:50:52,359
entropy so it's kind of important<font color="#CCCCCC"> to</font>

1379
00:50:50,049 --> 00:50:55,339
keep an eye on<font color="#E5E5E5"> that in your program</font>

1380
00:50:52,359 --> 00:50:56,690
<font color="#CCCCCC">right right and what I think I think</font><font color="#E5E5E5"> one</font>

1381
00:50:55,339 --> 00:50:59,808
<font color="#CCCCCC">of the</font><font color="#E5E5E5"> advantages of the arc for</font><font color="#CCCCCC"> a</font>

1382
00:50:56,690 --> 00:51:01,849
random approach is<font color="#CCCCCC"> that one you'll</font><font color="#E5E5E5"> never</font>

1383
00:50:59,809 --> 00:51:04,279
see a individual process<font color="#E5E5E5"> use more than</font>

1384
00:51:01,849 --> 00:51:06,380
<font color="#E5E5E5">two</font><font color="#CCCCCC"> hundred six bytes of entropy because</font>

1385
00:51:04,279 --> 00:51:07,819
that's all it<font color="#E5E5E5"> really</font><font color="#CCCCCC"> it only</font><font color="#E5E5E5"> grabs 128</font>

1386
00:51:06,380 --> 00:51:09,829
bytes to<font color="#CCCCCC"> seed</font><font color="#E5E5E5"> in the first place for</font><font color="#CCCCCC"> our</font>

1387
00:51:07,819 --> 00:51:11,239
<font color="#E5E5E5">for random does it once and it's done so</font>

1388
00:51:09,829 --> 00:51:12,410
your program<font color="#E5E5E5"> shouldn't run out now</font>

1389
00:51:11,239 --> 00:51:14,900
<font color="#E5E5E5">obviously there's the forking issue</font>

1390
00:51:12,410 --> 00:51:16,700
which could be<font color="#E5E5E5"> an another problem and</font>

1391
00:51:14,900 --> 00:51:18,619
there's<font color="#E5E5E5"> not really a good way to get</font>

1392
00:51:16,700 --> 00:51:19,910
<font color="#E5E5E5">around that right now</font><font color="#CCCCCC"> I think it's</font>

1393
00:51:18,619 --> 00:51:22,430
important<font color="#CCCCCC"> that the program is blocked</font>

1394
00:51:19,910 --> 00:51:23,779
<font color="#E5E5E5">rather than you know failing open but I</font>

1395
00:51:22,430 --> 00:51:24,890
just<font color="#CCCCCC"> made one</font><font color="#E5E5E5"> other thing to note about</font>

1396
00:51:23,779 --> 00:51:27,260
<font color="#CCCCCC">arc for Rand</font>

1397
00:51:24,890 --> 00:51:29,000
is that if you never call it<font color="#E5E5E5"> you'll</font>

1398
00:51:27,260 --> 00:51:31,220
<font color="#E5E5E5">never it</font><font color="#CCCCCC"> never gets</font><font color="#E5E5E5"> seated either</font>

1399
00:51:29,000 --> 00:51:32,240
<font color="#CCCCCC">there's actually a mutex around it and</font>

1400
00:51:31,220 --> 00:51:34,189
<font color="#E5E5E5">it checks to see</font><font color="#CCCCCC"> if it's been seated</font>

1401
00:51:32,240 --> 00:51:38,290
<font color="#E5E5E5">once before or not and if it never gets</font>

1402
00:51:34,190 --> 00:51:38,290
<font color="#E5E5E5">called then it never becomes a problem</font>

1403
00:51:39,190 --> 00:51:48,710
<font color="#CCCCCC">any more questions</font><font color="#E5E5E5"> who's got a couple</font>

1404
00:51:42,200 --> 00:51:50,330
<font color="#E5E5E5">more minutes</font><font color="#CCCCCC"> left</font><font color="#E5E5E5"> nut</font><font color="#CCCCCC"> oh we're late</font>

1405
00:51:48,710 --> 00:51:51,560
relate to some of<font color="#CCCCCC"> these questions who</font>

1406
00:51:50,330 --> 00:51:53,330
would you trust<font color="#E5E5E5"> from an audit</font>

1407
00:51:51,560 --> 00:51:56,660
<font color="#CCCCCC">perspective is</font><font color="#E5E5E5"> there an organization</font>

1408
00:51:53,330 --> 00:51:58,759
<font color="#CCCCCC">that says we looked at these</font><font color="#E5E5E5"> 32 random</font>

1409
00:51:56,660 --> 00:52:00,470
number generators then we<font color="#E5E5E5"> we generated a</font>

1410
00:51:58,760 --> 00:52:03,170
tree and random numbers<font color="#E5E5E5"> from each one</font>

1411
00:52:00,470 --> 00:52:05,299
and verified which one seemed more truly

1412
00:52:03,170 --> 00:52:10,190
random is there a source<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you would</font>

1413
00:52:05,300 --> 00:52:12,890
feel<font color="#CCCCCC"> trust able on that</font><font color="#E5E5E5"> idea well I'd</font>

1414
00:52:10,190 --> 00:52:15,380
<font color="#E5E5E5">say</font><font color="#CCCCCC"> that a lot of</font><font color="#E5E5E5"> folks trust Daniel</font>

1415
00:52:12,890 --> 00:52:18,650
Bernstein for<font color="#E5E5E5"> a lot of this kind of</font>

1416
00:52:15,380 --> 00:52:19,940
stuff he's sort of<font color="#E5E5E5"> our you know our oh I</font>

1417
00:52:18,650 --> 00:52:24,350
don't know what the word is<font color="#CCCCCC"> for someone</font>

1418
00:52:19,940 --> 00:52:25,460
<font color="#CCCCCC">that</font><font color="#E5E5E5"> everyone trusts but anyway that's</font>

1419
00:52:24,350 --> 00:52:28,640
one of the reasons why we use<font color="#CCCCCC"> Chacho</font>

1420
00:52:25,460 --> 00:52:30,620
<font color="#CCCCCC">24-under underlying byte stream as far</font>

1421
00:52:28,640 --> 00:52:32,330
as the rest<font color="#E5E5E5"> of the trust ability</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think</font>

1422
00:52:30,620 --> 00:52:34,130
the answer<font color="#CCCCCC"> is don't</font><font color="#E5E5E5"> trust anyone</font><font color="#CCCCCC"> in</font>

1423
00:52:32,330 --> 00:52:36,140
particular<font color="#CCCCCC"> just</font><font color="#E5E5E5"> trust a lot of</font><font color="#CCCCCC"> people at</font>

1424
00:52:34,130 --> 00:52:38,690
the same<font color="#CCCCCC"> time and hopefully</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> bad ones</font>

1425
00:52:36,140 --> 00:52:41,980
get<font color="#CCCCCC"> canceled out</font><font color="#E5E5E5"> by</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> good ones that's</font>

1426
00:52:38,690 --> 00:52:41,980
all I can<font color="#E5E5E5"> only suggest at the moment</font>

1427
00:52:45,040 --> 00:52:47,270
<font color="#E5E5E5">what do you got time for</font><font color="#CCCCCC"> one more</font>

1428
00:52:46,670 --> 00:52:49,940
question

1429
00:52:47,270 --> 00:52:52,190
I was for the previous<font color="#CCCCCC"> persons</font><font color="#E5E5E5"> um if</font>

1430
00:52:49,940 --> 00:52:53,990
you're working in<font color="#E5E5E5"> certain fields you</font>

1431
00:52:52,190 --> 00:52:55,670
will<font color="#E5E5E5"> be told who to trust</font><font color="#CCCCCC"> by your</font>

1432
00:52:53,990 --> 00:52:57,890
customer yeah

1433
00:52:55,670 --> 00:53:02,570
that's a good point<font color="#CCCCCC"> you they</font><font color="#E5E5E5"> they have a</font>

1434
00:52:57,890 --> 00:53:04,060
<font color="#CCCCCC">there if you want</font><font color="#E5E5E5"> to talk to them all</font>

1435
00:53:02,570 --> 00:53:11,810
<font color="#CCCCCC">right</font><font color="#E5E5E5"> well thanks everybody</font>

1436
00:53:04,060 --> 00:53:11,810
[Applause]

