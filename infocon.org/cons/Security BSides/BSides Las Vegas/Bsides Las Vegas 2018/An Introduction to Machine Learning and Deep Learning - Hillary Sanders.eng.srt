1
00:00:00,030 --> 00:00:04,650
my name is<font color="#E5E5E5"> Hilary</font><font color="#CCCCCC"> I am a senior</font><font color="#E5E5E5"> software</font>

2
00:00:03,360 --> 00:00:07,170
engineer on<font color="#E5E5E5"> the data science team that</font>

3
00:00:04,650 --> 00:00:09,300
<font color="#E5E5E5">sofas I also just wrote part of a book</font>

4
00:00:07,170 --> 00:00:11,190
<font color="#E5E5E5">on now our data science</font><font color="#CCCCCC"> I'll say the</font>

5
00:00:09,300 --> 00:00:13,650
bits<font color="#E5E5E5"> on deep learning</font><font color="#CCCCCC"> which is</font><font color="#E5E5E5"> the type</font>

6
00:00:11,190 --> 00:00:15,809
of<font color="#E5E5E5"> machine</font><font color="#CCCCCC"> learning since I really like</font>

7
00:00:13,650 --> 00:00:18,210
this stuff<font color="#CCCCCC"> and today I'm gonna give you</font>

8
00:00:15,809 --> 00:00:21,900
<font color="#E5E5E5">a pretty high</font><font color="#CCCCCC"> level overview of</font><font color="#E5E5E5"> machine</font>

9
00:00:18,210 --> 00:00:23,279
learning<font color="#CCCCCC"> and run through</font><font color="#E5E5E5"> a few quick</font>

10
00:00:21,900 --> 00:00:25,619
<font color="#CCCCCC">examples of</font><font color="#E5E5E5"> machine</font><font color="#CCCCCC"> learning and then</font>

11
00:00:23,279 --> 00:00:27,859
delve a<font color="#E5E5E5"> bit more deeply into deep</font>

12
00:00:25,619 --> 00:00:31,820
learning which<font color="#CCCCCC"> is about machine learning</font>

13
00:00:27,859 --> 00:00:34,590
<font color="#CCCCCC">since</font><font color="#E5E5E5"> it seems to be all the rage today</font>

14
00:00:31,820 --> 00:00:36,090
<font color="#CCCCCC">so for</font><font color="#E5E5E5"> those of you new to machine</font>

15
00:00:34,590 --> 00:00:38,340
<font color="#CCCCCC">learning which</font><font color="#E5E5E5"> I think there may be your</font>

16
00:00:36,090 --> 00:00:39,989
a lot<font color="#E5E5E5"> of you guys in</font><font color="#CCCCCC"> the audience</font><font color="#E5E5E5"> that's</font>

17
00:00:38,340 --> 00:00:41,550
great<font color="#E5E5E5"> this will</font><font color="#CCCCCC"> be a fairly</font><font color="#E5E5E5"> fast</font>

18
00:00:39,989 --> 00:00:44,250
introduction<font color="#E5E5E5"> since we only have</font><font color="#CCCCCC"> like 50</font>

19
00:00:41,550 --> 00:00:47,788
<font color="#CCCCCC">minutes but I'm gonna</font><font color="#E5E5E5"> try to keep things</font>

20
00:00:44,250 --> 00:00:50,070
pretty<font color="#CCCCCC"> simple and those to</font><font color="#E5E5E5"> those experts</font>

21
00:00:47,789 --> 00:00:52,469
<font color="#E5E5E5">in the audience</font><font color="#CCCCCC"> you know feel free to</font>

22
00:00:50,070 --> 00:00:55,800
sit<font color="#E5E5E5"> back and relax and feel lovely and</font>

23
00:00:52,469 --> 00:00:59,250
smug<font color="#CCCCCC"> since you've probably heard most of</font>

24
00:00:55,800 --> 00:01:00,989
<font color="#CCCCCC">this go for</font><font color="#E5E5E5"> also as a side note</font><font color="#CCCCCC"> if you</font>

25
00:00:59,250 --> 00:01:02,820
have<font color="#CCCCCC"> a question</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> if something it's</font>

26
00:01:00,989 --> 00:01:04,349
confusing<font color="#E5E5E5"> raise your hand and definitely</font>

27
00:01:02,820 --> 00:01:06,659
ask<font color="#E5E5E5"> because I think I have a few extra</font>

28
00:01:04,349 --> 00:01:08,580
<font color="#CCCCCC">minutes</font><font color="#E5E5E5"> of time and</font><font color="#CCCCCC"> probably everyone</font>

29
00:01:06,659 --> 00:01:12,960
<font color="#E5E5E5">else is thinking the same thing</font>

30
00:01:08,580 --> 00:01:13,590
so that's<font color="#E5E5E5"> great okay so</font><font color="#CCCCCC"> um what is</font>

31
00:01:12,960 --> 00:01:16,048
<font color="#E5E5E5">machine learning</font>

32
00:01:13,590 --> 00:01:18,900
<font color="#E5E5E5">let's start from the</font><font color="#CCCCCC"> top super-super</font>

33
00:01:16,049 --> 00:01:21,210
generally<font color="#E5E5E5"> machine learning just means</font>

34
00:01:18,900 --> 00:01:23,670
any sort of<font color="#CCCCCC"> mathematical process</font><font color="#E5E5E5"> that</font>

35
00:01:21,210 --> 00:01:25,770
looks<font color="#E5E5E5"> at</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> data</font><font color="#CCCCCC"> and tries to derive</font>

36
00:01:23,670 --> 00:01:27,630
rules<font color="#E5E5E5"> to do things like predict</font>

37
00:01:25,770 --> 00:01:29,640
something<font color="#E5E5E5"> about</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> data or print</font>

38
00:01:27,630 --> 00:01:31,829
something about future data or explain

39
00:01:29,640 --> 00:01:33,540
that data in some way<font color="#CCCCCC"> um so that's</font>

40
00:01:31,829 --> 00:01:36,600
really<font color="#CCCCCC"> really general you can think of</font><font color="#E5E5E5"> a</font>

41
00:01:33,540 --> 00:01:38,400
ton of<font color="#E5E5E5"> things that apply here but more</font>

42
00:01:36,600 --> 00:01:40,470
concretely we can<font color="#E5E5E5"> think of machine</font>

43
00:01:38,400 --> 00:01:42,630
learning<font color="#E5E5E5"> models as just big functions</font>

44
00:01:40,470 --> 00:01:45,929
<font color="#E5E5E5">right so you have an input like a</font>

45
00:01:42,630 --> 00:01:47,789
picture<font color="#CCCCCC"> of an apple</font><font color="#E5E5E5"> and you apply this</font>

46
00:01:45,930 --> 00:01:50,520
this machine learning function<font color="#CCCCCC"> um that</font>

47
00:01:47,790 --> 00:01:51,899
we build and you get some output<font color="#CCCCCC"> maybe</font>

48
00:01:50,520 --> 00:01:55,020
like the word Apple<font color="#E5E5E5"> or a numeric</font>

49
00:01:51,899 --> 00:01:56,219
representation of the word Apple<font color="#E5E5E5"> and so</font>

50
00:01:55,020 --> 00:01:58,020
we can do the same thing with malware

51
00:01:56,219 --> 00:02:00,509
<font color="#CCCCCC">this is actually what the data science</font>

52
00:01:58,020 --> 00:02:03,360
<font color="#E5E5E5">team at</font><font color="#CCCCCC"> Sophos focuses most of its time</font>

53
00:02:00,509 --> 00:02:05,790
on we build deep<font color="#CCCCCC"> learning models which</font>

54
00:02:03,360 --> 00:02:07,590
are<font color="#CCCCCC"> just big functions that take static</font>

55
00:02:05,790 --> 00:02:08,310
files like a doc file or<font color="#CCCCCC"> PDF file or</font>

56
00:02:07,590 --> 00:02:11,039
<font color="#CCCCCC">what</font><font color="#E5E5E5"> have you</font>

57
00:02:08,310 --> 00:02:13,020
<font color="#E5E5E5">tomah's input and output a score from 0</font>

58
00:02:11,038 --> 00:02:13,829
to<font color="#E5E5E5"> 1 indicating if the file looks</font>

59
00:02:13,020 --> 00:02:17,670
malicious

60
00:02:13,830 --> 00:02:19,710
<font color="#E5E5E5">um okay so the</font><font color="#CCCCCC"> question is right what</font>

61
00:02:17,670 --> 00:02:23,579
<font color="#CCCCCC">are these functions and how the heck do</font>

62
00:02:19,710 --> 00:02:25,550
<font color="#CCCCCC">you make them okay</font><font color="#E5E5E5"> so I want to walk</font>

63
00:02:23,580 --> 00:02:27,900
<font color="#E5E5E5">through the sort</font><font color="#CCCCCC"> of a toy example</font><font color="#E5E5E5"> to</font>

64
00:02:25,550 --> 00:02:30,390
showcase this so let's say that<font color="#E5E5E5"> we're</font>

65
00:02:27,900 --> 00:02:31,860
<font color="#CCCCCC">working with</font><font color="#E5E5E5"> HTML files and we want to</font>

66
00:02:30,390 --> 00:02:35,089
<font color="#E5E5E5">build a machine</font><font color="#CCCCCC"> learning model that</font><font color="#E5E5E5"> can</font>

67
00:02:31,860 --> 00:02:38,070
predict if a file is<font color="#E5E5E5"> benign or malicious</font>

68
00:02:35,090 --> 00:02:39,360
<font color="#CCCCCC">so a</font><font color="#E5E5E5"> first step in building a</font><font color="#CCCCCC"> machine</font>

69
00:02:38,070 --> 00:02:43,500
learning<font color="#CCCCCC"> model</font><font color="#E5E5E5"> it's called feature</font>

70
00:02:39,360 --> 00:02:46,320
extraction<font color="#CCCCCC"> so say we have a HTML file</font><font color="#E5E5E5"> we</font>

71
00:02:43,500 --> 00:02:47,670
<font color="#E5E5E5">need to represent it numerically</font><font color="#CCCCCC"> in a</font>

72
00:02:46,320 --> 00:02:51,959
way that we think<font color="#CCCCCC"> will be particularly</font>

73
00:02:47,670 --> 00:02:54,239
useful<font color="#CCCCCC"> for a models task</font><font color="#E5E5E5"> so because this</font>

74
00:02:51,959 --> 00:02:56,520
is<font color="#E5E5E5"> a toy example we're gonna extract two</font>

75
00:02:54,240 --> 00:02:59,400
features<font color="#E5E5E5"> file size the</font><font color="#CCCCCC"> number</font><font color="#E5E5E5"> of HTML</font>

76
00:02:56,520 --> 00:03:00,870
<font color="#CCCCCC">elements and we will very much pretend</font>

77
00:02:59,400 --> 00:03:02,550
that these two things<font color="#CCCCCC"> are incredibly</font>

78
00:03:00,870 --> 00:03:05,690
indicative of file maliciousness<font color="#E5E5E5"> even</font>

79
00:03:02,550 --> 00:03:08,550
though that's<font color="#E5E5E5"> a lie to a certain extent</font>

80
00:03:05,690 --> 00:03:11,400
<font color="#CCCCCC">so if we do this</font><font color="#E5E5E5"> across a bunch of known</font>

81
00:03:08,550 --> 00:03:14,520
<font color="#E5E5E5">malicious and benign HTML files right we</font>

82
00:03:11,400 --> 00:03:16,560
end up for the table with one row<font color="#E5E5E5"> per</font>

83
00:03:14,520 --> 00:03:19,350
<font color="#E5E5E5">file two columns and in machine learning</font>

84
00:03:16,560 --> 00:03:21,989
<font color="#CCCCCC">lingo we will be</font><font color="#E5E5E5"> operating in a two</font>

85
00:03:19,350 --> 00:03:24,269
dimensional feature space<font color="#CCCCCC"> so side note</font>

86
00:03:21,989 --> 00:03:27,120
<font color="#E5E5E5">if you've ever heard someone be</font><font color="#CCCCCC"> like oh</font>

87
00:03:24,269 --> 00:03:29,519
yes are our models<font color="#E5E5E5"> operate in a 512</font>

88
00:03:27,120 --> 00:03:31,890
dimensional feature space<font color="#E5E5E5"> that just</font>

89
00:03:29,519 --> 00:03:35,130
means they<font color="#E5E5E5"> probably have 512 columns in</font>

90
00:03:31,890 --> 00:03:39,119
the table and each<font color="#E5E5E5"> item is just 512</font>

91
00:03:35,130 --> 00:03:40,260
numbers<font color="#E5E5E5"> it's not not that fancy</font><font color="#CCCCCC"> um but</font>

92
00:03:39,120 --> 00:03:42,989
we're operating<font color="#E5E5E5"> in a</font><font color="#CCCCCC"> two dimensional</font>

93
00:03:40,260 --> 00:03:46,109
feature space<font color="#CCCCCC"> which is</font><font color="#E5E5E5"> handy because we</font>

94
00:03:42,989 --> 00:03:49,050
can<font color="#E5E5E5"> plot our</font><font color="#CCCCCC"> data so on the x-axis here</font>

95
00:03:46,110 --> 00:03:52,860
<font color="#CCCCCC">we have file size on</font><font color="#E5E5E5"> the y-axis we</font><font color="#CCCCCC"> have</font>

96
00:03:49,050 --> 00:03:55,530
a number<font color="#E5E5E5"> of HTML elements and every dot</font>

97
00:03:52,860 --> 00:03:57,180
in this plot<font color="#E5E5E5"> represents our training</font>

98
00:03:55,530 --> 00:03:59,100
data<font color="#E5E5E5"> and so we're</font><font color="#CCCCCC"> gonna build</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> machine</font>

99
00:03:57,180 --> 00:04:03,180
<font color="#E5E5E5">learning model and it looks at this data</font>

100
00:03:59,100 --> 00:04:05,070
<font color="#E5E5E5">and tries to do stuff</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> again because</font>

101
00:04:03,180 --> 00:04:06,540
<font color="#CCCCCC">this is a lovely</font><font color="#E5E5E5"> toy example our data is</font>

102
00:04:05,070 --> 00:04:08,340
highly clustered so we see that all of

103
00:04:06,540 --> 00:04:10,590
<font color="#CCCCCC">our known</font><font color="#E5E5E5"> malware files are here on the</font>

104
00:04:08,340 --> 00:04:16,950
bottom<font color="#E5E5E5"> and are known benign</font><font color="#CCCCCC"> where files</font>

105
00:04:10,590 --> 00:04:19,228
are over there<font color="#CCCCCC"> on the</font><font color="#E5E5E5"> top</font><font color="#CCCCCC"> so in machine</font>

106
00:04:16,950 --> 00:04:22,108
learning<font color="#CCCCCC"> at least in this</font><font color="#E5E5E5"> example our</font>

107
00:04:19,228 --> 00:04:23,880
goal is to<font color="#CCCCCC"> basically build this</font><font color="#E5E5E5"> model</font>

108
00:04:22,108 --> 00:04:26,820
<font color="#CCCCCC">that looks at our</font><font color="#E5E5E5"> data and finds a</font>

109
00:04:23,880 --> 00:04:27,610
decision boundary<font color="#CCCCCC"> which is</font><font color="#E5E5E5"> this black</font>

110
00:04:26,820 --> 00:04:31,500
line<font color="#CCCCCC"> here</font>

111
00:04:27,610 --> 00:04:34,900
right<font color="#CCCCCC"> so that when a new example is seen</font>

112
00:04:31,500 --> 00:04:37,960
<font color="#CCCCCC">it can look</font><font color="#E5E5E5"> at it and say</font><font color="#CCCCCC"> okay well this</font>

113
00:04:34,900 --> 00:04:39,669
test file<font color="#E5E5E5"> is above my decision boundary</font>

114
00:04:37,960 --> 00:04:41,378
and<font color="#E5E5E5"> it's pretty far away from it</font><font color="#CCCCCC"> so I'm</font>

115
00:04:39,669 --> 00:04:45,240
pretty<font color="#CCCCCC"> sure it's benign not gonna block</font>

116
00:04:41,379 --> 00:04:47,650
it<font color="#CCCCCC"> and that's that's the basic idea so</font>

117
00:04:45,240 --> 00:04:50,110
<font color="#CCCCCC">how do</font><font color="#E5E5E5"> you find these decision</font>

118
00:04:47,650 --> 00:04:51,969
boundaries<font color="#CCCCCC"> how do you make models that</font>

119
00:04:50,110 --> 00:04:53,710
draw these lines<font color="#E5E5E5"> well there's a ton of</font>

120
00:04:51,969 --> 00:04:54,909
different<font color="#E5E5E5"> methods</font><font color="#CCCCCC"> and sometimes you're</font>

121
00:04:53,710 --> 00:04:56,580
<font color="#CCCCCC">not really</font><font color="#E5E5E5"> finding decision boundaries</font>

122
00:04:54,909 --> 00:04:59,560
you're<font color="#E5E5E5"> finding clusters or other things</font>

123
00:04:56,580 --> 00:05:01,448
<font color="#CCCCCC">but</font><font color="#E5E5E5"> whatever the method you're</font><font color="#CCCCCC"> using</font><font color="#E5E5E5"> in</font>

124
00:04:59,560 --> 00:05:03,520
general you can sort<font color="#CCCCCC"> of think of</font><font color="#E5E5E5"> the</font>

125
00:05:01,449 --> 00:05:07,060
learning process<font color="#E5E5E5"> with a sort of a knob</font>

126
00:05:03,520 --> 00:05:08,650
metaphor on a control panel<font color="#CCCCCC"> um</font><font color="#E5E5E5"> so I</font>

127
00:05:07,060 --> 00:05:11,949
<font color="#E5E5E5">imagine the shape of our decision</font>

128
00:05:08,650 --> 00:05:15,219
boundary<font color="#E5E5E5"> is determined by right</font><font color="#CCCCCC"> a bunch</font>

129
00:05:11,949 --> 00:05:16,389
of knobs on this control panel<font color="#CCCCCC"> and by</font>

130
00:05:15,219 --> 00:05:19,629
looking<font color="#CCCCCC"> at the training</font><font color="#E5E5E5"> data that we</font>

131
00:05:16,389 --> 00:05:20,800
have<font color="#E5E5E5"> and turning our knobs into just the</font>

132
00:05:19,629 --> 00:05:23,069
right position<font color="#E5E5E5"> which are really just</font>

133
00:05:20,800 --> 00:05:26,710
parameters<font color="#E5E5E5"> in our mathematical function</font>

134
00:05:23,069 --> 00:05:29,919
<font color="#CCCCCC">we can get a</font><font color="#E5E5E5"> decision boundary that is</font>

135
00:05:26,710 --> 00:05:32,710
good<font color="#E5E5E5"> on so to do to do this we define</font>

136
00:05:29,919 --> 00:05:36,758
<font color="#E5E5E5">something called loss which is basically</font>

137
00:05:32,710 --> 00:05:38,799
like<font color="#CCCCCC"> air so in this example loss for us</font>

138
00:05:36,759 --> 00:05:41,740
could be<font color="#CCCCCC"> the percentage of misclassified</font>

139
00:05:38,800 --> 00:05:44,830
observations<font color="#E5E5E5"> and so we use various</font>

140
00:05:41,740 --> 00:05:46,300
mathematical<font color="#E5E5E5"> processes to try</font><font color="#CCCCCC"> to find</font>

141
00:05:44,830 --> 00:05:49,870
decision boundaries<font color="#E5E5E5"> that minimize loss</font>

142
00:05:46,300 --> 00:05:51,909
right so this could be<font color="#CCCCCC"> as simple</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> for</font>

143
00:05:49,870 --> 00:05:54,370
<font color="#CCCCCC">tur being the line maybe so that it goes</font>

144
00:05:51,909 --> 00:05:57,009
<font color="#E5E5E5">right</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> and then recalculating loss</font>

145
00:05:54,370 --> 00:05:59,289
and saying oh<font color="#E5E5E5"> well our loss is decreased</font>

146
00:05:57,009 --> 00:06:01,419
<font color="#CCCCCC">because now this blue dot</font><font color="#E5E5E5"> is with its</font>

147
00:05:59,289 --> 00:06:03,759
<font color="#E5E5E5">friends so we're happy so we're gonna</font>

148
00:06:01,419 --> 00:06:06,339
keep that little parameter change that

149
00:06:03,759 --> 00:06:07,659
was that was random<font color="#CCCCCC"> but there's</font>

150
00:06:06,339 --> 00:06:12,729
different<font color="#CCCCCC"> that there's different ways to</font>

151
00:06:07,659 --> 00:06:15,909
do this<font color="#E5E5E5"> okay so that again was a very</font>

152
00:06:12,729 --> 00:06:17,589
very general description<font color="#E5E5E5"> and so I want</font>

153
00:06:15,909 --> 00:06:20,319
<font color="#E5E5E5">to go through a few actual examples of</font>

154
00:06:17,589 --> 00:06:22,240
machine<font color="#E5E5E5"> learning functions</font><font color="#CCCCCC"> um</font><font color="#E5E5E5"> mostly</font>

155
00:06:20,319 --> 00:06:28,569
mostly very classic<font color="#CCCCCC"> examples using</font><font color="#E5E5E5"> our</font>

156
00:06:22,240 --> 00:06:30,400
toy<font color="#E5E5E5"> dataset oops what's wrong okay</font><font color="#CCCCCC"> so</font>

157
00:06:28,569 --> 00:06:31,629
the first method to find<font color="#E5E5E5"> a decision</font>

158
00:06:30,400 --> 00:06:33,909
boundary<font color="#E5E5E5"> that I'm going to introduce</font>

159
00:06:31,629 --> 00:06:36,159
<font color="#CCCCCC">this very simple it's just</font><font color="#E5E5E5"> a decision</font>

160
00:06:33,909 --> 00:06:40,330
<font color="#CCCCCC">tree</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> may have</font><font color="#E5E5E5"> heard of it</font><font color="#CCCCCC"> so to</font>

161
00:06:36,159 --> 00:06:41,320
create a decision tree<font color="#CCCCCC"> we first</font><font color="#E5E5E5"> ask okay</font>

162
00:06:40,330 --> 00:06:42,940
I have<font color="#CCCCCC"> my data</font>

163
00:06:41,320 --> 00:06:45,730
and I split my data up into<font color="#E5E5E5"> two groups</font>

164
00:06:42,940 --> 00:06:47,680
<font color="#CCCCCC">by a single feature threshold</font><font color="#E5E5E5"> right so</font>

165
00:06:45,730 --> 00:06:50,560
we have two<font color="#CCCCCC"> features and we can split</font><font color="#E5E5E5"> up</font>

166
00:06:47,680 --> 00:06:51,910
our data<font color="#E5E5E5"> by getting a threshold on</font>

167
00:06:50,560 --> 00:06:54,610
<font color="#CCCCCC">whatever features and so all this really</font>

168
00:06:51,910 --> 00:06:56,830
<font color="#E5E5E5">means is that we're either choosing a</font>

169
00:06:54,610 --> 00:07:00,400
horizontal or vertical line to split our

170
00:06:56,830 --> 00:07:02,789
data up into<font color="#E5E5E5"> once we've done that we</font>

171
00:07:00,400 --> 00:07:06,039
<font color="#E5E5E5">just ask the same question again and</font>

172
00:07:02,790 --> 00:07:08,680
split<font color="#E5E5E5"> each of these two</font><font color="#CCCCCC"> groups into two</font>

173
00:07:06,040 --> 00:07:12,670
more<font color="#E5E5E5"> groups</font><font color="#CCCCCC"> right so in this</font><font color="#E5E5E5"> case at</font>

174
00:07:08,680 --> 00:07:14,950
sorry what I should<font color="#CCCCCC"> have said and we</font>

175
00:07:12,670 --> 00:07:17,230
choose this line<font color="#E5E5E5"> in order to minimize</font>

176
00:07:14,950 --> 00:07:18,520
<font color="#E5E5E5">loss right so we might we</font><font color="#CCCCCC"> might test out</font>

177
00:07:17,230 --> 00:07:20,830
this line and this line and<font color="#E5E5E5"> this line</font>

178
00:07:18,520 --> 00:07:23,530
and<font color="#E5E5E5"> this line and calculate</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> lost</font>

179
00:07:20,830 --> 00:07:26,080
every<font color="#E5E5E5"> single time</font><font color="#CCCCCC"> and realized hey</font><font color="#E5E5E5"> the</font>

180
00:07:23,530 --> 00:07:28,119
percentage of misclassified observations

181
00:07:26,080 --> 00:07:30,550
is lowest<font color="#E5E5E5"> when I draw this</font><font color="#CCCCCC"> line here</font>

182
00:07:28,120 --> 00:07:31,930
<font color="#E5E5E5">right oh oh the orange guys are over on</font>

183
00:07:30,550 --> 00:07:36,160
this side<font color="#E5E5E5"> and all</font><font color="#CCCCCC"> the blue guys over on</font>

184
00:07:31,930 --> 00:07:39,090
this side<font color="#CCCCCC"> so we do this again sorry</font>

185
00:07:36,160 --> 00:07:42,190
<font color="#E5E5E5">that's wrong way again we do this again</font>

186
00:07:39,090 --> 00:07:43,510
to get four groups<font color="#E5E5E5"> and you could do this</font>

187
00:07:42,190 --> 00:07:46,300
again<font color="#E5E5E5"> and again</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> again and grow a</font>

188
00:07:43,510 --> 00:07:48,130
really big decision tree<font color="#CCCCCC"> but for now</font>

189
00:07:46,300 --> 00:07:50,410
we'll<font color="#CCCCCC"> just</font><font color="#E5E5E5"> have four groups</font><font color="#CCCCCC"> and what you</font>

190
00:07:48,130 --> 00:07:52,270
<font color="#E5E5E5">end up</font><font color="#CCCCCC"> with is a</font><font color="#E5E5E5"> decision tree</font><font color="#CCCCCC"> like this</font>

191
00:07:50,410 --> 00:07:55,240
which is<font color="#E5E5E5"> right just a series of booing</font>

192
00:07:52,270 --> 00:07:58,120
questions<font color="#CCCCCC"> so this is a function with an</font>

193
00:07:55,240 --> 00:08:01,660
input which is a file<font color="#E5E5E5"> as defined</font><font color="#CCCCCC"> by our</font>

194
00:07:58,120 --> 00:08:04,390
<font color="#E5E5E5">two features and an output which is what</font>

195
00:08:01,660 --> 00:08:06,220
group it ended up in and so<font color="#CCCCCC"> the point</font><font color="#E5E5E5"> is</font>

196
00:08:04,390 --> 00:08:08,460
<font color="#E5E5E5">right that</font><font color="#CCCCCC"> we can have an input test</font>

197
00:08:06,220 --> 00:08:11,980
<font color="#E5E5E5">file and run it</font><font color="#CCCCCC"> through a</font><font color="#E5E5E5"> decision tree</font>

198
00:08:08,460 --> 00:08:14,680
and realize hey well in our training

199
00:08:11,980 --> 00:08:19,540
examples<font color="#E5E5E5"> when we ran through training</font>

200
00:08:14,680 --> 00:08:21,430
examples<font color="#E5E5E5"> and it ended up in this what's</font>

201
00:08:19,540 --> 00:08:23,710
called<font color="#E5E5E5"> as a leaf node when it ended up</font>

202
00:08:21,430 --> 00:08:25,900
in this group<font color="#E5E5E5"> these the files were</font>

203
00:08:23,710 --> 00:08:27,640
malicious<font color="#CCCCCC"> about</font><font color="#E5E5E5"> 7% of the time and so</font>

204
00:08:25,900 --> 00:08:31,770
<font color="#CCCCCC">are sort of like output maliciousness</font>

205
00:08:27,640 --> 00:08:36,069
<font color="#E5E5E5">probability score</font><font color="#CCCCCC"> it's going to be 7%</font>

206
00:08:31,770 --> 00:08:37,870
okay<font color="#E5E5E5"> so that was a decision tree</font><font color="#CCCCCC"> a bit</font>

207
00:08:36,070 --> 00:08:40,330
more complicated than<font color="#CCCCCC"> a decision tree is</font>

208
00:08:37,870 --> 00:08:41,530
<font color="#E5E5E5">something called a random forest which</font>

209
00:08:40,330 --> 00:08:45,580
<font color="#E5E5E5">is another type of machine learning</font>

210
00:08:41,530 --> 00:08:47,470
function<font color="#E5E5E5"> the basic idea</font><font color="#CCCCCC"> is to make a</font>

211
00:08:45,580 --> 00:08:49,480
bunch of<font color="#E5E5E5"> different decision trees and</font>

212
00:08:47,470 --> 00:08:51,940
then have them all look together to try

213
00:08:49,480 --> 00:08:54,360
<font color="#E5E5E5">to decide if in our example a file is</font>

214
00:08:51,940 --> 00:08:55,980
benign or<font color="#E5E5E5"> malicious so</font>

215
00:08:54,360 --> 00:08:59,339
<font color="#E5E5E5">to make a bunch of different decision</font>

216
00:08:55,980 --> 00:09:02,370
trees<font color="#E5E5E5"> each tree is first trained on a</font>

217
00:08:59,339 --> 00:09:05,279
random subset<font color="#E5E5E5"> or every sampling of your</font>

218
00:09:02,370 --> 00:09:07,140
<font color="#CCCCCC">data set right so instead</font><font color="#E5E5E5"> of just grind</font>

219
00:09:05,279 --> 00:09:10,649
one tree like before we might grow a

220
00:09:07,140 --> 00:09:11,970
hundred and one tree<font color="#CCCCCC"> we'll only look</font><font color="#E5E5E5"> at</font>

221
00:09:10,649 --> 00:09:13,410
some of the dots<font color="#E5E5E5"> in our data set the</font>

222
00:09:11,970 --> 00:09:16,230
next<font color="#CCCCCC"> one we'll look</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> different dots in</font>

223
00:09:13,410 --> 00:09:18,209
our<font color="#CCCCCC"> data set the second special</font><font color="#E5E5E5"> thing</font>

224
00:09:16,230 --> 00:09:20,339
about decision<font color="#CCCCCC"> trees and random forests</font>

225
00:09:18,209 --> 00:09:22,760
is that instead<font color="#E5E5E5"> of allowing them to</font>

226
00:09:20,339 --> 00:09:25,769
split<font color="#CCCCCC"> on sort of like the any feature</font>

227
00:09:22,760 --> 00:09:28,019
<font color="#CCCCCC">that best minimizes lost in each Fork</font>

228
00:09:25,769 --> 00:09:30,750
the decision tree each<font color="#CCCCCC"> fork is only</font>

229
00:09:28,019 --> 00:09:34,010
allowed to<font color="#E5E5E5"> split on a random</font><font color="#CCCCCC"> subset of</font>

230
00:09:30,750 --> 00:09:38,820
the features<font color="#E5E5E5"> does that make sense</font><font color="#CCCCCC"> and so</font>

231
00:09:34,010 --> 00:09:40,860
<font color="#CCCCCC">the point</font><font color="#E5E5E5"> of this it's probably a bit</font>

232
00:09:38,820 --> 00:09:44,220
out of<font color="#CCCCCC"> scope to really delve into why</font>

233
00:09:40,860 --> 00:09:46,560
<font color="#CCCCCC">this is super useful but the basic idea</font>

234
00:09:44,220 --> 00:09:48,420
is that you're sort of jumbling<font color="#CCCCCC"> up all</font>

235
00:09:46,560 --> 00:09:50,640
these decision trees<font color="#CCCCCC"> to make them a bit</font>

236
00:09:48,420 --> 00:09:52,140
<font color="#CCCCCC">more variable</font><font color="#E5E5E5"> and then averaging their</font>

237
00:09:50,640 --> 00:09:55,350
results right and so you sort of get

238
00:09:52,140 --> 00:09:58,230
like<font color="#E5E5E5"> this this smoother approximation to</font>

239
00:09:55,350 --> 00:10:01,620
benign<font color="#E5E5E5"> where an hour so if you kind of</font>

240
00:09:58,230 --> 00:10:04,199
<font color="#E5E5E5">like look back here imagine if these</font>

241
00:10:01,620 --> 00:10:05,699
boxes<font color="#E5E5E5"> were transparent a little bit</font>

242
00:10:04,199 --> 00:10:06,959
<font color="#E5E5E5">transparent</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you created a bunch of</font>

243
00:10:05,699 --> 00:10:08,370
<font color="#CCCCCC">jews from just sitting around</font><font color="#E5E5E5"> use here a</font>

244
00:10:06,959 --> 00:10:09,989
bunch of different decision trees and

245
00:10:08,370 --> 00:10:12,209
then layer them over<font color="#E5E5E5"> you'd end up</font>

246
00:10:09,990 --> 00:10:14,670
getting like<font color="#E5E5E5"> a much smoother sort of</font>

247
00:10:12,209 --> 00:10:23,640
<font color="#E5E5E5">surface so it's kind of the idea</font><font color="#CCCCCC"> behind</font>

248
00:10:14,670 --> 00:10:25,969
<font color="#E5E5E5">a random forest</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so another</font><font color="#CCCCCC"> example</font>

249
00:10:23,640 --> 00:10:29,579
of<font color="#CCCCCC"> machine learning</font><font color="#E5E5E5"> is linear regression</font>

250
00:10:25,970 --> 00:10:31,079
economists love these<font color="#E5E5E5"> for some reason a</font>

251
00:10:29,579 --> 00:10:32,579
linear<font color="#CCCCCC"> regression is a super simple</font>

252
00:10:31,079 --> 00:10:35,670
function it's just<font color="#CCCCCC"> a</font><font color="#E5E5E5"> linear combination</font>

253
00:10:32,579 --> 00:10:38,609
of<font color="#E5E5E5"> your inputs</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> so if we go</font>

254
00:10:35,670 --> 00:10:40,439
back<font color="#CCCCCC"> to</font><font color="#E5E5E5"> our data um</font><font color="#CCCCCC"> we can look at it</font>

255
00:10:38,610 --> 00:10:42,180
<font color="#E5E5E5">and say okay I want a maliciousness</font>

256
00:10:40,440 --> 00:10:44,399
prediction<font color="#CCCCCC"> I want it to be a linear</font>

257
00:10:42,180 --> 00:10:47,130
<font color="#E5E5E5">combination of my inputs file size</font>

258
00:10:44,399 --> 00:10:50,430
number of elements so<font color="#CCCCCC"> we have rate A</font>

259
00:10:47,130 --> 00:10:52,470
which is<font color="#CCCCCC"> a parameter</font><font color="#E5E5E5"> so a knob and our</font>

260
00:10:50,430 --> 00:10:55,529
on our<font color="#E5E5E5"> control</font><font color="#CCCCCC"> panel that</font><font color="#E5E5E5"> we're going to</font>

261
00:10:52,470 --> 00:10:58,440
tweak during training times file size

262
00:10:55,529 --> 00:11:00,269
our first feature<font color="#E5E5E5"> plus</font><font color="#CCCCCC"> B a another</font>

263
00:10:58,440 --> 00:11:05,069
parameter<font color="#E5E5E5"> times number of elements plus</font>

264
00:11:00,269 --> 00:11:06,660
C which is a bias term<font color="#E5E5E5"> so we can use you</font>

265
00:11:05,069 --> 00:11:07,689
know<font color="#E5E5E5"> well in real life high-level</font>

266
00:11:06,660 --> 00:11:09,579
programming<font color="#E5E5E5"> languages</font>

267
00:11:07,690 --> 00:11:11,860
but in<font color="#CCCCCC"> college life some matrix</font><font color="#E5E5E5"> algebra</font>

268
00:11:09,580 --> 00:11:13,840
to calculate<font color="#E5E5E5"> exactly what a and</font><font color="#CCCCCC"> B and C</font>

269
00:11:11,860 --> 00:11:16,210
should<font color="#CCCCCC"> be but if you</font><font color="#E5E5E5"> think about it</font>

270
00:11:13,840 --> 00:11:19,030
right<font color="#CCCCCC"> uh</font><font color="#E5E5E5"> what would happen if an B are</font>

271
00:11:16,210 --> 00:11:21,490
positive<font color="#CCCCCC"> if you have a lot of</font><font color="#E5E5E5"> if you</font>

272
00:11:19,030 --> 00:11:23,170
have a large<font color="#E5E5E5"> number of elements</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> a</font>

273
00:11:21,490 --> 00:11:25,720
large file size you'd get a higher<font color="#E5E5E5"> score</font>

274
00:11:23,170 --> 00:11:27,969
<font color="#E5E5E5">but we</font><font color="#CCCCCC"> want our</font><font color="#E5E5E5"> maliciousness score to</font>

275
00:11:25,720 --> 00:11:29,680
be higher when<font color="#E5E5E5"> these are low or lower</font>

276
00:11:27,970 --> 00:11:33,130
because this is where all<font color="#CCCCCC"> of</font><font color="#E5E5E5"> our malware</font>

277
00:11:29,680 --> 00:11:35,589
is right so if we used on the math that

278
00:11:33,130 --> 00:11:37,090
I won't<font color="#E5E5E5"> explain to you um we'd end up</font>

279
00:11:35,590 --> 00:11:40,990
getting probably<font color="#E5E5E5"> negative negative</font>

280
00:11:37,090 --> 00:11:42,490
numbers for a and B so<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> linear</font>

281
00:11:40,990 --> 00:11:47,440
regression<font color="#CCCCCC"> just a</font><font color="#E5E5E5"> linear combination of</font>

282
00:11:42,490 --> 00:11:50,170
inputs<font color="#E5E5E5"> okay so all of these examples</font>

283
00:11:47,440 --> 00:11:53,200
<font color="#E5E5E5">that I just gave to you are technically</font>

284
00:11:50,170 --> 00:11:55,900
under a big umbrella called supervised

285
00:11:53,200 --> 00:11:57,940
<font color="#E5E5E5">machine learning</font><font color="#CCCCCC"> which I did not tell</font>

286
00:11:55,900 --> 00:12:00,880
you before<font color="#E5E5E5"> and all that</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> means is</font>

287
00:11:57,940 --> 00:12:02,740
that our training<font color="#E5E5E5"> data had no labels</font>

288
00:12:00,880 --> 00:12:05,530
<font color="#E5E5E5">that we're trying</font><font color="#CCCCCC"> to be able</font><font color="#E5E5E5"> to predict</font>

289
00:12:02,740 --> 00:12:07,690
<font color="#CCCCCC">right</font><font color="#E5E5E5"> so we had a bunch of files and we</font>

290
00:12:05,530 --> 00:12:09,069
knew that<font color="#CCCCCC"> their malware and we knew we</font>

291
00:12:07,690 --> 00:12:10,480
knew certain<font color="#E5E5E5"> ones were malware and we</font>

292
00:12:09,070 --> 00:12:12,520
knew certain<font color="#E5E5E5"> ones for a benign</font><font color="#CCCCCC"> were</font><font color="#E5E5E5"> and</font>

293
00:12:10,480 --> 00:12:14,050
our goal<font color="#E5E5E5"> was</font><font color="#CCCCCC"> to look at the files so</font>

294
00:12:12,520 --> 00:12:18,130
that<font color="#CCCCCC"> when we see a</font><font color="#E5E5E5"> new file we can guess</font>

295
00:12:14,050 --> 00:12:20,500
if it's good<font color="#CCCCCC"> or bad so especially in the</font>

296
00:12:18,130 --> 00:12:22,570
<font color="#E5E5E5">corporate world this is really really</font>

297
00:12:20,500 --> 00:12:26,230
<font color="#E5E5E5">useful and by far the</font><font color="#CCCCCC"> most</font><font color="#E5E5E5"> commonly used</font>

298
00:12:22,570 --> 00:12:28,260
<font color="#E5E5E5">type of machine learning</font><font color="#CCCCCC"> but sometimes</font>

299
00:12:26,230 --> 00:12:30,790
right we're asking other questions too

300
00:12:28,260 --> 00:12:32,560
<font color="#CCCCCC">right so maybe we have a bunch of HTML</font>

301
00:12:30,790 --> 00:12:34,240
files<font color="#E5E5E5"> and we know they're all malicious</font>

302
00:12:32,560 --> 00:12:34,630
but<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> interested in how they're</font>

303
00:12:34,240 --> 00:12:36,250
different

304
00:12:34,630 --> 00:12:37,830
or maybe we think<font color="#E5E5E5"> that there are two</font>

305
00:12:36,250 --> 00:12:42,910
malware families what we<font color="#E5E5E5"> don't know</font>

306
00:12:37,830 --> 00:12:44,560
which ones are which<font color="#CCCCCC"> so we can use sort</font>

307
00:12:42,910 --> 00:12:46,180
of<font color="#E5E5E5"> other types of machine learning to</font>

308
00:12:44,560 --> 00:12:49,420
learn<font color="#E5E5E5"> more</font><font color="#CCCCCC"> about our data even</font><font color="#E5E5E5"> if we</font>

309
00:12:46,180 --> 00:12:51,130
don't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> known labels so these kinds</font>

310
00:12:49,420 --> 00:12:53,920
<font color="#CCCCCC">of algorithms</font><font color="#E5E5E5"> are under an umbrella</font>

311
00:12:51,130 --> 00:12:55,180
<font color="#E5E5E5">called unsupervised machine learning and</font>

312
00:12:53,920 --> 00:12:57,339
they usually have<font color="#CCCCCC"> to do things with</font>

313
00:12:55,180 --> 00:13:00,310
clustering or<font color="#E5E5E5"> learning even learning how</font>

314
00:12:57,339 --> 00:13:02,140
<font color="#E5E5E5">to efficiently</font><font color="#CCCCCC"> compress</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> dataset</font><font color="#E5E5E5"> and</font>

315
00:13:00,310 --> 00:13:03,849
<font color="#E5E5E5">they're mostly basically concerned with</font>

316
00:13:02,140 --> 00:13:08,860
sort of<font color="#E5E5E5"> figuring out the underlying</font>

317
00:13:03,850 --> 00:13:12,550
<font color="#E5E5E5">structure</font><font color="#CCCCCC"> of your data</font><font color="#E5E5E5"> so the basic</font>

318
00:13:08,860 --> 00:13:15,940
difference<font color="#E5E5E5"> rate is to instead of</font>

319
00:13:12,550 --> 00:13:17,500
minimizing loss as defined by the

320
00:13:15,940 --> 00:13:19,360
difference between<font color="#CCCCCC"> your predicted labels</font>

321
00:13:17,500 --> 00:13:20,220
and your real labels<font color="#E5E5E5"> right we're</font>

322
00:13:19,360 --> 00:13:23,250
minimizing<font color="#E5E5E5"> loss</font>

323
00:13:20,220 --> 00:13:27,600
<font color="#CCCCCC">as defined by</font><font color="#E5E5E5"> some other objective right</font>

324
00:13:23,250 --> 00:13:30,920
<font color="#E5E5E5">which I'll give an example of so I'm</font>

325
00:13:27,600 --> 00:13:34,320
going to<font color="#E5E5E5"> go through a classic example of</font>

326
00:13:30,920 --> 00:13:37,410
clustering which is unsupervised

327
00:13:34,320 --> 00:13:40,890
learning<font color="#E5E5E5"> which is the k-means algorithm</font>

328
00:13:37,410 --> 00:13:42,300
so k-means is<font color="#E5E5E5"> a clustering function</font><font color="#CCCCCC"> so</font>

329
00:13:40,890 --> 00:13:45,150
say we<font color="#E5E5E5"> have all these data points</font><font color="#CCCCCC"> that</font>

330
00:13:42,300 --> 00:13:47,969
<font color="#E5E5E5">work great and we said I think there's</font>

331
00:13:45,150 --> 00:13:49,199
two clusters in these data<font color="#E5E5E5"> points but I</font>

332
00:13:47,970 --> 00:13:51,140
don't really<font color="#E5E5E5"> know where they are and I</font>

333
00:13:49,200 --> 00:13:54,780
don't<font color="#E5E5E5"> know which which observations</font>

334
00:13:51,140 --> 00:13:57,720
<font color="#E5E5E5">which files are assigned to each</font><font color="#CCCCCC"> cluster</font>

335
00:13:54,780 --> 00:13:59,640
um so k-means is meant to sort of figure

336
00:13:57,720 --> 00:14:02,670
<font color="#E5E5E5">this out and give</font><font color="#CCCCCC"> us these two</font><font color="#E5E5E5"> clusters</font>

337
00:13:59,640 --> 00:14:06,330
so here<font color="#CCCCCC"> happy faces</font><font color="#E5E5E5"> indicate cluster</font>

338
00:14:02,670 --> 00:14:08,400
centroids<font color="#CCCCCC"> so K in this example is just</font>

339
00:14:06,330 --> 00:14:09,780
<font color="#CCCCCC">two because it's easier to make slides</font>

340
00:14:08,400 --> 00:14:11,790
for so I've assumed that there are two

341
00:14:09,780 --> 00:14:14,370
<font color="#E5E5E5">groups but K could equal any number like</font>

342
00:14:11,790 --> 00:14:15,750
three or four<font color="#E5E5E5"> or a thousand actually no</font>

343
00:14:14,370 --> 00:14:18,650
<font color="#CCCCCC">because we don't have</font><font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> data but</font>

344
00:14:15,750 --> 00:14:20,340
<font color="#CCCCCC">K is just a parameter</font><font color="#E5E5E5"> that you choose</font>

345
00:14:18,650 --> 00:14:24,540
<font color="#CCCCCC">and</font><font color="#E5E5E5"> this is how you do it</font>

346
00:14:20,340 --> 00:14:26,850
so k-means<font color="#E5E5E5"> is just sort of a procedure</font>

347
00:14:24,540 --> 00:14:28,620
<font color="#E5E5E5">that you use to cluster of data so it's</font>

348
00:14:26,850 --> 00:14:31,140
sort of<font color="#E5E5E5"> like this training</font><font color="#CCCCCC"> process to</font>

349
00:14:28,620 --> 00:14:34,320
develop<font color="#E5E5E5"> a function</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> tells us where our</font>

350
00:14:31,140 --> 00:14:37,140
<font color="#E5E5E5">cluster centroids are so to find two</font>

351
00:14:34,320 --> 00:14:39,780
clusters<font color="#E5E5E5"> we first picked two random</font>

352
00:14:37,140 --> 00:14:41,280
points<font color="#E5E5E5"> in our feature space and we're</font>

353
00:14:39,780 --> 00:14:44,040
just<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> call them centroids right</font>

354
00:14:41,280 --> 00:14:46,290
so I've picked two random points<font color="#CCCCCC"> and</font>

355
00:14:44,040 --> 00:14:50,969
made them<font color="#E5E5E5"> yellow and purple and these</font>

356
00:14:46,290 --> 00:14:52,890
are<font color="#CCCCCC"> our centroids so the next thing that</font>

357
00:14:50,970 --> 00:14:54,450
you do is you<font color="#E5E5E5"> assign every single data</font>

358
00:14:52,890 --> 00:14:56,939
<font color="#CCCCCC">point in your data</font><font color="#E5E5E5"> set to the nearest</font>

359
00:14:54,450 --> 00:14:58,380
centroid<font color="#E5E5E5"> right so all</font><font color="#CCCCCC"> of the purple</font><font color="#E5E5E5"> dots</font>

360
00:14:56,940 --> 00:14:59,880
are now assigned to the purple centroid

361
00:14:58,380 --> 00:15:03,840
all the yellow dots are now assigned to

362
00:14:59,880 --> 00:15:05,760
the yellow centroid<font color="#CCCCCC"> and next you update</font>

363
00:15:03,840 --> 00:15:09,660
the centroid locations<font color="#E5E5E5"> right so you say</font>

364
00:15:05,760 --> 00:15:12,990
<font color="#E5E5E5">okay what is the average look what is</font>

365
00:15:09,660 --> 00:15:15,060
the average location<font color="#CCCCCC"> of all</font><font color="#E5E5E5"> of the data</font>

366
00:15:12,990 --> 00:15:17,820
points<font color="#CCCCCC"> in my domain right</font><font color="#E5E5E5"> so the yellow</font>

367
00:15:15,060 --> 00:15:19,500
<font color="#E5E5E5">guy is taking</font><font color="#CCCCCC"> the average</font><font color="#E5E5E5"> file size and</font>

368
00:15:17,820 --> 00:15:22,110
the<font color="#E5E5E5"> average number</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> HTML elements and</font>

369
00:15:19,500 --> 00:15:24,870
then moving<font color="#E5E5E5"> towards that spot in the</font>

370
00:15:22,110 --> 00:15:26,490
feature<font color="#E5E5E5"> space</font><font color="#CCCCCC"> and then you just iterate</font>

371
00:15:24,870 --> 00:15:29,400
a bunch of times<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you just</font><font color="#E5E5E5"> repeat this</font>

372
00:15:26,490 --> 00:15:32,040
<font color="#CCCCCC">process so you reassign all your data</font>

373
00:15:29,400 --> 00:15:33,870
<font color="#CCCCCC">points to the nearest centroid you move</font>

374
00:15:32,040 --> 00:15:36,360
your centroids look

375
00:15:33,870 --> 00:15:38,670
based on video<font color="#E5E5E5"> the data points that were</font>

376
00:15:36,360 --> 00:15:41,700
just assigned to them you it<font color="#E5E5E5"> again</font><font color="#CCCCCC"> you</font>

377
00:15:38,670 --> 00:15:44,490
<font color="#E5E5E5">do it</font><font color="#CCCCCC"> again you</font><font color="#E5E5E5"> again you</font><font color="#CCCCCC"> again until</font>

378
00:15:41,700 --> 00:15:46,650
you end up<font color="#E5E5E5"> with until you basically</font>

379
00:15:44,490 --> 00:15:47,910
<font color="#E5E5E5">reach some stopping point</font><font color="#CCCCCC"> and so that</font>

380
00:15:46,650 --> 00:15:49,949
can<font color="#CCCCCC"> be</font><font color="#E5E5E5"> based on a few different things</font>

381
00:15:47,910 --> 00:15:53,160
you<font color="#E5E5E5"> can look at your loss over time so</font>

382
00:15:49,950 --> 00:15:55,470
<font color="#E5E5E5">the percentage of you can define loss by</font>

383
00:15:53,160 --> 00:15:58,410
something like that<font color="#E5E5E5"> the average distance</font>

384
00:15:55,470 --> 00:15:59,730
<font color="#E5E5E5">from data points to your clusters or</font>

385
00:15:58,410 --> 00:16:01,740
something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that so you can look</font><font color="#E5E5E5"> at</font>

386
00:15:59,730 --> 00:16:04,020
your loss<font color="#CCCCCC"> and say okay my</font><font color="#E5E5E5"> loss is</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> not</font>

387
00:16:01,740 --> 00:16:05,580
<font color="#E5E5E5">really continuing to decrease you can</font>

388
00:16:04,020 --> 00:16:06,990
look at your cluster locations and say

389
00:16:05,580 --> 00:16:09,000
hey they've kind of stabilized they're

390
00:16:06,990 --> 00:16:11,100
not moving<font color="#E5E5E5"> anymore</font><font color="#CCCCCC"> and I'm</font><font color="#E5E5E5"> going to find</font>

391
00:16:09,000 --> 00:16:13,110
<font color="#E5E5E5">that as a stopping point</font><font color="#CCCCCC"> and sort of</font>

392
00:16:11,100 --> 00:16:15,440
<font color="#E5E5E5">stop stop</font><font color="#CCCCCC"> by procedure</font><font color="#E5E5E5"> and then you have</font>

393
00:16:13,110 --> 00:16:17,070
<font color="#CCCCCC">right</font><font color="#E5E5E5"> these two these two clusters</font><font color="#CCCCCC"> and</font>

394
00:16:15,440 --> 00:16:22,920
assigned data points

395
00:16:17,070 --> 00:16:25,380
okay so that was k-means<font color="#E5E5E5"> um so so far in</font>

396
00:16:22,920 --> 00:16:27,420
this talk<font color="#E5E5E5"> I have described you sort of</font>

397
00:16:25,380 --> 00:16:30,210
<font color="#E5E5E5">the basic ideas</font><font color="#CCCCCC"> behind machine learning</font>

398
00:16:27,420 --> 00:16:32,579
<font color="#E5E5E5">and giving you a few</font><font color="#CCCCCC"> examples</font><font color="#E5E5E5"> but all</font>

399
00:16:30,210 --> 00:16:35,400
the other ones<font color="#CCCCCC"> of a very super</font><font color="#E5E5E5"> simple</font>

400
00:16:32,580 --> 00:16:39,270
toy<font color="#CCCCCC"> dataset with</font><font color="#E5E5E5"> only two features and</font>

401
00:16:35,400 --> 00:16:42,569
<font color="#CCCCCC">write a few dozen data points um</font><font color="#E5E5E5"> so what</font>

402
00:16:39,270 --> 00:16:45,089
happens when there<font color="#CCCCCC"> is</font><font color="#E5E5E5"> more right</font><font color="#CCCCCC"> if we</font>

403
00:16:42,570 --> 00:16:46,170
<font color="#CCCCCC">added a third feature now finding the</font>

404
00:16:45,089 --> 00:16:46,860
decision boundary would look something

405
00:16:46,170 --> 00:16:48,779
<font color="#CCCCCC">like this</font>

406
00:16:46,860 --> 00:16:50,760
<font color="#E5E5E5">instead of finding</font><font color="#CCCCCC"> a line</font><font color="#E5E5E5"> we would be</font>

407
00:16:48,779 --> 00:16:52,260
finding<font color="#E5E5E5"> a plane or really a</font><font color="#CCCCCC"> curvy plane</font>

408
00:16:50,760 --> 00:16:55,230
in<font color="#E5E5E5"> our three dimensional feature space</font>

409
00:16:52,260 --> 00:16:57,600
<font color="#E5E5E5">but the idea stays exactly the</font><font color="#CCCCCC"> same</font>

410
00:16:55,230 --> 00:16:59,940
right<font color="#E5E5E5"> we're just</font><font color="#CCCCCC"> looking at</font><font color="#E5E5E5"> our training</font>

411
00:16:57,600 --> 00:17:03,000
data<font color="#E5E5E5"> in order to optimize some function</font>

412
00:16:59,940 --> 00:17:08,130
that<font color="#E5E5E5"> we've decided upon</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> that we can</font>

413
00:17:03,000 --> 00:17:10,290
find a<font color="#E5E5E5"> good decision tree okay so of</font>

414
00:17:08,130 --> 00:17:12,480
<font color="#CCCCCC">course in real life when we were working</font>

415
00:17:10,290 --> 00:17:15,629
<font color="#CCCCCC">with hundreds</font><font color="#E5E5E5"> of millions of HTML files</font>

416
00:17:12,480 --> 00:17:16,980
and thousands of features<font color="#CCCCCC"> this</font><font color="#E5E5E5"> gets a</font>

417
00:17:15,630 --> 00:17:19,079
<font color="#CCCCCC">bit complicated</font><font color="#E5E5E5"> right we're trying to</font>

418
00:17:16,980 --> 00:17:20,730
find decision boundaries in feature

419
00:17:19,079 --> 00:17:22,470
<font color="#E5E5E5">spaces that are just</font><font color="#CCCCCC"> massive but the</font>

420
00:17:20,730 --> 00:17:24,179
objective stays exactly the same

421
00:17:22,470 --> 00:17:26,220
we're just<font color="#E5E5E5"> trying to find this decision</font>

422
00:17:24,179 --> 00:17:28,400
boundary<font color="#CCCCCC"> and we're looking at loss and</font>

423
00:17:26,220 --> 00:17:30,360
after<font color="#E5E5E5"> maizing parameters to do that um</font>

424
00:17:28,400 --> 00:17:32,880
<font color="#E5E5E5">however</font><font color="#CCCCCC"> this could</font><font color="#E5E5E5"> be really really</font>

425
00:17:30,360 --> 00:17:34,439
<font color="#CCCCCC">difficult</font><font color="#E5E5E5"> right finding good decision</font>

426
00:17:32,880 --> 00:17:36,900
boundaries and super high dimensional

427
00:17:34,440 --> 00:17:38,910
spaces<font color="#E5E5E5"> especially</font><font color="#CCCCCC"> when some of the</font>

428
00:17:36,900 --> 00:17:40,890
features have<font color="#E5E5E5"> a lot of sort of like</font>

429
00:17:38,910 --> 00:17:43,200
<font color="#E5E5E5">weird and complex and nonlinear</font>

430
00:17:40,890 --> 00:17:45,610
relationships to one another<font color="#CCCCCC"> can be</font>

431
00:17:43,200 --> 00:17:47,590
<font color="#E5E5E5">quite tricky and so this this problem</font>

432
00:17:45,610 --> 00:17:49,750
comes up a lot in things<font color="#E5E5E5"> like image</font>

433
00:17:47,590 --> 00:17:52,570
<font color="#E5E5E5">processing</font><font color="#CCCCCC"> and natural</font><font color="#E5E5E5"> language</font>

434
00:17:49,750 --> 00:17:54,130
processing<font color="#E5E5E5"> and cybersecurity</font><font color="#CCCCCC"> because the</font>

435
00:17:52,570 --> 00:17:56,500
data<font color="#CCCCCC"> that you're working this</font><font color="#E5E5E5"> is really</font>

436
00:17:54,130 --> 00:17:58,840
<font color="#E5E5E5">really rich</font><font color="#CCCCCC"> and it's also very</font><font color="#E5E5E5"> context</font>

437
00:17:56,500 --> 00:18:01,150
<font color="#E5E5E5">dependent</font><font color="#CCCCCC"> so if you think</font><font color="#E5E5E5"> about like</font><font color="#CCCCCC"> a</font>

438
00:17:58,840 --> 00:18:03,820
pixel in an image or a word in a

439
00:18:01,150 --> 00:18:05,230
paragraph<font color="#CCCCCC"> the meaning of</font><font color="#E5E5E5"> that pixel</font>

440
00:18:03,820 --> 00:18:06,760
<font color="#E5E5E5">doesn't really transfer to the next</font>

441
00:18:05,230 --> 00:18:09,010
<font color="#CCCCCC">images that you see very easily it's a</font>

442
00:18:06,760 --> 00:18:11,140
meaning of<font color="#E5E5E5"> a word is very context</font>

443
00:18:09,010 --> 00:18:12,820
<font color="#E5E5E5">dependent</font><font color="#CCCCCC"> and so it's often very</font><font color="#E5E5E5"> hard</font><font color="#CCCCCC"> to</font>

444
00:18:11,140 --> 00:18:14,679
extract meaning on that can<font color="#E5E5E5"> be projected</font>

445
00:18:12,820 --> 00:18:18,760
<font color="#CCCCCC">onto</font><font color="#E5E5E5"> new test samples using machine</font>

446
00:18:14,679 --> 00:18:20,559
learning<font color="#CCCCCC"> and so this this applies to</font>

447
00:18:18,760 --> 00:18:23,049
<font color="#CCCCCC">software security</font><font color="#E5E5E5"> because often were</font>

448
00:18:20,559 --> 00:18:24,940
we're looking at<font color="#CCCCCC"> bright Program Files</font>

449
00:18:23,049 --> 00:18:27,429
<font color="#E5E5E5">and trying to decide if they look</font>

450
00:18:24,940 --> 00:18:28,780
malicious<font color="#E5E5E5"> or not which is sort of</font>

451
00:18:27,429 --> 00:18:30,250
similar<font color="#CCCCCC"> to</font><font color="#E5E5E5"> natural language</font><font color="#CCCCCC"> processing</font>

452
00:18:28,780 --> 00:18:31,750
if you think<font color="#E5E5E5"> about it because you're</font>

453
00:18:30,250 --> 00:18:35,230
<font color="#CCCCCC">just</font><font color="#E5E5E5"> looking at a bunch of code bunch of</font>

454
00:18:31,750 --> 00:18:35,950
language um<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so what do you</font><font color="#E5E5E5"> what do</font>

455
00:18:35,230 --> 00:18:38,530
you<font color="#E5E5E5"> do in real</font><font color="#CCCCCC"> life</font>

456
00:18:35,950 --> 00:18:40,270
<font color="#CCCCCC">um</font><font color="#E5E5E5"> when working on these difficult sorts</font>

457
00:18:38,530 --> 00:18:43,629
of problems with really large feature

458
00:18:40,270 --> 00:18:47,110
spaces<font color="#E5E5E5"> um well ask any data scientist</font>

459
00:18:43,630 --> 00:18:49,330
<font color="#CCCCCC">what the best machine learning algorithm</font>

460
00:18:47,110 --> 00:18:51,639
<font color="#E5E5E5">or model is and they will</font><font color="#CCCCCC"> probably tell</font>

461
00:18:49,330 --> 00:18:55,000
<font color="#E5E5E5">you it depends go away unless they're</font>

462
00:18:51,640 --> 00:18:56,830
<font color="#CCCCCC">very drunk I use that all the time</font><font color="#E5E5E5"> but</font>

463
00:18:55,000 --> 00:18:59,950
we're well at least I'm interested in

464
00:18:56,830 --> 00:19:02,409
our<font color="#E5E5E5"> detection and right as I mentioned</font>

465
00:18:59,950 --> 00:19:04,600
in malware detection<font color="#E5E5E5"> at least if you're</font>

466
00:19:02,410 --> 00:19:07,000
trying<font color="#CCCCCC"> to figure out</font><font color="#E5E5E5"> if a static file is</font>

467
00:19:04,600 --> 00:19:08,709
malicious<font color="#CCCCCC"> or not</font><font color="#E5E5E5"> that's a really complex</font>

468
00:19:07,000 --> 00:19:12,250
<font color="#CCCCCC">problem and we also have a ton of</font>

469
00:19:08,710 --> 00:19:14,140
training<font color="#E5E5E5"> data</font><font color="#CCCCCC"> and so given</font><font color="#E5E5E5"> all that at</font>

470
00:19:12,250 --> 00:19:16,450
least in<font color="#E5E5E5"> my</font><font color="#CCCCCC"> opinion the best machine</font>

471
00:19:14,140 --> 00:19:19,480
learning approach you can use is deep

472
00:19:16,450 --> 00:19:22,450
learning<font color="#CCCCCC"> which is what the rest of</font><font color="#E5E5E5"> this</font>

473
00:19:19,480 --> 00:19:24,610
talk<font color="#CCCCCC"> is</font><font color="#E5E5E5"> going to focus on uh I cannot</font>

474
00:19:22,450 --> 00:19:26,110
yet<font color="#E5E5E5"> convince you why this is true</font>

475
00:19:24,610 --> 00:19:30,219
without<font color="#E5E5E5"> actually explaining deep</font>

476
00:19:26,110 --> 00:19:36,059
learning<font color="#CCCCCC"> so I'm gonna do that</font><font color="#E5E5E5"> first</font><font color="#CCCCCC"> okay</font>

477
00:19:30,220 --> 00:19:38,380
oops<font color="#E5E5E5"> again okay so</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> you hear about</font>

478
00:19:36,059 --> 00:19:40,600
machine learning<font color="#E5E5E5"> beating experts at</font>

479
00:19:38,380 --> 00:19:43,240
chess and it go and performing facial

480
00:19:40,600 --> 00:19:46,090
recognition<font color="#E5E5E5"> and</font><font color="#CCCCCC"> generating recognition</font>

481
00:19:43,240 --> 00:19:48,730
<font color="#E5E5E5">and language translation all of these</font>

482
00:19:46,090 --> 00:19:51,689
very complex historically<font color="#E5E5E5"> human centric</font>

483
00:19:48,730 --> 00:19:54,130
tasks that's basically all<font color="#E5E5E5"> deep learning</font>

484
00:19:51,690 --> 00:19:58,030
<font color="#E5E5E5">which</font><font color="#CCCCCC"> is just the specific family of</font>

485
00:19:54,130 --> 00:19:58,919
machine learning functions deep learning

486
00:19:58,030 --> 00:20:02,070
is

487
00:19:58,919 --> 00:20:05,730
<font color="#E5E5E5">disgust is this sort of magical like</font><font color="#CCCCCC"> AI</font>

488
00:20:02,070 --> 00:20:09,149
just meaningless like panacea<font color="#E5E5E5"> just kind</font>

489
00:20:05,730 --> 00:20:11,940
of true<font color="#CCCCCC"> but but actually the basic</font>

490
00:20:09,149 --> 00:20:14,428
concepts are super simple<font color="#E5E5E5"> and really</font>

491
00:20:11,940 --> 00:20:16,739
really<font color="#E5E5E5"> interesting so I want to delve</font>

492
00:20:14,429 --> 00:20:19,649
into that<font color="#E5E5E5"> what what is actually deep</font>

493
00:20:16,739 --> 00:20:21,600
learning<font color="#CCCCCC"> according to most</font><font color="#E5E5E5"> of the</font>

494
00:20:19,649 --> 00:20:24,539
<font color="#CCCCCC">internet deep learning basically just</font>

495
00:20:21,600 --> 00:20:26,070
means deep neural<font color="#E5E5E5"> networks so what is a</font>

496
00:20:24,539 --> 00:20:28,350
neural<font color="#E5E5E5"> network</font>

497
00:20:26,070 --> 00:20:30,779
well it's machine learning function<font color="#E5E5E5"> so</font>

498
00:20:28,350 --> 00:20:32,580
these inputs and outputs<font color="#CCCCCC"> and like the</font>

499
00:20:30,779 --> 00:20:34,549
name<font color="#CCCCCC"> implies</font><font color="#E5E5E5"> a neural network</font><font color="#CCCCCC"> is just a</font>

500
00:20:32,580 --> 00:20:38,908
network<font color="#E5E5E5"> of neurons stuck together</font><font color="#CCCCCC"> so</font>

501
00:20:34,549 --> 00:20:41,549
<font color="#E5E5E5">what is a neuron</font><font color="#CCCCCC"> Helen urn is also just</font>

502
00:20:38,909 --> 00:20:47,700
a<font color="#E5E5E5"> little function with some inputs and</font>

503
00:20:41,549 --> 00:20:50,460
output<font color="#E5E5E5"> and figure out what it is okay</font>

504
00:20:47,700 --> 00:20:52,379
so this is a neuron<font color="#CCCCCC"> there's two</font>

505
00:20:50,460 --> 00:20:54,629
<font color="#E5E5E5">components of a neuron we have our</font>

506
00:20:52,379 --> 00:20:57,570
inputs this this could<font color="#E5E5E5"> be 100 inputs but</font>

507
00:20:54,629 --> 00:20:59,158
right now we have<font color="#E5E5E5"> 2</font><font color="#CCCCCC"> x1 and x2 right</font><font color="#E5E5E5"> so</font>

508
00:20:57,570 --> 00:21:02,369
this could be<font color="#CCCCCC"> our</font><font color="#E5E5E5"> two features for a</font>

509
00:20:59,159 --> 00:21:04,200
given HTML file<font color="#E5E5E5"> and</font><font color="#CCCCCC"> each input has</font><font color="#E5E5E5"> an</font>

510
00:21:02,369 --> 00:21:05,369
<font color="#E5E5E5">Associated weight parameter which is one</font>

511
00:21:04,200 --> 00:21:07,169
of<font color="#CCCCCC"> the knobs that we're gonna optimize</font>

512
00:21:05,369 --> 00:21:09,749
during our training<font color="#E5E5E5"> process right a</font>

513
00:21:07,169 --> 00:21:11,340
parameter<font color="#CCCCCC"> in</font><font color="#E5E5E5"> our function</font><font color="#CCCCCC"> and so the</font>

514
00:21:09,749 --> 00:21:14,820
<font color="#E5E5E5">first component</font><font color="#CCCCCC"> of a neuron it's called</font>

515
00:21:11,340 --> 00:21:16,320
the weighted sum component<font color="#CCCCCC"> and I</font><font color="#E5E5E5"> added</font>

516
00:21:14,820 --> 00:21:17,759
in<font color="#CCCCCC"> some</font><font color="#E5E5E5"> sample values here but we're</font>

517
00:21:16,320 --> 00:21:20,309
<font color="#CCCCCC">basically just</font><font color="#E5E5E5"> taking</font><font color="#CCCCCC"> a weighted sum</font><font color="#E5E5E5"> of</font>

518
00:21:17,759 --> 00:21:23,820
the inputs and adding a bias<font color="#E5E5E5"> term right</font>

519
00:21:20,309 --> 00:21:25,049
so this<font color="#CCCCCC"> is 1 plus 6 equals</font><font color="#E5E5E5"> 7</font><font color="#CCCCCC"> we're</font>

520
00:21:23,820 --> 00:21:28,580
adding a bias term which I'm just

521
00:21:25,049 --> 00:21:31,440
<font color="#CCCCCC">randomly setting to</font><font color="#E5E5E5"> 1 here and we get 8</font>

522
00:21:28,580 --> 00:21:33,259
<font color="#E5E5E5">the second component of a neuron is</font>

523
00:21:31,440 --> 00:21:35,460
called the activation<font color="#E5E5E5"> function</font>

524
00:21:33,259 --> 00:21:39,570
<font color="#CCCCCC">activation functions need to be</font>

525
00:21:35,460 --> 00:21:41,850
differentiable they mostly are nonlinear

526
00:21:39,570 --> 00:21:44,580
you usually want<font color="#CCCCCC"> them in nonlinear but</font>

527
00:21:41,850 --> 00:21:47,219
they tend to be incredibly simple<font color="#CCCCCC"> as an</font>

528
00:21:44,580 --> 00:21:49,289
example<font color="#E5E5E5"> literally the most popular and</font>

529
00:21:47,220 --> 00:21:50,909
<font color="#E5E5E5">most commonly used activation function</font>

530
00:21:49,289 --> 00:21:54,149
function out there is called<font color="#E5E5E5"> the</font>

531
00:21:50,909 --> 00:21:56,220
rectified linear unit or<font color="#CCCCCC"> Lu and all it</font>

532
00:21:54,149 --> 00:22:00,479
is<font color="#E5E5E5"> asking is what is bigger my</font><font color="#CCCCCC"> weight</font>

533
00:21:56,220 --> 00:22:01,950
<font color="#CCCCCC">sum plus bias value or 0 and it</font><font color="#E5E5E5"> returns</font>

534
00:22:00,480 --> 00:22:03,989
whatever is bigger<font color="#E5E5E5"> right so that's</font>

535
00:22:01,950 --> 00:22:06,570
that's the<font color="#E5E5E5"> most</font><font color="#CCCCCC"> common</font><font color="#E5E5E5"> one and they tend</font>

536
00:22:03,989 --> 00:22:08,669
to be<font color="#CCCCCC"> very</font><font color="#E5E5E5"> very simple</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so in this</font>

537
00:22:06,570 --> 00:22:10,109
neuron<font color="#E5E5E5"> right we have</font><font color="#CCCCCC"> our inputs and our</font>

538
00:22:08,669 --> 00:22:12,799
<font color="#E5E5E5">output is just going to be 8 because</font><font color="#CCCCCC"> it</font>

539
00:22:10,109 --> 00:22:12,799
<font color="#E5E5E5">is bigger</font><font color="#CCCCCC"> than</font><font color="#E5E5E5"> 0</font>

540
00:22:14,840 --> 00:22:20,129
<font color="#E5E5E5">okay so as you</font><font color="#CCCCCC"> can see right this is a</font>

541
00:22:18,000 --> 00:22:22,080
pretty simple function<font color="#E5E5E5"> that you can</font>

542
00:22:20,130 --> 00:22:24,240
write<font color="#E5E5E5"> out on a piece</font><font color="#CCCCCC"> of paper it's just</font>

543
00:22:22,080 --> 00:22:26,159
maximum zero<font color="#E5E5E5"> because we're using a rail</font>

544
00:22:24,240 --> 00:22:29,370
you activation function<font color="#CCCCCC"> weighted sum</font>

545
00:22:26,160 --> 00:22:32,010
plus bias equals some number<font color="#E5E5E5"> and this is</font>

546
00:22:29,370 --> 00:22:35,189
<font color="#CCCCCC">a very small example</font><font color="#E5E5E5"> of an actual neural</font>

547
00:22:32,010 --> 00:22:36,930
network<font color="#E5E5E5"> right so on the left hand side</font>

548
00:22:35,190 --> 00:22:39,410
<font color="#E5E5E5">here we have our inputs</font><font color="#CCCCCC"> so in this</font>

549
00:22:36,930 --> 00:22:43,770
example<font color="#E5E5E5"> we have three feature inputs</font>

550
00:22:39,410 --> 00:22:46,200
<font color="#CCCCCC">each of these are sent to a neuron and</font>

551
00:22:43,770 --> 00:22:47,430
based on the weight<font color="#CCCCCC"> and</font><font color="#E5E5E5"> vice parameters</font>

552
00:22:46,200 --> 00:22:49,830
in each neuron you're going to get a

553
00:22:47,430 --> 00:22:52,110
<font color="#E5E5E5">different output right and then all</font><font color="#CCCCCC"> of</font>

554
00:22:49,830 --> 00:22:55,500
these outputs<font color="#CCCCCC"> are separately sent to</font>

555
00:22:52,110 --> 00:22:58,110
this final neuron which will take the

556
00:22:55,500 --> 00:23:00,540
first neurons outputs as inputs and give

557
00:22:58,110 --> 00:23:04,199
us our final output score for the entire

558
00:23:00,540 --> 00:23:06,240
entire model so<font color="#E5E5E5"> you might sort of be</font>

559
00:23:04,200 --> 00:23:07,980
<font color="#CCCCCC">able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> imagine that with</font><font color="#E5E5E5"> the right</font>

560
00:23:06,240 --> 00:23:10,290
weight and bias terms and maybe with a

561
00:23:07,980 --> 00:23:11,880
<font color="#E5E5E5">couple thousand more neurons</font><font color="#CCCCCC"> a neural</font>

562
00:23:10,290 --> 00:23:13,830
network like this one<font color="#E5E5E5"> could</font>

563
00:23:11,880 --> 00:23:15,930
theoretically take<font color="#E5E5E5"> features from an</font><font color="#CCCCCC"> HTML</font>

564
00:23:13,830 --> 00:23:18,120
file as input and output some sort of

565
00:23:15,930 --> 00:23:20,490
meaningful score that predicts file

566
00:23:18,120 --> 00:23:23,100
maliciousness<font color="#E5E5E5"> right because if you if</font>

567
00:23:20,490 --> 00:23:24,510
you look<font color="#E5E5E5"> back</font><font color="#CCCCCC"> to our</font><font color="#E5E5E5"> neuron remember the</font>

568
00:23:23,100 --> 00:23:26,490
first part of a neuron<font color="#E5E5E5"> is just a linear</font>

569
00:23:24,510 --> 00:23:29,730
combination<font color="#E5E5E5"> of the inputs which is sort</font>

570
00:23:26,490 --> 00:23:31,860
of<font color="#E5E5E5"> like a regression right so</font><font color="#CCCCCC"> with the</font>

571
00:23:29,730 --> 00:23:34,730
right parameters<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can you can get</font>

572
00:23:31,860 --> 00:23:36,570
<font color="#E5E5E5">something interesting going on at least</font>

573
00:23:34,730 --> 00:23:39,420
<font color="#E5E5E5">so how do you how do you get these</font>

574
00:23:36,570 --> 00:23:41,639
<font color="#E5E5E5">weight and bias terms</font><font color="#CCCCCC"> the model</font>

575
00:23:39,420 --> 00:23:44,490
optimizes them during training by

576
00:23:41,640 --> 00:23:47,040
looking at<font color="#E5E5E5"> your training data right so I</font>

577
00:23:44,490 --> 00:23:49,770
will go super into the<font color="#CCCCCC"> nitty-gritty</font><font color="#E5E5E5"> math</font>

578
00:23:47,040 --> 00:23:51,180
details but the basic idea is that we

579
00:23:49,770 --> 00:23:54,210
start off<font color="#E5E5E5"> with randomized parameter</font>

580
00:23:51,180 --> 00:23:57,900
values<font color="#CCCCCC"> and so let's say that we take a</font>

581
00:23:54,210 --> 00:23:59,550
malicious HTML file<font color="#CCCCCC"> and we feed it into</font>

582
00:23:57,900 --> 00:24:00,870
our neural network<font color="#E5E5E5"> right so let's say</font>

583
00:23:59,550 --> 00:24:03,810
that<font color="#CCCCCC"> we have three</font><font color="#E5E5E5"> features for</font>

584
00:24:00,870 --> 00:24:05,850
malicious HTML HTML file<font color="#CCCCCC"> one for</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> two</font>

585
00:24:03,810 --> 00:24:08,940
<font color="#E5E5E5">and we know it's bad so we know the</font>

586
00:24:05,850 --> 00:24:10,620
output<font color="#E5E5E5"> that we want is one</font><font color="#CCCCCC"> we propagate</font>

587
00:24:08,940 --> 00:24:12,600
<font color="#E5E5E5">it through our network and</font><font color="#CCCCCC"> we end up</font>

588
00:24:10,620 --> 00:24:14,669
<font color="#E5E5E5">getting a final</font><font color="#CCCCCC"> output here which is</font>

589
00:24:12,600 --> 00:24:16,620
point two three<font color="#E5E5E5"> nine and so now we're</font>

590
00:24:14,670 --> 00:24:20,400
just asking<font color="#CCCCCC"> a question okay how can I</font>

591
00:24:16,620 --> 00:24:22,320
modify my parameters rate the knobs<font color="#CCCCCC"> such</font>

592
00:24:20,400 --> 00:24:25,020
that our output moves just<font color="#E5E5E5"> a little bit</font>

593
00:24:22,320 --> 00:24:26,220
closer to<font color="#E5E5E5"> one and so in real life we use</font>

594
00:24:25,020 --> 00:24:27,840
<font color="#E5E5E5">some</font><font color="#CCCCCC"> fancy</font>

595
00:24:26,220 --> 00:24:32,160
<font color="#CCCCCC">calculus derivatives and chain rule</font>

596
00:24:27,840 --> 00:24:35,760
magic to calculate this very quickly<font color="#CCCCCC"> but</font>

597
00:24:32,160 --> 00:24:37,440
you can sort of<font color="#E5E5E5"> think of</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> in a much</font>

598
00:24:35,760 --> 00:24:39,450
<font color="#E5E5E5">more simple way</font><font color="#CCCCCC"> so you can kind of</font><font color="#E5E5E5"> just</font>

599
00:24:37,440 --> 00:24:42,299
<font color="#E5E5E5">think okay</font><font color="#CCCCCC"> the model is gonna take a</font>

600
00:24:39,450 --> 00:24:44,970
parameter<font color="#CCCCCC"> here and just</font><font color="#E5E5E5"> move it a tiny</font>

601
00:24:42,299 --> 00:24:46,799
tiny tiny<font color="#E5E5E5"> amount reevaluate the output</font>

602
00:24:44,970 --> 00:24:48,780
and if it moved in the right direction

603
00:24:46,799 --> 00:24:50,040
<font color="#E5E5E5">then we know that's the</font><font color="#CCCCCC"> direction in</font>

604
00:24:48,780 --> 00:24:52,530
which<font color="#E5E5E5"> we want to change your parameter</font>

605
00:24:50,040 --> 00:24:54,120
and if it didn't<font color="#E5E5E5"> we</font><font color="#CCCCCC"> know we</font><font color="#E5E5E5"> don't right</font>

606
00:24:52,530 --> 00:24:56,399
so that's<font color="#E5E5E5"> that's the basic idea</font><font color="#CCCCCC"> we're</font>

607
00:24:54,120 --> 00:24:58,260
just sort of like<font color="#E5E5E5"> evaluating all these</font>

608
00:24:56,400 --> 00:25:01,080
<font color="#E5E5E5">files and nudging our parameters and</font>

609
00:24:58,260 --> 00:25:02,700
just a tiny little<font color="#E5E5E5"> um</font><font color="#CCCCCC"> just a tiny little</font>

610
00:25:01,080 --> 00:25:05,909
bit in the right<font color="#CCCCCC"> direction and then we</font>

611
00:25:02,700 --> 00:25:07,410
<font color="#E5E5E5">do this over millions of samples</font><font color="#CCCCCC"> or in</font>

612
00:25:05,910 --> 00:25:09,809
our<font color="#CCCCCC"> case if he</font><font color="#E5E5E5"> doesn't data points but</font>

613
00:25:07,410 --> 00:25:11,610
in real life millions of samples and

614
00:25:09,809 --> 00:25:14,129
<font color="#E5E5E5">when you do this over</font><font color="#CCCCCC"> and over</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> over</font>

615
00:25:11,610 --> 00:25:16,100
again you<font color="#CCCCCC"> end up getting parameters</font><font color="#E5E5E5"> that</font>

616
00:25:14,130 --> 00:25:19,020
create<font color="#E5E5E5"> this neural network</font><font color="#CCCCCC"> that give you</font>

617
00:25:16,100 --> 00:25:24,600
really really<font color="#E5E5E5"> surprisingly accurate</font><font color="#CCCCCC"> on</font>

618
00:25:19,020 --> 00:25:27,720
outputs<font color="#CCCCCC"> okay so what I've shown</font><font color="#E5E5E5"> you so</font>

619
00:25:24,600 --> 00:25:29,280
far is what a neural network<font color="#E5E5E5"> is but the</font>

620
00:25:27,720 --> 00:25:31,200
neural network<font color="#E5E5E5"> that I showed you</font><font color="#CCCCCC"> before</font>

621
00:25:29,280 --> 00:25:33,600
<font color="#E5E5E5">was not</font><font color="#CCCCCC"> actually deep neural</font><font color="#E5E5E5"> network</font>

622
00:25:31,200 --> 00:25:36,450
because there<font color="#E5E5E5"> was</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> a single hidden</font>

623
00:25:33,600 --> 00:25:38,699
layer<font color="#CCCCCC"> um a hidden layer</font><font color="#E5E5E5"> is basically any</font>

624
00:25:36,450 --> 00:25:41,429
layer in<font color="#CCCCCC"> between our input and output</font>

625
00:25:38,700 --> 00:25:43,860
layers<font color="#E5E5E5"> um so I should actually use this</font>

626
00:25:41,429 --> 00:25:45,419
laser pointer<font color="#CCCCCC"> in-betweener hidden input</font>

627
00:25:43,860 --> 00:25:48,540
and output layers<font color="#E5E5E5"> so in the previous</font>

628
00:25:45,419 --> 00:25:50,190
slide<font color="#CCCCCC"> we have one hidden layer but when</font>

629
00:25:48,540 --> 00:25:52,409
you have many hidden<font color="#CCCCCC"> layers this is</font>

630
00:25:50,190 --> 00:25:54,330
<font color="#E5E5E5">called a deep neural network um so this</font>

631
00:25:52,410 --> 00:25:57,419
is<font color="#CCCCCC"> an example of</font><font color="#E5E5E5"> a very tiny deep neural</font>

632
00:25:54,330 --> 00:25:59,340
network<font color="#CCCCCC"> um deep neural</font><font color="#E5E5E5"> networks are</font>

633
00:25:57,419 --> 00:26:01,169
really really powerful<font color="#E5E5E5"> because their</font>

634
00:25:59,340 --> 00:26:04,080
structure<font color="#E5E5E5"> basically allows them</font><font color="#CCCCCC"> to learn</font>

635
00:26:01,169 --> 00:26:07,770
<font color="#E5E5E5">this sort of deep nested hierarchy of</font>

636
00:26:04,080 --> 00:26:10,230
concepts<font color="#CCCCCC"> and in other</font><font color="#E5E5E5"> words lower layers</font>

637
00:26:07,770 --> 00:26:12,330
basically<font color="#E5E5E5"> learn to develop simple</font>

638
00:26:10,230 --> 00:26:15,630
transformations of your original<font color="#E5E5E5"> input</font>

639
00:26:12,330 --> 00:26:17,760
<font color="#E5E5E5">input features and later layers</font><font color="#CCCCCC"> learn to</font>

640
00:26:15,630 --> 00:26:20,760
<font color="#E5E5E5">use these</font><font color="#CCCCCC"> representations as their own</font>

641
00:26:17,760 --> 00:26:22,559
inputs<font color="#E5E5E5"> right so this this layer might</font>

642
00:26:20,760 --> 00:26:25,140
represent a somewhat complex

643
00:26:22,559 --> 00:26:27,480
representation of original inputs<font color="#E5E5E5"> this</font>

644
00:26:25,140 --> 00:26:29,040
layer<font color="#E5E5E5"> gets to use these guys as inputs</font>

645
00:26:27,480 --> 00:26:31,290
and so if this found something

646
00:26:29,040 --> 00:26:33,480
<font color="#CCCCCC">interesting this layer</font><font color="#E5E5E5"> can use it in</font>

647
00:26:31,290 --> 00:26:33,840
different ways to<font color="#E5E5E5"> figure something else</font>

648
00:26:33,480 --> 00:26:35,940
out

649
00:26:33,840 --> 00:26:37,980
<font color="#E5E5E5">thank you so that's that's sort of what</font>

650
00:26:35,940 --> 00:26:39,580
why they're learning<font color="#E5E5E5"> this deep nested</font>

651
00:26:37,980 --> 00:26:41,410
hierarchy

652
00:26:39,580 --> 00:26:42,850
because there's a concept<font color="#E5E5E5"> here and then</font>

653
00:26:41,410 --> 00:26:44,620
it's being used<font color="#E5E5E5"> in</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> ways</font><font color="#CCCCCC"> by</font>

654
00:26:42,850 --> 00:26:48,870
later layers and this allows for<font color="#E5E5E5"> like</font>

655
00:26:44,620 --> 00:26:54,540
super super efficient<font color="#E5E5E5"> sort of</font>

656
00:26:48,870 --> 00:26:57,250
representation<font color="#E5E5E5"> of ideas and patterns</font><font color="#CCCCCC"> so</font>

657
00:26:54,540 --> 00:26:58,990
<font color="#CCCCCC">this kind of neural network is</font><font color="#E5E5E5"> able to</font>

658
00:26:57,250 --> 00:27:01,240
map out incredibly complex patterns

659
00:26:58,990 --> 00:27:03,010
right because later layers are able to

660
00:27:01,240 --> 00:27:04,870
<font color="#E5E5E5">take advantage</font><font color="#CCCCCC"> of lower level</font><font color="#E5E5E5"> learning</font>

661
00:27:03,010 --> 00:27:06,940
<font color="#E5E5E5">patterns in</font><font color="#CCCCCC"> different ways</font><font color="#E5E5E5"> so there's</font>

662
00:27:04,870 --> 00:27:11,439
the sort<font color="#E5E5E5"> of kind of multiplicative</font>

663
00:27:06,940 --> 00:27:14,940
effect<font color="#E5E5E5"> okay so I want</font><font color="#CCCCCC"> to do a really</font>

664
00:27:11,440 --> 00:27:18,940
<font color="#CCCCCC">quick demo to give you guys an idea of</font>

665
00:27:14,940 --> 00:27:33,390
what this<font color="#CCCCCC"> means</font><font color="#E5E5E5"> so let's see if I can</font>

666
00:27:18,940 --> 00:27:37,660
click<font color="#E5E5E5"> on the right thing there we are</font>

667
00:27:33,390 --> 00:27:39,700
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> so this is a really cool website</font>

668
00:27:37,660 --> 00:27:41,020
<font color="#E5E5E5">and produced by</font><font color="#CCCCCC"> tensorflow</font>

669
00:27:39,700 --> 00:27:44,140
which is an<font color="#E5E5E5"> open source deep learning</font>

670
00:27:41,020 --> 00:27:45,460
framework<font color="#E5E5E5"> um</font><font color="#CCCCCC"> prease</font><font color="#E5E5E5"> by</font><font color="#CCCCCC"> google and it</font>

671
00:27:44,140 --> 00:27:47,040
basically<font color="#E5E5E5"> lets you build really tiny</font>

672
00:27:45,460 --> 00:27:51,460
neural networks with<font color="#E5E5E5"> some sample data</font>

673
00:27:47,040 --> 00:27:55,149
<font color="#E5E5E5">for fun so right here on the Left we</font>

674
00:27:51,460 --> 00:27:59,500
<font color="#CCCCCC">have a</font><font color="#E5E5E5"> laser pointer our input features</font>

675
00:27:55,150 --> 00:28:01,870
x1 and<font color="#E5E5E5"> x2 and here we have an actual</font>

676
00:27:59,500 --> 00:28:05,110
neural network that<font color="#CCCCCC"> we can build so we</font>

677
00:28:01,870 --> 00:28:07,750
can add hidden layers take away hidden

678
00:28:05,110 --> 00:28:09,909
<font color="#E5E5E5">layers and this graph here is basically</font>

679
00:28:07,750 --> 00:28:12,640
<font color="#E5E5E5">showing our final output neuron we're</font>

680
00:28:09,910 --> 00:28:14,860
just gonna give us a score<font color="#E5E5E5"> right so this</font>

681
00:28:12,640 --> 00:28:17,590
<font color="#E5E5E5">is our training data</font><font color="#CCCCCC"> and we want to</font><font color="#E5E5E5"> find</font>

682
00:28:14,860 --> 00:28:21,280
some decision boundary<font color="#E5E5E5"> so when I press</font>

683
00:28:17,590 --> 00:28:23,830
<font color="#E5E5E5">this play button over here</font><font color="#CCCCCC"> this websites</font>

684
00:28:21,280 --> 00:28:25,270
<font color="#E5E5E5">is going to have our machine learning</font>

685
00:28:23,830 --> 00:28:27,189
<font color="#CCCCCC">model that we</font><font color="#E5E5E5"> build look at that</font>

686
00:28:25,270 --> 00:28:29,379
training<font color="#E5E5E5"> data optimize the</font><font color="#CCCCCC"> parameters</font>

687
00:28:27,190 --> 00:28:31,450
and try to find<font color="#E5E5E5"> a decision boundary so</font>

688
00:28:29,380 --> 00:28:34,030
let's let's press play<font color="#E5E5E5"> and right now</font>

689
00:28:31,450 --> 00:28:36,160
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> just one neuron connected</font><font color="#E5E5E5"> to a</font>

690
00:28:34,030 --> 00:28:38,220
final output<font color="#E5E5E5"> neuron so pretty simple</font>

691
00:28:36,160 --> 00:28:42,040
neural network if<font color="#E5E5E5"> you can call it that</font>

692
00:28:38,220 --> 00:28:43,990
<font color="#E5E5E5">okay it does very well</font><font color="#CCCCCC"> um right because</font>

693
00:28:42,040 --> 00:28:46,899
our<font color="#CCCCCC"> se is</font><font color="#E5E5E5"> pretty simple</font><font color="#CCCCCC"> but what happens</font>

694
00:28:43,990 --> 00:28:48,340
when<font color="#E5E5E5"> we have a bit more ah data right</font>

695
00:28:46,900 --> 00:28:51,280
for some reason<font color="#E5E5E5"> let's just</font>

696
00:28:48,340 --> 00:28:53,590
that file maliciousness is defined by

697
00:28:51,280 --> 00:28:55,570
number of elements and file size and

698
00:28:53,590 --> 00:28:59,110
there's a circle pattern<font color="#CCCCCC"> I don't know</font>

699
00:28:55,570 --> 00:29:00,820
why<font color="#CCCCCC"> can we find this with one neuron not</font>

700
00:28:59,110 --> 00:29:02,770
<font color="#E5E5E5">really because one</font><font color="#CCCCCC"> neuron right is</font><font color="#E5E5E5"> just</font>

701
00:29:00,820 --> 00:29:04,360
a linear combination<font color="#E5E5E5"> of the inputs with</font>

702
00:29:02,770 --> 00:29:06,129
a little activation<font color="#E5E5E5"> function so like how</font>

703
00:29:04,360 --> 00:29:11,320
is it supposed<font color="#CCCCCC"> to find a</font><font color="#E5E5E5"> circle</font>

704
00:29:06,130 --> 00:29:13,120
I can't<font color="#E5E5E5"> however it's one thing if we add</font>

705
00:29:11,320 --> 00:29:15,450
<font color="#CCCCCC">more neurons maybe maybe it will be able</font>

706
00:29:13,120 --> 00:29:17,739
<font color="#CCCCCC">to</font><font color="#E5E5E5"> write if we had</font><font color="#CCCCCC"> to</font>

707
00:29:15,450 --> 00:29:21,010
it can do a little<font color="#E5E5E5"> bit of a better</font><font color="#CCCCCC"> job</font>

708
00:29:17,740 --> 00:29:27,190
<font color="#E5E5E5">right but it's still not about that</font>

709
00:29:21,010 --> 00:29:28,900
circle<font color="#E5E5E5"> um</font><font color="#CCCCCC"> if we add</font><font color="#E5E5E5"> three neurons it</font>

710
00:29:27,190 --> 00:29:33,670
does a little<font color="#E5E5E5"> bit better</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> actually</font>

711
00:29:28,900 --> 00:29:35,740
<font color="#E5E5E5">finds like a nice shape</font><font color="#CCCCCC"> oh sorry</font><font color="#E5E5E5"> um so</font>

712
00:29:33,670 --> 00:29:37,690
that's<font color="#E5E5E5"> really cool but let's let's throw</font>

713
00:29:35,740 --> 00:29:40,990
something a little bit harder at it<font color="#E5E5E5"> um</font><font color="#CCCCCC"> I</font>

714
00:29:37,690 --> 00:29:42,850
want to throw this at it so this<font color="#CCCCCC"> is a</font>

715
00:29:40,990 --> 00:29:45,100
spiral<font color="#CCCCCC"> shape and again rate we're not</font>

716
00:29:42,850 --> 00:29:46,570
telling<font color="#E5E5E5"> our neural network</font><font color="#CCCCCC"> Hey look</font><font color="#E5E5E5"> for</font>

717
00:29:45,100 --> 00:29:48,070
a spiral shape or look for<font color="#CCCCCC"> a circle</font>

718
00:29:46,570 --> 00:29:51,220
<font color="#CCCCCC">shape we're just giving it the data and</font>

719
00:29:48,070 --> 00:29:53,200
saying<font color="#E5E5E5"> like please solve this for me</font><font color="#CCCCCC"> but</font>

720
00:29:51,220 --> 00:29:55,750
<font color="#E5E5E5">even with a lot of</font><font color="#CCCCCC"> neurons it's gonna be</font>

721
00:29:53,200 --> 00:29:57,280
pretty<font color="#CCCCCC"> tricky</font><font color="#E5E5E5"> um if you give it a ton of</font>

722
00:29:55,750 --> 00:30:00,250
neurons<font color="#E5E5E5"> it would eventually find</font><font color="#CCCCCC"> this</font>

723
00:29:57,280 --> 00:30:03,160
spiral shape but it's very very<font color="#CCCCCC"> hard so</font>

724
00:30:00,250 --> 00:30:04,960
if we do this right it's gonna be<font color="#E5E5E5"> tricky</font>

725
00:30:03,160 --> 00:30:09,190
<font color="#E5E5E5">and it won't won't really win something</font>

726
00:30:04,960 --> 00:30:11,680
<font color="#E5E5E5">very fast</font><font color="#CCCCCC"> however if we add some more</font>

727
00:30:09,190 --> 00:30:14,080
<font color="#E5E5E5">hidden</font><font color="#CCCCCC"> layers it can start using this</font>

728
00:30:11,680 --> 00:30:16,330
like benefit of a deep nested hierarchy

729
00:30:14,080 --> 00:30:19,510
of concepts<font color="#E5E5E5"> right so something's</font>

730
00:30:16,330 --> 00:30:22,689
happening but not great so<font color="#CCCCCC"> imma add some</font>

731
00:30:19,510 --> 00:30:26,379
<font color="#CCCCCC">more layers</font><font color="#E5E5E5"> so I'll add two more layers</font>

732
00:30:22,690 --> 00:30:29,050
<font color="#CCCCCC">give it</font><font color="#E5E5E5"> some neurons like six or</font>

733
00:30:26,380 --> 00:30:32,290
<font color="#CCCCCC">something</font><font color="#E5E5E5"> and hope this works</font>

734
00:30:29,050 --> 00:30:34,330
and I'll press<font color="#CCCCCC"> play to train so what I</font>

735
00:30:32,290 --> 00:30:37,180
want you guys<font color="#E5E5E5"> to look at well this is</font>

736
00:30:34,330 --> 00:30:40,240
<font color="#E5E5E5">training or the feature activations</font><font color="#CCCCCC"> and</font>

737
00:30:37,180 --> 00:30:42,520
<font color="#E5E5E5">these</font><font color="#CCCCCC"> little blue boxes</font><font color="#E5E5E5"> so these feature</font>

738
00:30:40,240 --> 00:30:44,410
activations<font color="#E5E5E5"> are basically showing the</font>

739
00:30:42,520 --> 00:30:46,060
<font color="#CCCCCC">decision boundary that each neuron</font><font color="#E5E5E5"> is</font>

740
00:30:44,410 --> 00:30:47,350
finding right so in this first layer

741
00:30:46,060 --> 00:30:49,240
they're very<font color="#E5E5E5"> simple</font><font color="#CCCCCC"> they're basically</font>

742
00:30:47,350 --> 00:30:50,250
just<font color="#E5E5E5"> lines because they're looking it's</font>

743
00:30:49,240 --> 00:30:53,080
just a single<font color="#E5E5E5"> neuron</font>

744
00:30:50,250 --> 00:30:54,520
however<font color="#E5E5E5"> these later layers are learning</font>

745
00:30:53,080 --> 00:30:56,379
much much more complex feature

746
00:30:54,520 --> 00:30:58,080
representations<font color="#E5E5E5"> because they're taking</font>

747
00:30:56,380 --> 00:31:00,160
<font color="#CCCCCC">the first</font>

748
00:30:58,080 --> 00:31:02,470
<font color="#CCCCCC">all right neurons as input</font>

749
00:31:00,160 --> 00:31:06,330
and so<font color="#E5E5E5"> right this final layer has</font><font color="#CCCCCC"> the</font>

750
00:31:02,470 --> 00:31:06,330
most complex feature representations and

751
00:31:06,600 --> 00:31:13,149
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> my drink some coffee it ends up</font>

752
00:31:11,050 --> 00:31:14,680
<font color="#E5E5E5">being able to find a sort of spiral</font>

753
00:31:13,150 --> 00:31:16,860
shape which<font color="#CCCCCC"> is pretty cool</font><font color="#E5E5E5"> because we</font>

754
00:31:14,680 --> 00:31:23,560
haven't<font color="#E5E5E5"> told it to find a spiral shape</font>

755
00:31:16,860 --> 00:31:24,879
<font color="#E5E5E5">so that's</font><font color="#CCCCCC"> awesome well</font><font color="#E5E5E5"> and if we gave it</font>

756
00:31:23,560 --> 00:31:29,139
<font color="#CCCCCC">more data right it would do an even</font>

757
00:31:24,880 --> 00:31:32,320
better<font color="#CCCCCC"> job okay so hopefully</font><font color="#E5E5E5"> that kind</font>

758
00:31:29,140 --> 00:31:35,890
of gives<font color="#CCCCCC"> you guys an idea</font><font color="#E5E5E5"> of the power</font>

759
00:31:32,320 --> 00:31:45,929
<font color="#E5E5E5">of deep learning um go back</font><font color="#CCCCCC"> to the slide</font>

760
00:31:35,890 --> 00:31:45,930
deck<font color="#E5E5E5"> screen</font>

761
00:31:52,610 --> 00:32:00,709
<font color="#E5E5E5">okay cool so</font><font color="#CCCCCC"> keep</font><font color="#E5E5E5"> learning</font>

762
00:31:57,080 --> 00:32:02,960
um<font color="#E5E5E5"> one really</font><font color="#CCCCCC"> cool thing</font><font color="#E5E5E5"> about deep</font>

763
00:32:00,710 --> 00:32:04,990
learning as well is<font color="#CCCCCC"> that it skills</font><font color="#E5E5E5"> like</font>

764
00:32:02,960 --> 00:32:07,940
super<font color="#E5E5E5"> beautifully with a ton of data</font>

765
00:32:04,990 --> 00:32:10,100
<font color="#CCCCCC">right when you when you throw a bunch of</font>

766
00:32:07,940 --> 00:32:12,890
data<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot of classical machine learning</font>

767
00:32:10,100 --> 00:32:14,629
methods<font color="#CCCCCC"> one of two</font><font color="#E5E5E5"> things generally</font>

768
00:32:12,890 --> 00:32:17,000
happens when<font color="#E5E5E5"> your</font><font color="#CCCCCC"> computer explodes</font>

769
00:32:14,630 --> 00:32:18,019
<font color="#CCCCCC">because it's</font><font color="#E5E5E5"> just computationally</font>

770
00:32:17,000 --> 00:32:20,659
intractable it's not<font color="#CCCCCC"> going to happen</font>

771
00:32:18,019 --> 00:32:22,070
<font color="#CCCCCC">right the second thing is that</font><font color="#E5E5E5"> your</font>

772
00:32:20,659 --> 00:32:23,809
model just doesn't get<font color="#E5E5E5"> much better</font><font color="#CCCCCC"> a</font>

773
00:32:22,070 --> 00:32:25,519
model trained on<font color="#CCCCCC"> thirty million</font><font color="#E5E5E5"> files</font>

774
00:32:23,809 --> 00:32:27,590
like does great<font color="#E5E5E5"> and then when you train</font>

775
00:32:25,519 --> 00:32:30,260
it on<font color="#CCCCCC"> forty million</font><font color="#E5E5E5"> files it's like the</font>

776
00:32:27,590 --> 00:32:32,570
same model<font color="#E5E5E5"> um and that is because right</font>

777
00:32:30,260 --> 00:32:35,000
<font color="#E5E5E5">there just isn't a ton of model capacity</font>

778
00:32:32,570 --> 00:32:36,889
<font color="#E5E5E5">there's like no more space to fit all</font>

779
00:32:35,000 --> 00:32:39,529
these<font color="#E5E5E5"> new patterns in it's not flexible</font>

780
00:32:36,889 --> 00:32:42,080
<font color="#CCCCCC">enough</font><font color="#E5E5E5"> deep learning in</font><font color="#CCCCCC"> general is is</font>

781
00:32:39,529 --> 00:32:44,990
not<font color="#CCCCCC"> like this like it scales</font><font color="#E5E5E5"> beautifully</font>

782
00:32:42,080 --> 00:32:46,158
with a ton of data<font color="#E5E5E5"> usually you keep on</font>

783
00:32:44,990 --> 00:32:47,690
<font color="#E5E5E5">getting better</font><font color="#CCCCCC"> and better and</font><font color="#E5E5E5"> better</font>

784
00:32:46,159 --> 00:32:49,730
<font color="#E5E5E5">even when you've trained it on like a</font>

785
00:32:47,690 --> 00:32:51,649
<font color="#E5E5E5">hundred million files so that's</font><font color="#CCCCCC"> super</font>

786
00:32:49,730 --> 00:32:53,480
cool<font color="#E5E5E5"> and</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> related</font><font color="#CCCCCC"> to this</font><font color="#E5E5E5"> idea of</font>

787
00:32:51,649 --> 00:32:56,209
<font color="#E5E5E5">our deep nested hierarchy of concepts</font>

788
00:32:53,480 --> 00:32:57,980
<font color="#E5E5E5">because right we're able to learn these</font>

789
00:32:56,210 --> 00:32:59,899
concepts very very efficiently because

790
00:32:57,980 --> 00:33:02,120
<font color="#CCCCCC">our</font><font color="#E5E5E5"> multiple layers and we also just</font>

791
00:32:59,899 --> 00:33:03,830
have<font color="#CCCCCC"> a ton of information</font><font color="#E5E5E5"> able to be</font>

792
00:33:02,120 --> 00:33:07,129
stored because<font color="#E5E5E5"> of the size of these</font>

793
00:33:03,830 --> 00:33:08,149
models right<font color="#E5E5E5"> so um normally when we're</font>

794
00:33:07,130 --> 00:33:10,880
actually creating<font color="#E5E5E5"> these neural networks</font>

795
00:33:08,149 --> 00:33:13,489
<font color="#CCCCCC">in real life</font><font color="#E5E5E5"> neural networks have</font>

796
00:33:10,880 --> 00:33:15,230
thousands of<font color="#E5E5E5"> neurons and millions and</font>

797
00:33:13,490 --> 00:33:17,029
<font color="#CCCCCC">millions of parameters and so that's</font>

798
00:33:15,230 --> 00:33:18,710
like<font color="#E5E5E5"> that's a lot of information that</font>

799
00:33:17,029 --> 00:33:20,539
we're able<font color="#E5E5E5"> to compress in</font><font color="#CCCCCC"> their other</font>

800
00:33:18,710 --> 00:33:23,330
<font color="#E5E5E5">machine</font><font color="#CCCCCC"> learning models often</font><font color="#E5E5E5"> have fewer</font>

801
00:33:20,539 --> 00:33:26,299
parameters<font color="#E5E5E5"> and so sort of the size of</font>

802
00:33:23,330 --> 00:33:29,330
<font color="#E5E5E5">these models combined with this deep</font>

803
00:33:26,299 --> 00:33:31,010
structure allows them to learn super

804
00:33:29,330 --> 00:33:35,779
super complex<font color="#E5E5E5"> feature representations</font>

805
00:33:31,010 --> 00:33:39,110
<font color="#E5E5E5">and scale with a ton of data okay</font>

806
00:33:35,779 --> 00:33:41,210
so oh and<font color="#CCCCCC"> I did want to mention right</font>

807
00:33:39,110 --> 00:33:43,908
this is great<font color="#CCCCCC"> for cybersecurity because</font>

808
00:33:41,210 --> 00:33:45,679
whatever<font color="#CCCCCC"> tell our data</font><font color="#E5E5E5"> so it ends up</font>

809
00:33:43,909 --> 00:33:48,289
<font color="#E5E5E5">working really</font><font color="#CCCCCC"> well in</font><font color="#E5E5E5"> theory and in</font>

810
00:33:45,679 --> 00:33:49,880
<font color="#CCCCCC">practice</font><font color="#E5E5E5"> at least the team that I work</font>

811
00:33:48,289 --> 00:33:52,970
on<font color="#E5E5E5"> generally finds that deep learning</font>

812
00:33:49,880 --> 00:33:55,639
models are about<font color="#E5E5E5"> the best you can do I'm</font>

813
00:33:52,970 --> 00:33:59,539
in<font color="#E5E5E5"> Austin blow away other methods</font><font color="#CCCCCC"> so</font>

814
00:33:55,639 --> 00:34:02,689
<font color="#CCCCCC">that's pretty cool um so what I showed</font>

815
00:33:59,539 --> 00:34:05,129
you<font color="#E5E5E5"> here was actually</font><font color="#CCCCCC"> an example of a</font>

816
00:34:02,690 --> 00:34:08,190
feed-forward neural network

817
00:34:05,130 --> 00:34:10,200
which is basically<font color="#CCCCCC"> like a cheese pizza</font>

818
00:34:08,190 --> 00:34:12,720
<font color="#CCCCCC">so you can kind of toss on other</font>

819
00:34:10,199 --> 00:34:14,460
toppings<font color="#CCCCCC"> and</font><font color="#E5E5E5"> get a new type</font><font color="#CCCCCC"> of neural</font>

820
00:34:12,719 --> 00:34:16,770
network but this is sort<font color="#CCCCCC"> of</font><font color="#E5E5E5"> like your</font>

821
00:34:14,460 --> 00:34:18,599
<font color="#E5E5E5">your bread and</font><font color="#CCCCCC"> butter but</font><font color="#E5E5E5"> there are lots</font>

822
00:34:16,770 --> 00:34:20,579
of other kind of structure<font color="#E5E5E5"> is for super</font>

823
00:34:18,599 --> 00:34:22,290
for unsupervised learning for supervised

824
00:34:20,579 --> 00:34:25,399
learning for<font color="#CCCCCC"> four</font><font color="#E5E5E5"> different types of</font>

825
00:34:22,290 --> 00:34:29,009
machine learning<font color="#CCCCCC"> that you can look</font><font color="#E5E5E5"> into</font>

826
00:34:25,399 --> 00:34:31,040
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> so to sort of wrap up what we've</font>

827
00:34:29,010 --> 00:34:34,800
learned<font color="#CCCCCC"> so far</font>

828
00:34:31,040 --> 00:34:36,179
machine learning functions<font color="#E5E5E5"> machine</font>

829
00:34:34,800 --> 00:34:37,740
<font color="#E5E5E5">learning models or dysfunctions</font>

830
00:34:36,179 --> 00:34:39,240
<font color="#E5E5E5">they've been puts and outputs</font><font color="#CCCCCC"> and</font>

831
00:34:37,739 --> 00:34:41,729
<font color="#E5E5E5">they're a bunch of parameters that we</font>

832
00:34:39,239 --> 00:34:43,560
<font color="#CCCCCC">optimize</font><font color="#E5E5E5"> by looking at our</font><font color="#CCCCCC"> training data</font>

833
00:34:41,730 --> 00:34:46,109
<font color="#CCCCCC">and trying</font><font color="#E5E5E5"> to minimize loss and there's</font>

834
00:34:43,560 --> 00:34:49,560
various<font color="#CCCCCC"> mathematical procedures to do</font>

835
00:34:46,109 --> 00:34:51,060
<font color="#E5E5E5">this</font><font color="#CCCCCC"> deep learning is a subset of</font>

836
00:34:49,560 --> 00:34:52,889
machine<font color="#CCCCCC"> learning so it's just a special</font>

837
00:34:51,060 --> 00:34:55,409
<font color="#E5E5E5">family</font><font color="#CCCCCC"> of machine learning functions</font>

838
00:34:52,889 --> 00:34:57,839
it just means deep neural networks<font color="#CCCCCC"> at</font>

839
00:34:55,409 --> 00:34:59,520
least according<font color="#CCCCCC"> most people and neural</font>

840
00:34:57,839 --> 00:35:02,520
<font color="#CCCCCC">networks are just a</font><font color="#E5E5E5"> network of neurons</font>

841
00:34:59,520 --> 00:35:04,800
and<font color="#E5E5E5"> a neuron is just a weighted sum and</font>

842
00:35:02,520 --> 00:35:06,480
an activation function<font color="#CCCCCC"> and a deep neural</font>

843
00:35:04,800 --> 00:35:08,880
network is<font color="#CCCCCC"> just a neural</font><font color="#E5E5E5"> network with</font>

844
00:35:06,480 --> 00:35:10,500
<font color="#E5E5E5">lots of</font><font color="#CCCCCC"> hidden layers</font><font color="#E5E5E5"> they're really</font>

845
00:35:08,880 --> 00:35:15,060
really<font color="#E5E5E5"> excellent at performing complex</font>

846
00:35:10,500 --> 00:35:16,740
human<font color="#E5E5E5"> human-like tasks and given</font><font color="#CCCCCC"> enough</font>

847
00:35:15,060 --> 00:35:21,990
data<font color="#E5E5E5"> they can</font><font color="#CCCCCC"> have really really</font>

848
00:35:16,740 --> 00:35:23,310
extraordinary results<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so let's see</font>

849
00:35:21,990 --> 00:35:27,328
do<font color="#E5E5E5"> you know how much time</font><font color="#CCCCCC"> you have left</font>

850
00:35:23,310 --> 00:35:32,250
<font color="#CCCCCC">so you can look</font><font color="#E5E5E5"> at my clock okay what</font>

851
00:35:27,329 --> 00:35:34,920
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> good</font><font color="#E5E5E5"> so I want to give a quick</font>

852
00:35:32,250 --> 00:35:37,260
<font color="#E5E5E5">run-through</font><font color="#CCCCCC"> of one of the deep learning</font>

853
00:35:34,920 --> 00:35:40,500
<font color="#E5E5E5">models that we've built on our team this</font>

854
00:35:37,260 --> 00:35:42,359
is might not be<font color="#E5E5E5"> easy to see this but</font>

855
00:35:40,500 --> 00:35:45,210
<font color="#E5E5E5">this this is sort of the architecture</font><font color="#CCCCCC"> of</font>

856
00:35:42,359 --> 00:35:48,480
our<font color="#E5E5E5"> short string detector which we use</font>

857
00:35:45,210 --> 00:35:53,369
for URL classification<font color="#E5E5E5"> so we give it a</font>

858
00:35:48,480 --> 00:35:54,900
string<font color="#E5E5E5"> like you know facebook.com and it</font>

859
00:35:53,369 --> 00:35:57,119
looks at it and tells us if it thinks

860
00:35:54,900 --> 00:35:59,369
<font color="#E5E5E5">it's suspicious or not</font><font color="#CCCCCC"> um so we</font>

861
00:35:57,119 --> 00:36:05,579
<font color="#E5E5E5">generally pair this</font><font color="#CCCCCC"> with our HTML HTML</font>

862
00:35:59,369 --> 00:36:08,609
detector<font color="#E5E5E5"> for browsers so I'm gonna run</font>

863
00:36:05,579 --> 00:36:12,869
through the structure of this neural

864
00:36:08,609 --> 00:36:14,819
network<font color="#E5E5E5"> more to give you an idea of what</font>

865
00:36:12,869 --> 00:36:16,500
production neural<font color="#E5E5E5"> networks sort of look</font>

866
00:36:14,819 --> 00:36:18,099
like<font color="#E5E5E5"> and less to fully understand what's</font>

867
00:36:16,500 --> 00:36:22,180
going on<font color="#E5E5E5"> so</font><font color="#CCCCCC"> if you do</font><font color="#E5E5E5"> not</font>

868
00:36:18,099 --> 00:36:24,819
understand a word that's<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> it's just</font>

869
00:36:22,180 --> 00:36:27,940
<font color="#E5E5E5">sort of a basic</font><font color="#CCCCCC"> idea um so first</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> take</font>

870
00:36:24,819 --> 00:36:31,210
a<font color="#E5E5E5"> euro string as input it's one hot</font>

871
00:36:27,940 --> 00:36:32,710
encoded<font color="#E5E5E5"> we we add it to we apply learned</font>

872
00:36:31,210 --> 00:36:35,589
embedding<font color="#E5E5E5"> that's learned during the</font>

873
00:36:32,710 --> 00:36:39,910
training<font color="#CCCCCC"> process so instead of a 100</font>

874
00:36:35,589 --> 00:36:42,180
<font color="#CCCCCC">coded alright character</font><font color="#E5E5E5"> vector this is</font>

875
00:36:39,910 --> 00:36:44,879
<font color="#CCCCCC">transform</font><font color="#E5E5E5"> to a 30</font><font color="#CCCCCC"> sheet dimensional</font>

876
00:36:42,180 --> 00:36:48,009
feature vector so that<font color="#E5E5E5"> things like</font>

877
00:36:44,880 --> 00:36:50,920
uppercase letters are closer in<font color="#E5E5E5"> this</font><font color="#CCCCCC"> 32</font>

878
00:36:48,009 --> 00:36:54,880
<font color="#E5E5E5">dimensional space then lowercase letters</font>

879
00:36:50,920 --> 00:36:58,420
are right so they're big cluster<font color="#CCCCCC"> next up</font>

880
00:36:54,880 --> 00:37:01,920
<font color="#E5E5E5">we use convolutional neurons which is a</font>

881
00:36:58,420 --> 00:37:05,170
special type<font color="#CCCCCC"> of sort</font><font color="#E5E5E5"> of layer of neurons</font>

882
00:37:01,920 --> 00:37:06,849
<font color="#CCCCCC">to extract engrams this is</font><font color="#E5E5E5"> usually used</font>

883
00:37:05,170 --> 00:37:09,279
in image<font color="#E5E5E5"> processing because you sort of</font>

884
00:37:06,849 --> 00:37:10,749
take<font color="#E5E5E5"> a sliding window of your</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> to</font>

885
00:37:09,279 --> 00:37:12,369
really<font color="#E5E5E5"> make it focus on localized</font>

886
00:37:10,749 --> 00:37:14,680
portion of your portions of your data

887
00:37:12,369 --> 00:37:16,359
<font color="#E5E5E5">and so are you we're using it on an</font>

888
00:37:14,680 --> 00:37:19,960
<font color="#E5E5E5">actual string just sort of extract</font>

889
00:37:16,359 --> 00:37:22,930
engrams<font color="#E5E5E5"> um</font><font color="#CCCCCC"> these feature activations are</font>

890
00:37:19,960 --> 00:37:25,869
summed up and sent<font color="#E5E5E5"> to a bunch of fully</font>

891
00:37:22,930 --> 00:37:28,239
connected layers each layer<font color="#E5E5E5"> has about a</font>

892
00:37:25,869 --> 00:37:29,319
thousand<font color="#CCCCCC"> 24 neurons right so</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> means</font>

893
00:37:28,239 --> 00:37:32,440
that there's about<font color="#E5E5E5"> a million parameters</font>

894
00:37:29,319 --> 00:37:33,819
<font color="#E5E5E5">for each of these connected layers it's</font>

895
00:37:32,440 --> 00:37:35,680
sent through<font color="#E5E5E5"> three of those and then</font>

896
00:37:33,819 --> 00:37:39,729
finally aggregated through what's called

897
00:37:35,680 --> 00:37:42,969
<font color="#E5E5E5">a sigmoid output neuron to give us a</font>

898
00:37:39,729 --> 00:37:45,819
final suspiciousness score so that's it

899
00:37:42,969 --> 00:37:50,380
<font color="#E5E5E5">um what's really cool is</font><font color="#CCCCCC"> that this</font>

900
00:37:45,819 --> 00:37:53,440
<font color="#E5E5E5">entire sort of design can be defined</font><font color="#CCCCCC"> in</font>

901
00:37:50,380 --> 00:37:54,789
Python just with this code right so you

902
00:37:53,440 --> 00:37:57,190
don't<font color="#E5E5E5"> need to understand any of this</font>

903
00:37:54,789 --> 00:37:59,890
code<font color="#E5E5E5"> but that entire design is right</font>

904
00:37:57,190 --> 00:38:03,549
there and just<font color="#E5E5E5"> a few lines of</font><font color="#CCCCCC"> cortex and</font>

905
00:37:59,890 --> 00:38:06,069
<font color="#E5E5E5">so which</font><font color="#CCCCCC"> full-rate is</font><font color="#E5E5E5"> that in 2018</font><font color="#CCCCCC"> you</font>

906
00:38:03,549 --> 00:38:08,559
can<font color="#E5E5E5"> just use super</font><font color="#CCCCCC"> high-level packages</font>

907
00:38:06,069 --> 00:38:10,450
and programming languages<font color="#E5E5E5"> to to sort of</font>

908
00:38:08,559 --> 00:38:13,150
design<font color="#CCCCCC"> these models and test them on</font>

909
00:38:10,450 --> 00:38:14,919
your computer<font color="#CCCCCC"> um</font><font color="#E5E5E5"> maybe not super super</font>

910
00:38:13,150 --> 00:38:17,920
<font color="#E5E5E5">quickly and maybe not 100 million files</font>

911
00:38:14,920 --> 00:38:20,069
<font color="#CCCCCC">without a bit of money that you can try</font>

912
00:38:17,920 --> 00:38:22,569
out<font color="#CCCCCC"> this stuff so</font><font color="#E5E5E5"> this is we actually</font><font color="#CCCCCC"> um</font>

913
00:38:20,069 --> 00:38:25,239
<font color="#E5E5E5">for this model</font><font color="#CCCCCC"> this is defined in Kerris</font>

914
00:38:22,569 --> 00:38:27,369
which is a wrapper to<font color="#E5E5E5"> tensorflow which</font>

915
00:38:25,239 --> 00:38:28,559
is also available<font color="#E5E5E5"> in</font><font color="#CCCCCC"> python which is</font>

916
00:38:27,369 --> 00:38:33,180
that open<font color="#E5E5E5"> source</font>

917
00:38:28,559 --> 00:38:38,509
<font color="#CCCCCC">in cream work produced by</font><font color="#E5E5E5"> Google</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so</font>

918
00:38:33,180 --> 00:38:38,509
<font color="#CCCCCC">I'm gonna</font><font color="#E5E5E5"> demo this real fast if we can</font>

919
00:38:41,809 --> 00:38:51,299
okay so I'm<font color="#E5E5E5"> gonna load</font><font color="#CCCCCC"> up my model</font><font color="#E5E5E5"> right</font>

920
00:38:45,449 --> 00:38:56,069
<font color="#CCCCCC">here and test out some URLs so feel so I</font>

921
00:38:51,299 --> 00:38:57,959
don't<font color="#CCCCCC"> cherry-pick um feel free to</font><font color="#E5E5E5"> shout</font>

922
00:38:56,069 --> 00:39:00,019
out URLs that you want me to test<font color="#CCCCCC"> I</font>

923
00:38:57,959 --> 00:39:03,689
<font color="#E5E5E5">think</font><font color="#CCCCCC"> Google them to get the exact URL</font>

924
00:39:00,019 --> 00:39:06,808
<font color="#E5E5E5">as an example</font><font color="#CCCCCC"> 20</font><font color="#E5E5E5"> houses is Newark but</font>

925
00:39:03,689 --> 00:39:08,489
<font color="#E5E5E5">you can you know put in some URL and it</font>

926
00:39:06,809 --> 00:39:10,650
will give<font color="#CCCCCC"> us some output right like</font>

927
00:39:08,489 --> 00:39:12,150
<font color="#E5E5E5">point</font><font color="#CCCCCC"> zero zero five so this</font><font color="#E5E5E5"> is very</font>

928
00:39:10,650 --> 00:39:14,039
close to<font color="#E5E5E5"> zero so our model thinks</font><font color="#CCCCCC"> this</font>

929
00:39:12,150 --> 00:39:18,420
is probably not<font color="#E5E5E5"> going to infect my</font>

930
00:39:14,039 --> 00:39:20,039
computer um however<font color="#CCCCCC"> if you give it</font>

931
00:39:18,420 --> 00:39:23,130
something<font color="#E5E5E5"> a little bit more</font>

932
00:39:20,039 --> 00:39:25,259
<font color="#CCCCCC">suspicious-looking like Amazon login</font>

933
00:39:23,130 --> 00:39:29,430
credentials right it's gonna give you a

934
00:39:25,259 --> 00:39:31,680
high score um<font color="#E5E5E5"> so yeah any any</font>

935
00:39:29,430 --> 00:39:42,319
suggestions<font color="#CCCCCC"> go ahead I don't know</font>

936
00:39:31,680 --> 00:39:45,779
paypal.com<font color="#CCCCCC"> maybe paypal.com</font><font color="#E5E5E5"> slash login</font>

937
00:39:42,319 --> 00:39:48,150
slash lots of<font color="#E5E5E5"> random letters</font>

938
00:39:45,779 --> 00:39:49,679
I don't know gives you<font color="#CCCCCC"> a nice</font><font color="#E5E5E5"> so the</font>

939
00:39:48,150 --> 00:39:52,049
basic idea right is that<font color="#E5E5E5"> it hasn't</font>

940
00:39:49,679 --> 00:39:54,689
memorized like a bunch<font color="#E5E5E5"> of URLs</font><font color="#CCCCCC"> it's like</font>

941
00:39:52,049 --> 00:39:56,640
figure<font color="#CCCCCC"> it out what looks malicious in a</font>

942
00:39:54,689 --> 00:39:58,558
URL<font color="#CCCCCC"> so that even if you give it a</font><font color="#E5E5E5"> year</font>

943
00:39:56,640 --> 00:40:00,390
old<font color="#E5E5E5"> it's never seen</font><font color="#CCCCCC"> before I can say hey</font>

944
00:39:58,559 --> 00:40:01,829
it looks<font color="#CCCCCC"> like it's asking you for</font>

945
00:40:00,390 --> 00:40:03,959
<font color="#E5E5E5">credentials and it looks</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> this is</font>

946
00:40:01,829 --> 00:40:06,420
kind of<font color="#E5E5E5"> like the PayPal word but a</font>

947
00:40:03,959 --> 00:40:09,299
little bit different<font color="#CCCCCC"> um</font><font color="#E5E5E5"> or like it looks</font>

948
00:40:06,420 --> 00:40:12,839
like<font color="#E5E5E5"> oh I didn't put issue yes it looks</font>

949
00:40:09,299 --> 00:40:16,229
like<font color="#CCCCCC"> um this is HTV instead of HTTP</font>

950
00:40:12,839 --> 00:40:19,640
<font color="#E5E5E5">right so this is 0.99</font><font color="#CCCCCC"> because there's</font>

951
00:40:16,229 --> 00:40:22,529
not an S<font color="#E5E5E5"> and I hope this works</font>

952
00:40:19,640 --> 00:40:25,348
<font color="#CCCCCC">when you add an S it's much safer</font><font color="#E5E5E5"> um</font>

953
00:40:22,529 --> 00:40:31,650
right so stuff like<font color="#E5E5E5"> this</font><font color="#CCCCCC"> so that's the</font>

954
00:40:25,349 --> 00:40:37,099
basic idea<font color="#E5E5E5"> um yeah let's see I'm gonna</font>

955
00:40:31,650 --> 00:40:39,469
<font color="#E5E5E5">go to Reddit and</font><font color="#CCCCCC"> get a random</font><font color="#E5E5E5"> URL see</font>

956
00:40:37,099 --> 00:40:41,250
what's<font color="#CCCCCC"> something that's safe</font><font color="#E5E5E5"> for work</font>

957
00:40:39,469 --> 00:40:44,900
<font color="#E5E5E5">what's</font>

958
00:40:41,250 --> 00:40:44,900
let's go to machine<font color="#CCCCCC"> learning</font>

959
00:40:49,910 --> 00:41:06,299
maybe oh gosh you're right shows<font color="#CCCCCC"> me</font><font color="#E5E5E5"> I</font>

960
00:41:01,349 --> 00:41:09,000
need<font color="#CCCCCC"> to read it more often okay so this</font>

961
00:41:06,300 --> 00:41:12,329
is blue so I promise<font color="#E5E5E5"> I happen huh</font><font color="#CCCCCC"> oh</font>

962
00:41:09,000 --> 00:41:23,760
there's no link um we gon do these

963
00:41:12,329 --> 00:41:32,329
<font color="#E5E5E5">before the</font><font color="#CCCCCC"> xra sure</font><font color="#E5E5E5"> where's that oh oh</font><font color="#CCCCCC"> I</font>

964
00:41:23,760 --> 00:41:40,250
<font color="#E5E5E5">see one two or</font><font color="#CCCCCC"> three okay</font>

965
00:41:32,329 --> 00:41:52,530
<font color="#CCCCCC">see this</font><font color="#E5E5E5"> there's a link somewhere oh</font>

966
00:41:40,250 --> 00:41:56,520
really<font color="#E5E5E5"> okay okay cool</font><font color="#CCCCCC"> all right let's</font>

967
00:41:52,530 --> 00:42:00,290
see what<font color="#CCCCCC"> happens I hope</font><font color="#E5E5E5"> I won't get</font>

968
00:41:56,520 --> 00:42:03,030
fired<font color="#E5E5E5"> okay very low yay</font>

969
00:42:00,290 --> 00:42:05,150
and reading<font color="#E5E5E5"> itself let's see</font>

970
00:42:03,030 --> 00:42:07,770
hopefully it will be very very<font color="#CCCCCC"> low um</font>

971
00:42:05,150 --> 00:42:10,440
yeah<font color="#E5E5E5"> so this</font><font color="#CCCCCC"> is this is the basic idea</font>

972
00:42:07,770 --> 00:42:12,900
behind these models we train them on

973
00:42:10,440 --> 00:42:15,030
like hundreds of<font color="#E5E5E5"> millions</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> URLs so</font>

974
00:42:12,900 --> 00:42:20,010
that you know they can<font color="#E5E5E5"> learn these</font>

975
00:42:15,030 --> 00:42:24,359
patterns and figure<font color="#CCCCCC"> out</font><font color="#E5E5E5"> that this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> not</font>

976
00:42:20,010 --> 00:42:29,010
gonna a hacker come here<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> see I</font>

977
00:42:24,359 --> 00:42:40,078
can go back<font color="#E5E5E5"> to this um I've been extra</font>

978
00:42:29,010 --> 00:42:41,910
time for<font color="#E5E5E5"> questions</font><font color="#CCCCCC"> so okay</font><font color="#E5E5E5"> so that's</font>

979
00:42:40,079 --> 00:42:44,430
actually the end of all if I talk I'm a

980
00:42:41,910 --> 00:42:47,220
bit<font color="#E5E5E5"> early um but if you want to learn</font>

981
00:42:44,430 --> 00:42:50,069
more<font color="#CCCCCC"> I highly</font><font color="#E5E5E5"> recommend things like</font>

982
00:42:47,220 --> 00:42:51,720
YouTube<font color="#CCCCCC"> see blue and brown is like</font>

983
00:42:50,069 --> 00:42:53,009
really<font color="#E5E5E5"> really awesome at explaining</font>

984
00:42:51,720 --> 00:42:55,919
neural network theory

985
00:42:53,010 --> 00:42:59,870
<font color="#E5E5E5">um Wikipedia Coursera I also just helped</font>

986
00:42:55,920 --> 00:43:03,510
read a book so<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> fine</font>

987
00:42:59,870 --> 00:43:06,600
you know what have you yeah<font color="#E5E5E5"> so feel</font><font color="#CCCCCC"> free</font>

988
00:43:03,510 --> 00:43:16,790
to learn<font color="#E5E5E5"> it's it's very very</font><font color="#CCCCCC"> fun and</font>

989
00:43:06,600 --> 00:43:18,150
that's it<font color="#E5E5E5"> so yes</font><font color="#CCCCCC"> any questions yeah</font>

990
00:43:16,790 --> 00:43:20,850
that's great

991
00:43:18,150 --> 00:43:23,520
I like this is this one<font color="#CCCCCC"> oh</font><font color="#E5E5E5"> okay great um</font>

992
00:43:20,850 --> 00:43:25,049
this<font color="#E5E5E5"> is probably</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> really basic or even</font>

993
00:43:23,520 --> 00:43:26,759
dumb question I'm having<font color="#E5E5E5"> trouble</font>

994
00:43:25,050 --> 00:43:30,270
understanding where like hidden<font color="#E5E5E5"> layers</font>

995
00:43:26,760 --> 00:43:32,040
come in how do you test or detect for

996
00:43:30,270 --> 00:43:36,000
that or how do you<font color="#E5E5E5"> set them up okay so</font>

997
00:43:32,040 --> 00:43:42,120
yeah I definitely um me go back through

998
00:43:36,000 --> 00:43:43,980
this<font color="#E5E5E5"> okay so what you do is you're not</font>

999
00:43:42,120 --> 00:43:46,170
sort<font color="#E5E5E5"> of growing hidden layers during the</font>

1000
00:43:43,980 --> 00:43:48,660
training<font color="#CCCCCC"> process you</font><font color="#E5E5E5"> sort of define your</font>

1001
00:43:46,170 --> 00:43:50,460
architecture and then you train right so

1002
00:43:48,660 --> 00:43:52,589
yeah so it's<font color="#E5E5E5"> sort of</font><font color="#CCCCCC"> like a hyper</font>

1003
00:43:50,460 --> 00:43:54,180
parameter um<font color="#CCCCCC"> so you're saying like I</font>

1004
00:43:52,590 --> 00:43:57,540
want a deep<font color="#CCCCCC"> learning model with like</font>

1005
00:43:54,180 --> 00:43:59,879
seven<font color="#E5E5E5"> layers</font><font color="#CCCCCC"> yeah and then</font><font color="#E5E5E5"> you train and</font>

1006
00:43:57,540 --> 00:44:08,220
then the<font color="#E5E5E5"> parameters in</font><font color="#CCCCCC"> that neural</font>

1007
00:43:59,880 --> 00:44:17,030
network<font color="#E5E5E5"> are optimized oh sorry</font><font color="#CCCCCC"> yeah this</font>

1008
00:44:08,220 --> 00:44:17,029
the actual<font color="#E5E5E5"> structure of</font><font color="#CCCCCC"> the modeler yeah</font>

1009
00:44:18,980 --> 00:44:33,150
<font color="#E5E5E5">for the actual design</font><font color="#CCCCCC"> of the model</font><font color="#E5E5E5"> or</font>

1010
00:44:22,880 --> 00:44:40,980
like parameters so the optimized

1011
00:44:33,150 --> 00:44:43,410
parameters okay<font color="#CCCCCC"> yeah no so they</font><font color="#E5E5E5"> don't</font>

1012
00:44:40,980 --> 00:44:47,490
self-generate so you so like in<font color="#CCCCCC"> Python</font>

1013
00:44:43,410 --> 00:44:49,109
<font color="#CCCCCC">in Karis right</font><font color="#E5E5E5"> you'd say I want my first</font>

1014
00:44:47,490 --> 00:44:51,330
<font color="#E5E5E5">input layer</font><font color="#CCCCCC"> and I</font><font color="#E5E5E5"> wanted to have three</font>

1015
00:44:49,110 --> 00:44:53,220
neurons<font color="#E5E5E5"> and then this is gonna feed to a</font>

1016
00:44:51,330 --> 00:44:55,080
new layer<font color="#E5E5E5"> and I wanted to have four</font>

1017
00:44:53,220 --> 00:44:56,910
neurons<font color="#E5E5E5"> and this is gonna</font><font color="#CCCCCC"> feed to new</font>

1018
00:44:55,080 --> 00:44:58,830
layer<font color="#E5E5E5"> with four nines that's gonna feed</font>

1019
00:44:56,910 --> 00:45:00,480
to a<font color="#E5E5E5"> new layer with two neurons</font><font color="#CCCCCC"> so you</font>

1020
00:44:58,830 --> 00:45:01,560
define<font color="#E5E5E5"> that</font><font color="#CCCCCC"> right and</font><font color="#E5E5E5"> that's fixed no it</font>

1021
00:45:00,480 --> 00:45:03,990
doesn't<font color="#E5E5E5"> change during the training</font>

1022
00:45:01,560 --> 00:45:04,910
<font color="#CCCCCC">process and each</font><font color="#E5E5E5"> of these neurons rate</font>

1023
00:45:03,990 --> 00:45:07,520
has it has

1024
00:45:04,910 --> 00:45:09,520
parameters there waiting bias terms<font color="#E5E5E5"> and</font>

1025
00:45:07,520 --> 00:45:14,540
then during<font color="#E5E5E5"> training all we're</font><font color="#CCCCCC"> altering</font>

1026
00:45:09,520 --> 00:45:20,410
<font color="#CCCCCC">is just these parameters right</font><font color="#E5E5E5"> yeah okay</font>

1027
00:45:14,540 --> 00:45:20,410
<font color="#E5E5E5">cool yeah for sure</font>

1028
00:45:22,450 --> 00:45:29,810
<font color="#CCCCCC">yeah as you're training</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> model do you</font>

1029
00:45:27,020 --> 00:45:31,550
train<font color="#E5E5E5"> the first layer first</font><font color="#CCCCCC"> and then</font>

1030
00:45:29,810 --> 00:45:34,460
like is it important to hold<font color="#E5E5E5"> that fixed</font>

1031
00:45:31,550 --> 00:45:36,590
as you train the upper layers or it like

1032
00:45:34,460 --> 00:45:39,260
is that<font color="#CCCCCC"> order important</font><font color="#E5E5E5"> that's a great</font>

1033
00:45:36,590 --> 00:45:47,180
question<font color="#CCCCCC"> so it's it's all trained at</font>

1034
00:45:39,260 --> 00:45:50,450
once<font color="#E5E5E5"> with math yes</font><font color="#CCCCCC"> google</font>

1035
00:45:47,180 --> 00:45:52,669
<font color="#CCCCCC">backpropagation</font><font color="#E5E5E5"> probably watch a</font><font color="#CCCCCC"> youtube</font>

1036
00:45:50,450 --> 00:45:54,529
video<font color="#E5E5E5"> to learn more but</font><font color="#CCCCCC"> basically we use</font>

1037
00:45:52,670 --> 00:45:57,320
the chain<font color="#CCCCCC"> rule and some</font><font color="#E5E5E5"> really fun</font>

1038
00:45:54,530 --> 00:45:59,570
<font color="#CCCCCC">Gervais math to sort of calculate which</font>

1039
00:45:57,320 --> 00:46:03,160
direction<font color="#E5E5E5"> these all these parameters</font>

1040
00:45:59,570 --> 00:46:03,160
should<font color="#CCCCCC"> be pushed sort of</font><font color="#E5E5E5"> sort of at once</font>

1041
00:46:05,290 --> 00:46:11,540
as a follow-up<font color="#E5E5E5"> to that how do you do</font>

1042
00:46:08,890 --> 00:46:11,930
<font color="#CCCCCC">incorrectly train</font><font color="#E5E5E5"> layers or is that not</font>

1043
00:46:11,540 --> 00:46:14,180
a thing

1044
00:46:11,930 --> 00:46:16,490
<font color="#E5E5E5">incredibly well</font><font color="#CCCCCC"> in train</font><font color="#E5E5E5"> players like</font>

1045
00:46:14,180 --> 00:46:19,129
for example you train this deep<font color="#E5E5E5"> snip and</font>

1046
00:46:16,490 --> 00:46:22,180
you found something<font color="#CCCCCC"> ordinate so</font><font color="#E5E5E5"> you want</font>

1047
00:46:19,130 --> 00:46:24,320
to debug it<font color="#E5E5E5"> or is then not possible um</font>

1048
00:46:22,180 --> 00:46:26,029
so I guess<font color="#E5E5E5"> it depends what you're</font>

1049
00:46:24,320 --> 00:46:28,580
<font color="#CCCCCC">looking for you can definitely</font><font color="#E5E5E5"> like look</font>

1050
00:46:26,030 --> 00:46:30,710
at the feature activations so you can

1051
00:46:28,580 --> 00:46:33,259
kind of debug it to a certain<font color="#CCCCCC"> extent but</font>

1052
00:46:30,710 --> 00:46:35,600
deep neural<font color="#E5E5E5"> networks are famous for</font>

1053
00:46:33,260 --> 00:46:37,330
<font color="#CCCCCC">being</font><font color="#E5E5E5"> kind of black boxes</font><font color="#CCCCCC"> so it can be</font>

1054
00:46:35,600 --> 00:46:39,589
very difficult especially<font color="#CCCCCC"> if it's</font><font color="#E5E5E5"> like</font>

1055
00:46:37,330 --> 00:46:41,420
yeah if it's a hidden<font color="#E5E5E5"> layer you</font><font color="#CCCCCC"> don't</font>

1056
00:46:39,590 --> 00:46:43,430
really<font color="#E5E5E5"> fully understand what the inputs</font>

1057
00:46:41,420 --> 00:46:47,480
are or the outfits<font color="#CCCCCC"> so it can be</font><font color="#E5E5E5"> tricky</font>

1058
00:46:43,430 --> 00:46:49,160
um but yeah<font color="#E5E5E5"> you usually can just do</font>

1059
00:46:47,480 --> 00:46:50,930
<font color="#E5E5E5">things like did my mom will get better</font>

1060
00:46:49,160 --> 00:47:02,149
when<font color="#CCCCCC"> I added</font><font color="#E5E5E5"> a hidden layer</font><font color="#CCCCCC"> if it did</font>

1061
00:46:50,930 --> 00:47:03,740
that's great if it didn't what did you

1062
00:47:02,150 --> 00:47:06,770
input<font color="#E5E5E5"> into</font><font color="#CCCCCC"> that so did you go through</font>

1063
00:47:03,740 --> 00:47:08,509
<font color="#E5E5E5">and configure each neuron with what the</font>

1064
00:47:06,770 --> 00:47:09,560
weighted average should<font color="#CCCCCC"> be and then you</font>

1065
00:47:08,510 --> 00:47:11,480
<font color="#CCCCCC">because</font><font color="#E5E5E5"> you were just</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> throughput</font>

1066
00:47:09,560 --> 00:47:13,160
saying plus plus plus plus<font color="#E5E5E5"> plus</font><font color="#CCCCCC"> at it</font>

1067
00:47:11,480 --> 00:47:16,510
look<font color="#E5E5E5"> at magic butBut I'm</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> assume</font>

1068
00:47:13,160 --> 00:47:16,509
that<font color="#E5E5E5"> you had pre-configured those</font>

1069
00:47:16,740 --> 00:47:21,359
so it's<font color="#E5E5E5"> really simple and</font><font color="#CCCCCC"> carrots</font>

1070
00:47:18,960 --> 00:47:23,160
specifically you basically work in

1071
00:47:21,359 --> 00:47:25,140
layers<font color="#CCCCCC"> so</font><font color="#E5E5E5"> usually with neural networks</font>

1072
00:47:23,160 --> 00:47:28,259
you have<font color="#E5E5E5"> layers of neurons so what</font>

1073
00:47:25,140 --> 00:47:30,359
usually do is say I want a layer of<font color="#E5E5E5"> rel</font>

1074
00:47:28,260 --> 00:47:31,530
uner ons with<font color="#E5E5E5"> that rel</font><font color="#CCCCCC"> u activation</font>

1075
00:47:30,359 --> 00:47:33,839
function and<font color="#E5E5E5"> I want there to be a</font>

1076
00:47:31,530 --> 00:47:35,460
thousand 24<font color="#E5E5E5"> right and then you just say</font>

1077
00:47:33,839 --> 00:47:37,020
I want another layer<font color="#CCCCCC"> and I want it to be</font>

1078
00:47:35,460 --> 00:47:38,160
fully connected which means that every

1079
00:47:37,020 --> 00:47:40,530
<font color="#CCCCCC">single neuron</font><font color="#E5E5E5"> and this layer is</font>

1080
00:47:38,160 --> 00:47:41,730
connected every small one in the next so

1081
00:47:40,530 --> 00:47:43,710
that's<font color="#E5E5E5"> why you can design these like</font>

1082
00:47:41,730 --> 00:47:45,140
with like amazing speed<font color="#E5E5E5"> because you're</font>

1083
00:47:43,710 --> 00:47:47,460
not actually<font color="#E5E5E5"> defining every single night</font>

1084
00:47:45,140 --> 00:47:50,580
<font color="#E5E5E5">choosing each individual neuron with</font>

1085
00:47:47,460 --> 00:47:52,710
<font color="#E5E5E5">yeah the weighted average or whatever</font>

1086
00:47:50,580 --> 00:47:54,720
they do yeah I mean<font color="#E5E5E5"> like</font><font color="#CCCCCC"> you could but</font>

1087
00:47:52,710 --> 00:47:56,339
usually you're working with big layers

1088
00:47:54,720 --> 00:47:58,500
with<font color="#CCCCCC"> thousand-dollar</font><font color="#E5E5E5"> ones just</font><font color="#CCCCCC"> because</font>

1089
00:47:56,339 --> 00:48:02,509
like yeah that's that's what<font color="#E5E5E5"> you want to</font>

1090
00:47:58,500 --> 00:48:02,510
<font color="#E5E5E5">do um so it makes things what easier</font>

1091
00:48:10,820 --> 00:48:13,879
[Music]

1092
00:48:14,599 --> 00:48:20,400
yeah<font color="#CCCCCC"> yeah there</font><font color="#E5E5E5"> are definitely some</font>

1093
00:48:18,060 --> 00:48:25,080
<font color="#E5E5E5">really cool ways to like</font><font color="#CCCCCC"> lime is a</font>

1094
00:48:20,400 --> 00:48:27,030
really<font color="#E5E5E5"> really do that oh yeah oh did he</font>

1095
00:48:25,080 --> 00:48:28,410
be lying<font color="#CCCCCC"> yeah that was great we actually</font>

1096
00:48:27,030 --> 00:48:30,030
<font color="#CCCCCC">tried out</font><font color="#E5E5E5"> some of those methods on our</font>

1097
00:48:28,410 --> 00:48:32,399
team and it<font color="#CCCCCC"> was super</font><font color="#E5E5E5"> awesome we</font>

1098
00:48:30,030 --> 00:48:36,990
<font color="#E5E5E5">actually tried</font><font color="#CCCCCC"> it on the URL model to</font>

1099
00:48:32,400 --> 00:48:38,150
see<font color="#CCCCCC"> those</font><font color="#E5E5E5"> strings okay cool um yeah for</font>

1100
00:48:36,990 --> 00:48:54,270
<font color="#E5E5E5">sure</font>

1101
00:48:38,150 --> 00:48:56,820
any others yeah yeah yes yes so yeah so

1102
00:48:54,270 --> 00:48:58,589
<font color="#E5E5E5">trial and error is the why because</font>

1103
00:48:56,820 --> 00:49:00,420
<font color="#E5E5E5">that's not efficient it's just a really</font>

1104
00:48:58,589 --> 00:49:02,400
nice<font color="#CCCCCC"> way to think</font><font color="#E5E5E5"> about it yeah so</font>

1105
00:49:00,420 --> 00:49:04,680
<font color="#CCCCCC">basically if you think about every</font>

1106
00:49:02,400 --> 00:49:06,990
single<font color="#E5E5E5"> neuron fully</font><font color="#CCCCCC"> a combination</font><font color="#E5E5E5"> of the</font>

1107
00:49:04,680 --> 00:49:08,609
inputs which is differentiable<font color="#E5E5E5"> and it's</font>

1108
00:49:06,990 --> 00:49:09,810
a differentiable activation function and

1109
00:49:08,609 --> 00:49:11,819
you're just sticking<font color="#E5E5E5"> these guys</font><font color="#CCCCCC"> together</font>

1110
00:49:09,810 --> 00:49:14,070
so a massive deep<font color="#E5E5E5"> learning network is</font>

1111
00:49:11,820 --> 00:49:16,680
all differentiable<font color="#CCCCCC"> so as a result</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> can</font>

1112
00:49:14,070 --> 00:49:19,950
we can basically just use chain<font color="#E5E5E5"> rule</font>

1113
00:49:16,680 --> 00:49:22,290
magic<font color="#E5E5E5"> to calculate like how will</font><font color="#CCCCCC"> my</font>

1114
00:49:19,950 --> 00:49:24,149
output change if I change a certain

1115
00:49:22,290 --> 00:49:26,730
<font color="#CCCCCC">parameter because it's just</font><font color="#E5E5E5"> a partial</font>

1116
00:49:24,150 --> 00:49:27,810
derivative<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then we use channel magic</font>

1117
00:49:26,730 --> 00:49:29,730
to calculate that super super

1118
00:49:27,810 --> 00:49:30,799
<font color="#E5E5E5">efficiently by going backwards layer by</font>

1119
00:49:29,730 --> 00:49:32,990
layer

1120
00:49:30,800 --> 00:49:37,250
which makes it like super<font color="#E5E5E5"> super fast and</font>

1121
00:49:32,990 --> 00:50:16,839
<font color="#E5E5E5">that's why we turn on these yes yes</font>

1122
00:49:37,250 --> 00:50:18,740
sorry<font color="#E5E5E5"> that's why yes sorry</font><font color="#CCCCCC"> I mean a</font>

1123
00:50:16,840 --> 00:50:20,270
background in data science<font color="#CCCCCC"> is really</font>

1124
00:50:18,740 --> 00:50:21,890
<font color="#E5E5E5">nice</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> background and like probability</font>

1125
00:50:20,270 --> 00:50:23,660
theory is like lovely and I think will

1126
00:50:21,890 --> 00:50:25,069
<font color="#E5E5E5">always help you out but I think if</font>

1127
00:50:23,660 --> 00:50:26,270
you're smart and you're ready to<font color="#E5E5E5"> learn</font>

1128
00:50:25,070 --> 00:50:27,560
like anyone<font color="#E5E5E5"> can really do this</font>

1129
00:50:26,270 --> 00:50:31,490
<font color="#E5E5E5">especially if you have a background in</font>

1130
00:50:27,560 --> 00:50:32,900
programming<font color="#CCCCCC"> so yeah there really I don't</font>

1131
00:50:31,490 --> 00:50:34,520
<font color="#E5E5E5">think there are barriers like honestly</font>

1132
00:50:32,900 --> 00:50:36,530
there's<font color="#E5E5E5"> so many amazing</font><font color="#CCCCCC"> researches on</font>

1133
00:50:34,520 --> 00:50:37,790
internet nowadays like if you really

1134
00:50:36,530 --> 00:50:40,040
want to and you're<font color="#CCCCCC"> willing to spend</font><font color="#E5E5E5"> the</font>

1135
00:50:37,790 --> 00:50:44,230
time<font color="#CCCCCC"> learning and are interested</font><font color="#E5E5E5"> in this</font>

1136
00:50:40,040 --> 00:50:44,230
stuff<font color="#E5E5E5"> like like you can totally</font><font color="#CCCCCC"> do it</font>

1137
00:50:53,230 --> 00:51:01,130
um let's<font color="#E5E5E5"> see</font><font color="#CCCCCC"> I yeah</font><font color="#E5E5E5"> so there's a visual</font>

1138
00:50:59,390 --> 00:51:03,049
introduction<font color="#E5E5E5"> to machine learning which</font>

1139
00:51:01,130 --> 00:51:10,210
is a deep learning which<font color="#CCCCCC"> is really good</font>

1140
00:51:03,050 --> 00:51:10,210
um I think<font color="#CCCCCC"> that's what it's called</font>

1141
00:51:11,440 --> 00:51:15,860
<font color="#CCCCCC">so I recommend this it's like it's like</font>

1142
00:51:13,670 --> 00:51:19,460
<font color="#E5E5E5">a visual blog with like a ton of really</font>

1143
00:51:15,860 --> 00:51:23,150
awesome<font color="#CCCCCC"> link d3 based visualizations</font>

1144
00:51:19,460 --> 00:51:25,730
which a book<font color="#CCCCCC"> although</font><font color="#E5E5E5"> you know yay for</font>

1145
00:51:23,150 --> 00:51:27,670
books that<font color="#CCCCCC"> I helped write but a book</font>

1146
00:51:25,730 --> 00:51:32,570
can't do that so<font color="#E5E5E5"> that's really awesome</font>

1147
00:51:27,670 --> 00:51:34,190
<font color="#CCCCCC">that's super cool</font><font color="#E5E5E5"> yeah so I think this</font>

1148
00:51:32,570 --> 00:51:36,350
<font color="#E5E5E5">is this is</font><font color="#CCCCCC"> like an introduction to</font>

1149
00:51:34,190 --> 00:51:41,060
<font color="#E5E5E5">machine learning</font><font color="#CCCCCC"> I guess I forget if it</font>

1150
00:51:36,350 --> 00:51:41,650
goes in a deep learning<font color="#E5E5E5"> later me doesn't</font>

1151
00:51:41,060 --> 00:51:43,390
this is a

1152
00:51:41,650 --> 00:51:45,760
really good introduction<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the basic</font>

1153
00:51:43,390 --> 00:51:48,038
<font color="#CCCCCC">idea of</font><font color="#E5E5E5"> machine learning</font><font color="#CCCCCC"> I think</font><font color="#E5E5E5"> the</font>

1154
00:51:45,760 --> 00:51:50,170
blue<font color="#CCCCCC"> brown YouTube</font><font color="#E5E5E5"> authors really</font>

1155
00:51:48,039 --> 00:51:52,180
awesome if you're interested in

1156
00:51:50,170 --> 00:51:53,910
summaries<font color="#CCCCCC"> of machine learning papers I</font>

1157
00:51:52,180 --> 00:51:57,240
highly<font color="#E5E5E5"> recommend the morning paper</font>

1158
00:51:53,910 --> 00:52:01,328
<font color="#CCCCCC">he is like super awesome</font><font color="#E5E5E5"> TL</font><font color="#CCCCCC"> DRS of</font>

1159
00:51:57,240 --> 00:52:07,328
complicated machine learning papers<font color="#E5E5E5"> the</font>

1160
00:52:01,329 --> 00:52:15,730
morning paper very<font color="#E5E5E5"> smart dude</font><font color="#CCCCCC"> um it's</font>

1161
00:52:07,329 --> 00:52:17,829
it's a blog yeah it's it's<font color="#E5E5E5"> just a</font>

1162
00:52:15,730 --> 00:52:20,440
website<font color="#E5E5E5"> with a big block on it this guy</font>

1163
00:52:17,829 --> 00:52:22,390
<font color="#E5E5E5">just reads scientific papers from</font>

1164
00:52:20,440 --> 00:52:25,950
various different<font color="#E5E5E5"> domains</font><font color="#CCCCCC"> including the</font>

1165
00:52:22,390 --> 00:52:27,819
<font color="#CCCCCC">teeth</font><font color="#E5E5E5"> learning machine learning and</font>

1166
00:52:25,950 --> 00:52:32,140
summarizes them and like really<font color="#E5E5E5"> nice</font>

1167
00:52:27,819 --> 00:52:33,250
blog posts<font color="#E5E5E5"> I think I'm not</font><font color="#CCCCCC"> I think those</font>

1168
00:52:32,140 --> 00:52:34,089
are<font color="#CCCCCC"> probably</font><font color="#E5E5E5"> my about my best</font>

1169
00:52:33,250 --> 00:52:40,990
recommendations

1170
00:52:34,089 --> 00:52:44,650
<font color="#E5E5E5">um yeah any other questions yeah</font><font color="#CCCCCC"> oh</font>

1171
00:52:40,990 --> 00:52:46,930
sorry yes<font color="#CCCCCC"> so that the datasets that</font>

1172
00:52:44,650 --> 00:52:48,670
you're working<font color="#E5E5E5"> on are trying not to be</font>

1173
00:52:46,930 --> 00:52:51,700
<font color="#CCCCCC">detected they don't want to be trainable</font>

1174
00:52:48,670 --> 00:52:53,230
so are you<font color="#E5E5E5"> do you just retrain as</font><font color="#CCCCCC"> you</font>

1175
00:52:51,700 --> 00:52:54,970
<font color="#CCCCCC">recollect more data into</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> datasets</font>

1176
00:52:53,230 --> 00:52:59,289
<font color="#CCCCCC">or</font><font color="#E5E5E5"> are you</font><font color="#CCCCCC"> also adding attributes over</font>

1177
00:52:54,970 --> 00:53:02,109
<font color="#E5E5E5">time um so we try</font><font color="#CCCCCC"> to train on really</font>

1178
00:52:59,289 --> 00:53:04,180
<font color="#CCCCCC">really fresh data so yeah we often know</font>

1179
00:53:02,109 --> 00:53:06,369
training<font color="#CCCCCC"> on like 30</font><font color="#E5E5E5"> days of</font>

1180
00:53:04,180 --> 00:53:08,919
never-before-seen files because we want

1181
00:53:06,369 --> 00:53:11,020
<font color="#E5E5E5">to focus on being able to protect files</font>

1182
00:53:08,920 --> 00:53:13,569
that signatures will miss so we

1183
00:53:11,020 --> 00:53:15,490
definitely<font color="#CCCCCC"> focus on that in</font><font color="#E5E5E5"> terms of</font>

1184
00:53:13,569 --> 00:53:16,808
<font color="#CCCCCC">altering your asking if we like ultra</font>

1185
00:53:15,490 --> 00:53:19,479
<font color="#CCCCCC">feature</font><font color="#E5E5E5"> space like the features that</font>

1186
00:53:16,809 --> 00:53:20,260
were extracting<font color="#E5E5E5"> I think we do that</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot</font>

1187
00:53:19,480 --> 00:53:22,329
less often

1188
00:53:20,260 --> 00:53:24,069
um one benefit of deep learning is that

1189
00:53:22,329 --> 00:53:26,950
<font color="#E5E5E5">you don't actually have</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> spend a lot</font>

1190
00:53:24,069 --> 00:53:28,690
<font color="#CCCCCC">of time working on like complex</font><font color="#E5E5E5"> feature</font>

1191
00:53:26,950 --> 00:53:30,490
extraction<font color="#E5E5E5"> because if you give a deep</font>

1192
00:53:28,690 --> 00:53:32,349
learning model like pretty raw features

1193
00:53:30,490 --> 00:53:33,669
<font color="#E5E5E5">they'll do the feature extraction for</font>

1194
00:53:32,349 --> 00:53:35,589
you<font color="#CCCCCC"> right cuz they're learning</font><font color="#E5E5E5"> these</font>

1195
00:53:33,670 --> 00:53:37,420
<font color="#E5E5E5">complex feature representations so you</font>

1196
00:53:35,589 --> 00:53:40,420
don't need to say like oh here's like

1197
00:53:37,420 --> 00:53:42,160
<font color="#E5E5E5">the length of my file</font><font color="#CCCCCC"> or like you know</font>

1198
00:53:40,420 --> 00:53:43,900
the number of A's in my file<font color="#E5E5E5"> if that</font>

1199
00:53:42,160 --> 00:53:44,828
meant<font color="#CCCCCC"> anything</font><font color="#E5E5E5"> like it'll it'll figure</font>

1200
00:53:43,900 --> 00:53:47,049
<font color="#E5E5E5">that</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> for itself</font>

1201
00:53:44,829 --> 00:53:49,210
um<font color="#CCCCCC"> so at least for asked</font><font color="#E5E5E5"> that tends to</font>

1202
00:53:47,049 --> 00:53:52,319
<font color="#E5E5E5">be pretty stable but there's always room</font>

1203
00:53:49,210 --> 00:53:52,319
<font color="#CCCCCC">for</font><font color="#E5E5E5"> improvement for sure</font>

1204
00:53:59,040 --> 00:54:07,660
<font color="#E5E5E5">um yeah um</font><font color="#CCCCCC"> so deep warning in</font><font color="#E5E5E5"> particular</font>

1205
00:54:04,950 --> 00:54:09,549
<font color="#E5E5E5">well</font><font color="#CCCCCC"> and machine learning - there's</font>

1206
00:54:07,660 --> 00:54:12,670
<font color="#E5E5E5">something called adversarial</font><font color="#CCCCCC"> texts which</font>

1207
00:54:09,550 --> 00:54:15,579
<font color="#E5E5E5">are sort of a big hole in machine</font>

1208
00:54:12,670 --> 00:54:17,170
learning defenses so<font color="#CCCCCC"> malware office can</font>

1209
00:54:15,579 --> 00:54:19,329
definitely if they have access<font color="#CCCCCC"> to sort</font>

1210
00:54:17,170 --> 00:54:22,210
<font color="#E5E5E5">of a bunch of inputs to one of our</font>

1211
00:54:19,329 --> 00:54:24,400
<font color="#CCCCCC">models and</font><font color="#E5E5E5"> the models answer there are</font>

1212
00:54:22,210 --> 00:54:27,310
certain ways to sort<font color="#E5E5E5"> of craft other</font>

1213
00:54:24,400 --> 00:54:29,619
models to craft<font color="#E5E5E5"> inputs that will get us</font>

1214
00:54:27,310 --> 00:54:33,009
get the wrong<font color="#CCCCCC"> answer and so that's like</font>

1215
00:54:29,619 --> 00:54:34,300
<font color="#E5E5E5">that's a big problem</font><font color="#CCCCCC"> in sort</font><font color="#E5E5E5"> of machine</font>

1216
00:54:33,010 --> 00:54:36,670
learning<font color="#CCCCCC"> and</font><font color="#E5E5E5"> malware section that a lot</font>

1217
00:54:34,300 --> 00:54:38,500
of<font color="#E5E5E5"> people are thinking</font><font color="#CCCCCC"> a lot about and</font>

1218
00:54:36,670 --> 00:54:40,089
another good reason<font color="#E5E5E5"> why you really can't</font>

1219
00:54:38,500 --> 00:54:41,619
just<font color="#CCCCCC"> have machine learning you really</font>

1220
00:54:40,089 --> 00:54:43,000
want<font color="#E5E5E5"> like machine</font><font color="#CCCCCC"> learning and signature</font>

1221
00:54:41,619 --> 00:54:44,380
isn't<font color="#CCCCCC"> like other other methods of</font>

1222
00:54:43,000 --> 00:54:46,200
<font color="#E5E5E5">detection so that's probably the biggest</font>

1223
00:54:44,380 --> 00:54:49,180
hole I can<font color="#CCCCCC"> think of</font>

1224
00:54:46,200 --> 00:54:53,049
do you know<font color="#E5E5E5"> use guess where I should not</font>

1225
00:54:49,180 --> 00:54:55,810
<font color="#CCCCCC">use deep</font><font color="#E5E5E5"> blender um</font><font color="#CCCCCC"> use case we can not</font>

1226
00:54:53,050 --> 00:54:58,000
do that's well so when you<font color="#E5E5E5"> don't have</font><font color="#CCCCCC"> a</font>

1227
00:54:55,810 --> 00:55:02,109
lot<font color="#CCCCCC"> of data on deep learning probably is</font>

1228
00:54:58,000 --> 00:55:03,400
not the<font color="#E5E5E5"> best bet um if your problem</font><font color="#CCCCCC"> if</font>

1229
00:55:02,109 --> 00:55:05,828
you really want your problem to be

1230
00:55:03,400 --> 00:55:07,750
explainable also probably<font color="#E5E5E5"> not your</font><font color="#CCCCCC"> best</font>

1231
00:55:05,829 --> 00:55:10,060
<font color="#CCCCCC">but if you're really really</font><font color="#E5E5E5"> concerned</font>

1232
00:55:07,750 --> 00:55:13,619
<font color="#E5E5E5">with just results and you have a lot of</font>

1233
00:55:10,060 --> 00:55:13,619
<font color="#E5E5E5">data than deep learning is a great idea</font>

1234
00:55:15,780 --> 00:55:22,030
excellent job at deep learning<font color="#E5E5E5"> and</font>

1235
00:55:18,280 --> 00:55:24,069
machine learning<font color="#E5E5E5"> tools what can you know</font>

1236
00:55:22,030 --> 00:55:34,780
of any other industry<font color="#E5E5E5"> players that may</font>

1237
00:55:24,069 --> 00:55:36,819
be doing<font color="#E5E5E5"> decent job in</font><font color="#CCCCCC"> your opinion</font><font color="#E5E5E5"> I I</font>

1238
00:55:34,780 --> 00:55:39,849
think<font color="#E5E5E5"> there</font><font color="#CCCCCC"> are a lot of</font><font color="#E5E5E5"> players out</font>

1239
00:55:36,819 --> 00:55:41,890
<font color="#E5E5E5">there that are doing a great</font><font color="#CCCCCC"> job but I</font>

1240
00:55:39,849 --> 00:55:45,670
also do<font color="#CCCCCC"> not really have access</font><font color="#E5E5E5"> to their</font>

1241
00:55:41,890 --> 00:55:47,170
results<font color="#E5E5E5"> so I plead the fifth</font><font color="#CCCCCC"> but I think</font>

1242
00:55:45,670 --> 00:55:50,260
lots of<font color="#CCCCCC"> people are</font><font color="#E5E5E5"> working on a lot of</font>

1243
00:55:47,170 --> 00:55:53,310
<font color="#E5E5E5">super interesting things but</font><font color="#CCCCCC"> I also like</font>

1244
00:55:50,260 --> 00:55:53,310
my<font color="#E5E5E5"> team so</font>

1245
00:55:58,960 --> 00:56:02,960
for your talk

1246
00:56:00,620 --> 00:56:05,060
do you use any<font color="#CCCCCC"> ottoman strategies to</font>

1247
00:56:02,960 --> 00:56:08,120
train your model or<font color="#CCCCCC"> other video</font>

1248
00:56:05,060 --> 00:56:17,600
strategies like to<font color="#CCCCCC"> optimize</font><font color="#E5E5E5"> like the</font>

1249
00:56:08,120 --> 00:56:19,609
structure yeah um so we've<font color="#CCCCCC"> done</font><font color="#E5E5E5"> like</font>

1250
00:56:17,600 --> 00:56:22,670
automated hyper perimeter searches to a

1251
00:56:19,610 --> 00:56:24,200
certain extent<font color="#E5E5E5"> but when you do like like</font>

1252
00:56:22,670 --> 00:56:26,510
Google's tried like building a machine

1253
00:56:24,200 --> 00:56:28,009
<font color="#E5E5E5">learning model to like predict the</font>

1254
00:56:26,510 --> 00:56:30,050
optimal structure<font color="#E5E5E5"> of a neural network</font>

1255
00:56:28,010 --> 00:56:32,780
<font color="#E5E5E5">and</font><font color="#CCCCCC"> that's great but</font><font color="#E5E5E5"> it also costs</font><font color="#CCCCCC"> like</font>

1256
00:56:30,050 --> 00:56:34,040
a lot of<font color="#CCCCCC"> money because training</font><font color="#E5E5E5"> neural</font>

1257
00:56:32,780 --> 00:56:35,690
networks<font color="#E5E5E5"> when you're training them on</font>

1258
00:56:34,040 --> 00:56:38,120
hundreds of<font color="#E5E5E5"> millions</font><font color="#CCCCCC"> of files</font><font color="#E5E5E5"> is quite</font>

1259
00:56:35,690 --> 00:56:39,680
expensive<font color="#CCCCCC"> yeah so we've mostly limited</font>

1260
00:56:38,120 --> 00:56:41,299
<font color="#E5E5E5">it to like type of parameter searches</font>

1261
00:56:39,680 --> 00:56:42,740
and<font color="#E5E5E5"> not anything more complex purely</font>

1262
00:56:41,300 --> 00:56:44,870
because<font color="#E5E5E5"> we don't want to spend like two</font>

1263
00:56:42,740 --> 00:56:48,859
<font color="#E5E5E5">million dollars training our next neural</font>

1264
00:56:44,870 --> 00:56:51,230
network cool I<font color="#E5E5E5"> think that's all the time</font>

1265
00:56:48,860 --> 00:56:54,610
we have<font color="#E5E5E5"> so thank you so</font><font color="#CCCCCC"> much</font><font color="#E5E5E5"> feel free</font>

1266
00:56:51,230 --> 00:56:54,610
to hit me up afterwards<font color="#CCCCCC"> with questions</font>

1267
00:56:55,350 --> 00:56:59,659
[Applause]

