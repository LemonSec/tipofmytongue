1
00:00:00,000 --> 00:00:03,899
we have a<font color="#E5E5E5"> price and Scott they're going</font>

2
00:00:02,070 --> 00:00:05,850
to be presenting one compromise rule

3
00:00:03,899 --> 00:00:07,919
them all it's going to<font color="#E5E5E5"> be a little</font><font color="#CCCCCC"> bit</font>

4
00:00:05,850 --> 00:00:11,099
<font color="#E5E5E5">of an addition</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the previous</font>

5
00:00:07,919 --> 00:00:20,910
presentation on Empire so with that I'll

6
00:00:11,099 --> 00:00:24,240
leave it's<font color="#CCCCCC"> bryson Scott can</font><font color="#E5E5E5"> you guys</font>

7
00:00:20,910 --> 00:00:25,730
<font color="#E5E5E5">hear that okay now great Scott's going</font>

8
00:00:24,240 --> 00:00:31,140
<font color="#E5E5E5">to show you today a little bit about</font>

9
00:00:25,730 --> 00:00:32,668
<font color="#CCCCCC">dcos and mezzos and why you might want</font>

10
00:00:31,140 --> 00:00:35,219
<font color="#E5E5E5">to check out these technologies for</font>

11
00:00:32,668 --> 00:00:37,349
doing job orchestration across your data

12
00:00:35,219 --> 00:00:39,210
centers and then<font color="#CCCCCC"> I'm going to show</font><font color="#E5E5E5"> you</font>

13
00:00:37,350 --> 00:00:41,969
today why you should take just a<font color="#CCCCCC"> little</font>

14
00:00:39,210 --> 00:00:45,390
bit extra<font color="#E5E5E5"> time to try and secure down</font>

15
00:00:41,969 --> 00:00:48,329
some of the building blocks that<font color="#CCCCCC"> DCOs</font><font color="#E5E5E5"> is</font>

16
00:00:45,390 --> 00:00:53,010
built upon so I'm hand it over to Scott

17
00:00:48,329 --> 00:00:55,110
to<font color="#CCCCCC"> do get you a</font><font color="#E5E5E5"> little bit up speed is</font>

18
00:00:53,010 --> 00:00:57,210
<font color="#E5E5E5">anybody in the room familiar with</font><font color="#CCCCCC"> DC OS</font>

19
00:00:55,110 --> 00:00:59,640
or mezzos are they using that in their

20
00:00:57,210 --> 00:01:03,480
day job for fun we've got a couple of

21
00:00:59,640 --> 00:01:06,479
people so<font color="#CCCCCC"> DCOs stands for data center</font>

22
00:01:03,480 --> 00:01:08,789
operating system<font color="#E5E5E5"> it was born out of a</font>

23
00:01:06,479 --> 00:01:10,979
need<font color="#E5E5E5"> to efficiently use resource into</font>

24
00:01:08,790 --> 00:01:13,140
your data center a lot of organizations

25
00:01:10,979 --> 00:01:14,700
find that just running jobs on our

26
00:01:13,140 --> 00:01:16,740
servers they're seeing about sixty to

27
00:01:14,700 --> 00:01:18,900
sixty-five percent utilization of their

28
00:01:16,740 --> 00:01:21,259
servers like the hardware that they have

29
00:01:18,900 --> 00:01:23,400
in their data centers meaning they have

30
00:01:21,259 --> 00:01:25,110
millions tens of millions lots of

31
00:01:23,400 --> 00:01:27,299
dollars worth of hardware that's just

32
00:01:25,110 --> 00:01:28,829
sitting in in their rooms that they're

33
00:01:27,299 --> 00:01:33,600
paying for that's not really giving any

34
00:01:28,829 --> 00:01:36,240
use for them so<font color="#CCCCCC"> DCOs was born to kind of</font>

35
00:01:33,600 --> 00:01:38,759
solve some of this problem the

36
00:01:36,240 --> 00:01:41,669
philosophy behind<font color="#CCCCCC"> dcos is yew tree it</font>

37
00:01:38,759 --> 00:01:45,780
you treat all the<font color="#E5E5E5"> resources hardware in</font>

38
00:01:41,670 --> 00:01:47,820
your data center as a single box you

39
00:01:45,780 --> 00:01:50,070
bubble all those resources up into one

40
00:01:47,820 --> 00:01:51,360
place where you can then send jobs to

41
00:01:50,070 --> 00:01:52,559
different places to make sure that

42
00:01:51,360 --> 00:01:58,409
<font color="#E5E5E5">you're running</font><font color="#CCCCCC"> your hardware as</font>

43
00:01:52,560 --> 00:02:00,000
efficiently as you<font color="#E5E5E5"> can yeah so at the</font>

44
00:01:58,409 --> 00:02:01,590
bottom of this cluster<font color="#CCCCCC"> you need</font>

45
00:02:00,000 --> 00:02:04,009
something that can run it like an

46
00:02:01,590 --> 00:02:07,619
operating system which is a kernel

47
00:02:04,009 --> 00:02:10,919
<font color="#E5E5E5">mezzos is kind of the colonel layer of</font>

48
00:02:07,619 --> 00:02:13,350
this D cos there are two pieces<font color="#CCCCCC"> of maize</font>

49
00:02:10,919 --> 00:02:15,869
<font color="#CCCCCC">oh so there's the cluster which is</font>

50
00:02:13,350 --> 00:02:18,420
set of masters that<font color="#E5E5E5"> receives offers from</font>

51
00:02:15,870 --> 00:02:22,260
agents or slaves the agents are slaves

52
00:02:18,420 --> 00:02:25,500
you install on hardware or<font color="#E5E5E5"> VMs or cloud</font>

53
00:02:22,260 --> 00:02:28,859
instances that make resource offers up

54
00:02:25,500 --> 00:02:31,800
to mezzos so that's<font color="#E5E5E5"> this bottom tier on</font>

55
00:02:28,860 --> 00:02:35,340
top of mezzos you have a set of

56
00:02:31,800 --> 00:02:37,560
frameworks those frameworks do job

57
00:02:35,340 --> 00:02:39,960
definitions so if you have like a set of

58
00:02:37,560 --> 00:02:41,550
Apache servers do you want<font color="#CCCCCC"> running if</font>

59
00:02:39,960 --> 00:02:44,310
<font color="#CCCCCC">you have batch jobs if you have</font>

60
00:02:41,550 --> 00:02:46,520
scheduled jobs there's different

61
00:02:44,310 --> 00:02:50,250
frameworks that will handle those

62
00:02:46,520 --> 00:02:53,000
different types<font color="#E5E5E5"> of jobs on top of</font><font color="#CCCCCC"> that</font>

63
00:02:50,250 --> 00:02:55,860
is where you deploy your applications

64
00:02:53,000 --> 00:02:57,930
usually these are<font color="#E5E5E5"> multi-tenant clusters</font>

65
00:02:55,860 --> 00:03:01,950
they can be<font color="#E5E5E5"> multi-tenant clusters</font>

66
00:02:57,930 --> 00:03:03,500
meaning you'll have jobs<font color="#E5E5E5"> different types</font>

67
00:03:01,950 --> 00:03:05,489
<font color="#E5E5E5">of jobs running for different teams</font>

68
00:03:03,500 --> 00:03:06,990
probably not different companies but

69
00:03:05,490 --> 00:03:09,810
more than likely different types of jobs

70
00:03:06,990 --> 00:03:12,990
running on here these<font color="#CCCCCC"> are</font><font color="#E5E5E5"> usually</font>

71
00:03:09,810 --> 00:03:14,430
packaged up in containers handful<font color="#E5E5E5"> of</font>

72
00:03:12,990 --> 00:03:16,950
different container using technologies

73
00:03:14,430 --> 00:03:19,380
<font color="#E5E5E5">but typically docker so you write your</font>

74
00:03:16,950 --> 00:03:21,390
job in docker you orchestrate it using a

75
00:03:19,380 --> 00:03:23,070
framework and then mezzos takes those

76
00:03:21,390 --> 00:03:27,899
job definitions and spreads them across

77
00:03:23,070 --> 00:03:29,370
<font color="#E5E5E5">finds places for them</font><font color="#CCCCCC"> to run a little</font>

78
00:03:27,900 --> 00:03:31,620
bit more<font color="#CCCCCC"> about the communications</font>

79
00:03:29,370 --> 00:03:34,230
between these the agents are running on

80
00:03:31,620 --> 00:03:36,330
this<font color="#CCCCCC"> Hardware at the bottom or VMS or</font>

81
00:03:34,230 --> 00:03:38,250
whatever they communicate<font color="#CCCCCC"> with mezzos</font>

82
00:03:36,330 --> 00:03:41,220
using a configuration share called

83
00:03:38,250 --> 00:03:43,590
zookeeper easiest way to<font color="#E5E5E5"> think about</font>

84
00:03:41,220 --> 00:03:46,859
zookeeper is basically a network a

85
00:03:43,590 --> 00:03:49,170
network accessible JSON object so<font color="#E5E5E5"> key</font>

86
00:03:46,860 --> 00:03:53,250
<font color="#E5E5E5">store</font><font color="#CCCCCC"> I store</font><font color="#E5E5E5"> this value I retrieve this</font>

87
00:03:49,170 --> 00:03:55,140
value somewhere else so the cluster the

88
00:03:53,250 --> 00:03:57,990
slaves will say I have hardware I'm

89
00:03:55,140 --> 00:03:59,910
offering it it'll put a red an entry<font color="#CCCCCC"> in</font>

90
00:03:57,990 --> 00:04:02,130
this key store the mezzos<font color="#E5E5E5"> will pick that</font>

91
00:03:59,910 --> 00:04:04,109
<font color="#CCCCCC">up match your job with it</font><font color="#E5E5E5"> put it back in</font>

92
00:04:02,130 --> 00:04:07,650
and the slave will pick<font color="#CCCCCC"> it back up</font><font color="#E5E5E5"> and</font>

93
00:04:04,110 --> 00:04:09,650
start executing that<font color="#E5E5E5"> job between the</font>

94
00:04:07,650 --> 00:04:13,380
kernel and the frameworks which is that

95
00:04:09,650 --> 00:04:14,910
kind of<font color="#E5E5E5"> top purpley one those are</font>

96
00:04:13,380 --> 00:04:17,250
typically done either via zookeeper

97
00:04:14,910 --> 00:04:19,909
again or<font color="#CCCCCC"> rest api's that</font><font color="#E5E5E5"> are built into</font>

98
00:04:17,250 --> 00:04:19,910
mezzos

99
00:04:21,550 --> 00:04:27,230
some of the<font color="#E5E5E5"> common frameworks of a</font>

100
00:04:24,260 --> 00:04:28,820
marathon is probably the<font color="#CCCCCC"> most common one</font>

101
00:04:27,230 --> 00:04:30,800
pretty much any deployment of mezzos

102
00:04:28,820 --> 00:04:33,260
that you'll see we'll also have marathon

103
00:04:30,800 --> 00:04:35,270
living next to it marathons for long

104
00:04:33,260 --> 00:04:37,580
running jobs it's also used for scaling

105
00:04:35,270 --> 00:04:39,530
jobs so if<font color="#CCCCCC"> I have</font><font color="#E5E5E5"> one docker container i</font>

106
00:04:37,580 --> 00:04:41,539
created job definition put<font color="#E5E5E5"> that in</font>

107
00:04:39,530 --> 00:04:43,400
Marathon and<font color="#E5E5E5"> then you can say oh I want</font>

108
00:04:41,540 --> 00:04:46,870
<font color="#E5E5E5">ten of these running or 50 of these</font>

109
00:04:43,400 --> 00:04:49,400
running you<font color="#E5E5E5"> can drive</font><font color="#CCCCCC"> it using the</font><font color="#E5E5E5"> API</font>

110
00:04:46,870 --> 00:04:51,860
so collect other metrics from the boxes

111
00:04:49,400 --> 00:04:55,159
say as performance goes hits eighty

112
00:04:51,860 --> 00:04:58,870
<font color="#E5E5E5">percent utilization increase more</font>

113
00:04:55,160 --> 00:05:02,930
instances in this pool Chronos is

114
00:04:58,870 --> 00:05:04,340
basically at kron4<font color="#CCCCCC"> dcos so you can give</font>

115
00:05:02,930 --> 00:05:06,260
<font color="#E5E5E5">it a job definition which can be</font>

116
00:05:04,340 --> 00:05:09,140
something as simple<font color="#E5E5E5"> as a like just a</font>

117
00:05:06,260 --> 00:05:11,210
normal bash command give it a time frame

118
00:05:09,140 --> 00:05:13,430
and a frequency to execute on and it'll

119
00:05:11,210 --> 00:05:14,750
just whatever that time frame hits<font color="#CCCCCC"> ping</font>

120
00:05:13,430 --> 00:05:17,620
it so you can see a lot of the

121
00:05:14,750 --> 00:05:21,020
correlations between<font color="#CCCCCC"> dcos and these</font>

122
00:05:17,620 --> 00:05:27,860
services and frameworks as you've seen a

123
00:05:21,020 --> 00:05:31,430
normal operating system yeah so typical

124
00:05:27,860 --> 00:05:36,050
use I have my docker container I create

125
00:05:31,430 --> 00:05:38,419
a job in Marathon hear it mezzos finds a

126
00:05:36,050 --> 00:05:41,570
host to run it on sends the command to

127
00:05:38,419 --> 00:05:43,789
the agent the agent pulls down the

128
00:05:41,570 --> 00:05:46,280
docker container runs it with whatever

129
00:05:43,789 --> 00:05:49,219
environment variables or arguments need

130
00:05:46,280 --> 00:05:52,309
to be passed into it and yeah that's

131
00:05:49,220 --> 00:06:00,669
that's kind of the typical<font color="#E5E5E5"> use yeah I'll</font>

132
00:05:52,310 --> 00:06:00,669
handle oh no no quick demo

133
00:06:01,020 --> 00:06:08,710
so this<font color="#CCCCCC"> is what D cos</font><font color="#E5E5E5"> looks like as a UI</font>

134
00:06:06,880 --> 00:06:10,030
so it shows what your utilization is

135
00:06:08,710 --> 00:06:11,320
across the host obviously we're<font color="#E5E5E5"> not</font>

136
00:06:10,030 --> 00:06:14,859
using our stuff<font color="#E5E5E5"> very efficiently right</font>

137
00:06:11,320 --> 00:06:18,070
now you can see what services have been

138
00:06:14,860 --> 00:06:20,110
spun up in D cos Chronos<font color="#E5E5E5"> and marathon</font>

139
00:06:18,070 --> 00:06:22,270
<font color="#CCCCCC">are frameworks</font><font color="#E5E5E5"> but they can also be run</font>

140
00:06:20,110 --> 00:06:24,490
inside of mezzo so here there's a little

141
00:06:22,270 --> 00:06:26,859
<font color="#E5E5E5">bit of inception going on but Chronos</font>

142
00:06:24,490 --> 00:06:28,240
and marathon services running inside of

143
00:06:26,860 --> 00:06:31,090
mezzos as well as communicating with

144
00:06:28,240 --> 00:06:38,490
mezzos if we want wanted<font color="#E5E5E5"> to set up a</font>

145
00:06:31,090 --> 00:06:38,489
schedule job we would jump into Chronos

146
00:06:40,980 --> 00:06:48,840
come on Chronos<font color="#CCCCCC"> and you</font><font color="#E5E5E5"> could create a</font>

147
00:06:43,780 --> 00:06:48,840
job here it's been a little<font color="#E5E5E5"> sluggish</font>

148
00:06:50,040 --> 00:06:53,910
come on<font color="#E5E5E5"> Chronos</font>

149
00:06:55,120 --> 00:07:03,200
if we didn't do sufficient sacrifices to

150
00:06:57,980 --> 00:07:05,210
our demo<font color="#CCCCCC"> gods effectively here to pop up</font>

151
00:07:03,200 --> 00:07:06,770
you give it a command<font color="#E5E5E5"> you give it a time</font>

152
00:07:05,210 --> 00:07:09,080
<font color="#E5E5E5">frame in it whenever that time frame</font>

153
00:07:06,770 --> 00:07:11,590
hits that will trigger the job via

154
00:07:09,080 --> 00:07:11,590
marathon

155
00:07:19,400 --> 00:07:23,258
order for having VPN problems

156
00:07:24,220 --> 00:07:27,580
<font color="#CCCCCC">now we're dead</font>

157
00:07:34,129 --> 00:07:37,119
<font color="#E5E5E5">alright</font>

158
00:07:38,910 --> 00:07:45,670
yeah marathon you'd be able<font color="#E5E5E5"> to see the</font>

159
00:07:43,600 --> 00:07:47,530
jobs that are already to find how many

160
00:07:45,670 --> 00:07:49,450
instances they're running and you also

161
00:07:47,530 --> 00:07:52,929
be<font color="#CCCCCC"> given</font><font color="#E5E5E5"> the option to scale it up or</font>

162
00:07:49,450 --> 00:07:54,909
down so<font color="#CCCCCC"> it's is really well built for</font>

163
00:07:52,930 --> 00:07:55,990
scaling and high availability of your

164
00:07:54,910 --> 00:07:58,200
application running in here obviously

165
00:07:55,990 --> 00:08:02,290
<font color="#CCCCCC">this is a pretty</font><font color="#E5E5E5"> small cluster and</font>

166
00:07:58,200 --> 00:08:08,590
conference Wi-Fi isn't awesome<font color="#E5E5E5"> but yeah</font>

167
00:08:02,290 --> 00:08:11,710
we'll move<font color="#E5E5E5"> forward I don't</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> take it</font>

168
00:08:08,590 --> 00:08:18,010
back over<font color="#CCCCCC"> okay so it's good</font>

169
00:08:11,710 --> 00:08:25,659
thanks God<font color="#CCCCCC"> okay so how many</font><font color="#E5E5E5"> of you seen</font>

170
00:08:18,010 --> 00:08:27,280
Lord of the Rings yeah okay so<font color="#E5E5E5"> I know we</font>

171
00:08:25,660 --> 00:08:29,380
<font color="#E5E5E5">just went over a lot of stuff right and</font>

172
00:08:27,280 --> 00:08:32,709
for the most part people haven't heard

173
00:08:29,380 --> 00:08:36,480
of these technologies<font color="#E5E5E5"> before so these</font>

174
00:08:32,710 --> 00:08:39,550
technologies are being<font color="#E5E5E5"> moved towards</font>

175
00:08:36,480 --> 00:08:41,409
high utilization inside of companies

176
00:08:39,549 --> 00:08:44,380
that<font color="#CCCCCC"> guys are probably acquainted with</font>

177
00:08:41,409 --> 00:08:46,060
like for example if you go to<font color="#E5E5E5"> the maze</font>

178
00:08:44,380 --> 00:08:47,650
oh's website you'll see a list of over

179
00:08:46,060 --> 00:08:50,530
100 companies some of those<font color="#E5E5E5"> are like</font>

180
00:08:47,650 --> 00:08:52,959
Airbnb and things like that that are

181
00:08:50,530 --> 00:08:56,170
using the cluster to automatically speed

182
00:08:52,960 --> 00:09:02,980
up processing and and do you kind<font color="#E5E5E5"> of cpu</font>

183
00:08:56,170 --> 00:09:04,150
intensive tasks at scale so so<font color="#E5E5E5"> alright</font>

184
00:09:02,980 --> 00:09:06,880
so now we're going<font color="#E5E5E5"> to talk about initial</font>

185
00:09:04,150 --> 00:09:09,069
access inside the cluster so this talk

186
00:09:06,880 --> 00:09:10,980
is more a post exploitation talk and

187
00:09:09,070 --> 00:09:13,330
we're going to<font color="#E5E5E5"> show you some brand new</font>

188
00:09:10,980 --> 00:09:15,460
empire modules that are going<font color="#E5E5E5"> to enable</font>

189
00:09:13,330 --> 00:09:17,080
you to talk<font color="#CCCCCC"> to these various building</font>

190
00:09:15,460 --> 00:09:20,110
blocks or services<font color="#CCCCCC"> that are inside of</font>

191
00:09:17,080 --> 00:09:21,250
<font color="#E5E5E5">the DCOs cluster so that's that's kind</font>

192
00:09:20,110 --> 00:09:22,750
of the crutch of what we're getting<font color="#E5E5E5"> too</font>

193
00:09:21,250 --> 00:09:26,490
but before<font color="#CCCCCC"> we</font><font color="#E5E5E5"> do that we got</font><font color="#CCCCCC"> to get</font>

194
00:09:22,750 --> 00:09:29,560
initial access into the cluster right so

195
00:09:26,490 --> 00:09:33,850
how many<font color="#E5E5E5"> of you have ever hacked a</font>

196
00:09:29,560 --> 00:09:39,760
website before raising hands yeah so you

197
00:09:33,850 --> 00:09:43,960
know there you go right so go over here

198
00:09:39,760 --> 00:09:48,550
on the VPN<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> great anco over here so</font>

199
00:09:43,960 --> 00:09:52,060
i have<font color="#CCCCCC"> this at this container it's</font>

200
00:09:48,550 --> 00:09:53,920
<font color="#E5E5E5">running inside of our</font><font color="#CCCCCC"> dcos cluster this</font>

201
00:09:52,060 --> 00:09:57,670
is publicly accessible in the internet

202
00:09:53,920 --> 00:09:59,680
so it just has a vulnerable a vulnerable

203
00:09:57,670 --> 00:10:03,910
PHP application so this isn't anything

204
00:09:59,680 --> 00:10:07,270
crazy but if you see here<font color="#CCCCCC"> I</font><font color="#E5E5E5"> just wrote</font>

205
00:10:03,910 --> 00:10:12,819
really quickly<font color="#E5E5E5"> this eval at PHP and if</font>

206
00:10:07,270 --> 00:10:14,650
you press pass eval and it'll show<font color="#CCCCCC"> you</font>

207
00:10:12,820 --> 00:10:16,840
this so you just pass you all parameter

208
00:10:14,650 --> 00:10:19,030
and that parameter just gets eval right

209
00:10:16,840 --> 00:10:20,920
so you get system on it so you know

210
00:10:19,030 --> 00:10:22,780
that's<font color="#E5E5E5"> really trivial that's not</font>

211
00:10:20,920 --> 00:10:24,969
anything you<font color="#E5E5E5"> know mind-blowing because</font>

212
00:10:22,780 --> 00:10:25,699
what we're trying to do is show what

213
00:10:24,970 --> 00:10:27,259
<font color="#CCCCCC">happens once you</font>

214
00:10:25,699 --> 00:10:29,479
get remote code execution on inside a

215
00:10:27,259 --> 00:10:35,269
web app inside of that cluster container

216
00:10:29,480 --> 00:10:39,199
so coming over to here so I'm going<font color="#E5E5E5"> to</font>

217
00:10:35,269 --> 00:10:41,499
ask this H out to my box and pray to

218
00:10:39,199 --> 00:10:46,579
demo God's<font color="#E5E5E5"> that this is going to work</font>

219
00:10:41,499 --> 00:10:49,160
all right i'm gonna drop from VPN see if

220
00:10:46,579 --> 00:10:51,290
it works then<font color="#CCCCCC"> ok we're on the box sweet</font>

221
00:10:49,160 --> 00:10:54,290
is that<font color="#E5E5E5"> text clear big enough for you</font>

222
00:10:51,290 --> 00:10:56,719
guys or you want a bigger bigger<font color="#CCCCCC"> all</font>

223
00:10:54,290 --> 00:10:59,988
<font color="#E5E5E5">right bigger it is</font><font color="#CCCCCC"> i give the people</font>

224
00:10:56,720 --> 00:11:02,569
what they want alright is that<font color="#E5E5E5"> good</font><font color="#CCCCCC"> ok</font>

225
00:10:59,989 --> 00:11:05,209
<font color="#CCCCCC">alright sweet ok we're up on</font><font color="#E5E5E5"> our box</font>

226
00:11:02,569 --> 00:11:08,149
we're a hacker right we've used this

227
00:11:05,209 --> 00:11:10,099
eval shell to drop down a weave<font color="#E5E5E5"> lee</font>

228
00:11:08,149 --> 00:11:12,529
shell on<font color="#CCCCCC"> the box a weave Lee's like a</font>

229
00:11:10,100 --> 00:11:15,410
c99 a public shell that I frequently use

230
00:11:12,529 --> 00:11:16,609
when I'm<font color="#CCCCCC"> pentesting websites how many</font><font color="#E5E5E5"> of</font>

231
00:11:15,410 --> 00:11:19,399
you raise your hands have heard of

232
00:11:16,609 --> 00:11:21,649
Weasley before<font color="#CCCCCC"> ok quite a</font><font color="#E5E5E5"> bit cool so</font>

233
00:11:19,399 --> 00:11:23,809
<font color="#E5E5E5">it's kind of modular like</font><font color="#CCCCCC"> metasploit you</font>

234
00:11:21,649 --> 00:11:26,689
can write additional code and<font color="#E5E5E5"> it will</font>

235
00:11:23,809 --> 00:11:28,309
actually eval it on using a PHP email on

236
00:11:26,689 --> 00:11:30,679
the<font color="#E5E5E5"> server side and kind of keep it more</font>

237
00:11:28,309 --> 00:11:32,689
in memory<font color="#CCCCCC"> so if someone does on file</font>

238
00:11:30,679 --> 00:11:34,939
disk analysis they'll just find the

239
00:11:32,689 --> 00:11:36,949
highway randomized<font color="#CCCCCC"> Weasley loader on the</font>

240
00:11:34,939 --> 00:11:38,959
remote side so if you haven't<font color="#CCCCCC"> used we</font>

241
00:11:36,949 --> 00:11:40,160
flee before for web shells you should

242
00:11:38,959 --> 00:11:44,748
definitely check<font color="#E5E5E5"> it out although that's</font>

243
00:11:40,160 --> 00:11:46,249
not what this talks about so so I got a

244
00:11:44,749 --> 00:11:50,389
bunch of screen sessions running on this

245
00:11:46,249 --> 00:11:52,339
so I got one set up for we've<font color="#CCCCCC"> Lee we've</font>

246
00:11:50,389 --> 00:11:54,049
Lee you give it the name of the Python

247
00:11:52,339 --> 00:11:56,899
which is the operator side of<font color="#E5E5E5"> weave</font><font color="#CCCCCC"> Lee</font>

248
00:11:54,049 --> 00:11:58,720
then you give it the web address so you

249
00:11:56,899 --> 00:12:01,699
can see here this is<font color="#E5E5E5"> our website and</font>

250
00:11:58,720 --> 00:12:04,039
this is a you need a password interact

251
00:12:01,699 --> 00:12:05,599
with it so I'm<font color="#E5E5E5"> going to tear this off</font>

252
00:12:04,039 --> 00:12:08,809
the internet hopefully after the demo so

253
00:12:05,600 --> 00:12:11,179
you guys can't hack my box but please

254
00:12:08,809 --> 00:12:13,879
don't screw up my demos in the meantime

255
00:12:11,179 --> 00:12:16,009
<font color="#CCCCCC">alright so when you drop</font><font color="#E5E5E5"> into we've Lee</font>

256
00:12:13,879 --> 00:12:18,709
shell you just get this prompt if you

257
00:12:16,009 --> 00:12:20,269
execute a regular command you can

258
00:12:18,709 --> 00:12:22,429
execute commands just<font color="#E5E5E5"> like you were on</font>

259
00:12:20,269 --> 00:12:24,649
the box if you<font color="#E5E5E5"> want to execute a weave</font>

260
00:12:22,429 --> 00:12:27,439
<font color="#E5E5E5">Lee specific module you can just do</font>

261
00:12:24,649 --> 00:12:28,850
colon and then the module name or if

262
00:12:27,439 --> 00:12:31,279
you're confused call and help will list

263
00:12:28,850 --> 00:12:32,779
out all the modules so we're<font color="#E5E5E5"> not we're</font>

264
00:12:31,279 --> 00:12:34,989
just going to use this<font color="#E5E5E5"> to get</font>

265
00:12:32,779 --> 00:12:34,989
interactive

266
00:12:35,030 --> 00:12:40,310
sweet so we got<font color="#E5E5E5"> kind of a web shell on</font>

267
00:12:38,540 --> 00:12:45,530
the<font color="#E5E5E5"> remote target inside this container</font>

268
00:12:40,310 --> 00:12:47,300
inside the<font color="#E5E5E5"> DCOs cluster so we what we</font>

269
00:12:45,530 --> 00:12:50,000
really want<font color="#E5E5E5"> to do is we want to get a</font>

270
00:12:47,300 --> 00:12:52,819
full interactive remote access tool

271
00:12:50,000 --> 00:12:54,380
running in<font color="#E5E5E5"> that room outside right so we</font>

272
00:12:52,820 --> 00:12:57,470
can you know pivot through the network

273
00:12:54,380 --> 00:12:59,720
redirect things like that so how many of

274
00:12:57,470 --> 00:13:02,180
you raise the hands<font color="#E5E5E5"> you have you used</font>

275
00:12:59,720 --> 00:13:03,980
Empire before<font color="#E5E5E5"> any any version Empire</font>

276
00:13:02,180 --> 00:13:05,630
<font color="#CCCCCC">okay a couple okay what about</font>

277
00:13:03,980 --> 00:13:08,780
meterpreter you guys use meterpreter

278
00:13:05,630 --> 00:13:10,760
yeah a lot of you okay great<font color="#E5E5E5"> so it's</font>

279
00:13:08,780 --> 00:13:13,550
just a post exploitation rot allows you

280
00:13:10,760 --> 00:13:16,819
to interact with<font color="#CCCCCC"> the system so there's</font>

281
00:13:13,550 --> 00:13:18,740
two versions of empire there's the

282
00:13:16,820 --> 00:13:19,670
<font color="#CCCCCC">PowerShell version which is for windows</font>

283
00:13:18,740 --> 00:13:23,260
and then there's the Python version

284
00:13:19,670 --> 00:13:25,790
which<font color="#CCCCCC"> is more focused on</font><font color="#E5E5E5"> OSX recently</font>

285
00:13:23,260 --> 00:13:28,550
code changes in it have enabled you to

286
00:13:25,790 --> 00:13:34,480
also use<font color="#E5E5E5"> that on a set of us and BSD</font>

287
00:13:28,550 --> 00:13:34,479
targets back porting support for 5.25

288
00:13:39,940 --> 00:13:47,060
written in<font color="#CCCCCC"> Python so so we want to</font><font color="#E5E5E5"> get</font>

289
00:13:42,920 --> 00:13:51,050
<font color="#E5E5E5">Empire running on this box right so one</font>

290
00:13:47,060 --> 00:13:52,640
<font color="#E5E5E5">thing one catch people they're obsessed</font>

291
00:13:51,050 --> 00:13:56,180
with making their containers as small as

292
00:13:52,640 --> 00:13:57,439
<font color="#CCCCCC">possible right so they want the least</font>

293
00:13:56,180 --> 00:13:58,489
amount of dependencies in the container

294
00:13:57,440 --> 00:14:00,140
because they want them to be able<font color="#E5E5E5"> to</font>

295
00:13:58,490 --> 00:14:02,300
easily scale and they want them not to

296
00:14:00,140 --> 00:14:06,080
take up<font color="#E5E5E5"> as much resources so what does</font>

297
00:14:02,300 --> 00:14:08,240
<font color="#CCCCCC">that mean for us as an attacker we don't</font>

298
00:14:06,080 --> 00:14:09,860
have as many options for post

299
00:14:08,240 --> 00:14:13,100
exploitation as you might on a normal

300
00:14:09,860 --> 00:14:14,570
next<font color="#E5E5E5"> box a normal linux box so so let's</font>

301
00:14:13,100 --> 00:14:16,430
say we're all in this box we really want

302
00:14:14,570 --> 00:14:18,020
to<font color="#E5E5E5"> get</font><font color="#CCCCCC"> Empire up and running on it so</font>

303
00:14:16,430 --> 00:14:20,719
normally<font color="#CCCCCC"> if there python</font><font color="#E5E5E5"> to be there we</font>

304
00:14:18,020 --> 00:14:22,460
<font color="#E5E5E5">just be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to execute</font><font color="#CCCCCC"> Empire and be</font>

305
00:14:20,720 --> 00:14:24,590
good but if we do which<font color="#CCCCCC"> python on the</font>

306
00:14:22,460 --> 00:14:26,480
box it<font color="#CCCCCC"> doesn't return back</font><font color="#E5E5E5"> anything</font>

307
00:14:24,590 --> 00:14:29,750
because pythons not installed inside the

308
00:14:26,480 --> 00:14:32,630
container so I docker how many you guys

309
00:14:29,750 --> 00:14:36,110
use docker before his hands yeah some<font color="#E5E5E5"> of</font>

310
00:14:32,630 --> 00:14:38,870
you so<font color="#CCCCCC"> doctor has a repo that's public</font>

311
00:14:36,110 --> 00:14:41,480
so I pulled down<font color="#CCCCCC"> the top five containers</font>

312
00:14:38,870 --> 00:14:43,600
in the docker repo this<font color="#E5E5E5"> is the top five</font>

313
00:14:41,480 --> 00:14:47,930
containers that people have downloaded

314
00:14:43,600 --> 00:14:48,980
of the top five only<font color="#E5E5E5"> one had Python</font>

315
00:14:47,930 --> 00:14:52,279
installed on it by D

316
00:14:48,980 --> 00:14:54,529
so as a person who's trying<font color="#E5E5E5"> to hack into</font>

317
00:14:52,279 --> 00:14:59,000
<font color="#CCCCCC">dcos clusters this poses a problem for</font>

318
00:14:54,529 --> 00:15:00,709
<font color="#E5E5E5">me so i built a stager a new stager for</font>

319
00:14:59,000 --> 00:15:02,570
<font color="#E5E5E5">Empire and I'm going</font><font color="#CCCCCC"> to for</font><font color="#E5E5E5"> all the new</font>

320
00:15:00,709 --> 00:15:04,670
stuff<font color="#E5E5E5"> I'm going to push it in to do a</font>

321
00:15:02,570 --> 00:15:05,899
pull request tonight for it so you guys

322
00:15:04,670 --> 00:15:07,550
check back tonight you'll see it's there

323
00:15:05,899 --> 00:15:11,690
well at least in the pull request<font color="#CCCCCC"> Intel</font>

324
00:15:07,550 --> 00:15:15,019
well or whoever is upset so<font color="#E5E5E5"> alright cool</font>

325
00:15:11,690 --> 00:15:17,029
so we got oh yeah we got<font color="#E5E5E5"> actually got to</font>

326
00:15:15,019 --> 00:15:19,839
show<font color="#E5E5E5"> you guys that the solution so the</font>

327
00:15:17,029 --> 00:15:22,850
solution<font color="#CCCCCC"> that I come</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> with is that</font>

328
00:15:19,839 --> 00:15:26,810
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> not the perfect solution but it</font>

329
00:15:22,850 --> 00:15:29,630
works is I built a<font color="#E5E5E5"> Empire stager that</font>

330
00:15:26,810 --> 00:15:32,930
will actually build an elf binary using

331
00:15:29,630 --> 00:15:35,449
pi installer so it's going to generate

332
00:15:32,930 --> 00:15:36,949
your stage or inside an empire then it's

333
00:15:35,449 --> 00:15:38,719
going<font color="#E5E5E5"> to reach out to PI installer and</font>

334
00:15:36,949 --> 00:15:40,069
compile figure out what dependencies

335
00:15:38,720 --> 00:15:41,959
that needs and then compile that all

336
00:15:40,070 --> 00:15:44,029
back to an elf binary that you can<font color="#E5E5E5"> just</font>

337
00:15:41,959 --> 00:15:45,680
remote up you can remotely drop that elf

338
00:15:44,029 --> 00:15:48,500
binary in the target<font color="#E5E5E5"> those you don't</font>

339
00:15:45,680 --> 00:15:52,219
<font color="#CCCCCC">know elf binaries are like EXT s for</font>

340
00:15:48,500 --> 00:15:54,440
linux systems so<font color="#CCCCCC"> all right so here we go</font>

341
00:15:52,220 --> 00:15:58,040
let's go over to<font color="#CCCCCC"> empire interact all</font>

342
00:15:54,440 --> 00:15:59,510
right have I lost anybody maybe but if

343
00:15:58,040 --> 00:16:01,010
you<font color="#E5E5E5"> guys have questions feel free all</font>

344
00:15:59,510 --> 00:16:03,589
right<font color="#E5E5E5"> I get thumbs up so I'm just gonna</font>

345
00:16:01,010 --> 00:16:05,060
keep going so all right so i'm going<font color="#E5E5E5"> to</font>

346
00:16:03,589 --> 00:16:07,279
show you guys how to use<font color="#E5E5E5"> empire as part</font>

347
00:16:05,060 --> 00:16:10,250
of this<font color="#CCCCCC"> i'm sure well did a much better</font>

348
00:16:07,279 --> 00:16:13,160
job the guys before but uh but i'll show

349
00:16:10,250 --> 00:16:16,490
you my way so you just dot slash<font color="#E5E5E5"> empire</font>

350
00:16:13,160 --> 00:16:18,079
and then then you need to establish a

351
00:16:16,490 --> 00:16:21,440
listener first so there's a port that

352
00:16:18,079 --> 00:16:23,689
we're going to bind to on the attacker

353
00:16:21,440 --> 00:16:25,310
signed and this is what our Empire rat

354
00:16:23,690 --> 00:16:27,230
<font color="#E5E5E5">it's going to be kin back to and we're</font>

355
00:16:25,310 --> 00:16:31,910
going to use to interact with<font color="#E5E5E5"> the remote</font>

356
00:16:27,230 --> 00:16:33,889
container so right here if you<font color="#E5E5E5"> copy what</font>

357
00:16:31,910 --> 00:16:35,689
I'm doing in this presentation in a real

358
00:16:33,889 --> 00:16:37,550
pen toast you're gonna have<font color="#CCCCCC"> really bad</font>

359
00:16:35,690 --> 00:16:39,620
<font color="#CCCCCC">OPSEC and probably get caught so you</font>

360
00:16:37,550 --> 00:16:42,649
might want to up the game a little<font color="#CCCCCC"> bit</font>

361
00:16:39,620 --> 00:16:43,880
but I've just established the default

362
00:16:42,649 --> 00:16:47,420
which is it's<font color="#E5E5E5"> going to listen on port</font>

363
00:16:43,880 --> 00:16:49,310
8080 so when we execute the Empire rat

364
00:16:47,420 --> 00:16:50,839
it's going<font color="#E5E5E5"> to connect back to this</font>

365
00:16:49,310 --> 00:16:52,130
server on<font color="#CCCCCC"> a DAT and then we're going to</font>

366
00:16:50,839 --> 00:16:53,870
<font color="#E5E5E5">be able to issue commands and all that</font>

367
00:16:52,130 --> 00:16:57,250
and I<font color="#CCCCCC"> just name the name of the listener</font>

368
00:16:53,870 --> 00:17:01,439
test because trying to get stuff done<font color="#CCCCCC"> so</font>

369
00:16:57,250 --> 00:17:06,490
then we do you stager

370
00:17:01,439 --> 00:17:09,730
and then we just<font color="#E5E5E5"> do PI installer so this</font>

371
00:17:06,490 --> 00:17:10,959
<font color="#CCCCCC">is a new thing right so but the other</font>

372
00:17:09,730 --> 00:17:14,470
state it works exactly like the other

373
00:17:10,959 --> 00:17:15,699
stagers you just do you use stage you're

374
00:17:14,470 --> 00:17:17,649
planning<font color="#CCCCCC"> cellar it shows you all the</font>

375
00:17:15,699 --> 00:17:18,879
options you need to set<font color="#CCCCCC"> the only one we</font>

376
00:17:17,648 --> 00:17:20,349
really care about right now is we need

377
00:17:18,878 --> 00:17:21,878
<font color="#E5E5E5">to tell which listener to call back to</font>

378
00:17:20,349 --> 00:17:25,299
we only have one<font color="#E5E5E5"> listener the test one</font>

379
00:17:21,878 --> 00:17:31,299
and that's bound to port 8080<font color="#CCCCCC"> TCP so set</font>

380
00:17:25,299 --> 00:17:36,249
listener<font color="#CCCCCC"> to 88 or</font><font color="#E5E5E5"> to test right and then</font>

381
00:17:31,299 --> 00:17:38,320
do info and then the<font color="#CCCCCC"> only</font><font color="#E5E5E5"> one other</font>

382
00:17:36,249 --> 00:17:40,029
thing you want to<font color="#E5E5E5"> note here is it's</font>

383
00:17:38,320 --> 00:17:42,279
going to build the elf binary and chuck

384
00:17:40,029 --> 00:17:44,619
it in temp and call it<font color="#E5E5E5"> Empire right not</font>

385
00:17:42,279 --> 00:17:47,230
not too stealthy but nonetheless it's

386
00:17:44,619 --> 00:17:49,539
going to work right so<font color="#CCCCCC"> okay here you go</font>

387
00:17:47,230 --> 00:17:51,610
so what it does it's going to reach out

388
00:17:49,539 --> 00:17:53,220
scan through a couple Python files

389
00:17:51,610 --> 00:17:55,360
figure out what dependencies you need

390
00:17:53,220 --> 00:17:57,220
<font color="#CCCCCC">klab those back together into this</font>

391
00:17:55,360 --> 00:17:58,899
<font color="#CCCCCC">Python file right here and then reach</font>

392
00:17:57,220 --> 00:18:01,240
out to PI installer and automatically

393
00:17:58,899 --> 00:18:03,610
use it to and stuff to create the health

394
00:18:01,240 --> 00:18:09,009
binary so elf binary is now made on this

395
00:18:03,610 --> 00:18:10,479
remote system so if we<font color="#E5E5E5"> go into / temp we</font>

396
00:18:09,009 --> 00:18:13,690
can see there's now a binary call elf

397
00:18:10,480 --> 00:18:16,869
and if<font color="#E5E5E5"> we file it we can see it is in</font>

398
00:18:13,690 --> 00:18:18,580
fact an elf sixty four-bit binary if you

399
00:18:16,869 --> 00:18:19,928
want to do something crazy you're like I

400
00:18:18,580 --> 00:18:21,549
really like where you're<font color="#CCCCCC"> going but I</font>

401
00:18:19,929 --> 00:18:23,440
want<font color="#E5E5E5"> to go put some crazy code in and</font>

402
00:18:21,549 --> 00:18:25,869
then how they compile it just for

403
00:18:23,440 --> 00:18:27,759
convenience<font color="#E5E5E5"> I left the source file here</font>

404
00:18:25,869 --> 00:18:29,499
and i<font color="#E5E5E5"> left the spec file which</font><font color="#CCCCCC"> is what</font>

405
00:18:27,759 --> 00:18:31,299
<font color="#E5E5E5">PI installer uses to compile and make</font>

406
00:18:29,499 --> 00:18:33,039
the elf so you can do<font color="#CCCCCC"> some easy</font>

407
00:18:31,299 --> 00:18:36,629
customization they're kind of use this

408
00:18:33,039 --> 00:18:38,679
to<font color="#CCCCCC"> jump start okay</font><font color="#E5E5E5"> and then just because</font>

409
00:18:36,629 --> 00:18:43,869
I'm just<font color="#E5E5E5"> trying to demo things to you</font>

410
00:18:38,679 --> 00:18:45,460
guys today<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> just we're</font><font color="#CCCCCC"> just going</font><font color="#E5E5E5"> to</font>

411
00:18:43,869 --> 00:18:49,330
move these binaries into target by

412
00:18:45,460 --> 00:18:51,490
basically<font color="#E5E5E5"> doing a PHP version of WK</font>

413
00:18:49,330 --> 00:18:54,999
right so<font color="#E5E5E5"> I started up just like a kind</font>

414
00:18:51,490 --> 00:18:57,519
<font color="#E5E5E5">of a hawk web server on this block and</font>

415
00:18:54,999 --> 00:18:59,559
you<font color="#CCCCCC"> see the ad hoc web server is running</font>

416
00:18:57,519 --> 00:19:00,999
here but just in<font color="#CCCCCC"> case you</font><font color="#E5E5E5"> don't know</font>

417
00:18:59,559 --> 00:19:02,619
this trick this is a really<font color="#E5E5E5"> cool trick</font>

418
00:19:00,999 --> 00:19:05,590
if you're on Python you need a really

419
00:19:02,619 --> 00:19:07,959
<font color="#E5E5E5">quick HTTP webserver just do you pike on</font>

420
00:19:05,590 --> 00:19:10,449
tech em for module and<font color="#CCCCCC"> then use simple</font>

421
00:19:07,960 --> 00:19:12,399
HTTP server and actually establish a web

422
00:19:10,450 --> 00:19:13,660
server on the box and it will dish out

423
00:19:12,399 --> 00:19:15,550
any files that are in that direct

424
00:19:13,660 --> 00:19:19,450
so here we're<font color="#E5E5E5"> going to dish out files</font>

425
00:19:15,550 --> 00:19:26,610
that are in / 10 so it's just kind of

426
00:19:19,450 --> 00:19:35,980
convenient okay yeah let's push it back

427
00:19:26,610 --> 00:19:39,159
okay here you go so that's just a trick

428
00:19:35,980 --> 00:19:40,630
<font color="#CCCCCC">to because I'm do not like setting up</font>

429
00:19:39,160 --> 00:19:45,340
apache web servers just to pull it on a

430
00:19:40,630 --> 00:19:49,450
file right so Oh shouldn't<font color="#E5E5E5"> quit that a</font>

431
00:19:45,340 --> 00:19:51,270
wrong thing all right we're good all

432
00:19:49,450 --> 00:19:53,080
right I just<font color="#CCCCCC"> said a lot</font><font color="#E5E5E5"> of words so</font>

433
00:19:51,270 --> 00:20:00,160
hopefully you guys are still tracking

434
00:19:53,080 --> 00:20:01,870
with me here all right I swear once we

435
00:20:00,160 --> 00:20:05,110
get in the network it's going<font color="#E5E5E5"> to be like</font>

436
00:20:01,870 --> 00:20:07,780
butter<font color="#E5E5E5"> okay so it's just way for it I</font>

437
00:20:05,110 --> 00:20:10,209
know it's a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> setup for it</font><font color="#CCCCCC"> alright</font>

438
00:20:07,780 --> 00:20:12,820
we're back<font color="#CCCCCC"> in weave Lee now so we got a</font>

439
00:20:10,210 --> 00:20:16,420
double you get the binary we've Lee

440
00:20:12,820 --> 00:20:21,820
makes this super easy it actually just

441
00:20:16,420 --> 00:20:24,640
has a function and I'm going to<font color="#E5E5E5"> find</font><font color="#CCCCCC"> it</font>

442
00:20:21,820 --> 00:20:27,520
oh let's make sure it's<font color="#E5E5E5"> not there from a</font>

443
00:20:24,640 --> 00:20:30,310
previous demo nope we're good now things

444
00:20:27,520 --> 00:20:32,740
in / temp on the remote target now we're

445
00:20:30,310 --> 00:20:34,870
going to use this module we've<font color="#E5E5E5"> Lee</font>

446
00:20:32,740 --> 00:20:38,620
module<font color="#CCCCCC"> 2 depth to basically w get the</font>

447
00:20:34,870 --> 00:20:40,989
file using PHP yeah we flee makes our

448
00:20:38,620 --> 00:20:42,520
life easy so we just wait a second

449
00:20:40,990 --> 00:20:44,650
because<font color="#E5E5E5"> it's downloading a file files</font>

450
00:20:42,520 --> 00:20:46,600
now there we can even command up and we

451
00:20:44,650 --> 00:20:48,760
flee and now we can see the files on the

452
00:20:46,600 --> 00:20:52,330
remote target so we just need<font color="#E5E5E5"> to make</font>

453
00:20:48,760 --> 00:20:53,530
sure we schmatte it and then to make

454
00:20:52,330 --> 00:20:58,750
sure<font color="#E5E5E5"> it's executable in the remote</font>

455
00:20:53,530 --> 00:21:03,700
target this is a linux box that we're

456
00:20:58,750 --> 00:21:06,610
<font color="#CCCCCC">just</font><font color="#E5E5E5"> going to kick it off using</font><font color="#CCCCCC"> a using</font>

457
00:21:03,700 --> 00:21:08,050
just a straight command so this<font color="#E5E5E5"> is the</font>

458
00:21:06,610 --> 00:21:10,060
<font color="#CCCCCC">weave lee the PHP shell is going to kick</font>

459
00:21:08,050 --> 00:21:13,000
off<font color="#CCCCCC"> Empire the binary pulled down using</font>

460
00:21:10,060 --> 00:21:18,129
we flee from the simple<font color="#CCCCCC"> Python server</font>

461
00:21:13,000 --> 00:21:20,110
okay all right here we<font color="#CCCCCC"> go all right now</font>

462
00:21:18,130 --> 00:21:24,040
in an ideal scenario if we<font color="#E5E5E5"> come back</font>

463
00:21:20,110 --> 00:21:25,780
around to<font color="#CCCCCC"> empire will now see the</font>

464
00:21:24,040 --> 00:21:26,770
glorious text that we've all been

465
00:21:25,780 --> 00:21:30,430
waiting for which

466
00:21:26,770 --> 00:21:33,850
his initial agent from this IP is now

467
00:21:30,430 --> 00:21:36,010
active right this means we got we got<font color="#E5E5E5"> a</font>

468
00:21:33,850 --> 00:21:37,959
new agent inside<font color="#CCCCCC"> the target Network so</font>

469
00:21:36,010 --> 00:21:40,780
if you tell you agents we can see all

470
00:21:37,960 --> 00:21:43,570
the agents there's only one here and

471
00:21:40,780 --> 00:21:48,940
then we just<font color="#CCCCCC"> type interact and then the</font>

472
00:21:43,570 --> 00:21:50,590
name<font color="#E5E5E5"> of the agent and then we can one</font>

473
00:21:48,940 --> 00:21:53,260
thing<font color="#CCCCCC"> that is really helpful inside an</font>

474
00:21:50,590 --> 00:21:54,879
empire is the rename so we just rename

475
00:21:53,260 --> 00:21:58,540
that to ever we want<font color="#E5E5E5"> so I'm just going</font>

476
00:21:54,880 --> 00:22:01,180
to rename this to like a web app or

477
00:21:58,540 --> 00:22:02,800
<font color="#CCCCCC">something so we can we can remember</font>

478
00:22:01,180 --> 00:22:03,820
<font color="#E5E5E5">where we are in the</font><font color="#CCCCCC"> network's because</font>

479
00:22:02,800 --> 00:22:05,290
we're going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> get it we're not going to</font>

480
00:22:03,820 --> 00:22:08,129
stop<font color="#CCCCCC"> at one agent right we're going</font><font color="#E5E5E5"> to</font>

481
00:22:05,290 --> 00:22:14,170
<font color="#E5E5E5">go through</font><font color="#CCCCCC"> and tear this network up so</font>

482
00:22:08,130 --> 00:22:15,760
all right and I got to get<font color="#CCCCCC"> back to the</font>

483
00:22:14,170 --> 00:22:22,390
slides because we're missing out on<font color="#E5E5E5"> some</font>

484
00:22:15,760 --> 00:22:25,660
killer memes right so so is the top five

485
00:22:22,390 --> 00:22:28,150
that I analyzed only one head<font color="#E5E5E5"> Python and</font>

486
00:22:25,660 --> 00:22:31,270
that's the registry one the other four

487
00:22:28,150 --> 00:22:32,920
top ones did not have Python so if we

488
00:22:31,270 --> 00:22:36,850
<font color="#CCCCCC">use the PI installer trick we</font><font color="#E5E5E5"> can get</font>

489
00:22:32,920 --> 00:22:41,710
around<font color="#E5E5E5"> that yeah pack it up boys we're</font>

490
00:22:36,850 --> 00:22:45,399
going on a pony trip so so this is

491
00:22:41,710 --> 00:22:48,790
<font color="#CCCCCC">pretty much us now we are that hacker</font>

492
00:22:45,400 --> 00:22:52,360
dude that's Scott master hacker and then

493
00:22:48,790 --> 00:22:53,950
throwing lightning bolts we get our that

494
00:22:52,360 --> 00:22:55,899
little icon with<font color="#CCCCCC"> the Python that's like</font>

495
00:22:53,950 --> 00:22:57,040
the little<font color="#CCCCCC"> iPod Empire logo I don't know</font>

496
00:22:55,900 --> 00:22:58,630
maybe you<font color="#E5E5E5"> guys got some of the stickers</font>

497
00:22:57,040 --> 00:23:01,510
from before so we got that running

498
00:22:58,630 --> 00:23:04,930
inside a container inside the<font color="#CCCCCC"> DCOs</font>

499
00:23:01,510 --> 00:23:07,360
cluster so so what we first got to do

500
00:23:04,930 --> 00:23:09,520
when we<font color="#CCCCCC"> get inside ad cos or maize those</font>

501
00:23:07,360 --> 00:23:12,610
cluster is we want<font color="#E5E5E5"> to orientate</font>

502
00:23:09,520 --> 00:23:15,600
ourselves by doing a little bit of recon

503
00:23:12,610 --> 00:23:18,370
against some of<font color="#CCCCCC"> those systems that hold</font>

504
00:23:15,600 --> 00:23:20,590
ya information about where services are

505
00:23:18,370 --> 00:23:24,070
available in cluster one of the tenants

506
00:23:20,590 --> 00:23:27,100
of<font color="#E5E5E5"> the cluster is basically a slave can</font>

507
00:23:24,070 --> 00:23:29,230
die and a new slaves can come up and the

508
00:23:27,100 --> 00:23:31,000
cluster will make sure like always three

509
00:23:29,230 --> 00:23:32,530
of this container or running or always a

510
00:23:31,000 --> 00:23:34,810
hundred<font color="#E5E5E5"> of this container or runny and</font>

511
00:23:32,530 --> 00:23:36,850
<font color="#CCCCCC">it will realize how</font><font color="#E5E5E5"> these those dive we</font>

512
00:23:34,810 --> 00:23:39,669
need to spend more up and and you also

513
00:23:36,850 --> 00:23:40,020
do like traffic redirection through eh

514
00:23:39,670 --> 00:23:44,850
eh

515
00:23:40,020 --> 00:23:46,379
boxing all kinds of other stuff so<font color="#CCCCCC"> all</font>

516
00:23:44,850 --> 00:23:49,439
<font color="#CCCCCC">right so i'm going to show you now how</font>

517
00:23:46,380 --> 00:23:53,220
to extract information<font color="#E5E5E5"> from nasos dns</font>

518
00:23:49,440 --> 00:23:55,920
service so<font color="#E5E5E5"> maze</font><font color="#CCCCCC"> owes DNS it provides two</font>

519
00:23:53,220 --> 00:23:58,380
avenues to for you<font color="#E5E5E5"> for containers or</font>

520
00:23:55,920 --> 00:24:00,840
services or apps to get information<font color="#CCCCCC"> out</font>

521
00:23:58,380 --> 00:24:02,220
of it provides a traditional dns service

522
00:24:00,840 --> 00:24:04,820
<font color="#CCCCCC">i'm not really going</font><font color="#E5E5E5"> to talk about that</font>

523
00:24:02,220 --> 00:24:06,360
today any of your traditional<font color="#CCCCCC"> dns</font>

524
00:24:04,820 --> 00:24:08,669
reconnaissance techniques will work

525
00:24:06,360 --> 00:24:10,919
against that what<font color="#CCCCCC"> i'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> show you</font>

526
00:24:08,670 --> 00:24:13,560
is they have a new API that they<font color="#E5E5E5"> build</font>

527
00:24:10,920 --> 00:24:15,240
out<font color="#CCCCCC"> and that I feel like a lot of</font>

528
00:24:13,560 --> 00:24:18,060
developers are going to use to try and

529
00:24:15,240 --> 00:24:19,530
orientate themselves inside the<font color="#CCCCCC"> DCO west</font>

530
00:24:18,060 --> 00:24:21,389
cluster so<font color="#CCCCCC"> I'm going to</font><font color="#E5E5E5"> show</font><font color="#CCCCCC"> you how</font><font color="#E5E5E5"> to</font>

531
00:24:19,530 --> 00:24:23,639
extract<font color="#E5E5E5"> information out of that and we</font>

532
00:24:21,390 --> 00:24:25,620
need<font color="#E5E5E5"> that information to exploit more</font>

533
00:24:23,640 --> 00:24:29,190
stuff could i make an interjection yeah

534
00:24:25,620 --> 00:24:31,379
go stretch it over so the the<font color="#E5E5E5"> dns both</font>

535
00:24:29,190 --> 00:24:33,030
the service and the<font color="#CCCCCC"> api is pretty</font>

536
00:24:31,380 --> 00:24:35,760
important to the whole ecosphere of

537
00:24:33,030 --> 00:24:37,410
mezzos based on the concept that

538
00:24:35,760 --> 00:24:40,010
basically any service could end up

539
00:24:37,410 --> 00:24:42,480
popping up on any agent so in order to

540
00:24:40,010 --> 00:24:44,430
figure out what like what resources

541
00:24:42,480 --> 00:24:46,680
you're talking to you can't do that by

542
00:24:44,430 --> 00:24:50,250
AP you have to be doing it by by dns

543
00:24:46,680 --> 00:24:52,500
record so this isn't really something

544
00:24:50,250 --> 00:24:54,420
that could easily be stripped out<font color="#E5E5E5"> of all</font>

545
00:24:52,500 --> 00:24:57,180
of mezzos because the frameworks

546
00:24:54,420 --> 00:24:59,580
themselves need it to know what end

547
00:24:57,180 --> 00:25:01,290
points to talk to both IP and port

548
00:24:59,580 --> 00:25:03,419
because either one of those could be

549
00:25:01,290 --> 00:25:09,510
could be random well is random in most

550
00:25:03,420 --> 00:25:12,200
cases<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> great thanks Scott so</font>

551
00:25:09,510 --> 00:25:19,379
interacting with the web app<font color="#E5E5E5"> Empire</font>

552
00:25:12,200 --> 00:25:22,800
agent so I wrote this module for Empire

553
00:25:19,380 --> 00:25:25,320
it's<font color="#E5E5E5"> it's really nothing more than it it</font>

554
00:25:22,800 --> 00:25:26,760
allows<font color="#CCCCCC"> you to do dns lookups inside the</font>

555
00:25:25,320 --> 00:25:28,679
network<font color="#CCCCCC"> i just wanted to show you</font>

556
00:25:26,760 --> 00:25:32,190
something about the<font color="#E5E5E5"> DCOs cluster so you</font>

557
00:25:28,680 --> 00:25:34,230
kind of understand the easiest way to

558
00:25:32,190 --> 00:25:37,710
kind of orientate yourself once you<font color="#E5E5E5"> get</font>

559
00:25:34,230 --> 00:25:41,240
initial access so there's a there's a

560
00:25:37,710 --> 00:25:41,240
TLD called

561
00:25:43,510 --> 00:25:54,560
call mezzos so and most of<font color="#E5E5E5"> the services</font>

562
00:25:50,240 --> 00:25:56,600
will have a name under that so<font color="#E5E5E5"> master</font>

563
00:25:54,560 --> 00:25:59,510
mezzos once you get inside the network

564
00:25:56,600 --> 00:26:01,629
will resolve to<font color="#E5E5E5"> the master marathon</font>

565
00:25:59,510 --> 00:26:03,890
<font color="#CCCCCC">mezzos will resolve to the marathon box</font>

566
00:26:01,630 --> 00:26:06,380
<font color="#E5E5E5">Kronos dummies those words onto the</font>

567
00:26:03,890 --> 00:26:07,850
<font color="#E5E5E5">Kronos box and then you can also see</font>

568
00:26:06,380 --> 00:26:08,750
what<font color="#CCCCCC"> people things are co-hosted because</font>

569
00:26:07,850 --> 00:26:12,830
they're going<font color="#E5E5E5"> to give you back the same</font>

570
00:26:08,750 --> 00:26:20,000
IP so if we<font color="#E5E5E5"> just do we just</font><font color="#CCCCCC"> said</font><font color="#E5E5E5"> master</font>

571
00:26:12,830 --> 00:26:22,639
may see us and then execute then it just

572
00:26:20,000 --> 00:26:24,320
shows us hey it's on this 10 dot address

573
00:26:22,640 --> 00:26:27,980
inside the internal network so it's

574
00:26:24,320 --> 00:26:32,720
<font color="#E5E5E5">doing a DNS woke up so so go into</font>

575
00:26:27,980 --> 00:26:34,100
something a<font color="#CCCCCC"> little bit more I mean</font>

576
00:26:32,720 --> 00:26:38,200
that's<font color="#E5E5E5"> really simple right you could do</font>

577
00:26:34,100 --> 00:26:38,199
that using<font color="#CCCCCC"> ping</font><font color="#E5E5E5"> or anything on a box I</font>

578
00:26:39,220 --> 00:26:49,400
want to<font color="#E5E5E5"> show you a module that I wrote</font>

579
00:26:42,470 --> 00:26:52,430
that a<font color="#E5E5E5"> so so the next thing you really</font>

580
00:26:49,400 --> 00:26:57,170
want<font color="#E5E5E5"> to do is I wrote this other module</font>

581
00:26:52,430 --> 00:26:59,480
it's<font color="#CCCCCC"> mais o Dinah's API and numerate so</font>

582
00:26:57,170 --> 00:27:04,690
when looking through the source code and

583
00:26:59,480 --> 00:27:08,780
i found an<font color="#E5E5E5"> api function called enumerate</font>

584
00:27:04,690 --> 00:27:11,660
it is basically<font color="#E5E5E5"> the equivalent of a zone</font>

585
00:27:08,780 --> 00:27:13,490
transfer so it will dump all of the data

586
00:27:11,660 --> 00:27:18,950
about everything in the cluster that

587
00:27:13,490 --> 00:27:22,580
<font color="#CCCCCC">maze those dns knows so I don't</font><font color="#E5E5E5"> think</font>

588
00:27:18,950 --> 00:27:26,630
<font color="#E5E5E5">this is undocumented but it's also not</font>

589
00:27:22,580 --> 00:27:28,480
<font color="#CCCCCC">in the documentation so but the</font>

590
00:27:26,630 --> 00:27:32,960
developers do talk about it like in

591
00:27:28,480 --> 00:27:34,520
github issues so i don't think i<font color="#E5E5E5"> think</font>

592
00:27:32,960 --> 00:27:37,660
the documentation is just not been

593
00:27:34,520 --> 00:27:41,379
updated yet so but you I mean you<font color="#E5E5E5"> can</font>

594
00:27:37,660 --> 00:27:46,130
you can have your own opinion on that so

595
00:27:41,380 --> 00:27:49,220
mais OU SDNS it listens on tcp port 8

596
00:27:46,130 --> 00:27:50,720
<font color="#CCCCCC">123 and we can just</font><font color="#E5E5E5"> determine that where</font>

597
00:27:49,220 --> 00:27:53,410
that is because it's usually<font color="#E5E5E5"> coasted on</font>

598
00:27:50,720 --> 00:27:53,410
the master and

599
00:27:53,520 --> 00:28:01,740
and this will just make an a web request

600
00:27:57,120 --> 00:28:04,379
out to it call the HTTP API and then it

601
00:28:01,740 --> 00:28:06,660
will collect the<font color="#E5E5E5"> JSON it returns</font><font color="#CCCCCC"> the</font>

602
00:28:04,380 --> 00:28:07,980
results in a JSON format and then Empire

603
00:28:06,660 --> 00:28:11,190
is just going<font color="#E5E5E5"> to record those down to</font>

604
00:28:07,980 --> 00:28:16,470
disk so you can see this worked it

605
00:28:11,190 --> 00:28:17,460
<font color="#E5E5E5">recorded it to disk right here and I'm</font>

606
00:28:16,470 --> 00:28:19,740
just<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> show</font><font color="#CCCCCC"> you what it looks</font>

607
00:28:17,460 --> 00:28:24,530
like because a couple modules kind of do

608
00:28:19,740 --> 00:28:24,530
the same thing<font color="#CCCCCC"> but I just</font>

609
00:28:28,519 --> 00:28:33,349
but I<font color="#E5E5E5"> just want you to kind of be able</font>

610
00:28:30,950 --> 00:28:37,209
to visualize more what this looks like

611
00:28:33,349 --> 00:28:37,208
from an attackers perspective

612
00:28:41,700 --> 00:28:46,200
<font color="#E5E5E5">okay so it just returns back this JSON</font>

613
00:28:44,399 --> 00:28:47,699
blob and<font color="#CCCCCC"> the first</font><font color="#E5E5E5"> thing is going to</font>

614
00:28:46,200 --> 00:28:49,529
tell us is the frameworks that are in

615
00:28:47,700 --> 00:28:51,330
the cluster and then it's<font color="#E5E5E5"> going to say</font>

616
00:28:49,529 --> 00:28:53,340
hey inside this framework there's tasks

617
00:28:51,330 --> 00:28:56,428
and inside here there's this proxy and

618
00:28:53,340 --> 00:28:58,289
this proxy is on this slave like this

619
00:28:56,429 --> 00:29:00,929
physical<font color="#CCCCCC"> hardware box that's</font><font color="#E5E5E5"> the IP of</font>

620
00:28:58,289 --> 00:29:02,129
it in the cluster and then the most

621
00:29:00,929 --> 00:29:06,120
important thing that<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is going to</font>

622
00:29:02,130 --> 00:29:08,340
give us though is the IP and then the

623
00:29:06,120 --> 00:29:10,620
random high port so one of the things

624
00:29:08,340 --> 00:29:14,580
you're<font color="#E5E5E5"> going to find with</font><font color="#CCCCCC"> dcos and</font><font color="#E5E5E5"> maze</font>

625
00:29:10,620 --> 00:29:16,439
<font color="#CCCCCC">OSAS services are come services</font><font color="#E5E5E5"> are</font>

626
00:29:14,580 --> 00:29:19,110
coming ups going up and down<font color="#E5E5E5"> and every</font>

627
00:29:16,440 --> 00:29:20,760
time<font color="#CCCCCC"> they do on a slave</font><font color="#E5E5E5"> their service is</font>

628
00:29:19,110 --> 00:29:23,120
not<font color="#E5E5E5"> going to bind to a normal port so</font>

629
00:29:20,760 --> 00:29:26,639
even<font color="#E5E5E5"> though this is probably a proxy for</font>

630
00:29:23,120 --> 00:29:28,260
<font color="#CCCCCC">Apache</font><font color="#E5E5E5"> or another web service it's going</font>

631
00:29:26,639 --> 00:29:30,240
to<font color="#E5E5E5"> bind to these random high ports so</font>

632
00:29:28,260 --> 00:29:31,379
querying the dns service and figuring

633
00:29:30,240 --> 00:29:33,090
<font color="#CCCCCC">out what those are it's going to</font><font color="#E5E5E5"> enable</font>

634
00:29:31,380 --> 00:29:34,980
us to further exploit additional

635
00:29:33,090 --> 00:29:36,840
services and what we really want out of

636
00:29:34,980 --> 00:29:39,750
this is want this Chronos because

637
00:29:36,840 --> 00:29:42,658
Chronos is kind of like crontab for the

638
00:29:39,750 --> 00:29:44,490
DCOs data center so if<font color="#E5E5E5"> we can interact</font>

639
00:29:42,659 --> 00:29:47,639
with Chronos we can schedule malicious

640
00:29:44,490 --> 00:29:51,059
task and execute them and so here we see

641
00:29:47,639 --> 00:29:53,428
that a Chronos is on dot one sixty and

642
00:29:51,059 --> 00:29:57,149
then the most important thing is Chronos

643
00:29:53,429 --> 00:29:58,830
is random<font color="#CCCCCC"> high port is 6 1 2 3</font><font color="#E5E5E5"> 2 so you</font>

644
00:29:57,149 --> 00:30:00,330
could I guess<font color="#E5E5E5"> scan the whole cluster to</font>

645
00:29:58,830 --> 00:30:07,699
figure these stuff out but it's just

646
00:30:00,330 --> 00:30:09,740
easier<font color="#CCCCCC"> to ask right all right</font><font color="#E5E5E5"> sweet</font>

647
00:30:07,700 --> 00:30:15,620
alright so we know where Chronos is in

648
00:30:09,740 --> 00:30:18,399
the cluster now so now we can do a

649
00:30:15,620 --> 00:30:18,399
<font color="#E5E5E5">little bit more pwnage</font>

650
00:30:21,830 --> 00:30:28,510
what<font color="#CCCCCC"> I'm god 35 oh ok cool</font>

651
00:30:33,980 --> 00:30:39,500
so when you set up<font color="#E5E5E5"> your cluster inside</font>

652
00:30:36,679 --> 00:30:43,730
your data center yeah most people use

653
00:30:39,500 --> 00:30:47,450
that TLD 40 the question is do most

654
00:30:43,730 --> 00:30:50,960
people use the mezzos domain name is

655
00:30:47,450 --> 00:30:54,350
that it so and the answer is<font color="#E5E5E5"> yes like a</font>

656
00:30:50,960 --> 00:30:57,620
<font color="#E5E5E5">lot of people are hard baking that into</font>

657
00:30:54,350 --> 00:30:59,120
their infrastructure I<font color="#E5E5E5"> when it's used by</font>

658
00:30:57,620 --> 00:31:01,459
a lot of the frameworks by default and

659
00:30:59,120 --> 00:31:03,080
then to you have to have some way to

660
00:31:01,460 --> 00:31:04,820
discover where the services are so you

661
00:31:03,080 --> 00:31:06,379
can interact<font color="#E5E5E5"> with each other the real</font>

662
00:31:04,820 --> 00:31:09,020
problem here is that there's really no

663
00:31:06,380 --> 00:31:11,419
uh there's no are back right so there's

664
00:31:09,020 --> 00:31:12,918
like why does a web app need to be able

665
00:31:11,419 --> 00:31:15,770
<font color="#E5E5E5">to ask where the Chronos cluster is</font>

666
00:31:12,919 --> 00:31:19,490
<font color="#E5E5E5">doesn't right but it can get everything</font>

667
00:31:15,770 --> 00:31:23,559
so which I think they're working on but

668
00:31:19,490 --> 00:31:31,280
it's kind of like a work in progress so

669
00:31:23,559 --> 00:31:36,500
<font color="#E5E5E5">okay cool so we can also interact with</font>

670
00:31:31,280 --> 00:31:38,590
the master<font color="#E5E5E5"> via its API and then the one</font>

671
00:31:36,500 --> 00:31:41,210
thing that this<font color="#E5E5E5"> is going to give us is</font>

672
00:31:38,590 --> 00:31:43,159
it will give us a complete list of all

673
00:31:41,210 --> 00:31:46,730
the slaves that are there all the IP

674
00:31:43,160 --> 00:31:48,559
addresses are in the cluster<font color="#CCCCCC"> that could</font>

675
00:31:46,730 --> 00:31:50,090
<font color="#E5E5E5">be slaves that are in the cluster that</font>

676
00:31:48,559 --> 00:31:51,860
<font color="#E5E5E5">we want to get on but are just like</font>

677
00:31:50,090 --> 00:31:53,629
don't have<font color="#E5E5E5"> any docker containers on</font>

678
00:31:51,860 --> 00:31:56,559
currently so we kind of missed those if

679
00:31:53,630 --> 00:31:58,940
we just went after<font color="#E5E5E5"> the dns service so</font>

680
00:31:56,559 --> 00:32:00,559
just going<font color="#E5E5E5"> to kind of skip over that</font>

681
00:31:58,940 --> 00:32:02,870
because it's the<font color="#CCCCCC"> Zack same thing</font>

682
00:32:00,559 --> 00:32:07,879
research it's another module really seen

683
00:32:02,870 --> 00:32:14,418
and then returns back a JSON blob got

684
00:32:07,880 --> 00:32:17,690
recon for sure<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> all right so we got</font>

685
00:32:14,419 --> 00:32:19,820
our Empire agent and then we got Chronos

686
00:32:17,690 --> 00:32:22,429
running in a container inside the

687
00:32:19,820 --> 00:32:24,500
cluster we now know where that is by our

688
00:32:22,429 --> 00:32:25,850
reconnaissance modules so now we're

689
00:32:24,500 --> 00:32:28,250
going to<font color="#E5E5E5"> interact with that to get</font>

690
00:32:25,850 --> 00:32:29,780
additional empires inside of it<font color="#CCCCCC"> all</font>

691
00:32:28,250 --> 00:32:32,780
<font color="#CCCCCC">right so I</font><font color="#E5E5E5"> got really</font><font color="#CCCCCC"> excited because I</font>

692
00:32:29,780 --> 00:32:34,428
was like<font color="#E5E5E5"> great we're not going to run</font>

693
00:32:32,780 --> 00:32:36,200
inside a container anymore we're<font color="#E5E5E5"> going</font>

694
00:32:34,429 --> 00:32:38,660
<font color="#E5E5E5">to use Chronos to pop out and run as</font>

695
00:32:36,200 --> 00:32:42,440
root on these on these hosts so we

696
00:32:38,660 --> 00:32:44,540
should<font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to natively use</font><font color="#CCCCCC"> Empire</font>

697
00:32:42,440 --> 00:32:45,909
without having to comply to the elf

698
00:32:44,540 --> 00:32:49,690
binary

699
00:32:45,909 --> 00:32:52,820
that that premise did not work out so

700
00:32:49,690 --> 00:32:56,809
the<font color="#CCCCCC"> core rest is kind</font><font color="#E5E5E5"> of another strip</font>

701
00:32:52,820 --> 00:33:00,529
down OS designed for loading of

702
00:32:56,809 --> 00:33:03,320
containers and the version of<font color="#E5E5E5"> Python</font>

703
00:33:00,529 --> 00:33:05,779
that's installed on it by<font color="#CCCCCC"> default does</font>

704
00:33:03,320 --> 00:33:07,908
not have URL led to which is a

705
00:33:05,779 --> 00:33:10,580
requirement right now for easy<font color="#E5E5E5"> Empire</font>

706
00:33:07,909 --> 00:33:12,380
natively so it's<font color="#E5E5E5"> not a big deal we</font><font color="#CCCCCC"> just</font>

707
00:33:10,580 --> 00:33:16,480
use the elf<font color="#CCCCCC"> by you</font><font color="#E5E5E5"> again but I was a</font>

708
00:33:12,380 --> 00:33:16,480
<font color="#E5E5E5">little bit disappointed right so all</font>

709
00:33:17,620 --> 00:33:23,860
right come around to here

710
00:33:27,549 --> 00:33:31,539
alright so we can do<font color="#E5E5E5"> the Recon the only</font>

711
00:33:30,369 --> 00:33:33,488
thing about the Recon that you really

712
00:33:31,539 --> 00:33:37,330
want<font color="#E5E5E5"> to take know is uh against the</font>

713
00:33:33,489 --> 00:33:40,149
<font color="#E5E5E5">mezzos master is it it listens on tcp</font>

714
00:33:37,330 --> 00:33:41,529
for 50 50 and for the most part people

715
00:33:40,149 --> 00:33:43,119
aren't going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> change that</font><font color="#E5E5E5"> because all</font>

716
00:33:41,529 --> 00:33:51,070
the slaves or agents are gonna have to

717
00:33:43,119 --> 00:33:52,149
talk back to that<font color="#E5E5E5"> okay so here we</font><font color="#CCCCCC"> go is</font>

718
00:33:51,070 --> 00:33:59,470
where it starts to get a little<font color="#E5E5E5"> bit</font>

719
00:33:52,149 --> 00:34:03,789
funner so I wrote this module it's

720
00:33:59,470 --> 00:34:06,100
called Chronos API list jobs and what

721
00:34:03,789 --> 00:34:10,030
<font color="#E5E5E5">it's going to do is inside of Corrado's</font>

722
00:34:06,100 --> 00:34:12,668
which is here we can see we can

723
00:34:10,030 --> 00:34:14,649
<font color="#E5E5E5">visualize the list of the jobs right so</font>

724
00:34:12,668 --> 00:34:16,509
this<font color="#E5E5E5"> is going to interact with the API</font>

725
00:34:14,649 --> 00:34:20,949
pull back a JSON blob that's going to

726
00:34:16,510 --> 00:34:22,780
have this do the thing Chronos job in

727
00:34:20,949 --> 00:34:24,219
there and all this job is really<font color="#E5E5E5"> doing</font>

728
00:34:22,780 --> 00:34:26,679
inside of our cluster right now is it

729
00:34:24,219 --> 00:34:29,129
saying hey execute the sleep command on

730
00:34:26,679 --> 00:34:33,250
the box so this is<font color="#E5E5E5"> kind of just a demo</font>

731
00:34:29,129 --> 00:34:36,009
thing but so what I like to do is<font color="#CCCCCC"> I list</font>

732
00:34:33,250 --> 00:34:38,619
all the jobs<font color="#E5E5E5"> in the Chronos framework</font>

733
00:34:36,010 --> 00:34:40,329
then I can add job that looks<font color="#E5E5E5"> really</font>

734
00:34:38,619 --> 00:34:43,089
similar to the<font color="#CCCCCC"> other jobs to blend in</font>

735
00:34:40,329 --> 00:34:45,190
and then execute that job and then

736
00:34:43,089 --> 00:34:46,239
delete that job so I'm clean because<font color="#CCCCCC"> I</font>

737
00:34:45,190 --> 00:34:51,159
<font color="#E5E5E5">don't want someone to come in and find</font>

738
00:34:46,239 --> 00:34:53,379
my job my malicious job so so so we get

739
00:34:51,159 --> 00:34:57,010
a listing<font color="#E5E5E5"> just by interacting with the</font>

740
00:34:53,379 --> 00:35:00,759
Chronos mezzos TLD we just execute on

741
00:34:57,010 --> 00:35:02,760
that and that's going<font color="#E5E5E5"> to save back a</font>

742
00:35:00,760 --> 00:35:04,930
list of all the jobs to this JSON blob

743
00:35:02,760 --> 00:35:06,549
just looks pretty identical to the last

744
00:35:04,930 --> 00:35:10,919
two songs that showed you so I'm<font color="#E5E5E5"> not</font>

745
00:35:06,549 --> 00:35:13,599
<font color="#E5E5E5">going to that up but and then and then</font>

746
00:35:10,920 --> 00:35:15,160
now let's go out a job right now that we

747
00:35:13,599 --> 00:35:17,400
know what the jobs are let's go out a

748
00:35:15,160 --> 00:35:17,399
job

749
00:35:19,260 --> 00:35:27,080
so<font color="#CCCCCC"> Chronos API add job we do info okay</font>

750
00:35:24,660 --> 00:35:29,879
so the couple things we need to do here

751
00:35:27,080 --> 00:35:32,460
like one where's Chronos in the network

752
00:35:29,880 --> 00:35:35,460
we can pretty much use the TLD trick to

753
00:35:32,460 --> 00:35:37,950
do that then to these parameters right

754
00:35:35,460 --> 00:35:39,990
here we mostly just want to blend in

755
00:35:37,950 --> 00:35:41,040
with what we listed out like we probably

756
00:35:39,990 --> 00:35:42,930
<font color="#E5E5E5">don't want to make up an owner that</font>

757
00:35:41,040 --> 00:35:44,550
doesn't exist somebody<font color="#E5E5E5"> might get</font>

758
00:35:42,930 --> 00:35:49,350
suspicious if they have logging<font color="#E5E5E5"> enabled</font>

759
00:35:44,550 --> 00:35:51,240
about that and then the name of the job

760
00:35:49,350 --> 00:35:54,509
or the description of the job<font color="#CCCCCC"> is when</font>

761
00:35:51,240 --> 00:35:56,009
you click on the job and the GUI you can

762
00:35:54,510 --> 00:35:57,480
see the descriptions right here so you

763
00:35:56,010 --> 00:35:58,710
<font color="#E5E5E5">just want to blend that in and then the</font>

764
00:35:57,480 --> 00:36:01,680
name<font color="#E5E5E5"> right here we want to blend that</font>

765
00:35:58,710 --> 00:36:04,500
into so<font color="#E5E5E5"> I just call mine scheduled jobs</font>

766
00:36:01,680 --> 00:36:06,779
<font color="#CCCCCC">you're 01 description scheduled job 001</font>

767
00:36:04,500 --> 00:36:10,790
and then the main thing that we want to

768
00:36:06,780 --> 00:36:14,720
change here is the the port right so the

769
00:36:10,790 --> 00:36:18,930
mezzos is going to automatically deploy

770
00:36:14,720 --> 00:36:20,730
the container inside the DCOs cluster so

771
00:36:18,930 --> 00:36:22,620
<font color="#E5E5E5">remember we have to use the DNS recall</font>

772
00:36:20,730 --> 00:36:24,840
and to figure out what port it was so if

773
00:36:22,620 --> 00:36:30,509
you<font color="#E5E5E5"> guys were I think it was</font><font color="#CCCCCC"> 6 2 3 2</font>

774
00:36:24,840 --> 00:36:33,900
okay<font color="#CCCCCC"> great and then by default</font><font color="#E5E5E5"> this is</font>

775
00:36:30,510 --> 00:36:34,620
just executing the ID command so we want

776
00:36:33,900 --> 00:36:37,290
to<font color="#E5E5E5"> do something a little bit more</font>

777
00:36:34,620 --> 00:36:40,529
malicious than that so go over here and

778
00:36:37,290 --> 00:36:45,360
we're just<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to execute this this</font>

779
00:36:40,530 --> 00:36:48,990
one liner here which is<font color="#E5E5E5"> going to set the</font>

780
00:36:45,360 --> 00:36:52,560
command to curl<font color="#E5E5E5"> the Empire binary that</font>

781
00:36:48,990 --> 00:36:55,620
is available<font color="#E5E5E5"> via our Python simple HTTP</font>

782
00:36:52,560 --> 00:36:59,520
server set it as executable schmatte it

783
00:36:55,620 --> 00:37:01,440
and then execute it on on the witch and

784
00:36:59,520 --> 00:37:04,259
<font color="#E5E5E5">so we're not really specifying if you</font>

785
00:37:01,440 --> 00:37:06,030
notice which slave or agent to execute

786
00:37:04,260 --> 00:37:08,010
this on the framework is going to figure

787
00:37:06,030 --> 00:37:10,770
<font color="#E5E5E5">out what has resources and just randomly</font>

788
00:37:08,010 --> 00:37:12,270
deploy it there so i'm working<font color="#CCCCCC"> on a</font>

789
00:37:10,770 --> 00:37:13,650
newer version<font color="#E5E5E5"> of the module right now</font>

790
00:37:12,270 --> 00:37:15,990
that actually is going<font color="#E5E5E5"> to let you set</font>

791
00:37:13,650 --> 00:37:18,540
that parameter because<font color="#E5E5E5"> i found a way to</font>

792
00:37:15,990 --> 00:37:19,830
do that but but that'll take a look

793
00:37:18,540 --> 00:37:24,930
they'll be<font color="#E5E5E5"> like a week or two before</font><font color="#CCCCCC"> i</font>

794
00:37:19,830 --> 00:37:27,029
get that<font color="#E5E5E5"> out so so we just set that and</font>

795
00:37:24,930 --> 00:37:28,649
then you can type info and then you can

796
00:37:27,030 --> 00:37:29,329
see are malicious command is set up

797
00:37:28,650 --> 00:37:33,469
there

798
00:37:29,329 --> 00:37:36,499
<font color="#CCCCCC">well</font><font color="#E5E5E5"> good and then we type execute so</font>

799
00:37:33,469 --> 00:37:38,390
with Chronos it's<font color="#E5E5E5"> kind of a two-step</font>

800
00:37:36,499 --> 00:37:40,160
thing we're<font color="#E5E5E5"> going to add it and then</font>

801
00:37:38,390 --> 00:37:42,769
it's kind of like it wants like a cron

802
00:37:40,160 --> 00:37:44,779
schedule so we could set the cron if we

803
00:37:42,769 --> 00:37:46,339
know<font color="#CCCCCC"> the remote targets time or assume</font>

804
00:37:44,779 --> 00:37:48,440
the remote targets time is similar to

805
00:37:46,339 --> 00:37:50,328
our own so that<font color="#E5E5E5"> it would execute like in</font>

806
00:37:48,440 --> 00:37:51,229
five minutes<font color="#E5E5E5"> or something that I don't</font>

807
00:37:50,329 --> 00:37:53,239
<font color="#CCCCCC">know if you guys remember like</font>

808
00:37:51,229 --> 00:37:55,189
scheduling at jobs and<font color="#E5E5E5"> Windows domains</font>

809
00:37:53,239 --> 00:37:56,329
and classic stuff like that we could we

810
00:37:55,190 --> 00:37:58,279
could do that same thing here but

811
00:37:56,329 --> 00:38:00,499
there's actually<font color="#E5E5E5"> an API call that just</font>

812
00:37:58,279 --> 00:38:05,630
says xq now so so<font color="#E5E5E5"> I wrote another module</font>

813
00:38:00,499 --> 00:38:13,899
for that but hopefully<font color="#E5E5E5"> this one comes</font>

814
00:38:05,630 --> 00:38:17,079
back it worked one buddy don't do that

815
00:38:13,900 --> 00:38:17,079
go back

816
00:38:19,390 --> 00:38:25,440
let's screw something up it's got hard

817
00:38:22,450 --> 00:38:25,439
to tell<font color="#CCCCCC"> what the resolution a</font>

818
00:38:26,910 --> 00:38:30,828
I'll<font color="#E5E5E5"> make it big again once I</font>

819
00:38:30,859 --> 00:38:42,569
about just 32 16 32<font color="#E5E5E5"> web a command</font><font color="#CCCCCC"> kronos</font>

820
00:38:38,509 --> 00:38:44,569
try different job name oh you think the

821
00:38:42,569 --> 00:38:54,690
job<font color="#CCCCCC"> okay let's</font><font color="#E5E5E5"> just go check agents oh</font>

822
00:38:44,569 --> 00:38:58,220
<font color="#E5E5E5">no okay all right all</font><font color="#CCCCCC"> right oh that's</font>

823
00:38:54,690 --> 00:39:01,920
<font color="#E5E5E5">right we didn't set it to run yeah so</font>

824
00:38:58,220 --> 00:39:03,808
yeah but that sleep so it should so let

825
00:39:01,920 --> 00:39:05,460
<font color="#E5E5E5">me jump in really quickly so in the</font>

826
00:39:03,809 --> 00:39:07,589
<font color="#CCCCCC">kronos job definitions it's not a normal</font>

827
00:39:05,460 --> 00:39:13,049
<font color="#E5E5E5">cron schedule it's not like star 1 star</font>

828
00:39:07,589 --> 00:39:16,380
star whatever you specify a start time

829
00:39:13,049 --> 00:39:20,190
and a<font color="#E5E5E5"> period so if you say go 2040 like</font>

830
00:39:16,380 --> 00:39:21,930
a 24 hour time period but start sometime

831
00:39:20,190 --> 00:39:24,839
in the<font color="#E5E5E5"> past it'll fire immediately and</font>

832
00:39:21,930 --> 00:39:26,848
then it will fire 24 hours later so it's

833
00:39:24,839 --> 00:39:29,339
not a normal cron schedule it's a start

834
00:39:26,849 --> 00:39:36,500
time and period which<font color="#CCCCCC"> is kind of it's a</font>

835
00:39:29,339 --> 00:39:36,500
little bit different no

836
00:39:45,550 --> 00:39:50,280
all right that's<font color="#E5E5E5"> okay so</font>

837
00:39:50,330 --> 00:39:57,049
yeah we it should it should show up here

838
00:39:52,760 --> 00:40:01,670
if it was<font color="#E5E5E5"> working from a tiny be having</font>

839
00:39:57,050 --> 00:40:07,580
a hard time all right<font color="#E5E5E5"> okay just one</font>

840
00:40:01,670 --> 00:40:09,610
minute jump<font color="#E5E5E5"> back into we've Lee all</font>

841
00:40:07,580 --> 00:40:13,009
right you still see<font color="#CCCCCC"> it's executing</font>

842
00:40:09,610 --> 00:40:20,080
interact again with this session take

843
00:40:13,010 --> 00:40:20,080
off another one thanks

844
00:40:23,450 --> 00:40:40,359
go back around<font color="#E5E5E5"> to empire</font><font color="#CCCCCC"> okay agents in</font>

845
00:40:28,820 --> 00:40:43,100
Iraq<font color="#CCCCCC"> g7 I ok go here you this module is</font>

846
00:40:40,360 --> 00:40:47,270
the simply too simple Python servers to

847
00:40:43,100 --> 00:40:49,190
ruin oh that's like well it should

848
00:40:47,270 --> 00:40:51,770
fashion a matter for this right but yeah

849
00:40:49,190 --> 00:40:55,060
we<font color="#CCCCCC"> should we should check that to set</font>

850
00:40:51,770 --> 00:40:55,060
this set the poor

851
00:41:01,380 --> 00:41:10,140
<font color="#E5E5E5">okay and</font><font color="#CCCCCC"> then do execute in the remote</font>

852
00:41:04,140 --> 00:41:11,879
target Network okay there<font color="#E5E5E5"> we go okay</font><font color="#CCCCCC"> all</font>

853
00:41:10,140 --> 00:41:15,120
right so hopefully it shows up now here

854
00:41:11,880 --> 00:41:16,830
I don't know why though their empire

855
00:41:15,120 --> 00:41:18,839
died okay there<font color="#E5E5E5"> we go here's our job</font><font color="#CCCCCC"> AAA</font>

856
00:41:16,830 --> 00:41:20,549
you can see it's malicious you can also

857
00:41:18,840 --> 00:41:22,890
see the last time it ran was never so we

858
00:41:20,550 --> 00:41:25,080
haven't<font color="#E5E5E5"> started it yet if we actually</font>

859
00:41:22,890 --> 00:41:26,430
<font color="#E5E5E5">set the timings correct on it we could</font>

860
00:41:25,080 --> 00:41:30,330
get it<font color="#E5E5E5"> to like schedule out for five</font>

861
00:41:26,430 --> 00:41:34,370
minutes but a it's just easier in my

862
00:41:30,330 --> 00:41:34,370
opinion to use this other API call and

863
00:41:35,780 --> 00:41:40,110
hopefully I'll be able to consolidate

864
00:41:37,440 --> 00:41:48,270
these all into like one module and then

865
00:41:40,110 --> 00:41:52,350
your future then execute okay come<font color="#CCCCCC"> on</font>

866
00:41:48,270 --> 00:41:54,690
buddy<font color="#E5E5E5"> oh the name is wrong that's</font>

867
00:41:52,350 --> 00:41:57,200
<font color="#E5E5E5">changed it setname to AAA and then</font>

868
00:41:54,690 --> 00:41:57,200
execute

869
00:42:01,080 --> 00:42:05,850
<font color="#E5E5E5">okay great so you should see over here</font>

870
00:42:04,260 --> 00:42:08,040
in a second it's going to refresh and

871
00:42:05,850 --> 00:42:10,980
then it's going to say runny so we got

872
00:42:08,040 --> 00:42:12,509
running now and that's great because

873
00:42:10,980 --> 00:42:16,380
hopefully it pulled back down our Empire

874
00:42:12,510 --> 00:42:19,290
and we got a new empire agent on the

875
00:42:16,380 --> 00:42:21,870
inside the system so so we go<font color="#E5E5E5"> to agents</font>

876
00:42:19,290 --> 00:42:25,410
and we can interact with the new one<font color="#CCCCCC"> and</font>

877
00:42:21,870 --> 00:42:27,000
uh so cool part about Empire is you can

878
00:42:25,410 --> 00:42:28,560
<font color="#CCCCCC">see who you're running</font><font color="#E5E5E5"> ads over here so</font>

879
00:42:27,000 --> 00:42:30,630
you can see<font color="#E5E5E5"> we're running as</font><font color="#CCCCCC"> apache on</font>

880
00:42:28,560 --> 00:42:34,410
the first two ones then this new one

881
00:42:30,630 --> 00:42:35,370
we're running as root so and then we

882
00:42:34,410 --> 00:42:38,970
<font color="#E5E5E5">could just make sure we're running as</font>

883
00:42:35,370 --> 00:42:41,490
root by doing a shell ID execute and you

884
00:42:38,970 --> 00:42:53,990
can see comes back with ID command so so

885
00:42:41,490 --> 00:42:56,580
oh thanks as a long road but but so also

886
00:42:53,990 --> 00:43:02,459
yeah you want<font color="#E5E5E5"> to schedule job and it's</font>

887
00:42:56,580 --> 00:43:04,710
executed so so that's that's basically

888
00:43:02,460 --> 00:43:06,300
the diagram we had the agent because<font color="#E5E5E5"> we</font>

889
00:43:04,710 --> 00:43:07,770
popped a web server we talked to<font color="#CCCCCC"> Kronos</font>

890
00:43:06,300 --> 00:43:09,240
framework after doing<font color="#E5E5E5"> recall and you</font>

891
00:43:07,770 --> 00:43:10,860
figure out<font color="#E5E5E5"> where it is and now we got</font>

892
00:43:09,240 --> 00:43:13,500
Empire run<font color="#E5E5E5"> yazoo inside the cluster</font>

893
00:43:10,860 --> 00:43:15,210
right you could just repeat that<font color="#E5E5E5"> until</font>

894
00:43:13,500 --> 00:43:18,240
you<font color="#E5E5E5"> get a code execution on every single</font>

895
00:43:15,210 --> 00:43:23,340
slave or agent as root inside the

896
00:43:18,240 --> 00:43:25,259
cluster yeah or working on the new

897
00:43:23,340 --> 00:43:28,110
technique to<font color="#E5E5E5"> get you took more targeted</font>

898
00:43:25,260 --> 00:43:29,820
in the network<font color="#E5E5E5"> ok cool I'm just going to</font>

899
00:43:28,110 --> 00:43:32,840
check time oh<font color="#CCCCCC"> we're pretty</font><font color="#E5E5E5"> high in time</font>

900
00:43:29,820 --> 00:43:36,120
so I'm not going<font color="#CCCCCC"> to do this one but</font>

901
00:43:32,840 --> 00:43:38,370
figure it<font color="#E5E5E5"> out this how to do the same</font>

902
00:43:36,120 --> 00:43:40,049
<font color="#E5E5E5">thing but instead of interacting with</font>

903
00:43:38,370 --> 00:43:42,839
pronouns we just interact directly with

904
00:43:40,050 --> 00:43:45,720
marathon I've never seen<font color="#E5E5E5"> anyone run</font><font color="#CCCCCC"> a</font>

905
00:43:42,840 --> 00:43:47,160
maze O's cluster without marathon you

906
00:43:45,720 --> 00:43:49,620
could technically not have Chronos in

907
00:43:47,160 --> 00:43:51,930
there but uh you pretty much knew the

908
00:43:49,620 --> 00:43:53,549
marathon so if you can<font color="#E5E5E5"> talk to marathon</font>

909
00:43:51,930 --> 00:43:57,960
you can do the same<font color="#CCCCCC"> thing it's</font><font color="#E5E5E5"> the same</font>

910
00:43:53,550 --> 00:44:01,730
process you need marathon right yeah

911
00:43:57,960 --> 00:44:01,730
yeah yeah you're pretty jacked about it

912
00:44:02,540 --> 00:44:06,990
alright so that was that demo I'm

913
00:44:04,440 --> 00:44:09,210
skipping it your data centers too

914
00:44:06,990 --> 00:44:12,689
pretentious and that would get us a

915
00:44:09,210 --> 00:44:15,119
slate running as root doctor is running

916
00:44:12,690 --> 00:44:18,420
<font color="#CCCCCC">Empire running another slave all right</font>

917
00:44:15,119 --> 00:44:20,400
so all right yeah so once you own the

918
00:44:18,420 --> 00:44:21,900
cluster like you can spin up jobs you

919
00:44:20,400 --> 00:44:23,220
can spin those things out you'll notice

920
00:44:21,900 --> 00:44:25,230
that<font color="#CCCCCC"> at no point did we do any kind</font><font color="#E5E5E5"> of</font>

921
00:44:23,220 --> 00:44:27,720
container<font color="#E5E5E5"> breakout to go from having</font>

922
00:44:25,230 --> 00:44:29,790
access in this container to having

923
00:44:27,720 --> 00:44:33,060
agents running as root on the<font color="#E5E5E5"> other</font>

924
00:44:29,790 --> 00:44:36,329
agents so once you get<font color="#E5E5E5"> there where can</font>

925
00:44:33,060 --> 00:44:38,279
you go DCOs is highly automated bull and

926
00:44:36,329 --> 00:44:39,630
most the time when people<font color="#E5E5E5"> are using it</font>

927
00:44:38,280 --> 00:44:43,440
they're<font color="#E5E5E5"> going to be interested in in</font>

928
00:44:39,630 --> 00:44:45,510
tightening up their release pipeline so

929
00:44:43,440 --> 00:44:47,490
a lot of<font color="#E5E5E5"> times you'll see</font><font color="#CCCCCC"> DCOs you also</font>

930
00:44:45,510 --> 00:44:50,099
people<font color="#E5E5E5"> see people doing the same</font><font color="#CCCCCC"> kind of</font>

931
00:44:47,490 --> 00:44:52,348
like really<font color="#E5E5E5"> high speed releases like</font>

932
00:44:50,099 --> 00:44:54,119
automated everywhere from a push to get

933
00:44:52,349 --> 00:44:56,300
to a new version<font color="#E5E5E5"> of your application</font>

934
00:44:54,119 --> 00:44:58,829
coming out<font color="#E5E5E5"> and running in production</font>

935
00:44:56,300 --> 00:45:00,930
what that means is you'll often see

936
00:44:58,829 --> 00:45:02,910
these boxes and production with access

937
00:45:00,930 --> 00:45:05,540
back to some<font color="#E5E5E5"> point where bill artifacts</font>

938
00:45:02,910 --> 00:45:07,980
live that could be<font color="#E5E5E5"> back to get directly</font>

939
00:45:05,540 --> 00:45:10,410
it's almost<font color="#E5E5E5"> guaranteed to be back to</font>

940
00:45:07,980 --> 00:45:12,480
some<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> doctor private registry so</font>

941
00:45:10,410 --> 00:45:14,040
by looking at the job definitions that

942
00:45:12,480 --> 00:45:15,660
you'll see in marathon<font color="#E5E5E5"> and Chronos</font>

943
00:45:14,040 --> 00:45:17,250
you'll see the credentials and the

944
00:45:15,660 --> 00:45:20,310
locations that<font color="#CCCCCC"> you need to go</font><font color="#E5E5E5"> back in</font>

945
00:45:17,250 --> 00:45:23,359
pull more pieces<font color="#E5E5E5"> of information out it</font>

946
00:45:20,310 --> 00:45:25,380
could be useful<font color="#CCCCCC"> for in your pen test</font>

947
00:45:23,359 --> 00:45:27,089
most of the time these applications

948
00:45:25,380 --> 00:45:28,349
running the docker containers are not

949
00:45:27,089 --> 00:45:30,119
<font color="#CCCCCC">going to be completely self-contained</font>

950
00:45:28,349 --> 00:45:32,460
either like they'll need some kind of

951
00:45:30,119 --> 00:45:36,240
persistent storage out to a database out

952
00:45:32,460 --> 00:45:38,880
to an object store somewhere that they

953
00:45:36,240 --> 00:45:41,848
can maintain state that<font color="#CCCCCC"> means that these</font>

954
00:45:38,880 --> 00:45:43,470
configure the credentials that the

955
00:45:41,849 --> 00:45:45,480
<font color="#E5E5E5">application will need needs to get into</font>

956
00:45:43,470 --> 00:45:48,029
<font color="#E5E5E5">that container somehow that's either</font>

957
00:45:45,480 --> 00:45:50,790
going to happen as part of creating the

958
00:45:48,030 --> 00:45:52,319
docker container<font color="#E5E5E5"> Jenkins may bake those</font>

959
00:45:50,790 --> 00:45:55,500
in and then ship it off to the<font color="#CCCCCC"> doctor</font>

960
00:45:52,319 --> 00:45:58,770
registry or it could be defined<font color="#E5E5E5"> in the</font>

961
00:45:55,500 --> 00:46:00,390
job definition as environment variables

962
00:45:58,770 --> 00:46:01,560
there's a couple things you can do there

963
00:46:00,390 --> 00:46:03,930
to try<font color="#CCCCCC"> and make it a little bit</font><font color="#E5E5E5"> more</font>

964
00:46:01,560 --> 00:46:05,279
difficult<font color="#E5E5E5"> but eventually the application</font>

965
00:46:03,930 --> 00:46:07,618
is going<font color="#E5E5E5"> to need those credentials to</font>

966
00:46:05,280 --> 00:46:09,210
remote resources so if you have control

967
00:46:07,619 --> 00:46:11,010
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the cluster</font><font color="#CCCCCC"> you have control</font><font color="#E5E5E5"> of all</font>

968
00:46:09,210 --> 00:46:14,880
the<font color="#E5E5E5"> avenues of getting that those</font>

969
00:46:11,010 --> 00:46:17,520
credentials in so recommendations on how

970
00:46:14,880 --> 00:46:19,349
to trim some of this down some<font color="#CCCCCC"> of the</font>

971
00:46:17,520 --> 00:46:23,160
components in<font color="#CCCCCC"> dcos do have</font>

972
00:46:19,349 --> 00:46:25,050
authentication available most the time

973
00:46:23,160 --> 00:46:26,129
is not set up<font color="#E5E5E5"> by default a lot of the</font>

974
00:46:25,050 --> 00:46:29,640
frameworks all

975
00:46:26,130 --> 00:46:31,920
basic authentication some of the

976
00:46:29,640 --> 00:46:33,450
frameworks require zero authentication

977
00:46:31,920 --> 00:46:34,710
and you can't set<font color="#CCCCCC"> up any authentication</font>

978
00:46:33,450 --> 00:46:39,598
otherwise it'll break the whole

979
00:46:34,710 --> 00:46:41,930
framework so wherever possible on your

980
00:46:39,599 --> 00:46:44,190
frame works on zookeeper enable

981
00:46:41,930 --> 00:46:46,500
authentication enable it on the UI

982
00:46:44,190 --> 00:46:49,920
enable it<font color="#E5E5E5"> on the API try and limit that</font>

983
00:46:46,500 --> 00:46:51,150
down as much<font color="#CCCCCC"> as you can one attack</font>

984
00:46:49,920 --> 00:46:53,519
<font color="#CCCCCC">Avenue that we didn't really talk about</font>

985
00:46:51,150 --> 00:46:55,589
<font color="#E5E5E5">was slave authentication if you had</font>

986
00:46:53,519 --> 00:46:57,868
visibility to zookeeper on the mat on

987
00:46:55,589 --> 00:47:00,058
the mezzos master you<font color="#E5E5E5"> can spin up a</font>

988
00:46:57,869 --> 00:47:01,890
malicious slave register and start

989
00:47:00,059 --> 00:47:04,380
receiving jobs from the master so make

990
00:47:01,890 --> 00:47:06,118
sure you turn on agent and framework

991
00:47:04,380 --> 00:47:09,750
authentication<font color="#CCCCCC"> and yeah hope nothing</font>

992
00:47:06,119 --> 00:47:13,920
breaks definitely test it out first next

993
00:47:09,750 --> 00:47:15,390
is segmentation for the demos Bryce

994
00:47:13,920 --> 00:47:17,579
compromised the container and then was

995
00:47:15,390 --> 00:47:20,009
able<font color="#E5E5E5"> to immediately hit the mezzos like</font>

996
00:47:17,579 --> 00:47:21,509
the control plane from there most

997
00:47:20,009 --> 00:47:24,769
situations there's no need<font color="#CCCCCC"> for</font><font color="#E5E5E5"> that to</font>

998
00:47:21,509 --> 00:47:27,180
happen there are a handful of

999
00:47:24,769 --> 00:47:28,919
technologies you<font color="#CCCCCC"> can use to shove the</font>

1000
00:47:27,180 --> 00:47:31,410
whole IP stack<font color="#E5E5E5"> into the container you</font>

1001
00:47:28,920 --> 00:47:34,640
override the docker bridge with another

1002
00:47:31,410 --> 00:47:38,098
way to access the network you can use a

1003
00:47:34,640 --> 00:47:40,019
project like calico which then can put

1004
00:47:38,099 --> 00:47:41,460
<font color="#E5E5E5">down a BGP overlay allowing the commute</font>

1005
00:47:40,019 --> 00:47:44,819
the communications between the

1006
00:47:41,460 --> 00:47:47,130
containers on different hosts yeah try

1007
00:47:44,819 --> 00:47:49,109
to do everything you can to segment IP

1008
00:47:47,130 --> 00:47:52,109
access from<font color="#CCCCCC"> the container to only the</font>

1009
00:47:49,109 --> 00:47:54,410
resources it needs don't<font color="#CCCCCC"> open up the</font>

1010
00:47:52,109 --> 00:47:56,519
management plane if you don't need to

1011
00:47:54,410 --> 00:48:00,390
next update like this is pretty

1012
00:47:56,519 --> 00:48:03,899
<font color="#E5E5E5">cutting-edge stuff mezzos</font><font color="#CCCCCC"> 1 point 0 was</font>

1013
00:48:00,390 --> 00:48:05,250
released like five days ago and had some

1014
00:48:03,900 --> 00:48:06,240
security features in there that we

1015
00:48:05,250 --> 00:48:09,509
haven't really<font color="#E5E5E5"> been able to do a</font>

1016
00:48:06,240 --> 00:48:11,758
thorough exploration of right now<font color="#CCCCCC"> in</font>

1017
00:48:09,509 --> 00:48:13,799
<font color="#CCCCCC">versions we did an evaluation of there's</font>

1018
00:48:11,759 --> 00:48:16,380
no role based access control meaning if

1019
00:48:13,799 --> 00:48:18,119
you<font color="#E5E5E5"> get into D cos you're an admin and</font>

1020
00:48:16,380 --> 00:48:20,519
you can see your jobs you can see

1021
00:48:18,119 --> 00:48:22,019
everybody's jobs with the new version<font color="#CCCCCC"> of</font>

1022
00:48:20,519 --> 00:48:24,149
mezzos there's some role based access

1023
00:48:22,019 --> 00:48:26,758
control in there that's supported<font color="#E5E5E5"> at the</font>

1024
00:48:24,150 --> 00:48:28,200
mezzo<font color="#E5E5E5"> Slayer the</font><font color="#CCCCCC"> frameworks still have</font>

1025
00:48:26,759 --> 00:48:31,250
to catch up to that in order to really

1026
00:48:28,200 --> 00:48:31,250
make use of it

1027
00:48:31,550 --> 00:48:36,720
yeah so a couple companies that are

1028
00:48:34,590 --> 00:48:39,240
using mezzos this is typically used by

1029
00:48:36,720 --> 00:48:50,189
organizations that need to run products

1030
00:48:39,240 --> 00:48:59,549
at scale do your info SEC feud yeah<font color="#E5E5E5"> okay</font>

1031
00:48:50,190 --> 00:49:03,660
cool infosec feud so<font color="#E5E5E5"> I just wanted</font><font color="#CCCCCC"> to</font>

1032
00:48:59,550 --> 00:49:07,580
see like what's<font color="#E5E5E5"> the most egregious thing</font>

1033
00:49:03,660 --> 00:49:10,529
I could find on the internet<font color="#CCCCCC"> right so</font>

1034
00:49:07,580 --> 00:49:11,850
there we go right so there's really no

1035
00:49:10,530 --> 00:49:13,110
reason for any of these services to be

1036
00:49:11,850 --> 00:49:15,480
on the<font color="#E5E5E5"> internet they should at least be</font>

1037
00:49:13,110 --> 00:49:17,040
protected to<font color="#CCCCCC"> force you to get a foothold</font>

1038
00:49:15,480 --> 00:49:20,070
in the network before you can pivot to

1039
00:49:17,040 --> 00:49:22,230
them but I thought let's let's see let's

1040
00:49:20,070 --> 00:49:24,480
go to a major cloud provider let's see

1041
00:49:22,230 --> 00:49:26,850
how many people<font color="#CCCCCC"> have poor 8123 open and</font>

1042
00:49:24,480 --> 00:49:28,290
let's see what<font color="#CCCCCC"> I can do like just</font><font color="#E5E5E5"> a</font>

1043
00:49:26,850 --> 00:49:34,860
little bit of recon nothing too crazy

1044
00:49:28,290 --> 00:49:36,180
right so looking at me Bezos DNS how

1045
00:49:34,860 --> 00:49:38,760
many servers do you think we're

1046
00:49:36,180 --> 00:49:43,440
accessible via the<font color="#CCCCCC"> Internet by a quick</font>

1047
00:49:38,760 --> 00:49:46,950
scan of a club yeah I said yeah I was

1048
00:49:43,440 --> 00:49:49,290
hoping<font color="#CCCCCC"> for a lot more but</font><font color="#E5E5E5"> uh I found 54</font>

1049
00:49:46,950 --> 00:49:52,529
by scanning one cloud provider so that

1050
00:49:49,290 --> 00:49:55,800
were open<font color="#E5E5E5"> on the internet so so a little</font>

1051
00:49:52,530 --> 00:49:57,690
bit and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> should we jump back one so</font>

1052
00:49:55,800 --> 00:50:00,270
each one<font color="#CCCCCC"> of those represents an entire</font>

1053
00:49:57,690 --> 00:50:02,910
cluster which could be two machines it

1054
00:50:00,270 --> 00:50:06,800
could be a thousand machines so that's

1055
00:50:02,910 --> 00:50:10,649
not 54 boxes that's fifty four clusters

1056
00:50:06,800 --> 00:50:13,950
yeah and then how many<font color="#E5E5E5"> of them do you</font>

1057
00:50:10,650 --> 00:50:17,340
guys think my zone transfer trick worked

1058
00:50:13,950 --> 00:50:20,370
against it I thought<font color="#E5E5E5"> it was going to be</font>

1059
00:50:17,340 --> 00:50:21,900
<font color="#CCCCCC">100 is about fifty percent and that's</font>

1060
00:50:20,370 --> 00:50:22,920
because I think<font color="#E5E5E5"> it's a newer feature so</font>

1061
00:50:21,900 --> 00:50:27,090
only<font color="#CCCCCC"> about half of them are up to date</font>

1062
00:50:22,920 --> 00:50:28,560
so so that's why<font color="#E5E5E5"> that's my theory I</font>

1063
00:50:27,090 --> 00:50:35,960
don't know you can go do your<font color="#CCCCCC"> own</font>

1064
00:50:28,560 --> 00:50:38,190
research yeah<font color="#CCCCCC"> yeah okay</font><font color="#E5E5E5"> all right so um</font>

1065
00:50:35,960 --> 00:50:40,800
you<font color="#E5E5E5"> can also interact directly with the</font>

1066
00:50:38,190 --> 00:50:42,570
mezzos master so<font color="#E5E5E5"> I just did a quick scan</font>

1067
00:50:40,800 --> 00:50:45,740
of that how many do you think we're

1068
00:50:42,570 --> 00:50:45,740
directly accessible from the internet

1069
00:50:46,440 --> 00:50:52,210
okay<font color="#E5E5E5"> I'll tell you so 41 is what I found</font>

1070
00:50:50,320 --> 00:50:53,830
so these are things if you just know how

1071
00:50:52,210 --> 00:50:55,480
<font color="#CCCCCC">to talk</font><font color="#E5E5E5"> to protocol you could tell them</font>

1072
00:50:53,830 --> 00:50:58,390
to execute commands<font color="#E5E5E5"> as across their</font>

1073
00:50:55,480 --> 00:51:00,790
entire clusters right so it's<font color="#E5E5E5"> kind of</font>

1074
00:50:58,390 --> 00:51:02,109
kind of a big deal and then the one that

1075
00:51:00,790 --> 00:51:04,540
I<font color="#E5E5E5"> was really surprised about what</font>

1076
00:51:02,110 --> 00:51:07,020
zookeeper so I thought okay there's like

1077
00:51:04,540 --> 00:51:09,190
50 boxes for these<font color="#E5E5E5"> other two services</font>

1078
00:51:07,020 --> 00:51:10,780
probably about the same person keeper

1079
00:51:09,190 --> 00:51:11,920
anybody want to take<font color="#E5E5E5"> a stab</font><font color="#CCCCCC"> at how many</font>

1080
00:51:10,780 --> 00:51:20,050
zookeeper servers i found on the

1081
00:51:11,920 --> 00:51:22,390
internet<font color="#CCCCCC"> 3,000 and so why this is is</font>

1082
00:51:20,050 --> 00:51:24,430
because zookeeper predates<font color="#CCCCCC"> dcos and</font>

1083
00:51:22,390 --> 00:51:26,980
mezzos and so a lot more services

1084
00:51:24,430 --> 00:51:28,089
required a zookeeper but how many of

1085
00:51:26,980 --> 00:51:33,340
these do you think enabled

1086
00:51:28,090 --> 00:51:35,980
authentication on them under twenty

1087
00:51:33,340 --> 00:51:40,030
percent so eighty-two percent have no

1088
00:51:35,980 --> 00:51:43,270
authentication<font color="#E5E5E5"> on them so this in my</font>

1089
00:51:40,030 --> 00:51:44,890
opinion<font color="#E5E5E5"> is an entire like Redis like</font>

1090
00:51:43,270 --> 00:51:46,030
situation where you just have<font color="#CCCCCC"> rightist</font>

1091
00:51:44,890 --> 00:51:47,770
databases on the internet with no

1092
00:51:46,030 --> 00:51:50,050
authentication with super sensitive data

1093
00:51:47,770 --> 00:51:51,400
in them I think you<font color="#E5E5E5"> kind of the same</font>

1094
00:51:50,050 --> 00:51:53,850
scenario would see<font color="#CCCCCC"> Cooper going on right</font>

1095
00:51:51,400 --> 00:51:56,200
now on<font color="#E5E5E5"> the internet so I mean</font>

1096
00:51:53,850 --> 00:51:58,060
technically I didn't release modules for

1097
00:51:56,200 --> 00:52:00,759
it but you could get code execution

1098
00:51:58,060 --> 00:52:03,460
through zookeeper depending on what its

1099
00:52:00,760 --> 00:52:05,290
uses right so but at the bare minimum

1100
00:52:03,460 --> 00:52:07,360
it's super easy just to pull up a

1101
00:52:05,290 --> 00:52:11,700
zookeeper GUI and browse over and view

1102
00:52:07,360 --> 00:52:14,560
sensitive data so that's my last meme

1103
00:52:11,700 --> 00:52:15,730
thanks to these dudes for making<font color="#CCCCCC"> Empire</font>

1104
00:52:14,560 --> 00:52:17,350
because that's where all the modules are

1105
00:52:15,730 --> 00:52:20,110
written for then<font color="#E5E5E5"> you guys saw him them</font>

1106
00:52:17,350 --> 00:52:22,620
talk right before this and that's it<font color="#CCCCCC"> if</font>

1107
00:52:20,110 --> 00:52:22,620
you<font color="#E5E5E5"> guys want to talk</font>

1108
00:52:27,000 --> 00:52:32,410
as any questions just weird like I got a

1109
00:52:30,550 --> 00:52:34,780
couple of doctors greedy boats to go

1110
00:52:32,410 --> 00:52:36,730
away you must feel awesome question oh

1111
00:52:34,780 --> 00:52:39,160
yeah great questions the great let's do

1112
00:52:36,730 --> 00:52:41,680
it Joey I played for more minutes and

1113
00:52:39,160 --> 00:52:44,379
just quick announcement<font color="#E5E5E5"> 7 p.m. till we</font>

1114
00:52:41,680 --> 00:52:51,160
closing ceremonies the children so<font color="#CCCCCC"> any</font>

1115
00:52:44,380 --> 00:52:56,770
<font color="#CCCCCC">one</font><font color="#E5E5E5"> question haha i love that question</font>

1116
00:52:51,160 --> 00:52:58,660
that's question best<font color="#E5E5E5"> question you</font><font color="#CCCCCC"> rockin</font>

1117
00:52:56,770 --> 00:53:00,720
<font color="#E5E5E5">the question I don't know alright thanks</font>

1118
00:52:58,660 --> 00:53:00,720
guys

