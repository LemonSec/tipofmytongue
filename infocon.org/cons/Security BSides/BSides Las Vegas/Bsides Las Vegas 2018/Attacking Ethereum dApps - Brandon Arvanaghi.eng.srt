1
00:00:00,000 --> 00:00:04,440
okay hi<font color="#E5E5E5"> everyone this</font><font color="#CCCCCC"> is a talk on</font>

2
00:00:01,949 --> 00:00:06,240
attacking<font color="#CCCCCC"> aetherium DAPs but first quick</font>

3
00:00:04,440 --> 00:00:09,420
show of<font color="#E5E5E5"> hands who here</font><font color="#CCCCCC"> is interacted</font>

4
00:00:06,240 --> 00:00:12,090
with a<font color="#CCCCCC"> death before okay good</font>

5
00:00:09,420 --> 00:00:13,320
so this talk kind<font color="#E5E5E5"> of assumes you don't</font>

6
00:00:12,090 --> 00:00:15,299
have any background<font color="#E5E5E5"> at</font><font color="#CCCCCC"> all with</font>

7
00:00:13,320 --> 00:00:18,119
<font color="#CCCCCC">aetherium deaths or theorem</font><font color="#E5E5E5"> in general</font>

8
00:00:15,299 --> 00:00:20,400
<font color="#E5E5E5">but the point is that</font><font color="#CCCCCC"> daps and aetherium</font>

9
00:00:18,119 --> 00:00:21,660
and the world of blockchain<font color="#CCCCCC"> is really</font>

10
00:00:20,400 --> 00:00:23,669
taking a big role in<font color="#CCCCCC"> people's lives</font>

11
00:00:21,660 --> 00:00:26,009
today<font color="#CCCCCC"> so it's super important for the</font>

12
00:00:23,670 --> 00:00:28,650
traditional security world<font color="#E5E5E5"> to understand</font>

13
00:00:26,010 --> 00:00:30,750
<font color="#E5E5E5">kind of the mechanisms behind blockchain</font>

14
00:00:28,650 --> 00:00:33,000
security<font color="#E5E5E5"> and ways</font><font color="#CCCCCC"> you can penetration</font>

15
00:00:30,750 --> 00:00:34,890
<font color="#CCCCCC">tests adapt for example rather than</font><font color="#E5E5E5"> just</font>

16
00:00:33,000 --> 00:00:39,390
a regular<font color="#E5E5E5"> web application so that's</font>

17
00:00:34,890 --> 00:00:41,520
going to<font color="#E5E5E5"> be intent of this talk I work</font>

18
00:00:39,390 --> 00:00:43,980
at Gemini<font color="#CCCCCC"> the</font><font color="#E5E5E5"> next generation digital</font>

19
00:00:41,520 --> 00:00:45,360
<font color="#E5E5E5">asset exchange very exciting company</font>

20
00:00:43,980 --> 00:00:47,910
<font color="#CCCCCC">it's kind of at the</font><font color="#E5E5E5"> forefront of</font>

21
00:00:45,360 --> 00:00:49,530
<font color="#CCCCCC">cryptocurrencies</font><font color="#E5E5E5"> and a very cool place</font>

22
00:00:47,910 --> 00:00:51,209
<font color="#CCCCCC">to</font><font color="#E5E5E5"> be on the ground floor and we are</font>

23
00:00:49,530 --> 00:00:54,300
<font color="#E5E5E5">hiring so if anyone here is interested</font>

24
00:00:51,210 --> 00:00:56,640
feel free<font color="#CCCCCC"> to come up after after the</font>

25
00:00:54,300 --> 00:00:58,980
talk and give me your name and<font color="#CCCCCC"> resume</font>

26
00:00:56,640 --> 00:01:01,410
and all that<font color="#E5E5E5"> but even more important</font>

27
00:00:58,980 --> 00:01:03,480
<font color="#E5E5E5">than that we're having a party tomorrow</font>

28
00:01:01,410 --> 00:01:06,929
<font color="#E5E5E5">at the presidential</font><font color="#CCCCCC"> suite at</font><font color="#E5E5E5"> the</font>

29
00:01:03,480 --> 00:01:08,939
Bellagio<font color="#CCCCCC"> from</font><font color="#E5E5E5"> 7:00 to 11:00</font><font color="#CCCCCC"> now I can't</font>

30
00:01:06,930 --> 00:01:10,530
<font color="#E5E5E5">I was told by the recruiting people that</font>

31
00:01:08,939 --> 00:01:14,369
I can't<font color="#E5E5E5"> just announce it publicly like</font>

32
00:01:10,530 --> 00:01:15,659
this<font color="#E5E5E5"> so what has</font><font color="#CCCCCC"> to happen is</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have</font>

33
00:01:14,369 --> 00:01:16,860
to give me<font color="#E5E5E5"> your name and then I have to</font>

34
00:01:15,659 --> 00:01:18,630
<font color="#E5E5E5">put you</font><font color="#CCCCCC"> on the guest</font><font color="#E5E5E5"> list so you can</font>

35
00:01:16,860 --> 00:01:19,740
either come<font color="#CCCCCC"> up to me or just</font><font color="#E5E5E5"> tweet</font><font color="#CCCCCC"> at me</font>

36
00:01:18,630 --> 00:01:21,929
or<font color="#E5E5E5"> something</font>

37
00:01:19,740 --> 00:01:23,520
<font color="#E5E5E5">send me a private message and I'll get</font>

38
00:01:21,930 --> 00:01:25,590
you added just<font color="#E5E5E5"> mention at the door that</font>

39
00:01:23,520 --> 00:01:30,179
<font color="#CCCCCC">you</font><font color="#E5E5E5"> came from this talk from seeing this</font>

40
00:01:25,590 --> 00:01:31,619
talk I hope<font color="#E5E5E5"> to see most of you there so</font>

41
00:01:30,180 --> 00:01:33,840
again I'm a security<font color="#E5E5E5"> engineer at Gemini</font>

42
00:01:31,619 --> 00:01:36,990
<font color="#CCCCCC">I do a lot of blockchain and smart</font>

43
00:01:33,840 --> 00:01:38,700
contract development work<font color="#CCCCCC"> and before</font>

44
00:01:36,990 --> 00:01:40,470
that<font color="#E5E5E5"> before</font><font color="#CCCCCC"> being a Gemini</font><font color="#E5E5E5"> I was at</font>

45
00:01:38,700 --> 00:01:43,229
mandiant<font color="#E5E5E5"> where I was doing penetration</font>

46
00:01:40,470 --> 00:01:50,250
testing digital forensics<font color="#CCCCCC"> and Incident</font>

47
00:01:43,229 --> 00:01:52,799
<font color="#CCCCCC">Response so what is a dap dap</font><font color="#E5E5E5"> stands for</font>

48
00:01:50,250 --> 00:01:54,479
decentralized<font color="#E5E5E5"> application now this</font>

49
00:01:52,799 --> 00:01:56,250
<font color="#CCCCCC">decentralized bar is important because</font>

50
00:01:54,479 --> 00:01:57,899
it<font color="#E5E5E5"> gives us a few more attack vectors</font>

51
00:01:56,250 --> 00:02:00,060
than the traditional application you're

52
00:01:57,899 --> 00:02:01,590
used to pen testing and hopefully by<font color="#E5E5E5"> the</font>

53
00:02:00,060 --> 00:02:04,380
end<font color="#CCCCCC"> of</font><font color="#E5E5E5"> this talk you'll</font><font color="#CCCCCC"> see that</font><font color="#E5E5E5"> it's</font>

54
00:02:01,590 --> 00:02:06,630
<font color="#CCCCCC">very easy to migrate over into the</font>

55
00:02:04,380 --> 00:02:09,590
<font color="#E5E5E5">penetration testing world for</font><font color="#CCCCCC"> dabs</font><font color="#E5E5E5"> and</font>

56
00:02:06,630 --> 00:02:09,590
<font color="#E5E5E5">smart</font><font color="#CCCCCC"> contrast</font>

57
00:02:10,360 --> 00:02:14,659
so let's talk<font color="#CCCCCC"> about what a standard web</font>

58
00:02:12,650 --> 00:02:17,049
application is first you have your

59
00:02:14,659 --> 00:02:19,190
<font color="#CCCCCC">client over here you have your server</font>

60
00:02:17,049 --> 00:02:20,750
<font color="#E5E5E5">most of the time is</font><font color="#CCCCCC"> just a simple get</font>

61
00:02:19,190 --> 00:02:24,049
request or a post request that<font color="#CCCCCC"> goes to</font>

62
00:02:20,750 --> 00:02:26,180
the web web application<font color="#CCCCCC"> a lot of times</font>

63
00:02:24,049 --> 00:02:29,269
<font color="#CCCCCC">web</font><font color="#E5E5E5"> applications are just a</font><font color="#CCCCCC"> front-end</font>

64
00:02:26,180 --> 00:02:30,590
<font color="#E5E5E5">for a database</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> way to manage the data</font>

65
00:02:29,269 --> 00:02:33,680
<font color="#E5E5E5">that's being returned from that database</font>

66
00:02:30,590 --> 00:02:36,019
<font color="#CCCCCC">so when you make</font><font color="#E5E5E5"> that get or post to the</font>

67
00:02:33,680 --> 00:02:38,659
<font color="#E5E5E5">web app that</font><font color="#CCCCCC"> web app might interact with</font>

68
00:02:36,019 --> 00:02:41,030
<font color="#E5E5E5">another server</font><font color="#CCCCCC"> or a series of them</font><font color="#E5E5E5"> but</font>

69
00:02:38,659 --> 00:02:44,569
<font color="#CCCCCC">ultimately it</font><font color="#E5E5E5"> just sends you data back</font>

70
00:02:41,030 --> 00:02:49,670
<font color="#E5E5E5">right get post data back with some</font><font color="#CCCCCC"> level</font>

71
00:02:44,569 --> 00:02:50,929
of indirection there so again you're

72
00:02:49,670 --> 00:02:53,208
just<font color="#E5E5E5"> really interacting with the web app</font>

73
00:02:50,930 --> 00:02:54,680
<font color="#CCCCCC">logic</font><font color="#E5E5E5"> and that's kind of the point of a</font>

74
00:02:53,209 --> 00:02:56,450
web app assessment is you're going<font color="#CCCCCC"> in</font>

75
00:02:54,680 --> 00:02:57,859
<font color="#CCCCCC">set logic</font><font color="#E5E5E5"> you're looking for</font><font color="#CCCCCC"> places</font>

76
00:02:56,450 --> 00:03:00,649
where access controls<font color="#E5E5E5"> aren't implemented</font>

77
00:02:57,859 --> 00:03:06,379
<font color="#E5E5E5">properly vertical privilege escalation</font>

78
00:03:00,650 --> 00:03:08,090
horizontal things like that so<font color="#E5E5E5"> that's a</font>

79
00:03:06,379 --> 00:03:11,629
<font color="#E5E5E5">standard web app but</font><font color="#CCCCCC"> when you</font><font color="#E5E5E5"> introduce</font>

80
00:03:08,090 --> 00:03:15,190
<font color="#E5E5E5">the DAP the decentralized part you have</font>

81
00:03:11,629 --> 00:03:17,630
a third component<font color="#CCCCCC"> to it a little kitty</font>

82
00:03:15,190 --> 00:03:19,280
there really is a smart contract<font color="#CCCCCC"> or a</font>

83
00:03:17,630 --> 00:03:21,410
series of smart contracts<font color="#E5E5E5"> in aetherium</font>

84
00:03:19,280 --> 00:03:23,269
so not<font color="#CCCCCC"> only do</font><font color="#E5E5E5"> you have the interaction</font>

85
00:03:21,410 --> 00:03:24,760
with the<font color="#CCCCCC"> web application but you also</font>

86
00:03:23,269 --> 00:03:27,889
have this<font color="#CCCCCC"> thing called</font><font color="#E5E5E5"> a smart</font><font color="#CCCCCC"> contract</font>

87
00:03:24,760 --> 00:03:31,370
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> like web 3 apps that we're</font>

88
00:03:27,889 --> 00:03:32,510
talking<font color="#CCCCCC"> about essentially so the</font>

89
00:03:31,370 --> 00:03:34,280
workflow<font color="#CCCCCC"> of</font><font color="#E5E5E5"> one might look like this</font>

90
00:03:32,510 --> 00:03:36,078
<font color="#CCCCCC">you'll do the</font><font color="#E5E5E5"> Gator post like you</font>

91
00:03:34,280 --> 00:03:39,379
normally<font color="#E5E5E5"> would to the web application</font>

92
00:03:36,079 --> 00:03:41,419
<font color="#E5E5E5">but</font><font color="#CCCCCC"> then there's a read or write to a</font>

93
00:03:39,379 --> 00:03:43,250
smart contract<font color="#CCCCCC"> in the blockchain so it's</font>

94
00:03:41,419 --> 00:03:45,049
not just<font color="#CCCCCC"> going</font><font color="#E5E5E5"> straight to a database</font>

95
00:03:43,250 --> 00:03:48,379
<font color="#E5E5E5">and then back to you there might be this</font>

96
00:03:45,049 --> 00:03:51,169
level<font color="#CCCCCC"> of indirection</font><font color="#E5E5E5"> where the web app</font>

97
00:03:48,379 --> 00:03:54,698
talks to the smart contract<font color="#CCCCCC"> and this is</font>

98
00:03:51,169 --> 00:03:57,079
kind of where new attack vectors come in

99
00:03:54,699 --> 00:03:58,250
after<font color="#E5E5E5"> the reader right then the data</font>

100
00:03:57,079 --> 00:03:59,799
would come back<font color="#E5E5E5"> to you at the end of</font>

101
00:03:58,250 --> 00:04:02,799
that so it<font color="#E5E5E5"> makes sense to everyone oh</font>

102
00:03:59,799 --> 00:04:02,799
<font color="#E5E5E5">cool</font>

103
00:04:03,510 --> 00:04:08,319
so the point<font color="#E5E5E5"> of being able to use adapt</font>

104
00:04:06,310 --> 00:04:09,579
<font color="#E5E5E5">or being able to interact with</font><font color="#CCCCCC"> aetherium</font>

105
00:04:08,319 --> 00:04:11,679
smart contracts through a web

106
00:04:09,579 --> 00:04:14,019
application<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that you need to</font><font color="#CCCCCC"> have a</font>

107
00:04:11,680 --> 00:04:15,639
<font color="#CCCCCC">private key involved somewhere right</font><font color="#E5E5E5"> you</font>

108
00:04:14,019 --> 00:04:17,168
need<font color="#E5E5E5"> to own your private key and be able</font>

109
00:04:15,639 --> 00:04:19,570
<font color="#CCCCCC">to</font><font color="#E5E5E5"> use it through this web application</font>

110
00:04:17,168 --> 00:04:22,780
<font color="#CCCCCC">that ultimately talks to a smart</font>

111
00:04:19,570 --> 00:04:24,310
contract<font color="#E5E5E5"> so block chains are based on</font>

112
00:04:22,780 --> 00:04:26,739
public key crypto so how do you how do

113
00:04:24,310 --> 00:04:28,240
you<font color="#E5E5E5"> get a</font><font color="#CCCCCC"> private key involved</font><font color="#E5E5E5"> right so</font>

114
00:04:26,740 --> 00:04:29,770
traditionally if you<font color="#E5E5E5"> weren't going</font>

115
00:04:28,240 --> 00:04:31,690
<font color="#E5E5E5">through a web application you could</font>

116
00:04:29,770 --> 00:04:33,849
publish<font color="#E5E5E5"> a transaction</font><font color="#CCCCCC"> onto the</font><font color="#E5E5E5"> ethereum</font>

117
00:04:31,690 --> 00:04:36,690
<font color="#E5E5E5">blockchain</font><font color="#CCCCCC"> by signing the raw</font><font color="#E5E5E5"> bytes</font>

118
00:04:33,849 --> 00:04:40,210
<font color="#E5E5E5">offline and sending it to</font><font color="#CCCCCC"> a third</font><font color="#E5E5E5"> party</font>

119
00:04:36,690 --> 00:04:41,440
<font color="#CCCCCC">node like in Fuhrer for example</font><font color="#E5E5E5"> or you</font>

120
00:04:40,210 --> 00:04:44,620
can run<font color="#E5E5E5"> a node yourself</font><font color="#CCCCCC"> sign a</font>

121
00:04:41,440 --> 00:04:46,030
transaction<font color="#E5E5E5"> broadcasted it yourself but</font>

122
00:04:44,620 --> 00:04:48,220
through a web application how do you

123
00:04:46,030 --> 00:04:51,280
introduce public key cryptography with a

124
00:04:48,220 --> 00:04:53,229
private key you<font color="#E5E5E5"> own and that goes</font><font color="#CCCCCC"> altom</font>

125
00:04:51,280 --> 00:04:56,650
<font color="#CCCCCC">Utley to</font><font color="#E5E5E5"> wear a</font><font color="#CCCCCC"> sign</font><font color="#E5E5E5"> message ultimately</font>

126
00:04:53,229 --> 00:04:59,020
goes to<font color="#E5E5E5"> the etherion blockchain so one</font>

127
00:04:56,650 --> 00:05:01,198
way to do that is through meta<font color="#CCCCCC"> mask</font><font color="#E5E5E5"> so</font>

128
00:04:59,020 --> 00:05:03,280
meta<font color="#E5E5E5"> mask is a very popular</font><font color="#CCCCCC"> in browser</font>

129
00:05:01,199 --> 00:05:05,979
extension<font color="#E5E5E5"> I think it's something like</font>

130
00:05:03,280 --> 00:05:08,530
<font color="#E5E5E5">1.5 million total downloads</font><font color="#CCCCCC"> so so far</font>

131
00:05:05,979 --> 00:05:11,139
between Chrome and Firefox<font color="#E5E5E5"> and it's a</font>

132
00:05:08,530 --> 00:05:13,359
wallet<font color="#CCCCCC"> in your browser so you</font><font color="#E5E5E5"> can</font>

133
00:05:11,139 --> 00:05:15,039
interact with<font color="#E5E5E5"> these steps by having your</font>

134
00:05:13,360 --> 00:05:17,530
<font color="#E5E5E5">own wallet</font><font color="#CCCCCC"> as a Chrome extension</font><font color="#E5E5E5"> or as a</font>

135
00:05:15,039 --> 00:05:22,630
Firefox extension<font color="#E5E5E5"> sign things have them</font>

136
00:05:17,530 --> 00:05:24,429
go<font color="#E5E5E5"> through the</font><font color="#CCCCCC"> dab</font><font color="#E5E5E5"> like that so this</font><font color="#CCCCCC"> is</font>

137
00:05:22,630 --> 00:05:26,469
kind of what it would<font color="#E5E5E5"> look like this</font>

138
00:05:24,430 --> 00:05:27,909
would be the extension<font color="#E5E5E5"> it would pop out</font>

139
00:05:26,470 --> 00:05:30,419
<font color="#CCCCCC">like this when you click on</font><font color="#E5E5E5"> it you have</font>

140
00:05:27,909 --> 00:05:32,680
a password<font color="#CCCCCC"> to seal your your wallet and</font>

141
00:05:30,419 --> 00:05:33,909
this is adapt the crypto<font color="#CCCCCC"> Kitty staff</font>

142
00:05:32,680 --> 00:05:37,060
that everyone's familiar with<font color="#E5E5E5"> at</font><font color="#CCCCCC"> least</font>

143
00:05:33,909 --> 00:05:39,270
on some<font color="#CCCCCC"> level</font><font color="#E5E5E5"> so if you wanted to buy</font>

144
00:05:37,060 --> 00:05:41,800
<font color="#CCCCCC">this</font><font color="#E5E5E5"> Kitty for example you would</font>

145
00:05:39,270 --> 00:05:44,620
<font color="#E5E5E5">authenticate to</font><font color="#CCCCCC"> your wallet</font>

146
00:05:41,800 --> 00:05:46,990
<font color="#CCCCCC">you'd unlock the wallet</font><font color="#E5E5E5"> and you click OK</font>

147
00:05:44,620 --> 00:05:49,570
buy this Kitty and<font color="#E5E5E5"> when you do you get</font>

148
00:05:46,990 --> 00:05:51,340
<font color="#E5E5E5">the arguments needed to buy the</font><font color="#CCCCCC"> Kitty</font><font color="#E5E5E5"> so</font>

149
00:05:49,570 --> 00:05:53,469
meta<font color="#CCCCCC"> mattes will then populate the</font>

150
00:05:51,340 --> 00:05:55,599
arguments you need the amount<font color="#E5E5E5"> of</font><font color="#CCCCCC"> eath to</font>

151
00:05:53,469 --> 00:05:57,190
pay for that<font color="#E5E5E5"> kitty the destination which</font>

152
00:05:55,599 --> 00:05:58,840
<font color="#CCCCCC">is the crypto Kitty smart contract</font><font color="#E5E5E5"> and</font>

153
00:05:57,190 --> 00:06:01,690
all that and<font color="#E5E5E5"> you can click Submit</font><font color="#CCCCCC"> or</font>

154
00:05:58,840 --> 00:06:04,210
reject<font color="#E5E5E5"> but clicking that basically</font>

155
00:06:01,690 --> 00:06:06,370
prompts you in your<font color="#E5E5E5"> Chrome extension the</font>

156
00:06:04,210 --> 00:06:08,198
meta mask<font color="#E5E5E5"> extension so this is how you</font>

157
00:06:06,370 --> 00:06:10,900
can have<font color="#E5E5E5"> your own identity</font><font color="#CCCCCC"> your own</font>

158
00:06:08,199 --> 00:06:13,260
private key<font color="#E5E5E5"> in your browser interacting</font>

159
00:06:10,900 --> 00:06:13,260
<font color="#CCCCCC">with a DEP</font>

160
00:06:13,810 --> 00:06:17,449
so this is what the smart<font color="#CCCCCC"> contract on</font>

161
00:06:16,159 --> 00:06:18,379
the<font color="#E5E5E5"> back end would look like this is for</font>

162
00:06:17,449 --> 00:06:20,960
the crypto<font color="#CCCCCC"> kiddies</font>

163
00:06:18,379 --> 00:06:23,060
smart contract<font color="#E5E5E5"> you see this array</font><font color="#CCCCCC"> of</font>

164
00:06:20,960 --> 00:06:25,960
kiddie objects there's a<font color="#CCCCCC"> kiddie index -</font>

165
00:06:23,060 --> 00:06:28,310
<font color="#E5E5E5">owner mapping</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> ultimately when you</font>

166
00:06:25,960 --> 00:06:29,688
sign<font color="#CCCCCC"> the transaction when you send the</font>

167
00:06:28,310 --> 00:06:31,280
<font color="#CCCCCC">eath and you send</font><font color="#E5E5E5"> it to the appropriate</font>

168
00:06:29,689 --> 00:06:34,009
<font color="#E5E5E5">function like we just showed a second</font>

169
00:06:31,280 --> 00:06:35,840
ago these<font color="#E5E5E5"> data structures get updated on</font>

170
00:06:34,009 --> 00:06:38,870
the smart contract<font color="#CCCCCC"> so that's kind of the</font>

171
00:06:35,840 --> 00:06:40,669
workflow<font color="#CCCCCC"> goes</font><font color="#E5E5E5"> from the web application</font>

172
00:06:38,870 --> 00:06:42,650
you saw it gives you an interface a nice

173
00:06:40,669 --> 00:06:45,049
clean interface<font color="#E5E5E5"> to interact</font><font color="#CCCCCC"> with the</font>

174
00:06:42,650 --> 00:06:46,549
smart<font color="#CCCCCC"> contract you send the transaction</font>

175
00:06:45,050 --> 00:06:48,500
through<font color="#CCCCCC"> metamath and then this</font>

176
00:06:46,550 --> 00:06:50,360
ultimately gets updated on the

177
00:06:48,500 --> 00:06:55,550
blockchain<font color="#E5E5E5"> these these arguments the</font>

178
00:06:50,360 --> 00:06:57,340
these data structures<font color="#CCCCCC"> rather so this is</font>

179
00:06:55,550 --> 00:07:00,889
<font color="#E5E5E5">just a gif of going through the workflow</font>

180
00:06:57,340 --> 00:07:02,299
<font color="#CCCCCC">and actually you're</font><font color="#E5E5E5"> gonna see me</font><font color="#CCCCCC"> buy a</font>

181
00:07:00,889 --> 00:07:03,860
<font color="#E5E5E5">kitty and I actually had to buy the</font>

182
00:07:02,300 --> 00:07:07,219
<font color="#E5E5E5">kitty</font><font color="#CCCCCC"> for this demo so</font><font color="#E5E5E5"> now I have this</font>

183
00:07:03,860 --> 00:07:08,419
kitty<font color="#CCCCCC"> so I don't even</font><font color="#E5E5E5"> know what it's</font>

184
00:07:07,219 --> 00:07:10,969
<font color="#E5E5E5">called</font><font color="#CCCCCC"> a good sire</font>

185
00:07:08,419 --> 00:07:14,719
so<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> buy this kitty you see the</font>

186
00:07:10,969 --> 00:07:18,169
<font color="#E5E5E5">prompt come up I click Submit and now</font><font color="#CCCCCC"> I</font>

187
00:07:14,719 --> 00:07:19,940
am<font color="#CCCCCC"> the proud owner of good sire and good</font>

188
00:07:18,169 --> 00:07:22,430
sires for sale<font color="#CCCCCC"> so if anyone wants good</font>

189
00:07:19,940 --> 00:07:25,000
sire please<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> to me after the talk</font>

190
00:07:22,430 --> 00:07:26,990
yeah<font color="#CCCCCC"> give you a</font><font color="#E5E5E5"> good deal</font><font color="#CCCCCC"> on good sire</font>

191
00:07:25,000 --> 00:07:29,629
now it's also a good time<font color="#CCCCCC"> to tell you</font>

192
00:07:26,990 --> 00:07:32,690
I'm giving<font color="#E5E5E5"> away</font><font color="#CCCCCC"> eath</font><font color="#E5E5E5"> so send me</font><font color="#CCCCCC"> point</font>

193
00:07:29,629 --> 00:07:36,319
<font color="#CCCCCC">5/8 and I will send you back</font><font color="#E5E5E5"> much I'm</font>

194
00:07:32,690 --> 00:07:37,729
<font color="#CCCCCC">not giving away</font><font color="#E5E5E5"> okay but let's talk</font>

195
00:07:36,319 --> 00:07:39,110
<font color="#CCCCCC">about</font><font color="#E5E5E5"> how you can set</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> a DAP in a</font>

196
00:07:37,729 --> 00:07:43,188
local<font color="#CCCCCC"> environment so you</font><font color="#E5E5E5"> can do this</font>

197
00:07:39,110 --> 00:07:47,870
<font color="#E5E5E5">test in yourself now so who's heard of</font>

198
00:07:43,189 --> 00:07:49,129
truffle here okay so truffle is a smart

199
00:07:47,870 --> 00:07:51,409
contract development and testing

200
00:07:49,129 --> 00:07:53,449
framework it's made<font color="#E5E5E5"> by consensus which</font>

201
00:07:51,409 --> 00:07:55,219
has<font color="#E5E5E5"> really been a trailblazer in this</font>

202
00:07:53,449 --> 00:07:57,169
<font color="#CCCCCC">industry</font><font color="#E5E5E5"> making great tools for</font>

203
00:07:55,219 --> 00:07:59,900
developing<font color="#E5E5E5"> smart contracts developing</font>

204
00:07:57,169 --> 00:08:01,520
gaps<font color="#CCCCCC"> but</font><font color="#E5E5E5"> if you want to test created app</font>

205
00:07:59,900 --> 00:08:03,650
locally<font color="#E5E5E5"> that you can test with burp</font>

206
00:08:01,520 --> 00:08:05,779
suite for example look<font color="#E5E5E5"> up truffle and</font>

207
00:08:03,650 --> 00:08:07,580
there's a<font color="#CCCCCC"> petshop</font><font color="#E5E5E5"> tutorial so that</font>

208
00:08:05,779 --> 00:08:10,069
tutorial<font color="#E5E5E5"> tells you step by step how</font><font color="#CCCCCC"> to</font>

209
00:08:07,580 --> 00:08:11,539
make<font color="#CCCCCC"> a</font><font color="#E5E5E5"> DAP how to make the web</font>

210
00:08:10,069 --> 00:08:13,729
application<font color="#CCCCCC"> front-end and</font><font color="#E5E5E5"> the smart</font>

211
00:08:11,539 --> 00:08:15,469
<font color="#CCCCCC">contract behind</font><font color="#E5E5E5"> it and</font><font color="#CCCCCC"> you just</font>

212
00:08:13,729 --> 00:08:19,550
ultimately<font color="#CCCCCC"> run this command below but</font>

213
00:08:15,469 --> 00:08:21,229
you<font color="#E5E5E5"> should look into that so when you</font>

214
00:08:19,550 --> 00:08:23,360
have that<font color="#CCCCCC"> local environment set up</font><font color="#E5E5E5"> this</font>

215
00:08:21,229 --> 00:08:25,310
is<font color="#E5E5E5"> Pete's pet shop you'll see meta mask</font>

216
00:08:23,360 --> 00:08:26,240
<font color="#CCCCCC">you'll</font><font color="#E5E5E5"> need meta Massa interact with it</font>

217
00:08:25,310 --> 00:08:29,030
still you'll see

218
00:08:26,240 --> 00:08:33,760
is installed in my browser<font color="#CCCCCC"> on the</font><font color="#E5E5E5"> top</font>

219
00:08:29,030 --> 00:08:35,838
<font color="#E5E5E5">right</font><font color="#CCCCCC"> and what happens when meta mask is</font>

220
00:08:33,760 --> 00:08:37,610
communicating with so meta<font color="#CCCCCC"> mattes</font><font color="#E5E5E5"> you</font>

221
00:08:35,839 --> 00:08:39,140
<font color="#E5E5E5">can give it the</font><font color="#CCCCCC"> blockchain to which or</font>

222
00:08:37,610 --> 00:08:42,050
<font color="#E5E5E5">the provider rather the node provider</font>

223
00:08:39,140 --> 00:08:43,189
<font color="#E5E5E5">that you you want to interact with</font>

224
00:08:42,049 --> 00:08:44,779
ultimately so this is a local

225
00:08:43,190 --> 00:08:46,970
<font color="#CCCCCC">environment</font><font color="#E5E5E5"> so I'm running the etherium</font>

226
00:08:44,779 --> 00:08:49,149
blockchain<font color="#E5E5E5"> on just</font><font color="#CCCCCC"> localhost</font><font color="#E5E5E5"> seven five</font>

227
00:08:46,970 --> 00:08:51,860
<font color="#E5E5E5">four five it can communicate</font><font color="#CCCCCC"> with that</font>

228
00:08:49,149 --> 00:08:53,899
every<font color="#CCCCCC"> ten seconds or</font><font color="#E5E5E5"> so meta mask</font>

229
00:08:51,860 --> 00:08:55,910
queries out it does<font color="#E5E5E5"> if get blocked by</font>

230
00:08:53,899 --> 00:08:57,890
number right<font color="#E5E5E5"> that's madam at some way of</font>

231
00:08:55,910 --> 00:08:59,420
saying<font color="#E5E5E5"> okay this is the blockchain I'm</font>

232
00:08:57,890 --> 00:09:01,250
supposed<font color="#CCCCCC"> to be interacting with</font><font color="#E5E5E5"> I need</font>

233
00:08:59,420 --> 00:09:03,050
to know the latest<font color="#E5E5E5"> block</font><font color="#CCCCCC"> I need to know</font>

234
00:09:01,250 --> 00:09:05,029
the most<font color="#E5E5E5"> recent information about the</font>

235
00:09:03,050 --> 00:09:07,189
accounts<font color="#E5E5E5"> and this wallet</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> everything</font>

236
00:09:05,029 --> 00:09:08,570
else<font color="#E5E5E5"> so every ten seconds you'll see a</font>

237
00:09:07,190 --> 00:09:11,779
<font color="#E5E5E5">request if you</font><font color="#CCCCCC"> were intercepting a</font>

238
00:09:08,570 --> 00:09:13,459
requests to wherever that provider is

239
00:09:11,779 --> 00:09:15,380
and trying to see<font color="#E5E5E5"> what the most recent</font>

240
00:09:13,459 --> 00:09:17,510
block is to get the most<font color="#E5E5E5"> recent</font>

241
00:09:15,380 --> 00:09:19,550
<font color="#E5E5E5">information that's how that's how a</font>

242
00:09:17,510 --> 00:09:21,500
<font color="#CCCCCC">madam asked works on any blocks when you</font>

243
00:09:19,550 --> 00:09:26,599
<font color="#CCCCCC">provided essentially any aetherium plug</font>

244
00:09:21,500 --> 00:09:30,320
chain so again this is the this is what

245
00:09:26,600 --> 00:09:32,000
<font color="#E5E5E5">the</font><font color="#CCCCCC"> petshop looks like and this is the</font>

246
00:09:30,320 --> 00:09:33,260
<font color="#CCCCCC">JavaScript</font><font color="#E5E5E5"> that handles the adoption</font>

247
00:09:32,000 --> 00:09:34,910
function so I told you<font color="#E5E5E5"> again there was</font>

248
00:09:33,260 --> 00:09:37,160
like a web application<font color="#E5E5E5"> portion and in</font>

249
00:09:34,910 --> 00:09:39,230
the smart contract portion right so if

250
00:09:37,160 --> 00:09:41,600
you were to<font color="#E5E5E5"> click for example adopt</font>

251
00:09:39,230 --> 00:09:44,899
<font color="#CCCCCC">Frieda this first dog right here what</font>

252
00:09:41,600 --> 00:09:47,750
you'd be calling is<font color="#E5E5E5"> handle</font><font color="#CCCCCC"> duct</font><font color="#E5E5E5"> and what</font>

253
00:09:44,899 --> 00:09:50,110
handle adopt<font color="#CCCCCC"> does you can see below</font><font color="#E5E5E5"> does</font>

254
00:09:47,750 --> 00:09:52,850
app contracts adoption<font color="#CCCCCC"> deploy then</font>

255
00:09:50,110 --> 00:09:55,310
basically call the adopt function<font color="#E5E5E5"> on</font>

256
00:09:52,850 --> 00:09:56,930
<font color="#E5E5E5">that contract artifact so it recognized</font>

257
00:09:55,310 --> 00:09:58,250
the contract because it was<font color="#E5E5E5"> developed in</font>

258
00:09:56,930 --> 00:10:01,550
truffle<font color="#CCCCCC"> it's got a really nice</font><font color="#E5E5E5"> interface</font>

259
00:09:58,250 --> 00:10:03,800
<font color="#E5E5E5">and it just calls the smart contract</font>

260
00:10:01,550 --> 00:10:05,660
function adopts ultimately<font color="#E5E5E5"> so this is</font>

261
00:10:03,800 --> 00:10:09,319
kind of a bridge between<font color="#CCCCCC"> the JavaScript</font>

262
00:10:05,660 --> 00:10:10,550
<font color="#E5E5E5">to smart contract and this is actually</font>

263
00:10:09,320 --> 00:10:12,589
the contract behind<font color="#E5E5E5"> it so this</font><font color="#CCCCCC"> is the</font>

264
00:10:10,550 --> 00:10:14,060
<font color="#E5E5E5">smart</font><font color="#CCCCCC"> contract so when Handel adopt is</font>

265
00:10:12,589 --> 00:10:16,040
called we saw it called the adopt

266
00:10:14,060 --> 00:10:17,149
function that's<font color="#E5E5E5"> the function</font><font color="#CCCCCC"> that's</font>

267
00:10:16,040 --> 00:10:20,660
<font color="#CCCCCC">actually being</font><font color="#E5E5E5"> called this is a smart</font>

268
00:10:17,149 --> 00:10:24,709
<font color="#CCCCCC">contract</font><font color="#E5E5E5"> it's set it accepts a pet ID</font>

269
00:10:20,660 --> 00:10:26,060
<font color="#CCCCCC">Frieda was</font><font color="#E5E5E5"> pet zero so it would check</font>

270
00:10:24,709 --> 00:10:28,399
that<font color="#CCCCCC"> the pet ID is in within</font><font color="#E5E5E5"> range</font>

271
00:10:26,060 --> 00:10:31,399
there's only<font color="#CCCCCC"> 16 pets</font><font color="#E5E5E5"> and then it would</font>

272
00:10:28,399 --> 00:10:34,640
update<font color="#E5E5E5"> the data structure to</font><font color="#CCCCCC"> reflect</font>

273
00:10:31,399 --> 00:10:36,440
that<font color="#E5E5E5"> the adopter of</font><font color="#CCCCCC"> Frieda</font><font color="#E5E5E5"> is the person</font>

274
00:10:34,640 --> 00:10:38,529
<font color="#E5E5E5">sending this message so</font><font color="#CCCCCC"> that would be us</font>

275
00:10:36,440 --> 00:10:41,439
when we send that transaction

276
00:10:38,529 --> 00:10:43,659
so that's the<font color="#CCCCCC"> entire workflow</font><font color="#E5E5E5"> so before</font>

277
00:10:41,439 --> 00:10:45,279
I actually<font color="#E5E5E5"> adopt</font><font color="#CCCCCC"> Freda</font><font color="#E5E5E5"> this is the</font>

278
00:10:43,659 --> 00:10:47,109
adopters array right here you'll<font color="#E5E5E5"> see</font>

279
00:10:45,279 --> 00:10:48,129
that every adopter is just the<font color="#CCCCCC"> zero</font>

280
00:10:47,109 --> 00:10:51,149
address because<font color="#E5E5E5"> no one's actually</font>

281
00:10:48,129 --> 00:10:51,149
adopted anything yet

282
00:10:52,259 --> 00:10:59,229
but as<font color="#E5E5E5"> soon as I click adopt I submit</font>

283
00:10:56,979 --> 00:11:01,119
the transaction<font color="#CCCCCC"> I noticed I</font><font color="#E5E5E5"> don't need</font>

284
00:10:59,229 --> 00:11:03,279
to pay any for this because<font color="#CCCCCC"> it was free</font>

285
00:11:01,119 --> 00:11:05,409
the contract didn't say require the

286
00:11:03,279 --> 00:11:07,389
<font color="#E5E5E5">value being sent to be above this</font>

287
00:11:05,409 --> 00:11:10,409
certain amount it's free you<font color="#CCCCCC"> just</font><font color="#E5E5E5"> click</font>

288
00:11:07,389 --> 00:11:16,209
<font color="#E5E5E5">it and you adopt</font><font color="#CCCCCC"> frita you click Submit</font>

289
00:11:10,409 --> 00:11:19,479
and then you'll see if you checked<font color="#E5E5E5"> that</font>

290
00:11:16,209 --> 00:11:21,399
data<font color="#E5E5E5"> structure again</font><font color="#CCCCCC"> that array the</font>

291
00:11:19,479 --> 00:11:22,419
<font color="#E5E5E5">first index now corresponds to the</font>

292
00:11:21,399 --> 00:11:24,909
address from which we sent that

293
00:11:22,419 --> 00:11:26,679
transaction<font color="#CCCCCC"> so that data structure</font><font color="#E5E5E5"> was</font>

294
00:11:24,909 --> 00:11:34,059
updated to<font color="#E5E5E5"> reflect that we are the owner</font>

295
00:11:26,679 --> 00:11:36,249
of<font color="#CCCCCC"> frida so what</font><font color="#E5E5E5"> does that transaction</font>

296
00:11:34,059 --> 00:11:38,439
actually<font color="#E5E5E5"> look</font><font color="#CCCCCC"> like if</font><font color="#E5E5E5"> you if you took it</font>

297
00:11:36,249 --> 00:11:40,299
if you looked at<font color="#CCCCCC"> it</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> birth so I just</font>

298
00:11:38,439 --> 00:11:41,769
<font color="#E5E5E5">showed you</font><font color="#CCCCCC"> Mehta</font><font color="#E5E5E5"> mask coming up and you</font>

299
00:11:40,299 --> 00:11:44,049
<font color="#E5E5E5">click and submit if you intercepted that</font>

300
00:11:41,769 --> 00:11:46,089
transaction<font color="#E5E5E5"> you would see the from</font>

301
00:11:44,049 --> 00:11:48,369
address<font color="#E5E5E5"> right there right the to</font><font color="#CCCCCC"> address</font>

302
00:11:46,089 --> 00:11:50,979
is the smart contract address<font color="#E5E5E5"> the value</font>

303
00:11:48,369 --> 00:11:52,059
and<font color="#CCCCCC"> data and I'll get into this more but</font>

304
00:11:50,979 --> 00:11:54,479
it's very simple<font color="#E5E5E5"> there's only four or</font>

305
00:11:52,059 --> 00:11:58,419
five fields that you need<font color="#CCCCCC"> to worry about</font>

306
00:11:54,479 --> 00:12:02,289
so you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> see from</font><font color="#CCCCCC"> two value data gas</font>

307
00:11:58,419 --> 00:12:04,089
<font color="#CCCCCC">gas price so from is</font><font color="#E5E5E5"> my</font><font color="#CCCCCC"> aetherium</font>

308
00:12:02,289 --> 00:12:07,779
address the one that's being populated

309
00:12:04,089 --> 00:12:09,729
<font color="#E5E5E5">in that</font><font color="#CCCCCC"> a in the</font><font color="#E5E5E5"> in the array two is a</font>

310
00:12:07,779 --> 00:12:14,759
smart contract address<font color="#CCCCCC"> the adoption</font>

311
00:12:09,729 --> 00:12:17,889
contract that<font color="#E5E5E5"> has the pet the pet array</font>

312
00:12:14,759 --> 00:12:19,329
value is<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> again because it we didn't</font>

313
00:12:17,889 --> 00:12:22,539
charge that this contract<font color="#E5E5E5"> didn't charge</font>

314
00:12:19,329 --> 00:12:27,399
anything<font color="#CCCCCC"> for the pets</font><font color="#E5E5E5"> and data was his</font>

315
00:12:22,539 --> 00:12:29,949
number<font color="#E5E5E5"> hex hex value at</font><font color="#CCCCCC"> 85 etc</font><font color="#E5E5E5"> right so</font>

316
00:12:27,399 --> 00:12:31,359
let's break that down<font color="#E5E5E5"> a little bit why</font>

317
00:12:29,949 --> 00:12:35,679
was this<font color="#E5E5E5"> the data we sent to that smart</font>

318
00:12:31,359 --> 00:12:38,609
contract it's because we call<font color="#CCCCCC"> the</font>

319
00:12:35,679 --> 00:12:38,608
function adopt<font color="#E5E5E5"> right</font>

320
00:12:39,089 --> 00:12:44,339
the first<font color="#CCCCCC"> four bytes of data in a in the</font>

321
00:12:42,059 --> 00:12:47,339
data field or the function<font color="#E5E5E5"> identifier so</font>

322
00:12:44,339 --> 00:12:49,529
it's the hash of the function name<font color="#E5E5E5"> and</font>

323
00:12:47,339 --> 00:12:50,939
the kind<font color="#E5E5E5"> of arguments it accepts and you</font>

324
00:12:49,529 --> 00:12:53,189
can take the<font color="#E5E5E5"> first four bytes of that</font>

325
00:12:50,939 --> 00:12:54,598
hash<font color="#E5E5E5"> that is how you tell</font><font color="#CCCCCC"> the smart</font>

326
00:12:53,189 --> 00:12:56,909
contract<font color="#CCCCCC"> of what function you</font><font color="#E5E5E5"> want to</font>

327
00:12:54,599 --> 00:12:59,309
<font color="#E5E5E5">interact with so that's what's taking</font>

328
00:12:56,909 --> 00:13:01,379
<font color="#CCCCCC">place the first four bytes</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the data</font>

329
00:12:59,309 --> 00:13:02,879
parameter<font color="#E5E5E5"> that we provided is the</font>

330
00:13:01,379 --> 00:13:06,449
function identifier of the adopt

331
00:13:02,879 --> 00:13:09,089
function<font color="#E5E5E5"> so once</font><font color="#CCCCCC"> a smart contract gets</font>

332
00:13:06,449 --> 00:13:10,589
that it says<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> are the four</font>

333
00:13:09,089 --> 00:13:12,449
bytes<font color="#CCCCCC"> yep</font><font color="#E5E5E5"> I know that one that's the</font>

334
00:13:10,589 --> 00:13:14,009
<font color="#E5E5E5">adopt function I'm gonna send this over</font>

335
00:13:12,449 --> 00:13:16,679
to<font color="#E5E5E5"> the adopt function and then</font><font color="#CCCCCC"> it takes</font>

336
00:13:14,009 --> 00:13:18,449
<font color="#E5E5E5">the rest of that data field and it</font>

337
00:13:16,679 --> 00:13:21,598
populates<font color="#E5E5E5"> and it does whatever else it</font>

338
00:13:18,449 --> 00:13:24,959
needs to the argument<font color="#CCCCCC"> it accepted again</font>

339
00:13:21,599 --> 00:13:26,669
<font color="#E5E5E5">was was a pet ID and we adopted</font><font color="#CCCCCC"> Frieda</font>

340
00:13:24,959 --> 00:13:28,199
<font color="#E5E5E5">which was the zero with pet so you'll</font>

341
00:13:26,669 --> 00:13:30,119
notice<font color="#E5E5E5"> that</font><font color="#CCCCCC"> after the function</font>

342
00:13:28,199 --> 00:13:33,089
identifier it's just<font color="#CCCCCC"> zeros right</font>

343
00:13:30,119 --> 00:13:34,979
that means we're calling adopt<font color="#E5E5E5"> because</font>

344
00:13:33,089 --> 00:13:36,449
we have these<font color="#E5E5E5"> first four bytes here we</font>

345
00:13:34,979 --> 00:13:38,419
stripped<font color="#CCCCCC"> that away</font><font color="#E5E5E5"> and the rest</font><font color="#CCCCCC"> is just</font>

346
00:13:36,449 --> 00:13:42,269
<font color="#E5E5E5">zero okay that means you're adopting</font>

347
00:13:38,419 --> 00:13:42,659
zero<font color="#E5E5E5"> you're adopting Frieda does that</font>

348
00:13:42,269 --> 00:13:50,789
make sense

349
00:13:42,659 --> 00:13:52,169
cool so this<font color="#E5E5E5"> is a really</font><font color="#CCCCCC"> bad slide in</font>

350
00:13:50,789 --> 00:13:54,718
hindsight<font color="#E5E5E5"> because you can't see my mouse</font>

351
00:13:52,169 --> 00:13:56,339
<font color="#E5E5E5">but things like cross-site scripting</font>

352
00:13:54,719 --> 00:13:58,649
<font color="#E5E5E5">become a lot more dangerous with</font><font color="#CCCCCC"> apps</font>

353
00:13:56,339 --> 00:14:01,469
because what you can<font color="#CCCCCC"> do is you can</font>

354
00:13:58,649 --> 00:14:03,089
manipulate meta<font color="#CCCCCC"> masks ultimately to send</font>

355
00:14:01,469 --> 00:14:05,309
a transaction<font color="#CCCCCC"> to somewhere you wouldn't</font>

356
00:14:03,089 --> 00:14:07,499
expect<font color="#E5E5E5"> and it's not immediately obvious</font>

357
00:14:05,309 --> 00:14:08,939
<font color="#E5E5E5">where you're sending</font><font color="#CCCCCC"> the transaction to</font>

358
00:14:07,499 --> 00:14:12,689
with meta<font color="#E5E5E5"> masks implemented the way</font><font color="#CCCCCC"> it</font>

359
00:14:08,939 --> 00:14:14,728
is currently<font color="#E5E5E5"> so what's happening here is</font>

360
00:14:12,689 --> 00:14:15,959
I'm<font color="#CCCCCC"> actually hovering</font><font color="#E5E5E5"> my mouse over</font><font color="#CCCCCC"> that</font>

361
00:14:14,729 --> 00:14:18,029
adopt button there but I'm<font color="#CCCCCC"> not</font><font color="#E5E5E5"> actually</font>

362
00:14:15,959 --> 00:14:20,789
clicking anything<font color="#E5E5E5"> and when I hover my</font>

363
00:14:18,029 --> 00:14:23,729
<font color="#CCCCCC">mouse it prompts meta mash to pop up and</font>

364
00:14:20,789 --> 00:14:27,449
say<font color="#CCCCCC"> oh please</font><font color="#E5E5E5"> send some ether here right</font>

365
00:14:23,729 --> 00:14:30,299
<font color="#E5E5E5">so if a</font><font color="#CCCCCC"> malicious person gets JavaScript</font>

366
00:14:27,449 --> 00:14:31,649
on to adapt what<font color="#CCCCCC"> it'll</font><font color="#E5E5E5"> happen is that</font>

367
00:14:30,299 --> 00:14:33,169
they can<font color="#E5E5E5"> get your meta mask to pop up</font>

368
00:14:31,649 --> 00:14:35,189
with<font color="#CCCCCC"> a transaction and you might think</font>

369
00:14:33,169 --> 00:14:36,598
<font color="#CCCCCC">while I was</font><font color="#E5E5E5"> expecting</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I'm asked to</font>

370
00:14:35,189 --> 00:14:38,309
<font color="#CCCCCC">come up because</font><font color="#E5E5E5"> I wanted to make a</font>

371
00:14:36,599 --> 00:14:40,469
transaction<font color="#CCCCCC"> on the site</font><font color="#E5E5E5"> but in reality</font>

372
00:14:38,309 --> 00:14:43,468
the destination<font color="#E5E5E5"> addresses to one</font>

373
00:14:40,469 --> 00:14:45,889
<font color="#E5E5E5">attacker</font><font color="#CCCCCC"> Ellen's so it's a little</font><font color="#E5E5E5"> bit</font>

374
00:14:43,469 --> 00:14:48,749
trickier because<font color="#E5E5E5"> you're trusting this</font>

375
00:14:45,889 --> 00:14:50,489
extension<font color="#E5E5E5"> and the extension can seem</font>

376
00:14:48,749 --> 00:14:51,779
legitimate because<font color="#E5E5E5"> it's kind</font><font color="#CCCCCC"> of outside</font>

377
00:14:50,489 --> 00:14:52,710
the<font color="#E5E5E5"> realm of the site but in reality</font>

378
00:14:51,779 --> 00:14:55,410
it's<font color="#E5E5E5"> malicious</font>

379
00:14:52,710 --> 00:14:59,610
the script that's that's making it come

380
00:14:55,410 --> 00:15:01,680
up<font color="#CCCCCC"> there was</font><font color="#E5E5E5"> actually an instance of</font>

381
00:14:59,610 --> 00:15:04,680
<font color="#E5E5E5">this in the wild</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> John showed me</font>

382
00:15:01,680 --> 00:15:11,280
<font color="#E5E5E5">John do wanna stand up say</font><font color="#CCCCCC"> hi this is</font>

383
00:15:04,680 --> 00:15:14,189
John<font color="#CCCCCC"> basically ether Delta decentralized</font>

384
00:15:11,280 --> 00:15:17,189
exchange had<font color="#CCCCCC"> cross-site scripting</font>

385
00:15:14,190 --> 00:15:18,560
vulnerability where<font color="#E5E5E5"> III also allows you</font>

386
00:15:17,190 --> 00:15:23,040
to<font color="#E5E5E5"> trade tokens between two different</font>

387
00:15:18,560 --> 00:15:25,650
tokens essentially and these<font color="#CCCCCC"> tokens</font><font color="#E5E5E5"> when</font>

388
00:15:23,040 --> 00:15:27,839
they're listed<font color="#E5E5E5"> on the site their fields</font>

389
00:15:25,650 --> 00:15:30,750
populate on the site<font color="#E5E5E5"> so things like</font>

390
00:15:27,840 --> 00:15:35,010
their name<font color="#CCCCCC"> their</font><font color="#E5E5E5"> symbol etc so there was</font>

391
00:15:30,750 --> 00:15:37,140
an attacker who took who made a smart

392
00:15:35,010 --> 00:15:39,390
<font color="#E5E5E5">contract published it and in their name</font>

393
00:15:37,140 --> 00:15:40,760
field<font color="#CCCCCC"> their ERC 20 token</font><font color="#E5E5E5"> they made it</font>

394
00:15:39,390 --> 00:15:44,430
some malicious<font color="#E5E5E5"> JavaScript</font>

395
00:15:40,760 --> 00:15:49,170
so when ether<font color="#E5E5E5"> Delta pulled the basically</font>

396
00:15:44,430 --> 00:15:51,989
<font color="#E5E5E5">the ERC 20 basically every part of the</font>

397
00:15:49,170 --> 00:15:54,150
ERC 20 protocol from from the contract

398
00:15:51,990 --> 00:15:56,130
<font color="#E5E5E5">they loaded in this malicious</font><font color="#CCCCCC"> javascript</font>

399
00:15:54,150 --> 00:15:58,520
from<font color="#CCCCCC"> a smart contract onto their page</font>

400
00:15:56,130 --> 00:16:00,810
and what that<font color="#E5E5E5"> javascript did ultimately</font>

401
00:15:58,520 --> 00:16:02,400
<font color="#E5E5E5">was it</font><font color="#CCCCCC"> sense</font>

402
00:16:00,810 --> 00:16:05,250
<font color="#E5E5E5">whoever's private key they uploaded to</font>

403
00:16:02,400 --> 00:16:07,230
the site it<font color="#E5E5E5"> sense all their ether to</font>

404
00:16:05,250 --> 00:16:08,730
another wallet<font color="#E5E5E5"> so again it was</font><font color="#CCCCCC"> in the</font>

405
00:16:07,230 --> 00:16:10,410
name field<font color="#E5E5E5"> there was some JavaScript</font>

406
00:16:08,730 --> 00:16:12,240
there and it was loaded into the site

407
00:16:10,410 --> 00:16:13,680
and that was an<font color="#CCCCCC"> example</font><font color="#E5E5E5"> of how</font>

408
00:16:12,240 --> 00:16:15,450
cross-site scripting<font color="#E5E5E5"> is really dangerous</font>

409
00:16:13,680 --> 00:16:21,900
when you're dealing<font color="#E5E5E5"> with private keys</font>

410
00:16:15,450 --> 00:16:23,670
and meta<font color="#CCCCCC"> masks for example so again</font>

411
00:16:21,900 --> 00:16:24,750
there's the web application logic and

412
00:16:23,670 --> 00:16:26,550
<font color="#E5E5E5">then there's also this third part the</font>

413
00:16:24,750 --> 00:16:27,990
<font color="#E5E5E5">smart contract</font><font color="#CCCCCC"> and the important</font><font color="#E5E5E5"> part</font>

414
00:16:26,550 --> 00:16:30,469
<font color="#E5E5E5">about the parts</font><font color="#CCCCCC"> mark contract is</font><font color="#E5E5E5"> that</font>

415
00:16:27,990 --> 00:16:32,700
it's public so<font color="#E5E5E5"> it's publicly accessible</font>

416
00:16:30,470 --> 00:16:34,050
<font color="#E5E5E5">there's no rule that says</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have to</font>

417
00:16:32,700 --> 00:16:36,600
interact<font color="#E5E5E5"> with</font><font color="#CCCCCC"> the smart with the smart</font>

418
00:16:34,050 --> 00:16:39,030
contract<font color="#E5E5E5"> through the web application you</font>

419
00:16:36,600 --> 00:16:40,110
<font color="#E5E5E5">can go directly</font><font color="#CCCCCC"> to smart contract which</font>

420
00:16:39,030 --> 00:16:43,560
introduces<font color="#E5E5E5"> a whole set</font><font color="#CCCCCC"> of other</font>

421
00:16:40,110 --> 00:16:45,330
<font color="#CCCCCC">vulnerabilities</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> web application</font>

422
00:16:43,560 --> 00:16:46,349
<font color="#CCCCCC">might have a really</font><font color="#E5E5E5"> well defined way in</font>

423
00:16:45,330 --> 00:16:47,550
which you<font color="#E5E5E5"> can interact that smart</font>

424
00:16:46,350 --> 00:16:49,260
contract but<font color="#E5E5E5"> there might be a glaring</font>

425
00:16:47,550 --> 00:16:50,849
vulnerability in that smart<font color="#E5E5E5"> contract</font>

426
00:16:49,260 --> 00:16:52,680
that<font color="#E5E5E5"> you'd only notice if you went to</font>

427
00:16:50,850 --> 00:16:55,740
the<font color="#CCCCCC"> byte code</font><font color="#E5E5E5"> directly so there's kind</font>

428
00:16:52,680 --> 00:16:58,229
of another attack<font color="#E5E5E5"> vector we're</font><font color="#CCCCCC"> gonna</font>

429
00:16:55,740 --> 00:17:00,210
<font color="#E5E5E5">discuss so smart contracts kind of serve</font>

430
00:16:58,230 --> 00:17:01,800
as another<font color="#E5E5E5"> data store they're publicly</font>

431
00:17:00,210 --> 00:17:03,600
accessible and it's like everyone wrote

432
00:17:01,800 --> 00:17:05,129
their own version of<font color="#CCCCCC"> that software to</font>

433
00:17:03,600 --> 00:17:06,300
<font color="#E5E5E5">store that</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> because no to smart</font>

434
00:17:05,130 --> 00:17:08,010
contracts are really the same

435
00:17:06,300 --> 00:17:10,829
right<font color="#E5E5E5"> you have a bunch of people</font><font color="#CCCCCC"> making</font>

436
00:17:08,010 --> 00:17:14,460
<font color="#E5E5E5">smart contracts storing ether in there</font>

437
00:17:10,829 --> 00:17:16,829
storing valuable customer data<font color="#E5E5E5"> and they</font>

438
00:17:14,460 --> 00:17:18,510
can<font color="#CCCCCC"> make</font><font color="#E5E5E5"> it really</font><font color="#CCCCCC"> they're making it</font>

439
00:17:16,829 --> 00:17:20,069
themselves<font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> not like there's one</font>

440
00:17:18,510 --> 00:17:21,240
<font color="#CCCCCC">single instance of software people are</font>

441
00:17:20,069 --> 00:17:23,399
using to store this data that's been

442
00:17:21,240 --> 00:17:25,220
tried and<font color="#E5E5E5"> true every single smart</font>

443
00:17:23,400 --> 00:17:27,270
contract is a little different<font color="#CCCCCC"> so</font>

444
00:17:25,220 --> 00:17:30,420
<font color="#CCCCCC">there's a lot</font><font color="#E5E5E5"> of vulnerabilities with</font>

445
00:17:27,270 --> 00:17:31,500
that as you as you've<font color="#E5E5E5"> seen so you kind</font>

446
00:17:30,420 --> 00:17:32,730
of have this<font color="#E5E5E5"> two-pronged approach you</font>

447
00:17:31,500 --> 00:17:34,290
<font color="#E5E5E5">can attack</font><font color="#CCCCCC"> the dab through the web</font>

448
00:17:32,730 --> 00:17:36,060
application<font color="#CCCCCC"> but you</font><font color="#E5E5E5"> can also attack it</font>

449
00:17:34,290 --> 00:17:44,159
<font color="#CCCCCC">directly by going to the smart contracts</font>

450
00:17:36,060 --> 00:17:45,659
as<font color="#CCCCCC"> well so beyond</font><font color="#E5E5E5"> that there's kind of a</font>

451
00:17:44,160 --> 00:17:47,970
third prong<font color="#E5E5E5"> and I'm gonna talk</font><font color="#CCCCCC"> about</font>

452
00:17:45,660 --> 00:17:50,400
<font color="#E5E5E5">that in</font><font color="#CCCCCC"> a second it's going through</font><font color="#E5E5E5"> the</font>

453
00:17:47,970 --> 00:17:53,370
web application<font color="#E5E5E5"> to</font><font color="#CCCCCC"> get to the smart</font>

454
00:17:50,400 --> 00:17:55,400
<font color="#CCCCCC">contract in</font><font color="#E5E5E5"> a different way there's this</font>

455
00:17:53,370 --> 00:17:58,919
concept<font color="#E5E5E5"> of modifiers and smart contracts</font>

456
00:17:55,400 --> 00:18:01,290
where only certain<font color="#CCCCCC"> etherium addresses</font>

457
00:17:58,920 --> 00:18:02,730
can issue the transaction<font color="#E5E5E5"> you're denied</font>

458
00:18:01,290 --> 00:18:08,070
if you're not able if you don't have

459
00:18:02,730 --> 00:18:10,590
that appropriate key right so only owner

460
00:18:08,070 --> 00:18:12,149
is an example<font color="#E5E5E5"> of this only</font><font color="#CCCCCC"> an owner can</font>

461
00:18:10,590 --> 00:18:13,350
<font color="#E5E5E5">only the owner of the contract can</font>

462
00:18:12,150 --> 00:18:16,890
update this field in<font color="#E5E5E5"> the smart contract</font>

463
00:18:13,350 --> 00:18:20,870
<font color="#CCCCCC">for example a lot</font><font color="#E5E5E5"> of these</font><font color="#CCCCCC"> DAB's</font><font color="#E5E5E5"> rely</font><font color="#CCCCCC"> on</font>

464
00:18:16,890 --> 00:18:24,120
a special key in the web<font color="#E5E5E5"> application</font><font color="#CCCCCC"> to</font>

465
00:18:20,870 --> 00:18:27,330
<font color="#CCCCCC">issue privileged rights to the smart</font>

466
00:18:24,120 --> 00:18:30,389
<font color="#CCCCCC">contract</font><font color="#E5E5E5"> based on the</font><font color="#CCCCCC"> clients data</font><font color="#E5E5E5"> so I</font>

467
00:18:27,330 --> 00:18:32,790
make a<font color="#CCCCCC"> getter</font><font color="#E5E5E5"> post request and the web</font>

468
00:18:30,390 --> 00:18:34,350
application will say<font color="#E5E5E5"> okay I'm gonna use</font>

469
00:18:32,790 --> 00:18:37,500
<font color="#E5E5E5">my privileged key to write this to the</font>

470
00:18:34,350 --> 00:18:40,199
privileged spot in a smart<font color="#CCCCCC"> contract so</font>

471
00:18:37,500 --> 00:18:41,840
it's not<font color="#CCCCCC"> just what you can do directly</font>

472
00:18:40,200 --> 00:18:45,210
<font color="#E5E5E5">to the smart contract</font><font color="#CCCCCC"> but can you</font><font color="#E5E5E5"> also</font>

473
00:18:41,840 --> 00:18:47,159
get the web application to<font color="#CCCCCC"> make a</font>

474
00:18:45,210 --> 00:18:48,480
<font color="#E5E5E5">privileged write on your behalf can you</font>

475
00:18:47,160 --> 00:18:48,810
trick<font color="#CCCCCC"> him into thinking you are</font><font color="#E5E5E5"> the</font>

476
00:18:48,480 --> 00:18:52,200
owner

477
00:18:48,810 --> 00:18:56,940
<font color="#CCCCCC">bye-bye buzzing the.you know the</font><font color="#E5E5E5"> access</font>

478
00:18:52,200 --> 00:18:58,140
<font color="#E5E5E5">controls of that web app so</font><font color="#CCCCCC"> it's kind of</font>

479
00:18:56,940 --> 00:19:01,010
a<font color="#E5E5E5"> three pronged approach</font><font color="#CCCCCC"> what can you</font>

480
00:18:58,140 --> 00:19:03,930
get<font color="#E5E5E5"> the web the web app</font><font color="#CCCCCC"> to return to you</font>

481
00:19:01,010 --> 00:19:06,930
just<font color="#E5E5E5"> regular web application penetration</font>

482
00:19:03,930 --> 00:19:08,340
test<font color="#E5E5E5"> what</font><font color="#CCCCCC"> boner ability</font><font color="#E5E5E5"> can you find by</font>

483
00:19:06,930 --> 00:19:10,860
<font color="#E5E5E5">accident</font><font color="#CCCCCC"> the smart accessing the</font><font color="#E5E5E5"> smart</font>

484
00:19:08,340 --> 00:19:12,449
contract<font color="#CCCCCC"> directly and then can</font><font color="#E5E5E5"> you get</font>

485
00:19:10,860 --> 00:19:14,879
the web app<font color="#E5E5E5"> to interact</font><font color="#CCCCCC"> with a smart</font>

486
00:19:12,450 --> 00:19:20,409
<font color="#CCCCCC">contract in a way it didn't expect so as</font>

487
00:19:14,880 --> 00:19:23,330
an owner<font color="#E5E5E5"> as a privileged key essentially</font>

488
00:19:20,409 --> 00:19:24,799
so this is an example of kind<font color="#CCCCCC"> of how you</font>

489
00:19:23,330 --> 00:19:28,460
would<font color="#CCCCCC"> use how</font><font color="#E5E5E5"> you would sign something</font>

490
00:19:24,799 --> 00:19:30,950
<font color="#E5E5E5">in crypto</font><font color="#CCCCCC"> kitties this is how you would</font>

491
00:19:28,460 --> 00:19:32,840
prove<font color="#E5E5E5"> your ownership of a certain</font>

492
00:19:30,950 --> 00:19:34,519
<font color="#E5E5E5">address right you would sign</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> message</font>

493
00:19:32,840 --> 00:19:36,470
<font color="#E5E5E5">they give you a message to sign and</font>

494
00:19:34,519 --> 00:19:38,119
you'd sign<font color="#CCCCCC"> it and</font><font color="#E5E5E5"> they see</font><font color="#CCCCCC"> okay this</font>

495
00:19:36,470 --> 00:19:42,409
<font color="#E5E5E5">signature matches the etherium</font><font color="#CCCCCC"> direct</font>

496
00:19:38,119 --> 00:19:44,720
address that we're<font color="#E5E5E5"> seeing from you so in</font>

497
00:19:42,409 --> 00:19:46,340
a pen test<font color="#E5E5E5"> you'd want</font><font color="#CCCCCC"> to verify</font><font color="#E5E5E5"> that</font>

498
00:19:44,720 --> 00:19:48,499
that signature validation is actually

499
00:19:46,340 --> 00:19:50,299
being done<font color="#E5E5E5"> correctly if you</font><font color="#CCCCCC"> could</font><font color="#E5E5E5"> just</font>

500
00:19:48,499 --> 00:19:51,769
pop out<font color="#E5E5E5"> the etherium address</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you're</font>

501
00:19:50,299 --> 00:19:54,259
providing it and replace it<font color="#CCCCCC"> with another</font>

502
00:19:51,769 --> 00:19:56,779
<font color="#E5E5E5">one basically say hey I'm not this with</font>

503
00:19:54,259 --> 00:19:57,950
your<font color="#E5E5E5"> name address I'm this one and you</font>

504
00:19:56,779 --> 00:19:59,119
provide a signature that doesn't

505
00:19:57,950 --> 00:20:00,590
<font color="#E5E5E5">actually match</font><font color="#CCCCCC"> up to that if</font><font color="#E5E5E5"> your name</font>

506
00:19:59,119 --> 00:20:02,509
<font color="#E5E5E5">address you</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to make</font><font color="#CCCCCC"> sure that the</font>

507
00:20:00,590 --> 00:20:05,119
web application is validating that that

508
00:20:02,509 --> 00:20:06,499
they're<font color="#E5E5E5"> saying</font><font color="#CCCCCC"> okay that doesn't</font>

509
00:20:05,119 --> 00:20:09,199
<font color="#CCCCCC">actually match up we're</font><font color="#E5E5E5"> not gonna allow</font>

510
00:20:06,499 --> 00:20:10,159
you to<font color="#E5E5E5"> sign in I've actually done this</font>

511
00:20:09,200 --> 00:20:12,109
before<font color="#E5E5E5"> where I've been able</font><font color="#CCCCCC"> to</font>

512
00:20:10,159 --> 00:20:13,369
impersonate<font color="#E5E5E5"> someone else</font><font color="#CCCCCC"> or create a</font>

513
00:20:12,109 --> 00:20:15,080
denial of service for that person if

514
00:20:13,369 --> 00:20:16,908
they ever wanted<font color="#E5E5E5"> to sign up because I</font>

515
00:20:15,080 --> 00:20:18,889
said<font color="#CCCCCC"> I intercepted the request</font><font color="#E5E5E5"> which</font>

516
00:20:16,909 --> 00:20:21,830
I'll show you<font color="#E5E5E5"> in</font><font color="#CCCCCC"> a second and I replace</font>

517
00:20:18,889 --> 00:20:23,748
my<font color="#CCCCCC"> aetherium address with theirs so this</font>

518
00:20:21,830 --> 00:20:26,539
is an example<font color="#E5E5E5"> so if you sign if you were</font>

519
00:20:23,749 --> 00:20:27,889
to<font color="#E5E5E5"> sign up</font><font color="#CCCCCC"> for example</font><font color="#E5E5E5"> you would provide</font>

520
00:20:26,539 --> 00:20:29,480
<font color="#E5E5E5">an</font><font color="#CCCCCC"> aetherium address that you're saying</font>

521
00:20:27,889 --> 00:20:32,029
<font color="#E5E5E5">I want</font><font color="#CCCCCC"> to sign</font><font color="#E5E5E5"> up as and you'd</font><font color="#CCCCCC"> provide a</font>

522
00:20:29,480 --> 00:20:33,320
<font color="#E5E5E5">signature of a phrase that that you</font>

523
00:20:32,029 --> 00:20:36,049
would<font color="#E5E5E5"> both know like crypto kitties in</font>

524
00:20:33,320 --> 00:20:38,359
this case what the<font color="#CCCCCC"> DAP should be doing</font>

525
00:20:36,049 --> 00:20:42,559
is<font color="#CCCCCC"> validating that that</font><font color="#E5E5E5"> address matches</font>

526
00:20:38,359 --> 00:20:44,809
<font color="#CCCCCC">with that signature</font><font color="#E5E5E5"> so if you recite was</font>

527
00:20:42,559 --> 00:20:47,359
a different address<font color="#CCCCCC"> would</font><font color="#E5E5E5"> the DAP reject</font>

528
00:20:44,809 --> 00:20:52,759
you ultimately I found<font color="#CCCCCC"> AB</font><font color="#E5E5E5"> swear that is</font>

529
00:20:47,359 --> 00:20:55,039
<font color="#E5E5E5">the case</font><font color="#CCCCCC"> well that's not the case too so</font>

530
00:20:52,759 --> 00:20:56,720
cryptic ladies is that<font color="#E5E5E5"> properly so that</font>

531
00:20:55,039 --> 00:20:58,009
was good<font color="#CCCCCC"> to see but when you're</font><font color="#E5E5E5"> already</font>

532
00:20:56,720 --> 00:20:59,389
authenticated so that's how you sign in

533
00:20:58,009 --> 00:21:00,619
right you can use a private<font color="#E5E5E5"> key when</font>

534
00:20:59,389 --> 00:21:03,049
you're already authenticated you can do

535
00:21:00,619 --> 00:21:05,119
things<font color="#E5E5E5"> like go to settings here and you</font>

536
00:21:03,049 --> 00:21:06,859
can change some variables about who you

537
00:21:05,119 --> 00:21:08,299
are<font color="#CCCCCC"> right and this is kind of that</font>

538
00:21:06,859 --> 00:21:10,039
duality<font color="#CCCCCC"> of web applications not</font>

539
00:21:08,299 --> 00:21:12,918
<font color="#E5E5E5">everything you change about your account</font>

540
00:21:10,039 --> 00:21:14,929
or your profile requires a signature<font color="#E5E5E5"> so</font>

541
00:21:12,919 --> 00:21:16,609
at some point it<font color="#E5E5E5"> becomes a regular web</font>

542
00:21:14,929 --> 00:21:18,230
application right if you have a cookie

543
00:21:16,609 --> 00:21:19,908
<font color="#CCCCCC">you</font><font color="#E5E5E5"> can change things about</font><font color="#CCCCCC"> yourself</font>

544
00:21:18,230 --> 00:21:22,549
<font color="#E5E5E5">sometimes without requiring a</font><font color="#CCCCCC"> password</font>

545
00:21:19,909 --> 00:21:24,499
for<font color="#E5E5E5"> a DAP it's like if you have a</font><font color="#CCCCCC"> cookie</font>

546
00:21:22,549 --> 00:21:26,269
<font color="#CCCCCC">or if it doesn't require a signature</font>

547
00:21:24,499 --> 00:21:28,009
<font color="#E5E5E5">then you can do things without requiring</font>

548
00:21:26,269 --> 00:21:30,590
<font color="#CCCCCC">a signature again so</font><font color="#E5E5E5"> stealing someone's</font>

549
00:21:28,009 --> 00:21:32,360
cookie might allow you to do<font color="#E5E5E5"> things in</font>

550
00:21:30,590 --> 00:21:35,750
that DAP<font color="#CCCCCC"> without actually having the</font>

551
00:21:32,360 --> 00:21:38,149
private key again so if I were<font color="#E5E5E5"> to change</font>

552
00:21:35,750 --> 00:21:39,740
my email<font color="#E5E5E5"> or my nickname for example like</font>

553
00:21:38,150 --> 00:21:42,320
here<font color="#E5E5E5"> you'll see it doesn't require a</font>

554
00:21:39,740 --> 00:21:44,120
signature<font color="#CCCCCC"> anywhere so this is nothing I</font>

555
00:21:42,320 --> 00:21:46,040
mean<font color="#E5E5E5"> changing my nickname to Miao</font><font color="#CCCCCC"> is not</font>

556
00:21:44,120 --> 00:21:47,928
going to cause big<font color="#E5E5E5"> problems for me if an</font>

557
00:21:46,040 --> 00:21:50,659
attacker did that<font color="#E5E5E5"> but it's an example of</font>

558
00:21:47,929 --> 00:21:52,250
where this<font color="#CCCCCC"> duality exists</font><font color="#E5E5E5"> not everything</font>

559
00:21:50,660 --> 00:21:54,080
in adapt relies on<font color="#E5E5E5"> public key</font>

560
00:21:52,250 --> 00:21:56,179
cryptography<font color="#CCCCCC"> some of it is just a web</font>

561
00:21:54,080 --> 00:22:00,320
regular web application

562
00:21:56,179 --> 00:22:01,549
<font color="#E5E5E5">so there's that</font><font color="#CCCCCC"> duality there so I'll</font>

563
00:22:00,320 --> 00:22:03,139
give an example<font color="#E5E5E5"> of</font><font color="#CCCCCC"> another one</font><font color="#E5E5E5"> that's</font>

564
00:22:01,549 --> 00:22:04,580
another<font color="#CCCCCC"> DAP that's designed with</font>

565
00:22:03,140 --> 00:22:05,720
<font color="#CCCCCC">security in mind</font><font color="#E5E5E5"> and I'll talk about why</font>

566
00:22:04,580 --> 00:22:07,370
<font color="#CCCCCC">these best practices are kind of</font>

567
00:22:05,720 --> 00:22:08,570
<font color="#CCCCCC">implemented there so you can understand</font>

568
00:22:07,370 --> 00:22:11,629
the<font color="#E5E5E5"> attack vectors that they're</font>

569
00:22:08,570 --> 00:22:15,980
defending<font color="#E5E5E5"> against so</font><font color="#CCCCCC"> Blum is a really</font>

570
00:22:11,630 --> 00:22:17,480
big app<font color="#E5E5E5"> it's a big big DAP and it's a</font>

571
00:22:15,980 --> 00:22:21,440
good example<font color="#CCCCCC"> of this</font><font color="#E5E5E5"> if you guys want to</font>

572
00:22:17,480 --> 00:22:23,510
check<font color="#E5E5E5"> it out it's at bloom</font><font color="#CCCCCC"> Koh so this</font>

573
00:22:21,440 --> 00:22:25,100
is kind of<font color="#CCCCCC"> a</font><font color="#E5E5E5"> sign-up</font><font color="#CCCCCC"> process</font><font color="#E5E5E5"> you would</font>

574
00:22:23,510 --> 00:22:32,210
<font color="#CCCCCC">enter your</font><font color="#E5E5E5"> name your phone number and</font>

575
00:22:25,100 --> 00:22:33,199
email address<font color="#CCCCCC"> and then it will tell you</font>

576
00:22:32,210 --> 00:22:34,760
what you did what you what you're doing

577
00:22:33,200 --> 00:22:36,890
<font color="#CCCCCC">right so you're signing</font><font color="#E5E5E5"> your email or</font>

578
00:22:34,760 --> 00:22:38,780
you're signing the message rather to

579
00:22:36,890 --> 00:22:41,630
prove ownership of the the<font color="#E5E5E5"> key kind of</font>

580
00:22:38,780 --> 00:22:44,178
like we saw with<font color="#E5E5E5"> kind of like we saw</font>

581
00:22:41,630 --> 00:22:47,630
with group that Katie's a second ago so

582
00:22:44,179 --> 00:22:48,770
nothing new there<font color="#E5E5E5"> so the validation</font>

583
00:22:47,630 --> 00:22:50,809
takes place against the signature<font color="#E5E5E5"> and</font>

584
00:22:48,770 --> 00:22:53,450
the<font color="#E5E5E5"> etherium address you provide</font><font color="#CCCCCC"> but</font>

585
00:22:50,809 --> 00:22:55,160
when you sign in you're providing not

586
00:22:53,450 --> 00:22:57,169
only the<font color="#E5E5E5"> signature but what you're</font>

587
00:22:55,160 --> 00:23:01,190
signing includes the date and your email

588
00:22:57,169 --> 00:23:04,429
address<font color="#E5E5E5"> right so does anyone know why</font>

589
00:23:01,190 --> 00:23:05,900
you would be signing<font color="#E5E5E5"> the date and your</font>

590
00:23:04,429 --> 00:23:06,590
email address<font color="#E5E5E5"> when you want to sign in</font>

591
00:23:05,900 --> 00:23:08,120
<font color="#CCCCCC">to the</font><font color="#E5E5E5"> DAP</font>

592
00:23:06,590 --> 00:23:14,209
what does the date have to do with a

593
00:23:08,120 --> 00:23:15,770
<font color="#E5E5E5">signature right exactly yep so this</font>

594
00:23:14,210 --> 00:23:17,030
<font color="#E5E5E5">prevents replay attacks I'm gonna get</font>

595
00:23:15,770 --> 00:23:18,830
into<font color="#CCCCCC"> that in a second</font><font color="#E5E5E5"> so this is what if</font>

596
00:23:17,030 --> 00:23:21,230
you were to intercept<font color="#CCCCCC"> that request you'd</font>

597
00:23:18,830 --> 00:23:23,899
see the email address the signature<font color="#E5E5E5"> and</font>

598
00:23:21,230 --> 00:23:26,030
the date they<font color="#E5E5E5"> would validate that the</font>

599
00:23:23,900 --> 00:23:27,530
date is within a certain<font color="#CCCCCC"> range</font><font color="#E5E5E5"> first of</font>

600
00:23:26,030 --> 00:23:29,840
all it's signed properly the date is the

601
00:23:27,530 --> 00:23:31,668
<font color="#CCCCCC">same one of the server has and</font><font color="#E5E5E5"> that date</font>

602
00:23:29,840 --> 00:23:33,379
is<font color="#CCCCCC"> within a certain</font><font color="#E5E5E5"> amount of time so if</font>

603
00:23:31,669 --> 00:23:35,660
an attacker intercepted the signature of

604
00:23:33,380 --> 00:23:36,980
the sign in then they<font color="#E5E5E5"> couldn't actually</font>

605
00:23:35,660 --> 00:23:38,750
<font color="#E5E5E5">just replay at another time they</font>

606
00:23:36,980 --> 00:23:39,919
couldn't reply it in a year<font color="#CCCCCC"> or a week or</font>

607
00:23:38,750 --> 00:23:42,550
<font color="#E5E5E5">something like</font><font color="#CCCCCC"> that because it</font><font color="#E5E5E5"> wouldn't</font>

608
00:23:39,919 --> 00:23:45,020
<font color="#E5E5E5">be May 2018 anymore</font>

609
00:23:42,550 --> 00:23:46,310
so email address checks the wallet

610
00:23:45,020 --> 00:23:47,900
address tied to that<font color="#CCCCCC"> email addresses in</font>

611
00:23:46,310 --> 00:23:49,280
their servers<font color="#E5E5E5"> right it checks that</font>

612
00:23:47,900 --> 00:23:51,260
<font color="#E5E5E5">you're signing you're saying I'm signing</font>

613
00:23:49,280 --> 00:23:52,610
in as<font color="#E5E5E5"> this person wait a second let's</font>

614
00:23:51,260 --> 00:23:54,560
make sure that key matches<font color="#E5E5E5"> that person</font>

615
00:23:52,610 --> 00:23:56,870
and a day<font color="#E5E5E5"> to provide prevent replay</font>

616
00:23:54,560 --> 00:23:59,600
<font color="#E5E5E5">attacks so any DAP should have a</font>

617
00:23:56,870 --> 00:24:03,639
signature of the email<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the date</font><font color="#E5E5E5"> in</font>

618
00:23:59,600 --> 00:24:03,639
<font color="#CCCCCC">their signup and their</font><font color="#E5E5E5"> sign in rather</font>

619
00:24:05,470 --> 00:24:12,100
<font color="#E5E5E5">similarly inviting people gift might be</font>

620
00:24:11,180 --> 00:24:14,870
broken

621
00:24:12,100 --> 00:24:17,629
<font color="#CCCCCC">alright anyway</font><font color="#E5E5E5"> but similar a</font><font color="#CCCCCC"> similar</font>

622
00:24:14,870 --> 00:24:18,919
<font color="#CCCCCC">concept</font><font color="#E5E5E5"> when you invite</font><font color="#CCCCCC"> someone to</font><font color="#E5E5E5"> bloom</font>

623
00:24:17,630 --> 00:24:21,230
you have to sign<font color="#CCCCCC"> that person's email</font>

624
00:24:18,920 --> 00:24:22,850
<font color="#CCCCCC">address</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can validate okay</font><font color="#E5E5E5"> I actually</font>

625
00:24:21,230 --> 00:24:26,570
want<font color="#E5E5E5"> to sign this person invite this</font>

626
00:24:22,850 --> 00:24:27,679
person<font color="#E5E5E5"> and not this other person now</font>

627
00:24:26,570 --> 00:24:28,669
let's talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> that other prong that I</font>

628
00:24:27,680 --> 00:24:32,660
talked about attacking<font color="#E5E5E5"> the smart</font>

629
00:24:28,670 --> 00:24:34,820
contracts directly smart contracts have

630
00:24:32,660 --> 00:24:36,260
a whole host of popular vulnerabilities

631
00:24:34,820 --> 00:24:38,350
associated with them<font color="#E5E5E5"> there's a really</font>

632
00:24:36,260 --> 00:24:42,140
good site called -<font color="#CCCCCC"> no it's</font><font color="#E5E5E5"> like a wasp</font>

633
00:24:38,350 --> 00:24:44,179
<font color="#CCCCCC">but for etherium</font><font color="#E5E5E5"> and it talks about kind</font>

634
00:24:42,140 --> 00:24:45,740
<font color="#E5E5E5">of the top ten for aetherium I'm not</font>

635
00:24:44,180 --> 00:24:48,020
sure how those were chosen exactly<font color="#CCCCCC"> with</font>

636
00:24:45,740 --> 00:24:49,790
<font color="#CCCCCC">their very good examples re-entrance he</font>

637
00:24:48,020 --> 00:24:50,690
attacks<font color="#E5E5E5"> overflow and underflow denial of</font>

638
00:24:49,790 --> 00:24:55,190
service<font color="#E5E5E5"> these are all good examples</font>

639
00:24:50,690 --> 00:24:58,790
<font color="#E5E5E5">you'll find there I'll give an example</font>

640
00:24:55,190 --> 00:25:00,290
<font color="#E5E5E5">of an overflow</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> was a recent I think</font>

641
00:24:58,790 --> 00:25:02,570
three<font color="#CCCCCC"> months ago</font><font color="#E5E5E5"> four months ago</font>

642
00:25:00,290 --> 00:25:04,000
it's called batch overflow<font color="#CCCCCC"> a</font>

643
00:25:02,570 --> 00:25:07,250
<font color="#E5E5E5">vulnerability</font>

644
00:25:04,000 --> 00:25:09,830
<font color="#E5E5E5">basically these people implemented a</font>

645
00:25:07,250 --> 00:25:12,860
token<font color="#E5E5E5"> and they wanted</font><font color="#CCCCCC"> to make</font>

646
00:25:09,830 --> 00:25:14,659
transferring tokens<font color="#E5E5E5"> cost less gas by</font>

647
00:25:12,860 --> 00:25:16,520
batching the transaction into<font color="#E5E5E5"> one</font>

648
00:25:14,660 --> 00:25:18,830
transaction<font color="#E5E5E5"> rather than having</font>

649
00:25:16,520 --> 00:25:19,910
individual transfers individual

650
00:25:18,830 --> 00:25:22,699
transactions for every single

651
00:25:19,910 --> 00:25:23,720
<font color="#E5E5E5">transaction right for transfer rather so</font>

652
00:25:22,700 --> 00:25:26,390
what they<font color="#CCCCCC"> did</font><font color="#E5E5E5"> was they implemented this</font>

653
00:25:23,720 --> 00:25:27,950
batch transfer function so<font color="#E5E5E5"> you call</font><font color="#CCCCCC"> it</font>

654
00:25:26,390 --> 00:25:29,840
once<font color="#E5E5E5"> you have an array</font><font color="#CCCCCC"> of all the</font><font color="#E5E5E5"> people</font>

655
00:25:27,950 --> 00:25:33,320
you<font color="#E5E5E5"> want to receive a token</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you</font>

656
00:25:29,840 --> 00:25:35,510
provide the value unfortunately they

657
00:25:33,320 --> 00:25:37,159
didn't check<font color="#CCCCCC"> for an overflow so there's</font>

658
00:25:35,510 --> 00:25:40,970
an overflow vulnerability here in which

659
00:25:37,160 --> 00:25:42,680
the<font color="#CCCCCC"> attacker was able to basically Forge</font>

660
00:25:40,970 --> 00:25:43,970
the fact that<font color="#E5E5E5"> they don't have they got</font>

661
00:25:42,680 --> 00:25:45,790
to pretend that they had millions<font color="#E5E5E5"> of</font>

662
00:25:43,970 --> 00:25:48,440
<font color="#CCCCCC">dollars of tokens essentially</font><font color="#E5E5E5"> and that</font>

663
00:25:45,790 --> 00:25:51,830
<font color="#E5E5E5">DASCO site goes into this kind of</font><font color="#CCCCCC"> step</font>

664
00:25:48,440 --> 00:25:53,150
<font color="#E5E5E5">by step there's another one</font>

665
00:25:51,830 --> 00:25:55,580
so permissions we talked about<font color="#E5E5E5"> that</font>

666
00:25:53,150 --> 00:25:55,970
earlier<font color="#E5E5E5"> this an it wallet function this</font>

667
00:25:55,580 --> 00:25:59,030
is<font color="#CCCCCC"> in</font>

668
00:25:55,970 --> 00:26:00,650
<font color="#CCCCCC">charity</font><font color="#E5E5E5"> one of the parity issues this</font>

669
00:25:59,030 --> 00:26:02,720
didn't have any modifiers<font color="#E5E5E5"> associated</font>

670
00:26:00,650 --> 00:26:05,810
with it right this sets kind of the

671
00:26:02,720 --> 00:26:08,000
owner of<font color="#E5E5E5"> the wallet</font><font color="#CCCCCC"> and it sets who the</font>

672
00:26:05,810 --> 00:26:09,470
owners are so it wasn't in a constructor

673
00:26:08,000 --> 00:26:11,540
<font color="#CCCCCC">so it's not like it was only</font><font color="#E5E5E5"> called once</font>

674
00:26:09,470 --> 00:26:14,810
it was in a library<font color="#CCCCCC"> so anyone could call</font>

675
00:26:11,540 --> 00:26:15,830
<font color="#E5E5E5">this at any</font><font color="#CCCCCC"> point</font><font color="#E5E5E5"> and because anyone</font>

676
00:26:14,810 --> 00:26:17,450
could<font color="#E5E5E5"> call this at any</font><font color="#CCCCCC"> point you</font>

677
00:26:15,830 --> 00:26:19,040
definitely need<font color="#E5E5E5"> a modifier associated</font>

678
00:26:17,450 --> 00:26:20,660
with it so you could restrict who is

679
00:26:19,040 --> 00:26:22,700
<font color="#CCCCCC">able</font><font color="#E5E5E5"> to call it so if you're gonna</font>

680
00:26:20,660 --> 00:26:24,590
<font color="#CCCCCC">update</font><font color="#E5E5E5"> the ownership of the contract</font><font color="#CCCCCC"> you</font>

681
00:26:22,700 --> 00:26:26,000
need to make<font color="#CCCCCC"> sure the initial owner</font><font color="#E5E5E5"> was</font>

682
00:26:24,590 --> 00:26:26,570
<font color="#E5E5E5">the one sending that transaction in the</font>

683
00:26:26,000 --> 00:26:28,490
first place

684
00:26:26,570 --> 00:26:30,860
they didn't do that<font color="#CCCCCC"> so someone set</font>

685
00:26:28,490 --> 00:26:32,780
<font color="#E5E5E5">themself as the owner and blew the</font>

686
00:26:30,860 --> 00:26:35,090
<font color="#CCCCCC">entire thing up</font><font color="#E5E5E5"> these are</font><font color="#CCCCCC"> real-world</font>

687
00:26:32,780 --> 00:26:35,899
world problems<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> these are the kind</font>

688
00:26:35,090 --> 00:26:37,399
<font color="#CCCCCC">of owner abilities we're dealing with</font>

689
00:26:35,900 --> 00:26:39,680
<font color="#E5E5E5">right</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> very simple very</font>

690
00:26:37,400 --> 00:26:41,150
straightforward<font color="#E5E5E5"> so it'll be good</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have</font>

691
00:26:39,680 --> 00:26:46,300
all your<font color="#E5E5E5"> eyes on it after after this</font>

692
00:26:41,150 --> 00:26:49,190
talk hopefully symbolic execution<font color="#CCCCCC"> is</font>

693
00:26:46,300 --> 00:26:51,110
kind of<font color="#E5E5E5"> a really powerful tool</font><font color="#CCCCCC"> to use</font>

694
00:26:49,190 --> 00:26:52,820
towards auditing smart contracts I'm

695
00:26:51,110 --> 00:26:55,790
gonna go<font color="#E5E5E5"> over a brief example</font><font color="#CCCCCC"> of what it</font>

696
00:26:52,820 --> 00:26:59,060
<font color="#CCCCCC">is and some tools out there</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> employ</font>

697
00:26:55,790 --> 00:27:00,830
it so instead<font color="#CCCCCC"> of concrete</font><font color="#E5E5E5"> execution</font>

698
00:26:59,060 --> 00:27:03,470
<font color="#CCCCCC">where variables are given concrete</font>

699
00:27:00,830 --> 00:27:05,480
values like four or<font color="#CCCCCC"> five or six</font><font color="#E5E5E5"> mmm</font>

700
00:27:03,470 --> 00:27:07,910
symbolic execution allows you to parse

701
00:27:05,480 --> 00:27:10,760
<font color="#E5E5E5">through a program and provide a symbolic</font>

702
00:27:07,910 --> 00:27:12,860
<font color="#E5E5E5">value so it's not tied to</font><font color="#CCCCCC"> one value</font><font color="#E5E5E5"> but</font>

703
00:27:10,760 --> 00:27:15,890
basically a range of values<font color="#CCCCCC"> that</font><font color="#E5E5E5"> are</font>

704
00:27:12,860 --> 00:27:17,090
<font color="#E5E5E5">possible so when you're</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> through</font>

705
00:27:15,890 --> 00:27:20,030
the<font color="#CCCCCC"> program you fork</font><font color="#E5E5E5"> it every</font>

706
00:27:17,090 --> 00:27:21,949
conditional the the symbolic execution

707
00:27:20,030 --> 00:27:24,320
<font color="#E5E5E5">engine will essentially</font><font color="#CCCCCC"> fork</font><font color="#E5E5E5"> and</font>

708
00:27:21,950 --> 00:27:25,670
<font color="#CCCCCC">traverse every path and at the end of</font>

709
00:27:24,320 --> 00:27:27,860
<font color="#E5E5E5">that path when it gets to the end state</font>

710
00:27:25,670 --> 00:27:31,130
it'll<font color="#E5E5E5"> tell you the conditions necessary</font>

711
00:27:27,860 --> 00:27:33,860
to get<font color="#E5E5E5"> to that end</font><font color="#CCCCCC"> state so ultimately</font>

712
00:27:31,130 --> 00:27:36,140
you can find out a<font color="#CCCCCC"> way in which a smart</font>

713
00:27:33,860 --> 00:27:37,490
contract<font color="#CCCCCC"> could overflow by following</font><font color="#E5E5E5"> the</font>

714
00:27:36,140 --> 00:27:41,600
<font color="#CCCCCC">logic of what conditions</font><font color="#E5E5E5"> are necessary</font>

715
00:27:37,490 --> 00:27:43,330
<font color="#E5E5E5">to get there so here's an example this</font>

716
00:27:41,600 --> 00:27:46,189
is<font color="#CCCCCC"> from</font><font color="#E5E5E5"> Mark Mossberg at trail of bits</font>

717
00:27:43,330 --> 00:27:47,720
<font color="#CCCCCC">they're really</font><font color="#E5E5E5"> really great people at</font>

718
00:27:46,190 --> 00:27:50,600
auditing contracts and they've done<font color="#E5E5E5"> a</font>

719
00:27:47,720 --> 00:27:53,900
lot<font color="#CCCCCC"> of great development work if you had</font>

720
00:27:50,600 --> 00:27:56,360
a<font color="#E5E5E5"> concrete value here like</font><font color="#CCCCCC"> var was 45</font>

721
00:27:53,900 --> 00:27:59,150
<font color="#E5E5E5">right you'd skip the first part of the</font>

722
00:27:56,360 --> 00:28:00,949
conditional and you jump to<font color="#CCCCCC"> the else but</font>

723
00:27:59,150 --> 00:28:04,340
in a symbolic<font color="#E5E5E5"> if it was a sign of</font>

724
00:28:00,950 --> 00:28:06,860
symbolic value<font color="#E5E5E5"> rather when you get to</font>

725
00:28:04,340 --> 00:28:09,019
the<font color="#E5E5E5"> if</font><font color="#CCCCCC"> bar equals 42</font>

726
00:28:06,860 --> 00:28:11,149
<font color="#CCCCCC">the symbolic</font><font color="#E5E5E5"> engine would go through</font>

727
00:28:09,019 --> 00:28:12,649
<font color="#E5E5E5">that but it would also fork and it would</font>

728
00:28:11,149 --> 00:28:14,570
go<font color="#E5E5E5"> down the else as well</font><font color="#CCCCCC"> and it would</font>

729
00:28:12,649 --> 00:28:16,489
<font color="#CCCCCC">just keep in mind the values or</font><font color="#E5E5E5"> the</font>

730
00:28:14,570 --> 00:28:19,789
conditions rather that<font color="#E5E5E5"> it needed</font><font color="#CCCCCC"> to to</font>

731
00:28:16,490 --> 00:28:21,380
meet to get down that<font color="#CCCCCC"> path</font><font color="#E5E5E5"> so when it</font>

732
00:28:19,789 --> 00:28:22,549
gets<font color="#E5E5E5"> to the end it would say okay I had</font>

733
00:28:21,380 --> 00:28:24,860
to<font color="#CCCCCC"> meet this condition this condition</font>

734
00:28:22,549 --> 00:28:27,168
<font color="#CCCCCC">this condition</font><font color="#E5E5E5"> let's see if these three</font>

735
00:28:24,860 --> 00:28:28,729
conditions<font color="#E5E5E5"> are ever possible and if</font>

736
00:28:27,169 --> 00:28:30,230
values exists that meet all<font color="#E5E5E5"> those</font>

737
00:28:28,730 --> 00:28:33,799
conditions<font color="#E5E5E5"> then</font><font color="#CCCCCC"> you can get</font><font color="#E5E5E5"> to that end</font>

738
00:28:30,230 --> 00:28:37,340
state<font color="#E5E5E5"> ultimately it's another slide from</font>

739
00:28:33,799 --> 00:28:41,450
<font color="#E5E5E5">mark from</font><font color="#CCCCCC"> Trello bits</font><font color="#E5E5E5"> this is an example</font>

740
00:28:37,340 --> 00:28:44,090
<font color="#CCCCCC">of how that end state</font><font color="#E5E5E5"> calculation gets</font>

741
00:28:41,450 --> 00:28:46,010
done<font color="#E5E5E5"> so when these are</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> assigned when</font>

742
00:28:44,090 --> 00:28:48,439
you have a B and C assigned symbolic

743
00:28:46,010 --> 00:28:50,600
values<font color="#E5E5E5"> you can go down every path here</font>

744
00:28:48,440 --> 00:28:52,490
in this tree<font color="#E5E5E5"> and you'll get the end</font>

745
00:28:50,600 --> 00:28:54,139
States and the conditions<font color="#E5E5E5"> necessary to</font>

746
00:28:52,490 --> 00:28:55,519
get<font color="#E5E5E5"> to that end State so what we're</font>

747
00:28:54,139 --> 00:28:58,428
checking here is to see<font color="#E5E5E5"> if that</font>

748
00:28:55,519 --> 00:29:01,539
<font color="#E5E5E5">assertion ever fails right assert X plus</font>

749
00:28:58,429 --> 00:29:03,590
y plus<font color="#E5E5E5"> not Z or Z does not equal 3</font>

750
00:29:01,539 --> 00:29:07,908
<font color="#E5E5E5">there's a path in which that assertion</font>

751
00:29:03,590 --> 00:29:10,220
takes fails and it's when not a and<font color="#E5E5E5"> B is</font>

752
00:29:07,909 --> 00:29:11,990
<font color="#E5E5E5">less</font><font color="#CCCCCC"> than</font><font color="#E5E5E5"> 5 and sorry not those are</font>

753
00:29:10,220 --> 00:29:13,730
Greek letters<font color="#E5E5E5"> but when that takes</font><font color="#CCCCCC"> place</font>

754
00:29:11,990 --> 00:29:15,289
when those conditions<font color="#CCCCCC"> are met so that's</font>

755
00:29:13,730 --> 00:29:17,240
how<font color="#CCCCCC"> the symbolic execution engine works</font>

756
00:29:15,289 --> 00:29:20,000
<font color="#E5E5E5">it'll tell you okay I got to this a</font>

757
00:29:17,240 --> 00:29:23,090
search assert failing<font color="#E5E5E5"> if and only if</font>

758
00:29:20,000 --> 00:29:24,260
these criteria<font color="#CCCCCC"> are</font><font color="#E5E5E5"> met and then what's</font>

759
00:29:23,090 --> 00:29:26,870
called the constraint engine a

760
00:29:24,260 --> 00:29:27,950
constraint<font color="#E5E5E5"> solver will then tell</font><font color="#CCCCCC"> you if</font>

761
00:29:26,870 --> 00:29:30,799
those<font color="#E5E5E5"> constraints are solvable</font>

762
00:29:27,950 --> 00:29:33,230
essentially if that's a valid situation

763
00:29:30,799 --> 00:29:35,299
if that can happen<font color="#CCCCCC"> and the thing</font><font color="#E5E5E5"> about</font>

764
00:29:33,230 --> 00:29:37,610
symbolic execution<font color="#E5E5E5"> it's powerful against</font>

765
00:29:35,299 --> 00:29:41,000
smart contracts in particular less so

766
00:29:37,610 --> 00:29:42,320
for<font color="#E5E5E5"> things like sandbox for</font><font color="#CCCCCC"> sandboxes</font><font color="#E5E5E5"> so</font>

767
00:29:41,000 --> 00:29:43,549
in<font color="#E5E5E5"> sandbox is for example</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> would be</font>

768
00:29:42,320 --> 00:29:46,250
<font color="#E5E5E5">really valuable to be able to</font><font color="#CCCCCC"> traverse</font>

769
00:29:43,549 --> 00:29:48,559
<font color="#E5E5E5">every single path of a binary but the</font>

770
00:29:46,250 --> 00:29:51,370
issue is<font color="#E5E5E5"> when you're dealing with really</font>

771
00:29:48,559 --> 00:29:54,230
<font color="#E5E5E5">large binaries that are importing</font><font color="#CCCCCC"> VLS</font>

772
00:29:51,370 --> 00:29:56,299
<font color="#E5E5E5">with thousands of lines of code it's</font>

773
00:29:54,230 --> 00:29:58,789
difficult<font color="#E5E5E5"> we'd run out of computing</font>

774
00:29:56,299 --> 00:30:00,590
resources<font color="#CCCCCC"> it's impossible a lot</font><font color="#E5E5E5"> of these</font>

775
00:29:58,789 --> 00:30:03,950
malware samples send you on a wild goose

776
00:30:00,590 --> 00:30:06,080
<font color="#CCCCCC">chase so smart contracts are limited in</font>

777
00:30:03,950 --> 00:30:07,850
size<font color="#E5E5E5"> because of gas considerations it</font>

778
00:30:06,080 --> 00:30:09,860
costs money real money<font color="#E5E5E5"> to publish a</font>

779
00:30:07,850 --> 00:30:12,110
smart<font color="#CCCCCC"> contract</font><font color="#E5E5E5"> it part cost a lot of</font>

780
00:30:09,860 --> 00:30:13,729
<font color="#CCCCCC">money to issue transactions to that</font>

781
00:30:12,110 --> 00:30:17,719
smart contract<font color="#E5E5E5"> so it's more powerful</font>

782
00:30:13,730 --> 00:30:18,980
against smart contracts so<font color="#CCCCCC"> Manticore is</font>

783
00:30:17,720 --> 00:30:20,750
a good example<font color="#CCCCCC"> I mentioned that it's by</font>

784
00:30:18,980 --> 00:30:22,610
the people at a trail of bits

785
00:30:20,750 --> 00:30:24,370
symbolic execution tool and it will

786
00:30:22,610 --> 00:30:29,560
traverse these<font color="#E5E5E5"> paths like I mentioned</font>

787
00:30:24,370 --> 00:30:29,560
and let me see if I can get this<font color="#E5E5E5"> to play</font>

788
00:30:39,570 --> 00:30:46,070
<font color="#E5E5E5">okay so here's an</font><font color="#CCCCCC"> example of</font><font color="#E5E5E5"> it so you</font>

789
00:30:43,590 --> 00:30:47,999
have this burnable token right here and

790
00:30:46,070 --> 00:30:49,289
that's the source code for<font color="#E5E5E5"> it right</font>

791
00:30:47,999 --> 00:30:50,879
there's intentionally some bugs in<font color="#E5E5E5"> it</font>

792
00:30:49,289 --> 00:30:52,710
<font color="#E5E5E5">and they run</font><font color="#CCCCCC"> Manticore against that</font>

793
00:30:50,879 --> 00:30:53,998
contract<font color="#E5E5E5"> and it's going</font><font color="#CCCCCC"> through</font><font color="#E5E5E5"> all</font>

794
00:30:52,710 --> 00:30:56,249
<font color="#E5E5E5">these n</font><font color="#CCCCCC"> states and it's finding the</font>

795
00:30:53,999 --> 00:30:57,389
conditions necessary<font color="#E5E5E5"> for that so soon</font>

796
00:30:56,249 --> 00:31:01,950
it's gonna find an underflow

797
00:30:57,389 --> 00:31:03,299
vulnerability<font color="#E5E5E5"> and it'll essentially see</font>

798
00:31:01,950 --> 00:31:05,700
here it<font color="#E5E5E5"> is enters</font><font color="#CCCCCC"> or underflow at self</font>

799
00:31:03,299 --> 00:31:07,440
<font color="#CCCCCC">instruction it'll remember that</font><font color="#E5E5E5"> end</font>

800
00:31:05,700 --> 00:31:09,929
<font color="#CCCCCC">State and it'll tell you the</font><font color="#E5E5E5"> arguments</font>

801
00:31:07,440 --> 00:31:11,460
needed that satisfied that condition<font color="#CCCCCC"> an</font>

802
00:31:09,929 --> 00:31:14,029
<font color="#E5E5E5">example those arguments that satisfied</font>

803
00:31:11,460 --> 00:31:14,029
that position

804
00:31:27,300 --> 00:31:32,970
another thing<font color="#E5E5E5"> for another approach</font>

805
00:31:31,020 --> 00:31:35,790
rather<font color="#E5E5E5"> than doing symbolic execution is</font>

806
00:31:32,970 --> 00:31:37,650
<font color="#E5E5E5">just going through the binary yourself</font>

807
00:31:35,790 --> 00:31:39,720
<font color="#E5E5E5">right so you can actually use</font><font color="#CCCCCC"> ethers</font>

808
00:31:37,650 --> 00:31:41,520
<font color="#E5E5E5">play for example</font><font color="#CCCCCC"> an other tool by trail</font>

809
00:31:39,720 --> 00:31:43,890
bits<font color="#CCCCCC"> to get the bytecode of a smart</font>

810
00:31:41,520 --> 00:31:46,470
contract<font color="#CCCCCC"> at an address and disassemble</font>

811
00:31:43,890 --> 00:31:47,520
it and go through<font color="#CCCCCC"> it</font><font color="#E5E5E5"> and it's</font><font color="#CCCCCC"> very easy</font>

812
00:31:46,470 --> 00:31:50,970
<font color="#CCCCCC">to do there aren't that many</font>

813
00:31:47,520 --> 00:31:52,200
instructions in the EVM<font color="#CCCCCC"> so I recommend</font>

814
00:31:50,970 --> 00:31:54,990
doing it<font color="#E5E5E5"> I actually wrote a blog</font><font color="#CCCCCC"> post</font>

815
00:31:52,200 --> 00:31:56,790
about this<font color="#CCCCCC"> too which is pretty easy to</font>

816
00:31:54,990 --> 00:31:58,710
<font color="#E5E5E5">follow along and another really popular</font>

817
00:31:56,790 --> 00:32:01,139
symbolic execution engine if you are

818
00:31:58,710 --> 00:32:04,020
interested is mithril by consensus so

819
00:32:01,140 --> 00:32:06,660
similar concept to<font color="#CCCCCC"> Manticore both have</font>

820
00:32:04,020 --> 00:32:09,510
<font color="#E5E5E5">really good documentation and I</font>

821
00:32:06,660 --> 00:32:11,850
mentioned that reversing<font color="#E5E5E5"> post so I'll</font>

822
00:32:09,510 --> 00:32:14,790
just I'll put it here<font color="#E5E5E5"> for anyone who</font>

823
00:32:11,850 --> 00:32:15,929
wants<font color="#E5E5E5"> to check it out that's it thank</font>

824
00:32:14,790 --> 00:32:17,280
you<font color="#CCCCCC"> very much if you're interested</font><font color="#E5E5E5"> in</font>

825
00:32:15,930 --> 00:32:19,080
coming<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> party like I mentioned</font>

826
00:32:17,280 --> 00:32:20,160
<font color="#CCCCCC">just feel free</font><font color="#E5E5E5"> to reach out to me and if</font>

827
00:32:19,080 --> 00:32:21,300
you<font color="#E5E5E5"> have a resume</font><font color="#CCCCCC"> or anything</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> that</font>

828
00:32:20,160 --> 00:32:23,100
come up afterwards

829
00:32:21,300 --> 00:32:28,800
<font color="#CCCCCC">so I'll take any</font><font color="#E5E5E5"> questions thank</font><font color="#CCCCCC"> you</font>

830
00:32:23,100 --> 00:32:28,800
[Applause]

