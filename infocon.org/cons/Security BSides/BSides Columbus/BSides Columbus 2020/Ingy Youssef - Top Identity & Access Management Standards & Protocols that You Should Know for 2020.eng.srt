1
00:00:01,439 --> 00:00:06,160
uh hello everyone

2
00:00:03,120 --> 00:00:07,200
i'm angiosa and i wanted to share with

3
00:00:06,160 --> 00:00:10,480
you today

4
00:00:07,200 --> 00:00:13,280
some protocols standards and schemes

5
00:00:10,480 --> 00:00:14,000
that will be absolutely awesome and

6
00:00:13,280 --> 00:00:17,680
important

7
00:00:14,000 --> 00:00:21,119
for this very special year 2020.

8
00:00:17,680 --> 00:00:24,080
think of this as the harvest pick

9
00:00:21,119 --> 00:00:26,320
for identity access management for the

10
00:00:24,080 --> 00:00:26,320
year

11
00:00:28,480 --> 00:00:34,399
so uh before we get started

12
00:00:32,558 --> 00:00:36,320
when we say add any access management

13
00:00:34,399 --> 00:00:38,879
that's huge

14
00:00:36,320 --> 00:00:40,719
so that's not only authentication or

15
00:00:38,879 --> 00:00:43,120
authorization or

16
00:00:40,719 --> 00:00:44,160
at any life cycle that's like a huge

17
00:00:43,120 --> 00:00:47,599
huge space

18
00:00:44,160 --> 00:00:49,599
with tons of stuff but you know what

19
00:00:47,600 --> 00:00:50,800
the most important thing that is coming

20
00:00:49,600 --> 00:00:52,879
across all this

21
00:00:50,800 --> 00:00:55,599
is that there are two things that we

22
00:00:52,879 --> 00:00:57,760
really care about

23
00:00:55,600 --> 00:00:58,719
and usually we really need to work

24
00:00:57,760 --> 00:01:01,039
really hard

25
00:00:58,719 --> 00:01:02,000
to balance them these are the customer

26
00:01:01,039 --> 00:01:05,840
experience

27
00:01:02,000 --> 00:01:09,200
and security risks and threats

28
00:01:05,840 --> 00:01:11,439
and you know what the idea here is that

29
00:01:09,200 --> 00:01:12,880
this is no longer balancing this is no

30
00:01:11,439 --> 00:01:17,039
longer a luxury

31
00:01:12,880 --> 00:01:19,119
and i'll tell you why nowadays

32
00:01:17,040 --> 00:01:20,320
there are i want to draw your attention

33
00:01:19,119 --> 00:01:22,880
to these four

34
00:01:20,320 --> 00:01:23,679
main blocks and the reason why i bring

35
00:01:22,880 --> 00:01:26,560
up those

36
00:01:23,680 --> 00:01:28,880
is that it is a two-way street for both

37
00:01:26,560 --> 00:01:31,520
for those and identity access management

38
00:01:28,880 --> 00:01:33,920
you know why because at any access

39
00:01:31,520 --> 00:01:35,679
management have a direct effect

40
00:01:33,920 --> 00:01:37,040
uh the majority of identity access

41
00:01:35,680 --> 00:01:38,960
management

42
00:01:37,040 --> 00:01:40,720
programs in enterprises have direct

43
00:01:38,960 --> 00:01:44,000
effect on them

44
00:01:40,720 --> 00:01:48,158
on each of those and also these things

45
00:01:44,000 --> 00:01:50,320
have challenges of a very uh

46
00:01:48,159 --> 00:01:51,759
special type for identity access

47
00:01:50,320 --> 00:01:55,119
management programs across

48
00:01:51,759 --> 00:01:58,079
enterprises so let's just get those uh

49
00:01:55,119 --> 00:01:59,600
those awesome stuff uh get around round

50
00:01:58,079 --> 00:02:00,880
about for these awesome stuff and learn

51
00:01:59,600 --> 00:02:02,798
more about them

52
00:02:00,880 --> 00:02:03,920
but the first one is really digital

53
00:02:02,799 --> 00:02:06,719
transformation

54
00:02:03,920 --> 00:02:09,038
so when we're talking about identity

55
00:02:06,719 --> 00:02:12,239
access management digital transformation

56
00:02:09,038 --> 00:02:13,200
uh enterprises wanting to meet teams

57
00:02:12,239 --> 00:02:14,959
where they are

58
00:02:13,200 --> 00:02:16,319
enterprises wanting to open up their

59
00:02:14,959 --> 00:02:19,840
business and

60
00:02:16,319 --> 00:02:22,319
provide their services accessible um

61
00:02:19,840 --> 00:02:24,160
in different platforms accessed through

62
00:02:22,319 --> 00:02:26,799
apis and their data as well

63
00:02:24,160 --> 00:02:28,959
all these things these are the root and

64
00:02:26,800 --> 00:02:31,360
the heart of digital transformation

65
00:02:28,959 --> 00:02:32,560
and with all this comes very important

66
00:02:31,360 --> 00:02:34,560
considerations of

67
00:02:32,560 --> 00:02:35,760
how the identity access management

68
00:02:34,560 --> 00:02:39,440
experience should be

69
00:02:35,760 --> 00:02:41,599
in order to enable those kinds of very

70
00:02:39,440 --> 00:02:43,599
different services than what we used to

71
00:02:41,599 --> 00:02:45,839
do before in our enterprises

72
00:02:43,599 --> 00:02:48,319
closing down on data closing down in

73
00:02:45,840 --> 00:02:50,319
services now we're opening up

74
00:02:48,319 --> 00:02:51,518
now so if the identity access management

75
00:02:50,319 --> 00:02:54,079
uh uh

76
00:02:51,519 --> 00:02:54,879
services here are uh uh have are

77
00:02:54,080 --> 00:02:56,720
heavyweight

78
00:02:54,879 --> 00:02:58,720
it's friction has also friction with

79
00:02:56,720 --> 00:03:01,920
them and stuff it's not gonna help

80
00:02:58,720 --> 00:03:03,599
and vice versa digital transformation

81
00:03:01,920 --> 00:03:06,000
across all the different enterprises

82
00:03:03,599 --> 00:03:06,959
going through it now have a very special

83
00:03:06,000 --> 00:03:08,640
type of

84
00:03:06,959 --> 00:03:10,080
challenges that it introduces for

85
00:03:08,640 --> 00:03:12,958
identity access management

86
00:03:10,080 --> 00:03:14,000
it's a different model you literally

87
00:03:12,959 --> 00:03:17,040
have to

88
00:03:14,000 --> 00:03:19,440
look and think of things differently and

89
00:03:17,040 --> 00:03:21,599
go more fine green and so on so forth

90
00:03:19,440 --> 00:03:25,359
now moving on to the next one

91
00:03:21,599 --> 00:03:27,760
and that is the cloud so uh

92
00:03:25,360 --> 00:03:29,440
right now we're really anticipating that

93
00:03:27,760 --> 00:03:30,879
most of the organizations will have

94
00:03:29,440 --> 00:03:33,440
their data in the cloud

95
00:03:30,879 --> 00:03:34,879
like uh really really soon like i mean

96
00:03:33,440 --> 00:03:36,000
lots of data we're talking about like

97
00:03:34,879 --> 00:03:39,120
hundred percent

98
00:03:36,000 --> 00:03:42,239
uh my you know next year or something so

99
00:03:39,120 --> 00:03:44,000
uh we're really uh uh talking about

100
00:03:42,239 --> 00:03:46,720
operating fully in the cloud

101
00:03:44,000 --> 00:03:48,319
and and the thing here is that in order

102
00:03:46,720 --> 00:03:51,359
for cloud journeys to be

103
00:03:48,319 --> 00:03:53,599
uh successful it needs to have really

104
00:03:51,360 --> 00:03:55,760
um a an identity access management

105
00:03:53,599 --> 00:03:58,798
program that's based on automation

106
00:03:55,760 --> 00:04:00,959
and that is capable and that is modern

107
00:03:58,799 --> 00:04:04,400
and that is cloud friendly

108
00:04:00,959 --> 00:04:06,080
right uh and so uh with that comes

109
00:04:04,400 --> 00:04:07,760
it comes that's the success of this

110
00:04:06,080 --> 00:04:10,959
journey can't be without this

111
00:04:07,760 --> 00:04:14,399
and also vice versa cloud

112
00:04:10,959 --> 00:04:17,199
is by itself has lots of uh

113
00:04:14,400 --> 00:04:19,280
puts a great emphasis on iem identity

114
00:04:17,199 --> 00:04:19,759
access management is the new parameter

115
00:04:19,279 --> 00:04:22,559
ford

116
00:04:19,759 --> 00:04:23,759
for uh enterprises because of the cloud

117
00:04:22,560 --> 00:04:26,320
where everything

118
00:04:23,759 --> 00:04:28,560
is the new parameter is the identities

119
00:04:26,320 --> 00:04:31,599
and the access management and the access

120
00:04:28,560 --> 00:04:33,840
rules that are governing the access

121
00:04:31,600 --> 00:04:35,120
for those identities it's no longer

122
00:04:33,840 --> 00:04:38,080
networks

123
00:04:35,120 --> 00:04:39,199
in physical errors right there's no

124
00:04:38,080 --> 00:04:42,400
insider outside

125
00:04:39,199 --> 00:04:45,759
now moving on devops so devops

126
00:04:42,400 --> 00:04:49,198
this awesome vehicle to deliver code

127
00:04:45,759 --> 00:04:52,560
and software at speed and with speed

128
00:04:49,199 --> 00:04:55,840
uh that means you can't be a heavy uh

129
00:04:52,560 --> 00:04:56,639
manual i am processed seasoned in the in

130
00:04:55,840 --> 00:05:00,000
the

131
00:04:56,639 --> 00:05:00,800
in the path to and stay you can still do

132
00:05:00,000 --> 00:05:02,800
devops

133
00:05:00,800 --> 00:05:04,240
so at any access management and

134
00:05:02,800 --> 00:05:07,360
automation and

135
00:05:04,240 --> 00:05:08,800
and and being able to have those

136
00:05:07,360 --> 00:05:11,199
operations really efficient

137
00:05:08,800 --> 00:05:13,120
and covered all these things are are

138
00:05:11,199 --> 00:05:14,000
very important for success of devops and

139
00:05:13,120 --> 00:05:16,479
organizations

140
00:05:14,000 --> 00:05:17,039
and vice versa concepts of lease

141
00:05:16,479 --> 00:05:19,440
privilege

142
00:05:17,039 --> 00:05:21,440
change management all these things are

143
00:05:19,440 --> 00:05:23,039
real things that i am programs needs to

144
00:05:21,440 --> 00:05:26,000
understand how it can be

145
00:05:23,039 --> 00:05:26,719
tackled for devops and final zero cross

146
00:05:26,000 --> 00:05:28,960
and i think

147
00:05:26,720 --> 00:05:30,880
uh like it's it's a cliche really

148
00:05:28,960 --> 00:05:31,440
everyone wants to see what is devops

149
00:05:30,880 --> 00:05:33,840
what

150
00:05:31,440 --> 00:05:35,680
what is a zero trust what what does that

151
00:05:33,840 --> 00:05:39,119
mean for us what does it bring

152
00:05:35,680 --> 00:05:39,840
uh as as as this is coming and it's in

153
00:05:39,120 --> 00:05:41,680
the future

154
00:05:39,840 --> 00:05:43,198
or sometimes some enterprises have

155
00:05:41,680 --> 00:05:46,160
managed to go on this journey

156
00:05:43,199 --> 00:05:48,000
you cannot buy your trust it's built on

157
00:05:46,160 --> 00:05:49,440
it on really lots of practices and

158
00:05:48,000 --> 00:05:51,039
things you keep building across the

159
00:05:49,440 --> 00:05:52,160
years from data classification

160
00:05:51,039 --> 00:05:55,360
segmentation

161
00:05:52,160 --> 00:05:56,800
and and very very strong iem uh and

162
00:05:55,360 --> 00:05:59,120
granular permissions

163
00:05:56,800 --> 00:06:00,880
and also privileged access management so

164
00:05:59,120 --> 00:06:03,360
again you can't do zero trust and

165
00:06:00,880 --> 00:06:03,840
succeed with it without a strong im uh

166
00:06:03,360 --> 00:06:06,880
program

167
00:06:03,840 --> 00:06:08,400
and vice versa i am does have lots of

168
00:06:06,880 --> 00:06:10,479
challenges when it comes to

169
00:06:08,400 --> 00:06:12,479
an emphasis when it comes to uh making

170
00:06:10,479 --> 00:06:14,880
zero trust a reality

171
00:06:12,479 --> 00:06:15,919
and so with all these beautiful stuff uh

172
00:06:14,880 --> 00:06:18,159
the journey

173
00:06:15,919 --> 00:06:20,400
and for anything on any access

174
00:06:18,160 --> 00:06:22,000
management as big as the space is

175
00:06:20,400 --> 00:06:24,799
it's centered around a very small

176
00:06:22,000 --> 00:06:28,560
concept which is the concept of

177
00:06:24,800 --> 00:06:30,319
digital identity and for this concept

178
00:06:28,560 --> 00:06:32,720
if you look at how this concept is

179
00:06:30,319 --> 00:06:34,720
evolving you will clearly see

180
00:06:32,720 --> 00:06:35,919
what you really need as an enterprise to

181
00:06:34,720 --> 00:06:38,720
focus on

182
00:06:35,919 --> 00:06:39,840
and so so we started uh early on with

183
00:06:38,720 --> 00:06:41,360
the traditional scheme where we're

184
00:06:39,840 --> 00:06:43,840
talking about really

185
00:06:41,360 --> 00:06:45,280
that in order for the user to interact

186
00:06:43,840 --> 00:06:47,039
with different applications

187
00:06:45,280 --> 00:06:48,400
they need to really create a different

188
00:06:47,039 --> 00:06:50,240
account uh

189
00:06:48,400 --> 00:06:51,758
with each of these applications as if

190
00:06:50,240 --> 00:06:54,240
they're really interacting with each

191
00:06:51,759 --> 00:06:56,400
uh there's a different issuer for each

192
00:06:54,240 --> 00:06:58,160
of those applications to interact with

193
00:06:56,400 --> 00:07:00,318
that was some time and then comes

194
00:06:58,160 --> 00:07:03,520
federation we're talking here about

195
00:07:00,319 --> 00:07:06,240
uh you know saml based federations

196
00:07:03,520 --> 00:07:07,280
our back base authorization models and

197
00:07:06,240 --> 00:07:09,280
all these things

198
00:07:07,280 --> 00:07:10,318
where really what was happening here was

199
00:07:09,280 --> 00:07:13,679
we say

200
00:07:10,319 --> 00:07:16,400
hey let the experience improve here

201
00:07:13,680 --> 00:07:17,520
why do i it's the same user right why do

202
00:07:16,400 --> 00:07:19,840
i need to create

203
00:07:17,520 --> 00:07:21,520
multiple identities can i just have an

204
00:07:19,840 --> 00:07:24,880
identity that's managed by a certain

205
00:07:21,520 --> 00:07:27,758
issuer and then those apps can just

206
00:07:24,880 --> 00:07:29,520
use this issuer or this trusted identity

207
00:07:27,759 --> 00:07:30,160
management system to authenticate the

208
00:07:29,520 --> 00:07:32,318
user

209
00:07:30,160 --> 00:07:33,520
and then we can you know go from there

210
00:07:32,319 --> 00:07:37,039
so it's more like

211
00:07:33,520 --> 00:07:38,240
uh it is still more organizationally

212
00:07:37,039 --> 00:07:40,318
controlled there is

213
00:07:38,240 --> 00:07:42,160
some big brother something here that's

214
00:07:40,319 --> 00:07:44,879
working on which is this issue where

215
00:07:42,160 --> 00:07:45,440
the trusted identity provider the you

216
00:07:44,879 --> 00:07:48,000
know

217
00:07:45,440 --> 00:07:49,199
um but but all this that's in the

218
00:07:48,000 --> 00:07:51,599
federated model

219
00:07:49,199 --> 00:07:53,199
now let's go on to the current model

220
00:07:51,599 --> 00:07:53,759
where lots of enterprises that are going

221
00:07:53,199 --> 00:07:55,680
through

222
00:07:53,759 --> 00:07:57,520
their digital transformation journeys

223
00:07:55,680 --> 00:08:00,639
are actually passing through it

224
00:07:57,520 --> 00:08:03,198
which is the user-centric identity

225
00:08:00,639 --> 00:08:04,560
in the user-centric identity the user is

226
00:08:03,199 --> 00:08:06,960
at the center of

227
00:08:04,560 --> 00:08:09,280
the experience we have what we call

228
00:08:06,960 --> 00:08:12,479
digital customer journeys mapping

229
00:08:09,280 --> 00:08:14,719
and we have people study how

230
00:08:12,479 --> 00:08:16,639
they can improve on this and an end but

231
00:08:14,720 --> 00:08:18,160
also with that comes lots of things that

232
00:08:16,639 --> 00:08:21,199
we can do for iem

233
00:08:18,160 --> 00:08:23,360
that makes this a success and here it

234
00:08:21,199 --> 00:08:25,440
becomes the flexibility of hey

235
00:08:23,360 --> 00:08:27,120
i can actually i don't need to use this

236
00:08:25,440 --> 00:08:29,360
specific

237
00:08:27,120 --> 00:08:30,800
uh identity provider issue of identity i

238
00:08:29,360 --> 00:08:33,839
can choose who

239
00:08:30,800 --> 00:08:35,200
i want to use i can for example

240
00:08:33,839 --> 00:08:38,399
authenticate with

241
00:08:35,200 --> 00:08:40,080
with google and or facebook or this idp

242
00:08:38,399 --> 00:08:41,120
for my enterprise or the second one or

243
00:08:40,080 --> 00:08:43,440
the other one

244
00:08:41,120 --> 00:08:45,680
it can even be registered dynamically so

245
00:08:43,440 --> 00:08:48,080
that it brings us to this users at the

246
00:08:45,680 --> 00:08:49,439
center of the experience and we design

247
00:08:48,080 --> 00:08:50,880
based on that

248
00:08:49,440 --> 00:08:52,720
and then moving forward to

249
00:08:50,880 --> 00:08:54,880
self-sovereign identities

250
00:08:52,720 --> 00:08:56,080
and with that we're really talking about

251
00:08:54,880 --> 00:08:58,240
um how can

252
00:08:56,080 --> 00:09:00,240
the user is the owner of the identity

253
00:08:58,240 --> 00:09:02,720
and how the user can control

254
00:09:00,240 --> 00:09:04,000
uh where did they what to share about

255
00:09:02,720 --> 00:09:07,200
their identities and with

256
00:09:04,000 --> 00:09:09,120
what data so no control over the over

257
00:09:07,200 --> 00:09:12,399
the user's identity or

258
00:09:09,120 --> 00:09:13,760
issuing uh or basically the user does

259
00:09:12,399 --> 00:09:16,000
not need

260
00:09:13,760 --> 00:09:16,959
someone to issue an identity on its

261
00:09:16,000 --> 00:09:19,440
behalf it

262
00:09:16,959 --> 00:09:20,000
and we will learn more about that for

263
00:09:19,440 --> 00:09:21,760
and it's

264
00:09:20,000 --> 00:09:24,000
how can this become a reality through

265
00:09:21,760 --> 00:09:24,959
blockchains so most of our enterprises

266
00:09:24,000 --> 00:09:27,040
if you're going through a digital

267
00:09:24,959 --> 00:09:29,279
transformation probably you're trying to

268
00:09:27,040 --> 00:09:31,120
having lots of conversation around how

269
00:09:29,279 --> 00:09:33,200
you can personalize the journey

270
00:09:31,120 --> 00:09:34,240
uh the experience for the users and

271
00:09:33,200 --> 00:09:37,200
probably

272
00:09:34,240 --> 00:09:39,120
you need to ramp your im program to be

273
00:09:37,200 --> 00:09:41,680
more user-centric with user-centric

274
00:09:39,120 --> 00:09:45,120
identity protocols and services

275
00:09:41,680 --> 00:09:47,920
so uh from that let's

276
00:09:45,120 --> 00:09:48,320
um let's take a look a little bit here

277
00:09:47,920 --> 00:09:50,719
uh

278
00:09:48,320 --> 00:09:52,160
on one important thing just to so that

279
00:09:50,720 --> 00:09:53,200
to make sure that we really set the

280
00:09:52,160 --> 00:09:55,120
ground right

281
00:09:53,200 --> 00:09:56,320
um we are going to explore a number of

282
00:09:55,120 --> 00:09:58,720
protocols and things

283
00:09:56,320 --> 00:10:00,640
and some of them i will use the word hey

284
00:09:58,720 --> 00:10:01,120
that's older than this that's the newer

285
00:10:00,640 --> 00:10:04,079
approach

286
00:10:01,120 --> 00:10:05,200
that's thus think of all these as tools

287
00:10:04,079 --> 00:10:08,640
in your toolbox

288
00:10:05,200 --> 00:10:11,440
so we're not doing and in with the oh

289
00:10:08,640 --> 00:10:12,640
with the new out of the old no no no

290
00:10:11,440 --> 00:10:15,279
keep it in

291
00:10:12,640 --> 00:10:15,920
there's no one leaving here the idea is

292
00:10:15,279 --> 00:10:18,160
that

293
00:10:15,920 --> 00:10:19,760
the organizations would have this great

294
00:10:18,160 --> 00:10:21,600
toolbox to use

295
00:10:19,760 --> 00:10:23,120
based on the context based on the

296
00:10:21,600 --> 00:10:24,959
problem being solved

297
00:10:23,120 --> 00:10:27,680
and we need to make an informed decision

298
00:10:24,959 --> 00:10:30,079
of what works best for us

299
00:10:27,680 --> 00:10:31,680
so just to reiterate again the im is a

300
00:10:30,079 --> 00:10:32,079
huge space and we are going to focus

301
00:10:31,680 --> 00:10:34,479
more

302
00:10:32,079 --> 00:10:36,319
on authentication and authorization

303
00:10:34,480 --> 00:10:37,839
primitives throughout this talk

304
00:10:36,320 --> 00:10:39,600
this is as you can see here this is the

305
00:10:37,839 --> 00:10:42,959
ficom architecture model

306
00:10:39,600 --> 00:10:44,079
uh it's a federal identity a credential

307
00:10:42,959 --> 00:10:46,160
access management

308
00:10:44,079 --> 00:10:48,079
model i like they have lots of resources

309
00:10:46,160 --> 00:10:50,560
there but just i took this

310
00:10:48,079 --> 00:10:51,439
for you here and i highlighted those and

311
00:10:50,560 --> 00:10:54,000
this is going to be

312
00:10:51,440 --> 00:10:55,200
our focus now since this is going to be

313
00:10:54,000 --> 00:10:57,200
our focus let's just

314
00:10:55,200 --> 00:10:58,800
make sure that we are on the same page

315
00:10:57,200 --> 00:11:01,360
which comes with some terminology

316
00:10:58,800 --> 00:11:02,479
when we're talking about authentication

317
00:11:01,360 --> 00:11:05,519
authentication

318
00:11:02,480 --> 00:11:09,760
is really about making sure

319
00:11:05,519 --> 00:11:12,800
that the user is really

320
00:11:09,760 --> 00:11:14,959
who he is who he or she is claiming to

321
00:11:12,800 --> 00:11:18,079
be so there's some identity claim

322
00:11:14,959 --> 00:11:21,359
that's being verified by some verifier

323
00:11:18,079 --> 00:11:22,399
now the claimant who is the person to be

324
00:11:21,360 --> 00:11:25,360
authenticated

325
00:11:22,399 --> 00:11:27,600
have some factors that is being used

326
00:11:25,360 --> 00:11:29,680
during this authentication process

327
00:11:27,600 --> 00:11:32,160
there can the factors is something you

328
00:11:29,680 --> 00:11:34,399
have so for example you have a card

329
00:11:32,160 --> 00:11:35,760
you have something something you know

330
00:11:34,399 --> 00:11:37,360
like your password something you are

331
00:11:35,760 --> 00:11:40,319
like your fingerprint

332
00:11:37,360 --> 00:11:42,160
if i combine uh more than one factor

333
00:11:40,320 --> 00:11:45,040
it's we call it multi-factor

334
00:11:42,160 --> 00:11:46,560
it can be two factors three factors but

335
00:11:45,040 --> 00:11:48,880
these are

336
00:11:46,560 --> 00:11:49,920
uh this is how the claimant can prove to

337
00:11:48,880 --> 00:11:51,600
the verifier

338
00:11:49,920 --> 00:11:53,439
through the use of this factor through a

339
00:11:51,600 --> 00:11:54,800
certain scheme uh we should call an

340
00:11:53,440 --> 00:11:57,440
authentication scheme

341
00:11:54,800 --> 00:11:58,160
uh that it is indeed who it is claiming

342
00:11:57,440 --> 00:12:00,560
to be

343
00:11:58,160 --> 00:12:02,160
now authorization is entering a

344
00:12:00,560 --> 00:12:03,359
different problem authorization is

345
00:12:02,160 --> 00:12:06,480
saying

346
00:12:03,360 --> 00:12:07,680
is the subject allowed to access the

347
00:12:06,480 --> 00:12:10,800
requested

348
00:12:07,680 --> 00:12:14,160
object with the indicated operation

349
00:12:10,800 --> 00:12:15,839
um and so the the in that case here

350
00:12:14,160 --> 00:12:17,600
the subject might have some attributes

351
00:12:15,839 --> 00:12:20,399
group group belongings

352
00:12:17,600 --> 00:12:21,040
roles and the similarity for the object

353
00:12:20,399 --> 00:12:23,680
and there is

354
00:12:21,040 --> 00:12:24,800
usually a place where this decision

355
00:12:23,680 --> 00:12:27,199
needs to be

356
00:12:24,800 --> 00:12:29,040
done it's this this enforcement of

357
00:12:27,200 --> 00:12:31,279
access needs to be done which we call

358
00:12:29,040 --> 00:12:32,719
usually an enforcement point and it can

359
00:12:31,279 --> 00:12:35,360
consult with different

360
00:12:32,720 --> 00:12:36,240
uh things or do operations itself in

361
00:12:35,360 --> 00:12:38,880
order to reach

362
00:12:36,240 --> 00:12:40,720
this answer to this question just to

363
00:12:38,880 --> 00:12:41,760
that we make sure we follow through

364
00:12:40,720 --> 00:12:43,519
we're going to start first by

365
00:12:41,760 --> 00:12:44,560
authentication then switch to

366
00:12:43,519 --> 00:12:47,760
authorization

367
00:12:44,560 --> 00:12:51,040
and finalize after that uh with uh

368
00:12:47,760 --> 00:12:54,560
uh our talk with some with some

369
00:12:51,040 --> 00:12:55,839
new trends and stuff so uh starting with

370
00:12:54,560 --> 00:12:58,399
authentication

371
00:12:55,839 --> 00:12:59,920
first of all before we can start uh

372
00:12:58,399 --> 00:13:01,519
going into any of the schemes or the

373
00:12:59,920 --> 00:13:02,880
things you want to talk about

374
00:13:01,519 --> 00:13:04,880
i really wanted to share with you this

375
00:13:02,880 --> 00:13:06,959
framework so what is this

376
00:13:04,880 --> 00:13:08,480
as you can see here this is a table of

377
00:13:06,959 --> 00:13:10,638
some criteria

378
00:13:08,480 --> 00:13:11,600
okay we're going to use this throughout

379
00:13:10,639 --> 00:13:13,760
the stock

380
00:13:11,600 --> 00:13:15,440
to compare the different schemes and

381
00:13:13,760 --> 00:13:17,680
things that we introduce

382
00:13:15,440 --> 00:13:19,440
uh and talk about now this is not

383
00:13:17,680 --> 00:13:21,199
something that i came up with

384
00:13:19,440 --> 00:13:23,519
this is actually something that was

385
00:13:21,200 --> 00:13:25,040
based on a research in a paper published

386
00:13:23,519 --> 00:13:26,639
in 2012

387
00:13:25,040 --> 00:13:28,399
it's an older paper but then it's been

388
00:13:26,639 --> 00:13:29,600
revisited a number of times and google

389
00:13:28,399 --> 00:13:31,920
has used a number of

390
00:13:29,600 --> 00:13:33,440
references a number of paper why am i

391
00:13:31,920 --> 00:13:35,279
bringing this here

392
00:13:33,440 --> 00:13:37,279
lots of times again from from from

393
00:13:35,279 --> 00:13:38,800
experience you find that the enterprises

394
00:13:37,279 --> 00:13:41,360
are in situations where

395
00:13:38,800 --> 00:13:42,639
we're making some decisions it's not

396
00:13:41,360 --> 00:13:45,040
it's just based on oh

397
00:13:42,639 --> 00:13:46,800
this is set to be the standard the

398
00:13:45,040 --> 00:13:48,959
industry standard

399
00:13:46,800 --> 00:13:50,240
oh great industrial centers are awesome

400
00:13:48,959 --> 00:13:52,160
i'm all in for it but

401
00:13:50,240 --> 00:13:54,000
does it is it the right thing to do for

402
00:13:52,160 --> 00:13:55,199
your situation is it the right thing to

403
00:13:54,000 --> 00:13:57,920
do for this feature

404
00:13:55,199 --> 00:13:58,319
for this project for this effort this is

405
00:13:57,920 --> 00:14:00,479
where

406
00:13:58,320 --> 00:14:02,000
this framework can help you and so i

407
00:14:00,480 --> 00:14:02,639
brought it in here and i'm going to show

408
00:14:02,000 --> 00:14:06,320
you

409
00:14:02,639 --> 00:14:07,760
how this will help indicate uh or how we

410
00:14:06,320 --> 00:14:08,399
can use it to compare the different

411
00:14:07,760 --> 00:14:10,880
frameworks

412
00:14:08,399 --> 00:14:12,320
but then as you can see it is made up of

413
00:14:10,880 --> 00:14:14,800
three main categories

414
00:14:12,320 --> 00:14:16,959
usability which tries to measure the

415
00:14:14,800 --> 00:14:20,079
user experience here

416
00:14:16,959 --> 00:14:21,518
and deployability as an enterprise is

417
00:14:20,079 --> 00:14:22,800
your life going to be held after you

418
00:14:21,519 --> 00:14:25,360
adopt the scheme

419
00:14:22,800 --> 00:14:27,040
and then security and privacy which is

420
00:14:25,360 --> 00:14:29,440
secure considerations

421
00:14:27,040 --> 00:14:30,480
and privacy considerations and i'm going

422
00:14:29,440 --> 00:14:32,560
to give you an example

423
00:14:30,480 --> 00:14:33,600
so usability so we're going to take a

424
00:14:32,560 --> 00:14:37,439
look and say

425
00:14:33,600 --> 00:14:40,639
hey is the scheme uh involves something

426
00:14:37,440 --> 00:14:40,880
how is it from a memory wise effort does

427
00:14:40,639 --> 00:14:44,399
it

428
00:14:40,880 --> 00:14:48,320
involve it's easy is it easy to learn

429
00:14:44,399 --> 00:14:49,680
and what about is it efficient to use

430
00:14:48,320 --> 00:14:52,959
does it

431
00:14:49,680 --> 00:14:55,199
what about infrequent adders that

432
00:14:52,959 --> 00:14:57,439
measures the the user experience now

433
00:14:55,199 --> 00:15:00,160
from a deployability perspective look

434
00:14:57,440 --> 00:15:02,000
cost the cost per user what about

435
00:15:00,160 --> 00:15:02,800
compatibility is compatible with

436
00:15:02,000 --> 00:15:06,000
browsers

437
00:15:02,800 --> 00:15:07,599
different types not all maturity

438
00:15:06,000 --> 00:15:10,240
that makes a difference we're supporting

439
00:15:07,600 --> 00:15:12,160
other security and privacy

440
00:15:10,240 --> 00:15:14,160
for a third category let's take a look

441
00:15:12,160 --> 00:15:17,439
at this is resilient to

442
00:15:14,160 --> 00:15:20,399
phishing is it resilient to theft

443
00:15:17,440 --> 00:15:22,240
um it does it include consent is the

444
00:15:20,399 --> 00:15:24,800
user ever asked

445
00:15:22,240 --> 00:15:25,920
are you okay with sharing your your

446
00:15:24,800 --> 00:15:29,040
identity

447
00:15:25,920 --> 00:15:30,319
data so all these things are very very

448
00:15:29,040 --> 00:15:31,599
important

449
00:15:30,320 --> 00:15:34,160
and i'm going to show you how we're

450
00:15:31,600 --> 00:15:36,240
going to apply this so

451
00:15:34,160 --> 00:15:38,719
the flow here is as follows i want to

452
00:15:36,240 --> 00:15:41,920
introduce you to some of the protocols

453
00:15:38,720 --> 00:15:45,199
and the frameworks and the schemes

454
00:15:41,920 --> 00:15:46,880
and models that are going to help you as

455
00:15:45,199 --> 00:15:48,319
we're going to address those newer

456
00:15:46,880 --> 00:15:51,360
challenges like for

457
00:15:48,320 --> 00:15:55,759
digital transformations or devops or

458
00:15:51,360 --> 00:15:59,360
cloud or zero trust and all

459
00:15:55,759 --> 00:16:00,959
um so in order to do that so what i'm

460
00:15:59,360 --> 00:16:03,040
gonna do is really i'm gonna

461
00:16:00,959 --> 00:16:04,880
uh work with you on first password-based

462
00:16:03,040 --> 00:16:08,560
scheme and then passwordless

463
00:16:04,880 --> 00:16:11,759
and then uh during that time i'm gonna

464
00:16:08,560 --> 00:16:13,920
pivot to federation and show you uh

465
00:16:11,759 --> 00:16:15,440
how these two different models work when

466
00:16:13,920 --> 00:16:16,800
we're talking about federation as a

467
00:16:15,440 --> 00:16:18,800
concept here

468
00:16:16,800 --> 00:16:20,399
so we're all familiar with

469
00:16:18,800 --> 00:16:22,079
password-based authentication we see it

470
00:16:20,399 --> 00:16:23,199
all the time you enter username and

471
00:16:22,079 --> 00:16:26,319
password

472
00:16:23,199 --> 00:16:29,279
and uh you log in you create

473
00:16:26,320 --> 00:16:29,600
uh some account with the application and

474
00:16:29,279 --> 00:16:32,000
then

475
00:16:29,600 --> 00:16:34,160
use the credentials to log in later so

476
00:16:32,000 --> 00:16:34,800
there is some secret that is shared with

477
00:16:34,160 --> 00:16:36,800
a server

478
00:16:34,800 --> 00:16:38,000
somewhere that authenticates you when

479
00:16:36,800 --> 00:16:39,839
it's time to be

480
00:16:38,000 --> 00:16:41,759
um to authenticate with the

481
00:16:39,839 --> 00:16:45,440
password-based authentication

482
00:16:41,759 --> 00:16:48,079
scheme now i'm gonna pivot to

483
00:16:45,440 --> 00:16:50,240
passwords via a single sign-on or

484
00:16:48,079 --> 00:16:52,239
federation basically federated access

485
00:16:50,240 --> 00:16:53,360
and the reason i want to pivot so fast

486
00:16:52,240 --> 00:16:56,959
here is

487
00:16:53,360 --> 00:16:57,839
uh really it it is a real need for fast

488
00:16:56,959 --> 00:17:00,959
pivot

489
00:16:57,839 --> 00:17:02,480
so first of all instead it is as simple

490
00:17:00,959 --> 00:17:05,198
as this

491
00:17:02,480 --> 00:17:06,880
user wants to use a certain application

492
00:17:05,199 --> 00:17:08,480
uh application a and once you use

493
00:17:06,880 --> 00:17:09,120
application b and or spirit application

494
00:17:08,480 --> 00:17:11,120
c

495
00:17:09,119 --> 00:17:12,479
question do i need to create an account

496
00:17:11,119 --> 00:17:16,079
with application a application b

497
00:17:12,480 --> 00:17:17,919
application c application d ah okay

498
00:17:16,079 --> 00:17:19,839
but is there an easier way is there a

499
00:17:17,919 --> 00:17:23,360
better way so that's federation

500
00:17:19,839 --> 00:17:24,079
federation says hey you can use if there

501
00:17:23,359 --> 00:17:26,159
is some

502
00:17:24,079 --> 00:17:27,119
identity provider or identity management

503
00:17:26,160 --> 00:17:30,160
system

504
00:17:27,119 --> 00:17:33,840
or verifier that you trust and

505
00:17:30,160 --> 00:17:36,880
as an application you can actually

506
00:17:33,840 --> 00:17:39,039
uh use this to log in your users

507
00:17:36,880 --> 00:17:41,039
so for example give an example here

508
00:17:39,039 --> 00:17:41,600
which is a single sign-on for consumer

509
00:17:41,039 --> 00:17:44,400
apps

510
00:17:41,600 --> 00:17:44,879
so this application here say say for

511
00:17:44,400 --> 00:17:46,960
enough

512
00:17:44,880 --> 00:17:48,160
for an application called uh travel

513
00:17:46,960 --> 00:17:51,360
travelopedia

514
00:17:48,160 --> 00:17:53,360
whatever that is uh and it has this

515
00:17:51,360 --> 00:17:55,039
sign in with google so it doesn't tell

516
00:17:53,360 --> 00:17:56,639
you have to create an account

517
00:17:55,039 --> 00:17:58,240
but it allows you actually if you have a

518
00:17:56,640 --> 00:17:59,840
google account you can sign with google

519
00:17:58,240 --> 00:18:01,600
we call this social login but that's

520
00:17:59,840 --> 00:18:03,918
also a form of federation

521
00:18:01,600 --> 00:18:05,600
because google in this case as an

522
00:18:03,919 --> 00:18:06,320
identity provide acts as an identity

523
00:18:05,600 --> 00:18:09,918
provider and

524
00:18:06,320 --> 00:18:11,840
allows uh you to authenticate with your

525
00:18:09,919 --> 00:18:13,360
google credentials

526
00:18:11,840 --> 00:18:15,520
with your trust relationship with google

527
00:18:13,360 --> 00:18:17,918
across all these apps without having

528
00:18:15,520 --> 00:18:18,799
to have travelopedia uh collect your

529
00:18:17,919 --> 00:18:22,320
credit your

530
00:18:18,799 --> 00:18:25,440
your credentials and restore it uh

531
00:18:22,320 --> 00:18:28,159
at all now on another note

532
00:18:25,440 --> 00:18:29,520
probably lots of times probably you've

533
00:18:28,160 --> 00:18:32,960
seen that absolutely

534
00:18:29,520 --> 00:18:35,440
in your company you log into

535
00:18:32,960 --> 00:18:36,799
your computer and uh you have here you

536
00:18:35,440 --> 00:18:38,480
go single sign-on

537
00:18:36,799 --> 00:18:40,960
and it adds this best you're able to

538
00:18:38,480 --> 00:18:42,480
access all the suite of applications for

539
00:18:40,960 --> 00:18:44,960
internal use only you this

540
00:18:42,480 --> 00:18:46,880
is the board for this and this is uh the

541
00:18:44,960 --> 00:18:48,000
area for that and so on so forth inside

542
00:18:46,880 --> 00:18:50,000
your

543
00:18:48,000 --> 00:18:51,600
enterprise that's single sign-on you

544
00:18:50,000 --> 00:18:53,440
sign in once and you're signed in

545
00:18:51,600 --> 00:18:56,799
already to these applications

546
00:18:53,440 --> 00:19:00,000
with this single sign-on so um

547
00:18:56,799 --> 00:19:02,240
that is great we are going to explore

548
00:19:00,000 --> 00:19:03,360
the protocols for single sign-on and

549
00:19:02,240 --> 00:19:06,480
look at more

550
00:19:03,360 --> 00:19:08,399
towards the details of the newer one

551
00:19:06,480 --> 00:19:10,080
which is the the first one i want to

552
00:19:08,400 --> 00:19:13,280
draw your attention to

553
00:19:10,080 --> 00:19:15,520
which is what we call open id connect

554
00:19:13,280 --> 00:19:17,200
but before that i really want to show

555
00:19:15,520 --> 00:19:19,440
you how i've used the framework here and

556
00:19:17,200 --> 00:19:21,760
it's not me that's again that's

557
00:19:19,440 --> 00:19:23,600
i included the link here where

558
00:19:21,760 --> 00:19:26,080
references the paper

559
00:19:23,600 --> 00:19:27,360
and also the blog the the article that

560
00:19:26,080 --> 00:19:29,039
was wrote on that

561
00:19:27,360 --> 00:19:31,199
uh but basically what we're talking

562
00:19:29,039 --> 00:19:32,000
about here is comparison of password

563
00:19:31,200 --> 00:19:34,160
versus

564
00:19:32,000 --> 00:19:35,360
uh password via ssl so password-based

565
00:19:34,160 --> 00:19:37,919
authentication

566
00:19:35,360 --> 00:19:38,559
versus if you're using federation you

567
00:19:37,919 --> 00:19:40,400
have

568
00:19:38,559 --> 00:19:42,080
here are the categories and if i'm gonna

569
00:19:40,400 --> 00:19:44,880
look look at this

570
00:19:42,080 --> 00:19:46,480
so you clearly can see how federation is

571
00:19:44,880 --> 00:19:50,240
helping with usability

572
00:19:46,480 --> 00:19:52,160
absolutely now deployability

573
00:19:50,240 --> 00:19:53,840
some problems here a little bit because

574
00:19:52,160 --> 00:19:56,400
of costs and things

575
00:19:53,840 --> 00:19:57,280
now also securing privacy is enhanced

576
00:19:56,400 --> 00:20:00,320
but look

577
00:19:57,280 --> 00:20:00,720
here so resilient to fishing i want you

578
00:20:00,320 --> 00:20:02,320
to

579
00:20:00,720 --> 00:20:04,799
hang on to this idea because we're going

580
00:20:02,320 --> 00:20:08,320
to explore it even more

581
00:20:04,799 --> 00:20:11,280
coming in but i want you to see that

582
00:20:08,320 --> 00:20:11,760
none of the password-based schemes are

583
00:20:11,280 --> 00:20:14,240
able

584
00:20:11,760 --> 00:20:14,879
to protect against phishing hold on to

585
00:20:14,240 --> 00:20:17,919
this idea

586
00:20:14,880 --> 00:20:21,679
okay perfect now

587
00:20:17,919 --> 00:20:24,960
uh open id connect which is

588
00:20:21,679 --> 00:20:25,919
a this is a an identity layer that's

589
00:20:24,960 --> 00:20:30,320
built on top

590
00:20:25,919 --> 00:20:32,559
of a protocol called oath and law

591
00:20:30,320 --> 00:20:34,158
it's not a protocol actually it's a

592
00:20:32,559 --> 00:20:36,879
delegation authorization

593
00:20:34,159 --> 00:20:38,880
framework because it's not a protocol

594
00:20:36,880 --> 00:20:39,600
but open id connect adds an identity

595
00:20:38,880 --> 00:20:43,039
layer

596
00:20:39,600 --> 00:20:44,719
and this is actually also uh can be used

597
00:20:43,039 --> 00:20:48,000
for federation

598
00:20:44,720 --> 00:20:51,120
so there is the federation protocols

599
00:20:48,000 --> 00:20:51,840
that are most common are saml based

600
00:20:51,120 --> 00:20:53,439
federation

601
00:20:51,840 --> 00:20:55,600
and there's open id connect based

602
00:20:53,440 --> 00:20:56,960
federation and there's other stuff

603
00:20:55,600 --> 00:20:58,399
we know that there are other stuff we're

604
00:20:56,960 --> 00:20:59,919
not going to talk about now but i just

605
00:20:58,400 --> 00:21:02,960
want to highlight

606
00:20:59,919 --> 00:21:06,559
under the spotlight open id connect for

607
00:21:02,960 --> 00:21:07,120
federation and specifically for consumer

608
00:21:06,559 --> 00:21:09,360
apps

609
00:21:07,120 --> 00:21:10,879
so let me take you since uh and by the

610
00:21:09,360 --> 00:21:13,120
way i want to find this

611
00:21:10,880 --> 00:21:15,039
so so i took this this diagram of open

612
00:21:13,120 --> 00:21:15,678
id this logo for openid connect and i

613
00:21:15,039 --> 00:21:18,879
placed

614
00:21:15,679 --> 00:21:22,799
center in it the uh

615
00:21:18,880 --> 00:21:24,640
uh the oauth logo because it is really

616
00:21:22,799 --> 00:21:26,799
a part of it i can't talk about open id

617
00:21:24,640 --> 00:21:29,200
connect document go up

618
00:21:26,799 --> 00:21:30,080
so you might say ng you're talking about

619
00:21:29,200 --> 00:21:31,600
authentication

620
00:21:30,080 --> 00:21:34,720
for god's sake what does authorization

621
00:21:31,600 --> 00:21:38,080
have to do here with authentication

622
00:21:34,720 --> 00:21:41,280
for federation what is that uh

623
00:21:38,080 --> 00:21:44,480
so it's very simple um

624
00:21:41,280 --> 00:21:47,360
so you were during the uh

625
00:21:44,480 --> 00:21:49,039
remember in the older protocols the

626
00:21:47,360 --> 00:21:51,520
older approaches

627
00:21:49,039 --> 00:21:53,039
it's more about hey there's this user

628
00:21:51,520 --> 00:21:56,080
also authenticate

629
00:21:53,039 --> 00:21:58,799
and so we authenticate them with the uh

630
00:21:56,080 --> 00:22:00,399
with the saml protocol with the identity

631
00:21:58,799 --> 00:22:03,600
provider of choice

632
00:22:00,400 --> 00:22:06,640
and and then a certain assertion

633
00:22:03,600 --> 00:22:08,080
um detailing the identity of the user is

634
00:22:06,640 --> 00:22:10,640
returned back to the to the

635
00:22:08,080 --> 00:22:12,720
questing application right that's the

636
00:22:10,640 --> 00:22:16,000
normal federation flow

637
00:22:12,720 --> 00:22:18,720
the the problem here is that again zero

638
00:22:16,000 --> 00:22:20,559
consideration of the user itself whether

639
00:22:18,720 --> 00:22:21,919
the users are okay with sharing their

640
00:22:20,559 --> 00:22:23,520
identity attributes with this

641
00:22:21,919 --> 00:22:26,080
application or not

642
00:22:23,520 --> 00:22:26,559
nothing of this is considered openid

643
00:22:26,080 --> 00:22:29,039
connect

644
00:22:26,559 --> 00:22:30,799
brings and brings us us it brings us

645
00:22:29,039 --> 00:22:34,158
back to the user what we call

646
00:22:30,799 --> 00:22:37,039
the user-centric uh uh experience

647
00:22:34,159 --> 00:22:38,400
okay for for uh id access management and

648
00:22:37,039 --> 00:22:40,879
here for authentication

649
00:22:38,400 --> 00:22:42,799
and so what happens here is that it's

650
00:22:40,880 --> 00:22:46,880
really critical

651
00:22:42,799 --> 00:22:48,960
to authorize the application

652
00:22:46,880 --> 00:22:50,640
that the the user wants to use

653
00:22:48,960 --> 00:22:53,760
travelopedia

654
00:22:50,640 --> 00:22:54,559
uh to make sure that the the user is

655
00:22:53,760 --> 00:22:57,760
okay

656
00:22:54,559 --> 00:22:59,520
obtain the user's consent before sharing

657
00:22:57,760 --> 00:23:01,919
the user's identity

658
00:22:59,520 --> 00:23:03,840
with travelopedia the application or the

659
00:23:01,919 --> 00:23:05,280
client and so that is where the oauth

660
00:23:03,840 --> 00:23:08,720
protocol comes in

661
00:23:05,280 --> 00:23:10,799
and so um what's happening here is

662
00:23:08,720 --> 00:23:12,640
uh it's really uh this is a very high

663
00:23:10,799 --> 00:23:13,200
level diagram okay so what's happening

664
00:23:12,640 --> 00:23:14,799
here

665
00:23:13,200 --> 00:23:16,720
is that the uh the application

666
00:23:14,799 --> 00:23:17,440
travelopedia the client we call it the

667
00:23:16,720 --> 00:23:19,919
client as well

668
00:23:17,440 --> 00:23:22,000
and we call through rp relying parts we

669
00:23:19,919 --> 00:23:23,280
call it a resource provider like oh my

670
00:23:22,000 --> 00:23:26,240
gosh like tons of things

671
00:23:23,280 --> 00:23:27,360
uh terminologies here but uh the user is

672
00:23:26,240 --> 00:23:29,760
gonna be using

673
00:23:27,360 --> 00:23:31,280
uh the application and the application

674
00:23:29,760 --> 00:23:33,440
will be like oh come on

675
00:23:31,280 --> 00:23:35,200
hey you know what i need to get this

676
00:23:33,440 --> 00:23:37,679
user to authenticate

677
00:23:35,200 --> 00:23:39,200
with their uh with the with the identity

678
00:23:37,679 --> 00:23:43,279
provider

679
00:23:39,200 --> 00:23:43,600
um that uh uh with the identity provider

680
00:23:43,279 --> 00:23:44,880
say

681
00:23:43,600 --> 00:23:46,799
if it's social login it's gonna be

682
00:23:44,880 --> 00:23:48,320
google if it's uh something belong to

683
00:23:46,799 --> 00:23:50,080
certain companies gonna be that company

684
00:23:48,320 --> 00:23:52,879
and so on so forth

685
00:23:50,080 --> 00:23:53,760
so there is those steps here one and two

686
00:23:52,880 --> 00:23:56,720
it's about

687
00:23:53,760 --> 00:23:57,360
obtaining an authorization grant it's

688
00:23:56,720 --> 00:24:00,080
getting

689
00:23:57,360 --> 00:24:00,399
a proof from the user that says that

690
00:24:00,080 --> 00:24:02,799
they

691
00:24:00,400 --> 00:24:03,840
are okay with sharing their identity

692
00:24:02,799 --> 00:24:06,879
attributes with this

693
00:24:03,840 --> 00:24:08,799
application travelopedia okay so now

694
00:24:06,880 --> 00:24:10,159
this application is going to take this

695
00:24:08,799 --> 00:24:13,360
authorization grain

696
00:24:10,159 --> 00:24:16,080
and go to something called authorization

697
00:24:13,360 --> 00:24:17,360
server give it the grant and say here

698
00:24:16,080 --> 00:24:19,520
here's that's the proof

699
00:24:17,360 --> 00:24:21,439
that shows that the user is okay and so

700
00:24:19,520 --> 00:24:24,240
the authorization gives back

701
00:24:21,440 --> 00:24:25,760
some stuff and or the identity uh we're

702
00:24:24,240 --> 00:24:27,200
gonna see that they but then it gives

703
00:24:25,760 --> 00:24:29,760
back an access token

704
00:24:27,200 --> 00:24:31,600
now the access token the application

705
00:24:29,760 --> 00:24:33,360
travel pd now have access token now we

706
00:24:31,600 --> 00:24:36,158
can use the access token to get

707
00:24:33,360 --> 00:24:38,479
more details about the user if needed

708
00:24:36,159 --> 00:24:41,679
this is because the user have

709
00:24:38,480 --> 00:24:42,640
said it's okay see the user-centric

710
00:24:41,679 --> 00:24:44,480
experience

711
00:24:42,640 --> 00:24:46,480
it's very respectful of the user and

712
00:24:44,480 --> 00:24:49,760
their privacy and their needs

713
00:24:46,480 --> 00:24:51,440
as well now i want you to hold on to

714
00:24:49,760 --> 00:24:52,720
this idea now let's go on to this

715
00:24:51,440 --> 00:24:54,640
diagram i know it's big

716
00:24:52,720 --> 00:24:55,840
we're not going to want to over all this

717
00:24:54,640 --> 00:24:58,400
flows

718
00:24:55,840 --> 00:25:00,320
but i really loved it i just thought

719
00:24:58,400 --> 00:25:02,080
it's going to be very useful uh for you

720
00:25:00,320 --> 00:25:04,960
to see that

721
00:25:02,080 --> 00:25:05,678
and uh what i would definitely see he

722
00:25:04,960 --> 00:25:08,799
say here

723
00:25:05,679 --> 00:25:11,120
is that you do have those browsers

724
00:25:08,799 --> 00:25:12,960
and this is what we call in the

725
00:25:11,120 --> 00:25:15,120
authentication the federation word what

726
00:25:12,960 --> 00:25:17,120
we call the identity provider

727
00:25:15,120 --> 00:25:18,158
and assume that you have an identity

728
00:25:17,120 --> 00:25:20,639
provider support

729
00:25:18,159 --> 00:25:21,360
supports both saml and ygc and i want to

730
00:25:20,640 --> 00:25:24,720
show you just

731
00:25:21,360 --> 00:25:28,080
how both uh differ it's a different it's

732
00:25:24,720 --> 00:25:29,840
a mental it's a mindset shift because

733
00:25:28,080 --> 00:25:31,279
if you look here at what happens in the

734
00:25:29,840 --> 00:25:33,918
sample flow so if i

735
00:25:31,279 --> 00:25:35,360
assume that this part here is not there

736
00:25:33,919 --> 00:25:38,559
and just look at the green

737
00:25:35,360 --> 00:25:41,719
okay so in this part here a user is

738
00:25:38,559 --> 00:25:42,879
trying to use travel pd which is say at

739
00:25:41,720 --> 00:25:44,960
sp.example.com

740
00:25:42,880 --> 00:25:46,400
okay and so the user will say hey i want

741
00:25:44,960 --> 00:25:49,520
to access that i want to

742
00:25:46,400 --> 00:25:52,240
log in or do this and so uh

743
00:25:49,520 --> 00:25:53,360
the travelopedia takes redirects the

744
00:25:52,240 --> 00:25:56,240
user to

745
00:25:53,360 --> 00:25:58,399
the identity provider and there the

746
00:25:56,240 --> 00:26:01,279
identity provider is going to

747
00:25:58,400 --> 00:26:02,480
display a login screen for the user tell

748
00:26:01,279 --> 00:26:03,919
them log in

749
00:26:02,480 --> 00:26:06,640
and the user is going to log in and

750
00:26:03,919 --> 00:26:09,760
stuff and then there will be some signed

751
00:26:06,640 --> 00:26:13,760
saml response received

752
00:26:09,760 --> 00:26:17,039
the saml is an assertion uh and it is uh

753
00:26:13,760 --> 00:26:20,000
signed and include a number of uh

754
00:26:17,039 --> 00:26:20,640
claims uh in uh yeah i'm used more to

755
00:26:20,000 --> 00:26:23,679
the

756
00:26:20,640 --> 00:26:24,159
uh the openit connect i prefer to use

757
00:26:23,679 --> 00:26:26,640
that

758
00:26:24,159 --> 00:26:27,760
but anyway so the claims or basically

759
00:26:26,640 --> 00:26:29,840
assertions around

760
00:26:27,760 --> 00:26:31,520
the privileges the user has in the

761
00:26:29,840 --> 00:26:34,000
groups and the stuff information

762
00:26:31,520 --> 00:26:36,320
about the user in the symbol and it's

763
00:26:34,000 --> 00:26:39,600
returned back to

764
00:26:36,320 --> 00:26:40,639
the uh the client here and the client is

765
00:26:39,600 --> 00:26:42,719
just gonna

766
00:26:40,640 --> 00:26:43,760
validate the signature and stuff and say

767
00:26:42,720 --> 00:26:46,480
good

768
00:26:43,760 --> 00:26:46,799
yeah that is indeed the user we just did

769
00:26:46,480 --> 00:26:48,480
that

770
00:26:46,799 --> 00:26:50,240
now you can access the resource now

771
00:26:48,480 --> 00:26:52,159
let's look at the same flow here

772
00:26:50,240 --> 00:26:53,520
but let's see if i'm using open id

773
00:26:52,159 --> 00:26:54,960
connect and i want you to see the

774
00:26:53,520 --> 00:26:58,000
respect

775
00:26:54,960 --> 00:26:59,360
how the user is being respected here and

776
00:26:58,000 --> 00:27:01,279
the user is the owner

777
00:26:59,360 --> 00:27:03,840
look at it the user is the owner of its

778
00:27:01,279 --> 00:27:06,640
identity the his or her identity

779
00:27:03,840 --> 00:27:07,520
and the user is the king or the queen of

780
00:27:06,640 --> 00:27:10,559
their identity

781
00:27:07,520 --> 00:27:10,879
it's really that way but we've law firm

782
00:27:10,559 --> 00:27:13,440
so

783
00:27:10,880 --> 00:27:15,120
long dismissed that but now open id

784
00:27:13,440 --> 00:27:16,000
connect again the user centric

785
00:27:15,120 --> 00:27:18,840
experience

786
00:27:16,000 --> 00:27:20,159
so look at this so uh there is a request

787
00:27:18,840 --> 00:27:21,678
for

788
00:27:20,159 --> 00:27:23,120
the user wants to access requests and

789
00:27:21,679 --> 00:27:24,880
say hey you want to access this i want

790
00:27:23,120 --> 00:27:27,199
to log in and stuff

791
00:27:24,880 --> 00:27:29,120
the users then there is some openid

792
00:27:27,200 --> 00:27:32,240
connect

793
00:27:29,120 --> 00:27:36,320
authorization code request that is sent

794
00:27:32,240 --> 00:27:39,600
uh to the idc and the user is redirected

795
00:27:36,320 --> 00:27:42,799
to login uh with the

796
00:27:39,600 --> 00:27:44,559
identity provider then the user starts

797
00:27:42,799 --> 00:27:45,679
interacting the login page and enters

798
00:27:44,559 --> 00:27:49,279
credentials and stuff but

799
00:27:45,679 --> 00:27:50,480
look at step number six obtain end user

800
00:27:49,279 --> 00:27:52,159
consent and say

801
00:27:50,480 --> 00:27:54,240
here are your attributes we're gonna

802
00:27:52,159 --> 00:27:56,399
share this are you okay

803
00:27:54,240 --> 00:27:58,000
are you fine with this and then the user

804
00:27:56,399 --> 00:27:59,520
says yes or no and based on that we

805
00:27:58,000 --> 00:28:02,159
provide the content

806
00:27:59,520 --> 00:28:04,080
um and then it's redirected back with

807
00:28:02,159 --> 00:28:05,520
the authorization code this is one of

808
00:28:04,080 --> 00:28:07,039
the flows by the way it's not all the

809
00:28:05,520 --> 00:28:07,760
flows there are other flows for applying

810
00:28:07,039 --> 00:28:09,279
to connect

811
00:28:07,760 --> 00:28:10,879
i'm just going to focus on the off code

812
00:28:09,279 --> 00:28:14,640
grant for now

813
00:28:10,880 --> 00:28:17,360
um so redirect with auth code and then

814
00:28:14,640 --> 00:28:18,720
uh with the off code here that's the

815
00:28:17,360 --> 00:28:21,760
proof that the user is

816
00:28:18,720 --> 00:28:23,120
okay and now the off code now the client

817
00:28:21,760 --> 00:28:26,240
has it and so

818
00:28:23,120 --> 00:28:29,840
based on that the uh the user

819
00:28:26,240 --> 00:28:32,320
is the the client is gonna

820
00:28:29,840 --> 00:28:33,520
send a request back to the identity

821
00:28:32,320 --> 00:28:37,039
provider and saying hey

822
00:28:33,520 --> 00:28:39,840
i have the proof now please give me back

823
00:28:37,039 --> 00:28:41,200
the identity token which is detailing

824
00:28:39,840 --> 00:28:44,000
the identity of the user

825
00:28:41,200 --> 00:28:46,080
and some claims and it's signed it's

826
00:28:44,000 --> 00:28:49,039
assigned json just the shot

827
00:28:46,080 --> 00:28:50,320
and return it back to me and give me an

828
00:28:49,039 --> 00:28:52,799
access token if i need more

829
00:28:50,320 --> 00:28:53,760
and so that's what happens and then now

830
00:28:52,799 --> 00:28:56,960
the client has

831
00:28:53,760 --> 00:29:00,480
this accidentally token valid and then

832
00:28:56,960 --> 00:29:03,919
they can ask ask even for more using

833
00:29:00,480 --> 00:29:07,279
the access token isn't it beautiful

834
00:29:03,919 --> 00:29:08,880
right it's beautiful okay so open id

835
00:29:07,279 --> 00:29:12,399
connect versus saml so i

836
00:29:08,880 --> 00:29:15,360
i just put this this here for you

837
00:29:12,399 --> 00:29:17,199
from different sources uh but basically

838
00:29:15,360 --> 00:29:18,959
i just want to highlight a couple things

839
00:29:17,200 --> 00:29:21,039
here and this is for your reference

840
00:29:18,960 --> 00:29:22,080
just a couple of things first of all

841
00:29:21,039 --> 00:29:27,039
interoperability

842
00:29:22,080 --> 00:29:27,760
so saml saml uh as a a protocol this

843
00:29:27,039 --> 00:29:30,080
this is not

844
00:29:27,760 --> 00:29:31,120
does not support native apps does not

845
00:29:30,080 --> 00:29:34,559
support mobile

846
00:29:31,120 --> 00:29:35,520
machine to machine no know that for all

847
00:29:34,559 --> 00:29:36,960
these

848
00:29:35,520 --> 00:29:39,200
you need to use open id connect for

849
00:29:36,960 --> 00:29:41,520
federation and you see that

850
00:29:39,200 --> 00:29:43,679
saml is not going to work for you okay

851
00:29:41,520 --> 00:29:46,879
now it's only browser based

852
00:29:43,679 --> 00:29:47,200
um now collects consent we said say i'm

853
00:29:46,880 --> 00:29:50,320
all

854
00:29:47,200 --> 00:29:52,240
no open id yeah and

855
00:29:50,320 --> 00:29:54,080
lightweight of course open id connect is

856
00:29:52,240 --> 00:29:57,520
definitely using lightweight json

857
00:29:54,080 --> 00:30:01,199
saml is using xml

858
00:29:57,520 --> 00:30:02,399
and um and and and one one thing i just

859
00:30:01,200 --> 00:30:04,960
want to recommend

860
00:30:02,399 --> 00:30:06,639
is that if you are developing for

861
00:30:04,960 --> 00:30:09,760
enterprise apps and stuff

862
00:30:06,640 --> 00:30:10,880
and they are already uh you know you

863
00:30:09,760 --> 00:30:14,720
have saml

864
00:30:10,880 --> 00:30:16,799
uh ability um to interact with

865
00:30:14,720 --> 00:30:17,760
with uh to support semi-federation

866
00:30:16,799 --> 00:30:19,760
that's okay

867
00:30:17,760 --> 00:30:21,520
now when you're building new apps put in

868
00:30:19,760 --> 00:30:24,480
your mind again

869
00:30:21,520 --> 00:30:26,399
weigh your benefits way why and and

870
00:30:24,480 --> 00:30:28,559
where you want to take it next and

871
00:30:26,399 --> 00:30:30,080
my recommendation is things are going

872
00:30:28,559 --> 00:30:31,600
towards open id connect

873
00:30:30,080 --> 00:30:33,678
if you're building new apps for

874
00:30:31,600 --> 00:30:34,799
consumers go for open id connect

875
00:30:33,679 --> 00:30:37,760
federation

876
00:30:34,799 --> 00:30:39,760
um and and and definitely again if you

877
00:30:37,760 --> 00:30:42,240
are protecting api resources

878
00:30:39,760 --> 00:30:44,158
uh it's you'd better do we do it using

879
00:30:42,240 --> 00:30:44,799
open id connect anyways it's built on a

880
00:30:44,159 --> 00:30:47,200
lot so

881
00:30:44,799 --> 00:30:49,440
why the you know the plugging things

882
00:30:47,200 --> 00:30:52,799
with with saml just get some

883
00:30:49,440 --> 00:30:55,760
tricky stuff um now

884
00:30:52,799 --> 00:30:56,480
uh okay so now we talked about passwords

885
00:30:55,760 --> 00:30:59,039
right

886
00:30:56,480 --> 00:31:00,399
and and remember we had this uh we

887
00:30:59,039 --> 00:31:02,799
talked about federation

888
00:31:00,399 --> 00:31:03,439
none of them actually solved the problem

889
00:31:02,799 --> 00:31:05,200
of fishing

890
00:31:03,440 --> 00:31:07,519
obviously it's like feeling us badly

891
00:31:05,200 --> 00:31:10,080
here but

892
00:31:07,519 --> 00:31:12,399
we're going to use multi-factor so

893
00:31:10,080 --> 00:31:15,120
multi-factor brings up the game

894
00:31:12,399 --> 00:31:15,760
to a better level a little bit better

895
00:31:15,120 --> 00:31:17,600
okay

896
00:31:15,760 --> 00:31:19,440
and there's many ways to incorporate

897
00:31:17,600 --> 00:31:22,559
another factor

898
00:31:19,440 --> 00:31:23,039
so one uh one the very common one which

899
00:31:22,559 --> 00:31:25,200
is

900
00:31:23,039 --> 00:31:26,720
what we call the otp and there's many

901
00:31:25,200 --> 00:31:27,679
different types so it's a one-time

902
00:31:26,720 --> 00:31:29,200
password

903
00:31:27,679 --> 00:31:30,720
and there's many different types so it's

904
00:31:29,200 --> 00:31:34,080
called hmac otp

905
00:31:30,720 --> 00:31:37,200
or time based otp

906
00:31:34,080 --> 00:31:39,519
and the differences here is like like

907
00:31:37,200 --> 00:31:41,200
the for the hmac otp there is a one-time

908
00:31:39,519 --> 00:31:45,679
password since you say

909
00:31:41,200 --> 00:31:48,799
in an sms suppose whatever the way but

910
00:31:45,679 --> 00:31:52,000
this uh one-time password is gonna stay

911
00:31:48,799 --> 00:31:54,480
um at the same stay valid

912
00:31:52,000 --> 00:31:55,519
until another one is sent or it expires

913
00:31:54,480 --> 00:31:58,000
time

914
00:31:55,519 --> 00:32:00,159
um and then what happens is that you

915
00:31:58,000 --> 00:32:02,880
enter the password and the one time uh

916
00:32:00,159 --> 00:32:03,919
uh pass one time password in order to

917
00:32:02,880 --> 00:32:07,279
authenticate

918
00:32:03,919 --> 00:32:08,559
the totp though is time sensitive it's

919
00:32:07,279 --> 00:32:11,679
like an authentic hitter

920
00:32:08,559 --> 00:32:14,320
uh it's a app on your um

921
00:32:11,679 --> 00:32:16,799
on your phone and our authenticator app

922
00:32:14,320 --> 00:32:18,960
and it's just basically

923
00:32:16,799 --> 00:32:20,399
valid for for any single point in time

924
00:32:18,960 --> 00:32:23,120
there's only one

925
00:32:20,399 --> 00:32:24,719
otp that is valid so it's a little bit

926
00:32:23,120 --> 00:32:25,760
of difference but i just wanted to point

927
00:32:24,720 --> 00:32:28,159
that out

928
00:32:25,760 --> 00:32:29,120
this is the most common right and sms

929
00:32:28,159 --> 00:32:31,200
and

930
00:32:29,120 --> 00:32:32,879
voice and stuff based on that another

931
00:32:31,200 --> 00:32:33,519
thing that's also very common is mobile

932
00:32:32,880 --> 00:32:36,080
push

933
00:32:33,519 --> 00:32:37,440
where uh basically when you log in with

934
00:32:36,080 --> 00:32:41,199
a password then

935
00:32:37,440 --> 00:32:43,200
there's a push notification sent uh back

936
00:32:41,200 --> 00:32:45,519
and you there's like when you're logging

937
00:32:43,200 --> 00:32:46,480
into office 365 and you get this allowed

938
00:32:45,519 --> 00:32:50,000
deny

939
00:32:46,480 --> 00:32:52,399
and hey you click allow this will

940
00:32:50,000 --> 00:32:54,399
uh basically sign a certain assertion

941
00:32:52,399 --> 00:32:56,959
return back

942
00:32:54,399 --> 00:32:57,439
and that will say yes the user is okay

943
00:32:56,960 --> 00:33:01,279
here

944
00:32:57,440 --> 00:33:03,200
and yes uh unfortunately

945
00:33:01,279 --> 00:33:04,799
what we just discussed here is still

946
00:33:03,200 --> 00:33:07,919
prone to

947
00:33:04,799 --> 00:33:10,480
phishing the user is going to be

948
00:33:07,919 --> 00:33:12,320
creating a bad site malicious site and

949
00:33:10,480 --> 00:33:16,000
can harvest these things

950
00:33:12,320 --> 00:33:19,360
as well so and then relay them to

951
00:33:16,000 --> 00:33:21,039
the uh the identity provider so the

952
00:33:19,360 --> 00:33:23,760
fishing is still a problem

953
00:33:21,039 --> 00:33:25,600
and if you know that oh my gosh like

954
00:33:23,760 --> 00:33:26,879
tons of attacks still happening because

955
00:33:25,600 --> 00:33:28,719
of fishing and yes

956
00:33:26,880 --> 00:33:30,480
human is the weakest link but it's the

957
00:33:28,720 --> 00:33:32,159
most beautiful link and so we have to

958
00:33:30,480 --> 00:33:36,080
find a way to make it happen

959
00:33:32,159 --> 00:33:37,919
right um and so comes fighter 2 and i

960
00:33:36,080 --> 00:33:39,840
just took here this is like a screenshot

961
00:33:37,919 --> 00:33:42,640
of the fighter 2

962
00:33:39,840 --> 00:33:44,158
super happy about what they've done

963
00:33:42,640 --> 00:33:47,360
alliance

964
00:33:44,159 --> 00:33:48,080
and then it obviously what we're talking

965
00:33:47,360 --> 00:33:51,320
about here

966
00:33:48,080 --> 00:33:53,760
is what we call a multi-factor

967
00:33:51,320 --> 00:33:56,480
authenticator

968
00:33:53,760 --> 00:33:58,640
it's a it is also said to be a password

969
00:33:56,480 --> 00:34:01,360
list and we're going to say here why

970
00:33:58,640 --> 00:34:02,880
but uh it is it's not because there is

971
00:34:01,360 --> 00:34:05,279
no password whatsoever

972
00:34:02,880 --> 00:34:07,679
it's just because the password is not

973
00:34:05,279 --> 00:34:11,280
sentence shared with a server there's

974
00:34:07,679 --> 00:34:11,280
the password never leaves the device

975
00:34:11,359 --> 00:34:16,159
called private key but anyways okay

976
00:34:14,480 --> 00:34:17,520
so but there are some pins and things

977
00:34:16,159 --> 00:34:19,520
yeah anyways

978
00:34:17,520 --> 00:34:21,040
but this allows you based on the fido

979
00:34:19,520 --> 00:34:23,119
protocol and its beauty

980
00:34:21,040 --> 00:34:25,199
it allows you actually to compose

981
00:34:23,119 --> 00:34:26,639
multiple authenticators again the user

982
00:34:25,199 --> 00:34:28,399
in full control

983
00:34:26,639 --> 00:34:29,919
i can actually have a beautiful

984
00:34:28,399 --> 00:34:32,399
experience where

985
00:34:29,918 --> 00:34:33,918
i can use a compound many authenticators

986
00:34:32,399 --> 00:34:35,679
can be a hardware token it can be in my

987
00:34:33,918 --> 00:34:37,839
mobile device it can be a pin it can be

988
00:34:35,679 --> 00:34:40,720
my biometrics

989
00:34:37,839 --> 00:34:42,879
everything right so uh let's dive into a

990
00:34:40,719 --> 00:34:45,040
little bit into this and understand

991
00:34:42,879 --> 00:34:46,839
more so we finished the password coming

992
00:34:45,040 --> 00:34:50,000
to password

993
00:34:46,839 --> 00:34:52,560
so so the password list i'm introducing

994
00:34:50,000 --> 00:34:53,839
fido to and think of fighter 2 whenever

995
00:34:52,560 --> 00:34:54,480
you hear the word it's really an

996
00:34:53,839 --> 00:34:57,680
umbrella

997
00:34:54,480 --> 00:34:59,520
of two main protocols uh

998
00:34:57,680 --> 00:35:00,799
that have been actually incorporated as

999
00:34:59,520 --> 00:35:03,839
apis

1000
00:35:00,800 --> 00:35:06,880
in the browsers and the devices

1001
00:35:03,839 --> 00:35:09,359
so fighter 2 is a combination of two

1002
00:35:06,880 --> 00:35:11,200
one is called web off and and the other

1003
00:35:09,359 --> 00:35:14,960
one is called

1004
00:35:11,200 --> 00:35:18,000
c tap and and then

1005
00:35:14,960 --> 00:35:21,599
what it what it is doing is trying to

1006
00:35:18,000 --> 00:35:25,119
find a solution uh by which

1007
00:35:21,599 --> 00:35:26,720
um your again the client which is

1008
00:35:25,119 --> 00:35:30,720
running maybe on your

1009
00:35:26,720 --> 00:35:34,319
um a computer or on your phone

1010
00:35:30,720 --> 00:35:39,279
uh once again to authenticate to

1011
00:35:34,320 --> 00:35:42,400
uh some remote server website uh right

1012
00:35:39,280 --> 00:35:44,160
and uh and

1013
00:35:42,400 --> 00:35:46,560
send the authentications uh to this

1014
00:35:44,160 --> 00:35:48,879
remote server website

1015
00:35:46,560 --> 00:35:49,599
and another thing here that i want you

1016
00:35:48,880 --> 00:35:52,560
to notice

1017
00:35:49,599 --> 00:35:53,200
is um webauthmn is the protocol that

1018
00:35:52,560 --> 00:35:55,359
handles

1019
00:35:53,200 --> 00:35:57,040
how the communication goes between the

1020
00:35:55,359 --> 00:36:00,078
client and the remote server

1021
00:35:57,040 --> 00:36:02,560
the ctap is the one that handles uh

1022
00:36:00,079 --> 00:36:03,119
what we call remote authenticators like

1023
00:36:02,560 --> 00:36:06,720
what are

1024
00:36:03,119 --> 00:36:08,560
how do we manage the these conversations

1025
00:36:06,720 --> 00:36:11,040
and chatting that comes between

1026
00:36:08,560 --> 00:36:12,000
the removable authenticator like a phone

1027
00:36:11,040 --> 00:36:14,560
your phone can be

1028
00:36:12,000 --> 00:36:15,040
acting as an authenticator actually uh

1029
00:36:14,560 --> 00:36:17,520
for

1030
00:36:15,040 --> 00:36:20,000
uh your applications or you can have a

1031
00:36:17,520 --> 00:36:23,920
secret key like your keys and things

1032
00:36:20,000 --> 00:36:26,240
um but also for your client

1033
00:36:23,920 --> 00:36:27,680
for for even even on your device the

1034
00:36:26,240 --> 00:36:29,118
same device in which you're running the

1035
00:36:27,680 --> 00:36:31,200
application or decline

1036
00:36:29,119 --> 00:36:33,280
you can have built-in authenticators

1037
00:36:31,200 --> 00:36:36,640
like through fingerprints and others

1038
00:36:33,280 --> 00:36:40,880
so beautiful

1039
00:36:36,640 --> 00:36:42,799
so what uh what we want to do here

1040
00:36:40,880 --> 00:36:45,040
and do understand is really how this

1041
00:36:42,800 --> 00:36:47,680
thing works why is it worth it

1042
00:36:45,040 --> 00:36:49,040
why does it uh why why does it really

1043
00:36:47,680 --> 00:36:49,919
solve the phishing problem why is it

1044
00:36:49,040 --> 00:36:53,359
passwordless

1045
00:36:49,920 --> 00:36:55,760
here's the thing cryptography so

1046
00:36:53,359 --> 00:36:57,520
here is that assume that i have facebook

1047
00:36:55,760 --> 00:36:58,079
uh i want to log into my facebook

1048
00:36:57,520 --> 00:37:00,079
account

1049
00:36:58,079 --> 00:37:01,440
okay and here is the facebook server

1050
00:37:00,079 --> 00:37:04,560
here

1051
00:37:01,440 --> 00:37:08,079
okay so what happens here i have this uh

1052
00:37:04,560 --> 00:37:11,040
this is the the really um

1053
00:37:08,079 --> 00:37:12,800
normal screen but that's not what fido

1054
00:37:11,040 --> 00:37:16,640
looks like really

1055
00:37:12,800 --> 00:37:20,079
usually there is when it is time

1056
00:37:16,640 --> 00:37:20,960
to uh for fighter clients uh creating an

1057
00:37:20,079 --> 00:37:24,079
account

1058
00:37:20,960 --> 00:37:28,000
there's two things registration uh

1059
00:37:24,079 --> 00:37:29,760
and then uh basically the use okay

1060
00:37:28,000 --> 00:37:31,839
so the the thing is that assume that i

1061
00:37:29,760 --> 00:37:33,440
have a certain security so i think

1062
00:37:31,839 --> 00:37:36,160
say in this example have the security

1063
00:37:33,440 --> 00:37:37,359
key here and maybe it's my phone maybe

1064
00:37:36,160 --> 00:37:39,040
it's something else maybe it's a

1065
00:37:37,359 --> 00:37:39,598
hardware key is like just like you see

1066
00:37:39,040 --> 00:37:43,119
here

1067
00:37:39,599 --> 00:37:46,560
but what happens here is very simple

1068
00:37:43,119 --> 00:37:47,599
uh when i want to log in before that i

1069
00:37:46,560 --> 00:37:50,960
have to create an account

1070
00:37:47,599 --> 00:37:54,400
so the way that an account is created is

1071
00:37:50,960 --> 00:37:57,599
uh the um the user

1072
00:37:54,400 --> 00:37:58,880
um i'm sorry the the client itself wants

1073
00:37:57,599 --> 00:38:02,839
to

1074
00:37:58,880 --> 00:38:05,680
get credentials created by the

1075
00:38:02,839 --> 00:38:09,440
um by by the security key

1076
00:38:05,680 --> 00:38:12,720
that we own that alice owns and

1077
00:38:09,440 --> 00:38:14,480
and uh how does this happen the client

1078
00:38:12,720 --> 00:38:15,359
which is the client of facebook that is

1079
00:38:14,480 --> 00:38:18,560
fido

1080
00:38:15,359 --> 00:38:21,680
supporting fido uses the

1081
00:38:18,560 --> 00:38:22,160
browser's api for web authen in order to

1082
00:38:21,680 --> 00:38:25,680
ask

1083
00:38:22,160 --> 00:38:27,598
hey i want credentials created for

1084
00:38:25,680 --> 00:38:29,200
a private and public key and give me

1085
00:38:27,599 --> 00:38:31,359
back the public key

1086
00:38:29,200 --> 00:38:33,759
so private is a private key is a secret

1087
00:38:31,359 --> 00:38:36,160
and this device

1088
00:38:33,760 --> 00:38:38,079
and also i forgot to say that also the

1089
00:38:36,160 --> 00:38:41,200
origin of the call is returned so

1090
00:38:38,079 --> 00:38:44,400
you have here um

1091
00:38:41,200 --> 00:38:47,200
no i'm sorry not the origin here uh

1092
00:38:44,400 --> 00:38:47,599
so basically what's happening here is uh

1093
00:38:47,200 --> 00:38:49,680
the

1094
00:38:47,599 --> 00:38:51,119
the the security key is gonna generate a

1095
00:38:49,680 --> 00:38:53,200
private and a public key

1096
00:38:51,119 --> 00:38:54,560
and return back the public key and the

1097
00:38:53,200 --> 00:38:56,000
browser is gonna pass this back to the

1098
00:38:54,560 --> 00:38:57,119
client the client is gonna pass this

1099
00:38:56,000 --> 00:38:59,839
back to the server

1100
00:38:57,119 --> 00:39:01,440
and the server is gonna now say yes this

1101
00:38:59,839 --> 00:39:02,880
is the public key i'm going to use to

1102
00:39:01,440 --> 00:39:06,720
validate

1103
00:39:02,880 --> 00:39:08,240
uh assigned whatever signed messages i'm

1104
00:39:06,720 --> 00:39:10,879
going to get from

1105
00:39:08,240 --> 00:39:12,240
this thing now when it's time to use

1106
00:39:10,880 --> 00:39:15,280
let's follow this diagram now

1107
00:39:12,240 --> 00:39:18,319
it's time to use now so the first thing

1108
00:39:15,280 --> 00:39:20,079
is uh when it is a time to authenticate

1109
00:39:18,320 --> 00:39:22,160
uh the server sends a challenge

1110
00:39:20,079 --> 00:39:23,040
challenges some dance of some sort or

1111
00:39:22,160 --> 00:39:26,640
something

1112
00:39:23,040 --> 00:39:30,000
and then uh the client again through the

1113
00:39:26,640 --> 00:39:32,640
api the web button and the ctap apis uh

1114
00:39:30,000 --> 00:39:33,920
whatever the again the there's some more

1115
00:39:32,640 --> 00:39:36,000
details here

1116
00:39:33,920 --> 00:39:37,520
uh but then it sends the origin so it's

1117
00:39:36,000 --> 00:39:39,520
the facebook to come along with the

1118
00:39:37,520 --> 00:39:42,720
challenge and ask the key

1119
00:39:39,520 --> 00:39:44,160
to encrypt this see the beauty of it the

1120
00:39:42,720 --> 00:39:47,200
key is gonna say

1121
00:39:44,160 --> 00:39:48,160
hey user are you okay with me doing this

1122
00:39:47,200 --> 00:39:49,919
action

1123
00:39:48,160 --> 00:39:51,598
because i'm gonna sign this and send it

1124
00:39:49,920 --> 00:39:53,280
give me your consent the consent is

1125
00:39:51,599 --> 00:39:54,160
gonna be a fingerprint or a pin or

1126
00:39:53,280 --> 00:39:55,920
whatever

1127
00:39:54,160 --> 00:39:57,680
so the user does this and then based on

1128
00:39:55,920 --> 00:40:01,040
that uh

1129
00:39:57,680 --> 00:40:03,759
this uh this device

1130
00:40:01,040 --> 00:40:04,480
uh the removable authenticator is gonna

1131
00:40:03,760 --> 00:40:07,599
basically

1132
00:40:04,480 --> 00:40:10,319
encrypt the uh uh

1133
00:40:07,599 --> 00:40:10,800
sorry it's gonna sign both the challenge

1134
00:40:10,319 --> 00:40:13,440
and

1135
00:40:10,800 --> 00:40:13,920
the origin and return it back so it's

1136
00:40:13,440 --> 00:40:16,400
signed

1137
00:40:13,920 --> 00:40:18,480
it's signed with the private key now how

1138
00:40:16,400 --> 00:40:20,480
the signature can be validated

1139
00:40:18,480 --> 00:40:22,000
it the server does not need the private

1140
00:40:20,480 --> 00:40:23,280
the private key at all and it doesn't

1141
00:40:22,000 --> 00:40:25,520
know anything about it

1142
00:40:23,280 --> 00:40:26,560
it's only the public key just the

1143
00:40:25,520 --> 00:40:29,839
asymmetric

1144
00:40:26,560 --> 00:40:30,160
cryptography right so we go back and

1145
00:40:29,839 --> 00:40:32,078
then

1146
00:40:30,160 --> 00:40:34,000
all the way the client sends that

1147
00:40:32,079 --> 00:40:36,240
assigned assertion

1148
00:40:34,000 --> 00:40:37,680
uh about the challenge and the facebook

1149
00:40:36,240 --> 00:40:40,319
the origin to the server

1150
00:40:37,680 --> 00:40:41,759
it validates it and yes that's it now if

1151
00:40:40,319 --> 00:40:44,000
i find something like

1152
00:40:41,760 --> 00:40:45,359
malicious facebook.com with it which is

1153
00:40:44,000 --> 00:40:48,480
the phishing ideas right

1154
00:40:45,359 --> 00:40:49,920
it will catch it now

1155
00:40:48,480 --> 00:40:51,599
there's many types of authenticators

1156
00:40:49,920 --> 00:40:53,760
again we have roaming authenticators

1157
00:40:51,599 --> 00:40:57,040
built-in authenticators

1158
00:40:53,760 --> 00:40:58,880
and the options it's beautiful really

1159
00:40:57,040 --> 00:41:01,920
the options are a lot

1160
00:40:58,880 --> 00:41:05,760
uh you might think okay

1161
00:41:01,920 --> 00:41:07,200
wait hold on how does this relate to

1162
00:41:05,760 --> 00:41:09,040
single sign-on so you've been talking

1163
00:41:07,200 --> 00:41:10,560
about open id connecting your protocols

1164
00:41:09,040 --> 00:41:13,599
and these things in saml

1165
00:41:10,560 --> 00:41:15,839
um what does this have to do with

1166
00:41:13,599 --> 00:41:18,319
that these were password-based so that

1167
00:41:15,839 --> 00:41:22,480
does that mean this is replacing sso

1168
00:41:18,319 --> 00:41:24,800
no no no no no this is actually

1169
00:41:22,480 --> 00:41:27,119
complementing the sso experience with

1170
00:41:24,800 --> 00:41:30,800
this beautiful experience of fido

1171
00:41:27,119 --> 00:41:33,200
so uh think of all the sso uh uh

1172
00:41:30,800 --> 00:41:34,560
like flow just the same as you're used

1173
00:41:33,200 --> 00:41:36,399
to but then

1174
00:41:34,560 --> 00:41:37,839
there is one only step that instead of

1175
00:41:36,400 --> 00:41:38,720
signing in with your password you're

1176
00:41:37,839 --> 00:41:41,119
gonna

1177
00:41:38,720 --> 00:41:42,160
sign in with the same steps of fido

1178
00:41:41,119 --> 00:41:45,440
that's it

1179
00:41:42,160 --> 00:41:45,440
otherwise everything is the same

1180
00:41:45,520 --> 00:41:50,000
and the results are in and i just again

1181
00:41:47,920 --> 00:41:50,640
i'm retreating i put all these stuff

1182
00:41:50,000 --> 00:41:53,040
here

1183
00:41:50,640 --> 00:41:54,240
because i want you to see how these

1184
00:41:53,040 --> 00:41:57,279
platforms how these

1185
00:41:54,240 --> 00:41:59,200
uh things compare and

1186
00:41:57,280 --> 00:42:00,720
what is important about this is that

1187
00:41:59,200 --> 00:42:02,960
that's not what you're gonna use

1188
00:42:00,720 --> 00:42:04,078
don't use this comparison and say just

1189
00:42:02,960 --> 00:42:07,920
because

1190
00:42:04,079 --> 00:42:11,760
uh it is uh supporting for

1191
00:42:07,920 --> 00:42:14,079
it is a browser compatible uh

1192
00:42:11,760 --> 00:42:15,760
for for example server compatible i'm

1193
00:42:14,079 --> 00:42:16,720
going to use it or no i'm not gonna use

1194
00:42:15,760 --> 00:42:18,960
it

1195
00:42:16,720 --> 00:42:19,839
no it's based on your application of it

1196
00:42:18,960 --> 00:42:22,560
and your use

1197
00:42:19,839 --> 00:42:24,400
and your needs don't go beyond that it's

1198
00:42:22,560 --> 00:42:26,720
not based on the stand like this

1199
00:42:24,400 --> 00:42:27,839
is great but this will allow you how to

1200
00:42:26,720 --> 00:42:29,839
based on how

1201
00:42:27,839 --> 00:42:31,279
you value each of these attributes and

1202
00:42:29,839 --> 00:42:32,078
you're based in your use case you're

1203
00:42:31,280 --> 00:42:35,040
gonna

1204
00:42:32,079 --> 00:42:37,520
make a choice so now with stock

1205
00:42:35,040 --> 00:42:41,680
authorization

1206
00:42:37,520 --> 00:42:43,200
so for authorization uh authorization

1207
00:42:41,680 --> 00:42:44,960
again is trying to see really can a

1208
00:42:43,200 --> 00:42:46,160
subject access the object at this time

1209
00:42:44,960 --> 00:42:46,800
with these attributes with these

1210
00:42:46,160 --> 00:42:49,920
conditions

1211
00:42:46,800 --> 00:42:53,280
right so access control models

1212
00:42:49,920 --> 00:42:56,319
uh are have been like since eternity

1213
00:42:53,280 --> 00:42:57,040
lots of them have really matured over

1214
00:42:56,319 --> 00:42:59,839
time

1215
00:42:57,040 --> 00:43:00,560
and from access control list drill bays

1216
00:42:59,839 --> 00:43:03,440
apac

1217
00:43:00,560 --> 00:43:03,839
attribute base uh policy base which is

1218
00:43:03,440 --> 00:43:05,599
uh

1219
00:43:03,839 --> 00:43:07,119
you know for now probably take it for

1220
00:43:05,599 --> 00:43:10,160
now attribute based

1221
00:43:07,119 --> 00:43:11,680
uh and policy base are usually used

1222
00:43:10,160 --> 00:43:12,240
interchangeably there's a little bit of

1223
00:43:11,680 --> 00:43:14,000
difference

1224
00:43:12,240 --> 00:43:15,520
it's okay just use interchangeably for

1225
00:43:14,000 --> 00:43:19,280
now and what we call

1226
00:43:15,520 --> 00:43:21,359
a radac risk adaptable access control

1227
00:43:19,280 --> 00:43:22,400
so in order to explain this to you in an

1228
00:43:21,359 --> 00:43:25,200
easy way

1229
00:43:22,400 --> 00:43:26,079
uh i've been thinking about that disney

1230
00:43:25,200 --> 00:43:29,118
oh my gosh

1231
00:43:26,079 --> 00:43:30,319
when will the kobe be off out of our

1232
00:43:29,119 --> 00:43:32,640
lives i don't know

1233
00:43:30,319 --> 00:43:34,560
but anyways so the disney rides assume

1234
00:43:32,640 --> 00:43:37,279
that there's a new ride

1235
00:43:34,560 --> 00:43:38,000
and uh and all the beautiful access

1236
00:43:37,280 --> 00:43:41,280
controls

1237
00:43:38,000 --> 00:43:43,760
uh are gonna be used in order to

1238
00:43:41,280 --> 00:43:45,680
authorize if someone should uh enter

1239
00:43:43,760 --> 00:43:47,520
this right and assume it's news we need

1240
00:43:45,680 --> 00:43:49,440
testers come on you can get the

1241
00:43:47,520 --> 00:43:51,920
just a customer writing and and you're

1242
00:43:49,440 --> 00:43:54,880
right without testing you first

1243
00:43:51,920 --> 00:43:56,400
and so my new ride is waiting for me but

1244
00:43:54,880 --> 00:43:56,800
the testers have to test so the first

1245
00:43:56,400 --> 00:43:59,599
one

1246
00:43:56,800 --> 00:44:00,400
the first protocol which is uh the first

1247
00:43:59,599 --> 00:44:02,800
model

1248
00:44:00,400 --> 00:44:03,440
model is not a protocol the first model

1249
00:44:02,800 --> 00:44:06,640
which is

1250
00:44:03,440 --> 00:44:09,680
access control lists is gonna say hey

1251
00:44:06,640 --> 00:44:10,160
is your name on the list if that's the

1252
00:44:09,680 --> 00:44:12,240
case

1253
00:44:10,160 --> 00:44:14,160
you go in you're authorized if that's

1254
00:44:12,240 --> 00:44:17,359
not the case you're out

1255
00:44:14,160 --> 00:44:19,680
our back role base access control

1256
00:44:17,359 --> 00:44:22,400
is all about roles and the permissions

1257
00:44:19,680 --> 00:44:25,759
and so if testers always have the screen

1258
00:44:22,400 --> 00:44:28,720
pass because the role

1259
00:44:25,760 --> 00:44:31,040
is defined by the screen pass and so i'm

1260
00:44:28,720 --> 00:44:32,480
going to say oh you have the green pass

1261
00:44:31,040 --> 00:44:34,160
oh so you must be in the group of the

1262
00:44:32,480 --> 00:44:37,440
testers go in

1263
00:44:34,160 --> 00:44:39,680
now abac is gonna say come on

1264
00:44:37,440 --> 00:44:40,880
what's your height what's your age

1265
00:44:39,680 --> 00:44:42,720
what's the time of the day

1266
00:44:40,880 --> 00:44:45,200
are we ready okay go on you're

1267
00:44:42,720 --> 00:44:47,200
authorized or not your attributes

1268
00:44:45,200 --> 00:44:49,118
based on the attributes of the subject

1269
00:44:47,200 --> 00:44:51,200
based on the attributes of the objects

1270
00:44:49,119 --> 00:44:52,319
there are some policies and rules

1271
00:44:51,200 --> 00:44:55,439
defines

1272
00:44:52,319 --> 00:44:55,920
uh should you should go or not redac is

1273
00:44:55,440 --> 00:44:58,480
going to say

1274
00:44:55,920 --> 00:44:59,359
have you been to a covered outbreak area

1275
00:44:58,480 --> 00:45:00,960
lately

1276
00:44:59,359 --> 00:45:03,119
so it's really trying to put this more

1277
00:45:00,960 --> 00:45:05,359
risk uh based weighing

1278
00:45:03,119 --> 00:45:06,480
in access control decisions and there's

1279
00:45:05,359 --> 00:45:08,640
a lot of it then

1280
00:45:06,480 --> 00:45:09,599
again in order to support any of this

1281
00:45:08,640 --> 00:45:12,240
you can remember

1282
00:45:09,599 --> 00:45:13,280
it's your toolbox it's not a throw bring

1283
00:45:12,240 --> 00:45:16,560
in and throw the rest

1284
00:45:13,280 --> 00:45:16,560
okay please don't do that

1285
00:45:16,640 --> 00:45:20,240
there's tons of details here look look

1286
00:45:18,800 --> 00:45:22,079
at this i just kept it

1287
00:45:20,240 --> 00:45:24,078
so you see the complexity of getting

1288
00:45:22,079 --> 00:45:26,240
these things to be working and producing

1289
00:45:24,079 --> 00:45:28,720
value for you

1290
00:45:26,240 --> 00:45:31,200
uh so we're gonna go now over what we

1291
00:45:28,720 --> 00:45:32,640
call attribute based access control

1292
00:45:31,200 --> 00:45:34,160
at the center of it really again the

1293
00:45:32,640 --> 00:45:35,680
subject object and there's some

1294
00:45:34,160 --> 00:45:37,598
attributes

1295
00:45:35,680 --> 00:45:40,399
and then some attributes for both and

1296
00:45:37,599 --> 00:45:43,200
there is some policies that governs

1297
00:45:40,400 --> 00:45:43,520
that relationship i want to introduce

1298
00:45:43,200 --> 00:45:46,480
you

1299
00:45:43,520 --> 00:45:47,839
be my guest to the standard uh that is

1300
00:45:46,480 --> 00:45:50,800
very widely known

1301
00:45:47,839 --> 00:45:51,440
uh for implementing a back it's called

1302
00:45:50,800 --> 00:45:53,440
zacmo

1303
00:45:51,440 --> 00:45:54,640
and the latest version is three there's

1304
00:45:53,440 --> 00:45:58,480
another one

1305
00:45:54,640 --> 00:46:00,319
that is uh less and less no like

1306
00:45:58,480 --> 00:46:01,920
at least the vendors are supporting very

1307
00:46:00,319 --> 00:46:04,400
strongly exact model but there's end

1308
00:46:01,920 --> 00:46:05,599
jack as well next generation access

1309
00:46:04,400 --> 00:46:07,280
control

1310
00:46:05,599 --> 00:46:09,440
but anyways let's stay with the zachmar

1311
00:46:07,280 --> 00:46:10,079
3. this is how the architecture looks

1312
00:46:09,440 --> 00:46:12,720
like

1313
00:46:10,079 --> 00:46:13,119
usually there is some policy enforcement

1314
00:46:12,720 --> 00:46:16,480
point

1315
00:46:13,119 --> 00:46:19,280
where the uh authorization question

1316
00:46:16,480 --> 00:46:19,920
comes from right so uh someone is asking

1317
00:46:19,280 --> 00:46:22,000
me to

1318
00:46:19,920 --> 00:46:23,599
view records one two three so the post

1319
00:46:22,000 --> 00:46:24,480
enforcement point sends to something

1320
00:46:23,599 --> 00:46:27,119
that's called

1321
00:46:24,480 --> 00:46:28,000
policy decision point this is the one

1322
00:46:27,119 --> 00:46:30,160
that really

1323
00:46:28,000 --> 00:46:31,200
gives is responsible to provide me the

1324
00:46:30,160 --> 00:46:33,598
answer should

1325
00:46:31,200 --> 00:46:35,680
the policy enforcement point say yes or

1326
00:46:33,599 --> 00:46:38,400
no and it has lots of

1327
00:46:35,680 --> 00:46:39,359
intelligence and logic there that allows

1328
00:46:38,400 --> 00:46:42,960
it to do this

1329
00:46:39,359 --> 00:46:43,839
how it accesses policies from what we

1330
00:46:42,960 --> 00:46:47,359
call policy

1331
00:46:43,839 --> 00:46:48,880
administration point where all policies

1332
00:46:47,359 --> 00:46:51,920
are managed which is written

1333
00:46:48,880 --> 00:46:53,920
in xml and there is uh what we call

1334
00:46:51,920 --> 00:46:55,599
policy information point which retrieves

1335
00:46:53,920 --> 00:46:57,520
the values of the attributes

1336
00:46:55,599 --> 00:46:59,280
lots of decisioning happens here and

1337
00:46:57,520 --> 00:47:00,480
then the condition and then things are

1338
00:46:59,280 --> 00:47:02,560
returned

1339
00:47:00,480 --> 00:47:05,359
zac mill has also features and things

1340
00:47:02,560 --> 00:47:07,119
and it continues to grow and improve

1341
00:47:05,359 --> 00:47:10,160
but most importantly here we're talking

1342
00:47:07,119 --> 00:47:12,880
also about ability to do caching stuff

1343
00:47:10,160 --> 00:47:13,839
and this is i tried here to get you also

1344
00:47:12,880 --> 00:47:16,720
this comparison

1345
00:47:13,839 --> 00:47:17,680
and i've used uh lots of things but the

1346
00:47:16,720 --> 00:47:20,160
most important

1347
00:47:17,680 --> 00:47:21,839
differences between a back and rbac is

1348
00:47:20,160 --> 00:47:24,480
that this concept of

1349
00:47:21,839 --> 00:47:25,520
fine grain access abacus can really go

1350
00:47:24,480 --> 00:47:28,800
fine grain

1351
00:47:25,520 --> 00:47:29,200
and without uh and still able to scale

1352
00:47:28,800 --> 00:47:31,200
so

1353
00:47:29,200 --> 00:47:32,319
the problem is yeah you can go find

1354
00:47:31,200 --> 00:47:34,160
green with rose

1355
00:47:32,319 --> 00:47:36,400
you're gonna have a roll explosion for

1356
00:47:34,160 --> 00:47:38,319
god's sake um

1357
00:47:36,400 --> 00:47:40,160
now i can use it's it's we call it

1358
00:47:38,319 --> 00:47:42,240
multi-factored access also not only

1359
00:47:40,160 --> 00:47:45,520
roles i can have other attributes

1360
00:47:42,240 --> 00:47:46,959
uh the cost of a back can be more higher

1361
00:47:45,520 --> 00:47:48,319
because of the management of policies

1362
00:47:46,960 --> 00:47:51,280
and things

1363
00:47:48,319 --> 00:47:53,200
uh also a back is more suitable when you

1364
00:47:51,280 --> 00:47:53,839
need in a dynamic environment where

1365
00:47:53,200 --> 00:47:56,160
things

1366
00:47:53,839 --> 00:47:57,119
it's not a static decision it is based

1367
00:47:56,160 --> 00:47:58,720
on what happens

1368
00:47:57,119 --> 00:48:00,400
i'm going to apply another rule and then

1369
00:47:58,720 --> 00:48:02,240
another rule or third rule

1370
00:48:00,400 --> 00:48:04,839
so in dynamic environments and there is

1371
00:48:02,240 --> 00:48:08,000
other stuff for your

1372
00:48:04,839 --> 00:48:11,279
um reference as well here

1373
00:48:08,000 --> 00:48:12,240
now before we wrap up uh i wanted to go

1374
00:48:11,280 --> 00:48:17,200
over

1375
00:48:12,240 --> 00:48:20,240
the road to uh self-sovereign identities

1376
00:48:17,200 --> 00:48:22,078
using blockchains so

1377
00:48:20,240 --> 00:48:23,839
the pain points have been fraught skill

1378
00:48:22,079 --> 00:48:28,319
flexibility privacy right

1379
00:48:23,839 --> 00:48:31,680
consent user is not happy and much more

1380
00:48:28,319 --> 00:48:34,160
and so users want to keep control

1381
00:48:31,680 --> 00:48:35,118
uh really they want to get out of those

1382
00:48:34,160 --> 00:48:38,160
organizations

1383
00:48:35,119 --> 00:48:40,000
out of those controlling entities and be

1384
00:48:38,160 --> 00:48:41,598
and own their identity and where their

1385
00:48:40,000 --> 00:48:43,200
information is shared and how it's

1386
00:48:41,599 --> 00:48:48,079
shared and what to share

1387
00:48:43,200 --> 00:48:50,399
and so uh comes blockchains

1388
00:48:48,079 --> 00:48:52,720
if that's legal i'm gonna give you a

1389
00:48:50,400 --> 00:48:55,200
primer on blockchains in two minutes

1390
00:48:52,720 --> 00:48:56,078
yeah seven minutes after seven minutes i

1391
00:48:55,200 --> 00:48:59,520
don't know

1392
00:48:56,079 --> 00:49:02,160
okay so uh so here is here's blockchains

1393
00:48:59,520 --> 00:49:06,319
in a very easy way

1394
00:49:02,160 --> 00:49:08,160
assume that someone wants to have

1395
00:49:06,319 --> 00:49:09,440
to do a certain transaction okay so

1396
00:49:08,160 --> 00:49:12,000
there's some transaction

1397
00:49:09,440 --> 00:49:14,880
that needs to be done and i want to see

1398
00:49:12,000 --> 00:49:17,839
can this transaction

1399
00:49:14,880 --> 00:49:19,440
is this transaction valid uh or i want

1400
00:49:17,839 --> 00:49:21,040
this transaction to be completed

1401
00:49:19,440 --> 00:49:24,559
whatever my request is

1402
00:49:21,040 --> 00:49:27,040
but i have a team of a network

1403
00:49:24,559 --> 00:49:28,640
uh of a peer-to-peer network of what we

1404
00:49:27,040 --> 00:49:30,720
call nodes

1405
00:49:28,640 --> 00:49:31,680
these are going to be actually working

1406
00:49:30,720 --> 00:49:35,279
together

1407
00:49:31,680 --> 00:49:36,799
on my transaction and each of them are

1408
00:49:35,280 --> 00:49:38,480
going to be trying to validate the

1409
00:49:36,800 --> 00:49:40,240
transaction or work on it

1410
00:49:38,480 --> 00:49:41,920
the first one to finish is going to be

1411
00:49:40,240 --> 00:49:43,359
the winner the winner

1412
00:49:41,920 --> 00:49:45,280
is going to need to produce what's

1413
00:49:43,359 --> 00:49:47,200
called the proof of work that's going to

1414
00:49:45,280 --> 00:49:49,599
be validated by the network

1415
00:49:47,200 --> 00:49:51,439
now after consensus everyone is happy

1416
00:49:49,599 --> 00:49:52,160
and now i can trust the decision of this

1417
00:49:51,440 --> 00:49:55,920
thing

1418
00:49:52,160 --> 00:49:58,960
now what happens here is that this

1419
00:49:55,920 --> 00:50:00,319
this transaction turns into a block and

1420
00:49:58,960 --> 00:50:03,200
placed in a chain

1421
00:50:00,319 --> 00:50:05,119
and this chain now has it permanent and

1422
00:50:03,200 --> 00:50:06,720
cannot be altered and can be reviewed

1423
00:50:05,119 --> 00:50:09,520
and checked and validated

1424
00:50:06,720 --> 00:50:13,118
so now let's use this concept and see

1425
00:50:09,520 --> 00:50:16,720
how it will apply here

1426
00:50:13,119 --> 00:50:20,400
so web of trust on the internet

1427
00:50:16,720 --> 00:50:21,200
yes it is time to decentralize this

1428
00:50:20,400 --> 00:50:24,319
thing

1429
00:50:21,200 --> 00:50:26,240
so again lots of stuff that we do across

1430
00:50:24,319 --> 00:50:28,558
the internet and in our applications and

1431
00:50:26,240 --> 00:50:32,078
an end is dependent on public key

1432
00:50:28,559 --> 00:50:34,319
cryptography so imsnj

1433
00:50:32,079 --> 00:50:35,839
i will come in and say i have a private

1434
00:50:34,319 --> 00:50:37,279
key i'm not going to tell you about and

1435
00:50:35,839 --> 00:50:39,359
i have a public key

1436
00:50:37,280 --> 00:50:40,559
and and we can come together and we can

1437
00:50:39,359 --> 00:50:43,440
create a secret

1438
00:50:40,559 --> 00:50:45,040
uh and i i will create a secret with you

1439
00:50:43,440 --> 00:50:46,319
in order to do other operations but i'm

1440
00:50:45,040 --> 00:50:47,920
not going to share with you my secret

1441
00:50:46,319 --> 00:50:50,000
instead we're going to use

1442
00:50:47,920 --> 00:50:51,920
an algorithm called the helmand's

1443
00:50:50,000 --> 00:50:54,319
variants in order to be able to

1444
00:50:51,920 --> 00:50:58,160
establish this common secret together

1445
00:50:54,319 --> 00:50:59,680
and so uh but hey come on

1446
00:50:58,160 --> 00:51:01,200
there can be someone else that comes in

1447
00:50:59,680 --> 00:51:02,399
and claim that you are injury and having

1448
00:51:01,200 --> 00:51:04,160
a private and public key and give your

1449
00:51:02,400 --> 00:51:07,119
public key and say hey this is ng

1450
00:51:04,160 --> 00:51:07,598
create a secret with me but that's not

1451
00:51:07,119 --> 00:51:09,599
okay

1452
00:51:07,599 --> 00:51:10,880
it has to be that really there's a proof

1453
00:51:09,599 --> 00:51:12,480
that energy is

1454
00:51:10,880 --> 00:51:14,400
it this public key really belongs to

1455
00:51:12,480 --> 00:51:15,839
indian ng is the one associated with

1456
00:51:14,400 --> 00:51:17,599
this public key

1457
00:51:15,839 --> 00:51:19,440
this is where what we call certificate

1458
00:51:17,599 --> 00:51:22,559
authorities comes

1459
00:51:19,440 --> 00:51:23,839
and usually there is a web of trust uh

1460
00:51:22,559 --> 00:51:25,280
in which there is a certificate

1461
00:51:23,839 --> 00:51:27,200
authorities and there's a root

1462
00:51:25,280 --> 00:51:27,839
certificate authorities and multiple

1463
00:51:27,200 --> 00:51:31,598
other

1464
00:51:27,839 --> 00:51:34,160
branchings based on that and it's uh

1465
00:51:31,599 --> 00:51:35,599
there are challenges with this and again

1466
00:51:34,160 --> 00:51:37,680
everything has to be registered with

1467
00:51:35,599 --> 00:51:40,079
these certificate authorities and things

1468
00:51:37,680 --> 00:51:41,200
remember self-sovereign getting away

1469
00:51:40,079 --> 00:51:44,240
with all this

1470
00:51:41,200 --> 00:51:47,040
here comes the magic of

1471
00:51:44,240 --> 00:51:49,359
blockchains and so in blockchains really

1472
00:51:47,040 --> 00:51:52,720
the idea here would be to say

1473
00:51:49,359 --> 00:51:53,040
i'm sorry the idea here is is to say can

1474
00:51:52,720 --> 00:51:57,279
i

1475
00:51:53,040 --> 00:52:00,079
really uh do have a way instead of

1476
00:51:57,280 --> 00:52:00,559
asking the certificate authority to uh

1477
00:52:00,079 --> 00:52:04,160
check

1478
00:52:00,559 --> 00:52:06,160
my uh this to have the signed assertion

1479
00:52:04,160 --> 00:52:07,680
which is what we call the certs right

1480
00:52:06,160 --> 00:52:09,040
signed assertion that says here's the

1481
00:52:07,680 --> 00:52:10,319
public key and really belongs to this

1482
00:52:09,040 --> 00:52:12,480
person and signed

1483
00:52:10,319 --> 00:52:13,759
by the trusted certificate authority no

1484
00:52:12,480 --> 00:52:15,839
let's do something else

1485
00:52:13,760 --> 00:52:18,559
so blockchains there will be a public

1486
00:52:15,839 --> 00:52:21,279
ledger this public network and

1487
00:52:18,559 --> 00:52:22,400
uh what's going to happen here is a big

1488
00:52:21,280 --> 00:52:24,640
huge thing

1489
00:52:22,400 --> 00:52:25,520
and what's going to happen is that the

1490
00:52:24,640 --> 00:52:28,078
users have

1491
00:52:25,520 --> 00:52:30,319
need to register their uh what's a

1492
00:52:28,079 --> 00:52:32,800
unique identifier with their identity

1493
00:52:30,319 --> 00:52:35,119
and then whenever there's a transaction

1494
00:52:32,800 --> 00:52:37,760
of a new sort

1495
00:52:35,119 --> 00:52:39,119
what happens is that any user will take

1496
00:52:37,760 --> 00:52:40,960
this claimed identity

1497
00:52:39,119 --> 00:52:43,599
with the public key and provide it to

1498
00:52:40,960 --> 00:52:46,880
the public

1499
00:52:43,599 --> 00:52:49,920
blockchain for validation

1500
00:52:46,880 --> 00:52:53,040
and based on that we can get more

1501
00:52:49,920 --> 00:52:53,839
uh trust into that this is indeed the

1502
00:52:53,040 --> 00:52:57,279
claimed

1503
00:52:53,839 --> 00:52:57,279
identity related to this

1504
00:52:57,359 --> 00:53:02,160
public key and then uh the whole scheme

1505
00:53:00,079 --> 00:53:04,880
falls through

1506
00:53:02,160 --> 00:53:06,558
so yeah so that's uh that's just what

1507
00:53:04,880 --> 00:53:08,960
what i wanted really to cover

1508
00:53:06,559 --> 00:53:11,040
uh for today and i think we really went

1509
00:53:08,960 --> 00:53:12,640
through a password-based schemes and

1510
00:53:11,040 --> 00:53:14,880
password less we've been

1511
00:53:12,640 --> 00:53:16,000
we've looked at federation we've looked

1512
00:53:14,880 --> 00:53:17,839
at the new

1513
00:53:16,000 --> 00:53:20,480
concept of empowered users through open

1514
00:53:17,839 --> 00:53:22,400
id connect in sso for consumer apps

1515
00:53:20,480 --> 00:53:23,760
we looked at password loss and the

1516
00:53:22,400 --> 00:53:25,599
beauty of the user experience and

1517
00:53:23,760 --> 00:53:27,520
improved security

1518
00:53:25,599 --> 00:53:30,000
and the challenges ahead in the road

1519
00:53:27,520 --> 00:53:33,280
moving on to the more to come

1520
00:53:30,000 --> 00:53:34,319
for blockchains and identity access

1521
00:53:33,280 --> 00:53:37,520
management

1522
00:53:34,319 --> 00:53:40,480
and um thank you so much for your time

1523
00:53:37,520 --> 00:53:42,880
and i hope you the best but i would just

1524
00:53:40,480 --> 00:53:46,160
want to remind you grow it now

1525
00:53:42,880 --> 00:53:48,960
it takes time uh start planting or

1526
00:53:46,160 --> 00:53:49,759
bringing all the stools in your toolbox

1527
00:53:48,960 --> 00:53:51,760
planting those

1528
00:53:49,760 --> 00:53:53,440
roots for your digital transformation

1529
00:53:51,760 --> 00:53:56,559
your awesome devops

1530
00:53:53,440 --> 00:53:58,319
your wonderful zero trust journey and

1531
00:53:56,559 --> 00:54:05,280
definitely i want to see you up there in

1532
00:53:58,319 --> 00:54:05,279
the cloud thank you

