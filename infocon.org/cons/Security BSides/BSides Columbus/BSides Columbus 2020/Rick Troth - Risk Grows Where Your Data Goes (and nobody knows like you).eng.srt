1
00:00:03,280 --> 00:00:09,760
greetings b-siders

2
00:00:06,000 --> 00:00:11,840
my name is rick troth officially i'm a

3
00:00:09,760 --> 00:00:13,840
data protection specialist

4
00:00:11,840 --> 00:00:14,879
i'd rather think of myself as a rogue

5
00:00:13,840 --> 00:00:18,560
programmer

6
00:00:14,880 --> 00:00:20,960
aka hacker but don't tell my employer

7
00:00:18,560 --> 00:00:22,240
we want to be so squeaky clean for the

8
00:00:20,960 --> 00:00:25,439
rest of the world and

9
00:00:22,240 --> 00:00:28,240
the h word has all that baggage i work

10
00:00:25,439 --> 00:00:32,000
for voltage security which is a

11
00:00:28,240 --> 00:00:34,960
division of micro focus now who the heck

12
00:00:32,000 --> 00:00:37,040
is microfocus microfocus owns um a

13
00:00:34,960 --> 00:00:38,800
number of properties

14
00:00:37,040 --> 00:00:40,239
including souza we recently spun off

15
00:00:38,800 --> 00:00:41,839
souza but many of you will recognize

16
00:00:40,239 --> 00:00:44,399
souza of course in

17
00:00:41,840 --> 00:00:47,280
a big player in the linux distro space

18
00:00:44,399 --> 00:00:49,840
microfocus also owns novell

19
00:00:47,280 --> 00:00:50,960
attachmate and some other companies

20
00:00:49,840 --> 00:00:53,039
you've probably heard of

21
00:00:50,960 --> 00:00:55,920
in the 80s the hotness was the

22
00:00:53,039 --> 00:00:58,239
microfocus cobalt compiler

23
00:00:55,920 --> 00:00:59,840
that's still going strong cobalt is huge

24
00:00:58,239 --> 00:01:03,199
business

25
00:00:59,840 --> 00:01:03,760
even in 2020 and we have one of the more

26
00:01:03,199 --> 00:01:06,158
popular

27
00:01:03,760 --> 00:01:06,960
compilers out there for that language

28
00:01:06,159 --> 00:01:10,560
good stuff

29
00:01:06,960 --> 00:01:13,520
visual cobol this is not a vendor pitch

30
00:01:10,560 --> 00:01:14,560
this is about the technology

31
00:01:13,520 --> 00:01:17,119
specifically i

32
00:01:14,560 --> 00:01:19,040
work in a the the division known as

33
00:01:17,119 --> 00:01:22,240
voltage

34
00:01:19,040 --> 00:01:24,960
our main product is uh data security

35
00:01:22,240 --> 00:01:24,960
secure data

36
00:01:25,040 --> 00:01:28,479
we also have a product called secure

37
00:01:26,640 --> 00:01:30,720
mail that was our historical

38
00:01:28,479 --> 00:01:32,079
flagship product but secured data got

39
00:01:30,720 --> 00:01:34,960
really really hot

40
00:01:32,079 --> 00:01:36,479
about um five six years ago with what we

41
00:01:34,960 --> 00:01:38,158
call format preserving encryption the

42
00:01:36,479 --> 00:01:40,960
title of this talk risk

43
00:01:38,159 --> 00:01:42,479
grows where your data goes and nobody

44
00:01:40,960 --> 00:01:44,559
knows like you some of you might

45
00:01:42,479 --> 00:01:47,679
remember the 1970

46
00:01:44,560 --> 00:01:48,159
hit love grows where my rosemary goes so

47
00:01:47,680 --> 00:01:51,119
the

48
00:01:48,159 --> 00:01:54,240
title is a hat tip to that ha but i

49
00:01:51,119 --> 00:01:58,000
thought it was cute

50
00:01:54,240 --> 00:02:01,039
looking at you the audience as

51
00:01:58,000 --> 00:02:03,200
developers admins architects

52
00:02:01,040 --> 00:02:05,920
whether you are with the end consumers

53
00:02:03,200 --> 00:02:09,840
like maybe nationwide or huntington

54
00:02:05,920 --> 00:02:09,840
or if you're with a vendor like me

55
00:02:10,000 --> 00:02:16,080
my goal is that you'll understand

56
00:02:13,280 --> 00:02:16,800
data centric security data centric data

57
00:02:16,080 --> 00:02:18,879
protection

58
00:02:16,800 --> 00:02:21,120
specifically format preserving

59
00:02:18,879 --> 00:02:23,440
encryption and at the end of this you'll

60
00:02:21,120 --> 00:02:24,560
you'll come away with we just gotta have

61
00:02:23,440 --> 00:02:27,760
it

62
00:02:24,560 --> 00:02:30,720
like the big cup on at

63
00:02:27,760 --> 00:02:30,720
coldstone creamery

64
00:02:31,440 --> 00:02:37,359
a little bit about me i've been doing

65
00:02:34,800 --> 00:02:38,879
unix for so long and linux since the

66
00:02:37,360 --> 00:02:42,239
early 90s

67
00:02:38,879 --> 00:02:45,840
even before it was one dot x

68
00:02:42,239 --> 00:02:45,840
i remember using a linux

69
00:02:45,920 --> 00:02:52,079
linux on a compact laptop riding on the

70
00:02:49,360 --> 00:02:53,840
bus in houston and banging out code that

71
00:02:52,080 --> 00:02:56,080
was a lot of fun

72
00:02:53,840 --> 00:02:58,319
linux was this great wonderful unix work

73
00:02:56,080 --> 00:03:02,640
alike that was sneaking in

74
00:02:58,319 --> 00:03:04,399
the back door at the big data centers

75
00:03:02,640 --> 00:03:06,559
most of my career though has been done

76
00:03:04,400 --> 00:03:08,239
with virtualization

77
00:03:06,560 --> 00:03:11,440
uh even before vmware which has been

78
00:03:08,239 --> 00:03:14,959
around since 1998 i remember that

79
00:03:11,440 --> 00:03:16,319
vmware 1.0 beta and in those days it

80
00:03:14,959 --> 00:03:18,720
didn't run on windows

81
00:03:16,319 --> 00:03:20,079
yet and i thought this is great

82
00:03:18,720 --> 00:03:23,440
somebody's doing virtualization on

83
00:03:20,080 --> 00:03:25,519
something other than the ibm mainframe

84
00:03:23,440 --> 00:03:28,640
and then later i used zen and now i

85
00:03:25,519 --> 00:03:31,519
heavily use kvm at home

86
00:03:28,640 --> 00:03:33,200
even even on my laptop regularly but

87
00:03:31,519 --> 00:03:33,920
mainframe virtualization goes back even

88
00:03:33,200 --> 00:03:35,518
further

89
00:03:33,920 --> 00:03:36,958
personally i'm passionate about open

90
00:03:35,519 --> 00:03:38,480
source i spent some time working in

91
00:03:36,959 --> 00:03:41,760
academia

92
00:03:38,480 --> 00:03:42,720
in my most recent previous job we had an

93
00:03:41,760 --> 00:03:44,879
in-house ssl

94
00:03:42,720 --> 00:03:46,640
stack and i got to work with that that's

95
00:03:44,879 --> 00:03:49,679
where i popped the hood

96
00:03:46,640 --> 00:03:52,079
on crypto stuff got

97
00:03:49,680 --> 00:03:53,519
bitten and i'm never going back just

98
00:03:52,080 --> 00:03:56,159
absolutely loved

99
00:03:53,519 --> 00:03:57,120
working with it tying together symmetric

100
00:03:56,159 --> 00:04:00,959
and asymmetric

101
00:03:57,120 --> 00:04:03,519
and hashes and all kinds of stuff

102
00:04:00,959 --> 00:04:05,280
in the lower left is this a double r l

103
00:04:03,519 --> 00:04:07,200
logo that's amateur radio relay league i

104
00:04:05,280 --> 00:04:08,239
am a ham radio operator i'm taking call

105
00:04:07,200 --> 00:04:10,560
signs

106
00:04:08,239 --> 00:04:13,439
either by email or in the question

107
00:04:10,560 --> 00:04:15,360
answer session which follows this

108
00:04:13,439 --> 00:04:16,478
up at the top the logo there is for

109
00:04:15,360 --> 00:04:18,320
texas a m

110
00:04:16,478 --> 00:04:19,839
two things about texas a m other than

111
00:04:18,320 --> 00:04:22,719
the fact that i went there

112
00:04:19,839 --> 00:04:24,479
tux was created there the logo for the

113
00:04:22,720 --> 00:04:27,199
linux mascot was done at a

114
00:04:24,479 --> 00:04:28,719
m and a m is one of less than two dozen

115
00:04:27,199 --> 00:04:30,960
universities in the us with a

116
00:04:28,720 --> 00:04:32,320
nsa sponsored center of academic

117
00:04:30,960 --> 00:04:35,280
excellence

118
00:04:32,320 --> 00:04:35,840
for cyber security another one being

119
00:04:35,280 --> 00:04:39,119
cedarville

120
00:04:35,840 --> 00:04:40,239
down outside of dayton and i'm hoping to

121
00:04:39,120 --> 00:04:42,960
work with them

122
00:04:40,240 --> 00:04:44,639
later this year if things all work out

123
00:04:42,960 --> 00:04:47,359
and present this technology to those

124
00:04:44,639 --> 00:04:50,400
students as well

125
00:04:47,360 --> 00:04:52,000
data centric data protection the goal is

126
00:04:50,400 --> 00:04:53,758
ease of use of the data

127
00:04:52,000 --> 00:04:55,120
so that you'll have a reduced impact

128
00:04:53,759 --> 00:04:57,120
when you're integrating

129
00:04:55,120 --> 00:04:58,560
your protection solution with your

130
00:04:57,120 --> 00:05:01,840
applications and

131
00:04:58,560 --> 00:05:02,400
existing systems and databases compare

132
00:05:01,840 --> 00:05:03,919
this to

133
00:05:02,400 --> 00:05:05,599
the traditional methods which would i

134
00:05:03,919 --> 00:05:07,919
would call the easy button

135
00:05:05,600 --> 00:05:09,440
transparent encryption where the

136
00:05:07,919 --> 00:05:12,639
encryption is

137
00:05:09,440 --> 00:05:14,560
transparent to the applications

138
00:05:12,639 --> 00:05:17,440
format preserving encryption is also

139
00:05:14,560 --> 00:05:20,479
transparent to the applications

140
00:05:17,440 --> 00:05:24,639
but provides a different mode

141
00:05:20,479 --> 00:05:25,919
of encryption of the data it allows that

142
00:05:24,639 --> 00:05:29,919
the data is

143
00:05:25,919 --> 00:05:31,840
processable in the protected state

144
00:05:29,919 --> 00:05:33,120
and this is this is some really slick

145
00:05:31,840 --> 00:05:35,758
stuff i get really geeked about the

146
00:05:33,120 --> 00:05:37,680
technology

147
00:05:35,759 --> 00:05:40,400
a big performance benefit would be that

148
00:05:37,680 --> 00:05:43,280
you don't have to decrypt it to use it

149
00:05:40,400 --> 00:05:45,520
for some of the point solutions the

150
00:05:43,280 --> 00:05:47,198
transparent solutions

151
00:05:45,520 --> 00:05:49,198
there's overhead that you just don't

152
00:05:47,199 --> 00:05:50,720
realize is there

153
00:05:49,199 --> 00:05:52,160
it winds up making things more secure

154
00:05:50,720 --> 00:05:54,320
because you don't have to cross gaps

155
00:05:52,160 --> 00:05:56,000
when you jump from one

156
00:05:54,320 --> 00:05:57,919
uh transparent solution to another

157
00:05:56,000 --> 00:05:59,840
transparent solution and

158
00:05:57,919 --> 00:06:01,520
we're talking about an industry standard

159
00:05:59,840 --> 00:06:04,799
nist has blessed

160
00:06:01,520 --> 00:06:07,440
this as the aes ff1 algorithm

161
00:06:04,800 --> 00:06:08,479
anybody can use it not just us so again

162
00:06:07,440 --> 00:06:12,319
not a vendor

163
00:06:08,479 --> 00:06:12,318
pitch this is just about the technology

164
00:06:14,479 --> 00:06:17,520
this is what it looks like

165
00:06:17,680 --> 00:06:21,360
i'm going to get into more detail later

166
00:06:19,680 --> 00:06:23,039
but i wanted to show you as early as

167
00:06:21,360 --> 00:06:26,639
possible

168
00:06:23,039 --> 00:06:30,000
how this fpe concept works

169
00:06:26,639 --> 00:06:32,560
the ciphertext

170
00:06:30,000 --> 00:06:34,080
the encrypted version has the same

171
00:06:32,560 --> 00:06:37,039
character set

172
00:06:34,080 --> 00:06:38,159
and length as the original clear text so

173
00:06:37,039 --> 00:06:39,520
if i've got a

174
00:06:38,160 --> 00:06:41,600
social security number one two three

175
00:06:39,520 --> 00:06:42,560
four five six seven eight nine it comes

176
00:06:41,600 --> 00:06:45,520
out as

177
00:06:42,560 --> 00:06:46,560
still digits so rather than bits in and

178
00:06:45,520 --> 00:06:48,479
bits out which you would get with

179
00:06:46,560 --> 00:06:50,479
straight aes

180
00:06:48,479 --> 00:06:51,840
we have digits in and digits out or

181
00:06:50,479 --> 00:06:54,560
letters in and letters out or any

182
00:06:51,840 --> 00:06:56,159
combination of that

183
00:06:54,560 --> 00:06:57,919
you could encrypt my name and it comes

184
00:06:56,160 --> 00:07:00,560
out it's unpronounceable but yet still

185
00:06:57,919 --> 00:07:01,120
quite printable form that you see here

186
00:07:00,560 --> 00:07:02,720
below

187
00:07:01,120 --> 00:07:04,880
you don't have to make any database

188
00:07:02,720 --> 00:07:07,599
schema changes you don't have to make

189
00:07:04,880 --> 00:07:08,719
application changes often only those

190
00:07:07,599 --> 00:07:09,680
applications which are actually

191
00:07:08,720 --> 00:07:11,680
ingesting

192
00:07:09,680 --> 00:07:13,840
the data would need to be modified or

193
00:07:11,680 --> 00:07:16,240
those which are handing it off

194
00:07:13,840 --> 00:07:18,638
out the back door like a credit card

195
00:07:16,240 --> 00:07:20,720
number to a bank for reconciliation

196
00:07:18,639 --> 00:07:22,000
the data can stay in this protected form

197
00:07:20,720 --> 00:07:24,000
throughout your

198
00:07:22,000 --> 00:07:25,199
operation through across all of your

199
00:07:24,000 --> 00:07:26,880
applications that need to use that

200
00:07:25,199 --> 00:07:31,840
particular data

201
00:07:26,880 --> 00:07:31,840
good stuff

202
00:07:35,840 --> 00:07:39,359
someone said that i should add this

203
00:07:38,000 --> 00:07:41,680
statement here that the data could be

204
00:07:39,360 --> 00:07:45,840
lying on the sidewalk and still be

205
00:07:41,680 --> 00:07:48,400
safe imagine that to where you you have

206
00:07:45,840 --> 00:07:50,318
a 16-digit credit card number that

207
00:07:48,400 --> 00:07:52,719
somebody left on a post-it note

208
00:07:50,319 --> 00:07:53,759
but it's not the actual credit card

209
00:07:52,720 --> 00:07:56,879
number

210
00:07:53,759 --> 00:07:58,720
that's the goal here and and it's a huge

211
00:07:56,879 --> 00:08:02,000
boon to

212
00:07:58,720 --> 00:08:03,840
you and me trying to defend the

213
00:08:02,000 --> 00:08:06,160
privacy and security of our users and

214
00:08:03,840 --> 00:08:07,198
customers because when the bad guys lift

215
00:08:06,160 --> 00:08:10,879
it what they have

216
00:08:07,199 --> 00:08:12,720
is just useless and always of course

217
00:08:10,879 --> 00:08:14,080
assume that somebody's going to get it

218
00:08:12,720 --> 00:08:18,960
so if somebody's going to get it what

219
00:08:14,080 --> 00:08:18,960
can we do to secure it try this try fpe

220
00:08:19,120 --> 00:08:22,800
obligatory headline thrown in this is

221
00:08:21,280 --> 00:08:24,479
from earlier this year there's so many

222
00:08:22,800 --> 00:08:26,560
headlines i could have stolen and

223
00:08:24,479 --> 00:08:27,840
you know and in other presentations i've

224
00:08:26,560 --> 00:08:30,560
i've used different ones you've heard

225
00:08:27,840 --> 00:08:31,840
this this is not anything new to you

226
00:08:30,560 --> 00:08:33,360
these are the headlines that you want to

227
00:08:31,840 --> 00:08:41,838
avoid and i want to avoid and we want

228
00:08:33,360 --> 00:08:41,839
our customers to avoid

229
00:08:42,320 --> 00:08:45,519
data protection and privacy is an

230
00:08:44,800 --> 00:08:48,479
increased

231
00:08:45,519 --> 00:08:51,519
problem because of the increased demand

232
00:08:48,480 --> 00:08:54,880
for more and faster development

233
00:08:51,519 --> 00:08:57,920
of applications

234
00:08:54,880 --> 00:09:00,240
especially with the cloud

235
00:08:57,920 --> 00:09:01,360
more and more stuff is getting automated

236
00:09:00,240 --> 00:09:03,760
and

237
00:09:01,360 --> 00:09:04,800
it's just natural that there will be

238
00:09:03,760 --> 00:09:08,399
risks

239
00:09:04,800 --> 00:09:11,519
uh applications with

240
00:09:08,399 --> 00:09:12,480
gaps and and uh vulnerabilities it's

241
00:09:11,519 --> 00:09:14,640
going to happen

242
00:09:12,480 --> 00:09:15,519
so the more we can do to protect things

243
00:09:14,640 --> 00:09:18,880
the better so

244
00:09:15,519 --> 00:09:20,640
in a context of definitely still trying

245
00:09:18,880 --> 00:09:23,360
to keep your applications hardened

246
00:09:20,640 --> 00:09:24,560
in fact my my employer sells a terrific

247
00:09:23,360 --> 00:09:25,760
product for that

248
00:09:24,560 --> 00:09:27,920
you might have heard of the fortify

249
00:09:25,760 --> 00:09:31,040
product that's a great way

250
00:09:27,920 --> 00:09:33,439
to have your source code scanned

251
00:09:31,040 --> 00:09:35,040
and and then you'll just see a lot of

252
00:09:33,440 --> 00:09:37,200
vulnerabilities that you can quash right

253
00:09:35,040 --> 00:09:39,360
away

254
00:09:37,200 --> 00:09:40,320
but again not just trying to pitch our

255
00:09:39,360 --> 00:09:42,800
products

256
00:09:40,320 --> 00:09:43,760
you do want to continue hardening your

257
00:09:42,800 --> 00:09:47,120
uh your apps

258
00:09:43,760 --> 00:09:50,399
but also harden the data itself

259
00:09:47,120 --> 00:09:53,680
look at it this way we're dealing with

260
00:09:50,399 --> 00:09:55,680
securing identities access controls

261
00:09:53,680 --> 00:09:56,719
we're also hardening the applications

262
00:09:55,680 --> 00:09:59,519
themselves

263
00:09:56,720 --> 00:10:00,480
here we want to harden the data itself

264
00:09:59,519 --> 00:10:03,200
in a way

265
00:10:00,480 --> 00:10:04,320
that it's still hardened even when it

266
00:10:03,200 --> 00:10:07,040
pops out

267
00:10:04,320 --> 00:10:08,640
of a traditional transparent type of

268
00:10:07,040 --> 00:10:11,519
solution

269
00:10:08,640 --> 00:10:13,519
look at it in the development life cycle

270
00:10:11,519 --> 00:10:15,200
that's fine too

271
00:10:13,519 --> 00:10:18,240
either way that's what we're trying to

272
00:10:15,200 --> 00:10:20,399
do just shore up the whole

273
00:10:18,240 --> 00:10:22,000
process where we're already hardening

274
00:10:20,399 --> 00:10:22,560
identities in applications let's also

275
00:10:22,000 --> 00:10:26,480
harden

276
00:10:22,560 --> 00:10:28,640
the data itself i mentioned gdpr

277
00:10:26,480 --> 00:10:30,959
as the first of several it's been active

278
00:10:28,640 --> 00:10:32,720
for a couple of years now

279
00:10:30,959 --> 00:10:34,160
i should say in force for a couple of

280
00:10:32,720 --> 00:10:36,800
years now we've had some companies

281
00:10:34,160 --> 00:10:39,920
already pinched by gdpr

282
00:10:36,800 --> 00:10:42,560
for not being compliant or for not

283
00:10:39,920 --> 00:10:44,160
shoring up their customers data as much

284
00:10:42,560 --> 00:10:47,439
as they should

285
00:10:44,160 --> 00:10:49,519
and there are countless others

286
00:10:47,440 --> 00:10:51,519
ccpa is a big one in the us because so

287
00:10:49,519 --> 00:10:54,000
many companies deal with

288
00:10:51,519 --> 00:10:55,200
businesses in state of california we've

289
00:10:54,000 --> 00:10:58,000
got other states

290
00:10:55,200 --> 00:10:59,040
presenting their regulations and every

291
00:10:58,000 --> 00:11:02,800
continent has

292
00:10:59,040 --> 00:11:05,920
something unless you want to go to um

293
00:11:02,800 --> 00:11:07,920
antarctica and

294
00:11:05,920 --> 00:11:09,760
the point of this of course is uh the

295
00:11:07,920 --> 00:11:14,079
the phrase the new oil

296
00:11:09,760 --> 00:11:17,439
data is we just we keep it we use it we

297
00:11:14,079 --> 00:11:19,359
grow it we expand and we collect it

298
00:11:17,440 --> 00:11:20,480
and especially when you think about big

299
00:11:19,360 --> 00:11:23,839
data

300
00:11:20,480 --> 00:11:25,680
what is that other than just a perpetual

301
00:11:23,839 --> 00:11:29,760
collection of

302
00:11:25,680 --> 00:11:31,519
in useful information for your business

303
00:11:29,760 --> 00:11:34,079
and you need to make sure that the data

304
00:11:31,519 --> 00:11:37,279
itself is safe so that it doesn't get

305
00:11:34,079 --> 00:11:39,040
so it doesn't walk off uh

306
00:11:37,279 --> 00:11:41,279
we want to we want to be able to support

307
00:11:39,040 --> 00:11:43,599
full scalability and still have

308
00:11:41,279 --> 00:11:44,560
mitigation and defense against breaches

309
00:11:43,600 --> 00:11:48,640
and

310
00:11:44,560 --> 00:11:52,079
and all of that the bigger it gets

311
00:11:48,640 --> 00:11:52,079
the more the risk grows

312
00:11:53,279 --> 00:12:00,160
threats are all over the place not just

313
00:11:57,519 --> 00:12:01,760
online shopping but it it's bizarre to

314
00:12:00,160 --> 00:12:03,680
me to realize that many of us are doing

315
00:12:01,760 --> 00:12:06,880
banking from our smartphones

316
00:12:03,680 --> 00:12:09,680
i'm not i do plenty of other things from

317
00:12:06,880 --> 00:12:12,480
my smartphone that make me nervous

318
00:12:09,680 --> 00:12:13,839
even more nervous is for me i get even

319
00:12:12,480 --> 00:12:14,880
more nervous when things go into the

320
00:12:13,839 --> 00:12:16,399
cloud

321
00:12:14,880 --> 00:12:18,240
with format preserving encryption you

322
00:12:16,399 --> 00:12:19,279
could have the data protected push it to

323
00:12:18,240 --> 00:12:21,760
the cloud ah

324
00:12:19,279 --> 00:12:23,600
no problem i just wish more people knew

325
00:12:21,760 --> 00:12:25,519
about it

326
00:12:23,600 --> 00:12:27,200
of course social media that's a whole

327
00:12:25,519 --> 00:12:28,880
nother thing

328
00:12:27,200 --> 00:12:30,639
because you wind up having the

329
00:12:28,880 --> 00:12:32,639
relationships themselves

330
00:12:30,639 --> 00:12:34,000
facebook is constantly trying to time

331
00:12:32,639 --> 00:12:36,000
you together with people it's it's a

332
00:12:34,000 --> 00:12:38,800
little scary

333
00:12:36,000 --> 00:12:41,760
so that database is something i'd really

334
00:12:38,800 --> 00:12:41,760
love to see secured

335
00:12:45,040 --> 00:12:50,719
the regular transparent methods

336
00:12:48,480 --> 00:12:52,160
they're sort of siloed they're not

337
00:12:50,720 --> 00:12:54,240
really well connected with each other

338
00:12:52,160 --> 00:12:56,000
and that leads to

339
00:12:54,240 --> 00:12:57,760
scalability problems but also more

340
00:12:56,000 --> 00:12:59,600
significantly there's so much manual

341
00:12:57,760 --> 00:13:01,839
work that would need to be done

342
00:12:59,600 --> 00:13:05,040
to eliminate any gaps and sometimes you

343
00:13:01,839 --> 00:13:05,040
just kind of live with the gaps

344
00:13:05,279 --> 00:13:09,120
what i mean is this this is a good

345
00:13:06,800 --> 00:13:12,719
picture of

346
00:13:09,120 --> 00:13:16,560
a half dozen environments or sample

347
00:13:12,720 --> 00:13:16,560
systems within your enterprise

348
00:13:16,959 --> 00:13:20,880
where you you've got something securing

349
00:13:19,440 --> 00:13:23,200
the data

350
00:13:20,880 --> 00:13:23,920
but the data then has to be decrypted to

351
00:13:23,200 --> 00:13:25,680
be usable

352
00:13:23,920 --> 00:13:27,599
has to be decrypted when you hand it off

353
00:13:25,680 --> 00:13:28,000
to the next phase particularly think

354
00:13:27,600 --> 00:13:30,959
about

355
00:13:28,000 --> 00:13:31,440
database encryption transparent database

356
00:13:30,959 --> 00:13:34,160
encrypt

357
00:13:31,440 --> 00:13:35,839
encryption the underlying storage is

358
00:13:34,160 --> 00:13:39,519
encrypted and it's really solid

359
00:13:35,839 --> 00:13:39,519
i mean it's really good stuff

360
00:13:39,760 --> 00:13:45,680
and it it's it it can't walk off and be

361
00:13:42,959 --> 00:13:47,040
of use to anybody but for it to be used

362
00:13:45,680 --> 00:13:49,519
by the applications it has to be

363
00:13:47,040 --> 00:13:52,319
decrypted and at that point it's exposed

364
00:13:49,519 --> 00:13:53,920
when you need to hand it off from a

365
00:13:52,320 --> 00:13:55,360
record into a file

366
00:13:53,920 --> 00:13:57,040
then you're crossing from the database

367
00:13:55,360 --> 00:13:58,240
itself down into the file system file

368
00:13:57,040 --> 00:14:01,839
system might be encrypted

369
00:13:58,240 --> 00:14:02,480
great but at the handoff the date is in

370
00:14:01,839 --> 00:14:04,000
the clear

371
00:14:02,480 --> 00:14:06,240
at the hand off that's where the

372
00:14:04,000 --> 00:14:08,079
attackers are going to hit you

373
00:14:06,240 --> 00:14:10,560
so at the handoff if it's format

374
00:14:08,079 --> 00:14:13,760
preserved and encrypted

375
00:14:10,560 --> 00:14:16,959
then it's still usable but also

376
00:14:13,760 --> 00:14:20,079
still secured that's what we want to do

377
00:14:16,959 --> 00:14:21,839
then your your uh

378
00:14:20,079 --> 00:14:23,359
flow your your process flow looks

379
00:14:21,839 --> 00:14:25,680
something like this where

380
00:14:23,360 --> 00:14:27,120
you still have all those subsystems and

381
00:14:25,680 --> 00:14:29,760
you may still be using

382
00:14:27,120 --> 00:14:31,040
all of the transparent solutions you

383
00:14:29,760 --> 00:14:31,760
could maybe turn off your database

384
00:14:31,040 --> 00:14:33,519
encryption

385
00:14:31,760 --> 00:14:35,760
i wouldn't recommend that but some of

386
00:14:33,519 --> 00:14:38,320
our customers have because they don't

387
00:14:35,760 --> 00:14:39,920
feel the need they have other tools in

388
00:14:38,320 --> 00:14:41,120
place as far as access

389
00:14:39,920 --> 00:14:44,000
and they have format preserving

390
00:14:41,120 --> 00:14:46,000
encryption to keep the data

391
00:14:44,000 --> 00:14:49,279
safe when it's you know when it's at

392
00:14:46,000 --> 00:14:49,279
rest and when it's in use

393
00:14:52,240 --> 00:14:56,079
breaches continue to grow we hear about

394
00:14:54,800 --> 00:14:58,399
them

395
00:14:56,079 --> 00:14:59,680
but the goal of data centric protection

396
00:14:58,399 --> 00:15:03,440
is that when the data

397
00:14:59,680 --> 00:15:05,519
leaks when not if um

398
00:15:03,440 --> 00:15:08,000
it's it's of no value to the attacker it

399
00:15:05,519 --> 00:15:10,160
has zero street value

400
00:15:08,000 --> 00:15:11,199
then the headline would be kind of funny

401
00:15:10,160 --> 00:15:13,199
you know

402
00:15:11,199 --> 00:15:15,040
so and so just lost you know had had

403
00:15:13,199 --> 00:15:16,800
five million credit card numbers stolen

404
00:15:15,040 --> 00:15:18,399
but the joke's on the bad guys because

405
00:15:16,800 --> 00:15:21,519
those credit cards were

406
00:15:18,399 --> 00:15:22,079
were protected with uh with some sort of

407
00:15:21,519 --> 00:15:23,440
um

408
00:15:22,079 --> 00:15:27,839
a surrogate scheme like format

409
00:15:23,440 --> 00:15:27,839
preserving encryption

410
00:15:30,720 --> 00:15:34,160
the promise is that the protection

411
00:15:33,440 --> 00:15:36,720
follows

412
00:15:34,160 --> 00:15:36,719
the data

413
00:15:37,360 --> 00:15:41,839
the data itself since it's encrypted

414
00:15:42,560 --> 00:15:45,920
everywhere it goes everywhere it needs

415
00:15:44,480 --> 00:15:47,759
to be used then

416
00:15:45,920 --> 00:15:48,959
then it's just the protections in the

417
00:15:47,759 --> 00:15:51,199
same place

418
00:15:48,959 --> 00:15:52,479
the data being usable in that protected

419
00:15:51,199 --> 00:15:55,519
form is what lets

420
00:15:52,480 --> 00:15:57,040
this happen that's obviously safer but

421
00:15:55,519 --> 00:15:58,560
it's also faster because you're not

422
00:15:57,040 --> 00:16:00,800
having to decrypt the data

423
00:15:58,560 --> 00:16:02,638
to use it and compare that to the

424
00:16:00,800 --> 00:16:04,000
transparent solutions ibm by the way is

425
00:16:02,639 --> 00:16:06,399
doing

426
00:16:04,000 --> 00:16:07,839
very much the same thing they are now

427
00:16:06,399 --> 00:16:10,959
have a solution uh

428
00:16:07,839 --> 00:16:14,639
data protection passport neat

429
00:16:10,959 --> 00:16:19,040
idea where for a given field they can

430
00:16:14,639 --> 00:16:20,480
represent that field by uh um

431
00:16:19,040 --> 00:16:22,079
i'm not sure what to really call the

432
00:16:20,480 --> 00:16:23,920
object call it an object

433
00:16:22,079 --> 00:16:25,519
but that object can be carried from one

434
00:16:23,920 --> 00:16:27,279
system to another the

435
00:16:25,519 --> 00:16:29,279
problem in their case is the object

436
00:16:27,279 --> 00:16:30,959
itself is not just

437
00:16:29,279 --> 00:16:33,120
uh something simple like format

438
00:16:30,959 --> 00:16:34,800
preserving encryption it is

439
00:16:33,120 --> 00:16:36,880
kind of more of a blob that has to be

440
00:16:34,800 --> 00:16:38,719
processed by compliant

441
00:16:36,880 --> 00:16:40,560
applications and databases and

442
00:16:38,720 --> 00:16:44,000
subsystems

443
00:16:40,560 --> 00:16:44,319
it does allow that object to walk around

444
00:16:44,000 --> 00:16:46,000
from

445
00:16:44,320 --> 00:16:47,759
one thing to another but they've all got

446
00:16:46,000 --> 00:16:49,120
to be part of that ecosystem but with

447
00:16:47,759 --> 00:16:50,399
format preserving encryption you don't

448
00:16:49,120 --> 00:16:50,959
have to do that you can just use the

449
00:16:50,399 --> 00:16:55,279
data

450
00:16:50,959 --> 00:16:56,959
you wind up with a lot of existing

451
00:16:55,279 --> 00:16:58,480
applications that might not need to

452
00:16:56,959 --> 00:17:00,719
change and

453
00:16:58,480 --> 00:17:02,560
not having to rewrite code is is a huge

454
00:17:00,720 --> 00:17:05,039
boost

455
00:17:02,560 --> 00:17:06,240
this is of course most effective for

456
00:17:05,039 --> 00:17:10,319
structured data

457
00:17:06,240 --> 00:17:12,319
start there we can do unstructured data

458
00:17:10,319 --> 00:17:14,319
that gets a little bit more typical with

459
00:17:12,319 --> 00:17:16,559
with like whole file encryption

460
00:17:14,319 --> 00:17:19,520
um but start with the structured data

461
00:17:16,559 --> 00:17:22,879
and then let it flow from there

462
00:17:19,520 --> 00:17:26,559
and you'll get a lot of

463
00:17:22,880 --> 00:17:28,079
a lot of benefit this is a

464
00:17:26,559 --> 00:17:30,000
couple of slides here on before and

465
00:17:28,079 --> 00:17:31,520
after and again you've already seen this

466
00:17:30,000 --> 00:17:33,039
but this is the stuff i wanted to show

467
00:17:31,520 --> 00:17:34,240
you where i get into some more detail

468
00:17:33,039 --> 00:17:37,039
let's just look at the credit card

469
00:17:34,240 --> 00:17:37,039
number here in the middle

470
00:17:37,840 --> 00:17:41,520
it's obviously clear text here and so

471
00:17:40,160 --> 00:17:42,960
everybody's using it everybody's just

472
00:17:41,520 --> 00:17:44,960
doing fine except you might have this

473
00:17:42,960 --> 00:17:47,440
malware sneak in

474
00:17:44,960 --> 00:17:48,960
and pill for some data or a rogue user

475
00:17:47,440 --> 00:17:51,919
or rogue employee

476
00:17:48,960 --> 00:17:53,760
heaven forbid who gets access to that

477
00:17:51,919 --> 00:17:55,840
and sneaks off with it

478
00:17:53,760 --> 00:17:58,559
but if the stuff is format preserving

479
00:17:55,840 --> 00:17:58,559
encrypted

480
00:17:59,280 --> 00:18:02,399
then um that you can see this here this

481
00:18:01,840 --> 00:18:05,280
example

482
00:18:02,400 --> 00:18:05,840
on the credit card is uh leaving the

483
00:18:05,280 --> 00:18:08,080
leading

484
00:18:05,840 --> 00:18:09,360
six in the clear or actually leading

485
00:18:08,080 --> 00:18:11,039
yeah leading six in the clear and last

486
00:18:09,360 --> 00:18:14,000
four in the clear that's a common

487
00:18:11,039 --> 00:18:15,679
uh mode that our customers use it's not

488
00:18:14,000 --> 00:18:17,600
mandatory i mean this is an option that

489
00:18:15,679 --> 00:18:20,880
people take you have flexibility

490
00:18:17,600 --> 00:18:21,918
to um encrypt the whole credit card or

491
00:18:20,880 --> 00:18:24,240
parts of it

492
00:18:21,919 --> 00:18:25,280
and we find that people have to make

493
00:18:24,240 --> 00:18:26,400
adjustments and so

494
00:18:25,280 --> 00:18:27,840
one of the things you want to look for

495
00:18:26,400 --> 00:18:29,679
when you're looking for a solution like

496
00:18:27,840 --> 00:18:32,320
this is make sure that the formats are

497
00:18:29,679 --> 00:18:32,320
flexible

498
00:18:32,480 --> 00:18:36,480
so here the data is protected and the

499
00:18:35,120 --> 00:18:39,280
malware hits and the

500
00:18:36,480 --> 00:18:40,480
rogue users attack and they don't have

501
00:18:39,280 --> 00:18:41,360
anything that they can get that's

502
00:18:40,480 --> 00:18:43,440
worthwhile

503
00:18:41,360 --> 00:18:45,360
in fact simplifying the picture a little

504
00:18:43,440 --> 00:18:47,840
bit malware and

505
00:18:45,360 --> 00:18:50,479
and bad guys obviously we want to

506
00:18:47,840 --> 00:18:51,840
protect against but also the dbas dbas

507
00:18:50,480 --> 00:18:54,160
aren't bad guys

508
00:18:51,840 --> 00:18:54,959
but in their day-to-day work they have

509
00:18:54,160 --> 00:18:57,600
to

510
00:18:54,960 --> 00:18:58,400
touch the data with format preserving

511
00:18:57,600 --> 00:19:01,360
encryption

512
00:18:58,400 --> 00:19:03,840
and similar methods they can do their

513
00:19:01,360 --> 00:19:05,280
job without having to look away

514
00:19:03,840 --> 00:19:06,720
and they don't have to worry that they

515
00:19:05,280 --> 00:19:11,840
might have seen something when they go

516
00:19:06,720 --> 00:19:11,840
home at night they can sleep

517
00:19:13,200 --> 00:19:18,160
format preserving encryption or

518
00:19:15,360 --> 00:19:20,159
tokenization or surrogate

519
00:19:18,160 --> 00:19:22,799
solutions that's not the only thing you

520
00:19:20,160 --> 00:19:26,080
want look also for

521
00:19:22,799 --> 00:19:29,360
stateless key management where

522
00:19:26,080 --> 00:19:32,480
keys can be pulled in on demand from a c

523
00:19:29,360 --> 00:19:35,360
a key server also look for keys that are

524
00:19:32,480 --> 00:19:35,679
derived rather than pre-generated if you

525
00:19:35,360 --> 00:19:38,479
have

526
00:19:35,679 --> 00:19:39,280
pre-generated keys that amounts to a key

527
00:19:38,480 --> 00:19:40,880
vault

528
00:19:39,280 --> 00:19:42,960
which becomes yet another high value

529
00:19:40,880 --> 00:19:45,280
target that the bad guys would hit

530
00:19:42,960 --> 00:19:46,799
you don't want that similarly with

531
00:19:45,280 --> 00:19:50,000
tokenization

532
00:19:46,799 --> 00:19:52,960
if you have a large

533
00:19:50,000 --> 00:19:54,160
and tokenization's even worse because um

534
00:19:52,960 --> 00:19:57,360
token vaults get to be

535
00:19:54,160 --> 00:19:58,960
huge so they they don't uh they

536
00:19:57,360 --> 00:20:00,799
represent a big deployment problem they

537
00:19:58,960 --> 00:20:04,400
don't scale well at all

538
00:20:00,799 --> 00:20:06,799
so look for on-demand

539
00:20:04,400 --> 00:20:08,640
access and on-demand key derivation of

540
00:20:06,799 --> 00:20:11,679
course the keys can be cached

541
00:20:08,640 --> 00:20:12,400
over at the client end for reuse but you

542
00:20:11,679 --> 00:20:13,919
want your

543
00:20:12,400 --> 00:20:15,760
clients to be disciplined enough you

544
00:20:13,919 --> 00:20:18,159
want to a library

545
00:20:15,760 --> 00:20:19,679
in the data protection solution that

546
00:20:18,159 --> 00:20:21,679
will discard

547
00:20:19,679 --> 00:20:22,880
cached keys after a period of time just

548
00:20:21,679 --> 00:20:24,480
to keep things safe because they can

549
00:20:22,880 --> 00:20:27,919
always be re-fetched

550
00:20:24,480 --> 00:20:27,919
by an authorized user

551
00:20:30,640 --> 00:20:34,559
i like the term identity-based

552
00:20:32,840 --> 00:20:37,520
encryption

553
00:20:34,559 --> 00:20:38,240
we actually in in the voltage land we

554
00:20:37,520 --> 00:20:40,559
started with

555
00:20:38,240 --> 00:20:41,840
our secure mail product and that's where

556
00:20:40,559 --> 00:20:45,600
identity-based encryption

557
00:20:41,840 --> 00:20:49,760
started for us uh it was

558
00:20:45,600 --> 00:20:52,320
an attempt to address the

559
00:20:49,760 --> 00:20:54,960
lack of scalability of straight pgp uh

560
00:20:52,320 --> 00:20:57,678
pgp is wonderful i'm a huge pgp user

561
00:20:54,960 --> 00:20:59,200
but it doesn't scale so well in the

562
00:20:57,679 --> 00:20:59,919
enterprise and so we had a solution that

563
00:20:59,200 --> 00:21:01,919
came up with that

564
00:20:59,919 --> 00:21:03,120
where the the encryption was identity

565
00:21:01,919 --> 00:21:04,960
based

566
00:21:03,120 --> 00:21:06,639
i still personally i think of it as

567
00:21:04,960 --> 00:21:09,760
identity based because

568
00:21:06,640 --> 00:21:12,799
we use the term identity in my world

569
00:21:09,760 --> 00:21:14,240
to mean a key name and

570
00:21:12,799 --> 00:21:15,440
that gets a little confusing because you

571
00:21:14,240 --> 00:21:16,960
say identity and somebody might think

572
00:21:15,440 --> 00:21:20,000
you mean my username

573
00:21:16,960 --> 00:21:23,919
no but the reason i like it

574
00:21:20,000 --> 00:21:26,320
is because you can align key names

575
00:21:23,919 --> 00:21:27,679
with functions with accounts users and

576
00:21:26,320 --> 00:21:30,639
groups and things like that

577
00:21:27,679 --> 00:21:31,760
so the term identity-based encryption is

578
00:21:30,640 --> 00:21:34,320
really a

579
00:21:31,760 --> 00:21:35,360
a great thing if you use an identity to

580
00:21:34,320 --> 00:21:38,720
refer to the key

581
00:21:35,360 --> 00:21:41,039
also when you're dealing with a key name

582
00:21:38,720 --> 00:21:42,720
or a key identity and you move from one

583
00:21:41,039 --> 00:21:45,600
security district to another

584
00:21:42,720 --> 00:21:46,960
you can still use that same identity it

585
00:21:45,600 --> 00:21:49,840
won't represent the same key

586
00:21:46,960 --> 00:21:50,799
because a different key server will

587
00:21:49,840 --> 00:21:53,918
present to you a

588
00:21:50,799 --> 00:21:54,960
different bit pattern for the key

589
00:21:53,919 --> 00:21:58,080
even though you're using the same

590
00:21:54,960 --> 00:22:00,080
identity think about having a security

591
00:21:58,080 --> 00:22:01,840
district for production data

592
00:22:00,080 --> 00:22:03,360
and it's got its own key server then

593
00:22:01,840 --> 00:22:06,320
you'd have a different production

594
00:22:03,360 --> 00:22:08,399
a different security district for uh qa

595
00:22:06,320 --> 00:22:10,080
or for development

596
00:22:08,400 --> 00:22:11,440
i would recommend multiple security

597
00:22:10,080 --> 00:22:13,360
districts and then

598
00:22:11,440 --> 00:22:15,840
within any given security district the

599
00:22:13,360 --> 00:22:19,760
identity will return a different

600
00:22:15,840 --> 00:22:22,399
value for the actual key bit pattern

601
00:22:19,760 --> 00:22:22,879
this means that you can do things like

602
00:22:22,400 --> 00:22:25,760
take

603
00:22:22,880 --> 00:22:26,000
production protected data drag it over

604
00:22:25,760 --> 00:22:29,600
to

605
00:22:26,000 --> 00:22:31,679
qa so that you have a large bulk

606
00:22:29,600 --> 00:22:33,039
of test data a large quantity of test

607
00:22:31,679 --> 00:22:36,159
data

608
00:22:33,039 --> 00:22:39,440
but it's not at risk because

609
00:22:36,159 --> 00:22:40,159
the qa environment the qa security

610
00:22:39,440 --> 00:22:42,559
district

611
00:22:40,159 --> 00:22:44,320
will not have the same actual keys we

612
00:22:42,559 --> 00:22:46,720
have used the same name

613
00:22:44,320 --> 00:22:48,158
so that the code as it's flowing from

614
00:22:46,720 --> 00:22:50,240
dev to test

615
00:22:48,159 --> 00:22:51,520
and then forward into prod the code

616
00:22:50,240 --> 00:22:53,760
doesn't change and that's

617
00:22:51,520 --> 00:22:55,280
that's kind of essential you don't want

618
00:22:53,760 --> 00:22:56,080
to change the code after you've tested

619
00:22:55,280 --> 00:23:00,559
it

620
00:22:56,080 --> 00:23:03,600
so with a given identity for the key

621
00:23:00,559 --> 00:23:05,200
when you go from from qa to prod you're

622
00:23:03,600 --> 00:23:07,280
talking about a different key so

623
00:23:05,200 --> 00:23:08,559
the data with symmetric cryptography the

624
00:23:07,280 --> 00:23:10,080
data would decrypt

625
00:23:08,559 --> 00:23:14,240
but it wouldn't return the original

626
00:23:10,080 --> 00:23:14,240
clear text so that ugly looking

627
00:23:14,799 --> 00:23:19,200
mix of letters for my name would not

628
00:23:17,039 --> 00:23:23,840
return rick troth in

629
00:23:19,200 --> 00:23:23,840
in qa

630
00:23:24,320 --> 00:23:26,720
i had mentioned something about the

631
00:23:25,600 --> 00:23:28,320
formats that you want them to be

632
00:23:26,720 --> 00:23:29,120
flexible i mean i showed the example

633
00:23:28,320 --> 00:23:31,760
where we have

634
00:23:29,120 --> 00:23:32,559
leading six clear the trailing four in

635
00:23:31,760 --> 00:23:34,480
the clear

636
00:23:32,559 --> 00:23:35,678
you might want all digits encrypted

637
00:23:34,480 --> 00:23:38,720
that's that's great so

638
00:23:35,679 --> 00:23:40,320
look for flexible protection flexible

639
00:23:38,720 --> 00:23:41,760
formats

640
00:23:40,320 --> 00:23:44,320
we have identities for key names and

641
00:23:41,760 --> 00:23:47,440
then formats for the actual kind of

642
00:23:44,320 --> 00:23:47,439
processing that gets done

643
00:23:48,559 --> 00:23:52,480
in the payment card industry they also

644
00:23:50,720 --> 00:23:54,960
want things tokenized

645
00:23:52,480 --> 00:23:56,720
now at the 30 000 foot level

646
00:23:54,960 --> 00:23:57,760
tokenization and format preserving

647
00:23:56,720 --> 00:24:01,679
encryption

648
00:23:57,760 --> 00:24:03,279
are really kind of the same thing but

649
00:24:01,679 --> 00:24:05,279
there are specific rules that people

650
00:24:03,279 --> 00:24:07,360
need to adhere to so

651
00:24:05,279 --> 00:24:09,600
find ways from the people that you're

652
00:24:07,360 --> 00:24:12,000
you're getting your solutions from

653
00:24:09,600 --> 00:24:12,959
to uh to meet the definitions and yet

654
00:24:12,000 --> 00:24:14,240
still get

655
00:24:12,960 --> 00:24:17,360
get the protection that you're looking

656
00:24:14,240 --> 00:24:20,400
for so whether it's called tokenization

657
00:24:17,360 --> 00:24:21,918
or fpe uh what you're looking for is

658
00:24:20,400 --> 00:24:25,360
something where the

659
00:24:21,919 --> 00:24:26,960
the encrypted version has the same

660
00:24:25,360 --> 00:24:28,879
character set or alphabet we like to

661
00:24:26,960 --> 00:24:29,360
term alphabet the same alphabet as the

662
00:24:28,880 --> 00:24:33,760
input

663
00:24:29,360 --> 00:24:36,399
and the same length

664
00:24:33,760 --> 00:24:37,360
there is also a difference on that

665
00:24:36,400 --> 00:24:39,440
embedded

666
00:24:37,360 --> 00:24:41,039
format preserving encryption would be

667
00:24:39,440 --> 00:24:43,120
where you can

668
00:24:41,039 --> 00:24:45,200
people need to do key rotation and you

669
00:24:43,120 --> 00:24:46,479
probably have already heard about doing

670
00:24:45,200 --> 00:24:48,080
key rotation

671
00:24:46,480 --> 00:24:50,400
uh so how do you do that you know you

672
00:24:48,080 --> 00:24:52,559
wind up having to decrypt the whole

673
00:24:50,400 --> 00:24:54,240
shoot and match and then re-encrypt it

674
00:24:52,559 --> 00:24:57,279
that gets impractical

675
00:24:54,240 --> 00:24:59,360
but with if you can embed

676
00:24:57,279 --> 00:25:02,000
the index of the key that was used let's

677
00:24:59,360 --> 00:25:04,959
say you have a a group of keys in a

678
00:25:02,000 --> 00:25:06,480
in a rotation group there's an index

679
00:25:04,960 --> 00:25:07,600
that refers to which one was used and

680
00:25:06,480 --> 00:25:10,159
these rotate like on

681
00:25:07,600 --> 00:25:11,279
two year cycles or five year cycles so

682
00:25:10,159 --> 00:25:12,320
they don't rotate that often so

683
00:25:11,279 --> 00:25:14,720
typically

684
00:25:12,320 --> 00:25:15,360
the key groups are are fairly small like

685
00:25:14,720 --> 00:25:17,919
maybe

686
00:25:15,360 --> 00:25:19,360
a dozen keys or so so that's not a big

687
00:25:17,919 --> 00:25:22,000
number that you would want to

688
00:25:19,360 --> 00:25:23,520
throw in alongside the protected data

689
00:25:22,000 --> 00:25:24,640
but you can actually embed it in the

690
00:25:23,520 --> 00:25:28,240
ciphertext

691
00:25:24,640 --> 00:25:30,240
if you expand the alphabet so another

692
00:25:28,240 --> 00:25:32,480
thing to look for would be embedded

693
00:25:30,240 --> 00:25:34,000
uh format preserving encryption and then

694
00:25:32,480 --> 00:25:36,720
there's the concept of a

695
00:25:34,000 --> 00:25:38,159
format presuming hash a hash of course

696
00:25:36,720 --> 00:25:40,000
is one way

697
00:25:38,159 --> 00:25:42,880
so it can't be decrypted because

698
00:25:40,000 --> 00:25:44,320
mathematically it just doesn't reverse

699
00:25:42,880 --> 00:25:46,799
this is great for the right to be

700
00:25:44,320 --> 00:25:46,799
forgotten

701
00:25:46,880 --> 00:25:50,240
where you've got customers says i really

702
00:25:48,880 --> 00:25:52,720
really really want you to pretend like

703
00:25:50,240 --> 00:25:55,600
we never met

704
00:25:52,720 --> 00:25:56,159
but their data is in your database you

705
00:25:55,600 --> 00:25:59,279
want it

706
00:25:56,159 --> 00:26:01,840
non-reversible a format preserving hash

707
00:25:59,279 --> 00:26:03,360
would do that for you

708
00:26:01,840 --> 00:26:05,600
so lots of different things that you

709
00:26:03,360 --> 00:26:07,678
want to do here so look for solutions

710
00:26:05,600 --> 00:26:10,799
that are flexible

711
00:26:07,679 --> 00:26:11,440
if you use the algorithm that's put out

712
00:26:10,799 --> 00:26:14,559
there in

713
00:26:11,440 --> 00:26:15,760
nist for ff1 you'll get a long way down

714
00:26:14,559 --> 00:26:16,639
that road and look for these other

715
00:26:15,760 --> 00:26:18,799
features as well

716
00:26:16,640 --> 00:26:20,880
essentially fpe is radix math and just

717
00:26:18,799 --> 00:26:23,279
to explain radix math it's

718
00:26:20,880 --> 00:26:24,000
permutations it's where you have sets of

719
00:26:23,279 --> 00:26:25,840
things

720
00:26:24,000 --> 00:26:28,080
like uh the letters of the alphabet

721
00:26:25,840 --> 00:26:33,039
would be a set of 26 things

722
00:26:28,080 --> 00:26:35,279
and so the radix point would be 26.

723
00:26:33,039 --> 00:26:36,960
so with uh digits the radix point would

724
00:26:35,279 --> 00:26:38,720
be 10.

725
00:26:36,960 --> 00:26:40,799
things like that but it's just radix

726
00:26:38,720 --> 00:26:41,840
math so the output alphabet or the input

727
00:26:40,799 --> 00:26:43,360
alphabet

728
00:26:41,840 --> 00:26:46,480
uh is going to have a radix in the

729
00:26:43,360 --> 00:26:49,039
output alphabet the same thing

730
00:26:46,480 --> 00:26:52,159
another thing to look for is what i call

731
00:26:49,039 --> 00:26:54,960
page integrated encryption

732
00:26:52,159 --> 00:26:56,880
just to cover all the bases think about

733
00:26:54,960 --> 00:26:58,480
a banking customer who's at home he's

734
00:26:56,880 --> 00:26:59,360
typing in something really sensitive at

735
00:26:58,480 --> 00:27:02,480
the browser

736
00:26:59,360 --> 00:27:05,520
hey we're https everything's cool yeah

737
00:27:02,480 --> 00:27:08,240
but when that sensitive data hits

738
00:27:05,520 --> 00:27:09,760
the front end web server it's in the

739
00:27:08,240 --> 00:27:12,000
clear again

740
00:27:09,760 --> 00:27:15,360
with page integrated encryption you can

741
00:27:12,000 --> 00:27:18,960
inject some javascript into the web page

742
00:27:15,360 --> 00:27:21,840
that will encrypt the sensitive fields

743
00:27:18,960 --> 00:27:22,880
account numbers and whatever else that

744
00:27:21,840 --> 00:27:26,000
you deem sensitive

745
00:27:22,880 --> 00:27:29,039
encrypt it before he even hits

746
00:27:26,000 --> 00:27:31,760
the the go button on the web form

747
00:27:29,039 --> 00:27:33,039
and that way when the sensitive data

748
00:27:31,760 --> 00:27:35,840
hits the

749
00:27:33,039 --> 00:27:37,919
web server hits the landing zone it

750
00:27:35,840 --> 00:27:39,840
remains protected

751
00:27:37,919 --> 00:27:42,159
it remains protected after it pops out

752
00:27:39,840 --> 00:27:45,520
of the https

753
00:27:42,159 --> 00:27:47,440
tunnel i got to give

754
00:27:45,520 --> 00:27:48,720
a similar talk to this at owasp earlier

755
00:27:47,440 --> 00:27:50,880
this year oh wasp

756
00:27:48,720 --> 00:27:53,120
interestingly enough has like their top

757
00:27:50,880 --> 00:27:53,120
10

758
00:27:53,440 --> 00:27:57,200
security issues one being protecting

759
00:27:55,919 --> 00:27:59,679
sensitive data so

760
00:27:57,200 --> 00:28:02,080
this is it guys format preserving

761
00:27:59,679 --> 00:28:05,440
encryption is the way to do this

762
00:28:02,080 --> 00:28:06,320
encrypt as early as possible decrypt as

763
00:28:05,440 --> 00:28:08,480
late as possible

764
00:28:06,320 --> 00:28:10,000
leave the data protect it as long as

765
00:28:08,480 --> 00:28:12,799
possible really you want to

766
00:28:10,000 --> 00:28:14,640
encrypt the data at ingestion and

767
00:28:12,799 --> 00:28:16,320
decrypt it only when you need to hand it

768
00:28:14,640 --> 00:28:17,760
off to a third party

769
00:28:16,320 --> 00:28:19,120
leave it protected even for your big

770
00:28:17,760 --> 00:28:20,240
data stuff that just sits there for

771
00:28:19,120 --> 00:28:21,360
years and years and years where you need

772
00:28:20,240 --> 00:28:23,520
to do correlation

773
00:28:21,360 --> 00:28:25,840
again format preserving encryption uh

774
00:28:23,520 --> 00:28:28,480
retains the um

775
00:28:25,840 --> 00:28:29,039
reference referential integrity so you

776
00:28:28,480 --> 00:28:31,679
can do

777
00:28:29,039 --> 00:28:33,120
joins and and searches and lookups and

778
00:28:31,679 --> 00:28:35,760
things like that

779
00:28:33,120 --> 00:28:37,199
um i'll mention lookups again in just a

780
00:28:35,760 --> 00:28:39,039
minute

781
00:28:37,200 --> 00:28:41,360
and and look for platform agnostic

782
00:28:39,039 --> 00:28:43,279
mechanisms one thing that bugs me

783
00:28:41,360 --> 00:28:45,279
is when you have a tool or an

784
00:28:43,279 --> 00:28:48,159
application or a solution

785
00:28:45,279 --> 00:28:49,440
that runs on windows but not linux or

786
00:28:48,159 --> 00:28:51,200
maybe it runs on

787
00:28:49,440 --> 00:28:52,880
the unix systems but it doesn't run on

788
00:28:51,200 --> 00:28:54,399
the mainframe or maybe it runs on the

789
00:28:52,880 --> 00:28:56,240
mainframe and doesn't run on windows or

790
00:28:54,399 --> 00:28:57,600
something like that

791
00:28:56,240 --> 00:28:59,200
or you need to use it on the mac and

792
00:28:57,600 --> 00:29:01,360
it's just not available it's look for

793
00:28:59,200 --> 00:29:04,799
platform agnostic solutions that just

794
00:29:01,360 --> 00:29:08,559
run everywhere uh simple and

795
00:29:04,799 --> 00:29:10,960
easy to integrate and uh recompile for

796
00:29:08,559 --> 00:29:13,360
the different platforms

797
00:29:10,960 --> 00:29:14,880
um about performance coming back to this

798
00:29:13,360 --> 00:29:17,840
i've mentioned it already

799
00:29:14,880 --> 00:29:18,559
the traditional transparent solutions

800
00:29:17,840 --> 00:29:22,240
often

801
00:29:18,559 --> 00:29:25,360
do the whole file the whole database

802
00:29:22,240 --> 00:29:27,520
at least the whole record that

803
00:29:25,360 --> 00:29:29,439
means your decryption gets a lot heavier

804
00:29:27,520 --> 00:29:31,360
you have to decrypt just to access it

805
00:29:29,440 --> 00:29:34,000
and the decryption winds up covering

806
00:29:31,360 --> 00:29:37,360
more than just the individual fields

807
00:29:34,000 --> 00:29:39,520
uh the data centric solutions though 90

808
00:29:37,360 --> 00:29:41,520
of what we've encountered can work on

809
00:29:39,520 --> 00:29:44,799
format preserved data right now

810
00:29:41,520 --> 00:29:46,399
searches and in particular i talked

811
00:29:44,799 --> 00:29:47,760
about indexing and joins and things like

812
00:29:46,399 --> 00:29:50,559
that but searches

813
00:29:47,760 --> 00:29:52,399
if you need to do a search don't decrypt

814
00:29:50,559 --> 00:29:53,120
the whole database to do a search just

815
00:29:52,399 --> 00:29:56,158
encrypt

816
00:29:53,120 --> 00:29:56,879
the search term and look for that easy

817
00:29:56,159 --> 00:29:58,480
enough

818
00:29:56,880 --> 00:30:00,159
that's not i'm not trying to

819
00:29:58,480 --> 00:30:01,440
oversimplify things there are definitely

820
00:30:00,159 --> 00:30:02,559
some details you'd want to get into

821
00:30:01,440 --> 00:30:05,039
about that but

822
00:30:02,559 --> 00:30:07,520
it's really not that hard to have format

823
00:30:05,039 --> 00:30:10,799
preserving encrypted data

824
00:30:07,520 --> 00:30:10,799
and still do searches

825
00:30:11,360 --> 00:30:15,439
got to be able to do searches that's

826
00:30:12,880 --> 00:30:17,039
just obvious so

827
00:30:15,440 --> 00:30:18,720
regulatory compliance these are some top

828
00:30:17,039 --> 00:30:20,000
reasons for using regulatory compliance

829
00:30:18,720 --> 00:30:22,559
is a big reason for using it

830
00:30:20,000 --> 00:30:23,600
because you've seen just a handful of

831
00:30:22,559 --> 00:30:26,559
the

832
00:30:23,600 --> 00:30:28,158
regulations that are coming at us the

833
00:30:26,559 --> 00:30:31,440
payment card industry

834
00:30:28,159 --> 00:30:32,640
they are pretty tight and largely

835
00:30:31,440 --> 00:30:35,039
self-policing

836
00:30:32,640 --> 00:30:37,919
they run regular audits audits cost

837
00:30:35,039 --> 00:30:40,799
money any systems which have

838
00:30:37,919 --> 00:30:41,520
which don't have the clear text are can

839
00:30:40,799 --> 00:30:44,639
be uh

840
00:30:41,520 --> 00:30:47,039
deemed out of scope you can have a qsa

841
00:30:44,640 --> 00:30:48,799
confirm this and if a system is out of

842
00:30:47,039 --> 00:30:51,200
scope you don't have to audit that is

843
00:30:48,799 --> 00:30:52,399
real dollar savings right there

844
00:30:51,200 --> 00:30:55,279
obviously we're talking about breach

845
00:30:52,399 --> 00:30:55,279
protection as well

846
00:30:55,440 --> 00:31:00,240
and scalability particularly when you

847
00:30:58,399 --> 00:31:02,879
get into big data

848
00:31:00,240 --> 00:31:04,320
think about a data lake where the data

849
00:31:02,880 --> 00:31:05,200
is there and it's going to be there for

850
00:31:04,320 --> 00:31:08,639
years

851
00:31:05,200 --> 00:31:11,039
but it's protected just in in itself

852
00:31:08,640 --> 00:31:13,120
and cloud workloads pushing the data i

853
00:31:11,039 --> 00:31:16,240
mentioned how sensitive i am about the

854
00:31:13,120 --> 00:31:17,840
the cloud if you have

855
00:31:16,240 --> 00:31:19,360
the data itself being secured and you

856
00:31:17,840 --> 00:31:21,279
push it to the cloud then uh

857
00:31:19,360 --> 00:31:23,279
i know i would sleep better at night not

858
00:31:21,279 --> 00:31:25,600
worrying about um

859
00:31:23,279 --> 00:31:27,039
somebody uh sneaking in and getting some

860
00:31:25,600 --> 00:31:30,320
stuff

861
00:31:27,039 --> 00:31:31,919
so uh about the uh this standard uh we

862
00:31:30,320 --> 00:31:34,639
worked with them this is just kind of re

863
00:31:31,919 --> 00:31:36,960
reviewing some of the concept of fpe

864
00:31:34,640 --> 00:31:37,760
but um and it preserves referential

865
00:31:36,960 --> 00:31:42,159
integrity

866
00:31:37,760 --> 00:31:43,840
uh it is a mode of aes we submitted

867
00:31:42,159 --> 00:31:45,200
long before i joined the company we had

868
00:31:43,840 --> 00:31:47,840
our cryptographers

869
00:31:45,200 --> 00:31:49,919
work with nist lots of people were

870
00:31:47,840 --> 00:31:52,799
working on this at the time

871
00:31:49,919 --> 00:31:55,519
we submitted ff1 somebody else submitted

872
00:31:52,799 --> 00:31:57,279
ff2 there was also ff3 f1 and ff3 made

873
00:31:55,519 --> 00:32:00,240
the cut ff2 dropped out

874
00:31:57,279 --> 00:32:00,640
ff3 later was found to be flawed and is

875
00:32:00,240 --> 00:32:04,080
now

876
00:32:00,640 --> 00:32:05,039
uh has now been withdrawn but ff1 is

877
00:32:04,080 --> 00:32:08,240
still out there

878
00:32:05,039 --> 00:32:11,279
it's been vetted by lots and lots of

879
00:32:08,240 --> 00:32:14,240
um much smarter people than

880
00:32:11,279 --> 00:32:14,880
myself i'm not a cryptographer the math

881
00:32:14,240 --> 00:32:17,760
there is just

882
00:32:14,880 --> 00:32:19,360
a little more than i can handle but uh i

883
00:32:17,760 --> 00:32:21,600
i know cryptographers and

884
00:32:19,360 --> 00:32:23,279
i i know them well enough that i trust

885
00:32:21,600 --> 00:32:25,840
them and they uh

886
00:32:23,279 --> 00:32:27,279
they tell us this stuff really does work

887
00:32:25,840 --> 00:32:28,000
but you want to use an open standard you

888
00:32:27,279 --> 00:32:30,559
don't want to be locked

889
00:32:28,000 --> 00:32:32,080
into one particular vendor this is an

890
00:32:30,559 --> 00:32:35,440
algorithm that we put out there

891
00:32:32,080 --> 00:32:36,720
the voltage team supplied but it's

892
00:32:35,440 --> 00:32:38,559
available to anyone

893
00:32:36,720 --> 00:32:40,799
and several of our competitors are

894
00:32:38,559 --> 00:32:43,519
already using it

895
00:32:40,799 --> 00:32:44,000
so it's not just about us uh use

896
00:32:43,519 --> 00:32:45,519
standards

897
00:32:44,000 --> 00:32:47,200
some of our competitors have their own

898
00:32:45,519 --> 00:32:48,960
algorithm

899
00:32:47,200 --> 00:32:50,399
and it may be great it may even be

900
00:32:48,960 --> 00:32:54,240
better than

901
00:32:50,399 --> 00:32:57,678
aes f1 but nobody knows because it's

902
00:32:54,240 --> 00:32:59,440
it's wholly proprietary so you're better

903
00:32:57,679 --> 00:33:04,399
off using something that is a

904
00:32:59,440 --> 00:33:04,399
published standard and

905
00:33:04,880 --> 00:33:08,000
oh i should also say that what we

906
00:33:07,360 --> 00:33:11,039
originally

907
00:33:08,000 --> 00:33:12,640
submitted was slightly tweaked so

908
00:33:11,039 --> 00:33:15,039
we do have a traditional mode some of

909
00:33:12,640 --> 00:33:17,519
our older customers at my company

910
00:33:15,039 --> 00:33:18,080
use an older algorithm called ffsem not

911
00:33:17,519 --> 00:33:19,519
a re no

912
00:33:18,080 --> 00:33:21,199
no reason in the world why a given

913
00:33:19,519 --> 00:33:23,360
solution cannot handle multiple

914
00:33:21,200 --> 00:33:26,240
algorithms

915
00:33:23,360 --> 00:33:28,080
so ours our solution does and what

916
00:33:26,240 --> 00:33:31,440
whatever you employ should also

917
00:33:28,080 --> 00:33:31,840
but should include f 1 because that's

918
00:33:31,440 --> 00:33:34,399
the

919
00:33:31,840 --> 00:33:35,439
that's the really juicy standard so

920
00:33:34,399 --> 00:33:37,039
coming back around to where we

921
00:33:35,440 --> 00:33:38,320
originally started we want the data to

922
00:33:37,039 --> 00:33:41,600
be easily used

923
00:33:38,320 --> 00:33:43,760
in a protected form to minimize

924
00:33:41,600 --> 00:33:46,000
the integration in the impact of

925
00:33:43,760 --> 00:33:47,279
integrating the solution

926
00:33:46,000 --> 00:33:49,360
and you want something that's going to

927
00:33:47,279 --> 00:33:51,679
be more

928
00:33:49,360 --> 00:33:53,039
more enterprise-wide than just the

929
00:33:51,679 --> 00:33:54,559
transparent methods

930
00:33:53,039 --> 00:33:57,039
and so that's what format preserving

931
00:33:54,559 --> 00:33:59,760
encryption is all about

932
00:33:57,039 --> 00:34:01,039
again if the data can stay protected and

933
00:33:59,760 --> 00:34:02,879
not have to be decrypted

934
00:34:01,039 --> 00:34:04,320
so much the better in terms of your

935
00:34:02,880 --> 00:34:06,000
performance and so much the better in

936
00:34:04,320 --> 00:34:07,600
terms of your security

937
00:34:06,000 --> 00:34:09,440
and of course we're talking about a

938
00:34:07,600 --> 00:34:12,879
standard so the uh

939
00:34:09,440 --> 00:34:15,119
the lyrics to the song could be expanded

940
00:34:12,879 --> 00:34:16,879
and i hope that kind of rings with you

941
00:34:15,119 --> 00:34:20,240
and maybe i've put an ear worm

942
00:34:16,879 --> 00:34:31,040
in your heads thanks again for listening

943
00:34:20,239 --> 00:34:31,040
and we'll take questions

