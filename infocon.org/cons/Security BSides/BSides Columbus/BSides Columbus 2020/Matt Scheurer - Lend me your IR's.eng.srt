1
00:00:01,760 --> 00:00:05,838
hello besides columbus attendees

2
00:00:04,080 --> 00:00:08,400
thank you for attending my session today

3
00:00:05,839 --> 00:00:12,000
which is titled linear irs

4
00:00:08,400 --> 00:00:14,960
my name is matt shear people may follow

5
00:00:12,000 --> 00:00:16,800
me on twitter at c3rkah

6
00:00:14,960 --> 00:00:19,199
also i have my linkedin contact

7
00:00:16,800 --> 00:00:20,880
information on this slide

8
00:00:19,199 --> 00:00:22,560
anybody interested in obtaining a copy

9
00:00:20,880 --> 00:00:26,160
of the slide deck from my talk

10
00:00:22,560 --> 00:00:28,960
may do so at slideshare.net circa

11
00:00:26,160 --> 00:00:30,880
let's begin a couple quick things about

12
00:00:28,960 --> 00:00:32,239
me is i work for a big well-known

13
00:00:30,880 --> 00:00:35,120
organization

14
00:00:32,238 --> 00:00:36,559
as an infosec engineer performing dfir

15
00:00:35,120 --> 00:00:39,680
on a c-cert

16
00:00:36,559 --> 00:00:40,718
i also run the simpa security sig which

17
00:00:39,680 --> 00:00:42,879
is a local

18
00:00:40,719 --> 00:00:45,840
information security meetup group based

19
00:00:42,879 --> 00:00:45,839
in cincinnati ohio

20
00:00:45,920 --> 00:00:50,000
quick disclaimer is that yes i do have a

21
00:00:47,680 --> 00:00:52,000
day job however opinions expressed are

22
00:00:50,000 --> 00:00:53,360
based solely on my own independent

23
00:00:52,000 --> 00:00:55,360
security research

24
00:00:53,360 --> 00:00:59,280
and do not express or reflect the views

25
00:00:55,360 --> 00:01:01,120
or opinions of my employer

26
00:00:59,280 --> 00:01:03,359
my objectives are to show live demo

27
00:01:01,120 --> 00:01:05,438
reenactments of real attacks

28
00:01:03,359 --> 00:01:07,920
how these real world attacks worked how

29
00:01:05,438 --> 00:01:10,559
and why they defeated security solutions

30
00:01:07,920 --> 00:01:12,159
show instant response to these attacks

31
00:01:10,560 --> 00:01:13,119
and demo investigation tools and

32
00:01:12,159 --> 00:01:14,720
techniques

33
00:01:13,119 --> 00:01:17,280
along with discussing lessons learned

34
00:01:14,720 --> 00:01:19,039
and key takeaways

35
00:01:17,280 --> 00:01:20,880
some of the acronyms i might use during

36
00:01:19,040 --> 00:01:25,520
this talk are ioc

37
00:01:20,880 --> 00:01:27,439
or ioc ir for incident response

38
00:01:25,520 --> 00:01:29,200
dfir which is digital forensics and

39
00:01:27,439 --> 00:01:32,639
instant response just to make sure that

40
00:01:29,200 --> 00:01:35,119
we're all starting on the same page

41
00:01:32,640 --> 00:01:35,920
other disclaimers are that the demos i'm

42
00:01:35,119 --> 00:01:39,040
giving are

43
00:01:35,920 --> 00:01:41,119
based on 100 percent true stories these

44
00:01:39,040 --> 00:01:43,759
demos dutifully recreate

45
00:01:41,119 --> 00:01:44,960
actual attacks however some details were

46
00:01:43,759 --> 00:01:46,479
altered

47
00:01:44,960 --> 00:01:48,000
investigation demos are sped up

48
00:01:46,479 --> 00:01:51,280
considerably in the interest of

49
00:01:48,000 --> 00:01:53,040
allotted presentation time attendees

50
00:01:51,280 --> 00:01:55,040
should only perform these techniques in

51
00:01:53,040 --> 00:01:56,719
a dedicated securely isolated and

52
00:01:55,040 --> 00:01:59,280
volatile sandbox

53
00:01:56,719 --> 00:02:00,559
now something with my talk today is i'm

54
00:01:59,280 --> 00:02:04,560
doing live demos

55
00:02:00,560 --> 00:02:07,520
on a host laptop

56
00:02:04,560 --> 00:02:09,280
this is a local system when the real

57
00:02:07,520 --> 00:02:12,720
investigations happened those were

58
00:02:09,280 --> 00:02:14,959
done within a sandbox environment

59
00:02:12,720 --> 00:02:16,400
so for the purposes of this talk let's

60
00:02:14,959 --> 00:02:18,080
please just use a

61
00:02:16,400 --> 00:02:21,760
pretend sandbox when i'm doing these

62
00:02:18,080 --> 00:02:22,879
demos how it was originally done

63
00:02:21,760 --> 00:02:26,560
the first scenario i'd like to start

64
00:02:22,879 --> 00:02:28,399
with is called the mystery attachment

65
00:02:26,560 --> 00:02:30,800
do you set the preface for this there

66
00:02:28,400 --> 00:02:34,239
was a news headline from august 17th

67
00:02:30,800 --> 00:02:36,319
of 2018 mousebam campaign targets banks

68
00:02:34,239 --> 00:02:38,560
using microsoft publisher

69
00:02:36,319 --> 00:02:39,599
the reason this is a little unusual is

70
00:02:38,560 --> 00:02:42,000
not that

71
00:02:39,599 --> 00:02:43,280
malicious threat actors were sending

72
00:02:42,000 --> 00:02:45,519
email messages

73
00:02:43,280 --> 00:02:46,959
phishing email messages with malicious

74
00:02:45,519 --> 00:02:48,319
attachments

75
00:02:46,959 --> 00:02:49,920
it's just typically when you see those

76
00:02:48,319 --> 00:02:51,518
things they're very often microsoft

77
00:02:49,920 --> 00:02:54,238
office documents

78
00:02:51,519 --> 00:02:55,599
like word or excel rather than

79
00:02:54,239 --> 00:02:57,680
powerpoint or

80
00:02:55,599 --> 00:03:01,679
you know another thing that is commonly

81
00:02:57,680 --> 00:03:03,680
used is adobe pdf files

82
00:03:01,680 --> 00:03:05,519
the flawed amy rat was part of the curse

83
00:03:03,680 --> 00:03:06,319
botnet as reported by researchers at

84
00:03:05,519 --> 00:03:08,159
trustwave

85
00:03:06,319 --> 00:03:11,359
and i've got a link to that original

86
00:03:08,159 --> 00:03:12,879
article the unusualness of

87
00:03:11,360 --> 00:03:14,879
leveraging microsoft publisher and the

88
00:03:12,879 --> 00:03:17,440
fact that it was targeted against banks

89
00:03:14,879 --> 00:03:18,000
i got picked up in the news cycle by

90
00:03:17,440 --> 00:03:22,239
quite a number

91
00:03:18,000 --> 00:03:24,319
of other places one week later

92
00:03:22,239 --> 00:03:26,080
i'm sitting at my desk dutifully working

93
00:03:24,319 --> 00:03:28,560
on probably a number of

94
00:03:26,080 --> 00:03:29,840
things at the same time when somebody

95
00:03:28,560 --> 00:03:32,080
comes up to my desk

96
00:03:29,840 --> 00:03:34,319
and i can see that they're very anxious

97
00:03:32,080 --> 00:03:37,360
and a little frantic

98
00:03:34,319 --> 00:03:39,200
and telling me matt help one of our vips

99
00:03:37,360 --> 00:03:40,879
with access to lots of very sensitive

100
00:03:39,200 --> 00:03:42,480
information just got hit

101
00:03:40,879 --> 00:03:44,720
in that recent mousebam campaign

102
00:03:42,480 --> 00:03:47,440
targeting banks it matches

103
00:03:44,720 --> 00:03:49,040
the iocs from the reports of that new

104
00:03:47,440 --> 00:03:50,239
flawed amy app which is part of the

105
00:03:49,040 --> 00:03:51,679
curves botnet

106
00:03:50,239 --> 00:03:53,599
the recipient attempted to open the

107
00:03:51,680 --> 00:03:54,720
microsoft publisher attachment on their

108
00:03:53,599 --> 00:03:57,119
smartphone

109
00:03:54,720 --> 00:03:58,959
i need you to drop whatever you're doing

110
00:03:57,120 --> 00:03:59,680
and investigate this we'll get you the

111
00:03:58,959 --> 00:04:03,120
attachment

112
00:03:59,680 --> 00:04:04,959
asap and uh just sort of important to

113
00:04:03,120 --> 00:04:06,640
note here that uh when

114
00:04:04,959 --> 00:04:08,000
i was first approached i'm thinking all

115
00:04:06,640 --> 00:04:08,720
right another thing to investigate and

116
00:04:08,000 --> 00:04:11,120
look into

117
00:04:08,720 --> 00:04:12,400
but uh as the individual kind of stood

118
00:04:11,120 --> 00:04:14,080
there and kept talking and saying oh

119
00:04:12,400 --> 00:04:15,920
this matches perfectly

120
00:04:14,080 --> 00:04:18,000
uh the things that we've you know we're

121
00:04:15,920 --> 00:04:20,639
seeing in the the news about uh

122
00:04:18,000 --> 00:04:21,120
this most recent threat um you know sort

123
00:04:20,639 --> 00:04:22,800
of

124
00:04:21,120 --> 00:04:25,440
i started getting amped up listening to

125
00:04:22,800 --> 00:04:27,280
them uh tell me about this stuff

126
00:04:25,440 --> 00:04:29,120
and uh once i got the attachment i just

127
00:04:27,280 --> 00:04:32,559
really started tearing into it

128
00:04:29,120 --> 00:04:35,680
so i'd like to do today is open the file

129
00:04:32,560 --> 00:04:38,160
demo in the sandbox we're going to do

130
00:04:35,680 --> 00:04:39,759
detonation research attempts and failure

131
00:04:38,160 --> 00:04:41,040
to understand anything about this

132
00:04:39,759 --> 00:04:44,320
malicious file

133
00:04:41,040 --> 00:04:45,440
as well as i can i also want to showcase

134
00:04:44,320 --> 00:04:47,360
some other tools i use

135
00:04:45,440 --> 00:04:49,759
when i am looking at a file i don't know

136
00:04:47,360 --> 00:04:52,800
a lot about such as strings

137
00:04:49,759 --> 00:04:53,680
do some hashing and simulated online

138
00:04:52,800 --> 00:04:55,440
research

139
00:04:53,680 --> 00:04:57,120
and then we'll look at the exif data

140
00:04:55,440 --> 00:04:58,000
which was sort of this fleeting thought

141
00:04:57,120 --> 00:05:00,800
i had as i was

142
00:04:58,000 --> 00:05:02,720
pondering my my next steps so with that

143
00:05:00,800 --> 00:05:04,960
let me go ahead and open up the file

144
00:05:02,720 --> 00:05:04,960
here

145
00:05:05,680 --> 00:05:10,560
and here you see in the folder i've got

146
00:05:08,320 --> 00:05:12,080
the microsoft publisher file

147
00:05:10,560 --> 00:05:15,360
now when i open this up it's going to

148
00:05:12,080 --> 00:05:18,320
open up in libreoffice draw on my missus

149
00:05:15,360 --> 00:05:20,320
on my system in reality the sandbox i

150
00:05:18,320 --> 00:05:22,560
had access to really did have microsoft

151
00:05:20,320 --> 00:05:24,320
publisher installed on it

152
00:05:22,560 --> 00:05:26,800
so again just sort of pretend this is

153
00:05:24,320 --> 00:05:28,320
our sandbox and we're in publisher

154
00:05:26,800 --> 00:05:30,080
uh and the document really looks

155
00:05:28,320 --> 00:05:32,639
something like this uh

156
00:05:30,080 --> 00:05:33,280
you know it's pretty typical of a lot of

157
00:05:32,639 --> 00:05:35,680
malware

158
00:05:33,280 --> 00:05:38,159
i've seen and it would come up and say

159
00:05:35,680 --> 00:05:39,600
you know macros have to be enabled to

160
00:05:38,160 --> 00:05:41,280
essentially see the contents of the

161
00:05:39,600 --> 00:05:42,720
document and please click the enable

162
00:05:41,280 --> 00:05:44,400
content button

163
00:05:42,720 --> 00:05:46,080
the trick for me was i couldn't actually

164
00:05:44,400 --> 00:05:48,159
get this to pop up

165
00:05:46,080 --> 00:05:50,719
i tried a number of different things and

166
00:05:48,160 --> 00:05:53,039
i just couldn't get it to work

167
00:05:50,720 --> 00:05:54,720
and uh was sort of scratching my head

168
00:05:53,039 --> 00:05:55,840
about that and contemplating and

169
00:05:54,720 --> 00:05:57,840
wondering

170
00:05:55,840 --> 00:05:59,599
why that was i also poked around

171
00:05:57,840 --> 00:06:01,280
publisher for a little bit but i'm not

172
00:05:59,600 --> 00:06:02,639
very familiar with that at particular

173
00:06:01,280 --> 00:06:05,198
application

174
00:06:02,639 --> 00:06:07,120
so i really couldn't find uh the macros

175
00:06:05,199 --> 00:06:08,960
i was looking for

176
00:06:07,120 --> 00:06:10,960
really just sort of threw me off a

177
00:06:08,960 --> 00:06:12,638
little bit so this was the kind of thing

178
00:06:10,960 --> 00:06:16,479
that i had uploaded to our

179
00:06:12,639 --> 00:06:18,240
automated sandbox to do detonation and

180
00:06:16,479 --> 00:06:19,520
see what it would find out and hopefully

181
00:06:18,240 --> 00:06:23,039
get a disposition

182
00:06:19,520 --> 00:06:25,440
on uh whether the document was malicious

183
00:06:23,039 --> 00:06:27,840
and how it might be malicious

184
00:06:25,440 --> 00:06:30,160
so while i'm looking at that and kind of

185
00:06:27,840 --> 00:06:32,799
letting it go through i decide that

186
00:06:30,160 --> 00:06:34,319
i'm going to go ahead and run strings

187
00:06:32,800 --> 00:06:36,319
against this file

188
00:06:34,319 --> 00:06:38,479
to see what's in it so i'm going to run

189
00:06:36,319 --> 00:06:41,280
the strings command

190
00:06:38,479 --> 00:06:41,919
specify the file name what i like to do

191
00:06:41,280 --> 00:06:44,960
is

192
00:06:41,919 --> 00:06:47,120
pipe the strings command to less

193
00:06:44,960 --> 00:06:49,039
what that lets me do is that lets me

194
00:06:47,120 --> 00:06:51,280
just slowly review the file

195
00:06:49,039 --> 00:06:53,120
i can even you know look at things line

196
00:06:51,280 --> 00:06:54,559
by line if i want to

197
00:06:53,120 --> 00:06:56,000
otherwise it would just scroll through

198
00:06:54,560 --> 00:06:57,759
the screen all the way straight to the

199
00:06:56,000 --> 00:06:59,919
end and i wouldn't see

200
00:06:57,759 --> 00:07:01,120
you know the stuff you know leading up

201
00:06:59,919 --> 00:07:02,799
to that

202
00:07:01,120 --> 00:07:04,800
strings command what it does is it

203
00:07:02,800 --> 00:07:08,160
strips out human readable text from

204
00:07:04,800 --> 00:07:10,960
most any file and in this case

205
00:07:08,160 --> 00:07:11,599
it comes up and looking at some stuff

206
00:07:10,960 --> 00:07:14,159
that

207
00:07:11,599 --> 00:07:14,880
turns out to definitely indicate this is

208
00:07:14,160 --> 00:07:18,720
a legitimate

209
00:07:14,880 --> 00:07:20,800
microsoft publisher file and

210
00:07:18,720 --> 00:07:22,800
i started looking through some of the

211
00:07:20,800 --> 00:07:23,919
text that pulled out

212
00:07:22,800 --> 00:07:26,160
fortunately i didn't really find

213
00:07:23,919 --> 00:07:28,240
anything interesting just some basic

214
00:07:26,160 --> 00:07:30,960
commands like i didn't find

215
00:07:28,240 --> 00:07:32,080
comment code or other things that might

216
00:07:30,960 --> 00:07:34,560
be in human readable

217
00:07:32,080 --> 00:07:37,280
text format that would tip me off as to

218
00:07:34,560 --> 00:07:39,360
what this is or how it might work

219
00:07:37,280 --> 00:07:40,799
so unfortunately that was a dead end for

220
00:07:39,360 --> 00:07:43,440
me

221
00:07:40,800 --> 00:07:44,400
what i decided to do while i was waiting

222
00:07:43,440 --> 00:07:46,719
uh and certainly

223
00:07:44,400 --> 00:07:48,878
um you could get the hash values from

224
00:07:46,720 --> 00:07:50,080
the sandbox detonation with with most

225
00:07:48,879 --> 00:07:52,000
sandboxes

226
00:07:50,080 --> 00:07:53,440
um however what i decided to do is do

227
00:07:52,000 --> 00:07:55,360
some online research

228
00:07:53,440 --> 00:07:58,000
so i'm gonna go ahead and oops pull up

229
00:07:55,360 --> 00:08:01,280
the shaw 256 sum for this particular

230
00:07:58,000 --> 00:08:01,599
file and see what i get and so here's

231
00:08:01,280 --> 00:08:04,878
the

232
00:08:01,599 --> 00:08:06,400
the hash value of the file itself um

233
00:08:04,879 --> 00:08:07,919
one thing that's important to note is

234
00:08:06,400 --> 00:08:09,758
you sort of have to understand what

235
00:08:07,919 --> 00:08:13,039
tools you have in your environment

236
00:08:09,759 --> 00:08:14,160
and the types of tools and utilities

237
00:08:13,039 --> 00:08:15,520
that you might use

238
00:08:14,160 --> 00:08:18,639
and really know what the hashing

239
00:08:15,520 --> 00:08:21,680
algorithms the supported ones are

240
00:08:18,639 --> 00:08:25,599
in any particular given environment

241
00:08:21,680 --> 00:08:27,280
in my case at the time shaw 256 was

242
00:08:25,599 --> 00:08:28,639
universally supported across most

243
00:08:27,280 --> 00:08:31,198
everything

244
00:08:28,639 --> 00:08:31,680
there's some tools and services that

245
00:08:31,199 --> 00:08:34,640
might

246
00:08:31,680 --> 00:08:35,039
still only support something like md5 uh

247
00:08:34,640 --> 00:08:37,279
and

248
00:08:35,039 --> 00:08:38,319
reality is during the investigation i

249
00:08:37,279 --> 00:08:40,159
probably looked at some of the other

250
00:08:38,320 --> 00:08:41,680
hashing algorithms as well

251
00:08:40,159 --> 00:08:43,599
but again the interest of time we'll

252
00:08:41,679 --> 00:08:46,079
just use this for our demo

253
00:08:43,599 --> 00:08:47,680
so i had the hash value and armed with

254
00:08:46,080 --> 00:08:50,880
that i decided to

255
00:08:47,680 --> 00:08:53,199
go online and see what i could find out

256
00:08:50,880 --> 00:08:54,080
so what i did is i decided to search for

257
00:08:53,200 --> 00:08:56,959
this hash value

258
00:08:54,080 --> 00:08:58,399
in virus total of course virustotal gets

259
00:08:56,959 --> 00:09:01,599
a lot of

260
00:08:58,399 --> 00:09:04,640
submissions uh every day

261
00:09:01,600 --> 00:09:07,839
and chances are very good if there's

262
00:09:04,640 --> 00:09:08,720
some repurposed malware that it will

263
00:09:07,839 --> 00:09:10,640
find it

264
00:09:08,720 --> 00:09:12,320
because what virustotal of course does

265
00:09:10,640 --> 00:09:15,600
is they use 70

266
00:09:12,320 --> 00:09:18,640
some odd search well i'm sorry

267
00:09:15,600 --> 00:09:21,680
antivirus scan engines to analyze a file

268
00:09:18,640 --> 00:09:24,160
to see what it can detect so

269
00:09:21,680 --> 00:09:27,439
fairly unusual when you have a file and

270
00:09:24,160 --> 00:09:29,199
fire's total has never seen it before

271
00:09:27,440 --> 00:09:31,200
so while that was a dead end i decided

272
00:09:29,200 --> 00:09:32,640
to look at a similar service called jody

273
00:09:31,200 --> 00:09:33,920
malware scan

274
00:09:32,640 --> 00:09:36,480
went ahead and searched for the hash

275
00:09:33,920 --> 00:09:37,839
value there so

276
00:09:36,480 --> 00:09:40,160
it's it's one of these interesting

277
00:09:37,839 --> 00:09:42,560
things where

278
00:09:40,160 --> 00:09:44,719
javi doesn't have as many av scan

279
00:09:42,560 --> 00:09:46,560
engines as virustotal does

280
00:09:44,720 --> 00:09:49,040
but you never know from one engine to

281
00:09:46,560 --> 00:09:52,079
another which one might have

282
00:09:49,040 --> 00:09:53,680
slightly more updated virus definitions

283
00:09:52,080 --> 00:09:55,760
i'm sure there's a lot of overlap here

284
00:09:53,680 --> 00:09:59,279
but maybe there's potentially a couple

285
00:09:55,760 --> 00:10:01,839
uh new pieces of saw or you know av

286
00:09:59,279 --> 00:10:02,640
engines between the two as well

287
00:10:01,839 --> 00:10:03,839
unfortunately

288
00:10:02,640 --> 00:10:05,519
you can see i searched for the hash

289
00:10:03,839 --> 00:10:07,120
value and it just didn't return any

290
00:10:05,519 --> 00:10:08,640
results

291
00:10:07,120 --> 00:10:11,360
so i decided to run the search through

292
00:10:08,640 --> 00:10:14,160
hybrid analysis and that's another

293
00:10:11,360 --> 00:10:15,760
um sort of a third-party sandbox

294
00:10:14,160 --> 00:10:18,640
platform on the web

295
00:10:15,760 --> 00:10:21,040
and uh surprised again that didn't see

296
00:10:18,640 --> 00:10:23,360
it either

297
00:10:21,040 --> 00:10:25,360
so it was you know a little bit

298
00:10:23,360 --> 00:10:29,279
disheartening that i couldn't find this

299
00:10:25,360 --> 00:10:30,880
particular file being seen anywhere else

300
00:10:29,279 --> 00:10:33,360
so i just went for broke and searched

301
00:10:30,880 --> 00:10:35,279
for some hashing algorithms on google

302
00:10:33,360 --> 00:10:38,320
and no matter how i tried it i just

303
00:10:35,279 --> 00:10:40,640
didn't get any results back as well

304
00:10:38,320 --> 00:10:42,720
and so some of the questions i'm sort of

305
00:10:40,640 --> 00:10:44,800
pondering in my own mind at this point

306
00:10:42,720 --> 00:10:47,360
are you know could this be a zero day

307
00:10:44,800 --> 00:10:50,640
variant of that particular

308
00:10:47,360 --> 00:10:52,880
malicious file what um

309
00:10:50,640 --> 00:10:55,120
other you know things may have been done

310
00:10:52,880 --> 00:10:58,839
could have been re-encoded

311
00:10:55,120 --> 00:11:02,240
or could have even been modified

312
00:10:58,839 --> 00:11:04,640
specifically to target our organization

313
00:11:02,240 --> 00:11:06,000
so these are very concerning um ideas

314
00:11:04,640 --> 00:11:10,399
that i had

315
00:11:06,000 --> 00:11:13,040
and uh go back to the slide deck here

316
00:11:10,399 --> 00:11:14,160
so then i'm thinking okay well i also

317
00:11:13,040 --> 00:11:16,880
spent a great

318
00:11:14,160 --> 00:11:18,480
deal of time doing research on flawed

319
00:11:16,880 --> 00:11:20,240
amy on the curse

320
00:11:18,480 --> 00:11:21,680
looking at the iocs that have been

321
00:11:20,240 --> 00:11:23,360
reported

322
00:11:21,680 --> 00:11:25,199
trying to see if i can draw some

323
00:11:23,360 --> 00:11:27,279
correlations between those

324
00:11:25,200 --> 00:11:29,440
and what i'm seeing that will sort of

325
00:11:27,279 --> 00:11:33,279
help me prove out what this thing is

326
00:11:29,440 --> 00:11:35,760
and how it's working what it does

327
00:11:33,279 --> 00:11:37,680
and unfortunately i just couldn't piece

328
00:11:35,760 --> 00:11:39,279
anything together i couldn't get a match

329
00:11:37,680 --> 00:11:41,519
here

330
00:11:39,279 --> 00:11:43,120
so then my mind immediately shifts to

331
00:11:41,519 --> 00:11:46,240
all right i've looked through this thing

332
00:11:43,120 --> 00:11:49,519
as well as i could um i haven't done

333
00:11:46,240 --> 00:11:52,240
an attempted memory forensics on it

334
00:11:49,519 --> 00:11:52,880
but the tools i have are basically

335
00:11:52,240 --> 00:11:56,480
running

336
00:11:52,880 --> 00:11:58,560
for desktop os's as an example and this

337
00:11:56,480 --> 00:12:00,240
device happened to be an iphone

338
00:11:58,560 --> 00:12:01,760
so things are going to behave

339
00:12:00,240 --> 00:12:03,680
differently from

340
00:12:01,760 --> 00:12:05,040
one platform to another different

341
00:12:03,680 --> 00:12:07,920
hardware

342
00:12:05,040 --> 00:12:08,480
all these things come into play also if

343
00:12:07,920 --> 00:12:11,040
there's

344
00:12:08,480 --> 00:12:12,240
some sort of uh you know anti-forensics

345
00:12:11,040 --> 00:12:15,279
built into

346
00:12:12,240 --> 00:12:19,120
these things to make them hard to detect

347
00:12:15,279 --> 00:12:21,279
um you know i the options i'm

348
00:12:19,120 --> 00:12:23,519
thinking are well it's it's somewhat

349
00:12:21,279 --> 00:12:25,760
unlikely that

350
00:12:23,519 --> 00:12:27,360
a publisher file could execute malware

351
00:12:25,760 --> 00:12:30,079
on an iphone

352
00:12:27,360 --> 00:12:30,639
but i can't prove that it doesn't so you

353
00:12:30,079 --> 00:12:32,319
know but

354
00:12:30,639 --> 00:12:33,839
i didn't really have a risk tolerance

355
00:12:32,320 --> 00:12:35,920
for

356
00:12:33,839 --> 00:12:37,200
just kind of letting it ride assuming

357
00:12:35,920 --> 00:12:40,880
that the

358
00:12:37,200 --> 00:12:42,800
infection was likely low

359
00:12:40,880 --> 00:12:44,560
another option was to perhaps do a

360
00:12:42,800 --> 00:12:47,279
security wipe on the device

361
00:12:44,560 --> 00:12:48,638
and uh hope that's good enough to

362
00:12:47,279 --> 00:12:50,320
essentially

363
00:12:48,639 --> 00:12:52,000
remove anything that may have been

364
00:12:50,320 --> 00:12:54,399
dropped onto this

365
00:12:52,000 --> 00:12:55,040
mobile device but that didn't really

366
00:12:54,399 --> 00:12:56,800
seem like

367
00:12:55,040 --> 00:12:59,199
something i wanted to accept the risk on

368
00:12:56,800 --> 00:13:01,839
either simply because i couldn't

369
00:12:59,200 --> 00:13:03,440
prove or disprove that it was clean

370
00:13:01,839 --> 00:13:06,000
since i couldn't really understand the

371
00:13:03,440 --> 00:13:08,880
infection itself

372
00:13:06,000 --> 00:13:10,000
so really my last thought is it's time

373
00:13:08,880 --> 00:13:12,079
to probably just

374
00:13:10,000 --> 00:13:14,800
look at confiscating this device

375
00:13:12,079 --> 00:13:16,479
shutting it down

376
00:13:14,800 --> 00:13:18,240
essentially inventorying it inside of

377
00:13:16,480 --> 00:13:20,399
our digital forensics lab

378
00:13:18,240 --> 00:13:21,360
and go about getting this individual new

379
00:13:20,399 --> 00:13:23,120
device

380
00:13:21,360 --> 00:13:24,720
i looked they weren't quite due for a

381
00:13:23,120 --> 00:13:26,880
refresh yet

382
00:13:24,720 --> 00:13:28,320
uh however they were within six months

383
00:13:26,880 --> 00:13:30,639
of um

384
00:13:28,320 --> 00:13:32,079
qualifying for a refresh device so i

385
00:13:30,639 --> 00:13:34,959
started feeling comfortable with that

386
00:13:32,079 --> 00:13:36,319
as probably my best course of action but

387
00:13:34,959 --> 00:13:37,839
the interesting thing is i thought well

388
00:13:36,320 --> 00:13:39,920
this is kind of silly but i actually

389
00:13:37,839 --> 00:13:42,560
didn't take the time to

390
00:13:39,920 --> 00:13:43,599
look at the exif properties so in a

391
00:13:42,560 --> 00:13:45,279
microsoft

392
00:13:43,600 --> 00:13:46,480
windows environment to look at exit

393
00:13:45,279 --> 00:13:47,600
properties for something like a

394
00:13:46,480 --> 00:13:49,040
publisher file

395
00:13:47,600 --> 00:13:52,160
you would simply right click on that

396
00:13:49,040 --> 00:13:54,480
file go into the properties

397
00:13:52,160 --> 00:13:56,160
and then start looking at the details

398
00:13:54,480 --> 00:13:57,920
and those will show you things like

399
00:13:56,160 --> 00:13:59,920
maybe who authored it

400
00:13:57,920 --> 00:14:02,160
you get a lot of other potential

401
00:13:59,920 --> 00:14:05,199
information if there's you know

402
00:14:02,160 --> 00:14:07,439
copyrights sometimes with image files

403
00:14:05,199 --> 00:14:08,959
you can get geographic data

404
00:14:07,440 --> 00:14:10,639
just some things you can do then maybe

405
00:14:08,959 --> 00:14:12,079
get some sort of attribution

406
00:14:10,639 --> 00:14:14,399
but you always have to take that with a

407
00:14:12,079 --> 00:14:17,120
big grain of salt because

408
00:14:14,399 --> 00:14:18,480
exif data can be spoofed but it's still

409
00:14:17,120 --> 00:14:21,040
something i hadn't looked at

410
00:14:18,480 --> 00:14:22,880
and was kind of surprised that i didn't

411
00:14:21,040 --> 00:14:23,599
take time to look at that so let's go

412
00:14:22,880 --> 00:14:25,680
ahead and

413
00:14:23,600 --> 00:14:27,199
do something like that since i'm not in

414
00:14:25,680 --> 00:14:29,199
the windows environment i'm going to use

415
00:14:27,199 --> 00:14:32,959
the pearl exif tool

416
00:14:29,199 --> 00:14:32,959
to take a look at this particular file

417
00:14:34,240 --> 00:14:38,320
and so when that comes up some of the

418
00:14:36,079 --> 00:14:38,959
things you get about the exit tool

419
00:14:38,320 --> 00:14:42,480
itself

420
00:14:38,959 --> 00:14:44,479
you know the file name file size

421
00:14:42,480 --> 00:14:46,000
some really good information around the

422
00:14:44,480 --> 00:14:48,720
time stamp particularly

423
00:14:46,000 --> 00:14:50,720
with the file modification date time

424
00:14:48,720 --> 00:14:53,040
this would give me a clue when the file

425
00:14:50,720 --> 00:14:55,680
really came into being uh you see more

426
00:14:53,040 --> 00:14:57,360
current things where it's accessed and

427
00:14:55,680 --> 00:14:59,920
you know things have changed but the

428
00:14:57,360 --> 00:15:02,639
file modification date and time

429
00:14:59,920 --> 00:15:04,560
could be an important indicator some

430
00:15:02,639 --> 00:15:06,399
things that were a little bit unusual

431
00:15:04,560 --> 00:15:08,079
is since i don't spend a lot of time

432
00:15:06,399 --> 00:15:11,519
looking at publisher files where the

433
00:15:08,079 --> 00:15:13,920
file type file type extension in the

434
00:15:11,519 --> 00:15:15,839
mime type here so those definitely

435
00:15:13,920 --> 00:15:17,599
struck me as being a little unusual so i

436
00:15:15,839 --> 00:15:18,880
actually researched those online and

437
00:15:17,600 --> 00:15:20,800
found out that yes

438
00:15:18,880 --> 00:15:22,880
this is what legitimate pub microsoft

439
00:15:20,800 --> 00:15:24,639
publisher files look like

440
00:15:22,880 --> 00:15:26,000
and uh certainly it's it's telling me

441
00:15:24,639 --> 00:15:28,160
it's a publisher file

442
00:15:26,000 --> 00:15:29,040
uh i get down to the author now it

443
00:15:28,160 --> 00:15:31,279
didn't actually

444
00:15:29,040 --> 00:15:33,519
come out and say test fish uh it was

445
00:15:31,279 --> 00:15:35,680
actually similar enough to that

446
00:15:33,519 --> 00:15:37,519
what it was was this face palm moment

447
00:15:35,680 --> 00:15:38,479
where i had our test fishing vendor's

448
00:15:37,519 --> 00:15:40,720
name in it

449
00:15:38,480 --> 00:15:41,920
and uh for me sort of embarrassing when

450
00:15:40,720 --> 00:15:44,399
i realized that the

451
00:15:41,920 --> 00:15:45,439
email attachment i just spent hours

452
00:15:44,399 --> 00:15:47,279
looking at

453
00:15:45,440 --> 00:15:48,959
actually came from our test fishing

454
00:15:47,279 --> 00:15:51,439
vendor and it's okay if you want to go

455
00:15:48,959 --> 00:15:53,359
ahead and laugh at my pain here

456
00:15:51,440 --> 00:15:56,959
but i want to talk about some of the

457
00:15:53,360 --> 00:15:56,959
lessons i learned from that

458
00:15:57,040 --> 00:16:00,639
now again i talked about exit data could

459
00:15:59,120 --> 00:16:02,639
be spoofed so i didn't want to just

460
00:16:00,639 --> 00:16:04,320
trust that so what i did is i went back

461
00:16:02,639 --> 00:16:07,920
to our secure

462
00:16:04,320 --> 00:16:08,560
email gateway and looked at the message

463
00:16:07,920 --> 00:16:11,360
headers

464
00:16:08,560 --> 00:16:12,160
from this and uh you know if it was

465
00:16:11,360 --> 00:16:14,079
supposed to

466
00:16:12,160 --> 00:16:16,240
come from our test fishing vendor it

467
00:16:14,079 --> 00:16:18,239
looked like what i would expect

468
00:16:16,240 --> 00:16:19,600
of course i looked at it like yes matt

469
00:16:18,240 --> 00:16:23,199
this really is your test fishing

470
00:16:19,600 --> 00:16:25,759
vendor's ip address you don't

471
00:16:23,199 --> 00:16:27,120
so what went wrong here i got caught up

472
00:16:25,759 --> 00:16:28,880
in my

473
00:16:27,120 --> 00:16:30,399
the moment really by subconsciously

474
00:16:28,880 --> 00:16:31,759
letting somebody else influence my

475
00:16:30,399 --> 00:16:33,759
investigation

476
00:16:31,759 --> 00:16:35,440
their anxiety and bad assumptions wore

477
00:16:33,759 --> 00:16:36,800
off on me

478
00:16:35,440 --> 00:16:38,720
so i should have started with the

479
00:16:36,800 --> 00:16:40,719
message headers first which is what i

480
00:16:38,720 --> 00:16:43,680
typically do when i investigate phishing

481
00:16:40,720 --> 00:16:45,360
messages this one time i abandoned my

482
00:16:43,680 --> 00:16:48,160
own standards this one you know by

483
00:16:45,360 --> 00:16:50,399
focusing on the file attachment first

484
00:16:48,160 --> 00:16:51,920
and ironically i've given phishing

485
00:16:50,399 --> 00:16:53,360
forensics talks and that's where i

486
00:16:51,920 --> 00:16:54,959
always start with the headers

487
00:16:53,360 --> 00:16:58,000
the one time i don't sure enough it

488
00:16:54,959 --> 00:17:00,399
comes back to bite me

489
00:16:58,000 --> 00:17:01,759
so let's talk about the remediation

490
00:17:00,399 --> 00:17:03,759
really in this case it was just a road

491
00:17:01,759 --> 00:17:05,120
to redemption

492
00:17:03,759 --> 00:17:06,559
were painful lessons learned for

493
00:17:05,119 --> 00:17:10,159
reminders to stick to my standard

494
00:17:06,559 --> 00:17:12,079
investigative processes and procedures

495
00:17:10,160 --> 00:17:13,679
if i would have started with my or my

496
00:17:12,079 --> 00:17:14,639
investigation by inspecting the message

497
00:17:13,679 --> 00:17:15,760
headers first

498
00:17:14,640 --> 00:17:17,360
i could have closed out this

499
00:17:15,760 --> 00:17:18,319
investigation in minutes instead of

500
00:17:17,359 --> 00:17:19,918
hours

501
00:17:18,319 --> 00:17:23,438
and since it was testing there was no

502
00:17:19,919 --> 00:17:23,439
further actions that were required

503
00:17:23,520 --> 00:17:27,039
my next scenario is called security

504
00:17:25,119 --> 00:17:29,039
scanner evasion

505
00:17:27,039 --> 00:17:31,679
just to set the table for this identical

506
00:17:29,039 --> 00:17:33,200
phishing emails started hitting inboxes

507
00:17:31,679 --> 00:17:35,840
and we started getting wide scale

508
00:17:33,200 --> 00:17:38,000
reports of fishing coming in

509
00:17:35,840 --> 00:17:40,080
usually those reports sort of trickle in

510
00:17:38,000 --> 00:17:42,480
throughout the course of a day

511
00:17:40,080 --> 00:17:43,199
but within a relatively short period of

512
00:17:42,480 --> 00:17:46,960
time

513
00:17:43,200 --> 00:17:48,720
we had a huge influx of these pouring in

514
00:17:46,960 --> 00:17:51,039
really got my attention is something

515
00:17:48,720 --> 00:17:53,919
that we need to look at

516
00:17:51,039 --> 00:17:54,720
sooner rather than later so the phishing

517
00:17:53,919 --> 00:17:56,880
page link

518
00:17:54,720 --> 00:17:58,160
within the email once i i pulled it back

519
00:17:56,880 --> 00:17:59,600
and saw that it was it no longer

520
00:17:58,160 --> 00:18:02,400
appeared to be working

521
00:17:59,600 --> 00:18:02,959
in my security scanner so i had to ask

522
00:18:02,400 --> 00:18:04,880
you know

523
00:18:02,960 --> 00:18:06,799
was the malicious site taken offline

524
00:18:04,880 --> 00:18:07,200
already maybe if this thing's been shut

525
00:18:06,799 --> 00:18:08,799
down

526
00:18:07,200 --> 00:18:10,960
it's something we don't actually need to

527
00:18:08,799 --> 00:18:14,080
worry about

528
00:18:10,960 --> 00:18:17,120
so let's investigate and find out

529
00:18:14,080 --> 00:18:18,879
for the investigation i will look at the

530
00:18:17,120 --> 00:18:20,159
email message source code and i'm going

531
00:18:18,880 --> 00:18:23,120
to demo that

532
00:18:20,160 --> 00:18:24,400
and again this is our pretend sandbox

533
00:18:23,120 --> 00:18:26,639
environment

534
00:18:24,400 --> 00:18:28,720
and look for hyperlinks we'll check the

535
00:18:26,640 --> 00:18:29,120
landing page with a security scanner i'm

536
00:18:28,720 --> 00:18:31,679
going to

537
00:18:29,120 --> 00:18:33,600
simulate that and then we'll look at the

538
00:18:31,679 --> 00:18:35,760
landing page source code

539
00:18:33,600 --> 00:18:36,719
again in our our pretend sandbox and

540
00:18:35,760 --> 00:18:38,720
then we'll also

541
00:18:36,720 --> 00:18:40,559
open the phishing page in that just to

542
00:18:38,720 --> 00:18:41,679
see what it looks like

543
00:18:40,559 --> 00:18:44,639
so let's go ahead and take a look at

544
00:18:41,679 --> 00:18:44,640
this phishing email

545
00:18:47,679 --> 00:18:57,840
oops hold on we'll get to that one

546
00:18:50,799 --> 00:18:57,840
here in a moment

547
00:19:00,240 --> 00:19:04,240
all right here's the fish email i was

548
00:19:01,760 --> 00:19:08,160
looking for um so this comes in

549
00:19:04,240 --> 00:19:09,840
and uh it's a uh

550
00:19:08,160 --> 00:19:11,280
i know that the short headers are

551
00:19:09,840 --> 00:19:13,039
probably a little hard to read but it's

552
00:19:11,280 --> 00:19:14,480
from evil scam or promise we are

553
00:19:13,039 --> 00:19:17,600
legit.com

554
00:19:14,480 --> 00:19:20,720
the subject is this link is totally safe

555
00:19:17,600 --> 00:19:24,000
and it's targeting an unwitting victim

556
00:19:20,720 --> 00:19:25,679
and it looked something close to this

557
00:19:24,000 --> 00:19:27,440
hello fishing target we have a really

558
00:19:25,679 --> 00:19:28,480
important message for you to retrieve

559
00:19:27,440 --> 00:19:31,840
your message

560
00:19:28,480 --> 00:19:34,240
click here that's not real subtle um

561
00:19:31,840 --> 00:19:36,080
and then regards spoof sender so let's

562
00:19:34,240 --> 00:19:38,559
go ahead and look at the

563
00:19:36,080 --> 00:19:41,360
header or the message source on this and

564
00:19:38,559 --> 00:19:41,360
see what we can learn

565
00:19:44,240 --> 00:19:48,880
and i'll make this a bit bigger so it's

566
00:19:46,160 --> 00:19:52,160
easier for everybody to see

567
00:19:48,880 --> 00:19:55,360
i'm going to search for http and

568
00:19:52,160 --> 00:19:58,480
here's the text here on click here

569
00:19:55,360 --> 00:20:01,120
that we saw within the email itself but

570
00:19:58,480 --> 00:20:01,120
here's the

571
00:20:01,200 --> 00:20:07,200
address where it's actually going so

572
00:20:05,520 --> 00:20:10,158
again what i want to do is throw this

573
00:20:07,200 --> 00:20:11,679
into a security scanner tool to

574
00:20:10,159 --> 00:20:14,320
understand

575
00:20:11,679 --> 00:20:15,840
what this is and how it behaves so i

576
00:20:14,320 --> 00:20:17,439
want to see

577
00:20:15,840 --> 00:20:20,240
screenshots of what it looks like i want

578
00:20:17,440 --> 00:20:21,760
to see source code things like that so i

579
00:20:20,240 --> 00:20:25,120
put this in our security scanner

580
00:20:21,760 --> 00:20:26,158
solution and it comes back with a server

581
00:20:25,120 --> 00:20:28,158
404 error

582
00:20:26,159 --> 00:20:30,000
essentially telling me that the content

583
00:20:28,159 --> 00:20:32,240
is no longer there

584
00:20:30,000 --> 00:20:33,760
it's well it was there it's just not

585
00:20:32,240 --> 00:20:35,840
there so

586
00:20:33,760 --> 00:20:37,840
it by all appearances at this point

587
00:20:35,840 --> 00:20:39,760
looks like it's been taken offline

588
00:20:37,840 --> 00:20:42,000
if that's the case then perhaps this is

589
00:20:39,760 --> 00:20:44,320
something we don't have to worry about

590
00:20:42,000 --> 00:20:45,600
but i have a little bit of concerns and

591
00:20:44,320 --> 00:20:46,720
i wanted to take a look at this a little

592
00:20:45,600 --> 00:20:49,520
bit further

593
00:20:46,720 --> 00:20:50,480
so let's go ahead and get the source

594
00:20:49,520 --> 00:20:53,200
code from this

595
00:20:50,480 --> 00:20:55,280
and see what that looks like there's a

596
00:20:53,200 --> 00:20:57,200
couple options for this

597
00:20:55,280 --> 00:20:58,320
i'm going to show you a couple of them

598
00:20:57,200 --> 00:21:01,520
so i'm going to use

599
00:20:58,320 --> 00:21:06,240
curl with the address and

600
00:21:01,520 --> 00:21:06,240
let me stand we're going to output this

601
00:21:07,120 --> 00:21:14,799
to something we'll call unknown

602
00:21:10,720 --> 00:21:17,919
dot html and we retrieved it

603
00:21:14,799 --> 00:21:20,799
now if we don't have curl available

604
00:21:17,919 --> 00:21:22,080
on the system or you know maybe not

605
00:21:20,799 --> 00:21:24,639
comfortable with it there's always a

606
00:21:22,080 --> 00:21:28,240
tried and true utility like wget

607
00:21:24,640 --> 00:21:29,120
in this case wget put in the site

608
00:21:28,240 --> 00:21:32,400
address

609
00:21:29,120 --> 00:21:34,879
and retrieve the file that way now if i

610
00:21:32,400 --> 00:21:38,080
take a look at what we have

611
00:21:34,880 --> 00:21:39,600
for html files

612
00:21:38,080 --> 00:21:42,240
we'll see the two files that i pulled

613
00:21:39,600 --> 00:21:44,559
down unknown is what we pulled from

614
00:21:42,240 --> 00:21:46,320
curl and index is what we pulled down

615
00:21:44,559 --> 00:21:48,158
using wget

616
00:21:46,320 --> 00:21:50,720
you will notice that they are the same

617
00:21:48,159 --> 00:21:53,440
file size

618
00:21:50,720 --> 00:21:55,280
one thing to be aware of in this demo

619
00:21:53,440 --> 00:21:55,919
since i'm retrieving the file from a

620
00:21:55,280 --> 00:21:58,879
local

621
00:21:55,919 --> 00:22:00,559
server the local machine server i'm

622
00:21:58,880 --> 00:22:03,440
getting the original

623
00:22:00,559 --> 00:22:06,320
time date stamp on this as opposed to

624
00:22:03,440 --> 00:22:09,039
when i actually pulled it down

625
00:22:06,320 --> 00:22:11,200
in the real world if you're using wget

626
00:22:09,039 --> 00:22:13,840
to pull down files from a remote

627
00:22:11,200 --> 00:22:14,960
server on the internet for example

628
00:22:13,840 --> 00:22:18,320
you'll actually get a

629
00:22:14,960 --> 00:22:19,840
more recent timestamp for when you

630
00:22:18,320 --> 00:22:21,520
it should reflect when you actually made

631
00:22:19,840 --> 00:22:23,840
the request and the file was

632
00:22:21,520 --> 00:22:25,280
pulled down so it's a little bit of an

633
00:22:23,840 --> 00:22:28,720
anomaly here

634
00:22:25,280 --> 00:22:30,240
but i do want to show folks that it's

635
00:22:28,720 --> 00:22:33,039
there they really are forensically the

636
00:22:30,240 --> 00:22:36,240
same file so we'll do a shock 256

637
00:22:33,039 --> 00:22:38,000
some value of html files

638
00:22:36,240 --> 00:22:40,480
and here we can see we have an exact

639
00:22:38,000 --> 00:22:43,360
match for both files

640
00:22:40,480 --> 00:22:44,880
so we know this really is the same so

641
00:22:43,360 --> 00:22:46,959
it's one of these things where you can

642
00:22:44,880 --> 00:22:48,799
really sort of use whatever works for

643
00:22:46,960 --> 00:22:50,480
you in this instance

644
00:22:48,799 --> 00:22:52,559
you know what your your best option

645
00:22:50,480 --> 00:22:54,159
might be

646
00:22:52,559 --> 00:22:55,600
so now that we have the file let's

647
00:22:54,159 --> 00:22:56,480
actually go ahead and take a look at

648
00:22:55,600 --> 00:22:58,158
that

649
00:22:56,480 --> 00:22:59,840
i'm just going to pull one of these up

650
00:22:58,159 --> 00:23:03,840
here in a text editor

651
00:22:59,840 --> 00:23:03,840
we'll just look at the index html

652
00:23:04,640 --> 00:23:08,640
and that's going to open it up in our

653
00:23:07,520 --> 00:23:09,840
text editor

654
00:23:08,640 --> 00:23:13,039
and make this a little bit bigger so

655
00:23:09,840 --> 00:23:18,240
it's easier to see and what we have here

656
00:23:13,039 --> 00:23:20,960
is um really just a typical html file

657
00:23:18,240 --> 00:23:22,240
and then we get here to what is really

658
00:23:20,960 --> 00:23:25,200
javascript

659
00:23:22,240 --> 00:23:26,080
and so what it's doing is saying if

660
00:23:25,200 --> 00:23:28,559
navigator

661
00:23:26,080 --> 00:23:29,199
user agent index of and we start seeing

662
00:23:28,559 --> 00:23:32,158
common

663
00:23:29,200 --> 00:23:32,880
web browsers such as chrome microsoft

664
00:23:32,159 --> 00:23:36,400
edge

665
00:23:32,880 --> 00:23:38,720
firefox internet explorer opera

666
00:23:36,400 --> 00:23:40,240
and safari and what's interesting is

667
00:23:38,720 --> 00:23:41,279
notice that they're really kind of going

668
00:23:40,240 --> 00:23:43,440
to the same

669
00:23:41,279 --> 00:23:45,200
page and this replay this location

670
00:23:43,440 --> 00:23:49,039
replaces essentially doing a

671
00:23:45,200 --> 00:23:50,480
redirect what gets very interesting here

672
00:23:49,039 --> 00:23:53,760
at the bottom is we see an

673
00:23:50,480 --> 00:23:54,640
else statement so if these conditions

674
00:23:53,760 --> 00:23:57,919
aren't met

675
00:23:54,640 --> 00:24:01,520
then it's actually sending the visitor

676
00:23:57,919 --> 00:24:03,120
somewhere else and

677
00:24:01,520 --> 00:24:04,639
what i believe the threat actor actors

678
00:24:03,120 --> 00:24:05,039
doing here is they're checking to make

679
00:24:04,640 --> 00:24:07,039
sure

680
00:24:05,039 --> 00:24:09,039
that before they send somebody to a

681
00:24:07,039 --> 00:24:11,360
malicious page

682
00:24:09,039 --> 00:24:12,240
that it really is a legitimate web

683
00:24:11,360 --> 00:24:14,080
browser

684
00:24:12,240 --> 00:24:16,240
and not some security scanner because if

685
00:24:14,080 --> 00:24:17,600
it's not spoofing one of these common

686
00:24:16,240 --> 00:24:19,840
browser

687
00:24:17,600 --> 00:24:20,959
user agents it's never going to see it

688
00:24:19,840 --> 00:24:23,520
it's going to go to the

689
00:24:20,960 --> 00:24:24,880
fake for well yeah really our fake 404

690
00:24:23,520 --> 00:24:27,600
page

691
00:24:24,880 --> 00:24:30,240
but if it is one of these browsers it

692
00:24:27,600 --> 00:24:31,600
will send the traffic somewhere else

693
00:24:30,240 --> 00:24:33,679
so let's go ahead and take a look at

694
00:24:31,600 --> 00:24:36,719
this and see what that

695
00:24:33,679 --> 00:24:38,400
looks like for real and put in the

696
00:24:36,720 --> 00:24:41,520
website address here

697
00:24:38,400 --> 00:24:43,360
and here we have a microsoft office 365

698
00:24:41,520 --> 00:24:45,120
credential harvesting page it's not

699
00:24:43,360 --> 00:24:46,559
really office 365.

700
00:24:45,120 --> 00:24:48,959
it's just something threat actress has

701
00:24:46,559 --> 00:24:51,760
set up to collect people's

702
00:24:48,960 --> 00:24:52,480
usernames and passwords from there they

703
00:24:51,760 --> 00:24:56,879
can do

704
00:24:52,480 --> 00:24:56,880
obviously a lot of a lot of bad things

705
00:24:57,200 --> 00:25:01,840
so with that now understanding how this

706
00:25:00,880 --> 00:25:05,440
works a little bit

707
00:25:01,840 --> 00:25:08,240
let's go back and we've seen this

708
00:25:05,440 --> 00:25:10,240
we talked about the evasion code and how

709
00:25:08,240 --> 00:25:11,039
it works using the browser's user agent

710
00:25:10,240 --> 00:25:13,039
string

711
00:25:11,039 --> 00:25:15,039
uh in this case i got really lucky

712
00:25:13,039 --> 00:25:16,799
because the threat actors

713
00:25:15,039 --> 00:25:18,320
had used javascript which is a

714
00:25:16,799 --> 00:25:21,039
client-side language

715
00:25:18,320 --> 00:25:23,200
meaning i actually see all the code uh

716
00:25:21,039 --> 00:25:25,840
when i pull it down

717
00:25:23,200 --> 00:25:27,360
if the thread actor though had used a

718
00:25:25,840 --> 00:25:30,480
server-side language

719
00:25:27,360 --> 00:25:30,959
like you know php python or any of a

720
00:25:30,480 --> 00:25:32,960
number of

721
00:25:30,960 --> 00:25:34,640
other ones i would not be able to see

722
00:25:32,960 --> 00:25:37,760
the source code without

723
00:25:34,640 --> 00:25:40,000
some sort of special access privilege to

724
00:25:37,760 --> 00:25:42,000
the server itself

725
00:25:40,000 --> 00:25:43,760
something you're unlikely to have uh

726
00:25:42,000 --> 00:25:44,880
when it comes to third-party internet

727
00:25:43,760 --> 00:25:48,879
sites

728
00:25:44,880 --> 00:25:50,480
um so you know i was able to see it

729
00:25:48,880 --> 00:25:52,400
and understand the code if they had used

730
00:25:50,480 --> 00:25:53,760
one of these server side languages

731
00:25:52,400 --> 00:25:55,919
i sure i still would have been able to

732
00:25:53,760 --> 00:25:57,200
tell a redirect happened and ultimately

733
00:25:55,919 --> 00:25:58,159
know where it goes but i wouldn't

734
00:25:57,200 --> 00:26:00,159
necessarily

735
00:25:58,159 --> 00:26:02,159
see it underneath the hood perspective

736
00:26:00,159 --> 00:26:04,240
of how it works

737
00:26:02,159 --> 00:26:06,400
and then some other thoughts i had that

738
00:26:04,240 --> 00:26:08,000
would have made this also harder

739
00:26:06,400 --> 00:26:09,760
would be if they were targeting specific

740
00:26:08,000 --> 00:26:12,159
browsers so let's

741
00:26:09,760 --> 00:26:14,158
use a hypothetical example where maybe

742
00:26:12,159 --> 00:26:17,279
malicious threat actors have a

743
00:26:14,159 --> 00:26:20,080
mozilla firefox exploit

744
00:26:17,279 --> 00:26:21,440
and they have a page set up to

745
00:26:20,080 --> 00:26:23,360
essentially launch an exploit kit

746
00:26:21,440 --> 00:26:25,760
against site visitors if they

747
00:26:23,360 --> 00:26:26,639
are using firefox they can actually

748
00:26:25,760 --> 00:26:29,760
filter out

749
00:26:26,640 --> 00:26:30,559
everybody else and really um what they

750
00:26:29,760 --> 00:26:32,720
can do is

751
00:26:30,559 --> 00:26:34,559
send everybody else to a real page if

752
00:26:32,720 --> 00:26:37,679
it's firefox they can send them to

753
00:26:34,559 --> 00:26:40,000
a page that has the the

754
00:26:37,679 --> 00:26:40,880
xsplit kit on it execute that and then

755
00:26:40,000 --> 00:26:44,000
round robin

756
00:26:40,880 --> 00:26:46,080
redirect them to the real page

757
00:26:44,000 --> 00:26:47,840
and all that tends to happen fast enough

758
00:26:46,080 --> 00:26:49,678
that most site visitors aren't even

759
00:26:47,840 --> 00:26:52,320
going to notice that

760
00:26:49,679 --> 00:26:53,919
split second less than the split second

761
00:26:52,320 --> 00:26:55,918
probably that it takes for that to

762
00:26:53,919 --> 00:26:57,360
happen

763
00:26:55,919 --> 00:26:59,919
so definitely some things that could

764
00:26:57,360 --> 00:27:03,360
have been done that would make that

765
00:26:59,919 --> 00:27:04,000
harder and going a step further with

766
00:27:03,360 --> 00:27:06,320
that

767
00:27:04,000 --> 00:27:07,840
let's say the exploit kit for firefox

768
00:27:06,320 --> 00:27:09,840
they had only worked on

769
00:27:07,840 --> 00:27:11,039
certain versions they can actually check

770
00:27:09,840 --> 00:27:15,039
the versions

771
00:27:11,039 --> 00:27:16,960
um use essentially

772
00:27:15,039 --> 00:27:18,080
really to focus on just the vulnerable

773
00:27:16,960 --> 00:27:19,520
versions

774
00:27:18,080 --> 00:27:21,678
and that really makes it harder to

775
00:27:19,520 --> 00:27:22,960
detect and know it's something you

776
00:27:21,679 --> 00:27:24,480
should block

777
00:27:22,960 --> 00:27:26,559
because then the scope gets really

778
00:27:24,480 --> 00:27:29,120
narrow of what they're targeting

779
00:27:26,559 --> 00:27:30,399
so definitely some scary thoughts around

780
00:27:29,120 --> 00:27:32,320
that

781
00:27:30,399 --> 00:27:33,918
the remediation plan in this case where

782
00:27:32,320 --> 00:27:36,080
to determine the actual

783
00:27:33,919 --> 00:27:38,000
phishing landing page and block through

784
00:27:36,080 --> 00:27:39,600
web content filtering

785
00:27:38,000 --> 00:27:41,520
we also worked with our secure email

786
00:27:39,600 --> 00:27:42,799
gateway vendor to block the phishing

787
00:27:41,520 --> 00:27:46,320
campaign

788
00:27:42,799 --> 00:27:48,158
i believe we also made sure that the

789
00:27:46,320 --> 00:27:50,720
message was quarantined throughout the

790
00:27:48,159 --> 00:27:53,520
environment following that

791
00:27:50,720 --> 00:27:54,480
um so that's what we did to address that

792
00:27:53,520 --> 00:27:57,120
problem

793
00:27:54,480 --> 00:28:00,080
the third scenario i'd like to cover is

794
00:27:57,120 --> 00:28:02,639
something i call the rabbit hole

795
00:28:00,080 --> 00:28:04,399
and set the table for this i received a

796
00:28:02,640 --> 00:28:06,399
request from a user to investigate an

797
00:28:04,399 --> 00:28:08,080
email message they received to determine

798
00:28:06,399 --> 00:28:10,399
if it was legitimate or not

799
00:28:08,080 --> 00:28:12,000
the email appeared fishy at first glance

800
00:28:10,399 --> 00:28:14,399
but i had to ask the question

801
00:28:12,000 --> 00:28:16,720
is it just suspicious or is it malicious

802
00:28:14,399 --> 00:28:18,320
now is it just suspicious or is it

803
00:28:16,720 --> 00:28:20,159
malicious is actually a

804
00:28:18,320 --> 00:28:22,240
fishing forensics talk i've given

805
00:28:20,159 --> 00:28:22,640
several places uh if you're interested

806
00:28:22,240 --> 00:28:24,880
in

807
00:28:22,640 --> 00:28:26,799
looking at that you can search youtube

808
00:28:24,880 --> 00:28:28,799
for b-sides cleveland

809
00:28:26,799 --> 00:28:30,720
in that title uh that's probably the

810
00:28:28,799 --> 00:28:32,639
best recorded version of that that is

811
00:28:30,720 --> 00:28:35,760
out there

812
00:28:32,640 --> 00:28:37,279
the investigation um from this point was

813
00:28:35,760 --> 00:28:38,720
i could tell from the message headers

814
00:28:37,279 --> 00:28:40,159
that the source ip address was a

815
00:28:38,720 --> 00:28:44,080
mismatch for the

816
00:28:40,159 --> 00:28:45,919
sender domain the email message source

817
00:28:44,080 --> 00:28:48,000
code was particularly interesting

818
00:28:45,919 --> 00:28:49,760
uh and in particular because the link

819
00:28:48,000 --> 00:28:51,360
tax didn't match the hyperlink

820
00:28:49,760 --> 00:28:53,200
destination we're going to look at that

821
00:28:51,360 --> 00:28:55,439
here in just a moment

822
00:28:53,200 --> 00:28:58,000
the malicious threat actors objective

823
00:28:55,440 --> 00:29:00,080
appeared to be credential harvesting

824
00:28:58,000 --> 00:29:02,080
and we'll see what that look like for

825
00:29:00,080 --> 00:29:05,279
the purposes of account takeover

826
00:29:02,080 --> 00:29:07,279
so let's go ahead and pull up the right

827
00:29:05,279 --> 00:29:09,679
fishing email for this one

828
00:29:07,279 --> 00:29:11,039
and see what that looked like so here we

829
00:29:09,679 --> 00:29:14,320
have an email message

830
00:29:11,039 --> 00:29:16,480
and in our case it's supposedly coming

831
00:29:14,320 --> 00:29:19,439
from paypal support

832
00:29:16,480 --> 00:29:20,159
but what we notice the actual email

833
00:29:19,440 --> 00:29:22,679
address is

834
00:29:20,159 --> 00:29:24,640
listed as pp support at

835
00:29:22,679 --> 00:29:26,880
pwndashserver.org

836
00:29:24,640 --> 00:29:29,360
it's got a subject of paypal bank

837
00:29:26,880 --> 00:29:31,360
account change confirmation

838
00:29:29,360 --> 00:29:32,879
and it's targeting an unwitting victim

839
00:29:31,360 --> 00:29:34,879
again

840
00:29:32,880 --> 00:29:36,559
and so when we see change confirmation

841
00:29:34,880 --> 00:29:38,399
if you have a pay compile account and

842
00:29:36,559 --> 00:29:40,158
didn't make changes to it

843
00:29:38,399 --> 00:29:41,760
and you get an email notification like

844
00:29:40,159 --> 00:29:45,120
this uh you

845
00:29:41,760 --> 00:29:46,799
you know might be something that you get

846
00:29:45,120 --> 00:29:49,039
you know inquisitive about one take a

847
00:29:46,799 --> 00:29:51,440
look at so looking at this

848
00:29:49,039 --> 00:29:53,520
uh dear paypal customer we received your

849
00:29:51,440 --> 00:29:55,279
request to update your bank account on

850
00:29:53,520 --> 00:29:56,720
file this process will complete in the

851
00:29:55,279 --> 00:29:58,480
next four hours

852
00:29:56,720 --> 00:30:00,159
if you did not request these changes to

853
00:29:58,480 --> 00:30:02,080
your paypal account please log in to

854
00:30:00,159 --> 00:30:05,279
reject the pending activity

855
00:30:02,080 --> 00:30:07,678
and here we see the paypal address

856
00:30:05,279 --> 00:30:08,960
and interestingly enough if you went to

857
00:30:07,679 --> 00:30:11,520
the paypal address you see

858
00:30:08,960 --> 00:30:12,480
here it would take you to the real sign

859
00:30:11,520 --> 00:30:15,440
in page

860
00:30:12,480 --> 00:30:16,799
for paypal but all is not quite as it

861
00:30:15,440 --> 00:30:18,000
seems

862
00:30:16,799 --> 00:30:20,840
then we'll take a look at the message

863
00:30:18,000 --> 00:30:23,360
source here but i did want to highlight

864
00:30:20,840 --> 00:30:26,000
that you know this four hour window

865
00:30:23,360 --> 00:30:26,879
is designed to instill a sense of

866
00:30:26,000 --> 00:30:29,520
urgency

867
00:30:26,880 --> 00:30:30,480
if i see that bank account changes have

868
00:30:29,520 --> 00:30:32,799
supposedly been

869
00:30:30,480 --> 00:30:33,840
made to my paypal account and i know i

870
00:30:32,799 --> 00:30:37,600
didn't make them

871
00:30:33,840 --> 00:30:40,158
as an end user i might be inclined to

872
00:30:37,600 --> 00:30:42,240
want to hop on right away and block

873
00:30:40,159 --> 00:30:43,760
these changes from happening to protect

874
00:30:42,240 --> 00:30:45,440
my account

875
00:30:43,760 --> 00:30:47,760
we're going to go ahead and look at the

876
00:30:45,440 --> 00:30:51,840
message source here though

877
00:30:47,760 --> 00:30:51,840
let me pull that up

878
00:30:52,000 --> 00:30:57,520
and then we're going to take a look at

879
00:30:53,120 --> 00:30:57,520
that that link that we talked about

880
00:31:02,480 --> 00:31:06,799
so here what we see is we have the

881
00:31:04,960 --> 00:31:07,600
paypal address that we saw in the email

882
00:31:06,799 --> 00:31:10,480
and again

883
00:31:07,600 --> 00:31:13,360
that's the legitimate address that you

884
00:31:10,480 --> 00:31:16,240
would use to log into paypal

885
00:31:13,360 --> 00:31:18,158
however the hyperlink isn't going to

886
00:31:16,240 --> 00:31:21,279
what we see in the link text that's

887
00:31:18,159 --> 00:31:23,200
actually going to this other domain

888
00:31:21,279 --> 00:31:24,399
so we want to take a look at that in

889
00:31:23,200 --> 00:31:27,279
particular

890
00:31:24,399 --> 00:31:28,559
this is a be domain which means it's in

891
00:31:27,279 --> 00:31:30,559
belgium

892
00:31:28,559 --> 00:31:32,158
not something i would necessarily expect

893
00:31:30,559 --> 00:31:35,440
expect to see from a

894
00:31:32,159 --> 00:31:36,000
legitimate paypal account so let's go

895
00:31:35,440 --> 00:31:37,679
ahead and

896
00:31:36,000 --> 00:31:40,320
see what this looks like in our pretend

897
00:31:37,679 --> 00:31:40,320
sandbox

898
00:31:41,200 --> 00:31:44,240
and what we have here is you know

899
00:31:42,559 --> 00:31:46,240
something that would resemble a

900
00:31:44,240 --> 00:31:48,880
paypal login i've made it a little bit

901
00:31:46,240 --> 00:31:52,480
bigger so it's easier to see

902
00:31:48,880 --> 00:31:54,960
um but uh you know it definitely isn't

903
00:31:52,480 --> 00:31:56,799
isn't where we would expected it to so

904
00:31:54,960 --> 00:31:59,279
let's go ahead and use curl

905
00:31:56,799 --> 00:32:01,440
and we'll pull this site down and look

906
00:31:59,279 --> 00:32:04,720
at the source code here

907
00:32:01,440 --> 00:32:04,720
and i'm going to output that

908
00:32:04,880 --> 00:32:10,799
to first page dot html

909
00:32:12,080 --> 00:32:16,320
now that we have it let me clear this up

910
00:32:14,799 --> 00:32:16,720
and let's go ahead and take a look at

911
00:32:16,320 --> 00:32:19,439
this

912
00:32:16,720 --> 00:32:19,440
inside of a

913
00:32:20,960 --> 00:32:24,399
text editor and you can use the editor

914
00:32:23,120 --> 00:32:26,239
of your choice i'm just trying to make

915
00:32:24,399 --> 00:32:29,120
this easy for

916
00:32:26,240 --> 00:32:31,519
demonstration purposes here but really

917
00:32:29,120 --> 00:32:32,719
it's just a very small html file

918
00:32:31,519 --> 00:32:35,120
and certainly doesn't really have

919
00:32:32,720 --> 00:32:37,840
content like we would expect to see

920
00:32:35,120 --> 00:32:39,918
if it was a live page so what we notice

921
00:32:37,840 --> 00:32:43,519
is there's a meta tag here an http

922
00:32:39,919 --> 00:32:44,960
meta tag with refresh and content equals

923
00:32:43,519 --> 00:32:47,360
zero means it happens

924
00:32:44,960 --> 00:32:48,640
right away so there's no five second

925
00:32:47,360 --> 00:32:49,840
delay for example

926
00:32:48,640 --> 00:32:52,240
like you would see if you have number

927
00:32:49,840 --> 00:32:53,120
five in here and we've got this other

928
00:32:52,240 --> 00:32:55,519
address

929
00:32:53,120 --> 00:32:57,918
that doesn't match the first one and we

930
00:32:55,519 --> 00:33:00,799
know that because we see

931
00:32:57,919 --> 00:33:02,159
de domain would indicate that it's a

932
00:33:00,799 --> 00:33:05,440
german

933
00:33:02,159 --> 00:33:06,799
website domain so

934
00:33:05,440 --> 00:33:08,880
sort of unusual because we knew we

935
00:33:06,799 --> 00:33:10,559
started belgium but now we're going to a

936
00:33:08,880 --> 00:33:12,480
different place

937
00:33:10,559 --> 00:33:15,200
so let's go to our slide deck and catch

938
00:33:12,480 --> 00:33:15,200
back up here

939
00:33:15,679 --> 00:33:19,440
the destination uh you know it was going

940
00:33:19,039 --> 00:33:21,760
to

941
00:33:19,440 --> 00:33:23,519
it was hosted in one foreign country it

942
00:33:21,760 --> 00:33:25,519
didn't stop there though

943
00:33:23,519 --> 00:33:28,159
so we see now that we've got a second

944
00:33:25,519 --> 00:33:30,720
country and it doesn't stop there

945
00:33:28,159 --> 00:33:32,799
and so let's go ahead and get the page

946
00:33:30,720 --> 00:33:33,120
source code and find out what's going on

947
00:33:32,799 --> 00:33:34,960
there

948
00:33:33,120 --> 00:33:38,719
and we'll use the same method i'm just

949
00:33:34,960 --> 00:33:41,600
going to use curl

950
00:33:38,720 --> 00:33:41,600
the web domain

951
00:33:43,840 --> 00:33:48,000
and we're output that the second page

952
00:33:45,600 --> 00:33:50,840
dot html

953
00:33:48,000 --> 00:33:53,840
and we'll take a look at that in our

954
00:33:50,840 --> 00:33:53,840
editor

955
00:33:58,159 --> 00:34:03,200
again pretty short file not really much

956
00:34:00,399 --> 00:34:05,120
like we would expect to find in contents

957
00:34:03,200 --> 00:34:06,799
but we don't see an http meta refresh

958
00:34:05,120 --> 00:34:10,078
like we did before

959
00:34:06,799 --> 00:34:12,800
what we do see though is an iframe

960
00:34:10,079 --> 00:34:13,839
and here we seem to have a another

961
00:34:12,800 --> 00:34:16,720
domain

962
00:34:13,839 --> 00:34:17,839
and it's even in yet another country the

963
00:34:16,719 --> 00:34:20,078
netherlands

964
00:34:17,839 --> 00:34:21,520
so already we've got several layers of

965
00:34:20,079 --> 00:34:23,839
obfuscation here

966
00:34:21,520 --> 00:34:25,679
so we've got the link text not matching

967
00:34:23,839 --> 00:34:28,799
the landing page

968
00:34:25,679 --> 00:34:30,000
it's one layer of obfuscation it's not

969
00:34:28,800 --> 00:34:31,520
going to a real

970
00:34:30,000 --> 00:34:33,760
page but that page is actually

971
00:34:31,520 --> 00:34:35,918
redirecting to another page

972
00:34:33,760 --> 00:34:37,599
another good layer of obfuscation and

973
00:34:35,918 --> 00:34:39,598
then that page is serving up content

974
00:34:37,599 --> 00:34:43,200
from somewhere else

975
00:34:39,599 --> 00:34:43,200
and we see here that the

976
00:34:43,359 --> 00:34:46,960
when we look at this we understand that

977
00:34:44,960 --> 00:34:49,280
it's essentially a borderless

978
00:34:46,960 --> 00:34:50,960
seamless iframe so it's going to look

979
00:34:49,280 --> 00:34:52,960
like you're actually visiting this page

980
00:34:50,960 --> 00:34:54,879
when you're actually at the other site

981
00:34:52,960 --> 00:34:56,879
and some obviously bad things that can

982
00:34:54,879 --> 00:35:00,160
happen for the paypal

983
00:34:56,879 --> 00:35:01,520
account are that it could

984
00:35:00,160 --> 00:35:03,520
you know when somebody has those

985
00:35:01,520 --> 00:35:04,880
credentials they can use it to transfer

986
00:35:03,520 --> 00:35:08,079
money to accounts

987
00:35:04,880 --> 00:35:08,960
um do fake purchases uh maybe even as

988
00:35:08,079 --> 00:35:11,200
far as a

989
00:35:08,960 --> 00:35:12,880
fake online store where they're just

990
00:35:11,200 --> 00:35:15,839
collecting money on the back end and not

991
00:35:12,880 --> 00:35:17,280
providing any services or shipping goods

992
00:35:15,839 --> 00:35:19,040
so these are definitely concerning

993
00:35:17,280 --> 00:35:21,520
things um

994
00:35:19,040 --> 00:35:23,040
let's go ahead and grab this third page

995
00:35:21,520 --> 00:35:26,400
and see what we have here

996
00:35:23,040 --> 00:35:29,119
so we'll go ahead and and

997
00:35:26,400 --> 00:35:31,359
grab this content and see what's here so

998
00:35:29,119 --> 00:35:32,640
we'll go ahead and

999
00:35:31,359 --> 00:35:35,440
pull this back i'm going to go ahead and

1000
00:35:32,640 --> 00:35:38,480
run curl and

1001
00:35:35,440 --> 00:35:38,880
put in this other domain and we'll go

1002
00:35:38,480 --> 00:35:43,200
ahead

1003
00:35:38,880 --> 00:35:46,400
and output this

1004
00:35:43,200 --> 00:35:49,680
and we'll call it third page

1005
00:35:46,400 --> 00:35:51,520
dot html now we have that

1006
00:35:49,680 --> 00:35:52,720
we will go ahead and take a look at the

1007
00:35:51,520 --> 00:35:54,560
contents of this

1008
00:35:52,720 --> 00:35:59,839
file as well let me clear this up here a

1009
00:35:54,560 --> 00:35:59,839
little bit

1010
00:36:00,160 --> 00:36:04,399
and now we've got something like we

1011
00:36:01,520 --> 00:36:07,520
haven't seen before instead of a

1012
00:36:04,400 --> 00:36:11,119
page or a redirect of any sort

1013
00:36:07,520 --> 00:36:13,359
we've got some javascript we've got this

1014
00:36:11,119 --> 00:36:14,640
document right and we've got an unescape

1015
00:36:13,359 --> 00:36:16,078
sequence

1016
00:36:14,640 --> 00:36:18,960
and what appears to be a bunch of

1017
00:36:16,079 --> 00:36:20,560
gobbledygook this is encoded content

1018
00:36:18,960 --> 00:36:22,800
and i'm just going to theorize and

1019
00:36:20,560 --> 00:36:25,839
looking at this that what we have

1020
00:36:22,800 --> 00:36:27,680
is a function that's being fed back into

1021
00:36:25,839 --> 00:36:30,640
this unescaped sequence

1022
00:36:27,680 --> 00:36:32,480
now in the olden days to essentially

1023
00:36:30,640 --> 00:36:33,920
look at this what we would have to do is

1024
00:36:32,480 --> 00:36:36,160
we would have to

1025
00:36:33,920 --> 00:36:37,520
unescape this out to essentially get the

1026
00:36:36,160 --> 00:36:40,000
formula to feed

1027
00:36:37,520 --> 00:36:43,040
the function content back into so we can

1028
00:36:40,000 --> 00:36:44,960
see and understand what's happening here

1029
00:36:43,040 --> 00:36:46,960
so all this is getting really

1030
00:36:44,960 --> 00:36:49,280
interesting really fast because

1031
00:36:46,960 --> 00:36:50,240
again these are yet more layers of

1032
00:36:49,280 --> 00:36:52,800
obfuscation

1033
00:36:50,240 --> 00:36:54,078
piled into what we've already looked at

1034
00:36:52,800 --> 00:36:55,200
i talked about what we had to do in the

1035
00:36:54,079 --> 00:36:58,000
olden days to kind of

1036
00:36:55,200 --> 00:36:59,680
reverse this by hand fortunately the

1037
00:36:58,000 --> 00:37:02,320
thing to remember is that if something

1038
00:36:59,680 --> 00:37:04,160
can be rendered inside of a web browser

1039
00:37:02,320 --> 00:37:06,160
then it has to be something that can be

1040
00:37:04,160 --> 00:37:08,000
decoded otherwise you would never

1041
00:37:06,160 --> 00:37:10,240
be able to see it in the browser when

1042
00:37:08,000 --> 00:37:14,000
you visit the page

1043
00:37:10,240 --> 00:37:16,479
so what i'm going to do here is uh

1044
00:37:14,000 --> 00:37:18,320
pull up this final landing page and it's

1045
00:37:16,480 --> 00:37:20,160
again just what we looked at before but

1046
00:37:18,320 --> 00:37:22,320
instead of the iframe we're actually at

1047
00:37:20,160 --> 00:37:24,240
the real page content now

1048
00:37:22,320 --> 00:37:25,680
where this actually exists or what we

1049
00:37:24,240 --> 00:37:29,040
think it does we kind of

1050
00:37:25,680 --> 00:37:31,520
understand the page code first

1051
00:37:29,040 --> 00:37:34,000
so i'm going to go ahead and pull up the

1052
00:37:31,520 --> 00:37:36,240
developer tools

1053
00:37:34,000 --> 00:37:38,240
inside of chrome and i want to go back

1054
00:37:36,240 --> 00:37:39,680
to this page and refresh it just to make

1055
00:37:38,240 --> 00:37:43,759
sure that

1056
00:37:39,680 --> 00:37:51,839
we're feeding in the content that we

1057
00:37:43,760 --> 00:37:51,839
want to look at

1058
00:37:52,720 --> 00:37:55,919
go to here

1059
00:37:56,800 --> 00:38:00,560
brought up the wrong one here hold on

1060
00:38:02,079 --> 00:38:05,200
so what we're gonna do is we're going to

1061
00:38:03,520 --> 00:38:08,960
go ahead and click in here

1062
00:38:05,200 --> 00:38:08,960
oops that's the wrong one

1063
00:38:09,760 --> 00:38:14,160
let me go here to elements uh here we go

1064
00:38:12,480 --> 00:38:16,960
this is what i want to look at

1065
00:38:14,160 --> 00:38:18,640
we'll edit as html and sure enough this

1066
00:38:16,960 --> 00:38:19,839
matches the text file we were just

1067
00:38:18,640 --> 00:38:22,240
looking at

1068
00:38:19,839 --> 00:38:22,880
so this has that encoded unescape

1069
00:38:22,240 --> 00:38:25,680
sequence

1070
00:38:22,880 --> 00:38:26,000
the function now i made this purposely

1071
00:38:25,680 --> 00:38:28,160
more

1072
00:38:26,000 --> 00:38:29,440
readable uh which is hard to believe

1073
00:38:28,160 --> 00:38:31,040
because we're still looking at encoded

1074
00:38:29,440 --> 00:38:33,280
content right but

1075
00:38:31,040 --> 00:38:34,160
the fact is with the white space you can

1076
00:38:33,280 --> 00:38:36,880
see this

1077
00:38:34,160 --> 00:38:38,879
an escape sequence you see the function

1078
00:38:36,880 --> 00:38:40,240
javascript up here in real life you may

1079
00:38:38,880 --> 00:38:42,560
see this whole thing all bunched

1080
00:38:40,240 --> 00:38:44,160
together with no spacing whatsoever

1081
00:38:42,560 --> 00:38:46,640
so you start looking for some of the

1082
00:38:44,160 --> 00:38:50,319
telltale signs like the semicolon

1083
00:38:46,640 --> 00:38:51,759
inside the parentheses things like that

1084
00:38:50,320 --> 00:38:54,160
so i talked about how the browser

1085
00:38:51,760 --> 00:38:54,720
decodes it the neat thing here is if we

1086
00:38:54,160 --> 00:38:56,720
scroll

1087
00:38:54,720 --> 00:38:57,839
all the way down we actually finally get

1088
00:38:56,720 --> 00:39:00,879
to the decoded

1089
00:38:57,839 --> 00:39:04,160
content that the browser is rendering so

1090
00:39:00,880 --> 00:39:07,440
here we actually see that decoded

1091
00:39:04,160 --> 00:39:10,240
or you know unescaped rather formula

1092
00:39:07,440 --> 00:39:12,480
that is feeding sure enough a function

1093
00:39:10,240 --> 00:39:15,118
into it

1094
00:39:12,480 --> 00:39:16,560
and i expected to see regular html code

1095
00:39:15,119 --> 00:39:17,680
but what was interesting is some of the

1096
00:39:16,560 --> 00:39:20,880
early stuff

1097
00:39:17,680 --> 00:39:25,520
were actually more encoded content

1098
00:39:20,880 --> 00:39:28,480
uh looking at the line in front of this

1099
00:39:25,520 --> 00:39:29,599
um you know it's telling me that uh the

1100
00:39:28,480 --> 00:39:32,960
mime type is

1101
00:39:29,599 --> 00:39:35,359
a data image x icon and here we can tell

1102
00:39:32,960 --> 00:39:38,400
because it's listed as base64 that is

1103
00:39:35,359 --> 00:39:40,799
base64 encoded content

1104
00:39:38,400 --> 00:39:41,760
so it's a relatively big blob of stuff

1105
00:39:40,800 --> 00:39:43,599
here

1106
00:39:41,760 --> 00:39:45,680
if i scroll down past this then i start

1107
00:39:43,599 --> 00:39:48,079
getting into the

1108
00:39:45,680 --> 00:39:49,440
actual html code and i got a little fast

1109
00:39:48,079 --> 00:39:51,839
there

1110
00:39:49,440 --> 00:39:53,119
so here's regular code and then we find

1111
00:39:51,839 --> 00:39:57,119
yet another

1112
00:39:53,119 --> 00:40:00,240
base64 encoded blob within this

1113
00:39:57,119 --> 00:40:03,200
same web page web

1114
00:40:00,240 --> 00:40:04,959
that we're looking at so this is a

1115
00:40:03,200 --> 00:40:05,919
little bit unusual if i do scroll past

1116
00:40:04,960 --> 00:40:08,839
this again i see

1117
00:40:05,920 --> 00:40:10,800
more traditional html like i would

1118
00:40:08,839 --> 00:40:14,078
expect

1119
00:40:10,800 --> 00:40:14,720
so looking at the at this blob right

1120
00:40:14,079 --> 00:40:18,240
here

1121
00:40:14,720 --> 00:40:20,319
the bigger of the two there are some

1122
00:40:18,240 --> 00:40:21,359
neat tools built in that help us with

1123
00:40:20,319 --> 00:40:24,960
this

1124
00:40:21,359 --> 00:40:26,720
so if i click on the

1125
00:40:24,960 --> 00:40:28,400
data image that it pulled down inside

1126
00:40:26,720 --> 00:40:30,000
the developer tools

1127
00:40:28,400 --> 00:40:33,119
here we can see that same line we had

1128
00:40:30,000 --> 00:40:35,760
before that's a jpeg image it's b64

1129
00:40:33,119 --> 00:40:37,599
encoded and this is the same blob of

1130
00:40:35,760 --> 00:40:39,359
stuff that we had

1131
00:40:37,599 --> 00:40:41,359
what's really neat is instead of having

1132
00:40:39,359 --> 00:40:42,720
to decode this by hand we can actually

1133
00:40:41,359 --> 00:40:46,799
click on the preview

1134
00:40:42,720 --> 00:40:49,118
tab here and see that it's a pal

1135
00:40:46,800 --> 00:40:50,640
logo if we go back to the page sure

1136
00:40:49,119 --> 00:40:52,000
enough that matches what we're looking

1137
00:40:50,640 --> 00:40:55,118
at so we've actually found the

1138
00:40:52,000 --> 00:40:58,079
graphic image but when we go back to

1139
00:40:55,119 --> 00:41:00,000
developer tools we didn't really pull

1140
00:40:58,079 --> 00:41:01,839
back any other image files that's the

1141
00:41:00,000 --> 00:41:04,160
only one and if you remember we actually

1142
00:41:01,839 --> 00:41:09,040
had two

1143
00:41:04,160 --> 00:41:11,359
base64 encoded um items

1144
00:41:09,040 --> 00:41:13,680
so we'll go ahead and talk about what it

1145
00:41:11,359 --> 00:41:14,640
takes to decode that by hand

1146
00:41:13,680 --> 00:41:17,919
what i'm going to do is i'm going to

1147
00:41:14,640 --> 00:41:21,520
scroll down and copy down this whole

1148
00:41:17,920 --> 00:41:25,040
blob and we'll throw it into a

1149
00:41:21,520 --> 00:41:28,240
text editor and save it out and

1150
00:41:25,040 --> 00:41:30,160
talk about what we do to decode that

1151
00:41:28,240 --> 00:41:33,520
so i've done that now let me go ahead

1152
00:41:30,160 --> 00:41:37,759
and go back to the text editor

1153
00:41:33,520 --> 00:41:40,079
and paste this in here and

1154
00:41:37,760 --> 00:41:41,760
this is that same blob we were looking

1155
00:41:40,079 --> 00:41:44,000
at let's go ahead and save this

1156
00:41:41,760 --> 00:41:44,000
out

1157
00:41:46,000 --> 00:41:49,920
and we'll go ahead and call it um

1158
00:41:50,520 --> 00:41:54,000
icon.txt based on the mime type that we

1159
00:41:53,119 --> 00:41:56,160
saw

1160
00:41:54,000 --> 00:41:57,440
and see what we have i'm going to go

1161
00:41:56,160 --> 00:42:00,480
ahead and save that

1162
00:41:57,440 --> 00:42:03,839
and come back to our text editor and i'm

1163
00:42:00,480 --> 00:42:03,839
going to use the base64 command

1164
00:42:04,560 --> 00:42:08,880
and do a dash d to decode do a dash i to

1165
00:42:07,839 --> 00:42:12,160
just sort of ignore

1166
00:42:08,880 --> 00:42:12,640
any errors that might have with it and

1167
00:42:12,160 --> 00:42:16,078
uh

1168
00:42:12,640 --> 00:42:18,160
we'll go ahead and uh oops

1169
00:42:16,079 --> 00:42:19,760
do that against the icon.txt file i'm

1170
00:42:18,160 --> 00:42:22,240
going to redirect the output

1171
00:42:19,760 --> 00:42:26,560
of this decode into something i'm going

1172
00:42:22,240 --> 00:42:29,598
to guess is favicon.ico

1173
00:42:26,560 --> 00:42:32,319
when i do that i end up with

1174
00:42:29,599 --> 00:42:33,599
that completing and let's go ahead and

1175
00:42:32,319 --> 00:42:36,240
take a look in our folder

1176
00:42:33,599 --> 00:42:36,800
and see what we have here's the fav icon

1177
00:42:36,240 --> 00:42:38,399
file

1178
00:42:36,800 --> 00:42:41,280
i'm going to make this much bigger so

1179
00:42:38,400 --> 00:42:41,280
it's easier to see

1180
00:42:42,400 --> 00:42:46,560
and i guess i'm going to guess here if

1181
00:42:44,800 --> 00:42:49,040
we go back to our web browser

1182
00:42:46,560 --> 00:42:50,640
that we should see that rendered in the

1183
00:42:49,040 --> 00:42:53,279
session itself

1184
00:42:50,640 --> 00:42:53,680
and uh might be a little bit uh small

1185
00:42:53,280 --> 00:42:57,119
but

1186
00:42:53,680 --> 00:43:00,319
here we have the icon within

1187
00:42:57,119 --> 00:43:02,480
the file here so at this point

1188
00:43:00,319 --> 00:43:03,599
we have a real good idea of what we're

1189
00:43:02,480 --> 00:43:06,560
looking at

1190
00:43:03,599 --> 00:43:07,760
that it really is the proper favicon

1191
00:43:06,560 --> 00:43:09,680
file

1192
00:43:07,760 --> 00:43:10,960
so let's go ahead and catch back up on

1193
00:43:09,680 --> 00:43:13,200
the slide deck

1194
00:43:10,960 --> 00:43:14,560
we've looked at the source code we found

1195
00:43:13,200 --> 00:43:16,799
the encoded content

1196
00:43:14,560 --> 00:43:18,640
and we used javascript encoding well

1197
00:43:16,800 --> 00:43:21,200
that thread actors use javascript

1198
00:43:18,640 --> 00:43:22,879
encoding to avoid analysis and detection

1199
00:43:21,200 --> 00:43:24,480
while hiding the page source code the

1200
00:43:22,880 --> 00:43:26,400
true source code

1201
00:43:24,480 --> 00:43:29,040
we decoded the page using built-in

1202
00:43:26,400 --> 00:43:31,359
browser developer tools

1203
00:43:29,040 --> 00:43:32,240
we looked at encoded elements and i'm

1204
00:43:31,359 --> 00:43:34,880
not sure

1205
00:43:32,240 --> 00:43:36,879
whether they did that simply to further

1206
00:43:34,880 --> 00:43:40,240
avoid analysis and detection

1207
00:43:36,880 --> 00:43:44,160
or they just simply wanted a one page

1208
00:43:40,240 --> 00:43:46,078
file and base64 encoding those image

1209
00:43:44,160 --> 00:43:47,520
files and the fav icon was a way to keep

1210
00:43:46,079 --> 00:43:50,240
that as one page

1211
00:43:47,520 --> 00:43:51,759
but whatever their rationale for doing

1212
00:43:50,240 --> 00:43:54,078
it the way they did

1213
00:43:51,760 --> 00:43:57,119
we did decode that using the built-in

1214
00:43:54,079 --> 00:44:00,319
tools and we also did that by hand

1215
00:43:57,119 --> 00:44:02,400
the remediation plan in this case was to

1216
00:44:00,319 --> 00:44:04,079
well we determined the final fishing

1217
00:44:02,400 --> 00:44:06,079
landing page and we blocked it through

1218
00:44:04,079 --> 00:44:09,359
web content filtering

1219
00:44:06,079 --> 00:44:09,760
we then blocked compromised web servers

1220
00:44:09,359 --> 00:44:12,078
through

1221
00:44:09,760 --> 00:44:14,160
web content filtering then we reported

1222
00:44:12,079 --> 00:44:15,280
compromised websites to domain owners

1223
00:44:14,160 --> 00:44:17,118
using

1224
00:44:15,280 --> 00:44:19,920
in their hosting companies through whois

1225
00:44:17,119 --> 00:44:21,920
contact records

1226
00:44:19,920 --> 00:44:23,200
so that's what i have for the demos for

1227
00:44:21,920 --> 00:44:25,359
this talk uh

1228
00:44:23,200 --> 00:44:27,520
in closing i will be hanging around

1229
00:44:25,359 --> 00:44:28,400
online as you see me hanging around

1230
00:44:27,520 --> 00:44:30,480
online

1231
00:44:28,400 --> 00:44:32,319
please share your own dfir stories with

1232
00:44:30,480 --> 00:44:34,839
me with that i want to say

1233
00:44:32,319 --> 00:44:38,720
friends romans besides columbus

1234
00:44:34,839 --> 00:44:40,160
attendees lend me your irs

1235
00:44:38,720 --> 00:44:42,160
i will stick around and be happy to

1236
00:44:40,160 --> 00:44:44,480
answer any questions anybody has

1237
00:44:42,160 --> 00:44:46,960
please hit me up online through the

1238
00:44:44,480 --> 00:44:49,839
conference and i'll be happy to uh

1239
00:44:46,960 --> 00:44:50,960
chat i want to thank everybody very much

1240
00:44:49,839 --> 00:44:53,359
for attending

1241
00:44:50,960 --> 00:44:56,240
i appreciate you checking out my session

1242
00:44:53,359 --> 00:44:56,240
thank you very much

1243
00:44:57,400 --> 00:45:00,400
goodbye

