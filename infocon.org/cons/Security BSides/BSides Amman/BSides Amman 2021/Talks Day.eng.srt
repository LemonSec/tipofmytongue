1
00:00:00,000 --> 00:00:03,040
are super important for forming a

2
00:00:03,040 --> 00:00:05,359
successful apsec program

3
00:00:05,359 --> 00:00:07,520
um we're going to talk about

4
00:00:07,520 --> 00:00:08,400
fundamentals

5
00:00:08,400 --> 00:00:10,960
of forming an absence program and then

6
00:00:10,960 --> 00:00:12,000
what are these

7
00:00:12,000 --> 00:00:14,960
actual practical pragmatic steps to

8
00:00:14,960 --> 00:00:16,160
build the program

9
00:00:16,160 --> 00:00:17,920
i'm gonna share hopefully if we have

10
00:00:17,920 --> 00:00:19,600
enough time some

11
00:00:19,600 --> 00:00:21,760
metrics that will help you measure the

12
00:00:21,760 --> 00:00:23,439
success of your program

13
00:00:23,439 --> 00:00:25,279
and then we're gonna go to q a at the

14
00:00:25,279 --> 00:00:27,439
end

15
00:00:27,599 --> 00:00:30,880
so a lot of us attending this talk

16
00:00:30,880 --> 00:00:31,599
because we

17
00:00:31,599 --> 00:00:33,600
really want to learn how to spin up a

18
00:00:33,600 --> 00:00:35,840
good appsic program

19
00:00:35,840 --> 00:00:37,600
but appsec if you think about it is

20
00:00:37,600 --> 00:00:39,360
pretty complex space right it's

21
00:00:39,360 --> 00:00:41,440
very time consuming and it's resource

22
00:00:41,440 --> 00:00:42,719
intensive

23
00:00:42,719 --> 00:00:46,160
and there is really no one framework

24
00:00:46,160 --> 00:00:47,760
that can give you all the information

25
00:00:47,760 --> 00:00:49,680
that you need

26
00:00:49,680 --> 00:00:51,760
but we know as a security practitioners

27
00:00:51,760 --> 00:00:53,039
uh there are a lot of

28
00:00:53,039 --> 00:00:56,160
uh things that we want to get into right

29
00:00:56,160 --> 00:00:57,039
so

30
00:00:57,039 --> 00:00:59,120
a security practitioner you actually

31
00:00:59,120 --> 00:01:01,520
have to deal with security reviews

32
00:01:01,520 --> 00:01:03,199
you have probably to spin up some

33
00:01:03,199 --> 00:01:05,199
scanners maybe

34
00:01:05,199 --> 00:01:06,960
there are some applications you need to

35
00:01:06,960 --> 00:01:08,640
do pen testing for

36
00:01:08,640 --> 00:01:11,280
um maybe you there is a specific part of

37
00:01:11,280 --> 00:01:12,000
the organization

38
00:01:12,000 --> 00:01:13,840
where you have to evaluate some sort of

39
00:01:13,840 --> 00:01:16,080
like encryption

40
00:01:16,080 --> 00:01:19,119
implementation of course and

41
00:01:19,119 --> 00:01:20,960
all that stuff is if you think about it

42
00:01:20,960 --> 00:01:22,880
is really part of an aptic

43
00:01:22,880 --> 00:01:27,119
right and

44
00:01:27,119 --> 00:01:30,880
that's what we basically can refer to as

45
00:01:30,880 --> 00:01:32,640
an absolute program or absolute

46
00:01:32,640 --> 00:01:33,759
definition

47
00:01:33,759 --> 00:01:35,280
which is basically all these things

48
00:01:35,280 --> 00:01:37,600
together right so it's an umbrella term

49
00:01:37,600 --> 00:01:39,840
uh that really refers of the to the

50
00:01:39,840 --> 00:01:41,040
process

51
00:01:41,040 --> 00:01:44,000
of finding and fixing and preventing

52
00:01:44,000 --> 00:01:45,200
security vulnerabilities at the

53
00:01:45,200 --> 00:01:46,960
application level

54
00:01:46,960 --> 00:01:50,079
as part of the sdl and if you're not

55
00:01:50,079 --> 00:01:51,759
familiar with sdl is basically the

56
00:01:51,759 --> 00:01:53,600
software development lifecycle

57
00:01:53,600 --> 00:01:56,880
it's when you form the

58
00:01:56,880 --> 00:01:59,439
the application or the software you have

59
00:01:59,439 --> 00:02:00,320
to go through these

60
00:02:00,320 --> 00:02:03,119
building steps

61
00:02:04,240 --> 00:02:06,479
but as someone who is basically security

62
00:02:06,479 --> 00:02:08,000
journalist and a lot of us

63
00:02:08,000 --> 00:02:10,479
we were security journalists uh why do

64
00:02:10,479 --> 00:02:11,360
you need an appsic

65
00:02:11,360 --> 00:02:14,400
program um you go to your office

66
00:02:14,400 --> 00:02:17,440
and you start doing security reviews

67
00:02:17,440 --> 00:02:19,920
um you run some scans like why do you

68
00:02:19,920 --> 00:02:20,560
actually need an

69
00:02:20,560 --> 00:02:23,760
upset program well according to a report

70
00:02:23,760 --> 00:02:24,879
from saab

71
00:02:24,879 --> 00:02:27,120
84 percent of security incidents

72
00:02:27,120 --> 00:02:29,280
happened the application layer

73
00:02:29,280 --> 00:02:32,160
that's pretty huge number making it the

74
00:02:32,160 --> 00:02:35,360
number one attack surface for attackers

75
00:02:35,360 --> 00:02:37,120
and as you probably know if you if

76
00:02:37,120 --> 00:02:38,160
you're running an application in

77
00:02:38,160 --> 00:02:39,360
production

78
00:02:39,360 --> 00:02:42,640
if somebody finds only one single one

79
00:02:42,640 --> 00:02:44,480
and i'm talking about critical ones like

80
00:02:44,480 --> 00:02:46,239
somebody found remote code execution for

81
00:02:46,239 --> 00:02:48,480
example on your production server

82
00:02:48,480 --> 00:02:50,160
it's done right like they can jeopardize

83
00:02:50,160 --> 00:02:52,800
the whole security of your application

84
00:02:52,800 --> 00:02:54,879
and so it's super important for us to

85
00:02:54,879 --> 00:02:56,400
think about apsec

86
00:02:56,400 --> 00:02:59,440
as holistic view of the security for

87
00:02:59,440 --> 00:03:02,079
your application

88
00:03:02,879 --> 00:03:05,440
and remember there is no application

89
00:03:05,440 --> 00:03:06,720
security silver bullet

90
00:03:06,720 --> 00:03:08,400
uh and i'm not gonna give you that in

91
00:03:08,400 --> 00:03:10,080
this talk um hopefully i'm gonna be

92
00:03:10,080 --> 00:03:11,840
sharing my own experience

93
00:03:11,840 --> 00:03:14,640
and also give you some tips on how to

94
00:03:14,640 --> 00:03:15,440
form

95
00:03:15,440 --> 00:03:18,959
a successful uptech program and uh

96
00:03:18,959 --> 00:03:21,760
one thing to remember is that driving

97
00:03:21,760 --> 00:03:23,519
the down the application risk

98
00:03:23,519 --> 00:03:26,080
um because really the end goal for all

99
00:03:26,080 --> 00:03:26,640
of us

100
00:03:26,640 --> 00:03:28,720
even appsec or non-optic is really

101
00:03:28,720 --> 00:03:29,760
driving down the

102
00:03:29,760 --> 00:03:31,360
risk for your application or your

103
00:03:31,360 --> 00:03:34,000
organization requires us to do

104
00:03:34,000 --> 00:03:38,080
both proactive and reactive processes

105
00:03:38,080 --> 00:03:39,760
so the the main goal of this talk is

106
00:03:39,760 --> 00:03:41,599
really to share perspective on how

107
00:03:41,599 --> 00:03:45,360
we can appropriately form

108
00:03:45,360 --> 00:03:48,319
this absence program based on both

109
00:03:48,319 --> 00:03:50,000
proactive and reactive

110
00:03:50,000 --> 00:03:52,640
processes

111
00:03:53,840 --> 00:03:56,159
um a lot of people frequently

112
00:03:56,159 --> 00:03:57,760
misunderstand aptic

113
00:03:57,760 --> 00:04:01,680
and um they get confused sometimes on

114
00:04:01,680 --> 00:04:03,200
like where should i start where should i

115
00:04:03,200 --> 00:04:03,920
begin

116
00:04:03,920 --> 00:04:05,920
what things or frameworks should be i

117
00:04:05,920 --> 00:04:07,280
should be using

118
00:04:07,280 --> 00:04:09,920
and as a result of that as as you can

119
00:04:09,920 --> 00:04:10,480
see that

120
00:04:10,480 --> 00:04:13,599
there will actually try to do

121
00:04:13,599 --> 00:04:16,798
security and they don't deliver uh the

122
00:04:16,798 --> 00:04:18,639
appropriate results so they deliver like

123
00:04:18,639 --> 00:04:20,639
some sort of like sub bar results

124
00:04:20,639 --> 00:04:23,919
where they uh don't

125
00:04:23,919 --> 00:04:27,120
um necessarily understand all the

126
00:04:27,120 --> 00:04:28,479
details of

127
00:04:28,479 --> 00:04:30,400
what could go wrong in the application

128
00:04:30,400 --> 00:04:32,400
or what could go wrong in the

129
00:04:32,400 --> 00:04:35,440
infrastructure itself

130
00:04:36,560 --> 00:04:39,440
so one thing i want to emphasize in this

131
00:04:39,440 --> 00:04:40,320
talk is that

132
00:04:40,320 --> 00:04:42,560
there is really no one correct way to

133
00:04:42,560 --> 00:04:43,919
build an abstract program

134
00:04:43,919 --> 00:04:47,280
and this is basically based on

135
00:04:47,280 --> 00:04:48,960
the experience that i had and also based

136
00:04:48,960 --> 00:04:50,320
on the understanding

137
00:04:50,320 --> 00:04:52,479
is that every company has its own

138
00:04:52,479 --> 00:04:55,360
problems and its own security issues

139
00:04:55,360 --> 00:04:57,600
and so forming an application security

140
00:04:57,600 --> 00:04:59,520
would all depends on how your

141
00:04:59,520 --> 00:05:01,280
organization is structured

142
00:05:01,280 --> 00:05:03,840
and how is your organization is doing or

143
00:05:03,840 --> 00:05:05,680
caring about security

144
00:05:05,680 --> 00:05:08,720
like for example netflix don't have the

145
00:05:08,720 --> 00:05:10,639
concepts of gates we have the concepts

146
00:05:10,639 --> 00:05:12,000
of

147
00:05:12,000 --> 00:05:15,600
guardrails so but some some regulated

148
00:05:15,600 --> 00:05:18,000
organizations like banks for example

149
00:05:18,000 --> 00:05:18,639
they

150
00:05:18,639 --> 00:05:20,560
they have gates because that's that's

151
00:05:20,560 --> 00:05:23,199
part of their regulations

152
00:05:23,199 --> 00:05:25,600
and so uh hopefully in in this talk um

153
00:05:25,600 --> 00:05:27,600
i'll really share my

154
00:05:27,600 --> 00:05:29,919
understanding and lessons i learned uh

155
00:05:29,919 --> 00:05:31,280
working in the apsec

156
00:05:31,280 --> 00:05:32,800
in the optic field on security field in

157
00:05:32,800 --> 00:05:35,280
general and the um

158
00:05:35,280 --> 00:05:37,360
top companies in the silicon valley and

159
00:05:37,360 --> 00:05:39,600
hopefully this experience will be useful

160
00:05:39,600 --> 00:05:41,919
for people who actually wants to dive

161
00:05:41,919 --> 00:05:42,720
deep into

162
00:05:42,720 --> 00:05:46,960
the uh those lessons learned and um

163
00:05:46,960 --> 00:05:49,440
apply them into the organization or the

164
00:05:49,440 --> 00:05:50,880
security team

165
00:05:50,880 --> 00:05:53,840
if you're running one

166
00:05:54,400 --> 00:05:57,919
uh some premier knowledge i would say

167
00:05:57,919 --> 00:05:59,199
pretty much everyone should be familiar

168
00:05:59,199 --> 00:06:01,120
with this if we not this is the

169
00:06:01,120 --> 00:06:03,039
software development cycle i mentioned

170
00:06:03,039 --> 00:06:04,240
earlier

171
00:06:04,240 --> 00:06:06,160
which basically if you're developing a

172
00:06:06,160 --> 00:06:08,400
software it has to go through planning

173
00:06:08,400 --> 00:06:09,840
analysis and design

174
00:06:09,840 --> 00:06:13,199
implementation testing and maintenance

175
00:06:13,199 --> 00:06:15,680
and we're going to mention this sdl

176
00:06:15,680 --> 00:06:16,479
process

177
00:06:16,479 --> 00:06:20,160
along the way

178
00:06:20,160 --> 00:06:22,080
all right so let's talk about the

179
00:06:22,080 --> 00:06:23,840
philosophy of modern apsec

180
00:06:23,840 --> 00:06:26,880
i really like those terms of uh

181
00:06:26,880 --> 00:06:27,840
philosophy

182
00:06:27,840 --> 00:06:29,520
in the modern optic because really gives

183
00:06:29,520 --> 00:06:31,280
us understanding of

184
00:06:31,280 --> 00:06:33,039
what things that will guide us through

185
00:06:33,039 --> 00:06:34,639
the process of forming an absolute

186
00:06:34,639 --> 00:06:36,880
successful optic program

187
00:06:36,880 --> 00:06:38,319
so the first thing i mentioned is don't

188
00:06:38,319 --> 00:06:40,800
create gates but guardrails and

189
00:06:40,800 --> 00:06:42,960
developers has a lot of things to worry

190
00:06:42,960 --> 00:06:44,800
about right they have to worry about

191
00:06:44,800 --> 00:06:47,919
writing software testing it push it into

192
00:06:47,919 --> 00:06:49,840
production build it make sure it's built

193
00:06:49,840 --> 00:06:52,160
successfully and it's free but it's free

194
00:06:52,160 --> 00:06:53,599
of bugs right

195
00:06:53,599 --> 00:06:55,599
and maybe the last thing they have to

196
00:06:55,599 --> 00:06:57,199
worry about security right

197
00:06:57,199 --> 00:06:59,520
uh although security is super important

198
00:06:59,520 --> 00:07:01,120
so you don't you don't want to really

199
00:07:01,120 --> 00:07:02,479
create gates

200
00:07:02,479 --> 00:07:05,280
along the way and again it all depends

201
00:07:05,280 --> 00:07:06,319
on the organization

202
00:07:06,319 --> 00:07:09,360
right some regulated organizations

203
00:07:09,360 --> 00:07:11,440
require you to create gates

204
00:07:11,440 --> 00:07:13,759
but generally speaking the approach

205
00:07:13,759 --> 00:07:14,560
should be

206
00:07:14,560 --> 00:07:16,880
really uh to not create gates but guard

207
00:07:16,880 --> 00:07:17,759
rates

208
00:07:17,759 --> 00:07:20,080
and this makes this will ensure that

209
00:07:20,080 --> 00:07:22,000
your developers have

210
00:07:22,000 --> 00:07:24,960
uh freedom to do the things that you

211
00:07:24,960 --> 00:07:25,840
want

212
00:07:25,840 --> 00:07:27,440
while maintaining security and this

213
00:07:27,440 --> 00:07:30,720
doesn't come with by itself

214
00:07:30,720 --> 00:07:33,120
it has to come with you as a security

215
00:07:33,120 --> 00:07:34,319
team

216
00:07:34,319 --> 00:07:36,800
being enablers and not gatekeepers and

217
00:07:36,800 --> 00:07:38,400
when i say enablers

218
00:07:38,400 --> 00:07:41,280
i mean what i mean by that is you

219
00:07:41,280 --> 00:07:43,280
actually want to

220
00:07:43,280 --> 00:07:45,280
make sure that your developers have the

221
00:07:45,280 --> 00:07:47,199
necessary tools

222
00:07:47,199 --> 00:07:49,919
for them and i say tools i say security

223
00:07:49,919 --> 00:07:50,879
tools

224
00:07:50,879 --> 00:07:52,720
for them to do the things that you ask

225
00:07:52,720 --> 00:07:54,319
them to do right you can't just bring a

226
00:07:54,319 --> 00:07:56,240
problem without a solution

227
00:07:56,240 --> 00:07:58,160
you can't just tell your developer hey

228
00:07:58,160 --> 00:08:00,240
can you go and fix this problem

229
00:08:00,240 --> 00:08:02,160
without telling them how to fix it and

230
00:08:02,160 --> 00:08:04,479
maybe giving them the right tuning

231
00:08:04,479 --> 00:08:06,879
to fix it so you always want to be

232
00:08:06,879 --> 00:08:09,440
enabler

233
00:08:09,520 --> 00:08:11,599
automation is is key i can't emphasize

234
00:08:11,599 --> 00:08:12,879
this enough

235
00:08:12,879 --> 00:08:16,639
you as a as a developer or as a security

236
00:08:16,639 --> 00:08:17,599
team

237
00:08:17,599 --> 00:08:19,599
it's impossible to scale security by

238
00:08:19,599 --> 00:08:21,120
just doing hiring

239
00:08:21,120 --> 00:08:22,879
and we're going to talk about that in

240
00:08:22,879 --> 00:08:24,479
more details

241
00:08:24,479 --> 00:08:27,840
but think about this you know you're

242
00:08:27,840 --> 00:08:30,160
working in a startup or an organization

243
00:08:30,160 --> 00:08:30,639
where

244
00:08:30,639 --> 00:08:32,399
it has hundreds maybe thousands of

245
00:08:32,399 --> 00:08:34,000
microservices

246
00:08:34,000 --> 00:08:35,839
you can't just hire so many people to do

247
00:08:35,839 --> 00:08:37,519
this work so

248
00:08:37,519 --> 00:08:39,839
try to automate as much as you can and

249
00:08:39,839 --> 00:08:43,519
that's a really key philosophy thing

250
00:08:43,839 --> 00:08:46,560
it is impossible for you to do security

251
00:08:46,560 --> 00:08:48,480
day one or week one it's it's just

252
00:08:48,480 --> 00:08:52,000
impractical right and

253
00:08:52,000 --> 00:08:53,120
you want to make sure that you're

254
00:08:53,120 --> 00:08:55,279
actually doing security uh

255
00:08:55,279 --> 00:08:57,360
improvements over time and you can

256
00:08:57,360 --> 00:08:59,519
measure that over time as well

257
00:08:59,519 --> 00:09:01,839
um so it's incremental security

258
00:09:01,839 --> 00:09:03,440
improvements over time

259
00:09:03,440 --> 00:09:05,519
and really this gives you the

260
00:09:05,519 --> 00:09:08,560
understanding that

261
00:09:08,560 --> 00:09:12,160
growing growing security over time is

262
00:09:12,160 --> 00:09:15,120
is a is a marathon is not a sprint you

263
00:09:15,120 --> 00:09:16,240
can't just

264
00:09:16,240 --> 00:09:19,279
think about building one tool that will

265
00:09:19,279 --> 00:09:20,160
fix everything

266
00:09:20,160 --> 00:09:21,920
you have to kind of think a holistic

267
00:09:21,920 --> 00:09:23,519
approach take a holistic approach to

268
00:09:23,519 --> 00:09:25,120
your

269
00:09:25,120 --> 00:09:27,839
organization

270
00:09:28,399 --> 00:09:30,560
this is very important which is uh you

271
00:09:30,560 --> 00:09:32,240
want to provide a consistent experience

272
00:09:32,240 --> 00:09:34,240
to your developers and when i say

273
00:09:34,240 --> 00:09:35,760
consistent experience is

274
00:09:35,760 --> 00:09:37,360
based on two links that you provide them

275
00:09:37,360 --> 00:09:38,560
you don't want to confuse them with so

276
00:09:38,560 --> 00:09:39,680
many toolings

277
00:09:39,680 --> 00:09:41,040
and also you want you don't want to give

278
00:09:41,040 --> 00:09:42,800
them so many different

279
00:09:42,800 --> 00:09:45,519
security guidance so make it consistent

280
00:09:45,519 --> 00:09:47,120
and developers will

281
00:09:47,120 --> 00:09:49,279
like to work with you more and this

282
00:09:49,279 --> 00:09:51,680
brings us to the next one which is

283
00:09:51,680 --> 00:09:53,920
think about this as a partnership with

284
00:09:53,920 --> 00:09:55,519
your developers

285
00:09:55,519 --> 00:09:57,839
because when you're partnering with

286
00:09:57,839 --> 00:09:58,560
someone

287
00:09:58,560 --> 00:10:00,959
that means you're both equally working

288
00:10:00,959 --> 00:10:02,480
on achieving

289
00:10:02,480 --> 00:10:04,640
the actual goal as opposed to just

290
00:10:04,640 --> 00:10:06,320
telling your developer hey

291
00:10:06,320 --> 00:10:08,320
can you like throwing a bunch of bugs on

292
00:10:08,320 --> 00:10:10,640
them and just telling them to fix all of

293
00:10:10,640 --> 00:10:11,920
that stuff

294
00:10:11,920 --> 00:10:13,360
so partnering with them meaning you

295
00:10:13,360 --> 00:10:15,040
actually both work together

296
00:10:15,040 --> 00:10:17,120
to get to a proper security solution

297
00:10:17,120 --> 00:10:18,640
that will help you

298
00:10:18,640 --> 00:10:22,319
achieve your aptic goal

299
00:10:22,640 --> 00:10:24,480
and last but not least is always shift

300
00:10:24,480 --> 00:10:26,079
left i

301
00:10:26,079 --> 00:10:27,519
really like the idea of shift lift we're

302
00:10:27,519 --> 00:10:29,200
going to talk about it in

303
00:10:29,200 --> 00:10:32,240
more details in a little bit but shift

304
00:10:32,240 --> 00:10:32,560
left

305
00:10:32,560 --> 00:10:34,560
approach means you do security early in

306
00:10:34,560 --> 00:10:36,480
the process of the development life

307
00:10:36,480 --> 00:10:37,440
cycle

308
00:10:37,440 --> 00:10:40,320
so think about like scanning earlier uh

309
00:10:40,320 --> 00:10:41,120
doing maybe

310
00:10:41,120 --> 00:10:44,640
some sort of ide checking so do security

311
00:10:44,640 --> 00:10:46,640
early and will catch things early so it

312
00:10:46,640 --> 00:10:48,000
doesn't

313
00:10:48,000 --> 00:10:50,640
it's fixed early so before it goes out

314
00:10:50,640 --> 00:10:52,560
of the door

315
00:10:52,560 --> 00:10:54,320
all right so we talked about these

316
00:10:54,320 --> 00:10:56,079
philosophies now let's talk about some

317
00:10:56,079 --> 00:10:57,920
guiding principles

318
00:10:57,920 --> 00:11:00,240
um again this is not an exhaustive list

319
00:11:00,240 --> 00:11:01,440
but it should help should help you

320
00:11:01,440 --> 00:11:03,680
establish a baseline

321
00:11:03,680 --> 00:11:07,040
so the first thing is don't ever squash

322
00:11:07,040 --> 00:11:08,720
every single bug try killing butt

323
00:11:08,720 --> 00:11:09,360
classes

324
00:11:09,360 --> 00:11:14,480
i really like the idea of

325
00:11:14,480 --> 00:11:18,160
finding a solution that killing

326
00:11:18,160 --> 00:11:20,320
like that contributes massively to

327
00:11:20,320 --> 00:11:21,839
killing a lot of bugs

328
00:11:21,839 --> 00:11:24,880
as opposed to just trying to find

329
00:11:24,880 --> 00:11:28,000
solutions that will fix single bikes so

330
00:11:28,000 --> 00:11:28,480
when

331
00:11:28,480 --> 00:11:31,360
if you think about some proper guiding

332
00:11:31,360 --> 00:11:32,399
principle

333
00:11:32,399 --> 00:11:35,680
um keep that in mind and you're gonna

334
00:11:35,680 --> 00:11:37,440
like once you start working on like

335
00:11:37,440 --> 00:11:39,120
forming abstech programs you'll see a

336
00:11:39,120 --> 00:11:40,839
lot of things

337
00:11:40,839 --> 00:11:43,040
that i'm not talking about like low

338
00:11:43,040 --> 00:11:45,200
hanging fruits i'm talking about really

339
00:11:45,200 --> 00:11:46,720
specific bug classes they're going to

340
00:11:46,720 --> 00:11:49,519
see frequently and so for you to be able

341
00:11:49,519 --> 00:11:50,480
to

342
00:11:50,480 --> 00:11:53,200
get rid of that you have to think about

343
00:11:53,200 --> 00:11:54,560
solution that

344
00:11:54,560 --> 00:11:56,639
will try to kill the whole by classes so

345
00:11:56,639 --> 00:11:58,079
instead of uh

346
00:11:58,079 --> 00:12:00,720
just have a band-aid on that on things

347
00:12:00,720 --> 00:12:02,720
really think about

348
00:12:02,720 --> 00:12:06,320
uh creating some sort of uh a solution

349
00:12:06,320 --> 00:12:08,880
or maybe building a library that will

350
00:12:08,880 --> 00:12:10,000
contribute into killing

351
00:12:10,000 --> 00:12:13,600
all that by classes uh i really i'd like

352
00:12:13,600 --> 00:12:15,360
to advocate for immutable infrastructure

353
00:12:15,360 --> 00:12:16,959
and declarative ci

354
00:12:16,959 --> 00:12:20,480
um immutable infrastructure means you

355
00:12:20,480 --> 00:12:22,240
have an infrastructure where all the

356
00:12:22,240 --> 00:12:24,480
changes are tracked and

357
00:12:24,480 --> 00:12:27,680
um basically you

358
00:12:27,680 --> 00:12:31,680
you have a same understanding or same

359
00:12:31,680 --> 00:12:34,880
uh replicas of infrastructure across the

360
00:12:34,880 --> 00:12:36,320
the globe and you have

361
00:12:36,320 --> 00:12:38,880
a lot of differences this way you're

362
00:12:38,880 --> 00:12:39,360
actually

363
00:12:39,360 --> 00:12:41,279
you know that all these instances have

364
00:12:41,279 --> 00:12:43,440
the same exact copy of the

365
00:12:43,440 --> 00:12:45,360
operating system and the libraries that

366
00:12:45,360 --> 00:12:46,639
are installed there

367
00:12:46,639 --> 00:12:49,360
and also declarative ci meaning you're

368
00:12:49,360 --> 00:12:50,880
basically

369
00:12:50,880 --> 00:12:53,279
tracking everything in a controlled

370
00:12:53,279 --> 00:12:54,639
version or source code

371
00:12:54,639 --> 00:12:57,440
version control and you're tracking all

372
00:12:57,440 --> 00:12:58,880
the changes so you can actually do

373
00:12:58,880 --> 00:13:01,519
checkings there

374
00:13:01,519 --> 00:13:05,360
um focus on rolling out paved roads and

375
00:13:05,360 --> 00:13:08,639
when i say paved road meaning really um

376
00:13:08,639 --> 00:13:09,920
i mentioned earlier you want to be

377
00:13:09,920 --> 00:13:11,920
enablers for your developers so really

378
00:13:11,920 --> 00:13:12,720
help them

379
00:13:12,720 --> 00:13:15,440
create tooling that will make their life

380
00:13:15,440 --> 00:13:17,040
easier for example if you're telling all

381
00:13:17,040 --> 00:13:17,920
the time

382
00:13:17,920 --> 00:13:19,839
if you're telling them all the time hey

383
00:13:19,839 --> 00:13:21,279
can you implement this

384
00:13:21,279 --> 00:13:23,360
authentication or can you add

385
00:13:23,360 --> 00:13:25,760
authorization for your application

386
00:13:25,760 --> 00:13:28,480
if you can just give them the tooling

387
00:13:28,480 --> 00:13:30,000
i'll make your their life

388
00:13:30,000 --> 00:13:32,560
much easier and also will ensure that

389
00:13:32,560 --> 00:13:34,000
they all use the same tool

390
00:13:34,000 --> 00:13:37,040
across all the applications

391
00:13:37,040 --> 00:13:39,120
you want to make security frictionless

392
00:13:39,120 --> 00:13:41,760
and this is very important because

393
00:13:41,760 --> 00:13:46,240
when you ask your developer to create to

394
00:13:46,240 --> 00:13:48,959
fix a specific security problem or

395
00:13:48,959 --> 00:13:50,800
implement a solution

396
00:13:50,800 --> 00:13:53,040
uh you don't want them to spend a lot of

397
00:13:53,040 --> 00:13:54,320
time doing it

398
00:13:54,320 --> 00:13:56,800
um that is going to increase their

399
00:13:56,800 --> 00:13:58,079
cognitive load

400
00:13:58,079 --> 00:14:00,000
so you want to make sure that you're

401
00:14:00,000 --> 00:14:02,320
you're tuning that you're giving to them

402
00:14:02,320 --> 00:14:03,040
is smooth

403
00:14:03,040 --> 00:14:05,360
and easy to implement and doesn't take a

404
00:14:05,360 --> 00:14:07,920
lot of their time

405
00:14:07,920 --> 00:14:09,519
you want to create a consistent guidance

406
00:14:09,519 --> 00:14:12,399
between the appsec team and developers

407
00:14:12,399 --> 00:14:15,120
and when i say guidance it's basically

408
00:14:15,120 --> 00:14:17,120
what the developers needs to do

409
00:14:17,120 --> 00:14:19,440
in case they want to for example let's

410
00:14:19,440 --> 00:14:21,120
say take their app on the internet or

411
00:14:21,120 --> 00:14:22,800
they want to

412
00:14:22,800 --> 00:14:25,839
connect their app into an infrastructure

413
00:14:25,839 --> 00:14:28,800
that talks to third party or vendors

414
00:14:28,800 --> 00:14:29,839
so you want to make sure that you're

415
00:14:29,839 --> 00:14:31,199
always giving them the consistent

416
00:14:31,199 --> 00:14:32,399
guidance especially if you have

417
00:14:32,399 --> 00:14:34,560
different people in the absence team

418
00:14:34,560 --> 00:14:36,000
given different guidance you don't want

419
00:14:36,000 --> 00:14:37,760
that to happen

420
00:14:37,760 --> 00:14:41,120
and you want to also catch all

421
00:14:41,120 --> 00:14:44,160
low-hanging fruits and those are usually

422
00:14:44,160 --> 00:14:45,440
the things that gets people

423
00:14:45,440 --> 00:14:48,000
or companies breached unfortunately um

424
00:14:48,000 --> 00:14:48,480
they

425
00:14:48,480 --> 00:14:52,639
there is no really like specific um

426
00:14:52,639 --> 00:14:55,440
reference to this but think about it if

427
00:14:55,440 --> 00:14:57,600
if you have a bunch of like rces

428
00:14:57,600 --> 00:14:59,600
on the production remote code executions

429
00:14:59,600 --> 00:15:00,639
or sql injection

430
00:15:00,639 --> 00:15:03,920
issues think about

431
00:15:03,920 --> 00:15:07,120
that there are a lot of script kitties

432
00:15:07,120 --> 00:15:08,079
that can just run

433
00:15:08,079 --> 00:15:10,839
scanners on your infrastructure and find

434
00:15:10,839 --> 00:15:12,320
those

435
00:15:12,320 --> 00:15:14,880
and you don't want that to happen right

436
00:15:14,880 --> 00:15:16,720
so try to catch all these slang hand low

437
00:15:16,720 --> 00:15:19,040
hanging fruits as soon as possible

438
00:15:19,040 --> 00:15:21,920
and last but not least is really define

439
00:15:21,920 --> 00:15:25,040
what sdl means to develop steam

440
00:15:25,040 --> 00:15:27,279
the reason i mentioned that is because

441
00:15:27,279 --> 00:15:29,759
working with devops teams sometimes

442
00:15:29,759 --> 00:15:33,279
uh tends to be um

443
00:15:33,279 --> 00:15:36,480
more of like you tell them basically

444
00:15:36,480 --> 00:15:38,839
what to do as opposed to

445
00:15:38,839 --> 00:15:42,000
um partnering with them so

446
00:15:42,000 --> 00:15:43,519
i really like the idea of partnering

447
00:15:43,519 --> 00:15:45,680
with even your devops team

448
00:15:45,680 --> 00:15:48,720
and defining what what exactly are you

449
00:15:48,720 --> 00:15:50,240
trying to accomplish

450
00:15:50,240 --> 00:15:53,279
and be reasonable about your security

451
00:15:53,279 --> 00:15:57,519
asks all right

452
00:15:57,519 --> 00:15:59,600
so we talked about the philosophy and

453
00:15:59,600 --> 00:16:00,800
guiding principles

454
00:16:00,800 --> 00:16:03,680
let's spend a little bit of time here

455
00:16:03,680 --> 00:16:05,040
talk about the

456
00:16:05,040 --> 00:16:06,839
fundamentals of forming an absence

457
00:16:06,839 --> 00:16:08,959
program

458
00:16:08,959 --> 00:16:13,360
so from my own experience

459
00:16:13,360 --> 00:16:15,360
fully integrating eptic into the sdl is

460
00:16:15,360 --> 00:16:16,399
the major challenge

461
00:16:16,399 --> 00:16:19,360
and you might think about two approaches

462
00:16:19,360 --> 00:16:20,880
here one is

463
00:16:20,880 --> 00:16:23,360
i can just use vendor tooling and have

464
00:16:23,360 --> 00:16:25,040
them do all the work

465
00:16:25,040 --> 00:16:27,120
which does work for a lot of companies

466
00:16:27,120 --> 00:16:29,440
right but not all the time

467
00:16:29,440 --> 00:16:32,560
your developer or your vendor tooling

468
00:16:32,560 --> 00:16:35,600
actually has a smooth integration

469
00:16:35,600 --> 00:16:37,360
may require a lot of changes and may

470
00:16:37,360 --> 00:16:39,040
require your devops team to make a lot

471
00:16:39,040 --> 00:16:41,279
of changes

472
00:16:41,279 --> 00:16:44,480
um so the other thing also

473
00:16:44,480 --> 00:16:46,480
you wanna create some sort of like a

474
00:16:46,480 --> 00:16:48,399
mature development culture right

475
00:16:48,399 --> 00:16:52,160
so you don't want your organization

476
00:16:52,160 --> 00:16:54,800
to have so many different tooling so

477
00:16:54,800 --> 00:16:56,240
many different languages so many

478
00:16:56,240 --> 00:16:57,680
different frameworks it makes it

479
00:16:57,680 --> 00:17:00,079
so much harder to do upsick and so you

480
00:17:00,079 --> 00:17:02,240
want to define some sort of uh

481
00:17:02,240 --> 00:17:04,799
requirements of what would be the paved

482
00:17:04,799 --> 00:17:05,359
road

483
00:17:05,359 --> 00:17:08,319
solution for uh web application for

484
00:17:08,319 --> 00:17:09,439
example framework

485
00:17:09,439 --> 00:17:11,280
what would be the paid route solution

486
00:17:11,280 --> 00:17:14,640
for an authorization system

487
00:17:14,640 --> 00:17:16,559
uh but let's talk about those

488
00:17:16,559 --> 00:17:19,119
fundamentals right

489
00:17:19,119 --> 00:17:23,119
now for you to be able to actually

490
00:17:23,119 --> 00:17:26,720
form a successful abstract program

491
00:17:26,720 --> 00:17:28,000
there are a couple of things you want to

492
00:17:28,000 --> 00:17:30,799
keep in mind the first thing is

493
00:17:30,799 --> 00:17:34,240
you want to know all your assets

494
00:17:34,240 --> 00:17:36,480
they always say that you can't fix what

495
00:17:36,480 --> 00:17:37,679
you don't know

496
00:17:37,679 --> 00:17:40,640
right so knowing all the assets in the

497
00:17:40,640 --> 00:17:41,760
company

498
00:17:41,760 --> 00:17:45,520
will allow you to quickly understand

499
00:17:45,520 --> 00:17:48,240
if something goes wrong where else is

500
00:17:48,240 --> 00:17:49,919
this thing going wrong

501
00:17:49,919 --> 00:17:53,039
if somebody finds a bug on one instance

502
00:17:53,039 --> 00:17:57,360
where else is that issue can be found

503
00:17:57,360 --> 00:18:00,320
and so you you have a catalog of all

504
00:18:00,320 --> 00:18:02,640
your assets into one place

505
00:18:02,640 --> 00:18:03,760
and we're going to talk about that as

506
00:18:03,760 --> 00:18:06,400
well you want to determine your assets

507
00:18:06,400 --> 00:18:07,200
risks

508
00:18:07,200 --> 00:18:10,799
um you want to know what are the

509
00:18:10,799 --> 00:18:13,200
most riskiest assets and so you can

510
00:18:13,200 --> 00:18:15,440
focus more on those things as opposed to

511
00:18:15,440 --> 00:18:16,640
just

512
00:18:16,640 --> 00:18:20,480
less riskiest assets and

513
00:18:20,480 --> 00:18:22,480
you want to understand what is in your

514
00:18:22,480 --> 00:18:23,919
code

515
00:18:23,919 --> 00:18:26,160
and when i say what's in your code is

516
00:18:26,160 --> 00:18:27,840
really about

517
00:18:27,840 --> 00:18:30,960
understanding of what exactly is being

518
00:18:30,960 --> 00:18:32,080
supported

519
00:18:32,080 --> 00:18:34,640
what frameworks what libraries are being

520
00:18:34,640 --> 00:18:36,240
used with third-party libraries being

521
00:18:36,240 --> 00:18:37,520
pulled

522
00:18:37,520 --> 00:18:40,720
etc uh you want to use the right tools

523
00:18:40,720 --> 00:18:43,520
uh you don't want to spend your time

524
00:18:43,520 --> 00:18:44,720
thinking about

525
00:18:44,720 --> 00:18:47,840
um using 1000 open source tools right

526
00:18:47,840 --> 00:18:50,320
it's just not scalable it's not

527
00:18:50,320 --> 00:18:51,600
maintainable

528
00:18:51,600 --> 00:18:53,440
so you want to think about what is the

529
00:18:53,440 --> 00:18:55,120
right tool for my organization what is

530
00:18:55,120 --> 00:18:56,400
the right tool for

531
00:18:56,400 --> 00:18:58,240
this particular part of the

532
00:18:58,240 --> 00:19:00,960
infrastructure

533
00:19:01,520 --> 00:19:03,120
you want to also create security

534
00:19:03,120 --> 00:19:05,440
guidance and security guidance is super

535
00:19:05,440 --> 00:19:06,559
important

536
00:19:06,559 --> 00:19:09,360
because you end up having so many

537
00:19:09,360 --> 00:19:10,000
conversations

538
00:19:10,000 --> 00:19:12,799
with so many people about the same thing

539
00:19:12,799 --> 00:19:14,960
and so having one security guidance that

540
00:19:14,960 --> 00:19:16,799
you can share with all those people

541
00:19:16,799 --> 00:19:20,080
will help you tremendously and

542
00:19:20,080 --> 00:19:22,720
seen this from previous experience where

543
00:19:22,720 --> 00:19:23,679
you talk to

544
00:19:23,679 --> 00:19:25,760
this team they're doing something and

545
00:19:25,760 --> 00:19:27,200
they talk the other team they're doing

546
00:19:27,200 --> 00:19:28,799
something similar but they're using

547
00:19:28,799 --> 00:19:30,480
different

548
00:19:30,480 --> 00:19:33,039
security tooling or libraries and so you

549
00:19:33,039 --> 00:19:33,840
have kind of

550
00:19:33,840 --> 00:19:36,880
make it consistent for them

551
00:19:36,880 --> 00:19:38,799
you want to train your developers um a

552
00:19:38,799 --> 00:19:40,400
lot of people have different opinions on

553
00:19:40,400 --> 00:19:41,120
this but

554
00:19:41,120 --> 00:19:43,919
um really you want to train your

555
00:19:43,919 --> 00:19:45,039
developers but

556
00:19:45,039 --> 00:19:46,640
you don't expect them to be security

557
00:19:46,640 --> 00:19:48,400
experts

558
00:19:48,400 --> 00:19:50,480
and the last but not least is the

559
00:19:50,480 --> 00:19:52,559
embrace security self-service

560
00:19:52,559 --> 00:19:55,280
um scaling aptique is is a major

561
00:19:55,280 --> 00:19:56,480
challenge as we mentioned in the

562
00:19:56,480 --> 00:19:57,440
beginning

563
00:19:57,440 --> 00:20:00,480
and so you want to put a lot of

564
00:20:00,480 --> 00:20:03,200
time to think about how can you actually

565
00:20:03,200 --> 00:20:05,120
create some sort of self-service

566
00:20:05,120 --> 00:20:07,280
tooling that will help your developers

567
00:20:07,280 --> 00:20:08,559
and self-service can be

568
00:20:08,559 --> 00:20:10,720
either like a library that they can use

569
00:20:10,720 --> 00:20:11,760
on their own

570
00:20:11,760 --> 00:20:13,200
or could be a guidance that you're

571
00:20:13,200 --> 00:20:14,960
actually telling them what to do

572
00:20:14,960 --> 00:20:17,600
and so they can self-serve themselves

573
00:20:17,600 --> 00:20:18,159
without

574
00:20:18,159 --> 00:20:20,720
going back and asking secure team

575
00:20:20,720 --> 00:20:22,480
imagine you have a company with

576
00:20:22,480 --> 00:20:25,280
2 000 3 000 10 000 developers and you

577
00:20:25,280 --> 00:20:27,600
have 100 people in the security team

578
00:20:27,600 --> 00:20:30,799
it's just not going to scale

579
00:20:30,880 --> 00:20:32,400
all right so now we talked about

580
00:20:32,400 --> 00:20:34,720
philosophies guidelines and

581
00:20:34,720 --> 00:20:38,159
we touch based on the

582
00:20:38,159 --> 00:20:40,000
the major fundamentals of forming an

583
00:20:40,000 --> 00:20:42,320
apsec let's now talk about

584
00:20:42,320 --> 00:20:44,480
these steps and again i want to

585
00:20:44,480 --> 00:20:45,600
emphasize that this

586
00:20:45,600 --> 00:20:47,520
is not the only way that you can do

587
00:20:47,520 --> 00:20:49,440
absolute and this is

588
00:20:49,440 --> 00:20:52,720
just reference from my own experience

589
00:20:52,720 --> 00:20:55,200
and of course a lot of people can do

590
00:20:55,200 --> 00:20:56,799
things differently

591
00:20:56,799 --> 00:21:01,120
but this is been showed a lot of success

592
00:21:01,120 --> 00:21:03,840
in major tech companies uh doing

593
00:21:03,840 --> 00:21:07,120
security or doing apsec

594
00:21:07,360 --> 00:21:09,600
so the first thing you want to do is as

595
00:21:09,600 --> 00:21:11,440
i mentioned you actually need to build

596
00:21:11,440 --> 00:21:12,640
an asset inventory

597
00:21:12,640 --> 00:21:14,720
you want to know all your assets that

598
00:21:14,720 --> 00:21:17,200
exist in your organization

599
00:21:17,200 --> 00:21:19,200
if you don't have an asset inventory

600
00:21:19,200 --> 00:21:20,880
it's a big problem

601
00:21:20,880 --> 00:21:23,200
um it's i really like this quote from

602
00:21:23,200 --> 00:21:24,400
jeremiah grossman

603
00:21:24,400 --> 00:21:26,640
who's the founder of white hat security

604
00:21:26,640 --> 00:21:28,799
these days the biggest absence risk

605
00:21:28,799 --> 00:21:31,840
are websites that you don't know you own

606
00:21:31,840 --> 00:21:35,200
it's actually very 100 true imagine you

607
00:21:35,200 --> 00:21:38,400
um are required to patch

608
00:21:38,400 --> 00:21:40,480
a problem like for example struts

609
00:21:40,480 --> 00:21:41,760
vulnerability

610
00:21:41,760 --> 00:21:44,960
and you want to know what

611
00:21:44,960 --> 00:21:46,799
applications are using this struts

612
00:21:46,799 --> 00:21:49,600
version if you don't have an s inventory

613
00:21:49,600 --> 00:21:51,039
you have to go and reach out to all the

614
00:21:51,039 --> 00:21:53,280
developers and you might or might not

615
00:21:53,280 --> 00:21:55,840
get 100 coverage

616
00:21:55,840 --> 00:21:58,720
but if you have 100 coverage on the

617
00:21:58,720 --> 00:22:00,640
asset inventory then you can just simply

618
00:22:00,640 --> 00:22:02,080
query

619
00:22:02,080 --> 00:22:04,880
and the query will return back all the

620
00:22:04,880 --> 00:22:05,280
uh

621
00:22:05,280 --> 00:22:09,120
assets that are actually using uh this

622
00:22:09,120 --> 00:22:10,559
the the applications that are using

623
00:22:10,559 --> 00:22:14,080
strat's vulnerability for example

624
00:22:14,080 --> 00:22:15,600
and the nice thing about building an ass

625
00:22:15,600 --> 00:22:17,440
inventory is that um

626
00:22:17,440 --> 00:22:20,559
you can um you can use etls

627
00:22:20,559 --> 00:22:21,919
and if you're not familiar with etls

628
00:22:21,919 --> 00:22:23,840
there's this extract transform load

629
00:22:23,840 --> 00:22:27,039
it's basically a form of uh

630
00:22:27,039 --> 00:22:30,320
data loading transformation so basically

631
00:22:30,320 --> 00:22:33,679
if you have like dns data and

632
00:22:33,679 --> 00:22:35,120
you want to put this data as inventory

633
00:22:35,120 --> 00:22:36,799
and create some sort of etls

634
00:22:36,799 --> 00:22:40,320
that takes this data from your

635
00:22:40,320 --> 00:22:43,440
dns provider maybe route 53

636
00:22:43,440 --> 00:22:46,640
and put it into your asset inventory now

637
00:22:46,640 --> 00:22:48,480
if you have a dns problem

638
00:22:48,480 --> 00:22:50,720
or if you want to query what this app is

639
00:22:50,720 --> 00:22:51,520
being

640
00:22:51,520 --> 00:22:54,080
used for then you can query this dns

641
00:22:54,080 --> 00:22:54,720
information

642
00:22:54,720 --> 00:22:56,960
and get the data back and you can also

643
00:22:56,960 --> 00:22:58,000
create some sort of

644
00:22:58,000 --> 00:23:00,159
graph database so you can build

645
00:23:00,159 --> 00:23:01,840
relationships between

646
00:23:01,840 --> 00:23:04,720
all these components

647
00:23:06,080 --> 00:23:08,720
you want to identify risky assets and

648
00:23:08,720 --> 00:23:10,559
this is very important because

649
00:23:10,559 --> 00:23:12,400
you want to focus on those and you want

650
00:23:12,400 --> 00:23:14,559
to focus on creating

651
00:23:14,559 --> 00:23:17,919
solutions and paved roads and controls

652
00:23:17,919 --> 00:23:20,960
over all these risky assets

653
00:23:20,960 --> 00:23:24,240
um and so you can determine the based on

654
00:23:24,240 --> 00:23:25,360
the risk factors

655
00:23:25,360 --> 00:23:28,240
for example is this internet facing does

656
00:23:28,240 --> 00:23:29,840
it actually talk to payment does it

657
00:23:29,840 --> 00:23:31,360
process payment

658
00:23:31,360 --> 00:23:33,679
um so those are usually tends to be

659
00:23:33,679 --> 00:23:34,880
risky assets

660
00:23:34,880 --> 00:23:37,360
uh because you know as you probably know

661
00:23:37,360 --> 00:23:39,200
like working for example

662
00:23:39,200 --> 00:23:43,120
at banks banks is a regulated industry

663
00:23:43,120 --> 00:23:47,200
where they focus so much on payments

664
00:23:47,200 --> 00:23:50,240
infrastructure and so those are always

665
00:23:50,240 --> 00:23:52,159
going to be risky assets as opposed to

666
00:23:52,159 --> 00:23:53,919
just an application that shows

667
00:23:53,919 --> 00:23:57,279
um news um

668
00:23:57,279 --> 00:23:59,360
you can look at something called fair

669
00:23:59,360 --> 00:24:00,320
model

670
00:24:00,320 --> 00:24:02,640
is pretty good framework it's fair

671
00:24:02,640 --> 00:24:03,520
stands for

672
00:24:03,520 --> 00:24:06,559
factor analysis of information risk and

673
00:24:06,559 --> 00:24:09,440
really provides a model for you to

674
00:24:09,440 --> 00:24:10,960
understand and analyze

675
00:24:10,960 --> 00:24:13,120
and quantify cyber risks and operation

676
00:24:13,120 --> 00:24:14,640
risk in financial terms

677
00:24:14,640 --> 00:24:18,640
so you can say if this app

678
00:24:18,640 --> 00:24:21,360
has ever had a remote code execution it

679
00:24:21,360 --> 00:24:22,799
will cost the company for example

680
00:24:22,799 --> 00:24:23,600
million dollar

681
00:24:23,600 --> 00:24:26,320
something like this

682
00:24:27,520 --> 00:24:30,799
um shift lift approach we talked

683
00:24:30,799 --> 00:24:32,720
briefly about shiftlift and you want to

684
00:24:32,720 --> 00:24:34,559
get all that stuff earlier in the

685
00:24:34,559 --> 00:24:36,240
development lifecycle

686
00:24:36,240 --> 00:24:39,520
so think about having some sort of

687
00:24:39,520 --> 00:24:41,279
source coded station

688
00:24:41,279 --> 00:24:43,600
and developers workstation you can

689
00:24:43,600 --> 00:24:45,679
develop things like

690
00:24:45,679 --> 00:24:49,120
source code analysis and tests semigrip

691
00:24:49,120 --> 00:24:51,440
is pretty good neat tool

692
00:24:51,440 --> 00:24:53,760
that you can create some sort of

693
00:24:53,760 --> 00:24:55,360
checking on

694
00:24:55,360 --> 00:24:59,600
the code itself you can use ide plugins

695
00:24:59,600 --> 00:25:01,840
so you can for example recommend to

696
00:25:01,840 --> 00:25:05,200
developers to use a specific library

697
00:25:05,200 --> 00:25:08,400
and you can also use cli scanners

698
00:25:08,400 --> 00:25:10,400
this is part of the compilation process

699
00:25:10,400 --> 00:25:13,919
especially if you're using cc plus plus

700
00:25:13,919 --> 00:25:15,520
it's super important for you to catch

701
00:25:15,520 --> 00:25:17,360
those low hanging like

702
00:25:17,360 --> 00:25:20,479
buffer overflow issues

703
00:25:21,760 --> 00:25:25,120
all right next step is

704
00:25:25,120 --> 00:25:27,919
now you have dealt with the workstations

705
00:25:27,919 --> 00:25:28,480
and

706
00:25:28,480 --> 00:25:31,520
um try to basically integrate shift left

707
00:25:31,520 --> 00:25:32,000
approach

708
00:25:32,000 --> 00:25:35,039
into the security of uh

709
00:25:35,039 --> 00:25:38,240
for the developers now you have to kind

710
00:25:38,240 --> 00:25:38,880
of

711
00:25:38,880 --> 00:25:40,960
look at the infrastructure side of

712
00:25:40,960 --> 00:25:43,200
things so

713
00:25:43,200 --> 00:25:45,039
if you're not familiar with a ci cd is

714
00:25:45,039 --> 00:25:46,559
continuous integration continuous

715
00:25:46,559 --> 00:25:47,279
delivery

716
00:25:47,279 --> 00:25:49,360
infrastructure it's basically a term

717
00:25:49,360 --> 00:25:50,960
that we refer to

718
00:25:50,960 --> 00:25:54,240
when we build an infrastructure that

719
00:25:54,240 --> 00:25:55,679
allows developers to push code to

720
00:25:55,679 --> 00:25:57,120
production

721
00:25:57,120 --> 00:25:58,880
without having to worry too much about

722
00:25:58,880 --> 00:26:02,320
the details of building and deploying

723
00:26:02,320 --> 00:26:06,240
so tens things get to

724
00:26:06,240 --> 00:26:09,679
get really hairy when we talk about ci

725
00:26:09,679 --> 00:26:11,520
cd infrastructure

726
00:26:11,520 --> 00:26:13,120
because there is a just a bunch of

727
00:26:13,120 --> 00:26:14,640
secrets that laying around

728
00:26:14,640 --> 00:26:16,960
and usually in those systems and the

729
00:26:16,960 --> 00:26:18,159
reason for that is because

730
00:26:18,159 --> 00:26:20,000
all these different components has to

731
00:26:20,000 --> 00:26:21,919
talk to each other so they should form

732
00:26:21,919 --> 00:26:23,600
some sort of identity that requires

733
00:26:23,600 --> 00:26:25,440
maybe api tokens

734
00:26:25,440 --> 00:26:28,480
or um some sort of secrets that

735
00:26:28,480 --> 00:26:30,960
needs to talk and um i can emphasize

736
00:26:30,960 --> 00:26:32,080
that

737
00:26:32,080 --> 00:26:34,880
this secrets thing should really just

738
00:26:34,880 --> 00:26:36,240
die and go away

739
00:26:36,240 --> 00:26:39,120
and instead companies should form some

740
00:26:39,120 --> 00:26:42,880
sort of pki system that uses mutual tls

741
00:26:42,880 --> 00:26:44,400
um you want to make sure that there's

742
00:26:44,400 --> 00:26:46,320
least privilege you don't want your

743
00:26:46,320 --> 00:26:48,159
if you're running jenkins for example

744
00:26:48,159 --> 00:26:50,240
you don't want all the developers have

745
00:26:50,240 --> 00:26:51,120
access to

746
00:26:51,120 --> 00:26:53,760
the same jenkins instances um this is

747
00:26:53,760 --> 00:26:54,880
pretty bad

748
00:26:54,880 --> 00:26:56,480
even using jenkins is pretty bad but

749
00:26:56,480 --> 00:26:58,559
like in general

750
00:26:58,559 --> 00:27:01,840
if you're using a ci system that has

751
00:27:01,840 --> 00:27:04,400
all developers have access to that's a

752
00:27:04,400 --> 00:27:06,480
blessed problem

753
00:27:06,480 --> 00:27:08,720
uh so you want to undefine based uh

754
00:27:08,720 --> 00:27:09,679
service accounts

755
00:27:09,679 --> 00:27:12,400
and those base service accounts

756
00:27:12,400 --> 00:27:13,039
basically

757
00:27:13,039 --> 00:27:16,159
the accounts that gets created for

758
00:27:16,159 --> 00:27:20,240
the machinery to talk to another service

759
00:27:20,240 --> 00:27:22,240
so you identify those and usually those

760
00:27:22,240 --> 00:27:24,159
have some sort of secrets

761
00:27:24,159 --> 00:27:27,760
that make sure that it gets rotated

762
00:27:27,760 --> 00:27:28,960
uh you want to make sure that there is

763
00:27:28,960 --> 00:27:30,880
secure pipeline configuration and

764
00:27:30,880 --> 00:27:32,559
monitoring and auditing

765
00:27:32,559 --> 00:27:35,679
um integrity of the build pipeline

766
00:27:35,679 --> 00:27:37,200
you can do some sort of cryptographic

767
00:27:37,200 --> 00:27:39,600
checking to make sure that the integrity

768
00:27:39,600 --> 00:27:41,279
is not

769
00:27:41,279 --> 00:27:44,320
flawed and last but not least is the

770
00:27:44,320 --> 00:27:46,559
module signing which basically

771
00:27:46,559 --> 00:27:49,440
uh when you when you push a new artifact

772
00:27:49,440 --> 00:27:50,960
you want to make sure that this module

773
00:27:50,960 --> 00:27:52,320
is signed so you know it's actually

774
00:27:52,320 --> 00:27:55,760
coming from the right developers

775
00:27:57,279 --> 00:28:00,880
container security is very important and

776
00:28:00,880 --> 00:28:02,000
the reason i mentioned container

777
00:28:02,000 --> 00:28:04,000
security is because a lot of modern

778
00:28:04,000 --> 00:28:05,520
organizations they use

779
00:28:05,520 --> 00:28:07,440
containers and orchestration like

780
00:28:07,440 --> 00:28:09,120
kubernetes

781
00:28:09,120 --> 00:28:12,240
and those specific

782
00:28:12,240 --> 00:28:15,919
type of software requires a lot of

783
00:28:15,919 --> 00:28:16,960
understanding of

784
00:28:16,960 --> 00:28:20,320
what could go wrong there and so

785
00:28:20,320 --> 00:28:22,480
things like for example you have to look

786
00:28:22,480 --> 00:28:23,520
at from the absence

787
00:28:23,520 --> 00:28:26,240
perspective is really avoid for example

788
00:28:26,240 --> 00:28:28,159
privileged containers

789
00:28:28,159 --> 00:28:29,679
because privileged containers allow you

790
00:28:29,679 --> 00:28:31,760
to escape from the actual container and

791
00:28:31,760 --> 00:28:33,120
to the host

792
00:28:33,120 --> 00:28:36,159
and um if an attacker get access there

793
00:28:36,159 --> 00:28:39,440
then they can compromise the host itself

794
00:28:39,440 --> 00:28:40,960
uh you want to remove all the dangerous

795
00:28:40,960 --> 00:28:43,440
linux capabilities um

796
00:28:43,440 --> 00:28:45,840
it's um it's very important to

797
00:28:45,840 --> 00:28:46,880
understand that

798
00:28:46,880 --> 00:28:49,440
uh when you form when the container gets

799
00:28:49,440 --> 00:28:50,480
created it

800
00:28:50,480 --> 00:28:52,399
inherits some linux capabilities so you

801
00:28:52,399 --> 00:28:53,600
want to make sure that

802
00:28:53,600 --> 00:28:57,760
you don't have that and um you want to

803
00:28:57,760 --> 00:28:59,840
form some sort of container network

804
00:28:59,840 --> 00:29:02,080
traffic monitoring if one container gets

805
00:29:02,080 --> 00:29:03,440
compromised you want to know

806
00:29:03,440 --> 00:29:06,960
what sort of suspicious traffic could

807
00:29:06,960 --> 00:29:09,520
uh originate from that container that

808
00:29:09,520 --> 00:29:12,240
you can detect it earlier

809
00:29:12,240 --> 00:29:14,000
you want to actually secure the the host

810
00:29:14,000 --> 00:29:16,159
itself because the host is the

811
00:29:16,159 --> 00:29:18,640
the infrastructure of the server that

812
00:29:18,640 --> 00:29:20,640
hosts all these containers

813
00:29:20,640 --> 00:29:22,799
and so compromising that host means the

814
00:29:22,799 --> 00:29:24,000
attacker will compromise

815
00:29:24,000 --> 00:29:27,039
the whole internal infrastructure

816
00:29:27,039 --> 00:29:28,480
and you want to scan for malicious

817
00:29:28,480 --> 00:29:31,919
containers um we've seen in the past

818
00:29:31,919 --> 00:29:35,520
people pushing stuff onto docker hub

819
00:29:35,520 --> 00:29:40,880
that contains malicious code um

820
00:29:40,880 --> 00:29:42,720
you want to develop tools for that helps

821
00:29:42,720 --> 00:29:44,399
appsec team and so

822
00:29:44,399 --> 00:29:47,520
for example um credentials is is a very

823
00:29:47,520 --> 00:29:50,640
important thing to think about

824
00:29:50,640 --> 00:29:52,559
so develop some tooling that will help

825
00:29:52,559 --> 00:29:53,760
developers

826
00:29:53,760 --> 00:29:56,480
know how to manage credentials and not

827
00:29:56,480 --> 00:29:58,080
just only how but like

828
00:29:58,080 --> 00:30:00,080
some sort of like uh information

829
00:30:00,080 --> 00:30:02,000
enforcement mechanisms that

830
00:30:02,000 --> 00:30:04,159
you can tell developers this is a

831
00:30:04,159 --> 00:30:05,600
library you're going to use to store

832
00:30:05,600 --> 00:30:06,559
secrets

833
00:30:06,559 --> 00:30:08,320
and then you're going to create scanners

834
00:30:08,320 --> 00:30:10,559
that will detect the absence of

835
00:30:10,559 --> 00:30:13,200
this control

836
00:30:16,559 --> 00:30:19,600
um people tends to create

837
00:30:19,600 --> 00:30:21,760
a lot of tooling for aptik to scan the

838
00:30:21,760 --> 00:30:22,720
infrastructure

839
00:30:22,720 --> 00:30:25,919
but they forget to secure their own

840
00:30:25,919 --> 00:30:28,480
infrastructure so one of the things the

841
00:30:28,480 --> 00:30:31,039
key important thing about

842
00:30:31,039 --> 00:30:32,559
when you build an upset infrastructure

843
00:30:32,559 --> 00:30:34,720
is really make sure it's secure

844
00:30:34,720 --> 00:30:36,720
make sure that you're doing all the

845
00:30:36,720 --> 00:30:38,320
hygiene of killing the

846
00:30:38,320 --> 00:30:41,440
tech debt and um

847
00:30:41,440 --> 00:30:43,120
make sure that your all your

848
00:30:43,120 --> 00:30:44,559
configurations are secure

849
00:30:44,559 --> 00:30:46,399
the last thing you want to you want to

850
00:30:46,399 --> 00:30:48,240
end up with is having your

851
00:30:48,240 --> 00:30:49,919
summer attackers compromising your

852
00:30:49,919 --> 00:30:51,919
absence infrastructure

853
00:30:51,919 --> 00:30:54,640
so just very important thing to keep in

854
00:30:54,640 --> 00:30:56,880
mind

855
00:30:57,679 --> 00:30:59,519
um you want to really leverage modern

856
00:30:59,519 --> 00:31:01,360
devops environments

857
00:31:01,360 --> 00:31:03,679
so this is not exhaustive it's just an

858
00:31:03,679 --> 00:31:05,760
examples of things you can use

859
00:31:05,760 --> 00:31:08,080
for example automated pull requests if

860
00:31:08,080 --> 00:31:09,440
you want to fix something you want to

861
00:31:09,440 --> 00:31:11,279
ask your developer to fix something

862
00:31:11,279 --> 00:31:13,840
you could just send them a pull request

863
00:31:13,840 --> 00:31:16,000
to fix it and that will make their life

864
00:31:16,000 --> 00:31:18,799
much much easier this is probably easier

865
00:31:18,799 --> 00:31:19,200
than

866
00:31:19,200 --> 00:31:21,600
it's done but just something to think

867
00:31:21,600 --> 00:31:23,840
about

868
00:31:23,919 --> 00:31:26,720
you want to really emphasize and

869
00:31:26,720 --> 00:31:28,080
encourage developers to

870
00:31:28,080 --> 00:31:29,919
use infrastructure as code and

871
00:31:29,919 --> 00:31:32,240
infrastructure is called

872
00:31:32,240 --> 00:31:34,320
refers to things like terraform

873
00:31:34,320 --> 00:31:35,919
hashicorp telephone

874
00:31:35,919 --> 00:31:38,640
example of these where you can use it to

875
00:31:38,640 --> 00:31:39,279
deploy

876
00:31:39,279 --> 00:31:42,480
and configuration changes and it helps

877
00:31:42,480 --> 00:31:43,519
you because

878
00:31:43,519 --> 00:31:46,799
you can have all the stuff in one

879
00:31:46,799 --> 00:31:50,320
file and so you can write

880
00:31:50,320 --> 00:31:53,519
checks security checks to go over

881
00:31:53,519 --> 00:31:57,120
specific things that might be

882
00:31:57,120 --> 00:31:59,519
my might cause a security problem so you

883
00:31:59,519 --> 00:32:01,120
can easily do that and you can ensure

884
00:32:01,120 --> 00:32:02,000
that

885
00:32:02,000 --> 00:32:03,840
all everything is tracked in the source

886
00:32:03,840 --> 00:32:05,760
code

887
00:32:05,760 --> 00:32:08,480
repository

888
00:32:09,120 --> 00:32:12,399
um one of the more main things you want

889
00:32:12,399 --> 00:32:13,039
to do

890
00:32:13,039 --> 00:32:15,760
as part of forming an apsec is develop a

891
00:32:15,760 --> 00:32:17,760
vulnerability management program

892
00:32:17,760 --> 00:32:19,360
and vulnerability management program is

893
00:32:19,360 --> 00:32:21,679
one of the key things and sometimes this

894
00:32:21,679 --> 00:32:23,679
forms under app 6 some other companies

895
00:32:23,679 --> 00:32:24,799
form it

896
00:32:24,799 --> 00:32:28,000
under different teams but the way modern

897
00:32:28,000 --> 00:32:30,240
orgs they they have one management under

898
00:32:30,240 --> 00:32:31,440
apsec

899
00:32:31,440 --> 00:32:33,519
so think about all the stuff we

900
00:32:33,519 --> 00:32:34,480
mentioned create

901
00:32:34,480 --> 00:32:36,880
uh as an inventory create some sort of

902
00:32:36,880 --> 00:32:38,720
repository of all the things that

903
00:32:38,720 --> 00:32:40,640
you want to know about especially when

904
00:32:40,640 --> 00:32:42,000
it comes to oss

905
00:32:42,000 --> 00:32:44,559
stuff it's it's very important for you

906
00:32:44,559 --> 00:32:47,039
to keep track of that

907
00:32:47,039 --> 00:32:50,000
because imagine all these dependencies

908
00:32:50,000 --> 00:32:51,440
of libraries

909
00:32:51,440 --> 00:32:53,600
that you get spoiled when you build an

910
00:32:53,600 --> 00:32:55,200
application and imagine one of them is

911
00:32:55,200 --> 00:32:56,799
just malicious

912
00:32:56,799 --> 00:32:58,720
um i gave a talk of black hat about that

913
00:32:58,720 --> 00:33:00,240
so check out

914
00:33:00,240 --> 00:33:04,240
the talk on youtube um it's about oss

915
00:33:04,240 --> 00:33:07,519
practical approach to finding immediate

916
00:33:07,519 --> 00:33:11,840
security issues at scale

917
00:33:12,000 --> 00:33:16,000
now the last thing is really try to

918
00:33:16,000 --> 00:33:18,320
measure and evaluate and it prioritizes

919
00:33:18,320 --> 00:33:20,080
your vulnerabilities it's impossible to

920
00:33:20,080 --> 00:33:22,000
fix all the vulnerabilities

921
00:33:22,000 --> 00:33:24,480
so you have to think about what are the

922
00:33:24,480 --> 00:33:25,919
most pressing

923
00:33:25,919 --> 00:33:27,519
issues that you need to get your

924
00:33:27,519 --> 00:33:29,440
developers to fix

925
00:33:29,440 --> 00:33:32,240
um and usually those affects the high

926
00:33:32,240 --> 00:33:32,640
risk

927
00:33:32,640 --> 00:33:35,120
apps and that's why you want to form

928
00:33:35,120 --> 00:33:35,760
some sort of

929
00:33:35,760 --> 00:33:38,240
identification of what are these risky

930
00:33:38,240 --> 00:33:39,919
assets in your organization would look

931
00:33:39,919 --> 00:33:42,159
like

932
00:33:42,240 --> 00:33:45,120
and briefly mention about this check out

933
00:33:45,120 --> 00:33:47,440
my talk about the

934
00:33:47,440 --> 00:33:49,120
dependency analysis and third party

935
00:33:49,120 --> 00:33:51,519
libraries this is a very important

936
00:33:51,519 --> 00:33:52,480
subject

937
00:33:52,480 --> 00:33:54,559
you can just ignore that especially with

938
00:33:54,559 --> 00:33:56,159
modern agile

939
00:33:56,159 --> 00:33:59,200
development where you have

940
00:33:59,200 --> 00:34:01,279
thousands of developers building

941
00:34:01,279 --> 00:34:02,960
thousands and millions of

942
00:34:02,960 --> 00:34:04,840
different libraries they pull into their

943
00:34:04,840 --> 00:34:06,880
application you need to have full

944
00:34:06,880 --> 00:34:09,840
visibility over that

945
00:34:11,280 --> 00:34:14,239
static and dynamic analysis some

946
00:34:14,239 --> 00:34:16,159
companies prefer to

947
00:34:16,159 --> 00:34:18,560
use third-party tooling because this is

948
00:34:18,560 --> 00:34:20,000
a really

949
00:34:20,000 --> 00:34:24,000
hard problem to solve and

950
00:34:24,000 --> 00:34:25,520
of course the hard problem to solve is

951
00:34:25,520 --> 00:34:27,280
because it there's a lot of false

952
00:34:27,280 --> 00:34:28,879
positives basically

953
00:34:28,879 --> 00:34:32,079
um so zest and dusts are

954
00:34:32,079 --> 00:34:35,440
the most common things people use to

955
00:34:35,440 --> 00:34:38,560
find identify anti-patterns

956
00:34:38,560 --> 00:34:40,639
or vulnerabilities in code static

957
00:34:40,639 --> 00:34:42,159
analysis looks at the actual code

958
00:34:42,159 --> 00:34:44,079
dynamic analysis is doing

959
00:34:44,079 --> 00:34:46,399
some sort of behavior tricking or maybe

960
00:34:46,399 --> 00:34:48,000
at run time when your application is

961
00:34:48,000 --> 00:34:48,800
running

962
00:34:48,800 --> 00:34:51,839
and so it detects things as the

963
00:34:51,839 --> 00:34:53,679
application is running

964
00:34:53,679 --> 00:34:55,760
there's a bunch of vendor tools i can't

965
00:34:55,760 --> 00:34:57,440
recommend any vendor tools here because

966
00:34:57,440 --> 00:34:58,079
not

967
00:34:58,079 --> 00:35:01,280
advertising talk but check out some open

968
00:35:01,280 --> 00:35:02,960
source stuff as well

969
00:35:02,960 --> 00:35:04,960
uh but i really like some grip for like

970
00:35:04,960 --> 00:35:06,240
sas stuff because it

971
00:35:06,240 --> 00:35:09,520
you can quickly write your own checking

972
00:35:09,520 --> 00:35:11,280
without having to think too much about

973
00:35:11,280 --> 00:35:14,000
how to do that

974
00:35:15,119 --> 00:35:18,400
you want to have a bug bounty program um

975
00:35:18,400 --> 00:35:23,520
this is uh started back in 2009 and 2010

976
00:35:23,520 --> 00:35:26,079
and um many companies big then after

977
00:35:26,079 --> 00:35:27,599
that started

978
00:35:27,599 --> 00:35:30,320
embracing this idea of bug bounty so the

979
00:35:30,320 --> 00:35:31,599
but if you're not familiar with bug

980
00:35:31,599 --> 00:35:32,960
bounty it's basically

981
00:35:32,960 --> 00:35:35,520
um you're exchanging bugs with money for

982
00:35:35,520 --> 00:35:36,640
develop for

983
00:35:36,640 --> 00:35:39,280
security researchers and it encourages

984
00:35:39,280 --> 00:35:41,040
the responsible disclosure

985
00:35:41,040 --> 00:35:43,200
so if the researcher found a bug in your

986
00:35:43,200 --> 00:35:45,119
organization

987
00:35:45,119 --> 00:35:47,040
they can report it to you they're not

988
00:35:47,040 --> 00:35:48,480
allowed to talk about it

989
00:35:48,480 --> 00:35:50,480
and then in exchange you actually give

990
00:35:50,480 --> 00:35:53,119
them a bounty reward

991
00:35:53,119 --> 00:35:54,960
and it really saves money saves you a

992
00:35:54,960 --> 00:35:56,960
lot of money because

993
00:35:56,960 --> 00:35:58,240
you don't have to do a lot of pen

994
00:35:58,240 --> 00:36:01,440
testing um and also

995
00:36:01,440 --> 00:36:03,680
it's breaches are more expensive if

996
00:36:03,680 --> 00:36:05,440
company gets breached it's it's very

997
00:36:05,440 --> 00:36:06,640
very expensive so

998
00:36:06,640 --> 00:36:07,920
the total amount of money you're paying

999
00:36:07,920 --> 00:36:09,680
for research is not

1000
00:36:09,680 --> 00:36:11,040
comparable to how much you're going to

1001
00:36:11,040 --> 00:36:14,079
pay for breaches and pen tests

1002
00:36:14,079 --> 00:36:15,599
most companies have actually bug bounty

1003
00:36:15,599 --> 00:36:17,760
program the most common

1004
00:36:17,760 --> 00:36:20,880
black platforms for

1005
00:36:20,880 --> 00:36:23,119
bug bounty is hacker one and back crowd

1006
00:36:23,119 --> 00:36:24,960
they actually do the first

1007
00:36:24,960 --> 00:36:27,839
level try edging

1008
00:36:28,720 --> 00:36:31,200
you want to create those tooling that

1009
00:36:31,200 --> 00:36:32,000
you have

1010
00:36:32,000 --> 00:36:33,680
you can help your developers to pave the

1011
00:36:33,680 --> 00:36:35,440
road and think about

1012
00:36:35,440 --> 00:36:38,640
tuning that commonly are used across all

1013
00:36:38,640 --> 00:36:39,599
the organization

1014
00:36:39,599 --> 00:36:41,520
or infrastructure is like you want to

1015
00:36:41,520 --> 00:36:43,359
have edge proxy right you can inject

1016
00:36:43,359 --> 00:36:45,040
everything into that each proxy from

1017
00:36:45,040 --> 00:36:47,119
tooling perspective scanning

1018
00:36:47,119 --> 00:36:49,680
web application firewalls you want to

1019
00:36:49,680 --> 00:36:50,480
have

1020
00:36:50,480 --> 00:36:53,359
really a pedro tool for authentication

1021
00:36:53,359 --> 00:36:55,040
and authorization because

1022
00:36:55,040 --> 00:36:56,480
you don't the last thing you want to do

1023
00:36:56,480 --> 00:36:58,240
is having too many authentication

1024
00:36:58,240 --> 00:36:59,599
systems laying around

1025
00:36:59,599 --> 00:37:02,000
and maybe some of them are not secure

1026
00:37:02,000 --> 00:37:04,240
enough

1027
00:37:06,240 --> 00:37:07,599
you want to create a security self

1028
00:37:07,599 --> 00:37:10,079
service and um

1029
00:37:10,079 --> 00:37:13,440
as i said scaling appsic program is is a

1030
00:37:13,440 --> 00:37:14,960
major challenge

1031
00:37:14,960 --> 00:37:18,079
and so the thing that will allow you to

1032
00:37:18,079 --> 00:37:19,760
scale upsick is really create

1033
00:37:19,760 --> 00:37:21,520
self-service that developers themselves

1034
00:37:21,520 --> 00:37:23,119
themselves can go

1035
00:37:23,119 --> 00:37:26,400
and uh

1036
00:37:26,400 --> 00:37:27,920
do the actual thing that you want them

1037
00:37:27,920 --> 00:37:29,760
to do without having to refer back to

1038
00:37:29,760 --> 00:37:30,560
you

1039
00:37:30,560 --> 00:37:32,640
and that can be a form of guidance or

1040
00:37:32,640 --> 00:37:33,680
tooling

1041
00:37:33,680 --> 00:37:37,760
or some sort of a dashboard

1042
00:37:37,760 --> 00:37:39,599
it also the nice thing about

1043
00:37:39,599 --> 00:37:41,680
self-service is actually identifies

1044
00:37:41,680 --> 00:37:44,400
outliers in your infrastructure so when

1045
00:37:44,400 --> 00:37:45,520
you actually provide

1046
00:37:45,520 --> 00:37:47,760
this self-service when developers reach

1047
00:37:47,760 --> 00:37:49,520
out to you that means

1048
00:37:49,520 --> 00:37:51,680
that specific guidance or service didn't

1049
00:37:51,680 --> 00:37:53,200
meet their expectation

1050
00:37:53,200 --> 00:37:56,640
and so that that means

1051
00:37:56,640 --> 00:37:58,240
you actually they are doing something

1052
00:37:58,240 --> 00:37:59,760
that unexpected

1053
00:37:59,760 --> 00:38:02,880
or they are derailing from the

1054
00:38:02,880 --> 00:38:05,440
actual page thing so now you can

1055
00:38:05,440 --> 00:38:06,880
identify all these things in your

1056
00:38:06,880 --> 00:38:08,000
infrastructure

1057
00:38:08,000 --> 00:38:11,440
and adapt accordingly

1058
00:38:12,160 --> 00:38:13,440
uh you want to create an on-call

1059
00:38:13,440 --> 00:38:15,760
scheduler and

1060
00:38:15,760 --> 00:38:17,440
you know somebody reports an issue on

1061
00:38:17,440 --> 00:38:20,240
bike crowd bike bounty or hacker one

1062
00:38:20,240 --> 00:38:22,160
in the middle of the night you need

1063
00:38:22,160 --> 00:38:24,160
someone to get into it

1064
00:38:24,160 --> 00:38:27,359
right so you want to form sort of

1065
00:38:27,359 --> 00:38:28,880
distribution

1066
00:38:28,880 --> 00:38:32,720
on the apsec team where rotation can

1067
00:38:32,720 --> 00:38:36,079
vary right like maybe you have one um

1068
00:38:36,079 --> 00:38:39,040
five or two or three members of the team

1069
00:38:39,040 --> 00:38:39,359
um

1070
00:38:39,359 --> 00:38:42,320
everyone every week you have one member

1071
00:38:42,320 --> 00:38:43,119
to do

1072
00:38:43,119 --> 00:38:46,160
on call rotation and so that person is

1073
00:38:46,160 --> 00:38:48,720
on call 24 hours seven days a week uh

1074
00:38:48,720 --> 00:38:49,920
that doesn't mean they have to work

1075
00:38:49,920 --> 00:38:51,200
seven days a week

1076
00:38:51,200 --> 00:38:53,359
but they just have to keep their phone

1077
00:38:53,359 --> 00:38:55,680
with them so in case something happened

1078
00:38:55,680 --> 00:38:58,640
they can get paged

1079
00:38:59,599 --> 00:39:01,359
um you want to actually create a

1080
00:39:01,359 --> 00:39:02,800
champion program and i'll go

1081
00:39:02,800 --> 00:39:04,240
super fast because we only have 10

1082
00:39:04,240 --> 00:39:06,720
minutes left um really security

1083
00:39:06,720 --> 00:39:09,040
champion allows you to scale security as

1084
00:39:09,040 --> 00:39:10,160
well

1085
00:39:10,160 --> 00:39:12,240
those champions basically act as a voice

1086
00:39:12,240 --> 00:39:14,000
of security and think about them as

1087
00:39:14,000 --> 00:39:16,640
people who are interested in security

1088
00:39:16,640 --> 00:39:18,240
but work with your developer

1089
00:39:18,240 --> 00:39:21,040
work as a software engineer so you can

1090
00:39:21,040 --> 00:39:21,920
nominate those

1091
00:39:21,920 --> 00:39:24,560
and teach them security and of course

1092
00:39:24,560 --> 00:39:26,000
those people be

1093
00:39:26,000 --> 00:39:28,480
the actual engineers who are interested

1094
00:39:28,480 --> 00:39:31,839
in learning more about security

1095
00:39:32,000 --> 00:39:33,680
um you know you want to connect with

1096
00:39:33,680 --> 00:39:35,359
others doing security um

1097
00:39:35,359 --> 00:39:38,240
this is you know by you know having you

1098
00:39:38,240 --> 00:39:39,280
now joining this

1099
00:39:39,280 --> 00:39:42,000
uh talk is basically sort of you

1100
00:39:42,000 --> 00:39:43,440
accomplish that you connect with other

1101
00:39:43,440 --> 00:39:46,400
people doing security

1102
00:39:46,720 --> 00:39:48,880
um you want to build a strong

1103
00:39:48,880 --> 00:39:50,400
relationship with developers i think we

1104
00:39:50,400 --> 00:39:52,720
briefly mentioned that about partnership

1105
00:39:52,720 --> 00:39:56,800
and so working um

1106
00:39:56,800 --> 00:39:58,400
working with infosec is kind of

1107
00:39:58,400 --> 00:40:00,400
inherently social activity

1108
00:40:00,400 --> 00:40:04,000
so you know it it really

1109
00:40:04,000 --> 00:40:06,319
like you wanna you wanna have a good

1110
00:40:06,319 --> 00:40:08,160
relationship with developers and so

1111
00:40:08,160 --> 00:40:11,680
you can get your asks delivered and also

1112
00:40:11,680 --> 00:40:13,839
you can have a good healthy

1113
00:40:13,839 --> 00:40:16,319
understanding from both sides on

1114
00:40:16,319 --> 00:40:19,599
when you discuss security problems

1115
00:40:19,599 --> 00:40:22,319
uh least privilege eddie like this tool

1116
00:40:22,319 --> 00:40:24,640
replicate developed by netflix

1117
00:40:24,640 --> 00:40:26,960
the reason i like this tool is because

1118
00:40:26,960 --> 00:40:29,680
it takes away permissions over time

1119
00:40:29,680 --> 00:40:33,440
so um you run it and over time it keeps

1120
00:40:33,440 --> 00:40:35,760
checking does this developer need this

1121
00:40:35,760 --> 00:40:36,560
permission

1122
00:40:36,560 --> 00:40:38,880
and it checks the logs and if not then

1123
00:40:38,880 --> 00:40:40,000
it takes it away

1124
00:40:40,000 --> 00:40:42,319
of course developers can return regain

1125
00:40:42,319 --> 00:40:44,160
those permissions but

1126
00:40:44,160 --> 00:40:45,920
you can achieve these privileges over

1127
00:40:45,920 --> 00:40:49,040
time by default

1128
00:40:49,520 --> 00:40:51,359
uh there are these are some existing

1129
00:40:51,359 --> 00:40:52,800
frameworks for uh

1130
00:40:52,800 --> 00:40:55,599
or maturity models for not necessarily

1131
00:40:55,599 --> 00:40:57,040
absent but like

1132
00:40:57,040 --> 00:40:59,839
very close to apsec that you can check

1133
00:40:59,839 --> 00:41:02,078
out

1134
00:41:02,480 --> 00:41:04,720
um now the question is like what type of

1135
00:41:04,720 --> 00:41:06,960
people you want to hire for aptik

1136
00:41:06,960 --> 00:41:08,800
of course people who can write and read

1137
00:41:08,800 --> 00:41:10,640
code this is very important because

1138
00:41:10,640 --> 00:41:12,720
those developers or those apps members

1139
00:41:12,720 --> 00:41:13,760
they're going to spend a lot of time

1140
00:41:13,760 --> 00:41:14,880
with developers

1141
00:41:14,880 --> 00:41:17,040
discussing security issues and

1142
00:41:17,040 --> 00:41:18,160
discussing code

1143
00:41:18,160 --> 00:41:20,480
problems so you want to know you want to

1144
00:41:20,480 --> 00:41:22,160
hire people who actually can write and

1145
00:41:22,160 --> 00:41:23,359
read code

1146
00:41:23,359 --> 00:41:27,040
um and remember hiring teams don't

1147
00:41:27,040 --> 00:41:28,480
really scale

1148
00:41:28,480 --> 00:41:30,000
but as i said automation and

1149
00:41:30,000 --> 00:41:32,160
self-service does so focus on those

1150
00:41:32,160 --> 00:41:35,520
two key things um and of course hire

1151
00:41:35,520 --> 00:41:36,560
people who can

1152
00:41:36,560 --> 00:41:39,760
embrace attackers mindset because

1153
00:41:39,760 --> 00:41:41,920
they you want those people to be

1154
00:41:41,920 --> 00:41:43,040
understanding how

1155
00:41:43,040 --> 00:41:45,440
specific attacks happen and so they can

1156
00:41:45,440 --> 00:41:47,280
better understand how to develop more

1157
00:41:47,280 --> 00:41:51,200
scanning or solutions for these problems

1158
00:41:52,079 --> 00:41:54,560
you want to train them teach them how to

1159
00:41:54,560 --> 00:41:55,119
be

1160
00:41:55,119 --> 00:41:58,560
effective effectively writing bugs

1161
00:41:58,560 --> 00:41:59,760
sorry reports and bugs and

1162
00:41:59,760 --> 00:42:02,640
documentations otherwise your findings

1163
00:42:02,640 --> 00:42:04,560
will be hard to sell

1164
00:42:04,560 --> 00:42:07,119
so you want to teach them how to do that

1165
00:42:07,119 --> 00:42:08,880
check out these trainings

1166
00:42:08,880 --> 00:42:10,880
very useful trainings sans offensive

1167
00:42:10,880 --> 00:42:12,720
security and black hat

1168
00:42:12,720 --> 00:42:14,960
there's a workshop tomorrow so make sure

1169
00:42:14,960 --> 00:42:16,640
you attend that as well

1170
00:42:16,640 --> 00:42:19,920
um and yeah those are

1171
00:42:19,920 --> 00:42:22,640
pretty good presentation uh trainings if

1172
00:42:22,640 --> 00:42:23,200
you

1173
00:42:23,200 --> 00:42:25,520
really want to send your absent team and

1174
00:42:25,520 --> 00:42:26,640
get them

1175
00:42:26,640 --> 00:42:30,079
to uplevel their security knowledge

1176
00:42:30,079 --> 00:42:32,400
um they you can have them attend

1177
00:42:32,400 --> 00:42:33,200
conferences

1178
00:42:33,200 --> 00:42:35,520
and um i mean the fact you're here

1179
00:42:35,520 --> 00:42:37,440
that's that's one conference um but

1180
00:42:37,440 --> 00:42:39,440
also check out like those other

1181
00:42:39,440 --> 00:42:41,200
conferences a lot of these conferences

1182
00:42:41,200 --> 00:42:41,839
are in us

1183
00:42:41,839 --> 00:42:44,319
but um remember like all these

1184
00:42:44,319 --> 00:42:45,760
conferences these days are

1185
00:42:45,760 --> 00:42:48,480
streamed live or the records are

1186
00:42:48,480 --> 00:42:51,359
actually on youtube

1187
00:42:51,839 --> 00:42:53,920
so what structure works well for modern

1188
00:42:53,920 --> 00:42:55,760
apsec i would say

1189
00:42:55,760 --> 00:42:58,480
there is no one answer i really like

1190
00:42:58,480 --> 00:43:00,079
this structure because it's

1191
00:43:00,079 --> 00:43:02,800
sort of forms into three separate

1192
00:43:02,800 --> 00:43:04,000
categories

1193
00:43:04,000 --> 00:43:05,680
uh you want to have the operational

1194
00:43:05,680 --> 00:43:08,000
stuff and that's maybe taken care of

1195
00:43:08,000 --> 00:43:10,640
by oncol and then you have the security

1196
00:43:10,640 --> 00:43:11,359
partnership

1197
00:43:11,359 --> 00:43:13,280
and those are the people who are driving

1198
00:43:13,280 --> 00:43:15,359
the holistic security improvements

1199
00:43:15,359 --> 00:43:16,880
to drive down risk and then you have the

1200
00:43:16,880 --> 00:43:18,240
automation team or the appsec

1201
00:43:18,240 --> 00:43:19,200
engineering

1202
00:43:19,200 --> 00:43:20,480
and those are the people who are doing

1203
00:43:20,480 --> 00:43:22,560
scanning and self-service and

1204
00:43:22,560 --> 00:43:25,440
creating inventories and stuff like that

1205
00:43:25,440 --> 00:43:26,800
i really recommend uh

1206
00:43:26,800 --> 00:43:28,400
you read scaling aptic and netflix by

1207
00:43:28,400 --> 00:43:29,839
asta singhal

1208
00:43:29,839 --> 00:43:32,960
um it's a pretty good

1209
00:43:32,960 --> 00:43:34,960
blog post that talks in details about

1210
00:43:34,960 --> 00:43:37,440
these things

1211
00:43:37,520 --> 00:43:40,240
um i'm gonna go quickly into matrix uh

1212
00:43:40,240 --> 00:43:42,480
because we only have five minutes left

1213
00:43:42,480 --> 00:43:45,920
um so uh you now all that's you did all

1214
00:43:45,920 --> 00:43:46,480
that stuff

1215
00:43:46,480 --> 00:43:48,640
now you wanna know how good are you

1216
00:43:48,640 --> 00:43:50,160
doing in terms of

1217
00:43:50,160 --> 00:43:52,560
matrix right so there are three primary

1218
00:43:52,560 --> 00:43:54,319
metrics technical operational and

1219
00:43:54,319 --> 00:43:55,599
executive

1220
00:43:55,599 --> 00:43:58,480
um before we even understand like what

1221
00:43:58,480 --> 00:43:59,520
metrics we

1222
00:43:59,520 --> 00:44:01,599
are going to work with in our process we

1223
00:44:01,599 --> 00:44:03,520
need to understand what basic flaw would

1224
00:44:03,520 --> 00:44:05,680
be work with the metrics so

1225
00:44:05,680 --> 00:44:07,599
as you can see here we must first

1226
00:44:07,599 --> 00:44:09,119
understand

1227
00:44:09,119 --> 00:44:11,200
that discover and define what our

1228
00:44:11,200 --> 00:44:12,720
metrics will be right

1229
00:44:12,720 --> 00:44:15,680
and then the second phase would be

1230
00:44:15,680 --> 00:44:17,839
acquisition of data

1231
00:44:17,839 --> 00:44:20,800
a good matrix is really good as far as

1232
00:44:20,800 --> 00:44:22,079
the quality of your data

1233
00:44:22,079 --> 00:44:23,440
is concerned and finally is the

1234
00:44:23,440 --> 00:44:26,480
evaluation and understanding of the data

1235
00:44:26,480 --> 00:44:28,480
some some sort of like technical metrics

1236
00:44:28,480 --> 00:44:30,000
you can look at is the number of bonds

1237
00:44:30,000 --> 00:44:31,280
found over time

1238
00:44:31,280 --> 00:44:34,560
the severity type of bonds you found

1239
00:44:34,560 --> 00:44:36,240
discovery methods

1240
00:44:36,240 --> 00:44:38,319
time to remediate again this stock

1241
00:44:38,319 --> 00:44:40,000
presentation will be shared with the

1242
00:44:40,000 --> 00:44:41,040
group so

1243
00:44:41,040 --> 00:44:43,119
if you haven't caught any of these

1244
00:44:43,119 --> 00:44:44,079
quickly then

1245
00:44:44,079 --> 00:44:46,000
um just remember we're going to get the

1246
00:44:46,000 --> 00:44:48,640
copy of the slides

1247
00:44:48,640 --> 00:44:50,240
you're going to collect those metrics

1248
00:44:50,240 --> 00:44:51,680
using tools and

1249
00:44:51,680 --> 00:44:54,000
calling in apis that will help you

1250
00:44:54,000 --> 00:44:55,839
automate the collection of those matrix

1251
00:44:55,839 --> 00:44:58,800
so you can put them all in one dashboard

1252
00:44:58,800 --> 00:45:01,440
the second one is the operational matrix

1253
00:45:01,440 --> 00:45:02,880
those are basically helps

1254
00:45:02,880 --> 00:45:05,680
the security org see patterns and

1255
00:45:05,680 --> 00:45:06,720
weaknesses in the

1256
00:45:06,720 --> 00:45:09,359
in the application security program and

1257
00:45:09,359 --> 00:45:11,040
it will also help you understand the

1258
00:45:11,040 --> 00:45:12,880
risks and trends

1259
00:45:12,880 --> 00:45:14,640
some sort of operation matrix you can

1260
00:45:14,640 --> 00:45:16,319
collect visibility for example how

1261
00:45:16,319 --> 00:45:19,040
complete is your testing coverage risks

1262
00:45:19,040 --> 00:45:20,480
which system have the highest number of

1263
00:45:20,480 --> 00:45:22,160
vulnerabilities and remediation and

1264
00:45:22,160 --> 00:45:24,079
improvements

1265
00:45:24,079 --> 00:45:26,319
executive metrics how the application

1266
00:45:26,319 --> 00:45:28,000
secure program improved security

1267
00:45:28,000 --> 00:45:30,319
risk posture overall those will be

1268
00:45:30,319 --> 00:45:31,760
actually important

1269
00:45:31,760 --> 00:45:34,240
for your executive or leadership team

1270
00:45:34,240 --> 00:45:36,240
because they really don't necessarily

1271
00:45:36,240 --> 00:45:38,560
care about specific vulnerabilities and

1272
00:45:38,560 --> 00:45:40,319
the details of your absolute technical

1273
00:45:40,319 --> 00:45:41,359
scanners

1274
00:45:41,359 --> 00:45:44,400
they just need to know those sort of

1275
00:45:44,400 --> 00:45:45,599
metrics

1276
00:45:45,599 --> 00:45:47,760
um and remember that you actually need

1277
00:45:47,760 --> 00:45:50,400
to present problems and offer solutions

1278
00:45:50,400 --> 00:45:51,760
and problems with that solutions are

1279
00:45:51,760 --> 00:45:55,040
problems nobody wants to deal with

1280
00:45:55,040 --> 00:45:57,200
uh can't in this talk uh without talking

1281
00:45:57,200 --> 00:45:58,880
about open source scaling up second

1282
00:45:58,880 --> 00:46:01,119
netflix until they are sick so

1283
00:46:01,119 --> 00:46:03,200
um try to open source things if you work

1284
00:46:03,200 --> 00:46:04,240
on open source stuff

1285
00:46:04,240 --> 00:46:07,040
it helps the community helps you on your

1286
00:46:07,040 --> 00:46:08,000
resume

1287
00:46:08,000 --> 00:46:09,599
um really check out this scaling app

1288
00:46:09,599 --> 00:46:12,000
stick on netflix viasta it's pretty good

1289
00:46:12,000 --> 00:46:14,400
blog post and last but not least is the

1290
00:46:14,400 --> 00:46:16,720
tl dr sake it's a

1291
00:46:16,720 --> 00:46:20,560
newsletter by uh clint my friend

1292
00:46:20,560 --> 00:46:23,839
um weekly uh talks about apps6 stuff

1293
00:46:23,839 --> 00:46:24,880
it's

1294
00:46:24,880 --> 00:46:28,640
you can check out this url and sign up

1295
00:46:28,640 --> 00:46:30,480
key takeaways uh take the journey as a

1296
00:46:30,480 --> 00:46:32,079
marathon not a sprint

1297
00:46:32,079 --> 00:46:34,560
try to automate everything focus on

1298
00:46:34,560 --> 00:46:36,240
security by design and killing by

1299
00:46:36,240 --> 00:46:37,200
classes

1300
00:46:37,200 --> 00:46:38,880
self-service and chime programs help you

1301
00:46:38,880 --> 00:46:41,520
scale tremendously

1302
00:46:41,520 --> 00:46:44,400
and uh yeah and uh i think we have three

1303
00:46:44,400 --> 00:46:45,599
minutes for questions

1304
00:46:45,599 --> 00:46:47,680
uh i'm not sure um if we have any

1305
00:46:47,680 --> 00:46:50,480
questions in the chat

1306
00:46:51,520 --> 00:46:54,720
uh thank you so much for the uh

1307
00:46:54,720 --> 00:46:57,520
for the talk it was really nice actually

1308
00:46:57,520 --> 00:46:58,880
uh

1309
00:46:58,880 --> 00:47:01,040
i can't see many questions in the chat

1310
00:47:01,040 --> 00:47:11,839
but uh

1311
00:47:17,839 --> 00:47:20,400
uh how does it really work all the talk

1312
00:47:20,400 --> 00:47:22,559
about shift left and the security stuff

1313
00:47:22,559 --> 00:47:24,240
because when we talk when we attend all

1314
00:47:24,240 --> 00:47:24,880
the sessions

1315
00:47:24,880 --> 00:47:27,760
netflix and big firms and application

1316
00:47:27,760 --> 00:47:28,480
production

1317
00:47:28,480 --> 00:47:30,880
um always mentioned netflix and others

1318
00:47:30,880 --> 00:47:32,880
as an example of how security is very

1319
00:47:32,880 --> 00:47:33,920
very very well

1320
00:47:33,920 --> 00:47:36,240
centered of everything in the

1321
00:47:36,240 --> 00:47:38,880
organization and application development

1322
00:47:38,880 --> 00:47:40,400
from experience do you think that all

1323
00:47:40,400 --> 00:47:41,920
what has been mentioned actually works

1324
00:47:41,920 --> 00:47:42,720
in real

1325
00:47:42,720 --> 00:47:46,160
life or it's only theoretical uh what

1326
00:47:46,160 --> 00:47:46,559
these

1327
00:47:46,559 --> 00:47:47,839
what this what do you think about that

1328
00:47:47,839 --> 00:47:49,680
because we always use this example

1329
00:47:49,680 --> 00:47:52,640
even us and enjoy them for example we

1330
00:47:52,640 --> 00:47:54,400
use netflix as an example but does it

1331
00:47:54,400 --> 00:47:55,920
really work

1332
00:47:55,920 --> 00:47:58,400
yeah that's a that's a good question so

1333
00:47:58,400 --> 00:47:58,960
all the

1334
00:47:58,960 --> 00:48:00,640
things i mentioned are actually not

1335
00:48:00,640 --> 00:48:03,040
theoretical they are actually 100

1336
00:48:03,040 --> 00:48:05,760
practical and if you think that

1337
00:48:05,760 --> 00:48:07,599
companies like big firms

1338
00:48:07,599 --> 00:48:09,200
uh not necessarily netflix but like

1339
00:48:09,200 --> 00:48:11,119
really big tech companies

1340
00:48:11,119 --> 00:48:14,640
um keeping up with the developers

1341
00:48:14,640 --> 00:48:18,000
and the code and the infrastructure is

1342
00:48:18,000 --> 00:48:19,760
is a major challenge right and that's

1343
00:48:19,760 --> 00:48:21,200
not a secret thing it's

1344
00:48:21,200 --> 00:48:23,760
it's a known thing but everything i

1345
00:48:23,760 --> 00:48:24,480
mentioned

1346
00:48:24,480 --> 00:48:27,760
is really boils down to how much of that

1347
00:48:27,760 --> 00:48:29,119
stuff is gonna help you

1348
00:48:29,119 --> 00:48:32,240
reduce the risk overall and

1349
00:48:32,240 --> 00:48:34,400
if you have a company that you want to

1350
00:48:34,400 --> 00:48:35,599
implement

1351
00:48:35,599 --> 00:48:39,040
security uh apsec program or even

1352
00:48:39,040 --> 00:48:42,000
having just some security practitioners

1353
00:48:42,000 --> 00:48:43,920
those are the first steps

1354
00:48:43,920 --> 00:48:46,839
for you to be to build a successful

1355
00:48:46,839 --> 00:48:49,359
program and

1356
00:48:49,359 --> 00:48:51,280
are those the only things of course not

1357
00:48:51,280 --> 00:48:53,680
um i mean we and netflix like do a lot

1358
00:48:53,680 --> 00:48:55,040
of other things right

1359
00:48:55,040 --> 00:48:57,280
this is just part of the infrastructure

1360
00:48:57,280 --> 00:48:59,200
or part of the puzzle

1361
00:48:59,200 --> 00:49:00,640
but if you think about it from an

1362
00:49:00,640 --> 00:49:02,800
overall perspective

1363
00:49:02,800 --> 00:49:05,200
your your end goal is really to reduce

1364
00:49:05,200 --> 00:49:05,920
the risk

1365
00:49:05,920 --> 00:49:08,720
and it varies from company to company

1366
00:49:08,720 --> 00:49:09,440
those

1367
00:49:09,440 --> 00:49:11,119
things might not work for regulated

1368
00:49:11,119 --> 00:49:12,480
industry like banks

1369
00:49:12,480 --> 00:49:15,280
but it could work very well for startups

1370
00:49:15,280 --> 00:49:16,160
maybe

1371
00:49:16,160 --> 00:49:19,920
or two companies that really embrace the

1372
00:49:19,920 --> 00:49:23,040
um the idea of uh having both security

1373
00:49:23,040 --> 00:49:24,160
and developers

1374
00:49:24,160 --> 00:49:26,000
partnering together to improve security

1375
00:49:26,000 --> 00:49:27,280
overall

1376
00:49:27,280 --> 00:49:29,200
um so i don't know if that answers your

1377
00:49:29,200 --> 00:49:30,960
question yes it does

1378
00:49:30,960 --> 00:49:34,240
it happens yeah it works yeah absolutely

1379
00:49:34,240 --> 00:49:36,880
one hundred percent

1380
00:49:36,880 --> 00:49:39,440
thank you thank you i have a question

1381
00:49:39,440 --> 00:49:39,920
about

1382
00:49:39,920 --> 00:49:43,200
it yeah traditionally in traditional

1383
00:49:43,200 --> 00:49:44,480
arts and programs

1384
00:49:44,480 --> 00:49:46,960
the nutrition testing used to be a gate

1385
00:49:46,960 --> 00:49:48,079
essential state

1386
00:49:48,079 --> 00:49:49,680
before releasing the application to the

1387
00:49:49,680 --> 00:49:51,280
next step going live with the

1388
00:49:51,280 --> 00:49:52,319
application

1389
00:49:52,319 --> 00:49:54,000
now how do you see penetration testing

1390
00:49:54,000 --> 00:49:56,079
in modern that's important

1391
00:49:56,079 --> 00:49:59,359
do it do do anything it's gonna

1392
00:49:59,359 --> 00:50:02,000
it can still be an acquired step or it's

1393
00:50:02,000 --> 00:50:03,359
step

1394
00:50:03,359 --> 00:50:07,680
for testing or it's gonna be actually

1395
00:50:07,680 --> 00:50:10,880
yeah they see that traditional dentist

1396
00:50:10,880 --> 00:50:11,599
will die

1397
00:50:11,599 --> 00:50:14,559
in the future should not be there what

1398
00:50:14,559 --> 00:50:16,000
what's your take on that

1399
00:50:16,000 --> 00:50:19,359
yeah yeah just actually from

1400
00:50:19,359 --> 00:50:22,400
specialists yeah i think this is a this

1401
00:50:22,400 --> 00:50:23,599
is actually a great question

1402
00:50:23,599 --> 00:50:26,000
and if you think about like modern apsec

1403
00:50:26,000 --> 00:50:27,839
or modern modern infrastructures in

1404
00:50:27,839 --> 00:50:28,800
general

1405
00:50:28,800 --> 00:50:31,520
there has been a lot of shift towards

1406
00:50:31,520 --> 00:50:32,880
modern frameworks

1407
00:50:32,880 --> 00:50:36,240
that have security by default right so

1408
00:50:36,240 --> 00:50:38,640
a lot of companies for example use

1409
00:50:38,640 --> 00:50:40,160
django or they use

1410
00:50:40,160 --> 00:50:43,280
um spring framework right

1411
00:50:43,280 --> 00:50:46,000
and usually those frameworks come with a

1412
00:50:46,000 --> 00:50:46,960
lot of

1413
00:50:46,960 --> 00:50:49,760
security built in in these frameworks

1414
00:50:49,760 --> 00:50:50,319
that will

1415
00:50:50,319 --> 00:50:53,920
unlikely that um something could go

1416
00:50:53,920 --> 00:50:54,319
wrong

1417
00:50:54,319 --> 00:50:55,760
right so that's the first thing so there

1418
00:50:55,760 --> 00:50:57,520
has been a lot of shift towards

1419
00:50:57,520 --> 00:51:01,040
those frameworks the second thing is

1420
00:51:01,040 --> 00:51:03,440
there is a lot of companies there there

1421
00:51:03,440 --> 00:51:04,559
are a lot of companies

1422
00:51:04,559 --> 00:51:07,119
are doing bug bounty today right so

1423
00:51:07,119 --> 00:51:08,000
although

1424
00:51:08,000 --> 00:51:10,480
this is happens after the application

1425
00:51:10,480 --> 00:51:11,520
gets out of

1426
00:51:11,520 --> 00:51:14,960
out of gate or out of the door

1427
00:51:14,960 --> 00:51:17,680
you still have researchers finding those

1428
00:51:17,680 --> 00:51:18,160
things

1429
00:51:18,160 --> 00:51:20,640
in exchange for reward and if you think

1430
00:51:20,640 --> 00:51:22,240
about pen testing pen testing is not

1431
00:51:22,240 --> 00:51:23,520
cheap right so

1432
00:51:23,520 --> 00:51:25,440
if you have to do pen tests for each

1433
00:51:25,440 --> 00:51:26,720
individual app

1434
00:51:26,720 --> 00:51:28,160
it probably going to cost you a lot of

1435
00:51:28,160 --> 00:51:30,240
money versus having a bug monthly

1436
00:51:30,240 --> 00:51:31,040
program

1437
00:51:31,040 --> 00:51:33,599
where you probably end up paying way

1438
00:51:33,599 --> 00:51:34,160
less

1439
00:51:34,160 --> 00:51:36,800
amount of money over time and they

1440
00:51:36,800 --> 00:51:38,559
actually provide you with good quality

1441
00:51:38,559 --> 00:51:40,319
reports

1442
00:51:40,319 --> 00:51:43,040
so the way i think about it is if you're

1443
00:51:43,040 --> 00:51:43,839
really

1444
00:51:43,839 --> 00:51:47,040
actually doing shift lift and

1445
00:51:47,040 --> 00:51:50,000
using modern frameworks i would say

1446
00:51:50,000 --> 00:51:51,760
pentest can come

1447
00:51:51,760 --> 00:51:55,520
only for really very high risky assets

1448
00:51:55,520 --> 00:51:58,720
for the assets that you you can't just

1449
00:51:58,720 --> 00:52:00,319
jeopardize security for those assets

1450
00:52:00,319 --> 00:52:01,520
because if it happens

1451
00:52:01,520 --> 00:52:05,200
the impact for the risk is very high

1452
00:52:05,200 --> 00:52:08,720
so that i think again there's no right

1453
00:52:08,720 --> 00:52:09,839
or wrong answer but

1454
00:52:09,839 --> 00:52:12,559
i think my from my perspective pentest

1455
00:52:12,559 --> 00:52:14,720
is still a requirement

1456
00:52:14,720 --> 00:52:17,280
but it all depends on your organization

1457
00:52:17,280 --> 00:52:19,680
if you're just doing agile development

1458
00:52:19,680 --> 00:52:22,640
with no frameworks in mind you're doing

1459
00:52:22,640 --> 00:52:23,920
everything internally

1460
00:52:23,920 --> 00:52:25,440
and you don't have any sort of shift

1461
00:52:25,440 --> 00:52:27,280
lift approaches you don't you don't have

1462
00:52:27,280 --> 00:52:28,880
like maybe security team

1463
00:52:28,880 --> 00:52:30,480
yeah i would say probably pen test is a

1464
00:52:30,480 --> 00:52:32,319
requirement for you

1465
00:52:32,319 --> 00:52:34,160
but if you have a good security team and

1466
00:52:34,160 --> 00:52:35,839
you have you're shifting left

1467
00:52:35,839 --> 00:52:37,680
and you have a lot of scanners uh that

1468
00:52:37,680 --> 00:52:39,760
detects long low hanging fruits

1469
00:52:39,760 --> 00:52:42,319
and you have a good bug bounty program

1470
00:52:42,319 --> 00:52:44,400
you just need pen tests for

1471
00:52:44,400 --> 00:52:47,839
the high risk assets

1472
00:52:48,480 --> 00:52:51,599
thank allah and i have a question

1473
00:52:51,599 --> 00:52:55,200
from beyond highly out what are the most

1474
00:52:55,200 --> 00:52:57,520
recommended frameworks and standards to

1475
00:52:57,520 --> 00:52:59,839
secure apis

1476
00:52:59,839 --> 00:53:04,000
securing apis yes um

1477
00:53:04,000 --> 00:53:06,000
yeah most recommended frameworks

1478
00:53:06,000 --> 00:53:07,359
understand

1479
00:53:07,359 --> 00:53:10,319
yeah so uh there is a lot of references

1480
00:53:10,319 --> 00:53:11,359
on owasp

1481
00:53:11,359 --> 00:53:14,400
for securing apis so you can check out

1482
00:53:14,400 --> 00:53:18,000
the wasp api security recommendations

1483
00:53:18,000 --> 00:53:20,240
um it all depends on how you're going to

1484
00:53:20,240 --> 00:53:21,440
structure the api

1485
00:53:21,440 --> 00:53:25,359
if it's rest api grpc or something else

1486
00:53:25,359 --> 00:53:29,119
but typically the things that

1487
00:53:29,119 --> 00:53:32,640
really important for any api

1488
00:53:32,640 --> 00:53:35,200
is make sure that it's it's using tls

1489
00:53:35,200 --> 00:53:36,880
https

1490
00:53:36,880 --> 00:53:39,280
and make sure that it has some sort of

1491
00:53:39,280 --> 00:53:40,800
authentication

1492
00:53:40,800 --> 00:53:45,119
and also authorization and if this apis

1493
00:53:45,119 --> 00:53:47,200
requires that another service has to

1494
00:53:47,200 --> 00:53:48,559
talk to this service

1495
00:53:48,559 --> 00:53:50,640
then make sure that you're creating some

1496
00:53:50,640 --> 00:53:52,720
sort of mutual tls connection

1497
00:53:52,720 --> 00:53:54,240
um of course there's a bunch of other

1498
00:53:54,240 --> 00:53:57,040
things you can do like wasp top 10

1499
00:53:57,040 --> 00:53:58,720
to make sure that there's no xss there's

1500
00:53:58,720 --> 00:54:00,160
no ccr of issues no

1501
00:54:00,160 --> 00:54:04,079
there's no ssr of issues um so there's

1502
00:54:04,079 --> 00:54:05,359
there's a lot of things that can be done

1503
00:54:05,359 --> 00:54:07,599
on the api side but those are most of

1504
00:54:07,599 --> 00:54:09,200
the common ones that we

1505
00:54:09,200 --> 00:54:12,319
implement yeah

1506
00:54:12,319 --> 00:54:14,240
maybe api management tools also

1507
00:54:14,240 --> 00:54:15,359
platforms

1508
00:54:15,359 --> 00:54:18,960
can also help you meant to to manage all

1509
00:54:18,960 --> 00:54:20,400
the apis in one platform

1510
00:54:20,400 --> 00:54:24,079
and do some level of security there so

1511
00:54:24,079 --> 00:54:26,800
everything just managed them yeah fast

1512
00:54:26,800 --> 00:54:28,559
api

1513
00:54:28,559 --> 00:54:34,319
management i have lost the question

1514
00:54:34,319 --> 00:54:36,480
i noticed i noticed there is a gap

1515
00:54:36,480 --> 00:54:37,359
between

1516
00:54:37,359 --> 00:54:40,079
developers and secure and security

1517
00:54:40,079 --> 00:54:41,040
engineers

1518
00:54:41,040 --> 00:54:43,040
usually security engineers don't know

1519
00:54:43,040 --> 00:54:44,160
development

1520
00:54:44,160 --> 00:54:47,280
and developers don't know security so

1521
00:54:47,280 --> 00:54:50,000
this actually creates lots of problem in

1522
00:54:50,000 --> 00:54:52,000
securing your application making sure

1523
00:54:52,000 --> 00:54:55,280
that you know uh in shifting left this

1524
00:54:55,280 --> 00:54:55,839
is

1525
00:54:55,839 --> 00:54:59,280
crucial actually so how can we

1526
00:54:59,280 --> 00:55:01,680
like maybe cultural issues sometimes in

1527
00:55:01,680 --> 00:55:03,119
the organization

1528
00:55:03,119 --> 00:55:05,920
to like you you don't want to get it's

1529
00:55:05,920 --> 00:55:07,760
not your business to get into my code

1530
00:55:07,760 --> 00:55:08,640
it's not your

1531
00:55:08,640 --> 00:55:10,880
security is my business i don't know

1532
00:55:10,880 --> 00:55:12,160
it's complicated

1533
00:55:12,160 --> 00:55:14,480
yeah yeah i know i i totally agree with

1534
00:55:14,480 --> 00:55:15,440
you actually i

1535
00:55:15,440 --> 00:55:18,160
uh i think this is a very important um

1536
00:55:18,160 --> 00:55:19,599
thing to highlight is

1537
00:55:19,599 --> 00:55:22,640
when i mentioned uh about the

1538
00:55:22,640 --> 00:55:25,920
um the the the shift lift approach

1539
00:55:25,920 --> 00:55:28,480
and you want to train your developers

1540
00:55:28,480 --> 00:55:29,920
right you don't want them to be security

1541
00:55:29,920 --> 00:55:31,119
experts but you want to train them

1542
00:55:31,119 --> 00:55:33,119
enough that they understand security

1543
00:55:33,119 --> 00:55:35,680
but all that stuff cannot uh be

1544
00:55:35,680 --> 00:55:37,599
encompassed without having

1545
00:55:37,599 --> 00:55:40,400
a partnership approach um the

1546
00:55:40,400 --> 00:55:42,160
partnership approach is the key right

1547
00:55:42,160 --> 00:55:43,920
because as you can as you said right

1548
00:55:43,920 --> 00:55:45,920
there is a disconnect between developers

1549
00:55:45,920 --> 00:55:46,880
and

1550
00:55:46,880 --> 00:55:50,160
uh the uh the security engineers

1551
00:55:50,160 --> 00:55:52,160
uh because they don't necessarily have

1552
00:55:52,160 --> 00:55:54,240
this partnership approach right

1553
00:55:54,240 --> 00:55:55,760
if you have a partnership approach you

1554
00:55:55,760 --> 00:55:57,040
build good relationship with your

1555
00:55:57,040 --> 00:55:58,160
developers

1556
00:55:58,160 --> 00:56:01,040
then it it comes naturally that your

1557
00:56:01,040 --> 00:56:02,799
developer will listen to you

1558
00:56:02,799 --> 00:56:06,000
and they will actually try to

1559
00:56:06,000 --> 00:56:07,440
not just listen to you but help you

1560
00:56:07,440 --> 00:56:09,520
improve security they might have other

1561
00:56:09,520 --> 00:56:10,799
ideas right that

1562
00:56:10,799 --> 00:56:12,319
will improve overall security for the

1563
00:56:12,319 --> 00:56:15,040
company so it's very important that

1564
00:56:15,040 --> 00:56:16,799
both should work together they should

1565
00:56:16,799 --> 00:56:18,960
talk more and

1566
00:56:18,960 --> 00:56:21,760
they both should understand like

1567
00:56:21,760 --> 00:56:23,760
developers should understand security

1568
00:56:23,760 --> 00:56:25,280
but you don't want them to be security

1569
00:56:25,280 --> 00:56:27,520
experts and of course giving them the

1570
00:56:27,520 --> 00:56:30,319
right tuning and enable them to have

1571
00:56:30,319 --> 00:56:33,599
the right tooling to

1572
00:56:33,599 --> 00:56:37,359
build security yeah

1573
00:56:37,359 --> 00:56:40,880
perfect yes we are wrapping up but we

1574
00:56:40,880 --> 00:56:43,119
have two questions the first one

1575
00:56:43,119 --> 00:56:46,240
from nadim how would one go about

1576
00:56:46,240 --> 00:56:48,079
remediating an incomplete asset

1577
00:56:48,079 --> 00:56:49,440
inventory

1578
00:56:49,440 --> 00:56:51,599
and keeping gaps to the minimum to a

1579
00:56:51,599 --> 00:56:53,680
minimum that in that regard

1580
00:56:53,680 --> 00:56:56,960
and the second question do we need to

1581
00:56:56,960 --> 00:56:57,760
have output

1582
00:56:57,760 --> 00:57:00,799
encoding when using apis to prevent from

1583
00:57:00,799 --> 00:57:03,040
crosstalk scripting noting that apis are

1584
00:57:03,040 --> 00:57:04,640
used in web mobile

1585
00:57:04,640 --> 00:57:07,920
and tv apps yes um

1586
00:57:07,920 --> 00:57:09,920
so so the first question is the about

1587
00:57:09,920 --> 00:57:11,119
the assets

1588
00:57:11,119 --> 00:57:13,680
um this is a major challenge and i i

1589
00:57:13,680 --> 00:57:15,359
think i briefly mentioned the slides

1590
00:57:15,359 --> 00:57:18,400
that you want to prioritize your things

1591
00:57:18,400 --> 00:57:19,680
that you want to fix right you have an

1592
00:57:19,680 --> 00:57:21,760
asset inventory a bunch of bugs right

1593
00:57:21,760 --> 00:57:24,160
or a bunch of security issues how would

1594
00:57:24,160 --> 00:57:26,079
you go about that

1595
00:57:26,079 --> 00:57:29,280
so i i actually shared a lot of details

1596
00:57:29,280 --> 00:57:30,960
in my black hat talk

1597
00:57:30,960 --> 00:57:34,559
but if you want just the tldr

1598
00:57:34,559 --> 00:57:37,200
try to create some sort of triaging

1599
00:57:37,200 --> 00:57:38,240
mechanism

1600
00:57:38,240 --> 00:57:39,760
this stretching mechanism takes into

1601
00:57:39,760 --> 00:57:41,920
consideration things like

1602
00:57:41,920 --> 00:57:44,720
what is what is the riskiest assets what

1603
00:57:44,720 --> 00:57:46,079
are the riskiest issues

1604
00:57:46,079 --> 00:57:48,559
affecting my app meaning like what is

1605
00:57:48,559 --> 00:57:50,640
the cbs score for those things

1606
00:57:50,640 --> 00:57:54,000
and is the uh application that is being

1607
00:57:54,000 --> 00:57:54,559
impacted

1608
00:57:54,559 --> 00:57:57,359
actually is the security issue actually

1609
00:57:57,359 --> 00:57:59,920
uh can be compromised from outside

1610
00:57:59,920 --> 00:58:02,960
or um can be affected by like actual

1611
00:58:02,960 --> 00:58:04,400
attackers from outside

1612
00:58:04,400 --> 00:58:06,240
so you have to kind of create some sort

1613
00:58:06,240 --> 00:58:08,160
of prioritization strategy

1614
00:58:08,160 --> 00:58:10,400
that will help you remediate those again

1615
00:58:10,400 --> 00:58:11,680
you'll never be able to remediate

1616
00:58:11,680 --> 00:58:12,319
everything

1617
00:58:12,319 --> 00:58:13,680
you just need to prioritize so that's

1618
00:58:13,680 --> 00:58:15,520
that's the first question the second

1619
00:58:15,520 --> 00:58:17,359
question is the output encoding

1620
00:58:17,359 --> 00:58:20,319
uh yes you need to do that because

1621
00:58:20,319 --> 00:58:20,880
actually

1622
00:58:20,880 --> 00:58:24,000
in web views in ios and android you can

1623
00:58:24,000 --> 00:58:25,200
still have xss

1624
00:58:25,200 --> 00:58:28,480
issues um i gave presentation back in

1625
00:58:28,480 --> 00:58:30,400
2011 about

1626
00:58:30,400 --> 00:58:33,200
having an xss in android and ios using

1627
00:58:33,200 --> 00:58:34,400
web views

1628
00:58:34,400 --> 00:58:37,359
so um yes you still need to do output

1629
00:58:37,359 --> 00:58:38,480
encoding

1630
00:58:38,480 --> 00:58:40,480
and uh appropriately also doing

1631
00:58:40,480 --> 00:58:41,920
sanitization on the input so you don't

1632
00:58:41,920 --> 00:58:43,119
have to worry about this

1633
00:58:43,119 --> 00:58:45,440
but yes output encoding is is important

1634
00:58:45,440 --> 00:58:46,559
for tv ui

1635
00:58:46,559 --> 00:58:51,839
and the mobile webview stuff

1636
00:58:54,480 --> 00:58:58,400
okay great i think um

1637
00:58:58,640 --> 00:59:01,359
awesome uh thank you so much thank you

1638
00:59:01,359 --> 00:59:02,400
so much allah

1639
00:59:02,400 --> 00:59:05,280
this was really uh very insightful talk

1640
00:59:05,280 --> 00:59:06,000
from you and

1641
00:59:06,000 --> 00:59:08,720
um and really well coherent about that

1642
00:59:08,720 --> 00:59:09,599
security

1643
00:59:09,599 --> 00:59:12,160
and um and we had really a very

1644
00:59:12,160 --> 00:59:12,799
interesting

1645
00:59:12,799 --> 00:59:14,960
audience with us we had pleasure having

1646
00:59:14,960 --> 00:59:16,400
you with us hope you will see you in

1647
00:59:16,400 --> 00:59:16,960
amman

1648
00:59:16,960 --> 00:59:19,119
soon yeah thank you for having me

1649
00:59:19,119 --> 00:59:20,400
appreciate it yes

1650
00:59:20,400 --> 00:59:23,119
we are so happy thank you so much thank

1651
00:59:23,119 --> 00:59:24,559
you

1652
00:59:24,559 --> 00:59:27,680
thank you so guys um the next session

1653
00:59:27,680 --> 00:59:29,680
with mazen will start in five minutes

1654
00:59:29,680 --> 00:59:31,280
let's just have a small break

1655
00:59:31,280 --> 00:59:34,400
and we will we'll stay we will remain

1656
00:59:34,400 --> 00:59:36,160
online if you want to stay we are still

1657
00:59:36,160 --> 00:59:36,640
here

1658
00:59:36,640 --> 00:59:40,160
and madison will join us in a bit we'll

1659
00:59:40,160 --> 00:59:41,760
talk about terraforms

1660
00:59:41,760 --> 00:59:47,839
hi mazan

1661
00:59:49,119 --> 00:59:52,480
yes uh so let's just uh give everyone

1662
00:59:52,480 --> 00:59:56,160
the break five minutes break yes

1663
00:59:56,160 --> 00:59:59,279
few minutes and also

1664
01:00:12,839 --> 01:00:15,839
okay

1665
01:04:21,280 --> 01:04:24,400
okay so we're back um

1666
01:04:24,400 --> 01:04:26,799
good poison everywhere also for everyone

1667
01:04:26,799 --> 01:04:28,319
wants to join

1668
01:04:28,319 --> 01:04:31,119
uh mazen we will make you as presenter

1669
01:04:31,119 --> 01:04:33,359
now

1670
01:04:33,520 --> 01:04:41,839
all right

1671
01:04:47,280 --> 01:04:49,200
we are very glad that you are with us

1672
01:04:49,200 --> 01:04:50,880
today in this talk

1673
01:04:50,880 --> 01:04:54,640
um you can start first as if you like to

1674
01:04:54,640 --> 01:04:57,680
by introducing yourself um and also

1675
01:04:57,680 --> 01:04:58,160
speaking

1676
01:04:58,160 --> 01:04:59,760
english and in arabic as you like but we

1677
01:04:59,760 --> 01:05:01,359
have um

1678
01:05:01,359 --> 01:05:03,920
english speakers in english only

1679
01:05:03,920 --> 01:05:05,680
speakers in the audience i can see on

1680
01:05:05,680 --> 01:05:07,280
the snd list

1681
01:05:07,280 --> 01:05:09,200
so please you can yes you can start

1682
01:05:09,200 --> 01:05:10,720
we're we are really happy to have you

1683
01:05:10,720 --> 01:05:12,000
with us and i'm sure

1684
01:05:12,000 --> 01:05:13,680
um you will cover a very interesting

1685
01:05:13,680 --> 01:05:15,680
topic a very hot topic about the

1686
01:05:15,680 --> 01:05:18,480
terraforms and

1687
01:05:18,480 --> 01:05:20,400
not only there are forms attacking them

1688
01:05:20,400 --> 01:05:21,839
so it will be really interesting and

1689
01:05:21,839 --> 01:05:22,240
it's

1690
01:05:22,240 --> 01:05:24,880
also emerging in jordan so it would be

1691
01:05:24,880 --> 01:05:25,359
very

1692
01:05:25,359 --> 01:05:27,200
uh fruitful and thoughtful for you to

1693
01:05:27,200 --> 01:05:29,520
add to talk to us about it

1694
01:05:29,520 --> 01:05:32,559
thank you so much and please feel free

1695
01:05:32,559 --> 01:05:34,720
to start

1696
01:05:34,720 --> 01:05:36,319
thank you very much i'm really glad to

1697
01:05:36,319 --> 01:05:38,000
be here

1698
01:05:38,000 --> 01:05:40,640
uh by the way do you think uh we should

1699
01:05:40,640 --> 01:05:41,520
uh have the

1700
01:05:41,520 --> 01:05:44,319
session in english instead of arabic i

1701
01:05:44,319 --> 01:05:45,760
thought to have it in arabic

1702
01:05:45,760 --> 01:05:50,000
for essence as you like i'm trying

1703
01:05:50,000 --> 01:05:53,440
i'm looking at that in this list

1704
01:05:54,559 --> 01:05:58,079
more than 50.

1705
01:05:58,559 --> 01:06:00,559
yes no no we have english speakers there

1706
01:06:00,559 --> 01:06:02,559
are many so

1707
01:06:02,559 --> 01:06:05,680
only okay it's fine like uh

1708
01:06:05,680 --> 01:06:07,520
i think we can have it in english then

1709
01:06:07,520 --> 01:06:09,520
yes yes

1710
01:06:09,520 --> 01:06:11,280
for the old attendees if you if anything

1711
01:06:11,280 --> 01:06:13,200
is not clear please let us know

1712
01:06:13,200 --> 01:06:15,359
and you can ask questions the questions

1713
01:06:15,359 --> 01:06:17,359
tab or the chat we will see it and we'll

1714
01:06:17,359 --> 01:06:18,559
be

1715
01:06:18,559 --> 01:06:21,359
following on it

1716
01:06:22,160 --> 01:06:33,839
for sure just one second

1717
01:06:41,280 --> 01:06:44,400
so yeah attacking terraform environments

1718
01:06:44,400 --> 01:06:46,079
thank you everyone for tuning in today

1719
01:06:46,079 --> 01:06:48,000
to do today's talk

1720
01:06:48,000 --> 01:06:51,039
today i have a really interesting topic

1721
01:06:51,039 --> 01:06:51,440
to

1722
01:06:51,440 --> 01:06:53,760
talk about it's about attacking

1723
01:06:53,760 --> 01:06:54,960
terraform

1724
01:06:54,960 --> 01:06:57,200
how we can approach a company that is

1725
01:06:57,200 --> 01:06:59,119
using terraform and how we can exploit

1726
01:06:59,119 --> 01:07:00,720
her from instances

1727
01:07:00,720 --> 01:07:03,599
in our favor uh it would be a technical

1728
01:07:03,599 --> 01:07:04,480
topic

1729
01:07:04,480 --> 01:07:07,520
i would cover uh

1730
01:07:07,520 --> 01:07:09,920
everything related to terraform and how

1731
01:07:09,920 --> 01:07:10,799
we can

1732
01:07:10,799 --> 01:07:14,160
exploit it and how we can use it

1733
01:07:14,160 --> 01:07:16,000
in compromising the infrastructure of a

1734
01:07:16,000 --> 01:07:18,480
company with real world

1735
01:07:18,480 --> 01:07:22,240
examples and scenarios i'm excited so

1736
01:07:22,240 --> 01:07:28,400
let's start

1737
01:07:28,400 --> 01:07:31,520
before we start uh a bit about me

1738
01:07:31,520 --> 01:07:33,839
i'm mad ahmed i'm an application

1739
01:07:33,839 --> 01:07:36,559
security and offensive security engineer

1740
01:07:36,559 --> 01:07:39,599
i also founded 400 io the

1741
01:07:39,599 --> 01:07:43,280
next generation continuous security

1742
01:07:43,280 --> 01:07:46,319
platform for assets discovery and the

1743
01:07:46,319 --> 01:07:49,039
attack surface

1744
01:07:49,039 --> 01:07:51,280
and also i am a conditional quantity

1745
01:07:51,280 --> 01:07:52,240
hunter i

1746
01:07:52,240 --> 01:07:54,960
was acknowledged before for by facebook

1747
01:07:54,960 --> 01:07:55,599
twitter

1748
01:07:55,599 --> 01:07:58,880
linkedin zoom and many more

1749
01:07:58,880 --> 01:08:02,160
and i'm in love with cloud security so

1750
01:08:02,160 --> 01:08:05,359
security automation with sick ops but

1751
01:08:05,359 --> 01:08:09,119
anything that is related to cloud is uh

1752
01:08:09,119 --> 01:08:12,720
what i am really passionate about

1753
01:08:14,400 --> 01:08:17,839
so legend of today first we start with

1754
01:08:17,839 --> 01:08:18,560
the background

1755
01:08:18,560 --> 01:08:21,600
of what stir from how it works just to

1756
01:08:21,600 --> 01:08:24,640
get things starting and then why would

1757
01:08:24,640 --> 01:08:25,759
like to

1758
01:08:25,759 --> 01:08:27,920
why do we care about learning how to

1759
01:08:27,920 --> 01:08:29,679
attract reform

1760
01:08:29,679 --> 01:08:31,279
and then the attack vectors and

1761
01:08:31,279 --> 01:08:33,279
scenarios that we're gonna have

1762
01:08:33,279 --> 01:08:35,759
uh today and then the recommendations of

1763
01:08:35,759 --> 01:08:36,560
the

1764
01:08:36,560 --> 01:08:41,040
talk and then we wrap up with questions

1765
01:08:43,198 --> 01:08:46,319
so what's uh infrastructure is good

1766
01:08:46,319 --> 01:08:49,359
let's go back in the old days where the

1767
01:08:49,359 --> 01:08:50,080
clouds were

1768
01:08:50,080 --> 01:08:52,799
relatively a new thing people would be

1769
01:08:52,799 --> 01:08:53,120
just

1770
01:08:53,120 --> 01:08:55,839
uh let's say let's take aws as i would

1771
01:08:55,839 --> 01:08:56,319
take

1772
01:08:56,319 --> 01:08:57,839
and over in this talk i would be talking

1773
01:08:57,839 --> 01:08:59,839
about aws as the main

1774
01:08:59,839 --> 01:09:02,960
cloud provider but this applies to every

1775
01:09:02,960 --> 01:09:05,359
help provider so back in the day people

1776
01:09:05,359 --> 01:09:06,000
would be going

1777
01:09:06,000 --> 01:09:08,080
to aws and then they would be deploying

1778
01:09:08,080 --> 01:09:09,679
in uh i don't know

1779
01:09:09,679 --> 01:09:13,040
a database instance or an ec2 instance

1780
01:09:13,040 --> 01:09:15,359
or a speed bucket or anything like that

1781
01:09:15,359 --> 01:09:17,040
they would be doing this through the

1782
01:09:17,040 --> 01:09:18,640
console uh

1783
01:09:18,640 --> 01:09:20,960
or like they would go on login and then

1784
01:09:20,960 --> 01:09:21,679
they would

1785
01:09:21,679 --> 01:09:24,000
just follow the amazing dashboard that

1786
01:09:24,000 --> 01:09:24,880
aws have

1787
01:09:24,880 --> 01:09:27,198
and then that they would have their

1788
01:09:27,198 --> 01:09:29,040
instance up and running

1789
01:09:29,040 --> 01:09:32,319
one is good the problem is as

1790
01:09:32,319 --> 01:09:34,319
the company scale this becomes tedious

1791
01:09:34,319 --> 01:09:36,080
to manage to secure

1792
01:09:36,080 --> 01:09:39,920
to view from different uh perspectives

1793
01:09:39,920 --> 01:09:43,600
so one is if you have 100 like two or

1794
01:09:43,600 --> 01:09:45,120
three assets or five

1795
01:09:45,120 --> 01:09:48,479
or 20 that would wouldn't be a problem

1796
01:09:48,479 --> 01:09:50,158
but if you have a hundred or a thousand

1797
01:09:50,158 --> 01:09:52,158
assets and you would like to

1798
01:09:52,158 --> 01:09:54,320
review all of their configuration if you

1799
01:09:54,320 --> 01:09:55,520
order their policies

1800
01:09:55,520 --> 01:09:57,679
continuously check them and whenever

1801
01:09:57,679 --> 01:09:59,600
something is new being deployed

1802
01:09:59,600 --> 01:10:01,920
you definitely want to have this being

1803
01:10:01,920 --> 01:10:03,600
done in a manual

1804
01:10:03,600 --> 01:10:07,199
check well you are signing off paperwork

1805
01:10:07,199 --> 01:10:08,000
for example like

1806
01:10:08,000 --> 01:10:09,600
in the really old days where people are

1807
01:10:09,600 --> 01:10:11,760
doing this you would like to have it in

1808
01:10:11,760 --> 01:10:13,120
a more modernized way

1809
01:10:13,120 --> 01:10:16,080
so how this is being done today is using

1810
01:10:16,080 --> 01:10:18,400
infrastructure as a code

1811
01:10:18,400 --> 01:10:20,320
let's say we're going to take the same

1812
01:10:20,320 --> 01:10:22,719
exact scenario of deploying to

1813
01:10:22,719 --> 01:10:25,760
aws and me nathan i would like to deploy

1814
01:10:25,760 --> 01:10:28,400
an ec2 instance i would be writing

1815
01:10:28,400 --> 01:10:31,520
a terraform code or an iec

1816
01:10:31,520 --> 01:10:34,480
code that would say hey i would like to

1817
01:10:34,480 --> 01:10:35,040
deploy

1818
01:10:35,040 --> 01:10:37,040
this ec2 instance with this

1819
01:10:37,040 --> 01:10:39,280
configuration with this

1820
01:10:39,280 --> 01:10:42,800
network uh security group or all of

1821
01:10:42,800 --> 01:10:45,520
the things that they have and then it

1822
01:10:45,520 --> 01:10:46,000
would

1823
01:10:46,000 --> 01:10:48,960
be passing through uh through the view

1824
01:10:48,960 --> 01:10:49,760
from uh

1825
01:10:49,760 --> 01:10:51,440
people who are responsible for that the

1826
01:10:51,440 --> 01:10:53,199
infrastructure team the security team

1827
01:10:53,199 --> 01:10:57,120
etc and then it would get a peer review

1828
01:10:57,120 --> 01:10:58,159
that

1829
01:10:58,159 --> 01:11:01,760
there after that will be able to emerge

1830
01:11:01,760 --> 01:11:04,400
well being able to write this in code

1831
01:11:04,400 --> 01:11:05,760
give you so much of

1832
01:11:05,760 --> 01:11:08,800
features uh in the beginning it's

1833
01:11:08,800 --> 01:11:10,239
definitely hard to do

1834
01:11:10,239 --> 01:11:13,360
like to establish and the like the

1835
01:11:13,360 --> 01:11:15,040
beginning of the program

1836
01:11:15,040 --> 01:11:18,960
uh let's say for uh modernizing your

1837
01:11:18,960 --> 01:11:22,000
cloud uh program but

1838
01:11:22,000 --> 01:11:24,560
as you go all along with this this

1839
01:11:24,560 --> 01:11:27,600
become really beneficial because

1840
01:11:27,600 --> 01:11:30,400
when you are writing uh your uh your

1841
01:11:30,400 --> 01:11:32,560
infrastructure resources as code

1842
01:11:32,560 --> 01:11:34,560
you can have this code being archived

1843
01:11:34,560 --> 01:11:36,159
and documented

1844
01:11:36,159 --> 01:11:39,280
using something like get for example and

1845
01:11:39,280 --> 01:11:40,159
then

1846
01:11:40,159 --> 01:11:43,120
when you deploy it or you push it as a

1847
01:11:43,120 --> 01:11:45,520
it into github for example and then you

1848
01:11:45,520 --> 01:11:46,800
have it in a key r

1849
01:11:46,800 --> 01:11:49,199
and then you have people you can invite

1850
01:11:49,199 --> 01:11:52,239
to listen for the thoughts and comments

1851
01:11:52,239 --> 01:11:55,280
and typical code review then you would

1852
01:11:55,280 --> 01:11:56,719
be able to

1853
01:11:56,719 --> 01:11:59,840
get much more feedback and

1854
01:11:59,840 --> 01:12:01,199
of course better security better

1855
01:12:01,199 --> 01:12:03,840
infrastructure configuration

1856
01:12:03,840 --> 01:12:06,800
and not only that if you can have it

1857
01:12:06,800 --> 01:12:07,199
just

1858
01:12:07,199 --> 01:12:09,430
within the same get flow

1859
01:12:09,430 --> 01:12:11,360
[Music]

1860
01:12:11,360 --> 01:12:13,199
get workflow then you would be able to

1861
01:12:13,199 --> 01:12:15,600
implement ci so that it can

1862
01:12:15,600 --> 01:12:18,239
do different security checks different

1863
01:12:18,239 --> 01:12:20,159
configuration checks

1864
01:12:20,159 --> 01:12:23,199
before even having someone uh

1865
01:12:23,199 --> 01:12:26,960
actually reviewing it so ci is amazing

1866
01:12:26,960 --> 01:12:29,280
and having this with infrastructures

1867
01:12:29,280 --> 01:12:30,000
code is

1868
01:12:30,000 --> 01:12:33,040
also amazing so there is no real

1869
01:12:33,040 --> 01:12:35,840
reason that i can say do not go with

1870
01:12:35,840 --> 01:12:38,080
infrastructure as code it's really cool

1871
01:12:38,080 --> 01:12:40,480
you should be doing this because of so

1872
01:12:40,480 --> 01:12:42,159
many features that would

1873
01:12:42,159 --> 01:12:44,560
bring of course this is not a marketing

1874
01:12:44,560 --> 01:12:46,000
talk i'm not going to talk about

1875
01:12:46,000 --> 01:12:47,280
terraform or

1876
01:12:47,280 --> 01:12:48,800
and how cool it will make your

1877
01:12:48,800 --> 01:12:51,199
infrastructure is and just saying that

1878
01:12:51,199 --> 01:12:52,560
infrastructure as code is really

1879
01:12:52,560 --> 01:12:55,440
important today

1880
01:12:55,440 --> 01:12:58,080
so what's terraform terraform is an open

1881
01:12:58,080 --> 01:12:58,880
source

1882
01:12:58,880 --> 01:13:00,800
infrastructure as code software tool

1883
01:13:00,800 --> 01:13:02,080
that was developed by

1884
01:13:02,080 --> 01:13:05,679
hash corp and it uses this uh

1885
01:13:05,679 --> 01:13:08,400
language called htl for writing

1886
01:13:08,400 --> 01:13:10,560
configuration code

1887
01:13:10,560 --> 01:13:13,840
and then the deployment happens through

1888
01:13:13,840 --> 01:13:16,080
terraform where you would be lighting

1889
01:13:16,080 --> 01:13:17,520
the entire configuration and then you

1890
01:13:17,520 --> 01:13:18,560
would push it

1891
01:13:18,560 --> 01:13:20,640
to three form and third phone would be

1892
01:13:20,640 --> 01:13:22,560
analyzing the code and then

1893
01:13:22,560 --> 01:13:26,719
execute it and apply it for you

1894
01:13:26,719 --> 01:13:28,719
and why am i talking about terraform

1895
01:13:28,719 --> 01:13:29,840
instead of all of

1896
01:13:29,840 --> 01:13:34,000
the other iac providers or orchestrators

1897
01:13:34,000 --> 01:13:36,159
because their phone today is the most

1898
01:13:36,159 --> 01:13:38,159
popular one on this planet

1899
01:13:38,159 --> 01:13:41,520
there are there is aws confirmation

1900
01:13:41,520 --> 01:13:44,480
there is uh i think palumi and many

1901
01:13:44,480 --> 01:13:46,080
other i think

1902
01:13:46,080 --> 01:13:49,280
but their form is in the top of this

1903
01:13:49,280 --> 01:13:51,519
list

1904
01:13:51,760 --> 01:13:55,040
and recently they

1905
01:13:55,040 --> 01:13:58,719
have reached 100 million downloads so

1906
01:13:58,719 --> 01:14:01,199
you can imagine how big uh telephone is

1907
01:14:01,199 --> 01:14:04,559
in the cloud market today

1908
01:14:04,880 --> 01:14:09,360
the cool thing about terraform and

1909
01:14:09,360 --> 01:14:12,159
the idea of using terraform is it's

1910
01:14:12,159 --> 01:14:14,320
cloud diagnostic you don't it's not like

1911
01:14:14,320 --> 01:14:16,800
cloud aws cloud formation where you are

1912
01:14:16,800 --> 01:14:18,880
writing configurations specifically made

1913
01:14:18,880 --> 01:14:20,400
for aws

1914
01:14:20,400 --> 01:14:22,800
you can write the same uh telephone code

1915
01:14:22,800 --> 01:14:23,600
to deploy

1916
01:14:23,600 --> 01:14:27,760
for uh and different resources in aws

1917
01:14:27,760 --> 01:14:28,480
and the same

1918
01:14:28,480 --> 01:14:32,480
code can deploy to azure or gcp or

1919
01:14:32,480 --> 01:14:35,679
any provider that you have in mind while

1920
01:14:35,679 --> 01:14:38,800
this is sounds amazing enough

1921
01:14:38,800 --> 01:14:41,920
imagine that if a terraform is

1922
01:14:41,920 --> 01:14:43,600
supporting more than a thousand

1923
01:14:43,600 --> 01:14:47,120
uh providers so you can write different

1924
01:14:47,120 --> 01:14:47,600
code

1925
01:14:47,600 --> 01:14:52,000
or or ic uh ise code to

1926
01:14:52,000 --> 01:14:54,800
manage your entire infrastructure for

1927
01:14:54,800 --> 01:14:55,199
every

1928
01:14:55,199 --> 01:14:58,159
almost every single provider that you

1929
01:14:58,159 --> 01:14:59,520
would be using

1930
01:14:59,520 --> 01:15:02,239
i have seen instances where people are

1931
01:15:02,239 --> 01:15:03,760
writing telephone code

1932
01:15:03,760 --> 01:15:07,280
to manage their github repositories

1933
01:15:07,280 --> 01:15:11,840
it's going crazy

1934
01:15:15,600 --> 01:15:18,719
so how does this one work you have the

1935
01:15:18,719 --> 01:15:21,760
protection a practitioner or the user

1936
01:15:21,760 --> 01:15:24,880
being deploying into uh uh

1937
01:15:24,880 --> 01:15:26,719
would like to deploy something and then

1938
01:15:26,719 --> 01:15:28,560
they would be writing the code

1939
01:15:28,560 --> 01:15:31,280
and then this code will be pushed to

1940
01:15:31,280 --> 01:15:32,080
something called

1941
01:15:32,080 --> 01:15:34,800
uh i'd like to a service in perform

1942
01:15:34,800 --> 01:15:36,640
called the terraform plan

1943
01:15:36,640 --> 01:15:38,800
and from plan would be analyzing the

1944
01:15:38,800 --> 01:15:40,080
code and tell you

1945
01:15:40,080 --> 01:15:43,520
hey um your you have these changes that

1946
01:15:43,520 --> 01:15:44,400
are happening

1947
01:15:44,400 --> 01:15:47,120
these things are being added and these

1948
01:15:47,120 --> 01:15:50,400
things are being destroyed

1949
01:15:50,400 --> 01:15:53,440
fyi would you like to continue

1950
01:15:53,440 --> 01:15:55,840
if you would like to continue usa jump

1951
01:15:55,840 --> 01:15:57,280
from apply

1952
01:15:57,280 --> 01:15:59,760
and then you can have the same thing

1953
01:15:59,760 --> 01:16:00,800
running again

1954
01:16:00,800 --> 01:16:03,920
with an actual action of deploying the

1955
01:16:03,920 --> 01:16:04,560
resources

1956
01:16:04,560 --> 01:16:06,800
and boom you have your resources up and

1957
01:16:06,800 --> 01:16:08,880
running

1958
01:16:08,880 --> 01:16:11,199
and

1959
01:16:11,920 --> 01:16:15,199
while this sounds good if you are

1960
01:16:15,199 --> 01:16:17,760
trying to model this from a secret

1961
01:16:17,760 --> 01:16:19,280
perspective

1962
01:16:19,280 --> 01:16:22,239
you would see that the cool thing here

1963
01:16:22,239 --> 01:16:23,360
or the thing that you

1964
01:16:23,360 --> 01:16:26,480
need to focus on is what is being on

1965
01:16:26,480 --> 01:16:26,880
this

1966
01:16:26,880 --> 01:16:30,560
uh red circle here the code that you

1967
01:16:30,560 --> 01:16:31,600
would write

1968
01:16:31,600 --> 01:16:34,560
and uh you would be pushed to an

1969
01:16:34,560 --> 01:16:35,120
instance

1970
01:16:35,120 --> 01:16:37,600
that of terraform that is responsible

1971
01:16:37,600 --> 01:16:38,400
for

1972
01:16:38,400 --> 01:16:41,120
applying uh planning and applying the

1973
01:16:41,120 --> 01:16:42,400
change

1974
01:16:42,400 --> 01:16:44,800
and this change if let's say terraform

1975
01:16:44,800 --> 01:16:46,640
would like to deploy something

1976
01:16:46,640 --> 01:16:49,040
in aws this means that this instance

1977
01:16:49,040 --> 01:16:49,679
have

1978
01:16:49,679 --> 01:16:52,239
access to administrator access to this

1979
01:16:52,239 --> 01:16:53,840
uh

1980
01:16:53,840 --> 01:16:57,120
to this account or this provider

1981
01:16:57,120 --> 01:17:00,560
this means that this server if

1982
01:17:00,560 --> 01:17:02,480
it has been compliance or something bad

1983
01:17:02,480 --> 01:17:04,400
happens to it then you will be able to

1984
01:17:04,400 --> 01:17:05,360
compromise

1985
01:17:05,360 --> 01:17:08,800
the other account through this instance

1986
01:17:08,800 --> 01:17:12,239
so if this is controlling gcp

1987
01:17:12,239 --> 01:17:16,719
azure i don't know cloudflare for dns or

1988
01:17:16,719 --> 01:17:19,280
or whatever resource or like a provider

1989
01:17:19,280 --> 01:17:20,880
that you're using with

1990
01:17:20,880 --> 01:17:23,199
then probably if you compromise this you

1991
01:17:23,199 --> 01:17:25,679
would be able to access the remaining

1992
01:17:25,679 --> 01:17:28,239
amazing

1993
01:17:29,440 --> 01:17:32,000
so yeah with great power comes great

1994
01:17:32,000 --> 01:17:33,120
responsibility

1995
01:17:33,120 --> 01:17:35,440
this is the exact part that you can say

1996
01:17:35,440 --> 01:17:37,760
with terraform

1997
01:17:37,760 --> 01:17:41,360
terraform controller has access to

1998
01:17:42,840 --> 01:17:44,320
everything

1999
01:17:44,320 --> 01:17:47,040
how it works when you are deploying

2000
01:17:47,040 --> 01:17:47,679
things

2001
01:17:47,679 --> 01:17:51,120
um in telephone perform documents every

2002
01:17:51,120 --> 01:17:53,679
single thing that you are deploying and

2003
01:17:53,679 --> 01:17:54,640
uh

2004
01:17:54,640 --> 01:17:57,760
within your resources and then

2005
01:17:57,760 --> 01:17:59,920
it's it stores them into something

2006
01:17:59,920 --> 01:18:01,440
called the state file

2007
01:18:01,440 --> 01:18:04,000
and this state file would have

2008
01:18:04,000 --> 01:18:04,880
configuration

2009
01:18:04,880 --> 01:18:08,400
uh configuration uh notes about

2010
01:18:08,400 --> 01:18:09,040
everything

2011
01:18:09,040 --> 01:18:11,440
and then when you are deploying again it

2012
01:18:11,440 --> 01:18:13,679
will check the state file to see

2013
01:18:13,679 --> 01:18:16,560
the delta and see what's being changed

2014
01:18:16,560 --> 01:18:18,800
if something's been changing here

2015
01:18:18,800 --> 01:18:21,360
then it will tell you about it and then

2016
01:18:21,360 --> 01:18:24,080
it will be added to the state file

2017
01:18:24,080 --> 01:18:27,520
also it stores the um the outputs for

2018
01:18:27,520 --> 01:18:30,800
different things from the api calls

2019
01:18:30,800 --> 01:18:34,000
so you would find stuff here if you get

2020
01:18:34,000 --> 01:18:37,840
the chance to access it like i said five

2021
01:18:37,840 --> 01:18:41,120
what i'm saying is if you have get

2022
01:18:41,120 --> 01:18:44,480
object x like uh i am policy uh

2023
01:18:44,480 --> 01:18:47,679
rule uh i'm access here

2024
01:18:47,679 --> 01:18:50,080
for the sp bucket that is used for

2025
01:18:50,080 --> 01:18:52,000
storing data from

2026
01:18:52,000 --> 01:18:55,280
seed files this would maybe grant you

2027
01:18:55,280 --> 01:18:55,920
access to

2028
01:18:55,920 --> 01:19:00,400
access keys database passwords

2029
01:19:00,400 --> 01:19:02,320
everything that could be interesting

2030
01:19:02,320 --> 01:19:04,800
could be fine there

2031
01:19:04,800 --> 01:19:09,600
so yeah after even getting this

2032
01:19:09,600 --> 01:19:12,400
the this i am user would that you would

2033
01:19:12,400 --> 01:19:13,280
probably get

2034
01:19:13,280 --> 01:19:15,280
would have administrator access uh

2035
01:19:15,280 --> 01:19:16,719
policy because

2036
01:19:16,719 --> 01:19:19,360
therefore would ideally want this to

2037
01:19:19,360 --> 01:19:20,159
deploy

2038
01:19:20,159 --> 01:19:24,400
things to aws so if you get the key that

2039
01:19:24,400 --> 01:19:25,920
is being used by terraform

2040
01:19:25,920 --> 01:19:29,440
boom you're in as an admin

2041
01:19:29,440 --> 01:19:37,839
let me get some water here

2042
01:19:42,400 --> 01:19:46,800
yep so this is the first

2043
01:19:46,800 --> 01:19:51,120
thing that to to think about when you're

2044
01:19:51,120 --> 01:19:53,440
attacking a company that has terraform

2045
01:19:53,440 --> 01:19:54,400
uh for

2046
01:19:54,400 --> 01:19:57,679
their first success code look for this

2047
01:19:57,679 --> 01:19:58,320
sv

2048
01:19:58,320 --> 01:20:01,440
bucket that would have uh

2049
01:20:01,440 --> 01:20:04,159
state files that are being used within

2050
01:20:04,159 --> 01:20:04,880
terraform

2051
01:20:04,880 --> 01:20:07,120
when you find this you have access to

2052
01:20:07,120 --> 01:20:08,080
that

2053
01:20:08,080 --> 01:20:11,840
this is game over but state files are

2054
01:20:11,840 --> 01:20:14,560
not only there

2055
01:20:14,880 --> 01:20:17,840
let's talk about states on data from

2056
01:20:17,840 --> 01:20:18,960
enterprise

2057
01:20:18,960 --> 01:20:22,480
so we have a typical environment

2058
01:20:22,480 --> 01:20:23,920
where people are using the telephone

2059
01:20:23,920 --> 01:20:26,239
binary to do deployments

2060
01:20:26,239 --> 01:20:28,719
and still like you have the other way of

2061
01:20:28,719 --> 01:20:30,400
using telephone enterprise

2062
01:20:30,400 --> 01:20:34,000
where you have an enterprise level

2063
01:20:34,000 --> 01:20:37,120
of doing disciplines and and

2064
01:20:37,120 --> 01:20:40,239
uh it's similar to

2065
01:20:40,239 --> 01:20:43,199
from cloud if anyone used it but this

2066
01:20:43,199 --> 01:20:44,800
one would allow you to host the entire

2067
01:20:44,800 --> 01:20:45,840
thing within

2068
01:20:45,840 --> 01:20:48,800
your infrastructure you would deploy an

2069
01:20:48,800 --> 01:20:50,880
instance you would

2070
01:20:50,880 --> 01:20:52,480
you would specify how you'd like to

2071
01:20:52,480 --> 01:20:54,960
store your state files

2072
01:20:54,960 --> 01:20:57,679
and then you would grant it at different

2073
01:20:57,679 --> 01:20:58,560
accesses

2074
01:20:58,560 --> 01:21:02,000
that would need to do the changes and

2075
01:21:02,000 --> 01:21:02,880
then

2076
01:21:02,880 --> 01:21:05,120
boom

2077
01:21:06,400 --> 01:21:07,950
the okay

2078
01:21:07,950 --> 01:21:10,159
[Music]

2079
01:21:10,159 --> 01:21:14,000
so here we talked about having it on s3

2080
01:21:14,000 --> 01:21:15,840
but it with therefore enterprise you

2081
01:21:15,840 --> 01:21:17,560
have other options you can store it in a

2082
01:21:17,560 --> 01:21:19,120
postgresql you can

2083
01:21:19,120 --> 01:21:21,679
an rds and mountain desk or you can even

2084
01:21:21,679 --> 01:21:23,679
have it in the same instance

2085
01:21:23,679 --> 01:21:26,800
and different ways

2086
01:21:27,440 --> 01:21:31,120
so if you get access to anything

2087
01:21:31,120 --> 01:21:35,760
uh uh that is hosting these state files

2088
01:21:35,760 --> 01:21:39,440
this is totally good for you you reach

2089
01:21:39,440 --> 01:21:42,639
a great level you probably are

2090
01:21:42,639 --> 01:21:44,159
capable of compromising the entire

2091
01:21:44,159 --> 01:21:45,920
infrastructure now

2092
01:21:45,920 --> 01:21:49,840
but if you did not release that one

2093
01:21:49,840 --> 01:21:52,880
like by its own and you were able to

2094
01:21:52,880 --> 01:21:55,920
compromise the terraform instance you

2095
01:21:55,920 --> 01:21:57,600
then you compromise the

2096
01:21:57,600 --> 01:21:59,520
infrastructure because it has access to

2097
01:21:59,520 --> 01:22:03,360
everything that is needed

2098
01:22:07,760 --> 01:22:10,080
another thing that they have is every

2099
01:22:10,080 --> 01:22:11,679
theme tip

2100
01:22:11,679 --> 01:22:14,400
if you ever seen a control like if you

2101
01:22:14,400 --> 01:22:16,960
ever compromise a tfe instance

2102
01:22:16,960 --> 01:22:18,719
this is the best place for attack

2103
01:22:18,719 --> 01:22:20,320
persistence

2104
01:22:20,320 --> 01:22:23,360
the reason is no one really ever

2105
01:22:23,360 --> 01:22:25,760
touches this after a successful

2106
01:22:25,760 --> 01:22:27,280
deployment

2107
01:22:27,280 --> 01:22:30,080
and regrets really happens because this

2108
01:22:30,080 --> 01:22:30,400
is

2109
01:22:30,400 --> 01:22:33,360
a production and sensitive environment

2110
01:22:33,360 --> 01:22:34,320
and

2111
01:22:34,320 --> 01:22:36,239
people would really want it to be up and

2112
01:22:36,239 --> 01:22:38,639
running the entire time most of the

2113
01:22:38,639 --> 01:22:41,199
updates are not as critical as

2114
01:22:41,199 --> 01:22:44,159
the uh would take someone to go and

2115
01:22:44,159 --> 01:22:45,120
update it so

2116
01:22:45,120 --> 01:22:47,679
people typically ignore it if you

2117
01:22:47,679 --> 01:22:49,040
compromise a

2118
01:22:49,040 --> 01:22:52,800
terraform enterprise instance would

2119
01:22:52,800 --> 01:22:55,120
be a great place to store your attack

2120
01:22:55,120 --> 01:22:56,480
persistence

2121
01:22:56,480 --> 01:22:58,800
oh by the way it come pre-installed with

2122
01:22:58,800 --> 01:23:00,000
almost the

2123
01:23:00,000 --> 01:23:02,239
every single tool that you would need by

2124
01:23:02,239 --> 01:23:04,480
default

2125
01:23:04,480 --> 01:23:08,159
and yep and ah yeah of course

2126
01:23:08,159 --> 01:23:11,120
definitely it has the latest uh database

2127
01:23:11,120 --> 01:23:12,080
credentials because

2128
01:23:12,080 --> 01:23:14,719
if someone is deploying something or

2129
01:23:14,719 --> 01:23:15,760
changing something

2130
01:23:15,760 --> 01:23:18,560
or rotating a key the key would still be

2131
01:23:18,560 --> 01:23:20,719
stored in the state file so if someone

2132
01:23:20,719 --> 01:23:21,760
really felt that

2133
01:23:21,760 --> 01:23:25,040
something is bad happening you can go

2134
01:23:25,040 --> 01:23:27,840
up to uh like the uh twitter from and

2135
01:23:27,840 --> 01:23:29,520
deploy and rotate the key

2136
01:23:29,520 --> 01:23:31,280
and then with that they receive the key

2137
01:23:31,280 --> 01:23:33,040
probably it will be stored and perform

2138
01:23:33,040 --> 01:23:34,239
again

2139
01:23:34,239 --> 01:23:36,400
so yeah that would be cool if you do

2140
01:23:36,400 --> 01:23:37,600
this and just

2141
01:23:37,600 --> 01:23:40,639
send me a tweet about this or

2142
01:23:40,639 --> 01:23:44,480
any red team engagement i mean of course

2143
01:23:44,480 --> 01:23:47,920
and by the way uh so from enterprise

2144
01:23:47,920 --> 01:23:48,480
it's

2145
01:23:48,480 --> 01:23:50,639
quite popular of the internet there are

2146
01:23:50,639 --> 01:23:52,000
companies has

2147
01:23:52,000 --> 01:23:54,400
have they're from enterprise explosive

2148
01:23:54,400 --> 01:23:55,040
internet

2149
01:23:55,040 --> 01:23:56,800
this is a bad practice you should never

2150
01:23:56,800 --> 01:23:58,080
expose

2151
01:23:58,080 --> 01:23:59,920
uh this instance to the internet you

2152
01:23:59,920 --> 01:24:01,520
should have it on

2153
01:24:01,520 --> 01:24:05,040
an isolated vpc where only

2154
01:24:05,040 --> 01:24:07,920
authorized ips or authorized parties can

2155
01:24:07,920 --> 01:24:09,920
access to it

2156
01:24:09,920 --> 01:24:11,760
these are some filters that you can use

2157
01:24:11,760 --> 01:24:15,040
to find ones hopefully your company

2158
01:24:15,040 --> 01:24:19,840
he's not there within this uh list

2159
01:24:21,600 --> 01:24:25,120
another thing if you let's say the first

2160
01:24:25,120 --> 01:24:27,760
uh first two or first tricks don't

2161
01:24:27,760 --> 01:24:29,280
really work with you

2162
01:24:29,280 --> 01:24:33,360
you can think about abusing perform apis

2163
01:24:33,360 --> 01:24:36,080
and how this one works is true from ap

2164
01:24:36,080 --> 01:24:37,120
there from uh

2165
01:24:37,120 --> 01:24:39,199
enterprise and telephone cloud i gives

2166
01:24:39,199 --> 01:24:41,360
you

2167
01:24:41,679 --> 01:24:45,520
an a full api that could allow you to do

2168
01:24:45,520 --> 01:24:46,960
all of the things that you would be

2169
01:24:46,960 --> 01:24:49,120
doing well using terraform

2170
01:24:49,120 --> 01:24:52,639
cloud or enterprise and

2171
01:24:52,639 --> 01:24:55,760
this uh this api could

2172
01:24:55,760 --> 01:24:58,560
be used in to reviewing the state file

2173
01:24:58,560 --> 01:24:59,120
that

2174
01:24:59,120 --> 01:25:01,920
is already as discussed it's really

2175
01:25:01,920 --> 01:25:02,800
important to

2176
01:25:02,800 --> 01:25:06,320
have it saved instance and uh insist

2177
01:25:06,320 --> 01:25:09,360
or mark it as a sensitive thing

2178
01:25:09,360 --> 01:25:11,199
so if it wasn't possible for you to

2179
01:25:11,199 --> 01:25:12,960
confirm as the database responsible for

2180
01:25:12,960 --> 01:25:14,800
storing the state files

2181
01:25:14,800 --> 01:25:17,199
it's possible to ask her from cloud or

2182
01:25:17,199 --> 01:25:18,639
from enterprise

2183
01:25:18,639 --> 01:25:21,840
to print it in plain text nicely

2184
01:25:21,840 --> 01:25:25,840
and it works it's very fun

2185
01:25:25,840 --> 01:25:28,560
this would mostly contain sensitive data

2186
01:25:28,560 --> 01:25:29,120
as

2187
01:25:29,120 --> 01:25:33,760
we talked earlier all right

2188
01:25:33,760 --> 01:25:37,040
and now let's jump into the

2189
01:25:37,040 --> 01:25:40,639
another fun vector that they have

2190
01:25:40,639 --> 01:25:43,920
this was initially documented by uh

2191
01:25:43,920 --> 01:25:47,840
alex k he is a security researcher that

2192
01:25:47,840 --> 01:25:51,280
wrote about it on the other uh blog

2193
01:25:51,280 --> 01:25:54,400
about her from plan rce

2194
01:25:54,400 --> 01:25:57,360
and this seems to be some sort of a by

2195
01:25:57,360 --> 01:25:59,600
design issue with terraform

2196
01:25:59,600 --> 01:26:01,280
but people weren't really talking about

2197
01:26:01,280 --> 01:26:03,360
it how it works

2198
01:26:03,360 --> 01:26:07,120
is like

2199
01:26:07,120 --> 01:26:09,679
if you use if you use this attack in a

2200
01:26:09,679 --> 01:26:10,880
reward scenario

2201
01:26:10,880 --> 01:26:13,600
and you have access to push code into a

2202
01:26:13,600 --> 01:26:15,679
git repository and then this get

2203
01:26:15,679 --> 01:26:18,719
get repository would be running ci

2204
01:26:18,719 --> 01:26:22,560
on on get on github or on a different

2205
01:26:22,560 --> 01:26:25,199
or in the code in general that you have

2206
01:26:25,199 --> 01:26:26,639
that are being uh

2207
01:26:26,639 --> 01:26:29,760
planned then it's

2208
01:26:29,760 --> 01:26:31,360
most likely that you would be able to

2209
01:26:31,360 --> 01:26:33,280
get remote code execution

2210
01:26:33,280 --> 01:26:35,840
within the terraform instance that is

2211
01:26:35,840 --> 01:26:37,360
running the ci

2212
01:26:37,360 --> 01:26:40,159
because how it works is you can write a

2213
01:26:40,159 --> 01:26:40,880
provider

2214
01:26:40,880 --> 01:26:45,280
that would be able to uh to execute code

2215
01:26:45,280 --> 01:26:48,840
by default you you uh perform providers

2216
01:26:48,840 --> 01:26:50,480
are

2217
01:26:50,480 --> 01:26:53,040
like you can easily go and create a

2218
01:26:53,040 --> 01:26:54,800
provider and then push it to

2219
01:26:54,800 --> 01:26:56,560
your from provider uh there from

2220
01:26:56,560 --> 01:26:57,840
providers to history

2221
01:26:57,840 --> 01:27:00,719
and from there you would be able to

2222
01:27:00,719 --> 01:27:02,159
import it from

2223
01:27:02,159 --> 01:27:05,280
externally and then when you import this

2224
01:27:05,280 --> 01:27:05,760
one

2225
01:27:05,760 --> 01:27:08,080
and you install it and download it and

2226
01:27:08,080 --> 01:27:08,800
install it

2227
01:27:08,800 --> 01:27:10,800
and then you use it in a code or you

2228
01:27:10,800 --> 01:27:11,920
call it

2229
01:27:11,920 --> 01:27:14,880
then it would be invoked when this

2230
01:27:14,880 --> 01:27:15,600
happens

2231
01:27:15,600 --> 01:27:19,920
you get an instant good execution

2232
01:27:19,920 --> 01:27:22,880
it i don't know how terraform is not

2233
01:27:22,880 --> 01:27:24,320
really fixing this

2234
01:27:24,320 --> 01:27:27,440
i haven't really seen a way to fix it

2235
01:27:27,440 --> 01:27:29,440
but this is an actual thing and it's

2236
01:27:29,440 --> 01:27:32,960
really bad

2237
01:27:32,960 --> 01:27:35,679
so how it works is a person that submits

2238
01:27:35,679 --> 01:27:36,800
a pr

2239
01:27:36,800 --> 01:27:39,920
can see it can execute a payload and

2240
01:27:39,920 --> 01:27:42,320
compromise the term from instance

2241
01:27:42,320 --> 01:27:45,360
and just to add this

2242
01:27:45,360 --> 01:27:48,400
since anyone can able to is able to push

2243
01:27:48,400 --> 01:27:49,360
code into

2244
01:27:49,360 --> 01:27:52,480
the terraform uh provider's history

2245
01:27:52,480 --> 01:27:55,360
maybe it enough chances that someone is

2246
01:27:55,360 --> 01:27:56,239
looking for that

2247
01:27:56,239 --> 01:28:00,000
and it will get detected

2248
01:28:00,000 --> 01:28:02,880
someone figured out that there is an api

2249
01:28:02,880 --> 01:28:04,480
that is also provided by

2250
01:28:04,480 --> 01:28:08,159
terraform to execute external programs

2251
01:28:08,159 --> 01:28:10,800
on as terraform code and then takes the

2252
01:28:10,800 --> 01:28:12,000
input of that at the

2253
01:28:12,000 --> 01:28:14,800
output of that code and the that command

2254
01:28:14,800 --> 01:28:16,000
into

2255
01:28:16,000 --> 01:28:19,440
terraform sounds like a very useful

2256
01:28:19,440 --> 01:28:22,719
feature but man this is bad

2257
01:28:22,719 --> 01:28:26,080
why because someone can submit a pr

2258
01:28:26,080 --> 01:28:29,199
with a file called point.tf with this

2259
01:28:29,199 --> 01:28:30,400
code

2260
01:28:30,400 --> 01:28:33,520
and guess what this code this command

2261
01:28:33,520 --> 01:28:34,880
will be executed on

2262
01:28:34,880 --> 01:28:38,800
the terraform enterprise instance

2263
01:28:38,800 --> 01:28:41,040
and it will not generate any errors

2264
01:28:41,040 --> 01:28:42,880
because it's

2265
01:28:42,880 --> 01:28:47,520
throwing or outputting a valid json

2266
01:28:47,520 --> 01:28:51,760
i personally tried it in

2267
01:28:51,760 --> 01:28:53,760
different experiments and it was

2268
01:28:53,760 --> 01:28:55,280
functioning in different

2269
01:28:55,280 --> 01:28:58,560
places it works on the cli it works on

2270
01:28:58,560 --> 01:29:02,560
enterprise at the from enterprise level

2271
01:29:02,560 --> 01:29:06,880
and there is no way to fix it

2272
01:29:09,360 --> 01:29:12,480
okay uh now we're reaching the end of

2273
01:29:12,480 --> 01:29:14,000
the talk

2274
01:29:14,000 --> 01:29:18,320
and what should we do here

2275
01:29:18,320 --> 01:29:21,280
first be careful it's pretty difficult

2276
01:29:21,280 --> 01:29:22,560
to maintain a secure

2277
01:29:22,560 --> 01:29:25,280
terraform environment the electriform

2278
01:29:25,280 --> 01:29:26,880
has done amazing work on

2279
01:29:26,880 --> 01:29:30,000
the groud and the

2280
01:29:30,000 --> 01:29:32,719
developer toolkit that can be used for

2281
01:29:32,719 --> 01:29:34,159
automating

2282
01:29:34,159 --> 01:29:36,159
the deployments and managing your

2283
01:29:36,159 --> 01:29:37,440
infrastructure

2284
01:29:37,440 --> 01:29:39,040
there are many things to do when it

2285
01:29:39,040 --> 01:29:40,639
comes to the security

2286
01:29:40,639 --> 01:29:43,520
oh well this is not really nice thing to

2287
01:29:43,520 --> 01:29:45,600
have

2288
01:29:45,600 --> 01:29:53,840
on livestock i think i'll use myself

2289
01:30:03,440 --> 01:30:07,040
also long but uh yeah uh

2290
01:30:07,040 --> 01:30:10,480
as i was saying vehicles really hard to

2291
01:30:10,480 --> 01:30:11,120
do that

2292
01:30:11,120 --> 01:30:13,199
uh to maintain a secure terraform

2293
01:30:13,199 --> 01:30:14,400
environment

2294
01:30:14,400 --> 01:30:21,839
being careful is my recommendation here

2295
01:30:22,159 --> 01:30:25,920
also if you are storing your your uh

2296
01:30:25,920 --> 01:30:28,560
your state files in sve you can

2297
01:30:28,560 --> 01:30:30,560
implement a bucket access policy that

2298
01:30:30,560 --> 01:30:32,400
prevents other users

2299
01:30:32,400 --> 01:30:34,560
from accessing any resource within this

2300
01:30:34,560 --> 01:30:36,800
bucket other than this particular

2301
01:30:36,800 --> 01:30:40,480
terraform user that is is managing your

2302
01:30:40,480 --> 01:30:42,719
the state file this would be really

2303
01:30:42,719 --> 01:30:44,560
useful so someone would be able to list

2304
01:30:44,560 --> 01:30:46,080
out the bucket but then

2305
01:30:46,080 --> 01:30:47,760
when they go and they will try to

2306
01:30:47,760 --> 01:30:49,520
retrieve this object

2307
01:30:49,520 --> 01:30:51,840
they would get a for like a 403 or

2308
01:30:51,840 --> 01:30:52,719
something

2309
01:30:52,719 --> 01:30:56,080
and you are safe for this

2310
01:30:56,080 --> 01:31:00,080
face and maybe if you have

2311
01:31:00,080 --> 01:31:02,480
login enabled maybe you would get alert

2312
01:31:02,480 --> 01:31:04,239
that someone is trying to

2313
01:31:04,239 --> 01:31:07,360
fetch this resource and

2314
01:31:07,360 --> 01:31:10,480
you can do access upon that maybe

2315
01:31:10,480 --> 01:31:12,239
you're already compromised and someone

2316
01:31:12,239 --> 01:31:13,679
is trying to pivot

2317
01:31:13,679 --> 01:31:16,960
into your network to get better

2318
01:31:16,960 --> 01:31:20,800
access just throwing ideas that could be

2319
01:31:20,800 --> 01:31:23,120
useful here

2320
01:31:23,120 --> 01:31:26,159
also continuously update and

2321
01:31:26,159 --> 01:31:28,800
review your ntfe instance it can be

2322
01:31:28,800 --> 01:31:31,600
easily forgetting the noise

2323
01:31:31,600 --> 01:31:34,400
no one is really going and uh looking in

2324
01:31:34,400 --> 01:31:35,760
and checking how it

2325
01:31:35,760 --> 01:31:38,719
uh how like how is it working unless

2326
01:31:38,719 --> 01:31:39,440
it's

2327
01:31:39,440 --> 01:31:42,560
down or something bad happens in the of

2328
01:31:42,560 --> 01:31:45,040
in the typical cases nothing but happens

2329
01:31:45,040 --> 01:31:46,560
no one gets uh logs in

2330
01:31:46,560 --> 01:31:49,280
and of course this is bad you should

2331
01:31:49,280 --> 01:31:52,400
continuously review it

2332
01:31:52,400 --> 01:31:55,199
and be careful in permitting people to

2333
01:31:55,199 --> 01:31:56,320
have right access on

2334
01:31:56,320 --> 01:31:58,400
any branch that they're from regis

2335
01:31:58,400 --> 01:32:00,080
repository

2336
01:32:00,080 --> 01:32:03,040
it can lead to a direct code execution

2337
01:32:03,040 --> 01:32:04,560
and there is no way to patch it

2338
01:32:04,560 --> 01:32:07,679
and the problem here is since

2339
01:32:07,679 --> 01:32:09,920
there is no way to patch it and at the

2340
01:32:09,920 --> 01:32:11,120
same time

2341
01:32:11,120 --> 01:32:14,080
companies typically have give right

2342
01:32:14,080 --> 01:32:16,639
access to everyone to write to

2343
01:32:16,639 --> 01:32:19,840
non-protected branches then what happens

2344
01:32:19,840 --> 01:32:20,560
here is

2345
01:32:20,560 --> 01:32:22,880
anyone within the company on the typical

2346
01:32:22,880 --> 01:32:24,800
setup would be able to push code to

2347
01:32:24,800 --> 01:32:27,520
their terraform to the tfe server and

2348
01:32:27,520 --> 01:32:28,719
then they would get access to that

2349
01:32:28,719 --> 01:32:30,400
server

2350
01:32:30,400 --> 01:32:33,600
because of this vulnerability uh

2351
01:32:33,600 --> 01:32:37,120
how to to fix it this is

2352
01:32:37,120 --> 01:32:41,120
uh something that is still

2353
01:32:41,120 --> 01:32:44,560
not known how to do that uh

2354
01:32:44,560 --> 01:32:46,800
everyone in the cloud security committee

2355
01:32:46,800 --> 01:32:48,719
is trying to brainstorm ideas

2356
01:32:48,719 --> 01:32:51,440
uh explain different ways until an

2357
01:32:51,440 --> 01:32:53,120
official patch comes from

2358
01:32:53,120 --> 01:32:56,239
true from but in the midwest

2359
01:32:56,239 --> 01:32:59,920
yeah hopefully uh all stays the same

2360
01:32:59,920 --> 01:33:02,960
uh and secure

2361
01:33:03,199 --> 01:33:06,639
anyway uh also maintain uh

2362
01:33:06,639 --> 01:33:09,760
the term enterprise uh instance in an

2363
01:33:09,760 --> 01:33:11,120
isolated vpc

2364
01:33:11,120 --> 01:33:12,960
you don't want to have it uh being

2365
01:33:12,960 --> 01:33:14,480
public in the internet

2366
01:33:14,480 --> 01:33:16,320
in the office that there is a zero day

2367
01:33:16,320 --> 01:33:18,080
that people are exporting

2368
01:33:18,080 --> 01:33:21,040
you don't want people to mass scan your

2369
01:33:21,040 --> 01:33:22,480
the internet and look up

2370
01:33:22,480 --> 01:33:25,199
for your phone enterprise instances and

2371
01:33:25,199 --> 01:33:26,639
then they would go and explore uh

2372
01:33:26,639 --> 01:33:27,760
exploit yours

2373
01:33:27,760 --> 01:33:30,560
and yeah this would be a direct little

2374
01:33:30,560 --> 01:33:32,800
bit

2375
01:33:32,960 --> 01:33:35,360
the uh another thing is heat files are

2376
01:33:35,360 --> 01:33:37,440
sensitive they contain data that ranges

2377
01:33:37,440 --> 01:33:39,360
from database passwords

2378
01:33:39,360 --> 01:33:42,480
to certificates and access keys

2379
01:33:42,480 --> 01:33:46,080
so you can treat them as sensitive data

2380
01:33:46,080 --> 01:33:49,440
and to add at the end

2381
01:33:49,440 --> 01:33:52,239
final thoughts

2382
01:33:57,199 --> 01:33:59,600
their phone is amazing it runs several

2383
01:33:59,600 --> 01:34:00,560
security features

2384
01:34:00,560 --> 01:34:03,199
and uh when implementing ic within

2385
01:34:03,199 --> 01:34:04,320
terraform

2386
01:34:04,320 --> 01:34:06,880
but still with great power comes great

2387
01:34:06,880 --> 01:34:08,639
responsibility

2388
01:34:08,639 --> 01:34:10,960
protect your terraform environment

2389
01:34:10,960 --> 01:34:14,320
because things can go bad easily

2390
01:34:14,320 --> 01:34:16,480
and of course stay safe set up

2391
01:34:16,480 --> 01:34:17,760
persistent monitor like

2392
01:34:17,760 --> 01:34:20,320
full hunt to discover shadow i.t use

2393
01:34:20,320 --> 01:34:21,440
configurations and

2394
01:34:21,440 --> 01:34:24,320
mistakenly exposed services take letter

2395
01:34:24,320 --> 01:34:25,120
from instance

2396
01:34:25,120 --> 01:34:29,440
that we talked about and with that being

2397
01:34:29,440 --> 01:34:30,639
said

2398
01:34:30,639 --> 01:34:32,719
thank you very much let's start with the

2399
01:34:32,719 --> 01:34:35,120
questions

2400
01:34:36,239 --> 01:34:39,760
thank you amazon um i have

2401
01:34:39,760 --> 01:34:42,400
personally i have many questions to ask

2402
01:34:42,400 --> 01:34:44,000
about that topic

2403
01:34:44,000 --> 01:34:47,119
um starting from the recommendations

2404
01:34:47,119 --> 01:34:49,600
so do you think it's too early for big

2405
01:34:49,600 --> 01:34:52,400
organizations or financial institutes to

2406
01:34:52,400 --> 01:34:54,560
start using terror forums considering

2407
01:34:54,560 --> 01:34:58,159
the attack surface and that

2408
01:34:58,480 --> 01:35:01,760
such if is it too early for us for

2409
01:35:01,760 --> 01:35:03,280
example to use it or

2410
01:35:03,280 --> 01:35:07,040
no we can we can maintain a balance

2411
01:35:07,040 --> 01:35:08,719
uh no it's not i don't think that it's

2412
01:35:08,719 --> 01:35:10,080
too early for

2413
01:35:10,080 --> 01:35:13,280
uh organizations even uh if it's a

2414
01:35:13,280 --> 01:35:14,960
sensitive organization like financial

2415
01:35:14,960 --> 01:35:17,360
organizations to use telephone or

2416
01:35:17,360 --> 01:35:20,159
infrastructure as code in general the

2417
01:35:20,159 --> 01:35:22,480
problem comes when

2418
01:35:22,480 --> 01:35:24,000
the security team would not really

2419
01:35:24,000 --> 01:35:26,000
putting a lot of focus on

2420
01:35:26,000 --> 01:35:29,199
the infrastructure and s-code

2421
01:35:29,199 --> 01:35:31,920
security here then these were the

2422
01:35:31,920 --> 01:35:33,440
problems would come up

2423
01:35:33,440 --> 01:35:36,560
but in general using terraform is

2424
01:35:36,560 --> 01:35:39,679
really helpful once because

2425
01:35:39,679 --> 01:35:42,639
let's say that the other choices that

2426
01:35:42,639 --> 01:35:43,280
you would have

2427
01:35:43,280 --> 01:35:46,000
is to deploy things using the console or

2428
01:35:46,000 --> 01:35:47,840
using the api

2429
01:35:47,840 --> 01:35:50,960
but how would you really manage this

2430
01:35:50,960 --> 01:35:52,639
within a company that has

2431
01:35:52,639 --> 01:35:54,960
uh that deploys let's say 100 assets

2432
01:35:54,960 --> 01:35:57,440
every month

2433
01:35:57,440 --> 01:35:59,520
you simply can't so with terraform at

2434
01:35:59,520 --> 01:36:01,040
least you would be able to run free

2435
01:36:01,040 --> 01:36:02,080
checks

2436
01:36:02,080 --> 01:36:04,800
uh using uh on the ci before even the

2437
01:36:04,800 --> 01:36:06,480
security team comes up and

2438
01:36:06,480 --> 01:36:09,840
review it you would be able to have

2439
01:36:09,840 --> 01:36:11,440
different compliance and configuration

2440
01:36:11,440 --> 01:36:12,560
checks done

2441
01:36:12,560 --> 01:36:14,880
there are tools that are really readily

2442
01:36:14,880 --> 01:36:16,000
available there like

2443
01:36:16,000 --> 01:36:19,760
i don't know tfsec checkoff

2444
01:36:19,920 --> 01:36:23,199
and center policy for sure

2445
01:36:23,199 --> 01:36:26,239
a tool by hashicorp and if you implement

2446
01:36:26,239 --> 01:36:27,360
this and implement

2447
01:36:27,360 --> 01:36:31,040
a property i then when

2448
01:36:31,040 --> 01:36:34,080
if the build is is succeeding then you

2449
01:36:34,080 --> 01:36:36,000
would be able to

2450
01:36:36,000 --> 01:36:39,360
to go and have a layer two evaluation of

2451
01:36:39,360 --> 01:36:39,920
the

2452
01:36:39,920 --> 01:36:41,840
infrastructure change to see if there's

2453
01:36:41,840 --> 01:36:43,280
anything bad

2454
01:36:43,280 --> 01:36:46,159
but it like the amount of things that

2455
01:36:46,159 --> 01:36:49,440
are helpful that it brings is much more

2456
01:36:49,440 --> 01:36:53,839
than the cons

2457
01:36:56,480 --> 01:36:59,600
okay okay another question about the

2458
01:36:59,600 --> 01:37:01,440
tools

2459
01:37:01,440 --> 01:37:04,639
supportability for terraform and

2460
01:37:04,639 --> 01:37:07,440
the clouds any both ways uh theta form

2461
01:37:07,440 --> 01:37:09,760
on gcp is it different than terraform on

2462
01:37:09,760 --> 01:37:11,119
aws

2463
01:37:11,119 --> 01:37:14,480
is it different uh for f5 than palo alto

2464
01:37:14,480 --> 01:37:15,840
or cisco

2465
01:37:15,840 --> 01:37:19,040
uh or any other uh you know

2466
01:37:19,040 --> 01:37:21,280
there are so many factors when it comes

2467
01:37:21,280 --> 01:37:23,600
to using uh an infrastructure as a code

2468
01:37:23,600 --> 01:37:25,840
tool

2469
01:37:26,320 --> 01:37:29,119
yep you're right so what is the

2470
01:37:29,119 --> 01:37:30,400
differences

2471
01:37:30,400 --> 01:37:34,080
you're only focusing on aws about the

2472
01:37:34,080 --> 01:37:34,800
topic or

2473
01:37:34,800 --> 01:37:38,480
it's general uh so the cool thing about

2474
01:37:38,480 --> 01:37:40,400
terraform that it would support

2475
01:37:40,400 --> 01:37:42,719
like uh around more than a thousand

2476
01:37:42,719 --> 01:37:43,600
providers

2477
01:37:43,600 --> 01:37:46,960
so but the problem is just because

2478
01:37:46,960 --> 01:37:48,719
supports it doesn't mean that the tools

2479
01:37:48,719 --> 01:37:50,000
would support that

2480
01:37:50,000 --> 01:37:52,560
and exactly the same point that you said

2481
01:37:52,560 --> 01:37:53,119
so what

2482
01:37:53,119 --> 01:37:55,199
you can do here is you would go and

2483
01:37:55,199 --> 01:37:56,719
check for example let's take an example

2484
01:37:56,719 --> 01:37:57,520
like tfsec

2485
01:37:57,520 --> 01:38:00,800
a tool that i personally use uh have

2486
01:38:00,800 --> 01:38:04,480
great support for aws for azure for gcp

2487
01:38:04,480 --> 01:38:08,320
i think alibaba cloud and oracle cloud

2488
01:38:08,320 --> 01:38:10,960
but when and i don't think that is for

2489
01:38:10,960 --> 01:38:11,440
other

2490
01:38:11,440 --> 01:38:14,480
cloud providers so if you have a cloud

2491
01:38:14,480 --> 01:38:16,000
provider that you are using and you

2492
01:38:16,000 --> 01:38:17,040
would like to implement

2493
01:38:17,040 --> 01:38:19,840
implement compliance checks you will you

2494
01:38:19,840 --> 01:38:20,159
are

2495
01:38:20,159 --> 01:38:23,760
better using sentinel central policies

2496
01:38:23,760 --> 01:38:26,000
this product would allow you to write

2497
01:38:26,000 --> 01:38:27,199
custom tools

2498
01:38:27,199 --> 01:38:29,760
custom checks and then we need or you

2499
01:38:29,760 --> 01:38:31,280
can use something like same grip to do

2500
01:38:31,280 --> 01:38:32,400
the same thing

2501
01:38:32,400 --> 01:38:35,040
uh an open source alternative and when

2502
01:38:35,040 --> 01:38:35,760
you do this

2503
01:38:35,760 --> 01:38:38,719
you'll be able to review the code and

2504
01:38:38,719 --> 01:38:40,320
for custom text of course

2505
01:38:40,320 --> 01:38:45,840
this would require like manual work

2506
01:38:46,480 --> 01:38:50,239
uh yeah i i got many questions madison

2507
01:38:50,239 --> 01:38:52,800
regarding the root cause the main root

2508
01:38:52,800 --> 01:38:53,679
cause of

2509
01:38:53,679 --> 01:38:56,880
those remote code execution issues that

2510
01:38:56,880 --> 01:38:58,800
you highlighted in your talk

2511
01:38:58,800 --> 01:39:01,760
uh do you think that improper access

2512
01:39:01,760 --> 01:39:02,400
management

2513
01:39:02,400 --> 01:39:06,000
is the real pain or the main pain in

2514
01:39:06,000 --> 01:39:08,320
environment like terraform or what what

2515
01:39:08,320 --> 01:39:10,000
do you think if you want to analyze the

2516
01:39:10,000 --> 01:39:11,280
root causes of

2517
01:39:11,280 --> 01:39:13,360
of such remote code execution

2518
01:39:13,360 --> 01:39:15,360
vulnerabilities

2519
01:39:15,360 --> 01:39:18,400
with this impact this particular remote

2520
01:39:18,400 --> 01:39:21,199
consequence vulnerability

2521
01:39:21,199 --> 01:39:24,880
i to be honest i think this is the

2522
01:39:24,880 --> 01:39:28,080
the fault of their from they should have

2523
01:39:28,080 --> 01:39:30,480
support to have whitelisted providers to

2524
01:39:30,480 --> 01:39:31,679
be whitelisted

2525
01:39:31,679 --> 01:39:35,199
or or declared being declared

2526
01:39:35,199 --> 01:39:38,320
before execution so that a person would

2527
01:39:38,320 --> 01:39:38,800
say

2528
01:39:38,800 --> 01:39:40,400
hey i would like to have a security

2529
01:39:40,400 --> 01:39:43,040
check to check for this particular

2530
01:39:43,040 --> 01:39:46,480
provider's aws azure gcp and then if

2531
01:39:46,480 --> 01:39:48,560
someone is calling something different

2532
01:39:48,560 --> 01:39:51,119
do not execute it do not install it but

2533
01:39:51,119 --> 01:39:52,880
here uh terraform

2534
01:39:52,880 --> 01:39:55,920
is uh willingly going and download and

2535
01:39:55,920 --> 01:39:56,560
install

2536
01:39:56,560 --> 01:40:00,639
and plan any code that is

2537
01:40:00,639 --> 01:40:04,000
uh going to be provided imagine it as

2538
01:40:04,000 --> 01:40:07,600
an interpreter like like a like a 500

2539
01:40:07,600 --> 01:40:09,600
or something like that whatever code

2540
01:40:09,600 --> 01:40:11,199
that you are importing it will

2541
01:40:11,199 --> 01:40:13,920
uh execute but therefore should have an

2542
01:40:13,920 --> 01:40:15,440
option to

2543
01:40:15,440 --> 01:40:17,760
whitelist the providers and this is not

2544
01:40:17,760 --> 01:40:19,600
there yet and you cannot really

2545
01:40:19,600 --> 01:40:22,800
uh patch it or prevent it in

2546
01:40:22,800 --> 01:40:25,040
a terraform enterprise like with the ci

2547
01:40:25,040 --> 01:40:27,600
implementation you have to

2548
01:40:27,600 --> 01:40:29,760
like a temporary way is to parse the

2549
01:40:29,760 --> 01:40:31,119
code first

2550
01:40:31,119 --> 01:40:34,800
and then implement as uh

2551
01:40:34,800 --> 01:40:36,960
like a separate ci that would only

2552
01:40:36,960 --> 01:40:38,239
execute if their

2553
01:40:38,239 --> 01:40:40,400
code does not have providers that are

2554
01:40:40,400 --> 01:40:41,920
not there but then you would not benefit

2555
01:40:41,920 --> 01:40:43,679
from all the enterprise features that

2556
01:40:43,679 --> 01:40:44,800
you would get

2557
01:40:44,800 --> 01:40:50,000
with the telephone enterprise

2558
01:40:50,000 --> 01:40:52,560
are you aware of any security like

2559
01:40:52,560 --> 01:40:54,159
standard

2560
01:40:54,159 --> 01:40:57,760
or hardening guides for terraform

2561
01:40:57,760 --> 01:41:00,080
environment or best practices

2562
01:41:00,080 --> 01:41:04,159
that you can refer um

2563
01:41:04,159 --> 01:41:07,440
more most of them are uh are

2564
01:41:07,440 --> 01:41:09,840
within the tools that are being used

2565
01:41:09,840 --> 01:41:11,679
like uh

2566
01:41:11,679 --> 01:41:14,719
uh like tfsec and chekov they already

2567
01:41:14,719 --> 01:41:15,040
have

2568
01:41:15,040 --> 01:41:17,360
uh people uh security checks for

2569
01:41:17,360 --> 01:41:18,880
terraform

2570
01:41:18,880 --> 01:41:22,239
and and these are

2571
01:41:22,239 --> 01:41:24,159
focusing on general things and also

2572
01:41:24,159 --> 01:41:26,719
focus on providers little things

2573
01:41:26,719 --> 01:41:30,080
mainly on the three top providers

2574
01:41:30,080 --> 01:41:32,320
if you started these ones and you are

2575
01:41:32,320 --> 01:41:33,440
doing well

2576
01:41:33,440 --> 01:41:35,920
probably you would be able to run the

2577
01:41:35,920 --> 01:41:37,600
program in a better way

2578
01:41:37,600 --> 01:41:40,960
but this could be a good start

2579
01:41:45,040 --> 01:41:48,080
great uh any questions yeah there are

2580
01:41:48,080 --> 01:41:49,600
any questions from

2581
01:41:49,600 --> 01:41:52,800
the audience uh no

2582
01:41:52,800 --> 01:41:56,239
no no i can't say it again a new topic

2583
01:41:56,239 --> 01:41:58,080
in jordan people are still

2584
01:41:58,080 --> 01:42:01,840
hesitant to participate

2585
01:42:03,600 --> 01:42:06,639
yeah the cool thing is to try to bring

2586
01:42:06,639 --> 01:42:06,960
it

2587
01:42:06,960 --> 01:42:10,239
uh to the amino region like uh

2588
01:42:10,239 --> 01:42:12,639
from is used in the main region but it's

2589
01:42:12,639 --> 01:42:14,000
not as used as

2590
01:42:14,000 --> 01:42:16,320
in the us so it's cool to have it uh

2591
01:42:16,320 --> 01:42:17,840
discussed

2592
01:42:17,840 --> 01:42:19,760
so do you think it's any it's on the

2593
01:42:19,760 --> 01:42:21,920
rise or it will not be implemented

2594
01:42:21,920 --> 01:42:23,760
it will not die because we can feel that

2595
01:42:23,760 --> 01:42:26,719
there is a lot of resistance and

2596
01:42:26,719 --> 01:42:30,239
in our countries arab countries

2597
01:42:30,239 --> 01:42:32,239
uh i think every new technology would

2598
01:42:32,239 --> 01:42:33,360
have this uh

2599
01:42:33,360 --> 01:42:35,280
like the this type of persistence

2600
01:42:35,280 --> 01:42:37,199
because humans do not

2601
01:42:37,199 --> 01:42:40,960
likely change and the terraform is here

2602
01:42:40,960 --> 01:42:42,639
and

2603
01:42:42,639 --> 01:42:45,280
is going to stay for the long run the

2604
01:42:45,280 --> 01:42:47,520
like with the amount of growth that

2605
01:42:47,520 --> 01:42:49,840
that happened in the past two years the

2606
01:42:49,840 --> 01:42:51,679
there is no any indicator that it will

2607
01:42:51,679 --> 01:42:53,440
go away

2608
01:42:53,440 --> 01:42:55,840
the same thing goes for cloud if you

2609
01:42:55,840 --> 01:42:57,679
would like to use cloud you have to

2610
01:42:57,679 --> 01:42:59,360
put security and if you would like to

2611
01:42:59,360 --> 01:43:01,520
implement security you have to

2612
01:43:01,520 --> 01:43:03,920
start with basics infrastructure as the

2613
01:43:03,920 --> 01:43:04,639
code would be

2614
01:43:04,639 --> 01:43:07,119
one of the basic things to start with so

2615
01:43:07,119 --> 01:43:09,199
yeah it's going to start to stay

2616
01:43:09,199 --> 01:43:13,199
just people will try to adapt to it

2617
01:43:13,199 --> 01:43:16,400
yes i think also um there is there are a

2618
01:43:16,400 --> 01:43:17,920
lot of hybrid

2619
01:43:17,920 --> 01:43:20,960
cloud setups or hybrid and on-prem

2620
01:43:20,960 --> 01:43:23,199
and this is also one of the challenging

2621
01:43:23,199 --> 01:43:25,199
points of having for example the cloud

2622
01:43:25,199 --> 01:43:26,560
setup on terraform

2623
01:43:26,560 --> 01:43:30,159
and then go back to manual processes and

2624
01:43:30,159 --> 01:43:32,080
console activity again activities

2625
01:43:32,080 --> 01:43:34,480
through concert by infrastructure admins

2626
01:43:34,480 --> 01:43:36,080
so they would prefer to do it all the

2627
01:43:36,080 --> 01:43:38,000
same way uh

2628
01:43:38,000 --> 01:43:39,440
i think this is also one of the points

2629
01:43:39,440 --> 01:43:42,000
where not only native cloud applications

2630
01:43:42,000 --> 01:43:44,400
or setups we have a lot of hybrid uh

2631
01:43:44,400 --> 01:43:46,480
we're still in the transition based

2632
01:43:46,480 --> 01:43:48,799
phase

2633
01:43:49,440 --> 01:43:52,320
for yeah this one i i'm not rich i

2634
01:43:52,320 --> 01:43:54,639
haven't really implemented the

2635
01:43:54,639 --> 01:43:57,119
on-prem uh infrastructure using perform

2636
01:43:57,119 --> 01:43:57,679
before

2637
01:43:57,679 --> 01:44:00,960
so i'm not really sure about it but uh

2638
01:44:00,960 --> 01:44:04,000
like for if you would like to go with

2639
01:44:04,000 --> 01:44:05,760
plot i think this is the best way with

2640
01:44:05,760 --> 01:44:06,320
their phone

2641
01:44:06,320 --> 01:44:09,600
but uh for emperor on-prem i haven't you

2642
01:44:09,600 --> 01:44:11,280
even hear the feedback before from

2643
01:44:11,280 --> 01:44:12,960
michael's about uh

2644
01:44:12,960 --> 01:44:15,280
like success cases with uh on-prem with

2645
01:44:15,280 --> 01:44:16,480
their phone

2646
01:44:16,480 --> 01:44:21,839
it's on-prem people go more with ansible

2647
01:44:21,920 --> 01:44:24,239
yes

2648
01:44:25,199 --> 01:44:29,519
okay i think that's it for us

2649
01:44:29,840 --> 01:44:32,400
thank you everyone everyone and uh

2650
01:44:32,400 --> 01:44:34,080
hopefully this one will be recorded

2651
01:44:34,080 --> 01:44:37,199
and i will try to post it uh on my

2652
01:44:37,199 --> 01:44:40,560
channel sure thank you after the event

2653
01:44:40,560 --> 01:44:41,360
we will share

2654
01:44:41,360 --> 01:44:44,960
uh each session on our youtube channel

2655
01:44:44,960 --> 01:44:48,159
thank you very much yeah thank you very

2656
01:44:48,159 --> 01:44:48,719
much

2657
01:44:48,719 --> 01:44:51,360
thank you so much

2658
01:44:55,520 --> 01:44:59,280
yeah we'll take our break yeah yes

2659
01:44:59,360 --> 01:45:03,199
yeah we're coming back on

2660
01:45:03,199 --> 01:45:06,960
8 15. now at 8 we can come back

2661
01:45:06,960 --> 01:45:10,159
if it's like at 8 with the mohammed

2662
01:45:10,159 --> 01:45:13,599
regarding the last session

2663
01:45:27,950 --> 01:45:29,679
[Music]

2664
01:45:29,679 --> 01:45:45,840
if five minutes yeah

2665
01:50:26,639 --> 01:50:30,080
um i think we can start now yeah draw me

2666
01:50:30,080 --> 01:50:33,199
mohammed you're with us

2667
01:50:36,840 --> 01:50:39,840
presenting

2668
01:50:50,840 --> 01:50:53,840
foreign

2669
01:51:24,719 --> 01:51:27,199
to do testing to do experimenting things

2670
01:51:27,199 --> 01:51:28,480
learning things or

2671
01:51:28,480 --> 01:51:32,159
a cloud it will be beneficial

2672
01:51:32,159 --> 01:51:34,879
for any

2673
01:53:05,440 --> 01:53:08,880
security engineer never done automated

2674
01:53:08,880 --> 01:53:12,400
scanning or automated for his internal

2675
01:53:12,400 --> 01:53:15,360
any testing or protecting things

2676
01:53:15,360 --> 01:53:16,159
absolutely

2677
01:53:16,159 --> 01:53:18,719
it will help

2678
01:53:20,740 --> 01:53:23,818
[Music]

2679
01:53:50,840 --> 01:53:52,840
[Music]

2680
01:53:52,840 --> 01:53:55,840
um

2681
01:53:57,020 --> 01:54:00,069
[Music]

2682
01:54:36,440 --> 01:54:39,660
[Music]

2683
01:55:02,840 --> 01:55:05,840
foreign

2684
01:55:47,180 --> 01:55:50,270
[Music]

2685
01:56:11,760 --> 01:56:15,840
specialist here

2686
01:56:37,920 --> 01:56:41,679
databases will php stack web services

2687
01:56:41,679 --> 01:56:42,000
will

2688
01:56:42,000 --> 01:56:45,760
caching will key values

2689
01:56:54,840 --> 01:56:57,840
uh

2690
01:57:08,050 --> 01:57:11,169
[Music]

2691
01:57:36,840 --> 01:57:39,840
foreign

2692
01:57:44,240 --> 01:57:47,349
[Music]

2693
01:58:00,239 --> 01:58:02,159
knowing is not understanding there is a

2694
01:58:02,159 --> 01:58:03,679
great difference between knowing and

2695
01:58:03,679 --> 01:58:04,560
understanding

2696
01:58:04,560 --> 01:58:06,239
you can know a lot about something and

2697
01:58:06,239 --> 01:58:09,360
not really understand it

2698
01:58:18,840 --> 01:58:21,840
is

2699
01:58:52,870 --> 01:58:55,979
[Music]

2700
01:59:21,360 --> 01:59:24,648
[Music]

2701
01:59:32,740 --> 01:59:35,898
[Music]

2702
01:59:39,120 --> 01:59:43,779
[Music]

2703
02:00:38,450 --> 02:00:41,608
[Music]

2704
02:00:52,880 --> 02:00:55,840
cloud

2705
02:01:07,350 --> 02:01:10,489
[Music]

2706
02:01:20,840 --> 02:01:23,840
m

2707
02:01:34,840 --> 02:01:37,840
https

2708
02:01:37,990 --> 02:01:41,160
[Music]

2709
02:02:40,490 --> 02:02:43,590
[Music]

2710
02:03:01,320 --> 02:03:04,398
[Music]

2711
02:03:26,880 --> 02:03:29,840
security

2712
02:04:36,840 --> 02:04:39,840
foreign

2713
02:05:04,840 --> 02:05:07,840
operations

2714
02:05:35,900 --> 02:05:39,200
[Music]

2715
02:06:25,300 --> 02:06:28,459
[Music]

2716
02:06:29,840 --> 02:06:31,920
a

2717
02:06:51,880 --> 02:06:54,919
[Music]

2718
02:07:06,070 --> 02:07:09,290
[Music]

2719
02:07:38,840 --> 02:07:41,840
foreign

2720
02:07:51,650 --> 02:07:54,759
[Music]

2721
02:08:02,500 --> 02:08:05,539
[Music]

2722
02:08:06,840 --> 02:08:09,840
uh

2723
02:08:34,840 --> 02:08:37,840
um

2724
02:09:02,960 --> 02:09:06,079
dot zero twenty four ohio network

2725
02:09:06,079 --> 02:09:09,280
one nine two one six eight uh one dot

2726
02:09:09,280 --> 02:09:13,520
zero slash twenty four oh when networks

2727
02:09:13,520 --> 02:09:16,239
router one seven two sixteen one dot

2728
02:09:16,239 --> 02:09:16,719
zero

2729
02:09:16,719 --> 02:09:19,040
slash

2730
02:09:23,460 --> 02:09:26,529
[Music]

2731
02:09:30,840 --> 02:09:33,270
foreign

2732
02:09:33,270 --> 02:09:36,439
[Music]

2733
02:09:44,840 --> 02:09:47,840
foreign

2734
02:10:12,840 --> 02:10:15,840
foreign

2735
02:10:40,880 --> 02:10:43,840
foreign

2736
02:10:54,840 --> 02:10:57,840
is

2737
02:11:36,840 --> 02:11:39,840
foreign

2738
02:13:00,840 --> 02:13:03,840
or

2739
02:14:24,840 --> 02:14:27,840
um

2740
02:14:52,880 --> 02:14:55,840
m

2741
02:16:07,250 --> 02:16:10,350
[Music]

2742
02:16:30,840 --> 02:16:33,840
yes

2743
02:17:46,910 --> 02:17:50,228
[Music]

2744
02:18:15,080 --> 02:18:18,180
[Music]

2745
02:19:18,840 --> 02:19:21,840
infrastructure

2746
02:20:00,840 --> 02:20:03,840
allah

2747
02:21:38,840 --> 02:21:41,840
um

2748
02:21:45,190 --> 02:21:48,219
[Music]

2749
02:21:50,960 --> 02:21:54,109
[Music]

2750
02:22:25,680 --> 02:22:28,770
[Music]

2751
02:22:48,840 --> 02:22:51,840
foreign

2752
02:23:16,840 --> 02:23:19,840
uh

2753
02:23:50,390 --> 02:23:53,510
[Music]

2754
02:24:20,470 --> 02:24:23,590
[Music]

2755
02:24:41,140 --> 02:24:44,199
[Music]

2756
02:25:09,520 --> 02:25:13,359
internet baghdado zaya service

2757
02:25:13,359 --> 02:25:15,720
free services sales canadian shield

2758
02:25:15,720 --> 02:25:17,600
modular

2759
02:25:17,600 --> 02:25:20,280
office services zymothelen

2760
02:25:20,280 --> 02:25:22,000
cleanbrowsing.org

2761
02:25:22,000 --> 02:25:24,880
fandom features

2762
02:26:19,120 --> 02:26:21,920
be bilberton andy and dildon here one

2763
02:26:21,920 --> 02:26:23,439
nine two one six eight

2764
02:26:23,439 --> 02:26:28,479
zero slash twenty four the coolest

2765
02:26:28,479 --> 02:26:31,279
thermostats

2766
02:27:56,840 --> 02:27:59,840
restrictions

2767
02:30:30,880 --> 02:30:33,839
apache

2768
02:31:40,840 --> 02:31:43,840
who

2769
02:32:08,710 --> 02:32:11,830
[Music]

2770
02:32:36,840 --> 02:32:39,840
foreign

2771
02:32:50,840 --> 02:32:53,840
x

2772
02:33:04,319 --> 02:33:07,840
i thought

2773
02:33:17,359 --> 02:33:21,840
hi server engineer

2774
02:33:33,760 --> 02:33:35,840
foreign

2775
02:34:15,680 --> 02:34:18,319
destroy

2776
02:34:20,080 --> 02:34:22,399
yes

2777
02:34:26,720 --> 02:34:31,840
they're down

2778
02:34:42,840 --> 02:34:45,840
okay

2779
02:35:24,840 --> 02:35:27,840
flexibility

2780
02:35:37,140 --> 02:35:38,840
[Music]

2781
02:35:38,840 --> 02:35:41,840
is

2782
02:35:53,520 --> 02:35:55,520
publicly accessible pianic

2783
02:35:55,520 --> 02:35:58,240
recommendations

2784
02:35:59,120 --> 02:36:01,920
infrastructure bootstrap the

2785
02:36:01,920 --> 02:36:03,840
infrastructure industry must and ips

2786
02:36:03,840 --> 02:36:05,359
only accessible by

2787
02:36:05,359 --> 02:36:09,840
the load balancer and then the load

2788
02:36:12,330 --> 02:36:15,379
[Music]

2789
02:36:34,840 --> 02:36:37,840
is

2790
02:36:48,840 --> 02:36:51,840
foreign

2791
02:37:11,040 --> 02:37:14,319
and still use one wi-fi ssid

2792
02:37:14,319 --> 02:37:16,319
to connect to these devices belonging to

2793
02:37:16,319 --> 02:37:19,840
these finances

2794
02:37:59,060 --> 02:38:02,128
[Music]

2795
02:38:06,130 --> 02:38:09,259
[Music]

2796
02:38:43,100 --> 02:38:46,149
[Music]

2797
02:38:50,310 --> 02:38:53,560
[Music]

2798
02:38:54,840 --> 02:38:56,130
is

2799
02:38:56,130 --> 02:38:59,199
[Music]

2800
02:39:50,840 --> 02:39:53,840
foreign

2801
02:40:19,120 --> 02:40:22,479
tabayam aesthetic ipo dhcp ala

2802
02:40:22,479 --> 02:40:27,039
and network 192.168.0.

2803
02:40:32,840 --> 02:40:35,840
uh

2804
02:40:39,900 --> 02:40:42,940
[Music]

2805
02:40:46,880 --> 02:40:49,839
is

2806
02:41:14,840 --> 02:41:17,840
um

2807
02:41:28,840 --> 02:41:31,840
canadian

2808
02:41:42,840 --> 02:41:45,840
um

2809
02:42:11,200 --> 02:42:13,439
access list tool controlling what you

2810
02:42:13,439 --> 02:42:16,479
expose from your network

2811
02:42:18,880 --> 02:42:21,170
important internally and if you smart

2812
02:42:21,170 --> 02:42:22,560
[Music]

2813
02:42:22,560 --> 02:42:25,359
no you can say specific router number

2814
02:42:25,359 --> 02:42:25,680
from

2815
02:42:25,680 --> 02:42:28,000
isb in jordan within the search also

2816
02:42:28,000 --> 02:42:29,359
then dot io

2817
02:42:29,359 --> 02:42:32,080
we had this kind of router marufil

2818
02:42:32,080 --> 02:42:34,000
management interface via default hard

2819
02:42:34,000 --> 02:42:36,399
coded credentials

2820
02:42:36,399 --> 02:42:40,160
if you expose your your management uh

2821
02:42:40,160 --> 02:42:42,880
interface the external we couldn't

2822
02:42:42,880 --> 02:42:45,358
accessible

2823
02:42:46,000 --> 02:42:48,240
but this is very critical you can

2824
02:42:48,240 --> 02:42:51,920
accessibility you can see what's the

2825
02:42:52,840 --> 02:42:55,840
password

2826
02:43:33,350 --> 02:43:36,419
[Music]

2827
02:43:48,840 --> 02:43:51,840
foreign

2828
02:44:02,840 --> 02:44:05,840
foreign

2829
02:44:22,330 --> 02:44:25,370
[Music]

2830
02:45:03,740 --> 02:45:07,000
[Music]

2831
02:45:12,840 --> 02:45:15,840
absolutely

2832
02:46:22,840 --> 02:46:25,840
authentication

2833
02:46:46,440 --> 02:46:49,569
[Music]

2834
02:47:32,840 --> 02:47:35,840
um

2835
02:47:46,840 --> 02:47:49,840
foreign

2836
02:48:49,200 --> 02:48:50,720
like the camera can only talk to

2837
02:48:50,720 --> 02:48:52,240
specific ports

2838
02:48:52,240 --> 02:48:55,920
uh well you don't care about that in

2839
02:48:56,840 --> 02:48:59,840
general

2840
02:49:10,840 --> 02:49:13,840
um

2841
02:49:38,840 --> 02:49:41,840
um

2842
02:49:50,200 --> 02:49:55,159
[Music]

2843
02:50:10,080 --> 02:50:13,040
certificates right private keys can they

2844
02:50:13,040 --> 02:50:16,560
still access your home down

2845
02:50:17,359 --> 02:50:19,920
access build configuration remotely md

2846
02:50:19,920 --> 02:50:20,880
bus

2847
02:50:20,880 --> 02:50:23,358
outside

2848
02:50:48,840 --> 02:50:51,840
gateway

2849
02:51:12,790 --> 02:51:15,829
[Music]

2850
02:51:20,240 --> 02:51:22,960
would you recommend using raspberry pi

2851
02:51:22,960 --> 02:51:24,000
clusters

2852
02:51:24,000 --> 02:51:27,359
for vmware esx es65 projects and

2853
02:51:27,359 --> 02:51:29,040
training

2854
02:51:29,040 --> 02:51:33,120
would you recommend using raspberry pi's

2855
02:51:44,840 --> 02:51:47,840
foreign

2856
02:52:15,710 --> 02:52:18,839
[Music]

2857
02:52:26,840 --> 02:52:29,840
is

2858
02:52:39,439 --> 02:52:43,840
come on

2859
02:53:20,240 --> 02:53:23,279
however it was really pleasure to have

2860
02:53:23,279 --> 02:53:23,600
you

2861
02:53:23,600 --> 02:53:26,560
and and we'll still have one another day

2862
02:53:26,560 --> 02:53:27,520
tomorrow tomorrow

2863
02:53:27,520 --> 02:53:30,479
for the workshops

2864
02:53:31,200 --> 02:53:34,160
only registered

2865
02:53:34,319 --> 02:53:38,960
two workshops come on

2866
02:53:50,840 --> 02:53:53,840
is

2867
02:54:27,310 --> 02:54:30,410
[Music]

2868
02:54:32,840 --> 02:54:35,840
foreign

2869
02:55:00,840 --> 02:55:03,840
awesome

2870
02:55:09,920 --> 02:55:12,000
you

