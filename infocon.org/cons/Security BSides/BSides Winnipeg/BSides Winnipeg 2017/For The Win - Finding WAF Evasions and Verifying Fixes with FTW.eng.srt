1
00:00:00,000 --> 00:00:13,860
<font color="#CCCCCC">hey no wait everybody hurry alright so I</font>

2
00:00:11,010 --> 00:00:17,160
am<font color="#CCCCCC"> not</font><font color="#E5E5E5"> stop so I know my shirt looks a</font>

3
00:00:13,860 --> 00:00:18,539
lot like the stopper shirts don't if you

4
00:00:17,160 --> 00:00:22,619
<font color="#E5E5E5">have a problem don't come see me because</font>

5
00:00:18,539 --> 00:00:24,810
I won't<font color="#E5E5E5"> be able to help you so as</font>

6
00:00:22,619 --> 00:00:26,730
mentioned<font color="#E5E5E5"> my name is Christian Braun and</font>

7
00:00:24,810 --> 00:00:28,859
I'm gonna be<font color="#E5E5E5"> talking to you about some</font>

8
00:00:26,730 --> 00:00:30,480
<font color="#CCCCCC">of the</font><font color="#E5E5E5"> testing and kind of DevOps</font>

9
00:00:28,859 --> 00:00:35,130
related work we're doing around our

10
00:00:30,480 --> 00:00:36,690
laughs fastly so just quickly I'll just

11
00:00:35,130 --> 00:00:38,550
kind of go through so I'll<font color="#E5E5E5"> introduce</font>

12
00:00:36,690 --> 00:00:40,500
myself<font color="#E5E5E5"> I'm not really going to talk</font>

13
00:00:38,550 --> 00:00:43,680
about myself<font color="#CCCCCC"> I mainly focus kind of like</font>

14
00:00:40,500 --> 00:00:45,870
<font color="#E5E5E5">introduce fastly and what we do some of</font>

15
00:00:43,680 --> 00:00:47,309
the design objectives that we had when

16
00:00:45,870 --> 00:00:49,079
we<font color="#CCCCCC"> were designing our laughs</font>

17
00:00:47,309 --> 00:00:51,839
implementation because we had a few

18
00:00:49,079 --> 00:00:56,610
pretty odd requirements I guess you can

19
00:00:51,840 --> 00:00:58,050
say<font color="#E5E5E5"> how we source our rules the tool</font>

20
00:00:56,610 --> 00:01:00,960
chain<font color="#E5E5E5"> that we ended up having</font><font color="#CCCCCC"> to write</font>

21
00:00:58,050 --> 00:01:02,399
I'll<font color="#E5E5E5"> get into in some</font><font color="#CCCCCC"> detail</font><font color="#E5E5E5"> the testing</font>

22
00:01:00,960 --> 00:01:04,650
<font color="#CCCCCC">framework that we're using to make sure</font>

23
00:01:02,399 --> 00:01:09,479
that we didn't screw anything<font color="#E5E5E5"> up when we</font>

24
00:01:04,650 --> 00:01:11,070
wrote<font color="#CCCCCC"> our tool chain some of some</font><font color="#E5E5E5"> of the</font>

25
00:01:09,479 --> 00:01:13,110
requirements around<font color="#E5E5E5"> our testing harness</font>

26
00:01:11,070 --> 00:01:16,289
and<font color="#E5E5E5"> then how we're basically integrating</font>

27
00:01:13,110 --> 00:01:18,240
this into<font color="#CCCCCC"> our CI processes and stuff</font>

28
00:01:16,290 --> 00:01:20,420
like that<font color="#E5E5E5"> and finally probably the more</font>

29
00:01:18,240 --> 00:01:22,439
interesting part is what<font color="#E5E5E5"> are some of the</font>

30
00:01:20,420 --> 00:01:26,520
evasions and<font color="#E5E5E5"> vulnerabilities that we</font>

31
00:01:22,439 --> 00:01:28,258
found going<font color="#E5E5E5"> through this process</font><font color="#CCCCCC"> so I've</font>

32
00:01:26,520 --> 00:01:30,179
<font color="#E5E5E5">been I've</font><font color="#CCCCCC"> been around so I know a lot of</font>

33
00:01:28,259 --> 00:01:32,130
people here<font color="#E5E5E5"> I've been doing security</font>

34
00:01:30,180 --> 00:01:36,299
work for<font color="#E5E5E5"> roughly</font><font color="#CCCCCC"> seventeen years</font><font color="#E5E5E5"> mainly</font>

35
00:01:32,130 --> 00:01:38,939
<font color="#E5E5E5">in Winnipeg</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> working all over the</font>

36
00:01:36,299 --> 00:01:42,600
place<font color="#E5E5E5"> really I focus mainly on research</font>

37
00:01:38,939 --> 00:01:45,059
and<font color="#E5E5E5"> development</font><font color="#CCCCCC"> do we</font><font color="#E5E5E5"> lot we do a lot</font><font color="#CCCCCC"> of</font>

38
00:01:42,600 --> 00:01:48,419
<font color="#E5E5E5">research into developing some tools to</font>

39
00:01:45,060 --> 00:01:50,100
secure the fleet<font color="#E5E5E5"> at fastly and proof of</font>

40
00:01:48,420 --> 00:01:55,560
<font color="#E5E5E5">concept exploit development that sort of</font>

41
00:01:50,100 --> 00:01:58,880
thing so<font color="#CCCCCC"> a little</font><font color="#E5E5E5"> bit about fastly we</font>

42
00:01:55,560 --> 00:02:02,490
operate a content delivery network<font color="#E5E5E5"> so</font>

43
00:01:58,880 --> 00:02:03,719
it's we<font color="#E5E5E5"> we have about</font><font color="#CCCCCC"> 43 pops</font><font color="#E5E5E5"> so the way</font>

44
00:02:02,490 --> 00:02:05,429
to<font color="#E5E5E5"> think about a pop is kind of like a</font>

45
00:02:03,719 --> 00:02:08,160
data center but it's<font color="#E5E5E5"> more accurately</font>

46
00:02:05,430 --> 00:02:10,459
<font color="#E5E5E5">like a cage with a bunch of racks and</font>

47
00:02:08,160 --> 00:02:13,620
collocated data centers<font color="#E5E5E5"> around the world</font>

48
00:02:10,459 --> 00:02:15,420
<font color="#CCCCCC">so we're on six</font><font color="#E5E5E5"> different continents</font>

49
00:02:13,620 --> 00:02:18,319
most of our<font color="#CCCCCC"> pops are either on or</font><font color="#E5E5E5"> very</font>

50
00:02:15,420 --> 00:02:21,089
<font color="#E5E5E5">close to internet exchanges we do about</font>

51
00:02:18,319 --> 00:02:23,310
around 270 direct peering relationships

52
00:02:21,090 --> 00:02:27,930
with<font color="#E5E5E5"> various organizations to kind of</font>

53
00:02:23,310 --> 00:02:30,180
optimize<font color="#E5E5E5"> routing there currently are</font><font color="#CCCCCC"> our</font>

54
00:02:27,930 --> 00:02:32,250
<font color="#E5E5E5">capacity is we can probably we can move</font>

55
00:02:30,180 --> 00:02:35,340
<font color="#E5E5E5">about 17</font><font color="#CCCCCC"> and a half terabits a second</font>

56
00:02:32,250 --> 00:02:37,920
globally and we process<font color="#E5E5E5"> around we can do</font>

57
00:02:35,340 --> 00:02:40,950
up to<font color="#E5E5E5"> about</font><font color="#CCCCCC"> 330 million</font><font color="#E5E5E5"> requests per</font>

58
00:02:37,920 --> 00:02:44,578
second so you can<font color="#CCCCCC"> go on our site</font><font color="#E5E5E5"> and we</font>

59
00:02:40,950 --> 00:02:45,959
you know<font color="#CCCCCC"> we kind</font><font color="#E5E5E5"> of show what we're what</font>

60
00:02:44,579 --> 00:02:47,670
<font color="#E5E5E5">the current loading is it's</font><font color="#CCCCCC"> usually</font>

61
00:02:45,959 --> 00:02:49,500
anywhere<font color="#E5E5E5"> from six to six million</font>

62
00:02:47,670 --> 00:02:51,179
requests<font color="#E5E5E5"> seven million requests per</font>

63
00:02:49,500 --> 00:02:52,379
second<font color="#CCCCCC"> during</font><font color="#E5E5E5"> election night I</font><font color="#CCCCCC"> think</font>

64
00:02:51,180 --> 00:02:55,560
it's shot up to you about<font color="#E5E5E5"> 11</font><font color="#CCCCCC"> or 12</font>

65
00:02:52,379 --> 00:02:56,220
<font color="#CCCCCC">million requests per second</font><font color="#E5E5E5"> so we</font><font color="#CCCCCC"> do</font>

66
00:02:55,560 --> 00:02:59,879
things fast

67
00:02:56,220 --> 00:03:01,470
hence<font color="#CCCCCC"> named fastly so these on</font><font color="#E5E5E5"> on here</font>

68
00:02:59,879 --> 00:03:03,450
we these<font color="#CCCCCC"> are kind of</font><font color="#E5E5E5"> like or where our</font>

69
00:03:01,470 --> 00:03:05,010
current pops are and then the blue dots

70
00:03:03,450 --> 00:03:08,909
are<font color="#CCCCCC"> where we planning on planning on</font>

71
00:03:05,010 --> 00:03:10,858
<font color="#CCCCCC">increasing capacity</font><font color="#E5E5E5"> in the future so a</font>

72
00:03:08,909 --> 00:03:12,720
bit about<font color="#CCCCCC"> our capabilities so in</font>

73
00:03:10,859 --> 00:03:15,209
<font color="#E5E5E5">addition</font><font color="#CCCCCC"> to being a content delivery</font>

74
00:03:12,720 --> 00:03:16,739
network<font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of as a byproduct of how</font>

75
00:03:15,209 --> 00:03:20,730
our network is structured we also do

76
00:03:16,739 --> 00:03:22,079
DDoS mitigation<font color="#CCCCCC"> and looking at building</font>

77
00:03:20,730 --> 00:03:24,959
kind<font color="#E5E5E5"> of like a lot of</font><font color="#CCCCCC"> security</font>

78
00:03:22,079 --> 00:03:27,120
technologies into our<font color="#E5E5E5"> edge so the laughs</font>

79
00:03:24,959 --> 00:03:30,810
was a big priority<font color="#E5E5E5"> for us</font>

80
00:03:27,120 --> 00:03:32,370
but we had we had it wasn't<font color="#E5E5E5"> as easy as</font>

81
00:03:30,810 --> 00:03:34,200
<font color="#CCCCCC">just</font><font color="#E5E5E5"> basically setting up a cluster</font><font color="#CCCCCC"> of</font>

82
00:03:32,370 --> 00:03:37,169
like<font color="#E5E5E5"> more security systems and rerouting</font>

83
00:03:34,200 --> 00:03:38,940
everything<font color="#E5E5E5"> through there and I'll</font>

84
00:03:37,169 --> 00:03:41,129
explain<font color="#E5E5E5"> I'll explain a little bit why we</font>

85
00:03:38,940 --> 00:03:42,810
didn't<font color="#E5E5E5"> want to do that so some of our</font>

86
00:03:41,129 --> 00:03:44,459
kind<font color="#E5E5E5"> of key</font><font color="#CCCCCC"> objective is the integration</font>

87
00:03:42,810 --> 00:03:46,650
<font color="#CCCCCC">with our existing platform so one of the</font>

88
00:03:44,459 --> 00:03:49,260
big things that<font color="#E5E5E5"> is really important for</font>

89
00:03:46,650 --> 00:03:51,209
us and<font color="#E5E5E5"> I guess for our customers is kind</font>

90
00:03:49,260 --> 00:03:53,280
<font color="#E5E5E5">of the</font><font color="#CCCCCC"> real-time</font><font color="#E5E5E5"> aspect of the service</font>

91
00:03:51,209 --> 00:03:56,010
<font color="#CCCCCC">so if you make a</font><font color="#E5E5E5"> change it should be</font>

92
00:03:53,280 --> 00:03:57,419
<font color="#CCCCCC">reflected globally</font><font color="#E5E5E5"> immediately we don't</font>

93
00:03:56,010 --> 00:04:00,120
want like<font color="#CCCCCC"> if you're</font><font color="#E5E5E5"> gonna go</font><font color="#CCCCCC"> and update</font>

94
00:03:57,419 --> 00:04:02,069
<font color="#E5E5E5">like</font><font color="#CCCCCC"> a policy</font><font color="#E5E5E5"> to you know it have to</font>

95
00:04:00,120 --> 00:04:04,650
like<font color="#E5E5E5"> roll through all the</font><font color="#CCCCCC"> pumps globally</font>

96
00:04:02,069 --> 00:04:06,179
<font color="#E5E5E5">over six hours so having things happen</font>

97
00:04:04,650 --> 00:04:09,419
immediately<font color="#E5E5E5"> is really important for us</font>

98
00:04:06,180 --> 00:04:11,250
the<font color="#CCCCCC"> Flex flexibility so</font><font color="#E5E5E5"> we support a</font>

99
00:04:09,419 --> 00:04:16,019
<font color="#E5E5E5">number of different</font><font color="#CCCCCC"> protocols so things</font>

100
00:04:11,250 --> 00:04:18,120
like ipv6<font color="#E5E5E5"> HTTP</font><font color="#CCCCCC"> - we want we want to make</font>

101
00:04:16,019 --> 00:04:20,459
sure<font color="#E5E5E5"> that whatever things like TLS we</font>

102
00:04:18,120 --> 00:04:22,800
want to make sure<font color="#E5E5E5"> that whatever protocol</font>

103
00:04:20,459 --> 00:04:24,539
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> using to kind of hit</font><font color="#CCCCCC"> the edge is</font>

104
00:04:22,800 --> 00:04:25,770
<font color="#E5E5E5">actually going to be still subject to</font>

105
00:04:24,539 --> 00:04:27,330
the the<font color="#CCCCCC"> Web Application Firewall</font>

106
00:04:25,770 --> 00:04:29,909
<font color="#E5E5E5">functionality</font>

107
00:04:27,330 --> 00:04:31,530
and then reduce complexity<font color="#E5E5E5"> so the</font>

108
00:04:29,909 --> 00:04:33,090
customer environments are already super

109
00:04:31,530 --> 00:04:34,830
<font color="#CCCCCC">complicated we don't we didn't want to</font>

110
00:04:33,090 --> 00:04:37,378
<font color="#CCCCCC">add</font><font color="#E5E5E5"> more bumps in</font><font color="#CCCCCC"> the wire so to speak</font>

111
00:04:34,830 --> 00:04:38,909
<font color="#E5E5E5">so a lot of customers will have their</font>

112
00:04:37,379 --> 00:04:40,560
load balancing intrusion prevention

113
00:04:38,909 --> 00:04:41,819
systems all this stuff in<font color="#E5E5E5"> front of their</font>

114
00:04:40,560 --> 00:04:44,009
origin<font color="#E5E5E5"> servers so</font><font color="#CCCCCC"> we didn't want to</font>

115
00:04:41,819 --> 00:04:49,020
<font color="#CCCCCC">basically I'd yet another area where we</font>

116
00:04:44,009 --> 00:04:50,520
<font color="#E5E5E5">would</font><font color="#CCCCCC"> have to debug</font><font color="#E5E5E5"> something so without</font>

117
00:04:49,020 --> 00:04:52,530
high quality rules<font color="#CCCCCC"> yourwife</font>

118
00:04:50,520 --> 00:04:54,870
<font color="#CCCCCC">implementation is going to suck I'm</font>

119
00:04:52,530 --> 00:04:56,758
sorry but it's true<font color="#E5E5E5"> so we ended up</font>

120
00:04:54,870 --> 00:04:58,560
<font color="#E5E5E5">having to source our rules from a number</font>

121
00:04:56,759 --> 00:05:00,810
of<font color="#CCCCCC"> different a number of different</font><font color="#E5E5E5"> areas</font>

122
00:04:58,560 --> 00:05:03,690
<font color="#CCCCCC">the one one of the kind of key ones that</font>

123
00:05:00,810 --> 00:05:06,840
<font color="#E5E5E5">we use is the</font><font color="#CCCCCC"> ol</font><font color="#E5E5E5"> ASP core rule set and</font>

124
00:05:03,690 --> 00:05:08,219
we're currently on version<font color="#E5E5E5"> 3 so it's</font>

125
00:05:06,840 --> 00:05:11,340
open<font color="#CCCCCC"> you can go and check it out they</font>

126
00:05:08,219 --> 00:05:13,110
actually<font color="#CCCCCC"> made a number</font><font color="#E5E5E5"> of really cool</font>

127
00:05:11,340 --> 00:05:15,210
<font color="#CCCCCC">improvements between two so if you're on</font>

128
00:05:13,110 --> 00:05:16,979
<font color="#CCCCCC">two right now I highly recommend you go</font>

129
00:05:15,210 --> 00:05:18,960
and<font color="#E5E5E5"> take a look at</font><font color="#CCCCCC"> three there's a</font>

130
00:05:16,979 --> 00:05:22,258
github<font color="#E5E5E5"> link there we also kind of</font>

131
00:05:18,960 --> 00:05:24,539
maintain our<font color="#E5E5E5"> own rules and the reason</font>

132
00:05:22,259 --> 00:05:26,460
why we do<font color="#E5E5E5"> this is there's</font><font color="#CCCCCC"> just attacks</font>

133
00:05:24,539 --> 00:05:29,669
that<font color="#CCCCCC"> are kind of specific</font><font color="#E5E5E5"> to content</font>

134
00:05:26,460 --> 00:05:31,680
delivery related like CDN related things

135
00:05:29,669 --> 00:05:32,880
<font color="#E5E5E5">and then if there's certain attacks that</font>

136
00:05:31,680 --> 00:05:34,259
we're seeing that<font color="#E5E5E5"> are being actively</font>

137
00:05:32,880 --> 00:05:36,090
exploited in the wild and we<font color="#E5E5E5"> want to</font>

138
00:05:34,259 --> 00:05:38,310
<font color="#E5E5E5">rapidly to play something then we</font>

139
00:05:36,090 --> 00:05:40,500
basically would use our our<font color="#E5E5E5"> own rules</font>

140
00:05:38,310 --> 00:05:41,759
for<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and then we also have a third</font>

141
00:05:40,500 --> 00:05:47,219
<font color="#E5E5E5">party like a private vendor who's</font>

142
00:05:41,759 --> 00:05:49,440
developing stuff for us as well so all

143
00:05:47,219 --> 00:05:52,800
these if you'll note are basically<font color="#CCCCCC"> used</font>

144
00:05:49,440 --> 00:05:55,199
the<font color="#CCCCCC"> sec</font><font color="#E5E5E5"> the mod SEC SEC rule format and</font>

145
00:05:52,800 --> 00:06:00,810
we'll look at what<font color="#CCCCCC"> that looks like in a</font>

146
00:05:55,199 --> 00:06:02,699
bit<font color="#E5E5E5"> so long story</font><font color="#CCCCCC"> short we we needed a</font>

147
00:06:00,810 --> 00:06:04,949
<font color="#CCCCCC">way to basically translate mod security</font>

148
00:06:02,699 --> 00:06:07,050
<font color="#CCCCCC">sec rule format into a way</font><font color="#E5E5E5"> that it's</font>

149
00:06:04,949 --> 00:06:10,259
actually consumable wire by our platform

150
00:06:07,050 --> 00:06:13,979
and to do that we ended up engineering<font color="#E5E5E5"> a</font>

151
00:06:10,259 --> 00:06:16,319
custom tool chain so this<font color="#E5E5E5"> is an example</font>

152
00:06:13,979 --> 00:06:18,870
<font color="#CCCCCC">of what a</font><font color="#E5E5E5"> sec rule format looks like</font>

153
00:06:16,319 --> 00:06:21,240
it's<font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> straightforward I mean you</font>

154
00:06:18,870 --> 00:06:24,090
basically you can specify<font color="#CCCCCC"> certain</font>

155
00:06:21,240 --> 00:06:26,789
collections<font color="#CCCCCC"> so this this particular rule</font>

156
00:06:24,090 --> 00:06:29,039
is<font color="#E5E5E5"> like a chain rule so it's basically</font>

157
00:06:26,789 --> 00:06:31,349
will say look<font color="#E5E5E5"> for this and this and it's</font>

158
00:06:29,039 --> 00:06:34,710
kind of how<font color="#CCCCCC"> modsecurity</font><font color="#E5E5E5"> accomplishes</font>

159
00:06:31,349 --> 00:06:36,870
<font color="#E5E5E5">that</font><font color="#CCCCCC"> you know you specify which part of</font>

160
00:06:34,710 --> 00:06:38,698
<font color="#E5E5E5">the request really that you want to look</font>

161
00:06:36,870 --> 00:06:39,800
for and<font color="#E5E5E5"> then usually</font><font color="#CCCCCC"> you follow up</font><font color="#E5E5E5"> with</font>

162
00:06:38,699 --> 00:06:43,159
like some kind of a

163
00:06:39,800 --> 00:06:45,139
<font color="#CCCCCC">an operator or</font><font color="#E5E5E5"> pattern that's indicative</font>

164
00:06:43,159 --> 00:06:47,330
of<font color="#E5E5E5"> like of an attack that's pretty</font>

165
00:06:45,139 --> 00:06:49,699
<font color="#E5E5E5">straightforward</font><font color="#CCCCCC"> so but</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is like as</font>

166
00:06:47,330 --> 00:06:54,409
it<font color="#E5E5E5"> was we wasn't really going to be</font>

167
00:06:49,699 --> 00:06:55,970
<font color="#CCCCCC">useful for us</font><font color="#E5E5E5"> so this</font><font color="#CCCCCC"> is kind of like we</font>

168
00:06:54,409 --> 00:06:58,310
are platformed on something called

169
00:06:55,970 --> 00:07:00,080
varnish we forked it<font color="#E5E5E5"> years back change</font>

170
00:06:58,310 --> 00:07:02,539
the crap out of it<font color="#E5E5E5"> there's no</font><font color="#CCCCCC"> way that</font>

171
00:07:00,080 --> 00:07:04,099
<font color="#CCCCCC">anything is</font><font color="#E5E5E5"> really useful by the like</font>

172
00:07:02,539 --> 00:07:05,599
would<font color="#E5E5E5"> be usable by</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> open-source</font>

173
00:07:04,099 --> 00:07:08,030
community<font color="#CCCCCC"> unless you're content</font><font color="#E5E5E5"> delivery</font>

174
00:07:05,599 --> 00:07:09,889
<font color="#E5E5E5">network</font><font color="#CCCCCC"> but it's largely based on</font>

175
00:07:08,030 --> 00:07:11,628
something called<font color="#CCCCCC"> VCL which is called the</font>

176
00:07:09,889 --> 00:07:13,460
varnish configuration language it's

177
00:07:11,629 --> 00:07:16,969
basically a domain-specific language

178
00:07:13,460 --> 00:07:19,430
that allows our customers to have like

179
00:07:16,969 --> 00:07:21,710
<font color="#E5E5E5">very</font><font color="#CCCCCC"> granular control over</font><font color="#E5E5E5"> caching</font>

180
00:07:19,430 --> 00:07:24,440
<font color="#CCCCCC">policy so it's cut</font><font color="#E5E5E5"> it's kind of</font>

181
00:07:21,710 --> 00:07:26,180
<font color="#E5E5E5">reminiscent</font><font color="#CCCCCC"> of see</font><font color="#E5E5E5"> what happens is this</font>

182
00:07:24,440 --> 00:07:28,270
will<font color="#CCCCCC"> actually get translated</font><font color="#E5E5E5"> this will</font>

183
00:07:26,180 --> 00:07:31,099
<font color="#E5E5E5">actually get compiled into C and then</font>

184
00:07:28,270 --> 00:07:36,469
basically loaded as a basically a shared

185
00:07:31,099 --> 00:07:38,719
<font color="#CCCCCC">object so it's it's</font><font color="#E5E5E5"> very fast so when</font>

186
00:07:36,469 --> 00:07:41,330
we're when<font color="#E5E5E5"> we're writing</font><font color="#CCCCCC"> so a lot of</font>

187
00:07:38,719 --> 00:07:43,849
<font color="#E5E5E5">people think this is</font><font color="#CCCCCC"> very kind of risky</font>

188
00:07:41,330 --> 00:07:45,440
<font color="#E5E5E5">trying to replicate functionality of</font>

189
00:07:43,849 --> 00:07:47,210
tools that<font color="#E5E5E5"> are already out</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> and</font>

190
00:07:45,440 --> 00:07:48,740
there's a lot<font color="#E5E5E5"> of things I can go wrong</font>

191
00:07:47,210 --> 00:07:50,690
<font color="#CCCCCC">especially since we're using a rule</font>

192
00:07:48,740 --> 00:07:54,440
format so there is a few<font color="#E5E5E5"> areas that we</font>

193
00:07:50,690 --> 00:07:55,610
were really<font color="#E5E5E5"> worried about and so much</font>

194
00:07:54,440 --> 00:07:57,560
mod security<font color="#E5E5E5"> has something called</font>

195
00:07:55,610 --> 00:07:59,569
transforms so what did the way to think

196
00:07:57,560 --> 00:08:01,729
about a transform is<font color="#CCCCCC"> it's way to kind of</font>

197
00:07:59,569 --> 00:08:04,400
normalize the<font color="#CCCCCC"> data in a</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> that you</font>

198
00:08:01,729 --> 00:08:06,469
<font color="#E5E5E5">don't have to write a bunch of rules</font><font color="#CCCCCC"> to</font>

199
00:08:04,400 --> 00:08:09,440
<font color="#CCCCCC">kind of</font><font color="#E5E5E5"> look</font><font color="#CCCCCC"> for the</font><font color="#E5E5E5"> same attack so for</font>

200
00:08:06,469 --> 00:08:11,210
instance if you were if you had there's

201
00:08:09,440 --> 00:08:14,479
a tool or transform which basically just

202
00:08:11,210 --> 00:08:15,948
converts the data<font color="#E5E5E5"> to to lowercase</font><font color="#CCCCCC"> you</font>

203
00:08:14,479 --> 00:08:17,479
know if you didn't<font color="#E5E5E5"> have that transform</font>

204
00:08:15,949 --> 00:08:19,129
you would need<font color="#E5E5E5"> a rule for</font><font color="#CCCCCC"> oper case and</font>

205
00:08:17,479 --> 00:08:21,199
a rule for<font color="#CCCCCC"> lowercase as an</font><font color="#E5E5E5"> example so</font>

206
00:08:19,129 --> 00:08:23,050
it's a way to kind of normalize that but

207
00:08:21,199 --> 00:08:26,870
there's all kinds of stuff like<font color="#E5E5E5"> you know</font>

208
00:08:23,050 --> 00:08:29,090
<font color="#E5E5E5">decoding JavaScript you know hex</font>

209
00:08:26,870 --> 00:08:32,448
encoding all this kind of stuff<font color="#E5E5E5"> HTML</font>

210
00:08:29,090 --> 00:08:34,159
entity encoding etc<font color="#E5E5E5"> so there's really</font>

211
00:08:32,448 --> 00:08:36,228
important that we actually did things

212
00:08:34,159 --> 00:08:38,529
exactly<font color="#E5E5E5"> the same collections so what a</font>

213
00:08:36,229 --> 00:08:41,630
<font color="#E5E5E5">collection is is if you look at your</font>

214
00:08:38,529 --> 00:08:44,269
request data and a post or<font color="#E5E5E5"> get the query</font>

215
00:08:41,630 --> 00:08:46,430
string<font color="#CCCCCC"> or cookies</font><font color="#E5E5E5"> there's going to be</font>

216
00:08:44,269 --> 00:08:48,350
more than one<font color="#E5E5E5"> of them or headers so what</font>

217
00:08:46,430 --> 00:08:50,930
<font color="#CCCCCC">modsecurity</font><font color="#E5E5E5"> does is kind of combine this</font>

218
00:08:48,350 --> 00:08:53,760
<font color="#E5E5E5">into like a linked</font><font color="#CCCCCC"> list and then</font>

219
00:08:50,930 --> 00:08:55,770
basically<font color="#E5E5E5"> you the operator</font>

220
00:08:53,760 --> 00:08:59,130
will operate on<font color="#E5E5E5"> every element of that</font>

221
00:08:55,770 --> 00:09:00,810
<font color="#CCCCCC">list so how collections are parsed is</font>

222
00:08:59,130 --> 00:09:02,160
also really important we wanted to make

223
00:09:00,810 --> 00:09:04,170
sure<font color="#E5E5E5"> that we didn't screw that</font><font color="#CCCCCC"> up and</font>

224
00:09:02,160 --> 00:09:06,000
then rule<font color="#E5E5E5"> chaining another just kind of</font>

225
00:09:04,170 --> 00:09:08,400
like logical constructs<font color="#CCCCCC"> so there's like</font>

226
00:09:06,000 --> 00:09:10,230
skip<font color="#CCCCCC"> two rules and that kind of stuff</font>

227
00:09:08,400 --> 00:09:12,870
and<font color="#CCCCCC"> kind of inherent</font><font color="#E5E5E5"> and how mod</font>

228
00:09:10,230 --> 00:09:15,000
<font color="#E5E5E5">security works so if we screw up</font>

229
00:09:12,870 --> 00:09:18,330
<font color="#CCCCCC">anything in here</font><font color="#E5E5E5"> we're it would</font>

230
00:09:15,000 --> 00:09:20,190
basically result in embarrassing<font color="#E5E5E5"> laughs</font>

231
00:09:18,330 --> 00:09:24,450
related evasions and<font color="#E5E5E5"> we wanted to avoid</font>

232
00:09:20,190 --> 00:09:25,890
those so<font color="#CCCCCC"> we're testing was absolutely</font>

233
00:09:24,450 --> 00:09:28,440
<font color="#E5E5E5">critical for us that we basically made</font>

234
00:09:25,890 --> 00:09:30,630
sure<font color="#E5E5E5"> that we</font><font color="#CCCCCC"> got everything</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> so the</font>

235
00:09:28,440 --> 00:09:32,430
<font color="#E5E5E5">framework that we</font><font color="#CCCCCC"> use is</font><font color="#E5E5E5"> basically</font>

236
00:09:30,630 --> 00:09:33,930
written<font color="#CCCCCC"> so</font><font color="#E5E5E5"> it's it's it's written in</font>

237
00:09:32,430 --> 00:09:37,859
Python it's called<font color="#E5E5E5"> ftw</font>

238
00:09:33,930 --> 00:09:40,380
written by<font color="#CCCCCC"> a primarily two guys</font><font color="#E5E5E5"> Zach</font>

239
00:09:37,860 --> 00:09:43,260
<font color="#CCCCCC">Allen and Haim Higham who's</font><font color="#E5E5E5"> also the</font>

240
00:09:40,380 --> 00:09:46,770
project<font color="#CCCCCC"> lead for</font><font color="#E5E5E5"> the CRS it was open</font>

241
00:09:43,260 --> 00:09:48,720
source<font color="#E5E5E5"> by fastly in 2017</font><font color="#CCCCCC"> you the way</font>

242
00:09:46,770 --> 00:09:51,600
<font color="#CCCCCC">that</font><font color="#E5E5E5"> it's kind of meant to be used as</font>

243
00:09:48,720 --> 00:09:54,120
<font color="#CCCCCC">you can embed it into your own Python</font>

244
00:09:51,600 --> 00:09:55,680
code<font color="#E5E5E5"> or you can use like it works really</font>

245
00:09:54,120 --> 00:09:57,690
nicely<font color="#E5E5E5"> with a</font><font color="#CCCCCC"> flight</font><font color="#E5E5E5"> test framework as</font>

246
00:09:55,680 --> 00:10:01,109
well<font color="#E5E5E5"> but for what we're doing</font><font color="#CCCCCC"> is we're</font>

247
00:09:57,690 --> 00:10:02,760
actually<font color="#E5E5E5"> just using it as</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> module so</font>

248
00:10:01,110 --> 00:10:04,140
why you framework I get this<font color="#E5E5E5"> question a</font>

249
00:10:02,760 --> 00:10:06,120
<font color="#CCCCCC">lot why don't you guys</font><font color="#E5E5E5"> just use shell</font>

250
00:10:04,140 --> 00:10:08,160
scripts<font color="#E5E5E5"> and curl</font><font color="#CCCCCC"> and all that kind of</font>

251
00:10:06,120 --> 00:10:10,380
stuff<font color="#CCCCCC"> so we</font><font color="#E5E5E5"> needed really granular</font>

252
00:10:08,160 --> 00:10:13,949
control over<font color="#CCCCCC"> the</font><font color="#E5E5E5"> request the original</font>

253
00:10:10,380 --> 00:10:15,960
authors were kind<font color="#E5E5E5"> of going for like kind</font>

254
00:10:13,950 --> 00:10:17,280
<font color="#E5E5E5">of like ask a pea I don't know if people</font>

255
00:10:15,960 --> 00:10:18,990
have<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of played with</font><font color="#E5E5E5"> Scotty but a</font>

256
00:10:17,280 --> 00:10:20,910
way to kind of like<font color="#E5E5E5"> have very granular</font>

257
00:10:18,990 --> 00:10:23,070
control<font color="#CCCCCC"> over the the anatomy of</font><font color="#E5E5E5"> the</font>

258
00:10:20,910 --> 00:10:24,870
request itself<font color="#CCCCCC"> and in some cases we</font>

259
00:10:23,070 --> 00:10:28,530
<font color="#CCCCCC">actually want</font><font color="#E5E5E5"> to violate certain aspects</font>

260
00:10:24,870 --> 00:10:29,480
<font color="#E5E5E5">of the HTTP protocol so send requests</font>

261
00:10:28,530 --> 00:10:31,860
that<font color="#E5E5E5"> would be illegal</font>

262
00:10:29,480 --> 00:10:33,630
<font color="#CCCCCC">based on that</font><font color="#E5E5E5"> standard and a lot of</font>

263
00:10:31,860 --> 00:10:34,950
tools wouldn't let us do that<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we</font>

264
00:10:33,630 --> 00:10:37,380
also<font color="#E5E5E5"> just didn't want to deal with</font>

265
00:10:34,950 --> 00:10:40,020
<font color="#CCCCCC">having to have a bunch</font><font color="#E5E5E5"> of clunky shell</font>

266
00:10:37,380 --> 00:10:42,480
scripts and parsers and<font color="#CCCCCC"> you know I'll</font>

267
00:10:40,020 --> 00:10:45,300
have<font color="#CCCCCC"> to like what like parser requesting</font>

268
00:10:42,480 --> 00:10:46,740
<font color="#CCCCCC">and and all that kind of stuff and the</font>

269
00:10:45,300 --> 00:10:48,329
<font color="#E5E5E5">other big thing</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> we didn't want to</font>

270
00:10:46,740 --> 00:10:50,490
<font color="#CCCCCC">happen</font><font color="#E5E5E5"> necessarily because we're using</font>

271
00:10:48,330 --> 00:10:54,810
<font color="#E5E5E5">CRS we didn't necessarily want to have</font>

272
00:10:50,490 --> 00:10:56,580
<font color="#E5E5E5">to</font><font color="#CCCCCC"> maintain our tests so the using this</font>

273
00:10:54,810 --> 00:10:59,069
using this format<font color="#CCCCCC"> basically the</font>

274
00:10:56,580 --> 00:11:01,230
community<font color="#CCCCCC"> can maintain some test</font><font color="#E5E5E5"> for us</font>

275
00:10:59,070 --> 00:11:04,650
<font color="#E5E5E5">so this is kind of the</font><font color="#CCCCCC"> structure</font><font color="#E5E5E5"> so this</font>

276
00:11:01,230 --> 00:11:06,589
<font color="#E5E5E5">was one test that I wrote for</font><font color="#CCCCCC"> rule</font><font color="#E5E5E5"> 9</font><font color="#CCCCCC"> 9</font>

277
00:11:04,650 --> 00:11:09,319
<font color="#CCCCCC">41 120</font>

278
00:11:06,589 --> 00:11:11,180
it's it's<font color="#E5E5E5"> pretty basic so the</font>

279
00:11:09,320 --> 00:11:13,339
representation<font color="#E5E5E5"> is done in</font><font color="#CCCCCC"> Y amel and</font>

280
00:11:11,180 --> 00:11:16,638
this particular test is<font color="#CCCCCC"> basically</font>

281
00:11:13,339 --> 00:11:19,250
testing<font color="#E5E5E5"> this earth sorry this rule is</font>

282
00:11:16,639 --> 00:11:22,250
basically<font color="#E5E5E5"> looking for SQL operators and</font>

283
00:11:19,250 --> 00:11:23,569
<font color="#E5E5E5">so this is so the other thing is you</font>

284
00:11:22,250 --> 00:11:25,130
<font color="#E5E5E5">don't need to be able to write code</font><font color="#CCCCCC"> in</font>

285
00:11:23,569 --> 00:11:27,019
order to<font color="#E5E5E5"> structure your</font><font color="#CCCCCC"> request so you</font>

286
00:11:25,130 --> 00:11:29,839
just<font color="#E5E5E5"> basically need to be able to create</font>

287
00:11:27,019 --> 00:11:32,930
this yeah<font color="#E5E5E5"> this yeah</font><font color="#CCCCCC"> Mille</font>

288
00:11:29,839 --> 00:11:34,730
so the metadata is just kind of that<font color="#E5E5E5"> and</font>

289
00:11:32,930 --> 00:11:36,410
then you know we<font color="#CCCCCC"> have some we have</font>

290
00:11:34,730 --> 00:11:38,600
different stages<font color="#CCCCCC"> so that we can actually</font>

291
00:11:36,410 --> 00:11:40,759
send multiple<font color="#E5E5E5"> requests to to move an</font>

292
00:11:38,600 --> 00:11:42,529
<font color="#CCCCCC">application into a certain</font><font color="#E5E5E5"> state before</font>

293
00:11:40,759 --> 00:11:44,810
<font color="#E5E5E5">we would want to you know I</font><font color="#CCCCCC"> sent an</font>

294
00:11:42,529 --> 00:11:47,990
attack through the URI is just basically

295
00:11:44,810 --> 00:11:50,180
a<font color="#E5E5E5"> really basic test for like a sequel</font>

296
00:11:47,990 --> 00:11:51,440
<font color="#E5E5E5">injection</font><font color="#CCCCCC"> and then you know so there's</font>

297
00:11:50,180 --> 00:11:56,599
other<font color="#E5E5E5"> stuff there's other stuff that you</font>

298
00:11:51,440 --> 00:11:58,759
can do here<font color="#CCCCCC"> so there's a number</font><font color="#E5E5E5"> of rules</font>

299
00:11:56,600 --> 00:12:02,660
<font color="#E5E5E5">so as a result there's a lot of tests</font>

300
00:11:58,759 --> 00:12:04,759
<font color="#E5E5E5">you guys can go and check them out</font><font color="#CCCCCC"> but</font>

301
00:12:02,660 --> 00:12:06,649
for us we because of<font color="#CCCCCC"> this</font><font color="#E5E5E5"> there are</font>

302
00:12:04,759 --> 00:12:11,269
<font color="#E5E5E5">certain rules</font><font color="#CCCCCC"> that didn't make sense</font><font color="#E5E5E5"> for</font>

303
00:12:06,649 --> 00:12:13,550
<font color="#E5E5E5">us because of how basically how the</font>

304
00:12:11,269 --> 00:12:15,110
caching engines work also there's tests

305
00:12:13,550 --> 00:12:16,849
in there that would<font color="#CCCCCC"> be for older</font>

306
00:12:15,110 --> 00:12:19,779
versions<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a rule that might not fire</font>

307
00:12:16,850 --> 00:12:22,370
<font color="#E5E5E5">so we needed a way</font><font color="#CCCCCC"> to basically say like</font>

308
00:12:19,779 --> 00:12:23,990
<font color="#E5E5E5">we needed we needed</font><font color="#CCCCCC"> a way to say</font><font color="#E5E5E5"> like</font>

309
00:12:22,370 --> 00:12:25,670
what like which one of<font color="#E5E5E5"> these tests are</font>

310
00:12:23,990 --> 00:12:29,389
actually<font color="#CCCCCC"> broken versus which ones are</font>

311
00:12:25,670 --> 00:12:30,979
should we expect<font color="#E5E5E5"> to work properly</font><font color="#CCCCCC"> so in</font>

312
00:12:29,389 --> 00:12:33,920
order<font color="#E5E5E5"> to get our baseline we ended up</font>

313
00:12:30,980 --> 00:12:36,829
<font color="#E5E5E5">writing</font><font color="#CCCCCC"> it's we use meu chef</font><font color="#E5E5E5"> fairly</font>

314
00:12:33,920 --> 00:12:38,870
heavily<font color="#E5E5E5"> so we wrote a cookbook and for a</font>

315
00:12:36,829 --> 00:12:41,029
provisioner that will provision<font color="#E5E5E5"> apache</font>

316
00:12:38,870 --> 00:12:42,410
mod<font color="#E5E5E5"> security and</font><font color="#CCCCCC"> the OWASP crs with one</font>

317
00:12:41,029 --> 00:12:45,290
<font color="#E5E5E5">command basically and it pulls it up</font>

318
00:12:42,410 --> 00:12:46,910
into<font color="#E5E5E5"> a vagrant instance or like if you</font>

319
00:12:45,290 --> 00:12:51,769
want to use like<font color="#CCCCCC"> VMware</font><font color="#E5E5E5"> you could use</font>

320
00:12:46,910 --> 00:12:52,850
<font color="#CCCCCC">that to I</font><font color="#E5E5E5"> guess so it's really important</font>

321
00:12:51,769 --> 00:12:54,199
<font color="#E5E5E5">for us a harness needed to be</font>

322
00:12:52,850 --> 00:12:58,730
configurable<font color="#E5E5E5"> we</font><font color="#CCCCCC"> needed to be able</font><font color="#E5E5E5"> to</font>

323
00:12:54,199 --> 00:13:00,620
specify scope<font color="#CCCCCC"> we also so I just</font><font color="#E5E5E5"> kind of</font>

324
00:12:58,730 --> 00:13:02,209
went<font color="#CCCCCC"> over that</font><font color="#E5E5E5"> so the very first</font>

325
00:13:00,620 --> 00:13:03,259
objectives we don't want we wanted to

326
00:13:02,209 --> 00:13:05,209
make sure<font color="#E5E5E5"> that when</font><font color="#CCCCCC"> we're sending an</font>

327
00:13:03,259 --> 00:13:07,790
attack through our<font color="#E5E5E5"> WAP implementation</font>

328
00:13:05,209 --> 00:13:10,399
<font color="#E5E5E5">that had detected and</font><font color="#CCCCCC"> it would drop it</font>

329
00:13:07,790 --> 00:13:13,099
<font color="#CCCCCC">the other kind of really important thing</font>

330
00:13:10,399 --> 00:13:16,220
was one attack payload can actually

331
00:13:13,100 --> 00:13:18,170
trigger<font color="#E5E5E5"> several different rules so it</font>

332
00:13:16,220 --> 00:13:19,240
may be<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we're sending</font><font color="#E5E5E5"> an attack</font>

333
00:13:18,170 --> 00:13:20,770
payload through that<font color="#CCCCCC"> I may</font>

334
00:13:19,240 --> 00:13:24,640
been identified or logged by the<font color="#E5E5E5"> laughs</font>

335
00:13:20,770 --> 00:13:26,020
<font color="#E5E5E5">but it may not</font><font color="#CCCCCC"> the rule that identified</font>

336
00:13:24,640 --> 00:13:28,300
the payload might have been some other

337
00:13:26,020 --> 00:13:29,800
<font color="#E5E5E5">rule that was completely irrelevant</font><font color="#CCCCCC"> to</font>

338
00:13:28,300 --> 00:13:31,810
the attack<font color="#E5E5E5"> so we wanted to make sure</font>

339
00:13:29,800 --> 00:13:34,899
<font color="#E5E5E5">that each rule was actually functioning</font>

340
00:13:31,810 --> 00:13:36,489
as designed<font color="#CCCCCC"> so a good</font><font color="#E5E5E5"> example is PHP</font>

341
00:13:34,899 --> 00:13:39,220
object injection I think when<font color="#E5E5E5"> we're</font>

342
00:13:36,490 --> 00:13:42,040
doing<font color="#CCCCCC"> tests I</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> it fired like 30</font>

343
00:13:39,220 --> 00:13:43,980
different<font color="#CCCCCC"> 30 different alerts</font><font color="#E5E5E5"> 30</font>

344
00:13:42,040 --> 00:13:49,630
<font color="#CCCCCC">different signatures that were matched</font>

345
00:13:43,980 --> 00:13:53,290
so in<font color="#CCCCCC"> order to do this we had to we had</font>

346
00:13:49,630 --> 00:13:55,089
<font color="#CCCCCC">to basically and we kept we keep a</font>

347
00:13:53,290 --> 00:13:56,800
journal and then we had a custom header

348
00:13:55,089 --> 00:13:58,480
that<font color="#E5E5E5"> basically has the rule that we're</font>

349
00:13:56,800 --> 00:14:00,640
testing<font color="#E5E5E5"> for</font><font color="#CCCCCC"> a timestamp and a test ID</font>

350
00:13:58,480 --> 00:14:02,560
and we send that<font color="#CCCCCC"> through to the</font><font color="#E5E5E5"> web and</font>

351
00:14:00,640 --> 00:14:04,980
then our web actually logs it and then

352
00:14:02,560 --> 00:14:08,229
what we're able to<font color="#E5E5E5"> do is basically</font>

353
00:14:04,980 --> 00:14:09,850
<font color="#E5E5E5">validate that this attack payload was</font>

354
00:14:08,230 --> 00:14:12,010
written<font color="#E5E5E5"> for this rule and this rule</font>

355
00:14:09,850 --> 00:14:15,399
actually identified this attack payload

356
00:14:12,010 --> 00:14:16,600
<font color="#E5E5E5">which is which was important for us so</font>

357
00:14:15,399 --> 00:14:20,200
how do we<font color="#E5E5E5"> use</font><font color="#CCCCCC"> this</font>

358
00:14:16,600 --> 00:14:21,760
so we every everything<font color="#E5E5E5"> like we're kind</font>

359
00:14:20,200 --> 00:14:24,910
of heavily automated<font color="#CCCCCC"> I guess you could</font>

360
00:14:21,760 --> 00:14:26,500
say<font color="#CCCCCC"> so right now either</font><font color="#E5E5E5"> the sock or an</font>

361
00:14:24,910 --> 00:14:28,149
engineer would if it wants to<font color="#CCCCCC"> create a</font>

362
00:14:26,500 --> 00:14:30,880
change to a rule<font color="#E5E5E5"> they would create a</font>

363
00:14:28,149 --> 00:14:33,459
branch<font color="#CCCCCC"> they would basically make their</font>

364
00:14:30,880 --> 00:14:37,029
change push their branch<font color="#CCCCCC"> on push</font><font color="#E5E5E5"> what</font>

365
00:14:33,459 --> 00:14:41,589
<font color="#E5E5E5">ends up</font><font color="#CCCCCC"> happening is we run we run a job</font>

366
00:14:37,029 --> 00:14:44,350
which will provision a full like

367
00:14:41,589 --> 00:14:47,350
instance of our<font color="#E5E5E5"> caching engine</font><font color="#CCCCCC"> compiled</font>

368
00:14:44,350 --> 00:14:53,020
the rules<font color="#E5E5E5"> load the rules</font><font color="#CCCCCC"> run</font><font color="#E5E5E5"> through</font><font color="#CCCCCC"> our</font>

369
00:14:47,350 --> 00:14:54,430
entire FTW test corpus<font color="#E5E5E5"> and basically and</font>

370
00:14:53,020 --> 00:14:56,020
then and then<font color="#E5E5E5"> we'll either you know</font>

371
00:14:54,430 --> 00:14:58,420
conditionally we can<font color="#CCCCCC"> either fail the job</font>

372
00:14:56,020 --> 00:15:00,339
if there's like a rule or we go back<font color="#CCCCCC"> and</font>

373
00:14:58,420 --> 00:15:02,439
<font color="#CCCCCC">we'll like analyze to see like what like</font>

374
00:15:00,339 --> 00:15:04,540
<font color="#CCCCCC">what the result of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> failure was so so</font>

375
00:15:02,440 --> 00:15:06,550
this this<font color="#E5E5E5"> set of tests</font><font color="#CCCCCC"> actually happens</font>

376
00:15:04,540 --> 00:15:08,319
<font color="#E5E5E5">on when we push the branch and then also</font>

377
00:15:06,550 --> 00:15:13,020
when<font color="#E5E5E5"> we go to merge that branch and</font><font color="#CCCCCC"> see</font>

378
00:15:08,320 --> 00:15:13,020
<font color="#CCCCCC">into</font><font color="#E5E5E5"> master this the job runs again</font>

379
00:15:13,620 --> 00:15:18,220
<font color="#CCCCCC">probably one thing</font><font color="#E5E5E5"> that work worth</font>

380
00:15:15,850 --> 00:15:22,089
noting is that<font color="#E5E5E5"> we had to provision like</font>

381
00:15:18,220 --> 00:15:24,310
a special HTTP HTTP responder<font color="#CCCCCC"> that would</font>

382
00:15:22,089 --> 00:15:25,540
<font color="#E5E5E5">basically tell varnish not to cache any</font>

383
00:15:24,310 --> 00:15:27,520
of the data<font color="#E5E5E5"> because we're running into</font>

384
00:15:25,540 --> 00:15:30,339
<font color="#CCCCCC">problems where there's certain data that</font>

385
00:15:27,520 --> 00:15:32,220
was cached<font color="#E5E5E5"> and then you know therefore</font>

386
00:15:30,339 --> 00:15:33,990
<font color="#CCCCCC">like the laughs the</font><font color="#E5E5E5"> wife code</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> run</font>

387
00:15:32,220 --> 00:15:36,300
we<font color="#CCCCCC"> weren't actually fetching from from</font>

388
00:15:33,990 --> 00:15:39,030
origin the other thing that we do is we

389
00:15:36,300 --> 00:15:40,319
<font color="#E5E5E5">look for denial of service attacks in</font>

390
00:15:39,030 --> 00:15:43,170
the actual regular expressions

391
00:15:40,320 --> 00:15:44,940
<font color="#CCCCCC">themselves because we're very kind of</font>

392
00:15:43,170 --> 00:15:47,189
conscious of<font color="#E5E5E5"> CPU use and we don't want</font>

393
00:15:44,940 --> 00:15:51,750
poorly written<font color="#E5E5E5"> patterns to actually just</font>

394
00:15:47,190 --> 00:15:55,880
waste a<font color="#E5E5E5"> bunch of CPU cycles</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> think I</font>

395
00:15:51,750 --> 00:15:59,550
<font color="#E5E5E5">kind of talked</font><font color="#CCCCCC"> about that right</font>

396
00:15:55,880 --> 00:16:02,340
so we use FTW number way so identifying

397
00:15:59,550 --> 00:16:04,949
problems in our rules<font color="#E5E5E5"> is is it one thing</font>

398
00:16:02,340 --> 00:16:08,400
<font color="#E5E5E5">but we also kind of use it to verify</font>

399
00:16:04,950 --> 00:16:10,530
fixes and and we also will we also use

400
00:16:08,400 --> 00:16:12,600
it<font color="#CCCCCC"> to identify bugs</font><font color="#E5E5E5"> within our tool</font>

401
00:16:10,530 --> 00:16:14,610
chain as well and then in some cases

402
00:16:12,600 --> 00:16:18,180
like if we're if we found<font color="#E5E5E5"> an evasion</font>

403
00:16:14,610 --> 00:16:19,950
<font color="#CCCCCC">we'll actually you know use the FTW rule</font>

404
00:16:18,180 --> 00:16:24,260
format to kind of communicate<font color="#CCCCCC"> that</font>

405
00:16:19,950 --> 00:16:26,460
upstream so<font color="#E5E5E5"> we found a few things that</font>

406
00:16:24,260 --> 00:16:28,290
resulted<font color="#E5E5E5"> in evasions and they're very</font>

407
00:16:26,460 --> 00:16:30,060
subtle<font color="#E5E5E5"> so it just will kind of</font>

408
00:16:28,290 --> 00:16:31,290
<font color="#E5E5E5">illustrate how easy</font><font color="#CCCCCC"> it is to make a</font>

409
00:16:30,060 --> 00:16:34,020
<font color="#E5E5E5">mistake when you're actually writing</font>

410
00:16:31,290 --> 00:16:36,510
<font color="#E5E5E5">these rules so I apologize for the text</font>

411
00:16:34,020 --> 00:16:38,970
I know that it's small but I actually

412
00:16:36,510 --> 00:16:40,950
have the links where we've actually made

413
00:16:38,970 --> 00:16:44,610
the pull request<font color="#E5E5E5"> to fix it</font><font color="#CCCCCC"> within the</font>

414
00:16:40,950 --> 00:16:48,240
<font color="#CCCCCC">last</font><font color="#E5E5E5"> CRS so this was an</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> of a</font>

415
00:16:44,610 --> 00:16:50,580
<font color="#CCCCCC">change rule but they the transform was</font>

416
00:16:48,240 --> 00:16:52,290
actually happening<font color="#CCCCCC"> in the first chain</font>

417
00:16:50,580 --> 00:16:53,880
when it needed<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> happening in the</font>

418
00:16:52,290 --> 00:16:56,760
second<font color="#E5E5E5"> chain so there is there</font><font color="#CCCCCC"> is a to</font>

419
00:16:53,880 --> 00:16:58,650
<font color="#CCCCCC">lower call and then and then in and then</font>

420
00:16:56,760 --> 00:17:00,600
in the second chain was what actually

421
00:16:58,650 --> 00:17:02,490
<font color="#E5E5E5">identified it so in this case it was</font>

422
00:17:00,600 --> 00:17:04,829
looking<font color="#E5E5E5"> for a restricted file extensions</font>

423
00:17:02,490 --> 00:17:06,960
<font color="#E5E5E5">so you're able</font><font color="#CCCCCC"> to bypass it with</font>

424
00:17:04,829 --> 00:17:11,250
<font color="#E5E5E5">basically using like an</font><font color="#CCCCCC"> uppercase exe</font>

425
00:17:06,960 --> 00:17:13,290
instead of a lowercase<font color="#E5E5E5"> exe so again it</font>

426
00:17:11,250 --> 00:17:18,089
was<font color="#CCCCCC"> like you know a two line fix but</font>

427
00:17:13,290 --> 00:17:21,659
resulted in a pretty simple<font color="#E5E5E5"> bypass this</font>

428
00:17:18,089 --> 00:17:24,419
next one was a rule<font color="#E5E5E5"> for that detects</font>

429
00:17:21,660 --> 00:17:27,450
remote file include vulnerabilities<font color="#E5E5E5"> and</font>

430
00:17:24,420 --> 00:17:30,060
what it basically does<font color="#E5E5E5"> is looking for</font>

431
00:17:27,450 --> 00:17:34,470
any instances<font color="#E5E5E5"> of like a URL schema</font>

432
00:17:30,060 --> 00:17:38,909
<font color="#E5E5E5">within like a post body or I get like</font>

433
00:17:34,470 --> 00:17:40,200
variable or or<font color="#E5E5E5"> a parameter</font><font color="#CCCCCC"> and so</font><font color="#E5E5E5"> on</font>

434
00:17:38,910 --> 00:17:42,540
this there's<font color="#E5E5E5"> two</font><font color="#CCCCCC"> there's actually two</font>

435
00:17:40,200 --> 00:17:44,490
problems there<font color="#E5E5E5"> is a scheme that</font><font color="#CCCCCC"> was</font>

436
00:17:42,540 --> 00:17:45,420
missing so file colon slash slash was

437
00:17:44,490 --> 00:17:50,100
missing but<font color="#E5E5E5"> they</font>

438
00:17:45,420 --> 00:17:51,720
also if you notice on<font color="#CCCCCC"> the on on on what</font>

439
00:17:50,100 --> 00:17:54,689
we<font color="#E5E5E5"> change we actually added</font><font color="#CCCCCC"> there was</font>

440
00:17:51,720 --> 00:17:56,250
<font color="#CCCCCC">also a case insensitive</font><font color="#E5E5E5"> match so this</font>

441
00:17:54,690 --> 00:17:58,650
was<font color="#E5E5E5"> another case where you can if you</font>

442
00:17:56,250 --> 00:18:01,530
use<font color="#CCCCCC"> like an upper case HTTP colon slash</font>

443
00:17:58,650 --> 00:18:03,870
slash<font color="#E5E5E5"> in your remote file include attack</font>

444
00:18:01,530 --> 00:18:08,940
you'd basically<font color="#E5E5E5"> completely bypass the</font>

445
00:18:03,870 --> 00:18:13,110
<font color="#E5E5E5">Whopper rules</font><font color="#CCCCCC"> see how I'm doing for time</font>

446
00:18:08,940 --> 00:18:14,970
<font color="#CCCCCC">ok I got</font><font color="#E5E5E5"> five</font><font color="#CCCCCC"> minutes</font><font color="#E5E5E5"> so this one was</font>

447
00:18:13,110 --> 00:18:17,280
<font color="#CCCCCC">actually really</font><font color="#E5E5E5"> interesting so this this</font>

448
00:18:14,970 --> 00:18:20,520
rule basically<font color="#E5E5E5"> detects session fixation</font>

449
00:18:17,280 --> 00:18:22,410
<font color="#E5E5E5">and it did it by</font><font color="#CCCCCC"> basically doing three</font>

450
00:18:20,520 --> 00:18:24,660
checks<font color="#E5E5E5"> so the first thing it would do is</font>

451
00:18:22,410 --> 00:18:27,900
it<font color="#CCCCCC"> would actually</font><font color="#E5E5E5"> look</font><font color="#CCCCCC"> for a common</font>

452
00:18:24,660 --> 00:18:30,630
instance of a session<font color="#CCCCCC"> variable so you</font>

453
00:18:27,900 --> 00:18:32,820
know PHP session or JSP session or

454
00:18:30,630 --> 00:18:37,980
<font color="#E5E5E5">whatever session variables that would be</font>

455
00:18:32,820 --> 00:18:39,750
<font color="#E5E5E5">common in most frameworks and then what</font>

456
00:18:37,980 --> 00:18:43,440
it<font color="#CCCCCC"> does</font><font color="#E5E5E5"> is it basically extracts the</font>

457
00:18:39,750 --> 00:18:46,230
<font color="#CCCCCC">hostname</font><font color="#E5E5E5"> from the HTTP referer header</font>

458
00:18:43,440 --> 00:18:49,770
<font color="#E5E5E5">and it</font><font color="#CCCCCC"> basically compares it against</font><font color="#E5E5E5"> the</font>

459
00:18:46,230 --> 00:18:52,620
actual<font color="#E5E5E5"> host header so in this case the</font>

460
00:18:49,770 --> 00:18:54,840
wrong the wrong<font color="#E5E5E5"> operator was being used</font>

461
00:18:52,620 --> 00:18:56,340
<font color="#E5E5E5">so it was using begins with instead of</font>

462
00:18:54,840 --> 00:18:59,870
<font color="#E5E5E5">when it should have been using ends with</font>

463
00:18:56,340 --> 00:19:02,429
so as you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see in the actual refer</font>

464
00:18:59,870 --> 00:19:04,560
all somebody needed to<font color="#E5E5E5"> do it to bypass</font>

465
00:19:02,430 --> 00:19:06,720
<font color="#E5E5E5">that</font><font color="#CCCCCC"> was actually</font><font color="#E5E5E5"> just prepend</font><font color="#CCCCCC"> the</font>

466
00:19:04,560 --> 00:19:11,220
<font color="#E5E5E5">target site to like a sub domain on it</font>

467
00:19:06,720 --> 00:19:13,590
on a domain<font color="#CCCCCC"> that they control so again</font>

468
00:19:11,220 --> 00:19:15,600
that<font color="#E5E5E5"> was a literally</font><font color="#CCCCCC"> effects of just</font>

469
00:19:13,590 --> 00:19:19,590
<font color="#E5E5E5">using big ends with instead it begins</font>

470
00:19:15,600 --> 00:19:21,600
with so we also found stuff in our in

471
00:19:19,590 --> 00:19:27,240
our own tool chain<font color="#E5E5E5"> so we are incorrectly</font>

472
00:19:21,600 --> 00:19:29,399
sorting and reordering<font color="#E5E5E5"> transforms</font><font color="#CCCCCC"> we are</font>

473
00:19:27,240 --> 00:19:30,750
basically applying<font color="#CCCCCC"> transform similar to</font>

474
00:19:29,400 --> 00:19:33,030
that<font color="#E5E5E5"> last bug</font><font color="#CCCCCC"> actually applying</font>

475
00:19:30,750 --> 00:19:35,130
transforms<font color="#CCCCCC"> to incorrect</font><font color="#E5E5E5"> rules in a chain</font>

476
00:19:33,030 --> 00:19:36,960
<font color="#E5E5E5">and</font><font color="#CCCCCC"> it's just small stupid</font><font color="#E5E5E5"> things like</font>

477
00:19:35,130 --> 00:19:40,320
certain lexical parsing of certain

478
00:19:36,960 --> 00:19:42,390
<font color="#CCCCCC">related rules and stuff like that</font><font color="#E5E5E5"> so I</font>

479
00:19:40,320 --> 00:19:44,550
also want to<font color="#CCCCCC"> I send some</font><font color="#E5E5E5"> shout out to</font>

480
00:19:42,390 --> 00:19:46,440
two<font color="#E5E5E5"> of my colleagues from the</font>

481
00:19:44,550 --> 00:19:48,480
engineering<font color="#CCCCCC"> area who actually</font><font color="#E5E5E5"> found a</font>

482
00:19:46,440 --> 00:19:50,370
lot of<font color="#CCCCCC"> these problems or or were</font>

483
00:19:48,480 --> 00:19:52,320
<font color="#E5E5E5">actually tasked</font><font color="#CCCCCC"> with like going through</font>

484
00:19:50,370 --> 00:19:54,750
<font color="#E5E5E5">the testing corpus and I denim and</font>

485
00:19:52,320 --> 00:19:58,230
trying to track down why certain tests

486
00:19:54,750 --> 00:20:00,060
were<font color="#E5E5E5"> failing and that's about</font>

487
00:19:58,230 --> 00:20:01,590
and I'm actually a<font color="#CCCCCC"> couple minutes early</font>

488
00:20:00,060 --> 00:20:15,419
<font color="#E5E5E5">so</font><font color="#CCCCCC"> we could probably take</font><font color="#E5E5E5"> a couple of</font>

489
00:20:01,590 --> 00:20:19,740
<font color="#E5E5E5">questions there are</font><font color="#CCCCCC"> any yep right so</font><font color="#E5E5E5"> so</font>

490
00:20:15,420 --> 00:20:22,950
yes<font color="#E5E5E5"> so the the question</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> we use we</font>

491
00:20:19,740 --> 00:20:25,380
use<font color="#CCCCCC"> VCL as on our</font><font color="#E5E5E5"> platform and as a</font>

492
00:20:22,950 --> 00:20:27,210
customer<font color="#E5E5E5"> can I actually run</font><font color="#CCCCCC"> VCL so yeah</font>

493
00:20:25,380 --> 00:20:28,920
yes you can and<font color="#CCCCCC"> that's actually</font><font color="#E5E5E5"> one of</font>

494
00:20:27,210 --> 00:20:30,960
the reasons<font color="#CCCCCC"> why a lot of people use us</font>

495
00:20:28,920 --> 00:20:42,240
because<font color="#CCCCCC"> it's just it</font><font color="#E5E5E5"> gives them a lot</font><font color="#CCCCCC"> of</font>

496
00:20:30,960 --> 00:20:44,010
<font color="#E5E5E5">power</font><font color="#CCCCCC"> over their caching policies yeah</font>

497
00:20:42,240 --> 00:20:45,900
so the question<font color="#CCCCCC"> was are just around</font><font color="#E5E5E5"> the</font>

498
00:20:44,010 --> 00:20:48,750
security<font color="#CCCCCC"> of the VCL so this is</font><font color="#E5E5E5"> something</font>

499
00:20:45,900 --> 00:20:53,220
that<font color="#E5E5E5"> we actually have worked tirelessly</font>

500
00:20:48,750 --> 00:20:55,020
to<font color="#E5E5E5"> mitigate the risk was so you can</font>

501
00:20:53,220 --> 00:20:58,560
embed<font color="#CCCCCC"> see so in</font><font color="#E5E5E5"> our version you can't in</font>

502
00:20:55,020 --> 00:21:00,210
bed<font color="#E5E5E5"> see but we still actually do we</font>

503
00:20:58,560 --> 00:21:04,080
still actually have validators to make

504
00:21:00,210 --> 00:21:07,380
sure that you know<font color="#CCCCCC"> that</font><font color="#E5E5E5"> people are</font>

505
00:21:04,080 --> 00:21:09,870
<font color="#E5E5E5">trying to do that basically so but we</font>

506
00:21:07,380 --> 00:21:12,540
have<font color="#CCCCCC"> found vulnerabilities where people</font>

507
00:21:09,870 --> 00:21:14,399
<font color="#E5E5E5">were able</font><font color="#CCCCCC"> to inject I stuff luckily it</font>

508
00:21:12,540 --> 00:21:15,629
was us<font color="#CCCCCC"> who found it</font><font color="#E5E5E5"> not somebody bad but</font>

509
00:21:14,400 --> 00:21:17,040
this<font color="#E5E5E5"> was a while</font><font color="#CCCCCC"> ago</font><font color="#E5E5E5"> but there's</font>

510
00:21:15,630 --> 00:21:19,460
<font color="#CCCCCC">actually a lot of work kind of going</font><font color="#E5E5E5"> on</font>

511
00:21:17,040 --> 00:21:27,300
in terms of<font color="#E5E5E5"> like trying to</font><font color="#CCCCCC"> isolate that</font>

512
00:21:19,460 --> 00:21:29,940
<font color="#E5E5E5">further anyone else I apologize that</font>

513
00:21:27,300 --> 00:21:38,210
<font color="#E5E5E5">there wasn't</font><font color="#CCCCCC"> very many pictures in there</font>

514
00:21:29,940 --> 00:21:38,210
and<font color="#E5E5E5"> some yeah yeah yeah</font>

515
00:21:41,250 --> 00:21:45,640
so that the<font color="#E5E5E5"> question is what size is the</font>

516
00:21:43,900 --> 00:21:48,340
team supporting<font color="#CCCCCC"> this</font><font color="#E5E5E5"> so we actually have</font>

517
00:21:45,640 --> 00:21:50,080
<font color="#E5E5E5">a security</font><font color="#CCCCCC"> operation</font><font color="#E5E5E5"> center it I saw it</font>

518
00:21:48,340 --> 00:21:52,510
like it's a fairly<font color="#E5E5E5"> large team but it's</font>

519
00:21:50,080 --> 00:21:54,760
probably distributed across<font color="#E5E5E5"> many groups</font>

520
00:21:52,510 --> 00:21:56,470
<font color="#E5E5E5">so it's like there's we have</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> security</font>

521
00:21:54,760 --> 00:21:58,120
<font color="#CCCCCC">operation center we have</font><font color="#E5E5E5"> a security</font><font color="#CCCCCC"> team</font>

522
00:21:56,470 --> 00:22:00,040
which is separate from<font color="#E5E5E5"> that then we also</font>

523
00:21:58,120 --> 00:22:02,020
have like the various<font color="#CCCCCC"> engineering teams</font>

524
00:22:00,040 --> 00:22:08,260
for the various components<font color="#CCCCCC"> of it that</font>

525
00:22:02,020 --> 00:22:08,860
would<font color="#CCCCCC"> be working on it</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> think</font>

526
00:22:08,260 --> 00:22:12,850
<font color="#CCCCCC">that's it</font>

527
00:22:08,860 --> 00:22:14,860
it's 11:55 so I will get off the stage

528
00:22:12,850 --> 00:22:20,918
thank<font color="#E5E5E5"> you</font>

529
00:22:14,860 --> 00:22:20,918
[Applause]

