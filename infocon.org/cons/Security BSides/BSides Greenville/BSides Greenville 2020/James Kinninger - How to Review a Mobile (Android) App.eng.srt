1
00:00:04,819 --> 00:00:09,990
okay great thank you for that intro so

2
00:00:08,100 --> 00:00:13,290
welcome to how to review a mobile

3
00:00:09,990 --> 00:00:14,879
Android app so many of the things that

4
00:00:13,290 --> 00:00:17,220
you will learn today can be applied to

5
00:00:14,880 --> 00:00:19,970
iOS but you know due to time constraints

6
00:00:17,220 --> 00:00:22,349
we're going to stick with Android and

7
00:00:19,970 --> 00:00:23,910
honestly most of the presentation will

8
00:00:22,350 --> 00:00:25,920
be at a high level but we'll get a

9
00:00:23,910 --> 00:00:31,380
little bit deeper technically towards

10
00:00:25,920 --> 00:00:33,480
the end okay the obligatory about me

11
00:00:31,380 --> 00:00:35,879
as mentioned before I've been an IT for

12
00:00:33,480 --> 00:00:38,578
about 20 years with most of the time in

13
00:00:35,879 --> 00:00:40,019
software development I work at floor and

14
00:00:38,579 --> 00:00:41,489
floors giving me some opportunities not

15
00:00:40,020 --> 00:00:44,450
only in software dev but also in

16
00:00:41,489 --> 00:00:47,129
management project management and

17
00:00:44,450 --> 00:00:49,640
security here for the past four years

18
00:00:47,129 --> 00:00:52,739
and I review a new mobile app probably

19
00:00:49,640 --> 00:00:55,620
one Android app every two three weeks

20
00:00:52,739 --> 00:00:59,510
and that's either for work or even on my

21
00:00:55,620 --> 00:01:01,949
own for fun yes my life is that exciting

22
00:00:59,510 --> 00:01:03,390
so the goal for this presentation is I

23
00:01:01,949 --> 00:01:05,610
want to give you the ability to review

24
00:01:03,390 --> 00:01:07,979
Android apps not only for your family or

25
00:01:05,610 --> 00:01:09,540
your friends but also give you the

26
00:01:07,979 --> 00:01:12,330
building blocks to review an app

27
00:01:09,540 --> 00:01:13,860
professionally and you may be asking

28
00:01:12,330 --> 00:01:16,740
yourself well why does this guy care and

29
00:01:13,860 --> 00:01:18,930
I care because before I got into

30
00:01:16,740 --> 00:01:22,199
security I was tricked by malicious

31
00:01:18,930 --> 00:01:23,790
Android app and the little story behind

32
00:01:22,200 --> 00:01:25,830
this the reason I got tricked was that I

33
00:01:23,790 --> 00:01:28,920
needed a file browser app while I was

34
00:01:25,830 --> 00:01:33,658
developing and multiplication app for my

35
00:01:28,920 --> 00:01:36,119
daughter and the slide you see now is

36
00:01:33,659 --> 00:01:38,009
the multiplication app I developed for

37
00:01:36,119 --> 00:01:40,650
my daughter and the picture to the left

38
00:01:38,009 --> 00:01:42,770
her little face is the icon launcher and

39
00:01:40,650 --> 00:01:45,600
of course the app had to be pink for her

40
00:01:42,770 --> 00:01:46,949
so while I was writing this app like I

41
00:01:45,600 --> 00:01:49,289
said before I needed a file system

42
00:01:46,950 --> 00:01:51,600
browser I grabbed the first one from the

43
00:01:49,290 --> 00:01:53,549
Play Store ran it when I looked at the

44
00:01:51,600 --> 00:01:55,439
permissions I realized I just installed

45
00:01:53,549 --> 00:01:56,930
something bad the app needed permissions

46
00:01:55,439 --> 00:02:01,020
to so many things

47
00:01:56,930 --> 00:02:02,430
so I admit it I was tricked so naturally

48
00:02:01,020 --> 00:02:04,020
I thought this could be a moment to help

49
00:02:02,430 --> 00:02:06,960
others and then this is when I turned my

50
00:02:04,020 --> 00:02:09,690
app quote evil so the picture to the

51
00:02:06,960 --> 00:02:11,609
right you can see a submit button when

52
00:02:09,690 --> 00:02:13,230
that button is clicked the app secretly

53
00:02:11,610 --> 00:02:15,870
took a picture using the front-facing

54
00:02:13,230 --> 00:02:17,099
camera and add some people at work and

55
00:02:15,870 --> 00:02:17,819
also some people at home and some

56
00:02:17,099 --> 00:02:20,730
friends of mine try

57
00:02:17,819 --> 00:02:22,200
and the reactions I got when people

58
00:02:20,730 --> 00:02:23,969
realize their picture I've been taken

59
00:02:22,200 --> 00:02:26,700
without them knowing or interesting some

60
00:02:23,969 --> 00:02:28,530
of them good some of them bad one person

61
00:02:26,700 --> 00:02:30,869
even said what the hell man I trusted

62
00:02:28,530 --> 00:02:32,609
you so besides teaching my daughter

63
00:02:30,870 --> 00:02:34,980
multiplication the app was built the

64
00:02:32,609 --> 00:02:36,870
show uses what happens when you do not

65
00:02:34,980 --> 00:02:40,138
pay attention to act permission so like

66
00:02:36,870 --> 00:02:41,730
I did so I was not the only one trick

67
00:02:40,139 --> 00:02:46,200
and installing militias that here are a

68
00:02:41,730 --> 00:02:49,260
few others so hopefully no one watching

69
00:02:46,200 --> 00:02:51,238
this has any of these apps again you can

70
00:02:49,260 --> 00:02:53,849
see some of these installs of these

71
00:02:51,239 --> 00:02:56,760
malicious apps are million installs some

72
00:02:53,849 --> 00:02:58,798
are 5 million and even 10 million so

73
00:02:56,760 --> 00:03:01,168
again the golden presentation is to not

74
00:02:58,799 --> 00:03:03,870
be tricked like I was all right let's

75
00:03:01,169 --> 00:03:06,719
look at the agenda real quick hey James

76
00:03:03,870 --> 00:03:12,780
can you zoom in on your PowerPoint deck

77
00:03:06,719 --> 00:03:17,459
so the text is a little small okay is

78
00:03:12,780 --> 00:03:23,489
that better no it's actually the window

79
00:03:17,459 --> 00:03:33,299
on our side is what's small see you know

80
00:03:23,489 --> 00:03:35,609
okay I got a full screen on my side yeah

81
00:03:33,299 --> 00:03:39,090
I don't see a different way to do that

82
00:03:35,609 --> 00:03:42,629
so Oh actually if you go up to view

83
00:03:39,090 --> 00:03:43,919
options I'll put this in the chat you

84
00:03:42,629 --> 00:03:45,198
can go to view options you can see a

85
00:03:43,919 --> 00:03:47,729
little better

86
00:03:45,199 --> 00:03:48,919
continue on and out and I'll help in the

87
00:03:47,729 --> 00:03:53,419
chat sorry about that

88
00:03:48,919 --> 00:03:53,419
okay so we're good with with this before

89
00:03:55,519 --> 00:04:08,040
yes okay so look at the agenda so real

90
00:04:06,359 --> 00:04:11,159
quick we're going to just talk about

91
00:04:08,040 --> 00:04:13,709
three things the risks of using mobile

92
00:04:11,159 --> 00:04:15,328
apps how to review app for sake kids or

93
00:04:13,709 --> 00:04:18,389
family remembers and that doesn't

94
00:04:15,329 --> 00:04:21,030
require any technical skills and then a

95
00:04:18,389 --> 00:04:23,400
review for work or you know a more

96
00:04:21,029 --> 00:04:25,770
detailed review and this part of the

97
00:04:23,400 --> 00:04:28,109
presentation will go from less technical

98
00:04:25,770 --> 00:04:30,150
to more technical and the last thing

99
00:04:28,110 --> 00:04:31,280
there's you link the bottom right hand

100
00:04:30,150 --> 00:04:33,830
corner

101
00:04:31,280 --> 00:04:38,289
slide number five there's 32 slides and

102
00:04:33,830 --> 00:04:38,289
the presentation is about 24 minutes

103
00:04:38,650 --> 00:04:44,450
okay so let's talk about the risks of

104
00:04:41,120 --> 00:04:46,160
using mobile apps so the risks here are

105
00:04:44,450 --> 00:04:47,900
pretty obvious you know there's always

106
00:04:46,160 --> 00:04:49,280
the excitement of a new app but there

107
00:04:47,900 --> 00:04:52,039
isn't typically much discussion around

108
00:04:49,280 --> 00:04:54,429
risk and even less how we mitigate these

109
00:04:52,040 --> 00:04:56,510
risks for family or for work an

110
00:04:54,430 --> 00:05:00,080
important part here is to have a

111
00:04:56,510 --> 00:05:02,150
conversation the risks here for family

112
00:05:00,080 --> 00:05:04,370
members or kids you know you can read

113
00:05:02,150 --> 00:05:07,460
this it's you know location tracking on

114
00:05:04,370 --> 00:05:10,550
one communication recording audio etc

115
00:05:07,460 --> 00:05:13,460
and then the risks for business is all

116
00:05:10,550 --> 00:05:15,830
of those plus you know information theft

117
00:05:13,460 --> 00:05:19,430
or reputation damage and that's what we

118
00:05:15,830 --> 00:05:24,979
want to be careful about so for your

119
00:05:19,430 --> 00:05:28,490
family members or kids having them want

120
00:05:24,979 --> 00:05:30,440
to use an app you can easily say yes you

121
00:05:28,490 --> 00:05:33,050
can use the app but you've got to

122
00:05:30,440 --> 00:05:36,860
disable these permissions and for work

123
00:05:33,050 --> 00:05:39,770
it can be you know we need to use it

124
00:05:36,860 --> 00:05:41,780
this newest app for our company and we

125
00:05:39,770 --> 00:05:44,990
can do that we just need to have certain

126
00:05:41,780 --> 00:05:47,659
mitigation strategies in place and those

127
00:05:44,990 --> 00:05:50,210
conversations are pretty easy you just

128
00:05:47,660 --> 00:05:51,770
have to have them alright so now that we

129
00:05:50,210 --> 00:05:53,330
understand the risk and how to have a

130
00:05:51,770 --> 00:05:55,909
conversation about the risk let's look

131
00:05:53,330 --> 00:05:57,440
at the second item for the agenda how'd

132
00:05:55,910 --> 00:06:02,200
it go into a little bit more detail to

133
00:05:57,440 --> 00:06:04,820
review an app for kids or family members

134
00:06:02,200 --> 00:06:06,349
all right so it completely random I

135
00:06:04,820 --> 00:06:07,610
selected an ice-cream app from the

136
00:06:06,350 --> 00:06:10,190
Google Play Store to look at the

137
00:06:07,610 --> 00:06:11,900
permissions it's probably a perfectly

138
00:06:10,190 --> 00:06:14,360
fine app I just wanted to take a closer

139
00:06:11,900 --> 00:06:15,710
look at it and I did I blurred the name

140
00:06:14,360 --> 00:06:17,870
out just so you wouldn't think I was

141
00:06:15,710 --> 00:06:20,750
either for or against it it's I'm not

142
00:06:17,870 --> 00:06:23,750
either it's just completely random app

143
00:06:20,750 --> 00:06:24,979
that I picked so when you're reviewing

144
00:06:23,750 --> 00:06:26,419
these the first thing you want to look

145
00:06:24,979 --> 00:06:27,500
at is a content rating and that one's

146
00:06:26,419 --> 00:06:30,680
pretty easy and for this one it's

147
00:06:27,500 --> 00:06:31,850
everyone so no big deal there the next

148
00:06:30,680 --> 00:06:34,100
thing you want to do is scroll to the

149
00:06:31,850 --> 00:06:36,800
bottom for permissions and view details

150
00:06:34,100 --> 00:06:41,620
so let's look and see what the

151
00:06:36,800 --> 00:06:41,620
permissions that this app has requested

152
00:06:42,250 --> 00:06:48,320
okay so here are the permissions this

153
00:06:46,430 --> 00:06:56,540
ice-cream app has requested and there

154
00:06:48,320 --> 00:06:58,310
are 17 requested permissions so you

155
00:06:56,540 --> 00:07:00,340
obviously got to ask yourself does this

156
00:06:58,310 --> 00:07:02,450
app really need these permissions and

157
00:07:00,340 --> 00:07:03,890
again if you look at these permissions

158
00:07:02,450 --> 00:07:05,840
that I have one highlighted the device

159
00:07:03,890 --> 00:07:07,820
ID and call information if you don't

160
00:07:05,840 --> 00:07:10,789
know what it is just ask the interwebs

161
00:07:07,820 --> 00:07:15,560
and here we've got the Batman meeting

162
00:07:10,790 --> 00:07:17,120
here to say mmm this really needed so in

163
00:07:15,560 --> 00:07:18,920
the 1 permission that I highlight is the

164
00:07:17,120 --> 00:07:20,870
device ID and column permission and that

165
00:07:18,920 --> 00:07:23,660
can be used to obtain the device IMEI

166
00:07:20,870 --> 00:07:27,080
which is could uniquely identify the

167
00:07:23,660 --> 00:07:29,600
device which likely violates the played

168
00:07:27,080 --> 00:07:31,729
F program policies due to privacy

169
00:07:29,600 --> 00:07:35,300
concerns because you can track the app

170
00:07:31,730 --> 00:07:38,240
and some Android versions can revoke

171
00:07:35,300 --> 00:07:40,010
permission so some of these permissions

172
00:07:38,240 --> 00:07:41,930
being revoked could be part of our

173
00:07:40,010 --> 00:07:44,930
mitigating strategy in order to use the

174
00:07:41,930 --> 00:07:46,700
app and so while we're looking at

175
00:07:44,930 --> 00:07:51,980
permissions lifted let's look at some of

176
00:07:46,700 --> 00:07:53,599
the most abused permissions all right so

177
00:07:51,980 --> 00:07:55,700
we see here we have the permission on

178
00:07:53,600 --> 00:07:57,919
the left in the middle it's what it's

179
00:07:55,700 --> 00:08:00,289
used for and then how it is exploited

180
00:07:57,919 --> 00:08:01,969
and these permissions if you're

181
00:08:00,290 --> 00:08:03,710
reviewing an app and you see any of

182
00:08:01,970 --> 00:08:05,810
these should give you a red flag and

183
00:08:03,710 --> 00:08:08,150
should be only line up if it's really

184
00:08:05,810 --> 00:08:09,380
needed so the other important part is

185
00:08:08,150 --> 00:08:11,989
that you want to periodically review

186
00:08:09,380 --> 00:08:13,969
permissions as permissions can change

187
00:08:11,990 --> 00:08:15,850
and some apps can actually download at

188
00:08:13,970 --> 00:08:19,340
at code later

189
00:08:15,850 --> 00:08:21,140
so to recap reviewing an Android app for

190
00:08:19,340 --> 00:08:22,419
kids or families really as simple as

191
00:08:21,140 --> 00:08:25,610
looking at the content rating and

192
00:08:22,419 --> 00:08:27,229
understanding the permissions so this

193
00:08:25,610 --> 00:08:28,610
concludes the first two parts of the

194
00:08:27,229 --> 00:08:30,890
agenda now let's look at how to review

195
00:08:28,610 --> 00:08:33,140
an app in more detail something you know

196
00:08:30,890 --> 00:08:36,770
we might review for work and we can do

197
00:08:33,140 --> 00:08:41,088
that in five easy steps and here they

198
00:08:36,770 --> 00:08:43,360
are so let's go ahead and jump into step

199
00:08:41,089 --> 00:08:43,360
one

200
00:08:45,170 --> 00:08:50,479
let's crack open the apk and so what is

201
00:08:47,720 --> 00:08:53,750
an apk it's an Android package kit it's

202
00:08:50,480 --> 00:08:56,480
really just a zip file you can rename

203
00:08:53,750 --> 00:08:59,300
the file from a tape ek to dot zip and

204
00:08:56,480 --> 00:09:01,370
then browse it like anything else now

205
00:08:59,300 --> 00:09:04,519
feel free look around you'd be surprised

206
00:09:01,370 --> 00:09:06,139
at what you could find so this is step

207
00:09:04,519 --> 00:09:08,060
one so for step two we're going to

208
00:09:06,139 --> 00:09:09,829
review the permissions which will be

209
00:09:08,060 --> 00:09:13,880
very similar to how we review the

210
00:09:09,829 --> 00:09:15,979
permissions earlier alright so step two

211
00:09:13,880 --> 00:09:18,500
requires the installation of Android

212
00:09:15,980 --> 00:09:21,320
studio so Android studio is free it's

213
00:09:18,500 --> 00:09:23,750
easy to use and gives us a few tools to

214
00:09:21,320 --> 00:09:26,029
not only review an apk but if you wanted

215
00:09:23,750 --> 00:09:28,220
to build an app you could so after

216
00:09:26,029 --> 00:09:30,680
you've installed Android studio you just

217
00:09:28,220 --> 00:09:32,540
point to the apk I've grabbed another

218
00:09:30,680 --> 00:09:34,849
random app and navigated to the Android

219
00:09:32,540 --> 00:09:38,060
manifest file which defines our

220
00:09:34,850 --> 00:09:40,399
permissions so again we've gone to the

221
00:09:38,060 --> 00:09:43,040
manifest folder and we're going to open

222
00:09:40,399 --> 00:09:45,949
up the androidmanifest.xml from within

223
00:09:43,040 --> 00:09:48,290
android studio and the Android manifest

224
00:09:45,949 --> 00:09:49,939
file is just a resource file that

225
00:09:48,290 --> 00:09:53,149
contains all the details needed by the

226
00:09:49,940 --> 00:09:54,380
Android system about the application and

227
00:09:53,149 --> 00:09:56,029
one of these permissions I want to

228
00:09:54,380 --> 00:10:00,019
highlight which hopefully you can see is

229
00:09:56,029 --> 00:10:05,089
the receive boot completed permissions

230
00:10:00,019 --> 00:10:08,120
request well what is that again we have

231
00:10:05,089 --> 00:10:09,560
our Batman mean to say wait a second

232
00:10:08,120 --> 00:10:11,810
does this really need it

233
00:10:09,560 --> 00:10:13,579
and again if you just ask the interwebs

234
00:10:11,810 --> 00:10:15,469
you see the full permission is Android

235
00:10:13,579 --> 00:10:17,839
got permission doxy boot completed and

236
00:10:15,470 --> 00:10:21,199
it can be used to automatically start a

237
00:10:17,839 --> 00:10:24,079
service after a system reboot is that

238
00:10:21,199 --> 00:10:26,120
really needed it could be but that is

239
00:10:24,079 --> 00:10:29,180
definitely one that if I saw this in a

240
00:10:26,120 --> 00:10:30,740
review I would give it another look so

241
00:10:29,180 --> 00:10:34,390
alright we're already on the step 3 and

242
00:10:30,740 --> 00:10:37,730
that's to have a tool analyze the code

243
00:10:34,390 --> 00:10:40,699
so again we go an Android studio we

244
00:10:37,730 --> 00:10:45,170
click file and then profile a debug apk

245
00:10:40,699 --> 00:10:48,019
and then we click analyze and inspect

246
00:10:45,170 --> 00:10:50,420
code and it will look at the apk and

247
00:10:48,019 --> 00:10:53,720
expect inspect the code for

248
00:10:50,420 --> 00:10:55,310
vulnerabilities and what you're going to

249
00:10:53,720 --> 00:10:57,589
want to do next is if you can see the

250
00:10:55,310 --> 00:10:59,378
Security tab you're going to want to

251
00:10:57,589 --> 00:11:01,149
look at that

252
00:10:59,379 --> 00:11:02,949
give that a sanity check and you

253
00:11:01,149 --> 00:11:05,379
definitely want to look up anything you

254
00:11:02,949 --> 00:11:08,410
don't know and then share that report

255
00:11:05,379 --> 00:11:10,779
for risk awareness so even if you copy

256
00:11:08,410 --> 00:11:13,118
and paste the generated report text into

257
00:11:10,779 --> 00:11:15,459
your own report no one will ever know is

258
00:11:13,119 --> 00:11:16,869
there's an Android student report and

259
00:11:15,459 --> 00:11:18,699
you'll be the hero and the next slide

260
00:11:16,869 --> 00:11:21,879
will show us your boss's reaction to

261
00:11:18,699 --> 00:11:24,669
your report there it is the Michael

262
00:11:21,879 --> 00:11:26,289
Scott amazed face so based on your

263
00:11:24,669 --> 00:11:28,389
report and the fact that you understand

264
00:11:26,289 --> 00:11:33,369
the risks the report is generated you're

265
00:11:28,389 --> 00:11:35,679
practically guaranteed a promotion okay

266
00:11:33,369 --> 00:11:38,379
so let's look at step three another part

267
00:11:35,679 --> 00:11:40,119
of step three so not only can we analyze

268
00:11:38,379 --> 00:11:42,099
the code we can also run the app without

269
00:11:40,119 --> 00:11:47,589
actually having to run it on our device

270
00:11:42,099 --> 00:11:49,359
so we can run it within an emulator an

271
00:11:47,589 --> 00:11:52,599
android studio has a built in emulator

272
00:11:49,359 --> 00:11:54,309
and it's as simple as clicking the start

273
00:11:52,599 --> 00:11:56,679
button for the emulator and then

274
00:11:54,309 --> 00:11:59,529
dragging and dropping your apk onto it

275
00:11:56,679 --> 00:12:02,919
simple as that now again it's not

276
00:11:59,529 --> 00:12:04,959
required to run the app but it's a lot

277
00:12:02,919 --> 00:12:08,350
better to run the up app on an emulator

278
00:12:04,959 --> 00:12:11,738
and not on your device and then if we

279
00:12:08,350 --> 00:12:13,239
have some advanced users you can not

280
00:12:11,739 --> 00:12:16,229
only see the screens but you can watch

281
00:12:13,239 --> 00:12:18,609
the traffic so a lot of times these

282
00:12:16,229 --> 00:12:22,389
Android ads will call out to the

283
00:12:18,609 --> 00:12:24,489
Internet or a web service to get data

284
00:12:22,389 --> 00:12:27,909
and return data in fact I see that with

285
00:12:24,489 --> 00:12:29,889
I daresay 99% of the apps that I review

286
00:12:27,909 --> 00:12:32,639
and again you can watch that traffic

287
00:12:29,889 --> 00:12:34,989
with fiddler or Wireshark burp suite etc

288
00:12:32,639 --> 00:12:37,659
and if you're really advanced you can

289
00:12:34,989 --> 00:12:39,879
use the Android debug bridge which is

290
00:12:37,659 --> 00:12:41,769
ADB and that allows you to do a

291
00:12:39,879 --> 00:12:44,649
multitude of things we won't get into

292
00:12:41,769 --> 00:12:47,649
that in this presentation but it is

293
00:12:44,649 --> 00:12:49,479
there for those that want to try it and

294
00:12:47,649 --> 00:12:53,379
again if you want to run the app this is

295
00:12:49,479 --> 00:12:55,299
what it looks like and like I said

296
00:12:53,379 --> 00:12:56,949
before it's not required to run the app

297
00:12:55,299 --> 00:12:59,079
to review it but it helps with the

298
00:12:56,949 --> 00:13:00,819
review and later we'll look at some of

299
00:12:59,079 --> 00:13:02,888
the decompiled Java code used here to

300
00:13:00,819 --> 00:13:04,478
create this app and see if there's

301
00:13:02,889 --> 00:13:05,919
anything interesting hidden in the code

302
00:13:04,479 --> 00:13:07,929
and I just created this real quick just

303
00:13:05,919 --> 00:13:10,899
for b-sides it doesn't really do

304
00:13:07,929 --> 00:13:12,939
anything alright so time check here

305
00:13:10,899 --> 00:13:14,860
we're already at step four and we've all

306
00:13:12,940 --> 00:13:18,370
about okay so you've got about ten

307
00:13:14,860 --> 00:13:23,470
slides left in step four is we're going

308
00:13:18,370 --> 00:13:25,480
to determine the apk type all right so

309
00:13:23,470 --> 00:13:29,140
with the reviews that I've done at home

310
00:13:25,480 --> 00:13:31,420
and at work there are three types

311
00:13:29,140 --> 00:13:34,030
primarily there's the native type which

312
00:13:31,420 --> 00:13:37,689
is written in Java and sometimes C++ but

313
00:13:34,030 --> 00:13:40,150
usually they're just Java you then have

314
00:13:37,690 --> 00:13:42,730
an html5 app an example of that to say

315
00:13:40,150 --> 00:13:45,160
Apache Cordova and the third type is a

316
00:13:42,730 --> 00:13:48,430
cross-platform app typically written in

317
00:13:45,160 --> 00:13:50,079
xamarin and so determining the apk type

318
00:13:48,430 --> 00:13:51,729
will tell us how to continue their view

319
00:13:50,080 --> 00:13:55,390
so it's sort of like one of those choose

320
00:13:51,730 --> 00:13:57,310
your own destiny books so again here the

321
00:13:55,390 --> 00:14:01,150
apk types but how do we determine which

322
00:13:57,310 --> 00:14:04,930
is which and what we do next all right

323
00:14:01,150 --> 00:14:07,569
we'll start with the native apk type and

324
00:14:04,930 --> 00:14:10,329
I'll probably see more of these than

325
00:14:07,570 --> 00:14:11,980
anything but again as a first step all

326
00:14:10,330 --> 00:14:16,660
we're going to do is rename that apk to

327
00:14:11,980 --> 00:14:17,860
dot zip and browse and most of the time

328
00:14:16,660 --> 00:14:21,880
these are written in Java

329
00:14:17,860 --> 00:14:23,350
sometimes C++ but you can tell that this

330
00:14:21,880 --> 00:14:24,880
is a job at because you look at the

331
00:14:23,350 --> 00:14:27,430
folder here and it says Java in the

332
00:14:24,880 --> 00:14:30,640
classes.dex and that tells us that this

333
00:14:27,430 --> 00:14:35,349
is a native app and here we've got some

334
00:14:30,640 --> 00:14:36,850
pros and cons for using a native app and

335
00:14:35,350 --> 00:14:40,810
you can read those you know it's it's

336
00:14:36,850 --> 00:14:43,330
typically fast there is cons in that it

337
00:14:40,810 --> 00:14:45,670
has a multiple code basis because you've

338
00:14:43,330 --> 00:14:47,770
got to have an Android app as well as an

339
00:14:45,670 --> 00:14:50,829
iOS app and typically because you have

340
00:14:47,770 --> 00:14:53,829
the two code bases it will cost more to

341
00:14:50,830 --> 00:14:56,440
develop and can oftentimes take longer

342
00:14:53,830 --> 00:15:03,190
to build all right so that's our first

343
00:14:56,440 --> 00:15:05,860
type the next type is our html5 app an

344
00:15:03,190 --> 00:15:08,230
html5 app is an app that just contains a

345
00:15:05,860 --> 00:15:10,480
webview of a mobile website that's it

346
00:15:08,230 --> 00:15:12,220
you can easily review the contents of a

347
00:15:10,480 --> 00:15:14,170
zip and sometimes there are some

348
00:15:12,220 --> 00:15:17,260
interesting things and I'll say again

349
00:15:14,170 --> 00:15:20,410
quote hidden in these files so we can

350
00:15:17,260 --> 00:15:23,970
tell this is an html5 app by again

351
00:15:20,410 --> 00:15:25,949
renaming that app this is it browsing it

352
00:15:23,970 --> 00:15:28,230
you can see that the app is written

353
00:15:25,949 --> 00:15:30,449
mostly in HTML and JavaScript when you

354
00:15:28,230 --> 00:15:31,920
see an assets folder and you're looking

355
00:15:30,449 --> 00:15:34,680
at assets full or just kind of look

356
00:15:31,920 --> 00:15:38,099
around and you can see the HTML files

357
00:15:34,680 --> 00:15:40,339
there there'll be JavaScript files and

358
00:15:38,100 --> 00:15:43,439
again there are pros and cons to using

359
00:15:40,339 --> 00:15:45,540
html5 there's a single code base it's

360
00:15:43,439 --> 00:15:48,509
probably the least expensive and easiest

361
00:15:45,540 --> 00:15:50,939
to build but some of the cons are that

362
00:15:48,509 --> 00:15:52,500
it's typically slower sometimes has

363
00:15:50,939 --> 00:15:54,540
limited functionality they are

364
00:15:52,500 --> 00:15:58,860
vulnerable to web-based attacks and they

365
00:15:54,540 --> 00:16:00,719
can have insecure plugins okay so let's

366
00:15:58,860 --> 00:16:05,040
go to the final apk type and that is a

367
00:16:00,720 --> 00:16:06,870
cross-platform app a cross-platform app

368
00:16:05,040 --> 00:16:09,420
is built using a framework that creates

369
00:16:06,870 --> 00:16:11,850
both the Android and the iOS version of

370
00:16:09,420 --> 00:16:14,759
the application from one code base we

371
00:16:11,850 --> 00:16:19,740
can tell this is cross-platform by again

372
00:16:14,759 --> 00:16:21,930
renaming the apk to zip and browsing if

373
00:16:19,740 --> 00:16:23,959
you see an Assemblies folder that's your

374
00:16:21,930 --> 00:16:27,060
dead giveaway that this is a

375
00:16:23,959 --> 00:16:28,349
cross-platform app and the app is you

376
00:16:27,060 --> 00:16:30,199
know nine times out of ten you see

377
00:16:28,350 --> 00:16:33,269
cross-platform it's written in dotnet

378
00:16:30,199 --> 00:16:37,339
using xamarin and then assemblies folder

379
00:16:33,269 --> 00:16:40,199
contains all of the dotnet classes files

380
00:16:37,339 --> 00:16:43,980
which are called assemblies to build

381
00:16:40,199 --> 00:16:46,529
that app then again pros and cons lists

382
00:16:43,980 --> 00:16:48,449
as well so a pro would be the single

383
00:16:46,529 --> 00:16:50,519
codebase and that single codebase for

384
00:16:48,449 --> 00:16:51,870
both iOS and Android it's not as

385
00:16:50,519 --> 00:16:52,980
expensive to build and it's got a full

386
00:16:51,870 --> 00:16:55,079
development environment including

387
00:16:52,980 --> 00:16:57,059
testing and as you can read some of the

388
00:16:55,079 --> 00:16:59,219
cons or require c-sharp and visual

389
00:16:57,059 --> 00:17:00,629
studio now for me that's a pro but there

390
00:16:59,220 --> 00:17:03,120
are some people that do not like Visual

391
00:17:00,629 --> 00:17:06,449
Studio or c-sharp and again this one can

392
00:17:03,120 --> 00:17:09,000
also have insecure plugins alright so

393
00:17:06,449 --> 00:17:11,100
now that we've reviewed the three types

394
00:17:09,000 --> 00:17:14,849
of apk let's look at step five the last

395
00:17:11,099 --> 00:17:16,619
step and for me the most exciting part

396
00:17:14,849 --> 00:17:19,889
of the presentation let's look at some

397
00:17:16,619 --> 00:17:22,948
code and again determining the apk time

398
00:17:19,890 --> 00:17:26,750
is how we will know what utility to use

399
00:17:22,949 --> 00:17:29,820
to look at the D compiled source code

400
00:17:26,750 --> 00:17:31,740
alright so here in step 5 show me the

401
00:17:29,820 --> 00:17:34,320
code means let's decompile each object

402
00:17:31,740 --> 00:17:36,149
and look at the source code and there's

403
00:17:34,320 --> 00:17:37,049
little hot peppers at the bottom they

404
00:17:36,149 --> 00:17:39,119
represent the dip

405
00:17:37,049 --> 00:17:43,200
cooking level from 1 to slut 1 to 5

406
00:17:39,119 --> 00:17:46,049
there and if we start here at the native

407
00:17:43,200 --> 00:17:48,899
the Java based app you can use bytecode

408
00:17:46,049 --> 00:17:51,179
viewer or Android studio to look at the

409
00:17:48,899 --> 00:17:52,889
D compiler code now there is a little

410
00:17:51,179 --> 00:17:55,320
bit of a warning with this one it's it's

411
00:17:52,889 --> 00:17:59,039
one hot pepper of difficulty one out of

412
00:17:55,320 --> 00:18:01,259
five but one caveat here is you could

413
00:17:59,039 --> 00:18:03,929
save dot s o files and those are shared

414
00:18:01,259 --> 00:18:06,690
object files and they are written in C++

415
00:18:03,929 --> 00:18:08,759
and that would give them 5 hot peppers

416
00:18:06,690 --> 00:18:10,859
to decompile if not 10 or even 20

417
00:18:08,759 --> 00:18:15,539
because those are extremely difficult to

418
00:18:10,859 --> 00:18:16,470
look at the source for but again 9 times

419
00:18:15,539 --> 00:18:17,999
out of 10 they're gonna be written in

420
00:18:16,470 --> 00:18:20,730
Java and it's pretty easy to look at the

421
00:18:17,999 --> 00:18:23,190
source ok the next one here in our

422
00:18:20,730 --> 00:18:25,619
middle block is html5 typically in

423
00:18:23,190 --> 00:18:28,320
Apache Cordova and that requires bike of

424
00:18:25,619 --> 00:18:30,119
your or Android studio and again it's

425
00:18:28,320 --> 00:18:31,590
not required technically but it is

426
00:18:30,119 --> 00:18:34,408
preferred it just makes your life a lot

427
00:18:31,590 --> 00:18:37,289
easier and again this one is also one

428
00:18:34,409 --> 00:18:41,820
hot pepper so the 1 out of 5 difficulty

429
00:18:37,289 --> 00:18:44,309
pretty easy and then our third block

430
00:18:41,820 --> 00:18:46,918
here is the cross platform or xamarin

431
00:18:44,309 --> 00:18:48,989
app now this one I gave to hot peppers

432
00:18:46,919 --> 00:18:51,239
for difficulty just because you're going

433
00:18:48,989 --> 00:18:52,980
to need bytecode viewer or Android

434
00:18:51,239 --> 00:18:55,379
studio and you're going to need a

435
00:18:52,980 --> 00:18:58,919
product called just decompile and that

436
00:18:55,379 --> 00:19:00,379
will take the dotnet assemblies and

437
00:18:58,919 --> 00:19:02,639
decompiling

438
00:19:00,379 --> 00:19:05,169
so for the final part of this let's look

439
00:19:02,639 --> 00:19:09,290
at a little code

440
00:19:05,170 --> 00:19:11,450
okay so here is a an example of buy code

441
00:19:09,290 --> 00:19:14,870
viewer in the decompile java code for a

442
00:19:11,450 --> 00:19:18,470
native APRA in java so maybe you can see

443
00:19:14,870 --> 00:19:20,809
something wrong with this code you look

444
00:19:18,470 --> 00:19:23,930
here you have something that looks like

445
00:19:20,809 --> 00:19:25,700
an AWS username and password and there

446
00:19:23,930 --> 00:19:28,520
are some people are divs that think that

447
00:19:25,700 --> 00:19:30,440
since the code is compiled you can hide

448
00:19:28,520 --> 00:19:34,220
things in here and that obviously is not

449
00:19:30,440 --> 00:19:38,360
the case so the next slide here is

450
00:19:34,220 --> 00:19:41,090
xamarin net using just decompile and

451
00:19:38,360 --> 00:19:43,760
typically what I will do is open up some

452
00:19:41,090 --> 00:19:46,939
of these dotnet assemblies and click

453
00:19:43,760 --> 00:19:49,370
around and then search for username and

454
00:19:46,940 --> 00:19:51,380
search for password and that usually

455
00:19:49,370 --> 00:19:54,280
gets me a pretty good starting point to

456
00:19:51,380 --> 00:19:56,600
reviewing if anything's hidden in there

457
00:19:54,280 --> 00:19:59,300
so let's look real quick at some things

458
00:19:56,600 --> 00:20:03,590
I've found and things you could find in

459
00:19:59,300 --> 00:20:05,000
decompiled code so I did see this this

460
00:20:03,590 --> 00:20:06,559
message it's pretty funny you know

461
00:20:05,000 --> 00:20:10,160
please don't think about instead send

462
00:20:06,559 --> 00:20:12,710
your resume to XYZ so you know I got a

463
00:20:10,160 --> 00:20:14,870
laughing that one and then I've seen

464
00:20:12,710 --> 00:20:17,600
unauthenticated web services that return

465
00:20:14,870 --> 00:20:19,070
sensitive company information in you

466
00:20:17,600 --> 00:20:21,409
know the developer apparently felt that

467
00:20:19,070 --> 00:20:23,030
since it was compiled these are okay to

468
00:20:21,410 --> 00:20:25,940
put in there but they were they were

469
00:20:23,030 --> 00:20:27,139
wide open and dangerous and I was able

470
00:20:25,940 --> 00:20:29,390
to call and talk to the developer and

471
00:20:27,140 --> 00:20:31,520
get him to fix it I've seen back to

472
00:20:29,390 --> 00:20:33,080
earth in a crate authentication creds I

473
00:20:31,520 --> 00:20:34,970
only see one of those but it does happen

474
00:20:33,080 --> 00:20:37,030
now I've got this one in red the

475
00:20:34,970 --> 00:20:40,580
excessive permissions because I see that

476
00:20:37,030 --> 00:20:42,470
almost every time and with the excessive

477
00:20:40,580 --> 00:20:44,149
permissions if it's a vendor you can

478
00:20:42,470 --> 00:20:47,780
easily go back to them and say hey do

479
00:20:44,150 --> 00:20:49,370
you really need camera contacts know

480
00:20:47,780 --> 00:20:51,678
whatever permission maybe do you really

481
00:20:49,370 --> 00:20:53,270
need all this and a lot of times they'll

482
00:20:51,679 --> 00:20:54,710
come back and say no we really don't or

483
00:20:53,270 --> 00:20:57,050
yes we do and here's the reason why

484
00:20:54,710 --> 00:20:59,750
which is great and I've even gone to the

485
00:20:57,050 --> 00:21:01,370
Google Play Store with that and sent a

486
00:20:59,750 --> 00:21:03,620
message to the developer that a public

487
00:21:01,370 --> 00:21:05,510
message saying you know you've got all

488
00:21:03,620 --> 00:21:08,149
these permissions are these really

489
00:21:05,510 --> 00:21:11,090
needed and they've come back and said

490
00:21:08,150 --> 00:21:13,250
yes and here's why so you know you

491
00:21:11,090 --> 00:21:16,070
definitely can do that too I've seen

492
00:21:13,250 --> 00:21:18,490
passwords and decompiled code and secret

493
00:21:16,070 --> 00:21:20,530
web slash API keys for

494
00:21:18,490 --> 00:21:22,059
Amazon Web Services as your et cetera

495
00:21:20,530 --> 00:21:27,580
and that's kind of where that example

496
00:21:22,059 --> 00:21:29,889
before came from and let's look at some

497
00:21:27,580 --> 00:21:33,428
examples or actually just one example of

498
00:21:29,890 --> 00:21:36,040
some malicious code hey so a question in

499
00:21:33,429 --> 00:21:38,890
the chat yeah wanted to know why is

500
00:21:36,040 --> 00:21:43,928
viewing C++ code more difficult based on

501
00:21:38,890 --> 00:21:50,110
the hot pepper scale oh well the short

502
00:21:43,929 --> 00:21:52,210
answer is that C++ builds its projects

503
00:21:50,110 --> 00:21:54,669
differently than say Java so Java files

504
00:21:52,210 --> 00:21:59,260
are interpreted where C++ is not so much

505
00:21:54,670 --> 00:22:02,410
and so the bytecode this generated from

506
00:21:59,260 --> 00:22:04,000
Java you can see that but in C++ it's

507
00:22:02,410 --> 00:22:07,450
extremely difficult and you've got to

508
00:22:04,000 --> 00:22:09,580
use honest disassembler and look at it

509
00:22:07,450 --> 00:22:12,059
look at the assembly code that's

510
00:22:09,580 --> 00:22:15,879
disassembled so the reason is that it's

511
00:22:12,059 --> 00:22:19,420
the reason the the method in which it's

512
00:22:15,880 --> 00:22:27,820
built in C++ is different from Java or C

513
00:22:19,420 --> 00:22:31,210
sharp got it thank you

514
00:22:27,820 --> 00:22:32,770
okay so again this is an example of

515
00:22:31,210 --> 00:22:36,220
malicious code and this does a

516
00:22:32,770 --> 00:22:37,750
multi-factor authentication bypass and

517
00:22:36,220 --> 00:22:40,110
if you can see the code there it's got a

518
00:22:37,750 --> 00:22:43,570
bunch of weird characters and

519
00:22:40,110 --> 00:22:46,300
backsplashes and encoding and if you

520
00:22:43,570 --> 00:22:49,090
ever come across this this is bad bad

521
00:22:46,300 --> 00:22:53,919
bad there's absolutely no reason to do

522
00:22:49,090 --> 00:22:56,320
any of this absolutely no reason okay so

523
00:22:53,920 --> 00:22:57,790
before we conclude there are a couple of

524
00:22:56,320 --> 00:23:01,090
other things you can try if you're

525
00:22:57,790 --> 00:23:03,970
feeling advanced and I'll warn you this

526
00:23:01,090 --> 00:23:06,580
is a little bit of a geek alert so you

527
00:23:03,970 --> 00:23:09,370
can use Android studio and browse the

528
00:23:06,580 --> 00:23:12,189
device files and it's really easy you

529
00:23:09,370 --> 00:23:15,399
just click open the APK click browse

530
00:23:12,190 --> 00:23:17,770
files and you can find keys you can find

531
00:23:15,400 --> 00:23:22,300
databases you can find XML config files

532
00:23:17,770 --> 00:23:24,250
all with a wealth of information and one

533
00:23:22,300 --> 00:23:26,399
of the best spots to find information is

534
00:23:24,250 --> 00:23:29,919
if you use the file browse go to data

535
00:23:26,400 --> 00:23:32,650
slash data / whatever app you're looking

536
00:23:29,919 --> 00:23:34,510
at and look for the sequel Lite database

537
00:23:32,650 --> 00:23:37,270
and these are just little tiny databases

538
00:23:34,510 --> 00:23:39,040
and they contain an unbelievable amount

539
00:23:37,270 --> 00:23:42,010
of information in most of the times

540
00:23:39,040 --> 00:23:45,070
they're not encrypted so I look you know

541
00:23:42,010 --> 00:23:48,180
I looked there first for sure and then

542
00:23:45,070 --> 00:23:52,720
if we want to watch the traffic from a

543
00:23:48,180 --> 00:23:55,210
Android app you can hook up the emulator

544
00:23:52,720 --> 00:23:58,540
to burp sweep so again watch the traffic

545
00:23:55,210 --> 00:24:01,780
means let's just see what this mobile

546
00:23:58,540 --> 00:24:02,860
app is communicating with nine times out

547
00:24:01,780 --> 00:24:05,160
of ten they're going to communicate with

548
00:24:02,860 --> 00:24:08,199
an external web server or web service

549
00:24:05,160 --> 00:24:10,330
now all we have to do is first set the

550
00:24:08,200 --> 00:24:13,000
pin on the emulator and then you're

551
00:24:10,330 --> 00:24:15,129
going to want install the burp search on

552
00:24:13,000 --> 00:24:17,860
the emulator and that does require our

553
00:24:15,130 --> 00:24:19,930
pin so don't forget to set it and you

554
00:24:17,860 --> 00:24:22,810
simply just spin up on your desktop a

555
00:24:19,930 --> 00:24:24,700
one-liner from python to spin up this

556
00:24:22,810 --> 00:24:26,649
little built-in web server and you

557
00:24:24,700 --> 00:24:28,270
transfer the search from your desktop to

558
00:24:26,650 --> 00:24:30,970
the emulator and then the emulator

559
00:24:28,270 --> 00:24:33,639
installs and that enables us to decrypt

560
00:24:30,970 --> 00:24:35,500
the traffic going through you then just

561
00:24:33,640 --> 00:24:40,030
say your emulator settings to locals

562
00:24:35,500 --> 00:24:42,130
which is that 127.0.0.1 and 8080 is the

563
00:24:40,030 --> 00:24:43,540
port and then you can capture the

564
00:24:42,130 --> 00:24:46,330
traffic and a lot of times what I'll do

565
00:24:43,540 --> 00:24:49,360
is watch that traffic come through and

566
00:24:46,330 --> 00:24:52,810
then replay it out of context and that

567
00:24:49,360 --> 00:24:55,000
kind of gives you some insight onto what

568
00:24:52,810 --> 00:24:57,760
the app is calling you know if it's

569
00:24:55,000 --> 00:25:00,430
encrypted if it's not and a lot of other

570
00:24:57,760 --> 00:25:02,950
details about that application and again

571
00:25:00,430 --> 00:25:04,660
this is kind of the more advanced but

572
00:25:02,950 --> 00:25:10,660
it's still not really that difficult to

573
00:25:04,660 --> 00:25:13,030
do alright so in conclusion we've taken

574
00:25:10,660 --> 00:25:15,580
a crash course on how to review a mobile

575
00:25:13,030 --> 00:25:19,389
Android app so we look at the risks both

576
00:25:15,580 --> 00:25:21,010
for personal and business and we made a

577
00:25:19,390 --> 00:25:22,630
point that you know make sure you had

578
00:25:21,010 --> 00:25:26,290
that discussion whether it's with your

579
00:25:22,630 --> 00:25:27,760
business or your kids or family and we

580
00:25:26,290 --> 00:25:29,409
looked at the permissions and age

581
00:25:27,760 --> 00:25:31,750
restrictions from the Google Play Store

582
00:25:29,410 --> 00:25:35,470
and then we dug a little deeper and it

583
00:25:31,750 --> 00:25:40,900
looked at the app type the content of

584
00:25:35,470 --> 00:25:42,910
the apks and also the code alright so

585
00:25:40,900 --> 00:25:45,550
here's some sources and tools that I use

586
00:25:42,910 --> 00:25:46,530
and again Android studio and bytecode

587
00:25:45,550 --> 00:25:48,780
viewer are

588
00:25:46,530 --> 00:25:51,450
far my favorite and there just make it

589
00:25:48,780 --> 00:25:54,090
so easy just decompile is another one

590
00:25:51,450 --> 00:25:55,350
and then you have some other ABS here

591
00:25:54,090 --> 00:25:58,470
the Dexter jar

592
00:25:55,350 --> 00:26:00,570
JD GUI these are a little bit more

593
00:25:58,470 --> 00:26:02,220
difficult and require extra steps and I

594
00:26:00,570 --> 00:26:05,909
almost hesitate to put them in here but

595
00:26:02,220 --> 00:26:08,160
they've there's such a staple in

596
00:26:05,910 --> 00:26:09,990
reviewing these things that most the

597
00:26:08,160 --> 00:26:11,460
time when you look up how to review an

598
00:26:09,990 --> 00:26:13,170
Android app you're gonna see those first

599
00:26:11,460 --> 00:26:15,930
that Dexter jar and that Jake it was

600
00:26:13,170 --> 00:26:20,100
first then we've got the Oh wasp and

601
00:26:15,930 --> 00:26:22,770
some permissions definitions and then

602
00:26:20,100 --> 00:26:26,250
the multi-factor authentication bypass

603
00:26:22,770 --> 00:26:29,850
is an app called Joker and there's a

604
00:26:26,250 --> 00:26:31,740
link to that okay everyone thank you so

605
00:26:29,850 --> 00:26:34,709
much for listening there any questions I

606
00:26:31,740 --> 00:26:36,600
can answer them or after this I'll hop

607
00:26:34,710 --> 00:26:39,200
on discord you know just let me know and

608
00:26:36,600 --> 00:26:39,199
thank you again

