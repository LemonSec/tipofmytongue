1
00:00:04,470 --> 00:00:08,850
so good afternoon everyone mom I'm here

2
00:00:07,049 --> 00:00:12,629
today talk to you a bit about API

3
00:00:08,850 --> 00:00:14,160
security in depth we're gonna go through

4
00:00:12,629 --> 00:00:16,049
kind of some of the ins and outs of API

5
00:00:14,160 --> 00:00:17,460
security what that means to you know

6
00:00:16,049 --> 00:00:19,439
someone's just getting into the as well

7
00:00:17,460 --> 00:00:22,890
as we'll talk some more about some

8
00:00:19,439 --> 00:00:24,210
common API scenarios that might increase

9
00:00:22,890 --> 00:00:26,939
the amount of vulnerabilities you have

10
00:00:24,210 --> 00:00:28,380
and as well start talking about how this

11
00:00:26,939 --> 00:00:30,779
all ties into sort of a proactive

12
00:00:28,380 --> 00:00:35,519
security campaign including using a wasp

13
00:00:30,779 --> 00:00:36,780
as a resource so Who am I so I'm from a

14
00:00:35,520 --> 00:00:38,570
company called checkmarks we're based

15
00:00:36,780 --> 00:00:40,350
out of Israel I am a sales engineer

16
00:00:38,570 --> 00:00:42,390
covering all of Canada

17
00:00:40,350 --> 00:00:45,330
so I'm actually north of you guys right

18
00:00:42,390 --> 00:00:46,770
now I'm in Toronto just north so if you

19
00:00:45,330 --> 00:00:48,480
hear my Canadian accent you are more

20
00:00:46,770 --> 00:00:51,750
than welcome to laugh at me that is okay

21
00:00:48,480 --> 00:00:53,400
it is actually very cold up here

22
00:00:51,750 --> 00:00:55,050
it's probably 15 degrees Celsius I think

23
00:00:53,400 --> 00:00:56,370
that's about 60 compared to you guys so

24
00:00:55,050 --> 00:00:59,069
we're a little chilly a little

25
00:00:56,370 --> 00:01:00,570
unseasonable cool but I'm hoping

26
00:00:59,070 --> 00:01:01,980
everyone else's have a great day you're

27
00:01:00,570 --> 00:01:03,750
watching this outside on a patio with a

28
00:01:01,980 --> 00:01:06,539
beer or something that would be great

29
00:01:03,750 --> 00:01:08,670
I've spent 17 years before pre-sales in

30
00:01:06,540 --> 00:01:11,880
a Berry's deaf roles I started off small

31
00:01:08,670 --> 00:01:13,350
FinTech in Toronto as a junior developer

32
00:01:11,880 --> 00:01:15,270
using a language called progress which

33
00:01:13,350 --> 00:01:16,589
you don't hear about too often anymore

34
00:01:15,270 --> 00:01:19,140
and then I sort of worked my way through

35
00:01:16,590 --> 00:01:21,120
that company for 17 or 16 and a half

36
00:01:19,140 --> 00:01:22,560
years actually there you know making my

37
00:01:21,120 --> 00:01:24,540
way up to a system and integration

38
00:01:22,560 --> 00:01:28,500
architect before I decided to come over

39
00:01:24,540 --> 00:01:30,600
to the dark side with sales so I have

40
00:01:28,500 --> 00:01:32,130
spent some time at micro focus and

41
00:01:30,600 --> 00:01:33,619
Hewlett Packard Enterprise more of the

42
00:01:32,130 --> 00:01:36,179
performance testing functional testing

43
00:01:33,620 --> 00:01:37,590
lifecycle management site but I joined

44
00:01:36,180 --> 00:01:40,830
checkmarks just over a year and a half

45
00:01:37,590 --> 00:01:42,960
ago I have always you know as Deb you

46
00:01:40,830 --> 00:01:44,490
kind of have a strong belief in security

47
00:01:42,960 --> 00:01:46,710
awareness and always learning more but

48
00:01:44,490 --> 00:01:47,509
it's always a good tool so that's who I

49
00:01:46,710 --> 00:01:49,949
am

50
00:01:47,510 --> 00:01:50,850
I do want to remind everyone before we

51
00:01:49,950 --> 00:01:54,780
get going because we're running out of

52
00:01:50,850 --> 00:01:56,548
time the raffle closes at four o'clock

53
00:01:54,780 --> 00:01:58,830
so if you would like to get a Yeti

54
00:01:56,549 --> 00:01:59,940
cooler I can personally stand to buy

55
00:01:58,830 --> 00:02:01,229
those products they're actually really

56
00:01:59,940 --> 00:02:02,640
fantastic it's the only one that

57
00:02:01,229 --> 00:02:06,689
survived two kids and a wife who is

58
00:02:02,640 --> 00:02:07,950
clumsy I would make you I would give you

59
00:02:06,689 --> 00:02:09,810
a moment to just go and register for

60
00:02:07,950 --> 00:02:12,000
that now you've probably got about 13

61
00:02:09,810 --> 00:02:13,470
minutes left to go so drop your name in

62
00:02:12,000 --> 00:02:16,069
and hope for the best you can't play you

63
00:02:13,470 --> 00:02:16,069
can't win if you don't play

64
00:02:16,760 --> 00:02:20,720
so we're gonna start at a really high

65
00:02:19,189 --> 00:02:22,578
level I'm gonna take it right from there

66
00:02:20,720 --> 00:02:25,220
all the way down to sort of seeing the

67
00:02:22,579 --> 00:02:26,900
the vulnerabilities in action we'll talk

68
00:02:25,220 --> 00:02:29,359
about some examples and some sort of

69
00:02:26,900 --> 00:02:32,269
best practices and ways to detect them

70
00:02:29,360 --> 00:02:34,370
and why we think there are a new threat

71
00:02:32,269 --> 00:02:36,260
landscape when it comes to api's and and

72
00:02:34,370 --> 00:02:38,450
how the OWASP API security project will

73
00:02:36,260 --> 00:02:40,190
kind of come into all that so for

74
00:02:38,450 --> 00:02:43,399
everybody who's new API stands for

75
00:02:40,190 --> 00:02:44,840
application programming interface pretty

76
00:02:43,400 --> 00:02:46,069
common stuff everyone usually knows what

77
00:02:44,840 --> 00:02:48,379
it is that you guys pretty nice short

78
00:02:46,069 --> 00:02:50,510
form for it to find out what that means

79
00:02:48,379 --> 00:02:52,489
we kind of have to go back to the holy

80
00:02:50,510 --> 00:02:53,899
grail which is always Wikipedia it's

81
00:02:52,489 --> 00:02:55,940
either that or a gardener slide in most

82
00:02:53,900 --> 00:03:00,260
of my presentation so I got my checkbox

83
00:02:55,940 --> 00:03:01,760
here an API is an interface or

84
00:03:00,260 --> 00:03:02,959
communication protocol between a client

85
00:03:01,760 --> 00:03:05,420
and a server I think that's really the

86
00:03:02,959 --> 00:03:07,159
important part there and the follow-on

87
00:03:05,420 --> 00:03:08,599
to that is why and it's really there to

88
00:03:07,159 --> 00:03:10,909
simplify the building of client-side

89
00:03:08,599 --> 00:03:13,578
software it's really taken off in the

90
00:03:10,909 --> 00:03:15,470
last few years and that's sort of you

91
00:03:13,579 --> 00:03:18,079
know kind of why this this project has

92
00:03:15,470 --> 00:03:21,290
come about I'd I'm sure most of you have

93
00:03:18,079 --> 00:03:23,329
seen a change in the industry recently

94
00:03:21,290 --> 00:03:24,769
probably in a short term even as a

95
00:03:23,329 --> 00:03:25,910
little more than four or five years ago

96
00:03:24,769 --> 00:03:27,349
probably more than that if you're kind

97
00:03:25,910 --> 00:03:29,660
of right in the you know finger of the

98
00:03:27,349 --> 00:03:31,358
pulse but really that's where you know

99
00:03:29,660 --> 00:03:33,590
more api's is kind of where we're going

100
00:03:31,359 --> 00:03:34,849
that's really sort of the universal

101
00:03:33,590 --> 00:03:36,470
standard we're using now to let machines

102
00:03:34,849 --> 00:03:38,510
talk to machines to let people talk to

103
00:03:36,470 --> 00:03:40,010
mission people and do all the work that

104
00:03:38,510 --> 00:03:42,379
we used to do with sort of a more

105
00:03:40,010 --> 00:03:46,459
packaged clients a client application

106
00:03:42,379 --> 00:03:48,290
like a web browser or something so you

107
00:03:46,459 --> 00:03:50,599
know who uses everybody but who uses

108
00:03:48,290 --> 00:03:52,400
api's and that's pretty much everybody I

109
00:03:50,599 --> 00:03:53,810
mean I can throw all my little buzzwords

110
00:03:52,400 --> 00:03:56,660
up here in a sort of a spaghetti of

111
00:03:53,810 --> 00:03:58,010
acronyms if you have any more you want

112
00:03:56,660 --> 00:03:59,510
to throw them up there let me know put

113
00:03:58,010 --> 00:04:01,548
it in the FISC or chat no I'll add it to

114
00:03:59,510 --> 00:04:03,138
the slide but you know microservices

115
00:04:01,549 --> 00:04:05,480
mobile the Internet of Things

116
00:04:03,139 --> 00:04:06,680
you know b2b serverless cloud and and

117
00:04:05,480 --> 00:04:08,659
even the spa's your single page

118
00:04:06,680 --> 00:04:11,239
applications all these are heavy

119
00:04:08,659 --> 00:04:13,340
consumers of API so and that's really

120
00:04:11,239 --> 00:04:14,540
again I'm just I like to put the comic

121
00:04:13,340 --> 00:04:16,190
up here it's everyone has something to

122
00:04:14,540 --> 00:04:18,620
read but really the whole point of this

123
00:04:16,190 --> 00:04:20,750
is that most of modern applications are

124
00:04:18,620 --> 00:04:21,829
very well versed in api's and the usage

125
00:04:20,750 --> 00:04:26,150
of them is pretty much a core

126
00:04:21,829 --> 00:04:27,979
functionality so when I talk about API

127
00:04:26,150 --> 00:04:29,120
security what I'm really talking about

128
00:04:27,979 --> 00:04:31,849
here is the secure

129
00:04:29,120 --> 00:04:34,550
of modern applications and that's really

130
00:04:31,850 --> 00:04:38,210
what we'll be talking about today so you

131
00:04:34,550 --> 00:04:39,710
might be asking what that means and what

132
00:04:38,210 --> 00:04:41,239
do I mean by modern application what did

133
00:04:39,710 --> 00:04:42,560
it used to be and we'll go through this

134
00:04:41,240 --> 00:04:44,780
in a couple slides but I just wanted to

135
00:04:42,560 --> 00:04:48,139
kind of level set where we are here

136
00:04:44,780 --> 00:04:49,400
today with API security and how we're

137
00:04:48,139 --> 00:04:51,470
moving forward with that and how it's

138
00:04:49,400 --> 00:04:52,609
different from from a lot of the things

139
00:04:51,470 --> 00:04:54,889
you've done before you know we really

140
00:04:52,610 --> 00:04:56,389
did spend a lot of time and most of us

141
00:04:54,889 --> 00:04:58,190
have a general handle on what an

142
00:04:56,389 --> 00:05:00,919
injection attack is and as a you know we

143
00:04:58,190 --> 00:05:02,419
all have a lot of training at least when

144
00:05:00,919 --> 00:05:03,950
it comes to sort of the old or not

145
00:05:02,419 --> 00:05:05,930
really I wouldn't call a legacy but a

146
00:05:03,950 --> 00:05:08,870
less modern application with less api's

147
00:05:05,930 --> 00:05:11,600
but the landscapes changed and really we

148
00:05:08,870 --> 00:05:13,160
need to be on board and we need to have

149
00:05:11,600 --> 00:05:14,330
sort of a separate area to deal with

150
00:05:13,160 --> 00:05:16,729
that because the risks and

151
00:05:14,330 --> 00:05:18,020
vulnerabilities can be similar but

152
00:05:16,729 --> 00:05:19,250
they're really not the same and it

153
00:05:18,020 --> 00:05:20,900
really needs its own space and it really

154
00:05:19,250 --> 00:05:22,370
needs its own light shining on it to

155
00:05:20,900 --> 00:05:24,138
give you the clarity you need because

156
00:05:22,370 --> 00:05:27,229
you can't extrapolate this out from the

157
00:05:24,139 --> 00:05:29,300
old wasta top ten so we're gonna talk

158
00:05:27,229 --> 00:05:31,099
about how it's all different how an API

159
00:05:29,300 --> 00:05:32,720
based app can work in today's world

160
00:05:31,100 --> 00:05:35,620
versus how it used to work when sort of

161
00:05:32,720 --> 00:05:37,700
a web browser client-server application

162
00:05:35,620 --> 00:05:39,710
we'll talk about why I think they

163
00:05:37,700 --> 00:05:41,030
deserve their own attention and why

164
00:05:39,710 --> 00:05:43,520
they're different and the threat

165
00:05:41,030 --> 00:05:46,219
landscape of it is different than a sort

166
00:05:43,520 --> 00:05:48,380
of a non API less modern application

167
00:05:46,220 --> 00:05:50,599
we're gonna talk about the new OWASP API

168
00:05:48,380 --> 00:05:53,240
security project that sort of hit late

169
00:05:50,599 --> 00:05:56,060
last year early this year before the

170
00:05:53,240 --> 00:05:56,990
pandemics and killer Hornets and geez

171
00:05:56,060 --> 00:05:59,780
everything else that's kind of gone on

172
00:05:56,990 --> 00:06:01,190
this year and we'll talk about that and

173
00:05:59,780 --> 00:06:02,299
you know I really really hope by the end

174
00:06:01,190 --> 00:06:04,430
of it I can convince at least a couple

175
00:06:02,300 --> 00:06:05,870
of you two to join up and help and help

176
00:06:04,430 --> 00:06:07,669
contribute great and that's really what

177
00:06:05,870 --> 00:06:08,900
you know OWASP is great for it's great

178
00:06:07,669 --> 00:06:09,770
for getting all this all together to

179
00:06:08,900 --> 00:06:11,929
sort of standardize these

180
00:06:09,770 --> 00:06:13,010
vulnerabilities and and if you're

181
00:06:11,930 --> 00:06:14,900
interested in this and this is something

182
00:06:13,010 --> 00:06:15,979
that that tickles your knowledge then

183
00:06:14,900 --> 00:06:17,299
we'd be happy to have you no I don't

184
00:06:15,979 --> 00:06:23,110
have some information for you at the end

185
00:06:17,300 --> 00:06:25,940
about how to how to sign up for that and

186
00:06:23,110 --> 00:06:27,020
then the end of the presentation after

187
00:06:25,940 --> 00:06:28,370
we kind of go through all of that we're

188
00:06:27,020 --> 00:06:29,750
going to talk about the actual top ten

189
00:06:28,370 --> 00:06:31,340
we're gonna go through each of the items

190
00:06:29,750 --> 00:06:33,950
in the list and we're gonna talk about

191
00:06:31,340 --> 00:06:36,260
what they are why they're so prevalent

192
00:06:33,950 --> 00:06:39,820
and maybe some examples here and there

193
00:06:36,260 --> 00:06:39,820
as we go you know as appropriate

194
00:06:40,169 --> 00:06:45,900
okay so how are a pee eyes based apps

195
00:06:44,129 --> 00:06:47,550
different and really this is this is the

196
00:06:45,900 --> 00:06:50,340
the key differentiator here when you're

197
00:06:47,550 --> 00:06:51,870
talking about sort of an API modern app

198
00:06:50,340 --> 00:06:53,068
and and the way it used to be there's

199
00:06:51,870 --> 00:06:57,599
there's a lot of differences but really

200
00:06:53,069 --> 00:06:59,310
it comes down to you know the clients

201
00:06:57,599 --> 00:07:01,169
devices are becoming more varied and

202
00:06:59,310 --> 00:07:03,060
stronger I want and when I say varied I

203
00:07:01,169 --> 00:07:06,990
mean it's no longer just a computer with

204
00:07:03,060 --> 00:07:08,189
a internet explorer or a Chrome or

205
00:07:06,990 --> 00:07:10,979
Firefox that's running an application

206
00:07:08,189 --> 00:07:12,270
and all the work is being done somewhere

207
00:07:10,979 --> 00:07:13,770
else and then just served up to you

208
00:07:12,270 --> 00:07:15,469
that's not really the world we live in

209
00:07:13,770 --> 00:07:17,580
anymore a lot of more that changes from

210
00:07:15,469 --> 00:07:19,169
moving the information and the logic

211
00:07:17,580 --> 00:07:21,090
from the server to the client so really

212
00:07:19,169 --> 00:07:23,370
the server is really more nothing more

213
00:07:21,090 --> 00:07:24,688
than a data proxy where it grabs the

214
00:07:23,370 --> 00:07:26,310
information gives it back to you but how

215
00:07:24,689 --> 00:07:28,620
its rendered to the device you were on

216
00:07:26,310 --> 00:07:31,680
is up to the device you are on and

217
00:07:28,620 --> 00:07:32,789
that's really sort of a way to allow us

218
00:07:31,680 --> 00:07:34,080
to be stronger to give us more

219
00:07:32,789 --> 00:07:36,479
functionality to give us more

220
00:07:34,080 --> 00:07:38,490
flexibility by moving all that around

221
00:07:36,479 --> 00:07:42,300
and by using these API calls any device

222
00:07:38,490 --> 00:07:44,279
can talk to any other device right so

223
00:07:42,300 --> 00:07:45,689
let's talk about what a traditional

224
00:07:44,279 --> 00:07:46,979
application in the modern application

225
00:07:45,689 --> 00:07:48,689
was sort of something well what they do

226
00:07:46,979 --> 00:07:51,000
similar first and really you know it

227
00:07:48,689 --> 00:07:52,229
starts off with a web browser or in the

228
00:07:51,000 --> 00:07:54,770
case of a modern application maybe

229
00:07:52,229 --> 00:07:57,029
another device a mobile device an IOT

230
00:07:54,770 --> 00:07:58,529
you know wherever you could probably get

231
00:07:57,029 --> 00:08:00,479
you know doom running on a toaster so I

232
00:07:58,529 --> 00:08:01,919
assume we could get that running on you

233
00:08:00,479 --> 00:08:05,068
get an application running on my toaster

234
00:08:01,919 --> 00:08:07,198
- so when it comes down to it generally

235
00:08:05,069 --> 00:08:10,020
speaking the client or the user will

236
00:08:07,199 --> 00:08:11,370
interact with the application and the

237
00:08:10,020 --> 00:08:12,539
application will interact with them and

238
00:08:11,370 --> 00:08:14,430
that's that's basically the same across

239
00:08:12,539 --> 00:08:17,339
the board and and from the other side

240
00:08:14,430 --> 00:08:18,839
the server interacts with the database

241
00:08:17,339 --> 00:08:20,310
and the database we turn something to

242
00:08:18,839 --> 00:08:23,789
the server so those those two parts are

243
00:08:20,310 --> 00:08:25,560
basically the same and the difference

244
00:08:23,789 --> 00:08:26,969
comes in to what we do with that and

245
00:08:25,560 --> 00:08:28,050
where the work is done and as I

246
00:08:26,969 --> 00:08:30,330
mentioned earlier we're talking about

247
00:08:28,050 --> 00:08:32,339
shifting from the back end to the front

248
00:08:30,330 --> 00:08:32,909
end and that's really the key to

249
00:08:32,339 --> 00:08:35,209
parenteral

250
00:08:32,909 --> 00:08:37,349
so in a traditional occupation

251
00:08:35,208 --> 00:08:39,390
application the client would make a

252
00:08:37,349 --> 00:08:42,060
request to the server the server would

253
00:08:39,390 --> 00:08:45,269
do some work and it would return a fully

254
00:08:42,059 --> 00:08:47,250
each fully realized HTML page that the

255
00:08:45,269 --> 00:08:48,510
user could then use and perform work or

256
00:08:47,250 --> 00:08:51,029
play their game or whatever they're

257
00:08:48,510 --> 00:08:52,709
doing you know whatever the applications

258
00:08:51,029 --> 00:08:54,100
supposed to do it was basically all

259
00:08:52,709 --> 00:08:55,839
controlled by the backend

260
00:08:54,100 --> 00:08:57,670
server told them exactly what to do and

261
00:08:55,839 --> 00:08:59,290
pushed it to the front end the

262
00:08:57,670 --> 00:09:01,269
difference now of course is in a modern

263
00:08:59,290 --> 00:09:02,500
application through API calls we're

264
00:09:01,269 --> 00:09:04,269
actually doing a lot of the work on the

265
00:09:02,500 --> 00:09:06,339
front end so instead of just doing a get

266
00:09:04,269 --> 00:09:09,490
of what you need you make multiple

267
00:09:06,339 --> 00:09:12,459
stateless get calls to grab the

268
00:09:09,490 --> 00:09:14,110
information and then the server will

269
00:09:12,459 --> 00:09:16,119
grab that from the database and send it

270
00:09:14,110 --> 00:09:17,529
back raw to the modern application and

271
00:09:16,120 --> 00:09:20,019
that modern application does its work

272
00:09:17,529 --> 00:09:21,670
and that's really the big difference

273
00:09:20,019 --> 00:09:24,459
here is where the work is being done so

274
00:09:21,670 --> 00:09:27,490
the data comes back in a raw form

275
00:09:24,459 --> 00:09:29,829
whether it's a JSON in this case and

276
00:09:27,490 --> 00:09:32,470
then it is parsed and displayed

277
00:09:29,829 --> 00:09:33,670
appropriately to the user and and really

278
00:09:32,470 --> 00:09:35,769
there's a lot of advantages here right

279
00:09:33,670 --> 00:09:37,899
there's uh there's a less abstraction

280
00:09:35,769 --> 00:09:39,279
layers the the client and the server and

281
00:09:37,899 --> 00:09:40,899
the database you usually speak the same

282
00:09:39,279 --> 00:09:43,060
JSON language so that's you know it just

283
00:09:40,899 --> 00:09:44,560
it makes it easier so there's a lot of

284
00:09:43,060 --> 00:09:45,758
things about that that it's really great

285
00:09:44,560 --> 00:09:48,729
to happen it's one of the reasons it's

286
00:09:45,759 --> 00:09:49,899
really taken off but when I say

287
00:09:48,730 --> 00:09:51,670
something is good for me that doesn't

288
00:09:49,899 --> 00:09:54,069
mean it's also not good for bad actors

289
00:09:51,670 --> 00:09:55,750
or people who are trying to poke holes

290
00:09:54,069 --> 00:09:57,430
or people who are trying to do things

291
00:09:55,750 --> 00:09:59,410
maliciously and that's that's the other

292
00:09:57,430 --> 00:10:01,359
problem is that while it's great for us

293
00:09:59,410 --> 00:10:03,399
and it's great to help us write these

294
00:10:01,360 --> 00:10:05,199
scaling applications that do all sorts

295
00:10:03,399 --> 00:10:07,060
of wonderful things it also makes it

296
00:10:05,199 --> 00:10:08,349
just a bit easier in some ways for for

297
00:10:07,060 --> 00:10:12,758
bad actors to get in there and make

298
00:10:08,350 --> 00:10:13,870
trouble right and so then we I'm just

299
00:10:12,759 --> 00:10:15,130
sort of covering all this year I don't

300
00:10:13,870 --> 00:10:16,630
want to talk to each one of these slides

301
00:10:15,130 --> 00:10:19,360
but you know generally speaking like I

302
00:10:16,630 --> 00:10:21,579
said it's a proxy for data some of it

303
00:10:19,360 --> 00:10:23,350
you know it's the clients are now going

304
00:10:21,579 --> 00:10:24,790
to consume more data and we'll talk

305
00:10:23,350 --> 00:10:28,569
about that as we sort of get it into the

306
00:10:24,790 --> 00:10:30,790
top ten of the API security Oh wasps

307
00:10:28,569 --> 00:10:32,170
because the data is just being sent

308
00:10:30,790 --> 00:10:34,089
across you can send anything you want

309
00:10:32,170 --> 00:10:35,529
but then filter out what you want to see

310
00:10:34,089 --> 00:10:37,540
and sometimes this is great and

311
00:10:35,529 --> 00:10:38,529
sometimes this causes problems and

312
00:10:37,540 --> 00:10:40,180
that's sort of what we'll be talking

313
00:10:38,529 --> 00:10:42,699
about here and as well more parameters

314
00:10:40,180 --> 00:10:43,959
are being sent and every request that

315
00:10:42,699 --> 00:10:46,899
would have been sent in a traditional

316
00:10:43,959 --> 00:10:48,040
app and finally you know one of the

317
00:10:46,899 --> 00:10:49,899
things that people don't usually think

318
00:10:48,040 --> 00:10:51,759
about is that the API is expose a lot of

319
00:10:49,899 --> 00:10:54,790
the underlying implementation of the app

320
00:10:51,759 --> 00:10:57,759
and what I mean by that is the ability

321
00:10:54,790 --> 00:10:59,050
to see the API calls back and forth it

322
00:10:57,759 --> 00:11:01,540
is a lot easier with an API to

323
00:10:59,050 --> 00:11:03,849
understand what the calls are and to

324
00:11:01,540 --> 00:11:06,670
make educated guesses about other api's

325
00:11:03,850 --> 00:11:07,720
that are inside the same system and by

326
00:11:06,670 --> 00:11:09,430
doing that is sort of

327
00:11:07,720 --> 00:11:11,620
gives you a little more clarity into how

328
00:11:09,430 --> 00:11:14,050
the implementation of the app works but

329
00:11:11,620 --> 00:11:15,850
it also exposes the risk of it to a

330
00:11:14,050 --> 00:11:18,310
greater extent because now with some

331
00:11:15,850 --> 00:11:20,079
clever guessing or some intuitiveness or

332
00:11:18,310 --> 00:11:22,300
some general patterns you follow you can

333
00:11:20,079 --> 00:11:24,430
really kind of get into the api's and

334
00:11:22,300 --> 00:11:28,449
understand all the entry points that you

335
00:11:24,430 --> 00:11:30,279
can use to formulate an attack and this

336
00:11:28,449 --> 00:11:31,810
one is the other big one the user state

337
00:11:30,279 --> 00:11:33,220
is now actually usually maintained by

338
00:11:31,810 --> 00:11:34,569
the client and not by the server the

339
00:11:33,220 --> 00:11:36,009
service really does live in a sort of a

340
00:11:34,569 --> 00:11:37,930
stateless world and authenticates again

341
00:11:36,009 --> 00:11:39,250
as needed if you're doing it right so

342
00:11:37,930 --> 00:11:40,569
when we talk about authentication and

343
00:11:39,250 --> 00:11:42,490
authorization later on you're gonna see

344
00:11:40,569 --> 00:11:44,410
what I mean by having broken

345
00:11:42,490 --> 00:11:46,149
authorization or authentication you can

346
00:11:44,410 --> 00:11:48,279
open all your api's up to a lot of

347
00:11:46,149 --> 00:11:50,139
problems because the user state is

348
00:11:48,279 --> 00:11:51,699
actually being maintained on the client

349
00:11:50,139 --> 00:11:53,439
side as well so knowing who the user is

350
00:11:51,699 --> 00:11:55,420
and where they are as well as their

351
00:11:53,439 --> 00:11:57,910
authentication back in an authorization

352
00:11:55,420 --> 00:11:58,990
back into the server is really some of

353
00:11:57,910 --> 00:12:01,149
the things that we really have to worry

354
00:11:58,990 --> 00:12:06,519
about now and making sure that all the

355
00:12:01,149 --> 00:12:08,889
attack surfaces are covered so when I

356
00:12:06,519 --> 00:12:11,279
talk about API based apps I'm talking

357
00:12:08,889 --> 00:12:14,170
about of course the the REST API write

358
00:12:11,279 --> 00:12:16,269
representational state transfer you know

359
00:12:14,170 --> 00:12:18,279
just for more acronyms it standardizes

360
00:12:16,269 --> 00:12:19,720
generic it has predictable entry points

361
00:12:18,279 --> 00:12:21,309
and actually one of those entry points

362
00:12:19,720 --> 00:12:22,899
can be used for multiple purposes so

363
00:12:21,309 --> 00:12:24,610
there's a lot of value out of using that

364
00:12:22,899 --> 00:12:27,610
but it comes with just like any other

365
00:12:24,610 --> 00:12:29,050
tool it comes with its own baggage so

366
00:12:27,610 --> 00:12:31,899
it's good for us again good for

367
00:12:29,050 --> 00:12:33,490
attackers so that's one of the reasons

368
00:12:31,899 --> 00:12:36,579
api's have been taking off but really

369
00:12:33,490 --> 00:12:38,470
what about DevOps knapsack ops if you're

370
00:12:36,579 --> 00:12:39,939
a dev sack ops guy I'm thinking I'm not

371
00:12:38,470 --> 00:12:41,350
telling you anything crazy here but you

372
00:12:39,939 --> 00:12:43,149
know api's changed all the time you know

373
00:12:41,350 --> 00:12:46,449
whether you're using a CI CD process

374
00:12:43,149 --> 00:12:48,399
kubernetes docker or any sort of cloud

375
00:12:46,449 --> 00:12:51,959
provider it really doesn't take much to

376
00:12:48,399 --> 00:12:54,579
spin up a few new api's for testing or

377
00:12:51,959 --> 00:12:55,779
for even for the production and and

378
00:12:54,579 --> 00:12:57,160
really that's what the problem comes

379
00:12:55,779 --> 00:12:59,259
into because you could change it so fast

380
00:12:57,160 --> 00:13:01,269
the documentation which is already

381
00:12:59,259 --> 00:13:02,439
usually pretty poor it's going to be

382
00:13:01,269 --> 00:13:03,519
even farther behind trying to play

383
00:13:02,439 --> 00:13:04,779
catch-up and that's really where you

384
00:13:03,519 --> 00:13:07,720
start seeing some of the problems with

385
00:13:04,779 --> 00:13:10,300
shadow api's or undocumented api those

386
00:13:07,720 --> 00:13:13,420
or deprecated API is that are still

387
00:13:10,300 --> 00:13:15,819
accessible and still access data right

388
00:13:13,420 --> 00:13:19,029
easy and fast but you know how fast is

389
00:13:15,819 --> 00:13:20,800
it it's too fast right we don't we don't

390
00:13:19,029 --> 00:13:22,750
want to worry about

391
00:13:20,800 --> 00:13:24,550
your shadow API is about things that

392
00:13:22,750 --> 00:13:28,360
aren't documented but still can do crazy

393
00:13:24,550 --> 00:13:30,250
things or old exposed api's that have

394
00:13:28,360 --> 00:13:31,450
technically been deprecated but nobody's

395
00:13:30,250 --> 00:13:34,029
seen it and nobody's cleaned it up and

396
00:13:31,450 --> 00:13:35,500
it still has access to business logic it

397
00:13:34,029 --> 00:13:37,450
really becomes really hard to keep track

398
00:13:35,500 --> 00:13:39,880
of them all and to pay attention to all

399
00:13:37,450 --> 00:13:41,800
the bits that come in and out so you

400
00:13:39,880 --> 00:13:47,470
know a coordinated plan of attack is the

401
00:13:41,800 --> 00:13:48,790
best course of action for this it's not

402
00:13:47,470 --> 00:13:52,329
all bad news it's not all doom and gloom

403
00:13:48,790 --> 00:13:54,339
there are some great news that comes out

404
00:13:52,329 --> 00:13:55,660
of being an API based app as compared to

405
00:13:54,339 --> 00:13:58,360
a more traditional app and really the

406
00:13:55,660 --> 00:14:03,370
big ones about SQL injections with an

407
00:13:58,360 --> 00:14:05,529
increasing use of frameworks with object

408
00:14:03,370 --> 00:14:07,329
relational mapping it's not as big a

409
00:14:05,529 --> 00:14:09,220
deal I mean yet I would never be that

410
00:14:07,329 --> 00:14:10,719
person that says that SQL injections are

411
00:14:09,220 --> 00:14:13,630
not gonna be a problem for API calls

412
00:14:10,720 --> 00:14:15,550
that is ridiculous but when it comes

413
00:14:13,630 --> 00:14:17,500
down to it it's not a bigger threat as

414
00:14:15,550 --> 00:14:19,380
it is on a traditional app there's a lot

415
00:14:17,500 --> 00:14:21,040
of things that are covering off on

416
00:14:19,380 --> 00:14:22,779
injection attacks that you know

417
00:14:21,040 --> 00:14:24,339
especially you know using the ORM s and

418
00:14:22,779 --> 00:14:26,140
most frameworks have something in place

419
00:14:24,339 --> 00:14:28,209
that kind of can take care of this and

420
00:14:26,140 --> 00:14:29,860
so we see that they're not as prevalent

421
00:14:28,209 --> 00:14:31,239
they're still there of course but

422
00:14:29,860 --> 00:14:34,570
they're not as prevalent as they used to

423
00:14:31,240 --> 00:14:37,329
be when we talk about cross-site request

424
00:14:34,570 --> 00:14:38,740
forgeries most people now are switching

425
00:14:37,329 --> 00:14:41,319
to using auth headers instead of cookies

426
00:14:38,740 --> 00:14:42,760
so you know again not something we can

427
00:14:41,320 --> 00:14:44,880
forget about but something that's become

428
00:14:42,760 --> 00:14:47,709
less of a concern as we've moved forward

429
00:14:44,880 --> 00:14:49,990
path manipulations now most of you using

430
00:14:47,709 --> 00:14:52,569
cloud-based storage it has a different

431
00:14:49,990 --> 00:14:54,790
problem it's really less relevant again

432
00:14:52,570 --> 00:14:57,880
it happens but it's really less severe

433
00:14:54,790 --> 00:15:00,670
when it goes off and generally any

434
00:14:57,880 --> 00:15:02,439
classic IT security issue they're

435
00:15:00,670 --> 00:15:04,540
disappearing with more SAS type tools

436
00:15:02,440 --> 00:15:06,070
and products and that's just the nature

437
00:15:04,540 --> 00:15:07,480
of the beast as we move forward so you

438
00:15:06,070 --> 00:15:08,980
know great news out of that at least you

439
00:15:07,480 --> 00:15:10,810
know it's not all good and bad news it's

440
00:15:08,980 --> 00:15:12,490
it's kind of a nice mix in you really

441
00:15:10,810 --> 00:15:14,589
just have to weigh the pros and the cons

442
00:15:12,490 --> 00:15:18,490
against it all to come up with the

443
00:15:14,589 --> 00:15:22,390
policy that's best for you so with that

444
00:15:18,490 --> 00:15:25,120
you know people you know I would say

445
00:15:22,390 --> 00:15:27,040
developers have a lot of training

446
00:15:25,120 --> 00:15:29,160
comparatively speaking to when I started

447
00:15:27,040 --> 00:15:32,529
in this industry back in the late 90s

448
00:15:29,160 --> 00:15:33,760
about security risks and security

449
00:15:32,529 --> 00:15:35,200
postures and does

450
00:15:33,760 --> 00:15:37,300
any secure applications I think we've

451
00:15:35,200 --> 00:15:41,410
done a fairly good job of keeping our

452
00:15:37,300 --> 00:15:43,449
our community in abled and educated on

453
00:15:41,410 --> 00:15:45,339
the processes and and the solutions to

454
00:15:43,450 --> 00:15:46,810
some of these but you know now we're

455
00:15:45,340 --> 00:15:48,490
getting this gap where you know we have

456
00:15:46,810 --> 00:15:49,479
this traditional security coverage we

457
00:15:48,490 --> 00:15:51,760
have these traditional security

458
00:15:49,480 --> 00:15:53,200
vulnerabilities and we're a better

459
00:15:51,760 --> 00:15:54,520
handle of understanding them and they

460
00:15:53,200 --> 00:15:57,070
come up less often you'll still see the

461
00:15:54,520 --> 00:15:58,810
occasional SQL injection obviously any

462
00:15:57,070 --> 00:16:00,790
the Hoss top ten are still top ten for a

463
00:15:58,810 --> 00:16:02,469
reason but you know I find the exposure

464
00:16:00,790 --> 00:16:03,790
compared to even five ten years ago was

465
00:16:02,470 --> 00:16:05,020
way greater than it was before I think

466
00:16:03,790 --> 00:16:06,040
we're really all coming around to this

467
00:16:05,020 --> 00:16:10,180
and that's great to hear

468
00:16:06,040 --> 00:16:11,920
but you know a wasp does not really have

469
00:16:10,180 --> 00:16:13,689
anything when it comes to api's I mean

470
00:16:11,920 --> 00:16:15,579
it's mentioned in the top ten in little

471
00:16:13,690 --> 00:16:17,950
bits and you can infer a bit out but you

472
00:16:15,580 --> 00:16:19,810
know I I I'm of the belief that you know

473
00:16:17,950 --> 00:16:23,050
more and more issues are really relevant

474
00:16:19,810 --> 00:16:24,459
to an API centric application as

475
00:16:23,050 --> 00:16:26,979
compared to the the needs of like a

476
00:16:24,460 --> 00:16:29,620
traditional application and really

477
00:16:26,980 --> 00:16:31,240
that's the gap here so you know you can

478
00:16:29,620 --> 00:16:34,990
go to Austin I always like to say a wasp

479
00:16:31,240 --> 00:16:36,190
is one of those you know it's one of

480
00:16:34,990 --> 00:16:38,230
those great ways to help you develop

481
00:16:36,190 --> 00:16:39,520
secure code plus it also looks like a

482
00:16:38,230 --> 00:16:40,780
geocities page and that's always

483
00:16:39,520 --> 00:16:42,340
important right you really want to see

484
00:16:40,780 --> 00:16:43,630
someone who's in charge of Internet

485
00:16:42,340 --> 00:16:46,000
security have a page straight from the

486
00:16:43,630 --> 00:16:47,500
late 90s that's fantastic I would

487
00:16:46,000 --> 00:16:49,210
recommend checking about you know

488
00:16:47,500 --> 00:16:50,920
there's a lot to do there there's a lot

489
00:16:49,210 --> 00:16:53,080
of information there a lot of ways you

490
00:16:50,920 --> 00:16:55,209
can help build more secure applications

491
00:16:53,080 --> 00:16:57,220
daily by just following their guidelines

492
00:16:55,210 --> 00:17:00,250
and actually I I see a lot in my day to

493
00:16:57,220 --> 00:17:01,630
day job of enterprises and businesses

494
00:17:00,250 --> 00:17:03,130
all basically saying we're just gonna

495
00:17:01,630 --> 00:17:04,390
adopt a wasp from here on it that's

496
00:17:03,130 --> 00:17:06,310
that's our top ten those are the ones

497
00:17:04,390 --> 00:17:09,630
we're gonna filter on that's that's a

498
00:17:06,310 --> 00:17:12,069
good basis for a security program so

499
00:17:09,630 --> 00:17:13,570
you're all very aware of the OWASP top

500
00:17:12,069 --> 00:17:14,919
ten there was a twenty seventeen was the

501
00:17:13,569 --> 00:17:17,020
last issue there was a twenty thirteen

502
00:17:14,920 --> 00:17:18,640
there's a mobile one now but again

503
00:17:17,020 --> 00:17:19,959
without the API that was really sort of

504
00:17:18,640 --> 00:17:22,180
the you know it's not really just

505
00:17:19,959 --> 00:17:23,530
another point inside the OWASP top 10

506
00:17:22,180 --> 00:17:25,510
it's really kind of something that needs

507
00:17:23,530 --> 00:17:28,000
to be fleshed out and expanded upon and

508
00:17:25,510 --> 00:17:31,240
that's what we do with the OWASP API

509
00:17:28,000 --> 00:17:33,820
security project and that's that was

510
00:17:31,240 --> 00:17:35,410
spearheaded by two people a rezulin

511
00:17:33,820 --> 00:17:38,020
who's up from check marks with me he is

512
00:17:35,410 --> 00:17:38,830
our head of R&D a great guy and a

513
00:17:38,020 --> 00:17:41,020
non-jew Canady

514
00:17:38,830 --> 00:17:42,460
from traceable both of them work very

515
00:17:41,020 --> 00:17:45,280
hard on this together and you know the

516
00:17:42,460 --> 00:17:47,350
process was actually fairly simple you

517
00:17:45,280 --> 00:17:47,710
know they would start by getting

518
00:17:47,350 --> 00:17:49,059
something

519
00:17:47,710 --> 00:17:51,490
from everybody else they would analyze

520
00:17:49,059 --> 00:17:53,379
what what results we had they put a call

521
00:17:51,490 --> 00:17:54,669
out for data and got very very little

522
00:17:53,380 --> 00:17:56,399
but then they put a color for comments

523
00:17:54,669 --> 00:17:58,570
and got a lot of great information about

524
00:17:56,399 --> 00:18:00,489
what people were encountering in the

525
00:17:58,570 --> 00:18:02,740
field so maybe it was more secondhand or

526
00:18:00,490 --> 00:18:04,570
anecdotal knowledge but it really sort

527
00:18:02,740 --> 00:18:06,100
of dressed up what we were looking for

528
00:18:04,570 --> 00:18:07,480
and that's really what are you seeing in

529
00:18:06,100 --> 00:18:08,770
the field one of the biggest challenge

530
00:18:07,480 --> 00:18:11,740
is someone who's using an API and a

531
00:18:08,770 --> 00:18:13,360
daily basis is actually going to do and

532
00:18:11,740 --> 00:18:17,950
see and that's really how we help build

533
00:18:13,360 --> 00:18:19,600
the list and move forward with it and so

534
00:18:17,950 --> 00:18:21,520
you know we talk about our planned

535
00:18:19,600 --> 00:18:23,168
project this is sort of the future eyes

536
00:18:21,520 --> 00:18:25,059
roadmap as well as sort of you know the

537
00:18:23,169 --> 00:18:27,070
present state of the API security

538
00:18:25,059 --> 00:18:28,510
project that is available on Olas we're

539
00:18:27,070 --> 00:18:29,830
gonna start with the top ten because the

540
00:18:28,510 --> 00:18:31,450
top ten is the flashy part and everyone

541
00:18:29,830 --> 00:18:34,059
likes it so that's completed I believe

542
00:18:31,450 --> 00:18:35,710
we're at version 1.0 now you know we've

543
00:18:34,059 --> 00:18:37,120
also released an API security cheat

544
00:18:35,710 --> 00:18:38,440
sheet I would really recommend if you

545
00:18:37,120 --> 00:18:39,939
have any interest in this or you think

546
00:18:38,440 --> 00:18:41,500
you might have some vulnerabilities to

547
00:18:39,940 --> 00:18:43,210
give this a read lots of great

548
00:18:41,500 --> 00:18:45,370
information it'll go way more in depth

549
00:18:43,210 --> 00:18:47,860
than I'll ever pay I'll ever do in 45

550
00:18:45,370 --> 00:18:49,658
minutes each of the entries in the top

551
00:18:47,860 --> 00:18:52,299
ten are completely laid out with

552
00:18:49,659 --> 00:18:54,090
examples and some tips and tricks to

553
00:18:52,299 --> 00:18:56,860
help remediate definitely worth a read

554
00:18:54,090 --> 00:18:57,789
and then from there just like any other

555
00:18:56,860 --> 00:18:59,439
place we need to come up with our own

556
00:18:57,789 --> 00:19:00,789
application so in this case we came up

557
00:18:59,440 --> 00:19:03,940
with the completely ridiculous API

558
00:19:00,789 --> 00:19:05,710
project that would be crappy and really

559
00:19:03,940 --> 00:19:07,510
like web code like Java vulnerable

560
00:19:05,710 --> 00:19:09,510
project it's really - sort of a learning

561
00:19:07,510 --> 00:19:11,799
tool it's a way for us to use

562
00:19:09,510 --> 00:19:14,260
intentionally vulnerable app - and we

563
00:19:11,799 --> 00:19:15,820
can see all the injections and all the

564
00:19:14,260 --> 00:19:18,129
errors and all the API problems that

565
00:19:15,820 --> 00:19:19,840
come in in action and I I use that as a

566
00:19:18,130 --> 00:19:21,370
good tool to learn it's always nice to

567
00:19:19,840 --> 00:19:22,689
see it and you know there's a difference

568
00:19:21,370 --> 00:19:24,789
been seeing a video or working on some

569
00:19:22,690 --> 00:19:27,820
sample code versus seeing a real project

570
00:19:24,789 --> 00:19:30,640
that's up and running and I will say as

571
00:19:27,820 --> 00:19:32,559
of this moment the cheat sheets done the

572
00:19:30,640 --> 00:19:33,789
completely ridiculous API project is

573
00:19:32,559 --> 00:19:34,840
still ongoing I believe they're still

574
00:19:33,789 --> 00:19:36,580
looking for volunteers if you're

575
00:19:34,840 --> 00:19:41,260
interested in that I'll post a link at

576
00:19:36,580 --> 00:19:42,760
the end so let's talk about olaf's the

577
00:19:41,260 --> 00:19:44,860
API security we'll look at the top ten

578
00:19:42,760 --> 00:19:46,120
so here they are and you're gonna notice

579
00:19:44,860 --> 00:19:47,408
as you go through you're gonna see some

580
00:19:46,120 --> 00:19:49,870
things that are that are similar if

581
00:19:47,409 --> 00:19:51,039
you're familiar with the OAuth top ten

582
00:19:49,870 --> 00:19:53,439
there's you know insufficient logging

583
00:19:51,039 --> 00:19:55,390
monitoring most attacks start there or

584
00:19:53,440 --> 00:19:56,830
are not answered in a timely manner

585
00:19:55,390 --> 00:19:58,510
because of insufficient logging and

586
00:19:56,830 --> 00:19:59,980
monitoring it's the same an API is as it

587
00:19:58,510 --> 00:20:02,169
is for

588
00:19:59,980 --> 00:20:04,480
for traditional applications you can see

589
00:20:02,169 --> 00:20:05,740
injection is here at number eight so

590
00:20:04,480 --> 00:20:07,570
there's a lot of things that still can

591
00:20:05,740 --> 00:20:09,880
be the same but really each one of these

592
00:20:07,570 --> 00:20:10,750
is API specific and that's that's the

593
00:20:09,880 --> 00:20:13,179
important part here we're not going to

594
00:20:10,750 --> 00:20:14,080
talk about this from a traditional

595
00:20:13,179 --> 00:20:16,960
application we're going to talk about

596
00:20:14,080 --> 00:20:19,149
how each of these things affect API

597
00:20:16,960 --> 00:20:20,799
security and and some common mistakes

598
00:20:19,150 --> 00:20:22,419
and some common misconfigurations that

599
00:20:20,799 --> 00:20:23,620
can cause them to happen and and some of

600
00:20:22,419 --> 00:20:25,660
the consequences I got a couple of nice

601
00:20:23,620 --> 00:20:27,459
examples of what would happen in the

602
00:20:25,660 --> 00:20:34,240
real life if one of these has been

603
00:20:27,460 --> 00:20:37,150
violated so let's start with API one

604
00:20:34,240 --> 00:20:38,410
that would be bola bola is broken object

605
00:20:37,150 --> 00:20:40,179
level authorization there's no need to

606
00:20:38,410 --> 00:20:42,010
Google that acronym we invented it well

607
00:20:40,179 --> 00:20:45,040
I didn't invent it the API Security

608
00:20:42,010 --> 00:20:51,370
Project invented it but basically what

609
00:20:45,040 --> 00:20:52,809
it boils down to here is its assets that

610
00:20:51,370 --> 00:20:55,389
are you know like documents that are

611
00:20:52,809 --> 00:20:57,428
inside your database they belong to a

612
00:20:55,390 --> 00:20:59,530
certain user and they have authorization

613
00:20:57,429 --> 00:21:01,419
to view those user so in this case if

614
00:20:59,530 --> 00:21:03,129
user one says give me a document number

615
00:21:01,419 --> 00:21:04,720
1,000 and he is the owner you can see

616
00:21:03,130 --> 00:21:06,040
here you can see that no problem it

617
00:21:04,720 --> 00:21:08,559
comes right back it does the right level

618
00:21:06,040 --> 00:21:12,010
authorization and that user now has a

619
00:21:08,559 --> 00:21:13,629
copy of their document but if they ask

620
00:21:12,010 --> 00:21:15,610
for another document and they also get

621
00:21:13,630 --> 00:21:17,470
it back then you probably have some

622
00:21:15,610 --> 00:21:20,590
broken object level authorization and

623
00:21:17,470 --> 00:21:22,000
really that's about understanding the

624
00:21:20,590 --> 00:21:23,879
credentials that are coming in as you're

625
00:21:22,000 --> 00:21:28,210
being authorized to view each of these

626
00:21:23,880 --> 00:21:30,309
documents so why is it common it's

627
00:21:28,210 --> 00:21:33,190
common because the attack surface is so

628
00:21:30,309 --> 00:21:34,690
much wider you know it's not just one or

629
00:21:33,190 --> 00:21:37,179
two points coming in as we talked about

630
00:21:34,690 --> 00:21:38,679
earlier API see one of the advantages of

631
00:21:37,179 --> 00:21:41,350
API is is one entry point can do a

632
00:21:38,679 --> 00:21:42,880
million different things so by chaining

633
00:21:41,350 --> 00:21:45,280
together a bunch of API calls you're

634
00:21:42,880 --> 00:21:47,049
really opening up the attack surface and

635
00:21:45,280 --> 00:21:49,000
so understanding all the interactions

636
00:21:47,049 --> 00:21:51,340
between those attack surfaces is what's

637
00:21:49,000 --> 00:21:53,049
causing some of the problem here all

638
00:21:51,340 --> 00:21:54,699
right so you can see whether it comes

639
00:21:53,049 --> 00:21:56,950
through ABC or whether it comes to H

640
00:21:54,700 --> 00:21:59,590
then skips a then goes to B then goes to

641
00:21:56,950 --> 00:22:02,140
C as a part of an API call B has to

642
00:21:59,590 --> 00:22:03,879
understand that it didn't come from a

643
00:22:02,140 --> 00:22:06,160
all the time right it's it has to be

644
00:22:03,880 --> 00:22:11,110
reauthorized every single time you go in

645
00:22:06,160 --> 00:22:12,190
there right

646
00:22:11,110 --> 00:22:13,479
the other problem that comes along this

647
00:22:12,190 --> 00:22:15,309
why it's so common is because there's

648
00:22:13,480 --> 00:22:19,960
not really any solution that can solve

649
00:22:15,309 --> 00:22:21,519
this problem this is really it's left

650
00:22:19,960 --> 00:22:23,289
its baked into the design it's really

651
00:22:21,519 --> 00:22:24,279
hard to fix like you have to understand

652
00:22:23,289 --> 00:22:25,840
this rate of you know you can you can

653
00:22:24,279 --> 00:22:27,909
fix it you for sure there's work

654
00:22:25,840 --> 00:22:29,529
involved but really if the earlier you

655
00:22:27,909 --> 00:22:31,870
get to this problem the easier it is

656
00:22:29,529 --> 00:22:33,909
when you have a more universal object

657
00:22:31,870 --> 00:22:35,590
level authorization pattern it's much

658
00:22:33,909 --> 00:22:39,880
easier to deal with the ins and outs of

659
00:22:35,590 --> 00:22:41,289
this so the I don't know if you're gonna

660
00:22:39,880 --> 00:22:42,519
get this one but we got this a few times

661
00:22:41,289 --> 00:22:44,379
when we were talking about it people are

662
00:22:42,519 --> 00:22:46,510
asking why isn't it I door and I door

663
00:22:44,380 --> 00:22:49,330
would stand for insecure direct object

664
00:22:46,510 --> 00:22:52,389
reference and yeah it's close its I

665
00:22:49,330 --> 00:22:54,370
actually think it's I doors more about

666
00:22:52,389 --> 00:22:57,189
direct object references and trying to

667
00:22:54,370 --> 00:23:01,559
avoid them whether it's a deep link or a

668
00:22:57,190 --> 00:23:04,570
static link to a an asset or an object

669
00:23:01,559 --> 00:23:05,740
you know it's a good phrase it I would

670
00:23:04,570 --> 00:23:07,299
say it's not accurate or it's not

671
00:23:05,740 --> 00:23:10,029
indicative enough of the actual real

672
00:23:07,299 --> 00:23:13,360
problem the problem here is not direct

673
00:23:10,029 --> 00:23:15,880
the problem here is the API right so I

674
00:23:13,360 --> 00:23:17,949
usually would recommend not to be too

675
00:23:15,880 --> 00:23:19,149
directed or use direct links too often

676
00:23:17,950 --> 00:23:20,500
it's you know it can be a little

677
00:23:19,149 --> 00:23:22,418
troublesome but sometimes that has to be

678
00:23:20,500 --> 00:23:26,139
called for that's less of the problem

679
00:23:22,419 --> 00:23:28,360
here than it is for the API so I like to

680
00:23:26,139 --> 00:23:30,459
term I door but I don't like the fact

681
00:23:28,360 --> 00:23:32,649
that it's sort of implying that the

682
00:23:30,460 --> 00:23:34,779
object reference should be indirect for

683
00:23:32,649 --> 00:23:36,010
every single ID and really what would

684
00:23:34,779 --> 00:23:37,870
happen if you everyone ask their

685
00:23:36,010 --> 00:23:39,490
developers you know to implement some

686
00:23:37,870 --> 00:23:41,229
indirect mechanism on every single place

687
00:23:39,490 --> 00:23:43,809
that receives an ID you probably have a

688
00:23:41,230 --> 00:23:45,490
mutiny so you know I don't think the

689
00:23:43,809 --> 00:23:47,049
phrase is fine but I don't think I think

690
00:23:45,490 --> 00:23:48,340
it draws attention to the wrong piece

691
00:23:47,049 --> 00:23:52,750
here and that's really where bullet came

692
00:23:48,340 --> 00:23:54,399
from right and I will say I do like this

693
00:23:52,750 --> 00:23:56,080
Ebola is a South American throwing

694
00:23:54,399 --> 00:23:57,428
weapon and I think that's important to

695
00:23:56,080 --> 00:23:58,600
say because it's always nice to have an

696
00:23:57,429 --> 00:24:03,970
acronym that actually means something

697
00:23:58,600 --> 00:24:05,379
else as well too so what could happen I

698
00:24:03,970 --> 00:24:08,620
mean let's take an example we'll take

699
00:24:05,380 --> 00:24:11,200
Verizon as an example so daily be ended

700
00:24:08,620 --> 00:24:13,120
up grabbing a whole bunch of Verizon's

701
00:24:11,200 --> 00:24:14,710
monthly contracts about two million of

702
00:24:13,120 --> 00:24:16,299
them based on one really really small

703
00:24:14,710 --> 00:24:18,940
mistake and really what had happened was

704
00:24:16,299 --> 00:24:20,230
by pinging these api's by checking and

705
00:24:18,940 --> 00:24:23,649
trying to grab objects that they were

706
00:24:20,230 --> 00:24:24,840
not entitled to Daly found out that

707
00:24:23,649 --> 00:24:28,428
anything between 1

708
00:24:24,840 --> 00:24:31,860
13 sorry 1 billion or 1 million and

709
00:24:28,429 --> 00:24:33,779
1.999 million you could technically grab

710
00:24:31,860 --> 00:24:35,610
all their contract information without

711
00:24:33,779 --> 00:24:38,159
having to have authorization and so it

712
00:24:35,610 --> 00:24:40,020
gives 2 million different customers have

713
00:24:38,159 --> 00:24:41,370
been exposed just because of a very

714
00:24:40,020 --> 00:24:43,230
simple configuration mistake when it

715
00:24:41,370 --> 00:24:48,629
came to their authentication and

716
00:24:43,230 --> 00:24:51,630
authorization so that's a great example

717
00:24:48,630 --> 00:24:52,799
about the real-world consequences of

718
00:24:51,630 --> 00:24:54,840
this right I mean I think you can all

719
00:24:52,799 --> 00:24:56,668
imagine it from your point of view about

720
00:24:54,840 --> 00:24:58,049
what would you not want someone to

721
00:24:56,669 --> 00:25:00,330
access if you know you didn't have the

722
00:24:58,049 --> 00:25:05,789
right level of object authorization on

723
00:25:00,330 --> 00:25:08,309
it so then we'll go on to number two and

724
00:25:05,789 --> 00:25:11,129
number two is a broken authentication

725
00:25:08,309 --> 00:25:12,059
and really this is a lot of this boils

726
00:25:11,130 --> 00:25:13,409
down to a little bit of a misconception

727
00:25:12,059 --> 00:25:15,450
a lot of people use OAuth as

728
00:25:13,409 --> 00:25:17,640
authentication and really OAuth is meant

729
00:25:15,450 --> 00:25:18,840
for authorization so some of this kind

730
00:25:17,640 --> 00:25:21,990
of comes down when we're using it for

731
00:25:18,840 --> 00:25:23,580
authentication and authorization you

732
00:25:21,990 --> 00:25:24,659
know if we look at this API call here we

733
00:25:23,580 --> 00:25:25,918
can see there's two main ways that

734
00:25:24,659 --> 00:25:27,270
broken off like the authentication

735
00:25:25,919 --> 00:25:28,950
happens one is going to be a lack of

736
00:25:27,270 --> 00:25:31,020
protection and the other is going to be

737
00:25:28,950 --> 00:25:32,610
a miss implementation so if we look at

738
00:25:31,020 --> 00:25:34,080
this API structure and we understand we

739
00:25:32,610 --> 00:25:35,158
have three fields that we kind of

740
00:25:34,080 --> 00:25:37,110
probably want to protect whether it's

741
00:25:35,159 --> 00:25:38,370
their password credentials or whether

742
00:25:37,110 --> 00:25:41,510
we've forgotten our password or whether

743
00:25:38,370 --> 00:25:44,070
it's our mobile login so I would expect

744
00:25:41,510 --> 00:25:46,470
those three to have some sort of extra

745
00:25:44,070 --> 00:25:49,168
protection as well as just general

746
00:25:46,470 --> 00:25:50,549
rate-limiting we'll talk about that n/a

747
00:25:49,169 --> 00:25:51,720
for that's a couple away from now but

748
00:25:50,549 --> 00:25:53,789
rate-limiting is also something that

749
00:25:51,720 --> 00:25:55,080
comes into play here but you know when I

750
00:25:53,789 --> 00:25:57,090
talk about X protection I just mean

751
00:25:55,080 --> 00:25:59,879
where's the account lockout mechanism

752
00:25:57,090 --> 00:26:01,320
where's the CAPTCHA you know is is there

753
00:25:59,880 --> 00:26:03,779
any protection from credential stuffing

754
00:26:01,320 --> 00:26:05,039
is this going to become an Oracle

755
00:26:03,779 --> 00:26:06,630
password checker for you if you just

756
00:26:05,039 --> 00:26:08,250
load up a bunch of passwords and check

757
00:26:06,630 --> 00:26:09,480
over and over again so without these

758
00:26:08,250 --> 00:26:11,460
extra protection without these rate

759
00:26:09,480 --> 00:26:14,220
limiting you kind of get these broken

760
00:26:11,460 --> 00:26:15,600
authentication error message not error

761
00:26:14,220 --> 00:26:17,010
messages sorry I broke an authentication

762
00:26:15,600 --> 00:26:18,928
problems and some of this can just be

763
00:26:17,010 --> 00:26:21,299
exposed normally and some of it can be

764
00:26:18,929 --> 00:26:23,789
very very dangerous and some of it's

765
00:26:21,299 --> 00:26:25,799
also miss employment ation right how

766
00:26:23,789 --> 00:26:27,629
many people are using JWT did you know

767
00:26:25,799 --> 00:26:32,580
that the algorithm for JWT can be set to

768
00:26:27,630 --> 00:26:35,640
none that's troubling you know it's it's

769
00:26:32,580 --> 00:26:36,750
really not any protection at all and

770
00:26:35,640 --> 00:26:38,309
that's really a miss implementation

771
00:26:36,750 --> 00:26:38,850
that's great for you know your staging

772
00:26:38,309 --> 00:26:40,500
environments

773
00:26:38,850 --> 00:26:42,600
rollout environments but it's really not

774
00:26:40,500 --> 00:26:44,190
something you've won in production as

775
00:26:42,600 --> 00:26:45,419
well you know the service doesn't

776
00:26:44,190 --> 00:26:47,220
validate the OAuth provider your

777
00:26:45,420 --> 00:26:49,170
passwords are stored without salt etc

778
00:26:47,220 --> 00:26:50,280
etc just general Mis implementation

779
00:26:49,170 --> 00:26:54,780
that's really what causes a lot of

780
00:26:50,280 --> 00:26:57,300
broken authentication errors right so so

781
00:26:54,780 --> 00:26:58,980
why is it so common well it's common

782
00:26:57,300 --> 00:27:01,020
because the endpoints are exposed to

783
00:26:58,980 --> 00:27:02,850
anyone by design right that with it is

784
00:27:01,020 --> 00:27:04,710
designed to do that we are encouraging

785
00:27:02,850 --> 00:27:05,969
people to do that because it exposed to

786
00:27:04,710 --> 00:27:08,130
everyone so that everyone can use it

787
00:27:05,970 --> 00:27:09,750
right and again we you know there's some

788
00:27:08,130 --> 00:27:11,310
misconceptions OAuth is not tenth

789
00:27:09,750 --> 00:27:14,580
ocation you really shouldn't be using

790
00:27:11,310 --> 00:27:16,530
API keys for users authentications right

791
00:27:14,580 --> 00:27:18,419
as well there's multiple authentication

792
00:27:16,530 --> 00:27:21,510
flows in most modern apps right whether

793
00:27:18,420 --> 00:27:22,740
it's IOT mobile a legacy login some sort

794
00:27:21,510 --> 00:27:24,629
of deep link lots of ways to get

795
00:27:22,740 --> 00:27:26,820
authentication here and and you know

796
00:27:24,630 --> 00:27:30,870
checking all of those things is hard and

797
00:27:26,820 --> 00:27:33,990
sometimes something slips through ok

798
00:27:30,870 --> 00:27:36,209
onto number three so number three is our

799
00:27:33,990 --> 00:27:39,210
excessive data exposure and this problem

800
00:27:36,210 --> 00:27:40,980
really boils down to what we talked

801
00:27:39,210 --> 00:27:43,170
about earlier with that we've moved the

802
00:27:40,980 --> 00:27:46,320
work on the data has moved to the front

803
00:27:43,170 --> 00:27:48,540
instead of the back end right and really

804
00:27:46,320 --> 00:27:50,639
that's that's the problem here so you

805
00:27:48,540 --> 00:27:51,930
can see here we we make we have a mobile

806
00:27:50,640 --> 00:27:54,570
out the voice we have Bob's profile

807
00:27:51,930 --> 00:27:56,340
that's obviously a minion dating app and

808
00:27:54,570 --> 00:27:58,169
we make a call and we get that user's

809
00:27:56,340 --> 00:28:00,959
profile we know this guy's user 717 so

810
00:27:58,170 --> 00:28:02,400
we get some data back so you can see on

811
00:28:00,960 --> 00:28:04,470
the the actual screen we're only showing

812
00:28:02,400 --> 00:28:06,420
the name and the role in the hobby but

813
00:28:04,470 --> 00:28:07,560
if you look at the actual JSON that gets

814
00:28:06,420 --> 00:28:09,000
returned you can see there's some more

815
00:28:07,560 --> 00:28:10,889
information that that maybe shouldn't be

816
00:28:09,000 --> 00:28:13,500
there in this case specifically the

817
00:28:10,890 --> 00:28:15,390
address is coming through so the fetch

818
00:28:13,500 --> 00:28:17,190
for this user is giving data that while

819
00:28:15,390 --> 00:28:18,270
not being rendered to the screen and not

820
00:28:17,190 --> 00:28:20,160
being displayed to the screen is being

821
00:28:18,270 --> 00:28:22,139
suppressed it is still viewable if

822
00:28:20,160 --> 00:28:24,690
anybody is watching and you know there's

823
00:28:22,140 --> 00:28:26,070
something to be said for maybe personal

824
00:28:24,690 --> 00:28:27,450
information should be secured and

825
00:28:26,070 --> 00:28:28,470
shouldn't come across and and some of

826
00:28:27,450 --> 00:28:30,030
this you know we'll talk about some of

827
00:28:28,470 --> 00:28:32,160
the reasons some of it's a future

828
00:28:30,030 --> 00:28:33,629
proofing reason some of it's more you

829
00:28:32,160 --> 00:28:35,340
know just not thinking about who's gonna

830
00:28:33,630 --> 00:28:37,500
be consuming this data or trusting I

831
00:28:35,340 --> 00:28:39,629
play a lot of video games so I'll tell

832
00:28:37,500 --> 00:28:41,100
you right now I learned a long time ago

833
00:28:39,630 --> 00:28:42,660
we don't ever trust the client ever

834
00:28:41,100 --> 00:28:44,250
everything should be done server-side

835
00:28:42,660 --> 00:28:45,450
anything that the client can do should

836
00:28:44,250 --> 00:28:48,120
only be able to do what the data is

837
00:28:45,450 --> 00:28:50,280
provided and I find you know watching

838
00:28:48,120 --> 00:28:51,540
cheaters and video games and and you

839
00:28:50,280 --> 00:28:52,440
know anything that's offload to the

840
00:28:51,540 --> 00:28:54,180
client always causes

841
00:28:52,440 --> 00:28:55,740
so I've had this drilled in my head

842
00:28:54,180 --> 00:28:57,930
since the time I was about 15 years old

843
00:28:55,740 --> 00:28:59,430
but you know it's really something to

844
00:28:57,930 --> 00:29:01,230
kind of consider that you're giving the

845
00:28:59,430 --> 00:29:02,670
client data but you cannot be

846
00:29:01,230 --> 00:29:05,940
responsible for what that client does

847
00:29:02,670 --> 00:29:07,530
with that data right so again filtering

848
00:29:05,940 --> 00:29:10,110
sensitive data on the client site is

849
00:29:07,530 --> 00:29:12,930
always a bad idea so why is it common

850
00:29:10,110 --> 00:29:14,879
because we we encourage everyone to do

851
00:29:12,930 --> 00:29:17,820
this generically and that's really the

852
00:29:14,880 --> 00:29:19,530
big big problem here and and by problem

853
00:29:17,820 --> 00:29:21,030
I mean it's also a benefit you know if

854
00:29:19,530 --> 00:29:22,590
you're using a generic function as a to

855
00:29:21,030 --> 00:29:24,690
JSON and you're just dumping it out

856
00:29:22,590 --> 00:29:26,159
there you know if you're not thinking

857
00:29:24,690 --> 00:29:27,690
about who's the consumer then you're not

858
00:29:26,160 --> 00:29:29,760
thinking about who's seeing that data

859
00:29:27,690 --> 00:29:31,590
because it really doesn't take a lot of

860
00:29:29,760 --> 00:29:33,300
work to see the actual packets coming

861
00:29:31,590 --> 00:29:35,189
back and forth instead of looking at in

862
00:29:33,300 --> 00:29:37,200
the application that's very easy to do

863
00:29:35,190 --> 00:29:38,340
and it's very easy to understand what

864
00:29:37,200 --> 00:29:40,920
you could what kind of trouble you can

865
00:29:38,340 --> 00:29:44,790
cause with that and for an example does

866
00:29:40,920 --> 00:29:46,770
anyone know what three fun is so I know

867
00:29:44,790 --> 00:29:50,820
virtual this this works much better in

868
00:29:46,770 --> 00:29:52,350
person but but three fun is let's keep

869
00:29:50,820 --> 00:29:55,470
this safe for work three fun is an

870
00:29:52,350 --> 00:29:57,899
application for like tinder if you think

871
00:29:55,470 --> 00:30:00,000
to people is way too boring for you

872
00:29:57,900 --> 00:30:02,100
that's really you know maybe we'll just

873
00:30:00,000 --> 00:30:04,190
leave it at that that's no three is no

874
00:30:02,100 --> 00:30:07,110
longer a crowd let's just leave it there

875
00:30:04,190 --> 00:30:09,120
so what had happened is Alex Lomas had

876
00:30:07,110 --> 00:30:11,219
done some testing and as they pulled

877
00:30:09,120 --> 00:30:12,540
back user profile not only were they

878
00:30:11,220 --> 00:30:15,030
getting the the things that they would

879
00:30:12,540 --> 00:30:17,159
expect maybe their their gender or you

880
00:30:15,030 --> 00:30:18,690
know a photo or you know what they're

881
00:30:17,160 --> 00:30:20,550
looking for what they were actually

882
00:30:18,690 --> 00:30:22,770
sending across was latitudes and

883
00:30:20,550 --> 00:30:24,570
longitudes and their orientation and a

884
00:30:22,770 --> 00:30:26,190
lot of more personal information that

885
00:30:24,570 --> 00:30:28,020
was never being displayed but was being

886
00:30:26,190 --> 00:30:30,030
passed across and again some of that's

887
00:30:28,020 --> 00:30:31,800
future proofing some of that's you know

888
00:30:30,030 --> 00:30:33,300
if I give you all the data now if I need

889
00:30:31,800 --> 00:30:34,530
to add a field later I'm done right

890
00:30:33,300 --> 00:30:36,629
there's not much to be done there but

891
00:30:34,530 --> 00:30:39,360
without considering the target audience

892
00:30:36,630 --> 00:30:40,860
you can get into a lot of trouble and I

893
00:30:39,360 --> 00:30:42,449
think the best part about this is Alex

894
00:30:40,860 --> 00:30:45,570
took all the data that he pulled back

895
00:30:42,450 --> 00:30:46,920
out and map the GPS coordinates and I

896
00:30:45,570 --> 00:30:51,590
will present this without any comment

897
00:30:46,920 --> 00:30:51,590
whatsoever I'll give you a second

898
00:30:53,730 --> 00:30:57,480
okay I don't know I'll get them from

899
00:30:56,490 --> 00:30:59,250
Canada so I don't know we're in the

900
00:30:57,480 --> 00:31:00,420
white house that actually is but I think

901
00:30:59,250 --> 00:31:05,610
we can all make some jokes there right I

902
00:31:00,420 --> 00:31:07,860
think we're good okay number four number

903
00:31:05,610 --> 00:31:08,879
four is going to be lack of resources

904
00:31:07,860 --> 00:31:10,979
and rate-limiting we talked about this a

905
00:31:08,880 --> 00:31:12,570
bit earlier and so I won't spend a lot

906
00:31:10,980 --> 00:31:14,520
of time I think I think we intuitively

907
00:31:12,570 --> 00:31:17,159
understand what this means and really

908
00:31:14,520 --> 00:31:19,620
that's you know if there's something

909
00:31:17,160 --> 00:31:21,990
exposed it needs to have a limit it

910
00:31:19,620 --> 00:31:23,310
needs to be defined you can't just throw

911
00:31:21,990 --> 00:31:25,320
something up and hope for the best

912
00:31:23,310 --> 00:31:28,200
right whether it comes to the number of

913
00:31:25,320 --> 00:31:30,409
files strings the frequency of requests

914
00:31:28,200 --> 00:31:33,480
all these things need to be considered

915
00:31:30,410 --> 00:31:35,340
because if you don't do that you're

916
00:31:33,480 --> 00:31:37,110
basically setting yourself up for denial

917
00:31:35,340 --> 00:31:38,850
service attacks or you know credential

918
00:31:37,110 --> 00:31:40,409
stuffing and really if you don't have a

919
00:31:38,850 --> 00:31:41,459
rate limit on something that's doing

920
00:31:40,410 --> 00:31:43,890
credential stuff and you've really just

921
00:31:41,460 --> 00:31:45,330
done a password Oracle right where you

922
00:31:43,890 --> 00:31:47,460
know I give them all the data to check

923
00:31:45,330 --> 00:31:49,350
all of these credentials that I've

924
00:31:47,460 --> 00:31:51,120
accumulated over and over and over again

925
00:31:49,350 --> 00:31:53,429
to give me my hits as quick as possible

926
00:31:51,120 --> 00:31:55,679
writes the other thing I see a lot when

927
00:31:53,430 --> 00:31:57,000
it comes to API is is if the token that

928
00:31:55,680 --> 00:32:00,990
you're getting back and forth is a small

929
00:31:57,000 --> 00:32:02,730
enough number and you don't have rate

930
00:32:00,990 --> 00:32:04,290
limiting it actually doesn't take too

931
00:32:02,730 --> 00:32:06,030
long to make enough API calls to go

932
00:32:04,290 --> 00:32:07,800
through the whole run up number six six

933
00:32:06,030 --> 00:32:10,290
carat or six digits is not that it's not

934
00:32:07,800 --> 00:32:11,550
enough so if your brute forcing it

935
00:32:10,290 --> 00:32:13,470
you could definitely send in a whole

936
00:32:11,550 --> 00:32:15,750
heap loaded data coming in and verify

937
00:32:13,470 --> 00:32:17,160
you know this token what other data is

938
00:32:15,750 --> 00:32:20,100
at work against give me everything you

939
00:32:17,160 --> 00:32:21,900
got so there's a lot of great attacks

940
00:32:20,100 --> 00:32:24,120
that come out of this and it's all based

941
00:32:21,900 --> 00:32:25,440
on just limiting how often someone can

942
00:32:24,120 --> 00:32:30,780
access the resource are limiting how

943
00:32:25,440 --> 00:32:32,310
often they can make the request okay and

944
00:32:30,780 --> 00:32:36,600
up to five what have we done we're doing

945
00:32:32,310 --> 00:32:38,100
good here so five is a broken function

946
00:32:36,600 --> 00:32:39,870
level authorization and this is really

947
00:32:38,100 --> 00:32:42,719
the brother or sister maybe the sibling

948
00:32:39,870 --> 00:32:44,040
of the first one again Billa is going to

949
00:32:42,720 --> 00:32:44,940
be a new acronym don't look it up I

950
00:32:44,040 --> 00:32:47,550
don't know what it is if it's something

951
00:32:44,940 --> 00:32:49,380
else ahead of time I do like saying bit

952
00:32:47,550 --> 00:32:51,389
flow though so in this case you know if

953
00:32:49,380 --> 00:32:53,250
we take a look at our API layer we can

954
00:32:51,390 --> 00:32:54,360
see you know most of them follow a

955
00:32:53,250 --> 00:32:56,040
similar structure there's a public API

956
00:32:54,360 --> 00:32:57,570
anybody can access it there's an

957
00:32:56,040 --> 00:32:59,460
internal API for your devs or your

958
00:32:57,570 --> 00:33:01,020
internal users and then there's the

959
00:32:59,460 --> 00:33:03,240
admin API that does all the work for

960
00:33:01,020 --> 00:33:05,879
maintaining the API is maintaining the

961
00:33:03,240 --> 00:33:07,440
users maintaining the application so you

962
00:33:05,880 --> 00:33:10,500
know that's fine and a min makes

963
00:33:07,440 --> 00:33:11,820
to the admits totally legit I need to

964
00:33:10,500 --> 00:33:13,830
delete this user that's great

965
00:33:11,820 --> 00:33:15,929
the problem comes if a regular user can

966
00:33:13,830 --> 00:33:18,240
also make that call and you know it

967
00:33:15,930 --> 00:33:19,680
doesn't have to be malicious but it

968
00:33:18,240 --> 00:33:21,090
seems likely if someone's making a call

969
00:33:19,680 --> 00:33:23,850
to an in mini API it's it's at least

970
00:33:21,090 --> 00:33:26,909
partially malicious right and that and

971
00:33:23,850 --> 00:33:28,469
that boils down to you know in this case

972
00:33:26,910 --> 00:33:30,000
we're talking about functions and not

973
00:33:28,470 --> 00:33:31,410
objects and I think that's the

974
00:33:30,000 --> 00:33:33,420
difference between the Billa and the

975
00:33:31,410 --> 00:33:36,710
bola if we're going to use those

976
00:33:33,420 --> 00:33:39,150
acronyms so again it's like a sibling

977
00:33:36,710 --> 00:33:40,770
but it's similar but different right

978
00:33:39,150 --> 00:33:42,060
this is a function so whoever has access

979
00:33:40,770 --> 00:33:43,490
to this function should have the right

980
00:33:42,060 --> 00:33:46,050
credentials on the right authorization

981
00:33:43,490 --> 00:33:47,250
so as compared to an object instead of

982
00:33:46,050 --> 00:33:48,450
grabbing something it's performing

983
00:33:47,250 --> 00:33:51,150
something I guess that's probably the

984
00:33:48,450 --> 00:33:52,740
big difference and why is it common well

985
00:33:51,150 --> 00:33:54,390
it's common because function level

986
00:33:52,740 --> 00:33:56,190
authorization can be tricky

987
00:33:54,390 --> 00:33:58,170
lots always to implement it rounded code

988
00:33:56,190 --> 00:34:01,350
level configuration API gateways the

989
00:33:58,170 --> 00:34:02,940
list goes on you know at any time you

990
00:34:01,350 --> 00:34:04,169
have some confusion about ways to

991
00:34:02,940 --> 00:34:06,260
implement it and you don't have a

992
00:34:04,170 --> 00:34:09,659
standard sometimes they slipped through

993
00:34:06,260 --> 00:34:11,699
right and as well it's easier it's

994
00:34:09,659 --> 00:34:13,649
easier to detect it in an API because

995
00:34:11,699 --> 00:34:15,299
the endpoints are more predictable you

996
00:34:13,650 --> 00:34:16,440
know when we look at a sort of a

997
00:34:15,300 --> 00:34:18,750
traditional app you can sort of see the

998
00:34:16,440 --> 00:34:21,150
you know to get the user profile is this

999
00:34:18,750 --> 00:34:22,290
string but to post to delete it user

1000
00:34:21,150 --> 00:34:23,429
you're doing a post with a bunch of

1001
00:34:22,290 --> 00:34:25,409
different parameters it's a lot harder

1002
00:34:23,429 --> 00:34:26,490
to guess that right you could you might

1003
00:34:25,409 --> 00:34:27,810
be able take a stab at it you might be

1004
00:34:26,489 --> 00:34:29,520
able to figure it out I mean sometimes

1005
00:34:27,810 --> 00:34:31,949
an action equals delete and a user ID is

1006
00:34:29,520 --> 00:34:34,800
a user ID I mean it might work but when

1007
00:34:31,949 --> 00:34:36,750
you look at an API I'm getting a user

1008
00:34:34,800 --> 00:34:38,610
and I'm deleting a user right it's very

1009
00:34:36,750 --> 00:34:40,230
very predictable it's very easy to guess

1010
00:34:38,610 --> 00:34:42,060
and that's really something you know

1011
00:34:40,230 --> 00:34:43,168
it's the the curse that comes along with

1012
00:34:42,060 --> 00:34:45,989
it you know you get that phenomenal

1013
00:34:43,168 --> 00:34:47,759
cosmic power but you also expose the

1014
00:34:45,989 --> 00:34:49,168
methodology behind the implementation of

1015
00:34:47,760 --> 00:34:51,390
that app as well and a lot of easy

1016
00:34:49,168 --> 00:34:57,240
guesses without the right security can

1017
00:34:51,389 --> 00:34:59,700
get you into a lot of trouble okay

1018
00:34:57,240 --> 00:35:01,560
six-six is mass assignment and this one

1019
00:34:59,700 --> 00:35:04,919
I would say is probably the the sibling

1020
00:35:01,560 --> 00:35:07,200
or the cousin of the exposure problem so

1021
00:35:04,920 --> 00:35:08,400
the data coming across has everything

1022
00:35:07,200 --> 00:35:10,649
you need even though you're suppressing

1023
00:35:08,400 --> 00:35:11,910
all the fields to be displayed in the

1024
00:35:10,650 --> 00:35:14,490
application I only want to display my

1025
00:35:11,910 --> 00:35:17,069
name and my hobbies and where I where I

1026
00:35:14,490 --> 00:35:18,149
live or a photo but we give them all the

1027
00:35:17,070 --> 00:35:19,530
data that's filtered out and then

1028
00:35:18,150 --> 00:35:21,470
someone can see it this is the opposite

1029
00:35:19,530 --> 00:35:23,789
so in this case

1030
00:35:21,470 --> 00:35:28,049
you know all of your data set values are

1031
00:35:23,789 --> 00:35:29,970
pushed back towards you want this to the

1032
00:35:28,049 --> 00:35:33,930
server to save right so really this is

1033
00:35:29,970 --> 00:35:35,700
about putting data excuse me sorry this

1034
00:35:33,930 --> 00:35:37,019
is putting data where you know this

1035
00:35:35,700 --> 00:35:38,399
should only be safe values and this

1036
00:35:37,019 --> 00:35:40,410
really happens where you know you can

1037
00:35:38,400 --> 00:35:44,460
see here in nodejs you can see it in

1038
00:35:40,410 --> 00:35:46,500
rails you know by assigning it like that

1039
00:35:44,460 --> 00:35:49,260
it could contain sensitive data that you

1040
00:35:46,500 --> 00:35:51,720
shouldn't have access to right so legit

1041
00:35:49,260 --> 00:35:52,859
request would be you know post new users

1042
00:35:51,720 --> 00:35:54,118
things Bob and here's his pass through

1043
00:35:52,859 --> 00:35:56,250
one through six

1044
00:35:54,119 --> 00:35:57,569
if someone understood the rules and

1045
00:35:56,250 --> 00:35:59,039
understood all of the fields that were

1046
00:35:57,569 --> 00:36:00,210
going through and there was no checking

1047
00:35:59,039 --> 00:36:02,880
on those as they were being committed

1048
00:36:00,210 --> 00:36:04,230
back I mean it would be up to the user

1049
00:36:02,880 --> 00:36:05,819
to set their rule to be admin and

1050
00:36:04,230 --> 00:36:07,079
obviously we don't want the users to set

1051
00:36:05,819 --> 00:36:09,240
administration rules with their own

1052
00:36:07,079 --> 00:36:10,319
roles but if you're not checking and

1053
00:36:09,240 --> 00:36:12,538
you're just assuming the data coming

1054
00:36:10,319 --> 00:36:13,859
back is going to be clean you could get

1055
00:36:12,539 --> 00:36:15,450
shocked by finding out that someone's

1056
00:36:13,859 --> 00:36:18,990
got admin access because they just

1057
00:36:15,450 --> 00:36:21,299
pulled themselves they would right and

1058
00:36:18,990 --> 00:36:23,519
again this boils down to it being easier

1059
00:36:21,299 --> 00:36:25,559
to discuss sorry easier to find right

1060
00:36:23,519 --> 00:36:27,118
this is just a get method it's it's

1061
00:36:25,559 --> 00:36:28,500
easier to instead of guessing the

1062
00:36:27,119 --> 00:36:29,970
properties I get method will likely

1063
00:36:28,500 --> 00:36:32,880
return me the data I want so if we go

1064
00:36:29,970 --> 00:36:34,500
back right if we do a get here of this

1065
00:36:32,880 --> 00:36:36,269
user we would probably get Bob in his

1066
00:36:34,500 --> 00:36:38,309
password maybe nice password it bailed

1067
00:36:36,269 --> 00:36:39,930
me at but his role might be there so

1068
00:36:38,309 --> 00:36:43,230
that I know that role and then I know I

1069
00:36:39,930 --> 00:36:45,569
just need to take that role suppress it

1070
00:36:43,230 --> 00:36:46,619
add it to the commit and see if that

1071
00:36:45,569 --> 00:36:48,000
commits grabs it if you're not doing

1072
00:36:46,619 --> 00:36:50,190
checking now I'm in a minute easy as

1073
00:36:48,000 --> 00:36:51,960
that if we're looking for another

1074
00:36:50,190 --> 00:36:54,690
example I kind of like this one you know

1075
00:36:51,960 --> 00:36:56,009
if I put a video into my API my API is

1076
00:36:54,690 --> 00:36:57,839
storing videos I can see I have a clip

1077
00:36:56,009 --> 00:36:59,339
and I'm putting it up there by using

1078
00:36:57,839 --> 00:37:01,049
that I can understand the name of the

1079
00:36:59,339 --> 00:37:03,119
video files but when I pull that video

1080
00:37:01,049 --> 00:37:04,410
file back I can see that I have an ID

1081
00:37:03,119 --> 00:37:06,660
I've got the name of the clip and I also

1082
00:37:04,410 --> 00:37:07,799
have conversion parameters and you know

1083
00:37:06,660 --> 00:37:09,960
if you take a look at the minus V and

1084
00:37:07,799 --> 00:37:12,059
your codec you can see that there's

1085
00:37:09,960 --> 00:37:14,039
obviously some sort of command line CLI

1086
00:37:12,059 --> 00:37:16,650
going on behind the scenes to help

1087
00:37:14,039 --> 00:37:18,779
convert this video over to you if you're

1088
00:37:16,650 --> 00:37:21,119
not checking that field it's very easy

1089
00:37:18,779 --> 00:37:22,380
to make a put statement that sets the

1090
00:37:21,119 --> 00:37:24,690
conversion parameters you can see here I

1091
00:37:22,380 --> 00:37:25,980
put the minus V codec and I might have

1092
00:37:24,690 --> 00:37:28,619
just slept in a little extra for them

1093
00:37:25,980 --> 00:37:30,329
and you know again this one's probably

1094
00:37:28,619 --> 00:37:31,829
fairly harmless because I don't think

1095
00:37:30,329 --> 00:37:33,809
Windows is a big product and it probably

1096
00:37:31,829 --> 00:37:34,370
will never catch on and it's probably

1097
00:37:33,809 --> 00:37:35,780
more of a

1098
00:37:34,370 --> 00:37:37,850
probably great so there could be no harm

1099
00:37:35,780 --> 00:37:39,140
done from there but you know nothing

1100
00:37:37,850 --> 00:37:42,890
grates nothing Goods ever on windows

1101
00:37:39,140 --> 00:37:43,940
anyway so you know that's the kind of

1102
00:37:42,890 --> 00:37:45,109
thing you need to make sure you have

1103
00:37:43,940 --> 00:37:46,580
validation against those if you're

1104
00:37:45,110 --> 00:37:48,950
committing something back every field

1105
00:37:46,580 --> 00:37:50,480
has to be checked right as usual do not

1106
00:37:48,950 --> 00:37:52,100
trust the user the user will always try

1107
00:37:50,480 --> 00:37:55,730
to do something even if it's

1108
00:37:52,100 --> 00:37:59,180
unintentional the next ones number seven

1109
00:37:55,730 --> 00:38:00,830
and this is really more of a bucket

1110
00:37:59,180 --> 00:38:01,970
right this is all the things that I

1111
00:38:00,830 --> 00:38:05,029
think are important we think are

1112
00:38:01,970 --> 00:38:07,910
important but are not big enough to be

1113
00:38:05,030 --> 00:38:09,320
their own sort of issue on the top ten

1114
00:38:07,910 --> 00:38:12,109
you know whether it's a weak encryption

1115
00:38:09,320 --> 00:38:13,760
or unnecessarily exposed HTTP methods a

1116
00:38:12,110 --> 00:38:14,980
lot of the stuff is pretty simple stuff

1117
00:38:13,760 --> 00:38:19,760
and a lot of it comes down to being

1118
00:38:14,980 --> 00:38:21,470
misconfigured oh sorry right so you know

1119
00:38:19,760 --> 00:38:22,970
having all these things here again it's

1120
00:38:21,470 --> 00:38:24,410
a kind of a bucket but really all of

1121
00:38:22,970 --> 00:38:25,580
these are important they're just not

1122
00:38:24,410 --> 00:38:29,950
important enough or they're not as

1123
00:38:25,580 --> 00:38:29,950
widespread enough to be their own entry

1124
00:38:30,280 --> 00:38:34,160
number eight injection so I think the

1125
00:38:33,020 --> 00:38:35,630
first question I get every time I ask

1126
00:38:34,160 --> 00:38:36,890
this question or I talk about this is

1127
00:38:35,630 --> 00:38:38,630
why is it number eight now instead of

1128
00:38:36,890 --> 00:38:40,040
number one cuz when you look at the Olas

1129
00:38:38,630 --> 00:38:41,470
top ten I think everybody knows that we

1130
00:38:40,040 --> 00:38:43,550
probably all have a tattooed on our arms

1131
00:38:41,470 --> 00:38:45,500
SQL injections are the worst they're

1132
00:38:43,550 --> 00:38:47,720
number one and that's true

1133
00:38:45,500 --> 00:38:49,970
but as we talked about earlier SQL

1134
00:38:47,720 --> 00:38:51,200
injections are just a piece of the

1135
00:38:49,970 --> 00:38:53,750
injection puzzle if you actually look at

1136
00:38:51,200 --> 00:38:55,009
the top ten three of those are actually

1137
00:38:53,750 --> 00:38:57,440
dealing with injection errors right

1138
00:38:55,010 --> 00:38:58,690
whether it's injection whether it's XML

1139
00:38:57,440 --> 00:39:01,580
external entities

1140
00:38:58,690 --> 00:39:04,550
excuse me or whether it's a insecurity

1141
00:39:01,580 --> 00:39:06,230
serialization there's lots of there's

1142
00:39:04,550 --> 00:39:08,150
lots of injections here but they're all

1143
00:39:06,230 --> 00:39:12,290
big enough to have their own category on

1144
00:39:08,150 --> 00:39:13,730
the OWASP top 10 but sort of let's say I

1145
00:39:12,290 --> 00:39:15,470
said C serialization right yeah okay so

1146
00:39:13,730 --> 00:39:17,240
I did say to say okay so those three are

1147
00:39:15,470 --> 00:39:19,549
there they're big enough to be their own

1148
00:39:17,240 --> 00:39:21,620
groups when it comes to injection an SQL

1149
00:39:19,550 --> 00:39:23,210
injection is really the big one but the

1150
00:39:21,620 --> 00:39:25,069
reason it drops to eight is because SQL

1151
00:39:23,210 --> 00:39:26,990
injections are not as big a deal anymore

1152
00:39:25,070 --> 00:39:28,460
and not that they're not dangerous and

1153
00:39:26,990 --> 00:39:29,959
not that they're not something to deal

1154
00:39:28,460 --> 00:39:31,370
with and you know I will fight tooth and

1155
00:39:29,960 --> 00:39:32,750
nail this is the hell I'm gonna die on

1156
00:39:31,370 --> 00:39:34,310
if you tell me that

1157
00:39:32,750 --> 00:39:37,970
generally speaking SQL injections are

1158
00:39:34,310 --> 00:39:39,259
fine but from an API point of view they

1159
00:39:37,970 --> 00:39:40,430
are really not that as big a deal as

1160
00:39:39,260 --> 00:39:43,940
they used to be right we talked about

1161
00:39:40,430 --> 00:39:45,560
object relational mapping or ORM you

1162
00:39:43,940 --> 00:39:47,780
know it's it's not as big a deal as it

1163
00:39:45,560 --> 00:39:50,600
used to be right increasing use of

1164
00:39:47,780 --> 00:39:53,240
SQL ORM s it really limits the exposure

1165
00:39:50,600 --> 00:39:55,610
to it so it really drops the the threat

1166
00:39:53,240 --> 00:39:56,779
level of injection errors in a good way

1167
00:39:55,610 --> 00:39:58,370
I think I think that's something we all

1168
00:39:56,780 --> 00:39:59,900
can learn from and then we sort of roll

1169
00:39:58,370 --> 00:40:00,859
those all into sort of injection errors

1170
00:39:59,900 --> 00:40:02,750
that are still something we need to

1171
00:40:00,860 --> 00:40:06,130
concern about but it's not as important

1172
00:40:02,750 --> 00:40:11,930
as a broken object level authorization

1173
00:40:06,130 --> 00:40:14,240
right api 9 improper assets management

1174
00:40:11,930 --> 00:40:16,460
this is again these are probably the

1175
00:40:14,240 --> 00:40:18,290
most important things I can tell you but

1176
00:40:16,460 --> 00:40:19,640
they are conversely also the most boring

1177
00:40:18,290 --> 00:40:20,450
things you will ever do in your entire

1178
00:40:19,640 --> 00:40:22,700
life

1179
00:40:20,450 --> 00:40:25,310
documentation and taking care of risky

1180
00:40:22,700 --> 00:40:26,600
api's right so when we talk about a lack

1181
00:40:25,310 --> 00:40:29,779
of documentation we're talking about

1182
00:40:26,600 --> 00:40:31,460
shadow api's right we know this is

1183
00:40:29,780 --> 00:40:34,430
there's a process in version zero that

1184
00:40:31,460 --> 00:40:35,660
never got deprecated you know exports

1185
00:40:34,430 --> 00:40:37,370
all users and do we have any

1186
00:40:35,660 --> 00:40:39,830
documentation on it probably not looks

1187
00:40:37,370 --> 00:40:41,359
like it's legacy so how do we not deal

1188
00:40:39,830 --> 00:40:43,130
with that how did we understand that

1189
00:40:41,360 --> 00:40:44,360
that goes there and and we don't even

1190
00:40:43,130 --> 00:40:45,470
know if someone's gonna use it to attack

1191
00:40:44,360 --> 00:40:47,960
because we don't have any documentation

1192
00:40:45,470 --> 00:40:49,939
on it and as well you know exposing

1193
00:40:47,960 --> 00:40:52,700
risky api's instead of going through the

1194
00:40:49,940 --> 00:40:54,410
API gateway if you find say a beta API

1195
00:40:52,700 --> 00:40:56,240
that was set up at one point for testing

1196
00:40:54,410 --> 00:40:57,410
we set up one point for deployment it

1197
00:40:56,240 --> 00:40:59,319
was set up for a bunch of reasons that

1198
00:40:57,410 --> 00:41:01,460
aren't production and it still

1199
00:40:59,320 --> 00:41:02,960
interfaces with business logic you just

1200
00:41:01,460 --> 00:41:04,370
opened up a door you've got a risky API

1201
00:41:02,960 --> 00:41:08,180
that doesn't have the same checks in

1202
00:41:04,370 --> 00:41:10,819
place that everything else does so why

1203
00:41:08,180 --> 00:41:12,500
is this such a big issue it's an issue

1204
00:41:10,820 --> 00:41:14,390
and we talked about some of this as

1205
00:41:12,500 --> 00:41:16,190
we're building towards the end here it's

1206
00:41:14,390 --> 00:41:18,259
because the CID CD is because of cloud

1207
00:41:16,190 --> 00:41:21,170
is because of kubernetes it's you know

1208
00:41:18,260 --> 00:41:22,580
you can deliver so quickly now and not

1209
00:41:21,170 --> 00:41:24,380
document and I know that's sort of the

1210
00:41:22,580 --> 00:41:26,480
agile mindset know not that there's no

1211
00:41:24,380 --> 00:41:29,000
documentation but a documentation as you

1212
00:41:26,480 --> 00:41:31,160
go you know you could scale up so many

1213
00:41:29,000 --> 00:41:32,330
API so quickly that you'll never be able

1214
00:41:31,160 --> 00:41:33,920
to keep track of them all if you're not

1215
00:41:32,330 --> 00:41:35,690
doing proper documentation know whether

1216
00:41:33,920 --> 00:41:36,860
you're keeping this swagger or you know

1217
00:41:35,690 --> 00:41:39,050
I don't really care too much about the

1218
00:41:36,860 --> 00:41:40,220
tool because to me the best tool here is

1219
00:41:39,050 --> 00:41:41,720
the one you're using it doesn't matter

1220
00:41:40,220 --> 00:41:43,069
how cumbersome it is if it works and

1221
00:41:41,720 --> 00:41:44,390
you're getting documentation you're

1222
00:41:43,070 --> 00:41:47,569
getting value out of it that's the right

1223
00:41:44,390 --> 00:41:49,890
tool to use but you got to do something

1224
00:41:47,569 --> 00:41:51,240
right then API hosted I've been

1225
00:41:49,890 --> 00:41:52,980
forgotten we were talking about that

1226
00:41:51,240 --> 00:41:55,258
with a sort of more deprecated or risky

1227
00:41:52,980 --> 00:41:57,420
exposed api's right it gives you the

1228
00:41:55,259 --> 00:41:58,769
ability to poke your way into the

1229
00:41:57,420 --> 00:42:00,150
application without having to go through

1230
00:41:58,769 --> 00:42:01,410
the same checks and balances that you

1231
00:42:00,150 --> 00:42:03,660
would have as part of them route the

1232
00:42:01,410 --> 00:42:05,249
live application and as well we have

1233
00:42:03,660 --> 00:42:06,749
environments that have weird names that

1234
00:42:05,249 --> 00:42:07,519
we're sort of spun up for a moment and

1235
00:42:06,749 --> 00:42:11,339
that just never brought back down

1236
00:42:07,519 --> 00:42:13,470
there's a qa3 old app.com banana or

1237
00:42:11,339 --> 00:42:17,339
whatever right oh we all put crazy names

1238
00:42:13,470 --> 00:42:19,799
on things and then finally we got one

1239
00:42:17,339 --> 00:42:21,779
last left one to go and this is the same

1240
00:42:19,799 --> 00:42:25,349
as the one from API assert from the

1241
00:42:21,779 --> 00:42:27,930
OWASP top ten boil blades again very

1242
00:42:25,349 --> 00:42:31,109
boring but very important it's really

1243
00:42:27,930 --> 00:42:33,839
understanding that every major incident

1244
00:42:31,109 --> 00:42:35,339
that breaks out is never stopped in time

1245
00:42:33,839 --> 00:42:37,440
due to insufficient logging and

1246
00:42:35,339 --> 00:42:39,900
monitoring it doesn't matter if you're

1247
00:42:37,440 --> 00:42:41,309
logging an attack has happened there's

1248
00:42:39,900 --> 00:42:43,799
hack a login has happened repeatedly

1249
00:42:41,309 --> 00:42:45,329
thousands of times a second if nobody's

1250
00:42:43,799 --> 00:42:47,400
raising alarm about it so yeah you might

1251
00:42:45,329 --> 00:42:49,259
be able to go back and see it but you

1252
00:42:47,400 --> 00:42:50,700
know the lack of that monitoring and any

1253
00:42:49,259 --> 00:42:52,499
sort of timely response is really what

1254
00:42:50,700 --> 00:42:54,328
gives them the go-ahead to get what they

1255
00:42:52,499 --> 00:42:55,558
need done whether they've got time to

1256
00:42:54,329 --> 00:42:56,789
take that because no one's reading the

1257
00:42:55,559 --> 00:42:58,890
logs whether they don't have the proper

1258
00:42:56,789 --> 00:43:00,599
alerting mechanisms or whether there is

1259
00:42:58,890 --> 00:43:02,788
a breach they don't collect enough data

1260
00:43:00,599 --> 00:43:04,589
actually understand what was taken all

1261
00:43:02,789 --> 00:43:06,089
of this stuff sort of law comes into

1262
00:43:04,589 --> 00:43:08,249
this big envelope of insufficient

1263
00:43:06,089 --> 00:43:10,920
logging and monitoring but it is so key

1264
00:43:08,249 --> 00:43:16,200
for both during an event and after the

1265
00:43:10,920 --> 00:43:17,130
event in diagnosing it all right so we

1266
00:43:16,200 --> 00:43:18,089
only got a couple minutes left so I'll

1267
00:43:17,130 --> 00:43:19,769
just want to blow through a couple of

1268
00:43:18,089 --> 00:43:21,299
these quickly if there is questions I

1269
00:43:19,769 --> 00:43:22,439
can definitely take them in the discord

1270
00:43:21,299 --> 00:43:23,910
afterwards I don't want you guys to miss

1271
00:43:22,440 --> 00:43:26,099
the the draw and the final closing

1272
00:43:23,910 --> 00:43:28,348
remarks and track one but there is a

1273
00:43:26,099 --> 00:43:29,789
mailing list you know if you want some

1274
00:43:28,349 --> 00:43:31,739
discussion points if you want to join in

1275
00:43:29,789 --> 00:43:32,910
the conversation if you want to get lots

1276
00:43:31,739 --> 00:43:35,009
of great tips and tricks and some

1277
00:43:32,910 --> 00:43:36,808
documentation and you know some

1278
00:43:35,009 --> 00:43:38,789
strategies I would recommend joining

1279
00:43:36,809 --> 00:43:41,309
this you know scan the code or go to the

1280
00:43:38,789 --> 00:43:42,690
site and as well we'd love to have you

1281
00:43:41,309 --> 00:43:44,460
contribute I know that this is not a

1282
00:43:42,690 --> 00:43:45,450
check mark projects this is more of an

1283
00:43:44,460 --> 00:43:47,849
API but it's something I'm pretty

1284
00:43:45,450 --> 00:43:49,439
passionate about you know just generally

1285
00:43:47,849 --> 00:43:50,759
security and also about API is from my

1286
00:43:49,440 --> 00:43:52,589
development background so we'd love to

1287
00:43:50,759 --> 00:43:53,489
have you come along and join us if you

1288
00:43:52,589 --> 00:43:54,720
think you've got something to contribute

1289
00:43:53,489 --> 00:43:56,190
or if you just want to follow along with

1290
00:43:54,720 --> 00:43:58,519
us we'd be happy to have you over on

1291
00:43:56,190 --> 00:43:58,519
github

