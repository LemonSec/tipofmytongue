1
00:00:04,650 --> 00:00:08,960
everybody we could just get ready to get

2
00:00:07,290 --> 00:00:11,910
started back up with a couple minutes

3
00:00:08,960 --> 00:00:17,220
see uh Kevin's in there you go there

4
00:00:11,910 --> 00:00:23,070
Kevin yes I am haha thanks for coming

5
00:00:17,220 --> 00:00:24,840
and meet you in person this year but yes

6
00:00:23,070 --> 00:00:27,600
that's gonna have to wait for one day

7
00:00:24,840 --> 00:00:31,350
God nobody wants to meet me in person

8
00:00:27,600 --> 00:00:33,540
I think it used to see you back in the

9
00:00:31,350 --> 00:00:36,510
day like in the hallways of Sands you

10
00:00:33,540 --> 00:00:40,950
know going between class it's been a

11
00:00:36,510 --> 00:00:42,809
while yeah yeah back in the day and they

12
00:00:40,950 --> 00:00:44,550
say I was just having a conversation

13
00:00:42,809 --> 00:00:48,030
with somebody the other day and realize

14
00:00:44,550 --> 00:00:51,899
that it's been six years since I taught

15
00:00:48,030 --> 00:00:53,219
taught four sentence as it is a lot can

16
00:00:51,899 --> 00:00:57,270
happen in six years

17
00:00:53,219 --> 00:01:02,420
ha yes well a lot has happened this

18
00:00:57,270 --> 00:01:05,489
month it has how secure ideas been I

19
00:01:02,420 --> 00:01:07,070
work I mean not gonna would pray our

20
00:01:05,489 --> 00:01:13,080
butts off we've been doing pretty well

21
00:01:07,070 --> 00:01:17,818
bill 23 people now awesome and our goal

22
00:01:13,080 --> 00:01:22,319
is to end the pandemic with as many

23
00:01:17,819 --> 00:01:26,550
people as we started if not more and so

24
00:01:22,319 --> 00:01:30,000
far we are Jason Denise and I and the

25
00:01:26,550 --> 00:01:32,039
the three owners of the company just

26
00:01:30,000 --> 00:01:35,459
been trying to focus on making sure of

27
00:01:32,039 --> 00:01:37,500
but he's okay you know that's one of the

28
00:01:35,459 --> 00:01:39,000
problems with the distributed company is

29
00:01:37,500 --> 00:01:40,530
it's nice to say okay everybody's

30
00:01:39,000 --> 00:01:42,450
working from home and everybody's work

31
00:01:40,530 --> 00:01:45,330
was in their place but at the same time

32
00:01:42,450 --> 00:01:48,599
there's way less visibility into how

33
00:01:45,330 --> 00:01:53,069
people are doing and I don't mean how

34
00:01:48,599 --> 00:01:56,599
well they're working you know but how

35
00:01:53,069 --> 00:02:00,899
are you functioning how are you and so

36
00:01:56,599 --> 00:02:03,599
Jason is is really been driving effort

37
00:02:00,899 --> 00:02:08,068
at trying to figure out making sure

38
00:02:03,599 --> 00:02:10,890
that's good you know I mean so that's

39
00:02:08,068 --> 00:02:11,369
that's good to hear yeah excuse me I'm

40
00:02:10,889 --> 00:02:16,738
sorry

41
00:02:11,370 --> 00:02:17,830
I don't mean to yawn in data's it is it

42
00:02:16,739 --> 00:02:19,870
is

43
00:02:17,830 --> 00:02:23,080
Jason and I did a three day class over

44
00:02:19,870 --> 00:02:25,300
the well the last three days and I would

45
00:02:23,080 --> 00:02:29,250
say that on a regular basis one of us

46
00:02:25,300 --> 00:02:32,050
was causing the other one - yon felis

47
00:02:29,250 --> 00:02:33,640
Thank You Reza yeah what was the class

48
00:02:32,050 --> 00:02:35,020
on that you guys said I it was

49
00:02:33,640 --> 00:02:40,119
application security it was just our

50
00:02:35,020 --> 00:02:45,400
three-day peace class yeah we had a good

51
00:02:40,120 --> 00:02:48,850
turnout 77 students yeah yeah

52
00:02:45,400 --> 00:02:50,800
I'll say that the Jaison and Mick have

53
00:02:48,850 --> 00:02:52,930
been doing a lot of work on samurai at

54
00:02:50,800 --> 00:02:57,190
getting we have the five-o release we're

55
00:02:52,930 --> 00:02:59,310
working on yeah trying to get it so it

56
00:02:57,190 --> 00:03:05,380
runs in Amazon workspaces

57
00:02:59,310 --> 00:03:08,530
yeah and it's it made running the class

58
00:03:05,380 --> 00:03:14,530
very interesting virtualizes are always

59
00:03:08,530 --> 00:03:16,720
odd rape sure but yeah it's pretty cool

60
00:03:14,530 --> 00:03:18,700
oh very cool sounds like a might be good

61
00:03:16,720 --> 00:03:20,260
timing to get all the kinks ironed out

62
00:03:18,700 --> 00:03:22,920
and then come back for peace sighs

63
00:03:20,260 --> 00:03:24,870
twenty twenty-one to talk about cool

64
00:03:22,920 --> 00:03:26,890
[Laughter]

65
00:03:24,870 --> 00:03:31,209
yeah I was actually really looking

66
00:03:26,890 --> 00:03:34,089
forward to I've never been to Greenville

67
00:03:31,209 --> 00:03:37,000
before right are you yeah I've been

68
00:03:34,090 --> 00:03:39,010
Charlotte right or so I'm a horrible

69
00:03:37,000 --> 00:03:40,540
person and you all will laugh at me for

70
00:03:39,010 --> 00:03:43,570
this but I always say that we're based

71
00:03:40,540 --> 00:03:46,739
in Charlotte South Carolina and I'm

72
00:03:43,570 --> 00:03:49,049
aware that that isn't a real thing

73
00:03:46,739 --> 00:03:52,330
though

74
00:03:49,050 --> 00:03:54,580
whooping stout of rock you know and okay

75
00:03:52,330 --> 00:03:57,670
same difference so we've got yeah

76
00:03:54,580 --> 00:03:58,900
exactly right uh but um so we've got

77
00:03:57,670 --> 00:04:02,649
people in Charlotte we've got people

78
00:03:58,900 --> 00:04:07,959
south of Charlotte and they they've been

79
00:04:02,650 --> 00:04:09,760
up to I mean I they've been in in you

80
00:04:07,959 --> 00:04:11,620
know Greenville a number of times I've

81
00:04:09,760 --> 00:04:13,420
just never made it and yes Jason just

82
00:04:11,620 --> 00:04:15,459
corrects me the way I said it implied

83
00:04:13,420 --> 00:04:19,238
that it's not yet working and workspaces

84
00:04:15,459 --> 00:04:20,858
it works great in workspaces would what

85
00:04:19,238 --> 00:04:23,229
I'm talking about this there's more

86
00:04:20,858 --> 00:04:29,320
stuff we want to do with it it's not yet

87
00:04:23,229 --> 00:04:31,450
a full release so this is the problems

88
00:04:29,320 --> 00:04:36,880
having Jason in the discord Channel is

89
00:04:31,450 --> 00:04:40,870
right so I need somebody to keep us

90
00:04:36,880 --> 00:04:42,790
honest so yeah well awesome well thanks

91
00:04:40,870 --> 00:04:45,490
again for coming and talking I

92
00:04:42,790 --> 00:04:47,560
appreciate I reset the genie and I

93
00:04:45,490 --> 00:04:49,570
really appreciate for her jumping in and

94
00:04:47,560 --> 00:04:53,740
you'd come in long and bring in Jason

95
00:04:49,570 --> 00:04:56,170
Shawn along for the ride so I knew I saw

96
00:04:53,740 --> 00:04:58,540
a lot of terrific feedback from Jason's

97
00:04:56,170 --> 00:05:01,810
talk so I was really excited

98
00:04:58,540 --> 00:05:03,220
definitely yeah I bet I would definitely

99
00:05:01,810 --> 00:05:05,440
want go back and watch the recording

100
00:05:03,220 --> 00:05:09,040
once we get that edited and out there or

101
00:05:05,440 --> 00:05:11,440
so but ya know I really appreciate you

102
00:05:09,040 --> 00:05:13,630
coming and doing this and sharing with

103
00:05:11,440 --> 00:05:16,870
the group so I will get in the way out

104
00:05:13,630 --> 00:05:20,440
of the way okay make you assuming I

105
00:05:16,870 --> 00:05:23,200
should share my screen and you should

106
00:05:20,440 --> 00:05:26,460
have access them to share cool thank you

107
00:05:23,200 --> 00:05:26,460
all right thanks Evan

108
00:05:30,210 --> 00:05:37,840
okay so I'm hoping that you guys can see

109
00:05:34,570 --> 00:05:40,420
the right screen this is the problem

110
00:05:37,840 --> 00:05:43,560
with PowerPoint is it throws itself when

111
00:05:40,420 --> 00:05:47,140
you're sharing out to a screen like this

112
00:05:43,560 --> 00:05:48,880
and I can't see the discord server so if

113
00:05:47,140 --> 00:05:51,760
you're talking to me there I can't see

114
00:05:48,880 --> 00:05:54,580
it but mom did remove when the goblins

115
00:05:51,760 --> 00:05:56,800
yep good perfect so we're going to talk

116
00:05:54,580 --> 00:06:00,609
about removing the cobwebs and this is

117
00:05:56,800 --> 00:06:02,380
actually Jaison and Mick and and Eric

118
00:06:00,610 --> 00:06:04,540
and Nathan all the the consultants of

119
00:06:02,380 --> 00:06:06,280
security and I have been discussing this

120
00:06:04,540 --> 00:06:11,800
quite a bit

121
00:06:06,280 --> 00:06:14,739
there is the historic traditional web

122
00:06:11,800 --> 00:06:19,540
pentesting and and what we've realized

123
00:06:14,740 --> 00:06:23,770
is that most most of our testing

124
00:06:19,540 --> 00:06:24,910
nowadays really focuses especially when

125
00:06:23,770 --> 00:06:26,380
we're talking about new applications

126
00:06:24,910 --> 00:06:28,510
mobile applications embedded

127
00:06:26,380 --> 00:06:33,150
applications cloud-based applications

128
00:06:28,510 --> 00:06:34,990
that there are some things about these

129
00:06:33,150 --> 00:06:38,710
applications that you need to start

130
00:06:34,990 --> 00:06:40,810
focusing on and many pen testers aren't

131
00:06:38,710 --> 00:06:44,510
then let's forget pen testers for a

132
00:06:40,810 --> 00:06:49,220
second many developers and QA people are

133
00:06:44,510 --> 00:06:50,510
not considering these parts and so I

134
00:06:49,220 --> 00:06:56,090
wanted to talk a little bit about that

135
00:06:50,510 --> 00:06:56,990
today um a little quickly I'm Kevin I'm

136
00:06:56,090 --> 00:06:59,030
not gonna spend a lot of time

137
00:06:56,990 --> 00:07:01,700
introducing myself I'm a nerd I've been

138
00:06:59,030 --> 00:07:04,460
a nerd for a very long time I am one of

139
00:07:01,700 --> 00:07:07,340
the founders of secure ideas we are a

140
00:07:04,460 --> 00:07:09,770
consulting firm based in Jacksonville

141
00:07:07,340 --> 00:07:11,960
Florida but we're spread out we have

142
00:07:09,770 --> 00:07:16,729
staff up in just south of Charlotte

143
00:07:11,960 --> 00:07:20,330
Oklahoma Texas and we're 10 years old

144
00:07:16,730 --> 00:07:22,280
this year which is mind-boggling to me

145
00:07:20,330 --> 00:07:25,039
that we've been around this long

146
00:07:22,280 --> 00:07:27,530
I'm also anions faculty member a course

147
00:07:25,040 --> 00:07:29,590
author instructor matter of fact Jason

148
00:07:27,530 --> 00:07:32,840
Gilliland and I just wrapped up our

149
00:07:29,590 --> 00:07:35,479
three-day p's course around application

150
00:07:32,840 --> 00:07:36,950
security course this week and we're in

151
00:07:35,480 --> 00:07:38,630
the middle of one of our sea ice cream

152
00:07:36,950 --> 00:07:42,200
internship runs

153
00:07:38,630 --> 00:07:45,020
I'm also an open source fanatic

154
00:07:42,200 --> 00:07:47,150
I love building and managing and

155
00:07:45,020 --> 00:07:49,430
maintaining open source software it's

156
00:07:47,150 --> 00:07:54,979
one of those things that I recommend

157
00:07:49,430 --> 00:07:55,550
everybody not to do it always sounds

158
00:07:54,980 --> 00:07:56,990
like a great idea

159
00:07:55,550 --> 00:07:59,810
ok I'm gonna build this thing and I'm

160
00:07:56,990 --> 00:08:00,530
gonna publish it and world will love me

161
00:07:59,810 --> 00:08:02,990
that's not true

162
00:08:00,530 --> 00:08:05,630
the world doesn't love me and the world

163
00:08:02,990 --> 00:08:09,290
doesn't love me and it's a lot of work

164
00:08:05,630 --> 00:08:11,030
but it's very very worth it the reason I

165
00:08:09,290 --> 00:08:14,300
don't recommend doing it is because it's

166
00:08:11,030 --> 00:08:15,619
a lot of work and so many people stand

167
00:08:14,300 --> 00:08:18,800
up open source projects and then they

168
00:08:15,620 --> 00:08:21,820
die um so think about it if you're gonna

169
00:08:18,800 --> 00:08:23,810
do it my recommendation is start by

170
00:08:21,820 --> 00:08:26,270
contributing to another project I will

171
00:08:23,810 --> 00:08:29,570
tell you that samurai WTF the web

172
00:08:26,270 --> 00:08:32,510
training framework is currently in its

173
00:08:29,570 --> 00:08:35,210
five-o development branch and we are

174
00:08:32,510 --> 00:08:37,189
absolutely looking for contributors we

175
00:08:35,210 --> 00:08:37,940
would love more people to help us build

176
00:08:37,190 --> 00:08:41,000
it um

177
00:08:37,940 --> 00:08:41,810
and then another thing I'm a member of

178
00:08:41,000 --> 00:08:44,150
the 501st

179
00:08:41,809 --> 00:08:46,189
I am a Star Wars nerd I was actually

180
00:08:44,150 --> 00:08:48,260
planning on being at my office today to

181
00:08:46,190 --> 00:08:51,470
do this and I have a sand trooper

182
00:08:48,260 --> 00:08:53,210
costume behind me but I'm mental so you

183
00:08:51,470 --> 00:08:57,590
don't get to see us and rubric Astri um

184
00:08:53,210 --> 00:08:58,370
but if you're ever in Jacksonville swing

185
00:08:57,590 --> 00:09:01,670
by the office we

186
00:08:58,370 --> 00:09:03,710
costumes all over the place so what is

187
00:09:01,670 --> 00:09:04,490
about traditional pentesting and I want

188
00:09:03,710 --> 00:09:07,730
to be really clear I'm talking about

189
00:09:04,490 --> 00:09:11,630
application pen testing here right um we

190
00:09:07,730 --> 00:09:14,380
see a lot of things and we see a lot of

191
00:09:11,630 --> 00:09:20,570
people doing different things right um

192
00:09:14,380 --> 00:09:23,360
so we have a wide gamut and it all

193
00:09:20,570 --> 00:09:27,350
started they didn't all start but the

194
00:09:23,360 --> 00:09:29,060
idea of pen testing applications if you

195
00:09:27,350 --> 00:09:32,540
want to think about applications in

196
00:09:29,060 --> 00:09:36,040
general that they started with purple

197
00:09:32,540 --> 00:09:41,870
right and CGI scripts and server side

198
00:09:36,040 --> 00:09:44,110
includes and dynamic code running inside

199
00:09:41,870 --> 00:09:48,790
of an Apache server on a Linux box and

200
00:09:44,110 --> 00:09:51,500
I'm old and I remember building

201
00:09:48,790 --> 00:09:53,540
applications that way and and they were

202
00:09:51,500 --> 00:09:55,940
always fun right there's they were

203
00:09:53,540 --> 00:09:57,980
really fun to attack um and and then

204
00:09:55,940 --> 00:10:01,130
when we start to think about security

205
00:09:57,980 --> 00:10:03,110
and we have to consider how the

206
00:10:01,130 --> 00:10:05,390
application is protected and how we test

207
00:10:03,110 --> 00:10:09,040
it and everything else there's a wide

208
00:10:05,390 --> 00:10:12,140
gamut of what people call pen testing

209
00:10:09,040 --> 00:10:14,120
everything from simply running a nested

210
00:10:12,140 --> 00:10:16,459
scan against the web server which let's

211
00:10:14,120 --> 00:10:18,740
be very clear I am NOT calling that pen

212
00:10:16,459 --> 00:10:21,020
testing hence the quotes in the title

213
00:10:18,740 --> 00:10:24,140
all the way up to taking something like

214
00:10:21,020 --> 00:10:26,900
burp suite or zap and manually walking

215
00:10:24,140 --> 00:10:29,930
through every single application

216
00:10:26,900 --> 00:10:31,880
function and fuzzing the inputs and

217
00:10:29,930 --> 00:10:35,660
shoving payloads in there and

218
00:10:31,880 --> 00:10:38,900
determining what's going on um what I

219
00:10:35,660 --> 00:10:42,230
want people to do is to be closer to

220
00:10:38,900 --> 00:10:43,699
that side than the next assignment right

221
00:10:42,230 --> 00:10:45,560
because if you're just running this

222
00:10:43,700 --> 00:10:48,080
against an application server and I'm

223
00:10:45,560 --> 00:10:50,890
using this as the example there are lots

224
00:10:48,080 --> 00:10:53,420
of vulnerability scanners out there um

225
00:10:50,890 --> 00:10:57,350
Nessus just happens to be probably the

226
00:10:53,420 --> 00:11:00,560
most commonly known one and commonly

227
00:10:57,350 --> 00:11:04,910
used to be blunt you're not really doing

228
00:11:00,560 --> 00:11:07,729
appendage and for many developers and QA

229
00:11:04,910 --> 00:11:08,959
people and security consultants they

230
00:11:07,730 --> 00:11:11,240
don't have the time to do a

231
00:11:08,959 --> 00:11:17,609
comprehensive test

232
00:11:11,240 --> 00:11:19,410
manually using burp or is that now we

233
00:11:17,610 --> 00:11:21,449
can have the argument that if they don't

234
00:11:19,410 --> 00:11:25,889
have time then they really shouldn't be

235
00:11:21,449 --> 00:11:27,060
doing it I would agree with that but we

236
00:11:25,889 --> 00:11:28,709
also need to make sure that we're

237
00:11:27,060 --> 00:11:31,979
building it out correctly

238
00:11:28,709 --> 00:11:34,739
so the problem I see and this is a

239
00:11:31,980 --> 00:11:36,480
saying I've heard for years right and

240
00:11:34,740 --> 00:11:39,029
that's if you have a hammer everything

241
00:11:36,480 --> 00:11:41,129
that's in it and I think that that's

242
00:11:39,029 --> 00:11:44,399
what we're seeing very often with pen

243
00:11:41,129 --> 00:11:49,529
tests and at security is of quite often

244
00:11:44,399 --> 00:11:51,779
we get copies of previous pen tests done

245
00:11:49,529 --> 00:11:53,189
whether it's because of the expert

246
00:11:51,779 --> 00:11:56,519
witness work we do or whether it's

247
00:11:53,189 --> 00:11:59,009
because of a consultant but when we go

248
00:11:56,519 --> 00:12:02,100
in as a consultant the company provides

249
00:11:59,009 --> 00:12:04,769
the last pen test for us to review for

250
00:12:02,100 --> 00:12:06,120
some reason or if it's because it's part

251
00:12:04,769 --> 00:12:08,100
of our Sastre program where we're

252
00:12:06,120 --> 00:12:11,250
providing advisory services to

253
00:12:08,100 --> 00:12:15,060
developers and QA people and what we see

254
00:12:11,250 --> 00:12:17,939
a lot of times is that many pen testers

255
00:12:15,060 --> 00:12:20,638
and and not making fun of anybody here

256
00:12:17,939 --> 00:12:23,279
I'm not calling anybody out here but

257
00:12:20,639 --> 00:12:26,189
what we see is that many pen testers

258
00:12:23,279 --> 00:12:28,740
have a hammer and they bang on the

259
00:12:26,189 --> 00:12:30,599
website and they write up a report and

260
00:12:28,740 --> 00:12:32,370
as you know if you've ever tested a web

261
00:12:30,600 --> 00:12:34,379
application you're gonna find

262
00:12:32,370 --> 00:12:36,889
vulnerabilities right in most

263
00:12:34,379 --> 00:12:43,019
applications there are problems

264
00:12:36,889 --> 00:12:45,059
low-hanging fruit that any zebra can

265
00:12:43,019 --> 00:12:48,750
find I don't know why zebras my example

266
00:12:45,059 --> 00:12:50,730
of a dumb animal but um let's go with it

267
00:12:48,750 --> 00:12:53,459
right um

268
00:12:50,730 --> 00:12:58,139
they bang on the website and oh hey

269
00:12:53,459 --> 00:13:01,079
you've got server information I love

270
00:12:58,139 --> 00:13:03,660
that yeah your server header is showing

271
00:13:01,079 --> 00:13:07,819
okay did you exploit something because

272
00:13:03,660 --> 00:13:10,829
that no did you explain anything else no

273
00:13:07,819 --> 00:13:14,279
we also see lots of false positives

274
00:13:10,829 --> 00:13:17,430
where they write up a report and a

275
00:13:14,279 --> 00:13:21,509
finding and it's not really a finding

276
00:13:17,430 --> 00:13:24,500
and again I think that's because they

277
00:13:21,509 --> 00:13:26,820
have a hammer and they do the

278
00:13:24,500 --> 00:13:28,949
traditional this is what I know how to

279
00:13:26,820 --> 00:13:30,300
do and I'm not poke here or for a single

280
00:13:28,949 --> 00:13:33,359
cord here and over a single cord over

281
00:13:30,300 --> 00:13:36,810
there open up not database there's no

282
00:13:33,360 --> 00:13:37,260
sequel injection ok did you try double

283
00:13:36,810 --> 00:13:40,500
quotes

284
00:13:37,260 --> 00:13:40,829
did you try act record did you try all

285
00:13:40,500 --> 00:13:45,240
that

286
00:13:40,829 --> 00:13:49,079
did you try other inputs no I didn't

287
00:13:45,240 --> 00:13:54,029
know what those well ok that's a problem

288
00:13:49,079 --> 00:13:59,060
and I think that the reason we see so

289
00:13:54,029 --> 00:14:02,189
much of this is because the most people

290
00:13:59,060 --> 00:14:04,199
don't understand what they're attacking

291
00:14:02,190 --> 00:14:07,050
and and I want to be very clear I'm

292
00:14:04,199 --> 00:14:10,199
including myself in that because every

293
00:14:07,050 --> 00:14:13,949
single day I learned of something else I

294
00:14:10,199 --> 00:14:16,740
didn't know if you ever want to have a

295
00:14:13,949 --> 00:14:20,339
good time laughing at me right um talk

296
00:14:16,740 --> 00:14:22,620
to Mick or Jaison about website

297
00:14:20,339 --> 00:14:27,630
development and the problems I've run

298
00:14:22,620 --> 00:14:30,360
into right um talk about looking at an

299
00:14:27,630 --> 00:14:31,649
application and then taking what I'm

300
00:14:30,360 --> 00:14:33,300
doing and handing it to another

301
00:14:31,649 --> 00:14:34,740
consultant and saying okay this is where

302
00:14:33,300 --> 00:14:36,540
I've gotten to you this is what I've

303
00:14:34,740 --> 00:14:39,930
seen and it's like ah but did you not

304
00:14:36,540 --> 00:14:42,329
know about this function right we'll

305
00:14:39,930 --> 00:14:44,099
talk about JW T's in a bit and when I

306
00:14:42,329 --> 00:14:46,560
first heard of seeing Joe vo w T's it

307
00:14:44,100 --> 00:14:48,360
was like oh that's on interesting and

308
00:14:46,560 --> 00:14:50,430
what does that mean and and then I sat

309
00:14:48,360 --> 00:14:54,389
down with Jason and Jason talking what

310
00:14:50,430 --> 00:14:58,829
they meant and that understanding helps

311
00:14:54,389 --> 00:15:00,290
us grasp what's important to test and

312
00:14:58,829 --> 00:15:03,599
understanding it's not just technology

313
00:15:00,290 --> 00:15:05,279
right the understanding also is what

314
00:15:03,600 --> 00:15:07,589
about the application what about the

315
00:15:05,279 --> 00:15:11,990
business what about the organization

316
00:15:07,589 --> 00:15:15,060
behind it where it's deployed right um

317
00:15:11,990 --> 00:15:20,100
we see very often where something that

318
00:15:15,060 --> 00:15:24,089
is critical to fix in this industry is

319
00:15:20,100 --> 00:15:27,240
not in this industry over here and vice

320
00:15:24,089 --> 00:15:30,440
versa right so figured isn't important

321
00:15:27,240 --> 00:15:34,880
fix is absolutely important to fix

322
00:15:30,440 --> 00:15:36,510
elsewhere right so we have to understand

323
00:15:34,880 --> 00:15:38,010
how it's made

324
00:15:36,510 --> 00:15:40,880
I love that show it's such a

325
00:15:38,010 --> 00:15:44,310
don't show but I love the show right and

326
00:15:40,880 --> 00:15:46,410
we have to understand every bit of what

327
00:15:44,310 --> 00:15:48,810
it's made and I don't think that you

328
00:15:46,410 --> 00:15:51,420
have to be a developer okay this is a

329
00:15:48,810 --> 00:15:54,060
debate I see everyone smile on Twitter

330
00:15:51,420 --> 00:15:58,170
or Facebook or wherever we're arguing

331
00:15:54,060 --> 00:16:00,060
the latest rant um you know to be a good

332
00:15:58,170 --> 00:16:03,360
application pen tester you have to be a

333
00:16:00,060 --> 00:16:06,479
developer that's bogus um I find it to

334
00:16:03,360 --> 00:16:11,250
be gatekeeping does being a developer

335
00:16:06,480 --> 00:16:14,580
help maybe I know great developers that

336
00:16:11,250 --> 00:16:18,540
are awesome pen testers I also know

337
00:16:14,580 --> 00:16:20,790
horrible developers for great pen

338
00:16:18,540 --> 00:16:22,349
testers and I know other pen testers who

339
00:16:20,790 --> 00:16:25,260
have never developed a single line code

340
00:16:22,350 --> 00:16:27,630
in their life and what I've found is

341
00:16:25,260 --> 00:16:29,780
that when we talk about great pen

342
00:16:27,630 --> 00:16:34,550
testers when we talk about great

343
00:16:29,780 --> 00:16:39,209
security assessments the commonality is

344
00:16:34,550 --> 00:16:43,079
the knowledge and drive to understand

345
00:16:39,210 --> 00:16:45,480
how that system working before in you

346
00:16:43,080 --> 00:16:48,000
test it before you start throwing

347
00:16:45,480 --> 00:16:50,550
payloads before you start trying to

348
00:16:48,000 --> 00:16:52,500
exploit it because well and I've said

349
00:16:50,550 --> 00:16:55,890
this many many times when I've been on

350
00:16:52,500 --> 00:17:02,340
stage or sitting on a chair like today

351
00:16:55,890 --> 00:17:06,180
um as a security industry we really

352
00:17:02,340 --> 00:17:08,730
focus on the cool hacks right we focus

353
00:17:06,180 --> 00:17:10,410
on me the exploitation oh my gosh I

354
00:17:08,730 --> 00:17:13,530
stole three million credit card numbers

355
00:17:10,410 --> 00:17:15,900
I dumped the database and got a million

356
00:17:13,530 --> 00:17:19,290
people's Social Security number with

357
00:17:15,900 --> 00:17:22,490
permission right um that's what we focus

358
00:17:19,290 --> 00:17:26,129
on but the reality is when we look at a

359
00:17:22,490 --> 00:17:30,000
penetration test when we look at the

360
00:17:26,130 --> 00:17:32,670
methodology that we follow exploitation

361
00:17:30,000 --> 00:17:34,740
which is the fourth step which it's a

362
00:17:32,670 --> 00:17:36,750
cycle so it's also the eighth step the

363
00:17:34,740 --> 00:17:40,380
twelfth step the sixteenth step we can

364
00:17:36,750 --> 00:17:43,590
do this math forever it's actually the

365
00:17:40,380 --> 00:17:47,880
smallest part of the test it is the

366
00:17:43,590 --> 00:17:50,709
least amount of time that we spend in

367
00:17:47,880 --> 00:17:53,110
the window that we're testing and

368
00:17:50,710 --> 00:17:56,590
and let's just say it's a five day test

369
00:17:53,110 --> 00:18:00,399
right we don't spend three days

370
00:17:56,590 --> 00:18:02,709
exploiting stuff we spend small periods

371
00:18:00,399 --> 00:18:05,229
of time exploit it and all that

372
00:18:02,710 --> 00:18:08,110
exploitation is doing is validating that

373
00:18:05,230 --> 00:18:11,340
the finding is real in giving us a

374
00:18:08,110 --> 00:18:14,500
better understanding of what the

375
00:18:11,340 --> 00:18:18,029
vulnerability means to that organization

376
00:18:14,500 --> 00:18:21,220
right yeah if I can get access to

377
00:18:18,029 --> 00:18:22,630
back-end data stores what's in there

378
00:18:21,220 --> 00:18:25,630
what data is there is that they do

379
00:18:22,630 --> 00:18:29,320
important can I dump authentication

380
00:18:25,630 --> 00:18:31,120
credentials if I can what can I do with

381
00:18:29,320 --> 00:18:34,330
them are they in plain text are they

382
00:18:31,120 --> 00:18:38,639
easily crackable are they stored well

383
00:18:34,330 --> 00:18:43,480
right that's what exploitations for and

384
00:18:38,640 --> 00:18:45,630
party stories right what we spend most

385
00:18:43,480 --> 00:18:47,710
of our time on is actually mapping

386
00:18:45,630 --> 00:18:50,590
little reconnaissance which I can't

387
00:18:47,710 --> 00:18:53,890
spell looking out and seeing without

388
00:18:50,590 --> 00:18:55,990
their mapping is understanding how the

389
00:18:53,890 --> 00:18:57,370
app works then we move to discovery

390
00:18:55,990 --> 00:18:59,950
which is where we're poking and prodding

391
00:18:57,370 --> 00:19:01,539
and determining what vulnerabilities

392
00:18:59,950 --> 00:19:04,870
exist in this application and then like

393
00:19:01,539 --> 00:19:06,669
I said exploitation so when we talk

394
00:19:04,870 --> 00:19:10,178
about this methodology what are we

395
00:19:06,669 --> 00:19:12,669
looking for well we have a good start

396
00:19:10,179 --> 00:19:15,730
with things like the last top 10 which

397
00:19:12,669 --> 00:19:17,649
by the way side note the off top 10 was

398
00:19:15,730 --> 00:19:19,600
postponed from being released this year

399
00:19:17,649 --> 00:19:21,699
to being released next year and one of

400
00:19:19,600 --> 00:19:24,658
the reasons it was postponed is they

401
00:19:21,700 --> 00:19:27,580
don't have data and I would like every

402
00:19:24,659 --> 00:19:30,340
ester out there every consulting firm

403
00:19:27,580 --> 00:19:32,500
every internal tester to go out to the

404
00:19:30,340 --> 00:19:36,459
OAuth github repo for the top 10 list

405
00:19:32,500 --> 00:19:39,279
grab the sample files to submit data and

406
00:19:36,460 --> 00:19:40,360
submit data for the last three years the

407
00:19:39,279 --> 00:19:43,330
more data we get out there the more

408
00:19:40,360 --> 00:19:46,299
valid this list is going to be next year

409
00:19:43,330 --> 00:19:48,939
when it's released um we've put up on

410
00:19:46,299 --> 00:19:50,440
the screen the 2015 version in the 2017

411
00:19:48,940 --> 00:19:51,850
version mainly because and I'm not gonna

412
00:19:50,440 --> 00:19:55,149
rant about it now because I've ranted

413
00:19:51,850 --> 00:19:57,789
about it lots of times I think there

414
00:19:55,149 --> 00:20:02,918
were mistakes made because of a lack of

415
00:19:57,789 --> 00:20:04,029
data in 2017 I also think that many

416
00:20:02,919 --> 00:20:06,039
assessments

417
00:20:04,029 --> 00:20:09,460
that are regulatory or compliance

418
00:20:06,039 --> 00:20:12,460
related refer to the 2015 version still

419
00:20:09,460 --> 00:20:15,789
so as pen testers wow we don't want to

420
00:20:12,460 --> 00:20:18,450
be compliance check boxers right we do

421
00:20:15,789 --> 00:20:20,919
have to take into account what the

422
00:20:18,450 --> 00:20:23,019
organization we're testing has to be

423
00:20:20,919 --> 00:20:24,940
compliant with so if that organization

424
00:20:23,019 --> 00:20:26,710
has to be compliant with something that

425
00:20:24,940 --> 00:20:28,210
is going to refer to the 2013 version

426
00:20:26,710 --> 00:20:29,919
which by the way I'm putting it my

427
00:20:28,210 --> 00:20:31,359
monitor that has the slides on it

428
00:20:29,919 --> 00:20:32,979
case you're wondering why you can see

429
00:20:31,359 --> 00:20:38,349
keep pointing because I'm an idiot and

430
00:20:32,979 --> 00:20:39,639
think you can see my monitor um the you

431
00:20:38,349 --> 00:20:41,859
have to understand that that's the list

432
00:20:39,639 --> 00:20:44,258
they're going after and not that that

433
00:20:41,859 --> 00:20:46,689
should change what your test because the

434
00:20:44,259 --> 00:20:49,210
reality is nobody should be testing but

435
00:20:46,690 --> 00:20:51,129
against the top ten Oh ask themselves

436
00:20:49,210 --> 00:20:55,149
even say that it is not a test

437
00:20:51,129 --> 00:20:56,529
guidance it is a report saying hey here

438
00:20:55,149 --> 00:20:58,748
are the most common vulnerabilities we

439
00:20:56,529 --> 00:21:02,710
found in the data set we have that's it

440
00:20:58,749 --> 00:21:05,619
we miss you at all time right there are

441
00:21:02,710 --> 00:21:08,739
three big categories that you need to

442
00:21:05,619 --> 00:21:10,119
think about earth controls and we

443
00:21:08,739 --> 00:21:12,009
abbreviate that because it's

444
00:21:10,119 --> 00:21:14,259
authentication and authorization right

445
00:21:12,009 --> 00:21:15,609
how do you handle it how does it work we

446
00:21:14,259 --> 00:21:20,619
want to look at input and manipulation

447
00:21:15,609 --> 00:21:22,269
we want to think about our input and how

448
00:21:20,619 --> 00:21:23,949
it's used by the application and how it

449
00:21:22,269 --> 00:21:25,659
comes back down to the client whether

450
00:21:23,950 --> 00:21:28,119
that's the browser or a mobile app with

451
00:21:25,659 --> 00:21:31,359
an embedded app system whatever the

452
00:21:28,119 --> 00:21:34,269
Occulus I just got an oculus it's fine

453
00:21:31,359 --> 00:21:36,460
um and then logic control and with these

454
00:21:34,269 --> 00:21:37,929
three categories yeah I want to be very

455
00:21:36,460 --> 00:21:39,609
clear this is not comprehensive this is

456
00:21:37,929 --> 00:21:45,429
not everything you should be looking for

457
00:21:39,609 --> 00:21:47,139
right um but this is a good start that

458
00:21:45,429 --> 00:21:49,869
if you're a developer you're a QA person

459
00:21:47,139 --> 00:21:53,830
if you're a condenser which let's be fun

460
00:21:49,869 --> 00:21:55,658
pen testers glorified QA right um we

461
00:21:53,830 --> 00:21:59,589
just do something different when we find

462
00:21:55,659 --> 00:22:01,299
a bug if you look for these three

463
00:21:59,589 --> 00:22:05,019
categories if you start to evaluate

464
00:22:01,299 --> 00:22:08,168
things here you're gonna do that and how

465
00:22:05,019 --> 00:22:11,409
do you do that in my opinion it's

466
00:22:08,169 --> 00:22:14,369
through mapping right and exploring and

467
00:22:11,409 --> 00:22:17,210
understanding and detecting problems

468
00:22:14,369 --> 00:22:20,238
while you build a map and

469
00:22:17,210 --> 00:22:25,450
the Sherlock Holmes references um in the

470
00:22:20,239 --> 00:22:28,249
Discworld map as you use the application

471
00:22:25,450 --> 00:22:31,999
please note I didn't say abuse I said

472
00:22:28,249 --> 00:22:35,499
use and as you use the application you

473
00:22:31,999 --> 00:22:40,429
should be evaluating how it does things

474
00:22:35,499 --> 00:22:43,070
how do the pieces fit together how do

475
00:22:40,429 --> 00:22:45,950
the inputs get sent up to the server and

476
00:22:43,070 --> 00:22:48,229
come back and are used and consumed are

477
00:22:45,950 --> 00:22:50,749
they consumed on the server side are

478
00:22:48,229 --> 00:22:53,049
they concerned soon on the client side

479
00:22:50,749 --> 00:22:56,450
matter of fact in modern applications

480
00:22:53,049 --> 00:22:59,918
progressive web apps single page apps so

481
00:22:56,450 --> 00:23:05,960
much of the business logic is running

482
00:22:59,919 --> 00:23:08,149
inside the client and so many of those

483
00:23:05,960 --> 00:23:11,210
tests I talked about that we see that we

484
00:23:08,149 --> 00:23:11,718
look at that we have says don't do

485
00:23:11,210 --> 00:23:13,849
anything there

486
00:23:11,719 --> 00:23:15,469
they don't evaluate anything they don't

487
00:23:13,849 --> 00:23:18,049
evaluate anything the local storage they

488
00:23:15,469 --> 00:23:19,789
don't evaluate anything on the client

489
00:23:18,049 --> 00:23:21,918
side can you attack it can you change

490
00:23:19,789 --> 00:23:25,839
the business logic jumping back to those

491
00:23:21,919 --> 00:23:29,089
categories right so there's three things

492
00:23:25,839 --> 00:23:30,339
we want to think about well mapping that

493
00:23:29,089 --> 00:23:32,989
we're going to talk about today

494
00:23:30,339 --> 00:23:35,330
obviously there's a lots of things we

495
00:23:32,989 --> 00:23:36,950
can talk about while we're mapping but

496
00:23:35,330 --> 00:23:40,009
today we're going to talk a little bit

497
00:23:36,950 --> 00:23:44,690
about authentication authorization ap is

498
00:23:40,009 --> 00:23:46,460
in client-side features okay so let's

499
00:23:44,690 --> 00:23:50,320
start with authentication authentication

500
00:23:46,460 --> 00:23:53,450
authorization in my mind is a

501
00:23:50,320 --> 00:23:55,849
fundamental part of every application um

502
00:23:53,450 --> 00:23:59,029
and I think in my mind I'm correct

503
00:23:55,849 --> 00:24:04,720
Rooker's built we already if your

504
00:23:59,029 --> 00:24:06,340
application doesn't do this correctly

505
00:24:04,720 --> 00:24:07,740
really doesn't matter what other

506
00:24:06,340 --> 00:24:12,129
security controls you have in place

507
00:24:07,740 --> 00:24:15,039
really doesn't matter the cool laugh the

508
00:24:12,130 --> 00:24:16,960
cool input validation the awesome

509
00:24:15,039 --> 00:24:18,639
monitoring and logging that you're doing

510
00:24:16,960 --> 00:24:22,720
in the pack I know nobody calls moderate

511
00:24:18,639 --> 00:24:27,459
walkie Boston none of that matters

512
00:24:22,720 --> 00:24:31,210
because the foundation of security for

513
00:24:27,460 --> 00:24:32,679
your application failed because you

514
00:24:31,210 --> 00:24:36,940
messed up authentication or

515
00:24:32,679 --> 00:24:40,110
authorization what about right and we

516
00:24:36,940 --> 00:24:44,139
see lots of things here that people

517
00:24:40,110 --> 00:24:46,539
don't consider right and we talk about

518
00:24:44,139 --> 00:24:48,459
embedded by embedded I'm not talking I

519
00:24:46,539 --> 00:24:51,639
owe t or embedded systems what I mean

520
00:24:48,460 --> 00:24:55,570
here is the authentication and

521
00:24:51,639 --> 00:24:58,750
authorization is solely done within the

522
00:24:55,570 --> 00:25:00,549
application or the API okay they're not

523
00:24:58,750 --> 00:25:04,769
using single sign-on or something like

524
00:25:00,549 --> 00:25:07,840
that the app maintains its own

525
00:25:04,769 --> 00:25:10,779
authentication authorization system we

526
00:25:07,840 --> 00:25:13,539
also see a lot of problems with single

527
00:25:10,779 --> 00:25:14,860
sign-on systems and and whether that's a

528
00:25:13,539 --> 00:25:16,809
single sign-on system that you've

529
00:25:14,860 --> 00:25:20,559
purchased or one that you've built

530
00:25:16,809 --> 00:25:22,570
yourself and let's be blunt if you're

531
00:25:20,559 --> 00:25:25,990
building your own you're probably going

532
00:25:22,570 --> 00:25:30,730
to screw it up right um is it cuz you're

533
00:25:25,990 --> 00:25:33,460
an idiot no it's because your focus is

534
00:25:30,730 --> 00:25:35,769
probably not on the single sign-on

535
00:25:33,460 --> 00:25:36,759
systems unless that's why you're

536
00:25:35,769 --> 00:25:38,710
building it is because you want to

537
00:25:36,759 --> 00:25:41,049
become the single sign-on vendor your

538
00:25:38,710 --> 00:25:42,879
focus is on the application the focus is

539
00:25:41,049 --> 00:25:44,769
on business purpose that the focus is on

540
00:25:42,879 --> 00:25:47,500
the business data and this single

541
00:25:44,769 --> 00:25:49,929
sign-on system that you build um it's

542
00:25:47,500 --> 00:25:52,240
just a one okay

543
00:25:49,929 --> 00:25:54,190
the number of times we see people that

544
00:25:52,240 --> 00:25:56,350
will do single sign-on systems and and

545
00:25:54,190 --> 00:25:57,429
here's a good example of one single

546
00:25:56,350 --> 00:26:00,070
sign-on system you come to the

547
00:25:57,429 --> 00:26:02,590
application if you're not authenticated

548
00:26:00,070 --> 00:26:04,779
it redirects you to the single sign-on

549
00:26:02,590 --> 00:26:08,199
system right um the single sign-on

550
00:26:04,779 --> 00:26:10,720
system authenticates you asks you for

551
00:26:08,200 --> 00:26:13,360
who you are does all this cool stuff and

552
00:26:10,720 --> 00:26:15,250
in the test I'm thinking of the single

553
00:26:13,360 --> 00:26:18,159
sign-on was really well implemented

554
00:26:15,250 --> 00:26:19,810
there on that sir

555
00:26:18,160 --> 00:26:22,780
on that part of the application on that

556
00:26:19,810 --> 00:26:27,669
functionality it authenticated the user

557
00:26:22,780 --> 00:26:30,940
and then or did it do it handed the

558
00:26:27,670 --> 00:26:31,510
application back basically no pun

559
00:26:30,940 --> 00:26:33,670
intended

560
00:26:31,510 --> 00:26:36,610
basic offend occasion to events that

561
00:26:33,670 --> 00:26:40,030
were then passed to the original

562
00:26:36,610 --> 00:26:42,129
application right so you did this really

563
00:26:40,030 --> 00:26:45,040
awesome really cool single sign-on

564
00:26:42,130 --> 00:26:47,890
system and then you handed it to the

565
00:26:45,040 --> 00:26:50,290
browser in the weakest form of

566
00:26:47,890 --> 00:26:52,770
authentication the world has ever seen

567
00:26:50,290 --> 00:26:56,220
and might be an exaggeration right

568
00:26:52,770 --> 00:26:59,050
that's a problem we also see

569
00:26:56,220 --> 00:27:03,340
multi-tenant systems and handling of

570
00:26:59,050 --> 00:27:06,220
tenancy across these applications and

571
00:27:03,340 --> 00:27:10,560
then of course badly implemented

572
00:27:06,220 --> 00:27:13,540
multi-factor authentication and again in

573
00:27:10,560 --> 00:27:19,500
most cases the badly implemented

574
00:27:13,540 --> 00:27:24,909
multi-factor is either roll-your-own or

575
00:27:19,500 --> 00:27:27,330
there are bypasses for it um we have a

576
00:27:24,910 --> 00:27:30,940
we have a customer that we test on a

577
00:27:27,330 --> 00:27:33,449
yearly basis and they have a

578
00:27:30,940 --> 00:27:37,180
multi-factor authentication system and

579
00:27:33,450 --> 00:27:40,390
also have a hard-coded token that you

580
00:27:37,180 --> 00:27:43,450
can pass as one of the headers and if

581
00:27:40,390 --> 00:27:46,360
that token exists the multi-factor

582
00:27:43,450 --> 00:27:49,000
authentication just isn't checked right

583
00:27:46,360 --> 00:27:52,360
so you can put any number in the MFA

584
00:27:49,000 --> 00:27:54,370
field possible and the reason they do it

585
00:27:52,360 --> 00:27:56,919
and don't get me wrong I get it I

586
00:27:54,370 --> 00:27:59,260
understand why they do it in their

587
00:27:56,920 --> 00:28:02,290
development environments in their QA

588
00:27:59,260 --> 00:28:03,670
departments they want to be able to load

589
00:28:02,290 --> 00:28:05,649
tests they want to do performance

590
00:28:03,670 --> 00:28:07,720
testing and so what they did was they

591
00:28:05,650 --> 00:28:09,760
built this mechanism so that their load

592
00:28:07,720 --> 00:28:11,950
testing scripts and their development

593
00:28:09,760 --> 00:28:14,170
scripts didn't have to worry about

594
00:28:11,950 --> 00:28:18,760
multi-factor authentication the problem

595
00:28:14,170 --> 00:28:21,040
is they promoted that feature I hope

596
00:28:18,760 --> 00:28:24,879
you're the italics in quotes to

597
00:28:21,040 --> 00:28:26,560
production so if you know that token and

598
00:28:24,880 --> 00:28:30,330
let's be clear I'm not going to say what

599
00:28:26,560 --> 00:28:30,330
it is but it's not hard to guess

600
00:28:30,500 --> 00:28:34,970
you shove that into the production app

601
00:28:31,820 --> 00:28:37,570
multi packers turned off basically you

602
00:28:34,970 --> 00:28:40,910
still have to put a number in the field

603
00:28:37,570 --> 00:28:43,129
but that's it these are the types of

604
00:28:40,910 --> 00:28:45,860
things we see is that they roll our

605
00:28:43,130 --> 00:28:49,550
weaknesses so let's talk about some of

606
00:28:45,860 --> 00:28:52,189
the issues first let's start with

607
00:28:49,550 --> 00:28:54,080
embedded remember all the application

608
00:28:52,190 --> 00:28:55,730
authentication authorization is handled

609
00:28:54,080 --> 00:28:58,189
inside the application solely in the

610
00:28:55,730 --> 00:28:59,950
application um the biggest thing is a

611
00:28:58,190 --> 00:29:02,650
pen tester that you should be doing is

612
00:28:59,950 --> 00:29:08,510
determining how the application

613
00:29:02,650 --> 00:29:11,480
maintains its state right one of the

614
00:29:08,510 --> 00:29:14,750
things it's poor examples simple

615
00:29:11,480 --> 00:29:18,890
examples not monitored at all what's the

616
00:29:14,750 --> 00:29:21,770
session tickets right remove them go to

617
00:29:18,890 --> 00:29:23,540
the app as your mapping login so

618
00:29:21,770 --> 00:29:28,850
authenticate to the system you start

619
00:29:23,540 --> 00:29:32,210
using the system now delete the session

620
00:29:28,850 --> 00:29:35,179
token that you were handed right um does

621
00:29:32,210 --> 00:29:37,970
the application log you out does the

622
00:29:35,180 --> 00:29:40,540
application continue to work does the

623
00:29:37,970 --> 00:29:43,400
application give you a new session token

624
00:29:40,540 --> 00:29:45,260
so if it continues to work then the

625
00:29:43,400 --> 00:29:47,510
session ID has nothing to do with

626
00:29:45,260 --> 00:29:50,060
authentication authorization okay or

627
00:29:47,510 --> 00:29:53,330
nothing critical to do with

628
00:29:50,060 --> 00:29:54,919
authentication authorization um look for

629
00:29:53,330 --> 00:29:58,639
something else is there a cookie being

630
00:29:54,920 --> 00:30:00,830
passed out is there client-side code we

631
00:29:58,640 --> 00:30:05,390
see more and more applications using

632
00:30:00,830 --> 00:30:10,129
html5 local storage to put state data in

633
00:30:05,390 --> 00:30:13,010
there okay um another behavior we see as

634
00:30:10,130 --> 00:30:15,920
a matter of fact not this Friday but the

635
00:30:13,010 --> 00:30:19,340
last Friday Jason was testing an app um

636
00:30:15,920 --> 00:30:21,280
and he found that if you remove the

637
00:30:19,340 --> 00:30:24,740
session token and you made the request

638
00:30:21,280 --> 00:30:28,520
the application handed you a new session

639
00:30:24,740 --> 00:30:31,040
today but the application also accepted

640
00:30:28,520 --> 00:30:34,220
whatever information you said you were

641
00:30:31,040 --> 00:30:36,620
okay and so give you a new session token

642
00:30:34,220 --> 00:30:39,830
and you could hijack another account

643
00:30:36,620 --> 00:30:42,840
right um that wasn't the Friday app that

644
00:30:39,830 --> 00:30:47,159
was different but let's go

645
00:30:42,840 --> 00:30:52,230
we see lots of applications that the

646
00:30:47,160 --> 00:30:53,820
developers have tried to solve the

647
00:30:52,230 --> 00:30:56,820
authentication authorization problem and

648
00:30:53,820 --> 00:30:58,980
it's all with how they maintain state so

649
00:30:56,820 --> 00:31:01,470
that's the first thing figure out how

650
00:30:58,980 --> 00:31:02,460
the application maintain state and if

651
00:31:01,470 --> 00:31:05,430
you can figure out how they maintain

652
00:31:02,460 --> 00:31:08,640
state then you can start to abuse that

653
00:31:05,430 --> 00:31:10,230
if it's something in local storage okay

654
00:31:08,640 --> 00:31:12,270
well then I'm gonna look around for a

655
00:31:10,230 --> 00:31:15,810
cross-site scripting flaw so that I can

656
00:31:12,270 --> 00:31:19,410
attack another user to pull their state

657
00:31:15,810 --> 00:31:21,450
right um if they're using local storage

658
00:31:19,410 --> 00:31:23,040
are they clearing local storage out so

659
00:31:21,450 --> 00:31:25,230
are they killing the session correctly

660
00:31:23,040 --> 00:31:27,570
when it's done is something that you

661
00:31:25,230 --> 00:31:31,430
want to look at right um can you

662
00:31:27,570 --> 00:31:33,960
manipulate it can you change it

663
00:31:31,430 --> 00:31:37,290
multi-tenancy is another big one that we

664
00:31:33,960 --> 00:31:40,560
see more and more applications working

665
00:31:37,290 --> 00:31:42,629
this way whether they are an application

666
00:31:40,560 --> 00:31:45,179
that your organization pays for which

667
00:31:42,630 --> 00:31:46,440
gets cloud stuff in a second right or

668
00:31:45,180 --> 00:31:49,230
whether it's an application you're

669
00:31:46,440 --> 00:31:52,080
providing and you have multi-tenancy

670
00:31:49,230 --> 00:31:56,160
within it right multi-tenancy just means

671
00:31:52,080 --> 00:31:58,980
we have multiple tenants or typically

672
00:31:56,160 --> 00:32:02,550
organizations that use the application

673
00:31:58,980 --> 00:32:04,170
and the application is presenting itself

674
00:32:02,550 --> 00:32:07,860
to them their authentication

675
00:32:04,170 --> 00:32:15,290
authorization as just within that tenant

676
00:32:07,860 --> 00:32:15,290
okay um dumb example quickbooks online i

677
00:32:17,410 --> 00:32:22,900
run a company that might be a surprise

678
00:32:19,540 --> 00:32:26,379
did you miss the beginning but I run a

679
00:32:22,900 --> 00:32:28,270
company and we use QuickBooks right we

680
00:32:26,380 --> 00:32:31,210
we use it because our accountants asked

681
00:32:28,270 --> 00:32:34,540
us to write and so we use QuickBooks

682
00:32:31,210 --> 00:32:37,750
Online and we go in there and we have

683
00:32:34,540 --> 00:32:39,610
I'm gonna set up the accounts so I'm the

684
00:32:37,750 --> 00:32:40,930
primary user and this is probably way

685
00:32:39,610 --> 00:32:42,520
more information than you need and I'm

686
00:32:40,930 --> 00:32:46,030
probably giving out information I

687
00:32:42,520 --> 00:32:46,870
shouldn't but all up don't care I'm in

688
00:32:46,030 --> 00:32:50,470
the primary user

689
00:32:46,870 --> 00:32:53,409
so I manage the other users in the

690
00:32:50,470 --> 00:32:55,120
system so I'm an administrator but I'm

691
00:32:53,410 --> 00:32:58,360
not an administrator of QuickBooks

692
00:32:55,120 --> 00:33:01,629
Online I'm an administrator of the

693
00:32:58,360 --> 00:33:04,810
secure ideas tenant in QuickBooks Online

694
00:33:01,630 --> 00:33:09,340
right and you may run this company

695
00:33:04,810 --> 00:33:12,280
right um Tim tomes the keynote from

696
00:33:09,340 --> 00:33:15,040
today he owns his own company she may

697
00:33:12,280 --> 00:33:16,750
use QuickBooks as well I had no idea but

698
00:33:15,040 --> 00:33:19,780
if he does he's probably the

699
00:33:16,750 --> 00:33:23,260
administrator of timett ones' of

700
00:33:19,780 --> 00:33:25,570
QuickBooks organization and he manages

701
00:33:23,260 --> 00:33:28,870
those users he can't manage my users I

702
00:33:25,570 --> 00:33:32,700
can't manage his even though from a

703
00:33:28,870 --> 00:33:34,689
description perspective we have the same

704
00:33:32,700 --> 00:33:37,450
authorization rights we have the same

705
00:33:34,690 --> 00:33:41,140
abilities inside the application we just

706
00:33:37,450 --> 00:33:43,750
have them within our tenant okay so as

707
00:33:41,140 --> 00:33:46,000
pen testers one of the things that we

708
00:33:43,750 --> 00:33:48,070
want to be able to do obviously we would

709
00:33:46,000 --> 00:33:51,160
love to be able to escalate our

710
00:33:48,070 --> 00:33:54,250
privileges to maintain and administer

711
00:33:51,160 --> 00:33:57,130
QuickBooks Online right if we were

712
00:33:54,250 --> 00:34:00,190
attacking them but I'd also like to be

713
00:33:57,130 --> 00:34:05,020
able to jump organizations

714
00:34:00,190 --> 00:34:07,330
what happens if Tim can somehow figure

715
00:34:05,020 --> 00:34:10,929
out a way to manage the users in the

716
00:34:07,330 --> 00:34:13,210
secure ideas organization right so we

717
00:34:10,929 --> 00:34:17,790
want to look for things like that we

718
00:34:13,210 --> 00:34:21,190
want to look for ow the tenancy system

719
00:34:17,790 --> 00:34:21,880
maintains organizational state how does

720
00:34:21,190 --> 00:34:23,918
it know who I am

721
00:34:21,880 --> 00:34:27,399
how does it know what organization I'm

722
00:34:23,918 --> 00:34:29,600
part of and sometimes that's simply the

723
00:34:27,399 --> 00:34:32,000
user names

724
00:34:29,600 --> 00:34:36,469
previous preface I can't even say words

725
00:34:32,000 --> 00:34:39,650
today sometimes it's a nother token it's

726
00:34:36,469 --> 00:34:41,149
another part of what's passed down to

727
00:34:39,650 --> 00:34:44,320
the client and passed back up to the

728
00:34:41,150 --> 00:34:46,580
server okay and we have to look for that

729
00:34:44,320 --> 00:34:49,010
sometimes it's simple it's called an org

730
00:34:46,580 --> 00:34:51,860
ID or something like that other times

731
00:34:49,010 --> 00:34:55,280
it's pretty complex right and we

732
00:34:51,860 --> 00:34:59,330
actually control what organization were

733
00:34:55,280 --> 00:35:02,060
in based on the URL we hit or where

734
00:34:59,330 --> 00:35:05,120
we're coming from okay and we want to

735
00:35:02,060 --> 00:35:06,860
look for things like this when we talk

736
00:35:05,120 --> 00:35:12,259
about cloud systems

737
00:35:06,860 --> 00:35:15,500
I love cloud systems I really do when I

738
00:35:12,260 --> 00:35:17,120
first started and people said oh man the

739
00:35:15,500 --> 00:35:19,700
cloud it's gonna be awesome

740
00:35:17,120 --> 00:35:20,870
I looked at it's in this system um and

741
00:35:19,700 --> 00:35:22,490
we've all seen the sticker that's right

742
00:35:20,870 --> 00:35:26,450
the cloud is just somebody else's

743
00:35:22,490 --> 00:35:28,399
computer um that was my attitude for a

744
00:35:26,450 --> 00:35:30,290
very long time and I will tell you that

745
00:35:28,400 --> 00:35:32,990
if that is still your attitude as a

746
00:35:30,290 --> 00:35:35,690
tester as a penetration tester as a

747
00:35:32,990 --> 00:35:40,359
security consultant then you aren't

748
00:35:35,690 --> 00:35:43,340
going to do as good a job as you should

749
00:35:40,360 --> 00:35:46,790
because the cloud is actually so much

750
00:35:43,340 --> 00:35:47,980
more that is a valid statement the cloud

751
00:35:46,790 --> 00:35:49,130
is just somebody else's computer

752
00:35:47,980 --> 00:35:52,700
absolutely

753
00:35:49,130 --> 00:35:56,930
the LMS that securities runs runs on

754
00:35:52,700 --> 00:36:00,049
somebody else's computers they manage

755
00:35:56,930 --> 00:36:01,819
the underlying system they manage the

756
00:36:00,050 --> 00:36:06,750
servers and the hardware and the

757
00:36:01,820 --> 00:36:11,250
software that it's running on right but

758
00:36:06,750 --> 00:36:14,330
yes just the start the ability to scale

759
00:36:11,250 --> 00:36:17,040
the ability to spin stuff up the

760
00:36:14,330 --> 00:36:20,730
functionality and other feature sets

761
00:36:17,040 --> 00:36:24,270
that are available to you to control and

762
00:36:20,730 --> 00:36:28,970
manage and administer your cloud systems

763
00:36:24,270 --> 00:36:33,359
is fascinating it's also quite often

764
00:36:28,970 --> 00:36:36,000
misused in ways that we can attack the

765
00:36:33,359 --> 00:36:38,430
simplest one okay we know it right

766
00:36:36,000 --> 00:36:40,380
leaked credentials and tokens how many

767
00:36:38,430 --> 00:36:43,589
times have you looked at a github repo

768
00:36:40,380 --> 00:36:45,869
and scene where somebody committed there

769
00:36:43,590 --> 00:36:48,859
eight of us tokens I thought that for

770
00:36:45,869 --> 00:36:52,650
you but for me it's a lot right uh

771
00:36:48,859 --> 00:36:55,619
people post comments one of my favorite

772
00:36:52,650 --> 00:36:58,470
things to do is to go out and read the

773
00:36:55,619 --> 00:37:01,050
forum's where organizations are asking

774
00:36:58,470 --> 00:37:03,209
for support in their cloud-based systems

775
00:37:01,050 --> 00:37:07,770
and what I do is I limited it to my

776
00:37:03,210 --> 00:37:09,510
target and what we find is that they ask

777
00:37:07,770 --> 00:37:11,849
questions and as they're asking

778
00:37:09,510 --> 00:37:14,609
questions they post credentials they

779
00:37:11,849 --> 00:37:16,230
post access tokens they give out the

780
00:37:14,609 --> 00:37:19,859
information we find out during research

781
00:37:16,230 --> 00:37:23,490
in recon right but the other thing that

782
00:37:19,859 --> 00:37:25,348
we find is that if we look at the

783
00:37:23,490 --> 00:37:27,629
functionality of the cloud-based systems

784
00:37:25,349 --> 00:37:30,530
work and remember that if you're on pen

785
00:37:27,630 --> 00:37:34,980
testing an app that's running in Azure

786
00:37:30,530 --> 00:37:37,859
I'm allowed to pen test that app as long

787
00:37:34,980 --> 00:37:41,700
as I have permission right I'm not

788
00:37:37,859 --> 00:37:45,020
allowed to attack Microsoft's interfaces

789
00:37:41,700 --> 00:37:48,689
I'm not allowed to attack the

790
00:37:45,020 --> 00:37:51,950
infrastructure running that app right

791
00:37:48,690 --> 00:37:55,230
unless of course Microsoft was who hired

792
00:37:51,950 --> 00:37:57,689
but that doesn't mean we should ignore

793
00:37:55,230 --> 00:38:00,900
that infrastructure that we should

794
00:37:57,690 --> 00:38:05,869
ignore how that system works and

795
00:38:00,900 --> 00:38:09,089
functions and does things okay um as

796
00:38:05,869 --> 00:38:11,339
such one of the things that you should

797
00:38:09,089 --> 00:38:15,029
do is to go out and look at things like

798
00:38:11,339 --> 00:38:16,980
hey now are as three buckets managed

799
00:38:15,030 --> 00:38:19,589
right because we all know the problem

800
00:38:16,980 --> 00:38:21,180
with s3 buckets being out there public

801
00:38:19,589 --> 00:38:25,590
and having

802
00:38:21,180 --> 00:38:28,440
but what about s3 buckets that are tied

803
00:38:25,590 --> 00:38:30,480
the applications what about we see this

804
00:38:28,440 --> 00:38:33,360
all the time in what I will tell you

805
00:38:30,480 --> 00:38:35,900
that on a daily basis some jackhole on

806
00:38:33,360 --> 00:38:39,660
the Internet is vuln

807
00:38:35,900 --> 00:38:41,940
secure ideas couple and they're trying

808
00:38:39,660 --> 00:38:43,680
to do I giggle every time I see logs

809
00:38:41,940 --> 00:38:47,100
where somebody is trying to do sequel

810
00:38:43,680 --> 00:38:48,720
injection against secure ideas calm now

811
00:38:47,100 --> 00:38:50,790
don't get me wrong I'm not standing here

812
00:38:48,720 --> 00:38:53,549
saying hahahaha we're a hundred percent

813
00:38:50,790 --> 00:38:55,529
security you can't do anything no that's

814
00:38:53,550 --> 00:38:58,410
not what I'm saying but I am saying that

815
00:38:55,530 --> 00:39:03,090
the security is calm site is a static

816
00:38:58,410 --> 00:39:07,620
website it's hosted in s3 bucket fronted

817
00:39:03,090 --> 00:39:12,210
by cloud fund right it is static content

818
00:39:07,620 --> 00:39:14,790
and so if you didn't realize that you

819
00:39:12,210 --> 00:39:17,400
could do that with an s3 bucket fronted

820
00:39:14,790 --> 00:39:20,009
by cloud front and you see the fact that

821
00:39:17,400 --> 00:39:22,760
there are parameters passed from page to

822
00:39:20,010 --> 00:39:25,980
page and you think oh I can attack that

823
00:39:22,760 --> 00:39:27,690
ok then you haven't understand it you

824
00:39:25,980 --> 00:39:29,580
don't have an understanding of the

825
00:39:27,690 --> 00:39:32,190
underlying infrastructure that is

826
00:39:29,580 --> 00:39:34,860
running and we don't hide the fact that

827
00:39:32,190 --> 00:39:36,750
that's how we manage our system right we

828
00:39:34,860 --> 00:39:38,490
matter of fact as far as I remember we

829
00:39:36,750 --> 00:39:42,480
have a blog post when we talked about

830
00:39:38,490 --> 00:39:44,450
how we set it up and so we release that

831
00:39:42,480 --> 00:39:48,330
information we believe very firmly in

832
00:39:44,450 --> 00:39:49,830
sharing and and being opened but if you

833
00:39:48,330 --> 00:39:51,840
don't understand the underlying system

834
00:39:49,830 --> 00:39:53,490
if you didn't understand what an s3

835
00:39:51,840 --> 00:39:59,340
bucket means if you don't understand

836
00:39:53,490 --> 00:40:01,709
what that impacts your testing of our

837
00:39:59,340 --> 00:40:04,050
Sun 8 well then you're going to spend a

838
00:40:01,710 --> 00:40:06,540
lot of time wasting time and I don't

839
00:40:04,050 --> 00:40:07,980
know about you but in the 10 years I've

840
00:40:06,540 --> 00:40:09,920
been running security is I've never had

841
00:40:07,980 --> 00:40:12,900
somebody give me an unlimited budget and

842
00:40:09,920 --> 00:40:16,080
I have to do things within the time

843
00:40:12,900 --> 00:40:18,720
frame 1/2 so research the systems look

844
00:40:16,080 --> 00:40:23,069
at things like I'll tell you right now

845
00:40:18,720 --> 00:40:26,549
we use SNS so when you go to our website

846
00:40:23,070 --> 00:40:29,520
and you fill in a form it is submitted

847
00:40:26,550 --> 00:40:32,970
to a lambda and that Wanda is dynamic

848
00:40:29,520 --> 00:40:33,960
brain and that lambda hands that message

849
00:40:32,970 --> 00:40:37,020
or doin SS

850
00:40:33,960 --> 00:40:39,540
and that comes to us right

851
00:40:37,020 --> 00:40:41,580
is that attackable maybe

852
00:40:39,540 --> 00:40:44,330
right I'm not granting permission for

853
00:40:41,580 --> 00:40:46,620
everybody to go try not against my sight

854
00:40:44,330 --> 00:40:48,569
but we've tried we've locked down the

855
00:40:46,620 --> 00:40:50,520
things as well as we can

856
00:40:48,570 --> 00:40:53,190
we've tried to take into account these

857
00:40:50,520 --> 00:40:55,320
things and when you test our sight if

858
00:40:53,190 --> 00:40:58,200
you were the company we hired to test it

859
00:40:55,320 --> 00:41:00,360
we would hope that you would know how

860
00:40:58,200 --> 00:41:02,640
long does work and know know how the

861
00:41:00,360 --> 00:41:06,589
internet system works so that you would

862
00:41:02,640 --> 00:41:12,140
know what was okay to pass into right

863
00:41:06,589 --> 00:41:15,288
go from there right oh all of this stuff

864
00:41:12,140 --> 00:41:26,950
becomes very important with as you look

865
00:41:15,289 --> 00:41:26,950
at the system's api's API API is api's I

866
00:41:27,309 --> 00:41:35,359
am old I still remember the first API I

867
00:41:32,420 --> 00:41:39,519
built it was a soap based web service

868
00:41:35,359 --> 00:41:44,328
and it was back ended by a mainframe a

869
00:41:39,519 --> 00:41:45,890
lot of XML a lot of metaphor um you

870
00:41:44,329 --> 00:41:47,299
still find soap based API is I'm not

871
00:41:45,890 --> 00:41:50,569
going to get into so Casey yeah it's

872
00:41:47,299 --> 00:41:53,630
here right but what you have to see is

873
00:41:50,569 --> 00:41:57,529
that very much of your applications are

874
00:41:53,630 --> 00:42:01,069
back ended by micro services or restful

875
00:41:57,529 --> 00:42:03,229
api um and yes I know a wrestler guy can

876
00:42:01,069 --> 00:42:05,150
be a micro service and a micro service

877
00:42:03,229 --> 00:42:09,468
could be something other than a restful

878
00:42:05,150 --> 00:42:12,019
api and what we need to do is as we look

879
00:42:09,469 --> 00:42:15,499
at the application we need to evaluate

880
00:42:12,019 --> 00:42:18,919
what is happening again during mapping

881
00:42:15,499 --> 00:42:20,269
and the screenshots here some of them

882
00:42:18,920 --> 00:42:22,549
might be well all of them might be

883
00:42:20,269 --> 00:42:24,769
difficult to read um I don't know how

884
00:42:22,549 --> 00:42:28,219
big they appear on your monitor on my

885
00:42:24,769 --> 00:42:30,680
monitor their clears anything but if you

886
00:42:28,219 --> 00:42:35,239
can see them what you'll see is all of

887
00:42:30,680 --> 00:42:36,859
these come from the wasp juice shop um I

888
00:42:35,239 --> 00:42:39,729
actually think that juice shop is a

889
00:42:36,859 --> 00:42:42,890
great example of a modern application

890
00:42:39,729 --> 00:42:46,308
that's a vulnerable to lots of stuff

891
00:42:42,890 --> 00:42:48,319
that you can play and as you look at the

892
00:42:46,309 --> 00:42:52,849
application what you should see is that

893
00:42:48,319 --> 00:42:54,558
there are calls to API there's actually

894
00:42:52,849 --> 00:42:55,849
a number of API it's built in a Jewish

895
00:42:54,559 --> 00:42:58,249
out there's an administration one

896
00:42:55,849 --> 00:43:01,789
there's a front-end one for users

897
00:42:58,249 --> 00:43:03,200
there's one for products um all of this

898
00:43:01,789 --> 00:43:04,549
is available to you now the nice thing

899
00:43:03,200 --> 00:43:07,759
about playing around something like

900
00:43:04,549 --> 00:43:10,479
juice shop is that the solutions are

901
00:43:07,759 --> 00:43:12,799
known right unlike what we do a pen test

902
00:43:10,479 --> 00:43:14,269
we don't know what the vulnerabilities

903
00:43:12,799 --> 00:43:17,150
are that we're gonna find here with

904
00:43:14,269 --> 00:43:20,058
juice shop we do so we can go and focus

905
00:43:17,150 --> 00:43:20,470
on them and so what we say to people it

906
00:43:20,059 --> 00:43:23,680
is

907
00:43:20,470 --> 00:43:28,390
go out there and map what the API is are

908
00:43:23,680 --> 00:43:31,210
and I'll give you a good example with

909
00:43:28,390 --> 00:43:34,000
with juice shop what you'll see is that

910
00:43:31,210 --> 00:43:37,030
from the user interface there are paths

911
00:43:34,000 --> 00:43:41,170
that you go to routes that you can load

912
00:43:37,030 --> 00:43:44,230
and then from the client-side code it

913
00:43:41,170 --> 00:43:46,089
makes calls out to these API now if all

914
00:43:44,230 --> 00:43:47,740
you're doing is looking at burb all you

915
00:43:46,089 --> 00:43:48,970
see are the requests and you really

916
00:43:47,740 --> 00:43:49,299
don't understand where they're coming

917
00:43:48,970 --> 00:43:50,500
from

918
00:43:49,300 --> 00:43:53,050
and if all you're doing is looking at

919
00:43:50,500 --> 00:43:55,210
the browser and not evaluating what's

920
00:43:53,050 --> 00:43:58,210
happening under the covers all you see

921
00:43:55,210 --> 00:44:00,099
are the URLs that are presented to you

922
00:43:58,210 --> 00:44:02,130
now if you're a real pen tester you

923
00:44:00,099 --> 00:44:05,530
wouldn't do either of those two things

924
00:44:02,130 --> 00:44:06,700
we still see it all the time and so what

925
00:44:05,530 --> 00:44:09,040
you need to do is you need to map those

926
00:44:06,700 --> 00:44:11,770
you need to understand what the

927
00:44:09,040 --> 00:44:15,730
different functions are and the

928
00:44:11,770 --> 00:44:19,390
developers in the room even if you know

929
00:44:15,730 --> 00:44:24,369
what the API endpoints are map them and

930
00:44:19,390 --> 00:44:26,799
here's why very often we find things

931
00:44:24,369 --> 00:44:28,450
that have been deployed that the

932
00:44:26,800 --> 00:44:31,150
developer doesn't realize is part of

933
00:44:28,450 --> 00:44:34,029
that API whether it's because they used

934
00:44:31,150 --> 00:44:36,280
a framework that added that or whether

935
00:44:34,030 --> 00:44:38,349
it's because they inherited it from

936
00:44:36,280 --> 00:44:40,329
somebody else or another dog put it in

937
00:44:38,349 --> 00:44:43,150
and this developer didn't realize it but

938
00:44:40,329 --> 00:44:45,310
very often when we finish an API test

939
00:44:43,150 --> 00:44:46,540
and we do lots of them we go back to the

940
00:44:45,310 --> 00:44:47,619
developers in like hey here's what we

941
00:44:46,540 --> 00:44:49,810
found and they're like oh that's not

942
00:44:47,619 --> 00:44:53,950
part of our app no no it is it's right

943
00:44:49,810 --> 00:44:55,750
here right um it's on your so it's

944
00:44:53,950 --> 00:44:58,270
within your application your application

945
00:44:55,750 --> 00:45:00,160
actually calls it um I wonder where that

946
00:44:58,270 --> 00:45:01,720
came from don't know I can't tell you

947
00:45:00,160 --> 00:45:03,069
that I don't know where your code came

948
00:45:01,720 --> 00:45:05,109
from but I do know I found this

949
00:45:03,069 --> 00:45:07,900
vulnerability I did find this problem so

950
00:45:05,109 --> 00:45:10,270
map them and then understand what the

951
00:45:07,900 --> 00:45:11,680
inputs are so like for example one of

952
00:45:10,270 --> 00:45:15,970
the mistakes we see from people all the

953
00:45:11,680 --> 00:45:18,220
time is restful api is use the HTTP

954
00:45:15,970 --> 00:45:21,189
methods to handle data back and forth

955
00:45:18,220 --> 00:45:24,819
for example you'll see a get to to get

956
00:45:21,190 --> 00:45:28,180
data back you'll see a post when they

957
00:45:24,819 --> 00:45:30,880
are submitting data to the api you'll

958
00:45:28,180 --> 00:45:33,460
see a put when we're putting data in or

959
00:45:30,880 --> 00:45:34,440
information into the api and you'll see

960
00:45:33,460 --> 00:45:38,420
a delete

961
00:45:34,440 --> 00:45:40,680
when you're removing records hey and now

962
00:45:38,420 --> 00:45:42,900
think back to one of the first slides

963
00:45:40,680 --> 00:45:45,450
where I showed the Pearl CGI scripts man

964
00:45:42,900 --> 00:45:47,430
if you were testing an app that was a

965
00:45:45,450 --> 00:45:50,790
pearl CGI and I told you that the server

966
00:45:47,430 --> 00:45:52,649
supported put and delete you'd giggle

967
00:45:50,790 --> 00:45:57,480
right to be a little evil maniacal

968
00:45:52,650 --> 00:46:01,980
laughter um way too often we see pen

969
00:45:57,480 --> 00:46:04,400
testers that will look at RESTful API

970
00:46:01,980 --> 00:46:06,720
see that it uses a put and a delete and

971
00:46:04,400 --> 00:46:08,730
flatten that as a high risk they don't

972
00:46:06,720 --> 00:46:10,500
even test it they don't even verify that

973
00:46:08,730 --> 00:46:14,430
what they think is going on is what's

974
00:46:10,500 --> 00:46:16,170
going on they just say oh that's bad

975
00:46:14,430 --> 00:46:19,529
we see that a lot from internal security

976
00:46:16,170 --> 00:46:22,560
teams right because of this traditional

977
00:46:19,530 --> 00:46:24,300
mindset it's that method was bad

978
00:46:22,560 --> 00:46:25,770
there's nothing about it I don't need to

979
00:46:24,300 --> 00:46:30,329
do need to verify it it's bad to have

980
00:46:25,770 --> 00:46:33,300
the reality is that's not true could it

981
00:46:30,329 --> 00:46:37,319
be bad yes if I can delete records out

982
00:46:33,300 --> 00:46:41,339
of your API with out authorization that

983
00:46:37,319 --> 00:46:44,400
would be bad if I can put records into

984
00:46:41,339 --> 00:46:47,670
your API without authorization that can

985
00:46:44,400 --> 00:46:49,500
be bad but it's not the traditional bad

986
00:46:47,670 --> 00:46:52,410
and we have to evaluate what's going on

987
00:46:49,500 --> 00:46:55,770
so understand the inputs what is the

988
00:46:52,410 --> 00:46:56,490
format for example you'll see JavaScript

989
00:46:55,770 --> 00:47:01,079
object notation

990
00:46:56,490 --> 00:47:06,149
Jason JSON right you'll see just normal

991
00:47:01,079 --> 00:47:08,069
regular inputs name value pairs you'll

992
00:47:06,150 --> 00:47:11,520
also see and this one throws off a lot

993
00:47:08,069 --> 00:47:15,750
of people where instead of the URL being

994
00:47:11,520 --> 00:47:19,380
something like API dot JSP question mark

995
00:47:15,750 --> 00:47:23,369
name equals Kevin and password ampersand

996
00:47:19,380 --> 00:47:26,250
password equals password right instead

997
00:47:23,369 --> 00:47:30,240
of that type of fauna in the URL instead

998
00:47:26,250 --> 00:47:33,420
you'll see URLs where the path and file

999
00:47:30,240 --> 00:47:39,799
name are actually parameters to the

1000
00:47:33,420 --> 00:47:44,310
application right you'll see where those

1001
00:47:39,800 --> 00:47:46,230
parameters if you change them if you

1002
00:47:44,310 --> 00:47:48,160
change the one that's the name it

1003
00:47:46,230 --> 00:47:50,079
doesn't do anything breaks yeah the

1004
00:47:48,160 --> 00:47:52,808
right cuz you haven't passed in the

1005
00:47:50,079 --> 00:47:54,670
correct name value pairs if you change

1006
00:47:52,809 --> 00:47:55,420
the value you can actually start doing

1007
00:47:54,670 --> 00:47:56,799
injections

1008
00:47:55,420 --> 00:48:00,130
you can put payloads that you can

1009
00:47:56,799 --> 00:48:02,559
actually start so understand the format

1010
00:48:00,130 --> 00:48:05,980
of what they're doing check to see if

1011
00:48:02,559 --> 00:48:09,190
it's modifiable in some systems they

1012
00:48:05,980 --> 00:48:11,799
actually sign the input to see if it's

1013
00:48:09,190 --> 00:48:14,530
been manipulated before it's sent right

1014
00:48:11,799 --> 00:48:16,450
you'll so check that out find out how

1015
00:48:14,530 --> 00:48:18,910
they're signing it look at the

1016
00:48:16,450 --> 00:48:22,480
client-side code to see if you can sign

1017
00:48:18,910 --> 00:48:24,308
it yourself or as with like the JW P's

1018
00:48:22,480 --> 00:48:27,309
I'm just bouncing back because the

1019
00:48:24,309 --> 00:48:30,309
screenshots are on here write a Java web

1020
00:48:27,309 --> 00:48:32,920
tokens can be signed but when you

1021
00:48:30,309 --> 00:48:36,339
specify the algorithm up at the top

1022
00:48:32,920 --> 00:48:40,869
where it says LGHS 256 if you can read

1023
00:48:36,339 --> 00:48:45,960
that um once you set it to none right so

1024
00:48:40,869 --> 00:48:48,460
you don't encrypt it or in sign it right

1025
00:48:45,960 --> 00:48:51,150
does the application accept that does

1026
00:48:48,460 --> 00:48:55,480
the application still use that token

1027
00:48:51,150 --> 00:48:57,430
correctly right um one of the examples

1028
00:48:55,480 --> 00:48:58,630
here and this is a spoiler so if you

1029
00:48:57,430 --> 00:49:01,750
don't want to hear a spoiler for juice

1030
00:48:58,630 --> 00:49:04,539
shop don't listen to this part right but

1031
00:49:01,750 --> 00:49:10,410
you can actually hit the API and what we

1032
00:49:04,539 --> 00:49:12,369
find in many api's is that they were ton

1033
00:49:10,410 --> 00:49:15,009
significantly more data than the user

1034
00:49:12,369 --> 00:49:17,680
needs in this case it's the lower

1035
00:49:15,010 --> 00:49:19,809
left-hand screenshot that's a response

1036
00:49:17,680 --> 00:49:23,440
from the authentication - details

1037
00:49:19,809 --> 00:49:27,250
function inside the user API for juice

1038
00:49:23,440 --> 00:49:31,270
shop and it actually dumps out a list of

1039
00:49:27,250 --> 00:49:34,750
all the users in the system and now

1040
00:49:31,270 --> 00:49:38,740
that's more information I need but let's

1041
00:49:34,750 --> 00:49:43,089
break it even worse it actually sends

1042
00:49:38,740 --> 00:49:46,029
you the authentication token for the

1043
00:49:43,089 --> 00:49:50,500
current user the users that are logged

1044
00:49:46,029 --> 00:49:52,480
in right and it's in a JWT so you can

1045
00:49:50,500 --> 00:49:55,420
decode it a JWT is just three pieces

1046
00:49:52,480 --> 00:49:59,289
that are base64 encoded and we all know

1047
00:49:55,420 --> 00:50:02,030
that base64 is not encryption right so

1048
00:49:59,289 --> 00:50:07,790
we pull that down we decode it

1049
00:50:02,030 --> 00:50:12,650
and we now have the hash unsalted for

1050
00:50:07,790 --> 00:50:14,330
the password for the user end in Jew

1051
00:50:12,650 --> 00:50:16,130
shop it's one user authenticate at a

1052
00:50:14,330 --> 00:50:17,660
time because it's all local but this is

1053
00:50:16,130 --> 00:50:20,060
actually something we see quite often

1054
00:50:17,660 --> 00:50:21,620
with other applications is it'll dump

1055
00:50:20,060 --> 00:50:24,009
more information than you need and

1056
00:50:21,620 --> 00:50:26,839
you'll get things like tokens and

1057
00:50:24,010 --> 00:50:30,200
credentials and hatches that you then

1058
00:50:26,840 --> 00:50:34,010
have to crack right so how do you handle

1059
00:50:30,200 --> 00:50:36,770
that now how do you find all this stuff

1060
00:50:34,010 --> 00:50:38,930
well right off the bat it use the app

1061
00:50:36,770 --> 00:50:41,810
because what we find is if you have

1062
00:50:38,930 --> 00:50:43,490
api's the api's are called by the

1063
00:50:41,810 --> 00:50:47,230
application and look for things like

1064
00:50:43,490 --> 00:50:49,640
mobile versions look for things like

1065
00:50:47,230 --> 00:50:53,270
documentation that is available for the

1066
00:50:49,640 --> 00:50:56,000
application many times look to find out

1067
00:50:53,270 --> 00:50:59,360
if the API is something built on a

1068
00:50:56,000 --> 00:51:01,040
framework or something provided to them

1069
00:50:59,360 --> 00:51:03,440
especially if you're looking at like a

1070
00:51:01,040 --> 00:51:05,690
single sign-on system that has been put

1071
00:51:03,440 --> 00:51:07,520
on top of this there's going to be API

1072
00:51:05,690 --> 00:51:10,670
is that came with the single sign-on

1073
00:51:07,520 --> 00:51:12,680
system go read the documentation see if

1074
00:51:10,670 --> 00:51:14,810
there's things they can call when we

1075
00:51:12,680 --> 00:51:18,109
work with companies one of the main

1076
00:51:14,810 --> 00:51:21,230
things that we do is that we will ask

1077
00:51:18,110 --> 00:51:24,080
for a postman collection so from your

1078
00:51:21,230 --> 00:51:27,130
developers postman is a tool that will

1079
00:51:24,080 --> 00:51:29,600
let you interact with restful api is um

1080
00:51:27,130 --> 00:51:32,090
you get a postman collection you have

1081
00:51:29,600 --> 00:51:34,990
the entire api that they've documented

1082
00:51:32,090 --> 00:51:37,520
and tested themselves right and you can

1083
00:51:34,990 --> 00:51:38,689
possibly run that through burke and we

1084
00:51:37,520 --> 00:51:40,820
make the request to burke and then we

1085
00:51:38,690 --> 00:51:43,760
have the burp inner pages to do all the

1086
00:51:40,820 --> 00:51:45,850
normal stuff that we do if you can't get

1087
00:51:43,760 --> 00:51:48,230
a postman collection swagger collections

1088
00:51:45,850 --> 00:51:50,600
documentation swagger documentation can

1089
00:51:48,230 --> 00:51:54,470
be converted to be able to be used um

1090
00:51:50,600 --> 00:51:56,350
but it's very least asked right talk to

1091
00:51:54,470 --> 00:51:59,600
them about what is available out there

1092
00:51:56,350 --> 00:52:04,160
ok finally we want to talk about the

1093
00:51:59,600 --> 00:52:08,839
client and this is just a screenshot of

1094
00:52:04,160 --> 00:52:10,759
the browser right don't lose sight of

1095
00:52:08,840 --> 00:52:13,250
the developer tools that are in your

1096
00:52:10,760 --> 00:52:15,370
browser the developer tools will let you

1097
00:52:13,250 --> 00:52:18,190
know how the

1098
00:52:15,370 --> 00:52:22,150
is rendering things what is available to

1099
00:52:18,190 --> 00:52:24,790
the client what the system uses to deal

1100
00:52:22,150 --> 00:52:29,170
with stuff right it will also give you

1101
00:52:24,790 --> 00:52:31,720
act act access sorry two things link

1102
00:52:29,170 --> 00:52:34,210
local storage you'll be able to look at

1103
00:52:31,720 --> 00:52:37,660
the full response that's coming back

1104
00:52:34,210 --> 00:52:39,220
down all within the browser so very

1105
00:52:37,660 --> 00:52:42,759
useful if you're in one of those

1106
00:52:39,220 --> 00:52:44,200
situations where hey test this will give

1107
00:52:42,760 --> 00:52:46,990
you a Citrix desktop that you have a

1108
00:52:44,200 --> 00:52:48,720
browser in and that's it okay um is that

1109
00:52:46,990 --> 00:52:54,399
good is that the right way to test no

1110
00:52:48,720 --> 00:52:57,810
it's a story okay and the last thing I

1111
00:52:54,400 --> 00:52:59,980
want to talk about is dom-based xss

1112
00:52:57,810 --> 00:53:02,230
closets with me if you've ever heard me

1113
00:52:59,980 --> 00:53:06,060
speak before if you've ever talked to me

1114
00:53:02,230 --> 00:53:07,990
you know that probably my favorite

1115
00:53:06,060 --> 00:53:10,509
vulnerability out there just cross-site

1116
00:53:07,990 --> 00:53:13,390
scripting I love attacking cross-site

1117
00:53:10,510 --> 00:53:16,090
scripting and we've forever known about

1118
00:53:13,390 --> 00:53:17,830
reflected and persistent you know I send

1119
00:53:16,090 --> 00:53:19,930
a payload up it comes back down in the

1120
00:53:17,830 --> 00:53:21,819
response that's reflected attack if I

1121
00:53:19,930 --> 00:53:23,799
send it up and it's stolen somewhere on

1122
00:53:21,820 --> 00:53:26,740
the application that's a persistent

1123
00:53:23,800 --> 00:53:29,560
attack but dom-based is very

1124
00:53:26,740 --> 00:53:32,169
misunderstood as a matter of fact what I

1125
00:53:29,560 --> 00:53:36,009
found is that a lot of the documentation

1126
00:53:32,170 --> 00:53:37,630
on dom-based xss is wrong and some of

1127
00:53:36,010 --> 00:53:42,700
the samples and examples of dom-based

1128
00:53:37,630 --> 00:53:45,670
xss or wrong dom-based xss is different

1129
00:53:42,700 --> 00:53:47,730
from normal XSS and I hate to call it

1130
00:53:45,670 --> 00:53:51,580
that but let's go with it for right now

1131
00:53:47,730 --> 00:53:53,320
insofar as every piece of the attack is

1132
00:53:51,580 --> 00:53:56,770
managed and handled and processed

1133
00:53:53,320 --> 00:53:58,840
client-side so if I make a request I get

1134
00:53:56,770 --> 00:54:01,960
a response and in that response is

1135
00:53:58,840 --> 00:54:05,410
client-side code that in a simplistic

1136
00:54:01,960 --> 00:54:07,600
example references the URL and uses it

1137
00:54:05,410 --> 00:54:12,279
on the page within the Dom or the

1138
00:54:07,600 --> 00:54:15,580
document object model I have a good

1139
00:54:12,280 --> 00:54:17,670
chance of a dom-based xss and many of

1140
00:54:15,580 --> 00:54:20,259
the libraries people will use jquery

1141
00:54:17,670 --> 00:54:22,300
angular or whatever they've had

1142
00:54:20,260 --> 00:54:24,700
dom-based xss vulnerabilities that the

1143
00:54:22,300 --> 00:54:25,750
library brings with it into your

1144
00:54:24,700 --> 00:54:27,220
application so even though your app

1145
00:54:25,750 --> 00:54:28,140
wasn't vulnerable until you use the

1146
00:54:27,220 --> 00:54:30,509
library

1147
00:54:28,140 --> 00:54:33,540
use of library added that vulnerability

1148
00:54:30,510 --> 00:54:36,330
okay and so you want to do is really

1149
00:54:33,540 --> 00:54:39,840
look at what the client-side code is

1150
00:54:36,330 --> 00:54:45,360
doing and if the client-side code holes

1151
00:54:39,840 --> 00:54:47,880
data from the client like I said could

1152
00:54:45,360 --> 00:54:51,450
be the URL could be things like local

1153
00:54:47,880 --> 00:54:54,090
storage it could be cookies things that

1154
00:54:51,450 --> 00:54:55,080
are within the client especially when

1155
00:54:54,090 --> 00:54:58,860
you start talking about mobile apps

1156
00:54:55,080 --> 00:55:01,890
right and then use those within the Dom

1157
00:54:58,860 --> 00:55:03,510
so you'll see things like dot in an HTML

1158
00:55:01,890 --> 00:55:07,770
you'll see things like document dot

1159
00:55:03,510 --> 00:55:10,020
right please don't use document and then

1160
00:55:07,770 --> 00:55:14,160
what you have to do you can't test these

1161
00:55:10,020 --> 00:55:15,930
typically with the traditional XSS

1162
00:55:14,160 --> 00:55:18,149
payloads you can't just put script alert

1163
00:55:15,930 --> 00:55:22,290
XSS clothes rip type because since it's

1164
00:55:18,150 --> 00:55:25,260
working in the Dom you have to embed

1165
00:55:22,290 --> 00:55:28,920
into where it's being used okay and so

1166
00:55:25,260 --> 00:55:30,660
lots of times that code will be pulling

1167
00:55:28,920 --> 00:55:33,360
that data out let's say from the URL and

1168
00:55:30,660 --> 00:55:36,540
then using it in a block of JavaScript

1169
00:55:33,360 --> 00:55:38,190
so you're gonna add JavaScript code to

1170
00:55:36,540 --> 00:55:40,850
that block of JavaScript and it'll

1171
00:55:38,190 --> 00:55:45,420
execute and things like that again

1172
00:55:40,850 --> 00:55:47,460
really take time look at the client-side

1173
00:55:45,420 --> 00:55:48,840
code and understand what's going on yes

1174
00:55:47,460 --> 00:55:52,010
that means you're going to be reading

1175
00:55:48,840 --> 00:55:54,090
JavaScript and for that I apologize

1176
00:55:52,010 --> 00:55:55,350
because you're gonna have to read a lot

1177
00:55:54,090 --> 00:55:57,960
of bad JavaScript

1178
00:55:55,350 --> 00:55:58,710
okay there are plugins that will help

1179
00:55:57,960 --> 00:56:02,370
you with this

1180
00:55:58,710 --> 00:56:05,220
both zap and burp will attempt to detect

1181
00:56:02,370 --> 00:56:07,650
dom-based xss my experience has been

1182
00:56:05,220 --> 00:56:09,839
both of them have a high false positive

1183
00:56:07,650 --> 00:56:11,850
rate so you're really gonna have to look

1184
00:56:09,840 --> 00:56:17,730
at what that client-side code looks like

1185
00:56:11,850 --> 00:56:19,170
okay so that is my slides I'm gonna stop

1186
00:56:17,730 --> 00:56:27,340
sharing my screen so I can start seeing

1187
00:56:19,170 --> 00:56:34,210
discord I hope and then I would say

1188
00:56:27,340 --> 00:56:36,490
I think I went over slightly um Jason's

1189
00:56:34,210 --> 00:56:38,260
made a come in and discord that Jada

1190
00:56:36,490 --> 00:56:40,029
booties can be encrypted but we rarely

1191
00:56:38,260 --> 00:56:41,380
encounter apps where they are that is

1192
00:56:40,030 --> 00:56:44,530
absolutely true

1193
00:56:41,380 --> 00:56:50,010
uh it's so sad that they can be but most

1194
00:56:44,530 --> 00:56:50,010
people don't um out there and I don't

1195
00:56:51,630 --> 00:56:58,060
so I'm looking really quick I don't see

1196
00:56:56,590 --> 00:57:00,970
any question that I need to answer right

1197
00:56:58,060 --> 00:57:02,320
this second um I'm going to say thank

1198
00:57:00,970 --> 00:57:12,819
you very much and I'm gonna turn this

1199
00:57:02,320 --> 00:57:16,630
over you and your let us know it's

1200
00:57:12,820 --> 00:57:18,910
really thank you again for coming in

1201
00:57:16,630 --> 00:57:22,720
that Shari what's it with everybody

1202
00:57:18,910 --> 00:57:24,490
really yeah they keep an eye on there in

1203
00:57:22,720 --> 00:57:25,689
fact good chance hanging out discord

1204
00:57:24,490 --> 00:57:27,729
there's plenty of folks in there I'm

1205
00:57:25,690 --> 00:57:29,770
sure there's that more than a few that

1206
00:57:27,730 --> 00:57:34,780
but I get to talk to you

1207
00:57:29,770 --> 00:57:37,320
yep oh all right well sometime soon all

1208
00:57:34,780 --> 00:57:37,320
right take care

