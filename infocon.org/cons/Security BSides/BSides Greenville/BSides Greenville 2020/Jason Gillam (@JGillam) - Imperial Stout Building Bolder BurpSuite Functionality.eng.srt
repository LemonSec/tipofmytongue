1
00:00:04,580 --> 00:00:13,549
hi everyone thanks for joining my talk

2
00:00:09,879 --> 00:00:16,970
this is my first time doing b-sides for

3
00:00:13,549 --> 00:00:18,590
Greenville I've met him several times in

4
00:00:16,970 --> 00:00:22,430
the past and it's just never really

5
00:00:18,590 --> 00:00:24,470
lined up with my schedule so I'm really

6
00:00:22,430 --> 00:00:30,140
happy to be part of this even though it

7
00:00:24,470 --> 00:00:34,489
is remote so my my talk is it's a topic

8
00:00:30,140 --> 00:00:39,430
that is very dear to me which is on on

9
00:00:34,489 --> 00:00:43,489
writing I guess open source software for

10
00:00:39,430 --> 00:00:45,019
application security purposes so kind of

11
00:00:43,489 --> 00:00:47,480
similar to the previous talk but

12
00:00:45,020 --> 00:00:49,280
different and most of what I'm gonna be

13
00:00:47,480 --> 00:00:50,690
doing here is it's really kind of a

14
00:00:49,280 --> 00:00:54,290
show-and-tell and some of the projects

15
00:00:50,690 --> 00:00:55,519
that I've worked on but I also want to

16
00:00:54,290 --> 00:00:57,410
get into a little bit of technical

17
00:00:55,520 --> 00:01:02,510
details in case people are interested in

18
00:00:57,410 --> 00:01:06,048
doing some of their own and yeah so

19
00:01:02,510 --> 00:01:08,829
that's basically it so it's about burp

20
00:01:06,049 --> 00:01:12,770
suite and but let me let me get into

21
00:01:08,829 --> 00:01:15,189
first of all my bio I am my name is

22
00:01:12,770 --> 00:01:18,590
Jason go home I wear many many hats

23
00:01:15,189 --> 00:01:21,079
sometimes far too many so a security

24
00:01:18,590 --> 00:01:23,810
consulting I do I was teaching a class

25
00:01:21,079 --> 00:01:26,149
this week on application security I also

26
00:01:23,810 --> 00:01:30,590
do software development you know so a

27
00:01:26,149 --> 00:01:34,369
bunch of stuff and and I love

28
00:01:30,590 --> 00:01:35,840
application security so i although i do

29
00:01:34,369 --> 00:01:38,029
pen testing and you know various

30
00:01:35,840 --> 00:01:40,340
different aspects of that application

31
00:01:38,029 --> 00:01:44,959
security is kind of where where i'm

32
00:01:40,340 --> 00:01:48,799
really feel comfortable so you know i've

33
00:01:44,959 --> 00:01:50,959
I'm an OS lifetime member I'm a regular

34
00:01:48,799 --> 00:01:53,060
at other B sides this is like I said

35
00:01:50,959 --> 00:01:54,619
this is my first time here but for those

36
00:01:53,060 --> 00:01:56,090
who know me you've probably seen me

37
00:01:54,619 --> 00:01:59,029
before it be sighs Asheville or

38
00:01:56,090 --> 00:02:01,399
Charleston or Charlotte you know I've

39
00:01:59,029 --> 00:02:04,219
worked with Shaha a lot in the past as

40
00:02:01,399 --> 00:02:07,219
well I've been programming for a really

41
00:02:04,219 --> 00:02:09,079
long time hate to admit it but yeah my

42
00:02:07,219 --> 00:02:10,788
first computer was a Commodore vic-20 it

43
00:02:09,080 --> 00:02:13,550
is the one that's actually on this slide

44
00:02:10,788 --> 00:02:17,059
I saved up all my money when I was

45
00:02:13,550 --> 00:02:18,319
mowing lawns as a teenager and when I

46
00:02:17,060 --> 00:02:19,790
bought a computer

47
00:02:18,319 --> 00:02:21,589
which was pretty awesome and I started

48
00:02:19,790 --> 00:02:23,439
programming on it mostly how the kids

49
00:02:21,590 --> 00:02:27,890
were playing games on it I was I started

50
00:02:23,439 --> 00:02:31,459
tinkering with it and in my spare time

51
00:02:27,890 --> 00:02:33,679
when I get a little bit now and then I

52
00:02:31,459 --> 00:02:37,370
really like craft beer enough that I

53
00:02:33,680 --> 00:02:40,220
actually brew some of my own so the

54
00:02:37,370 --> 00:02:41,629
picture on here is is one from it's

55
00:02:40,220 --> 00:02:45,379
actually from a couple years ago but

56
00:02:41,629 --> 00:02:47,120
it's a it's a stout that was dry hopped

57
00:02:45,379 --> 00:02:51,370
so that's what all that all the Hawks

58
00:02:47,120 --> 00:02:53,659
are on top there's that's dry humping so

59
00:02:51,370 --> 00:02:55,870
before I get into this I know that my

60
00:02:53,659 --> 00:02:58,340
talk is gonna be around burp suite

61
00:02:55,870 --> 00:03:00,439
extensions and burp suite itself is a

62
00:02:58,340 --> 00:03:02,900
commercial tool but I wanted to take a

63
00:03:00,439 --> 00:03:04,510
minute to acknowledge all of the open

64
00:03:02,900 --> 00:03:09,069
source tools that are out there because

65
00:03:04,510 --> 00:03:13,159
we as information security professionals

66
00:03:09,069 --> 00:03:16,040
we rely very very heavily on open source

67
00:03:13,159 --> 00:03:17,480
tooling the last whole presentation I

68
00:03:16,040 --> 00:03:19,970
think everything in there all the

69
00:03:17,480 --> 00:03:23,478
PowerShell stuff I think everything in

70
00:03:19,970 --> 00:03:26,449
there was all open-source tools a lot of

71
00:03:23,479 --> 00:03:29,269
it extendable and there's a here's a

72
00:03:26,449 --> 00:03:32,180
bunch that are probably familiar to to

73
00:03:29,269 --> 00:03:33,829
anybody's in InfoSec you should be

74
00:03:32,180 --> 00:03:36,799
familiar to at least some of the ones on

75
00:03:33,829 --> 00:03:39,260
here on this screen here especially on

76
00:03:36,799 --> 00:03:43,099
the red team side there's I know more

77
00:03:39,260 --> 00:03:44,929
tools open source to tools evolving on

78
00:03:43,099 --> 00:03:48,108
the blue team side or have been over the

79
00:03:44,930 --> 00:03:50,060
last several years but on the if you're

80
00:03:48,109 --> 00:03:52,729
looking like from the from the attacker

81
00:03:50,060 --> 00:03:56,090
perspective almost everything's always

82
00:03:52,729 --> 00:03:59,180
been open source so we rely very very

83
00:03:56,090 --> 00:04:00,979
heavily on that I want to throw a couple

84
00:03:59,180 --> 00:04:03,019
names out there in case you haven't seen

85
00:04:00,979 --> 00:04:05,540
the names before okay so these aren't

86
00:04:03,019 --> 00:04:07,659
the only people who do open source info

87
00:04:05,540 --> 00:04:11,689
type projects but here's a bunch of them

88
00:04:07,659 --> 00:04:13,548
so thanks all to all of these find

89
00:04:11,689 --> 00:04:16,880
people for all of their contributions

90
00:04:13,549 --> 00:04:19,880
over time it's been really great to be

91
00:04:16,880 --> 00:04:22,120
able to do our job on your shoulders so

92
00:04:19,880 --> 00:04:26,330
very thankful for that

93
00:04:22,120 --> 00:04:29,690
now to get into what I want to talk

94
00:04:26,330 --> 00:04:31,300
about so so for those of you who have

95
00:04:29,690 --> 00:04:33,140
done

96
00:04:31,300 --> 00:04:35,780
pentesting before you should already

97
00:04:33,140 --> 00:04:37,940
know about burbs sweet it's it's the

98
00:04:35,780 --> 00:04:41,710
it's an interception proxy it's the only

99
00:04:37,940 --> 00:04:43,910
real commercial commercially available

100
00:04:41,710 --> 00:04:47,620
proxy and there is a free version you'll

101
00:04:43,910 --> 00:04:50,870
find it in cali and other places but

102
00:04:47,620 --> 00:04:52,550
it's written for those who are it so

103
00:04:50,870 --> 00:04:56,690
this is this is one of the main tools

104
00:04:52,550 --> 00:04:57,890
that we use aside from the browser which

105
00:04:56,690 --> 00:04:59,350
you know you're going to need a browser

106
00:04:57,890 --> 00:05:02,120
when you're talking to web applications

107
00:04:59,350 --> 00:05:03,560
aside from the browser the interception

108
00:05:02,120 --> 00:05:05,540
proxy is the thing that you're going to

109
00:05:03,560 --> 00:05:10,010
use most there are there's more than one

110
00:05:05,540 --> 00:05:14,870
there's a open source version wasp zap

111
00:05:10,010 --> 00:05:16,430
is extremely popular as well but as far

112
00:05:14,870 --> 00:05:20,210
as commercially supportive ones its

113
00:05:16,430 --> 00:05:23,000
birth suite and the reason why why i use

114
00:05:20,210 --> 00:05:30,080
it i just prefer the tooling in it overs

115
00:05:23,000 --> 00:05:32,120
out and and i basically the company I

116
00:05:30,080 --> 00:05:34,430
work for we standardized on this is what

117
00:05:32,120 --> 00:05:36,380
we use so it's for man in the middling

118
00:05:34,430 --> 00:05:37,910
your own traffic so you're gonna be

119
00:05:36,380 --> 00:05:41,600
taking you know whenever you make a web

120
00:05:37,910 --> 00:05:43,010
request it goes through that proxy goes

121
00:05:41,600 --> 00:05:45,410
to the server and then the response

122
00:05:43,010 --> 00:05:48,050
comes back through the proxy and then to

123
00:05:45,410 --> 00:05:51,080
your browser and so in your proxy you

124
00:05:48,050 --> 00:05:52,850
can get a history of everything that's

125
00:05:51,080 --> 00:05:54,680
gone on and then you can also do things

126
00:05:52,850 --> 00:05:56,750
like take one of those requests and then

127
00:05:54,680 --> 00:05:58,400
rerun it and make some changes to it and

128
00:05:56,750 --> 00:06:03,800
build fuzzing tools around it and that

129
00:05:58,400 --> 00:06:05,299
sort of thing so what I when I the I

130
00:06:03,800 --> 00:06:09,760
guess the essence of what I want to dig

131
00:06:05,300 --> 00:06:13,040
into here is the fact that Burke has a

132
00:06:09,760 --> 00:06:14,930
an API you can you can extend it to do

133
00:06:13,040 --> 00:06:17,660
more things so birth extender allows you

134
00:06:14,930 --> 00:06:18,740
to do that it's actually a very rich API

135
00:06:17,660 --> 00:06:20,840
I'll get into some of that functionality

136
00:06:18,740 --> 00:06:23,180
in just a second

137
00:06:20,840 --> 00:06:24,770
in in terms of like there's a lot of

138
00:06:23,180 --> 00:06:27,800
hooks in there you can hook into a lot

139
00:06:24,770 --> 00:06:32,000
of different parts of what it does it

140
00:06:27,800 --> 00:06:34,280
works with Java Python and Ruby so if

141
00:06:32,000 --> 00:06:36,710
you are have any sort of programming

142
00:06:34,280 --> 00:06:38,650
experience in any of those languages you

143
00:06:36,710 --> 00:06:43,310
probably have the skills to extend verb

144
00:06:38,650 --> 00:06:44,479
now that being said I will add a caveat

145
00:06:43,310 --> 00:06:47,779
in there

146
00:06:44,479 --> 00:06:50,449
burp itself is a java application right

147
00:06:47,779 --> 00:06:53,089
so if you're going to extend it and you

148
00:06:50,449 --> 00:06:54,520
have expertise at all in Java then that

149
00:06:53,089 --> 00:06:56,990
is probably the language you want to use

150
00:06:54,520 --> 00:07:00,139
even ports figure that the makers of

151
00:06:56,990 --> 00:07:02,569
burb burb suite they're gonna tell you

152
00:07:00,139 --> 00:07:04,939
that hey you know although all of these

153
00:07:02,569 --> 00:07:06,770
are supported python is actually

154
00:07:04,939 --> 00:07:09,650
supported through JSON and Ruby is

155
00:07:06,770 --> 00:07:12,919
supported through JRuby which are

156
00:07:09,650 --> 00:07:16,279
basically Java wrappers around those so

157
00:07:12,919 --> 00:07:19,159
from from a you know memory management

158
00:07:16,279 --> 00:07:22,689
and program efficiency perspective it's

159
00:07:19,159 --> 00:07:25,400
better to write an extension in Java

160
00:07:22,689 --> 00:07:28,009
because it's a lot easier inside Java to

161
00:07:25,400 --> 00:07:30,589
just you know load some more classes

162
00:07:28,009 --> 00:07:34,270
into the class loader than it is to like

163
00:07:30,589 --> 00:07:38,199
load up an entire Python or Ruby

164
00:07:34,270 --> 00:07:41,919
interpreter so and the other thing is is

165
00:07:38,199 --> 00:07:44,960
the way that it loads those it basically

166
00:07:41,919 --> 00:07:46,729
you can only you can only really run one

167
00:07:44,960 --> 00:07:48,859
or two extensions that are Python or

168
00:07:46,729 --> 00:07:50,300
Ruby at a time whereas the Java

169
00:07:48,860 --> 00:07:52,729
extensions you can actually load up

170
00:07:50,300 --> 00:07:56,139
quite a few without having a significant

171
00:07:52,729 --> 00:08:00,139
impact on the the memory footprint so

172
00:07:56,139 --> 00:08:02,469
alright so that's that part so how does

173
00:08:00,139 --> 00:08:06,560
this work how do we actually build these

174
00:08:02,469 --> 00:08:08,719
so what you do is is part of the API

175
00:08:06,560 --> 00:08:10,459
I'll show it to you in a moment I'll get

176
00:08:08,719 --> 00:08:13,998
into some some demos I just have a few

177
00:08:10,459 --> 00:08:16,729
slides to go through first but the the

178
00:08:13,999 --> 00:08:19,129
extender I burp extender is the sort of

179
00:08:16,729 --> 00:08:20,508
the main interface so it's all it's all

180
00:08:19,129 --> 00:08:22,969
set of interfaces for those familiar

181
00:08:20,509 --> 00:08:28,899
with Java it's just a set of interfaces

182
00:08:22,969 --> 00:08:31,639
that you implement so burp extender is

183
00:08:28,899 --> 00:08:33,260
it has just one method on it which is

184
00:08:31,639 --> 00:08:35,389
register extender callbacks

185
00:08:33,260 --> 00:08:39,669
so you basically implement high burp

186
00:08:35,389 --> 00:08:42,620
extender and then you you you do a

187
00:08:39,669 --> 00:08:44,779
basically implement that regice regice

188
00:08:42,620 --> 00:08:47,180
tur extender callbacks take that

189
00:08:44,779 --> 00:08:50,060
callbacks object and then from there

190
00:08:47,180 --> 00:08:52,160
that's where you can call into that to

191
00:08:50,060 --> 00:08:53,989
to get to hook into the various

192
00:08:52,160 --> 00:08:56,779
different aspects of birth and what can

193
00:08:53,990 --> 00:08:58,250
you do with that there's a bunch of very

194
00:08:56,779 --> 00:09:02,120
useful cool things

195
00:08:58,250 --> 00:09:05,060
so one of these is one of the common

196
00:09:02,120 --> 00:09:06,980
ones is the h IH TP listener and I proxy

197
00:09:05,060 --> 00:09:10,150
listener which basically let you hook

198
00:09:06,980 --> 00:09:12,980
into all of the burp history so you can

199
00:09:10,150 --> 00:09:14,810
on-the-fly examine requests and

200
00:09:12,980 --> 00:09:18,080
responses and even make some changes to

201
00:09:14,810 --> 00:09:20,180
them which is really cool so a lot of

202
00:09:18,080 --> 00:09:22,130
the stuff that burp inherently has in it

203
00:09:20,180 --> 00:09:23,930
you can extend that sort of

204
00:09:22,130 --> 00:09:25,640
functionality inside like for the proxy

205
00:09:23,930 --> 00:09:28,969
history and make your own changes to

206
00:09:25,640 --> 00:09:31,580
things which which can can be very good

207
00:09:28,970 --> 00:09:35,720
for you know certain types of scenarios

208
00:09:31,580 --> 00:09:38,180
there's also a pairing here of I of the

209
00:09:35,720 --> 00:09:42,110
intruder payload generator an intruder

210
00:09:38,180 --> 00:09:44,000
payload processor so both of these work

211
00:09:42,110 --> 00:09:47,960
around intruder which is the fuzzing

212
00:09:44,000 --> 00:09:51,500
tool inside of burp and they let you you

213
00:09:47,960 --> 00:09:54,740
can generate your own dynamic fuzzing

214
00:09:51,500 --> 00:09:56,690
payloads with the generator or you can

215
00:09:54,740 --> 00:09:58,850
process existing payloads with the

216
00:09:56,690 --> 00:10:00,830
payload processor I'm gonna actually

217
00:09:58,850 --> 00:10:06,290
show you one of these in a couple

218
00:10:00,830 --> 00:10:08,420
minutes so and beyond that you have the

219
00:10:06,290 --> 00:10:10,969
ability to plug into where the were the

220
00:10:08,420 --> 00:10:12,800
issues shown so in that I guess that's

221
00:10:10,970 --> 00:10:17,050
in the dashboard now right because it's

222
00:10:12,800 --> 00:10:20,030
all changed from where it used to be so

223
00:10:17,050 --> 00:10:21,740
you can let's let's say you you can you

224
00:10:20,030 --> 00:10:24,170
build an extension that is able to

225
00:10:21,740 --> 00:10:27,500
detect type of vulnerability that the

226
00:10:24,170 --> 00:10:30,500
burp suite doesn't natively tech find

227
00:10:27,500 --> 00:10:33,170
you can have use the scan issue

228
00:10:30,500 --> 00:10:35,420
interface to add your own issues in

229
00:10:33,170 --> 00:10:36,589
there right so then they show up in the

230
00:10:35,420 --> 00:10:39,079
dashboard along with everything else

231
00:10:36,590 --> 00:10:40,340
which is kind of cool you can also as

232
00:10:39,080 --> 00:10:42,110
you've probably seen if you've used any

233
00:10:40,340 --> 00:10:44,090
extensions before a lot of them have

234
00:10:42,110 --> 00:10:45,830
user interfaces they have like extra

235
00:10:44,090 --> 00:10:49,540
tabs that show up on there so there's

236
00:10:45,830 --> 00:10:53,090
this whole mechanism for building those

237
00:10:49,540 --> 00:10:56,900
now if you're building a UI inside of

238
00:10:53,090 --> 00:10:59,300
burp verb for an extension I recommend

239
00:10:56,900 --> 00:11:04,069
that you go down the path of using

240
00:10:59,300 --> 00:11:07,400
IntelliJ for that for your IDE that is

241
00:11:04,070 --> 00:11:10,550
what ports Twitter already uses I talked

242
00:11:07,400 --> 00:11:12,079
to them about this so like building

243
00:11:10,550 --> 00:11:13,939
building a new

244
00:11:12,080 --> 00:11:15,950
tab sort of interface around there is

245
00:11:13,940 --> 00:11:17,360
really not that hard it's kind of a

246
00:11:15,950 --> 00:11:19,100
drag-and-drop sort of thing when you

247
00:11:17,360 --> 00:11:21,920
when you're using that and then you can

248
00:11:19,100 --> 00:11:23,960
plug that in through the tab text editor

249
00:11:21,920 --> 00:11:25,610
message editor extensions there's others

250
00:11:23,960 --> 00:11:27,470
too these are just this is just a

251
00:11:25,610 --> 00:11:29,150
sampling of what's there and then

252
00:11:27,470 --> 00:11:31,250
there's a whole like if you have custom

253
00:11:29,150 --> 00:11:33,230
session management maybe some special

254
00:11:31,250 --> 00:11:35,270
type of token or something like that or

255
00:11:33,230 --> 00:11:36,770
something that needs to be handled you

256
00:11:35,270 --> 00:11:38,449
can actually build custom functionality

257
00:11:36,770 --> 00:11:41,510
around there if it's again if this is

258
00:11:38,450 --> 00:11:49,760
for cases where it falls outside of the

259
00:11:41,510 --> 00:11:54,350
norm okay so that's it for that's

260
00:11:49,760 --> 00:11:56,630
actually pretty much it for slides so

261
00:11:54,350 --> 00:12:03,140
I'm going to hopefully everyone can see

262
00:11:56,630 --> 00:12:09,740
this I am going to show I'm gonna drag

263
00:12:03,140 --> 00:12:11,319
that off there we go okay so this is

264
00:12:09,740 --> 00:12:13,850
burp suite this is what it looks like

265
00:12:11,320 --> 00:12:16,670
you know this is the pro version there

266
00:12:13,850 --> 00:12:18,440
is a community edition which has some of

267
00:12:16,670 --> 00:12:21,860
the features to say but like most of the

268
00:12:18,440 --> 00:12:23,330
automation is disabled the extender API

269
00:12:21,860 --> 00:12:25,940
is actually still available in the

270
00:12:23,330 --> 00:12:27,710
community edition as well so there are a

271
00:12:25,940 --> 00:12:29,960
lot of extensions that will work without

272
00:12:27,710 --> 00:12:34,040
you having to put any money down on it

273
00:12:29,960 --> 00:12:35,660
which is which is kind of nice so we

274
00:12:34,040 --> 00:12:37,969
have on here I'm just going to run

275
00:12:35,660 --> 00:12:39,410
through this very quickly just a couple

276
00:12:37,970 --> 00:12:41,570
of these tabs because they're important

277
00:12:39,410 --> 00:12:44,449
or what I'm going to show after so we

278
00:12:41,570 --> 00:12:46,520
have the the target what's really

279
00:12:44,450 --> 00:12:50,480
important here for what I'm working on

280
00:12:46,520 --> 00:12:52,970
today is the the scope tab so I have I

281
00:12:50,480 --> 00:12:54,950
have a little silly little application

282
00:12:52,970 --> 00:13:00,200
that I've built just for demonstration

283
00:12:54,950 --> 00:13:02,150
purposes and it's it's it's white listed

284
00:13:00,200 --> 00:13:05,330
here in the target scope and that will

285
00:13:02,150 --> 00:13:11,360
come into play a little bit later I have

286
00:13:05,330 --> 00:13:13,100
a proxy the proxy history tab is the

287
00:13:11,360 --> 00:13:14,840
next one right so under proxy there's

288
00:13:13,100 --> 00:13:17,150
the the history we can see that I've

289
00:13:14,840 --> 00:13:21,410
visited exactly one location at this

290
00:13:17,150 --> 00:13:24,800
point in time so I have a browser set up

291
00:13:21,410 --> 00:13:25,280
here with like let's say I just I'll

292
00:13:24,800 --> 00:13:27,589
just

293
00:13:25,280 --> 00:13:29,209
to professional evil calm here so we can

294
00:13:27,590 --> 00:13:32,630
see that as well

295
00:13:29,210 --> 00:13:35,330
oops and now you can see house you know

296
00:13:32,630 --> 00:13:36,380
some more resources have been loaded you

297
00:13:35,330 --> 00:13:37,610
know again if you've done a bunch of

298
00:13:36,380 --> 00:13:42,800
applications security of seeing this

299
00:13:37,610 --> 00:13:46,700
before and then we have intruder this is

300
00:13:42,800 --> 00:13:48,500
our fuzzing tool right so if we have a

301
00:13:46,700 --> 00:13:50,900
request and we want to send that request

302
00:13:48,500 --> 00:13:52,820
multiple times to the server but well

303
00:13:50,900 --> 00:13:54,590
swap out different values like we're

304
00:13:52,820 --> 00:13:57,170
using a list of payloads and we're going

305
00:13:54,590 --> 00:13:58,820
to try you know a list of username

306
00:13:57,170 --> 00:14:02,000
password combinations or something like

307
00:13:58,820 --> 00:14:03,260
that as an example you can use this it's

308
00:14:02,000 --> 00:14:06,260
sort of a mail merge type of

309
00:14:03,260 --> 00:14:09,410
functionality repeater allows you you

310
00:14:06,260 --> 00:14:11,900
can take a request put it into a

311
00:14:09,410 --> 00:14:14,449
repeater and then send that request to

312
00:14:11,900 --> 00:14:15,500
the server multiple times so so far what

313
00:14:14,450 --> 00:14:17,180
I've talked about this is all the

314
00:14:15,500 --> 00:14:19,580
built-in functionality inside of burp

315
00:14:17,180 --> 00:14:22,219
suite and some of that functionality

316
00:14:19,580 --> 00:14:29,870
we'll look at extending in just a second

317
00:14:22,220 --> 00:14:31,370
here okay so extender extender has this

318
00:14:29,870 --> 00:14:35,660
is where the burp extensions get loaded

319
00:14:31,370 --> 00:14:37,760
you can actually load you can bundle up

320
00:14:35,660 --> 00:14:39,410
an extension into a jar file and just

321
00:14:37,760 --> 00:14:40,580
load it directly here which is what

322
00:14:39,410 --> 00:14:43,040
you're gonna do if you're you're

323
00:14:40,580 --> 00:14:45,589
developing one if you're working on it

324
00:14:43,040 --> 00:14:47,089
locally one really nice thing about the

325
00:14:45,589 --> 00:14:48,680
way that they do their class loading on

326
00:14:47,089 --> 00:14:53,350
there is I can take like this nonce

327
00:14:48,680 --> 00:14:59,030
payloader for example I can unselect it

328
00:14:53,350 --> 00:15:03,500
ok now I can go to my my source code on

329
00:14:59,030 --> 00:15:05,600
here recompile and then once that's

330
00:15:03,500 --> 00:15:07,550
recompiled I can then just click this

331
00:15:05,600 --> 00:15:09,710
box again so I don't have to actually

332
00:15:07,550 --> 00:15:11,900
delete it and then bring it back in I

333
00:15:09,710 --> 00:15:15,500
just click the box again and now it will

334
00:15:11,900 --> 00:15:17,319
reload from the whatever version of the

335
00:15:15,500 --> 00:15:23,630
jar file was produced from my ID right

336
00:15:17,320 --> 00:15:25,430
so it has a fairly tight development

337
00:15:23,630 --> 00:15:26,510
cycle on there which is but you know one

338
00:15:25,430 --> 00:15:28,310
of the things that I aim for I don't

339
00:15:26,510 --> 00:15:29,689
like to have like some lengthy you press

340
00:15:28,310 --> 00:15:31,069
a button you have to wait half an hour

341
00:15:29,690 --> 00:15:34,130
before you can actually use something

342
00:15:31,070 --> 00:15:36,350
again or go through you know 30 or 40

343
00:15:34,130 --> 00:15:37,850
different steps to make it work so this

344
00:15:36,350 --> 00:15:38,600
is just a couple of steps it's not too

345
00:15:37,850 --> 00:15:42,019
bad I can mix

346
00:15:38,600 --> 00:15:43,730
changes in the source code bundle up in

347
00:15:42,019 --> 00:15:45,889
another jar file which just takes a

348
00:15:43,730 --> 00:15:49,490
couple seconds and then load it back in

349
00:15:45,889 --> 00:15:53,750
very quickly and then try it out some of

350
00:15:49,490 --> 00:15:55,730
them will have their own tabs so oh wait

351
00:15:53,750 --> 00:15:58,269
hang on before I get to that there's

352
00:15:55,730 --> 00:16:00,829
also the bap store I'm here this is a

353
00:15:58,269 --> 00:16:03,709
definitely worth looking at here so the

354
00:16:00,829 --> 00:16:05,239
BAP store you can see that and it's

355
00:16:03,709 --> 00:16:07,489
although it says store all of these are

356
00:16:05,240 --> 00:16:10,880
free I should point that out too

357
00:16:07,490 --> 00:16:12,649
but it is these are many of the

358
00:16:10,880 --> 00:16:13,910
extensions they're not all of them that

359
00:16:12,649 --> 00:16:17,529
are out there but these are many of the

360
00:16:13,910 --> 00:16:21,519
extensions that have been produced

361
00:16:17,529 --> 00:16:23,990
everything in here is open source and

362
00:16:21,519 --> 00:16:25,639
they all extend the functionality of

363
00:16:23,990 --> 00:16:28,370
burp in a variety of different ways

364
00:16:25,639 --> 00:16:29,329
there's also like a rating system on

365
00:16:28,370 --> 00:16:32,240
there and that sort of thing which is

366
00:16:29,329 --> 00:16:34,370
kind of cool so lots of different things

367
00:16:32,240 --> 00:16:36,050
in there so if you if you're using if

368
00:16:34,370 --> 00:16:38,329
you're doing a web app pen test and

369
00:16:36,050 --> 00:16:39,859
you're using burp and there's you run

370
00:16:38,329 --> 00:16:41,719
into some scenario where you're like oh

371
00:16:39,860 --> 00:16:42,949
man I wish I could see this information

372
00:16:41,720 --> 00:16:44,779
a little differently or a little better

373
00:16:42,949 --> 00:16:46,609
or if I had a you know a little extra

374
00:16:44,779 --> 00:16:48,529
tool to do something before you start

375
00:16:46,610 --> 00:16:50,329
writing one go check and see if somebody

376
00:16:48,529 --> 00:16:52,759
else already did because there's there's

377
00:16:50,329 --> 00:16:55,790
a lot of stuff already out there which

378
00:16:52,759 --> 00:16:58,189
is you know pretty cool there's also the

379
00:16:55,790 --> 00:17:01,490
API tab on here and if you're you're

380
00:16:58,189 --> 00:17:03,520
building if you're building against

381
00:17:01,490 --> 00:17:06,169
Burks so you're making your own

382
00:17:03,520 --> 00:17:07,579
extension you'll need to save these

383
00:17:06,169 --> 00:17:09,530
interface files that's what this button

384
00:17:07,579 --> 00:17:11,178
is for down down here right so that

385
00:17:09,530 --> 00:17:12,829
saves the interface files off that way

386
00:17:11,179 --> 00:17:21,679
you can compile against them

387
00:17:12,829 --> 00:17:25,668
so you'll need that ok so let's look at

388
00:17:21,679 --> 00:17:28,189
an extension so I'm gonna look at co2

389
00:17:25,669 --> 00:17:30,830
first which is an oldie but a goodie and

390
00:17:28,189 --> 00:17:33,230
the reason I bring this one up is is as

391
00:17:30,830 --> 00:17:34,970
time went on when I when I first started

392
00:17:33,230 --> 00:17:38,740
in application security and and

393
00:17:34,970 --> 00:17:41,690
discovered burp and how awesome it was I

394
00:17:38,740 --> 00:17:42,679
I started building extensions when I

395
00:17:41,690 --> 00:17:47,870
needed them for various different

396
00:17:42,679 --> 00:17:49,130
purposes and eventually after you know I

397
00:17:47,870 --> 00:17:50,418
don't know a year a year and a half of

398
00:17:49,130 --> 00:17:51,740
doing that I'm like you know I really

399
00:17:50,419 --> 00:17:52,370
need some way to keep all of these

400
00:17:51,740 --> 00:17:53,450
together

401
00:17:52,370 --> 00:17:56,840
cuz a lot of other people want to use

402
00:17:53,450 --> 00:18:00,290
them and so I I bundled them all

403
00:17:56,840 --> 00:18:02,120
together into what I call co2 and co2 is

404
00:18:00,290 --> 00:18:05,000
a reference back to my home brewing it's

405
00:18:02,120 --> 00:18:06,620
you know carbon dioxide which is also

406
00:18:05,000 --> 00:18:08,450
happens to be the gas that makes you

407
00:18:06,620 --> 00:18:14,389
burp when you drink too much beer

408
00:18:08,450 --> 00:18:17,540
so the I'll just run through a little

409
00:18:14,390 --> 00:18:20,780
bit of functionality here quickly so we

410
00:18:17,540 --> 00:18:25,070
have a sequel mapper so if you've used

411
00:18:20,780 --> 00:18:27,410
sequel map before or if you haven't one

412
00:18:25,070 --> 00:18:31,010
thing that you'll notice when you do

413
00:18:27,410 --> 00:18:33,440
sequel map - even - H on there but

414
00:18:31,010 --> 00:18:36,890
there's also a - page for super help um

415
00:18:33,440 --> 00:18:39,290
it has many many many different options

416
00:18:36,890 --> 00:18:41,330
on there and so I found for me I was

417
00:18:39,290 --> 00:18:42,800
always having trouble remembering you

418
00:18:41,330 --> 00:18:47,210
know which option do I use for what

419
00:18:42,800 --> 00:18:49,220
which switch to use and then also stuff

420
00:18:47,210 --> 00:18:51,950
like like where do I put where what do I

421
00:18:49,220 --> 00:18:53,330
need to double quote or where do a

422
00:18:51,950 --> 00:18:55,100
single quote you know just trying to

423
00:18:53,330 --> 00:18:58,610
figure out all of that because it's a

424
00:18:55,100 --> 00:19:00,709
command-line tool right so I made this

425
00:18:58,610 --> 00:19:04,040
thing here in which you can do with this

426
00:19:00,710 --> 00:19:06,650
is you can take any request out of your

427
00:19:04,040 --> 00:19:09,139
history here so I'm just gonna I'm just

428
00:19:06,650 --> 00:19:11,690
going to take this one here and then you

429
00:19:09,140 --> 00:19:13,340
you send it - this is actually it also

430
00:19:11,690 --> 00:19:14,900
demonstrates one of the other things you

431
00:19:13,340 --> 00:19:17,659
can hook into you can hook into this

432
00:19:14,900 --> 00:19:20,330
context menu which is really helpful so

433
00:19:17,660 --> 00:19:22,520
I can send this to sequel mapper and

434
00:19:20,330 --> 00:19:26,419
then that opens that up inside a co2 and

435
00:19:22,520 --> 00:19:30,470
now you can see the command has been

436
00:19:26,420 --> 00:19:32,960
basically built for you which this one

437
00:19:30,470 --> 00:19:33,230
has a ton of cookies in it but there we

438
00:19:32,960 --> 00:19:36,590
go

439
00:19:33,230 --> 00:19:38,929
okay so so now I can right click copy

440
00:19:36,590 --> 00:19:40,909
that line and then go into sequel map

441
00:19:38,929 --> 00:19:43,130
and basically just from the command line

442
00:19:40,910 --> 00:19:46,190
sequel map space and then just paste my

443
00:19:43,130 --> 00:19:49,520
line in there it it properly quotes

444
00:19:46,190 --> 00:19:51,290
everything if you like need to let's say

445
00:19:49,520 --> 00:19:55,160
not put the cookies in you can unselect

446
00:19:51,290 --> 00:19:56,899
that all of the functionality or most of

447
00:19:55,160 --> 00:19:59,240
it anyway because as it evolves and it's

448
00:19:56,900 --> 00:20:05,200
hard to keep up with but most of the

449
00:19:59,240 --> 00:20:07,120
functionality is is in it's been mapped

450
00:20:05,200 --> 00:20:09,580
from from sequel map has been mapped

451
00:20:07,120 --> 00:20:11,649
into the user interface here so it

452
00:20:09,580 --> 00:20:14,080
allows you to dynamically build that

453
00:20:11,649 --> 00:20:15,610
command so for example like let's say

454
00:20:14,080 --> 00:20:16,629
you go into text techniques you're like

455
00:20:15,610 --> 00:20:18,129
you know I don't want to do the

456
00:20:16,630 --> 00:20:20,230
time-based blind that just takes too

457
00:20:18,130 --> 00:20:22,179
long you can click that and then it'll

458
00:20:20,230 --> 00:20:24,490
automatically put that technique equals

459
00:20:22,179 --> 00:20:26,649
BS quue now how many people knew that

460
00:20:24,490 --> 00:20:27,850
off the top of their head probably not

461
00:20:26,649 --> 00:20:29,350
that many right it's one of those things

462
00:20:27,850 --> 00:20:31,449
I got to go researching the dogs and

463
00:20:29,350 --> 00:20:33,158
figure it out which is fine but you know

464
00:20:31,450 --> 00:20:35,350
I'd rather I'd rather just quickly do

465
00:20:33,159 --> 00:20:37,330
this and then I can right-click and copy

466
00:20:35,350 --> 00:20:40,269
that and then wait and go on my merry

467
00:20:37,330 --> 00:20:43,360
way which is you know makes this a whole

468
00:20:40,269 --> 00:20:44,980
lot easier there is this auto run thing

469
00:20:43,360 --> 00:20:46,750
in here I actually don't use that I put

470
00:20:44,980 --> 00:20:48,130
that in there because I had several

471
00:20:46,750 --> 00:20:49,840
people ask you know is there a way to

472
00:20:48,130 --> 00:20:51,429
run single map directly from within

473
00:20:49,840 --> 00:20:53,500
there and it's like you know but I

474
00:20:51,429 --> 00:20:55,210
actually use it from the command line so

475
00:20:53,500 --> 00:20:56,980
I'll run a command and then I'll up

476
00:20:55,210 --> 00:20:58,929
arrow and then tinker with it a little

477
00:20:56,980 --> 00:21:01,059
bit and then you know run it again that

478
00:20:58,929 --> 00:21:04,990
sort of thing so I actually don't use

479
00:21:01,059 --> 00:21:08,559
the run directly out of here but I know

480
00:21:04,990 --> 00:21:11,710
some people do ok a couple other things

481
00:21:08,559 --> 00:21:13,720
right quick so laudanum

482
00:21:11,710 --> 00:21:16,260
I will admit this particular tab does

483
00:21:13,720 --> 00:21:20,139
not work right now so laudanum is a

484
00:21:16,260 --> 00:21:22,720
project it has worked in the past it's

485
00:21:20,139 --> 00:21:24,699
basically it's for for web shells right

486
00:21:22,720 --> 00:21:27,940
so when you find somewhere to get a

487
00:21:24,700 --> 00:21:29,320
shell onto a web application this would

488
00:21:27,940 --> 00:21:31,450
be the type of file that you want to get

489
00:21:29,320 --> 00:21:34,840
on there now laudanum the project itself

490
00:21:31,450 --> 00:21:36,610
is an older shell and what I was aiming

491
00:21:34,840 --> 00:21:39,158
for with this is I wanted to be able to

492
00:21:36,610 --> 00:21:41,678
dynamically build one that had some

493
00:21:39,159 --> 00:21:47,110
security features in it but also gave

494
00:21:41,679 --> 00:21:50,139
you more of a like using basically using

495
00:21:47,110 --> 00:21:52,299
Ajax requests gave you the feel of a

496
00:21:50,139 --> 00:21:53,678
real terminal right so you you have a

497
00:21:52,299 --> 00:21:55,570
prompt on there you could type something

498
00:21:53,679 --> 00:21:57,159
hit enter and that would send that and

499
00:21:55,570 --> 00:21:58,629
then you see the response come back and

500
00:21:57,159 --> 00:22:00,429
it would move render it as if it was

501
00:21:58,630 --> 00:22:02,590
inside of a terminal so that's kind of

502
00:22:00,429 --> 00:22:03,909
where I want to go with this one I just

503
00:22:02,590 --> 00:22:07,299
really haven't had time to get back to

504
00:22:03,909 --> 00:22:11,200
it and do that but you know would

505
00:22:07,299 --> 00:22:17,649
support PHP JSP war shells ASP and

506
00:22:11,200 --> 00:22:18,790
asp.net s-- that's the idea behind that

507
00:22:17,649 --> 00:22:21,070
one anyway

508
00:22:18,790 --> 00:22:23,710
so a couple that that I do use quite

509
00:22:21,070 --> 00:22:26,050
frequently so the user generator I find

510
00:22:23,710 --> 00:22:27,850
extremely useful there's a lot of cases

511
00:22:26,050 --> 00:22:30,250
that you're like hey you know I need to

512
00:22:27,850 --> 00:22:35,559
I just need a list of users well which

513
00:22:30,250 --> 00:22:37,720
users do I use so and this is based off

514
00:22:35,559 --> 00:22:39,850
of census data so one of the things is

515
00:22:37,720 --> 00:22:41,710
especially when you're sending fuzzing

516
00:22:39,850 --> 00:22:45,340
payloads you have a list of things that

517
00:22:41,710 --> 00:22:47,980
you want to send into an application we

518
00:22:45,340 --> 00:22:49,809
know that sending a bunch of things into

519
00:22:47,980 --> 00:22:51,550
an application can take time right so

520
00:22:49,809 --> 00:22:53,139
there's no way I can send a list of a

521
00:22:51,550 --> 00:22:55,178
million things in that's just gonna take

522
00:22:53,140 --> 00:22:56,650
too long and it's gonna put a lot of

523
00:22:55,179 --> 00:22:58,570
load on the application and we don't we

524
00:22:56,650 --> 00:23:00,309
want to be as we if we can we want to be

525
00:22:58,570 --> 00:23:02,678
nice to it our goal isn't to the denial

526
00:23:00,309 --> 00:23:05,889
service every application that we pen

527
00:23:02,679 --> 00:23:07,870
test so so when we want to list user

528
00:23:05,890 --> 00:23:09,820
names we want we really want is a list

529
00:23:07,870 --> 00:23:12,540
of the most likely user names that will

530
00:23:09,820 --> 00:23:15,520
work and so that's what the goal of this

531
00:23:12,540 --> 00:23:19,000
this particular tab is right so let's

532
00:23:15,520 --> 00:23:20,860
say I have its let's say it's a website

533
00:23:19,000 --> 00:23:22,120
with functionality and we I know that

534
00:23:20,860 --> 00:23:24,250
its functionality that relates to

535
00:23:22,120 --> 00:23:26,379
retirees I'm gonna say okay well let's

536
00:23:24,250 --> 00:23:28,090
pick first names from the 1950s because

537
00:23:26,380 --> 00:23:30,309
all of the data in here is pulled from

538
00:23:28,090 --> 00:23:31,629
census data and so it's the most common

539
00:23:30,309 --> 00:23:35,830
two least common and that's how its

540
00:23:31,630 --> 00:23:38,200
ordered so I can say let me take first

541
00:23:35,830 --> 00:23:40,300
names from the 1950s and I go click

542
00:23:38,200 --> 00:23:42,820
alright and they always for some reason

543
00:23:40,300 --> 00:23:44,950
Scrolls down and so the most common name

544
00:23:42,820 --> 00:23:46,899
from the 1950s was Michael and then came

545
00:23:44,950 --> 00:23:48,910
David and then James John Robert William

546
00:23:46,900 --> 00:23:54,190
Christopher Joseph Jennifer Richard and

547
00:23:48,910 --> 00:23:55,960
so on and so forth down the list so if

548
00:23:54,190 --> 00:23:57,610
I'm looking for first names that that'll

549
00:23:55,960 --> 00:23:59,470
work for me if I'm looking for surnames

550
00:23:57,610 --> 00:24:03,490
I also have those right so I can just

551
00:23:59,470 --> 00:24:05,679
say let's just add surnames and those

552
00:24:03,490 --> 00:24:08,020
are the most common surnames not based

553
00:24:05,679 --> 00:24:08,410
on date that's just the current census

554
00:24:08,020 --> 00:24:10,540
data

555
00:24:08,410 --> 00:24:12,370
all right so Smith Johnson Williams

556
00:24:10,540 --> 00:24:14,260
Brown right so those are your most

557
00:24:12,370 --> 00:24:16,389
common surnames you can also have it

558
00:24:14,260 --> 00:24:18,790
just like combined things so let's say

559
00:24:16,390 --> 00:24:21,340
you know that the user names tend to be

560
00:24:18,790 --> 00:24:22,840
first initial last name for an

561
00:24:21,340 --> 00:24:25,120
organization so what are your most

562
00:24:22,840 --> 00:24:26,678
what's the most likely successful

563
00:24:25,120 --> 00:24:29,649
candidates for that if you have no idea

564
00:24:26,679 --> 00:24:31,840
who actually works there well you can

565
00:24:29,650 --> 00:24:34,090
add the combos on there

566
00:24:31,840 --> 00:24:35,889
and you you can you can guess that

567
00:24:34,090 --> 00:24:37,929
there's a good chance that there's going

568
00:24:35,890 --> 00:24:40,150
to be a J Smith a jeh Johnson and then

569
00:24:37,930 --> 00:24:43,570
Smith the Jay Williams and M Johnson D

570
00:24:40,150 --> 00:24:45,730
Smith like so basically ordered again

571
00:24:43,570 --> 00:24:48,669
orders them by you know what's most

572
00:24:45,730 --> 00:24:51,700
likely going to be available because I'm

573
00:24:48,670 --> 00:25:03,610
gonna need it in a moment I'm gonna grab

574
00:24:51,700 --> 00:25:07,230
first names on here so next name Mangler

575
00:25:03,610 --> 00:25:10,570
this is very simple I put a name I

576
00:25:07,230 --> 00:25:11,710
needed something cuz I I knew that in

577
00:25:10,570 --> 00:25:14,409
this case I knew who some of the people

578
00:25:11,710 --> 00:25:17,500
were that I was and I was looking for a

579
00:25:14,410 --> 00:25:19,630
username harvesting flaw but I didn't

580
00:25:17,500 --> 00:25:23,530
know what the format was for that they

581
00:25:19,630 --> 00:25:26,080
were using for their usernames so if I

582
00:25:23,530 --> 00:25:27,430
put myself on here and just you know

583
00:25:26,080 --> 00:25:30,480
there's a couple of things you can do

584
00:25:27,430 --> 00:25:33,250
and there but basically it gives you a

585
00:25:30,480 --> 00:25:35,320
bunch of different options so I didn't

586
00:25:33,250 --> 00:25:39,130
have to manually go okay well let's try

587
00:25:35,320 --> 00:25:41,980
J Gilliam and Gilliam and Gilliam J and

588
00:25:39,130 --> 00:25:43,870
you know and it just basically spits out

589
00:25:41,980 --> 00:25:47,070
a list that recombines these in

590
00:25:43,870 --> 00:25:53,800
different ways so that was that one

591
00:25:47,070 --> 00:25:55,300
cooler so ramen would digi ninja big

592
00:25:53,800 --> 00:25:58,419
shout out to him and another open source

593
00:25:55,300 --> 00:26:02,470
developer who does a lot of pen testing

594
00:25:58,420 --> 00:26:06,490
as well so he has one of the old tool of

595
00:26:02,470 --> 00:26:09,100
his cool and I asked him I said hey do

596
00:26:06,490 --> 00:26:11,230
you mind if I if I take your tool and

597
00:26:09,100 --> 00:26:12,580
take the concept behind it and basically

598
00:26:11,230 --> 00:26:18,250
rebuild it into burp and that's what

599
00:26:12,580 --> 00:26:22,379
cooler is and so in this one here what

600
00:26:18,250 --> 00:26:25,870
you do is you take let me take

601
00:26:22,380 --> 00:26:27,160
professionally evil ate oh wait hang on

602
00:26:25,870 --> 00:26:29,760
that one's not gonna have anything as a

603
00:26:27,160 --> 00:26:29,760
three or four

604
00:26:31,600 --> 00:26:38,709
I don't know if this will refresh in

605
00:26:34,810 --> 00:26:41,050
there hopefully there we go okay

606
00:26:38,710 --> 00:26:47,620
I needed the actual content to send it

607
00:26:41,050 --> 00:26:49,480
to cooler all right so so you can send

608
00:26:47,620 --> 00:26:52,000
multiple at a time and so the premise

609
00:26:49,480 --> 00:26:54,280
behind cool is that people tend to use

610
00:26:52,000 --> 00:26:57,010
words associated with a website in their

611
00:26:54,280 --> 00:26:59,680
password for that website so if we

612
00:26:57,010 --> 00:27:01,990
extract all of the words from a page

613
00:26:59,680 --> 00:27:03,730
then one of the main purposes for that

614
00:27:01,990 --> 00:27:06,690
would be to see if any of those

615
00:27:03,730 --> 00:27:09,580
someone's use one of these as a password

616
00:27:06,690 --> 00:27:11,800
right so that's what what cooler is so

617
00:27:09,580 --> 00:27:13,419
pretty simple there's some configuration

618
00:27:11,800 --> 00:27:16,210
on there I'm word size and stuff and

619
00:27:13,420 --> 00:27:18,850
stuff but at the end of the day you get

620
00:27:16,210 --> 00:27:22,420
a bunch of words that came off of that

621
00:27:18,850 --> 00:27:27,909
page and then you can you can copy all

622
00:27:22,420 --> 00:27:29,410
of those masher notice also most of

623
00:27:27,910 --> 00:27:33,870
these end in ER i was trying to keep

624
00:27:29,410 --> 00:27:38,530
with the the naming convention inside of

625
00:27:33,870 --> 00:27:40,000
four okay so i'm going to take actually

626
00:27:38,530 --> 00:27:43,870
going to take my list from cooler for

627
00:27:40,000 --> 00:27:45,760
this so i take this list and so you

628
00:27:43,870 --> 00:27:46,719
start off with a input list of words and

629
00:27:45,760 --> 00:27:49,690
then what you're going to do is you're

630
00:27:46,720 --> 00:27:51,490
going to go hey the password

631
00:27:49,690 --> 00:27:55,090
specification which I happen to know in

632
00:27:51,490 --> 00:27:57,910
this case requires an alpha uppercase

633
00:27:55,090 --> 00:28:00,100
lowercase numeric and it needs to be

634
00:27:57,910 --> 00:28:02,580
anywhere between let's say seven carat

635
00:28:00,100 --> 00:28:06,490
well say nine characters and eighteen

636
00:28:02,580 --> 00:28:09,490
and then this actually creates a payload

637
00:28:06,490 --> 00:28:13,150
generator and it will you can also

638
00:28:09,490 --> 00:28:15,520
generate samples on here and the samples

639
00:28:13,150 --> 00:28:19,900
will be mixes of whatever was in the

640
00:28:15,520 --> 00:28:21,250
input and it does start fuzzing them too

641
00:28:19,900 --> 00:28:23,410
it'll start adding like the number one

642
00:28:21,250 --> 00:28:24,550
at the end and if you have symbols that

643
00:28:23,410 --> 00:28:26,710
are required then I'll start putting

644
00:28:24,550 --> 00:28:30,399
exclamation points and you know that

645
00:28:26,710 --> 00:28:31,840
sort of thing the generator if you use

646
00:28:30,400 --> 00:28:34,390
that it basically just keeps going it

647
00:28:31,840 --> 00:28:36,159
keeps generating them indefinitely and

648
00:28:34,390 --> 00:28:37,690
that will show up under intruders so if

649
00:28:36,160 --> 00:28:40,720
I go to payloads here under the payload

650
00:28:37,690 --> 00:28:43,720
type since I've generated it I can go to

651
00:28:40,720 --> 00:28:44,870
extension generated and it will actually

652
00:28:43,720 --> 00:28:46,700
it should show

653
00:28:44,870 --> 00:28:47,750
in this list here there it is I don't

654
00:28:46,700 --> 00:28:48,890
know why it's small it's probably

655
00:28:47,750 --> 00:28:56,360
because I changed my phone so you can

656
00:28:48,890 --> 00:28:57,470
see it better okay so that's that yeah

657
00:28:56,360 --> 00:29:02,439
and then there's there's a couple of

658
00:28:57,470 --> 00:29:06,700
other little bits and pieces on there so

659
00:29:02,440 --> 00:29:09,080
now the problem that I want to show is

660
00:29:06,700 --> 00:29:10,669
because one thing I did want to get into

661
00:29:09,080 --> 00:29:11,570
is a little bit more on developing one

662
00:29:10,669 --> 00:29:14,720
I'll show you a little bit of source

663
00:29:11,570 --> 00:29:16,730
code in a second so I have this this

664
00:29:14,720 --> 00:29:21,230
mocked up silly little login thing and

665
00:29:16,730 --> 00:29:22,940
if we run this let's just run it with a

666
00:29:21,230 --> 00:29:26,539
you know random user I'll just call it

667
00:29:22,940 --> 00:29:31,250
random okay we have no user session with

668
00:29:26,539 --> 00:29:33,440
that user if I try a user that I know is

669
00:29:31,250 --> 00:29:35,360
in the system called test it says login

670
00:29:33,440 --> 00:29:38,270
error try again

671
00:29:35,360 --> 00:29:40,219
so basically the idea here is it's a

672
00:29:38,270 --> 00:29:42,289
it's a login form right and then there's

673
00:29:40,220 --> 00:29:44,120
also this little profile link over here

674
00:29:42,289 --> 00:29:45,379
that I just threw this in here and we're

675
00:29:44,120 --> 00:29:49,219
not authorized we have to be logged in

676
00:29:45,380 --> 00:29:51,470
to get to that so there is a harvesting

677
00:29:49,220 --> 00:29:54,380
flaw on here but it's not a harvesting

678
00:29:51,470 --> 00:29:57,740
flaw that we could normally get get

679
00:29:54,380 --> 00:29:59,870
through with with the built in

680
00:29:57,740 --> 00:30:01,700
functionality inside of bird and the

681
00:29:59,870 --> 00:30:03,289
reason is is because what we can see if

682
00:30:01,700 --> 00:30:05,779
we analyze it which we should always do

683
00:30:03,289 --> 00:30:08,059
right we analyze the the request

684
00:30:05,779 --> 00:30:13,029
response traffic we realize that what's

685
00:30:08,059 --> 00:30:13,029
happening is when we click on something

686
00:30:13,929 --> 00:30:18,140
or sorry when we saw when we submit

687
00:30:16,370 --> 00:30:19,820
something like here was the user random

688
00:30:18,140 --> 00:30:21,529
what's happening is we're getting a

689
00:30:19,820 --> 00:30:26,450
nonce back in this case it was a zero

690
00:30:21,529 --> 00:30:28,700
because the user didn't exist and in the

691
00:30:26,450 --> 00:30:31,340
next case where I put in test user which

692
00:30:28,700 --> 00:30:33,860
I know is a known user in system I got I

693
00:30:31,340 --> 00:30:38,178
actually got a nonce back that nonce was

694
00:30:33,860 --> 00:30:39,500
then used to attempt to login okay so if

695
00:30:38,179 --> 00:30:41,450
we're looking at the request here it's

696
00:30:39,500 --> 00:30:44,029
the user was test the password was

697
00:30:41,450 --> 00:30:47,270
password and the nonce was was the

698
00:30:44,029 --> 00:30:49,309
whatever nonce was produced and I won't

699
00:30:47,270 --> 00:30:51,110
go through you know verifying exactly

700
00:30:49,309 --> 00:30:54,408
how this works I'll just tell you so

701
00:30:51,110 --> 00:30:56,479
basically it's it it requires these two

702
00:30:54,409 --> 00:30:57,639
requests in order to login one to grab a

703
00:30:56,480 --> 00:31:00,759
nonce and

704
00:30:57,639 --> 00:31:04,208
ii actually used that nots to log in the

705
00:31:00,759 --> 00:31:07,570
knots only works once right so this is

706
00:31:04,209 --> 00:31:09,099
meant as a as a method of preventing you

707
00:31:07,570 --> 00:31:11,619
from being able to brute-force through

708
00:31:09,099 --> 00:31:14,320
the login or you know send a whole bunch

709
00:31:11,619 --> 00:31:16,629
of fuzzing traffic to it if i just said

710
00:31:14,320 --> 00:31:19,359
okay well let me try a bunch of users

711
00:31:16,629 --> 00:31:21,639
and and a password list against this and

712
00:31:19,359 --> 00:31:23,199
just keep using reusing the same knots

713
00:31:21,639 --> 00:31:25,449
it would always fail even if i guess the

714
00:31:23,200 --> 00:31:28,239
right password it would still fail and

715
00:31:25,450 --> 00:31:30,459
so that's that's kind of the way this is

716
00:31:28,239 --> 00:31:32,739
built now it does have a bit of a flaw

717
00:31:30,459 --> 00:31:34,719
in that and that although i can't do

718
00:31:32,739 --> 00:31:36,639
that with the built-in tools in burke i

719
00:31:34,719 --> 00:31:39,339
could make my own just think about all i

720
00:31:36,639 --> 00:31:42,609
need to do is is set up my intruder

721
00:31:39,339 --> 00:31:45,639
payload so let me let me just pick one

722
00:31:42,609 --> 00:31:50,859
here like let me take this one here i'm

723
00:31:45,639 --> 00:31:52,418
going to send this to intruder okay so

724
00:31:50,859 --> 00:31:54,458
if you haven't seen this before again

725
00:31:52,419 --> 00:32:00,249
this is like a emil merge type set thing

726
00:31:54,459 --> 00:32:02,829
so I have my users I have my passwords

727
00:32:00,249 --> 00:32:04,109
and then I have these nonces so I need

728
00:32:02,829 --> 00:32:07,928
to figure out how I'm gonna handle those

729
00:32:04,109 --> 00:32:08,949
okay so we'll bill I'm gonna build a

730
00:32:07,929 --> 00:32:11,679
little solution for that actually I

731
00:32:08,950 --> 00:32:13,269
already have it built but I'll build the

732
00:32:11,679 --> 00:32:17,259
code around that and I'll show you show

733
00:32:13,269 --> 00:32:18,549
it to you in a second but before we do

734
00:32:17,259 --> 00:32:21,070
that we need to know what are some valid

735
00:32:18,549 --> 00:32:23,859
users so let's let's look at a slightly

736
00:32:21,070 --> 00:32:26,468
simpler version of this and we know that

737
00:32:23,859 --> 00:32:28,928
the knots that we get back is going to

738
00:32:26,469 --> 00:32:32,139
be a zero when the user doesn't exist

739
00:32:28,929 --> 00:32:37,869
and a longer string when the user does

740
00:32:32,139 --> 00:32:39,849
exist right and that's just by passing a

741
00:32:37,869 --> 00:32:41,109
user into this so let's start with this

742
00:32:39,849 --> 00:32:48,399
okay so I'm going to send that to

743
00:32:41,109 --> 00:32:50,408
intruder and clear this out and for the

744
00:32:48,399 --> 00:32:52,928
user instead of test I want to get some

745
00:32:50,409 --> 00:32:55,329
actual user names right so I'm gonna go

746
00:32:52,929 --> 00:32:59,879
back to CEO to remember how I had the

747
00:32:55,329 --> 00:33:04,269
user generator here I'm gonna take those

748
00:32:59,879 --> 00:33:07,949
I'm going to pass them into I'm sorry

749
00:33:04,269 --> 00:33:10,150
I'm going to pass those into intruder

750
00:33:07,950 --> 00:33:14,480
here

751
00:33:10,150 --> 00:33:17,300
and then I start that attack and it goes

752
00:33:14,480 --> 00:33:24,770
by very quickly and I can tell by the

753
00:33:17,300 --> 00:33:29,570
length that there's at least a Kevin in

754
00:33:24,770 --> 00:33:31,250
adjacent in there okay and you know if I

755
00:33:29,570 --> 00:33:33,409
if I look inside the response I can see

756
00:33:31,250 --> 00:33:36,590
those ones produced nonces all these

757
00:33:33,410 --> 00:33:38,810
other names I got a zero back right so

758
00:33:36,590 --> 00:33:41,120
that's basically for if you haven't seen

759
00:33:38,810 --> 00:33:42,980
this before if you haven't seen a

760
00:33:41,120 --> 00:33:44,899
fuzzing attack before that's basically

761
00:33:42,980 --> 00:33:46,280
what it how it works we're looking for

762
00:33:44,900 --> 00:33:48,160
in the results table we're looking for

763
00:33:46,280 --> 00:33:52,220
what's different what are the outliers

764
00:33:48,160 --> 00:33:56,390
okay so Kevin and Jason are valid so

765
00:33:52,220 --> 00:34:00,530
going back to here if I set this up as a

766
00:33:56,390 --> 00:34:03,770
cluster bomb sorry not this one

767
00:34:00,530 --> 00:34:05,870
number two you set this up as a cluster

768
00:34:03,770 --> 00:34:08,179
bomb we have the test the password and

769
00:34:05,870 --> 00:34:09,889
the nonce cluster bomb is the attack

770
00:34:08,179 --> 00:34:13,819
type that tries combinations of things

771
00:34:09,889 --> 00:34:15,830
okay so our payloads for this our first

772
00:34:13,820 --> 00:34:18,830
payload is going to be user names so we

773
00:34:15,830 --> 00:34:23,860
can just type them in I'll type in Kevin

774
00:34:18,830 --> 00:34:23,860
I'll type in Jason okay

775
00:34:24,139 --> 00:34:28,850
the second one was our password so we

776
00:34:26,480 --> 00:34:30,650
need a password list I happen to have a

777
00:34:28,850 --> 00:34:31,940
short password list I'm going to need a

778
00:34:30,650 --> 00:34:38,860
short one because I need this to run

779
00:34:31,940 --> 00:34:41,510
fast okay and then for the third one

780
00:34:38,860 --> 00:34:43,520
this one gets a little bit tricky so now

781
00:34:41,510 --> 00:34:46,130
we need to generate a nonce and the

782
00:34:43,520 --> 00:34:48,199
nonce we know is based on the user right

783
00:34:46,130 --> 00:34:50,750
so if I go back to that proxy history

784
00:34:48,199 --> 00:34:56,089
and look at how that works we pass any

785
00:34:50,750 --> 00:34:58,880
user we get back a nonce okay I don't

786
00:34:56,090 --> 00:35:07,040
see that so how are we gonna make that

787
00:34:58,880 --> 00:35:08,540
work so what we do is me bring up here's

788
00:35:07,040 --> 00:35:09,890
the nonce payload processor and I

789
00:35:08,540 --> 00:35:12,470
basically have hard-coded this whole

790
00:35:09,890 --> 00:35:14,299
thing so I have the template of that

791
00:35:12,470 --> 00:35:18,230
request I was just showing you right

792
00:35:14,300 --> 00:35:20,270
here okay and then I have here's that

793
00:35:18,230 --> 00:35:23,120
remember how I said here's the one thing

794
00:35:20,270 --> 00:35:23,440
you have to implement right register

795
00:35:23,120 --> 00:35:26,710
it's

796
00:35:23,440 --> 00:35:28,079
callbacks so let me just zoom in just a

797
00:35:26,710 --> 00:35:31,000
little bit here

798
00:35:28,079 --> 00:35:32,650
there we go okay so register extender

799
00:35:31,000 --> 00:35:34,300
callbacks in this case here all I did

800
00:35:32,650 --> 00:35:36,670
was set the extension name from the

801
00:35:34,300 --> 00:35:37,960
callbacks print some output into it so

802
00:35:36,670 --> 00:35:41,800
that way I know the right version is

803
00:35:37,960 --> 00:35:44,560
loaded and then I have a register and

804
00:35:41,800 --> 00:35:46,480
true intruder payload processor and this

805
00:35:44,560 --> 00:35:50,950
whole thing actually is the payload

806
00:35:46,480 --> 00:35:52,210
processor halo processor has two extra

807
00:35:50,950 --> 00:35:54,040
things that you need to implement one is

808
00:35:52,210 --> 00:35:55,270
the name you know so that way you have a

809
00:35:54,040 --> 00:35:57,099
way for it to show up in the interface

810
00:35:55,270 --> 00:36:00,130
and the other one is the actual

811
00:35:57,099 --> 00:36:02,920
processing method method which is

812
00:36:00,130 --> 00:36:04,780
processed payload and it takes the

813
00:36:02,920 --> 00:36:08,349
current payload the original payload and

814
00:36:04,780 --> 00:36:11,500
then the base value as parameters on

815
00:36:08,349 --> 00:36:13,869
there and so based on on those I'm able

816
00:36:11,500 --> 00:36:15,460
to take an existing payload so we're

817
00:36:13,869 --> 00:36:20,079
going to use the username as a payload

818
00:36:15,460 --> 00:36:21,609
and and then make and then return back a

819
00:36:20,079 --> 00:36:23,500
replacement payload

820
00:36:21,609 --> 00:36:24,819
payload a replacement version of that

821
00:36:23,500 --> 00:36:27,849
which we're actually gonna return the

822
00:36:24,819 --> 00:36:29,920
knots so the way this works in here so

823
00:36:27,849 --> 00:36:31,990
inside this block I don't know how easy

824
00:36:29,920 --> 00:36:34,480
that is to see but I'll just tell you

825
00:36:31,990 --> 00:36:38,290
what it's doing it's basically taking

826
00:36:34,480 --> 00:36:41,940
that the username so whatever value

827
00:36:38,290 --> 00:36:44,529
we've used for that and it is

828
00:36:41,940 --> 00:36:46,390
constructing a request that request is

829
00:36:44,530 --> 00:36:48,250
going to request a nonce and we then

830
00:36:46,390 --> 00:36:56,819
parse out the knots and then we return

831
00:36:48,250 --> 00:37:00,780
the knots okay so not too hard one more

832
00:36:56,819 --> 00:37:06,819
like him how far out did I zoom that

833
00:37:00,780 --> 00:37:08,950
okay so going back into burp suite that

834
00:37:06,819 --> 00:37:11,670
was or nonce Pro so what I'm gonna do is

835
00:37:08,950 --> 00:37:14,589
I'm I'm just gonna copy another payload

836
00:37:11,670 --> 00:37:16,210
for the generation of the payload which

837
00:37:14,589 --> 00:37:18,460
is gonna be our names because we already

838
00:37:16,210 --> 00:37:22,089
have those that's the Kevin and Jason we

839
00:37:18,460 --> 00:37:23,710
have in the first the first position

840
00:37:22,089 --> 00:37:25,480
right going back to the positions here

841
00:37:23,710 --> 00:37:28,540
the name was already here

842
00:37:25,480 --> 00:37:31,000
so I'm going to use the name again for

843
00:37:28,540 --> 00:37:34,420
this payload position but I'm going to

844
00:37:31,000 --> 00:37:37,070
then use my custom payload processor to

845
00:37:34,420 --> 00:37:40,220
swap that out for them

846
00:37:37,070 --> 00:37:41,900
so one of the payload processing things

847
00:37:40,220 --> 00:37:43,580
I can do is invoke the burp extension

848
00:37:41,900 --> 00:37:45,830
and anything that I've registered

849
00:37:43,580 --> 00:37:47,330
through the callbacks will show up on

850
00:37:45,830 --> 00:37:48,589
here so I have ASCII payloads is a

851
00:37:47,330 --> 00:37:51,170
different one and then at this nonce

852
00:37:48,589 --> 00:37:53,210
payloader right so I'm going to invoke

853
00:37:51,170 --> 00:37:55,869
that and that's everything that I need

854
00:37:53,210 --> 00:37:58,310
to do so now I can start this attack and

855
00:37:55,869 --> 00:37:59,990
it is in this case it's going to run

856
00:37:58,310 --> 00:38:04,220
very slowly because I'm making these

857
00:37:59,990 --> 00:38:07,009
extra requests out and yeah so this will

858
00:38:04,220 --> 00:38:09,140
take a little while so while this is

859
00:38:07,010 --> 00:38:10,880
going we can let me just explain what we

860
00:38:09,140 --> 00:38:13,098
have here we have the three different

861
00:38:10,880 --> 00:38:14,510
payload positions and their values are

862
00:38:13,099 --> 00:38:16,369
actually showing up in the results table

863
00:38:14,510 --> 00:38:18,050
and what we're looking for again is

864
00:38:16,369 --> 00:38:21,650
something that's different so any

865
00:38:18,050 --> 00:38:23,680
anywhere where the length has changed to

866
00:38:21,650 --> 00:38:27,230
something else and that should tell us

867
00:38:23,680 --> 00:38:30,348
whether or not we've guessed the

868
00:38:27,230 --> 00:38:40,180
password for one of those two users

869
00:38:30,349 --> 00:38:42,890
Kevin or Jason these are going slow so

870
00:38:40,180 --> 00:38:44,509
once we once we've guessed that then

871
00:38:42,890 --> 00:38:47,390
we'll be able to look into the next step

872
00:38:44,510 --> 00:38:49,130
which is you know can we actually login

873
00:38:47,390 --> 00:38:51,589
with that account and then what's inside

874
00:38:49,130 --> 00:38:54,349
of that that profile page that's in

875
00:38:51,589 --> 00:38:55,720
there so one little trick actually if

876
00:38:54,349 --> 00:38:58,220
you have something that's that's

877
00:38:55,720 --> 00:39:01,220
processing along is you can take the

878
00:38:58,220 --> 00:39:02,750
request and reverse that and that way it

879
00:39:01,220 --> 00:39:05,149
kind of shows up at the top like this

880
00:39:02,750 --> 00:39:06,980
makes it a little bit easier to see

881
00:39:05,150 --> 00:39:08,270
right away when you see the length

882
00:39:06,980 --> 00:39:09,740
change on something and there we go

883
00:39:08,270 --> 00:39:13,160
actually there's one that just changed

884
00:39:09,740 --> 00:39:14,049
so now that it has Elsword on it and so

885
00:39:13,160 --> 00:39:17,000
we can see what it is

886
00:39:14,050 --> 00:39:20,570
Kevin's password is not surprisingly

887
00:39:17,000 --> 00:39:22,790
Star Wars okay right because the lengths

888
00:39:20,570 --> 00:39:24,380
the length on that one was different so

889
00:39:22,790 --> 00:39:26,359
that's the outlier which is we're always

890
00:39:24,380 --> 00:39:28,339
looking for the outliers but look at the

891
00:39:26,359 --> 00:39:30,560
response for that when it says success

892
00:39:28,339 --> 00:39:34,070
you are logged in all right so I'm just

893
00:39:30,560 --> 00:39:37,940
going to let that keep going and now I

894
00:39:34,070 --> 00:39:42,470
can go back to my application try Kevin

895
00:39:37,940 --> 00:39:44,510
and the password Star Wars and we'll

896
00:39:42,470 --> 00:39:47,330
just sign in and now it actually says

897
00:39:44,510 --> 00:39:49,010
you are logged in and lo and behold I'm

898
00:39:47,330 --> 00:39:50,150
able to get to the profile which is just

899
00:39:49,010 --> 00:39:51,589
a dummy screen it just

900
00:39:50,150 --> 00:39:53,059
doesn't say you are not authorized

901
00:39:51,589 --> 00:39:55,190
anymore now it says hey this is Kevin's

902
00:39:53,059 --> 00:40:03,289
profile so something's tied to a session

903
00:39:55,190 --> 00:40:05,720
is working alright so we've been able to

904
00:40:03,289 --> 00:40:07,339
log in with the nonce and we can

905
00:40:05,720 --> 00:40:10,730
actually see what happened here in the

906
00:40:07,339 --> 00:40:15,319
the final version of it we use Kevin and

907
00:40:10,730 --> 00:40:16,490
his password and we we actually won't I

908
00:40:15,319 --> 00:40:20,660
don't think we'll see in the history

909
00:40:16,490 --> 00:40:26,029
hang on Kevin yeah there we go so first

910
00:40:20,660 --> 00:40:29,328
it was Kevin and we got the nonce back

911
00:40:26,029 --> 00:40:31,460
and then in the post right after that

912
00:40:29,329 --> 00:40:34,279
Kevin is password and that same nonce

913
00:40:31,460 --> 00:40:36,849
was used and we were able to to log in

914
00:40:34,279 --> 00:40:39,440
with that now when we go to the profile

915
00:40:36,849 --> 00:40:40,849
let me look at the request here one

916
00:40:39,440 --> 00:40:44,930
thing that you'll notice on this one is

917
00:40:40,849 --> 00:40:46,160
there are a whole bunch of cookies in

918
00:40:44,930 --> 00:40:48,078
here I've just said a bunch of dummy

919
00:40:46,160 --> 00:40:49,339
cookies which might make it hard to

920
00:40:48,079 --> 00:40:50,809
figure out well which one of those are

921
00:40:49,339 --> 00:40:54,799
actually important for the session in

922
00:40:50,809 --> 00:40:56,390
which ones aren't so / amyl Iser and

923
00:40:54,799 --> 00:40:57,980
I'll get to that in just one second but

924
00:40:56,390 --> 00:40:59,808
it ties right into parameter which is

925
00:40:57,980 --> 00:41:02,539
another plug-in that extension that I've

926
00:40:59,809 --> 00:41:04,130
been working on and this one initially

927
00:41:02,539 --> 00:41:05,809
started with a hey I just want to be

928
00:41:04,130 --> 00:41:09,470
able to see what everything is inside

929
00:41:05,809 --> 00:41:11,390
when I have a really big test that I'm

930
00:41:09,470 --> 00:41:12,770
working on you know a very busy

931
00:41:11,390 --> 00:41:15,410
application or maybe I'm going across

932
00:41:12,770 --> 00:41:17,210
multiple applications and so what you do

933
00:41:15,410 --> 00:41:18,500
is well let me go back just one second

934
00:41:17,210 --> 00:41:20,450
here what you have to do is first of all

935
00:41:18,500 --> 00:41:22,789
it only analyzes what's in your target

936
00:41:20,450 --> 00:41:24,020
scope it only analyzes what's in your

937
00:41:22,789 --> 00:41:25,819
target scope I have to say that twice

938
00:41:24,020 --> 00:41:30,109
because people go like hey nothing came

939
00:41:25,819 --> 00:41:33,980
up so once that happens it will analyze

940
00:41:30,109 --> 00:41:35,750
your history only right and it just

941
00:41:33,980 --> 00:41:38,029
basically puts everything out into this

942
00:41:35,750 --> 00:41:40,089
nice table it does its best job at

943
00:41:38,029 --> 00:41:44,299
identifying things like here we have

944
00:41:40,089 --> 00:41:45,650
this value here it says if you just

945
00:41:44,299 --> 00:41:47,779
click on one of them down here in the

946
00:41:45,650 --> 00:41:50,000
details in the bottom left in the middle

947
00:41:47,779 --> 00:41:53,359
it'll say hey what is that

948
00:41:50,000 --> 00:41:57,349
and it says yeah it's it's a hex string

949
00:41:53,359 --> 00:42:01,880
of 40 characters in length so it's

950
00:41:57,349 --> 00:42:05,049
probably a sha-1 hash right and they'll

951
00:42:01,880 --> 00:42:07,539
give you a few other details on here is

952
00:42:05,049 --> 00:42:08,680
it'll also do its best guess at guessing

953
00:42:07,539 --> 00:42:10,809
which one of these would be considered

954
00:42:08,680 --> 00:42:12,730
secrets or things that you want to

955
00:42:10,809 --> 00:42:16,270
protect in some way okay

956
00:42:12,730 --> 00:42:21,160
so and that's just purely based off the

957
00:42:16,270 --> 00:42:23,770
name really so you know that we we have

958
00:42:21,160 --> 00:42:25,390
that much information on here one thing

959
00:42:23,770 --> 00:42:29,500
that we might want to do is go okay

960
00:42:25,390 --> 00:42:31,720
looking back at that proxy history on

961
00:42:29,500 --> 00:42:33,779
here we have all of these we might want

962
00:42:31,720 --> 00:42:36,250
to know which one is that those are

963
00:42:33,779 --> 00:42:39,430
important for managing session and which

964
00:42:36,250 --> 00:42:41,410
ones are just basically garbage tokens I

965
00:42:39,430 --> 00:42:43,089
like to call them sometimes that are

966
00:42:41,410 --> 00:42:46,270
maybe used for like analytics or

967
00:42:43,089 --> 00:42:49,210
something like that and one way of doing

968
00:42:46,270 --> 00:42:51,520
that is like you can you can manually go

969
00:42:49,210 --> 00:42:54,220
into I can send this to repeater and

970
00:42:51,520 --> 00:42:55,750
then just you know one by one eliminate

971
00:42:54,220 --> 00:42:57,578
them and see and what how my response

972
00:42:55,750 --> 00:43:01,089
changes I got tired of doing that I'm

973
00:42:57,579 --> 00:43:03,190
lazy so instead of doing that I decided

974
00:43:01,089 --> 00:43:07,180
to spend hours trying to come up with a

975
00:43:03,190 --> 00:43:09,789
solution to do it for me so what I did

976
00:43:07,180 --> 00:43:12,910
is I took this one here and send this

977
00:43:09,789 --> 00:43:14,740
over to cram Eliezer so you can do it

978
00:43:12,910 --> 00:43:17,589
from anywhere in there but basically it

979
00:43:14,740 --> 00:43:19,240
take any requests ideally what you want

980
00:43:17,589 --> 00:43:21,730
is you want to request that is a good

981
00:43:19,240 --> 00:43:24,189
one to use as like a heartbeat of am I

982
00:43:21,730 --> 00:43:25,900
still logged in right so going to a

983
00:43:24,190 --> 00:43:27,970
user's profile would be one it's not

984
00:43:25,900 --> 00:43:29,740
making any changes right you don't want

985
00:43:27,970 --> 00:43:32,288
because this is gonna automate some some

986
00:43:29,740 --> 00:43:33,910
testing on here but it's easy to tell

987
00:43:32,289 --> 00:43:35,410
whether or not the user is still logged

988
00:43:33,910 --> 00:43:37,960
in if you're trying to access their

989
00:43:35,410 --> 00:43:39,460
profile right because if if the session

990
00:43:37,960 --> 00:43:41,109
cookie isn't right it shouldn't give you

991
00:43:39,460 --> 00:43:43,180
their profile if it does then you have

992
00:43:41,109 --> 00:43:45,730
another whole problem on there um so I

993
00:43:43,180 --> 00:43:47,859
can send this to parameter and what it

994
00:43:45,730 --> 00:43:51,819
does is underneath the sessions tab it

995
00:43:47,859 --> 00:43:53,558
opens this up and you can first of all

996
00:43:51,819 --> 00:43:55,808
verify the baseline I like I like to do

997
00:43:53,559 --> 00:43:58,059
that first that's that's basically run

998
00:43:55,809 --> 00:44:00,640
that same request again and I can verify

999
00:43:58,059 --> 00:44:02,109
in the response that it says hey this is

1000
00:44:00,640 --> 00:44:03,879
Kevin's profile so I know that that's

1001
00:44:02,109 --> 00:44:06,788
still working the baselines still gonna

1002
00:44:03,880 --> 00:44:08,859
be accurate and then I just all you have

1003
00:44:06,789 --> 00:44:11,589
to do is take this analyze button and it

1004
00:44:08,859 --> 00:44:13,150
makes all of those requests it literally

1005
00:44:11,589 --> 00:44:15,460
took less than a second

1006
00:44:13,150 --> 00:44:16,809
and then based on those requests again

1007
00:44:15,460 --> 00:44:17,590
we're looking for outliers that's what

1008
00:44:16,809 --> 00:44:20,470
we do right

1009
00:44:17,590 --> 00:44:22,420
so and we see that hey yeah they're the

1010
00:44:20,470 --> 00:44:25,600
only outlier on here is the session

1011
00:44:22,420 --> 00:44:28,840
underscore ID so what this means is in

1012
00:44:25,600 --> 00:44:31,660
most it's most likely that the session

1013
00:44:28,840 --> 00:44:33,670
underscore ID is the only cookie that we

1014
00:44:31,660 --> 00:44:34,870
need to be considered logged in and all

1015
00:44:33,670 --> 00:44:38,470
of these other ones are just garbage

1016
00:44:34,870 --> 00:44:41,140
cookies you can right-click on any of

1017
00:44:38,470 --> 00:44:43,299
these and I've built in again through

1018
00:44:41,140 --> 00:44:45,520
the the burp api's you can build in

1019
00:44:43,300 --> 00:44:47,440
context menu is to send a request to

1020
00:44:45,520 --> 00:44:49,509
other tools so I can send one of these

1021
00:44:47,440 --> 00:44:55,030
to repeater all of that was built in

1022
00:44:49,510 --> 00:44:56,920
through through that okay so I think I'm

1023
00:44:55,030 --> 00:44:58,660
right near the end of my time let me

1024
00:44:56,920 --> 00:45:12,850
just I have a couple of closing things

1025
00:44:58,660 --> 00:45:17,049
bring up PowerPoint right so a couple

1026
00:45:12,850 --> 00:45:18,819
closing things many open source tools

1027
00:45:17,050 --> 00:45:21,670
out there are extendable and some

1028
00:45:18,820 --> 00:45:23,890
commercial ones are as well ok so just

1029
00:45:21,670 --> 00:45:25,750
because a tool doesn't do exactly what

1030
00:45:23,890 --> 00:45:29,410
you need it to do that doesn't mean it's

1031
00:45:25,750 --> 00:45:31,900
incapable of that and often the those of

1032
00:45:29,410 --> 00:45:33,339
us who write these tools we write them

1033
00:45:31,900 --> 00:45:36,640
to be extendable I mean there's lots of

1034
00:45:33,340 --> 00:45:39,790
examples out there Tim tones again I'll

1035
00:45:36,640 --> 00:45:41,830
throw his name out there recon ng that's

1036
00:45:39,790 --> 00:45:43,240
always been a very much a modular

1037
00:45:41,830 --> 00:45:46,420
framework right it's meant to be

1038
00:45:43,240 --> 00:45:50,140
extended and map is another one you can

1039
00:45:46,420 --> 00:45:52,210
you can build scripts additional scripts

1040
00:45:50,140 --> 00:45:57,100
onto onto n map which you know we all

1041
00:45:52,210 --> 00:46:00,460
use for port scanning purposes zap of

1042
00:45:57,100 --> 00:46:02,020
course and burp and then even if you

1043
00:46:00,460 --> 00:46:04,290
look at like the previous presentation

1044
00:46:02,020 --> 00:46:08,050
there were several tools like posh r2

1045
00:46:04,290 --> 00:46:08,620
extendable tools right so bear that in

1046
00:46:08,050 --> 00:46:11,950
mind

1047
00:46:08,620 --> 00:46:14,080
I mean this our tools get better when we

1048
00:46:11,950 --> 00:46:18,069
have you know feedback and additions and

1049
00:46:14,080 --> 00:46:19,440
and and you know we actually look at you

1050
00:46:18,070 --> 00:46:23,770
know how can we improve on these things

1051
00:46:19,440 --> 00:46:25,600
second everybody like please support

1052
00:46:23,770 --> 00:46:27,790
open source development that doesn't

1053
00:46:25,600 --> 00:46:30,040
mean you have to develop the stuff right

1054
00:46:27,790 --> 00:46:31,299
it also doesn't mean you have to donate

1055
00:46:30,040 --> 00:46:34,029
money to it or anything like that

1056
00:46:31,299 --> 00:46:35,559
but you can help in other ways report

1057
00:46:34,029 --> 00:46:37,599
issues if you see something that's

1058
00:46:35,559 --> 00:46:39,279
broken don't just go off that tool is

1059
00:46:37,599 --> 00:46:41,799
broken maybe they're not maintaining it

1060
00:46:39,279 --> 00:46:44,469
and then don't say anything right I know

1061
00:46:41,799 --> 00:46:45,849
that I have like in co2 I know that

1062
00:46:44,469 --> 00:46:48,219
there are things broken in there that

1063
00:46:45,849 --> 00:46:50,439
nobody has reported and I'll easily have

1064
00:46:48,219 --> 00:46:52,419
not actually opened an issue for but if

1065
00:46:50,439 --> 00:46:54,129
somebody reported it I'd go okay well

1066
00:46:52,419 --> 00:46:55,449
somebody wants that fix and so that

1067
00:46:54,130 --> 00:46:57,009
would get my attention and then when I

1068
00:46:55,449 --> 00:46:57,819
get some time I'll get around to it I'll

1069
00:46:57,009 --> 00:47:00,279
fix it

1070
00:46:57,819 --> 00:47:03,038
I don't expect pull requests for things

1071
00:47:00,279 --> 00:47:06,159
like co2 it is a I would like to say

1072
00:47:03,039 --> 00:47:10,359
it's a well-written Java extension for

1073
00:47:06,159 --> 00:47:12,069
burp suite but it's all the

1074
00:47:10,359 --> 00:47:15,249
documentation for it's really in my head

1075
00:47:12,069 --> 00:47:18,609
so so I don't expect anyone else to be

1076
00:47:15,249 --> 00:47:20,468
able to make sense of my crazy ideas in

1077
00:47:18,609 --> 00:47:22,569
that case anyway

1078
00:47:20,469 --> 00:47:25,359
also though share ideas get together

1079
00:47:22,569 --> 00:47:27,038
with developers of tools and and if you

1080
00:47:25,359 --> 00:47:29,558
have an idea for hey how could we make

1081
00:47:27,039 --> 00:47:31,689
this better share it with them I mean I

1082
00:47:29,559 --> 00:47:33,880
I I'm very passionate about my tools I

1083
00:47:31,689 --> 00:47:34,839
would love for to for people that talk

1084
00:47:33,880 --> 00:47:36,519
to me about and say hey have you thought

1085
00:47:34,839 --> 00:47:38,739
about maybe using it this way or could

1086
00:47:36,519 --> 00:47:41,919
you add this functionality to it I'm

1087
00:47:38,739 --> 00:47:43,119
glad to entertain that and I'm not going

1088
00:47:41,919 --> 00:47:45,129
to say we'll go submit a pull request

1089
00:47:43,119 --> 00:47:48,489
right I will for some things but

1090
00:47:45,130 --> 00:47:50,859
generally not for my burp extensions you

1091
00:47:48,489 --> 00:47:53,619
can help with Doc's like user user

1092
00:47:50,859 --> 00:47:54,909
documentation or videos useful videos

1093
00:47:53,619 --> 00:47:56,919
that sort of thing and just you know

1094
00:47:54,909 --> 00:47:59,709
express some things I know a lot of

1095
00:47:56,919 --> 00:48:02,129
people do I often forget way to way too

1096
00:47:59,709 --> 00:48:05,709
often to say thank you to all of the

1097
00:48:02,130 --> 00:48:07,059
people who have built solutions and put

1098
00:48:05,709 --> 00:48:09,189
them out there for the industry to use

1099
00:48:07,059 --> 00:48:13,749
because that our industry is built on

1100
00:48:09,189 --> 00:48:17,919
open source it really is so that's it

1101
00:48:13,749 --> 00:48:21,339
for my talk my name again is Jason

1102
00:48:17,919 --> 00:48:23,229
Gilliam if you want to chat with me at

1103
00:48:21,339 --> 00:48:26,709
any time either later today or anytime

1104
00:48:23,229 --> 00:48:29,439
afterwards I can be found on a slack

1105
00:48:26,709 --> 00:48:31,448
Channel professional evil calm and my

1106
00:48:29,439 --> 00:48:33,279
github repo is it's Jay Galle and this

1107
00:48:31,449 --> 00:48:35,499
person stole last name if you're trying

1108
00:48:33,279 --> 00:48:38,999
to find me and some of the tools that

1109
00:48:35,499 --> 00:48:38,999
are out there so thank you very much

1110
00:48:40,240 --> 00:48:44,709
thank you so much Jason for contributing

1111
00:48:42,790 --> 00:48:46,839
your knowledge back to the community

1112
00:48:44,710 --> 00:48:48,420
some of those um statements you made

1113
00:48:46,839 --> 00:48:50,799
right at the end that they weren't

1114
00:48:48,420 --> 00:48:52,869
specific to your presentation were

1115
00:48:50,800 --> 00:48:55,630
really hard-hitting for something that

1116
00:48:52,869 --> 00:48:57,550
all of us should keep in mind that this

1117
00:48:55,630 --> 00:48:59,800
community has built on all of our

1118
00:48:57,550 --> 00:49:00,640
contributions and you're an example of

1119
00:48:59,800 --> 00:49:03,760
it right now

1120
00:49:00,640 --> 00:49:06,359
I'm an example of it hosting this this

1121
00:49:03,760 --> 00:49:08,710
room and we're all an example of it

1122
00:49:06,359 --> 00:49:11,460
consuming it and hopefully giving back

1123
00:49:08,710 --> 00:49:11,460
to the community

