1
00:00:10,240 --> 00:00:15,799
okay so I'm getting a yes all right so

2
00:00:13,100 --> 00:00:17,600
I'm gonna go ahead and start so welcome

3
00:00:15,799 --> 00:00:19,310
to a tale of two power shows I'm

4
00:00:17,600 --> 00:00:21,440
Fernando Tomlinson of course this is V

5
00:00:19,310 --> 00:00:23,770
sides Greenville and I just want to

6
00:00:21,440 --> 00:00:26,540
pause real quick and say thanks to the

7
00:00:23,770 --> 00:00:30,259
the people that put this event on this

8
00:00:26,540 --> 00:00:32,000
is amazing this is my second year being

9
00:00:30,260 --> 00:00:34,789
a part of it and I look forward to many

10
00:00:32,000 --> 00:00:37,550
many more of these we need much more of

11
00:00:34,789 --> 00:00:39,860
these in our community of sorts to help

12
00:00:37,550 --> 00:00:41,930
the next generation so I'll start by

13
00:00:39,860 --> 00:00:43,940
kind of introducing myself I'm with the

14
00:00:41,930 --> 00:00:47,060
Department of Defense namely the army

15
00:00:43,940 --> 00:00:49,399
army bill did for 18 years right now I

16
00:00:47,060 --> 00:00:51,680
do forensics and malware analysis

17
00:00:49,399 --> 00:00:53,870
previous to that I was a technical

18
00:00:51,680 --> 00:00:56,329
director of an operation center in which

19
00:00:53,870 --> 00:00:59,269
we did cyber operations of all variants

20
00:00:56,329 --> 00:01:02,570
I also AM a adjunct professor where I

21
00:00:59,270 --> 00:01:04,219
teach Python and digital forensics so I

22
00:01:02,570 --> 00:01:06,229
do that as an effort to kind of give

23
00:01:04,218 --> 00:01:08,000
back if you will

24
00:01:06,229 --> 00:01:10,819
I developed a number of red and blue

25
00:01:08,000 --> 00:01:12,560
team tools all namely in PowerShell you

26
00:01:10,819 --> 00:01:15,889
can tell that I really enjoyed the

27
00:01:12,560 --> 00:01:18,020
language and I wrote a chapter in the

28
00:01:15,889 --> 00:01:20,719
PowerShell conference both volume 2 and

29
00:01:18,020 --> 00:01:22,189
what's interesting about that book is we

30
00:01:20,719 --> 00:01:25,219
make no money from the proceeds all

31
00:01:22,189 --> 00:01:27,648
proceeds go to underrepresented under

32
00:01:25,219 --> 00:01:29,928
privileged individuals so they can get a

33
00:01:27,649 --> 00:01:32,329
start in cybersecurity and I think back

34
00:01:29,929 --> 00:01:35,179
to my initial start in cybersecurity a

35
00:01:32,329 --> 00:01:38,089
really IT in general and I felt like I I

36
00:01:35,179 --> 00:01:39,950
fit that same mode so I just want to do

37
00:01:38,090 --> 00:01:41,779
something for the next generation of

38
00:01:39,950 --> 00:01:43,670
sorts and this was a great way to do it

39
00:01:41,779 --> 00:01:45,319
there's a number of platforms that I

40
00:01:43,670 --> 00:01:47,209
kind of helped built and then you see a

41
00:01:45,319 --> 00:01:48,619
number of sites where I met on on the

42
00:01:47,209 --> 00:01:50,919
web so if you want to connect or you've

43
00:01:48,619 --> 00:01:54,200
already been connecting that's great

44
00:01:50,919 --> 00:01:55,999
alright so here's our agenda as we get

45
00:01:54,200 --> 00:01:58,549
into it all right well well kind of

46
00:01:55,999 --> 00:02:00,318
highlight some some blue uses of the

47
00:01:58,549 --> 00:02:03,409
language some red uses of the language

48
00:02:00,319 --> 00:02:05,959
of sorts and no matter what side of the

49
00:02:03,409 --> 00:02:08,270
fence you feel like you're on it

50
00:02:05,959 --> 00:02:09,940
definitely could be of use to you all

51
00:02:08,270 --> 00:02:12,800
right so let's talk about the language

52
00:02:09,940 --> 00:02:15,980
PowerShell was developed in 2006

53
00:02:12,800 --> 00:02:18,440
originally called monad it was later

54
00:02:15,980 --> 00:02:21,140
renamed to PowerShell um

55
00:02:18,440 --> 00:02:22,700
the language itself is implemented as an

56
00:02:21,140 --> 00:02:25,670
engine that could be from the

57
00:02:22,700 --> 00:02:27,440
perspective of command line or a GUI

58
00:02:25,670 --> 00:02:30,410
variant and generally when we think of

59
00:02:27,440 --> 00:02:34,070
PowerShell we think of how our show exe

60
00:02:30,410 --> 00:02:36,790
PowerShell underscore is see but really

61
00:02:34,070 --> 00:02:40,670
that's the host and engine in the actual

62
00:02:36,790 --> 00:02:44,299
power show language itself is really a

63
00:02:40,670 --> 00:02:47,359
compiled dotnet executable that is

64
00:02:44,300 --> 00:02:49,700
system system that management that

65
00:02:47,360 --> 00:02:52,850
automation that DLL of sorts so as long

66
00:02:49,700 --> 00:02:54,739
as we can take that DLL and apply it to

67
00:02:52,850 --> 00:02:57,049
any other writing area or any other

68
00:02:54,740 --> 00:02:59,210
process we can leverage PowerShell and

69
00:02:57,050 --> 00:03:01,010
the commands that go with it so it's

70
00:02:59,210 --> 00:03:02,180
always interesting when organizations

71
00:03:01,010 --> 00:03:03,890
are trying to limit the use of

72
00:03:02,180 --> 00:03:06,020
PowerShell in the first thing they want

73
00:03:03,890 --> 00:03:07,730
to do is block the executable when

74
00:03:06,020 --> 00:03:10,190
really we should be concentrating on

75
00:03:07,730 --> 00:03:14,149
that DLL of sorts so it's an interactive

76
00:03:10,190 --> 00:03:16,370
command shell so very useful scripting

77
00:03:14,150 --> 00:03:19,160
language much like a simplified c-sharp

78
00:03:16,370 --> 00:03:21,500
if if you're familiar with the language

79
00:03:19,160 --> 00:03:23,470
it also has a built-in capability for

80
00:03:21,500 --> 00:03:25,820
remoting which is powershell remoting

81
00:03:23,470 --> 00:03:31,480
gives us the ability to do it through

82
00:03:25,820 --> 00:03:34,370
HTTP HTTP so we have a SSH like

83
00:03:31,480 --> 00:03:37,700
capability within the language which

84
00:03:34,370 --> 00:03:39,080
also speaks to what makes it great as I

85
00:03:37,700 --> 00:03:42,079
mentioned before PowerShell itself

86
00:03:39,080 --> 00:03:44,870
there's nothing more than cacao net so

87
00:03:42,080 --> 00:03:47,300
because it is that it gives us access to

88
00:03:44,870 --> 00:03:49,760
the dotnet framework which then further

89
00:03:47,300 --> 00:03:52,910
just opens up our abilities within the

90
00:03:49,760 --> 00:03:54,679
language and it is full of objects

91
00:03:52,910 --> 00:03:57,380
everything we do in PowerShell is an

92
00:03:54,680 --> 00:04:00,260
object so if we found ourselves and

93
00:03:57,380 --> 00:04:03,620
let's say a traditional command shell or

94
00:04:00,260 --> 00:04:06,230
bash and we're trying to slice and dice

95
00:04:03,620 --> 00:04:07,940
and get a particular piece of data we

96
00:04:06,230 --> 00:04:10,100
may find ourselves specifically from

97
00:04:07,940 --> 00:04:12,500
bash we may find ourselves setting

98
00:04:10,100 --> 00:04:13,730
ocking and cutting and in all man what

99
00:04:12,500 --> 00:04:16,190
if we're off a little bit we find

100
00:04:13,730 --> 00:04:18,289
ourselves of doing it all over again but

101
00:04:16,190 --> 00:04:20,719
with PowerShell we can select the very

102
00:04:18,290 --> 00:04:22,550
property that we care about and it will

103
00:04:20,720 --> 00:04:24,920
return that because everything is an

104
00:04:22,550 --> 00:04:27,169
object force now the functionalities are

105
00:04:24,920 --> 00:04:32,240
largely broken down into four aspects we

106
00:04:27,169 --> 00:04:37,090
have commandlets which are pre compiled

107
00:04:32,240 --> 00:04:39,319
net items that allow us to do certain

108
00:04:37,090 --> 00:04:41,388
functionality within the language we

109
00:04:39,319 --> 00:04:43,910
have functions that we build ourselves

110
00:04:41,389 --> 00:04:46,789
and/or come with the language reusable

111
00:04:43,910 --> 00:04:48,830
chunks of code we can then turn those

112
00:04:46,789 --> 00:04:51,229
into individual scripts that we can

113
00:04:48,830 --> 00:04:53,508
leverage as need be and then guess what

114
00:04:51,229 --> 00:04:55,159
we can still utilize the native commands

115
00:04:53,509 --> 00:04:56,900
that are already inherent to the

116
00:04:55,160 --> 00:04:59,900
operating system so we don't really lose

117
00:04:56,900 --> 00:05:02,479
out by utilizing power so we really just

118
00:04:59,900 --> 00:05:05,000
gain more so from a blue team

119
00:05:02,479 --> 00:05:07,068
perspective you know right off the bat

120
00:05:05,000 --> 00:05:09,650
what makes it great well when we look at

121
00:05:07,069 --> 00:05:12,199
Windows 7 in 2008 r2 in above it's

122
00:05:09,650 --> 00:05:14,479
already there I don't know about you but

123
00:05:12,199 --> 00:05:16,940
whenever I go to a get-together at a

124
00:05:14,479 --> 00:05:18,740
friend's house I like being able to come

125
00:05:16,940 --> 00:05:20,509
over and they say Fernando don't worry

126
00:05:18,740 --> 00:05:22,430
about bringing anything just just bring

127
00:05:20,509 --> 00:05:24,319
yourself and when we look at jumping on

128
00:05:22,430 --> 00:05:26,479
it specifically a Windows machine when

129
00:05:24,319 --> 00:05:28,280
seven and above we find ourselves with

130
00:05:26,479 --> 00:05:30,050
PowerShell already there so from a blue

131
00:05:28,280 --> 00:05:32,030
team perspective we're not adding

132
00:05:30,050 --> 00:05:33,470
anything else to that operating system

133
00:05:32,030 --> 00:05:35,270
we're just leveraging what's there the

134
00:05:33,470 --> 00:05:37,639
same could be said to the windows api's

135
00:05:35,270 --> 00:05:39,109
all right PowerShell has the ability to

136
00:05:37,639 --> 00:05:41,690
interact with them so we can take

137
00:05:39,110 --> 00:05:44,000
advantage of those pre-compiled things

138
00:05:41,690 --> 00:05:45,440
we have the ability to just import DLL

139
00:05:44,000 --> 00:05:47,630
and then utilize those functions that

140
00:05:45,440 --> 00:05:49,009
are made available we can encrypt that

141
00:05:47,630 --> 00:05:51,020
traffic so I spoke briefly about

142
00:05:49,009 --> 00:05:53,500
PowerShell remoting all right well we

143
00:05:51,020 --> 00:05:55,490
could either have an actual certificate

144
00:05:53,500 --> 00:05:57,770
published or we have a self signed

145
00:05:55,490 --> 00:05:59,509
certificate but we have that SSH light

146
00:05:57,770 --> 00:06:01,849
capability where we can do one to one

147
00:05:59,509 --> 00:06:03,560
machine or we can do one to many and

148
00:06:01,849 --> 00:06:07,460
this is all inherent to the operating

149
00:06:03,560 --> 00:06:10,280
system or rather excuse me the the

150
00:06:07,460 --> 00:06:13,909
language itself now it also gives us the

151
00:06:10,280 --> 00:06:15,559
ability to monitor and track people

152
00:06:13,909 --> 00:06:17,990
trying to abuse it this has gotten

153
00:06:15,560 --> 00:06:19,430
better over the years namely once we

154
00:06:17,990 --> 00:06:22,789
really got into light PowerShell version

155
00:06:19,430 --> 00:06:25,039
5 giving us the ability to truly track

156
00:06:22,789 --> 00:06:28,460
what a person is doing now because we're

157
00:06:25,039 --> 00:06:29,180
in a cat-and-mouse type field as we as

158
00:06:28,460 --> 00:06:31,099
blue teamers

159
00:06:29,180 --> 00:06:34,219
gained another way to track a red

160
00:06:31,099 --> 00:06:36,259
teamers actions they have certainly

161
00:06:34,219 --> 00:06:38,419
increased their tactics as well and and

162
00:06:36,259 --> 00:06:40,339
started trying to bypass it but it has

163
00:06:38,419 --> 00:06:42,500
made it much more difficult for them

164
00:06:40,339 --> 00:06:44,029
than what it was in the past of sorts

165
00:06:42,500 --> 00:06:45,889
and guess what

166
00:06:44,029 --> 00:06:47,479
from a blue team perspective it

167
00:06:45,889 --> 00:06:50,509
your organization can't afford the

168
00:06:47,479 --> 00:06:53,120
latest EDR then we can make something

169
00:06:50,509 --> 00:06:55,699
within power show either from an agent

170
00:06:53,120 --> 00:06:57,409
perspective or agent list and I'll talk

171
00:06:55,699 --> 00:06:59,509
about one of the agent list variants

172
00:06:57,409 --> 00:07:01,400
that I end up making to kind of satisfy

173
00:06:59,509 --> 00:07:04,009
this thing now from a red team

174
00:07:01,400 --> 00:07:06,409
perspective guess what the first three

175
00:07:04,009 --> 00:07:08,330
bullets are the same there's a red

176
00:07:06,409 --> 00:07:11,240
teamer if I don't have to bring anything

177
00:07:08,330 --> 00:07:13,789
that's even better if I can blend in and

178
00:07:11,240 --> 00:07:16,039
live off the land why wouldn't I do that

179
00:07:13,789 --> 00:07:18,378
especially in a large organization where

180
00:07:16,039 --> 00:07:21,080
they may already struggle with what

181
00:07:18,379 --> 00:07:22,699
Norma see is and add arena again same

182
00:07:21,080 --> 00:07:24,289
thing with the api's and the divider can

183
00:07:22,699 --> 00:07:25,520
encrypt mine traffic absolutely I want

184
00:07:24,289 --> 00:07:29,090
to do that I want to make it much more

185
00:07:25,520 --> 00:07:32,270
difficult for the defender now we have

186
00:07:29,090 --> 00:07:33,799
the ability to bypass or really avoid

187
00:07:32,270 --> 00:07:36,289
detection so I kind of talked about

188
00:07:33,800 --> 00:07:39,650
briefly with the new advances with

189
00:07:36,289 --> 00:07:42,860
PowerShell v5 and newer we from a Red

190
00:07:39,650 --> 00:07:44,419
Team perspective can still bypass and

191
00:07:42,860 --> 00:07:46,969
navigate our way through them but it is

192
00:07:44,419 --> 00:07:48,979
much more difficult now we're lucky

193
00:07:46,969 --> 00:07:51,319
enough we find ourselves in an arena

194
00:07:48,979 --> 00:07:53,599
where somebody's using a legacy version

195
00:07:51,319 --> 00:07:55,689
of PowerShell specifically like

196
00:07:53,599 --> 00:07:59,360
PowerShell version 2 which has no

197
00:07:55,689 --> 00:08:00,770
security features built in and then it

198
00:07:59,360 --> 00:08:04,339
just makes it much more difficult for

199
00:08:00,770 --> 00:08:06,560
that blue team to be able to find us

200
00:08:04,339 --> 00:08:08,180
later on all right so why Artie why

201
00:08:06,560 --> 00:08:10,219
would it be running the old stuff well

202
00:08:08,180 --> 00:08:12,699
maybe it's due to the infrastructure

203
00:08:10,219 --> 00:08:16,129
maybe it's due to lack of skill set or

204
00:08:12,699 --> 00:08:17,839
knowledge or understanding of how to

205
00:08:16,129 --> 00:08:20,330
actually upgrade right

206
00:08:17,839 --> 00:08:21,379
and even if organizations are on the

207
00:08:20,330 --> 00:08:23,659
latest and greatest version of

208
00:08:21,379 --> 00:08:26,569
PowerShell they may not even have it

209
00:08:23,659 --> 00:08:28,219
optimally configured to be able to

210
00:08:26,569 --> 00:08:30,560
highlight a number of things that we

211
00:08:28,219 --> 00:08:32,599
would be able to do now one of the

212
00:08:30,560 --> 00:08:35,299
things that are largely great that I

213
00:08:32,599 --> 00:08:37,510
thoroughly enjoy is the ability to do

214
00:08:35,299 --> 00:08:40,779
things without touching disk all right

215
00:08:37,510 --> 00:08:42,860
arguably a red teamers either gonna

216
00:08:40,779 --> 00:08:43,939
execute things that are touching discs

217
00:08:42,860 --> 00:08:45,920
or they're going to execute in the

218
00:08:43,940 --> 00:08:48,170
context of memory if somebody's touching

219
00:08:45,920 --> 00:08:50,149
disk should be much more easier in

220
00:08:48,170 --> 00:08:52,969
theory to find when we get into

221
00:08:50,149 --> 00:08:55,490
executing purely in memory now I kind of

222
00:08:52,970 --> 00:08:57,529
need something to lead me to that system

223
00:08:55,490 --> 00:09:01,640
in order for me to focus on a memory

224
00:08:57,529 --> 00:09:05,060
aspect so with PowerShell being able to

225
00:09:01,640 --> 00:09:08,120
when leveraging that matter that is

226
00:09:05,060 --> 00:09:10,910
great and because it is a true scripting

227
00:09:08,120 --> 00:09:13,160
language it starts to make signatures

228
00:09:10,910 --> 00:09:15,350
really really difficult right

229
00:09:13,160 --> 00:09:17,540
it's not like a particularly compiled

230
00:09:15,350 --> 00:09:19,970
binary of sorts where it's kind of

231
00:09:17,540 --> 00:09:22,730
static in nature unless you recompile it

232
00:09:19,970 --> 00:09:24,200
it's truly a cat-and-mouse thing with

233
00:09:22,730 --> 00:09:27,890
this script because you have the ability

234
00:09:24,200 --> 00:09:30,080
to continuously reshape the arrangement

235
00:09:27,890 --> 00:09:32,449
of the data and really how it's being

236
00:09:30,080 --> 00:09:35,510
called upon so we really start to just

237
00:09:32,450 --> 00:09:37,430
briefly touch some of the good and bad

238
00:09:35,510 --> 00:09:39,529
of it all if you will or really what

239
00:09:37,430 --> 00:09:41,239
makes it great for either side and when

240
00:09:39,529 --> 00:09:43,970
you look at this and really listen to it

241
00:09:41,240 --> 00:09:46,040
you're like oh maybe that shoots before

242
00:09:43,970 --> 00:09:48,230
the other side or what have you and

243
00:09:46,040 --> 00:09:50,779
that's really true and when we look at

244
00:09:48,230 --> 00:09:53,120
it I kind of see it like this where

245
00:09:50,779 --> 00:09:55,850
there's a large subset of what

246
00:09:53,120 --> 00:09:59,450
PowerShell can do that's useful for not

247
00:09:55,850 --> 00:10:02,210
just one side it's really a triad of

248
00:09:59,450 --> 00:10:04,790
sorts that bleeds into other areas it's

249
00:10:02,210 --> 00:10:06,860
really the focus and what you're trying

250
00:10:04,790 --> 00:10:09,650
to do in leveraging what you're trying

251
00:10:06,860 --> 00:10:11,690
to do that really depicts what side

252
00:10:09,650 --> 00:10:14,720
you're doing it from so it's not a

253
00:10:11,690 --> 00:10:16,190
one-size-fits-all type thing now outside

254
00:10:14,720 --> 00:10:18,589
of Red Team Blue Team adjust system

255
00:10:16,190 --> 00:10:21,320
administrators our show also has the

256
00:10:18,589 --> 00:10:24,800
ability to be a little bit more granular

257
00:10:21,320 --> 00:10:26,810
so for example this young man ended up

258
00:10:24,800 --> 00:10:30,050
using some PowerShell so he can control

259
00:10:26,810 --> 00:10:32,420
his Tesla right I'm all about that had

260
00:10:30,050 --> 00:10:35,719
the ability to leverage the language

261
00:10:32,420 --> 00:10:38,569
leverage a subset of api's and whatever

262
00:10:35,720 --> 00:10:40,790
connection excesses he has into his

263
00:10:38,570 --> 00:10:44,660
system and he's using PowerShell to

264
00:10:40,790 --> 00:10:47,480
control this test that is awesome now

265
00:10:44,660 --> 00:10:49,160
that may not be the only case or use

266
00:10:47,480 --> 00:10:52,850
cases of PowerShell it's really an

267
00:10:49,160 --> 00:10:54,560
endless possibility of sorts and no this

268
00:10:52,850 --> 00:10:56,240
is not a dope right literally you could

269
00:10:54,560 --> 00:10:59,630
Google that and you'll be able to see

270
00:10:56,240 --> 00:11:01,160
his github of sorts and if I had a Tesla

271
00:10:59,630 --> 00:11:03,200
I would test it unfortunately I don't

272
00:11:01,160 --> 00:11:06,199
have one so and the take is word that it

273
00:11:03,200 --> 00:11:08,600
actually works the way he said so from a

274
00:11:06,200 --> 00:11:09,740
blue team perspective will start to just

275
00:11:08,600 --> 00:11:12,140
kind of highlight a couple of things

276
00:11:09,740 --> 00:11:13,670
that we can do with it of sorts and then

277
00:11:12,140 --> 00:11:16,160
we'll transition over to the

278
00:11:13,670 --> 00:11:19,520
red things that we can do again not

279
00:11:16,160 --> 00:11:23,449
all-inclusive varying levels of degrees

280
00:11:19,520 --> 00:11:26,150
if you will but nonetheless giving some

281
00:11:23,450 --> 00:11:28,970
exposure to it so when we look at just

282
00:11:26,150 --> 00:11:31,280
hashing period right this is something

283
00:11:28,970 --> 00:11:33,080
we typically do when we're we're hunting

284
00:11:31,280 --> 00:11:35,270
or we have some type of indicator of

285
00:11:33,080 --> 00:11:37,790
compromise whether we're using some

286
00:11:35,270 --> 00:11:40,939
other framework like Yarra or some other

287
00:11:37,790 --> 00:11:44,030
reputation-based thing hashes could

288
00:11:40,940 --> 00:11:46,370
arguably be part of how we do things so

289
00:11:44,030 --> 00:11:47,990
from the perspective of hatching we have

290
00:11:46,370 --> 00:11:50,180
an input whether it's some form of

291
00:11:47,990 --> 00:11:52,730
binary file what-have-you we have a

292
00:11:50,180 --> 00:11:54,469
process in which a undergoes the

293
00:11:52,730 --> 00:11:57,650
algorithm function and then we get this

294
00:11:54,470 --> 00:12:00,560
one-way computation that comes out and

295
00:11:57,650 --> 00:12:02,689
gives us a high confidence that when we

296
00:12:00,560 --> 00:12:05,150
see this it is that system now there are

297
00:12:02,690 --> 00:12:07,430
collisions but again based upon the

298
00:12:05,150 --> 00:12:09,709
algorithm in which we're doing those are

299
00:12:07,430 --> 00:12:11,089
a little bit far and few but when we get

300
00:12:09,710 --> 00:12:13,520
these hashes and we want to be able to

301
00:12:11,090 --> 00:12:15,590
utilize them to look at systems or look

302
00:12:13,520 --> 00:12:17,840
at items we can utilize some power show

303
00:12:15,590 --> 00:12:21,020
so there's a command lit get file hash

304
00:12:17,840 --> 00:12:23,780
and we can specify the individual file

305
00:12:21,020 --> 00:12:26,569
binary whatever it is and by default

306
00:12:23,780 --> 00:12:28,640
it's gonna come back at sha-256 but as

307
00:12:26,570 --> 00:12:31,160
you can see in the second example we can

308
00:12:28,640 --> 00:12:33,680
give it the parameter algorithm and then

309
00:12:31,160 --> 00:12:35,329
we can specify what algorithm we

310
00:12:33,680 --> 00:12:39,500
wouldn't want to actually do it in so

311
00:12:35,330 --> 00:12:42,440
md5 sha-1 sha-256 Triple DES is that

312
00:12:39,500 --> 00:12:44,060
adventure thing right now when it comes

313
00:12:42,440 --> 00:12:46,520
to actually doing more than one file

314
00:12:44,060 --> 00:12:48,530
well we can we have a couple options to

315
00:12:46,520 --> 00:12:50,720
do it one way we can do it is we can get

316
00:12:48,530 --> 00:12:53,930
a listing of the directory and then we

317
00:12:50,720 --> 00:12:55,720
could pipe it to the next command so as

318
00:12:53,930 --> 00:12:58,969
you recall I talked about power show

319
00:12:55,720 --> 00:13:01,520
being object-oriented so when we get a

320
00:12:58,970 --> 00:13:04,310
listing of our directory those are

321
00:13:01,520 --> 00:13:06,890
objects and then when we utilize pipe

322
00:13:04,310 --> 00:13:08,780
we're sending all those objects to

323
00:13:06,890 --> 00:13:10,670
another command for them to actually do

324
00:13:08,780 --> 00:13:14,209
something with it and in that case we're

325
00:13:10,670 --> 00:13:15,979
able to get a directory of files

326
00:13:14,210 --> 00:13:18,680
and actually return hashes against them

327
00:13:15,980 --> 00:13:21,170
now when we look at cool I want to do

328
00:13:18,680 --> 00:13:23,420
this a little bit larger in scale how

329
00:13:21,170 --> 00:13:24,770
would I go about doing it well you

330
00:13:23,420 --> 00:13:27,139
probably want to start with a list of

331
00:13:24,770 --> 00:13:28,850
well-known hashes NSR row

332
00:13:27,139 --> 00:13:31,399
publishes those things once a quarter

333
00:13:28,850 --> 00:13:34,029
that's a good starting point or if you

334
00:13:31,399 --> 00:13:35,929
have some other type of reputation based

335
00:13:34,029 --> 00:13:37,100
subscription service that you can pull

336
00:13:35,929 --> 00:13:39,949
up from that's great too

337
00:13:37,100 --> 00:13:41,989
now you would probably want to do the

338
00:13:39,949 --> 00:13:44,029
whole disk depending on your

339
00:13:41,989 --> 00:13:46,579
infrastructure your architecture that

340
00:13:44,029 --> 00:13:50,019
may be very taxing and not something

341
00:13:46,579 --> 00:13:52,579
that you want to tackle instead a

342
00:13:50,019 --> 00:13:55,910
compromise would be well let's just hash

343
00:13:52,579 --> 00:13:58,189
every process that runs and then if it's

344
00:13:55,910 --> 00:13:59,629
unique add it to our list if it's

345
00:13:58,189 --> 00:14:01,248
something we've already seen just pull

346
00:13:59,629 --> 00:14:03,379
from our list and then we continuously

347
00:14:01,249 --> 00:14:06,319
build like that that becomes to be a

348
00:14:03,379 --> 00:14:09,040
little less processor intensive so from

349
00:14:06,319 --> 00:14:11,599
a PowerShell perspective we can utilize

350
00:14:09,040 --> 00:14:14,029
the eight or nine lines that we have in

351
00:14:11,600 --> 00:14:16,609
that red box there so essentially we're

352
00:14:14,029 --> 00:14:19,100
gonna retrieve every process we're gonna

353
00:14:16,609 --> 00:14:20,959
sort them based upon unique and then

354
00:14:19,100 --> 00:14:23,029
we're gonna loop through each one of

355
00:14:20,959 --> 00:14:25,339
them and we're gonna get the foul hash

356
00:14:23,029 --> 00:14:27,980
there are some protecting processes that

357
00:14:25,339 --> 00:14:29,839
my privilege level or the privilege

358
00:14:27,980 --> 00:14:31,850
level which are executing may not have

359
00:14:29,839 --> 00:14:33,949
access to so I want to be able to

360
00:14:31,850 --> 00:14:35,989
highlight those and that's where in our

361
00:14:33,949 --> 00:14:39,229
if else statement we see that were than

362
00:14:35,989 --> 00:14:41,329
ascended to a log file so again we're

363
00:14:39,230 --> 00:14:43,189
being a little bit directed and now how

364
00:14:41,329 --> 00:14:45,199
we're doing this as opposed to doing the

365
00:14:43,189 --> 00:14:47,209
whole disk again my architecture really

366
00:14:45,199 --> 00:14:50,089
depicts which method I could actually

367
00:14:47,209 --> 00:14:52,368
use now once I have these I still need

368
00:14:50,089 --> 00:14:54,669
to actually validate that these are good

369
00:14:52,369 --> 00:14:56,989
or not maybe I have some in-house

370
00:14:54,669 --> 00:14:59,179
subscription service maybe I want to

371
00:14:56,989 --> 00:15:00,410
send it out somewhere so if you want to

372
00:14:59,179 --> 00:15:02,089
send it out somewhere what are those

373
00:15:00,410 --> 00:15:04,069
things is virustotal wrong right

374
00:15:02,089 --> 00:15:05,929
indifferent all right and virustotal has

375
00:15:04,069 --> 00:15:07,910
a free api so we can do this from the

376
00:15:05,929 --> 00:15:10,069
command line perspective now there's

377
00:15:07,910 --> 00:15:12,709
limitations the limitations for requests

378
00:15:10,069 --> 00:15:15,110
for a minute 5700 and some change

379
00:15:12,709 --> 00:15:17,388
requests a day and we see the monthly

380
00:15:15,110 --> 00:15:19,699
quota so being able to use some power

381
00:15:17,389 --> 00:15:22,429
shown here we're able to grab the hashes

382
00:15:19,699 --> 00:15:24,439
that we have already seen if we have it

383
00:15:22,429 --> 00:15:26,209
Randle's against virustotal

384
00:15:24,439 --> 00:15:28,969
then we're gonna send them out the virus

385
00:15:26,209 --> 00:15:29,118
or no need for us to send the same you

386
00:15:28,970 --> 00:15:32,179
know

387
00:15:29,119 --> 00:15:34,189
SVC host with the same hash out the

388
00:15:32,179 --> 00:15:36,549
virus total of 500 times right and

389
00:15:34,189 --> 00:15:38,599
because we know we can do for a minute

390
00:15:36,549 --> 00:15:40,959
automatically go ahead and split it up

391
00:15:38,600 --> 00:15:42,820
into every 15 seconds submitting

392
00:15:40,960 --> 00:15:45,190
all right so we see in this case I'm

393
00:15:42,820 --> 00:15:47,800
submitting to hashes the estimate at

394
00:15:45,190 --> 00:15:51,279
runtime that's 30 seconds and it doesn't

395
00:15:47,800 --> 00:15:52,719
matter of this md5 sha-1 ever right of

396
00:15:51,279 --> 00:15:53,500
sorts and I'm returning that data back

397
00:15:52,720 --> 00:15:54,880
out now

398
00:15:53,500 --> 00:15:58,270
when we submit this the virustotal we

399
00:15:54,880 --> 00:16:00,520
get roughly 50 AVS or so that come back

400
00:15:58,270 --> 00:16:03,279
and and really highlight to us whether

401
00:16:00,520 --> 00:16:05,260
they believe it's malicious or they

402
00:16:03,279 --> 00:16:07,209
haven't seen it yet now just because

403
00:16:05,260 --> 00:16:10,240
they don't render it malicious doesn't

404
00:16:07,209 --> 00:16:12,010
mean that it's not but you know we take

405
00:16:10,240 --> 00:16:15,970
everything we have with a grain of salt

406
00:16:12,010 --> 00:16:18,189
as far as a indication now when it comes

407
00:16:15,970 --> 00:16:20,230
back to list it comes back to us in an

408
00:16:18,190 --> 00:16:23,140
object with a number of properties and

409
00:16:20,230 --> 00:16:25,990
we see that first column which is really

410
00:16:23,140 --> 00:16:28,480
a property you see the AV the second

411
00:16:25,990 --> 00:16:30,459
column we see what version of AV that

412
00:16:28,480 --> 00:16:33,130
third column which is another property

413
00:16:30,459 --> 00:16:36,399
we see whether it returned true or false

414
00:16:33,130 --> 00:16:39,490
false being that it doesn't think that

415
00:16:36,399 --> 00:16:41,589
it's malicious true being that it deems

416
00:16:39,490 --> 00:16:43,779
it malicious and then that fourth column

417
00:16:41,589 --> 00:16:46,330
we start to see what they know that

418
00:16:43,779 --> 00:16:50,050
malware family or variant is right and

419
00:16:46,330 --> 00:16:53,110
that's gonna vary between a vs all right

420
00:16:50,050 --> 00:16:55,240
we see what the actual engine is and we

421
00:16:53,110 --> 00:16:57,370
see the actual hatch now from that

422
00:16:55,240 --> 00:16:59,800
perspective I am now able to kind of

423
00:16:57,370 --> 00:17:03,160
quickly see like hey this thing's

424
00:16:59,800 --> 00:17:05,589
running in my environment out of 50 AVS

425
00:17:03,160 --> 00:17:07,959
a couple of them think it's bad let me

426
00:17:05,589 --> 00:17:11,069
put this in a bucket where I now go and

427
00:17:07,959 --> 00:17:14,230
pull that binary and/or do a little bit

428
00:17:11,069 --> 00:17:16,389
more analysis on it and then largely if

429
00:17:14,230 --> 00:17:18,819
I start to group my processes across my

430
00:17:16,390 --> 00:17:21,490
infrastructure from my architecture how

431
00:17:18,819 --> 00:17:22,839
many other instances of this binary is

432
00:17:21,490 --> 00:17:24,849
actually running right and we're

433
00:17:22,839 --> 00:17:27,040
applicable we start to whitelist it so

434
00:17:24,849 --> 00:17:29,500
that becomes a technique that we can use

435
00:17:27,040 --> 00:17:32,110
utilizing straight powershell across our

436
00:17:29,500 --> 00:17:33,790
infrastructure well something else we

437
00:17:32,110 --> 00:17:37,689
can do a PowerShell we can get processes

438
00:17:33,790 --> 00:17:40,120
we can get net TCP connections which is

439
00:17:37,690 --> 00:17:42,220
essentially our next step right and our

440
00:17:40,120 --> 00:17:43,629
processes is essentially our task list

441
00:17:42,220 --> 00:17:47,650
and when we look at that we get

442
00:17:43,630 --> 00:17:50,110
something like this the top figure shows

443
00:17:47,650 --> 00:17:52,150
the process and how it returns the

444
00:17:50,110 --> 00:17:54,669
bottom one shows the net TCP connection

445
00:17:52,150 --> 00:17:58,030
and how it returns and as an animal

446
00:17:54,670 --> 00:17:59,920
I may find myself looking at netstat

447
00:17:58,030 --> 00:18:02,649
seeing something with an established

448
00:17:59,920 --> 00:18:04,120
connection seeing a binary or appeared

449
00:18:02,650 --> 00:18:06,730
tied to it and I won't have to

450
00:18:04,120 --> 00:18:07,870
transition back to my processes and then

451
00:18:06,730 --> 00:18:10,210
get a little bit more information

452
00:18:07,870 --> 00:18:12,310
they're like okay cool what time this

453
00:18:10,210 --> 00:18:13,960
kick off what kick it off like what's

454
00:18:12,310 --> 00:18:17,080
the parent whether any command-line

455
00:18:13,960 --> 00:18:19,210
arguments with it and as an analyst I

456
00:18:17,080 --> 00:18:22,570
get a little confused some time right

457
00:18:19,210 --> 00:18:25,150
was that Pitts 1920 or was that 90 120

458
00:18:22,570 --> 00:18:27,189
right so from the perspective of putting

459
00:18:25,150 --> 00:18:29,470
it together I started thinking about

460
00:18:27,190 --> 00:18:31,900
this all right we got Reese's Cups we

461
00:18:29,470 --> 00:18:34,080
get Reese's Pieces somebody decided to

462
00:18:31,900 --> 00:18:37,060
put it together and I tell you that

463
00:18:34,080 --> 00:18:39,070
genius right so end up taking that same

464
00:18:37,060 --> 00:18:40,720
concept and coming up with get verbose

465
00:18:39,070 --> 00:18:42,820
process they're really what this starts

466
00:18:40,720 --> 00:18:44,530
to do is reduce him in it oversight

467
00:18:42,820 --> 00:18:46,419
gives us a clearer picture from an

468
00:18:44,530 --> 00:18:48,820
analyst perspective and then oh by the

469
00:18:46,420 --> 00:18:50,830
way if you have some other saying that

470
00:18:48,820 --> 00:18:54,040
you'd like to import this data into we

471
00:18:50,830 --> 00:18:55,990
can get it out as a CSV XML and make it

472
00:18:54,040 --> 00:18:57,879
already in a possible manner because

473
00:18:55,990 --> 00:18:59,890
again we're talking about objects here

474
00:18:57,880 --> 00:19:02,110
so we have properties that we can tag

475
00:18:59,890 --> 00:19:03,490
those fields with and when we get that

476
00:19:02,110 --> 00:19:06,939
back we have something like this now

477
00:19:03,490 --> 00:19:09,460
this is actually showing two individual

478
00:19:06,940 --> 00:19:12,460
items if you will so now right upfront

479
00:19:09,460 --> 00:19:14,740
for each one I get the IPS associated

480
00:19:12,460 --> 00:19:18,010
with it in the forks I also get whatever

481
00:19:14,740 --> 00:19:19,750
the processes is or are rather in the

482
00:19:18,010 --> 00:19:22,270
process I'd be along with any

483
00:19:19,750 --> 00:19:24,940
command-line arguments we also get the

484
00:19:22,270 --> 00:19:26,680
hash associated with the item right we

485
00:19:24,940 --> 00:19:29,290
get the same thing for the parent as

486
00:19:26,680 --> 00:19:32,260
well so from an analyst perspective I'm

487
00:19:29,290 --> 00:19:34,810
starting to take some of my human nature

488
00:19:32,260 --> 00:19:36,490
or possible human oversight out of it

489
00:19:34,810 --> 00:19:38,500
and I'm starting to get this in one

490
00:19:36,490 --> 00:19:40,570
clear thing and oh by the way if I'm

491
00:19:38,500 --> 00:19:41,560
gonna import this into some log

492
00:19:40,570 --> 00:19:45,550
aggregation server

493
00:19:41,560 --> 00:19:47,379
now I've already manipulated the data

494
00:19:45,550 --> 00:19:49,090
and made it a little bit more readable

495
00:19:47,380 --> 00:19:52,780
as opposed to have to try to pull them

496
00:19:49,090 --> 00:19:54,820
back together later on from a forensics

497
00:19:52,780 --> 00:19:57,100
standpoint if there's anybody out there

498
00:19:54,820 --> 00:19:59,590
doing dead box forensics largely

499
00:19:57,100 --> 00:20:02,889
speaking regardless of the case we find

500
00:19:59,590 --> 00:20:05,679
ourselves getting a large subset of the

501
00:20:02,890 --> 00:20:08,889
same data every time and then we start

502
00:20:05,680 --> 00:20:11,110
branching off based upon whatever

503
00:20:08,889 --> 00:20:13,120
knowledge we have about the hard drive

504
00:20:11,110 --> 00:20:15,939
or the case of which we're working so

505
00:20:13,120 --> 00:20:17,860
quema would automate a profiler this is

506
00:20:15,940 --> 00:20:20,019
gonna parse the drive looking for a

507
00:20:17,860 --> 00:20:22,689
typical data that we're looking for I've

508
00:20:20,019 --> 00:20:25,419
only really worked with 500 gigs or so

509
00:20:22,690 --> 00:20:27,100
and in doing so it's about four or five

510
00:20:25,419 --> 00:20:29,380
minutes to do that and when we get that

511
00:20:27,100 --> 00:20:31,178
back we get that back as a report so now

512
00:20:29,380 --> 00:20:34,269
when we're talking about initial triage

513
00:20:31,179 --> 00:20:36,970
I'm able to get this done fairly quickly

514
00:20:34,269 --> 00:20:39,639
get some huge data points about the

515
00:20:36,970 --> 00:20:42,759
drive and characterization give that to

516
00:20:39,639 --> 00:20:44,199
my management to allowed them to feed it

517
00:20:42,759 --> 00:20:46,629
to whoever they need to for the time

518
00:20:44,200 --> 00:20:48,279
being which allows me to then go a

519
00:20:46,629 --> 00:20:50,168
little bit deeper all right all too many

520
00:20:48,279 --> 00:20:51,909
times we got this hot case going on and

521
00:20:50,169 --> 00:20:53,049
somebody's over you like did you find

522
00:20:51,909 --> 00:20:54,039
anything yet did you find anything

523
00:20:53,049 --> 00:20:56,259
what's taking so long

524
00:20:54,039 --> 00:20:58,899
we're cool let me give you this initial

525
00:20:56,259 --> 00:21:01,330
assessment very quickly right in an

526
00:20:58,899 --> 00:21:03,008
automated fashion and then I'm gonna go

527
00:21:01,330 --> 00:21:04,899
a little bit deeper based upon whether

528
00:21:03,009 --> 00:21:07,029
every case is so here's my name's that

529
00:21:04,899 --> 00:21:08,799
we're we're treatment again largely

530
00:21:07,029 --> 00:21:12,009
things that we're gonna do every time

531
00:21:08,799 --> 00:21:14,500
from a perspective of dead box forensics

532
00:21:12,009 --> 00:21:16,629
and how do we end up executing this well

533
00:21:14,500 --> 00:21:19,000
whatever you use to mount the drive

534
00:21:16,629 --> 00:21:20,949
whether it's ftk or something else right

535
00:21:19,000 --> 00:21:23,529
does it matter to automate a profiler

536
00:21:20,950 --> 00:21:25,809
as long as the drive is mounted you run

537
00:21:23,529 --> 00:21:27,309
the script you're gonna analyze the

538
00:21:25,809 --> 00:21:28,360
results again it's gonna come out as a

539
00:21:27,309 --> 00:21:30,789
flat text file

540
00:21:28,360 --> 00:21:33,100
all right and I say relax but largely

541
00:21:30,789 --> 00:21:35,620
you're gonna go back and do some deep

542
00:21:33,100 --> 00:21:37,389
dive forensics right but because you're

543
00:21:35,620 --> 00:21:39,668
doing this is such a quick amount of

544
00:21:37,389 --> 00:21:41,949
time you couldn't go in you know do some

545
00:21:39,669 --> 00:21:45,100
yoga or whatever the case before going

546
00:21:41,950 --> 00:21:47,830
back to you the next part of it so the

547
00:21:45,100 --> 00:21:49,719
UI of sorts there's nothing special but

548
00:21:47,830 --> 00:21:52,779
it gives us four centage all right

549
00:21:49,720 --> 00:21:54,669
because it could take a little bit of a

550
00:21:52,779 --> 00:21:56,590
minute outside of that 500 gigs

551
00:21:54,669 --> 00:21:58,419
depending on how big it is and then when

552
00:21:56,590 --> 00:22:01,029
we get it back we see it's gonna be a

553
00:21:58,419 --> 00:22:03,009
flat textile of sorts and again I'm

554
00:22:01,029 --> 00:22:05,850
looking for the same generic data that I

555
00:22:03,009 --> 00:22:08,799
look for every time right I want to

556
00:22:05,850 --> 00:22:09,759
automate the boring stuff so I can get

557
00:22:08,799 --> 00:22:11,710
to the one-off

558
00:22:09,759 --> 00:22:13,620
or the deep dive stuff and automated

559
00:22:11,710 --> 00:22:18,730
profiler allows us to do that

560
00:22:13,620 --> 00:22:21,789
now well we look at DNS right DNS a

561
00:22:18,730 --> 00:22:22,179
really sinkhole in becomes a mitigation

562
00:22:21,789 --> 00:22:24,190
tech

563
00:22:22,179 --> 00:22:27,190
meek that we could use when we have

564
00:22:24,190 --> 00:22:28,600
beaconing domains or infrastructure

565
00:22:27,190 --> 00:22:31,029
that's beginning out to malicious

566
00:22:28,600 --> 00:22:33,939
domains right so let's explain the DNS

567
00:22:31,029 --> 00:22:35,799
process largely speaking we have a user

568
00:22:33,940 --> 00:22:38,350
starting in the bottom left we have a

569
00:22:35,799 --> 00:22:39,999
user that navigates to Google right and

570
00:22:38,350 --> 00:22:41,830
the first thing is gonna do is it's

571
00:22:39,999 --> 00:22:43,539
gonna search there localhost file and

572
00:22:41,830 --> 00:22:45,610
then the media's gonna check their local

573
00:22:43,539 --> 00:22:47,710
DNS an intermedia is gonna query their

574
00:22:45,610 --> 00:22:49,479
DNS server that supply they'd have

575
00:22:47,710 --> 00:22:51,490
needed that DNS server will check its

576
00:22:49,480 --> 00:22:53,289
cache you've needed their DNS server

577
00:22:51,490 --> 00:22:55,480
we'll see if it's authoritative and then

578
00:22:53,289 --> 00:22:57,279
it will utilize for tour routes however

579
00:22:55,480 --> 00:23:00,100
it's configured so when we look at how

580
00:22:57,279 --> 00:23:02,980
do we implement some type of mitigation

581
00:23:00,100 --> 00:23:04,899
when we have systems beginning out two

582
00:23:02,980 --> 00:23:07,149
domains there's really two spots that we

583
00:23:04,899 --> 00:23:09,279
can do that and we see those areas which

584
00:23:07,149 --> 00:23:11,918
are now highlighted into we could either

585
00:23:09,279 --> 00:23:13,509
affect the localhost file because we see

586
00:23:11,919 --> 00:23:16,059
in that process that it checks the host

587
00:23:13,509 --> 00:23:18,730
file but when I have a domain worth of

588
00:23:16,059 --> 00:23:21,879
stuff I'm not gonna go out there and do

589
00:23:18,730 --> 00:23:24,009
this on every system maybe one offs yes

590
00:23:21,879 --> 00:23:26,259
well how do I do it from a larger scale

591
00:23:24,009 --> 00:23:27,759
well then I'm gonna do it at my DNS

592
00:23:26,259 --> 00:23:29,889
server and what I'm gonna do is I'm

593
00:23:27,759 --> 00:23:32,110
gonna create a Thor tative records to

594
00:23:29,889 --> 00:23:34,449
say whatever that domain is I'm

595
00:23:32,110 --> 00:23:36,549
authoritative for and when I'm returning

596
00:23:34,450 --> 00:23:39,039
the IP back to the system that's looking

597
00:23:36,549 --> 00:23:41,200
for the IP I'm gonna say that it's gonna

598
00:23:39,039 --> 00:23:44,769
be quad zeros right essentially

599
00:23:41,200 --> 00:23:45,909
rendering that as a sinkhole domain now

600
00:23:44,769 --> 00:23:47,409
and that doesn't make sense

601
00:23:45,909 --> 00:23:49,419
let's look at this mural here is a

602
00:23:47,409 --> 00:23:51,700
little picture we have a person that's

603
00:23:49,419 --> 00:23:53,409
starting on the left in a car which we

604
00:23:51,700 --> 00:23:55,450
see all we don't see Cody's off-screen

605
00:23:53,409 --> 00:23:57,159
and he's trying to get to the other side

606
00:23:55,450 --> 00:24:00,100
where those buildings are at there's a

607
00:23:57,159 --> 00:24:01,990
gigantic hole in the ground essentially

608
00:24:00,100 --> 00:24:05,168
he can't get to the other side because

609
00:24:01,990 --> 00:24:05,559
that whole sinkhole is preventing him to

610
00:24:05,169 --> 00:24:07,269
do it

611
00:24:05,559 --> 00:24:08,799
now listen engage the fact there's a

612
00:24:07,269 --> 00:24:11,049
little bit on the side in which he could

613
00:24:08,799 --> 00:24:12,940
drive around largely speaking that's

614
00:24:11,049 --> 00:24:15,490
what we're doing when we sinkhole a

615
00:24:12,940 --> 00:24:18,190
domain so from the perspective of this

616
00:24:15,490 --> 00:24:20,919
we would execute invoke same codomain

617
00:24:18,190 --> 00:24:22,840
right it's gonna download a blacklist of

618
00:24:20,919 --> 00:24:25,570
domain if we have it configured for that

619
00:24:22,840 --> 00:24:27,610
or we could input one-off domains that

620
00:24:25,570 --> 00:24:29,499
we want to blacklist it's gonna create

621
00:24:27,610 --> 00:24:30,789
for look up zones for those domains and

622
00:24:29,499 --> 00:24:32,859
we're gonna create a pointer record

623
00:24:30,789 --> 00:24:34,960
that's gonna be pointed at quad zeros

624
00:24:32,859 --> 00:24:36,129
and again this is all automated in

625
00:24:34,960 --> 00:24:38,650
fashion

626
00:24:36,130 --> 00:24:41,530
we start to see those domains or those

627
00:24:38,650 --> 00:24:43,690
records out to the side and then if we

628
00:24:41,530 --> 00:24:45,910
look in the middle there we see our a

629
00:24:43,690 --> 00:24:47,260
records pointing back to quad zeros and

630
00:24:45,910 --> 00:24:49,180
that's what we give back to the system

631
00:24:47,260 --> 00:24:52,060
and the system does it make it there now

632
00:24:49,180 --> 00:24:54,040
this is a method and technique we can

633
00:24:52,060 --> 00:24:55,899
use as part of the overall mitigation

634
00:24:54,040 --> 00:24:57,340
strategy especially when we start

635
00:24:55,900 --> 00:24:58,900
looking at we should be doing things

636
00:24:57,340 --> 00:25:01,800
from a defense-in-depth

637
00:24:58,900 --> 00:25:03,970
perspective but again we're utilizing

638
00:25:01,800 --> 00:25:08,290
PowerShell to be able to do that

639
00:25:03,970 --> 00:25:09,730
PowerShell event logs write event logs

640
00:25:08,290 --> 00:25:12,430
and PowerShell we have two different

641
00:25:09,730 --> 00:25:15,010
ways to parse those get win event get

642
00:25:12,430 --> 00:25:17,830
event log get event log is really XP

643
00:25:15,010 --> 00:25:19,830
2003 that's deprecated but it still

644
00:25:17,830 --> 00:25:23,230
works for things like security

645
00:25:19,830 --> 00:25:25,629
application system logs get one event is

646
00:25:23,230 --> 00:25:27,760
more modern in nature so we get the

647
00:25:25,630 --> 00:25:29,920
event tracing logs and a number of other

648
00:25:27,760 --> 00:25:33,670
things both of them allow us to do them

649
00:25:29,920 --> 00:25:36,220
local and remotely also get one event

650
00:25:33,670 --> 00:25:38,590
allows us to take exported logs and

651
00:25:36,220 --> 00:25:40,840
import them in and parse them this is

652
00:25:38,590 --> 00:25:43,209
largely important to write because I

653
00:25:40,840 --> 00:25:43,899
could be struggling with a system in one

654
00:25:43,210 --> 00:25:46,420
location

655
00:25:43,900 --> 00:25:48,490
I could export those logs give them to

656
00:25:46,420 --> 00:25:51,490
you you can utilize some PowerShell and

657
00:25:48,490 --> 00:25:54,250
parse them or we could write parsers in

658
00:25:51,490 --> 00:25:57,520
PowerShell and then running against our

659
00:25:54,250 --> 00:25:59,980
log set all right this is interesting so

660
00:25:57,520 --> 00:26:01,690
looking at event logs we largely get

661
00:25:59,980 --> 00:26:03,520
something like this right off the bed

662
00:26:01,690 --> 00:26:05,620
I'm looking at security log we're

663
00:26:03,520 --> 00:26:07,540
looking at 46 88 that's gonna be

664
00:26:05,620 --> 00:26:09,489
processed creation that's an important

665
00:26:07,540 --> 00:26:11,770
log in my opinion it is not enabled by

666
00:26:09,490 --> 00:26:13,780
default but what does this screen really

667
00:26:11,770 --> 00:26:16,120
telling me it's telling me your time in

668
00:26:13,780 --> 00:26:19,000
which a process started and essentially

669
00:26:16,120 --> 00:26:21,340
that's it right so if I want to open

670
00:26:19,000 --> 00:26:25,450
that up and go a little bit deeper well

671
00:26:21,340 --> 00:26:27,879
I can utilize select object and I only

672
00:26:25,450 --> 00:26:30,160
did that on one but I selected every

673
00:26:27,880 --> 00:26:32,830
property that's available and this is

674
00:26:30,160 --> 00:26:35,970
returning to me in a format list now we

675
00:26:32,830 --> 00:26:39,250
see properties like message version

676
00:26:35,970 --> 00:26:40,900
level right the meat and potatoes of

677
00:26:39,250 --> 00:26:43,510
what I really am looking for is in the

678
00:26:40,900 --> 00:26:46,900
message field in the message field but

679
00:26:43,510 --> 00:26:49,090
guess what there's not a clear out the

680
00:26:46,900 --> 00:26:49,810
box method for me to just select those

681
00:26:49,090 --> 00:26:52,300
very things

682
00:26:49,810 --> 00:26:54,610
in the message field right so stuff like

683
00:26:52,300 --> 00:26:56,139
the account name the process name the

684
00:26:54,610 --> 00:26:58,659
parent process those are the things that

685
00:26:56,140 --> 00:27:01,510
I would want so how do we do that

686
00:26:58,660 --> 00:27:04,510
well there's another property called

687
00:27:01,510 --> 00:27:07,390
properties in which we can go deeper and

688
00:27:04,510 --> 00:27:09,220
parse that message field this is one of

689
00:27:07,390 --> 00:27:11,500
those things that we do at once and then

690
00:27:09,220 --> 00:27:12,940
we use it many times we wouldn't need to

691
00:27:11,500 --> 00:27:16,090
do this with every log that we're

692
00:27:12,940 --> 00:27:18,460
curious or interested in so once I'm

693
00:27:16,090 --> 00:27:21,040
utilizing the properties within the

694
00:27:18,460 --> 00:27:23,260
property field I can now pull out the

695
00:27:21,040 --> 00:27:25,629
Buried things that I care about so we

696
00:27:23,260 --> 00:27:27,550
see the process the command line the

697
00:27:25,630 --> 00:27:29,200
account the creator we see all those

698
00:27:27,550 --> 00:27:31,480
things that were normally in the message

699
00:27:29,200 --> 00:27:33,160
mill that I have now pulled out now I've

700
00:27:31,480 --> 00:27:34,990
renamed them to make them make a little

701
00:27:33,160 --> 00:27:37,780
bit more sense for me but guess what

702
00:27:34,990 --> 00:27:41,500
once I built it once I can take any

703
00:27:37,780 --> 00:27:43,149
event log with 46 88 and I can run it

704
00:27:41,500 --> 00:27:45,550
through that parser and it will present

705
00:27:43,150 --> 00:27:47,620
that data for me right I build it once I

706
00:27:45,550 --> 00:27:49,899
use it many times and now I see things

707
00:27:47,620 --> 00:27:52,060
that may pop out to me in this case a

708
00:27:49,900 --> 00:27:54,580
guy using netcat going out of the quad

709
00:27:52,060 --> 00:27:56,800
force and what kicked it off well it was

710
00:27:54,580 --> 00:27:59,139
a command prompt right maybe benign

711
00:27:56,800 --> 00:28:00,639
maybe not but now I'm trying to make it

712
00:27:59,140 --> 00:28:02,410
a little bit clearer for me as an

713
00:28:00,640 --> 00:28:04,900
analyst alright and we're doing this

714
00:28:02,410 --> 00:28:08,290
again in PowerShell now there's also out

715
00:28:04,900 --> 00:28:11,890
grid view how grid view isn't it is in

716
00:28:08,290 --> 00:28:14,920
excel like view within powershell

717
00:28:11,890 --> 00:28:17,740
alright and if we don't care for that we

718
00:28:14,920 --> 00:28:20,980
can also export them as CSV XML and then

719
00:28:17,740 --> 00:28:26,230
put it in our log aggregation system of

720
00:28:20,980 --> 00:28:28,240
choice so admission having an agent or

721
00:28:26,230 --> 00:28:29,710
EDR end up coming up with PowerShell

722
00:28:28,240 --> 00:28:32,110
Rapid Response enterprise-wide

723
00:28:29,710 --> 00:28:34,180
capability enables me to find some

724
00:28:32,110 --> 00:28:34,870
anomalies right now we're doing 20 items

725
00:28:34,180 --> 00:28:37,620
of interest

726
00:28:34,870 --> 00:28:40,750
it's extendable in a sense of modulars

727
00:28:37,620 --> 00:28:42,939
modules rather so it's modular that

728
00:28:40,750 --> 00:28:45,130
somebody else can make a module it just

729
00:28:42,940 --> 00:28:47,740
imported into the framework it utilizes

730
00:28:45,130 --> 00:28:50,860
the pool capability so it's not going to

731
00:28:47,740 --> 00:28:53,950
be a near-real-time thing it's gonna be

732
00:28:50,860 --> 00:28:56,379
a matter of how often do I exercise it

733
00:28:53,950 --> 00:28:58,680
where I go out there and pull so there

734
00:28:56,380 --> 00:29:00,820
is a chance I may miss something it

735
00:28:58,680 --> 00:29:03,370
retrieves data puts it in a sequel

736
00:29:00,820 --> 00:29:05,620
database so now I can look

737
00:29:03,370 --> 00:29:08,260
historical data and I'm not only

738
00:29:05,620 --> 00:29:10,479
confined to that one individual pool it

739
00:29:08,260 --> 00:29:12,100
utilizes a network logon so I don't have

740
00:29:10,480 --> 00:29:13,240
to worry about spraying creds all over

741
00:29:12,100 --> 00:29:15,520
the place and somebody trying to take

742
00:29:13,240 --> 00:29:17,470
advantage of it with many cats so here

743
00:29:15,520 --> 00:29:19,389
are those things we talked about that it

744
00:29:17,470 --> 00:29:21,880
grabs right out the gate and again

745
00:29:19,390 --> 00:29:28,240
module is gonna be built and just added

746
00:29:21,880 --> 00:29:31,260
to this framework all right so let's

747
00:29:28,240 --> 00:29:31,260
demo this

748
00:29:59,380 --> 00:30:05,169
ah I know what it's call it now

749
00:30:02,620 --> 00:30:06,879
oh the straight-up party alright so what

750
00:30:05,169 --> 00:30:09,370
I was thinking this is another machine

751
00:30:06,880 --> 00:30:11,820
that I have that's what I'm gonna run it

752
00:30:09,370 --> 00:30:11,820
against

753
00:30:28,100 --> 00:30:33,810
all right so once we get it running we

754
00:30:30,960 --> 00:30:35,580
have the ability to utilize systems

755
00:30:33,810 --> 00:30:38,070
within a domain just Auto pool we can

756
00:30:35,580 --> 00:30:40,800
import a list based upon a file we can

757
00:30:38,070 --> 00:30:42,120
feed it cider we can do the local system

758
00:30:40,800 --> 00:30:44,460
or we can do IPs

759
00:30:42,120 --> 00:30:52,649
individually I'm gonna do individually

760
00:30:44,460 --> 00:30:56,790
and that system that other one it's

761
00:30:52,650 --> 00:30:59,730
gonna be dyed 200 all right so if I gave

762
00:30:56,790 --> 00:31:01,590
it a larger subset of systems it's gonna

763
00:30:59,730 --> 00:31:03,090
be multi-threaded in the sense that it's

764
00:31:01,590 --> 00:31:05,520
gonna go out and get this information

765
00:31:03,090 --> 00:31:09,000
come back to a general little general

766
00:31:05,520 --> 00:31:11,790
collection point and then get added into

767
00:31:09,000 --> 00:31:13,770
the actual files in which I'll then go

768
00:31:11,790 --> 00:31:15,840
back and look at if necessary so while

769
00:31:13,770 --> 00:31:18,450
it's going out and doing that let's look

770
00:31:15,840 --> 00:31:22,230
at the structure so as the data comes

771
00:31:18,450 --> 00:31:23,910
back the dates are each a folder is

772
00:31:22,230 --> 00:31:25,680
created for each date and time that I

773
00:31:23,910 --> 00:31:29,790
actually ran it right so you can call

774
00:31:25,680 --> 00:31:31,470
those actual pools so today this is the

775
00:31:29,790 --> 00:31:33,570
one that we're running now and these are

776
00:31:31,470 --> 00:31:36,690
starting to come in again we're only

777
00:31:33,570 --> 00:31:38,669
doing it against one machine but from a

778
00:31:36,690 --> 00:31:41,520
historical perspective I can go back and

779
00:31:38,670 --> 00:31:44,610
grab a pool from a specific day and if I

780
00:31:41,520 --> 00:31:47,490
don't want to do the CVS CSV thing well

781
00:31:44,610 --> 00:31:50,070
it also gets added to a sequel database

782
00:31:47,490 --> 00:31:51,600
all right and within that database I can

783
00:31:50,070 --> 00:31:53,939
go back and I can link it to some other

784
00:31:51,600 --> 00:31:56,580
front-end of sorts or I can come in here

785
00:31:53,940 --> 00:31:58,830
and just look at it from a GUI

786
00:31:56,580 --> 00:32:01,800
perspective or do sequel commands from a

787
00:31:58,830 --> 00:32:04,949
command line perspective but I have a

788
00:32:01,800 --> 00:32:11,639
few options and how I actually parks and

789
00:32:04,950 --> 00:32:13,500
really look at that data right and once

790
00:32:11,640 --> 00:32:16,020
it comes back like I said it goes to a

791
00:32:13,500 --> 00:32:19,230
landing zone and then it goes into the

792
00:32:16,020 --> 00:32:21,720
next part where it starts to add things

793
00:32:19,230 --> 00:32:23,060
to the actual sequel database of sorts

794
00:32:21,720 --> 00:32:30,040
and at that point it's no longer

795
00:32:23,060 --> 00:32:33,820
connected to another machine right but

796
00:32:30,040 --> 00:32:39,639
fact that we have them as CSVs allows us

797
00:32:33,820 --> 00:32:41,260
to really get as granular with them as

798
00:32:39,640 --> 00:32:43,300
we choose right so we're not just

799
00:32:41,260 --> 00:32:44,890
limited well it only comes back in this

800
00:32:43,300 --> 00:32:46,810
format so I'm stuck looking at it there

801
00:32:44,890 --> 00:32:49,030
alright no we can really do a little bit

802
00:32:46,810 --> 00:32:52,270
more with it from that perspective so

803
00:32:49,030 --> 00:32:54,220
that's gonna be part two again we can do

804
00:32:52,270 --> 00:32:56,560
straight-up pull from a domain that I'm

805
00:32:54,220 --> 00:32:58,780
already a part of I can feed it a text

806
00:32:56,560 --> 00:33:04,960
file for the IPS I can do an individual

807
00:32:58,780 --> 00:33:07,389
IP I get options alright so invoke

808
00:33:04,960 --> 00:33:09,610
suspend process this essentially

809
00:33:07,390 --> 00:33:11,320
attaches a big bugger to a process so

810
00:33:09,610 --> 00:33:12,820
let's say I'm trying to better

811
00:33:11,320 --> 00:33:14,679
understand a process running in my

812
00:33:12,820 --> 00:33:17,350
environment maybe you're trying to do

813
00:33:14,680 --> 00:33:20,290
some reverse engineering we can attach a

814
00:33:17,350 --> 00:33:22,179
bugger to a process to suspend it this

815
00:33:20,290 --> 00:33:24,550
allows us to maybe dump the process

816
00:33:22,180 --> 00:33:26,770
maybe it starts real quick starts a

817
00:33:24,550 --> 00:33:28,210
another process injects itself and then

818
00:33:26,770 --> 00:33:29,860
terminates before we can do anything

819
00:33:28,210 --> 00:33:31,900
with it well we can go ahead and suspend

820
00:33:29,860 --> 00:33:33,939
that process so then we can dump it and

821
00:33:31,900 --> 00:33:36,850
get a little bit more with it or if it's

822
00:33:33,940 --> 00:33:39,430
one of those things where anytime we

823
00:33:36,850 --> 00:33:42,159
terminate the process it has some type

824
00:33:39,430 --> 00:33:44,320
of evasion in which it monitors for that

825
00:33:42,160 --> 00:33:46,600
and then starts responding the process

826
00:33:44,320 --> 00:33:48,040
of itself well rather than continuously

827
00:33:46,600 --> 00:33:49,990
fight that game while we try to figure

828
00:33:48,040 --> 00:33:52,420
out what's going on let's just suspend

829
00:33:49,990 --> 00:33:55,090
it alright so then we're still getting

830
00:33:52,420 --> 00:33:57,190
after some mitigation of sorts while we

831
00:33:55,090 --> 00:34:00,120
try to better understand it now let's

832
00:33:57,190 --> 00:34:00,120
demo what this looks like

833
00:34:01,260 --> 00:34:11,980
alright so from this perspective I'm

834
00:34:04,150 --> 00:34:14,290
gonna have this binary run and large the

835
00:34:11,980 --> 00:34:17,918
only thing is gonna do is it's going to

836
00:34:14,290 --> 00:34:21,880
spit out whatever number NSA is beaming

837
00:34:17,918 --> 00:34:23,199
at home it's benign in nature all right

838
00:34:21,880 --> 00:34:26,169
and I'm gonna stop this because it's

839
00:34:23,199 --> 00:34:29,350
starting to import alright so we're

840
00:34:26,168 --> 00:34:33,179
gonna go in actually we got to get the

841
00:34:29,350 --> 00:34:36,719
process or the pit so we'll come in

842
00:34:33,179 --> 00:34:36,720
we'll get the pit

843
00:34:36,989 --> 00:34:45,388
and this pit is 86 56 so then I'll come

844
00:34:41,190 --> 00:34:50,069
in I'll run this code I just need to

845
00:34:45,389 --> 00:34:53,669
feed it to I be 86 56 it's gonna attach

846
00:34:50,069 --> 00:34:55,980
a debugger now I need to have sed debug

847
00:34:53,668 --> 00:34:58,049
privileges right to be able to do this

848
00:34:55,980 --> 00:35:00,450
but we see now that I've attached a

849
00:34:58,050 --> 00:35:03,089
debugger to that process it's in a

850
00:35:00,450 --> 00:35:05,129
suspended state and off to the left we

851
00:35:03,089 --> 00:35:07,170
no longer have it saying it's beginning

852
00:35:05,130 --> 00:35:08,880
home it is stopped now

853
00:35:07,170 --> 00:35:10,950
we've dumped the process we've done

854
00:35:08,880 --> 00:35:12,329
whatever analysis we want to do or we're

855
00:35:10,950 --> 00:35:14,460
at the next point where we want to

856
00:35:12,329 --> 00:35:17,550
better understand it we can go ahead and

857
00:35:14,460 --> 00:35:19,589
we could resume it so essentially we're

858
00:35:17,550 --> 00:35:22,950
going to resume process we're gonna feed

859
00:35:19,589 --> 00:35:25,890
it whatever ID and then we're gonna go

860
00:35:22,950 --> 00:35:27,839
in and remove that debugger and we see

861
00:35:25,890 --> 00:35:30,480
off to the left it continues with

862
00:35:27,839 --> 00:35:33,990
beginning home if you will all right so

863
00:35:30,480 --> 00:35:38,069
that's actually invoke suspend process

864
00:35:33,990 --> 00:35:40,109
again just really highlighting how we

865
00:35:38,069 --> 00:35:42,299
can do some analysis reverse engineering

866
00:35:40,109 --> 00:35:44,940
better understanding buying areas of

867
00:35:42,299 --> 00:35:47,720
sorts if you've ever been on a linux

868
00:35:44,940 --> 00:35:50,579
machine or you have a forward-facing

869
00:35:47,720 --> 00:35:52,919
internet-capable machine you might have

870
00:35:50,579 --> 00:35:54,510
installed it failed to ban well I wanted

871
00:35:52,920 --> 00:35:56,430
to do something like this for a Windows

872
00:35:54,510 --> 00:35:57,930
perspective and everything that I seen

873
00:35:56,430 --> 00:36:00,390
didn't really get after everything I

874
00:35:57,930 --> 00:36:02,160
wanted to so I ended up making this so

875
00:36:00,390 --> 00:36:04,799
we have a configurable based upon

876
00:36:02,160 --> 00:36:06,569
thresholds or how long we want it to

877
00:36:04,799 --> 00:36:08,670
actually be timed out the blocks

878
00:36:06,569 --> 00:36:11,940
actually go to the Windows Event log and

879
00:36:08,670 --> 00:36:14,190
the firewall but also a sequel database

880
00:36:11,940 --> 00:36:17,250
and then we have the ability of maybe to

881
00:36:14,190 --> 00:36:21,540
remove all IPs in a very quick manner so

882
00:36:17,250 --> 00:36:24,480
we'll go through we'll demoed this so

883
00:36:21,540 --> 00:36:26,910
I'm gonna do invoke cell tube and I'll

884
00:36:24,480 --> 00:36:29,700
come here I can write out the gate start

885
00:36:26,910 --> 00:36:32,308
monitoring I can list banned IPS and our

886
00:36:29,700 --> 00:36:35,040
statuses I can list all white listed IPS

887
00:36:32,309 --> 00:36:37,079
or if I'm in a disarray on my network I

888
00:36:35,040 --> 00:36:39,000
can just unbanned them all very quickly

889
00:36:37,079 --> 00:36:41,670
I'm gonna come in and I'm gonna start

890
00:36:39,000 --> 00:36:43,380
monitoring let's get rid of my beacon

891
00:36:41,670 --> 00:36:45,000
thing over here I'm gonna come in I'm

892
00:36:43,380 --> 00:36:47,760
gonna start monitoring and it says hey

893
00:36:45,000 --> 00:36:50,130
your IPS will be a whitelist it do you

894
00:36:47,760 --> 00:36:50,940
want to add any more no I don't want to

895
00:36:50,130 --> 00:36:52,590
add any

896
00:36:50,940 --> 00:36:54,510
all right so it comes through and it

897
00:36:52,590 --> 00:36:57,090
tells me all the IPS associated with my

898
00:36:54,510 --> 00:36:58,890
current system so I'm gonna let it go I

899
00:36:57,090 --> 00:37:02,580
have it running rather aggressively

900
00:36:58,890 --> 00:37:06,120
where it checks every 20 seconds for a

901
00:37:02,580 --> 00:37:09,000
system and I have it I think for they

902
00:37:06,120 --> 00:37:11,190
log on to four attempts those sorts so

903
00:37:09,000 --> 00:37:18,240
I'm gonna come in and I'm gonna do this

904
00:37:11,190 --> 00:37:26,850
a couple of times to try to get forward

905
00:37:18,240 --> 00:37:28,589
to catch here all right so I have it at

906
00:37:26,850 --> 00:37:30,480
20 seconds so at 20 seconds it'll come

907
00:37:28,590 --> 00:37:33,990
back to say it's monitoring still or

908
00:37:30,480 --> 00:37:36,090
whatever the case and if I have caught

909
00:37:33,990 --> 00:37:40,290
it within the specific time frame it

910
00:37:36,090 --> 00:37:42,870
will go ahead and block or invoke that

911
00:37:40,290 --> 00:37:46,100
ban on that system which we see it has

912
00:37:42,870 --> 00:37:49,980
right it is banned one 55.2 hundred I

913
00:37:46,100 --> 00:37:57,690
hear in my event I'm sorry my firewall

914
00:37:49,980 --> 00:38:01,490
and when i refresh here in a second I

915
00:37:57,690 --> 00:38:01,490
should be able to see that's

916
00:38:14,930 --> 00:38:16,990
you

917
00:38:23,820 --> 00:38:28,200
right so there's that ban and because I

918
00:38:26,730 --> 00:38:31,200
have it 20 seconds

919
00:38:28,200 --> 00:38:33,569
to only ban it it deleted it so if i

920
00:38:31,200 --> 00:38:36,299
refresh again it will be gone now I

921
00:38:33,570 --> 00:38:38,010
needed it to actually log something so

922
00:38:36,300 --> 00:38:40,440
what I did was I actually voted to the

923
00:38:38,010 --> 00:38:43,680
event log as well so we see to provider

924
00:38:40,440 --> 00:38:45,540
is PS bill to ban we have an event ID

925
00:38:43,680 --> 00:38:47,460
that I just made up and then I have

926
00:38:45,540 --> 00:38:49,380
pertinent information that it was

927
00:38:47,460 --> 00:38:51,360
blocked here's when it expired

928
00:38:49,380 --> 00:38:55,050
it was the firewall rule associated with

929
00:38:51,360 --> 00:38:57,270
it and now if I needed to I could take

930
00:38:55,050 --> 00:38:59,910
that sequel database I could somewhere

931
00:38:57,270 --> 00:39:01,650
else to a front-end or I can just take

932
00:38:59,910 --> 00:39:04,140
the event log and pipe that straight to

933
00:39:01,650 --> 00:39:05,870
my log aggregation service and when we

934
00:39:04,140 --> 00:39:08,910
look at it from the perspective of

935
00:39:05,870 --> 00:39:11,250
listing our band IPS it will tell me

936
00:39:08,910 --> 00:39:14,549
that I only had one that I've ever been

937
00:39:11,250 --> 00:39:17,310
since the Declaration or creation of

938
00:39:14,550 --> 00:39:19,620
that sequel database I see that IP I see

939
00:39:17,310 --> 00:39:21,840
what it was at it I see when it expired

940
00:39:19,620 --> 00:39:23,670
it tells me it was removed so it will

941
00:39:21,840 --> 00:39:25,620
continuously build onto that sequel

942
00:39:23,670 --> 00:39:28,650
database of sorts each coming up with

943
00:39:25,620 --> 00:39:31,740
their own unique band item beep so

944
00:39:28,650 --> 00:39:34,320
that's invoke build a band again windows

945
00:39:31,740 --> 00:39:37,080
let's pick a perspective powershell

946
00:39:34,320 --> 00:39:40,700
public facing systems that are just

947
00:39:37,080 --> 00:39:44,700
getting beat up all day every day all

948
00:39:40,700 --> 00:39:48,689
right and really I missed this aspect of

949
00:39:44,700 --> 00:39:50,460
it why is this a thing well public

950
00:39:48,690 --> 00:39:53,100
facing I have somebody out there that's

951
00:39:50,460 --> 00:39:54,930
trying to access it all day and they're

952
00:39:53,100 --> 00:39:57,930
probably out there just brute forcing so

953
00:39:54,930 --> 00:40:00,240
the red signifies failed logins and then

954
00:39:57,930 --> 00:40:03,089
big it to the end we got a green logon

955
00:40:00,240 --> 00:40:05,990
meaning that it was successful well with

956
00:40:03,090 --> 00:40:08,670
a VOC bill to ban I say hey if I get

957
00:40:05,990 --> 00:40:11,399
rebuilt log on or three authentication

958
00:40:08,670 --> 00:40:14,460
attempts within this period of time then

959
00:40:11,400 --> 00:40:16,110
that IP for this period of time maybe

960
00:40:14,460 --> 00:40:19,170
it's three months maybe it's four months

961
00:40:16,110 --> 00:40:20,760
or whatever the case so at three fellow

962
00:40:19,170 --> 00:40:23,040
gongs within that period of time and

963
00:40:20,760 --> 00:40:25,290
both bill to ban kicked in and now that

964
00:40:23,040 --> 00:40:27,480
machine is not able to talk to my

965
00:40:25,290 --> 00:40:29,430
machine anymore so we can lessen that

966
00:40:27,480 --> 00:40:31,050
but we also start to gain and tell the

967
00:40:29,430 --> 00:40:35,310
far as who's out there trying to do what

968
00:40:31,050 --> 00:40:37,350
to us all right so cool so that really

969
00:40:35,310 --> 00:40:38,730
how I did the the blue aspect

970
00:40:37,350 --> 00:40:40,890
some of the things we can do with

971
00:40:38,730 --> 00:40:43,080
PowerShell let's get into the red aspect

972
00:40:40,890 --> 00:40:44,730
fairly quickly here all right so we have

973
00:40:43,080 --> 00:40:45,420
data storage and when we look at data

974
00:40:44,730 --> 00:40:48,300
storage

975
00:40:45,420 --> 00:40:49,890
this is typically like stages so how

976
00:40:48,300 --> 00:40:52,110
would that work well we would take the

977
00:40:49,890 --> 00:40:52,680
data that binary we would convert it to

978
00:40:52,110 --> 00:40:55,620
bytes

979
00:40:52,680 --> 00:40:58,109
Somerton base64 and story or maybe we do

980
00:40:55,620 --> 00:40:59,549
hex and then basics before or whatever

981
00:40:58,110 --> 00:41:01,620
you just look through that process a

982
00:40:59,550 --> 00:41:03,300
number of times well if we're talking

983
00:41:01,620 --> 00:41:05,670
about storing it

984
00:41:03,300 --> 00:41:08,520
where will we store it well really

985
00:41:05,670 --> 00:41:10,350
anywhere that we can put data on a

986
00:41:08,520 --> 00:41:12,930
Windows machine and we could also

987
00:41:10,350 --> 00:41:15,299
retrieve it the registry active

988
00:41:12,930 --> 00:41:18,089
directory we got access there event logs

989
00:41:15,300 --> 00:41:21,500
awesome data stream kikyo's you name it

990
00:41:18,090 --> 00:41:25,710
right and we're talking about stage

991
00:41:21,500 --> 00:41:28,050
right like I gain access I'd then have

992
00:41:25,710 --> 00:41:30,870
it stored somewhere and then on some

993
00:41:28,050 --> 00:41:34,470
predetermined time I have myself or this

994
00:41:30,870 --> 00:41:36,299
system reach out grab this one line

995
00:41:34,470 --> 00:41:38,370
stage of that probably is nothing more

996
00:41:36,300 --> 00:41:42,000
than an IP address and a file to

997
00:41:38,370 --> 00:41:43,890
download and then execute now there's

998
00:41:42,000 --> 00:41:47,160
somebody catches this stager what do I

999
00:41:43,890 --> 00:41:50,279
lose maybe a domain maybe an IP address

1000
00:41:47,160 --> 00:41:52,020
but that's it right it's not like I've

1001
00:41:50,280 --> 00:41:54,180
already got on this system and just

1002
00:41:52,020 --> 00:41:56,430
brought the whole tooth tool set at one

1003
00:41:54,180 --> 00:41:59,390
time I get on the system surveyed it and

1004
00:41:56,430 --> 00:42:02,609
now we're going to the next aspect of it

1005
00:41:59,390 --> 00:42:05,310
well Active Directory from a enterprise

1006
00:42:02,610 --> 00:42:08,960
perspective these are containers largely

1007
00:42:05,310 --> 00:42:11,970
driven in organizational units users

1008
00:42:08,960 --> 00:42:14,250
computers groups all these objects this

1009
00:42:11,970 --> 00:42:16,470
is the nucleus of sorts when we talk

1010
00:42:14,250 --> 00:42:19,050
about authentication for a Windows

1011
00:42:16,470 --> 00:42:21,990
environment Enterprise what's

1012
00:42:19,050 --> 00:42:24,210
interesting is that these objects have

1013
00:42:21,990 --> 00:42:27,240
properties and the properties are the

1014
00:42:24,210 --> 00:42:30,390
sum of roughly 50 or so for every user

1015
00:42:27,240 --> 00:42:31,830
some of them are shown by default when

1016
00:42:30,390 --> 00:42:34,109
we're in Active Directory users and

1017
00:42:31,830 --> 00:42:36,360
computers others we have to pull out

1018
00:42:34,110 --> 00:42:38,820
because they're not by default now

1019
00:42:36,360 --> 00:42:40,440
domain users by default can read these

1020
00:42:38,820 --> 00:42:41,460
properties and requires elevator rights

1021
00:42:40,440 --> 00:42:43,980
to alter them

1022
00:42:41,460 --> 00:42:45,690
so from the perspective of utilizing

1023
00:42:43,980 --> 00:42:47,730
PowerShell there's a commandment get a V

1024
00:42:45,690 --> 00:42:49,440
user with in Active Directory module

1025
00:42:47,730 --> 00:42:50,609
that allows us to interact with Active

1026
00:42:49,440 --> 00:42:54,359
Directory

1027
00:42:50,609 --> 00:42:56,940
like to utilize the division property to

1028
00:42:54,359 --> 00:42:59,160
be able to put my code in for storage

1029
00:42:56,940 --> 00:43:02,249
why because it's not shown by default

1030
00:42:59,160 --> 00:43:04,710
and largely organizations don't use it

1031
00:43:02,249 --> 00:43:06,720
nor do they know it even exists and if

1032
00:43:04,710 --> 00:43:09,630
it's not the division property there's

1033
00:43:06,720 --> 00:43:11,339
also probably easily ten or some other

1034
00:43:09,630 --> 00:43:13,319
properties that are useful as well

1035
00:43:11,339 --> 00:43:15,839
what's interesting about the division

1036
00:43:13,319 --> 00:43:18,450
property is that it starts to give us or

1037
00:43:15,839 --> 00:43:21,180
each property gives a gives us a set

1038
00:43:18,450 --> 00:43:23,549
amount of characters that you can put in

1039
00:43:21,180 --> 00:43:25,410
so if I'm trying to do an actual binary

1040
00:43:23,549 --> 00:43:28,140
for whatever reason well maybe I don't

1041
00:43:25,410 --> 00:43:29,999
want to do the employee number property

1042
00:43:28,140 --> 00:43:31,558
maybe I want to stick to division or

1043
00:43:29,999 --> 00:43:34,348
something else if I'm trying to do a

1044
00:43:31,559 --> 00:43:37,470
short one or maybe an employee number

1045
00:43:34,349 --> 00:43:40,079
but nonetheless it's in a place in which

1046
00:43:37,470 --> 00:43:42,509
you have to be looking to actually see

1047
00:43:40,079 --> 00:43:44,670
it now we can do the same thing with the

1048
00:43:42,509 --> 00:43:48,809
registry we know the registry is a

1049
00:43:44,670 --> 00:43:51,150
mounting of stuff really data within the

1050
00:43:48,809 --> 00:43:55,019
Windows machine from this perspective we

1051
00:43:51,150 --> 00:43:57,210
can create a key value and then put in

1052
00:43:55,019 --> 00:43:59,308
our base 64 encode is a value data

1053
00:43:57,210 --> 00:44:01,079
now the nav name comes across this and

1054
00:43:59,309 --> 00:44:03,630
they see it you're probably like wow

1055
00:44:01,079 --> 00:44:05,940
that data looks weird what is this

1056
00:44:03,630 --> 00:44:08,759
so in order for us to hide this a little

1057
00:44:05,940 --> 00:44:10,650
bit more right we notice right above my

1058
00:44:08,759 --> 00:44:14,819
basically four code there's a value not

1059
00:44:10,650 --> 00:44:17,400
set what we can do is as we implement or

1060
00:44:14,819 --> 00:44:19,650
really store this data we could Pat it

1061
00:44:17,400 --> 00:44:22,319
with a subset of characters and what I'm

1062
00:44:19,650 --> 00:44:24,420
doing is putting value not set in the

1063
00:44:22,319 --> 00:44:27,210
data field and then I'm patting it a

1064
00:44:24,420 --> 00:44:29,640
hundred and sixty no characters and then

1065
00:44:27,210 --> 00:44:31,559
I'm putting my base 64 there so from the

1066
00:44:29,640 --> 00:44:33,569
aspect of an admin who just happens to

1067
00:44:31,559 --> 00:44:36,450
see this they may not think twice about

1068
00:44:33,569 --> 00:44:38,730
it oh it's a key I mean I'm sorry about

1069
00:44:36,450 --> 00:44:39,450
you and there's no value set all right

1070
00:44:38,730 --> 00:44:41,339
I'll keep going

1071
00:44:39,450 --> 00:44:44,819
now they double-click and interact with

1072
00:44:41,339 --> 00:44:48,960
a value they'll see it but again in a

1073
00:44:44,819 --> 00:44:51,900
mountain of keys with no insight into

1074
00:44:48,960 --> 00:44:54,029
key creation or alteration um this is a

1075
00:44:51,900 --> 00:44:54,869
good thing I can let it sit there for

1076
00:44:54,029 --> 00:44:56,160
ever

1077
00:44:54,869 --> 00:44:59,579
this becomes a good space for

1078
00:44:56,160 --> 00:45:01,618
persistence as well now from the

1079
00:44:59,579 --> 00:45:03,329
perspective of port scanning we can do

1080
00:45:01,619 --> 00:45:04,809
that with proxy I don't be used in math

1081
00:45:03,329 --> 00:45:08,079
or some other type

1082
00:45:04,809 --> 00:45:10,329
right this allows me to see massage a

1083
00:45:08,079 --> 00:45:12,940
port see if it's actually open from

1084
00:45:10,329 --> 00:45:14,740
powershell v5 and newer we have get net

1085
00:45:12,940 --> 00:45:17,769
connection this is going to do a full

1086
00:45:14,740 --> 00:45:20,169
scan with an auto close it also pings to

1087
00:45:17,769 --> 00:45:21,669
target beforehand so early careful here

1088
00:45:20,170 --> 00:45:25,390
just a little bit slower we could

1089
00:45:21,670 --> 00:45:27,940
utilize the net sockets client class

1090
00:45:25,390 --> 00:45:29,200
from dot next this works with version 2

1091
00:45:27,940 --> 00:45:32,079
or newer because we have the dotnet

1092
00:45:29,200 --> 00:45:33,970
framework about 3.5 this is no do a full

1093
00:45:32,079 --> 00:45:35,799
scan but it leaves it open so we

1094
00:45:33,970 --> 00:45:37,569
actually need to go in there and close

1095
00:45:35,799 --> 00:45:38,980
it when we're done with it we can also

1096
00:45:37,569 --> 00:45:41,170
do some banner grafts

1097
00:45:38,980 --> 00:45:43,059
alright so this is great because maybe I

1098
00:45:41,170 --> 00:45:44,470
don't have telnet on my machine you know

1099
00:45:43,059 --> 00:45:47,200
that becomes a method in which I've used

1100
00:45:44,470 --> 00:45:49,029
to do some banner grabs or in math or

1101
00:45:47,200 --> 00:45:50,950
whatever the case I can just take down

1102
00:45:49,029 --> 00:45:53,410
show that's already there and start

1103
00:45:50,950 --> 00:45:54,848
banner grabbing across right and then

1104
00:45:53,410 --> 00:45:56,200
it's somebody who's doing feet men what

1105
00:45:54,849 --> 00:45:58,299
does that look like could you be even

1106
00:45:56,200 --> 00:46:00,308
able to tell so that look for nine in

1107
00:45:58,299 --> 00:46:01,799
nature right I don't know that's

1108
00:46:00,309 --> 00:46:04,539
something that's of interest because

1109
00:46:01,799 --> 00:46:07,089
again we're able to do so much with

1110
00:46:04,539 --> 00:46:14,200
PowerShell so let's look at what this

1111
00:46:07,089 --> 00:46:16,150
looks like for us all right so when we

1112
00:46:14,200 --> 00:46:18,848
look at the port scan one I'm talking

1113
00:46:16,150 --> 00:46:20,410
like twenty six lines all right now can

1114
00:46:18,849 --> 00:46:22,990
probably get this down a little bit more

1115
00:46:20,410 --> 00:46:25,690
and really it's 18 lines that I get some

1116
00:46:22,990 --> 00:46:28,269
parameter stuff up here of sorts so I'm

1117
00:46:25,690 --> 00:46:30,849
gonna do invoke port scan I'm gonna

1118
00:46:28,269 --> 00:46:32,288
specify the system now I can do more

1119
00:46:30,849 --> 00:46:34,650
than one system but I'm only going one

1120
00:46:32,289 --> 00:46:37,839
right now and I'm not going to do all

1121
00:46:34,650 --> 00:46:39,730
65,000 UDP and TCP ports I'm gonna be

1122
00:46:37,839 --> 00:46:44,799
very targeting what I'm looking for I'm

1123
00:46:39,730 --> 00:46:47,890
gonna do 2281 35 4 4 3 4 5 right it

1124
00:46:44,799 --> 00:46:50,349
we're specifically looking for those

1125
00:46:47,890 --> 00:46:52,390
things now this is gonna take a quick

1126
00:46:50,349 --> 00:46:55,839
minute and we see that the first

1127
00:46:52,390 --> 00:46:58,808
property is our IP we see the port and

1128
00:46:55,839 --> 00:47:01,029
we see if it was successful or not so on

1129
00:46:58,809 --> 00:47:03,880
that system that I was just scanning we

1130
00:47:01,029 --> 00:47:06,759
see all those ports are open except 443

1131
00:47:03,880 --> 00:47:08,950
now I've I had no indication because I

1132
00:47:06,759 --> 00:47:11,890
get eighty and four four five back I

1133
00:47:08,950 --> 00:47:13,598
might start to think I'm sorry not 81

1134
00:47:11,890 --> 00:47:15,220
thirty-five been four four five back I

1135
00:47:13,599 --> 00:47:17,079
might start to think that this is the

1136
00:47:15,220 --> 00:47:18,040
Windows machine right as I'm taking

1137
00:47:17,079 --> 00:47:20,560
notes and really try

1138
00:47:18,040 --> 00:47:23,020
characterizing now from a better grab

1139
00:47:20,560 --> 00:47:26,290
perspective right a little bit more

1140
00:47:23,020 --> 00:47:30,759
we're talking roughly 60 lines but I'm

1141
00:47:26,290 --> 00:47:33,040
gonna do the same ones all right

1142
00:47:30,760 --> 00:47:36,010
and this time I'm gonna see if I can get

1143
00:47:33,040 --> 00:47:39,610
a banner on any of those services so I

1144
00:47:36,010 --> 00:47:41,830
can further characterize the system all

1145
00:47:39,610 --> 00:47:44,110
right so we got too bad all right we got

1146
00:47:41,830 --> 00:47:46,180
the TTL as well so if I'm interested in

1147
00:47:44,110 --> 00:47:47,950
trying to understand TTL for Windows

1148
00:47:46,180 --> 00:47:50,730
versus a mix box

1149
00:47:47,950 --> 00:47:53,470
maybe I start to use that too I'm also

1150
00:47:50,730 --> 00:47:57,610
strengthen my case but nonetheless I see

1151
00:47:53,470 --> 00:48:01,600
you on 22 we got ssh 2.0 flow ssh bit

1152
00:47:57,610 --> 00:48:03,610
buys ssh win SS when sshd

1153
00:48:01,600 --> 00:48:05,620
now that starts to tell me this is the

1154
00:48:03,610 --> 00:48:08,950
Windows machine if I was unfamiliar with

1155
00:48:05,620 --> 00:48:11,589
that I'd go out and um look on the web

1156
00:48:08,950 --> 00:48:13,540
and look at that software to see if

1157
00:48:11,590 --> 00:48:15,700
there's different variants of it now

1158
00:48:13,540 --> 00:48:17,350
that's not enough for me port 80

1159
00:48:15,700 --> 00:48:19,750
actually returned a banner for me as

1160
00:48:17,350 --> 00:48:22,770
well and I'm getting Microsoft is and I

1161
00:48:19,750 --> 00:48:25,710
see the Virgin right so I'm utilizing

1162
00:48:22,770 --> 00:48:28,420
PowerShell to be able to move this right

1163
00:48:25,710 --> 00:48:30,820
nothing special just whatever is

1164
00:48:28,420 --> 00:48:34,390
built-in to be able to do this and airy

1165
00:48:30,820 --> 00:48:42,070
target of sorts living off the land so

1166
00:48:34,390 --> 00:48:45,549
this is good alright and we have a

1167
00:48:42,070 --> 00:48:47,710
simple HTTP server so if you're coming

1168
00:48:45,550 --> 00:48:49,150
from a mixed background or typically do

1169
00:48:47,710 --> 00:48:51,070
your thing on mix from Red Team

1170
00:48:49,150 --> 00:48:53,800
perspective you know we have the Python

1171
00:48:51,070 --> 00:48:55,840
simple HTTP server ended up coming up

1172
00:48:53,800 --> 00:48:58,210
with the PowerShell theory of it as well

1173
00:48:55,840 --> 00:49:00,750
so very little configuration you can

1174
00:48:58,210 --> 00:49:04,420
stand up very quickly small amount of

1175
00:49:00,750 --> 00:49:06,370
code of sorts and we want to HTTP it you

1176
00:49:04,420 --> 00:49:08,830
can't you can bring are also typical

1177
00:49:06,370 --> 00:49:10,870
signed certificate whatever we can

1178
00:49:08,830 --> 00:49:13,180
customize the listening port if it's not

1179
00:49:10,870 --> 00:49:15,100
a well-known port right at this is an

1180
00:49:13,180 --> 00:49:18,129
ephemeral port we don't need elevator

1181
00:49:15,100 --> 00:49:20,259
rights to be able to do that right so me

1182
00:49:18,130 --> 00:49:23,440
as a regular user I can stand this up as

1183
00:49:20,260 --> 00:49:25,720
long as I have access to the classes

1184
00:49:23,440 --> 00:49:28,900
that I'm actually used of source right

1185
00:49:25,720 --> 00:49:30,580
so this is a method where maybe I get to

1186
00:49:28,900 --> 00:49:31,599
a place and now I'm trying to bring

1187
00:49:30,580 --> 00:49:34,089
something else mine

1188
00:49:31,599 --> 00:49:36,940
kid or some other type of capability of

1189
00:49:34,089 --> 00:49:44,229
sorts and I can utilize this very quick

1190
00:49:36,940 --> 00:49:47,319
dirty but useful survey all right so

1191
00:49:44,229 --> 00:49:51,009
I'll come over to my server machine I'm

1192
00:49:47,319 --> 00:49:54,430
gonna host on all IPs of this machine

1193
00:49:51,009 --> 00:49:57,369
but on 9000 and we see that we're

1194
00:49:54,430 --> 00:49:59,618
talking roughly eighty six lines of code

1195
00:49:57,369 --> 00:50:03,130
and by default I'm gonna host data

1196
00:49:59,619 --> 00:50:09,269
that's gonna be on my desktop of this

1197
00:50:03,130 --> 00:50:14,220
machine I'll come back over here and now

1198
00:50:09,269 --> 00:50:17,769
we'll go out to that machine on 9000

1199
00:50:14,220 --> 00:50:20,799
right and I see what's on the desktop as

1200
00:50:17,769 --> 00:50:22,868
I go into the folders of sorts I could

1201
00:50:20,799 --> 00:50:28,749
interact with these things or if I

1202
00:50:22,869 --> 00:50:31,390
wanted to I could just download right so

1203
00:50:28,749 --> 00:50:33,308
we see I just downloaded this netcat or

1204
00:50:31,390 --> 00:50:35,410
what-have-you from this other machine

1205
00:50:33,309 --> 00:50:38,319
and then when I'm done with that machine

1206
00:50:35,410 --> 00:50:44,469
I need that server I could do something

1207
00:50:38,319 --> 00:50:47,259
like get job job right and then I could

1208
00:50:44,469 --> 00:50:49,180
shut that server down very hasty I stand

1209
00:50:47,259 --> 00:50:51,009
it up I get what I need I tear it right

1210
00:50:49,180 --> 00:50:55,450
back down and I keep going with my

1211
00:50:51,009 --> 00:50:57,670
mission or my objective all right so

1212
00:50:55,450 --> 00:50:59,680
this brings us to the summer all right

1213
00:50:57,670 --> 00:51:03,009
power shows a very powerful language

1214
00:50:59,680 --> 00:51:05,799
built in very specific to system

1215
00:51:03,009 --> 00:51:08,680
administrators but useful to a lot of

1216
00:51:05,799 --> 00:51:10,299
other variants and people you see what

1217
00:51:08,680 --> 00:51:13,029
we can do from a blue team perspective

1218
00:51:10,299 --> 00:51:14,200
just barely scratch the surface you see

1219
00:51:13,029 --> 00:51:16,239
what we could do from a red team

1220
00:51:14,200 --> 00:51:19,180
perspective again just barely scratch

1221
00:51:16,239 --> 00:51:20,319
the surface so if you think PowerShell

1222
00:51:19,180 --> 00:51:23,529
is something that you want to get a

1223
00:51:20,319 --> 00:51:25,900
little bit more into then I want to give

1224
00:51:23,529 --> 00:51:27,849
you something to put in your toolkit I

1225
00:51:25,900 --> 00:51:29,410
kind of like one of those infomercials

1226
00:51:27,849 --> 00:51:31,329
where it's like what wait you know

1227
00:51:29,410 --> 00:51:34,629
there's more right I'm gonna sweeten the

1228
00:51:31,329 --> 00:51:37,089
deal for media to other people ended up

1229
00:51:34,630 --> 00:51:39,940
coming up with under the wire if you've

1230
00:51:37,089 --> 00:51:42,069
heard of over the wire under the wire is

1231
00:51:39,940 --> 00:51:44,710
a play on those words but specific to

1232
00:51:42,069 --> 00:51:45,520
Windows specifically to parachute so

1233
00:51:44,710 --> 00:51:47,619
what we do

1234
00:51:45,520 --> 00:51:50,020
is allow you to SSH into our game

1235
00:51:47,619 --> 00:51:52,210
servers we provide you with a subset of

1236
00:51:50,020 --> 00:51:54,970
objectives and from an interactive

1237
00:51:52,210 --> 00:51:57,430
perspective you will learn the language

1238
00:51:54,970 --> 00:51:59,770
because we're giving you challenges call

1239
00:51:57,430 --> 00:52:02,109
it exploratory learning of sorts

1240
00:51:59,770 --> 00:52:04,720
there's 75 language I'm sorry 75

1241
00:52:02,110 --> 00:52:06,580
challenges that are there today we've

1242
00:52:04,720 --> 00:52:09,459
had over a hundred and forty thousand

1243
00:52:06,580 --> 00:52:13,779
unique people play from roughly eighty

1244
00:52:09,460 --> 00:52:16,330
four of the 193 countries right so again

1245
00:52:13,780 --> 00:52:18,220
it is free we make nothing off of it it

1246
00:52:16,330 --> 00:52:20,380
is to help people get comfortable with

1247
00:52:18,220 --> 00:52:22,029
the language and learning now once you

1248
00:52:20,380 --> 00:52:24,250
get over under the wire because we're

1249
00:52:22,030 --> 00:52:26,110
focused on basic core aspects of the

1250
00:52:24,250 --> 00:52:27,580
language and you want to start using the

1251
00:52:26,110 --> 00:52:29,980
language from a true red team or blue

1252
00:52:27,580 --> 00:52:30,580
team perspective well then I am for you

1253
00:52:29,980 --> 00:52:34,060
to use

1254
00:52:30,580 --> 00:52:36,580
Pacha develop this in 2017 there is 90

1255
00:52:34,060 --> 00:52:38,140
challenges or so and there's an actual

1256
00:52:36,580 --> 00:52:40,900
virtual machine that you would download

1257
00:52:38,140 --> 00:52:44,020
an arab army it is whittled with

1258
00:52:40,900 --> 00:52:46,060
artifacts of sorts so I may present you

1259
00:52:44,020 --> 00:52:48,430
a question telling you from a booting

1260
00:52:46,060 --> 00:52:51,580
perspective there is something beaconing

1261
00:52:48,430 --> 00:52:53,890
out based upon the event log go find it

1262
00:52:51,580 --> 00:52:56,170
and you'll utilize your PowerShell snap

1263
00:52:53,890 --> 00:52:57,879
to find it and then submit it to the

1264
00:52:56,170 --> 00:53:00,010
game sir also from a Red Team

1265
00:52:57,880 --> 00:53:03,130
perspective we may tell you that the

1266
00:53:00,010 --> 00:53:05,920
persons using some vulnerable version of

1267
00:53:03,130 --> 00:53:09,220
a particular software utilize power show

1268
00:53:05,920 --> 00:53:11,920
to query the system to understand if

1269
00:53:09,220 --> 00:53:14,319
it's there was less time accused or a

1270
00:53:11,920 --> 00:53:15,880
time stopping or whatever you kick now

1271
00:53:14,320 --> 00:53:18,250
one of the other core differences

1272
00:53:15,880 --> 00:53:21,310
between the two is that under the wire

1273
00:53:18,250 --> 00:53:23,080
is linear in nature posh hunter is

1274
00:53:21,310 --> 00:53:25,540
nonlinear so you can skip your way

1275
00:53:23,080 --> 00:53:28,029
around and do any question of your

1276
00:53:25,540 --> 00:53:30,850
choosing at any time alright again this

1277
00:53:28,030 --> 00:53:35,109
is another free resource that's outfit

1278
00:53:30,850 --> 00:53:37,089
so at this point I'm like literally two

1279
00:53:35,109 --> 00:53:39,520
minutes before finishing my time so I

1280
00:53:37,090 --> 00:53:41,410
won't take questions here I'll move over

1281
00:53:39,520 --> 00:53:42,730
to this court and I'll hang out there

1282
00:53:41,410 --> 00:53:44,170
I'll be there all day because I'll be

1283
00:53:42,730 --> 00:53:47,470
partaking in two other talks that are

1284
00:53:44,170 --> 00:53:49,810
going on as well this presentation and

1285
00:53:47,470 --> 00:53:52,209
about 10 minutes will be up at that link

1286
00:53:49,810 --> 00:53:53,740
so if you want to go download that also

1287
00:53:52,210 --> 00:53:55,869
be interested in any of the code I

1288
00:53:53,740 --> 00:53:57,580
talked about or just name my code period

1289
00:53:55,869 --> 00:53:59,140
there's my github and if you want to

1290
00:53:57,580 --> 00:54:01,870
connect and you want to have

1291
00:53:59,140 --> 00:54:03,400
conversations about this where maybe I

1292
00:54:01,870 --> 00:54:04,930
can learn something from you and you

1293
00:54:03,400 --> 00:54:07,360
learn something from me again iron

1294
00:54:04,930 --> 00:54:10,240
sharpens iron that's why I'm mad on the

1295
00:54:07,360 --> 00:54:11,710
Twitter's so again I appreciate these

1296
00:54:10,240 --> 00:54:14,410
sides of Glenville for putting this on

1297
00:54:11,710 --> 00:54:16,000
amazing event I also appreciate each and

1298
00:54:14,410 --> 00:54:17,620
every one of you for taking the time to

1299
00:54:16,000 --> 00:54:18,820
listen to what I had to say and I hope

1300
00:54:17,620 --> 00:54:22,770
to interact with you

1301
00:54:18,820 --> 00:54:22,770
another factor Thanks

