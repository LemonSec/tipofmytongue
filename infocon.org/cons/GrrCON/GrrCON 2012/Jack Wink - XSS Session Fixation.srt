1
00:00:00,080 --> 00:00:03,060
to access session fixation sq I oh my

2
00:00:03,060 --> 00:00:06,819
i'm Jack wink you can follow me on
Twitter at underscore Jack wink

3
00:00:06,819 --> 00:00:10,370
so a bit about me I am a software
engineer at

4
00:00:10,370 --> 00:00:14,570
now shoot i'd and said that the mid-deck
I'm sorry and

5
00:00:14,570 --> 00:00:18,750
yes so I am a software engineer and a
security

6
00:00:18,750 --> 00:00:21,320
I've been there for the last
year-and-a-half about I did a mobile

7
00:00:21,320 --> 00:00:21,810
app's

8
00:00:21,810 --> 00:00:25,330
we do two factor authentication it's
pretty cool you guys check us out we got

9
00:00:25,330 --> 00:00:25,840
a booth

10
00:00:25,840 --> 00:00:29,250
and were given out beer coasters and
balloons

11
00:00:29,250 --> 00:00:33,780
South checking out before my time and do
I worked at the University of Michigan

12
00:00:33,780 --> 00:00:35,910
as a web developer making and breaking
webapps

13
00:00:35,910 --> 00:00:39,579
at Stone undergrad their I about the
University and I'm a bit the musician

14
00:00:39,579 --> 00:00:41,500
said you and talk but that's cool too

15
00:00:41,500 --> 00:00:46,170
so I am I guess for soft why am I
talking about access

16
00:00:46,170 --> 00:00:49,430
asked reliance session fixation and
while

17
00:00:49,430 --> 00:00:52,449
desiring your own abilities whatsoever
by

18
00:00:52,449 --> 00:00:55,760
you guys still have a problem with them
apparently and according to

19
00:00:55,760 --> 00:00:59,420
alaska web application security project
the top 10 vulnerabilities

20
00:00:59,420 --> 00:01:02,500
2010 and number one is still injection

21
00:01:02,500 --> 00:01:06,049
I with its SQL or I shell commands

22
00:01:06,049 --> 00:01:10,220
number two is access ass and number
three is improper session management

23
00:01:10,220 --> 00:01:13,270
so and they're still relevant things to
talk about

24
00:01:13,270 --> 00:01:17,250
I first up at like to say that
transparency is good I really value

25
00:01:17,250 --> 00:01:20,600
transparent in a company if I'm
reporting vulnerabilities to you I like

26
00:01:20,600 --> 00:01:21,409
that II

27
00:01:21,409 --> 00:01:25,659
you tell me where you are a long and
fixing it and I've had like

28
00:01:25,659 --> 00:01:29,100
CEO's email me 15 minutes after
reporting it saying hey we've

29
00:01:29,100 --> 00:01:32,130
fix the issue than their engineering
team emails me a couple hours later

30
00:01:32,130 --> 00:01:34,460
saying hey we're getting started we need
more info

31
00:01:34,460 --> 00:01:38,000
and I don't really like that so just be
open

32
00:01:38,000 --> 00:01:42,479
and I'll be a be a good actor as well so

33
00:01:42,479 --> 00:01:45,799
iran-contra web development background I
really like JavaScript

34
00:01:45,799 --> 00:01:49,659
and not really but it's a good segue
into cross site scripting which I do

35
00:01:49,659 --> 00:01:50,070
love

36
00:01:50,070 --> 00:01:53,880
so I and cross site scripting is
tricking a

37
00:01:53,880 --> 00:01:57,909
client's browser into executing
arbitrary JavaScript so

38
00:01:57,909 --> 00:02:03,369
everybody has this mistake and microsoft
Combat MySpace Facebook Twitter

39
00:02:03,369 --> 00:02:07,909
I'm Twitter had like it on mouseover
incident where a pro context and

40
00:02:07,909 --> 00:02:12,520
they went to tweet myspace had like this
anywhere in which is pretty popular I

41
00:02:12,520 --> 00:02:17,450
friended want you to get couple million
friends and beds mean everyone has issue

42
00:02:17,450 --> 00:02:19,340
it's it's a easy to

43
00:02:19,340 --> 00:02:23,030
slip up and find itself honorable so

44
00:02:23,030 --> 00:02:27,099
on the impact you can still sessions
that sat near you can bypass cross-site

45
00:02:27,099 --> 00:02:28,489
request forgery tokens

46
00:02:28,489 --> 00:02:31,920
you are not those are there one time
embedded token I want and use token that

47
00:02:31,920 --> 00:02:33,140
you can bet on your forms

48
00:02:33,140 --> 00:02:36,989
at the idea is it protects you from and
having a

49
00:02:36,989 --> 00:02:41,450
phishing attack from a different website
I'm you can control user data any kind

50
00:02:41,450 --> 00:02:42,620
of API you make

51
00:02:42,620 --> 00:02:46,180
and the access exploit can executed via
AJAX

52
00:02:46,180 --> 00:02:51,670
but I like to just been doing with it
and I like to turn like the university's

53
00:02:51,670 --> 00:02:55,010
directory into something that's a little
bit more pleasing

54
00:02:55,010 --> 00:02:58,620
and for my viewing if your lil bit more
sadistic

55
00:02:58,620 --> 00:03:02,800
doing jaded or something I'm so it's the
cause a cross-site scripting

56
00:03:02,800 --> 00:03:06,040
you are you right out user data to the
DOM an

57
00:03:06,040 --> 00:03:09,640
an escaped than PHP look something like
this: I hope you don't do that

58
00:03:09,640 --> 00:03:13,440
by Iran what if the system is like a
script tag or something like that

59
00:03:13,440 --> 00:03:17,200
are the posts agates written to the damn
executed by hopefully you know this

60
00:03:17,200 --> 00:03:18,080
isn't now

61
00:03:18,080 --> 00:03:22,030
the real cause excess actually context i
can text is tricky

62
00:03:22,030 --> 00:03:25,440
you've got a whole bunch different IP
data that you wine display and you and

63
00:03:25,440 --> 00:03:26,900
display in different parts your Dom

64
00:03:26,900 --> 00:03:30,720
any ink coded such so if you're spinning
out a string

65
00:03:30,720 --> 00:03:34,590
and into email in HTML tagging you do
and stay incurring

66
00:03:34,590 --> 00:03:38,489
if you spit into an attribute tag you
need to do a tribute in coming and you

67
00:03:38,489 --> 00:03:40,580
also need to make sure that the
attribute is in

68
00:03:40,580 --> 00:03:43,580
vulnerable an and what I mean by that is

69
00:03:43,580 --> 00:03:47,890
if you are using summit in a traffic or
source tag I can be started with perhaps

70
00:03:47,890 --> 00:03:49,019
JavaScript Colin

71
00:03:49,019 --> 00:03:53,000
and the exploit seem to make sure that
the URL's invalid if your eye

72
00:03:53,000 --> 00:03:57,659
letting them some into a link and but
there's a whole chichi 800 us

73
00:03:57,659 --> 00:04:01,569
presides a really nice an guide the best
you can check it out

74
00:04:01,569 --> 00:04:05,629
about the links then my side and the
biggest thing is never trust the implied

75
00:04:05,629 --> 00:04:09,299
an variables might change you might
think that they

76
00:04:09,299 --> 00:04:13,739
variable is safe I but then your program
is might decide that the variable should

77
00:04:13,739 --> 00:04:15,000
come from the user instead

78
00:04:15,000 --> 00:04:19,470
so just always escape and data Microsoft
has made this mistake actually if you

79
00:04:19,470 --> 00:04:21,150
load up their 7.5

80
00:04:21,150 --> 00:04:26,820
II ass web server or before and run a
non-standard file system meaning

81
00:04:26,820 --> 00:04:31,419
UNIX and they relied on the windows
filesystem to actually protect you

82
00:04:31,419 --> 00:04:35,150
from an XSS vulnerability when listing
directory contents UNIX you can

83
00:04:35,150 --> 00:04:39,430
name a half hours like a valid HTML a
loaded and executed

84
00:04:39,430 --> 00:04:44,270
have anything prevention how many you
guys it's an inside look something like

85
00:04:44,270 --> 00:04:46,690
this make wrong code look wrong

86
00:04:46,690 --> 00:04:50,520
and you've got a naming convention that
your developers are supposed to follow

87
00:04:50,520 --> 00:04:51,880
to keep you safe

88
00:04:51,880 --> 00:04:55,110
I usually pick and variables that are
unsafe with

89
00:04:55,110 --> 00:04:58,240
you underscore something like that and

90
00:04:58,240 --> 00:05:01,370
this isn't necessarily bad i buy it's
hard to use

91
00:05:01,370 --> 00:05:04,970
make the switch to a coating acts like
this you are God outcome-based let's

92
00:05:04,970 --> 00:05:05,330
talk about

93
00:05:05,330 --> 00:05:08,710
actually preventing cross-site scripting
you get

94
00:05:08,710 --> 00:05:12,460
3 can chances to prevent it you've got
the network level the application-level

95
00:05:12,460 --> 00:05:15,900
browser level and the network well as
pretty cool live

96
00:05:15,900 --> 00:05:19,169
and Nash and maybe from their Cloud
Player but they cast as a proxy for your

97
00:05:19,169 --> 00:05:20,000
website

98
00:05:20,000 --> 00:05:22,870
they take all incoming requests and
decide whether or not they're gonna

99
00:05:22,870 --> 00:05:24,550
route into your application

100
00:05:24,550 --> 00:05:27,880
and the kids Mon power they can
penetrate attacked cross-site scripting

101
00:05:27,880 --> 00:05:29,710
injections I

102
00:05:29,710 --> 00:05:33,910
making the tax equal injections and just
drop us back it's a never had to wrap

103
00:05:33,910 --> 00:05:36,520
you've also got the application level
most if you're using some kind of

104
00:05:36,520 --> 00:05:37,320
framework play

105
00:05:37,320 --> 00:05:40,389
rails Couric nighters and to Django

106
00:05:40,389 --> 00:05:44,509
and a lot of these frameworks have tools
day have access prevention

107
00:05:44,509 --> 00:05:47,530
and built-in and lastly that the browser
level

108
00:05:47,530 --> 00:05:51,009
I which can eat the rich said I'm a
massive a view from a haircut and

109
00:05:51,009 --> 00:05:52,960
security policy RCSB

110
00:05:52,960 --> 00:05:57,060
by its being developed chrome and
firefox have implementations for

111
00:05:57,060 --> 00:06:02,180
undead namespace API's and believing
export and is actually

112
00:06:02,180 --> 00:06:05,850
come out with it too so thickly that and
adding content security policies

113
00:06:05,850 --> 00:06:06,620
something

114
00:06:06,620 --> 00:06:10,680
you can do pretty easily it's as easy as
sending a header that your website sends

115
00:06:10,680 --> 00:06:11,100
out

116
00:06:11,100 --> 00:06:14,169
you have to move all your javascript
from the inline

117
00:06:14,169 --> 00:06:18,240
I N out at the files into their own
separate files that you can load

118
00:06:18,240 --> 00:06:19,440
external

119
00:06:19,440 --> 00:06:23,030
I and then you said a policy that says
only load script tags from certain

120
00:06:23,030 --> 00:06:23,940
domain

121
00:06:23,940 --> 00:06:27,000
and this allowed prevent people from
injecting you

122
00:06:27,000 --> 00:06:30,360
which I'll show ir

123
00:06:30,360 --> 00:06:35,630
so if we look at the CSP demo an

124
00:06:35,630 --> 00:06:38,770
if we have reset the CSP we end up
saying the an

125
00:06:38,770 --> 00:06:42,850
CSP hatter's if you look here the
default sources self so

126
00:06:42,850 --> 00:06:47,400
along load from local host image is it a
lot for anywhere but you've also got

127
00:06:47,400 --> 00:06:51,500
media source and scripts source that you
can set policies for

128
00:06:51,500 --> 00:06:54,500
I'm but what s up those and out

129
00:06:54,500 --> 00:06:57,580
see the difference down here ads pretty
easy just

130
00:06:57,580 --> 00:07:00,710
at the post fair besides clearly
exploitable

131
00:07:00,710 --> 00:07:05,470
an and about assisted Mr running so I'll
just show you

132
00:07:05,470 --> 00:07:09,009
AFA submit my name whatever but if you
submit

133
00:07:09,009 --> 00:07:12,289
I gotta make some kind of joke relating
to the title

134
00:07:12,289 --> 00:07:16,599
so if you inject a script tag and run it
and without fifty protection

135
00:07:16,599 --> 00:07:20,550
I run feeler dialogue if we add the CSP
protection and

136
00:07:20,550 --> 00:07:25,030
an and try to inject ourselves again

137
00:07:25,030 --> 00:07:29,060
if you look it actually I it'd get
inserted

138
00:07:29,060 --> 00:07:33,259
and does run are tries to run CSP stops
it from executing

139
00:07:33,259 --> 00:07:37,819
and protect our USERs if you submit it

140
00:07:37,819 --> 00:07:42,060
gotten their over here CST warning

141
00:07:42,060 --> 00:07:47,259
the thing you can do pretty easily for
such a protection and

142
00:07:47,259 --> 00:07:50,770
now if you have to accept its team of
new users I it's kinda day

143
00:07:50,770 --> 00:07:54,580
interesting issue I would suggest going
and

144
00:07:54,580 --> 00:07:57,889
the route have like to have and
accepting a format it input like mark

145
00:07:57,889 --> 00:07:58,220
down

146
00:07:58,220 --> 00:08:01,819
and converting it is to myself if you
absolutely have to

147
00:08:01,819 --> 00:08:04,889
support html you can look at a library
legal power

148
00:08:04,889 --> 00:08:08,460
and with this does it's an HTML
sanitizer and JavaScript sandbox

149
00:08:08,460 --> 00:08:12,789
actually let users to make JavaScript
and decide white access they have

150
00:08:12,789 --> 00:08:16,099
I'm something to check out and if you
won't find out more information about

151
00:08:16,099 --> 00:08:21,160
how to properly in code for these
different contexts I i watch has a

152
00:08:21,160 --> 00:08:24,240
security API an enterprise security API
check out

153
00:08:24,240 --> 00:08:27,639
has all these and Cody functions

154
00:08:27,639 --> 00:08:31,520
so sub out: session fixation and I think
session fixation because it's kind it's

155
00:08:31,520 --> 00:08:32,649
Amy I think about much

156
00:08:32,649 --> 00:08:36,300
a lotta frameworks handle sessions I'm
for you

157
00:08:36,300 --> 00:08:39,740
by its even a even as recently as a
couple years ago

158
00:08:39,740 --> 00:08:42,959
a lot had an issue session fixation with
the earlier drafts

159
00:08:42,959 --> 00:08:47,470
so it is so relevant I'll the impact is
an account takeover

160
00:08:47,470 --> 00:08:51,160
an SMS session hijacking it's just a
type

161
00:08:51,160 --> 00:08:54,870
so you can still day-to-day can spy on
users just sit over there

162
00:08:54,870 --> 00:08:58,730
take over-the-counter an

163
00:08:58,730 --> 00:09:02,529
but the the cause is generally just
improper session management site how I

164
00:09:02,529 --> 00:09:03,279
talk about

165
00:09:03,279 --> 00:09:07,760
sessions in general I'm session fixation
in particular skies by

166
00:09:07,760 --> 00:09:11,070
two different issues wanna have to be
able to set a session identifiers so

167
00:09:11,070 --> 00:09:15,529
either through access vulnerability or
if you set your session ID's through a

168
00:09:15,529 --> 00:09:21,440
get variable as possible and you also
have to be an

169
00:09:21,440 --> 00:09:24,540
persisting the session ID even after
login are

170
00:09:24,540 --> 00:09:27,899
medication so what I kinda looks like
fun the attack

171
00:09:27,899 --> 00:09:31,350
computer here in rat I would get a valid
session ID from the server

172
00:09:31,350 --> 00:09:35,140
I would 68 your session by sending it
over I

173
00:09:35,140 --> 00:09:38,740
id3 access exploiter in this case it's
through the URL

174
00:09:38,740 --> 00:09:42,730
and then you would log in and since we
both know your session ID I can

175
00:09:42,730 --> 00:09:46,940
reload my page with that session and
I've taken over your account

176
00:09:46,940 --> 00:09:50,100
so that kinda looks like

177
00:09:50,100 --> 00:09:54,490
here an if I were to login

178
00:09:54,490 --> 00:09:58,540
to a vulnerable side you'll see that the
session ID

179
00:09:58,540 --> 00:10:02,279
say that can you are out if I can log
out

180
00:10:02,279 --> 00:10:07,220
and send of a phishing email my friend
Joe

181
00:10:07,220 --> 00:10:11,550
hell open up the link and and underlying
and

182
00:10:11,550 --> 00:10:15,620
and I've still got this session ID hang
around so if I reload my page

183
00:10:15,620 --> 00:10:18,959
I am authenticated as Joe

184
00:10:18,959 --> 00:10:23,930
have complete control his session i log
out he's logged out

185
00:10:23,930 --> 00:10:27,529
I'm pretty standard so prevention

186
00:10:27,529 --> 00:10:32,700
and verse of UN is a shitty ass if you
don't use anyways this is offered

187
00:10:32,700 --> 00:10:36,850
nothing and do I prevent access ask they
still need a method 0

188
00:10:36,850 --> 00:10:40,570
changing your session ID UN use HTTP
only cookies make sure

189
00:10:40,570 --> 00:10:45,540
he sent over its yes as well and you
wanna lock actions anything open session

190
00:10:45,540 --> 00:10:47,470
close a session change permissions

191
00:10:47,470 --> 00:10:51,250
you wanna like that I course don't like
the session ID

192
00:10:51,250 --> 00:10:55,019
by having audit trails nice and you can
help please log leaders you can find

193
00:10:55,019 --> 00:10:58,070
I'm malicious looking activity

194
00:10:58,070 --> 00:11:01,899
by over like good session policy and
when you make a session policy

195
00:11:01,899 --> 00:11:05,070
I just regenerate your session ID's and

196
00:11:05,070 --> 00:11:08,880
renew your session ID any time the User
I think it's in periodically

197
00:11:08,880 --> 00:11:12,149
you want to require authentication a
couple of points I think Amazon does

198
00:11:12,149 --> 00:11:13,339
this really well

199
00:11:13,339 --> 00:11:17,360
I if you change permissions at so Amazon
you go you throw stuff in your car

200
00:11:17,360 --> 00:11:20,560
year your regular user but when you
actually go to checkout or change your

201
00:11:20,560 --> 00:11:21,420
account

202
00:11:21,420 --> 00:11:25,279
it requires you to reoffend a que
because you are now on

203
00:11:25,279 --> 00:11:28,880
acting with greater commissions and you
had

204
00:11:28,880 --> 00:11:32,430
other things you can consider is a
session timeout I after

205
00:11:32,430 --> 00:11:36,269
an activity 15 minutes or something you
can foresee that a lockout

206
00:11:36,269 --> 00:11:40,200
I some people suggest anytime that the
user agent changes or the IP address

207
00:11:40,200 --> 00:11:41,130
changes

208
00:11:41,130 --> 00:11:44,130
you should force easy to replicate and

209
00:11:44,130 --> 00:11:47,220
I wouldn't waste much time I it's more
security through obscurity your IP

210
00:11:47,220 --> 00:11:49,010
address that active in the same network

211
00:11:49,010 --> 00:11:52,709
the user agent can be spoofed an these
are things that are going at the tears

212
00:11:52,709 --> 00:11:53,769
in my from actually

213
00:11:53,769 --> 00:11:58,089
exploiting a session fixation
vulnerability

214
00:11:58,089 --> 00:12:02,310
so I am too many things to consider when
you're saying session management

215
00:12:02,310 --> 00:12:05,889
system session ID's have to be having a
certain amount and chippy

216
00:12:05,889 --> 00:12:09,940
otherwise that BP force most famous for
hands this for you but

217
00:12:09,940 --> 00:12:14,620
if you're running around just keep it
mind I O wasp recommends 128 bits

218
00:12:14,620 --> 00:12:18,490
have I'm length and 64 bit seven
tripping

219
00:12:18,490 --> 00:12:22,320
and yasser to make sure that your
session ID's an

220
00:12:22,320 --> 00:12:25,450
get escaped you shouldn't be running at
the time anyways by

221
00:12:25,450 --> 00:12:29,279
and if you're storing in a database they
are still use a controlled

222
00:12:29,279 --> 00:12:33,320
data I so you have to escape I'm done
the same that your system will protect

223
00:12:33,320 --> 00:12:35,170
you

224
00:12:35,170 --> 00:12:39,839
I can brings me to sequel injection as
the last one embodiment talk about

225
00:12:39,839 --> 00:12:43,389
and I'm you have seen talk to database
you have data

226
00:12:43,389 --> 00:12:47,019
you do after SQL Structured Query
Language an

227
00:12:47,019 --> 00:12:50,029
and this is another another huge target
area

228
00:12:50,029 --> 00:12:53,649
we saw a lot with anonymous and LulzSec
doing

229
00:12:53,649 --> 00:12:56,990
massive database stamps an even recently

230
00:12:56,990 --> 00:13:01,190
a LinkedIn he harmony and ya who were
compromised

231
00:13:01,190 --> 00:13:05,600
so the impact ICU you ceiling is a dated
leading you today to cracking passwords

232
00:13:05,600 --> 00:13:06,769
I

233
00:13:06,769 --> 00:13:10,600
companies gonna get shamed for whatever
bad hash function you're using

234
00:13:10,600 --> 00:13:14,070
I so make sure you think the crafter a
script or something equivalent

235
00:13:14,070 --> 00:13:17,200
I'm security a few notes

236
00:13:17,200 --> 00:13:21,760
database users year uses probably have a
ridiculous set up permissions

237
00:13:21,760 --> 00:13:25,160
I'm I'm not sure when the last time
anyone has created

238
00:13:25,160 --> 00:13:29,829
multiple uses for the database by you'll
end up finding that there's one root

239
00:13:29,829 --> 00:13:30,750
user that can

240
00:13:30,750 --> 00:13:34,440
add to the admin table remove from the
admin table and

241
00:13:34,440 --> 00:13:38,589
are they use this user forays
authenticating regular users to the apt

242
00:13:38,589 --> 00:13:39,089
I'm

243
00:13:39,089 --> 00:13:43,040
you can cut off a lot of the attack
surface just by creating separate users

244
00:13:43,040 --> 00:13:44,440
depending on what you're doing

245
00:13:44,440 --> 00:13:47,550
and then a lot of people in fact the
databases which is ridiculous you lose

246
00:13:47,550 --> 00:13:48,449
your data

247
00:13:48,449 --> 00:13:51,740
you wanna have frequent backups

248
00:13:51,740 --> 00:13:55,089
to the cause is on filter data entry in
your SQL query

249
00:13:55,089 --> 00:13:58,829
add I've seen a lot of PHP code looks
like this: where they just

250
00:13:58,829 --> 00:14:02,500
for had a post variable right into the
an

251
00:14:02,500 --> 00:14:06,389
simple statement and what happens is
some I'll submit something like or one

252
00:14:06,389 --> 00:14:08,470
equals one and it will just call

253
00:14:08,470 --> 00:14:11,790
whatever database user can grab

254
00:14:11,790 --> 00:14:15,260
I'm the prevention side you just when
he's prepared statements almost every

255
00:14:15,260 --> 00:14:18,269
language has some form a prepared
statement if they don't have it built

256
00:14:18,269 --> 00:14:21,480
and there's definitely an hour and
foreign language you're using

257
00:14:21,480 --> 00:14:24,600
that will do this and bake hey looks
like you

258
00:14:24,600 --> 00:14:27,860
prepare statement by holding out a place
where values in there

259
00:14:27,860 --> 00:14:31,779
and any bind parameters to them and you
also make sure that you're giving it a

260
00:14:31,779 --> 00:14:32,339
issue

261
00:14:32,339 --> 00:14:35,389
or privileges

262
00:14:35,389 --> 00:14:38,709
I'm an idiot people as Amy's tornado

263
00:14:38,709 --> 00:14:42,740
the web framework now and

264
00:14:42,740 --> 00:14:46,029
well they have an interesting i or am
panel air

265
00:14:46,029 --> 00:14:49,560
they use a basic in a format string and
then I said

266
00:14:49,560 --> 00:14:54,240
variables II they'll skip the variables
and no fun at the string

267
00:14:54,240 --> 00:14:59,709
it's very easy to confuse this much as
operator in a comma here

268
00:14:59,709 --> 00:15:04,310
one is vulnerable namely this I one is
not

269
00:15:04,310 --> 00:15:09,130
and I just if you're designing a or an
make it hard for people to

270
00:15:09,130 --> 00:15:12,959
do the wrong thing I when I would like
to have seen is like this question mark

271
00:15:12,959 --> 00:15:13,730
style

272
00:15:13,730 --> 00:15:18,290
I where if you end up doing the matches
operator in trying a performer string

273
00:15:18,290 --> 00:15:19,160
comprehension

274
00:15:19,160 --> 00:15:22,880
you end up having a couple of banya and
it's very easy to sex when your code

275
00:15:22,880 --> 00:15:23,199
below

276
00:15:23,199 --> 00:15:26,350
run verses when cold war on anything
pass

277
00:15:26,350 --> 00:15:30,759
unit tests

278
00:15:30,759 --> 00:15:37,759
any questions

279
00:15:39,390 --> 00:15:43,810
right well that's all I have five and a
whole bunch links here

280
00:15:43,810 --> 00:15:48,020
and God its other content

281
00:15:48,020 --> 00:15:54,210
somewhere else I I anti

282
00:15:54,210 --> 00:16:00,260
yes I'm even my sides on speaker deck:

283
00:16:00,260 --> 00:16:04,390
if you look at my Twitter if you don't
link when I app from App

284
00:16:04,390 --> 00:16:09,590
I thank you sir

