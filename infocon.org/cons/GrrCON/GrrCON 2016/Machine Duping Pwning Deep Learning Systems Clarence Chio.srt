1
00:00:00,000 --> 00:00:20,860
I<font color="#CCCCCC"> ok so</font>

2
00:00:16,990 --> 00:00:24,220
I think we'll just start now<font color="#CCCCCC"> okay okay</font>

3
00:00:20,860 --> 00:00:27,040
hey everybody<font color="#E5E5E5"> and</font><font color="#CCCCCC"> Clarence</font><font color="#E5E5E5"> today the</font>

4
00:00:24,220 --> 00:00:30,520
session will be about machine learning

5
00:00:27,040 --> 00:00:31,960
<font color="#CCCCCC">I just to get a quick sense of the of</font>

6
00:00:30,520 --> 00:00:34,480
the room how many of you have<font color="#E5E5E5"> worked</font>

7
00:00:31,960 --> 00:00:35,890
with machine learning before

8
00:00:34,480 --> 00:00:37,870
<font color="#CCCCCC">ok so that that's a</font><font color="#E5E5E5"> good number how many</font>

9
00:00:35,890 --> 00:00:40,720
of you have used one of those<font color="#CCCCCC"> machine</font>

10
00:00:37,870 --> 00:00:44,110
<font color="#CCCCCC">learning AV software</font><font color="#E5E5E5"> before</font>

11
00:00:40,720 --> 00:00:48,910
<font color="#CCCCCC">ok that's not a lot</font><font color="#E5E5E5"> pretty good</font><font color="#CCCCCC"> side so</font>

12
00:00:44,110 --> 00:00:51,670
<font color="#CCCCCC">I'm</font><font color="#E5E5E5"> this top is about how to bypass</font>

13
00:00:48,910 --> 00:00:53,529
machine learning systems and it's still

14
00:00:51,670 --> 00:00:55,420
a little bit early in the in the whole

15
00:00:53,530 --> 00:00:59,080
ecosystem now I think<font color="#E5E5E5"> machine learning</font>

16
00:00:55,420 --> 00:01:02,890
has started to become a big<font color="#CCCCCC"> buzzword</font><font color="#E5E5E5"> in</font>

17
00:00:59,080 --> 00:01:04,809
in the last few years<font color="#E5E5E5"> when</font><font color="#CCCCCC"> I was</font><font color="#E5E5E5"> curious</font>

18
00:01:02,890 --> 00:01:08,170
to know<font color="#E5E5E5"> was how many companies are using</font>

19
00:01:04,809 --> 00:01:11,740
these terms like you know deep learning

20
00:01:08,170 --> 00:01:14,380
<font color="#E5E5E5">adversarial</font><font color="#CCCCCC"> machine-learning adaptive</font>

21
00:01:11,740 --> 00:01:15,970
systems<font color="#E5E5E5"> to market their products</font><font color="#CCCCCC"> if</font>

22
00:01:14,380 --> 00:01:18,520
you've been to<font color="#CCCCCC"> explore</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> big security</font>

23
00:01:15,970 --> 00:01:20,560
<font color="#E5E5E5">conferences you you would have seen at</font>

24
00:01:18,520 --> 00:01:22,329
least a dozen companies claiming to do

25
00:01:20,560 --> 00:01:24,880
something crazy

26
00:01:22,329 --> 00:01:27,579
<font color="#E5E5E5">so what I did was I just scraped the</font>

27
00:01:24,880 --> 00:01:30,158
<font color="#CCCCCC">short snippets of company descriptions</font>

28
00:01:27,579 --> 00:01:33,309
at these<font color="#E5E5E5"> expose mainly RSA and black hat</font>

29
00:01:30,159 --> 00:01:35,530
<font color="#CCCCCC">to</font><font color="#E5E5E5"> to see how many</font><font color="#CCCCCC"> companies</font><font color="#E5E5E5"> companies</font>

30
00:01:33,310 --> 00:01:36,880
<font color="#CCCCCC">actually claim to do such things and</font>

31
00:01:35,530 --> 00:01:39,399
there's interesting trend over the years

32
00:01:36,880 --> 00:01:44,560
from<font color="#E5E5E5"> 2012</font><font color="#CCCCCC"> to2015 you can see a pretty</font>

33
00:01:39,399 --> 00:01:46,899
pretty large increase from about<font color="#E5E5E5"> 4 to 24</font>

34
00:01:44,560 --> 00:01:48,249
<font color="#CCCCCC">at</font><font color="#E5E5E5"> its peak 2016 kind of died down a</font>

35
00:01:46,899 --> 00:01:50,049
little bit maybe because people started

36
00:01:48,249 --> 00:01:57,189
<font color="#E5E5E5">realizing that is actually bullshit</font>

37
00:01:50,049 --> 00:02:00,219
so<font color="#CCCCCC"> I have a quick</font><font color="#E5E5E5"> short demo to show</font>

38
00:01:57,189 --> 00:02:02,109
what machine learning can do and how a

39
00:02:00,219 --> 00:02:04,479
system that uses machine learning for

40
00:02:02,109 --> 00:02:11,109
image recognition is actually<font color="#CCCCCC"> bypassed</font>

41
00:02:04,479 --> 00:02:14,230
<font color="#E5E5E5">this is actually a paycheck reader so in</font>

42
00:02:11,110 --> 00:02:17,410
the nineteen nineties<font color="#E5E5E5"> there used to be</font>

43
00:02:14,230 --> 00:02:19,899
some technology that uses the learning

44
00:02:17,410 --> 00:02:21,790
to recognize digits on checks that you

45
00:02:19,900 --> 00:02:23,260
were right to your bank<font color="#E5E5E5"> because the</font>

46
00:02:21,790 --> 00:02:25,900
quantity of tracks at the banquet

47
00:02:23,260 --> 00:02:28,269
<font color="#E5E5E5">receive would be so large that it was</font>

48
00:02:25,900 --> 00:02:29,060
just impossible for<font color="#CCCCCC"> human tellers to do</font>

49
00:02:28,270 --> 00:02:31,340
all the work

50
00:02:29,060 --> 00:02:33,080
suppose<font color="#E5E5E5"> these these machines will</font>

51
00:02:31,340 --> 00:02:34,220
basically scan the<font color="#E5E5E5"> checks and then read</font>

52
00:02:33,080 --> 00:02:36,709
these numbers<font color="#CCCCCC"> that were basically</font>

53
00:02:34,220 --> 00:02:41,030
handwritten digits and try to parse out

54
00:02:36,709 --> 00:02:44,750
the digits from them<font color="#CCCCCC"> so here I have two</font>

55
00:02:41,030 --> 00:02:46,970
examples of<font color="#CCCCCC"> CH x 1 is a normal one and</font>

56
00:02:44,750 --> 00:02:48,980
one is the adversary example which is

57
00:02:46,970 --> 00:02:53,000
supposed to generate the wrong<font color="#E5E5E5"> output</font>

58
00:02:48,980 --> 00:02:55,010
through a deep learning system and so<font color="#CCCCCC"> I</font>

59
00:02:53,000 --> 00:02:57,650
just like a short piece of code using a

60
00:02:55,010 --> 00:02:59,959
model that<font color="#CCCCCC"> I pre-trained prototype</font><font color="#E5E5E5"> track</font>

61
00:02:57,650 --> 00:03:02,330
.<font color="#E5E5E5"> and what this does is just basically</font>

62
00:02:59,959 --> 00:03:04,700
extract<font color="#E5E5E5"> the digits are from the check</font>

63
00:03:02,330 --> 00:03:07,700
<font color="#E5E5E5">it's very</font><font color="#CCCCCC"> naive example i'm just taking</font>

64
00:03:04,700 --> 00:03:09,679
a particular area of the scan image and

65
00:03:07,700 --> 00:03:12,048
then what<font color="#CCCCCC"> i'm doing</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> i'm passing this</font>

66
00:03:09,680 --> 00:03:13,880
<font color="#CCCCCC">each digit</font><font color="#E5E5E5"> through the model and then</font>

67
00:03:12,049 --> 00:03:15,470
the model<font color="#CCCCCC"> will</font><font color="#E5E5E5"> basically tell me if this</font>

68
00:03:13,880 --> 00:03:19,910
is<font color="#E5E5E5"> a zero one two three four five six</font>

69
00:03:15,470 --> 00:03:22,250
<font color="#E5E5E5">seven eight or nine so</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> just running</font>

70
00:03:19,910 --> 00:03:25,549
the<font color="#CCCCCC"> court python</font><font color="#E5E5E5"> we tracked</font><font color="#CCCCCC"> up I</font><font color="#E5E5E5"> filtrec</font>

71
00:03:22,250 --> 00:03:28,190
norm<font color="#E5E5E5"> this</font><font color="#CCCCCC"> loads the model from</font><font color="#E5E5E5"> from what</font>

72
00:03:25,549 --> 00:03:32,569
<font color="#E5E5E5">I previously trained and it</font><font color="#CCCCCC"> reads</font><font color="#E5E5E5"> the</font>

73
00:03:28,190 --> 00:03:36,049
digits 937 800 which is if you actually

74
00:03:32,569 --> 00:03:40,608
look at the image itself makes sense 93

75
00:03:36,049 --> 00:03:44,540
79002 ok and so let's run it through

76
00:03:40,609 --> 00:03:52,700
another and another image<font color="#CCCCCC"> Phil track tad</font>

77
00:03:44,540 --> 00:03:55,700
and so this image looks looks pretty

78
00:03:52,700 --> 00:03:57,560
pretty similar<font color="#CCCCCC"> will African later</font><font color="#E5E5E5"> but</font>

79
00:03:55,700 --> 00:04:05,209
then the<font color="#CCCCCC"> dentist a reads for using the</font>

80
00:03:57,560 --> 00:04:07,069
same model is actually different

81
00:04:05,209 --> 00:04:09,109
let's check<font color="#E5E5E5"> it to see how different it</font>

82
00:04:07,069 --> 00:04:11,988
looks again<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is the adversarial</font>

83
00:04:09,109 --> 00:04:17,150
image it says<font color="#CCCCCC"> 9700</font><font color="#E5E5E5"> human</font><font color="#CCCCCC"> will be able to</font>

84
00:04:11,989 --> 00:04:20,170
read<font color="#E5E5E5"> as such but actually gives the</font>

85
00:04:17,149 --> 00:04:24,010
different<font color="#E5E5E5"> result</font>

86
00:04:20,170 --> 00:04:25,180
so that's just a quick teaser off of

87
00:04:24,010 --> 00:04:29,170
what this presentation is going to be

88
00:04:25,180 --> 00:04:31,510
about<font color="#E5E5E5"> adversarial machine learning as</font><font color="#CCCCCC"> a</font>

89
00:04:29,170 --> 00:04:33,370
field<font color="#CCCCCC"> that</font><font color="#E5E5E5"> still actively in research</font>

90
00:04:31,510 --> 00:04:34,420
papers published almost every week in

91
00:04:33,370 --> 00:04:36,280
this area

92
00:04:34,420 --> 00:04:39,460
researchers mainly<font color="#CCCCCC"> in Google brain open</font>

93
00:04:36,280 --> 00:04:42,609
<font color="#CCCCCC">AI</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> university</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> pennsylvania are</font>

94
00:04:39,460 --> 00:04:45,400
working<font color="#E5E5E5"> on this so what does it mean to</font>

95
00:04:42,610 --> 00:04:47,320
<font color="#CCCCCC">to have machine-learning I i think a lot</font>

96
00:04:45,400 --> 00:04:50,590
of you in this room are<font color="#CCCCCC"> our what</font><font color="#E5E5E5"> we</font>

97
00:04:47,320 --> 00:04:52,690
consider hackers I think you have strong

98
00:04:50,590 --> 00:04:54,250
<font color="#CCCCCC">infosec</font><font color="#E5E5E5"> skills you you like to do stuff</font>

99
00:04:52,690 --> 00:04:58,570
you like to actually actually make

100
00:04:54,250 --> 00:05:00,760
things break<font color="#E5E5E5"> and so I think that the</font>

101
00:04:58,570 --> 00:05:02,440
security industry needs to move in<font color="#E5E5E5"> in</font>

102
00:05:00,760 --> 00:05:04,240
the direction of statistical machine

103
00:05:02,440 --> 00:05:06,250
learning because more and more systems

104
00:05:04,240 --> 00:05:09,310
in the world rely on machine learning

105
00:05:06,250 --> 00:05:10,810
for critical<font color="#E5E5E5"> purposes</font><font color="#CCCCCC"> so if you can</font>

106
00:05:09,310 --> 00:05:13,150
think of self-driving cars if you think

107
00:05:10,810 --> 00:05:14,830
of some security systems that make use

108
00:05:13,150 --> 00:05:17,530
of the adaptive properties of machine

109
00:05:14,830 --> 00:05:20,620
learning to detect polymorphism in the

110
00:05:17,530 --> 00:05:23,409
adversaries<font color="#CCCCCC"> a lot of things that we rely</font>

111
00:05:20,620 --> 00:05:25,000
on in the world are slowly becoming more

112
00:05:23,410 --> 00:05:26,320
intelligent and starting to rely on

113
00:05:25,000 --> 00:05:28,780
machine learning so if we want to

114
00:05:26,320 --> 00:05:30,909
effectively evaluate the<font color="#E5E5E5"> security</font>

115
00:05:28,780 --> 00:05:33,309
principles and the vulnerabilities of

116
00:05:30,910 --> 00:05:36,190
such systems<font color="#CCCCCC"> the security industry needs</font>

117
00:05:33,310 --> 00:05:40,540
to gather<font color="#CCCCCC"> just</font><font color="#E5E5E5"> the relevant skills to to</font>

118
00:05:36,190 --> 00:05:42,490
do that<font color="#E5E5E5"> so deep learning it's not</font><font color="#CCCCCC"> that</font>

119
00:05:40,540 --> 00:05:45,250
it's not a new toy all its developed

120
00:05:42,490 --> 00:05:48,790
1943 actually and like many things was

121
00:05:45,250 --> 00:05:50,740
developed by funding from the<font color="#E5E5E5"> DoD the</font>

122
00:05:48,790 --> 00:05:52,240
reason why it's so popular now<font color="#CCCCCC"> is</font>

123
00:05:50,740 --> 00:05:54,580
because<font color="#CCCCCC"> there's just</font><font color="#E5E5E5"> much more data</font>

124
00:05:52,240 --> 00:05:57,160
everywhere<font color="#CCCCCC"> the</font><font color="#E5E5E5"> amount of data that we're</font>

125
00:05:54,580 --> 00:05:58,810
generating the last two years<font color="#E5E5E5"> i think if</font>

126
00:05:57,160 --> 00:06:01,000
you remember this very popular<font color="#CCCCCC"> an</font>

127
00:05:58,810 --> 00:06:02,890
anecdote is greater than the amount of

128
00:06:01,000 --> 00:06:07,270
data that we<font color="#CCCCCC"> generated as a whole</font>

129
00:06:02,890 --> 00:06:08,950
civilization<font color="#CCCCCC"> bit prior to that and it's</font>

130
00:06:07,270 --> 00:06:11,320
revived you<font color="#CCCCCC"> to implement</font><font color="#E5E5E5"> improvements</font>

131
00:06:08,950 --> 00:06:13,450
and computational<font color="#E5E5E5"> hardware deep learning</font>

132
00:06:11,320 --> 00:06:15,280
or<font color="#E5E5E5"> neural networks or any kind of</font>

133
00:06:13,450 --> 00:06:17,670
machine learning it actually is very

134
00:06:15,280 --> 00:06:24,330
computationally intensive because

135
00:06:17,670 --> 00:06:26,910
a computing<font color="#E5E5E5"> intelligence with</font><font color="#CCCCCC"> gpus for</font>

136
00:06:24,330 --> 00:06:29,400
example you can you can compute<font color="#CCCCCC"> are</font>

137
00:06:26,910 --> 00:06:34,110
multiple concurrent matrix operations

138
00:06:29,400 --> 00:06:37,049
<font color="#E5E5E5">concurrently and this just greatly</font>

139
00:06:34,110 --> 00:06:40,260
<font color="#CCCCCC">improves which you can generate</font>

140
00:06:37,050 --> 00:06:42,600
intelligence with machine learning and

141
00:06:40,260 --> 00:06:44,400
there's a popular myth that deep

142
00:06:42,600 --> 00:06:45,810
learning<font color="#E5E5E5"> is model after how the human</font>

143
00:06:44,400 --> 00:06:48,359
brain works

144
00:06:45,810 --> 00:06:50,550
<font color="#CCCCCC">I think this is</font><font color="#E5E5E5"> it is</font><font color="#CCCCCC"> a great marketing</font>

145
00:06:48,360 --> 00:06:53,820
you know like if you can even<font color="#CCCCCC"> call it up</font>

146
00:06:50,550 --> 00:06:55,950
the human brain then of course the

147
00:06:53,820 --> 00:06:58,440
possibility that a machine can achieve

148
00:06:55,950 --> 00:07:00,780
human sentence is much greater than

149
00:06:58,440 --> 00:07:02,580
before<font color="#E5E5E5"> but uh</font><font color="#CCCCCC"> will come to see that</font>

150
00:07:00,780 --> 00:07:05,309
actually learning is much simpler than

151
00:07:02,580 --> 00:07:07,620
what we what we think the human brain is

152
00:07:05,310 --> 00:07:10,290
and actually do we really know how to

153
00:07:07,620 --> 00:07:11,610
human brain works<font color="#CCCCCC"> I'd argue know and i</font>

154
00:07:10,290 --> 00:07:15,630
think<font color="#CCCCCC"> a lot of research shows that</font>

155
00:07:11,610 --> 00:07:17,010
there's<font color="#E5E5E5"> no that there's no agreeable way</font>

156
00:07:15,630 --> 00:07:19,020
that the human brain works<font color="#E5E5E5"> that</font>

157
00:07:17,010 --> 00:07:22,409
researchers<font color="#E5E5E5"> can can really a conclude</font>

158
00:07:19,020 --> 00:07:24,210
upon<font color="#CCCCCC"> Saudi</font><font color="#E5E5E5"> learning is everywhere</font>

159
00:07:22,410 --> 00:07:26,070
machine learning is everywhere if I

160
00:07:24,210 --> 00:07:28,049
think all of us have<font color="#E5E5E5"> interactive</font>

161
00:07:26,070 --> 00:07:32,159
learning<font color="#E5E5E5"> systems</font><font color="#CCCCCC"> and such .</font><font color="#E5E5E5"> if not at</font>

162
00:07:28,050 --> 00:07:34,050
<font color="#E5E5E5">fpd in our lives who uses</font><font color="#CCCCCC"> google now or</font>

163
00:07:32,160 --> 00:07:36,810
<font color="#E5E5E5">Siri or something or some kind of speech</font>

164
00:07:34,050 --> 00:07:40,530
recognition software on a daily basis

165
00:07:36,810 --> 00:07:42,390
<font color="#E5E5E5">ok that's a good proportion</font><font color="#CCCCCC"> i think i</font>

166
00:07:40,530 --> 00:07:45,630
tried to use<font color="#CCCCCC"> Syria</font><font color="#E5E5E5"> lot in the past but</font>

167
00:07:42,390 --> 00:07:50,550
then it started<font color="#CCCCCC"> to to</font><font color="#E5E5E5"> not really work</font>

168
00:07:45,630 --> 00:07:52,440
well and<font color="#E5E5E5"> there are some papers</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> some</font>

169
00:07:50,550 --> 00:07:54,540
papers describing the way that speech

170
00:07:52,440 --> 00:07:57,990
recognition works today and and why<font color="#E5E5E5"> is</font>

171
00:07:54,540 --> 00:07:59,520
it learns<font color="#CCCCCC"> the humans ability to do it in</font>

172
00:07:57,990 --> 00:08:01,080
<font color="#E5E5E5">to</font><font color="#CCCCCC"> enunciate words</font><font color="#E5E5E5"> the speech</font>

173
00:07:59,520 --> 00:08:03,090
recognition model actually breaks down

174
00:08:01,080 --> 00:08:05,760
more and more so<font color="#CCCCCC"> machine learning isn't</font>

175
00:08:03,090 --> 00:08:08,760
<font color="#E5E5E5">a monotonically in improving piece of</font>

176
00:08:05,760 --> 00:08:09,990
software<font color="#E5E5E5"> if the if the improvements</font>

177
00:08:08,760 --> 00:08:12,930
<font color="#E5E5E5">included inside the machine learning</font>

178
00:08:09,990 --> 00:08:15,840
model are not are not actively being

179
00:08:12,930 --> 00:08:18,690
managed by a human or being actively a

180
00:08:15,840 --> 00:08:22,560
process and and pruned<font color="#E5E5E5"> then actually did</font>

181
00:08:18,690 --> 00:08:25,469
the<font color="#E5E5E5"> efficacy of software is this is it</font>

182
00:08:22,560 --> 00:08:26,730
can go down<font color="#CCCCCC"> self-driving cars for</font>

183
00:08:25,470 --> 00:08:29,720
example are also a very popular

184
00:08:26,730 --> 00:08:32,659
application of deep learning

185
00:08:29,720 --> 00:08:34,820
most<font color="#CCCCCC"> self-driving cars are just made up</font>

186
00:08:32,659 --> 00:08:37,039
of certain sensors<font color="#E5E5E5"> and and and the camp</font>

187
00:08:34,820 --> 00:08:39,200
cameras<font color="#CCCCCC"> so what this does it just takes</font>

188
00:08:37,039 --> 00:08:40,909
the surroundings as input and<font color="#E5E5E5"> it tries</font>

189
00:08:39,200 --> 00:08:42,530
to recognize objects<font color="#CCCCCC"> and object</font>

190
00:08:40,909 --> 00:08:44,900
recognition is one of the core

191
00:08:42,530 --> 00:08:46,579
capabilities of deep learning what it

192
00:08:44,900 --> 00:08:49,100
does is it<font color="#E5E5E5"> just takes in an image and it</font>

193
00:08:46,580 --> 00:08:53,120
<font color="#E5E5E5">tries to recognize any object in orbit</font>

194
00:08:49,100 --> 00:08:56,630
<font color="#E5E5E5">taking arbitrary pixels</font><font color="#CCCCCC"> I'm about march</font>

195
00:08:53,120 --> 00:08:58,550
of<font color="#CCCCCC"> this year the</font><font color="#E5E5E5"> the world gold champion</font>

196
00:08:56,630 --> 00:09:00,530
<font color="#CCCCCC">that</font><font color="#E5E5E5"> the board</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> was beaten by</font>

197
00:08:58,550 --> 00:09:02,209
<font color="#CCCCCC">google to google's deepmind</font><font color="#E5E5E5"> which is</font>

198
00:09:00,530 --> 00:09:04,220
based off a deep learning algorithm

199
00:09:02,210 --> 00:09:08,000
using<font color="#CCCCCC"> lstm</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> we'll go a bit more into</font>

200
00:09:04,220 --> 00:09:10,190
that later<font color="#E5E5E5"> some security systems</font><font color="#CCCCCC"> have</font>

201
00:09:08,000 --> 00:09:12,350
also<font color="#E5E5E5"> famously used deep learning to to</font>

202
00:09:10,190 --> 00:09:14,240
achieve<font color="#E5E5E5"> pretty pretty good results and</font>

203
00:09:12,350 --> 00:09:15,470
examples<font color="#CCCCCC"> infancy as malware detection</font>

204
00:09:14,240 --> 00:09:17,180
system

205
00:09:15,470 --> 00:09:20,120
<font color="#E5E5E5">this</font><font color="#CCCCCC"> uses</font><font color="#E5E5E5"> some kind of you know pretty</font>

206
00:09:17,180 --> 00:09:23,329
pretty<font color="#E5E5E5"> iffy</font><font color="#CCCCCC"> graph graph processing</font>

207
00:09:20,120 --> 00:09:27,350
algorithms to<font color="#E5E5E5"> to detect map clusters of</font>

208
00:09:23,330 --> 00:09:28,850
activity<font color="#CCCCCC"> so why would someone choose to</font>

209
00:09:27,350 --> 00:09:30,350
use deep learning<font color="#CCCCCC"> / just traditional</font>

210
00:09:28,850 --> 00:09:31,850
<font color="#E5E5E5">machine learning or when</font><font color="#CCCCCC"> I say</font>

211
00:09:30,350 --> 00:09:33,620
traditional<font color="#E5E5E5"> machinery and</font><font color="#CCCCCC"> i'm referring</font>

212
00:09:31,850 --> 00:09:35,600
to things like linear<font color="#E5E5E5"> aggressors</font><font color="#CCCCCC"> and</font>

213
00:09:33,620 --> 00:09:39,830
<font color="#CCCCCC">different things</font><font color="#E5E5E5"> like SVM's or or</font>

214
00:09:35,600 --> 00:09:40,910
clustering algorithms<font color="#CCCCCC"> are the primary</font>

215
00:09:39,830 --> 00:09:44,839
reason is because deep learning

216
00:09:40,910 --> 00:09:47,240
represents a way of automatic feature

217
00:09:44,839 --> 00:09:48,770
learning<font color="#CCCCCC"> so what that means is that if</font>

218
00:09:47,240 --> 00:09:51,140
you have an input let's say you have an

219
00:09:48,770 --> 00:09:53,569
image and it and this image consists of

220
00:09:51,140 --> 00:09:56,120
<font color="#CCCCCC">of pixels and each of these pixels</font>

221
00:09:53,570 --> 00:09:58,490
contains maybe RGB values between 0 and

222
00:09:56,120 --> 00:10:03,530
255<font color="#CCCCCC"> how do you select the relevant</font>

223
00:09:58,490 --> 00:10:04,460
features<font color="#CCCCCC"> defeat into</font><font color="#E5E5E5"> this model I a big</font>

224
00:10:03,530 --> 00:10:07,010
problem<font color="#E5E5E5"> machine learning is</font>

225
00:10:04,460 --> 00:10:08,630
dimensionally reduction<font color="#E5E5E5"> and the reason</font>

226
00:10:07,010 --> 00:10:10,910
we do that<font color="#CCCCCC"> mention LT reduction is</font>

227
00:10:08,630 --> 00:10:13,939
number<font color="#E5E5E5"> one because of efficiency if you</font>

228
00:10:10,910 --> 00:10:15,949
want to learn every single feature<font color="#CCCCCC"> off</font>

229
00:10:13,940 --> 00:10:17,780
<font color="#E5E5E5">of every single input that you feed into</font>

230
00:10:15,950 --> 00:10:20,030
the model<font color="#E5E5E5"> then your model be very</font>

231
00:10:17,780 --> 00:10:22,040
inefficient<font color="#CCCCCC"> so there must be some</font>

232
00:10:20,030 --> 00:10:24,709
decision points in any particular input

233
00:10:22,040 --> 00:10:27,380
<font color="#E5E5E5">that would help the model make the same</font>

234
00:10:24,710 --> 00:10:29,120
decision as<font color="#E5E5E5"> a would</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> if a human were</font>

235
00:10:27,380 --> 00:10:31,970
to look at an image and recognize that

236
00:10:29,120 --> 00:10:34,070
this<font color="#CCCCCC"> nine is a</font><font color="#E5E5E5"> nine because there is a</font>

237
00:10:31,970 --> 00:10:37,310
circle in on the top and then there is a

238
00:10:34,070 --> 00:10:40,070
curve from the right to the left on<font color="#E5E5E5"> the</font>

239
00:10:37,310 --> 00:10:41,689
<font color="#E5E5E5">right after circle and</font><font color="#CCCCCC"> learning other</font>

240
00:10:40,070 --> 00:10:42,680
<font color="#CCCCCC">presents</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> instructor from multiple</font>

241
00:10:41,690 --> 00:10:44,720
problems<font color="#CCCCCC"> sore</font>

242
00:10:42,680 --> 00:10:46,010
off<font color="#CCCCCC"> if you think of other machine</font>

243
00:10:44,720 --> 00:10:47,720
learning models you can have to write

244
00:10:46,010 --> 00:10:49,670
different pieces of code to try

245
00:10:47,720 --> 00:10:51,440
different pieces<font color="#CCCCCC"> did</font><font color="#E5E5E5"> to work on</font>

246
00:10:49,670 --> 00:10:53,390
different problems and deep learning

247
00:10:51,440 --> 00:10:56,630
represents a single infrastructure which

248
00:10:53,390 --> 00:10:58,970
is a multi-layered<font color="#CCCCCC"> neutron</font><font color="#E5E5E5"> network and</font>

249
00:10:56,630 --> 00:11:00,439
this can promise to solve many different

250
00:10:58,970 --> 00:11:04,370
kinds of problems with just one piece of

251
00:11:00,440 --> 00:11:05,930
code and also with<font color="#E5E5E5"> problems becoming</font>

252
00:11:04,370 --> 00:11:07,940
larger and<font color="#E5E5E5"> harder you can perform</font><font color="#CCCCCC"> her</font>

253
00:11:05,930 --> 00:11:10,339
<font color="#CCCCCC">are you learning and distribute this</font>

254
00:11:07,940 --> 00:11:12,709
workload<font color="#E5E5E5"> among different nodes and and</font>

255
00:11:10,339 --> 00:11:14,300
across<font color="#E5E5E5"> the entire cluster</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> also</font>

256
00:11:12,709 --> 00:11:17,149
<font color="#E5E5E5">present itself as a very alluring</font>

257
00:11:14,300 --> 00:11:18,979
<font color="#E5E5E5">benefit to using deep learning over some</font>

258
00:11:17,149 --> 00:11:20,870
other algorithm like a clustering

259
00:11:18,980 --> 00:11:23,810
algorithms that cannot be officially

260
00:11:20,870 --> 00:11:27,080
distributed<font color="#E5E5E5"> was definitely not</font>

261
00:11:23,810 --> 00:11:29,060
one-size-fits-all as<font color="#E5E5E5"> well</font><font color="#CCCCCC"> come c so this</font>

262
00:11:27,080 --> 00:11:31,610
<font color="#CCCCCC">is what a standard your own</font><font color="#E5E5E5"> that looks</font>

263
00:11:29,060 --> 00:11:34,219
like this is<font color="#CCCCCC"> a.45 three-year</font><font color="#E5E5E5"> on that</font>

264
00:11:31,610 --> 00:11:36,560
architecture<font color="#CCCCCC"> 4532</font><font color="#E5E5E5"> simply means it's a</font>

265
00:11:34,220 --> 00:11:39,320
<font color="#CCCCCC">three layer Network because it's 45 in</font>

266
00:11:36,560 --> 00:11:40,910
three and the first layer has<font color="#CCCCCC"> four input</font>

267
00:11:39,320 --> 00:11:43,070
units the second layer which is the

268
00:11:40,910 --> 00:11:44,750
hidden layer has<font color="#E5E5E5"> five units and that the</font>

269
00:11:43,070 --> 00:11:47,390
<font color="#E5E5E5">last layer which is the output layer has</font>

270
00:11:44,750 --> 00:11:49,730
<font color="#E5E5E5">three units so what each of these units</font>

271
00:11:47,390 --> 00:11:52,100
are various activation functions<font color="#CCCCCC"> they</font>

272
00:11:49,730 --> 00:11:53,630
can be very simple linear functions<font color="#E5E5E5"> any</font>

273
00:11:52,100 --> 00:11:57,170
kind of function that basically allows

274
00:11:53,630 --> 00:11:59,300
you to turn that the unit on and off

275
00:11:57,170 --> 00:12:01,969
so one of the most common functions is

276
00:11:59,300 --> 00:12:06,589
just a sigmoid function which just means

277
00:12:01,970 --> 00:12:08,600
that if it is below<font color="#E5E5E5"> if the value off</font><font color="#CCCCCC"> of</font>

278
00:12:06,589 --> 00:12:11,480
<font color="#CCCCCC">the input is below 0 then the output</font>

279
00:12:08,600 --> 00:12:13,880
will be 0<font color="#E5E5E5"> if the value of the input</font>

280
00:12:11,480 --> 00:12:18,230
function is above<font color="#CCCCCC"> zero then output will</font>

281
00:12:13,880 --> 00:12:20,060
be<font color="#CCCCCC"> non zero only</font><font color="#E5E5E5"> positive and so let's</font>

282
00:12:18,230 --> 00:12:22,580
just zoom in on one particular path

283
00:12:20,060 --> 00:12:26,869
which is the important one<font color="#CCCCCC"> every time</font>

284
00:12:22,580 --> 00:12:28,910
you input<font color="#CCCCCC"> feature</font><font color="#E5E5E5"> vector into a neural</font>

285
00:12:26,870 --> 00:12:30,800
net<font color="#CCCCCC"> it will run through the input layer</font>

286
00:12:28,910 --> 00:12:34,219
it will activate the activation function

287
00:12:30,800 --> 00:12:37,250
and then each link between layers will

288
00:12:34,220 --> 00:12:39,770
have a weight<font color="#CCCCCC"> W associated with it and</font>

289
00:12:37,250 --> 00:12:41,300
when this is<font color="#CCCCCC"> passed through employee</font><font color="#E5E5E5"> and</font>

290
00:12:39,770 --> 00:12:43,550
goes to the second<font color="#E5E5E5"> layer</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> will</font>

291
00:12:41,300 --> 00:12:45,829
basically<font color="#E5E5E5"> be multiplied by the weight</font>

292
00:12:43,550 --> 00:12:47,870
and<font color="#E5E5E5"> a bias will be added to it and this</font>

293
00:12:45,829 --> 00:12:49,819
will go through the network<font color="#E5E5E5"> successfully</font>

294
00:12:47,870 --> 00:12:51,829
and<font color="#E5E5E5"> will be just</font><font color="#CCCCCC"> the upper layer and</font>

295
00:12:49,820 --> 00:12:55,820
then<font color="#CCCCCC"> as you can see here for example the</font>

296
00:12:51,829 --> 00:12:56,300
output is<font color="#CCCCCC"> 17</font><font color="#E5E5E5"> 28.5</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> 4.5</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is</font>

297
00:12:55,820 --> 00:12:59,090
what we call

298
00:12:56,300 --> 00:13:02,120
the logic<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the prediction</font><font color="#CCCCCC"> vector and</font>

299
00:12:59,090 --> 00:13:03,470
the largest of which<font color="#E5E5E5"> is</font><font color="#CCCCCC"> Sophie's</font>

300
00:13:02,120 --> 00:13:04,820
<font color="#CCCCCC">prediction</font><font color="#E5E5E5"> back through a softmax</font>

301
00:13:03,470 --> 00:13:08,000
function which<font color="#E5E5E5"> is basically a</font>

302
00:13:04,820 --> 00:13:10,550
<font color="#E5E5E5">normalization function that assigns a</font>

303
00:13:08,000 --> 00:13:12,860
probability to each output<font color="#CCCCCC"> you get</font><font color="#E5E5E5"> to</font>

304
00:13:10,550 --> 00:13:17,599
each output<font color="#E5E5E5"> and so you see in this case</font>

305
00:13:12,860 --> 00:13:19,790
0.57 is the most probable output<font color="#E5E5E5"> and so</font>

306
00:13:17,600 --> 00:13:23,720
if you can think of each position in

307
00:13:19,790 --> 00:13:25,280
this vector as a<font color="#CCCCCC"> sec output class</font><font color="#E5E5E5"> the</font>

308
00:13:23,720 --> 00:13:29,330
<font color="#E5E5E5">this neuron that were actually</font><font color="#CCCCCC"> predict</font>

309
00:13:25,280 --> 00:13:33,230
<font color="#E5E5E5">that the value for this input is</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> but</font>

310
00:13:29,330 --> 00:13:36,380
the correct<font color="#E5E5E5"> class is actually 0</font><font color="#CCCCCC"> let's</font>

311
00:13:33,230 --> 00:13:38,060
let's let's<font color="#CCCCCC"> look at this again</font><font color="#E5E5E5"> this is</font>

312
00:13:36,380 --> 00:13:41,720
the first step<font color="#CCCCCC"> but i</font><font color="#E5E5E5"> just described the</font>

313
00:13:38,060 --> 00:13:45,410
<font color="#CCCCCC">feed forward step</font><font color="#E5E5E5"> but in the case that</font>

314
00:13:41,720 --> 00:13:48,500
<font color="#E5E5E5">there's an error for example here again</font>

315
00:13:45,410 --> 00:13:51,890
<font color="#CCCCCC">the</font><font color="#E5E5E5"> correct answer is actually 0</font><font color="#CCCCCC"> but the</font>

316
00:13:48,500 --> 00:13:54,650
<font color="#CCCCCC">predictive</font><font color="#E5E5E5"> classes</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> and then we go to</font>

317
00:13:51,890 --> 00:13:57,020
the back<font color="#CCCCCC"> publications that which is the</font>

318
00:13:54,650 --> 00:13:58,490
crux of deep learning the model made a

319
00:13:57,020 --> 00:14:00,380
wrong decision we have to calculate the

320
00:13:58,490 --> 00:14:02,240
error and we have to assign blame<font color="#CCCCCC"> deep</font>

321
00:14:00,380 --> 00:14:04,880
<font color="#E5E5E5">learning is all the assigning blame</font><font color="#CCCCCC"> and</font>

322
00:14:02,240 --> 00:14:07,400
you<font color="#E5E5E5"> have a network that learns things so</font>

323
00:14:04,880 --> 00:14:09,860
you assign blame<font color="#E5E5E5"> to different units in</font>

324
00:14:07,400 --> 00:14:12,199
<font color="#E5E5E5">in the network by</font><font color="#CCCCCC"> backpropagation</font>

325
00:14:09,860 --> 00:14:13,880
<font color="#E5E5E5">tracing backwards to find units that</font>

326
00:14:12,200 --> 00:14:15,860
<font color="#E5E5E5">caught</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> contribute to this wrong</font>

327
00:14:13,880 --> 00:14:19,100
prediction and how much<font color="#CCCCCC"> to contribute</font><font color="#E5E5E5"> to</font>

328
00:14:15,860 --> 00:14:20,960
the total error<font color="#E5E5E5"> you penalize those units</font>

329
00:14:19,100 --> 00:14:23,450
by decreasing their weights by

330
00:14:20,960 --> 00:14:25,940
decreasing that<font color="#E5E5E5"> the value of W so that</font>

331
00:14:23,450 --> 00:14:29,240
in the future if the same if the same

332
00:14:25,940 --> 00:14:32,330
input was<font color="#E5E5E5"> defendant into this network</font>

333
00:14:29,240 --> 00:14:33,530
then those units<font color="#E5E5E5"> would be would be less</font>

334
00:14:32,330 --> 00:14:35,210
responsible for the amount of

335
00:14:33,530 --> 00:14:40,130
<font color="#E5E5E5">decision-making that this</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> network</font>

336
00:14:35,210 --> 00:14:42,050
would make<font color="#E5E5E5"> solely on just simple</font>

337
00:14:40,130 --> 00:14:42,890
multi-layer perceptrons which is what<font color="#CCCCCC"> i</font>

338
00:14:42,050 --> 00:14:44,839
just described

339
00:14:42,890 --> 00:14:47,569
there's also more complicated ways to

340
00:14:44,840 --> 00:14:49,700
optimize the<font color="#E5E5E5"> the predictions that</font><font color="#CCCCCC"> your</font>

341
00:14:47,570 --> 00:14:52,370
<font color="#E5E5E5">nets make the assistant convolutional</font>

342
00:14:49,700 --> 00:14:57,350
neural networks which basically<font color="#E5E5E5"> is just</font>

343
00:14:52,370 --> 00:15:01,760
a way to<font color="#E5E5E5"> our correlate features that are</font>

344
00:14:57,350 --> 00:15:04,880
geographically correlated<font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example</font>

345
00:15:01,760 --> 00:15:08,090
if you're looking at an image<font color="#E5E5E5"> this is a</font>

346
00:15:04,880 --> 00:15:09,680
pixel vector<font color="#E5E5E5"> it's a pixel matrix and a</font>

347
00:15:08,090 --> 00:15:12,320
convolution is just<font color="#E5E5E5"> a</font>

348
00:15:09,680 --> 00:15:14,959
<font color="#CCCCCC">Colonel</font><font color="#E5E5E5"> that you put on top of the image</font>

349
00:15:12,320 --> 00:15:17,149
and shift<font color="#CCCCCC"> around</font><font color="#E5E5E5"> such that you get a</font>

350
00:15:14,960 --> 00:15:19,820
resulting<font color="#E5E5E5"> a single result for each</font>

351
00:15:17,149 --> 00:15:22,100
<font color="#E5E5E5">overlap between the colonel and input</font>

352
00:15:19,820 --> 00:15:26,180
matrix and this just means that when

353
00:15:22,100 --> 00:15:27,980
you're looking at<font color="#E5E5E5"> met matrices of pixels</font>

354
00:15:26,180 --> 00:15:30,739
<font color="#CCCCCC">you won't have to look at every single</font>

355
00:15:27,980 --> 00:15:32,630
pixel<font color="#E5E5E5"> as a different input vector</font><font color="#CCCCCC"> you</font>

356
00:15:30,740 --> 00:15:37,850
<font color="#E5E5E5">you'll be looking at every single group</font>

357
00:15:32,630 --> 00:15:39,589
of pixels as a single value so

358
00:15:37,850 --> 00:15:42,709
convolutional neural networks allow us

359
00:15:39,589 --> 00:15:46,670
to<font color="#E5E5E5"> do</font><font color="#CCCCCC"> later learning</font><font color="#E5E5E5"> if you know about</font>

360
00:15:42,709 --> 00:15:48,560
<font color="#E5E5E5">about a facial recognition the the lower</font>

361
00:15:46,670 --> 00:15:50,930
the lower layers of the<font color="#E5E5E5"> network actually</font>

362
00:15:48,560 --> 00:15:53,000
<font color="#CCCCCC">recognized</font><font color="#E5E5E5"> very fine features because</font>

363
00:15:50,930 --> 00:15:55,849
<font color="#CCCCCC">the</font><font color="#E5E5E5"> the convolution kernels are</font>

364
00:15:53,000 --> 00:15:58,910
overlapped with the original input image

365
00:15:55,850 --> 00:16:00,620
are able to look at very fine features

366
00:15:58,910 --> 00:16:02,540
and are able to group very small

367
00:16:00,620 --> 00:16:04,399
features together so<font color="#CCCCCC"> so if you can see</font>

368
00:16:02,540 --> 00:16:07,699
<font color="#E5E5E5">on</font><font color="#CCCCCC"> layer 1</font><font color="#E5E5E5"> which is at the very bottom</font>

369
00:16:04,399 --> 00:16:10,100
you can see<font color="#E5E5E5"> things like eyelashes</font><font color="#CCCCCC"> and</font>

370
00:16:07,700 --> 00:16:12,680
see<font color="#E5E5E5"> things like wrinkles on the skin</font><font color="#CCCCCC"> as</font>

371
00:16:10,100 --> 00:16:14,480
you<font color="#E5E5E5"> move up when you put</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> convolution</font>

372
00:16:12,680 --> 00:16:16,729
over the previous leaders convolutions

373
00:16:14,480 --> 00:16:18,709
<font color="#CCCCCC">then you are</font><font color="#E5E5E5"> able to see higher level</font>

374
00:16:16,730 --> 00:16:20,480
features like the actual eyes<font color="#E5E5E5"> your</font>

375
00:16:18,709 --> 00:16:22,670
eyebrows and things like that and when

376
00:16:20,480 --> 00:16:24,650
you feed<font color="#CCCCCC"> them up into a</font><font color="#E5E5E5"> high earlier</font>

377
00:16:22,670 --> 00:16:26,300
<font color="#E5E5E5">than</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> able to see much more</font>

378
00:16:24,650 --> 00:16:28,850
abstract features like the shape of the

379
00:16:26,300 --> 00:16:33,050
face and whether your face<font color="#E5E5E5"> and it has a</font>

380
00:16:28,850 --> 00:16:34,970
<font color="#E5E5E5">moustache or not and this is exactly how</font>

381
00:16:33,050 --> 00:16:37,880
<font color="#CCCCCC">digit recognition</font><font color="#E5E5E5"> or character</font>

382
00:16:34,970 --> 00:16:41,360
recognition works<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is one of the</font>

383
00:16:37,880 --> 00:16:44,000
most famous and early<font color="#E5E5E5"> neural</font><font color="#CCCCCC"> network</font>

384
00:16:41,360 --> 00:16:49,820
<font color="#E5E5E5">step successfully had good results for</font>

385
00:16:44,000 --> 00:16:51,350
<font color="#E5E5E5">four digit recognition and a different</font>

386
00:16:49,820 --> 00:16:52,579
kind of your network is recurrent neural

387
00:16:51,350 --> 00:16:53,959
networks

388
00:16:52,579 --> 00:16:55,489
it's just a<font color="#E5E5E5"> deep neural net with a</font>

389
00:16:53,959 --> 00:16:57,500
feedback loop so what this means is that

390
00:16:55,490 --> 00:17:00,440
<font color="#E5E5E5">you're</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> instead of learning each</font>

391
00:16:57,500 --> 00:17:03,260
particular input<font color="#E5E5E5"> as its own vector</font><font color="#CCCCCC"> your</font>

392
00:17:00,440 --> 00:17:05,120
<font color="#E5E5E5">the previous inputs also also coming to</font>

393
00:17:03,260 --> 00:17:06,410
also come into play

394
00:17:05,119 --> 00:17:08,059
previous time step speed into

395
00:17:06,410 --> 00:17:09,980
intermediate steps and final values of

396
00:17:08,059 --> 00:17:11,689
the next time step and<font color="#E5E5E5"> introduces the</font>

397
00:17:09,980 --> 00:17:13,309
concept of memory<font color="#CCCCCC"> into networks so</font>

398
00:17:11,689 --> 00:17:15,800
instead of learning just images and

399
00:17:13,309 --> 00:17:17,540
being able to predict what is this input

400
00:17:15,800 --> 00:17:20,149
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> able to predict what comes next</font>

401
00:17:17,540 --> 00:17:21,710
<font color="#CCCCCC">and based on patch</font>

402
00:17:20,150 --> 00:17:25,820
it's in the past<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> able to predict</font>

403
00:17:21,710 --> 00:17:27,140
future patterns<font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example</font><font color="#CCCCCC"> of</font>

404
00:17:25,819 --> 00:17:28,850
something that<font color="#CCCCCC"> made</font><font color="#E5E5E5"> it makes use of</font>

405
00:17:27,140 --> 00:17:33,170
recurrent<font color="#E5E5E5"> neural networks would be a</font>

406
00:17:28,850 --> 00:17:35,060
<font color="#CCCCCC">text</font><font color="#E5E5E5"> generation engine based on let's</font>

407
00:17:33,170 --> 00:17:37,340
say you train a model on the

408
00:17:35,060 --> 00:17:40,760
<font color="#CCCCCC">english-language or are popular language</font>

409
00:17:37,340 --> 00:17:42,560
<font color="#E5E5E5">then you're able to to see that if a</font>

410
00:17:40,760 --> 00:17:44,510
<font color="#CCCCCC">wife comes first and it is probable that</font>

411
00:17:42,560 --> 00:17:47,120
and all<font color="#E5E5E5"> would come next and if a wine</font>

412
00:17:44,510 --> 00:17:50,810
all what was previously existing<font color="#CCCCCC"> than an</font>

413
00:17:47,120 --> 00:17:53,120
<font color="#CCCCCC">hour</font><font color="#E5E5E5"> comics and to make good predictions</font>

414
00:17:50,810 --> 00:17:54,500
we need more context so<font color="#CCCCCC"> long term memory</font>

415
00:17:53,120 --> 00:17:58,879
capabilities without extending the

416
00:17:54,500 --> 00:18:02,210
<font color="#E5E5E5">network's recursion caused the</font><font color="#CCCCCC"> birth of</font>

417
00:17:58,880 --> 00:18:05,180
<font color="#E5E5E5">long-term memories which is the core of</font>

418
00:18:02,210 --> 00:18:11,000
<font color="#CCCCCC">alpha</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> which is what beat the world</font>

419
00:18:05,180 --> 00:18:12,830
champion so speech recognition has been

420
00:18:11,000 --> 00:18:14,660
has been powered by it might be learning

421
00:18:12,830 --> 00:18:17,179
for for a long<font color="#E5E5E5"> time</font>

422
00:18:14,660 --> 00:18:19,100
these are this is just how some of the

423
00:18:17,180 --> 00:18:21,860
popular speech recognition algorithms

424
00:18:19,100 --> 00:18:23,330
have<font color="#E5E5E5"> have progress over the years</font><font color="#CCCCCC"> the</font>

425
00:18:21,860 --> 00:18:24,949
different<font color="#CCCCCC"> color</font><font color="#E5E5E5"> lines represent</font>

426
00:18:23,330 --> 00:18:27,379
different kinds of<font color="#E5E5E5"> data set step you</font>

427
00:18:24,950 --> 00:18:29,900
would use for speech recognition<font color="#CCCCCC"> the</font>

428
00:18:27,380 --> 00:18:32,690
black one represents<font color="#CCCCCC"> red speech which is</font>

429
00:18:29,900 --> 00:18:36,050
one of the most clear and and clearly

430
00:18:32,690 --> 00:18:38,000
enunciated<font color="#E5E5E5"> datasets ever and the red</font>

431
00:18:36,050 --> 00:18:41,180
<font color="#CCCCCC">ones is is really the Holy Grail it's</font>

432
00:18:38,000 --> 00:18:43,790
conversational speech<font color="#E5E5E5"> and this this data</font>

433
00:18:41,180 --> 00:18:47,060
set<font color="#CCCCCC"> I think</font><font color="#E5E5E5"> actually is from a speed</font>

434
00:18:43,790 --> 00:18:49,879
<font color="#E5E5E5">dating is</font><font color="#CCCCCC"> speed</font><font color="#E5E5E5"> dating recorded</font>

435
00:18:47,060 --> 00:18:51,320
conversation so<font color="#CCCCCC"> I</font><font color="#E5E5E5"> had</font><font color="#CCCCCC"> attracted</font><font color="#E5E5E5"> to</font>

436
00:18:49,880 --> 00:18:52,400
listen to it and<font color="#E5E5E5"> it's pretty kind of</font>

437
00:18:51,320 --> 00:18:53,419
<font color="#E5E5E5">it's pretty interesting what they're</font>

438
00:18:52,400 --> 00:18:57,860
talking about

439
00:18:53,420 --> 00:18:59,930
so the<font color="#CCCCCC"> cord representation is about how</font>

440
00:18:57,860 --> 00:19:02,870
to defeat machine learning and how to

441
00:18:59,930 --> 00:19:06,170
bypass such systems<font color="#CCCCCC"> there are some</font>

442
00:19:02,870 --> 00:19:08,600
general concepts that you can use<font color="#E5E5E5"> to</font><font color="#CCCCCC"> 22</font>

443
00:19:06,170 --> 00:19:10,910
<font color="#E5E5E5">power work like that</font>

444
00:19:08,600 --> 00:19:12,709
<font color="#CCCCCC">I think different machine that learning</font>

445
00:19:10,910 --> 00:19:15,860
models have different answers and and

446
00:19:12,710 --> 00:19:17,810
different ways that you have to look at

447
00:19:15,860 --> 00:19:19,550
it<font color="#E5E5E5"> to</font><font color="#CCCCCC"> regenerate</font><font color="#E5E5E5"> every single input or</font>

448
00:19:17,810 --> 00:19:23,480
<font color="#CCCCCC">to poison</font><font color="#E5E5E5"> the model in a way that would</font>

449
00:19:19,550 --> 00:19:25,610
cause an unexpected output<font color="#E5E5E5"> but they're</font>

450
00:19:23,480 --> 00:19:26,600
just a certain<font color="#CCCCCC"> of overarching</font><font color="#E5E5E5"> principles</font>

451
00:19:25,610 --> 00:19:28,610
that<font color="#E5E5E5"> that</font>

452
00:19:26,600 --> 00:19:30,110
you should know<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I think it's</font>

453
00:19:28,610 --> 00:19:35,809
important<font color="#E5E5E5"> and that's what this</font>

454
00:19:30,110 --> 00:19:37,490
presentation is about<font color="#E5E5E5"> so one of the most</font>

455
00:19:35,809 --> 00:19:40,910
popular<font color="#E5E5E5"> datasets</font><font color="#CCCCCC"> format</font><font color="#E5E5E5"> recognition is</font>

456
00:19:37,490 --> 00:19:44,929
the<font color="#CCCCCC"> CIF ar-10 dataset it's just</font>

457
00:19:40,910 --> 00:19:48,380
basically<font color="#E5E5E5"> 60,000 really really small</font>

458
00:19:44,929 --> 00:19:52,730
images each belong to one of<font color="#CCCCCC"> ten classes</font>

459
00:19:48,380 --> 00:19:57,350
<font color="#CCCCCC">so here i have a</font><font color="#E5E5E5"> two sets of pictures</font>

460
00:19:52,730 --> 00:19:59,720
<font color="#E5E5E5">one of a dog and one of a car and so you</font>

461
00:19:57,350 --> 00:20:02,270
know it's very<font color="#E5E5E5"> quickly because these</font>

462
00:19:59,720 --> 00:20:04,880
pixels<font color="#E5E5E5"> are</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> by</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> that these images</font>

463
00:20:02,270 --> 00:20:06,620
are<font color="#E5E5E5"> 10</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> 10 pixels large and the reason</font>

464
00:20:04,880 --> 00:20:09,020
why<font color="#CCCCCC"> are</font><font color="#E5E5E5"> 10</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> 10 pixels largest because</font>

465
00:20:06,620 --> 00:20:11,959
<font color="#E5E5E5">it's the facility</font><font color="#CCCCCC"> the training of the</font>

466
00:20:09,020 --> 00:20:13,639
model<font color="#CCCCCC"> if you</font><font color="#E5E5E5"> have ever trained the</font>

467
00:20:11,960 --> 00:20:15,200
<font color="#E5E5E5">machine learning while before you</font><font color="#CCCCCC"> don't</font>

468
00:20:13,640 --> 00:20:17,630
<font color="#E5E5E5">you understand that</font><font color="#CCCCCC"> training these</font>

469
00:20:15,200 --> 00:20:19,130
models take a lot of time and<font color="#E5E5E5"> the more</font>

470
00:20:17,630 --> 00:20:21,380
features you have the more time it takes

471
00:20:19,130 --> 00:20:24,289
and actually increases exponentially<font color="#E5E5E5"> so</font>

472
00:20:21,380 --> 00:20:27,350
having a small number of features<font color="#E5E5E5"> and</font>

473
00:20:24,289 --> 00:20:30,200
<font color="#E5E5E5">enables you to do research fast and and</font>

474
00:20:27,350 --> 00:20:32,719
enables you to<font color="#E5E5E5"> train model quickly into</font>

475
00:20:30,200 --> 00:20:37,370
it it and have smaller and shorter

476
00:20:32,720 --> 00:20:40,460
iterations<font color="#E5E5E5"> and so you see like when we</font>

477
00:20:37,370 --> 00:20:42,229
evaluate the dog and<font color="#CCCCCC"> the</font><font color="#E5E5E5"> india</font><font color="#CCCCCC"> and the</font>

478
00:20:40,460 --> 00:20:45,260
car<font color="#CCCCCC"> in</font><font color="#E5E5E5"> this case we're just developing</font>

479
00:20:42,230 --> 00:20:47,900
<font color="#E5E5E5">that the</font><font color="#CCCCCC"> dark first on</font><font color="#E5E5E5"> each different</font>

480
00:20:45,260 --> 00:20:50,090
example . norm<font color="#E5E5E5"> .</font><font color="#CCCCCC"> have 10</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> . gap</font>

481
00:20:47,900 --> 00:20:53,659
someone actually gives different results

482
00:20:50,090 --> 00:20:55,520
and<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> that actually means</font><font color="#E5E5E5"> adopt</font><font color="#CCCCCC"> at</font>

483
00:20:53,659 --> 00:20:57,650
this is actually the original<font color="#CCCCCC"> dark image</font>

484
00:20:55,520 --> 00:21:01,309
with some adversarial input added to it

485
00:20:57,650 --> 00:21:13,970
<font color="#E5E5E5">so we see the same thing for the</font>

486
00:21:01,309 --> 00:21:14,570
automobile<font color="#E5E5E5"> we do automobile at one which</font>

487
00:21:13,970 --> 00:21:19,490
<font color="#E5E5E5">looks</font>

488
00:21:14,570 --> 00:21:21,379
<font color="#CCCCCC">it says</font><font color="#E5E5E5"> the cap</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is this is a</font>

489
00:21:19,490 --> 00:21:22,850
<font color="#CCCCCC">black box attack which means that i</font>

490
00:21:21,380 --> 00:21:24,679
don't know anything about<font color="#E5E5E5"> internals of</font>

491
00:21:22,850 --> 00:21:26,480
<font color="#E5E5E5">the network this is a</font><font color="#CCCCCC"> pre-training</font><font color="#E5E5E5"> model</font>

492
00:21:24,679 --> 00:21:33,259
that<font color="#E5E5E5"> i downloaded from the tensorflow</font>

493
00:21:26,480 --> 00:21:35,659
<font color="#CCCCCC">codebase so</font><font color="#E5E5E5"> let's look at the</font>

494
00:21:33,259 --> 00:21:37,639
<font color="#CCCCCC">differences between each of these images</font>

495
00:21:35,659 --> 00:21:38,840
<font color="#CCCCCC">were just</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to read in this these</font>

496
00:21:37,639 --> 00:21:41,899
images and see how different they

497
00:21:38,840 --> 00:21:45,678
actually are<font color="#CCCCCC"> human ID</font><font color="#E5E5E5"> don't look that</font>

498
00:21:41,899 --> 00:21:51,049
different<font color="#E5E5E5"> if we if we if we were to just</font>

499
00:21:45,679 --> 00:21:54,169
look at these<font color="#E5E5E5"> uh</font><font color="#CCCCCC"> with her eyes and we</font>

500
00:21:51,049 --> 00:21:56,418
can see that<font color="#CCCCCC"> there they</font><font color="#E5E5E5"> look like images</font>

501
00:21:54,169 --> 00:22:01,730
that are the same with just a little bit

502
00:21:56,419 --> 00:22:05,960
of noise<font color="#E5E5E5"> added</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is the the pixel</font>

503
00:22:01,730 --> 00:22:16,340
matrix<font color="#CCCCCC"> the shape it's</font><font color="#E5E5E5"> 32</font><font color="#CCCCCC"> by 32</font><font color="#E5E5E5"> with</font>

504
00:22:05,960 --> 00:22:19,370
three channels<font color="#E5E5E5"> RGB</font><font color="#CCCCCC"> so we see that each</font>

505
00:22:16,340 --> 00:22:28,939
each<font color="#CCCCCC"> a pixel</font><font color="#E5E5E5"> has the minimum value of</font>

506
00:22:19,370 --> 00:22:31,008
<font color="#E5E5E5">zero</font><font color="#CCCCCC"> and Max off 25 which is</font><font color="#E5E5E5"> expected so</font>

507
00:22:28,940 --> 00:22:32,690
<font color="#CCCCCC">we're reading in the add one image for</font>

508
00:22:31,009 --> 00:22:40,700
the dog

509
00:22:32,690 --> 00:22:48,860
<font color="#CCCCCC">ok so this is also a image</font><font color="#E5E5E5"> matrix has</font>

510
00:22:40,700 --> 00:22:50,269
the same shape as<font color="#E5E5E5"> state normal image and</font>

511
00:22:48,860 --> 00:22:54,769
<font color="#CCCCCC">look at the difference by subtracting</font>

512
00:22:50,269 --> 00:22:56,210
the adversarial image by subtracting the

513
00:22:54,769 --> 00:23:06,289
normal image from the adversarial image

514
00:22:56,210 --> 00:23:10,700
<font color="#CCCCCC">so</font><font color="#E5E5E5"> you see that</font><font color="#CCCCCC"> there's just very small</font>

515
00:23:06,289 --> 00:23:15,500
perturbations in each in each pixel<font color="#CCCCCC"> off</font>

516
00:23:10,700 --> 00:23:20,809
<font color="#E5E5E5">plus</font><font color="#CCCCCC"> 1 or minus 1 or minus 2 and human</font>

517
00:23:15,500 --> 00:23:22,970
<font color="#CCCCCC">are you can't tell</font><font color="#E5E5E5"> a pixel 001 000 very</font>

518
00:23:20,809 --> 00:23:24,830
well<font color="#E5E5E5"> you can tell them apart but to a</font>

519
00:23:22,970 --> 00:23:26,929
model which actually looks for certain

520
00:23:24,830 --> 00:23:30,080
things to learn to recognize that this

521
00:23:26,929 --> 00:23:31,279
particular<font color="#CCCCCC"> images a dark</font><font color="#E5E5E5"> it actually can</font>

522
00:23:30,080 --> 00:23:33,408
recognize it and actually makes a

523
00:23:31,279 --> 00:23:40,039
difference to what<font color="#E5E5E5"> prediction it makes</font>

524
00:23:33,409 --> 00:23:42,230
so we<font color="#CCCCCC"> printed out the difference</font><font color="#E5E5E5"> and it</font>

525
00:23:40,039 --> 00:23:45,919
looks like garbage<font color="#E5E5E5"> added to the dark</font>

526
00:23:42,230 --> 00:23:49,760
image and that causes the result<font color="#CCCCCC"> this</font>

527
00:23:45,919 --> 00:23:51,320
which looks pretty much the same<font color="#E5E5E5"> so just</font>

528
00:23:49,760 --> 00:23:53,690
goes to prove that your eyes can't

529
00:23:51,320 --> 00:23:57,200
really tell apart<font color="#E5E5E5"> images</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> slightly</font>

530
00:23:53,690 --> 00:23:58,580
different but as we saw earlier<font color="#CCCCCC"> the</font>

531
00:23:57,200 --> 00:24:04,519
machine learning model<font color="#E5E5E5"> thought</font>

532
00:23:58,580 --> 00:24:05,960
differently<font color="#CCCCCC"> now</font><font color="#E5E5E5"> let's see that tend to</font>

533
00:24:04,519 --> 00:24:08,600
<font color="#E5E5E5">see what a difference between that one</font>

534
00:24:05,960 --> 00:24:12,080
and<font color="#CCCCCC"> i have</font><font color="#E5E5E5"> 10 is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> 10 is</font>

535
00:24:08,600 --> 00:24:17,779
basically a stronger perturbation to the

536
00:24:12,080 --> 00:24:19,460
original input that we saw earlier and

537
00:24:17,779 --> 00:24:22,880
if<font color="#E5E5E5"> we do the same thing by subtracting</font>

538
00:24:19,460 --> 00:24:24,800
<font color="#CCCCCC">Dorian</font>

539
00:24:22,880 --> 00:24:28,070
it's from<font color="#E5E5E5"> and we see larger</font>

540
00:24:24,800 --> 00:24:33,950
perturbations of the input vector

541
00:24:28,070 --> 00:24:35,000
yep<font color="#E5E5E5"> so we'll come back to that</font><font color="#CCCCCC"> little</font>

542
00:24:33,950 --> 00:24:36,800
<font color="#E5E5E5">bit more later</font>

543
00:24:35,000 --> 00:24:38,690
let's look at some attacks economy to

544
00:24:36,800 --> 00:24:40,399
see where the vulnerabilities are<font color="#E5E5E5"> these</font>

545
00:24:38,690 --> 00:24:42,380
machine learning models<font color="#CCCCCC"> there are two</font>

546
00:24:40,400 --> 00:24:43,850
kinds of<font color="#CCCCCC"> general general</font><font color="#E5E5E5"> are two kinds</font>

547
00:24:42,380 --> 00:24:45,920
of attacks that you can do on machine

548
00:24:43,850 --> 00:24:48,350
learning<font color="#E5E5E5"> one kind</font><font color="#CCCCCC"> is causative</font><font color="#E5E5E5"> and one</font>

549
00:24:45,920 --> 00:24:50,720
kind of explore exploratory<font color="#CCCCCC"> the</font>

550
00:24:48,350 --> 00:24:52,850
<font color="#CCCCCC">causative</font><font color="#E5E5E5"> attacks actually</font><font color="#CCCCCC"> required</font><font color="#E5E5E5"> a</font>

551
00:24:50,720 --> 00:24:55,430
minute<font color="#CCCCCC"> late training samples machine</font>

552
00:24:52,850 --> 00:24:59,120
<font color="#E5E5E5">learning is into two general</font><font color="#CCCCCC"> stages</font><font color="#E5E5E5"> one</font>

553
00:24:55,430 --> 00:25:03,740
is training and<font color="#E5E5E5"> one is testing so in in</font>

554
00:24:59,120 --> 00:25:06,199
most models in most models<font color="#E5E5E5"> the training</font>

555
00:25:03,740 --> 00:25:08,420
step and testing<font color="#E5E5E5"> step are separated but</font>

556
00:25:06,200 --> 00:25:11,870
in some examples that you can see online

557
00:25:08,420 --> 00:25:13,550
for example in<font color="#E5E5E5"> google translate</font>

558
00:25:11,870 --> 00:25:15,770
they're actually making use of an online

559
00:25:13,550 --> 00:25:18,260
learning system which basically means

560
00:25:15,770 --> 00:25:20,600
that every new<font color="#CCCCCC"> prediction that</font><font color="#E5E5E5"> it makes</font>

561
00:25:18,260 --> 00:25:24,050
it immediately<font color="#E5E5E5"> takes in feedback from a</font>

562
00:25:20,600 --> 00:25:25,850
user to<font color="#E5E5E5"> train the</font><font color="#CCCCCC"> model</font><font color="#E5E5E5"> even more so for</font>

563
00:25:24,050 --> 00:25:28,340
example when you make a translation and

564
00:25:25,850 --> 00:25:30,169
you see that it it did pretty poorly<font color="#CCCCCC"> you</font>

565
00:25:28,340 --> 00:25:31,760
can right click and then select<font color="#E5E5E5"> the</font>

566
00:25:30,170 --> 00:25:34,430
right<font color="#CCCCCC"> that the</font><font color="#E5E5E5"> right translation for</font>

567
00:25:31,760 --> 00:25:36,470
<font color="#E5E5E5">according to you a human and the model</font>

568
00:25:34,430 --> 00:25:38,990
actually take this input and<font color="#CCCCCC"> train its</font>

569
00:25:36,470 --> 00:25:41,480
model even more so this is a scenario<font color="#E5E5E5"> in</font>

570
00:25:38,990 --> 00:25:44,330
<font color="#E5E5E5">which the training and testing step</font><font color="#CCCCCC"> RR</font>

571
00:25:41,480 --> 00:25:46,250
interweaved<font color="#CCCCCC"> in most</font><font color="#E5E5E5"> cases offline</font>

572
00:25:44,330 --> 00:25:47,810
learning<font color="#E5E5E5"> the</font><font color="#CCCCCC"> trainings that is separate</font>

573
00:25:46,250 --> 00:25:49,700
from the testing step<font color="#CCCCCC"> so you were</font>

574
00:25:47,810 --> 00:25:51,290
trained a model offline and then you

575
00:25:49,700 --> 00:25:53,510
<font color="#CCCCCC">would deploy</font><font color="#E5E5E5"> this model to a web server</font>

576
00:25:51,290 --> 00:25:58,790
or somewhere where user will interact

577
00:25:53,510 --> 00:26:02,240
with it<font color="#E5E5E5"> and then um if you were to read</font>

578
00:25:58,790 --> 00:26:05,000
<font color="#CCCCCC">trip have to take in input from other</font>

579
00:26:02,240 --> 00:26:08,210
sources<font color="#E5E5E5"> to to retrain this model based</font>

580
00:26:05,000 --> 00:26:09,680
off the old model<font color="#E5E5E5"> so positive attacks</font>

581
00:26:08,210 --> 00:26:11,480
basically means that you have access to

582
00:26:09,680 --> 00:26:13,310
this training stage<font color="#CCCCCC"> with it isn't always</font>

583
00:26:11,480 --> 00:26:15,800
the case<font color="#E5E5E5"> because these models can be</font>

584
00:26:13,310 --> 00:26:17,629
trained<font color="#E5E5E5"> privately in your own private</font>

585
00:26:15,800 --> 00:26:20,210
servers and users may not ever have

586
00:26:17,630 --> 00:26:22,010
access to this training stage<font color="#CCCCCC"> explored</font>

587
00:26:20,210 --> 00:26:24,980
<font color="#CCCCCC">your attacks are</font><font color="#E5E5E5"> more powerful in the</font>

588
00:26:22,010 --> 00:26:26,660
sense that the users<font color="#E5E5E5"> or the attackers</font>

589
00:26:24,980 --> 00:26:28,400
don't necessarily have to have access to

590
00:26:26,660 --> 00:26:30,350
the training stage<font color="#CCCCCC"> all they have</font><font color="#E5E5E5"> to have</font>

591
00:26:28,400 --> 00:26:33,610
is access to the model to the testing

592
00:26:30,350 --> 00:26:35,889
stage and<font color="#E5E5E5"> feed in adversarial examples</font>

593
00:26:33,610 --> 00:26:38,290
<font color="#E5E5E5">and they can adjust the output that is</font>

594
00:26:35,890 --> 00:26:41,170
this model gifts<font color="#E5E5E5"> and so this is the</font>

595
00:26:38,290 --> 00:26:43,240
example that I showed earlier<font color="#CCCCCC"> whereby</font>

596
00:26:41,170 --> 00:26:45,190
<font color="#CCCCCC">wouldn't have access to the image</font>

597
00:26:43,240 --> 00:26:46,720
recognition<font color="#CCCCCC"> model at all we just</font><font color="#E5E5E5"> fed in</font>

598
00:26:45,190 --> 00:26:50,620
a different image that was slightly

599
00:26:46,720 --> 00:26:55,059
changed<font color="#E5E5E5"> but we were able to force a</font>

600
00:26:50,620 --> 00:26:57,159
different output from the model so<font color="#CCCCCC"> i can</font>

601
00:26:55,059 --> 00:26:59,559
<font color="#E5E5E5">we do this</font><font color="#CCCCCC"> the general principle behind</font>

602
00:26:57,160 --> 00:27:01,210
this is blind spots<font color="#CCCCCC"> machine</font><font color="#E5E5E5"> learning</font>

603
00:26:59,559 --> 00:27:03,639
models don't learn the same way that

604
00:27:01,210 --> 00:27:05,230
humans do<font color="#CCCCCC"> i think when we talk about</font>

605
00:27:03,640 --> 00:27:08,230
deep learning a lot of people seem to

606
00:27:05,230 --> 00:27:09,970
think that deep learning systems<font color="#CCCCCC"> learn</font>

607
00:27:08,230 --> 00:27:12,010
<font color="#E5E5E5">in exactly the same way as humans learn</font>

608
00:27:09,970 --> 00:27:13,870
<font color="#CCCCCC">about humans don't necessarily look at</font>

609
00:27:12,010 --> 00:27:15,400
individual pixel values and<font color="#E5E5E5"> recognize</font>

610
00:27:13,870 --> 00:27:17,260
<font color="#E5E5E5">that and recognize objects like that</font>

611
00:27:15,400 --> 00:27:18,730
<font color="#CCCCCC">what we do is we look for salient</font>

612
00:27:17,260 --> 00:27:22,150
features we look for features that are

613
00:27:18,730 --> 00:27:24,130
telling of what of what this object is

614
00:27:22,150 --> 00:27:25,690
and then we remember this and in the

615
00:27:24,130 --> 00:27:27,850
future if we<font color="#E5E5E5"> recognize these same</font>

616
00:27:25,690 --> 00:27:29,950
features again<font color="#E5E5E5"> then we would classify</font>

617
00:27:27,850 --> 00:27:31,840
the object of such<font color="#E5E5E5"> but this is actually</font>

618
00:27:29,950 --> 00:27:34,059
really really tough thing for<font color="#E5E5E5"> for</font>

619
00:27:31,840 --> 00:27:36,399
machine learning models<font color="#E5E5E5"> do because</font><font color="#CCCCCC"> there</font>

620
00:27:34,059 --> 00:27:38,350
<font color="#CCCCCC">are</font><font color="#E5E5E5"> just so many rules that we have that</font>

621
00:27:36,400 --> 00:27:41,980
we have grown up with that<font color="#E5E5E5"> contrast has</font>

622
00:27:38,350 --> 00:27:45,459
<font color="#CCCCCC">implicated in us that these things</font>

623
00:27:41,980 --> 00:27:50,799
cannot be effectively coded into<font color="#CCCCCC"> assn</font>

624
00:27:45,460 --> 00:27:53,679
model<font color="#E5E5E5"> so</font><font color="#CCCCCC"> impersonal</font><font color="#E5E5E5"> deep learning is</font>

625
00:27:50,799 --> 00:27:57,460
mainly three steps first thing is<font color="#CCCCCC"> Randy</font>

626
00:27:53,679 --> 00:27:59,049
<font color="#E5E5E5">input X through the classifier model and</font>

627
00:27:57,460 --> 00:28:00,850
then the second step is<font color="#CCCCCC"> to based on</font>

628
00:27:59,049 --> 00:28:03,760
model<font color="#CCCCCC"> prediction derive a perturbation</font>

629
00:28:00,850 --> 00:28:05,918
<font color="#E5E5E5">tensor or part vector that maximizes the</font>

630
00:28:03,760 --> 00:28:07,330
chances of this classification<font color="#CCCCCC"> there are</font>

631
00:28:05,919 --> 00:28:09,790
<font color="#E5E5E5">three ways of doing this</font><font color="#CCCCCC"> I'll go</font><font color="#E5E5E5"> into</font>

632
00:28:07,330 --> 00:28:11,409
detail later<font color="#CCCCCC"> and after step is to scale</font>

633
00:28:09,790 --> 00:28:13,899
this<font color="#CCCCCC"> preservation</font><font color="#E5E5E5"> tensor</font><font color="#CCCCCC"> by some</font>

634
00:28:11,410 --> 00:28:16,960
arbitrary magnitude<font color="#CCCCCC"> the smaller</font>

635
00:28:13,900 --> 00:28:18,880
magnitude you<font color="#E5E5E5"> you scale this by the less</font>

636
00:28:16,960 --> 00:28:21,490
detectable<font color="#CCCCCC"> of this to a human looking at</font>

637
00:28:18,880 --> 00:28:24,220
it<font color="#E5E5E5"> but also the chances of it actually</font>

638
00:28:21,490 --> 00:28:27,010
<font color="#CCCCCC">tricking the model are lower</font><font color="#E5E5E5"> . the</font>

639
00:28:24,220 --> 00:28:29,799
larger<font color="#CCCCCC"> scale</font><font color="#E5E5E5"> it by</font><font color="#CCCCCC"> human</font><font color="#E5E5E5"> will be ordered</font>

640
00:28:27,010 --> 00:28:35,230
<font color="#E5E5E5">the detective but also</font><font color="#CCCCCC"> will be able to</font>

641
00:28:29,799 --> 00:28:37,090
<font color="#E5E5E5">trick the model much faster so the very</font>

642
00:28:35,230 --> 00:28:38,799
first way that people that someone came

643
00:28:37,090 --> 00:28:40,480
up with for treating this model is

644
00:28:38,799 --> 00:28:41,889
basically to traverse the data manifold

645
00:28:40,480 --> 00:28:44,380
to find<font color="#E5E5E5"> blind</font><font color="#CCCCCC"> spots and input space</font>

646
00:28:41,890 --> 00:28:46,450
<font color="#E5E5E5">after</font><font color="#CCCCCC"> several samples are basically</font>

647
00:28:44,380 --> 00:28:46,840
<font color="#E5E5E5">pockets in the manifold</font><font color="#CCCCCC"> so it can</font><font color="#E5E5E5"> think</font>

648
00:28:46,450 --> 00:28:49,810
of

649
00:28:46,840 --> 00:28:53,830
all possible<font color="#E5E5E5"> pixel variations that make</font>

650
00:28:49,810 --> 00:28:55,629
up the image<font color="#CCCCCC"> one</font><font color="#E5E5E5"> for example what we</font>

651
00:28:53,830 --> 00:28:58,389
want is for every single different

652
00:28:55,630 --> 00:29:01,030
<font color="#E5E5E5">picture set of pixels that</font><font color="#CCCCCC"> look</font><font color="#E5E5E5"> like a</font>

653
00:28:58,390 --> 00:29:03,310
<font color="#E5E5E5">12 human to be classified as a</font><font color="#CCCCCC"> 1 in this</font>

654
00:29:01,030 --> 00:29:07,420
<font color="#E5E5E5">machine learning model but that's not</font>

655
00:29:03,310 --> 00:29:09,610
actually the case<font color="#CCCCCC"> so this actually just</font>

656
00:29:07,420 --> 00:29:12,580
does a<font color="#CCCCCC"> brute force attack</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> service</font>

657
00:29:09,610 --> 00:29:15,070
<font color="#CCCCCC">for pixels that up</font>

658
00:29:12,580 --> 00:29:19,510
pixel<font color="#E5E5E5"> variations that do not result in</font>

659
00:29:15,070 --> 00:29:22,090
<font color="#CCCCCC">an</font><font color="#E5E5E5"> in the correct classification</font><font color="#CCCCCC"> then</font>

660
00:29:19,510 --> 00:29:24,040
there's also another attack just

661
00:29:22,090 --> 00:29:25,810
<font color="#E5E5E5">developed last year that use linear</font>

662
00:29:24,040 --> 00:29:27,340
<font color="#CCCCCC">adversary participation as an attack</font>

663
00:29:25,810 --> 00:29:29,409
<font color="#CCCCCC">develop</font><font color="#E5E5E5"> a linear view of the other</font>

664
00:29:27,340 --> 00:29:31,149
examples and<font color="#E5E5E5"> you're basically using</font><font color="#CCCCCC"> a</font>

665
00:29:29,410 --> 00:29:33,010
cost function gradient of $PERCENT off

666
00:29:31,150 --> 00:29:34,780
the network with respect to the input

667
00:29:33,010 --> 00:29:38,350
sample<font color="#E5E5E5"> and the original</font><font color="#CCCCCC"> particular class</font>

668
00:29:34,780 --> 00:29:40,960
to derive<font color="#E5E5E5"> a sign for which this</font>

669
00:29:38,350 --> 00:29:42,790
perturbation should be added<font color="#E5E5E5"> to</font><font color="#CCCCCC"> so for</font>

670
00:29:40,960 --> 00:29:45,250
<font color="#E5E5E5">example if you take</font><font color="#CCCCCC"> a class function</font>

671
00:29:42,790 --> 00:29:47,379
gradient with respect to<font color="#E5E5E5"> x and y and you</font>

672
00:29:45,250 --> 00:29:50,710
find<font color="#CCCCCC"> that</font><font color="#E5E5E5"> it's positive</font><font color="#CCCCCC"> 1 then you just</font>

673
00:29:47,380 --> 00:29:53,170
basically add<font color="#E5E5E5"> +1 to the entire input and</font>

674
00:29:50,710 --> 00:29:55,660
this<font color="#CCCCCC"> would more effectively trichter and</font>

675
00:29:53,170 --> 00:29:57,880
then the network and the last one which

676
00:29:55,660 --> 00:29:59,590
is the most effective<font color="#E5E5E5"> one is the</font><font color="#CCCCCC"> trouble</font>

677
00:29:57,880 --> 00:30:01,570
<font color="#E5E5E5">is that</font><font color="#CCCCCC"> the carbon</font><font color="#E5E5E5"> matrix</font><font color="#CCCCCC"> preservation</font>

678
00:29:59,590 --> 00:30:03,760
way<font color="#CCCCCC"> i won't go into the details of the</font>

679
00:30:01,570 --> 00:30:05,139
<font color="#CCCCCC">sisters</font><font color="#E5E5E5"> pretty complex reservations but</font>

680
00:30:03,760 --> 00:30:07,990
basically this dress looks at the

681
00:30:05,140 --> 00:30:11,260
saliency map of each image<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is a</font>

682
00:30:07,990 --> 00:30:13,300
28 x 28<font color="#CCCCCC"> saliency map</font><font color="#E5E5E5"> and you see that</font>

683
00:30:11,260 --> 00:30:15,070
the higher the values of<font color="#E5E5E5"> of perturbation</font>

684
00:30:13,300 --> 00:30:17,950
<font color="#E5E5E5">it means that this network actually</font>

685
00:30:15,070 --> 00:30:21,820
looks at this particular pixel<font color="#E5E5E5"> more</font>

686
00:30:17,950 --> 00:30:24,250
seriously and if you change<font color="#E5E5E5"> for example</font>

687
00:30:21,820 --> 00:30:25,689
<font color="#E5E5E5">the</font><font color="#CCCCCC"> centre pixel x</font><font color="#E5E5E5"> little</font><font color="#CCCCCC"> bit by a</font>

688
00:30:24,250 --> 00:30:27,580
little bit<font color="#CCCCCC"> will be much more effective</font>

689
00:30:25,690 --> 00:30:33,340
<font color="#E5E5E5">and changing the pixels on the side by a</font>

690
00:30:27,580 --> 00:30:35,740
little bit<font color="#E5E5E5"> so those</font><font color="#CCCCCC"> 20 model for this is</font>

691
00:30:33,340 --> 00:30:37,419
is a small<font color="#E5E5E5"> trifold of course if you have</font>

692
00:30:35,740 --> 00:30:39,010
access to the<font color="#CCCCCC"> high parameters if you</font>

693
00:30:37,420 --> 00:30:42,040
have access to the actual model itself

694
00:30:39,010 --> 00:30:43,990
and every value in<font color="#E5E5E5"> basically all the</font>

695
00:30:42,040 --> 00:30:45,700
weights and biases in<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the network</font>

696
00:30:43,990 --> 00:30:47,350
<font color="#E5E5E5">then you're able to do a lot</font>

697
00:30:45,700 --> 00:30:49,270
however if you only know<font color="#E5E5E5"> the</font>

698
00:30:47,350 --> 00:30:50,709
architecture or if you only know the

699
00:30:49,270 --> 00:30:52,870
training data used to<font color="#E5E5E5"> train this network</font>

700
00:30:50,710 --> 00:30:54,130
been able to do less<font color="#CCCCCC"> and</font><font color="#E5E5E5"> if you don't</font>

701
00:30:52,870 --> 00:30:56,389
know anything about it at all you only

702
00:30:54,130 --> 00:30:58,580
have access<font color="#E5E5E5"> to input and the output then</font>

703
00:30:56,390 --> 00:31:03,830
it's basically a black box<font color="#CCCCCC"> so what can</font>

704
00:30:58,580 --> 00:31:05,990
you do if it's a black box<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> just</font>

705
00:31:03,830 --> 00:31:07,399
a summary of<font color="#E5E5E5"> a text is the slightly</font><font color="#CCCCCC"> post</font>

706
00:31:05,990 --> 00:31:08,720
<font color="#E5E5E5">later and you can take a look at them</font>

707
00:31:07,400 --> 00:31:12,260
<font color="#E5E5E5">there's some interesting work then</font>

708
00:31:08,720 --> 00:31:15,560
<font color="#CCCCCC">bye-bye</font><font color="#E5E5E5"> different people with different</font>

709
00:31:12,260 --> 00:31:17,420
assumptions about the adversarial

710
00:31:15,560 --> 00:31:21,830
knowledge and complexity of the<font color="#E5E5E5"> attack</font>

711
00:31:17,420 --> 00:31:24,560
as a result<font color="#CCCCCC"> so you can do with a lot of</font>

712
00:31:21,830 --> 00:31:26,899
limited knowledge throughout this

713
00:31:24,560 --> 00:31:28,490
research I<font color="#CCCCCC"> i did some experiments on how</font>

714
00:31:26,900 --> 00:31:29,630
easy it is to bypass machine learning

715
00:31:28,490 --> 00:31:31,430
systems when<font color="#E5E5E5"> I didn't know anything</font>

716
00:31:29,630 --> 00:31:33,200
about it at all

717
00:31:31,430 --> 00:31:35,660
the most important thing<font color="#E5E5E5"> is to make good</font>

718
00:31:33,200 --> 00:31:37,100
guesses about<font color="#E5E5E5"> about the model</font><font color="#CCCCCC"> even if</font>

719
00:31:35,660 --> 00:31:39,170
you don't know exactly how the model was

720
00:31:37,100 --> 00:31:42,050
implemented or you don't know what kind

721
00:31:39,170 --> 00:31:43,490
of<font color="#CCCCCC"> nero net was used in this model</font><font color="#E5E5E5"> you</font>

722
00:31:42,050 --> 00:31:45,470
can make good guesses<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the</font>

723
00:31:43,490 --> 00:31:47,810
classifications most<font color="#E5E5E5"> commonly</font><font color="#CCCCCC"> used</font>

724
00:31:45,470 --> 00:31:49,910
<font color="#E5E5E5">convolutional neural net</font><font color="#CCCCCC"> ignition</font>

725
00:31:47,810 --> 00:31:52,070
engines most commonly used<font color="#CCCCCC"> LSD ms or</font>

726
00:31:49,910 --> 00:31:54,740
<font color="#CCCCCC">recurrent neural networks because they</font>

727
00:31:52,070 --> 00:31:57,649
need to understand<font color="#CCCCCC"> a sequence in the</font>

728
00:31:54,740 --> 00:32:01,790
input for arbitrary machine learning as

729
00:31:57,650 --> 00:32:03,710
<font color="#E5E5E5">a service models like</font><font color="#CCCCCC"> Amazon ml</font><font color="#E5E5E5"> Google</font>

730
00:32:01,790 --> 00:32:05,240
prediction<font color="#CCCCCC"> they use very shallow</font>

731
00:32:03,710 --> 00:32:07,220
networks because they need to generalize

732
00:32:05,240 --> 00:32:09,050
well if you<font color="#E5E5E5"> have more shallow</font><font color="#CCCCCC"> network</font>

733
00:32:07,220 --> 00:32:11,660
<font color="#CCCCCC">you're able to to come up with more</font>

734
00:32:09,050 --> 00:32:13,550
generalized understandings of arbitrary

735
00:32:11,660 --> 00:32:15,800
problems<font color="#CCCCCC"> if you have a deeper</font><font color="#E5E5E5"> network</font>

736
00:32:13,550 --> 00:32:19,159
then your models more likely to overfit

737
00:32:15,800 --> 00:32:23,030
<font color="#E5E5E5">so if you can guess you still can do</font>

738
00:32:19,160 --> 00:32:27,260
quite a bit<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a the the last</font><font color="#CCCCCC"> mode</font>

739
00:32:23,030 --> 00:32:29,300
<font color="#CCCCCC">i have Patrick</font><font color="#E5E5E5"> is a</font><font color="#CCCCCC"> someone's cool</font>

740
00:32:27,260 --> 00:32:31,280
project that was used to<font color="#E5E5E5"> recognize image</font>

741
00:32:29,300 --> 00:32:34,190
captures<font color="#E5E5E5"> so kept the whole point of</font>

742
00:32:31,280 --> 00:32:36,200
<font color="#CCCCCC">captures is</font><font color="#E5E5E5"> that you don't want a</font><font color="#CCCCCC"> but to</font>

743
00:32:34,190 --> 00:32:38,330
be able<font color="#E5E5E5"> to automatically solve it but of</font>

744
00:32:36,200 --> 00:32:40,700
course as you might know there's lots of

745
00:32:38,330 --> 00:32:43,159
things that that actually<font color="#E5E5E5"> solve</font><font color="#CCCCCC"> captures</font>

746
00:32:40,700 --> 00:32:45,320
for you<font color="#CCCCCC"> as</font><font color="#E5E5E5"> even capture solving services</font>

747
00:32:43,160 --> 00:32:48,530
like<font color="#E5E5E5"> death by capture that use some kind</font>

748
00:32:45,320 --> 00:32:50,000
of<font color="#E5E5E5"> mechanical turk thing so that someone</font>

749
00:32:48,530 --> 00:32:51,410
on the other end of a computer somewhere

750
00:32:50,000 --> 00:32:53,510
else in the world can solve the capture

751
00:32:51,410 --> 00:32:55,670
for you<font color="#CCCCCC"> but that's not really scalable</font>

752
00:32:53,510 --> 00:32:57,230
because like<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> know many people</font>

753
00:32:55,670 --> 00:32:59,570
who are willing to sit down<font color="#CCCCCC"> with</font>

754
00:32:57,230 --> 00:33:00,950
<font color="#E5E5E5">computers and</font><font color="#CCCCCC"> her</font><font color="#E5E5E5"> like half a cent per</font>

755
00:32:59,570 --> 00:33:04,309
<font color="#CCCCCC">capita itself</font>

756
00:33:00,950 --> 00:33:05,870
so this actually is a program that uses

757
00:33:04,309 --> 00:33:08,330
machine learning in deep learning to

758
00:33:05,870 --> 00:33:11,570
<font color="#E5E5E5">recognize images even if it looks really</font>

759
00:33:08,330 --> 00:33:14,779
convoluted<font color="#CCCCCC"> its able</font><font color="#E5E5E5"> to get the right</font>

760
00:33:11,570 --> 00:33:16,850
results<font color="#CCCCCC"> so we just</font><font color="#E5E5E5"> run this just an</font>

761
00:33:14,779 --> 00:33:21,769
example of how deep learning capture

762
00:33:16,850 --> 00:33:23,990
recognition<font color="#E5E5E5"> engines work so this is a</font>

763
00:33:21,769 --> 00:33:26,059
pretty<font color="#CCCCCC"> naive example there are many</font>

764
00:33:23,990 --> 00:33:28,130
different ways of training a<font color="#CCCCCC"> character</font>

765
00:33:26,059 --> 00:33:31,519
recognition<font color="#E5E5E5"> engine</font><font color="#CCCCCC"> i'm generating these</font>

766
00:33:28,130 --> 00:33:33,889
<font color="#CCCCCC">characters that</font><font color="#E5E5E5"> look pretty you know</font>

767
00:33:31,519 --> 00:33:35,630
pretty complicated like<font color="#CCCCCC"> I would have</font>

768
00:33:33,889 --> 00:33:37,639
trouble<font color="#E5E5E5"> typing some of these in and</font><font color="#CCCCCC"> I</font>

769
00:33:35,630 --> 00:33:43,519
think a lot of<font color="#CCCCCC"> captures</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> awhile</font><font color="#E5E5E5"> are</font>

770
00:33:37,639 --> 00:33:45,408
like that<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I'm just</font><font color="#CCCCCC"> regenerating new</font>

771
00:33:43,519 --> 00:33:48,409
images<font color="#E5E5E5"> just to show that you know</font>

772
00:33:45,409 --> 00:33:51,080
<font color="#CCCCCC">they're different each time the the</font>

773
00:33:48,409 --> 00:33:56,720
input characters are<font color="#E5E5E5"> just</font><font color="#CCCCCC"> a busy so</font>

774
00:33:51,080 --> 00:34:02,570
nothing<font color="#E5E5E5"> too</font><font color="#CCCCCC"> too complex and well-well</font>

775
00:33:56,720 --> 00:34:05,330
<font color="#E5E5E5">shows that the captain model eval will</font>

776
00:34:02,570 --> 00:34:07,309
be able to to recognize this and that

777
00:34:05,330 --> 00:34:10,578
the training of this off of<font color="#E5E5E5"> this model</font>

778
00:34:07,309 --> 00:34:13,579
is<font color="#CCCCCC"> non is non-trivial so i don't own</font>

779
00:34:10,579 --> 00:34:15,649
like a really powerful GPU cluster<font color="#E5E5E5"> and</font>

780
00:34:13,579 --> 00:34:22,909
if you can see<font color="#CCCCCC"> I started</font><font color="#E5E5E5"> training this</font>

781
00:34:15,649 --> 00:34:25,909
like<font color="#CCCCCC"> july $YEAR 12 at 5am</font><font color="#E5E5E5"> 553 m and by</font>

782
00:34:22,909 --> 00:34:28,159
<font color="#E5E5E5">the time this was done after a hundred</font>

783
00:34:25,909 --> 00:34:30,500
thousand steps it was July thirteenth at

784
00:34:28,159 --> 00:34:32,240
9am so it's more than 24 hours just to

785
00:34:30,500 --> 00:34:36,109
<font color="#E5E5E5">train this simple capture recognition</font>

786
00:34:32,239 --> 00:34:38,178
system but the<font color="#CCCCCC"> prediction is</font><font color="#E5E5E5"> also pretty</font>

787
00:34:36,109 --> 00:34:41,239
good<font color="#E5E5E5"> you can see like all the six digits</font>

788
00:34:38,179 --> 00:34:43,010
did pretty well<font color="#E5E5E5"> so let's test it on on</font>

789
00:34:41,239 --> 00:34:50,629
on these characters that<font color="#E5E5E5"> I just</font>

790
00:34:43,010 --> 00:34:53,450
generated<font color="#CCCCCC"> it's pretty slow</font>

791
00:34:50,630 --> 00:35:01,520
because there's a large model<font color="#CCCCCC"> so</font><font color="#E5E5E5"> it's</font>

792
00:34:53,449 --> 00:35:03,439
just using that model for testing<font color="#E5E5E5"> and so</font>

793
00:35:01,520 --> 00:35:07,790
each each number<font color="#E5E5E5"> and this inspector</font>

794
00:35:03,440 --> 00:35:11,090
<font color="#E5E5E5">represents a and then a letter in the</font>

795
00:35:07,790 --> 00:35:14,600
alphabet and the actual<font color="#E5E5E5"> and prediction</font>

796
00:35:11,090 --> 00:35:16,430
<font color="#CCCCCC">so it just this does perfectly it</font>

797
00:35:14,600 --> 00:35:18,170
doesn't<font color="#CCCCCC"> always</font><font color="#E5E5E5"> do like that sometimes .</font>

798
00:35:16,430 --> 00:35:21,589
<font color="#CCCCCC">lines and points in there depending on</font>

799
00:35:18,170 --> 00:35:25,040
the complexity of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> input so you can</font>

800
00:35:21,590 --> 00:35:28,010
see most of them<font color="#CCCCCC"> i mean</font><font color="#E5E5E5"> all of them have</font>

801
00:35:25,040 --> 00:35:29,360
the same actual and predicted values<font color="#E5E5E5"> and</font>

802
00:35:28,010 --> 00:35:31,580
that's exactly what we expect because

803
00:35:29,360 --> 00:35:34,280
it's just a well-trained model well it

804
00:35:31,580 --> 00:35:38,330
<font color="#CCCCCC">better do well because i</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> two</font>

805
00:35:34,280 --> 00:35:42,830
<font color="#CCCCCC">hundred</font><font color="#E5E5E5"> dollars on</font><font color="#CCCCCC"> amazon bills so</font>

806
00:35:38,330 --> 00:35:45,470
amazon has to GPU<font color="#CCCCCC"> businesses and I think</font>

807
00:35:42,830 --> 00:35:49,220
there are two dollars<font color="#E5E5E5"> twenty cents per</font>

808
00:35:45,470 --> 00:35:50,779
hour<font color="#CCCCCC"> for spot instances and</font><font color="#E5E5E5"> yeah so if</font>

809
00:35:49,220 --> 00:35:54,410
anyone from<font color="#E5E5E5"> videos here and wants to</font>

810
00:35:50,780 --> 00:35:58,910
give me some<font color="#CCCCCC"> cheap use thanks</font>

811
00:35:54,410 --> 00:36:00,319
so this is how<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is a little bit</font>

812
00:35:58,910 --> 00:36:02,990
<font color="#CCCCCC">better</font><font color="#E5E5E5"> because what we're doing is we're</font>

813
00:36:00,320 --> 00:36:05,510
generating captures to trick<font color="#CCCCCC"> but steps</font>

814
00:36:02,990 --> 00:36:07,399
that<font color="#E5E5E5"> solve captures so if you can think</font>

815
00:36:05,510 --> 00:36:10,100
about how this<font color="#E5E5E5"> will be useful capture</font>

816
00:36:07,400 --> 00:36:12,020
meant defeat<font color="#CCCCCC"> butts</font><font color="#E5E5E5"> so if you're able to</font>

817
00:36:10,100 --> 00:36:14,540
generate captures that can trick the<font color="#CCCCCC"> pot</font>

818
00:36:12,020 --> 00:36:16,640
<font color="#CCCCCC">starves</font><font color="#E5E5E5"> designed to solve them then a</font>

819
00:36:14,540 --> 00:36:21,950
<font color="#CCCCCC">anyone again</font>

820
00:36:16,640 --> 00:36:23,990
so these are the the same<font color="#E5E5E5"> cat</font><font color="#CCCCCC"> at the</font>

821
00:36:21,950 --> 00:36:26,720
same<font color="#CCCCCC"> characters</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> are generated</font>

822
00:36:23,990 --> 00:36:30,020
earlier<font color="#CCCCCC"> can generate new ones as well</font>

823
00:36:26,720 --> 00:36:32,330
but<font color="#E5E5E5"> they're just random</font><font color="#CCCCCC"> to generate</font>

824
00:36:30,020 --> 00:36:34,400
captures what we do is we want to

825
00:36:32,330 --> 00:36:42,410
generate the adversarial<font color="#E5E5E5"> version of</font>

826
00:36:34,400 --> 00:36:44,780
these cactus

827
00:36:42,410 --> 00:36:47,480
so we're doing that here<font color="#CCCCCC"> live models</font>

828
00:36:44,780 --> 00:36:49,700
<font color="#E5E5E5">just a model that we</font><font color="#CCCCCC"> train on</font><font color="#E5E5E5"> these</font>

829
00:36:47,480 --> 00:36:52,099
<font color="#E5E5E5">captures and then we are going to</font>

830
00:36:49,700 --> 00:36:53,750
generate the perturbation<font color="#CCCCCC"> vectors that</font>

831
00:36:52,099 --> 00:36:55,460
<font color="#E5E5E5">we will add to these to these captures</font>

832
00:36:53,750 --> 00:37:02,180
and then<font color="#E5E5E5"> they'll be put into a folder</font>

833
00:36:55,460 --> 00:37:05,599
here so it's also pretty slow because

834
00:37:02,180 --> 00:37:14,000
the the<font color="#E5E5E5"> models large but let's just do</font>

835
00:37:05,599 --> 00:37:16,130
<font color="#E5E5E5">10</font><font color="#CCCCCC"> then test them so this is the code to</font>

836
00:37:14,000 --> 00:37:24,319
generate a<font color="#E5E5E5"> virtual image</font><font color="#CCCCCC"> it's five lines</font>

837
00:37:16,130 --> 00:37:26,930
literally<font color="#CCCCCC"> and so if you look at the two</font>

838
00:37:24,319 --> 00:37:27,799
sets of images they look exactly the

839
00:37:26,930 --> 00:37:29,118
same

840
00:37:27,799 --> 00:37:31,640
I mean there's probably some great spots

841
00:37:29,119 --> 00:37:35,299
in there with what we know

842
00:37:31,640 --> 00:37:36,710
<font color="#E5E5E5">Oh a difference after one</font><font color="#CCCCCC"> but you can</font>

843
00:37:35,299 --> 00:37:50,420
<font color="#E5E5E5">really see them if you're</font><font color="#CCCCCC"> going to die</font>

844
00:37:36,710 --> 00:37:52,700
and<font color="#E5E5E5"> let's test it on this</font><font color="#CCCCCC"> so we're going</font>

845
00:37:50,420 --> 00:37:56,059
<font color="#E5E5E5">to evaluate</font><font color="#CCCCCC"> these these</font><font color="#E5E5E5"> adversarial</font>

846
00:37:52,700 --> 00:37:58,160
<font color="#E5E5E5">input speeding the folder and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> we'll</font>

847
00:37:56,059 --> 00:38:05,900
evaluate all the all the input images

848
00:37:58,160 --> 00:38:08,029
<font color="#CCCCCC">and that</font><font color="#E5E5E5"> now this is slightly different</font>

849
00:38:05,900 --> 00:38:09,619
from the previous example because there

850
00:38:08,029 --> 00:38:12,740
are fewer salient features in this

851
00:38:09,619 --> 00:38:15,109
entire input<font color="#E5E5E5"> an image is pretty</font>

852
00:38:12,740 --> 00:38:17,660
complicated but if you just look at a

853
00:38:15,109 --> 00:38:18,980
<font color="#CCCCCC">printed character was</font><font color="#E5E5E5"> actually not that</font>

854
00:38:17,660 --> 00:38:21,259
many<font color="#E5E5E5"> salient features that</font><font color="#CCCCCC"> you can</font>

855
00:38:18,980 --> 00:38:24,020
extract from these this<font color="#E5E5E5"> so</font><font color="#CCCCCC"> i would</font>

856
00:38:21,260 --> 00:38:26,569
<font color="#CCCCCC">expect the output to be bad but not as</font>

857
00:38:24,020 --> 00:38:29,779
bad as before<font color="#E5E5E5"> so you can see the</font>

858
00:38:26,569 --> 00:38:32,990
position of this is<font color="#CCCCCC"> . 1.2 which means</font>

859
00:38:29,779 --> 00:38:35,539
that at every position<font color="#CCCCCC"> a position 0 it</font>

860
00:38:32,990 --> 00:38:38,569
predicted<font color="#E5E5E5"> 0.1 of the examples correctly</font>

861
00:38:35,539 --> 00:38:40,849
at position<font color="#CCCCCC"> one that</font><font color="#E5E5E5"> predicted two of</font>

862
00:38:38,569 --> 00:38:42,950
the<font color="#CCCCCC"> 10 examples correctly</font><font color="#E5E5E5"> actually a</font>

863
00:38:40,849 --> 00:38:45,619
position<font color="#CCCCCC"> three it predict that seven out</font>

864
00:38:42,950 --> 00:38:47,839
<font color="#E5E5E5">10</font><font color="#CCCCCC"> correctly so that's that still let's</font>

865
00:38:45,619 --> 00:38:50,150
<font color="#CCCCCC">go okay if you can</font><font color="#E5E5E5"> get past</font><font color="#CCCCCC"> seven</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> ten</font>

866
00:38:47,839 --> 00:38:53,000
<font color="#CCCCCC">captures</font><font color="#E5E5E5"> it slow okay</font><font color="#CCCCCC"> but as you can see</font>

867
00:38:50,150 --> 00:38:55,250
just very simply generating capture

868
00:38:53,000 --> 00:38:57,410
examples that are<font color="#E5E5E5"> those able to trick</font>

869
00:38:55,250 --> 00:38:59,750
a model<font color="#CCCCCC"> that's that was previously able</font>

870
00:38:57,410 --> 00:39:01,310
to<font color="#E5E5E5"> recognize</font><font color="#CCCCCC"> captures correctly</font><font color="#E5E5E5"> at a</font>

871
00:38:59,750 --> 00:39:04,130
<font color="#E5E5E5">rate that production rate of $MONEY</font>

872
00:39:01,310 --> 00:39:10,580
<font color="#CCCCCC">hundred-percent it's it's pretty easy to</font>

873
00:39:04,130 --> 00:39:13,340
do so<font color="#CCCCCC"> so the</font><font color="#E5E5E5"> black box attack</font>

874
00:39:10,580 --> 00:39:15,230
methodology<font color="#E5E5E5"> in machine learning is a</font><font color="#CCCCCC"> is</font>

875
00:39:13,340 --> 00:39:18,440
<font color="#CCCCCC">a</font><font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> problem it's still an open</font>

876
00:39:15,230 --> 00:39:21,410
area of research and now what this is

877
00:39:18,440 --> 00:39:23,240
<font color="#E5E5E5">this transferability</font><font color="#CCCCCC"> so if you can think</font>

878
00:39:21,410 --> 00:39:25,279
of any machine learning model out there

879
00:39:23,240 --> 00:39:29,180
that uses an arbitrary way to make

880
00:39:25,280 --> 00:39:30,860
classification make predictions<font color="#E5E5E5"> and if</font>

881
00:39:29,180 --> 00:39:33,080
you think of how to generate adversaries

882
00:39:30,860 --> 00:39:35,390
example<font color="#E5E5E5"> other examples for each one of</font>

883
00:39:33,080 --> 00:39:36,560
those systems<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> actually not that</font>

884
00:39:35,390 --> 00:39:38,750
complicated

885
00:39:36,560 --> 00:39:40,790
what people have found empirically is

886
00:39:38,750 --> 00:39:43,160
that several samples that<font color="#E5E5E5"> ford model a</font>

887
00:39:40,790 --> 00:39:46,100
previously have a pretty good chance<font color="#E5E5E5"> of</font>

888
00:39:43,160 --> 00:39:47,480
<font color="#CCCCCC">being</font><font color="#E5E5E5"> second model</font><font color="#CCCCCC"> be even if you've</font>

889
00:39:46,100 --> 00:39:49,970
never<font color="#E5E5E5"> seen this model before in the past</font>

890
00:39:47,480 --> 00:39:52,700
and these models can be anything from

891
00:39:49,970 --> 00:39:54,560
<font color="#CCCCCC">clock from clustering algorithms</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> SDM</font>

892
00:39:52,700 --> 00:39:57,020
<font color="#CCCCCC">the decision trees to neural nets to</font>

893
00:39:54,560 --> 00:40:01,340
linear classifiers to do even<font color="#CCCCCC"> naive</font>

894
00:39:57,020 --> 00:40:03,710
<font color="#CCCCCC">bayes and this is just some research</font>

895
00:40:01,340 --> 00:40:06,740
<font color="#CCCCCC">trip</font><font color="#E5E5E5"> another researcher paper not has</font>

896
00:40:03,710 --> 00:40:09,800
done has done in the past<font color="#E5E5E5"> and this is a</font>

897
00:40:06,740 --> 00:40:11,660
matrix of how well as versatile examples

898
00:40:09,800 --> 00:40:14,930
<font color="#CCCCCC">train with another model are able to</font>

899
00:40:11,660 --> 00:40:19,640
trick a model that it that it was not

900
00:40:14,930 --> 00:40:23,750
trained with<font color="#CCCCCC"> so if you can see linear</font>

901
00:40:19,640 --> 00:40:26,180
<font color="#E5E5E5">aggressor that</font><font color="#CCCCCC"> uh ever</font><font color="#E5E5E5"> example generated</font>

902
00:40:23,750 --> 00:40:29,330
by linear aggressors<font color="#CCCCCC"> can trick SVM's</font>

903
00:40:26,180 --> 00:40:30,740
<font color="#CCCCCC">over</font><font color="#E5E5E5"> ninety one-percent chance and deep</font>

904
00:40:29,330 --> 00:40:34,670
neural<font color="#CCCCCC"> Nets generally have a pretty good</font>

905
00:40:30,740 --> 00:40:37,129
<font color="#CCCCCC">transferability</font><font color="#E5E5E5"> rating if you generate</font>

906
00:40:34,670 --> 00:40:38,720
<font color="#CCCCCC">ever so examples of deep neural Nets you</font>

907
00:40:37,130 --> 00:40:40,400
can<font color="#E5E5E5"> trick decision trees at a rate of</font>

908
00:40:38,720 --> 00:40:41,240
<font color="#CCCCCC">$OPERAND eighty percent</font><font color="#E5E5E5"> so that that's</font>

909
00:40:40,400 --> 00:40:42,290
pretty good

910
00:40:41,240 --> 00:40:44,450
and this means that you don't

911
00:40:42,290 --> 00:40:45,740
necessarily need to know how a model was

912
00:40:44,450 --> 00:40:47,930
implemented to generate<font color="#E5E5E5"> over several</font>

913
00:40:45,740 --> 00:40:50,270
examples for it<font color="#CCCCCC"> it was generated with an</font>

914
00:40:47,930 --> 00:40:53,390
arbitrary method or with all and try<font color="#E5E5E5"> it</font>

915
00:40:50,270 --> 00:40:55,180
out and see what does well and then

916
00:40:53,390 --> 00:40:58,720
you're probably going to<font color="#E5E5E5"> write</font>

917
00:40:55,180 --> 00:41:01,089
if you can't do that then using a

918
00:40:58,720 --> 00:41:04,058
substitute model is a good way as well

919
00:41:01,089 --> 00:41:07,450
<font color="#CCCCCC">what this means is</font><font color="#E5E5E5"> basically your</font>

920
00:41:04,059 --> 00:41:10,569
training a new model by using the<font color="#E5E5E5"> black</font>

921
00:41:07,450 --> 00:41:13,720
<font color="#E5E5E5">box models output as input examples</font><font color="#CCCCCC"> so</font>

922
00:41:10,569 --> 00:41:15,910
this was used as a method for<font color="#E5E5E5"> for</font>

923
00:41:13,720 --> 00:41:17,980
distilling models and and and this was

924
00:41:15,910 --> 00:41:19,779
used very very popularly in mobile

925
00:41:17,980 --> 00:41:21,760
phones<font color="#E5E5E5"> when you train machine learning</font>

926
00:41:19,780 --> 00:41:23,710
models<font color="#CCCCCC"> eventually you'll get you you end</font>

927
00:41:21,760 --> 00:41:25,990
up with a model that<font color="#CCCCCC"> our skill bites</font>

928
00:41:23,710 --> 00:41:28,089
large and this is not really practical

929
00:41:25,990 --> 00:41:29,410
to put that in<font color="#CCCCCC"> the mobile device or your</font>

930
00:41:28,089 --> 00:41:31,000
phone because<font color="#E5E5E5"> that just takes up too</font>

931
00:41:29,410 --> 00:41:32,589
much space or put in a cloud service

932
00:41:31,000 --> 00:41:35,680
because then<font color="#E5E5E5"> just requires too much</font>

933
00:41:32,589 --> 00:41:37,900
computation so this distillation was a

934
00:41:35,680 --> 00:41:40,149
method for distilling the important

935
00:41:37,900 --> 00:41:43,839
parts of a machine learning models such

936
00:41:40,150 --> 00:41:45,880
that the most commonly used parts of the

937
00:41:43,839 --> 00:41:47,380
neural network will be kept and the

938
00:41:45,880 --> 00:41:51,220
least<font color="#E5E5E5"> commonly parts</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> solemn</font>

939
00:41:47,380 --> 00:41:52,510
activated will be just be pruned out<font color="#E5E5E5"> and</font>

940
00:41:51,220 --> 00:41:53,919
this will see that this was just<font color="#CCCCCC"> an</font>

941
00:41:52,510 --> 00:41:56,650
<font color="#CCCCCC">apparently found</font><font color="#E5E5E5"> to be a pretty good way</font>

942
00:41:53,920 --> 00:42:00,819
of generating substitute models as well

943
00:41:56,650 --> 00:42:03,790
so<font color="#CCCCCC"> transformed lady is still an open</font>

944
00:42:00,819 --> 00:42:05,650
research problem<font color="#E5E5E5"> on this adversarial</font>

945
00:42:03,790 --> 00:42:08,380
situation<font color="#E5E5E5"> in machine learning is</font>

946
00:42:05,650 --> 00:42:10,480
possible because of line spots and

947
00:42:08,380 --> 00:42:14,440
differences between the model and

948
00:42:10,480 --> 00:42:17,559
reality<font color="#E5E5E5"> but</font><font color="#CCCCCC"> it's a</font><font color="#E5E5E5"> small really not</font>

949
00:42:14,440 --> 00:42:21,849
learning anything at all<font color="#E5E5E5"> i think</font><font color="#CCCCCC"> that's</font>

950
00:42:17,559 --> 00:42:23,140
still pretty<font color="#E5E5E5"> much an open problem so</font>

951
00:42:21,849 --> 00:42:27,130
this means that machine learning models

952
00:42:23,140 --> 00:42:29,589
are able<font color="#E5E5E5"> to manipulative attacks and can</font>

953
00:42:27,130 --> 00:42:31,690
be pretty easily bypassed in most

954
00:42:29,589 --> 00:42:33,250
scenarios<font color="#CCCCCC"> you</font><font color="#E5E5E5"> should make false</font>

955
00:42:31,690 --> 00:42:35,680
assumptions about what the model learns

956
00:42:33,250 --> 00:42:38,319
and how to model<font color="#CCCCCC"> learns</font><font color="#E5E5E5"> and you should</font>

957
00:42:35,680 --> 00:42:40,240
always evaluate the<font color="#E5E5E5"> models resilience to</font>

958
00:42:38,319 --> 00:42:43,839
a<font color="#E5E5E5"> virtual input before you deploy it in</font>

959
00:42:40,240 --> 00:42:45,700
critical scenarios<font color="#E5E5E5"> just spend some</font>

960
00:42:43,839 --> 00:42:47,349
effort to make models more robust the

961
00:42:45,700 --> 00:42:48,879
tempering<font color="#E5E5E5"> especially if they're being</font>

962
00:42:47,349 --> 00:42:50,680
deployed in critical scenarios like

963
00:42:48,880 --> 00:42:52,510
self-driving cars<font color="#CCCCCC"> there's some</font>

964
00:42:50,680 --> 00:42:56,259
interesting papers published in the past

965
00:42:52,510 --> 00:42:58,059
where<font color="#E5E5E5"> if you put a stop sign . a piece</font>

966
00:42:56,260 --> 00:43:00,099
of paper in front of<font color="#CCCCCC"> a</font><font color="#E5E5E5"> self-driving car</font>

967
00:42:58,059 --> 00:43:02,109
<font color="#CCCCCC">to car would stop</font><font color="#E5E5E5"> and if you</font><font color="#CCCCCC"> covered</font><font color="#E5E5E5"> the</font>

968
00:43:00,099 --> 00:43:03,880
traffic lights with a piece of

969
00:43:02,109 --> 00:43:05,828
cellophane<font color="#E5E5E5"> human will be able to tell</font>

970
00:43:03,880 --> 00:43:07,490
the traffic<font color="#E5E5E5"> lights still there but the</font>

971
00:43:05,829 --> 00:43:11,510
self-driving car would not<font color="#CCCCCC"> and</font>

972
00:43:07,490 --> 00:43:13,879
not<font color="#E5E5E5"> stop so to defend these machines</font>

973
00:43:11,510 --> 00:43:15,800
<font color="#CCCCCC">three</font><font color="#E5E5E5"> different ways distillation you</font>

974
00:43:13,880 --> 00:43:17,630
<font color="#E5E5E5">train</font><font color="#CCCCCC"> the model twice and then you feed</font>

975
00:43:15,800 --> 00:43:20,900
the<font color="#E5E5E5"> outputs into the into the second</font>

976
00:43:17,630 --> 00:43:23,390
model and is able to take out a lot of

977
00:43:20,900 --> 00:43:25,790
the data manifold<font color="#E5E5E5"> the blind spots that</font>

978
00:43:23,390 --> 00:43:29,330
<font color="#CCCCCC">exists</font><font color="#E5E5E5"> in the model you can also train a</font>

979
00:43:25,790 --> 00:43:31,730
model<font color="#CCCCCC"> by</font><font color="#E5E5E5"> by using adversarial input so</font>

980
00:43:29,330 --> 00:43:34,910
this is a little<font color="#E5E5E5"> bit matter to</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> if</font>

981
00:43:31,730 --> 00:43:37,250
<font color="#E5E5E5">you generate</font><font color="#CCCCCC"> adversarial</font><font color="#E5E5E5"> input from the</font>

982
00:43:34,910 --> 00:43:39,740
initial model and they use this input to

983
00:43:37,250 --> 00:43:42,500
train<font color="#CCCCCC"> a model</font><font color="#E5E5E5"> again will perform better</font>

984
00:43:39,740 --> 00:43:43,819
<font color="#E5E5E5">and there's also some other more</font>

985
00:43:42,500 --> 00:43:46,369
complicated methods like regularization

986
00:43:43,820 --> 00:43:47,810
<font color="#E5E5E5">and</font><font color="#CCCCCC"> a loss function methods that can be</font>

987
00:43:46,369 --> 00:43:51,350
used to reduce the impact of<font color="#CCCCCC"> every</font>

988
00:43:47,810 --> 00:43:54,500
<font color="#CCCCCC">single</font><font color="#E5E5E5"> input on these models</font><font color="#CCCCCC"> so what I</font>

989
00:43:51,350 --> 00:43:56,480
did was basically have a framework for

990
00:43:54,500 --> 00:43:57,680
generating<font color="#CCCCCC"> a versatile inputs for</font>

991
00:43:56,480 --> 00:44:01,130
machine learning

992
00:43:57,680 --> 00:44:02,629
it's called<font color="#CCCCCC"> deepening and</font><font color="#E5E5E5"> it's on github</font>

993
00:44:01,130 --> 00:44:04,610
<font color="#CCCCCC">all the code is they're all the code</font>

994
00:44:02,630 --> 00:44:07,310
that<font color="#CCCCCC"> I used to generate the examples</font>

995
00:44:04,610 --> 00:44:09,860
here<font color="#CCCCCC"> r is</font><font color="#E5E5E5"> online first presented this at</font>

996
00:44:07,310 --> 00:44:11,240
<font color="#CCCCCC">Def</font><font color="#E5E5E5"> Con this year and</font><font color="#CCCCCC"> was pretty well</font>

997
00:44:09,860 --> 00:44:13,640
received and people<font color="#E5E5E5"> have started</font>

998
00:44:11,240 --> 00:44:16,009
contributing to it so<font color="#CCCCCC"> there's starts</font>

999
00:44:13,640 --> 00:44:18,290
pretty<font color="#CCCCCC"> was pretty comprehensive</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> write</font>

1000
00:44:16,010 --> 00:44:19,940
up on what you can do with this and how

1001
00:44:18,290 --> 00:44:22,040
to do it

1002
00:44:19,940 --> 00:44:23,930
the purpose of this is of course<font color="#E5E5E5"> to let</font>

1003
00:44:22,040 --> 00:44:25,850
people know how easy it is<font color="#E5E5E5"> to generate</font><font color="#CCCCCC"> a</font>

1004
00:44:23,930 --> 00:44:29,089
<font color="#CCCCCC">ver examples</font><font color="#E5E5E5"> of how easy it is to bypass</font>

1005
00:44:25,850 --> 00:44:31,220
machine learning models<font color="#E5E5E5"> but also to urge</font>

1006
00:44:29,090 --> 00:44:33,380
people to start to look at machine

1007
00:44:31,220 --> 00:44:35,990
learning models with a critical<font color="#CCCCCC"> eye like</font>

1008
00:44:33,380 --> 00:44:37,130
how<font color="#E5E5E5"> you look at</font><font color="#CCCCCC"> unix systems and harden</font>

1009
00:44:35,990 --> 00:44:38,359
<font color="#E5E5E5">unix systems</font>

1010
00:44:37,130 --> 00:44:40,850
you should also do the same for machine

1011
00:44:38,359 --> 00:44:42,980
learning models because a lot of

1012
00:44:40,850 --> 00:44:45,589
critical systems rely on machine

1013
00:44:42,980 --> 00:44:47,600
learning and<font color="#E5E5E5"> it is pretty scary how many</font>

1014
00:44:45,590 --> 00:44:49,490
real systems deployed out in the wild

1015
00:44:47,600 --> 00:44:53,690
can be<font color="#CCCCCC"> bypassed in this with</font><font color="#E5E5E5"> this simple</font>

1016
00:44:49,490 --> 00:44:55,040
<font color="#E5E5E5">technique so</font><font color="#CCCCCC"> mentioned train models of</font>

1017
00:44:53,690 --> 00:44:56,570
adversarial samples for increased

1018
00:44:55,040 --> 00:44:59,240
robustness is one of the most important

1019
00:44:56,570 --> 00:45:05,840
takeaways<font color="#CCCCCC"> so</font><font color="#E5E5E5"> please play and contribute</font>

1020
00:44:59,240 --> 00:45:07,279
and deep learning<font color="#E5E5E5"> privacy is also an</font>

1021
00:45:05,840 --> 00:45:09,260
interesting area that<font color="#CCCCCC"> I think</font><font color="#E5E5E5"> is</font>

1022
00:45:07,280 --> 00:45:11,720
interesting and needs a lot of research

1023
00:45:09,260 --> 00:45:13,910
in a lot of large companies<font color="#E5E5E5"> Google</font>

1024
00:45:11,720 --> 00:45:17,089
<font color="#CCCCCC">Facebook are infiltrating our lives</font>

1025
00:45:13,910 --> 00:45:18,149
<font color="#CCCCCC">google home</font><font color="#E5E5E5"> run and a lot of</font><font color="#CCCCCC"> IOT</font>

1026
00:45:17,090 --> 00:45:21,299
products that

1027
00:45:18,150 --> 00:45:23,819
that uh<font color="#E5E5E5"> released by large companies are</font>

1028
00:45:21,299 --> 00:45:26,190
actually<font color="#CCCCCC"> trojan horses</font><font color="#E5E5E5"> that are used</font>

1029
00:45:23,819 --> 00:45:27,750
<font color="#CCCCCC">collect</font><font color="#E5E5E5"> data from us the more we</font>

1030
00:45:26,190 --> 00:45:30,150
interact with them the more data we had

1031
00:45:27,750 --> 00:45:33,420
that the more data that we<font color="#CCCCCC"> sent them</font><font color="#E5E5E5"> but</font>

1032
00:45:30,150 --> 00:45:35,130
you can actually extract a lot of

1033
00:45:33,420 --> 00:45:37,170
personal information are from deep

1034
00:45:35,130 --> 00:45:39,420
learning models even<font color="#E5E5E5"> though</font><font color="#CCCCCC"> it's</font>

1035
00:45:37,170 --> 00:45:41,339
<font color="#CCCCCC">unintuitive so for</font><font color="#E5E5E5"> example if there's a</font>

1036
00:45:39,420 --> 00:45:43,049
voice recognition engine orders<font color="#E5E5E5"> a facial</font>

1037
00:45:41,339 --> 00:45:45,299
recognition engine<font color="#CCCCCC"> is</font><font color="#E5E5E5"> coded into a</font>

1038
00:45:43,049 --> 00:45:47,940
machine learning model such<font color="#E5E5E5"> that the</font>

1039
00:45:45,299 --> 00:45:50,788
model can recognize your face from the

1040
00:45:47,940 --> 00:45:52,740
raw pixels<font color="#CCCCCC"> even if the actual pixels are</font>

1041
00:45:50,789 --> 00:45:54,299
not present in the model itself you can

1042
00:45:52,740 --> 00:45:56,250
<font color="#E5E5E5">reverse-engineer the model to generate</font>

1043
00:45:54,299 --> 00:46:00,210
your face<font color="#E5E5E5"> from that and that's that's</font>

1044
00:45:56,250 --> 00:46:02,549
<font color="#E5E5E5">pretty mind-blowing</font><font color="#CCCCCC"> me so I</font><font color="#E5E5E5"> mention this</font>

1045
00:46:00,210 --> 00:46:04,230
<font color="#E5E5E5">is important because</font><font color="#CCCCCC"> i</font><font color="#E5E5E5"> think many people</font>

1046
00:46:02,549 --> 00:46:06,119
in the security industry or even<font color="#E5E5E5"> a</font>

1047
00:46:04,230 --> 00:46:07,500
<font color="#E5E5E5">machine-learning industry are not that</font>

1048
00:46:06,119 --> 00:46:08,849
concerned about security on machine

1049
00:46:07,500 --> 00:46:11,279
learning or<font color="#E5E5E5"> vice versa</font>

1050
00:46:08,849 --> 00:46:13,559
<font color="#CCCCCC">I think that</font><font color="#E5E5E5"> that needs to change</font>

1051
00:46:11,279 --> 00:46:16,140
especially in<font color="#CCCCCC"> the future where we rely</font>

1052
00:46:13,559 --> 00:46:21,059
on one more<font color="#CCCCCC"> in these systems and as we</font>

1053
00:46:16,140 --> 00:46:22,799
place more importance on the efficiency

1054
00:46:21,059 --> 00:46:24,990
of machine learning<font color="#E5E5E5"> system the efficacy</font>

1055
00:46:22,799 --> 00:46:30,390
of these systems<font color="#E5E5E5"> and and how much we</font>

1056
00:46:24,990 --> 00:46:32,038
trust the results<font color="#E5E5E5"> so please</font><font color="#CCCCCC"> contribute</font><font color="#E5E5E5"> a</font>

1057
00:46:30,390 --> 00:46:37,930
<font color="#E5E5E5">project check it out store and get up</font>

1058
00:46:32,039 --> 00:46:54,010
and<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> thanks</font>

1059
00:46:37,930 --> 00:46:58,660
<font color="#CCCCCC">questions here</font>

1060
00:46:54,010 --> 00:47:00,579
<font color="#E5E5E5">yeah</font><font color="#CCCCCC"> okay so the question is have I ever</font>

1061
00:46:58,660 --> 00:47:02,950
try to<font color="#E5E5E5"> reverse-engineer the cat</font>

1062
00:47:00,579 --> 00:47:05,589
detection software to see what the model

1063
00:47:02,950 --> 00:47:07,509
<font color="#E5E5E5">things that cat looks like the answer is</font>

1064
00:47:05,589 --> 00:47:08,980
no I<font color="#CCCCCC"> I haven't done much research in</font>

1065
00:47:07,510 --> 00:47:11,650
deep learning<font color="#E5E5E5"> and privacy</font><font color="#CCCCCC"> i think it's a</font>

1066
00:47:08,980 --> 00:47:14,349
<font color="#E5E5E5">really cool area in general it requires</font>

1067
00:47:11,650 --> 00:47:17,230
a lot of computational power<font color="#E5E5E5"> because if</font>

1068
00:47:14,349 --> 00:47:20,290
you can think of how many<font color="#E5E5E5"> how much time</font>

1069
00:47:17,230 --> 00:47:22,089
it took for the<font color="#E5E5E5"> cat software the cat</font>

1070
00:47:20,290 --> 00:47:25,359
model to be trained in the first place

1071
00:47:22,089 --> 00:47:26,500
<font color="#CCCCCC">and</font><font color="#E5E5E5"> you have to generate examples for</font>

1072
00:47:25,359 --> 00:47:29,529
what

1073
00:47:26,500 --> 00:47:32,530
how many pixels<font color="#CCCCCC"> it takes to generate</font>

1074
00:47:29,530 --> 00:47:33,910
<font color="#CCCCCC">that that the cat model is actually</font>

1075
00:47:32,530 --> 00:47:35,650
<font color="#E5E5E5">pretty comfortable accommodation</font>

1076
00:47:33,910 --> 00:47:37,990
intensive so a lot of research that's

1077
00:47:35,650 --> 00:47:39,880
done in the field today is a limited by

1078
00:47:37,990 --> 00:47:41,500
computational power even though<font color="#CCCCCC"> i</font>

1079
00:47:39,880 --> 00:47:43,599
previously mentioned that at the

1080
00:47:41,500 --> 00:47:45,910
<font color="#E5E5E5">advanced and computation has caused</font><font color="#CCCCCC"> deep</font>

1081
00:47:43,599 --> 00:47:47,589
learning<font color="#CCCCCC"> to explode but and</font><font color="#E5E5E5"> video</font>

1082
00:47:45,910 --> 00:47:50,589
<font color="#CCCCCC">released</font><font color="#E5E5E5"> a deep learning in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> box</font>

1083
00:47:47,589 --> 00:47:53,770
solution<font color="#E5E5E5"> that</font><font color="#CCCCCC"> sounded really</font><font color="#E5E5E5"> cool but</font><font color="#CCCCCC"> I</font>

1084
00:47:50,589 --> 00:47:56,020
inquired and it<font color="#CCCCCC"> costs 129,000 dollars</font>

1085
00:47:53,770 --> 00:47:57,880
for that box<font color="#CCCCCC"> so i'm</font><font color="#E5E5E5"> not gonna be</font><font color="#CCCCCC"> able</font>

1086
00:47:56,020 --> 00:48:04,930
<font color="#E5E5E5">for debt</font>

1087
00:47:57,880 --> 00:48:06,579
<font color="#CCCCCC">ok yeah</font><font color="#E5E5E5"> so that that's pretty</font>

1088
00:48:04,930 --> 00:48:09,460
interesting at the question<font color="#E5E5E5"> is how do I</font>

1089
00:48:06,579 --> 00:48:10,960
describe<font color="#E5E5E5"> the attack us on the $DAY th at</font>

1090
00:48:09,460 --> 00:48:13,000
<font color="#CCCCCC">bother</font><font color="#E5E5E5"> microsoft released earlier this</font>

1091
00:48:10,960 --> 00:48:14,349
year<font color="#CCCCCC"> so i'm not sure how many of you are</font>

1092
00:48:13,000 --> 00:48:16,150
familiar<font color="#CCCCCC"> with</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> paycheck but</font><font color="#E5E5E5"> it's</font>

1093
00:48:14,349 --> 00:48:18,730
basically a learning artificial

1094
00:48:16,150 --> 00:48:22,180
intelligent<font color="#CCCCCC"> twitter chat bot</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> i was</font>

1095
00:48:18,730 --> 00:48:24,400
able<font color="#E5E5E5"> to respond to people's tweets edit</font>

1096
00:48:22,180 --> 00:48:25,720
and then respond to your tweets and

1097
00:48:24,400 --> 00:48:28,450
learn from the language that they're

1098
00:48:25,720 --> 00:48:32,379
using it quickly became a racist

1099
00:48:28,450 --> 00:48:34,540
homophobic<font color="#CCCCCC"> Nazi but I guess that's a</font>

1100
00:48:32,380 --> 00:48:36,280
that's just more of a reflection of

1101
00:48:34,540 --> 00:48:39,520
<font color="#CCCCCC">Twitter being a cesspool</font>

1102
00:48:36,280 --> 00:48:40,990
but<font color="#E5E5E5"> but</font><font color="#CCCCCC"> uh I think that doesn't that's a</font>

1103
00:48:39,520 --> 00:48:43,780
great example because this is<font color="#CCCCCC"> an</font>

1104
00:48:40,990 --> 00:48:46,149
<font color="#CCCCCC">excellent</font><font color="#E5E5E5"> this is an example of positive</font>

1105
00:48:43,780 --> 00:48:48,220
<font color="#E5E5E5">attacks of our off positive</font><font color="#CCCCCC"> attacks</font>

1106
00:48:46,150 --> 00:48:50,049
<font color="#CCCCCC">whereby the model is learning in an</font>

1107
00:48:48,220 --> 00:48:51,259
online fashion and<font color="#CCCCCC"> you're unable</font><font color="#E5E5E5"> to</font>

1108
00:48:50,049 --> 00:48:53,450
<font color="#CCCCCC">really</font>

1109
00:48:51,260 --> 00:48:56,780
because there's no human in the loop<font color="#E5E5E5"> to</font>

1110
00:48:53,450 --> 00:48:59,149
<font color="#CCCCCC">help the model learn in the right</font>

1111
00:48:56,780 --> 00:49:01,220
direction and without<font color="#E5E5E5"> a human in the</font>

1112
00:48:59,150 --> 00:49:02,660
loop<font color="#CCCCCC"> machine learning models today can't</font>

1113
00:49:01,220 --> 00:49:05,089
really decipher<font color="#E5E5E5"> what shouldn't</font><font color="#CCCCCC"> what</font>

1114
00:49:02,660 --> 00:49:07,609
<font color="#E5E5E5">shouldn't learn so i guess it was pretty</font>

1115
00:49:05,090 --> 00:49:11,480
naive when<font color="#E5E5E5"> it deployed that because I</font>

1116
00:49:07,610 --> 00:49:13,280
mean anything that takes in input from

1117
00:49:11,480 --> 00:49:27,020
<font color="#E5E5E5">twitter is gonna</font><font color="#CCCCCC"> die</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> like that</font>

1118
00:49:13,280 --> 00:49:30,980
so<font color="#CCCCCC"> not surprising here</font>

1119
00:49:27,020 --> 00:49:33,860
yeah<font color="#E5E5E5"> that's a great question that</font><font color="#CCCCCC"> that's</font>

1120
00:49:30,980 --> 00:49:39,140
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> great intuition this in the</font><font color="#CCCCCC"> graft</font>

1121
00:49:33,860 --> 00:49:42,500
<font color="#CCCCCC">i showed earlier</font><font color="#E5E5E5"> where</font><font color="#CCCCCC"> I mean up of</font>

1122
00:49:39,140 --> 00:49:45,500
different different work done by

1123
00:49:42,500 --> 00:49:48,500
different people<font color="#CCCCCC"> you can see here</font>

1124
00:49:45,500 --> 00:49:50,870
there's a line<font color="#E5E5E5"> target this</font><font color="#CCCCCC"> target this</font>

1125
00:49:48,500 --> 00:49:54,410
<font color="#E5E5E5">classification that just means that</font>

1126
00:49:50,870 --> 00:49:58,670
you're able to choose a target for<font color="#E5E5E5"> where</font>

1127
00:49:54,410 --> 00:50:00,140
<font color="#E5E5E5">where the classifier will end up so that</font>

1128
00:49:58,670 --> 00:50:01,280
<font color="#E5E5E5">means that just means that if an image</font>

1129
00:50:00,140 --> 00:50:02,720
looks like a one initially<font color="#E5E5E5"> and</font>

1130
00:50:01,280 --> 00:50:04,790
classified correctly predicts<font color="#CCCCCC"> the</font><font color="#E5E5E5"> one</font>

1131
00:50:02,720 --> 00:50:06,950
<font color="#CCCCCC">you wanted it</font><font color="#E5E5E5"> to look like a</font><font color="#CCCCCC"> seven</font>

1132
00:50:04,790 --> 00:50:10,190
you<font color="#CCCCCC"> can train the model</font><font color="#E5E5E5"> in such a way</font>

1133
00:50:06,950 --> 00:50:11,600
that you can add a perturbation back to

1134
00:50:10,190 --> 00:50:13,790
this image that would make it look like

1135
00:50:11,600 --> 00:50:15,290
a<font color="#CCCCCC"> seven and</font><font color="#E5E5E5"> source target</font>

1136
00:50:13,790 --> 00:50:18,230
misclassifications<font color="#E5E5E5"> isn't even more</font>

1137
00:50:15,290 --> 00:50:19,850
<font color="#E5E5E5">targeted way of doing this you can make</font>

1138
00:50:18,230 --> 00:50:20,960
<font color="#CCCCCC">once looked like</font><font color="#E5E5E5"> sevens and everything</font>

1139
00:50:19,850 --> 00:50:25,759
else<font color="#E5E5E5"> look the same</font>

1140
00:50:20,960 --> 00:50:30,170
<font color="#E5E5E5">yeah any other questions</font>

1141
00:50:25,760 --> 00:50:32,150
cool yeah this is<font color="#E5E5E5"> this is great thanks</font>

1142
00:50:30,170 --> 00:50:33,740
for thanks for being here

1143
00:50:32,150 --> 00:50:37,970
please go check out the project online

1144
00:50:33,740 --> 00:50:39,200
<font color="#CCCCCC">its</font><font color="#E5E5E5"> deep owning and if you have</font>

1145
00:50:37,970 --> 00:50:49,060
questions or if you want to join<font color="#E5E5E5"> our</font>

1146
00:50:39,200 --> 00:50:49,060
contribute<font color="#CCCCCC"> please</font><font color="#E5E5E5"> thank you</font>

