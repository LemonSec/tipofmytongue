1
00:00:00,000 --> 00:00:05,640
[Music]

2
00:00:01,550 --> 00:00:12,680
so as long as I talked down to my chest

3
00:00:05,640 --> 00:00:12,680
[Music]

4
00:00:14,929 --> 00:00:18,020
thank you

5
00:00:21,050 --> 00:00:26,310
Tilly to bail

6
00:00:24,140 --> 00:00:28,380
there's the doorman we can still make it

7
00:00:26,310 --> 00:00:41,489
out we've got like two minutes and two

8
00:00:28,380 --> 00:00:45,289
poop what

9
00:00:41,490 --> 00:00:50,000
[Music]

10
00:00:45,289 --> 00:00:52,140
I feel so heinous this morning dude one

11
00:00:50,000 --> 00:00:55,269
four five mile ride and pooped twice

12
00:00:52,140 --> 00:00:57,409
[Music]

13
00:00:55,269 --> 00:01:13,520
yeah I don't do well with unlimited

14
00:00:57,409 --> 00:01:15,500
alcohol and people are still coming

15
00:01:13,520 --> 00:01:18,619
Why Why are they honest I don't know

16
00:01:15,500 --> 00:01:20,179
this is can you imagine like every seat

17
00:01:18,619 --> 00:01:31,009
was full like that kind of like a

18
00:01:20,179 --> 00:01:34,970
thousand people stoop like run up and

19
00:01:31,009 --> 00:01:35,720
down some respect okay I can do that

20
00:01:34,970 --> 00:01:37,789
yeah

21
00:01:35,720 --> 00:01:46,789
I can't read blog bear crawl fence weird

22
00:01:37,789 --> 00:01:51,470
shit I see they changed the new

23
00:01:46,789 --> 00:01:54,020
zeros to Oscars toes for noobs that's

24
00:01:51,470 --> 00:02:00,070
Leslie dude Oh

25
00:01:54,020 --> 00:02:00,070
I don't think I didn't I got bad news

26
00:02:00,390 --> 00:02:08,620
[Music]

27
00:02:21,040 --> 00:02:31,700
we're getting started alright alright

28
00:02:29,780 --> 00:02:34,130
good afternoon friends colleagues come

29
00:02:31,700 --> 00:02:35,359
prayers thanks for coming you didn't

30
00:02:34,130 --> 00:02:37,280
have to you literally could have done

31
00:02:35,360 --> 00:02:39,410
anything else there are a lot of people

32
00:02:37,280 --> 00:02:41,299
here and that's awesome this is my first

33
00:02:39,410 --> 00:02:43,819
time speaking ever I've never spoke

34
00:02:41,299 --> 00:02:45,380
before I think I'd be more nervous but

35
00:02:43,819 --> 00:02:47,600
at least a dozen people here just a

36
00:02:45,380 --> 00:02:50,660
heckle so that makes me feel better in

37
00:02:47,600 --> 00:02:53,599
my heart I'm a consultant I worked for

38
00:02:50,660 --> 00:02:55,730
vd8 labs I do some things with

39
00:02:53,599 --> 00:02:58,250
technology and computers of pentesting

40
00:02:55,730 --> 00:03:00,470
Blue team engineering some stuff of

41
00:02:58,250 --> 00:03:02,480
malware having lots of fun

42
00:03:00,470 --> 00:03:05,290
I'm also Greg them your personal trainer

43
00:03:02,480 --> 00:03:08,810
right yes James is my personal trainer

44
00:03:05,290 --> 00:03:11,540
so I also work at VTA we do red teaming

45
00:03:08,810 --> 00:03:13,670
I'm testing security code auditing kind

46
00:03:11,540 --> 00:03:17,320
of a whole umbrella of cyber operations

47
00:03:13,670 --> 00:03:20,380
so as you can see here from our title

48
00:03:17,320 --> 00:03:23,530
reverse essentially I work for noobs so

49
00:03:20,380 --> 00:03:25,760
the the title and the talk today is not

50
00:03:23,530 --> 00:03:27,410
like going to be very in-depth but it's

51
00:03:25,760 --> 00:03:29,268
just to give you a base starting point

52
00:03:27,410 --> 00:03:34,970
so you can look at malware to see what's

53
00:03:29,269 --> 00:03:37,220
going on so why do this it opens up

54
00:03:34,970 --> 00:03:39,799
career opportunities you can do AI are

55
00:03:37,220 --> 00:03:41,959
you can do Network analysts you can get

56
00:03:39,799 --> 00:03:46,220
out malware analyst position you go

57
00:03:41,959 --> 00:03:49,459
hence cool stuff penetration testing yes

58
00:03:46,220 --> 00:03:51,350
you can't prevent everything it's

59
00:03:49,459 --> 00:03:53,540
certainly we try but it's never gonna

60
00:03:51,350 --> 00:03:55,370
happen and when a latent threat is

61
00:03:53,540 --> 00:03:57,620
discovered in your network for instance

62
00:03:55,370 --> 00:04:00,140
you need to know what it's been

63
00:03:57,620 --> 00:04:04,430
for the last year or last five years

64
00:04:00,140 --> 00:04:06,230
what were its capabilities so also why

65
00:04:04,430 --> 00:04:09,560
do this adversarial thinking you don't

66
00:04:06,230 --> 00:04:11,420
want to know why the adversary was doing

67
00:04:09,560 --> 00:04:14,269
what it was doing with his malware what

68
00:04:11,420 --> 00:04:16,459
registry registry keys to be modify um

69
00:04:14,269 --> 00:04:17,389
where the strings can you grep for those

70
00:04:16,459 --> 00:04:19,220
strings throughout your entire

71
00:04:17,389 --> 00:04:22,160
environment you know is like is that

72
00:04:19,220 --> 00:04:25,460
only one that one box is infected or was

73
00:04:22,160 --> 00:04:27,830
it multiple boxes that got infected yeah

74
00:04:25,460 --> 00:04:29,060
so I think another reason to do this

75
00:04:27,830 --> 00:04:31,010
kind of thing is just because you want

76
00:04:29,060 --> 00:04:33,080
to write knowledge is fun learning stuff

77
00:04:31,010 --> 00:04:34,849
is cool figuring out how stuff works is

78
00:04:33,080 --> 00:04:36,889
awesome being curious enough to do the

79
00:04:34,850 --> 00:04:40,100
thing as bananas I think that's why some

80
00:04:36,889 --> 00:04:41,449
of you are here and then the bottom of

81
00:04:40,100 --> 00:04:42,949
the slide is these are the types of

82
00:04:41,449 --> 00:04:44,810
people the types of roles and positions

83
00:04:42,949 --> 00:04:50,960
that companies hire that do this kind of

84
00:04:44,810 --> 00:04:53,120
thing oh so so malware and malware

85
00:04:50,960 --> 00:04:55,039
analysis in general is a very broad and

86
00:04:53,120 --> 00:04:56,810
nebulous field right we simply don't

87
00:04:55,039 --> 00:04:59,000
have the time to cover all of it

88
00:04:56,810 --> 00:05:01,160
in-depth or even get very very granular

89
00:04:59,000 --> 00:05:04,810
in just an hour we're gonna cover the

90
00:05:01,160 --> 00:05:04,810
basics just to get you started

91
00:05:05,110 --> 00:05:10,099
yes we're to discuss the Melbourne Ellis

92
00:05:07,789 --> 00:05:11,510
process we're to talk about static

93
00:05:10,099 --> 00:05:13,700
analysis we're gonna talk about

94
00:05:11,510 --> 00:05:16,190
automated analysis dynamic all those

95
00:05:13,700 --> 00:05:17,510
cool topics settings with safe lab

96
00:05:16,190 --> 00:05:19,900
environment genes we covering that

97
00:05:17,510 --> 00:05:22,940
things like setting up a safe sandbox

98
00:05:19,900 --> 00:05:24,440
not sharing your folders in your VM

99
00:05:22,940 --> 00:05:27,530
that's gonna be infected with your main

100
00:05:24,440 --> 00:05:29,000
host you don't ransomware yourself some

101
00:05:27,530 --> 00:05:31,190
of the slides in this deck are a little

102
00:05:29,000 --> 00:05:32,900
bit busy there's a lot of text on them

103
00:05:31,190 --> 00:05:35,930
and whatnot don't worry about trying to

104
00:05:32,900 --> 00:05:37,489
take photos or anything anybody that

105
00:05:35,930 --> 00:05:42,169
wants this deck will make it publicly

106
00:05:37,490 --> 00:05:44,000
available just ask did you want did you

107
00:05:42,169 --> 00:05:45,710
have more to say um yes the limitations

108
00:05:44,000 --> 00:05:47,150
of this talk you know it's kind of be

109
00:05:45,710 --> 00:05:49,090
like skin depth

110
00:05:47,150 --> 00:05:51,650
we're only be covering windows malware

111
00:05:49,090 --> 00:05:54,469
some of you may have gone to dr. Joe des

112
00:05:51,650 --> 00:05:56,000
mots talk about ten minutes ago

113
00:05:54,470 --> 00:05:57,410
but he talks about alpha applications

114
00:05:56,000 --> 00:05:58,669
that's gonna be Linux we're not who

115
00:05:57,410 --> 00:06:00,949
talking about Linux at all today it's

116
00:05:58,669 --> 00:06:03,340
all gonna be Windows because Windows has

117
00:06:00,949 --> 00:06:04,360
a significant market share yeah

118
00:06:03,340 --> 00:06:05,679
- we will not I'm talking about an

119
00:06:04,360 --> 00:06:07,060
Android it has I think the most

120
00:06:05,680 --> 00:06:07,960
operating systems on the planet right

121
00:06:07,060 --> 00:06:10,780
now

122
00:06:07,960 --> 00:06:12,940
this talk is meant to be for anybody in

123
00:06:10,780 --> 00:06:14,590
everybody if someone comes in here

124
00:06:12,940 --> 00:06:17,050
without a technical background if you're

125
00:06:14,590 --> 00:06:19,000
in high school or college this is for

126
00:06:17,050 --> 00:06:21,040
you if you're doing Incident Response

127
00:06:19,000 --> 00:06:26,740
for your career

128
00:06:21,040 --> 00:06:29,080
try not to fall asleep alright so I

129
00:06:26,740 --> 00:06:30,820
think it'd be silly to have a

130
00:06:29,080 --> 00:06:32,320
presentation about malware without first

131
00:06:30,820 --> 00:06:34,180
discussing what malware actually is

132
00:06:32,320 --> 00:06:36,940
right and this sort of this broad term

133
00:06:34,180 --> 00:06:38,050
that applies weaponizing technology to

134
00:06:36,940 --> 00:06:41,680
subvert intent

135
00:06:38,050 --> 00:06:43,330
I intend to download an mp3 to listen to

136
00:06:41,680 --> 00:06:43,720
Rick Astley's hit single never going to

137
00:06:43,330 --> 00:06:46,539
give you up

138
00:06:43,720 --> 00:06:47,920
I don't intend to give control of my

139
00:06:46,540 --> 00:06:51,430
computer to some guy over the Internet

140
00:06:47,920 --> 00:06:54,250
but because malicious files exist this

141
00:06:51,430 --> 00:06:55,810
kind of thing can happen so we need to

142
00:06:54,250 --> 00:06:58,990
know about it talk about it learn about

143
00:06:55,810 --> 00:07:01,590
it generally the common stuff we see day

144
00:06:58,990 --> 00:07:04,420
in and day out the widespread SWAT us on

145
00:07:01,590 --> 00:07:06,700
commodity malware is trying to make

146
00:07:04,420 --> 00:07:08,470
someone money people like money whether

147
00:07:06,700 --> 00:07:11,260
it's by encrypting your hard drive and

148
00:07:08,470 --> 00:07:13,470
demanding tribute or using your CPU to

149
00:07:11,260 --> 00:07:15,760
mine cryptocurrency serving you as

150
00:07:13,470 --> 00:07:18,940
scaring you into buying a fake product

151
00:07:15,760 --> 00:07:21,520
or stealing your identity sometimes

152
00:07:18,940 --> 00:07:23,710
there are other motives my favorite

153
00:07:21,520 --> 00:07:25,479
example in in the hoops category is the

154
00:07:23,710 --> 00:07:28,570
Morris worm or that the great internet

155
00:07:25,480 --> 00:07:31,680
worm of number ii 1988 when Bobby Morris

156
00:07:28,570 --> 00:07:34,330
created a worm one of the first worms to

157
00:07:31,680 --> 00:07:38,170
expose vulnerabilities and UNIX systems

158
00:07:34,330 --> 00:07:40,120
it worked too well and would reinfect

159
00:07:38,170 --> 00:07:43,420
the same system multiple times until it

160
00:07:40,120 --> 00:07:45,010
overloaded the cpu and killed it this

161
00:07:43,420 --> 00:07:47,260
prompted DARPA to create the first

162
00:07:45,010 --> 00:07:49,810
search or computer emergency response

163
00:07:47,260 --> 00:07:51,940
team a team that is alive and well in

164
00:07:49,810 --> 00:07:53,410
the private sector today and who hires

165
00:07:51,940 --> 00:07:55,990
people that do the kinds of things we're

166
00:07:53,410 --> 00:07:57,730
going to talk about today it also

167
00:07:55,990 --> 00:07:59,440
resulted in the first felony conviction

168
00:07:57,730 --> 00:08:01,030
of the Computer Fraud and Abuse Act so

169
00:07:59,440 --> 00:08:04,420
don't do this stuff at home don't break

170
00:08:01,030 --> 00:08:06,250
stuff there's also this idea of non

171
00:08:04,420 --> 00:08:08,490
malware attacks right we just use

172
00:08:06,250 --> 00:08:10,620
pre-existing legitimate program

173
00:08:08,490 --> 00:08:12,990
works in protocols to do something

174
00:08:10,620 --> 00:08:15,030
nefarious it's actually probably about

175
00:08:12,990 --> 00:08:17,039
fifty to sixty percent of all the

176
00:08:15,030 --> 00:08:19,888
malicious activity we commonly see in

177
00:08:17,039 --> 00:08:21,030
2019 unfortunately that's outside the

178
00:08:19,889 --> 00:08:24,479
scope of this talk so we're not gonna

179
00:08:21,030 --> 00:08:27,090
talk about that today so how do people

180
00:08:24,479 --> 00:08:28,500
get malware you know and I don't mean

181
00:08:27,090 --> 00:08:29,698
how do you get it if you're a researcher

182
00:08:28,500 --> 00:08:33,299
how do you get it when you're not trying

183
00:08:29,699 --> 00:08:35,610
to write how's it spreading legitimate

184
00:08:33,299 --> 00:08:37,620
programs often offered for free that

185
00:08:35,610 --> 00:08:38,459
have metal er hid inside an idea as old

186
00:08:37,620 --> 00:08:40,709
as time

187
00:08:38,458 --> 00:08:43,649
email attachments technical

188
00:08:40,708 --> 00:08:45,839
vulnerabilities USB thumb drives hanging

189
00:08:43,649 --> 00:08:48,120
out with Thomas Somerville there are

190
00:08:45,839 --> 00:08:50,610
many mediums for the modern malicious

191
00:08:48,120 --> 00:08:53,190
molarity alright so we know what it is

192
00:08:50,610 --> 00:08:56,670
we know that it's bad Greg what do we do

193
00:08:53,190 --> 00:08:58,529
about it will hopefully do something

194
00:08:56,670 --> 00:09:00,810
about it right so we're gonna talk about

195
00:08:58,529 --> 00:09:02,580
triangles today that was a bad joke I'm

196
00:09:00,810 --> 00:09:04,529
sorry no we're gonna talk about malware

197
00:09:02,580 --> 00:09:06,270
so this is a trial representing the

198
00:09:04,529 --> 00:09:08,610
malware analysis process as we go up the

199
00:09:06,270 --> 00:09:10,860
triangle to the peak analysis process

200
00:09:08,610 --> 00:09:12,149
gets harder and harder so starting at

201
00:09:10,860 --> 00:09:13,800
the bottom the base of the pyramid we

202
00:09:12,149 --> 00:09:17,640
have fully automated analysis this is

203
00:09:13,800 --> 00:09:19,589
you have your malicious exe or or

204
00:09:17,640 --> 00:09:21,899
whatever file you're dropping the

205
00:09:19,589 --> 00:09:24,420
automated malware analysis but you can

206
00:09:21,899 --> 00:09:27,120
drop in a virus total or a hybrid

207
00:09:24,420 --> 00:09:28,770
analysis or use any runs anyways you

208
00:09:27,120 --> 00:09:30,060
drop it in there and it'll just spit out

209
00:09:28,770 --> 00:09:31,860
what the malicious strings are and all

210
00:09:30,060 --> 00:09:35,819
kinds of badness like the registry mods

211
00:09:31,860 --> 00:09:38,310
it does in etc so one step up from that

212
00:09:35,820 --> 00:09:39,899
is static properties analysis so what

213
00:09:38,310 --> 00:09:42,180
static properties analysis is you're

214
00:09:39,899 --> 00:09:43,770
using a tool like piece to do you can

215
00:09:42,180 --> 00:09:45,779
drop your malware in that now you can

216
00:09:43,770 --> 00:09:47,520
look at the strings one by one you can

217
00:09:45,779 --> 00:09:49,170
look at the sections the resources it's

218
00:09:47,520 --> 00:09:52,050
using maybe you can look at what

219
00:09:49,170 --> 00:09:53,160
language the malware is written in those

220
00:09:52,050 --> 00:09:54,810
things can be spoofed though however

221
00:09:53,160 --> 00:09:57,709
especially the the language that's not

222
00:09:54,810 --> 00:10:00,000
really a good identifier to go off of

223
00:09:57,709 --> 00:10:01,529
one step up and that is interactive

224
00:10:00,000 --> 00:10:03,779
behavior analysis this is we're using

225
00:10:01,529 --> 00:10:06,089
something like cuckoo which is somewhat

226
00:10:03,779 --> 00:10:07,380
automated and you're looking at this is

227
00:10:06,089 --> 00:10:10,230
more of a dynamic analysis you're

228
00:10:07,380 --> 00:10:12,149
looking at how the malware is modifying

229
00:10:10,230 --> 00:10:14,610
the registry house modifying the file

230
00:10:12,149 --> 00:10:17,699
system is a setting up scheduled tasks

231
00:10:14,610 --> 00:10:19,980
or cron jobs and then the hardest part

232
00:10:17,699 --> 00:10:20,920
of reversing malware is actual reversing

233
00:10:19,980 --> 00:10:24,010
this is where you're getting into

234
00:10:20,920 --> 00:10:27,130
deidre maybe using wind bug you could be

235
00:10:24,010 --> 00:10:28,360
using Ida Pro for example and this is

236
00:10:27,130 --> 00:10:29,649
we're actually breaking down your

237
00:10:28,360 --> 00:10:35,680
looking into the Assembly of how the

238
00:10:29,649 --> 00:10:36,940
malware is written okay so starting at

239
00:10:35,680 --> 00:10:40,149
the bottom the pyramid the easiest

240
00:10:36,940 --> 00:10:41,800
portion automated malware analysis this

241
00:10:40,149 --> 00:10:43,839
is great for code coverage you can drop

242
00:10:41,800 --> 00:10:46,479
it into virustotal or hybrid analysis

243
00:10:43,839 --> 00:10:48,670
and it's gonna cover the whole exe

244
00:10:46,480 --> 00:10:50,290
wasn't for all it's very fast doing

245
00:10:48,670 --> 00:10:52,449
would it get a quick look if you're the

246
00:10:50,290 --> 00:10:54,099
stock analyst a large enterprise you

247
00:10:52,449 --> 00:10:55,569
really can't afford it just be spending

248
00:10:54,100 --> 00:10:57,550
your time getting into the weeds with

249
00:10:55,570 --> 00:11:03,160
this stuff you want to get a quick first

250
00:10:57,550 --> 00:11:05,079
look at it so automated metal whelmed

251
00:11:03,160 --> 00:11:07,389
malware analysis on the left hand side

252
00:11:05,079 --> 00:11:10,719
is we've dropped a malicious file and

253
00:11:07,389 --> 00:11:13,660
let's total and we can see here that's a

254
00:11:10,720 --> 00:11:15,490
52 out of 69 i think is the number and

255
00:11:13,660 --> 00:11:18,430
that what that is looking at is

256
00:11:15,490 --> 00:11:19,089
virustotal uses a lot of antivirus and

257
00:11:18,430 --> 00:11:21,760
EDRs

258
00:11:19,089 --> 00:11:24,459
the signatures that are in those ers a

259
00:11:21,760 --> 00:11:26,380
navies to discern whether or not a file

260
00:11:24,459 --> 00:11:28,630
is malicious so that is a pretty high

261
00:11:26,380 --> 00:11:30,760
ratio and that's why it's red so this is

262
00:11:28,630 --> 00:11:33,399
probably malware so on the right hand

263
00:11:30,760 --> 00:11:36,720
side we have a good URL we went to

264
00:11:33,399 --> 00:11:39,010
google.com and notice how it's now zero

265
00:11:36,720 --> 00:11:41,380
out of whatever numbers on the bottom so

266
00:11:39,010 --> 00:11:43,209
that would be a very good sign that that

267
00:11:41,380 --> 00:11:44,890
is not malicious yeah I'm gonna

268
00:11:43,209 --> 00:11:46,869
interject and apologize we kind of

269
00:11:44,890 --> 00:11:48,279
assume that the projector screen would

270
00:11:46,870 --> 00:11:51,630
be behind us and we'd actually be able

271
00:11:48,279 --> 00:11:51,630
to see it but that's that's on us

272
00:11:51,720 --> 00:11:57,519
alright so a really cool part of our

273
00:11:54,370 --> 00:11:59,920
soul is looking at the behavior tab so

274
00:11:57,519 --> 00:12:01,480
on the right hand side you see a bunch

275
00:11:59,920 --> 00:12:03,099
of registry modifications that it's

276
00:12:01,480 --> 00:12:06,459
doing you see some registry keys that

277
00:12:03,100 --> 00:12:07,600
were also deleted when interest

278
00:12:06,459 --> 00:12:08,859
interesting registry key I'm actually

279
00:12:07,600 --> 00:12:12,550
just walk over here so I can see what's

280
00:12:08,860 --> 00:12:14,920
going on so on the bottom here we see

281
00:12:12,550 --> 00:12:17,349
Microsoft PC health error reporting

282
00:12:14,920 --> 00:12:19,089
so the malware actually deleted the key

283
00:12:17,350 --> 00:12:21,459
that would tell Microsoft Windows

284
00:12:19,089 --> 00:12:23,529
operating system that it was a malicious

285
00:12:21,459 --> 00:12:26,380
file so that's probably a sign that this

286
00:12:23,529 --> 00:12:28,750
is a malicious file so left hand side we

287
00:12:26,380 --> 00:12:29,880
see the malware reaching out to embolize

288
00:12:28,750 --> 00:12:32,279
shin

289
00:12:29,880 --> 00:12:33,870
biz I don't think that's a legitimate

290
00:12:32,279 --> 00:12:38,910
website I'm not sure what you guys think

291
00:12:33,870 --> 00:12:41,069
so yep go ahead back to me all right

292
00:12:38,910 --> 00:12:44,279
when you do malware analysis you will

293
00:12:41,069 --> 00:12:47,670
detonate real malware it is dangerous

294
00:12:44,279 --> 00:12:49,170
and if mishandled potentially illegal it

295
00:12:47,670 --> 00:12:50,969
is critical that you understand the risk

296
00:12:49,170 --> 00:12:53,160
that comes with this and how to avoid

297
00:12:50,970 --> 00:12:56,009
infecting machines or networks that you

298
00:12:53,160 --> 00:12:57,779
did not intend to so we use isolated lab

299
00:12:56,009 --> 00:12:59,639
environments that you can infect and

300
00:12:57,779 --> 00:13:01,829
interact with the computers can be

301
00:12:59,639 --> 00:13:03,360
physical they can be in the cloud but

302
00:13:01,829 --> 00:13:05,670
most often this is done using

303
00:13:03,360 --> 00:13:08,399
virtualization virtualization tools such

304
00:13:05,670 --> 00:13:10,529
as VMware virtual box for convenience

305
00:13:08,399 --> 00:13:12,120
and control and that's the type of

306
00:13:10,529 --> 00:13:16,949
environment I'm gonna talk about setting

307
00:13:12,120 --> 00:13:18,600
up so fireeyes Flair is a great VM that

308
00:13:16,949 --> 00:13:21,449
has a lot of pre-loaded tools

309
00:13:18,600 --> 00:13:24,180
Lennie's Elster's Ram Knox is a similar

310
00:13:21,449 --> 00:13:26,040
product it's a Linux VM these are

311
00:13:24,180 --> 00:13:28,380
awesome tools to get you up and running

312
00:13:26,040 --> 00:13:29,939
quickly and you know 5-10 minutes you

313
00:13:28,380 --> 00:13:33,509
can get fully up and running with an

314
00:13:29,940 --> 00:13:36,480
analysis team however it is easy to get

315
00:13:33,509 --> 00:13:38,279
lost in the sea of many tools I draw the

316
00:13:36,480 --> 00:13:39,750
coral area when I do pen tests in Kali

317
00:13:38,279 --> 00:13:41,939
Linux for instance is an awesome

318
00:13:39,750 --> 00:13:43,410
platform but there are thousands of

319
00:13:41,939 --> 00:13:44,849
tools on it many of them you may not

320
00:13:43,410 --> 00:13:48,740
know how they work or even know that

321
00:13:44,850 --> 00:13:50,670
they exist so sometimes

322
00:13:48,740 --> 00:13:53,160
reinventing the wheel is a good approach

323
00:13:50,670 --> 00:13:54,479
to help you learn what your tools do and

324
00:13:53,160 --> 00:13:56,990
to make sure that you actually know

325
00:13:54,480 --> 00:13:59,130
what's on the VM if you don't believe me

326
00:13:56,990 --> 00:14:00,839
here are the tools that are included on

327
00:13:59,130 --> 00:14:02,339
the Flair VM by default I'm gonna go

328
00:14:00,839 --> 00:14:03,889
through each one of these and talk about

329
00:14:02,339 --> 00:14:06,899
what they do

330
00:14:03,889 --> 00:14:09,180
Dex the jar takes Dex files from Al

331
00:14:06,899 --> 00:14:10,800
Android system and compiles them a zip

332
00:14:09,180 --> 00:14:12,449
file in a jar form I'm just kidding I'm

333
00:14:10,800 --> 00:14:14,339
not gonna do that all right so let's

334
00:14:12,449 --> 00:14:16,939
reinvent the wheel this is a wheel

335
00:14:14,339 --> 00:14:19,350
that's a wheel it illustrates that

336
00:14:16,939 --> 00:14:21,410
Windows is by far and away the most

337
00:14:19,350 --> 00:14:24,089
popular operating system on the planet

338
00:14:21,410 --> 00:14:25,769
for obvious reasons that's the operating

339
00:14:24,089 --> 00:14:28,410
system that the bad guys are targeting

340
00:14:25,769 --> 00:14:30,899
Windows 10 followed closely by Windows 7

341
00:14:28,410 --> 00:14:33,660
are the most popular it is helpful to

342
00:14:30,899 --> 00:14:38,220
have multiple versions at various patch

343
00:14:33,660 --> 00:14:39,870
levels and having certain programs on

344
00:14:38,220 --> 00:14:41,819
them like office because many a lot of

345
00:14:39,870 --> 00:14:42,510
malware will target the office suite is

346
00:14:41,819 --> 00:14:45,000
a good idea

347
00:14:42,510 --> 00:14:46,920
fortunately Microsoft makes this easy I

348
00:14:45,000 --> 00:14:49,320
cannot believe I said that out loud

349
00:14:46,920 --> 00:14:51,599
Microsoft makes this easy not a sense I

350
00:14:49,320 --> 00:14:53,910
ever thought I would say sorry they

351
00:14:51,600 --> 00:14:56,880
offer VMs that you can go download to

352
00:14:53,910 --> 00:14:58,709
test edge these are fully licensed VMs

353
00:14:56,880 --> 00:15:01,949
you download them for any platform that

354
00:14:58,709 --> 00:15:03,839
you have enable the license take a

355
00:15:01,949 --> 00:15:05,189
snapshot of that as soon as you enable

356
00:15:03,839 --> 00:15:06,990
the license and then you can revert to

357
00:15:05,190 --> 00:15:09,329
that any time and effectively have an

358
00:15:06,990 --> 00:15:11,339
indefinite fully license windows VM

359
00:15:09,329 --> 00:15:14,269
Windows 7 Windows 10 and it's a good

360
00:15:11,339 --> 00:15:14,269
place to start

361
00:15:14,300 --> 00:15:20,250
okay so you got a VM where do you put it

362
00:15:17,220 --> 00:15:23,670
in a hypervisor they have their pros and

363
00:15:20,250 --> 00:15:26,579
cons VirtualBox is free I personally

364
00:15:23,670 --> 00:15:27,319
prefer VMware it just works better for

365
00:15:26,579 --> 00:15:29,729
my needs

366
00:15:27,320 --> 00:15:32,130
VMware Player is free but does not

367
00:15:29,730 --> 00:15:34,139
support snapshots so that's a good thing

368
00:15:32,130 --> 00:15:35,939
to know uu snapshots are very important

369
00:15:34,139 --> 00:15:38,839
in this line of work and during the

370
00:15:35,940 --> 00:15:38,839
analysis triage

371
00:15:39,110 --> 00:15:44,160
yeah so there is always risk involved

372
00:15:42,300 --> 00:15:46,349
and we're going to talk about the ways

373
00:15:44,160 --> 00:15:50,430
we can configure these to avoid some of

374
00:15:46,350 --> 00:15:52,440
those pitfalls for instance some of the

375
00:15:50,430 --> 00:15:55,439
things that make your life easier make

376
00:15:52,440 --> 00:15:59,250
your life harder I enable shared folders

377
00:15:55,440 --> 00:16:01,500
for instance to drop my malware from my

378
00:15:59,250 --> 00:16:03,810
Mac system or Linux system into my

379
00:16:01,500 --> 00:16:05,550
Windows VM that's awesome that certainly

380
00:16:03,810 --> 00:16:07,290
makes things a lot easier but there

381
00:16:05,550 --> 00:16:09,209
could be some risks there shared

382
00:16:07,290 --> 00:16:11,069
clipboard' another thing copying and

383
00:16:09,209 --> 00:16:13,170
pasting between environments is really

384
00:16:11,069 --> 00:16:14,849
helpful but if you have a banking Trojan

385
00:16:13,170 --> 00:16:16,170
it will look at your clipboard and it's

386
00:16:14,850 --> 00:16:19,290
gonna see everything that you've copied

387
00:16:16,170 --> 00:16:21,260
from your host system just some things

388
00:16:19,290 --> 00:16:25,529
to keep in mind

389
00:16:21,260 --> 00:16:27,300
networking excuse me malware doesn't

390
00:16:25,529 --> 00:16:29,490
want to be analyzed okay

391
00:16:27,300 --> 00:16:30,540
plain and simple the bad guys know what

392
00:16:29,490 --> 00:16:33,600
the good guys are up to

393
00:16:30,540 --> 00:16:35,430
it's a cat-and-mouse game malware can

394
00:16:33,600 --> 00:16:38,699
avoid doing anything if it detects that

395
00:16:35,430 --> 00:16:39,630
is in a VM or an automated sandbox or

396
00:16:38,699 --> 00:16:42,269
whatever it might be

397
00:16:39,630 --> 00:16:44,430
sometimes it's dead simple the malware

398
00:16:42,269 --> 00:16:46,199
will look for documents are there no

399
00:16:44,430 --> 00:16:46,430
documents are there no browsers is there

400
00:16:46,199 --> 00:16:48,589
none

401
00:16:46,430 --> 00:16:50,599
in the temp directory are there

402
00:16:48,589 --> 00:16:52,460
third-party programs installed so how

403
00:16:50,600 --> 00:16:55,580
can we start to eliminate some of these

404
00:16:52,460 --> 00:16:57,320
obvious things at the bottom is an

405
00:16:55,580 --> 00:17:00,110
example of some interesting one I ran

406
00:16:57,320 --> 00:17:02,870
into the other day this malware is using

407
00:17:00,110 --> 00:17:05,089
WMI to query the CPU first temperature

408
00:17:02,870 --> 00:17:06,800
which is supported on physical systems

409
00:17:05,089 --> 00:17:10,339
would not support it on virtual systems

410
00:17:06,800 --> 00:17:12,230
back to that cat-and-mouse game you can

411
00:17:10,339 --> 00:17:16,149
create a service that listens for that

412
00:17:12,230 --> 00:17:16,150
API call and responds with a number

413
00:17:17,260 --> 00:17:22,939
networking bridge is bad don't do bridge

414
00:17:21,559 --> 00:17:24,399
networking this is essentially putting

415
00:17:22,939 --> 00:17:25,970
another computer on your network

416
00:17:24,400 --> 00:17:27,860
particularly if you're doing this in a

417
00:17:25,970 --> 00:17:31,970
corporate environment this is a good way

418
00:17:27,859 --> 00:17:34,820
to have the FBI contact you that is okay

419
00:17:31,970 --> 00:17:36,350
sometimes sometimes you want certain

420
00:17:34,820 --> 00:17:37,520
pieces of malware if you're already sort

421
00:17:36,350 --> 00:17:38,899
of familiar with what they're going to

422
00:17:37,520 --> 00:17:42,050
be doing to be able to communicate

423
00:17:38,900 --> 00:17:44,090
communicate to the Internet host only is

424
00:17:42,050 --> 00:17:46,010
generally where we're gonna reside what

425
00:17:44,090 --> 00:17:47,740
community the malware can communicate to

426
00:17:46,010 --> 00:17:50,540
your host system and nowhere else

427
00:17:47,740 --> 00:17:51,980
fake net rag we'll talk about more later

428
00:17:50,540 --> 00:17:54,678
but this is a great program that

429
00:17:51,980 --> 00:17:57,380
intercepts all Internet traffic and logs

430
00:17:54,679 --> 00:18:00,920
it and responds with fake 200 ok

431
00:17:57,380 --> 00:18:02,990
requests lastly some malware will look

432
00:18:00,920 --> 00:18:05,090
for that in virtual machine networking

433
00:18:02,990 --> 00:18:06,530
interface so if you disable that you may

434
00:18:05,090 --> 00:18:12,320
have to do that for certain malware

435
00:18:06,530 --> 00:18:14,360
triage shows some anti analysis

436
00:18:12,320 --> 00:18:16,129
techniques employed by malware will look

437
00:18:14,360 --> 00:18:19,159
for analysis tools as you might imagine

438
00:18:16,130 --> 00:18:21,080
and it's why pre-built machines as I

439
00:18:19,160 --> 00:18:22,760
mentioned like flair and remnants are

440
00:18:21,080 --> 00:18:24,050
not the best solution all the time and

441
00:18:22,760 --> 00:18:27,260
it's a good idea to know how to build

442
00:18:24,050 --> 00:18:30,860
your own so how do we make a box look

443
00:18:27,260 --> 00:18:32,450
legit ninite.com is a great place to

444
00:18:30,860 --> 00:18:34,490
grab a bunch of apps at once in one

445
00:18:32,450 --> 00:18:35,929
package and in less than five minutes

446
00:18:34,490 --> 00:18:39,320
you can make your system look a little

447
00:18:35,929 --> 00:18:41,240
more legitimate the Oh a box builder is

448
00:18:39,320 --> 00:18:44,149
a plural site script that you can take

449
00:18:41,240 --> 00:18:45,500
and put on any box and it will rename

450
00:18:44,150 --> 00:18:46,940
some of the analysis tools so that

451
00:18:45,500 --> 00:18:49,460
malware that's looking for those common

452
00:18:46,940 --> 00:18:51,679
names won't find it as well as grab a

453
00:18:49,460 --> 00:18:53,870
lot of the tools like from that slide

454
00:18:51,679 --> 00:18:55,640
deck that was crazy earlier and put

455
00:18:53,870 --> 00:18:56,780
those on your system for you in 5-10

456
00:18:55,640 --> 00:18:58,160
minutes you'll have it all set up and

457
00:18:56,780 --> 00:19:00,210
ready to go

458
00:18:58,160 --> 00:19:03,840
also a great idea to have office

459
00:19:00,210 --> 00:19:04,920
installed as I mentioned and if you get

460
00:19:03,840 --> 00:19:06,060
it from Pirate Bay then you have a

461
00:19:04,920 --> 00:19:07,820
two-for-one because now you have Mel

462
00:19:06,060 --> 00:19:15,149
right having us analyze and you have

463
00:19:07,820 --> 00:19:17,460
office yeah so generally in general this

464
00:19:15,150 --> 00:19:19,110
is what my triage environment looks like

465
00:19:17,460 --> 00:19:21,540
or one of my triage environments VM

466
00:19:19,110 --> 00:19:23,909
where I take the original license copy

467
00:19:21,540 --> 00:19:26,070
of the VM snapshot it before I do any

468
00:19:23,910 --> 00:19:27,900
modifications to it then I add my tools

469
00:19:26,070 --> 00:19:30,060
make it look legit make the

470
00:19:27,900 --> 00:19:32,520
configuration changes I want to snapshot

471
00:19:30,060 --> 00:19:34,320
it then I explode malware on it and

472
00:19:32,520 --> 00:19:37,200
revert and do that over and over again

473
00:19:34,320 --> 00:19:39,389
one new mistake that maybe I've made

474
00:19:37,200 --> 00:19:41,160
before is analyzing multiple pieces of

475
00:19:39,390 --> 00:19:45,720
malware without reverting back to a

476
00:19:41,160 --> 00:19:47,480
snapshot not generally a good idea all

477
00:19:45,720 --> 00:19:49,470
right I'll hand it back over to Greg

478
00:19:47,480 --> 00:19:51,870
okay so now we're to talk about the P

479
00:19:49,470 --> 00:19:55,110
header P stands for the portable

480
00:19:51,870 --> 00:19:56,340
executable file format so the PE header

481
00:19:55,110 --> 00:19:59,189
exists for two reasons

482
00:19:56,340 --> 00:20:00,510
all and all the info that the operating

483
00:19:59,190 --> 00:20:01,860
system needs to execute the program is

484
00:20:00,510 --> 00:20:04,410
gonna be right there the PE header a

485
00:20:01,860 --> 00:20:06,750
larger sections your IAT your resources

486
00:20:04,410 --> 00:20:09,060
it also directs the OS where the program

487
00:20:06,750 --> 00:20:11,070
goes into memory we won't go too deep

488
00:20:09,060 --> 00:20:15,240
into the file format but we are in cover

489
00:20:11,070 --> 00:20:18,960
some of the good stuff that it has okay

490
00:20:15,240 --> 00:20:22,410
oh you did good job so how does malware

491
00:20:18,960 --> 00:20:24,540
hide one of the really simple things

492
00:20:22,410 --> 00:20:26,070
that they do is malware authors can pack

493
00:20:24,540 --> 00:20:29,310
their malware which is similar to

494
00:20:26,070 --> 00:20:30,840
zipping or gun zipping it if you're

495
00:20:29,310 --> 00:20:32,580
using a packer like upx

496
00:20:30,840 --> 00:20:35,159
the compression rate is actually a lot

497
00:20:32,580 --> 00:20:36,810
better than the traditional zipping

498
00:20:35,160 --> 00:20:41,070
tools like WinZip or gun zip or just

499
00:20:36,810 --> 00:20:43,230
does the obfuscation techniques also so

500
00:20:41,070 --> 00:20:45,210
packing is a subcategory of obfuscation

501
00:20:43,230 --> 00:20:46,950
there are other things like that James

502
00:20:45,210 --> 00:20:49,410
will talk about later like XOR encoding

503
00:20:46,950 --> 00:20:51,840
and base64 encoding and we're the

504
00:20:49,410 --> 00:20:54,270
attackers goals when they are trying to

505
00:20:51,840 --> 00:20:56,250
escape their malware they want to slow

506
00:20:54,270 --> 00:20:58,650
down the reverse engineer they want to

507
00:20:56,250 --> 00:21:00,930
avoid a VD tection also so if you guys

508
00:20:58,650 --> 00:21:04,410
think back to wanna cry I think it was

509
00:21:00,930 --> 00:21:05,790
like May 2017 you know that the crypto

510
00:21:04,410 --> 00:21:10,340
ransomware that took over the world

511
00:21:05,790 --> 00:21:12,139
essentially think about if that malware

512
00:21:10,340 --> 00:21:14,000
would have been obfuscated better and

513
00:21:12,140 --> 00:21:16,520
wasn't be able it was not able to be

514
00:21:14,000 --> 00:21:18,770
reversed as quickly as it was so in

515
00:21:16,520 --> 00:21:21,950
general want to cry that had a very low

516
00:21:18,770 --> 00:21:25,549
level of obfuscation so just things to

517
00:21:21,950 --> 00:21:31,010
think about the impact that that could

518
00:21:25,549 --> 00:21:32,150
have had slide so obfuscation the

519
00:21:31,010 --> 00:21:34,330
definition is just the act of making

520
00:21:32,150 --> 00:21:37,279
something obscure unclear or

521
00:21:34,330 --> 00:21:38,960
unintelligible good and bad actors do

522
00:21:37,279 --> 00:21:41,000
this you know legitimate software

523
00:21:38,960 --> 00:21:42,740
vendors do not want you reversing their

524
00:21:41,000 --> 00:21:43,990
code because then you know you could

525
00:21:42,740 --> 00:21:46,340
make it yourself and put it out there

526
00:21:43,990 --> 00:21:49,190
application obfuscation does not equal

527
00:21:46,340 --> 00:21:50,658
security those are not those are not the

528
00:21:49,190 --> 00:21:52,870
same thing application is just a way to

529
00:21:50,659 --> 00:21:55,130
slow down a reverse engineer essentially

530
00:21:52,870 --> 00:21:57,289
it does increase the time effort and

531
00:21:55,130 --> 00:21:58,429
depth of knowledge because the person

532
00:21:57,289 --> 00:21:59,960
has to reverse it and they have to

533
00:21:58,429 --> 00:22:02,539
figure out what is your exact top to

534
00:21:59,960 --> 00:22:05,090
station method that you used so theif

535
00:22:02,539 --> 00:22:08,620
wanna cry or to use that example and it

536
00:22:05,090 --> 00:22:08,620
does hide what the program actually does

537
00:22:09,730 --> 00:22:14,720
so packing unpacking malware what is it

538
00:22:12,649 --> 00:22:18,399
packing exactly it's just compressing

539
00:22:14,720 --> 00:22:21,020
Rothfuss game within another program and

540
00:22:18,399 --> 00:22:22,699
it is very hard to analyze the program

541
00:22:21,020 --> 00:22:23,360
until it is unpacked certain want to do

542
00:22:22,700 --> 00:22:25,490
that first

543
00:22:23,360 --> 00:22:27,590
it must be defeated so you can see what

544
00:22:25,490 --> 00:22:30,260
the actual program is doing and see like

545
00:22:27,590 --> 00:22:34,039
the actual valid sessions exceptions

546
00:22:30,260 --> 00:22:35,330
excuse me and resources so why do evil

547
00:22:34,039 --> 00:22:37,730
people pack around where as I said

548
00:22:35,330 --> 00:22:39,500
before and bye-bye is the evil doers

549
00:22:37,730 --> 00:22:41,419
time because now our versus engineer has

550
00:22:39,500 --> 00:22:45,590
to go line by line through the assembly

551
00:22:41,419 --> 00:22:47,480
and figure out what's going on so the

552
00:22:45,590 --> 00:22:51,080
packing process on left-hand side we

553
00:22:47,480 --> 00:22:53,330
have an executable or DLL it's perfectly

554
00:22:51,080 --> 00:22:55,010
fine it's maybe it's malicious or

555
00:22:53,330 --> 00:22:58,070
something but it's unpacked essentially

556
00:22:55,010 --> 00:22:59,960
so looking at it like that and ps2 like

557
00:22:58,070 --> 00:23:03,260
piece to do we would see the strings the

558
00:22:59,960 --> 00:23:05,029
imports the sections low entropy because

559
00:23:03,260 --> 00:23:06,919
it's not packed yet it goes to the

560
00:23:05,029 --> 00:23:08,659
Packer all those things changed and we

561
00:23:06,919 --> 00:23:11,450
can no longer see the strings we can't

562
00:23:08,659 --> 00:23:12,980
see the imports sections we could see

563
00:23:11,450 --> 00:23:14,690
some sections but would probably show

564
00:23:12,980 --> 00:23:17,000
the actual name of the Packer for

565
00:23:14,690 --> 00:23:18,679
sections now because the program you

566
00:23:17,000 --> 00:23:20,120
can't see the program anymore and it

567
00:23:18,679 --> 00:23:20,760
would have a lot higher entropy after

568
00:23:20,120 --> 00:23:23,300
being

569
00:23:20,760 --> 00:23:27,210
and that's something we'll go into later

570
00:23:23,300 --> 00:23:29,520
go Packers the most popular Packer that

571
00:23:27,210 --> 00:23:31,890
is used for packaging malware is gonna

572
00:23:29,520 --> 00:23:33,300
be upx far and away there are some less

573
00:23:31,890 --> 00:23:37,200
common ones that you should know like

574
00:23:33,300 --> 00:23:38,399
lzma and FSG and NS packer but if you're

575
00:23:37,200 --> 00:23:40,140
if you're downloading anything up like

576
00:23:38,400 --> 00:23:45,390
letter share it's probably be pack of

577
00:23:40,140 --> 00:23:46,980
GPX okay let's cover some tools for

578
00:23:45,390 --> 00:23:49,590
looking at malware now so in the

579
00:23:46,980 --> 00:23:51,929
left-hand side we have X info PE it's

580
00:23:49,590 --> 00:23:54,300
great for Packer detection compiler

581
00:23:51,929 --> 00:23:56,160
detection it actually suggests which

582
00:23:54,300 --> 00:24:01,770
unpacker that you should use to unpack

583
00:23:56,160 --> 00:24:05,640
your malware so an example here so it

584
00:24:01,770 --> 00:24:07,020
was 32-bit executable it was hacked a

585
00:24:05,640 --> 00:24:09,030
few px and unpacked

586
00:24:07,020 --> 00:24:11,790
there's the exact command so this is a

587
00:24:09,030 --> 00:24:13,290
very efficacious tool if you want to

588
00:24:11,790 --> 00:24:14,879
know how to unpack your malware very

589
00:24:13,290 --> 00:24:17,190
quickly and there's the link that you

590
00:24:14,880 --> 00:24:19,530
can get that on the right hand side we

591
00:24:17,190 --> 00:24:21,210
have PE studio which is a it's a much

592
00:24:19,530 --> 00:24:24,660
more granular tool we can really break

593
00:24:21,210 --> 00:24:25,470
out what is going on in the program so

594
00:24:24,660 --> 00:24:26,760
intersections

595
00:24:25,470 --> 00:24:28,470
I'm not shoot you guys to see that it's

596
00:24:26,760 --> 00:24:29,429
kind of small but in sections all says

597
00:24:28,470 --> 00:24:32,790
as upx

598
00:24:29,429 --> 00:24:35,429
so that is far away a sign that you PX

599
00:24:32,790 --> 00:24:39,480
packing was used or utilized to pack

600
00:24:35,429 --> 00:24:41,370
this malware so P Studio Packer

601
00:24:39,480 --> 00:24:43,800
detection on the left-hand side we had

602
00:24:41,370 --> 00:24:45,540
an executable that has been packed and

603
00:24:43,800 --> 00:24:48,210
we've dropped that piece to do the

604
00:24:45,540 --> 00:24:49,740
imports there's only two strings there's

605
00:24:48,210 --> 00:24:51,179
only four so if you're ever looking at a

606
00:24:49,740 --> 00:24:52,980
program and there's only four strings

607
00:24:51,179 --> 00:24:56,280
that's a sign that something weird is

608
00:24:52,980 --> 00:24:58,470
going on also for for imports you know a

609
00:24:56,280 --> 00:25:00,480
program needs more than two api is to do

610
00:24:58,470 --> 00:25:03,330
anything so on the right hand side after

611
00:25:00,480 --> 00:25:04,710
unpacking p studio has actually reached

612
00:25:03,330 --> 00:25:07,530
the limit for looking at the strings

613
00:25:04,710 --> 00:25:09,330
because there's so many and also imports

614
00:25:07,530 --> 00:25:15,480
now there's 23 api's that we're looking

615
00:25:09,330 --> 00:25:17,370
at so this is the only slide of ayodhya

616
00:25:15,480 --> 00:25:21,110
promise i know this is a talk for more

617
00:25:17,370 --> 00:25:24,149
entry-level malware analysis analysts so

618
00:25:21,110 --> 00:25:25,439
on the left-hand side we have a piece of

619
00:25:24,150 --> 00:25:27,600
malware that has been packed we've

620
00:25:25,440 --> 00:25:28,770
dropped it in ida pro and as you can see

621
00:25:27,600 --> 00:25:30,320
here without knowing anything about

622
00:25:28,770 --> 00:25:34,190
assembly

623
00:25:30,320 --> 00:25:36,139
the function all the way down is upx so

624
00:25:34,190 --> 00:25:38,090
obviously it's been packed with upx and

625
00:25:36,140 --> 00:25:40,220
on the right hand side we've dropped the

626
00:25:38,090 --> 00:25:43,189
unpacked malware in ida pro and you can

627
00:25:40,220 --> 00:25:45,020
actually see the functions now so that's

628
00:25:43,190 --> 00:25:49,490
another telltale sign that this now wear

629
00:25:45,020 --> 00:25:50,720
has in fact been packed so we're gonna

630
00:25:49,490 --> 00:25:53,780
talk about the entropy passing

631
00:25:50,720 --> 00:25:55,700
relationship entropy is just a measure

632
00:25:53,780 --> 00:25:57,740
of the randomness of code so something

633
00:25:55,700 --> 00:26:00,100
that has a very low entropy would like

634
00:25:57,740 --> 00:26:02,270
to be a string of all zeros or all A's

635
00:26:00,100 --> 00:26:05,060
maximum entropy would be something like

636
00:26:02,270 --> 00:26:07,910
the alphabet A through Z there is no

637
00:26:05,060 --> 00:26:10,310
repetitive characters so it's based on

638
00:26:07,910 --> 00:26:12,860
Shannon's formula entropy is very easy

639
00:26:10,310 --> 00:26:16,129
to tell for packing or Ord encryption

640
00:26:12,860 --> 00:26:18,439
actually also so I like to think that

641
00:26:16,130 --> 00:26:20,390
anything greater than seven is probably

642
00:26:18,440 --> 00:26:23,900
a sign that packing or encryption is in

643
00:26:20,390 --> 00:26:26,810
play so right here in this blue

644
00:26:23,900 --> 00:26:29,870
histogram this is when packing is in

645
00:26:26,810 --> 00:26:33,110
play so the entropy is relatively it's

646
00:26:29,870 --> 00:26:39,199
relatively high so that means every bit

647
00:26:33,110 --> 00:26:41,030
is you know yeah that'd be like a string

648
00:26:39,200 --> 00:26:42,950
of like ABCD all the way through Z

649
00:26:41,030 --> 00:26:43,520
where's on the right hand side this

650
00:26:42,950 --> 00:26:48,260
histogram

651
00:26:43,520 --> 00:26:50,000
that's moral um yeah this is actually

652
00:26:48,260 --> 00:26:51,890
all of the letters in the English

653
00:26:50,000 --> 00:26:53,960
language and how often those letters

654
00:26:51,890 --> 00:26:56,330
show up in words so this is a more

655
00:26:53,960 --> 00:26:57,890
accurate entropy of that so as we see

656
00:26:56,330 --> 00:27:00,530
each job like twelve point four nine

657
00:26:57,890 --> 00:27:02,720
percent and then T shows of nine point

658
00:27:00,530 --> 00:27:05,810
two eight percent so in malware we can

659
00:27:02,720 --> 00:27:07,400
use entropy to be like okay well there's

660
00:27:05,810 --> 00:27:09,440
a high entropy why does every single

661
00:27:07,400 --> 00:27:13,880
thing look the exact same because it's

662
00:27:09,440 --> 00:27:15,560
been packed or encrypted that's why okay

663
00:27:13,880 --> 00:27:18,730
this is a great tool a free open-source

664
00:27:15,560 --> 00:27:20,720
tool it's called detected easy or die

665
00:27:18,730 --> 00:27:22,460
excellent functionality for detecting

666
00:27:20,720 --> 00:27:26,480
entropy and files on the left hand side

667
00:27:22,460 --> 00:27:28,760
we have our packed malware just a first

668
00:27:26,480 --> 00:27:32,090
glance the entropy by byte or bits and

669
00:27:28,760 --> 00:27:33,530
bytes is five point five six so what did

670
00:27:32,090 --> 00:27:35,120
we just say we have the scale that is

671
00:27:33,530 --> 00:27:37,610
zero through eight where eight is a very

672
00:27:35,120 --> 00:27:39,469
high entropy and seven is kind of a

673
00:27:37,610 --> 00:27:41,120
threshold if it's above seven or equal

674
00:27:39,470 --> 00:27:41,960
to seven it's probably been packed so if

675
00:27:41,120 --> 00:27:44,178
you look at just

676
00:27:41,960 --> 00:27:46,669
that you would think that maybe this man

677
00:27:44,179 --> 00:27:50,120
where is not packed when in fact if we

678
00:27:46,669 --> 00:27:53,390
go down to the sections here it says upx

679
00:27:50,120 --> 00:27:56,178
the entropy of that section is 7.8 so

680
00:27:53,390 --> 00:27:58,669
also we can see this bar graph is flat

681
00:27:56,179 --> 00:28:00,380
across here it's right at 7.8 that's

682
00:27:58,669 --> 00:28:02,230
also a telltale sign the packing is in

683
00:28:00,380 --> 00:28:05,600
play because that's a very high entropy

684
00:28:02,230 --> 00:28:08,480
so the one more then on the right hand

685
00:28:05,600 --> 00:28:10,939
side we have unpacked and we have a base

686
00:28:08,480 --> 00:28:12,679
entropy of 5.2 if you look over the

687
00:28:10,940 --> 00:28:15,169
sections on the right hand side there is

688
00:28:12,679 --> 00:28:16,909
no sections that are above 7 so that's a

689
00:28:15,169 --> 00:28:24,110
pretty good sign that this is not packed

690
00:28:16,909 --> 00:28:25,730
anymore okay so when signatures fail so

691
00:28:24,110 --> 00:28:27,408
your worst nightmare your malware

692
00:28:25,730 --> 00:28:29,960
analyst you drop a fresh mail we're

693
00:28:27,409 --> 00:28:31,520
sampling piece to do all the signs of

694
00:28:29,960 --> 00:28:33,529
packing are there you know high entropy

695
00:28:31,520 --> 00:28:35,750
lack of API is all the normal things

696
00:28:33,529 --> 00:28:37,370
that you would see in piece to do but

697
00:28:35,750 --> 00:28:39,850
there's no Packer signature left behind

698
00:28:37,370 --> 00:28:41,799
you neither Springs or sections now what

699
00:28:39,850 --> 00:28:44,719
like how do you know it's really packed

700
00:28:41,799 --> 00:28:49,190
how do you impecca if it's packed do you

701
00:28:44,720 --> 00:28:51,770
just quit so this is where cuckoo

702
00:28:49,190 --> 00:28:53,779
sandbox comes in so this is a sandbox

703
00:28:51,770 --> 00:28:56,149
for dynamic malware analysis this is

704
00:28:53,779 --> 00:28:57,470
free open source which is really cool

705
00:28:56,149 --> 00:28:58,729
because if there's some functionality

706
00:28:57,470 --> 00:29:00,649
that you need for looking at your

707
00:28:58,730 --> 00:29:04,399
malware and it doesn't have it you could

708
00:29:00,649 --> 00:29:06,439
add it actually so for looking at the

709
00:29:04,399 --> 00:29:09,529
process memory we can run the malware in

710
00:29:06,440 --> 00:29:11,630
the dynamic sandbox and then we pull the

711
00:29:09,529 --> 00:29:13,370
binaries out of memory post execution

712
00:29:11,630 --> 00:29:16,190
and cuckoo so for the malware to

713
00:29:13,370 --> 00:29:17,870
actually run it has to be unpacked so

714
00:29:16,190 --> 00:29:20,240
without actually unpacking it manually

715
00:29:17,870 --> 00:29:27,139
it's kind of a wave keying system right

716
00:29:20,240 --> 00:29:29,299
so yeah all right so you go to the

717
00:29:27,140 --> 00:29:31,940
Christmas tree you grab your present you

718
00:29:29,299 --> 00:29:33,740
shake it right you look at it you flip

719
00:29:31,940 --> 00:29:36,590
it upside down maybe you look at the tag

720
00:29:33,740 --> 00:29:40,850
see who it's from that static analysis

721
00:29:36,590 --> 00:29:43,279
it's superficial but very beneficial in

722
00:29:40,850 --> 00:29:44,750
a relatively short amount of time it can

723
00:29:43,279 --> 00:29:47,299
provide you insight into program

724
00:29:44,750 --> 00:29:48,679
functionality and provide a guide for

725
00:29:47,299 --> 00:29:50,179
what to do when

726
00:29:48,679 --> 00:29:52,090
do the dynamic analysis when you

727
00:29:50,179 --> 00:29:54,259
actually explode or detonate the malware

728
00:29:52,090 --> 00:29:56,509
could also possibly allow you to

729
00:29:54,259 --> 00:30:00,499
generate signatures that can use to be

730
00:29:56,509 --> 00:30:02,749
to detect and prevent here's where you

731
00:30:00,499 --> 00:30:04,909
determine for example if a program is

732
00:30:02,749 --> 00:30:06,619
actually malicious you don't want to

733
00:30:04,909 --> 00:30:09,950
spend an hour looking at a rename the

734
00:30:06,619 --> 00:30:12,080
copy of notepad of course the malware

735
00:30:09,950 --> 00:30:14,149
authors or the present wrappers to stick

736
00:30:12,080 --> 00:30:15,408
with the holiday analogy they know we're

737
00:30:14,149 --> 00:30:18,139
doing this and they'll do whatever they

738
00:30:15,409 --> 00:30:20,840
can to make it harder there are many

739
00:30:18,139 --> 00:30:22,998
tools for static analysis a few of which

740
00:30:20,840 --> 00:30:25,249
we'll talk about you are quite literally

741
00:30:22,999 --> 00:30:27,559
battling the bad guys and the tools are

742
00:30:25,249 --> 00:30:30,460
your weapons so when one fails you pick

743
00:30:27,559 --> 00:30:33,649
up another one and you keep battling

744
00:30:30,460 --> 00:30:36,230
right off the bat as simple as it gets

745
00:30:33,649 --> 00:30:38,779
hashes are mathematical functions that

746
00:30:36,230 --> 00:30:40,789
give you you give an input to and they

747
00:30:38,779 --> 00:30:42,440
produce a static output if you give it

748
00:30:40,789 --> 00:30:44,389
the same input every time it produces

749
00:30:42,440 --> 00:30:46,669
the same output they are critical to

750
00:30:44,389 --> 00:30:48,860
malware triage and in general too much

751
00:30:46,669 --> 00:30:51,019
of our digital world because they're

752
00:30:48,860 --> 00:30:52,519
really step number one and so important

753
00:30:51,019 --> 00:30:54,710
to the overall process you will find

754
00:30:52,519 --> 00:30:56,090
that many of your tools will include

755
00:30:54,710 --> 00:30:58,909
hashing as part of the tools

756
00:30:56,090 --> 00:31:01,549
capabilities there are several types of

757
00:30:58,909 --> 00:31:04,309
hashes all of which are useful and some

758
00:31:01,549 --> 00:31:07,549
tools like compute - example here we'll

759
00:31:04,309 --> 00:31:09,799
give them all to you very simply there

760
00:31:07,549 --> 00:31:11,720
are tons of tools online - but be

761
00:31:09,799 --> 00:31:13,158
careful about uploading sensitive data

762
00:31:11,720 --> 00:31:15,259
to the internet you don't want to upload

763
00:31:13,159 --> 00:31:18,049
the HR folder just to see what the hash

764
00:31:15,259 --> 00:31:20,929
is it is a common best practice to

765
00:31:18,049 --> 00:31:22,908
rename the malware as its hash this

766
00:31:20,929 --> 00:31:24,769
serves two purposes it's not your unique

767
00:31:22,909 --> 00:31:26,299
identifier and you've removed the

768
00:31:24,769 --> 00:31:27,889
extensions so you don't accidentally

769
00:31:26,299 --> 00:31:31,940
double-click it for instance when you

770
00:31:27,889 --> 00:31:34,279
don't mean to all right so you think

771
00:31:31,940 --> 00:31:34,879
you've got malware maybe it's a Word

772
00:31:34,279 --> 00:31:38,600
document

773
00:31:34,879 --> 00:31:40,969
but is it really trig the graphical

774
00:31:38,600 --> 00:31:43,939
tools shown here has over 12,000 file

775
00:31:40,970 --> 00:31:46,220
types in ass database it analyzes

776
00:31:43,940 --> 00:31:49,869
components of the file to give you its

777
00:31:46,220 --> 00:31:52,519
best guess including identifying packers

778
00:31:49,869 --> 00:31:54,110
it's a great tool that hasn't failed me

779
00:31:52,519 --> 00:31:56,090
very often if it doesn't immediately

780
00:31:54,110 --> 00:31:57,949
give you the right answer it's going to

781
00:31:56,090 --> 00:31:59,080
give you some good insight into what it

782
00:31:57,950 --> 00:32:01,750
probably is

783
00:31:59,080 --> 00:32:03,669
file is a command-line tool native to

784
00:32:01,750 --> 00:32:06,010
Linux and has a Windows binary as well

785
00:32:03,670 --> 00:32:08,290
it provides a single straightforward

786
00:32:06,010 --> 00:32:10,000
output all right so you've got a hash

787
00:32:08,290 --> 00:32:13,379
and you know what type of file we're

788
00:32:10,000 --> 00:32:16,270
dealing with so let's dig in a little a

789
00:32:13,380 --> 00:32:18,190
string is just some text right programs

790
00:32:16,270 --> 00:32:20,590
are written in languages languages use

791
00:32:18,190 --> 00:32:23,860
text they present themselves in two ways

792
00:32:20,590 --> 00:32:25,780
either an ASCII or in Unicode some tools

793
00:32:23,860 --> 00:32:27,850
will only look for ascii others will

794
00:32:25,780 --> 00:32:29,920
only look for unicode some will do both

795
00:32:27,850 --> 00:32:32,260
and you need to be aware of that because

796
00:32:29,920 --> 00:32:33,850
you are looking for both there's also a

797
00:32:32,260 --> 00:32:35,680
minimum string length that these tools

798
00:32:33,850 --> 00:32:37,270
will look for it's just important to

799
00:32:35,680 --> 00:32:38,940
know how your tools are set up and

800
00:32:37,270 --> 00:32:41,410
configured before you use them in

801
00:32:38,940 --> 00:32:44,110
general the longer string length you

802
00:32:41,410 --> 00:32:45,640
look for the less garbage string as

803
00:32:44,110 --> 00:32:47,379
you'll see but you could also miss some

804
00:32:45,640 --> 00:32:49,690
important things like get input and

805
00:32:47,380 --> 00:32:51,790
certain you know two or three word

806
00:32:49,690 --> 00:32:55,570
commands that could be important for

807
00:32:51,790 --> 00:32:58,090
your triage all right

808
00:32:55,570 --> 00:33:00,490
tools tools the job strings is two

809
00:32:58,090 --> 00:33:02,260
strings as file is the file it's a dead

810
00:33:00,490 --> 00:33:04,210
simple command-line utility that

811
00:33:02,260 --> 00:33:06,070
searches through the file from beginning

812
00:33:04,210 --> 00:33:08,220
to end and prints out everything it

813
00:33:06,070 --> 00:33:10,540
binds that's three characters are longer

814
00:33:08,220 --> 00:33:12,850
running strings against a large binary

815
00:33:10,540 --> 00:33:16,149
can reproduce ten thousand or more

816
00:33:12,850 --> 00:33:19,120
results and produces tons of noise mix

817
00:33:16,150 --> 00:33:21,280
in with important information bin text

818
00:33:19,120 --> 00:33:22,600
is the graphical equivalent both of

819
00:33:21,280 --> 00:33:25,120
these tools will look for ASCII and

820
00:33:22,600 --> 00:33:28,899
Unicode strings of course they have no

821
00:33:25,120 --> 00:33:32,350
idea what a valid string is as compared

822
00:33:28,900 --> 00:33:34,270
to raw data the utility will often print

823
00:33:32,350 --> 00:33:37,860
out a lot of meaningless strings again

824
00:33:34,270 --> 00:33:40,600
it has no idea what the difference is

825
00:33:37,860 --> 00:33:44,199
here in PE view we see the same sort of

826
00:33:40,600 --> 00:33:45,669
information I can't use my a my I do

827
00:33:44,200 --> 00:33:48,610
have a later pointer that I intended to

828
00:33:45,670 --> 00:33:50,230
use but that's okay so PE view here will

829
00:33:48,610 --> 00:33:51,939
give you the raw data the hex right so a

830
00:33:50,230 --> 00:33:55,270
byte is gonna give you your ASCII

831
00:33:51,940 --> 00:33:57,460
character every Windows XP Alexa cutable

832
00:33:55,270 --> 00:33:59,500
have the string this program cannot be

833
00:33:57,460 --> 00:34:03,940
run in DOS mode for example in the first

834
00:33:59,500 --> 00:34:05,470
couple of bites obviously this seems

835
00:34:03,940 --> 00:34:06,580
like well this is kind of hard right are

836
00:34:05,470 --> 00:34:08,949
we gonna really scroll through all this

837
00:34:06,580 --> 00:34:10,330
stuff manually look at every string if

838
00:34:08,949 --> 00:34:12,040
there's 10,000 of them and try

839
00:34:10,330 --> 00:34:14,199
figure out what this program is doing

840
00:34:12,040 --> 00:34:16,449
the whole idea for strings analysis is

841
00:34:14,199 --> 00:34:19,000
to find different functions maybe find

842
00:34:16,449 --> 00:34:22,330
some URLs if I know what the function

843
00:34:19,000 --> 00:34:24,489
what this program is actually doing so

844
00:34:22,330 --> 00:34:27,790
about a month and a half ago at Derby

845
00:34:24,489 --> 00:34:29,169
con the fireEye team released a machine

846
00:34:27,790 --> 00:34:30,820
learning tool called string sifter

847
00:34:29,170 --> 00:34:32,620
that's pretty interesting it

848
00:34:30,820 --> 00:34:34,540
automatically sorts strings based on

849
00:34:32,620 --> 00:34:37,540
their relevance for Malheur analysis

850
00:34:34,540 --> 00:34:39,250
super helpful this is a new hot tool and

851
00:34:37,540 --> 00:34:42,670
if you're into this kind of thing I

852
00:34:39,250 --> 00:34:45,969
highly recommend you check it out here's

853
00:34:42,670 --> 00:34:48,460
an example of left you see an unpacked

854
00:34:45,969 --> 00:34:50,259
program you can see some file names you

855
00:34:48,460 --> 00:34:51,370
can see registry keys you can see other

856
00:34:50,260 --> 00:34:53,050
things that are going on there that are

857
00:34:51,370 --> 00:34:55,719
gonna give you an idea of what this

858
00:34:53,050 --> 00:34:57,400
program is trying to accomplish on the

859
00:34:55,719 --> 00:34:59,649
right you see the potema exact program

860
00:34:57,400 --> 00:35:02,890
that's packed and you're getting nothing

861
00:34:59,650 --> 00:35:04,510
from it malware authors often hot pack

862
00:35:02,890 --> 00:35:07,140
the program to hide the real strings

863
00:35:04,510 --> 00:35:09,070
among other things as great talked about

864
00:35:07,140 --> 00:35:11,020
unfortunately they'll also pack the

865
00:35:09,070 --> 00:35:13,660
program and then add legitimate strings

866
00:35:11,020 --> 00:35:15,220
on top of that so again it comes back to

867
00:35:13,660 --> 00:35:17,410
that cat-and-mouse game you can only

868
00:35:15,220 --> 00:35:18,970
trust your tools so far and you

869
00:35:17,410 --> 00:35:21,339
shouldn't base any of your conclusions

870
00:35:18,970 --> 00:35:25,060
solely on strings analysis or even

871
00:35:21,340 --> 00:35:27,820
static analysis in general what are some

872
00:35:25,060 --> 00:35:31,660
of the other ways that malware authors

873
00:35:27,820 --> 00:35:34,480
are trying to hide strings packing

874
00:35:31,660 --> 00:35:37,089
obfuscation packs programs are a subset

875
00:35:34,480 --> 00:35:38,290
of the obfuscated ones even packed

876
00:35:37,090 --> 00:35:40,920
programs that will contain functions

877
00:35:38,290 --> 00:35:43,210
like get proc addressing load library

878
00:35:40,920 --> 00:35:44,800
fortunately either out of laziness or

879
00:35:43,210 --> 00:35:47,080
ignant ignorance the malware authors

880
00:35:44,800 --> 00:35:50,680
will often use one of two simple

881
00:35:47,080 --> 00:35:54,130
techniques base64 encoding or a simple

882
00:35:50,680 --> 00:35:55,529
encryption scheme such as XOR and I'll

883
00:35:54,130 --> 00:35:59,350
talk about what those look like

884
00:35:55,530 --> 00:36:01,750
so base64 is just your English alphabet

885
00:35:59,350 --> 00:36:04,540
upper and lower case and a few special

886
00:36:01,750 --> 00:36:06,010
characters if you see this in your mouth

887
00:36:04,540 --> 00:36:08,590
where when you're doing strings analysis

888
00:36:06,010 --> 00:36:10,870
if you see the base64 alphabet it's a

889
00:36:08,590 --> 00:36:13,780
good sign that that malware is using

890
00:36:10,870 --> 00:36:17,200
base64 encryption somewhere encoding

891
00:36:13,780 --> 00:36:18,430
somewhere in the program that string

892
00:36:17,200 --> 00:36:19,558
there is an example of what that looks

893
00:36:18,430 --> 00:36:21,569
like if you ever

894
00:36:19,559 --> 00:36:23,729
equals equals or equals that's a

895
00:36:21,569 --> 00:36:26,249
automatic dead giveaway a 64 is being

896
00:36:23,729 --> 00:36:30,328
used somewhere fortunately they're easy

897
00:36:26,249 --> 00:36:32,279
to find and they're easy to decode there

898
00:36:30,329 --> 00:36:34,890
are many tools that do the decoding and

899
00:36:32,279 --> 00:36:36,569
the searching if you're using a Windows

900
00:36:34,890 --> 00:36:38,699
VM which is most likely if you're doing

901
00:36:36,569 --> 00:36:39,839
this type of analysis you can do this

902
00:36:38,699 --> 00:36:41,459
natively you don't need to download

903
00:36:39,839 --> 00:36:44,400
anything you just need to enter a

904
00:36:41,459 --> 00:36:46,558
command into the command line set up a

905
00:36:44,400 --> 00:36:49,759
command that will do this for you dead

906
00:36:46,559 --> 00:36:53,459
simple super helpful

907
00:36:49,759 --> 00:36:55,140
next thing xor encryption it's a

908
00:36:53,459 --> 00:36:58,529
mathematical bitwise operation that

909
00:36:55,140 --> 00:37:00,808
returns 1 if the bits are different and

910
00:36:58,529 --> 00:37:03,239
a 0 if the bits are the same all right

911
00:37:00,809 --> 00:37:05,759
if you take some data a and XOR it with

912
00:37:03,239 --> 00:37:07,199
the key you give ciphertext C if you

913
00:37:05,759 --> 00:37:10,410
take 2 ciphertext and XOR it with the

914
00:37:07,199 --> 00:37:11,969
key we get the original data you don't

915
00:37:10,410 --> 00:37:13,680
need to commit this to memory but it's

916
00:37:11,969 --> 00:37:16,549
important that the principle of how this

917
00:37:13,680 --> 00:37:18,779
works because it can be undone

918
00:37:16,549 --> 00:37:22,559
fortunately there are tools that help us

919
00:37:18,779 --> 00:37:24,150
do this DJ Stephens comm he a is a

920
00:37:22,559 --> 00:37:26,729
malware analyst that produces a lot of

921
00:37:24,150 --> 00:37:28,609
very highly effective tools that take

922
00:37:26,729 --> 00:37:30,629
some of the legwork out of this for us

923
00:37:28,609 --> 00:37:33,150
because of the principle of how the

924
00:37:30,630 --> 00:37:35,759
encryption works if you know a bit of

925
00:37:33,150 --> 00:37:39,809
plaintext you can rather simply decrypt

926
00:37:35,759 --> 00:37:41,459
it a guitar strings is a string like a

927
00:37:39,809 --> 00:37:43,890
strings utility but it uses some

928
00:37:41,459 --> 00:37:46,828
trickiness to look for what it thinks is

929
00:37:43,890 --> 00:37:50,160
XOR encrypted strings XOR search will

930
00:37:46,829 --> 00:37:51,900
brute force all XOR keys and other

931
00:37:50,160 --> 00:37:55,558
common weak encryptions that are often

932
00:37:51,900 --> 00:37:57,089
used in malware as well so you enter the

933
00:37:55,559 --> 00:38:00,059
text that you think is going to appear

934
00:37:57,089 --> 00:38:02,189
in that file as I mentioned this program

935
00:38:00,059 --> 00:38:04,019
only will only run a Doss mode is in

936
00:38:02,189 --> 00:38:07,259
every Windows executable that's a good

937
00:38:04,019 --> 00:38:09,238
one to search for HTTP as in URLs is

938
00:38:07,259 --> 00:38:10,679
another great one to search for as well

939
00:38:09,239 --> 00:38:15,269
as kernel and create as those are the

940
00:38:10,679 --> 00:38:17,489
most common functions called moving on

941
00:38:15,269 --> 00:38:19,890
the portable executable executable

942
00:38:17,489 --> 00:38:22,140
header it's like the two from tag and

943
00:38:19,890 --> 00:38:25,379
the present right it's gonna give you

944
00:38:22,140 --> 00:38:29,969
some basic information about what this

945
00:38:25,380 --> 00:38:31,380
program does what it contains talk about

946
00:38:29,969 --> 00:38:33,329
these sections these are the most common

947
00:38:31,380 --> 00:38:36,229
sections that you

948
00:38:33,329 --> 00:38:38,309
in the PE header sections contain

949
00:38:36,229 --> 00:38:41,848
characteristics including permissions

950
00:38:38,309 --> 00:38:44,849
such as read write and execute if we see

951
00:38:41,849 --> 00:38:47,219
random missing or unknown section names

952
00:38:44,849 --> 00:38:49,890
that's an indicator that we're dealing

953
00:38:47,219 --> 00:38:52,680
with packed malware if we see odd

954
00:38:49,890 --> 00:38:56,249
permissions say a section with write and

955
00:38:52,680 --> 00:38:58,589
execute this can be placed into unpacked

956
00:38:56,249 --> 00:39:07,649
code or place unpacked code into memory

957
00:38:58,589 --> 00:39:09,869
after the malware is run so let's talk

958
00:39:07,650 --> 00:39:11,729
about those imports and functions that

959
00:39:09,869 --> 00:39:14,339
I've been mentioning dynamic link

960
00:39:11,729 --> 00:39:15,839
library as a program interacts with an

961
00:39:14,339 --> 00:39:17,400
operating system it's not going to bring

962
00:39:15,839 --> 00:39:19,589
with it all of the code and all of the

963
00:39:17,400 --> 00:39:20,789
libraries that it needs to run and

964
00:39:19,589 --> 00:39:22,319
that's a good thing otherwise every

965
00:39:20,789 --> 00:39:23,700
program would be huge that you really

966
00:39:22,319 --> 00:39:26,130
slow and we'd have a miserable time

967
00:39:23,700 --> 00:39:28,169
using computers instead the use

968
00:39:26,130 --> 00:39:31,229
functions inside of dynamic link

969
00:39:28,170 --> 00:39:33,839
libraries DLL is a library of code and

970
00:39:31,229 --> 00:39:36,930
an API call or a function is an

971
00:39:33,839 --> 00:39:39,089
interface to that library of code the

972
00:39:36,930 --> 00:39:41,459
import address table is just a list of

973
00:39:39,089 --> 00:39:44,299
dynamic link libraries and functions

974
00:39:41,459 --> 00:39:47,160
from that DLL that the program uses

975
00:39:44,299 --> 00:39:49,288
api's don't have to specify specify by

976
00:39:47,160 --> 00:39:51,959
name in the import address table they

977
00:39:49,289 --> 00:39:54,390
can use ordinals which is a numeric

978
00:39:51,959 --> 00:39:56,430
offset to the function within the DLL it

979
00:39:54,390 --> 00:39:59,219
sounds a little complicated and that's

980
00:39:56,430 --> 00:40:00,509
why malware authors will often instead

981
00:39:59,219 --> 00:40:03,359
of including the name they'll only use

982
00:40:00,509 --> 00:40:09,029
ordinals fortunately our tools can suss

983
00:40:03,359 --> 00:40:11,670
that out for us or you can google it PE

984
00:40:09,029 --> 00:40:14,309
studio it's kind of like the header

985
00:40:11,670 --> 00:40:16,619
analysis Swiss Army knife Gregg mention

986
00:40:14,309 --> 00:40:18,559
it earlier you don't get everything but

987
00:40:16,619 --> 00:40:21,630
you get a lot including strings

988
00:40:18,559 --> 00:40:24,449
indicators are compromised virus engine

989
00:40:21,630 --> 00:40:25,199
alerts additionally you see the import

990
00:40:24,449 --> 00:40:26,849
address table

991
00:40:25,199 --> 00:40:30,420
how many functions are being imported

992
00:40:26,849 --> 00:40:32,190
for each DLL and the input address table

993
00:40:30,420 --> 00:40:34,349
size is a great indicator of whether or

994
00:40:32,190 --> 00:40:35,969
not the malware is packed as Greg talked

995
00:40:34,349 --> 00:40:38,479
about earlier if you see very few

996
00:40:35,969 --> 00:40:44,579
functions and very few deal ahlian ports

997
00:40:38,479 --> 00:40:46,828
that malware is definitely packed here's

998
00:40:44,579 --> 00:40:47,280
some common api's there are thousands of

999
00:40:46,829 --> 00:40:50,810
API

1000
00:40:47,280 --> 00:40:50,810
on the link there will take you

1001
00:41:07,780 --> 00:41:13,859
MSDN network which will give you the

1002
00:41:11,109 --> 00:41:16,390
full and complete list of all functions

1003
00:41:13,859 --> 00:41:18,270
right file for instance means that

1004
00:41:16,390 --> 00:41:21,790
malware will write to the file system

1005
00:41:18,270 --> 00:41:23,470
create doesn't necessarily mean that

1006
00:41:21,790 --> 00:41:25,750
it's going to create something new but

1007
00:41:23,470 --> 00:41:29,950
it can also be used to open existing

1008
00:41:25,750 --> 00:41:31,480
files read set value read set key both

1009
00:41:29,950 --> 00:41:33,040
write to the registry this is where I

1010
00:41:31,480 --> 00:41:35,800
would be pointing out stuff but I'm too

1011
00:41:33,040 --> 00:41:37,750
far away any function with the e X on

1012
00:41:35,800 --> 00:41:40,050
the end as there's one in this example

1013
00:41:37,750 --> 00:41:42,340
that's an extended function so they just

1014
00:41:40,050 --> 00:41:45,310
Microsoft has released a newer version

1015
00:41:42,340 --> 00:41:47,290
of that if you see any of these network

1016
00:41:45,310 --> 00:41:48,849
things that's an indicator that your

1017
00:41:47,290 --> 00:41:52,930
your malware is communicating over the

1018
00:41:48,849 --> 00:41:56,800
network listen for instance opens up a

1019
00:41:52,930 --> 00:41:58,660
port often indicative of a backdoor many

1020
00:41:56,800 --> 00:42:02,099
functions do the same thing or nearly

1021
00:41:58,660 --> 00:42:04,118
the same thing be aware of fake imports

1022
00:42:02,099 --> 00:42:05,500
similar to the strings where they'll

1023
00:42:04,119 --> 00:42:06,940
pack the malware and then add in

1024
00:42:05,500 --> 00:42:09,369
legitimate looking strings after the

1025
00:42:06,940 --> 00:42:12,310
fact many malware authors will include

1026
00:42:09,369 --> 00:42:14,440
loads of DLLs imports and functions that

1027
00:42:12,310 --> 00:42:16,000
do nothing other than confuse you

1028
00:42:14,440 --> 00:42:18,670
confound you and make you take a lot of

1029
00:42:16,000 --> 00:42:20,349
time chasing down rabbit holes again

1030
00:42:18,670 --> 00:42:22,690
this is why we do static analysis

1031
00:42:20,349 --> 00:42:25,150
because we want to use the least amount

1032
00:42:22,690 --> 00:42:26,650
of the analyst time as possible to

1033
00:42:25,150 --> 00:42:31,390
figure out whether a file is malicious

1034
00:42:26,650 --> 00:42:33,460
and/or what are its capabilities some

1035
00:42:31,390 --> 00:42:36,430
more examples here load library and get

1036
00:42:33,460 --> 00:42:38,440
proc address' they allow new dynamic

1037
00:42:36,430 --> 00:42:40,419
link libraries and functions to be added

1038
00:42:38,440 --> 00:42:42,660
while a program is running and not

1039
00:42:40,420 --> 00:42:44,680
specified in the import address table

1040
00:42:42,660 --> 00:42:46,480
that gives you an indication that you

1041
00:42:44,680 --> 00:42:49,270
need to look for new stuff when you do

1042
00:42:46,480 --> 00:42:51,580
your dynamic analysis is debugger

1043
00:42:49,270 --> 00:42:53,619
present checking for a debugger is a

1044
00:42:51,580 --> 00:42:55,480
good indicator that this malware is

1045
00:42:53,619 --> 00:42:59,320
trying to employ anti analysis

1046
00:42:55,480 --> 00:43:03,160
techniques right process memory inject

1047
00:42:59,320 --> 00:43:05,680
into an already running process there is

1048
00:43:03,160 --> 00:43:07,060
a noted caveat here dotnet programs have

1049
00:43:05,680 --> 00:43:10,899
their own version of the import address

1050
00:43:07,060 --> 00:43:12,700
table so MS query DLL and underscore

1051
00:43:10,900 --> 00:43:14,800
core XE main are the only two things

1052
00:43:12,700 --> 00:43:16,419
you'll say you'll see I said

1053
00:43:14,800 --> 00:43:22,000
mention that because dot now malware is

1054
00:43:16,420 --> 00:43:24,070
pretty prolific so that's it right to

1055
00:43:22,000 --> 00:43:26,470
wrap up we're looking for strings right

1056
00:43:24,070 --> 00:43:29,010
off the bat to see what this malware is

1057
00:43:26,470 --> 00:43:31,060
doing what are its capabilities

1058
00:43:29,010 --> 00:43:33,100
these are simple kind of things whether

1059
00:43:31,060 --> 00:43:35,170
we know it's packed or not if it is

1060
00:43:33,100 --> 00:43:37,240
packed and we can identify what packer

1061
00:43:35,170 --> 00:43:40,300
packed it we unpack it and then we do

1062
00:43:37,240 --> 00:43:41,830
our ecstatic analysis and I'll hand it

1063
00:43:40,300 --> 00:43:46,120
back to Greg to talk further about

1064
00:43:41,830 --> 00:43:47,890
dynamic analysis so dynamic analysis

1065
00:43:46,120 --> 00:43:49,690
fundamentals we were now in execution

1066
00:43:47,890 --> 00:43:51,819
mode we're no longer jiggling the

1067
00:43:49,690 --> 00:43:53,920
Christmas present as James like to use

1068
00:43:51,820 --> 00:43:55,960
that analogy this is the real deal no

1069
00:43:53,920 --> 00:43:58,060
more guessing so we want to focus the

1070
00:43:55,960 --> 00:43:59,680
dynamic analysis where we be looking at

1071
00:43:58,060 --> 00:44:02,140
any kind of file system registry

1072
00:43:59,680 --> 00:44:05,740
modifications network traffic generation

1073
00:44:02,140 --> 00:44:07,210
we'd be running Auto runs to see if you

1074
00:44:05,740 --> 00:44:09,580
know it's a B Auto starting on reboot

1075
00:44:07,210 --> 00:44:12,190
and you have new killed processes and

1076
00:44:09,580 --> 00:44:13,810
the two tools that we using during the

1077
00:44:12,190 --> 00:44:16,000
bulk of our dynamic analysis is Auto

1078
00:44:13,810 --> 00:44:17,620
runs and process monitor which are both

1079
00:44:16,000 --> 00:44:29,620
out of the Microsoft sis internals

1080
00:44:17,620 --> 00:44:31,420
toolkit yesterday so basic dynamic

1081
00:44:29,620 --> 00:44:32,980
analysis something has to change right

1082
00:44:31,420 --> 00:44:35,470
have you guys ever clicked on malware

1083
00:44:32,980 --> 00:44:37,210
and does nothing probably not right it

1084
00:44:35,470 --> 00:44:40,379
has to establish persistence somehow it

1085
00:44:37,210 --> 00:44:45,190
has to modify the file system it has to

1086
00:44:40,380 --> 00:44:46,630
modify registry keys so as we can see

1087
00:44:45,190 --> 00:44:49,990
here these are some the registry keys

1088
00:44:46,630 --> 00:44:51,370
that are commonly modified like my

1089
00:44:49,990 --> 00:44:54,009
software microsoft windows

1090
00:44:51,370 --> 00:44:56,740
currentversion run run once run services

1091
00:44:54,010 --> 00:44:58,660
and run services once if you ever see

1092
00:44:56,740 --> 00:45:01,770
those are being modified as a telltale

1093
00:44:58,660 --> 00:45:05,049
sign that there's some badness going on

1094
00:45:01,770 --> 00:45:08,259
there's the malware also has to be

1095
00:45:05,050 --> 00:45:09,700
persistent across reboot is will create

1096
00:45:08,260 --> 00:45:11,770
rogue processes and it will generally

1097
00:45:09,700 --> 00:45:22,830
generate network traffic as we will see

1098
00:45:11,770 --> 00:45:22,830
in a couple slides I can take that back

1099
00:45:25,410 --> 00:45:32,770
there we go okay autoruns for persistent

1100
00:45:29,260 --> 00:45:34,960
detection so that is a my voice mark

1101
00:45:32,770 --> 00:45:37,000
russinovich down there really cool dude

1102
00:45:34,960 --> 00:45:39,610
now leads they as your team over

1103
00:45:37,000 --> 00:45:42,250
Microsoft so what does this program do

1104
00:45:39,610 --> 00:45:43,510
Auto runs it it looks for programs and

1105
00:45:42,250 --> 00:45:46,060
processes that are going to start a

1106
00:45:43,510 --> 00:45:47,590
manifold II reboot a really cool feature

1107
00:45:46,060 --> 00:45:49,960
is that you can hide the signed

1108
00:45:47,590 --> 00:45:51,760
Microsoft entries and what this is going

1109
00:45:49,960 --> 00:45:54,610
to do is any kind of third-party

1110
00:45:51,760 --> 00:45:57,910
software that has modified the registry

1111
00:45:54,610 --> 00:45:59,140
to start automatically across reboot

1112
00:45:57,910 --> 00:46:01,359
those are going to bubble up to the

1113
00:45:59,140 --> 00:46:02,680
surface so any kind of badness is gonna

1114
00:46:01,360 --> 00:46:04,390
come up right for the surface you're not

1115
00:46:02,680 --> 00:46:07,149
gonna see it all the valid Microsoft

1116
00:46:04,390 --> 00:46:09,040
entries in there so the compare feature

1117
00:46:07,150 --> 00:46:10,390
and the color codes are worth their

1118
00:46:09,040 --> 00:46:13,090
weight in gold

1119
00:46:10,390 --> 00:46:15,190
I really like your colors so the

1120
00:46:13,090 --> 00:46:18,610
computer feature is what you're gonna do

1121
00:46:15,190 --> 00:46:21,340
you're going to basically take a

1122
00:46:18,610 --> 00:46:22,930
snapshot within autoruns there to blow

1123
00:46:21,340 --> 00:46:24,820
up your malware they take a second

1124
00:46:22,930 --> 00:46:27,310
snapshot it's good based gonna tell you

1125
00:46:24,820 --> 00:46:30,540
what was added and it's gonna be right

1126
00:46:27,310 --> 00:46:30,540
there it'll be very easy to see

1127
00:46:30,570 --> 00:46:35,290
so proc Mon for behavioral monitoring

1128
00:46:33,250 --> 00:46:37,720
these are all the activities going on in

1129
00:46:35,290 --> 00:46:39,790
the file system registry network

1130
00:46:37,720 --> 00:46:42,430
processes boot time logging and proc

1131
00:46:39,790 --> 00:46:44,500
trees so James did already cover on

1132
00:46:42,430 --> 00:46:46,029
these API is the underlined ones are

1133
00:46:44,500 --> 00:46:47,620
really the dangerous ones that you want

1134
00:46:46,030 --> 00:46:50,800
to look look out for during your dynamic

1135
00:46:47,620 --> 00:46:52,870
analysis so these file operations these

1136
00:46:50,800 --> 00:46:55,360
API is write file which is going to be

1137
00:46:52,870 --> 00:46:57,490
writing a file to the file system said

1138
00:46:55,360 --> 00:46:59,500
this position information file which is

1139
00:46:57,490 --> 00:47:02,589
a really long way of staying delete file

1140
00:46:59,500 --> 00:47:05,770
I'm not sure why Microsoft did that its

1141
00:47:02,590 --> 00:47:07,180
Microsoft but registry operations some

1142
00:47:05,770 --> 00:47:09,040
dangerous API is that you can look for

1143
00:47:07,180 --> 00:47:11,140
registered value that he covered

1144
00:47:09,040 --> 00:47:22,720
register leaky and originally value and

1145
00:47:11,140 --> 00:47:24,970
then process operations proc create frog

1146
00:47:22,720 --> 00:47:27,339
mine continued okay so the filtering

1147
00:47:24,970 --> 00:47:30,160
feature is really cool and proc Mon so

1148
00:47:27,340 --> 00:47:32,800
we're gonna be ill record processes free

1149
00:47:30,160 --> 00:47:34,100
creation killing across reboot it is

1150
00:47:32,800 --> 00:47:35,600
kind of like a like

1151
00:47:34,100 --> 00:47:40,640
a Lamborghini going 200 miles an hour

1152
00:47:35,600 --> 00:47:41,960
and you open the hood and there's a bit

1153
00:47:40,640 --> 00:47:43,700
lot going on in there so you really have

1154
00:47:41,960 --> 00:47:46,250
to use your filtering so those dangerous

1155
00:47:43,700 --> 00:47:48,589
api's that was talking about like reg

1156
00:47:46,250 --> 00:47:50,600
said value set disposition information

1157
00:47:48,590 --> 00:47:53,120
file you can filter for all that stuff

1158
00:47:50,600 --> 00:47:55,190
right here so we're gonna filter on the

1159
00:47:53,120 --> 00:47:58,490
operation we would drop her malware in

1160
00:47:55,190 --> 00:48:01,520
there and then you'd be specifically

1161
00:47:58,490 --> 00:48:05,240
looking for those api's so as opposed to

1162
00:48:01,520 --> 00:48:08,350
you know 200,000 or 300,000 events now

1163
00:48:05,240 --> 00:48:14,270
you have 40 events and proc mine is very

1164
00:48:08,350 --> 00:48:16,640
very usable rich shot is another really

1165
00:48:14,270 --> 00:48:19,220
cool tool a lot of these tools have a

1166
00:48:16,640 --> 00:48:22,279
lot of the same functionality it's kind

1167
00:48:19,220 --> 00:48:23,660
of just receivers choice so what rich

1168
00:48:22,280 --> 00:48:25,400
shot is going to do is look at file

1169
00:48:23,660 --> 00:48:28,879
system and registry modifications also

1170
00:48:25,400 --> 00:48:30,920
you're gonna take a snapshot of your

1171
00:48:28,880 --> 00:48:33,320
clean system your dedenne detonate your

1172
00:48:30,920 --> 00:48:35,600
malware your take a second snapshot and

1173
00:48:33,320 --> 00:48:37,160
then you can compare the two I don't

1174
00:48:35,600 --> 00:48:39,680
like the defaults and rich shot because

1175
00:48:37,160 --> 00:48:42,109
it does not scan the directories by

1176
00:48:39,680 --> 00:48:45,020
default you have to manually check

1177
00:48:42,110 --> 00:48:47,660
skander's and it by default it'll

1178
00:48:45,020 --> 00:48:49,850
scanned the root drive and then the

1179
00:48:47,660 --> 00:48:52,850
windows folder you want to scan just the

1180
00:48:49,850 --> 00:48:54,290
root drive so it hits everything so

1181
00:48:52,850 --> 00:48:57,710
we're example here on the left hand side

1182
00:48:54,290 --> 00:49:00,350
this is a some output that it'll do was

1183
00:48:57,710 --> 00:49:02,420
just a plain txt file I was using flare

1184
00:49:00,350 --> 00:49:04,819
VM for blowing this malware up and it

1185
00:49:02,420 --> 00:49:07,100
looks like four was added one two six

1186
00:49:04,820 --> 00:49:08,720
four eight four three zero and we'll

1187
00:49:07,100 --> 00:49:11,870
probably see that number again later

1188
00:49:08,720 --> 00:49:18,799
then it was deleted real quickly Budget

1189
00:49:11,870 --> 00:49:23,480
Report you see was deleted so oh yeah I

1190
00:49:18,800 --> 00:49:26,120
think you're just too far away okay so

1191
00:49:23,480 --> 00:49:28,070
faking that is really cool stuff as

1192
00:49:26,120 --> 00:49:29,810
James mentioned before you'll be doing

1193
00:49:28,070 --> 00:49:31,790
your malware analysis in host only mode

1194
00:49:29,810 --> 00:49:35,080
so you're going to have your new access

1195
00:49:31,790 --> 00:49:35,080
you can only communicate with the host

1196
00:49:36,730 --> 00:49:41,270
so fake that for the win you're gonna

1197
00:49:39,500 --> 00:49:43,640
basically get a run faking that with

1198
00:49:41,270 --> 00:49:45,170
admin prigs in your sandbox for malware

1199
00:49:43,640 --> 00:49:46,230
analysis and it's going to stimulate

1200
00:49:45,170 --> 00:49:48,090
like you have a live

1201
00:49:46,230 --> 00:49:54,900
a connection it's going to stand up an

1202
00:49:48,090 --> 00:49:59,280
HTTP server DNS smtp and then HTTP also

1203
00:49:54,900 --> 00:50:01,109
so as been see here this is some malware

1204
00:49:59,280 --> 00:50:04,380
that thomson rule created

1205
00:50:01,109 --> 00:50:06,810
it's called sassypants THC and i blew

1206
00:50:04,380 --> 00:50:09,840
this up in my flare VM host only sandbox

1207
00:50:06,810 --> 00:50:12,000
and so I click on sassy pants

1208
00:50:09,840 --> 00:50:14,940
and what happens here as we can see here

1209
00:50:12,000 --> 00:50:17,400
there's some DNS calls gherkin summary

1210
00:50:14,940 --> 00:50:19,080
Thomas silver girl calm well that's

1211
00:50:17,400 --> 00:50:19,740
obviously malicious right he's just a

1212
00:50:19,080 --> 00:50:23,310
bad person

1213
00:50:19,740 --> 00:50:26,009
so the our dns listener also received a

1214
00:50:23,310 --> 00:50:28,859
dns a record request for dead server

1215
00:50:26,010 --> 00:50:38,960
that Thomas Thomas Somerville calm well

1216
00:50:28,859 --> 00:50:38,960
what happened next I gots to loaned

1217
00:50:39,800 --> 00:50:47,190
sorry Tommy changed it and yeah that's

1218
00:50:45,359 --> 00:50:48,509
about it that's the talk I think um so

1219
00:50:47,190 --> 00:50:50,760
there's more tools of the trade we can

1220
00:50:48,510 --> 00:50:52,740
talk all day about tools again you know

1221
00:50:50,760 --> 00:50:54,450
I said earlier that tools when it comes

1222
00:50:52,740 --> 00:50:55,770
to analysis our like your metal in the

1223
00:50:54,450 --> 00:50:59,060
bad guys when one doesn't work you just

1224
00:50:55,770 --> 00:50:59,060
pick up the next one you keep going

