1
00:00:00,000 --> 00:00:03,780
afternoon everyone teeth how did that

2
00:00:01,890 --> 00:00:05,338
come out good after I got a stop

3
00:00:03,780 --> 00:00:08,730
drinking Starbucks and a this morning

4
00:00:05,339 --> 00:00:10,380
yes I mean good yeah what happens when

5
00:00:08,730 --> 00:00:12,780
you've been here forever so good morning

6
00:00:10,380 --> 00:00:14,910
everybody and welcome to the 11:00

7
00:00:12,780 --> 00:00:16,919
o'clock session this is Eric wolf from

8
00:00:14,910 --> 00:00:20,009
tails he's going to talk about developer

9
00:00:16,920 --> 00:00:22,380
devaluing cloud breaches while gaining

10
00:00:20,010 --> 00:00:23,699
safe harbor and he's gonna explain that

11
00:00:22,380 --> 00:00:30,509
a little bit to you so if you can

12
00:00:23,699 --> 00:00:33,030
welcome Eric thanks thank you thanks hey

13
00:00:30,510 --> 00:00:35,070
before I dive in I just want to do a

14
00:00:33,030 --> 00:00:38,460
really quick poll so raise your hand if

15
00:00:35,070 --> 00:00:42,989
you're using AWS Azure or Google cloud

16
00:00:38,460 --> 00:00:44,280
platform or plan to use it okay all

17
00:00:42,989 --> 00:00:46,949
right so you're in the right room

18
00:00:44,280 --> 00:00:48,360
because I'm gonna tell you stories about

19
00:00:46,950 --> 00:00:51,120
what's going on in the cloud these days

20
00:00:48,360 --> 00:00:54,420
and then I'm gonna provide you some

21
00:00:51,120 --> 00:00:56,820
guidance I'm a vendor and so I actually

22
00:00:54,420 --> 00:00:59,280
have some solutions in this content and

23
00:00:56,820 --> 00:01:02,940
the other thing is that it's a short

24
00:00:59,280 --> 00:01:05,159
session so I'll be outside the room and

25
00:01:02,940 --> 00:01:09,470
I can answer questions that I couldn't

26
00:01:05,159 --> 00:01:14,520
answer live outside at about 11:30 or so

27
00:01:09,470 --> 00:01:16,830
so I'll be talking about averting cloud

28
00:01:14,520 --> 00:01:18,298
data leaks and one thing that you're

29
00:01:16,830 --> 00:01:22,048
gonna learn in the next few minutes is

30
00:01:18,299 --> 00:01:24,270
that no one can stop the breaches the

31
00:01:22,049 --> 00:01:27,720
story of what I'm gonna tell you is - is

32
00:01:24,270 --> 00:01:30,449
that you can keep the data safe even in

33
00:01:27,720 --> 00:01:35,460
the midst of breaches so you convert the

34
00:01:30,450 --> 00:01:37,860
leak and you can actually gain self you

35
00:01:35,460 --> 00:01:39,990
can actually gain safe harbor from

36
00:01:37,860 --> 00:01:42,150
breach notifications if you can keep

37
00:01:39,990 --> 00:01:44,520
your data safe in the face of breaches

38
00:01:42,150 --> 00:01:49,520
so let's talk about breaches for a

39
00:01:44,520 --> 00:01:52,979
second so I'm starting with Amazon EBS

40
00:01:49,520 --> 00:01:55,920
because s3 is the darling of breaches

41
00:01:52,979 --> 00:01:58,860
but this was a finding that came out

42
00:01:55,920 --> 00:02:01,170
just a few months ago at DEFCON EBS has

43
00:01:58,860 --> 00:02:03,630
a public mode that makes VHDs

44
00:02:01,170 --> 00:02:08,310
visible to anybody on the internet there

45
00:02:03,630 --> 00:02:10,560
are hundreds of thousands of EBS of EBS

46
00:02:08,310 --> 00:02:11,650
storage arrays that are visible to the

47
00:02:10,560 --> 00:02:17,280
world

48
00:02:11,650 --> 00:02:21,310
this is a challenge meanwhile in July

49
00:02:17,280 --> 00:02:24,880
Paige Thompson was caught exfiltrating a

50
00:02:21,310 --> 00:02:28,030
30 gig of capital 1 data representing a

51
00:02:24,880 --> 00:02:31,030
hundred and six million customers it was

52
00:02:28,030 --> 00:02:33,610
not a happy story for cap one to tell to

53
00:02:31,030 --> 00:02:36,690
the public but I have some things to say

54
00:02:33,610 --> 00:02:38,770
about Paige in that in a few moments I'm

55
00:02:36,690 --> 00:02:41,140
rolling back the calendar

56
00:02:38,770 --> 00:02:43,860
to April of this year hundreds of

57
00:02:41,140 --> 00:02:49,988
millions of Facebook user records

58
00:02:43,860 --> 00:02:52,989
exposed on AWS s3 and then finally with

59
00:02:49,989 --> 00:02:54,790
the end of my breach stories Dow Jones

60
00:02:52,989 --> 00:02:56,880
the parent of the Wall Street Journal is

61
00:02:54,790 --> 00:03:01,329
the latest company to yet again

62
00:02:56,880 --> 00:03:04,870
misconfigure AWS in this case it was s3

63
00:03:01,330 --> 00:03:09,970
and exposed mission-critical data to the

64
00:03:04,870 --> 00:03:15,610
public so the question that we start to

65
00:03:09,970 --> 00:03:17,799
ask here is why hasn't Amazon stopped

66
00:03:15,610 --> 00:03:20,890
the breaches and I'll start with a

67
00:03:17,799 --> 00:03:24,340
headline from Newsweek in the fate in

68
00:03:20,890 --> 00:03:27,429
the wake of that cap 1 Jason Murdoch

69
00:03:24,340 --> 00:03:29,799
reported Amazon refuses blame for the

70
00:03:27,430 --> 00:03:31,900
capital 1 breach says it's cloud

71
00:03:29,799 --> 00:03:33,760
services its themselves were not

72
00:03:31,900 --> 00:03:38,769
compromised in any way

73
00:03:33,760 --> 00:03:45,310
so that's 0.1 about whether Amazon can

74
00:03:38,769 --> 00:03:49,090
or will stop the breaches meanwhile they

75
00:03:45,310 --> 00:03:52,510
are cognizant of the challenges that

76
00:03:49,090 --> 00:03:56,140
their users face and they continue to

77
00:03:52,510 --> 00:04:00,459
add tools and the corresponding

78
00:03:56,140 --> 00:04:04,359
complexity to using and securing AWS

79
00:04:00,459 --> 00:04:09,340
including just a few months ago starting

80
00:04:04,360 --> 00:04:12,690
to scan public IP addresses for open s3s

81
00:04:09,340 --> 00:04:12,690
and open EBS a--'s

82
00:04:14,890 --> 00:04:25,680
delivering the access advisor at the end

83
00:04:18,130 --> 00:04:25,680
of C sorry about that

84
00:04:27,030 --> 00:04:32,200
Mac is not supposed to go to sleep

85
00:04:29,410 --> 00:04:34,480
during presentations offering what they

86
00:04:32,200 --> 00:04:38,550
refer to as their well architected

87
00:04:34,480 --> 00:04:42,280
review for many many many years

88
00:04:38,550 --> 00:04:46,030
meanwhile in the wake of the cap one

89
00:04:42,280 --> 00:04:48,640
breach Ron Wyden senator from Oregon

90
00:04:46,030 --> 00:04:50,169
sent a letter to AWS saying what is

91
00:04:48,640 --> 00:04:53,860
going on here why does this keep

92
00:04:50,169 --> 00:04:57,010
happening and these are just a quick few

93
00:04:53,860 --> 00:04:59,380
quick sentences from the confirm AWS s

94
00:04:57,010 --> 00:05:01,539
response to Ron Wyden we will

95
00:04:59,380 --> 00:05:05,110
proactively scan the publicize peace

96
00:05:01,540 --> 00:05:08,380
base we will redouble our efforts to

97
00:05:05,110 --> 00:05:12,580
help customers set the least permit

98
00:05:08,380 --> 00:05:14,830
permissive permissions we will make our

99
00:05:12,580 --> 00:05:18,729
anomaly detection services

100
00:05:14,830 --> 00:05:22,990
more broadly accessible we will look at

101
00:05:18,729 --> 00:05:27,550
additional additions to subsystems

102
00:05:22,990 --> 00:05:30,610
deeper in our stack that was a code word

103
00:05:27,550 --> 00:05:34,680
for the challenges that came out in the

104
00:05:30,610 --> 00:05:39,520
wake of the cap 1 breach that said that

105
00:05:34,680 --> 00:05:42,190
the I am subsystem that lives underneath

106
00:05:39,520 --> 00:05:45,700
every infrastructure-as-a-service

107
00:05:42,190 --> 00:05:48,969
virtual machine has a lot of

108
00:05:45,700 --> 00:05:51,700
vulnerabilities in it and AWS is aware

109
00:05:48,970 --> 00:05:54,419
of it and their whole I am or

110
00:05:51,700 --> 00:05:59,250
infrastructure and access management

111
00:05:54,419 --> 00:06:01,419
systems depend upon it and it's full of

112
00:05:59,250 --> 00:06:05,550
vulnerabilities and they're aware of it

113
00:06:01,419 --> 00:06:11,289
and they're fixing it but when will they

114
00:06:05,550 --> 00:06:14,710
but the question no longer goes to AWS

115
00:06:11,289 --> 00:06:19,060
we assert that it's essentially

116
00:06:14,710 --> 00:06:22,090
impossible to stop breaches why because

117
00:06:19,060 --> 00:06:25,300
breaches are largely caused by human

118
00:06:22,090 --> 00:06:28,330
error resulting from either complexity

119
00:06:25,300 --> 00:06:32,770
or convenience

120
00:06:28,330 --> 00:06:34,719
complexity is dramatically grown when

121
00:06:32,770 --> 00:06:37,659
customers use multiple cloud service

122
00:06:34,720 --> 00:06:39,550
providers because every cloud service

123
00:06:37,659 --> 00:06:42,520
provider security schema is slightly

124
00:06:39,550 --> 00:06:44,349
different and you end up needing to get

125
00:06:42,520 --> 00:06:46,180
a certification for Azure and a

126
00:06:44,349 --> 00:06:49,659
certification for AWS and a

127
00:06:46,180 --> 00:06:52,659
certification for GCP and can you keep

128
00:06:49,659 --> 00:06:54,039
all of those cloud security management

129
00:06:52,659 --> 00:06:57,069
schema is alive in your head all the

130
00:06:54,039 --> 00:06:59,860
time do you have enough people to assign

131
00:06:57,069 --> 00:07:04,479
one person to AWS one person to Azure

132
00:06:59,860 --> 00:07:06,639
and one for GCP probably not and as the

133
00:07:04,479 --> 00:07:08,919
complexity grows you just throw up your

134
00:07:06,639 --> 00:07:11,770
hands and say I'm gonna temporarily

135
00:07:08,919 --> 00:07:13,359
leave this bucket open for the public

136
00:07:11,770 --> 00:07:16,120
because it's the only way that my

137
00:07:13,360 --> 00:07:18,759
internal users actually can get to it

138
00:07:16,120 --> 00:07:21,419
because I can't quite figure out the I

139
00:07:18,759 --> 00:07:24,190
am relationship that I need to establish

140
00:07:21,419 --> 00:07:27,508
so that all my users can get to data

141
00:07:24,190 --> 00:07:29,800
shared by other people meanwhile

142
00:07:27,509 --> 00:07:32,050
vulnerabilities there's just going to be

143
00:07:29,800 --> 00:07:34,479
no end to Valle 'nor abilities the

144
00:07:32,050 --> 00:07:36,669
software industry is always moving

145
00:07:34,479 --> 00:07:38,500
forward there's always new applications

146
00:07:36,669 --> 00:07:42,639
there's always new services there's

147
00:07:38,500 --> 00:07:44,919
always new companies and you can't

148
00:07:42,639 --> 00:07:47,379
always patch the vulnerability as

149
00:07:44,919 --> 00:07:50,349
quickly as you want and the two examples

150
00:07:47,379 --> 00:07:54,699
I have on the slide here was that the

151
00:07:50,349 --> 00:07:57,490
the vulnerability that was believed to

152
00:07:54,699 --> 00:08:00,039
be at the root of the cap one breach in

153
00:07:57,490 --> 00:08:03,610
the modsecurity Web Application Firewall

154
00:08:00,039 --> 00:08:07,089
was reported at blackhat four years

155
00:08:03,610 --> 00:08:12,310
prior to its use by Paige Thompson and

156
00:08:07,089 --> 00:08:15,240
then same same month Imperva who is a

157
00:08:12,310 --> 00:08:17,770
security vendor just like I am

158
00:08:15,240 --> 00:08:19,659
experienced a bug in their database

159
00:08:17,770 --> 00:08:22,948
security and they had a compromised of

160
00:08:19,659 --> 00:08:28,449
their customer data in August and then

161
00:08:22,949 --> 00:08:31,360
finally insiders remain there are two

162
00:08:28,449 --> 00:08:33,789
types of insiders they're yourself as an

163
00:08:31,360 --> 00:08:37,539
insider because if you're a sysadmin

164
00:08:33,789 --> 00:08:40,448
you're an insider and you present risk

165
00:08:37,539 --> 00:08:41,710
to your data that I'll be talking about

166
00:08:40,448 --> 00:08:46,469
in a moment

167
00:08:41,710 --> 00:08:48,730
but meanwhile your admin privileges and

168
00:08:46,470 --> 00:08:52,870
vulnerabilities are the same in the

169
00:08:48,730 --> 00:08:55,870
cloud as they are on-premises so here's

170
00:08:52,870 --> 00:08:57,700
the example that I like to cite we

171
00:08:55,870 --> 00:09:02,170
reported on a study several years ago

172
00:08:57,700 --> 00:09:03,970
where administrators revealed that all

173
00:09:02,170 --> 00:09:06,790
things being equal they used the same

174
00:09:03,970 --> 00:09:08,830
admin passwords for infrastructure as a

175
00:09:06,790 --> 00:09:11,380
service for their Linux machines

176
00:09:08,830 --> 00:09:15,520
on-premises and their Linux machines in

177
00:09:11,380 --> 00:09:18,730
the cloud which means that if an admin

178
00:09:15,520 --> 00:09:20,560
happens to be socially engineered or the

179
00:09:18,730 --> 00:09:23,260
write phishing attack ends up on the

180
00:09:20,560 --> 00:09:26,469
admins desk and the admin credential is

181
00:09:23,260 --> 00:09:32,380
given up then that credential is given

182
00:09:26,470 --> 00:09:36,940
up in the cloud as well and in the scary

183
00:09:32,380 --> 00:09:39,550
example of the Black Swan event a black

184
00:09:36,940 --> 00:09:42,600
swan is a swan that may exist in public

185
00:09:39,550 --> 00:09:46,740
but nobody's ever seen it before

186
00:09:42,600 --> 00:09:51,370
compromised AWS or Microsoft or Google

187
00:09:46,740 --> 00:09:55,330
employees are believed not to exist and

188
00:09:51,370 --> 00:10:00,430
yet last August we had a former AWS se

189
00:09:55,330 --> 00:10:04,240
implicated using her knowledge of AWS

190
00:10:00,430 --> 00:10:06,489
vulnerabilities to break in to cap one

191
00:10:04,240 --> 00:10:10,360
so the Black Swan event actually

192
00:10:06,490 --> 00:10:15,730
happened and I'm not really making this

193
00:10:10,360 --> 00:10:19,120
up in a recent survey by IDC they

194
00:10:15,730 --> 00:10:22,570
revealed that 61 percent of data breach

195
00:10:19,120 --> 00:10:25,240
victims indicated that the attack was

196
00:10:22,570 --> 00:10:28,920
the result of a cloud infrastructure

197
00:10:25,240 --> 00:10:32,850
related vulnerability or Mis

198
00:10:28,920 --> 00:10:36,930
configuration so the bottom line is that

199
00:10:32,850 --> 00:10:40,540
breaches happen for good reasons

200
00:10:36,930 --> 00:10:43,349
we're none of us are perfect and the

201
00:10:40,540 --> 00:10:48,279
infrastructure that we use is imperfect

202
00:10:43,350 --> 00:10:52,720
meanwhile these diagrams are taken from

203
00:10:48,279 --> 00:10:55,270
AWS and asher's websites they are known

204
00:10:52,720 --> 00:10:59,230
as those cloud providers statements

205
00:10:55,270 --> 00:11:02,800
of the shared security model for cloud

206
00:10:59,230 --> 00:11:04,090
computing and if you look closely at

207
00:11:02,800 --> 00:11:08,050
these diagrams

208
00:11:04,090 --> 00:11:10,590
note that the blue section on the left

209
00:11:08,050 --> 00:11:13,510
and the blue section on the right is

210
00:11:10,590 --> 00:11:17,050
physically a lot bigger than the gold

211
00:11:13,510 --> 00:11:19,930
section or the gray section on the

212
00:11:17,050 --> 00:11:24,810
slides what does this tell you this

213
00:11:19,930 --> 00:11:28,859
tells you that you the cloud consumer

214
00:11:24,810 --> 00:11:32,530
essentially have significantly more

215
00:11:28,860 --> 00:11:36,340
responsibility for data security than

216
00:11:32,530 --> 00:11:38,260
the cloud provider themselves now it's

217
00:11:36,340 --> 00:11:41,760
hard to read the tiny fonts in these

218
00:11:38,260 --> 00:11:45,550
diagrams and you'll get these slides

219
00:11:41,760 --> 00:11:49,180
from the conference website but you'll

220
00:11:45,550 --> 00:11:53,260
see that for example AWS specifically

221
00:11:49,180 --> 00:11:57,040
tells you that you have to manage the

222
00:11:53,260 --> 00:12:00,250
encryption that they provide you have to

223
00:11:57,040 --> 00:12:04,230
manage all the data protection tools

224
00:12:00,250 --> 00:12:06,850
that they provide and yeah you can go to

225
00:12:04,230 --> 00:12:09,580
AWS reinvent year after year after year

226
00:12:06,850 --> 00:12:12,520
and you can get your AWS security

227
00:12:09,580 --> 00:12:15,550
credentials but then as I said at the

228
00:12:12,520 --> 00:12:19,060
head of the hour are you going to be

229
00:12:15,550 --> 00:12:25,349
able to remember the AWS subtlety versus

230
00:12:19,060 --> 00:12:29,920
the azure subtlety in securing data so

231
00:12:25,350 --> 00:12:33,540
what is a potential plan to protect your

232
00:12:29,920 --> 00:12:36,160
data well you can end human error I

233
00:12:33,540 --> 00:12:40,980
don't think we're gonna end

234
00:12:36,160 --> 00:12:45,160
human errors you can assume that you or

235
00:12:40,980 --> 00:12:47,110
someone on your team or someone in the

236
00:12:45,160 --> 00:12:48,610
industry who's sitting next to you in

237
00:12:47,110 --> 00:12:53,110
this room right now will find a

238
00:12:48,610 --> 00:12:58,990
vulnerability before a hacker does or

239
00:12:53,110 --> 00:13:03,310
you can hope and pray that no admin will

240
00:12:58,990 --> 00:13:06,750
ever be socially engineered to that I

241
00:13:03,310 --> 00:13:06,750
say good luck

242
00:13:06,870 --> 00:13:16,150
so here is a potentially better plan to

243
00:13:11,650 --> 00:13:20,430
secure your cloud data protect it with

244
00:13:16,150 --> 00:13:26,050
encryption tokenization and most

245
00:13:20,430 --> 00:13:30,280
importantly encryption keys that you not

246
00:13:26,050 --> 00:13:32,349
your cloud provider control if you

247
00:13:30,280 --> 00:13:36,490
consider this better plan

248
00:13:32,350 --> 00:13:39,850
you may even gain safe harbor from

249
00:13:36,490 --> 00:13:46,000
having to disclose breaches of cloud

250
00:13:39,850 --> 00:13:48,280
data so you're gonna leave this

251
00:13:46,000 --> 00:13:51,130
presentation and you're gonna go back to

252
00:13:48,280 --> 00:13:55,120
your school or you'll go back to your

253
00:13:51,130 --> 00:13:57,520
team at headquarters and one of the

254
00:13:55,120 --> 00:14:00,850
cloud system ins will say but the cloud

255
00:13:57,520 --> 00:14:04,840
providers are giving me encryption and

256
00:14:00,850 --> 00:14:07,980
key management and I'm here to tell you

257
00:14:04,840 --> 00:14:11,230
that cloud provider encryption is

258
00:14:07,980 --> 00:14:14,410
essentially equal to full disk

259
00:14:11,230 --> 00:14:16,270
encryption on premises and the challenge

260
00:14:14,410 --> 00:14:18,130
with full disk encryption on premises

261
00:14:16,270 --> 00:14:21,310
and the challenge with full disk

262
00:14:18,130 --> 00:14:23,890
encryption in the cloud is that once a

263
00:14:21,310 --> 00:14:28,060
hacker has a key all the data is in the

264
00:14:23,890 --> 00:14:31,990
clear and essentially fde is simplistic

265
00:14:28,060 --> 00:14:34,780
it lacks the protections that advanced

266
00:14:31,990 --> 00:14:36,010
encryption solutions provide now I'm

267
00:14:34,780 --> 00:14:40,569
gonna tell you a little story on this

268
00:14:36,010 --> 00:14:43,990
point before I move on if you use full

269
00:14:40,570 --> 00:14:46,810
disk encryption on premises what's

270
00:14:43,990 --> 00:14:50,710
happening is that whenever you read data

271
00:14:46,810 --> 00:14:53,400
from your fde storage array as soon as

272
00:14:50,710 --> 00:14:58,540
it leaves the disk it's in the clear

273
00:14:53,400 --> 00:15:02,770
data arrives from Santa raise and Nazz

274
00:14:58,540 --> 00:15:05,980
arrays in clear text coming to the

275
00:15:02,770 --> 00:15:08,829
operating system the reason why fde

276
00:15:05,980 --> 00:15:11,830
works the way it does is that vendors

277
00:15:08,830 --> 00:15:15,580
are protecting data on disk from

278
00:15:11,830 --> 00:15:18,700
physical theft and you know this is an

279
00:15:15,580 --> 00:15:18,920
interesting story because I think it'd

280
00:15:18,700 --> 00:15:21,290
be

281
00:15:18,920 --> 00:15:25,790
pretty hard to penetrate an AWS data

282
00:15:21,290 --> 00:15:27,589
center and grab a disk out of an AWS

283
00:15:25,790 --> 00:15:31,279
storage array I think it would be pretty

284
00:15:27,589 --> 00:15:34,579
hard but the problem is that's not the

285
00:15:31,279 --> 00:15:38,290
problem when the data is served in the

286
00:15:34,579 --> 00:15:41,359
clear to the operating system then that

287
00:15:38,290 --> 00:15:44,329
administrative credential upon which the

288
00:15:41,360 --> 00:15:47,470
tower is built that has the risk of

289
00:15:44,329 --> 00:15:52,069
social engineering oriented breaches

290
00:15:47,470 --> 00:15:55,040
allows a compromised probe user to gain

291
00:15:52,070 --> 00:15:59,269
access to the data coming in from fde or

292
00:15:55,040 --> 00:16:01,339
cloud provider encryption meanwhile if

293
00:15:59,269 --> 00:16:04,370
you still have faith in cloud provider

294
00:16:01,339 --> 00:16:07,730
encryption you have to note that access

295
00:16:04,370 --> 00:16:10,519
to cloud provider keys is tied to the

296
00:16:07,730 --> 00:16:12,079
cloud access policies so rewind your

297
00:16:10,519 --> 00:16:14,949
brains to a few minutes ago when I

298
00:16:12,079 --> 00:16:19,519
talked about the I am subsystem

299
00:16:14,949 --> 00:16:23,209
underneath AWS virtual machines that

300
00:16:19,519 --> 00:16:26,240
infrastructure also controls access to

301
00:16:23,209 --> 00:16:29,029
the AWS kms that is the key management

302
00:16:26,240 --> 00:16:32,300
system key vault so there's some risk

303
00:16:29,029 --> 00:16:35,420
that leveraging any vulnerable 'nor

304
00:16:32,300 --> 00:16:39,170
ability in the underlying technology in

305
00:16:35,420 --> 00:16:44,349
AWS could result in Aden Krypton key

306
00:16:39,170 --> 00:16:46,969
being gained this eliminates the

307
00:16:44,350 --> 00:16:49,250
traditional defenses that you depend on

308
00:16:46,970 --> 00:16:55,100
such as separation of Dewi duties and

309
00:16:49,250 --> 00:16:58,010
layers of Defense another consideration

310
00:16:55,100 --> 00:17:01,070
and this is absolutely self-serving

311
00:16:58,010 --> 00:17:03,800
because I provide solutions that

312
00:17:01,070 --> 00:17:06,589
mitigate this but cloud provider

313
00:17:03,800 --> 00:17:09,619
encryption essentially locks your data

314
00:17:06,589 --> 00:17:12,409
in that cloud I don't have time to go

315
00:17:09,619 --> 00:17:14,719
through it today but in several

316
00:17:12,410 --> 00:17:18,559
discussions I've given in groups about

317
00:17:14,720 --> 00:17:22,069
this size we learned in 2017 2018 and

318
00:17:18,559 --> 00:17:24,369
this year about data repatriation that

319
00:17:22,069 --> 00:17:28,870
is the notion of bringing a workload

320
00:17:24,369 --> 00:17:31,189
back from the cloud to premises

321
00:17:28,870 --> 00:17:32,719
repatriation is a very very interesting

322
00:17:31,190 --> 00:17:34,610
consideration but let's

323
00:17:32,720 --> 00:17:39,710
just go through the mental exercise if

324
00:17:34,610 --> 00:17:42,709
we can so we lifted or shifted or we did

325
00:17:39,710 --> 00:17:46,220
an engineered migration of sensitive

326
00:17:42,710 --> 00:17:49,549
data from our premises to the cloud to

327
00:17:46,220 --> 00:17:52,490
leverage the benefits of the cloud and

328
00:17:49,549 --> 00:17:55,610
we encrypted it when we got there well

329
00:17:52,490 --> 00:17:57,740
suddenly we need to repatriate some or

330
00:17:55,610 --> 00:18:00,020
maybe even all of the data that we

331
00:17:57,740 --> 00:18:04,789
encrypted up in the cloud well

332
00:18:00,020 --> 00:18:06,980
unfortunately we pay for the CPU cycles

333
00:18:04,789 --> 00:18:09,919
that our servers used to decrypt the

334
00:18:06,980 --> 00:18:12,890
data before I can bring it back down to

335
00:18:09,919 --> 00:18:14,840
my premises and why do I have to decrypt

336
00:18:12,890 --> 00:18:18,260
it before I bring it back down to my

337
00:18:14,840 --> 00:18:22,459
premises because AWS does a very very

338
00:18:18,260 --> 00:18:25,700
good job they won't let you take any key

339
00:18:22,460 --> 00:18:27,919
from kms down to your premises they

340
00:18:25,700 --> 00:18:30,650
won't let you take it so that means that

341
00:18:27,919 --> 00:18:33,830
you have to decrypt the data before you

342
00:18:30,650 --> 00:18:36,320
bring it down and the same thing happens

343
00:18:33,830 --> 00:18:38,840
in a cloud to cloud migration it's

344
00:18:36,320 --> 00:18:41,330
perfectly common and everybody hears

345
00:18:38,840 --> 00:18:45,350
about stories where I had a data set in

346
00:18:41,330 --> 00:18:47,059
AWS but I decided that certain aspects

347
00:18:45,350 --> 00:18:48,530
of security might be better in Azure

348
00:18:47,059 --> 00:18:51,649
it's so I'm going to move my data up to

349
00:18:48,530 --> 00:18:55,280
Azure oh no have to decrypt all that

350
00:18:51,650 --> 00:18:57,650
data in Amazon before I drag it down in

351
00:18:55,280 --> 00:19:00,860
the clearer to my premises before I can

352
00:18:57,650 --> 00:19:04,880
move it to a sure so cloud provider

353
00:19:00,860 --> 00:19:06,860
encryption has that limitation and then

354
00:19:04,880 --> 00:19:09,860
finally I've harped on this already

355
00:19:06,860 --> 00:19:13,059
several times in the past 18 minutes

356
00:19:09,860 --> 00:19:16,580
I've said that if you have to learn and

357
00:19:13,059 --> 00:19:19,149
maintain encryption in your multi cloud

358
00:19:16,580 --> 00:19:21,860
environments across multiple clouds

359
00:19:19,150 --> 00:19:24,919
you'll start tearing your hair out even

360
00:19:21,860 --> 00:19:28,250
if you're just bringing your own keys to

361
00:19:24,919 --> 00:19:31,700
that cloud provider encryption it's

362
00:19:28,250 --> 00:19:34,669
expensive to get trained and it's

363
00:19:31,700 --> 00:19:37,340
expensive to maintain your knowledge of

364
00:19:34,669 --> 00:19:43,669
the security tools available from your

365
00:19:37,340 --> 00:19:44,790
cloud providers and meanwhile you really

366
00:19:43,669 --> 00:19:48,240
want to

367
00:19:44,790 --> 00:19:51,870
take a separation of duties perspective

368
00:19:48,240 --> 00:19:55,350
just like the cloud provider told you to

369
00:19:51,870 --> 00:19:57,689
the cloud provider told you that you are

370
00:19:55,350 --> 00:20:01,320
responsible for the security of your

371
00:19:57,690 --> 00:20:02,700
data and I'm here to tell you that if

372
00:20:01,320 --> 00:20:04,139
you want to solve a whole bunch of

373
00:20:02,700 --> 00:20:06,750
problems you can bring your own

374
00:20:04,140 --> 00:20:10,980
encryption by encrypting the files or

375
00:20:06,750 --> 00:20:16,440
tokenizing the data and always always

376
00:20:10,980 --> 00:20:21,540
control your keys but I want to

377
00:20:16,440 --> 00:20:23,660
re-emphasize that I'm not here to tell

378
00:20:21,540 --> 00:20:28,560
you that the breaches are going to end

379
00:20:23,660 --> 00:20:32,100
human errors vulnerabilities insiders

380
00:20:28,560 --> 00:20:35,370
remain and the challenge is that if you

381
00:20:32,100 --> 00:20:39,330
use cloud provider encryption and there

382
00:20:35,370 --> 00:20:43,280
is a breach your data may well end up in

383
00:20:39,330 --> 00:20:46,710
the clear and is intrinsically valuable

384
00:20:43,280 --> 00:20:49,200
to the people who are trying to steal it

385
00:20:46,710 --> 00:20:51,210
if the data is in the clear the credit

386
00:20:49,200 --> 00:20:54,630
card numbers Social Security numbers

387
00:20:51,210 --> 00:21:00,630
addresses names and telephone numbers

388
00:20:54,630 --> 00:21:05,660
are all valuable to the hackers if you

389
00:21:00,630 --> 00:21:10,850
can use an advanced encryption solution

390
00:21:05,660 --> 00:21:16,500
when the breach happens the data remains

391
00:21:10,850 --> 00:21:20,340
encrypted and has no intrinsic value to

392
00:21:16,500 --> 00:21:22,920
the hackers so whether they know it or

393
00:21:20,340 --> 00:21:27,810
not and whether they stop it or not is

394
00:21:22,920 --> 00:21:30,270
immaterial because once they have it

395
00:21:27,810 --> 00:21:36,090
they can't use it and they can't

396
00:21:30,270 --> 00:21:40,440
leverage a dollar value from it so we

397
00:21:36,090 --> 00:21:43,500
have products in the ver metric data

398
00:21:40,440 --> 00:21:48,240
security platform that allow you protect

399
00:21:43,500 --> 00:21:52,610
to protect data on-premises in hybrid

400
00:21:48,240 --> 00:21:57,860
clouds and in pure cloud environments

401
00:21:52,610 --> 00:22:01,459
enabling you to react quickly to new

402
00:21:57,860 --> 00:22:04,969
data protection requirements and giving

403
00:22:01,460 --> 00:22:09,380
you single pain management of both

404
00:22:04,970 --> 00:22:15,500
encryption policies and keys that can

405
00:22:09,380 --> 00:22:19,190
travel from cloud to cloud we offer data

406
00:22:15,500 --> 00:22:22,190
protection choices from the management

407
00:22:19,190 --> 00:22:25,700
of cloud provider keys all the way up to

408
00:22:22,190 --> 00:22:28,460
token of tokenization of data at the top

409
00:22:25,700 --> 00:22:30,710
of the compute stack and bringing it all

410
00:22:28,460 --> 00:22:34,520
together with a single key management

411
00:22:30,710 --> 00:22:39,650
system can actually save you money over

412
00:22:34,520 --> 00:22:43,010
time so we have this appliance which is

413
00:22:39,650 --> 00:22:46,700
available in both physical and cloud

414
00:22:43,010 --> 00:22:49,990
friendly virtual appliance form factors

415
00:22:46,700 --> 00:22:54,580
that provide centralized key management

416
00:22:49,990 --> 00:22:59,600
for encryption or tokenization across

417
00:22:54,580 --> 00:23:02,059
multiple clouds this device used at the

418
00:22:59,600 --> 00:23:05,540
center of a bring your own encryption

419
00:23:02,059 --> 00:23:08,899
strategy enables you to move data from

420
00:23:05,540 --> 00:23:13,909
cloud to cloud without having to decrypt

421
00:23:08,900 --> 00:23:16,429
it prior to moving it we have a product

422
00:23:13,910 --> 00:23:20,210
that we refer to as for metric

423
00:23:16,429 --> 00:23:24,559
transparent encryption that we claim can

424
00:23:20,210 --> 00:23:27,770
prevent privileged users or cloud

425
00:23:24,559 --> 00:23:31,760
administrators from gaining access to

426
00:23:27,770 --> 00:23:33,650
encrypted data by operating in the

427
00:23:31,760 --> 00:23:36,320
operating system and providing

428
00:23:33,650 --> 00:23:39,460
encryption in the operating system we

429
00:23:36,320 --> 00:23:42,830
leverage OS services to enable

430
00:23:39,460 --> 00:23:47,120
privileged users to do their jobs gain

431
00:23:42,830 --> 00:23:49,520
access to file and volume metadata but

432
00:23:47,120 --> 00:23:53,000
not gain access to the data inside of

433
00:23:49,520 --> 00:23:55,400
files and databases and therefore the

434
00:23:53,000 --> 00:24:00,650
compromised privileged user attack is

435
00:23:55,400 --> 00:24:04,160
averted we provide data access logging

436
00:24:00,650 --> 00:24:08,230
such that you can gain early warning of

437
00:24:04,160 --> 00:24:11,240
an advanced persistent threat attack by

438
00:24:08,230 --> 00:24:13,460
recognizing in a sim system

439
00:24:11,240 --> 00:24:16,880
heated data reads such as Paige

440
00:24:13,460 --> 00:24:19,370
Thompson's attack and it's simple to

441
00:24:16,880 --> 00:24:23,540
deploy because it's wholly transparent

442
00:24:19,370 --> 00:24:26,239
to your work processes another choice is

443
00:24:23,540 --> 00:24:29,059
tokenization where either format

444
00:24:26,240 --> 00:24:31,940
preserving or random tokens replace

445
00:24:29,059 --> 00:24:34,760
sensitive data in databases or in the

446
00:24:31,940 --> 00:24:37,040
cloud you can tokenize data before going

447
00:24:34,760 --> 00:24:39,830
to the cloud you can D tokenize as

448
00:24:37,040 --> 00:24:43,399
needed in the cloud or not you can

449
00:24:39,830 --> 00:24:46,490
statically mask data and you can share

450
00:24:43,400 --> 00:24:48,350
safely statically masked data with third

451
00:24:46,490 --> 00:24:49,990
parties and I've talked to a lot of

452
00:24:48,350 --> 00:24:52,820
people while I've been in Grand Rapids

453
00:24:49,990 --> 00:24:54,770
about people in the medical in the

454
00:24:52,820 --> 00:24:58,220
health community that are doing doing

455
00:24:54,770 --> 00:25:00,710
data sharing between clouds the bottom

456
00:24:58,220 --> 00:25:06,130
line is you can protect be a PII and

457
00:25:00,710 --> 00:25:09,110
attain PCI DSS scope reduction and

458
00:25:06,130 --> 00:25:12,530
protect hackers from gaining access to

459
00:25:09,110 --> 00:25:14,689
your data I'm gonna skip this in the

460
00:25:12,530 --> 00:25:17,030
interest of time you can bring these

461
00:25:14,690 --> 00:25:20,840
technologies to the cloud and you can

462
00:25:17,030 --> 00:25:23,720
manage them on-premises or you can take

463
00:25:20,840 --> 00:25:28,370
this centralized key management solution

464
00:25:23,720 --> 00:25:30,770
to the cloud you can gain safe harbor

465
00:25:28,370 --> 00:25:32,840
safe harbor regulations are cited in

466
00:25:30,770 --> 00:25:35,750
many data protection regulations

467
00:25:32,840 --> 00:25:37,399
including state data breach regulations

468
00:25:35,750 --> 00:25:40,490
and international data breach

469
00:25:37,400 --> 00:25:43,670
regulations and the interest of time I

470
00:25:40,490 --> 00:25:46,700
won't read to you the GDP our safe

471
00:25:43,670 --> 00:25:51,740
harbor but you will receive these slides

472
00:25:46,700 --> 00:25:55,190
from the Gherkin website and I sum up

473
00:25:51,740 --> 00:25:57,800
here you can avert the dangers of cloud

474
00:25:55,190 --> 00:26:00,980
breaches by taking responsibility for

475
00:25:57,800 --> 00:26:03,100
your data by dealing with the

476
00:26:00,980 --> 00:26:08,090
vulnerability that can't be predicted

477
00:26:03,100 --> 00:26:13,360
the last line of defense is your

478
00:26:08,090 --> 00:26:16,309
encryption and keys that you control and

479
00:26:13,360 --> 00:26:22,870
that's it so I'm happy to take questions

480
00:26:16,309 --> 00:26:22,870
live now or outside the room at 11:30

