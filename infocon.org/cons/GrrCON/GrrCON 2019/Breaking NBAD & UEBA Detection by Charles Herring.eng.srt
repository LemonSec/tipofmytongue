1
00:00:00,000 --> 00:00:04,230
breaking in bad and you EBA and two

2
00:00:02,700 --> 00:00:08,269
other new acronyms I've never heard of

3
00:00:04,230 --> 00:00:13,110
until today so thank you all right so

4
00:00:08,269 --> 00:00:16,079
this deck I gave a 2013 talk here at

5
00:00:13,110 --> 00:00:18,570
gherkin on the benefits of network

6
00:00:16,079 --> 00:00:21,659
behavioral anomaly detection and we're

7
00:00:18,570 --> 00:00:24,769
gonna revisit all for the better part of

8
00:00:21,660 --> 00:00:27,750
five years on how the importance of

9
00:00:24,769 --> 00:00:31,528
logging correctly logging in a way that

10
00:00:27,750 --> 00:00:34,860
holds up in court a way that cannot be

11
00:00:31,529 --> 00:00:36,870
broken a little bit about myself I was

12
00:00:34,860 --> 00:00:39,210
in the US Navy for ten years the first

13
00:00:36,870 --> 00:00:43,260
part of that I was a a VA shin mechanic

14
00:00:39,210 --> 00:00:44,879
I worked on f-18 Hornets after 9/11 I

15
00:00:43,260 --> 00:00:47,489
was detailed to the Naval Postgraduate

16
00:00:44,879 --> 00:00:50,370
School in Monterey California where we

17
00:00:47,489 --> 00:00:52,589
got to spend up to school or route so

18
00:00:50,370 --> 00:00:54,000
captured the flag team we won so many

19
00:00:52,590 --> 00:00:57,030
times at Def Con were not allowed to

20
00:00:54,000 --> 00:01:00,600
compete anymore but that was fun

21
00:00:57,030 --> 00:01:02,340
worked in the Navy up until 2005 left

22
00:01:00,600 --> 00:01:04,949
and did consulting work with DoD and

23
00:01:02,340 --> 00:01:06,740
State Department on workflow sharing

24
00:01:04,949 --> 00:01:10,439
information sort of security operations

25
00:01:06,740 --> 00:01:12,449
pieces and figuring out what works what

26
00:01:10,439 --> 00:01:15,240
doesn't work I worked for them for old

27
00:01:12,450 --> 00:01:17,100
test center doing product reviews

28
00:01:15,240 --> 00:01:18,720
they're shipping the stuff up see what

29
00:01:17,100 --> 00:01:21,000
worked those we get written up in

30
00:01:18,720 --> 00:01:25,259
reviews up until journalism died in 2008

31
00:01:21,000 --> 00:01:26,549
and the tests entered shut down went to

32
00:01:25,259 --> 00:01:29,310
work for a company called Lancope in

33
00:01:26,549 --> 00:01:31,939
2012 we had done initial in bad research

34
00:01:29,310 --> 00:01:33,990
with Georgia Tech that research became

35
00:01:31,939 --> 00:01:36,329
product called stealth watch which is

36
00:01:33,990 --> 00:01:39,350
now owned by Cisco that rabbuna Cisco

37
00:01:36,329 --> 00:01:45,329
and I started a company called wit fou

38
00:01:39,350 --> 00:01:47,369
in 2016 and we do big data security

39
00:01:45,329 --> 00:01:49,380
stuff so real quick we're going over

40
00:01:47,369 --> 00:01:51,329
some basics just find some terms what is

41
00:01:49,380 --> 00:01:53,060
in bad what is UVA then we're going to

42
00:01:51,329 --> 00:01:56,189
roll right into how to poison the data

43
00:01:53,060 --> 00:01:59,280
why we want to poison the data and the

44
00:01:56,189 --> 00:02:02,490
end the actual techniques for doing that

45
00:01:59,280 --> 00:02:05,340
then we can go into Q&A so real quick

46
00:02:02,490 --> 00:02:08,119
dr. Dorothy Danny wrote a paper in 1986

47
00:02:05,340 --> 00:02:12,110
called

48
00:02:08,119 --> 00:02:13,400
mmm and what is it I should have written

49
00:02:12,110 --> 00:02:15,769
don't know intrusion detection expert

50
00:02:13,400 --> 00:02:17,209
systems and in that paper at the War

51
00:02:15,769 --> 00:02:18,920
College he wrote out these three

52
00:02:17,209 --> 00:02:21,769
different ways that we detect attacks

53
00:02:18,920 --> 00:02:23,298
and these have sort of held up over the

54
00:02:21,769 --> 00:02:26,209
years of marketing buzzwords have

55
00:02:23,299 --> 00:02:28,190
changed signature based detection is

56
00:02:26,209 --> 00:02:29,629
inspecting the object so I look in the

57
00:02:28,190 --> 00:02:29,989
water there's something floating in the

58
00:02:29,629 --> 00:02:31,760
water

59
00:02:29,989 --> 00:02:33,549
I'm not going just the object so and

60
00:02:31,760 --> 00:02:35,629
secured network security that's

61
00:02:33,549 --> 00:02:38,420
inspecting the packet inspecting the

62
00:02:35,629 --> 00:02:40,250
file there's something known bad in the

63
00:02:38,420 --> 00:02:43,190
characteristic of that packet or that

64
00:02:40,250 --> 00:02:47,060
file behavioral detection is you observe

65
00:02:43,190 --> 00:02:49,640
the subject after it ingests the packet

66
00:02:47,060 --> 00:02:52,480
the file for a known bad behavior like

67
00:02:49,640 --> 00:02:54,319
encrypting the disk deleting files

68
00:02:52,480 --> 00:02:55,970
scanning the network those kind of

69
00:02:54,319 --> 00:02:57,738
things so you don't know the objects bad

70
00:02:55,970 --> 00:02:59,930
at the time but you know that the

71
00:02:57,739 --> 00:03:03,459
following behavior is triggered by it

72
00:02:59,930 --> 00:03:06,890
are bad and then anomaly detection is

73
00:03:03,459 --> 00:03:10,069
looking at every possible behavior and

74
00:03:06,890 --> 00:03:12,048
then categorizing it as good or bad in

75
00:03:10,069 --> 00:03:14,328
any and so something that's anomalous is

76
00:03:12,049 --> 00:03:19,630
just uncatted eyes it's not normal and

77
00:03:14,329 --> 00:03:21,980
so the way that those things spin out is

78
00:03:19,630 --> 00:03:23,629
signatures are generated by behavioral

79
00:03:21,980 --> 00:03:24,888
detection so net new signatures are

80
00:03:23,629 --> 00:03:27,168
generally caught by things like

81
00:03:24,889 --> 00:03:29,209
sandboxing and other behaviors you say

82
00:03:27,169 --> 00:03:31,099
okay here's a new piece of malware we've

83
00:03:29,209 --> 00:03:33,169
detected it you reverse engineer and

84
00:03:31,099 --> 00:03:35,349
create a signature for it and anomaly

85
00:03:33,169 --> 00:03:37,430
based detection is how we generate

86
00:03:35,349 --> 00:03:39,980
behavioral checks like what are the new

87
00:03:37,430 --> 00:03:42,019
behaviors we should look for in the wild

88
00:03:39,980 --> 00:03:45,530
and they have different use cases that

89
00:03:42,019 --> 00:03:47,090
things that are useful signature base of

90
00:03:45,530 --> 00:03:49,340
course has the benefit of being the most

91
00:03:47,090 --> 00:03:51,049
accurate the the least in false

92
00:03:49,340 --> 00:03:53,299
positives because you know exactly what

93
00:03:51,049 --> 00:03:57,970
it is why it was created and the

94
00:03:53,299 --> 00:04:01,040
implication of it when we look at

95
00:03:57,970 --> 00:04:04,810
anomaly detection or sometimes we're

96
00:04:01,040 --> 00:04:07,519
talking about machine learning the basic

97
00:04:04,810 --> 00:04:09,680
framework is you're gonna establish a

98
00:04:07,519 --> 00:04:11,449
baseline of what's normal so some type

99
00:04:09,680 --> 00:04:14,269
of mathematical calculation how many

100
00:04:11,449 --> 00:04:16,190
times as a user log in in a 24 hour

101
00:04:14,269 --> 00:04:18,380
period and then you're going to stablish

102
00:04:16,190 --> 00:04:20,478
these baselines and then a detection is

103
00:04:18,380 --> 00:04:22,250
going to be a mathematical violation so

104
00:04:20,478 --> 00:04:27,229
if it's 2x or

105
00:04:22,250 --> 00:04:29,030
deviation away from the the baseline one

106
00:04:27,230 --> 00:04:32,060
thing to look at in baselining is do you

107
00:04:29,030 --> 00:04:34,219
baseline the entity the user the host

108
00:04:32,060 --> 00:04:37,430
those types of things or do you baseline

109
00:04:34,220 --> 00:04:40,670
the set of things like the guests

110
00:04:37,430 --> 00:04:42,590
wireless machines as a set the domain

111
00:04:40,670 --> 00:04:46,130
controllers as a set the type of thing

112
00:04:42,590 --> 00:04:47,780
or do you look at them individually it

113
00:04:46,130 --> 00:04:50,150
takes time to build a baseline and

114
00:04:47,780 --> 00:04:51,770
obviously all time is not the same

115
00:04:50,150 --> 00:04:53,599
Midnight's different than the morning

116
00:04:51,770 --> 00:04:55,400
and that type of thing and when we talk

117
00:04:53,600 --> 00:04:57,530
about supervised machine learning it's

118
00:04:55,400 --> 00:05:00,530
really taking a set of variables and

119
00:04:57,530 --> 00:05:03,940
saying we're gonna study this set of

120
00:05:00,530 --> 00:05:07,190
numbers and look for changes in that

121
00:05:03,940 --> 00:05:09,230
unsupervised is computer you discover

122
00:05:07,190 --> 00:05:13,820
what the variables are and look for

123
00:05:09,230 --> 00:05:17,270
deviations there so in bad was a term

124
00:05:13,820 --> 00:05:19,310
that came out Gartner coined it in 2001

125
00:05:17,270 --> 00:05:20,630
when IDs was still coming out back in

126
00:05:19,310 --> 00:05:23,840
the days early there's a snort with

127
00:05:20,630 --> 00:05:26,419
Marty and and those things were coming

128
00:05:23,840 --> 00:05:29,810
out I am bad was Network behavioral

129
00:05:26,419 --> 00:05:32,060
anomaly detection and since it counts

130
00:05:29,810 --> 00:05:33,620
things is counting how many packets are

131
00:05:32,060 --> 00:05:35,990
going from these types of hosts of these

132
00:05:33,620 --> 00:05:38,060
types of hosts or how many packets have

133
00:05:35,990 --> 00:05:39,410
send flags in the Morse's syntax and

134
00:05:38,060 --> 00:05:41,479
that type of thing

135
00:05:39,410 --> 00:05:42,410
NetFlow became a really good source of

136
00:05:41,479 --> 00:05:45,349
data because you're not really

137
00:05:42,410 --> 00:05:47,000
inspecting what's inside of the packet

138
00:05:45,350 --> 00:05:48,530
you don't care what is in the packet you

139
00:05:47,000 --> 00:05:52,100
care about how many of those types of

140
00:05:48,530 --> 00:05:55,369
packets you have and so on Neff was lot

141
00:05:52,100 --> 00:05:59,020
cheaper especially in the early 2000s to

142
00:05:55,370 --> 00:06:01,640
monitor particularly east-west traffic

143
00:05:59,020 --> 00:06:03,799
you could look in the core deeper now

144
00:06:01,640 --> 00:06:05,900
you can get out an access layer but it's

145
00:06:03,800 --> 00:06:08,090
very quantity or metric centric it's not

146
00:06:05,900 --> 00:06:11,120
looking for a signature the trigger and

147
00:06:08,090 --> 00:06:13,310
so sometimes you'll see net flow tools

148
00:06:11,120 --> 00:06:15,890
connected to network behavioral anomaly

149
00:06:13,310 --> 00:06:17,360
detection but there's a lot of tools

150
00:06:15,890 --> 00:06:21,169
that do these things this is a list from

151
00:06:17,360 --> 00:06:23,690
Gartner that commercial tools that do

152
00:06:21,169 --> 00:06:27,049
network behavior not only detection cue

153
00:06:23,690 --> 00:06:28,760
flow from IBM and the rest so when you

154
00:06:27,050 --> 00:06:31,539
start looking at embed you're looking at

155
00:06:28,760 --> 00:06:34,699
service type threshold

156
00:06:31,539 --> 00:06:37,849
Changez so some computers are always

157
00:06:34,699 --> 00:06:40,279
using only using HTTP type of protocols

158
00:06:37,849 --> 00:06:42,289
and email and all of a sudden it's in

159
00:06:40,279 --> 00:06:45,669
detour right there's a there's a shift

160
00:06:42,289 --> 00:06:48,739
in the type of consumption happening I

161
00:06:45,669 --> 00:06:51,139
just type that not only traffic anomaly

162
00:06:48,739 --> 00:06:53,929
is the amount of data this host normally

163
00:06:51,139 --> 00:06:56,289
consumes a gig of traffic in a day today

164
00:06:53,929 --> 00:06:58,458
it has consumed a petabyte of traffic

165
00:06:56,289 --> 00:07:00,799
those allow you to do things like data

166
00:06:58,459 --> 00:07:02,929
forwarding data hoarding would be a host

167
00:07:00,799 --> 00:07:05,539
on the network that's consuming too much

168
00:07:02,929 --> 00:07:07,458
information from internal resources data

169
00:07:05,539 --> 00:07:09,409
disclosure or exfiltration as a machine

170
00:07:07,459 --> 00:07:11,079
is pushing too much data out of the

171
00:07:09,409 --> 00:07:13,099
network and those are really cool

172
00:07:11,079 --> 00:07:17,389
counters because if you're distributing

173
00:07:13,099 --> 00:07:20,839
it over something like BitTorrent or

174
00:07:17,389 --> 00:07:22,549
another distributed type of protocol you

175
00:07:20,839 --> 00:07:24,229
can't just count how many bytes are

176
00:07:22,549 --> 00:07:26,628
going to a given host you have to count

177
00:07:24,229 --> 00:07:28,909
how many have left a given host to all

178
00:07:26,629 --> 00:07:32,719
of the destinations and do math against

179
00:07:28,909 --> 00:07:35,058
that so when we first started doing

180
00:07:32,719 --> 00:07:37,699
security operations those of us have

181
00:07:35,059 --> 00:07:39,799
been doing it for a while we had alarm

182
00:07:37,699 --> 00:07:41,389
rows right you'd have an IDs or a

183
00:07:39,799 --> 00:07:43,998
firewall or something that would

184
00:07:41,389 --> 00:07:45,529
generate an alarm and there would be way

185
00:07:43,999 --> 00:07:48,529
too many of them and you would

186
00:07:45,529 --> 00:07:50,299
prioritize and triage those things was

187
00:07:48,529 --> 00:07:53,058
the higher priority where the counts

188
00:07:50,299 --> 00:07:54,589
those based on alarms and then as

189
00:07:53,059 --> 00:07:56,419
security operations involved we started

190
00:07:54,589 --> 00:07:59,479
looking at host centric based detection

191
00:07:56,419 --> 00:08:02,058
meaning let's not look at the alarms

192
00:07:59,479 --> 00:08:04,969
let's look at how many alarms each host

193
00:08:02,059 --> 00:08:10,039
has and then investigate the hosts the

194
00:08:04,969 --> 00:08:11,389
computers and then user base analysis

195
00:08:10,039 --> 00:08:13,610
started later to where you took okay

196
00:08:11,389 --> 00:08:15,110
here's all the hosts that the users are

197
00:08:13,610 --> 00:08:16,999
on and here's all the alarms that are

198
00:08:15,110 --> 00:08:18,289
associated with those hosts so we can

199
00:08:16,999 --> 00:08:20,509
draw a big circle around on that and

200
00:08:18,289 --> 00:08:22,610
investigate that as a unit of work which

201
00:08:20,509 --> 00:08:27,139
reduces the units that need to be

202
00:08:22,610 --> 00:08:29,479
investigated they also look for more

203
00:08:27,139 --> 00:08:31,729
advanced VBA is looking for deviations

204
00:08:29,479 --> 00:08:34,159
on user behavior when does a user log in

205
00:08:31,729 --> 00:08:39,919
what type of services does a user

206
00:08:34,159 --> 00:08:41,448
consume those types of things long list

207
00:08:39,919 --> 00:08:43,429
of these things and this is from a

208
00:08:41,448 --> 00:08:44,529
security planet oh and if you guys want

209
00:08:43,429 --> 00:08:46,649
this deck you can get it

210
00:08:44,529 --> 00:08:50,949
if you go to Charles hearing calm though

211
00:08:46,649 --> 00:08:53,230
301 yeah over to my LinkedIn profile or

212
00:08:50,949 --> 00:08:56,829
it's on the width food blog this whole

213
00:08:53,230 --> 00:08:58,720
deck so there's a few things on UVA some

214
00:08:56,829 --> 00:09:00,969
common types of detections or magic

215
00:08:58,720 --> 00:09:03,730
carpet so someone just logged in in

216
00:09:00,970 --> 00:09:06,850
Grand Rapids and then 30 seconds later

217
00:09:03,730 --> 00:09:07,959
they logged in from Tehran they can't

218
00:09:06,850 --> 00:09:09,759
move that fast

219
00:09:07,959 --> 00:09:13,180
so how did how do they have as a magic

220
00:09:09,759 --> 00:09:14,439
carpet detection a time of day anomalies

221
00:09:13,180 --> 00:09:16,989
someone that's always a work during the

222
00:09:14,439 --> 00:09:19,089
daytime hours is now after hours on the

223
00:09:16,990 --> 00:09:21,459
weekend are the types of hosts that

224
00:09:19,089 --> 00:09:23,620
they're accessing this administrator

225
00:09:21,459 --> 00:09:25,839
should never be on shouldn't be

226
00:09:23,620 --> 00:09:29,139
accessing source code or blueprints for

227
00:09:25,839 --> 00:09:30,430
that type of thing so that's the

228
00:09:29,139 --> 00:09:32,589
background on the definitions to get

229
00:09:30,430 --> 00:09:33,939
that out of the way pretty quick now

230
00:09:32,589 --> 00:09:35,800
let's talk about the fun stuff let's go

231
00:09:33,939 --> 00:09:37,509
into how to do some data poisoning so a

232
00:09:35,800 --> 00:09:39,160
few things to point out in data

233
00:09:37,509 --> 00:09:43,420
poisoning there's some types of

234
00:09:39,160 --> 00:09:45,730
poisoning so mass implication means sure

235
00:09:43,420 --> 00:09:47,110
I'm doing something but I'm gonna create

236
00:09:45,730 --> 00:09:49,779
a scenario that makes it look like

237
00:09:47,110 --> 00:09:52,360
everybody's doing it so if I'm scanning

238
00:09:49,779 --> 00:09:54,579
the network what if it looks like every

239
00:09:52,360 --> 00:09:55,839
host is scanning the network then how do

240
00:09:54,579 --> 00:09:59,920
you investigate that that's mass

241
00:09:55,839 --> 00:10:02,439
implication baseline boiling is fun but

242
00:09:59,920 --> 00:10:04,750
exhausting because baselines are built

243
00:10:02,439 --> 00:10:07,149
over time you can just start increasing

244
00:10:04,750 --> 00:10:10,180
generating traffic that increases the

245
00:10:07,149 --> 00:10:13,660
counters that generate the baselines so

246
00:10:10,180 --> 00:10:15,790
if you're counting how much data a group

247
00:10:13,660 --> 00:10:17,860
of hosts consumes in a day well just

248
00:10:15,790 --> 00:10:19,449
generate a little bit more on day one

249
00:10:17,860 --> 00:10:21,790
they generate a little bit more on day

250
00:10:19,449 --> 00:10:24,399
two and those baselines will slowly

251
00:10:21,790 --> 00:10:26,379
start to boil or grow and then you can

252
00:10:24,399 --> 00:10:29,160
do whatever the hell you want these are

253
00:10:26,379 --> 00:10:31,839
really good on time of day attacks just

254
00:10:29,160 --> 00:10:33,819
give one just give one attack this at

255
00:10:31,839 --> 00:10:35,319
the edge of the current window so at the

256
00:10:33,819 --> 00:10:36,519
end of the days and then a little bit

257
00:10:35,319 --> 00:10:38,920
later then a little bit later a little

258
00:10:36,519 --> 00:10:40,899
bit later and then baselines become

259
00:10:38,920 --> 00:10:44,199
useless because everybody is logging in

260
00:10:40,899 --> 00:10:46,990
all the time from everywhere attack

261
00:10:44,199 --> 00:10:50,469
masking I'll show you an example of this

262
00:10:46,990 --> 00:10:52,319
is when I do a syn scan and tools that

263
00:10:50,470 --> 00:10:55,120
are like network tools that are checking

264
00:10:52,319 --> 00:10:57,459
ass in but there was no syn ACK coming

265
00:10:55,120 --> 00:10:58,300
back so they can detect recon off of TCP

266
00:10:57,459 --> 00:11:00,069
headers

267
00:10:58,300 --> 00:11:03,490
what if I just generated a record that

268
00:11:00,070 --> 00:11:05,980
says there was a cynic right so I sin

269
00:11:03,490 --> 00:11:07,930
nothing comes back I generated record

270
00:11:05,980 --> 00:11:10,570
that says cynic it looks like it was a

271
00:11:07,930 --> 00:11:11,620
bi-directional scan I mean a

272
00:11:10,570 --> 00:11:15,760
bi-directional connection in Windows

273
00:11:11,620 --> 00:11:18,400
really not so it's changing the behavior

274
00:11:15,760 --> 00:11:19,960
or hiding the behavior there's a couple

275
00:11:18,400 --> 00:11:23,199
ways of accomplishing this or

276
00:11:19,960 --> 00:11:25,480
transporting it one is log spoofing

277
00:11:23,200 --> 00:11:27,010
which means as the attacker we're gonna

278
00:11:25,480 --> 00:11:29,830
go through some scenarios where I just

279
00:11:27,010 --> 00:11:31,900
generate a fake log and I ship it to the

280
00:11:29,830 --> 00:11:33,700
thing that analyzes logs and it doesn't

281
00:11:31,900 --> 00:11:36,819
know what to do with that log so it's

282
00:11:33,700 --> 00:11:38,920
that way the other is having the

283
00:11:36,820 --> 00:11:42,400
infrastructure generate the logs for us

284
00:11:38,920 --> 00:11:45,640
so we don't so for instance in the case

285
00:11:42,400 --> 00:11:48,189
of a net flow generation if I'm

286
00:11:45,640 --> 00:11:49,780
connected to a switch and it observes my

287
00:11:48,190 --> 00:11:52,750
fake traffic it's going to generate

288
00:11:49,780 --> 00:11:55,720
telemetry or records about that fake

289
00:11:52,750 --> 00:11:58,120
traffic and then forward it on to the

290
00:11:55,720 --> 00:11:59,770
processing source and so the places

291
00:11:58,120 --> 00:12:02,320
we'll do this will either be on a

292
00:11:59,770 --> 00:12:03,550
computer a machine a VM abductor

293
00:12:02,320 --> 00:12:06,010
container and you'll see a lot of that

294
00:12:03,550 --> 00:12:10,089
so something we control or will be

295
00:12:06,010 --> 00:12:12,990
generated by a networking device so this

296
00:12:10,090 --> 00:12:19,060
is from my tool this is a representation

297
00:12:12,990 --> 00:12:21,850
the attack on was that as you're left

298
00:12:19,060 --> 00:12:23,079
I don't do directions on your left is an

299
00:12:21,850 --> 00:12:24,850
attack that of the University of Chicago

300
00:12:23,080 --> 00:12:27,040
let me shareable as a data exfiltration

301
00:12:24,850 --> 00:12:28,540
attack from really from left to right as

302
00:12:27,040 --> 00:12:30,630
different parts of the kill chain

303
00:12:28,540 --> 00:12:34,900
getting strung together but the goal

304
00:12:30,630 --> 00:12:36,700
that's what we want in ueb a you know

305
00:12:34,900 --> 00:12:38,290
behavioral anomaly detection advanced

306
00:12:36,700 --> 00:12:41,130
analytics you want to draw a clearer

307
00:12:38,290 --> 00:12:43,390
picture that tells the security team

308
00:12:41,130 --> 00:12:46,689
here's what's going on and then they can

309
00:12:43,390 --> 00:12:48,220
respond to that what we're going to try

310
00:12:46,690 --> 00:12:50,500
to do today is either the top thing

311
00:12:48,220 --> 00:12:52,300
which is the ninja right you're

312
00:12:50,500 --> 00:12:54,520
invisible you mask your attack and they

313
00:12:52,300 --> 00:12:58,599
never see any of it or what we're gonna

314
00:12:54,520 --> 00:13:00,730
do more of today is cover it in noise

315
00:12:58,600 --> 00:13:02,410
there's just so much noise that they

316
00:13:00,730 --> 00:13:04,450
can't figure out where your attack is

317
00:13:02,410 --> 00:13:08,740
your attack is hidden somewhere and what

318
00:13:04,450 --> 00:13:10,450
we call a clouded death so the fixes for

319
00:13:08,740 --> 00:13:11,680
this I'll start with an end with this on

320
00:13:10,450 --> 00:13:16,960
the before we

321
00:13:11,680 --> 00:13:22,029
the attacks one of the core problems we

322
00:13:16,960 --> 00:13:25,089
have in the craft is IT really is an

323
00:13:22,029 --> 00:13:26,890
extension of manufacturing as a craft we

324
00:13:25,089 --> 00:13:30,160
talk about a craft it's things that are

325
00:13:26,890 --> 00:13:32,980
being created spreadsheets Word

326
00:13:30,160 --> 00:13:35,680
documents websites this things are being

327
00:13:32,980 --> 00:13:37,990
generated units widgets that are being

328
00:13:35,680 --> 00:13:40,689
shipped stored that type of thing so

329
00:13:37,990 --> 00:13:43,330
most of what we learned about IT we took

330
00:13:40,690 --> 00:13:44,800
from manufacturing but cyber security

331
00:13:43,330 --> 00:13:47,200
operations has nothing to do with

332
00:13:44,800 --> 00:13:50,349
manufacturing it's an extension of law

333
00:13:47,200 --> 00:13:53,320
enforcement as an extension of stopping

334
00:13:50,350 --> 00:13:55,450
infraction of law and violation of

335
00:13:53,320 --> 00:13:58,060
policy but we don't work that way so

336
00:13:55,450 --> 00:14:00,149
it's because we've extended from

337
00:13:58,060 --> 00:14:03,250
manufacturing sort of law enforcement

338
00:14:00,149 --> 00:14:04,660
we've picked up some bad habits but one

339
00:14:03,250 --> 00:14:08,170
of the core things as a law enforcement

340
00:14:04,660 --> 00:14:11,319
officer is you understand the importance

341
00:14:08,170 --> 00:14:15,010
of non-repudiation that the evidence you

342
00:14:11,320 --> 00:14:15,910
collect has to be viable evidence will

343
00:14:15,010 --> 00:14:18,100
hold up in court

344
00:14:15,910 --> 00:14:20,350
but when we're doing security operations

345
00:14:18,100 --> 00:14:24,430
and as I work with different

346
00:14:20,350 --> 00:14:27,430
organizations on this they just believe

347
00:14:24,430 --> 00:14:30,219
everything and so if you're a it was

348
00:14:27,430 --> 00:14:33,160
able to give this talk at DEFCON to the

349
00:14:30,220 --> 00:14:35,200
red team in the red team village that

350
00:14:33,160 --> 00:14:37,900
this is a great way to blow up the whole

351
00:14:35,200 --> 00:14:39,700
pin test do whatever you want then the

352
00:14:37,900 --> 00:14:41,380
security teams trying to respond all

353
00:14:39,700 --> 00:14:43,089
this noise you just generated and they

354
00:14:41,380 --> 00:14:45,670
can't parse what's real and what's not

355
00:14:43,089 --> 00:14:48,070
real and it's because you can't trust

356
00:14:45,670 --> 00:14:49,180
your evidence and so the first thing

357
00:14:48,070 --> 00:14:51,370
that's want to point out here is how do

358
00:14:49,180 --> 00:14:55,029
you get to a place where you can trust

359
00:14:51,370 --> 00:14:58,260
your evidence the best way that that

360
00:14:55,029 --> 00:15:00,779
exists at least an RFC is to do

361
00:14:58,260 --> 00:15:03,220
certificate based authentication between

362
00:15:00,779 --> 00:15:06,010
the logging source and your log

363
00:15:03,220 --> 00:15:11,800
collector there's a number of problems

364
00:15:06,010 --> 00:15:13,779
with this though RFC 5101 which dictates

365
00:15:11,800 --> 00:15:17,800
how IP fix which is basically the modern

366
00:15:13,779 --> 00:15:21,480
version of NetFlow it allows for a TLS

367
00:15:17,800 --> 00:15:24,339
transport but I have never seen anything

368
00:15:21,480 --> 00:15:28,089
not one network device that is able to

369
00:15:24,339 --> 00:15:31,750
generate IP fix over TLS is always over

370
00:15:28,089 --> 00:15:33,279
UDP you do have client server overhead

371
00:15:31,750 --> 00:15:35,620
and depending on how the network is

372
00:15:33,279 --> 00:15:37,180
configured if your law collector goes

373
00:15:35,620 --> 00:15:39,640
down bad things can happen on the

374
00:15:37,180 --> 00:15:42,069
network and that shuts the project down

375
00:15:39,640 --> 00:15:45,459
in general right you can also have

376
00:15:42,070 --> 00:15:47,160
reflection denial of service when you

377
00:15:45,459 --> 00:15:48,910
try to connect on a TCP handshake

378
00:15:47,160 --> 00:15:51,100
something trying to connect how can I

379
00:15:48,910 --> 00:15:53,050
try to connect and all the packets can't

380
00:15:51,100 --> 00:15:55,209
connect and you're having issues inside

381
00:15:53,050 --> 00:15:57,459
the network the second thing you can do

382
00:15:55,209 --> 00:15:59,890
is IP spoofing protection we'll talk

383
00:15:57,459 --> 00:16:04,209
about some ways of doing this just with

384
00:15:59,890 --> 00:16:06,490
UDP packets if you can lie very easily

385
00:16:04,209 --> 00:16:09,520
there's no handshake I can say my source

386
00:16:06,490 --> 00:16:12,520
IP is whatever I want and as long as the

387
00:16:09,520 --> 00:16:14,819
network will route that packet the

388
00:16:12,520 --> 00:16:18,790
there's no sin to come back there's no

389
00:16:14,820 --> 00:16:21,510
verification of path so there are some

390
00:16:18,790 --> 00:16:25,329
features inside of network switching

391
00:16:21,510 --> 00:16:28,720
that's the command for Cisco IOS

392
00:16:25,329 --> 00:16:30,969
on a reverse past reverse path and what

393
00:16:28,720 --> 00:16:34,120
this does is it tells the networking

394
00:16:30,970 --> 00:16:37,630
switch to verify that the things sending

395
00:16:34,120 --> 00:16:39,720
you the data actually is the thing that

396
00:16:37,630 --> 00:16:41,890
the idea that it owns the IP address

397
00:16:39,720 --> 00:16:44,220
that's also checking the MAC addresses

398
00:16:41,890 --> 00:16:46,329
you can spoof MAC addresses as well

399
00:16:44,220 --> 00:16:49,150
there are some emerging technologies

400
00:16:46,329 --> 00:16:50,670
like micro segmentation that can help in

401
00:16:49,150 --> 00:16:53,050
this by putting

402
00:16:50,670 --> 00:16:54,990
by controlling the flow of information

403
00:16:53,050 --> 00:16:58,560
around networks

404
00:16:54,990 --> 00:17:02,440
trusts sack from Cisco's another

405
00:16:58,560 --> 00:17:04,869
theoretical answer for controlling how

406
00:17:02,440 --> 00:17:08,530
data moves into your security segment

407
00:17:04,869 --> 00:17:11,889
you do want to tightly control access to

408
00:17:08,530 --> 00:17:13,869
the security logging infrastructure so

409
00:17:11,890 --> 00:17:15,970
it needs to be on its own network you

410
00:17:13,869 --> 00:17:19,540
need to monitor closely how data comes

411
00:17:15,970 --> 00:17:22,089
into it how data goes out of it honey

412
00:17:19,540 --> 00:17:24,579
pots are a great way or for a fall

413
00:17:22,089 --> 00:17:25,958
fallback potentially if you're under

414
00:17:24,579 --> 00:17:28,209
attack and you're some of these attacks

415
00:17:25,959 --> 00:17:29,679
we're going to see our generating recon

416
00:17:28,209 --> 00:17:32,409
activity from everything on mass

417
00:17:29,679 --> 00:17:34,929
implication the cool thing about honey

418
00:17:32,409 --> 00:17:35,990
pots is they're generally a zero and by

419
00:17:34,929 --> 00:17:38,899
themselves as

420
00:17:35,990 --> 00:17:40,250
false-positive type of scenario that you

421
00:17:38,899 --> 00:17:41,209
shouldn't be connecting to something

422
00:17:40,250 --> 00:17:42,710
that doesn't exist

423
00:17:41,210 --> 00:17:44,690
if you're doing that or something wrong

424
00:17:42,710 --> 00:17:47,090
with you so it's a great way to fall

425
00:17:44,690 --> 00:17:48,740
back and no we here's an attacker

426
00:17:47,090 --> 00:17:52,610
because the attacker disconnected to a

427
00:17:48,740 --> 00:17:55,029
non-existent device and then this one's

428
00:17:52,610 --> 00:17:59,149
really key is as you're collecting logs

429
00:17:55,029 --> 00:18:02,690
you're tagging how it was collected what

430
00:17:59,149 --> 00:18:04,279
was the IP address reported at what port

431
00:18:02,690 --> 00:18:07,730
did I receive it on what machine

432
00:18:04,279 --> 00:18:09,470
received this message and holding sort

433
00:18:07,730 --> 00:18:12,590
of a chain of custody on the flow of

434
00:18:09,470 --> 00:18:13,850
that data all right so the attacks

435
00:18:12,590 --> 00:18:15,649
ringing over aren't going to get you

436
00:18:13,850 --> 00:18:19,370
initial access or this assumes you're

437
00:18:15,649 --> 00:18:21,370
already in but everything else works so

438
00:18:19,370 --> 00:18:25,070
my favorite thing is the pump and dump

439
00:18:21,370 --> 00:18:27,139
and the way this works is generally I

440
00:18:25,070 --> 00:18:30,049
use docker containers so I spin up a

441
00:18:27,140 --> 00:18:31,669
docker container I do some and I spoof

442
00:18:30,049 --> 00:18:33,230
the MAC address in the container off so

443
00:18:31,669 --> 00:18:35,450
you have to get in a second I spit on my

444
00:18:33,230 --> 00:18:38,480
own IP address might do whatever the

445
00:18:35,450 --> 00:18:40,520
hell I want to do scan the network steal

446
00:18:38,480 --> 00:18:42,230
data run some attacks whatever I want to

447
00:18:40,520 --> 00:18:44,870
do for a period of time for me that's

448
00:18:42,230 --> 00:18:47,000
generally about three minutes and then I

449
00:18:44,870 --> 00:18:49,129
destroy the docker container spin up a

450
00:18:47,000 --> 00:18:53,510
new one with the new MAC address a new

451
00:18:49,130 --> 00:18:55,970
IP address and do it again and so that

452
00:18:53,510 --> 00:18:58,970
makes it very difficult for the security

453
00:18:55,970 --> 00:19:00,409
operations team to find me we're what

454
00:18:58,970 --> 00:19:02,779
machine I'm actually on because they

455
00:19:00,409 --> 00:19:04,070
can't track me by Mac and they don't

456
00:19:02,779 --> 00:19:06,320
have the Mac they can't find the access

457
00:19:04,070 --> 00:19:09,250
port that I'm on and so forth and if you

458
00:19:06,320 --> 00:19:11,779
can physically move that's even better

459
00:19:09,250 --> 00:19:16,880
so that's a Pompano Beach I'll show you

460
00:19:11,779 --> 00:19:20,000
and so to do it the top thing is a this

461
00:19:16,880 --> 00:19:22,250
look this is the docker command this is

462
00:19:20,000 --> 00:19:27,220
this pulls a Kali Linux docker image

463
00:19:22,250 --> 00:19:32,690
from the docker hub generates a net new

464
00:19:27,220 --> 00:19:34,640
network with this fake MAC address and

465
00:19:32,690 --> 00:19:37,700
spins it up and in this case this

466
00:19:34,640 --> 00:19:40,580
machine would get a DHCP address against

467
00:19:37,700 --> 00:19:41,720
that MAC address so that's really

468
00:19:40,580 --> 00:19:45,230
helpful if you don't understand the

469
00:19:41,720 --> 00:19:47,210
network topology yet grab a DHCP drop

470
00:19:45,230 --> 00:19:49,170
the MAC address the DHCP server will

471
00:19:47,210 --> 00:19:54,330
issue a new address

472
00:19:49,170 --> 00:19:57,030
to the new MAC address and then the news

473
00:19:54,330 --> 00:20:01,260
kill it and you just kill it right here

474
00:19:57,030 --> 00:20:06,899
and start again pocket dimension this is

475
00:20:01,260 --> 00:20:10,020
really cool so this is basically

476
00:20:06,900 --> 00:20:13,440
creating a fake network on your computer

477
00:20:10,020 --> 00:20:16,080
to do fake things it's sort of like a

478
00:20:13,440 --> 00:20:20,280
shadow campaign or your whispering lies

479
00:20:16,080 --> 00:20:23,120
and someone else reports the lies to

480
00:20:20,280 --> 00:20:27,030
your to your sim or your analytics tool

481
00:20:23,120 --> 00:20:28,739
so you can create a network that's on a

482
00:20:27,030 --> 00:20:30,809
it could be a slap to zero if you do a

483
00:20:28,740 --> 00:20:33,000
little bit of working but you could be

484
00:20:30,809 --> 00:20:35,610
the whole internet and then you spin up

485
00:20:33,000 --> 00:20:38,130
docker containers and assign them IP

486
00:20:35,610 --> 00:20:39,659
addresses of anything you want you can

487
00:20:38,130 --> 00:20:41,970
assign them for the internal domain

488
00:20:39,660 --> 00:20:44,730
controllers you can assign them for a to

489
00:20:41,970 --> 00:20:48,780
AWS machines you can create any machine

490
00:20:44,730 --> 00:20:51,450
in the world in this fake scenario and

491
00:20:48,780 --> 00:20:54,299
then you can do things to these fake

492
00:20:51,450 --> 00:20:56,490
machines so I can I can recon I can scan

493
00:20:54,299 --> 00:20:59,400
the entire Internet in this fake world I

494
00:20:56,490 --> 00:21:01,830
can stage information and this is really

495
00:20:59,400 --> 00:21:03,510
good for baseline boiling because you

496
00:21:01,830 --> 00:21:05,790
don't have to actually move the data in

497
00:21:03,510 --> 00:21:09,390
the real world you move the data in the

498
00:21:05,790 --> 00:21:10,860
fake doctor world and plugging that into

499
00:21:09,390 --> 00:21:13,830
an access switch it's going to generate

500
00:21:10,860 --> 00:21:15,928
net flow records referencing your fake

501
00:21:13,830 --> 00:21:22,860
traffic and it's gonna look real to the

502
00:21:15,929 --> 00:21:25,040
access switch so to like a Cisco 3850 so

503
00:21:22,860 --> 00:21:27,750
that's how it works that's how you do it

504
00:21:25,040 --> 00:21:29,428
you create a network bridge in docker

505
00:21:27,750 --> 00:21:31,860
it's basically going to bridge the

506
00:21:29,429 --> 00:21:33,360
physical interface on your machine is

507
00:21:31,860 --> 00:21:36,780
connected to the network you're

508
00:21:33,360 --> 00:21:39,240
attacking you're going to in this case I

509
00:21:36,780 --> 00:21:43,049
created a machine with an IP an external

510
00:21:39,240 --> 00:21:47,309
IP of 4.2 3.1 and internal 10.10 dot ten

511
00:21:43,049 --> 00:21:49,410
dot one start them both up and then you

512
00:21:47,309 --> 00:21:50,910
have shell access to do whatever you

513
00:21:49,410 --> 00:21:54,000
want to do which is generally going to

514
00:21:50,910 --> 00:21:58,200
be whatever absurd thing you want the

515
00:21:54,000 --> 00:21:59,970
security team to believe is real so tell

516
00:21:58,200 --> 00:22:02,230
your lie and then the net creates your

517
00:21:59,970 --> 00:22:09,490
lie and the network will read

518
00:22:02,230 --> 00:22:11,650
as fact log spook spoofing is easiest

519
00:22:09,490 --> 00:22:14,740
this is the lowest tech thing you just

520
00:22:11,650 --> 00:22:16,450
send a log the downside of this is you

521
00:22:14,740 --> 00:22:18,370
have to find where to send the log to I

522
00:22:16,450 --> 00:22:20,919
have a couple of techniques for figuring

523
00:22:18,370 --> 00:22:24,250
this out but doing some DNS checks

524
00:22:20,919 --> 00:22:28,510
generally will help on people just try

525
00:22:24,250 --> 00:22:30,669
like log acne Corp and it probably will

526
00:22:28,510 --> 00:22:32,590
end up at a logging server or something

527
00:22:30,669 --> 00:22:34,750
like that people are very smart in these

528
00:22:32,590 --> 00:22:36,370
things they help you out and then you

529
00:22:34,750 --> 00:22:38,110
send artificial records let me show you

530
00:22:36,370 --> 00:22:40,479
how to send artificial records and of

531
00:22:38,110 --> 00:22:45,010
course when you're doing this pump and

532
00:22:40,480 --> 00:22:47,650
dump very simple to send syslog syslog

533
00:22:45,010 --> 00:22:52,240
is a stupidest possible protocol it's

534
00:22:47,650 --> 00:22:54,460
you can use netcat so echo whatever

535
00:22:52,240 --> 00:22:56,530
message you want in the netcat to

536
00:22:54,460 --> 00:22:58,480
normally port five one four on the

537
00:22:56,530 --> 00:22:59,889
target and it will believe that thing

538
00:22:58,480 --> 00:23:04,270
just happened you can tell it anything

539
00:22:59,890 --> 00:23:05,950
you want it can be in any format boom

540
00:23:04,270 --> 00:23:07,720
any lie you want to tell as long as you

541
00:23:05,950 --> 00:23:08,860
know where to send it so I'm gonna run

542
00:23:07,720 --> 00:23:10,660
you through a scenario I was gonna do

543
00:23:08,860 --> 00:23:12,219
this live today but after we could get

544
00:23:10,660 --> 00:23:15,790
the projector to work I figured that the

545
00:23:12,220 --> 00:23:20,740
Gherkin gods we're not gonna suffer me a

546
00:23:15,790 --> 00:23:22,330
live demo so this is for records from a

547
00:23:20,740 --> 00:23:26,350
real attack okay

548
00:23:22,330 --> 00:23:28,600
I'm on ten ten ten ten and I'm doing

549
00:23:26,350 --> 00:23:29,860
cramp right so I have these four records

550
00:23:28,600 --> 00:23:32,428
that have been generated from the real

551
00:23:29,860 --> 00:23:35,678
things saying that I'm doing something

552
00:23:32,429 --> 00:23:37,120
so clear picture I'm the guy in the

553
00:23:35,679 --> 00:23:40,750
middle these are the things associated

554
00:23:37,120 --> 00:23:43,120
with me straight forward sock and roll

555
00:23:40,750 --> 00:23:45,610
with this pretty easily got to get 10.10

556
00:23:43,120 --> 00:23:48,989
10.10 off the network gotta talk to John

557
00:23:45,610 --> 00:23:54,610
Doe he's transferring information to 1.5

558
00:23:48,990 --> 00:23:57,130
so if you go to Twitter I'm at Charles

559
00:23:54,610 --> 00:23:58,959
herring that I've got this on paste bin

560
00:23:57,130 --> 00:24:01,570
you can grab this code if you want to

561
00:23:58,960 --> 00:24:07,000
run it but let me run it through it if

562
00:24:01,570 --> 00:24:08,590
you can see it so the first thing here

563
00:24:07,000 --> 00:24:12,700
is just building out some time stamps

564
00:24:08,590 --> 00:24:14,918
because vendors don't ever agree how a

565
00:24:12,700 --> 00:24:16,060
time stamp should look so I had to build

566
00:24:14,919 --> 00:24:20,940
three different times

567
00:24:16,060 --> 00:24:24,460
for four different vendors here this is

568
00:24:20,940 --> 00:24:28,480
the sim or whatever logging source I

569
00:24:24,460 --> 00:24:30,790
want to send this to I'm gonna loop

570
00:24:28,480 --> 00:24:33,040
first in second so in this case I'm

571
00:24:30,790 --> 00:24:35,980
looping for a minute I'm just gonna spew

572
00:24:33,040 --> 00:24:37,870
as many lies as I can in 60 seconds you

573
00:24:35,980 --> 00:24:39,400
could do this you do any loop you want

574
00:24:37,870 --> 00:24:43,929
but this one's there

575
00:24:39,400 --> 00:24:46,780
then I generate a random IP address for

576
00:24:43,930 --> 00:24:48,220
an attacker so this line here is just

577
00:24:46,780 --> 00:24:50,320
ten dot something that something that's

578
00:24:48,220 --> 00:24:54,250
something and it's gonna randomly

579
00:24:50,320 --> 00:24:56,800
generate that every loop and then I'm

580
00:24:54,250 --> 00:24:59,250
sending four messages one as in the

581
00:24:56,800 --> 00:25:02,740
format of Symantec endpoint protection

582
00:24:59,250 --> 00:25:05,350
the second one is in the format of Cisco

583
00:25:02,740 --> 00:25:07,690
AAS a firewall logs the third one is in

584
00:25:05,350 --> 00:25:09,189
the format of a fire I log and the

585
00:25:07,690 --> 00:25:10,360
fourth one which is I love is the

586
00:25:09,190 --> 00:25:14,020
traffic's log if you're not familiar

587
00:25:10,360 --> 00:25:16,240
traffic's it's a solid deception that or

588
00:25:14,020 --> 00:25:17,860
a honeypot type of technology and like I

589
00:25:16,240 --> 00:25:20,110
said honey pots are generally the things

590
00:25:17,860 --> 00:25:22,300
that you rely on and you know it's real

591
00:25:20,110 --> 00:25:24,370
and so the SoCs gonna have that in their

592
00:25:22,300 --> 00:25:26,590
brain and when they see a fake log

593
00:25:24,370 --> 00:25:28,780
coming from the honeypot and they don't

594
00:25:26,590 --> 00:25:32,199
go check the original honeypot they'll

595
00:25:28,780 --> 00:25:34,149
totally buy into that lie so that

596
00:25:32,200 --> 00:25:37,570
generates it when I execute that command

597
00:25:34,150 --> 00:25:41,620
it just it runs I generated in one

598
00:25:37,570 --> 00:25:46,480
minute I generated 46 almost 47,000 fake

599
00:25:41,620 --> 00:25:49,090
records referencing 11,000 fake IP

600
00:25:46,480 --> 00:25:50,800
addresses so it's 11 thousand things the

601
00:25:49,090 --> 00:25:53,500
sock has to go track down that's doing

602
00:25:50,800 --> 00:25:57,120
the exact same thing that I am and so

603
00:25:53,500 --> 00:25:59,590
now that simple graph looks like this

604
00:25:57,120 --> 00:26:01,719
these are the things implicated these

605
00:25:59,590 --> 00:26:03,280
are all of the attackers that are

606
00:26:01,720 --> 00:26:06,070
referenced in those in those fake

607
00:26:03,280 --> 00:26:07,930
records now and this is just the first

608
00:26:06,070 --> 00:26:10,270
hundred records if we blew this out this

609
00:26:07,930 --> 00:26:11,110
would be an explosion of investigations

610
00:26:10,270 --> 00:26:13,480
that you would have to go through

611
00:26:11,110 --> 00:26:16,929
because in that case is eleven thousand

612
00:26:13,480 --> 00:26:19,570
attacking hosts on the network doing bad

613
00:26:16,930 --> 00:26:22,090
behavior so talking about the

614
00:26:19,570 --> 00:26:25,000
non-repudiation some of the things that

615
00:26:22,090 --> 00:26:26,919
we currently track are the cinder host

616
00:26:25,000 --> 00:26:27,480
so where did the record come from and

617
00:26:26,920 --> 00:26:28,770
this is

618
00:26:27,480 --> 00:26:30,150
another important thing to track in all

619
00:26:28,770 --> 00:26:31,830
of your logging systems no matter what

620
00:26:30,150 --> 00:26:34,440
you're doing this unit in elastic or

621
00:26:31,830 --> 00:26:35,939
anything else is how did you get the

622
00:26:34,440 --> 00:26:40,050
record what was the first point it

623
00:26:35,940 --> 00:26:41,820
entered the system so mentioned earlier

624
00:26:40,050 --> 00:26:44,159
to spoof a log you got to know where to

625
00:26:41,820 --> 00:26:48,120
send the log to well here's a cool

626
00:26:44,160 --> 00:26:49,980
method send it everywhere there's a cool

627
00:26:48,120 --> 00:26:53,340
project on github called sampling aider

628
00:26:49,980 --> 00:26:56,010
and on sampling or you can say listen on

629
00:26:53,340 --> 00:26:57,899
port five one four and for every message

630
00:26:56,010 --> 00:27:00,180
I receive on five one four send it to

631
00:26:57,900 --> 00:27:03,390
this very very very long list of

632
00:27:00,180 --> 00:27:06,750
destinations so now you send your fake

633
00:27:03,390 --> 00:27:09,000
logs to sampling Eider sampling cater

634
00:27:06,750 --> 00:27:11,130
sends it to every possible host on the

635
00:27:09,000 --> 00:27:12,630
network and then they're all going to

636
00:27:11,130 --> 00:27:14,370
they'll receive it as long as there's

637
00:27:12,630 --> 00:27:16,590
not a firewall in the between to stop

638
00:27:14,370 --> 00:27:19,530
them so in that case you don't know that

639
00:27:16,590 --> 00:27:20,850
the message got there but it is if

640
00:27:19,530 --> 00:27:22,980
you're in a hurry and you got to get out

641
00:27:20,850 --> 00:27:25,100
of dodge that's a quick way to make that

642
00:27:22,980 --> 00:27:28,980
happen and it's just as simple as

643
00:27:25,100 --> 00:27:30,870
sampling eight where you're sending it

644
00:27:28,980 --> 00:27:32,250
what port and then the list of

645
00:27:30,870 --> 00:27:34,679
destinations and you can do that in a

646
00:27:32,250 --> 00:27:38,840
config file they can generate pretty

647
00:27:34,680 --> 00:27:38,840
quickly that only works for UDP though

648
00:27:39,170 --> 00:27:44,490
so if you are taking my advice and

649
00:27:42,150 --> 00:27:45,840
you've at least implemented encryption

650
00:27:44,490 --> 00:27:49,080
over TLS it gets a little bit more

651
00:27:45,840 --> 00:27:52,709
complicated but this is a Python script

652
00:27:49,080 --> 00:27:55,710
to send that same semantic message over

653
00:27:52,710 --> 00:27:58,230
TLS so it's just a matter of wrapping

654
00:27:55,710 --> 00:28:02,700
wrapping it in a TLS wrapper and

655
00:27:58,230 --> 00:28:05,310
shipping it over this will work if

656
00:28:02,700 --> 00:28:07,890
client authentication is not enabled so

657
00:28:05,310 --> 00:28:10,020
if if you're required to have a client

658
00:28:07,890 --> 00:28:11,730
cert I would have to somehow get a

659
00:28:10,020 --> 00:28:16,230
certificate which I shouldn't be able to

660
00:28:11,730 --> 00:28:19,770
do but but a lot of folks enable TLS but

661
00:28:16,230 --> 00:28:23,310
don't enforce TLS authentication and so

662
00:28:19,770 --> 00:28:31,170
this ten lines of code will circumvent

663
00:28:23,310 --> 00:28:34,320
that so in probe is a cool tool for

664
00:28:31,170 --> 00:28:37,350
sniffing a neck and generating net flow

665
00:28:34,320 --> 00:28:40,050
records so what you can do there is you

666
00:28:37,350 --> 00:28:42,330
can spin up in probe have it

667
00:28:40,050 --> 00:28:45,659
sniff either you're wrong neck or the

668
00:28:42,330 --> 00:28:48,030
nick of your docker bridge so in the

669
00:28:45,660 --> 00:28:51,270
case of the pocket dimension where

670
00:28:48,030 --> 00:28:53,220
you're trying to send we're trying to

671
00:28:51,270 --> 00:28:54,930
create fake traffic instead of having

672
00:28:53,220 --> 00:28:56,880
the network infrastructure send it you

673
00:28:54,930 --> 00:28:59,850
can send it if you know where to either

674
00:28:56,880 --> 00:29:03,060
using a UDP spray with this applicator

675
00:28:59,850 --> 00:29:05,610
to send it everywhere or knowing where

676
00:29:03,060 --> 00:29:07,139
the collector is you install em probe

677
00:29:05,610 --> 00:29:09,389
you point it to either sampling heater

678
00:29:07,140 --> 00:29:11,130
or the collector you generate your

679
00:29:09,390 --> 00:29:14,070
traffic it's sniffing your network

680
00:29:11,130 --> 00:29:16,350
interface and generating net flow

681
00:29:14,070 --> 00:29:18,750
metrics about that information and

682
00:29:16,350 --> 00:29:20,520
forwarding it off so you do the bad

683
00:29:18,750 --> 00:29:21,900
traffic it sniffs the bad traffic it

684
00:29:20,520 --> 00:29:23,520
generates enough flow about that bad

685
00:29:21,900 --> 00:29:29,700
traffic and sends it on to the

686
00:29:23,520 --> 00:29:31,440
monitoring services some as we move out

687
00:29:29,700 --> 00:29:34,770
a syslog into the brave in the world of

688
00:29:31,440 --> 00:29:36,780
rest api's this is how to lie to

689
00:29:34,770 --> 00:29:38,129
elasticsearch you know it's not unique

690
00:29:36,780 --> 00:29:41,430
to elasticsearch anything using a REST

691
00:29:38,130 --> 00:29:44,730
API you just post whatever you want - D

692
00:29:41,430 --> 00:29:46,050
into into the interface and you can lie

693
00:29:44,730 --> 00:29:47,490
directly into it

694
00:29:46,050 --> 00:29:49,919
generally the elasticsearch you're gonna

695
00:29:47,490 --> 00:29:52,140
have logs - - and but anyway if you need

696
00:29:49,920 --> 00:29:53,880
to go - straight to an API your that's a

697
00:29:52,140 --> 00:30:02,340
curl command so nothing complicated

698
00:29:53,880 --> 00:30:04,020
there so with a mass implication for in

699
00:30:02,340 --> 00:30:06,360
bad particularly if you need to recon if

700
00:30:04,020 --> 00:30:07,560
you want to scan the whole network this

701
00:30:06,360 --> 00:30:11,990
is very similar to what we're showing

702
00:30:07,560 --> 00:30:18,899
before is generate a pocket dimension

703
00:30:11,990 --> 00:30:21,720
have all of spin-up multiple IP

704
00:30:18,900 --> 00:30:24,270
addresses in the pocket dimension have

705
00:30:21,720 --> 00:30:26,490
all of them scan the fake network that

706
00:30:24,270 --> 00:30:27,720
will generate net flow records and then

707
00:30:26,490 --> 00:30:29,700
you'll have the same thing you'll have

708
00:30:27,720 --> 00:30:34,610
every machine on the network guilty of

709
00:30:29,700 --> 00:30:34,610
scanning the network right so

710
00:30:35,450 --> 00:30:55,460
this is um which one's this one I forgot

711
00:30:44,570 --> 00:30:56,990
this one hope it's not important oh I

712
00:30:55,460 --> 00:30:58,220
know this is okay so you're scanning the

713
00:30:56,990 --> 00:31:01,190
network and you're getting sins than

714
00:30:58,220 --> 00:31:03,170
those syntax if you scan those same

715
00:31:01,190 --> 00:31:05,390
machines inside the fake Network and the

716
00:31:03,170 --> 00:31:06,770
fake network is generating the sins the

717
00:31:05,390 --> 00:31:08,540
syntax and the bi-directional traffic

718
00:31:06,770 --> 00:31:11,480
they're gonna generate net flow records

719
00:31:08,540 --> 00:31:14,830
of that bi-directional traffic which

720
00:31:11,480 --> 00:31:16,610
will make the system think that

721
00:31:14,830 --> 00:31:18,409
bi-directional traffic happened in the

722
00:31:16,610 --> 00:31:22,280
real world but it really only happened

723
00:31:18,410 --> 00:31:24,380
in the pocket dimension so do good

724
00:31:22,280 --> 00:31:27,200
traffic in the pocket dimension bad

725
00:31:24,380 --> 00:31:29,840
traffic on the network it will merge in

726
00:31:27,200 --> 00:31:31,940
and become good traffic and the security

727
00:31:29,840 --> 00:31:35,629
monitoring because it looks like

728
00:31:31,940 --> 00:31:38,560
bi-directional traffic happened and then

729
00:31:35,630 --> 00:31:41,270
we talked about this earlier this is

730
00:31:38,560 --> 00:31:45,200
baseline boiling this is just creating

731
00:31:41,270 --> 00:31:48,200
more and more packets each day so slowly

732
00:31:45,200 --> 00:31:50,540
raising it up the thing that's can be

733
00:31:48,200 --> 00:31:53,750
complicated here is you need to

734
00:31:50,540 --> 00:31:58,460
understand if the systems are baselining

735
00:31:53,750 --> 00:32:01,490
against a set so all manufacturing

736
00:31:58,460 --> 00:32:03,170
workers or is it each user normally it's

737
00:32:01,490 --> 00:32:04,580
going to be set based logic so you don't

738
00:32:03,170 --> 00:32:08,060
have to understand you don't need to

739
00:32:04,580 --> 00:32:11,540
know every user but in but even if you

740
00:32:08,060 --> 00:32:13,070
were every host even but you can just

741
00:32:11,540 --> 00:32:16,430
generate metrics on everything just

742
00:32:13,070 --> 00:32:18,860
generate a little bit maybe a Meg of

743
00:32:16,430 --> 00:32:21,530
traffic on network behavioral stuff on

744
00:32:18,860 --> 00:32:23,330
day one and then a mega half on day two

745
00:32:21,530 --> 00:32:25,820
and that's gonna get added on to the

746
00:32:23,330 --> 00:32:27,679
existing baselines and then each day

747
00:32:25,820 --> 00:32:30,560
just continue to increase that and

748
00:32:27,680 --> 00:32:34,130
essentially will render all of the

749
00:32:30,560 --> 00:32:39,310
baselines useless so a couple of attacks

750
00:32:34,130 --> 00:32:42,320
for that would be Geographic so

751
00:32:39,310 --> 00:32:44,030
generating fake logs of logins make more

752
00:32:42,320 --> 00:32:47,060
logins happen than are really happening

753
00:32:44,030 --> 00:32:49,070
successful logins so that it looks like

754
00:32:47,060 --> 00:32:52,279
the traffic or the volume of logins

755
00:32:49,070 --> 00:32:55,189
our grater and then diversify where the

756
00:32:52,279 --> 00:32:56,899
logging in from and just slowly start

757
00:32:55,190 --> 00:32:58,460
bringing bringing that up you could also

758
00:32:56,899 --> 00:33:01,158
use this as an attack if you want to

759
00:32:58,460 --> 00:33:03,500
violate the baselines by having

760
00:33:01,159 --> 00:33:05,720
violations of every user every user just

761
00:33:03,500 --> 00:33:08,120
did a magic carpet so every user logged

762
00:33:05,720 --> 00:33:09,950
in from every country in the world and

763
00:33:08,120 --> 00:33:15,350
so there's been a matter of generating

764
00:33:09,950 --> 00:33:16,340
that that metric so just to recap and

765
00:33:15,350 --> 00:33:19,610
we'll have some questions

766
00:33:16,340 --> 00:33:24,320
TLS when you can do it

767
00:33:19,610 --> 00:33:27,158
IP spoofing segment your security

768
00:33:24,320 --> 00:33:29,960
architecture into something that

769
00:33:27,159 --> 00:33:33,320
promotes the ability to get bad data in

770
00:33:29,960 --> 00:33:34,789
there using ackles and so forth honey

771
00:33:33,320 --> 00:33:38,418
pots as a backup and then chanock

772
00:33:34,789 --> 00:33:41,929
custody you can grab the download either

773
00:33:38,419 --> 00:33:43,370
at the blog my twitter thing and then if

774
00:33:41,929 --> 00:33:45,649
you go to twitter at charles herring you

775
00:33:43,370 --> 00:33:47,360
can grab the paste bin for the script if

776
00:33:45,649 --> 00:33:49,268
you want to play around with the strip

777
00:33:47,360 --> 00:33:52,279
of the deck does have all the code in it

778
00:33:49,269 --> 00:33:59,139
does anyone have any questions that's

779
00:33:52,279 --> 00:33:59,139
cool to be recorded you may now clap

