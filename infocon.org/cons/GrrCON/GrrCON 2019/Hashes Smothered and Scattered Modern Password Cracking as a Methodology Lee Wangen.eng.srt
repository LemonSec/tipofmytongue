1
00:00:00,000 --> 00:00:24,619
oh I hate plants right now I know all

2
00:00:10,800 --> 00:00:24,619
2020 there you go

3
00:00:34,820 --> 00:00:38,559
I should have borrowed the penis suplex

4
00:00:36,350 --> 00:00:38,559
shirt

5
00:01:49,740 --> 00:01:52,890
[Music]

6
00:03:07,430 --> 00:03:12,659
all right I guess we'll get started

7
00:03:10,190 --> 00:03:16,440
welcome to modern password cracking as

8
00:03:12,659 --> 00:03:18,959
methodology also called hashes scattered

9
00:03:16,440 --> 00:03:23,489
smothered covered for all your Waffle

10
00:03:18,959 --> 00:03:25,019
House fans Who am I I am NOT Joshua

11
00:03:23,489 --> 00:03:27,209
Platts he unfortunately couldn't be here

12
00:03:25,019 --> 00:03:29,159
he's my co-presenter for this talk he's

13
00:03:27,209 --> 00:03:33,659
done a lot of the research with me

14
00:03:29,159 --> 00:03:35,700
so there's some info on him I am Li Wang

15
00:03:33,659 --> 00:03:37,440
and I'm and the security consultant at

16
00:03:35,700 --> 00:03:41,339
Optive I work on the attack and pen side

17
00:03:37,440 --> 00:03:42,659
I hack things for fun as well as a job I

18
00:03:41,340 --> 00:03:44,910
just happen to get paid for it

19
00:03:42,659 --> 00:03:46,739
I've been in the InfoSec game for about

20
00:03:44,910 --> 00:03:51,660
five years prior to that I was in the

21
00:03:46,739 --> 00:03:55,199
military along with Josh we kind of run

22
00:03:51,660 --> 00:03:56,579
the cracking program over adoptive so

23
00:03:55,199 --> 00:03:58,859
we've been doing a lot of enterprise

24
00:03:56,579 --> 00:04:01,230
password assessments and that's kind of

25
00:03:58,859 --> 00:04:02,519
what this talk is focused on where we're

26
00:04:01,230 --> 00:04:04,260
not looking at you know one or two

27
00:04:02,519 --> 00:04:07,139
hashes that we got from responder we're

28
00:04:04,260 --> 00:04:11,220
looking at an entire enterprise you know

29
00:04:07,139 --> 00:04:14,250
again an entire ad dumper NTDs where

30
00:04:11,220 --> 00:04:18,470
we're going to dump all of your user

31
00:04:14,250 --> 00:04:18,470
hashes and recover as many as we can

32
00:04:19,579 --> 00:04:26,760
octave is the world's leading security

33
00:04:23,760 --> 00:04:29,060
solutions integrator we do cyber

34
00:04:26,760 --> 00:04:31,320
adoption operations threat management

35
00:04:29,060 --> 00:04:33,720
and we are currently looking to hire

36
00:04:31,320 --> 00:04:36,539
senior consultant on the attack content

37
00:04:33,720 --> 00:04:39,240
side so if you are looking to join an

38
00:04:36,539 --> 00:04:44,430
awesome team come see me or visit that

39
00:04:39,240 --> 00:04:47,820
website why does this matter so here's

40
00:04:44,430 --> 00:04:49,830
some examples from real world stuff that

41
00:04:47,820 --> 00:04:52,250
we've seen in the last few days or for

42
00:04:49,830 --> 00:04:54,770
the last few weeks so you can see week

43
00:04:52,250 --> 00:04:56,870
something using rock ooh that's the

44
00:04:54,770 --> 00:05:00,140
default word list that comes bundled in

45
00:04:56,870 --> 00:05:02,360
with Cowie we actually used a different

46
00:05:00,140 --> 00:05:04,250
word list initially but then when we

47
00:05:02,360 --> 00:05:07,940
realized how weak the password is we hit

48
00:05:04,250 --> 00:05:10,430
with rock use just to show that was a

49
00:05:07,940 --> 00:05:15,200
domain admin account that we were able

50
00:05:10,430 --> 00:05:19,670
to pop using using pirarucu we find all

51
00:05:15,200 --> 00:05:22,760
the time on engagements we have blank

52
00:05:19,670 --> 00:05:27,020
passwords we have default passwords fall

53
00:05:22,760 --> 00:05:29,930
2019 bein as a password common

54
00:05:27,020 --> 00:05:31,969
credentials all of that that's gonna be

55
00:05:29,930 --> 00:05:33,650
our way in a lot of times on an

56
00:05:31,970 --> 00:05:34,970
engagement especially if you have over

57
00:05:33,650 --> 00:05:38,719
about a thousand employees in your

58
00:05:34,970 --> 00:05:41,300
company I guarantee you one of them is

59
00:05:38,720 --> 00:05:46,010
using fall 2119 right now and all I need

60
00:05:41,300 --> 00:05:51,410
this one so what kind of hardware are we

61
00:05:46,010 --> 00:05:54,469
using adoptive so we kind of broke the

62
00:05:51,410 --> 00:05:56,990
budget a little bit we'll get to this in

63
00:05:54,470 --> 00:05:59,270
a little bit but we got the budget to

64
00:05:56,990 --> 00:06:00,710
get three hundred and twenty GPUs that's

65
00:05:59,270 --> 00:06:04,310
really the important number there all

66
00:06:00,710 --> 00:06:06,890
the rest has kind of fluff we have moved

67
00:06:04,310 --> 00:06:10,310
on to using cloud computing as well as

68
00:06:06,890 --> 00:06:13,760
using our own internal tools so really

69
00:06:10,310 --> 00:06:16,460
the game has changed with AWS and other

70
00:06:13,760 --> 00:06:19,490
cloud computing services as far as the

71
00:06:16,460 --> 00:06:21,590
amount of crashes that we can do last

72
00:06:19,490 --> 00:06:24,020
year when we were preparing this talk we

73
00:06:21,590 --> 00:06:28,159
were shooting from up to Tara hashes

74
00:06:24,020 --> 00:06:30,320
which in ntlm which is about two two

75
00:06:28,160 --> 00:06:32,540
trillion guesses per second as you'll

76
00:06:30,320 --> 00:06:35,840
see later on we went a little bit above

77
00:06:32,540 --> 00:06:37,790
that and hit 22 terror hashes so 22

78
00:06:35,840 --> 00:06:39,500
trillion guesses per second allowing us

79
00:06:37,790 --> 00:06:43,130
to brute force the entire a character

80
00:06:39,500 --> 00:06:45,020
key space in under 10 minutes so if you

81
00:06:43,130 --> 00:06:50,060
haven't made character password policy

82
00:06:45,020 --> 00:06:53,330
it is dead so you guys want to do some

83
00:06:50,060 --> 00:06:55,400
cracking right I'm sure anybody that's

84
00:06:53,330 --> 00:06:58,099
familiar with the OSTP Todd knows about

85
00:06:55,400 --> 00:07:00,109
John the Ripper John the Ripper and

86
00:06:58,100 --> 00:07:00,650
rainbow tables those used to be the way

87
00:07:00,110 --> 00:07:02,689
to do it

88
00:07:00,650 --> 00:07:04,219
CPU cracking is real

89
00:07:02,689 --> 00:07:06,049
not worth it anymore it's kind of gone

90
00:07:04,219 --> 00:07:07,699
the way of a lot of uh you know with the

91
00:07:06,049 --> 00:07:12,318
Bitcoin mining and things like that

92
00:07:07,699 --> 00:07:15,979
we've moved on to to GPU cracking we

93
00:07:12,319 --> 00:07:18,289
know like if we're on site and we have

94
00:07:15,979 --> 00:07:21,529
our laptops and we don't have you know

95
00:07:18,289 --> 00:07:23,299
viable internet you know you can use

96
00:07:21,529 --> 00:07:24,979
your laptop

97
00:07:23,299 --> 00:07:28,878
we do have an in-house mining rig

98
00:07:24,979 --> 00:07:30,349
actually to in-house mining rigs but

99
00:07:28,879 --> 00:07:32,209
then we're also using a lot of cloud

100
00:07:30,349 --> 00:07:35,688
stuff it is scalable in the cloud

101
00:07:32,209 --> 00:07:38,719
infinitely scalable they will AWS is

102
00:07:35,689 --> 00:07:41,529
happy to take your credit card and happy

103
00:07:38,719 --> 00:07:44,389
to let you continue to pay for more GPUs

104
00:07:41,529 --> 00:07:48,199
rainbow tables come up a lot in talks

105
00:07:44,389 --> 00:07:52,159
they're kind of dead the only reason

106
00:07:48,199 --> 00:07:55,639
that they're in here is people still

107
00:07:52,159 --> 00:07:58,188
like to use them however you'll see it's

108
00:07:55,639 --> 00:08:00,019
actually faster than looking up stuff on

109
00:07:58,189 --> 00:08:06,619
a rainbow table to just prove force it

110
00:08:00,019 --> 00:08:10,519
through hash cat so cracking in the

111
00:08:06,619 --> 00:08:13,699
cloud in 2017 AWS released their GPU

112
00:08:10,519 --> 00:08:15,469
boxes this was a game changer for us and

113
00:08:13,699 --> 00:08:16,519
we are a consulting firm everything kind

114
00:08:15,469 --> 00:08:18,498
of comes down to the bottom line

115
00:08:16,519 --> 00:08:20,989
especially when we're building stuff out

116
00:08:18,499 --> 00:08:23,929
to clients so we we build everything by

117
00:08:20,989 --> 00:08:25,729
the Giga hash our the reason that's

118
00:08:23,929 --> 00:08:30,258
important is because this number is

119
00:08:25,729 --> 00:08:32,929
linear so I long as you just continue to

120
00:08:30,259 --> 00:08:35,870
add more GPUs that number doesn't change

121
00:08:32,929 --> 00:08:37,008
so it's no longer a matter of how long

122
00:08:35,870 --> 00:08:39,110
do you want to take to crack a password

123
00:08:37,009 --> 00:08:43,099
it's held much money do you want to

124
00:08:39,110 --> 00:08:47,149
spend because I can run you know 320

125
00:08:43,099 --> 00:08:49,550
GPUs you know $200 for the hour and

126
00:08:47,149 --> 00:08:53,000
crack your character password in an hour

127
00:08:49,550 --> 00:08:56,420
or I could spend that same $300 or $200

128
00:08:53,000 --> 00:09:00,199
and run you know a smaller cracker for a

129
00:08:56,420 --> 00:09:01,579
month so it's no longer a matter of how

130
00:09:00,199 --> 00:09:03,079
much time is it going to take it's a

131
00:09:01,579 --> 00:09:05,209
matter of how much money it's gonna take

132
00:09:03,079 --> 00:09:07,910
and so we'll get into that later and

133
00:09:05,209 --> 00:09:09,199
show how you know you really need to

134
00:09:07,910 --> 00:09:14,060
step up your your come

135
00:09:09,200 --> 00:09:18,320
city we do have on site or in our labs

136
00:09:14,060 --> 00:09:21,170
we do have a cracker that has 610 ad

137
00:09:18,320 --> 00:09:23,389
GPUs those are not the tea eyes we

138
00:09:21,170 --> 00:09:25,849
bought them just before the tea I came

139
00:09:23,389 --> 00:09:30,730
out however in the future we are looking

140
00:09:25,850 --> 00:09:34,790
to upgrade to a box that has 828 et eyes

141
00:09:30,730 --> 00:09:37,300
which should give us a much more capable

142
00:09:34,790 --> 00:09:42,349
machine to go along with our AWS

143
00:09:37,300 --> 00:09:44,510
instances so in September of 2019 so

144
00:09:42,350 --> 00:09:48,649
very very recently they released a brand

145
00:09:44,510 --> 00:09:50,689
new box here on AWS it's still a little

146
00:09:48,649 --> 00:09:52,699
bit expensive compared to building our

147
00:09:50,690 --> 00:09:55,670
own however again it's infinitely

148
00:09:52,699 --> 00:09:59,839
scalable and it's a little bit cheaper

149
00:09:55,670 --> 00:10:01,310
than the P threes the T 4 GPUs give us a

150
00:09:59,839 --> 00:10:04,100
hundred and forty-three gig hash per

151
00:10:01,310 --> 00:10:06,529
second and that's for each instance and

152
00:10:04,100 --> 00:10:11,300
so we can continue to add more and more

153
00:10:06,529 --> 00:10:14,839
instances as we move forward we did try

154
00:10:11,300 --> 00:10:18,019
this and there was an issue with the

155
00:10:14,839 --> 00:10:20,990
benchmarking where AWS because we were

156
00:10:18,019 --> 00:10:23,240
sharing resources with other people on

157
00:10:20,990 --> 00:10:25,040
the same box they weren't giving us the

158
00:10:23,240 --> 00:10:26,329
hundred percent of the GPU that they

159
00:10:25,040 --> 00:10:28,849
said they were giving us so the

160
00:10:26,329 --> 00:10:30,920
benchmarks that they were claiming to

161
00:10:28,850 --> 00:10:33,220
have were actually lower than what we

162
00:10:30,920 --> 00:10:35,930
were seeing in real world applications

163
00:10:33,220 --> 00:10:38,360
this didn't really make us too happy so

164
00:10:35,930 --> 00:10:40,489
we started looking at other options and

165
00:10:38,360 --> 00:10:42,769
quite frankly at this moment you can't

166
00:10:40,490 --> 00:10:45,500
be David ws4 price if you're looking at

167
00:10:42,769 --> 00:10:47,209
cloud there are like a few things like

168
00:10:45,500 --> 00:10:50,720
supercomputers through universities and

169
00:10:47,209 --> 00:10:53,869
stuff but you you got into some of some

170
00:10:50,720 --> 00:10:58,190
interesting legal issues with that again

171
00:10:53,870 --> 00:11:00,019
if you're doing client work I'm gonna go

172
00:10:58,190 --> 00:11:01,490
over some of the terms that we use just

173
00:11:00,019 --> 00:11:06,170
so we're all kind of speaking the same

174
00:11:01,490 --> 00:11:08,149
language so a mask a mask is the makeup

175
00:11:06,170 --> 00:11:10,760
of word broken into its character set a

176
00:11:08,149 --> 00:11:12,740
good example of this is all 2019

177
00:11:10,760 --> 00:11:16,250
starting with a capital letter would be

178
00:11:12,740 --> 00:11:17,720
an uppercase letter followed by three

179
00:11:16,250 --> 00:11:20,480
lowercase letters and then

180
00:11:17,720 --> 00:11:22,550
four digits right the reason this is

181
00:11:20,480 --> 00:11:24,949
important is because if I'm using a mask

182
00:11:22,550 --> 00:11:30,829
to brute-force your password that mask

183
00:11:24,949 --> 00:11:32,930
is going to allow me to significantly

184
00:11:30,829 --> 00:11:34,699
reduce the amount of characters that I'm

185
00:11:32,930 --> 00:11:36,620
trying to brute force against so I'm

186
00:11:34,699 --> 00:11:39,410
guessing against common common patterns

187
00:11:36,620 --> 00:11:41,060
that I see so if a company says we have

188
00:11:39,410 --> 00:11:43,250
a 12 character password when we enforce

189
00:11:41,060 --> 00:11:45,859
complexity with digits and special

190
00:11:43,250 --> 00:11:47,689
characters I say oh that's great and

191
00:11:45,860 --> 00:11:49,910
then I put a mask in that starts with a

192
00:11:47,689 --> 00:11:51,920
capital letter and then has a bunch of

193
00:11:49,910 --> 00:11:53,930
lowercase letters trails with digits and

194
00:11:51,920 --> 00:11:57,469
trails with a special character and now

195
00:11:53,930 --> 00:11:59,359
I'm only really brute-forcing probably

196
00:11:57,470 --> 00:12:02,120
about eight characters again so I've

197
00:11:59,360 --> 00:12:04,339
reduced that that time to crack your

198
00:12:02,120 --> 00:12:08,600
passwords from you know multiple weeks

199
00:12:04,339 --> 00:12:10,790
two months to about three days to go

200
00:12:08,600 --> 00:12:12,050
through your ear twelve character he

201
00:12:10,790 --> 00:12:15,079
said no I'm not gonna get a hundred

202
00:12:12,050 --> 00:12:18,199
percent of those but again if I've got a

203
00:12:15,079 --> 00:12:22,430
company with 22,000 users and you say

204
00:12:18,199 --> 00:12:25,040
I've got you know this complexity we we

205
00:12:22,430 --> 00:12:27,649
see that you have just dude of like the

206
00:12:25,040 --> 00:12:29,149
way humans psychology works they'll

207
00:12:27,649 --> 00:12:31,220
start with the uppercase letter and then

208
00:12:29,149 --> 00:12:32,959
they finish off with their digits and

209
00:12:31,220 --> 00:12:35,180
they're special characters so that's a

210
00:12:32,959 --> 00:12:37,388
really important thing because masks

211
00:12:35,180 --> 00:12:40,160
help you crack things a lot faster

212
00:12:37,389 --> 00:12:42,230
hybrid attack is where you take a word

213
00:12:40,160 --> 00:12:44,750
list and then you append a brute force

214
00:12:42,230 --> 00:12:47,269
either to the preheater prepend or

215
00:12:44,750 --> 00:12:51,290
append a brute force to it so you would

216
00:12:47,269 --> 00:12:54,410
take say the company name so Optive

217
00:12:51,290 --> 00:12:56,029
right and i would either have three to

218
00:12:54,410 --> 00:12:57,949
four characters before and three to four

219
00:12:56,029 --> 00:13:00,529
characters after Optive and I would

220
00:12:57,949 --> 00:13:02,508
brute force any combination of things

221
00:13:00,529 --> 00:13:04,399
with three characters before opt in for

222
00:13:02,509 --> 00:13:07,250
three characters after Optive which

223
00:13:04,399 --> 00:13:08,629
would help me again attack your

224
00:13:07,250 --> 00:13:10,790
passwords a lot quicker because i'm

225
00:13:08,629 --> 00:13:14,899
those you know four characters or five

226
00:13:10,790 --> 00:13:17,089
characters and Optive I'm not having the

227
00:13:14,899 --> 00:13:19,819
brute force against so I'm significantly

228
00:13:17,089 --> 00:13:21,410
reducing the GPU cycles the difference

229
00:13:19,819 --> 00:13:23,689
between a word list and a password dump

230
00:13:21,410 --> 00:13:26,110
this one comes up a lot so a word list

231
00:13:23,689 --> 00:13:29,120
is something that we use to generate

232
00:13:26,110 --> 00:13:30,499
potential passwords using rules so a

233
00:13:29,120 --> 00:13:33,439
word list is going to be

234
00:13:30,499 --> 00:13:35,659
dictionary words I use this a lot if I

235
00:13:33,439 --> 00:13:37,218
am I'm based out of Columbus Ohio so if

236
00:13:35,659 --> 00:13:39,079
I'm growing up against the company in

237
00:13:37,219 --> 00:13:40,639
Columbus Ohio I'm gonna use Ohio State

238
00:13:39,079 --> 00:13:43,159
I'm gonna use Buckeyes I'm gonna use

239
00:13:40,639 --> 00:13:46,309
Columbus I'm gonna use the company name

240
00:13:43,159 --> 00:13:49,849
as a word list where as a password dump

241
00:13:46,309 --> 00:13:52,039
is gonna be the like actual passwords

242
00:13:49,849 --> 00:13:53,809
that were cracked and then we're feeding

243
00:13:52,039 --> 00:13:55,879
those into the cracker to try against it

244
00:13:53,809 --> 00:13:57,049
so that would be your fall 2019 Bane and

245
00:13:55,879 --> 00:13:58,669
things like that

246
00:13:57,049 --> 00:14:01,579
the difference is is when you apply

247
00:13:58,669 --> 00:14:03,919
rules to a word list they will modify

248
00:14:01,579 --> 00:14:06,258
themselves into what looks like the

249
00:14:03,919 --> 00:14:10,669
password dump but a password dump will

250
00:14:06,259 --> 00:14:13,639
never come back and and change itself

251
00:14:10,669 --> 00:14:14,659
back to just a dictionary word so it's

252
00:14:13,639 --> 00:14:16,939
important to kind of make that

253
00:14:14,659 --> 00:14:18,979
distinction so if you're using rules

254
00:14:16,939 --> 00:14:20,978
with your password attacks you're

255
00:14:18,979 --> 00:14:24,859
probably gonna want to use a word list

256
00:14:20,979 --> 00:14:26,869
and you know we can get into like really

257
00:14:24,859 --> 00:14:30,469
deep details on word list but using

258
00:14:26,869 --> 00:14:32,869
common dictionary words you know we've

259
00:14:30,469 --> 00:14:36,499
got a script that will actually you can

260
00:14:32,869 --> 00:14:38,959
feed common music lyrics and movie

261
00:14:36,499 --> 00:14:40,519
quotes and things like that we had one

262
00:14:38,959 --> 00:14:42,649
guy that told us that there was no way

263
00:14:40,519 --> 00:14:45,319
we could ever crack his 28th character

264
00:14:42,649 --> 00:14:47,539
password and imagine his surprise when

265
00:14:45,319 --> 00:14:50,329
we came back with yeah we found it it's

266
00:14:47,539 --> 00:14:51,559
one ring to rule them all so he thought

267
00:14:50,329 --> 00:14:53,748
he was really secure because that's a

268
00:14:51,559 --> 00:14:55,699
really long password right but we have

269
00:14:53,749 --> 00:14:58,009
this script that we feed you know common

270
00:14:55,699 --> 00:14:59,899
movie stuff in and through some of us

271
00:14:58,009 --> 00:15:03,019
and we found out that he was like a huge

272
00:14:59,899 --> 00:15:05,119
Lord of the Ring span so we were like

273
00:15:03,019 --> 00:15:06,949
well let's try Lord of the Rings and the

274
00:15:05,119 --> 00:15:09,979
script will actually pull out like long

275
00:15:06,949 --> 00:15:13,309
sentences or larger chunks of things

276
00:15:09,979 --> 00:15:16,429
that and you can set it to grab as many

277
00:15:13,309 --> 00:15:18,079
words as you want and then you know the

278
00:15:16,429 --> 00:15:21,858
reason word lists are really effective

279
00:15:18,079 --> 00:15:24,649
everyone's familiar with the xkcd thing

280
00:15:21,859 --> 00:15:27,139
right the horse battery tree staple

281
00:15:24,649 --> 00:15:30,249
thing well if I'm using a word list I

282
00:15:27,139 --> 00:15:32,329
can put a rule in to take the top 5,000

283
00:15:30,249 --> 00:15:33,979
most common words in the English

284
00:15:32,329 --> 00:15:36,319
language and just start creating

285
00:15:33,979 --> 00:15:39,409
different word lists out of that and

286
00:15:36,319 --> 00:15:41,569
then try those as passwords so past

287
00:15:39,409 --> 00:15:44,269
phrases are still stronger because it's

288
00:15:41,569 --> 00:15:47,929
still going to take me a longer time but

289
00:15:44,269 --> 00:15:50,839
it's theirs they're still not quite as

290
00:15:47,929 --> 00:15:54,589
secure as just going with like a random

291
00:15:50,839 --> 00:15:57,350
thing all right so what kind of tools

292
00:15:54,589 --> 00:15:59,809
are we using this is a great tool a

293
00:15:57,350 --> 00:16:02,949
great quote right if your only tool is a

294
00:15:59,809 --> 00:16:07,129
Hammer Every Problem looks like a nail

295
00:16:02,949 --> 00:16:09,498
so in our kit we use hash cap which is a

296
00:16:07,129 --> 00:16:11,689
hammer hash topless is a new tool that

297
00:16:09,499 --> 00:16:14,569
we're using internally it is an

298
00:16:11,689 --> 00:16:16,730
open-source tool you can grab it off of

299
00:16:14,569 --> 00:16:18,679
github all it is is kind of like an

300
00:16:16,730 --> 00:16:20,389
orchestration engine for hash cat what

301
00:16:18,679 --> 00:16:23,839
it does is it allows you to stand up

302
00:16:20,389 --> 00:16:25,220
multiple different nodes and tie them

303
00:16:23,839 --> 00:16:31,429
all together essentially creating this

304
00:16:25,220 --> 00:16:34,459
supercomputer which is running hash jobs

305
00:16:31,429 --> 00:16:36,379
on every one of those computers this is

306
00:16:34,459 --> 00:16:40,569
how we're able to to integrate all of

307
00:16:36,379 --> 00:16:43,939
those you know 400 or 320 GPUs together

308
00:16:40,569 --> 00:16:45,860
through AWS we're able to feed those all

309
00:16:43,939 --> 00:16:47,959
through hash cat and then hash can take

310
00:16:45,860 --> 00:16:50,240
our hash topless hash topless then

311
00:16:47,959 --> 00:16:52,248
chunks all of those jobs up sends them

312
00:16:50,240 --> 00:16:55,459
all to the different hash tag workers

313
00:16:52,249 --> 00:16:59,360
and allows it to crack simultaneously

314
00:16:55,459 --> 00:17:02,029
across that entire space cool is a

315
00:16:59,360 --> 00:17:03,860
pretty interesting tool it's great if

316
00:17:02,029 --> 00:17:06,919
you're kind of lost or if you're on site

317
00:17:03,860 --> 00:17:09,500
and you're doing like WPA stuff it will

318
00:17:06,919 --> 00:17:12,319
scrape a website and generate a word

319
00:17:09,500 --> 00:17:15,289
list out of that website so it old fine

320
00:17:12,319 --> 00:17:17,898
you know company names and like their

321
00:17:15,289 --> 00:17:20,809
core values and things like that I I

322
00:17:17,898 --> 00:17:22,668
don't use it that much to be honest but

323
00:17:20,809 --> 00:17:24,939
it's kind of one of those like it's it's

324
00:17:22,669 --> 00:17:28,730
in the bag if I need it

325
00:17:24,939 --> 00:17:30,470
PW Tools is a suite of tools that Josh

326
00:17:28,730 --> 00:17:31,669
Platts wrote that kind of helped

327
00:17:30,470 --> 00:17:33,919
generate a lot of these word lists

328
00:17:31,669 --> 00:17:37,909
helped generate some of the stuff that

329
00:17:33,919 --> 00:17:40,250
is available on his github hash ID is

330
00:17:37,909 --> 00:17:43,429
great if you get a random hash and you

331
00:17:40,250 --> 00:17:47,510
have no idea what it is it's not the

332
00:17:43,429 --> 00:17:48,830
best tool though and the honestly if you

333
00:17:47,510 --> 00:17:50,419
get a random hash and you don't know

334
00:17:48,830 --> 00:17:51,590
what it is the best thing is just start

335
00:17:50,419 --> 00:17:53,240
looking up the service and kind of

336
00:17:51,590 --> 00:17:55,928
seeing if you can find any information

337
00:17:53,240 --> 00:17:58,360
on their source code or things like that

338
00:17:55,929 --> 00:17:59,919
you know obviously if you're running

339
00:17:58,360 --> 00:18:02,678
responder or something you're gonna get

340
00:17:59,919 --> 00:18:06,820
like a net ntlm or things like that

341
00:18:02,679 --> 00:18:08,649
PW spy is a tool that I wrote and I'll

342
00:18:06,820 --> 00:18:10,779
include a link to that it's on my github

343
00:18:08,649 --> 00:18:12,699
if anyone's familiar with pitbull

344
00:18:10,779 --> 00:18:14,980
pitbull is an amazing tool that does

345
00:18:12,700 --> 00:18:18,519
post analysis of password cracking and

346
00:18:14,980 --> 00:18:21,760
it'll do things like find common root

347
00:18:18,519 --> 00:18:23,289
words find the longest password that you

348
00:18:21,760 --> 00:18:25,690
cracked find the shortest password that

349
00:18:23,289 --> 00:18:28,360
you cracked generate different masks and

350
00:18:25,690 --> 00:18:31,600
things for you unfortunately we found

351
00:18:28,360 --> 00:18:33,639
some errors in pitbull so we've started

352
00:18:31,600 --> 00:18:37,360
doing some manual analysis on some of

353
00:18:33,639 --> 00:18:38,678
our stuff and found out that it's not

354
00:18:37,360 --> 00:18:42,699
really being maintained too much anymore

355
00:18:38,679 --> 00:18:44,590
and we didn't see the results that we

356
00:18:42,700 --> 00:18:47,139
wanted out of pitbulls so I started

357
00:18:44,590 --> 00:18:49,870
writing our own tool it's kind of still

358
00:18:47,139 --> 00:18:52,209
a work in progress but what it'll do is

359
00:18:49,870 --> 00:18:54,189
it will it's got different modules that

360
00:18:52,210 --> 00:18:57,039
you can turn on and off and you're able

361
00:18:54,190 --> 00:18:59,799
to go in and do your post analysis and

362
00:18:57,039 --> 00:19:01,600
it will spit out a full readout and

363
00:18:59,799 --> 00:19:03,370
they'll say this is the most common root

364
00:19:01,600 --> 00:19:04,928
word that I found so if they're using

365
00:19:03,370 --> 00:19:06,549
winter a lot or if they're using the

366
00:19:04,929 --> 00:19:09,399
company name a lot you'll see in plain

367
00:19:06,549 --> 00:19:11,260
text that that password it will also

368
00:19:09,399 --> 00:19:14,229
identify any weak passwords that were

369
00:19:11,260 --> 00:19:16,658
identified or were recovered so if any

370
00:19:14,230 --> 00:19:19,630
passwords have no special characters or

371
00:19:16,659 --> 00:19:21,460
no numbers you know you can pull those

372
00:19:19,630 --> 00:19:23,769
out to highlight especially if a company

373
00:19:21,460 --> 00:19:25,840
swears up and down that they have you

374
00:19:23,769 --> 00:19:28,720
know 12 character and in force 4x4

375
00:19:25,840 --> 00:19:29,379
complexity and then you find I don't

376
00:19:28,720 --> 00:19:31,750
know Frank

377
00:19:29,380 --> 00:19:35,919
as a password all in lowercase which has

378
00:19:31,750 --> 00:19:37,480
happened on gigs because some executives

379
00:19:35,919 --> 00:19:39,309
got an exception to the rule for

380
00:19:37,480 --> 00:19:44,230
passwords and has never changed his

381
00:19:39,309 --> 00:19:47,080
password so it will pull those out the

382
00:19:44,230 --> 00:19:49,029
other great thing about password Spy is

383
00:19:47,080 --> 00:19:51,820
it will create masks for you so if

384
00:19:49,029 --> 00:19:55,809
you've already recovered say 50 percent

385
00:19:51,820 --> 00:19:57,730
of a company's passwords and you're kind

386
00:19:55,809 --> 00:20:00,399
of trying to go for a like that extra

387
00:19:57,730 --> 00:20:01,750
mile password spy will create masks for

388
00:20:00,399 --> 00:20:07,500
you that you can then feed back into

389
00:20:01,750 --> 00:20:07,500
hash cat to help you recover the rest

390
00:20:07,770 --> 00:20:14,020
all right so hashtag it's the de facto

391
00:20:10,780 --> 00:20:16,720
standard um it supports pretty much

392
00:20:14,020 --> 00:20:19,060
every hash algorithm out there it

393
00:20:16,720 --> 00:20:22,660
replaced John the Ripper John the Ripper

394
00:20:19,060 --> 00:20:25,750
hash CAD is using GPU cracking it's able

395
00:20:22,660 --> 00:20:28,390
to do many many more calculations per

396
00:20:25,750 --> 00:20:31,900
second than a GPU ever would

397
00:20:28,390 --> 00:20:35,140
the thing with haschke the one is

398
00:20:31,900 --> 00:20:36,550
there's like one zip file that I've had

399
00:20:35,140 --> 00:20:38,860
to use John the Ripper on in the last

400
00:20:36,550 --> 00:20:41,500
two years because it wasn't supported by

401
00:20:38,860 --> 00:20:43,300
hash code so it's really easy to set up

402
00:20:41,500 --> 00:20:44,950
and integrate with other tools there's a

403
00:20:43,300 --> 00:20:49,659
lot of cool like orchestration things

404
00:20:44,950 --> 00:20:51,940
and different scripts and wrappers and

405
00:20:49,660 --> 00:20:55,150
stuff that you can feed around it also

406
00:20:51,940 --> 00:20:58,390
on hash cut on their Wikipedia they have

407
00:20:55,150 --> 00:21:00,310
a great example hashes so instead of

408
00:20:58,390 --> 00:21:03,460
trying to run through hash ID if you get

409
00:21:00,310 --> 00:21:06,580
a random hash on an engagement you can

410
00:21:03,460 --> 00:21:09,780
pull up their example hashes and kind of

411
00:21:06,580 --> 00:21:12,939
see if it fits any of their their hashes

412
00:21:09,780 --> 00:21:15,280
hash topless I kind of covered already

413
00:21:12,940 --> 00:21:17,200
it is the wrapper for hash cat so all it

414
00:21:15,280 --> 00:21:19,030
does is it just manages agents and jobs

415
00:21:17,200 --> 00:21:21,460
and word lists so you feed it the word

416
00:21:19,030 --> 00:21:25,480
list you feed it the rules and all of

417
00:21:21,460 --> 00:21:26,770
that and then it kind of farms those out

418
00:21:25,480 --> 00:21:29,440
to a bunch of different hash cat

419
00:21:26,770 --> 00:21:32,710
binaries distributed across it's very

420
00:21:29,440 --> 00:21:36,100
easy as a PHP written tool we are using

421
00:21:32,710 --> 00:21:41,050
it internally but only for our larger

422
00:21:36,100 --> 00:21:43,689
password Enterprise password assessments

423
00:21:41,050 --> 00:21:44,889
so this isn't something we're using you

424
00:21:43,690 --> 00:21:46,780
know if you're running responder on a

425
00:21:44,890 --> 00:21:49,360
gig and you get a couple ashes you're

426
00:21:46,780 --> 00:21:53,080
trying to crack it this is for a company

427
00:21:49,360 --> 00:21:55,990
dropped you know their entire twenty

428
00:21:53,080 --> 00:21:58,689
thousand user hash list to us and said

429
00:21:55,990 --> 00:22:00,250
get whatever you can is just to read it

430
00:21:58,690 --> 00:22:02,050
cracking made easy there are a few

431
00:22:00,250 --> 00:22:07,090
limitations that were not too happy with

432
00:22:02,050 --> 00:22:08,379
for one it doesn't support SSL which is

433
00:22:07,090 --> 00:22:13,360
problematic if you're trying to keep

434
00:22:08,380 --> 00:22:16,840
things secure cool crawl sweb sites

435
00:22:13,360 --> 00:22:18,300
forwards you can set it up for a length

436
00:22:16,840 --> 00:22:23,010
and how deep it's going to go

437
00:22:18,300 --> 00:22:25,290
it's really great for WPA hacking but I

438
00:22:23,010 --> 00:22:31,290
wouldn't really recommend using for much

439
00:22:25,290 --> 00:22:35,100
else so that is actually Josh's cat

440
00:22:31,290 --> 00:22:41,250
named hash cat I feel obligated to tell

441
00:22:35,100 --> 00:22:42,809
he's yeah he loves his hash cat so this

442
00:22:41,250 --> 00:22:46,230
is where you can find his password tools

443
00:22:42,809 --> 00:22:48,570
oh and it's got a couple of different

444
00:22:46,230 --> 00:22:53,670
things some of that has been kind of

445
00:22:48,570 --> 00:22:56,909
ported over into PW to spy as well um

446
00:22:53,670 --> 00:22:59,040
this is what a typical hash ID output is

447
00:22:56,910 --> 00:23:01,440
gonna look like as you can see it's not

448
00:22:59,040 --> 00:23:03,510
super helpful you know you get this

449
00:23:01,440 --> 00:23:07,050
random hash on a gig you put an attached

450
00:23:03,510 --> 00:23:08,700
ID and it can be it's like I don't know

451
00:23:07,050 --> 00:23:10,500
it might be even one of these 15

452
00:23:08,700 --> 00:23:15,390
different things that nobody uses

453
00:23:10,500 --> 00:23:19,020
anymore PW spy I covered that's where

454
00:23:15,390 --> 00:23:20,850
you can find a link so it's just you

455
00:23:19,020 --> 00:23:26,010
know super easy to spell L Wang and I'm

456
00:23:20,850 --> 00:23:29,129
PW spy alright so techniques what are we

457
00:23:26,010 --> 00:23:31,950
doing when we get that 20,000 care you

458
00:23:29,130 --> 00:23:34,260
know hash dump and how are we going

459
00:23:31,950 --> 00:23:36,030
after these guys so what's the best way

460
00:23:34,260 --> 00:23:38,309
to crack a hash that's a really loaded

461
00:23:36,030 --> 00:23:41,100
question what's the best way to run an

462
00:23:38,309 --> 00:23:43,379
map right it's it really depends on what

463
00:23:41,100 --> 00:23:46,559
I'm going after am I going after one or

464
00:23:43,380 --> 00:23:50,870
two domain admin accounts or am i going

465
00:23:46,559 --> 00:23:53,520
after you know an entire user population

466
00:23:50,870 --> 00:23:56,820
what kind of algorithm are you trying to

467
00:23:53,520 --> 00:23:58,770
crack ntlm I can correct as I said you

468
00:23:56,820 --> 00:24:00,899
know the entire character P space even

469
00:23:58,770 --> 00:24:02,490
not using our distributed box I can do

470
00:24:00,900 --> 00:24:06,179
the entire a character key space and

471
00:24:02,490 --> 00:24:08,850
about four days on our in-house crackers

472
00:24:06,179 --> 00:24:10,470
wpa2 you try and brute-force the entire

473
00:24:08,850 --> 00:24:14,399
eight character key space and it's gonna

474
00:24:10,470 --> 00:24:15,630
take you years so you know you kind of

475
00:24:14,400 --> 00:24:18,179
have to know what kind of hash you're

476
00:24:15,630 --> 00:24:22,710
going after and tailor your your stuff

477
00:24:18,179 --> 00:24:23,370
to that how do you look um where do you

478
00:24:22,710 --> 00:24:25,170
get hashes

479
00:24:23,370 --> 00:24:27,120
you can either hash dump local accounts

480
00:24:25,170 --> 00:24:30,720
you can use me me cats web apps

481
00:24:27,120 --> 00:24:32,419
responder shadow is great if you can

482
00:24:30,720 --> 00:24:36,260
find a shadow file

483
00:24:32,420 --> 00:24:40,310
come files in all the usual places a lot

484
00:24:36,260 --> 00:24:43,910
of times you'll find you know especially

485
00:24:40,310 --> 00:24:47,270
in a UNIX environment developers love to

486
00:24:43,910 --> 00:24:48,950
put environment variables with their

487
00:24:47,270 --> 00:24:51,590
passwords in it so that they can like

488
00:24:48,950 --> 00:24:53,960
upload stuff to sequel things a lot

489
00:24:51,590 --> 00:24:56,120
easier so if you just start rockin

490
00:24:53,960 --> 00:24:57,590
through there in part perdón me there

491
00:24:56,120 --> 00:25:00,919
you know bachelor c and things like that

492
00:24:57,590 --> 00:25:06,800
you can actually find either their full

493
00:25:00,920 --> 00:25:09,560
password or hashes so this talk kind of

494
00:25:06,800 --> 00:25:13,490
stems from when we started doing these

495
00:25:09,560 --> 00:25:16,639
password audits so we started doing

496
00:25:13,490 --> 00:25:18,350
these where it's like a massive massive

497
00:25:16,640 --> 00:25:22,370
amount of hashes that we were going

498
00:25:18,350 --> 00:25:25,699
after for as opposed to just like one or

499
00:25:22,370 --> 00:25:31,790
two and our company our clients wanted

500
00:25:25,700 --> 00:25:33,490
us to kind of provide some sort of a an

501
00:25:31,790 --> 00:25:37,250
analysis based on what we're seeing

502
00:25:33,490 --> 00:25:38,900
patterns that we see and we really

503
00:25:37,250 --> 00:25:41,600
needed to create a repeatable process

504
00:25:38,900 --> 00:25:44,330
that I can hand off to any of our other

505
00:25:41,600 --> 00:25:47,209
consultants and say you know here's this

506
00:25:44,330 --> 00:25:49,550
and then so we know that our our clients

507
00:25:47,210 --> 00:25:53,210
are getting the same exact um kind of

508
00:25:49,550 --> 00:25:55,460
look at their passwords so it's very

509
00:25:53,210 --> 00:25:57,590
very analysis based I spend most of my

510
00:25:55,460 --> 00:25:59,810
time on these password audits after the

511
00:25:57,590 --> 00:26:01,280
crackers have done running just looking

512
00:25:59,810 --> 00:26:04,100
at the passwords that we've cracked and

513
00:26:01,280 --> 00:26:05,649
trying to figure out why they why

514
00:26:04,100 --> 00:26:09,110
somebody created the password that way

515
00:26:05,650 --> 00:26:12,080
another thing I always do as I look at a

516
00:26:09,110 --> 00:26:14,179
password that I cracked and I'm trying

517
00:26:12,080 --> 00:26:16,790
to figure out how we cracked that

518
00:26:14,180 --> 00:26:18,800
password what was the rule how can I

519
00:26:16,790 --> 00:26:21,500
tweak maybe a rule tweak a word list

520
00:26:18,800 --> 00:26:23,780
things like that one thing that came up

521
00:26:21,500 --> 00:26:26,360
in a previous talk that was an amazing

522
00:26:23,780 --> 00:26:27,980
question was you know have you ever made

523
00:26:26,360 --> 00:26:30,469
a word list with common misspelling

524
00:26:27,980 --> 00:26:33,650
words and we haven't thought about that

525
00:26:30,470 --> 00:26:35,570
but now that's something that we do so

526
00:26:33,650 --> 00:26:38,060
we have that in one of our main word

527
00:26:35,570 --> 00:26:42,649
lists that we use in the house because

528
00:26:38,060 --> 00:26:45,590
you know they just didn't even think of

529
00:26:42,650 --> 00:26:49,470
it right so we're looking for easy way

530
00:26:45,590 --> 00:26:53,040
um we're looking for a quick you know

531
00:26:49,470 --> 00:26:55,740
quick spikes and things like that this

532
00:26:53,040 --> 00:26:57,930
is not something to undertake if you're

533
00:26:55,740 --> 00:27:00,630
trying to run this off of your desktop

534
00:26:57,930 --> 00:27:02,820
with like one GPU this is you need a

535
00:27:00,630 --> 00:27:06,210
heavy hitting cracking rig either a

536
00:27:02,820 --> 00:27:12,450
through AWS cloud setup or just building

537
00:27:06,210 --> 00:27:15,180
a full robust cracking road so what do

538
00:27:12,450 --> 00:27:17,040
we used for our quick wins we use

539
00:27:15,180 --> 00:27:19,950
proprietary word lists which are kind of

540
00:27:17,040 --> 00:27:23,490
tailored from a lot of experience over

541
00:27:19,950 --> 00:27:26,190
the town of the years with our teams and

542
00:27:23,490 --> 00:27:29,550
as as we create new word lists and new

543
00:27:26,190 --> 00:27:34,560
rules you know we build those in we then

544
00:27:29,550 --> 00:27:37,230
will modify those rules to modify those

545
00:27:34,560 --> 00:27:38,760
word lists using rules and then we do a

546
00:27:37,230 --> 00:27:40,950
lot of loopback attacks so what a

547
00:27:38,760 --> 00:27:43,140
loopback attack will do if it takes

548
00:27:40,950 --> 00:27:45,420
passwords that have already cracked in

549
00:27:43,140 --> 00:27:47,640
your current tasks and then it will send

550
00:27:45,420 --> 00:27:50,160
it back in into the rules and the word

551
00:27:47,640 --> 00:27:51,420
list and use those passwords to then try

552
00:27:50,160 --> 00:27:55,860
and crack other passwords in the

553
00:27:51,420 --> 00:27:59,520
environment the masses I kind of touched

554
00:27:55,860 --> 00:28:01,530
on if you say you have a you know 12

555
00:27:59,520 --> 00:28:04,410
character complexity I'm gonna start

556
00:28:01,530 --> 00:28:05,970
with an uppercase and trail with digits

557
00:28:04,410 --> 00:28:10,100
and special characters and I'll probably

558
00:28:05,970 --> 00:28:12,090
get like another 30% of your passwords

559
00:28:10,100 --> 00:28:13,860
this is what it looks like when we

560
00:28:12,090 --> 00:28:16,620
execute our methodology this is cracked

561
00:28:13,860 --> 00:28:19,979
over time so you can see the duration in

562
00:28:16,620 --> 00:28:22,949
minutes within about 10 minutes this is

563
00:28:19,980 --> 00:28:24,960
an actual from a live gig where I think

564
00:28:22,950 --> 00:28:27,420
this was 12,000 passwords that are

565
00:28:24,960 --> 00:28:34,170
passions that they gave us to crack we

566
00:28:27,420 --> 00:28:36,240
ended up cracking like 97% of them and

567
00:28:34,170 --> 00:28:37,590
you can see the vast majority were

568
00:28:36,240 --> 00:28:39,900
cracked within the first 10 minutes of

569
00:28:37,590 --> 00:28:43,250
the assessment that was using

570
00:28:39,900 --> 00:28:48,240
proprietary word list

571
00:28:43,250 --> 00:28:49,800
previously known dumps and no rules then

572
00:28:48,240 --> 00:28:52,230
we started adding rules and you can kind

573
00:28:49,800 --> 00:28:54,159
of see it takes a little bit longer and

574
00:28:52,230 --> 00:28:55,900
towards the end we're getting to like

575
00:28:54,160 --> 00:28:57,910
diminishing returns right Peyronie's

576
00:28:55,900 --> 00:29:00,430
tasks for a very long time then getting

577
00:28:57,910 --> 00:29:03,790
very low return but we had time left on

578
00:29:00,430 --> 00:29:08,470
the gig so we let the crackers go after

579
00:29:03,790 --> 00:29:10,360
it if you've done this before how do you

580
00:29:08,470 --> 00:29:12,430
help yourself in the future right pop

581
00:29:10,360 --> 00:29:14,500
files keep a historical record of your

582
00:29:12,430 --> 00:29:16,150
cracked hashes depending on your client

583
00:29:14,500 --> 00:29:17,380
they might not want that right they

584
00:29:16,150 --> 00:29:19,780
might not want you storing their

585
00:29:17,380 --> 00:29:21,550
passwords so sometimes we will create a

586
00:29:19,780 --> 00:29:25,540
new pop file just first particular

587
00:29:21,550 --> 00:29:30,850
client and also I usually will create a

588
00:29:25,540 --> 00:29:33,580
pop file out of a new crack a new

589
00:29:30,850 --> 00:29:36,189
engagement just so I have clean data to

590
00:29:33,580 --> 00:29:38,919
work with but a pop file will take you

591
00:29:36,190 --> 00:29:43,060
is what hash cat will use and it will

592
00:29:38,920 --> 00:29:44,920
run those hashes through previously your

593
00:29:43,060 --> 00:29:46,210
previous engagements and it will see if

594
00:29:44,920 --> 00:29:48,040
you've already cracked that hash and

595
00:29:46,210 --> 00:29:48,940
then it just won't spend GPU cycles on

596
00:29:48,040 --> 00:29:51,010
it

597
00:29:48,940 --> 00:29:53,890
the problem with pop files is you can

598
00:29:51,010 --> 00:29:57,400
get blow really really quickly so with

599
00:29:53,890 --> 00:29:58,780
below the you know you you can start

600
00:29:57,400 --> 00:30:00,340
getting into the rainbow table problem

601
00:29:58,780 --> 00:30:04,330
where you're spending so much time doing

602
00:30:00,340 --> 00:30:06,790
a directory lookup on searching through

603
00:30:04,330 --> 00:30:11,110
a text file which is all of the pop file

604
00:30:06,790 --> 00:30:12,610
is that you're actually spending more

605
00:30:11,110 --> 00:30:14,949
time than it would take to just crack

606
00:30:12,610 --> 00:30:17,560
that hash again so every once in while

607
00:30:14,950 --> 00:30:20,140
it's good to clean your pop file out we

608
00:30:17,560 --> 00:30:23,700
had an incident where somebody dumped

609
00:30:20,140 --> 00:30:26,830
the entire when LinkedIn was was popped

610
00:30:23,700 --> 00:30:29,830
they dumped their entire pop file into

611
00:30:26,830 --> 00:30:32,139
our pop file and so it was looking up

612
00:30:29,830 --> 00:30:34,179
like four character passwords which we

613
00:30:32,140 --> 00:30:36,010
never see in our environments so we had

614
00:30:34,180 --> 00:30:40,240
to clean those out of our pop file and

615
00:30:36,010 --> 00:30:41,800
basically start fresh I hadn't have my

616
00:30:40,240 --> 00:30:45,820
own little cheat list of masks that I

617
00:30:41,800 --> 00:30:47,919
used when I'm when I'm running so as you

618
00:30:45,820 --> 00:30:49,659
start to see more and more common masks

619
00:30:47,920 --> 00:30:51,550
just start building them and keeping

620
00:30:49,660 --> 00:30:56,710
them and licking your back-pocket to run

621
00:30:51,550 --> 00:31:00,629
against hash cat you will not see a live

622
00:30:56,710 --> 00:31:05,560
demo however I do have a quick video of

623
00:31:00,630 --> 00:31:08,130
this is kind of hash topless in action

624
00:31:05,560 --> 00:31:29,530
using the

625
00:31:08,130 --> 00:31:31,660
is this not showing here we go so this

626
00:31:29,530 --> 00:31:33,960
is using hash topless as you can see

627
00:31:31,660 --> 00:31:40,480
it's got a very friendly user interface

628
00:31:33,960 --> 00:31:43,540
so we what we did is we generated some

629
00:31:40,480 --> 00:31:46,710
passwords that we knew would not get

630
00:31:43,540 --> 00:31:52,889
correct fighting a character brute-force

631
00:31:46,710 --> 00:31:56,260
we threw that hash into hash topless and

632
00:31:52,890 --> 00:31:59,950
got the credit card out called up AWS

633
00:31:56,260 --> 00:32:01,990
and said we want as many GPUs as you

634
00:31:59,950 --> 00:32:03,910
will give us we had to get special

635
00:32:01,990 --> 00:32:05,920
permission through AWS because they

636
00:32:03,910 --> 00:32:09,790
actually will limit the number of GPU

637
00:32:05,920 --> 00:32:13,390
boxes you can get with a new account so

638
00:32:09,790 --> 00:32:14,620
we said that's fine so you can see all

639
00:32:13,390 --> 00:32:18,460
the different agents so right now we

640
00:32:14,620 --> 00:32:20,469
don't have any agents this is how easy

641
00:32:18,460 --> 00:32:23,770
it is to add we we created a little

642
00:32:20,470 --> 00:32:26,050
script that you feed in and this will

643
00:32:23,770 --> 00:32:30,820
just reach back to our lab Connect hash

644
00:32:26,050 --> 00:32:35,440
topless and as the or kinetic as the

645
00:32:30,820 --> 00:32:36,909
engine and this is where we said run

646
00:32:35,440 --> 00:32:39,550
that script on every one of these

647
00:32:36,910 --> 00:32:43,090
instances this is not my personal AWS

648
00:32:39,550 --> 00:32:46,020
account by the way this is Josh's he has

649
00:32:43,090 --> 00:32:46,020
that kind of money I don't

650
00:32:55,240 --> 00:33:02,000
so now you can see we've added them all

651
00:32:58,220 --> 00:33:04,070
there you can see all of our different

652
00:33:02,000 --> 00:33:06,140
p2 instance or all of our different

653
00:33:04,070 --> 00:33:13,570
instances are running they've got hash

654
00:33:06,140 --> 00:33:26,210
ked up now we go back to our agents and

655
00:33:13,570 --> 00:33:31,700
refresh and you can see we have now

656
00:33:26,210 --> 00:33:35,830
added pretty much imminent power to our

657
00:33:31,700 --> 00:33:38,900
pass for a cracking rig just like that

658
00:33:35,830 --> 00:33:41,360
total the last time is four minutes and

659
00:33:38,900 --> 00:33:46,880
we've added 320 GPUs to our cracking rig

660
00:33:41,360 --> 00:33:49,189
for relatively low cost this rig as far

661
00:33:46,880 --> 00:33:50,540
as we can tell is the second fastest in

662
00:33:49,190 --> 00:33:53,750
the civilian world and we are now

663
00:33:50,540 --> 00:33:56,629
competing with state level actors when

664
00:33:53,750 --> 00:33:59,270
we've combined this they obviously will

665
00:33:56,630 --> 00:34:03,320
not release their numbers but there is a

666
00:33:59,270 --> 00:34:06,820
particular agency that's around you know

667
00:34:03,320 --> 00:34:11,960
centered around national security that

668
00:34:06,820 --> 00:34:13,310
possibly has a pastor cracker but we we

669
00:34:11,960 --> 00:34:21,409
were nade and we were not able to

670
00:34:13,310 --> 00:34:24,380
confirm that so we turn it on and then

671
00:34:21,409 --> 00:34:26,750
you can see as hash topless works is

672
00:34:24,380 --> 00:34:29,120
just sending different jobs to all of

673
00:34:26,750 --> 00:34:33,489
these different agents across its entire

674
00:34:29,120 --> 00:34:37,040
network I know the fun begins

675
00:34:33,489 --> 00:34:38,649
this is our speed over time we were

676
00:34:37,040 --> 00:34:43,610
shooting for to tear hashes per second

677
00:34:38,650 --> 00:34:49,700
as you can see this is about 22 tear

678
00:34:43,610 --> 00:34:53,600
hashes per second so 22 trillion guesses

679
00:34:49,699 --> 00:34:56,239
per second against an mplm network we

680
00:34:53,600 --> 00:34:58,040
let it run for five minutes and it

681
00:34:56,239 --> 00:35:00,589
completely brute force the entire Iker

682
00:34:58,040 --> 00:35:04,750
cookie space and you can see it's pretty

683
00:35:00,590 --> 00:35:04,750
stable and runs the entire way

684
00:35:11,140 --> 00:35:16,910
so you can see the evolution of our our

685
00:35:15,049 --> 00:35:18,470
goals this was just a year ago we were

686
00:35:16,910 --> 00:35:20,808
shooting from maybe we can get to one

687
00:35:18,470 --> 00:35:24,288
tear hash within a year we're hitting 22

688
00:35:20,809 --> 00:35:26,749
tare hashes you know a year from now we

689
00:35:24,289 --> 00:35:29,900
might be able to double that password

690
00:35:26,749 --> 00:35:34,549
cracking is going to go cloud-based it's

691
00:35:29,900 --> 00:35:36,170
going to become much more easy to do for

692
00:35:34,549 --> 00:35:39,200
just about anybody that's got a credit

693
00:35:36,170 --> 00:35:41,210
card if you think you have a strong

694
00:35:39,200 --> 00:35:45,470
password policy I would highly recommend

695
00:35:41,210 --> 00:35:47,180
you start looking over it because we got

696
00:35:45,470 --> 00:35:50,509
the a character in under a couple

697
00:35:47,180 --> 00:35:52,970
minutes we can get to another you know

698
00:35:50,509 --> 00:36:00,319
place this is not our slide this is

699
00:35:52,970 --> 00:36:02,749
actually from brutalus they are another

700
00:36:00,319 --> 00:36:05,538
company that does they focus pretty much

701
00:36:02,749 --> 00:36:08,629
specifically on password crackers they

702
00:36:05,539 --> 00:36:11,599
were able to hit 31 terror hashes on

703
00:36:08,630 --> 00:36:15,349
their stuff so this is kind of showing

704
00:36:11,599 --> 00:36:19,809
where it's going until then all the way

705
00:36:15,349 --> 00:36:24,829
up to 9 characters is under five minutes

706
00:36:19,809 --> 00:36:26,539
on their rig 10 characters oh I'm sorry

707
00:36:24,829 --> 00:36:30,499
eight characters is under five minutes

708
00:36:26,539 --> 00:36:32,739
ten characters is five hours you know

709
00:36:30,499 --> 00:36:35,029
they're they're starting to approach

710
00:36:32,739 --> 00:36:39,319
where they're able to brute-force your

711
00:36:35,029 --> 00:36:41,599
entire key space up to about ten

712
00:36:39,319 --> 00:36:43,999
characters is a reasonable time for ntlm

713
00:36:41,599 --> 00:36:45,859
that's three weeks zero days so how

714
00:36:43,999 --> 00:36:48,828
important do you is the information that

715
00:36:45,859 --> 00:36:50,239
you're storing behind ntlm hashes you

716
00:36:48,829 --> 00:36:53,710
know there are people out there that can

717
00:36:50,239 --> 00:36:56,809
crack it in three weeks as you can see

718
00:36:53,710 --> 00:36:58,910
just adding one more character takes

719
00:36:56,809 --> 00:37:01,369
that three week time span and pushes it

720
00:36:58,910 --> 00:37:06,160
to five years so going to an 11

721
00:37:01,369 --> 00:37:09,289
character password increases that time

722
00:37:06,160 --> 00:37:11,538
the problem is again using masks and

723
00:37:09,289 --> 00:37:12,680
using the psychology that we have we can

724
00:37:11,539 --> 00:37:14,359
shorten that down so I'm only

725
00:37:12,680 --> 00:37:15,350
brute-forcing against eight characters

726
00:37:14,359 --> 00:37:17,990
and

727
00:37:15,350 --> 00:37:21,620
to where I started so what do you do to

728
00:37:17,990 --> 00:37:23,870
train your users you teach them not to

729
00:37:21,620 --> 00:37:26,120
start their passwords with a capital

730
00:37:23,870 --> 00:37:28,040
letter and trail with digits put the

731
00:37:26,120 --> 00:37:31,220
capital letter in the middle don't use

732
00:37:28,040 --> 00:37:33,020
common words there's a great website out

733
00:37:31,220 --> 00:37:36,140
there called password chart

734
00:37:33,020 --> 00:37:38,210
I think it's net org if you just Google

735
00:37:36,140 --> 00:37:40,910
password chart and what that does is it

736
00:37:38,210 --> 00:37:42,320
creates a grid with the letters A

737
00:37:40,910 --> 00:37:44,870
through Z on it and you would just

738
00:37:42,320 --> 00:37:47,570
remember a code word and below each

739
00:37:44,870 --> 00:37:49,790
letter A through Z has five random

740
00:37:47,570 --> 00:37:51,590
characters and so you would create a

741
00:37:49,790 --> 00:37:52,850
code print this chart out instead of

742
00:37:51,590 --> 00:37:54,710
that your desk and remember your code

743
00:37:52,850 --> 00:37:57,400
word like optin and then you would go to

744
00:37:54,710 --> 00:37:59,540
o and then use the five characters below

745
00:37:57,400 --> 00:38:01,490
and then when it comes time to change

746
00:37:59,540 --> 00:38:03,170
your password you can regenerate that

747
00:38:01,490 --> 00:38:06,620
chart and they use their same password

748
00:38:03,170 --> 00:38:08,030
or a passkey you know obviously the

749
00:38:06,620 --> 00:38:10,390
danger there is if somebody guesses your

750
00:38:08,030 --> 00:38:10,390
passkey

751
00:38:20,079 --> 00:38:27,969
you're screwed but it is more secure

752
00:38:22,599 --> 00:38:28,539
than you know using fall 2019 in your

753
00:38:27,969 --> 00:38:33,429
password

754
00:38:28,539 --> 00:38:35,650
I know NIST is going to the no password

755
00:38:33,429 --> 00:38:38,549
reset thing we're kind of back and forth

756
00:38:35,650 --> 00:38:42,069
on that um I'm kind of if there's no

757
00:38:38,549 --> 00:38:45,038
reason to force a password change I

758
00:38:42,069 --> 00:38:46,329
would say you don't need to force it as

759
00:38:45,039 --> 00:38:48,579
long as you have a strong password

760
00:38:46,329 --> 00:38:52,119
policy because that's where you start

761
00:38:48,579 --> 00:38:53,439
seeing in the the three-month password

762
00:38:52,119 --> 00:38:55,900
resets that's where you start seeing

763
00:38:53,439 --> 00:38:57,069
people having weak passwords because if

764
00:38:55,900 --> 00:38:58,479
I have to change my password every 90

765
00:38:57,069 --> 00:39:00,009
days I need something that I can

766
00:38:58,479 --> 00:39:01,178
remember when I type it in at the

767
00:39:00,009 --> 00:39:04,119
beginning of the day so I'm going to use

768
00:39:01,179 --> 00:39:06,549
fall 2019 or I'm just gonna iterate you

769
00:39:04,119 --> 00:39:08,229
know like Optive one opted to up to

770
00:39:06,549 --> 00:39:10,749
three every time that I create a new

771
00:39:08,229 --> 00:39:14,968
password and so that's something that

772
00:39:10,749 --> 00:39:18,339
you want to kind of take into account

773
00:39:14,969 --> 00:39:20,529
alright I know that I kind of ran

774
00:39:18,339 --> 00:39:23,078
through this a little fast I apologize

775
00:39:20,529 --> 00:39:26,699
like I said Josh was supposed to be here

776
00:39:23,079 --> 00:39:29,019
and go much more into the AWS stuff

777
00:39:26,699 --> 00:39:34,049
because that's much more his side but

778
00:39:29,019 --> 00:39:34,049
does anybody have any questions yes sir

779
00:39:36,569 --> 00:39:42,549
so Asics is an interesting question the

780
00:39:40,509 --> 00:39:45,369
problem is nobody's building Asics for

781
00:39:42,549 --> 00:39:48,369
password cracking at this time so it's

782
00:39:45,369 --> 00:39:50,259
if somebody came out with an ASIC we

783
00:39:48,369 --> 00:39:52,539
would probably look at it but it's not a

784
00:39:50,259 --> 00:39:58,539
big enough business so it's not Bitcoin

785
00:39:52,539 --> 00:39:59,679
mining we're an ASIC would be that's

786
00:39:58,539 --> 00:40:02,949
something we're looking at

787
00:39:59,679 --> 00:40:05,469
we are also we've been talking to a

788
00:40:02,949 --> 00:40:07,869
couple other like super computing sites

789
00:40:05,469 --> 00:40:15,400
to maybe run some time on their boxes as

790
00:40:07,869 --> 00:40:17,979
well so so I think for that it was about

791
00:40:15,400 --> 00:40:24,069
$500 for the ten minutes that we ran it

792
00:40:17,979 --> 00:40:26,769
so it's expensive but again that $500 I

793
00:40:24,069 --> 00:40:31,089
could spend over three months and get

794
00:40:26,769 --> 00:40:32,089
the same results so it's it's no longer

795
00:40:31,089 --> 00:40:35,029
a matter of how

796
00:40:32,090 --> 00:40:36,380
much you know you want it's it's now how

797
00:40:35,030 --> 00:40:47,270
much you want to spend not how much time

798
00:40:36,380 --> 00:40:49,880
you want yes yeah yeah so a company

799
00:40:47,270 --> 00:40:52,040
wants to test and see if their password

800
00:40:49,880 --> 00:40:53,660
policies are strong or if they have a

801
00:40:52,040 --> 00:40:55,880
user education problem with weak

802
00:40:53,660 --> 00:40:58,370
passwords so what they'll do is they'll

803
00:40:55,880 --> 00:41:00,860
dump their entire in tds database give

804
00:40:58,370 --> 00:41:04,490
us those hashes and say crack as many as

805
00:41:00,860 --> 00:41:06,050
you can and tell us what you see so we

806
00:41:04,490 --> 00:41:07,669
do it for like a financial institution

807
00:41:06,050 --> 00:41:09,770
that might have like a really sensitive

808
00:41:07,670 --> 00:41:12,190
information so we'll look at their

809
00:41:09,770 --> 00:41:15,230
entire user base and say we crack this

810
00:41:12,190 --> 00:41:18,650
and opportun including their domain

811
00:41:15,230 --> 00:41:21,230
admin accounts and domain admin accounts

812
00:41:18,650 --> 00:41:22,850
are no more secure and from what I've

813
00:41:21,230 --> 00:41:26,750
seen I cracked one the other day that

814
00:41:22,850 --> 00:41:34,130
the password was got bugged didn't 2019

815
00:41:26,750 --> 00:41:35,650
so yes password strength meters that's a

816
00:41:34,130 --> 00:41:38,540
good question

817
00:41:35,650 --> 00:41:43,970
you know they're all kind of using their

818
00:41:38,540 --> 00:41:46,750
own proprietary blend there I personally

819
00:41:43,970 --> 00:41:49,220
I use a password manager so I'm using

820
00:41:46,750 --> 00:41:51,050
you know like I have one very long

821
00:41:49,220 --> 00:41:53,149
password that I've memorized that I use

822
00:41:51,050 --> 00:41:55,460
to log into that and then I'm just

823
00:41:53,150 --> 00:42:00,290
generating passwords out of that that's

824
00:41:55,460 --> 00:42:02,390
using that yeah so if you had the

825
00:42:00,290 --> 00:42:04,520
websites that you go on and you type

826
00:42:02,390 --> 00:42:06,080
your password in I personally don't

827
00:42:04,520 --> 00:42:07,700
trust them because I'm not gonna type a

828
00:42:06,080 --> 00:42:09,529
password that I'm going to use into some

829
00:42:07,700 --> 00:42:11,810
random web form because I don't know

830
00:42:09,530 --> 00:42:13,400
what's on the other side of that I think

831
00:42:11,810 --> 00:42:15,440
it's a good idea if you're trying to

832
00:42:13,400 --> 00:42:17,270
educate your user base and you were

833
00:42:15,440 --> 00:42:21,560
showing like fall 2019 there's a weak

834
00:42:17,270 --> 00:42:23,150
password but I could generate a 12

835
00:42:21,560 --> 00:42:25,880
character password that has all the

836
00:42:23,150 --> 00:42:28,460
complexity that would meet and show up

837
00:42:25,880 --> 00:42:30,320
as a strong password but using my masks

838
00:42:28,460 --> 00:42:33,350
I'm gonna crack that a lot harder a lot

839
00:42:30,320 --> 00:42:35,330
faster so you know they're they're not

840
00:42:33,350 --> 00:42:38,120
able to do kind of that human analysis

841
00:42:35,330 --> 00:42:39,640
so it's kind of that bridge between you

842
00:42:38,120 --> 00:42:43,560
know machine learning and

843
00:42:39,640 --> 00:42:46,560
humans actually taking a look at things

844
00:42:43,560 --> 00:42:46,560
yes

845
00:42:50,040 --> 00:42:56,230
so currently we use the Nvidia suite

846
00:42:53,970 --> 00:42:59,500
only because that's what we have

847
00:42:56,230 --> 00:43:00,760
available to us and because of the way

848
00:42:59,500 --> 00:43:03,600
their chips are built

849
00:43:00,760 --> 00:43:08,110
I apologize I'm not a CUDA programmer

850
00:43:03,600 --> 00:43:10,360
but they are able to do the password

851
00:43:08,110 --> 00:43:45,970
cracking algorithms better than the AMD

852
00:43:10,360 --> 00:43:47,620
chips at this point so so adoptive when

853
00:43:45,970 --> 00:43:49,660
we are speaking with our clients we

854
00:43:47,620 --> 00:43:52,120
recommend 12 characters and 4x4

855
00:43:49,660 --> 00:43:54,160
complexity so we want to see special

856
00:43:52,120 --> 00:44:00,460
characters and numbers and upper and

857
00:43:54,160 --> 00:44:02,890
lower case right we just yeah we

858
00:44:00,460 --> 00:44:05,170
disagree with NIST on that especially

859
00:44:02,890 --> 00:44:08,319
since what we're seeing is we're able to

860
00:44:05,170 --> 00:44:10,930
take those you know forward pass phrases

861
00:44:08,320 --> 00:44:13,780
and crack those just as easy as we are

862
00:44:10,930 --> 00:44:16,120
ya know it does take us longer to crack

863
00:44:13,780 --> 00:44:18,910
the passphrase --is but and it's a

864
00:44:16,120 --> 00:44:30,000
little bit slower and things like that

865
00:44:18,910 --> 00:44:32,560
but we're still able to get those yes no

866
00:44:30,000 --> 00:44:34,420
those are if there's a pattern of

867
00:44:32,560 --> 00:44:36,190
letters on the keyboard I guarantee you

868
00:44:34,420 --> 00:44:38,380
it's in one of my word lists our

869
00:44:36,190 --> 00:44:41,820
proprietary word lists are about three

870
00:44:38,380 --> 00:44:44,820
gigabytes each and that's a text file so

871
00:44:41,820 --> 00:44:44,820
yes

872
00:44:56,749 --> 00:45:10,769
yes right and that's a good point I'll

873
00:45:08,130 --> 00:45:12,839
repeat it so the gentleman here said the

874
00:45:10,769 --> 00:45:15,839
the NIST recommendations is based on

875
00:45:12,839 --> 00:45:17,460
using a password filter so that's that

876
00:45:15,839 --> 00:45:20,069
is often overlooked and that's a very

877
00:45:17,460 --> 00:45:21,990
good point because you know a lot of

878
00:45:20,069 --> 00:45:23,490
companies aren't supporting the password

879
00:45:21,990 --> 00:45:26,640
filtering inside of the house but

880
00:45:23,490 --> 00:45:28,229
they're enforcing some of the the not

881
00:45:26,640 --> 00:45:30,808
resetting and not having special

882
00:45:28,230 --> 00:45:45,269
characters like that so that that's a

883
00:45:30,809 --> 00:45:47,779
very good point yeah absolutely so we we

884
00:45:45,269 --> 00:45:49,950
do start looking at historical data so

885
00:45:47,779 --> 00:45:51,029
you know well say you know last time we

886
00:45:49,950 --> 00:45:53,038
were able to crack this many passwords

887
00:45:51,029 --> 00:45:54,529
let's see you know are we get it are you

888
00:45:53,039 --> 00:45:57,779
guys getting better right

889
00:45:54,529 --> 00:45:59,249
and then you know we were consultants so

890
00:45:57,779 --> 00:46:01,619
we try and sit down with our client and

891
00:45:59,249 --> 00:46:03,089
have those conversations about you know

892
00:46:01,619 --> 00:46:05,339
why are you guys having so many bad

893
00:46:03,089 --> 00:46:07,319
passwords and it really like certain

894
00:46:05,339 --> 00:46:08,759
industries like the financial industry

895
00:46:07,319 --> 00:46:14,069
for whatever reason has like the worst

896
00:46:08,759 --> 00:46:16,589
passwords but that's just you know what

897
00:46:14,069 --> 00:46:18,390
we see and so we'll go through and we're

898
00:46:16,589 --> 00:46:19,799
like well we know you guys have bad

899
00:46:18,390 --> 00:46:21,989
passwords but we try and figure out the

900
00:46:19,799 --> 00:46:36,749
why behind that so that we can help them

901
00:46:21,989 --> 00:46:38,849
get more secure right it is a moving

902
00:46:36,749 --> 00:46:42,269
target but we measure them against the

903
00:46:38,849 --> 00:46:43,859
current technology so because measuring

904
00:46:42,269 --> 00:46:46,950
them against my password cracker from

905
00:46:43,859 --> 00:46:49,140
last year isn't gonna matter because you

906
00:46:46,950 --> 00:46:51,749
know we can move down to 20 to tear hash

907
00:46:49,140 --> 00:46:52,920
box right so yeah like you guys might

908
00:46:51,749 --> 00:46:56,578
have gotten a little bit better but you

909
00:46:52,920 --> 00:46:58,940
didn't get better enough mm-hm

910
00:46:56,579 --> 00:46:58,940
sir

911
00:47:07,830 --> 00:47:18,609
absolutely you know always use MFA if

912
00:47:11,500 --> 00:47:21,580
you can right yeah you know like logging

913
00:47:18,609 --> 00:47:23,380
into your PC like UV is a great one I

914
00:47:21,580 --> 00:47:25,598
don't personally have a UV key because

915
00:47:23,380 --> 00:47:27,849
I'm terrified of losing it

916
00:47:25,599 --> 00:47:30,010
I actually I know the previous speaker

917
00:47:27,849 --> 00:47:31,840
mentioned having chips I also have chips

918
00:47:30,010 --> 00:47:35,050
in my hand and I'm probably gonna start

919
00:47:31,840 --> 00:47:39,840
using those as NFA so when I'm near my

920
00:47:35,050 --> 00:47:39,840
computer I can just login with that so

921
00:47:47,520 --> 00:47:54,130
it depends so we do have a couple of

922
00:47:51,430 --> 00:47:55,629
word lists for foreign clients so we

923
00:47:54,130 --> 00:47:58,180
have a couple of clients that have

924
00:47:55,630 --> 00:47:59,020
international offices and we'll try and

925
00:47:58,180 --> 00:48:00,759
build word list

926
00:47:59,020 --> 00:48:04,210
depending on like common foreign words

927
00:48:00,760 --> 00:48:06,070
but that's kind of an ad hoc thing so I

928
00:48:04,210 --> 00:48:09,240
know that there are a couple out there

929
00:48:06,070 --> 00:48:12,670
we just we don't do a lot of business in

930
00:48:09,240 --> 00:48:16,660
in regions where we would need non

931
00:48:12,670 --> 00:48:18,970
English words but it is a good point

932
00:48:16,660 --> 00:48:21,250
what we're going after is the

933
00:48:18,970 --> 00:48:23,560
low-hanging fruit really and then you

934
00:48:21,250 --> 00:48:25,390
know as you saw that chart or like the

935
00:48:23,560 --> 00:48:27,549
cracked over time once you start like

936
00:48:25,390 --> 00:48:29,799
flattening out at the end we're just

937
00:48:27,550 --> 00:48:31,119
really kind of like grasping for

938
00:48:29,800 --> 00:48:34,630
anything at that point so we're running

939
00:48:31,119 --> 00:48:36,190
a task for two days that might only get

940
00:48:34,630 --> 00:48:39,160
us one or two passwords at that point

941
00:48:36,190 --> 00:48:41,830
but we've already cracked the author 93%

942
00:48:39,160 --> 00:48:44,440
of your passwords so we're not gonna get

943
00:48:41,830 --> 00:48:46,359
I'll never get the ones where it's like

944
00:48:44,440 --> 00:48:49,119
you hold the alt and like two five four

945
00:48:46,359 --> 00:48:50,710
you know like the the weird ASCII stuff

946
00:48:49,119 --> 00:48:55,930
and things like that like if you've got

947
00:48:50,710 --> 00:48:57,760
that pet as your password awesome emojis

948
00:48:55,930 --> 00:48:59,740
are really weird and passwords but I

949
00:48:57,760 --> 00:49:02,140
find that those can get weird if you're

950
00:48:59,740 --> 00:49:04,990
trying to enter them into like an actual

951
00:49:02,140 --> 00:49:10,069
web form because sometimes they they do

952
00:49:04,990 --> 00:49:21,410
it weird so sir

953
00:49:10,070 --> 00:49:24,590
I don't yeah if you're doing that that's

954
00:49:21,410 --> 00:49:28,700
not in my word list and I could you beat

955
00:49:24,590 --> 00:49:31,100
me um yeah but you know the the person

956
00:49:28,700 --> 00:49:38,960
in the financial side that's using fall

957
00:49:31,100 --> 00:49:42,200
2019 for his password use to get in on

958
00:49:38,960 --> 00:49:52,580
your box one responder and you know you

959
00:49:42,200 --> 00:49:54,410
have all my fun yep that's why we're

960
00:49:52,580 --> 00:49:59,210
only using it for select clients right

961
00:49:54,410 --> 00:50:06,890
now and yeah we're kind of still in the

962
00:49:59,210 --> 00:50:08,420
building out the those phases well it

963
00:50:06,890 --> 00:50:09,379
just it really depends on the client you

964
00:50:08,420 --> 00:50:10,610
know you sit down you have that

965
00:50:09,380 --> 00:50:12,650
conversation and you're like these are

966
00:50:10,610 --> 00:50:16,370
the steps we're gonna take to to secure

967
00:50:12,650 --> 00:50:18,470
your hashes and and you know we can you

968
00:50:16,370 --> 00:50:21,859
know SFTP stuff back and forth between

969
00:50:18,470 --> 00:50:24,080
AWS like AWS by itself is not insecure

970
00:50:21,860 --> 00:50:27,560
it's when you don't set it up correctly

971
00:50:24,080 --> 00:50:31,400
that it becomes insecure so we're trying

972
00:50:27,560 --> 00:50:32,600
to do it the best way we can and it's

973
00:50:31,400 --> 00:50:34,850
really kind of a judgment call on the

974
00:50:32,600 --> 00:50:36,560
client so and it's what they want from

975
00:50:34,850 --> 00:50:38,839
an engagement right so if they want us

976
00:50:36,560 --> 00:50:40,940
to the to run our fold like 22 terror

977
00:50:38,840 --> 00:50:42,710
hashes against it or do they want us to

978
00:50:40,940 --> 00:50:44,510
just use our in-house crackers where

979
00:50:42,710 --> 00:50:56,780
everything is secure and behind that you

980
00:50:44,510 --> 00:50:59,870
know behind our firewalls so sir we're

981
00:50:56,780 --> 00:51:01,430
full GPU at this point as I said earlier

982
00:50:59,870 --> 00:51:05,299
if somebody makes an ASIC for password

983
00:51:01,430 --> 00:51:08,180
cracking we'll be in on it but it's just

984
00:51:05,300 --> 00:51:10,070
the money isn't there you know if I

985
00:51:08,180 --> 00:51:13,609
called up a chip manufacturer and said I

986
00:51:10,070 --> 00:51:15,170
want an ASIC to crack ntlm Plus you know

987
00:51:13,610 --> 00:51:17,720
we're crafting many different algorithms

988
00:51:15,170 --> 00:51:19,460
whereas an ASIC like for a Bitcoin for

989
00:51:17,720 --> 00:51:21,240
example is only dealing with the

990
00:51:19,460 --> 00:51:24,720
particular Bitcoin

991
00:51:21,240 --> 00:51:27,629
so I would need a separate chip to go

992
00:51:24,720 --> 00:51:30,299
after each different kind of hash so the

993
00:51:27,630 --> 00:51:31,860
most obvious would be like ntlm but even

994
00:51:30,300 --> 00:51:34,800
that you know a lot of times were

995
00:51:31,860 --> 00:51:36,600
cracking Responder hashes that's ntlm v2

996
00:51:34,800 --> 00:51:39,660
so that's not even gonna work

997
00:51:36,600 --> 00:51:58,680
so the GPU is just kind of debts it's

998
00:51:39,660 --> 00:52:04,799
cheap and easy so sir we've looked at

999
00:51:58,680 --> 00:52:07,529
that um it's not cost-effective CPU

1000
00:52:04,800 --> 00:52:09,720
cracking it just even like like we've

1001
00:52:07,530 --> 00:52:11,670
joked like oh hey this client has like

1002
00:52:09,720 --> 00:52:13,560
200,000 employees we could just turn all

1003
00:52:11,670 --> 00:52:14,400
their desktops into a giant cracking or

1004
00:52:13,560 --> 00:52:16,440
ignite right

1005
00:52:14,400 --> 00:52:18,300
but I mean all you're going to do is we

1006
00:52:16,440 --> 00:52:20,400
run up in a really expensive electric

1007
00:52:18,300 --> 00:52:28,050
bill for something that I can accomplish

1008
00:52:20,400 --> 00:52:45,750
with GPU cracking in a day well so all

1009
00:52:28,050 --> 00:52:48,690
right yep yeah I mean it really depends

1010
00:52:45,750 --> 00:52:50,610
well I'll make a mask up to like 20

1011
00:52:48,690 --> 00:52:52,860
characters if I do have to so like if

1012
00:52:50,610 --> 00:52:55,440
I'm kind of at the end of an engagement

1013
00:52:52,860 --> 00:52:56,430
and I have you know five percent of the

1014
00:52:55,440 --> 00:52:58,410
hashes to go after

1015
00:52:56,430 --> 00:53:02,819
I'll just start throwing random masks at

1016
00:52:58,410 --> 00:53:04,920
it and say like give me the first four

1017
00:53:02,820 --> 00:53:06,930
characters as lowercase and then finish

1018
00:53:04,920 --> 00:53:08,970
it off with that so then I'm shortening

1019
00:53:06,930 --> 00:53:12,180
the amount of brute force so when you

1020
00:53:08,970 --> 00:53:13,799
put the masks in an ashcan there's like

1021
00:53:12,180 --> 00:53:17,399
a little language so you like question

1022
00:53:13,800 --> 00:53:19,980
mark and then a for any character in the

1023
00:53:17,400 --> 00:53:23,760
ninety-six character key space or like

1024
00:53:19,980 --> 00:53:25,290
you for the uppercase L for lowercase so

1025
00:53:23,760 --> 00:53:27,330
instead of brute force and against and I

1026
00:53:25,290 --> 00:53:31,320
need six characters I'm only forcing

1027
00:53:27,330 --> 00:53:33,880
those 26 characters and so I'll kind of

1028
00:53:31,320 --> 00:53:36,460
step that down so that I'm

1029
00:53:33,880 --> 00:53:37,480
sniffing tira ducing the GPU cycles and

1030
00:53:36,460 --> 00:53:41,050
again we're not going to catch

1031
00:53:37,480 --> 00:53:42,610
everything but the longer and more

1032
00:53:41,050 --> 00:53:45,580
complex you can make a password the

1033
00:53:42,610 --> 00:53:48,490
better off you're going to be I did no

1034
00:53:45,580 --> 00:53:51,490
password is 100% guaranteed to not be

1035
00:53:48,490 --> 00:53:53,379
crackable but it's just kind of at that

1036
00:53:51,490 --> 00:53:57,000
point it's kind of luck on my part if I

1037
00:53:53,380 --> 00:53:57,000
put the right mask in to crack you

