1
00:00:01,199 --> 00:00:04,199
foreign

2
00:00:08,720 --> 00:00:11,760
Welcome to our talk about usability and

3
00:00:11,760 --> 00:00:14,099
Secretary of TPM Library appears

4
00:00:14,099 --> 00:00:16,859
um Sidra from Nokia build labs and this

5
00:00:16,859 --> 00:00:18,420
work is done jointly with my colleague

6
00:00:18,420 --> 00:00:20,520
Gabriella lemonta from Nokia labs and

7
00:00:20,520 --> 00:00:22,980
Jana Lindquist from alpha University of

8
00:00:22,980 --> 00:00:25,140
Finland

9
00:00:25,140 --> 00:00:27,000
so before we get started I would like to

10
00:00:27,000 --> 00:00:28,800
introduce TPM although I'm sure that

11
00:00:28,800 --> 00:00:31,740
many of you know what it is so a trusted

12
00:00:31,740 --> 00:00:34,440
platform module or TPM is a tamper-proof

13
00:00:34,440 --> 00:00:36,059
cryptographic chip with a unique

14
00:00:36,059 --> 00:00:37,140
identity

15
00:00:37,140 --> 00:00:39,660
and it can be used for Secure Storage

16
00:00:39,660 --> 00:00:43,340
and security operations

17
00:00:43,340 --> 00:00:46,860
TPM is used in a wide range of security

18
00:00:46,860 --> 00:00:50,160
applications and the most common use for

19
00:00:50,160 --> 00:00:53,399
TPM is secure boating mechanism as seen

20
00:00:53,399 --> 00:00:56,039
in UEFI boot verification

21
00:00:56,039 --> 00:00:58,440
and Chromebooks

22
00:00:58,440 --> 00:01:01,260
DPMS are used in BitLocker and looks

23
00:01:01,260 --> 00:01:04,399
description encryption

24
00:01:05,040 --> 00:01:06,420
um they are used for trusted remote

25
00:01:06,420 --> 00:01:08,820
contestation for the cloud Edge and iot

26
00:01:08,820 --> 00:01:10,080
devices

27
00:01:10,080 --> 00:01:12,540
recently ppms are also recommended to be

28
00:01:12,540 --> 00:01:14,040
used with network function

29
00:01:14,040 --> 00:01:15,720
virtualization to enhance the security

30
00:01:15,720 --> 00:01:18,119
of servers

31
00:01:18,119 --> 00:01:20,400
I think there is a delay in my slides

32
00:01:20,400 --> 00:01:23,159
but uh if I'm going too fast somebody

33
00:01:23,159 --> 00:01:26,540
can just like that

34
00:01:27,000 --> 00:01:29,040
so TPM is an old and widely used

35
00:01:29,040 --> 00:01:31,320
technology however

36
00:01:31,320 --> 00:01:33,299
it's not a go-to choice for software

37
00:01:33,299 --> 00:01:35,180
Developers

38
00:01:35,180 --> 00:01:37,799
so in our study we want you to

39
00:01:37,799 --> 00:01:40,380
understand why

40
00:01:40,380 --> 00:01:43,979
we speculate several reasons so one

41
00:01:43,979 --> 00:01:46,920
reason could be that both TPM Concepts

42
00:01:46,920 --> 00:01:49,560
and security are complicated so

43
00:01:49,560 --> 00:01:51,420
developers do not want to over

44
00:01:51,420 --> 00:01:54,060
complicate them by combining another

45
00:01:54,060 --> 00:01:56,700
reason could be that developers do not

46
00:01:56,700 --> 00:01:58,740
fully understand the potential and use

47
00:01:58,740 --> 00:02:01,100
cases of TPM it could also be because

48
00:02:01,100 --> 00:02:04,140
TPM lacks a supporting ecosystem for

49
00:02:04,140 --> 00:02:06,600
software developers or it could be all

50
00:02:06,600 --> 00:02:09,500
the able reasons

51
00:02:09,679 --> 00:02:13,680
so trusted Computing group or TCG

52
00:02:13,680 --> 00:02:16,560
defines apis as standard specifications

53
00:02:16,560 --> 00:02:18,660
they Define

54
00:02:18,660 --> 00:02:21,360
low level apis for implementing the TPM

55
00:02:21,360 --> 00:02:23,040
Hardware they also Define high-level

56
00:02:23,040 --> 00:02:25,440
apis for the software applications to

57
00:02:25,440 --> 00:02:27,720
communicate with the TPM so in our study

58
00:02:27,720 --> 00:02:30,000
we focused on the high level apis that

59
00:02:30,000 --> 00:02:32,819
are implemented as software libraries

60
00:02:32,819 --> 00:02:35,220
there are five major implementations of

61
00:02:35,220 --> 00:02:37,379
the standardized high level apis and the

62
00:02:37,379 --> 00:02:39,840
study platform which we built supports

63
00:02:39,840 --> 00:02:41,700
all of them however the results

64
00:02:41,700 --> 00:02:44,160
discussed in this paper are based on the

65
00:02:44,160 --> 00:02:46,440
observations about the tpm2 tools

66
00:02:46,440 --> 00:02:48,360
Library which is the most widely used

67
00:02:48,360 --> 00:02:51,000
Library so the goal of our study was to

68
00:02:51,000 --> 00:02:53,040
review the API implementation together

69
00:02:53,040 --> 00:02:54,840
with the developers to understand the

70
00:02:54,840 --> 00:02:57,660
usability and security pitfalls

71
00:02:57,660 --> 00:02:59,819
based on that we wanted to provide

72
00:02:59,819 --> 00:03:01,920
concrete design guidelines for making

73
00:03:01,920 --> 00:03:06,500
the apis uh more usable and secure

74
00:03:06,959 --> 00:03:09,360
so from a research point of view

75
00:03:09,360 --> 00:03:11,940
what we find interesting about TPM is

76
00:03:11,940 --> 00:03:13,800
the combination of that cryptographic

77
00:03:13,800 --> 00:03:17,159
and non-cryptographic security features

78
00:03:17,159 --> 00:03:20,700
so TPM can be used for the usual

79
00:03:20,700 --> 00:03:23,159
cryptographic operations such as key

80
00:03:23,159 --> 00:03:25,500
generation encryption

81
00:03:25,500 --> 00:03:28,800
signing hashing however TPM also offers

82
00:03:28,800 --> 00:03:30,840
various other non-cryptographic features

83
00:03:30,840 --> 00:03:34,140
so firstly it offers Secure Storage in

84
00:03:34,140 --> 00:03:36,900
its non-molatile RAM and special

85
00:03:36,900 --> 00:03:38,400
registers called as platform

86
00:03:38,400 --> 00:03:40,260
configuration registers

87
00:03:40,260 --> 00:03:43,140
TPMS can also store sensitive data as

88
00:03:43,140 --> 00:03:44,459
sealed blocks

89
00:03:44,459 --> 00:03:45,959
secondly

90
00:03:45,959 --> 00:03:48,659
TPM offers Rich Access Control

91
00:03:48,659 --> 00:03:51,420
restrictions and policies that can be

92
00:03:51,420 --> 00:03:54,120
applied to cryptography keys and tpm's

93
00:03:54,120 --> 00:03:56,299
internal and external States finally

94
00:03:56,299 --> 00:03:58,920
tpm's unique identity and coding

95
00:03:58,920 --> 00:04:01,319
mechanism to capture its states a state

96
00:04:01,319 --> 00:04:03,060
of its host can be used for remote

97
00:04:03,060 --> 00:04:05,780
registration

98
00:04:05,879 --> 00:04:08,040
so now that I have introduced DPM and

99
00:04:08,040 --> 00:04:09,480
its features let me provide a high level

100
00:04:09,480 --> 00:04:11,580
overview of our study

101
00:04:11,580 --> 00:04:13,920
so we started by creating a participant

102
00:04:13,920 --> 00:04:16,139
pool of the TPM developers who we

103
00:04:16,139 --> 00:04:18,660
invited for a preliminary survey this

104
00:04:18,660 --> 00:04:20,699
survey helped filter out participants

105
00:04:20,699 --> 00:04:22,680
and identify common use cases of PPM

106
00:04:22,680 --> 00:04:25,320
that we use to create tasks in our study

107
00:04:25,320 --> 00:04:27,180
meanwhile we independently analyze the

108
00:04:27,180 --> 00:04:29,280
DPM Library ecosystem and conducted a

109
00:04:29,280 --> 00:04:30,840
literature survey which helped us to

110
00:04:30,840 --> 00:04:32,820
define the criteria for the tasks and

111
00:04:32,820 --> 00:04:34,979
prepare questionnaires we've built an

112
00:04:34,979 --> 00:04:37,139
online study environment using open

113
00:04:37,139 --> 00:04:39,000
source components and presented the

114
00:04:39,000 --> 00:04:41,220
tasks and questionnaires we also

115
00:04:41,220 --> 00:04:43,080
conducted cognitive interviews with some

116
00:04:43,080 --> 00:04:45,840
of our participants we qualitatively

117
00:04:45,840 --> 00:04:47,699
analyze the data gathered from the study

118
00:04:47,699 --> 00:04:51,919
environment and interview transcripts

119
00:04:52,280 --> 00:04:55,500
we targeted DPM developers with security

120
00:04:55,500 --> 00:04:58,560
background such that we can design tasks

121
00:04:58,560 --> 00:05:01,620
that are close to real life scenarios 36

122
00:05:01,620 --> 00:05:03,840
out of 48 participants in a preliminary

123
00:05:03,840 --> 00:05:05,340
survey expressed interest in

124
00:05:05,340 --> 00:05:07,560
participating in the actual study 13

125
00:05:07,560 --> 00:05:09,540
participants completed the study and we

126
00:05:09,540 --> 00:05:11,940
interviewed nine of them our results are

127
00:05:11,940 --> 00:05:13,440
from these nine participants who

128
00:05:13,440 --> 00:05:15,180
completed the entire protocol

129
00:05:15,180 --> 00:05:18,240
the main limitation of a study is that

130
00:05:18,240 --> 00:05:19,919
we have a small number of participants

131
00:05:19,919 --> 00:05:22,560
and all of them used TPM to tools

132
00:05:22,560 --> 00:05:24,539
Library however in our paper we argue

133
00:05:24,539 --> 00:05:27,539
that our results are generalizable

134
00:05:27,539 --> 00:05:30,240
um so we designed four tasks that

135
00:05:30,240 --> 00:05:31,500
combine cryptographic and

136
00:05:31,500 --> 00:05:33,960
non-cryptographic features of the PPM so

137
00:05:33,960 --> 00:05:36,300
the first talk was uh encryption where

138
00:05:36,300 --> 00:05:38,580
half of the participants got symmetric

139
00:05:38,580 --> 00:05:40,680
and the rest got uh asymmetric

140
00:05:40,680 --> 00:05:41,699
encryption

141
00:05:41,699 --> 00:05:44,100
storing measurements securing secrets

142
00:05:44,100 --> 00:05:45,840
and remote attestation tasks were common

143
00:05:45,840 --> 00:05:47,639
to all participants

144
00:05:47,639 --> 00:05:49,860
our study also contained questionnaire

145
00:05:49,860 --> 00:05:52,199
to collect the perceptions and opinions

146
00:05:52,199 --> 00:05:53,759
of our participants so we collected

147
00:05:53,759 --> 00:05:55,259
basic demographics at the beginning of

148
00:05:55,259 --> 00:05:57,720
the study and then after each task we

149
00:05:57,720 --> 00:05:59,340
asked about familiarity and complexity

150
00:05:59,340 --> 00:06:01,740
perception of the test also we collected

151
00:06:01,740 --> 00:06:03,300
participants perceptions about their

152
00:06:03,300 --> 00:06:05,699
courts security and correctness the end

153
00:06:05,699 --> 00:06:08,280
we also asked about the usual choice of

154
00:06:08,280 --> 00:06:09,960
reference materials and reasons for

155
00:06:09,960 --> 00:06:11,340
looking for information outside the

156
00:06:11,340 --> 00:06:13,039
library documentation

157
00:06:13,039 --> 00:06:16,979
we conducted the analysis in two phases

158
00:06:16,979 --> 00:06:19,020
so in phase one we analyzed the code

159
00:06:19,020 --> 00:06:21,120
Snippets executed in the study platform

160
00:06:21,120 --> 00:06:22,979
and questionnaire responses

161
00:06:22,979 --> 00:06:26,400
the code snippet and responses were used

162
00:06:26,400 --> 00:06:28,620
as for the interview as prompts and

163
00:06:28,620 --> 00:06:29,759
probes

164
00:06:29,759 --> 00:06:31,979
in the phase 2 we conducted a thematic

165
00:06:31,979 --> 00:06:34,080
analysis of the interview scripts we

166
00:06:34,080 --> 00:06:36,300
also have two types of results so first

167
00:06:36,300 --> 00:06:39,120
we have the themes of usability and

168
00:06:39,120 --> 00:06:41,580
security pitfalls second the common

169
00:06:41,580 --> 00:06:44,160
coding patterns of developers habits and

170
00:06:44,160 --> 00:06:46,160
mistakes

171
00:06:46,160 --> 00:06:49,199
so we identified 18 themes from the

172
00:06:49,199 --> 00:06:51,120
Thematic analysis the first set of

173
00:06:51,120 --> 00:06:52,919
themes were about the API Library

174
00:06:52,919 --> 00:06:55,979
software so we found uh usability and

175
00:06:55,979 --> 00:06:58,080
security issues due to improper naming

176
00:06:58,080 --> 00:07:01,080
conventions output formats

177
00:07:01,080 --> 00:07:04,139
and error handling in the second set of

178
00:07:04,139 --> 00:07:05,520
themes we identified several

179
00:07:05,520 --> 00:07:06,900
shortcomings in the library

180
00:07:06,900 --> 00:07:08,460
documentation

181
00:07:08,460 --> 00:07:10,440
and finally we discovered themes related

182
00:07:10,440 --> 00:07:12,240
to mental models and Trust factors

183
00:07:12,240 --> 00:07:14,340
formed from Clear experience of our

184
00:07:14,340 --> 00:07:15,419
participants

185
00:07:15,419 --> 00:07:18,660
we also uncovered common coding patterns

186
00:07:18,660 --> 00:07:20,280
that affected the security of the code

187
00:07:20,280 --> 00:07:21,419
mainly

188
00:07:21,419 --> 00:07:24,180
participants heavily uh relied on the

189
00:07:24,180 --> 00:07:26,460
defaults also they were careless while

190
00:07:26,460 --> 00:07:28,259
specifying the cryptographic and TPM

191
00:07:28,259 --> 00:07:30,599
specific attributes and do not consider

192
00:07:30,599 --> 00:07:33,860
the threat models

193
00:07:35,039 --> 00:07:37,740
uh due to time constraints we present a

194
00:07:37,740 --> 00:07:40,139
simple example the the result is picked

195
00:07:40,139 --> 00:07:42,120
from the library themes category about

196
00:07:42,120 --> 00:07:44,759
error handling which lacked pointers on

197
00:07:44,759 --> 00:07:47,940
how to resolve the error so in the

198
00:07:47,940 --> 00:07:49,800
encryption task a participant had not

199
00:07:49,800 --> 00:07:52,199
used the initialization vector and as

200
00:07:52,199 --> 00:07:53,940
you can see the warning message just

201
00:07:53,940 --> 00:07:58,020
says using weak IV try specifying an IV

202
00:07:58,020 --> 00:07:59,759
the participants find this to be

203
00:07:59,759 --> 00:08:01,919
unhelpful because the error message does

204
00:08:01,919 --> 00:08:04,440
not assist in any way in resolving the

205
00:08:04,440 --> 00:08:07,020
error also the documentation provides a

206
00:08:07,020 --> 00:08:09,000
bad example by giving a code snippet for

207
00:08:09,000 --> 00:08:10,800
the encryption command that actually

208
00:08:10,800 --> 00:08:14,220
does not use the IV parameter

209
00:08:14,220 --> 00:08:16,919
so our study highlights that TPM apis

210
00:08:16,919 --> 00:08:19,259
that we study and most likely all other

211
00:08:19,259 --> 00:08:21,599
apis do not follow the secure API

212
00:08:21,599 --> 00:08:23,099
development guidelines for example

213
00:08:23,099 --> 00:08:25,259
suggested by greens and cements so

214
00:08:25,259 --> 00:08:27,000
provide two types of immediate

215
00:08:27,000 --> 00:08:29,639
recommendations based on our findings so

216
00:08:29,639 --> 00:08:31,740
for the library documentation we found

217
00:08:31,740 --> 00:08:34,860
that experienced developer uh struggle

218
00:08:34,860 --> 00:08:36,779
to use TPM security offerings whereas

219
00:08:36,779 --> 00:08:38,820
less experienced ones uh have many

220
00:08:38,820 --> 00:08:41,520
misconceptions about the TPMS uh what

221
00:08:41,520 --> 00:08:43,919
TPMS can and cannot do So to avoid this

222
00:08:43,919 --> 00:08:45,240
we recommend the documentation to

223
00:08:45,240 --> 00:08:47,519
include information about TPM Concepts

224
00:08:47,519 --> 00:08:49,620
and we also found that all participants

225
00:08:49,620 --> 00:08:51,480
found the examples in the documentation

226
00:08:51,480 --> 00:08:53,700
not very helpful therefore our

227
00:08:53,700 --> 00:08:56,100
recommendation is to provide a secure

228
00:08:56,100 --> 00:08:58,380
code code Snippets for common use cases

229
00:08:58,380 --> 00:09:00,600
of PPM uh instead of hello world

230
00:09:00,600 --> 00:09:02,180
examples

231
00:09:02,180 --> 00:09:05,220
and we found that every participants

232
00:09:05,220 --> 00:09:06,720
seem to have struggled with getting

233
00:09:06,720 --> 00:09:08,820
started with PPM despite their peer

234
00:09:08,820 --> 00:09:11,279
coding or security experience so we

235
00:09:11,279 --> 00:09:13,500
recommend that the documentation should

236
00:09:13,500 --> 00:09:16,140
somehow include TPM for dummies to cover

237
00:09:16,140 --> 00:09:20,040
uh how to start from scratch and uh walk

238
00:09:20,040 --> 00:09:21,480
through examples

239
00:09:21,480 --> 00:09:23,700
and also uh we recommend the

240
00:09:23,700 --> 00:09:25,320
documentation we include guidelines for

241
00:09:25,320 --> 00:09:27,899
picking security attributes finally we

242
00:09:27,899 --> 00:09:30,060
found several incoherent aspects in

243
00:09:30,060 --> 00:09:32,459
naming conventions and between software

244
00:09:32,459 --> 00:09:36,420
version so we recommend to fix them all

245
00:09:36,420 --> 00:09:38,580
but the library software we recommend

246
00:09:38,580 --> 00:09:40,140
that uh

247
00:09:40,140 --> 00:09:42,420
the error messages and output should be

248
00:09:42,420 --> 00:09:45,180
developer friendly and it has to be a

249
00:09:45,180 --> 00:09:48,480
specific and concrete in particular this

250
00:09:48,480 --> 00:09:51,560
message should convey a success message

251
00:09:51,560 --> 00:09:54,120
and it should convey the error-free

252
00:09:54,120 --> 00:09:56,040
execution of the command and also give

253
00:09:56,040 --> 00:09:57,480
feedback on what the command has

254
00:09:57,480 --> 00:10:00,060
achieved and also it should alert about

255
00:10:00,060 --> 00:10:02,100
the interpretation of the result or

256
00:10:02,100 --> 00:10:03,779
immediate steps that has to be taken by

257
00:10:03,779 --> 00:10:04,860
the developer

258
00:10:04,860 --> 00:10:06,600
and also it should include descriptive

259
00:10:06,600 --> 00:10:07,980
meta information

260
00:10:07,980 --> 00:10:10,560
we recommend the library software to

261
00:10:10,560 --> 00:10:12,779
promote and highlight the advantages of

262
00:10:12,779 --> 00:10:14,540
abstraction functions whenever available

263
00:10:14,540 --> 00:10:17,100
and we also suggest that the library

264
00:10:17,100 --> 00:10:19,200
should create new abstraction functions

265
00:10:19,200 --> 00:10:21,959
around common use cases of TPM I said

266
00:10:21,959 --> 00:10:23,540
earlier

267
00:10:23,540 --> 00:10:26,580
the developers rely on defaults so the

268
00:10:26,580 --> 00:10:28,440
libraries must default to the most

269
00:10:28,440 --> 00:10:30,600
secure option available and discourage

270
00:10:30,600 --> 00:10:32,160
or discontinue

271
00:10:32,160 --> 00:10:35,959
Legacy and insecure ones

272
00:10:36,120 --> 00:10:37,920
we now conclude this talk with the

273
00:10:37,920 --> 00:10:39,660
summary of our contributions and results

274
00:10:39,660 --> 00:10:41,700
so first we built an open source

275
00:10:41,700 --> 00:10:44,399
platform for TPM related tasks that

276
00:10:44,399 --> 00:10:46,320
works right out of a browser and it can

277
00:10:46,320 --> 00:10:48,360
be used for future studies

278
00:10:48,360 --> 00:10:51,180
second the presented qualitative results

279
00:10:51,180 --> 00:10:53,820
about the PPM tool tools Library we

280
00:10:53,820 --> 00:10:55,560
found that the apis and supporting

281
00:10:55,560 --> 00:10:57,899
materials are not developer friendly we

282
00:10:57,899 --> 00:10:59,700
also provided concrete recommendations

283
00:10:59,700 --> 00:11:02,459
to immediately address the issues

284
00:11:02,459 --> 00:11:04,800
that we identified finally we found that

285
00:11:04,800 --> 00:11:06,720
many usability and security pitfalls in

286
00:11:06,720 --> 00:11:08,040
software stem from standard

287
00:11:08,040 --> 00:11:11,399
specifications they follow so HCI

288
00:11:11,399 --> 00:11:12,959
experts should be involved in the design

289
00:11:12,959 --> 00:11:15,360
of technical specifications with that we

290
00:11:15,360 --> 00:11:17,399
advocate for what we call as usability

291
00:11:17,399 --> 00:11:20,160
by Design approach while designing APS

292
00:11:20,160 --> 00:11:21,720
thank you for your attention for more

293
00:11:21,720 --> 00:11:23,940
details please read our suit paper or

294
00:11:23,940 --> 00:11:25,380
contact us and also our GitHub

295
00:11:25,380 --> 00:11:27,839
repository for the TPM study platform is

296
00:11:27,839 --> 00:11:29,519
also at your disposal so feel free to

297
00:11:29,519 --> 00:11:33,440
drink with that thank you

298
00:11:37,079 --> 00:11:40,200
thank you I love these kinds of very

299
00:11:40,200 --> 00:11:42,360
specialized security usability topics

300
00:11:42,360 --> 00:11:45,360
we've got a question on slack from Anna

301
00:11:45,360 --> 00:11:47,279
Marie hello you mentioned your results

302
00:11:47,279 --> 00:11:49,620
being generalizable despite the small

303
00:11:49,620 --> 00:11:51,420
sample and I might sample but I might

304
00:11:51,420 --> 00:11:53,160
have missed this but could you give a

305
00:11:53,160 --> 00:11:55,079
few more details on why you consider it

306
00:11:55,079 --> 00:11:56,160
to be so

307
00:11:56,160 --> 00:11:58,200
so first thing is we see this pattern

308
00:11:58,200 --> 00:12:01,260
tpm2 tools is actually a quite widely

309
00:12:01,260 --> 00:12:05,579
used library and uh all the other

310
00:12:05,579 --> 00:12:08,300
libraries have some sort of uh

311
00:12:08,300 --> 00:12:10,740
copy the same cell and they all stem

312
00:12:10,740 --> 00:12:14,459
from uh same TPM specifications so it's

313
00:12:14,459 --> 00:12:17,040
most likely that they follow the same

314
00:12:17,040 --> 00:12:18,540
pattern or they have the exact same

315
00:12:18,540 --> 00:12:20,880
pattern so the problems which you

316
00:12:20,880 --> 00:12:22,380
identified are in the specifications

317
00:12:22,380 --> 00:12:25,260
which means that every every API that

318
00:12:25,260 --> 00:12:27,240
has followed the specification might

319
00:12:27,240 --> 00:12:28,920
also have the same problem

320
00:12:28,920 --> 00:12:32,399
thank you so our in fact like uh when we

321
00:12:32,399 --> 00:12:33,899
built the library we supported all of

322
00:12:33,899 --> 00:12:37,279
them but uh this seems to be a very uh

323
00:12:37,279 --> 00:12:39,839
favorite choice of all developers so

324
00:12:39,839 --> 00:12:41,760
although the new multiple libraries they

325
00:12:41,760 --> 00:12:45,480
just picked tpm22 for some reason

326
00:12:45,480 --> 00:12:47,279
okay thank you we have an in-room

327
00:12:47,279 --> 00:12:48,180
question

328
00:12:48,180 --> 00:12:49,500
yeah

329
00:12:49,500 --> 00:12:52,139
um I appreciated the the recommendations

330
00:12:52,139 --> 00:12:53,700
that you gave that were super specific

331
00:12:53,700 --> 00:12:56,040
for the library docs in particular you

332
00:12:56,040 --> 00:12:57,720
mentioned including the background info

333
00:12:57,720 --> 00:12:59,880
about TPM Concepts and then also

334
00:12:59,880 --> 00:13:01,500
including guidelines for picking

335
00:13:01,500 --> 00:13:04,079
security attributes I'm curious if you

336
00:13:04,079 --> 00:13:06,120
found that it was also important to

337
00:13:06,120 --> 00:13:08,519
provide background info about those

338
00:13:08,519 --> 00:13:11,220
security attributes or privacy or

339
00:13:11,220 --> 00:13:13,019
security concerns that a developer

340
00:13:13,019 --> 00:13:16,200
should be thinking about similar to the

341
00:13:16,200 --> 00:13:18,300
TPM Concepts

342
00:13:18,300 --> 00:13:20,820
yeah I think so so one of the main uh

343
00:13:20,820 --> 00:13:22,860
problem we found was unless and until

344
00:13:22,860 --> 00:13:24,959
the threat model is given or somehow it

345
00:13:24,959 --> 00:13:28,019
is conveyed through examples uh they

346
00:13:28,019 --> 00:13:29,700
even if you provide the concrete

347
00:13:29,700 --> 00:13:31,560
examples or concrete guidelines they

348
00:13:31,560 --> 00:13:33,779
wouldn't pick it so uh with this

349
00:13:33,779 --> 00:13:36,180
background information uh we feel that

350
00:13:36,180 --> 00:13:38,519
PPM or any topic which is kind of

351
00:13:38,519 --> 00:13:41,279
complicated uh it should somehow educate

352
00:13:41,279 --> 00:13:43,800
the developers about what to look for

353
00:13:43,800 --> 00:13:45,720
what kind of attacks are there or how

354
00:13:45,720 --> 00:13:48,600
they can defend through code so mainly

355
00:13:48,600 --> 00:13:50,279
that helps that is helpful if they

356
00:13:50,279 --> 00:13:51,899
provide like instead of hollow World

357
00:13:51,899 --> 00:13:54,120
example if they create some sort of Real

358
00:13:54,120 --> 00:13:57,120
World walkthrough examples that's our

359
00:13:57,120 --> 00:14:00,420
finding thank you all right time for one

360
00:14:00,420 --> 00:14:01,980
more James do you want to go for it yeah

361
00:14:01,980 --> 00:14:04,440
sure great thank you

362
00:14:04,440 --> 00:14:07,079
uh hi so in your uh recommendations you

363
00:14:07,079 --> 00:14:08,459
mentioned that you'd provide codes that

364
00:14:08,459 --> 00:14:09,779
you recommended providing code snippets

365
00:14:09,779 --> 00:14:11,519
on examples of what to do and I was

366
00:14:11,519 --> 00:14:12,779
wondering if you thought there might be

367
00:14:12,779 --> 00:14:14,459
any value in providing examples of like

368
00:14:14,459 --> 00:14:16,500
what not to do or maybe common pitfalls

369
00:14:16,500 --> 00:14:18,420
and how maybe you could couple that with

370
00:14:18,420 --> 00:14:19,680
different threat models to show how

371
00:14:19,680 --> 00:14:21,300
improper use may still leave you

372
00:14:21,300 --> 00:14:24,000
vulnerable or may still leave kind of

373
00:14:24,000 --> 00:14:25,320
holes in security that you think you

374
00:14:25,320 --> 00:14:28,019
might be patching when you're not

375
00:14:28,019 --> 00:14:30,000
sorry can you can you repeat the

376
00:14:30,000 --> 00:14:33,120
question so I was wondering if you so in

377
00:14:33,120 --> 00:14:35,100
addition to providing code Snippets of

378
00:14:35,100 --> 00:14:36,959
what to do is wondering if you think

379
00:14:36,959 --> 00:14:39,180
there's any value in common pit

380
00:14:39,180 --> 00:14:40,800
providing code Snippets that show common

381
00:14:40,800 --> 00:14:42,839
pitfalls or things that you should not

382
00:14:42,839 --> 00:14:43,740
do

383
00:14:43,740 --> 00:14:46,199
uh definitely I think like uh one of the

384
00:14:46,199 --> 00:14:48,600
reason why we kind of uh also collected

385
00:14:48,600 --> 00:14:51,180
what are the common mistakes or what uh

386
00:14:51,180 --> 00:14:52,860
what the developers have done is to

387
00:14:52,860 --> 00:14:55,380
somehow create this list of everything

388
00:14:55,380 --> 00:14:58,260
what not to do and somehow also include

389
00:14:58,260 --> 00:14:59,399
them

390
00:14:59,399 --> 00:15:04,320
and just like how FAQs security and

391
00:15:04,320 --> 00:15:06,720
privacy effects could be there potential

392
00:15:06,720 --> 00:15:09,180
value for that listing and educating

393
00:15:09,180 --> 00:15:11,420
them

