1
00:00:01,199 --> 00:00:04,199
foreign

2
00:00:07,940 --> 00:00:10,800
thank you very much

3
00:00:10,800 --> 00:00:13,620
hi everyone and welcome to my talk on

4
00:00:13,620 --> 00:00:15,780
let's Hash a website that we developed

5
00:00:15,780 --> 00:00:17,699
to help developers with password

6
00:00:17,699 --> 00:00:19,199
security

7
00:00:19,199 --> 00:00:21,300
my name is

8
00:00:21,300 --> 00:00:23,580
and I worked on this paper together with

9
00:00:23,580 --> 00:00:26,100
my co-authors Anna Marie otloff Matthew

10
00:00:26,100 --> 00:00:29,580
Smith and Alina nayakshina

11
00:00:29,580 --> 00:00:32,040
in recent years there's been an increase

12
00:00:32,040 --> 00:00:34,559
in Research into the way that usability

13
00:00:34,559 --> 00:00:36,600
impacts Developers

14
00:00:36,600 --> 00:00:38,399
and what all these Works have in common

15
00:00:38,399 --> 00:00:41,280
is that they show that developers even

16
00:00:41,280 --> 00:00:43,980
good developers often struggle when it

17
00:00:43,980 --> 00:00:45,600
comes to implementing code that is

18
00:00:45,600 --> 00:00:46,920
secure

19
00:00:46,920 --> 00:00:50,520
in general developers rely on resources

20
00:00:50,520 --> 00:00:52,680
for their programming that offer them

21
00:00:52,680 --> 00:00:55,860
Snippets of code that they can copy and

22
00:00:55,860 --> 00:00:59,239
paste into their projects

23
00:01:00,420 --> 00:01:02,820
that's something that if you've ever

24
00:01:02,820 --> 00:01:04,319
written even a single line of code you

25
00:01:04,319 --> 00:01:05,820
can probably confirm but it's also

26
00:01:05,820 --> 00:01:07,500
something that's been mentioned by these

27
00:01:07,500 --> 00:01:08,939
works

28
00:01:08,939 --> 00:01:11,520
and you get what you're looking for the

29
00:01:11,520 --> 00:01:14,159
authors noted that developers who used

30
00:01:14,159 --> 00:01:17,159
stack Overflow to copy code often

31
00:01:17,159 --> 00:01:19,860
introduced security errors for example

32
00:01:19,860 --> 00:01:23,280
the use of outdated code

33
00:01:23,280 --> 00:01:25,439
when the developers used official

34
00:01:25,439 --> 00:01:27,840
documentation as a coding resource they

35
00:01:27,840 --> 00:01:30,060
performed better in terms of security

36
00:01:30,060 --> 00:01:32,520
but they struggled more overall to

37
00:01:32,520 --> 00:01:35,220
produce functional Solutions

38
00:01:35,220 --> 00:01:37,439
so it seems we have a problem right

39
00:01:37,439 --> 00:01:40,740
either resources are usable and

40
00:01:40,740 --> 00:01:43,140
accessible or they are up to date enough

41
00:01:43,140 --> 00:01:46,020
to help produce Secure Solutions

42
00:01:46,020 --> 00:01:49,560
however in this work where developers

43
00:01:49,560 --> 00:01:51,360
were asked to store passwords in a

44
00:01:51,360 --> 00:01:52,939
database

45
00:01:52,939 --> 00:01:55,799
only those Developers

46
00:01:55,799 --> 00:01:58,320
who used copy and paste produced any

47
00:01:58,320 --> 00:02:00,899
Secure Solutions at all

48
00:02:00,899 --> 00:02:02,820
so at first glance this might seem

49
00:02:02,820 --> 00:02:04,200
contradictory

50
00:02:04,200 --> 00:02:06,540
but it really just means this

51
00:02:06,540 --> 00:02:09,119
if the code that is accessible and easy

52
00:02:09,119 --> 00:02:11,879
to copy paste is also secure and up to

53
00:02:11,879 --> 00:02:12,780
date

54
00:02:12,780 --> 00:02:15,000
then the solutions that developers come

55
00:02:15,000 --> 00:02:18,360
up with will be secure

56
00:02:18,360 --> 00:02:21,540
so what we wanted to try was to develop

57
00:02:21,540 --> 00:02:22,860
a resource

58
00:02:22,860 --> 00:02:25,920
that combines the usability aspects of

59
00:02:25,920 --> 00:02:29,459
forums like stack Overflow such as code

60
00:02:29,459 --> 00:02:31,200
that's easy to find and easy to copy

61
00:02:31,200 --> 00:02:32,220
paste

62
00:02:32,220 --> 00:02:34,620
with some of the security aspects of

63
00:02:34,620 --> 00:02:37,020
official documentation

64
00:02:37,020 --> 00:02:38,940
so we developed a website we called it

65
00:02:38,940 --> 00:02:41,640
let's hash and we conducted a developer

66
00:02:41,640 --> 00:02:44,779
study to validate it

67
00:02:45,560 --> 00:02:48,660
has a few code Snippets that are very

68
00:02:48,660 --> 00:02:51,540
easy to copy and paste and they focus on

69
00:02:51,540 --> 00:02:53,160
three topics surrounding user

70
00:02:53,160 --> 00:02:55,920
authentication which are topics that

71
00:02:55,920 --> 00:02:58,680
often cause security concerns one of

72
00:02:58,680 --> 00:03:01,200
them is the storage of passwords in

73
00:03:01,200 --> 00:03:03,480
databases for which passwords need to be

74
00:03:03,480 --> 00:03:06,420
hashed with a secure hashing algorithm

75
00:03:06,420 --> 00:03:08,660
password policies

76
00:03:08,660 --> 00:03:10,739
which should be in line with current

77
00:03:10,739 --> 00:03:14,220
best practices because they are supposed

78
00:03:14,220 --> 00:03:17,340
to support the end user in choosing a

79
00:03:17,340 --> 00:03:19,080
good secure password

80
00:03:19,080 --> 00:03:21,780
and two-factor authentication which is

81
00:03:21,780 --> 00:03:23,879
an important additional layer

82
00:03:23,879 --> 00:03:25,500
when it comes to security of user

83
00:03:25,500 --> 00:03:28,019
Authentication

84
00:03:28,019 --> 00:03:31,500
we also developed a design variation of

85
00:03:31,500 --> 00:03:34,260
let's hash that contained a UI element

86
00:03:34,260 --> 00:03:36,780
that functions similarly to an

87
00:03:36,780 --> 00:03:38,819
installation wizard so this element

88
00:03:38,819 --> 00:03:41,760
would ask a few questions up front for

89
00:03:41,760 --> 00:03:42,920
example

90
00:03:42,920 --> 00:03:45,720
what language the developer intends to

91
00:03:45,720 --> 00:03:47,580
use for their programming and the level

92
00:03:47,580 --> 00:03:50,580
of security they'll need and then uses

93
00:03:50,580 --> 00:03:52,560
the answers to these questions to guide

94
00:03:52,560 --> 00:03:55,620
the developer to a piece of code that's

95
00:03:55,620 --> 00:03:57,480
as specifically tailored to their needs

96
00:03:57,480 --> 00:03:59,760
as possible so for example if you were

97
00:03:59,760 --> 00:04:01,680
to say you want to use Python to

98
00:04:01,680 --> 00:04:03,780
implement password hashing this wizard

99
00:04:03,780 --> 00:04:07,140
would then give you a code snippet that

100
00:04:07,140 --> 00:04:09,599
implements the argon2 ID algorithm in

101
00:04:09,599 --> 00:04:12,079
Python

102
00:04:12,900 --> 00:04:15,659
uh so the study we conducted to validate

103
00:04:15,659 --> 00:04:18,839
let's hash was done with 179

104
00:04:18,839 --> 00:04:20,820
participants that we recruited from

105
00:04:20,820 --> 00:04:22,440
freelancer.com

106
00:04:22,440 --> 00:04:25,860
freelancer is a platform that aims to

107
00:04:25,860 --> 00:04:28,199
connect freelance developers with

108
00:04:28,199 --> 00:04:30,540
clients who would like to hire them

109
00:04:30,540 --> 00:04:33,120
so that means that our participants are

110
00:04:33,120 --> 00:04:35,460
actual professionals who are active in

111
00:04:35,460 --> 00:04:36,840
the field

112
00:04:36,840 --> 00:04:39,419
the study itself was made up of two

113
00:04:39,419 --> 00:04:42,120
parts at first the developers had to

114
00:04:42,120 --> 00:04:44,280
work on three programming tasks one for

115
00:04:44,280 --> 00:04:45,660
each topic that's currently present on

116
00:04:45,660 --> 00:04:47,940
let's hash and afterwards in the survey

117
00:04:47,940 --> 00:04:50,820
we asked them a few questions to gain

118
00:04:50,820 --> 00:04:52,620
more insights into their workflow their

119
00:04:52,620 --> 00:04:55,800
prior experiences and the perceived

120
00:04:55,800 --> 00:04:57,479
usability of the resources they were

121
00:04:57,479 --> 00:04:59,160
using

122
00:04:59,160 --> 00:05:00,960
the participants were split into three

123
00:05:00,960 --> 00:05:03,720
groups two working with latash one with

124
00:05:03,720 --> 00:05:06,180
the wizard and one without it and the

125
00:05:06,180 --> 00:05:08,940
control group the control group had to

126
00:05:08,940 --> 00:05:10,620
work on the same programming tasks as

127
00:05:10,620 --> 00:05:12,600
the other two groups but they did not

128
00:05:12,600 --> 00:05:14,280
have a specified resource for their

129
00:05:14,280 --> 00:05:15,960
programming instead they were asked to

130
00:05:15,960 --> 00:05:20,060
use whatever they would regularly use

131
00:05:21,120 --> 00:05:23,160
now looking at these results here it's

132
00:05:23,160 --> 00:05:25,199
clear to see that the groups that had

133
00:05:25,199 --> 00:05:27,539
let's hash at their disposal performed a

134
00:05:27,539 --> 00:05:29,280
lot better in terms of security and

135
00:05:29,280 --> 00:05:31,500
under control group to put this into

136
00:05:31,500 --> 00:05:34,740
numbers you developers with let's hash

137
00:05:34,740 --> 00:05:38,340
were between 5 and 32 times as likely to

138
00:05:38,340 --> 00:05:40,860
produce a secure solution when compared

139
00:05:40,860 --> 00:05:42,900
to the control group

140
00:05:42,900 --> 00:05:45,900
we also calculated the system usability

141
00:05:45,900 --> 00:05:48,539
score for both versions of let's hash

142
00:05:48,539 --> 00:05:50,880
and found that there was no significant

143
00:05:50,880 --> 00:05:51,800
difference

144
00:05:51,800 --> 00:05:54,539
between the version with the wizard and

145
00:05:54,539 --> 00:05:57,300
the version without it but as you can

146
00:05:57,300 --> 00:05:59,580
see there was a slight difference

147
00:05:59,580 --> 00:06:00,180
um

148
00:06:00,180 --> 00:06:01,520
in security

149
00:06:01,520 --> 00:06:04,560
the users who used lad sash with the

150
00:06:04,560 --> 00:06:07,919
wizard were slightly less likely to

151
00:06:07,919 --> 00:06:10,639
um produce a secure solution

152
00:06:10,639 --> 00:06:12,860
although these differences were not

153
00:06:12,860 --> 00:06:15,120
statistically significant

154
00:06:15,120 --> 00:06:18,180
still it meant that for now we have

155
00:06:18,180 --> 00:06:19,740
halted development

156
00:06:19,740 --> 00:06:21,900
on The Wizard and the version of Let's

157
00:06:21,900 --> 00:06:24,240
hash that's online right now does not

158
00:06:24,240 --> 00:06:27,080
have a wizard anymore

159
00:06:27,120 --> 00:06:29,819
also of Interest are the types of errors

160
00:06:29,819 --> 00:06:32,520
that participants made when they failed

161
00:06:32,520 --> 00:06:34,860
to produce a secure solution

162
00:06:34,860 --> 00:06:38,160
the most common security error was that

163
00:06:38,160 --> 00:06:39,900
participants would not use correct

164
00:06:39,900 --> 00:06:42,840
randomization with the cryptographic

165
00:06:42,840 --> 00:06:45,720
algorithms that's something that weakens

166
00:06:45,720 --> 00:06:47,520
the security of these algorithms

167
00:06:47,520 --> 00:06:48,780
considerably

168
00:06:48,780 --> 00:06:52,259
and the second most common error was the

169
00:06:52,259 --> 00:06:54,620
use of outdated algorithms for example

170
00:06:54,620 --> 00:06:57,720
md5 which has been outdated for many

171
00:06:57,720 --> 00:07:02,120
years now and is considered insecure

172
00:07:02,419 --> 00:07:04,979
especially in the control group as you

173
00:07:04,979 --> 00:07:07,440
can see we saw this happen a lot and

174
00:07:07,440 --> 00:07:10,259
this again underlines that getting

175
00:07:10,259 --> 00:07:12,840
outdated or incorrect information is a

176
00:07:12,840 --> 00:07:15,180
very real problem for developers who are

177
00:07:15,180 --> 00:07:17,699
looking to implement security sensitive

178
00:07:17,699 --> 00:07:19,500
code

179
00:07:19,500 --> 00:07:21,300
we also elicited some qualitative

180
00:07:21,300 --> 00:07:23,160
feedback from the participants who used

181
00:07:23,160 --> 00:07:25,560
Lads hash and the feedback was in

182
00:07:25,560 --> 00:07:28,039
general positive and very constructive

183
00:07:28,039 --> 00:07:30,300
participants said for example that they

184
00:07:30,300 --> 00:07:31,919
found let's hash to be trustworthy

185
00:07:31,919 --> 00:07:34,740
because it's not a forum post

186
00:07:34,740 --> 00:07:36,539
they said that they found it easier to

187
00:07:36,539 --> 00:07:38,580
use than other resources they had used

188
00:07:38,580 --> 00:07:39,900
in the past

189
00:07:39,900 --> 00:07:41,880
and some even said that they would like

190
00:07:41,880 --> 00:07:44,479
to use it again

191
00:07:44,759 --> 00:07:48,240
we would hope that these results Inspire

192
00:07:48,240 --> 00:07:51,000
more work into resources for programmers

193
00:07:51,000 --> 00:07:54,180
that are both usable and up-to-date and

194
00:07:54,180 --> 00:07:55,819
security

195
00:07:55,819 --> 00:07:58,620
if you would like to check out our

196
00:07:58,620 --> 00:08:00,539
website for yourselves you can scan the

197
00:08:00,539 --> 00:08:03,720
QR code or follow the URL below it you

198
00:08:03,720 --> 00:08:05,940
will note that while in the paper and in

199
00:08:05,940 --> 00:08:07,560
this talk I refer to the website as

200
00:08:07,560 --> 00:08:09,300
let's hash it is now actually called

201
00:08:09,300 --> 00:08:12,419
let's off instead we made this change to

202
00:08:12,419 --> 00:08:14,220
better reflect that the contents of the

203
00:08:14,220 --> 00:08:17,099
website are not specifically focused on

204
00:08:17,099 --> 00:08:19,919
password hashing but rather on user

205
00:08:19,919 --> 00:08:23,160
authentication in general

206
00:08:23,160 --> 00:08:26,580
uh thank you all for your attention

207
00:08:26,580 --> 00:08:28,440
um if you have any questions feel free

208
00:08:28,440 --> 00:08:31,379
to ask them now or on slack where either

209
00:08:31,379 --> 00:08:33,599
me or my colleague Anna Maria otloff

210
00:08:33,599 --> 00:08:37,940
will be happy to answer them thank you

