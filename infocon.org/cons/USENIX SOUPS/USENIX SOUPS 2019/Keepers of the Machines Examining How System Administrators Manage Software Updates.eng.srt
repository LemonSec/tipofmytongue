1
00:00:11,019 --> 00:00:14,860
all right so good morning everyone I

2
00:00:12,969 --> 00:00:16,239
know I'm between you and coffee so I'll

3
00:00:14,860 --> 00:00:18,460
try and keep you awake at least until

4
00:00:16,239 --> 00:00:21,339
the break so again my name is Frank Lee

5
00:00:18,460 --> 00:00:23,710
and as Joe mentioned at the time of this

6
00:00:21,340 --> 00:00:26,289
work as a PhD student at Berkeley I've

7
00:00:23,710 --> 00:00:27,820
since finished and joined as visiting

8
00:00:26,289 --> 00:00:29,289
researcher at Facebook for actually the

9
00:00:27,820 --> 00:00:32,198
year so I'll be starting at Georgia Tech

10
00:00:29,289 --> 00:00:33,610
next fall so today I'm going to talk

11
00:00:32,198 --> 00:00:35,379
about some work that was done with some

12
00:00:33,610 --> 00:00:37,570
really awesome collaborators I'll shown

13
00:00:35,379 --> 00:00:39,400
up here and it looks at how system

14
00:00:37,570 --> 00:00:42,670
administrators manage software updates

15
00:00:39,400 --> 00:00:44,860
particularly from a security context so

16
00:00:42,670 --> 00:00:45,909
every year we find thousands and

17
00:00:44,860 --> 00:00:48,159
thousands of new security

18
00:00:45,909 --> 00:00:50,170
vulnerabilities and software updates

19
00:00:48,159 --> 00:00:52,030
with their security patches are one of

20
00:00:50,170 --> 00:00:54,040
the main ways it's not really the main

21
00:00:52,030 --> 00:00:56,890
way that we combat these security

22
00:00:54,040 --> 00:00:59,260
concerns but as many of you are probably

23
00:00:56,890 --> 00:01:01,030
well aware software updates have not

24
00:00:59,260 --> 00:01:03,220
been quite the solution that we would

25
00:01:01,030 --> 00:01:04,809
like them to be and this is in large

26
00:01:03,220 --> 00:01:07,179
part due to many of the human elements

27
00:01:04,809 --> 00:01:09,580
that play during the updating process as

28
00:01:07,180 --> 00:01:12,520
kind of poke fun of here in this xkcd

29
00:01:09,580 --> 00:01:14,679
comic but in the more serious note the

30
00:01:12,520 --> 00:01:16,658
consequences of poor updating behavior

31
00:01:14,680 --> 00:01:18,219
or of delayed updates can be quite

32
00:01:16,659 --> 00:01:20,590
severe especially for system

33
00:01:18,219 --> 00:01:22,178
administrators who are not just managing

34
00:01:20,590 --> 00:01:24,429
personal devices but they're managing

35
00:01:22,179 --> 00:01:27,520
the security of many machines on behalf

36
00:01:24,429 --> 00:01:29,829
of organizations and security lapses or

37
00:01:27,520 --> 00:01:32,469
security holes at those machines at

38
00:01:29,829 --> 00:01:35,469
those organizations can result in severe

39
00:01:32,469 --> 00:01:37,658
security incidences or breaches such as

40
00:01:35,469 --> 00:01:38,979
been reported with Equifax nationwide

41
00:01:37,659 --> 00:01:41,920
insurance and many many other

42
00:01:38,979 --> 00:01:44,950
organizations so it's really vital that

43
00:01:41,920 --> 00:01:46,600
we understand how administrators go

44
00:01:44,950 --> 00:01:48,280
about managing software updates and

45
00:01:46,600 --> 00:01:51,490
explore ways to potentially improve

46
00:01:48,280 --> 00:01:54,310
their operations so there has been some

47
00:01:51,490 --> 00:01:56,079
prior work that's looked at the update

48
00:01:54,310 --> 00:01:58,899
process particularly focused on end

49
00:01:56,079 --> 00:02:00,729
users and I put uh some put a few works

50
00:01:58,899 --> 00:02:02,530
up here that have actually been all done

51
00:02:00,729 --> 00:02:04,298
relatively recently all just within the

52
00:02:02,530 --> 00:02:06,219
last five years and they've really

53
00:02:04,299 --> 00:02:08,470
helped map out what end user updating

54
00:02:06,219 --> 00:02:10,000
looks like but end users are not the

55
00:02:08,470 --> 00:02:12,130
only population that we should care

56
00:02:10,000 --> 00:02:14,020
about system administrators are this

57
00:02:12,130 --> 00:02:16,240
incredibly important yet distinct

58
00:02:14,020 --> 00:02:17,650
population and they're distinct because

59
00:02:16,240 --> 00:02:19,690
they're not only more technically

60
00:02:17,650 --> 00:02:21,790
sophisticated and experienced than the

61
00:02:19,690 --> 00:02:23,750
average end user but they do have this

62
00:02:21,790 --> 00:02:25,010
expanded responsibility of really

63
00:02:23,750 --> 00:02:27,830
managing the security of these

64
00:02:25,010 --> 00:02:29,810
organizations now there's been some work

65
00:02:27,830 --> 00:02:31,520
that's looked at various aspects of

66
00:02:29,810 --> 00:02:33,530
administrative operations just like the

67
00:02:31,520 --> 00:02:35,390
previous talk but to date there's been

68
00:02:33,530 --> 00:02:37,700
nothing that's done up to date

69
00:02:35,390 --> 00:02:39,679
systematic evaluation of their update

70
00:02:37,700 --> 00:02:42,560
process specifically and that's really

71
00:02:39,680 --> 00:02:44,420
what motivated this particular study so

72
00:02:42,560 --> 00:02:46,610
in this work we tried to shed light on

73
00:02:44,420 --> 00:02:48,619
two main research questions the first

74
00:02:46,610 --> 00:02:50,840
being what this OP the update process

75
00:02:48,620 --> 00:02:53,510
looks like for the administrators and

76
00:02:50,840 --> 00:02:55,550
the second is to try and understand some

77
00:02:53,510 --> 00:02:57,500
of the consequences or impact of their

78
00:02:55,550 --> 00:03:00,709
actions and decisions particularly from

79
00:02:57,500 --> 00:03:02,810
a security perspective so to answer

80
00:03:00,709 --> 00:03:05,000
these questions we did a multi-part user

81
00:03:02,810 --> 00:03:06,200
study and here I'm just going to go over

82
00:03:05,000 --> 00:03:09,110
the methodology at a really high level

83
00:03:06,200 --> 00:03:11,030
and the details are all in the paper we

84
00:03:09,110 --> 00:03:12,800
started with a pilot interview that

85
00:03:11,030 --> 00:03:14,570
basically allowed us to try and

86
00:03:12,800 --> 00:03:16,459
understand what the major components or

87
00:03:14,570 --> 00:03:18,890
aspects of the updating process work and

88
00:03:16,459 --> 00:03:20,780
we use that to guide the design of a

89
00:03:18,890 --> 00:03:22,369
much more in-depth and larger scale

90
00:03:20,780 --> 00:03:24,320
online survey and semi-structured

91
00:03:22,370 --> 00:03:27,500
interview to kind of drill into those

92
00:03:24,320 --> 00:03:29,390
topics so we were treated via a variety

93
00:03:27,500 --> 00:03:30,650
of channels including the reddit sub

94
00:03:29,390 --> 00:03:32,420
thread that was mentioned in the

95
00:03:30,650 --> 00:03:34,190
previous talk but I wanted to bring up

96
00:03:32,420 --> 00:03:36,410
that my co-author Lisa actually went to

97
00:03:34,190 --> 00:03:37,609
this conference called Lisa which is

98
00:03:36,410 --> 00:03:40,910
actually youth next conference for

99
00:03:37,610 --> 00:03:42,739
administrators so that was awesome so we

100
00:03:40,910 --> 00:03:44,239
recruited administrators who were adult

101
00:03:42,739 --> 00:03:46,160
US residents who had been at the

102
00:03:44,239 --> 00:03:47,510
organization for at least a year so that

103
00:03:46,160 --> 00:03:48,950
they had settled into their jobs there

104
00:03:47,510 --> 00:03:50,989
and were familiar with that environment

105
00:03:48,950 --> 00:03:52,910
and that they had at least five

106
00:03:50,989 --> 00:03:54,560
employees at that organization so that

107
00:03:52,910 --> 00:03:55,940
we had some limit at least some lower

108
00:03:54,560 --> 00:03:58,220
bound on kind of scale of these

109
00:03:55,940 --> 00:03:59,750
organizations the paper has a

110
00:03:58,220 --> 00:04:02,329
demographic breakdown of both the

111
00:03:59,750 --> 00:04:03,530
participants and the the organizations

112
00:04:02,329 --> 00:04:04,700
they worked for I'll just briefly

113
00:04:03,530 --> 00:04:07,280
mention that they actually largely

114
00:04:04,700 --> 00:04:08,869
matched the previous study and to

115
00:04:07,280 --> 00:04:11,209
analyze the responses we use inductive

116
00:04:08,870 --> 00:04:13,070
thematic analysis with multiple coders

117
00:04:11,209 --> 00:04:16,488
on our team but again the details are

118
00:04:13,070 --> 00:04:18,589
all in the paper so what did we find

119
00:04:16,488 --> 00:04:21,168
through this process or through this

120
00:04:18,589 --> 00:04:22,760
work so we found that the update process

121
00:04:21,168 --> 00:04:26,359
really proceeded through several

122
00:04:22,760 --> 00:04:28,280
different stages which I put up here now

123
00:04:26,360 --> 00:04:30,320
as you look at these stages they

124
00:04:28,280 --> 00:04:32,450
probably seem fairly intuitive or fairly

125
00:04:30,320 --> 00:04:34,760
expected and in fact we find that these

126
00:04:32,450 --> 00:04:37,020
main stages do correspond with the main

127
00:04:34,760 --> 00:04:39,569
stages of end-user updating as found

128
00:04:37,020 --> 00:04:41,190
prior work and that's not too surprising

129
00:04:39,569 --> 00:04:43,139
because ultimately administrators and

130
00:04:41,190 --> 00:04:45,599
end-users are using the same sorts of

131
00:04:43,139 --> 00:04:47,940
software mechanisms to initiate these

132
00:04:45,599 --> 00:04:49,620
updates but what we find is very

133
00:04:47,940 --> 00:04:51,180
different is once you look at each of

134
00:04:49,620 --> 00:04:53,400
these different stages and look at the

135
00:04:51,180 --> 00:04:55,889
various considerations actions and

136
00:04:53,400 --> 00:04:57,330
behaviors within each stage we see a lot

137
00:04:55,889 --> 00:04:59,490
of differences between end users and

138
00:04:57,330 --> 00:05:01,289
administrators and in the paper we have

139
00:04:59,490 --> 00:05:03,210
a more explicit comparison between the

140
00:05:01,289 --> 00:05:05,340
two population groups but I'm not going

141
00:05:03,210 --> 00:05:07,020
to talk too much about it today instead

142
00:05:05,340 --> 00:05:08,429
today I'm just gonna briefly go through

143
00:05:07,020 --> 00:05:09,990
these different stages and just

144
00:05:08,430 --> 00:05:11,759
highlight one or two salient

145
00:05:09,990 --> 00:05:13,409
considerations and I'm actually going to

146
00:05:11,759 --> 00:05:15,270
focus not on all of the stages but

147
00:05:13,409 --> 00:05:17,009
rather the latter three stages and I'm

148
00:05:15,270 --> 00:05:20,818
just gonna really briefly go through the

149
00:05:17,009 --> 00:05:23,130
first two stages so this entire update

150
00:05:20,819 --> 00:05:26,190
process starts when administrators learn

151
00:05:23,130 --> 00:05:27,539
that an update is available and our

152
00:05:26,190 --> 00:05:29,460
administrators spoke about how they were

153
00:05:27,539 --> 00:05:31,560
very proactive about searching about

154
00:05:29,460 --> 00:05:33,750
update information and about available

155
00:05:31,560 --> 00:05:35,789
updates and this is actually in contrast

156
00:05:33,750 --> 00:05:37,229
to end users which prior work found was

157
00:05:35,789 --> 00:05:40,020
typically more passive or much more

158
00:05:37,229 --> 00:05:42,090
reactive administrators also spoke about

159
00:05:40,020 --> 00:05:43,500
how updated information was often spread

160
00:05:42,090 --> 00:05:45,989
out amongst a lot of different sources

161
00:05:43,500 --> 00:05:47,370
and a lot of different channels and many

162
00:05:45,990 --> 00:05:48,990
of them mentioned that information

163
00:05:47,370 --> 00:05:51,630
retrieval about updates could be quite

164
00:05:48,990 --> 00:05:52,979
challenging but once they did learn

165
00:05:51,630 --> 00:05:54,389
about an update they then needed to

166
00:05:52,979 --> 00:05:56,969
decide if they were gonna apply the

167
00:05:54,389 --> 00:05:58,800
update or not and in the paper we list a

168
00:05:56,969 --> 00:06:00,240
bunch of factors that they discussed

169
00:05:58,800 --> 00:06:02,130
weighing when deciding if they were

170
00:06:00,240 --> 00:06:03,930
going to apply the update I'm just gonna

171
00:06:02,130 --> 00:06:05,639
highlight one which is that they spoke

172
00:06:03,930 --> 00:06:07,740
of prioritizing different types of

173
00:06:05,639 --> 00:06:09,979
updates such as security updates versus

174
00:06:07,740 --> 00:06:13,529
feature or performance updates and so on

175
00:06:09,979 --> 00:06:15,360
and overall administrators did seem to

176
00:06:13,529 --> 00:06:17,940
universally prioritize security and

177
00:06:15,360 --> 00:06:19,650
critical bug fixes and other types of

178
00:06:17,940 --> 00:06:21,169
updates were more of a mixed message or

179
00:06:19,650 --> 00:06:23,609
mixed bag there

180
00:06:21,169 --> 00:06:25,380
but once the administrators have decided

181
00:06:23,610 --> 00:06:28,199
to apply the update they now need to

182
00:06:25,380 --> 00:06:29,849
prepare for its installation so they

183
00:06:28,199 --> 00:06:32,009
discussed several different steps that

184
00:06:29,849 --> 00:06:33,810
they took in preparation one of them was

185
00:06:32,009 --> 00:06:34,669
to make backups or snapshots in case

186
00:06:33,810 --> 00:06:37,740
something goes wrong

187
00:06:34,669 --> 00:06:39,270
another was to prepare these hosts

188
00:06:37,740 --> 00:06:41,430
particularly their configurations and

189
00:06:39,270 --> 00:06:43,139
dependencies and I'm not actually gonna

190
00:06:41,430 --> 00:06:44,370
focus too much more on these now because

191
00:06:43,139 --> 00:06:46,349
they're gonna come up later on in the

192
00:06:44,370 --> 00:06:47,700
talk and we're gonna focus on the third

193
00:06:46,349 --> 00:06:49,320
main

194
00:06:47,700 --> 00:06:51,990
pretory stuff that they took which was

195
00:06:49,320 --> 00:06:53,640
testing updates and administrators spoke

196
00:06:51,990 --> 00:06:54,960
of testing updates because they wanted

197
00:06:53,640 --> 00:06:56,010
to understand what the impact of the

198
00:06:54,960 --> 00:06:57,239
updates were and they wanted to

199
00:06:56,010 --> 00:06:59,130
understand if there were any potential

200
00:06:57,240 --> 00:07:01,890
problems that it might arise from the

201
00:06:59,130 --> 00:07:03,300
update and they were worried enough

202
00:07:01,890 --> 00:07:07,200
about this that testing was really

203
00:07:03,300 --> 00:07:10,470
widespread in fact only 10% of those in

204
00:07:07,200 --> 00:07:11,940
our survey did not bother testing and

205
00:07:10,470 --> 00:07:14,010
none of our interview subjects did us

206
00:07:11,940 --> 00:07:16,830
all of our interview subjects said that

207
00:07:14,010 --> 00:07:19,260
they tested in terms of the testing

208
00:07:16,830 --> 00:07:22,140
strategy there were two main overarching

209
00:07:19,260 --> 00:07:23,610
strategies the first was what we call

210
00:07:22,140 --> 00:07:25,500
dedicated test environment where you

211
00:07:23,610 --> 00:07:27,540
have a test server or even a test team

212
00:07:25,500 --> 00:07:30,840
to help evaluate the impact of the

213
00:07:27,540 --> 00:07:32,550
update and if you didn't want to have

214
00:07:30,840 --> 00:07:34,320
this dedicated resource or even if you

215
00:07:32,550 --> 00:07:35,310
did the most popular strategy was

216
00:07:34,320 --> 00:07:37,110
actually something that we called

217
00:07:35,310 --> 00:07:39,030
staggered deployment where the update

218
00:07:37,110 --> 00:07:40,530
was actually slowly rolled out in stages

219
00:07:39,030 --> 00:07:42,929
across the companies machines or the

220
00:07:40,530 --> 00:07:44,640
organization's machines so they kind of

221
00:07:42,930 --> 00:07:46,350
illustrate this imagine you're part of

222
00:07:44,640 --> 00:07:49,469
an organization with many many different

223
00:07:46,350 --> 00:07:51,630
hosts and you segment them or group them

224
00:07:49,470 --> 00:07:53,370
into different stages such as a bunch of

225
00:07:51,630 --> 00:07:54,990
machines for administrators some

226
00:07:53,370 --> 00:07:56,580
machines for developers and then the

227
00:07:54,990 --> 00:07:58,290
all-important production machines that

228
00:07:56,580 --> 00:08:01,409
are perhaps supporting your organization

229
00:07:58,290 --> 00:08:02,850
or its product or service so with

230
00:08:01,410 --> 00:08:04,500
staggered deployment what you do is you

231
00:08:02,850 --> 00:08:06,000
roll out in stages where perhaps you

232
00:08:04,500 --> 00:08:07,740
start with the least important or the

233
00:08:06,000 --> 00:08:09,630
lowest priority machines such as the

234
00:08:07,740 --> 00:08:11,340
administrator machines you update them

235
00:08:09,630 --> 00:08:13,140
and wait to see if anything happens and

236
00:08:11,340 --> 00:08:15,690
if nothing happens or nothing bad

237
00:08:13,140 --> 00:08:17,460
happens I should say then you update the

238
00:08:15,690 --> 00:08:18,900
developer machines wait a little bit

239
00:08:17,460 --> 00:08:20,130
see if anything bad happens and if not

240
00:08:18,900 --> 00:08:21,719
then you finally roll out to the

241
00:08:20,130 --> 00:08:24,570
production machines hoping that nothing

242
00:08:21,720 --> 00:08:26,820
bad happens now this seems like a very

243
00:08:24,570 --> 00:08:29,250
sensible way of dealing with the roll

244
00:08:26,820 --> 00:08:30,690
out kind of mitigating impact of bad

245
00:08:29,250 --> 00:08:33,150
updates but there's a really interesting

246
00:08:30,690 --> 00:08:34,620
consequence to this strategy that's

247
00:08:33,150 --> 00:08:37,500
actually highlighted by a couple quotes

248
00:08:34,620 --> 00:08:39,599
from our participants so in the blue

249
00:08:37,500 --> 00:08:41,280
speech bubble one participant spoke of

250
00:08:39,599 --> 00:08:42,900
patching dev and test servers first

251
00:08:41,280 --> 00:08:45,329
waiting a few weeks and then patching

252
00:08:42,900 --> 00:08:46,590
production and in the green speech

253
00:08:45,330 --> 00:08:48,750
bubble we have someone talking about

254
00:08:46,590 --> 00:08:51,240
patching the non important machines

255
00:08:48,750 --> 00:08:53,310
first waiting our so called letting them

256
00:08:51,240 --> 00:08:55,770
bake for a month and then moving on to

257
00:08:53,310 --> 00:08:56,969
the important machines and what's really

258
00:08:55,770 --> 00:08:58,530
important about these quotes are what's

259
00:08:56,970 --> 00:09:00,870
really interesting about these quotes is

260
00:08:58,530 --> 00:09:01,630
the time aspect here the temporal aspect

261
00:09:00,870 --> 00:09:03,310
where

262
00:09:01,630 --> 00:09:05,230
administrators are talking about this

263
00:09:03,310 --> 00:09:07,150
staggered deployment rollout that's

264
00:09:05,230 --> 00:09:09,460
taking on the orders of weeks two months

265
00:09:07,150 --> 00:09:11,170
to actually roll out completely and

266
00:09:09,460 --> 00:09:12,940
what's kind of unfortunate or very

267
00:09:11,170 --> 00:09:14,260
unfortunate is that the last group

268
00:09:12,940 --> 00:09:16,090
that's typically updated are these

269
00:09:14,260 --> 00:09:17,890
all-important production machines are

270
00:09:16,090 --> 00:09:20,050
these very valuable machines that are

271
00:09:17,890 --> 00:09:21,430
oftentimes the most vulnerable exposed

272
00:09:20,050 --> 00:09:22,990
machines especially if they're

273
00:09:21,430 --> 00:09:25,989
supporting some sort of Internet service

274
00:09:22,990 --> 00:09:27,730
or internet facing product so here

275
00:09:25,990 --> 00:09:30,730
administrators and making this trade-off

276
00:09:27,730 --> 00:09:34,680
between can hedging against bad updates

277
00:09:30,730 --> 00:09:37,240
or update problems in or favoring that

278
00:09:34,680 --> 00:09:39,310
instead of favoring like prompt

279
00:09:37,240 --> 00:09:41,860
expedient updates that could be solving

280
00:09:39,310 --> 00:09:43,239
security problems so ultimately when it

281
00:09:41,860 --> 00:09:44,950
came to preparation while I mentioned

282
00:09:43,240 --> 00:09:47,500
several steps testing was one of the

283
00:09:44,950 --> 00:09:49,030
major steps that was widely done but the

284
00:09:47,500 --> 00:09:50,470
way that administrators were doing this

285
00:09:49,030 --> 00:09:54,189
testing process could often delay

286
00:09:50,470 --> 00:09:55,600
updates quite significantly now once

287
00:09:54,190 --> 00:09:57,310
they had done this preparation and they

288
00:09:55,600 --> 00:09:58,330
went about deploying the updates and

289
00:09:57,310 --> 00:09:59,800
I'll briefly mentioned that this

290
00:09:58,330 --> 00:10:01,780
staggered deployment model I just

291
00:09:59,800 --> 00:10:04,240
mentioned is this combination hybrid

292
00:10:01,780 --> 00:10:06,760
testing and deployment process kind of

293
00:10:04,240 --> 00:10:08,050
merged together but when we asked

294
00:10:06,760 --> 00:10:09,819
administrators how they actually

295
00:10:08,050 --> 00:10:13,000
deployed the updates at scale across

296
00:10:09,820 --> 00:10:15,400
many machines the most common way was to

297
00:10:13,000 --> 00:10:17,590
use these third-party managers such as

298
00:10:15,400 --> 00:10:19,660
ansible or chef which really helped a

299
00:10:17,590 --> 00:10:22,420
kind of automate or at least scale up

300
00:10:19,660 --> 00:10:24,579
this process but these third-party

301
00:10:22,420 --> 00:10:26,459
managers were often not complete

302
00:10:24,580 --> 00:10:28,690
solutions in themselves and

303
00:10:26,460 --> 00:10:31,330
administrators spoke extensively abusing

304
00:10:28,690 --> 00:10:34,090
custom scripts and programs to really

305
00:10:31,330 --> 00:10:37,090
cater the update deployment to exactly

306
00:10:34,090 --> 00:10:38,530
fit their particular environment now you

307
00:10:37,090 --> 00:10:40,720
might be also wondering at this point

308
00:10:38,530 --> 00:10:41,740
why not just use automatic updates and

309
00:10:40,720 --> 00:10:43,540
that solves just everything and

310
00:10:41,740 --> 00:10:45,400
administrators did talk about using

311
00:10:43,540 --> 00:10:47,560
automatic updates quite extensively for

312
00:10:45,400 --> 00:10:49,480
at least some of their software but not

313
00:10:47,560 --> 00:10:51,819
all software packages offer automatic

314
00:10:49,480 --> 00:10:54,130
updates and administrators spoke

315
00:10:51,820 --> 00:10:56,020
extensively about how many times they

316
00:10:54,130 --> 00:10:57,730
would still need to do manual actions to

317
00:10:56,020 --> 00:10:59,050
actually get updates rolled out and they

318
00:10:57,730 --> 00:11:01,140
spoke of a lot of the challenges that

319
00:10:59,050 --> 00:11:04,569
rolls in automation

320
00:11:01,140 --> 00:11:07,110
so while automation was very important

321
00:11:04,570 --> 00:11:09,250
and very valued by the administrators

322
00:11:07,110 --> 00:11:11,200
administrators did talk about how it was

323
00:11:09,250 --> 00:11:13,060
very challenging to actually get right

324
00:11:11,200 --> 00:11:15,430
one of the challenges was simply

325
00:11:13,060 --> 00:11:17,949
implementing this both the time and

326
00:11:15,430 --> 00:11:20,500
effort wise in organizations to really

327
00:11:17,950 --> 00:11:21,850
fit their particular environment but

328
00:11:20,500 --> 00:11:24,339
they also talked about how automated

329
00:11:21,850 --> 00:11:25,899
solutions or getting automation working

330
00:11:24,339 --> 00:11:28,000
correctly when it came to managing

331
00:11:25,899 --> 00:11:29,980
configurations and dependencies could be

332
00:11:28,000 --> 00:11:31,149
really quite challenging and these are

333
00:11:29,980 --> 00:11:33,940
dependencies both upstream and

334
00:11:31,149 --> 00:11:36,550
downstream also administrators are

335
00:11:33,940 --> 00:11:37,990
really managing a variety of different

336
00:11:36,550 --> 00:11:39,279
hosts many hosts with different

337
00:11:37,990 --> 00:11:41,560
platforms different software and

338
00:11:39,279 --> 00:11:43,510
different software versions so handling

339
00:11:41,560 --> 00:11:45,939
this hosts heterogeneity was also quite

340
00:11:43,510 --> 00:11:49,750
challenging in an automated fashion and

341
00:11:45,940 --> 00:11:50,920
then another very significant challenge

342
00:11:49,750 --> 00:11:52,510
when it came to automation was

343
00:11:50,920 --> 00:11:54,990
disruptions or unexpected disruptions

344
00:11:52,510 --> 00:11:57,220
and this arose in many forms including

345
00:11:54,990 --> 00:11:58,630
unexpected system restarts or software

346
00:11:57,220 --> 00:12:00,640
restarts as well as just unexpected

347
00:11:58,630 --> 00:12:02,439
changes that would rise from an update

348
00:12:00,640 --> 00:12:04,120
that was automatically pushed out and in

349
00:12:02,440 --> 00:12:06,459
the paper we talk a lot more about just

350
00:12:04,120 --> 00:12:08,620
the COG kind of the the concerns about

351
00:12:06,459 --> 00:12:11,410
these disruptions and timing concerns

352
00:12:08,620 --> 00:12:13,149
with rolling out updates in general so

353
00:12:11,410 --> 00:12:15,370
ultimately administrators did figure out

354
00:12:13,149 --> 00:12:16,959
ways to deploy their updates across the

355
00:12:15,370 --> 00:12:19,630
machines but often it was an ad hoc

356
00:12:16,959 --> 00:12:22,000
strategy and overall deployment

357
00:12:19,630 --> 00:12:24,880
particularly automating it was quite

358
00:12:22,000 --> 00:12:26,560
difficult so hopefully at this point

359
00:12:24,880 --> 00:12:28,839
once you finish deploying the update

360
00:12:26,560 --> 00:12:30,849
everything is good your patches out or

361
00:12:28,839 --> 00:12:32,740
your updates are out and you're done but

362
00:12:30,850 --> 00:12:34,930
unfortunately the story often doesn't

363
00:12:32,740 --> 00:12:38,260
end there and sometimes some issues

364
00:12:34,930 --> 00:12:40,060
arise due to these updates and in fact

365
00:12:38,260 --> 00:12:42,069
ninety-eight percent of those in our

366
00:12:40,060 --> 00:12:46,569
survey said that they had recently dealt

367
00:12:42,070 --> 00:12:49,450
with a buggy update now this oh now this

368
00:12:46,570 --> 00:12:52,390
number might not actually be exactly

369
00:12:49,450 --> 00:12:54,220
accurate because it is a recollection

370
00:12:52,390 --> 00:12:55,900
but it at least reflects the general

371
00:12:54,220 --> 00:12:59,770
sentiment so the general mentality of

372
00:12:55,900 --> 00:13:01,689
our administrators so this is one of the

373
00:12:59,770 --> 00:13:04,089
primary reason that was driving a lot of

374
00:13:01,690 --> 00:13:05,829
the testing that I mentioned earlier but

375
00:13:04,089 --> 00:13:08,500
it could also Drive really extreme

376
00:13:05,829 --> 00:13:10,839
updating behavior for example we have

377
00:13:08,500 --> 00:13:11,980
one participant talking about how they

378
00:13:10,839 --> 00:13:13,510
actually just stopped updating

379
00:13:11,980 --> 00:13:15,910
production machines because it was

380
00:13:13,510 --> 00:13:17,770
causing too many issues and from a

381
00:13:15,910 --> 00:13:20,770
security standpoint that's probably not

382
00:13:17,770 --> 00:13:23,529
good so to handle some of these buggy

383
00:13:20,770 --> 00:13:25,510
updates most people spoke of rolling

384
00:13:23,529 --> 00:13:28,839
back to a snapshot or reverting the

385
00:13:25,510 --> 00:13:29,260
update and only 5 to 15% said that they

386
00:13:28,839 --> 00:13:31,210
tried

387
00:13:29,260 --> 00:13:33,430
work out the update issue while leaving

388
00:13:31,210 --> 00:13:34,900
the update in place and this is another

389
00:13:33,430 --> 00:13:37,810
case where we're seeing this trade-off

390
00:13:34,900 --> 00:13:39,189
between functionality where you know

391
00:13:37,810 --> 00:13:41,560
people are rolling back to a functional

392
00:13:39,190 --> 00:13:43,210
state and security because ultimately if

393
00:13:41,560 --> 00:13:45,099
the software update involves a security

394
00:13:43,210 --> 00:13:46,300
fix they're rolling back to a functional

395
00:13:45,100 --> 00:13:48,460
state but they're rolling back to an

396
00:13:46,300 --> 00:13:50,800
insecure state and they'd rather have

397
00:13:48,460 --> 00:13:52,330
that rather than having a secure state

398
00:13:50,800 --> 00:13:55,719
where they're trying to mitigate the

399
00:13:52,330 --> 00:13:58,750
problems introduced by the update so

400
00:13:55,720 --> 00:13:59,890
ultimately administrators did face buggy

401
00:13:58,750 --> 00:14:02,110
issues or they felt that they would

402
00:13:59,890 --> 00:14:03,760
frequently face buggy issues and when

403
00:14:02,110 --> 00:14:05,440
they did they typically revert it or

404
00:14:03,760 --> 00:14:07,000
undid the update and went back to this

405
00:14:05,440 --> 00:14:09,280
functional but ultimately vulnerable

406
00:14:07,000 --> 00:14:12,280
state but once they did handle these

407
00:14:09,280 --> 00:14:13,870
posts update issues this life cycle at

408
00:14:12,280 --> 00:14:17,050
least one life cycle for the update has

409
00:14:13,870 --> 00:14:18,640
completed now there was one final aspect

410
00:14:17,050 --> 00:14:20,109
of this update process that was really

411
00:14:18,640 --> 00:14:21,610
significant but it wasn't a stage in

412
00:14:20,110 --> 00:14:24,040
itself but rather it was something that

413
00:14:21,610 --> 00:14:25,990
actually affected every one of these

414
00:14:24,040 --> 00:14:27,579
different stages and that was the

415
00:14:25,990 --> 00:14:29,260
influence of being part of an

416
00:14:27,580 --> 00:14:30,960
organization or being part of some

417
00:14:29,260 --> 00:14:33,430
management structure here so

418
00:14:30,960 --> 00:14:35,380
administrators spoke about how being

419
00:14:33,430 --> 00:14:36,609
part of organization or having to report

420
00:14:35,380 --> 00:14:38,530
to management could affect their

421
00:14:36,610 --> 00:14:41,200
autonomy in terms of what decisions they

422
00:14:38,530 --> 00:14:42,850
could make their policies and compliance

423
00:14:41,200 --> 00:14:45,250
requirements within the organizations

424
00:14:42,850 --> 00:14:47,050
that could dictate their behavior the

425
00:14:45,250 --> 00:14:49,720
need to coordinate with other members of

426
00:14:47,050 --> 00:14:52,209
the organization as well as this issues

427
00:14:49,720 --> 00:14:54,640
of resource and budget in terms of what

428
00:14:52,210 --> 00:14:56,980
can actually fund their operations so

429
00:14:54,640 --> 00:14:59,380
ultimately we saw that in many cases the

430
00:14:56,980 --> 00:15:01,510
outcome of an update process was not

431
00:14:59,380 --> 00:15:03,700
strictly due to what administrators did

432
00:15:01,510 --> 00:15:05,530
but often also due to these

433
00:15:03,700 --> 00:15:08,590
organizational factors that could be at

434
00:15:05,530 --> 00:15:10,930
play here so at this point here is kind

435
00:15:08,590 --> 00:15:13,330
of like the overview of what the update

436
00:15:10,930 --> 00:15:16,810
process looks like from it for a minute

437
00:15:13,330 --> 00:15:19,720
for administrators through our study so

438
00:15:16,810 --> 00:15:21,280
where do we actually go from here well

439
00:15:19,720 --> 00:15:23,770
I'm going to return back to that same

440
00:15:21,280 --> 00:15:25,900
image again a lot of this actually looks

441
00:15:23,770 --> 00:15:27,790
quite similar to that of end users but

442
00:15:25,900 --> 00:15:29,800
we found a lot of differences by looking

443
00:15:27,790 --> 00:15:31,270
at administrators in death and I think

444
00:15:29,800 --> 00:15:33,819
there's a lot of value in looking at

445
00:15:31,270 --> 00:15:34,930
this specialized population now there's

446
00:15:33,820 --> 00:15:36,520
also some things that we can potentially

447
00:15:34,930 --> 00:15:40,089
do next for each of these different

448
00:15:36,520 --> 00:15:41,590
stages so I didn't talk as much about

449
00:15:40,090 --> 00:15:43,000
the first stage about learning about

450
00:15:41,590 --> 00:15:44,770
updates

451
00:15:43,000 --> 00:15:46,840
I did mention that administrators spoke

452
00:15:44,770 --> 00:15:48,790
about how information information

453
00:15:46,840 --> 00:15:50,590
retrieval could be quite difficult so as

454
00:15:48,790 --> 00:15:53,020
the community we could work on ways to

455
00:15:50,590 --> 00:15:55,120
better centralize update information and

456
00:15:53,020 --> 00:15:56,920
we could also look at ways to

457
00:15:55,120 --> 00:15:59,620
potentially do outreach campaigns to

458
00:15:56,920 --> 00:16:01,449
notify administrators about severe

459
00:15:59,620 --> 00:16:03,220
security problems or about important

460
00:16:01,450 --> 00:16:04,750
updates and I've actually done some work

461
00:16:03,220 --> 00:16:08,710
in the space myself so I'm happy to talk

462
00:16:04,750 --> 00:16:11,170
about that offline or afterwards now to

463
00:16:08,710 --> 00:16:13,330
help administrators make decisions we

464
00:16:11,170 --> 00:16:15,400
could also look at standardizing what

465
00:16:13,330 --> 00:16:18,280
information is available about updates

466
00:16:15,400 --> 00:16:19,720
to match that the factors that

467
00:16:18,280 --> 00:16:21,579
administrators actually spoke about

468
00:16:19,720 --> 00:16:23,710
carrying or weighing when they made

469
00:16:21,580 --> 00:16:25,660
these decisions and oftentimes these

470
00:16:23,710 --> 00:16:27,930
information this information was not

471
00:16:25,660 --> 00:16:30,040
available for all updates and

472
00:16:27,930 --> 00:16:31,900
particularly related to what I mentioned

473
00:16:30,040 --> 00:16:33,490
earlier about prioritizing different

474
00:16:31,900 --> 00:16:34,660
types of updates I think there's an

475
00:16:33,490 --> 00:16:36,660
interesting question of whether we can

476
00:16:34,660 --> 00:16:39,189
potentially split updates by types and

477
00:16:36,660 --> 00:16:40,839
and by this I mean like splitting

478
00:16:39,190 --> 00:16:42,400
security updates from other types of

479
00:16:40,840 --> 00:16:44,100
updates and some software vendors

480
00:16:42,400 --> 00:16:47,199
actually already do this like Microsoft

481
00:16:44,100 --> 00:16:48,490
but this isn't done as widely because it

482
00:16:47,200 --> 00:16:50,560
makes the development process rather

483
00:16:48,490 --> 00:16:52,150
difficult because you you have like

484
00:16:50,560 --> 00:16:54,040
different updates or different releases

485
00:16:52,150 --> 00:16:56,170
but potentially we could look at

486
00:16:54,040 --> 00:16:57,699
different ways to still allow developers

487
00:16:56,170 --> 00:17:02,229
to effectively create software while

488
00:16:57,700 --> 00:17:03,640
splitting these updates apart then for

489
00:17:02,230 --> 00:17:06,010
the sake of time I kind of clumped

490
00:17:03,640 --> 00:17:07,359
together at least last three stages and

491
00:17:06,010 --> 00:17:09,280
our study revealed that there were a lot

492
00:17:07,359 --> 00:17:11,020
of limitations and shortcomings of a lot

493
00:17:09,280 --> 00:17:12,699
of the updates systems and tools that

494
00:17:11,020 --> 00:17:14,139
were used and I think there's a lot of

495
00:17:12,699 --> 00:17:15,880
work that we can do in advancing both

496
00:17:14,140 --> 00:17:18,520
the technical but also the usability

497
00:17:15,880 --> 00:17:20,980
aspect of these tools just as an example

498
00:17:18,520 --> 00:17:23,859
going back to the previous talk a lot of

499
00:17:20,980 --> 00:17:25,720
people may be using GUI driven tools

500
00:17:23,859 --> 00:17:27,310
these days so what kind of information

501
00:17:25,720 --> 00:17:28,720
is actually being displayed in these

502
00:17:27,310 --> 00:17:30,460
tools is this the right kind of

503
00:17:28,720 --> 00:17:32,590
information to allow administrators to

504
00:17:30,460 --> 00:17:33,850
most effectively do their job so I think

505
00:17:32,590 --> 00:17:37,360
there's a ton of work that can be done

506
00:17:33,850 --> 00:17:38,889
in this space finally when it can come

507
00:17:37,360 --> 00:17:40,929
to these organizational management

508
00:17:38,890 --> 00:17:42,910
influences I think we've really only

509
00:17:40,930 --> 00:17:43,930
scratched the surface in this study this

510
00:17:42,910 --> 00:17:45,880
was actually something we had not

511
00:17:43,930 --> 00:17:47,800
initially anticipated when we set out to

512
00:17:45,880 --> 00:17:50,370
do the study so I think there's a lot

513
00:17:47,800 --> 00:17:52,360
more work that can be done in more

514
00:17:50,370 --> 00:17:55,120
evaluating these organizational

515
00:17:52,360 --> 00:17:56,689
influences in more depth looking at

516
00:17:55,120 --> 00:17:58,729
perhaps what is the best center

517
00:17:56,690 --> 00:18:02,650
between organization and management and

518
00:17:58,730 --> 00:18:04,580
the particular administrators so I think

519
00:18:02,650 --> 00:18:06,890
by pursuing some of these directions

520
00:18:04,580 --> 00:18:09,290
which I just put up all together here

521
00:18:06,890 --> 00:18:11,750
again we can begin to really better

522
00:18:09,290 --> 00:18:13,040
understand how administrators behave and

523
00:18:11,750 --> 00:18:16,100
why they make the actions that they do

524
00:18:13,040 --> 00:18:17,930
and we can try and better empower them

525
00:18:16,100 --> 00:18:19,669
in really fulfilling their role

526
00:18:17,930 --> 00:18:21,950
effectively as these so-called keepers

527
00:18:19,670 --> 00:18:22,550
of the machines so with that thank you

528
00:18:21,950 --> 00:18:37,570
very much

529
00:18:22,550 --> 00:18:39,760
and I'm happy to take any questions that

530
00:18:37,570 --> 00:18:43,129
was a really great talk thanks so much

531
00:18:39,760 --> 00:18:45,680
I'm coming from industry into academia

532
00:18:43,130 --> 00:18:48,740
again after about a decade and I spent a

533
00:18:45,680 --> 00:18:51,050
lot of my career in the role here so I

534
00:18:48,740 --> 00:18:54,290
really appreciate looking into usability

535
00:18:51,050 --> 00:18:58,010
aspects there do you have any insight

536
00:18:54,290 --> 00:19:01,399
into the test Suites that were in place

537
00:18:58,010 --> 00:19:04,550
or not in place for helping to automate

538
00:19:01,400 --> 00:19:06,380
the deployment between environments like

539
00:19:04,550 --> 00:19:09,379
performance testing load testing other

540
00:19:06,380 --> 00:19:10,880
things like that yeah yeah that's a

541
00:19:09,380 --> 00:19:13,880
that's a great question Connor um so I

542
00:19:10,880 --> 00:19:15,320
we did try and understand this to some

543
00:19:13,880 --> 00:19:16,880
extent like what kind of specific

544
00:19:15,320 --> 00:19:19,129
testing methods did they use what kind

545
00:19:16,880 --> 00:19:20,600
of tools did they use but this was not

546
00:19:19,130 --> 00:19:22,190
actually one of her like catered or

547
00:19:20,600 --> 00:19:24,590
focused questions so we actually didn't

548
00:19:22,190 --> 00:19:26,600
get a very large response in that sense

549
00:19:24,590 --> 00:19:28,220
so we heard a little bit about like

550
00:19:26,600 --> 00:19:29,780
people writing unit tests for certain

551
00:19:28,220 --> 00:19:31,520
types of things or kind of integration

552
00:19:29,780 --> 00:19:33,320
tests and such but we didn't get a

553
00:19:31,520 --> 00:19:34,910
widespread sense of exactly or a

554
00:19:33,320 --> 00:19:36,560
complete sense of what they actually did

555
00:19:34,910 --> 00:19:38,390
and I think that's certainly something

556
00:19:36,560 --> 00:19:40,580
to look at much more in depth in the

557
00:19:38,390 --> 00:19:42,170
future I really viewed this work as some

558
00:19:40,580 --> 00:19:43,790
initial exploration because in the

559
00:19:42,170 --> 00:19:46,130
literature there has been really limited

560
00:19:43,790 --> 00:19:47,899
work looking at systematically looking

561
00:19:46,130 --> 00:19:49,370
at how administrators did this update

562
00:19:47,900 --> 00:19:53,930
process so I think there's a lot more

563
00:19:49,370 --> 00:19:55,699
work that can be done there yep and do

564
00:19:53,930 --> 00:19:58,190
you have any future plans to look into

565
00:19:55,700 --> 00:20:00,440
the types of architectures and how

566
00:19:58,190 --> 00:20:03,020
updates are applied for example if

567
00:20:00,440 --> 00:20:05,480
someone's using immutable infrastructure

568
00:20:03,020 --> 00:20:07,850
and they have disposable containers they

569
00:20:05,480 --> 00:20:09,650
can throw away or disposable am eyes it

570
00:20:07,850 --> 00:20:12,020
can be a very different approach

571
00:20:09,650 --> 00:20:14,150
to applying updates the machine is very

572
00:20:12,020 --> 00:20:16,550
short-lived yeah yes I think these are

573
00:20:14,150 --> 00:20:18,110
fantastic ideas and I'll in fact one of

574
00:20:16,550 --> 00:20:19,730
the big limitations of our work is we

575
00:20:18,110 --> 00:20:21,770
didn't split up updates by even the

576
00:20:19,730 --> 00:20:23,780
types in general so I think there's a

577
00:20:21,770 --> 00:20:25,280
lot finer granularity that we can look

578
00:20:23,780 --> 00:20:26,629
at like what kind of platforms are they

579
00:20:25,280 --> 00:20:28,280
updating are they doing things in the

580
00:20:26,630 --> 00:20:30,680
cloud versus running their own hardware

581
00:20:28,280 --> 00:20:32,149
which is very different so I think there

582
00:20:30,680 --> 00:20:34,070
are a lot of different factors that can

583
00:20:32,150 --> 00:20:35,510
be kind of teased apart here we're in

584
00:20:34,070 --> 00:20:36,110
this initial study we really didn't do

585
00:20:35,510 --> 00:20:41,490
that yet

586
00:20:36,110 --> 00:20:44,849
thanks Frank yep let's thank the speaker

587
00:20:41,490 --> 00:20:44,849
[Applause]

