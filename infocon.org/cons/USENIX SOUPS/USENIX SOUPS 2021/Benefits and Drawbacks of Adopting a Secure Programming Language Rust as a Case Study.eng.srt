1
00:00:16,560 --> 00:00:18,880
hi i'm kelsey fulton and today i'm going

2
00:00:18,880 --> 00:00:20,560
to talk about our work exploring the

3
00:00:20,560 --> 00:00:22,320
benefits and drawbacks of adopting a

4
00:00:22,320 --> 00:00:24,560
secure programming language

5
00:00:24,560 --> 00:00:26,720
to start memory safety vulnerabilities

6
00:00:26,720 --> 00:00:28,240
remain a problem

7
00:00:28,240 --> 00:00:31,119
as recently as may 2020 70 of the

8
00:00:31,119 --> 00:00:33,040
vulnerabilities in chrome were reported

9
00:00:33,040 --> 00:00:35,200
to be memory safety problems

10
00:00:35,200 --> 00:00:37,840
in a similar vein over the last 17 years

11
00:00:37,840 --> 00:00:39,920
microsoft reported that 70 of the

12
00:00:39,920 --> 00:00:41,600
vulnerabilities in their products were

13
00:00:41,600 --> 00:00:44,320
also memory safety problems

14
00:00:44,320 --> 00:00:46,079
overwhelmingly these problems can be

15
00:00:46,079 --> 00:00:49,039
attributed to c and c plus plus

16
00:00:49,039 --> 00:00:51,039
so in order to rectify this issue we

17
00:00:51,039 --> 00:00:52,640
might consider either fixing or

18
00:00:52,640 --> 00:00:55,600
replacing these languages

19
00:00:55,600 --> 00:00:57,360
mozilla attempts to do justice with

20
00:00:57,360 --> 00:00:59,520
their programming language rust

21
00:00:59,520 --> 00:01:01,520
essentially rust attempts both safety

22
00:01:01,520 --> 00:01:03,039
and performance

23
00:01:03,039 --> 00:01:05,519
meaning to be useful where c and c plus

24
00:01:05,519 --> 00:01:07,520
are hardest to replace

25
00:01:07,520 --> 00:01:09,040
so with this in mind we might be

26
00:01:09,040 --> 00:01:11,280
wondering one what does the adoption of

27
00:01:11,280 --> 00:01:14,080
a secure programming language look like

28
00:01:14,080 --> 00:01:16,479
and two what benefits accrue after the

29
00:01:16,479 --> 00:01:17,840
adoption of a secure programming

30
00:01:17,840 --> 00:01:19,360
language

31
00:01:19,360 --> 00:01:21,360
to explore this we used rust as a case

32
00:01:21,360 --> 00:01:23,520
study because of rust's lack of garbage

33
00:01:23,520 --> 00:01:24,720
collection

34
00:01:24,720 --> 00:01:26,560
and we started by interviewing senior

35
00:01:26,560 --> 00:01:28,560
software developers who worked at a

36
00:01:28,560 --> 00:01:30,560
company that had either adopted or tried

37
00:01:30,560 --> 00:01:32,960
to adopt rust we then followed up with a

38
00:01:32,960 --> 00:01:36,000
survey to the broader rest community

39
00:01:36,000 --> 00:01:37,520
to start i'm going to talk about our

40
00:01:37,520 --> 00:01:40,159
results in regards to learning rust

41
00:01:40,159 --> 00:01:42,079
one drawback mentioned by participants

42
00:01:42,079 --> 00:01:44,320
was that rust is hard to learn

43
00:01:44,320 --> 00:01:45,840
one participant felt that russ had a

44
00:01:45,840 --> 00:01:48,240
near vertical learning curve

45
00:01:48,240 --> 00:01:49,840
participants mentioned that russ was

46
00:01:49,840 --> 00:01:51,840
more difficult to learn than other

47
00:01:51,840 --> 00:01:54,479
programming languages they already knew

48
00:01:54,479 --> 00:01:56,320
however rust is not without support for

49
00:01:56,320 --> 00:01:57,840
learning the language

50
00:01:57,840 --> 00:01:59,920
one benefit mentioned by participants

51
00:01:59,920 --> 00:02:01,840
was that it's easy to find solutions to

52
00:02:01,840 --> 00:02:04,079
problems when working in rust and they

53
00:02:04,079 --> 00:02:06,000
attribute this to good compiler error

54
00:02:06,000 --> 00:02:08,318
messages as one participant said the

55
00:02:08,318 --> 00:02:09,840
compiler is good at telling you what's

56
00:02:09,840 --> 00:02:11,280
wrong

57
00:02:11,280 --> 00:02:13,680
good official documentation as well as

58
00:02:13,680 --> 00:02:17,280
the helpfulness of the rest community

59
00:02:17,280 --> 00:02:19,040
one big benefit of us that it has a

60
00:02:19,040 --> 00:02:21,760
positive impact on development

61
00:02:21,760 --> 00:02:24,160
for example rust improves confidence and

62
00:02:24,160 --> 00:02:26,640
code correctness our participants felt

63
00:02:26,640 --> 00:02:28,319
that once they got their code to compile

64
00:02:28,319 --> 00:02:29,520
they could be confident that it was

65
00:02:29,520 --> 00:02:32,000
correct and bug free

66
00:02:32,000 --> 00:02:33,360
rust also improves long-term

67
00:02:33,360 --> 00:02:35,200
productivity because our participants

68
00:02:35,200 --> 00:02:37,680
knew they'd had spend less time

69
00:02:37,680 --> 00:02:39,200
chasing and hunting down bugs and

70
00:02:39,200 --> 00:02:40,879
vulnerabilities

71
00:02:40,879 --> 00:02:42,640
and lastly

72
00:02:42,640 --> 00:02:44,239
rust improved safe development in other

73
00:02:44,239 --> 00:02:46,560
languages because our participants felt

74
00:02:46,560 --> 00:02:49,680
that rust adjusted the developer mindset

75
00:02:49,680 --> 00:02:50,879
specifically

76
00:02:50,879 --> 00:02:53,120
russ teaches new paradigms and secure

77
00:02:53,120 --> 00:02:55,440
mental models that then the developers

78
00:02:55,440 --> 00:02:56,800
take with them when they work in other

79
00:02:56,800 --> 00:02:58,400
languages

80
00:02:58,400 --> 00:03:00,640
this is exemplified by one participant

81
00:03:00,640 --> 00:03:02,159
who mentioned that since learning rust

82
00:03:02,159 --> 00:03:03,519
they see the unsafe things they've been

83
00:03:03,519 --> 00:03:05,680
doing in other languages

84
00:03:05,680 --> 00:03:07,920
however despite these positive impacts

85
00:03:07,920 --> 00:03:10,319
employers still express concerns about

86
00:03:10,319 --> 00:03:13,359
adopting rust

87
00:03:13,680 --> 00:03:15,040
one concern mentioned by our

88
00:03:15,040 --> 00:03:16,959
participants that their employers had

89
00:03:16,959 --> 00:03:19,040
was the steep learning curve

90
00:03:19,040 --> 00:03:21,360
specifically because of a steep learning

91
00:03:21,360 --> 00:03:23,120
curve developers spend a lot more time

92
00:03:23,120 --> 00:03:25,040
learning the language and a lot less

93
00:03:25,040 --> 00:03:27,760
time developing for functionality

94
00:03:27,760 --> 00:03:29,200
participants also said that their

95
00:03:29,200 --> 00:03:30,959
employers were concerned about a

96
00:03:30,959 --> 00:03:33,519
difficulty in hiring rest developers

97
00:03:33,519 --> 00:03:35,519
for example one participant's company

98
00:03:35,519 --> 00:03:37,440
mentioned not wanting to keep a project

99
00:03:37,440 --> 00:03:39,280
in rust because they were worried about

100
00:03:39,280 --> 00:03:40,799
having to hire new developers in the

101
00:03:40,799 --> 00:03:42,480
future

102
00:03:42,480 --> 00:03:43,920
so with these concerns in mind our

103
00:03:43,920 --> 00:03:46,239
participants distill some advice for

104
00:03:46,239 --> 00:03:47,599
security advocates who want to get a

105
00:03:47,599 --> 00:03:50,159
secure language adopted at their company

106
00:03:50,159 --> 00:03:51,840
the first piece of advice is to

107
00:03:51,840 --> 00:03:53,439
demonstrate the value of rest

108
00:03:53,439 --> 00:03:55,360
specifically showing that rust offers a

109
00:03:55,360 --> 00:03:56,959
measurable improvement over the current

110
00:03:56,959 --> 00:03:59,120
language being used

111
00:03:59,120 --> 00:04:00,640
because of the high upfront cost of the

112
00:04:00,640 --> 00:04:02,560
language it's important to show that

113
00:04:02,560 --> 00:04:04,319
paying that high up front cost is worth

114
00:04:04,319 --> 00:04:05,920
it

115
00:04:05,920 --> 00:04:07,760
participants also advise that advocates

116
00:04:07,760 --> 00:04:09,200
be helpful and have a good support

117
00:04:09,200 --> 00:04:11,439
system specifically being willing and

118
00:04:11,439 --> 00:04:13,760
able to help new developers as well as

119
00:04:13,760 --> 00:04:15,680
building in an existing support system

120
00:04:15,680 --> 00:04:18,079
for new rest developers

121
00:04:18,079 --> 00:04:19,519
this is especially important because the

122
00:04:19,519 --> 00:04:22,000
language is difficult to use

123
00:04:22,000 --> 00:04:23,600
and our participants mentioned that

124
00:04:23,600 --> 00:04:25,280
learning the language with a mentor made

125
00:04:25,280 --> 00:04:27,840
it much simpler

126
00:04:27,840 --> 00:04:29,040
with this in mind we offer some

127
00:04:29,040 --> 00:04:30,320
takeaways

128
00:04:30,320 --> 00:04:32,479
one being that documentation community

129
00:04:32,479 --> 00:04:34,320
and feedback matter a lot as these were

130
00:04:34,320 --> 00:04:35,680
all benefits mentioned by our

131
00:04:35,680 --> 00:04:37,280
participants

132
00:04:37,280 --> 00:04:38,720
another being that a steep learning

133
00:04:38,720 --> 00:04:40,240
curve can inhibit the adoption of a

134
00:04:40,240 --> 00:04:42,880
secure programming language chiefly

135
00:04:42,880 --> 00:04:44,960
because companies have to pay up front

136
00:04:44,960 --> 00:04:47,120
and then benefit later but they may not

137
00:04:47,120 --> 00:04:49,040
benefit at all

138
00:04:49,040 --> 00:04:50,800
we may consider flattening the learning

139
00:04:50,800 --> 00:04:52,720
curve of the language

140
00:04:52,720 --> 00:04:54,560
by creating a version of rus that allows

141
00:04:54,560 --> 00:04:56,320
developers to learn security concepts

142
00:04:56,320 --> 00:04:59,520
incrementally rather than all at once

143
00:04:59,520 --> 00:05:00,800
and lastly

144
00:05:00,800 --> 00:05:02,479
we could consider reducing the risk of

145
00:05:02,479 --> 00:05:04,400
investment for companies by creating a

146
00:05:04,400 --> 00:05:06,560
trained pipeline of rest developers or

147
00:05:06,560 --> 00:05:08,840
possibly building infrastructure for the

148
00:05:08,840 --> 00:05:11,120
language i'd like to thank the nsf for

149
00:05:11,120 --> 00:05:12,639
sponsoring this work

150
00:05:12,639 --> 00:05:14,080
and with that i'm happy to take any

151
00:05:14,080 --> 00:05:18,359
questions at the live q a

