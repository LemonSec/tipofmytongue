1
00:00:00,000 --> 00:00:05,160
hi<font color="#CCCCCC"> like I said I'm Danny Cooper this is</font>

2
00:00:02,970 --> 00:00:07,529
<font color="#CCCCCC">Alan worth</font><font color="#E5E5E5"> we're both at Akamai</font><font color="#CCCCCC"> and</font>

3
00:00:05,160 --> 00:00:09,570
we're here today to talk about<font color="#E5E5E5"> DNS</font>

4
00:00:07,529 --> 00:00:11,070
rebinding<font color="#CCCCCC"> which some of you may have</font>

5
00:00:09,570 --> 00:00:13,230
heard<font color="#E5E5E5"> of some</font><font color="#CCCCCC"> of you might</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> have it's</font>

6
00:00:11,070 --> 00:00:15,450
actually a<font color="#E5E5E5"> fairly old vulnerability but</font>

7
00:00:13,230 --> 00:00:18,660
it's a gift<font color="#E5E5E5"> that keeps on giving</font>

8
00:00:15,450 --> 00:00:21,630
so very briefly we're<font color="#E5E5E5"> both security</font>

9
00:00:18,660 --> 00:00:24,119
researchers at Akamai<font color="#CCCCCC"> usually we're</font>

10
00:00:21,630 --> 00:00:25,948
administrators and<font color="#E5E5E5"> authors for bkb CTF</font>

11
00:00:24,119 --> 00:00:27,660
we had an off year this year<font color="#E5E5E5"> and didn't</font>

12
00:00:25,949 --> 00:00:29,910
<font color="#E5E5E5">run it but we're</font><font color="#CCCCCC"> coming back I promise</font>

13
00:00:27,660 --> 00:00:32,820
and I hope I<font color="#E5E5E5"> see a bunch</font><font color="#CCCCCC"> of you at the</font>

14
00:00:29,910 --> 00:00:35,550
CTF because we'll be<font color="#E5E5E5"> playing and be good</font>

15
00:00:32,820 --> 00:00:38,040
<font color="#E5E5E5">to see y'all so I'm</font><font color="#CCCCCC"> gonna present a</font>

16
00:00:35,550 --> 00:00:39,599
scenario<font color="#E5E5E5"> you suppose you're browsing the</font>

17
00:00:38,040 --> 00:00:41,100
<font color="#CCCCCC">internet and</font><font color="#E5E5E5"> you know it's the it's</font><font color="#CCCCCC"> the</font>

18
00:00:39,600 --> 00:00:42,989
current state of the<font color="#CCCCCC"> internet</font><font color="#E5E5E5"> so it</font>

19
00:00:41,100 --> 00:00:44,940
<font color="#CCCCCC">loads a ton</font><font color="#E5E5E5"> you go to some website it</font>

20
00:00:42,989 --> 00:00:47,820
loads a ton of third-party<font color="#E5E5E5"> JavaScript</font>

21
00:00:44,940 --> 00:00:50,309
<font color="#E5E5E5">but you know your OS is up to date</font><font color="#CCCCCC"> as</font>

22
00:00:47,820 --> 00:00:51,780
your<font color="#E5E5E5"> browser is up today</font><font color="#CCCCCC"> what's you know</font>

23
00:00:50,309 --> 00:00:53,699
what sort<font color="#E5E5E5"> of bad things do you expect to</font>

24
00:00:51,780 --> 00:00:55,710
happen<font color="#CCCCCC"> well obviously you might</font><font color="#E5E5E5"> get</font>

25
00:00:53,699 --> 00:00:57,899
popped by a<font color="#E5E5E5"> node a or you know there</font>

26
00:00:55,710 --> 00:01:01,320
might<font color="#E5E5E5"> be C surf</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> someone's</font><font color="#CCCCCC"> gonna</font>

27
00:00:57,899 --> 00:01:03,180
<font color="#CCCCCC">row hammer you from JavaScript</font><font color="#E5E5E5"> or do</font>

28
00:01:01,320 --> 00:01:06,630
some<font color="#E5E5E5"> kind of other awful CPU and memory</font>

29
00:01:03,180 --> 00:01:09,330
based attack but would this outcome

30
00:01:06,630 --> 00:01:12,060
<font color="#CCCCCC">surprise folks</font><font color="#E5E5E5"> the the</font><font color="#CCCCCC"> outcome of</font><font color="#E5E5E5"> your</font>

31
00:01:09,330 --> 00:01:17,158
router joining a botnet<font color="#E5E5E5"> and your fridge</font>

32
00:01:12,060 --> 00:01:19,320
<font color="#E5E5E5">starting to mine</font><font color="#CCCCCC"> manera so</font><font color="#E5E5E5"> I personally</font>

33
00:01:17,159 --> 00:01:21,000
<font color="#E5E5E5">would find this surprising mostly like</font>

34
00:01:19,320 --> 00:01:22,860
not because<font color="#E5E5E5"> you know it's not surprising</font>

35
00:01:21,000 --> 00:01:24,750
that your<font color="#E5E5E5"> routers in a botnet or your</font>

36
00:01:22,860 --> 00:01:26,790
fridge is<font color="#E5E5E5"> mining</font><font color="#CCCCCC"> Manero but because of</font>

37
00:01:24,750 --> 00:01:29,460
sort<font color="#E5E5E5"> of the pivot factor here where</font>

38
00:01:26,790 --> 00:01:33,450
you've had<font color="#CCCCCC"> a sort of</font><font color="#E5E5E5"> web-based attack</font>

39
00:01:29,460 --> 00:01:35,309
end in network<font color="#E5E5E5"> compromised but it turns</font>

40
00:01:33,450 --> 00:01:38,250
out<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can do this kind of thing using</font>

41
00:01:35,310 --> 00:01:40,770
DNS rebinding<font color="#E5E5E5"> which is basically using</font>

42
00:01:38,250 --> 00:01:42,509
some very<font color="#E5E5E5"> particular DNS server settings</font>

43
00:01:40,770 --> 00:01:45,090
as<font color="#CCCCCC"> well</font><font color="#E5E5E5"> as JavaScript running in the</font>

44
00:01:42,509 --> 00:01:47,670
<font color="#CCCCCC">end-user browser</font><font color="#E5E5E5"> and what this lets you</font>

45
00:01:45,090 --> 00:01:50,490
do<font color="#E5E5E5"> is sort of skirt the same origin</font>

46
00:01:47,670 --> 00:01:54,390
<font color="#CCCCCC">policy it lets you make requests against</font>

47
00:01:50,490 --> 00:01:57,210
a unexpected second domain<font color="#E5E5E5"> or a second</font>

48
00:01:54,390 --> 00:01:59,159
IP address<font color="#E5E5E5"> rather that your browser will</font>

49
00:01:57,210 --> 00:02:02,880
treat as being from<font color="#E5E5E5"> the origin that</font><font color="#CCCCCC"> you</font>

50
00:01:59,159 --> 00:02:04,290
served your malicious<font color="#E5E5E5"> JavaScript from in</font>

51
00:02:02,880 --> 00:02:07,439
the wild there have been some pretty

52
00:02:04,290 --> 00:02:09,270
neat write-ups<font color="#E5E5E5"> recently actually the</font>

53
00:02:07,439 --> 00:02:10,649
<font color="#CCCCCC">write-up that got me and Alan</font><font color="#E5E5E5"> to start</font>

54
00:02:09,270 --> 00:02:12,599
looking<font color="#CCCCCC"> into this and write our tools</font>

55
00:02:10,649 --> 00:02:13,250
<font color="#E5E5E5">for performing these attacks was from</font>

56
00:02:12,599 --> 00:02:16,920
Tavis

57
00:02:13,250 --> 00:02:19,680
<font color="#CCCCCC">he found a bunch of really cool problems</font>

58
00:02:16,920 --> 00:02:21,530
and put them up on<font color="#E5E5E5"> project zero</font><font color="#CCCCCC"> the most</font>

59
00:02:19,680 --> 00:02:24,780
notable was probably the<font color="#CCCCCC"> Blizzard</font>

60
00:02:21,530 --> 00:02:26,940
battlenet<font color="#E5E5E5"> agent</font><font color="#CCCCCC"> which basically</font><font color="#E5E5E5"> if you</font>

61
00:02:24,780 --> 00:02:28,290
don't<font color="#E5E5E5"> know is an application</font><font color="#CCCCCC"> that you</font>

62
00:02:26,940 --> 00:02:31,380
install and that keeps your Blizzard

63
00:02:28,290 --> 00:02:33,510
<font color="#CCCCCC">games up to date and what Tevez found</font>

64
00:02:31,380 --> 00:02:35,160
was actually<font color="#CCCCCC"> that by using</font><font color="#E5E5E5"> a DNS</font>

65
00:02:33,510 --> 00:02:36,149
rebinding vulnerability he could get

66
00:02:35,160 --> 00:02:38,790
full<font color="#CCCCCC"> RCE</font>

67
00:02:36,150 --> 00:02:41,790
by just having<font color="#E5E5E5"> someone visit a website</font>

68
00:02:38,790 --> 00:02:46,380
and then he got he<font color="#CCCCCC"> got the agent</font><font color="#E5E5E5"> to like</font>

69
00:02:41,790 --> 00:02:47,910
load a<font color="#CCCCCC"> dll</font><font color="#E5E5E5"> that he supplied</font><font color="#CCCCCC"> similarly</font>

70
00:02:46,380 --> 00:02:49,849
there were<font color="#E5E5E5"> kind of similar</font>

71
00:02:47,910 --> 00:02:51,959
vulnerabilities in<font color="#CCCCCC"> to BitTorrent clients</font>

72
00:02:49,849 --> 00:02:54,959
utorrent<font color="#CCCCCC"> and transmission I believe</font>

73
00:02:51,959 --> 00:02:56,940
where they had<font color="#E5E5E5"> a JSON RPC interface is</font>

74
00:02:54,959 --> 00:02:59,160
exposed over<font color="#E5E5E5"> localhost and you're able</font>

75
00:02:56,940 --> 00:03:01,049
<font color="#CCCCCC">to hit</font><font color="#E5E5E5"> him with DNS rebinding</font><font color="#CCCCCC"> and my</font>

76
00:02:59,160 --> 00:03:03,390
personal favorite was<font color="#E5E5E5"> the Elektra</font>

77
00:03:01,049 --> 00:03:07,160
material wallet<font color="#E5E5E5"> where you couldn't get</font>

78
00:03:03,390 --> 00:03:07,160
<font color="#CCCCCC">RCE but you could steal all</font><font color="#E5E5E5"> their money</font>

79
00:03:08,640 --> 00:03:12,420
<font color="#CCCCCC">shoutout to</font><font color="#E5E5E5"> brandon</font><font color="#CCCCCC"> dorsey I don't</font>

80
00:03:10,890 --> 00:03:14,910
personally know<font color="#E5E5E5"> this person but while we</font>

81
00:03:12,420 --> 00:03:16,950
were doing<font color="#E5E5E5"> our</font><font color="#CCCCCC"> research</font><font color="#E5E5E5"> we came across a</font>

82
00:03:14,910 --> 00:03:19,109
sort<font color="#E5E5E5"> of similar DNS server</font>

83
00:03:16,950 --> 00:03:20,970
implementation we<font color="#E5E5E5"> have different</font>

84
00:03:19,109 --> 00:03:22,620
features<font color="#CCCCCC"> between the two of them but if</font>

85
00:03:20,970 --> 00:03:25,799
you're looking for<font color="#E5E5E5"> sort of a parallel</font>

86
00:03:22,620 --> 00:03:29,940
<font color="#E5E5E5">evolution implementation check out this</font>

87
00:03:25,799 --> 00:03:31,470
person's<font color="#CCCCCC"> work on github</font><font color="#E5E5E5"> so what we'll be</font>

88
00:03:29,940 --> 00:03:32,850
talking<font color="#E5E5E5"> about today</font><font color="#CCCCCC"> is first</font><font color="#E5E5E5"> I'm going</font>

89
00:03:31,470 --> 00:03:34,920
<font color="#CCCCCC">to give some background</font><font color="#E5E5E5"> on how this</font>

90
00:03:32,850 --> 00:03:37,530
<font color="#CCCCCC">attack class</font><font color="#E5E5E5"> actually works and sort of</font>

91
00:03:34,920 --> 00:03:40,048
dive into the very<font color="#CCCCCC"> clegg gritty</font>

92
00:03:37,530 --> 00:03:42,150
specifics<font color="#E5E5E5"> then we'll talk about the tool</font>

93
00:03:40,049 --> 00:03:44,760
we<font color="#CCCCCC"> built and why you might want to use</font>

94
00:03:42,150 --> 00:03:46,260
it and what benefits<font color="#E5E5E5"> it has next up</font>

95
00:03:44,760 --> 00:03:48,540
we'll talk<font color="#E5E5E5"> about all</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> really</font>

96
00:03:46,260 --> 00:03:50,940
<font color="#E5E5E5">horrible optimization work that needs to</font>

97
00:03:48,540 --> 00:03:54,690
go into<font color="#E5E5E5"> making a DNS rebinding attack be</font>

98
00:03:50,940 --> 00:03:56,910
fast<font color="#E5E5E5"> and finally we'll talk</font><font color="#CCCCCC"> about areas</font>

99
00:03:54,690 --> 00:04:00,060
that<font color="#CCCCCC"> we think</font><font color="#E5E5E5"> could use more attention</font>

100
00:03:56,910 --> 00:04:04,769
and that are ripe and rich<font color="#E5E5E5"> for future</font>

101
00:04:00,060 --> 00:04:07,319
work so first up<font color="#E5E5E5"> let's talk</font><font color="#CCCCCC"> about the</font>

102
00:04:04,769 --> 00:04:09,810
<font color="#CCCCCC">normal operation of</font><font color="#E5E5E5"> a sort of</font>

103
00:04:07,319 --> 00:04:11,518
<font color="#CCCCCC">canonically vulnerable application so</font>

104
00:04:09,810 --> 00:04:13,349
what you have here<font color="#CCCCCC"> is you've got a</font>

105
00:04:11,519 --> 00:04:14,819
service running<font color="#E5E5E5"> on your computer</font><font color="#CCCCCC"> that</font>

106
00:04:13,349 --> 00:04:18,120
for some reason<font color="#CCCCCC"> is divided</font><font color="#E5E5E5"> into multiple</font>

107
00:04:14,819 --> 00:04:20,279
processes and<font color="#E5E5E5"> for whatever reason the</font>

108
00:04:18,120 --> 00:04:23,370
designer of this service has<font color="#CCCCCC"> decided to</font>

109
00:04:20,279 --> 00:04:24,359
<font color="#E5E5E5">use a</font><font color="#CCCCCC"> localhost web server as the</font><font color="#E5E5E5"> RPC</font>

110
00:04:23,370 --> 00:04:26,340
medium

111
00:04:24,360 --> 00:04:29,189
between<font color="#E5E5E5"> the processes this is actually</font>

112
00:04:26,340 --> 00:04:31,229
not<font color="#CCCCCC"> that uncommon of a design pattern or</font>

113
00:04:29,189 --> 00:04:34,110
a PMT pattern depends how you feel about

114
00:04:31,229 --> 00:04:37,919
<font color="#E5E5E5">it because partially it's rather</font>

115
00:04:34,110 --> 00:04:40,710
portable<font color="#E5E5E5"> it's gonna work on OS X and</font>

116
00:04:37,919 --> 00:04:42,688
<font color="#CCCCCC">Windows and Lennox out of the box so</font>

117
00:04:40,710 --> 00:04:44,489
like there are reasons to<font color="#E5E5E5"> do</font><font color="#CCCCCC"> this and</font>

118
00:04:42,689 --> 00:04:46,169
you know people aren't wrong for<font color="#E5E5E5"> wanting</font>

119
00:04:44,490 --> 00:04:47,430
to have something<font color="#CCCCCC"> that works</font><font color="#E5E5E5"> but</font>

120
00:04:46,169 --> 00:04:49,680
<font color="#E5E5E5">basically the way this</font><font color="#CCCCCC"> works is that</font>

121
00:04:47,430 --> 00:04:51,930
<font color="#CCCCCC">process a you know wants to do some sort</font>

122
00:04:49,680 --> 00:04:54,659
of IPC<font color="#E5E5E5"> in this case it's triggering an</font>

123
00:04:51,930 --> 00:04:57,870
action by process<font color="#E5E5E5"> B so it posts across</font>

124
00:04:54,659 --> 00:04:59,460
<font color="#CCCCCC">localhost and B</font><font color="#E5E5E5"> because it's only</font>

125
00:04:57,870 --> 00:05:01,889
<font color="#E5E5E5">listening on localhost thinks</font><font color="#CCCCCC"> this is a</font>

126
00:04:59,460 --> 00:05:04,710
safe Channel<font color="#E5E5E5"> and executes the requested</font>

127
00:05:01,889 --> 00:05:06,779
action now<font color="#CCCCCC"> first pass attempted</font>

128
00:05:04,710 --> 00:05:09,029
<font color="#E5E5E5">exploiting this you might just you know</font>

129
00:05:06,779 --> 00:05:10,919
from attacker<font color="#E5E5E5"> comm serve some JavaScript</font>

130
00:05:09,029 --> 00:05:13,889
and<font color="#E5E5E5"> have that JavaScript make a get or a</font>

131
00:05:10,919 --> 00:05:16,889
post against<font color="#CCCCCC"> localhost and if you don't</font>

132
00:05:13,889 --> 00:05:19,229
<font color="#E5E5E5">need to set HTTP headers</font><font color="#CCCCCC"> or if you don't</font>

133
00:05:16,889 --> 00:05:21,090
need<font color="#E5E5E5"> to retrieve the response body from</font>

134
00:05:19,229 --> 00:05:23,068
<font color="#E5E5E5">your target this could work this is not</font>

135
00:05:21,090 --> 00:05:26,789
<font color="#E5E5E5">DNS rebinding this is just basically</font>

136
00:05:23,069 --> 00:05:28,830
<font color="#CCCCCC">Caesar but because of the same origin</font>

137
00:05:26,789 --> 00:05:31,080
<font color="#CCCCCC">policy if</font><font color="#E5E5E5"> you need to set those headers</font>

138
00:05:28,830 --> 00:05:34,409
or retrieve the response body<font color="#E5E5E5"> this won't</font>

139
00:05:31,080 --> 00:05:36,330
<font color="#E5E5E5">work</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> each short short</font><font color="#CCCCCC"> reminders same</font>

140
00:05:34,409 --> 00:05:38,699
origin policy<font color="#E5E5E5"> basically just means that</font>

141
00:05:36,330 --> 00:05:41,068
you've<font color="#CCCCCC"> got JavaScript from one place it</font>

142
00:05:38,699 --> 00:05:43,349
can<font color="#E5E5E5"> only do a very limited set of things</font>

143
00:05:41,069 --> 00:05:47,400
<font color="#E5E5E5">to other domains than the one</font><font color="#CCCCCC"> that was</font>

144
00:05:43,349 --> 00:05:49,979
served<font color="#E5E5E5"> from now let's talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> how we</font>

145
00:05:47,400 --> 00:05:52,710
would<font color="#CCCCCC"> attack something</font><font color="#E5E5E5"> first up you get</font>

146
00:05:49,979 --> 00:05:55,289
the user<font color="#E5E5E5"> to go to your attacker</font><font color="#CCCCCC"> com so</font>

147
00:05:52,710 --> 00:05:57,120
the end user browser issues<font color="#E5E5E5"> a request</font><font color="#CCCCCC"> to</font>

148
00:05:55,289 --> 00:06:00,900
<font color="#CCCCCC">the local resolver</font><font color="#E5E5E5"> to look up attacker</font>

149
00:05:57,120 --> 00:06:03,659
<font color="#CCCCCC">comm and then that local resolver goes</font>

150
00:06:00,900 --> 00:06:05,758
forward to a recursive resolver<font color="#E5E5E5"> in this</font>

151
00:06:03,659 --> 00:06:06,960
diagram the recursive is external you

152
00:06:05,759 --> 00:06:09,839
could be running<font color="#CCCCCC"> your</font><font color="#E5E5E5"> own it doesn't</font>

153
00:06:06,960 --> 00:06:12,089
<font color="#CCCCCC">matter</font><font color="#E5E5E5"> and that recursive then goes</font>

154
00:06:09,839 --> 00:06:15,270
forward to our adversary controlled

155
00:06:12,089 --> 00:06:18,150
authoritative<font color="#E5E5E5"> DNS server because we</font>

156
00:06:15,270 --> 00:06:19,438
control<font color="#CCCCCC"> that zone so when that</font><font color="#E5E5E5"> request</font>

157
00:06:18,150 --> 00:06:22,169
comes to us

158
00:06:19,439 --> 00:06:24,270
so<font color="#E5E5E5"> I've alighted a detail</font><font color="#CCCCCC"> here it would</font>

159
00:06:22,169 --> 00:06:26,520
have<font color="#CCCCCC"> to be like</font><font color="#E5E5E5"> Bob</font><font color="#CCCCCC"> Don</font><font color="#E5E5E5"> attacker.com</font>

160
00:06:24,270 --> 00:06:28,438
or something to keep them unique but so

161
00:06:26,520 --> 00:06:33,060
we<font color="#E5E5E5"> recognize</font><font color="#CCCCCC"> that we haven't owned Bob</font>

162
00:06:28,439 --> 00:06:35,729
yet so we send back 1.2.3.4<font color="#CCCCCC"> which let's</font>

163
00:06:33,060 --> 00:06:36,390
pretend we control<font color="#CCCCCC"> that IP</font><font color="#E5E5E5"> and say that</font>

164
00:06:35,729 --> 00:06:39,240
the result is

165
00:06:36,390 --> 00:06:43,020
for the<font color="#E5E5E5"> next second what happens then is</font>

166
00:06:39,240 --> 00:06:45,450
that<font color="#E5E5E5"> the 1.2.3.4</font><font color="#CCCCCC"> one-second percolates</font>

167
00:06:43,020 --> 00:06:48,570
back<font color="#E5E5E5"> through the room a recursive to the</font>

168
00:06:45,450 --> 00:06:50,190
local and to the browser<font color="#E5E5E5"> what happens</font>

169
00:06:48,570 --> 00:06:52,409
then<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the browser's got an IP address</font>

170
00:06:50,190 --> 00:06:54,330
<font color="#CCCCCC">makes a request</font><font color="#E5E5E5"> to the adversary web</font>

171
00:06:52,410 --> 00:06:59,490
server and we serve<font color="#E5E5E5"> them back some</font>

172
00:06:54,330 --> 00:07:01,469
<font color="#CCCCCC">JavaScript so far nothing that weird has</font>

173
00:06:59,490 --> 00:07:03,750
<font color="#CCCCCC">happened here</font><font color="#E5E5E5"> the short</font><font color="#CCCCCC"> DNS TTL is a</font>

174
00:07:01,470 --> 00:07:05,370
little bit unusual but it's<font color="#E5E5E5"> not that far</font>

175
00:07:03,750 --> 00:07:08,940
beyond the pale<font color="#CCCCCC"> there are</font><font color="#E5E5E5"> reasons to</font>

176
00:07:05,370 --> 00:07:11,430
<font color="#E5E5E5">have fairly short DNS details</font><font color="#CCCCCC"> so nothing</font>

177
00:07:08,940 --> 00:07:15,480
here was really abnormal browsing so far

178
00:07:11,430 --> 00:07:17,760
so let's<font color="#E5E5E5"> talk about the attack what</font>

179
00:07:15,480 --> 00:07:19,740
happens next<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that our</font><font color="#E5E5E5"> JavaScript</font>

180
00:07:17,760 --> 00:07:21,750
<font color="#CCCCCC">tries to</font><font color="#E5E5E5"> make a request against attacker</font>

181
00:07:19,740 --> 00:07:24,210
<font color="#CCCCCC">com again like an ajax request or</font>

182
00:07:21,750 --> 00:07:26,340
<font color="#CCCCCC">something</font><font color="#E5E5E5"> and so that gets</font><font color="#CCCCCC"> delegated to</font>

183
00:07:24,210 --> 00:07:29,190
the browser which sees a request for

184
00:07:26,340 --> 00:07:31,080
attacker<font color="#E5E5E5"> com</font><font color="#CCCCCC"> it's the same origin so we</font>

185
00:07:29,190 --> 00:07:33,030
can retrieve<font color="#E5E5E5"> the body of just fine we</font>

186
00:07:31,080 --> 00:07:36,030
can set headers<font color="#E5E5E5"> we can do whatever we</font>

187
00:07:33,030 --> 00:07:38,640
<font color="#E5E5E5">want</font><font color="#CCCCCC"> now hopefully what then will happen</font>

188
00:07:36,030 --> 00:07:41,190
is<font color="#CCCCCC"> that the browser</font><font color="#E5E5E5"> triggers the name</font>

189
00:07:38,640 --> 00:07:42,780
<font color="#E5E5E5">lookup and we get that the record has</font>

190
00:07:41,190 --> 00:07:46,050
expired<font color="#E5E5E5"> because we set it with such a</font>

191
00:07:42,780 --> 00:07:48,030
<font color="#E5E5E5">short TTL and if this doesn't</font><font color="#CCCCCC"> work</font>

192
00:07:46,050 --> 00:07:49,620
because you<font color="#CCCCCC"> know your local</font><font color="#E5E5E5"> cache says</font>

193
00:07:48,030 --> 00:07:51,210
no I'm not<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> hold a record for</font>

194
00:07:49,620 --> 00:07:54,900
only<font color="#E5E5E5"> a second you can just keep</font>

195
00:07:51,210 --> 00:07:56,340
<font color="#E5E5E5">requesting until it does expire so what</font>

196
00:07:54,900 --> 00:07:58,859
happens then as you know<font color="#CCCCCC"> it goes back</font>

197
00:07:56,340 --> 00:08:01,500
<font color="#CCCCCC">out</font><font color="#E5E5E5"> your recursive record has also</font>

198
00:07:58,860 --> 00:08:05,010
expired hopefully and the recursive

199
00:08:01,500 --> 00:08:07,170
makes a request<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the DNS server we</font>

200
00:08:05,010 --> 00:08:09,659
control and this time around<font color="#E5E5E5"> we know</font>

201
00:08:07,170 --> 00:08:12,360
that we've already heard<font color="#E5E5E5"> from you know</font>

202
00:08:09,660 --> 00:08:16,980
this<font color="#E5E5E5"> target so we</font><font color="#CCCCCC"> return a different</font>

203
00:08:12,360 --> 00:08:19,350
<font color="#CCCCCC">result</font><font color="#E5E5E5"> we return 127.0.0.1</font><font color="#CCCCCC"> and a long</font>

204
00:08:16,980 --> 00:08:22,470
validity went down now

205
00:08:19,350 --> 00:08:24,750
what happens then<font color="#E5E5E5"> is the browser gets</font>

206
00:08:22,470 --> 00:08:29,250
back<font color="#CCCCCC"> Oh attacker com is located at</font>

207
00:08:24,750 --> 00:08:31,920
127.0.0.1<font color="#CCCCCC"> and the browser then happily</font>

208
00:08:29,250 --> 00:08:34,559
goes forward on localhost because it's

209
00:08:31,920 --> 00:08:36,390
<font color="#CCCCCC">this</font><font color="#E5E5E5"> and treats it as the same origin</font><font color="#CCCCCC"> as</font>

210
00:08:34,559 --> 00:08:38,909
<font color="#CCCCCC">the one we served</font><font color="#E5E5E5"> our JavaScript from</font>

211
00:08:36,390 --> 00:08:42,870
and this<font color="#E5E5E5"> means that you can do whatever</font>

212
00:08:38,909 --> 00:08:45,449
badness<font color="#CCCCCC"> you would like to do in terms</font><font color="#E5E5E5"> of</font>

213
00:08:42,870 --> 00:08:47,520
scope of exploitation here really

214
00:08:45,450 --> 00:08:50,100
depends<font color="#E5E5E5"> on the target application</font>

215
00:08:47,520 --> 00:08:52,589
in the in the cases<font color="#E5E5E5"> I mentioned</font><font color="#CCCCCC"> there</font>

216
00:08:50,100 --> 00:08:54,420
<font color="#E5E5E5">was our</font><font color="#CCCCCC"> Cee but be like the</font><font color="#E5E5E5"> electrum</font>

217
00:08:52,589 --> 00:08:55,860
wall you could<font color="#CCCCCC"> only steal</font><font color="#E5E5E5"> money some</font>

218
00:08:54,420 --> 00:08:58,199
<font color="#E5E5E5">other cases you might only be able to</font>

219
00:08:55,860 --> 00:08:59,820
moderately annoy the<font color="#E5E5E5"> end user you</font><font color="#CCCCCC"> know</font>

220
00:08:58,200 --> 00:09:04,290
it depends<font color="#CCCCCC"> on what capabilities are</font>

221
00:08:59,820 --> 00:09:06,330
exposed by<font color="#CCCCCC"> this</font><font color="#E5E5E5"> RPC in terms of</font>

222
00:09:04,290 --> 00:09:09,510
mitigations or reasons that your attack

223
00:09:06,330 --> 00:09:11,910
might not work<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> a couple the</font>

224
00:09:09,510 --> 00:09:14,250
easiest<font color="#E5E5E5"> is that if you are a developer</font>

225
00:09:11,910 --> 00:09:16,199
<font color="#E5E5E5">designing a</font><font color="#CCCCCC"> system like this you can</font>

226
00:09:14,250 --> 00:09:19,620
just<font color="#E5E5E5"> check the host header for the</font>

227
00:09:16,200 --> 00:09:21,360
requests<font color="#E5E5E5"> for your localhost IPC and so</font>

228
00:09:19,620 --> 00:09:24,690
this looks<font color="#CCCCCC"> something like process a</font>

229
00:09:21,360 --> 00:09:27,930
sends a long<font color="#E5E5E5"> B host</font><font color="#CCCCCC"> localhost in the</font>

230
00:09:24,690 --> 00:09:31,140
<font color="#E5E5E5">host header and then process</font><font color="#CCCCCC"> a B upon</font>

231
00:09:27,930 --> 00:09:33,479
seeing<font color="#E5E5E5"> that request says</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> okay that's</font>

232
00:09:31,140 --> 00:09:35,310
the host I was expecting<font color="#E5E5E5"> and as long as</font>

233
00:09:33,480 --> 00:09:36,959
<font color="#CCCCCC">the host header</font><font color="#E5E5E5"> you're sending isn't one</font>

234
00:09:35,310 --> 00:09:39,959
that an adversary could get the browser

235
00:09:36,959 --> 00:09:41,520
to send on its behalf so like<font color="#E5E5E5"> don't make</font>

236
00:09:39,959 --> 00:09:45,229
up a host header that someone could then

237
00:09:41,520 --> 00:09:47,430
go<font color="#E5E5E5"> in a register</font><font color="#CCCCCC"> and control as a</font><font color="#E5E5E5"> domain</font>

238
00:09:45,230 --> 00:09:50,100
<font color="#CCCCCC">but as long</font><font color="#E5E5E5"> as you don't you're good to</font>

239
00:09:47,430 --> 00:09:53,430
go<font color="#CCCCCC"> because what happens is</font><font color="#E5E5E5"> that when we</font>

240
00:09:50,100 --> 00:09:55,020
try<font color="#CCCCCC"> to hit process B now</font><font color="#E5E5E5"> the browser on</font>

241
00:09:53,430 --> 00:09:56,489
our you can<font color="#E5E5E5"> get the browser to do a lot</font>

242
00:09:55,020 --> 00:09:58,770
of<font color="#E5E5E5"> things on the same origin</font><font color="#CCCCCC"> but</font>

243
00:09:56,490 --> 00:10:00,660
something<font color="#CCCCCC"> you can't get it to do is lie</font>

244
00:09:58,770 --> 00:10:02,279
about the<font color="#E5E5E5"> host header you can set other</font>

245
00:10:00,660 --> 00:10:03,870
headers but you can't get it to lie

246
00:10:02,279 --> 00:10:06,330
<font color="#CCCCCC">about the</font><font color="#E5E5E5"> host header it will not do</font>

247
00:10:03,870 --> 00:10:09,959
that<font color="#CCCCCC"> for you</font><font color="#E5E5E5"> so we send the host</font>

248
00:10:06,330 --> 00:10:11,100
attacker comm and process B says hey

249
00:10:09,959 --> 00:10:13,319
<font color="#E5E5E5">that's not who I'm supposed to be</font>

250
00:10:11,100 --> 00:10:15,870
<font color="#CCCCCC">talking to so this</font><font color="#E5E5E5"> is probably the</font>

251
00:10:13,320 --> 00:10:19,380
<font color="#CCCCCC">easiest way to mitigate</font><font color="#E5E5E5"> this particular</font>

252
00:10:15,870 --> 00:10:21,150
<font color="#E5E5E5">attack another option</font><font color="#CCCCCC"> that is there's</font>

253
00:10:19,380 --> 00:10:22,770
some<font color="#CCCCCC"> pitfalls to</font><font color="#E5E5E5"> this but I'm still</font>

254
00:10:21,150 --> 00:10:23,790
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to talk about</font><font color="#E5E5E5"> it is to use some</font>

255
00:10:22,770 --> 00:10:27,740
<font color="#E5E5E5">kind of</font><font color="#CCCCCC"> cryptographic authentication</font>

256
00:10:23,790 --> 00:10:31,230
scheme that is not TLS<font color="#E5E5E5"> TLS</font><font color="#CCCCCC"> assumption 3</font>

257
00:10:27,740 --> 00:10:34,560
<font color="#CCCCCC">an option so something like</font><font color="#E5E5E5"> you sign you</font>

258
00:10:31,230 --> 00:10:36,660
<font color="#E5E5E5">just sign your</font><font color="#CCCCCC"> RPC and important note</font>

259
00:10:34,560 --> 00:10:39,329
here<font color="#CCCCCC"> you need</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> have those keys be</font>

260
00:10:36,660 --> 00:10:41,670
generated on a either for execution or

261
00:10:39,329 --> 00:10:43,859
per installation basis<font color="#E5E5E5"> if the keys are</font>

262
00:10:41,670 --> 00:10:46,290
bundled in the application you<font color="#E5E5E5"> can then</font>

263
00:10:43,860 --> 00:10:48,089
<font color="#E5E5E5">Forge signatures so normal operation</font>

264
00:10:46,290 --> 00:10:51,300
<font color="#E5E5E5">process a assigns the request to process</font>

265
00:10:48,089 --> 00:10:53,430
B everything's happy process B accepts

266
00:10:51,300 --> 00:10:56,160
it but then when we try<font color="#CCCCCC"> to own process B</font>

267
00:10:53,430 --> 00:10:58,260
we can't generate a signature unless of

268
00:10:56,160 --> 00:10:59,370
course they screwed up<font color="#E5E5E5"> and used only one</font>

269
00:10:58,260 --> 00:11:03,080
key pair and<font color="#CCCCCC"> but</font>

270
00:10:59,370 --> 00:11:03,080
lived in<font color="#E5E5E5"> the Installer</font><font color="#CCCCCC"> don't do that</font>

271
00:11:03,950 --> 00:11:11,310
<font color="#CCCCCC">also like</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> said pitfalls the scheme</font>

272
00:11:08,970 --> 00:11:13,800
<font color="#E5E5E5">also</font><font color="#CCCCCC"> as it described is vulnerable to</font>

273
00:11:11,310 --> 00:11:15,170
replay attacks<font color="#E5E5E5"> so be careful if you</font>

274
00:11:13,800 --> 00:11:17,910
<font color="#E5E5E5">choose this option</font>

275
00:11:15,170 --> 00:11:20,880
finally<font color="#E5E5E5"> you can just use our old friend</font>

276
00:11:17,910 --> 00:11:23,189
TOS reason this works is in<font color="#E5E5E5"> normal</font>

277
00:11:20,880 --> 00:11:25,200
operation<font color="#E5E5E5"> process</font><font color="#CCCCCC"> a since client hello</font>

278
00:11:23,190 --> 00:11:27,450
<font color="#CCCCCC">gets back to server hello with the cert</font>

279
00:11:25,200 --> 00:11:28,920
and process a knows what<font color="#CCCCCC"> hostname to</font>

280
00:11:27,450 --> 00:11:30,660
expect for once more it could<font color="#E5E5E5"> be</font>

281
00:11:28,920 --> 00:11:32,849
<font color="#E5E5E5">localhost this doesn't have to be a real</font>

282
00:11:30,660 --> 00:11:34,920
web<font color="#CCCCCC"> PKI sir it in fact it shouldn't</font><font color="#E5E5E5"> be</font>

283
00:11:32,850 --> 00:11:39,300
it can just be some<font color="#E5E5E5"> self signed garbage</font>

284
00:11:34,920 --> 00:11:42,240
you made next<font color="#CCCCCC"> up when the browser tries</font>

285
00:11:39,300 --> 00:11:45,990
to do this what happens<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that since</font>

286
00:11:42,240 --> 00:11:47,640
<font color="#E5E5E5">its client</font><font color="#CCCCCC"> hello and</font><font color="#E5E5E5"> the process B sends</font>

287
00:11:45,990 --> 00:11:50,220
<font color="#E5E5E5">back in server hello with you know this</font>

288
00:11:47,640 --> 00:11:53,339
cert that hasn't<font color="#E5E5E5"> its</font><font color="#CCCCCC"> CN like a localhost</font>

289
00:11:50,220 --> 00:11:55,410
or you know garbage<font color="#E5E5E5"> dot</font><font color="#CCCCCC"> localhost or who</font>

290
00:11:53,339 --> 00:11:58,230
knows<font color="#E5E5E5"> something and the browser bails</font>

291
00:11:55,410 --> 00:12:00,480
out<font color="#CCCCCC"> this is a TLS error because once</font>

292
00:11:58,230 --> 00:12:02,940
more remember the<font color="#CCCCCC"> JavaScript</font><font color="#E5E5E5"> can only</font>

293
00:12:00,480 --> 00:12:04,920
take<font color="#CCCCCC"> action only compel the browser to</font>

294
00:12:02,940 --> 00:12:06,779
<font color="#E5E5E5">make requests it can't like make its own</font>

295
00:12:04,920 --> 00:12:11,250
and say oh<font color="#E5E5E5"> no I don't care about TLS</font>

296
00:12:06,779 --> 00:12:13,589
errors so I just talked to bunch<font color="#E5E5E5"> about</font>

297
00:12:11,250 --> 00:12:16,950
how to do this but I'm going<font color="#CCCCCC"> to talk a</font>

298
00:12:13,589 --> 00:12:20,310
<font color="#CCCCCC">bit about how we did it out our attack</font>

299
00:12:16,950 --> 00:12:23,040
tool is a single go binary that

300
00:12:20,310 --> 00:12:25,260
<font color="#E5E5E5">basically gives you a DNS</font><font color="#CCCCCC"> server that</font><font color="#E5E5E5"> is</font>

301
00:12:23,040 --> 00:12:26,790
stay full and can do those tricky things

302
00:12:25,260 --> 00:12:28,560
like<font color="#E5E5E5"> returning different results</font>

303
00:12:26,790 --> 00:12:30,870
<font color="#CCCCCC">depending</font><font color="#E5E5E5"> on the number of queries or</font>

304
00:12:28,560 --> 00:12:32,489
some other things integrated with a

305
00:12:30,870 --> 00:12:35,310
server<font color="#CCCCCC"> that'll serve you up some logs</font>

306
00:12:32,490 --> 00:12:37,700
nicely and has a splash<font color="#E5E5E5"> page and a</font>

307
00:12:35,310 --> 00:12:39,599
server that<font color="#E5E5E5"> serves</font><font color="#CCCCCC"> JavaScript payloads</font>

308
00:12:37,700 --> 00:12:42,270
<font color="#E5E5E5">the reason it's all in one application</font>

309
00:12:39,600 --> 00:12:44,190
<font color="#E5E5E5">is</font><font color="#CCCCCC"> that we're lazy and we want to share</font>

310
00:12:42,270 --> 00:12:45,959
state between<font color="#E5E5E5"> them easily because that</font>

311
00:12:44,190 --> 00:12:50,520
lets us pull off some<font color="#E5E5E5"> really cool tricks</font>

312
00:12:45,959 --> 00:12:53,430
<font color="#CCCCCC">to accelerate this attack later</font><font color="#E5E5E5"> so so</font>

313
00:12:50,520 --> 00:12:56,550
far<font color="#CCCCCC"> so expected</font><font color="#E5E5E5"> architectural</font><font color="#CCCCCC"> EU now</font>

314
00:12:53,430 --> 00:12:58,020
your DNS server binds on<font color="#CCCCCC"> 453 your HTTP</font>

315
00:12:56,550 --> 00:13:00,300
server binds on port 80

316
00:12:58,020 --> 00:13:03,029
nothing weirds<font color="#CCCCCC"> happening so far but</font>

317
00:13:00,300 --> 00:13:05,219
here's where<font color="#CCCCCC"> things get weird reminder</font>

318
00:13:03,029 --> 00:13:07,620
on the same<font color="#E5E5E5"> origin policy an origin is</font>

319
00:13:05,220 --> 00:13:12,250
defined as a protocol hostname port

320
00:13:07,620 --> 00:13:15,670
<font color="#E5E5E5">tuple so example HTTP</font>

321
00:13:12,250 --> 00:13:19,780
HTTP is<font color="#E5E5E5"> the protocol then food</font><font color="#CCCCCC"> rebind my</font>

322
00:13:15,670 --> 00:13:23,140
zone is the<font color="#CCCCCC"> hostname</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> one 337 is the</font>

323
00:13:19,780 --> 00:13:25,240
port what this means is that if we<font color="#CCCCCC"> want</font>

324
00:13:23,140 --> 00:13:28,480
to serve<font color="#E5E5E5"> JavaScript payloads</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> can</font>

325
00:13:25,240 --> 00:13:30,340
hit our target on any port like sub

326
00:13:28,480 --> 00:13:32,320
special<font color="#E5E5E5"> e we can be the same origin as</font>

327
00:13:30,340 --> 00:13:35,620
any port we need to be able<font color="#E5E5E5"> to serve</font>

328
00:13:32,320 --> 00:13:41,080
from any port and the way we handled

329
00:13:35,620 --> 00:13:44,110
<font color="#E5E5E5">this was by using an IP</font><font color="#CCCCCC"> table tack the</font>

330
00:13:41,080 --> 00:13:47,050
hack in question is basically<font color="#CCCCCC"> just</font><font color="#E5E5E5"> that</font>

331
00:13:44,110 --> 00:13:49,060
<font color="#E5E5E5">all traffic for the payload IP address</font>

332
00:13:47,050 --> 00:13:51,699
which is<font color="#CCCCCC"> a second IP address separate</font>

333
00:13:49,060 --> 00:13:54,250
from<font color="#E5E5E5"> everything else it's all TCP</font>

334
00:13:51,700 --> 00:13:56,560
traffic gets forwarded or all TCP

335
00:13:54,250 --> 00:13:59,380
traffic on all<font color="#CCCCCC"> ports</font><font color="#E5E5E5"> gets forwarded to</font>

336
00:13:56,560 --> 00:14:01,630
port 80 on<font color="#E5E5E5"> a local IP address and then</font>

337
00:13:59,380 --> 00:14:03,640
our payload<font color="#E5E5E5"> server can just be a normal</font>

338
00:14:01,630 --> 00:14:05,530
<font color="#E5E5E5">web server that</font><font color="#CCCCCC"> doesn't have to do</font>

339
00:14:03,640 --> 00:14:08,290
anything crazy<font color="#E5E5E5"> like listen on every port</font>

340
00:14:05,530 --> 00:14:11,740
<font color="#E5E5E5">it just listens on that local IP on port</font>

341
00:14:08,290 --> 00:14:13,510
80<font color="#E5E5E5"> but from an outsider's perspective if</font>

342
00:14:11,740 --> 00:14:19,780
you talk to that<font color="#E5E5E5"> IP</font><font color="#CCCCCC"> address on any port</font>

343
00:14:13,510 --> 00:14:22,750
it will<font color="#CCCCCC"> serve you</font><font color="#E5E5E5"> HTTP so this is what</font>

344
00:14:19,780 --> 00:14:25,449
the tools<font color="#E5E5E5"> actually looks like in terms</font>

345
00:14:22,750 --> 00:14:27,630
of the domains of generates so what is

346
00:14:25,450 --> 00:14:30,990
this<font color="#CCCCCC"> garbage this is a configuration</font>

347
00:14:27,630 --> 00:14:34,210
<font color="#E5E5E5">dictionary embedded in a hostname and</font>

348
00:14:30,990 --> 00:14:37,060
the reason you the reason we wanted this

349
00:14:34,210 --> 00:14:38,650
is hey<font color="#E5E5E5"> like why bother having people</font>

350
00:14:37,060 --> 00:14:40,599
have to like write a config or something

351
00:14:38,650 --> 00:14:42,610
they can just<font color="#E5E5E5"> shove</font><font color="#CCCCCC"> it directly into the</font>

352
00:14:40,600 --> 00:14:45,190
hostname<font color="#E5E5E5"> and get</font><font color="#CCCCCC"> whatever behavior</font><font color="#E5E5E5"> they</font>

353
00:14:42,610 --> 00:14:47,830
need so in this particular case<font color="#CCCCCC"> what</font>

354
00:14:45,190 --> 00:14:50,560
we've got in our config dictionary<font color="#E5E5E5"> is a</font>

355
00:14:47,830 --> 00:14:53,200
UID<font color="#E5E5E5"> and this is just sort of a magic key</font>

356
00:14:50,560 --> 00:14:57,310
we put in<font color="#CCCCCC"> - so like</font><font color="#E5E5E5"> I said it's a</font>

357
00:14:53,200 --> 00:14:59,050
stateful<font color="#E5E5E5"> DNS server so if you have more</font>

358
00:14:57,310 --> 00:15:00,910
<font color="#E5E5E5">than one person using it or if you're</font>

359
00:14:59,050 --> 00:15:03,130
doing<font color="#E5E5E5"> more</font><font color="#CCCCCC"> than one attack at</font><font color="#E5E5E5"> once you</font>

360
00:15:00,910 --> 00:15:05,050
could clobber each<font color="#E5E5E5"> other state the UID</font>

361
00:15:03,130 --> 00:15:07,600
is<font color="#E5E5E5"> there to prevent that so you pick</font>

362
00:15:05,050 --> 00:15:09,550
something<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> unique</font><font color="#CCCCCC"> it can be</font>

363
00:15:07,600 --> 00:15:11,380
anything that is<font color="#E5E5E5"> both valid</font><font color="#CCCCCC"> for this</font>

364
00:15:09,550 --> 00:15:14,819
part<font color="#E5E5E5"> of a hostname and doesn't contain</font><font color="#CCCCCC"> a</font>

365
00:15:11,380 --> 00:15:17,470
- because the -<font color="#CCCCCC"> is the key separator</font>

366
00:15:14,820 --> 00:15:19,000
next up this is<font color="#CCCCCC"> the first IP address</font>

367
00:15:17,470 --> 00:15:21,730
<font color="#CCCCCC">that'll</font><font color="#E5E5E5"> be returned when</font><font color="#CCCCCC"> resolving this</font>

368
00:15:19,000 --> 00:15:24,690
name<font color="#E5E5E5"> in this case</font><font color="#CCCCCC"> it's just one two</font>

369
00:15:21,730 --> 00:15:28,050
<font color="#CCCCCC">three four note the</font><font color="#E5E5E5"> exes</font>

370
00:15:24,690 --> 00:15:32,450
that's because as you might know dots

371
00:15:28,050 --> 00:15:35,250
have<font color="#CCCCCC"> cementec purpose</font><font color="#E5E5E5"> in host names and</font>

372
00:15:32,450 --> 00:15:37,500
the implementation got really really

373
00:15:35,250 --> 00:15:40,890
hairy otherwise<font color="#CCCCCC"> so</font><font color="#E5E5E5"> we just decided</font><font color="#CCCCCC"> to</font>

374
00:15:37,500 --> 00:15:44,610
<font color="#CCCCCC">have a separator character</font><font color="#E5E5E5"> that did not</font>

375
00:15:40,890 --> 00:15:47,040
have meaning<font color="#CCCCCC"> in the host name so in</font>

376
00:15:44,610 --> 00:15:49,860
terms of what this IP should be<font color="#E5E5E5"> by</font>

377
00:15:47,040 --> 00:15:52,620
<font color="#CCCCCC">default</font><font color="#E5E5E5"> we usually set it to be our</font>

378
00:15:49,860 --> 00:15:54,420
<font color="#E5E5E5">JavaScript payload server</font><font color="#CCCCCC"> that serves up</font>

379
00:15:52,620 --> 00:15:56,400
<font color="#CCCCCC">the JavaScript</font><font color="#E5E5E5"> then like tries</font><font color="#CCCCCC"> to do the</font>

380
00:15:54,420 --> 00:15:59,610
attack<font color="#E5E5E5"> but if you got your own server</font>

381
00:15:56,400 --> 00:16:02,670
<font color="#CCCCCC">put your own IP</font><font color="#E5E5E5"> address</font><font color="#CCCCCC"> in next up the</font>

382
00:15:59,610 --> 00:16:04,710
second IP<font color="#E5E5E5"> this is our target</font><font color="#CCCCCC"> here I just</font>

383
00:16:02,670 --> 00:16:05,370
<font color="#CCCCCC">have a very</font><font color="#E5E5E5"> vanilla example of five six</font>

384
00:16:04,710 --> 00:16:06,900
<font color="#E5E5E5">seven eight</font>

385
00:16:05,370 --> 00:16:08,990
in reality you might be hitting

386
00:16:06,900 --> 00:16:10,340
<font color="#E5E5E5">localhost you might be hitting</font>

387
00:16:08,990 --> 00:16:12,300
[Music]

388
00:16:10,340 --> 00:16:14,070
<font color="#E5E5E5">192.168.0.1 might be a very interesting</font>

389
00:16:12,300 --> 00:16:17,329
place to<font color="#E5E5E5"> go if you wanted to own a</font>

390
00:16:14,070 --> 00:16:19,800
router<font color="#CCCCCC"> it can be whatever</font><font color="#E5E5E5"> you want</font>

391
00:16:17,330 --> 00:16:22,140
finally the decomp is for dynamic

392
00:16:19,800 --> 00:16:23,430
configuration<font color="#CCCCCC"> as I said</font><font color="#E5E5E5"> that all of this</font>

393
00:16:22,140 --> 00:16:26,040
garbage is a dynamic configuration

394
00:16:23,430 --> 00:16:28,560
dictionary we originally were going to

395
00:16:26,040 --> 00:16:30,660
have a<font color="#E5E5E5"> static mode but it didn't really</font>

396
00:16:28,560 --> 00:16:35,189
seem necessary<font color="#E5E5E5"> so far we</font><font color="#CCCCCC"> might add it</font>

397
00:16:30,660 --> 00:16:36,959
later<font color="#E5E5E5"> if</font><font color="#CCCCCC"> we find a reason to so having</font>

398
00:16:35,190 --> 00:16:39,390
just described<font color="#E5E5E5"> this like garbage</font><font color="#CCCCCC"> host</font>

399
00:16:36,960 --> 00:16:41,430
<font color="#CCCCCC">name format I'm gonna have Alan show how</font>

400
00:16:39,390 --> 00:16:44,610
it actually works<font color="#E5E5E5"> okay</font>

401
00:16:41,430 --> 00:16:47,400
so we're gonna walk<font color="#CCCCCC"> through a couple</font>

402
00:16:44,610 --> 00:16:49,220
examples<font color="#E5E5E5"> in the terminal just</font>

403
00:16:47,400 --> 00:16:53,060
<font color="#E5E5E5">interacting with this strange server</font>

404
00:16:49,220 --> 00:16:56,420
<font color="#E5E5E5">which will hopefully help understanding</font>

405
00:16:53,060 --> 00:16:59,300
because it's<font color="#E5E5E5"> definitely very complicated</font>

406
00:16:56,420 --> 00:17:03,270
<font color="#CCCCCC">first orders</font><font color="#E5E5E5"> let's just look</font><font color="#CCCCCC"> at the</font>

407
00:16:59,300 --> 00:17:05,959
delegation<font color="#E5E5E5"> for our name and by the way</font>

408
00:17:03,270 --> 00:17:09,270
you can follow<font color="#CCCCCC"> along</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> computer's</font>

409
00:17:05,959 --> 00:17:10,949
rebind my zone<font color="#CCCCCC"> is</font><font color="#E5E5E5"> actually a host name</font>

410
00:17:09,270 --> 00:17:13,889
that we own<font color="#E5E5E5"> and it's running the server</font>

411
00:17:10,949 --> 00:17:15,630
right now<font color="#E5E5E5"> I'm in a separate context from</font>

412
00:17:13,890 --> 00:17:19,860
<font color="#E5E5E5">you because there's a stateful server so</font>

413
00:17:15,630 --> 00:17:21,930
<font color="#E5E5E5">you can't mess up my demo</font><font color="#CCCCCC"> but you can</font>

414
00:17:19,859 --> 00:17:23,958
mess up each other so feel free<font color="#E5E5E5"> to do</font>

415
00:17:21,930 --> 00:17:23,959
that

416
00:17:25,970 --> 00:17:35,820
so<font color="#CCCCCC"> Diggy</font><font color="#E5E5E5"> here is returning the recursive</font>

417
00:17:32,100 --> 00:17:37,919
resolution for rebind my<font color="#E5E5E5"> dot zone which</font>

418
00:17:35,820 --> 00:17:38,710
of course comes<font color="#E5E5E5"> through the authority to</font>

419
00:17:37,920 --> 00:17:44,440
name servers

420
00:17:38,710 --> 00:17:46,240
or that for<font color="#E5E5E5"> you know dot and</font><font color="#CCCCCC"> an zone and</font>

421
00:17:44,440 --> 00:17:48,549
you'll note that<font color="#E5E5E5"> the a record that we</font>

422
00:17:46,240 --> 00:17:51,010
got back is one eight two<font color="#CCCCCC"> one seven one</font>

423
00:17:48,549 --> 00:17:53,830
seven<font color="#E5E5E5"> one four four and that we also got</font>

424
00:17:51,010 --> 00:17:55,960
<font color="#E5E5E5">that a record back from one eight</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> one</font>

425
00:17:53,830 --> 00:17:57,549
<font color="#E5E5E5">seven dealt one seven</font><font color="#CCCCCC"> one four four</font><font color="#E5E5E5"> and</font>

426
00:17:55,960 --> 00:17:58,809
this<font color="#CCCCCC"> is really important because that's</font>

427
00:17:57,549 --> 00:18:01,149
<font color="#E5E5E5">what Danny was</font><font color="#CCCCCC"> talking about before</font>

428
00:17:58,809 --> 00:18:04,059
where we have an integrated HTTP and DNS

429
00:18:01,149 --> 00:18:06,459
server so<font color="#CCCCCC"> that IP address is the</font>

430
00:18:04,059 --> 00:18:09,129
authoritative name<font color="#E5E5E5"> server</font><font color="#CCCCCC"> for our name</font>

431
00:18:06,460 --> 00:18:12,659
<font color="#E5E5E5">rebind</font><font color="#CCCCCC"> Minot zone and it is</font><font color="#E5E5E5"> also where</font>

432
00:18:09,130 --> 00:18:18,880
the<font color="#E5E5E5"> HTTP server for</font><font color="#CCCCCC"> that name lives</font>

433
00:18:12,659 --> 00:18:22,390
which<font color="#E5E5E5"> is like</font><font color="#CCCCCC"> very unusual so let's look</font>

434
00:18:18,880 --> 00:18:27,490
<font color="#E5E5E5">at a rebind</font><font color="#CCCCCC"> hostname so I can</font><font color="#E5E5E5"> just use a</font>

435
00:18:22,390 --> 00:18:32,490
UID one<font color="#E5E5E5"> abc123 and I'll set IP</font><font color="#CCCCCC"> one to be</font>

436
00:18:27,490 --> 00:18:36,760
one two<font color="#CCCCCC"> three four five six seven eight</font>

437
00:18:32,490 --> 00:18:42,250
I'll set IP<font color="#E5E5E5"> two to be one two</font><font color="#CCCCCC"> seven zero</font>

438
00:18:36,760 --> 00:18:46,779
zero<font color="#E5E5E5"> one and I'll have</font><font color="#CCCCCC"> configure</font><font color="#E5E5E5"> it to</font>

439
00:18:42,250 --> 00:18:49,330
use<font color="#E5E5E5"> three hits so for the first three</font>

440
00:18:46,779 --> 00:18:51,340
hits<font color="#E5E5E5"> we'll get back one two three four</font>

441
00:18:49,330 --> 00:18:53,678
five six seven<font color="#E5E5E5"> eight and then after that</font>

442
00:18:51,340 --> 00:19:00,730
this name will resolve to being one two

443
00:18:53,679 --> 00:19:03,640
<font color="#CCCCCC">seven zero zero</font><font color="#E5E5E5"> one so we got back on a</font>

444
00:19:00,730 --> 00:19:06,399
record<font color="#E5E5E5"> of as expected one two three four</font>

445
00:19:03,640 --> 00:19:09,029
five six<font color="#E5E5E5"> seven eight the TTL is zero</font>

446
00:19:06,399 --> 00:19:12,100
seconds because<font color="#CCCCCC"> we want</font><font color="#E5E5E5"> to encourage the</font>

447
00:19:09,029 --> 00:19:16,120
caches<font color="#E5E5E5"> to not keep this in cache very</font>

448
00:19:12,100 --> 00:19:17,889
<font color="#E5E5E5">long and as expected for the second</font>

449
00:19:16,120 --> 00:19:20,320
query and the third<font color="#E5E5E5"> query you got we</font>

450
00:19:17,890 --> 00:19:23,590
continue to get back<font color="#E5E5E5"> one two three four</font>

451
00:19:20,320 --> 00:19:24,908
five six seven<font color="#E5E5E5"> eight and now for this</font>

452
00:19:23,590 --> 00:19:29,230
fourth query we should expect<font color="#E5E5E5"> to get</font>

453
00:19:24,909 --> 00:19:31,539
back one two seven<font color="#E5E5E5"> zero zero one so now</font>

454
00:19:29,230 --> 00:19:34,649
the name is returning<font color="#E5E5E5"> localhost which</font>

455
00:19:31,539 --> 00:19:38,408
means that the rebind has been performed

456
00:19:34,649 --> 00:19:43,408
so on this server<font color="#E5E5E5"> here</font><font color="#CCCCCC"> I'm already</font>

457
00:19:38,409 --> 00:19:48,399
running a little demo HTTP server on

458
00:19:43,409 --> 00:19:50,610
localhost<font color="#CCCCCC"> for</font><font color="#E5E5E5"> 137 it just returns this</font>

459
00:19:48,399 --> 00:19:53,800
<font color="#E5E5E5">HTML it's a</font>

460
00:19:50,610 --> 00:19:55,409
you know<font color="#E5E5E5"> DNS rebinding demo server hello</font>

461
00:19:53,800 --> 00:19:59,200
world

462
00:19:55,410 --> 00:20:02,320
so<font color="#E5E5E5"> I'm going to demo the HTTP the</font>

463
00:19:59,200 --> 00:20:05,770
integrated HTTP<font color="#E5E5E5"> state feature where we</font>

464
00:20:02,320 --> 00:20:07,149
integrate the HTTP requests that<font color="#CCCCCC"> are</font>

465
00:20:05,770 --> 00:20:09,430
getting<font color="#E5E5E5"> made on our server with the</font>

466
00:20:07,150 --> 00:20:12,910
rebinding<font color="#E5E5E5"> state so that</font><font color="#CCCCCC"> we can optimize</font>

467
00:20:09,430 --> 00:20:18,970
<font color="#CCCCCC">it so for example we might</font><font color="#E5E5E5"> do something</font>

468
00:20:12,910 --> 00:20:21,280
<font color="#CCCCCC">like ABC</font><font color="#E5E5E5"> 4 5</font><font color="#CCCCCC"> 6 this time I'm just going</font>

469
00:20:18,970 --> 00:20:24,070
<font color="#CCCCCC">to exclude</font><font color="#E5E5E5"> IP 1 if you don't put in the</font>

470
00:20:21,280 --> 00:20:26,820
first IP address into<font color="#CCCCCC"> the</font><font color="#E5E5E5"> configuration</font>

471
00:20:24,070 --> 00:20:29,050
<font color="#E5E5E5">then it's assumed to be the capture or</font>

472
00:20:26,820 --> 00:20:30,700
<font color="#CCCCCC">catch-all hostname that Jenny was</font>

473
00:20:29,050 --> 00:20:39,460
talking about<font color="#CCCCCC"> before which delivers the</font>

474
00:20:30,700 --> 00:20:41,200
payload<font color="#E5E5E5"> JavaScript payloads so</font><font color="#CCCCCC"> 27001</font><font color="#E5E5E5"> and</font>

475
00:20:39,460 --> 00:20:44,620
this time instead of<font color="#E5E5E5"> a number of hits</font>

476
00:20:41,200 --> 00:20:52,690
<font color="#CCCCCC">I'll put in HTTP state and that's just a</font>

477
00:20:44,620 --> 00:20:57,850
boolean so it's 1 so this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> returning</font>

478
00:20:52,690 --> 00:21:00,630
<font color="#E5E5E5">the payload server IP address I'm in a</font>

479
00:20:57,850 --> 00:21:03,810
separate instance<font color="#E5E5E5"> from you so my payload</font>

480
00:21:00,630 --> 00:21:05,830
<font color="#CCCCCC">server is on</font><font color="#E5E5E5"> a private address space but</font>

481
00:21:03,810 --> 00:21:10,480
you will<font color="#E5E5E5"> have a slightly</font><font color="#CCCCCC"> different</font>

482
00:21:05,830 --> 00:21:11,590
answer<font color="#CCCCCC"> if you run this query but as we</font>

483
00:21:10,480 --> 00:21:13,860
expected we're getting back<font color="#E5E5E5"> to payload</font>

484
00:21:11,590 --> 00:21:13,860
server

485
00:21:16,830 --> 00:21:35,279
<font color="#E5E5E5">oh it's just frozen someone might have</font>

486
00:21:32,130 --> 00:21:36,600
screwed<font color="#E5E5E5"> up my Wi-Fi I also have all</font>

487
00:21:35,279 --> 00:21:38,340
these<font color="#E5E5E5"> demos recorded but I don't really</font>

488
00:21:36,600 --> 00:21:41,029
<font color="#E5E5E5">believe in recorded demos so hopefully</font>

489
00:21:38,340 --> 00:21:41,029
we can<font color="#CCCCCC"> get this working</font>

490
00:22:00,020 --> 00:22:10,220
okay well we can<font color="#CCCCCC"> just use the recorded</font>

491
00:22:02,870 --> 00:22:19,399
demo so we<font color="#CCCCCC"> already went</font><font color="#E5E5E5"> through all of</font>

492
00:22:10,220 --> 00:22:20,900
this<font color="#E5E5E5"> and screen so this was my name that</font>

493
00:22:19,400 --> 00:22:22,220
I<font color="#CCCCCC"> had constructed which is the same as</font>

494
00:22:20,900 --> 00:22:25,760
the one that<font color="#E5E5E5"> I</font><font color="#CCCCCC"> just had an eternal</font>

495
00:22:22,220 --> 00:22:28,850
before it messed up<font color="#E5E5E5"> so you can see that</font>

496
00:22:25,760 --> 00:22:30,980
I have an implicit<font color="#E5E5E5"> IP 1 IP 2 of</font>

497
00:22:28,850 --> 00:22:39,110
<font color="#E5E5E5">localhost and an HTTP state is a boolean</font>

498
00:22:30,980 --> 00:22:42,740
that's set<font color="#E5E5E5"> to 1 so I ran that</font><font color="#CCCCCC"> dig</font>

499
00:22:39,110 --> 00:22:45,199
command<font color="#E5E5E5"> and I got back</font><font color="#CCCCCC"> the capture IP</font>

500
00:22:42,740 --> 00:22:47,450
address<font color="#E5E5E5"> as expected the this is the</font>

501
00:22:45,200 --> 00:22:49,850
public capture IP address unlike the one

502
00:22:47,450 --> 00:22:50,990
that I had before<font color="#E5E5E5"> in my demo</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> of</font>

503
00:22:49,850 --> 00:22:52,879
course if I keep resolving this<font color="#E5E5E5"> name</font>

504
00:22:50,990 --> 00:22:57,160
I'll keep getting<font color="#CCCCCC"> back that IP address</font>

505
00:22:52,880 --> 00:23:00,770
<font color="#CCCCCC">the payload a server now if I curl it on</font>

506
00:22:57,160 --> 00:23:02,059
any port<font color="#E5E5E5"> I'll get back to</font><font color="#CCCCCC"> JavaScript</font>

507
00:23:00,770 --> 00:23:05,650
payload which we'll talk<font color="#CCCCCC"> about in a bit</font>

508
00:23:02,059 --> 00:23:05,649
what this<font color="#CCCCCC"> dresser</font><font color="#E5E5E5"> payload actually does</font>

509
00:23:06,770 --> 00:23:12,980
but now if<font color="#CCCCCC"> we dig that</font><font color="#E5E5E5"> name again so now</font>

510
00:23:10,820 --> 00:23:14,840
that we've<font color="#E5E5E5"> downloaded the HTTP payload</font>

511
00:23:12,980 --> 00:23:17,960
once now every time<font color="#E5E5E5"> that we resolve that</font>

512
00:23:14,840 --> 00:23:20,740
<font color="#E5E5E5">name</font><font color="#CCCCCC"> will get back localhost</font><font color="#E5E5E5"> and I was</font>

513
00:23:17,960 --> 00:23:27,580
<font color="#E5E5E5">running this on my personal website</font>

514
00:23:20,740 --> 00:23:27,580
<font color="#CCCCCC">server so when I curled that name again</font>

515
00:23:27,850 --> 00:23:32,809
<font color="#CCCCCC">now that the rebind had occurred it was</font>

516
00:23:30,280 --> 00:23:37,670
returning<font color="#E5E5E5"> localhost</font><font color="#CCCCCC"> so it went</font><font color="#E5E5E5"> to my</font>

517
00:23:32,809 --> 00:23:41,149
local<font color="#CCCCCC"> webserver and</font><font color="#E5E5E5"> served up my awesome</font>

518
00:23:37,670 --> 00:23:43,580
home page so I'm going<font color="#CCCCCC"> to head</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> back</font>

519
00:23:41,150 --> 00:23:45,860
<font color="#E5E5E5">to</font><font color="#CCCCCC"> Dani who's going to</font><font color="#E5E5E5"> explain</font><font color="#CCCCCC"> how we're</font>

520
00:23:43,580 --> 00:23:52,730
going to<font color="#E5E5E5"> use these constructs</font><font color="#CCCCCC"> to build a</font>

521
00:23:45,860 --> 00:23:56,178
port scanner<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> cool</font>

522
00:23:52,730 --> 00:23:58,490
we're back<font color="#E5E5E5"> so</font><font color="#CCCCCC"> Allen</font><font color="#E5E5E5"> just demonstrated</font>

523
00:23:56,179 --> 00:23:59,990
how<font color="#CCCCCC"> to sort of hit a server once</font><font color="#E5E5E5"> and</font>

524
00:23:58,490 --> 00:24:03,260
some of you might see where this<font color="#CCCCCC"> is</font>

525
00:23:59,990 --> 00:24:05,510
<font color="#E5E5E5">going in terms of a port scan but I'm</font>

526
00:24:03,260 --> 00:24:08,870
going to run through<font color="#CCCCCC"> it real quick</font><font color="#E5E5E5"> what</font>

527
00:24:05,510 --> 00:24:10,669
we do to do a port scan is<font color="#E5E5E5"> so to scan</font>

528
00:24:08,870 --> 00:24:12,750
<font color="#E5E5E5">each port on a target you need a</font>

529
00:24:10,669 --> 00:24:15,510
distinct host<font color="#E5E5E5"> because of that you</font>

530
00:24:12,750 --> 00:24:19,320
like I<font color="#CCCCCC"> said that issue where a</font><font color="#E5E5E5"> origin is</font>

531
00:24:15,510 --> 00:24:23,129
defined by the<font color="#E5E5E5"> hostname protocol pork</font>

532
00:24:19,320 --> 00:24:24,600
<font color="#CCCCCC">tubule and what that</font><font color="#E5E5E5"> means is that you</font>

533
00:24:23,130 --> 00:24:27,060
<font color="#CCCCCC">are going to have to have a separate</font>

534
00:24:24,600 --> 00:24:30,800
iframe for every port<font color="#E5E5E5"> on every</font><font color="#CCCCCC"> origin</font>

535
00:24:27,060 --> 00:24:35,550
<font color="#CCCCCC">you're scanning what</font><font color="#E5E5E5"> this looks like is</font>

536
00:24:30,800 --> 00:24:38,970
this<font color="#E5E5E5"> basically we connect</font><font color="#CCCCCC"> onion oh</font><font color="#E5E5E5"> poor</font>

537
00:24:35,550 --> 00:24:40,980
<font color="#CCCCCC">532 you know skip hitting back to</font>

538
00:24:38,970 --> 00:24:43,740
localhost we use HTTP<font color="#E5E5E5"> state because it's</font>

539
00:24:40,980 --> 00:24:45,810
a lot faster<font color="#CCCCCC"> and then we've</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> stopped</font>

540
00:24:43,740 --> 00:24:49,230
us clobbering ourselves we<font color="#CCCCCC"> just tack the</font>

541
00:24:45,810 --> 00:24:51,659
port number<font color="#CCCCCC"> onto the end of our UID</font><font color="#E5E5E5"> but</font>

542
00:24:49,230 --> 00:24:54,240
basically<font color="#E5E5E5"> what happens then is that</font><font color="#CCCCCC"> the</font>

543
00:24:51,660 --> 00:24:56,160
<font color="#CCCCCC">first time you load the page the payload</font>

544
00:24:54,240 --> 00:24:57,990
<font color="#CCCCCC">JavaScript gets loaded and</font><font color="#E5E5E5"> then because</font>

545
00:24:56,160 --> 00:25:00,270
we're using HTTP<font color="#CCCCCC"> state the DNS server</font>

546
00:24:57,990 --> 00:25:02,220
switches over<font color="#E5E5E5"> to local house and that</font>

547
00:25:00,270 --> 00:25:04,500
<font color="#E5E5E5">JavaScript basically just requests</font>

548
00:25:02,220 --> 00:25:06,710
itself over and<font color="#E5E5E5"> over</font><font color="#CCCCCC"> again until</font><font color="#E5E5E5"> it</font>

549
00:25:04,500 --> 00:25:08,970
stops seeing<font color="#E5E5E5"> sentinel value and</font>

550
00:25:06,710 --> 00:25:10,680
hopefully if the rebind works that'll be

551
00:25:08,970 --> 00:25:12,570
on<font color="#E5E5E5"> the next request but in practice</font>

552
00:25:10,680 --> 00:25:15,420
caches exist<font color="#E5E5E5"> and it'll probably take a</font>

553
00:25:12,570 --> 00:25:17,700
<font color="#CCCCCC">couple but it just requests itself until</font>

554
00:25:15,420 --> 00:25:20,960
<font color="#CCCCCC">it stops seeing the signal</font><font color="#E5E5E5"> at which</font>

555
00:25:17,700 --> 00:25:24,060
<font color="#E5E5E5">point it knows that the</font><font color="#CCCCCC"> dns rebind</font>

556
00:25:20,960 --> 00:25:28,320
<font color="#CCCCCC">is what's on the</font><font color="#E5E5E5"> pork</font><font color="#CCCCCC"> on the target</font><font color="#E5E5E5"> host</font>

557
00:25:24,060 --> 00:25:29,879
<font color="#E5E5E5">and once that happens</font><font color="#CCCCCC"> it a child</font><font color="#E5E5E5"> iframe</font>

558
00:25:28,320 --> 00:25:31,740
that<font color="#CCCCCC"> was running</font><font color="#E5E5E5"> our JavaScript reports</font>

559
00:25:29,880 --> 00:25:35,130
back up to the parent says like either

560
00:25:31,740 --> 00:25:39,810
<font color="#E5E5E5">hey connection closed or hey I found a</font>

561
00:25:35,130 --> 00:25:41,460
web server so that's all well<font color="#CCCCCC"> and good</font>

562
00:25:39,810 --> 00:25:43,080
<font color="#E5E5E5">but I'm sure you want to see it actually</font>

563
00:25:41,460 --> 00:25:47,760
<font color="#E5E5E5">happen</font><font color="#CCCCCC"> so I'm going to hand it back to</font>

564
00:25:43,080 --> 00:25:51,560
<font color="#E5E5E5">Alan</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so I hope</font><font color="#CCCCCC"> that my</font><font color="#E5E5E5"> internet has</font>

565
00:25:47,760 --> 00:25:54,900
been<font color="#CCCCCC"> fixed and I can run the demo live</font>

566
00:25:51,560 --> 00:25:58,169
<font color="#CCCCCC">so what we've got here</font><font color="#E5E5E5"> is just a page</font>

567
00:25:54,900 --> 00:26:01,020
that's<font color="#E5E5E5"> on Reba in my</font><font color="#CCCCCC"> dot zone you can go</font>

568
00:25:58,170 --> 00:26:02,400
and load this page yourself<font color="#E5E5E5"> at the</font>

569
00:26:01,020 --> 00:26:05,550
<font color="#E5E5E5">bottom here there's an iframe that's</font>

570
00:26:02,400 --> 00:26:07,740
showing the<font color="#E5E5E5"> server</font><font color="#CCCCCC"> request log so as we</font>

571
00:26:05,550 --> 00:26:09,060
make TNS and<font color="#E5E5E5"> HTTP requests for the</font>

572
00:26:07,740 --> 00:26:12,900
purposes<font color="#E5E5E5"> of this demo they show up in</font>

573
00:26:09,060 --> 00:26:15,679
<font color="#E5E5E5">the log so the first thing we're going</font>

574
00:26:12,900 --> 00:26:18,960
to do is open<font color="#E5E5E5"> an iframe on port 1 3 3 6</font>

575
00:26:15,680 --> 00:26:20,820
so this red border denotes the<font color="#E5E5E5"> iframe</font>

576
00:26:18,960 --> 00:26:24,060
that<font color="#E5E5E5"> we just opened and you'll see that</font>

577
00:26:20,820 --> 00:26:25,800
we<font color="#E5E5E5"> have a rebind name associated</font><font color="#CCCCCC"> here so</font>

578
00:26:24,060 --> 00:26:26,399
it's<font color="#CCCCCC"> similar to the ones that</font><font color="#E5E5E5"> Danny was</font>

579
00:26:25,800 --> 00:26:28,409
<font color="#CCCCCC">talking</font><font color="#E5E5E5"> about</font>

580
00:26:26,400 --> 00:26:30,240
now where there's we're using the

581
00:26:28,410 --> 00:26:31,950
payload server IP address as the first

582
00:26:30,240 --> 00:26:33,150
IP address to use and the target is

583
00:26:31,950 --> 00:26:35,790
localhost because that's where we're

584
00:26:33,150 --> 00:26:38,010
standing<font color="#CCCCCC"> and</font><font color="#E5E5E5"> of course where we've</font>

585
00:26:35,790 --> 00:26:39,360
opened<font color="#E5E5E5"> this on</font><font color="#CCCCCC"> four one three six in the</font>

586
00:26:38,010 --> 00:26:40,710
request log<font color="#CCCCCC"> you'll see that we actually</font>

587
00:26:39,360 --> 00:26:43,979
<font color="#E5E5E5">got two DNS requests</font>

588
00:26:40,710 --> 00:26:45,540
that's because browsers are weird<font color="#E5E5E5"> and</font>

589
00:26:43,980 --> 00:26:49,890
<font color="#E5E5E5">sometimes they make more DNS requests</font>

590
00:26:45,540 --> 00:26:51,060
than<font color="#E5E5E5"> you need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> and for both times we</font>

591
00:26:49,890 --> 00:26:52,440
<font color="#E5E5E5">hand it back the payload server IP</font>

592
00:26:51,060 --> 00:26:54,450
address and<font color="#E5E5E5"> then finally we got a</font>

593
00:26:52,440 --> 00:26:57,030
request on the<font color="#CCCCCC"> payload server</font><font color="#E5E5E5"> for one</font>

594
00:26:54,450 --> 00:26:58,410
<font color="#E5E5E5">three three</font><font color="#CCCCCC"> six</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> served</font><font color="#E5E5E5"> up the</font>

595
00:26:57,030 --> 00:27:01,560
<font color="#E5E5E5">payload</font><font color="#CCCCCC"> JavaScript which is running</font><font color="#E5E5E5"> in</font>

596
00:26:58,410 --> 00:27:04,040
<font color="#CCCCCC">this iframe so now we can</font><font color="#E5E5E5"> have the</font>

597
00:27:01,560 --> 00:27:06,450
payload in the iframe make<font color="#CCCCCC"> requests</font><font color="#E5E5E5"> to</font>

598
00:27:04,040 --> 00:27:08,280
<font color="#E5E5E5">itself</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> hopefully if the rebind has</font>

599
00:27:06,450 --> 00:27:13,880
been performed<font color="#E5E5E5"> this will actually making</font>

600
00:27:08,280 --> 00:27:16,410
<font color="#CCCCCC">request to</font><font color="#E5E5E5"> local</font><font color="#CCCCCC"> OS 4 1 3 3 6 so it did</font>

601
00:27:13,880 --> 00:27:18,690
you'll see that the DNS requests came

602
00:27:16,410 --> 00:27:21,960
through and we returned one two<font color="#E5E5E5"> seven</font>

603
00:27:18,690 --> 00:27:26,100
zero<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> one and when this</font><font color="#CCCCCC"> ajax request</font>

604
00:27:21,960 --> 00:27:28,500
<font color="#E5E5E5">was attempted it had a network error</font>

605
00:27:26,100 --> 00:27:33,209
because<font color="#CCCCCC"> i'm not actually listening on</font>

606
00:27:28,500 --> 00:27:36,600
port 136 so the port scan result was

607
00:27:33,210 --> 00:27:38,400
that<font color="#CCCCCC"> this port is closed so let's do</font>

608
00:27:36,600 --> 00:27:41,939
this<font color="#CCCCCC"> for for</font><font color="#E5E5E5"> 1</font><font color="#CCCCCC"> through 37 where I do</font>

609
00:27:38,400 --> 00:27:44,880
<font color="#E5E5E5">have a server</font><font color="#CCCCCC"> this is</font><font color="#E5E5E5"> exactly the same</font>

610
00:27:41,940 --> 00:27:48,390
<font color="#E5E5E5">their name is slightly different</font><font color="#CCCCCC"> so it</font>

611
00:27:44,880 --> 00:27:50,670
has a different state<font color="#CCCCCC"> so you'll see that</font>

612
00:27:48,390 --> 00:27:55,440
<font color="#E5E5E5">we</font><font color="#CCCCCC"> have the port number</font><font color="#E5E5E5"> 137 in the host</font>

613
00:27:50,670 --> 00:27:57,630
<font color="#E5E5E5">name</font><font color="#CCCCCC"> and of course we got DNS requests</font>

614
00:27:55,440 --> 00:27:59,790
came in and we returned the payload IP

615
00:27:57,630 --> 00:28:00,440
address and exactly the<font color="#E5E5E5"> same as last</font>

616
00:27:59,790 --> 00:28:03,050
<font color="#E5E5E5">time</font>

617
00:28:00,440 --> 00:28:04,860
so now we'll have<font color="#CCCCCC"> it make a request</font><font color="#E5E5E5"> and</font>

618
00:28:03,050 --> 00:28:07,470
hopefully if the rebind has been

619
00:28:04,860 --> 00:28:10,770
performed and it's not in cache<font color="#E5E5E5"> then we</font>

620
00:28:07,470 --> 00:28:13,650
should get back the HTTP banner that was

621
00:28:10,770 --> 00:28:15,270
<font color="#E5E5E5">the server that I showed you</font><font color="#CCCCCC"> before so</font>

622
00:28:13,650 --> 00:28:17,340
it did it<font color="#CCCCCC"> worked</font>

623
00:28:15,270 --> 00:28:18,960
<font color="#CCCCCC">so the</font><font color="#E5E5E5"> port scan result was</font><font color="#CCCCCC"> that I do</font>

624
00:28:17,340 --> 00:28:19,830
have a server listening on low close<font color="#E5E5E5"> to</font>

625
00:28:18,960 --> 00:28:23,310
<font color="#CCCCCC">port 1 3 37</font>

626
00:28:19,830 --> 00:28:26,520
<font color="#CCCCCC">he</font><font color="#E5E5E5"> caught the headers which is showing</font>

627
00:28:23,310 --> 00:28:29,790
<font color="#CCCCCC">that it's a simple Python server and it</font>

628
00:28:26,520 --> 00:28:31,530
grabbed the body of the index page<font color="#E5E5E5"> which</font>

629
00:28:29,790 --> 00:28:33,770
just has the hello world<font color="#E5E5E5"> that I showed</font>

630
00:28:31,530 --> 00:28:33,770
<font color="#CCCCCC">you</font><font color="#E5E5E5"> before</font>

631
00:28:37,750 --> 00:28:44,570
so that naive implementation is good and

632
00:28:42,260 --> 00:28:46,429
it you know mostly solves our problems

633
00:28:44,570 --> 00:28:48,580
but<font color="#E5E5E5"> it's not quite efficient enough</font><font color="#CCCCCC"> to</font>

634
00:28:46,429 --> 00:28:50,809
scan<font color="#E5E5E5"> large port regions</font><font color="#CCCCCC"> even if we just</font>

635
00:28:48,580 --> 00:28:52,970
<font color="#CCCCCC">automate the button</font><font color="#E5E5E5"> clicking right like</font>

636
00:28:50,809 --> 00:28:53,990
I spent a lot<font color="#CCCCCC"> of time talking between</font>

637
00:28:52,970 --> 00:28:56,750
<font color="#E5E5E5">each time I pressed the button</font>

638
00:28:53,990 --> 00:28:59,510
<font color="#CCCCCC">but even we optimize that and automated</font>

639
00:28:56,750 --> 00:29:02,840
it it wouldn't<font color="#E5E5E5"> be enough to</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> be</font>

640
00:28:59,510 --> 00:29:05,450
useful<font color="#E5E5E5"> in practice so some</font><font color="#CCCCCC"> of the time</font>

641
00:29:02,840 --> 00:29:07,790
<font color="#CCCCCC">sinks here are</font><font color="#E5E5E5"> we're waiting for DNS</font>

642
00:29:05,450 --> 00:29:10,300
<font color="#E5E5E5">TTLs to expire</font><font color="#CCCCCC"> even though we set the</font>

643
00:29:07,790 --> 00:29:13,309
DNS TTL to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> zero seconds</font><font color="#E5E5E5"> there are</font>

644
00:29:10,300 --> 00:29:15,409
<font color="#E5E5E5">local DNS caches DNS cache in the</font>

645
00:29:13,309 --> 00:29:19,340
<font color="#E5E5E5">browser</font><font color="#CCCCCC"> a DNS cache at the recursive</font>

646
00:29:15,410 --> 00:29:22,220
server<font color="#E5E5E5"> that can all have this rebind</font>

647
00:29:19,340 --> 00:29:24,379
name in cache for extended periods<font color="#E5E5E5"> of</font>

648
00:29:22,220 --> 00:29:27,440
<font color="#CCCCCC">time so we have</font><font color="#E5E5E5"> to wait for those</font><font color="#CCCCCC"> to be</font>

649
00:29:24,380 --> 00:29:32,690
purged<font color="#CCCCCC"> before the authoritative is asked</font>

650
00:29:27,440 --> 00:29:35,420
<font color="#E5E5E5">again for one to use</font><font color="#CCCCCC"> establishing HTTP</font>

651
00:29:32,690 --> 00:29:37,960
connections<font color="#E5E5E5"> it can be quite slow</font><font color="#CCCCCC"> we have</font>

652
00:29:35,420 --> 00:29:42,140
to have a full TCP handshake<font color="#CCCCCC"> round trip</font>

653
00:29:37,960 --> 00:29:43,400
<font color="#CCCCCC">and if they have</font><font color="#E5E5E5"> to timeout</font><font color="#CCCCCC"> which can</font>

654
00:29:42,140 --> 00:29:47,090
<font color="#CCCCCC">happen quite often because if there's</font>

655
00:29:43,400 --> 00:29:50,350
firewalls or something that can take as

656
00:29:47,090 --> 00:29:56,320
long<font color="#E5E5E5"> as the browser's timeout window is</font>

657
00:29:50,350 --> 00:29:56,320
which can be up<font color="#CCCCCC"> to 15 30 60 seconds</font>

658
00:29:56,500 --> 00:30:02,120
finally<font color="#E5E5E5"> uh creating iframes for each</font>

659
00:30:00,260 --> 00:30:05,090
target port uses a lot of browser

660
00:30:02,120 --> 00:30:07,729
resources we might naively think oh well

661
00:30:05,090 --> 00:30:10,550
why<font color="#CCCCCC"> don't we</font><font color="#E5E5E5"> just make you know 65,000</font>

662
00:30:07,730 --> 00:30:12,530
iframes<font color="#CCCCCC"> at once each of them requires a</font>

663
00:30:10,550 --> 00:30:15,710
<font color="#CCCCCC">full Dom</font><font color="#E5E5E5"> a full JavaScript execution</font>

664
00:30:12,530 --> 00:30:16,940
environment<font color="#CCCCCC"> it's quite slow and so we</font>

665
00:30:15,710 --> 00:30:21,470
have to rate limit how many<font color="#CCCCCC"> of them we</font>

666
00:30:16,940 --> 00:30:24,950
make at any given time so<font color="#CCCCCC"> our simple</font>

667
00:30:21,470 --> 00:30:27,050
optimizations are that we create the

668
00:30:24,950 --> 00:30:31,010
iframes in parallel but<font color="#E5E5E5"> not too</font><font color="#CCCCCC"> often</font>

669
00:30:27,050 --> 00:30:33,800
<font color="#E5E5E5">don't not in too fast</font><font color="#CCCCCC"> and we spent some</font>

670
00:30:31,010 --> 00:30:36,800
time hand tuning this<font color="#E5E5E5"> but we think we</font>

671
00:30:33,800 --> 00:30:41,030
have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> good rate down for a variety of</font>

672
00:30:36,800 --> 00:30:43,129
<font color="#E5E5E5">systems</font><font color="#CCCCCC"> as mentioned before we set the</font>

673
00:30:41,030 --> 00:30:45,379
DNS TTL to<font color="#E5E5E5"> just be one second</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

674
00:30:43,130 --> 00:30:46,490
actually not in<font color="#CCCCCC"> compliance with RFC the</font>

675
00:30:45,380 --> 00:30:48,020
minimum<font color="#E5E5E5"> that you're supposed to use is</font>

676
00:30:46,490 --> 00:30:50,030
like<font color="#CCCCCC"> sixty Seconds</font>

677
00:30:48,020 --> 00:30:54,860
but we have yet to find a server that

678
00:30:50,030 --> 00:30:58,450
<font color="#CCCCCC">works</font><font color="#E5E5E5"> on it so we do it anyway</font><font color="#CCCCCC"> and then</font>

679
00:30:54,860 --> 00:31:01,070
we also force all the TCP connections<font color="#E5E5E5"> to</font>

680
00:30:58,450 --> 00:31:04,490
always be closed after<font color="#E5E5E5"> just</font><font color="#CCCCCC"> doing one</font>

681
00:31:01,070 --> 00:31:06,110
HTTP request<font color="#CCCCCC"> if we used keepalive or</font>

682
00:31:04,490 --> 00:31:08,990
<font color="#E5E5E5">something like that then</font><font color="#CCCCCC"> we might not</font>

683
00:31:06,110 --> 00:31:11,030
<font color="#CCCCCC">make</font><font color="#E5E5E5"> as many DNS requests and that would</font>

684
00:31:08,990 --> 00:31:13,490
be really<font color="#E5E5E5"> bad</font><font color="#CCCCCC"> for us to perform</font><font color="#E5E5E5"> the</font>

685
00:31:11,030 --> 00:31:15,860
rebind<font color="#E5E5E5"> efficiently</font>

686
00:31:13,490 --> 00:31:17,810
so we<font color="#E5E5E5"> always set connection close we</font>

687
00:31:15,860 --> 00:31:21,139
always force that there's no cache<font color="#E5E5E5"> so</font>

688
00:31:17,810 --> 00:31:25,090
this is just<font color="#E5E5E5"> to try</font><font color="#CCCCCC"> and get the browser</font>

689
00:31:21,140 --> 00:31:25,090
to make as many requests as possible

690
00:31:25,450 --> 00:31:31,940
we've talked about this<font color="#E5E5E5"> a few times but</font>

691
00:31:29,050 --> 00:31:35,200
the in the payload iframes only need to

692
00:31:31,940 --> 00:31:37,760
load the HTML once

693
00:31:35,200 --> 00:31:39,830
at first we were using<font color="#E5E5E5"> just a simple</font>

694
00:31:37,760 --> 00:31:41,780
counting method<font color="#E5E5E5"> or</font><font color="#CCCCCC"> flip flop method</font>

695
00:31:39,830 --> 00:31:43,820
<font color="#CCCCCC">time-based in order to form the</font>

696
00:31:41,780 --> 00:31:47,810
rebinding<font color="#E5E5E5"> but this was really</font><font color="#CCCCCC"> slow and</font>

697
00:31:43,820 --> 00:31:49,580
we<font color="#E5E5E5"> found that a lot</font><font color="#CCCCCC"> of browsers can make</font>

698
00:31:47,810 --> 00:31:51,800
<font color="#E5E5E5">lots of requests so notice that my</font>

699
00:31:49,580 --> 00:31:56,270
browser made<font color="#E5E5E5"> two requests each time I</font>

700
00:31:51,800 --> 00:31:58,909
loaded<font color="#E5E5E5"> a new iframe so it was kind</font><font color="#CCCCCC"> of</font>

701
00:31:56,270 --> 00:32:01,100
all over the<font color="#E5E5E5"> place about how much</font><font color="#CCCCCC"> time</font>

702
00:31:58,910 --> 00:32:03,320
to wait or how<font color="#CCCCCC"> many requests</font><font color="#E5E5E5"> to use to</font>

703
00:32:01,100 --> 00:32:06,770
perform<font color="#E5E5E5"> the rebind we found that a</font>

704
00:32:03,320 --> 00:32:09,200
really really clear signal is that the

705
00:32:06,770 --> 00:32:12,200
<font color="#CCCCCC">end-user browser has downloaded the HTML</font>

706
00:32:09,200 --> 00:32:15,890
page once and so we always<font color="#E5E5E5"> know that we</font>

707
00:32:12,200 --> 00:32:17,450
<font color="#E5E5E5">can rebind after that point</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> might</font>

708
00:32:15,890 --> 00:32:20,930
not work if there's like some<font color="#CCCCCC"> kind of</font>

709
00:32:17,450 --> 00:32:27,310
strange proxy in the middle but so<font color="#E5E5E5"> it</font>

710
00:32:20,930 --> 00:32:30,830
this<font color="#E5E5E5"> could require some fine-tuning next</font>

711
00:32:27,310 --> 00:32:32,440
<font color="#E5E5E5">we needed an iframe diapering to form a</font>

712
00:32:30,830 --> 00:32:35,240
handshake

713
00:32:32,440 --> 00:32:36,980
sometimes firewall rules and internal

714
00:32:35,240 --> 00:32:39,050
browser policies can prevent iframes

715
00:32:36,980 --> 00:32:42,440
from being loaded in the<font color="#CCCCCC"> first place so</font>

716
00:32:39,050 --> 00:32:44,389
our payload never gets<font color="#E5E5E5"> loaded at all</font><font color="#CCCCCC"> and</font>

717
00:32:42,440 --> 00:32:48,350
we<font color="#E5E5E5"> need to be able to tender detect in</font>

718
00:32:44,390 --> 00:32:50,060
this case so the simple<font color="#CCCCCC"> answer is that</font>

719
00:32:48,350 --> 00:32:53,120
we<font color="#CCCCCC"> just use a post message when the</font>

720
00:32:50,060 --> 00:32:55,340
payload is loaded at<font color="#E5E5E5"> the first time and</font>

721
00:32:53,120 --> 00:32:57,580
it<font color="#E5E5E5"> just says to</font><font color="#CCCCCC"> the parent hey I'm here</font>

722
00:32:55,340 --> 00:33:01,100
<font color="#E5E5E5">I'm going to start doing</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> port scan</font>

723
00:32:57,580 --> 00:33:01,760
and if there's a<font color="#E5E5E5"> timeout and we never</font>

724
00:33:01,100 --> 00:33:04,129
get<font color="#E5E5E5"> that message</font>

725
00:33:01,760 --> 00:33:08,300
that we know that the browser can't

726
00:33:04,130 --> 00:33:09,820
connect to<font color="#E5E5E5"> that port at all</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> doesn't</font>

727
00:33:08,300 --> 00:33:12,050
<font color="#CCCCCC">really tell us</font><font color="#E5E5E5"> anything</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> the victim</font>

728
00:33:09,820 --> 00:33:13,639
<font color="#CCCCCC">but is important</font><font color="#E5E5E5"> to keep track of</font><font color="#CCCCCC"> this</font>

729
00:33:12,050 --> 00:33:19,510
<font color="#E5E5E5">information that we weren't able to scan</font>

730
00:33:13,640 --> 00:33:24,290
the victim on this port finally a

731
00:33:19,510 --> 00:33:26,360
interesting<font color="#E5E5E5"> optimization is that stub</font>

732
00:33:24,290 --> 00:33:29,240
resolver<font color="#CCCCCC"> x' browsers and recursive x'</font>

733
00:33:26,360 --> 00:33:33,080
have surprisingly small cache sizes<font color="#CCCCCC"> the</font>

734
00:33:29,240 --> 00:33:36,680
default<font color="#E5E5E5"> Firefox DNS cache size is only</font>

735
00:33:33,080 --> 00:33:40,010
400<font color="#CCCCCC"> entries so if you generate</font><font color="#E5E5E5"> a lot of</font>

736
00:33:36,680 --> 00:33:42,320
spurious<font color="#E5E5E5"> DNS requests we can evict our</font>

737
00:33:40,010 --> 00:33:46,540
<font color="#E5E5E5">rebound today importer prematurely from</font>

738
00:33:42,320 --> 00:33:50,000
the cache<font color="#E5E5E5"> so this can just help with</font>

739
00:33:46,540 --> 00:33:51,379
<font color="#E5E5E5">forcing the queries to make them</font><font color="#CCCCCC"> where</font>

740
00:33:50,000 --> 00:33:53,360
their<font color="#CCCCCC"> way all the way</font><font color="#E5E5E5"> to the</font>

741
00:33:51,380 --> 00:33:59,150
authoritative<font color="#CCCCCC"> so this works really well</font>

742
00:33:53,360 --> 00:34:08,060
for Firefox so<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> going to give</font><font color="#E5E5E5"> you an</font>

743
00:33:59,150 --> 00:34:10,250
end-to-end demo<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so what's going</font><font color="#E5E5E5"> on</font>

744
00:34:08,060 --> 00:34:12,889
this<font color="#E5E5E5"> is happening kind of fast</font><font color="#CCCCCC"> uh where</font>

745
00:34:10,250 --> 00:34:16,639
I'm scanning vocal host ports<font color="#CCCCCC"> 1000</font>

746
00:34:12,889 --> 00:34:19,760
through<font color="#CCCCCC"> 1400 this blue bar as it's going</font>

747
00:34:16,639 --> 00:34:22,129
<font color="#E5E5E5">up</font><font color="#CCCCCC"> there's actually like a striped blue</font>

748
00:34:19,760 --> 00:34:23,629
bar at the very<font color="#CCCCCC"> tip of it that's showing</font>

749
00:34:22,129 --> 00:34:27,790
how<font color="#E5E5E5"> many iframes have been created and</font>

750
00:34:23,629 --> 00:34:29,750
then the<font color="#CCCCCC"> solid blue bar is showing the</font>

751
00:34:27,790 --> 00:34:33,159
proportion of the<font color="#E5E5E5"> ports that have</font>

752
00:34:29,750 --> 00:34:37,850
already been<font color="#E5E5E5"> scanned fully and responded</font>

753
00:34:33,159 --> 00:34:39,290
you'll see that the log<font color="#CCCCCC"> is showing that</font>

754
00:34:37,850 --> 00:34:42,889
<font color="#E5E5E5">all these ports are closed</font><font color="#CCCCCC"> it's kind</font><font color="#E5E5E5"> of</font>

755
00:34:39,290 --> 00:34:46,489
verbose but<font color="#CCCCCC"> we found that</font><font color="#E5E5E5"> port 1 through</font>

756
00:34:42,889 --> 00:34:50,629
<font color="#E5E5E5">7 was open and the tool</font><font color="#CCCCCC"> actually grabbed</font>

757
00:34:46,489 --> 00:34:54,399
the banner and the index<font color="#E5E5E5"> body that I</font>

758
00:34:50,629 --> 00:34:54,399
showed you<font color="#CCCCCC"> before it's just not in GUI</font>

759
00:34:55,989 --> 00:35:00,859
so I'm going<font color="#CCCCCC"> to hand it</font><font color="#E5E5E5"> back to Danny</font>

760
00:34:59,000 --> 00:35:03,460
who's going to talk<font color="#CCCCCC"> about future</font>

761
00:35:00,860 --> 00:35:03,460
<font color="#E5E5E5">research areas</font>

762
00:35:03,890 --> 00:35:09,950
<font color="#E5E5E5">all right</font><font color="#CCCCCC"> oh wait</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so we just talked</font>

763
00:35:07,910 --> 00:35:12,170
a lot about<font color="#E5E5E5"> our tool and I'm going</font><font color="#CCCCCC"> to</font>

764
00:35:09,950 --> 00:35:14,290
talk now<font color="#CCCCCC"> about how we want</font><font color="#E5E5E5"> to use it and</font>

765
00:35:12,170 --> 00:35:17,840
how we want to<font color="#CCCCCC"> see other people use</font><font color="#E5E5E5"> it</font>

766
00:35:14,290 --> 00:35:20,360
<font color="#CCCCCC">there's a lot</font><font color="#E5E5E5"> of bugs to</font><font color="#CCCCCC"> be found I</font>

767
00:35:17,840 --> 00:35:24,650
think<font color="#CCCCCC"> in localhost HTTP servers as well</font>

768
00:35:20,360 --> 00:35:26,510
<font color="#E5E5E5">as basically inland stuff so I've</font>

769
00:35:24,650 --> 00:35:28,670
alluded a few times<font color="#E5E5E5"> to like owning</font>

770
00:35:26,510 --> 00:35:30,620
routers and owning fridges<font color="#E5E5E5"> that's</font>

771
00:35:28,670 --> 00:35:32,960
because a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> things rely on being</font>

772
00:35:30,620 --> 00:35:35,779
behind<font color="#E5E5E5"> a firewall or</font><font color="#CCCCCC"> a NAT to keep them</font>

773
00:35:32,960 --> 00:35:38,840
safe<font color="#CCCCCC"> like a lot</font><font color="#E5E5E5"> of routers have plain</font>

774
00:35:35,780 --> 00:35:40,790
HTTP login<font color="#CCCCCC"> pages that</font><font color="#E5E5E5"> only get exposed</font>

775
00:35:38,840 --> 00:35:43,640
<font color="#E5E5E5">to the internal network but then have</font>

776
00:35:40,790 --> 00:35:47,600
<font color="#E5E5E5">crappy default passwords on them</font><font color="#CCCCCC"> same</font>

777
00:35:43,640 --> 00:35:49,759
with IOT<font color="#E5E5E5"> devices etc and there's also</font>

778
00:35:47,600 --> 00:35:52,100
I'm<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to hit tons more on this later</font>

779
00:35:49,760 --> 00:35:53,630
but even if something<font color="#E5E5E5"> isn't an HTTP</font>

780
00:35:52,100 --> 00:35:55,040
server<font color="#CCCCCC"> we think there are a few ways</font>

781
00:35:53,630 --> 00:35:56,630
that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can use this</font><font color="#E5E5E5"> technique to</font>

782
00:35:55,040 --> 00:35:59,180
<font color="#E5E5E5">possibly hit it even</font><font color="#CCCCCC"> if you couldn't</font>

783
00:35:56,630 --> 00:36:00,830
<font color="#CCCCCC">before</font><font color="#E5E5E5"> and finally</font><font color="#CCCCCC"> we're really</font>

784
00:35:59,180 --> 00:36:02,419
interested<font color="#CCCCCC"> in actually</font><font color="#E5E5E5"> just finding out</font>

785
00:36:00,830 --> 00:36:04,370
what's out<font color="#CCCCCC"> there</font><font color="#E5E5E5"> like you've heard me</font>

786
00:36:02,420 --> 00:36:07,100
<font color="#E5E5E5">assert a few times that this design</font>

787
00:36:04,370 --> 00:36:09,770
pattern is common and I've seen it many

788
00:36:07,100 --> 00:36:13,490
times<font color="#E5E5E5"> but I don't have numbers for you</font>

789
00:36:09,770 --> 00:36:15,770
because no one has done that<font color="#E5E5E5"> survey so</font>

790
00:36:13,490 --> 00:36:19,310
quick overview of<font color="#E5E5E5"> stuff that we think</font><font color="#CCCCCC"> is</font>

791
00:36:15,770 --> 00:36:21,530
<font color="#CCCCCC">interesting about hitting loopback the</font>

792
00:36:19,310 --> 00:36:23,360
reason<font color="#E5E5E5"> this paradigm is kind of common</font>

793
00:36:21,530 --> 00:36:26,030
other<font color="#E5E5E5"> than it</font><font color="#CCCCCC"> being</font><font color="#E5E5E5"> very portable is</font>

794
00:36:23,360 --> 00:36:27,890
that if you have something<font color="#E5E5E5"> like I'm</font>

795
00:36:26,030 --> 00:36:30,020
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to call out the</font><font color="#E5E5E5"> Spotify app here</font>

796
00:36:27,890 --> 00:36:32,720
where you want the user to be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to</font>

797
00:36:30,020 --> 00:36:34,970
click<font color="#CCCCCC"> a</font><font color="#E5E5E5"> link in their browser and then</font>

798
00:36:32,720 --> 00:36:37,370
have it<font color="#E5E5E5"> like</font><font color="#CCCCCC"> open up in the Spotify</font>

799
00:36:34,970 --> 00:36:39,830
application you could use a custom

800
00:36:37,370 --> 00:36:41,930
<font color="#E5E5E5">protocol handler like IRC or something</font>

801
00:36:39,830 --> 00:36:43,520
but this pops up<font color="#E5E5E5"> a warning message for</font>

802
00:36:41,930 --> 00:36:45,649
the user it's like hey you're<font color="#E5E5E5"> using this</font>

803
00:36:43,520 --> 00:36:47,540
<font color="#E5E5E5">weird vertical are you sure this is</font><font color="#CCCCCC"> OK</font>

804
00:36:45,650 --> 00:36:49,730
and users<font color="#CCCCCC"> don't like now they have to</font>

805
00:36:47,540 --> 00:36:52,460
click<font color="#E5E5E5"> again so what if</font><font color="#CCCCCC"> instead you just</font>

806
00:36:49,730 --> 00:36:55,340
<font color="#E5E5E5">made an HTTP request</font><font color="#CCCCCC"> to localhost</font><font color="#E5E5E5"> within</font>

807
00:36:52,460 --> 00:36:56,690
the command to<font color="#E5E5E5"> open up that link</font><font color="#CCCCCC"> so this</font>

808
00:36:55,340 --> 00:36:59,060
<font color="#E5E5E5">is a design</font><font color="#CCCCCC"> pattern that people use</font>

809
00:36:56,690 --> 00:37:00,710
<font color="#E5E5E5">sometimes to get around having the</font>

810
00:36:59,060 --> 00:37:04,490
warning about<font color="#E5E5E5"> custom protocol handlers</font>

811
00:37:00,710 --> 00:37:07,250
<font color="#E5E5E5">so you'll see it sometimes</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> course if</font>

812
00:37:04,490 --> 00:37:09,169
you do<font color="#E5E5E5"> that</font><font color="#CCCCCC"> the TLS you can't do TLS</font>

813
00:37:07,250 --> 00:37:11,540
with that you cannot have the<font color="#CCCCCC"> localhost</font>

814
00:37:09,170 --> 00:37:12,960
<font color="#CCCCCC">spotify server have a valid TOS server</font>

815
00:37:11,540 --> 00:37:14,579
<font color="#CCCCCC">for</font><font color="#E5E5E5"> Spotify</font><font color="#CCCCCC"> com</font>

816
00:37:12,960 --> 00:37:18,180
otherwise you're going to have horrible

817
00:37:14,579 --> 00:37:21,660
impersonation problems<font color="#CCCCCC"> post header</font>

818
00:37:18,180 --> 00:37:23,129
validation<font color="#CCCCCC"> it's just not something</font>

819
00:37:21,660 --> 00:37:25,259
<font color="#CCCCCC">people really think about when they're</font>

820
00:37:23,130 --> 00:37:29,700
rolling a quick and dirty HTTP server on

821
00:37:25,260 --> 00:37:32,010
localhost<font color="#CCCCCC"> but it stomps this bug in</font>

822
00:37:29,700 --> 00:37:34,020
terms of routers and<font color="#E5E5E5"> IOT devices talked</font>

823
00:37:32,010 --> 00:37:36,869
about this<font color="#E5E5E5"> a little bit but there's</font>

824
00:37:34,020 --> 00:37:39,509
<font color="#CCCCCC">actually kind</font><font color="#E5E5E5"> of a nasty problem</font><font color="#CCCCCC"> here</font>

825
00:37:36,869 --> 00:37:42,390
<font color="#E5E5E5">because for those checking host headers</font>

826
00:37:39,510 --> 00:37:44,420
isn't necessarily a desirable behavior

827
00:37:42,390 --> 00:37:46,740
from a user<font color="#CCCCCC"> experience perspective</font>

828
00:37:44,420 --> 00:37:51,000
<font color="#CCCCCC">because people like to be able</font><font color="#E5E5E5"> to go to</font>

829
00:37:46,740 --> 00:37:53,970
you<font color="#E5E5E5"> know my camera dot whatever and get</font>

830
00:37:51,000 --> 00:37:56,730
their<font color="#E5E5E5"> IOT camera or get their router and</font>

831
00:37:53,970 --> 00:37:58,919
so unless this is like completely

832
00:37:56,730 --> 00:38:00,410
<font color="#E5E5E5">determined</font><font color="#CCCCCC"> ahead of time you're going to</font>

833
00:37:58,920 --> 00:38:03,030
<font color="#E5E5E5">have host header problems</font><font color="#CCCCCC"> they're</font>

834
00:38:00,410 --> 00:38:05,098
normally they also don't use TLS<font color="#CCCCCC"> for</font>

835
00:38:03,030 --> 00:38:08,550
sort<font color="#E5E5E5"> of similar internal network reasons</font>

836
00:38:05,099 --> 00:38:10,109
it's not<font color="#E5E5E5"> clear what sort of you know</font><font color="#CCCCCC"> dns</font>

837
00:38:08,550 --> 00:38:13,589
zone<font color="#E5E5E5"> you would have the host name be</font>

838
00:38:10,109 --> 00:38:16,380
valid for<font color="#CCCCCC"> so yeah my quick example I've</font>

839
00:38:13,589 --> 00:38:19,740
said a<font color="#CCCCCC"> couple times is it's very</font><font color="#E5E5E5"> easy</font><font color="#CCCCCC"> to</font>

840
00:38:16,380 --> 00:38:23,819
own routers<font color="#E5E5E5"> use technique in terms of</font>

841
00:38:19,740 --> 00:38:27,479
mitigation<font color="#E5E5E5"> my quest at Google has a</font>

842
00:38:23,819 --> 00:38:29,790
document that<font color="#E5E5E5"> talks about some ways to</font>

843
00:38:27,480 --> 00:38:33,119
sort of make attacks like this less bad

844
00:38:29,790 --> 00:38:34,859
it's called cores and<font color="#CCCCCC"> RFC 1918</font><font color="#E5E5E5"> it's</font>

845
00:38:33,119 --> 00:38:36,690
worth<font color="#CCCCCC"> looking at if you care</font><font color="#E5E5E5"> about this</font>

846
00:38:34,859 --> 00:38:41,630
sort of<font color="#E5E5E5"> thing</font>

847
00:38:36,690 --> 00:38:44,250
so<font color="#E5E5E5"> finally fun with non HTTP protocols</font>

848
00:38:41,630 --> 00:38:47,760
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is a little bit more out there than</font>

849
00:38:44,250 --> 00:38:50,700
<font color="#E5E5E5">the other parts of the attack probably a</font>

850
00:38:47,760 --> 00:38:55,200
higher work to reward ratio<font color="#CCCCCC"> but there</font>

851
00:38:50,700 --> 00:38:57,660
could be some really<font color="#E5E5E5"> neat</font><font color="#CCCCCC"> stuff so just</font>

852
00:38:55,200 --> 00:38:59,220
<font color="#E5E5E5">because you can only speak HTTP doesn't</font>

853
00:38:57,660 --> 00:39:02,160
mean you can't also<font color="#CCCCCC"> be</font><font color="#E5E5E5"> speaking</font>

854
00:38:59,220 --> 00:39:04,410
something<font color="#E5E5E5"> else if the service is</font>

855
00:39:02,160 --> 00:39:06,660
listening on TCP and it's a<font color="#CCCCCC"> text-based</font>

856
00:39:04,410 --> 00:39:10,558
<font color="#E5E5E5">protocol and you</font><font color="#CCCCCC"> have the ability to</font>

857
00:39:06,660 --> 00:39:12,509
inject HTTP headers<font color="#E5E5E5"> you can get commands</font>

858
00:39:10,559 --> 00:39:15,059
or things<font color="#CCCCCC"> that might look like commands</font>

859
00:39:12,510 --> 00:39:18,089
to that service fairly<font color="#E5E5E5"> early in the</font>

860
00:39:15,059 --> 00:39:21,059
request body<font color="#E5E5E5"> such that if it's somewhat</font>

861
00:39:18,089 --> 00:39:23,330
tolerant of malformed things you can

862
00:39:21,059 --> 00:39:25,780
inject commands or do you know puts

863
00:39:23,330 --> 00:39:27,799
kind of valid command in this protocol

864
00:39:25,780 --> 00:39:29,660
binary protocols are going to be a lot

865
00:39:27,800 --> 00:39:31,640
harder<font color="#CCCCCC"> I'm not gonna say you can't do</font><font color="#E5E5E5"> it</font>

866
00:39:29,660 --> 00:39:38,779
I'm<font color="#CCCCCC"> just gonna</font><font color="#E5E5E5"> say that</font><font color="#CCCCCC"> it's probably</font>

867
00:39:31,640 --> 00:39:41,690
gonna be<font color="#E5E5E5"> difficult</font><font color="#CCCCCC"> survey I think this</font>

868
00:39:38,780 --> 00:39:44,420
tweet<font color="#CCCCCC"> Twitter conversation Cana speaks</font>

869
00:39:41,690 --> 00:39:47,930
for itself<font color="#CCCCCC"> but we</font><font color="#E5E5E5"> don't know</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> out</font>

870
00:39:44,420 --> 00:39:50,030
there<font color="#CCCCCC"> if you have control of</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> Windows</font>

871
00:39:47,930 --> 00:39:52,270
fleet like if your organization has like

872
00:39:50,030 --> 00:39:54,860
a wide install base that has sort of a

873
00:39:52,270 --> 00:39:56,960
diverse menagerie of consumer

874
00:39:54,860 --> 00:39:59,900
applications installed on<font color="#CCCCCC"> Windows</font>

875
00:39:56,960 --> 00:40:03,590
endpoints<font color="#CCCCCC"> I would love</font><font color="#E5E5E5"> to know what's</font>

876
00:39:59,900 --> 00:40:05,870
listening on localhost<font color="#CCCCCC"> but I don't</font><font color="#E5E5E5"> have</font>

877
00:40:03,590 --> 00:40:07,550
the ability<font color="#E5E5E5"> to do that scan so instead I</font>

878
00:40:05,870 --> 00:40:13,490
built a tool that at least lets you do

879
00:40:07,550 --> 00:40:15,680
point<font color="#CCCCCC"> checks or we built a</font><font color="#E5E5E5"> tool guess</font>

880
00:40:13,490 --> 00:40:19,129
finishing up<font color="#E5E5E5"> we believe in having our</font>

881
00:40:15,680 --> 00:40:20,750
code up so it's all<font color="#CCCCCC"> on github it's</font><font color="#E5E5E5"> the</font>

882
00:40:19,130 --> 00:40:22,580
only<font color="#E5E5E5"> tricky part of the installation is</font>

883
00:40:20,750 --> 00:40:25,520
setting up that<font color="#E5E5E5"> iptables hack the rest</font>

884
00:40:22,580 --> 00:40:27,470
of it is<font color="#CCCCCC"> just docker</font><font color="#E5E5E5"> so you'll be pretty</font>

885
00:40:25,520 --> 00:40:29,360
<font color="#E5E5E5">good to go and we're also gonna be</font>

886
00:40:27,470 --> 00:40:32,629
running rebind my dot zone for a while

887
00:40:29,360 --> 00:40:34,970
at least<font color="#E5E5E5"> it generates a lot</font><font color="#CCCCCC"> of DNS</font>

888
00:40:32,630 --> 00:40:37,100
requests and stuff so like I don't know

889
00:40:34,970 --> 00:40:38,569
<font color="#E5E5E5">Amazon might kick us off eventually and</font>

890
00:40:37,100 --> 00:40:39,860
also it might get expensive<font color="#E5E5E5"> in which</font>

891
00:40:38,570 --> 00:40:43,220
case we'll turn it off because<font color="#E5E5E5"> you can</font>

892
00:40:39,860 --> 00:40:45,440
<font color="#E5E5E5">run you around but yeah if you want to</font>

893
00:40:43,220 --> 00:40:48,649
reach out<font color="#CCCCCC"> to us</font><font color="#E5E5E5"> I'm Dee Cooper at Akamai</font>

894
00:40:45,440 --> 00:40:51,530
<font color="#E5E5E5">comm Alan's a</font><font color="#CCCCCC"> Werth at Akamai comm</font><font color="#E5E5E5"> and I</font>

895
00:40:48,650 --> 00:40:54,599
hope I<font color="#E5E5E5"> see some of y'all at the CTF</font>

896
00:40:51,530 --> 00:40:54,599
[Music]

