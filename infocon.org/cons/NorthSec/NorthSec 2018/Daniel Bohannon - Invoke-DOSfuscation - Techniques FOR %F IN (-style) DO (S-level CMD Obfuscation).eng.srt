1
00:00:00,270 --> 00:00:05,069
<font color="#E5E5E5">all right well thank you everyone for</font>

2
00:00:03,090 --> 00:00:07,500
<font color="#E5E5E5">coming to the</font><font color="#CCCCCC"> talk this</font><font color="#E5E5E5"> is a invoke da</font>

3
00:00:05,069 --> 00:00:09,390
sophistication looking at<font color="#CCCCCC"> finn-style</font>

4
00:00:07,500 --> 00:00:10,740
<font color="#CCCCCC">daus level command obfuscation and</font>

5
00:00:09,390 --> 00:00:13,050
hopefully by the<font color="#E5E5E5"> end of this talk</font>

6
00:00:10,740 --> 00:00:16,049
the syntax<font color="#E5E5E5"> of this title slide will make</font>

7
00:00:13,050 --> 00:00:17,430
<font color="#E5E5E5">just a</font><font color="#CCCCCC"> little bit more sense</font><font color="#E5E5E5"> I'm also</font>

8
00:00:16,049 --> 00:00:20,850
obsessed with<font color="#CCCCCC"> coffee which is</font><font color="#E5E5E5"> why</font>

9
00:00:17,430 --> 00:00:23,460
there's latte art<font color="#CCCCCC"> on the front</font><font color="#E5E5E5"> a little</font>

10
00:00:20,850 --> 00:00:25,650
<font color="#E5E5E5">bit about myself</font><font color="#CCCCCC"> I work with mandiant</font>

11
00:00:23,460 --> 00:00:28,380
<font color="#E5E5E5">fire I out</font><font color="#CCCCCC"> of the Washington DC area I</font>

12
00:00:25,650 --> 00:00:30,419
started<font color="#E5E5E5"> out doing instant response for a</font>

13
00:00:28,380 --> 00:00:32,039
few years and<font color="#E5E5E5"> am now transitioned to the</font>

14
00:00:30,420 --> 00:00:33,480
advanced practices team doing applied

15
00:00:32,039 --> 00:00:38,970
research basically<font color="#CCCCCC"> writing detections</font>

16
00:00:33,480 --> 00:00:40,949
<font color="#CCCCCC">and</font><font color="#E5E5E5"> my kind of sickness or obsession is</font>

17
00:00:38,970 --> 00:00:42,540
looking at obfuscation techniques to

18
00:00:40,950 --> 00:00:44,130
break my<font color="#E5E5E5"> own detections</font><font color="#CCCCCC"> so that I can</font>

19
00:00:42,540 --> 00:00:46,769
make them better<font color="#E5E5E5"> before an attacker</font>

20
00:00:44,130 --> 00:00:49,050
<font color="#E5E5E5">breaks them and so some of the office</font>

21
00:00:46,770 --> 00:00:51,690
can project I've<font color="#CCCCCC"> worked on include that</font>

22
00:00:49,050 --> 00:00:52,949
<font color="#E5E5E5">invoke obfuscation cradle crafter in</font>

23
00:00:51,690 --> 00:00:54,120
<font color="#E5E5E5">vogue</font><font color="#CCCCCC"> a sophistication</font><font color="#E5E5E5"> which we'll talk</font>

24
00:00:52,950 --> 00:00:58,050
<font color="#CCCCCC">about</font><font color="#E5E5E5"> today and then the</font><font color="#CCCCCC"> Revo</font>

25
00:00:54,120 --> 00:00:59,730
confiscation detection framework<font color="#CCCCCC"> brief</font>

26
00:00:58,050 --> 00:01:02,819
disclaimer<font color="#CCCCCC"> nothing I talked about</font><font color="#E5E5E5"> today</font>

27
00:00:59,730 --> 00:01:04,199
<font color="#CCCCCC">points to any specific client of</font><font color="#E5E5E5"> fire</font><font color="#CCCCCC"> I</font>

28
00:01:02,820 --> 00:01:05,489
or mandiant<font color="#E5E5E5"> most of the stuff I'm</font>

29
00:01:04,199 --> 00:01:09,649
talking<font color="#CCCCCC"> about we've never seen</font><font color="#E5E5E5"> in the</font>

30
00:01:05,489 --> 00:01:12,719
wild<font color="#E5E5E5"> before but standard disclaimer so</font>

31
00:01:09,649 --> 00:01:13,829
today we're going<font color="#E5E5E5"> to look at a quick</font>

32
00:01:12,719 --> 00:01:15,600
overview<font color="#E5E5E5"> of kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the state of</font>

33
00:01:13,829 --> 00:01:17,699
<font color="#CCCCCC">obfuscation and</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of from different</font>

34
00:01:15,600 --> 00:01:19,350
angles from<font color="#CCCCCC"> red/blue and then we're</font>

35
00:01:17,700 --> 00:01:21,359
gonna look at three case<font color="#CCCCCC"> studies that</font>

36
00:01:19,350 --> 00:01:24,208
<font color="#CCCCCC">really propelled</font><font color="#E5E5E5"> me last year in so</font>

37
00:01:21,359 --> 00:01:25,048
starting<font color="#E5E5E5"> this area of research</font><font color="#CCCCCC"> and then</font>

38
00:01:24,209 --> 00:01:26,939
we're<font color="#E5E5E5"> gonna look at a couple different</font>

39
00:01:25,049 --> 00:01:28,229
<font color="#E5E5E5">layers of obfuscation</font><font color="#CCCCCC"> starting with</font>

40
00:01:26,939 --> 00:01:30,229
something<font color="#E5E5E5"> as</font><font color="#CCCCCC"> simple it's like</font><font color="#E5E5E5"> binary</font>

41
00:01:28,229 --> 00:01:32,579
<font color="#CCCCCC">named</font><font color="#E5E5E5"> office</font><font color="#CCCCCC"> geisha and then diving</font><font color="#E5E5E5"> into</font>

42
00:01:30,229 --> 00:01:34,259
character insertion obfuscation<font color="#E5E5E5"> and then</font>

43
00:01:32,579 --> 00:01:36,770
adding all those things together<font color="#E5E5E5"> to do</font>

44
00:01:34,259 --> 00:01:40,259
full payload<font color="#E5E5E5"> encoding all using just</font>

45
00:01:36,770 --> 00:01:41,848
native command<font color="#E5E5E5"> XE and then we'll do a</font>

46
00:01:40,259 --> 00:01:42,899
demo of<font color="#CCCCCC"> mo da sophistication and</font><font color="#E5E5E5"> then</font>

47
00:01:41,849 --> 00:01:44,999
we'll talk<font color="#E5E5E5"> about detecting</font><font color="#CCCCCC"> das</font>

48
00:01:42,899 --> 00:01:49,229
sophistication<font color="#CCCCCC"> there's a lot of content</font>

49
00:01:44,999 --> 00:01:51,298
<font color="#CCCCCC">here</font><font color="#E5E5E5"> and so that</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> posted the slides</font>

50
00:01:49,229 --> 00:01:53,069
online<font color="#E5E5E5"> and also there's a 36 page white</font>

51
00:01:51,299 --> 00:01:54,840
paper with<font color="#CCCCCC"> all this research</font><font color="#E5E5E5"> in it as</font>

52
00:01:53,069 --> 00:01:57,119
well<font color="#CCCCCC"> so if you</font><font color="#E5E5E5"> don't like the sound of</font>

53
00:01:54,840 --> 00:01:58,229
my voice<font color="#CCCCCC"> you can leave</font><font color="#E5E5E5"> now and then just</font>

54
00:01:57,119 --> 00:01:59,939
read the white paper and<font color="#CCCCCC"> all</font><font color="#E5E5E5"> the</font>

55
00:01:58,229 --> 00:02:04,229
<font color="#CCCCCC">information is there with just a few</font>

56
00:01:59,939 --> 00:02:05,880
<font color="#E5E5E5">less memes so there's options</font><font color="#CCCCCC"> so first</font>

57
00:02:04,229 --> 00:02:06,479
the state of<font color="#CCCCCC"> obfuscation what does it</font>

58
00:02:05,880 --> 00:02:09,299
<font color="#E5E5E5">look like today</font>

59
00:02:06,479 --> 00:02:11,610
well<font color="#E5E5E5"> why</font><font color="#CCCCCC"> off escape from a red team</font>

60
00:02:09,300 --> 00:02:13,230
perspective<font color="#E5E5E5"> obfuscation is great because</font>

61
00:02:11,610 --> 00:02:16,680
it takes relatively<font color="#E5E5E5"> little effort</font>

62
00:02:13,230 --> 00:02:19,890
to evade rigid detections<font color="#CCCCCC"> and typically</font>

63
00:02:16,680 --> 00:02:22,530
they're targeting static detections<font color="#CCCCCC"> to</font>

64
00:02:19,890 --> 00:02:24,298
evade but also some dynamic as well<font color="#CCCCCC"> and</font>

65
00:02:22,530 --> 00:02:26,190
it<font color="#E5E5E5"> increases the work for defenders so</font>

66
00:02:24,299 --> 00:02:27,659
we as defenders even if we detect<font color="#E5E5E5"> this</font>

67
00:02:26,190 --> 00:02:30,209
payload we still have to take<font color="#CCCCCC"> extra time</font>

68
00:02:27,659 --> 00:02:33,000
<font color="#E5E5E5">to decode it</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> D obfuscate it and see</font>

69
00:02:30,209 --> 00:02:34,260
what is<font color="#E5E5E5"> actually happening here and</font>

70
00:02:33,000 --> 00:02:35,489
there's obfuscation<font color="#E5E5E5"> frameworks for</font>

71
00:02:34,260 --> 00:02:38,069
<font color="#E5E5E5">almost any</font><font color="#CCCCCC"> language you</font><font color="#E5E5E5"> can think</font><font color="#CCCCCC"> of</font>

72
00:02:35,489 --> 00:02:39,540
<font color="#E5E5E5">most of them open source and even though</font>

73
00:02:38,069 --> 00:02:41,518
I may be<font color="#E5E5E5"> biased</font><font color="#CCCCCC"> I don't really see</font><font color="#E5E5E5"> us</font>

74
00:02:39,540 --> 00:02:44,099
slowing down anytime soon<font color="#E5E5E5"> because it's</font>

75
00:02:41,519 --> 00:02:45,690
just so<font color="#CCCCCC"> effective from</font><font color="#E5E5E5"> a blue team</font>

76
00:02:44,099 --> 00:02:47,940
<font color="#CCCCCC">perspective there's actually been some</font>

77
00:02:45,690 --> 00:02:49,769
significant strides<font color="#E5E5E5"> in visibility and</font>

78
00:02:47,940 --> 00:02:51,989
capabilities over<font color="#E5E5E5"> the past several years</font>

79
00:02:49,769 --> 00:02:54,120
things like<font color="#CCCCCC"> Microsoft's anti-malware</font>

80
00:02:51,989 --> 00:02:55,739
scan interface<font color="#E5E5E5"> or some things that have</font>

81
00:02:54,120 --> 00:02:58,799
<font color="#CCCCCC">been</font><font color="#E5E5E5"> around forever like event tracing</font>

82
00:02:55,739 --> 00:03:00,090
for Windows<font color="#E5E5E5"> that that as the</font><font color="#CCCCCC"> defensive</font>

83
00:02:58,799 --> 00:03:03,180
community<font color="#E5E5E5"> kind of started to embrace</font>

84
00:03:00,090 --> 00:03:05,370
<font color="#E5E5E5">more news for better visibility and then</font>

85
00:03:03,180 --> 00:03:07,859
also some some<font color="#CCCCCC"> more signature</font><font color="#E5E5E5"> lists kind</font>

86
00:03:05,370 --> 00:03:09,150
of detection approaches<font color="#E5E5E5"> using some</font>

87
00:03:07,859 --> 00:03:10,769
different<font color="#E5E5E5"> data science techniques so</font>

88
00:03:09,150 --> 00:03:13,349
there's been really cool strides in this

89
00:03:10,769 --> 00:03:16,500
industry<font color="#E5E5E5"> from for detection but</font>

90
00:03:13,349 --> 00:03:18,418
attackers<font color="#E5E5E5"> they just respond and</font>

91
00:03:16,500 --> 00:03:21,389
sometimes they respond by choosing<font color="#E5E5E5"> a</font>

92
00:03:18,419 --> 00:03:23,069
softer<font color="#CCCCCC"> target in general</font><font color="#E5E5E5"> or they'll</font><font color="#CCCCCC"> just</font>

93
00:03:21,389 --> 00:03:25,560
<font color="#CCCCCC">straight-up disable these defensive</font>

94
00:03:23,069 --> 00:03:26,730
capabilities<font color="#CCCCCC"> or they'll use languages</font>

95
00:03:25,560 --> 00:03:31,349
that just don't<font color="#E5E5E5"> provide this additional</font>

96
00:03:26,730 --> 00:03:34,138
<font color="#E5E5E5">visibility</font><font color="#CCCCCC"> so this talk is</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of my</font>

97
00:03:31,349 --> 00:03:36,418
response to<font color="#E5E5E5"> all of this</font><font color="#CCCCCC"> and looking at</font>

98
00:03:34,139 --> 00:03:38,370
command<font color="#CCCCCC"> X the</font><font color="#E5E5E5"> efficient as a defender</font>

99
00:03:36,419 --> 00:03:40,109
most of the detection<font color="#E5E5E5"> that I see in</font>

100
00:03:38,370 --> 00:03:42,120
conversations I have when it<font color="#E5E5E5"> comes to</font>

101
00:03:40,109 --> 00:03:44,819
command XE is typically looking<font color="#CCCCCC"> for a</font>

102
00:03:42,120 --> 00:03:46,500
<font color="#E5E5E5">process</font><font color="#CCCCCC"> named</font><font color="#E5E5E5"> command XE followed by</font>

103
00:03:44,819 --> 00:03:47,668
certain<font color="#CCCCCC"> arguments some additional</font>

104
00:03:46,500 --> 00:03:49,829
detection could be looking<font color="#E5E5E5"> for like</font>

105
00:03:47,669 --> 00:03:52,680
<font color="#E5E5E5">parent-child process relationships so</font>

106
00:03:49,829 --> 00:03:54,720
<font color="#E5E5E5">Explorer spawning command XE is a little</font>

107
00:03:52,680 --> 00:03:57,269
less suspicious than<font color="#CCCCCC"> windward</font><font color="#E5E5E5"> spawning</font>

108
00:03:54,720 --> 00:03:59,459
<font color="#CCCCCC">command XE but tons of caveats to that</font>

109
00:03:57,269 --> 00:04:01,680
<font color="#E5E5E5">statement you can also look at command</font>

110
00:03:59,459 --> 00:04:03,239
XE is like the source of action<font color="#E5E5E5"> so a</font>

111
00:04:01,680 --> 00:04:04,470
command<font color="#E5E5E5"> actually modifying a registry</font>

112
00:04:03,239 --> 00:04:06,780
key or doing<font color="#E5E5E5"> something weird like that</font>

113
00:04:04,470 --> 00:04:09,120
<font color="#E5E5E5">or make a DNS request or something</font><font color="#CCCCCC"> of</font>

114
00:04:06,780 --> 00:04:10,859
that nature<font color="#CCCCCC"> but really when it comes</font>

115
00:04:09,120 --> 00:04:12,989
down<font color="#CCCCCC"> to what's what's the purpose of</font>

116
00:04:10,859 --> 00:04:14,730
building<font color="#E5E5E5"> an entire</font><font color="#CCCCCC"> framework for</font>

117
00:04:12,989 --> 00:04:18,418
generating obfuscated payloads<font color="#E5E5E5"> for</font>

118
00:04:14,730 --> 00:04:21,260
command<font color="#CCCCCC"> I</font><font color="#E5E5E5"> XE so what got me into this</font>

119
00:04:18,418 --> 00:04:24,359
was<font color="#E5E5E5"> specifically three case</font><font color="#CCCCCC"> studies of</font>

120
00:04:21,260 --> 00:04:25,389
<font color="#E5E5E5">actual attackers that we investigated</font>

121
00:04:24,360 --> 00:04:28,000
last year

122
00:04:25,389 --> 00:04:30,039
and my my manager Nick<font color="#E5E5E5"> Carr</font><font color="#CCCCCC"> night we</font>

123
00:04:28,000 --> 00:04:31,719
co-authored<font color="#E5E5E5"> this blog post last shot at</font>

124
00:04:30,039 --> 00:04:33,099
the end of June<font color="#E5E5E5"> about</font><font color="#CCCCCC"> these three</font>

125
00:04:31,719 --> 00:04:35,500
<font color="#E5E5E5">different techniques</font><font color="#CCCCCC"> and these three</font>

126
00:04:33,099 --> 00:04:36,610
different attackers<font color="#CCCCCC"> and so the groups</font>

127
00:04:35,500 --> 00:04:38,500
were going<font color="#E5E5E5"> to talk about very</font><font color="#CCCCCC"> briefly</font>

128
00:04:36,610 --> 00:04:41,080
here<font color="#CCCCCC"> our Finn</font><font color="#E5E5E5"> ate a financial throw</font>

129
00:04:38,500 --> 00:04:43,330
actor<font color="#CCCCCC"> a PT</font><font color="#E5E5E5"> 32 I'm also known as ocean</font>

130
00:04:41,080 --> 00:04:46,030
Lotus out of Vietnam<font color="#E5E5E5"> and then Finn 7</font>

131
00:04:43,330 --> 00:04:47,500
also<font color="#E5E5E5"> known as carbon AK so the first</font>

132
00:04:46,030 --> 00:04:49,659
<font color="#CCCCCC">example was in February of</font><font color="#E5E5E5"> last year</font>

133
00:04:47,500 --> 00:04:52,990
<font color="#E5E5E5">Finn</font><font color="#CCCCCC"> 8</font><font color="#E5E5E5"> they really</font><font color="#CCCCCC"> like to obfuscate</font>

134
00:04:49,659 --> 00:04:54,580
their macros<font color="#E5E5E5"> and so this is a</font><font color="#CCCCCC"> Dee office</font>

135
00:04:52,990 --> 00:04:56,949
gated version and<font color="#E5E5E5"> basically they are</font>

136
00:04:54,580 --> 00:04:58,330
using a lot<font color="#CCCCCC"> of process level</font><font color="#E5E5E5"> environment</font>

137
00:04:56,949 --> 00:05:00,159
variables to<font color="#CCCCCC"> store their payloads in a</font>

138
00:04:58,330 --> 00:05:02,740
lot<font color="#E5E5E5"> of different places</font><font color="#CCCCCC"> and then they're</font>

139
00:05:00,159 --> 00:05:04,330
setting a<font color="#E5E5E5"> PowerShell command which is</font>

140
00:05:02,740 --> 00:05:05,919
just<font color="#CCCCCC"> PowerShell</font><font color="#E5E5E5"> dash into one</font>

141
00:05:04,330 --> 00:05:07,750
environment<font color="#E5E5E5"> variable now when you run</font>

142
00:05:05,919 --> 00:05:10,719
PowerShell - it runs<font color="#E5E5E5"> the</font><font color="#CCCCCC"> PowerShell</font>

143
00:05:07,750 --> 00:05:13,389
process<font color="#E5E5E5"> and it executes standard input</font>

144
00:05:10,719 --> 00:05:14,710
as<font color="#CCCCCC"> the command</font><font color="#E5E5E5"> they didn't have the very</font>

145
00:05:13,389 --> 00:05:16,270
bottom here<font color="#E5E5E5"> they have the rest</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

146
00:05:14,710 --> 00:05:18,460
PowerShell command which<font color="#CCCCCC"> is pulling</font><font color="#E5E5E5"> and</font>

147
00:05:16,270 --> 00:05:20,620
reassembling the payload from<font color="#E5E5E5"> additional</font>

148
00:05:18,460 --> 00:05:22,659
process level<font color="#CCCCCC"> environment variables set</font>

149
00:05:20,620 --> 00:05:24,279
by the parent<font color="#E5E5E5"> Windward process and so</font>

150
00:05:22,659 --> 00:05:26,199
then the<font color="#CCCCCC"> only child process you see out</font>

151
00:05:24,279 --> 00:05:30,069
<font color="#CCCCCC">of window XE is the command at the very</font>

152
00:05:26,199 --> 00:05:32,169
top command<font color="#CCCCCC"> /c echo var one pipe var -</font>

153
00:05:30,069 --> 00:05:36,060
which is echoing the PowerShell command

154
00:05:32,169 --> 00:05:41,469
into PowerShell - that's<font color="#E5E5E5"> really cool</font>

155
00:05:36,060 --> 00:05:45,819
the second one<font color="#CCCCCC"> apt 32</font><font color="#E5E5E5"> they</font><font color="#CCCCCC"> a PT 32</font>

156
00:05:41,469 --> 00:05:48,099
really embraces the the latest trendy

157
00:05:45,819 --> 00:05:50,110
thing on Twitter<font color="#E5E5E5"> and so like when Casey</font>

158
00:05:48,099 --> 00:05:53,710
Smith<font color="#CCCCCC"> tweeted the register</font><font color="#E5E5E5"> of 32</font>

159
00:05:50,110 --> 00:05:55,449
squiggly-doo downloader<font color="#E5E5E5"> 85032 as did the</font>

160
00:05:53,710 --> 00:05:57,969
<font color="#CCCCCC">rest of the world it seems jumped on it</font>

161
00:05:55,449 --> 00:05:59,379
very very quickly<font color="#CCCCCC"> so defenders also</font>

162
00:05:57,969 --> 00:06:02,199
jumped on it very<font color="#E5E5E5"> quickly start to write</font>

163
00:05:59,379 --> 00:06:05,830
detection<font color="#CCCCCC"> z' a lot of them based on /i :</font>

164
00:06:02,199 --> 00:06:07,990
HTTP<font color="#E5E5E5"> and so apt 32 did is they use the</font>

165
00:06:05,830 --> 00:06:09,818
<font color="#CCCCCC">tried-and-true carrots now the carrot is</font>

166
00:06:07,990 --> 00:06:11,379
the<font color="#E5E5E5"> escape</font><font color="#CCCCCC"> character for command</font><font color="#E5E5E5"> XE but</font>

167
00:06:09,819 --> 00:06:13,300
if you<font color="#E5E5E5"> escape a character that doesn't</font>

168
00:06:11,379 --> 00:06:15,400
<font color="#CCCCCC">have any escapable meaning that nothing</font>

169
00:06:13,300 --> 00:06:16,719
<font color="#E5E5E5">happens</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> now this carrot is in the</font>

170
00:06:15,400 --> 00:06:18,849
<font color="#E5E5E5">command line arguments or in the event</font>

171
00:06:16,719 --> 00:06:21,430
<font color="#CCCCCC">logs</font><font color="#E5E5E5"> and so it can evade rigid detection</font>

172
00:06:18,849 --> 00:06:22,750
<font color="#E5E5E5">that don't take this into account some</font>

173
00:06:21,430 --> 00:06:25,419
people do<font color="#E5E5E5"> take this into account</font>

174
00:06:22,750 --> 00:06:28,060
so a t32 did was they use the double

175
00:06:25,419 --> 00:06:29,469
quote<font color="#E5E5E5"> instead now I've mentioned the</font>

176
00:06:28,060 --> 00:06:31,060
double quote a couple<font color="#E5E5E5"> times over the</font>

177
00:06:29,469 --> 00:06:32,740
past<font color="#E5E5E5"> few years</font><font color="#CCCCCC"> and I'm amazed</font><font color="#E5E5E5"> that more</font>

178
00:06:31,060 --> 00:06:34,089
attackers don't use it because<font color="#E5E5E5"> it has</font>

179
00:06:32,740 --> 00:06:35,709
it's a lot more resilient<font color="#E5E5E5"> than the</font>

180
00:06:34,089 --> 00:06:37,000
carrots and a lot of<font color="#E5E5E5"> defenders aren't</font>

181
00:06:35,709 --> 00:06:38,709
looking<font color="#CCCCCC"> for it</font><font color="#E5E5E5"> but it was cool</font><font color="#CCCCCC"> to see</font>

182
00:06:37,000 --> 00:06:39,550
<font color="#E5E5E5">them pull this out and you</font><font color="#CCCCCC"> can actually</font>

183
00:06:38,709 --> 00:06:41,290
see they

184
00:06:39,550 --> 00:06:42,790
didn't put it in<font color="#E5E5E5"> the entire command they</font>

185
00:06:41,290 --> 00:06:45,220
only put it very<font color="#CCCCCC"> strategically in</font>

186
00:06:42,790 --> 00:06:47,950
certain<font color="#CCCCCC"> pieces that they knew the Texans</font>

187
00:06:45,220 --> 00:06:50,590
were based off<font color="#CCCCCC"> of so I kind of call this</font>

188
00:06:47,950 --> 00:06:51,940
tasteful obfuscation<font color="#CCCCCC"> as opposed</font><font color="#E5E5E5"> to just</font>

189
00:06:50,590 --> 00:06:55,210
throwing<font color="#E5E5E5"> everything against</font><font color="#CCCCCC"> the wall</font>

190
00:06:51,940 --> 00:06:57,880
now this last<font color="#E5E5E5"> example single-handedly</font>

191
00:06:55,210 --> 00:07:00,390
<font color="#E5E5E5">like blew my mind and started me down</font>

192
00:06:57,880 --> 00:07:03,190
<font color="#E5E5E5">this entire</font><font color="#CCCCCC"> area of research</font><font color="#E5E5E5"> thin seven</font>

193
00:07:00,390 --> 00:07:05,500
<font color="#CCCCCC">fin</font><font color="#E5E5E5"> seven and</font><font color="#CCCCCC"> apt thirty-two they</font>

194
00:07:03,190 --> 00:07:07,120
compete for<font color="#CCCCCC"> first place in my heart for</font>

195
00:07:05,500 --> 00:07:09,580
the coolest most tasteful obfuscation

196
00:07:07,120 --> 00:07:10,900
<font color="#CCCCCC">because they really off escape just</font>

197
00:07:09,580 --> 00:07:13,810
certain pieces and they do it really

198
00:07:10,900 --> 00:07:15,989
<font color="#E5E5E5">well</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is actually extracted from</font>

199
00:07:13,810 --> 00:07:19,510
a<font color="#E5E5E5"> malicious link file that they dropped</font>

200
00:07:15,990 --> 00:07:21,310
<font color="#E5E5E5">and it's it's actually has some</font>

201
00:07:19,510 --> 00:07:23,440
JavaScript level obfuscation as you can

202
00:07:21,310 --> 00:07:25,450
see some string concatenation and<font color="#E5E5E5"> then</font>

203
00:07:23,440 --> 00:07:27,520
for eval<font color="#CCCCCC"> that should do a ski conversion</font>

204
00:07:25,450 --> 00:07:28,990
and concatenate<font color="#CCCCCC"> it</font><font color="#E5E5E5"> so that's kind of</font>

205
00:07:27,520 --> 00:07:31,870
<font color="#E5E5E5">cool and</font><font color="#CCCCCC"> they're echoing that on</font><font color="#E5E5E5"> to disk</font>

206
00:07:28,990 --> 00:07:34,150
<font color="#CCCCCC">but the two red boxes</font><font color="#E5E5E5"> are what's really</font>

207
00:07:31,870 --> 00:07:36,400
really interesting<font color="#E5E5E5"> now when I saw this</font>

208
00:07:34,150 --> 00:07:38,109
it didn't<font color="#CCCCCC"> make any</font><font color="#E5E5E5"> sense because as you</font>

209
00:07:36,400 --> 00:07:40,900
<font color="#E5E5E5">can see there's this</font><font color="#CCCCCC"> W script command</font>

210
00:07:38,110 --> 00:07:42,700
<font color="#E5E5E5">but it has this</font><font color="#CCCCCC"> @ sign in it now it</font>

211
00:07:40,900 --> 00:07:44,620
makes<font color="#E5E5E5"> sense</font><font color="#CCCCCC"> if that was a carrot or if</font>

212
00:07:42,700 --> 00:07:46,420
it<font color="#E5E5E5"> was a double quote but the @ sign I</font>

213
00:07:44,620 --> 00:07:49,480
couldn't get<font color="#E5E5E5"> this command to run when</font>

214
00:07:46,420 --> 00:07:52,420
<font color="#CCCCCC">I'd copied and pasted that and ran it so</font>

215
00:07:49,480 --> 00:07:53,770
what's going on here well<font color="#E5E5E5"> first they're</font>

216
00:07:52,420 --> 00:07:56,170
running command<font color="#E5E5E5"> and they're setting</font><font color="#CCCCCC"> this</font>

217
00:07:53,770 --> 00:07:58,690
<font color="#CCCCCC">W script to command into an</font><font color="#E5E5E5"> environment</font>

218
00:07:56,170 --> 00:08:00,460
variable called X they then write<font color="#E5E5E5"> out</font>

219
00:07:58,690 --> 00:08:03,580
the<font color="#CCCCCC"> JavaScript file but then at</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> very</font>

220
00:08:00,460 --> 00:08:05,049
<font color="#CCCCCC">end they echo X into command</font><font color="#E5E5E5"> because</font>

221
00:08:03,580 --> 00:08:08,289
just like<font color="#E5E5E5"> PowerShell command can also</font>

222
00:08:05,050 --> 00:08:09,640
receive from standard input but then

223
00:08:08,290 --> 00:08:11,800
they<font color="#CCCCCC"> put in</font><font color="#E5E5E5"> these garbage delimiters</font><font color="#CCCCCC"> two</font>

224
00:08:09,640 --> 00:08:14,710
<font color="#E5E5E5">at sign they put it in W script and</font>

225
00:08:11,800 --> 00:08:16,090
jscript<font color="#E5E5E5"> because perhaps some defenders</font>

226
00:08:14,710 --> 00:08:19,299
<font color="#CCCCCC">were looking for these static strings</font>

227
00:08:16,090 --> 00:08:21,729
and<font color="#E5E5E5"> link files but then when they echo</font>

228
00:08:19,300 --> 00:08:23,980
the X variable<font color="#E5E5E5"> they actually make space</font>

229
00:08:21,730 --> 00:08:26,800
<font color="#E5E5E5">after</font><font color="#CCCCCC"> the variable</font><font color="#E5E5E5"> name and they insert</font>

230
00:08:23,980 --> 00:08:29,140
this syntax right here which is<font color="#E5E5E5"> really</font>

231
00:08:26,800 --> 00:08:30,580
fascinating<font color="#E5E5E5"> so what this says the colon</font>

232
00:08:29,140 --> 00:08:33,760
after<font color="#CCCCCC"> a variable name but before the</font>

233
00:08:30,580 --> 00:08:35,949
final<font color="#CCCCCC"> % it says any string on the left</font>

234
00:08:33,760 --> 00:08:38,169
<font color="#CCCCCC">side of the equal sign find every</font>

235
00:08:35,950 --> 00:08:39,520
instance of<font color="#CCCCCC"> that string</font><font color="#E5E5E5"> and then replace</font>

236
00:08:38,169 --> 00:08:41,919
it<font color="#CCCCCC"> with a string on the right side of</font>

237
00:08:39,520 --> 00:08:43,870
the equal sign<font color="#CCCCCC"> in this</font><font color="#E5E5E5"> case the string</font>

238
00:08:41,919 --> 00:08:45,849
is just<font color="#E5E5E5"> a single</font><font color="#CCCCCC"> @ sign and there's</font>

239
00:08:43,870 --> 00:08:49,360
nothing on<font color="#E5E5E5"> the right side which means in</font>

240
00:08:45,850 --> 00:08:50,829
memory remove every @ sign<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the</font>

241
00:08:49,360 --> 00:08:55,459
variable<font color="#CCCCCC"> X</font>

242
00:08:50,829 --> 00:08:58,760
how freaking cool is<font color="#CCCCCC"> that this this is</font>

243
00:08:55,459 --> 00:09:01,459
<font color="#E5E5E5">tasteful this is delectable this is very</font>

244
00:08:58,760 --> 00:09:03,260
just<font color="#E5E5E5"> has so much finesse to</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> and it</font>

245
00:09:01,459 --> 00:09:06,018
got me wondering<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is native to</font>

246
00:09:03,260 --> 00:09:07,970
<font color="#CCCCCC">Command XE</font><font color="#E5E5E5"> like is this a wind</font><font color="#CCCCCC"> n thing</font>

247
00:09:06,019 --> 00:09:09,350
or<font color="#E5E5E5"> is it been around forever</font><font color="#CCCCCC"> so you</font>

248
00:09:07,970 --> 00:09:11,180
start googling this stuff and rice it's

249
00:09:09,350 --> 00:09:15,829
been around for freaking forever<font color="#CCCCCC"> like</font>

250
00:09:11,180 --> 00:09:18,138
how cool is this<font color="#E5E5E5"> so this all happened</font>

251
00:09:15,829 --> 00:09:20,209
very<font color="#CCCCCC"> quickly we found this payload on a</font>

252
00:09:18,139 --> 00:09:22,070
Wednesday<font color="#CCCCCC"> blew my mind on a Thursday</font>

253
00:09:20,209 --> 00:09:23,569
wrote<font color="#E5E5E5"> the blog post put it out on a</font>

254
00:09:22,070 --> 00:09:25,310
Friday<font color="#E5E5E5"> I went home couldn't stop</font>

255
00:09:23,570 --> 00:09:27,440
thinking<font color="#E5E5E5"> about</font><font color="#CCCCCC"> it I spent that weekend</font>

256
00:09:25,310 --> 00:09:29,630
<font color="#CCCCCC">running this small POC which I called</font>

257
00:09:27,440 --> 00:09:32,029
out thin coded command for like<font color="#E5E5E5"> fin</font>

258
00:09:29,630 --> 00:09:33,500
<font color="#E5E5E5">style</font><font color="#CCCCCC"> encoding and</font><font color="#E5E5E5"> I released it</font><font color="#CCCCCC"> on</font>

259
00:09:32,029 --> 00:09:35,689
github<font color="#CCCCCC"> that Sunday and as soon</font><font color="#E5E5E5"> as I</font>

260
00:09:33,500 --> 00:09:37,699
released it<font color="#E5E5E5"> I kind of sat back</font><font color="#CCCCCC"> and</font>

261
00:09:35,690 --> 00:09:40,399
thought I wonder<font color="#E5E5E5"> if there's</font><font color="#CCCCCC"> more here</font>

262
00:09:37,699 --> 00:09:41,870
this was one really<font color="#E5E5E5"> cool trick and I</font>

263
00:09:40,399 --> 00:09:44,779
wrote the POC to<font color="#E5E5E5"> come generate some</font>

264
00:09:41,870 --> 00:09:46,670
payloads to<font color="#E5E5E5"> test my detection but what</font>

265
00:09:44,779 --> 00:09:48,470
else does fin<font color="#E5E5E5"> seven know that I don't</font>

266
00:09:46,670 --> 00:09:52,310
<font color="#CCCCCC">about</font><font color="#E5E5E5"> command</font><font color="#CCCCCC"> X see what other</font><font color="#E5E5E5"> hidden</font>

267
00:09:48,470 --> 00:09:53,959
gems are there<font color="#E5E5E5"> in this tool that that we</font>

268
00:09:52,310 --> 00:09:55,040
may get blindsided by in a<font color="#E5E5E5"> couple</font><font color="#CCCCCC"> weeks</font>

269
00:09:53,959 --> 00:09:56,479
or a couple months<font color="#E5E5E5"> or maybe</font><font color="#CCCCCC"> that's been</font>

270
00:09:55,040 --> 00:10:00,620
used for<font color="#CCCCCC"> years that</font><font color="#E5E5E5"> we just never seen</font>

271
00:09:56,480 --> 00:10:02,720
it<font color="#E5E5E5"> so implications of the kind of</font>

272
00:10:00,620 --> 00:10:04,730
<font color="#E5E5E5">obfuscation we're about to talk about I</font>

273
00:10:02,720 --> 00:10:07,310
would<font color="#E5E5E5"> argue that it affects both dynamic</font>

274
00:10:04,730 --> 00:10:10,160
<font color="#E5E5E5">and</font><font color="#CCCCCC"> Static detections</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> I'll kind</font><font color="#E5E5E5"> of</font>

275
00:10:07,310 --> 00:10:12,319
revisit<font color="#E5E5E5"> this throughout but but</font>

276
00:10:10,160 --> 00:10:14,079
basically<font color="#CCCCCC"> as a defender a lot of times</font>

277
00:10:12,319 --> 00:10:16,430
<font color="#CCCCCC">we'll think</font><font color="#E5E5E5"> this is only going to affect</font>

278
00:10:14,079 --> 00:10:18,459
static detection it's like if you're

279
00:10:16,430 --> 00:10:20,479
running yard rules against link files or

280
00:10:18,459 --> 00:10:23,268
extracting macros<font color="#E5E5E5"> and looking at that</font>

281
00:10:20,480 --> 00:10:24,620
<font color="#E5E5E5">but</font><font color="#CCCCCC"> you know the these characters will</font>

282
00:10:23,269 --> 00:10:26,540
be removed when it<font color="#E5E5E5"> actually runs on the</font>

283
00:10:24,620 --> 00:10:28,940
command line<font color="#CCCCCC"> in</font><font color="#E5E5E5"> that link file example</font>

284
00:10:26,540 --> 00:10:30,529
when<font color="#CCCCCC"> w script actually</font><font color="#E5E5E5"> runs that's true</font>

285
00:10:28,940 --> 00:10:32,600
there<font color="#CCCCCC"> is not</font><font color="#E5E5E5"> going to be an @ sign there</font>

286
00:10:30,529 --> 00:10:35,720
but there are things<font color="#CCCCCC"> that we can do that</font>

287
00:10:32,600 --> 00:10:38,000
remain<font color="#E5E5E5"> so we'll look at</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so</font>

288
00:10:35,720 --> 00:10:39,589
basically<font color="#E5E5E5"> with this research and with</font>

289
00:10:38,000 --> 00:10:41,690
the<font color="#E5E5E5"> tool that I released with it you'll</font>

290
00:10:39,589 --> 00:10:44,750
be able to take any arbitrary<font color="#CCCCCC"> input</font>

291
00:10:41,690 --> 00:10:45,350
command<font color="#E5E5E5"> for command</font><font color="#CCCCCC"> XE and start to</font>

292
00:10:44,750 --> 00:10:49,550
apply it

293
00:10:45,350 --> 00:10:51,860
layer upon layer of obfuscation<font color="#CCCCCC"> it's</font>

294
00:10:49,550 --> 00:10:54,229
something<font color="#E5E5E5"> that looks like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> let's see</font>

295
00:10:51,860 --> 00:10:55,760
how it works<font color="#E5E5E5"> so hang on tight there's a</font>

296
00:10:54,230 --> 00:10:57,740
lot of information<font color="#CCCCCC"> we're gonna move</font>

297
00:10:55,760 --> 00:10:58,819
really fast<font color="#CCCCCC"> we're going to visit all</font>

298
00:10:57,740 --> 00:11:00,769
<font color="#E5E5E5">these building blocks we're going to</font>

299
00:10:58,819 --> 00:11:02,339
stack up<font color="#CCCCCC"> to at the end be able to do</font>

300
00:11:00,769 --> 00:11:03,990
some crazy payload in

301
00:11:02,339 --> 00:11:05,370
coding and affiliation<font color="#E5E5E5"> and then we're</font>

302
00:11:03,990 --> 00:11:08,879
<font color="#E5E5E5">going to talk about how in</font><font color="#CCCCCC"> the world</font><font color="#E5E5E5"> you</font>

303
00:11:05,370 --> 00:11:10,920
go about detecting<font color="#E5E5E5"> this stuff so let's</font>

304
00:11:08,879 --> 00:11:13,740
start with obfuscation of binary names

305
00:11:10,920 --> 00:11:15,180
now a lot of<font color="#E5E5E5"> attackers know that that</font>

306
00:11:13,740 --> 00:11:17,370
<font color="#CCCCCC">defenders will write detections that</font>

307
00:11:15,180 --> 00:11:21,449
look like process name is command<font color="#CCCCCC"> X E</font>

308
00:11:17,370 --> 00:11:23,759
and argument contains a B or<font color="#CCCCCC"> C or</font><font color="#E5E5E5"> D and</font>

309
00:11:21,449 --> 00:11:26,248
E or blah blah blah<font color="#E5E5E5"> so an attacker could</font>

310
00:11:23,759 --> 00:11:29,160
just simply copy command<font color="#E5E5E5"> X</font><font color="#CCCCCC"> E</font><font color="#E5E5E5"> - like</font>

311
00:11:26,249 --> 00:11:31,439
benign<font color="#E5E5E5"> XE that's one way of evading</font>

312
00:11:29,160 --> 00:11:32,160
<font color="#E5E5E5">based on binary name but that's not what</font>

313
00:11:31,439 --> 00:11:34,410
I'm talking<font color="#CCCCCC"> about</font>

314
00:11:32,160 --> 00:11:36,870
<font color="#E5E5E5">there's also a lot of</font><font color="#CCCCCC"> kind of command on</font>

315
00:11:34,410 --> 00:11:39,360
XE substitutes<font color="#E5E5E5"> so to break parent-child</font>

316
00:11:36,870 --> 00:11:40,800
process relationships<font color="#CCCCCC"> if you have a rule</font>

317
00:11:39,360 --> 00:11:42,870
looking for<font color="#E5E5E5"> windward spawn and command</font>

318
00:11:40,800 --> 00:11:45,389
<font color="#CCCCCC">well an attacker could just use for</font>

319
00:11:42,870 --> 00:11:47,189
<font color="#CCCCCC">files XE and launch their code</font><font color="#E5E5E5"> or they</font>

320
00:11:45,389 --> 00:11:49,139
<font color="#CCCCCC">can use PCA</font><font color="#E5E5E5"> lua or they could use run</font>

321
00:11:47,189 --> 00:11:51,110
dll or MSHDA or all these sorts of

322
00:11:49,139 --> 00:11:54,209
things<font color="#CCCCCC"> some more obvious than others</font>

323
00:11:51,110 --> 00:11:55,709
<font color="#E5E5E5">there's actually there's kind of the the</font>

324
00:11:54,209 --> 00:11:57,599
term wall<font color="#E5E5E5"> bins has been getting pretty</font>

325
00:11:55,709 --> 00:11:58,739
popular<font color="#CCCCCC"> recently</font><font color="#E5E5E5"> and so a lot of</font>

326
00:11:57,600 --> 00:11:59,819
<font color="#CCCCCC">different people</font><font color="#E5E5E5"> are tracking a lot of</font>

327
00:11:58,740 --> 00:12:01,499
these<font color="#E5E5E5"> native binaries that you could</font>

328
00:11:59,819 --> 00:12:03,509
start<font color="#E5E5E5"> looking</font><font color="#CCCCCC"> for in</font><font color="#E5E5E5"> addition to command</font>

329
00:12:01,499 --> 00:12:06,059
<font color="#CCCCCC">XE</font><font color="#E5E5E5"> but that's also</font><font color="#CCCCCC"> not what I'm talking</font>

330
00:12:03,509 --> 00:12:08,579
about<font color="#CCCCCC"> I'm looking at just purely</font><font color="#E5E5E5"> the</font>

331
00:12:06,059 --> 00:12:11,699
syntactical obfuscation<font color="#CCCCCC"> of the string</font>

332
00:12:08,579 --> 00:12:13,709
<font color="#E5E5E5">CMD and the string powershell as to</font>

333
00:12:11,699 --> 00:12:16,740
specific binary names that we'd like<font color="#E5E5E5"> to</font>

334
00:12:13,709 --> 00:12:18,508
<font color="#CCCCCC">obfuscate</font><font color="#E5E5E5"> so one way we</font><font color="#CCCCCC"> can do this</font><font color="#E5E5E5"> is</font>

335
00:12:16,740 --> 00:12:20,459
through environment variable encoding

336
00:12:18,509 --> 00:12:22,589
now this is going<font color="#E5E5E5"> to buy you good static</font>

337
00:12:20,459 --> 00:12:23,790
detection like in batch files or like if

338
00:12:22,589 --> 00:12:26,370
you're looking<font color="#CCCCCC"> at persistence in</font>

339
00:12:23,790 --> 00:12:28,349
registry<font color="#E5E5E5"> but in most</font><font color="#CCCCCC"> cases this will</font>

340
00:12:26,370 --> 00:12:30,480
<font color="#E5E5E5">resolve on the command line so if you're</font>

341
00:12:28,350 --> 00:12:33,179
<font color="#CCCCCC">looking at like system on Eid one or</font>

342
00:12:30,480 --> 00:12:35,850
Security Eid<font color="#E5E5E5"> 46 88 for process execution</font>

343
00:12:33,179 --> 00:12:37,499
events for the most part this will be<font color="#CCCCCC"> D</font>

344
00:12:35,850 --> 00:12:39,449
<font color="#E5E5E5">office gated but what are we talking</font>

345
00:12:37,499 --> 00:12:41,579
about<font color="#E5E5E5"> if we echo the environment</font>

346
00:12:39,449 --> 00:12:43,498
variable program data<font color="#CCCCCC"> its C program data</font>

347
00:12:41,579 --> 00:12:45,870
or whatever<font color="#CCCCCC"> Drive you have mapped so if</font>

348
00:12:43,499 --> 00:12:47,610
I want<font color="#E5E5E5"> to produce the string CMD to</font>

349
00:12:45,870 --> 00:12:50,490
spawn command<font color="#E5E5E5"> I can</font><font color="#CCCCCC"> just start to take</font>

350
00:12:47,610 --> 00:12:53,730
<font color="#CCCCCC">substrings</font><font color="#E5E5E5"> with this</font><font color="#CCCCCC"> colon</font><font color="#E5E5E5"> tilde first</font>

351
00:12:50,490 --> 00:12:56,370
index comma<font color="#E5E5E5"> look ahead and start to</font>

352
00:12:53,730 --> 00:12:57,660
concatenate<font color="#E5E5E5"> stuff this way you can do</font>

353
00:12:56,370 --> 00:13:01,499
the same thing with<font color="#CCCCCC"> PowerShell</font><font color="#E5E5E5"> as in the</font>

354
00:12:57,660 --> 00:13:02,939
bottom<font color="#E5E5E5"> and however I wanted</font><font color="#CCCCCC"> something</font>

355
00:13:01,499 --> 00:13:04,499
that<font color="#E5E5E5"> didn't resolve on the command line</font>

356
00:13:02,939 --> 00:13:06,149
<font color="#CCCCCC">because if you</font><font color="#E5E5E5"> copy and</font><font color="#CCCCCC"> paste this into</font>

357
00:13:04,499 --> 00:13:07,889
<font color="#E5E5E5">the command prompt or run to like double</font>

358
00:13:06,149 --> 00:13:10,009
script shell when you actually see the

359
00:13:07,889 --> 00:13:12,509
command<font color="#CCCCCC"> that runs it's</font><font color="#E5E5E5"> D obfuscated</font>

360
00:13:10,009 --> 00:13:14,880
<font color="#E5E5E5">however there are ways</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can produce</font>

361
00:13:12,509 --> 00:13:16,680
the string<font color="#E5E5E5"> a man in power cell without</font>

362
00:13:14,880 --> 00:13:20,250
actually being resolved<font color="#E5E5E5"> in that</font><font color="#CCCCCC"> initial</font>

363
00:13:16,680 --> 00:13:22,319
command<font color="#E5E5E5"> so set a so sand f-type</font><font color="#CCCCCC"> these</font>

364
00:13:20,250 --> 00:13:24,840
are just three<font color="#E5E5E5"> internal commands that I</font>

365
00:13:22,320 --> 00:13:27,150
came<font color="#CCCCCC"> across</font><font color="#E5E5E5"> as being</font><font color="#CCCCCC"> useful</font><font color="#E5E5E5"> to a bit</font>

366
00:13:24,840 --> 00:13:28,530
basically reassemble these strings<font color="#E5E5E5"> if</font>

367
00:13:27,150 --> 00:13:30,060
you run set it'll<font color="#E5E5E5"> show you all the</font>

368
00:13:28,530 --> 00:13:32,160
environment variable names plus the

369
00:13:30,060 --> 00:13:33,959
values associate<font color="#CCCCCC"> M type are actually</font>

370
00:13:32,160 --> 00:13:36,420
related<font color="#E5E5E5"> so a so-so</font><font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to show the</font>

371
00:13:33,960 --> 00:13:39,390
association<font color="#CCCCCC"> between a file extension and</font>

372
00:13:36,420 --> 00:13:42,660
<font color="#E5E5E5">the associated type and then F type will</font>

373
00:13:39,390 --> 00:13:44,490
map<font color="#E5E5E5"> that type to what binary should</font><font color="#CCCCCC"> I</font>

374
00:13:42,660 --> 00:13:47,550
run with what arguments to run this

375
00:13:44,490 --> 00:13:49,560
thing<font color="#E5E5E5"> but the reason I chose these is</font>

376
00:13:47,550 --> 00:13:51,329
<font color="#E5E5E5">because each of them if you run</font><font color="#CCCCCC"> just the</font>

377
00:13:49,560 --> 00:13:53,400
command<font color="#E5E5E5"> you'll get a lot of standard</font>

378
00:13:51,330 --> 00:13:55,860
output and they will contain the string

379
00:13:53,400 --> 00:13:58,560
CMD or<font color="#CCCCCC"> PowerShell</font><font color="#E5E5E5"> that's it we're in the</font>

380
00:13:55,860 --> 00:14:00,840
output so let's<font color="#CCCCCC"> take the sets it's the</font>

381
00:13:58,560 --> 00:14:03,060
most kind of straightforward<font color="#E5E5E5"> example so</font>

382
00:14:00,840 --> 00:14:05,340
if I do set then<font color="#E5E5E5"> fine string PowerShell</font>

383
00:14:03,060 --> 00:14:06,810
<font color="#CCCCCC">I get two</font><font color="#E5E5E5"> hits that come back</font><font color="#CCCCCC"> one is for</font>

384
00:14:05,340 --> 00:14:09,600
the path variable<font color="#CCCCCC"> the others rupiahs</font>

385
00:14:06,810 --> 00:14:11,489
module path well if I'm an attacker<font color="#E5E5E5"> then</font>

386
00:14:09,600 --> 00:14:12,780
<font color="#E5E5E5">the path variable is likely going to be</font>

387
00:14:11,490 --> 00:14:14,220
really different a lot<font color="#CCCCCC"> of different</font>

388
00:14:12,780 --> 00:14:15,839
<font color="#CCCCCC">environments</font><font color="#E5E5E5"> so maybe I'll stick with PS</font>

389
00:14:14,220 --> 00:14:17,490
module path maybe that's going<font color="#E5E5E5"> to be</font>

390
00:14:15,840 --> 00:14:19,710
<font color="#E5E5E5">more consistent for what I'm going for</font>

391
00:14:17,490 --> 00:14:22,410
so instead of<font color="#CCCCCC"> doing</font><font color="#E5E5E5"> fine string PS</font>

392
00:14:19,710 --> 00:14:24,030
module path<font color="#E5E5E5"> I'm going to do</font><font color="#CCCCCC"> PSM and</font><font color="#E5E5E5"> that</font>

393
00:14:22,410 --> 00:14:25,140
would also<font color="#CCCCCC"> give me</font><font color="#E5E5E5"> the result and at the</font>

394
00:14:24,030 --> 00:14:26,730
<font color="#E5E5E5">bottom you'll see it's a code snippet</font>

395
00:14:25,140 --> 00:14:28,080
from<font color="#E5E5E5"> invoked ossification that will</font>

396
00:14:26,730 --> 00:14:30,390
<font color="#E5E5E5">basically randomly choose one</font><font color="#CCCCCC"> of these</font>

397
00:14:28,080 --> 00:14:33,030
sub strings that will produce just the

398
00:14:30,390 --> 00:14:35,460
result for PS module path so this<font color="#E5E5E5"> is the</font>

399
00:14:33,030 --> 00:14:38,459
exact<font color="#E5E5E5"> text that we get this bottom box</font>

400
00:14:35,460 --> 00:14:40,110
here<font color="#E5E5E5"> so now we</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> see there's two</font>

401
00:14:38,460 --> 00:14:41,970
places<font color="#CCCCCC"> that the string powershell shows</font>

402
00:14:40,110 --> 00:14:44,520
up what we want to do is we want<font color="#CCCCCC"> to</font>

403
00:14:41,970 --> 00:14:46,740
basically<font color="#E5E5E5"> lift both of those out of the</font>

404
00:14:44,520 --> 00:14:48,420
text and<font color="#E5E5E5"> the way we can do that is look</font>

405
00:14:46,740 --> 00:14:50,190
<font color="#E5E5E5">at what are the characters the delimiter</font>

406
00:14:48,420 --> 00:14:53,160
is on either side of<font color="#CCCCCC"> powershell</font><font color="#E5E5E5"> and in</font>

407
00:14:50,190 --> 00:14:56,970
this case it's the<font color="#CCCCCC"> lowercase s and the</font>

408
00:14:53,160 --> 00:14:59,160
the backslash for both examples so now

409
00:14:56,970 --> 00:15:01,050
if we<font color="#E5E5E5"> do limit on the lowercase s in the</font>

410
00:14:59,160 --> 00:15:03,180
backslash<font color="#E5E5E5"> it actually breaks up this</font>

411
00:15:01,050 --> 00:15:04,469
value<font color="#E5E5E5"> into 13 pieces and we're</font>

412
00:15:03,180 --> 00:15:06,060
interested<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> fourth</font><font color="#E5E5E5"> and the</font>

413
00:15:04,470 --> 00:15:08,490
<font color="#CCCCCC">eleventh piece both of those being</font>

414
00:15:06,060 --> 00:15:10,260
<font color="#CCCCCC">powershell so how can we actually do</font>

415
00:15:08,490 --> 00:15:13,650
this<font color="#E5E5E5"> on the command</font><font color="#CCCCCC"> line using</font><font color="#E5E5E5"> just</font>

416
00:15:10,260 --> 00:15:16,470
command<font color="#CCCCCC"> XE well the for loop</font><font color="#E5E5E5"> and command</font>

417
00:15:13,650 --> 00:15:18,329
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> actually has a dilemma</font><font color="#E5E5E5"> argument</font>

418
00:15:16,470 --> 00:15:20,880
<font color="#E5E5E5">so what we can do is we can run the for</font>

419
00:15:18,330 --> 00:15:23,280
loop<font color="#E5E5E5"> and at the very end</font><font color="#CCCCCC"> we run our sub</font>

420
00:15:20,880 --> 00:15:25,589
command which is<font color="#CCCCCC"> our set fine string</font><font color="#E5E5E5"> PSM</font>

421
00:15:23,280 --> 00:15:27,089
and then takes those results<font color="#CCCCCC"> it applies</font>

422
00:15:25,589 --> 00:15:27,590
the delimiter<font color="#CCCCCC"> that you gave and</font><font color="#E5E5E5"> then you</font>

423
00:15:27,089 --> 00:15:29,630
can say

424
00:15:27,590 --> 00:15:31,760
the<font color="#CCCCCC"> fourth token and then it returns a</font>

425
00:15:29,630 --> 00:15:33,740
string<font color="#CCCCCC"> PowerShell and</font><font color="#E5E5E5"> we can either just</font>

426
00:15:31,760 --> 00:15:35,720
echo<font color="#E5E5E5"> that string or we can just say do</font>

427
00:15:33,740 --> 00:15:37,250
the string that comes<font color="#CCCCCC"> back and it</font>

428
00:15:35,720 --> 00:15:39,530
actually<font color="#E5E5E5"> executes the string that comes</font>

429
00:15:37,250 --> 00:15:41,360
<font color="#E5E5E5">back so in this example the for loop</font>

430
00:15:39,530 --> 00:15:43,430
runs it extracts a string power show and

431
00:15:41,360 --> 00:15:44,660
then invokes it<font color="#CCCCCC"> or execute it and in</font>

432
00:15:43,430 --> 00:15:48,589
this<font color="#E5E5E5"> case drop this into</font><font color="#CCCCCC"> a PowerShell</font>

433
00:15:44,660 --> 00:15:51,319
prompt so in real<font color="#E5E5E5"> quick why this is</font>

434
00:15:48,590 --> 00:15:53,120
important if you're<font color="#E5E5E5"> looking at process</font>

435
00:15:51,320 --> 00:15:56,120
executions<font color="#E5E5E5"> you're going to see command</font>

436
00:15:53,120 --> 00:15:57,320
dot XE run and nowhere<font color="#CCCCCC"> in that argument</font>

437
00:15:56,120 --> 00:15:59,120
isn't<font color="#E5E5E5"> going to be the string</font><font color="#CCCCCC"> PowerShell</font>

438
00:15:57,320 --> 00:16:01,520
<font color="#CCCCCC">but you're obviously</font><font color="#E5E5E5"> still going to see</font>

439
00:15:59,120 --> 00:16:02,930
<font color="#E5E5E5">PowerShell run as a child process</font><font color="#CCCCCC"> so</font>

440
00:16:01,520 --> 00:16:05,060
this<font color="#E5E5E5"> isn't removing the process</font>

441
00:16:02,930 --> 00:16:07,160
<font color="#E5E5E5">execution</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> it's basically changing</font>

442
00:16:05,060 --> 00:16:11,839
the<font color="#E5E5E5"> dynamic indicator itself within the</font>

443
00:16:07,160 --> 00:16:13,610
calling process so that was binary name

444
00:16:11,840 --> 00:16:15,700
<font color="#CCCCCC">office keishon just kind of</font><font color="#E5E5E5"> a quick look</font>

445
00:16:13,610 --> 00:16:19,460
at<font color="#E5E5E5"> that character insertion obfuscation</font>

446
00:16:15,700 --> 00:16:21,710
<font color="#CCCCCC">what does this look like in most cases</font>

447
00:16:19,460 --> 00:16:23,330
this is<font color="#E5E5E5"> more useful</font><font color="#CCCCCC"> for evading static</font>

448
00:16:21,710 --> 00:16:25,280
signatures but there's plenty<font color="#CCCCCC"> of dynamic</font>

449
00:16:23,330 --> 00:16:27,470
use<font color="#CCCCCC"> cases that I think aren't</font><font color="#E5E5E5"> talked</font>

450
00:16:25,280 --> 00:16:30,500
about quite<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> caret</font><font color="#CCCCCC"> character is</font>

451
00:16:27,470 --> 00:16:31,970
the<font color="#E5E5E5"> most common one the the double</font>

452
00:16:30,500 --> 00:16:33,380
quotes<font color="#E5E5E5"> as long as they're evenly</font>

453
00:16:31,970 --> 00:16:35,090
balanced<font color="#E5E5E5"> that's really important and</font>

454
00:16:33,380 --> 00:16:37,070
<font color="#E5E5E5">we'll look we'll see why in the later</font>

455
00:16:35,090 --> 00:16:38,870
example<font color="#E5E5E5"> this is what we saw apt</font>

456
00:16:37,070 --> 00:16:40,900
<font color="#CCCCCC">thirty-two using amongst a lot of</font><font color="#E5E5E5"> others</font>

457
00:16:38,870 --> 00:16:42,770
but<font color="#E5E5E5"> it has some really nice features</font>

458
00:16:40,900 --> 00:16:44,420
<font color="#E5E5E5">compared to the caret character</font>

459
00:16:42,770 --> 00:16:47,180
<font color="#E5E5E5">especially</font><font color="#CCCCCC"> when you</font><font color="#E5E5E5"> have a lot</font><font color="#CCCCCC"> of child</font>

460
00:16:44,420 --> 00:16:48,349
processes because like here<font color="#CCCCCC"> escape</font>

461
00:16:47,180 --> 00:16:50,030
character if you have<font color="#E5E5E5"> ten child</font>

462
00:16:48,350 --> 00:16:51,620
<font color="#E5E5E5">processes you have</font><font color="#CCCCCC"> to double up your</font>

463
00:16:50,030 --> 00:16:53,630
<font color="#E5E5E5">escaping at every layer because it gets</font>

464
00:16:51,620 --> 00:16:55,490
chopped in half<font color="#E5E5E5"> every single time with a</font>

465
00:16:53,630 --> 00:16:57,080
double<font color="#E5E5E5"> quote there's no escaping of it</font>

466
00:16:55,490 --> 00:16:59,440
so it'll persist<font color="#E5E5E5"> all the way down no</font>

467
00:16:57,080 --> 00:17:01,430
<font color="#E5E5E5">matter how many child processes you have</font>

468
00:16:59,440 --> 00:17:03,290
encapsulating<font color="#E5E5E5"> parentheses we actually</font>

469
00:17:01,430 --> 00:17:04,339
the first<font color="#E5E5E5"> time I saw this being used and</font>

470
00:17:03,290 --> 00:17:05,810
<font color="#E5E5E5">I don't</font><font color="#CCCCCC"> think it</font><font color="#E5E5E5"> was being</font><font color="#CCCCCC"> used for</font>

471
00:17:04,339 --> 00:17:07,839
obfuscation purposes it wasn't

472
00:17:05,810 --> 00:17:11,990
investigating some newscaster activity

473
00:17:07,839 --> 00:17:13,609
<font color="#E5E5E5">but for any for</font><font color="#CCCCCC"> any command and in some</font>

474
00:17:11,990 --> 00:17:16,280
sub commands you<font color="#E5E5E5"> can actually wrap with</font>

475
00:17:13,609 --> 00:17:18,800
as many<font color="#CCCCCC"> layers as you</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> evenly</font>

476
00:17:16,280 --> 00:17:20,959
<font color="#E5E5E5">balanced parentheses and this could be</font>

477
00:17:18,800 --> 00:17:22,339
important<font color="#E5E5E5"> it has</font><font color="#CCCCCC"> a defender you're</font>

478
00:17:20,959 --> 00:17:24,680
writing detection is looking for like

479
00:17:22,339 --> 00:17:27,560
catenate<font color="#CCCCCC"> it commands using</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> the</font>

480
00:17:24,680 --> 00:17:29,690
single<font color="#CCCCCC"> or double ampersand</font><font color="#E5E5E5"> or the the</font>

481
00:17:27,560 --> 00:17:32,120
double<font color="#CCCCCC"> vertical pipes and then looking</font>

482
00:17:29,690 --> 00:17:33,440
<font color="#E5E5E5">for</font><font color="#CCCCCC"> whitespace followed by</font><font color="#E5E5E5"> that stat or</font>

483
00:17:32,120 --> 00:17:34,820
some other command well now you can

484
00:17:33,440 --> 00:17:36,470
actually put a<font color="#E5E5E5"> lot of parentheses in</font>

485
00:17:34,820 --> 00:17:37,730
between there<font color="#CCCCCC"> so if you're writing</font><font color="#E5E5E5"> those</font>

486
00:17:36,470 --> 00:17:39,250
kinds of rules you need<font color="#E5E5E5"> to take that</font>

487
00:17:37,730 --> 00:17:41,420
<font color="#E5E5E5">into account as well</font>

488
00:17:39,250 --> 00:17:42,860
leading and trailing special characters

489
00:17:41,420 --> 00:17:45,710
<font color="#E5E5E5">this may be a little hard to see</font><font color="#CCCCCC"> on this</font>

490
00:17:42,860 --> 00:17:47,870
slide but in after looking at the

491
00:17:45,710 --> 00:17:50,180
<font color="#E5E5E5">parentheses that got me wondering what</font>

492
00:17:47,870 --> 00:17:51,620
additional characters exist<font color="#E5E5E5"> that you can</font>

493
00:17:50,180 --> 00:17:53,390
still put in a command<font color="#CCCCCC"> that's that will</font>

494
00:17:51,620 --> 00:17:54,649
function properly<font color="#CCCCCC"> and so I wrote a</font>

495
00:17:53,390 --> 00:17:56,210
<font color="#E5E5E5">little</font><font color="#CCCCCC"> fuzzy</font><font color="#E5E5E5"> script to go through and</font>

496
00:17:54,650 --> 00:17:57,530
<font color="#E5E5E5">start just injecting characters and</font>

497
00:17:56,210 --> 00:18:00,200
running the<font color="#E5E5E5"> command and seeing if the</font>

498
00:17:57,530 --> 00:18:01,940
<font color="#E5E5E5">expected output came out and so with</font>

499
00:18:00,200 --> 00:18:04,070
that tool I basically came across the

500
00:18:01,940 --> 00:18:07,100
comma<font color="#CCCCCC"> and the semicolon now you can put</font>

501
00:18:04,070 --> 00:18:09,350
a comma or semicolon<font color="#E5E5E5"> almost anywhere</font><font color="#CCCCCC"> or</font>

502
00:18:07,100 --> 00:18:10,909
<font color="#CCCCCC">whitespace exists and basically it's</font>

503
00:18:09,350 --> 00:18:13,219
when<font color="#E5E5E5"> whitespace is acting as a delimiter</font>

504
00:18:10,910 --> 00:18:14,930
<font color="#E5E5E5">the comma and semicolon can also be used</font>

505
00:18:13,220 --> 00:18:16,580
as<font color="#CCCCCC"> a</font><font color="#E5E5E5"> delimiter characters now this would</font>

506
00:18:14,930 --> 00:18:19,040
<font color="#E5E5E5">get</font><font color="#CCCCCC"> really crazy</font><font color="#E5E5E5"> really fast when we</font>

507
00:18:16,580 --> 00:18:21,110
start add all these<font color="#E5E5E5"> pieces together</font>

508
00:18:19,040 --> 00:18:22,700
standard input argument hiding we looked

509
00:18:21,110 --> 00:18:25,870
at this<font color="#E5E5E5"> in the previous example you</font><font color="#CCCCCC"> can</font>

510
00:18:22,700 --> 00:18:27,860
echo content<font color="#E5E5E5"> into command um</font>

511
00:18:25,870 --> 00:18:29,510
non-existent environment variables<font color="#E5E5E5"> this</font>

512
00:18:27,860 --> 00:18:30,979
<font color="#E5E5E5">is</font><font color="#CCCCCC"> only good for static like for batch</font>

513
00:18:29,510 --> 00:18:33,290
files it doesn't work on the command

514
00:18:30,980 --> 00:18:35,120
<font color="#CCCCCC">line but and this this was actually</font><font color="#E5E5E5"> was</font>

515
00:18:33,290 --> 00:18:37,250
<font color="#E5E5E5">from a blog post that someone wrote</font>

516
00:18:35,120 --> 00:18:39,409
several<font color="#CCCCCC"> years ago so I didn't I didn't</font>

517
00:18:37,250 --> 00:18:40,970
discover this<font color="#CCCCCC"> but basically</font><font color="#E5E5E5"> you can put</font>

518
00:18:39,410 --> 00:18:42,380
<font color="#CCCCCC">non-existent environment variables all</font>

519
00:18:40,970 --> 00:18:44,480
throughout the command<font color="#E5E5E5"> and the batch</font>

520
00:18:42,380 --> 00:18:46,340
file will essentially<font color="#E5E5E5"> resolve it to</font>

521
00:18:44,480 --> 00:18:48,680
<font color="#E5E5E5">nothing</font><font color="#CCCCCC"> and then the command is</font><font color="#E5E5E5"> D</font>

522
00:18:46,340 --> 00:18:50,270
obfuscated when it runs<font color="#CCCCCC"> but</font><font color="#E5E5E5"> again it's</font>

523
00:18:48,680 --> 00:18:52,820
only for static batch file stuff it

524
00:18:50,270 --> 00:18:55,580
<font color="#E5E5E5">doesn't work on the command line setting</font>

525
00:18:52,820 --> 00:18:57,790
<font color="#E5E5E5">custom environment variables</font><font color="#CCCCCC"> we've seen</font>

526
00:18:55,580 --> 00:18:59,990
<font color="#E5E5E5">this used primarily in like linked files</font>

527
00:18:57,790 --> 00:19:01,460
<font color="#E5E5E5">where you can basically chop up in this</font>

528
00:18:59,990 --> 00:19:03,170
case they want to chop up the string

529
00:19:01,460 --> 00:19:05,060
<font color="#CCCCCC">PowerShell</font><font color="#E5E5E5"> and so they set the character</font>

530
00:19:03,170 --> 00:19:07,190
<font color="#E5E5E5">P</font><font color="#CCCCCC"> into a variable and then they call</font>

531
00:19:05,060 --> 00:19:08,690
that<font color="#E5E5E5"> variable in the same session and</font>

532
00:19:07,190 --> 00:19:10,130
we'll look at<font color="#E5E5E5"> some of the components of</font>

533
00:19:08,690 --> 00:19:12,080
<font color="#E5E5E5">this command that let you do that</font><font color="#CCCCCC"> all</font>

534
00:19:10,130 --> 00:19:13,730
within<font color="#CCCCCC"> this</font><font color="#E5E5E5"> single all within the same</font>

535
00:19:12,080 --> 00:19:15,560
<font color="#E5E5E5">process which is pretty interesting and</font>

536
00:19:13,730 --> 00:19:17,420
<font color="#E5E5E5">actually a core building block of what's</font>

537
00:19:15,560 --> 00:19:19,250
what<font color="#E5E5E5"> we'll talk about</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> the next</font><font color="#CCCCCC"> few</font>

538
00:19:17,420 --> 00:19:20,750
slides<font color="#CCCCCC"> and then as we discussed earlier</font>

539
00:19:19,250 --> 00:19:22,280
<font color="#CCCCCC">you can use existing</font><font color="#E5E5E5"> environment</font>

540
00:19:20,750 --> 00:19:27,140
variables<font color="#E5E5E5"> and just start to concatenate</font>

541
00:19:22,280 --> 00:19:29,649
substrings<font color="#E5E5E5"> of existing values so when I</font>

542
00:19:27,140 --> 00:19:32,090
released<font color="#E5E5E5"> the</font><font color="#CCCCCC"> out Finn coded command POC</font>

543
00:19:29,650 --> 00:19:34,340
<font color="#CCCCCC">one of the options</font><font color="#E5E5E5"> was do you want your</font>

544
00:19:32,090 --> 00:19:36,470
final<font color="#E5E5E5"> command to be run by command</font><font color="#CCCCCC"> X E</font>

545
00:19:34,340 --> 00:19:37,850
or<font color="#E5E5E5"> PowerShell dot exe and so I also</font>

546
00:19:36,470 --> 00:19:40,760
included<font color="#E5E5E5"> a couple just kind of like</font>

547
00:19:37,850 --> 00:19:43,129
pre-built obfuscated syntaxes for<font color="#E5E5E5"> doing</font>

548
00:19:40,760 --> 00:19:44,750
command or<font color="#CCCCCC"> powershell and these are the</font>

549
00:19:43,130 --> 00:19:46,040
two tweets<font color="#CCCCCC"> i put out</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> kind of</font>

550
00:19:44,750 --> 00:19:47,790
showing you<font color="#E5E5E5"> can run command or</font>

551
00:19:46,040 --> 00:19:50,220
<font color="#E5E5E5">powershell with these concatenated</font>

552
00:19:47,790 --> 00:19:52,680
substrings<font color="#E5E5E5"> then someone replied</font><font color="#CCCCCC"> on</font>

553
00:19:50,220 --> 00:19:55,170
<font color="#E5E5E5">Twitter with this an entire command of</font>

554
00:19:52,680 --> 00:19:56,640
nothing but<font color="#CCCCCC"> Katan aidid substrings</font><font color="#E5E5E5"> funny</font>

555
00:19:55,170 --> 00:19:58,050
enough some<font color="#CCCCCC"> people actually</font><font color="#E5E5E5"> ran this and</font>

556
00:19:56,640 --> 00:20:00,060
then complain<font color="#E5E5E5"> to me that i infected</font>

557
00:19:58,050 --> 00:20:00,930
their system<font color="#E5E5E5"> and it's like but</font><font color="#CCCCCC"> i didn't</font>

558
00:20:00,060 --> 00:20:03,060
<font color="#E5E5E5">even write this what are you doing</font>

559
00:20:00,930 --> 00:20:10,050
<font color="#E5E5E5">running code on the internet so that</font><font color="#CCCCCC"> was</font>

560
00:20:03,060 --> 00:20:11,490
<font color="#E5E5E5">interesting so once in in the research</font>

561
00:20:10,050 --> 00:20:13,080
process once<font color="#E5E5E5"> I started to find some of</font>

562
00:20:11,490 --> 00:20:15,150
these<font color="#E5E5E5"> techniques as soon as I found</font>

563
00:20:13,080 --> 00:20:16,530
another technique<font color="#E5E5E5"> I documented it but</font>

564
00:20:15,150 --> 00:20:18,300
then I built<font color="#E5E5E5"> the detection for it and</font>

565
00:20:16,530 --> 00:20:19,770
said have<font color="#CCCCCC"> we ever seen this before</font><font color="#E5E5E5"> I</font>

566
00:20:18,300 --> 00:20:21,570
started<font color="#CCCCCC"> to search our internal</font>

567
00:20:19,770 --> 00:20:23,280
repositories as well<font color="#CCCCCC"> as like doing like</font>

568
00:20:21,570 --> 00:20:24,899
retro hunts on virustotal and just

569
00:20:23,280 --> 00:20:28,020
scouring web forums and seeing that<font color="#E5E5E5"> I</font>

570
00:20:24,900 --> 00:20:29,580
can find<font color="#E5E5E5"> and for like for the sub string</font>

571
00:20:28,020 --> 00:20:32,300
concatenation<font color="#E5E5E5"> it's actually been around</font>

572
00:20:29,580 --> 00:20:35,129
<font color="#CCCCCC">for a long time</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is an example of</font>

573
00:20:32,300 --> 00:20:37,050
<font color="#CCCCCC">Devourer malware back from 2012 and I'm</font>

574
00:20:35,130 --> 00:20:38,880
sure it's a lot<font color="#E5E5E5"> older the technique goes</font>

575
00:20:37,050 --> 00:20:40,399
back a lot<font color="#E5E5E5"> further than</font><font color="#CCCCCC"> that but this</font>

576
00:20:38,880 --> 00:20:42,810
<font color="#E5E5E5">one just happened to be reuploaded</font><font color="#CCCCCC"> 2vt</font>

577
00:20:40,400 --> 00:20:44,940
<font color="#E5E5E5">not too long ago</font><font color="#CCCCCC"> where they're basically</font>

578
00:20:42,810 --> 00:20:48,750
<font color="#CCCCCC">using environment variable</font><font color="#E5E5E5"> cat</font><font color="#CCCCCC"> nation to</font>

579
00:20:44,940 --> 00:20:50,610
do batch file office keishon now this

580
00:20:48,750 --> 00:20:53,040
next<font color="#E5E5E5"> one</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> cool this</font><font color="#E5E5E5"> one</font>

581
00:20:50,610 --> 00:20:56,129
actually<font color="#E5E5E5"> is used a lot and</font><font color="#CCCCCC"> even by a</font>

582
00:20:53,040 --> 00:20:58,680
couple interesting<font color="#E5E5E5"> Chinese apt</font><font color="#CCCCCC"> groups</font>

583
00:20:56,130 --> 00:21:01,800
using<font color="#E5E5E5"> a variation</font><font color="#CCCCCC"> of this tool j/s batch</font>

584
00:20:58,680 --> 00:21:03,570
office<font color="#E5E5E5"> cater was written to two and a</font>

585
00:21:01,800 --> 00:21:06,480
half years ago<font color="#E5E5E5"> it's up on github it's</font>

586
00:21:03,570 --> 00:21:08,340
like less than<font color="#E5E5E5"> 50 lines of code but it's</font>

587
00:21:06,480 --> 00:21:10,320
a really<font color="#CCCCCC"> cool tool just for obfuscating</font>

588
00:21:08,340 --> 00:21:12,120
batch files but this uses an approach of

589
00:21:10,320 --> 00:21:13,679
instead<font color="#E5E5E5"> of using existing environment</font>

590
00:21:12,120 --> 00:21:15,449
variables the<font color="#E5E5E5"> batch file starts with</font>

591
00:21:13,680 --> 00:21:16,770
setting<font color="#E5E5E5"> a random name environment</font>

592
00:21:15,450 --> 00:21:18,990
variable and setting it with a full

593
00:21:16,770 --> 00:21:20,879
alphabet<font color="#CCCCCC"> or later custom versions just</font>

594
00:21:18,990 --> 00:21:22,890
do only the characters needed in the

595
00:21:20,880 --> 00:21:25,470
command<font color="#E5E5E5"> and then the rest of the command</font>

596
00:21:22,890 --> 00:21:27,360
<font color="#E5E5E5">is just concatenating the characters one</font>

597
00:21:25,470 --> 00:21:30,210
by one from that random environment

598
00:21:27,360 --> 00:21:33,500
variable<font color="#E5E5E5"> and there's the decoded version</font>

599
00:21:30,210 --> 00:21:36,390
there so this particular payload<font color="#E5E5E5"> and</font>

600
00:21:33,500 --> 00:21:37,800
this last one<font color="#E5E5E5"> I won't go into too much</font>

601
00:21:36,390 --> 00:21:40,350
detail but if you check<font color="#CCCCCC"> out</font><font color="#E5E5E5"> the white</font>

602
00:21:37,800 --> 00:21:43,590
paper this<font color="#E5E5E5"> was a really interesting fish</font>

603
00:21:40,350 --> 00:21:46,050
<font color="#CCCCCC">I mean really interesting payload called</font>

604
00:21:43,590 --> 00:21:48,689
a batch encryption just one piece of<font color="#CCCCCC"> a</font>

605
00:21:46,050 --> 00:21:50,430
larger<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of obfuscation</font><font color="#E5E5E5"> component but</font>

606
00:21:48,690 --> 00:21:51,780
this actually<font color="#E5E5E5"> combines both known</font>

607
00:21:50,430 --> 00:21:53,700
environment variables and<font color="#E5E5E5"> unknown</font>

608
00:21:51,780 --> 00:21:55,740
environment environment<font color="#E5E5E5"> variables by</font>

609
00:21:53,700 --> 00:21:57,060
setting them<font color="#CCCCCC"> into a variable</font><font color="#E5E5E5"> called a</font>

610
00:21:55,740 --> 00:21:58,680
single<font color="#E5E5E5"> quote</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> just what they named</font>

611
00:21:57,060 --> 00:21:59,879
it<font color="#E5E5E5"> and then the rest of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> command goes</font>

612
00:21:58,680 --> 00:22:00,809
through there but<font color="#E5E5E5"> again</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot more</font>

613
00:21:59,880 --> 00:22:03,389
details from<font color="#CCCCCC"> the white</font>

614
00:22:00,809 --> 00:22:05,158
<font color="#E5E5E5">for both all this to say that</font><font color="#CCCCCC"> it's cool</font>

615
00:22:03,389 --> 00:22:06,928
when<font color="#CCCCCC"> something</font><font color="#E5E5E5"> you didn't know</font><font color="#CCCCCC"> existed</font>

616
00:22:05,159 --> 00:22:08,789
<font color="#CCCCCC">all of a</font><font color="#E5E5E5"> sudden</font><font color="#CCCCCC"> your eyes crap this</font><font color="#E5E5E5"> has</font>

617
00:22:06,929 --> 00:22:10,289
been around<font color="#E5E5E5"> for a while and I'm just now</font>

618
00:22:08,789 --> 00:22:12,149
seeing this<font color="#E5E5E5"> with my own eyes based on</font>

619
00:22:10,289 --> 00:22:13,649
this research<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think I'm</font><font color="#CCCCCC"> onto something</font>

620
00:22:12,149 --> 00:22:17,758
but I wonder<font color="#E5E5E5"> if there's more things</font>

621
00:22:13,649 --> 00:22:20,428
there<font color="#E5E5E5"> that I've never seen</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> so</font>

622
00:22:17,759 --> 00:22:23,460
let's keep going<font color="#CCCCCC"> into advanced payload</font>

623
00:22:20,429 --> 00:22:24,899
operation now I use this<font color="#E5E5E5"> example here</font>

624
00:22:23,460 --> 00:22:26,159
and if you're a defender the first half

625
00:22:24,899 --> 00:22:29,549
of<font color="#E5E5E5"> this command might look familiar</font>

626
00:22:26,159 --> 00:22:31,440
I'm<font color="#CCCCCC"> comm spec BC</font><font color="#E5E5E5"> start be men like</font><font color="#CCCCCC"> that</font>

627
00:22:29,549 --> 00:22:33,779
this is used all over the<font color="#CCCCCC"> place but like</font>

628
00:22:31,440 --> 00:22:35,789
<font color="#CCCCCC">Metasploit and several other tools and</font>

629
00:22:33,779 --> 00:22:37,409
if you see this in<font color="#CCCCCC"> the registry</font><font color="#E5E5E5"> and like</font>

630
00:22:35,789 --> 00:22:39,149
a run key<font color="#E5E5E5"> if you see this in the</font>

631
00:22:37,409 --> 00:22:41,129
security<font color="#CCCCCC"> seventy forty five service</font>

632
00:22:39,149 --> 00:22:43,110
creation<font color="#E5E5E5"> then you have some issues</font>

633
00:22:41,129 --> 00:22:45,899
<font color="#E5E5E5">percent concept percent should send up</font>

634
00:22:43,110 --> 00:22:47,428
huge red flags<font color="#E5E5E5"> to any defender which is</font>

635
00:22:45,899 --> 00:22:49,289
why<font color="#E5E5E5"> I wanted to use this in this example</font>

636
00:22:47,429 --> 00:22:50,600
and the rest<font color="#E5E5E5"> of the command is just</font>

637
00:22:49,289 --> 00:22:52,860
doing a net stat<font color="#CCCCCC"> finding string</font>

638
00:22:50,600 --> 00:22:54,748
<font color="#E5E5E5">something simple that</font><font color="#CCCCCC"> we can use</font><font color="#E5E5E5"> to</font>

639
00:22:52,860 --> 00:22:57,479
obfuscate<font color="#CCCCCC"> and you can simply run</font><font color="#E5E5E5"> the</font>

640
00:22:54,749 --> 00:23:00,389
command here it's<font color="#E5E5E5"> looking for listening</font>

641
00:22:57,480 --> 00:23:01,919
result<font color="#CCCCCC"> when you're on</font><font color="#E5E5E5"> net stat here just</font>

642
00:23:00,389 --> 00:23:03,600
a quick quick breakdown of the

643
00:23:01,919 --> 00:23:05,100
components of this command<font color="#E5E5E5"> whenever you</font>

644
00:23:03,600 --> 00:23:07,230
look at a<font color="#CCCCCC"> command either</font><font color="#E5E5E5"> as an attacker</font>

645
00:23:05,100 --> 00:23:08,549
or<font color="#E5E5E5"> a defender it's interesting to ask</font>

646
00:23:07,230 --> 00:23:11,009
<font color="#CCCCCC">the question are all these</font><font color="#E5E5E5"> things</font>

647
00:23:08,549 --> 00:23:13,470
<font color="#E5E5E5">necessary are they necessary in this</font>

648
00:23:11,009 --> 00:23:14,999
order<font color="#E5E5E5"> can</font><font color="#CCCCCC"> I change the syntax</font><font color="#E5E5E5"> of any of</font>

649
00:23:13,470 --> 00:23:18,210
this<font color="#E5E5E5"> and still get it to run how I want</font>

650
00:23:14,999 --> 00:23:19,710
it<font color="#CCCCCC"> to so starting with</font><font color="#E5E5E5"> comm spec there's</font>

651
00:23:18,210 --> 00:23:21,899
two ways we<font color="#CCCCCC"> can</font><font color="#E5E5E5"> go about</font><font color="#CCCCCC"> obfuscating</font>

652
00:23:19,710 --> 00:23:25,259
this one is using environment<font color="#CCCCCC"> variable</font>

653
00:23:21,899 --> 00:23:26,998
substring syntax<font color="#E5E5E5"> so if you echo comm</font>

654
00:23:25,259 --> 00:23:30,480
spec it's 27 characters and it's the

655
00:23:26,999 --> 00:23:33,119
full path<font color="#CCCCCC"> to command XE</font><font color="#E5E5E5"> so using</font>

656
00:23:30,480 --> 00:23:34,649
substring syntax<font color="#E5E5E5"> we could use we could</font>

657
00:23:33,119 --> 00:23:36,720
<font color="#E5E5E5">say hey start from the zeroth character</font>

658
00:23:34,649 --> 00:23:38,279
and go out<font color="#E5E5E5"> 27 characters and let's use</font>

659
00:23:36,720 --> 00:23:39,899
that<font color="#CCCCCC"> value and that's gonna be</font><font color="#E5E5E5"> the full</font>

660
00:23:38,279 --> 00:23:41,610
value<font color="#E5E5E5"> you don't</font><font color="#CCCCCC"> have to specify</font><font color="#E5E5E5"> how many</font>

661
00:23:39,899 --> 00:23:43,529
<font color="#CCCCCC">characters to</font><font color="#E5E5E5"> go out if you don't that</font>

662
00:23:41,610 --> 00:23:45,449
<font color="#E5E5E5">will go</font><font color="#CCCCCC"> out to</font><font color="#E5E5E5"> the end you can</font><font color="#CCCCCC"> also do</font>

663
00:23:43,529 --> 00:23:47,490
<font color="#E5E5E5">reverse indexes so start</font><font color="#CCCCCC"> from the</font><font color="#E5E5E5"> end</font>

664
00:23:45,450 --> 00:23:49,230
and<font color="#E5E5E5"> go back 27 characters to start and</font>

665
00:23:47,490 --> 00:23:50,610
then go forward the rest<font color="#E5E5E5"> of the way and</font>

666
00:23:49,230 --> 00:23:52,679
there's nothing saying<font color="#E5E5E5"> you have to use</font>

667
00:23:50,610 --> 00:23:55,408
<font color="#CCCCCC">the exact length instead of 27 we could</font>

668
00:23:52,679 --> 00:23:58,350
use 1337 or anything it's greater<font color="#E5E5E5"> than</font>

669
00:23:55,409 --> 00:24:00,480
the<font color="#CCCCCC"> value of the variable</font><font color="#E5E5E5"> so these will</font>

670
00:23:58,350 --> 00:24:03,149
all still successfully produce a string

671
00:24:00,480 --> 00:24:04,139
<font color="#E5E5E5">command</font><font color="#CCCCCC"> exit</font><font color="#E5E5E5"> with the full path you can</font>

672
00:24:03,149 --> 00:24:06,809
also use<font color="#E5E5E5"> environment variable</font>

673
00:24:04,139 --> 00:24:08,668
substitution so just like we saw<font color="#CCCCCC"> fin 7</font>

674
00:24:06,809 --> 00:24:10,200
substituting the<font color="#CCCCCC"> @ sign with nothing to</font>

675
00:24:08,669 --> 00:24:11,669
remove it<font color="#E5E5E5"> we</font><font color="#CCCCCC"> could basically say</font>

676
00:24:10,200 --> 00:24:13,810
substitute forward slashes for back

677
00:24:11,669 --> 00:24:15,130
slashes or substitute<font color="#E5E5E5"> something</font>

678
00:24:13,810 --> 00:24:16,480
will never exist<font color="#E5E5E5"> with something else</font>

679
00:24:15,130 --> 00:24:17,920
that<font color="#E5E5E5"> we never want to see because it</font>

680
00:24:16,480 --> 00:24:19,420
doesn't matter<font color="#CCCCCC"> all we're doing is</font>

681
00:24:17,920 --> 00:24:23,620
breaking detection that<font color="#E5E5E5"> are looking for</font>

682
00:24:19,420 --> 00:24:24,910
<font color="#E5E5E5">a percent calm sweat percent so let's</font>

683
00:24:23,620 --> 00:24:26,800
just choose two of<font color="#E5E5E5"> these and keep going</font>

684
00:24:24,910 --> 00:24:27,910
we can randomize the case of the

685
00:24:26,800 --> 00:24:31,330
variables if anyone's doing case

686
00:24:27,910 --> 00:24:32,620
sensitive detection<font color="#CCCCCC"> zon this</font><font color="#E5E5E5"> looking for</font>

687
00:24:31,330 --> 00:24:34,240
<font color="#E5E5E5">anomalies is actually a good way to</font>

688
00:24:32,620 --> 00:24:35,830
detect<font color="#E5E5E5"> some</font><font color="#CCCCCC"> of this stuff</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> just in</font>

689
00:24:34,240 --> 00:24:37,540
case<font color="#CCCCCC"> as defenders we should know it's</font>

690
00:24:35,830 --> 00:24:40,389
possible<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do this you can also add</font>

691
00:24:37,540 --> 00:24:42,580
<font color="#CCCCCC">whitespace</font><font color="#E5E5E5"> before each</font><font color="#CCCCCC"> of the two</font>

692
00:24:40,390 --> 00:24:43,690
<font color="#E5E5E5">indexes and actually the bottom command</font>

693
00:24:42,580 --> 00:24:45,340
technically this changes<font color="#CCCCCC"> how it</font>

694
00:24:43,690 --> 00:24:47,860
functions<font color="#E5E5E5"> but it doesn't matter because</font>

695
00:24:45,340 --> 00:24:49,600
<font color="#E5E5E5">we wanted the</font><font color="#CCCCCC"> original value anyways</font><font color="#E5E5E5"> and</font>

696
00:24:47,860 --> 00:24:52,060
<font color="#E5E5E5">then we can also explicitly sign</font><font color="#CCCCCC"> um</font>

697
00:24:49,600 --> 00:24:53,919
integers<font color="#E5E5E5"> now I don't know about you</font><font color="#CCCCCC"> but</font>

698
00:24:52,060 --> 00:24:55,270
I've never<font color="#E5E5E5"> really looked at a zero and</font>

699
00:24:53,920 --> 00:24:57,010
thought it<font color="#CCCCCC"> needed to be positive</font><font color="#E5E5E5"> or</font>

700
00:24:55,270 --> 00:24:58,810
<font color="#CCCCCC">negative</font><font color="#E5E5E5"> because that doesn't</font><font color="#CCCCCC"> make</font><font color="#E5E5E5"> any</font>

701
00:24:57,010 --> 00:25:00,310
<font color="#E5E5E5">sense but it's actually technically</font>

702
00:24:58,810 --> 00:25:01,480
<font color="#CCCCCC">possible in the command line</font><font color="#E5E5E5"> so maybe</font>

703
00:25:00,310 --> 00:25:05,290
<font color="#E5E5E5">that's an interesting thing to</font><font color="#CCCCCC"> look for</font>

704
00:25:01,480 --> 00:25:06,370
do I ever expect<font color="#CCCCCC"> to see that so let's</font><font color="#E5E5E5"> go</font>

705
00:25:05,290 --> 00:25:08,139
with<font color="#E5E5E5"> a second option and put it in the</font>

706
00:25:06,370 --> 00:25:11,469
command<font color="#E5E5E5"> now a really important point</font>

707
00:25:08,140 --> 00:25:12,880
<font color="#E5E5E5">here</font><font color="#CCCCCC"> is that context is crucial and I</font>

708
00:25:11,470 --> 00:25:15,550
did get<font color="#E5E5E5"> a lot of complaints</font><font color="#CCCCCC"> for this</font>

709
00:25:12,880 --> 00:25:17,500
<font color="#E5E5E5">because</font><font color="#CCCCCC"> people complain that my tool</font>

710
00:25:15,550 --> 00:25:19,000
doesn't<font color="#E5E5E5"> work if you drop</font><font color="#CCCCCC"> it -</font><font color="#E5E5E5"> you know</font>

711
00:25:17,500 --> 00:25:20,050
this payload<font color="#E5E5E5"> of that payload</font><font color="#CCCCCC"> and I</font>

712
00:25:19,000 --> 00:25:22,000
remind them<font color="#CCCCCC"> it's like</font><font color="#E5E5E5"> you know I'm a</font>

713
00:25:20,050 --> 00:25:24,310
defender<font color="#E5E5E5"> right like I didn't write this</font>

714
00:25:22,000 --> 00:25:26,170
<font color="#E5E5E5">to like pump out</font><font color="#CCCCCC"> all these crazy things</font>

715
00:25:24,310 --> 00:25:28,360
<font color="#CCCCCC">I wrote it for</font><font color="#E5E5E5"> defenders to be able</font><font color="#CCCCCC"> to</font>

716
00:25:26,170 --> 00:25:29,770
<font color="#CCCCCC">look at all these options and to write</font>

717
00:25:28,360 --> 00:25:33,969
detection for it and if you're an

718
00:25:29,770 --> 00:25:35,680
attacker<font color="#CCCCCC"> and you're you're too lazy to</font>

719
00:25:33,970 --> 00:25:37,900
go and fiddle<font color="#E5E5E5"> with this then you</font>

720
00:25:35,680 --> 00:25:39,400
probably<font color="#E5E5E5"> shouldn't</font><font color="#CCCCCC"> be using</font><font color="#E5E5E5"> this so the</font>

721
00:25:37,900 --> 00:25:41,980
context is important if you<font color="#E5E5E5"> drop this</font>

722
00:25:39,400 --> 00:25:44,230
<font color="#CCCCCC">into</font><font color="#E5E5E5"> command X C it will run if you are</font>

723
00:25:41,980 --> 00:25:45,940
in a<font color="#E5E5E5"> command like context like W script</font>

724
00:25:44,230 --> 00:25:48,250
shell this will also<font color="#CCCCCC"> work but if you</font>

725
00:25:45,940 --> 00:25:49,450
drop this command into like a service or

726
00:25:48,250 --> 00:25:52,360
registry run key or something<font color="#CCCCCC"> like that</font>

727
00:25:49,450 --> 00:25:56,560
<font color="#E5E5E5">it won't</font><font color="#CCCCCC"> work</font><font color="#E5E5E5"> because this substring</font>

728
00:25:52,360 --> 00:25:58,659
syntax is a command<font color="#CCCCCC"> XC thing the reason</font>

729
00:25:56,560 --> 00:26:00,190
percent<font color="#E5E5E5"> coms 5% works is it's literally</font>

730
00:25:58,660 --> 00:26:01,930
<font color="#E5E5E5">like a fine and replace the operating</font>

731
00:26:00,190 --> 00:26:03,670
system does<font color="#CCCCCC"> in the run key or service to</font>

732
00:26:01,930 --> 00:26:05,380
say oh this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> own environment</font>

733
00:26:03,670 --> 00:26:07,030
variable let me lift that<font color="#E5E5E5"> and replace it</font>

734
00:26:05,380 --> 00:26:08,590
with<font color="#E5E5E5"> the</font><font color="#CCCCCC"> value but it doesn't know how</font>

735
00:26:07,030 --> 00:26:10,300
<font color="#CCCCCC">to</font><font color="#E5E5E5"> interpret</font><font color="#CCCCCC"> the substring syntax</font>

736
00:26:08,590 --> 00:26:12,189
<font color="#E5E5E5">now those only matters for the first</font>

737
00:26:10,300 --> 00:26:14,290
part of the command<font color="#E5E5E5"> if the first part of</font>

738
00:26:12,190 --> 00:26:15,970
<font color="#E5E5E5">our command is just cmd.exe and then</font>

739
00:26:14,290 --> 00:26:18,100
later we use a<font color="#CCCCCC"> substring sin</font><font color="#E5E5E5"> syntax</font>

740
00:26:15,970 --> 00:26:20,230
<font color="#E5E5E5">that's fine</font><font color="#CCCCCC"> because the command</font><font color="#E5E5E5"> engine</font>

741
00:26:18,100 --> 00:26:21,899
is interpreting that but there's

742
00:26:20,230 --> 00:26:24,620
something<font color="#E5E5E5"> to be mindful of</font>

743
00:26:21,900 --> 00:26:26,850
so for the rest<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the command we can</font>

744
00:26:24,620 --> 00:26:28,530
apply a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the techniques</font><font color="#CCCCCC"> we talked</font>

745
00:26:26,850 --> 00:26:30,629
about<font color="#E5E5E5"> in the last section so we can</font>

746
00:26:28,530 --> 00:26:33,420
randomize the case of all this we<font color="#CCCCCC"> can</font>

747
00:26:30,630 --> 00:26:34,920
<font color="#E5E5E5">actually remove a lot of white</font><font color="#CCCCCC"> space so</font>

748
00:26:33,420 --> 00:26:36,120
I don't know if you've seen<font color="#E5E5E5"> many</font>

749
00:26:34,920 --> 00:26:38,490
commands that don't have any white space

750
00:26:36,120 --> 00:26:40,350
<font color="#E5E5E5">between the arguments but BC start</font><font color="#CCCCCC"> beam</font>

751
00:26:38,490 --> 00:26:43,110
<font color="#CCCCCC">in all that</font><font color="#E5E5E5"> stuff white space isn't</font>

752
00:26:40,350 --> 00:26:45,149
<font color="#E5E5E5">needed and a fascinating thing here is</font>

753
00:26:43,110 --> 00:26:47,790
<font color="#CCCCCC">that you'll</font><font color="#E5E5E5"> see there's zero white space</font>

754
00:26:45,150 --> 00:26:50,970
<font color="#CCCCCC">between that first</font><font color="#E5E5E5"> argument /b and the</font>

755
00:26:47,790 --> 00:26:53,370
command<font color="#E5E5E5"> XC but when you look at the</font>

756
00:26:50,970 --> 00:26:56,429
dynamic<font color="#CCCCCC"> execution the operating system</font>

757
00:26:53,370 --> 00:26:57,959
adds a white space in there so if you

758
00:26:56,429 --> 00:27:00,750
write a<font color="#E5E5E5"> detection that works for this</font>

759
00:26:57,960 --> 00:27:02,460
command<font color="#E5E5E5"> if it's in registry it's</font>

760
00:27:00,750 --> 00:27:03,960
actually<font color="#E5E5E5"> gonna look</font><font color="#CCCCCC"> different when you</font>

761
00:27:02,460 --> 00:27:05,460
<font color="#CCCCCC">actually see</font><font color="#E5E5E5"> it running on the command</font>

762
00:27:03,960 --> 00:27:09,750
line<font color="#CCCCCC"> or when you see it in process</font>

763
00:27:05,460 --> 00:27:10,770
execution logs<font color="#E5E5E5"> so now wow we can</font>

764
00:27:09,750 --> 00:27:12,000
actually<font color="#E5E5E5"> have the right slightly</font>

765
00:27:10,770 --> 00:27:13,410
different detection<font color="#CCCCCC"> or more robust</font>

766
00:27:12,000 --> 00:27:16,200
detections whether we're applying it to

767
00:27:13,410 --> 00:27:19,130
dynamic data or static data it's getting

768
00:27:16,200 --> 00:27:21,300
tricky so we can remove<font color="#CCCCCC"> that white space</font>

769
00:27:19,130 --> 00:27:23,090
<font color="#CCCCCC">netstat Anna we</font><font color="#E5E5E5"> can just move that</font>

770
00:27:21,300 --> 00:27:26,210
<font color="#CCCCCC">around because it still runs just</font><font color="#E5E5E5"> fine</font>

771
00:27:23,090 --> 00:27:28,379
<font color="#CCCCCC">we can also add a lot of</font><font color="#E5E5E5"> white</font><font color="#CCCCCC"> space</font>

772
00:27:26,210 --> 00:27:30,030
remember though some of the commas and

773
00:27:28,380 --> 00:27:31,230
semicolons we talked about<font color="#E5E5E5"> anywhere</font>

774
00:27:30,030 --> 00:27:32,700
<font color="#E5E5E5">where you have white space used as a</font>

775
00:27:31,230 --> 00:27:34,380
<font color="#E5E5E5">delimiter</font><font color="#CCCCCC"> you can use commas and</font>

776
00:27:32,700 --> 00:27:35,940
semicolons<font color="#CCCCCC"> but you can put as many as</font>

777
00:27:34,380 --> 00:27:37,350
<font color="#CCCCCC">you want even if you don't</font><font color="#E5E5E5"> need a</font>

778
00:27:35,940 --> 00:27:42,059
delimiter there and it actually<font color="#E5E5E5"> doesn't</font>

779
00:27:37,350 --> 00:27:43,800
affect the command we<font color="#E5E5E5"> can add tons of</font>

780
00:27:42,059 --> 00:27:45,000
<font color="#CCCCCC">caret characters and we can escape at</font>

781
00:27:43,800 --> 00:27:46,620
multiple levels<font color="#CCCCCC"> depending</font><font color="#E5E5E5"> on the</font>

782
00:27:45,000 --> 00:27:48,690
functionality<font color="#E5E5E5"> we want to exist depending</font>

783
00:27:46,620 --> 00:27:50,820
<font color="#CCCCCC">on how many child</font><font color="#E5E5E5"> processes we have and</font>

784
00:27:48,690 --> 00:27:54,120
if we<font color="#CCCCCC"> run this look the process</font>

785
00:27:50,820 --> 00:27:55,290
execution<font color="#E5E5E5"> is like</font><font color="#CCCCCC"> bottom-up</font><font color="#E5E5E5"> we'll see</font>

786
00:27:54,120 --> 00:27:56,939
that we<font color="#E5E5E5"> get this interesting</font>

787
00:27:55,290 --> 00:27:59,309
<font color="#E5E5E5">intermediate command that's highlighted</font>

788
00:27:56,940 --> 00:28:00,720
<font color="#E5E5E5">blue so as a defender and we'll talk</font>

789
00:27:59,309 --> 00:28:04,440
<font color="#E5E5E5">more about this in the detection section</font>

790
00:28:00,720 --> 00:28:08,970
<font color="#E5E5E5">if you see command XE run as command</font><font color="#CCCCCC"> X</font>

791
00:28:04,440 --> 00:28:12,480
<font color="#CCCCCC">see two</font><font color="#E5E5E5"> spaces</font><font color="#CCCCCC"> slash s space</font><font color="#E5E5E5"> /d space</font>

792
00:28:08,970 --> 00:28:14,940
<font color="#CCCCCC">slash</font><font color="#E5E5E5"> see no space double quote one</font>

793
00:28:12,480 --> 00:28:16,380
space and then something this is

794
00:28:14,940 --> 00:28:19,050
actually an artifact<font color="#E5E5E5"> of the operating</font>

795
00:28:16,380 --> 00:28:20,610
system in a couple<font color="#E5E5E5"> of scenarios like</font><font color="#CCCCCC"> sub</font>

796
00:28:19,050 --> 00:28:22,590
command execution or when you're piping

797
00:28:20,610 --> 00:28:24,178
<font color="#E5E5E5">content into a new binary it'll actually</font>

798
00:28:22,590 --> 00:28:25,649
<font color="#CCCCCC">spawn this</font><font color="#E5E5E5"> intermediate process and</font>

799
00:28:24,179 --> 00:28:27,690
there's<font color="#E5E5E5"> really</font><font color="#CCCCCC"> interesting and valuable</font>

800
00:28:25,650 --> 00:28:29,850
detection opportunities when you<font color="#E5E5E5"> see</font>

801
00:28:27,690 --> 00:28:31,440
<font color="#CCCCCC">this</font><font color="#E5E5E5"> syntax right here now we'll talk</font>

802
00:28:29,850 --> 00:28:32,580
<font color="#E5E5E5">about towards</font><font color="#CCCCCC"> the end of this talk</font><font color="#E5E5E5"> but</font>

803
00:28:31,440 --> 00:28:33,639
the important<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that the</font>

804
00:28:32,580 --> 00:28:35,168
carrots

805
00:28:33,639 --> 00:28:37,570
in an intermediate process<font color="#E5E5E5"> they're all</font>

806
00:28:35,169 --> 00:28:39,729
chopped in half<font color="#E5E5E5"> right</font><font color="#CCCCCC"> because the</font>

807
00:28:37,570 --> 00:28:41,320
escaping diminishes by half<font color="#E5E5E5"> every single</font>

808
00:28:39,729 --> 00:28:43,570
layer<font color="#E5E5E5"> and once you get to the fine</font>

809
00:28:41,320 --> 00:28:45,668
string<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> netstat there there's no</font>

810
00:28:43,570 --> 00:28:47,079
obfuscation<font color="#E5E5E5"> left these characters are</font>

811
00:28:45,669 --> 00:28:51,489
all gone<font color="#E5E5E5"> you're just left with the</font>

812
00:28:47,079 --> 00:28:53,440
spacing and<font color="#E5E5E5"> the the casing so</font><font color="#CCCCCC"> it's a</font>

813
00:28:51,489 --> 00:28:55,450
comma and semicolon and<font color="#CCCCCC"> karat don't</font>

814
00:28:53,440 --> 00:28:57,989
persist<font color="#CCCCCC"> is there a character that does</font>

815
00:28:55,450 --> 00:29:01,389
persist<font color="#E5E5E5"> into that final child process</font>

816
00:28:57,989 --> 00:29:03,579
the answer<font color="#CCCCCC"> is yes</font><font color="#E5E5E5"> on the double quote</font><font color="#CCCCCC"> is</font>

817
00:29:01,389 --> 00:29:05,498
making a shining entry in here and

818
00:29:03,579 --> 00:29:06,339
what's awesome about this<font color="#CCCCCC"> is that you</font>

819
00:29:05,499 --> 00:29:07,659
<font color="#E5E5E5">don't</font><font color="#CCCCCC"> have to worry about different</font>

820
00:29:06,339 --> 00:29:09,070
layers of<font color="#E5E5E5"> escaping</font><font color="#CCCCCC"> you put it in the</font>

821
00:29:07,659 --> 00:29:14,139
first command and persist<font color="#CCCCCC"> all the way</font>

822
00:29:09,070 --> 00:29:16,059
down into every child process<font color="#E5E5E5"> so when in</font>

823
00:29:14,139 --> 00:29:18,549
writing the tool<font color="#E5E5E5"> this became insanely</font>

824
00:29:16,059 --> 00:29:21,399
complicated<font color="#E5E5E5"> to basically keep all these</font>

825
00:29:18,549 --> 00:29:22,749
things<font color="#E5E5E5"> in place and in doing powershell</font>

826
00:29:21,399 --> 00:29:25,089
obfuscation it was great<font color="#CCCCCC"> because you</font>

827
00:29:22,749 --> 00:29:26,469
have<font color="#CCCCCC"> access to the</font><font color="#E5E5E5"> language tokenizer to</font>

828
00:29:25,089 --> 00:29:28,029
parse the command you're looking at to

829
00:29:26,469 --> 00:29:30,009
<font color="#E5E5E5">know this is a string this is</font><font color="#CCCCCC"> a command</font>

830
00:29:28,029 --> 00:29:31,749
this<font color="#E5E5E5"> is an</font><font color="#CCCCCC"> argument you also kind of</font>

831
00:29:30,009 --> 00:29:32,529
access<font color="#CCCCCC"> to the abstract syntax tree to do</font>

832
00:29:31,749 --> 00:29:34,450
all this<font color="#E5E5E5"> kind of stuff</font>

833
00:29:32,529 --> 00:29:36,789
<font color="#CCCCCC">demanda EXA doesn't have any of that</font>

834
00:29:34,450 --> 00:29:38,649
<font color="#E5E5E5">crap so</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> gets really tough to</font>

835
00:29:36,789 --> 00:29:40,059
basically<font color="#E5E5E5"> piece all</font><font color="#CCCCCC"> this stuff together</font>

836
00:29:38,649 --> 00:29:41,439
and<font color="#E5E5E5"> know kind of where you're at</font><font color="#CCCCCC"> and how</font>

837
00:29:40,059 --> 00:29:43,389
<font color="#E5E5E5">many layers</font><font color="#CCCCCC"> of escaping indy to each</font>

838
00:29:41,440 --> 00:29:45,429
part<font color="#E5E5E5"> so this is what I call the world's</font>

839
00:29:43,389 --> 00:29:46,899
tiniest violin slide<font color="#CCCCCC"> the fenders are</font>

840
00:29:45,429 --> 00:29:48,099
giving me no sympathy right now but

841
00:29:46,899 --> 00:29:49,508
<font color="#CCCCCC">basically it was</font><font color="#E5E5E5"> a really interesting</font>

842
00:29:48,099 --> 00:29:51,759
challenge<font color="#CCCCCC"> to go through without these</font>

843
00:29:49,509 --> 00:29:53,349
tools<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I have with</font><font color="#E5E5E5"> PowerShell</font><font color="#CCCCCC"> and</font>

844
00:29:51,759 --> 00:29:56,079
there's just a much<font color="#E5E5E5"> more rigid</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of</font>

845
00:29:53,349 --> 00:29:59,349
framework<font color="#E5E5E5"> to work</font><font color="#CCCCCC"> with them</font><font color="#E5E5E5"> for an</font>

846
00:29:56,079 --> 00:30:00,729
obfuscation perspective so some

847
00:29:59,349 --> 00:30:02,918
defenders may look at me<font color="#CCCCCC"> and say okay</font>

848
00:30:00,729 --> 00:30:04,299
dude well<font color="#E5E5E5"> I don't care about your</font>

849
00:30:02,919 --> 00:30:06,009
dynamic stuff because I'm<font color="#E5E5E5"> already</font>

850
00:30:04,299 --> 00:30:07,899
looking<font color="#E5E5E5"> for carrots I'm looking for</font>

851
00:30:06,009 --> 00:30:09,489
commas and semicolons<font color="#E5E5E5"> plus half</font><font color="#CCCCCC"> those</font>

852
00:30:07,899 --> 00:30:10,839
<font color="#E5E5E5">examples they were removed anyways and</font>

853
00:30:09,489 --> 00:30:11,979
okay<font color="#E5E5E5"> maybe I didn't know about the</font>

854
00:30:10,839 --> 00:30:13,629
double quotes but<font color="#E5E5E5"> I'll start looking</font><font color="#CCCCCC"> for</font>

855
00:30:11,979 --> 00:30:15,039
<font color="#E5E5E5">that like this doesn't really faze me</font>

856
00:30:13,629 --> 00:30:16,629
<font color="#CCCCCC">like why should I worry about this</font>

857
00:30:15,039 --> 00:30:18,999
obfuscation stuff<font color="#E5E5E5"> as much as you're</font>

858
00:30:16,629 --> 00:30:22,089
talking<font color="#CCCCCC"> about</font><font color="#E5E5E5"> well I would</font><font color="#CCCCCC"> argue</font><font color="#E5E5E5"> that</font>

859
00:30:18,999 --> 00:30:25,179
obfuscation is a great way to give zero

860
00:30:22,089 --> 00:30:26,829
crap about<font color="#CCCCCC"> an attackers intent because</font>

861
00:30:25,179 --> 00:30:28,839
if<font color="#E5E5E5"> I can detect obfuscation</font><font color="#CCCCCC"> I don't have</font>

862
00:30:26,829 --> 00:30:30,099
to<font color="#E5E5E5"> think I wonder if</font><font color="#CCCCCC"> there's netstat</font>

863
00:30:28,839 --> 00:30:31,928
command<font color="#E5E5E5"> as malicious or not it's like</font>

864
00:30:30,099 --> 00:30:35,259
whoa obfuscation someone doesn't want<font color="#E5E5E5"> me</font>

865
00:30:31,929 --> 00:30:36,639
to read this<font color="#E5E5E5"> I'm super</font><font color="#CCCCCC"> interested now so</font>

866
00:30:35,259 --> 00:30:38,859
I would argue<font color="#E5E5E5"> it's important to detect</font>

867
00:30:36,639 --> 00:30:40,449
obfuscation<font color="#E5E5E5"> in and of itself and as</font>

868
00:30:38,859 --> 00:30:42,549
another<font color="#E5E5E5"> reason why there's a lot of</font>

869
00:30:40,450 --> 00:30:44,109
things<font color="#E5E5E5"> that an attacker can do that if</font>

870
00:30:42,549 --> 00:30:46,450
they have a command<font color="#CCCCCC"> XE argument that's</font>

871
00:30:44,109 --> 00:30:46,809
office gated that never spawns a child

872
00:30:46,450 --> 00:30:50,110
<font color="#E5E5E5">prize</font>

873
00:30:46,809 --> 00:30:53,259
<font color="#CCCCCC">yes a lot of recon</font><font color="#E5E5E5"> an attacker could</font>

874
00:30:50,110 --> 00:30:55,928
list all the<font color="#E5E5E5"> files they could type and</font>

875
00:30:53,259 --> 00:30:57,730
<font color="#E5E5E5">actually essentially cat the files maybe</font>

876
00:30:55,929 --> 00:30:59,019
they would add an entry<font color="#E5E5E5"> to your</font><font color="#CCCCCC"> hosts</font>

877
00:30:57,730 --> 00:31:00,490
file and sinkhole your cloud-based

878
00:30:59,019 --> 00:31:02,470
security product wouldn't you want to

879
00:31:00,490 --> 00:31:03,700
<font color="#E5E5E5">know about that if this command never</font>

880
00:31:02,470 --> 00:31:05,889
showed up in<font color="#E5E5E5"> plain text what was</font>

881
00:31:03,700 --> 00:31:11,200
insanely obfuscated<font color="#CCCCCC"> I would want</font><font color="#E5E5E5"> to know</font>

882
00:31:05,889 --> 00:31:13,389
<font color="#E5E5E5">about that so with this being</font><font color="#CCCCCC"> said the</font>

883
00:31:11,200 --> 00:31:15,340
last part of<font color="#E5E5E5"> this research was is there</font>

884
00:31:13,389 --> 00:31:16,928
a<font color="#E5E5E5"> way that I can obfuscate</font><font color="#CCCCCC"> any arbitrary</font>

885
00:31:15,340 --> 00:31:18,209
command<font color="#E5E5E5"> without using any of these</font>

886
00:31:16,929 --> 00:31:20,169
<font color="#CCCCCC">characters that we</font><font color="#E5E5E5"> just talked about</font>

887
00:31:18,210 --> 00:31:22,899
<font color="#E5E5E5">without</font><font color="#CCCCCC"> having to rely on these special</font>

888
00:31:20,169 --> 00:31:24,279
<font color="#E5E5E5">characters</font><font color="#CCCCCC"> that defenders could I</font><font color="#E5E5E5"> don't</font>

889
00:31:22,899 --> 00:31:26,139
want to say easily<font color="#E5E5E5"> implement but could</font>

890
00:31:24,279 --> 00:31:29,919
start<font color="#E5E5E5"> looking</font><font color="#CCCCCC"> for is there a way in a</font>

891
00:31:26,139 --> 00:31:31,869
sneaky attacker<font color="#CCCCCC"> could</font><font color="#E5E5E5"> get around so the</font>

892
00:31:29,919 --> 00:31:36,039
first of the four techniques<font color="#CCCCCC"> will look</font>

893
00:31:31,869 --> 00:31:38,019
at as concatenation so<font color="#E5E5E5"> netstat</font><font color="#CCCCCC"> tack</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> no</font>

894
00:31:36,039 --> 00:31:39,850
we use that example<font color="#E5E5E5"> again</font><font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> fun</font>

895
00:31:38,019 --> 00:31:42,399
fact you can<font color="#E5E5E5"> also use the forward slash</font>

896
00:31:39,850 --> 00:31:43,959
<font color="#E5E5E5">instead of a dash for that</font><font color="#CCCCCC"> argument</font>

897
00:31:42,399 --> 00:31:47,590
right there this<font color="#E5E5E5"> actually has really</font>

898
00:31:43,960 --> 00:31:50,200
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> implications</font><font color="#E5E5E5"> so as a bonus</font>

899
00:31:47,590 --> 00:31:52,600
<font color="#E5E5E5">think about as a defender or an attacker</font>

900
00:31:50,200 --> 00:31:54,700
<font color="#CCCCCC">what are the detection</font><font color="#E5E5E5"> that are based on</font>

901
00:31:52,600 --> 00:31:57,939
<font color="#CCCCCC">arguments for commands okay if you're</font>

902
00:31:54,700 --> 00:31:59,470
looking for<font color="#CCCCCC"> W script</font><font color="#E5E5E5"> slash no logo you</font>

903
00:31:57,940 --> 00:32:01,960
<font color="#E5E5E5">can</font><font color="#CCCCCC"> actually change</font><font color="#E5E5E5"> that to a dash and</font>

904
00:31:59,470 --> 00:32:04,090
<font color="#E5E5E5">it works for PowerShell not</font><font color="#CCCCCC"> Nonnie</font>

905
00:32:01,960 --> 00:32:06,789
encoded instead of dashes<font color="#CCCCCC"> you can use</font>

906
00:32:04,090 --> 00:32:09,340
slashes or interchange<font color="#E5E5E5"> them for</font><font color="#CCCCCC"> red</font>

907
00:32:06,789 --> 00:32:11,408
serve detection is looking for<font color="#E5E5E5"> slash</font><font color="#CCCCCC"> I</font>

908
00:32:09,340 --> 00:32:13,779
call an HTTP<font color="#E5E5E5"> you could use a dash and</font>

909
00:32:11,409 --> 00:32:15,460
<font color="#E5E5E5">get right around that and also if you</font>

910
00:32:13,779 --> 00:32:17,289
look<font color="#E5E5E5"> at the URL and set of forward</font>

911
00:32:15,460 --> 00:32:19,179
slashes<font color="#E5E5E5"> you could use backward slashes</font>

912
00:32:17,289 --> 00:32:20,649
so how many<font color="#E5E5E5"> people</font><font color="#CCCCCC"> are looking</font><font color="#E5E5E5"> at</font>

913
00:32:19,179 --> 00:32:22,330
different slashes<font color="#E5E5E5"> and URLs and maybe</font>

914
00:32:20,649 --> 00:32:24,580
there's<font color="#E5E5E5"> two HTTP colon and that's enough</font>

915
00:32:22,330 --> 00:32:26,139
<font color="#CCCCCC">and some</font><font color="#E5E5E5"> languages even let you</font>

916
00:32:24,580 --> 00:32:28,570
interchange forward and backward slashes

917
00:32:26,139 --> 00:32:30,699
after URLs<font color="#CCCCCC"> so</font><font color="#E5E5E5"> again when we're doing</font>

918
00:32:28,570 --> 00:32:32,230
content reg X's or things like<font color="#CCCCCC"> that like</font>

919
00:32:30,700 --> 00:32:33,850
<font color="#CCCCCC">are</font><font color="#E5E5E5"> we taking these things into</font><font color="#CCCCCC"> account</font>

920
00:32:32,230 --> 00:32:36,399
<font color="#E5E5E5">so</font><font color="#CCCCCC"> anytime</font><font color="#E5E5E5"> now when I'm</font><font color="#CCCCCC"> writing a</font>

921
00:32:33,850 --> 00:32:37,748
detection<font color="#CCCCCC"> if I see a slash or</font><font color="#E5E5E5"> - you</font>

922
00:32:36,399 --> 00:32:39,158
better believe I'm interchanging those

923
00:32:37,749 --> 00:32:41,200
and playing around<font color="#E5E5E5"> and poking at it</font><font color="#CCCCCC"> to</font>

924
00:32:39,159 --> 00:32:45,279
see is it possible with<font color="#E5E5E5"> this binary</font><font color="#CCCCCC"> to</font>

925
00:32:41,200 --> 00:32:46,240
do this thing<font color="#CCCCCC"> so back then concatenation</font>

926
00:32:45,279 --> 00:32:47,799
what we're going to do is we're going<font color="#CCCCCC"> to</font>

927
00:32:46,240 --> 00:32:49,509
set our netstat command<font color="#CCCCCC"> into an</font>

928
00:32:47,799 --> 00:32:50,830
environment<font color="#CCCCCC"> variable</font><font color="#E5E5E5"> and then let's just</font>

929
00:32:49,509 --> 00:32:52,330
echo<font color="#E5E5E5"> the variable in this case</font><font color="#CCCCCC"> we're</font>

930
00:32:50,830 --> 00:32:53,879
calling it calm<font color="#CCCCCC"> and let's</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> make sure</font>

931
00:32:52,330 --> 00:32:56,408
<font color="#E5E5E5">that our payload was set successfully</font>

932
00:32:53,879 --> 00:32:57,759
now if we just<font color="#CCCCCC"> echo the variable it</font>

933
00:32:56,409 --> 00:32:58,080
actually doesn't give us the<font color="#CCCCCC"> value just</font>

934
00:32:57,759 --> 00:33:00,480
gives

935
00:32:58,080 --> 00:33:02,549
<font color="#CCCCCC">the variable name that's because the</font>

936
00:33:00,480 --> 00:33:05,490
variable isn't expanded in the current

937
00:33:02,549 --> 00:33:07,019
session so two ways we can<font color="#E5E5E5"> do that the</font>

938
00:33:05,490 --> 00:33:08,940
very<font color="#E5E5E5"> bottom example is well we can just</font>

939
00:33:07,019 --> 00:33:10,799
<font color="#CCCCCC">spawn a child process and then that</font>

940
00:33:08,940 --> 00:33:13,440
point<font color="#E5E5E5"> the variable that</font><font color="#CCCCCC"> we set will</font><font color="#E5E5E5"> be</font>

941
00:33:10,799 --> 00:33:14,730
expanded<font color="#E5E5E5"> but I don't really want</font><font color="#CCCCCC"> to</font>

942
00:33:13,440 --> 00:33:17,039
spawn<font color="#E5E5E5"> an extra process that's a little</font>

943
00:33:14,730 --> 00:33:19,440
too<font color="#E5E5E5"> noisy</font><font color="#CCCCCC"> so what you can actually do</font>

944
00:33:17,039 --> 00:33:22,200
one example is using<font color="#E5E5E5"> the internal call</font>

945
00:33:19,440 --> 00:33:23,820
command<font color="#E5E5E5"> which says expand the</font><font color="#CCCCCC"> variable</font><font color="#E5E5E5"> I</font>

946
00:33:22,200 --> 00:33:25,380
want the<font color="#CCCCCC"> value of it and as you can</font><font color="#E5E5E5"> see</font>

947
00:33:23,820 --> 00:33:27,658
<font color="#CCCCCC">in the middle command we get the value</font>

948
00:33:25,380 --> 00:33:29,730
so if we replace<font color="#E5E5E5"> that into our command</font>

949
00:33:27,659 --> 00:33:31,830
<font color="#E5E5E5">and if we run it</font><font color="#CCCCCC"> then it</font><font color="#E5E5E5"> actually</font>

950
00:33:29,730 --> 00:33:34,649
successfully expands and executes<font color="#E5E5E5"> the</font>

951
00:33:31,830 --> 00:33:36,418
value we<font color="#CCCCCC"> just set</font><font color="#E5E5E5"> okay perfect well</font>

952
00:33:34,649 --> 00:33:38,489
instead of<font color="#CCCCCC"> having one</font><font color="#E5E5E5"> variable what if</font>

953
00:33:36,419 --> 00:33:40,380
we chop up<font color="#E5E5E5"> our entire command into three</font>

954
00:33:38,490 --> 00:33:43,159
variables<font color="#CCCCCC"> comma 1 through 3 and then we</font>

955
00:33:40,380 --> 00:33:45,480
call the concatenation<font color="#CCCCCC"> of</font><font color="#E5E5E5"> comma 1 2</font><font color="#CCCCCC"> & 3</font>

956
00:33:43,159 --> 00:33:47,519
<font color="#E5E5E5">now an interesting thing happens here</font><font color="#CCCCCC"> it</font>

957
00:33:45,480 --> 00:33:50,010
<font color="#CCCCCC">runs successfully but this is actually</font>

958
00:33:47,519 --> 00:33:52,230
some<font color="#E5E5E5"> screenshots from system on Eid</font><font color="#CCCCCC"> 1</font>

959
00:33:50,010 --> 00:33:54,860
and if you'll notice<font color="#E5E5E5"> the parent command</font>

960
00:33:52,230 --> 00:33:57,779
<font color="#E5E5E5">line is perfectly fine but the image</font>

961
00:33:54,860 --> 00:34:00,149
<font color="#E5E5E5">process command line actually</font><font color="#CCCCCC"> has</font><font color="#E5E5E5"> two</font>

962
00:33:57,779 --> 00:34:02,909
percents for every<font color="#E5E5E5"> single percent and</font>

963
00:34:00,149 --> 00:34:05,908
this<font color="#E5E5E5"> is incorrect</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is I</font><font color="#CCCCCC"> released the</font>

964
00:34:02,909 --> 00:34:07,470
blog post several<font color="#E5E5E5"> weeks ago on this is</font>

965
00:34:05,909 --> 00:34:09,570
actually<font color="#CCCCCC"> a parsing bug in system on</font>

966
00:34:07,470 --> 00:34:11,040
where it doesn't properly escape the

967
00:34:09,570 --> 00:34:13,109
percent and there's really<font color="#CCCCCC"> interesting</font>

968
00:34:11,040 --> 00:34:14,609
bugs<font color="#CCCCCC"> that come</font><font color="#E5E5E5"> out if you're using event</font>

969
00:34:13,109 --> 00:34:15,810
viewer<font color="#E5E5E5"> to look at event logs or power</font>

970
00:34:14,609 --> 00:34:20,810
shells get<font color="#CCCCCC"> one of it it actually</font>

971
00:34:15,810 --> 00:34:23,429
improperly<font color="#E5E5E5"> handles this improperly</font>

972
00:34:20,810 --> 00:34:26,759
<font color="#E5E5E5">escaped</font><font color="#CCCCCC"> percent</font><font color="#E5E5E5"> there's a lot of</font>

973
00:34:23,429 --> 00:34:28,440
<font color="#CCCCCC">implications there but</font><font color="#E5E5E5"> essentially you</font>

974
00:34:26,760 --> 00:34:30,510
can if you have detection that<font color="#E5E5E5"> are</font>

975
00:34:28,440 --> 00:34:32,460
relying on<font color="#E5E5E5"> it being a single percent</font>

976
00:34:30,510 --> 00:34:33,780
then the<font color="#CCCCCC"> system one's going to give you</font>

977
00:34:32,460 --> 00:34:35,040
double percents<font color="#E5E5E5"> so I don't mean</font><font color="#CCCCCC"> to harp</font>

978
00:34:33,780 --> 00:34:36,750
<font color="#E5E5E5">on that too long but basically it's</font>

979
00:34:35,040 --> 00:34:38,159
important to test your<font color="#E5E5E5"> data as well as</font>

980
00:34:36,750 --> 00:34:39,719
<font color="#CCCCCC">the</font><font color="#E5E5E5"> tools you use</font><font color="#CCCCCC"> to analyze the data</font>

981
00:34:38,159 --> 00:34:41,790
and<font color="#E5E5E5"> try a couple</font><font color="#CCCCCC"> different tools make</font>

982
00:34:39,719 --> 00:34:44,638
<font color="#E5E5E5">sure that it lines up actually I</font>

983
00:34:41,790 --> 00:34:47,550
reported this bug twice to Microsoft

984
00:34:44,639 --> 00:34:48,780
<font color="#CCCCCC">over a year and</font><font color="#E5E5E5"> a half and I hope to see</font>

985
00:34:47,550 --> 00:34:51,780
it changed

986
00:34:48,780 --> 00:34:53,550
maybe<font color="#E5E5E5"> after year 1/2 that'd be nice so</font>

987
00:34:51,780 --> 00:34:55,080
anyways what we can do is we<font color="#E5E5E5"> can also</font>

988
00:34:53,550 --> 00:34:57,270
reorder<font color="#CCCCCC"> our</font><font color="#E5E5E5"> sub strings when we set the</font>

989
00:34:55,080 --> 00:34:59,670
<font color="#E5E5E5">initial command as long as we reassemble</font>

990
00:34:57,270 --> 00:35:01,380
<font color="#E5E5E5">them back in the right order</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then</font>

991
00:34:59,670 --> 00:35:03,330
finally we<font color="#E5E5E5"> could just set all them into</font>

992
00:35:01,380 --> 00:35:05,550
a<font color="#E5E5E5"> final command and then just have one</font>

993
00:35:03,330 --> 00:35:08,160
command to play with for<font color="#CCCCCC"> our final</font>

994
00:35:05,550 --> 00:35:10,710
execution<font color="#CCCCCC"> options</font><font color="#E5E5E5"> so that's that</font>

995
00:35:08,160 --> 00:35:12,540
chopped up into<font color="#E5E5E5"> little pieces via some</font>

996
00:35:10,710 --> 00:35:15,359
<font color="#CCCCCC">to a variable</font><font color="#E5E5E5"> called final we can just</font>

997
00:35:12,540 --> 00:35:16,680
<font color="#E5E5E5">call final and it runs our command now</font>

998
00:35:15,359 --> 00:35:18,089
at this point<font color="#E5E5E5"> they're they're kind of</font>

999
00:35:16,680 --> 00:35:20,368
<font color="#CCCCCC">five options and the tools for how you</font>

1000
00:35:18,089 --> 00:35:22,650
can run<font color="#E5E5E5"> the final payload one is what we</font>

1001
00:35:20,369 --> 00:35:24,480
have right<font color="#E5E5E5"> here</font><font color="#CCCCCC"> if at all possible we</font>

1002
00:35:22,650 --> 00:35:26,130
<font color="#E5E5E5">don't want to spawn</font><font color="#CCCCCC"> a child process so</font>

1003
00:35:24,480 --> 00:35:27,540
let's<font color="#E5E5E5"> just run the call command now</font>

1004
00:35:26,130 --> 00:35:29,910
there are<font color="#E5E5E5"> fringe cases in which you have</font>

1005
00:35:27,540 --> 00:35:32,009
<font color="#CCCCCC">two it will in which I've not found a</font>

1006
00:35:29,910 --> 00:35:33,330
<font color="#E5E5E5">good way to not use call like if you</font>

1007
00:35:32,010 --> 00:35:35,220
have vertical<font color="#E5E5E5"> pipes or things like that</font>

1008
00:35:33,330 --> 00:35:36,869
<font color="#CCCCCC">one it expands</font><font color="#E5E5E5"> it actually interprets it</font>

1009
00:35:35,220 --> 00:35:38,040
so it gets<font color="#CCCCCC"> kind of weird in that</font><font color="#E5E5E5"> case</font>

1010
00:35:36,869 --> 00:35:40,349
you want<font color="#CCCCCC"> a</font><font color="#E5E5E5"> child process</font>

1011
00:35:38,040 --> 00:35:42,869
<font color="#E5E5E5">what's your options two and three you</font>

1012
00:35:40,349 --> 00:35:45,000
can basically just say command<font color="#E5E5E5"> C run the</font>

1013
00:35:42,869 --> 00:35:46,920
final variable<font color="#E5E5E5"> or you</font><font color="#CCCCCC"> can echo the final</font>

1014
00:35:45,000 --> 00:35:49,230
<font color="#E5E5E5">variable into the command</font><font color="#CCCCCC"> the second</font>

1015
00:35:46,920 --> 00:35:51,000
process<font color="#CCCCCC"> and options four and five are</font>

1016
00:35:49,230 --> 00:35:54,960
the<font color="#E5E5E5"> same except they have to do with</font>

1017
00:35:51,000 --> 00:35:57,390
PowerShell<font color="#CCCCCC"> so I also built into</font><font color="#E5E5E5"> the tool</font>

1018
00:35:54,960 --> 00:36:00,720
the ability<font color="#CCCCCC"> to handle</font><font color="#E5E5E5"> PowerShell lair</font>

1019
00:35:57,390 --> 00:36:04,020
escaping inside of<font color="#CCCCCC"> das lair escaping to</font>

1020
00:36:00,720 --> 00:36:05,939
handle that<font color="#E5E5E5"> and that was just a madness</font>

1021
00:36:04,020 --> 00:36:07,200
but<font color="#CCCCCC"> it sits there</font><font color="#E5E5E5"> and it works and this</font>

1022
00:36:05,940 --> 00:36:11,520
<font color="#E5E5E5">is kind of what</font><font color="#CCCCCC"> that syntax will look</font>

1023
00:36:07,200 --> 00:36:14,460
<font color="#E5E5E5">like</font><font color="#CCCCCC"> and so with this basic command</font>

1024
00:36:11,520 --> 00:36:16,890
we've obfuscated the netstat command<font color="#E5E5E5"> and</font>

1025
00:36:14,460 --> 00:36:19,290
dynamically it looks you'll still see

1026
00:36:16,890 --> 00:36:21,359
<font color="#CCCCCC">netstat run as a child process</font><font color="#E5E5E5"> but our</font>

1027
00:36:19,290 --> 00:36:24,240
original<font color="#CCCCCC"> command here is chopped up</font><font color="#E5E5E5"> and</font>

1028
00:36:21,359 --> 00:36:27,210
we didn't<font color="#E5E5E5"> use</font><font color="#CCCCCC"> any carrots</font><font color="#E5E5E5"> commas</font>

1029
00:36:24,240 --> 00:36:29,279
semicolons anything like that but if

1030
00:36:27,210 --> 00:36:31,140
we're<font color="#E5E5E5"> even when we want to we totally</font>

1031
00:36:29,280 --> 00:36:32,820
can<font color="#CCCCCC"> and the tool</font><font color="#E5E5E5"> will help</font><font color="#CCCCCC"> to do that so</font>

1032
00:36:31,140 --> 00:36:35,040
you<font color="#CCCCCC"> can randomize the case you can add</font>

1033
00:36:32,820 --> 00:36:36,390
remove<font color="#CCCCCC"> whitespace</font><font color="#E5E5E5"> you can also add</font>

1034
00:36:35,040 --> 00:36:37,950
commas and semicolons you can add

1035
00:36:36,390 --> 00:36:40,319
carrots of different layers you<font color="#CCCCCC"> can also</font>

1036
00:36:37,950 --> 00:36:43,680
add the nested<font color="#E5E5E5"> parentheses and it runs</font>

1037
00:36:40,320 --> 00:36:45,030
<font color="#E5E5E5">just fine now it when it runs in this</font>

1038
00:36:43,680 --> 00:36:47,879
case it still just runs in<font color="#E5E5E5"> that stack</font>

1039
00:36:45,030 --> 00:36:49,830
command<font color="#E5E5E5"> but what you can do is as input</font>

1040
00:36:47,880 --> 00:36:51,960
you<font color="#CCCCCC"> can add your own obfuscation to</font>

1041
00:36:49,830 --> 00:36:54,270
netstat like carrots<font color="#E5E5E5"> or double</font><font color="#CCCCCC"> quotes</font>

1042
00:36:51,960 --> 00:36:56,430
<font color="#E5E5E5">and the tool will</font><font color="#CCCCCC"> properly</font><font color="#E5E5E5"> handle all</font><font color="#CCCCCC"> of</font>

1043
00:36:54,270 --> 00:36:57,780
<font color="#E5E5E5">your special characters at input and it</font>

1044
00:36:56,430 --> 00:37:00,060
will<font color="#CCCCCC"> handle all</font><font color="#E5E5E5"> the layers of escaping</font>

1045
00:36:57,780 --> 00:37:03,570
necessary to still produce<font color="#E5E5E5"> the proper</font>

1046
00:37:00,060 --> 00:37:05,339
<font color="#CCCCCC">command as output so if as input you</font>

1047
00:37:03,570 --> 00:37:07,140
have<font color="#E5E5E5"> net stat that has a double quote</font>

1048
00:37:05,339 --> 00:37:08,609
<font color="#CCCCCC">double quote inside</font><font color="#E5E5E5"> of it the tool will</font>

1049
00:37:07,140 --> 00:37:12,390
<font color="#E5E5E5">properly handle that throughout all</font><font color="#CCCCCC"> the</font>

1050
00:37:08,609 --> 00:37:15,150
layers but now there's a huge<font color="#CCCCCC"> difference</font>

1051
00:37:12,390 --> 00:37:17,250
here between<font color="#E5E5E5"> two double quotes side by</font>

1052
00:37:15,150 --> 00:37:19,200
side and double quotes<font color="#E5E5E5"> that aren't</font>

1053
00:37:17,250 --> 00:37:20,609
adjacent now it's important that you

1054
00:37:19,200 --> 00:37:22,560
have<font color="#CCCCCC"> evenly paired double quotes</font><font color="#E5E5E5"> with</font>

1055
00:37:20,609 --> 00:37:23,740
the reason this is<font color="#CCCCCC"> a problem</font><font color="#E5E5E5"> if we try</font>

1056
00:37:22,560 --> 00:37:25,000
to<font color="#E5E5E5"> do this in the command</font>

1057
00:37:23,740 --> 00:37:27,098
it's actually<font color="#E5E5E5"> not gonna work</font><font color="#CCCCCC"> because</font>

1058
00:37:25,000 --> 00:37:31,089
<font color="#CCCCCC">there's no way</font><font color="#E5E5E5"> to escape</font><font color="#CCCCCC"> double quotes</font>

1059
00:37:27,099 --> 00:37:32,589
<font color="#E5E5E5">in the command</font><font color="#CCCCCC"> X's arguments and</font><font color="#E5E5E5"> and the</font>

1060
00:37:31,089 --> 00:37:34,390
fact that<font color="#E5E5E5"> these double quotes remain is</font>

1061
00:37:32,589 --> 00:37:36,130
this kind of weird concept<font color="#E5E5E5"> of like</font>

1062
00:37:34,390 --> 00:37:37,390
almost<font color="#E5E5E5"> the arguments are just kind of me</font>

1063
00:37:36,130 --> 00:37:40,570
<font color="#CCCCCC">when I concatenated together</font><font color="#E5E5E5"> but the</font>

1064
00:37:37,390 --> 00:37:42,819
<font color="#E5E5E5">quote still stay so this is a problem</font>

1065
00:37:40,570 --> 00:37:43,960
<font color="#CCCCCC">for me how do i if</font><font color="#E5E5E5"> i have evenly</font>

1066
00:37:42,820 --> 00:37:46,089
<font color="#E5E5E5">balanced double quotes that aren't</font>

1067
00:37:43,960 --> 00:37:47,230
adjacent how<font color="#E5E5E5"> I make this work because</font>

1068
00:37:46,089 --> 00:37:48,490
they're gonna<font color="#E5E5E5"> be situations in</font><font color="#CCCCCC"> which</font>

1069
00:37:47,230 --> 00:37:50,970
someone wants to input a command that

1070
00:37:48,490 --> 00:37:53,709
<font color="#E5E5E5">has double quotes that aren't adjacent</font>

1071
00:37:50,970 --> 00:37:55,540
so I kind<font color="#CCCCCC"> of after a lot of</font><font color="#E5E5E5"> head banging</font>

1072
00:37:53,710 --> 00:37:57,010
came up with a<font color="#CCCCCC"> four-step solution for</font>

1073
00:37:55,540 --> 00:37:58,270
<font color="#E5E5E5">this that's all handled</font><font color="#CCCCCC"> in the tool if</font>

1074
00:37:57,010 --> 00:38:00,310
you<font color="#E5E5E5"> ever have something that has to be</font>

1075
00:37:58,270 --> 00:38:02,470
double quoted like this<font color="#E5E5E5"> it handles all</font>

1076
00:38:00,310 --> 00:38:05,349
this for you<font color="#E5E5E5"> so basically anywhere</font><font color="#CCCCCC"> where</font>

1077
00:38:02,470 --> 00:38:08,848
I want a<font color="#E5E5E5"> non adjacent double quote I</font>

1078
00:38:05,349 --> 00:38:11,530
double it<font color="#CCCCCC"> out I make two double</font><font color="#E5E5E5"> quotes</font>

1079
00:38:08,849 --> 00:38:12,760
the next step is I set an<font color="#CCCCCC"> environment</font>

1080
00:38:11,530 --> 00:38:14,800
variable in<font color="#E5E5E5"> this</font><font color="#CCCCCC"> case let's call it</font>

1081
00:38:12,760 --> 00:38:16,240
quotes<font color="#E5E5E5"> and I set up with the value quote</font>

1082
00:38:14,800 --> 00:38:18,540
quote because<font color="#E5E5E5"> I have to have</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> even</font>

1083
00:38:16,240 --> 00:38:22,029
<font color="#E5E5E5">number of quotes throughout my command</font>

1084
00:38:18,540 --> 00:38:24,339
<font color="#E5E5E5">next our final variable I'm gonna use</font>

1085
00:38:22,030 --> 00:38:27,070
this substring syntax for this character

1086
00:38:24,339 --> 00:38:29,320
substitution and<font color="#E5E5E5"> I'm gonna say hey find</font>

1087
00:38:27,070 --> 00:38:32,140
every instance<font color="#E5E5E5"> of quote quote and I want</font>

1088
00:38:29,320 --> 00:38:33,460
to replace<font color="#E5E5E5"> it</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> one quote but I can't</font>

1089
00:38:32,140 --> 00:38:35,230
just put one<font color="#CCCCCC"> quart there because then</font>

1090
00:38:33,460 --> 00:38:38,650
I'm gonna have unbalanced double quotes

1091
00:38:35,230 --> 00:38:41,109
<font color="#E5E5E5">what to do but what</font><font color="#CCCCCC"> I can do is inside</font>

1092
00:38:38,650 --> 00:38:45,369
of this<font color="#CCCCCC"> I can call the quotes variable</font>

1093
00:38:41,109 --> 00:38:46,900
and say I<font color="#CCCCCC"> just want one of</font><font color="#E5E5E5"> you now in</font>

1094
00:38:45,369 --> 00:38:49,500
the command<font color="#CCCCCC"> we still have even double</font>

1095
00:38:46,900 --> 00:38:52,119
quotes but in memory I want just one

1096
00:38:49,500 --> 00:38:54,010
unfortunately<font color="#E5E5E5"> this doesn't work this</font>

1097
00:38:52,119 --> 00:38:56,260
doesn't work<font color="#CCCCCC"> because of those percent</font>

1098
00:38:54,010 --> 00:38:58,119
signs<font color="#E5E5E5"> because we have our final variable</font>

1099
00:38:56,260 --> 00:38:59,619
that's<font color="#E5E5E5"> percent percent in the stuff in</font>

1100
00:38:58,119 --> 00:39:01,630
between<font color="#CCCCCC"> within inside</font><font color="#E5E5E5"> of that we're</font>

1101
00:38:59,619 --> 00:39:03,119
trying<font color="#E5E5E5"> to put more</font><font color="#CCCCCC"> percents so that's</font>

1102
00:39:01,630 --> 00:39:06,220
<font color="#E5E5E5">why all</font><font color="#CCCCCC"> right well how can</font><font color="#E5E5E5"> I get</font>

1103
00:39:03,119 --> 00:39:08,230
<font color="#E5E5E5">something in memory maybe is there</font>

1104
00:39:06,220 --> 00:39:09,669
another way<font color="#CCCCCC"> that I</font><font color="#E5E5E5"> can extract the value</font>

1105
00:39:08,230 --> 00:39:13,540
of an<font color="#E5E5E5"> environment variable without using</font>

1106
00:39:09,670 --> 00:39:18,040
percents fun fact if you're on Vista<font color="#E5E5E5"> or</font>

1107
00:39:13,540 --> 00:39:20,800
later you can<font color="#E5E5E5"> use a slash Vista flag now</font>

1108
00:39:18,040 --> 00:39:22,810
<font color="#CCCCCC">hey Rio when you use the slash Vista</font>

1109
00:39:20,800 --> 00:39:25,890
flag instead<font color="#E5E5E5"> of percents for a variable</font>

1110
00:39:22,810 --> 00:39:29,619
<font color="#E5E5E5">you can actually use exclamation points</font>

1111
00:39:25,890 --> 00:39:31,720
so now<font color="#CCCCCC"> our quotes variable is resolved</font>

1112
00:39:29,619 --> 00:39:34,480
in memory inside of the percents there's

1113
00:39:31,720 --> 00:39:36,970
no<font color="#E5E5E5"> conflict there</font><font color="#CCCCCC"> and this command freak</font>

1114
00:39:34,480 --> 00:39:38,619
works<font color="#E5E5E5"> double quotes evenly paired</font>

1115
00:39:36,970 --> 00:39:40,540
<font color="#CCCCCC">non-adjacent</font><font color="#E5E5E5"> awesome</font>

1116
00:39:38,619 --> 00:39:42,700
now<font color="#E5E5E5"> I have to admit this is a little bit</font>

1117
00:39:40,540 --> 00:39:44,770
of a troll<font color="#E5E5E5"> this does work but there is</font>

1118
00:39:42,700 --> 00:39:46,299
no such thing<font color="#CCCCCC"> as the Vista</font><font color="#E5E5E5"> flag if you</font>

1119
00:39:44,770 --> 00:39:50,200
look at commands help menu you will<font color="#CCCCCC"> see</font>

1120
00:39:46,300 --> 00:39:52,750
<font color="#E5E5E5">those</font><font color="#CCCCCC"> /v : on which is enabling delayed</font>

1121
00:39:50,200 --> 00:39:55,509
environment variable expansion but when

1122
00:39:52,750 --> 00:39:57,250
I see that<font color="#CCCCCC"> I can't just look for V :</font>

1123
00:39:55,510 --> 00:39:58,990
on<font color="#E5E5E5"> I have to poke at</font><font color="#CCCCCC"> it a little bit</font>

1124
00:39:57,250 --> 00:40:02,020
<font color="#E5E5E5">what I found is</font><font color="#CCCCCC"> that you can use any</font>

1125
00:39:58,990 --> 00:40:03,819
substring<font color="#E5E5E5"> of V : on as long as it's not</font>

1126
00:40:02,020 --> 00:40:06,720
<font color="#E5E5E5">V : off and a couple other interesting</font>

1127
00:40:03,820 --> 00:40:12,420
<font color="#E5E5E5">fringe</font><font color="#CCCCCC"> cases but</font><font color="#E5E5E5"> then you can do /b</font>

1128
00:40:06,720 --> 00:40:15,879
almost anything else and it still works

1129
00:40:12,420 --> 00:40:19,510
<font color="#CCCCCC">Thanks alright well that is</font><font color="#E5E5E5"> got</font>

1130
00:40:15,880 --> 00:40:20,560
interesting I'll come back to that<font color="#CCCCCC"> in a</font>

1131
00:40:19,510 --> 00:40:22,600
second we'll have some more<font color="#E5E5E5"> fun</font><font color="#CCCCCC"> with</font>

1132
00:40:20,560 --> 00:40:25,450
that<font color="#E5E5E5"> but also environment variable names</font>

1133
00:40:22,600 --> 00:40:27,359
<font color="#E5E5E5">yeah comm final quotes this</font><font color="#CCCCCC"> is dumb</font><font color="#E5E5E5"> it's</font>

1134
00:40:25,450 --> 00:40:30,399
just to make the example easier an

1135
00:40:27,359 --> 00:40:32,080
attacker<font color="#E5E5E5"> or a tool could</font><font color="#CCCCCC"> just make all</font>

1136
00:40:30,400 --> 00:40:33,850
those special characters<font color="#CCCCCC"> for</font><font color="#E5E5E5"> environment</font>

1137
00:40:32,080 --> 00:40:35,290
variable names<font color="#E5E5E5"> you could also start with</font>

1138
00:40:33,850 --> 00:40:36,790
<font color="#CCCCCC">a non whitespace character then have</font>

1139
00:40:35,290 --> 00:40:38,830
differing lengths of<font color="#E5E5E5"> whitespace to be</font>

1140
00:40:36,790 --> 00:40:42,070
your variable names<font color="#CCCCCC"> and I can just</font><font color="#E5E5E5"> get</font>

1141
00:40:38,830 --> 00:40:43,810
crazier<font color="#E5E5E5"> and crazier from there so dude</font>

1142
00:40:42,070 --> 00:40:45,270
<font color="#E5E5E5">what the crap you call yourself a</font>

1143
00:40:43,810 --> 00:40:48,250
defender why are you doing this stuff

1144
00:40:45,270 --> 00:40:49,300
well I started with concatenation

1145
00:40:48,250 --> 00:40:51,720
because<font color="#CCCCCC"> we've actually</font><font color="#E5E5E5"> already seen</font>

1146
00:40:49,300 --> 00:40:54,220
little baby steps of<font color="#E5E5E5"> this in the wild</font>

1147
00:40:51,720 --> 00:40:56,200
<font color="#E5E5E5">most of them coming from malicious link</font>

1148
00:40:54,220 --> 00:40:58,720
files but attackers never seems<font color="#E5E5E5"> to move</font>

1149
00:40:56,200 --> 00:41:00,520
past<font color="#CCCCCC"> obfuscating just a small piece of</font>

1150
00:40:58,720 --> 00:41:02,980
the command and in almost<font color="#E5E5E5"> every single</font>

1151
00:41:00,520 --> 00:41:03,970
<font color="#E5E5E5">case we saw before this research it was</font>

1152
00:41:02,980 --> 00:41:07,030
<font color="#E5E5E5">just office getting the string</font>

1153
00:41:03,970 --> 00:41:09,189
<font color="#CCCCCC">powershell as in this</font><font color="#E5E5E5"> scenario this one</font>

1154
00:41:07,030 --> 00:41:11,650
is similar<font color="#E5E5E5"> the yellow spots are</font><font color="#CCCCCC"> just</font>

1155
00:41:09,190 --> 00:41:12,640
like random crap<font color="#E5E5E5"> and random variables</font>

1156
00:41:11,650 --> 00:41:14,500
<font color="#CCCCCC">that</font><font color="#E5E5E5"> aren't even called they're just</font>

1157
00:41:12,640 --> 00:41:16,480
trying<font color="#E5E5E5"> to break it up and</font><font color="#CCCCCC"> threw some</font>

1158
00:41:14,500 --> 00:41:17,770
carrots<font color="#CCCCCC"> on that one then this one</font><font color="#E5E5E5"> as</font>

1159
00:41:16,480 --> 00:41:20,290
<font color="#E5E5E5">well and as you</font><font color="#CCCCCC"> can see this one uses</font>

1160
00:41:17,770 --> 00:41:22,240
<font color="#E5E5E5">that</font><font color="#CCCCCC"> /v at the beginning as well so now</font>

1161
00:41:20,290 --> 00:41:23,500
you start to notice<font color="#E5E5E5"> the</font><font color="#CCCCCC"> /v thing okay</font>

1162
00:41:22,240 --> 00:41:25,209
that means<font color="#E5E5E5"> that I</font><font color="#CCCCCC"> have to spawn a child</font>

1163
00:41:23,500 --> 00:41:26,710
<font color="#E5E5E5">process and oh yeah they're using</font>

1164
00:41:25,210 --> 00:41:30,100
<font color="#CCCCCC">exclamation points</font><font color="#E5E5E5"> instead of percents</font>

1165
00:41:26,710 --> 00:41:31,750
for<font color="#E5E5E5"> their variables</font><font color="#CCCCCC"> cool that's neat so</font>

1166
00:41:30,100 --> 00:41:34,390
that was technique one<font color="#E5E5E5"> of for</font>

1167
00:41:31,750 --> 00:41:36,130
concatenation<font color="#CCCCCC"> and again the part of that</font>

1168
00:41:34,390 --> 00:41:38,830
we've seen the wild<font color="#E5E5E5"> is just these like</font>

1169
00:41:36,130 --> 00:41:40,630
<font color="#E5E5E5">little link files the next thing we're</font>

1170
00:41:38,830 --> 00:41:42,549
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to talk about</font><font color="#E5E5E5"> we've not seen in</font>

1171
00:41:40,630 --> 00:41:45,580
the<font color="#E5E5E5"> wild</font><font color="#CCCCCC"> as of the time</font><font color="#E5E5E5"> that this</font>

1172
00:41:42,550 --> 00:41:46,550
research was finished<font color="#E5E5E5"> and when I say</font>

1173
00:41:45,580 --> 00:41:48,590
that<font color="#CCCCCC"> what I mean</font>

1174
00:41:46,550 --> 00:41:52,130
is that for the past<font color="#E5E5E5"> nine</font><font color="#CCCCCC"> months at this</font>

1175
00:41:48,590 --> 00:41:53,930
point<font color="#E5E5E5"> I guess</font><font color="#CCCCCC"> ten months my</font><font color="#E5E5E5"> my life has</font>

1176
00:41:52,130 --> 00:41:55,400
been looking<font color="#E5E5E5"> at these techniques and</font>

1177
00:41:53,930 --> 00:41:57,009
then<font color="#E5E5E5"> searching</font><font color="#CCCCCC"> for them across all of</font>

1178
00:41:55,400 --> 00:41:58,790
<font color="#E5E5E5">our internal information</font><font color="#CCCCCC"> at fireEye</font>

1179
00:41:57,010 --> 00:42:00,560
<font color="#E5E5E5">virustotal and all these</font><font color="#CCCCCC"> different</font>

1180
00:41:58,790 --> 00:42:01,940
places<font color="#E5E5E5"> and then running all these</font>

1181
00:42:00,560 --> 00:42:03,230
detection<font color="#CCCCCC"> 'aa cross millions and</font>

1182
00:42:01,940 --> 00:42:04,820
millions of<font color="#CCCCCC"> endpoints and</font><font color="#E5E5E5"> on the network</font>

1183
00:42:03,230 --> 00:42:07,820
<font color="#E5E5E5">to look for these techniques and I've</font>

1184
00:42:04,820 --> 00:42:09,740
come up<font color="#E5E5E5"> completely empty</font><font color="#CCCCCC"> so I feel like</font>

1185
00:42:07,820 --> 00:42:12,440
it's going<font color="#E5E5E5"> to be really interesting when</font>

1186
00:42:09,740 --> 00:42:14,600
we see this stuff<font color="#E5E5E5"> in the wild but it's</font>

1187
00:42:12,440 --> 00:42:18,290
it's it's<font color="#CCCCCC"> all</font><font color="#E5E5E5"> things that we've not seen</font>

1188
00:42:14,600 --> 00:42:20,360
before<font color="#CCCCCC"> before this research so the for</font>

1189
00:42:18,290 --> 00:42:22,250
loop for loop is<font color="#E5E5E5"> freaking cool it has</font>

1190
00:42:20,360 --> 00:42:25,250
<font color="#E5E5E5">some fun stuff</font><font color="#CCCCCC"> forests of a command XC</font>

1191
00:42:22,250 --> 00:42:26,990
so<font color="#CCCCCC"> I dubbed this</font><font color="#E5E5E5"> for coding for loop</font>

1192
00:42:25,250 --> 00:42:28,910
<font color="#E5E5E5">encoding and again if you go back to the</font>

1193
00:42:26,990 --> 00:42:31,520
command<font color="#E5E5E5"> to help menu I love this this</font>

1194
00:42:28,910 --> 00:42:32,690
<font color="#CCCCCC">verbage here it says you use the</font>

1195
00:42:31,520 --> 00:42:34,310
variable expansion you can use

1196
00:42:32,690 --> 00:42:36,620
exclamation<font color="#E5E5E5"> points instead of her</font><font color="#CCCCCC"> sense</font>

1197
00:42:34,310 --> 00:42:38,750
<font color="#E5E5E5">which is quite a different thing</font><font color="#CCCCCC"> when</font>

1198
00:42:36,620 --> 00:42:39,529
<font color="#E5E5E5">inside of a for</font><font color="#CCCCCC"> loop</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> is an</font>

1199
00:42:38,750 --> 00:42:41,900
understatement

1200
00:42:39,530 --> 00:42:43,190
it gets crazy different in a for<font color="#E5E5E5"> loop so</font>

1201
00:42:41,900 --> 00:42:45,920
what do I mean<font color="#CCCCCC"> let's</font><font color="#E5E5E5"> start with our</font>

1202
00:42:43,190 --> 00:42:47,330
netstat command again let's make<font color="#CCCCCC"> sure we</font>

1203
00:42:45,920 --> 00:42:48,830
have<font color="#CCCCCC"> that</font><font color="#E5E5E5"> V in there for variable</font>

1204
00:42:47,330 --> 00:42:50,240
expansion and again<font color="#E5E5E5"> it can</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> any of</font>

1205
00:42:48,830 --> 00:42:55,430
<font color="#E5E5E5">these options</font><font color="#CCCCCC"> but we'll just stick with</font>

1206
00:42:50,240 --> 00:42:57,169
<font color="#E5E5E5">V</font><font color="#CCCCCC"> um another</font><font color="#E5E5E5"> fun thing</font><font color="#CCCCCC"> remember I</font><font color="#E5E5E5"> said</font>

1207
00:42:55,430 --> 00:42:58,730
you want to<font color="#CCCCCC"> look at your look at your</font>

1208
00:42:57,170 --> 00:43:00,770
argument to<font color="#E5E5E5"> see do I</font><font color="#CCCCCC"> have to have this</font>

1209
00:42:58,730 --> 00:43:02,660
or what does this<font color="#E5E5E5"> thing mean how</font><font color="#CCCCCC"> many</font>

1210
00:43:00,770 --> 00:43:05,560
<font color="#E5E5E5">people think the</font><font color="#CCCCCC"> /c is necessary for</font>

1211
00:43:02,660 --> 00:43:07,670
command to run<font color="#CCCCCC"> non-interactive commands</font>

1212
00:43:05,560 --> 00:43:11,480
they<font color="#E5E5E5"> actually are are other options like</font>

1213
00:43:07,670 --> 00:43:13,040
<font color="#CCCCCC">k stuff like that</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> see is again there</font>

1214
00:43:11,480 --> 00:43:15,230
<font color="#E5E5E5">saying hey everything else</font><font color="#CCCCCC"> after this is</font>

1215
00:43:13,040 --> 00:43:17,840
an<font color="#CCCCCC"> argument well if you scroll down</font><font color="#E5E5E5"> on</font>

1216
00:43:15,230 --> 00:43:20,960
the help menu<font color="#E5E5E5"> you'll find that</font><font color="#CCCCCC"> for</font>

1217
00:43:17,840 --> 00:43:25,580
compatibility reasons<font color="#CCCCCC"> /r is the same as</font>

1218
00:43:20,960 --> 00:43:27,350
/c<font color="#E5E5E5"> all right well that got weird because</font>

1219
00:43:25,580 --> 00:43:28,549
<font color="#CCCCCC">I know attackers</font><font color="#E5E5E5"> like to rename</font><font color="#CCCCCC"> binary</font>

1220
00:43:27,350 --> 00:43:32,330
<font color="#E5E5E5">so I don't want to write my detection</font>

1221
00:43:28,550 --> 00:43:33,560
<font color="#E5E5E5">based off of command XE so a</font><font color="#CCCCCC"> /c seemed</font>

1222
00:43:32,330 --> 00:43:35,750
like a<font color="#E5E5E5"> good place to kind of anchor off</font>

1223
00:43:33,560 --> 00:43:37,310
of but now instead<font color="#CCCCCC"> of /c we</font><font color="#E5E5E5"> can just</font>

1224
00:43:35,750 --> 00:43:39,680
<font color="#E5E5E5">replace</font><font color="#CCCCCC"> that with a</font><font color="#E5E5E5"> /r and it still</font>

1225
00:43:37,310 --> 00:43:41,660
works<font color="#CCCCCC"> okay well I'm gonna make sure</font><font color="#E5E5E5"> I</font>

1226
00:43:39,680 --> 00:43:43,220
look for<font color="#E5E5E5"> both of those now that's kind</font>

1227
00:43:41,660 --> 00:43:45,259
of<font color="#E5E5E5"> weird the way I remember this is</font><font color="#CCCCCC"> cr-v</font>

1228
00:43:43,220 --> 00:43:51,109
<font color="#E5E5E5">see an R for</font><font color="#CCCCCC"> the command and V for</font>

1229
00:43:45,260 --> 00:43:52,670
variable expansion another amazing<font color="#CCCCCC"> thing</font>

1230
00:43:51,110 --> 00:43:55,550
is this is what<font color="#CCCCCC"> I like</font><font color="#E5E5E5"> to call a huge</font>

1231
00:43:52,670 --> 00:43:57,930
<font color="#E5E5E5">troll opportunity because all that space</font>

1232
00:43:55,550 --> 00:44:01,079
before the<font color="#E5E5E5"> /c or /r</font>

1233
00:43:57,930 --> 00:44:03,180
you can put anything you<font color="#CCCCCC"> want this</font>

1234
00:44:01,079 --> 00:44:04,530
command works it doesn't<font color="#E5E5E5"> it sir</font><font color="#CCCCCC"> that</font>

1235
00:44:03,180 --> 00:44:07,290
gift but you<font color="#E5E5E5"> can put almost anything you</font>

1236
00:44:04,530 --> 00:44:09,540
<font color="#E5E5E5">want</font><font color="#CCCCCC"> and it's not interpreted so an</font>

1237
00:44:07,290 --> 00:44:11,009
attacker<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know could be nice and send</font>

1238
00:44:09,540 --> 00:44:13,710
you funny messages and stuff in the

1239
00:44:11,010 --> 00:44:15,630
command some do you could also do this

1240
00:44:13,710 --> 00:44:16,530
<font color="#E5E5E5">so if an analyst is looking at this and</font>

1241
00:44:15,630 --> 00:44:18,450
you what do<font color="#CCCCCC"> you think's going to happen</font>

1242
00:44:16,530 --> 00:44:20,400
<font color="#E5E5E5">when</font><font color="#CCCCCC"> you run this command you'll see the</font>

1243
00:44:18,450 --> 00:44:22,680
path variable<font color="#CCCCCC"> right</font><font color="#E5E5E5"> anything</font><font color="#CCCCCC"> look weird</font>

1244
00:44:20,400 --> 00:44:24,329
about<font color="#E5E5E5"> this what about</font><font color="#CCCCCC"> all this white</font>

1245
00:44:22,680 --> 00:44:29,669
space<font color="#E5E5E5"> before</font><font color="#CCCCCC"> that netstat command down</font>

1246
00:44:24,329 --> 00:44:32,579
there backslash<font color="#CCCCCC"> c has</font><font color="#E5E5E5"> no meaning</font>

1247
00:44:29,670 --> 00:44:34,650
<font color="#E5E5E5">it's /c that we're looking</font><font color="#CCCCCC"> for or for /r</font>

1248
00:44:32,579 --> 00:44:36,839
<font color="#E5E5E5">so when you run this</font><font color="#CCCCCC"> nest that's</font><font color="#E5E5E5"> gonna</font>

1249
00:44:34,650 --> 00:44:39,059
run<font color="#E5E5E5"> so if you're an analyst and you see</font>

1250
00:44:36,839 --> 00:44:40,500
that<font color="#E5E5E5"> horizontal scrollbar be really tiny</font>

1251
00:44:39,059 --> 00:44:42,210
<font color="#CCCCCC">you might want to slide over</font><font color="#E5E5E5"> and see</font>

1252
00:44:40,500 --> 00:44:44,460
what's<font color="#CCCCCC"> over there</font><font color="#E5E5E5"> or just enable</font>

1253
00:44:42,210 --> 00:44:47,790
<font color="#E5E5E5">wrapping lines or something I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know</font>

1254
00:44:44,460 --> 00:44:49,470
<font color="#CCCCCC">gosh man this is getting rough alright</font>

1255
00:44:47,790 --> 00:44:51,329
anyways for coding for loop<font color="#E5E5E5"> encoding how</font>

1256
00:44:49,470 --> 00:44:53,009
do we do this well we take our command

1257
00:44:51,329 --> 00:44:54,359
<font color="#E5E5E5">we</font><font color="#CCCCCC"> take all the</font><font color="#E5E5E5"> unique characters for</font>

1258
00:44:53,010 --> 00:44:57,000
<font color="#CCCCCC">that command we set it</font><font color="#E5E5E5"> in the variable</font>

1259
00:44:54,359 --> 00:44:58,619
<font color="#E5E5E5">let's call it unique we then have a for</font>

1260
00:44:57,000 --> 00:45:00,240
loop<font color="#CCCCCC"> and</font><font color="#E5E5E5"> inside that</font><font color="#CCCCCC"> we're going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> put</font>

1261
00:44:58,619 --> 00:45:00,960
the indexes of<font color="#E5E5E5"> each character of our</font>

1262
00:45:00,240 --> 00:45:06,479
command

1263
00:45:00,960 --> 00:45:08,339
so for<font color="#CCCCCC"> net stat 0 1 2</font><font color="#E5E5E5"> etc that's our</font>

1264
00:45:06,480 --> 00:45:10,380
command<font color="#E5E5E5"> and then we going to end with</font>

1265
00:45:08,339 --> 00:45:11,730
<font color="#E5E5E5">one</font><font color="#CCCCCC"> more value that</font><font color="#E5E5E5"> in this case it's</font>

1266
00:45:10,380 --> 00:45:13,109
<font color="#CCCCCC">just not going</font><font color="#E5E5E5"> to be one of the normal</font>

1267
00:45:11,730 --> 00:45:15,540
values and this<font color="#E5E5E5"> is kind of our book in</font>

1268
00:45:13,109 --> 00:45:18,509
<font color="#CCCCCC">delimiter</font><font color="#E5E5E5"> then for each</font><font color="#CCCCCC"> one of those</font>

1269
00:45:15,540 --> 00:45:20,910
loops<font color="#E5E5E5"> we are going to set and append</font>

1270
00:45:18,510 --> 00:45:23,099
<font color="#CCCCCC">onto this new variable</font><font color="#E5E5E5"> called final the</font>

1271
00:45:20,910 --> 00:45:25,049
the index from the for loop of the

1272
00:45:23,099 --> 00:45:26,730
unique variable and so loop by loop

1273
00:45:25,049 --> 00:45:28,530
<font color="#E5E5E5">we're gonna reassemble</font><font color="#CCCCCC"> our command in</font>

1274
00:45:26,730 --> 00:45:29,819
memory<font color="#E5E5E5"> and then each</font><font color="#CCCCCC"> time we're going to</font>

1275
00:45:28,530 --> 00:45:31,799
<font color="#E5E5E5">check and say hey are you the book in</font>

1276
00:45:29,819 --> 00:45:33,390
delimiter<font color="#E5E5E5"> and then if you are all right</font>

1277
00:45:31,799 --> 00:45:36,809
let's<font color="#CCCCCC"> actually execute whatever's</font><font color="#E5E5E5"> on the</font>

1278
00:45:33,390 --> 00:45:38,400
<font color="#E5E5E5">final valuable</font><font color="#CCCCCC"> there variable and this</font>

1279
00:45:36,809 --> 00:45:40,200
<font color="#E5E5E5">is what it looks</font><font color="#CCCCCC"> like here</font><font color="#E5E5E5"> and so in</font>

1280
00:45:38,400 --> 00:45:41,549
standard<font color="#CCCCCC"> output you have</font><font color="#E5E5E5"> every iteration</font>

1281
00:45:40,200 --> 00:45:43,589
of the for<font color="#CCCCCC"> loop but none of it actually</font>

1282
00:45:41,549 --> 00:45:45,030
<font color="#E5E5E5">hits the</font><font color="#CCCCCC"> command</font><font color="#E5E5E5"> line</font><font color="#CCCCCC"> login which is</font>

1283
00:45:43,589 --> 00:45:49,078
pretty nice and then the final command

1284
00:45:45,030 --> 00:45:50,339
<font color="#E5E5E5">runs from memory pretty sweet</font><font color="#CCCCCC"> umm if you</font>

1285
00:45:49,079 --> 00:45:51,630
want to increase<font color="#E5E5E5"> the office keishon you</font>

1286
00:45:50,339 --> 00:45:54,328
can add a bunch<font color="#E5E5E5"> of garbage characters</font>

1287
00:45:51,630 --> 00:45:55,349
<font color="#E5E5E5">into this unique variable or reorder it</font>

1288
00:45:54,329 --> 00:45:57,869
all that<font color="#E5E5E5"> stuff and</font><font color="#CCCCCC"> just update</font><font color="#E5E5E5"> your</font>

1289
00:45:55,349 --> 00:45:59,880
indexes and it works just<font color="#E5E5E5"> fine there and</font>

1290
00:45:57,869 --> 00:46:01,500
then<font color="#CCCCCC"> invoked</font><font color="#E5E5E5"> ossification</font><font color="#CCCCCC"> will wrap all</font>

1291
00:45:59,880 --> 00:46:03,329
the building<font color="#E5E5E5"> blocks we talked about so</font>

1292
00:46:01,500 --> 00:46:06,000
randomized casing remove<font color="#CCCCCC"> whitespace at</font>

1293
00:46:03,329 --> 00:46:07,589
it<font color="#E5E5E5"> commas and semicolons carrots turn it</font>

1294
00:46:06,000 --> 00:46:09,670
<font color="#E5E5E5">the</font><font color="#CCCCCC"> sees</font><font color="#E5E5E5"> and also explicit signing if we</font>

1295
00:46:07,589 --> 00:46:12,980
want to

1296
00:46:09,670 --> 00:46:14,329
<font color="#E5E5E5">all right so that just happened</font>

1297
00:46:12,980 --> 00:46:15,769
well there's also another troll

1298
00:46:14,329 --> 00:46:17,630
portunity here that built<font color="#E5E5E5"> into the tool</font>

1299
00:46:15,769 --> 00:46:19,399
for<font color="#E5E5E5"> that unique variable you can put any</font>

1300
00:46:17,630 --> 00:46:21,049
<font color="#CCCCCC">message you want and then any character</font>

1301
00:46:19,400 --> 00:46:22,309
<font color="#E5E5E5">still missing</font><font color="#CCCCCC"> and your input payload</font>

1302
00:46:21,049 --> 00:46:24,349
it'll<font color="#E5E5E5"> just add</font><font color="#CCCCCC"> those to the</font><font color="#E5E5E5"> end</font>

1303
00:46:22,309 --> 00:46:26,839
so again<font color="#E5E5E5"> attackers gonna have fun like</font>

1304
00:46:24,349 --> 00:46:27,920
like<font color="#CCCCCC"> they</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> be nice and time so you</font>

1305
00:46:26,839 --> 00:46:30,890
can put<font color="#E5E5E5"> whatever you want to in there</font>

1306
00:46:27,920 --> 00:46:33,740
<font color="#CCCCCC">and give some d for people like me some</font>

1307
00:46:30,890 --> 00:46:35,420
laughs<font color="#CCCCCC"> all right concatenation was</font>

1308
00:46:33,740 --> 00:46:37,308
<font color="#E5E5E5">number one we just talked about</font><font color="#CCCCCC"> for loop</font>

1309
00:46:35,420 --> 00:46:39,470
encoding or for coding<font color="#E5E5E5"> reversal</font><font color="#CCCCCC"> was</font>

1310
00:46:37,309 --> 00:46:41,390
almost the<font color="#E5E5E5"> same except it</font><font color="#CCCCCC"> uses</font><font color="#E5E5E5"> this /l</font>

1311
00:46:39,470 --> 00:46:43,910
so instead of having to specify<font color="#E5E5E5"> every</font>

1312
00:46:41,390 --> 00:46:45,558
single index<font color="#E5E5E5"> we just say start end and</font>

1313
00:46:43,910 --> 00:46:47,149
the increment decrement in between and

1314
00:46:45,559 --> 00:46:49,069
then we just set our command in reverse

1315
00:46:47,150 --> 00:46:50,930
and iterate through and that becomes our

1316
00:46:49,069 --> 00:46:52,430
payload<font color="#E5E5E5"> we can add additional characters</font>

1317
00:46:50,930 --> 00:46:56,618
in there and adjust the increment or

1318
00:46:52,430 --> 00:46:59,230
decrement<font color="#CCCCCC"> and start and end payload etc</font>

1319
00:46:56,619 --> 00:47:02,299
<font color="#CCCCCC">I'm gonna skip that it's in the paper</font>

1320
00:46:59,230 --> 00:47:04,640
<font color="#CCCCCC">for</font><font color="#E5E5E5"> the final variables and we're using</font>

1321
00:47:02,299 --> 00:47:06,200
<font color="#E5E5E5">this substring syntax and the reason is</font>

1322
00:47:04,640 --> 00:47:08,210
because<font color="#E5E5E5"> in the for loop we don't have</font>

1323
00:47:06,200 --> 00:47:09,740
any value set for the final<font color="#CCCCCC"> variable so</font>

1324
00:47:08,210 --> 00:47:11,059
we have to basically remove<font color="#E5E5E5"> the name of</font>

1325
00:47:09,740 --> 00:47:13,249
the final variable which we can do with

1326
00:47:11,059 --> 00:47:14,809
a<font color="#E5E5E5"> negative index we can also do with</font><font color="#CCCCCC"> a</font>

1327
00:47:13,249 --> 00:47:16,038
positive index<font color="#CCCCCC"> of the length of</font><font color="#E5E5E5"> the well</font>

1328
00:47:14,809 --> 00:47:18,170
these are all<font color="#E5E5E5"> random options on the tool</font>

1329
00:47:16,039 --> 00:47:19,940
<font color="#E5E5E5">it'll take</font><font color="#CCCCCC"> care of this for you or you</font>

1330
00:47:18,170 --> 00:47:22,460
<font color="#E5E5E5">can do a string</font><font color="#CCCCCC"> replace on the name</font><font color="#E5E5E5"> of</font>

1331
00:47:19,940 --> 00:47:23,930
the index<font color="#CCCCCC"> an exclamation</font><font color="#E5E5E5"> point</font><font color="#CCCCCC"> and that</font>

1332
00:47:22,460 --> 00:47:25,730
<font color="#E5E5E5">asterisk</font><font color="#CCCCCC"> when you have a string replace</font>

1333
00:47:23,930 --> 00:47:27,618
starting with an asterisk it says find

1334
00:47:25,730 --> 00:47:29,420
the first match<font color="#E5E5E5"> of this and replace</font><font color="#CCCCCC"> that</font>

1335
00:47:27,619 --> 00:47:31,039
<font color="#E5E5E5">and all the characters leading up to it</font>

1336
00:47:29,420 --> 00:47:33,619
with whatever's on the right side of the

1337
00:47:31,039 --> 00:47:35,779
equal sign<font color="#E5E5E5"> the very last one is fin</font>

1338
00:47:33,619 --> 00:47:37,309
coding in this case we're going<font color="#E5E5E5"> to start</font>

1339
00:47:35,779 --> 00:47:39,079
swapping out characters so<font color="#CCCCCC"> it take every</font>

1340
00:47:37,309 --> 00:47:41,420
T in your<font color="#E5E5E5"> command</font><font color="#CCCCCC"> we're gonna</font><font color="#E5E5E5"> stop it</font>

1341
00:47:39,079 --> 00:47:43,400
with a Z and then<font color="#E5E5E5"> in memory we're going</font>

1342
00:47:41,420 --> 00:47:45,859
to do a string substitution for Z back

1343
00:47:43,400 --> 00:47:48,019
to<font color="#CCCCCC"> T it</font><font color="#E5E5E5"> does not</font><font color="#CCCCCC"> stop in memory</font><font color="#E5E5E5"> well</font>

1344
00:47:45,859 --> 00:47:49,788
<font color="#CCCCCC">it's add another layer and it won't call</font>

1345
00:47:48,019 --> 00:47:51,379
the sub<font color="#CCCCCC"> one that we just did we'll add</font>

1346
00:47:49,789 --> 00:47:53,720
another layer and<font color="#E5E5E5"> replace</font><font color="#CCCCCC"> a's with</font>

1347
00:47:51,380 --> 00:47:55,880
<font color="#CCCCCC">sevens</font><font color="#E5E5E5"> later replace it back to a's and</font>

1348
00:47:53,720 --> 00:47:58,488
<font color="#E5E5E5">memory and then call sub to add another</font>

1349
00:47:55,880 --> 00:48:00,769
layer etc and in the very<font color="#E5E5E5"> bottom this is</font>

1350
00:47:58,489 --> 00:48:02,210
<font color="#CCCCCC">an example of the the</font><font color="#E5E5E5"> crappy POC or at</font>

1351
00:48:00,769 --> 00:48:04,279
least a<font color="#CCCCCC"> year ago</font><font color="#E5E5E5"> I didn't know about the</font>

1352
00:48:02,210 --> 00:48:05,660
variable expansion stuff so for every

1353
00:48:04,279 --> 00:48:08,150
<font color="#CCCCCC">single substitution I spawn the new</font>

1354
00:48:05,660 --> 00:48:11,180
<font color="#E5E5E5">child process so that tree was like</font><font color="#CCCCCC"> 1 2</font>

1355
00:48:08,150 --> 00:48:13,819
<font color="#CCCCCC">3 4 5 6 7 o is horrible</font><font color="#E5E5E5"> and also because</font>

1356
00:48:11,180 --> 00:48:15,618
<font color="#CCCCCC">of that I had to spawn multiple</font>

1357
00:48:13,819 --> 00:48:17,390
<font color="#E5E5E5">processes I had to do different layers</font>

1358
00:48:15,619 --> 00:48:20,480
of<font color="#E5E5E5"> escaping for the ends for the</font>

1359
00:48:17,390 --> 00:48:22,680
ampersand<font color="#E5E5E5"> so</font><font color="#CCCCCC"> 1 layer 2 layer 3 layer</font><font color="#E5E5E5"> it</font>

1360
00:48:20,480 --> 00:48:25,590
got<font color="#E5E5E5"> really</font><font color="#CCCCCC"> ugly really</font><font color="#E5E5E5"> fast</font>

1361
00:48:22,680 --> 00:48:28,500
so that was a lot<font color="#CCCCCC"> to go through it's got</font>

1362
00:48:25,590 --> 00:48:30,990
a<font color="#E5E5E5"> quick demo if you know me I like to do</font>

1363
00:48:28,500 --> 00:48:33,450
ASCII art<font color="#CCCCCC"> that's the extent of</font><font color="#E5E5E5"> my</font>

1364
00:48:30,990 --> 00:48:34,979
artistic capabilities I think so anyways

1365
00:48:33,450 --> 00:48:36,839
this is just some<font color="#CCCCCC"> invoked ossification</font>

1366
00:48:34,980 --> 00:48:39,480
<font color="#CCCCCC">ASCII art</font><font color="#E5E5E5"> adding some layers of</font>

1367
00:48:36,840 --> 00:48:41,970
obfuscation<font color="#CCCCCC"> some fun</font><font color="#E5E5E5"> color-coded stuff</font>

1368
00:48:39,480 --> 00:48:44,250
<font color="#E5E5E5">the look and feel is it's the same kind</font>

1369
00:48:41,970 --> 00:48:45,480
of<font color="#E5E5E5"> wrapper user interface as the</font><font color="#CCCCCC"> other</font>

1370
00:48:44,250 --> 00:48:47,520
office keishon frameworks that<font color="#E5E5E5"> I've</font>

1371
00:48:45,480 --> 00:48:49,410
worked<font color="#E5E5E5"> on you can look at the tutorials</font>

1372
00:48:47,520 --> 00:48:50,880
help menus all that stuff I'll<font color="#E5E5E5"> kind of</font>

1373
00:48:49,410 --> 00:48:52,859
show<font color="#E5E5E5"> you</font><font color="#CCCCCC"> what to do</font>

1374
00:48:50,880 --> 00:48:54,720
<font color="#E5E5E5">yellow takes you to new menu green</font>

1375
00:48:52,860 --> 00:48:56,550
actually<font color="#E5E5E5"> applies a thing so in this case</font>

1376
00:48:54,720 --> 00:48:58,859
we have three options<font color="#CCCCCC"> here binary</font>

1377
00:48:56,550 --> 00:49:00,480
encoding<font color="#E5E5E5"> and payload binary is simply</font>

1378
00:48:58,860 --> 00:49:03,150
going to<font color="#E5E5E5"> produce syntax that is the</font>

1379
00:49:00,480 --> 00:49:04,860
string CMD or<font color="#CCCCCC"> powershell</font><font color="#E5E5E5"> that's it</font>

1380
00:49:03,150 --> 00:49:06,120
so you can go here and<font color="#E5E5E5"> play</font><font color="#CCCCCC"> around with</font>

1381
00:49:04,860 --> 00:49:07,920
it and<font color="#CCCCCC"> just copy</font><font color="#E5E5E5"> and paste that</font><font color="#CCCCCC"> into</font>

1382
00:49:06,120 --> 00:49:10,350
some other commander Paylor that you

1383
00:49:07,920 --> 00:49:11,910
have<font color="#E5E5E5"> and then in this case let's copy to</font>

1384
00:49:10,350 --> 00:49:13,500
the clipboard paste it<font color="#E5E5E5"> in the command to</font>

1385
00:49:11,910 --> 00:49:17,940
show<font color="#CCCCCC"> that it still works still works</font>

1386
00:49:13,500 --> 00:49:19,790
<font color="#CCCCCC">sweet</font><font color="#E5E5E5"> let's go back let's</font><font color="#CCCCCC"> say we</font>

1387
00:49:17,940 --> 00:49:22,290
<font color="#CCCCCC">actually want to input a command</font><font color="#E5E5E5"> and</font>

1388
00:49:19,790 --> 00:49:24,240
then apply<font color="#E5E5E5"> that environment variable</font>

1389
00:49:22,290 --> 00:49:26,640
<font color="#CCCCCC">substring catenation</font><font color="#E5E5E5"> we can do that with</font>

1390
00:49:24,240 --> 00:49:27,810
the encoding options<font color="#E5E5E5"> so in this case</font>

1391
00:49:26,640 --> 00:49:31,710
we're going to set<font color="#CCCCCC"> a command we'll just</font>

1392
00:49:27,810 --> 00:49:33,000
do ping<font color="#E5E5E5"> 8888 we can go show at any time</font>

1393
00:49:31,710 --> 00:49:35,250
and say here's<font color="#CCCCCC"> our command here's all</font>

1394
00:49:33,000 --> 00:49:36,840
the options we've applied<font color="#CCCCCC"> we'll go</font>

1395
00:49:35,250 --> 00:49:38,340
through the<font color="#CCCCCC"> level</font><font color="#E5E5E5"> one and you can see</font><font color="#CCCCCC"> it</font>

1396
00:49:36,840 --> 00:49:41,010
just<font color="#E5E5E5"> chooses maybe one or</font><font color="#CCCCCC"> two characters</font>

1397
00:49:38,340 --> 00:49:41,460
<font color="#E5E5E5">and applies substring or you can do the</font>

1398
00:49:41,010 --> 00:49:43,500
whole thing

1399
00:49:41,460 --> 00:49:45,080
<font color="#E5E5E5">copy the clipboard throw it in and we</font>

1400
00:49:43,500 --> 00:49:47,850
see that<font color="#E5E5E5"> it actually runs it just fine</font>

1401
00:49:45,080 --> 00:49:50,850
but<font color="#CCCCCC"> the real meat of the project is in</font>

1402
00:49:47,850 --> 00:49:52,259
<font color="#CCCCCC">the</font><font color="#E5E5E5"> third section which is payload which</font>

1403
00:49:50,850 --> 00:49:54,870
<font color="#E5E5E5">again any arbitrary command or</font>

1404
00:49:52,260 --> 00:49:56,700
<font color="#E5E5E5">PowerShell input command you can add all</font>

1405
00:49:54,870 --> 00:49:57,960
<font color="#E5E5E5">these crazy things</font><font color="#CCCCCC"> so in this case I</font>

1406
00:49:56,700 --> 00:49:59,970
actually<font color="#CCCCCC"> want run PowerShell command</font>

1407
00:49:57,960 --> 00:50:01,680
from command so I'm gonna set my command

1408
00:49:59,970 --> 00:50:03,540
to be<font color="#CCCCCC"> this right host</font><font color="#E5E5E5"> PowerShell command</font>

1409
00:50:01,680 --> 00:50:05,069
<font color="#E5E5E5">and then I'm gonna say set final binary</font>

1410
00:50:03,540 --> 00:50:07,320
to be PowerShell<font color="#E5E5E5"> so I'm handling</font>

1411
00:50:05,070 --> 00:50:09,990
PowerShell escaping inside of command<font color="#E5E5E5"> XE</font>

1412
00:50:07,320 --> 00:50:11,700
escaping let's then<font color="#CCCCCC"> go to</font><font color="#E5E5E5"> payload will</font>

1413
00:50:09,990 --> 00:50:14,850
do<font color="#E5E5E5"> the catenation and there's kind of</font>

1414
00:50:11,700 --> 00:50:15,899
three profiles one two or<font color="#CCCCCC"> three and one</font>

1415
00:50:14,850 --> 00:50:17,310
<font color="#E5E5E5">is not</font><font color="#CCCCCC"> gonna have any</font><font color="#E5E5E5"> of the crazy</font>

1416
00:50:15,900 --> 00:50:19,200
special characters it's just<font color="#E5E5E5"> gonna do</font>

1417
00:50:17,310 --> 00:50:20,400
kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the least common work or the</font>

1418
00:50:19,200 --> 00:50:22,890
least amount of work<font color="#E5E5E5"> to</font><font color="#CCCCCC"> get</font><font color="#E5E5E5"> the job</font><font color="#CCCCCC"> done</font>

1419
00:50:20,400 --> 00:50:23,970
<font color="#E5E5E5">but</font><font color="#CCCCCC"> three is</font><font color="#E5E5E5"> more fun let's be real</font>

1420
00:50:22,890 --> 00:50:26,460
because<font color="#E5E5E5"> you're gonna</font><font color="#CCCCCC"> get</font><font color="#E5E5E5"> something that</font>

1421
00:50:23,970 --> 00:50:28,290
looks<font color="#E5E5E5"> like that and it's random every</font>

1422
00:50:26,460 --> 00:50:31,590
single time and<font color="#CCCCCC"> you can copy and paste</font>

1423
00:50:28,290 --> 00:50:34,880
<font color="#E5E5E5">that</font><font color="#CCCCCC"> and see</font><font color="#E5E5E5"> the command still works</font><font color="#CCCCCC"> and</font>

1424
00:50:31,590 --> 00:50:34,880
kind<font color="#CCCCCC"> of as a</font>

1425
00:50:35,210 --> 00:50:39,150
fast works a<font color="#CCCCCC"> little bit kind of as a</font>

1426
00:50:37,290 --> 00:50:40,890
<font color="#E5E5E5">finale what I decided to do was I</font>

1427
00:50:39,150 --> 00:50:42,510
created<font color="#E5E5E5"> a PowerShell command at a bitly</font>

1428
00:50:40,890 --> 00:50:43,980
link<font color="#CCCCCC"> I ran it through</font><font color="#E5E5E5"> all my other tools</font>

1429
00:50:42,510 --> 00:50:45,720
I created a download cradle through

1430
00:50:43,980 --> 00:50:46,980
<font color="#CCCCCC">invoke</font><font color="#E5E5E5"> cradle crafter</font><font color="#CCCCCC"> I then took</font><font color="#E5E5E5"> the</font>

1431
00:50:45,720 --> 00:50:48,990
output ran it through invoke<font color="#E5E5E5"> office</font>

1432
00:50:46,980 --> 00:50:50,310
<font color="#CCCCCC">smokejumper token layer alpha station</font><font color="#E5E5E5"> I</font>

1433
00:50:48,990 --> 00:50:51,770
then ran that to invoke<font color="#E5E5E5"> da</font>

1434
00:50:50,310 --> 00:50:54,930
sophistication for<font color="#E5E5E5"> this for loop stuff</font>

1435
00:50:51,770 --> 00:50:56,880
and then when you paste<font color="#E5E5E5"> that in I'm</font>

1436
00:50:54,930 --> 00:51:00,410
actually gonna fast<font color="#CCCCCC"> forward because</font><font color="#E5E5E5"> this</font>

1437
00:50:56,880 --> 00:51:05,040
<font color="#E5E5E5">my VM was hating life when I did this</font>

1438
00:51:00,410 --> 00:51:06,299
like like really<font color="#E5E5E5"> not happy but when you</font>

1439
00:51:05,040 --> 00:51:07,980
do this<font color="#CCCCCC"> done interactively it happens</font>

1440
00:51:06,300 --> 00:51:14,490
<font color="#E5E5E5">just</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> that so don't be fooled but</font>

1441
00:51:07,980 --> 00:51:16,950
there you<font color="#E5E5E5"> go</font><font color="#CCCCCC"> the command works so red</font>

1442
00:51:14,490 --> 00:51:20,189
teamers like cool defenders like<font color="#E5E5E5"> I'm</font>

1443
00:51:16,950 --> 00:51:21,270
<font color="#E5E5E5">gonna see you afterwards so yet the</font>

1444
00:51:20,190 --> 00:51:23,010
disclaimer<font color="#E5E5E5"> is always please don't use</font>

1445
00:51:21,270 --> 00:51:24,990
this tool<font color="#CCCCCC"> for evil and if</font><font color="#E5E5E5"> you're</font><font color="#CCCCCC"> fin 7/8</font>

1446
00:51:23,010 --> 00:51:26,460
or<font color="#E5E5E5"> 85032 and define evil differently</font>

1447
00:51:24,990 --> 00:51:29,700
than I do just<font color="#E5E5E5"> don't use</font><font color="#CCCCCC"> it at all I</font>

1448
00:51:26,460 --> 00:51:31,860
know you<font color="#E5E5E5"> will but whatever</font><font color="#CCCCCC"> it's up on</font>

1449
00:51:29,700 --> 00:51:33,779
github<font color="#CCCCCC"> so the Technic da sophistication</font>

1450
00:51:31,860 --> 00:51:35,100
<font color="#E5E5E5">again tons of information I put in the</font>

1451
00:51:33,780 --> 00:51:36,480
white paper because the whole reason<font color="#CCCCCC"> I</font>

1452
00:51:35,100 --> 00:51:38,160
do this research<font color="#E5E5E5"> is to the tech stuff</font>

1453
00:51:36,480 --> 00:51:39,330
I've never<font color="#E5E5E5"> seen</font><font color="#CCCCCC"> before to find out</font>

1454
00:51:38,160 --> 00:51:40,980
what's possible<font color="#CCCCCC"> and then to share with</font>

1455
00:51:39,330 --> 00:51:43,080
the<font color="#E5E5E5"> community so you don't have to waste</font>

1456
00:51:40,980 --> 00:51:46,020
as many hours and nights and<font color="#CCCCCC"> weekends as</font>

1457
00:51:43,080 --> 00:51:47,490
I did on<font color="#E5E5E5"> this so again</font><font color="#CCCCCC"> a lot of details</font>

1458
00:51:46,020 --> 00:51:49,470
in<font color="#E5E5E5"> the white paper basically start to</font>

1459
00:51:47,490 --> 00:51:50,580
<font color="#E5E5E5">look for really long argument links we</font>

1460
00:51:49,470 --> 00:51:53,310
can<font color="#CCCCCC"> look for high frequency of</font><font color="#E5E5E5"> these</font>

1461
00:51:50,580 --> 00:51:54,720
special<font color="#CCCCCC"> characters notice is easy by the</font>

1462
00:51:53,310 --> 00:51:56,220
way like these bullet points<font color="#CCCCCC"> are</font>

1463
00:51:54,720 --> 00:51:57,629
<font color="#E5E5E5">freaking hard</font><font color="#CCCCCC"> there's a reason it took</font>

1464
00:51:56,220 --> 00:51:58,830
me months and months<font color="#E5E5E5"> and</font><font color="#CCCCCC"> months of doing</font>

1465
00:51:57,630 --> 00:52:00,420
this to<font color="#E5E5E5"> try</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get to a point where I</font>

1466
00:51:58,830 --> 00:52:02,970
felt<font color="#E5E5E5"> okay with releasing it and sharing</font>

1467
00:52:00,420 --> 00:52:04,500
it but<font color="#E5E5E5"> one really valuable one is</font>

1468
00:52:02,970 --> 00:52:06,419
looking<font color="#CCCCCC"> for an office Kayson of known</font>

1469
00:52:04,500 --> 00:52:07,500
internal commands<font color="#CCCCCC"> because we start to</font>

1470
00:52:06,420 --> 00:52:09,210
<font color="#E5E5E5">break all this down there's several</font>

1471
00:52:07,500 --> 00:52:10,710
building blocks necessary to make all

1472
00:52:09,210 --> 00:52:12,150
this stuff<font color="#E5E5E5"> happen and so when you</font>

1473
00:52:10,710 --> 00:52:13,590
<font color="#CCCCCC">identify those building blocks looking</font>

1474
00:52:12,150 --> 00:52:18,000
for the obfuscation<font color="#CCCCCC"> of those is</font><font color="#E5E5E5"> really</font>

1475
00:52:13,590 --> 00:52:19,590
important<font color="#CCCCCC"> SDC there's</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> information</font>

1476
00:52:18,000 --> 00:52:21,600
the paper about<font color="#CCCCCC"> that again artifacts of</font>

1477
00:52:19,590 --> 00:52:25,020
<font color="#E5E5E5">sub commands and standard input</font>

1478
00:52:21,600 --> 00:52:26,400
I suffer from FOMO but for me<font color="#E5E5E5"> it's</font>

1479
00:52:25,020 --> 00:52:29,430
feared missing obfuscation it's very

1480
00:52:26,400 --> 00:52:31,380
real it's<font color="#E5E5E5"> very real so when I'm doing</font>

1481
00:52:29,430 --> 00:52:33,359
<font color="#CCCCCC">this research I can't keep</font><font color="#E5E5E5"> all this</font>

1482
00:52:31,380 --> 00:52:35,100
<font color="#CCCCCC">stuff in my head so I write a tool that</font>

1483
00:52:33,360 --> 00:52:36,720
<font color="#E5E5E5">does it for</font><font color="#CCCCCC"> me and then I generate</font>

1484
00:52:35,100 --> 00:52:38,790
thousands of<font color="#E5E5E5"> examples with that tool and</font>

1485
00:52:36,720 --> 00:52:40,500
let it<font color="#E5E5E5"> test my detection that are right</font>

1486
00:52:38,790 --> 00:52:42,270
and see hey<font color="#E5E5E5"> out of these a thousand</font>

1487
00:52:40,500 --> 00:52:43,680
examples<font color="#CCCCCC"> you missed these</font><font color="#E5E5E5"> three now look</font>

1488
00:52:42,270 --> 00:52:45,660
at those<font color="#E5E5E5"> three and say</font><font color="#CCCCCC"> okay what about</font>

1489
00:52:43,680 --> 00:52:47,399
these evaded<font color="#E5E5E5"> my detection so then I</font>

1490
00:52:45,660 --> 00:52:49,319
add that<font color="#E5E5E5"> in so for this project I</font>

1491
00:52:47,400 --> 00:52:51,000
released the full test harness the exact

1492
00:52:49,319 --> 00:52:53,460
code that I<font color="#E5E5E5"> used to write every</font>

1493
00:52:51,000 --> 00:52:55,650
detection for from this research and I

1494
00:52:53,460 --> 00:52:58,079
released it<font color="#E5E5E5"> with the project and also at</font>

1495
00:52:55,650 --> 00:53:00,539
<font color="#CCCCCC">least 4000 obfuscated examples as text</font>

1496
00:52:58,079 --> 00:53:02,460
files<font color="#E5E5E5"> as well as security</font><font color="#CCCCCC"> Eid 40 688</font>

1497
00:53:00,539 --> 00:53:04,020
<font color="#E5E5E5">events as well as this</font><font color="#CCCCCC"> Monte id-1</font><font color="#E5E5E5"> event</font>

1498
00:53:02,460 --> 00:53:05,640
so if you don't want to run my code<font color="#E5E5E5"> you</font>

1499
00:53:04,020 --> 00:53:07,319
<font color="#E5E5E5">don't have to but I have tons of sample</font>

1500
00:53:05,640 --> 00:53:08,910
data<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can use to test it and the</font>

1501
00:53:07,319 --> 00:53:10,500
last thing I'll say<font color="#E5E5E5"> about</font><font color="#CCCCCC"> this is that</font>

1502
00:53:08,910 --> 00:53:12,598
<font color="#CCCCCC">when you run the tool like in the demo</font>

1503
00:53:10,500 --> 00:53:14,130
<font color="#CCCCCC">you only get three profiles of like low</font>

1504
00:53:12,599 --> 00:53:15,809
medium or high<font color="#E5E5E5"> and there's a lot of</font>

1505
00:53:14,130 --> 00:53:17,970
randomization<font color="#CCCCCC"> in there but you</font><font color="#E5E5E5"> don't get</font>

1506
00:53:15,809 --> 00:53:19,980
<font color="#E5E5E5">the full gamut of</font><font color="#CCCCCC"> obfuscation</font><font color="#E5E5E5"> with the</font>

1507
00:53:17,970 --> 00:53:21,390
test harness<font color="#CCCCCC"> you get the full gamut</font>

1508
00:53:19,980 --> 00:53:23,280
<font color="#CCCCCC">every single time you run it there's</font>

1509
00:53:21,390 --> 00:53:25,529
ever<font color="#E5E5E5"> 20</font><font color="#CCCCCC"> different switches it flips</font><font color="#E5E5E5"> the</font>

1510
00:53:23,280 --> 00:53:26,730
<font color="#CCCCCC">test</font><font color="#E5E5E5"> to basically change</font><font color="#CCCCCC"> the percentages</font>

1511
00:53:25,530 --> 00:53:28,950
<font color="#CCCCCC">of all</font><font color="#E5E5E5"> these special characters</font><font color="#CCCCCC"> and</font>

1512
00:53:26,730 --> 00:53:30,329
<font color="#E5E5E5">stuff like that and basically these you</font>

1513
00:53:28,950 --> 00:53:31,649
start<font color="#E5E5E5"> adding your reg X's and your</font>

1514
00:53:30,329 --> 00:53:33,240
searches for<font color="#E5E5E5"> this office</font><font color="#CCCCCC"> casein and</font>

1515
00:53:31,650 --> 00:53:34,680
<font color="#E5E5E5">it'll go through and say hey here's how</font>

1516
00:53:33,240 --> 00:53:35,759
many you missed here's the ones that

1517
00:53:34,680 --> 00:53:38,339
match here's the ones you<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to look</font>

1518
00:53:35,760 --> 00:53:39,420
at<font color="#E5E5E5"> again so key takeaways attackers love</font>

1519
00:53:38,339 --> 00:53:42,058
to obfuscate because it's still

1520
00:53:39,420 --> 00:53:43,859
effective command has crazy obfuscation

1521
00:53:42,059 --> 00:53:45,420
capabilities when you stack all these

1522
00:53:43,859 --> 00:53:47,190
building<font color="#CCCCCC"> blocks together</font><font color="#E5E5E5"> and as</font>

1523
00:53:45,420 --> 00:53:49,049
defenders we kind of have<font color="#CCCCCC"> to match the</font>

1524
00:53:47,190 --> 00:53:51,569
attackers level of<font color="#E5E5E5"> creativity and again</font>

1525
00:53:49,049 --> 00:53:53,430
I I know it's<font color="#CCCCCC"> not</font><font color="#E5E5E5"> easy but like we have</font>

1526
00:53:51,569 --> 00:53:54,240
to<font color="#E5E5E5"> start thinking differently about some</font>

1527
00:53:53,430 --> 00:53:55,558
of these<font color="#CCCCCC"> things even if you've never</font>

1528
00:53:54,240 --> 00:53:57,990
<font color="#E5E5E5">seen them before and I really</font><font color="#CCCCCC"> hope</font><font color="#E5E5E5"> that</font>

1529
00:53:55,559 --> 00:53:59,670
<font color="#E5E5E5">this research</font><font color="#CCCCCC"> will help people</font><font color="#E5E5E5"> do that</font><font color="#CCCCCC"> I</font>

1530
00:53:57,990 --> 00:54:01,348
just<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> give a huge thanks</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

1531
00:53:59,670 --> 00:54:03,000
advanced practices team<font color="#E5E5E5"> mainly</font><font color="#CCCCCC"> Nick Carr</font>

1532
00:54:01,349 --> 00:54:04,470
<font color="#CCCCCC">Matt Dunne what do you been with no I</font>

1533
00:54:03,000 --> 00:54:05,880
get it<font color="#CCCCCC"> work with some awesome people who</font>

1534
00:54:04,470 --> 00:54:07,828
really make<font color="#E5E5E5"> hunting</font><font color="#CCCCCC"> throw actors like</font>

1535
00:54:05,880 --> 00:54:09,119
insanely fun and really support this

1536
00:54:07,829 --> 00:54:11,520
kind<font color="#E5E5E5"> of research which</font><font color="#CCCCCC"> is awesome</font><font color="#E5E5E5"> and</font>

1537
00:54:09,119 --> 00:54:13,319
<font color="#E5E5E5">definitely my wife because she</font><font color="#CCCCCC"> supports</font>

1538
00:54:11,520 --> 00:54:15,270
like insane hours<font color="#E5E5E5"> with doing this stuff</font>

1539
00:54:13,319 --> 00:54:16,829
<font color="#E5E5E5">this is about nine months of</font><font color="#CCCCCC"> research</font>

1540
00:54:15,270 --> 00:54:19,349
over<font color="#CCCCCC"> a thousand hours when it's all said</font>

1541
00:54:16,829 --> 00:54:22,140
and<font color="#E5E5E5"> done</font><font color="#CCCCCC"> and just a lot of coffee</font>

1542
00:54:19,349 --> 00:54:23,640
also in that<font color="#CCCCCC"> process so with that</font>

1543
00:54:22,140 --> 00:54:25,230
there's my<font color="#CCCCCC"> Twitter handle my blog the</font>

1544
00:54:23,640 --> 00:54:27,089
code is on<font color="#E5E5E5"> my github the white papers</font>

1545
00:54:25,230 --> 00:54:29,250
there<font color="#CCCCCC"> I'll be</font><font color="#E5E5E5"> around the</font><font color="#CCCCCC"> rest of tonight</font>

1546
00:54:27,089 --> 00:54:31,049
I'm really<font color="#E5E5E5"> excited</font><font color="#CCCCCC"> to talk I'm very sure</font>

1547
00:54:29,250 --> 00:54:32,520
<font color="#E5E5E5">I'm at my time so please come and</font><font color="#CCCCCC"> say</font>

1548
00:54:31,049 --> 00:54:33,990
<font color="#E5E5E5">hello and ask questions afterwards and</font>

1549
00:54:32,520 --> 00:54:37,759
<font color="#E5E5E5">just thank you so</font><font color="#CCCCCC"> much</font><font color="#E5E5E5"> for your time</font>

1550
00:54:33,990 --> 00:54:37,759
it's<font color="#E5E5E5"> really honored to</font><font color="#CCCCCC"> be here thanks</font>

