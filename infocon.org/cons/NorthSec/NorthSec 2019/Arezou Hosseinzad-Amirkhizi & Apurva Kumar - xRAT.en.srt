1
00:00:02,739 --> 00:00:07,819
alright so there's some room at the

2
00:00:05,569 --> 00:00:10,009
front for those just coming in and

3
00:00:07,819 --> 00:00:12,110
you're in room 2 as you know we're going

4
00:00:10,009 --> 00:00:13,790
to talk about X rat so a deeper dive

5
00:00:12,110 --> 00:00:16,099
into X right monitoring China's

6
00:00:13,790 --> 00:00:18,169
interests abroad with surveillance and

7
00:00:16,099 --> 00:00:20,269
with mobile surveillance where so our

8
00:00:18,170 --> 00:00:22,220
two speakers are approver Kumar she's a

9
00:00:20,269 --> 00:00:24,078
security researcher I look out spends

10
00:00:22,220 --> 00:00:26,448
most of her time uncovering and exposing

11
00:00:24,079 --> 00:00:29,029
threats as he emerged in and around the

12
00:00:26,449 --> 00:00:31,489
mobile space and we also have a resume

13
00:00:29,029 --> 00:00:33,410
of scenes at immunity she's a security

14
00:00:31,489 --> 00:00:35,150
researcher and reverse engineer with

15
00:00:33,410 --> 00:00:38,209
experience working in different domains

16
00:00:35,150 --> 00:00:39,890
of security and I'll stop there BIOS

17
00:00:38,210 --> 00:00:43,540
there because I want to give them the

18
00:00:39,890 --> 00:00:43,540
floor and the time to speak to you guys

19
00:00:48,070 --> 00:00:52,550
thank you very much thank you very much

20
00:00:51,110 --> 00:00:54,650
for coming I know it's been a long

21
00:00:52,550 --> 00:00:57,078
conference this is the second day this

22
00:00:54,650 --> 00:00:58,820
is a Friday afternoon everybody has

23
00:00:57,079 --> 00:01:02,030
enjoyed themselves last night at the

24
00:00:58,820 --> 00:01:03,620
party and are understandably quite tired

25
00:01:02,030 --> 00:01:07,009
so I'd like to thank you for coming

26
00:01:03,620 --> 00:01:10,789
along and melting your brains with some

27
00:01:07,009 --> 00:01:12,409
Android reversing so this talk is kind

28
00:01:10,789 --> 00:01:14,179
of linked to the previous talk and I see

29
00:01:12,409 --> 00:01:16,939
a couple of people that were there in

30
00:01:14,179 --> 00:01:18,979
the previous talk so I hope you enjoy

31
00:01:16,939 --> 00:01:21,079
that they're sort of attached to each

32
00:01:18,979 --> 00:01:24,319
other and you saw the big picture you

33
00:01:21,079 --> 00:01:26,439
saw all of the details of the context of

34
00:01:24,319 --> 00:01:28,850
some of our investigations last time and

35
00:01:26,439 --> 00:01:31,639
right now we're here to tell you about

36
00:01:28,850 --> 00:01:34,669
really just a particular mobile family

37
00:01:31,639 --> 00:01:37,548
mobile malware family and go really deep

38
00:01:34,670 --> 00:01:39,920
into the Android reversing and Intuit

39
00:01:37,549 --> 00:01:41,539
all its technical capabilities and

40
00:01:39,920 --> 00:01:45,319
hopefully this is a good exercise for

41
00:01:41,539 --> 00:01:47,840
all our security researchers here so

42
00:01:45,319 --> 00:01:50,270
just to give you a quick overview of who

43
00:01:47,840 --> 00:01:52,880
we are my name is apoorva and this is

44
00:01:50,270 --> 00:01:55,609
our Izu and we are security researchers

45
00:01:52,880 --> 00:01:59,568
at lookout our focus is mobile malware

46
00:01:55,609 --> 00:02:02,958
whether it be iOS or Android malware and

47
00:01:59,569 --> 00:02:05,240
we spend all of our time just as Kristin

48
00:02:02,959 --> 00:02:07,159
showed in the last slide or in her last

49
00:02:05,240 --> 00:02:09,288
presentation that we spend all of our

50
00:02:07,159 --> 00:02:11,270
time looking at the malware looking at

51
00:02:09,288 --> 00:02:13,970
its context understanding how it's being

52
00:02:11,270 --> 00:02:15,380
used but then also just immersing

53
00:02:13,970 --> 00:02:17,210
ourselves in each family

54
00:02:15,380 --> 00:02:21,170
and trying to understand why these

55
00:02:17,210 --> 00:02:24,520
malware developers are doing what they

56
00:02:21,170 --> 00:02:26,989
do and why they do it how they do it so

57
00:02:24,520 --> 00:02:28,160
today we're gonna talk to you about two

58
00:02:26,990 --> 00:02:31,100
different ones

59
00:02:28,160 --> 00:02:33,530
Kristin already mentioned accessor em

60
00:02:31,100 --> 00:02:36,829
rats so I hope you guys are taking notes

61
00:02:33,530 --> 00:02:39,560
there will be a test and then we will

62
00:02:36,830 --> 00:02:41,840
start to deep dive into exFAT and we'll

63
00:02:39,560 --> 00:02:43,730
talk about its technical evolution how

64
00:02:41,840 --> 00:02:47,150
hard it was to actually see that

65
00:02:43,730 --> 00:02:50,209
evolution and categorize it talked about

66
00:02:47,150 --> 00:02:51,860
its communication how it talks to its c2

67
00:02:50,210 --> 00:02:54,590
infrastructure what the C to

68
00:02:51,860 --> 00:02:56,840
infrastructure says to it as well as

69
00:02:54,590 --> 00:02:58,820
some of the context around its

70
00:02:56,840 --> 00:03:01,580
investigation and what that tells us

71
00:02:58,820 --> 00:03:04,040
really about the malware so this focus

72
00:03:01,580 --> 00:03:06,320
of this talk is really about what it can

73
00:03:04,040 --> 00:03:09,530
tell us about the malware how we can use

74
00:03:06,320 --> 00:03:12,760
that context to sort of flesh out more

75
00:03:09,530 --> 00:03:17,180
of the malware capabilities and details

76
00:03:12,760 --> 00:03:19,220
so XS or M rat if anybody could stand up

77
00:03:17,180 --> 00:03:22,370
and just tell me what they remember

78
00:03:19,220 --> 00:03:24,830
about the previous slide but accessor M

79
00:03:22,370 --> 00:03:28,340
rat was discovered in 2014 it was widely

80
00:03:24,830 --> 00:03:29,920
reported it had two components Android

81
00:03:28,340 --> 00:03:31,850
and iOS

82
00:03:29,920 --> 00:03:35,239
Kristin already went into a lot of

83
00:03:31,850 --> 00:03:37,940
detail as to why it was built the way it

84
00:03:35,240 --> 00:03:39,580
was but I'll tell you a little bit about

85
00:03:37,940 --> 00:03:42,829
it again for the new people in the room

86
00:03:39,580 --> 00:03:44,000
so it had an iOS application which we're

87
00:03:42,830 --> 00:03:47,540
not going to talk about at this point

88
00:03:44,000 --> 00:03:49,280
but it needed a jailbroken device it was

89
00:03:47,540 --> 00:03:51,440
a it was installed through a city a

90
00:03:49,280 --> 00:03:53,630
package but what we're going to focus on

91
00:03:51,440 --> 00:03:56,359
today is really the Android component

92
00:03:53,630 --> 00:03:58,940
and that was a two-stage application it

93
00:03:56,360 --> 00:04:02,500
had a sort of benign front and it posed

94
00:03:58,940 --> 00:04:06,530
as a code 4hk application code 4hk is a

95
00:04:02,500 --> 00:04:09,710
nonprofit organization in Hong Kong and

96
00:04:06,530 --> 00:04:13,280
it advocates for transparency within

97
00:04:09,710 --> 00:04:16,820
Hong Kong so it was of interest to a

98
00:04:13,280 --> 00:04:19,670
particular set of people within Hong

99
00:04:16,820 --> 00:04:22,370
Kong as you can imagine it was

100
00:04:19,670 --> 00:04:27,060
discovered in 2014 as I said during the

101
00:04:22,370 --> 00:04:30,660
pro-democracy protests within that space

102
00:04:27,060 --> 00:04:32,490
and during the umbrella movement so it

103
00:04:30,660 --> 00:04:35,729
was a two-stage Android application it

104
00:04:32,490 --> 00:04:38,039
contacted a c2 server called accessor

105
00:04:35,729 --> 00:04:40,469
comm which is exactly where it got its

106
00:04:38,039 --> 00:04:44,159
name accessor em rot em rot is obviously

107
00:04:40,470 --> 00:04:47,280
mobile rat rat for any beginners in the

108
00:04:44,160 --> 00:04:49,830
room is a remote remote access trojan so

109
00:04:47,280 --> 00:04:51,869
it looked like this it was sort of when

110
00:04:49,830 --> 00:04:54,719
it was running it disguised itself and

111
00:04:51,870 --> 00:04:56,669
as soon as it got installed it asked to

112
00:04:54,720 --> 00:05:00,600
install a second application called

113
00:04:56,669 --> 00:05:04,830
system thread basically posing as a

114
00:05:00,600 --> 00:05:06,419
system application on Android and then

115
00:05:04,830 --> 00:05:08,789
it would disappear into the background

116
00:05:06,419 --> 00:05:12,240
so as I said before it was widely

117
00:05:08,789 --> 00:05:14,280
reported and this is an example of a

118
00:05:12,240 --> 00:05:16,889
message that was received by one of the

119
00:05:14,280 --> 00:05:19,500
pro-democracy protesters the people part

120
00:05:16,889 --> 00:05:21,030
of the Occupy central movement and they

121
00:05:19,500 --> 00:05:23,639
received a link something like this

122
00:05:21,030 --> 00:05:27,690
which downloaded a sample of X s er M

123
00:05:23,639 --> 00:05:29,009
rat so there was a lot of reporting

124
00:05:27,690 --> 00:05:31,889
around it there was a lot of chatter

125
00:05:29,009 --> 00:05:34,500
around it at the time and this

126
00:05:31,889 --> 00:05:37,560
particular article goes into how the

127
00:05:34,500 --> 00:05:39,240
code for HK organization claimed that it

128
00:05:37,560 --> 00:05:42,599
had nothing to do with this particular

129
00:05:39,240 --> 00:05:44,460
application so it said we don't have an

130
00:05:42,599 --> 00:05:46,050
Android application and we know nothing

131
00:05:44,460 --> 00:05:49,739
about this particular application which

132
00:05:46,050 --> 00:05:51,870
is how we know perhaps it was they

133
00:05:49,740 --> 00:05:54,510
didn't source it they didn't develop the

134
00:05:51,870 --> 00:05:56,729
application themselves so while this

135
00:05:54,510 --> 00:05:58,440
reporting was going on me and our Z we

136
00:05:56,729 --> 00:06:00,000
were looking at this rat and we were

137
00:05:58,440 --> 00:06:02,159
trying to understand it and break it

138
00:06:00,000 --> 00:06:04,560
apart and while we were doing that we

139
00:06:02,159 --> 00:06:06,630
came across a different variant now

140
00:06:04,560 --> 00:06:09,810
depending on who you speak to and how

141
00:06:06,630 --> 00:06:12,240
they classify malware it's not too much

142
00:06:09,810 --> 00:06:14,190
of a science it's more of an art people

143
00:06:12,240 --> 00:06:15,750
see different similarities and different

144
00:06:14,190 --> 00:06:17,190
code structures and realize totally

145
00:06:15,750 --> 00:06:20,430
different things

146
00:06:17,190 --> 00:06:22,979
X rat is can be considered a variant of

147
00:06:20,430 --> 00:06:25,530
X s er M right but we classify it as a

148
00:06:22,979 --> 00:06:27,780
different family regardless of those

149
00:06:25,530 --> 00:06:30,570
very very specific details we're gonna

150
00:06:27,780 --> 00:06:33,030
go into why we think X rat is different

151
00:06:30,570 --> 00:06:35,310
how it's exactly different and explain

152
00:06:33,030 --> 00:06:37,919
to you you know perhaps some of the

153
00:06:35,310 --> 00:06:39,490
motivations behind the actor and how

154
00:06:37,919 --> 00:06:41,440
they've changed throughout the year

155
00:06:39,490 --> 00:06:44,530
so we're talking about an application

156
00:06:41,440 --> 00:06:46,210
that started in 2014 we've also written

157
00:06:44,530 --> 00:06:48,219
a blog about this because I know all of

158
00:06:46,210 --> 00:06:50,770
you read our blog very very carefully

159
00:06:48,220 --> 00:06:54,069
and have already caught up on this

160
00:06:50,770 --> 00:06:56,620
particular one in 2017 in the middle of

161
00:06:54,069 --> 00:07:00,430
2017 and we've blocked about it

162
00:06:56,620 --> 00:07:02,050
extensively it's not a new family but

163
00:07:00,430 --> 00:07:05,440
it's still worth talking about and I'll

164
00:07:02,050 --> 00:07:07,810
go through why the blog basically talked

165
00:07:05,440 --> 00:07:10,710
about really the high levels of this

166
00:07:07,810 --> 00:07:13,120
initial version of X rad that we saw and

167
00:07:10,710 --> 00:07:15,250
some of its capabilities some of the

168
00:07:13,120 --> 00:07:17,169
interesting things were exactly what you

169
00:07:15,250 --> 00:07:20,110
expect a surveillance where I found me

170
00:07:17,169 --> 00:07:21,820
to be so surveillance we're Kristin

171
00:07:20,110 --> 00:07:24,490
again went through that in her talk

172
00:07:21,820 --> 00:07:27,280
previously but it is an application that

173
00:07:24,490 --> 00:07:30,400
sort of targets a particular group of

174
00:07:27,280 --> 00:07:32,650
people and exfiltrate

175
00:07:30,400 --> 00:07:35,739
as much information of a mobile device

176
00:07:32,650 --> 00:07:38,500
as they can within the context of mobile

177
00:07:35,740 --> 00:07:40,930
malware obviously some people call it

178
00:07:38,500 --> 00:07:43,539
spyware but don't get the two options

179
00:07:40,930 --> 00:07:45,099
confused it has to be I have to explain

180
00:07:43,539 --> 00:07:47,259
that distinction just because some

181
00:07:45,099 --> 00:07:50,320
people will call it spyware but look out

182
00:07:47,259 --> 00:07:51,490
and we we call it surveillance where the

183
00:07:50,320 --> 00:07:54,520
interesting thing that wasn't

184
00:07:51,490 --> 00:07:57,400
surveillance we're like about X rat is

185
00:07:54,520 --> 00:07:59,229
that the last sort of set that you see

186
00:07:57,400 --> 00:08:01,719
over there which says it repeatedly

187
00:07:59,229 --> 00:08:05,229
downloads and deletes large files trying

188
00:08:01,719 --> 00:08:08,229
to exhaust mobile data supposedly that's

189
00:08:05,229 --> 00:08:10,599
runs counter to a surveillance where you

190
00:08:08,229 --> 00:08:13,060
don't want the person to know that

191
00:08:10,599 --> 00:08:15,849
you're on their device but that seems to

192
00:08:13,060 --> 00:08:18,039
be quite a nuisance it it starts to

193
00:08:15,849 --> 00:08:20,110
raise red flags for the user so that's

194
00:08:18,039 --> 00:08:24,070
an interesting point to point out about

195
00:08:20,110 --> 00:08:25,930
extract so let's take a look at one of

196
00:08:24,070 --> 00:08:28,599
the more recent versions and then we'll

197
00:08:25,930 --> 00:08:29,710
talk about the evolution as a whole X

198
00:08:28,599 --> 00:08:31,870
right

199
00:08:29,710 --> 00:08:36,429
in the context of a sample that we

200
00:08:31,870 --> 00:08:39,370
received in May of 2019 has sort of two

201
00:08:36,429 --> 00:08:41,620
main aspects of its structure and

202
00:08:39,370 --> 00:08:44,078
functionality it has a class called a

203
00:08:41,620 --> 00:08:45,270
protocol class which is basically an

204
00:08:44,078 --> 00:08:48,060
enumeration

205
00:08:45,270 --> 00:08:51,270
and it has two things in it it has a set

206
00:08:48,060 --> 00:08:53,969
of things that that have a suffix c2s

207
00:08:51,270 --> 00:08:56,310
which we suspect is clients a server and

208
00:08:53,970 --> 00:08:59,280
another set that is s2c which is server

209
00:08:56,310 --> 00:09:02,069
to client so we call the CTS one's

210
00:08:59,280 --> 00:09:04,980
actions these are things that the client

211
00:09:02,070 --> 00:09:09,050
can execute actions that it can perform

212
00:09:04,980 --> 00:09:11,910
on an infected device and STC wishes

213
00:09:09,050 --> 00:09:14,459
commands that it can receive from its

214
00:09:11,910 --> 00:09:16,860
server so the CT server or the command

215
00:09:14,460 --> 00:09:20,810
and control infrastructure can come back

216
00:09:16,860 --> 00:09:23,910
with 45 different commands and tell the

217
00:09:20,810 --> 00:09:25,229
client or the rat to do whatever it

218
00:09:23,910 --> 00:09:27,209
needs to do so some of these things

219
00:09:25,230 --> 00:09:31,260
overlap but they're not necessarily the

220
00:09:27,210 --> 00:09:34,020
same what's interesting on this slide is

221
00:09:31,260 --> 00:09:38,189
the icons that it uses so again just

222
00:09:34,020 --> 00:09:40,530
like its older cousin accessor em rat X

223
00:09:38,190 --> 00:09:44,460
rat uses sort of the generic Android

224
00:09:40,530 --> 00:09:46,350
Android application to try and blend in

225
00:09:44,460 --> 00:09:48,000
obviously that's the image for the

226
00:09:46,350 --> 00:09:50,910
operating system so it can't be anything

227
00:09:48,000 --> 00:09:52,770
bad but there's two interesting samples

228
00:09:50,910 --> 00:09:55,350
that have a slightly different picture

229
00:09:52,770 --> 00:09:57,600
and the fact that they're so rare and

230
00:09:55,350 --> 00:09:59,910
have a different icon as well as

231
00:09:57,600 --> 00:10:02,450
separate titles may tell us something

232
00:09:59,910 --> 00:10:05,130
about where else we can find this

233
00:10:02,450 --> 00:10:08,390
surveillance where and perhaps what it

234
00:10:05,130 --> 00:10:10,860
was used for the graph that you see is

235
00:10:08,390 --> 00:10:13,620
Lookout data for when samples were

236
00:10:10,860 --> 00:10:16,830
acquired by lookout and you can see the

237
00:10:13,620 --> 00:10:20,280
different spikes in 2017 when our blog

238
00:10:16,830 --> 00:10:22,830
came out again in 2018 and now we're

239
00:10:20,280 --> 00:10:25,410
seeing a much more consistent use of a

240
00:10:22,830 --> 00:10:27,390
malware so it's still being used as

241
00:10:25,410 --> 00:10:31,290
still being handled and and and that's

242
00:10:27,390 --> 00:10:33,120
interesting to take note of it is a

243
00:10:31,290 --> 00:10:35,490
surveillance where and it's a spyware so

244
00:10:33,120 --> 00:10:37,740
it's gonna take everything it can

245
00:10:35,490 --> 00:10:40,620
possibly take from your device and as

246
00:10:37,740 --> 00:10:44,070
we've already established as IVA has

247
00:10:40,620 --> 00:10:46,530
established in her keynote if you take

248
00:10:44,070 --> 00:10:49,410
control of a person's phone you take a

249
00:10:46,530 --> 00:10:51,209
control of their of their lives so it's

250
00:10:49,410 --> 00:10:53,880
got everything for you it's got exactly

251
00:10:51,210 --> 00:10:56,850
what websites you visited who you called

252
00:10:53,880 --> 00:10:58,240
what meetings you had what applications

253
00:10:56,850 --> 00:11:00,880
you have on your device

254
00:10:58,240 --> 00:11:03,520
what files you've downloaded all your

255
00:11:00,880 --> 00:11:06,070
passwords all the files and then

256
00:11:03,520 --> 00:11:08,380
passwords to unlock those files all the

257
00:11:06,070 --> 00:11:10,839
pictures that you have taken of your dog

258
00:11:08,380 --> 00:11:13,870
and your cat and your family and your

259
00:11:10,839 --> 00:11:16,690
co-workers all your recordings of

260
00:11:13,870 --> 00:11:19,240
wherever you take your device these are

261
00:11:16,690 --> 00:11:21,670
not difficult to do but we see these

262
00:11:19,240 --> 00:11:25,210
every day in every single surveillance

263
00:11:21,670 --> 00:11:27,069
where so this is just a wide range of

264
00:11:25,210 --> 00:11:29,740
things that x-ray can do and what

265
00:11:27,070 --> 00:11:31,750
generally applications can surveillance

266
00:11:29,740 --> 00:11:33,850
for our applications can do the

267
00:11:31,750 --> 00:11:36,400
interesting thing to look at this slide

268
00:11:33,850 --> 00:11:40,089
is the WeChat databases in the keikyu

269
00:11:36,400 --> 00:11:42,250
data so x-ray is particularly targeted

270
00:11:40,089 --> 00:11:45,870
to people who have those things on those

271
00:11:42,250 --> 00:11:49,260
devices so it could be people that are

272
00:11:45,870 --> 00:11:53,410
inclined more inclined to use

273
00:11:49,260 --> 00:11:54,760
applications such as WeChat and QQ you

274
00:11:53,410 --> 00:11:56,770
could probably tell that there's a

275
00:11:54,760 --> 00:12:00,490
particular area of the world where these

276
00:11:56,770 --> 00:12:02,290
are more popular than others so let's

277
00:12:00,490 --> 00:12:04,570
get to the act of the evolution of it

278
00:12:02,290 --> 00:12:06,640
and how we decide to categorize it again

279
00:12:04,570 --> 00:12:09,160
it was very hard it's running for a long

280
00:12:06,640 --> 00:12:11,290
time and a lot of these categorizations

281
00:12:09,160 --> 00:12:13,839
was actually very hard to categorize

282
00:12:11,290 --> 00:12:15,550
based on code structure for all the

283
00:12:13,839 --> 00:12:17,440
researchers in the room you know most of

284
00:12:15,550 --> 00:12:21,189
the time you look at the changes in code

285
00:12:17,440 --> 00:12:23,680
to try and classify and categorize

286
00:12:21,190 --> 00:12:28,000
malware so but this was very hard to do

287
00:12:23,680 --> 00:12:30,819
with X rad the code looks largely the

288
00:12:28,000 --> 00:12:32,890
same throughout all versions there are

289
00:12:30,820 --> 00:12:34,870
small minor differences in one or two

290
00:12:32,890 --> 00:12:37,510
samples and those are the ones that we

291
00:12:34,870 --> 00:12:39,520
want to focus on but it was easier

292
00:12:37,510 --> 00:12:41,890
actually to categorize them into three

293
00:12:39,520 --> 00:12:44,290
separate categories which we call

294
00:12:41,890 --> 00:12:47,160
versions and it's based on the

295
00:12:44,290 --> 00:12:51,040
configuration files found in the malware

296
00:12:47,160 --> 00:12:53,290
so we're gonna look at dates of the

297
00:12:51,040 --> 00:12:57,279
configuration files that the date in

298
00:12:53,290 --> 00:13:00,579
which they were last modified version 1

299
00:12:57,279 --> 00:13:03,850
was a little more like a baby its

300
00:13:00,580 --> 00:13:05,589
configuration files were very simple

301
00:13:03,850 --> 00:13:08,350
they were plaintext

302
00:13:05,589 --> 00:13:10,480
they had no office keishon they were

303
00:13:08,350 --> 00:13:11,030
found from they were lost modified from

304
00:13:10,480 --> 00:13:14,660
sort of

305
00:13:11,030 --> 00:13:17,660
December 2014 to June 2018 so even you

306
00:13:14,660 --> 00:13:20,930
know fairly recently there were about 3%

307
00:13:17,660 --> 00:13:23,420
of the samples that we observed it had

308
00:13:20,930 --> 00:13:25,430
some interesting and human analysis

309
00:13:23,420 --> 00:13:30,530
mechanisms which I'll go through and it

310
00:13:25,430 --> 00:13:33,469
had a second stage so version 2 which

311
00:13:30,530 --> 00:13:37,040
comes along next is more like a toddler

312
00:13:33,470 --> 00:13:38,570
I would say it was about 92 percent of

313
00:13:37,040 --> 00:13:42,079
observed samples so this is the one

314
00:13:38,570 --> 00:13:45,950
that's really favored by the x-ray

315
00:13:42,080 --> 00:13:49,550
developers it's configuration files were

316
00:13:45,950 --> 00:13:51,680
des encrypted if there was some sort of

317
00:13:49,550 --> 00:13:53,870
minor office keishon and emulate a

318
00:13:51,680 --> 00:13:55,849
detection within it which again we'll go

319
00:13:53,870 --> 00:13:58,430
through it had some persistent

320
00:13:55,850 --> 00:14:00,830
mechanisms and it had some new commands

321
00:13:58,430 --> 00:14:04,189
and it we see this version up until

322
00:14:00,830 --> 00:14:06,470
today it's quite a detailed one and

323
00:14:04,190 --> 00:14:07,700
quite a change from version one now the

324
00:14:06,470 --> 00:14:09,380
thing that you have to realize about

325
00:14:07,700 --> 00:14:10,580
version 1 and version 2 you can see if

326
00:14:09,380 --> 00:14:13,340
some of the things have been have

327
00:14:10,580 --> 00:14:15,650
disappeared version 2 doesn't have any

328
00:14:13,340 --> 00:14:17,360
anti analysis mechanisms so this is

329
00:14:15,650 --> 00:14:21,050
interesting why did they move away from

330
00:14:17,360 --> 00:14:23,180
that then let's look at version 3 and

331
00:14:21,050 --> 00:14:27,199
version 3 is more like an angry teenager

332
00:14:23,180 --> 00:14:29,750
and it's about 5% of the samples that we

333
00:14:27,200 --> 00:14:33,320
saw and the last modified dates of the

334
00:14:29,750 --> 00:14:37,280
configuration configuration files were

335
00:14:33,320 --> 00:14:40,820
from October 2017 - April 2019 they were

336
00:14:37,280 --> 00:14:42,910
a in ke s encrypted and they used

337
00:14:40,820 --> 00:14:45,020
multiple encryption keys not only one

338
00:14:42,910 --> 00:14:46,730
but you can see that actually some of

339
00:14:45,020 --> 00:14:48,350
the things were taken out and some of

340
00:14:46,730 --> 00:14:50,240
the things were put in it's not

341
00:14:48,350 --> 00:14:51,980
necessarily that it was just increasing

342
00:14:50,240 --> 00:14:56,660
its level of obfuscation every single

343
00:14:51,980 --> 00:14:58,520
time so with that let's deep dive into

344
00:14:56,660 --> 00:15:00,709
some of the technicalities and I'll

345
00:14:58,520 --> 00:15:02,750
start with sort of the quick ones which

346
00:15:00,710 --> 00:15:06,320
are the anti analysis and anti detection

347
00:15:02,750 --> 00:15:08,450
mechanisms so the most interesting one

348
00:15:06,320 --> 00:15:11,120
was the self-destruct functionality

349
00:15:08,450 --> 00:15:13,820
effects rad this I believe was also seen

350
00:15:11,120 --> 00:15:15,350
in MRIs and what it did was it cleaned

351
00:15:13,820 --> 00:15:17,300
up certain files and directories

352
00:15:15,350 --> 00:15:19,690
depending on the sample it could

353
00:15:17,300 --> 00:15:22,370
basically wipe your phone if it wanted

354
00:15:19,690 --> 00:15:22,970
but depending on the sample that you

355
00:15:22,370 --> 00:15:25,400
looked

356
00:15:22,970 --> 00:15:27,290
it cleaned up different files and

357
00:15:25,400 --> 00:15:29,480
directories and that's an interesting

358
00:15:27,290 --> 00:15:31,790
point to make why was it different from

359
00:15:29,480 --> 00:15:34,160
it it almost appears like it wasn't

360
00:15:31,790 --> 00:15:36,680
mass-produced right it was each sample

361
00:15:34,160 --> 00:15:38,390
was kind of created that way for a

362
00:15:36,680 --> 00:15:40,670
reason

363
00:15:38,390 --> 00:15:43,730
it had antivirus checking so it had an

364
00:15:40,670 --> 00:15:46,819
anti-virus check and if it found any of

365
00:15:43,730 --> 00:15:48,860
those anti viruses on the infected

366
00:15:46,820 --> 00:15:51,820
device it would disable all of its rat

367
00:15:48,860 --> 00:15:55,430
functionality it didn't want to be found

368
00:15:51,820 --> 00:15:58,760
it had some emulated checks so

369
00:15:55,430 --> 00:16:00,469
BlueStacks is a popular Android emulator

370
00:15:58,760 --> 00:16:03,800
it's looked for that it looked for

371
00:16:00,470 --> 00:16:06,800
particular IMEI numbers if if you're not

372
00:16:03,800 --> 00:16:09,829
into mobile devices that's the sort of

373
00:16:06,800 --> 00:16:11,719
unique identifier for mobile devices so

374
00:16:09,830 --> 00:16:14,000
it looked for particular IMEI numbers

375
00:16:11,720 --> 00:16:16,400
that are linked to particular emulators

376
00:16:14,000 --> 00:16:19,400
now while this isn't a complicated check

377
00:16:16,400 --> 00:16:22,340
and some emulators probably can get

378
00:16:19,400 --> 00:16:25,430
around it this is pretty good for I

379
00:16:22,340 --> 00:16:28,910
don't know 90% of dynamic analysis

380
00:16:25,430 --> 00:16:31,160
engines that are out there it also did

381
00:16:28,910 --> 00:16:33,770
the usual when I say usual it's because

382
00:16:31,160 --> 00:16:36,469
we see it every day it hides its icon at

383
00:16:33,770 --> 00:16:38,689
high selectivity there's nothing really

384
00:16:36,470 --> 00:16:40,310
on the screen that will let al a user

385
00:16:38,690 --> 00:16:43,400
figure out that there's something

386
00:16:40,310 --> 00:16:45,920
running on their device the last thing

387
00:16:43,400 --> 00:16:49,430
is that it acts it put all of its

388
00:16:45,920 --> 00:16:52,640
exfiltrated data the updates of its

389
00:16:49,430 --> 00:16:55,329
itself as well as its debugging logs all

390
00:16:52,640 --> 00:16:58,760
in hidden folders in the SD card

391
00:16:55,330 --> 00:17:00,470
probably due to size the last thing I

392
00:16:58,760 --> 00:17:01,910
want to talk about is the anti analysis

393
00:17:00,470 --> 00:17:05,300
mechanism so this was really interesting

394
00:17:01,910 --> 00:17:08,899
the initial versions as well as accessor

395
00:17:05,300 --> 00:17:10,730
mrad and crashed the popular tool decks

396
00:17:08,900 --> 00:17:13,880
to jar if you've never reversed an

397
00:17:10,730 --> 00:17:16,550
android application before decks to jar

398
00:17:13,880 --> 00:17:19,280
is a very popular tool used to convert a

399
00:17:16,550 --> 00:17:22,909
dex file which is how an android

400
00:17:19,280 --> 00:17:26,240
application code exists in an APK to a

401
00:17:22,910 --> 00:17:28,220
jar file which can be easily reversed so

402
00:17:26,240 --> 00:17:30,170
what it did was it had a zero width

403
00:17:28,220 --> 00:17:31,900
instruction at the beginning which kind

404
00:17:30,170 --> 00:17:34,670
of threw off the tool and crashed it

405
00:17:31,900 --> 00:17:37,520
this was moved away from

406
00:17:34,670 --> 00:17:39,290
I it's interesting because maybe it it

407
00:17:37,520 --> 00:17:41,270
is signaled that they didn't really care

408
00:17:39,290 --> 00:17:42,590
whether people were looking at it there

409
00:17:41,270 --> 00:17:44,270
are better tools out there as well

410
00:17:42,590 --> 00:17:47,570
perhaps the people who were trying to

411
00:17:44,270 --> 00:17:50,540
reverse them didn't use text ajar it's

412
00:17:47,570 --> 00:17:52,220
just interesting to see and to get into

413
00:17:50,540 --> 00:17:56,020
the mind of the person developing this

414
00:17:52,220 --> 00:17:58,370
tool why did they get rid of that I

415
00:17:56,020 --> 00:18:00,260
guess I'll we'll talk about the

416
00:17:58,370 --> 00:18:05,780
configuration files and sort of how they

417
00:18:00,260 --> 00:18:07,550
changed now hello everyone so I'm gonna

418
00:18:05,780 --> 00:18:09,440
just jump into the configuration file I

419
00:18:07,550 --> 00:18:12,500
prefer mention them couple of times now

420
00:18:09,440 --> 00:18:14,510
let's see what - but but what are they

421
00:18:12,500 --> 00:18:16,160
what do they include so basically

422
00:18:14,510 --> 00:18:18,620
configuration file is a file in the

423
00:18:16,160 --> 00:18:21,950
asset folder of the package it will

424
00:18:18,620 --> 00:18:24,830
include information about the server or

425
00:18:21,950 --> 00:18:28,490
the c2 or the command control it will

426
00:18:24,830 --> 00:18:30,500
include an IP and if include port I'm

427
00:18:28,490 --> 00:18:33,260
not going to talk about version 1 of

428
00:18:30,500 --> 00:18:35,990
this family because as approver said it

429
00:18:33,260 --> 00:18:38,090
was a baby and it was in plain text so

430
00:18:35,990 --> 00:18:40,580
there's no reason to bother you with

431
00:18:38,090 --> 00:18:41,600
that it's readable so everybody can just

432
00:18:40,580 --> 00:18:45,230
like go and look at it

433
00:18:41,600 --> 00:18:47,840
version 2 however it starts encrypting

434
00:18:45,230 --> 00:18:50,060
these information is it in the asset

435
00:18:47,840 --> 00:18:53,389
file the asset file in this case is

436
00:18:50,060 --> 00:18:56,450
called strain dot XML the string that is

437
00:18:53,390 --> 00:19:00,230
used to generate the decryption key is a

438
00:18:56,450 --> 00:19:02,500
double base64 encoded string it's hard

439
00:19:00,230 --> 00:19:04,730
coded in the function that does that

440
00:19:02,500 --> 00:19:08,090
decryption and encryption it's called

441
00:19:04,730 --> 00:19:14,990
this util and the decryption algorithm

442
00:19:08,090 --> 00:19:17,659
that is used is DES encryption these are

443
00:19:14,990 --> 00:19:19,730
some of the samples of the double base64

444
00:19:17,660 --> 00:19:24,170
encoded and des keys that we observe

445
00:19:19,730 --> 00:19:28,670
through these families gonna go move on

446
00:19:24,170 --> 00:19:33,320
to version 3 now so version 3 takes it

447
00:19:28,670 --> 00:19:36,680
one level higher in terms of

448
00:19:33,320 --> 00:19:40,370
complications so in this case the file

449
00:19:36,680 --> 00:19:43,670
is called cantata and I it's still

450
00:19:40,370 --> 00:19:45,679
located in the asset folder of the

451
00:19:43,670 --> 00:19:47,000
package it still includes the CTO

452
00:19:45,680 --> 00:19:50,150
information how

453
00:19:47,000 --> 00:19:52,490
ever this time the decryption key is

454
00:19:50,150 --> 00:19:54,740
also included in the configuration file

455
00:19:52,490 --> 00:19:56,960
it's the first line of the file and

456
00:19:54,740 --> 00:20:00,220
second line is the IP address and the

457
00:19:56,960 --> 00:20:03,040
third line is the port of the CTO server

458
00:20:00,220 --> 00:20:06,140
another thing to note about version 3 is

459
00:20:03,040 --> 00:20:08,930
some of the code is hidden in another

460
00:20:06,140 --> 00:20:10,910
file in the same asset folder this file

461
00:20:08,930 --> 00:20:13,250
is usually called base based on a PK

462
00:20:10,910 --> 00:20:16,910
based at BTC but well the name can

463
00:20:13,250 --> 00:20:20,840
change any time and this asset file is

464
00:20:16,910 --> 00:20:23,120
xor encoded it can easily be decoded

465
00:20:20,840 --> 00:20:27,439
using a key which varies across

466
00:20:23,120 --> 00:20:29,030
different samples these are the two AES

467
00:20:27,440 --> 00:20:30,680
encryption key sets that we have

468
00:20:29,030 --> 00:20:35,410
observed through the samples that look

469
00:20:30,680 --> 00:20:38,180
at acquired okay so now let's talk about

470
00:20:35,410 --> 00:20:41,420
the more interesting stuff commands

471
00:20:38,180 --> 00:20:46,610
commands are what the server instructs

472
00:20:41,420 --> 00:20:48,940
the infected device to do and these are

473
00:20:46,610 --> 00:20:52,699
the common commands across this family

474
00:20:48,940 --> 00:20:56,270
we have reported this in details in the

475
00:20:52,700 --> 00:20:58,430
blog that we published in 2017 these are

476
00:20:56,270 --> 00:21:01,129
typical surveillance word commands

477
00:20:58,430 --> 00:21:03,080
you've seen them approver talked about

478
00:21:01,130 --> 00:21:05,120
them Kristin Kristin talked about them

479
00:21:03,080 --> 00:21:07,220
so I'm not going to repeat the

480
00:21:05,120 --> 00:21:09,489
information but just take a note that

481
00:21:07,220 --> 00:21:14,000
these are all surveillance for actions

482
00:21:09,490 --> 00:21:16,640
requested from the device so now let's

483
00:21:14,000 --> 00:21:20,090
move to more interesting stuff so I'm

484
00:21:16,640 --> 00:21:23,330
going to mention three sets of commands

485
00:21:20,090 --> 00:21:25,639
that approval and I saw we recently have

486
00:21:23,330 --> 00:21:28,010
seen them and we thought that they are

487
00:21:25,640 --> 00:21:29,930
interesting so my purpose of the talk is

488
00:21:28,010 --> 00:21:31,640
to walk you through them and hopefully

489
00:21:29,930 --> 00:21:34,700
at the end of my talk he will agree with

490
00:21:31,640 --> 00:21:36,530
me why they are interesting and then we

491
00:21:34,700 --> 00:21:39,050
are going to make a conclusion of how

492
00:21:36,530 --> 00:21:41,510
they can be used exactly starting with

493
00:21:39,050 --> 00:21:44,600
the first command it's called do

494
00:21:41,510 --> 00:21:46,670
intruder so do intruder the purpose of

495
00:21:44,600 --> 00:21:50,209
the command is to direct the infected

496
00:21:46,670 --> 00:21:52,910
device to make multiple HTTP or HTTPS

497
00:21:50,210 --> 00:21:55,580
requests to an arbitrary host and port

498
00:21:52,910 --> 00:21:56,210
by changing arbitrary sequences in that

499
00:21:55,580 --> 00:21:58,280
request

500
00:21:56,210 --> 00:22:00,299
it also logs the request and response

501
00:21:58,280 --> 00:22:02,999
for certain keywords and if

502
00:22:00,299 --> 00:22:06,809
found them it will report to the server

503
00:22:02,999 --> 00:22:12,119
and also logs the response from that

504
00:22:06,809 --> 00:22:18,719
request syntax of the command is like

505
00:22:12,119 --> 00:22:21,509
that a separator is used to separate the

506
00:22:18,719 --> 00:22:24,330
fields I have memorized the name of this

507
00:22:21,509 --> 00:22:30,809
many times and I now forgot it so it

508
00:22:24,330 --> 00:22:36,599
just looks like that section Marge okay

509
00:22:30,809 --> 00:22:38,129
so the first field so it has the command

510
00:22:36,599 --> 00:22:42,119
that comes from the server obviously it

511
00:22:38,129 --> 00:22:44,129
has certain fields the targeted host the

512
00:22:42,119 --> 00:22:47,879
targeted port that the request has to be

513
00:22:44,129 --> 00:22:50,519
sent to a store path which is a string

514
00:22:47,879 --> 00:22:52,379
to a file system to which is string

515
00:22:50,519 --> 00:22:55,849
which is a path to a file system on the

516
00:22:52,379 --> 00:23:00,320
device keywords don't be mislead with

517
00:22:55,849 --> 00:23:03,928
the program the S it's just one single

518
00:23:00,320 --> 00:23:07,289
keyword there's couple of flags in here

519
00:23:03,929 --> 00:23:09,349
is SSL is R and header and it's a

520
00:23:07,289 --> 00:23:11,549
response they are all boolean type and

521
00:23:09,349 --> 00:23:15,119
there are two fields in this request

522
00:23:11,549 --> 00:23:17,700
that in this command that also include

523
00:23:15,119 --> 00:23:20,609
multiple fields those are requests on

524
00:23:17,700 --> 00:23:26,669
bar and they are both basically 60

525
00:23:20,609 --> 00:23:29,249
base64 encoded so now let's deep dive in

526
00:23:26,669 --> 00:23:30,809
the function and try to parse this

527
00:23:29,249 --> 00:23:33,119
command we are the client we have

528
00:23:30,809 --> 00:23:35,759
received this now let's take it step by

529
00:23:33,119 --> 00:23:37,649
step so first thing we want to separate

530
00:23:35,759 --> 00:23:40,709
the fields so we can take a look at them

531
00:23:37,649 --> 00:23:42,418
and secondly we want to start with the

532
00:23:40,709 --> 00:23:44,339
more complicated ones the ones that have

533
00:23:42,419 --> 00:23:47,579
multiple fields in them so we're gonna

534
00:23:44,339 --> 00:23:50,009
start with war variable it's also

535
00:23:47,579 --> 00:23:51,928
separated by semicolons so we are going

536
00:23:50,009 --> 00:23:55,889
to split it in the same way that we did

537
00:23:51,929 --> 00:23:59,179
for the command then we are going to

538
00:23:55,889 --> 00:24:01,349
generate several dictionary lists

539
00:23:59,179 --> 00:24:05,249
zero-to-four dictionary lists basically

540
00:24:01,349 --> 00:24:07,379
from this war variable dictionary lists

541
00:24:05,249 --> 00:24:09,119
also is separated each field is

542
00:24:07,379 --> 00:24:10,620
submitted by each dictionary separated

543
00:24:09,119 --> 00:24:12,678
by a colon

544
00:24:10,620 --> 00:24:16,110
two fields field zero and field one

545
00:24:12,679 --> 00:24:19,950
fields ero is the string to be replaced

546
00:24:16,110 --> 00:24:25,229
and field one is a stream to replace

547
00:24:19,950 --> 00:24:27,809
that first field so feed one if it

548
00:24:25,230 --> 00:24:30,450
starts with a fine path indicator which

549
00:24:27,809 --> 00:24:32,700
is a slash that means that this is a

550
00:24:30,450 --> 00:24:34,770
five path this is not a stream don't do

551
00:24:32,700 --> 00:24:37,289
not use this to replace the string just

552
00:24:34,770 --> 00:24:39,779
go search the device for this path

553
00:24:37,289 --> 00:24:43,080
obtain the file that is located there

554
00:24:39,779 --> 00:24:44,909
grab this and just try every single

555
00:24:43,080 --> 00:24:49,439
string that is in that file and there

556
00:24:44,909 --> 00:24:52,200
obviously delimited by newline slash or

557
00:24:49,440 --> 00:24:55,080
insulation okay so now we have a

558
00:24:52,200 --> 00:24:57,299
dictionary list we know what strings to

559
00:24:55,080 --> 00:24:59,820
substitute what strings to use us to do

560
00:24:57,299 --> 00:25:02,460
the substitution but where is this going

561
00:24:59,820 --> 00:25:04,830
to be applied so we're going to now

562
00:25:02,460 --> 00:25:08,700
parse the second field of the request

563
00:25:04,830 --> 00:25:13,320
which is called request it is a standard

564
00:25:08,700 --> 00:25:16,710
HTTP request it is separated by Sarah of

565
00:25:13,320 --> 00:25:20,189
two of them to separate URI on headers

566
00:25:16,710 --> 00:25:22,440
from the body if the body doesn't exist

567
00:25:20,190 --> 00:25:26,700
that's fine then the request just has

568
00:25:22,440 --> 00:25:29,700
one line so we are going to refer this

569
00:25:26,700 --> 00:25:33,779
to the original request or or I request

570
00:25:29,700 --> 00:25:36,299
as am Algar calls it so now we are going

571
00:25:33,779 --> 00:25:39,480
to check how many dictionaries or

572
00:25:36,299 --> 00:25:42,000
substitution streams that we get if

573
00:25:39,480 --> 00:25:44,429
there is zero we're just going to go

574
00:25:42,000 --> 00:25:49,590
move to the next function it

575
00:25:44,429 --> 00:25:52,140
interestingly is called Craik HTTP then

576
00:25:49,590 --> 00:25:54,600
if it's not zero then we need to parse

577
00:25:52,140 --> 00:25:57,809
those fields and replace the request

578
00:25:54,600 --> 00:25:59,428
with all the combinations of the

579
00:25:57,809 --> 00:26:02,070
dictionaries this is going to gonna be

580
00:25:59,429 --> 00:26:05,149
done in nested loop and the matter is

581
00:26:02,070 --> 00:26:07,230
gonna make sure that all this all the

582
00:26:05,149 --> 00:26:08,760
strings are going to be replaced so

583
00:26:07,230 --> 00:26:12,570
basically think of the exchanges as

584
00:26:08,760 --> 00:26:14,250
placeholders for the strings to be

585
00:26:12,570 --> 00:26:16,740
replaced so if there's for dictionary

586
00:26:14,250 --> 00:26:18,600
that means there are four places in the

587
00:26:16,740 --> 00:26:21,570
original request that we can replace

588
00:26:18,600 --> 00:26:24,510
with any string that the server commands

589
00:26:21,570 --> 00:26:27,090
the device to do it

590
00:26:24,510 --> 00:26:30,270
so next step we are going to call cray

591
00:26:27,090 --> 00:26:33,270
HTTP we're gonna pass this modified

592
00:26:30,270 --> 00:26:35,760
request to it as a first parameter and

593
00:26:33,270 --> 00:26:37,830
then we're going to use everything that

594
00:26:35,760 --> 00:26:41,360
we used to generate the current request

595
00:26:37,830 --> 00:26:43,889
as the second parameter for information

596
00:26:41,360 --> 00:26:47,310
so now let's dive into the crack HTTP

597
00:26:43,890 --> 00:26:50,340
and see what happens after remember

598
00:26:47,310 --> 00:26:52,620
there was a is round header so this

599
00:26:50,340 --> 00:26:54,959
basically is gonna be checked if the

600
00:26:52,620 --> 00:26:58,040
server wants to add random headers to

601
00:26:54,960 --> 00:27:01,380
the request we're gonna do so by

602
00:26:58,040 --> 00:27:05,250
generating an x-forwarded-for and client

603
00:27:01,380 --> 00:27:08,460
IP and then populating it with random IP

604
00:27:05,250 --> 00:27:10,920
address the purpose of X for the for and

605
00:27:08,460 --> 00:27:13,560
client IP usually an HTTP request is to

606
00:27:10,920 --> 00:27:15,240
signal the receiver of the request where

607
00:27:13,560 --> 00:27:18,360
this request is coming from it's usually

608
00:27:15,240 --> 00:27:24,930
used for the device that are coming from

609
00:27:18,360 --> 00:27:26,250
behind the proxy and so in this case we

610
00:27:24,930 --> 00:27:27,750
are replacing it with random IP

611
00:27:26,250 --> 00:27:31,530
addresses so obviously we want to hide

612
00:27:27,750 --> 00:27:34,080
where you're coming from if there's no

613
00:27:31,530 --> 00:27:35,700
random header generation required then

614
00:27:34,080 --> 00:27:38,699
you're just gonna dive into the next

615
00:27:35,700 --> 00:27:40,860
part which is using that request that we

616
00:27:38,700 --> 00:27:42,890
generated and we will send it to the

617
00:27:40,860 --> 00:27:47,820
targeted host and a targeted port

618
00:27:42,890 --> 00:27:50,910
construct instructed by the server now

619
00:27:47,820 --> 00:27:53,760
next part we had one string it was

620
00:27:50,910 --> 00:27:57,060
called keyboards and we are going to use

621
00:27:53,760 --> 00:27:58,710
that to search the response that we are

622
00:27:57,060 --> 00:28:02,370
receiving from that specific host and

623
00:27:58,710 --> 00:28:04,860
port whether we find this keyword or not

624
00:28:02,370 --> 00:28:07,350
we are going to tell the

625
00:28:04,860 --> 00:28:09,570
command-and-control server about it I

626
00:28:07,350 --> 00:28:12,860
did find it or I didn't find it and

627
00:28:09,570 --> 00:28:16,200
we're gonna log it with the response and

628
00:28:12,860 --> 00:28:19,199
then we're gonna check it's a response

629
00:28:16,200 --> 00:28:21,510
set or not if it is set we're going

630
00:28:19,200 --> 00:28:25,050
we're going to like this and store it on

631
00:28:21,510 --> 00:28:28,350
the path construct instructed by the

632
00:28:25,050 --> 00:28:33,120
server if it is not true then we're

633
00:28:28,350 --> 00:28:35,730
gonna move to c2 - to login everything

634
00:28:33,120 --> 00:28:39,040
for the c2 and this happens every 100

635
00:28:35,730 --> 00:28:41,950
this whole function that I explained to

636
00:28:39,040 --> 00:28:44,320
you is called HTTP files by Malvern so

637
00:28:41,950 --> 00:28:51,460
we are going to call it a fuzzing

638
00:28:44,320 --> 00:28:54,100
attempt ok next command do port MAP this

639
00:28:51,460 --> 00:28:56,920
one the purpose of it is to direct the

640
00:28:54,100 --> 00:28:59,879
infected device to act as a proxy

641
00:28:56,920 --> 00:29:02,050
between two arbitrary who are some port

642
00:28:59,880 --> 00:29:05,050
it's way simpler than the previous

643
00:29:02,050 --> 00:29:07,389
function it only has four parameters two

644
00:29:05,050 --> 00:29:09,870
IP addresses two ports what it's gonna

645
00:29:07,390 --> 00:29:13,750
do is to get the first IP and port

646
00:29:09,870 --> 00:29:16,959
generates a socket socket listen and

647
00:29:13,750 --> 00:29:19,000
that port and do the same thing with the

648
00:29:16,960 --> 00:29:22,950
other IP address and now all it needs to

649
00:29:19,000 --> 00:29:22,950
do is to transfer data between the two

650
00:29:25,200 --> 00:29:33,790
okay I was supposed to highlight it

651
00:29:27,910 --> 00:29:35,710
before explaining it but next command

652
00:29:33,790 --> 00:29:39,399
and the last one that I'm going to speak

653
00:29:35,710 --> 00:29:42,220
about is to repeat this one directs the

654
00:29:39,400 --> 00:29:44,710
infected device to perform an HTTP or

655
00:29:42,220 --> 00:29:46,960
HTTPS requests optionally with a

656
00:29:44,710 --> 00:29:49,480
slightly randomized header and deliver

657
00:29:46,960 --> 00:29:51,340
the response back to the server in a

658
00:29:49,480 --> 00:29:55,600
form that is displayable in a web

659
00:29:51,340 --> 00:29:59,740
browser to repeat a simple targeted host

660
00:29:55,600 --> 00:30:02,409
targeted port to flags is SSL and is

661
00:29:59,740 --> 00:30:04,570
random header and a request again

662
00:30:02,410 --> 00:30:10,750
multiple fields in the request and

663
00:30:04,570 --> 00:30:14,439
base64 encoded so let's parse this

664
00:30:10,750 --> 00:30:17,260
command first thing what does request

665
00:30:14,440 --> 00:30:21,100
include and let's break it into a stand

666
00:30:17,260 --> 00:30:23,379
standard HTTP request we can also do

667
00:30:21,100 --> 00:30:25,149
some trimming on it on it basically

668
00:30:23,380 --> 00:30:27,040
means that if the HTTP body does not

669
00:30:25,150 --> 00:30:30,250
exist which is kind of treated as one

670
00:30:27,040 --> 00:30:32,440
string or one line then we're gonna

671
00:30:30,250 --> 00:30:34,990
check if is random header is set and

672
00:30:32,440 --> 00:30:36,240
we're gonna do exactly what we did for

673
00:30:34,990 --> 00:30:40,440
the first function that I explained

674
00:30:36,240 --> 00:30:44,220
adding x-forwarded-for or client IP and

675
00:30:40,440 --> 00:30:46,990
populating both of them with a random IP

676
00:30:44,220 --> 00:30:49,200
so the replace function here in the code

677
00:30:46,990 --> 00:30:51,029
that has user agent user agent random IP

678
00:30:49,200 --> 00:30:53,070
basically does nothing but generate a

679
00:30:51,029 --> 00:30:58,470
random IP so user agent is just a

680
00:30:53,070 --> 00:31:01,590
mislead so now we are going to send a

681
00:30:58,470 --> 00:31:04,830
request to the instructed host

682
00:31:01,590 --> 00:31:07,459
uninstructed port if is SSL is set we're

683
00:31:04,830 --> 00:31:11,279
going to do so in a HTTPS format and

684
00:31:07,460 --> 00:31:15,120
then we are going to wrap all of the

685
00:31:11,279 --> 00:31:18,389
data that we sent and processed in HT @

686
00:31:15,120 --> 00:31:25,529
HT tml tags and we are going to call it

687
00:31:18,389 --> 00:31:28,490
find out read Val and the next step we

688
00:31:25,529 --> 00:31:32,220
are going to report to the server that

689
00:31:28,490 --> 00:31:34,799
this was being processed and we're going

690
00:31:32,220 --> 00:31:38,309
to basically report that find out read

691
00:31:34,799 --> 00:31:41,220
file back to it so now we talked about

692
00:31:38,309 --> 00:31:45,899
these three commands and you already

693
00:31:41,220 --> 00:31:48,480
have heard me saying HTTP HTTP requests

694
00:31:45,899 --> 00:31:50,279
arbitrary fuzzing and these are the

695
00:31:48,480 --> 00:31:51,600
commands that we previously showed to

696
00:31:50,279 --> 00:31:56,299
you and these are all surveillance word

697
00:31:51,600 --> 00:31:58,889
commands so one good thing what does

698
00:31:56,299 --> 00:32:00,750
this set of command has anything to do

699
00:31:58,889 --> 00:32:04,799
with surveillance for commands we're

700
00:32:00,750 --> 00:32:08,820
gonna wrap this up as my conclusion so

701
00:32:04,799 --> 00:32:11,039
new commands new purpose that's what we

702
00:32:08,820 --> 00:32:13,590
were a probe on I've ever brainstorming

703
00:32:11,039 --> 00:32:16,408
about because so one thing that did not

704
00:32:13,590 --> 00:32:18,959
we could not get was was receiving a

705
00:32:16,409 --> 00:32:22,320
response from server so basically we

706
00:32:18,960 --> 00:32:24,000
don't we didn't have the server the see

707
00:32:22,320 --> 00:32:26,309
tools that we obtained from the Mallards

708
00:32:24,000 --> 00:32:28,559
we try to communicate with them but they

709
00:32:26,309 --> 00:32:30,750
did not reply back to us for any reason

710
00:32:28,559 --> 00:32:31,950
it could have been certain conditions

711
00:32:30,750 --> 00:32:34,590
that we didn't meet it could have been

712
00:32:31,950 --> 00:32:37,440
our geolocation but for any reason we

713
00:32:34,590 --> 00:32:40,289
didn't get any data so because of that

714
00:32:37,440 --> 00:32:44,220
because I have not seen any data actual

715
00:32:40,289 --> 00:32:46,919
data or actual strings coming from the

716
00:32:44,220 --> 00:32:49,590
server or in commands coming from the

717
00:32:46,919 --> 00:32:51,240
server I cannot be certain about what

718
00:32:49,590 --> 00:32:54,510
exactly is intended by these three

719
00:32:51,240 --> 00:32:56,639
commands however reverse engineers

720
00:32:54,510 --> 00:33:00,179
always say the code is there just go

721
00:32:56,639 --> 00:33:02,139
read it and it did read it so the next

722
00:33:00,179 --> 00:33:05,160
step for us is to conclude something

723
00:33:02,140 --> 00:33:07,480
there are some potentially potential

724
00:33:05,160 --> 00:33:10,799
there's some potentials for these three

725
00:33:07,480 --> 00:33:13,929
commands the first important the first

726
00:33:10,799 --> 00:33:15,580
theory that we have is that an adversary

727
00:33:13,929 --> 00:33:18,700
can use these commands to gain access

728
00:33:15,580 --> 00:33:20,799
behind the firewall now imagine you're

729
00:33:18,700 --> 00:33:23,049
an enterprise company you have all the

730
00:33:20,799 --> 00:33:25,780
securities and then one of your

731
00:33:23,049 --> 00:33:27,700
employees is just kind of download one

732
00:33:25,780 --> 00:33:29,620
of these rats and they're jailbroken

733
00:33:27,700 --> 00:33:33,190
Android device are not part of the

734
00:33:29,620 --> 00:33:37,178
policies of the company now that device

735
00:33:33,190 --> 00:33:39,460
is inside your firewalls is able to

736
00:33:37,179 --> 00:33:41,110
tunnel every information outside your

737
00:33:39,460 --> 00:33:47,400
firewall and nobody's gonna know about

738
00:33:41,110 --> 00:33:50,110
it so this actually will be some even

739
00:33:47,400 --> 00:33:54,730
introduced it introduces some enterprise

740
00:33:50,110 --> 00:33:56,860
risk secondly with HTTP request multiple

741
00:33:54,730 --> 00:33:59,080
sending fuzzing everything that can be

742
00:33:56,860 --> 00:34:01,389
used to scan internal networks again you

743
00:33:59,080 --> 00:34:04,149
have a device inside the network you can

744
00:34:01,390 --> 00:34:05,950
just like try scanning sending arbitrary

745
00:34:04,150 --> 00:34:09,790
request multiple hosts and ports around

746
00:34:05,950 --> 00:34:11,260
you observe the response and try to get

747
00:34:09,790 --> 00:34:13,869
some information about what's around

748
00:34:11,260 --> 00:34:15,820
your device and basically just gather

749
00:34:13,869 --> 00:34:17,500
information about okay so if in case of

750
00:34:15,820 --> 00:34:20,139
an enterprise what other devices are

751
00:34:17,500 --> 00:34:21,668
there who else gonna get into or what

752
00:34:20,139 --> 00:34:27,460
else can I do with this information

753
00:34:21,668 --> 00:34:29,469
and after reconnaissance always comes is

754
00:34:27,460 --> 00:34:32,859
there any wonder ability is there

755
00:34:29,469 --> 00:34:35,678
anything that I can exploit here what

756
00:34:32,859 --> 00:34:37,540
version of the iOS server or Apache

757
00:34:35,679 --> 00:34:41,530
server these hosts and ports are sent

758
00:34:37,540 --> 00:34:45,399
are using how can i engineer my requests

759
00:34:41,530 --> 00:34:49,119
to exploit them and the malware can't

760
00:34:45,399 --> 00:34:52,060
just not go and try the it's not for

761
00:34:49,119 --> 00:34:55,570
theory which is not impossible is to

762
00:34:52,060 --> 00:34:58,660
send multiple HTTP requests to single

763
00:34:55,570 --> 00:35:01,000
and single host and port to the extant

764
00:34:58,660 --> 00:35:03,580
to exhaust resources on that device so

765
00:35:01,000 --> 00:35:06,100
basically denial of service or tossing

766
00:35:03,580 --> 00:35:09,069
that device now let's take it one step

767
00:35:06,100 --> 00:35:11,109
further let's assume that the malware

768
00:35:09,070 --> 00:35:12,760
has infected multiple device and now

769
00:35:11,109 --> 00:35:15,549
it's going to use all of these devices

770
00:35:12,760 --> 00:35:18,900
to send

771
00:35:15,550 --> 00:35:21,250
request to one single host basically

772
00:35:18,900 --> 00:35:26,500
distributing this denial of service

773
00:35:21,250 --> 00:35:29,500
attack and create a DDoS attack so the

774
00:35:26,500 --> 00:35:32,470
questions are we think there are two

775
00:35:29,500 --> 00:35:34,750
scenarios possible here so number one

776
00:35:32,470 --> 00:35:37,419
which is stronger is that the authors

777
00:35:34,750 --> 00:35:38,410
are now changing their scope authors of

778
00:35:37,420 --> 00:35:40,810
extract

779
00:35:38,410 --> 00:35:42,670
they're changing their scope servants

780
00:35:40,810 --> 00:35:44,770
fear is not sufficient enough anymore

781
00:35:42,670 --> 00:35:46,690
and they are adding new functionalities

782
00:35:44,770 --> 00:35:49,270
now they want to go beyond servants were

783
00:35:46,690 --> 00:35:49,750
and do other stuff as well Jiri number

784
00:35:49,270 --> 00:35:51,970
two

785
00:35:49,750 --> 00:35:55,150
happens all the time specially when the

786
00:35:51,970 --> 00:35:57,490
malware has simple code other trade

787
00:35:55,150 --> 00:35:59,410
actors steal the code and add their own

788
00:35:57,490 --> 00:36:03,069
functionalities to it so this could be

789
00:35:59,410 --> 00:36:05,680
totally a different actor and it's it's

790
00:36:03,070 --> 00:36:09,580
it has potential for more investigation

791
00:36:05,680 --> 00:36:12,009
and research basically okay so we

792
00:36:09,580 --> 00:36:14,319
process the commands now let's look at

793
00:36:12,010 --> 00:36:17,970
the communication protocol what happens

794
00:36:14,320 --> 00:36:22,600
between client and server I'm going to

795
00:36:17,970 --> 00:36:24,399
take one of the client actions and talk

796
00:36:22,600 --> 00:36:28,240
about Connect which is basically the

797
00:36:24,400 --> 00:36:29,800
send the first connection that happens

798
00:36:28,240 --> 00:36:32,379
between a client a server which is

799
00:36:29,800 --> 00:36:34,960
basically the malware is installed on

800
00:36:32,380 --> 00:36:36,790
the device now the boys wants to check

801
00:36:34,960 --> 00:36:38,590
in with the CTO and say hey I am here

802
00:36:36,790 --> 00:36:41,259
and this is the information that I have

803
00:36:38,590 --> 00:36:43,330
for example this is my IP I'm in this

804
00:36:41,260 --> 00:36:47,680
network if you want to use this IP to

805
00:36:43,330 --> 00:36:49,480
tunnel to other hosts do so so the

806
00:36:47,680 --> 00:36:51,060
connect sends gathers bunch of

807
00:36:49,480 --> 00:36:57,460
information about the device and

808
00:36:51,060 --> 00:36:59,440
constructs a packet that has one opcode

809
00:36:57,460 --> 00:37:02,050
which is basically telling the server

810
00:36:59,440 --> 00:37:05,140
hey this heads-up this type of

811
00:37:02,050 --> 00:37:09,280
information is coming your way next

812
00:37:05,140 --> 00:37:11,080
field is zero it's referred to target

813
00:37:09,280 --> 00:37:15,370
forum honestly I'm not sure what is what

814
00:37:11,080 --> 00:37:16,810
it is for third field is the length of

815
00:37:15,370 --> 00:37:18,490
the packet again this type of

816
00:37:16,810 --> 00:37:20,950
information is coming your way

817
00:37:18,490 --> 00:37:23,589
heads up this is the length of it be

818
00:37:20,950 --> 00:37:28,569
prepared and information is going to be

819
00:37:23,590 --> 00:37:32,350
followed so a bit fine a packet

820
00:37:28,570 --> 00:37:37,240
shows the size of those fields of co2

821
00:37:32,350 --> 00:37:39,040
bytes length target for two bytes length

822
00:37:37,240 --> 00:37:41,589
four bytes and the rest of packet

823
00:37:39,040 --> 00:37:44,110
depends on how many but whatever bytes

824
00:37:41,590 --> 00:37:47,590
that is specified by the length this is

825
00:37:44,110 --> 00:37:50,050
the snapshot of the pcaps in version 1

826
00:37:47,590 --> 00:37:53,230
and version 2 those are the fields that

827
00:37:50,050 --> 00:37:55,810
I just talked about so in version 1 and

828
00:37:53,230 --> 00:37:58,720
version 2 the opcode of the connect

829
00:37:55,810 --> 00:38:02,290
server has changed the target form is

830
00:37:58,720 --> 00:38:04,720
the same the links varies so they may

831
00:38:02,290 --> 00:38:06,250
not be sending the same amount of

832
00:38:04,720 --> 00:38:08,859
information to the server in the connect

833
00:38:06,250 --> 00:38:12,370
function and the rest of it is just the

834
00:38:08,860 --> 00:38:18,070
packet this is version 3 the angry

835
00:38:12,370 --> 00:38:20,680
teenager so this one follows the same

836
00:38:18,070 --> 00:38:23,110
protocol has a command target form

837
00:38:20,680 --> 00:38:25,470
length and final data but for finer data

838
00:38:23,110 --> 00:38:29,170
it takes takes it one step further and

839
00:38:25,470 --> 00:38:31,240
it is encrypted and then gzip stat

840
00:38:29,170 --> 00:38:33,030
information and then sends it to the

841
00:38:31,240 --> 00:38:41,709
server

842
00:38:33,030 --> 00:38:45,400
okay large amount of information and

843
00:38:41,710 --> 00:38:48,310
technical analysis so what we wanted to

844
00:38:45,400 --> 00:38:49,900
do what now was to switch gears and talk

845
00:38:48,310 --> 00:38:52,750
about sort of a little bit of the

846
00:38:49,900 --> 00:38:54,820
context of this malware and when I mean

847
00:38:52,750 --> 00:38:56,200
context there's one apps aspect which

848
00:38:54,820 --> 00:38:57,760
we've spoken about before and which

849
00:38:56,200 --> 00:39:00,399
Kristin spoke about in the previous talk

850
00:38:57,760 --> 00:39:02,350
which is attribution but what we also

851
00:39:00,400 --> 00:39:04,060
want to talk about is what all of this

852
00:39:02,350 --> 00:39:06,430
information and all those small little

853
00:39:04,060 --> 00:39:09,640
details tell us about this malware

854
00:39:06,430 --> 00:39:12,790
itself and also about what more you can

855
00:39:09,640 --> 00:39:14,529
find using this information so I wanted

856
00:39:12,790 --> 00:39:16,180
to give you an idea of what the C to

857
00:39:14,530 --> 00:39:19,150
infrastructure looks like it's still

858
00:39:16,180 --> 00:39:23,109
live today and this is one of the more

859
00:39:19,150 --> 00:39:25,630
recent ones that's still online now the

860
00:39:23,110 --> 00:39:27,420
picture makes it look way more hectic

861
00:39:25,630 --> 00:39:29,320
than it really is it's not this

862
00:39:27,420 --> 00:39:31,540
fantastic it looks like there's actually

863
00:39:29,320 --> 00:39:33,850
something hiding there and there's a

864
00:39:31,540 --> 00:39:36,310
picture and there's some restricted

865
00:39:33,850 --> 00:39:40,049
access and some target located

866
00:39:36,310 --> 00:39:42,400
and from translating very generally

867
00:39:40,050 --> 00:39:44,320
information at the top of the page and

868
00:39:42,400 --> 00:39:46,270
in the rest of the page if you keep

869
00:39:44,320 --> 00:39:49,630
scrolling down which is in pictured here

870
00:39:46,270 --> 00:39:52,420
it seems to be just a blog site it's

871
00:39:49,630 --> 00:39:54,640
it's a website that whole certain

872
00:39:52,420 --> 00:39:57,580
conversations between developers of

873
00:39:54,640 --> 00:40:00,310
different things which doesn't really

874
00:39:57,580 --> 00:40:02,710
make sense but it's it's live and it's

875
00:40:00,310 --> 00:40:04,330
working but and this is just a front if

876
00:40:02,710 --> 00:40:08,830
you take a look at some of the

877
00:40:04,330 --> 00:40:10,180
subdomains it's hiding some apks an apk

878
00:40:08,830 --> 00:40:13,569
is obviously an applique Android

879
00:40:10,180 --> 00:40:16,930
application and this was modified on the

880
00:40:13,570 --> 00:40:19,270
4th of April of this year so even if we

881
00:40:16,930 --> 00:40:21,399
don't know much about what this malware

882
00:40:19,270 --> 00:40:23,290
is doing and how it's doing it we know

883
00:40:21,400 --> 00:40:26,220
it's still being handled it's still

884
00:40:23,290 --> 00:40:28,600
being worked on it's still being perhaps

885
00:40:26,220 --> 00:40:30,339
manipulated by the actors or by the

886
00:40:28,600 --> 00:40:34,330
developers whether it's the same ones or

887
00:40:30,340 --> 00:40:36,700
not web.config web.config didn't really

888
00:40:34,330 --> 00:40:40,360
come back to me with anything and this

889
00:40:36,700 --> 00:40:43,029
is a hallmark of accessor em rat and X

890
00:40:40,360 --> 00:40:45,790
rat the servers are very locked down we

891
00:40:43,030 --> 00:40:47,920
don't hear much from them we can you can

892
00:40:45,790 --> 00:40:49,960
and then this is like built into the

893
00:40:47,920 --> 00:40:52,330
code structure you can send a lot of

894
00:40:49,960 --> 00:40:54,610
data that the server will accept

895
00:40:52,330 --> 00:40:56,770
anything you give it all that all your

896
00:40:54,610 --> 00:40:58,450
data it'll take it but it will never

897
00:40:56,770 --> 00:41:01,480
come back with something or it'll come

898
00:40:58,450 --> 00:41:03,220
back very rarely and and this is sort of

899
00:41:01,480 --> 00:41:08,440
consistent with most of the way that

900
00:41:03,220 --> 00:41:10,180
this actor operates or the actors the

901
00:41:08,440 --> 00:41:11,890
other thing that we can tell with the

902
00:41:10,180 --> 00:41:14,200
limited information that we have is a

903
00:41:11,890 --> 00:41:16,210
geolocation of some of those servers of

904
00:41:14,200 --> 00:41:20,140
course that doesn't tell you too much

905
00:41:16,210 --> 00:41:22,450
about actually where the actors are they

906
00:41:20,140 --> 00:41:25,600
can easily use VPNs and connect through

907
00:41:22,450 --> 00:41:27,939
different areas but what we did notice

908
00:41:25,600 --> 00:41:29,799
is they were about 43 servers that we'd

909
00:41:27,940 --> 00:41:32,470
seen in total somewhere online in

910
00:41:29,800 --> 00:41:34,360
somewhere offline but 11 of those the

911
00:41:32,470 --> 00:41:36,879
vast majority of those were actually

912
00:41:34,360 --> 00:41:39,370
located within Hong Kong and they were

913
00:41:36,880 --> 00:41:41,860
sort of a smattering around in the u.s.

914
00:41:39,370 --> 00:41:44,410
now you might think well this doesn't

915
00:41:41,860 --> 00:41:46,390
really tell me much the actors could be

916
00:41:44,410 --> 00:41:49,120
anywhere but the truth is that this is

917
00:41:46,390 --> 00:41:52,868
actually consistent with XS or M rats so

918
00:41:49,120 --> 00:41:55,660
for years since 2014

919
00:41:52,869 --> 00:41:57,160
seeing the same pattern it could be that

920
00:41:55,660 --> 00:41:58,509
somebody sort of trying to hide and

921
00:41:57,160 --> 00:42:00,609
things like that and these might be

922
00:41:58,509 --> 00:42:02,829
false flags but it is interesting that

923
00:42:00,609 --> 00:42:04,390
certain things remain the same there's

924
00:42:02,829 --> 00:42:07,029
some consistency there which may suggest

925
00:42:04,390 --> 00:42:11,288
that it's still the same actor employing

926
00:42:07,029 --> 00:42:13,150
and deploying these tools then there's

927
00:42:11,289 --> 00:42:15,309
other smaller little things that I

928
00:42:13,150 --> 00:42:17,259
wanted to draw your attention to and I'm

929
00:42:15,309 --> 00:42:18,819
interested to see what you guys think

930
00:42:17,259 --> 00:42:21,009
and what your theories might be about

931
00:42:18,819 --> 00:42:22,779
these things but what's interesting is

932
00:42:21,009 --> 00:42:25,269
the titles of the applications when I

933
00:42:22,779 --> 00:42:27,220
say titles I mean application names it's

934
00:42:25,269 --> 00:42:28,959
when you download something and install

935
00:42:27,220 --> 00:42:33,009
it on your Android device this sort of

936
00:42:28,960 --> 00:42:34,720
words that come below the icon these

937
00:42:33,009 --> 00:42:36,369
titles were particularly interesting and

938
00:42:34,720 --> 00:42:39,519
I'm gonna take a quick look at what

939
00:42:36,369 --> 00:42:41,829
accessor Emre titles said about the

940
00:42:39,519 --> 00:42:43,990
family and as you can see the titles are

941
00:42:41,829 --> 00:42:47,259
very like generic things system thread

942
00:42:43,990 --> 00:42:48,098
and system I am and system ADB which

943
00:42:47,259 --> 00:42:50,170
isn't so weird

944
00:42:48,099 --> 00:42:52,029
which is a little weird but the others

945
00:42:50,170 --> 00:42:54,670
seem to be quite normal right they look

946
00:42:52,029 --> 00:42:56,589
like things that may perhaps be required

947
00:42:54,670 --> 00:42:59,079
by the operating system if you're not

948
00:42:56,589 --> 00:43:01,569
familiar with Android but the one that

949
00:42:59,079 --> 00:43:03,430
stood out especially to the researchers

950
00:43:01,569 --> 00:43:06,880
multiple researchers that were looking

951
00:43:03,430 --> 00:43:09,308
at extra accessory Brad was the second

952
00:43:06,880 --> 00:43:11,920
one on the list there that says code for

953
00:43:09,309 --> 00:43:15,430
HK those were about 11 samples out of

954
00:43:11,920 --> 00:43:17,859
the 1101 that 114 samples that we saw

955
00:43:15,430 --> 00:43:20,230
and and that's the one that stood out

956
00:43:17,859 --> 00:43:22,989
everything else looks generic and looks

957
00:43:20,230 --> 00:43:26,410
Android II and then there's code for HK

958
00:43:22,989 --> 00:43:27,999
which is probably particularly targeted

959
00:43:26,410 --> 00:43:29,319
at a certain set of people that are

960
00:43:27,999 --> 00:43:32,410
interested in that particular

961
00:43:29,319 --> 00:43:34,839
organization which may lead you to

962
00:43:32,410 --> 00:43:39,038
believe how it was being used so let's

963
00:43:34,839 --> 00:43:40,450
do the same thing with X rad and these

964
00:43:39,039 --> 00:43:44,440
are the titles that we saw we saw a lot

965
00:43:40,450 --> 00:43:46,390
more samples 328 and all of them are

966
00:43:44,440 --> 00:43:49,150
again these are legitimate processes

967
00:43:46,390 --> 00:43:52,058
system UI is the thing that runs on

968
00:43:49,150 --> 00:43:55,150
Android so if even if you're quite a

969
00:43:52,059 --> 00:43:57,130
tech-savvy person maybe it might not

970
00:43:55,150 --> 00:44:00,220
raise that many red flags but we'll go

971
00:43:57,130 --> 00:44:01,630
into that later the one that is really

972
00:44:00,220 --> 00:44:03,279
interesting are the last two at the

973
00:44:01,630 --> 00:44:05,730
bottom there and the rendering isn't

974
00:44:03,279 --> 00:44:09,400
perfect on the last one there but

975
00:44:05,730 --> 00:44:12,490
it's difficult to say what those mean

976
00:44:09,400 --> 00:44:14,470
without the context of the people that

977
00:44:12,490 --> 00:44:16,990
are being targeted so code for HK was

978
00:44:14,470 --> 00:44:19,270
really popular right it the umbrella

979
00:44:16,990 --> 00:44:22,209
movement was going on in 2014 there was

980
00:44:19,270 --> 00:44:24,220
a lot of reporting around it there was

981
00:44:22,210 --> 00:44:27,700
so much context that you could see as an

982
00:44:24,220 --> 00:44:31,899
external observer but x-ray it had only

983
00:44:27,700 --> 00:44:34,960
two samples that were whose titles were

984
00:44:31,900 --> 00:44:38,200
in Mandarin or Taiwanese or Chinese some

985
00:44:34,960 --> 00:44:40,420
Chinese language and so what we did was

986
00:44:38,200 --> 00:44:42,339
we took one of those let's say we took

987
00:44:40,420 --> 00:44:44,350
the last one and we threw it into

988
00:44:42,340 --> 00:44:45,820
lookouts data suddenly so what came back

989
00:44:44,350 --> 00:44:48,190
and we found four samples with that

990
00:44:45,820 --> 00:44:49,720
title alone and three of them were the

991
00:44:48,190 --> 00:44:51,640
legitimate application there's a

992
00:44:49,720 --> 00:44:55,200
legitimate application for a website

993
00:44:51,640 --> 00:44:57,790
called Lion travel it's a company that

994
00:44:55,200 --> 00:45:02,980
specializes in travel tours around

995
00:44:57,790 --> 00:45:05,259
Taiwan and what you have to realize is

996
00:45:02,980 --> 00:45:06,700
if you're not within the situation and

997
00:45:05,260 --> 00:45:08,860
if you're not within the context of

998
00:45:06,700 --> 00:45:10,839
where this malware is being used it

999
00:45:08,860 --> 00:45:13,600
probably doesn't ring too many bells but

1000
00:45:10,840 --> 00:45:15,640
maybe you're the person who uses Lion

1001
00:45:13,600 --> 00:45:18,370
travel for your Tours and Travels and

1002
00:45:15,640 --> 00:45:21,970
buys your parents a family trip to

1003
00:45:18,370 --> 00:45:24,279
Taiwan and perhaps the people at the

1004
00:45:21,970 --> 00:45:27,939
employees that lion travel use a

1005
00:45:24,280 --> 00:45:30,400
particular airline or have a certain set

1006
00:45:27,940 --> 00:45:33,370
of people that they know quirks and

1007
00:45:30,400 --> 00:45:36,730
ideas perhaps they book travels for

1008
00:45:33,370 --> 00:45:38,890
somebody important it would be

1009
00:45:36,730 --> 00:45:41,290
interesting to go down these little

1010
00:45:38,890 --> 00:45:43,200
small threads and pull them and see what

1011
00:45:41,290 --> 00:45:46,180
comes out at the other end and that

1012
00:45:43,200 --> 00:45:49,660
forces you to think a lot more and

1013
00:45:46,180 --> 00:45:52,270
immerse yourself in where these malware

1014
00:45:49,660 --> 00:45:53,920
are being used so that's just like it an

1015
00:45:52,270 --> 00:45:55,870
interesting tidbit of information which

1016
00:45:53,920 --> 00:45:57,730
I'm sure if you pull on that thread if

1017
00:45:55,870 --> 00:45:59,200
you go home tonight and pull on that

1018
00:45:57,730 --> 00:46:01,750
thread you might find something

1019
00:45:59,200 --> 00:46:03,790
interesting definitely reach out to us

1020
00:46:01,750 --> 00:46:06,520
and let us know what you think so I'm

1021
00:46:03,790 --> 00:46:09,520
gonna summarize our little talk today I

1022
00:46:06,520 --> 00:46:11,470
hope you really enjoyed it accessor mrad

1023
00:46:09,520 --> 00:46:14,170
we talked a lot about it it's been

1024
00:46:11,470 --> 00:46:16,060
reported quite quite a lot it was a

1025
00:46:14,170 --> 00:46:18,250
multi-platform tool and it's

1026
00:46:16,060 --> 00:46:19,330
masqueraders code for HK it was a

1027
00:46:18,250 --> 00:46:22,930
multi-platform

1028
00:46:19,330 --> 00:46:25,020
tool X rad isn't too different it

1029
00:46:22,930 --> 00:46:28,029
appears to be used by the same people

1030
00:46:25,020 --> 00:46:30,580
could there be an iOS component that we

1031
00:46:28,030 --> 00:46:32,400
haven't seen yet maybe I haven't poked

1032
00:46:30,580 --> 00:46:35,140
the server as long enough

1033
00:46:32,400 --> 00:46:37,360
there's obviously code similarities

1034
00:46:35,140 --> 00:46:39,520
they're so similar in fact you can't you

1035
00:46:37,360 --> 00:46:41,980
almost can't separate the samples

1036
00:46:39,520 --> 00:46:44,200
looking at the code structure the

1037
00:46:41,980 --> 00:46:46,690
infrastructure is still live and it has

1038
00:46:44,200 --> 00:46:48,960
very recently uploaded an apk still

1039
00:46:46,690 --> 00:46:51,340
being handled it's still being used

1040
00:46:48,960 --> 00:46:54,820
let's find the links that link back to

1041
00:46:51,340 --> 00:46:57,640
that perhaps there is a Twitter handle

1042
00:46:54,820 --> 00:46:59,950
that's sending DMS to interesting people

1043
00:46:57,640 --> 00:47:03,210
about hey why don't you book your tours

1044
00:46:59,950 --> 00:47:07,509
to read through this website or this app

1045
00:47:03,210 --> 00:47:09,700
so I guess the larger picture that I

1046
00:47:07,510 --> 00:47:12,310
wanted to get everybody to start

1047
00:47:09,700 --> 00:47:14,890
thinking about is that the mobile field

1048
00:47:12,310 --> 00:47:16,480
we know changes a lot changes a lot more

1049
00:47:14,890 --> 00:47:19,240
than any other field that we've seen in

1050
00:47:16,480 --> 00:47:21,580
technology and it turns out that mobile

1051
00:47:19,240 --> 00:47:24,310
authors may need to keep changing their

1052
00:47:21,580 --> 00:47:27,700
tool set just as fast and the

1053
00:47:24,310 --> 00:47:29,049
interesting thing looking at FX rad so

1054
00:47:27,700 --> 00:47:31,299
there are many different mobile families

1055
00:47:29,050 --> 00:47:34,360
that keep changing right but why we

1056
00:47:31,300 --> 00:47:36,880
focus on X rad was that they didn't only

1057
00:47:34,360 --> 00:47:39,730
just keep changing as an increase in

1058
00:47:36,880 --> 00:47:40,180
complexity they kept moving laterally as

1059
00:47:39,730 --> 00:47:42,790
well

1060
00:47:40,180 --> 00:47:44,980
they dropped some things that perhaps

1061
00:47:42,790 --> 00:47:48,279
weren't interesting or weren't worth

1062
00:47:44,980 --> 00:47:50,440
maintaining they added other things some

1063
00:47:48,280 --> 00:47:52,750
of their particular applications had

1064
00:47:50,440 --> 00:47:54,700
some commands some of them didn't so

1065
00:47:52,750 --> 00:47:56,950
were they really telling tailoring their

1066
00:47:54,700 --> 00:48:00,490
applications to suit the people they

1067
00:47:56,950 --> 00:48:03,100
were targeting but these lateral shifts

1068
00:48:00,490 --> 00:48:04,540
turns out can be just as effective and

1069
00:48:03,100 --> 00:48:06,250
the way that we know that is because

1070
00:48:04,540 --> 00:48:08,350
it's still being used it's still being

1071
00:48:06,250 --> 00:48:10,570
handled it's still being worked on it's

1072
00:48:08,350 --> 00:48:12,580
not a dead malware family we keep seeing

1073
00:48:10,570 --> 00:48:19,180
new samples every single day we've seen

1074
00:48:12,580 --> 00:48:22,180
six in the last 10 days so thank you

1075
00:48:19,180 --> 00:48:23,740
very much for sticking out with us it

1076
00:48:22,180 --> 00:48:27,040
was a lot to handle so your prize is

1077
00:48:23,740 --> 00:48:29,100
little puppies thank you

1078
00:48:27,040 --> 00:48:29,100
you

