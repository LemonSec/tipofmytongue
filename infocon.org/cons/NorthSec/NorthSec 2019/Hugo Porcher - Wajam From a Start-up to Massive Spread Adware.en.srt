1
00:00:02,649 --> 00:00:08,550
good afternoon everyone we're ready to

2
00:00:06,609 --> 00:00:12,219
start with the last session of North sac

3
00:00:08,550 --> 00:00:14,320
we will have Hugo presenting Hugo with a

4
00:00:12,220 --> 00:00:16,570
malware researcher with ESET and he will

5
00:00:14,320 --> 00:00:18,250
be talking about why Jam so please join

6
00:00:16,570 --> 00:00:24,448
me in welcoming Hugo

7
00:00:18,250 --> 00:00:24,448
[Applause]

8
00:00:24,910 --> 00:00:31,400
so hi everyone so thank you for coming

9
00:00:28,700 --> 00:00:34,550
to my talk even if this is the last one

10
00:00:31,400 --> 00:00:36,890
of the day so today I'll represent you

11
00:00:34,550 --> 00:00:39,019
the story of what Jam so this is a

12
00:00:36,890 --> 00:00:41,750
social search engine developed by a

13
00:00:39,020 --> 00:00:45,500
famous Montreal startup which became a

14
00:00:41,750 --> 00:00:47,780
massive spread adware so what about me

15
00:00:45,500 --> 00:00:50,420
my name is ego I work at the Montreal

16
00:00:47,780 --> 00:00:53,150
office of ESET as a malware researcher

17
00:00:50,420 --> 00:00:55,550
and basically my work consists to track

18
00:00:53,150 --> 00:00:58,280
different kinds of my issue software and

19
00:00:55,550 --> 00:01:01,968
analyze them and assertion essentially

20
00:00:58,280 --> 00:01:04,729
in doing reverse engineering so here is

21
00:01:01,969 --> 00:01:08,360
the agenda for this presentation first I

22
00:01:04,729 --> 00:01:10,310
will present you a jam as a company as

23
00:01:08,360 --> 00:01:13,070
well as their product and the reasons

24
00:01:10,310 --> 00:01:14,869
behind this research then we will go

25
00:01:13,070 --> 00:01:17,389
through the story of what Jam to get a

26
00:01:14,869 --> 00:01:19,250
bit of context the next two sections

27
00:01:17,390 --> 00:01:21,860
will be about the analyze of the

28
00:01:19,250 --> 00:01:24,080
different versions of the software we

29
00:01:21,860 --> 00:01:26,570
collected and you will see the

30
00:01:24,080 --> 00:01:28,550
techniques used by what Jam in the

31
00:01:26,570 --> 00:01:31,068
software look a lot like techniques

32
00:01:28,550 --> 00:01:34,610
typically typically used by malware's

33
00:01:31,069 --> 00:01:38,119
and finally finally and we give you some

34
00:01:34,610 --> 00:01:42,349
takeaways of this research and what is

35
00:01:38,119 --> 00:01:44,509
research patent in evidence so let's

36
00:01:42,349 --> 00:01:44,929
start with a brief presentation of what

37
00:01:44,509 --> 00:01:48,800
Jam

38
00:01:44,929 --> 00:01:51,170
bust as a company and the software so

39
00:01:48,800 --> 00:01:53,179
what is wedge am what I am internet

40
00:01:51,170 --> 00:01:56,330
technologies the company founded in

41
00:01:53,179 --> 00:01:58,789
December 2008 in Montreal by Metallica

42
00:01:56,330 --> 00:02:02,209
Trimble this is a famous entrepreneur in

43
00:01:58,789 --> 00:02:05,840
Quebec I participated at some popular TV

44
00:02:02,209 --> 00:02:08,090
shows like the Dragons Den and the only

45
00:02:05,840 --> 00:02:10,810
product that this company is a social

46
00:02:08,090 --> 00:02:14,090
search online application so basically

47
00:02:10,810 --> 00:02:16,340
it allows searching through the content

48
00:02:14,090 --> 00:02:18,680
share by your relations and the social

49
00:02:16,340 --> 00:02:21,950
networks like Facebook LinkedIn Twitter

50
00:02:18,680 --> 00:02:22,880
or even Google Plus which doesn't exist

51
00:02:21,950 --> 00:02:27,170
anymore in certain

52
00:02:22,880 --> 00:02:30,590
and here is an example of what result

53
00:02:27,170 --> 00:02:32,540
you could expect in using wet jam so

54
00:02:30,590 --> 00:02:35,120
when you use an online search and drying

55
00:02:32,540 --> 00:02:37,160
like Google for example it will give you

56
00:02:35,120 --> 00:02:38,660
the content share by friends and social

57
00:02:37,160 --> 00:02:41,930
networks related to the keywords you

58
00:02:38,660 --> 00:02:44,450
search for and as you can see that there

59
00:02:41,930 --> 00:02:47,510
are no ads and this example but this

60
00:02:44,450 --> 00:02:50,450
one's comes from wet John directly this

61
00:02:47,510 --> 00:02:53,239
is an actual example of a Google search

62
00:02:50,450 --> 00:02:58,459
with wet jam and you can see the ads and

63
00:02:53,240 --> 00:03:02,650
the the Facebook Twitter contextual menu

64
00:02:58,460 --> 00:03:07,580
at the top so you can see what John adds

65
00:03:02,650 --> 00:03:10,040
and maybe you can wonder why we did this

66
00:03:07,580 --> 00:03:13,820
research at this kind of software we

67
00:03:10,040 --> 00:03:17,030
could be actually useful and actually we

68
00:03:13,820 --> 00:03:19,450
knew what John for several years but we

69
00:03:17,030 --> 00:03:21,890
really started to look at it when

70
00:03:19,450 --> 00:03:25,489
Malwarebytes published an article about

71
00:03:21,890 --> 00:03:28,660
my quest malware intercepting encrypted

72
00:03:25,490 --> 00:03:32,330
traffic for add injection and

73
00:03:28,660 --> 00:03:34,870
malwarebytes don't leak into a jam but

74
00:03:32,330 --> 00:03:38,180
the domain names use were the same and

75
00:03:34,870 --> 00:03:41,300
injection process of adware was the same

76
00:03:38,180 --> 00:03:44,540
so then one or two months later we found

77
00:03:41,300 --> 00:03:46,520
a Windows version of wet Jam based on

78
00:03:44,540 --> 00:03:50,329
the kernel driver to intercept traffic

79
00:03:46,520 --> 00:03:54,680
and also as we work in a Montreal office

80
00:03:50,330 --> 00:03:57,530
this is a local local story for us so we

81
00:03:54,680 --> 00:04:00,260
wanted to fill the gap between the

82
00:03:57,530 --> 00:04:03,200
public reporting and actual behavior of

83
00:04:00,260 --> 00:04:06,380
what Jam so this we started to look

84
00:04:03,200 --> 00:04:10,459
deeper at the different samples and as

85
00:04:06,380 --> 00:04:13,490
well as the previous one from from 2011

86
00:04:10,460 --> 00:04:20,120
so yes of course I love studying white

87
00:04:13,490 --> 00:04:22,070
wares and so before looking at the

88
00:04:20,120 --> 00:04:24,830
technical part and the analyze of the

89
00:04:22,070 --> 00:04:27,710
software let's go through the unique

90
00:04:24,830 --> 00:04:31,340
history of the company to get a bit of

91
00:04:27,710 --> 00:04:33,830
context so what Jam history stands with

92
00:04:31,340 --> 00:04:35,359
a lot of success the company has been

93
00:04:33,830 --> 00:04:37,310
rewarded

94
00:04:35,360 --> 00:04:41,840
time and was a claim by many famous

95
00:04:37,310 --> 00:04:45,080
magazines like Forbes or different local

96
00:04:41,840 --> 00:04:49,429
newspapers so this was really a success

97
00:04:45,080 --> 00:04:51,800
story in Montreal and even with students

98
00:04:49,430 --> 00:04:54,680
why Jam the sponsor was a famous

99
00:04:51,800 --> 00:04:56,180
Montreal student Claire the DCI so this

100
00:04:54,680 --> 00:05:00,379
is in French sorry for the

101
00:04:56,180 --> 00:05:03,080
english-speaking persons and but however

102
00:05:00,379 --> 00:05:05,509
the success story is balanced by the

103
00:05:03,080 --> 00:05:08,029
important number of user complaints

104
00:05:05,509 --> 00:05:12,110
regarding the the behavior orders of the

105
00:05:08,029 --> 00:05:14,120
software and as you can maybe see and

106
00:05:12,110 --> 00:05:16,969
the examples most most of the users

107
00:05:14,120 --> 00:05:20,270
complain about the unwanted installation

108
00:05:16,969 --> 00:05:22,909
of webcam and their machines and the

109
00:05:20,270 --> 00:05:28,599
heavy display of ads making the software

110
00:05:22,909 --> 00:05:31,099
almost universal and one of the other

111
00:05:28,599 --> 00:05:33,979
where Jam issues is the collection of

112
00:05:31,099 --> 00:05:36,050
personal information so I represent more

113
00:05:33,979 --> 00:05:39,139
about the kind of information that what

114
00:05:36,050 --> 00:05:42,229
Jam collects later but in 2016 the

115
00:05:39,139 --> 00:05:44,389
office of the Privacy Commissioner of

116
00:05:42,229 --> 00:05:46,490
Canada initiated a complaint against

117
00:05:44,389 --> 00:05:49,069
against the company for breaching the

118
00:05:46,490 --> 00:05:52,250
personal information protocol protection

119
00:05:49,069 --> 00:05:54,199
and electronic documents Act so

120
00:05:52,250 --> 00:05:57,589
basically this is the federal privacy

121
00:05:54,199 --> 00:06:00,169
law for private sector organizations and

122
00:05:57,589 --> 00:06:02,419
it set out the ground rules for how

123
00:06:00,169 --> 00:06:04,758
businesses must handle personal

124
00:06:02,419 --> 00:06:09,080
information in the course of commercial

125
00:06:04,759 --> 00:06:11,900
activity so as you can see on this

126
00:06:09,080 --> 00:06:15,258
timeline the investigation of the OPC

127
00:06:11,900 --> 00:06:19,638
started in June 2016 and the final

128
00:06:15,259 --> 00:06:21,460
report was published in August 2017 and

129
00:06:19,639 --> 00:06:24,529
during the time of the investigation

130
00:06:21,460 --> 00:06:26,960
what John transferred all his assets to

131
00:06:24,529 --> 00:06:32,330
uncle company called Iran Montaigne

132
00:06:26,960 --> 00:06:35,150
technology limited I am here also one

133
00:06:32,330 --> 00:06:38,779
interesting thing you can found by G OPC

134
00:06:35,150 --> 00:06:42,020
is the progressive and silent removal of

135
00:06:38,779 --> 00:06:46,520
LinkedIn Google+ and Facebook of their

136
00:06:42,020 --> 00:06:48,659
software between 2012 and 2014 so this

137
00:06:46,520 --> 00:06:50,840
means that from 2014

138
00:06:48,660 --> 00:06:56,760
it was only possible to see Twitter

139
00:06:50,840 --> 00:06:59,549
results when using wooja-- so here is

140
00:06:56,760 --> 00:07:01,740
the the the company webcam

141
00:06:59,550 --> 00:07:03,900
funds this assets - so here is a

142
00:07:01,740 --> 00:07:07,710
screenshot of their website and to get a

143
00:07:03,900 --> 00:07:09,900
bit of context and this is the answer of

144
00:07:07,710 --> 00:07:13,680
what John - the report of the OPC in

145
00:07:09,900 --> 00:07:16,440
August 2017 and basically what John

146
00:07:13,680 --> 00:07:23,880
stated that it was no longer accountable

147
00:07:16,440 --> 00:07:26,580
for inglés practices so however even the

148
00:07:23,880 --> 00:07:29,990
OPC had some tabs whether the two

149
00:07:26,580 --> 00:07:34,550
organizations where regimen I until were

150
00:07:29,990 --> 00:07:38,280
actually entirely separate entities and

151
00:07:34,550 --> 00:07:39,780
if we go further in the report it says

152
00:07:38,280 --> 00:07:43,229
they observed that Island chair was

153
00:07:39,780 --> 00:07:46,739
incorporated in November 2016 what the

154
00:07:43,230 --> 00:07:49,380
investigation was ongoing so and beside

155
00:07:46,740 --> 00:07:52,550
the director of the company specialized

156
00:07:49,380 --> 00:07:55,200
in the providing business relocation and

157
00:07:52,550 --> 00:07:57,900
copyright services to businesses wishing

158
00:07:55,200 --> 00:08:02,849
to establish a presence in Hong Kong so

159
00:07:57,900 --> 00:08:06,510
quite curious and a few months ago

160
00:08:02,850 --> 00:08:08,850
actually in October 2010 18 services in

161
00:08:06,510 --> 00:08:12,870
French a local press investigation

162
00:08:08,850 --> 00:08:14,730
published and analyzed the report of the

163
00:08:12,870 --> 00:08:17,490
OPC and it's supposed interesting

164
00:08:14,730 --> 00:08:21,410
elements regarding the transfer of what

165
00:08:17,490 --> 00:08:23,580
John 2d to this new company and

166
00:08:21,410 --> 00:08:26,490
basically if you look at the the

167
00:08:23,580 --> 00:08:28,979
physical address of a lien TL on their

168
00:08:26,490 --> 00:08:32,490
website it matches exactly with the one

169
00:08:28,980 --> 00:08:37,169
of another company called Venusian

170
00:08:32,490 --> 00:08:40,080
secretarial group so as you can see so

171
00:08:37,169 --> 00:08:43,919
we can we can wander some something this

172
00:08:40,080 --> 00:08:46,530
is rather curious and if we look at the

173
00:08:43,919 --> 00:08:48,780
services offered by this company we can

174
00:08:46,530 --> 00:08:54,569
see the specialize in offshore company

175
00:08:48,780 --> 00:08:56,850
incorporation so curious again and this

176
00:08:54,570 --> 00:08:59,700
is actually from the from their website

177
00:08:56,850 --> 00:09:01,050
they said that the display is simply the

178
00:08:59,700 --> 00:09:04,140
company name in

179
00:09:01,050 --> 00:09:06,719
in the reception area and documents

180
00:09:04,140 --> 00:09:10,890
transferred to the original company so

181
00:09:06,720 --> 00:09:13,170
this is kind of of Korea but anyway now

182
00:09:10,890 --> 00:09:16,740
we have some context let's move to the

183
00:09:13,170 --> 00:09:19,410
technical part and we begin with the the

184
00:09:16,740 --> 00:09:22,140
common observation among the different

185
00:09:19,410 --> 00:09:25,829
version of what Jam we observed and how

186
00:09:22,140 --> 00:09:26,490
we classify them so this was not an easy

187
00:09:25,830 --> 00:09:29,160
task

188
00:09:26,490 --> 00:09:31,920
we collected an important number of wide

189
00:09:29,160 --> 00:09:34,650
jam samples and so the first step was to

190
00:09:31,920 --> 00:09:38,040
classify them both by versions and

191
00:09:34,650 --> 00:09:40,340
features so the first observation was to

192
00:09:38,040 --> 00:09:43,349
see that what Jam is that the only name

193
00:09:40,340 --> 00:09:46,170
used in the software but there are many

194
00:09:43,350 --> 00:09:49,710
others like social research search page

195
00:09:46,170 --> 00:09:52,079
and search razón for example but

196
00:09:49,710 --> 00:09:54,300
hopefully thanks to the the metadata of

197
00:09:52,080 --> 00:09:58,080
the samples and mainly Windows exactly

198
00:09:54,300 --> 00:10:00,479
executables like the PDB pass and the

199
00:09:58,080 --> 00:10:04,890
product version it was possible to

200
00:10:00,480 --> 00:10:07,260
classify them so here is some example of

201
00:10:04,890 --> 00:10:09,750
version numbers and PDB paths we we

202
00:10:07,260 --> 00:10:11,460
collected over the years and as you can

203
00:10:09,750 --> 00:10:14,880
see there there are some very explicit

204
00:10:11,460 --> 00:10:17,690
like what Jam proxy or DLL injection and

205
00:10:14,880 --> 00:10:21,120
it's interesting to observe that from

206
00:10:17,690 --> 00:10:23,720
2017 when the company was sold the PDB

207
00:10:21,120 --> 00:10:27,360
path started to be random characters and

208
00:10:23,720 --> 00:10:31,500
actually the most recent version in 2018

209
00:10:27,360 --> 00:10:33,690
and 2019 are even more random and seem

210
00:10:31,500 --> 00:10:36,870
to follow a specific pattern so

211
00:10:33,690 --> 00:10:41,430
suggesting a possible automatic

212
00:10:36,870 --> 00:10:44,250
obfuscation also the version numbering

213
00:10:41,430 --> 00:10:46,680
suggest there are certain versions but

214
00:10:44,250 --> 00:10:50,300
actually we've only observed the version

215
00:10:46,680 --> 00:10:54,239
one two three nine eleven and thirteen

216
00:10:50,300 --> 00:10:56,760
so also there is the there is the peers

217
00:10:54,240 --> 00:11:00,510
in signatures so it was also a good way

218
00:10:56,760 --> 00:11:01,950
to recognize and watch on samples and as

219
00:11:00,510 --> 00:11:06,720
the executable was signed with the

220
00:11:01,950 --> 00:11:08,940
domain names of web jump and maybe you

221
00:11:06,720 --> 00:11:11,370
could recognize some of them because

222
00:11:08,940 --> 00:11:13,360
they use actually Montreal street name

223
00:11:11,370 --> 00:11:16,929
for for the domain names

224
00:11:13,360 --> 00:11:19,569
and basically the Quebec Enterprise

225
00:11:16,929 --> 00:11:22,269
register was quite useful to make the

226
00:11:19,569 --> 00:11:25,029
link between the domain names and what

227
00:11:22,269 --> 00:11:28,600
job as a company so as you can see the

228
00:11:25,029 --> 00:11:31,869
many different domain names such as the

229
00:11:28,600 --> 00:11:34,929
iPhone starter install apps and many

230
00:11:31,869 --> 00:11:42,459
many others using a Montreal street name

231
00:11:34,929 --> 00:11:45,339
mostly so yeah the different version we

232
00:11:42,459 --> 00:11:48,729
could identify so we were we we group

233
00:11:45,339 --> 00:11:50,829
them by their features and codebase even

234
00:11:48,730 --> 00:11:53,619
if they even if they are distributed

235
00:11:50,829 --> 00:11:55,868
with a different name or a different

236
00:11:53,619 --> 00:11:58,029
version number and basically we

237
00:11:55,869 --> 00:12:01,179
identified five different versions of

238
00:11:58,029 --> 00:12:04,149
virgin one browser extension called the

239
00:12:01,179 --> 00:12:08,699
priam 3 different version for Windows

240
00:12:04,149 --> 00:12:11,799
and one for Mac OS distributed from 2007

241
00:12:08,699 --> 00:12:14,319
so as you can see the name of what john

242
00:12:11,799 --> 00:12:17,079
progressively disappeared and other

243
00:12:14,319 --> 00:12:22,479
names like social to search and search

244
00:12:17,079 --> 00:12:25,959
awesome wherever used so regarding the

245
00:12:22,480 --> 00:12:29,319
features each version finally does the

246
00:12:25,959 --> 00:12:31,569
same thing and Ageing sub remote

247
00:12:29,319 --> 00:12:34,089
javascript code and the users web

248
00:12:31,569 --> 00:12:36,878
traffic but the difference between each

249
00:12:34,089 --> 00:12:40,689
version resides in the technique used to

250
00:12:36,879 --> 00:12:43,149
perform the traffic interception so once

251
00:12:40,689 --> 00:12:45,549
the software is able to performed in the

252
00:12:43,149 --> 00:12:48,749
interception it unloads a list of

253
00:12:45,549 --> 00:12:52,149
supported website so did the list Maps

254
00:12:48,749 --> 00:12:56,619
domain name to specific JavaScript file

255
00:12:52,149 --> 00:12:58,629
and for each URL the the what John will

256
00:12:56,619 --> 00:13:03,999
check what John will check if the domain

257
00:12:58,629 --> 00:13:06,009
name matches with the with any domain

258
00:13:03,999 --> 00:13:08,410
name in the list and if it matches it

259
00:13:06,009 --> 00:13:11,739
injects the ads and the tweets

260
00:13:08,410 --> 00:13:13,929
corresponding to the user keywords so

261
00:13:11,739 --> 00:13:15,579
here is an example of what Ram list of

262
00:13:13,929 --> 00:13:18,299
supported web sites so there are

263
00:13:15,579 --> 00:13:22,089
essentially search engines

264
00:13:18,299 --> 00:13:24,789
approximately 100 and the version of the

265
00:13:22,089 --> 00:13:25,790
list is identified by ash and the date

266
00:13:24,789 --> 00:13:28,699
either

267
00:13:25,790 --> 00:13:31,339
every 50 seconds for four for example

268
00:13:28,700 --> 00:13:34,100
but the most important fill here is the

269
00:13:31,340 --> 00:13:36,980
dissipated site also as you can see

270
00:13:34,100 --> 00:13:43,160
there there is also a field to blacklist

271
00:13:36,980 --> 00:13:46,100
some processes so if we look at one

272
00:13:43,160 --> 00:13:48,199
example it's really looks like this so

273
00:13:46,100 --> 00:13:50,360
there is the rejects pattern to match

274
00:13:48,200 --> 00:13:53,480
the website so here Google for example

275
00:13:50,360 --> 00:13:57,080
and the past of the remote JavaScript

276
00:13:53,480 --> 00:13:59,960
file to twinject so this is the the

277
00:13:57,080 --> 00:14:04,400
JavaScript file for Google for example

278
00:13:59,960 --> 00:14:06,950
so it injects another file and this is

279
00:14:04,400 --> 00:14:14,410
the one responsible for the ads

280
00:14:06,950 --> 00:14:16,370
injection so what I'm progressively

281
00:14:14,410 --> 00:14:19,610
corrected more and more information

282
00:14:16,370 --> 00:14:22,190
related to its users so either during

283
00:14:19,610 --> 00:14:25,550
the installation or when the software is

284
00:14:22,190 --> 00:14:29,450
running and basically there are some IDs

285
00:14:25,550 --> 00:14:31,729
to identify a particular users a lot of

286
00:14:29,450 --> 00:14:33,980
blogs are sent to Virgin servers during

287
00:14:31,730 --> 00:14:36,890
the installation process to ensure it is

288
00:14:33,980 --> 00:14:40,520
done properly and the same with eNOS in

289
00:14:36,890 --> 00:14:42,850
the installation sorry and some

290
00:14:40,520 --> 00:14:45,370
information to the setup of the user

291
00:14:42,850 --> 00:14:48,200
like the list of the software installed

292
00:14:45,370 --> 00:14:51,410
or the model of the machines also sent

293
00:14:48,200 --> 00:14:54,350
to the Virgin servers so here is an

294
00:14:51,410 --> 00:14:56,209
example of network capture during an

295
00:14:54,350 --> 00:15:00,290
installation of webcam on the Windows

296
00:14:56,210 --> 00:15:05,570
machine so you can see a lot of logs get

297
00:15:00,290 --> 00:15:08,870
some fire also regarding the

298
00:15:05,570 --> 00:15:11,180
distribution as I said before a browser

299
00:15:08,870 --> 00:15:13,220
extension was initially available from

300
00:15:11,180 --> 00:15:17,750
the web the web cam official website

301
00:15:13,220 --> 00:15:19,630
till 2014 but it is essentially diffused

302
00:15:17,750 --> 00:15:23,990
by using the pay per install

303
00:15:19,630 --> 00:15:25,820
distribution model and according to the

304
00:15:23,990 --> 00:15:28,550
the opcd office of the Privacy

305
00:15:25,820 --> 00:15:31,370
Commissioner of Canada the the report I

306
00:15:28,550 --> 00:15:35,469
published in the in 2017 they used more

307
00:15:31,370 --> 00:15:39,930
than 50 different PPI providers between

308
00:15:35,470 --> 00:15:43,170
2011 and 2016 so this model

309
00:15:39,930 --> 00:15:46,910
was criticized several times for its

310
00:15:43,170 --> 00:15:49,589
usage of fake out of Flash Player

311
00:15:46,910 --> 00:15:54,360
antivirus installers to deceive the user

312
00:15:49,589 --> 00:15:58,740
and also the gav presence of adware and

313
00:15:54,360 --> 00:16:00,660
even malware in some installers so for

314
00:15:58,740 --> 00:16:03,360
the ones we are not familiar with this

315
00:16:00,660 --> 00:16:06,839
model and it is based on the revenue

316
00:16:03,360 --> 00:16:10,080
sharing and Commission so basically the

317
00:16:06,839 --> 00:16:14,040
kingpin at the top set up a pay per

318
00:16:10,080 --> 00:16:16,680
install website it recruits some

319
00:16:14,040 --> 00:16:19,770
affiliates which are able to massively

320
00:16:16,680 --> 00:16:23,880
spread the installers bundle by the

321
00:16:19,770 --> 00:16:28,579
kingpin and they are paid for each

322
00:16:23,880 --> 00:16:32,040
success installation so instead the

323
00:16:28,580 --> 00:16:34,589
adware is instant on any user machine it

324
00:16:32,040 --> 00:16:37,110
generates money for the adware company

325
00:16:34,589 --> 00:16:40,320
and so that way a company will pay again

326
00:16:37,110 --> 00:16:46,709
the kingpin for distributing it it's sad

327
00:16:40,320 --> 00:16:49,140
where and etc so now we have seen there

328
00:16:46,709 --> 00:16:51,050
the common features let's look deeper at

329
00:16:49,140 --> 00:16:54,480
the techniques used by wagon and

330
00:16:51,050 --> 00:16:58,439
especially the ones to perform traffic

331
00:16:54,480 --> 00:17:01,260
interception so as I said before the the

332
00:16:58,440 --> 00:17:03,240
first version was distributed as a

333
00:17:01,260 --> 00:17:06,480
browser extension so it can easily

334
00:17:03,240 --> 00:17:09,420
inject JavaScript code in any web page

335
00:17:06,480 --> 00:17:15,449
with this manifest file so it matches

336
00:17:09,420 --> 00:17:17,819
any anywhere on HTTP or HTTPS and an

337
00:17:15,449 --> 00:17:20,100
interesting point is that some older

338
00:17:17,819 --> 00:17:22,949
versions contain traces of a screen

339
00:17:20,099 --> 00:17:25,639
crept capture plug-in but it seems that

340
00:17:22,949 --> 00:17:28,740
the full code was never implemented and

341
00:17:25,640 --> 00:17:32,130
also it was a the dos versions were able

342
00:17:28,740 --> 00:17:36,420
to send the bookmarks of the user to

343
00:17:32,130 --> 00:17:39,600
toejam servers and the browser extension

344
00:17:36,420 --> 00:17:42,929
was not distributed is not distributed

345
00:17:39,600 --> 00:17:45,360
since 2014 and they basically removed

346
00:17:42,929 --> 00:17:48,860
the link to download it from their

347
00:17:45,360 --> 00:17:51,360
website so here is some some traces of

348
00:17:48,860 --> 00:17:53,699
the other screen capture plug-in in the

349
00:17:51,360 --> 00:17:59,129
code so it comes out as

350
00:17:53,700 --> 00:18:01,110
along the the browser extension and this

351
00:17:59,130 --> 00:18:03,480
is one of the JavaScript files of what

352
00:18:01,110 --> 00:18:05,490
ROM using the in the browser extension

353
00:18:03,480 --> 00:18:08,640
to the to the left this is an old

354
00:18:05,490 --> 00:18:11,640
version which leaked the bookmarks of

355
00:18:08,640 --> 00:18:14,490
the user and the right the the latest

356
00:18:11,640 --> 00:18:19,140
version so you can see that they remove

357
00:18:14,490 --> 00:18:24,350
this figure so this is the the download

358
00:18:19,140 --> 00:18:28,170
link before 2014 and after 2014

359
00:18:24,350 --> 00:18:30,300
so as they were doing ads injection the

360
00:18:28,170 --> 00:18:34,080
browser insertion was quickly flagged as

361
00:18:30,300 --> 00:18:36,360
adware by security products so at first

362
00:18:34,080 --> 00:18:39,780
we we can try the the we can see that

363
00:18:36,360 --> 00:18:44,879
that what I'm try to to to us to remove

364
00:18:39,780 --> 00:18:49,740
the detection but this actually did this

365
00:18:44,880 --> 00:18:52,290
quickly change from 2014 so at the time

366
00:18:49,740 --> 00:18:53,400
of the the browser extension was not

367
00:18:52,290 --> 00:18:55,620
distributed anymore

368
00:18:53,400 --> 00:18:59,580
we found another version of wide Ram

369
00:18:55,620 --> 00:19:02,699
internally called WG proxy and for

370
00:18:59,580 --> 00:19:05,520
Windows only and the instead of using a

371
00:19:02,700 --> 00:19:08,490
browser extension to to intercept

372
00:19:05,520 --> 00:19:10,830
traffic it set up so a web proxy a

373
00:19:08,490 --> 00:19:15,300
third-party web proxy called the called

374
00:19:10,830 --> 00:19:18,570
fiddler and also we observe the data try

375
00:19:15,300 --> 00:19:21,210
to elevate the privileges using the sed

376
00:19:18,570 --> 00:19:23,189
by privilege token and it's a root

377
00:19:21,210 --> 00:19:26,160
certificate to intercept encrypted

378
00:19:23,190 --> 00:19:29,880
traffic and avoid security warnings when

379
00:19:26,160 --> 00:19:32,580
injecting JavaScript code in web page so

380
00:19:29,880 --> 00:19:39,090
from what we saw the dispersion was not

381
00:19:32,580 --> 00:19:40,980
distributed since 2060 this one is more

382
00:19:39,090 --> 00:19:43,320
interesting so in a few months after the

383
00:19:40,980 --> 00:19:45,000
the proxy violent we observed another

384
00:19:43,320 --> 00:19:47,820
version with different names and

385
00:19:45,000 --> 00:19:50,040
different features and the techniques

386
00:19:47,820 --> 00:19:53,070
used by this one a much more aggressive

387
00:19:50,040 --> 00:19:58,080
I will I would say so instead of using a

388
00:19:53,070 --> 00:20:00,960
proxy it injects a dll in web browsers

389
00:19:58,080 --> 00:20:04,470
to the functions manipulating clear

390
00:20:00,960 --> 00:20:05,940
clear traffic and so inject ads so

391
00:20:04,470 --> 00:20:07,080
different injection techniques can be

392
00:20:05,940 --> 00:20:10,980
used I represent you

393
00:20:07,080 --> 00:20:14,428
them to you in the next slide and also

394
00:20:10,980 --> 00:20:17,039
in 2016 the they add a mini filter

395
00:20:14,429 --> 00:20:19,620
driver so basically I would get to

396
00:20:17,039 --> 00:20:23,360
either the software to antivirus

397
00:20:19,620 --> 00:20:25,918
projects and finally they I did

398
00:20:23,360 --> 00:20:30,240
progressively some anti analysis

399
00:20:25,919 --> 00:20:33,179
mechanisms like strings and and the

400
00:20:30,240 --> 00:20:35,070
payload encryption and checks for anti

401
00:20:33,179 --> 00:20:41,250
virus keys in the in the Windows

402
00:20:35,070 --> 00:20:44,580
registry so this is the simple string

403
00:20:41,250 --> 00:20:48,480
encryption which in the used used by the

404
00:20:44,580 --> 00:20:49,379
samples of agencies only one bugs or not

405
00:20:48,480 --> 00:20:55,289
complicated at all

406
00:20:49,380 --> 00:20:58,139
and also they use some encryption

407
00:20:55,289 --> 00:21:02,240
algorithm like aes-256 and the Earth's

408
00:20:58,139 --> 00:21:06,090
before to 20 creep other files

409
00:21:02,240 --> 00:21:09,350
so here the checks of antivirus keys so

410
00:21:06,090 --> 00:21:13,039
as you can see each registry registry

411
00:21:09,350 --> 00:21:16,799
registry key is first decrypting and

412
00:21:13,039 --> 00:21:19,769
basically if one of these keys if is fun

413
00:21:16,799 --> 00:21:24,168
it just send the information to the

414
00:21:19,769 --> 00:21:24,169
watchin servers and does nothing with it

415
00:21:24,289 --> 00:21:29,519
so here is a sample of the architecture

416
00:21:27,149 --> 00:21:32,518
of this version so basically there is a

417
00:21:29,519 --> 00:21:35,190
main executable with which inject the

418
00:21:32,519 --> 00:21:36,960
the dll in web browsers the DLL is

419
00:21:35,190 --> 00:21:38,700
responsible to hook the functions

420
00:21:36,960 --> 00:21:41,340
manipulating create traffic as I said

421
00:21:38,700 --> 00:21:44,120
before like we are right we are real and

422
00:21:41,340 --> 00:21:46,860
or you can be send receive etcetera and

423
00:21:44,120 --> 00:21:50,879
as I said before there is a mini filter

424
00:21:46,860 --> 00:21:53,639
can a driver was proposed is to ID the

425
00:21:50,880 --> 00:21:57,870
main executable and the DLL to other

426
00:21:53,639 --> 00:21:59,519
processes so there are different DLL

427
00:21:57,870 --> 00:22:02,879
injection techniques I think that can be

428
00:21:59,519 --> 00:22:06,120
used depending on the parameters even to

429
00:22:02,880 --> 00:22:08,570
the main executable so we observe three

430
00:22:06,120 --> 00:22:11,330
main ones it can use the set windows Oak

431
00:22:08,570 --> 00:22:14,460
X technique the create frame of thread

432
00:22:11,330 --> 00:22:17,689
the usage of a third-party blackboard

433
00:22:14,460 --> 00:22:17,690
memory action library

434
00:22:17,990 --> 00:22:24,539
so under the dll is injected it chooses

435
00:22:21,570 --> 00:22:26,908
this file to set up the hooks or well

436
00:22:24,539 --> 00:22:29,309
you can use this file but not

437
00:22:26,909 --> 00:22:31,919
exclusively and it contains the

438
00:22:29,309 --> 00:22:34,230
addresses to of the functions for every

439
00:22:31,919 --> 00:22:36,419
brother every version of every brother

440
00:22:34,230 --> 00:22:40,350
listed here so as you can see there are

441
00:22:36,419 --> 00:22:43,830
hooks for more than 100 1000 different

442
00:22:40,350 --> 00:22:45,840
version of proms and you can maybe

443
00:22:43,830 --> 00:22:47,939
observe that there are no nukes for

444
00:22:45,840 --> 00:22:51,779
Firefox because the addresses are

445
00:22:47,940 --> 00:22:54,059
resolved that execution time so here is

446
00:22:51,779 --> 00:22:56,789
an example for Chrome with the addresses

447
00:22:54,059 --> 00:23:01,520
to hook you can recognize maybe appear

448
00:22:56,789 --> 00:23:04,559
right period pier right it's day 1 and

449
00:23:01,520 --> 00:23:07,918
here is an example of for pier right

450
00:23:04,559 --> 00:23:10,918
so from Ida so basically one of the

451
00:23:07,919 --> 00:23:13,529
function responsible for sending traffic

452
00:23:10,919 --> 00:23:15,539
and basically the function set will

453
00:23:13,529 --> 00:23:19,110
modify the pointer to the real pier

454
00:23:15,539 --> 00:23:22,049
right by the fake one and this is the

455
00:23:19,110 --> 00:23:25,379
fake pier right we'll which perform the

456
00:23:22,049 --> 00:23:27,899
injection if the domain name matches

457
00:23:25,380 --> 00:23:35,760
with one of the spotty lists then it

458
00:23:27,899 --> 00:23:38,760
calls the the real pier right so as I

459
00:23:35,760 --> 00:23:41,220
said before some versions include a mini

460
00:23:38,760 --> 00:23:44,970
filter driver to I the files of the

461
00:23:41,220 --> 00:23:47,760
software so magically what what is

462
00:23:44,970 --> 00:23:50,309
driver does its intercept IO input and

463
00:23:47,760 --> 00:23:52,710
output operations before they reach the

464
00:23:50,309 --> 00:23:56,250
file systems so it can even can be used

465
00:23:52,710 --> 00:23:58,950
to monitor accept reject the dos

466
00:23:56,250 --> 00:24:01,760
operations and the most known example it

467
00:23:58,950 --> 00:24:06,270
will be antivirus or more generally

468
00:24:01,760 --> 00:24:09,360
security product and so it I'd it I'd

469
00:24:06,270 --> 00:24:14,610
watch on files to all processes except

470
00:24:09,360 --> 00:24:17,158
to a restricted list so here is the

471
00:24:14,610 --> 00:24:20,490
architecture so you can see the the i/o

472
00:24:17,159 --> 00:24:23,730
manager responsible to to under the i/o

473
00:24:20,490 --> 00:24:27,450
operations so basically you can register

474
00:24:23,730 --> 00:24:28,970
a mini filter to the filter manager so

475
00:24:27,450 --> 00:24:31,700
like an antivirus

476
00:24:28,970 --> 00:24:35,000
- a German filter it can be activity

477
00:24:31,700 --> 00:24:37,039
monitor for example and so the the i/o

478
00:24:35,000 --> 00:24:42,049
operation are filtered before reaching

479
00:24:37,039 --> 00:24:44,210
the filesystem driver the mini filter

480
00:24:42,049 --> 00:24:48,710
driver comes with a configuration file

481
00:24:44,210 --> 00:24:53,350
so they use the name a PC W that as you

482
00:24:48,710 --> 00:24:56,840
can see in the configuration and

483
00:24:53,350 --> 00:24:59,840
basically the driver has a white list of

484
00:24:56,840 --> 00:25:02,870
processes and sort of the files of what

485
00:24:59,840 --> 00:25:05,629
ROM are hidden to any process except the

486
00:25:02,870 --> 00:25:08,719
ones in this list so this is more

487
00:25:05,630 --> 00:25:14,179
they're mostly web browsers as you can

488
00:25:08,720 --> 00:25:18,970
see so this was for the for this version

489
00:25:14,179 --> 00:25:23,210
of wagon and we we in 2016 we identified

490
00:25:18,970 --> 00:25:27,020
an another version that goes deeper into

491
00:25:23,210 --> 00:25:29,870
in the canal so very more persistent and

492
00:25:27,020 --> 00:25:32,510
its main characteristic is the usage of

493
00:25:29,870 --> 00:25:34,250
an ED filter driver to intersect web

494
00:25:32,510 --> 00:25:37,970
traffic so this version is still

495
00:25:34,250 --> 00:25:42,380
distributed and build it almost every

496
00:25:37,970 --> 00:25:45,049
day every day also a lot of techniques

497
00:25:42,380 --> 00:25:49,570
have been added for the self-protection

498
00:25:45,049 --> 00:25:52,789
purposes like the use we suggest we we

499
00:25:49,570 --> 00:25:56,090
we think that they use the commercial

500
00:25:52,789 --> 00:26:00,379
office cater tool to the bypass Windows

501
00:25:56,090 --> 00:26:02,720
Defender and and they add signatures and

502
00:26:00,380 --> 00:26:06,679
for the for the executables with

503
00:26:02,720 --> 00:26:09,650
different certificates so the net filter

504
00:26:06,679 --> 00:26:12,289
driver is based on the net filter SDK so

505
00:26:09,650 --> 00:26:14,270
this is the framework for filtering the

506
00:26:12,289 --> 00:26:16,730
data packets transmitted via via

507
00:26:14,270 --> 00:26:20,650
networks it can operate at different

508
00:26:16,730 --> 00:26:23,990
levels of the tcp/ip network stack

509
00:26:20,650 --> 00:26:26,539
depending of what you want to do with it

510
00:26:23,990 --> 00:26:29,690
so this is the the global architecture

511
00:26:26,539 --> 00:26:32,390
of this version so there is a net with a

512
00:26:29,690 --> 00:26:34,850
driver and the mini filter driver to

513
00:26:32,390 --> 00:26:38,870
either the the different files of a

514
00:26:34,850 --> 00:26:39,918
forum and it shows that what Ram is much

515
00:26:38,870 --> 00:26:41,139
more implemented

516
00:26:39,919 --> 00:26:45,610
much more

517
00:26:41,140 --> 00:26:47,770
persistent and then before so here is

518
00:26:45,610 --> 00:26:51,100
what the D string encryption looks like

519
00:26:47,770 --> 00:26:54,520
in the Indus version and actually maybe

520
00:26:51,100 --> 00:26:57,120
it looks easy like like that but it's

521
00:26:54,520 --> 00:27:00,190
actually kind of annoying to to analyze

522
00:26:57,120 --> 00:27:03,129
because each decode char version the

523
00:27:00,190 --> 00:27:07,000
decode function is different depending

524
00:27:03,130 --> 00:27:09,580
on the string that that is decrypted so

525
00:27:07,000 --> 00:27:13,750
here for example it decode a function

526
00:27:09,580 --> 00:27:16,899
name and and it gets its address with a

527
00:27:13,750 --> 00:27:20,350
lot library and get proc address which

528
00:27:16,900 --> 00:27:22,420
is typically used by by malware and this

529
00:27:20,350 --> 00:27:25,959
is the decode char technique so it just

530
00:27:22,420 --> 00:27:29,650
may perform an arithmetic operation to

531
00:27:25,960 --> 00:27:32,050
get to get a character for the for the

532
00:27:29,650 --> 00:27:34,960
function name so this is funny because

533
00:27:32,050 --> 00:27:40,330
it looks a lot like the dystonic surface

534
00:27:34,960 --> 00:27:47,770
cater and which is this do similar

535
00:27:40,330 --> 00:27:50,020
techniques but we can be sure 100% so

536
00:27:47,770 --> 00:27:52,750
there are also a configure configuration

537
00:27:50,020 --> 00:27:55,750
files for the date so what you can see

538
00:27:52,750 --> 00:27:58,450
on on this configuration file they named

539
00:27:55,750 --> 00:28:01,260
the the net filter driver dis dis booth

540
00:27:58,450 --> 00:28:03,790
now this is still the name used and

541
00:28:01,260 --> 00:28:06,129
there is also a field for a difference

542
00:28:03,790 --> 00:28:09,399
driver so this is basically the net

543
00:28:06,130 --> 00:28:10,930
filter driver and the different the

544
00:28:09,400 --> 00:28:13,510
different name are you as you can see

545
00:28:10,930 --> 00:28:15,850
social to sir the researched not

546
00:28:13,510 --> 00:28:19,050
completely used by that they used

547
00:28:15,850 --> 00:28:25,179
different names and a slightly different

548
00:28:19,050 --> 00:28:31,210
from the from the the the usual name of

549
00:28:25,180 --> 00:28:34,390
a fortune that's all for this version

550
00:28:31,210 --> 00:28:35,830
and as I said at the beginning of this

551
00:28:34,390 --> 00:28:38,890
presentation we began this research

552
00:28:35,830 --> 00:28:41,290
because of a Mac OS version of word jam

553
00:28:38,890 --> 00:28:44,320
fund by malwarebytes a few months ago

554
00:28:41,290 --> 00:28:47,530
and but actually this version was

555
00:28:44,320 --> 00:28:50,139
already distributed in 2017 and at that

556
00:28:47,530 --> 00:28:52,750
time it used a safari plugin so the web

557
00:28:50,140 --> 00:28:56,200
browser from a quest to winter separate

558
00:28:52,750 --> 00:28:58,210
to intercept traffic so they switch to a

559
00:28:56,200 --> 00:29:03,850
third-party Python proxy

560
00:28:58,210 --> 00:29:06,520
cold and my TM proxy in 2018 and from

561
00:29:03,850 --> 00:29:09,129
what we saw there there's no official

562
00:29:06,520 --> 00:29:12,570
distribution of this version and we only

563
00:29:09,130 --> 00:29:17,040
saw it in fake Mac OS application cracks

564
00:29:12,570 --> 00:29:19,600
distributed through Toyota whines file

565
00:29:17,040 --> 00:29:22,030
so here is the info.plist

566
00:29:19,600 --> 00:29:24,879
so basically this is the the manifest

567
00:29:22,030 --> 00:29:27,160
file for mac OS application bundles and

568
00:29:24,880 --> 00:29:29,530
the object of the application with the

569
00:29:27,160 --> 00:29:32,200
the Safari plugin and you can probably

570
00:29:29,530 --> 00:29:36,610
see the the virgin domain and largely

571
00:29:32,200 --> 00:29:39,850
technology and here is the the my chimp

572
00:29:36,610 --> 00:29:43,899
version with the the webcam domain as

573
00:29:39,850 --> 00:29:48,610
well and sorry the judge does the same

574
00:29:43,900 --> 00:29:51,010
thing as you as your other versions so

575
00:29:48,610 --> 00:29:54,040
now we have seen the techniques you use

576
00:29:51,010 --> 00:29:56,440
by what gem what what can we learn from

577
00:29:54,040 --> 00:30:01,030
this and what can what are the take your

578
00:29:56,440 --> 00:30:03,580
takeaways of this research so first why

579
00:30:01,030 --> 00:30:08,379
Jam is still very active even if the

580
00:30:03,580 --> 00:30:11,290
company was sold in early 2017 and the

581
00:30:08,380 --> 00:30:14,980
the sample has distributed the through

582
00:30:11,290 --> 00:30:17,350
paper install so massively spread the

583
00:30:14,980 --> 00:30:20,640
GOP see the office and privacy

584
00:30:17,350 --> 00:30:23,500
Commission of Canada estimate there are

585
00:30:20,640 --> 00:30:28,870
hundreds of millions installations over

586
00:30:23,500 --> 00:30:31,150
the between 2000 2011 and 2016 they use

587
00:30:28,870 --> 00:30:34,540
different names so troe soem social

588
00:30:31,150 --> 00:30:36,580
search search page etc and the self

589
00:30:34,540 --> 00:30:39,670
protection anti detection techniques

590
00:30:36,580 --> 00:30:43,960
most of sticky more sophisticated than

591
00:30:39,670 --> 00:30:47,530
liver also that there is a post effect

592
00:30:43,960 --> 00:30:49,570
of the GOP scene investigation if you go

593
00:30:47,530 --> 00:30:52,120
under the wagon website with the

594
00:30:49,570 --> 00:30:59,110
Canadian IP address or a non Canadian IP

595
00:30:52,120 --> 00:31:01,870
address and basically the devolution of

596
00:30:59,110 --> 00:31:04,610
the techniques use show that what John

597
00:31:01,870 --> 00:31:08,750
was more and more persistent over the

598
00:31:04,610 --> 00:31:12,469
years and they mainly used third-party

599
00:31:08,750 --> 00:31:16,250
tools like filler blackboard milk and my

600
00:31:12,470 --> 00:31:18,350
chimp Roxy or even that filter this is

601
00:31:16,250 --> 00:31:21,290
actually probably because of the

602
00:31:18,350 --> 00:31:23,270
security mechanisms added over the years

603
00:31:21,290 --> 00:31:26,090
to prevent the usage of these techniques

604
00:31:23,270 --> 00:31:32,870
that are typically used by malware's

605
00:31:26,090 --> 00:31:35,209
actually also we can observe a change of

606
00:31:32,870 --> 00:31:39,949
strategy regarding the the detection in

607
00:31:35,210 --> 00:31:44,090
2014 and before the the add antivirus

608
00:31:39,950 --> 00:31:46,040
for detection removal and from 2014 we

609
00:31:44,090 --> 00:31:49,129
can see they they use more aggressive

610
00:31:46,040 --> 00:31:51,620
techniques and like obfuscation like

611
00:31:49,130 --> 00:31:52,220
checks antivirus installed on the

612
00:31:51,620 --> 00:31:54,530
machine

613
00:31:52,220 --> 00:32:01,549
they used random names and created

614
00:31:54,530 --> 00:32:04,790
installers and etc regarding the

615
00:32:01,549 --> 00:32:08,290
prevention it is quite simple because

616
00:32:04,790 --> 00:32:11,240
even if our Jam used multiple

617
00:32:08,290 --> 00:32:17,210
distribution channels due to the paper

618
00:32:11,240 --> 00:32:21,799
install distribution model it's still

619
00:32:17,210 --> 00:32:25,490
very visible and you still can use the

620
00:32:21,799 --> 00:32:29,750
Installer to to do this install training

621
00:32:25,490 --> 00:32:31,780
star bottom quite reliable however we we

622
00:32:29,750 --> 00:32:35,660
have seen some silent hands terrors

623
00:32:31,780 --> 00:32:38,480
which does not ask for the we do not ask

624
00:32:35,660 --> 00:32:43,730
for the the User Agreement - for the

625
00:32:38,480 --> 00:32:47,570
installation so a few plans for the

626
00:32:43,730 --> 00:32:50,090
conclusion so the wait time story a

627
00:32:47,570 --> 00:32:52,428
famous Montreal startup they

628
00:32:50,090 --> 00:32:54,470
progressively progressively deceived the

629
00:32:52,429 --> 00:32:56,990
users because the massive usage of

630
00:32:54,470 --> 00:32:59,360
contextual advertising this is the

631
00:32:56,990 --> 00:33:03,320
company sold in some crews circumstances

632
00:32:59,360 --> 00:33:05,600
but still this is the context and that

633
00:33:03,320 --> 00:33:07,629
the software is still more active than

634
00:33:05,600 --> 00:33:07,629
ever

635
00:33:08,000 --> 00:33:14,840
this research showed that adware and PUA

636
00:33:11,750 --> 00:33:17,210
are still a gray area they used

637
00:33:14,840 --> 00:33:19,939
typically malicious techniques as you as

638
00:33:17,210 --> 00:33:21,980
you have seen there are more protected

639
00:33:19,940 --> 00:33:26,600
than most of the malware this is a

640
00:33:21,980 --> 00:33:28,910
reality and but at some point they're

641
00:33:26,600 --> 00:33:33,350
more annoying before they only display

642
00:33:28,910 --> 00:33:36,190
ad than unfold to the user that even if

643
00:33:33,350 --> 00:33:38,990
the if they collect a lot of information

644
00:33:36,190 --> 00:33:44,330
they can help to identify you a

645
00:33:38,990 --> 00:33:46,670
particular user and also to get more

646
00:33:44,330 --> 00:33:49,460
context some other where are remarkably

647
00:33:46,670 --> 00:33:53,960
close to malware the example of standing

648
00:33:49,460 --> 00:33:57,080
Co is one of them so you should be aware

649
00:33:53,960 --> 00:33:59,030
of the persistence level used by some ad

650
00:33:57,080 --> 00:34:02,178
where's okay you have seen that they use

651
00:33:59,030 --> 00:34:06,050
some techniques in the directly in the

652
00:34:02,179 --> 00:34:08,270
kernel so actually the this kind of

653
00:34:06,050 --> 00:34:10,100
techniques could be attacked by another

654
00:34:08,270 --> 00:34:13,370
man we're looking for persistence the

655
00:34:10,100 --> 00:34:16,580
methods and the system so at some point

656
00:34:13,370 --> 00:34:21,080
is it really something that you want on

657
00:34:16,580 --> 00:34:22,590
your machine so let's all thank you for

658
00:34:21,080 --> 00:34:25,768
your attention

659
00:34:22,590 --> 00:34:25,769
[Applause]

