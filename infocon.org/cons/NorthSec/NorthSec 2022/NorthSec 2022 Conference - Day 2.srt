1
00:00:00,000 --> 00:00:20,239
[Music]

2
00:00:23,670 --> 00:00:32,410
[Music]

3
00:00:35,170 --> 00:00:37,520
[Music]

4
00:00:37,520 --> 00:00:40,520
do

5
00:00:41,200 --> 00:00:45,059
[Music]

6
00:00:52,670 --> 00:01:11,189
[Music]

7
00:01:16,380 --> 00:01:24,009
[Music]

8
00:01:31,330 --> 00:02:23,329
[Music]

9
00:02:27,340 --> 00:03:21,360
[Music]

10
00:03:26,550 --> 00:03:35,749
[Music]

11
00:03:41,500 --> 00:03:44,639
[Music]

12
00:04:32,290 --> 00:05:21,319
[Music]

13
00:05:23,910 --> 00:05:28,470
[Music]

14
00:05:31,850 --> 00:06:16,430
[Music]

15
00:06:24,530 --> 00:06:35,198
[Music]

16
00:06:39,500 --> 00:07:30,920
[Music]

17
00:07:35,520 --> 00:07:38,640
[Music]

18
00:07:42,090 --> 00:07:50,719
[Music]

19
00:07:53,570 --> 00:07:56,719
[Music]

20
00:07:59,610 --> 00:08:07,100
[Music]

21
00:08:11,090 --> 00:08:29,609
[Music]

22
00:08:34,789 --> 00:08:45,859
[Music]

23
00:08:49,740 --> 00:08:59,360
[Music]

24
00:08:59,360 --> 00:09:01,160
do

25
00:09:01,160 --> 00:09:41,749
[Music]

26
00:09:44,320 --> 00:10:39,779
[Music]

27
00:10:44,960 --> 00:10:49,789
[Music]

28
00:10:59,910 --> 00:11:51,890
[Music]

29
00:11:54,490 --> 00:12:47,009
[Music]

30
00:12:50,750 --> 00:13:05,779
[Music]

31
00:13:10,070 --> 00:13:19,899
[Music]

32
00:13:22,430 --> 00:14:01,490
[Music]

33
00:14:04,660 --> 00:14:09,219
[Music]

34
00:14:12,660 --> 00:14:21,399
[Music]

35
00:14:24,150 --> 00:14:49,350
[Music]

36
00:14:50,639 --> 00:14:53,639
do

37
00:14:54,520 --> 00:15:00,189
[Music]

38
00:15:05,370 --> 00:15:13,010
[Music]

39
00:15:20,320 --> 00:15:32,320
[Music]

40
00:15:32,320 --> 00:15:34,030
do

41
00:15:34,030 --> 00:15:54,000
[Music]

42
00:15:54,000 --> 00:15:56,480
i see there's a little less people today

43
00:15:56,480 --> 00:15:58,240
than yesterday maybe the bar open was

44
00:15:58,240 --> 00:15:59,519
not so good

45
00:15:59,519 --> 00:16:00,880
in the end

46
00:16:00,880 --> 00:16:02,480
there are still some places in the front

47
00:16:02,480 --> 00:16:03,920
that's where you'll see

48
00:16:03,920 --> 00:16:06,160
the best so we advise people to come

49
00:16:06,160 --> 00:16:07,519
closer to me

50
00:16:07,519 --> 00:16:09,040
um

51
00:16:09,040 --> 00:16:10,320
just a quick

52
00:16:10,320 --> 00:16:12,959
reminder that kovid is still something

53
00:16:12,959 --> 00:16:14,959
that exists

54
00:16:14,959 --> 00:16:18,079
we had two incidents today so

55
00:16:18,079 --> 00:16:19,600
one of the speakers going to be remote

56
00:16:19,600 --> 00:16:21,360
because she caught kovid

57
00:16:21,360 --> 00:16:22,560
last week

58
00:16:22,560 --> 00:16:25,120
and another one got a visa delay because

59
00:16:25,120 --> 00:16:25,920
of

60
00:16:25,920 --> 00:16:28,160
what that that is covet related so two

61
00:16:28,160 --> 00:16:30,639
of the talks will be streamed that's

62
00:16:30,639 --> 00:16:32,720
unfortunate but still i guess the

63
00:16:32,720 --> 00:16:34,639
content is the same and you can still

64
00:16:34,639 --> 00:16:36,240
feel the energy through those giant

65
00:16:36,240 --> 00:16:38,240
screens

66
00:16:38,240 --> 00:16:42,480
um can i have the slides please

67
00:16:43,279 --> 00:16:44,880
i'm just going to do a little quick

68
00:16:44,880 --> 00:16:48,000
announcements and reminders

69
00:16:48,000 --> 00:16:48,800
so

70
00:16:48,800 --> 00:16:50,399
the schedule is available online that's

71
00:16:50,399 --> 00:16:51,920
where you'll find all the information

72
00:16:51,920 --> 00:16:54,079
and it's being updated today we have an

73
00:16:54,079 --> 00:16:55,600
appsec block that that's what we're

74
00:16:55,600 --> 00:16:57,360
starting with we have a cryptography

75
00:16:57,360 --> 00:16:59,759
block after that and then we'll uh end

76
00:16:59,759 --> 00:17:01,600
with a red team block

77
00:17:01,600 --> 00:17:04,640
one of the uh the speed the talk is

78
00:17:04,640 --> 00:17:07,359
cancelled the red team tradecraft

79
00:17:07,359 --> 00:17:09,280
because of kovid also

80
00:17:09,280 --> 00:17:11,039
and just realized that my spacing is a

81
00:17:11,039 --> 00:17:12,880
little bit sketchy and that's

82
00:17:12,880 --> 00:17:14,480
really shameful of me

83
00:17:14,480 --> 00:17:16,839
and we also have the community room so

84
00:17:16,839 --> 00:17:19,760
uh i don't know if everyone uh went

85
00:17:19,760 --> 00:17:21,119
there and explored there's a lot of

86
00:17:21,119 --> 00:17:23,359
things there it's downstairs in south de

87
00:17:23,359 --> 00:17:25,919
la comun de la cabin hall you have to go

88
00:17:25,919 --> 00:17:27,439
down the stairs and there's a lot of

89
00:17:27,439 --> 00:17:29,760
activities it's a bit chaotic noisy it's

90
00:17:29,760 --> 00:17:31,280
awesome

91
00:17:31,280 --> 00:17:34,640
in there we have an amateur radio club

92
00:17:34,640 --> 00:17:36,000
go and talk to them that's super

93
00:17:36,000 --> 00:17:37,760
interesting it's an old technology but

94
00:17:37,760 --> 00:17:39,919
that's still super relevant today we

95
00:17:39,919 --> 00:17:41,679
also have a flipper zero meetup if you

96
00:17:41,679 --> 00:17:43,760
don't know what flipper zero is i advise

97
00:17:43,760 --> 00:17:45,440
that you google that thing and order it

98
00:17:45,440 --> 00:17:48,080
it's really awesome it's like a portable

99
00:17:48,080 --> 00:17:49,520
universal hacking tool it's really

100
00:17:49,520 --> 00:17:50,480
awesome

101
00:17:50,480 --> 00:17:52,559
we also have soldering on the nordsec

102
00:17:52,559 --> 00:17:55,120
badge so you can put like there are

103
00:17:55,120 --> 00:17:56,880
lights on that if you didn't know and

104
00:17:56,880 --> 00:17:58,559
you can light them up if you go

105
00:17:58,559 --> 00:17:59,840
downstairs

106
00:17:59,840 --> 00:18:02,320
we will also have a nordsec legacy swag

107
00:18:02,320 --> 00:18:04,880
giveaway table uh so we'll have a table

108
00:18:04,880 --> 00:18:07,039
packed with old well they're not all

109
00:18:07,039 --> 00:18:08,559
they're still new because nobody wore

110
00:18:08,559 --> 00:18:10,960
them but they're legacy

111
00:18:10,960 --> 00:18:14,000
swag that we kept and you can now take

112
00:18:14,000 --> 00:18:15,039
all of it

113
00:18:15,039 --> 00:18:16,799
it's going to be during the day

114
00:18:16,799 --> 00:18:19,120
downstairs and we also have two

115
00:18:19,120 --> 00:18:22,320
workshops one is reverse and bypass

116
00:18:22,320 --> 00:18:24,480
of modern android runtime protections

117
00:18:24,480 --> 00:18:27,200
that's going to be in the

118
00:18:27,200 --> 00:18:29,200
i think it's in the the i don't remember

119
00:18:29,200 --> 00:18:30,559
exactly so you can see on the schedule

120
00:18:30,559 --> 00:18:32,480
that's why the link is there and then we

121
00:18:32,480 --> 00:18:34,559
have advanced processing in process

122
00:18:34,559 --> 00:18:37,039
injection technique which is virtual and

123
00:18:37,039 --> 00:18:40,000
the zoom link will be posted on discord

124
00:18:40,000 --> 00:18:42,160
we will also do something a bit special

125
00:18:42,160 --> 00:18:44,400
there's a book raffle so downstairs in

126
00:18:44,400 --> 00:18:45,760
the community room there's a reading

127
00:18:45,760 --> 00:18:48,559
corner with more than 100 hacking and

128
00:18:48,559 --> 00:18:49,840
tech books

129
00:18:49,840 --> 00:18:52,799
we're going to give them all away and in

130
00:18:52,799 --> 00:18:54,559
order to do that we'll pass tickets to

131
00:18:54,559 --> 00:18:56,960
people that are interested and at after

132
00:18:56,960 --> 00:18:59,840
the last conference so it's around 6 5

133
00:18:59,840 --> 00:19:00,960
36

134
00:19:00,960 --> 00:19:04,080
people can go downstairs and will give

135
00:19:04,080 --> 00:19:06,320
all of those books away so you can

136
00:19:06,320 --> 00:19:08,160
become more intelligent after reading

137
00:19:08,160 --> 00:19:09,600
those books

138
00:19:09,600 --> 00:19:11,360
i guess you're already pretty

139
00:19:11,360 --> 00:19:13,520
intelligent but more knowledgeable

140
00:19:13,520 --> 00:19:15,520
and just a quick reminder for those that

141
00:19:15,520 --> 00:19:16,640
are interested

142
00:19:16,640 --> 00:19:19,679
tomorrow there is a black lack black

143
00:19:19,679 --> 00:19:22,240
light party at the ctf everyone with a

144
00:19:22,240 --> 00:19:24,000
conference ticket is welcome to join

145
00:19:24,000 --> 00:19:26,240
it's going to be around 10 there's going

146
00:19:26,240 --> 00:19:28,640
to be a hacker joe party which is really

147
00:19:28,640 --> 00:19:30,960
awesome if you never saw that uh it's

148
00:19:30,960 --> 00:19:32,480
going to be in this room it's going to

149
00:19:32,480 --> 00:19:34,160
be followed by a black lag party where

150
00:19:34,160 --> 00:19:36,160
have glow-in-the-d glow-in-the-dark

151
00:19:36,160 --> 00:19:37,200
drinks

152
00:19:37,200 --> 00:19:40,080
it's going to be really great

153
00:19:40,080 --> 00:19:41,760
though the rooms we are right now in

154
00:19:41,760 --> 00:19:44,559
salvil marie there's style there's a

155
00:19:44,559 --> 00:19:46,559
ballroom where the workshops are and the

156
00:19:46,559 --> 00:19:48,480
ctf is it's on the other side of the

157
00:19:48,480 --> 00:19:50,880
little bridge and then the la camin hall

158
00:19:50,880 --> 00:19:52,559
is downstairs that's where the community

159
00:19:52,559 --> 00:19:54,640
room is

160
00:19:54,640 --> 00:19:56,240
just a quick reminder of the code of

161
00:19:56,240 --> 00:19:58,080
conduct that's really important

162
00:19:58,080 --> 00:20:00,480
be friendly and welcoming of course be

163
00:20:00,480 --> 00:20:02,799
patient and constructive sometimes

164
00:20:02,799 --> 00:20:04,880
things are noisy people might be

165
00:20:04,880 --> 00:20:08,480
intoxicated don't be intoxicated

166
00:20:08,480 --> 00:20:10,000
be respect be respectful and

167
00:20:10,000 --> 00:20:12,320
collaborative that's the the purpose of

168
00:20:12,320 --> 00:20:14,559
north sec is for people to being able to

169
00:20:14,559 --> 00:20:17,039
collaborate and share information

170
00:20:17,039 --> 00:20:19,120
be responsible if there's any emergency

171
00:20:19,120 --> 00:20:21,200
please contact us

172
00:20:21,200 --> 00:20:24,720
we have a report at insect.io email and

173
00:20:24,720 --> 00:20:27,520
you can use discord insect staff and

174
00:20:27,520 --> 00:20:30,080
insect moderators are us and otherwise

175
00:20:30,080 --> 00:20:32,960
anyone with a pale blue t-shirt or me i

176
00:20:32,960 --> 00:20:34,320
don't have a pale blue t-shirt but you

177
00:20:34,320 --> 00:20:36,000
can still come to me if there's anything

178
00:20:36,000 --> 00:20:36,880
and we'll

179
00:20:36,880 --> 00:20:39,919
do what's needed to help you

180
00:20:39,919 --> 00:20:42,799
a big thanks again to all our sponsors

181
00:20:42,799 --> 00:20:44,240
you're going to see them

182
00:20:44,240 --> 00:20:45,919
throughout the event they all provide

183
00:20:45,919 --> 00:20:47,200
something to the event as i said

184
00:20:47,200 --> 00:20:49,039
yesterday we don't take free money we

185
00:20:49,039 --> 00:20:51,840
only take involvement in the event so

186
00:20:51,840 --> 00:20:53,760
without further ado i will pass the mic

187
00:20:53,760 --> 00:20:56,400
to guillaume from kpmg has a little

188
00:20:56,400 --> 00:20:59,820
something to say thank you

189
00:20:59,820 --> 00:21:03,010
[Applause]

190
00:21:04,400 --> 00:21:06,799
hello

191
00:21:06,799 --> 00:21:09,200
hi everyone um

192
00:21:09,200 --> 00:21:10,799
thank you to be here

193
00:21:10,799 --> 00:21:15,440
uh thank you for uh the nordsex folks

194
00:21:15,440 --> 00:21:17,200
you organize again this year a very

195
00:21:17,200 --> 00:21:19,440
great event uh we miss you guys you know

196
00:21:19,440 --> 00:21:20,799
since two years it was a little bit

197
00:21:20,799 --> 00:21:21,760
boring

198
00:21:21,760 --> 00:21:23,520
um and i

199
00:21:23,520 --> 00:21:26,159
i couldn't go uh you know i saw the the

200
00:21:26,159 --> 00:21:28,240
setup here and the the the

201
00:21:28,240 --> 00:21:30,480
investment of time and effort to

202
00:21:30,480 --> 00:21:32,559
to make it pretty very nice

203
00:21:32,559 --> 00:21:35,679
kpmg is a pro proud sponsor

204
00:21:35,679 --> 00:21:38,080
of this event it's been many years now

205
00:21:38,080 --> 00:21:40,480
that we come to this event

206
00:21:40,480 --> 00:21:43,120
we recruit a lot of good talents

207
00:21:43,120 --> 00:21:44,640
throughout the years

208
00:21:44,640 --> 00:21:46,720
um and we are

209
00:21:46,720 --> 00:21:48,960
still going to encourage this event

210
00:21:48,960 --> 00:21:51,280
for the following years

211
00:21:51,280 --> 00:21:53,440
my name is guillaume clement i manage a

212
00:21:53,440 --> 00:21:55,919
wonderful team at kpmg

213
00:21:55,919 --> 00:21:58,400
division specialized in i would say

214
00:21:58,400 --> 00:22:01,360
technical cyber security about 140

215
00:22:01,360 --> 00:22:02,480
colleagues

216
00:22:02,480 --> 00:22:04,880
one of the greatest team in canada

217
00:22:04,880 --> 00:22:06,880
and

218
00:22:06,880 --> 00:22:08,960
i was wanted to say a few words today

219
00:22:08,960 --> 00:22:10,960
around how cybersecurity changed in the

220
00:22:10,960 --> 00:22:12,640
last 20 years

221
00:22:12,640 --> 00:22:14,080
they want to go back

222
00:22:14,080 --> 00:22:16,080
far away but

223
00:22:16,080 --> 00:22:18,159
for the ones who knows

224
00:22:18,159 --> 00:22:19,600
not a long time ago

225
00:22:19,600 --> 00:22:21,440
we were doing cyber security and selling

226
00:22:21,440 --> 00:22:23,440
cyber security based on

227
00:22:23,440 --> 00:22:24,320
you know

228
00:22:24,320 --> 00:22:26,960
a potential scenarios yes there was

229
00:22:26,960 --> 00:22:28,960
events here and there uh we had the

230
00:22:28,960 --> 00:22:31,919
virus and warm events in 2000s and you

231
00:22:31,919 --> 00:22:34,240
know there was a

232
00:22:34,240 --> 00:22:37,600
credit card data breaches in 2013 14.

233
00:22:37,600 --> 00:22:39,520
uh they were you know it was cyber

234
00:22:39,520 --> 00:22:42,000
attacks here and there but not like

235
00:22:42,000 --> 00:22:44,320
we had recently in the past three four

236
00:22:44,320 --> 00:22:45,840
years

237
00:22:45,840 --> 00:22:48,000
then you know cybersecurity was hard to

238
00:22:48,000 --> 00:22:49,200
sell

239
00:22:49,200 --> 00:22:50,960
uh we were

240
00:22:50,960 --> 00:22:53,120
basing our recommendations and work on

241
00:22:53,120 --> 00:22:55,200
you know risk scenarios

242
00:22:55,200 --> 00:22:58,640
um and you know we were an expense and

243
00:22:58,640 --> 00:23:00,320
we were kind of the first

244
00:23:00,320 --> 00:23:03,039
cut in the in the budgets you know i i

245
00:23:03,039 --> 00:23:04,960
in the cell cycle you know when i was

246
00:23:04,960 --> 00:23:07,760
selling this a few years ago when the

247
00:23:07,760 --> 00:23:10,960
2000s was was the worst but even

248
00:23:10,960 --> 00:23:14,000
almost like uh five six seven years ago

249
00:23:14,000 --> 00:23:15,840
the sales cycles in canada was about

250
00:23:15,840 --> 00:23:17,679
sometimes a year

251
00:23:17,679 --> 00:23:19,840
okay now it's kind of sometimes a week

252
00:23:19,840 --> 00:23:21,760
and it's totally different and why is

253
00:23:21,760 --> 00:23:23,679
that it's because

254
00:23:23,679 --> 00:23:25,919
you know the the recent

255
00:23:25,919 --> 00:23:29,120
attack surge that we had um the past

256
00:23:29,120 --> 00:23:30,559
three four years

257
00:23:30,559 --> 00:23:31,600
um

258
00:23:31,600 --> 00:23:34,000
gave us some facts and real examples

259
00:23:34,000 --> 00:23:36,480
real life examples of what of what the

260
00:23:36,480 --> 00:23:38,799
impacts are okay if you don't invest in

261
00:23:38,799 --> 00:23:40,159
cyber security

262
00:23:40,159 --> 00:23:42,480
and now we we we were in expense not so

263
00:23:42,480 --> 00:23:44,720
long ago and now we are kind of we bring

264
00:23:44,720 --> 00:23:46,000
value

265
00:23:46,000 --> 00:23:48,159
and we're kind of becoming an asset

266
00:23:48,159 --> 00:23:51,120
for uh organization and our role is is

267
00:23:51,120 --> 00:23:53,360
very important and that's what i try to

268
00:23:53,360 --> 00:23:55,679
say to my my colleagues

269
00:23:55,679 --> 00:23:57,919
and and everyone you know we're not just

270
00:23:57,919 --> 00:23:59,679
there to do a work we're there to

271
00:23:59,679 --> 00:24:02,000
sometimes uh save

272
00:24:02,000 --> 00:24:03,440
organizations

273
00:24:03,440 --> 00:24:04,559
and uh

274
00:24:04,559 --> 00:24:07,120
we can be proud of this you know it's a

275
00:24:07,120 --> 00:24:09,279
it's a it's an important job

276
00:24:09,279 --> 00:24:11,520
an important

277
00:24:11,520 --> 00:24:13,279
domain and

278
00:24:13,279 --> 00:24:16,159
either you are a student a researcher

279
00:24:16,159 --> 00:24:18,960
professionals uh vendor a firm

280
00:24:18,960 --> 00:24:21,360
um you know we are kind of becoming more

281
00:24:21,360 --> 00:24:23,679
and more important in that uh

282
00:24:23,679 --> 00:24:26,799
economy and and any industries

283
00:24:26,799 --> 00:24:29,760
then um i you know and i think that the

284
00:24:29,760 --> 00:24:32,480
future is great for us

285
00:24:32,480 --> 00:24:34,559
i think the advantage we have i think

286
00:24:34,559 --> 00:24:36,080
the business will be good and we're

287
00:24:36,080 --> 00:24:37,760
going to have jobs when the economy is

288
00:24:37,760 --> 00:24:39,200
good

289
00:24:39,200 --> 00:24:41,360
but even if there's some

290
00:24:41,360 --> 00:24:43,600
economic crashes or anything like that

291
00:24:43,600 --> 00:24:44,720
no

292
00:24:44,720 --> 00:24:47,600
criminality uh go up and we're still

293
00:24:47,600 --> 00:24:48,960
gonna be important

294
00:24:48,960 --> 00:24:49,760
then

295
00:24:49,760 --> 00:24:51,840
you know i think future is good

296
00:24:51,840 --> 00:24:53,679
and um

297
00:24:53,679 --> 00:24:55,440
i mean your role is more and more

298
00:24:55,440 --> 00:24:57,039
important and uh

299
00:24:57,039 --> 00:24:58,720
let's keep going

300
00:24:58,720 --> 00:25:00,960
that's

301
00:25:06,320 --> 00:25:08,320
i'm going to make my i'm going to make

302
00:25:08,320 --> 00:25:10,720
my my team because they told me just

303
00:25:10,720 --> 00:25:12,960
before that i can extend my speech

304
00:25:12,960 --> 00:25:15,039
because they had some technical issues

305
00:25:15,039 --> 00:25:17,120
but at the end i think it's fixed then

306
00:25:17,120 --> 00:25:18,880
because they always say that i take a

307
00:25:18,880 --> 00:25:22,480
lot longer than i'm supposed to then

308
00:25:22,610 --> 00:25:25,440
[Applause]

309
00:25:25,440 --> 00:25:27,600
thank you guillaume

310
00:25:27,600 --> 00:25:30,880
yeah don't worry it wasn't too long

311
00:25:30,880 --> 00:25:32,799
all right so we're gonna

312
00:25:32,799 --> 00:25:34,559
kick start things right now with the

313
00:25:34,559 --> 00:25:35,919
absec block

314
00:25:35,919 --> 00:25:38,080
um so i'm gonna present you our your

315
00:25:38,080 --> 00:25:40,000
moderator for this block

316
00:25:40,000 --> 00:25:41,279
um

317
00:25:41,279 --> 00:25:43,120
she's joelle alexander de mare she's

318
00:25:43,120 --> 00:25:44,720
been involved in the north tech

319
00:25:44,720 --> 00:25:46,720
community for a few years now

320
00:25:46,720 --> 00:25:49,120
she now works as a security director

321
00:25:49,120 --> 00:25:50,880
implementing security practices from the

322
00:25:50,880 --> 00:25:52,960
ground up in a fintech

323
00:25:52,960 --> 00:25:54,080
uh

324
00:25:54,080 --> 00:25:56,320
startup disrupting the market mortgage

325
00:25:56,320 --> 00:25:58,240
market uh so

326
00:25:58,240 --> 00:26:01,039
please uh welcome her with all your

327
00:26:01,039 --> 00:26:03,039
applause uh with me

328
00:26:03,039 --> 00:26:07,559
and i'll give it to you like somebody

329
00:26:13,039 --> 00:26:14,720
hi everyone

330
00:26:14,720 --> 00:26:16,799
as you go say mercy

331
00:26:16,799 --> 00:26:18,159
my name is joelle

332
00:26:18,159 --> 00:26:21,039
alexander you can call me

333
00:26:21,039 --> 00:26:23,360
today i'll be your monday raider

334
00:26:23,360 --> 00:26:26,000
some of the talk like serge mentioned

335
00:26:26,000 --> 00:26:29,440
are online some of them are live which i

336
00:26:29,440 --> 00:26:31,279
think is going to be pretty fun and

337
00:26:31,279 --> 00:26:34,000
we'll have a small

338
00:26:34,000 --> 00:26:36,559
q a at the end well it's going to be

339
00:26:36,559 --> 00:26:39,360
hybrid as well so our first presenter

340
00:26:39,360 --> 00:26:41,600
that we're very happy

341
00:26:41,600 --> 00:26:44,720
to present here today is vicki lee

342
00:26:44,720 --> 00:26:46,400
if you don't know her she's an

343
00:26:46,400 --> 00:26:48,880
experienced web developer with an avid

344
00:26:48,880 --> 00:26:51,600
interest in security research

345
00:26:51,600 --> 00:26:54,080
she's author of a book which i think

346
00:26:54,080 --> 00:26:56,720
that's the topic of the talk today

347
00:26:56,720 --> 00:26:59,600
you can also find her on multi different

348
00:26:59,600 --> 00:27:01,760
platforms she's on youtube she has a

349
00:27:01,760 --> 00:27:05,840
pretty successful channel where she

350
00:27:05,840 --> 00:27:07,840
security that's why it's called security

351
00:27:07,840 --> 00:27:11,120
simplified and she also have

352
00:27:11,120 --> 00:27:14,240
a blog it's called viki

353
00:27:14,240 --> 00:27:16,960
dev where she talks about security new

354
00:27:16,960 --> 00:27:19,600
technique new techniques and latest bug

355
00:27:19,600 --> 00:27:23,440
bounty findings so please welcome me

356
00:27:23,440 --> 00:27:28,550
with applause for vikili merci

357
00:27:28,550 --> 00:27:32,000
[Applause]

358
00:27:45,679 --> 00:27:49,840
hi is there sound now

359
00:27:50,399 --> 00:27:53,200
okay awesome thank you so much

360
00:27:53,200 --> 00:27:55,120
uh for the intro

361
00:27:55,120 --> 00:27:56,559
and um

362
00:27:56,559 --> 00:27:59,679
hi everyone welcome to this uh the first

363
00:27:59,679 --> 00:28:01,840
talk of the second day of

364
00:28:01,840 --> 00:28:04,080
i'm super bummed that i'm not able to

365
00:28:04,080 --> 00:28:05,520
join you guys

366
00:28:05,520 --> 00:28:07,440
at the event today and meet y'all i'm

367
00:28:07,440 --> 00:28:08,720
actually currently under covet

368
00:28:08,720 --> 00:28:11,360
quarantine at the moment but still uh

369
00:28:11,360 --> 00:28:12,880
thank you guys so much for the

370
00:28:12,880 --> 00:28:14,880
opportunity to present this talk

371
00:28:14,880 --> 00:28:16,559
remotely

372
00:28:16,559 --> 00:28:18,559
let me start sharing my screen one

373
00:28:18,559 --> 00:28:21,200
moment please

374
00:28:26,880 --> 00:28:31,080
can you all see my screen right now

375
00:28:39,360 --> 00:28:43,080
okay awesome

376
00:28:47,600 --> 00:28:50,640
so hi everyone and welcome to

377
00:28:50,640 --> 00:28:52,000
i thought writing a textbook was

378
00:28:52,000 --> 00:28:53,679
supposed to be fun

379
00:28:53,679 --> 00:28:57,279
uh my name is vicky lee and i am the

380
00:28:57,279 --> 00:29:00,080
author of bug bounty boot camp which is

381
00:29:00,080 --> 00:29:03,120
a book that helps beginners learn web

382
00:29:03,120 --> 00:29:06,080
security and get into bug bounty hunting

383
00:29:06,080 --> 00:29:09,520
and also i write a security blog

384
00:29:09,520 --> 00:29:12,480
online and i also work as

385
00:29:12,480 --> 00:29:15,840
a technical writer for multiple cyber

386
00:29:15,840 --> 00:29:17,760
security firms doing things like

387
00:29:17,760 --> 00:29:20,320
documentation tutorials and corporate

388
00:29:20,320 --> 00:29:23,279
blogs for a really long time

389
00:29:23,279 --> 00:29:26,880
and the topic for today's talk is

390
00:29:26,880 --> 00:29:29,279
how do you write better technical

391
00:29:29,279 --> 00:29:31,840
content more efficiently

392
00:29:31,840 --> 00:29:33,919
right i think as security professionals

393
00:29:33,919 --> 00:29:35,919
we've probably all had the experience

394
00:29:35,919 --> 00:29:37,919
where we need to write some sort of

395
00:29:37,919 --> 00:29:39,440
technical document

396
00:29:39,440 --> 00:29:41,440
right sometimes it's it comes in the

397
00:29:41,440 --> 00:29:45,200
form of reports from pentax repo pen

398
00:29:45,200 --> 00:29:47,919
testing engagements or sometimes it's

399
00:29:47,919 --> 00:29:50,000
some sort of documentation that you need

400
00:29:50,000 --> 00:29:52,799
to write for to document the tools that

401
00:29:52,799 --> 00:29:54,640
you've developed right

402
00:29:54,640 --> 00:29:56,720
so in this session i'd like to first

403
00:29:56,720 --> 00:29:58,799
talk a little bit about the strategy

404
00:29:58,799 --> 00:30:00,960
that helps me write better technical

405
00:30:00,960 --> 00:30:03,919
articles more efficiently

406
00:30:03,919 --> 00:30:05,200
and then

407
00:30:05,200 --> 00:30:06,640
so i'll talk about things like how to

408
00:30:06,640 --> 00:30:09,520
write better documentation better guides

409
00:30:09,520 --> 00:30:12,000
and better tutorials

410
00:30:12,000 --> 00:30:14,880
and then i'm going to go into

411
00:30:14,880 --> 00:30:17,200
how to write approachable and appealing

412
00:30:17,200 --> 00:30:20,000
blog posts online and how you can

413
00:30:20,000 --> 00:30:22,399
optimize for that experience

414
00:30:22,399 --> 00:30:24,480
if you do want to start a technical blog

415
00:30:24,480 --> 00:30:25,760
of your own

416
00:30:25,760 --> 00:30:27,679
and then finally i'm going to go just a

417
00:30:27,679 --> 00:30:30,159
little bit into the process of writing a

418
00:30:30,159 --> 00:30:30,960
book

419
00:30:30,960 --> 00:30:31,919
and

420
00:30:31,919 --> 00:30:34,159
if you do want to write and publish a

421
00:30:34,159 --> 00:30:35,520
book

422
00:30:35,520 --> 00:30:36,960
what do you have to do and what kind of

423
00:30:36,960 --> 00:30:40,799
key decisions would you have to make

424
00:30:41,600 --> 00:30:43,760
so i started writing technical content

425
00:30:43,760 --> 00:30:45,840
when i was trying to transition from

426
00:30:45,840 --> 00:30:48,320
development into security

427
00:30:48,320 --> 00:30:51,200
i tried to learn bug bounty hunting as a

428
00:30:51,200 --> 00:30:54,080
way to learn more about web security and

429
00:30:54,080 --> 00:30:56,559
what i would do is that i would

430
00:30:56,559 --> 00:30:58,720
go on to hacker one and find all these

431
00:30:58,720 --> 00:31:01,840
disclosed vulnerabilities online and

432
00:31:01,840 --> 00:31:04,159
look at the vulnerabilities that they

433
00:31:04,159 --> 00:31:06,640
reference and try to learn about them

434
00:31:06,640 --> 00:31:07,760
and i start

435
00:31:07,760 --> 00:31:09,440
spending a lot of time reading these

436
00:31:09,440 --> 00:31:10,960
reports and learning about the

437
00:31:10,960 --> 00:31:13,600
vulnerabilities for each vulnerability i

438
00:31:13,600 --> 00:31:15,519
want to learn about i would search

439
00:31:15,519 --> 00:31:18,240
online for information right i would do

440
00:31:18,240 --> 00:31:20,320
tons of google searches about sql

441
00:31:20,320 --> 00:31:23,279
injection and read all the

442
00:31:23,279 --> 00:31:25,039
articles that come back in my google

443
00:31:25,039 --> 00:31:26,000
search

444
00:31:26,000 --> 00:31:28,240
and what i found was that there was

445
00:31:28,240 --> 00:31:31,039
tons and tons of content online at the

446
00:31:31,039 --> 00:31:33,519
at that time to learn about web security

447
00:31:33,519 --> 00:31:36,320
right but a lot of the times these uh

448
00:31:36,320 --> 00:31:38,880
blog posts only mention one or two very

449
00:31:38,880 --> 00:31:41,600
limited aspects of that topic or

450
00:31:41,600 --> 00:31:43,840
sometimes these articles can be

451
00:31:43,840 --> 00:31:46,720
um sort of outdated or misleading in

452
00:31:46,720 --> 00:31:48,720
some way right so it's really really

453
00:31:48,720 --> 00:31:50,960
hard to learn everything about a single

454
00:31:50,960 --> 00:31:53,679
topic as a beginner because there's it's

455
00:31:53,679 --> 00:31:55,360
really hard to get the big picture or

456
00:31:55,360 --> 00:31:57,360
the comprehensive view because there's

457
00:31:57,360 --> 00:32:00,640
no such resource um online for beginners

458
00:32:00,640 --> 00:32:02,159
in that way

459
00:32:02,159 --> 00:32:04,799
like take sql injection for example it

460
00:32:04,799 --> 00:32:07,279
often takes like 10 to 20 google

461
00:32:07,279 --> 00:32:08,880
searches and reading every single

462
00:32:08,880 --> 00:32:10,159
article that comes back from these

463
00:32:10,159 --> 00:32:12,799
searches just to understand the big

464
00:32:12,799 --> 00:32:15,200
picture of how it all works and what

465
00:32:15,200 --> 00:32:17,039
someone can do with it

466
00:32:17,039 --> 00:32:19,279
so i started to do a lot of research by

467
00:32:19,279 --> 00:32:20,640
myself

468
00:32:20,640 --> 00:32:24,000
organizing fact checking and curating

469
00:32:24,000 --> 00:32:26,799
the information myself

470
00:32:26,799 --> 00:32:29,279
and with all that googling and

471
00:32:29,279 --> 00:32:32,480
organization i started to accumulate a

472
00:32:32,480 --> 00:32:33,919
lot of notes

473
00:32:33,919 --> 00:32:36,640
that turned into a large repository of

474
00:32:36,640 --> 00:32:39,760
knowledge about web security that i um

475
00:32:39,760 --> 00:32:42,320
accumulate while i was learning myself

476
00:32:42,320 --> 00:32:44,320
so i thought hey i can turn this

477
00:32:44,320 --> 00:32:46,159
research and this content curation i've

478
00:32:46,159 --> 00:32:48,559
done for myself into a book so i can

479
00:32:48,559 --> 00:32:51,440
expedite the learning process for others

480
00:32:51,440 --> 00:32:53,840
and this is why i started writing bug

481
00:32:53,840 --> 00:32:56,000
bounty boot camp

482
00:32:56,000 --> 00:32:59,600
and the expectation um before i started

483
00:32:59,600 --> 00:33:01,519
the book was sort of like this is going

484
00:33:01,519 --> 00:33:03,440
to be an easy side project and i'm going

485
00:33:03,440 --> 00:33:05,760
to be done with this project within six

486
00:33:05,760 --> 00:33:08,480
months of working on the weekends

487
00:33:08,480 --> 00:33:10,640
um i was very innocent

488
00:33:10,640 --> 00:33:13,200
the reality was that it took me nearly

489
00:33:13,200 --> 00:33:17,200
two years and um over 40 hours per week

490
00:33:17,200 --> 00:33:20,960
of work to complete the entire book

491
00:33:20,960 --> 00:33:22,480
um so it was

492
00:33:22,480 --> 00:33:25,039
a giant giant massive undertaking that i

493
00:33:25,039 --> 00:33:27,039
didn't expect

494
00:33:27,039 --> 00:33:29,679
um but no regrets because i feel like

495
00:33:29,679 --> 00:33:32,000
i've learned a lot about web security in

496
00:33:32,000 --> 00:33:35,200
the process i had a lot of fun and i met

497
00:33:35,200 --> 00:33:36,880
a lot of interesting people because a

498
00:33:36,880 --> 00:33:39,440
lot of people in the security industry

499
00:33:39,440 --> 00:33:41,120
actually started reaching out to me once

500
00:33:41,120 --> 00:33:43,200
my book was announced

501
00:33:43,200 --> 00:33:45,600
and i also really love the process of

502
00:33:45,600 --> 00:33:48,159
technical writing because it's a way of

503
00:33:48,159 --> 00:33:49,600
sharing knowledge

504
00:33:49,600 --> 00:33:51,440
and you can share what you've learned

505
00:33:51,440 --> 00:33:53,279
and really use that to expedite the

506
00:33:53,279 --> 00:33:55,360
learning process for others without ever

507
00:33:55,360 --> 00:33:58,000
meeting them in person

508
00:33:58,000 --> 00:33:59,760
i've had people reach out to me saying

509
00:33:59,760 --> 00:34:01,600
that bug bang boo can help them learn

510
00:34:01,600 --> 00:34:03,519
web security for themselves and start

511
00:34:03,519 --> 00:34:06,240
hunting for bug bounty themselves so i

512
00:34:06,240 --> 00:34:08,960
encourage low security folks to give

513
00:34:08,960 --> 00:34:10,639
technical writing a try because it's a

514
00:34:10,639 --> 00:34:12,000
great way of

515
00:34:12,000 --> 00:34:14,399
clarifying your own thoughts and helping

516
00:34:14,399 --> 00:34:16,960
yourself learn and understand a concept

517
00:34:16,960 --> 00:34:19,520
more deeply and also participate this

518
00:34:19,520 --> 00:34:21,679
sort of indirect mentorship and

519
00:34:21,679 --> 00:34:24,239
knowledging using the time that you've

520
00:34:24,239 --> 00:34:28,399
already invested in research

521
00:34:29,440 --> 00:34:30,639
um but

522
00:34:30,639 --> 00:34:33,040
the one caveat is that writing is really

523
00:34:33,040 --> 00:34:35,280
really difficult right writing is really

524
00:34:35,280 --> 00:34:37,359
a specialist skill that a lot of the

525
00:34:37,359 --> 00:34:38,159
time

526
00:34:38,159 --> 00:34:39,918
are not taught to us

527
00:34:39,918 --> 00:34:41,359
um either

528
00:34:41,359 --> 00:34:43,918
when we're in college studying um some

529
00:34:43,918 --> 00:34:45,599
sort of technical topic

530
00:34:45,599 --> 00:34:49,199
or on our jobs right there's no really

531
00:34:49,199 --> 00:34:51,280
any formal training program that we can

532
00:34:51,280 --> 00:34:54,399
take on writing and it's one thing to

533
00:34:54,399 --> 00:34:57,280
produce documentation and notes that you

534
00:34:57,280 --> 00:34:59,040
can understand yourself

535
00:34:59,040 --> 00:35:00,880
but it's a lot more difficult to write

536
00:35:00,880 --> 00:35:03,119
something that can be used and

537
00:35:03,119 --> 00:35:05,119
understood by other people

538
00:35:05,119 --> 00:35:07,359
so in this talk i want to talk about how

539
00:35:07,359 --> 00:35:10,160
i make this process easier for myself

540
00:35:10,160 --> 00:35:10,800
and

541
00:35:10,800 --> 00:35:13,440
how you can optimize your technical

542
00:35:13,440 --> 00:35:16,400
writing process to produce

543
00:35:16,400 --> 00:35:18,480
better more understandable technical

544
00:35:18,480 --> 00:35:21,839
content more efficiently

545
00:35:23,280 --> 00:35:26,480
so i think writing is way easier oh

546
00:35:26,480 --> 00:35:28,560
technical writing in particular is way

547
00:35:28,560 --> 00:35:30,880
easier if you break it down into three

548
00:35:30,880 --> 00:35:32,640
distinct steps

549
00:35:32,640 --> 00:35:35,760
research and outlining content dumping

550
00:35:35,760 --> 00:35:38,400
and editing

551
00:35:38,640 --> 00:35:41,680
so let's get started with the first step

552
00:35:41,680 --> 00:35:43,599
research and outlining

553
00:35:43,599 --> 00:35:46,079
this is where you're figuring out

554
00:35:46,079 --> 00:35:47,760
what information to include in your

555
00:35:47,760 --> 00:35:50,880
article what information to not include

556
00:35:50,880 --> 00:35:53,920
what sequence to introduce concepts in

557
00:35:53,920 --> 00:35:56,480
and what structure of writing would be

558
00:35:56,480 --> 00:35:59,040
the best to present your information at

559
00:35:59,040 --> 00:36:00,320
hand

560
00:36:00,320 --> 00:36:03,280
so i will first do research on the topic

561
00:36:03,280 --> 00:36:05,040
i try to find out everything i can about

562
00:36:05,040 --> 00:36:07,119
the topic right even if i'm already

563
00:36:07,119 --> 00:36:09,040
familiar with what i'm trying to write

564
00:36:09,040 --> 00:36:10,960
about i try to read as much

565
00:36:10,960 --> 00:36:12,400
documentation

566
00:36:12,400 --> 00:36:15,359
blog posts write-ups and books about a

567
00:36:15,359 --> 00:36:17,920
technology and just in general collect

568
00:36:17,920 --> 00:36:20,000
as much information about a subject as

569
00:36:20,000 --> 00:36:22,800
possible just in case i'm missing some

570
00:36:22,800 --> 00:36:24,560
aspect of the topic

571
00:36:24,560 --> 00:36:27,119
or um that i want to

572
00:36:27,119 --> 00:36:29,599
enrich some parts of my article right

573
00:36:29,599 --> 00:36:31,839
i will make detailed notes during this

574
00:36:31,839 --> 00:36:34,000
process and organize the information i

575
00:36:34,000 --> 00:36:36,560
found i also fact check everything i

576
00:36:36,560 --> 00:36:38,960
read about and test out all the payload

577
00:36:38,960 --> 00:36:41,440
and all the code to make sure that they

578
00:36:41,440 --> 00:36:43,200
all work

579
00:36:43,200 --> 00:36:45,520
and it's really really important to do

580
00:36:45,520 --> 00:36:47,119
all this research

581
00:36:47,119 --> 00:36:49,359
prior to starting to write because it

582
00:36:49,359 --> 00:36:51,599
helps you get the full picture of what

583
00:36:51,599 --> 00:36:53,119
you're writing about

584
00:36:53,119 --> 00:36:55,920
and it also helps you with planning and

585
00:36:55,920 --> 00:36:58,400
thinking about how you can structure the

586
00:36:58,400 --> 00:37:00,560
content and best present

587
00:37:00,560 --> 00:37:03,599
this content to your reader

588
00:37:03,599 --> 00:37:06,480
after research you can slowly well even

589
00:37:06,480 --> 00:37:08,160
during research you can slowly start

590
00:37:08,160 --> 00:37:09,920
listing out the topics that you want to

591
00:37:09,920 --> 00:37:10,960
talk about

592
00:37:10,960 --> 00:37:13,599
and try to think about what a logical

593
00:37:13,599 --> 00:37:16,400
progression would be for your article

594
00:37:16,400 --> 00:37:18,240
and this is where you get your first

595
00:37:18,240 --> 00:37:20,800
draft of outline

596
00:37:20,800 --> 00:37:23,440
so here we can see like let's say that

597
00:37:23,440 --> 00:37:26,480
we are writing an article that teaches

598
00:37:26,480 --> 00:37:29,520
developers what sql injections are and

599
00:37:29,520 --> 00:37:31,920
how they can prevent it you can start to

600
00:37:31,920 --> 00:37:33,760
list out the different things that you

601
00:37:33,760 --> 00:37:36,880
want to include in the article such as

602
00:37:36,880 --> 00:37:39,280
how sql queries work and how that leads

603
00:37:39,280 --> 00:37:41,760
to sql injections

604
00:37:41,760 --> 00:37:44,000
what are some types of sql injection

605
00:37:44,000 --> 00:37:45,920
vulnerabilities

606
00:37:45,920 --> 00:37:48,000
and perhaps include some real-life

607
00:37:48,000 --> 00:37:50,160
examples of sql injections that you've

608
00:37:50,160 --> 00:37:51,040
seen

609
00:37:51,040 --> 00:37:53,760
and then include a section on

610
00:37:53,760 --> 00:37:57,040
how to prevent sql injections

611
00:37:57,040 --> 00:38:00,400
and it's important to remember that

612
00:38:00,400 --> 00:38:02,560
outlines just like articles they go

613
00:38:02,560 --> 00:38:04,720
through multiple drafts

614
00:38:04,720 --> 00:38:06,640
and this outline can be changed and

615
00:38:06,640 --> 00:38:09,040
refined as you do more research or as

616
00:38:09,040 --> 00:38:10,720
you start writing

617
00:38:10,720 --> 00:38:12,880
and this step often takes lots and lots

618
00:38:12,880 --> 00:38:15,920
of times right and i often find myself

619
00:38:15,920 --> 00:38:18,000
changing the outline or and the

620
00:38:18,000 --> 00:38:19,760
structure of an article later in the

621
00:38:19,760 --> 00:38:23,680
writing process or the research process

622
00:38:23,760 --> 00:38:27,280
so for example you can add subtopics

623
00:38:27,280 --> 00:38:28,800
to refine the points that you want to

624
00:38:28,800 --> 00:38:31,599
touch on or you can delete something

625
00:38:31,599 --> 00:38:33,520
that is you think is too much for this

626
00:38:33,520 --> 00:38:34,560
article

627
00:38:34,560 --> 00:38:37,040
and perhaps move it to a subsequent

628
00:38:37,040 --> 00:38:39,599
article or even break the

629
00:38:39,599 --> 00:38:41,200
everything that you want to talk about

630
00:38:41,200 --> 00:38:44,560
down into a series

631
00:38:44,560 --> 00:38:47,920
so here you can see that i added some uh

632
00:38:47,920 --> 00:38:49,520
points to

633
00:38:49,520 --> 00:38:50,800
my outline

634
00:38:50,800 --> 00:38:52,880
and the outline is really becoming more

635
00:38:52,880 --> 00:38:55,280
detailed and is starting to provide you

636
00:38:55,280 --> 00:38:56,640
with

637
00:38:56,640 --> 00:38:58,640
a concrete direction for what you want

638
00:38:58,640 --> 00:39:01,839
to write about right so um you can see

639
00:39:01,839 --> 00:39:05,440
here that in the prevention section um

640
00:39:05,440 --> 00:39:08,079
we add a parameterization so that you

641
00:39:08,079 --> 00:39:10,400
know that um you're gonna have to touch

642
00:39:10,400 --> 00:39:12,720
on that point um when you are writing

643
00:39:12,720 --> 00:39:14,640
that part of the article

644
00:39:14,640 --> 00:39:17,040
and most planning of the article should

645
00:39:17,040 --> 00:39:20,320
really be done at this stage before

646
00:39:20,320 --> 00:39:21,760
you start writing

647
00:39:21,760 --> 00:39:23,920
because this is where you'll be deciding

648
00:39:23,920 --> 00:39:26,320
exactly what to present to the reader

649
00:39:26,320 --> 00:39:28,960
and how and outlining and planning the

650
00:39:28,960 --> 00:39:31,520
article in advance this way will really

651
00:39:31,520 --> 00:39:34,480
help you write a more coherent article

652
00:39:34,480 --> 00:39:36,240
and make sure that you're not missing

653
00:39:36,240 --> 00:39:38,320
any important point that might be

654
00:39:38,320 --> 00:39:43,240
important for your reader to know

655
00:39:43,599 --> 00:39:47,200
and once you have your outline ready

656
00:39:47,200 --> 00:39:48,079
um

657
00:39:48,079 --> 00:39:49,040
you

658
00:39:49,040 --> 00:39:50,720
you can start going through your outline

659
00:39:50,720 --> 00:39:52,400
and filling out all the relevant

660
00:39:52,400 --> 00:39:54,400
information you have for each outline

661
00:39:54,400 --> 00:39:55,280
item

662
00:39:55,280 --> 00:39:56,480
i call this

663
00:39:56,480 --> 00:39:58,880
my content dumping face

664
00:39:58,880 --> 00:40:01,359
i typically will have my notes from my

665
00:40:01,359 --> 00:40:03,839
research phase by my side

666
00:40:03,839 --> 00:40:05,680
and then i'll start translating the

667
00:40:05,680 --> 00:40:07,440
concepts that i've learned during the

668
00:40:07,440 --> 00:40:09,440
research phase

669
00:40:09,440 --> 00:40:12,160
into plain spoken english

670
00:40:12,160 --> 00:40:14,480
so think about how you would explain a

671
00:40:14,480 --> 00:40:16,720
concept like sql injection

672
00:40:16,720 --> 00:40:18,079
to your friends

673
00:40:18,079 --> 00:40:19,920
and start dumping out whatever thoughts

674
00:40:19,920 --> 00:40:21,920
you have into

675
00:40:21,920 --> 00:40:24,240
either a text editor or on paper if

676
00:40:24,240 --> 00:40:27,040
that's how you prefer to write

677
00:40:27,040 --> 00:40:29,440
and all like all you're doing at this

678
00:40:29,440 --> 00:40:31,760
point is dumping content out right a

679
00:40:31,760 --> 00:40:33,839
very very important thing to remember at

680
00:40:33,839 --> 00:40:35,040
this point

681
00:40:35,040 --> 00:40:37,280
is not to edit yourself when you're

682
00:40:37,280 --> 00:40:38,560
writing

683
00:40:38,560 --> 00:40:39,599
i think

684
00:40:39,599 --> 00:40:42,240
a big tip about writer's block is that a

685
00:40:42,240 --> 00:40:45,200
lot of times when people feel like oh

686
00:40:45,200 --> 00:40:47,280
they can't figure out what to write or

687
00:40:47,280 --> 00:40:49,920
they can't put anything on paper

688
00:40:49,920 --> 00:40:52,880
is because they it's caused by

689
00:40:52,880 --> 00:40:55,599
inhibition and the fear of their words

690
00:40:55,599 --> 00:40:57,760
not coming out right so you don't want

691
00:40:57,760 --> 00:41:00,240
to censor yourself at this point simply

692
00:41:00,240 --> 00:41:02,079
capture all your thoughts that you want

693
00:41:02,079 --> 00:41:03,440
to express

694
00:41:03,440 --> 00:41:07,359
and don't worry about styling or grammar

695
00:41:07,359 --> 00:41:10,480
or even typos or anything that

696
00:41:10,480 --> 00:41:13,359
would affect the reader's experience

697
00:41:13,359 --> 00:41:16,640
those can all come later in the process

698
00:41:16,640 --> 00:41:18,040
and it's very very important to

699
00:41:18,040 --> 00:41:20,560
compartmentalize writing and editing

700
00:41:20,560 --> 00:41:22,160
because you'll be able to write much

701
00:41:22,160 --> 00:41:23,760
more freely

702
00:41:23,760 --> 00:41:26,160
all you're doing right now is to say

703
00:41:26,160 --> 00:41:28,560
everything you want to say about a topic

704
00:41:28,560 --> 00:41:30,400
and make sure you have all the content

705
00:41:30,400 --> 00:41:33,520
down onto paper or text editor

706
00:41:33,520 --> 00:41:35,599
but this also means that your first

707
00:41:35,599 --> 00:41:39,280
draft would probably be absolutely trash

708
00:41:39,280 --> 00:41:42,160
um like my first draft 100

709
00:41:42,160 --> 00:41:44,880
100 of the times is not something i want

710
00:41:44,880 --> 00:41:46,800
to present to my reader

711
00:41:46,800 --> 00:41:49,920
right that's where um editing uh comes

712
00:41:49,920 --> 00:41:51,920
into play but we can talk a little bit

713
00:41:51,920 --> 00:41:54,000
about that later here you can see that

714
00:41:54,000 --> 00:41:56,160
we have an outline here

715
00:41:56,160 --> 00:41:58,480
um from our previous step and we can

716
00:41:58,480 --> 00:42:01,119
simply pick one item in the outline it

717
00:42:01,119 --> 00:42:02,800
doesn't have to be you don't have to

718
00:42:02,800 --> 00:42:05,680
work on um every single item in the

719
00:42:05,680 --> 00:42:07,359
outline uh

720
00:42:07,359 --> 00:42:09,440
like one by one you can also skip to a

721
00:42:09,440 --> 00:42:11,680
certain outline item if you feel like it

722
00:42:11,680 --> 00:42:14,000
and start filling out um information

723
00:42:14,000 --> 00:42:15,760
that you feel like is relevant for the

724
00:42:15,760 --> 00:42:18,400
reader at that point

725
00:42:18,400 --> 00:42:19,119
and

726
00:42:19,119 --> 00:42:21,200
after you have um

727
00:42:21,200 --> 00:42:23,839
the baseline of technical content ready

728
00:42:23,839 --> 00:42:27,599
the next step is to um ensure that your

729
00:42:27,599 --> 00:42:28,720
article is something that you can

730
00:42:28,720 --> 00:42:30,960
present to your reader right and that's

731
00:42:30,960 --> 00:42:33,680
when editing comes into play

732
00:42:33,680 --> 00:42:36,400
and for editing i typically do

733
00:42:36,400 --> 00:42:38,720
three types of editing

734
00:42:38,720 --> 00:42:40,880
in sequence so i first go through a

735
00:42:40,880 --> 00:42:43,040
technical edit and then i do what i call

736
00:42:43,040 --> 00:42:45,680
a common knowledge edit and then finally

737
00:42:45,680 --> 00:42:47,200
copy edit

738
00:42:47,200 --> 00:42:50,480
for the technical editing phase

739
00:42:50,480 --> 00:42:53,040
this step is to ensure that both your

740
00:42:53,040 --> 00:42:55,760
text and your messages and your images

741
00:42:55,760 --> 00:42:57,599
and your diagrams are technically

742
00:42:57,599 --> 00:42:58,640
correct

743
00:42:58,640 --> 00:43:00,720
and don't contain any

744
00:43:00,720 --> 00:43:01,920
mistakes

745
00:43:01,920 --> 00:43:03,760
and besides blatant technical mistakes

746
00:43:03,760 --> 00:43:05,760
you should also look for things like

747
00:43:05,760 --> 00:43:08,079
technical contents technical holes in

748
00:43:08,079 --> 00:43:09,839
the content

749
00:43:09,839 --> 00:43:12,480
are there anything that you fail to

750
00:43:12,480 --> 00:43:14,160
explain

751
00:43:14,160 --> 00:43:16,319
are there any logical jumps in the

752
00:43:16,319 --> 00:43:19,440
article or do you have anything

753
00:43:19,440 --> 00:43:21,359
that you need to rearrange to make it

754
00:43:21,359 --> 00:43:22,720
easier to read

755
00:43:22,720 --> 00:43:24,720
or is there something that could use

756
00:43:24,720 --> 00:43:27,200
more explanation or reference to another

757
00:43:27,200 --> 00:43:28,720
resource

758
00:43:28,720 --> 00:43:30,960
and after you do a technical edit the

759
00:43:30,960 --> 00:43:33,119
next step is what i call the common

760
00:43:33,119 --> 00:43:35,200
knowledge edit and this is really the

761
00:43:35,200 --> 00:43:38,560
phase where you will try to optimize

762
00:43:38,560 --> 00:43:42,400
your article for the reader's experience

763
00:43:42,400 --> 00:43:44,000
so in this phase i try to read my

764
00:43:44,000 --> 00:43:45,440
writing as

765
00:43:45,440 --> 00:43:47,920
um my target reader as someone with no

766
00:43:47,920 --> 00:43:50,720
prior knowledge about my topic as and is

767
00:43:50,720 --> 00:43:52,240
instead equipped with the common

768
00:43:52,240 --> 00:43:54,640
knowledge for my target audience

769
00:43:54,640 --> 00:43:56,880
so for example if i am writing a

770
00:43:56,880 --> 00:43:58,319
security code review article for

771
00:43:58,319 --> 00:44:00,400
developers i can probably assume that my

772
00:44:00,400 --> 00:44:01,920
readers already

773
00:44:01,920 --> 00:44:04,400
understand concepts like http cookies

774
00:44:04,400 --> 00:44:06,240
encryption but i shouldn't assume that

775
00:44:06,240 --> 00:44:08,880
they already know about how to conduct a

776
00:44:08,880 --> 00:44:10,800
security code review

777
00:44:10,800 --> 00:44:12,880
and at this point the technical content

778
00:44:12,880 --> 00:44:16,560
of your article is fixed the next thing

779
00:44:16,560 --> 00:44:18,800
to do is to refine the words and

780
00:44:18,800 --> 00:44:21,200
sentences so everything that we skipped

781
00:44:21,200 --> 00:44:22,720
during the last phase

782
00:44:22,720 --> 00:44:24,640
so you can start deleting the content

783
00:44:24,640 --> 00:44:26,720
that don't add any meaning or clarity to

784
00:44:26,720 --> 00:44:28,960
your article or think of ways of

785
00:44:28,960 --> 00:44:31,119
phrasing each sentence or each word

786
00:44:31,119 --> 00:44:33,040
better just in general clean up the

787
00:44:33,040 --> 00:44:34,720
language and make sure that the article

788
00:44:34,720 --> 00:44:37,599
flows and makes logical sense and that

789
00:44:37,599 --> 00:44:39,359
it's easy to read

790
00:44:39,359 --> 00:44:41,359
and then finally i run my article

791
00:44:41,359 --> 00:44:43,200
through a grammar checker

792
00:44:43,200 --> 00:44:46,240
and um read my article out loud or in my

793
00:44:46,240 --> 00:44:50,640
mind as a final sanity check that um

794
00:44:50,640 --> 00:44:53,599
the article indeed flows and doesn't uh

795
00:44:53,599 --> 00:44:57,920
contain any last-minute mistakes

796
00:44:59,200 --> 00:45:02,160
so that's basically the process or that

797
00:45:02,160 --> 00:45:04,000
i take and the strategy i use to

798
00:45:04,000 --> 00:45:06,480
optimize my technical writing process

799
00:45:06,480 --> 00:45:08,720
but now that you have a good framework

800
00:45:08,720 --> 00:45:10,400
for writing technical documents

801
00:45:10,400 --> 00:45:11,680
efficiently

802
00:45:11,680 --> 00:45:13,440
a lot of people tell me they want to

803
00:45:13,440 --> 00:45:15,680
start a technical blog

804
00:45:15,680 --> 00:45:18,000
i think writing an internet blog is very

805
00:45:18,000 --> 00:45:20,000
different from

806
00:45:20,000 --> 00:45:22,560
how you produce other documents

807
00:45:22,560 --> 00:45:23,680
while the

808
00:45:23,680 --> 00:45:25,760
principles of good writing still very

809
00:45:25,760 --> 00:45:27,440
much applies

810
00:45:27,440 --> 00:45:29,440
you have to plan in advance you have to

811
00:45:29,440 --> 00:45:31,520
read your article as the reader

812
00:45:31,520 --> 00:45:33,280
and you have to do fact checks and

813
00:45:33,280 --> 00:45:35,599
grammar checks but if you want to write

814
00:45:35,599 --> 00:45:38,560
an approachable and appealing tech blog

815
00:45:38,560 --> 00:45:40,640
there are two more principles to keep in

816
00:45:40,640 --> 00:45:41,520
mind

817
00:45:41,520 --> 00:45:44,079
to optimize your experience for the

818
00:45:44,079 --> 00:45:47,839
online reader experience

819
00:45:48,319 --> 00:45:50,720
so the first tip i have for you to write

820
00:45:50,720 --> 00:45:52,319
an approachable blog post that people

821
00:45:52,319 --> 00:45:53,839
will want to read

822
00:45:53,839 --> 00:45:56,560
is to simplify and the next one is to

823
00:45:56,560 --> 00:45:59,280
keep things short and sweet

824
00:45:59,280 --> 00:46:02,079
and what do i mean by simplify right

825
00:46:02,079 --> 00:46:04,319
good technical writing is always easy to

826
00:46:04,319 --> 00:46:06,960
read and but this is especially true

827
00:46:06,960 --> 00:46:08,720
when you're writing on the internet

828
00:46:08,720 --> 00:46:10,319
because on the internet your technical

829
00:46:10,319 --> 00:46:12,480
blog post has the potential to be shared

830
00:46:12,480 --> 00:46:14,160
anywhere in the world right and you

831
00:46:14,160 --> 00:46:15,680
never know who will come across your

832
00:46:15,680 --> 00:46:17,599
content and what their background will

833
00:46:17,599 --> 00:46:20,880
be and simplifying articles allow people

834
00:46:20,880 --> 00:46:23,359
like non-native speakers and novices to

835
00:46:23,359 --> 00:46:25,599
consume your article as well

836
00:46:25,599 --> 00:46:27,040
and you want your content to be

837
00:46:27,040 --> 00:46:29,280
understood by the largest group of

838
00:46:29,280 --> 00:46:32,400
readers and even if your readers don't

839
00:46:32,400 --> 00:46:33,280
have

840
00:46:33,280 --> 00:46:35,440
have prior experience with your content

841
00:46:35,440 --> 00:46:38,400
and are indeed native english speakers

842
00:46:38,400 --> 00:46:40,079
making your article simpler just makes

843
00:46:40,079 --> 00:46:43,200
it easier and faster to read by everyone

844
00:46:43,200 --> 00:46:45,119
so try to use simple words and send

845
00:46:45,119 --> 00:46:47,119
structures whenever possible

846
00:46:47,119 --> 00:46:48,800
and when you can explain something in

847
00:46:48,800 --> 00:46:51,040
one sentence never use ten

848
00:46:51,040 --> 00:46:53,119
avoid things like jargon

849
00:46:53,119 --> 00:46:56,000
abbreviation acronyms and obscure

850
00:46:56,000 --> 00:46:58,400
references because a lot of the times

851
00:46:58,400 --> 00:47:01,200
these would not be common knowledge for

852
00:47:01,200 --> 00:47:04,000
every one of your readers

853
00:47:04,000 --> 00:47:06,560
so here we have an example

854
00:47:06,560 --> 00:47:08,480
of um

855
00:47:08,480 --> 00:47:10,960
of me trying to explain sql injections

856
00:47:10,960 --> 00:47:12,880
and it says that sql injection attacks

857
00:47:12,880 --> 00:47:14,880
are a type of malicious activity that

858
00:47:14,880 --> 00:47:17,200
enables dangerous attackers to craft

859
00:47:17,200 --> 00:47:19,599
malicious sql code to change the

860
00:47:19,599 --> 00:47:21,760
structure of a victim application sql

861
00:47:21,760 --> 00:47:24,160
queries illicitly to steal sensitive

862
00:47:24,160 --> 00:47:26,480
data modify confidential data or

863
00:47:26,480 --> 00:47:29,119
potentially execute arbitrary commands

864
00:47:29,119 --> 00:47:31,440
in the underlying operating system

865
00:47:31,440 --> 00:47:32,559
and you can see that this is an

866
00:47:32,559 --> 00:47:34,800
extremely long sentence with a complex

867
00:47:34,800 --> 00:47:36,079
sentence structure

868
00:47:36,079 --> 00:47:39,040
and a lot of unnecessary adjectives

869
00:47:39,040 --> 00:47:41,280
and all that does is that it takes away

870
00:47:41,280 --> 00:47:42,880
from my main message and makes it

871
00:47:42,880 --> 00:47:45,119
difficult to understand what i'm really

872
00:47:45,119 --> 00:47:48,400
trying to say in this sentence

873
00:47:48,400 --> 00:47:51,359
so we can instead rewrite the sentence

874
00:47:51,359 --> 00:47:54,319
as uh sql injections allow attacker code

875
00:47:54,319 --> 00:47:55,920
to change the structure of uh

876
00:47:55,920 --> 00:47:58,559
applications sql queries to steal data

877
00:47:58,559 --> 00:48:01,200
modify data or potentially execute

878
00:48:01,200 --> 00:48:02,960
arbitrary commands in the underlying

879
00:48:02,960 --> 00:48:04,559
operating system

880
00:48:04,559 --> 00:48:06,240
and you can see that the sentence is a

881
00:48:06,240 --> 00:48:09,119
lot shorter and more to the point and as

882
00:48:09,119 --> 00:48:11,200
compared to the last sentence it

883
00:48:11,200 --> 00:48:13,280
actually doesn't uh take away any

884
00:48:13,280 --> 00:48:15,680
meaning from um the

885
00:48:15,680 --> 00:48:17,760
actual sentence itself

886
00:48:17,760 --> 00:48:21,040
so this is how you simplify a sentence

887
00:48:21,040 --> 00:48:22,720
right and i know sometimes it's

888
00:48:22,720 --> 00:48:25,359
difficult to figure out how to simplify

889
00:48:25,359 --> 00:48:28,079
a sentence or a paragraph

890
00:48:28,079 --> 00:48:30,319
and a good rule of thumb that i use is

891
00:48:30,319 --> 00:48:31,040
to

892
00:48:31,040 --> 00:48:33,760
delete every single thing in a sentence

893
00:48:33,760 --> 00:48:35,680
or in a paragraph that doesn't help you

894
00:48:35,680 --> 00:48:37,760
illustrate or clarify the message that

895
00:48:37,760 --> 00:48:39,359
you're trying to convey

896
00:48:39,359 --> 00:48:41,040
so as you go through your sentence or

897
00:48:41,040 --> 00:48:43,520
your entire article

898
00:48:43,520 --> 00:48:45,280
you want to look at each component and

899
00:48:45,280 --> 00:48:46,960
really question yourself

900
00:48:46,960 --> 00:48:49,520
does this really help me say what i want

901
00:48:49,520 --> 00:48:53,280
to say or is this just fluff or um

902
00:48:53,280 --> 00:48:56,000
does this even detract from

903
00:48:56,000 --> 00:48:58,160
my message that i'm trying to convey in

904
00:48:58,160 --> 00:49:00,319
the

905
00:49:00,839 --> 00:49:03,920
article another thing to keep in mind is

906
00:49:03,920 --> 00:49:05,920
that when writing for the internet is

907
00:49:05,920 --> 00:49:08,880
very very important to keep things

908
00:49:08,880 --> 00:49:12,400
um short and sweet and to um divide

909
00:49:12,400 --> 00:49:14,319
things up into chunks

910
00:49:14,319 --> 00:49:15,920
so writing a blog post it sounds like

911
00:49:15,920 --> 00:49:18,640
writing a research paper or a report

912
00:49:18,640 --> 00:49:20,640
because the way that people consume

913
00:49:20,640 --> 00:49:23,520
information on the internet is different

914
00:49:23,520 --> 00:49:25,280
when people are reading their blog posts

915
00:49:25,280 --> 00:49:27,520
they might scan the entire article for

916
00:49:27,520 --> 00:49:29,440
headers before committing time to

917
00:49:29,440 --> 00:49:30,800
reading it

918
00:49:30,800 --> 00:49:32,559
i know i do that a lot

919
00:49:32,559 --> 00:49:35,359
and i might also be browsing twitter or

920
00:49:35,359 --> 00:49:37,200
checking their phones at the same time

921
00:49:37,200 --> 00:49:39,280
while they're reading your article or

922
00:49:39,280 --> 00:49:41,040
they might be reading your article on

923
00:49:41,040 --> 00:49:44,079
the tiny tiny smartphone screen right

924
00:49:44,079 --> 00:49:46,160
it's very different from the traditional

925
00:49:46,160 --> 00:49:48,480
reading from a paper or even reading an

926
00:49:48,480 --> 00:49:51,040
entire pdf on your laptop

927
00:49:51,040 --> 00:49:53,359
so when you're writing internet content

928
00:49:53,359 --> 00:49:56,000
it's very very important to optimize for

929
00:49:56,000 --> 00:49:58,559
a digital experience

930
00:49:58,559 --> 00:50:00,559
so part of that is to divide your

931
00:50:00,559 --> 00:50:03,839
article up into easily digestible chunks

932
00:50:03,839 --> 00:50:06,319
ensure that each section is marked with

933
00:50:06,319 --> 00:50:09,359
appropriate headers and subheaders

934
00:50:09,359 --> 00:50:11,440
and this makes it easier for your

935
00:50:11,440 --> 00:50:14,000
readers to

936
00:50:14,000 --> 00:50:15,520
jump to different sections of your

937
00:50:15,520 --> 00:50:18,319
article if they do get distracted

938
00:50:18,319 --> 00:50:19,200
and

939
00:50:19,200 --> 00:50:21,200
to just in general revisit different

940
00:50:21,200 --> 00:50:23,760
sections that they're interested in or

941
00:50:23,760 --> 00:50:25,520
share or reference different parts of

942
00:50:25,520 --> 00:50:29,599
the article with people online

943
00:50:29,599 --> 00:50:31,520
also try to keep things short and to the

944
00:50:31,520 --> 00:50:32,480
point

945
00:50:32,480 --> 00:50:34,640
to make your article more digestible

946
00:50:34,640 --> 00:50:36,720
during a short time frame so if your

947
00:50:36,720 --> 00:50:39,040
cover if you're covering multiple topics

948
00:50:39,040 --> 00:50:41,359
in a blog post you should consider

949
00:50:41,359 --> 00:50:43,280
chunking it up into multiple sections

950
00:50:43,280 --> 00:50:45,680
with center with headers and sub headers

951
00:50:45,680 --> 00:50:48,240
ready so that people can quickly skip to

952
00:50:48,240 --> 00:50:50,880
the parts that they're interested in

953
00:50:50,880 --> 00:50:53,680
and another role of thumb i use when i

954
00:50:53,680 --> 00:50:56,559
am deciding how to divide things up in

955
00:50:56,559 --> 00:50:58,000
my article

956
00:50:58,000 --> 00:50:58,880
is

957
00:50:58,880 --> 00:51:01,520
one idea per sentence and one concept

958
00:51:01,520 --> 00:51:04,319
per paragraph so i only try to say one

959
00:51:04,319 --> 00:51:06,880
thing per sentence and i also

960
00:51:06,880 --> 00:51:09,599
only try to explain one concept per

961
00:51:09,599 --> 00:51:11,119
paragraph

962
00:51:11,119 --> 00:51:13,359
don't try to say too much in one go keep

963
00:51:13,359 --> 00:51:15,599
your sentences short if your sentence is

964
00:51:15,599 --> 00:51:17,280
getting too long then you can divide it

965
00:51:17,280 --> 00:51:19,680
up into two sentences if your paragraph

966
00:51:19,680 --> 00:51:22,079
is too long break it down into multiple

967
00:51:22,079 --> 00:51:23,119
sections

968
00:51:23,119 --> 00:51:25,520
and finally if your blog post is getting

969
00:51:25,520 --> 00:51:26,960
too long

970
00:51:26,960 --> 00:51:29,040
as long as more than five minutes of

971
00:51:29,040 --> 00:51:31,280
reading which is approximately

972
00:51:31,280 --> 00:51:32,960
1500 words

973
00:51:32,960 --> 00:51:34,160
consider

974
00:51:34,160 --> 00:51:36,800
making your blog post into a series of

975
00:51:36,800 --> 00:51:39,440
blog posts instead of uh stuffing

976
00:51:39,440 --> 00:51:41,760
everything into one single article um

977
00:51:41,760 --> 00:51:44,160
because we probably all know um people

978
00:51:44,160 --> 00:51:45,760
don't really have that long of an

979
00:51:45,760 --> 00:51:47,920
attention span on the internet so it's

980
00:51:47,920 --> 00:51:49,520
important to make

981
00:51:49,520 --> 00:51:51,680
your article feel like it's easily

982
00:51:51,680 --> 00:51:56,079
digestible and very quickly readable

983
00:51:56,079 --> 00:51:58,880
uh yeah short sentences and paragraphs

984
00:51:58,880 --> 00:52:01,280
also make your article much easier to

985
00:52:01,280 --> 00:52:02,640
read

986
00:52:02,640 --> 00:52:04,800
when people are using mobile devices and

987
00:52:04,800 --> 00:52:06,880
they don't have that big of a screen to

988
00:52:06,880 --> 00:52:09,440
work with

989
00:52:11,920 --> 00:52:15,200
and i think so those are my

990
00:52:15,200 --> 00:52:17,280
tips for you for optimizing for the

991
00:52:17,280 --> 00:52:19,680
internet but now that you understand how

992
00:52:19,680 --> 00:52:21,839
to write technical content

993
00:52:21,839 --> 00:52:23,839
um what if you want to write a technical

994
00:52:23,839 --> 00:52:26,160
book right there's a lot that goes into

995
00:52:26,160 --> 00:52:28,160
writing and publishing a technical book

996
00:52:28,160 --> 00:52:30,400
that's not just writing but

997
00:52:30,400 --> 00:52:32,720
business and marketing decisions and

998
00:52:32,720 --> 00:52:34,400
it's really a long and complicated

999
00:52:34,400 --> 00:52:35,599
process

1000
00:52:35,599 --> 00:52:37,520
um in this presentation i want to

1001
00:52:37,520 --> 00:52:40,000
present with you a small overview of the

1002
00:52:40,000 --> 00:52:41,119
process

1003
00:52:41,119 --> 00:52:43,280
i won't be able to go too much into it

1004
00:52:43,280 --> 00:52:45,280
but if you're really really interested

1005
00:52:45,280 --> 00:52:47,280
in writing and publishing a techno book

1006
00:52:47,280 --> 00:52:49,599
and my experience doing it feel free to

1007
00:52:49,599 --> 00:52:51,440
reach out to me um

1008
00:52:51,440 --> 00:52:54,160
after the talk or via twitter and i'll

1009
00:52:54,160 --> 00:52:58,000
be happy to answer any of your questions

1010
00:52:58,000 --> 00:52:58,800
so

1011
00:52:58,800 --> 00:53:01,520
this is um

1012
00:53:01,520 --> 00:53:04,800
what i think the over overall process of

1013
00:53:04,800 --> 00:53:07,760
writing a technical book would be like

1014
00:53:07,760 --> 00:53:08,640
um

1015
00:53:08,640 --> 00:53:10,480
of course this process will be different

1016
00:53:10,480 --> 00:53:14,000
for every single author but um this is

1017
00:53:14,000 --> 00:53:15,920
what i think most authors

1018
00:53:15,920 --> 00:53:17,359
would need to do

1019
00:53:17,359 --> 00:53:19,359
some parts of the process is like we

1020
00:53:19,359 --> 00:53:21,200
just discussed like you have to research

1021
00:53:21,200 --> 00:53:23,839
your content you'll have to structure

1022
00:53:23,839 --> 00:53:25,839
and write the book you have to work on

1023
00:53:25,839 --> 00:53:28,640
the text the diagrams the code examples

1024
00:53:28,640 --> 00:53:30,160
and you have to work with multiple

1025
00:53:30,160 --> 00:53:32,319
editors through multiple edits to make

1026
00:53:32,319 --> 00:53:33,839
sure that your book is technically

1027
00:53:33,839 --> 00:53:35,599
correct

1028
00:53:35,599 --> 00:53:38,319
but a lot of other decisions and

1029
00:53:38,319 --> 00:53:41,119
processes that goes into writing a book

1030
00:53:41,119 --> 00:53:43,280
doesn't really relate to the writing

1031
00:53:43,280 --> 00:53:44,480
itself

1032
00:53:44,480 --> 00:53:47,040
um things like choosing a publisher or

1033
00:53:47,040 --> 00:53:49,119
deciding how to package them market the

1034
00:53:49,119 --> 00:53:51,359
book

1035
00:53:51,599 --> 00:53:54,000
these are i think what traditionally we

1036
00:53:54,000 --> 00:53:55,839
don't consider when we're writing blog

1037
00:53:55,839 --> 00:53:59,200
posts or technical articles

1038
00:53:59,200 --> 00:54:02,400
and um so i'd like to just quickly go

1039
00:54:02,400 --> 00:54:04,319
through two key decisions that you'll

1040
00:54:04,319 --> 00:54:06,240
also have to make that would impact your

1041
00:54:06,240 --> 00:54:10,520
book writing experience a lot

1042
00:54:10,640 --> 00:54:13,359
and the first uh key decision that you

1043
00:54:13,359 --> 00:54:15,839
have to make is deciding on the scope

1044
00:54:15,839 --> 00:54:17,760
and the audience of the book

1045
00:54:17,760 --> 00:54:19,599
so with blocked articles you're most

1046
00:54:19,599 --> 00:54:22,000
often just writing about a single topic

1047
00:54:22,000 --> 00:54:24,319
at a time right but writing a book is

1048
00:54:24,319 --> 00:54:26,319
different when you're producing like a

1049
00:54:26,319 --> 00:54:30,960
300 page book or 400 page book um

1050
00:54:30,960 --> 00:54:32,800
it's more like designing a college

1051
00:54:32,800 --> 00:54:34,800
course or a curriculum so you really

1052
00:54:34,800 --> 00:54:39,119
need to think about um who should uh

1053
00:54:39,119 --> 00:54:40,880
like who should read it and what they

1054
00:54:40,880 --> 00:54:43,040
should get out of it so a good strategy

1055
00:54:43,040 --> 00:54:45,119
of doing that is to define broad but

1056
00:54:45,119 --> 00:54:47,119
clear learning goals for a specific

1057
00:54:47,119 --> 00:54:48,319
audience

1058
00:54:48,319 --> 00:54:50,160
so you can say things like i'm writing

1059
00:54:50,160 --> 00:54:52,480
books to help beginners how to find

1060
00:54:52,480 --> 00:54:54,960
their first bug or i'm writing a book to

1061
00:54:54,960 --> 00:54:57,520
help python developers build dedicated

1062
00:54:57,520 --> 00:55:00,559
security tools using python so defining

1063
00:55:00,559 --> 00:55:02,319
these broad but clear learning goals

1064
00:55:02,319 --> 00:55:03,680
will help you

1065
00:55:03,680 --> 00:55:06,319
really decide what topics to include

1066
00:55:06,319 --> 00:55:08,319
what kind of prerequisites you need to

1067
00:55:08,319 --> 00:55:10,720
require for your book and how fast and

1068
00:55:10,720 --> 00:55:12,160
with how much detail should you

1069
00:55:12,160 --> 00:55:15,598
introduce concepts in the book

1070
00:55:15,680 --> 00:55:17,280
and another key decision that you have

1071
00:55:17,280 --> 00:55:20,000
to make very early on the process is

1072
00:55:20,000 --> 00:55:21,680
whether you want to use a publisher or

1073
00:55:21,680 --> 00:55:24,079
not publishers usually help you with

1074
00:55:24,079 --> 00:55:25,119
things like

1075
00:55:25,119 --> 00:55:27,440
book editing and they coordinate things

1076
00:55:27,440 --> 00:55:29,520
like printing shipping and making sure

1077
00:55:29,520 --> 00:55:30,960
that your book

1078
00:55:30,960 --> 00:55:32,880
hits different sales channels

1079
00:55:32,880 --> 00:55:34,799
and they also help with some marketing

1080
00:55:34,799 --> 00:55:36,720
and some pr tasks

1081
00:55:36,720 --> 00:55:38,799
and you don't have to use a publisher if

1082
00:55:38,799 --> 00:55:41,040
you do decide to publish a book a lot of

1083
00:55:41,040 --> 00:55:43,040
people choose to self-publish with great

1084
00:55:43,040 --> 00:55:45,040
success as well

1085
00:55:45,040 --> 00:55:48,400
but the pros of the pros of um

1086
00:55:48,400 --> 00:55:49,920
self-publishing is that you get to do

1087
00:55:49,920 --> 00:55:52,000
whatever you want with your book right

1088
00:55:52,000 --> 00:55:53,760
um publishers sometimes have certain

1089
00:55:53,760 --> 00:55:55,280
styling or writing standards that they

1090
00:55:55,280 --> 00:55:58,720
stick with and if you stop self-publish

1091
00:55:58,720 --> 00:56:00,960
um you are in complete control of your

1092
00:56:00,960 --> 00:56:03,920
book and you also get to keep more of

1093
00:56:03,920 --> 00:56:06,240
the profits usually when you work with a

1094
00:56:06,240 --> 00:56:08,000
publisher you'll get anywhere between

1095
00:56:08,000 --> 00:56:10,400
five to twenty percent of the proceeds

1096
00:56:10,400 --> 00:56:12,400
um if you self-publish you'll probably

1097
00:56:12,400 --> 00:56:16,000
see more of that uh more of that income

1098
00:56:16,000 --> 00:56:17,760
um but working with a publisher means

1099
00:56:17,760 --> 00:56:20,640
that a lot of the messy task of making a

1100
00:56:20,640 --> 00:56:22,319
book is done for you

1101
00:56:22,319 --> 00:56:23,920
are things like finding the right editor

1102
00:56:23,920 --> 00:56:26,319
is the right illustrator is making art

1103
00:56:26,319 --> 00:56:28,799
and dealing with marketing tasks these

1104
00:56:28,799 --> 00:56:31,200
can be very tedious and really probably

1105
00:56:31,200 --> 00:56:32,880
not in most uh

1106
00:56:32,880 --> 00:56:35,839
people's expertise so it's just makes

1107
00:56:35,839 --> 00:56:37,839
things easier if you do decide to

1108
00:56:37,839 --> 00:56:39,920
outsource that to a publisher so it's

1109
00:56:39,920 --> 00:56:42,319
and it's really you know a trade-off of

1110
00:56:42,319 --> 00:56:44,160
what you want from your book writing

1111
00:56:44,160 --> 00:56:46,000
experience

1112
00:56:46,000 --> 00:56:47,119
and

1113
00:56:47,119 --> 00:56:49,440
lastly um which publisher should you

1114
00:56:49,440 --> 00:56:51,280
choose right there are quite a few

1115
00:56:51,280 --> 00:56:55,359
publishers that specialize in tech and i

1116
00:56:55,359 --> 00:56:57,359
honestly have to say that they are quite

1117
00:56:57,359 --> 00:56:59,760
different in the way that how they work

1118
00:56:59,760 --> 00:57:01,280
with authors

1119
00:57:01,280 --> 00:57:04,640
or how they edit books and how they um

1120
00:57:04,640 --> 00:57:07,520
draft their contracts um i'll be happy

1121
00:57:07,520 --> 00:57:09,760
to talk more about it um

1122
00:57:09,760 --> 00:57:10,880
in person

1123
00:57:10,880 --> 00:57:12,319
so just reach out to me if you're

1124
00:57:12,319 --> 00:57:15,200
interested in that

1125
00:57:15,359 --> 00:57:17,839
so to wrap up technical writing is a

1126
00:57:17,839 --> 00:57:20,160
great way to help you learn faster learn

1127
00:57:20,160 --> 00:57:22,720
more deeply and help you share knowledge

1128
00:57:22,720 --> 00:57:26,240
back to the community and mentor others

1129
00:57:26,240 --> 00:57:28,480
and a few takeaways that will help you

1130
00:57:28,480 --> 00:57:30,319
write better technical articles more

1131
00:57:30,319 --> 00:57:32,559
efficiently is first to write with

1132
00:57:32,559 --> 00:57:34,079
simple language

1133
00:57:34,079 --> 00:57:36,319
right you want to write as though you

1134
00:57:36,319 --> 00:57:39,200
are speaking to really make um the

1135
00:57:39,200 --> 00:57:41,680
reading process a smooth and easy one

1136
00:57:41,680 --> 00:57:43,280
for the reader

1137
00:57:43,280 --> 00:57:45,680
second is don't write and edit at the

1138
00:57:45,680 --> 00:57:47,200
same time

1139
00:57:47,200 --> 00:57:48,960
when you write an edit at the same time

1140
00:57:48,960 --> 00:57:50,480
a lot of the times you're censoring

1141
00:57:50,480 --> 00:57:52,480
yourself and you're filling yourself

1142
00:57:52,480 --> 00:57:54,720
with inhibition and fear of your words

1143
00:57:54,720 --> 00:57:57,760
not coming out right so if you can

1144
00:57:57,760 --> 00:58:00,720
compare to mentality these two tasks a

1145
00:58:00,720 --> 00:58:02,799
lot of times you'll be able to produce a

1146
00:58:02,799 --> 00:58:05,359
lot more content more quickly

1147
00:58:05,359 --> 00:58:07,280
the third one is that you should always

1148
00:58:07,280 --> 00:58:09,920
keep your reader in mind and really

1149
00:58:09,920 --> 00:58:12,160
optimize for their experience when

1150
00:58:12,160 --> 00:58:15,359
you're writing your article

1151
00:58:15,760 --> 00:58:18,480
uh thanks and please ask any questions

1152
00:58:18,480 --> 00:58:20,799
inside out and if you have any private

1153
00:58:20,799 --> 00:58:22,799
questions about this talk either about

1154
00:58:22,799 --> 00:58:25,680
writing about publishing about blogging

1155
00:58:25,680 --> 00:58:30,240
feel free to dm me as well on twitter

1156
00:58:33,680 --> 00:58:34,720
alright

1157
00:58:34,720 --> 00:58:36,720
thank you vicky

1158
00:58:36,720 --> 00:58:38,720
so we're already running a little bit

1159
00:58:38,720 --> 00:58:40,880
late so we'll take a two minute break

1160
00:58:40,880 --> 00:58:44,000
before our next talk so see you in two

1161
00:58:44,000 --> 00:58:47,000
minutes

1162
00:58:59,240 --> 00:59:15,698
[Music]

1163
00:59:19,740 --> 01:00:13,759
[Music]

1164
01:00:18,950 --> 01:00:28,149
[Music]

1165
01:00:33,900 --> 01:01:25,879
[Music]

1166
01:01:28,470 --> 01:02:13,109
[Music]

1167
01:02:13,680 --> 01:02:16,680
so

1168
01:02:17,340 --> 01:02:20,989
[Music]

1169
01:02:28,079 --> 01:02:29,090
so

1170
01:02:29,090 --> 01:02:36,750
[Music]

1171
01:02:44,060 --> 01:03:10,160
[Music]

1172
01:03:10,160 --> 01:03:12,160
uh so i see a lot more people in the

1173
01:03:12,160 --> 01:03:14,240
room so that's pretty cool welcome

1174
01:03:14,240 --> 01:03:15,520
everyone

1175
01:03:15,520 --> 01:03:17,920
so for the second talk

1176
01:03:17,920 --> 01:03:19,599
can we see oh hi

1177
01:03:19,599 --> 01:03:20,559
all right

1178
01:03:20,559 --> 01:03:25,599
um hi so we have here hapai bhagav

1179
01:03:25,599 --> 01:03:28,839
he's the founder of we 45 and chief

1180
01:03:28,839 --> 01:03:31,760
researcher research officer at apsec

1181
01:03:31,760 --> 01:03:34,240
engineering he's focusing of course on

1182
01:03:34,240 --> 01:03:36,559
apsec

1183
01:03:36,559 --> 01:03:38,559
abbe is a builder and breaker of

1184
01:03:38,559 --> 01:03:41,119
application he's the chief architect of

1185
01:03:41,119 --> 01:03:43,280
orchestra a leading application

1186
01:03:43,280 --> 01:03:45,839
vulnerability correlation orchestration

1187
01:03:45,839 --> 01:03:46,960
framework

1188
01:03:46,960 --> 01:03:49,599
he has created some pioneer works in the

1189
01:03:49,599 --> 01:03:52,720
area of dev setups and abstech

1190
01:03:52,720 --> 01:03:55,599
automation including the world first

1191
01:03:55,599 --> 01:03:57,680
hands on training program of death

1192
01:03:57,680 --> 01:03:58,880
setups

1193
01:03:58,880 --> 01:04:02,400
focus on application security automation

1194
01:04:02,400 --> 01:04:05,119
apai is a speaker and trainer at major

1195
01:04:05,119 --> 01:04:07,839
industry event including defcon black

1196
01:04:07,839 --> 01:04:09,920
cat ops

1197
01:04:09,920 --> 01:04:12,480
and apsec kelly

1198
01:04:12,480 --> 01:04:15,440
and yeah so please join me in welcoming

1199
01:04:15,440 --> 01:04:18,720
up high for his talk today and we'll be

1200
01:04:18,720 --> 01:04:21,919
right with you after this

1201
01:04:22,799 --> 01:04:24,240
thank you

1202
01:04:24,240 --> 01:04:26,240
thank you so much uh thank you for the

1203
01:04:26,240 --> 01:04:28,079
introduction i really wish i could have

1204
01:04:28,079 --> 01:04:29,839
been there in person but

1205
01:04:29,839 --> 01:04:33,359
uh unfortunately uh travel is still a

1206
01:04:33,359 --> 01:04:35,839
little elusive uh at least to canada at

1207
01:04:35,839 --> 01:04:38,240
this point in time nevertheless i'm

1208
01:04:38,240 --> 01:04:39,680
really happy to be here this is my first

1209
01:04:39,680 --> 01:04:41,599
ever talk at not sec and i'm really

1210
01:04:41,599 --> 01:04:42,880
looking forward to it i'm looking

1211
01:04:42,880 --> 01:04:45,440
forward to hearing uh

1212
01:04:45,440 --> 01:04:47,280
getting some questions and comments on

1213
01:04:47,280 --> 01:04:50,160
the talk that i have as well um

1214
01:04:50,160 --> 01:04:52,160
so i'm gonna quickly get to it because i

1215
01:04:52,160 --> 01:04:53,760
have 30 minutes and i don't have too

1216
01:04:53,760 --> 01:04:56,079
much time and my talk is

1217
01:04:56,079 --> 01:04:58,400
loaded with a lot of content so

1218
01:04:58,400 --> 01:05:01,359
i'm gonna quickly start sharing

1219
01:05:01,359 --> 01:05:03,039
my screen

1220
01:05:03,039 --> 01:05:06,160
um i'm guessing everyone is able to see

1221
01:05:06,160 --> 01:05:07,520
my screen

1222
01:05:07,520 --> 01:05:10,400
uh yeah okay sorry about that i i think

1223
01:05:10,400 --> 01:05:11,200
you're

1224
01:05:11,200 --> 01:05:13,760
yeah i'm presenting from one screen so

1225
01:05:13,760 --> 01:05:15,839
i'm uh this is unlike probably most

1226
01:05:15,839 --> 01:05:17,119
speakers who are going to be doing it

1227
01:05:17,119 --> 01:05:20,319
remote i'm just gonna start my slide

1228
01:05:20,319 --> 01:05:22,720
deck and i'm gonna get started

1229
01:05:22,720 --> 01:05:24,079
um

1230
01:05:24,079 --> 01:05:27,280
all right so uh this stock actually is a

1231
01:05:27,280 --> 01:05:30,079
culmination of uh a bunch of research

1232
01:05:30,079 --> 01:05:34,160
efforts from 2021 uh that is now being

1233
01:05:34,160 --> 01:05:36,799
showcased all over so this is called

1234
01:05:36,799 --> 01:05:39,280
hookline and syncer pillaging api web

1235
01:05:39,280 --> 01:05:40,400
hooks now

1236
01:05:40,400 --> 01:05:42,480
web hooks are something that

1237
01:05:42,480 --> 01:05:44,480
a lot of us use and i'm sure

1238
01:05:44,480 --> 01:05:46,720
members of this audience as well are

1239
01:05:46,720 --> 01:05:48,960
quite familiar with what web hooks are

1240
01:05:48,960 --> 01:05:50,799
we're going to quickly get into what it

1241
01:05:50,799 --> 01:05:52,240
is and how it works and all of that

1242
01:05:52,240 --> 01:05:54,160
stuff and then i'm going to be looking

1243
01:05:54,160 --> 01:05:56,160
at attacking it and some case studies

1244
01:05:56,160 --> 01:05:58,319
around how we actually went about this

1245
01:05:58,319 --> 01:06:00,799
particular piece of research so just a

1246
01:06:00,799 --> 01:06:02,799
quick introduction my name is abhay i

1247
01:06:02,799 --> 01:06:04,559
work for a company called v45 and i'm

1248
01:06:04,559 --> 01:06:06,079
also uh

1249
01:06:06,079 --> 01:06:07,760
i'm also the chief research officer of

1250
01:06:07,760 --> 01:06:09,440
website engineer we run a training

1251
01:06:09,440 --> 01:06:11,359
platform on apps cloud security

1252
01:06:11,359 --> 01:06:13,839
kubernetes and so on uh i do a lot of

1253
01:06:13,839 --> 01:06:16,000
training i do a lot of talking i do a

1254
01:06:16,000 --> 01:06:18,880
lot of research on mostly defensive

1255
01:06:18,880 --> 01:06:20,640
stuff so this fight this talk actually

1256
01:06:20,640 --> 01:06:23,039
is a departure from my typical style of

1257
01:06:23,039 --> 01:06:26,319
talks which is way more defensive than

1258
01:06:26,319 --> 01:06:28,319
uh offensive so most of my research is

1259
01:06:28,319 --> 01:06:30,240
defensive but in this case the talk i'm

1260
01:06:30,240 --> 01:06:32,559
going to be focusing on is explicitly

1261
01:06:32,559 --> 01:06:34,799
offensive so i'm going to get started uh

1262
01:06:34,799 --> 01:06:36,720
with it uh if you're interested we have

1263
01:06:36,720 --> 01:06:38,720
a very interesting youtube channel where

1264
01:06:38,720 --> 01:06:40,160
you can check out a lot of interesting

1265
01:06:40,160 --> 01:06:42,000
stuff on appsec and so on and if you

1266
01:06:42,000 --> 01:06:43,680
want to check out my blog that's there

1267
01:06:43,680 --> 01:06:46,079
as well i highly encourage you ask your

1268
01:06:46,079 --> 01:06:48,400
questions on twitter because i am

1269
01:06:48,400 --> 01:06:50,559
currently suffering from a uh back

1270
01:06:50,559 --> 01:06:51,920
injury and i'm not going to be there for

1271
01:06:51,920 --> 01:06:54,640
a q a session on on the uh not sex

1272
01:06:54,640 --> 01:06:56,799
channel so if you want to ask questions

1273
01:06:56,799 --> 01:06:59,039
please reach out to me on twitter i'm

1274
01:06:59,039 --> 01:07:01,280
gonna respond i'm barely holding it

1275
01:07:01,280 --> 01:07:03,119
together sitting and talking right now

1276
01:07:03,119 --> 01:07:05,200
just on a lot of payments so that's i

1277
01:07:05,200 --> 01:07:06,559
just wanted to let you know that if you

1278
01:07:06,559 --> 01:07:08,319
want q a please reach out to me on

1279
01:07:08,319 --> 01:07:10,079
twitter that's the best way that i can

1280
01:07:10,079 --> 01:07:11,359
respond to you

1281
01:07:11,359 --> 01:07:14,000
all right so my talk today is gonna be

1282
01:07:14,000 --> 01:07:17,440
full of memes uh i'm sure uh i'm i'm not

1283
01:07:17,440 --> 01:07:19,920
sure how many uh presenters use memes in

1284
01:07:19,920 --> 01:07:21,760
in not sec but my talk is gonna be

1285
01:07:21,760 --> 01:07:24,319
nauseatingly full of memes and i have

1286
01:07:24,319 --> 01:07:26,640
one live demo as well so i am going to

1287
01:07:26,640 --> 01:07:28,799
have to pray to the demo i'm gonna have

1288
01:07:28,799 --> 01:07:30,400
to ask all of you to pray to the

1289
01:07:30,400 --> 01:07:32,720
demogods on my behalf so that everything

1290
01:07:32,720 --> 01:07:35,039
works because live demos as they go a

1291
01:07:35,039 --> 01:07:36,880
lot of things can go really really wrong

1292
01:07:36,880 --> 01:07:38,480
so i'm hoping that everything goes

1293
01:07:38,480 --> 01:07:40,480
pretty well i did test it before i just

1294
01:07:40,480 --> 01:07:43,119
started but you know things can go wrong

1295
01:07:43,119 --> 01:07:45,280
uh every single time so you never never

1296
01:07:45,280 --> 01:07:47,680
really know anyway today's agenda is

1297
01:07:47,680 --> 01:07:49,599
going to be pretty quickly uh what are

1298
01:07:49,599 --> 01:07:50,960
web hooks how do they work we're going

1299
01:07:50,960 --> 01:07:52,799
to get into this pretty quickly i have

1300
01:07:52,799 --> 01:07:54,640
30 minutes so i'm not going to take too

1301
01:07:54,640 --> 01:07:57,280
much time in the explanatory segments

1302
01:07:57,280 --> 01:07:58,880
we're going to be looking at some common

1303
01:07:58,880 --> 01:08:01,039
web hook attack patterns and this attack

1304
01:08:01,039 --> 01:08:03,119
is not in the common web hook attack

1305
01:08:03,119 --> 01:08:04,880
pattern so the attack that i'm going to

1306
01:08:04,880 --> 01:08:07,599
be referring to in this specific

1307
01:08:07,599 --> 01:08:10,400
presentation is not a very commonly seen

1308
01:08:10,400 --> 01:08:12,799
attack but i think it has the potential

1309
01:08:12,799 --> 01:08:15,760
to really uh explode on the scene we've

1310
01:08:15,760 --> 01:08:17,839
seen it explored on the scene uh at

1311
01:08:17,839 --> 01:08:19,600
least with the kind of bug bounty

1312
01:08:19,600 --> 01:08:21,040
targets that we've been working with

1313
01:08:21,040 --> 01:08:23,520
it's it's really uh performed really

1314
01:08:23,520 --> 01:08:25,679
well against a lot of these targets

1315
01:08:25,679 --> 01:08:27,040
we're going to do a quick introduction

1316
01:08:27,040 --> 01:08:29,279
to ssrf because that's the underpinning

1317
01:08:29,279 --> 01:08:32,000
of this an ssrf i'm sure a lot of you

1318
01:08:32,000 --> 01:08:34,560
have heard of ssrf probably

1319
01:08:34,560 --> 01:08:36,399
do a lot of ssrf as part of your

1320
01:08:36,399 --> 01:08:39,040
offensive work or even do uh defend

1321
01:08:39,040 --> 01:08:41,198
against ssrf in which case i pity you

1322
01:08:41,198 --> 01:08:43,439
but nevertheless ssrf is something that

1323
01:08:43,439 --> 01:08:45,520
we're going to be focusing on this talk

1324
01:08:45,520 --> 01:08:47,279
is a lot about ssrf we're going to look

1325
01:08:47,279 --> 01:08:49,198
at ssrf we're going to look at a new

1326
01:08:49,198 --> 01:08:51,120
class of flaws that we dub web hook

1327
01:08:51,120 --> 01:08:53,120
boomerang flaws now these flaws have

1328
01:08:53,120 --> 01:08:54,799
been there there are they've been in and

1329
01:08:54,799 --> 01:08:56,960
around but they've not been as well

1330
01:08:56,960 --> 01:08:58,960
exploited i think as they could have

1331
01:08:58,960 --> 01:09:00,238
been so this is where we're going to be

1332
01:09:00,238 --> 01:09:02,238
talking about this is the meat of the uh

1333
01:09:02,238 --> 01:09:04,080
presentation and then i'll talk about

1334
01:09:04,080 --> 01:09:06,479
some sub variants and so on right so

1335
01:09:06,479 --> 01:09:08,560
basically when you are building an api

1336
01:09:08,560 --> 01:09:10,960
the first thought you have is

1337
01:09:10,960 --> 01:09:13,679
interaction right you want to respond to

1338
01:09:13,679 --> 01:09:15,198
events and one of the big things when

1339
01:09:15,198 --> 01:09:17,279
you're building an api is to respond to

1340
01:09:17,279 --> 01:09:19,279
events so when a new user is created or

1341
01:09:19,279 --> 01:09:21,439
when there's a new customer that signs

1342
01:09:21,439 --> 01:09:23,198
up or a new payment that comes in you

1343
01:09:23,198 --> 01:09:25,198
know blah blah blah whatever it is you

1344
01:09:25,198 --> 01:09:28,158
are typically dealing with events right

1345
01:09:28,158 --> 01:09:30,560
apis especially with apis you have a lot

1346
01:09:30,560 --> 01:09:32,560
of events that you want to deal with and

1347
01:09:32,560 --> 01:09:34,880
a lot of times when you are dealing with

1348
01:09:34,880 --> 01:09:36,799
events you need web hooks because you

1349
01:09:36,799 --> 01:09:39,759
need to post that event somewhere so let

1350
01:09:39,759 --> 01:09:40,560
us say

1351
01:09:40,560 --> 01:09:42,640
i'm a new e-commerce uh you know i'm a

1352
01:09:42,640 --> 01:09:44,880
new e-commerce merchant and i've set up

1353
01:09:44,880 --> 01:09:47,120
a new site on whatever and i'm using

1354
01:09:47,120 --> 01:09:50,000
stripe or proper fire what have you now

1355
01:09:50,000 --> 01:09:51,920
in that case the first thing that i'd

1356
01:09:51,920 --> 01:09:53,839
like to know is hey when am i getting

1357
01:09:53,839 --> 01:09:55,520
paid have i gotten this customer when

1358
01:09:55,520 --> 01:09:57,600
have i gotten this customer so web hooks

1359
01:09:57,600 --> 01:10:00,320
makes it really really powerful way for

1360
01:10:00,320 --> 01:10:02,719
your api to start reacting to these

1361
01:10:02,719 --> 01:10:04,719
events so when a new customer is created

1362
01:10:04,719 --> 01:10:07,280
you can send a web hook to slack and say

1363
01:10:07,280 --> 01:10:09,440
that hey a new customer signed up or you

1364
01:10:09,440 --> 01:10:12,080
received payment of this web hooks make

1365
01:10:12,080 --> 01:10:14,239
all of that possible right i'm sure a

1366
01:10:14,239 --> 01:10:15,520
lot of you have heard of web books most

1367
01:10:15,520 --> 01:10:17,199
of you probably dealing with books on a

1368
01:10:17,199 --> 01:10:18,719
day-to-day basis most of you are

1369
01:10:18,719 --> 01:10:21,120
probably writing a lot of web books as

1370
01:10:21,120 --> 01:10:22,159
well

1371
01:10:22,159 --> 01:10:24,800
now so web hooks basically are user

1372
01:10:24,800 --> 01:10:27,679
generated callbacks so i set up a web

1373
01:10:27,679 --> 01:10:30,719
hook so i'm a user and i set up

1374
01:10:30,719 --> 01:10:32,800
something called a consumer so i say

1375
01:10:32,800 --> 01:10:35,440
that you know what whenever a new user

1376
01:10:35,440 --> 01:10:38,400
is created on my e-commerce store i want

1377
01:10:38,400 --> 01:10:41,360
you to make a webhook request to my

1378
01:10:41,360 --> 01:10:43,600
consumer app so i've written this app

1379
01:10:43,600 --> 01:10:46,239
somewhere here and i want you to make a

1380
01:10:46,239 --> 01:10:48,719
request to that so with a particular

1381
01:10:48,719 --> 01:10:51,199
json that says that this user with this

1382
01:10:51,199 --> 01:10:52,719
email with this whatever other

1383
01:10:52,719 --> 01:10:55,040
information is signed up so in a webhook

1384
01:10:55,040 --> 01:10:57,199
transaction there are typically two

1385
01:10:57,199 --> 01:10:58,719
entities that are involved one is the

1386
01:10:58,719 --> 01:11:01,360
provider which would be your shopify or

1387
01:11:01,360 --> 01:11:03,760
stripe or what have you any of the these

1388
01:11:03,760 --> 01:11:05,440
providers that are reacting to the

1389
01:11:05,440 --> 01:11:07,199
events and then there would be a

1390
01:11:07,199 --> 01:11:09,040
consumer that would actually be

1391
01:11:09,040 --> 01:11:11,360
receiving that event and saying that and

1392
01:11:11,360 --> 01:11:13,520
they're using it for processing whatever

1393
01:11:13,520 --> 01:11:15,520
they need to process right so this is a

1394
01:11:15,520 --> 01:11:17,679
very common uh setup that you have so

1395
01:11:17,679 --> 01:11:19,679
these are essentially user generated

1396
01:11:19,679 --> 01:11:21,840
callbacks right so that's how web hooks

1397
01:11:21,840 --> 01:11:24,719
work so uh in this case we have a web

1398
01:11:24,719 --> 01:11:26,480
hook setup when whenever a new user is

1399
01:11:26,480 --> 01:11:29,280
created uh there is this uh event that

1400
01:11:29,280 --> 01:11:31,360
is triggered that hits the consumer the

1401
01:11:31,360 --> 01:11:33,040
consumer app essentially

1402
01:11:33,040 --> 01:11:35,040
uses that to maybe store it or send them

1403
01:11:35,040 --> 01:11:36,880
an email or process it forward or

1404
01:11:36,880 --> 01:11:38,400
whatever they need to do right so these

1405
01:11:38,400 --> 01:11:41,520
are basically how web hooks work now web

1406
01:11:41,520 --> 01:11:43,280
hooks are literally everywhere right now

1407
01:11:43,280 --> 01:11:45,280
you'll see web hooks in not only apps

1408
01:11:45,280 --> 01:11:48,400
like stripe and zapier and shopify and

1409
01:11:48,400 --> 01:11:50,400
all of that jazz you see this all over

1410
01:11:50,400 --> 01:11:52,320
the place you see this with kubernetes

1411
01:11:52,320 --> 01:11:54,880
you see that with ci cd systems uh you

1412
01:11:54,880 --> 01:11:57,280
see it with ci cd systems i would say

1413
01:11:57,280 --> 01:11:59,520
use them extensively right any kind of

1414
01:11:59,520 --> 01:12:02,320
build systems or ci cd tool use web

1415
01:12:02,320 --> 01:12:05,199
hooks all over the place even basic

1416
01:12:05,199 --> 01:12:07,360
even apps that are related to marketing

1417
01:12:07,360 --> 01:12:09,440
automation and so on use web hooks

1418
01:12:09,440 --> 01:12:11,520
extensively anything that needs to

1419
01:12:11,520 --> 01:12:13,120
integrate with a whole bunch of other

1420
01:12:13,120 --> 01:12:15,199
applications especially through event

1421
01:12:15,199 --> 01:12:17,040
driven workflows web hooks are the

1422
01:12:17,040 --> 01:12:18,800
number one way to do that and it's very

1423
01:12:18,800 --> 01:12:21,120
popular very commonly seen pattern that

1424
01:12:21,120 --> 01:12:23,440
you do in fact companies like zapier i'm

1425
01:12:23,440 --> 01:12:26,000
sure you've realized also they run their

1426
01:12:26,000 --> 01:12:28,159
entire business on top of running web

1427
01:12:28,159 --> 01:12:29,760
hooks or triggering web hooks as

1428
01:12:29,760 --> 01:12:32,640
consumers and providers depending on who

1429
01:12:32,640 --> 01:12:34,480
they are in the piece of the transaction

1430
01:12:34,480 --> 01:12:36,960
now common web hooks are traits at least

1431
01:12:36,960 --> 01:12:38,719
they're event driven they're typically

1432
01:12:38,719 --> 01:12:40,880
post request which is basically post

1433
01:12:40,880 --> 01:12:43,199
json of course you still have the odd

1434
01:12:43,199 --> 01:12:45,679
xml one but most of them today are post

1435
01:12:45,679 --> 01:12:48,400
json which means they post json uh to

1436
01:12:48,400 --> 01:12:51,679
the consumer uh they also uh you know

1437
01:12:51,679 --> 01:12:53,920
they also are sometimes protected by

1438
01:12:53,920 --> 01:12:56,640
hmac or api keys with an http header so

1439
01:12:56,640 --> 01:12:59,520
just to ensure that the webhook consumer

1440
01:12:59,520 --> 01:13:01,600
is somebody that is actually legitimate

1441
01:13:01,600 --> 01:13:03,840
they also make uh you also need to

1442
01:13:03,840 --> 01:13:06,800
authenticate the uh transaction through

1443
01:13:06,800 --> 01:13:09,280
an hmac or an api key depending on the

1444
01:13:09,280 --> 01:13:10,960
kind of web book sometimes they're there

1445
01:13:10,960 --> 01:13:12,480
and sometimes they're not it really

1446
01:13:12,480 --> 01:13:14,480
depends on the provider and the kind of

1447
01:13:14,480 --> 01:13:16,560
configuration the provider is using and

1448
01:13:16,560 --> 01:13:18,719
of course in some cases

1449
01:13:18,719 --> 01:13:20,719
in some cases remember especially in the

1450
01:13:20,719 --> 01:13:23,360
case of build tools or ci cd tools you

1451
01:13:23,360 --> 01:13:25,760
will see that producer systems allow you

1452
01:13:25,760 --> 01:13:28,080
to add your own custom header so let's

1453
01:13:28,080 --> 01:13:30,320
say you need to add an api key for your

1454
01:13:30,320 --> 01:13:32,239
system or your application which is your

1455
01:13:32,239 --> 01:13:34,560
consumer application you can set up a

1456
01:13:34,560 --> 01:13:36,960
web hook with additional headers as well

1457
01:13:36,960 --> 01:13:38,800
you it's not only that you make you just

1458
01:13:38,800 --> 01:13:41,360
give it give it a url you might also be

1459
01:13:41,360 --> 01:13:43,199
able to add your own custom header so

1460
01:13:43,199 --> 01:13:46,480
that uh you can actually uh get your

1461
01:13:46,480 --> 01:13:48,239
event and that would be identified with

1462
01:13:48,239 --> 01:13:50,719
this http header with with a bunch of

1463
01:13:50,719 --> 01:13:52,320
custom headers right so that's basically

1464
01:13:52,320 --> 01:13:55,440
what the common web hook traits are

1465
01:13:55,440 --> 01:13:57,920
now if you come to think of it the

1466
01:13:57,920 --> 01:14:00,560
natural type of assumptions or attack

1467
01:14:00,560 --> 01:14:02,640
focus that one would have so let's say

1468
01:14:02,640 --> 01:14:04,560
you're a pen tester or somebody doing

1469
01:14:04,560 --> 01:14:06,400
offensive security on a web hook the

1470
01:14:06,400 --> 01:14:08,800
natural assumptions would be that let's

1471
01:14:08,800 --> 01:14:09,760
uh

1472
01:14:09,760 --> 01:14:11,679
let's let's try and compromise the

1473
01:14:11,679 --> 01:14:14,480
consumer most of the attacks are trying

1474
01:14:14,480 --> 01:14:17,199
to compromise the consumer right and to

1475
01:14:17,199 --> 01:14:19,440
prevent other kind of replays and things

1476
01:14:19,440 --> 01:14:21,600
like that again most of it is trying to

1477
01:14:21,600 --> 01:14:23,280
compromise the consumer so can i

1478
01:14:23,280 --> 01:14:24,480
compromise the consumer with the

1479
01:14:24,480 --> 01:14:26,320
deserialization payload which means that

1480
01:14:26,320 --> 01:14:27,760
let's say i put in some kind of

1481
01:14:27,760 --> 01:14:30,080
malicious json or yaml or whatever it is

1482
01:14:30,080 --> 01:14:33,199
can i run my code on the consumer can i

1483
01:14:33,199 --> 01:14:35,120
compromise a whole bunch of consumers

1484
01:14:35,120 --> 01:14:37,120
you know with an ecosystem style attack

1485
01:14:37,120 --> 01:14:39,199
can i tamper with the payload can can

1486
01:14:39,199 --> 01:14:41,440
the consumer detect tampered payload can

1487
01:14:41,440 --> 01:14:43,440
i replay the attacks can i

1488
01:14:43,440 --> 01:14:44,960
attack from unknown sources so it

1489
01:14:44,960 --> 01:14:46,239
depends on

1490
01:14:46,239 --> 01:14:47,199
whether

1491
01:14:47,199 --> 01:14:48,880
you know it is

1492
01:14:48,880 --> 01:14:50,960
whether the consumer is making the sorry

1493
01:14:50,960 --> 01:14:54,159
the provider can make random requests to

1494
01:14:54,159 --> 01:14:56,960
another consumer so a lot of these are

1495
01:14:56,960 --> 01:14:59,520
typical attack scenarios that you come

1496
01:14:59,520 --> 01:15:01,199
up with right so these are typical

1497
01:15:01,199 --> 01:15:02,880
attack scenarios that you see and a lot

1498
01:15:02,880 --> 01:15:04,800
of them and a lot of you i'm sure do

1499
01:15:04,800 --> 01:15:07,440
this as well so when you're trying to uh

1500
01:15:07,440 --> 01:15:09,360
can you do a replay can you run the same

1501
01:15:09,360 --> 01:15:10,880
transaction a whole bunch of times is

1502
01:15:10,880 --> 01:15:13,120
there a way for the consumer to detect

1503
01:15:13,120 --> 01:15:15,040
that it's a replay happening so all of

1504
01:15:15,040 --> 01:15:17,440
these things are natural attacks but in

1505
01:15:17,440 --> 01:15:19,440
our case what we're going to do is go

1506
01:15:19,440 --> 01:15:21,440
we're kind of flipping the script in

1507
01:15:21,440 --> 01:15:23,840
this case what we're trying to do is can

1508
01:15:23,840 --> 01:15:26,560
i compromise the provider our focus

1509
01:15:26,560 --> 01:15:28,800
today and our focus in this entire class

1510
01:15:28,800 --> 01:15:32,080
of attacks is can i compromise that

1511
01:15:32,080 --> 01:15:35,040
provider this provider that is sending

1512
01:15:35,040 --> 01:15:38,080
me the event payload can i compromise

1513
01:15:38,080 --> 01:15:40,800
that particular provider through some

1514
01:15:40,800 --> 01:15:42,640
type of attack so basically what i'm

1515
01:15:42,640 --> 01:15:45,360
trying to do in this case is that i have

1516
01:15:45,360 --> 01:15:47,679
a provider which is my you know stripe

1517
01:15:47,679 --> 01:15:49,600
shopify what have you i mean i'm just

1518
01:15:49,600 --> 01:15:51,120
using them as examples i'm not saying

1519
01:15:51,120 --> 01:15:52,560
that they're vulnerable please keep that

1520
01:15:52,560 --> 01:15:55,360
in mind so whatever i have this provider

1521
01:15:55,360 --> 01:15:58,080
now this provider makes a request

1522
01:15:58,080 --> 01:16:00,880
obviously sends this http request

1523
01:16:00,880 --> 01:16:03,520
to the consumer now the consumer

1524
01:16:03,520 --> 01:16:06,159
in turn instead of processing this

1525
01:16:06,159 --> 01:16:08,400
legitimately like a normal or a good

1526
01:16:08,400 --> 01:16:11,199
consumer would the consumer makes a

1527
01:16:11,199 --> 01:16:13,760
request or somehow finds a way of

1528
01:16:13,760 --> 01:16:15,120
attacking

1529
01:16:15,120 --> 01:16:17,440
and compromising the provider and the

1530
01:16:17,440 --> 01:16:19,679
internal applications of that provider

1531
01:16:19,679 --> 01:16:21,120
it could be a database it could be an

1532
01:16:21,120 --> 01:16:22,560
internal application it could be

1533
01:16:22,560 --> 01:16:24,960
metadata it could be whatever now as

1534
01:16:24,960 --> 01:16:27,040
soon as you think of a scenario like

1535
01:16:27,040 --> 01:16:30,000
this i'm sure the first thing that comes

1536
01:16:30,000 --> 01:16:32,080
to mind is

1537
01:16:32,080 --> 01:16:36,000
naturally ssrf right now ssrf is one of

1538
01:16:36,000 --> 01:16:38,239
those attacks that orients itself

1539
01:16:38,239 --> 01:16:40,560
towards doing something like this right

1540
01:16:40,560 --> 01:16:43,199
because ssrf allows you to redirect or

1541
01:16:43,199 --> 01:16:46,320
facilitates a redirect based on a user

1542
01:16:46,320 --> 01:16:48,480
controlled url so in this case it has

1543
01:16:48,480 --> 01:16:50,239
all the natural

1544
01:16:50,239 --> 01:16:52,719
makings of a classic ssrf attack the

1545
01:16:52,719 --> 01:16:57,280
idea here is that when i the user can

1546
01:16:57,280 --> 01:16:58,159
can

1547
01:16:58,159 --> 01:17:00,719
use a particular url of my choosing so

1548
01:17:00,719 --> 01:17:02,719
it could be a url that i can select or i

1549
01:17:02,719 --> 01:17:04,800
can enter or i can use as part of the

1550
01:17:04,800 --> 01:17:07,280
attributes and i can get this

1551
01:17:07,280 --> 01:17:09,040
application this target or victim

1552
01:17:09,040 --> 01:17:11,040
application to make

1553
01:17:11,040 --> 01:17:12,800
an internal request to one of their

1554
01:17:12,800 --> 01:17:15,120
internal urls or to a metadata url so

1555
01:17:15,120 --> 01:17:16,719
let's say i want to compromise aws

1556
01:17:16,719 --> 01:17:19,040
credentials i make a call to a metadata

1557
01:17:19,040 --> 01:17:21,679
url and that metadata url gets i get

1558
01:17:21,679 --> 01:17:23,280
access to the credentials and from there

1559
01:17:23,280 --> 01:17:24,960
i get those credentials and then start

1560
01:17:24,960 --> 01:17:28,320
exfiltrating information uh from aws i

1561
01:17:28,320 --> 01:17:30,159
can escalate privileges on top of your

1562
01:17:30,159 --> 01:17:32,480
aws account so this is ssr this is

1563
01:17:32,480 --> 01:17:34,800
classically ssrf right most of us are

1564
01:17:34,800 --> 01:17:36,400
aware of this most of us have seen this

1565
01:17:36,400 --> 01:17:39,760
ssrf is super common you see this in

1566
01:17:39,760 --> 01:17:42,480
nearly uh every third bug bounty report

1567
01:17:42,480 --> 01:17:45,360
uh at least is i mean

1568
01:17:45,360 --> 01:17:46,960
well i obviously don't have the exact

1569
01:17:46,960 --> 01:17:49,199
stats but ssrf is super popular it's

1570
01:17:49,199 --> 01:17:52,239
very very commonly seen now you see of

1571
01:17:52,239 --> 01:17:54,719
course ssrf you have a lot of attacks

1572
01:17:54,719 --> 01:17:56,800
the capital one breach where

1573
01:17:56,800 --> 01:17:59,440
the attacker was able to find ssrf on

1574
01:17:59,440 --> 01:18:02,159
the mod security uh smart security

1575
01:18:02,159 --> 01:18:03,920
deployed by capital one they were able

1576
01:18:03,920 --> 01:18:06,719
to use that get the make a call to the

1577
01:18:06,719 --> 01:18:10,120
internal 169.254.169.254.

1578
01:18:10,320 --> 01:18:12,560
aws metadata they were able to get the

1579
01:18:12,560 --> 01:18:15,360
credentials those credentials had a

1580
01:18:15,360 --> 01:18:18,080
large scope access to the amazon s3

1581
01:18:18,080 --> 01:18:19,520
infrastructure that was run by capital

1582
01:18:19,520 --> 01:18:21,360
one and they were able to gain access to

1583
01:18:21,360 --> 01:18:24,400
all those s3 buckets and exfiltrate a

1584
01:18:24,400 --> 01:18:26,560
whole bunch of user information from

1585
01:18:26,560 --> 01:18:28,320
there then of course you've constantly

1586
01:18:28,320 --> 01:18:30,080
seen this ssrf is super common you've

1587
01:18:30,080 --> 01:18:32,080
seen this as part of the proxy logon

1588
01:18:32,080 --> 01:18:35,040
exploit chain it is one of those one of

1589
01:18:35,040 --> 01:18:36,960
those extremely common and extremely

1590
01:18:36,960 --> 01:18:39,520
popular attacks that is also hard to

1591
01:18:39,520 --> 01:18:41,280
prevent by the way it's not very easy to

1592
01:18:41,280 --> 01:18:43,280
prevent ssrf there are a lot of

1593
01:18:43,280 --> 01:18:45,679
different nuances to prevent ssrf

1594
01:18:45,679 --> 01:18:47,520
anyway so the idea here is that with

1595
01:18:47,520 --> 01:18:49,760
ssrf you can do all of this stuff one of

1596
01:18:49,760 --> 01:18:52,320
the the reasons why ssrf has become so

1597
01:18:52,320 --> 01:18:54,560
popular is because ssrf is used

1598
01:18:54,560 --> 01:18:56,719
extensively to compromise cloud

1599
01:18:56,719 --> 01:18:57,840
environments so if you're running

1600
01:18:57,840 --> 01:19:01,360
kubernetes or aws or azure or gcp the

1601
01:19:01,360 --> 01:19:03,920
idea here is that you have some metadata

1602
01:19:03,920 --> 01:19:07,760
url or metadata file path and you can

1603
01:19:07,760 --> 01:19:10,080
access that particular file path gain

1604
01:19:10,080 --> 01:19:12,000
access to sensitive credentials that are

1605
01:19:12,000 --> 01:19:13,679
mounted on that particular file path or

1606
01:19:13,679 --> 01:19:15,920
url and then use that to escalate

1607
01:19:15,920 --> 01:19:18,000
privileges into the account ssrf can

1608
01:19:18,000 --> 01:19:20,320
also be you reading a remote file and

1609
01:19:20,320 --> 01:19:21,760
executing that through a remote code

1610
01:19:21,760 --> 01:19:23,679
execution it can be denial of service it

1611
01:19:23,679 --> 01:19:25,360
can be information disclosure so through

1612
01:19:25,360 --> 01:19:27,840
ssrf i'm able to access internal hosts

1613
01:19:27,840 --> 01:19:29,520
and those internal hosts have sensitive

1614
01:19:29,520 --> 01:19:31,120
information that could be information

1615
01:19:31,120 --> 01:19:34,360
disclosure so you have a wide array of

1616
01:19:34,360 --> 01:19:36,239
possibilities with what you can do with

1617
01:19:36,239 --> 01:19:39,360
ssrx so i'm sure a lot of you are aware

1618
01:19:39,360 --> 01:19:42,800
of this now here what we want to do is

1619
01:19:42,800 --> 01:19:44,560
leverage ssrf

1620
01:19:44,560 --> 01:19:47,280
against our provider so we want to use

1621
01:19:47,280 --> 01:19:49,120
this attack essentially as a boomerang

1622
01:19:49,120 --> 01:19:50,400
so what we want to do

1623
01:19:50,400 --> 01:19:52,960
is to say that look hey

1624
01:19:52,960 --> 01:19:55,040
the provider is going to make a request

1625
01:19:55,040 --> 01:19:58,400
to me the consumer i am an evil consumer

1626
01:19:58,400 --> 01:20:00,960
and i i get a request through the

1627
01:20:00,960 --> 01:20:03,520
provider now i want to be able to use

1628
01:20:03,520 --> 01:20:06,480
that same request chain against the

1629
01:20:06,480 --> 01:20:10,239
provider right so i want to redirect

1630
01:20:10,239 --> 01:20:14,400
a request back to the provider where i

1631
01:20:14,400 --> 01:20:16,320
do something where i'm able to

1632
01:20:16,320 --> 01:20:18,719
compromise internal assets so i'm the

1633
01:20:18,719 --> 01:20:21,440
idea here is that my provider makes a

1634
01:20:21,440 --> 01:20:23,520
webhook request whereas my consumer

1635
01:20:23,520 --> 01:20:25,679
redirects that particular request back

1636
01:20:25,679 --> 01:20:28,080
to an internal url or metadata or what

1637
01:20:28,080 --> 01:20:30,800
have you and i'm able to compromise that

1638
01:20:30,800 --> 01:20:32,320
as part of this now remember a lot of

1639
01:20:32,320 --> 01:20:34,639
times the reason that this also works is

1640
01:20:34,639 --> 01:20:37,120
because a lot of these providers store

1641
01:20:37,120 --> 01:20:39,199
previous results of web hook execution

1642
01:20:39,199 --> 01:20:41,679
right so for instance let's say i'm uh

1643
01:20:41,679 --> 01:20:43,920
i'm stripe and every single time i

1644
01:20:43,920 --> 01:20:46,080
receive a payment i trigger a web hook

1645
01:20:46,080 --> 01:20:47,920
or i've the user has configured a web

1646
01:20:47,920 --> 01:20:49,520
hook where i can trigger a web hook on

1647
01:20:49,520 --> 01:20:51,920
this particular on this particular event

1648
01:20:51,920 --> 01:20:55,440
now i keep a log of those

1649
01:20:55,440 --> 01:20:58,080
the requests and responses so stripe

1650
01:20:58,080 --> 01:21:00,159
maintains a log of that and a lot of

1651
01:21:00,159 --> 01:21:02,000
times you as the user are able to see

1652
01:21:02,000 --> 01:21:04,239
that log so the idea here is that the

1653
01:21:04,239 --> 01:21:06,159
consumer who's also a legitimate user of

1654
01:21:06,159 --> 01:21:08,560
the application wants to leverage this

1655
01:21:08,560 --> 01:21:10,880
attack and then use the web hook that

1656
01:21:10,880 --> 01:21:13,520
they have set up to compromise that

1657
01:21:13,520 --> 01:21:15,199
provider application or that victim

1658
01:21:15,199 --> 01:21:17,040
application right that's basically what

1659
01:21:17,040 --> 01:21:18,400
they want to do

1660
01:21:18,400 --> 01:21:21,120
but there is also a problem now if you

1661
01:21:21,120 --> 01:21:22,960
are familiar with ssrf you'll know that

1662
01:21:22,960 --> 01:21:24,600
ssrf works

1663
01:21:24,600 --> 01:21:26,480
extensively with

1664
01:21:26,480 --> 01:21:28,800
get requests right ssrf works when there

1665
01:21:28,800 --> 01:21:30,960
is a get request involved so when you

1666
01:21:30,960 --> 01:21:33,199
take a get request and you are able to

1667
01:21:33,199 --> 01:21:35,520
use another get request you can do ssrf

1668
01:21:35,520 --> 01:21:37,840
you can manage ssrf however

1669
01:21:37,840 --> 01:21:40,880
most of the web hooks right most

1670
01:21:40,880 --> 01:21:43,600
i'm not saying all but probably close to

1671
01:21:43,600 --> 01:21:46,320
all most web hooks make post requests or

1672
01:21:46,320 --> 01:21:48,400
put requests right because they are

1673
01:21:48,400 --> 01:21:50,239
sending data they're not only making a

1674
01:21:50,239 --> 01:21:51,679
get request there's no point of a get

1675
01:21:51,679 --> 01:21:54,000
request most of the time they are making

1676
01:21:54,000 --> 01:21:56,320
post requests because they're posting

1677
01:21:56,320 --> 01:21:58,719
json to that particular

1678
01:21:58,719 --> 01:22:00,960
consumer right so the idea here is that

1679
01:22:00,960 --> 01:22:03,120
you're getting a post request but how do

1680
01:22:03,120 --> 01:22:04,000
you

1681
01:22:04,000 --> 01:22:07,600
use that to make a uh to redirect that

1682
01:22:07,600 --> 01:22:09,520
into a get request that's so it's hard

1683
01:22:09,520 --> 01:22:12,480
to weaponize especially with pr ssrf so

1684
01:22:12,480 --> 01:22:14,960
this is where a very interesting header

1685
01:22:14,960 --> 01:22:17,360
comes in now there's a there's a header

1686
01:22:17,360 --> 01:22:20,239
which is a which is a very popular not i

1687
01:22:20,239 --> 01:22:21,840
wouldn't say very popular but at least a

1688
01:22:21,840 --> 01:22:24,320
well-known redirect header which is

1689
01:22:24,320 --> 01:22:27,120
called the http 303 redirect now the way

1690
01:22:27,120 --> 01:22:30,000
this works is that if you send it a post

1691
01:22:30,000 --> 01:22:31,440
or a put

1692
01:22:31,440 --> 01:22:35,120
this redirects as a get so you can set

1693
01:22:35,120 --> 01:22:37,440
up a redirect on your consumer

1694
01:22:37,440 --> 01:22:39,679
application that says hey whenever you

1695
01:22:39,679 --> 01:22:42,400
get a post request to this particular

1696
01:22:42,400 --> 01:22:44,400
path let's say whatever slash web hook

1697
01:22:44,400 --> 01:22:46,639
whatever you need to

1698
01:22:46,639 --> 01:22:49,679
303 redirected now a 303 redirect

1699
01:22:49,679 --> 01:22:52,400
automatically converts that

1700
01:22:52,400 --> 01:22:55,360
post request to a get request on the

1701
01:22:55,360 --> 01:22:57,600
redirect and it requests a particular

1702
01:22:57,600 --> 01:23:00,480
new location and that is where

1703
01:23:00,480 --> 01:23:02,800
this really works this attack really

1704
01:23:02,800 --> 01:23:06,320
works because 303 converts that redirect

1705
01:23:06,320 --> 01:23:08,960
into a get request and sends it back to

1706
01:23:08,960 --> 01:23:10,960
wherever you've redirected it now

1707
01:23:10,960 --> 01:23:13,120
obviously people creating the standard

1708
01:23:13,120 --> 01:23:14,800
didn't imagine that this would be the

1709
01:23:14,800 --> 01:23:16,480
case or this would be how it would use

1710
01:23:16,480 --> 01:23:18,960
but 303 allows that to happen right

1711
01:23:18,960 --> 01:23:21,360
unlike most other uh redirects that you

1712
01:23:21,360 --> 01:23:22,560
have

1713
01:23:22,560 --> 01:23:25,840
so um so the idea here is that the inner

1714
01:23:25,840 --> 01:23:29,199
response so whenever you have a http 303

1715
01:23:29,199 --> 01:23:31,520
which is c other it essentially says hey

1716
01:23:31,520 --> 01:23:33,920
this way please and makes it a get

1717
01:23:33,920 --> 01:23:35,840
request so basically redirects it as a

1718
01:23:35,840 --> 01:23:38,719
get request and your clients essentially

1719
01:23:38,719 --> 01:23:40,560
just follow along they just said oh okay

1720
01:23:40,560 --> 01:23:42,560
i need to redirect to this location so

1721
01:23:42,560 --> 01:23:44,000
i'm going to make a get request this

1722
01:23:44,000 --> 01:23:46,719
particular location and that request

1723
01:23:46,719 --> 01:23:48,719
turns now into a get request now which

1724
01:23:48,719 --> 01:23:52,239
means that you can leverage that ssrf in

1725
01:23:52,239 --> 01:23:54,800
full uh scope right so this is something

1726
01:23:54,800 --> 01:23:57,520
that 303 allows you to do so what we

1727
01:23:57,520 --> 01:23:59,520
want is essentially we want to provide

1728
01:23:59,520 --> 01:24:01,600
our application we want this webhook

1729
01:24:01,600 --> 01:24:04,000
request to come in and once this webhook

1730
01:24:04,000 --> 01:24:06,159
post request hits my consumer the

1731
01:24:06,159 --> 01:24:08,000
consumer remember the consumer is

1732
01:24:08,000 --> 01:24:09,520
another web application that's just

1733
01:24:09,520 --> 01:24:11,679
listening for these requests so as soon

1734
01:24:11,679 --> 01:24:14,239
as this post request comes in this sends

1735
01:24:14,239 --> 01:24:17,600
back an http 303 that redirects to an

1736
01:24:17,600 --> 01:24:21,280
internal metadata service like 169.254

1737
01:24:21,280 --> 01:24:22,880
or some localhost service or some

1738
01:24:22,880 --> 01:24:25,199
internal ip address whatever it is that

1739
01:24:25,199 --> 01:24:27,520
it's able to access that url and get

1740
01:24:27,520 --> 01:24:29,760
whatever information whatever

1741
01:24:29,760 --> 01:24:31,760
response that comes from that particular

1742
01:24:31,760 --> 01:24:33,360
url get request

1743
01:24:33,360 --> 01:24:35,679
is stored as part of the web hook logs

1744
01:24:35,679 --> 01:24:37,840
right so that's the idea so the attacker

1745
01:24:37,840 --> 01:24:39,440
wants to be able to do this because the

1746
01:24:39,440 --> 01:24:42,639
attacker wants to be able to store

1747
01:24:42,639 --> 01:24:44,880
redirect boomerang this attack back to

1748
01:24:44,880 --> 01:24:47,280
the provider get that provider to talk

1749
01:24:47,280 --> 01:24:49,120
to an internal metadata service steal

1750
01:24:49,120 --> 01:24:50,480
credentials and then use that in the

1751
01:24:50,480 --> 01:24:52,239
webhook logs use those stolen

1752
01:24:52,239 --> 01:24:54,800
credentials and escalate privileges into

1753
01:24:54,800 --> 01:24:57,520
their aws account or use that to access

1754
01:24:57,520 --> 01:24:59,600
an internal resource or what have you

1755
01:24:59,600 --> 01:25:01,040
right there are a whole bunch of things

1756
01:25:01,040 --> 01:25:03,120
that you can potentially do with this

1757
01:25:03,120 --> 01:25:04,320
now

1758
01:25:04,320 --> 01:25:06,320
this is something that

1759
01:25:06,320 --> 01:25:07,120
we

1760
01:25:07,120 --> 01:25:10,239
have extensively used against a whole

1761
01:25:10,239 --> 01:25:13,280
bunch of public bug bounty targets

1762
01:25:13,280 --> 01:25:15,920
wherever we've seen uh bug bounty system

1763
01:25:15,920 --> 01:25:18,560
wherever we had bounty programs we have

1764
01:25:18,560 --> 01:25:21,440
uh tried this out and it has had amazing

1765
01:25:21,440 --> 01:25:23,360
results the the kind of results we've

1766
01:25:23,360 --> 01:25:25,199
seen with the web hooks system that they

1767
01:25:25,199 --> 01:25:27,360
had have been quite amazing and we've

1768
01:25:27,360 --> 01:25:29,920
used this on docker and we were we were

1769
01:25:29,920 --> 01:25:32,800
able to use this successfully on docker

1770
01:25:32,800 --> 01:25:35,280
right now docker obviously as all of you

1771
01:25:35,280 --> 01:25:37,120
i'm sure a lot of you use docker every

1772
01:25:37,120 --> 01:25:38,639
day docker

1773
01:25:38,639 --> 01:25:40,800
is a massive service that allows you to

1774
01:25:40,800 --> 01:25:42,639
host your container images in their

1775
01:25:42,639 --> 01:25:45,040
container registry docker was the

1776
01:25:45,040 --> 01:25:46,639
original registry of course now you have

1777
01:25:46,639 --> 01:25:48,560
a whole bunch of other registries but we

1778
01:25:48,560 --> 01:25:51,040
were able to do this on docker we were

1779
01:25:51,040 --> 01:25:53,199
able to compromise and gain complete

1780
01:25:53,199 --> 01:25:55,840
access to their whatever their aws

1781
01:25:55,840 --> 01:25:58,080
credential provided which was quite uh

1782
01:25:58,080 --> 01:26:00,000
highly scoped at this particular point

1783
01:26:00,000 --> 01:26:01,600
in time so i'm going to explain how we

1784
01:26:01,600 --> 01:26:04,000
did this now in docker in docker hub

1785
01:26:04,000 --> 01:26:05,600
there is a functionality where you can

1786
01:26:05,600 --> 01:26:07,760
create your own web hook right so we

1787
01:26:07,760 --> 01:26:09,199
created a web hook

1788
01:26:09,199 --> 01:26:11,440
in this case and we set up the web hook

1789
01:26:11,440 --> 01:26:16,159
to a ngrc url uh to uh to a url that we

1790
01:26:16,159 --> 01:26:18,000
controlled of course and behind the

1791
01:26:18,000 --> 01:26:19,679
scenes we essentially wrote a small

1792
01:26:19,679 --> 01:26:21,280
piece of code that said hey you know

1793
01:26:21,280 --> 01:26:23,840
what whenever you uh

1794
01:26:23,840 --> 01:26:25,760
whenever you get a request a post

1795
01:26:25,760 --> 01:26:28,320
request here what we want you to do is

1796
01:26:28,320 --> 01:26:31,440
run a 303 redirect back to

1797
01:26:31,440 --> 01:26:34,159
uh you know

1798
01:26:34,360 --> 01:26:36,480
169.254.169.254. slash latest slash

1799
01:26:36,480 --> 01:26:39,199
metadata which is a very common uh path

1800
01:26:39,199 --> 01:26:42,800
for the metadata in an aws ec2 instance

1801
01:26:42,800 --> 01:26:45,040
or not only ec2 but any many other

1802
01:26:45,040 --> 01:26:46,880
compute instances of aws we're talking

1803
01:26:46,880 --> 01:26:47,679
about

1804
01:26:47,679 --> 01:26:50,080
elastic bean stock we're talking about

1805
01:26:50,080 --> 01:26:52,159
far gate i think fargate has a slightly

1806
01:26:52,159 --> 01:26:54,000
different ip address but

1807
01:26:54,000 --> 01:26:55,520
it's pretty much the same idea

1808
01:26:55,520 --> 01:26:57,600
regardless right so

1809
01:26:57,600 --> 01:26:59,760
but it is essentially gets you access to

1810
01:26:59,760 --> 01:27:01,760
the instance metadata on that particular

1811
01:27:01,760 --> 01:27:03,840
node and through that we were able to

1812
01:27:03,840 --> 01:27:06,000
identify this so once we did this we

1813
01:27:06,000 --> 01:27:08,000
pushed so this web hook would be

1814
01:27:08,000 --> 01:27:09,840
triggered every time

1815
01:27:09,840 --> 01:27:12,159
we pushed a new container image to this

1816
01:27:12,159 --> 01:27:14,400
particular um

1817
01:27:14,400 --> 01:27:16,560
to this particular docker registry uh

1818
01:27:16,560 --> 01:27:18,880
docker repository right so we pushed

1819
01:27:18,880 --> 01:27:21,040
this container image which was

1820
01:27:21,040 --> 01:27:23,440
generally a random container image and

1821
01:27:23,440 --> 01:27:26,719
once we did that we saw that the docker

1822
01:27:26,719 --> 01:27:29,440
hub the web hook trigger the docker hub

1823
01:27:29,440 --> 01:27:30,800
essentially was triggering the web hook

1824
01:27:30,800 --> 01:27:32,639
of course but we were not able to get

1825
01:27:32,639 --> 01:27:34,639
the web hook logs we were not able to

1826
01:27:34,639 --> 01:27:36,239
get the log of the web hook and when we

1827
01:27:36,239 --> 01:27:38,000
actually saw the request and responses

1828
01:27:38,000 --> 01:27:40,239
we found the webhook log in the request

1829
01:27:40,239 --> 01:27:42,080
it was not being shown up on screen but

1830
01:27:42,080 --> 01:27:44,400
we found the uh webhook log and in the

1831
01:27:44,400 --> 01:27:46,960
webhook log we found that they use the

1832
01:27:46,960 --> 01:27:49,679
metadata credential call the aws role

1833
01:27:49,679 --> 01:27:51,920
name called this right so prod whatever

1834
01:27:51,920 --> 01:27:54,320
whatever or something they use some aws

1835
01:27:54,320 --> 01:27:56,880
role name here and once we were once we

1836
01:27:56,880 --> 01:27:59,199
used that particular url in a subsequent

1837
01:27:59,199 --> 01:28:01,679
request we were able to dump the aws

1838
01:28:01,679 --> 01:28:04,159
credentials and as it so happens

1839
01:28:04,159 --> 01:28:07,040
those aws credentials were related to

1840
01:28:07,040 --> 01:28:09,679
their eks infrastructure that they were

1841
01:28:09,679 --> 01:28:12,320
used they used to run docker hub with

1842
01:28:12,320 --> 01:28:14,320
so the eks infrastructure and probably a

1843
01:28:14,320 --> 01:28:16,000
lot more we didn't go beyond this

1844
01:28:16,000 --> 01:28:18,159
because obviously we wanted to report it

1845
01:28:18,159 --> 01:28:20,000
as soon as possible in the interest of

1846
01:28:20,000 --> 01:28:22,880
uh vulnerability disclosure so

1847
01:28:22,880 --> 01:28:25,360
as soon as we found this and we and of

1848
01:28:25,360 --> 01:28:26,800
course they mentioned to us that this

1849
01:28:26,800 --> 01:28:29,840
was scoped to the eks cluster on amazon

1850
01:28:29,840 --> 01:28:30,719
and

1851
01:28:30,719 --> 01:28:32,560
obviously this means that this could

1852
01:28:32,560 --> 01:28:34,480
have been a much larger attack because

1853
01:28:34,480 --> 01:28:36,800
the docker hub which is which contains a

1854
01:28:36,800 --> 01:28:38,639
lot of the base images and the trusted

1855
01:28:38,639 --> 01:28:40,480
images potentially i don't know maybe

1856
01:28:40,480 --> 01:28:42,239
they could have been compromised as well

1857
01:28:42,239 --> 01:28:44,480
so the idea here was those aws

1858
01:28:44,480 --> 01:28:46,320
credentials we were able to identify and

1859
01:28:46,320 --> 01:28:49,920
using those aws credentials we were able

1860
01:28:49,920 --> 01:28:50,800
to

1861
01:28:50,800 --> 01:28:53,360
access their aws account we were

1862
01:28:53,360 --> 01:28:56,080
able to potentially compromise their aws

1863
01:28:56,080 --> 01:28:57,920
account and

1864
01:28:57,920 --> 01:29:00,400
gain access to whatever scope that

1865
01:29:00,400 --> 01:29:02,159
particular role and that particular

1866
01:29:02,159 --> 01:29:04,560
privilege is granted to that role could

1867
01:29:04,560 --> 01:29:06,639
provide us so this was a huge attack

1868
01:29:06,639 --> 01:29:07,920
simply because

1869
01:29:07,920 --> 01:29:10,480
docker is as you all know a extremely

1870
01:29:10,480 --> 01:29:13,760
public uh service that all of us use

1871
01:29:13,760 --> 01:29:15,520
and this could have had a pretty huge

1872
01:29:15,520 --> 01:29:18,080
impact so we immediately reported it to

1873
01:29:18,080 --> 01:29:20,320
them uh in fact we just did a get caller

1874
01:29:20,320 --> 01:29:22,320
identity and it was giving us a

1875
01:29:22,320 --> 01:29:25,920
legitimate uh role on their aws account

1876
01:29:25,920 --> 01:29:27,120
so

1877
01:29:27,120 --> 01:29:28,639
we were immediate we immediately

1878
01:29:28,639 --> 01:29:31,280
reported it to them and uh they of

1879
01:29:31,280 --> 01:29:32,960
course they fixed it in a matter of

1880
01:29:32,960 --> 01:29:34,639
about two hours as soon as we reported

1881
01:29:34,639 --> 01:29:36,560
it a couple of hours later they said

1882
01:29:36,560 --> 01:29:38,880
that we fixed it we re-ran the checks

1883
01:29:38,880 --> 01:29:40,880
and we had found that that actually

1884
01:29:40,880 --> 01:29:42,800
indeed fixed it so that is one of the

1885
01:29:42,800 --> 01:29:45,280
things uh we found and thankfully it was

1886
01:29:45,280 --> 01:29:47,600
fixed quite a while back so it's quite

1887
01:29:47,600 --> 01:29:50,159
uh this is not uh something that we need

1888
01:29:50,159 --> 01:29:51,679
to worry about anymore so they were able

1889
01:29:51,679 --> 01:29:54,639
to address it almost immediately

1890
01:29:54,639 --> 01:29:57,040
so we have i have a quick demo that i

1891
01:29:57,040 --> 01:29:59,040
have set up here as well i'm going to

1892
01:29:59,040 --> 01:30:00,480
quickly run this

1893
01:30:00,480 --> 01:30:02,320
now if you see here

1894
01:30:02,320 --> 01:30:04,239
we have our application so i'm just

1895
01:30:04,239 --> 01:30:06,080
going to quickly walk you through how

1896
01:30:06,080 --> 01:30:08,560
the demo works or the demo app so i have

1897
01:30:08,560 --> 01:30:10,560
a provider application as you can see

1898
01:30:10,560 --> 01:30:13,280
here and i have my evil web hook

1899
01:30:13,280 --> 01:30:15,600
consumer that i've set up now every time

1900
01:30:15,600 --> 01:30:17,679
i make a web hook

1901
01:30:17,679 --> 01:30:19,520
post request payload when i trigger a

1902
01:30:19,520 --> 01:30:21,760
post request payload here my evil

1903
01:30:21,760 --> 01:30:25,440
consumer with http 303 with a redirect

1904
01:30:25,440 --> 01:30:27,840
to a couchdb database so couchdb is a

1905
01:30:27,840 --> 01:30:30,320
very popular nosql database that you can

1906
01:30:30,320 --> 01:30:32,880
directly access through http like a rest

1907
01:30:32,880 --> 01:30:35,760
api so i'm the idea here is that i'm

1908
01:30:35,760 --> 01:30:38,480
going to use this to access my data

1909
01:30:38,480 --> 01:30:40,400
internally on the couch tv so couchdb

1910
01:30:40,400 --> 01:30:42,159
should not be exposed but because i'm

1911
01:30:42,159 --> 01:30:44,239
redirecting it and because this

1912
01:30:44,239 --> 01:30:46,480
application has access to couchdb the

1913
01:30:46,480 --> 01:30:49,440
idea here is to get this application to

1914
01:30:49,440 --> 01:30:51,360
connect to couchdb and store those

1915
01:30:51,360 --> 01:30:52,400
results

1916
01:30:52,400 --> 01:30:54,000
as part of the

1917
01:30:54,000 --> 01:30:56,320
web hook request and response

1918
01:30:56,320 --> 01:30:58,800
framework right so now let's quickly go

1919
01:30:58,800 --> 01:31:01,520
into this i've already set up the

1920
01:31:01,520 --> 01:31:03,199
demo i am running my

1921
01:31:03,199 --> 01:31:04,960
my application stack here so this i'm

1922
01:31:04,960 --> 01:31:06,719
running on our training platform on

1923
01:31:06,719 --> 01:31:09,840
appsec engineer in fact so uh now let's

1924
01:31:09,840 --> 01:31:11,440
uh i think i've already set up

1925
01:31:11,440 --> 01:31:12,639
everything i need

1926
01:31:12,639 --> 01:31:15,360
i'm just going to log in and explain how

1927
01:31:15,360 --> 01:31:18,080
the attack

1928
01:31:19,600 --> 01:31:22,080
so i have i'm going to login as the user

1929
01:31:22,080 --> 01:31:24,400
so this is me logging in as the user and

1930
01:31:24,400 --> 01:31:26,800
i get a jwt or you know an

1931
01:31:26,800 --> 01:31:29,120
authentication authorization token once

1932
01:31:29,120 --> 01:31:30,800
i have logged in as this particular user

1933
01:31:30,800 --> 01:31:35,120
right so uh if i do an echo dollar talk

1934
01:31:35,120 --> 01:31:37,360
i get this right so if i

1935
01:31:37,360 --> 01:31:39,840
if i just paste it here it's a genuine

1936
01:31:39,840 --> 01:31:44,000
chart that i can use on my application

1937
01:31:44,000 --> 01:31:46,000
so in this application so you'll see

1938
01:31:46,000 --> 01:31:49,840
that it's a valid jwp blah blah blah has

1939
01:31:49,840 --> 01:31:53,199
it's logged in right now i am going to

1940
01:31:53,199 --> 01:31:55,280
list the user's data so i'm going to

1941
01:31:55,280 --> 01:31:57,440
list the user's information as part of

1942
01:31:57,440 --> 01:32:00,159
my application so the user in this case

1943
01:32:00,159 --> 01:32:01,199
has

1944
01:32:01,199 --> 01:32:02,480
set up

1945
01:32:02,480 --> 01:32:04,880
a web hook and this web hook makes a

1946
01:32:04,880 --> 01:32:07,840
post request whenever a new build

1947
01:32:07,840 --> 01:32:09,679
happens so imagine that this is a ci cd

1948
01:32:09,679 --> 01:32:11,520
system and a new build happens this

1949
01:32:11,520 --> 01:32:12,400
triggers

1950
01:32:12,400 --> 01:32:16,159
a request to my um

1951
01:32:16,159 --> 01:32:17,840
to this particular url right so that's

1952
01:32:17,840 --> 01:32:19,760
basically what happens now i'm going to

1953
01:32:19,760 --> 01:32:21,840
quickly uh simulate this i'm going to

1954
01:32:21,840 --> 01:32:24,719
simulate a request in this case what i'm

1955
01:32:24,719 --> 01:32:27,440
going to do is here i have set up my web

1956
01:32:27,440 --> 01:32:28,239
hook

1957
01:32:28,239 --> 01:32:31,679
now in my web hook what i have done

1958
01:32:31,679 --> 01:32:33,600
is

1959
01:32:33,600 --> 01:32:37,360
i have set up my redirect url to

1960
01:32:37,360 --> 01:32:38,840
the

1961
01:32:38,840 --> 01:32:41,360
couchdb uh service so i've said that

1962
01:32:41,360 --> 01:32:42,560
whenever you're trying to do this

1963
01:32:42,560 --> 01:32:44,960
redirect it internally to a couchdb

1964
01:32:44,960 --> 01:32:48,320
instance so uh make a 303 request

1965
01:32:48,320 --> 01:32:50,639
back to the couchdb instance right i've

1966
01:32:50,639 --> 01:32:52,639
just set it up as a redirect so if you

1967
01:32:52,639 --> 01:32:54,480
see my code you'll see what i'm talking

1968
01:32:54,480 --> 01:32:55,360
about

1969
01:32:55,360 --> 01:32:57,440
uh you'll see that every single time a

1970
01:32:57,440 --> 01:33:01,520
request comes in make a 303 redirect

1971
01:33:01,520 --> 01:33:04,159
to this url this hook url that i've set

1972
01:33:04,159 --> 01:33:05,360
up right so that's basically what's

1973
01:33:05,360 --> 01:33:08,560
happened so i'm going to run my uh

1974
01:33:08,560 --> 01:33:12,080
hook this is me running my

1975
01:33:12,080 --> 01:33:15,520
web hook my malicious web hook and once

1976
01:33:15,520 --> 01:33:19,040
i make a request which is basically like

1977
01:33:19,040 --> 01:33:21,760
i'm going to trigger an event

1978
01:33:21,760 --> 01:33:24,480
you will see once i trigger an event

1979
01:33:24,480 --> 01:33:26,960
this this comes back with the

1980
01:33:26,960 --> 01:33:28,239
couchdb

1981
01:33:28,239 --> 01:33:32,480
all databases information so if i see

1982
01:33:32,560 --> 01:33:36,000
what is actually returned by this

1983
01:33:36,000 --> 01:33:37,840
you will see that the couchdb database

1984
01:33:37,840 --> 01:33:40,639
hack has a database called users now if

1985
01:33:40,639 --> 01:33:44,239
i change this request you are a hook uri

1986
01:33:44,239 --> 01:33:46,719
and i instead of all databases i make

1987
01:33:46,719 --> 01:33:49,199
this users now this is me still

1988
01:33:49,199 --> 01:33:51,120
escalating privileges

1989
01:33:51,120 --> 01:33:54,159
984 slash

1990
01:33:54,159 --> 01:33:56,239
user slash

1991
01:33:56,239 --> 01:33:58,959
all docs

1992
01:33:59,920 --> 01:34:02,080
sorry about that

1993
01:34:02,080 --> 01:34:04,239
return three

1994
01:34:04,239 --> 01:34:07,199
so every time my hook is reconfigured to

1995
01:34:07,199 --> 01:34:08,960
redirect to another location so in this

1996
01:34:08,960 --> 01:34:11,199
case now if i trigger another web hook

1997
01:34:11,199 --> 01:34:12,159
event

1998
01:34:12,159 --> 01:34:16,080
you will see that it fetches oops

1999
01:34:16,800 --> 01:34:19,840
i'm not sure what happened

2000
01:34:21,360 --> 01:34:23,519
okay

2001
01:34:26,320 --> 01:34:30,159
i think there's something wrong with the

2002
01:34:30,159 --> 01:34:33,839
url that i was trying to access

2003
01:34:35,600 --> 01:34:38,000
oh that was the issue sorry looks like

2004
01:34:38,000 --> 01:34:40,480
i've added

2005
01:34:40,480 --> 01:34:45,159
some unnecessary characters here

2006
01:34:47,360 --> 01:34:49,599
and

2007
01:34:53,920 --> 01:34:56,480
so let me just rerun the

2008
01:34:56,480 --> 01:34:59,360
the web hook simulation

2009
01:34:59,360 --> 01:35:00,880
yeah i think i only have it so you'll

2010
01:35:00,880 --> 01:35:03,119
see that it returned with a whole bunch

2011
01:35:03,119 --> 01:35:04,960
of characters

2012
01:35:04,960 --> 01:35:06,300
so if i do echo

2013
01:35:06,300 --> 01:35:08,000
[Music]

2014
01:35:08,000 --> 01:35:11,440
like we should just done the jq here

2015
01:35:11,440 --> 01:35:13,280
so you'll see that it returned all these

2016
01:35:13,280 --> 01:35:15,119
user values right so these are just user

2017
01:35:15,119 --> 01:35:17,280
ids but of course i can fetch pretty

2018
01:35:17,280 --> 01:35:19,040
much anything at this particular point

2019
01:35:19,040 --> 01:35:22,639
in time now so this was the demo of how

2020
01:35:22,639 --> 01:35:25,600
this would work right now of course one

2021
01:35:25,600 --> 01:35:27,119
of the common things is okay this is a

2022
01:35:27,119 --> 01:35:29,119
get request what's so great yeah in many

2023
01:35:29,119 --> 01:35:31,119
cases you if you have metadata a lot of

2024
01:35:31,119 --> 01:35:34,080
times those metadata uh

2025
01:35:34,080 --> 01:35:36,800
to access cloud metadata if it's not aws

2026
01:35:36,800 --> 01:35:38,480
in many cases you have to add additional

2027
01:35:38,480 --> 01:35:40,800
headers but a lot of times you will see

2028
01:35:40,800 --> 01:35:44,320
that a lot of services allow you to add

2029
01:35:44,320 --> 01:35:46,639
custom headers right to the web hook so

2030
01:35:46,639 --> 01:35:48,320
in that case one of the things you can

2031
01:35:48,320 --> 01:35:50,800
do is add custom headers so in this case

2032
01:35:50,800 --> 01:35:53,040
we were able to compromise a ci system

2033
01:35:53,040 --> 01:35:55,600
where they were using gcp and because we

2034
01:35:55,600 --> 01:35:57,199
were able to add custom headers we were

2035
01:35:57,199 --> 01:35:59,679
able to simulate a system where we were

2036
01:35:59,679 --> 01:36:01,760
able to add the metadata flavor header

2037
01:36:01,760 --> 01:36:04,080
which means that this would make a get

2038
01:36:04,080 --> 01:36:07,679
request to the gcp metadata with that

2039
01:36:07,679 --> 01:36:09,920
mandatory http header which is metadata

2040
01:36:09,920 --> 01:36:11,679
flow of google and through that we were

2041
01:36:11,679 --> 01:36:13,360
able to still perform this attack so if

2042
01:36:13,360 --> 01:36:15,040
you have a webhook system that allows

2043
01:36:15,040 --> 01:36:16,880
for custom headers you have that

2044
01:36:16,880 --> 01:36:19,040
possibility as well

2045
01:36:19,040 --> 01:36:21,280
uh i don't think i think i've run out of

2046
01:36:21,280 --> 01:36:23,280
time now i'm just going to quickly run

2047
01:36:23,280 --> 01:36:25,360
through the defense uh the first thing

2048
01:36:25,360 --> 01:36:26,639
you have to do is

2049
01:36:26,639 --> 01:36:28,639
one of the simplest things that you

2050
01:36:28,639 --> 01:36:30,800
should do for this is to not follow a

2051
01:36:30,800 --> 01:36:33,199
redirect so when you have a web hook set

2052
01:36:33,199 --> 01:36:34,639
up when you're when you're using apis

2053
01:36:34,639 --> 01:36:36,639
and you're using webhook functionality

2054
01:36:36,639 --> 01:36:38,480
the first thing you have to

2055
01:36:38,480 --> 01:36:40,960
do is turn off follow redirect on your

2056
01:36:40,960 --> 01:36:43,600
http client uh that it that would

2057
01:36:43,600 --> 01:36:45,280
essentially bring down the possibility

2058
01:36:45,280 --> 01:36:47,840
of this attack by quite a bit you have

2059
01:36:47,840 --> 01:36:49,440
to figure out what type of http client

2060
01:36:49,440 --> 01:36:51,600
you're using and not follow redirect in

2061
01:36:51,600 --> 01:36:53,360
that particular http client that's

2062
01:36:53,360 --> 01:36:54,880
something that you have to do of course

2063
01:36:54,880 --> 01:36:56,960
you can add additional uh security

2064
01:36:56,960 --> 01:36:58,719
elements like network security policy

2065
01:36:58,719 --> 01:37:00,480
you can add dns so that

2066
01:37:00,480 --> 01:37:02,480
it does not resolve to a local internal

2067
01:37:02,480 --> 01:37:05,119
ip address you can add a validating

2068
01:37:05,119 --> 01:37:06,960
validation for the web hook url although

2069
01:37:06,960 --> 01:37:08,320
it's a little difficult to do if you

2070
01:37:08,320 --> 01:37:11,600
have a publicly uh public

2071
01:37:11,600 --> 01:37:13,920
where users are providing their own urls

2072
01:37:13,920 --> 01:37:16,320
that may be difficult to do or you might

2073
01:37:16,320 --> 01:37:18,000
have an ip deny list to say that

2074
01:37:18,000 --> 01:37:20,960
anything that tries to talk to 169.254

2075
01:37:20,960 --> 01:37:23,280
or localhost or 10 series or whatever it

2076
01:37:23,280 --> 01:37:25,679
is you do not allow that in your webhook

2077
01:37:25,679 --> 01:37:27,679
url so these are some of the areas of

2078
01:37:27,679 --> 01:37:30,560
defense that you can use um

2079
01:37:30,560 --> 01:37:32,639
that's really it conclusions again where

2080
01:37:32,639 --> 01:37:34,000
books are a very powerful way to

2081
01:37:34,000 --> 01:37:36,400
integrate but again with these kind of

2082
01:37:36,400 --> 01:37:38,239
boomerang attacks you can have a very

2083
01:37:38,239 --> 01:37:40,320
serious set of issues with webhooks so

2084
01:37:40,320 --> 01:37:42,800
definitely look at those possibilities

2085
01:37:42,800 --> 01:37:44,800
and consider this as part of your threat

2086
01:37:44,800 --> 01:37:46,159
model i think the first thing you should

2087
01:37:46,159 --> 01:37:47,360
do is consider this as part of your

2088
01:37:47,360 --> 01:37:49,679
threat model that really makes it a lot

2089
01:37:49,679 --> 01:37:50,480
more

2090
01:37:50,480 --> 01:37:52,080
powerful for you to think about these

2091
01:37:52,080 --> 01:37:54,480
type of attacks and how you can

2092
01:37:54,480 --> 01:37:56,000
potentially get hosed by these kind of

2093
01:37:56,000 --> 01:37:58,000
attacks so that's something you'll see

2094
01:37:58,000 --> 01:38:00,719
ssrf of course is the attacker's very

2095
01:38:00,719 --> 01:38:03,520
good friend in this particular case

2096
01:38:03,520 --> 01:38:06,000
now with that i come to the end of my

2097
01:38:06,000 --> 01:38:08,159
talk i realized that it was probably a

2098
01:38:08,159 --> 01:38:10,000
little rushed but i hope i was able to

2099
01:38:10,000 --> 01:38:11,600
convey

2100
01:38:11,600 --> 01:38:13,440
everything i wanted to convey

2101
01:38:13,440 --> 01:38:15,280
and i hope it was useful thank you so

2102
01:38:15,280 --> 01:38:17,360
much for having me

2103
01:38:17,360 --> 01:38:18,400
and

2104
01:38:18,400 --> 01:38:21,040
that's really it

2105
01:38:25,920 --> 01:38:29,960
all right thank you so much

2106
01:38:30,320 --> 01:38:32,480
i think there's some echo

2107
01:38:32,480 --> 01:38:33,440
all right

2108
01:38:33,440 --> 01:38:34,560
um

2109
01:38:34,560 --> 01:38:35,679
so

2110
01:38:35,679 --> 01:38:38,480
a quick break again this time so a few

2111
01:38:38,480 --> 01:38:40,560
minutes two to five

2112
01:38:40,560 --> 01:38:43,360
and the next speaker will be live so

2113
01:38:43,360 --> 01:38:44,880
it's pretty exciting

2114
01:38:44,880 --> 01:38:47,520
we're kind of shifting in second gear

2115
01:38:47,520 --> 01:38:48,239
for

2116
01:38:48,239 --> 01:38:50,239
our next section of the talk if you do

2117
01:38:50,239 --> 01:38:51,520
have question

2118
01:38:51,520 --> 01:38:54,560
please um for a hop high please go on

2119
01:38:54,560 --> 01:38:56,480
twitter he's not going to be part of the

2120
01:38:56,480 --> 01:38:58,960
q a session at the end and

2121
01:38:58,960 --> 01:39:01,679
don't forget for the next speaker if you

2122
01:39:01,679 --> 01:39:04,080
have any question go on slido and we'll

2123
01:39:04,080 --> 01:39:08,840
answer them during the talk merci

2124
01:39:10,180 --> 01:39:33,580
[Music]

2125
01:39:38,200 --> 01:39:41,679
[Music]

2126
01:39:44,750 --> 01:39:53,489
[Music]

2127
01:39:56,250 --> 01:40:04,400
[Music]

2128
01:40:04,400 --> 01:40:06,580
do

2129
01:40:06,580 --> 01:40:09,729
[Music]

2130
01:40:13,750 --> 01:40:32,270
[Music]

2131
01:40:37,530 --> 01:40:40,769
[Music]

2132
01:40:43,560 --> 01:40:46,669
[Music]

2133
01:40:53,850 --> 01:40:56,939
[Music]

2134
01:41:04,150 --> 01:41:20,059
[Music]

2135
01:41:24,480 --> 01:41:28,469
[Music]

2136
01:41:30,530 --> 01:41:44,409
[Music]

2137
01:41:54,920 --> 01:41:58,050
[Music]

2138
01:42:07,760 --> 01:42:23,210
[Music]

2139
01:42:32,020 --> 01:42:39,720
[Music]

2140
01:42:47,330 --> 01:42:50,930
[Music]

2141
01:42:53,700 --> 01:42:56,849
[Music]

2142
01:43:04,020 --> 01:43:11,470
[Music]

2143
01:43:14,310 --> 01:43:18,480
[Music]

2144
01:43:18,480 --> 01:43:21,480
so

2145
01:43:25,520 --> 01:43:44,639
[Music]

2146
01:43:44,639 --> 01:43:47,390
so

2147
01:43:47,390 --> 01:43:54,569
[Music]

2148
01:44:02,260 --> 01:44:08,229
[Music]

2149
01:44:17,940 --> 01:44:33,379
[Music]

2150
01:44:36,420 --> 01:44:39,499
[Music]

2151
01:44:42,740 --> 01:44:48,260
[Music]

2152
01:44:57,800 --> 01:45:05,369
[Music]

2153
01:45:18,530 --> 01:45:31,619
[Music]

2154
01:45:35,690 --> 01:45:42,290
[Music]

2155
01:45:44,780 --> 01:46:04,250
[Music]

2156
01:46:06,880 --> 01:46:09,880
do

2157
01:46:15,330 --> 01:46:18,460
[Music]

2158
01:46:21,940 --> 01:46:25,059
[Music]

2159
01:46:46,760 --> 01:46:53,950
[Music]

2160
01:46:57,060 --> 01:47:00,119
[Music]

2161
01:47:08,160 --> 01:47:15,619
[Music]

2162
01:47:29,840 --> 01:47:32,840
do

2163
01:47:37,320 --> 01:47:47,280
[Music]

2164
01:47:47,280 --> 01:47:50,480
welcome back i see a lot more faces this

2165
01:47:50,480 --> 01:47:53,440
is very exciting again all right so

2166
01:47:53,440 --> 01:47:56,080
we'll have our third talk today

2167
01:47:56,080 --> 01:47:57,280
please uh

2168
01:47:57,280 --> 01:48:00,560
let's welcome you see wise man yosi is a

2169
01:48:00,560 --> 01:48:02,639
senior security researcher in the cloud

2170
01:48:02,639 --> 01:48:04,719
security research team yeah welcome in

2171
01:48:04,719 --> 01:48:06,159
come on in

2172
01:48:06,159 --> 01:48:08,239
he has more than 10 years of experience

2173
01:48:08,239 --> 01:48:10,400
in security research field

2174
01:48:10,400 --> 01:48:13,280
starting in israeli military he's his

2175
01:48:13,280 --> 01:48:15,760
current role

2176
01:48:15,760 --> 01:48:17,600
in his current role he focus on

2177
01:48:17,600 --> 01:48:19,600
container security

2178
01:48:19,600 --> 01:48:22,639
all right so please

2179
01:48:22,639 --> 01:48:25,440
thank you very much

2180
01:48:28,320 --> 01:48:30,639
hello

2181
01:48:30,719 --> 01:48:33,679
uh hello uh i'm josie

2182
01:48:33,679 --> 01:48:35,840
first of all it's very nice to be here

2183
01:48:35,840 --> 01:48:37,920
um i'm jose weisman i'm a senior

2184
01:48:37,920 --> 01:48:40,560
security researcher at microsoft and

2185
01:48:40,560 --> 01:48:42,719
today i'm going to talk about lateral

2186
01:48:42,719 --> 01:48:44,719
movements in kubernetes

2187
01:48:44,719 --> 01:48:48,239
um so this is the agenda for today um we

2188
01:48:48,239 --> 01:48:50,080
are going to start with a short overview

2189
01:48:50,080 --> 01:48:51,760
of kubernetes

2190
01:48:51,760 --> 01:48:53,280
then we'll talk about identity types in

2191
01:48:53,280 --> 01:48:54,560
kubernetes

2192
01:48:54,560 --> 01:48:56,880
we'll speak about lateral movements

2193
01:48:56,880 --> 01:48:59,520
both in the cluster and from the cluster

2194
01:48:59,520 --> 01:49:01,520
to outside resources

2195
01:49:01,520 --> 01:49:04,639
and then we'll have some takeaways

2196
01:49:04,639 --> 01:49:07,280
so let's start

2197
01:49:07,760 --> 01:49:09,920
so first

2198
01:49:09,920 --> 01:49:12,800
what is kubernetes but before that what

2199
01:49:12,800 --> 01:49:15,360
are containers so

2200
01:49:15,360 --> 01:49:17,040
containers

2201
01:49:17,040 --> 01:49:19,040
container is a unit of software that

2202
01:49:19,040 --> 01:49:20,880
packages your code your application's

2203
01:49:20,880 --> 01:49:23,199
code with all of its dependencies so you

2204
01:49:23,199 --> 01:49:25,119
can run it everywhere without worrying

2205
01:49:25,119 --> 01:49:27,360
about your dependencies

2206
01:49:27,360 --> 01:49:29,679
the executable itself is called image

2207
01:49:29,679 --> 01:49:32,880
and at runtime images become containers

2208
01:49:32,880 --> 01:49:36,320
which are run isolated from each other

2209
01:49:36,320 --> 01:49:38,880
now usually it's not enough to run one

2210
01:49:38,880 --> 01:49:41,040
container on one computer you want to

2211
01:49:41,040 --> 01:49:43,440
run multiple containers on multiple vms

2212
01:49:43,440 --> 01:49:45,040
or computers

2213
01:49:45,040 --> 01:49:46,880
and you need to manage it somehow and

2214
01:49:46,880 --> 01:49:49,280
that's why you have kubernetes

2215
01:49:49,280 --> 01:49:52,719
kubernetes is a container orchestrator

2216
01:49:52,719 --> 01:49:54,960
and it basically manages a cluster of

2217
01:49:54,960 --> 01:49:57,760
container cluster of computers each run

2218
01:49:57,760 --> 01:50:00,719
each computer runs multiple containers

2219
01:50:00,719 --> 01:50:02,540
so let's see how it looks like

2220
01:50:02,540 --> 01:50:04,000
[Music]

2221
01:50:04,000 --> 01:50:06,639
so this is a kubernetes cluster and you

2222
01:50:06,639 --> 01:50:08,960
can see that it has two main parts it

2223
01:50:08,960 --> 01:50:10,560
has the control plan

2224
01:50:10,560 --> 01:50:12,880
which is like the brain of the cluster

2225
01:50:12,880 --> 01:50:15,119
and we have the nodes which run the

2226
01:50:15,119 --> 01:50:17,760
actual compute actual containers

2227
01:50:17,760 --> 01:50:19,679
so um

2228
01:50:19,679 --> 01:50:22,159
the control plan has several components

2229
01:50:22,159 --> 01:50:23,520
um

2230
01:50:23,520 --> 01:50:25,920
the what's especially interesting for us

2231
01:50:25,920 --> 01:50:27,920
is the api server which is like the

2232
01:50:27,920 --> 01:50:30,000
front end of the cluster so every

2233
01:50:30,000 --> 01:50:31,360
request

2234
01:50:31,360 --> 01:50:33,840
um to the cluster goes via the api

2235
01:50:33,840 --> 01:50:35,280
server for example if you want to create

2236
01:50:35,280 --> 01:50:36,960
new containers it goes through the api

2237
01:50:36,960 --> 01:50:38,560
syllable if you want to list all the

2238
01:50:38,560 --> 01:50:41,199
resources in your cluster it goes via

2239
01:50:41,199 --> 01:50:43,199
the api server so that's what's

2240
01:50:43,199 --> 01:50:44,960
especially important for us to this

2241
01:50:44,960 --> 01:50:47,520
session and then we have the nodes which

2242
01:50:47,520 --> 01:50:50,080
run the containers and each node also

2243
01:50:50,080 --> 01:50:51,920
have

2244
01:50:51,920 --> 01:50:54,080
an agent that is called kublet which

2245
01:50:54,080 --> 01:50:56,480
allows kubernetes to manage that node

2246
01:50:56,480 --> 01:50:57,260
that computer

2247
01:50:57,260 --> 01:50:58,560
[Music]

2248
01:50:58,560 --> 01:50:59,520
um

2249
01:50:59,520 --> 01:51:02,000
in managed clusters in the cloud such as

2250
01:51:02,000 --> 01:51:07,360
aks in azure eks in amazon or on gcp

2251
01:51:07,360 --> 01:51:10,560
in google gke sorry in google

2252
01:51:10,560 --> 01:51:12,719
the control plan is fully managed by the

2253
01:51:12,719 --> 01:51:14,639
cloud provider so you as a user don't

2254
01:51:14,639 --> 01:51:18,480
have direct access to that control plan

2255
01:51:18,480 --> 01:51:21,280
in kubernetes we usually don't talk

2256
01:51:21,280 --> 01:51:23,599
about containers because containers are

2257
01:51:23,599 --> 01:51:25,920
not kubernetes objects we're talking

2258
01:51:25,920 --> 01:51:27,599
about pods which are the lowest level

2259
01:51:27,599 --> 01:51:29,599
components in kubernetes

2260
01:51:29,599 --> 01:51:31,440
um so in this session also we're going

2261
01:51:31,440 --> 01:51:33,920
to talk about pods usually users don't

2262
01:51:33,920 --> 01:51:36,159
even deploy pods they deploy higher

2263
01:51:36,159 --> 01:51:38,320
level components but since pods are the

2264
01:51:38,320 --> 01:51:39,760
lowest level components in kubernetes

2265
01:51:39,760 --> 01:51:42,239
we'll focus on parts

2266
01:51:42,239 --> 01:51:45,119
pod can run one or more containers

2267
01:51:45,119 --> 01:51:48,639
that share resources

2268
01:51:48,800 --> 01:51:51,679
so in this session we'll concentrate on

2269
01:51:51,679 --> 01:51:53,360
pods

2270
01:51:53,360 --> 01:51:55,760
so now that we know what is kubernetes

2271
01:51:55,760 --> 01:51:57,280
let's talk about identity types in

2272
01:51:57,280 --> 01:51:59,040
kubernetes and we can split it into

2273
01:51:59,040 --> 01:52:00,960
three main areas

2274
01:52:00,960 --> 01:52:03,440
so the first one is how users from

2275
01:52:03,440 --> 01:52:04,880
outside the clusters like the

2276
01:52:04,880 --> 01:52:07,440
administrator can authenticate with the

2277
01:52:07,440 --> 01:52:08,400
cluster

2278
01:52:08,400 --> 01:52:10,880
who is the api server actually the

2279
01:52:10,880 --> 01:52:13,040
second topic is how applications in the

2280
01:52:13,040 --> 01:52:15,520
cluster authenticate with the cluster

2281
01:52:15,520 --> 01:52:18,080
and again with the api server and the

2282
01:52:18,080 --> 01:52:19,920
third is how applications in the cluster

2283
01:52:19,920 --> 01:52:21,760
authenticate with resources outside the

2284
01:52:21,760 --> 01:52:25,280
cluster in the cloud so in this talk we

2285
01:52:25,280 --> 01:52:28,080
are going to focus on questions two and

2286
01:52:28,080 --> 01:52:30,159
three because that's what's important

2287
01:52:30,159 --> 01:52:33,040
for us for lateral movement

2288
01:52:33,040 --> 01:52:34,320
so what is lateral movement in

2289
01:52:34,320 --> 01:52:35,760
kubernetes

2290
01:52:35,760 --> 01:52:36,960
so

2291
01:52:36,960 --> 01:52:38,320
um

2292
01:52:38,320 --> 01:52:40,960
back in 2020 um

2293
01:52:40,960 --> 01:52:42,480
so this is the threat metrics to

2294
01:52:42,480 --> 01:52:44,159
kubernetes

2295
01:52:44,159 --> 01:52:46,639
which we released at microsoft back in

2296
01:52:46,639 --> 01:52:48,719
2020

2297
01:52:48,719 --> 01:52:51,199
the threat metrics is a knowledge base

2298
01:52:51,199 --> 01:52:54,080
of attacking techniques of kubernetes

2299
01:52:54,080 --> 01:52:56,400
and it was actually the first attempt to

2300
01:52:56,400 --> 01:52:58,560
systematically map the attack landscape

2301
01:52:58,560 --> 01:53:01,520
of kubernetes last year in 2021 we

2302
01:53:01,520 --> 01:53:03,760
released a second version

2303
01:53:03,760 --> 01:53:05,920
and as you can see we used the format of

2304
01:53:05,920 --> 01:53:07,199
minor attack

2305
01:53:07,199 --> 01:53:08,800
probably many of you familiar with minor

2306
01:53:08,800 --> 01:53:11,360
attack and last year mitre released

2307
01:53:11,360 --> 01:53:14,159
their own metrics for containers as part

2308
01:53:14,159 --> 01:53:16,239
of mitre attack framework

2309
01:53:16,239 --> 01:53:18,719
that was actually a result of a joint

2310
01:53:18,719 --> 01:53:21,280
project of mitre with other companies

2311
01:53:21,280 --> 01:53:23,280
including us at microsoft

2312
01:53:23,280 --> 01:53:25,040
if you want to read if you want to hear

2313
01:53:25,040 --> 01:53:26,960
more about the threat metrics and the

2314
01:53:26,960 --> 01:53:28,880
differences between the threat metrics

2315
01:53:28,880 --> 01:53:30,960
and minor attack you can watch our

2316
01:53:30,960 --> 01:53:33,920
session at kubecon from few months ago

2317
01:53:33,920 --> 01:53:35,599
but um for now we can see that the

2318
01:53:35,599 --> 01:53:38,000
lateral moment has many techniques and

2319
01:53:38,000 --> 01:53:41,119
um we're going to cover um some of them

2320
01:53:41,119 --> 01:53:43,440
during this session

2321
01:53:43,440 --> 01:53:44,880
so we're going to start with inner

2322
01:53:44,880 --> 01:53:46,880
cluster lateral movement

2323
01:53:46,880 --> 01:53:48,080
um

2324
01:53:48,080 --> 01:53:50,400
but first we know we should know some

2325
01:53:50,400 --> 01:53:53,360
basic terms of cluster authentication

2326
01:53:53,360 --> 01:53:55,520
and authorization the first term is

2327
01:53:55,520 --> 01:53:58,159
service account which represent an

2328
01:53:58,159 --> 01:54:01,119
identity of application in kubernetes

2329
01:54:01,119 --> 01:54:03,520
um kubernetes uses arbuck role-based

2330
01:54:03,520 --> 01:54:04,960
access control it's not unique for

2331
01:54:04,960 --> 01:54:07,040
kubernetes of course

2332
01:54:07,040 --> 01:54:09,760
and arbuck has roles which is set of

2333
01:54:09,760 --> 01:54:12,639
permissions and role binding which which

2334
01:54:12,639 --> 01:54:16,719
attached um identities to the roles

2335
01:54:16,719 --> 01:54:18,400
so for example here we have service

2336
01:54:18,400 --> 01:54:20,719
accounts one two and three and we have

2337
01:54:20,719 --> 01:54:22,880
roles one two and three and you can see

2338
01:54:22,880 --> 01:54:25,679
that service account one has roles one

2339
01:54:25,679 --> 01:54:27,760
and two and role three has service

2340
01:54:27,760 --> 01:54:30,000
account two and three attached to it so

2341
01:54:30,000 --> 01:54:32,000
this is our buck and that's how albac

2342
01:54:32,000 --> 01:54:34,880
works in kubernetes

2343
01:54:34,880 --> 01:54:37,199
so service accounts can be mounted into

2344
01:54:37,199 --> 01:54:39,679
pods allowing the pods to authenticate

2345
01:54:39,679 --> 01:54:42,320
with the api server so the full chains

2346
01:54:42,320 --> 01:54:44,320
look like this we have pod the pod has

2347
01:54:44,320 --> 01:54:46,320
service account mounted to it service

2348
01:54:46,320 --> 01:54:48,159
account has rolls

2349
01:54:48,159 --> 01:54:50,480
attached to it and each role has

2350
01:54:50,480 --> 01:54:53,520
permissions which are the rules

2351
01:54:53,520 --> 01:54:56,239
so here's our cluster again and now we

2352
01:54:56,239 --> 01:54:59,520
know um that we have service account in

2353
01:54:59,520 --> 01:55:01,199
the pods for example for the a service

2354
01:55:01,199 --> 01:55:02,880
account and with that service account it

2355
01:55:02,880 --> 01:55:05,360
can communicate with the api server

2356
01:55:05,360 --> 01:55:07,040
so let's talk about the lateral movement

2357
01:55:07,040 --> 01:55:08,960
so what is electrical movement inside

2358
01:55:08,960 --> 01:55:09,800
the cluster

2359
01:55:09,800 --> 01:55:11,199
[Music]

2360
01:55:11,199 --> 01:55:13,520
so let's assume that we have a part that

2361
01:55:13,520 --> 01:55:15,840
is compromised and how pods can become

2362
01:55:15,840 --> 01:55:17,360
compromised so for example if the pod

2363
01:55:17,360 --> 01:55:19,280
runs a container which runs a web

2364
01:55:19,280 --> 01:55:20,960
application and that web application is

2365
01:55:20,960 --> 01:55:23,280
vulnerable and somebody exploited it so

2366
01:55:23,280 --> 01:55:25,360
now we have a vulnerable container uh

2367
01:55:25,360 --> 01:55:27,440
sorry i'm compromised a container or

2368
01:55:27,440 --> 01:55:29,520
compromised pod in our cluster

2369
01:55:29,520 --> 01:55:31,360
so let's say the part a is now

2370
01:55:31,360 --> 01:55:33,760
compromised so what is lateral movement

2371
01:55:33,760 --> 01:55:36,000
it could be a movement between one part

2372
01:55:36,000 --> 01:55:38,400
to another part in the cluster

2373
01:55:38,400 --> 01:55:40,800
it can also be a movement between a pod

2374
01:55:40,800 --> 01:55:43,280
to a node in the cluster

2375
01:55:43,280 --> 01:55:45,520
and if attacker get access to a node

2376
01:55:45,520 --> 01:55:47,199
usually it means that attacker can

2377
01:55:47,199 --> 01:55:49,119
perform a full cluster takeover because

2378
01:55:49,119 --> 01:55:51,520
the node has a strong permission it has

2379
01:55:51,520 --> 01:55:54,159
an identity in the cluster and if the

2380
01:55:54,159 --> 01:55:56,719
attacker has access to the node it can

2381
01:55:56,719 --> 01:55:58,000
read

2382
01:55:58,000 --> 01:55:58,719
the

2383
01:55:58,719 --> 01:56:01,040
permit the credentials of the talk of

2384
01:56:01,040 --> 01:56:03,040
that identity and perform a full cluster

2385
01:56:03,040 --> 01:56:05,760
takeover so usually access to a no to a

2386
01:56:05,760 --> 01:56:09,599
node allowing um takeover of the cluster

2387
01:56:09,599 --> 01:56:14,080
so the key point here is that attackers

2388
01:56:14,080 --> 01:56:18,320
can use the service accounts of the pods

2389
01:56:18,320 --> 01:56:20,239
in order to move laterally in the

2390
01:56:20,239 --> 01:56:22,239
cluster

2391
01:56:22,239 --> 01:56:24,960
so we have pod and the pod has a service

2392
01:56:24,960 --> 01:56:27,360
account and the attacker can use it

2393
01:56:27,360 --> 01:56:30,480
so which permissions might lead to inner

2394
01:56:30,480 --> 01:56:32,080
cluster electrical movement in other

2395
01:56:32,080 --> 01:56:33,040
words

2396
01:56:33,040 --> 01:56:35,119
which permissions the service account of

2397
01:56:35,119 --> 01:56:37,280
the compromise spot should have to allow

2398
01:56:37,280 --> 01:56:39,760
the attacker to perform lateral movement

2399
01:56:39,760 --> 01:56:41,840
and the answer is that there are many

2400
01:56:41,840 --> 01:56:44,400
permissions that might may lead to

2401
01:56:44,400 --> 01:56:46,719
literal movement and we are going to see

2402
01:56:46,719 --> 01:56:49,520
two uh um two examples real world

2403
01:56:49,520 --> 01:56:50,960
examples that we saw in real

2404
01:56:50,960 --> 01:56:52,480
environments

2405
01:56:52,480 --> 01:56:54,639
so the first example is the lead

2406
01:56:54,639 --> 01:56:57,440
permission to secret

2407
01:56:57,440 --> 01:57:00,480
so kubernetes secrets are objects that

2408
01:57:00,480 --> 01:57:02,800
store sensitive data in kubernetes for

2409
01:57:02,800 --> 01:57:04,560
example if you have an application that

2410
01:57:04,560 --> 01:57:05,920
needs a

2411
01:57:05,920 --> 01:57:08,639
connection string or password you can

2412
01:57:08,639 --> 01:57:10,960
store it as a kubernetes secret and then

2413
01:57:10,960 --> 01:57:13,760
load it into your running app

2414
01:57:13,760 --> 01:57:17,360
kubernetes itself uses kubernetes uses

2415
01:57:17,360 --> 01:57:19,520
secrets to store

2416
01:57:19,520 --> 01:57:22,320
tokens of the service accounts

2417
01:57:22,320 --> 01:57:24,320
so if attacker has permissions to read

2418
01:57:24,320 --> 01:57:26,880
those secrets uh they can steal the

2419
01:57:26,880 --> 01:57:29,599
tokens of the service accounts so in

2420
01:57:29,599 --> 01:57:33,119
this example um on the left we can see

2421
01:57:33,119 --> 01:57:34,880
a role definition that allows reading

2422
01:57:34,880 --> 01:57:37,199
all the secrets in the cluster so if the

2423
01:57:37,199 --> 01:57:40,800
compromised pod has this permission

2424
01:57:40,800 --> 01:57:42,560
it can allow it it can allow the

2425
01:57:42,560 --> 01:57:45,119
attacker to use um this permission to

2426
01:57:45,119 --> 01:57:46,080
read the

2427
01:57:46,080 --> 01:57:48,960
token of a privileged service account

2428
01:57:48,960 --> 01:57:51,119
and in that way to move laterally in the

2429
01:57:51,119 --> 01:57:53,119
cluster so let's see an example

2430
01:57:53,119 --> 01:57:56,159
support a um has read permissions so now

2431
01:57:56,159 --> 01:57:58,800
pod a can the attacker

2432
01:57:58,800 --> 01:58:01,760
can request the token to

2433
01:58:01,760 --> 01:58:04,960
a privileged service account token and

2434
01:58:04,960 --> 01:58:06,800
with that token it can impersonate that

2435
01:58:06,800 --> 01:58:09,520
service account and now the attacker can

2436
01:58:09,520 --> 01:58:10,880
move laterally in the cluster for

2437
01:58:10,880 --> 01:58:13,280
example it can deploy a new container or

2438
01:58:13,280 --> 01:58:14,880
it can change the configuration of an

2439
01:58:14,880 --> 01:58:17,040
existing containers to run its own

2440
01:58:17,040 --> 01:58:20,440
malicious code

2441
01:58:20,800 --> 01:58:21,840
so

2442
01:58:21,840 --> 01:58:23,440
that was the first example now we're

2443
01:58:23,440 --> 01:58:25,360
going to see another example of a

2444
01:58:25,360 --> 01:58:26,880
permission that allowing lateral

2445
01:58:26,880 --> 01:58:28,560
movement and this is self-update

2446
01:58:28,560 --> 01:58:31,040
permissions and this one is based on a

2447
01:58:31,040 --> 01:58:32,719
vulnerability that we recently

2448
01:58:32,719 --> 01:58:35,520
discovered

2449
01:58:35,520 --> 01:58:37,520
and the root cause in that vulnerability

2450
01:58:37,520 --> 01:58:40,320
was self-update permission now in this

2451
01:58:40,320 --> 01:58:42,960
case what happened is that application

2452
01:58:42,960 --> 01:58:46,480
had permissions to update themselves

2453
01:58:46,480 --> 01:58:49,599
now it sounds maybe harmless because you

2454
01:58:49,599 --> 01:58:51,520
can update only it yourself

2455
01:58:51,520 --> 01:58:53,520
but it means that applications could

2456
01:58:53,520 --> 01:58:55,520
change their own configuration and

2457
01:58:55,520 --> 01:58:56,800
specifically turn their own

2458
01:58:56,800 --> 01:58:59,040
configuration into privileged

2459
01:58:59,040 --> 01:59:01,840
and if you change your own permission

2460
01:59:01,840 --> 01:59:03,440
your own configuration into privileged

2461
01:59:03,440 --> 01:59:05,040
it means that now you have a privileged

2462
01:59:05,040 --> 01:59:07,199
container in the cluster which allows

2463
01:59:07,199 --> 01:59:09,679
access to the underlying node and again

2464
01:59:09,679 --> 01:59:11,280
if you have access to the underlying

2465
01:59:11,280 --> 01:59:13,440
node in most cases it means that you can

2466
01:59:13,440 --> 01:59:15,440
perform a cluster takeover so let's see

2467
01:59:15,440 --> 01:59:17,280
how it looks like so pod a has a

2468
01:59:17,280 --> 01:59:18,400
permission to change its own

2469
01:59:18,400 --> 01:59:21,199
configuration

2470
01:59:21,199 --> 01:59:23,520
um so we turned itself into privileged

2471
01:59:23,520 --> 01:59:26,960
now a new part is deployed this time the

2472
01:59:26,960 --> 01:59:29,679
pod runs a privileged container so we

2473
01:59:29,679 --> 01:59:30,560
have

2474
01:59:30,560 --> 01:59:32,800
the new container here

2475
01:59:32,800 --> 01:59:35,360
the new pod and from that

2476
01:59:35,360 --> 01:59:36,960
from that part the attacker can access

2477
01:59:36,960 --> 01:59:38,800
to the underlying node and perform

2478
01:59:38,800 --> 01:59:41,679
cluster takeover

2479
01:59:42,080 --> 01:59:42,880
so

2480
01:59:42,880 --> 01:59:45,599
those were two examples of permissions

2481
01:59:45,599 --> 01:59:47,840
in kubernetes albuquerque that allowed

2482
01:59:47,840 --> 01:59:50,159
lateral movement in the cluster

2483
01:59:50,159 --> 01:59:52,239
so now for mitigation detection how we

2484
01:59:52,239 --> 01:59:55,119
as defenders can prevent it

2485
01:59:55,119 --> 01:59:57,119
so first is adhere to the least

2486
01:59:57,119 --> 01:59:59,440
privilege principle which means don't

2487
01:59:59,440 --> 02:00:01,360
give service account permissions they

2488
02:00:01,360 --> 02:00:02,960
don't need

2489
02:00:02,960 --> 02:00:05,440
second in most cases your pods don't

2490
02:00:05,440 --> 02:00:07,920
even need any access to the api server

2491
02:00:07,920 --> 02:00:11,280
they don't need any service account

2492
02:00:11,280 --> 02:00:12,960
by default

2493
02:00:12,960 --> 02:00:15,840
kubernetes loads or mounts a service

2494
02:00:15,840 --> 02:00:18,239
account to each pod

2495
02:00:18,239 --> 02:00:20,400
but you can disable it so in the pod

2496
02:00:20,400 --> 02:00:22,400
configuration you can specify that you

2497
02:00:22,400 --> 02:00:24,560
don't want a service account so if your

2498
02:00:24,560 --> 02:00:26,800
application doesn't need access to the

2499
02:00:26,800 --> 02:00:28,560
api server just

2500
02:00:28,560 --> 02:00:31,280
don't mount service account

2501
02:00:31,280 --> 02:00:33,280
and as for mitigations

2502
02:00:33,280 --> 02:00:34,960
so what we need to do basically is to

2503
02:00:34,960 --> 02:00:37,599
monitor the api server of kubernetes and

2504
02:00:37,599 --> 02:00:39,360
luckily we have a very powerful tool to

2505
02:00:39,360 --> 02:00:41,520
do it and it's native in kubernetes and

2506
02:00:41,520 --> 02:00:44,400
that is the kubernetes audit log which

2507
02:00:44,400 --> 02:00:47,280
allows you to basically see every

2508
02:00:47,280 --> 02:00:49,920
operation in the api server in that way

2509
02:00:49,920 --> 02:00:52,880
you can find suspicion deployment of a

2510
02:00:52,880 --> 02:00:55,119
container with suspicious images you can

2511
02:00:55,119 --> 02:00:57,520
find deployment of pods with suspicious

2512
02:00:57,520 --> 02:00:58,880
configurations

2513
02:00:58,880 --> 02:01:01,679
such as privileged containers

2514
02:01:01,679 --> 02:01:03,599
and you can also monitor suspicious or

2515
02:01:03,599 --> 02:01:06,560
sensitive api operations such as read

2516
02:01:06,560 --> 02:01:07,840
secrets

2517
02:01:07,840 --> 02:01:10,719
from kubernetes

2518
02:01:11,840 --> 02:01:13,440
all right so

2519
02:01:13,440 --> 02:01:16,560
we talked about um inner cluster lateral

2520
02:01:16,560 --> 02:01:18,719
movement now let's move to cluster to

2521
02:01:18,719 --> 02:01:20,320
cloud lateral movement

2522
02:01:20,320 --> 02:01:22,000
which is in my opinion even more

2523
02:01:22,000 --> 02:01:24,239
interesting

2524
02:01:24,239 --> 02:01:26,880
so um

2525
02:01:26,880 --> 02:01:29,920
workloads in kubernetes may need access

2526
02:01:29,920 --> 02:01:32,560
to cloud resources for example let's say

2527
02:01:32,560 --> 02:01:34,639
that we have an application that needs

2528
02:01:34,639 --> 02:01:36,480
to store data many applications need to

2529
02:01:36,480 --> 02:01:38,880
store data so we can use cloud storage

2530
02:01:38,880 --> 02:01:41,599
for that now if we use cloud storage so

2531
02:01:41,599 --> 02:01:44,320
we need to authenticate with that cloud

2532
02:01:44,320 --> 02:01:46,239
storage so we need to access to cloud

2533
02:01:46,239 --> 02:01:47,440
resource

2534
02:01:47,440 --> 02:01:50,080
in case of managed clusters such as aks

2535
02:01:50,080 --> 02:01:51,840
eks gke

2536
02:01:51,840 --> 02:01:53,840
they must access cloud resources because

2537
02:01:53,840 --> 02:01:55,920
they rely on cloud services for example

2538
02:01:55,920 --> 02:01:57,520
the kubernetes nodes are virtual

2539
02:01:57,520 --> 02:01:58,560
machines

2540
02:01:58,560 --> 02:02:01,119
or the cluster uses a cloud load

2541
02:02:01,119 --> 02:02:03,679
balancer so they must they must access

2542
02:02:03,679 --> 02:02:06,000
cloud resources

2543
02:02:06,000 --> 02:02:07,840
and the question is how do workloads in

2544
02:02:07,840 --> 02:02:09,920
kubernetes authenticate with the cloud

2545
02:02:09,920 --> 02:02:12,639
provider api and there are several

2546
02:02:12,639 --> 02:02:15,040
methods to achieve that we are going to

2547
02:02:15,040 --> 02:02:17,360
go over the main ones

2548
02:02:17,360 --> 02:02:20,639
so the first one is i'm specific to

2549
02:02:20,639 --> 02:02:22,320
azure

2550
02:02:22,320 --> 02:02:24,560
and it used to be until quite recently

2551
02:02:24,560 --> 02:02:27,360
the default method that asia used to

2552
02:02:27,360 --> 02:02:31,599
authenticate the aks clusters to the

2553
02:02:31,599 --> 02:02:33,440
cloud

2554
02:02:33,440 --> 02:02:35,360
and in that method

2555
02:02:35,360 --> 02:02:37,920
we use service principles and service

2556
02:02:37,920 --> 02:02:40,080
principles are

2557
02:02:40,080 --> 02:02:42,639
application identities in azure it's

2558
02:02:42,639 --> 02:02:44,159
like in kubernetes we have service

2559
02:02:44,159 --> 02:02:46,320
accounts so in azure we have service

2560
02:02:46,320 --> 02:02:48,639
principles very similar

2561
02:02:48,639 --> 02:02:50,560
and with this method

2562
02:02:50,560 --> 02:02:54,480
each kubernetes node stores a file with

2563
02:02:54,480 --> 02:02:55,280
um

2564
02:02:55,280 --> 02:02:57,520
with credentials to service principle

2565
02:02:57,520 --> 02:02:59,199
and by default this service principle

2566
02:02:59,199 --> 02:03:01,199
has contributed all to the nodes

2567
02:03:01,199 --> 02:03:04,400
resource group contributor is a strong

2568
02:03:04,400 --> 02:03:07,440
role in azure so basically it means that

2569
02:03:07,440 --> 02:03:11,040
that service principle can modify or do

2570
02:03:11,040 --> 02:03:15,199
whatever it wants um to the resources of

2571
02:03:15,199 --> 02:03:18,400
that particular cluster

2572
02:03:18,400 --> 02:03:20,080
but users can bring their own service

2573
02:03:20,080 --> 02:03:21,840
principle or giving more permissions to

2574
02:03:21,840 --> 02:03:23,440
this service principle according to

2575
02:03:23,440 --> 02:03:25,119
their needs so again if we have an

2576
02:03:25,119 --> 02:03:26,719
application that needs access to a

2577
02:03:26,719 --> 02:03:28,560
specific

2578
02:03:28,560 --> 02:03:31,520
blob storage a cloud storage so the user

2579
02:03:31,520 --> 02:03:34,000
can grant permissions to this service

2580
02:03:34,000 --> 02:03:37,679
principle to that storage account

2581
02:03:38,639 --> 02:03:39,440
so

2582
02:03:39,440 --> 02:03:42,480
um so here's our cluster again

2583
02:03:42,480 --> 02:03:44,400
but this time we have one more type of

2584
02:03:44,400 --> 02:03:46,080
an identity so we have besides the

2585
02:03:46,080 --> 02:03:47,920
kubernetes service account we have also

2586
02:03:47,920 --> 02:03:50,480
the agile service principle in each node

2587
02:03:50,480 --> 02:03:52,320
and let's say once again that part a is

2588
02:03:52,320 --> 02:03:54,719
compromised and again part a i mean the

2589
02:03:54,719 --> 02:03:57,040
container that is running in pod a is

2590
02:03:57,040 --> 02:03:58,800
compromised not the pod itself because

2591
02:03:58,800 --> 02:04:00,800
spots are just a kubernetes object

2592
02:04:00,800 --> 02:04:02,320
what's actually compromised is the

2593
02:04:02,320 --> 02:04:04,800
running container

2594
02:04:04,800 --> 02:04:06,880
so let's say that a body or the

2595
02:04:06,880 --> 02:04:08,960
container of pod a is compromised and

2596
02:04:08,960 --> 02:04:11,119
what the attacker wants is to access to

2597
02:04:11,119 --> 02:04:13,599
the service principle now the problem

2598
02:04:13,599 --> 02:04:15,280
that the attacker cannot access the

2599
02:04:15,280 --> 02:04:16,880
service principle because

2600
02:04:16,880 --> 02:04:18,800
there is isolation in containers so

2601
02:04:18,800 --> 02:04:21,119
containers cannot access to the files in

2602
02:04:21,119 --> 02:04:22,960
the underlying nodes

2603
02:04:22,960 --> 02:04:25,280
so what the attacker can do is to try to

2604
02:04:25,280 --> 02:04:27,360
use the methods that we saw before and

2605
02:04:27,360 --> 02:04:29,280
that's leveraging the service account

2606
02:04:29,280 --> 02:04:31,840
kubernetes service account

2607
02:04:31,840 --> 02:04:35,280
to um create a new con a new part in the

2608
02:04:35,280 --> 02:04:38,960
cluster but this time to mount the um

2609
02:04:38,960 --> 02:04:41,599
service principle into the new

2610
02:04:41,599 --> 02:04:44,560
pod because in kubernetes you can it's

2611
02:04:44,560 --> 02:04:46,400
not only kubernetes also in docker

2612
02:04:46,400 --> 02:04:49,679
containers you can mount files into

2613
02:04:49,679 --> 02:04:52,159
containers from the from the nodes but

2614
02:04:52,159 --> 02:04:54,400
you need to specify it in the containers

2615
02:04:54,400 --> 02:04:56,719
configuration so if pod a of if the

2616
02:04:56,719 --> 02:04:59,280
service account has permission to create

2617
02:04:59,280 --> 02:05:02,320
new contain new pods

2618
02:05:02,320 --> 02:05:04,960
the attacker can use it to create a new

2619
02:05:04,960 --> 02:05:07,119
pod and this time to mount the service

2620
02:05:07,119 --> 02:05:09,440
principle and now the attacker has the

2621
02:05:09,440 --> 02:05:11,679
backdoor pod with the service principle

2622
02:05:11,679 --> 02:05:13,360
in it and with this service principle

2623
02:05:13,360 --> 02:05:14,639
the attacker can access the cloud

2624
02:05:14,639 --> 02:05:17,119
environment

2625
02:05:17,760 --> 02:05:18,639
so

2626
02:05:18,639 --> 02:05:20,719
we saw one method and the limitation

2627
02:05:20,719 --> 02:05:22,800
here the limitation of the attacker is

2628
02:05:22,800 --> 02:05:25,199
that the attacker needs to somehow

2629
02:05:25,199 --> 02:05:27,440
create a new pod and mount the service

2630
02:05:27,440 --> 02:05:30,079
principle into it um which in many cases

2631
02:05:30,079 --> 02:05:31,599
it's not the case i mean

2632
02:05:31,599 --> 02:05:34,079
nobody says that pod a the service the

2633
02:05:34,079 --> 02:05:35,679
service account of part a has

2634
02:05:35,679 --> 02:05:37,440
permissions to create new parts and

2635
02:05:37,440 --> 02:05:39,920
second this method is only for azure so

2636
02:05:39,920 --> 02:05:42,000
now we are going to see another method

2637
02:05:42,000 --> 02:05:43,920
that doesn't require any

2638
02:05:43,920 --> 02:05:45,760
operations with the api server for

2639
02:05:45,760 --> 02:05:47,199
kubernetes it doesn't require any

2640
02:05:47,199 --> 02:05:48,639
service account and

2641
02:05:48,639 --> 02:05:51,040
also working in other cloud providers

2642
02:05:51,040 --> 02:05:53,199
and this is and it's also related to the

2643
02:05:53,199 --> 02:05:55,920
last talk and this is using the metadata

2644
02:05:55,920 --> 02:05:58,000
service

2645
02:05:58,000 --> 02:05:59,760
so um

2646
02:05:59,760 --> 02:06:01,520
the metadata service is a special

2647
02:06:01,520 --> 02:06:02,800
endpoint

2648
02:06:02,800 --> 02:06:06,159
that allows vms to query information

2649
02:06:06,159 --> 02:06:07,599
about themselves

2650
02:06:07,599 --> 02:06:09,760
and this endpoint is implemented by all

2651
02:06:09,760 --> 02:06:11,840
major cloud providers you can see i'm

2652
02:06:11,840 --> 02:06:15,280
here azure aws and gcp

2653
02:06:15,280 --> 02:06:18,719
and among other information um this

2654
02:06:18,719 --> 02:06:21,280
special endpoint the metadata service

2655
02:06:21,280 --> 02:06:25,920
allows the um allows the vms um to get

2656
02:06:25,920 --> 02:06:28,400
tokens for cloud identities that are

2657
02:06:28,400 --> 02:06:30,719
attached to them

2658
02:06:30,719 --> 02:06:32,880
now in all cloud providers um you can

2659
02:06:32,880 --> 02:06:35,440
attach identities to vms allowing them

2660
02:06:35,440 --> 02:06:38,400
to authenticate with the cloud api every

2661
02:06:38,400 --> 02:06:40,000
cloud provider has a different name for

2662
02:06:40,000 --> 02:06:41,360
that concept in azure it's called the

2663
02:06:41,360 --> 02:06:44,239
manage identities in aws it's ec2 roles

2664
02:06:44,239 --> 02:06:45,520
in

2665
02:06:45,520 --> 02:06:48,320
in google it's called i am roles i am i

2666
02:06:48,320 --> 02:06:50,639
am service im service accounts but all

2667
02:06:50,639 --> 02:06:52,639
cloud providers has this

2668
02:06:52,639 --> 02:06:55,199
has this um have this um

2669
02:06:55,199 --> 02:06:57,520
concept and wisdom editors metadata

2670
02:06:57,520 --> 02:07:01,040
metadata service vms can query um the

2671
02:07:01,040 --> 02:07:04,079
token of the attached identities

2672
02:07:04,079 --> 02:07:05,760
and this query doesn't require any

2673
02:07:05,760 --> 02:07:07,440
authentication so every application on

2674
02:07:07,440 --> 02:07:11,040
the vm can query that endpoint can

2675
02:07:11,040 --> 02:07:12,639
send a request to that endpoint and get

2676
02:07:12,639 --> 02:07:16,320
a token to the text students

2677
02:07:16,719 --> 02:07:18,560
now in the cloud

2678
02:07:18,560 --> 02:07:21,440
kubernetes nodes are actually vms

2679
02:07:21,440 --> 02:07:24,239
which also have metadata service and by

2680
02:07:24,239 --> 02:07:26,320
default pods can access freely to the

2681
02:07:26,320 --> 02:07:29,440
metadata metadata service of their nodes

2682
02:07:29,440 --> 02:07:32,000
so it means that pods can acquire tokens

2683
02:07:32,000 --> 02:07:34,159
to those identities that are attached to

2684
02:07:34,159 --> 02:07:36,880
the underlying nodes

2685
02:07:36,880 --> 02:07:38,880
the permissions of those identities are

2686
02:07:38,880 --> 02:07:41,599
really depend on

2687
02:07:41,599 --> 02:07:44,159
the cloud provider because each one has

2688
02:07:44,159 --> 02:07:47,520
different default settings but also by

2689
02:07:47,520 --> 02:07:49,360
the specific environment because users

2690
02:07:49,360 --> 02:07:51,119
grant different permissions according to

2691
02:07:51,119 --> 02:07:53,679
their needs

2692
02:07:53,679 --> 02:07:55,599
so now we are going to go over the

2693
02:07:55,599 --> 02:07:57,040
various cloud providers and we are going

2694
02:07:57,040 --> 02:07:59,199
to see the default the default settings

2695
02:07:59,199 --> 02:08:00,320
um

2696
02:08:00,320 --> 02:08:02,239
but we'll see that in each one of them

2697
02:08:02,239 --> 02:08:04,719
users can also modify it and user very

2698
02:08:04,719 --> 02:08:05,920
often

2699
02:08:05,920 --> 02:08:08,639
modify the default permissions to grant

2700
02:08:08,639 --> 02:08:10,400
more permissions according to what the

2701
02:08:10,400 --> 02:08:12,560
application actually needs or in many

2702
02:08:12,560 --> 02:08:14,320
cases not only what the application

2703
02:08:14,320 --> 02:08:18,000
needs but also excessive permissions

2704
02:08:18,079 --> 02:08:19,760
so in aks

2705
02:08:19,760 --> 02:08:22,079
we have managed identities many of the

2706
02:08:22,079 --> 02:08:24,639
identities are

2707
02:08:24,639 --> 02:08:27,520
those identities that we can attach to

2708
02:08:27,520 --> 02:08:30,000
vms and not only vms in azure

2709
02:08:30,000 --> 02:08:31,760
and

2710
02:08:31,760 --> 02:08:34,000
aks uses several managed identities to

2711
02:08:34,000 --> 02:08:36,079
operate the kubernetes cluster the aks

2712
02:08:36,079 --> 02:08:38,639
clusters but users can also

2713
02:08:38,639 --> 02:08:41,199
add more managed identities if they need

2714
02:08:41,199 --> 02:08:43,360
to if they want to add more permissions

2715
02:08:43,360 --> 02:08:45,280
they can add more managed identities or

2716
02:08:45,280 --> 02:08:48,159
alternatively they can also give more

2717
02:08:48,159 --> 02:08:49,760
permissions to the existing managed

2718
02:08:49,760 --> 02:08:52,400
identities and this is the list of the

2719
02:08:52,400 --> 02:08:55,040
default manager identities that aks uses

2720
02:08:55,040 --> 02:08:56,560
they are quite a lot it really depends

2721
02:08:56,560 --> 02:09:00,000
on the aks configuration

2722
02:09:00,400 --> 02:09:03,040
and we see many cases in which

2723
02:09:03,040 --> 02:09:04,560
users give

2724
02:09:04,560 --> 02:09:07,119
very strong permissions to those managed

2725
02:09:07,119 --> 02:09:08,960
identities

2726
02:09:08,960 --> 02:09:11,520
according subscription owner which is

2727
02:09:11,520 --> 02:09:14,000
super powerful

2728
02:09:14,000 --> 02:09:17,599
so that was aks now let's talk about eks

2729
02:09:17,599 --> 02:09:21,840
amazon so eks has ec2 worlds

2730
02:09:21,840 --> 02:09:24,560
and by default the ec2 role has two

2731
02:09:24,560 --> 02:09:28,239
policies in it the first one allow it to

2732
02:09:28,239 --> 02:09:31,119
pull images from the container registry

2733
02:09:31,119 --> 02:09:34,320
and the second one allows it to

2734
02:09:34,320 --> 02:09:37,199
read its read permission to the compute

2735
02:09:37,199 --> 02:09:39,520
environment so read

2736
02:09:39,520 --> 02:09:40,560
read

2737
02:09:40,560 --> 02:09:43,040
its read permissions for the ec2s vpcs

2738
02:09:43,040 --> 02:09:44,880
and etc

2739
02:09:44,880 --> 02:09:47,280
but again users can add more policies if

2740
02:09:47,280 --> 02:09:50,400
the containers require um to

2741
02:09:50,400 --> 02:09:54,960
access additional cloud cloud services

2742
02:09:54,960 --> 02:09:58,800
in gke we have i am service accounts not

2743
02:09:58,800 --> 02:10:00,320
to be confused with the kubernetes

2744
02:10:00,320 --> 02:10:02,639
service accounts im service accounts is

2745
02:10:02,639 --> 02:10:05,360
the name is the term of google to the

2746
02:10:05,360 --> 02:10:07,599
those identities that you attach to

2747
02:10:07,599 --> 02:10:08,960
virtual machines

2748
02:10:08,960 --> 02:10:11,760
and by default all the vms all the vms

2749
02:10:11,760 --> 02:10:14,719
in a project i'm sure the same default

2750
02:10:14,719 --> 02:10:16,320
service account

2751
02:10:16,320 --> 02:10:18,079
and by default this service account has

2752
02:10:18,079 --> 02:10:20,719
editor role which is quite permissive

2753
02:10:20,719 --> 02:10:23,040
and users can also add more permissions

2754
02:10:23,040 --> 02:10:26,480
to that service account or replace it

2755
02:10:26,480 --> 02:10:29,360
to another service account

2756
02:10:29,360 --> 02:10:31,440
so this is a summary of what we just

2757
02:10:31,440 --> 02:10:34,000
talked um so by default bots can access

2758
02:10:34,000 --> 02:10:35,599
to the metadata service of their

2759
02:10:35,599 --> 02:10:38,079
underlying nodes so pods can acquire

2760
02:10:38,079 --> 02:10:41,040
tokens um of that nodes and the

2761
02:10:41,040 --> 02:10:43,119
permissions vary based on the cloud

2762
02:10:43,119 --> 02:10:45,520
provider and the specific environment

2763
02:10:45,520 --> 02:10:48,239
as the user configure it

2764
02:10:48,239 --> 02:10:50,159
and here you can see that you can

2765
02:10:50,159 --> 02:10:51,679
actually

2766
02:10:51,679 --> 02:10:53,679
access to the tokens from a running

2767
02:10:53,679 --> 02:10:55,280
container

2768
02:10:55,280 --> 02:10:58,560
in each one of the cloud providers

2769
02:10:58,560 --> 02:10:59,360
so

2770
02:10:59,360 --> 02:11:01,840
let's see how it looks like how lateral

2771
02:11:01,840 --> 02:11:03,599
movement using the metadata service

2772
02:11:03,599 --> 02:11:05,040
looks like

2773
02:11:05,040 --> 02:11:07,119
so here again we have our cluster with

2774
02:11:07,119 --> 02:11:09,280
pod a which is compromised and now we're

2775
02:11:09,280 --> 02:11:10,800
going to make some space so we're going

2776
02:11:10,800 --> 02:11:12,960
to remove nodes two and three just to

2777
02:11:12,960 --> 02:11:14,560
make some space you can imagine that

2778
02:11:14,560 --> 02:11:17,040
they're still there so now we have node

2779
02:11:17,040 --> 02:11:20,079
one with pod a and node one has its

2780
02:11:20,079 --> 02:11:21,520
metadata service

2781
02:11:21,520 --> 02:11:24,400
made it to the server and pod a can now

2782
02:11:24,400 --> 02:11:26,639
request a token

2783
02:11:26,639 --> 02:11:29,040
the metadata service returns

2784
02:11:29,040 --> 02:11:31,520
a token of the cloud identity and with

2785
02:11:31,520 --> 02:11:33,280
that cloud identity based on the

2786
02:11:33,280 --> 02:11:35,840
permissions pod a can perform all kind

2787
02:11:35,840 --> 02:11:38,320
of operations for example list storage

2788
02:11:38,320 --> 02:11:42,480
account uh keys or um get a blobs um it

2789
02:11:42,480 --> 02:11:44,880
can be um lease secrets from a secret

2790
02:11:44,880 --> 02:11:48,400
store like asia kivald or kms and it

2791
02:11:48,400 --> 02:11:49,679
also can

2792
02:11:49,679 --> 02:11:52,639
the attacker might

2793
02:11:52,800 --> 02:11:54,960
get credentials of other kubernetes

2794
02:11:54,960 --> 02:11:58,079
clusters that are deployed um

2795
02:11:58,079 --> 02:12:00,079
deployed in the uh

2796
02:12:00,079 --> 02:12:01,599
in in the cloud

2797
02:12:01,599 --> 02:12:05,119
um i'm out of time so oh five minutes

2798
02:12:05,119 --> 02:12:07,440
all right so i have five minutes great i

2799
02:12:07,440 --> 02:12:09,119
don't i need less

2800
02:12:09,119 --> 02:12:10,800
um

2801
02:12:10,800 --> 02:12:13,119
so the problem that we just saw

2802
02:12:13,119 --> 02:12:14,719
is that

2803
02:12:14,719 --> 02:12:15,920
um

2804
02:12:15,920 --> 02:12:17,440
the pods can freely access to the

2805
02:12:17,440 --> 02:12:19,440
metadata service and they can acquire

2806
02:12:19,440 --> 02:12:22,159
tokens to the node's cloud identities

2807
02:12:22,159 --> 02:12:24,480
and all the parts share the same cloud

2808
02:12:24,480 --> 02:12:26,800
resources the same cloud identities and

2809
02:12:26,800 --> 02:12:28,480
those identities are actually the node's

2810
02:12:28,480 --> 02:12:31,199
identities what we want is to allocate a

2811
02:12:31,199 --> 02:12:33,840
specific identity to each pod if the pod

2812
02:12:33,840 --> 02:12:35,440
actually needs to access to the cloud

2813
02:12:35,440 --> 02:12:38,800
api and make sure that pods can access

2814
02:12:38,800 --> 02:12:40,880
only to their own identities so they

2815
02:12:40,880 --> 02:12:42,800
don't share identities

2816
02:12:42,800 --> 02:12:45,119
luckily all cloud providers allowing us

2817
02:12:45,119 --> 02:12:48,159
to do it we don't have time to go over

2818
02:12:48,159 --> 02:12:50,400
each one of them with details but we'll

2819
02:12:50,400 --> 02:12:52,159
just mention

2820
02:12:52,159 --> 02:12:54,400
that um those are the solutions that

2821
02:12:54,400 --> 02:12:56,880
allowing you to give specific identities

2822
02:12:56,880 --> 02:12:59,280
to specific parts

2823
02:12:59,280 --> 02:13:00,880
they work differently some of them are

2824
02:13:00,880 --> 02:13:03,920
based on intercepting the traffic to the

2825
02:13:03,920 --> 02:13:06,079
metadata service some of them

2826
02:13:06,079 --> 02:13:07,360
work by

2827
02:13:07,360 --> 02:13:09,760
using kubernetes as an identity provider

2828
02:13:09,760 --> 02:13:11,679
um you can read about all of them but

2829
02:13:11,679 --> 02:13:13,679
we'll just say that they are not enabled

2830
02:13:13,679 --> 02:13:16,000
by default by default what what we just

2831
02:13:16,000 --> 02:13:16,880
saw

2832
02:13:16,880 --> 02:13:19,199
is working and if you want to restrict

2833
02:13:19,199 --> 02:13:20,400
and use

2834
02:13:20,400 --> 02:13:24,000
this option you need to enable it

2835
02:13:24,560 --> 02:13:26,639
this is for miter attack

2836
02:13:26,639 --> 02:13:28,639
this is a technique that talks about

2837
02:13:28,639 --> 02:13:32,079
using the metadata software to get

2838
02:13:32,079 --> 02:13:35,040
to get cloud identity tokens

2839
02:13:35,040 --> 02:13:36,800
and if you go to that technique you can

2840
02:13:36,800 --> 02:13:38,719
also see details about attacking groups

2841
02:13:38,719 --> 02:13:43,159
that use it in containers

2842
02:13:44,239 --> 02:13:47,679
so what is the mitigation so

2843
02:13:47,679 --> 02:13:50,560
first um again adhere to the least

2844
02:13:50,560 --> 02:13:52,800
privileged principle don't give

2845
02:13:52,800 --> 02:13:54,639
to the cloud identities permissions they

2846
02:13:54,639 --> 02:13:56,320
don't need

2847
02:13:56,320 --> 02:13:58,960
second is as we just said allocate

2848
02:13:58,960 --> 02:14:00,880
specific cloud identities to your pods

2849
02:14:00,880 --> 02:14:02,800
that actually need access

2850
02:14:02,800 --> 02:14:05,280
and third is to restrict the access of

2851
02:14:05,280 --> 02:14:08,719
the pods to submit it as a server

2852
02:14:08,719 --> 02:14:10,800
as for detection

2853
02:14:10,800 --> 02:14:12,079
what we should do is to track the

2854
02:14:12,079 --> 02:14:14,079
activity of the cloud identities that

2855
02:14:14,079 --> 02:14:16,400
are related to our kubernetes workloads

2856
02:14:16,400 --> 02:14:19,280
or nodes uh and in many times it's quite

2857
02:14:19,280 --> 02:14:21,520
easy to do it because the behavior is

2858
02:14:21,520 --> 02:14:24,239
relatively constant constant so

2859
02:14:24,239 --> 02:14:25,840
if we can see that there are some

2860
02:14:25,840 --> 02:14:29,360
suspicious operations um we can

2861
02:14:29,360 --> 02:14:32,400
we can look for it and

2862
02:14:32,400 --> 02:14:34,560
in many in many cases um the normal

2863
02:14:34,560 --> 02:14:36,880
behavior is going to be quite consistent

2864
02:14:36,880 --> 02:14:37,760
um

2865
02:14:37,760 --> 02:14:39,280
for example in azure we have the azure

2866
02:14:39,280 --> 02:14:41,040
activity log so you can see in this

2867
02:14:41,040 --> 02:14:43,199
example that there is a manager identity

2868
02:14:43,199 --> 02:14:45,280
that is used by the kubernetes nodes and

2869
02:14:45,280 --> 02:14:47,440
two least storage keys which is not one

2870
02:14:47,440 --> 02:14:49,760
of the normal operations and we have the

2871
02:14:49,760 --> 02:14:52,960
same thing also in aws and we have the

2872
02:14:52,960 --> 02:14:55,599
same thing in gcp

2873
02:14:55,599 --> 02:14:58,000
um aws it's cloudtrail in gcp cloud

2874
02:14:58,000 --> 02:14:59,920
audit log

2875
02:14:59,920 --> 02:15:03,679
so key takeaways um so when you secure

2876
02:15:03,679 --> 02:15:05,199
your cluster consider the various

2877
02:15:05,199 --> 02:15:07,840
identity types all the identities in the

2878
02:15:07,840 --> 02:15:10,079
cluster and outside the cluster

2879
02:15:10,079 --> 02:15:11,440
always adhere to the list privileged

2880
02:15:11,440 --> 02:15:14,079
principle again both for identities that

2881
02:15:14,079 --> 02:15:15,760
are into your kubernetes cluster and

2882
02:15:15,760 --> 02:15:17,679
your cloud identities

2883
02:15:17,679 --> 02:15:19,599
and third is to monitor the activity of

2884
02:15:19,599 --> 02:15:22,079
the identities and look for suspicious

2885
02:15:22,079 --> 02:15:24,799
operations

2886
02:15:24,880 --> 02:15:26,079
that's it

2887
02:15:26,079 --> 02:15:27,920
thank you very much i hope you find it

2888
02:15:27,920 --> 02:15:30,400
interesting

2889
02:15:35,119 --> 02:15:37,760
all right merci you see so we'll take a

2890
02:15:37,760 --> 02:15:39,280
five-minute break

2891
02:15:39,280 --> 02:15:42,159
uh and after we'll have our last talk

2892
02:15:42,159 --> 02:15:44,000
for the block of apsec

2893
02:15:44,000 --> 02:15:46,719
uh please go on slido and answer or

2894
02:15:46,719 --> 02:15:48,400
submit any questions that you might have

2895
02:15:48,400 --> 02:15:50,719
we will answer them during the q a we'll

2896
02:15:50,719 --> 02:15:53,719
see

2897
02:15:57,120 --> 02:16:00,680
[Music]

2898
02:16:05,170 --> 02:16:09,170
[Music]

2899
02:16:11,230 --> 02:16:25,110
[Music]

2900
02:16:35,610 --> 02:16:38,749
[Music]

2901
02:16:48,440 --> 02:17:03,809
[Music]

2902
02:17:12,700 --> 02:17:16,389
[Music]

2903
02:17:28,440 --> 02:17:31,639
[Music]

2904
02:17:34,360 --> 02:17:37,540
[Music]

2905
02:17:55,000 --> 02:18:02,709
[Music]

2906
02:18:05,180 --> 02:18:18,499
[Music]

2907
02:18:21,350 --> 02:18:35,259
[Music]

2908
02:18:45,790 --> 02:18:48,919
[Music]

2909
02:18:58,629 --> 02:19:14,069
[Music]

2910
02:19:17,110 --> 02:19:20,200
[Music]

2911
02:19:22,870 --> 02:19:28,959
[Music]

2912
02:19:38,490 --> 02:19:45,728
[Music]

2913
02:19:59,250 --> 02:20:02,340
[Music]

2914
02:20:07,920 --> 02:20:09,240
do

2915
02:20:09,240 --> 02:20:12,410
[Music]

2916
02:20:16,390 --> 02:20:22,720
[Music]

2917
02:20:22,720 --> 02:20:25,470
do

2918
02:20:25,470 --> 02:20:44,939
[Music]

2919
02:20:56,020 --> 02:20:59,159
[Music]

2920
02:21:02,630 --> 02:21:05,720
[Music]

2921
02:21:27,450 --> 02:21:30,609
[Music]

2922
02:21:31,359 --> 02:21:34,359
do

2923
02:21:37,760 --> 02:21:40,809
[Music]

2924
02:21:48,850 --> 02:21:52,049
[Music]

2925
02:21:54,830 --> 02:21:57,950
[Music]

2926
02:22:15,430 --> 02:22:33,250
[Music]

2927
02:22:35,750 --> 02:22:38,799
[Music]

2928
02:22:40,399 --> 02:22:42,720
all right everyone we're back for the

2929
02:22:42,720 --> 02:22:45,200
last talk of this block which is absec

2930
02:22:45,200 --> 02:22:47,600
we have here on stage nate

2931
02:22:47,600 --> 02:22:50,479
nate ward field he has been an actor

2932
02:22:50,479 --> 02:22:52,080
since his first

2933
02:22:52,080 --> 02:22:54,960
lay hands on 20

2934
02:22:54,960 --> 02:22:59,040
2004 at uh du milcatzo

2935
02:22:59,040 --> 02:23:01,840
bought modern after his first hack on

2936
02:23:01,840 --> 02:23:05,600
dial up bbs at 12 he was hooked and over

2937
02:23:05,600 --> 02:23:07,840
the following 25 years he sharpened his

2938
02:23:07,840 --> 02:23:09,520
skills through job in network

2939
02:23:09,520 --> 02:23:12,000
engineering vulnerability response

2940
02:23:12,000 --> 02:23:14,080
endpoint research and side projects such

2941
02:23:14,080 --> 02:23:16,160
as hacking phones

2942
02:23:16,160 --> 02:23:19,680
and researching network attack surface

2943
02:23:19,680 --> 02:23:21,600
so please

2944
02:23:21,600 --> 02:23:23,680
join me to welcome nate to the stage for

2945
02:23:23,680 --> 02:23:26,680
his amazing talk thank you mike

2946
02:23:26,680 --> 02:23:32,319
[Applause]

2947
02:23:32,319 --> 02:23:33,520
are we live

2948
02:23:33,520 --> 02:23:34,880
can you hear me

2949
02:23:34,880 --> 02:23:36,640
not yet oh there we go

2950
02:23:36,640 --> 02:23:38,560
all right uh thank you everybody uh

2951
02:23:38,560 --> 02:23:40,640
welcome to i am become load balancer

2952
02:23:40,640 --> 02:23:42,800
owner of your network

2953
02:23:42,800 --> 02:23:44,800
um i'll do a little introduction about

2954
02:23:44,800 --> 02:23:46,319
myself

2955
02:23:46,319 --> 02:23:48,160
yeah i'm nate i have been hacking

2956
02:23:48,160 --> 02:23:50,960
networks since i was about 12 years old

2957
02:23:50,960 --> 02:23:52,800
i spent about 17 years building and

2958
02:23:52,800 --> 02:23:54,880
troubleshooting networks i worked for

2959
02:23:54,880 --> 02:23:57,439
microsoft for seven years four of those

2960
02:23:57,439 --> 02:23:59,280
years or two of those years i was in the

2961
02:23:59,280 --> 02:24:00,960
network engineering group

2962
02:24:00,960 --> 02:24:02,399
i spent a bunch of years shipping out

2963
02:24:02,399 --> 02:24:04,479
windows patches for patch tuesday so i'm

2964
02:24:04,479 --> 02:24:06,960
sorry but you know that's what i did

2965
02:24:06,960 --> 02:24:08,000
uh

2966
02:24:08,000 --> 02:24:09,600
and i did a stint in defender for

2967
02:24:09,600 --> 02:24:11,359
endpoints doing some endpoint research

2968
02:24:11,359 --> 02:24:12,960
and i'm about to start a new job on

2969
02:24:12,960 --> 02:24:14,240
monday that i'm not going to give away

2970
02:24:14,240 --> 02:24:16,319
the secret just yet

2971
02:24:16,319 --> 02:24:18,319
i worked at f5 networks for 10 years

2972
02:24:18,319 --> 02:24:20,240
seven of those years i was microsoft's

2973
02:24:20,240 --> 02:24:23,439
dedicated engineering design escalation

2974
02:24:23,439 --> 02:24:25,840
support contact which is where i get fun

2975
02:24:25,840 --> 02:24:27,840
pictures like an f5 device encased in

2976
02:24:27,840 --> 02:24:29,520
the block of ice which we will kind of

2977
02:24:29,520 --> 02:24:31,120
get to the story behind that a little

2978
02:24:31,120 --> 02:24:32,560
bit later

2979
02:24:32,560 --> 02:24:34,399
um i like to speak at conferences this

2980
02:24:34,399 --> 02:24:36,240
is my first time at north sec um i've

2981
02:24:36,240 --> 02:24:37,760
done primarily blue team sort of

2982
02:24:37,760 --> 02:24:39,920
defensive focused talks so this is the

2983
02:24:39,920 --> 02:24:41,280
first talk that's more on sort of

2984
02:24:41,280 --> 02:24:43,680
offensive like evil shenanigans thing

2985
02:24:43,680 --> 02:24:45,600
which i'm kind of excited for

2986
02:24:45,600 --> 02:24:48,319
getting a little bit of feedback

2987
02:24:48,319 --> 02:24:50,160
um i was in uh i was featured in wired

2988
02:24:50,160 --> 02:24:52,240
magazine in 2020 i helped start a group

2989
02:24:52,240 --> 02:24:54,880
called cti league we built a 1500 person

2990
02:24:54,880 --> 02:24:57,200
volunteer infosec group that was giving

2991
02:24:57,200 --> 02:24:59,120
out free threat intelligence and sort of

2992
02:24:59,120 --> 02:25:01,200
perimeter assessments to hospitals to

2993
02:25:01,200 --> 02:25:02,240
try to prevent them from getting

2994
02:25:02,240 --> 02:25:04,399
ransomware during the pandemic

2995
02:25:04,399 --> 02:25:05,920
and then my side stuff i like to spend

2996
02:25:05,920 --> 02:25:07,439
drum and bass music because i'm an old

2997
02:25:07,439 --> 02:25:09,359
school techno kind of guy

2998
02:25:09,359 --> 02:25:11,600
enough about me

2999
02:25:11,600 --> 02:25:14,000
so um the tldr for those are maybe

3000
02:25:14,000 --> 02:25:16,479
uninitiated what are load balancers um

3001
02:25:16,479 --> 02:25:18,560
these are very large expensive pieces of

3002
02:25:18,560 --> 02:25:20,720
networking hardware um they're usually

3003
02:25:20,720 --> 02:25:22,240
deployed in what they call a failover

3004
02:25:22,240 --> 02:25:24,479
pair so if you think of like hsrp for

3005
02:25:24,479 --> 02:25:26,319
routers it's the same concept right

3006
02:25:26,319 --> 02:25:27,520
you've got a device that's passing

3007
02:25:27,520 --> 02:25:29,200
traffic if something happens to it you

3008
02:25:29,200 --> 02:25:33,280
can fail over and can ideally not lose

3009
02:25:33,280 --> 02:25:36,880
not lose any of your connectivity

3010
02:25:36,880 --> 02:25:38,720
they do layer four to layer seven load

3011
02:25:38,720 --> 02:25:40,240
balancing some of them can be web

3012
02:25:40,240 --> 02:25:42,640
application firewalls you can do vpn you

3013
02:25:42,640 --> 02:25:44,880
can do dns load balancing um they're

3014
02:25:44,880 --> 02:25:46,399
sort of like a swiss army knife of

3015
02:25:46,399 --> 02:25:48,319
networking um for things that are not

3016
02:25:48,319 --> 02:25:50,880
just your basic switching and routing

3017
02:25:50,880 --> 02:25:53,439
um they also do ssl and tls offloading

3018
02:25:53,439 --> 02:25:55,120
so people will use these things when

3019
02:25:55,120 --> 02:25:57,760
they're actually f5 biggest selling

3020
02:25:57,760 --> 02:25:59,439
point at first was you could have a very

3021
02:25:59,439 --> 02:26:01,760
powerful ssl accelerator chip slap a

3022
02:26:01,760 --> 02:26:03,520
certificate on it load balance it across

3023
02:26:03,520 --> 02:26:05,120
your pool of dozens or hundreds of

3024
02:26:05,120 --> 02:26:07,439
servers and save money on ssl and also

3025
02:26:07,439 --> 02:26:09,120
be more performant than going to

3026
02:26:09,120 --> 02:26:11,359
specific servers themselves

3027
02:26:11,359 --> 02:26:13,040
uh the nice thing about these things is

3028
02:26:13,040 --> 02:26:15,120
because they're so uh there's such a

3029
02:26:15,120 --> 02:26:16,720
sort of a core routing and traffic

3030
02:26:16,720 --> 02:26:19,040
shaping device you get almost unfettered

3031
02:26:19,040 --> 02:26:20,560
access to the internal network once you

3032
02:26:20,560 --> 02:26:22,479
hack onto one of these devices

3033
02:26:22,479 --> 02:26:24,399
they're generally on multiple vlans most

3034
02:26:24,399 --> 02:26:26,160
of them have internet connectivity some

3035
02:26:26,160 --> 02:26:28,160
of them are talking to active directory

3036
02:26:28,160 --> 02:26:29,920
there may be vpn sessions so they're a

3037
02:26:29,920 --> 02:26:32,080
very juicy kind of fun thing once you

3038
02:26:32,080 --> 02:26:33,760
get on it to see where you can laterally

3039
02:26:33,760 --> 02:26:35,600
move and pivot and the other sort of

3040
02:26:35,600 --> 02:26:37,920
maliciousness that you can perform

3041
02:26:37,920 --> 02:26:39,280
and they're mission critical right these

3042
02:26:39,280 --> 02:26:40,960
things are you think of like your core

3043
02:26:40,960 --> 02:26:43,040
routers these are very important devices

3044
02:26:43,040 --> 02:26:44,800
which are generally not updated unless

3045
02:26:44,800 --> 02:26:47,439
someone absolutely has to um f5 has had

3046
02:26:47,439 --> 02:26:49,680
some code quality issues over the years

3047
02:26:49,680 --> 02:26:50,880
and people who've managed them kind of

3048
02:26:50,880 --> 02:26:52,319
get to know that if you don't need to

3049
02:26:52,319 --> 02:26:53,680
upgrade the thing just leave it running

3050
02:26:53,680 --> 02:26:55,680
so a lot of these things are running two

3051
02:26:55,680 --> 02:26:57,920
three four five ten year outdated

3052
02:26:57,920 --> 02:26:59,760
versions of code

3053
02:26:59,760 --> 02:27:01,359
uh and the nice thing about these from

3054
02:27:01,359 --> 02:27:02,960
the attack perspective is because

3055
02:27:02,960 --> 02:27:04,640
they're proprietary you don't have much

3056
02:27:04,640 --> 02:27:06,640
in the way of edr or endpoints so like

3057
02:27:06,640 --> 02:27:08,160
solutions that can monitor what's going

3058
02:27:08,160 --> 02:27:09,840
on with these devices so

3059
02:27:09,840 --> 02:27:11,760
um even when we were at microsoft there

3060
02:27:11,760 --> 02:27:13,359
was we had remote logging and things

3061
02:27:13,359 --> 02:27:14,640
like that but there wasn't really any

3062
02:27:14,640 --> 02:27:16,479
way you could detect if someone got on

3063
02:27:16,479 --> 02:27:18,319
the device at least not in any timely

3064
02:27:18,319 --> 02:27:19,760
fashion

3065
02:27:19,760 --> 02:27:21,280
another fun thing about it which is

3066
02:27:21,280 --> 02:27:22,560
we're going to get into here with these

3067
02:27:22,560 --> 02:27:24,240
vulnerabilities is that these devices

3068
02:27:24,240 --> 02:27:26,960
always have a web gui enabled the f5s in

3069
02:27:26,960 --> 02:27:29,280
particular are apache with tomcat i wish

3070
02:27:29,280 --> 02:27:31,520
i could tell you it was updated it's not

3071
02:27:31,520 --> 02:27:32,399
um

3072
02:27:32,399 --> 02:27:34,080
so there's also other vendors like

3073
02:27:34,080 --> 02:27:37,680
citrix um a10 a few other companies i'm

3074
02:27:37,680 --> 02:27:39,359
going to be specifically talking f5

3075
02:27:39,359 --> 02:27:41,760
today but the design concepts are very

3076
02:27:41,760 --> 02:27:44,000
much the same right citrix runs vsd as

3077
02:27:44,000 --> 02:27:46,160
their management operating system f5

3078
02:27:46,160 --> 02:27:48,560
front centos you can pretty much most of

3079
02:27:48,560 --> 02:27:50,640
what they do is identical it's just

3080
02:27:50,640 --> 02:27:52,080
slightly different like commands and

3081
02:27:52,080 --> 02:27:54,000
things to get around

3082
02:27:54,000 --> 02:27:56,319
and then they also have shells so bash

3083
02:27:56,319 --> 02:27:57,920
is the standard one they have their

3084
02:27:57,920 --> 02:28:00,720
proprietary tms-h1 i will point out that

3085
02:28:00,720 --> 02:28:02,160
as i'm going through these slides you're

3086
02:28:02,160 --> 02:28:04,160
going to see tmsh commands the reason

3087
02:28:04,160 --> 02:28:06,080
i'm sticking them in there verbatim is

3088
02:28:06,080 --> 02:28:07,600
because you can then plug them into the

3089
02:28:07,600 --> 02:28:10,720
poc that came out last week and run

3090
02:28:10,720 --> 02:28:12,240
these commands so the idea is you can

3091
02:28:12,240 --> 02:28:13,840
copy paste and play with this stuff in a

3092
02:28:13,840 --> 02:28:15,359
lab which at the end we'll talk about

3093
02:28:15,359 --> 02:28:17,120
how to build one

3094
02:28:17,120 --> 02:28:19,920
um so the deployment methodology um

3095
02:28:19,920 --> 02:28:21,680
when i was building this talk i was

3096
02:28:21,680 --> 02:28:24,160
initially going to use the cve from 2020

3097
02:28:24,160 --> 02:28:26,240
this 5902

3098
02:28:26,240 --> 02:28:28,399
past traversal vulnerability that f5 had

3099
02:28:28,399 --> 02:28:31,040
in june of 2020 that was what i was

3100
02:28:31,040 --> 02:28:31,920
going to use to show all the

3101
02:28:31,920 --> 02:28:34,720
demonstration stuff for you uh however

3102
02:28:34,720 --> 02:28:36,960
they blessed me a week ago with an even

3103
02:28:36,960 --> 02:28:39,359
more easy to exploit and even easier to

3104
02:28:39,359 --> 02:28:42,640
poc vulnerability that's also a cvss 10

3105
02:28:42,640 --> 02:28:44,319
which essentially without getting too

3106
02:28:44,319 --> 02:28:45,920
deep in the weeds

3107
02:28:45,920 --> 02:28:47,200
you take a connection header you

3108
02:28:47,200 --> 02:28:48,880
basically stuff a authentication

3109
02:28:48,880 --> 02:28:50,800
connection header inside the connection

3110
02:28:50,800 --> 02:28:53,359
like the connection colon header feed it

3111
02:28:53,359 --> 02:28:54,720
to the device and it believes you now

3112
02:28:54,720 --> 02:28:56,960
have root access to the machine zero

3113
02:28:56,960 --> 02:28:58,880
authentication required you can run any

3114
02:28:58,880 --> 02:29:02,160
command as root it's gorgeous

3115
02:29:02,160 --> 02:29:04,960
um and all devices have uh management so

3116
02:29:04,960 --> 02:29:06,399
they sell these things it's generally a

3117
02:29:06,399 --> 02:29:08,960
big networking switch they also sell vm

3118
02:29:08,960 --> 02:29:10,319
versions of it we're not going to go too

3119
02:29:10,319 --> 02:29:12,160
much into the vm stuff except at the end

3120
02:29:12,160 --> 02:29:13,680
because that's how i built the lab to

3121
02:29:13,680 --> 02:29:15,920
show you this stuff and i hope that's

3122
02:29:15,920 --> 02:29:17,680
kind of readable i mean it's green on

3123
02:29:17,680 --> 02:29:19,200
black if you're not using green on black

3124
02:29:19,200 --> 02:29:23,040
or you're really hacking things um so uh

3125
02:29:23,040 --> 02:29:24,399
they have an ube management interface

3126
02:29:24,399 --> 02:29:25,840
the hardware devices will have a switch

3127
02:29:25,840 --> 02:29:27,120
up bank of switch ports and they'll have

3128
02:29:27,120 --> 02:29:28,880
an actual like gigabit interface that

3129
02:29:28,880 --> 02:29:31,359
people can plug into the management side

3130
02:29:31,359 --> 02:29:32,319
um

3131
02:29:32,319 --> 02:29:34,960
they also have these network interfaces

3132
02:29:34,960 --> 02:29:37,120
you generally plug them in to a trunk

3133
02:29:37,120 --> 02:29:38,960
port a lot of people then tag vlans on

3134
02:29:38,960 --> 02:29:41,200
top of them and then because it's in a

3135
02:29:41,200 --> 02:29:43,920
hsrp kind of design each device will

3136
02:29:43,920 --> 02:29:46,240
have its own non-stick a static ip

3137
02:29:46,240 --> 02:29:47,600
that's attached to the device and then

3138
02:29:47,600 --> 02:29:48,640
there's an iv that they call the

3139
02:29:48,640 --> 02:29:50,960
floating address this is bound to the

3140
02:29:50,960 --> 02:29:52,560
device that's passing traffic this is

3141
02:29:52,560 --> 02:29:54,240
where your server's default gateway will

3142
02:29:54,240 --> 02:29:56,479
be if the device fails over that ipad

3143
02:29:56,479 --> 02:29:58,319
just will float over to the other device

3144
02:29:58,319 --> 02:30:00,319
as it takes over the thing that people

3145
02:30:00,319 --> 02:30:02,080
don't realize and we saw this last week

3146
02:30:02,080 --> 02:30:03,760
when people were doing incident response

3147
02:30:03,760 --> 02:30:05,760
is that not only is the management gui

3148
02:30:05,760 --> 02:30:07,840
and ssh enabled on the management

3149
02:30:07,840 --> 02:30:08,880
interface

3150
02:30:08,880 --> 02:30:10,800
every single self ip address on the

3151
02:30:10,800 --> 02:30:13,040
device by default will be listening on

3152
02:30:13,040 --> 02:30:14,960
management traffic so people may be

3153
02:30:14,960 --> 02:30:15,920
thinking oh i'll just turn the

3154
02:30:15,920 --> 02:30:17,439
management interface off and i'm safe

3155
02:30:17,439 --> 02:30:19,600
well no every other self ip the device

3156
02:30:19,600 --> 02:30:21,200
has is also listening on those

3157
02:30:21,200 --> 02:30:23,840
management ports um so it makes it makes

3158
02:30:23,840 --> 02:30:27,040
locking these things down um complex

3159
02:30:27,040 --> 02:30:28,640
um behind these things are generally

3160
02:30:28,640 --> 02:30:30,800
pools this is the taxonomy that f5 uses

3161
02:30:30,800 --> 02:30:32,319
pools of servers which is just your

3162
02:30:32,319 --> 02:30:33,920
server resources

3163
02:30:33,920 --> 02:30:35,200
this is all stuff you can look at in the

3164
02:30:35,200 --> 02:30:36,960
config you can kind of figure out what's

3165
02:30:36,960 --> 02:30:38,720
back there most people name these pools

3166
02:30:38,720 --> 02:30:40,479
fairly explicitly so it's like web

3167
02:30:40,479 --> 02:30:42,720
server pool or my active directory pool

3168
02:30:42,720 --> 02:30:44,080
or whatever they're load balancing so

3169
02:30:44,080 --> 02:30:46,000
there's all sorts of juicy stuff that we

3170
02:30:46,000 --> 02:30:47,359
may not be able to get too deep in the

3171
02:30:47,359 --> 02:30:48,640
weeds on

3172
02:30:48,640 --> 02:30:50,160
the virtual servers are the actual

3173
02:30:50,160 --> 02:30:51,680
traffic interfaces this is the thing

3174
02:30:51,680 --> 02:30:53,120
that's going to be facing the internet

3175
02:30:53,120 --> 02:30:54,479
facing the clients this is what

3176
02:30:54,479 --> 02:30:56,240
everybody talks to and then it sort of

3177
02:30:56,240 --> 02:30:59,920
just disperses traffic across the back

3178
02:30:59,920 --> 02:31:02,399
they use these concept of profiles um

3179
02:31:02,399 --> 02:31:03,920
this isn't super relevant but i'm trying

3180
02:31:03,920 --> 02:31:05,760
to give you an idea super isn't super

3181
02:31:05,760 --> 02:31:07,760
relevant to attacking them but it's

3182
02:31:07,760 --> 02:31:09,280
useful to know how these things operate

3183
02:31:09,280 --> 02:31:11,200
so they'll make a virtual server what

3184
02:31:11,200 --> 02:31:12,800
these things will have is a like a layer

3185
02:31:12,800 --> 02:31:14,479
4 profile if it's going to serve let's

3186
02:31:14,479 --> 02:31:16,479
say it's serving tls it'll have a layer

3187
02:31:16,479 --> 02:31:18,800
4 profile for tcp then it will have a

3188
02:31:18,800 --> 02:31:20,800
profile for http because it's going to

3189
02:31:20,800 --> 02:31:22,640
be doing http traffic then it will have

3190
02:31:22,640 --> 02:31:25,040
another profile for ssl which is where

3191
02:31:25,040 --> 02:31:26,319
the certificate and all these other

3192
02:31:26,319 --> 02:31:27,920
details are stored so these things have

3193
02:31:27,920 --> 02:31:28,880
a very

3194
02:31:28,880 --> 02:31:30,880
it's a very kind of convoluted way of

3195
02:31:30,880 --> 02:31:33,280
configuring them um but once you start

3196
02:31:33,280 --> 02:31:34,319
digging around you can start to

3197
02:31:34,319 --> 02:31:35,680
understand okay how is what is this

3198
02:31:35,680 --> 02:31:38,319
thing doing and it's yeah it just takes

3199
02:31:38,319 --> 02:31:39,680
time

3200
02:31:39,680 --> 02:31:41,200
um one of the other things to notice

3201
02:31:41,200 --> 02:31:44,319
about these is that when they fail over

3202
02:31:44,319 --> 02:31:46,240
because they need to shift the layer to

3203
02:31:46,240 --> 02:31:48,319
address that all the servers are talking

3204
02:31:48,319 --> 02:31:51,280
to for um their default gateway and at

3205
02:31:51,280 --> 02:31:53,359
the very least they need to update the

3206
02:31:53,359 --> 02:31:55,359
switch with where this layer two address

3207
02:31:55,359 --> 02:31:56,960
is like they have a concept that they

3208
02:31:56,960 --> 02:31:58,640
call mac masquerading where you can have

3209
02:31:58,640 --> 02:32:00,479
a mac address that's on the floating

3210
02:32:00,479 --> 02:32:02,720
address so if it fails over the mac

3211
02:32:02,720 --> 02:32:04,319
address isn't going to change for the

3212
02:32:04,319 --> 02:32:05,680
back-end servers what it is going to

3213
02:32:05,680 --> 02:32:07,359
have to do is the switch the cam tables

3214
02:32:07,359 --> 02:32:08,399
in your switch are going to have to know

3215
02:32:08,399 --> 02:32:10,000
this mac address changed from this port

3216
02:32:10,000 --> 02:32:11,359
to that port

3217
02:32:11,359 --> 02:32:13,040
um so if you fail these things over by

3218
02:32:13,040 --> 02:32:14,479
accident you're going to get that's

3219
02:32:14,479 --> 02:32:15,520
going to get noticed they're going all

3220
02:32:15,520 --> 02:32:17,520
the cnc a failover event they may notice

3221
02:32:17,520 --> 02:32:19,200
that traffic gets interrupted for a

3222
02:32:19,200 --> 02:32:21,120
second the idea here is i'm trying to

3223
02:32:21,120 --> 02:32:22,720
teach you how to not get caught if you

3224
02:32:22,720 --> 02:32:24,640
hack onto one of these things and only a

3225
02:32:24,640 --> 02:32:28,080
red teaming environment of course

3226
02:32:28,080 --> 02:32:30,000
so a little bit about how these things

3227
02:32:30,000 --> 02:32:31,760
work at the low level

3228
02:32:31,760 --> 02:32:33,680
this is a slightly outdated slide or a

3229
02:32:33,680 --> 02:32:35,680
slightly outdated picture they split the

3230
02:32:35,680 --> 02:32:39,280
things into sort of two planes this aom

3231
02:32:39,280 --> 02:32:40,720
part of the graphic that you're looking

3232
02:32:40,720 --> 02:32:42,560
at is for one of their older platforms i

3233
02:32:42,560 --> 02:32:44,000
don't believe the new platforms have

3234
02:32:44,000 --> 02:32:45,840
these anymore that was the always-on

3235
02:32:45,840 --> 02:32:47,760
management it was a literally a separate

3236
02:32:47,760 --> 02:32:49,680
cpu that ran its own separate instance

3237
02:32:49,680 --> 02:32:51,760
of linux that you could mess around with

3238
02:32:51,760 --> 02:32:54,160
if you got onto it but the really

3239
02:32:54,160 --> 02:32:55,520
important part is there's what they call

3240
02:32:55,520 --> 02:32:57,439
the traffic management micro kernel this

3241
02:32:57,439 --> 02:33:00,319
is the code that f5 writes that

3242
02:33:00,319 --> 02:33:02,800
excuse me processes all the traffic it's

3243
02:33:02,800 --> 02:33:04,399
what handles all the load balancing it's

3244
02:33:04,399 --> 02:33:06,880
all the sort of brains of this device

3245
02:33:06,880 --> 02:33:08,720
everything production happens there

3246
02:33:08,720 --> 02:33:10,399
you'll see this hms part this is the

3247
02:33:10,399 --> 02:33:12,399
host management subsystem so this is

3248
02:33:12,399 --> 02:33:14,000
where your linux stuff works this is

3249
02:33:14,000 --> 02:33:15,359
where this is the part we're going to be

3250
02:33:15,359 --> 02:33:17,840
attacking

3251
02:33:17,920 --> 02:33:19,600
the other important thing if you break

3252
02:33:19,600 --> 02:33:22,319
tmm if you do something that causes it

3253
02:33:22,319 --> 02:33:24,399
to lock up the devices will fail over

3254
02:33:24,399 --> 02:33:26,240
and you will probably get caught if

3255
02:33:26,240 --> 02:33:27,600
people are paying attention this is

3256
02:33:27,600 --> 02:33:29,920
usually noticeable

3257
02:33:29,920 --> 02:33:31,840
now the management side is centos um

3258
02:33:31,840 --> 02:33:33,120
it's not a very updated version of

3259
02:33:33,120 --> 02:33:35,040
centos i think their most current

3260
02:33:35,040 --> 02:33:36,800
up-to-date code is running like centos

3261
02:33:36,800 --> 02:33:39,280
7-3 and i believe centos 8 is current

3262
02:33:39,280 --> 02:33:40,640
some of their older platforms go all the

3263
02:33:40,640 --> 02:33:43,280
way down to centos like 6.5

3264
02:33:43,280 --> 02:33:45,120
so you can pretty much do whatever you

3265
02:33:45,120 --> 02:33:46,319
want here and the interesting thing

3266
02:33:46,319 --> 02:33:48,160
about how the architecture works is when

3267
02:33:48,160 --> 02:33:49,760
the devices boot up at least the

3268
02:33:49,760 --> 02:33:51,760
hardware ones the first thing that takes

3269
02:33:51,760 --> 02:33:53,680
over all of the resources of cpu and

3270
02:33:53,680 --> 02:33:56,479
memory is their proprietary tmm code

3271
02:33:56,479 --> 02:33:58,640
then it yields back a certain percentage

3272
02:33:58,640 --> 02:34:00,319
back to the linux side so you're kind of

3273
02:34:00,319 --> 02:34:01,760
ice you're kind of protected from really

3274
02:34:01,760 --> 02:34:03,439
going breaking anything too badly

3275
02:34:03,439 --> 02:34:05,359
because there's a check there it says

3276
02:34:05,359 --> 02:34:07,600
okay if this if the linux side uses too

3277
02:34:07,600 --> 02:34:09,760
much cpu resources it just stops giving

3278
02:34:09,760 --> 02:34:11,520
it resources so the traffic the idea is

3279
02:34:11,520 --> 02:34:12,960
they want to always pass traffic and

3280
02:34:12,960 --> 02:34:14,960
never let you you know infinitely loop

3281
02:34:14,960 --> 02:34:16,479
something in linux that then takes down

3282
02:34:16,479 --> 02:34:18,560
the whole device

3283
02:34:18,560 --> 02:34:20,000
um now your traffic planes on these

3284
02:34:20,000 --> 02:34:22,240
things can be tens possibly hundreds of

3285
02:34:22,240 --> 02:34:25,439
gigabits a second at this point um this

3286
02:34:25,439 --> 02:34:27,840
is a little bit out of order but should

3287
02:34:27,840 --> 02:34:29,120
you get on one of these and should you

3288
02:34:29,120 --> 02:34:31,040
decide to start sniffing around or maybe

3289
02:34:31,040 --> 02:34:33,200
you just trying to capture sensitive

3290
02:34:33,200 --> 02:34:35,680
information or some whatever your your

3291
02:34:35,680 --> 02:34:37,520
sort of mission and this engagement

3292
02:34:37,520 --> 02:34:38,720
might be

3293
02:34:38,720 --> 02:34:40,720
don't put tcp dump on any of these

3294
02:34:40,720 --> 02:34:42,560
interfaces that have tmm attached to

3295
02:34:42,560 --> 02:34:44,720
them if you've ever been a cisco router

3296
02:34:44,720 --> 02:34:46,160
or a switch person that's like doing a

3297
02:34:46,160 --> 02:34:47,680
set debug all

3298
02:34:47,680 --> 02:34:49,920
you will basically be dumping 40 to 100

3299
02:34:49,920 --> 02:34:52,319
gigabits of traffic into tcp dump on the

3300
02:34:52,319 --> 02:34:54,640
linux side that will cause tmm to lock

3301
02:34:54,640 --> 02:34:56,640
up the device will stop working and you

3302
02:34:56,640 --> 02:34:58,960
will probably get caught um one of the

3303
02:34:58,960 --> 02:35:01,040
ways to figure out what platform you're

3304
02:35:01,040 --> 02:35:02,960
on is this is our first of the tmsh

3305
02:35:02,960 --> 02:35:05,120
commands if you ask it to show cis

3306
02:35:05,120 --> 02:35:07,359
hardware um and i apologize that i don't

3307
02:35:07,359 --> 02:35:09,280
have an example of it what it looks like

3308
02:35:09,280 --> 02:35:10,560
it will actually tell you like what

3309
02:35:10,560 --> 02:35:12,479
hardware platform it is is it a virtual

3310
02:35:12,479 --> 02:35:14,240
instance you know how much processing

3311
02:35:14,240 --> 02:35:16,080
power um it gives you ideas and then you

3312
02:35:16,080 --> 02:35:17,359
just go look it up on their website say

3313
02:35:17,359 --> 02:35:19,040
okay how big of a box am i on right

3314
02:35:19,040 --> 02:35:20,560
amazon am i on the 2 million dollar

3315
02:35:20,560 --> 02:35:22,399
chassis or i'm on the like 40 000

3316
02:35:22,399 --> 02:35:24,800
chassis

3317
02:35:24,800 --> 02:35:26,880
so once you get on one of these things

3318
02:35:26,880 --> 02:35:28,640
um let's say we use one of our fun

3319
02:35:28,640 --> 02:35:30,560
exploits to get root um there's some

3320
02:35:30,560 --> 02:35:32,319
things you need to know to not once

3321
02:35:32,319 --> 02:35:33,840
again not get caught

3322
02:35:33,840 --> 02:35:35,280
these devices because they're in

3323
02:35:35,280 --> 02:35:37,359
failover pairs use the concept of a

3324
02:35:37,359 --> 02:35:38,960
shared configuration right so this is

3325
02:35:38,960 --> 02:35:40,399
the stuff where you add your virtual

3326
02:35:40,399 --> 02:35:42,560
servers your server pools your ssl

3327
02:35:42,560 --> 02:35:44,080
things and this is of course

3328
02:35:44,080 --> 02:35:45,920
synchronized between both devices so

3329
02:35:45,920 --> 02:35:47,359
that if it fails over it has the same

3330
02:35:47,359 --> 02:35:48,479
config

3331
02:35:48,479 --> 02:35:50,479
if you change things here there's a

3332
02:35:50,479 --> 02:35:52,080
fairly good chance you'll get noticed

3333
02:35:52,080 --> 02:35:53,840
the devices are smart enough to notice

3334
02:35:53,840 --> 02:35:55,920
when a change is made to one side and

3335
02:35:55,920 --> 02:35:58,240
it'll say oh i'm not i'm no longer in

3336
02:35:58,240 --> 02:36:00,000
synchronization and if somebody's paying

3337
02:36:00,000 --> 02:36:02,399
attention a big if they may say why did

3338
02:36:02,399 --> 02:36:03,840
the devices just go out of sync and

3339
02:36:03,840 --> 02:36:06,800
they're config let's go take a look

3340
02:36:06,800 --> 02:36:08,399
as i said changes that impact the

3341
02:36:08,399 --> 02:36:10,560
traffic plane uh will definitely be

3342
02:36:10,560 --> 02:36:12,800
noticed um if you start doing things

3343
02:36:12,800 --> 02:36:14,560
like changing things you start messing

3344
02:36:14,560 --> 02:36:15,520
around with the load balancing

3345
02:36:15,520 --> 02:36:17,520
configuration or trying to fiddle with

3346
02:36:17,520 --> 02:36:19,280
the actual stuff that's serving traffic

3347
02:36:19,280 --> 02:36:20,880
a lot of times what will happen when you

3348
02:36:20,880 --> 02:36:22,399
when you apply the change it sort of

3349
02:36:22,399 --> 02:36:24,319
resets that configuration so you may

3350
02:36:24,319 --> 02:36:26,240
drop active sessions you may cause a

3351
02:36:26,240 --> 02:36:28,000
traffic interruption like some blip that

3352
02:36:28,000 --> 02:36:29,280
will get caught people say what happened

3353
02:36:29,280 --> 02:36:31,359
to my f5 why did it why did it like have

3354
02:36:31,359 --> 02:36:33,120
a blip

3355
02:36:33,120 --> 02:36:35,200
um now if you just change stuff on a

3356
02:36:35,200 --> 02:36:36,880
single device there is a section of the

3357
02:36:36,880 --> 02:36:38,960
config as i mentioned like the self ips

3358
02:36:38,960 --> 02:36:41,120
r is just for the single device that

3359
02:36:41,120 --> 02:36:42,560
doesn't get synchronized so nobody

3360
02:36:42,560 --> 02:36:45,760
really notices that so keep that in mind

3361
02:36:45,760 --> 02:36:47,520
and if you don't know how these things

3362
02:36:47,520 --> 02:36:49,200
work if you're not familiar with the

3363
02:36:49,200 --> 02:36:51,200
underlying tech don't touch the traffic

3364
02:36:51,200 --> 02:36:52,960
plane they have this cool technology

3365
02:36:52,960 --> 02:36:54,399
that they call eye rolls which is

3366
02:36:54,399 --> 02:36:57,520
basically a tcl tk modified tcltk

3367
02:36:57,520 --> 02:36:59,520
language which allows you to do deep

3368
02:36:59,520 --> 02:37:01,359
packet inspection on traffic flowing

3369
02:37:01,359 --> 02:37:02,720
through the device and then you can

3370
02:37:02,720 --> 02:37:05,040
manipulate and steer traffic based on

3371
02:37:05,040 --> 02:37:07,600
like binary payloads um i think i know

3372
02:37:07,600 --> 02:37:09,520
one person in the world that's good with

3373
02:37:09,520 --> 02:37:11,840
these things um yeah i mean if you want

3374
02:37:11,840 --> 02:37:13,840
to mess around there you can but i would

3375
02:37:13,840 --> 02:37:15,520
highly advise that you either steal

3376
02:37:15,520 --> 02:37:17,200
their config and then set up a vm lab

3377
02:37:17,200 --> 02:37:19,680
and try to do it um but it's it's it's

3378
02:37:19,680 --> 02:37:22,479
it's there be dragons there

3379
02:37:22,479 --> 02:37:25,200
um so once you get on uh all of this is

3380
02:37:25,200 --> 02:37:26,800
centos right so the logging is all in

3381
02:37:26,800 --> 02:37:29,439
var log um they do have like i mentioned

3382
02:37:29,439 --> 02:37:31,280
remote logging so this is the type of

3383
02:37:31,280 --> 02:37:33,600
thing you would you can check using this

3384
02:37:33,600 --> 02:37:35,600
exploit you can actually say you know

3385
02:37:35,600 --> 02:37:37,200
before you maybe jump on the box and

3386
02:37:37,200 --> 02:37:38,560
start doing things you could say look

3387
02:37:38,560 --> 02:37:41,040
tmsh list says syslog it'll tell you if

3388
02:37:41,040 --> 02:37:43,680
the device is doing a remote syslog

3389
02:37:43,680 --> 02:37:45,120
if you dig further into their

3390
02:37:45,120 --> 02:37:47,120
configuration documentation you could in

3391
02:37:47,120 --> 02:37:49,680
theory disable the remote logging before

3392
02:37:49,680 --> 02:37:51,760
you hack onto the device and sort of

3393
02:37:51,760 --> 02:37:54,960
pre-cover your tracks

3394
02:37:54,960 --> 02:37:56,720
they have a proprietary somewhat

3395
02:37:56,720 --> 02:37:58,479
proprietary authentication system it's

3396
02:37:58,479 --> 02:38:00,880
based loosely on linux pam

3397
02:38:00,880 --> 02:38:02,640
the only account you will ever be able

3398
02:38:02,640 --> 02:38:03,439
to

3399
02:38:03,439 --> 02:38:05,600
add to the linux side is or you won't be

3400
02:38:05,600 --> 02:38:07,120
able to the only account you can log in

3401
02:38:07,120 --> 02:38:09,280
that's actually a linux account is root

3402
02:38:09,280 --> 02:38:11,439
so trying to echo something into etsy

3403
02:38:11,439 --> 02:38:13,040
password and create a user through the

3404
02:38:13,040 --> 02:38:14,399
add user thing it's not going to work

3405
02:38:14,399 --> 02:38:16,319
they just you can create the user but it

3406
02:38:16,319 --> 02:38:19,359
won't let you log in with that user

3407
02:38:19,359 --> 02:38:21,520
um history files you know clearing our

3408
02:38:21,520 --> 02:38:23,520
tracks home user is where all your

3409
02:38:23,520 --> 02:38:25,520
history files are created there's two of

3410
02:38:25,520 --> 02:38:27,280
them there's your normal bash history

3411
02:38:27,280 --> 02:38:29,520
and then you've got the tmsh history

3412
02:38:29,520 --> 02:38:30,880
you need to clear out both of those if

3413
02:38:30,880 --> 02:38:32,560
you're trying to keep people from seeing

3414
02:38:32,560 --> 02:38:35,199
what you're doing

3415
02:38:36,399 --> 02:38:38,399
and let's see here

3416
02:38:38,399 --> 02:38:39,439
so

3417
02:38:39,439 --> 02:38:41,600
user accounts so if we're going to hack

3418
02:38:41,600 --> 02:38:43,760
on to one of these devices right we've

3419
02:38:43,760 --> 02:38:47,920
got this cool exploit from um last week

3420
02:38:47,920 --> 02:38:49,520
the idea because it gives you root

3421
02:38:49,520 --> 02:38:50,880
access you're going to need to log into

3422
02:38:50,880 --> 02:38:53,120
this thing somehow now more advanced red

3423
02:38:53,120 --> 02:38:54,880
teamers you may be able to spawn like a

3424
02:38:54,880 --> 02:38:56,640
net cat reverse shell

3425
02:38:56,640 --> 02:38:58,960
i'm not a red teamer full discloser so

3426
02:38:58,960 --> 02:39:00,640
you probably have better tricks than i

3427
02:39:00,640 --> 02:39:02,080
do and if you want to talk about it

3428
02:39:02,080 --> 02:39:04,080
later please come see me

3429
02:39:04,080 --> 02:39:06,319
but you can create user accounts and it

3430
02:39:06,319 --> 02:39:08,080
will be noticed right if you created a

3431
02:39:08,080 --> 02:39:09,840
user account you'll notice that it goes

3432
02:39:09,840 --> 02:39:12,399
from online and in sync to online and

3433
02:39:12,399 --> 02:39:14,880
changes pending so this is the kind of

3434
02:39:14,880 --> 02:39:16,800
visual cue that if someone's watching it

3435
02:39:16,800 --> 02:39:18,319
they'll notice well something just went

3436
02:39:18,319 --> 02:39:19,680
differently

3437
02:39:19,680 --> 02:39:22,880
however because users are not a traffic

3438
02:39:22,880 --> 02:39:24,720
serving part of the configuration you

3439
02:39:24,720 --> 02:39:26,240
could then just synchronize the

3440
02:39:26,240 --> 02:39:28,160
configuration it won't interrupt

3441
02:39:28,160 --> 02:39:29,840
anything and the all of a sudden the

3442
02:39:29,840 --> 02:39:31,439
devices will go back to being in sync

3443
02:39:31,439 --> 02:39:33,520
and you've created your own user and now

3444
02:39:33,520 --> 02:39:37,040
you can log in and do whatever you want

3445
02:39:37,040 --> 02:39:40,560
the advance the advanced shell and i

3446
02:39:40,560 --> 02:39:42,560
have an example of this coming up

3447
02:39:42,560 --> 02:39:44,240
when you create a user when these user

3448
02:39:44,240 --> 02:39:45,760
accounts are created they give a whole

3449
02:39:45,760 --> 02:39:47,120
bunch of different permissions but there

3450
02:39:47,120 --> 02:39:48,720
is an option of which shell you give

3451
02:39:48,720 --> 02:39:49,520
them

3452
02:39:49,520 --> 02:39:51,920
if you say shell none then they can only

3453
02:39:51,920 --> 02:39:54,319
log in via the gui if they say shell

3454
02:39:54,319 --> 02:39:57,280
tmsh then they can log in only with tmsh

3455
02:39:57,280 --> 02:39:59,760
which restricts command line access you

3456
02:39:59,760 --> 02:40:01,840
can generally feed

3457
02:40:01,840 --> 02:40:04,080
bash commands through it it has a bash

3458
02:40:04,080 --> 02:40:06,479
option you say okay just bash minus c

3459
02:40:06,479 --> 02:40:08,240
give it the bash command it'll run it

3460
02:40:08,240 --> 02:40:09,840
but what it won't let you do is just

3461
02:40:09,840 --> 02:40:11,439
drop to a full bash shell and start

3462
02:40:11,439 --> 02:40:12,960
running around in the file system and

3463
02:40:12,960 --> 02:40:15,200
doing all the the fun you know evil

3464
02:40:15,200 --> 02:40:18,080
things we like to do

3465
02:40:18,240 --> 02:40:19,680
the other interesting thing about these

3466
02:40:19,680 --> 02:40:22,240
devices is you can actually disable the

3467
02:40:22,240 --> 02:40:24,640
root account um at microsoft we did this

3468
02:40:24,640 --> 02:40:26,319
all the time we would basically set them

3469
02:40:26,319 --> 02:40:28,960
up we'd lock them down we restricted ssh

3470
02:40:28,960 --> 02:40:31,279
access we turned off the root account um

3471
02:40:31,279 --> 02:40:33,120
the fun thing about this i was testing

3472
02:40:33,120 --> 02:40:35,520
this in my lab is i disabled it and then

3473
02:40:35,520 --> 02:40:37,120
i used the exploit to check whether it

3474
02:40:37,120 --> 02:40:38,560
was disabled and it was like oh the root

3475
02:40:38,560 --> 02:40:40,160
account is disabled so then i use the

3476
02:40:40,160 --> 02:40:42,720
exploit to re-enable the root account

3477
02:40:42,720 --> 02:40:45,439
and now i can log back in now

3478
02:40:45,439 --> 02:40:47,359
this seems like pretty cool but keep in

3479
02:40:47,359 --> 02:40:49,279
mind i knew the password for the device

3480
02:40:49,279 --> 02:40:51,279
so if i don't know the password for the

3481
02:40:51,279 --> 02:40:52,880
root account my options are either

3482
02:40:52,880 --> 02:40:54,880
change it which now if they go to log in

3483
02:40:54,880 --> 02:40:56,479
and it doesn't work that's definitely a

3484
02:40:56,479 --> 02:40:58,399
sign that something's wrong

3485
02:40:58,399 --> 02:41:00,720
or just you know add a user and give

3486
02:41:00,720 --> 02:41:02,800
them bash access and then continue on

3487
02:41:02,800 --> 02:41:04,240
with your day but it's just fun it's an

3488
02:41:04,240 --> 02:41:06,479
interesting way these management um the

3489
02:41:06,479 --> 02:41:08,399
management stuff that they've done

3490
02:41:08,399 --> 02:41:10,319
is is sort of convoluted and there's so

3491
02:41:10,319 --> 02:41:12,560
many attack paths the vulnerability that

3492
02:41:12,560 --> 02:41:14,800
came out in 2020 like i said past

3493
02:41:14,800 --> 02:41:17,040
reversal against a java servlet page in

3494
02:41:17,040 --> 02:41:19,920
tomcat that allowed you to run tmsh

3495
02:41:19,920 --> 02:41:22,880
commands as root this one was you know

3496
02:41:22,880 --> 02:41:24,240
the connection header which hit a

3497
02:41:24,240 --> 02:41:26,000
different hit the rest api that allowed

3498
02:41:26,000 --> 02:41:29,040
you to log run commands as root um it's

3499
02:41:29,040 --> 02:41:30,960
it seems like we're in a groundhog day

3500
02:41:30,960 --> 02:41:32,720
sometimes

3501
02:41:32,720 --> 02:41:34,399
the other interesting thing about it is

3502
02:41:34,399 --> 02:41:37,200
they don't have a firewall per se like

3503
02:41:37,200 --> 02:41:39,359
these things have the concept of what

3504
02:41:39,359 --> 02:41:41,840
they call a net um it's a self-allow

3505
02:41:41,840 --> 02:41:43,600
list let me see i have a

3506
02:41:43,600 --> 02:41:46,000
picture of that so what this is is it's

3507
02:41:46,000 --> 02:41:48,000
essentially just a list of ports and

3508
02:41:48,000 --> 02:41:50,240
protocols that you will allow to be

3509
02:41:50,240 --> 02:41:52,880
accessed on the self ip address

3510
02:41:52,880 --> 02:41:55,200
now some of them if it's a ssh there is

3511
02:41:55,200 --> 02:41:56,960
a daemon running there if there it is

3512
02:41:56,960 --> 02:41:58,560
you know tls there's a daemon running

3513
02:41:58,560 --> 02:42:00,880
there um if you turn on some random

3514
02:42:00,880 --> 02:42:02,640
other port it may it just means that you

3515
02:42:02,640 --> 02:42:04,479
can talk to it on that port

3516
02:42:04,479 --> 02:42:06,479
um the fun part about this is because

3517
02:42:06,479 --> 02:42:08,640
they're not shared you know and again we

3518
02:42:08,640 --> 02:42:10,399
can go you know if you if you get one of

3519
02:42:10,399 --> 02:42:12,880
these devices you try you see okay well

3520
02:42:12,880 --> 02:42:14,399
there's a root account or i've created

3521
02:42:14,399 --> 02:42:16,319
myself a new account and then you try to

3522
02:42:16,319 --> 02:42:19,040
ssh in and you get a connection refused

3523
02:42:19,040 --> 02:42:20,560
well you throw the exploit payload and

3524
02:42:20,560 --> 02:42:22,240
you look at what the actual self-allow

3525
02:42:22,240 --> 02:42:24,240
list is and you're like okay well ssh is

3526
02:42:24,240 --> 02:42:25,520
disabled well then you just throw the

3527
02:42:25,520 --> 02:42:28,000
exploit payload and enable the ssh port

3528
02:42:28,000 --> 02:42:29,439
and now you can get back in and this

3529
02:42:29,439 --> 02:42:31,120
isn't shared nobody's going to notice

3530
02:42:31,120 --> 02:42:32,800
unless they're paying extremely close

3531
02:42:32,800 --> 02:42:34,479
attention

3532
02:42:34,479 --> 02:42:36,240
they also allow outbound connections by

3533
02:42:36,240 --> 02:42:38,840
default the thing though to keep in mind

3534
02:42:38,840 --> 02:42:41,279
is and the way we would deploy these in

3535
02:42:41,279 --> 02:42:42,640
sort of the like a really good

3536
02:42:42,640 --> 02:42:45,439
environment is the actual device itself

3537
02:42:45,439 --> 02:42:47,359
had no default gateway

3538
02:42:47,359 --> 02:42:48,960
there would be a default gateway for the

3539
02:42:48,960 --> 02:42:50,800
management network but what we would do

3540
02:42:50,800 --> 02:42:52,240
is we would put them in a network we

3541
02:42:52,240 --> 02:42:54,080
would plug them in trunk them put a

3542
02:42:54,080 --> 02:42:56,479
bunch of vlans and then the device

3543
02:42:56,479 --> 02:42:59,040
doesn't need a gateway to talk to to

3544
02:42:59,040 --> 02:43:00,880
pass traffic back and forth they use

3545
02:43:00,880 --> 02:43:02,880
this funky thing that they call auto

3546
02:43:02,880 --> 02:43:05,040
last hop which essentially the device

3547
02:43:05,040 --> 02:43:06,960
will record the layer 2 address that it

3548
02:43:06,960 --> 02:43:09,359
received traffic from and then when it

3549
02:43:09,359 --> 02:43:11,120
goes to respond or it's you know it's

3550
02:43:11,120 --> 02:43:12,960
passing the load balance traffic back

3551
02:43:12,960 --> 02:43:14,319
it'll say well i don't have a default

3552
02:43:14,319 --> 02:43:15,760
gateway in this network i'm just gonna

3553
02:43:15,760 --> 02:43:17,120
send it to the layer two address that

3554
02:43:17,120 --> 02:43:19,359
sent it to me so it's an interesting way

3555
02:43:19,359 --> 02:43:20,960
of routing without actually needing a

3556
02:43:20,960 --> 02:43:23,520
router if you will

3557
02:43:23,520 --> 02:43:26,399
and then to be consistent they have

3558
02:43:26,399 --> 02:43:28,720
three different names for their uh cell

3559
02:43:28,720 --> 02:43:30,240
phi p axles

3560
02:43:30,240 --> 02:43:32,000
if you get on the device itself it's

3561
02:43:32,000 --> 02:43:33,680
called a self-allow list in the

3562
02:43:33,680 --> 02:43:35,840
configuration or it's a self-allow list

3563
02:43:35,840 --> 02:43:37,520
when you're changing it when you look in

3564
02:43:37,520 --> 02:43:39,200
the config file it's called an allow

3565
02:43:39,200 --> 02:43:41,040
service and the net can fit in the net

3566
02:43:41,040 --> 02:43:42,640
self configuration and then if you go to

3567
02:43:42,640 --> 02:43:45,439
the gui it's called port lockdown

3568
02:43:45,439 --> 02:43:48,240
confused yet

3569
02:43:49,040 --> 02:43:52,240
um back doors and web shells so

3570
02:43:52,240 --> 02:43:53,760
the thing about these devices like i

3571
02:43:53,760 --> 02:43:55,520
said they run centos

3572
02:43:55,520 --> 02:43:57,439
uh they only have python 2. i was going

3573
02:43:57,439 --> 02:43:59,200
to do a whole bunch of cool demos with

3574
02:43:59,200 --> 02:44:00,240
um

3575
02:44:00,240 --> 02:44:02,000
like impacted and a bunch of other

3576
02:44:02,000 --> 02:44:03,439
things and i realized most of the fun

3577
02:44:03,439 --> 02:44:05,279
hacking tools are written in python 3

3578
02:44:05,279 --> 02:44:06,640
now

3579
02:44:06,640 --> 02:44:08,240
the other thing about these devices is

3580
02:44:08,240 --> 02:44:09,600
they've stripped out all of the stuff

3581
02:44:09,600 --> 02:44:10,960
that would be useful for you so there's

3582
02:44:10,960 --> 02:44:12,399
no compilers

3583
02:44:12,399 --> 02:44:13,840
they are centos but they don't have the

3584
02:44:13,840 --> 02:44:15,840
rpm command so you couldn't even like

3585
02:44:15,840 --> 02:44:18,080
grab a python 3 rpm and just you know

3586
02:44:18,080 --> 02:44:20,319
install it when you got on there so if

3587
02:44:20,319 --> 02:44:22,399
you're going to take post exploitation

3588
02:44:22,399 --> 02:44:24,080
tools with you you're going to need to

3589
02:44:24,080 --> 02:44:26,319
build them and test them in a lab or in

3590
02:44:26,319 --> 02:44:28,880
an f5 vm lab make sure that they work

3591
02:44:28,880 --> 02:44:30,399
and then you can just drag them over to

3592
02:44:30,399 --> 02:44:32,720
the device when you actually get onto it

3593
02:44:32,720 --> 02:44:36,000
um they are mostly centos on x86 64.

3594
02:44:36,000 --> 02:44:38,080
most of these devices run intel chips so

3595
02:44:38,080 --> 02:44:39,840
it's not really that difficult to do

3596
02:44:39,840 --> 02:44:41,600
this stuff it's just it takes some

3597
02:44:41,600 --> 02:44:44,560
preparation and planning

3598
02:44:44,560 --> 02:44:46,720
what they do have because of the way

3599
02:44:46,720 --> 02:44:48,399
these devices are set up and because of

3600
02:44:48,399 --> 02:44:49,760
some of the things that they need to be

3601
02:44:49,760 --> 02:44:52,080
able to do is they have a full suite of

3602
02:44:52,080 --> 02:44:53,920
ldap tools so this is i believe it's all

3603
02:44:53,920 --> 02:44:55,760
the standard centos stuff so you've got

3604
02:44:55,760 --> 02:44:58,960
ldap tools you've got smb client

3605
02:44:58,960 --> 02:45:01,520
you've got netcat ironically um it's

3606
02:45:01,520 --> 02:45:03,760
kron your rsa rc scripts you've got an

3607
02:45:03,760 --> 02:45:06,720
ssh daemon i think they might even have

3608
02:45:06,720 --> 02:45:08,880
ftp and telnet on them still

3609
02:45:08,880 --> 02:45:11,040
um not as a service just in the daemon

3610
02:45:11,040 --> 02:45:14,240
itself or the the client itself

3611
02:45:14,240 --> 02:45:16,319
so this brings me to a kind of fun part

3612
02:45:16,319 --> 02:45:18,880
uh which is as i was building this talk

3613
02:45:18,880 --> 02:45:20,880
um i was first i was like okay this is

3614
02:45:20,880 --> 02:45:22,640
cool and then i don't know if anybody's

3615
02:45:22,640 --> 02:45:24,720
gonna grok this mandiant comes out with

3616
02:45:24,720 --> 02:45:26,960
a report two weeks ago about this threat

3617
02:45:26,960 --> 02:45:29,120
reactor called unk 3524 which they

3618
02:45:29,120 --> 02:45:31,200
believe is a russian associated state

3619
02:45:31,200 --> 02:45:33,680
actor whose way of getting into networks

3620
02:45:33,680 --> 02:45:35,680
was hacking into load balancers sand

3621
02:45:35,680 --> 02:45:38,080
devices conference room cameras phone

3622
02:45:38,080 --> 02:45:40,000
systems all of the devices that run

3623
02:45:40,000 --> 02:45:41,600
proprietary code where you cannot run

3624
02:45:41,600 --> 02:45:43,760
edr it was almost like they copied my

3625
02:45:43,760 --> 02:45:45,439
slide for their blog and i was like so

3626
02:45:45,439 --> 02:45:46,479
honored

3627
02:45:46,479 --> 02:45:48,800
um so if you want more information i

3628
02:45:48,800 --> 02:45:50,399
highly recommend this article it's super

3629
02:45:50,399 --> 02:45:52,000
fun

3630
02:45:52,000 --> 02:45:54,000
so i notice as i'm reading this they're

3631
02:45:54,000 --> 02:45:55,920
talking about their quiet exit back door

3632
02:45:55,920 --> 02:45:59,120
which is this modified drop bear ssh

3633
02:45:59,120 --> 02:46:00,080
damon

3634
02:46:00,080 --> 02:46:01,040
and

3635
02:46:01,040 --> 02:46:02,960
this really funny part was i somebody

3636
02:46:02,960 --> 02:46:04,160
sent me this while i was building the

3637
02:46:04,160 --> 02:46:05,920
slides and i had just finished pocking

3638
02:46:05,920 --> 02:46:09,359
out a cron entry to build a reverse ssh

3639
02:46:09,359 --> 02:46:11,920
tunnel on reboot now again not a red

3640
02:46:11,920 --> 02:46:13,600
team or probably not the most efficient

3641
02:46:13,600 --> 02:46:16,000
way to do it because i had to you know

3642
02:46:16,000 --> 02:46:18,160
generate an ssh shared key put the

3643
02:46:18,160 --> 02:46:20,960
private key on my c2 server and do all

3644
02:46:20,960 --> 02:46:23,760
this other sort of tomfoolery but this

3645
02:46:23,760 --> 02:46:25,439
worked i was like okay i just plopped

3646
02:46:25,439 --> 02:46:27,040
this in there i rebooted the device and

3647
02:46:27,040 --> 02:46:28,560
then it boots back up and it makes an

3648
02:46:28,560 --> 02:46:30,960
ssh tunnel back to my c2 once again i

3649
02:46:30,960 --> 02:46:32,720
have to log in with an actual username

3650
02:46:32,720 --> 02:46:35,200
and password on the device but again you

3651
02:46:35,200 --> 02:46:36,640
read teamers

3652
02:46:36,640 --> 02:46:38,399
this is you can do all of this stuff

3653
02:46:38,399 --> 02:46:40,319
probably much more um elegantly than i

3654
02:46:40,319 --> 02:46:42,240
can

3655
02:46:42,240 --> 02:46:44,080
um and then the other thing to me to

3656
02:46:44,080 --> 02:46:45,920
note is if you're going to drop a web

3657
02:46:45,920 --> 02:46:48,240
shell um i believe the web path is like

3658
02:46:48,240 --> 02:46:51,040
user share dub dub dub something uh they

3659
02:46:51,040 --> 02:46:53,359
mount the user file system read only so

3660
02:46:53,359 --> 02:46:54,880
i've seen a lot of attempts when we're

3661
02:46:54,880 --> 02:46:56,880
doing ir where there's these commands

3662
02:46:56,880 --> 02:46:58,880
trying to sort of echo a php file into

3663
02:46:58,880 --> 02:47:00,399
the web directory that's not going to

3664
02:47:00,399 --> 02:47:02,640
work um the advanced actors have figured

3665
02:47:02,640 --> 02:47:04,479
this out and we saw this in 2020 they

3666
02:47:04,479 --> 02:47:05,680
were the first they would send was a

3667
02:47:05,680 --> 02:47:07,520
remount command to remount users read

3668
02:47:07,520 --> 02:47:09,040
write then they'd throw their web shell

3669
02:47:09,040 --> 02:47:10,000
on there and then they put it back to

3670
02:47:10,000 --> 02:47:11,520
read only so it doesn't look any it

3671
02:47:11,520 --> 02:47:12,880
doesn't look um

3672
02:47:12,880 --> 02:47:15,120
like anything happen and that k number

3673
02:47:15,120 --> 02:47:16,960
is the knowledge base article on f5's

3674
02:47:16,960 --> 02:47:18,319
website that you can go and find out

3675
02:47:18,319 --> 02:47:20,640
more about this there's also a bunch of

3676
02:47:20,640 --> 02:47:22,560
links at the end that you may be useful

3677
02:47:22,560 --> 02:47:24,880
for you

3678
02:47:24,880 --> 02:47:26,720
there's some fun things you can do with

3679
02:47:26,720 --> 02:47:28,720
network device discovery on these things

3680
02:47:28,720 --> 02:47:29,520
so

3681
02:47:29,520 --> 02:47:31,200
one of the features that their customers

3682
02:47:31,200 --> 02:47:32,880
webmf5 really love is this concept of

3683
02:47:32,880 --> 02:47:34,399
cookie persistence i believe they

3684
02:47:34,399 --> 02:47:36,479
actually have a patent on this thing

3685
02:47:36,479 --> 02:47:38,080
but what it does is you say okay i want

3686
02:47:38,080 --> 02:47:39,760
users to get a cookie that persists them

3687
02:47:39,760 --> 02:47:41,680
to this specific server and that way you

3688
02:47:41,680 --> 02:47:43,439
know the traffic will work and the id

3689
02:47:43,439 --> 02:47:46,000
concept too is if it fails over because

3690
02:47:46,000 --> 02:47:47,359
the configuration's the same you'll

3691
02:47:47,359 --> 02:47:49,359
you'll still be re-home to the very same

3692
02:47:49,359 --> 02:47:50,720
server because you have the cookie the

3693
02:47:50,720 --> 02:47:52,160
device says oh i know what server to

3694
02:47:52,160 --> 02:47:53,920
send you to so it's it's actually one of

3695
02:47:53,920 --> 02:47:55,920
their cooler features the better part

3696
02:47:55,920 --> 02:47:57,600
about this feature is you can decode

3697
02:47:57,600 --> 02:47:58,880
these cookies and you can figure out

3698
02:47:58,880 --> 02:48:00,800
what the backend sort of ip dressing

3699
02:48:00,800 --> 02:48:03,040
scheme looks like because and it might

3700
02:48:03,040 --> 02:48:05,040
be a little hard to read

3701
02:48:05,040 --> 02:48:06,800
you do a showdown search for big-ip

3702
02:48:06,800 --> 02:48:08,080
server that's what the cookie is named

3703
02:48:08,080 --> 02:48:09,840
by default and then you can actually

3704
02:48:09,840 --> 02:48:11,359
look in the details of it and it tells

3705
02:48:11,359 --> 02:48:13,200
you the pool name inside the device and

3706
02:48:13,200 --> 02:48:15,120
then the numeric strings or the ip

3707
02:48:15,120 --> 02:48:16,319
address and then the port that it's

3708
02:48:16,319 --> 02:48:18,240
running on and i think there's some

3709
02:48:18,240 --> 02:48:20,160
other piece of detail that it's been 10

3710
02:48:20,160 --> 02:48:21,680
years since i worked there

3711
02:48:21,680 --> 02:48:23,200
um so that's kind of a fun thing if

3712
02:48:23,200 --> 02:48:24,720
you're you don't even have access to it

3713
02:48:24,720 --> 02:48:25,760
yet you figure okay what does the

3714
02:48:25,760 --> 02:48:29,120
back-end server network look like

3715
02:48:29,200 --> 02:48:30,399
the other fun thing like i said these

3716
02:48:30,399 --> 02:48:32,800
things are ssl tls um

3717
02:48:32,800 --> 02:48:35,520
concentrators so a lot of places will

3718
02:48:35,520 --> 02:48:38,080
just not run asl on the back end so

3719
02:48:38,080 --> 02:48:39,439
they'll do it securely on the front and

3720
02:48:39,439 --> 02:48:40,960
then everything in the back is clear

3721
02:48:40,960 --> 02:48:43,680
text now most banks don't do this they

3722
02:48:43,680 --> 02:48:45,520
do have the ability to do re-encryption

3723
02:48:45,520 --> 02:48:46,720
on the back end so you see like

3724
02:48:46,720 --> 02:48:48,319
financial institutions and people that

3725
02:48:48,319 --> 02:48:51,120
are super security aware will re-encrypt

3726
02:48:51,120 --> 02:48:52,399
but a lot of people that are like i have

3727
02:48:52,399 --> 02:48:53,840
an online commerce website i'm just

3728
02:48:53,840 --> 02:48:55,200
going to sell it in the front and then

3729
02:48:55,200 --> 02:48:57,439
clear text it in the back yolo

3730
02:48:57,439 --> 02:48:58,479
so

3731
02:48:58,479 --> 02:49:00,160
like i said be careful if you tc feed

3732
02:49:00,160 --> 02:49:01,920
them but it is a full-fledged tcp dump

3733
02:49:01,920 --> 02:49:03,200
if you start to figure out what server

3734
02:49:03,200 --> 02:49:05,439
you're going for just craft a tcp dumb

3735
02:49:05,439 --> 02:49:07,120
string to only pull traffic for that

3736
02:49:07,120 --> 02:49:09,200
specific system and then it's far less

3737
02:49:09,200 --> 02:49:11,680
chance of you getting in trouble

3738
02:49:11,680 --> 02:49:13,520
um they do remote authentication so they

3739
02:49:13,520 --> 02:49:15,279
can authenticate against ldap active

3740
02:49:15,279 --> 02:49:17,920
directory radius tacacs um this is all

3741
02:49:17,920 --> 02:49:19,600
stuff you can see in their config files

3742
02:49:19,600 --> 02:49:20,399
so

3743
02:49:20,399 --> 02:49:22,640
um again tmsh list auth will show you

3744
02:49:22,640 --> 02:49:24,479
whatever their remote authentication

3745
02:49:24,479 --> 02:49:27,040
stuff is set up as if you see an auth

3746
02:49:27,040 --> 02:49:28,960
source of just an empty parens it means

3747
02:49:28,960 --> 02:49:30,880
that it's only using local accounts on

3748
02:49:30,880 --> 02:49:32,319
the device

3749
02:49:32,319 --> 02:49:33,760
if you see anything else it'll say you

3750
02:49:33,760 --> 02:49:35,840
know type is active directory it'll have

3751
02:49:35,840 --> 02:49:36,720
the

3752
02:49:36,720 --> 02:49:38,960
sam like the the dn search path it'll

3753
02:49:38,960 --> 02:49:41,200
have the sam account name um i couldn't

3754
02:49:41,200 --> 02:49:42,960
figure out how to crack the passwords i

3755
02:49:42,960 --> 02:49:44,640
think they are using salted um

3756
02:49:44,640 --> 02:49:46,399
encryption when they do these things but

3757
02:49:46,399 --> 02:49:48,160
if you're a password cracker like

3758
02:49:48,160 --> 02:49:50,319
go like go to town on it and then tube

3759
02:49:50,319 --> 02:49:52,319
state show off will give you users

3760
02:49:52,319 --> 02:49:53,680
failed logins and accounts that have

3761
02:49:53,680 --> 02:49:55,359
been locked out i have never seen

3762
02:49:55,359 --> 02:49:57,600
anybody actually set up a lockout

3763
02:49:57,600 --> 02:49:59,520
like a login limit on their local the

3764
02:49:59,520 --> 02:50:00,880
devices they just kind of leave it as

3765
02:50:00,880 --> 02:50:02,319
the defaults and the default does not

3766
02:50:02,319 --> 02:50:03,680
lock you out after a number of failed

3767
02:50:03,680 --> 02:50:05,760
attempts

3768
02:50:05,760 --> 02:50:07,520
and then one of the fun things about

3769
02:50:07,520 --> 02:50:09,120
these is because they deploy them in

3770
02:50:09,120 --> 02:50:10,640
pairs they actually have this concept of

3771
02:50:10,640 --> 02:50:12,960
clustering so you can deploy three four

3772
02:50:12,960 --> 02:50:14,479
or five of these things in a cluster i

3773
02:50:14,479 --> 02:50:16,399
don't know why you would

3774
02:50:16,399 --> 02:50:18,479
but you can use the exploit and you

3775
02:50:18,479 --> 02:50:20,399
could actually like discover other

3776
02:50:20,399 --> 02:50:21,840
devices on the network so let's say

3777
02:50:21,840 --> 02:50:23,680
somebody forgets and leaves just one

3778
02:50:23,680 --> 02:50:25,600
interface in a place where you can reach

3779
02:50:25,600 --> 02:50:27,680
it and everything else is firewalled off

3780
02:50:27,680 --> 02:50:30,160
well you can use this you know list cm

3781
02:50:30,160 --> 02:50:31,600
device and it'll show you all the other

3782
02:50:31,600 --> 02:50:33,520
devices in the cluster and then you can

3783
02:50:33,520 --> 02:50:35,840
go and theoretically laterally move

3784
02:50:35,840 --> 02:50:37,760
i'm going to redevelop this talk later

3785
02:50:37,760 --> 02:50:39,439
in the year and probably try to

3786
02:50:39,439 --> 02:50:40,960
basically have the device exploit the

3787
02:50:40,960 --> 02:50:42,800
next device by using the exploit say

3788
02:50:42,800 --> 02:50:44,399
okay send this command use the payload

3789
02:50:44,399 --> 02:50:45,760
to get to the next device pull a shell

3790
02:50:45,760 --> 02:50:48,399
back to me so it's just how how evil are

3791
02:50:48,399 --> 02:50:49,279
you

3792
02:50:49,279 --> 02:50:51,920
um then the gui runs on 8443 for vm so

3793
02:50:51,920 --> 02:50:53,680
if you're scanning 443 in a network scan

3794
02:50:53,680 --> 02:50:56,960
8443 you might find some virtualized f5s

3795
02:50:56,960 --> 02:50:58,640
and then i have showed end queries that

3796
02:50:58,640 --> 02:50:59,840
i like to throw out there i like to

3797
02:50:59,840 --> 02:51:01,439
discover things on the internet when a

3798
02:51:01,439 --> 02:51:03,279
vulnerability comes out you can get some

3799
02:51:03,279 --> 02:51:05,359
of those there

3800
02:51:05,359 --> 02:51:06,960
valuable config items and this is where

3801
02:51:06,960 --> 02:51:08,479
the beer thing comes in so this was

3802
02:51:08,479 --> 02:51:10,880
actually one of the xbox live

3803
02:51:10,880 --> 02:51:13,279
f5 devices when they decommissioned it

3804
02:51:13,279 --> 02:51:14,399
they were so happy to have it out of

3805
02:51:14,399 --> 02:51:15,920
their network they threw a party and

3806
02:51:15,920 --> 02:51:17,200
this turned into the world's most

3807
02:51:17,200 --> 02:51:18,640
expensive beer tap you're looking at a

3808
02:51:18,640 --> 02:51:21,279
750 000 piece of networking hardware

3809
02:51:21,279 --> 02:51:22,720
that they ran beer lines through and

3810
02:51:22,720 --> 02:51:25,600
then encased in a block of ice

3811
02:51:25,600 --> 02:51:27,359
not even joking and the beer was pretty

3812
02:51:27,359 --> 02:51:29,920
good um so configuration items are all

3813
02:51:29,920 --> 02:51:32,240
in slash config the big-ip based conf is

3814
02:51:32,240 --> 02:51:34,240
your base device and networking this

3815
02:51:34,240 --> 02:51:36,800
big-ip conf is your shared configuration

3816
02:51:36,800 --> 02:51:39,279
the user config is here and big-ip user

3817
02:51:39,279 --> 02:51:41,200
you'll notice that this is actually the

3818
02:51:41,200 --> 02:51:44,240
old 2020 payload pulling out the the

3819
02:51:44,240 --> 02:51:46,560
user information which is kind of ugly

3820
02:51:46,560 --> 02:51:48,720
and then this was the new one from 2022

3821
02:51:48,720 --> 02:51:50,399
which is cool because it's json so it

3822
02:51:50,399 --> 02:51:51,680
actually comes out formatted and it

3823
02:51:51,680 --> 02:51:53,120
looks beautiful

3824
02:51:53,120 --> 02:51:55,120
and then tmsh list auth user will give

3825
02:51:55,120 --> 02:51:55,760
you

3826
02:51:55,760 --> 02:51:58,880
hashes the hashes are not in the config

3827
02:51:58,880 --> 02:52:00,800
uh config file store this is where all

3828
02:52:00,800 --> 02:52:03,120
the configuration ssl certs keys all the

3829
02:52:03,120 --> 02:52:04,800
juicy stuff that these devices can have

3830
02:52:04,800 --> 02:52:06,479
is stored in there

3831
02:52:06,479 --> 02:52:08,800
uh config gtm uh we don't have time to

3832
02:52:08,800 --> 02:52:10,479
go into the dns side of these things but

3833
02:52:10,479 --> 02:52:12,000
if they're doing dns load balancing and

3834
02:52:12,000 --> 02:52:13,439
you can get root on one of these you can

3835
02:52:13,439 --> 02:52:15,439
imagine all the evil things you can do

3836
02:52:15,439 --> 02:52:17,840
it's all in config gtm

3837
02:52:17,840 --> 02:52:19,600
uh you can also do what i would prefer

3838
02:52:19,600 --> 02:52:21,520
to tell you to do is do a tmsh save the

3839
02:52:21,520 --> 02:52:23,600
ucs which is the config backup it's just

3840
02:52:23,600 --> 02:52:25,520
a tar gz file that they taught they

3841
02:52:25,520 --> 02:52:28,399
renamed it dot ucs save it download it

3842
02:52:28,399 --> 02:52:31,120
rename to tgz unpack it you have every

3843
02:52:31,120 --> 02:52:32,720
valuable file that the device has and

3844
02:52:32,720 --> 02:52:34,319
you can go through it without as much

3845
02:52:34,319 --> 02:52:36,479
risk of getting caught

3846
02:52:36,479 --> 02:52:39,200
um so how to build a test lab um this is

3847
02:52:39,200 --> 02:52:41,359
uh this is what i did so they give away

3848
02:52:41,359 --> 02:52:43,680
virtual edition uh vms for free for all

3849
02:52:43,680 --> 02:52:45,359
your major hypervisors right so we got

3850
02:52:45,359 --> 02:52:47,200
kvm hyper-v

3851
02:52:47,200 --> 02:52:50,560
um vmware uh they also give away

3852
02:52:50,560 --> 02:52:52,640
vulnerable versions so the version that

3853
02:52:52,640 --> 02:52:54,800
i was running was vulnerable to the 2020

3854
02:52:54,800 --> 02:52:56,479
cve it turns out it was also vulnerable

3855
02:52:56,479 --> 02:52:58,800
of course to the 2022 cv but it's cool

3856
02:52:58,800 --> 02:53:00,399
if you figure out what your what version

3857
02:53:00,399 --> 02:53:02,160
it's on just download that version and

3858
02:53:02,160 --> 02:53:03,520
now you can start messing around with it

3859
02:53:03,520 --> 02:53:04,880
i thought you would delete vulnerable

3860
02:53:04,880 --> 02:53:06,720
versions of code from your repositories

3861
02:53:06,720 --> 02:53:08,880
but they don't um like i said this is

3862
02:53:08,880 --> 02:53:11,279
how you test your toys uh and they want

3863
02:53:11,279 --> 02:53:12,720
if you want to do load balancing like

3864
02:53:12,720 --> 02:53:14,960
actually license it you need a 30 day

3865
02:53:14,960 --> 02:53:16,640
demo license you can use a throwaway

3866
02:53:16,640 --> 02:53:17,840
email to get one of these like they

3867
02:53:17,840 --> 02:53:19,600
don't check to see if it's a valid like

3868
02:53:19,600 --> 02:53:21,040
like a legitimate company just go to

3869
02:53:21,040 --> 02:53:22,479
like throwaway mail or any of those

3870
02:53:22,479 --> 02:53:24,880
sites you can you set up an account ask

3871
02:53:24,880 --> 02:53:26,479
for registration keys they give you a

3872
02:53:26,479 --> 02:53:28,080
set of three they're good for 30 days

3873
02:53:28,080 --> 02:53:29,520
you can do this as many times as you

3874
02:53:29,520 --> 02:53:31,200
want i think i generated 30 of them in

3875
02:53:31,200 --> 02:53:33,680
the process of testing this lab

3876
02:53:33,680 --> 02:53:35,680
i use proxmox this screenshot is

3877
02:53:35,680 --> 02:53:37,840
actually the config from my proxmox

3878
02:53:37,840 --> 02:53:39,920
server it's very complicated and finicky

3879
02:53:39,920 --> 02:53:41,920
to get this working if you have problems

3880
02:53:41,920 --> 02:53:43,520
see me afterwards

3881
02:53:43,520 --> 02:53:45,200
um you can also run these in clouds

3882
02:53:45,200 --> 02:53:47,600
azure aws virtualized instances same

3883
02:53:47,600 --> 02:53:49,200
process for a demo license except you

3884
02:53:49,200 --> 02:53:50,800
also have to pay for cloud computing

3885
02:53:50,800 --> 02:53:52,720
time up to you

3886
02:53:52,720 --> 02:53:54,160
and then you can download isos too the

3887
02:53:54,160 --> 02:53:55,439
same thing with a throwaway account so

3888
02:53:55,439 --> 02:53:56,880
if you'd like to pull apart isos and

3889
02:53:56,880 --> 02:53:58,160
look at all the stuff that's installed

3890
02:53:58,160 --> 02:53:59,520
and see if there's old packages that you

3891
02:53:59,520 --> 02:54:02,000
can exploit you can do that too

3892
02:54:02,000 --> 02:54:03,840
uh don't buy them off ebay if you buy it

3893
02:54:03,840 --> 02:54:05,439
off ebay you will not be able to use it

3894
02:54:05,439 --> 02:54:06,960
until you have a valid support contract

3895
02:54:06,960 --> 02:54:08,800
from f5 which costs thousands and

3896
02:54:08,800 --> 02:54:10,240
thousands and thousands of dollars a

3897
02:54:10,240 --> 02:54:11,520
year

3898
02:54:11,520 --> 02:54:12,960
and if you're interested in doing any of

3899
02:54:12,960 --> 02:54:14,240
this stuff i'm happy to help you with

3900
02:54:14,240 --> 02:54:16,000
research find me later hit me up on

3901
02:54:16,000 --> 02:54:18,319
twitter and with that your reference

3902
02:54:18,319 --> 02:54:20,240
material is here i will be posting these

3903
02:54:20,240 --> 02:54:22,800
slides to my github later on today um

3904
02:54:22,800 --> 02:54:24,560
like i said come find me

3905
02:54:24,560 --> 02:54:26,160
and thank you very much and like i said

3906
02:54:26,160 --> 02:54:27,760
i mentioned i was a dj this was me 20

3907
02:54:27,760 --> 02:54:29,680
years ago before the beard i promise i

3908
02:54:29,680 --> 02:54:31,439
wasn't born with this thing

3909
02:54:31,439 --> 02:54:32,960
i have a soundcloud because it's what

3910
02:54:32,960 --> 02:54:36,800
you do and thank you very much northsec

3911
02:54:41,680 --> 02:54:43,120
all right

3912
02:54:43,120 --> 02:54:44,399
thank you

3913
02:54:44,399 --> 02:54:46,640
very interesting we'll take a few

3914
02:54:46,640 --> 02:54:48,640
minutes break and after we'll

3915
02:54:48,640 --> 02:54:52,880
please join us for the q a merci

3916
02:54:53,040 --> 02:54:56,200
thank you

3917
02:55:04,370 --> 02:55:18,249
[Music]

3918
02:55:20,820 --> 02:55:23,958
[Music]

3919
02:55:28,760 --> 02:55:31,889
[Music]

3920
02:55:41,600 --> 02:55:57,050
[Music]

3921
02:56:00,740 --> 02:56:03,840
[Music]

3922
02:56:05,850 --> 02:56:13,530
[Music]

3923
02:56:21,600 --> 02:56:24,780
[Music]

3924
02:56:27,530 --> 02:56:30,679
[Music]

3925
02:56:37,860 --> 02:56:45,309
[Music]

3926
02:56:48,150 --> 02:56:55,859
[Music]

3927
02:56:59,360 --> 02:57:28,409
[Music]

3928
02:57:36,080 --> 02:57:42,069
[Music]

3929
02:57:51,770 --> 02:58:07,219
[Music]

3930
02:58:10,260 --> 02:58:13,520
[Music]

3931
02:58:16,070 --> 02:58:22,100
[Music]

3932
02:58:31,640 --> 02:58:38,869
[Music]

3933
02:58:52,390 --> 02:58:55,480
[Music]

3934
02:58:58,320 --> 02:59:05,470
[Music]

3935
02:59:13,040 --> 02:59:16,119
[Music]

3936
02:59:18,620 --> 02:59:38,089
[Music]

3937
02:59:49,170 --> 02:59:52,299
[Music]

3938
02:59:55,780 --> 02:59:58,859
[Music]

3939
03:00:20,600 --> 03:00:27,790
[Music]

3940
03:00:30,900 --> 03:00:33,760
[Music]

3941
03:00:33,760 --> 03:00:36,760
do

3942
03:00:41,910 --> 03:00:45,190
[Music]

3943
03:00:47,970 --> 03:00:51,090
[Music]

3944
03:00:58,270 --> 03:01:01,360
[Music]

3945
03:01:08,570 --> 03:01:24,479
[Music]

3946
03:01:26,560 --> 03:01:28,900
do

3947
03:01:28,900 --> 03:01:31,949
[Music]

3948
03:01:34,950 --> 03:01:48,850
[Music]

3949
03:01:51,420 --> 03:01:53,760
[Music]

3950
03:01:53,760 --> 03:01:56,760
so

3951
03:01:59,360 --> 03:02:02,489
[Music]

3952
03:02:12,180 --> 03:02:27,550
[Music]

3953
03:02:36,450 --> 03:02:40,129
[Music]

3954
03:02:52,180 --> 03:02:55,379
[Music]

3955
03:02:58,100 --> 03:03:01,280
[Music]

3956
03:03:08,460 --> 03:03:11,580
[Music]

3957
03:03:18,750 --> 03:03:26,459
[Music]

3958
03:03:28,920 --> 03:03:47,439
[Music]

3959
03:03:47,439 --> 03:03:50,439
so

3960
03:03:51,820 --> 03:03:59,009
[Music]

3961
03:04:09,530 --> 03:04:12,659
[Music]

3962
03:04:22,350 --> 03:04:37,820
[Music]

3963
03:04:40,850 --> 03:04:44,120
[Music]

3964
03:04:44,479 --> 03:04:46,610
so

3965
03:04:46,610 --> 03:04:52,700
[Music]

3966
03:05:02,230 --> 03:05:09,469
[Music]

3967
03:05:17,600 --> 03:05:20,719
[Music]

3968
03:05:22,990 --> 03:05:36,049
[Music]

3969
03:05:40,130 --> 03:05:46,730
[Music]

3970
03:05:49,220 --> 03:06:08,689
[Music]

3971
03:06:11,760 --> 03:06:14,899
[Music]

3972
03:06:19,770 --> 03:06:22,899
[Music]

3973
03:06:26,380 --> 03:06:29,490
[Music]

3974
03:06:35,680 --> 03:06:37,290
do

3975
03:06:37,290 --> 03:06:40,359
[Music]

3976
03:06:51,200 --> 03:06:58,389
[Music]

3977
03:07:12,590 --> 03:07:21,690
[Music]

3978
03:07:28,870 --> 03:07:30,640
[Music]

3979
03:07:30,640 --> 03:07:33,640
do

3980
03:07:39,170 --> 03:07:55,079
[Music]

3981
03:07:59,490 --> 03:08:02,530
[Music]

3982
03:08:05,550 --> 03:08:19,429
[Music]

3983
03:08:20,319 --> 03:08:23,359
all right so we're back at it again

3984
03:08:23,359 --> 03:08:25,920
so we're here to have a quick

3985
03:08:25,920 --> 03:08:29,200
well quick 30 minutes q a

3986
03:08:29,200 --> 03:08:31,840
regarding apsec or any kind of related

3987
03:08:31,840 --> 03:08:33,200
topic

3988
03:08:33,200 --> 03:08:36,720
do we also have vikki

3989
03:08:36,800 --> 03:08:38,240
connected

3990
03:08:38,240 --> 03:08:41,279
all right awesome

3991
03:08:41,279 --> 03:08:42,080
well

3992
03:08:42,080 --> 03:08:44,640
hi vikki

3993
03:08:44,960 --> 03:08:46,399
all right so how it's going to work is

3994
03:08:46,399 --> 03:08:48,800
that we'll hi sorry there might be a

3995
03:08:48,800 --> 03:08:50,800
slight delay so we'll be uh careful

3996
03:08:50,800 --> 03:08:52,160
about that

3997
03:08:52,160 --> 03:08:54,880
um so before we start i'm curious i know

3998
03:08:54,880 --> 03:08:57,520
vicky your talk was specifically about

3999
03:08:57,520 --> 03:08:58,800
how to

4000
03:08:58,800 --> 03:09:02,080
write better technical duck are you guys

4001
03:09:02,080 --> 03:09:04,319
writing some technical documentation

4002
03:09:04,319 --> 03:09:08,000
blogs or books or anything of some sort

4003
03:09:08,000 --> 03:09:12,000
i'm not but i probably should start okay

4004
03:09:12,000 --> 03:09:13,200
um

4005
03:09:13,200 --> 03:09:16,000
yeah i i release from time to time blog

4006
03:09:16,000 --> 03:09:18,479
posts and i also talked in the session

4007
03:09:18,479 --> 03:09:20,319
about the threat metrics which was quite

4008
03:09:20,319 --> 03:09:23,120
a significant publication of us

4009
03:09:23,120 --> 03:09:24,880
so yeah and

4010
03:09:24,880 --> 03:09:26,640
the tips in the session were definitely

4011
03:09:26,640 --> 03:09:29,039
helpful

4012
03:09:29,279 --> 03:09:31,600
all right awesome

4013
03:09:31,600 --> 03:09:33,840
so this is supposed to be a conversation

4014
03:09:33,840 --> 03:09:36,399
so vicky if you also have questions for

4015
03:09:36,399 --> 03:09:39,279
people on prem or live with us please

4016
03:09:39,279 --> 03:09:41,920
ask away if not what i'll do is i'll

4017
03:09:41,920 --> 03:09:44,080
go through some of the popular question

4018
03:09:44,080 --> 03:09:47,359
on slido

4019
03:09:47,600 --> 03:09:50,000
so we do have some

4020
03:09:50,000 --> 03:09:52,399
all right this one is very generic

4021
03:09:52,399 --> 03:09:53,840
okay

4022
03:09:53,840 --> 03:09:56,080
so we're open to any tips and tricks but

4023
03:09:56,080 --> 03:09:58,000
what kind of protection can we implement

4024
03:09:58,000 --> 03:09:59,439
on database

4025
03:09:59,439 --> 03:10:00,399
of

4026
03:10:00,399 --> 03:10:03,120
the provider side to prevent an evil

4027
03:10:03,120 --> 03:10:05,359
consumer from stealing data

4028
03:10:05,359 --> 03:10:10,359
is using a different database an option

4029
03:10:14,080 --> 03:10:15,680
it's fine if you don't have the answer

4030
03:10:15,680 --> 03:10:17,439
perhaps it's a question too generic

4031
03:10:17,439 --> 03:10:18,560
question for

4032
03:10:18,560 --> 03:10:21,520
for our speaker today i mean i'm not a

4033
03:10:21,520 --> 03:10:23,359
database guy but i have done a talk

4034
03:10:23,359 --> 03:10:25,920
about um basically finding unsecured

4035
03:10:25,920 --> 03:10:28,080
nosql databases out there and it seemed

4036
03:10:28,080 --> 03:10:29,600
like the biggest problem was people

4037
03:10:29,600 --> 03:10:31,760
forgot to put authentication on it or

4038
03:10:31,760 --> 03:10:33,200
they forgot and they left it open to the

4039
03:10:33,200 --> 03:10:35,359
internet um i don't know that you could

4040
03:10:35,359 --> 03:10:37,600
switch from say like elastic to

4041
03:10:37,600 --> 03:10:39,040
i'm pretty sure that there's very

4042
03:10:39,040 --> 03:10:40,960
different data structures but

4043
03:10:40,960 --> 03:10:42,880
basically security 101 is the only

4044
03:10:42,880 --> 03:10:45,760
advice that i would give someone

4045
03:10:45,760 --> 03:10:48,319
all right sounds good viki raise your

4046
03:10:48,319 --> 03:10:51,600
hand if you have any additional

4047
03:10:51,600 --> 03:10:53,359
comments to add on this question all

4048
03:10:53,359 --> 03:10:55,359
right um

4049
03:10:55,359 --> 03:10:57,680
follow up question can we restrict

4050
03:10:57,680 --> 03:11:00,840
unknown ip addresses with acl in

4051
03:11:00,840 --> 03:11:02,560
f5

4052
03:11:02,560 --> 03:11:04,800
if there is

4053
03:11:04,800 --> 03:11:07,840
indeed an acl in place how can we work

4054
03:11:07,840 --> 03:11:10,239
our way around it

4055
03:11:10,239 --> 03:11:12,560
again is that too generic no

4056
03:11:12,560 --> 03:11:14,960
um so the f5 is the only place you're

4057
03:11:14,960 --> 03:11:16,960
going to be able to put an acl on that's

4058
03:11:16,960 --> 03:11:19,200
that's realistic is the management side

4059
03:11:19,200 --> 03:11:21,920
of the network um so you can either you

4060
03:11:21,920 --> 03:11:23,840
know acl down the management ip or the

4061
03:11:23,840 --> 03:11:25,920
self ips um

4062
03:11:25,920 --> 03:11:28,000
there's it's it's pretty it's pretty

4063
03:11:28,000 --> 03:11:29,120
robust though you're not going to have

4064
03:11:29,120 --> 03:11:31,040
an easy way of working your way around

4065
03:11:31,040 --> 03:11:31,760
it

4066
03:11:31,760 --> 03:11:33,680
because even using the exploit you won't

4067
03:11:33,680 --> 03:11:36,319
be able to view that acl list because

4068
03:11:36,319 --> 03:11:38,080
it's going to just kick any request out

4069
03:11:38,080 --> 03:11:40,239
that's not coming from a trusted network

4070
03:11:40,239 --> 03:11:41,680
that's actually how when we part of the

4071
03:11:41,680 --> 03:11:43,680
when we secured them in microsoft was we

4072
03:11:43,680 --> 03:11:45,279
had a microsoft has of course a very

4073
03:11:45,279 --> 03:11:47,359
robust networking team we had a network

4074
03:11:47,359 --> 03:11:48,399
of full

4075
03:11:48,399 --> 03:11:50,160
you know private address space that was

4076
03:11:50,160 --> 03:11:52,160
only for management and every device

4077
03:11:52,160 --> 03:11:53,439
before it was even plugged into the

4078
03:11:53,439 --> 03:11:55,600
network had acls applied so only that

4079
03:11:55,600 --> 03:11:57,680
trusted network could get to it so yeah

4080
03:11:57,680 --> 03:12:00,080
good luck

4081
03:12:00,560 --> 03:12:02,239
all right so the next question is

4082
03:12:02,239 --> 03:12:04,960
specifically for vicky

4083
03:12:04,960 --> 03:12:08,080
any tips for people who aren't native

4084
03:12:08,080 --> 03:12:10,720
english speaker on writing better

4085
03:12:10,720 --> 03:12:13,520
technical content

4086
03:12:13,520 --> 03:12:16,720
sure yeah that's a great question

4087
03:12:16,720 --> 03:12:19,279
i am not a native english speaker myself

4088
03:12:19,279 --> 03:12:21,840
and i certainly struggled with writing

4089
03:12:21,840 --> 03:12:23,600
and even speaking english right when i

4090
03:12:23,600 --> 03:12:26,080
first moved to the united states

4091
03:12:26,080 --> 03:12:28,640
and i think the most important tip that

4092
03:12:28,640 --> 03:12:31,680
i have is to do um

4093
03:12:31,680 --> 03:12:34,160
intentional practices so what does that

4094
03:12:34,160 --> 03:12:35,200
mean right

4095
03:12:35,200 --> 03:12:36,080
um

4096
03:12:36,080 --> 03:12:38,640
getting good at writing takes time and

4097
03:12:38,640 --> 03:12:41,600
it's very very important to write a lot

4098
03:12:41,600 --> 03:12:43,680
right your first few

4099
03:12:43,680 --> 03:12:44,720
pieces

4100
03:12:44,720 --> 03:12:46,800
would probably suck but that's okay

4101
03:12:46,800 --> 03:12:48,640
because you'll get gradually get better

4102
03:12:48,640 --> 03:12:51,520
over time but another thing to remember

4103
03:12:51,520 --> 03:12:53,680
when you're practicing writing is that

4104
03:12:53,680 --> 03:12:56,640
it's not enough just to write a lot it's

4105
03:12:56,640 --> 03:12:58,640
also really important to get

4106
03:12:58,640 --> 03:13:00,640
feedback about your writing

4107
03:13:00,640 --> 03:13:02,720
right so um

4108
03:13:02,720 --> 03:13:04,560
when i first moved to the united states

4109
03:13:04,560 --> 03:13:06,800
the way that i got better at writing is

4110
03:13:06,800 --> 03:13:08,800
that i had a writing mentor that would

4111
03:13:08,800 --> 03:13:10,399
take my pieces

4112
03:13:10,399 --> 03:13:12,880
and tell me how she would improve the

4113
03:13:12,880 --> 03:13:15,760
piece but i do understand that i think

4114
03:13:15,760 --> 03:13:17,680
that's the best way of

4115
03:13:17,680 --> 03:13:19,359
actually improve

4116
03:13:19,359 --> 03:13:21,359
your writing

4117
03:13:21,359 --> 03:13:24,319
a lot in a short time frame but

4118
03:13:24,319 --> 03:13:27,200
that is not available to everyone right

4119
03:13:27,200 --> 03:13:29,279
another way that you can

4120
03:13:29,279 --> 03:13:31,200
get feedback from your writing is

4121
03:13:31,200 --> 03:13:33,920
through grammar trackers so you can

4122
03:13:33,920 --> 03:13:35,840
install one of those free grammar

4123
03:13:35,840 --> 03:13:38,800
tracking software and run your articles

4124
03:13:38,800 --> 03:13:40,479
through that grammar checker and see

4125
03:13:40,479 --> 03:13:42,319
what kind of feedback it's giving you

4126
03:13:42,319 --> 03:13:45,279
and try to model correct grammar or good

4127
03:13:45,279 --> 03:13:46,960
sentence structures from the

4128
03:13:46,960 --> 03:13:48,800
recommendation you get back from grammar

4129
03:13:48,800 --> 03:13:49,680
checker

4130
03:13:49,680 --> 03:13:51,920
and another thing you can do is that you

4131
03:13:51,920 --> 03:13:54,080
can find similar articles online that

4132
03:13:54,080 --> 03:13:56,239
you think are well written that talks

4133
03:13:56,239 --> 03:13:58,479
about the same topic that you are

4134
03:13:58,479 --> 03:14:01,040
talking about and compare what makes

4135
03:14:01,040 --> 03:14:03,040
their writing better than yours and what

4136
03:14:03,040 --> 03:14:06,640
can you improve in your own writing and

4137
03:14:06,640 --> 03:14:08,319
model how they are structuring their

4138
03:14:08,319 --> 03:14:10,399
articles are structuring their sentences

4139
03:14:10,399 --> 03:14:14,560
and their word choices as well

4140
03:14:14,560 --> 03:14:16,960
all right awesome tips and tricks maybe

4141
03:14:16,960 --> 03:14:19,279
it can be useful for

4142
03:14:19,279 --> 03:14:21,279
english speakers as well

4143
03:14:21,279 --> 03:14:24,880
all right um

4144
03:14:24,880 --> 03:14:28,399
let's do a question for you then you see

4145
03:14:28,399 --> 03:14:30,800
it seems that all cases

4146
03:14:30,800 --> 03:14:33,439
in all cases we rely on kubernetes to be

4147
03:14:33,439 --> 03:14:36,399
the idp to the cloud idp that means

4148
03:14:36,399 --> 03:14:38,239
trusting the configuration of the cloud

4149
03:14:38,239 --> 03:14:40,080
providers configuration and key

4150
03:14:40,080 --> 03:14:41,359
management

4151
03:14:41,359 --> 03:14:43,600
question mark

4152
03:14:43,600 --> 03:14:46,239
that's a well-written question but uh

4153
03:14:46,239 --> 03:14:47,840
not sure that i understood it but if it

4154
03:14:47,840 --> 03:14:50,000
talks about the idp talks about idp it

4155
03:14:50,000 --> 03:14:51,840
does yeah all right so yeah i just

4156
03:14:51,840 --> 03:14:53,439
mentioned it in the world in the session

4157
03:14:53,439 --> 03:14:55,680
i didn't get into it but uh what i tried

4158
03:14:55,680 --> 03:14:57,680
to say i mean i didn't get into the

4159
03:14:57,680 --> 03:15:00,800
details but uh now our cloud providers

4160
03:15:00,800 --> 03:15:04,319
have the option to trust

4161
03:15:04,319 --> 03:15:07,120
kubernetes is an idp so service accounts

4162
03:15:07,120 --> 03:15:08,640
um

4163
03:15:08,640 --> 03:15:10,160
from the cluster are trusted by the

4164
03:15:10,160 --> 03:15:12,880
cloud provider and that's another way to

4165
03:15:12,880 --> 03:15:16,960
authenticate your workloads your pods

4166
03:15:16,960 --> 03:15:19,520
with the cloud

4167
03:15:19,520 --> 03:15:21,520
you can read about um for example in

4168
03:15:21,520 --> 03:15:23,359
azure it's called um

4169
03:15:23,359 --> 03:15:26,000
oh it's called um workload identity

4170
03:15:26,000 --> 03:15:28,319
federation i think and in the aws it's

4171
03:15:28,319 --> 03:15:30,479
called rsa so you can read about the

4172
03:15:30,479 --> 03:15:32,560
whole flow but generally it means that

4173
03:15:32,560 --> 03:15:35,840
the cluster is trusted as an

4174
03:15:35,840 --> 03:15:38,720
identity provider

4175
03:15:39,760 --> 03:15:41,920
all right thank you

4176
03:15:41,920 --> 03:15:44,239
this is more a generic question that

4177
03:15:44,239 --> 03:15:46,080
maybe has nothing to do with your

4178
03:15:46,080 --> 03:15:47,760
specific talk but since we're here

4179
03:15:47,760 --> 03:15:50,080
talking about application security

4180
03:15:50,080 --> 03:15:53,040
um you all know that developer it's hard

4181
03:15:53,040 --> 03:15:56,239
for them to take security seriously

4182
03:15:56,239 --> 03:15:57,840
um does

4183
03:15:57,840 --> 03:16:00,239
anyone has experience and maybe tips and

4184
03:16:00,239 --> 03:16:03,520
tricks on how to or has experience on

4185
03:16:03,520 --> 03:16:04,880
how teaching

4186
03:16:04,880 --> 03:16:06,479
developer

4187
03:16:06,479 --> 03:16:10,080
to know when their stuff is broken

4188
03:16:11,359 --> 03:16:15,200
uh well i can say that um

4189
03:16:15,200 --> 03:16:18,160
well i work in a like on a product a

4190
03:16:18,160 --> 03:16:20,880
group at microsoft and it's really

4191
03:16:20,880 --> 03:16:24,319
important to um to be aware that

4192
03:16:24,319 --> 03:16:27,279
um as a developer um

4193
03:16:27,279 --> 03:16:29,439
you should i mean i think we do it quite

4194
03:16:29,439 --> 03:16:32,000
well at microsoft is to really be with

4195
03:16:32,000 --> 03:16:34,960
security in mind um and it could be with

4196
03:16:34,960 --> 03:16:38,000
education just to show examples of how

4197
03:16:38,000 --> 03:16:40,319
simple mistakes that code become

4198
03:16:40,319 --> 03:16:42,840
vulnerabilities or

4199
03:16:42,840 --> 03:16:45,840
misconfigurations and um so i think that

4200
03:16:45,840 --> 03:16:48,319
the main thing is that you need to

4201
03:16:48,319 --> 03:16:50,960
educate the devs to be with security in

4202
03:16:50,960 --> 03:16:52,319
mind

4203
03:16:52,319 --> 03:16:53,840
it's a generic

4204
03:16:53,840 --> 03:16:55,600
answer

4205
03:16:55,600 --> 03:16:57,359
but i think it's really important and

4206
03:16:57,359 --> 03:16:59,359
that's the first step

4207
03:16:59,359 --> 03:17:01,359
and how do you do that with bribes and

4208
03:17:01,359 --> 03:17:03,120
cookies

4209
03:17:03,120 --> 03:17:05,760
well i think that first show examples

4210
03:17:05,760 --> 03:17:08,319
and to show i mean um

4211
03:17:08,319 --> 03:17:10,840
to show how sometimes

4212
03:17:10,840 --> 03:17:13,840
simple simple things that looks like

4213
03:17:13,840 --> 03:17:15,680
just little bugs

4214
03:17:15,680 --> 03:17:17,840
can cause the serious vulnerability to a

4215
03:17:17,840 --> 03:17:20,800
serious security issue

4216
03:17:20,880 --> 03:17:22,560
i think helpful

4217
03:17:22,560 --> 03:17:24,399
and

4218
03:17:24,399 --> 03:17:25,600
i think it's

4219
03:17:25,600 --> 03:17:27,279
another thing is the organizational

4220
03:17:27,279 --> 03:17:29,439
culture i mean to to to be aware to

4221
03:17:29,439 --> 03:17:31,680
security so at microsoft's a big

4222
03:17:31,680 --> 03:17:33,600
organization it's obviously it's

4223
03:17:33,600 --> 03:17:35,520
obviously things so everyone is aware of

4224
03:17:35,520 --> 03:17:38,479
security but maybe in smaller um

4225
03:17:38,479 --> 03:17:40,479
dev groups it's different and it's super

4226
03:17:40,479 --> 03:17:41,600
important

4227
03:17:41,600 --> 03:17:43,840
um so i think that's another thing

4228
03:17:43,840 --> 03:17:46,239
absoluma nate i feel like you have

4229
03:17:46,239 --> 03:17:48,880
something to say about this um

4230
03:17:48,880 --> 03:17:51,120
so uh in my experience and this is this

4231
03:17:51,120 --> 03:17:51,840
is

4232
03:17:51,840 --> 03:17:54,000
not from the sort of developer side but

4233
03:17:54,000 --> 03:17:56,080
i've done a i did another talk about the

4234
03:17:56,080 --> 03:17:59,120
last f5 vulnerability in 2020 um the

4235
03:17:59,120 --> 03:18:01,359
interesting takeaway from that was the

4236
03:18:01,359 --> 03:18:04,640
the 2020 cve the path traversal one it

4237
03:18:04,640 --> 03:18:07,520
was almost the exact same poc as a

4238
03:18:07,520 --> 03:18:09,760
citrix vulnerability from six months

4239
03:18:09,760 --> 03:18:11,600
prior against their load balancing

4240
03:18:11,600 --> 03:18:12,640
devices

4241
03:18:12,640 --> 03:18:14,880
both of those used a technique that

4242
03:18:14,880 --> 03:18:16,960
orange sci had talked about at black hat

4243
03:18:16,960 --> 03:18:18,800
in 2018

4244
03:18:18,800 --> 03:18:20,160
so the advice that i would give is

4245
03:18:20,160 --> 03:18:21,680
especially when you're using open source

4246
03:18:21,680 --> 03:18:23,920
software um you need to be paying

4247
03:18:23,920 --> 03:18:25,520
attention to the ecosystem your

4248
03:18:25,520 --> 03:18:27,040
developers and your security teams need

4249
03:18:27,040 --> 03:18:29,040
to be looking at what the current attack

4250
03:18:29,040 --> 03:18:31,200
surface is um don't send them to black

4251
03:18:31,200 --> 03:18:32,640
hat just so they can go to parties and

4252
03:18:32,640 --> 03:18:34,160
drink they need to be going and looking

4253
03:18:34,160 --> 03:18:36,479
at these talks and saying hey do we use

4254
03:18:36,479 --> 03:18:39,040
these components in our product if we do

4255
03:18:39,040 --> 03:18:41,120
you know like quite literally orange's

4256
03:18:41,120 --> 03:18:43,520
his slides had the same poc dot dot

4257
03:18:43,520 --> 03:18:45,200
semicolon forward slash that was used in

4258
03:18:45,200 --> 03:18:47,279
both those attacks so they had 18 months

4259
03:18:47,279 --> 03:18:49,120
to look at their code and say hey is

4260
03:18:49,120 --> 03:18:50,479
this something that would affect us had

4261
03:18:50,479 --> 03:18:51,840
they done that they would have realized

4262
03:18:51,840 --> 03:18:52,960
yes it did

4263
03:18:52,960 --> 03:18:55,439
so by keeping abreast of of the the

4264
03:18:55,439 --> 03:18:57,200
ecosystem and also looking at your

4265
03:18:57,200 --> 03:18:58,720
competitors and seeing what types of

4266
03:18:58,720 --> 03:19:01,040
vulnerabilities affect them um you know

4267
03:19:01,040 --> 03:19:02,720
in the load balancing world like i said

4268
03:19:02,720 --> 03:19:04,880
they're very similar products so had it

4269
03:19:04,880 --> 03:19:07,040
and had someone from f5 said hey citrix

4270
03:19:07,040 --> 03:19:08,560
just got whacked with this really bad

4271
03:19:08,560 --> 03:19:10,399
vulnerability we do almost the same

4272
03:19:10,399 --> 03:19:12,720
thing we should go take a look um you

4273
03:19:12,720 --> 03:19:14,399
need to be cognizant of what's going on

4274
03:19:14,399 --> 03:19:16,319
around you and not just head down you

4275
03:19:16,319 --> 03:19:18,000
know writing new shiny features like

4276
03:19:18,000 --> 03:19:19,760
security's boring we get it but new

4277
03:19:19,760 --> 03:19:21,040
shinies is what's going to get you in

4278
03:19:21,040 --> 03:19:23,359
trouble

4279
03:19:24,080 --> 03:19:25,920
all right thanks so i'll relate the

4280
03:19:25,920 --> 03:19:28,319
question to vicky vicky do you have any

4281
03:19:28,319 --> 03:19:31,200
tips and tricks on how to

4282
03:19:31,200 --> 03:19:34,319
board dev into the security journey

4283
03:19:34,319 --> 03:19:36,399
sure i think i can share one of my

4284
03:19:36,399 --> 03:19:39,040
experiences that's sort of like my aha

4285
03:19:39,040 --> 03:19:41,840
moment in security right before i got

4286
03:19:41,840 --> 03:19:44,319
into security i was actually a developer

4287
03:19:44,319 --> 03:19:46,880
and i wrote lots of lots of code and

4288
03:19:46,880 --> 03:19:50,160
because i was a web developer um a lot

4289
03:19:50,160 --> 03:19:52,720
of the vulnerabilities that i studied as

4290
03:19:52,720 --> 03:19:55,279
a security person actually relates to

4291
03:19:55,279 --> 03:19:57,840
the code i wrote for my development job

4292
03:19:57,840 --> 03:20:00,800
right so one of the great aha moments i

4293
03:20:00,800 --> 03:20:01,840
had

4294
03:20:01,840 --> 03:20:03,439
about security and how to teach

4295
03:20:03,439 --> 03:20:05,760
developer security is that i went back

4296
03:20:05,760 --> 03:20:07,600
to one of the projects that i made when

4297
03:20:07,600 --> 03:20:09,120
i was developer

4298
03:20:09,120 --> 03:20:11,359
and i just started to find

4299
03:20:11,359 --> 03:20:13,600
like all these different ways to exploit

4300
03:20:13,600 --> 03:20:14,640
it right

4301
03:20:14,640 --> 03:20:17,439
and that really um showed me what the

4302
03:20:17,439 --> 03:20:19,040
experience

4303
03:20:19,040 --> 03:20:20,560
should be like when we're teaching

4304
03:20:20,560 --> 03:20:22,560
developers security it should be about

4305
03:20:22,560 --> 03:20:24,239
contact right we should make it relevant

4306
03:20:24,239 --> 03:20:25,520
to their work

4307
03:20:25,520 --> 03:20:27,439
we should make it understand this is

4308
03:20:27,439 --> 03:20:30,880
exactly why um this is bad and this is

4309
03:20:30,880 --> 03:20:33,040
what the attacker can do with your

4310
03:20:33,040 --> 03:20:34,720
customers with your clients and with

4311
03:20:34,720 --> 03:20:37,760
your data i think uh grounding uh the

4312
03:20:37,760 --> 03:20:39,840
security education in that sort of

4313
03:20:39,840 --> 03:20:42,640
context is very important into making

4314
03:20:42,640 --> 03:20:45,760
people actually care

4315
03:20:46,720 --> 03:20:49,279
absoluma thank you for that vicky

4316
03:20:49,279 --> 03:20:50,319
um

4317
03:20:50,319 --> 03:20:53,439
let's jump into a different topic um i

4318
03:20:53,439 --> 03:20:55,760
believe this question's for nate for

4319
03:20:55,760 --> 03:20:58,479
load balancers would a honeypot based on

4320
03:20:58,479 --> 03:21:00,399
your lab setup catch anything

4321
03:21:00,399 --> 03:21:02,319
interesting you think

4322
03:21:02,319 --> 03:21:05,439
oh absolutely um i believe that kevin

4323
03:21:05,439 --> 03:21:07,279
beaumont who goes by gossip the dog on

4324
03:21:07,279 --> 03:21:10,319
twitter set up a f5 honeypot um shortly

4325
03:21:10,319 --> 03:21:12,640
after this vulnerability came out um i

4326
03:21:12,640 --> 03:21:14,160
know that people as soon as these as

4327
03:21:14,160 --> 03:21:15,439
soon as these vulnerabilities have come

4328
03:21:15,439 --> 03:21:16,880
out different security groups have set

4329
03:21:16,880 --> 03:21:18,640
up honeypots just to see what sorts of

4330
03:21:18,640 --> 03:21:21,279
exploit payloads are coming in

4331
03:21:21,279 --> 03:21:23,200
so i guess you in theory

4332
03:21:23,200 --> 03:21:24,800
could set one up on your own internal

4333
03:21:24,800 --> 03:21:26,960
network to sort of like maybe try to you

4334
03:21:26,960 --> 03:21:28,479
know

4335
03:21:28,479 --> 03:21:30,800
confuse an attacker however

4336
03:21:30,800 --> 03:21:32,720
if i'm an attacker if i'm playing around

4337
03:21:32,720 --> 03:21:33,760
in your network the first thing i'm

4338
03:21:33,760 --> 03:21:35,200
going to do is see is this device

4339
03:21:35,200 --> 03:21:36,800
actually interesting and if i find it

4340
03:21:36,800 --> 03:21:38,800
that it's just sitting there with no

4341
03:21:38,800 --> 03:21:40,560
load balance configuration or it's not

4342
03:21:40,560 --> 03:21:43,040
passing any traffic um i'm gonna either

4343
03:21:43,040 --> 03:21:45,279
assume okay this is just a lab box or

4344
03:21:45,279 --> 03:21:48,080
maybe this is a honey pot um so yes it

4345
03:21:48,080 --> 03:21:50,239
could be it could work um i think it's

4346
03:21:50,239 --> 03:21:53,040
more useful for sort of the the internet

4347
03:21:53,040 --> 03:21:54,800
spray of attack payloads and sort of

4348
03:21:54,800 --> 03:21:57,200
collecting and seeing what the ttps or

4349
03:21:57,200 --> 03:21:58,720
you know the iocs of what's being

4350
03:21:58,720 --> 03:22:01,119
dropped

4351
03:22:01,520 --> 03:22:03,439
all right awesome

4352
03:22:03,439 --> 03:22:04,399
um

4353
03:22:04,399 --> 03:22:07,680
question regarding kubernetes um for

4354
03:22:07,680 --> 03:22:10,640
lateral movement why

4355
03:22:10,640 --> 03:22:12,960
it moves sorry where pet's security

4356
03:22:12,960 --> 03:22:15,520
policies config mention as it would

4357
03:22:15,520 --> 03:22:18,640
allow escalating the nut even faster

4358
03:22:18,640 --> 03:22:21,040
maybe this is a trick question

4359
03:22:21,040 --> 03:22:22,000
yeah

4360
03:22:22,000 --> 03:22:24,479
for kubernetes lateral movement so for

4361
03:22:24,479 --> 03:22:25,279
you

4362
03:22:25,279 --> 03:22:27,680
why weren't pods security policies

4363
03:22:27,680 --> 03:22:29,840
configmention

4364
03:22:29,840 --> 03:22:30,880
as

4365
03:22:30,880 --> 03:22:33,520
security policies config mentioned did

4366
03:22:33,520 --> 03:22:36,800
you mention that in your talk

4367
03:22:36,960 --> 03:22:38,479
yeah

4368
03:22:38,479 --> 03:22:40,399
yeah

4369
03:22:40,399 --> 03:22:42,960
as it would allow escalating the net

4370
03:22:42,960 --> 03:22:45,759
even faster

4371
03:22:46,479 --> 03:22:48,479
all right is the question is which

4372
03:22:48,479 --> 03:22:50,960
configurations of the page can allow us

4373
03:22:50,960 --> 03:22:52,239
to

4374
03:22:52,239 --> 03:22:53,760
move to the node we can take the

4375
03:22:53,760 --> 03:22:56,239
question however we want

4376
03:22:56,239 --> 03:22:58,080
and make it your own i can select

4377
03:22:58,080 --> 03:22:59,439
another one

4378
03:22:59,439 --> 03:23:02,080
if you want no no worries i'm not sure

4379
03:23:02,080 --> 03:23:03,840
that i understood but if the quest if

4380
03:23:03,840 --> 03:23:04,960
the question is about port

4381
03:23:04,960 --> 03:23:07,120
configurations perhaps let's take it

4382
03:23:07,120 --> 03:23:08,479
this way yeah

4383
03:23:08,479 --> 03:23:11,600
okay um

4384
03:23:11,600 --> 03:23:12,399
so

4385
03:23:12,399 --> 03:23:13,760
i'm not sure that i'm answering the

4386
03:23:13,760 --> 03:23:15,680
right question but um

4387
03:23:15,680 --> 03:23:17,920
regarding pod configurations that may

4388
03:23:17,920 --> 03:23:19,200
lead to lateral movement so we talked

4389
03:23:19,200 --> 03:23:20,720
about several in talk i mean we

4390
03:23:20,720 --> 03:23:22,080
mentioned it really briefly but uh

4391
03:23:22,080 --> 03:23:23,920
privileged container first i'll have

4392
03:23:23,920 --> 03:23:25,920
full access to the underlying node we

4393
03:23:25,920 --> 03:23:28,960
also talk about mounting files so if we

4394
03:23:28,960 --> 03:23:30,319
have a pod with the configuration of

4395
03:23:30,319 --> 03:23:32,160
mounting file into it

4396
03:23:32,160 --> 03:23:33,920
um so it also may lead to lateral

4397
03:23:33,920 --> 03:23:35,120
movements

4398
03:23:35,120 --> 03:23:36,960
then there is the whole topic of

4399
03:23:36,960 --> 03:23:38,640
networking so for example you can

4400
03:23:38,640 --> 03:23:41,920
specify that pod has

4401
03:23:42,160 --> 03:23:44,319
has access to the host networking so the

4402
03:23:44,319 --> 03:23:46,319
bunch of configurations of pods that may

4403
03:23:46,319 --> 03:23:48,080
lead to little movements if it was the

4404
03:23:48,080 --> 03:23:49,120
question

4405
03:23:49,120 --> 03:23:51,920
um and if not so um

4406
03:23:51,920 --> 03:23:56,000
you can ask me again and i'll answer

4407
03:23:56,000 --> 03:23:58,319
all right if not they can hit you up on

4408
03:23:58,319 --> 03:24:00,319
twitter and see

4409
03:24:00,319 --> 03:24:03,120
the real answer for you all right um for

4410
03:24:03,120 --> 03:24:05,760
nate another question for you

4411
03:24:05,760 --> 03:24:07,920
um

4412
03:24:07,920 --> 03:24:10,479
yeah what do you think of asking for

4413
03:24:10,479 --> 03:24:12,800
software bill of material

4414
03:24:12,800 --> 03:24:15,279
that list all their dependencies and

4415
03:24:15,279 --> 03:24:17,359
their version on those

4416
03:24:17,359 --> 03:24:20,880
proprietary devices

4417
03:24:20,880 --> 03:24:24,560
um i think it's a good idea and at least

4418
03:24:24,560 --> 03:24:27,520
in terms of f5 you can somewhat figure

4419
03:24:27,520 --> 03:24:29,840
it out there's one of the the reference

4420
03:24:29,840 --> 03:24:31,760
links i had in my slides

4421
03:24:31,760 --> 03:24:33,760
they do list what operating system

4422
03:24:33,760 --> 03:24:35,359
versions they use for the management

4423
03:24:35,359 --> 03:24:36,640
side of things

4424
03:24:36,640 --> 03:24:38,319
so you could you know take a look and

4425
03:24:38,319 --> 03:24:41,040
say what is centos 7.3 running what

4426
03:24:41,040 --> 03:24:42,800
libraries does it have

4427
03:24:42,800 --> 03:24:44,640
those operating systems are not updated

4428
03:24:44,640 --> 03:24:46,560
the way that we would update our linux

4429
03:24:46,560 --> 03:24:47,760
servers so

4430
03:24:47,760 --> 03:24:49,760
i think it's during like major revs like

4431
03:24:49,760 --> 03:24:52,319
when they go from 11 to 12 or 12 to 13

4432
03:24:52,319 --> 03:24:54,720
they'll update to a degree

4433
03:24:54,720 --> 03:24:56,160
but your best i mean you're not going to

4434
03:24:56,160 --> 03:24:57,760
get much of a software bill of materials

4435
03:24:57,760 --> 03:24:59,600
from them as far as i know

4436
03:24:59,600 --> 03:25:00,880
unless of course you're a big enough

4437
03:25:00,880 --> 03:25:02,560
customer and you pay them enough money

4438
03:25:02,560 --> 03:25:04,319
then that was one of the things that i

4439
03:25:04,319 --> 03:25:05,920
would have done which was to say okay

4440
03:25:05,920 --> 03:25:08,239
let me let me pull this for you um but

4441
03:25:08,239 --> 03:25:09,520
yeah and that's that's only going to be

4442
03:25:09,520 --> 03:25:10,960
the linux side of things if you start

4443
03:25:10,960 --> 03:25:12,800
asking about like supply chains of where

4444
03:25:12,800 --> 03:25:14,479
their firmware is coming from and the

4445
03:25:14,479 --> 03:25:15,920
the code that's running their asics or

4446
03:25:15,920 --> 03:25:17,600
their fpgas

4447
03:25:17,600 --> 03:25:19,600
you're going to have a a non-trivial

4448
03:25:19,600 --> 03:25:23,560
time getting that out of them

4449
03:25:23,680 --> 03:25:24,640
all right

4450
03:25:24,640 --> 03:25:27,439
so vicky maybe a question that it's for

4451
03:25:27,439 --> 03:25:29,600
you but also for from one of the

4452
03:25:29,600 --> 03:25:32,160
speakers that could not join us today so

4453
03:25:32,160 --> 03:25:34,960
it's kind of a in-between or a hybrid

4454
03:25:34,960 --> 03:25:37,600
question what do you think about web

4455
03:25:37,600 --> 03:25:40,160
hooks and would it be a good target for

4456
03:25:40,160 --> 03:25:42,880
bug bounties program or any

4457
03:25:42,880 --> 03:25:44,640
i don't know if you've written any blogs

4458
03:25:44,640 --> 03:25:46,239
or anything about it

4459
03:25:46,239 --> 03:25:47,279
in your

4460
03:25:47,279 --> 03:25:49,359
experience

4461
03:25:49,359 --> 03:25:51,600
so i've actually written about web hooks

4462
03:25:51,600 --> 03:25:54,239
before and i think they can potentially

4463
03:25:54,239 --> 03:25:56,319
be a good target for bug bounties but in

4464
03:25:56,319 --> 03:25:58,319
reality i haven't really

4465
03:25:58,319 --> 03:26:00,399
uh hunted that much in bug bounty

4466
03:26:00,399 --> 03:26:01,680
programs

4467
03:26:01,680 --> 03:26:04,000
for web hook related bugs so i don't

4468
03:26:04,000 --> 03:26:05,520
really know the answer to that i think

4469
03:26:05,520 --> 03:26:07,279
potentially i don't really know how

4470
03:26:07,279 --> 03:26:09,920
prevalent it is though

4471
03:26:09,920 --> 03:26:12,200
do we have any strong opinion

4472
03:26:12,200 --> 03:26:14,000
[Laughter]

4473
03:26:14,000 --> 03:26:17,120
perfect sounds good all right

4474
03:26:17,120 --> 03:26:19,359
so i'm reading the question that are

4475
03:26:19,359 --> 03:26:20,720
remaining they're

4476
03:26:20,720 --> 03:26:23,040
quite similar to or

4477
03:26:23,040 --> 03:26:26,640
on comprehensive so i won't go through i

4478
03:26:26,640 --> 03:26:29,120
won't go give you any like a weird

4479
03:26:29,120 --> 03:26:31,439
question anymore um all right so thank

4480
03:26:31,439 --> 03:26:35,040
you guys so much uh please

4481
03:26:35,040 --> 03:26:37,200
ask them your question privately if you

4482
03:26:37,200 --> 03:26:39,439
do hit them on twitter or

4483
03:26:39,439 --> 03:26:41,760
yeah we're just here to help so please

4484
03:26:41,760 --> 03:26:45,180
feel free to reach out mercitomon

4485
03:26:45,180 --> 03:26:49,309
[Applause]

4486
03:26:51,620 --> 03:26:54,739
[Music]

4487
03:26:59,550 --> 03:27:02,679
[Music]

4488
03:27:12,370 --> 03:27:27,840
[Music]

4489
03:27:36,630 --> 03:27:44,319
[Music]

4490
03:27:49,680 --> 03:27:52,370
so

4491
03:27:52,370 --> 03:27:55,569
[Music]

4492
03:27:58,330 --> 03:28:01,469
[Music]

4493
03:28:08,640 --> 03:28:11,789
[Music]

4494
03:28:18,940 --> 03:28:26,629
[Music]

4495
03:28:30,110 --> 03:28:59,189
[Music]

4496
03:29:09,710 --> 03:29:12,849
[Music]

4497
03:29:18,090 --> 03:29:38,010
[Music]

4498
03:29:41,040 --> 03:29:44,129
[Music]

4499
03:29:46,810 --> 03:29:52,889
[Music]

4500
03:30:02,420 --> 03:30:09,659
[Music]

4501
03:30:17,770 --> 03:30:20,909
[Music]

4502
03:30:22,720 --> 03:30:25,720
do

4503
03:30:27,110 --> 03:30:36,239
[Music]

4504
03:30:40,320 --> 03:30:46,910
[Music]

4505
03:30:49,400 --> 03:31:04,239
[Music]

4506
03:31:04,239 --> 03:31:07,239
so

4507
03:31:19,950 --> 03:31:23,079
[Music]

4508
03:31:26,560 --> 03:31:29,680
[Music]

4509
03:31:51,390 --> 03:31:58,580
[Music]

4510
03:31:59,120 --> 03:32:01,690
so

4511
03:32:01,690 --> 03:32:04,729
[Music]

4512
03:32:12,730 --> 03:32:15,980
[Music]

4513
03:32:18,760 --> 03:32:21,879
[Music]

4514
03:32:39,350 --> 03:32:55,260
[Music]

4515
03:32:59,680 --> 03:33:02,719
[Music]

4516
03:33:05,730 --> 03:33:19,609
[Music]

4517
03:33:22,200 --> 03:33:25,319
[Music]

4518
03:33:30,120 --> 03:33:33,249
[Music]

4519
03:33:42,960 --> 03:33:58,419
[Music]

4520
03:34:07,210 --> 03:34:10,900
[Music]

4521
03:34:22,950 --> 03:34:26,149
[Music]

4522
03:34:28,930 --> 03:34:32,049
[Music]

4523
03:34:39,220 --> 03:34:42,369
[Music]

4524
03:34:49,520 --> 03:34:57,219
[Music]

4525
03:34:59,690 --> 03:35:13,860
[Music]

4526
03:35:15,860 --> 03:35:29,770
[Music]

4527
03:35:37,450 --> 03:35:43,430
[Music]

4528
03:35:48,670 --> 03:36:08,580
[Music]

4529
03:36:11,620 --> 03:36:14,889
[Music]

4530
03:36:17,940 --> 03:36:23,469
[Music]

4531
03:36:33,000 --> 03:36:40,229
[Music]

4532
03:36:53,750 --> 03:37:00,950
[Music]

4533
03:37:03,740 --> 03:37:06,819
[Music]

4534
03:37:14,400 --> 03:37:17,479
[Music]

4535
03:37:19,980 --> 03:37:39,449
[Music]

4536
03:37:42,540 --> 03:37:45,659
[Music]

4537
03:37:50,530 --> 03:37:52,399
[Music]

4538
03:37:52,399 --> 03:37:55,399
so

4539
03:37:57,150 --> 03:38:00,229
[Music]

4540
03:38:08,390 --> 03:38:11,449
[Music]

4541
03:38:17,680 --> 03:38:20,680
do

4542
03:38:21,960 --> 03:38:29,160
[Music]

4543
03:38:32,270 --> 03:38:35,309
[Music]

4544
03:38:43,350 --> 03:38:46,559
[Music]

4545
03:38:49,340 --> 03:38:52,459
[Music]

4546
03:39:09,930 --> 03:39:25,840
[Music]

4547
03:39:30,260 --> 03:39:50,189
[Music]

4548
03:39:52,780 --> 03:39:55,899
[Music]

4549
03:40:00,700 --> 03:40:03,829
[Music]

4550
03:40:13,540 --> 03:40:28,990
[Music]

4551
03:40:37,800 --> 03:40:40,080
[Music]

4552
03:40:40,080 --> 03:40:43,080
do

4553
03:40:53,530 --> 03:40:56,729
[Music]

4554
03:40:59,510 --> 03:41:02,629
[Music]

4555
03:41:14,170 --> 03:41:17,249
[Music]

4556
03:41:20,090 --> 03:41:27,790
[Music]

4557
03:41:30,270 --> 03:42:00,349
[Music]

4558
03:42:10,880 --> 03:42:14,009
[Music]

4559
03:42:19,250 --> 03:42:39,170
[Music]

4560
03:42:42,200 --> 03:42:45,299
[Music]

4561
03:42:48,520 --> 03:42:54,049
[Music]

4562
03:42:58,399 --> 03:43:01,399
so

4563
03:43:03,580 --> 03:43:10,809
[Music]

4564
03:43:24,340 --> 03:43:37,500
[Music]

4565
03:43:41,470 --> 03:43:48,070
[Music]

4566
03:43:50,560 --> 03:44:10,029
[Music]

4567
03:44:21,110 --> 03:44:24,239
[Music]

4568
03:44:27,720 --> 03:44:30,840
[Music]

4569
03:44:52,540 --> 03:44:59,730
[Music]

4570
03:45:13,930 --> 03:45:23,040
[Music]

4571
03:45:40,510 --> 03:45:58,330
[Music]

4572
03:46:00,840 --> 03:46:04,850
[Music]

4573
03:46:06,890 --> 03:46:20,769
[Music]

4574
03:46:23,360 --> 03:46:26,479
[Music]

4575
03:46:29,199 --> 03:46:31,280
so

4576
03:46:31,280 --> 03:46:34,419
[Music]

4577
03:46:44,120 --> 03:46:59,570
[Music]

4578
03:47:08,370 --> 03:47:15,359
[Music]

4579
03:47:15,359 --> 03:47:18,359
do

4580
03:47:24,110 --> 03:47:27,309
[Music]

4581
03:47:30,090 --> 03:47:33,209
[Music]

4582
03:47:50,670 --> 03:47:58,370
[Music]

4583
03:48:01,880 --> 03:48:30,929
[Music]

4584
03:48:40,640 --> 03:48:43,640
foreign

4585
03:48:49,830 --> 03:49:09,740
[Music]

4586
03:49:12,780 --> 03:49:15,859
[Music]

4587
03:49:19,100 --> 03:49:24,599
[Music]

4588
03:49:34,160 --> 03:49:41,739
[Music]

4589
03:49:49,510 --> 03:49:52,649
[Music]

4590
03:49:54,910 --> 03:50:08,080
[Music]

4591
03:50:12,060 --> 03:50:18,650
[Music]

4592
03:50:21,140 --> 03:50:40,619
[Music]

4593
03:50:43,700 --> 03:50:46,819
[Music]

4594
03:50:51,690 --> 03:50:54,819
[Music]

4595
03:50:58,300 --> 03:51:01,420
[Music]

4596
03:51:09,550 --> 03:51:12,609
[Music]

4597
03:51:23,130 --> 03:51:30,310
[Music]

4598
03:51:33,430 --> 03:51:36,459
[Music]

4599
03:51:41,680 --> 03:51:44,520
do

4600
03:51:44,520 --> 03:51:47,700
[Music]

4601
03:51:50,500 --> 03:51:53,610
[Music]

4602
03:52:00,790 --> 03:52:03,879
[Music]

4603
03:52:11,090 --> 03:52:26,999
[Music]

4604
03:52:31,420 --> 03:52:34,459
[Music]

4605
03:52:37,470 --> 03:52:51,349
[Music]

4606
03:52:53,940 --> 03:52:57,059
[Music]

4607
03:53:01,860 --> 03:53:04,989
[Music]

4608
03:53:14,700 --> 03:53:30,150
[Music]

4609
03:53:38,960 --> 03:53:42,640
[Music]

4610
03:53:43,680 --> 03:53:46,680
so

4611
03:53:54,690 --> 03:53:57,870
[Music]

4612
03:54:00,610 --> 03:54:03,780
[Music]

4613
03:54:09,760 --> 03:54:10,960
so

4614
03:54:10,960 --> 03:54:14,050
[Music]

4615
03:54:21,260 --> 03:54:28,959
[Music]

4616
03:54:31,430 --> 03:54:52,890
[Music]

4617
03:54:53,040 --> 03:54:54,330
do

4618
03:54:54,330 --> 03:55:01,509
[Music]

4619
03:55:09,190 --> 03:55:15,169
[Music]

4620
03:55:20,410 --> 03:55:40,320
[Music]

4621
03:55:43,360 --> 03:55:46,439
[Music]

4622
03:55:49,120 --> 03:55:55,209
[Music]

4623
03:56:04,740 --> 03:56:11,969
[Music]

4624
03:56:25,490 --> 03:56:38,570
[Music]

4625
03:56:42,630 --> 03:56:49,230
[Music]

4626
03:56:51,720 --> 03:57:11,188
[Music]

4627
03:57:14,280 --> 03:57:17,399
[Music]

4628
03:57:22,270 --> 03:57:25,399
[Music]

4629
03:57:26,800 --> 03:57:28,880
so

4630
03:57:28,880 --> 03:57:31,970
[Music]

4631
03:57:53,700 --> 03:58:00,890
[Music]

4632
03:58:04,000 --> 03:58:07,040
[Music]

4633
03:58:15,050 --> 03:58:18,279
[Music]

4634
03:58:21,080 --> 03:58:24,200
[Music]

4635
03:58:41,670 --> 03:58:59,500
[Music]

4636
03:59:02,000 --> 03:59:05,049
[Music]

4637
03:59:08,050 --> 03:59:21,929
[Music]

4638
03:59:24,520 --> 03:59:27,639
[Music]

4639
03:59:32,440 --> 03:59:35,569
[Music]

4640
03:59:45,280 --> 04:00:00,730
[Music]

4641
04:00:09,540 --> 04:00:13,219
[Music]

4642
04:00:25,270 --> 04:00:28,450
[Music]

4643
04:00:31,220 --> 04:00:34,369
[Music]

4644
04:00:51,830 --> 04:00:59,530
[Music]

4645
04:01:03,040 --> 04:01:15,040
[Music]

4646
04:01:15,040 --> 04:01:16,780
do

4647
04:01:16,780 --> 04:01:32,089
[Music]

4648
04:01:39,780 --> 04:01:45,749
[Music]

4649
04:01:50,990 --> 04:02:10,900
[Music]

4650
04:02:13,940 --> 04:02:17,209
[Music]

4651
04:02:19,710 --> 04:02:25,789
[Music]

4652
04:02:35,320 --> 04:02:42,549
[Music]

4653
04:02:56,070 --> 04:02:59,160
[Music]

4654
04:03:02,010 --> 04:03:09,240
[Music]

4655
04:03:13,210 --> 04:03:19,810
[Music]

4656
04:03:22,300 --> 04:03:29,680
[Music]

4657
04:03:29,680 --> 04:03:32,410
so

4658
04:03:32,410 --> 04:03:41,769
[Music]

4659
04:03:44,860 --> 04:03:47,979
[Music]

4660
04:03:52,850 --> 04:03:55,979
[Music]

4661
04:03:59,460 --> 04:04:02,580
[Music]

4662
04:04:24,290 --> 04:04:26,239
[Music]

4663
04:04:26,239 --> 04:04:29,239
so

4664
04:04:34,580 --> 04:04:37,620
[Music]

4665
04:04:45,680 --> 04:04:48,879
[Music]

4666
04:04:51,660 --> 04:04:54,770
[Music]

4667
04:05:01,950 --> 04:05:05,079
[Music]

4668
04:05:10,080 --> 04:05:12,250
do

4669
04:05:12,250 --> 04:05:19,940
[Music]

4670
04:05:23,450 --> 04:05:28,160
[Music]

4671
04:05:32,570 --> 04:05:35,628
[Music]

4672
04:05:38,630 --> 04:05:52,509
[Music]

4673
04:05:55,080 --> 04:05:58,219
[Music]

4674
04:06:03,020 --> 04:06:06,149
[Music]

4675
04:06:15,860 --> 04:06:31,310
[Music]

4676
04:06:40,110 --> 04:06:43,799
[Music]

4677
04:06:45,439 --> 04:06:48,439
so

4678
04:06:55,850 --> 04:06:59,049
[Music]

4679
04:07:01,800 --> 04:07:04,949
[Music]

4680
04:07:22,410 --> 04:07:30,119
[Music]

4681
04:07:33,620 --> 04:08:02,669
[Music]

4682
04:08:10,360 --> 04:08:16,329
[Music]

4683
04:08:21,570 --> 04:08:41,480
[Music]

4684
04:08:44,520 --> 04:08:47,599
[Music]

4685
04:08:50,280 --> 04:08:56,339
[Music]

4686
04:09:05,900 --> 04:09:13,128
[Music]

4687
04:09:26,650 --> 04:09:29,740
[Music]

4688
04:09:32,580 --> 04:09:39,730
[Music]

4689
04:09:43,790 --> 04:10:12,350
[Music]

4690
04:10:15,440 --> 04:10:18,559
[Music]

4691
04:10:23,430 --> 04:10:26,569
[Music]

4692
04:10:30,040 --> 04:10:33,129
[Music]

4693
04:10:42,880 --> 04:10:45,880
do

4694
04:10:54,820 --> 04:11:02,050
[Music]

4695
04:11:05,160 --> 04:11:08,200
[Music]

4696
04:11:16,210 --> 04:11:19,449
[Music]

4697
04:11:22,240 --> 04:11:25,350
[Music]

4698
04:11:26,560 --> 04:11:29,560
do

4699
04:11:32,530 --> 04:11:35,620
[Music]

4700
04:11:42,830 --> 04:11:50,520
[Music]

4701
04:11:54,030 --> 04:11:58,739
[Music]

4702
04:12:03,150 --> 04:12:06,208
[Music]

4703
04:12:09,210 --> 04:12:22,640
[Music]

4704
04:12:22,640 --> 04:12:25,640
do

4705
04:12:25,660 --> 04:12:28,799
[Music]

4706
04:12:33,600 --> 04:12:36,729
[Music]

4707
04:12:46,440 --> 04:13:01,890
[Music]

4708
04:13:10,690 --> 04:13:18,370
[Music]

4709
04:13:26,440 --> 04:13:29,620
[Music]

4710
04:13:32,380 --> 04:13:35,519
[Music]

4711
04:13:42,700 --> 04:13:50,149
[Music]

4712
04:13:52,990 --> 04:14:00,690
[Music]

4713
04:14:04,200 --> 04:14:16,489
[Music]

4714
04:14:19,370 --> 04:14:33,249
[Music]

4715
04:14:43,770 --> 04:14:46,899
[Music]

4716
04:14:56,600 --> 04:15:12,040
[Music]

4717
04:15:15,070 --> 04:15:18,340
[Music]

4718
04:15:20,830 --> 04:15:26,910
[Music]

4719
04:15:36,440 --> 04:15:43,669
[Music]

4720
04:15:57,180 --> 04:16:00,270
[Music]

4721
04:16:07,160 --> 04:16:10,340
[Music]

4722
04:16:14,310 --> 04:16:20,910
[Music]

4723
04:16:23,390 --> 04:16:42,859
[Music]

4724
04:16:53,940 --> 04:16:57,079
[Music]

4725
04:17:00,550 --> 04:17:03,670
[Music]

4726
04:17:25,370 --> 04:17:28,529
[Music]

4727
04:17:29,199 --> 04:17:32,199
do

4728
04:17:35,670 --> 04:17:38,729
[Music]

4729
04:17:46,770 --> 04:17:49,959
[Music]

4730
04:17:52,750 --> 04:17:55,860
[Music]

4731
04:18:00,880 --> 04:18:03,880
so

4732
04:18:07,410 --> 04:18:10,489
[Music]

4733
04:18:13,340 --> 04:18:31,160
[Music]

4734
04:18:33,670 --> 04:18:36,709
[Music]

4735
04:18:39,720 --> 04:18:53,599
[Music]

4736
04:19:04,110 --> 04:19:07,239
[Music]

4737
04:19:16,960 --> 04:19:32,310
[Music]

4738
04:19:36,960 --> 04:19:39,960
so

4739
04:19:41,200 --> 04:19:48,909
[Music]

4740
04:19:56,940 --> 04:20:00,139
[Music]

4741
04:20:02,920 --> 04:20:06,040
[Music]

4742
04:20:13,210 --> 04:20:16,300
[Music]

4743
04:20:23,510 --> 04:20:31,209
[Music]

4744
04:20:33,680 --> 04:21:03,759
[Music]

4745
04:21:11,450 --> 04:21:17,419
[Music]

4746
04:21:22,660 --> 04:21:42,570
[Music]

4747
04:21:45,610 --> 04:21:48,689
[Music]

4748
04:21:51,930 --> 04:21:57,429
[Music]

4749
04:22:06,990 --> 04:22:14,219
[Music]

4750
04:22:27,740 --> 04:22:30,840
[Music]

4751
04:22:33,680 --> 04:22:40,910
[Music]

4752
04:22:48,390 --> 04:22:51,480
[Music]

4753
04:22:53,970 --> 04:23:13,449
[Music]

4754
04:23:16,530 --> 04:23:19,649
[Music]

4755
04:23:24,520 --> 04:23:27,649
[Music]

4756
04:23:31,130 --> 04:23:34,259
[Music]

4757
04:23:55,950 --> 04:24:03,140
[Music]

4758
04:24:06,250 --> 04:24:09,290
[Music]

4759
04:24:14,479 --> 04:24:16,930
do

4760
04:24:16,930 --> 04:24:26,440
[Music]

4761
04:24:38,000 --> 04:24:41,069
[Music]

4762
04:24:43,920 --> 04:24:59,829
[Music]

4763
04:25:04,250 --> 04:25:07,299
[Music]

4764
04:25:10,300 --> 04:25:24,179
[Music]

4765
04:25:26,770 --> 04:25:29,889
[Music]

4766
04:25:34,690 --> 04:25:37,819
[Music]

4767
04:25:47,530 --> 04:26:02,980
[Music]

4768
04:26:11,780 --> 04:26:19,459
[Music]

4769
04:26:27,530 --> 04:26:30,719
[Music]

4770
04:26:33,500 --> 04:26:36,620
[Music]

4771
04:26:36,960 --> 04:26:39,960
do

4772
04:26:43,790 --> 04:26:46,879
[Music]

4773
04:26:54,090 --> 04:27:01,790
[Music]

4774
04:27:04,250 --> 04:27:34,340
[Music]

4775
04:27:42,030 --> 04:27:47,999
[Music]

4776
04:27:57,710 --> 04:28:13,150
[Music]

4777
04:28:16,190 --> 04:28:17,279
[Music]

4778
04:28:17,279 --> 04:28:20,279
so

4779
04:28:22,510 --> 04:28:28,040
[Music]

4780
04:28:37,570 --> 04:28:44,799
[Music]

4781
04:28:58,320 --> 04:29:11,490
[Music]

4782
04:29:15,460 --> 04:29:22,060
[Music]

4783
04:29:24,550 --> 04:29:44,019
[Music]

4784
04:29:47,110 --> 04:29:50,229
[Music]

4785
04:29:55,100 --> 04:29:58,229
[Music]

4786
04:30:01,710 --> 04:30:04,830
[Music]

4787
04:30:26,530 --> 04:30:33,720
[Music]

4788
04:30:36,840 --> 04:30:39,889
[Music]

4789
04:30:47,930 --> 04:30:57,030
[Music]

4790
04:31:04,200 --> 04:31:07,290
[Music]

4791
04:31:14,510 --> 04:31:30,410
[Music]

4792
04:31:34,830 --> 04:31:37,870
[Music]

4793
04:31:40,880 --> 04:31:54,759
[Music]

4794
04:32:05,270 --> 04:32:08,399
[Music]

4795
04:32:18,110 --> 04:32:33,560
[Music]

4796
04:32:42,370 --> 04:32:50,069
[Music]

4797
04:32:53,840 --> 04:32:56,840
do

4798
04:32:58,100 --> 04:33:01,290
[Music]

4799
04:33:04,050 --> 04:33:07,200
[Music]

4800
04:33:14,368 --> 04:33:17,458
[Music]

4801
04:33:24,660 --> 04:33:32,359
[Music]

4802
04:33:35,868 --> 04:34:04,917
[Music]

4803
04:34:12,590 --> 04:34:18,579
[Music]

4804
04:34:28,278 --> 04:34:43,730
[Music]

4805
04:34:46,770 --> 04:34:49,849
[Music]

4806
04:34:52,528 --> 04:34:58,589
[Music]

4807
04:35:08,150 --> 04:35:15,379
[Music]

4808
04:35:23,500 --> 04:35:26,639
[Music]

4809
04:35:28,719 --> 04:35:31,719
do

4810
04:35:34,840 --> 04:35:42,070
[Music]

4811
04:35:46,040 --> 04:35:52,640
[Music]

4812
04:35:56,160 --> 04:35:59,160
so

4813
04:35:59,230 --> 04:36:14,598
[Music]

4814
04:36:17,688 --> 04:36:20,808
[Music]

4815
04:36:25,680 --> 04:36:28,819
[Music]

4816
04:36:30,639 --> 04:36:32,290
foreign

4817
04:36:32,290 --> 04:36:35,380
[Music]

4818
04:36:57,110 --> 04:37:00,269
[Music]

4819
04:37:07,410 --> 04:37:10,450
[Music]

4820
04:37:18,508 --> 04:37:21,688
[Music]

4821
04:37:24,480 --> 04:37:27,598
[Music]

4822
04:37:34,778 --> 04:37:37,868
[Music]

4823
04:37:45,080 --> 04:38:00,989
[Music]

4824
04:38:05,400 --> 04:38:08,459
[Music]

4825
04:38:11,460 --> 04:38:17,599
[Music]

4826
04:38:17,599 --> 04:38:19,560
do

4827
04:38:19,560 --> 04:38:25,339
[Music]

4828
04:38:27,910 --> 04:38:31,049
[Music]

4829
04:38:35,848 --> 04:38:38,979
[Music]

4830
04:38:48,688 --> 04:39:04,139
[Music]

4831
04:39:12,950 --> 04:39:20,619
[Music]

4832
04:39:28,680 --> 04:39:31,868
[Music]

4833
04:39:34,630 --> 04:39:37,769
[Music]

4834
04:39:44,950 --> 04:39:52,400
[Music]

4835
04:39:55,240 --> 04:40:22,958
[Music]

4836
04:40:22,958 --> 04:40:25,958
so

4837
04:40:28,320 --> 04:40:35,499
[Music]

4838
04:40:43,190 --> 04:40:49,159
[Music]

4839
04:40:54,400 --> 04:41:14,310
[Music]

4840
04:41:17,350 --> 04:41:19,840
[Music]

4841
04:41:19,840 --> 04:41:22,840
so

4842
04:41:23,110 --> 04:41:29,169
[Music]

4843
04:41:38,730 --> 04:41:45,959
[Music]

4844
04:41:47,760 --> 04:41:50,760
so

4845
04:41:59,480 --> 04:42:02,570
[Music]

4846
04:42:05,410 --> 04:42:12,549
[Music]

4847
04:42:16,620 --> 04:42:23,219
[Music]

4848
04:42:25,710 --> 04:42:28,820
[Music]

4849
04:42:29,760 --> 04:42:31,800
do

4850
04:42:31,800 --> 04:42:45,180
[Music]

4851
04:42:48,270 --> 04:42:51,389
[Music]

4852
04:42:56,260 --> 04:42:59,399
[Music]

4853
04:43:02,870 --> 04:43:05,960
[Music]

4854
04:43:14,100 --> 04:43:17,180
[Music]

4855
04:43:25,920 --> 04:43:27,680
do

4856
04:43:27,680 --> 04:43:30,849
[Music]

4857
04:43:37,990 --> 04:43:39,040
[Music]

4858
04:43:39,040 --> 04:43:42,040
do

4859
04:43:49,100 --> 04:43:52,269
[Music]

4860
04:43:55,070 --> 04:43:58,180
[Music]

4861
04:44:05,360 --> 04:44:08,450
[Music]

4862
04:44:15,660 --> 04:44:31,569
[Music]

4863
04:44:34,160 --> 04:44:35,980
so

4864
04:44:35,980 --> 04:44:39,040
[Music]

4865
04:44:42,040 --> 04:44:55,919
[Music]

4866
04:44:58,510 --> 04:45:01,629
[Music]

4867
04:45:06,430 --> 04:45:09,560
[Music]

4868
04:45:19,270 --> 04:45:34,720
[Music]

4869
04:45:43,530 --> 04:45:51,199
[Music]

4870
04:45:59,260 --> 04:46:02,449
[Music]

4871
04:46:05,200 --> 04:46:08,349
[Music]

4872
04:46:15,530 --> 04:46:22,980
[Music]

4873
04:46:25,820 --> 04:46:33,519
[Music]

4874
04:46:37,030 --> 04:46:41,180
[Music]

4875
04:46:46,120 --> 04:47:06,079
[Music]

4876
04:47:07,840 --> 04:47:10,840
foreign

4877
04:47:13,770 --> 04:47:19,740
[Music]

4878
04:47:29,440 --> 04:47:44,890
[Music]

4879
04:47:47,930 --> 04:47:51,009
[Music]

4880
04:47:51,440 --> 04:47:53,740
so

4881
04:47:53,740 --> 04:47:58,139
[Music]

4882
04:48:09,310 --> 04:48:16,539
[Music]

4883
04:48:30,050 --> 04:48:33,149
[Music]

4884
04:48:35,990 --> 04:48:43,140
[Music]

4885
04:48:47,200 --> 04:49:15,759
[Music]

4886
04:49:18,850 --> 04:49:21,969
[Music]

4887
04:49:26,840 --> 04:49:29,970
[Music]

4888
04:49:33,450 --> 04:49:36,529
[Music]

4889
04:49:44,680 --> 04:49:46,480
[Music]

4890
04:49:46,480 --> 04:49:49,480
do

4891
04:49:58,270 --> 04:50:05,470
[Music]

4892
04:50:16,320 --> 04:50:18,798
all right welcome back

4893
04:50:18,798 --> 04:50:21,040
um so now we're kicking the

4894
04:50:21,040 --> 04:50:22,958
the last afternoon of the conference

4895
04:50:22,958 --> 04:50:25,120
with the cryptography block

4896
04:50:25,120 --> 04:50:27,920
uh your moderator has been president of

4897
04:50:27,920 --> 04:50:30,480
north tech challenges anger conference

4898
04:50:30,480 --> 04:50:31,840
organizer

4899
04:50:31,840 --> 04:50:34,480
everything pretty much uh so yeah so he

4900
04:50:34,480 --> 04:50:36,480
has 15 years of experience he loves

4901
04:50:36,480 --> 04:50:38,878
cryptography

4902
04:50:38,878 --> 04:50:41,040
he was working at delve that got

4903
04:50:41,040 --> 04:50:43,600
acquired by secureworks

4904
04:50:43,600 --> 04:50:45,600
you might know him for his smart uh

4905
04:50:45,600 --> 04:50:47,280
smart card challenges

4906
04:50:47,280 --> 04:50:50,560
uh i remind that reminds me of that my

4907
04:50:50,560 --> 04:50:52,560
first montreal was the smart card

4908
04:50:52,560 --> 04:50:54,958
challenges i was like oh my god i'm not

4909
04:50:54,958 --> 04:50:56,320
smart enough for

4910
04:50:56,320 --> 04:50:59,120
for security uh but yeah i stick around

4911
04:50:59,120 --> 04:51:00,480
and you know

4912
04:51:00,480 --> 04:51:03,600
uh whatever happens happens um so yeah

4913
04:51:03,600 --> 04:51:05,840
so let's give it up for pierre david

4914
04:51:05,840 --> 04:51:08,080
ariel

4915
04:51:08,080 --> 04:51:10,480
thank you

4916
04:51:10,638 --> 04:51:12,560
it's a it's a it's a trick there's not a

4917
04:51:12,560 --> 04:51:14,560
lot of smart things about smart cards

4918
04:51:14,560 --> 04:51:16,240
it's just overly complex for no good

4919
04:51:16,240 --> 04:51:18,718
reason to be honest

4920
04:51:18,718 --> 04:51:20,958
and he agrees

4921
04:51:20,958 --> 04:51:23,760
um so welcome to the uh cryptography

4922
04:51:23,760 --> 04:51:26,240
block if you thought this was about

4923
04:51:26,240 --> 04:51:28,400
any other use of the term crypto

4924
04:51:28,400 --> 04:51:30,400
even though there's mushrooms everywhere

4925
04:51:30,400 --> 04:51:32,638
i'm sorry for you uh it's really about

4926
04:51:32,638 --> 04:51:35,120
cryptography so you're i'm here to

4927
04:51:35,120 --> 04:51:37,680
present your lawn your local mail

4928
04:51:37,680 --> 04:51:40,000
he's a cryptographer worked at uh

4929
04:51:40,000 --> 04:51:41,120
kudiski

4930
04:51:41,120 --> 04:51:44,878
and now uh works at a at a startup where

4931
04:51:44,878 --> 04:51:46,958
today he's going to talk about

4932
04:51:46,958 --> 04:51:49,440
uh randomness

4933
04:51:49,440 --> 04:51:51,360
it's going to be a very interesting talk

4934
04:51:51,360 --> 04:51:53,280
he's a previous north texas speaker he

4935
04:51:53,280 --> 04:51:55,040
also spoke at black hat

4936
04:51:55,040 --> 04:51:56,560
besides

4937
04:51:56,560 --> 04:51:58,560
other crypto villages

4938
04:51:58,560 --> 04:52:00,718
and uh so i'm really pleased that he

4939
04:52:00,718 --> 04:52:03,120
could come again to montreal i think it

4940
04:52:03,120 --> 04:52:04,798
was three years ago

4941
04:52:04,798 --> 04:52:06,798
that you had your your talk here uh and

4942
04:52:06,798 --> 04:52:08,240
so i'm very pleased to introduce you and

4943
04:52:08,240 --> 04:52:11,490
also please give it up for yellow

4944
04:52:11,490 --> 04:52:17,709
[Applause]

4945
04:52:20,718 --> 04:52:22,878
hello thank you everyone yeah thank you

4946
04:52:22,878 --> 04:52:25,120
hello everyone so yeah i'm super happy

4947
04:52:25,120 --> 04:52:27,040
to be back on stage after all these

4948
04:52:27,040 --> 04:52:29,840
years without conferences it's super

4949
04:52:29,840 --> 04:52:32,878
nice to be able to present again and uh

4950
04:52:32,878 --> 04:52:34,400
so yeah so

4951
04:52:34,400 --> 04:52:36,240
as pure david said

4952
04:52:36,240 --> 04:52:38,320
i'm currently a software engineer

4953
04:52:38,320 --> 04:52:40,958
working on randomness i used to be an

4954
04:52:40,958 --> 04:52:43,440
applied cryptographer looking at other

4955
04:52:43,440 --> 04:52:45,840
software engineers code and having

4956
04:52:45,840 --> 04:52:47,680
nightmare about what i saw you know so

4957
04:52:47,680 --> 04:52:49,920
i'm here to make it sure to make sure

4958
04:52:49,920 --> 04:52:52,080
that you won't do the same mistakes when

4959
04:52:52,080 --> 04:52:54,000
it comes to randomness as what i saw in

4960
04:52:54,000 --> 04:52:57,760
the past and i'm also super happy to

4961
04:52:57,760 --> 04:53:00,638
play the ctf tomorrow i well tonight

4962
04:53:00,638 --> 04:53:01,600
already

4963
04:53:01,600 --> 04:53:04,160
and yeah let's start

4964
04:53:04,160 --> 04:53:05,200
so

4965
04:53:05,200 --> 04:53:07,680
today we'll discuss about what is

4966
04:53:07,680 --> 04:53:10,638
randomness and its different flavors

4967
04:53:10,638 --> 04:53:13,520
uh next we'll go uh

4968
04:53:13,520 --> 04:53:15,440
we'll talk about why do we even need

4969
04:53:15,440 --> 04:53:16,718
randomness

4970
04:53:16,718 --> 04:53:19,840
when do we use it why and so on

4971
04:53:19,840 --> 04:53:21,280
we'll see

4972
04:53:21,280 --> 04:53:23,200
what are the problems with randomness

4973
04:53:23,200 --> 04:53:24,878
and why it's hard

4974
04:53:24,878 --> 04:53:27,360
and finally we'll see how we do

4975
04:53:27,360 --> 04:53:29,600
good randomness in practice

4976
04:53:29,600 --> 04:53:30,480
and

4977
04:53:30,480 --> 04:53:32,718
what remains to be done

4978
04:53:32,718 --> 04:53:35,840
so what is randomness

4979
04:53:35,840 --> 04:53:38,080
if you look up in the dictionary

4980
04:53:38,080 --> 04:53:41,200
that's a quality of being random

4981
04:53:41,200 --> 04:53:43,600
great

4982
04:53:44,000 --> 04:53:46,798
they go on and refine a bit saying

4983
04:53:46,798 --> 04:53:48,638
though that the quality of being random

4984
04:53:48,638 --> 04:53:50,958
happening done or chosen by chance

4985
04:53:50,958 --> 04:53:53,520
rather than according to a plan

4986
04:53:53,520 --> 04:53:56,000
that's not exactly how we see randomness

4987
04:53:56,000 --> 04:53:58,718
in computer sciences right so i found

4988
04:53:58,718 --> 04:54:01,600
another dictionary which has a bit of a

4989
04:54:01,600 --> 04:54:03,600
better definition so

4990
04:54:03,600 --> 04:54:06,958
randomness is the quality or state of

4991
04:54:06,958 --> 04:54:09,280
lacking a pattern

4992
04:54:09,280 --> 04:54:11,360
and here there is a very important word

4993
04:54:11,360 --> 04:54:14,480
it's it says unpredictability

4994
04:54:14,480 --> 04:54:17,840
and we'll see why it's very important

4995
04:54:17,840 --> 04:54:19,520
later on

4996
04:54:19,520 --> 04:54:20,718
so

4997
04:54:20,718 --> 04:54:23,360
here i've picked a few random strings

4998
04:54:23,360 --> 04:54:25,040
binary strings

4999
04:54:25,040 --> 04:54:26,000
um

5000
04:54:26,000 --> 04:54:28,000
37 bits

5001
04:54:28,000 --> 04:54:29,760
who can tell me if the first one is

5002
04:54:29,760 --> 04:54:32,160
random

5003
04:54:32,400 --> 04:54:34,878
doesn't look random right

5004
04:54:34,878 --> 04:54:39,520
so how about the second one is it random

5005
04:54:40,080 --> 04:54:41,760
probably

5006
04:54:41,760 --> 04:54:43,040
um

5007
04:54:43,040 --> 04:54:44,400
the third one

5008
04:54:44,400 --> 04:54:48,160
doesn't look random neither right

5009
04:54:48,160 --> 04:54:48,958
so

5010
04:54:48,958 --> 04:54:50,958
probably not random

5011
04:54:50,958 --> 04:54:53,520
the fourth one looks random but if you

5012
04:54:53,520 --> 04:54:56,000
look at the hexadecimal representation

5013
04:54:56,000 --> 04:54:59,040
it doesn't look random anymore and the

5014
04:54:59,040 --> 04:55:00,320
last one

5015
04:55:00,320 --> 04:55:04,400
also definitely doesn't look random so

5016
04:55:04,400 --> 04:55:06,878
what that means is that even though all

5017
04:55:06,878 --> 04:55:10,560
of these 37-bit random strings if the

5018
04:55:10,560 --> 04:55:12,958
same probability of being grown at

5019
04:55:12,958 --> 04:55:13,920
random

5020
04:55:13,920 --> 04:55:16,000
we have some kind of intuition of what's

5021
04:55:16,000 --> 04:55:17,920
random and what's not

5022
04:55:17,920 --> 04:55:18,958
right

5023
04:55:18,958 --> 04:55:21,120
so

5024
04:55:22,000 --> 04:55:24,160
we'll see what that intuition actually

5025
04:55:24,160 --> 04:55:25,040
means

5026
04:55:25,040 --> 04:55:27,120
right now and

5027
04:55:27,120 --> 04:55:28,718
when we talk about randomness we have a

5028
04:55:28,718 --> 04:55:31,760
way to formalize it a bit we use the

5029
04:55:31,760 --> 04:55:34,000
kolmogorov complexity to look at

5030
04:55:34,000 --> 04:55:36,080
randomness and say oh that looks random

5031
04:55:36,080 --> 04:55:38,480
or oh that doesn't look random and the

5032
04:55:38,480 --> 04:55:41,120
kolmogorov complexity of a string is

5033
04:55:41,120 --> 04:55:43,360
basically a way to see if you can

5034
04:55:43,360 --> 04:55:45,680
compress it you know how much can you

5035
04:55:45,680 --> 04:55:49,040
compress the all one binary string well

5036
04:55:49,040 --> 04:55:51,360
a lot because it's only once so you just

5037
04:55:51,360 --> 04:55:54,480
say oh it's 37 times one and you've

5038
04:55:54,480 --> 04:55:56,240
compressed it

5039
04:55:56,240 --> 04:55:58,638
on the other hand if you've got a truly

5040
04:55:58,638 --> 04:56:00,878
random value it's way more difficult to

5041
04:56:00,878 --> 04:56:02,160
compress

5042
04:56:02,160 --> 04:56:04,718
in a general manner so that's the

5043
04:56:04,718 --> 04:56:07,040
intuition we have about randomness

5044
04:56:07,040 --> 04:56:08,320
and

5045
04:56:08,320 --> 04:56:09,840
it's going to

5046
04:56:09,840 --> 04:56:11,200
yeah

5047
04:56:11,200 --> 04:56:13,600
that's also why we want about randomness

5048
04:56:13,600 --> 04:56:15,840
right

5049
04:56:16,000 --> 04:56:16,870
being able to

5050
04:56:16,870 --> 04:56:18,320
[Music]

5051
04:56:18,320 --> 04:56:20,080
not easily

5052
04:56:20,080 --> 04:56:22,000
guess what's next and so on and we'll

5053
04:56:22,000 --> 04:56:25,840
see what unpredictability and bias are

5054
04:56:25,840 --> 04:56:26,958
later on

5055
04:56:26,958 --> 04:56:27,840
so

5056
04:56:27,840 --> 04:56:29,680
next is the

5057
04:56:29,680 --> 04:56:31,840
you know my talk is about public

5058
04:56:31,840 --> 04:56:35,040
verifiable distributed randomness

5059
04:56:35,040 --> 04:56:36,878
and you might be asking yourself what

5060
04:56:36,878 --> 04:56:38,240
are all those

5061
04:56:38,240 --> 04:56:40,798
keywords right so public randomness is

5062
04:56:40,798 --> 04:56:42,160
basically just a

5063
04:56:42,160 --> 04:56:44,878
value that is random but that is that is

5064
04:56:44,878 --> 04:56:46,718
meant to be public

5065
04:56:46,718 --> 04:56:49,680
like think of lotteries if you

5066
04:56:49,680 --> 04:56:51,840
you know buy a ticket you choose your

5067
04:56:51,840 --> 04:56:55,040
numbers at some point they will draw the

5068
04:56:55,040 --> 04:56:57,040
winning tickets by drawing a random

5069
04:56:57,040 --> 04:56:59,600
value and that random value is public

5070
04:56:59,600 --> 04:57:01,440
anybody can look it up and see oh that's

5071
04:57:01,440 --> 04:57:04,320
the winning number for today's lottery

5072
04:57:04,320 --> 04:57:06,160
and

5073
04:57:06,160 --> 04:57:08,080
that's really what public randomness is

5074
04:57:08,080 --> 04:57:09,600
about it's

5075
04:57:09,600 --> 04:57:11,920
something you want everybody to be able

5076
04:57:11,920 --> 04:57:15,040
to access and use for their own needs

5077
04:57:15,040 --> 04:57:17,120
whatever it is be it for i don't know

5078
04:57:17,120 --> 04:57:18,718
like a lottery

5079
04:57:18,718 --> 04:57:19,840
uh

5080
04:57:19,840 --> 04:57:22,798
game like if you want to have

5081
04:57:22,798 --> 04:57:25,200
some kind of gambling and so on

5082
04:57:25,200 --> 04:57:26,718
and

5083
04:57:26,718 --> 04:57:27,600
next

5084
04:57:27,600 --> 04:57:30,240
we'll make the difference between public

5085
04:57:30,240 --> 04:57:32,400
and secret randomness because

5086
04:57:32,400 --> 04:57:34,878
public randomness is cool but i guess

5087
04:57:34,878 --> 04:57:38,480
you've all ub keys ssh keys pgp keys on

5088
04:57:38,480 --> 04:57:41,360
your computers right and these are

5089
04:57:41,360 --> 04:57:43,760
secret keys that are not meant to be

5090
04:57:43,760 --> 04:57:46,480
public so if you take a public value a

5091
04:57:46,480 --> 04:57:49,440
public random value and use that value

5092
04:57:49,440 --> 04:57:52,560
to produce your secret key

5093
04:57:52,560 --> 04:57:54,798
that's not going to work well so we also

5094
04:57:54,798 --> 04:57:56,638
have the notion of secret randomness

5095
04:57:56,638 --> 04:57:59,120
that is meant to stay secret and that's

5096
04:57:59,120 --> 04:58:01,440
typically the one we'll use for

5097
04:58:01,440 --> 04:58:03,920
cryptography stuff like generating key

5098
04:58:03,920 --> 04:58:06,560
material nonseize or number that are

5099
04:58:06,560 --> 04:58:08,878
meant to be used only once

5100
04:58:08,878 --> 04:58:10,798
and so on so it's super important to

5101
04:58:10,798 --> 04:58:14,400
keep that in mind do not never use

5102
04:58:14,400 --> 04:58:16,320
public randomness to generate secret

5103
04:58:16,320 --> 04:58:17,360
keys

5104
04:58:17,360 --> 04:58:19,600
seems obvious right

5105
04:58:19,600 --> 04:58:21,840
so next

5106
04:58:21,840 --> 04:58:23,840
public randomness is cool but or do you

5107
04:58:23,840 --> 04:58:26,400
know it's actually random right we've

5108
04:58:26,400 --> 04:58:28,080
seen earlier it's very difficult to have

5109
04:58:28,080 --> 04:58:30,080
an intuition of what's random and what's

5110
04:58:30,080 --> 04:58:33,440
not and even though we have one

5111
04:58:33,440 --> 04:58:34,718
we might have some

5112
04:58:34,718 --> 04:58:37,280
doubts about you know like the honesty

5113
04:58:37,280 --> 04:58:40,160
of the person in front of us like if you

5114
04:58:40,160 --> 04:58:41,680
create a

5115
04:58:41,680 --> 04:58:44,560
tumbler game and you give tickets to

5116
04:58:44,560 --> 04:58:46,080
everybody and then one of your good

5117
04:58:46,080 --> 04:58:48,560
friends win the tombola people might be

5118
04:58:48,560 --> 04:58:50,400
like hey you cheated

5119
04:58:50,400 --> 04:58:51,920
so that's not something you typically

5120
04:58:51,920 --> 04:58:54,240
want when you do something public like

5121
04:58:54,240 --> 04:58:57,360
uh on a blockchain typically you have

5122
04:58:57,360 --> 04:58:59,600
smart contracts which need random values

5123
04:58:59,600 --> 04:59:00,958
or

5124
04:59:00,958 --> 04:59:03,600
in the lottery ecosystem

5125
04:59:03,600 --> 04:59:04,958
on

5126
04:59:04,958 --> 04:59:07,440
for other use cases as well

5127
04:59:07,440 --> 04:59:08,560
so

5128
04:59:08,560 --> 04:59:10,638
what we need next is a way to verify the

5129
04:59:10,638 --> 04:59:12,000
randomness and

5130
04:59:12,000 --> 04:59:14,240
verifiable randomness is just that it's

5131
04:59:14,240 --> 04:59:17,600
a run it's a public random value

5132
04:59:17,600 --> 04:59:18,958
that's

5133
04:59:18,958 --> 04:59:22,160
that you can verify somehow um

5134
04:59:22,160 --> 04:59:24,240
that's typically done using hashes

5135
04:59:24,240 --> 04:59:27,280
signatures or complex cryptography and

5136
04:59:27,280 --> 04:59:30,160
we'll touch on the ways to do it uh when

5137
04:59:30,160 --> 04:59:33,360
we'll see the concrete instantiation

5138
04:59:33,360 --> 04:59:36,160
in the in practice part of my talk

5139
04:59:36,160 --> 04:59:38,638
and finally we got the distributed

5140
04:59:38,638 --> 04:59:41,600
keyword uh in the title and distributed

5141
04:59:41,600 --> 04:59:44,080
randomness is just like

5142
04:59:44,080 --> 04:59:46,320
what you think it is when you

5143
04:59:46,320 --> 04:59:50,080
hear it it's a random value that

5144
04:59:50,080 --> 04:59:53,600
was achieved like that was created by a

5145
04:59:53,600 --> 04:59:56,160
distributed system and that distributed

5146
04:59:56,160 --> 04:59:58,000
system needs to achieve consensus and

5147
04:59:58,000 --> 05:00:01,200
the random value because otherwise

5148
05:00:01,200 --> 05:00:04,160
it's not going to be a good distributed

5149
05:00:04,160 --> 05:00:06,320
system if each node has different you

5150
05:00:06,320 --> 05:00:09,040
know values at the same time in point

5151
05:00:09,040 --> 05:00:10,638
and that's very difficult to do because

5152
05:00:10,638 --> 05:00:12,240
you want your randomness to be

5153
05:00:12,240 --> 05:00:14,160
unpredictable but at the same time you

5154
05:00:14,160 --> 05:00:16,160
want all of your nodes in your network

5155
05:00:16,160 --> 05:00:18,958
to be able to generate the same value at

5156
05:00:18,958 --> 05:00:22,080
the same moment so how do you make it so

5157
05:00:22,080 --> 05:00:24,798
that it's you know unpredictable but

5158
05:00:24,798 --> 05:00:26,638
still

5159
05:00:26,638 --> 05:00:30,080
generated on time by all nodes and

5160
05:00:30,080 --> 05:00:32,798
that's again a very difficult task and

5161
05:00:32,798 --> 05:00:34,718
blockchain system have struggled with

5162
05:00:34,718 --> 05:00:37,200
that if you look at ethereum for example

5163
05:00:37,200 --> 05:00:39,200
smart contracts on ethereum have a very

5164
05:00:39,200 --> 05:00:40,718
hard

5165
05:00:40,718 --> 05:00:42,878
time trying to generate random values

5166
05:00:42,878 --> 05:00:44,560
and if you look at other

5167
05:00:44,560 --> 05:00:46,400
distributed systems

5168
05:00:46,400 --> 05:00:48,480
usually what you'll find is that you

5169
05:00:48,480 --> 05:00:50,878
have some kind of

5170
05:00:50,878 --> 05:00:52,718
trusted third party providing the

5171
05:00:52,718 --> 05:00:55,040
randomness and that's not too great

5172
05:00:55,040 --> 05:00:57,760
because you need to trust somebody and

5173
05:00:57,760 --> 05:01:00,560
decentralize this decentralization and

5174
05:01:00,560 --> 05:01:02,320
distributed system usually try to

5175
05:01:02,320 --> 05:01:05,120
decentralize trust you know so we don't

5176
05:01:05,120 --> 05:01:07,840
want to trust a single third party about

5177
05:01:07,840 --> 05:01:10,958
anything even our random values

5178
05:01:10,958 --> 05:01:12,320
so

5179
05:01:12,320 --> 05:01:15,280
that's going to be a short section but

5180
05:01:15,280 --> 05:01:17,920
why do we need randomness well i spoke

5181
05:01:17,920 --> 05:01:20,160
about lotteries and gambling already

5182
05:01:20,160 --> 05:01:23,360
these are like obvious uh things uh

5183
05:01:23,360 --> 05:01:25,360
other things you could think of is like

5184
05:01:25,360 --> 05:01:28,160
jury election or sortition

5185
05:01:28,160 --> 05:01:29,680
these are the kind of things where you

5186
05:01:29,680 --> 05:01:32,638
really like need proper

5187
05:01:32,638 --> 05:01:35,040
public randomness probably because you

5188
05:01:35,040 --> 05:01:36,480
want it to be

5189
05:01:36,480 --> 05:01:38,958
publicly auditable and so you want it to

5190
05:01:38,958 --> 05:01:41,200
also be verifiable as well

5191
05:01:41,200 --> 05:01:42,878
next you obviously have all the

5192
05:01:42,878 --> 05:01:44,718
cryptographic protocols if you connect

5193
05:01:44,718 --> 05:01:47,280
to a website nowadays your computer is

5194
05:01:47,280 --> 05:01:50,480
probably generating between two and five

5195
05:01:50,480 --> 05:01:52,320
random values just for the initial

5196
05:01:52,320 --> 05:01:54,160
connection you know like generating

5197
05:01:54,160 --> 05:01:58,798
ethernet keys non-cs and

5198
05:01:58,798 --> 05:02:00,638
that's a lot of secret randomness

5199
05:02:00,638 --> 05:02:03,200
obviously

5200
05:02:03,280 --> 05:02:06,320
next we have the abuse

5201
05:02:06,320 --> 05:02:07,600
case of

5202
05:02:07,600 --> 05:02:10,320
statistics and control trials in

5203
05:02:10,320 --> 05:02:13,280
medicine if you can you know

5204
05:02:13,280 --> 05:02:15,600
if you have a bias distribution when you

5205
05:02:15,600 --> 05:02:16,798
pick your

5206
05:02:16,798 --> 05:02:17,840
sample

5207
05:02:17,840 --> 05:02:20,000
the results of your study won't be

5208
05:02:20,000 --> 05:02:23,440
really good and it won't be

5209
05:02:23,440 --> 05:02:26,000
yeah what you want it to be so you need

5210
05:02:26,000 --> 05:02:27,680
good randomness there as well without

5211
05:02:27,680 --> 05:02:29,360
any bias

5212
05:02:29,360 --> 05:02:31,840
and finally we use it a lot in software

5213
05:02:31,840 --> 05:02:34,718
in general like if you do fuzzing

5214
05:02:34,718 --> 05:02:37,440
chaos monkey and so on you also want to

5215
05:02:37,440 --> 05:02:40,638
take random values but these values can

5216
05:02:40,638 --> 05:02:42,878
be generated by

5217
05:02:42,878 --> 05:02:45,840
some that by a prng absolute random

5218
05:02:45,840 --> 05:02:48,718
number generator that's going to be

5219
05:02:48,718 --> 05:02:51,760
seeded in a way that's

5220
05:02:51,760 --> 05:02:53,280
repeatable so

5221
05:02:53,280 --> 05:02:55,760
it can be deterministic it doesn't need

5222
05:02:55,760 --> 05:02:57,440
to be secret it doesn't need to be

5223
05:02:57,440 --> 05:02:58,718
public

5224
05:02:58,718 --> 05:03:02,240
but it still needs to be uniformly

5225
05:03:02,240 --> 05:03:03,600
distributed

5226
05:03:03,600 --> 05:03:05,360
in the

5227
05:03:05,360 --> 05:03:06,798
well

5228
05:03:06,798 --> 05:03:09,360
in the values you're interested in

5229
05:03:09,360 --> 05:03:11,600
so next we'll look into what are the

5230
05:03:11,600 --> 05:03:14,240
problems we have with randomness because

5231
05:03:14,240 --> 05:03:16,400
randomness seems easy right you just

5232
05:03:16,400 --> 05:03:18,718
take a random value and you're done so

5233
05:03:18,718 --> 05:03:20,480
what is the problem

5234
05:03:20,480 --> 05:03:22,958
and i've talked about this a lot already

5235
05:03:22,958 --> 05:03:23,840
but

5236
05:03:23,840 --> 05:03:26,480
randomness is difficult because you want

5237
05:03:26,480 --> 05:03:29,120
it to be unpredictable and bias

5238
05:03:29,120 --> 05:03:30,560
resistant

5239
05:03:30,560 --> 05:03:32,638
um

5240
05:03:32,638 --> 05:03:34,878
i mean being unpredictable it kind of

5241
05:03:34,878 --> 05:03:36,560
obvious if you can predict the next

5242
05:03:36,560 --> 05:03:38,958
lottery ticket you can win it or if you

5243
05:03:38,958 --> 05:03:40,798
can predict the loot you'll get in the

5244
05:03:40,798 --> 05:03:44,240
game you you can cheat and so on so

5245
05:03:44,240 --> 05:03:46,080
it makes sense right but the bias

5246
05:03:46,080 --> 05:03:48,878
resistance thing is a bit less obvious

5247
05:03:48,878 --> 05:03:50,560
and actually

5248
05:03:50,560 --> 05:03:52,080
for cryptographic

5249
05:03:52,080 --> 05:03:55,280
algorithms it's super important because

5250
05:03:55,280 --> 05:03:58,080
the most used signature scheme nowadays

5251
05:03:58,080 --> 05:04:02,000
is probably ecdsa it's used for tls it's

5252
05:04:02,000 --> 05:04:04,638
used on bitcoin ethereum

5253
05:04:04,638 --> 05:04:08,320
and a lot of new systems nowadays are

5254
05:04:08,320 --> 05:04:09,600
running using elliptic curve

5255
05:04:09,600 --> 05:04:12,160
cryptography and signature schemes such

5256
05:04:12,160 --> 05:04:16,000
as ecdsa are super sensitive to bias

5257
05:04:16,000 --> 05:04:18,400
you will typically get a take um at

5258
05:04:18,400 --> 05:04:21,360
random a 256 bits

5259
05:04:21,360 --> 05:04:22,400
value

5260
05:04:22,400 --> 05:04:24,560
well if you have just one bit that is

5261
05:04:24,560 --> 05:04:27,760
bias or three bits it's already

5262
05:04:27,760 --> 05:04:29,680
a potential vulnerability that could

5263
05:04:29,680 --> 05:04:32,638
leak your private key

5264
05:04:32,638 --> 05:04:35,200
so leaking the private key is the most

5265
05:04:35,200 --> 05:04:37,200
catastrophic thing that can happen for a

5266
05:04:37,200 --> 05:04:39,360
cryptographic system you really don't

5267
05:04:39,360 --> 05:04:41,120
want that to happen so it's super

5268
05:04:41,120 --> 05:04:43,200
important to have really

5269
05:04:43,200 --> 05:04:46,480
unbiased random values for such

5270
05:04:46,480 --> 05:04:48,240
cryptographic schemes

5271
05:04:48,240 --> 05:04:49,520
and

5272
05:04:49,520 --> 05:04:51,760
i guess a lot of you have already

5273
05:04:51,760 --> 05:04:53,280
developed something or you needed a

5274
05:04:53,280 --> 05:04:55,200
random number right so how do you do

5275
05:04:55,200 --> 05:04:58,200
that if you want a number between 0 and

5276
05:04:58,200 --> 05:05:01,120
255 that's easy right you take a random

5277
05:05:01,120 --> 05:05:05,040
byte you can call your black device you

5278
05:05:05,040 --> 05:05:08,080
you run them to get a random byte out of

5279
05:05:08,080 --> 05:05:10,958
your machine entropy pool and you get a

5280
05:05:10,958 --> 05:05:13,760
value between 0 and 255.

5281
05:05:13,760 --> 05:05:15,840
now it gets trickier if you want a value

5282
05:05:15,840 --> 05:05:18,958
between 0 and 106 right how do you do

5283
05:05:18,958 --> 05:05:21,120
that well the typical

5284
05:05:21,120 --> 05:05:23,680
way people will do that is taking a

5285
05:05:23,680 --> 05:05:25,280
random byte

5286
05:05:25,280 --> 05:05:28,320
and then reducing it modulo the values i

5287
05:05:28,320 --> 05:05:31,360
want to be the limit right so here if i

5288
05:05:31,360 --> 05:05:32,400
reduce it

5289
05:05:32,400 --> 05:05:35,840
modulo 107 i'm happy because every

5290
05:05:35,840 --> 05:05:38,958
numbers up to 106 will be

5291
05:05:38,958 --> 05:05:41,200
will stay the same and then 107 will

5292
05:05:41,200 --> 05:05:43,920
become zero 108 will become one

5293
05:05:43,920 --> 05:05:46,798
everything is mapped you know onto the

5294
05:05:46,798 --> 05:05:48,798
range you want to

5295
05:05:48,798 --> 05:05:50,638
to query from

5296
05:05:50,638 --> 05:05:53,040
but that's actually an issue

5297
05:05:53,040 --> 05:05:55,958
because you don't have a multiple of

5298
05:05:55,958 --> 05:05:57,520
107

5299
05:05:57,520 --> 05:06:01,040
amongst the 256 possibilities you can

5300
05:06:01,040 --> 05:06:03,120
get from a random byte so what you've

5301
05:06:03,120 --> 05:06:05,600
just done here is introducing a modulo

5302
05:06:05,600 --> 05:06:07,040
by us

5303
05:06:07,040 --> 05:06:11,600
because for the first 107 106

5304
05:06:11,600 --> 05:06:15,280
values that's fine the next 106 values

5305
05:06:15,280 --> 05:06:20,958
it's fine again but once you reach 214

5306
05:06:20,958 --> 05:06:23,280
up to 255

5307
05:06:23,280 --> 05:06:25,520
these are going to be mapped

5308
05:06:25,520 --> 05:06:29,280
towards the first 42 first values and so

5309
05:06:29,280 --> 05:06:32,400
you get bias randomness and it's super

5310
05:06:32,400 --> 05:06:34,400
easy to get by as randomness because you

5311
05:06:34,400 --> 05:06:35,280
just

5312
05:06:35,280 --> 05:06:37,840
picked a random value which was good you

5313
05:06:37,840 --> 05:06:40,160
reduced it module the value you wanted

5314
05:06:40,160 --> 05:06:42,878
to reduce it to and certainly it's not a

5315
05:06:42,878 --> 05:06:46,240
good random value anymore and this is

5316
05:06:46,240 --> 05:06:47,920
leaking your private key already if

5317
05:06:47,920 --> 05:06:50,240
you're assigning stuff with a value that

5318
05:06:50,240 --> 05:06:53,440
was generated in that way and so

5319
05:06:53,440 --> 05:06:55,520
the best way to avoid such bias is

5320
05:06:55,520 --> 05:06:57,440
obviously to not

5321
05:06:57,440 --> 05:06:58,320
uh

5322
05:06:58,320 --> 05:07:00,080
do it yourself and rely on your

5323
05:07:00,080 --> 05:07:02,240
cryptographic library

5324
05:07:02,240 --> 05:07:04,958
python has a secret module signed since

5325
05:07:04,958 --> 05:07:05,878
piton

5326
05:07:05,878 --> 05:07:07,600
3.6

5327
05:07:07,600 --> 05:07:10,638
go unrest a very good

5328
05:07:10,638 --> 05:07:12,400
random generator

5329
05:07:12,400 --> 05:07:15,680
functions but in general if you need to

5330
05:07:15,680 --> 05:07:17,920
do it yourself what you want to do is

5331
05:07:17,920 --> 05:07:20,958
rely on so-called rejection sampling

5332
05:07:20,958 --> 05:07:22,958
where you will pick a value at random

5333
05:07:22,958 --> 05:07:25,360
see if it's in the range you want if it

5334
05:07:25,360 --> 05:07:28,000
is then you're fine if not you reject it

5335
05:07:28,000 --> 05:07:30,160
and you pick a new one against at random

5336
05:07:30,160 --> 05:07:32,000
and that's going to be uniformly

5337
05:07:32,000 --> 05:07:33,840
distributed and it's not going to be

5338
05:07:33,840 --> 05:07:36,798
biased i've got a cool link to a guide

5339
05:07:36,798 --> 05:07:38,958
to modulo by us on how to avoid it it's

5340
05:07:38,958 --> 05:07:41,360
a blog post i wrote like two three years

5341
05:07:41,360 --> 05:07:44,320
ago and uh if you want to check it out i

5342
05:07:44,320 --> 05:07:46,798
recommend you read it

5343
05:07:46,798 --> 05:07:48,798
so now

5344
05:07:48,798 --> 05:07:51,040
we've seen this cool different kind of

5345
05:07:51,040 --> 05:07:52,638
randomness

5346
05:07:52,638 --> 05:07:54,320
let's see

5347
05:07:54,320 --> 05:07:57,040
how we can solve the issue of public

5348
05:07:57,040 --> 05:08:00,560
verifiable distributed randomness right

5349
05:08:00,560 --> 05:08:02,400
so if we look

5350
05:08:02,400 --> 05:08:04,798
a bit at the history of public

5351
05:08:04,798 --> 05:08:06,878
randomness we can see that

5352
05:08:06,878 --> 05:08:09,440
michael rabin already proposed the use

5353
05:08:09,440 --> 05:08:12,638
of random beacons and that's

5354
05:08:12,638 --> 05:08:14,958
where the beacon world comes from in

5355
05:08:14,958 --> 05:08:18,160
1993 to secure transactions

5356
05:08:18,160 --> 05:08:20,240
well that was before bitcoin and before

5357
05:08:20,240 --> 05:08:22,638
blockchain so these transactions are not

5358
05:08:22,638 --> 05:08:24,958
the same as the transaction we might be

5359
05:08:24,958 --> 05:08:27,600
looking at nowadays but the the base id

5360
05:08:27,600 --> 05:08:28,480
was

5361
05:08:28,480 --> 05:08:30,400
the same as what we have now and and

5362
05:08:30,400 --> 05:08:33,280
what he says in his paper is that it is

5363
05:08:33,280 --> 05:08:37,680
impossible without a trusted third party

5364
05:08:37,680 --> 05:08:38,638
and

5365
05:08:38,638 --> 05:08:40,638
that's something we are actually going

5366
05:08:40,638 --> 05:08:42,958
to challenge in a bit

5367
05:08:42,958 --> 05:08:46,480
next we can see in 1998

5368
05:08:46,480 --> 05:08:50,080
a website such as random.org that offers

5369
05:08:50,080 --> 05:08:52,878
a true random number generator anybody

5370
05:08:52,878 --> 05:08:55,280
can use and they are

5371
05:08:55,280 --> 05:08:57,600
getting their randomness from the

5372
05:08:57,600 --> 05:09:00,798
atmospheric noise physical process good

5373
05:09:00,798 --> 05:09:01,920
entropy

5374
05:09:01,920 --> 05:09:03,920
everybody's happy right

5375
05:09:03,920 --> 05:09:05,120
well

5376
05:09:05,120 --> 05:09:07,760
how do you verify it was actually taken

5377
05:09:07,760 --> 05:09:09,680
from atmospheric noise

5378
05:09:09,680 --> 05:09:11,120
you cannot

5379
05:09:11,120 --> 05:09:14,718
and so you have to trust them

5380
05:09:14,718 --> 05:09:16,480
and usually you don't like trusting

5381
05:09:16,480 --> 05:09:19,360
random people on the internet right

5382
05:09:19,360 --> 05:09:21,520
so next we have nist

5383
05:09:21,520 --> 05:09:25,520
which comes in 2011 and says

5384
05:09:25,520 --> 05:09:29,200
the internet needs a public verifiable

5385
05:09:29,200 --> 05:09:30,878
trusted

5386
05:09:30,878 --> 05:09:33,600
ramdaness beacon system

5387
05:09:33,600 --> 05:09:34,638
and

5388
05:09:34,638 --> 05:09:37,520
it's funny because nist is not the most

5389
05:09:37,520 --> 05:09:41,040
trusted party out there right but they

5390
05:09:41,040 --> 05:09:43,040
went ahead and they launched their first

5391
05:09:43,040 --> 05:09:46,798
nist beacon in 2013 and the nist beacon

5392
05:09:46,798 --> 05:09:49,920
is based on a secure hardware so you

5393
05:09:49,920 --> 05:09:52,480
have to trust the secure hardware ernest

5394
05:09:52,480 --> 05:09:56,080
is using to produce the proper true

5395
05:09:56,080 --> 05:09:58,718
randomness from quantum entanglements

5396
05:09:58,718 --> 05:10:00,240
which is a cool way of producing

5397
05:10:00,240 --> 05:10:02,240
randomness and then they publish it

5398
05:10:02,240 --> 05:10:04,400
online with a signature you can verify

5399
05:10:04,400 --> 05:10:06,480
the signature and everything that's

5400
05:10:06,480 --> 05:10:08,718
that's probably verifiable randomness

5401
05:10:08,718 --> 05:10:11,760
except it's generated by a single

5402
05:10:11,760 --> 05:10:14,080
trusted third party which is not

5403
05:10:14,080 --> 05:10:15,840
something we want right

5404
05:10:15,840 --> 05:10:18,080
so

5405
05:10:18,080 --> 05:10:20,160
when we look at previous attempts to

5406
05:10:20,160 --> 05:10:22,400
generate public randomness we can see

5407
05:10:22,400 --> 05:10:24,798
none of them are really great

5408
05:10:24,798 --> 05:10:27,040
there was a paper about using bitcoin to

5409
05:10:27,040 --> 05:10:30,000
try and do it because why not no

5410
05:10:30,000 --> 05:10:32,400
promising but python bitcoin is super

5411
05:10:32,400 --> 05:10:34,638
slow and it relies on proof of work

5412
05:10:34,638 --> 05:10:36,480
which is not something we really like

5413
05:10:36,480 --> 05:10:38,000
nowadays right

5414
05:10:38,000 --> 05:10:39,040
so

5415
05:10:39,040 --> 05:10:42,798
meh next in 2016

5416
05:10:42,798 --> 05:10:45,200
another paper came out which had a super

5417
05:10:45,200 --> 05:10:47,520
cool technique to do distributed

5418
05:10:47,520 --> 05:10:50,320
randomness in a publicly verifiable way

5419
05:10:50,320 --> 05:10:52,718
so that sounds like the

5420
05:10:52,718 --> 05:10:55,040
the way to go right except it was super

5421
05:10:55,040 --> 05:10:57,760
slow and it was using schnorr signatures

5422
05:10:57,760 --> 05:10:58,798
which are

5423
05:10:58,798 --> 05:11:01,600
yeah it was doing a bunch of really nice

5424
05:11:01,600 --> 05:11:04,400
thing but it was not so efficient so the

5425
05:11:04,400 --> 05:11:06,400
question we had was can we do it in a

5426
05:11:06,400 --> 05:11:08,480
simpler and faster way

5427
05:11:08,480 --> 05:11:10,160
and that's how

5428
05:11:10,160 --> 05:11:12,400
we came up with the answer that yes we

5429
05:11:12,400 --> 05:11:13,280
can

5430
05:11:13,280 --> 05:11:15,920
and so the internet needed a randomness

5431
05:11:15,920 --> 05:11:18,000
service that is just like the ntp

5432
05:11:18,000 --> 05:11:20,798
servers you use to get the time on your

5433
05:11:20,798 --> 05:11:25,200
device right that is public free and

5434
05:11:25,200 --> 05:11:27,680
available and so we came up with the

5435
05:11:27,680 --> 05:11:30,080
notion of d-run which stands for

5436
05:11:30,080 --> 05:11:32,480
distributed randomness which is highly

5437
05:11:32,480 --> 05:11:34,480
available decentralized and publicly

5438
05:11:34,480 --> 05:11:36,560
verifiable source from them of

5439
05:11:36,560 --> 05:11:40,240
randomness and we'll see how that works

5440
05:11:40,240 --> 05:11:41,360
so

5441
05:11:41,360 --> 05:11:43,760
diran is an open source software you can

5442
05:11:43,760 --> 05:11:46,080
download it on github you can check it

5443
05:11:46,080 --> 05:11:48,718
you can review it it was even audited so

5444
05:11:48,718 --> 05:11:50,400
so far so good

5445
05:11:50,400 --> 05:11:51,760
next it

5446
05:11:51,760 --> 05:11:53,680
is really meant to be run as a network

5447
05:11:53,680 --> 05:11:55,840
of nodes so you will have multiple nodes

5448
05:11:55,840 --> 05:11:58,240
running the same software

5449
05:11:58,240 --> 05:11:59,920
i mean you could re-implement it as well

5450
05:11:59,920 --> 05:12:02,160
there is a spec but running the d-runs

5451
05:12:02,160 --> 05:12:05,600
after um spec and then what it does is

5452
05:12:05,600 --> 05:12:07,680
basically it relies on distributed key

5453
05:12:07,680 --> 05:12:09,280
generation

5454
05:12:09,280 --> 05:12:12,000
which is a cool way of using verifiable

5455
05:12:12,000 --> 05:12:13,440
secret sharing and threshold

5456
05:12:13,440 --> 05:12:16,320
cryptography to generate a key that no

5457
05:12:16,320 --> 05:12:19,200
single node ever sees or

5458
05:12:19,200 --> 05:12:21,840
gets in memory but that every node in

5459
05:12:21,840 --> 05:12:25,040
the network can agree is the right key

5460
05:12:25,040 --> 05:12:28,240
and then it will use bls so banelin

5461
05:12:28,240 --> 05:12:31,718
shasham signature scheme on the bls 12

5462
05:12:31,718 --> 05:12:35,280
381 pairing curve to do

5463
05:12:35,280 --> 05:12:36,480
signatures

5464
05:12:36,480 --> 05:12:39,280
and the funny thing with bls signatures

5465
05:12:39,280 --> 05:12:42,400
is that you can take

5466
05:12:42,400 --> 05:12:44,480
any number of bl signatures and you can

5467
05:12:44,480 --> 05:12:47,360
aggregate them into a single signature

5468
05:12:47,360 --> 05:12:49,440
and so each node in the network is going

5469
05:12:49,440 --> 05:12:50,798
to sign

5470
05:12:50,798 --> 05:12:52,000
a value

5471
05:12:52,000 --> 05:12:55,200
and that sign value

5472
05:12:55,200 --> 05:12:57,600
means nothing until you take them

5473
05:12:57,600 --> 05:13:00,160
together aggregate them and get the

5474
05:13:00,160 --> 05:13:02,240
aggregate signature which can be

5475
05:13:02,240 --> 05:13:05,360
verified to be coming from that group

5476
05:13:05,360 --> 05:13:07,360
and the nice thing is you only need a

5477
05:13:07,360 --> 05:13:09,600
threshold of nodes so if you have 20

5478
05:13:09,600 --> 05:13:11,680
nodes you could say okay my threshold is

5479
05:13:11,680 --> 05:13:12,560
10

5480
05:13:12,560 --> 05:13:14,878
and you generate during the distributed

5481
05:13:14,878 --> 05:13:16,638
key generation

5482
05:13:16,638 --> 05:13:20,000
a public key that will allow any 10

5483
05:13:20,000 --> 05:13:22,560
nodes to generate a valid signature for

5484
05:13:22,560 --> 05:13:23,920
the group

5485
05:13:23,920 --> 05:13:26,480
those are called group signatures

5486
05:13:26,480 --> 05:13:28,400
and we use the

5487
05:13:28,400 --> 05:13:31,200
signature as a way to produce randomness

5488
05:13:31,200 --> 05:13:33,040
because a good signature cannot be

5489
05:13:33,040 --> 05:13:35,600
distinguished from a random value so

5490
05:13:35,600 --> 05:13:37,840
that's a rule for cryptographic

5491
05:13:37,840 --> 05:13:41,600
signatures if you have a good

5492
05:13:41,680 --> 05:13:44,080
signature scheme you cannot distinguish

5493
05:13:44,080 --> 05:13:47,040
a signature from a random value so we

5494
05:13:47,040 --> 05:13:48,240
take

5495
05:13:48,240 --> 05:13:50,638
the group signature from the group of

5496
05:13:50,638 --> 05:13:53,120
nodes and that pro that give us a random

5497
05:13:53,120 --> 05:13:55,760
value and that random value is generated

5498
05:13:55,760 --> 05:13:58,480
in a decentralized way is unpredictable

5499
05:13:58,480 --> 05:14:00,560
because it's indistinguishable from

5500
05:14:00,560 --> 05:14:01,760
random

5501
05:14:01,760 --> 05:14:04,718
it's resistant to bias and you can

5502
05:14:04,718 --> 05:14:06,878
verify it was generated by that group of

5503
05:14:06,878 --> 05:14:08,798
nodes since it's a signature

5504
05:14:08,798 --> 05:14:09,840
so

5505
05:14:09,840 --> 05:14:13,040
yeah we did it right

5506
05:14:13,040 --> 05:14:15,440
and we actually did it so we launched in

5507
05:14:15,440 --> 05:14:17,440
2019

5508
05:14:17,440 --> 05:14:19,600
the league of entropy which was a team

5509
05:14:19,600 --> 05:14:22,400
of people who decided to run

5510
05:14:22,400 --> 05:14:25,280
d-rand under servers and you can try it

5511
05:14:25,280 --> 05:14:28,160
out now on your browser you're just

5512
05:14:28,160 --> 05:14:31,360
or using whatever you can just

5513
05:14:31,360 --> 05:14:33,680
see it running for two years three years

5514
05:14:33,680 --> 05:14:34,400
now

5515
05:14:34,400 --> 05:14:36,320
and um

5516
05:14:36,320 --> 05:14:37,840
the league of entropy was actually

5517
05:14:37,840 --> 05:14:40,878
funded by cloudflare kudoski security

5518
05:14:40,878 --> 05:14:43,120
protocol labs a bunch of other companies

5519
05:14:43,120 --> 05:14:45,040
which are running you know

5520
05:14:45,040 --> 05:14:48,000
internet stuff and it's really meant to

5521
05:14:48,000 --> 05:14:50,480
provide you with public verifiable

5522
05:14:50,480 --> 05:14:52,400
randomness

5523
05:14:52,400 --> 05:14:56,160
which is unbiased which is

5524
05:14:56,160 --> 05:14:57,920
unpredictable

5525
05:14:57,920 --> 05:14:59,920
and that's highly available and it's

5526
05:14:59,920 --> 05:15:01,520
been running like that

5527
05:15:01,520 --> 05:15:06,240
with these 16 members with 23 nodes on a

5528
05:15:06,240 --> 05:15:08,878
threshold of 12. so it means half of the

5529
05:15:08,878 --> 05:15:10,878
nodes can get offline and you would

5530
05:15:10,878 --> 05:15:12,080
still get

5531
05:15:12,080 --> 05:15:14,480
proper randomness produced

5532
05:15:14,480 --> 05:15:17,040
and it's been running like that oh sorry

5533
05:15:17,040 --> 05:15:18,480
uh since

5534
05:15:18,480 --> 05:15:20,080
2019

5535
05:15:20,080 --> 05:15:22,480
which is pretty cool because it means we

5536
05:15:22,480 --> 05:15:23,840
we did it right

5537
05:15:23,840 --> 05:15:24,798
and

5538
05:15:24,798 --> 05:15:27,280
another thing is also cloudflare as a

5539
05:15:27,280 --> 05:15:29,760
set of lava lamps in their offices they

5540
05:15:29,760 --> 05:15:32,240
could use as a true random generator to

5541
05:15:32,240 --> 05:15:34,878
bring fresh entropy into the network so

5542
05:15:34,878 --> 05:15:37,440
we get all the benefits from on one side

5543
05:15:37,440 --> 05:15:39,440
we get a set of nodes

5544
05:15:39,440 --> 05:15:41,360
where we don't need to trust a single

5545
05:15:41,360 --> 05:15:43,760
node on the other side we get some nodes

5546
05:15:43,760 --> 05:15:45,680
which are providing fresh

5547
05:15:45,680 --> 05:15:48,638
uh true random values like

5548
05:15:48,638 --> 05:15:50,798
the university of chile this is also

5549
05:15:50,798 --> 05:15:53,920
part of the network and they use the

5550
05:15:53,920 --> 05:15:56,718
data from like seismic events in chile

5551
05:15:56,718 --> 05:15:59,600
to produce the randomness and so on so

5552
05:15:59,600 --> 05:16:01,040
that's

5553
05:16:01,040 --> 05:16:02,560
that's pretty nice

5554
05:16:02,560 --> 05:16:03,360
and

5555
05:16:03,360 --> 05:16:05,360
the nice thing also with diron is that

5556
05:16:05,360 --> 05:16:07,520
it's supporting a so-called

5557
05:16:07,520 --> 05:16:09,760
multi-protocol support since very

5558
05:16:09,760 --> 05:16:11,520
recently we launched it last week

5559
05:16:11,520 --> 05:16:12,560
actually

5560
05:16:12,560 --> 05:16:15,120
and that means we can expand the network

5561
05:16:15,120 --> 05:16:16,798
to do more things that we couldn't be

5562
05:16:16,798 --> 05:16:18,638
for like we could have post quantum

5563
05:16:18,638 --> 05:16:20,878
algorithms running we could have a

5564
05:16:20,878 --> 05:16:23,120
faster network because the current tick

5565
05:16:23,120 --> 05:16:25,600
is like every 30 seconds so we could say

5566
05:16:25,600 --> 05:16:26,480
oh

5567
05:16:26,480 --> 05:16:28,638
is ongoing

5568
05:16:28,638 --> 05:16:29,600
and

5569
05:16:29,600 --> 05:16:32,080
the other nice thing about duran is also

5570
05:16:32,080 --> 05:16:35,200
that it used to be chain randomness

5571
05:16:35,200 --> 05:16:36,798
because we were looking at blockchain

5572
05:16:36,798 --> 05:16:38,320
tech and all they did thing and we

5573
05:16:38,320 --> 05:16:40,798
decided it was practical to be able to

5574
05:16:40,798 --> 05:16:43,680
you know chain all the beacons together

5575
05:16:43,680 --> 05:16:47,040
and what we recently changed about diran

5576
05:16:47,040 --> 05:16:49,440
is that instead of producing rounds that

5577
05:16:49,440 --> 05:16:51,760
are linked to the previous round which

5578
05:16:51,760 --> 05:16:53,360
means it's super difficult to verify

5579
05:16:53,360 --> 05:16:55,680
because you need a stateful system and

5580
05:16:55,680 --> 05:16:58,000
look at the previous run and it's a bit

5581
05:16:58,000 --> 05:17:00,080
annoying you know we decided we could

5582
05:17:00,080 --> 05:17:02,878
just get rid of the chains and now we

5583
05:17:02,878 --> 05:17:03,920
have like

5584
05:17:03,920 --> 05:17:06,560
one round which is signed and the next

5585
05:17:06,560 --> 05:17:08,958
round which is signed and they are

5586
05:17:08,958 --> 05:17:10,878
independent so you don't need the state

5587
05:17:10,878 --> 05:17:12,080
anymore

5588
05:17:12,080 --> 05:17:14,240
and uh why am i talking about unchained

5589
05:17:14,240 --> 05:17:15,760
randomness you might be asking is

5590
05:17:15,760 --> 05:17:18,400
because it's pretty interesting because

5591
05:17:18,400 --> 05:17:21,440
it enables us to do super cool things

5592
05:17:21,440 --> 05:17:23,120
such as

5593
05:17:23,120 --> 05:17:24,798
time-lapse encryption

5594
05:17:24,798 --> 05:17:28,320
and that's something that's upcoming um

5595
05:17:28,320 --> 05:17:31,040
we're currently developing it but

5596
05:17:31,040 --> 05:17:32,798
it basically says you can encrypt

5597
05:17:32,798 --> 05:17:35,440
something toward the future

5598
05:17:35,440 --> 05:17:37,760
so let's say i want to encrypt something

5599
05:17:37,760 --> 05:17:40,320
which cannot be decrypted until

5600
05:17:40,320 --> 05:17:41,520
i say

5601
05:17:41,520 --> 05:17:43,920
august i could use

5602
05:17:43,920 --> 05:17:46,560
the trust assumption that we have in the

5603
05:17:46,560 --> 05:17:49,280
league of entropy to produce proper

5604
05:17:49,280 --> 05:17:52,080
randomness on time

5605
05:17:52,080 --> 05:17:55,840
every 30 seconds until august

5606
05:17:55,840 --> 05:17:57,600
and thanks to

5607
05:17:57,600 --> 05:17:58,320
the

5608
05:17:58,320 --> 05:18:00,560
pairings and all the

5609
05:18:00,560 --> 05:18:03,120
fun crypto we use behind the scene we

5610
05:18:03,120 --> 05:18:05,200
can encrypt data

5611
05:18:05,200 --> 05:18:07,360
that you can decrypt once the network

5612
05:18:07,360 --> 05:18:09,840
will produce a signature so we are kind

5613
05:18:09,840 --> 05:18:12,000
of using a signature as a secret key

5614
05:18:12,000 --> 05:18:14,560
yeah you heard me but it actually works

5615
05:18:14,560 --> 05:18:17,520
and nobody can decrypt the data until

5616
05:18:17,520 --> 05:18:20,400
the given time has arrived as long as

5617
05:18:20,400 --> 05:18:22,480
the network still runs

5618
05:18:22,480 --> 05:18:23,920
obviously

5619
05:18:23,920 --> 05:18:25,360
and

5620
05:18:25,360 --> 05:18:26,798
this is pretty cool because it's

5621
05:18:26,798 --> 05:18:29,280
something which was first

5622
05:18:29,280 --> 05:18:32,160
it was an id in the cypherpunk mailing

5623
05:18:32,160 --> 05:18:34,240
list that was submitted by time which is

5624
05:18:34,240 --> 05:18:36,080
like the founder of the

5625
05:18:36,080 --> 05:18:38,480
cyberpunk movement and like crypto

5626
05:18:38,480 --> 05:18:41,040
anarchists and

5627
05:18:41,040 --> 05:18:43,920
that has been unsolved for

5628
05:18:43,920 --> 05:18:47,440
30 years and now we're bringing it

5629
05:18:47,440 --> 05:18:48,320
live

5630
05:18:48,320 --> 05:18:49,280
soon

5631
05:18:49,280 --> 05:18:50,080
and

5632
05:18:50,080 --> 05:18:53,040
yeah i'm looking forward to it

5633
05:18:53,040 --> 05:18:53,760
so

5634
05:18:53,760 --> 05:18:56,958
obviously it's cool to have a public

5635
05:18:56,958 --> 05:18:58,480
randomness

5636
05:18:58,480 --> 05:19:00,958
service but we need people to use it

5637
05:19:00,958 --> 05:19:03,840
so i'm here to tell you it exists

5638
05:19:03,840 --> 05:19:06,400
we did it we solved the issue of public

5639
05:19:06,400 --> 05:19:09,200
verifiable distributed randomness it's

5640
05:19:09,200 --> 05:19:11,280
highly available it's been running for

5641
05:19:11,280 --> 05:19:14,958
three years without a single disruption

5642
05:19:14,958 --> 05:19:17,360
so yeah if you have any kind of cool

5643
05:19:17,360 --> 05:19:18,958
project where you need to do i don't

5644
05:19:18,958 --> 05:19:21,200
know a lottery or you need public

5645
05:19:21,200 --> 05:19:24,240
randomness please use it and

5646
05:19:24,240 --> 05:19:26,160
i'm here to also answer your questions

5647
05:19:26,160 --> 05:19:27,840
and help you with that if you if you

5648
05:19:27,840 --> 05:19:29,040
need

5649
05:19:29,040 --> 05:19:31,040
and finally i know i'm talking to a lot

5650
05:19:31,040 --> 05:19:33,440
of security professionals

5651
05:19:33,440 --> 05:19:36,000
so you could go ahead and say oh we want

5652
05:19:36,000 --> 05:19:38,958
to build our own public

5653
05:19:38,958 --> 05:19:41,440
network which is running

5654
05:19:41,440 --> 05:19:44,400
next to euros that's cool do it please

5655
05:19:44,400 --> 05:19:46,798
by any mean but you could also say hey i

5656
05:19:46,798 --> 05:19:48,480
want to join the cool

5657
05:19:48,480 --> 05:19:50,798
league of entropy thing because i got a

5658
05:19:50,798 --> 05:19:53,280
server sitting in my house and i'm not

5659
05:19:53,280 --> 05:19:54,878
using it so

5660
05:19:54,878 --> 05:19:57,040
please do as well we were looking for

5661
05:19:57,040 --> 05:19:58,798
new members

5662
05:19:58,798 --> 05:20:00,560
it's not taking too much time to set up

5663
05:20:00,560 --> 05:20:02,958
and then it it runs

5664
05:20:02,958 --> 05:20:05,120
so yeah

5665
05:20:05,120 --> 05:20:08,320
and with that

5666
05:20:08,320 --> 05:20:11,120
i'm done so thank you very much for

5667
05:20:11,120 --> 05:20:12,560
listening about

5668
05:20:12,560 --> 05:20:15,520
randomness and public randomness

5669
05:20:15,520 --> 05:20:20,440
you can send the questions on sleedo

5670
05:20:25,680 --> 05:20:27,840
all right superb thanks everyone um so

5671
05:20:27,840 --> 05:20:30,400
you can send some questions on slido uh

5672
05:20:30,400 --> 05:20:32,958
you might have been given the url before

5673
05:20:32,958 --> 05:20:34,638
i don't have it handy

5674
05:20:34,638 --> 05:20:35,760
unfortunately i think it's on the

5675
05:20:35,760 --> 05:20:38,638
website uh send some questions uh thanks

5676
05:20:38,638 --> 05:20:40,480
a lot you know i guess this is maybe

5677
05:20:40,480 --> 05:20:41,920
something we should be uh looking into

5678
05:20:41,920 --> 05:20:44,160
at nordsec seeding the randomness with

5679
05:20:44,160 --> 05:20:46,638
uh incorrect flags being submitted over

5680
05:20:46,638 --> 05:20:47,760
time or

5681
05:20:47,760 --> 05:20:49,360
types of drinks at the bar that are

5682
05:20:49,360 --> 05:20:50,480
being chosen

5683
05:20:50,480 --> 05:20:52,400
so we'll take a short break probably

5684
05:20:52,400 --> 05:20:54,558
five minutes i guess and then we'll be

5685
05:20:54,558 --> 05:20:56,638
back for the the next talk thanks

5686
05:20:56,638 --> 05:20:59,638
everyone

5687
05:21:00,130 --> 05:21:03,169
[Music]

5688
05:21:11,210 --> 05:21:20,319
[Music]

5689
05:21:26,240 --> 05:21:29,240
so

5690
05:21:37,800 --> 05:21:53,719
[Music]

5691
05:21:58,130 --> 05:22:02,130
[Music]

5692
05:22:04,190 --> 05:22:18,069
[Music]

5693
05:22:20,660 --> 05:22:23,779
[Music]

5694
05:22:28,580 --> 05:22:31,709
[Music]

5695
05:22:41,420 --> 05:22:56,869
[Music]

5696
05:23:00,560 --> 05:23:03,659
[Music]

5697
05:23:05,670 --> 05:23:13,349
[Music]

5698
05:23:21,420 --> 05:23:24,589
[Music]

5699
05:23:27,350 --> 05:23:30,500
[Music]

5700
05:23:47,970 --> 05:23:55,669
[Music]

5701
05:23:59,180 --> 05:24:11,470
[Music]

5702
05:24:14,320 --> 05:24:28,229
[Music]

5703
05:24:35,920 --> 05:24:41,889
[Music]

5704
05:24:44,400 --> 05:24:47,400
do

5705
05:24:51,590 --> 05:25:07,040
[Music]

5706
05:25:10,080 --> 05:25:11,840
[Music]

5707
05:25:11,840 --> 05:25:14,840
so

5708
05:25:15,890 --> 05:25:21,918
[Music]

5709
05:25:31,460 --> 05:25:38,689
[Music]

5710
05:25:52,210 --> 05:25:55,300
[Music]

5711
05:25:58,160 --> 05:26:03,680
[Music]

5712
05:26:03,680 --> 05:26:06,080
okay

5713
05:26:07,280 --> 05:26:08,558
all right so

5714
05:26:08,558 --> 05:26:10,558
um my next speaker here

5715
05:26:10,558 --> 05:26:12,638
is christian pacquiao

5716
05:26:12,638 --> 05:26:14,080
he's a principal program manager at

5717
05:26:14,080 --> 05:26:15,680
microsoft research

5718
05:26:15,680 --> 05:26:17,600
uh in the security and crypto team

5719
05:26:17,600 --> 05:26:19,440
cryptography team

5720
05:26:19,440 --> 05:26:21,040
uh for the last 20 years he's been

5721
05:26:21,040 --> 05:26:23,200
living at the edge of academic research

5722
05:26:23,200 --> 05:26:25,360
uh industry and a you know focus on

5723
05:26:25,360 --> 05:26:27,360
privacy preserving sorry identity

5724
05:26:27,360 --> 05:26:28,638
technologies

5725
05:26:28,638 --> 05:26:30,480
notably you prove

5726
05:26:30,480 --> 05:26:32,320
but he recently joined the covid

5727
05:26:32,320 --> 05:26:34,480
response effort and helped with the

5728
05:26:34,480 --> 05:26:36,400
design of the smart health card

5729
05:26:36,400 --> 05:26:38,480
framework um contributed to the

5730
05:26:38,480 --> 05:26:40,798
specifications and co-implementation

5731
05:26:40,798 --> 05:26:44,160
of the dev tools uh to validate shc uh

5732
05:26:44,160 --> 05:26:46,000
implementation so you know the baxi code

5733
05:26:46,000 --> 05:26:48,080
app that some of you might have used uh

5734
05:26:48,080 --> 05:26:49,520
makes use of this

5735
05:26:49,520 --> 05:26:51,680
uh he also very passionate in post

5736
05:26:51,680 --> 05:26:54,080
quantum crypto and zero knowledge proof

5737
05:26:54,080 --> 05:26:56,798
uh based in dc but of course uh repeat

5738
05:26:56,798 --> 05:26:58,798
speaker for narc likes to come back to

5739
05:26:58,798 --> 05:26:59,840
his uh

5740
05:26:59,840 --> 05:27:02,638
native montreal so please join me in

5741
05:27:02,638 --> 05:27:04,718
welcoming christian to the stage thank

5742
05:27:04,718 --> 05:27:07,718
you

5743
05:27:11,600 --> 05:27:14,320
thank you everyone and um i'm happy to

5744
05:27:14,320 --> 05:27:16,240
be back at nordsec

5745
05:27:16,240 --> 05:27:18,798
especially on a beautiful day like today

5746
05:27:18,798 --> 05:27:21,440
was awesome to go have lunch outside in

5747
05:27:21,440 --> 05:27:24,638
in super sunny old port montreal

5748
05:27:24,638 --> 05:27:27,120
it's the best time of the year to visit

5749
05:27:27,120 --> 05:27:29,760
as i tell all my my american colleagues

5750
05:27:29,760 --> 05:27:30,718
now

5751
05:27:30,718 --> 05:27:32,320
um so uh

5752
05:27:32,320 --> 05:27:34,240
yeah

5753
05:27:34,240 --> 05:27:36,878
i'm from around here i've been studied

5754
05:27:36,878 --> 05:27:38,480
a long time ago

5755
05:27:38,480 --> 05:27:40,240
quantum cryptography at the university

5756
05:27:40,240 --> 05:27:42,638
of montreal right here

5757
05:27:42,638 --> 05:27:44,798
and after that i joined the industry i

5758
05:27:44,798 --> 05:27:46,480
did

5759
05:27:46,480 --> 05:27:47,680
yeah most of my career doing

5760
05:27:47,680 --> 05:27:51,360
cryptographic development i'm not msr

5761
05:27:51,360 --> 05:27:52,400
working on

5762
05:27:52,400 --> 05:27:54,718
all sorts of cool advanced uh crypto

5763
05:27:54,718 --> 05:27:56,480
technologies trying to bring them to

5764
05:27:56,480 --> 05:27:58,240
market and see what what

5765
05:27:58,240 --> 05:27:59,920
what can be

5766
05:27:59,920 --> 05:28:01,920
the future of security

5767
05:28:01,920 --> 05:28:04,558
uh a lot of it deals with uh

5768
05:28:04,558 --> 05:28:06,878
privacy enhancing identity technology

5769
05:28:06,878 --> 05:28:08,480
zero knowledge proofs

5770
05:28:08,480 --> 05:28:11,440
uh a lot of the focus last year uh the

5771
05:28:11,440 --> 05:28:13,200
last few years has been in post quantum

5772
05:28:13,200 --> 05:28:14,638
cryptography

5773
05:28:14,638 --> 05:28:17,520
we're avidly waiting for the nist

5774
05:28:17,520 --> 05:28:19,798
decision for what's going to be the next

5775
05:28:19,798 --> 05:28:21,920
postcontaminant if nist makes the

5776
05:28:21,920 --> 05:28:23,200
announcement

5777
05:28:23,200 --> 05:28:25,520
during my talk please just interrupt me

5778
05:28:25,520 --> 05:28:28,000
and let me know we've been waiting on

5779
05:28:28,000 --> 05:28:29,360
that news

5780
05:28:29,360 --> 05:28:31,120
but like most of the world in the last

5781
05:28:31,120 --> 05:28:33,040
uh two years there's been some

5782
05:28:33,040 --> 05:28:35,520
interruptions because of covid and

5783
05:28:35,520 --> 05:28:37,040
joined an effort

5784
05:28:37,040 --> 05:28:38,958
to help with the smart health card

5785
05:28:38,958 --> 05:28:42,080
framework which i'm here to talk about

5786
05:28:42,080 --> 05:28:44,000
so first what's what's that what's a

5787
05:28:44,000 --> 05:28:45,680
smart hell card

5788
05:28:45,680 --> 05:28:48,798
so i hope the organizers did not invite

5789
05:28:48,798 --> 05:28:50,080
me because i thought it was smart cars

5790
05:28:50,080 --> 05:28:52,080
especially we heard that

5791
05:28:52,080 --> 05:28:54,718
our host here uh is interesting to smart

5792
05:28:54,718 --> 05:28:57,360
smart cards uh well yeah it has nothing

5793
05:28:57,360 --> 05:29:00,000
to do with that that's a a an acronym or

5794
05:29:00,000 --> 05:29:01,840
a backroom

5795
05:29:01,840 --> 05:29:03,520
from the medical community it stands for

5796
05:29:03,520 --> 05:29:04,480
i have to read it because i don't know

5797
05:29:04,480 --> 05:29:06,878
it by art this is substitutable medical

5798
05:29:06,878 --> 05:29:08,558
application reusable technology it's a

5799
05:29:08,558 --> 05:29:11,760
set of apis in the healthcare industry

5800
05:29:11,760 --> 05:29:12,958
to

5801
05:29:12,958 --> 05:29:16,558
to to avoid vendors lock-in and whatnot

5802
05:29:16,558 --> 05:29:19,440
so it's for hellcards

5803
05:29:19,440 --> 05:29:22,080
to build to be able to present

5804
05:29:22,080 --> 05:29:24,798
a medical information in in a convenient

5805
05:29:24,798 --> 05:29:26,000
way

5806
05:29:26,000 --> 05:29:28,558
so what it means for uh

5807
05:29:28,558 --> 05:29:31,360
the kovitz so in in the u.s

5808
05:29:31,360 --> 05:29:32,240
uh

5809
05:29:32,240 --> 05:29:34,400
nationwide people had these little paper

5810
05:29:34,400 --> 05:29:35,520
cards

5811
05:29:35,520 --> 05:29:37,040
here in canada the provinces at

5812
05:29:37,040 --> 05:29:40,160
beginning before the qr codes came in

5813
05:29:40,160 --> 05:29:41,760
everybody had a different solution

5814
05:29:41,760 --> 05:29:44,080
either a little sticker with information

5815
05:29:44,080 --> 05:29:46,320
either a pdf you would download which

5816
05:29:46,320 --> 05:29:47,760
would contain

5817
05:29:47,760 --> 05:29:49,840
your name date of birth your vaccination

5818
05:29:49,840 --> 05:29:51,840
history and that's what you could use to

5819
05:29:51,840 --> 05:29:54,718
prove to various people

5820
05:29:54,718 --> 05:29:56,798
that you've been vaccinated

5821
05:29:56,798 --> 05:29:59,840
so of course that's very um

5822
05:29:59,840 --> 05:30:03,440
susceptible to to fraud and and forgery

5823
05:30:03,440 --> 05:30:05,680
modifications so the question becomes

5824
05:30:05,680 --> 05:30:09,120
how do you create a a digital version

5825
05:30:09,120 --> 05:30:10,878
that can prove authenticity and cannot

5826
05:30:10,878 --> 05:30:12,958
be modified

5827
05:30:12,958 --> 05:30:16,958
and so that's what a smart hellcat is

5828
05:30:17,120 --> 05:30:20,080
so the qr code first it's not a a url

5829
05:30:20,080 --> 05:30:22,000
like it typically is when you scan these

5830
05:30:22,000 --> 05:30:23,200
with your phone it brings you to a

5831
05:30:23,200 --> 05:30:26,240
website these qr codes actually contain

5832
05:30:26,240 --> 05:30:28,080
all the information and that's all you

5833
05:30:28,080 --> 05:30:29,680
need you don't need to a call back

5834
05:30:29,680 --> 05:30:32,480
somewhere to verify the information

5835
05:30:32,480 --> 05:30:34,798
of course most of you here in quebec

5836
05:30:34,798 --> 05:30:35,760
you

5837
05:30:35,760 --> 05:30:37,360
you might have not known that you've

5838
05:30:37,360 --> 05:30:39,600
been using the standard here it's been

5839
05:30:39,600 --> 05:30:43,200
branded as vaxicode by the government

5840
05:30:43,200 --> 05:30:45,040
so but your vaccine code is actually a

5841
05:30:45,040 --> 05:30:46,480
smart health card so

5842
05:30:46,480 --> 05:30:47,840
if you want to learn more about what's

5843
05:30:47,840 --> 05:30:49,840
contained there then i guess that's a

5844
05:30:49,840 --> 05:30:52,240
good talk for you

5845
05:30:52,240 --> 05:30:54,480
before i delve into the details of of

5846
05:30:54,480 --> 05:30:56,240
the framework how it came to be in some

5847
05:30:56,240 --> 05:30:58,240
of the security properties i'm just

5848
05:30:58,240 --> 05:30:59,760
going to give

5849
05:30:59,760 --> 05:31:01,840
a description of how this qr code is

5850
05:31:01,840 --> 05:31:03,440
created

5851
05:31:03,440 --> 05:31:04,480
to just

5852
05:31:04,480 --> 05:31:06,480
have a clear representation in your in

5853
05:31:06,480 --> 05:31:09,040
your mind of what's going on so the the

5854
05:31:09,040 --> 05:31:12,000
paper information name date of birth

5855
05:31:12,000 --> 05:31:13,840
vaccination history it's transformed

5856
05:31:13,840 --> 05:31:16,320
into what's called a fire bundle fire is

5857
05:31:16,320 --> 05:31:18,558
another health care

5858
05:31:18,558 --> 05:31:20,080
standard it's called i have to read it

5859
05:31:20,080 --> 05:31:21,840
again fast health interoperability

5860
05:31:21,840 --> 05:31:23,520
resources

5861
05:31:23,520 --> 05:31:26,160
so that's how the the medical ehr

5862
05:31:26,160 --> 05:31:28,080
vendors electronic health record vendors

5863
05:31:28,080 --> 05:31:30,080
they they talk

5864
05:31:30,080 --> 05:31:32,240
through fire protocols so it's just a

5865
05:31:32,240 --> 05:31:34,400
json structure with

5866
05:31:34,400 --> 05:31:36,320
if you can zoom in you see the the

5867
05:31:36,320 --> 05:31:38,480
highlighted data is what's on on the

5868
05:31:38,480 --> 05:31:39,920
paper

5869
05:31:39,920 --> 05:31:43,120
that gets then uh encoded into a json

5870
05:31:43,120 --> 05:31:44,480
web token

5871
05:31:44,480 --> 05:31:47,120
payload that has some metadata about who

5872
05:31:47,120 --> 05:31:48,240
created

5873
05:31:48,240 --> 05:31:49,440
um

5874
05:31:49,440 --> 05:31:51,280
the smart hell cards

5875
05:31:51,280 --> 05:31:54,400
some other metadata the fire bundles in

5876
05:31:54,400 --> 05:31:55,280
there

5877
05:31:55,280 --> 05:31:57,040
and then this is

5878
05:31:57,040 --> 05:32:00,558
uh signed into a json web signature

5879
05:32:00,558 --> 05:32:02,558
but because the target is a small qr

5880
05:32:02,558 --> 05:32:04,558
code with very limited

5881
05:32:04,558 --> 05:32:06,638
payload size we have to make an effort

5882
05:32:06,638 --> 05:32:08,798
to make it small so it's minimized

5883
05:32:08,798 --> 05:32:09,920
compressed

5884
05:32:09,920 --> 05:32:14,000
and then it's base64 url

5885
05:32:14,000 --> 05:32:16,320
then it is signed using the json web

5886
05:32:16,320 --> 05:32:19,120
signature format a standard

5887
05:32:19,120 --> 05:32:21,200
some header that's added the signature

5888
05:32:21,200 --> 05:32:22,638
is added there

5889
05:32:22,638 --> 05:32:24,958
and

5890
05:32:25,120 --> 05:32:27,840
then anyone who has this data is able to

5891
05:32:27,840 --> 05:32:29,920
verify because they can look up the

5892
05:32:29,920 --> 05:32:31,840
public key of the the of the issuer

5893
05:32:31,840 --> 05:32:33,440
that's in the header

5894
05:32:33,440 --> 05:32:36,160
and and verify the signature

5895
05:32:36,160 --> 05:32:38,718
this is then transformed uh into a

5896
05:32:38,718 --> 05:32:41,520
numeric qr encoding

5897
05:32:41,520 --> 05:32:43,040
if you know anything about qr code

5898
05:32:43,040 --> 05:32:44,400
that's very standard if you didn't know

5899
05:32:44,400 --> 05:32:45,840
anything about that like i did a year

5900
05:32:45,840 --> 05:32:48,080
ago your plus i go then you go read that

5901
05:32:48,080 --> 05:32:50,320
and it's just a normal way to do that to

5902
05:32:50,320 --> 05:32:53,360
transform any data into a qr code and

5903
05:32:53,360 --> 05:32:57,840
voila you have your final qr image

5904
05:32:57,840 --> 05:32:59,920
of course there's a lot of details uh

5905
05:32:59,920 --> 05:33:01,360
surrounding um

5906
05:33:01,360 --> 05:33:04,320
what's what's happening there

5907
05:33:04,320 --> 05:33:07,600
so that's where uh all this is defined

5908
05:33:07,600 --> 05:33:09,440
and specified in the smart health card

5909
05:33:09,440 --> 05:33:11,760
framework

5910
05:33:11,760 --> 05:33:14,718
so the goal of of this framework

5911
05:33:14,718 --> 05:33:16,638
i've highlighted here is to provide a

5912
05:33:16,638 --> 05:33:18,878
way to to provide authenticated and

5913
05:33:18,878 --> 05:33:21,360
immutable medical facts

5914
05:33:21,360 --> 05:33:24,000
so it's not to act as a

5915
05:33:24,000 --> 05:33:26,320
an identity document it's not meant to

5916
05:33:26,320 --> 05:33:28,240
be a green check mark saying yes i can

5917
05:33:28,240 --> 05:33:30,878
go into this thing it's

5918
05:33:30,878 --> 05:33:33,680
policies around the world policies

5919
05:33:33,680 --> 05:33:36,718
even across time we tweak change so

5920
05:33:36,718 --> 05:33:39,120
the medical community wanted to

5921
05:33:39,120 --> 05:33:41,360
provide a way just here's the medical

5922
05:33:41,360 --> 05:33:42,878
facts these

5923
05:33:42,878 --> 05:33:45,280
facts happen and then some other part of

5924
05:33:45,280 --> 05:33:46,240
the

5925
05:33:46,240 --> 05:33:48,480
of the of the process needs to make

5926
05:33:48,480 --> 05:33:50,798
decisions if that's a

5927
05:33:50,798 --> 05:33:53,680
an okay condition to do activity x or

5928
05:33:53,680 --> 05:33:55,200
whatever

5929
05:33:55,200 --> 05:33:57,040
so as i said it's not an identity

5930
05:33:57,040 --> 05:33:58,558
document

5931
05:33:58,558 --> 05:34:00,080
it only

5932
05:34:00,080 --> 05:34:02,400
has a name date of birth and it needs to

5933
05:34:02,400 --> 05:34:04,320
be matched onto some other form of

5934
05:34:04,320 --> 05:34:06,160
identification to make sure it belongs

5935
05:34:06,160 --> 05:34:08,480
to the right person and all these

5936
05:34:08,480 --> 05:34:10,320
this minimal set of data has been highly

5937
05:34:10,320 --> 05:34:11,520
debated

5938
05:34:11,520 --> 05:34:12,718
in in

5939
05:34:12,718 --> 05:34:15,280
the framework community

5940
05:34:15,280 --> 05:34:17,760
to see is that not enough data too much

5941
05:34:17,760 --> 05:34:20,000
data and the level of risk about the

5942
05:34:20,000 --> 05:34:22,000
usage of these things and

5943
05:34:22,000 --> 05:34:24,000
whatever level of fraud right somebody

5944
05:34:24,000 --> 05:34:25,920
with a matching name and date of birth

5945
05:34:25,920 --> 05:34:28,400
could use your qr code so okay

5946
05:34:28,400 --> 05:34:30,718
acceptable that's fine

5947
05:34:30,718 --> 05:34:33,040
uh all the specifications are open

5948
05:34:33,040 --> 05:34:34,878
um and the work started before the

5949
05:34:34,878 --> 05:34:36,240
pandemic

5950
05:34:36,240 --> 05:34:37,600
in the medical industry but of course it

5951
05:34:37,600 --> 05:34:40,480
got accelerated and and covet became the

5952
05:34:40,480 --> 05:34:41,440
focus

5953
05:34:41,440 --> 05:34:43,280
of the use case

5954
05:34:43,280 --> 05:34:45,440
and the success of this framework

5955
05:34:45,440 --> 05:34:47,120
versus other approaches there have been

5956
05:34:47,120 --> 05:34:50,160
a lot of competing proposals uh in the

5957
05:34:50,160 --> 05:34:53,680
us there have been some other approaches

5958
05:34:53,680 --> 05:34:55,520
uh selected in europe for example they

5959
05:34:55,520 --> 05:34:57,600
have the digital kovit certificate the

5960
05:34:57,600 --> 05:34:59,920
dcc thing which is very similar to the

5961
05:34:59,920 --> 05:35:01,280
smart health card it's just different

5962
05:35:01,280 --> 05:35:02,798
set of decisions

5963
05:35:02,798 --> 05:35:03,600
um

5964
05:35:03,600 --> 05:35:05,120
they came up with a slightly different

5965
05:35:05,120 --> 05:35:06,480
format

5966
05:35:06,480 --> 05:35:08,320
india has their own solution

5967
05:35:08,320 --> 05:35:09,520
and

5968
05:35:09,520 --> 05:35:11,360
other parts of the world as well

5969
05:35:11,360 --> 05:35:13,440
but this one you can find everything you

5970
05:35:13,440 --> 05:35:15,280
want to know about that at the smart elk

5971
05:35:15,280 --> 05:35:17,600
dot cards

5972
05:35:17,600 --> 05:35:19,200
my team actually we developed this this

5973
05:35:19,200 --> 05:35:22,240
portal demo portals that smart health

5974
05:35:22,240 --> 05:35:25,040
not cards it's it allows you if you want

5975
05:35:25,040 --> 05:35:27,520
to go scan your own qr code and see all

5976
05:35:27,520 --> 05:35:29,360
the details of it as i've shown the

5977
05:35:29,360 --> 05:35:32,400
previous slide you you can do that

5978
05:35:32,400 --> 05:35:34,240
and part of the success of the framework

5979
05:35:34,240 --> 05:35:35,840
is its large

5980
05:35:35,840 --> 05:35:37,760
uh implementation base

5981
05:35:37,760 --> 05:35:40,080
so it's been picked up by by apple and

5982
05:35:40,080 --> 05:35:42,320
google so they in your phone it there

5983
05:35:42,320 --> 05:35:44,718
they support it net natively

5984
05:35:44,718 --> 05:35:46,718
there's a lot of um

5985
05:35:46,718 --> 05:35:48,798
specific apps in different jurisdictions

5986
05:35:48,798 --> 05:35:50,558
like vaxicode here

5987
05:35:50,558 --> 05:35:51,520
uh

5988
05:35:51,520 --> 05:35:54,080
new york they call it the excel surpass

5989
05:35:54,080 --> 05:35:55,120
and

5990
05:35:55,120 --> 05:35:58,320
louisiana also had their own wallet

5991
05:35:58,320 --> 05:36:00,718
a lot of states in the u.s chose to just

5992
05:36:00,718 --> 05:36:01,520
use

5993
05:36:01,520 --> 05:36:04,080
the common

5994
05:36:04,080 --> 05:36:06,240
apps without their own

5995
05:36:06,240 --> 05:36:09,120
in in province or in-state app

5996
05:36:09,120 --> 05:36:10,160
um

5997
05:36:10,160 --> 05:36:13,920
okay let's leave it at that for now here

5998
05:36:13,920 --> 05:36:15,520
just to give you an idea of the adoption

5999
05:36:15,520 --> 05:36:17,360
of the smart health card framework you

6000
05:36:17,360 --> 05:36:19,360
can see it's it's mostly in north

6001
05:36:19,360 --> 05:36:22,000
american or canada and u.s

6002
05:36:22,000 --> 05:36:23,760
um

6003
05:36:23,760 --> 05:36:25,280
standard with the deployments but

6004
05:36:25,280 --> 05:36:27,280
there's some other parts of the world

6005
05:36:27,280 --> 05:36:28,160
that have

6006
05:36:28,160 --> 05:36:31,840
adopted it and uh more and more

6007
05:36:35,040 --> 05:36:36,400
okay

6008
05:36:36,400 --> 05:36:38,400
so now what's uh how these things are

6009
05:36:38,400 --> 05:36:41,280
are issued so first um to become a smart

6010
05:36:41,280 --> 05:36:43,360
health card issuer you just set up

6011
05:36:43,360 --> 05:36:44,558
a

6012
05:36:44,558 --> 05:36:46,400
you just create a key pair very

6013
05:36:46,400 --> 05:36:49,120
conventional cryptography

6014
05:36:49,120 --> 05:36:52,718
and uh well in canada it's mostly the

6015
05:36:52,718 --> 05:36:54,400
provinces and and

6016
05:36:54,400 --> 05:36:56,320
health ministries that do that in the us

6017
05:36:56,320 --> 05:36:58,480
it's a bit more complicated

6018
05:36:58,480 --> 05:37:01,360
there's no central

6019
05:37:01,360 --> 05:37:03,120
health authority that oversees

6020
05:37:03,120 --> 05:37:04,240
everything

6021
05:37:04,240 --> 05:37:05,440
and if they do they don't have the

6022
05:37:05,440 --> 05:37:07,760
mandate to to issue

6023
05:37:07,760 --> 05:37:10,557
a certificate

6024
05:37:10,638 --> 05:37:12,718
vaccination certificates to everybody so

6025
05:37:12,718 --> 05:37:14,480
it's mostly industry-based so you will

6026
05:37:14,480 --> 05:37:16,558
have some state registries you're gonna

6027
05:37:16,558 --> 05:37:18,558
have some big pharmacies

6028
05:37:18,558 --> 05:37:20,878
uh like walgreens or cvs you're gonna

6029
05:37:20,878 --> 05:37:21,680
have

6030
05:37:21,680 --> 05:37:23,520
uh your hospitals they're gonna be

6031
05:37:23,520 --> 05:37:25,920
issuers so there's a wide variety of

6032
05:37:25,920 --> 05:37:27,360
parties

6033
05:37:27,360 --> 05:37:29,760
so they can all self-host and and create

6034
05:37:29,760 --> 05:37:31,120
their own key pair

6035
05:37:31,120 --> 05:37:32,080
and

6036
05:37:32,080 --> 05:37:34,638
when a user

6037
05:37:34,638 --> 05:37:36,798
given a a a

6038
05:37:36,798 --> 05:37:38,558
specific

6039
05:37:38,558 --> 05:37:40,798
interaction with with that party uh can

6040
05:37:40,798 --> 05:37:41,920
can prove that while they got their

6041
05:37:41,920 --> 05:37:44,320
vaccination then they they can get this

6042
05:37:44,320 --> 05:37:45,920
qr code

6043
05:37:45,920 --> 05:37:48,638
it can be held in on any

6044
05:37:48,638 --> 05:37:50,798
uh medium so it could be

6045
05:37:50,798 --> 05:37:51,840
in a

6046
05:37:51,840 --> 05:37:53,760
specific app it could be

6047
05:37:53,760 --> 05:37:56,798
on the apple wallet or the google wallet

6048
05:37:56,798 --> 05:37:58,400
it could be printed on paper it makes no

6049
05:37:58,400 --> 05:38:00,320
difference and then later when you go

6050
05:38:00,320 --> 05:38:02,320
and present that to a party that has a

6051
05:38:02,320 --> 05:38:03,920
verifier

6052
05:38:03,920 --> 05:38:06,080
you can

6053
05:38:06,080 --> 05:38:08,000
they can just download the key that's

6054
05:38:08,000 --> 05:38:11,360
identified in a qr code and validate

6055
05:38:11,360 --> 05:38:13,680
the information

6056
05:38:13,680 --> 05:38:15,360
so in fact what that's one value of

6057
05:38:15,360 --> 05:38:17,360
using a framework that's common and

6058
05:38:17,360 --> 05:38:19,760
that's standard is that when i came here

6059
05:38:19,760 --> 05:38:22,160
during the pandemic visiting i had my

6060
05:38:22,160 --> 05:38:24,958
virginia qr code and

6061
05:38:24,958 --> 05:38:26,878
at the beginning the vaccine code would

6062
05:38:26,878 --> 05:38:31,360
not validate it because it did not

6063
05:38:31,520 --> 05:38:34,000
recognize external keys but

6064
05:38:34,000 --> 05:38:35,440
at some point it did so i was super

6065
05:38:35,440 --> 05:38:37,200
happy that i could go to restaurant just

6066
05:38:37,200 --> 05:38:39,520
scan my my u.s qr code and it was

6067
05:38:39,520 --> 05:38:40,798
validated

6068
05:38:40,798 --> 05:38:42,798
by the app just because it was based on

6069
05:38:42,798 --> 05:38:45,600
a standard and not a one-off solution

6070
05:38:45,600 --> 05:38:47,920
and vice versa so uh my family when they

6071
05:38:47,920 --> 05:38:50,480
came to visit in the us also they're

6072
05:38:50,480 --> 05:38:52,160
they're they're

6073
05:38:52,160 --> 05:38:53,520
external because you have two versions

6074
05:38:53,520 --> 05:38:55,440
here the one that's made for travel is

6075
05:38:55,440 --> 05:38:57,280
is a confirmed smart health card so it

6076
05:38:57,280 --> 05:38:59,360
can be validated anywhere in the world

6077
05:38:59,360 --> 05:39:02,958
that supports the standard

6078
05:39:03,440 --> 05:39:04,400
so now

6079
05:39:04,400 --> 05:39:06,160
as i mentioned

6080
05:39:06,160 --> 05:39:08,160
anybody can just start issuing smart

6081
05:39:08,160 --> 05:39:10,240
health smart health cards

6082
05:39:10,240 --> 05:39:11,920
very easy to self set up there's a lot

6083
05:39:11,920 --> 05:39:14,717
of software for it

6084
05:39:15,440 --> 05:39:16,798
of course not everybody should be

6085
05:39:16,798 --> 05:39:19,040
trusted to be a valid smart health card

6086
05:39:19,040 --> 05:39:20,480
issuers

6087
05:39:20,480 --> 05:39:22,400
so the question becomes okay how do you

6088
05:39:22,400 --> 05:39:23,920
create that list

6089
05:39:23,920 --> 05:39:25,840
in in security and cryptography we have

6090
05:39:25,840 --> 05:39:27,120
this notion of

6091
05:39:27,120 --> 05:39:29,680
uh pki right public infrastructures

6092
05:39:29,680 --> 05:39:31,680
that's very convenient

6093
05:39:31,680 --> 05:39:32,798
that's the most

6094
05:39:32,798 --> 05:39:34,798
common mechanism to establish trust is a

6095
05:39:34,798 --> 05:39:38,080
trusted authority and it can delegate

6096
05:39:38,080 --> 05:39:40,558
trust in different environments

6097
05:39:40,558 --> 05:39:42,240
which in canada was very simple because

6098
05:39:42,240 --> 05:39:44,000
everything here the health care is

6099
05:39:44,000 --> 05:39:46,558
provided by by the provinces so here

6100
05:39:46,558 --> 05:39:48,798
each province became the authority about

6101
05:39:48,798 --> 05:39:51,200
issuing these these credentials

6102
05:39:51,200 --> 05:39:54,160
in uh in in the u.s it was a mismatch of

6103
05:39:54,160 --> 05:39:56,160
different things as i said before so

6104
05:39:56,160 --> 05:39:58,718
there was a need to um

6105
05:39:58,718 --> 05:40:01,280
to create in pki we would call that a

6106
05:40:01,280 --> 05:40:03,840
pkd which is a public key directory

6107
05:40:03,840 --> 05:40:05,040
um

6108
05:40:05,040 --> 05:40:07,440
and this organization's the vci which

6109
05:40:07,440 --> 05:40:09,440
has been kind of renamed with a broader

6110
05:40:09,440 --> 05:40:11,120
um

6111
05:40:11,120 --> 05:40:13,120
operator scope to verifiable clinical

6112
05:40:13,120 --> 05:40:14,878
information

6113
05:40:14,878 --> 05:40:17,040
their goal is not only to oversee the

6114
05:40:17,040 --> 05:40:19,680
smart health card specification but also

6115
05:40:19,680 --> 05:40:22,080
to decide who is a trusted issuer so

6116
05:40:22,080 --> 05:40:23,120
there's a

6117
05:40:23,120 --> 05:40:25,840
set to make sure that there are verified

6118
05:40:25,840 --> 05:40:28,080
healthcare organizations that are

6119
05:40:28,080 --> 05:40:30,798
actually and they have coveted vaccines

6120
05:40:30,798 --> 05:40:32,240
and then once it's been vetted and

6121
05:40:32,240 --> 05:40:34,000
audited and

6122
05:40:34,000 --> 05:40:36,480
verified then they can be part of this

6123
05:40:36,480 --> 05:40:38,718
vci trusted directory

6124
05:40:38,718 --> 05:40:41,040
in fact all the canadian provinces are

6125
05:40:41,040 --> 05:40:43,040
part of that directory

6126
05:40:43,040 --> 05:40:44,638
the directory is public if you go to

6127
05:40:44,638 --> 05:40:47,360
vci.org you can see all the information

6128
05:40:47,360 --> 05:40:50,718
you can verify there in fact

6129
05:40:50,718 --> 05:40:52,878
we were part of our team wrote some

6130
05:40:52,878 --> 05:40:55,280
auditing software for that directory to

6131
05:40:55,280 --> 05:40:56,400
make sure that

6132
05:40:56,400 --> 05:40:58,958
everyone there is online that their key

6133
05:40:58,958 --> 05:41:00,638
sets are crypto

6134
05:41:00,638 --> 05:41:03,120
cryptographically cryptographically uh

6135
05:41:03,120 --> 05:41:05,600
correct and um that all the the

6136
05:41:05,600 --> 05:41:07,600
information is is

6137
05:41:07,600 --> 05:41:09,760
secure using the right tls config and

6138
05:41:09,760 --> 05:41:12,480
all these things

6139
05:41:16,000 --> 05:41:17,360
okay

6140
05:41:17,360 --> 05:41:19,200
so um

6141
05:41:19,200 --> 05:41:21,120
so that's the kind of overview of this

6142
05:41:21,120 --> 05:41:22,638
kind of smart health cards i hope you

6143
05:41:22,638 --> 05:41:24,718
have a clearer idea now what's in these

6144
05:41:24,718 --> 05:41:27,360
qr codes

6145
05:41:27,840 --> 05:41:30,000
i'll now discuss a few just

6146
05:41:30,000 --> 05:41:33,200
a few few more security aspects because

6147
05:41:33,200 --> 05:41:36,400
we're here at nordsec

6148
05:41:36,840 --> 05:41:38,798
um

6149
05:41:38,798 --> 05:41:40,718
one thing that that became uh very

6150
05:41:40,718 --> 05:41:42,080
apparent

6151
05:41:42,080 --> 05:41:44,320
or soon is that we would there was a

6152
05:41:44,320 --> 05:41:46,638
need for a revocation feature for the

6153
05:41:46,638 --> 05:41:48,878
smart health cards

6154
05:41:48,878 --> 05:41:51,440
normal certificates can can be revoked

6155
05:41:51,440 --> 05:41:53,120
um

6156
05:41:53,120 --> 05:41:55,440
and

6157
05:41:55,840 --> 05:41:58,718
in the smart l-cards there's

6158
05:41:58,718 --> 05:41:59,760
at the beginning of the framework

6159
05:41:59,760 --> 05:42:02,638
because of the rapidity at which the the

6160
05:42:02,638 --> 05:42:04,798
standard came to be

6161
05:42:04,798 --> 05:42:07,040
and uh because of the nature of the

6162
05:42:07,040 --> 05:42:08,798
information which is are just clinical

6163
05:42:08,798 --> 05:42:10,558
facts so they should not you know change

6164
05:42:10,558 --> 05:42:11,600
or

6165
05:42:11,600 --> 05:42:14,160
you don't lose access to these facts so

6166
05:42:14,160 --> 05:42:15,680
there's

6167
05:42:15,680 --> 05:42:17,520
i mean the security practitioners among

6168
05:42:17,520 --> 05:42:19,360
this group were not able to to get a

6169
05:42:19,360 --> 05:42:23,440
revocation feature day one in in

6170
05:42:23,440 --> 05:42:25,680
in the specification

6171
05:42:25,680 --> 05:42:28,000
but of course as as it was easy to

6172
05:42:28,000 --> 05:42:30,638
predict there was some reported fraud

6173
05:42:30,638 --> 05:42:33,120
and not really on the on the

6174
05:42:33,120 --> 05:42:35,760
on the cryptography of the system but

6175
05:42:35,760 --> 05:42:37,280
mostly on on the

6176
05:42:37,280 --> 05:42:38,718
human factor

6177
05:42:38,718 --> 05:42:41,040
uh here i've seen some headlines in in

6178
05:42:41,040 --> 05:42:43,600
quebec about either

6179
05:42:43,600 --> 05:42:45,920
nurses or medical practitioners getting

6180
05:42:45,920 --> 05:42:47,200
bribed to

6181
05:42:47,200 --> 05:42:49,760
get invalid entry in their vaccination

6182
05:42:49,760 --> 05:42:52,400
registry or you could have fake paper

6183
05:42:52,400 --> 05:42:55,040
trail and coming from cross jurisdiction

6184
05:42:55,040 --> 05:42:56,480
to say that you had your vaccine then

6185
05:42:56,480 --> 05:42:58,878
you get issued a valid

6186
05:42:58,878 --> 05:43:01,040
credential that can be later proven

6187
05:43:01,040 --> 05:43:04,240
false by by the police

6188
05:43:04,240 --> 05:43:06,480
so we had to develop this revocation

6189
05:43:06,480 --> 05:43:08,000
mechanism

6190
05:43:08,000 --> 05:43:10,320
that was added to the specification

6191
05:43:10,320 --> 05:43:13,280
and it came a bit later than

6192
05:43:13,280 --> 05:43:14,878
after the first wave of qr codes were

6193
05:43:14,878 --> 05:43:16,798
issued so there are two mechanisms to

6194
05:43:16,798 --> 05:43:18,798
revoke these cards one that's

6195
05:43:18,798 --> 05:43:20,638
forward-looking

6196
05:43:20,638 --> 05:43:22,160
where these cards can now have a

6197
05:43:22,160 --> 05:43:25,120
revocation id built in that can be

6198
05:43:25,120 --> 05:43:27,200
listed on a

6199
05:43:27,200 --> 05:43:29,040
reduce the acronym crl for card

6200
05:43:29,040 --> 05:43:30,878
revocation list here

6201
05:43:30,878 --> 05:43:34,320
and there's a legacy one that derives a

6202
05:43:34,320 --> 05:43:36,718
dynamic revocation id based on the on

6203
05:43:36,718 --> 05:43:39,360
the content of the the fire payload

6204
05:43:39,360 --> 05:43:41,600
there so i'll just do a hash of a few

6205
05:43:41,600 --> 05:43:43,280
fields there

6206
05:43:43,280 --> 05:43:44,878
and these uh

6207
05:43:44,878 --> 05:43:46,638
can also be time stamped in the

6208
05:43:46,638 --> 05:43:49,760
certificate list the revocation list

6209
05:43:49,760 --> 05:43:52,160
so that if you're you know a naughty

6210
05:43:52,160 --> 05:43:54,878
user who got fake your paper trail

6211
05:43:54,878 --> 05:43:57,440
and then got convinced to go get a a

6212
05:43:57,440 --> 05:43:59,360
vaccine and therefore valid card then if

6213
05:43:59,360 --> 05:44:01,040
you're

6214
05:44:01,040 --> 05:44:03,280
get your revocation id a card with a the

6215
05:44:03,280 --> 05:44:05,520
same revocation id later then you you

6216
05:44:05,520 --> 05:44:08,000
can be revoked up to a certain point and

6217
05:44:08,000 --> 05:44:11,440
then later your card will be valid

6218
05:44:11,440 --> 05:44:14,000
so that's uh

6219
05:44:14,000 --> 05:44:16,480
one thing that that emerged

6220
05:44:16,480 --> 05:44:17,840
after the initial launch of the

6221
05:44:17,840 --> 05:44:19,200
framework

6222
05:44:19,200 --> 05:44:21,200
uh the other work that i've hinted to a

6223
05:44:21,200 --> 05:44:23,680
bit earlier was the vci directory

6224
05:44:23,680 --> 05:44:26,958
auditing and snapshopping

6225
05:44:26,958 --> 05:44:28,878
so

6226
05:44:28,878 --> 05:44:30,638
the the i mean

6227
05:44:30,638 --> 05:44:32,638
the cryptography and all the security of

6228
05:44:32,638 --> 05:44:34,160
the of the card itself is not too

6229
05:44:34,160 --> 05:44:36,160
complicated it's pretty standard

6230
05:44:36,160 --> 05:44:38,080
uh but the uh the devil is in the

6231
05:44:38,080 --> 05:44:41,200
details and a big part of the

6232
05:44:41,200 --> 05:44:42,958
making sure the security hygiene of the

6233
05:44:42,958 --> 05:44:44,718
system is to making sure that these

6234
05:44:44,718 --> 05:44:47,600
issuers are not um

6235
05:44:47,600 --> 05:44:48,638
uh

6236
05:44:48,638 --> 05:44:50,320
they are trusted right so if you start

6237
05:44:50,320 --> 05:44:52,000
seeing weird issuers there there's gonna

6238
05:44:52,000 --> 05:44:54,958
be a lack of trust in the system and

6239
05:44:54,958 --> 05:44:57,200
the vci got a lot of proposals to be

6240
05:44:57,200 --> 05:44:58,718
joined like hey i'm a clinic here and

6241
05:44:58,718 --> 05:44:59,600
i'd like

6242
05:44:59,600 --> 05:45:01,840
to start showing smart health cards

6243
05:45:01,840 --> 05:45:03,120
so there's been a

6244
05:45:03,120 --> 05:45:04,798
big list of of

6245
05:45:04,798 --> 05:45:06,558
of proposed issuers that just been

6246
05:45:06,558 --> 05:45:08,320
rejected because they didn't mean the

6247
05:45:08,320 --> 05:45:10,320
minimal requirement of what's a trusted

6248
05:45:10,320 --> 05:45:11,920
issuer

6249
05:45:11,920 --> 05:45:14,160
so um yeah so our team we've been

6250
05:45:14,160 --> 05:45:15,600
involved in the

6251
05:45:15,600 --> 05:45:18,080
creating of two things uh one is uh the

6252
05:45:18,080 --> 05:45:20,080
audit script that i mentioned that just

6253
05:45:20,080 --> 05:45:21,280
make sure that

6254
05:45:21,280 --> 05:45:22,958
once you pass the test to get into the

6255
05:45:22,958 --> 05:45:24,958
directory then you're still

6256
05:45:24,958 --> 05:45:26,480
okay uh

6257
05:45:26,480 --> 05:45:28,958
day after day and not just your security

6258
05:45:28,958 --> 05:45:31,520
just goes crazy or you go offline or you

6259
05:45:31,520 --> 05:45:33,120
disappear

6260
05:45:33,120 --> 05:45:37,360
then we we keep track of that the other

6261
05:45:37,360 --> 05:45:38,878
thing that we've enabled also is to

6262
05:45:38,878 --> 05:45:41,280
create a snapshot of the directory

6263
05:45:41,280 --> 05:45:43,520
uh including all the keys because the

6264
05:45:43,520 --> 05:45:46,798
flow of if you remember the diagram is

6265
05:45:46,798 --> 05:45:49,040
that when you verify this qr code

6266
05:45:49,040 --> 05:45:50,558
so if you're the quebec app and you

6267
05:45:50,558 --> 05:45:53,760
verify quebec qr codes uh you know every

6268
05:45:53,760 --> 05:45:55,360
five seconds it's fine you have the

6269
05:45:55,360 --> 05:45:56,558
public key

6270
05:45:56,558 --> 05:45:59,280
but if you're at a super bowl

6271
05:45:59,280 --> 05:46:01,040
sports stadium with visitors from all

6272
05:46:01,040 --> 05:46:03,200
around

6273
05:46:03,200 --> 05:46:04,480
the continent

6274
05:46:04,480 --> 05:46:05,920
then you might need to get different

6275
05:46:05,920 --> 05:46:07,760
keys and there's a lot of fetching keys

6276
05:46:07,760 --> 05:46:09,440
all over the place so you're able to

6277
05:46:09,440 --> 05:46:11,440
download this offline version of the

6278
05:46:11,440 --> 05:46:15,040
directory that that the vci provides

6279
05:46:15,040 --> 05:46:18,080
and you're able to uh to validate the qr

6280
05:46:18,080 --> 05:46:21,120
codes in an offline manner

6281
05:46:21,120 --> 05:46:23,600
which yeah for big when there's a lot of

6282
05:46:23,600 --> 05:46:25,680
of users and you don't want to have a

6283
05:46:25,680 --> 05:46:27,120
lot of bandwidth you could be like a

6284
05:46:27,120 --> 05:46:29,280
transit station new york metro station

6285
05:46:29,280 --> 05:46:33,160
for example that would be useful

6286
05:46:33,440 --> 05:46:34,400
okay

6287
05:46:34,400 --> 05:46:36,000
i think that's all i

6288
05:46:36,000 --> 05:46:38,958
want to say about that

6289
05:46:39,520 --> 05:46:41,760
i

6290
05:46:43,680 --> 05:46:45,360
let's see how am i on time okay that's

6291
05:46:45,360 --> 05:46:47,360
good so

6292
05:46:47,360 --> 05:46:48,638
i wanted to present the work that's been

6293
05:46:48,638 --> 05:46:49,920
done on smarthealth cards but i wanted

6294
05:46:49,920 --> 05:46:51,840
to reserve some time to

6295
05:46:51,840 --> 05:46:53,600
talk about the future of digital

6296
05:46:53,600 --> 05:46:55,040
identity

6297
05:46:55,040 --> 05:46:56,480
so i've been in this field for a while

6298
05:46:56,480 --> 05:46:58,480
and we've been pushing this idea of

6299
05:46:58,480 --> 05:47:01,200
user-centric identity documents

6300
05:47:01,200 --> 05:47:03,840
uh for users to be able to prove

6301
05:47:03,840 --> 05:47:08,240
any identity facts about themselves to

6302
05:47:08,240 --> 05:47:09,760
whichever

6303
05:47:09,760 --> 05:47:11,360
stakeholder could be online it could be

6304
05:47:11,360 --> 05:47:12,878
in person

6305
05:47:12,878 --> 05:47:15,040
and i guess not a qr code that people

6306
05:47:15,040 --> 05:47:16,878
had to present forever

6307
05:47:16,878 --> 05:47:17,600
uh

6308
05:47:17,600 --> 05:47:21,280
in the last year then that kind of

6309
05:47:21,280 --> 05:47:24,160
unlocked our the imagination there and

6310
05:47:24,160 --> 05:47:25,680
and helped to explain some of these

6311
05:47:25,680 --> 05:47:28,558
scenarios and make them very concrete

6312
05:47:28,558 --> 05:47:32,638
so as a immediate next step

6313
05:47:33,200 --> 05:47:35,920
we've prototyped a system that's similar

6314
05:47:35,920 --> 05:47:37,520
to the smart health cards but instead of

6315
05:47:37,520 --> 05:47:39,360
having a medical payload it could have

6316
05:47:39,360 --> 05:47:42,958
any claims there so any json web token

6317
05:47:42,958 --> 05:47:45,440
payload or data any attributes

6318
05:47:45,440 --> 05:47:49,440
uh you can encode them in these qr codes

6319
05:47:49,440 --> 05:47:51,840
and you're able to uh present them and

6320
05:47:51,840 --> 05:47:56,160
verify them in in a similar manner

6321
05:47:56,160 --> 05:47:58,558
so um

6322
05:47:58,558 --> 05:48:01,200
okay let's

6323
05:48:01,760 --> 05:48:05,520
but one important aspect of that

6324
05:48:05,520 --> 05:48:08,878
is the ability to add privacy on top of

6325
05:48:08,878 --> 05:48:10,400
of the

6326
05:48:10,400 --> 05:48:12,000
of the framework

6327
05:48:12,000 --> 05:48:13,200
for smart health card that's something

6328
05:48:13,200 --> 05:48:15,040
that's been debated a lot okay do are

6329
05:48:15,040 --> 05:48:16,558
you disclosing too much information

6330
05:48:16,558 --> 05:48:18,638
every time you're presenting it so when

6331
05:48:18,638 --> 05:48:20,400
you go and board

6332
05:48:20,400 --> 05:48:22,320
an airplane you disclose your name date

6333
05:48:22,320 --> 05:48:23,840
of birth and

6334
05:48:23,840 --> 05:48:25,360
along with all this information already

6335
05:48:25,360 --> 05:48:27,440
that they already know about you that

6336
05:48:27,440 --> 05:48:28,878
and way more data that you have to

6337
05:48:28,878 --> 05:48:31,440
present but when you go to see a movie

6338
05:48:31,440 --> 05:48:33,200
you typically wouldn't want to or need

6339
05:48:33,200 --> 05:48:35,360
to present a date of birth and

6340
05:48:35,360 --> 05:48:37,440
a name even so

6341
05:48:37,440 --> 05:48:39,760
um

6342
05:48:39,760 --> 05:48:41,760
for a general uh

6343
05:48:41,760 --> 05:48:43,680
identity document

6344
05:48:43,680 --> 05:48:45,520
then you don't want to force always

6345
05:48:45,520 --> 05:48:48,240
presenting everything about yourself

6346
05:48:48,240 --> 05:48:50,080
and the main identity document that

6347
05:48:50,080 --> 05:48:51,760
people have in north america is a

6348
05:48:51,760 --> 05:48:54,000
driver's license that what you show to

6349
05:48:54,000 --> 05:48:56,558
to present uh some

6350
05:48:56,558 --> 05:48:58,798
identity attributes about yourself

6351
05:48:58,798 --> 05:49:00,718
so

6352
05:49:00,718 --> 05:49:02,718
to this claim qr framework we've added

6353
05:49:02,718 --> 05:49:04,638
the ability to to present a subset of

6354
05:49:04,638 --> 05:49:07,200
these things so it's a simple mechanism

6355
05:49:07,200 --> 05:49:09,200
versus more advanced cryptographic ones

6356
05:49:09,200 --> 05:49:10,798
using zero knowledge proofs that you

6357
05:49:10,798 --> 05:49:12,798
could prove properties of yourself

6358
05:49:12,798 --> 05:49:14,320
like i have a date of birth and i can

6359
05:49:14,320 --> 05:49:16,000
prove that i'm over 21.

6360
05:49:16,000 --> 05:49:18,400
but uh that's a bit more complicated

6361
05:49:18,400 --> 05:49:20,400
what's very easy is just the ability to

6362
05:49:20,400 --> 05:49:21,920
take the equivalent of a black marker

6363
05:49:21,920 --> 05:49:23,440
pen on your driver's license and just

6364
05:49:23,440 --> 05:49:25,440
hide the data you don't want to show and

6365
05:49:25,440 --> 05:49:27,120
present the rest

6366
05:49:27,120 --> 05:49:29,680
so we call that subset claim disclosure

6367
05:49:29,680 --> 05:49:31,520
and the way it's achieved is that

6368
05:49:31,520 --> 05:49:33,680
instead of the

6369
05:49:33,680 --> 05:49:36,240
issue or encoding these claim data these

6370
05:49:36,240 --> 05:49:39,040
attributes directly they're asked and

6371
05:49:39,040 --> 05:49:41,920
salted so that uh for brute force

6372
05:49:41,920 --> 05:49:43,280
resistance

6373
05:49:43,280 --> 05:49:44,160
and

6374
05:49:44,160 --> 05:49:47,040
that's what gets encoded in in

6375
05:49:47,040 --> 05:49:49,920
the qr code and to disclose this value

6376
05:49:49,920 --> 05:49:52,718
you have to show to the verifier

6377
05:49:52,718 --> 05:49:55,120
these digest along with the data that

6378
05:49:55,120 --> 05:49:56,718
was used to generate these digests so

6379
05:49:56,718 --> 05:49:58,798
it's it's as if you're presenting

6380
05:49:58,798 --> 05:49:59,680
this

6381
05:49:59,680 --> 05:50:01,760
um

6382
05:50:01,760 --> 05:50:04,480
uh driver's license with little puzzle

6383
05:50:04,480 --> 05:50:05,840
pieces cut off

6384
05:50:05,840 --> 05:50:07,840
and you can just see you're seeing uh

6385
05:50:07,840 --> 05:50:09,200
you don't know what i have the pieces i

6386
05:50:09,200 --> 05:50:11,120
remove but if i take a piece i can put

6387
05:50:11,120 --> 05:50:12,558
it back and you see that it matches

6388
05:50:12,558 --> 05:50:14,718
perfectly and that's the only value that

6389
05:50:14,718 --> 05:50:17,840
could have been there

6390
05:50:18,480 --> 05:50:21,440
so just as an example

6391
05:50:21,440 --> 05:50:22,718
i have a little

6392
05:50:22,718 --> 05:50:24,400
demo but i think my my slides might be

6393
05:50:24,400 --> 05:50:26,000
more illustrative

6394
05:50:26,000 --> 05:50:28,638
so i'll just start with these

6395
05:50:28,638 --> 05:50:31,040
so imagine i i have this data that i

6396
05:50:31,040 --> 05:50:33,120
want to encode in a qr code so i have a

6397
05:50:33,120 --> 05:50:35,440
json web token there's an issuer the

6398
05:50:35,440 --> 05:50:37,520
example.org issuer

6399
05:50:37,520 --> 05:50:39,200
is expiry date

6400
05:50:39,200 --> 05:50:42,160
and these claims on the right

6401
05:50:42,160 --> 05:50:43,760
are the ones that i want to be able to

6402
05:50:43,760 --> 05:50:46,240
selectively disclose so it's my name

6403
05:50:46,240 --> 05:50:47,920
my real date of birth

6404
05:50:47,920 --> 05:50:49,760
i'm super young

6405
05:50:49,760 --> 05:50:51,200
and

6406
05:50:51,200 --> 05:50:53,760
then these are transformed by the issuer

6407
05:50:53,760 --> 05:50:55,280
and there are

6408
05:50:55,280 --> 05:50:56,638
there's a random salt which is just a

6409
05:50:56,638 --> 05:51:00,480
random value and uh

6410
05:51:00,480 --> 05:51:02,080
along with this

6411
05:51:02,080 --> 05:51:04,160
with the claim attributes and then these

6412
05:51:04,160 --> 05:51:06,638
get ash using the salt and the claim

6413
05:51:06,638 --> 05:51:08,638
value and they get encoded

6414
05:51:08,638 --> 05:51:09,840
in

6415
05:51:09,840 --> 05:51:12,958
the json web signature payload

6416
05:51:12,958 --> 05:51:14,878
then using the mechanism i've explained

6417
05:51:14,878 --> 05:51:17,280
before

6418
05:51:17,440 --> 05:51:19,600
this gets transformed into a json web

6419
05:51:19,600 --> 05:51:22,080
signature they get

6420
05:51:22,080 --> 05:51:25,600
get signed and then turn into a qr code

6421
05:51:25,600 --> 05:51:27,920
now that i have that

6422
05:51:27,920 --> 05:51:30,080
if it's on paper

6423
05:51:30,080 --> 05:51:32,000
oh sorry i forgot to i forget to mention

6424
05:51:32,000 --> 05:51:33,920
the last part on the

6425
05:51:33,920 --> 05:51:35,520
the little green

6426
05:51:35,520 --> 05:51:38,240
part of this gws it's a it's an appendix

6427
05:51:38,240 --> 05:51:40,320
so it's extra data and it's actually the

6428
05:51:40,320 --> 05:51:42,798
claimed data that would allow a verifier

6429
05:51:42,798 --> 05:51:44,240
to uh

6430
05:51:44,240 --> 05:51:46,160
understand these digests there that

6431
05:51:46,160 --> 05:51:48,400
otherwise would be opaque

6432
05:51:48,400 --> 05:51:49,840
now when i'm presenting that if i'm

6433
05:51:49,840 --> 05:51:51,920
presenting that on paper for legacy kind

6434
05:51:51,920 --> 05:51:54,080
of users everything gets disclosed but

6435
05:51:54,080 --> 05:51:56,480
if i have a an app a client app that

6436
05:51:56,480 --> 05:51:58,480
understands this

6437
05:51:58,480 --> 05:52:00,480
the user could decide to remove some

6438
05:52:00,480 --> 05:52:03,520
claims let's say removing these two

6439
05:52:03,520 --> 05:52:05,840
pieces of data from

6440
05:52:05,840 --> 05:52:08,480
from the claimed data object and then

6441
05:52:08,480 --> 05:52:10,558
regenerate the appendix with these two

6442
05:52:10,558 --> 05:52:11,920
pieces removed

6443
05:52:11,920 --> 05:52:14,638
then regenerate the qr code

6444
05:52:14,638 --> 05:52:16,480
and present that instead

6445
05:52:16,480 --> 05:52:18,480
so what will the verifier do it was

6446
05:52:18,480 --> 05:52:20,400
going to verify that

6447
05:52:20,400 --> 05:52:22,400
yeah the qr code is signed the data

6448
05:52:22,400 --> 05:52:25,040
that's on the bottom left side didn't

6449
05:52:25,040 --> 05:52:27,440
change that's the one that's signed

6450
05:52:27,440 --> 05:52:29,120
and i can prove that these two pieces

6451
05:52:29,120 --> 05:52:31,120
out of four that i'm presenting

6452
05:52:31,120 --> 05:52:33,360
correspond to the data that was encoded

6453
05:52:33,360 --> 05:52:36,920
in there by the issuer

6454
05:52:37,840 --> 05:52:40,080
so that's

6455
05:52:40,080 --> 05:52:40,958
the

6456
05:52:40,958 --> 05:52:44,638
mathematics of what i just said

6457
05:52:45,920 --> 05:52:48,480
i will go to my final slide instead of

6458
05:52:48,480 --> 05:52:49,680
presenting the demo which is something

6459
05:52:49,680 --> 05:52:51,200
you can go and run yourself it's an open

6460
05:52:51,200 --> 05:52:52,638
source project so if you want to do is

6461
05:52:52,638 --> 05:52:55,360
just say a web portal

6462
05:52:55,360 --> 05:52:56,718
that's going to

6463
05:52:56,718 --> 05:52:58,080
that

6464
05:52:58,080 --> 05:53:00,400
would allow you to try that

6465
05:53:00,400 --> 05:53:01,920
but i wanted instead to spend a minute

6466
05:53:01,920 --> 05:53:03,600
to discuss

6467
05:53:03,600 --> 05:53:05,120
what i think is the future of digital

6468
05:53:05,120 --> 05:53:09,200
identity for for a user-centric approach

6469
05:53:09,200 --> 05:53:11,040
um so

6470
05:53:11,040 --> 05:53:12,878
some of us cryptographers that are

6471
05:53:12,878 --> 05:53:15,360
dealing with digital identity have been

6472
05:53:15,360 --> 05:53:17,520
proposing some of these ideas for for

6473
05:53:17,520 --> 05:53:18,558
many years

6474
05:53:18,558 --> 05:53:20,958
almost 20 years ago as part of a company

6475
05:53:20,958 --> 05:53:24,160
here in montreal that developed the

6476
05:53:24,160 --> 05:53:27,120
the youproof system that's listed down

6477
05:53:27,120 --> 05:53:30,160
the list here doing all sorts of cool

6478
05:53:30,160 --> 05:53:32,878
zero knowledge proofs on data

6479
05:53:32,878 --> 05:53:34,878
and being to prove properties about

6480
05:53:34,878 --> 05:53:36,638
yourself without disclosing these set

6481
05:53:36,638 --> 05:53:38,000
attributes

6482
05:53:38,000 --> 05:53:41,920
and uh it takes a lot of uh

6483
05:53:41,920 --> 05:53:44,160
add some complexity to to these systems

6484
05:53:44,160 --> 05:53:44,878
so

6485
05:53:44,878 --> 05:53:45,680
uh

6486
05:53:45,680 --> 05:53:48,000
i think this claim qr approach that i've

6487
05:53:48,000 --> 05:53:49,840
just explained with selective disclosure

6488
05:53:49,840 --> 05:53:52,160
is kind of a let's go step by step in

6489
05:53:52,160 --> 05:53:53,520
improving from

6490
05:53:53,520 --> 05:53:55,360
the status quo and what's what's going

6491
05:53:55,360 --> 05:53:57,600
on today so that's why the type of

6492
05:53:57,600 --> 05:53:59,840
projects i just presented stepping off

6493
05:53:59,840 --> 05:54:02,718
from from what people have been used to

6494
05:54:02,718 --> 05:54:04,480
will allow us to get to these advanced

6495
05:54:04,480 --> 05:54:05,760
features

6496
05:54:05,760 --> 05:54:08,400
which um

6497
05:54:08,400 --> 05:54:10,480
so one one interesting thing development

6498
05:54:10,480 --> 05:54:12,798
is that there's a new iso standard that

6499
05:54:12,798 --> 05:54:14,400
that's coming out it's called the mobile

6500
05:54:14,400 --> 05:54:17,360
driver's license the mdl which supports

6501
05:54:17,360 --> 05:54:18,958
a flavor of selective disclosure like

6502
05:54:18,958 --> 05:54:22,798
i've disclosed and it's going to be for

6503
05:54:22,798 --> 05:54:25,120
as the name says for driver's license i

6504
05:54:25,120 --> 05:54:26,240
know it's going to be adopted in some

6505
05:54:26,240 --> 05:54:27,840
parts of the states i'm not sure about

6506
05:54:27,840 --> 05:54:30,798
i'm not sure about canada

6507
05:54:30,798 --> 05:54:31,680
but

6508
05:54:31,680 --> 05:54:32,798
that is a

6509
05:54:32,798 --> 05:54:35,360
that will be a big

6510
05:54:35,360 --> 05:54:37,360
stepping stone and a big milestone for

6511
05:54:37,360 --> 05:54:39,280
for the world of user-centric digital

6512
05:54:39,280 --> 05:54:41,600
identity but there are more

6513
05:54:41,600 --> 05:54:43,440
privacy feature that are will be needed

6514
05:54:43,440 --> 05:54:45,280
also uh

6515
05:54:45,280 --> 05:54:47,840
for long long term benefits one is

6516
05:54:47,840 --> 05:54:49,360
unlinkability

6517
05:54:49,360 --> 05:54:50,160
so

6518
05:54:50,160 --> 05:54:51,520
all these tokens that you receive that

6519
05:54:51,520 --> 05:54:53,920
are signed by an issuer a signature is

6520
05:54:53,920 --> 05:54:55,840
just yeah it ends up being a random

6521
05:54:55,840 --> 05:54:57,920
value unpredictable value but once you

6522
05:54:57,920 --> 05:55:00,320
have it and you're presenting it you're

6523
05:55:00,320 --> 05:55:02,240
you're presenting essentially a

6524
05:55:02,240 --> 05:55:04,160
long-lived cookie to different

6525
05:55:04,160 --> 05:55:06,320
parties so if two parties collude or if

6526
05:55:06,320 --> 05:55:08,320
a party goes back to the issue or is it

6527
05:55:08,320 --> 05:55:11,200
okay i got a ticket for

6528
05:55:11,200 --> 05:55:13,840
the claim said it's an over 21 user i

6529
05:55:13,840 --> 05:55:16,160
don't know which one it is but you sign

6530
05:55:16,160 --> 05:55:18,558
and then the signature is zero six one

6531
05:55:18,558 --> 05:55:20,080
zero three then say oh yeah i gave that

6532
05:55:20,080 --> 05:55:23,040
to christian like two months ago so um

6533
05:55:23,040 --> 05:55:25,600
so this data can be randomized using

6534
05:55:25,600 --> 05:55:28,000
what's called blind signatures or you

6535
05:55:28,000 --> 05:55:30,320
could prove yours

6536
05:55:30,320 --> 05:55:31,600
you could prove you have a signature

6537
05:55:31,600 --> 05:55:32,878
with zero knowledge proofs without

6538
05:55:32,878 --> 05:55:35,120
disclosing its value itself so there are

6539
05:55:35,120 --> 05:55:36,958
some approaches in cryptography that

6540
05:55:36,958 --> 05:55:39,120
will allow us to break this linkage

6541
05:55:39,120 --> 05:55:41,600
between issuance and presentation

6542
05:55:41,600 --> 05:55:43,920
and derived claims which i've briefly

6543
05:55:43,920 --> 05:55:46,718
talked about earlier are a good way also

6544
05:55:46,718 --> 05:55:48,638
to add some features and give power to

6545
05:55:48,638 --> 05:55:50,798
the user

6546
05:55:50,798 --> 05:55:52,400
for example to be able to show that yeah

6547
05:55:52,400 --> 05:55:53,920
my date of birth is such that i'm over

6548
05:55:53,920 --> 05:55:56,160
21 without disclosing it or i would say

6549
05:55:56,160 --> 05:55:58,080
over 18

6550
05:55:58,080 --> 05:56:00,480
or that my name does not

6551
05:56:00,480 --> 05:56:02,240
it's not listed on this denial list or

6552
05:56:02,240 --> 05:56:03,920
this no fly list or whatever without

6553
05:56:03,920 --> 05:56:05,360
actually disclosing my name so there's a

6554
05:56:05,360 --> 05:56:06,958
lot of powerful techniques that have

6555
05:56:06,958 --> 05:56:08,320
been explored

6556
05:56:08,320 --> 05:56:10,320
we've prototyped some of that i'll just

6557
05:56:10,320 --> 05:56:12,240
cite one of the projects i've been

6558
05:56:12,240 --> 05:56:14,400
involved with in the past you prove does

6559
05:56:14,400 --> 05:56:18,958
that and there's some activity in the

6560
05:56:18,958 --> 05:56:21,680
w3c verifiable credential

6561
05:56:21,680 --> 05:56:22,878
um

6562
05:56:22,878 --> 05:56:25,360
standard that's that's upcoming and and

6563
05:56:25,360 --> 05:56:26,638
people are

6564
05:56:26,638 --> 05:56:27,600
um

6565
05:56:27,600 --> 05:56:29,120
also working on these

6566
05:56:29,120 --> 05:56:31,360
these type of features

6567
05:56:31,360 --> 05:56:33,600
and you know love it or hate it the web

6568
05:56:33,600 --> 05:56:34,320
3

6569
05:56:34,320 --> 05:56:35,920
the web 3

6570
05:56:35,920 --> 05:56:38,160
blockchain community have been

6571
05:56:38,160 --> 05:56:39,760
developing some of these these

6572
05:56:39,760 --> 05:56:41,120
techniques which

6573
05:56:41,120 --> 05:56:42,000
uh

6574
05:56:42,000 --> 05:56:43,520
it's going to be for some of their

6575
05:56:43,520 --> 05:56:46,000
blockchain type use cases but also love

6576
05:56:46,000 --> 05:56:47,920
this base cryptography can be reused and

6577
05:56:47,920 --> 05:56:49,760
applied in a wider

6578
05:56:49,760 --> 05:56:51,520
variety of scenarios

6579
05:56:51,520 --> 05:56:53,360
so i'm kind of very excited about this

6580
05:56:53,360 --> 05:56:55,840
work and

6581
05:56:55,840 --> 05:56:56,878
the

6582
05:56:56,878 --> 05:56:58,400
the future for

6583
05:56:58,400 --> 05:57:00,320
user-centric

6584
05:57:00,320 --> 05:57:02,240
digital identity which gives a lot of

6585
05:57:02,240 --> 05:57:04,958
power and privacy to the user

6586
05:57:04,958 --> 05:57:07,680
so on these words i'll conclude and i'm

6587
05:57:07,680 --> 05:57:10,160
looking forward to the questions in the

6588
05:57:10,160 --> 05:57:11,600
next session

6589
05:57:11,600 --> 05:57:14,530
thank you

6590
05:57:14,530 --> 05:57:19,099
[Applause]

6591
05:57:19,600 --> 05:57:21,840
thank you thanks a lot so we'll be back

6592
05:57:21,840 --> 05:57:24,878
at three for the uh the q a uh you still

6593
05:57:24,878 --> 05:57:27,440
have some time to send some questions on

6594
05:57:27,440 --> 05:57:29,040
slido please do

6595
05:57:29,040 --> 05:57:30,400
there's a bunch of them but you only

6596
05:57:30,400 --> 05:57:32,638
have 10 minutes left to send some more

6597
05:57:32,638 --> 05:57:33,440
so

6598
05:57:33,440 --> 05:57:34,958
eagerly awaiting all your questions

6599
05:57:34,958 --> 05:57:38,440
thanks a lot everyone

6600
05:57:42,000 --> 05:57:48,600
[Music]

6601
05:57:51,090 --> 05:58:10,560
[Music]

6602
05:58:13,650 --> 05:58:16,769
[Music]

6603
05:58:21,640 --> 05:58:24,770
[Music]

6604
05:58:28,250 --> 05:58:31,340
[Music]

6605
05:58:39,480 --> 05:58:42,549
[Music]

6606
05:58:53,070 --> 05:59:00,260
[Music]

6607
05:59:03,370 --> 05:59:06,410
[Music]

6608
05:59:14,380 --> 05:59:23,560
[Music]

6609
05:59:30,740 --> 05:59:33,830
[Music]

6610
05:59:41,040 --> 05:59:42,958
[Music]

6611
05:59:42,958 --> 05:59:45,090
do

6612
05:59:45,090 --> 05:59:56,939
[Music]

6613
06:00:01,360 --> 06:00:05,360
[Music]

6614
06:00:07,420 --> 06:00:21,299
[Music]

6615
06:00:23,870 --> 06:00:27,009
[Music]

6616
06:00:31,810 --> 06:00:34,939
[Music]

6617
06:00:44,650 --> 06:01:00,099
[Music]

6618
06:01:08,900 --> 06:01:16,580
[Music]

6619
06:01:24,650 --> 06:01:27,830
[Music]

6620
06:01:30,590 --> 06:01:33,740
[Music]

6621
06:01:45,290 --> 06:01:48,359
[Music]

6622
06:01:51,200 --> 06:01:58,910
[Music]

6623
06:02:02,410 --> 06:02:31,459
[Music]

6624
06:02:39,130 --> 06:02:45,119
[Music]

6625
06:02:54,830 --> 06:03:10,270
[Music]

6626
06:03:13,310 --> 06:03:16,389
[Music]

6627
06:03:19,070 --> 06:03:25,130
[Music]

6628
06:03:34,690 --> 06:03:41,918
[Music]

6629
06:03:55,440 --> 06:04:08,520
[Music]

6630
06:04:09,440 --> 06:04:12,440
do

6631
06:04:12,580 --> 06:04:21,639
[Music]

6632
06:04:22,718 --> 06:04:25,718
do

6633
06:04:25,770 --> 06:04:41,139
[Music]

6634
06:04:44,210 --> 06:04:47,349
[Music]

6635
06:04:52,220 --> 06:04:55,349
[Music]

6636
06:04:58,830 --> 06:05:01,909
[Music]

6637
06:05:10,060 --> 06:05:13,129
[Music]

6638
06:05:23,640 --> 06:05:30,849
[Music]

6639
06:05:33,950 --> 06:05:36,990
[Music]

6640
06:05:45,050 --> 06:05:48,250
[Music]

6641
06:05:51,020 --> 06:05:54,139
[Music]

6642
06:06:11,620 --> 06:06:25,918
[Music]

6643
06:06:37,200 --> 06:06:39,920
all right awesome

6644
06:06:39,920 --> 06:06:42,558
welcome to uh nordsec psychedelic

6645
06:06:42,558 --> 06:06:43,680
edition

6646
06:06:43,680 --> 06:06:45,360
um

6647
06:06:45,360 --> 06:06:46,958
so you're not seeing it but i don't have

6648
06:06:46,958 --> 06:06:49,520
the the q a anymore but it's all right i

6649
06:06:49,520 --> 06:06:50,558
have it here

6650
06:06:50,558 --> 06:06:53,360
so welcome to the uh cryptography block

6651
06:06:53,360 --> 06:06:54,558
q a

6652
06:06:54,558 --> 06:06:57,200
panel discussion um you know we're doing

6653
06:06:57,200 --> 06:06:58,480
this live so

6654
06:06:58,480 --> 06:07:01,040
it'll you know take its own form

6655
06:07:01,040 --> 06:07:03,360
there's been a lot of questions on slido

6656
06:07:03,360 --> 06:07:06,400
so i'm quite happy about that um

6657
06:07:06,400 --> 06:07:09,120
very interesting topics to be discussed

6658
06:07:09,120 --> 06:07:11,200
um i think the first one really

6659
06:07:11,200 --> 06:07:13,200
the first group of questions uh about

6660
06:07:13,200 --> 06:07:15,920
durand uh quite a lot of interest on the

6661
06:07:15,920 --> 06:07:17,120
you know the

6662
06:07:17,120 --> 06:07:19,360
the resilience of the network the the

6663
06:07:19,360 --> 06:07:21,600
threshold you know how many

6664
06:07:21,600 --> 06:07:23,360
new nodes uh

6665
06:07:23,360 --> 06:07:25,920
uh introduction would become a problem

6666
06:07:25,920 --> 06:07:27,360
um you know what kind of protection

6667
06:07:27,360 --> 06:07:29,920
mechanisms exist to avoid these kind of

6668
06:07:29,920 --> 06:07:32,480
takeovers by nefarious actors maybe you

6669
06:07:32,480 --> 06:07:34,320
know someone thinking about

6670
06:07:34,320 --> 06:07:36,878
what we have heard potentially

6671
06:07:36,878 --> 06:07:38,798
could happen with door or other types of

6672
06:07:38,798 --> 06:07:40,400
distributed systems

6673
06:07:40,400 --> 06:07:41,520
i don't know if you want to talk a bit

6674
06:07:41,520 --> 06:07:44,320
about this year long

6675
06:07:47,920 --> 06:07:49,280
yeah so

6676
06:07:49,280 --> 06:07:50,638
that's the thing i

6677
06:07:50,638 --> 06:07:52,240
i haven't really

6678
06:07:52,240 --> 06:07:54,480
discussed in my talk but

6679
06:07:54,480 --> 06:07:56,000
the

6680
06:07:56,000 --> 06:07:58,320
the trust assumption and

6681
06:07:58,320 --> 06:07:59,680
the way the

6682
06:07:59,680 --> 06:08:01,920
the randomness is generated make it so

6683
06:08:01,920 --> 06:08:05,280
that it's enough for just a single node

6684
06:08:05,280 --> 06:08:07,520
to generate proper

6685
06:08:07,520 --> 06:08:09,760
randomness during the setup process for

6686
06:08:09,760 --> 06:08:11,440
the wall

6687
06:08:11,440 --> 06:08:13,840
thing to be properly random so that's a

6688
06:08:13,840 --> 06:08:16,160
very strong assumption it's a very

6689
06:08:16,160 --> 06:08:18,878
strong result because you don't need to

6690
06:08:18,878 --> 06:08:20,240
trust any

6691
06:08:20,240 --> 06:08:22,718
node but one and then you're sure you

6692
06:08:22,718 --> 06:08:24,798
get proper randomness at the end so

6693
06:08:24,798 --> 06:08:26,798
that's super cool

6694
06:08:26,798 --> 06:08:31,200
the current threshold is at like 12 so

6695
06:08:31,200 --> 06:08:33,120
it means half of the network could go

6696
06:08:33,120 --> 06:08:34,480
down and

6697
06:08:34,480 --> 06:08:36,638
that's i've i've discussed but

6698
06:08:36,638 --> 06:08:39,680
the thing is as long as among the 12

6699
06:08:39,680 --> 06:08:40,958
signers

6700
06:08:40,958 --> 06:08:43,680
you have one honest party on the very on

6701
06:08:43,680 --> 06:08:46,878
the signatures check out at the end

6702
06:08:46,878 --> 06:08:50,000
you're good to go so the main issue is

6703
06:08:50,000 --> 06:08:52,400
as soon as you have a threshold of

6704
06:08:52,400 --> 06:08:54,958
malicious no then they can collude you

6705
06:08:54,958 --> 06:08:57,920
know they can work together and produce

6706
06:08:57,920 --> 06:09:01,200
signatures ahead of time they can

6707
06:09:01,200 --> 06:09:03,520
go faster they can break the trust

6708
06:09:03,520 --> 06:09:04,878
assumption you have in the network and

6709
06:09:04,878 --> 06:09:06,878
that's the main issue you have if you

6710
06:09:06,878 --> 06:09:08,878
have a threshold number of nodes that

6711
06:09:08,878 --> 06:09:11,600
are malicious so the the bigger the

6712
06:09:11,600 --> 06:09:14,558
threshold the safer you are against

6713
06:09:14,558 --> 06:09:17,840
collisions but the bigger the threshold

6714
06:09:17,840 --> 06:09:18,878
the

6715
06:09:18,878 --> 06:09:21,600
the less safe you are from a

6716
06:09:21,600 --> 06:09:23,760
liveness point of view because if a few

6717
06:09:23,760 --> 06:09:26,798
nodes go down i don't know like if aws

6718
06:09:26,798 --> 06:09:29,920
goes down and we have like maybe six

6719
06:09:29,920 --> 06:09:32,798
nodes on aws then we need to make sure

6720
06:09:32,798 --> 06:09:34,958
the rest of the network will keep

6721
06:09:34,958 --> 06:09:36,200
working

6722
06:09:36,200 --> 06:09:38,480
properly um

6723
06:09:38,480 --> 06:09:40,718
thanks yeah all right that's uh i think

6724
06:09:40,718 --> 06:09:42,000
it's a

6725
06:09:42,000 --> 06:09:44,480
it's a it's a very good answer um

6726
06:09:44,480 --> 06:09:46,958
there you know of course lots of concern

6727
06:09:46,958 --> 06:09:49,920
on resilience but you know probably also

6728
06:09:49,920 --> 06:09:52,480
uh on capacity you know what's what's

6729
06:09:52,480 --> 06:09:54,480
the speed like how many

6730
06:09:54,480 --> 06:09:56,080
um you know

6731
06:09:56,080 --> 06:09:58,320
random nonsense can you generate per

6732
06:09:58,320 --> 06:10:00,000
second per minute per hour what are we

6733
06:10:00,000 --> 06:10:02,798
looking like is the addition of nodes

6734
06:10:02,798 --> 06:10:04,320
going to influence that

6735
06:10:04,320 --> 06:10:06,320
um you know all these sorts of things

6736
06:10:06,320 --> 06:10:09,440
and if you can cover a bit on that

6737
06:10:09,440 --> 06:10:11,440
yeah so

6738
06:10:11,440 --> 06:10:13,840
the the current way it works is each

6739
06:10:13,840 --> 06:10:17,360
node will generate a signature every

6740
06:10:17,360 --> 06:10:19,280
x seconds so

6741
06:10:19,280 --> 06:10:22,000
the the current networks is generating

6742
06:10:22,000 --> 06:10:23,520
one

6743
06:10:23,520 --> 06:10:28,558
random 256 bit value every 30 seconds

6744
06:10:28,558 --> 06:10:30,240
so that's really the

6745
06:10:30,240 --> 06:10:31,280
current

6746
06:10:31,280 --> 06:10:33,440
bandwidth

6747
06:10:33,440 --> 06:10:35,680
the new network which launched on

6748
06:10:35,680 --> 06:10:38,878
testnet is uh generating one

6749
06:10:38,878 --> 06:10:41,600
value every three seconds so it's way

6750
06:10:41,600 --> 06:10:44,000
faster the lowest we

6751
06:10:44,000 --> 06:10:46,480
tried to go is one second

6752
06:10:46,480 --> 06:10:48,558
you could go lower in theory but then

6753
06:10:48,558 --> 06:10:51,760
you start to have issues with latency

6754
06:10:51,760 --> 06:10:52,558
and

6755
06:10:52,558 --> 06:10:54,080
like

6756
06:10:54,080 --> 06:10:57,040
the current latency and signature

6757
06:10:57,040 --> 06:11:00,320
aggregation is around 800 milliseconds

6758
06:11:00,320 --> 06:11:03,120
so if you want to go below one second

6759
06:11:03,120 --> 06:11:05,280
you would need very good connections

6760
06:11:05,280 --> 06:11:07,600
between the nodes and it becomes then

6761
06:11:07,600 --> 06:11:10,878
very also difficult to consume

6762
06:11:10,878 --> 06:11:12,000
so

6763
06:11:12,000 --> 06:11:13,120
yeah

6764
06:11:13,120 --> 06:11:14,840
all right

6765
06:11:14,840 --> 06:11:17,280
um quite a few um

6766
06:11:17,280 --> 06:11:18,798
quite a few questions uh for you

6767
06:11:18,798 --> 06:11:21,200
christian um

6768
06:11:21,200 --> 06:11:24,558
you know about you know claim qr nshc um

6769
06:11:24,558 --> 06:11:25,840
i think you know

6770
06:11:25,840 --> 06:11:27,520
at the end of the talk i'm talking about

6771
06:11:27,520 --> 06:11:30,878
digital identity um you know some people

6772
06:11:30,878 --> 06:11:32,718
i guess we're kind of asking because

6773
06:11:32,718 --> 06:11:34,480
it's it's in the air so to speak right

6774
06:11:34,480 --> 06:11:35,920
especially here in quebec when you're

6775
06:11:35,920 --> 06:11:38,000
when we're talking about uh

6776
06:11:38,000 --> 06:11:39,600
the the efforts that the government is

6777
06:11:39,600 --> 06:11:42,160
is looking at for for digital identity

6778
06:11:42,160 --> 06:11:44,558
um you know could claim qr help for

6779
06:11:44,558 --> 06:11:46,320
instance in replacing social security

6780
06:11:46,320 --> 06:11:49,040
numbers or other elements of uh of

6781
06:11:49,040 --> 06:11:52,878
identity um that that we use um on a

6782
06:11:52,878 --> 06:11:54,878
daily basis but quite a regular basis

6783
06:11:54,878 --> 06:11:57,040
and we've seen issues with you know

6784
06:11:57,040 --> 06:11:59,840
leagues and whatnot

6785
06:12:00,240 --> 06:12:02,000
well um

6786
06:12:02,000 --> 06:12:04,000
i think these types of uh

6787
06:12:04,000 --> 06:12:06,320
of credentials can help in yeah in

6788
06:12:06,320 --> 06:12:08,000
day-to-day life maybe not so much social

6789
06:12:08,000 --> 06:12:09,360
security numbers because that's

6790
06:12:09,360 --> 06:12:11,200
typically a very infrequent

6791
06:12:11,200 --> 06:12:12,798
way and the way they're leaked it's not

6792
06:12:12,798 --> 06:12:14,638
when they're presented but mostly when

6793
06:12:14,638 --> 06:12:15,600
they're

6794
06:12:15,600 --> 06:12:17,120
you know stored in the database and then

6795
06:12:17,120 --> 06:12:19,120
the database gets exposed

6796
06:12:19,120 --> 06:12:22,079
but um

6797
06:12:22,878 --> 06:12:24,878
it's easy to imagine scenarios for

6798
06:12:24,878 --> 06:12:26,718
things we use already right so the

6799
06:12:26,718 --> 06:12:28,798
driver's license is the one that most

6800
06:12:28,798 --> 06:12:30,080
people

6801
06:12:30,080 --> 06:12:32,400
use to you know get into a bar or

6802
06:12:32,400 --> 06:12:34,958
whatever and

6803
06:12:35,120 --> 06:12:36,558
but once you have these type of things

6804
06:12:36,558 --> 06:12:39,120
in place then you can imagine a lot more

6805
06:12:39,120 --> 06:12:40,878
scenarios especially

6806
06:12:40,878 --> 06:12:42,400
online let's say

6807
06:12:42,400 --> 06:12:46,480
your school could issue you a alumni

6808
06:12:46,480 --> 06:12:48,480
credential you could use to get some

6809
06:12:48,480 --> 06:12:49,520
some

6810
06:12:49,520 --> 06:12:52,080
rebates online or some restaurants or

6811
06:12:52,080 --> 06:12:54,878
whatnot or same thing exploit employers

6812
06:12:54,878 --> 06:12:58,320
so employment verification

6813
06:12:58,320 --> 06:13:01,280
you uh i hate to use this word

6814
06:13:01,280 --> 06:13:03,040
the metaverse identity you know you

6815
06:13:03,040 --> 06:13:04,160
could you could

6816
06:13:04,160 --> 06:13:06,878
give your online

6817
06:13:06,878 --> 06:13:08,638
avatars and then present some some

6818
06:13:08,638 --> 06:13:09,760
actually

6819
06:13:09,760 --> 06:13:11,840
identity attributes and of course they

6820
06:13:11,840 --> 06:13:13,120
wouldn't be in the form of a qr there

6821
06:13:13,120 --> 06:13:16,878
but if if they're just packaged in a

6822
06:13:16,878 --> 06:13:19,280
in a type of credential uh for which the

6823
06:13:19,280 --> 06:13:21,280
user controls the key

6824
06:13:21,280 --> 06:13:25,520
and therefore the ownership and they can

6825
06:13:25,520 --> 06:13:27,520
decide and select how this information

6826
06:13:27,520 --> 06:13:29,120
can be disclosed and by whom so i mean

6827
06:13:29,120 --> 06:13:31,200
user centric in the sense of user

6828
06:13:31,200 --> 06:13:32,958
empowerment so okay that's what the

6829
06:13:32,958 --> 06:13:34,480
verifier want to see

6830
06:13:34,480 --> 06:13:37,600
and um then what's

6831
06:13:37,600 --> 06:13:38,638
uh

6832
06:13:38,638 --> 06:13:39,920
i can make the decision if i want to

6833
06:13:39,920 --> 06:13:41,440
present that information and what's the

6834
06:13:41,440 --> 06:13:43,840
minimal set i can present that's why

6835
06:13:43,840 --> 06:13:45,120
i like to use the word minimal

6836
06:13:45,120 --> 06:13:47,280
disclosure so the minimum that's needed

6837
06:13:47,280 --> 06:13:48,878
for a particular transaction so

6838
06:13:48,878 --> 06:13:50,480
sometimes that's nothing it's anonymous

6839
06:13:50,480 --> 06:13:52,638
sometimes it's your full identity for

6840
06:13:52,638 --> 06:13:54,558
you know crossing a border

6841
06:13:54,558 --> 06:13:57,360
um so the qr form is interesting because

6842
06:13:57,360 --> 06:13:59,680
it bridges the gap between

6843
06:13:59,680 --> 06:14:01,520
these online credentials for which you

6844
06:14:01,520 --> 06:14:03,200
need you know a key store and maybe a

6845
06:14:03,200 --> 06:14:04,400
smartphone

6846
06:14:04,400 --> 06:14:08,320
but there's a wide range of

6847
06:14:08,480 --> 06:14:11,040
scenarios before that that's just qr you

6848
06:14:11,040 --> 06:14:13,600
can carry it on paper literally and

6849
06:14:13,600 --> 06:14:16,000
so there's there's a few opportunities i

6850
06:14:16,000 --> 06:14:18,240
think that hopefully the ecosystem can

6851
06:14:18,240 --> 06:14:20,320
help build

6852
06:14:20,320 --> 06:14:22,878
thanks a lot and um you know are there

6853
06:14:22,878 --> 06:14:26,798
any any attempts to kind of unify um

6854
06:14:26,798 --> 06:14:28,878
these various health cards that exist

6855
06:14:28,878 --> 06:14:30,000
around the world you mentioned that

6856
06:14:30,000 --> 06:14:31,040
there were

6857
06:14:31,040 --> 06:14:32,480
you know multiple

6858
06:14:32,480 --> 06:14:34,958
competing standards i guess um you know

6859
06:14:34,958 --> 06:14:37,200
and we were talking about um digital

6860
06:14:37,200 --> 06:14:39,120
identity might be just broader than

6861
06:14:39,120 --> 06:14:41,280
vaccine scenarios

6862
06:14:41,280 --> 06:14:43,200
are you aware of any such attempts to to

6863
06:14:43,200 --> 06:14:45,760
unify some of these standards

6864
06:14:45,760 --> 06:14:48,320
yeah so there's no effort to unify them

6865
06:14:48,320 --> 06:14:50,000
the same way there's no effort to unify

6866
06:14:50,000 --> 06:14:52,080
the passports you know so

6867
06:14:52,080 --> 06:14:54,480
each country do their own thing and

6868
06:14:54,480 --> 06:14:56,400
that's mainly the result of you know all

6869
06:14:56,400 --> 06:14:57,840
the planet trying to solve the same

6870
06:14:57,840 --> 06:15:01,120
problem at the same time in a very rapid

6871
06:15:01,120 --> 06:15:04,160
time frame so these identity

6872
06:15:04,160 --> 06:15:06,480
specifications they take typically years

6873
06:15:06,480 --> 06:15:08,480
to to develop so it was it's a miracle

6874
06:15:08,480 --> 06:15:10,718
that it happened in search so i think

6875
06:15:10,718 --> 06:15:14,080
the framework is like one year old and

6876
06:15:14,080 --> 06:15:15,680
the reason it succeeded it was because

6877
06:15:15,680 --> 06:15:18,000
it was

6878
06:15:18,000 --> 06:15:21,600
rooted in in the medical world

6879
06:15:21,600 --> 06:15:23,440
where they want to use that for a long

6880
06:15:23,440 --> 06:15:25,120
time for when you know for your kids

6881
06:15:25,120 --> 06:15:26,878
school vaccination history that you have

6882
06:15:26,878 --> 06:15:29,520
to carry over from state to state and

6883
06:15:29,520 --> 06:15:31,920
then be able to present that to schools

6884
06:15:31,920 --> 06:15:33,760
for travel immunizations in the future

6885
06:15:33,760 --> 06:15:35,360
so they say okay let's use this

6886
06:15:35,360 --> 06:15:36,558
situation to build something that's

6887
06:15:36,558 --> 06:15:38,160
going to be lasting and reusable so

6888
06:15:38,160 --> 06:15:40,878
that's why here it was successful and

6889
06:15:40,878 --> 06:15:42,638
other jurisdictions in the world had to

6890
06:15:42,638 --> 06:15:44,400
solve the same problem for their own uh

6891
06:15:44,400 --> 06:15:47,600
case so in europe yeah they decided to

6892
06:15:47,600 --> 06:15:49,520
their green certificate is not just the

6893
06:15:49,520 --> 06:15:51,280
medical fact it's also a decision you

6894
06:15:51,280 --> 06:15:52,878
know so it could be a lab test it could

6895
06:15:52,878 --> 06:15:55,280
be an exemption and it's

6896
06:15:55,280 --> 06:15:57,280
it's you get a green check mark

6897
06:15:57,280 --> 06:15:59,280
out of that so it was a different scope

6898
06:15:59,280 --> 06:16:01,840
different decision here is

6899
06:16:01,840 --> 06:16:03,120
i said we don't want to make these

6900
06:16:03,120 --> 06:16:05,360
decisions here's the facts and whoever

6901
06:16:05,360 --> 06:16:08,000
checks it makes the decision based on

6902
06:16:08,000 --> 06:16:11,040
the current policy yeah

6903
06:16:11,040 --> 06:16:12,000
thanks

6904
06:16:12,000 --> 06:16:12,798
um

6905
06:16:12,798 --> 06:16:14,080
all right i want to i want to go back

6906
06:16:14,080 --> 06:16:15,440
maybe to um

6907
06:16:15,440 --> 06:16:17,200
to talking about you know we're you know

6908
06:16:17,200 --> 06:16:19,280
talking about uh entities and how these

6909
06:16:19,280 --> 06:16:21,680
get set up um you know

6910
06:16:21,680 --> 06:16:25,120
you you've had to set up um well work to

6911
06:16:25,120 --> 06:16:27,680
set up the the league of entropy i like

6912
06:16:27,680 --> 06:16:28,798
like this um

6913
06:16:28,798 --> 06:16:30,558
this this this name

6914
06:16:30,558 --> 06:16:32,958
um but there were a few questions about

6915
06:16:32,958 --> 06:16:34,000
you know how

6916
06:16:34,000 --> 06:16:36,798
um this was set up as an organization

6917
06:16:36,798 --> 06:16:38,878
how one gets to join it

6918
06:16:38,878 --> 06:16:41,520
you know is there any paperwork involved

6919
06:16:41,520 --> 06:16:42,878
is there any

6920
06:16:42,878 --> 06:16:45,600
some you know formalities or is it just

6921
06:16:45,600 --> 06:16:47,440
you know open to anyone

6922
06:16:47,440 --> 06:16:48,798
i guess you know people want to maybe

6923
06:16:48,798 --> 06:16:49,680
see

6924
06:16:49,680 --> 06:16:53,840
what it entails and if they can help

6925
06:16:54,400 --> 06:16:56,638
yeah so

6926
06:16:56,638 --> 06:16:58,160
it's basically a question of how do you

6927
06:16:58,160 --> 06:17:00,320
do your governance on your network right

6928
06:17:00,320 --> 06:17:01,200
so

6929
06:17:01,200 --> 06:17:04,558
currently the league of entropy

6930
06:17:04,558 --> 06:17:07,600
has a notion of each member is voting a

6931
06:17:07,600 --> 06:17:10,718
new members uh to join

6932
06:17:10,718 --> 06:17:12,798
maybe we'll come up with a better way to

6933
06:17:12,798 --> 06:17:15,120
do the government at some point or we

6934
06:17:15,120 --> 06:17:17,920
can delegate voting power whatsoever but

6935
06:17:17,920 --> 06:17:19,840
currently that's how it is because we

6936
06:17:19,840 --> 06:17:22,878
are only as i said 16 members so it's

6937
06:17:22,878 --> 06:17:24,240
still okay

6938
06:17:24,240 --> 06:17:26,320
um

6939
06:17:26,320 --> 06:17:28,638
to join it's uh you just need to show

6940
06:17:28,638 --> 06:17:31,600
interest show that you've got the

6941
06:17:31,600 --> 06:17:34,240
the proper setup and infrastructure and

6942
06:17:34,240 --> 06:17:37,040
then you can onboard on the test net

6943
06:17:37,040 --> 06:17:40,160
if you get accepted and

6944
06:17:40,160 --> 06:17:41,520
once you've

6945
06:17:41,520 --> 06:17:43,600
shown you were able to run a node on

6946
06:17:43,600 --> 06:17:46,400
testnet and it worked you can

6947
06:17:46,400 --> 06:17:50,400
upgrade to main nets so that's how it

6948
06:17:50,400 --> 06:17:51,440
works

6949
06:17:51,440 --> 06:17:53,600
on our side yeah so if you i guess if

6950
06:17:53,600 --> 06:17:55,600
you got a bunch of lava lamps you're

6951
06:17:55,600 --> 06:17:57,120
good to go

6952
06:17:57,120 --> 06:17:59,520
yeah that's how it works or even just a

6953
06:17:59,520 --> 06:18:00,878
fish and

6954
06:18:00,878 --> 06:18:03,120
some bubble generator in your aquarium

6955
06:18:03,120 --> 06:18:06,160
you know that's also chaotic so

6956
06:18:06,160 --> 06:18:07,520
awesome

6957
06:18:07,520 --> 06:18:08,638
um

6958
06:18:08,638 --> 06:18:11,040
so there there was a um

6959
06:18:11,040 --> 06:18:13,520
you know there was a mention uh eulan

6960
06:18:13,520 --> 06:18:15,360
your talk about

6961
06:18:15,360 --> 06:18:16,958
time locked encryption

6962
06:18:16,958 --> 06:18:18,240
and i think there are a few folks that

6963
06:18:18,240 --> 06:18:20,320
i'm seeing here asking you know

6964
06:18:20,320 --> 06:18:22,080
how does this work i think it's a very

6965
06:18:22,080 --> 06:18:24,878
new research and you know might be a bit

6966
06:18:24,878 --> 06:18:27,680
a bit complex but can you maybe drill

6967
06:18:27,680 --> 06:18:30,400
down a bit on on how this is uh

6968
06:18:30,400 --> 06:18:32,000
thought about and

6969
06:18:32,000 --> 06:18:33,280
you know if there's going to be future

6970
06:18:33,280 --> 06:18:34,638
work on that and what it's going to

6971
06:18:34,638 --> 06:18:37,040
entail

6972
06:18:37,040 --> 06:18:39,360
yeah so the the time-lapse encryption is

6973
06:18:39,360 --> 06:18:40,718
something i'm super excited about

6974
06:18:40,718 --> 06:18:42,558
because it's it's super cool in my

6975
06:18:42,558 --> 06:18:44,240
opinion to be able to encrypt something

6976
06:18:44,240 --> 06:18:46,400
toward the future

6977
06:18:46,400 --> 06:18:48,160
the thing is we're still working on the

6978
06:18:48,160 --> 06:18:50,400
paper and the blog posts so it's going

6979
06:18:50,400 --> 06:18:55,040
to be released in july or maybe august

6980
06:18:55,040 --> 06:18:58,160
hopefully we will also an open source

6981
06:18:58,160 --> 06:19:00,798
tool that allows you to use it so no

6982
06:19:00,798 --> 06:19:03,280
worries it's coming um

6983
06:19:03,280 --> 06:19:05,040
technically it's a bit difficult to just

6984
06:19:05,040 --> 06:19:07,360
explain you know like out of the blue

6985
06:19:07,360 --> 06:19:09,440
without a

6986
06:19:09,440 --> 06:19:11,600
a white board but

6987
06:19:11,600 --> 06:19:13,680
what you do is you take the value you

6988
06:19:13,680 --> 06:19:15,520
want to encrypt

6989
06:19:15,520 --> 06:19:19,360
you pick a random value which is secret

6990
06:19:19,360 --> 06:19:22,718
you can xor both together and you get an

6991
06:19:22,718 --> 06:19:25,440
encrypted message which is a one-time

6992
06:19:25,440 --> 06:19:26,878
pad basically you you encrypted

6993
06:19:26,878 --> 06:19:29,600
something with one-time power and now

6994
06:19:29,600 --> 06:19:32,240
that random value will get committed

6995
06:19:32,240 --> 06:19:35,760
towards the run in the future and using

6996
06:19:35,760 --> 06:19:37,840
the pairings

6997
06:19:37,840 --> 06:19:39,040
we can

6998
06:19:39,040 --> 06:19:41,600
decrypt well decommit

6999
06:19:41,600 --> 06:19:44,160
that commitment as soon as the signature

7000
06:19:44,160 --> 06:19:47,840
is published for that round and

7001
06:19:47,840 --> 06:19:49,360
that might give you a bit of an

7002
06:19:49,360 --> 06:19:51,920
intuition of how it works i guess

7003
06:19:51,920 --> 06:19:54,878
so i guess his upcoming work so maybe uh

7004
06:19:54,878 --> 06:19:57,600
nordsec 2023

7005
06:19:57,600 --> 06:19:58,400
yeah

7006
06:19:58,400 --> 06:20:00,558
we hope to be done before that i guess

7007
06:20:00,558 --> 06:20:02,160
all right awesome

7008
06:20:02,160 --> 06:20:03,600
um

7009
06:20:03,600 --> 06:20:05,840
so let's step back a bit and maybe go

7010
06:20:05,840 --> 06:20:07,520
into the um

7011
06:20:07,520 --> 06:20:09,040
you know the more

7012
06:20:09,040 --> 06:20:10,718
theoretical

7013
06:20:10,718 --> 06:20:12,558
well theory called applied crypto you

7014
06:20:12,558 --> 06:20:15,040
know um there's there's been a you know

7015
06:20:15,040 --> 06:20:16,798
some questions about i know so you've

7016
06:20:16,798 --> 06:20:18,320
got maybe a bit of background there on

7017
06:20:18,320 --> 06:20:20,718
quantum cryptography uh you know what's

7018
06:20:20,718 --> 06:20:21,520
uh

7019
06:20:21,520 --> 06:20:23,920
in your opinion and you know of course

7020
06:20:23,920 --> 06:20:25,440
you as well being a photographer what do

7021
06:20:25,440 --> 06:20:27,520
you think um you know how far are we

7022
06:20:27,520 --> 06:20:28,558
from

7023
06:20:28,558 --> 06:20:30,320
mainstream adoption what's

7024
06:20:30,320 --> 06:20:31,760
you know what what are the hurdles

7025
06:20:31,760 --> 06:20:33,920
basically for it not to be post-content

7026
06:20:33,920 --> 06:20:37,200
crypto for it not to be um adopted today

7027
06:20:37,200 --> 06:20:39,120
what kind of standardization do we do we

7028
06:20:39,120 --> 06:20:42,400
need um you know and and um you know

7029
06:20:42,400 --> 06:20:44,000
maybe what's uh what's the in your

7030
06:20:44,000 --> 06:20:46,240
opinion what's the the road uh to

7031
06:20:46,240 --> 06:20:47,840
getting there

7032
06:20:47,840 --> 06:20:50,080
yeah first a little terminology

7033
06:20:50,080 --> 06:20:52,478
explanation so

7034
06:20:52,478 --> 06:20:56,160
quantum cryptography it's typically

7035
06:20:56,160 --> 06:20:59,840
typically means quantum key distribution

7036
06:20:59,840 --> 06:21:00,878
which is

7037
06:21:00,878 --> 06:21:02,400
the ability to

7038
06:21:02,400 --> 06:21:05,680
using quantum mechanisms to establish a

7039
06:21:05,680 --> 06:21:07,600
shared key that you can use than with

7040
06:21:07,600 --> 06:21:09,760
conventional encryption so i think that

7041
06:21:09,760 --> 06:21:11,840
that's very little chance of

7042
06:21:11,840 --> 06:21:13,440
being

7043
06:21:13,440 --> 06:21:15,280
widely deployed it's been deployed kind

7044
06:21:15,280 --> 06:21:17,520
of in pilot and very specialized

7045
06:21:17,520 --> 06:21:21,200
environments but the the classical uh

7046
06:21:21,200 --> 06:21:22,558
cryptography that we have today is

7047
06:21:22,558 --> 06:21:24,718
sufficient i think for real-world

7048
06:21:24,718 --> 06:21:26,000
scenarios

7049
06:21:26,000 --> 06:21:28,000
um the other word that's post-quantum

7050
06:21:28,000 --> 06:21:29,760
cryptography so that's that's what it

7051
06:21:29,760 --> 06:21:31,120
means it's

7052
06:21:31,120 --> 06:21:33,680
normal cryptography that you run with

7053
06:21:33,680 --> 06:21:36,400
ordinary classical computers but for

7054
06:21:36,400 --> 06:21:39,200
which we don't know how to break with a

7055
06:21:39,200 --> 06:21:41,760
future quantum computer so a quantum

7056
06:21:41,760 --> 06:21:42,878
computer

7057
06:21:42,878 --> 06:21:46,080
is a machine that if if we end up

7058
06:21:46,080 --> 06:21:47,200
building

7059
06:21:47,200 --> 06:21:49,200
uh could break the crypto that we use

7060
06:21:49,200 --> 06:21:51,360
today and the problem why is that a

7061
06:21:51,360 --> 06:21:52,798
problem now if it's going to be built in

7062
06:21:52,798 --> 06:21:54,638
20 years is that you can record the

7063
06:21:54,638 --> 06:21:56,878
traffic today and decrypt it in 20 years

7064
06:21:56,878 --> 06:21:58,718
which in some cases

7065
06:21:58,718 --> 06:22:00,160
if you're a coca-cola and you're trying

7066
06:22:00,160 --> 06:22:02,080
to protect your recipe forever then that

7067
06:22:02,080 --> 06:22:03,840
might be a problem

7068
06:22:03,840 --> 06:22:06,080
so

7069
06:22:06,080 --> 06:22:07,840
this as i mentioned in the talk at the

7070
06:22:07,840 --> 06:22:09,840
beginning just nist is which is the

7071
06:22:09,840 --> 06:22:11,440
national institute of standards and

7072
06:22:11,440 --> 06:22:12,638
technology

7073
06:22:12,638 --> 06:22:14,878
uh there are uh yeah working on

7074
06:22:14,878 --> 06:22:16,958
replacements of quantum algorithms so

7075
06:22:16,958 --> 06:22:18,160
they're

7076
06:22:18,160 --> 06:22:20,400
now waiting uh or waiting any day now

7077
06:22:20,400 --> 06:22:23,200
after a three plus year process to to

7078
06:22:23,200 --> 06:22:24,958
see which is going to be the next

7079
06:22:24,958 --> 06:22:26,718
uh round of algorithms are going to

7080
06:22:26,718 --> 06:22:29,520
replace rsa and and

7081
06:22:29,520 --> 06:22:31,840
they see dsa and

7082
06:22:31,840 --> 06:22:34,160
so uh these are the ones that are very

7083
06:22:34,160 --> 06:22:35,920
close to to be picked and then it's

7084
06:22:35,920 --> 06:22:37,680
going to take a year or two to

7085
06:22:37,680 --> 06:22:39,920
ride up and standardize so

7086
06:22:39,920 --> 06:22:42,320
we're in a comfortable let's you know

7087
06:22:42,320 --> 06:22:43,920
change the uh

7088
06:22:43,920 --> 06:22:46,320
the underpinning and the machinery of

7089
06:22:46,320 --> 06:22:49,440
the the crypto pipelines before uh it's

7090
06:22:49,440 --> 06:22:52,877
too late so i think that's in good shape

7091
06:22:53,840 --> 06:22:56,240
yeah and if you look also at what's

7092
06:22:56,240 --> 06:22:57,520
being done

7093
06:22:57,520 --> 06:23:00,878
in the on the mailing list and you know

7094
06:23:00,878 --> 06:23:04,718
online people are still not super

7095
06:23:04,958 --> 06:23:07,120
or not agreeing on oh we should do it

7096
06:23:07,120 --> 06:23:09,280
like should we combine

7097
06:23:09,280 --> 06:23:12,400
current classical

7098
06:23:12,400 --> 06:23:14,958
algorithms with the new quantum

7099
06:23:14,958 --> 06:23:17,840
resistance algorithms should we switch

7100
06:23:17,840 --> 06:23:20,718
over to the new algorithms even though

7101
06:23:20,718 --> 06:23:23,120
the current ones have been battle tested

7102
06:23:23,120 --> 06:23:25,200
and we know they work

7103
06:23:25,200 --> 06:23:28,718
properly or at least we hope they do

7104
06:23:28,718 --> 06:23:30,320
these are questions that still need to

7105
06:23:30,320 --> 06:23:32,160
be answered like because if you want to

7106
06:23:32,160 --> 06:23:36,240
do hybrid encryption or you combine both

7107
06:23:36,240 --> 06:23:38,240
quantum resistance algorithms with the

7108
06:23:38,240 --> 06:23:40,400
classical algorithms it's not the same

7109
06:23:40,400 --> 06:23:42,240
as if you say okay we ditch the

7110
06:23:42,240 --> 06:23:44,718
classical stuff and we jump on the new

7111
06:23:44,718 --> 06:23:47,040
cool quantum resistance

7112
06:23:47,040 --> 06:23:50,000
train you know and um people are getting

7113
06:23:50,000 --> 06:23:52,160
worried as well because like the

7114
06:23:52,160 --> 06:23:54,958
recently i think it was in the u.s they

7115
06:23:54,958 --> 06:23:58,798
said okay now all the secret top secret

7116
06:23:58,798 --> 06:24:00,400
stuff needs to

7117
06:24:00,400 --> 06:24:03,440
move on to a quantum resistance

7118
06:24:03,440 --> 06:24:04,320
deck

7119
06:24:04,320 --> 06:24:05,680
like within

7120
06:24:05,680 --> 06:24:07,920
five euros or something like that and

7121
06:24:07,920 --> 06:24:10,000
people are like what what's happening

7122
06:24:10,000 --> 06:24:12,558
they didn't even standardize the post

7123
06:24:12,558 --> 06:24:14,558
quantum algorithms yet why do they do

7124
06:24:14,558 --> 06:24:16,240
that now so

7125
06:24:16,240 --> 06:24:17,600
yeah

7126
06:24:17,600 --> 06:24:19,280
yeah i can just like add a note to that

7127
06:24:19,280 --> 06:24:21,520
so uh yeah that's a it's a fair point

7128
06:24:21,520 --> 06:24:23,440
that uh there might be this transitional

7129
06:24:23,440 --> 06:24:25,680
period where we're going to use hybrid

7130
06:24:25,680 --> 06:24:26,400
uh

7131
06:24:26,400 --> 06:24:28,160
encryption hybrid in the sense of yeah

7132
06:24:28,160 --> 06:24:31,040
combining more than one uh scheme and

7133
06:24:31,040 --> 06:24:33,040
that's something that uh we've

7134
06:24:33,040 --> 06:24:35,760
implemented uh it's not something that's

7135
06:24:35,760 --> 06:24:37,920
pushed necessarily by by nist as their

7136
06:24:37,920 --> 06:24:39,840
their goal is to say is the new standard

7137
06:24:39,840 --> 06:24:41,600
but it's something that the industry are

7138
06:24:41,600 --> 06:24:43,200
is wondering about if that would be a

7139
06:24:43,200 --> 06:24:45,120
good idea there's this project which

7140
06:24:45,120 --> 06:24:47,600
i've talked about in a

7141
06:24:47,600 --> 06:24:50,558
two north sex ago uh it's the open

7142
06:24:50,558 --> 06:24:52,878
quantum safe project if you look that up

7143
06:24:52,878 --> 06:24:55,120
it's led by the university of waterloo

7144
06:24:55,120 --> 06:24:57,200
and we've prototyped all the new

7145
06:24:57,200 --> 06:24:59,440
algorithms including in combat in

7146
06:24:59,440 --> 06:25:02,400
combinations and hybrid away with

7147
06:25:02,400 --> 06:25:04,718
the current want with with rsa or ecdsa

7148
06:25:04,718 --> 06:25:06,958
on our

7149
06:25:06,958 --> 06:25:10,400
electric sorry dc defilement

7150
06:25:10,400 --> 06:25:12,718
so uh

7151
06:25:12,718 --> 06:25:15,600
you you can run that in openssl and open

7152
06:25:15,600 --> 06:25:17,120
see how it looks and at the end of the

7153
06:25:17,120 --> 06:25:18,478
day there's going to be some people it's

7154
06:25:18,478 --> 06:25:20,160
going to be their choice their their

7155
06:25:20,160 --> 06:25:21,520
policy to

7156
06:25:21,520 --> 06:25:24,240
what's the performance versus

7157
06:25:24,240 --> 06:25:25,760
expected security and there's going to

7158
06:25:25,760 --> 06:25:28,558
be a large body of people who won't care

7159
06:25:28,558 --> 06:25:29,840
that just follow the government

7160
06:25:29,840 --> 06:25:33,200
standards whichever they'll pick so um

7161
06:25:33,200 --> 06:25:36,478
it's yeah hopefully nist will will

7162
06:25:36,478 --> 06:25:38,400
you know in the academic community will

7163
06:25:38,400 --> 06:25:40,878
have picked good replacement so at some

7164
06:25:40,878 --> 06:25:41,680
point

7165
06:25:41,680 --> 06:25:43,280
that's going to be the new

7166
06:25:43,280 --> 06:25:45,840
the new one

7167
06:25:46,160 --> 06:25:47,760
all right thanks i think that you know

7168
06:25:47,760 --> 06:25:50,320
that leads kind of well into the next

7169
06:25:50,320 --> 06:25:51,360
question

7170
06:25:51,360 --> 06:25:54,080
um maybe a bit even even broader

7171
06:25:54,080 --> 06:25:56,320
you know there's been a lot of

7172
06:25:56,320 --> 06:25:58,958
we've seen the pickup of certain popular

7173
06:25:58,958 --> 06:26:01,280
software like um you know like you know

7174
06:26:01,280 --> 06:26:03,360
workshop to give an example versus

7175
06:26:03,360 --> 06:26:06,638
openvpn very different approaches um and

7176
06:26:06,638 --> 06:26:07,760
you know you've just mentioned that the

7177
06:26:07,760 --> 06:26:10,000
government um you know the nist will

7178
06:26:10,000 --> 06:26:12,000
standardize some form of algorithm maybe

7179
06:26:12,000 --> 06:26:14,718
people can use some other algorithm

7180
06:26:14,718 --> 06:26:16,638
you know in cryptography there might

7181
06:26:16,638 --> 06:26:18,080
have been some times where we had a

7182
06:26:18,080 --> 06:26:19,680
discussion about

7183
06:26:19,680 --> 06:26:22,160
enforcing saying defaults versus letting

7184
06:26:22,160 --> 06:26:24,478
the users choose themselves

7185
06:26:24,478 --> 06:26:26,320
what to what to what to use in terms of

7186
06:26:26,320 --> 06:26:28,638
algorithms um you know what what's your

7187
06:26:28,638 --> 06:26:30,878
what's your take on this um you know

7188
06:26:30,878 --> 06:26:32,718
what would be a preferred approach

7189
06:26:32,718 --> 06:26:34,638
should we let the users choose which

7190
06:26:34,638 --> 06:26:36,718
algorithm when it gets standardized uh

7191
06:26:36,718 --> 06:26:38,718
or some configuration but then it could

7192
06:26:38,718 --> 06:26:41,920
lead into that you know tls uh ssltls

7193
06:26:41,920 --> 06:26:44,320
issues where you know basically uh death

7194
06:26:44,320 --> 06:26:47,360
by a potential thousand paper cuts um

7195
06:26:47,360 --> 06:26:49,360
so what's the what's the you know what's

7196
06:26:49,360 --> 06:26:51,200
the the theme there the leading

7197
06:26:51,200 --> 06:26:53,840
discussions around uh quantum resilient

7198
06:26:53,840 --> 06:26:56,000
cryptography

7199
06:26:56,000 --> 06:26:58,478
yeah i mean it's i'll give a

7200
06:26:58,478 --> 06:27:01,440
kind of like a large vendor answer it's

7201
06:27:01,440 --> 06:27:03,440
like microsoft which we have such a

7202
06:27:03,440 --> 06:27:04,400
varied

7203
06:27:04,400 --> 06:27:05,680
uh

7204
06:27:05,680 --> 06:27:08,320
set of customers from all over the

7205
06:27:08,320 --> 06:27:10,718
spectrum so it's it's really hard to

7206
06:27:10,718 --> 06:27:12,478
pick for them so as a crypto developer

7207
06:27:12,478 --> 06:27:13,280
it's

7208
06:27:13,280 --> 06:27:15,600
yeah it's it's kind of harmful to give

7209
06:27:15,600 --> 06:27:17,120
too much choice

7210
06:27:17,120 --> 06:27:19,680
and and it's easier to give just you

7211
06:27:19,680 --> 06:27:22,638
know very minimal set of configurations

7212
06:27:22,638 --> 06:27:25,280
so you can shoot yourself in the foot

7213
06:27:25,280 --> 06:27:26,798
on the other hand depends you know so

7214
06:27:26,798 --> 06:27:28,638
the cryptography in china is very

7215
06:27:28,638 --> 06:27:31,440
different uh than in the us and we you

7216
06:27:31,440 --> 06:27:33,760
know we provide software all around the

7217
06:27:33,760 --> 06:27:34,958
globe so

7218
06:27:34,958 --> 06:27:37,280
uh the platform itself needs to be uh

7219
06:27:37,280 --> 06:27:39,520
adaptable for that um

7220
06:27:39,520 --> 06:27:41,200
but i think it's recognized right the

7221
06:27:41,200 --> 06:27:42,240
mystic

7222
06:27:42,240 --> 06:27:44,400
it's not mistakes because you know it's

7223
06:27:44,400 --> 06:27:46,080
doing the best we can but the the crypto

7224
06:27:46,080 --> 06:27:47,680
community learned a lot of lessons in

7225
06:27:47,680 --> 06:27:50,080
the last 10 years we see all the tls

7226
06:27:50,080 --> 06:27:51,680
attacks like hard bleed and all these

7227
06:27:51,680 --> 06:27:53,520
things year after year and then the tls

7228
06:27:53,520 --> 06:27:56,798
1.3 is i think is a good example of a

7229
06:27:56,798 --> 06:27:59,840
standard that had a good

7230
06:27:59,840 --> 06:28:02,080
analysis and review by the academic

7231
06:28:02,080 --> 06:28:04,080
community and a lot of the research was

7232
06:28:04,080 --> 06:28:05,760
applied there and there's way fewer

7233
06:28:05,760 --> 06:28:07,920
choices so when it came out of the box

7234
06:28:07,920 --> 06:28:09,920
it was okay okay great like good

7235
06:28:09,920 --> 06:28:11,360
configuration and then the industry or

7236
06:28:11,360 --> 06:28:13,200
some part of the industry fought back to

7237
06:28:13,200 --> 06:28:14,638
trying to put back some features and

7238
06:28:14,638 --> 06:28:16,478
like the rsa encryption because they

7239
06:28:16,478 --> 06:28:17,520
need it in

7240
06:28:17,520 --> 06:28:20,400
middle boxes for for uh traffic

7241
06:28:20,400 --> 06:28:22,320
intercept for you know some time valid

7242
06:28:22,320 --> 06:28:24,240
reason so that you know kids don't go

7243
06:28:24,240 --> 06:28:25,840
and browse the nasty parts of the

7244
06:28:25,840 --> 06:28:27,280
internet so it's just

7245
06:28:27,280 --> 06:28:29,920
when they're in school right like so

7246
06:28:29,920 --> 06:28:31,200
there's going to be an equilibrium but i

7247
06:28:31,200 --> 06:28:33,600
i kind of tend to like the direction

7248
06:28:33,600 --> 06:28:34,638
where where

7249
06:28:34,638 --> 06:28:37,760
the practical security is going so it's

7250
06:28:37,760 --> 06:28:38,878
yeah

7251
06:28:38,878 --> 06:28:41,280
it's it's a complicated answer and

7252
06:28:41,280 --> 06:28:44,080
situation for sure

7253
06:28:44,080 --> 06:28:46,958
all right yolanda you want to chime in

7254
06:28:46,958 --> 06:28:49,840
i know we discussed a bit about you know

7255
06:28:49,840 --> 06:28:53,040
this topic earlier on

7256
06:28:54,400 --> 06:28:56,000
yeah well

7257
06:28:56,000 --> 06:28:59,120
i i would say crypto agility is a good

7258
06:28:59,120 --> 06:29:02,400
thing for protocol designers and for

7259
06:29:02,400 --> 06:29:04,718
software developers but it's a terrible

7260
06:29:04,718 --> 06:29:06,638
things for users in my opinion because

7261
06:29:06,638 --> 06:29:08,638
it it allows

7262
06:29:08,638 --> 06:29:11,120
you know like non-crypto developers to

7263
06:29:11,120 --> 06:29:13,040
shoot themselves in the foot way too

7264
06:29:13,040 --> 06:29:14,878
easily like if you look at the jersey

7265
06:29:14,878 --> 06:29:15,840
spec

7266
06:29:15,840 --> 06:29:18,558
or they could choose the non encryption

7267
06:29:18,558 --> 06:29:20,400
algorithms which wouldn't encrypt

7268
06:29:20,400 --> 06:29:22,638
anything and that kind of issues

7269
06:29:22,638 --> 06:29:25,280
i mean sure they wanted to do good and

7270
06:29:25,280 --> 06:29:27,280
to provide a lot of options but at the

7271
06:29:27,280 --> 06:29:29,840
end it were it was too many so i like

7272
06:29:29,840 --> 06:29:33,280
also the way tls 1.3 reduced the number

7273
06:29:33,280 --> 06:29:36,798
of options to just save sets and

7274
06:29:36,798 --> 06:29:38,958
how they did it and i think it's super

7275
06:29:38,958 --> 06:29:41,120
important for us as

7276
06:29:41,120 --> 06:29:43,760
protocol designers to be able to quickly

7277
06:29:43,760 --> 06:29:46,478
switch to new algorithms if we see

7278
06:29:46,478 --> 06:29:48,958
something got broken and that's not

7279
06:29:48,958 --> 06:29:51,680
working anymore and it's in my opinion

7280
06:29:51,680 --> 06:29:54,320
also a good reason to go the hybrid way

7281
06:29:54,320 --> 06:29:57,520
rather than directly jump the

7282
06:29:57,520 --> 06:30:00,400
to quantum-resistant algorithms but yeah

7283
06:30:00,400 --> 06:30:01,680
we'll see

7284
06:30:01,680 --> 06:30:03,600
all right so i guess the debates lives

7285
06:30:03,600 --> 06:30:04,878
on

7286
06:30:04,878 --> 06:30:06,558
but there's a tendency towards

7287
06:30:06,558 --> 06:30:08,558
simplifying things and and you know

7288
06:30:08,558 --> 06:30:11,120
leaving less options to shoot yourself

7289
06:30:11,120 --> 06:30:12,080
in the foot

7290
06:30:12,080 --> 06:30:12,878
um

7291
06:30:12,878 --> 06:30:16,160
all right so um it was a it was a it was

7292
06:30:16,160 --> 06:30:18,558
a you know great session lots of good

7293
06:30:18,558 --> 06:30:21,200
questions i went through most of them um

7294
06:30:21,200 --> 06:30:23,360
thanks a lot yolo and uh thanks a lot

7295
06:30:23,360 --> 06:30:26,160
for for all the for all the help uh and

7296
06:30:26,160 --> 06:30:27,840
answering these uh these questions

7297
06:30:27,840 --> 06:30:30,320
christine as well um if you have any

7298
06:30:30,320 --> 06:30:33,280
more questions uh you can probably

7299
06:30:33,280 --> 06:30:35,920
uh find both gentlemen uh maybe grabbing

7300
06:30:35,920 --> 06:30:38,320
a beer at the bar or later in the in the

7301
06:30:38,320 --> 06:30:39,360
chill room

7302
06:30:39,360 --> 06:30:40,718
thank you all for submitting all these

7303
06:30:40,718 --> 06:30:43,040
great questions and uh i guess see you

7304
06:30:43,040 --> 06:30:45,280
on the next uh the next block and that

7305
06:30:45,280 --> 06:30:46,240
will be

7306
06:30:46,240 --> 06:30:48,478
uh the red team block

7307
06:30:48,478 --> 06:30:49,840
in uh

7308
06:30:49,840 --> 06:30:52,080
almost 30 minutes now have a good one

7309
06:30:52,080 --> 06:30:53,510
everyone

7310
06:30:53,510 --> 06:30:59,190
[Applause]

7311
06:31:07,340 --> 06:31:10,380
[Music]

7312
06:31:13,390 --> 06:31:27,279
[Music]

7313
06:31:29,860 --> 06:31:32,979
[Music]

7314
06:31:37,780 --> 06:31:40,918
[Music]

7315
06:31:50,610 --> 06:32:06,070
[Music]

7316
06:32:14,870 --> 06:32:22,579
[Music]

7317
06:32:23,360 --> 06:32:26,360
so

7318
06:32:30,610 --> 06:32:33,810
[Music]

7319
06:32:36,570 --> 06:32:39,709
[Music]

7320
06:32:46,880 --> 06:32:50,009
[Music]

7321
06:32:57,180 --> 06:33:04,879
[Music]

7322
06:33:08,390 --> 06:33:37,430
[Music]

7323
06:33:47,950 --> 06:33:51,089
[Music]

7324
06:34:01,440 --> 06:34:04,440
so

7325
06:34:05,490 --> 06:34:16,240
[Music]

7326
06:34:19,280 --> 06:34:22,370
[Music]

7327
06:34:25,040 --> 06:34:29,360
[Music]

7328
06:34:29,360 --> 06:34:32,360
so

7329
06:34:40,660 --> 06:34:47,890
[Music]

7330
06:35:01,420 --> 06:35:04,510
[Music]

7331
06:35:19,520 --> 06:35:22,580
[Music]

7332
06:35:27,640 --> 06:35:47,109
[Music]

7333
06:35:50,200 --> 06:35:53,319
[Music]

7334
06:35:58,240 --> 06:36:01,240
foreign

7335
06:36:04,800 --> 06:36:07,890
[Music]

7336
06:36:29,630 --> 06:36:36,789
[Music]

7337
06:36:39,120 --> 06:36:42,980
[Music]

7338
06:36:51,020 --> 06:37:00,119
[Music]

7339
06:37:17,600 --> 06:37:33,499
[Music]

7340
06:37:37,920 --> 06:37:40,960
[Music]

7341
06:37:43,970 --> 06:37:57,849
[Music]

7342
06:38:00,440 --> 06:38:03,559
[Music]

7343
06:38:08,360 --> 06:38:11,490
[Music]

7344
06:38:21,200 --> 06:38:36,650
[Music]

7345
06:38:41,440 --> 06:38:44,440
so

7346
06:38:45,450 --> 06:38:49,139
[Music]

7347
06:39:01,190 --> 06:39:04,390
[Music]

7348
06:39:07,170 --> 06:39:10,289
[Music]

7349
06:39:17,470 --> 06:39:20,599
[Music]

7350
06:39:27,760 --> 06:39:35,448
[Music]

7351
06:39:38,970 --> 06:40:08,009
[Music]

7352
06:40:18,530 --> 06:40:21,668
[Music]

7353
06:40:31,380 --> 06:40:46,820
[Music]

7354
06:40:49,860 --> 06:40:53,130
[Music]

7355
06:40:55,630 --> 06:41:01,679
[Music]

7356
06:41:11,240 --> 06:41:18,819
[Music]

7357
06:41:31,990 --> 06:41:35,080
[Music]

7358
06:41:37,930 --> 06:41:45,159
[Music]

7359
06:41:49,130 --> 06:42:17,689
[Music]

7360
06:42:20,780 --> 06:42:23,899
[Music]

7361
06:42:28,770 --> 06:42:31,909
[Music]

7362
06:42:35,380 --> 06:42:38,499
[Music]

7363
06:43:00,210 --> 06:43:07,399
[Music]

7364
06:43:10,510 --> 06:43:13,539
[Music]

7365
06:43:21,600 --> 06:43:30,698
[Music]

7366
06:43:37,870 --> 06:43:40,960
[Music]

7367
06:43:48,170 --> 06:44:04,079
[Music]

7368
06:44:08,500 --> 06:44:11,540
[Music]

7369
06:44:14,550 --> 06:44:28,439
[Music]

7370
06:44:36,478 --> 06:44:38,940
foreign

7371
06:44:38,940 --> 06:44:42,070
[Music]

7372
06:44:51,780 --> 06:45:07,139
[Music]

7373
06:45:16,040 --> 06:45:23,709
[Music]

7374
06:45:31,770 --> 06:45:34,970
[Music]

7375
06:45:37,750 --> 06:45:40,869
[Music]

7376
06:45:48,040 --> 06:45:51,130
[Music]

7377
06:45:58,330 --> 06:46:06,040
[Music]

7378
06:46:12,320 --> 06:46:15,320
do

7379
06:46:15,380 --> 06:46:38,590
[Music]

7380
06:46:46,280 --> 06:47:17,399
[Music]

7381
06:47:20,440 --> 06:47:23,710
[Music]

7382
06:47:26,760 --> 06:47:32,289
[Music]

7383
06:47:34,080 --> 06:47:37,080
so

7384
06:47:41,820 --> 06:47:49,049
[Music]

7385
06:48:02,570 --> 06:48:05,668
[Music]

7386
06:48:08,510 --> 06:48:15,739
[Music]

7387
06:48:19,710 --> 06:48:26,309
[Music]

7388
06:48:28,800 --> 06:48:48,270
[Music]

7389
06:48:51,360 --> 06:48:54,479
[Music]

7390
06:48:59,350 --> 06:49:02,489
[Music]

7391
06:49:05,960 --> 06:49:09,050
[Music]

7392
06:49:23,520 --> 06:49:26,520
do

7393
06:49:30,780 --> 06:49:33,939
[Music]

7394
06:49:41,080 --> 06:49:44,119
[Music]

7395
06:49:52,180 --> 06:49:55,360
[Music]

7396
06:49:58,160 --> 06:50:01,270
[Music]

7397
06:50:06,080 --> 06:50:08,440
so

7398
06:50:08,440 --> 06:50:15,898
[Music]

7399
06:50:18,750 --> 06:50:20,400
[Music]

7400
06:50:20,400 --> 06:50:22,800
do

7401
06:50:22,800 --> 06:50:34,660
[Music]

7402
06:50:39,080 --> 06:50:42,119
[Music]

7403
06:50:45,130 --> 06:50:59,020
[Music]

7404
06:51:01,600 --> 06:51:04,719
[Music]

7405
06:51:07,280 --> 06:51:09,520
foreign

7406
06:51:09,520 --> 06:51:12,650
[Music]

7407
06:51:17,900 --> 06:51:37,810
[Music]

7408
06:51:46,620 --> 06:51:50,300
[Music]

7409
06:52:02,360 --> 06:52:05,549
[Music]

7410
06:52:08,310 --> 06:52:11,439
[Music]

7411
06:52:28,910 --> 06:52:36,619
[Music]

7412
06:52:39,090 --> 06:53:09,169
[Music]

7413
06:53:16,860 --> 06:53:22,830
[Music]

7414
06:53:32,540 --> 06:53:47,980
[Music]

7415
06:53:51,020 --> 06:53:54,099
[Music]

7416
06:53:56,780 --> 06:54:02,840
[Music]

7417
06:54:12,400 --> 06:54:19,969
[Music]

7418
06:54:33,150 --> 06:54:36,240
[Music]

7419
06:54:39,100 --> 06:54:46,230
[Music]

7420
06:54:52,090 --> 06:55:18,849
[Music]

7421
06:55:21,940 --> 06:55:25,059
[Music]

7422
06:55:29,930 --> 06:55:33,060
[Music]

7423
06:55:36,540 --> 06:55:39,659
[Music]

7424
06:56:01,360 --> 06:56:08,550
[Music]

7425
06:56:09,440 --> 06:56:11,670
so

7426
06:56:11,670 --> 06:56:14,699
[Music]

7427
06:56:23,600 --> 06:56:26,600
do

7428
06:56:28,740 --> 06:56:31,859
[Music]

7429
06:56:49,330 --> 06:57:07,150
[Music]

7430
06:57:09,660 --> 06:57:12,709
[Music]

7431
06:57:15,710 --> 06:57:29,589
[Music]

7432
06:57:32,180 --> 06:57:43,230
[Music]

7433
06:57:52,940 --> 06:58:08,389
[Music]

7434
06:58:17,200 --> 06:58:24,869
[Music]

7435
06:58:32,930 --> 06:58:36,110
[Music]

7436
06:58:38,880 --> 06:58:42,029
[Music]

7437
06:58:59,490 --> 06:59:07,189
[Music]

7438
06:59:10,700 --> 06:59:39,750
[Music]

7439
06:59:47,440 --> 06:59:53,409
[Music]

7440
07:00:03,120 --> 07:00:18,559
[Music]

7441
07:00:21,600 --> 07:00:24,680
[Music]

7442
07:00:27,360 --> 07:00:33,419
[Music]

7443
07:00:42,980 --> 07:00:50,209
[Music]

7444
07:00:50,878 --> 07:00:53,878
so

7445
07:01:03,730 --> 07:01:16,899
[Music]

7446
07:01:21,820 --> 07:01:27,459
[Music]

7447
07:01:29,960 --> 07:01:49,430
[Music]

7448
07:01:52,520 --> 07:01:55,639
[Music]

7449
07:02:00,510 --> 07:02:03,649
[Music]

7450
07:02:07,120 --> 07:02:10,239
[Music]

7451
07:02:18,350 --> 07:02:21,418
[Music]

7452
07:02:31,930 --> 07:02:39,130
[Music]

7453
07:02:42,240 --> 07:02:45,279
[Music]

7454
07:02:53,340 --> 07:03:02,429
[Music]

7455
07:03:09,360 --> 07:03:12,360
do

7456
07:03:19,910 --> 07:03:37,720
[Music]

7457
07:03:40,220 --> 07:03:43,279
[Music]

7458
07:03:46,270 --> 07:04:00,149
[Music]

7459
07:04:02,730 --> 07:04:05,849
[Music]

7460
07:04:10,650 --> 07:04:13,779
[Music]

7461
07:04:23,480 --> 07:04:38,918
[Music]

7462
07:04:42,610 --> 07:04:45,709
[Music]

7463
07:04:47,710 --> 07:04:51,399
[Music]

7464
07:05:03,450 --> 07:05:06,639
[Music]

7465
07:05:09,340 --> 07:05:12,540
[Music]

7466
07:05:26,080 --> 07:05:27,680
hello hello hello

7467
07:05:27,680 --> 07:05:30,400
so welcome to the last block of the

7468
07:05:30,400 --> 07:05:31,520
conference

7469
07:05:31,520 --> 07:05:33,840
uh the red team block

7470
07:05:33,840 --> 07:05:35,280
so i'm going to present to you your

7471
07:05:35,280 --> 07:05:37,440
moderator for the next few talks his

7472
07:05:37,440 --> 07:05:39,760
name is martin's bay he's been hacking

7473
07:05:39,760 --> 07:05:42,400
for 15 years you might know him from his

7474
07:05:42,400 --> 07:05:44,478
challenges and his windows track at

7475
07:05:44,478 --> 07:05:46,478
access he also did it

7476
07:05:46,478 --> 07:05:48,958
for one year at nordsec

7477
07:05:48,958 --> 07:05:51,280
you remember the neurostuff the windows

7478
07:05:51,280 --> 07:05:53,040
track that was him

7479
07:05:53,040 --> 07:05:54,240
so give

7480
07:05:54,240 --> 07:05:56,080
give all your thanks for all your points

7481
07:05:56,080 --> 07:05:59,440
that year to uh martense bay uh and now

7482
07:05:59,440 --> 07:06:02,080
he leads a large team of ethical actors

7483
07:06:02,080 --> 07:06:04,638
uh one meeting at a time please welcome

7484
07:06:04,638 --> 07:06:07,638
matlinsbe

7485
07:06:11,600 --> 07:06:14,638
thank you go i hope you have a very very

7486
07:06:14,638 --> 07:06:18,240
good nordsec as good as i i do

7487
07:06:18,240 --> 07:06:19,360
i hope

7488
07:06:19,360 --> 07:06:21,680
also that you will really enjoy the ctf

7489
07:06:21,680 --> 07:06:22,878
this weekend

7490
07:06:22,878 --> 07:06:24,400
um

7491
07:06:24,400 --> 07:06:26,558
i'll jump right in with the introduction

7492
07:06:26,558 --> 07:06:30,638
of our new our next guest olivier

7493
07:06:30,638 --> 07:06:33,200
i know lv is a good time and i really

7494
07:06:33,200 --> 07:06:35,600
really appreciate his work in especially

7495
07:06:35,600 --> 07:06:37,280
all the open source stuff he did like

7496
07:06:37,280 --> 07:06:40,320
mailboxes and and many more products

7497
07:06:40,320 --> 07:06:42,718
sorry tools

7498
07:06:42,718 --> 07:06:44,558
olivier is

7499
07:06:44,558 --> 07:06:47,680
he gave so many conferences at black app

7500
07:06:47,680 --> 07:06:50,958
conv derbycon hackfest nordsec he's

7501
07:06:50,958 --> 07:06:54,958
involved in nordsec montreal

7502
07:06:54,958 --> 07:06:56,798
you will see him a lot

7503
07:06:56,798 --> 07:06:58,478
at a lot of places

7504
07:06:58,478 --> 07:06:59,840
and

7505
07:06:59,840 --> 07:07:02,240
today's gonna talk about the rdp which

7506
07:07:02,240 --> 07:07:05,440
of course is a remote desktop protocol

7507
07:07:05,440 --> 07:07:07,680
he's been studying for the last three

7508
07:07:07,680 --> 07:07:10,160
years this protocol and today is going

7509
07:07:10,160 --> 07:07:12,320
to talk about how to attack and defend

7510
07:07:12,320 --> 07:07:14,000
rdp

7511
07:07:14,000 --> 07:07:15,440
so i'm pretty sure it's going to be

7512
07:07:15,440 --> 07:07:17,440
awesome thank you

7513
07:07:17,440 --> 07:07:19,120
thanks so much martin

7514
07:07:19,120 --> 07:07:20,740
i ran our place for my plane

7515
07:07:20,740 --> 07:07:23,839
[Applause]

7516
07:07:23,840 --> 07:07:26,080
it's true that it starts to be way back

7517
07:07:26,080 --> 07:07:27,680
right since we know each other it's

7518
07:07:27,680 --> 07:07:31,200
pretty crazy anyway all right so

7519
07:07:31,200 --> 07:07:34,320
originally today we i was uh i planned

7520
07:07:34,320 --> 07:07:36,240
to talk about the risks of rdp and how

7521
07:07:36,240 --> 07:07:38,878
to mitigate them but then i realized i

7522
07:07:38,878 --> 07:07:41,120
only have half an hour so i needed to

7523
07:07:41,120 --> 07:07:42,798
adjust

7524
07:07:42,798 --> 07:07:46,400
so this is some risks of rdp and how to

7525
07:07:46,400 --> 07:07:47,920
mitigate them

7526
07:07:47,920 --> 07:07:51,360
but then i found some problems and it

7527
07:07:51,360 --> 07:07:53,120
became

7528
07:07:53,120 --> 07:07:55,760
some risks of rdp how to mitigate them

7529
07:07:55,760 --> 07:07:59,200
and a villain reported to microsoft

7530
07:07:59,200 --> 07:08:01,760
so we're going to go through this

7531
07:08:01,760 --> 07:08:04,478
it's a heavily edited the edition of the

7532
07:08:04,478 --> 07:08:07,040
talk i gave a month ago at itiasicon

7533
07:08:07,040 --> 07:08:09,680
which was 45 minutes

7534
07:08:09,680 --> 07:08:12,400
so i switched a bunch of things and some

7535
07:08:12,400 --> 07:08:14,400
of it might not be super coherent

7536
07:08:14,400 --> 07:08:17,120
because i was doing ctf 101 yesterday

7537
07:08:17,120 --> 07:08:18,638
and i have the hacker jeopardy tomorrow

7538
07:08:18,638 --> 07:08:20,400
so i didn't have as much time as i

7539
07:08:20,400 --> 07:08:22,798
wished i had to prepare

7540
07:08:22,798 --> 07:08:23,600
but

7541
07:08:23,600 --> 07:08:26,878
you'll have a great ride i'm sure

7542
07:08:26,878 --> 07:08:29,360
all right so about us no time for that

7543
07:08:29,360 --> 07:08:32,000
uh no actually i should say so i was

7544
07:08:32,000 --> 07:08:33,440
supposed to present with lisandro but

7545
07:08:33,440 --> 07:08:36,000
lisandro his visa didn't get approved in

7546
07:08:36,000 --> 07:08:36,878
time

7547
07:08:36,878 --> 07:08:39,120
so apparently when immigration canada

7548
07:08:39,120 --> 07:08:41,920
says it's going to take 23 days

7549
07:08:41,920 --> 07:08:44,478
well they don't mean 23 days for real

7550
07:08:44,478 --> 07:08:46,798
and it's not even 23 business days it's

7551
07:08:46,798 --> 07:08:50,000
like 23 days of jupiter or i don't know

7552
07:08:50,000 --> 07:08:51,280
what

7553
07:08:51,280 --> 07:08:52,240
but

7554
07:08:52,240 --> 07:08:54,798
one day you'll see lisandro i'm sure

7555
07:08:54,798 --> 07:08:56,478
he'll have a visa they are good for five

7556
07:08:56,478 --> 07:08:58,958
years so once once you have it he'll

7557
07:08:58,958 --> 07:09:01,280
present here either here let go sec

7558
07:09:01,280 --> 07:09:02,718
we'll see

7559
07:09:02,718 --> 07:09:04,760
all right so uh it's just by myself

7560
07:09:04,760 --> 07:09:06,160
[Music]

7561
07:09:06,160 --> 07:09:11,280
so rdp rdp as uh many of you know is the

7562
07:09:11,280 --> 07:09:13,440
remote desktop protocol it allows you to

7563
07:09:13,440 --> 07:09:16,000
connect to a remote system and have

7564
07:09:16,000 --> 07:09:17,120
graphical

7565
07:09:17,120 --> 07:09:19,360
mouse and different kinds of i o

7566
07:09:19,360 --> 07:09:22,718
forwarded in a secure fashion and it is

7567
07:09:22,718 --> 07:09:25,360
basically like for geeks it's like

7568
07:09:25,360 --> 07:09:26,798
ssh

7569
07:09:26,798 --> 07:09:28,478
with more

7570
07:09:28,478 --> 07:09:30,490
features and or problems

7571
07:09:30,490 --> 07:09:32,958
[Music]

7572
07:09:32,958 --> 07:09:35,360
so the rdp layers so this is why this

7573
07:09:35,360 --> 07:09:37,120
needs time but you know what let's

7574
07:09:37,120 --> 07:09:39,440
forget about most of it it's not that

7575
07:09:39,440 --> 07:09:42,160
interesting and uh it's been already

7576
07:09:42,160 --> 07:09:44,558
hammered on a lot of time before so

7577
07:09:44,558 --> 07:09:46,400
we're going to focus on i o clipboard

7578
07:09:46,400 --> 07:09:49,280
and drives and by i o we mean display

7579
07:09:49,280 --> 07:09:51,440
keyboard and mouse so these are the

7580
07:09:51,440 --> 07:09:54,798
areas of focus of rdp today

7581
07:09:54,798 --> 07:09:57,840
um so rdp security what happens with rdp

7582
07:09:57,840 --> 07:10:00,240
you have at the beginning uh like

7583
07:10:00,240 --> 07:10:04,160
ancient history of rdp you had rc4 and

7584
07:10:04,160 --> 07:10:06,080
graphical login so why a precise

7585
07:10:06,080 --> 07:10:07,840
graphical login this is pretty important

7586
07:10:07,840 --> 07:10:09,840
in the design of the rdp protocol and

7587
07:10:09,840 --> 07:10:12,240
it's early flexibility but was also a

7588
07:10:12,240 --> 07:10:14,558
mistake so we're going to spend some

7589
07:10:14,558 --> 07:10:15,760
time on that

7590
07:10:15,760 --> 07:10:19,120
but so rc4 was a custom i think

7591
07:10:19,120 --> 07:10:21,760
semi-hardcoded key anyway right now

7592
07:10:21,760 --> 07:10:24,320
almost nothing supports it and if you do

7593
07:10:24,320 --> 07:10:25,360
that

7594
07:10:25,360 --> 07:10:27,600
people can pawn you in like fractions of

7595
07:10:27,600 --> 07:10:30,080
seconds cane enable supported breaking

7596
07:10:30,080 --> 07:10:33,280
the rc4 connection mechanism like

7597
07:10:33,280 --> 07:10:34,958
15 years ago i think

7598
07:10:34,958 --> 07:10:37,840
so what most people doing non-nla which

7599
07:10:37,840 --> 07:10:39,360
is the modern one that we're gonna get

7600
07:10:39,360 --> 07:10:40,478
into

7601
07:10:40,478 --> 07:10:43,040
uh uses right now it's tls plus

7602
07:10:43,040 --> 07:10:45,920
graphical login and yes this is the tls

7603
07:10:45,920 --> 07:10:48,558
like transport layer security but then

7604
07:10:48,558 --> 07:10:50,958
everything like all the channels i o

7605
07:10:50,958 --> 07:10:53,200
channels are set up and then you

7606
07:10:53,200 --> 07:10:55,840
authenticate via the the keyboard and

7607
07:10:55,840 --> 07:10:58,240
mouse and graphical which is a lot of

7608
07:10:58,240 --> 07:11:01,520
code and surface what happened after is

7609
07:11:01,520 --> 07:11:04,240
tls plus network level authentication so

7610
07:11:04,240 --> 07:11:06,638
nla which relies on credences p and

7611
07:11:06,638 --> 07:11:08,638
we're going to talk about that

7612
07:11:08,638 --> 07:11:10,558
and i had planned on talking about

7613
07:11:10,558 --> 07:11:12,160
remote credential guard and restricted

7614
07:11:12,160 --> 07:11:14,080
admin but these are not enabled by

7615
07:11:14,080 --> 07:11:16,558
default either on the server or the

7616
07:11:16,558 --> 07:11:18,958
client so unfortunately they didn't make

7617
07:11:18,958 --> 07:11:22,320
the cut for the 30-minute version

7618
07:11:22,320 --> 07:11:25,120
so risk of rdp well of course the

7619
07:11:25,120 --> 07:11:27,120
biggest risk is a

7620
07:11:27,120 --> 07:11:29,200
monster in the middle attacks or mallory

7621
07:11:29,200 --> 07:11:30,878
in the middle or meddler in the middle i

7622
07:11:30,878 --> 07:11:32,240
don't know what to say anymore but i

7623
07:11:32,240 --> 07:11:33,840
don't want to say man

7624
07:11:33,840 --> 07:11:35,520
so it's going to be monster in the

7625
07:11:35,520 --> 07:11:37,680
middle for me

7626
07:11:37,680 --> 07:11:38,958
all right

7627
07:11:38,958 --> 07:11:41,760
um so what are the risks well the risks

7628
07:11:41,760 --> 07:11:44,240
are of a security downgrade attack so

7629
07:11:44,240 --> 07:11:47,280
nla goes down to tls and this works by

7630
07:11:47,280 --> 07:11:49,840
default what happens also is that user

7631
07:11:49,840 --> 07:11:51,520
can click through warnings although

7632
07:11:51,520 --> 07:11:53,440
you'll see later that this might not be

7633
07:11:53,440 --> 07:11:55,520
relevant anymore

7634
07:11:55,520 --> 07:11:58,160
and the impact of that monster in the

7635
07:11:58,160 --> 07:12:00,798
middle attack is access to display

7636
07:12:00,798 --> 07:12:03,440
access to keyboard access to clipboard

7637
07:12:03,440 --> 07:12:05,200
server side takeover

7638
07:12:05,200 --> 07:12:07,440
client-side file stealing

7639
07:12:07,440 --> 07:12:10,558
and client-side takeover implementation

7640
07:12:10,558 --> 07:12:12,958
pending

7641
07:12:13,040 --> 07:12:14,558
we'll have that one day

7642
07:12:14,558 --> 07:12:18,080
so why am i talking about rdp well i

7643
07:12:18,080 --> 07:12:21,200
have a shout out slide way later but i

7644
07:12:21,200 --> 07:12:24,558
need to address that two of the guys who

7645
07:12:24,558 --> 07:12:27,280
worked on pi rdp are back there in the

7646
07:12:27,280 --> 07:12:29,920
corner emilio and maxim a round of

7647
07:12:29,920 --> 07:12:32,878
applause for these guys and

7648
07:12:32,878 --> 07:12:35,520
emilio

7649
07:12:35,680 --> 07:12:37,760
emilio presented

7650
07:12:37,760 --> 07:12:40,240
about pi rdp here but this so this talk

7651
07:12:40,240 --> 07:12:43,280
is basically the uh the broader uh

7652
07:12:43,280 --> 07:12:45,280
protocol uh look into the protocol

7653
07:12:45,280 --> 07:12:47,040
instead of look at the tool

7654
07:12:47,040 --> 07:12:48,718
of it but so

7655
07:12:48,718 --> 07:12:50,558
all these references which you'll have

7656
07:12:50,558 --> 07:12:52,638
available as clickable links in the

7657
07:12:52,638 --> 07:12:55,840
slides r2 the stuff where we presented

7658
07:12:55,840 --> 07:12:58,000
pyrdp and how to use it so we're not

7659
07:12:58,000 --> 07:12:59,760
going to spend time on that just going

7660
07:12:59,760 --> 07:13:02,080
to focus on risks and impact

7661
07:13:02,080 --> 07:13:04,160
but without these guys none of this

7662
07:13:04,160 --> 07:13:06,400
would be possible

7663
07:13:06,400 --> 07:13:08,000
um so

7664
07:13:08,000 --> 07:13:10,240
what does a protocol downgrade looks

7665
07:13:10,240 --> 07:13:13,200
like so you can identify that risk so uh

7666
07:13:13,200 --> 07:13:16,320
the normal flow for a modern rdp

7667
07:13:16,320 --> 07:13:18,878
connection with nla is

7668
07:13:18,878 --> 07:13:21,200
you get a dialogue a native on the

7669
07:13:21,200 --> 07:13:24,240
client side dialog that uh

7670
07:13:24,240 --> 07:13:26,000
where you input your credentials and

7671
07:13:26,000 --> 07:13:28,240
then you go you get the certificate

7672
07:13:28,240 --> 07:13:30,080
error if any if you don't have

7673
07:13:30,080 --> 07:13:32,478
certificate error you don't get any if

7674
07:13:32,478 --> 07:13:34,878
you map a drive you'll get an additional

7675
07:13:34,878 --> 07:13:37,600
warning because mapping a drive has

7676
07:13:37,600 --> 07:13:41,519
security implications which we'll see

7677
07:13:41,760 --> 07:13:44,080
now what does the degraded flow looks

7678
07:13:44,080 --> 07:13:46,958
like so if someone has pi rdp in front

7679
07:13:46,958 --> 07:13:49,440
of you somehow

7680
07:13:49,440 --> 07:13:51,040
sorry

7681
07:13:51,040 --> 07:13:51,840
um

7682
07:13:51,840 --> 07:13:53,040
what you'll have is you'll have the

7683
07:13:53,040 --> 07:13:55,280
certificate error first and then a

7684
07:13:55,280 --> 07:13:57,840
graphical login so on any system that

7685
07:13:57,840 --> 07:13:58,958
you connect

7686
07:13:58,958 --> 07:14:01,200
that then you get to a graphical login

7687
07:14:01,200 --> 07:14:03,040
there's something fishy going on

7688
07:14:03,040 --> 07:14:04,400
because

7689
07:14:04,400 --> 07:14:06,160
in most cases

7690
07:14:06,160 --> 07:14:09,840
even if rdp is not not rdp even if nle

7691
07:14:09,840 --> 07:14:12,240
is not enforced on the server if your

7692
07:14:12,240 --> 07:14:14,958
client supports it it will be upgraded

7693
07:14:14,958 --> 07:14:17,280
to nle automatically so having the

7694
07:14:17,280 --> 07:14:20,558
graphical login is a

7695
07:14:20,558 --> 07:14:23,120
shows you that something is really

7696
07:14:23,120 --> 07:14:25,200
trying to negotiate at the lower

7697
07:14:25,200 --> 07:14:28,558
security level of rdp

7698
07:14:28,558 --> 07:14:31,440
so this is the basically one of them is

7699
07:14:31,440 --> 07:14:33,680
the graphical and the other is the the

7700
07:14:33,680 --> 07:14:36,558
windows native and so why then microsoft

7701
07:14:36,558 --> 07:14:38,958
did graphical login well i assume that

7702
07:14:38,958 --> 07:14:41,680
it's for flexibility reasons because

7703
07:14:41,680 --> 07:14:43,680
everything is delegated to the graphical

7704
07:14:43,680 --> 07:14:46,240
pipeline so no matter how you want to

7705
07:14:46,240 --> 07:14:49,360
authenticate now or later you can do it

7706
07:14:49,360 --> 07:14:51,840
because as long as it relies on keyboard

7707
07:14:51,840 --> 07:14:54,718
and mouse and and graphical interactions

7708
07:14:54,718 --> 07:14:56,558
whereas when you implement this like the

7709
07:14:56,558 --> 07:14:59,040
the right hand side then it's at the

7710
07:14:59,040 --> 07:15:00,798
protocol level so if you want to change

7711
07:15:00,798 --> 07:15:02,558
anything it needs a change in the

7712
07:15:02,558 --> 07:15:04,320
protocol which means a change in the

7713
07:15:04,320 --> 07:15:06,000
client and the server so they kind of

7714
07:15:06,000 --> 07:15:09,520
thought they were smart but they weren't

7715
07:15:10,000 --> 07:15:12,718
so nla so it's as i just said

7716
07:15:12,718 --> 07:15:14,478
authentication before the session

7717
07:15:14,478 --> 07:15:16,080
establishment what are the security

7718
07:15:16,080 --> 07:15:18,958
advantages attack surface reduction

7719
07:15:18,958 --> 07:15:22,160
think of all the code that is exercised

7720
07:15:22,160 --> 07:15:23,040
to

7721
07:15:23,040 --> 07:15:24,798
do all of these

7722
07:15:24,798 --> 07:15:27,120
mouse input displays and stuff will i'll

7723
07:15:27,120 --> 07:15:29,040
show a list later

7724
07:15:29,040 --> 07:15:32,718
also does resistance so if um you send

7725
07:15:32,718 --> 07:15:35,040
one packet to connect to rdp and then

7726
07:15:35,040 --> 07:15:37,520
the server replies with like virtual

7727
07:15:37,520 --> 07:15:40,320
channels and and display bitmaps and

7728
07:15:40,320 --> 07:15:42,160
stuff like that then you can do

7729
07:15:42,160 --> 07:15:43,520
potentially

7730
07:15:43,520 --> 07:15:46,558
use that as a denial of service and also

7731
07:15:46,558 --> 07:15:48,718
a lot of resources on the server side

7732
07:15:48,718 --> 07:15:51,520
are allocated to set that up right oh i

7733
07:15:51,520 --> 07:15:53,920
have a client i need to set up a whole

7734
07:15:53,920 --> 07:15:56,160
virtual desktop a whole desktop shell

7735
07:15:56,160 --> 07:15:58,400
and allocate like at least

7736
07:15:58,400 --> 07:16:00,958
60 megs of ram maybe more and so if you

7737
07:16:00,958 --> 07:16:03,280
do that consecutively then you have a

7738
07:16:03,280 --> 07:16:05,280
dos on the server side

7739
07:16:05,280 --> 07:16:07,360
also i was a single sign-on it was

7740
07:16:07,360 --> 07:16:10,000
introduced in rdp 6 by default since

7741
07:16:10,000 --> 07:16:12,638
server 2012 and windows 8. and it's the

7742
07:16:12,638 --> 07:16:16,798
famous tick box usually in a lot of

7743
07:16:16,798 --> 07:16:20,000
legacy system or the shady deployment

7744
07:16:20,000 --> 07:16:22,400
things you'll see like oh go untick that

7745
07:16:22,400 --> 07:16:25,680
you know then you shouldn't do it

7746
07:16:25,680 --> 07:16:27,280
so i mentioned the attack surface

7747
07:16:27,280 --> 07:16:29,920
reduction imagine all of this

7748
07:16:29,920 --> 07:16:32,400
needs to happen at the server side and

7749
07:16:32,400 --> 07:16:34,400
on the client side even before

7750
07:16:34,400 --> 07:16:37,680
authentication is done so the untrusted

7751
07:16:37,680 --> 07:16:40,080
user has access to all that surface and

7752
07:16:40,080 --> 07:16:42,000
this is why they got rid of it

7753
07:16:42,000 --> 07:16:44,958
by using entity

7754
07:16:44,958 --> 07:16:47,600
now what what does the authentication

7755
07:16:47,600 --> 07:16:50,400
part of nla looks like so it's called

7756
07:16:50,400 --> 07:16:53,200
credit ssp and inside the esp nego you

7757
07:16:53,200 --> 07:16:56,718
can do either ntlm or kerberos um

7758
07:16:56,718 --> 07:17:00,558
i'm not super good with the 80s stuff

7759
07:17:00,558 --> 07:17:02,558
i'll need help on and some further

7760
07:17:02,558 --> 07:17:04,718
research is related to that but what's

7761
07:17:04,718 --> 07:17:06,718
interesting that i want you to get out

7762
07:17:06,718 --> 07:17:09,360
of this diagram is that the crypto

7763
07:17:09,360 --> 07:17:11,680
prevents a monster in the middle attack

7764
07:17:11,680 --> 07:17:13,440
because it mixes

7765
07:17:13,440 --> 07:17:14,240
the

7766
07:17:14,240 --> 07:17:16,878
stuff the fingerprint of the public key

7767
07:17:16,878 --> 07:17:19,440
with the challenge which which means

7768
07:17:19,440 --> 07:17:21,120
that you cannot

7769
07:17:21,120 --> 07:17:24,558
uh monster in the middle it in the tls

7770
07:17:24,558 --> 07:17:27,680
sense like negotiate on the one hand and

7771
07:17:27,680 --> 07:17:30,558
then fake a new negotiation to the the

7772
07:17:30,558 --> 07:17:32,878
victim this doesn't work because of that

7773
07:17:32,878 --> 07:17:35,520
mixing the challenge

7774
07:17:35,520 --> 07:17:37,440
so how do we attack nla what are the

7775
07:17:37,440 --> 07:17:39,680
risks so the first one that was obvious

7776
07:17:39,680 --> 07:17:40,798
because i mentioned it earlier is a

7777
07:17:40,798 --> 07:17:44,080
downgrade attack so that works

7778
07:17:44,080 --> 07:17:46,000
um how do you prevent the downward grade

7779
07:17:46,000 --> 07:17:47,840
attack well you enforce nla at the

7780
07:17:47,840 --> 07:17:49,920
server side

7781
07:17:49,920 --> 07:17:51,520
obviously

7782
07:17:51,520 --> 07:17:53,440
and you can also enforce it with

7783
07:17:53,440 --> 07:17:55,360
powershell with group policies which are

7784
07:17:55,360 --> 07:17:58,080
listed here and one of the the the power

7785
07:17:58,080 --> 07:18:01,520
the group policy way prevents users from

7786
07:18:01,520 --> 07:18:04,398
disabling it later even administrators

7787
07:18:04,398 --> 07:18:06,558
which is good

7788
07:18:06,558 --> 07:18:09,280
now we were like okay that's not cool

7789
07:18:09,280 --> 07:18:11,760
but how do we attack these environments

7790
07:18:11,760 --> 07:18:13,360
so we thought well

7791
07:18:13,360 --> 07:18:15,280
if the server decides

7792
07:18:15,280 --> 07:18:17,360
what if and and we are in the network

7793
07:18:17,360 --> 07:18:18,320
path

7794
07:18:18,320 --> 07:18:20,638
how about we redirected to a machine we

7795
07:18:20,638 --> 07:18:22,000
control

7796
07:18:22,000 --> 07:18:23,760
well it works

7797
07:18:23,760 --> 07:18:25,840
so we detect that energy is enforced on

7798
07:18:25,840 --> 07:18:28,638
the server side we decide okay we

7799
07:18:28,638 --> 07:18:29,840
forward the packet to a different

7800
07:18:29,840 --> 07:18:31,200
destination

7801
07:18:31,200 --> 07:18:33,760
uh to a an attacker control none in any

7802
07:18:33,760 --> 07:18:36,798
system and if the user is curious and

7803
07:18:36,798 --> 07:18:39,280
clicks through the warnings he'll get in

7804
07:18:39,280 --> 07:18:40,840
and we'll have

7805
07:18:40,840 --> 07:18:43,280
him so

7806
07:18:43,280 --> 07:18:46,240
this non-led redirection unfortunately

7807
07:18:46,240 --> 07:18:47,200
is

7808
07:18:47,200 --> 07:18:49,680
as designed so we had an exchange on

7809
07:18:49,680 --> 07:18:52,798
twitter i asked the maxcon dremel a very

7810
07:18:52,798 --> 07:18:56,160
prominent expert on rdp like what can be

7811
07:18:56,160 --> 07:18:57,760
done about it isn't there isn't there a

7812
07:18:57,760 --> 07:19:00,718
way to enforce nlp in the client

7813
07:19:00,718 --> 07:19:03,360
and basically it was like

7814
07:19:03,360 --> 07:19:05,200
not really

7815
07:19:05,200 --> 07:19:06,398
and

7816
07:19:06,398 --> 07:19:08,638
unfortunately the more mitigation

7817
07:19:08,638 --> 07:19:11,120
advised the good news that i had is the

7818
07:19:11,120 --> 07:19:12,958
stuff i cut from the deck so i'm going

7819
07:19:12,958 --> 07:19:14,558
to tell you right now if you want to

7820
07:19:14,558 --> 07:19:16,718
mitigate this attack you need to look at

7821
07:19:16,718 --> 07:19:18,000
restricted

7822
07:19:18,000 --> 07:19:21,040
admin or remote credential guard why are

7823
07:19:21,040 --> 07:19:23,200
there two different features

7824
07:19:23,200 --> 07:19:26,160
because one of them works for ad and

7825
07:19:26,160 --> 07:19:28,080
kerberos environment and the other one

7826
07:19:28,080 --> 07:19:30,000
works for when stuff is not domain

7827
07:19:30,000 --> 07:19:32,080
joined so they cannot overlap the

7828
07:19:32,080 --> 07:19:34,478
technologies are just incompatible this

7829
07:19:34,478 --> 07:19:35,920
is why it's not enabled by default and

7830
07:19:35,920 --> 07:19:38,718
this is why this whole thing is a mess

7831
07:19:38,718 --> 07:19:41,280
so the third attack alex bullier who is

7832
07:19:41,280 --> 07:19:43,440
probably or maybe not but he is at

7833
07:19:43,440 --> 07:19:47,520
nordsec um did implement that attack

7834
07:19:47,520 --> 07:19:51,040
and so he uh we we draw we whiteboarded

7835
07:19:51,040 --> 07:19:53,280
this with emilio way back

7836
07:19:53,280 --> 07:19:55,200
and we were like

7837
07:19:55,200 --> 07:19:57,040
they got the crypto right unless we

7838
07:19:57,040 --> 07:19:59,040
found an implementation error there's no

7839
07:19:59,040 --> 07:20:01,280
way we're gonna we're gonna attack that

7840
07:20:01,280 --> 07:20:02,958
and then alex

7841
07:20:02,958 --> 07:20:04,240
uh one day

7842
07:20:04,240 --> 07:20:07,200
working on priority p said well this

7843
07:20:07,200 --> 07:20:09,200
blue part

7844
07:20:09,200 --> 07:20:11,280
you're right we can't attack it

7845
07:20:11,280 --> 07:20:14,080
but the i realized

7846
07:20:14,080 --> 07:20:16,638
after it's done

7847
07:20:16,638 --> 07:20:19,440
we are we fall back to tls

7848
07:20:19,440 --> 07:20:20,638
there's no

7849
07:20:20,638 --> 07:20:24,398
keying material derived from that used

7850
07:20:24,398 --> 07:20:25,760
after

7851
07:20:25,760 --> 07:20:27,040
which means

7852
07:20:27,040 --> 07:20:31,360
that if we have the server's private key

7853
07:20:31,360 --> 07:20:34,398
which works in forensics context or

7854
07:20:34,398 --> 07:20:36,798
honeypot contexts

7855
07:20:36,798 --> 07:20:39,200
well we can't just pass the encrypted

7856
07:20:39,200 --> 07:20:40,240
blob

7857
07:20:40,240 --> 07:20:42,798
don't look at it don't understand it and

7858
07:20:42,798 --> 07:20:45,280
then we fall back to tls and so the

7859
07:20:45,280 --> 07:20:47,760
attack works so we are able to attack

7860
07:20:47,760 --> 07:20:49,840
well we the whole world is able to

7861
07:20:49,840 --> 07:20:53,680
attack rdp nla if and it's a big if you

7862
07:20:53,680 --> 07:20:58,080
have access to the target's private key

7863
07:20:58,718 --> 07:21:01,520
um so i'm gonna demonstrate the nla

7864
07:21:01,520 --> 07:21:03,520
attack

7865
07:21:03,520 --> 07:21:06,398
the nla bypass attack and for this

7866
07:21:06,398 --> 07:21:09,360
specific case we decided to try

7867
07:21:09,360 --> 07:21:12,160
if we use let's encrypt certificate does

7868
07:21:12,160 --> 07:21:14,240
it work do we get warning certificate

7869
07:21:14,240 --> 07:21:16,240
warnings or not do we can we use pretty

7870
07:21:16,240 --> 07:21:20,478
much any cert to attend skate rdp

7871
07:21:20,478 --> 07:21:23,680
and look at this

7872
07:21:26,558 --> 07:21:30,760
i'm gonna pause it a couple times

7873
07:21:30,958 --> 07:21:32,878
so we are connecting so on the left hand

7874
07:21:32,878 --> 07:21:34,320
side is the victim

7875
07:21:34,320 --> 07:21:36,718
on the right hand side the shell is a pi

7876
07:21:36,718 --> 07:21:38,878
rdp running and we are opening the

7877
07:21:38,878 --> 07:21:40,958
player so the player is the interactive

7878
07:21:40,958 --> 07:21:42,638
attack tool where you can take control

7879
07:21:42,638 --> 07:21:44,718
of the rdp session

7880
07:21:44,718 --> 07:21:46,798
so now we set all that up so the victim

7881
07:21:46,798 --> 07:21:48,958
connects first warning

7882
07:21:48,958 --> 07:21:52,000
okay first warning i'm mapping a drive

7883
07:21:52,000 --> 07:21:54,638
so this is expected unless someone click

7884
07:21:54,638 --> 07:21:56,558
don't ask me again i never do that

7885
07:21:56,558 --> 07:21:58,478
because i always want this to be in my

7886
07:21:58,478 --> 07:22:00,718
demos because it's important caveat to

7887
07:22:00,718 --> 07:22:01,920
understand

7888
07:22:01,920 --> 07:22:04,000
so if the users are properly trained

7889
07:22:04,000 --> 07:22:06,000
this doesn't happen

7890
07:22:06,000 --> 07:22:08,240
well i'm clicking through anyway here

7891
07:22:08,240 --> 07:22:10,240
but then

7892
07:22:10,240 --> 07:22:12,000
no certificate

7893
07:22:12,000 --> 07:22:13,600
demonstrated

7894
07:22:13,600 --> 07:22:15,520
i'm authenticating the victim is

7895
07:22:15,520 --> 07:22:17,840
authenticating regularly we have control

7896
07:22:17,840 --> 07:22:19,680
and this is an nla

7897
07:22:19,680 --> 07:22:22,558
system and you can see on the top the

7898
07:22:22,558 --> 07:22:24,958
padlock right so no certificate error

7899
07:22:24,958 --> 07:22:29,040
whatsoever nothing was uh

7900
07:22:29,040 --> 07:22:33,600
no no warnings and the padlock is there

7901
07:22:37,200 --> 07:22:38,320
and then

7902
07:22:38,320 --> 07:22:41,280
access is granted and so

7903
07:22:41,280 --> 07:22:44,240
this now will become a generic a short

7904
07:22:44,240 --> 07:22:46,718
video of the risks of all the stuff that

7905
07:22:46,718 --> 07:22:50,160
we can do once we convey the user to to

7906
07:22:50,160 --> 07:22:52,798
get in like that but think about one

7907
07:22:52,798 --> 07:22:54,878
scenario so many may link someone where

7908
07:22:54,878 --> 07:22:56,558
you have access the private key can be a

7909
07:22:56,558 --> 07:22:59,200
relatively rare occurrence but so one

7910
07:22:59,200 --> 07:23:02,558
way this was weaponized in red teams

7911
07:23:02,558 --> 07:23:06,320
is that you send a dot rdp file as an

7912
07:23:06,320 --> 07:23:08,558
email attachment almost no provider

7913
07:23:08,558 --> 07:23:12,160
blocks it credentials are pre-populated

7914
07:23:12,160 --> 07:23:13,360
we see so

7915
07:23:13,360 --> 07:23:16,000
right now i am capturing all key strokes

7916
07:23:16,000 --> 07:23:17,120
i am

7917
07:23:17,120 --> 07:23:20,878
saving files from the client at the

7918
07:23:20,878 --> 07:23:23,440
attack level without the client knowing

7919
07:23:23,440 --> 07:23:25,600
that files are being looked at

7920
07:23:25,600 --> 07:23:28,000
then we you can save them interactively

7921
07:23:28,000 --> 07:23:30,638
this can also all be automated to be

7922
07:23:30,638 --> 07:23:32,638
done automatically because it doesn't

7923
07:23:32,638 --> 07:23:34,798
scale in a pen test to be looking at

7924
07:23:34,798 --> 07:23:36,798
people's screens like that

7925
07:23:36,798 --> 07:23:40,160
so now we're looking at the secret

7926
07:23:41,120 --> 07:23:42,878
and it was collected and it's a video

7927
07:23:42,878 --> 07:23:46,320
from 80 years ago unfortunately

7928
07:23:46,558 --> 07:23:48,320
but so

7929
07:23:48,320 --> 07:23:51,120
the red the the the red theme technique

7930
07:23:51,120 --> 07:23:53,040
that i just mentioned is called rogue

7931
07:23:53,040 --> 07:23:58,080
rdp there was a nice blog post by um

7932
07:23:58,240 --> 07:24:00,240
ready today guys in my notes i don't

7933
07:24:00,240 --> 07:24:03,680
have access to them um but uh mike mike

7934
07:24:03,680 --> 07:24:05,440
felcher fetcher

7935
07:24:05,440 --> 07:24:08,080
uh a red team guy from the u.s and he's

7936
07:24:08,080 --> 07:24:10,320
pre is very good and very solid and it

7937
07:24:10,320 --> 07:24:13,360
works right because all of the the

7938
07:24:13,360 --> 07:24:16,320
the iocs all of the stuff generated

7939
07:24:16,320 --> 07:24:20,320
is um is coming from legitimate

7940
07:24:20,320 --> 07:24:21,600
processes

7941
07:24:21,600 --> 07:24:24,160
of the windows stuff that works on the

7942
07:24:24,160 --> 07:24:27,920
server and the mstsc on the client side

7943
07:24:27,920 --> 07:24:30,240
so it's kind of something that is flying

7944
07:24:30,240 --> 07:24:32,398
under the radar right now from a lot of

7945
07:24:32,398 --> 07:24:35,680
the edr's perspective

7946
07:24:37,440 --> 07:24:39,200
so now we're taking control so this is

7947
07:24:39,200 --> 07:24:40,958
another feature that i wanted you to

7948
07:24:40,958 --> 07:24:42,320
realize so you can see that on the

7949
07:24:42,320 --> 07:24:44,080
right-hand side stuff is happening

7950
07:24:44,080 --> 07:24:46,080
because we took control but what we do

7951
07:24:46,080 --> 07:24:48,080
on the client side is we just block it

7952
07:24:48,080 --> 07:24:50,718
so we don't you don't see anything

7953
07:24:50,718 --> 07:24:52,398
and then you can run a payload this was

7954
07:24:52,398 --> 07:24:55,520
an example and then um you uh you we can

7955
07:24:55,520 --> 07:24:57,840
give back control to the client and the

7956
07:24:57,840 --> 07:25:00,160
client will have access to the the

7957
07:25:00,160 --> 07:25:02,798
system again

7958
07:25:04,080 --> 07:25:06,718
last is the clipboard stealer so an

7959
07:25:06,718 --> 07:25:08,240
interesting thing about the clipboard

7960
07:25:08,240 --> 07:25:10,558
steeler right now is that i use the

7961
07:25:10,558 --> 07:25:12,718
clipboard on my host

7962
07:25:12,718 --> 07:25:14,718
but it is automatically shared to my

7963
07:25:14,718 --> 07:25:17,280
client vm and this is automatically

7964
07:25:17,280 --> 07:25:19,680
shared to the server and the server

7965
07:25:19,680 --> 07:25:21,840
always says i want it

7966
07:25:21,840 --> 07:25:24,320
so boom clipboard stolen we are

7967
07:25:24,320 --> 07:25:26,558
collecting stuff from bad guys right now

7968
07:25:26,558 --> 07:25:28,080
using this clipboard feature and it's

7969
07:25:28,080 --> 07:25:30,878
pretty interesting chat messages ip

7970
07:25:30,878 --> 07:25:33,360
addresses

7971
07:25:35,120 --> 07:25:37,440
all right

7972
07:25:39,840 --> 07:25:40,718
so

7973
07:25:40,718 --> 07:25:42,320
what's the villain i mentioned at the

7974
07:25:42,320 --> 07:25:45,120
top of the presentation well it's the

7975
07:25:45,120 --> 07:25:47,440
it's a net ntlm hash capture it's a

7976
07:25:47,440 --> 07:25:50,320
feature lissandro added back in november

7977
07:25:50,320 --> 07:25:52,478
november december i reviewed it for a

7978
07:25:52,478 --> 07:25:55,360
long time it was complicated

7979
07:25:55,360 --> 07:25:58,000
so we figured like

7980
07:25:58,000 --> 07:26:00,478
the ntlm exchange okay we need the

7981
07:26:00,478 --> 07:26:02,638
private key for the nla stuff if we want

7982
07:26:02,638 --> 07:26:04,798
to do the nla bypass attack but the

7983
07:26:04,798 --> 07:26:08,320
handshake is still happening can we fake

7984
07:26:08,320 --> 07:26:10,398
our own challenge instead of using the

7985
07:26:10,398 --> 07:26:12,638
servers challenge we we can never do

7986
07:26:12,638 --> 07:26:15,120
anything with it can we generate our own

7987
07:26:15,120 --> 07:26:17,440
challenge and then whatever the client

7988
07:26:17,440 --> 07:26:19,280
sends back to us

7989
07:26:19,280 --> 07:26:22,558
we're going to use it for a crack to

7990
07:26:22,558 --> 07:26:25,040
crack the hash so we can crack that net

7991
07:26:25,040 --> 07:26:27,360
ntlm v2 hash

7992
07:26:27,360 --> 07:26:30,320
and we knew it was gonna work because

7993
07:26:30,320 --> 07:26:33,200
responder implemented it but it's like

7994
07:26:33,200 --> 07:26:37,440
it was super badly documented and um

7995
07:26:37,440 --> 07:26:40,878
responder is not a comprehensive rdp

7996
07:26:40,878 --> 07:26:43,200
system so they really did what they

7997
07:26:43,200 --> 07:26:45,520
needed to do in order to do the attack

7998
07:26:45,520 --> 07:26:47,600
but we wanted to support all rdp

7999
07:26:47,600 --> 07:26:49,840
versions and integrated this in our

8000
07:26:49,840 --> 07:26:52,398
toolkit so we we thank them and we give

8001
07:26:52,398 --> 07:26:54,160
them credit for how come up with the

8002
07:26:54,160 --> 07:26:56,320
attack but we implemented it in our own

8003
07:26:56,320 --> 07:26:57,200
tool

8004
07:26:57,200 --> 07:26:58,080
and so

8005
07:26:58,080 --> 07:27:00,000
what does this looks like is that we

8006
07:27:00,000 --> 07:27:01,840
basically in the monster in the middle

8007
07:27:01,840 --> 07:27:04,558
layer uh send a challenge dimension we

8008
07:27:04,558 --> 07:27:06,478
steal the hash and then you send this to

8009
07:27:06,478 --> 07:27:08,638
john the ripper or hash cap and so it

8010
07:27:08,638 --> 07:27:10,080
looks like this

8011
07:27:10,080 --> 07:27:11,920
and when you crack it with john for

8012
07:27:11,920 --> 07:27:14,240
example with the work list uh you do

8013
07:27:14,240 --> 07:27:16,878
then crack them so again this is a hash

8014
07:27:16,878 --> 07:27:19,680
a hash cracking attack so depending on

8015
07:27:19,680 --> 07:27:22,080
the complexity of the user's password it

8016
07:27:22,080 --> 07:27:24,878
might not yield to automatic results but

8017
07:27:24,878 --> 07:27:26,718
as pentester will tell you the more you

8018
07:27:26,718 --> 07:27:29,760
collect eventually you'll crack one

8019
07:27:29,760 --> 07:27:32,478
so how can you prevent this hash capture

8020
07:27:32,478 --> 07:27:33,760
attack

8021
07:27:33,760 --> 07:27:36,398
you verify the connection to the rdp

8022
07:27:36,398 --> 07:27:40,878
server so server address domain name

8023
07:27:40,878 --> 07:27:43,120
you always look for valid certificates

8024
07:27:43,120 --> 07:27:46,000
but as i've shown you can get a let's

8025
07:27:46,000 --> 07:27:47,600
encrypt one

8026
07:27:47,600 --> 07:27:49,920
and turns out that you don't even need

8027
07:27:49,920 --> 07:27:51,680
to respond to

8028
07:27:51,680 --> 07:27:52,398
the

8029
07:27:52,398 --> 07:27:55,280
the http challenge of let's encrypt in

8030
07:27:55,280 --> 07:27:58,160
order to get one someone after seeing my

8031
07:27:58,160 --> 07:28:01,920
talk sent me a resource on how you can

8032
07:28:01,920 --> 07:28:03,920
generate let's encrypt certificate for

8033
07:28:03,920 --> 07:28:07,120
your lan so there is a way with the eff

8034
07:28:07,120 --> 07:28:09,360
to do that so if attackers would be

8035
07:28:09,360 --> 07:28:12,478
doing this it could get nasty

8036
07:28:12,478 --> 07:28:15,120
but what i wanted to get at is

8037
07:28:15,120 --> 07:28:17,360
how bad really is it and this is where

8038
07:28:17,360 --> 07:28:18,718
we needed to report something to

8039
07:28:18,718 --> 07:28:19,550
microsoft

8040
07:28:19,550 --> 07:28:22,820
[Music]

8041
07:28:23,840 --> 07:28:25,840
so we have our victim on the left attack

8042
07:28:25,840 --> 07:28:28,398
tool on the right

8043
07:28:28,398 --> 07:28:29,520
and

8044
07:28:29,520 --> 07:28:31,680
we're we're connecting

8045
07:28:31,680 --> 07:28:32,798
we're uh

8046
07:28:32,798 --> 07:28:35,520
sending the we're sending a password so

8047
07:28:35,520 --> 07:28:38,080
okay i did a failed login attempt just

8048
07:28:38,080 --> 07:28:39,760
now i know it's super small trust me we

8049
07:28:39,760 --> 07:28:41,440
have the hash at the right hand side it

8050
07:28:41,440 --> 07:28:44,000
doesn't really matter just trust me here

8051
07:28:44,000 --> 07:28:44,718
but

8052
07:28:44,718 --> 07:28:46,320
the

8053
07:28:46,320 --> 07:28:49,680
so i did a login attempt failed but we

8054
07:28:49,680 --> 07:28:51,920
did collect a hash

8055
07:28:51,920 --> 07:28:54,958
but where was the certificate error

8056
07:28:54,958 --> 07:28:57,200
we didn't get it

8057
07:28:57,200 --> 07:28:59,920
is it possible that it happens after so

8058
07:28:59,920 --> 07:29:02,160
this was for a login failed

8059
07:29:02,160 --> 07:29:04,080
even if the login is failing we could

8060
07:29:04,080 --> 07:29:05,920
still crack that hash by the way and get

8061
07:29:05,920 --> 07:29:09,040
the password that the person did input

8062
07:29:09,040 --> 07:29:12,000
so now at the second time i i put in the

8063
07:29:12,000 --> 07:29:14,320
right password whoops missed it from a

8064
07:29:14,320 --> 07:29:16,958
split second

8065
07:29:18,798 --> 07:29:21,840
so if the the user correctly attends

8066
07:29:21,840 --> 07:29:22,958
skate

8067
07:29:22,958 --> 07:29:25,200
you will you will get the hash that you

8068
07:29:25,200 --> 07:29:26,398
could crack

8069
07:29:26,398 --> 07:29:28,240
and the

8070
07:29:28,240 --> 07:29:30,878
this puts the client in just a weird

8071
07:29:30,878 --> 07:29:34,000
state and so it happens to do an rdp

8072
07:29:34,000 --> 07:29:36,558
connection internal air occurred and i

8073
07:29:36,558 --> 07:29:38,320
played i've played with it with this for

8074
07:29:38,320 --> 07:29:41,040
a long time and the internal error is so

8075
07:29:41,040 --> 07:29:43,680
deep that all subsequent connection even

8076
07:29:43,680 --> 07:29:45,680
goods good ones are gonna fail i don't

8077
07:29:45,680 --> 07:29:46,718
know what's

8078
07:29:46,718 --> 07:29:48,398
what's changing in the state of the

8079
07:29:48,398 --> 07:29:50,398
client something's getting really weird

8080
07:29:50,398 --> 07:29:51,680
here

8081
07:29:51,680 --> 07:29:52,878
but so

8082
07:29:52,878 --> 07:29:56,638
this mean that we can collect legit uh

8083
07:29:56,638 --> 07:29:58,718
hash of a user that's successfully

8084
07:29:58,718 --> 07:30:01,360
authenticated and

8085
07:30:01,360 --> 07:30:04,240
the error message

8086
07:30:04,240 --> 07:30:06,958
is kind of not obvious not something

8087
07:30:06,958 --> 07:30:09,040
you're going to report to

8088
07:30:09,040 --> 07:30:11,360
if you're being attacked to your it

8089
07:30:11,360 --> 07:30:14,398
and you have no certificate error

8090
07:30:14,398 --> 07:30:17,200
so this means let's just finish is it

8091
07:30:17,200 --> 07:30:19,360
long i think okay so yeah the video ends

8092
07:30:19,360 --> 07:30:20,080
with

8093
07:30:20,080 --> 07:30:21,840
we're going to take the hash and we're

8094
07:30:21,840 --> 07:30:23,840
gonna crack it and john

8095
07:30:23,840 --> 07:30:26,718
uh i have time because i cut

8096
07:30:26,718 --> 07:30:28,878
so much content so i'll let it go to the

8097
07:30:28,878 --> 07:30:29,840
end

8098
07:30:29,840 --> 07:30:32,000
we'll see

8099
07:30:32,000 --> 07:30:34,080
and the password is a bit you know it's

8100
07:30:34,080 --> 07:30:35,440
purple i think

8101
07:30:35,440 --> 07:30:39,120
but so use john on the hash

8102
07:30:39,120 --> 07:30:40,478
so

8103
07:30:40,478 --> 07:30:42,638
prior tp features can attack a whole

8104
07:30:42,638 --> 07:30:45,440
land by the way so if you are uh in the

8105
07:30:45,440 --> 07:30:48,160
middle on the network path you could you

8106
07:30:48,160 --> 07:30:49,360
know just

8107
07:30:49,360 --> 07:30:51,680
monster in the middle a whole slash 24

8108
07:30:51,680 --> 07:30:53,680
and then just collect these hashes and

8109
07:30:53,680 --> 07:30:55,920
try to make sure that when the user gets

8110
07:30:55,920 --> 07:30:58,240
pissed off you just you know

8111
07:30:58,240 --> 07:30:59,760
shut down the thing so that they can

8112
07:30:59,760 --> 07:31:02,240
work it's pretty destructive attack i

8113
07:31:02,240 --> 07:31:04,320
have to admit but so imagine in an

8114
07:31:04,320 --> 07:31:06,160
internet cafe or something like that so

8115
07:31:06,160 --> 07:31:08,798
here we video finishes with we crack

8116
07:31:08,798 --> 07:31:10,878
that hash

8117
07:31:10,878 --> 07:31:11,920
but so

8118
07:31:11,920 --> 07:31:14,240
what does that mean okay

8119
07:31:14,240 --> 07:31:17,120
it means that pretty much you must never

8120
07:31:17,120 --> 07:31:18,958
use rdp

8121
07:31:18,958 --> 07:31:21,760
on untrusted networks because everything

8122
07:31:21,760 --> 07:31:25,040
by default that could be done was done

8123
07:31:25,040 --> 07:31:27,520
was enabled but still we collect the

8124
07:31:27,520 --> 07:31:29,280
hashes

8125
07:31:29,280 --> 07:31:34,080
so without vpn rdp thrown in the garbage

8126
07:31:34,080 --> 07:31:36,558
or yeah i'm at your home maybe you trust

8127
07:31:36,558 --> 07:31:39,120
your network that's fine

8128
07:31:39,120 --> 07:31:41,040
we're not even in internet cafes much

8129
07:31:41,040 --> 07:31:42,320
anymore anyway

8130
07:31:42,320 --> 07:31:45,520
um but so the other uh thing we can

8131
07:31:45,520 --> 07:31:49,760
recommend is avoid ntlm use kerberos

8132
07:31:49,760 --> 07:31:53,520
and audit ntlm usage i was told this is

8133
07:31:53,520 --> 07:31:57,360
possible but i would need someone with a

8134
07:31:57,360 --> 07:31:59,440
better knowledge of ad to help me in

8135
07:31:59,440 --> 07:32:01,520
that research i just don't have the lab

8136
07:32:01,520 --> 07:32:03,680
or the capacity and or the enterprise

8137
07:32:03,680 --> 07:32:05,440
network to validate that

8138
07:32:05,440 --> 07:32:07,280
and i don't know how practice practical

8139
07:32:07,280 --> 07:32:10,000
this is anyway

8140
07:32:10,398 --> 07:32:12,398
so wrapping up

8141
07:32:12,398 --> 07:32:14,160
attacks on the client what can we do

8142
07:32:14,160 --> 07:32:16,718
what are the risks so we can steal files

8143
07:32:16,718 --> 07:32:19,760
clipboard keystroke record the screen

8144
07:32:19,760 --> 07:32:22,398
uh still hash or plain text credentials

8145
07:32:22,398 --> 07:32:23,920
so if we can perform the downgrade

8146
07:32:23,920 --> 07:32:25,680
attack we still plain text if we can't

8147
07:32:25,680 --> 07:32:28,240
we can still hash passwords we can do

8148
07:32:28,240 --> 07:32:31,040
code execution via dll site loading

8149
07:32:31,040 --> 07:32:33,280
implementation pending but this is what

8150
07:32:33,280 --> 07:32:35,440
the red teamers are doing with the rogue

8151
07:32:35,440 --> 07:32:38,080
rdp system and they are using pi rdp by

8152
07:32:38,080 --> 07:32:40,478
the way but so

8153
07:32:40,478 --> 07:32:42,478
the way i say implementation pending is

8154
07:32:42,478 --> 07:32:44,478
that we have access to the file io

8155
07:32:44,478 --> 07:32:47,520
challenge channel we just created it to

8156
07:32:47,520 --> 07:32:51,360
steal stuff uh right now but probably

8157
07:32:51,360 --> 07:32:53,760
before the next nordsec will have a path

8158
07:32:53,760 --> 07:32:56,398
to write files and so the

8159
07:32:56,398 --> 07:32:59,840
right now trendy attack is you put a dll

8160
07:32:59,840 --> 07:33:03,440
in the team's uh you know very popular

8161
07:33:03,440 --> 07:33:04,398
teams

8162
07:33:04,398 --> 07:33:07,760
chat client and teams is vulnerable to

8163
07:33:07,760 --> 07:33:10,558
dll site loading so you implant a dll

8164
07:33:10,558 --> 07:33:13,680
with the good hijack stuff in it and so

8165
07:33:13,680 --> 07:33:17,440
if you generated the dll

8166
07:33:17,520 --> 07:33:19,680
specifically for the target so it's not

8167
07:33:19,680 --> 07:33:21,920
you know the hash is not known then what

8168
07:33:21,920 --> 07:33:23,360
the what

8169
07:33:23,360 --> 07:33:26,160
ttp can the the blue team really get

8170
07:33:26,160 --> 07:33:28,240
right because this is coming from rdp

8171
07:33:28,240 --> 07:33:30,000
you know stuff that no one's looking at

8172
07:33:30,000 --> 07:33:31,920
right now so i think this is probably a

8173
07:33:31,920 --> 07:33:34,160
very effective red theme technique to

8174
07:33:34,160 --> 07:33:36,398
use but i'm only a researcher so maybe

8175
07:33:36,398 --> 07:33:38,478
the practicality is not there if anyone

8176
07:33:38,478 --> 07:33:40,398
is really trying to use it go look at

8177
07:33:40,398 --> 07:33:43,040
the rogue rdp stuff and if you want help

8178
07:33:43,040 --> 07:33:45,760
or feedback i would be interested

8179
07:33:45,760 --> 07:33:47,760
but we need to talk about the blue stuff

8180
07:33:47,760 --> 07:33:50,798
too right we need to fix this um

8181
07:33:50,798 --> 07:33:52,320
so attack that can be done with the

8182
07:33:52,320 --> 07:33:54,558
server well critical credential brute

8183
07:33:54,558 --> 07:33:56,320
forcing sessions takeover common

8184
07:33:56,320 --> 07:33:59,360
injection as we demonstrated

8185
07:33:59,360 --> 07:34:01,920
now the future we're just just opened up

8186
07:34:01,920 --> 07:34:03,920
so much so

8187
07:34:03,920 --> 07:34:05,920
rd gateway i'm not looking at remote

8188
07:34:05,920 --> 07:34:08,558
desktop gateways at all apparently i can

8189
07:34:08,558 --> 07:34:11,280
probably support them and attack them um

8190
07:34:11,280 --> 07:34:13,120
require i would like to see do we have

8191
07:34:13,120 --> 07:34:15,840
any options for i want the tls

8192
07:34:15,840 --> 07:34:18,080
certificate to come from a specific ca

8193
07:34:18,080 --> 07:34:19,440
otherwise i don't allow the connection

8194
07:34:19,440 --> 07:34:21,280
this would get rid of the whole

8195
07:34:21,280 --> 07:34:24,398
uh let's encrypt can sign any cert and

8196
07:34:24,398 --> 07:34:25,280
this

8197
07:34:25,280 --> 07:34:27,760
makes the user think he's safe

8198
07:34:27,760 --> 07:34:30,718
i want to look at ntm restriction shadow

8199
07:34:30,718 --> 07:34:32,558
framework which is both on the defensive

8200
07:34:32,558 --> 07:34:34,798
and offensive and i want to start

8201
07:34:34,798 --> 07:34:36,718
documenting some of this stuff inside in

8202
07:34:36,718 --> 07:34:38,798
blog posts

8203
07:34:38,798 --> 07:34:40,798
now what are the red theme takeaways i'm

8204
07:34:40,798 --> 07:34:42,558
wrapping this up um

8205
07:34:42,558 --> 07:34:45,360
so rdp is often misconfigured and under

8206
07:34:45,360 --> 07:34:47,520
the radar and you can do more than

8207
07:34:47,520 --> 07:34:50,638
credential brute forcing with it um i

8208
07:34:50,638 --> 07:34:53,120
think so it should become part of your

8209
07:34:53,120 --> 07:34:56,478
attack toolkit and again this is niche

8210
07:34:56,478 --> 07:34:59,600
corner try your regular stuff first but

8211
07:34:59,600 --> 07:35:02,240
think about it once you uh you have you

8212
07:35:02,240 --> 07:35:04,240
you are against walls

8213
07:35:04,240 --> 07:35:07,440
the blue theme takeaways now are never

8214
07:35:07,440 --> 07:35:10,000
allow your employees to use rdp on

8215
07:35:10,000 --> 07:35:12,320
protected networks and i know this is

8216
07:35:12,320 --> 07:35:15,600
completely opposite of the zero trust

8217
07:35:15,600 --> 07:35:17,680
people who are trying to get rid of the

8218
07:35:17,680 --> 07:35:21,040
vpn but you'll have to encapsulate this

8219
07:35:21,040 --> 07:35:23,600
in a web somehow right to remove all of

8220
07:35:23,600 --> 07:35:25,520
these these attacks so

8221
07:35:25,520 --> 07:35:28,240
if you're like oh yeah we're zero trust

8222
07:35:28,240 --> 07:35:30,798
but rdp is still going pla like on its

8223
07:35:30,798 --> 07:35:33,440
own without vpn doesn't work

8224
07:35:33,440 --> 07:35:35,280
um train your users not to click through

8225
07:35:35,280 --> 07:35:36,798
certificate errors

8226
07:35:36,798 --> 07:35:39,280
now make sure nla is enforced by default

8227
07:35:39,280 --> 07:35:41,280
i gave the group policy to do that in

8228
07:35:41,280 --> 07:35:42,398
the talk

8229
07:35:42,398 --> 07:35:45,120
um and long term we'll have to think

8230
07:35:45,120 --> 07:35:47,120
about and you didn't have the research

8231
07:35:47,120 --> 07:35:48,798
unfortunately but you'll have to think

8232
07:35:48,798 --> 07:35:50,878
about rolling out either remote

8233
07:35:50,878 --> 07:35:53,600
credential guard or restricted admin

8234
07:35:53,600 --> 07:35:55,840
for client side enforcement but

8235
07:35:55,840 --> 07:35:58,878
since i've written these lines microsoft

8236
07:35:58,878 --> 07:36:01,120
patched uh

8237
07:36:01,120 --> 07:36:03,200
last patch tuesday maybe not this month

8238
07:36:03,200 --> 07:36:04,878
but the one before

8239
07:36:04,878 --> 07:36:06,798
uh it was a

8240
07:36:06,798 --> 07:36:09,920
critical vulnerability in an enterprise

8241
07:36:09,920 --> 07:36:13,040
network having either of these activated

8242
07:36:13,040 --> 07:36:14,798
so they some some people are still

8243
07:36:14,798 --> 07:36:16,558
finding problems around those security

8244
07:36:16,558 --> 07:36:18,718
technologies

8245
07:36:18,718 --> 07:36:20,878
i want to give a big special shout out

8246
07:36:20,878 --> 07:36:24,080
to mark andre morrow a weight coding

8247
07:36:24,080 --> 07:36:26,958
he works for devolucion and he is really

8248
07:36:26,958 --> 07:36:29,600
helping me validate like when i i i'm

8249
07:36:29,600 --> 07:36:32,160
like is this a vulnerability or does the

8250
07:36:32,160 --> 07:36:33,760
microsoft people are already aware of

8251
07:36:33,760 --> 07:36:35,440
this and he's like no i think i think

8252
07:36:35,440 --> 07:36:36,718
they're not aware of that i think they

8253
07:36:36,718 --> 07:36:38,080
haven't looked at it that way because

8254
07:36:38,080 --> 07:36:40,160
they're not attacking it like you are so

8255
07:36:40,160 --> 07:36:41,920
he helps me a lot

8256
07:36:41,920 --> 07:36:43,520
and um

8257
07:36:43,520 --> 07:36:46,080
together well he he's like

8258
07:36:46,080 --> 07:36:47,680
really connected with the microsoft guys

8259
07:36:47,680 --> 07:36:49,440
and he's like on twitter like tagging

8260
07:36:49,440 --> 07:36:51,440
them and saying like you should look at

8261
07:36:51,440 --> 07:36:54,478
this and reply to this and so devolution

8262
07:36:54,478 --> 07:36:56,398
are really trying to fix the problems of

8263
07:36:56,398 --> 07:36:59,760
rdp that even microsoft is uh is in

8264
07:36:59,760 --> 07:37:02,478
denial of it i opened a case with them

8265
07:37:02,478 --> 07:37:04,638
regarding the the net ntlm attack and

8266
07:37:04,638 --> 07:37:07,280
they said it's as design they closed the

8267
07:37:07,280 --> 07:37:09,680
uh two weeks ago as designed i don't

8268
07:37:09,680 --> 07:37:11,200
know what i'm gonna do with it but i

8269
07:37:11,200 --> 07:37:13,760
mean he he so while i'm looking at

8270
07:37:13,760 --> 07:37:16,080
attacking rdp more he's looking at like

8271
07:37:16,080 --> 07:37:18,398
okay how can we completely ignore it he

8272
07:37:18,398 --> 07:37:20,320
works for the evolution who are

8273
07:37:20,320 --> 07:37:23,360
providers of remote access um

8274
07:37:23,360 --> 07:37:25,680
security and and stuff and they had a

8275
07:37:25,680 --> 07:37:27,920
booth here at nordsec but they are

8276
07:37:27,920 --> 07:37:29,440
really trying to do the right thing and

8277
07:37:29,440 --> 07:37:31,040
have the problem fixed at max in

8278
07:37:31,040 --> 07:37:33,440
microsoft's product

8279
07:37:33,440 --> 07:37:35,040
so i'm going to finish with the thank

8280
07:37:35,040 --> 07:37:37,680
you special thanks to those that made

8281
07:37:37,680 --> 07:37:40,478
party p possible so citronar

8282
07:37:40,478 --> 07:37:43,360
the arty pie guy emilio gonzalez in the

8283
07:37:43,360 --> 07:37:45,040
back francis labelle i haven't seen him

8284
07:37:45,040 --> 07:37:47,040
but you might be here

8285
07:37:47,040 --> 07:37:49,840
maxim cabano in the back alexander you

8286
07:37:49,840 --> 07:37:52,398
and cool acid and so i had a question

8287
07:37:52,398 --> 07:37:54,160
but it's more see you at the panel thank

8288
07:37:54,160 --> 07:37:56,360
you for being here

8289
07:37:56,360 --> 07:38:00,970
[Applause]

8290
07:38:03,020 --> 07:38:04,398
[Applause]

8291
07:38:04,398 --> 07:38:07,040
oh some work olivier awesome

8292
07:38:07,040 --> 07:38:08,958
so don't forget to send your questions

8293
07:38:08,958 --> 07:38:11,280
on sleedo and we'll take a five minute

8294
07:38:11,280 --> 07:38:15,397
break so we'll see you after

8295
07:38:29,340 --> 07:38:37,049
[Music]

8296
07:38:40,550 --> 07:38:45,520
[Music]

8297
07:38:49,640 --> 07:38:52,958
[Music]

8298
07:38:52,958 --> 07:38:54,280
do

8299
07:38:54,280 --> 07:39:09,599
[Music]

8300
07:39:17,270 --> 07:39:23,250
[Music]

8301
07:39:28,500 --> 07:39:48,409
[Music]

8302
07:39:50,718 --> 07:39:53,718
so

8303
07:39:57,200 --> 07:40:03,290
[Music]

8304
07:40:12,820 --> 07:40:20,410
[Music]

8305
07:40:30,878 --> 07:40:33,580
do

8306
07:40:33,580 --> 07:40:36,669
[Music]

8307
07:40:45,120 --> 07:40:48,120
do

8308
07:40:50,720 --> 07:41:19,279
[Music]

8309
07:41:30,360 --> 07:41:33,490
[Music]

8310
07:41:36,970 --> 07:41:40,049
[Music]

8311
07:42:01,800 --> 07:42:08,980
[Music]

8312
07:42:12,090 --> 07:42:15,130
[Music]

8313
07:42:23,180 --> 07:42:32,279
[Music]

8314
07:42:39,460 --> 07:42:42,550
[Music]

8315
07:42:49,760 --> 07:43:05,668
[Music]

8316
07:43:10,080 --> 07:43:13,129
[Music]

8317
07:43:16,130 --> 07:43:30,020
[Music]

8318
07:43:32,590 --> 07:43:35,720
[Music]

8319
07:43:40,530 --> 07:43:43,660
[Music]

8320
07:43:53,350 --> 07:44:08,819
[Music]

8321
07:44:17,610 --> 07:44:25,300
[Music]

8322
07:44:33,270 --> 07:44:36,549
[Music]

8323
07:44:39,310 --> 07:44:42,449
[Music]

8324
07:44:49,620 --> 07:44:52,770
[Music]

8325
07:44:59,920 --> 07:45:07,619
[Music]

8326
07:45:10,090 --> 07:45:15,259
[Music]

8327
07:45:16,798 --> 07:45:19,520
it has a diverse background with several

8328
07:45:19,520 --> 07:45:22,320
experiences in military radio satellite

8329
07:45:22,320 --> 07:45:25,280
iot home automation and all kind of

8330
07:45:25,280 --> 07:45:26,398
fun stuff

8331
07:45:26,398 --> 07:45:28,478
so and i think you you mentioned you

8332
07:45:28,478 --> 07:45:30,240
were working on your on some

8333
07:45:30,240 --> 07:45:32,160
certification so i wish you good luck

8334
07:45:32,160 --> 07:45:33,120
with them

8335
07:45:33,120 --> 07:45:34,000
so

8336
07:45:34,000 --> 07:45:35,760
we're gonna have a talk about passive

8337
07:45:35,760 --> 07:45:38,080
recon and intelligence collection using

8338
07:45:38,080 --> 07:45:41,200
cyber squad domains

8339
07:45:41,200 --> 07:45:44,400
the floor is yours

8340
07:45:44,400 --> 07:45:50,459
[Applause]

8341
07:45:51,360 --> 07:45:53,360
yeah so hi guys um

8342
07:45:53,360 --> 07:45:55,120
thanks for sticking around until the

8343
07:45:55,120 --> 07:45:56,718
last talk of the day

8344
07:45:56,718 --> 07:45:59,120
i know everybody's probably pretty tired

8345
07:45:59,120 --> 07:46:00,878
this is a little bit less

8346
07:46:00,878 --> 07:46:03,280
less high tech than olivier

8347
07:46:03,280 --> 07:46:05,520
so hopefully uh hopefully easy to follow

8348
07:46:05,520 --> 07:46:06,958
along with and if we go through it a

8349
07:46:06,958 --> 07:46:08,878
little bit quicker than half an hour uh

8350
07:46:08,878 --> 07:46:10,878
don't hold me too accountable

8351
07:46:10,878 --> 07:46:11,920
um

8352
07:46:11,920 --> 07:46:14,320
this is a subject that i've been

8353
07:46:14,320 --> 07:46:15,760
thinking about quite a bit since some

8354
07:46:15,760 --> 07:46:17,680
work i did with the army

8355
07:46:17,680 --> 07:46:20,320
uh about two years ago uh taking a look

8356
07:46:20,320 --> 07:46:21,040
at

8357
07:46:21,040 --> 07:46:22,478
domain names in the public

8358
07:46:22,478 --> 07:46:24,240
infrastructure i've been quite curious

8359
07:46:24,240 --> 07:46:27,600
about what's possible with a low sort of

8360
07:46:27,600 --> 07:46:30,080
a low hanging fruit style of attack

8361
07:46:30,080 --> 07:46:31,600
um

8362
07:46:31,600 --> 07:46:32,958
probably a lot of you especially if

8363
07:46:32,958 --> 07:46:34,240
you're more technical familiar with the

8364
07:46:34,240 --> 07:46:36,000
internet the way it works dns not a

8365
07:46:36,000 --> 07:46:39,520
mystery full of vulnerabilities

8366
07:46:39,760 --> 07:46:40,958
in the army we talk about something

8367
07:46:40,958 --> 07:46:43,040
called an asymmetrical attack so the

8368
07:46:43,040 --> 07:46:44,478
cost of putting a roadside bomb for

8369
07:46:44,478 --> 07:46:45,920
example

8370
07:46:45,920 --> 07:46:47,680
is a fraction of the cost of defending

8371
07:46:47,680 --> 07:46:49,120
against that attack

8372
07:46:49,120 --> 07:46:51,360
i think this is a similar

8373
07:46:51,360 --> 07:46:53,440
a similar thing in cyberspace that's

8374
07:46:53,440 --> 07:46:54,878
worth considering it's something that's

8375
07:46:54,878 --> 07:46:55,920
been around for a long time and we'll

8376
07:46:55,920 --> 07:46:58,798
dig into that a little bit

8377
07:46:58,798 --> 07:47:00,558
um yeah so

8378
07:47:00,558 --> 07:47:02,958
introduction uh currently stock analyst

8379
07:47:02,958 --> 07:47:04,638
at commissioners de quebec

8380
07:47:04,638 --> 07:47:06,398
uh big thanks to jp and the rest of the

8381
07:47:06,398 --> 07:47:08,718
team for encouraging me to

8382
07:47:08,718 --> 07:47:10,398
to come up here today and give my first

8383
07:47:10,398 --> 07:47:14,478
talk at a security conference um

8384
07:47:15,090 --> 07:47:18,240
[Applause]

8385
07:47:18,240 --> 07:47:20,240
it's a it's a hell of a place to do it

8386
07:47:20,240 --> 07:47:22,000
too so it's exciting

8387
07:47:22,000 --> 07:47:22,878
uh

8388
07:47:22,878 --> 07:47:24,798
also cyber protection team lead uh with

8389
07:47:24,798 --> 07:47:26,638
34 signal regiment in westmount we're a

8390
07:47:26,638 --> 07:47:28,320
reserve unit in the army

8391
07:47:28,320 --> 07:47:30,000
uh previously spent many years working

8392
07:47:30,000 --> 07:47:32,160
as a home automation integrator a smart

8393
07:47:32,160 --> 07:47:34,558
home guy a lot of custom av

8394
07:47:34,558 --> 07:47:36,160
home theaters

8395
07:47:36,160 --> 07:47:39,040
lighting control hvac that kind of thing

8396
07:47:39,040 --> 07:47:41,280
um also software product manager for a

8397
07:47:41,280 --> 07:47:43,120
mobile app uh where i spent a lot of

8398
07:47:43,120 --> 07:47:44,638
time dealing specifically with user

8399
07:47:44,638 --> 07:47:46,478
behavior and user issues um so there's a

8400
07:47:46,478 --> 07:47:48,240
lot of overlap there too i think this

8401
07:47:48,240 --> 07:47:49,600
talk is a bit of a culmination of a lot

8402
07:47:49,600 --> 07:47:50,840
of my

8403
07:47:50,840 --> 07:47:52,558
experience

8404
07:47:52,558 --> 07:47:53,760
so what's on the agenda i want to talk

8405
07:47:53,760 --> 07:47:55,920
quickly about human fallacy and the role

8406
07:47:55,920 --> 07:47:58,320
it plays in some attacks i want to talk

8407
07:47:58,320 --> 07:48:00,000
about dns specifically some of the

8408
07:48:00,000 --> 07:48:02,398
challenges with that and email security

8409
07:48:02,398 --> 07:48:04,478
challenges

8410
07:48:04,478 --> 07:48:05,520
we're going to take a closer look at

8411
07:48:05,520 --> 07:48:07,520
cyber squatting and maybe refresher for

8412
07:48:07,520 --> 07:48:09,200
some of you maybe some new angles to

8413
07:48:09,200 --> 07:48:11,520
think about um and then i want to bring

8414
07:48:11,520 --> 07:48:13,520
you sort of on the inside of a little

8415
07:48:13,520 --> 07:48:15,680
evil experiment that i conducted

8416
07:48:15,680 --> 07:48:18,398
uh over the last uh 45 days

8417
07:48:18,398 --> 07:48:20,000
um then obviously we'll talk about

8418
07:48:20,000 --> 07:48:20,958
protecting ourselves and our

8419
07:48:20,958 --> 07:48:22,718
organizations and then some closing

8420
07:48:22,718 --> 07:48:23,760
thoughts

8421
07:48:23,760 --> 07:48:24,878
maybe we can talk about more in the

8422
07:48:24,878 --> 07:48:26,878
panel

8423
07:48:26,878 --> 07:48:28,080
so

8424
07:48:28,080 --> 07:48:29,440
it's a cartoon that resonates with me

8425
07:48:29,440 --> 07:48:31,760
pretty well on one side we've got

8426
07:48:31,760 --> 07:48:33,600
data security and firewalls and

8427
07:48:33,600 --> 07:48:34,798
everything that goes along with that on

8428
07:48:34,798 --> 07:48:36,478
the other side we have dave who's the

8429
07:48:36,478 --> 07:48:37,600
walking

8430
07:48:37,600 --> 07:48:39,920
epitome of human error

8431
07:48:39,920 --> 07:48:41,360
um

8432
07:48:41,360 --> 07:48:42,878
because the point is that

8433
07:48:42,878 --> 07:48:44,638
you put a lot of technical controls in

8434
07:48:44,638 --> 07:48:46,000
place but it's really hard to account

8435
07:48:46,000 --> 07:48:49,520
for some of the human factors involved

8436
07:48:49,520 --> 07:48:51,600
now we see that firsthand a recent

8437
07:48:51,600 --> 07:48:54,320
report probably all saw this in the news

8438
07:48:54,320 --> 07:48:56,160
it was released by bellingcat a bunch of

8439
07:48:56,160 --> 07:48:58,080
us soldiers were using flashcards to

8440
07:48:58,080 --> 07:48:59,520
study overseas

8441
07:48:59,520 --> 07:49:02,878
and we're leaking top nuclear secrets

8442
07:49:02,878 --> 07:49:04,478
some of the most top-secret information

8443
07:49:04,478 --> 07:49:06,240
in the united states

8444
07:49:06,240 --> 07:49:09,120
was revealed 100 human error

8445
07:49:09,120 --> 07:49:11,280
opsec issue there

8446
07:49:11,280 --> 07:49:13,760
more recently city of ottawa we saw

8447
07:49:13,760 --> 07:49:16,798
humans involved in a scam

8448
07:49:16,798 --> 07:49:18,638
a social engineering experiment where

8449
07:49:18,638 --> 07:49:20,478
somebody was pretending to be a a

8450
07:49:20,478 --> 07:49:22,160
partner on behalf of the salvation army

8451
07:49:22,160 --> 07:49:23,600
requesting the city of ottawa changed

8452
07:49:23,600 --> 07:49:24,798
the bank account that they transferred

8453
07:49:24,798 --> 07:49:27,200
money to they made a way with 558

8454
07:49:27,200 --> 07:49:30,958
thousand dollars in city funds 100 human

8455
07:49:30,958 --> 07:49:32,478
driven

8456
07:49:32,478 --> 07:49:35,040
probably my favorite example if anybody

8457
07:49:35,040 --> 07:49:36,478
should be secure it's the president of

8458
07:49:36,478 --> 07:49:38,398
the united states

8459
07:49:38,398 --> 07:49:40,080
opsec fail

8460
07:49:40,080 --> 07:49:42,000
even surrounded by

8461
07:49:42,000 --> 07:49:43,440
the best people in the world in cyber

8462
07:49:43,440 --> 07:49:45,200
security arguably

8463
07:49:45,200 --> 07:49:47,120
still using a password like mega 2020

8464
07:49:47,120 --> 07:49:48,878
was the first example if i remember

8465
07:49:48,878 --> 07:49:50,958
correctly second one was you're fired

8466
07:49:50,958 --> 07:49:52,558
happened twice his account was guessed

8467
07:49:52,558 --> 07:49:55,280
by security researchers from uh

8468
07:49:55,280 --> 07:49:56,840
from i think it was

8469
07:49:56,840 --> 07:49:59,440
denmark so why does all of this matter

8470
07:49:59,440 --> 07:50:01,040
um

8471
07:50:01,040 --> 07:50:02,478
you know according to

8472
07:50:02,478 --> 07:50:05,440
agress report 94 of organizations have

8473
07:50:05,440 --> 07:50:08,080
experienced a data breach

8474
07:50:08,080 --> 07:50:09,520
in the last year with human error being

8475
07:50:09,520 --> 07:50:12,718
the leading cause of serious incidents

8476
07:50:12,718 --> 07:50:14,878
on the other hand only 21 of technology

8477
07:50:14,878 --> 07:50:17,120
leaders surveyed said that human error

8478
07:50:17,120 --> 07:50:19,760
was their biggest concern

8479
07:50:19,760 --> 07:50:23,040
mid pandemic this issue has only grown

8480
07:50:23,040 --> 07:50:25,040
accidental and improper sharing of data

8481
07:50:25,040 --> 07:50:27,120
by employees has grown to become

8482
07:50:27,120 --> 07:50:28,478
probably one of the most critical

8483
07:50:28,478 --> 07:50:30,558
threats facing or concerning security

8484
07:50:30,558 --> 07:50:31,520
leaders

8485
07:50:31,520 --> 07:50:34,000
and then finally uh the last

8486
07:50:34,000 --> 07:50:36,798
five years and even up to today we see a

8487
07:50:36,798 --> 07:50:38,398
growing concern with the introduction of

8488
07:50:38,398 --> 07:50:40,638
things like gdpr

8489
07:50:40,638 --> 07:50:42,240
privacy protection laws ccpa in

8490
07:50:42,240 --> 07:50:43,680
california

8491
07:50:43,680 --> 07:50:46,000
more close to home bills bill 64 in

8492
07:50:46,000 --> 07:50:48,798
quebec and other such privacy regimes

8493
07:50:48,798 --> 07:50:50,478
where the penalties imposed on

8494
07:50:50,478 --> 07:50:52,558
organizations and the costs incurred are

8495
07:50:52,558 --> 07:50:54,320
much much higher and it's now a

8496
07:50:54,320 --> 07:50:55,680
regulated

8497
07:50:55,680 --> 07:50:58,160
uh issue it's it's no longer should we

8498
07:50:58,160 --> 07:50:59,680
care about security it's uh you better

8499
07:50:59,680 --> 07:51:00,798
care about security or it's going to

8500
07:51:00,798 --> 07:51:03,440
cost a lot of money to the organization

8501
07:51:03,440 --> 07:51:05,360
and in some cases even criminal

8502
07:51:05,360 --> 07:51:07,760
liability

8503
07:51:07,760 --> 07:51:08,398
so

8504
07:51:08,398 --> 07:51:09,520
let's back up a little bit let's talk

8505
07:51:09,520 --> 07:51:11,120
about what is dns i'm not going to read

8506
07:51:11,120 --> 07:51:12,240
the slide i'm not going to take you

8507
07:51:12,240 --> 07:51:14,000
through how dns works you can do that

8508
07:51:14,000 --> 07:51:16,878
research on your own but essentially

8509
07:51:16,878 --> 07:51:20,160
dns is a system that is designed

8510
07:51:20,160 --> 07:51:23,760
to point users to ip addresses and and

8511
07:51:23,760 --> 07:51:25,360
software applications to ip addresses

8512
07:51:25,360 --> 07:51:26,718
because humans have a hard time

8513
07:51:26,718 --> 07:51:28,398
remembering ip addresses names are a lot

8514
07:51:28,398 --> 07:51:30,798
easier to remember

8515
07:51:30,798 --> 07:51:32,958
dns has a long history started all the

8516
07:51:32,958 --> 07:51:35,360
way back with arpanet in 1972 the

8517
07:51:35,360 --> 07:51:37,760
concept of a of a host or an arpanet

8518
07:51:37,760 --> 07:51:40,478
host name was was introduced and then

8519
07:51:40,478 --> 07:51:43,040
dr paul mock petrus pioneer of dns

8520
07:51:43,040 --> 07:51:45,000
publishes rfcs

8521
07:51:45,000 --> 07:51:48,240
88283 with some evolutions by 1986 into

8522
07:51:48,240 --> 07:51:50,878
rfc 973

8523
07:51:50,878 --> 07:51:54,240
and finally you know the isc is founded

8524
07:51:54,240 --> 07:51:55,840
dns systems that we still use today like

8525
07:51:55,840 --> 07:51:59,920
bind or introduced by 1987 with rfc 1034

8526
07:51:59,920 --> 07:52:02,080
1035 we basically have the dns that we

8527
07:52:02,080 --> 07:52:03,360
still have today

8528
07:52:03,360 --> 07:52:05,360
uh it's a 30 year old technology that

8529
07:52:05,360 --> 07:52:08,240
hasn't really evolved in 30 years

8530
07:52:08,240 --> 07:52:09,760
long before a time when people were

8531
07:52:09,760 --> 07:52:10,878
thinking about cyber security and what

8532
07:52:10,878 --> 07:52:12,240
are the security implications of the way

8533
07:52:12,240 --> 07:52:14,478
dns works

8534
07:52:14,478 --> 07:52:15,760
for those of you who study internet

8535
07:52:15,760 --> 07:52:16,878
history you'll know that the internet

8536
07:52:16,878 --> 07:52:19,440
was not designed to be secure

8537
07:52:19,440 --> 07:52:20,958
it was designed to be robust so a

8538
07:52:20,958 --> 07:52:23,200
decentralized naming system was designed

8539
07:52:23,200 --> 07:52:24,080
to

8540
07:52:24,080 --> 07:52:25,680
stop a bomb from destroying our

8541
07:52:25,680 --> 07:52:27,600
infrastructure and it was to route

8542
07:52:27,600 --> 07:52:29,440
packets and be resilient

8543
07:52:29,440 --> 07:52:31,360
but not necessarily concerned about data

8544
07:52:31,360 --> 07:52:34,240
security or privacy

8545
07:52:34,478 --> 07:52:36,638
so important considerations

8546
07:52:36,638 --> 07:52:37,680
for

8547
07:52:37,680 --> 07:52:38,958
putting on the black hat for a second

8548
07:52:38,958 --> 07:52:41,040
the important consideration is dns not

8549
07:52:41,040 --> 07:52:43,600
built with security in mind

8550
07:52:43,600 --> 07:52:45,040
we didn't talk about it but you probably

8551
07:52:45,040 --> 07:52:46,638
all know it's very trivial to register a

8552
07:52:46,638 --> 07:52:48,878
domain name you can do it anonymously go

8553
07:52:48,878 --> 07:52:51,680
buy a prepaid credit card at shell

8554
07:52:51,680 --> 07:52:53,440
throw it into your registrar of choice

8555
07:52:53,440 --> 07:52:55,280
and register a domain name

8556
07:52:55,280 --> 07:52:56,958
it's very inexpensive

8557
07:52:56,958 --> 07:52:58,878
and finally humans often make mistakes

8558
07:52:58,878 --> 07:53:01,120
and the component that dns

8559
07:53:01,120 --> 07:53:02,878
relies on is human input more than

8560
07:53:02,878 --> 07:53:05,440
anything it's built for humans so those

8561
07:53:05,440 --> 07:53:08,398
are the things we want to keep in mind

8562
07:53:08,398 --> 07:53:10,320
step aside for a second look at email

8563
07:53:10,320 --> 07:53:12,558
let's look at email

8564
07:53:12,558 --> 07:53:14,638
you know again first thing we'll notice

8565
07:53:14,638 --> 07:53:17,520
is as we look at the diagram is that

8566
07:53:17,520 --> 07:53:19,120
the very first step in composing an

8567
07:53:19,120 --> 07:53:21,120
email is choosing a recipient and how do

8568
07:53:21,120 --> 07:53:22,798
you how do you designate a recipient you

8569
07:53:22,798 --> 07:53:25,120
put in a name add a domain

8570
07:53:25,120 --> 07:53:27,120
and right away email is dependent on the

8571
07:53:27,120 --> 07:53:28,798
domain name system

8572
07:53:28,798 --> 07:53:30,240
and

8573
07:53:30,240 --> 07:53:32,000
if we take

8574
07:53:32,000 --> 07:53:33,840
forgetting the details of email if we

8575
07:53:33,840 --> 07:53:34,718
take

8576
07:53:34,718 --> 07:53:35,520
uh

8577
07:53:35,520 --> 07:53:37,120
this concept that dns is inherently

8578
07:53:37,120 --> 07:53:38,240
insecure

8579
07:53:38,240 --> 07:53:40,080
if email is dependent on it well then

8580
07:53:40,080 --> 07:53:43,718
email is also insecure

8581
07:53:44,638 --> 07:53:46,638
history of email very similar timeline

8582
07:53:46,638 --> 07:53:47,440
i'm not going to go through it

8583
07:53:47,440 --> 07:53:49,360
completely but roughly the same timeline

8584
07:53:49,360 --> 07:53:50,958
we're looking at email that by and large

8585
07:53:50,958 --> 07:53:52,320
hasn't changed and i know some of you

8586
07:53:52,320 --> 07:53:54,240
are probably thinking what about dns sec

8587
07:53:54,240 --> 07:53:56,080
and what about encryption and what about

8588
07:53:56,080 --> 07:53:57,920
all of these other protocol extensions

8589
07:53:57,920 --> 07:53:59,840
that have come to pass since then

8590
07:53:59,840 --> 07:54:01,200
well

8591
07:54:01,200 --> 07:54:02,478
let's do an exercise show of hands who

8592
07:54:02,478 --> 07:54:04,080
sent an encrypted email in the last

8593
07:54:04,080 --> 07:54:06,398
month

8594
07:54:07,040 --> 07:54:08,718
okay i see about five percent of the

8595
07:54:08,718 --> 07:54:10,878
room has done that now show hands who

8596
07:54:10,878 --> 07:54:12,558
sent a sensitive document by email in

8597
07:54:12,558 --> 07:54:15,040
the last month

8598
07:54:16,798 --> 07:54:17,920
okay

8599
07:54:17,920 --> 07:54:20,320
so different people different priorities

8600
07:54:20,320 --> 07:54:22,558
it's

8601
07:54:23,600 --> 07:54:25,040
maybe not the effect i was looking for

8602
07:54:25,040 --> 07:54:26,000
there but

8603
07:54:26,000 --> 07:54:28,478
um the point is that email is

8604
07:54:28,478 --> 07:54:29,440
um

8605
07:54:29,440 --> 07:54:31,120
you know basically unchanged since the

8606
07:54:31,120 --> 07:54:32,798
last 30 years with with some minor

8607
07:54:32,798 --> 07:54:34,798
caveats

8608
07:54:34,798 --> 07:54:36,320
important considerations we know email's

8609
07:54:36,320 --> 07:54:37,600
not built with security or privacy in

8610
07:54:37,600 --> 07:54:39,520
mind really it's trivial to send or

8611
07:54:39,520 --> 07:54:41,280
receive emails anonymously

8612
07:54:41,280 --> 07:54:43,280
it's actually quite easy to stand up and

8613
07:54:43,280 --> 07:54:45,520
operate an inexpensive

8614
07:54:45,520 --> 07:54:47,920
email server or email infrastructure and

8615
07:54:47,920 --> 07:54:49,280
once again humans make mistakes and they

8616
07:54:49,280 --> 07:54:52,798
make them quite often

8617
07:54:52,798 --> 07:54:55,040
let's move into cyber squatting

8618
07:54:55,040 --> 07:54:56,878
so

8619
07:54:56,878 --> 07:54:57,840
i'm sure you all know what cyber

8620
07:54:57,840 --> 07:54:59,520
squatting is but basically it's the

8621
07:54:59,520 --> 07:55:01,440
practice of registering a domain name

8622
07:55:01,440 --> 07:55:03,440
with the intention of infringing upon

8623
07:55:03,440 --> 07:55:06,558
the intended destination of the user so

8624
07:55:06,558 --> 07:55:08,718
uh i could register selfsec that might

8625
07:55:08,718 --> 07:55:10,958
be a form of domain squatting trying to

8626
07:55:10,958 --> 07:55:12,958
leverage the trademark of north sec just

8627
07:55:12,958 --> 07:55:15,680
one shitty example

8628
07:55:15,680 --> 07:55:18,398
many different types of cyber squatting

8629
07:55:18,398 --> 07:55:20,398
if you break them down into categories

8630
07:55:20,398 --> 07:55:22,000
we can look at typo squatting which is

8631
07:55:22,000 --> 07:55:24,160
quite common so in this example we have

8632
07:55:24,160 --> 07:55:26,398
something like gmail or facebook with an

8633
07:55:26,398 --> 07:55:28,398
extra o simple typo mistake put in by

8634
07:55:28,398 --> 07:55:29,600
the user

8635
07:55:29,600 --> 07:55:30,878
we have bit squatting which is really

8636
07:55:30,878 --> 07:55:32,080
interesting

8637
07:55:32,080 --> 07:55:34,638
it's when you know cosmic radiation from

8638
07:55:34,638 --> 07:55:36,398
outer space comes and interferes with

8639
07:55:36,398 --> 07:55:38,240
whatever's stored in your memory and

8640
07:55:38,240 --> 07:55:40,718
flips a bit in the character and all of

8641
07:55:40,718 --> 07:55:42,558
a sudden you typed in microsoft but you

8642
07:55:42,558 --> 07:55:45,680
ended up with microsoft.com uh in in

8643
07:55:45,680 --> 07:55:47,600
memory in the computer and that's what

8644
07:55:47,600 --> 07:55:50,878
gets processed by in this case dns

8645
07:55:50,878 --> 07:55:53,760
combo squatting so taking a brand name

8646
07:55:53,760 --> 07:55:55,600
putting a dash and some other truss word

8647
07:55:55,600 --> 07:55:57,040
or something like that

8648
07:55:57,040 --> 07:55:58,558
it's not owned by fedex but it's made to

8649
07:55:58,558 --> 07:55:59,920
look like it is

8650
07:55:59,920 --> 07:56:01,600
homograph squatting which this is an

8651
07:56:01,600 --> 07:56:03,280
interesting example

8652
07:56:03,280 --> 07:56:06,558
a hotmail to a human looks exactly the

8653
07:56:06,558 --> 07:56:09,840
same as hotmail to a human but in this

8654
07:56:09,840 --> 07:56:11,760
case it's a different character it's not

8655
07:56:11,760 --> 07:56:13,120
the same character that's registered and

8656
07:56:13,120 --> 07:56:14,798
dnsed

8657
07:56:14,798 --> 07:56:16,558
finally paypal this one is a shout out

8658
07:56:16,558 --> 07:56:18,398
to the francophones out there

8659
07:56:18,398 --> 07:56:19,520
uh

8660
07:56:19,520 --> 07:56:22,798
p a i e pal dot c a um

8661
07:56:22,798 --> 07:56:24,080
and then level squatting is another

8662
07:56:24,080 --> 07:56:25,360
interesting technique that we see a lot

8663
07:56:25,360 --> 07:56:26,798
especially with mobile given limited

8664
07:56:26,798 --> 07:56:28,320
screen size

8665
07:56:28,320 --> 07:56:29,680
sometimes what happens is the domain

8666
07:56:29,680 --> 07:56:31,360
name is truncated to the left-hand side

8667
07:56:31,360 --> 07:56:32,558
and everything on the right-hand side is

8668
07:56:32,558 --> 07:56:34,398
ignored so you know the user's not

8669
07:56:34,398 --> 07:56:36,478
actually paying attention to the real

8670
07:56:36,478 --> 07:56:39,520
domain or tld

8671
07:56:40,080 --> 07:56:41,040
so

8672
07:56:41,040 --> 07:56:42,558
cyber squatting not a mystery we see it

8673
07:56:42,558 --> 07:56:43,520
all the time

8674
07:56:43,520 --> 07:56:45,760
it's very common in phishing campaigns

8675
07:56:45,760 --> 07:56:47,280
uh you know as a way to bait people into

8676
07:56:47,280 --> 07:56:49,200
clicking links that seem trustworthy

8677
07:56:49,200 --> 07:56:50,638
it's also a very common technique in

8678
07:56:50,638 --> 07:56:52,000
spam and marketing

8679
07:56:52,000 --> 07:56:53,040
um

8680
07:56:53,040 --> 07:56:54,398
one thing that's maybe a little less

8681
07:56:54,398 --> 07:56:56,320
common but still out there is you know

8682
07:56:56,320 --> 07:56:57,680
watering hole attacks man in the middle

8683
07:56:57,680 --> 07:56:59,840
attacks and finally the thing i want to

8684
07:56:59,840 --> 07:57:01,360
focus on today

8685
07:57:01,360 --> 07:57:03,040
is intelligence collection and using

8686
07:57:03,040 --> 07:57:05,200
this as a tool to to gather information

8687
07:57:05,200 --> 07:57:07,680
against a target

8688
07:57:07,680 --> 07:57:09,200
so let's get to the fun part time for

8689
07:57:09,200 --> 07:57:11,200
the experiment

8690
07:57:11,200 --> 07:57:13,360
um i want to put a disclaimer out here

8691
07:57:13,360 --> 07:57:15,760
so uh when i started this thing

8692
07:57:15,760 --> 07:57:17,360
i didn't know what i was going to find i

8693
07:57:17,360 --> 07:57:18,878
was kind of hoping like maybe somebody's

8694
07:57:18,878 --> 07:57:20,240
going to send me an email and it'll be

8695
07:57:20,240 --> 07:57:21,360
interesting

8696
07:57:21,360 --> 07:57:22,798
it turns out i actually collected an

8697
07:57:22,798 --> 07:57:24,718
enormous amount of personal private

8698
07:57:24,718 --> 07:57:26,558
sensitive information

8699
07:57:26,558 --> 07:57:28,000
none of it's going to be shared it's all

8700
07:57:28,000 --> 07:57:29,040
going to be anonymized i'm going to give

8701
07:57:29,040 --> 07:57:31,040
you the meta analysis and

8702
07:57:31,040 --> 07:57:32,878
everything that i've captured is

8703
07:57:32,878 --> 07:57:34,398
basically analyzed and deleted on the

8704
07:57:34,398 --> 07:57:36,080
spot i'm not storing i'm not interested

8705
07:57:36,080 --> 07:57:37,920
in anybody's private data but i am

8706
07:57:37,920 --> 07:57:39,840
interested in in showing what's possible

8707
07:57:39,840 --> 07:57:42,080
with this kind of attack

8708
07:57:42,080 --> 07:57:44,080
so i had a few hypotheses going into

8709
07:57:44,080 --> 07:57:46,240
this thing my first one was that some

8710
07:57:46,240 --> 07:57:48,160
small but you know given a large enough

8711
07:57:48,160 --> 07:57:51,520
scale not insignificant number of users

8712
07:57:51,520 --> 07:57:53,200
will mistype the domain name of a

8713
07:57:53,200 --> 07:57:56,240
popular uh or you know email address

8714
07:57:56,240 --> 07:57:57,760
when they're typing in their recipient

8715
07:57:57,760 --> 07:58:00,478
i'm going to mistype the domain

8716
07:58:00,478 --> 07:58:01,760
we should be able to register some of

8717
07:58:01,760 --> 07:58:03,360
those type of squad variants they

8718
07:58:03,360 --> 07:58:05,120
shouldn't be that expensive

8719
07:58:05,120 --> 07:58:06,000
and

8720
07:58:06,000 --> 07:58:07,520
we should yeah we should be able to do

8721
07:58:07,520 --> 07:58:10,160
that easily and then finally

8722
07:58:10,160 --> 07:58:11,840
the hypotheses if i put a catch-all

8723
07:58:11,840 --> 07:58:13,440
email address on the end of that typo

8724
07:58:13,440 --> 07:58:14,878
squatted domain

8725
07:58:14,878 --> 07:58:17,280
i should start receiving emails intended

8726
07:58:17,280 --> 07:58:19,520
for other people but they're coming to

8727
07:58:19,520 --> 07:58:20,878
me

8728
07:58:20,878 --> 07:58:22,878
so some of the key questions i had is

8729
07:58:22,878 --> 07:58:24,398
what kind of data can we capture this

8730
07:58:24,398 --> 07:58:25,120
way

8731
07:58:25,120 --> 07:58:26,958
is it possible to remain passive and

8732
07:58:26,958 --> 07:58:29,200
anonymous in doing so

8733
07:58:29,200 --> 07:58:32,320
and can we employ similar techniques um

8734
07:58:32,320 --> 07:58:34,320
or sorry can we detect other actors

8735
07:58:34,320 --> 07:58:36,080
employing similar techniques can we

8736
07:58:36,080 --> 07:58:38,160
hypothesize who might be out there doing

8737
07:58:38,160 --> 07:58:39,360
similar approach

8738
07:58:39,360 --> 07:58:40,878
and finally how can we defend ourselves

8739
07:58:40,878 --> 07:58:43,520
against such an attack

8740
07:58:43,520 --> 07:58:44,398
so

8741
07:58:44,398 --> 07:58:45,760
you remember the email diagram from

8742
07:58:45,760 --> 07:58:47,840
before so this is a shitty edit i've

8743
07:58:47,840 --> 07:58:50,958
made to it to sort of convey the idea so

8744
07:58:50,958 --> 07:58:54,000
alice means to send an email to bob at

8745
07:58:54,000 --> 07:58:56,478
b.org but he mistypes and he types in

8746
07:58:56,478 --> 07:58:58,478
bob c.org

8747
07:58:58,478 --> 07:58:59,760
well

8748
07:58:59,760 --> 07:59:01,280
the email server has no problem with

8749
07:59:01,280 --> 07:59:03,440
that the email application accepts it

8750
07:59:03,440 --> 07:59:05,520
sends it for an ns look up and there's

8751
07:59:05,520 --> 07:59:07,520
an mx record at c.org and it says yeah

8752
07:59:07,520 --> 07:59:08,478
sure

8753
07:59:08,478 --> 07:59:10,398
i'll take an email yeah we've got a

8754
07:59:10,398 --> 07:59:11,920
catch-all email address i'm happy to

8755
07:59:11,920 --> 07:59:15,360
receive an email for bob at c.org

8756
07:59:15,360 --> 07:59:16,718
and the email gets processed and

8757
07:59:16,718 --> 07:59:18,878
delivered right into in this case the

8758
07:59:18,878 --> 07:59:20,798
attacker or the malicious listeners

8759
07:59:20,798 --> 07:59:23,520
email inbox

8760
07:59:24,240 --> 07:59:25,840
so

8761
07:59:25,840 --> 07:59:28,240
just a little bit of info to set you up

8762
07:59:28,240 --> 07:59:29,760
for you know

8763
07:59:29,760 --> 07:59:32,398
how the experiment is set up

8764
07:59:32,398 --> 07:59:33,840
we have 12 different domain names that

8765
07:59:33,840 --> 07:59:35,280
were registered and i want to give a

8766
07:59:35,280 --> 07:59:37,040
thank uh thanks a shout out to a

8767
07:59:37,040 --> 07:59:38,320
colleague of mine at commissioners i

8768
07:59:38,320 --> 07:59:40,638
don't is here today simone who uh who

8769
07:59:40,638 --> 07:59:42,320
had also done some similar work here and

8770
07:59:42,320 --> 07:59:45,360
was able to help me get this set up

8771
07:59:45,360 --> 07:59:47,120
we set them up on a shared webmail inbox

8772
07:59:47,120 --> 07:59:48,558
with a catch-all email address on every

8773
07:59:48,558 --> 07:59:50,398
single one of those domains and we let

8774
07:59:50,398 --> 07:59:53,760
it collect data for 45 days

8775
07:59:57,120 --> 08:00:01,000
okay so results

8776
08:00:01,798 --> 08:00:04,398
123 000 emails i was hoping to get like

8777
08:00:04,398 --> 08:00:06,558
five okay

8778
08:00:06,558 --> 08:00:09,760
um 2700 emails per day

8779
08:00:09,760 --> 08:00:11,840
is you know that's like one a minute or

8780
08:00:11,840 --> 08:00:13,040
something ridiculous you can watch them

8781
08:00:13,040 --> 08:00:14,398
come in in real time it's really

8782
08:00:14,398 --> 08:00:15,920
interesting

8783
08:00:15,920 --> 08:00:17,200
you might be wondering what kind of

8784
08:00:17,200 --> 08:00:18,798
emails we received

8785
08:00:18,798 --> 08:00:20,160
well

8786
08:00:20,160 --> 08:00:22,000
a lot of this

8787
08:00:22,000 --> 08:00:23,600
there's a lot of spam which was the

8788
08:00:23,600 --> 08:00:25,840
first challenge that i came across was

8789
08:00:25,840 --> 08:00:28,160
how am i going to eat all of this

8790
08:00:28,160 --> 08:00:31,120
there's like a ton of spam to deal with

8791
08:00:31,120 --> 08:00:32,080
um

8792
08:00:32,080 --> 08:00:33,760
it's ridiculous

8793
08:00:33,760 --> 08:00:35,840
so the vast majority of is spam frankly

8794
08:00:35,840 --> 08:00:37,440
not unexpected

8795
08:00:37,440 --> 08:00:39,920
when you stop and think about it

8796
08:00:39,920 --> 08:00:41,440
maybe maybe for the next iteration of

8797
08:00:41,440 --> 08:00:42,958
this talk we'll talk about who the top

8798
08:00:42,958 --> 08:00:45,280
spammers are and there's probably a lot

8799
08:00:45,280 --> 08:00:47,120
of work that could be done just around

8800
08:00:47,120 --> 08:00:49,360
analyzing that um but that wasn't the

8801
08:00:49,360 --> 08:00:50,958
focus of the talk so i didn't spend too

8802
08:00:50,958 --> 08:00:52,878
much time on it

8803
08:00:52,878 --> 08:00:54,638
so emails of interest here's where

8804
08:00:54,638 --> 08:00:56,398
things get really interesting

8805
08:00:56,398 --> 08:00:59,760
so i received at last count um 204

8806
08:00:59,760 --> 08:01:01,440
interac e-transfers

8807
08:01:01,440 --> 08:01:03,280
um with a total value of tens of

8808
08:01:03,280 --> 08:01:04,958
thousands of dollars

8809
08:01:04,958 --> 08:01:06,718
um a lot of package tracking links and

8810
08:01:06,718 --> 08:01:08,080
not the spam variant that you're all

8811
08:01:08,080 --> 08:01:10,558
used to receiving these are legitimate

8812
08:01:10,558 --> 08:01:12,558
personal banking notifications so

8813
08:01:12,558 --> 08:01:14,718
whether those are like um you know you

8814
08:01:14,718 --> 08:01:16,240
you spent money some of you probably get

8815
08:01:16,240 --> 08:01:17,520
those and you use your debit or credit

8816
08:01:17,520 --> 08:01:18,798
card you spent money here you spent

8817
08:01:18,798 --> 08:01:20,160
money there

8818
08:01:20,160 --> 08:01:21,440
there's a problem with your account your

8819
08:01:21,440 --> 08:01:22,718
account balance is running low those

8820
08:01:22,718 --> 08:01:24,240
types of emails we collected and

8821
08:01:24,240 --> 08:01:26,320
classified them as personal banking

8822
08:01:26,320 --> 08:01:28,398
sales receipts lots of sales receipts

8823
08:01:28,398 --> 08:01:29,760
coming in you know

8824
08:01:29,760 --> 08:01:31,600
sure any one of you uh shopping downtown

8825
08:01:31,600 --> 08:01:32,558
you've probably been asked if you want

8826
08:01:32,558 --> 08:01:35,520
to receive an email uh receipt well

8827
08:01:35,520 --> 08:01:36,958
maybe the girl must type your email and

8828
08:01:36,958 --> 08:01:39,840
i got it

8829
08:01:39,920 --> 08:01:41,280
account verification this one's

8830
08:01:41,280 --> 08:01:42,638
dangerous so a lot of account

8831
08:01:42,638 --> 08:01:44,798
verification and activation links

8832
08:01:44,798 --> 08:01:45,600
um

8833
08:01:45,600 --> 08:01:46,958
you know this this we can talk a little

8834
08:01:46,958 --> 08:01:48,160
bit more about

8835
08:01:48,160 --> 08:01:49,440
types of attacks we can pull off with

8836
08:01:49,440 --> 08:01:51,680
this appointment confirmations dental

8837
08:01:51,680 --> 08:01:54,160
appointments doctor's appointments uh

8838
08:01:54,160 --> 08:01:57,600
sales meetings all kinds of appointments

8839
08:01:57,600 --> 08:01:59,280
personal resumes and employment

8840
08:01:59,280 --> 08:02:00,798
applications think about the amount of

8841
08:02:00,798 --> 08:02:03,920
data that's on your personal resumes

8842
08:02:03,920 --> 08:02:05,520
sensitive data

8843
08:02:05,520 --> 08:02:08,160
there's uh you know even over 45 days

8844
08:02:08,160 --> 08:02:11,200
this is almost uh

8845
08:02:11,200 --> 08:02:14,000
yeah almost one a day

8846
08:02:14,000 --> 08:02:15,760
password reset links

8847
08:02:15,760 --> 08:02:18,558
loan applications and service contracts

8848
08:02:18,558 --> 08:02:20,398
tenant notifications

8849
08:02:20,398 --> 08:02:23,840
personal medical information x-rays

8850
08:02:23,840 --> 08:02:25,520
all kinds of information you know

8851
08:02:25,520 --> 08:02:27,600
people's private health data

8852
08:02:27,600 --> 08:02:30,398
lease documents

8853
08:02:30,398 --> 08:02:32,718
i got a completed security clearance

8854
08:02:32,718 --> 08:02:34,798
application form complete with passport

8855
08:02:34,798 --> 08:02:35,760
photo

8856
08:02:35,760 --> 08:02:39,600
and 10 years of personal history

8857
08:02:39,760 --> 08:02:41,840
and finally the most impressive one i

8858
08:02:41,840 --> 08:02:44,398
received was

8859
08:02:44,478 --> 08:02:45,840
i don't want to reveal too much but it's

8860
08:02:45,840 --> 08:02:47,120
one of the largest labor unions in the

8861
08:02:47,120 --> 08:02:48,398
country they're in the middle of a draft

8862
08:02:48,398 --> 08:02:50,240
negotiation with the government and i

8863
08:02:50,240 --> 08:02:51,680
got an early version an early look at

8864
08:02:51,680 --> 08:02:53,200
the contract

8865
08:02:53,200 --> 08:02:54,320
before

8866
08:02:54,320 --> 08:02:56,000
before anybody else basically except for

8867
08:02:56,000 --> 08:02:57,440
the lawyers

8868
08:02:57,440 --> 08:02:59,360
so some idea of what can be accomplished

8869
08:02:59,360 --> 08:03:01,360
and collected and again just 45 days

8870
08:03:01,360 --> 08:03:03,440
just 12 domains

8871
08:03:03,440 --> 08:03:04,798
so let's talk about the exploit

8872
08:03:04,798 --> 08:03:06,080
opportunities here

8873
08:03:06,080 --> 08:03:08,478
they're basically endless um

8874
08:03:08,478 --> 08:03:11,760
identity theft comes to mind extortion

8875
08:03:11,760 --> 08:03:14,160
social engineering i can gather personal

8876
08:03:14,160 --> 08:03:16,398
information that people may not be

8877
08:03:16,398 --> 08:03:18,638
you know uh aware is out and available

8878
08:03:18,638 --> 08:03:20,000
to others

8879
08:03:20,000 --> 08:03:21,920
doxxing i can do an account in

8880
08:03:21,920 --> 08:03:24,638
credential theft financial theft um

8881
08:03:24,638 --> 08:03:26,478
impersonation i didn't i didn't claim

8882
08:03:26,478 --> 08:03:27,840
any e-transfers i don't know if that

8883
08:03:27,840 --> 08:03:28,958
would work

8884
08:03:28,958 --> 08:03:30,798
i'm not interested in trying

8885
08:03:30,798 --> 08:03:32,080
um

8886
08:03:32,080 --> 08:03:33,760
impersonation you know once i know

8887
08:03:33,760 --> 08:03:35,280
enough about a target i can pretend to

8888
08:03:35,280 --> 08:03:36,320
be them

8889
08:03:36,320 --> 08:03:38,000
and finally

8890
08:03:38,000 --> 08:03:40,000
i'm in the army i've personally seen

8891
08:03:40,000 --> 08:03:42,080
people send things over a gmail account

8892
08:03:42,080 --> 08:03:43,600
i've seen them send things over hotmail

8893
08:03:43,600 --> 08:03:44,398
accounts

8894
08:03:44,398 --> 08:03:46,718
is there a national security threat here

8895
08:03:46,718 --> 08:03:48,878
maybe

8896
08:03:48,878 --> 08:03:50,798
so how common is it

8897
08:03:50,798 --> 08:03:52,638
um i was curious to look around i only

8898
08:03:52,638 --> 08:03:54,160
registered 12 domains but there's a lot

8899
08:03:54,160 --> 08:03:56,240
of squatted variants of these things so

8900
08:03:56,240 --> 08:03:57,840
i looked at three examples it's by you

8901
08:03:57,840 --> 08:03:58,638
know

8902
08:03:58,638 --> 08:04:01,040
not not anywhere near exhaustive but as

8903
08:04:01,040 --> 08:04:03,040
some examples if you look at gmail.com

8904
08:04:03,040 --> 08:04:04,320
and you start looking at typosquatted

8905
08:04:04,320 --> 08:04:06,320
variants you'll find that there's 155

8906
08:04:06,320 --> 08:04:09,200
adjacent domains registered and about 70

8907
08:04:09,200 --> 08:04:10,798
of them have active mx records on the

8908
08:04:10,798 --> 08:04:14,958
domain outlook.com similar stats yahoo i

8909
08:04:14,958 --> 08:04:16,398
guess it's been around longer more

8910
08:04:16,398 --> 08:04:19,040
highly targeted

8911
08:04:19,040 --> 08:04:20,638
that's a lot of potential for theft

8912
08:04:20,638 --> 08:04:22,398
right there and we don't know who's

8913
08:04:22,398 --> 08:04:23,840
behind these domains and i can tell you

8914
08:04:23,840 --> 08:04:25,520
when i looked at them

8915
08:04:25,520 --> 08:04:28,958
many of them share the same ip address

8916
08:04:28,958 --> 08:04:30,878
so one has to wonder who's listening

8917
08:04:30,878 --> 08:04:34,080
who's receiving those emails

8918
08:04:37,200 --> 08:04:38,558
one thing that's interesting about this

8919
08:04:38,558 --> 08:04:41,760
and this is an example of

8920
08:04:41,760 --> 08:04:43,360
what you can do against a public email

8921
08:04:43,360 --> 08:04:45,520
service but what about against an

8922
08:04:45,520 --> 08:04:48,160
enterprise you know what what about

8923
08:04:48,160 --> 08:04:49,520
against a company domain or an

8924
08:04:49,520 --> 08:04:51,520
enterprise domain can we do the same

8925
08:04:51,520 --> 08:04:53,440
type of attack and part of what inspired

8926
08:04:53,440 --> 08:04:55,360
me on this talk was uh was one that i

8927
08:04:55,360 --> 08:04:58,000
saw at the rsa conference

8928
08:04:58,000 --> 08:04:59,360
where they used this as a red teaming

8929
08:04:59,360 --> 08:05:00,958
technique and one of the researchers

8930
08:05:00,958 --> 08:05:02,798
said hey

8931
08:05:02,798 --> 08:05:04,240
you know what for 12 bucks let's

8932
08:05:04,240 --> 08:05:05,600
register the domain and just see what we

8933
08:05:05,600 --> 08:05:06,558
get

8934
08:05:06,558 --> 08:05:08,398
and they got the keys to the kingdom

8935
08:05:08,398 --> 08:05:10,398
by by like day six of the engagement

8936
08:05:10,398 --> 08:05:12,000
they they received a

8937
08:05:12,000 --> 08:05:13,840
mistyped password reset for their most

8938
08:05:13,840 --> 08:05:15,760
sensitive database they were able to

8939
08:05:15,760 --> 08:05:17,040
change the password and log in with

8940
08:05:17,040 --> 08:05:18,638
admin rights to the thing that the

8941
08:05:18,638 --> 08:05:20,478
company most wanted to protect if you

8942
08:05:20,478 --> 08:05:22,000
want to see the talk i highly recommend

8943
08:05:22,000 --> 08:05:22,798
it

8944
08:05:22,798 --> 08:05:24,718
i'll share the slides afterwards i guess

8945
08:05:24,718 --> 08:05:27,200
through north sec i can probably do that

8946
08:05:27,200 --> 08:05:28,398
this link will take you right to the

8947
08:05:28,398 --> 08:05:31,040
interesting part of the talk

8948
08:05:31,040 --> 08:05:32,718
um

8949
08:05:32,718 --> 08:05:35,200
okay so how can we defend against this

8950
08:05:35,200 --> 08:05:36,478
the first thing i want to talk about as

8951
08:05:36,478 --> 08:05:38,718
i alluded to it earlier is encryption i

8952
08:05:38,718 --> 08:05:40,320
wouldn't have really learned anything or

8953
08:05:40,320 --> 08:05:41,600
at least not anything meaningful if

8954
08:05:41,600 --> 08:05:43,520
these emails were encrypted

8955
08:05:43,520 --> 08:05:45,040
they were all in clear text and i could

8956
08:05:45,040 --> 08:05:45,920
read them

8957
08:05:45,920 --> 08:05:48,080
however i wanted there was no s mime

8958
08:05:48,080 --> 08:05:49,600
certificates in use i didn't i didn't

8959
08:05:49,600 --> 08:05:51,200
detect a single encrypted email and what

8960
08:05:51,200 --> 08:05:53,680
i gathered

8961
08:05:54,320 --> 08:05:56,798
awareness training is a really big one

8962
08:05:56,798 --> 08:05:57,680
so

8963
08:05:57,680 --> 08:05:59,360
i was digging for stats because i

8964
08:05:59,360 --> 08:06:00,558
started asking myself well what about

8965
08:06:00,558 --> 08:06:02,398
digital literacy do people understand

8966
08:06:02,398 --> 08:06:04,718
that this is possible for me it's

8967
08:06:04,718 --> 08:06:06,718
shocking but what about for other people

8968
08:06:06,718 --> 08:06:07,760
um

8969
08:06:07,760 --> 08:06:10,240
statscan the most recent

8970
08:06:10,240 --> 08:06:12,398
most recent stats i could pull were from

8971
08:06:12,398 --> 08:06:14,558
2018 where they were looking at student

8972
08:06:14,558 --> 08:06:16,878
digital literacy ratings

8973
08:06:16,878 --> 08:06:20,320
so in this case 15 year old students um

8974
08:06:20,320 --> 08:06:21,920
only

8975
08:06:21,920 --> 08:06:24,080
only like in quebec i think canada wide

8976
08:06:24,080 --> 08:06:26,320
38 percent in quebec were actually the

8977
08:06:26,320 --> 08:06:28,160
lowest in the country 30 of students

8978
08:06:28,160 --> 08:06:30,000
reported being taught how to identify

8979
08:06:30,000 --> 08:06:32,398
phishing or spam emails you know that

8980
08:06:32,398 --> 08:06:35,040
that's a pretty big problem

8981
08:06:35,040 --> 08:06:36,558
i think awareness training across the

8982
08:06:36,558 --> 08:06:38,240
board maybe in school all the way up

8983
08:06:38,240 --> 08:06:42,160
into the enterprise is really important

8984
08:06:42,160 --> 08:06:44,000
and then finally dns solutions i think

8985
08:06:44,000 --> 08:06:46,398
solve a lot of these problems so monitor

8986
08:06:46,398 --> 08:06:48,398
your dns take a look at what requests

8987
08:06:48,398 --> 08:06:49,680
are happening

8988
08:06:49,680 --> 08:06:51,680
there's dns firewalls dns filtering out

8989
08:06:51,680 --> 08:06:52,798
there

8990
08:06:52,798 --> 08:06:54,638
passive dns is another interesting tool

8991
08:06:54,638 --> 08:06:56,160
to detect things like newly registered

8992
08:06:56,160 --> 08:06:57,440
domain names there's a lot of research

8993
08:06:57,440 --> 08:06:59,040
out there that shows if a domain name is

8994
08:06:59,040 --> 08:07:00,798
new enough it's probably malicious with

8995
08:07:00,798 --> 08:07:02,478
a high degree of confidence

8996
08:07:02,478 --> 08:07:04,558
so don't resolve new domains

8997
08:07:04,558 --> 08:07:05,920
um there's a lot of tools for this

8998
08:07:05,920 --> 08:07:09,040
fireside security domain tools

8999
08:07:09,040 --> 08:07:10,320
there was uh

9000
08:07:10,320 --> 08:07:11,920
there's a few vendors here today flair

9001
08:07:11,920 --> 08:07:13,440
systems was there they have a really

9002
08:07:13,440 --> 08:07:14,638
neat platform that looks at a lot of

9003
08:07:14,638 --> 08:07:16,958
this kind of thing

9004
08:07:16,958 --> 08:07:19,200
and then finally if you talk to dr paul

9005
08:07:19,200 --> 08:07:20,558
vixie the guy who wrote bind and

9006
08:07:20,558 --> 08:07:22,320
maintains bind for for many many years

9007
08:07:22,320 --> 08:07:24,638
or the father of the the dns

9008
08:07:24,638 --> 08:07:25,920
they'll tell you to run your own dns

9009
08:07:25,920 --> 08:07:27,120
resolver

9010
08:07:27,120 --> 08:07:28,718
it's really easy to set up i know it's

9011
08:07:28,718 --> 08:07:30,558
really easy to go and say hey you know

9012
08:07:30,558 --> 08:07:32,718
what get get your domains from are your

9013
08:07:32,718 --> 08:07:35,920
ip addresses from 8.8.8.8 or you know

9014
08:07:35,920 --> 08:07:37,440
what cloudflare wherever you want to

9015
08:07:37,440 --> 08:07:39,840
resolve your dns but take control back

9016
08:07:39,840 --> 08:07:41,520
it's actually quite easy you can throw

9017
08:07:41,520 --> 08:07:44,798
it up on a raspberry pi play with it

9018
08:07:44,798 --> 08:07:45,920
and you can use things that are called

9019
08:07:45,920 --> 08:07:48,160
dns response policy zones so if you

9020
08:07:48,160 --> 08:07:51,120
detect domains that are targeting

9021
08:07:51,120 --> 08:07:53,760
your enterprise domain you can set up a

9022
08:07:53,760 --> 08:07:55,360
response policy zone that says hey if

9023
08:07:55,360 --> 08:07:56,798
somebody asks for

9024
08:07:56,798 --> 08:07:58,320
gmail.com

9025
08:07:58,320 --> 08:08:00,478
well send them to gmail.com give them

9026
08:08:00,478 --> 08:08:02,320
the result for that instead you can set

9027
08:08:02,320 --> 08:08:04,320
that up and you can do it in response to

9028
08:08:04,320 --> 08:08:05,280
the things that you're seeing on your

9029
08:08:05,280 --> 08:08:07,040
network maybe specific to your domain or

9030
08:08:07,040 --> 08:08:08,878
the types of traffic that's happening on

9031
08:08:08,878 --> 08:08:10,798
your network

9032
08:08:10,798 --> 08:08:11,600
um

9033
08:08:11,600 --> 08:08:13,600
so dns big one

9034
08:08:13,600 --> 08:08:15,520
and then finally some food for thought

9035
08:08:15,520 --> 08:08:16,878
um you know the question is this brought

9036
08:08:16,878 --> 08:08:18,398
up for me it was quite shocking the

9037
08:08:18,398 --> 08:08:21,360
first one was is email an essential

9038
08:08:21,360 --> 08:08:23,600
service or a critical infrastructure you

9039
08:08:23,600 --> 08:08:24,558
know

9040
08:08:24,558 --> 08:08:26,000
for the importance that it has in our

9041
08:08:26,000 --> 08:08:27,040
lives

9042
08:08:27,040 --> 08:08:28,718
is it considered critical infrastructure

9043
08:08:28,718 --> 08:08:30,398
and if so who's responsible for

9044
08:08:30,398 --> 08:08:32,240
protecting it does this fall on the

9045
08:08:32,240 --> 08:08:34,478
public email service providers does it

9046
08:08:34,478 --> 08:08:36,878
fall on us as individuals or maybe the

9047
08:08:36,878 --> 08:08:37,840
root

9048
08:08:37,840 --> 08:08:39,840
certifi root authorities in the domain

9049
08:08:39,840 --> 08:08:42,000
name system

9050
08:08:42,000 --> 08:08:43,280
the second question i had is can i

9051
08:08:43,280 --> 08:08:44,798
automate the analysis you know i started

9052
08:08:44,798 --> 08:08:46,478
getting a little bit uncomfortable

9053
08:08:46,478 --> 08:08:48,718
looking at some of this data and

9054
08:08:48,718 --> 08:08:50,080
tried to remove myself from it as much

9055
08:08:50,080 --> 08:08:52,240
as possible so can we can we do this

9056
08:08:52,240 --> 08:08:54,478
kind of research in a more automated way

9057
08:08:54,478 --> 08:08:56,240
that generates meaningful threat

9058
08:08:56,240 --> 08:08:59,120
intelligence but also respects privacy

9059
08:08:59,120 --> 08:09:00,798
and finally can we use similar

9060
08:09:00,798 --> 08:09:03,040
approaches exploiting typo squatting

9061
08:09:03,040 --> 08:09:04,718
against other services there's really

9062
08:09:04,718 --> 08:09:06,398
interesting research done

9063
08:09:06,398 --> 08:09:09,280
um regarding ntp bit flips some of you

9064
08:09:09,280 --> 08:09:10,958
may have seen that research

9065
08:09:10,958 --> 08:09:13,280
the researcher that

9066
08:09:13,280 --> 08:09:14,558
basically realized that every i think

9067
08:09:14,558 --> 08:09:16,398
it's every day every 24 hours a windows

9068
08:09:16,398 --> 08:09:17,280
machine checks in with

9069
08:09:17,280 --> 08:09:19,600
time.microsoft.com

9070
08:09:19,600 --> 08:09:21,280
and he knew that bitflips were a thing

9071
08:09:21,280 --> 08:09:22,398
and they're theorized but he wanted to

9072
08:09:22,398 --> 08:09:24,240
measure the rate that they happened at

9073
08:09:24,240 --> 08:09:26,638
and uh he registered time dot some bit

9074
08:09:26,638 --> 08:09:29,040
flipped version of microsoft.com and he

9075
08:09:29,040 --> 08:09:30,718
got millions of

9076
08:09:30,718 --> 08:09:34,398
of uh ntp requests to his server um

9077
08:09:34,398 --> 08:09:36,638
in a very short amount of time

9078
08:09:36,638 --> 08:09:39,040
and then finally uh man in the middle

9079
08:09:39,040 --> 08:09:41,280
excuse me monster in the middle uh we'll

9080
08:09:41,280 --> 08:09:43,680
make that a standard uh or you know

9081
08:09:43,680 --> 08:09:45,360
reverse proxying against web pages and

9082
08:09:45,360 --> 08:09:46,878
popular web portals you know there could

9083
08:09:46,878 --> 08:09:48,798
be another abuse that's interesting to

9084
08:09:48,798 --> 08:09:51,120
look at

9085
08:09:51,360 --> 08:09:53,750
thank you

9086
08:09:53,750 --> 08:09:58,130
[Applause]

9087
08:10:06,478 --> 08:10:09,200
working okay it works um thanks and good

9088
08:10:09,200 --> 08:10:11,440
job for your first talk honestly very

9089
08:10:11,440 --> 08:10:12,320
good

9090
08:10:12,320 --> 08:10:13,760
great results

9091
08:10:13,760 --> 08:10:14,878
so guys

9092
08:10:14,878 --> 08:10:17,440
again if you can ask questions on slido

9093
08:10:17,440 --> 08:10:19,600
i'm gonna take care of them right after

9094
08:10:19,600 --> 08:10:22,558
one talk left we probably start in five

9095
08:10:22,558 --> 08:10:26,120
minutes thank you

9096
08:10:28,990 --> 08:10:40,789
[Music]

9097
08:10:48,460 --> 08:10:54,449
[Music]

9098
08:11:04,160 --> 08:11:19,600
[Music]

9099
08:11:22,640 --> 08:11:25,910
[Music]

9100
08:11:28,400 --> 08:11:34,459
[Music]

9101
08:11:44,020 --> 08:11:51,249
[Music]

9102
08:12:04,770 --> 08:12:07,860
[Music]

9103
08:12:10,700 --> 08:12:17,840
[Music]

9104
08:12:21,910 --> 08:12:28,510
[Music]

9105
08:12:31,000 --> 08:12:50,470
[Music]

9106
08:13:01,550 --> 08:13:04,689
[Music]

9107
08:13:08,160 --> 08:13:11,250
[Music]

9108
08:13:19,390 --> 08:13:22,459
[Music]

9109
08:13:32,990 --> 08:13:40,169
[Music]

9110
08:13:43,280 --> 08:13:46,320
[Music]

9111
08:13:54,370 --> 08:13:57,570
[Music]

9112
08:14:00,350 --> 08:14:03,469
[Music]

9113
08:14:05,680 --> 08:14:08,680
so

9114
08:14:10,650 --> 08:14:13,740
[Music]

9115
08:14:20,638 --> 08:14:23,638
do

9116
08:14:25,000 --> 08:14:36,860
[Music]

9117
08:14:41,280 --> 08:14:44,320
[Music]

9118
08:14:47,330 --> 08:15:01,209
[Music]

9119
08:15:03,780 --> 08:15:06,918
[Music]

9120
08:15:11,720 --> 08:15:14,849
[Music]

9121
08:15:20,090 --> 08:15:40,009
[Music]

9122
08:15:47,360 --> 08:15:48,810
so

9123
08:15:48,810 --> 08:15:56,490
[Music]

9124
08:16:04,550 --> 08:16:07,739
[Music]

9125
08:16:10,490 --> 08:16:12,798
[Music]

9126
08:16:12,798 --> 08:16:15,798
do

9127
08:16:20,820 --> 08:16:23,910
[Music]

9128
08:16:31,110 --> 08:16:38,810
[Music]

9129
08:16:42,320 --> 08:16:46,470
[Music]

9130
08:16:51,420 --> 08:17:11,369
[Music]

9131
08:17:21,890 --> 08:17:25,020
[Music]

9132
08:17:30,270 --> 08:17:50,180
[Music]

9133
08:17:53,210 --> 08:17:56,300
[Music]

9134
08:17:58,980 --> 08:18:03,060
[Music]

9135
08:18:06,478 --> 08:18:09,478
do

9136
08:18:14,600 --> 08:18:21,829
[Music]

9137
08:18:35,350 --> 08:18:38,440
[Music]

9138
08:18:41,300 --> 08:18:44,369
[Music]

9139
08:18:52,490 --> 08:18:56,509
[Music]

9140
08:19:01,580 --> 08:19:21,049
[Music]

9141
08:19:24,140 --> 08:19:27,259
[Music]

9142
08:19:32,130 --> 08:19:35,259
[Music]

9143
08:19:38,740 --> 08:19:41,869
[Music]

9144
08:20:03,560 --> 08:20:10,720
[Music]

9145
08:20:13,860 --> 08:20:16,900
[Music]

9146
08:20:24,870 --> 08:20:28,149
[Music]

9147
08:20:30,930 --> 08:20:34,049
[Music]

9148
08:20:41,230 --> 08:20:48,679
[Music]

9149
08:20:51,530 --> 08:20:54,610
[Music]

9150
08:21:07,680 --> 08:21:10,638
all right ladies and gentlemen welcome

9151
08:21:10,638 --> 08:21:13,440
back to our panel on of

9152
08:21:13,440 --> 08:21:15,120
red team black

9153
08:21:15,120 --> 08:21:17,120
so i'm going to start with a few

9154
08:21:17,120 --> 08:21:20,318
questions dedicated to our two speakers

9155
08:21:20,318 --> 08:21:22,798
and then i'm going to go more to general

9156
08:21:22,798 --> 08:21:26,000
red team questions if we have time

9157
08:21:26,000 --> 08:21:26,718
so

9158
08:21:26,718 --> 08:21:29,760
i will start with you olivier

9159
08:21:29,760 --> 08:21:32,000
we had some questions about rdp

9160
08:21:32,000 --> 08:21:34,558
of course rdp is very well used in the

9161
08:21:34,558 --> 08:21:36,240
industry it's built in on windows you

9162
08:21:36,240 --> 08:21:38,080
can use it on linux you can use it on

9163
08:21:38,080 --> 08:21:40,000
mac

9164
08:21:40,000 --> 08:21:41,760
the question was are there better

9165
08:21:41,760 --> 08:21:45,679
alternatives to rdp

9166
08:21:46,160 --> 08:21:51,120
um i would say wrap rdp in an ssh tunnel

9167
08:21:51,120 --> 08:21:52,478
but that

9168
08:21:52,478 --> 08:21:54,240
that might not be convenient that might

9169
08:21:54,240 --> 08:21:57,280
be a bit of a troll um no i think so i

9170
08:21:57,280 --> 08:21:59,120
think this is a standard it's it's

9171
08:21:59,120 --> 08:22:00,638
really efficient

9172
08:22:00,638 --> 08:22:02,240
so there are some proprietary

9173
08:22:02,240 --> 08:22:04,878
alternatives and if you the problem is

9174
08:22:04,878 --> 08:22:06,798
you need to control the server and the

9175
08:22:06,798 --> 08:22:08,958
client you need the flexibility you need

9176
08:22:08,958 --> 08:22:10,958
the deployment so it kind of makes sense

9177
08:22:10,958 --> 08:22:13,120
that it is in microsoft's control

9178
08:22:13,120 --> 08:22:14,160
um

9179
08:22:14,160 --> 08:22:16,318
so it's a difficult question and i think

9180
08:22:16,318 --> 08:22:18,000
it relies on a lot of things but like

9181
08:22:18,000 --> 08:22:19,760
let's say i would be

9182
08:22:19,760 --> 08:22:22,160
i don't know i i i just

9183
08:22:22,160 --> 08:22:25,440
don't i control all my computing i don't

9184
08:22:25,440 --> 08:22:27,520
i don't care about anyone and i don't

9185
08:22:27,520 --> 08:22:30,240
need to because let's say i'm csc

9186
08:22:30,240 --> 08:22:32,160
something like that right our secret

9187
08:22:32,160 --> 08:22:33,120
service

9188
08:22:33,120 --> 08:22:35,360
then okay just use something else and

9189
08:22:35,360 --> 08:22:37,680
enforce it and make sure you audit it

9190
08:22:37,680 --> 08:22:40,000
properly because rdp has been audited a

9191
08:22:40,000 --> 08:22:41,040
lot right

9192
08:22:41,040 --> 08:22:43,920
but if you are anyone else then secret

9193
08:22:43,920 --> 08:22:45,760
service i mean you

9194
08:22:45,760 --> 08:22:47,840
must pretty much use rdp and using

9195
08:22:47,840 --> 08:22:49,680
something else

9196
08:22:49,680 --> 08:22:51,200
it might not have been

9197
08:22:51,200 --> 08:22:53,040
scrutinized

9198
08:22:53,040 --> 08:22:56,160
as well as rdp so no i think my advice

9199
08:22:56,160 --> 08:22:58,080
to this still holds is

9200
08:22:58,080 --> 08:23:01,440
wrap it in something else wrap it in vpn

9201
08:23:01,440 --> 08:23:04,958
keep monitoring it and maybe

9202
08:23:04,958 --> 08:23:07,360
maybe you know speak with revolution and

9203
08:23:07,360 --> 08:23:09,440
i i don't know i'm plugging a vendor

9204
08:23:09,440 --> 08:23:13,120
here but they really understand it and

9205
08:23:13,120 --> 08:23:14,160
look at

9206
08:23:14,160 --> 08:23:15,600
what they're trying to do to make sure

9207
08:23:15,600 --> 08:23:17,920
that it's secure and if if you can't do

9208
08:23:17,920 --> 08:23:20,240
vpn or if it's too clunky too

9209
08:23:20,240 --> 08:23:22,000
complicated but there are also other

9210
08:23:22,000 --> 08:23:24,000
vendors doing that but if you want to

9211
08:23:24,000 --> 08:23:27,040
avoid additional costs i think just vpn

9212
08:23:27,040 --> 08:23:28,398
and making sure that

9213
08:23:28,398 --> 08:23:31,920
nothing is exposed uh is a good step and

9214
08:23:31,920 --> 08:23:34,798
keep patching keep patching

9215
08:23:34,798 --> 08:23:36,958
all right thank you

9216
08:23:36,958 --> 08:23:38,478
for uh

9217
08:23:38,478 --> 08:23:41,200
do you have insights on which type of

9218
08:23:41,200 --> 08:23:45,280
domains like big tech large orgs brands

9219
08:23:45,280 --> 08:23:48,160
that you got the most amount of emails

9220
08:23:48,160 --> 08:23:50,318
from

9221
08:23:50,318 --> 08:23:51,840
um

9222
08:23:51,840 --> 08:23:53,520
i don't want to single out any single

9223
08:23:53,520 --> 08:23:55,680
provider but i will say that in general

9224
08:23:55,680 --> 08:23:57,280
um

9225
08:23:57,280 --> 08:23:58,878
it's a it's a game of it's a numbers

9226
08:23:58,878 --> 08:24:00,160
game so

9227
08:24:00,160 --> 08:24:03,360
the more keystrokes and the more

9228
08:24:03,360 --> 08:24:05,280
attempts i guess to communicate with the

9229
08:24:05,280 --> 08:24:06,958
domain name system the more likely

9230
08:24:06,958 --> 08:24:09,840
you're going to land on a typo squat

9231
08:24:09,840 --> 08:24:12,080
so the longer the domain the more likely

9232
08:24:12,080 --> 08:24:14,318
it is that there's a typo in it and the

9233
08:24:14,318 --> 08:24:17,600
more in this case emails are being sent

9234
08:24:17,600 --> 08:24:18,958
the more likely it is one of those is

9235
08:24:18,958 --> 08:24:20,878
going to be a typo

9236
08:24:20,878 --> 08:24:22,718
so i would say think about the big

9237
08:24:22,718 --> 08:24:24,398
providers that have millions and

9238
08:24:24,398 --> 08:24:26,000
millions of emails going through every

9239
08:24:26,000 --> 08:24:28,240
every second every minute

9240
08:24:28,240 --> 08:24:30,398
and typically the longer the domain the

9241
08:24:30,398 --> 08:24:31,600
more likely it is or there's going to be

9242
08:24:31,600 --> 08:24:33,760
a typo in it

9243
08:24:33,760 --> 08:24:35,920
okay yeah cool

9244
08:24:35,920 --> 08:24:39,360
um next one for olivier

9245
08:24:39,360 --> 08:24:41,440
in your research i don't know if you

9246
08:24:41,440 --> 08:24:44,398
read about ms remote desktop services

9247
08:24:44,398 --> 08:24:48,318
which encapsulate rdp into https

9248
08:24:48,318 --> 08:24:50,080
do you know if it resolved many of the

9249
08:24:50,080 --> 08:24:53,200
problems you presented today

9250
08:24:53,200 --> 08:24:53,920
i

9251
08:24:53,920 --> 08:24:56,080
honestly thought that this was rd

9252
08:24:56,080 --> 08:24:58,878
gateway so uh

9253
08:24:58,878 --> 08:25:02,318
i ha i i think it is rd gateway does the

9254
08:25:02,318 --> 08:25:04,718
person who asked the question still here

9255
08:25:04,718 --> 08:25:06,558
because if it is rd gateway then it was

9256
08:25:06,558 --> 08:25:09,040
in my future work slide

9257
08:25:09,040 --> 08:25:11,040
so if it was if it's not already gateway

9258
08:25:11,040 --> 08:25:13,120
then i want to hear about it but uh no

9259
08:25:13,120 --> 08:25:15,360
honestly i think this is the the so the

9260
08:25:15,360 --> 08:25:17,760
remote desktop services you can enable a

9261
08:25:17,760 --> 08:25:20,478
gateway which encapsulated in https and

9262
08:25:20,478 --> 08:25:23,040
so for the uh

9263
08:25:23,040 --> 08:25:27,440
nla ntlm attack it means yes but now how

9264
08:25:27,440 --> 08:25:29,920
have they implemented it if they have

9265
08:25:29,920 --> 08:25:31,520
implemented it

9266
08:25:31,520 --> 08:25:35,920
by just layering http on top of it then

9267
08:25:35,920 --> 08:25:38,160
as soon as i get to implement that in

9268
08:25:38,160 --> 08:25:40,558
priority p i'll have access and if they

9269
08:25:40,558 --> 08:25:42,080
haven't changed

9270
08:25:42,080 --> 08:25:43,840
anything and they have no reason to have

9271
08:25:43,840 --> 08:25:45,440
changed the underlying protocol it's

9272
08:25:45,440 --> 08:25:47,520
just another encapsulation

9273
08:25:47,520 --> 08:25:49,120
i believe that our attack will still

9274
08:25:49,120 --> 08:25:51,600
work but right now it doesn't because we

9275
08:25:51,600 --> 08:25:54,878
need to do that https decapsulation

9276
08:25:54,878 --> 08:25:57,200
and to be honest

9277
08:25:57,200 --> 08:25:59,520
that code is so complex the guy are they

9278
08:25:59,520 --> 08:26:00,558
still here

9279
08:26:00,558 --> 08:26:02,558
that code is so complex and hard to

9280
08:26:02,558 --> 08:26:03,680
maintain that

9281
08:26:03,680 --> 08:26:06,240
if i ever keep up with it

9282
08:26:06,240 --> 08:26:09,280
i might attack it but i i or i i'll need

9283
08:26:09,280 --> 08:26:10,798
other interns to do it for me because

9284
08:26:10,798 --> 08:26:13,840
i'm i'm not that bright

9285
08:26:13,840 --> 08:26:14,878
okay

9286
08:26:14,878 --> 08:26:18,318
it's sad but i'm aging

9287
08:26:18,878 --> 08:26:19,600
so

9288
08:26:19,600 --> 08:26:21,690
next question would be for allah

9289
08:26:21,690 --> 08:26:23,360
[Music]

9290
08:26:23,360 --> 08:26:25,760
so you mentioned how to do typos

9291
08:26:25,760 --> 08:26:28,080
quitting but let's say you are being

9292
08:26:28,080 --> 08:26:29,920
typo squadded so what would you

9293
08:26:29,920 --> 08:26:33,360
recommend to blue teamers in the room

9294
08:26:33,360 --> 08:26:34,878
sure yeah that's a really good question

9295
08:26:34,878 --> 08:26:36,240
um i think the first thing is to be

9296
08:26:36,240 --> 08:26:37,760
aware that it's happening it's really

9297
08:26:37,760 --> 08:26:39,840
easy to look around dns there's lots of

9298
08:26:39,840 --> 08:26:41,360
good tools out there

9299
08:26:41,360 --> 08:26:44,878
dns dns twist comes to mind it's a

9300
08:26:44,878 --> 08:26:47,280
free python

9301
08:26:47,280 --> 08:26:49,280
script on on github you can find it for

9302
08:26:49,280 --> 08:26:51,040
free there's a lot of web

9303
08:26:51,040 --> 08:26:52,478
implementations of it as well if you're

9304
08:26:52,478 --> 08:26:55,840
not into running python

9305
08:26:55,840 --> 08:26:57,360
so just being aware that it's happening

9306
08:26:57,360 --> 08:27:00,558
to your domain is interesting enough

9307
08:27:00,558 --> 08:27:01,920
and then you can start filtering for it

9308
08:27:01,920 --> 08:27:04,160
and looking for instances of it you can

9309
08:27:04,160 --> 08:27:06,398
use tools like dig ns lookup and just

9310
08:27:06,398 --> 08:27:07,920
see what what kind of records are on

9311
08:27:07,920 --> 08:27:09,520
that domain name

9312
08:27:09,520 --> 08:27:11,200
if there's an mx record

9313
08:27:11,200 --> 08:27:14,000
that's a red flag

9314
08:27:14,000 --> 08:27:15,680
just being aware that it's there and you

9315
08:27:15,680 --> 08:27:17,360
can do a lot to protect

9316
08:27:17,360 --> 08:27:20,160
yourself and your users from

9317
08:27:20,160 --> 08:27:22,398
reaching out to that domain but it's

9318
08:27:22,398 --> 08:27:23,600
really hard

9319
08:27:23,600 --> 08:27:25,520
to to please everybody on the internet

9320
08:27:25,520 --> 08:27:27,520
from looking for that domain

9321
08:27:27,520 --> 08:27:28,798
so i guess the next best thing is

9322
08:27:28,798 --> 08:27:30,160
depending on who you are and how much

9323
08:27:30,160 --> 08:27:31,920
leverage you have and where the domain

9324
08:27:31,920 --> 08:27:33,760
is registered

9325
08:27:33,760 --> 08:27:35,120
you could you could try to do a takedown

9326
08:27:35,120 --> 08:27:38,240
request if it's a brand infringement

9327
08:27:38,240 --> 08:27:40,318
i think the key is first understanding

9328
08:27:40,318 --> 08:27:43,120
if if somebody's doing it simply uh you

9329
08:27:43,120 --> 08:27:44,638
know i would i would recommend looking

9330
08:27:44,638 --> 08:27:46,878
at a tool like dns twist

9331
08:27:46,878 --> 08:27:49,760
is probably a good place to start

9332
08:27:49,760 --> 08:27:52,638
may i uh add an additional question do

9333
08:27:52,638 --> 08:27:54,958
you know if they are provisioned to like

9334
08:27:54,958 --> 08:27:57,580
so we know that you can't purchase like

9335
08:27:57,580 --> 08:27:59,120
[Music]

9336
08:27:59,120 --> 08:28:01,200
nestle uh

9337
08:28:01,200 --> 08:28:03,280
because it's a brand that is a trademark

9338
08:28:03,280 --> 08:28:05,360
right but do you know if typo squatting

9339
08:28:05,360 --> 08:28:07,680
kind of falls under the trademark uh

9340
08:28:07,680 --> 08:28:09,680
infringement stuff

9341
08:28:09,680 --> 08:28:10,558
um

9342
08:28:10,558 --> 08:28:12,080
i'll say that from what i've seen there

9343
08:28:12,080 --> 08:28:13,520
are definitely efforts out there to

9344
08:28:13,520 --> 08:28:14,558
police it but i think it's on a

9345
08:28:14,558 --> 08:28:16,398
registrar by registrar basis i think

9346
08:28:16,398 --> 08:28:18,798
it's going to depend on the tld

9347
08:28:18,798 --> 08:28:20,478
there's a lot of factors at play but

9348
08:28:20,478 --> 08:28:22,000
generally

9349
08:28:22,000 --> 08:28:23,680
if it is being policed it's not being

9350
08:28:23,680 --> 08:28:26,000
policed very well

9351
08:28:26,000 --> 08:28:27,440
i i think it's incumbent on the

9352
08:28:27,440 --> 08:28:29,200
trademark owner to actually fight to go

9353
08:28:29,200 --> 08:28:31,280
and have that domain revoked and they do

9354
08:28:31,280 --> 08:28:32,398
have a lot of power there's a lot of

9355
08:28:32,398 --> 08:28:34,318
levers in place for for brands to

9356
08:28:34,318 --> 08:28:36,398
protect their their trademark that way

9357
08:28:36,398 --> 08:28:37,600
um

9358
08:28:37,600 --> 08:28:38,878
i think it's a mixed bag about whether

9359
08:28:38,878 --> 08:28:40,318
or not you'll be allowed to register in

9360
08:28:40,318 --> 08:28:43,120
the first place but so you sorry

9361
08:28:43,120 --> 08:28:46,240
you type of squad pretty big uh

9362
08:28:46,240 --> 08:28:49,520
names right yes and you got nothing you

9363
08:28:49,520 --> 08:28:51,680
you like no one kicked your door or you

9364
08:28:51,680 --> 08:28:53,600
know not yet after the talk maybe we'll

9365
08:28:53,600 --> 08:28:55,200
see what happens but

9366
08:28:55,200 --> 08:28:58,718
um no not yet for 45 days so

9367
08:28:58,718 --> 08:29:00,318
uh i'll say that

9368
08:29:00,318 --> 08:29:01,520
i'll say that those domains have been

9369
08:29:01,520 --> 08:29:02,878
registered and active for a lot longer

9370
08:29:02,878 --> 08:29:04,160
than what i started working with them

9371
08:29:04,160 --> 08:29:05,840
okay um

9372
08:29:05,840 --> 08:29:07,120
but there's a lot of conversations now

9373
08:29:07,120 --> 08:29:08,080
about what do we do what's the

9374
08:29:08,080 --> 08:29:10,398
responsible thing to do with the domains

9375
08:29:10,398 --> 08:29:11,920
so i'm open to discussions if anybody

9376
08:29:11,920 --> 08:29:14,240
has ideas i have ideas about it as well

9377
08:29:14,240 --> 08:29:15,760
but

9378
08:29:15,760 --> 08:29:17,360
yeah so far

9379
08:29:17,360 --> 08:29:20,000
got away with it

9380
08:29:20,558 --> 08:29:21,600
okay

9381
08:29:21,600 --> 08:29:22,638
i'm gonna

9382
08:29:22,638 --> 08:29:25,280
jump i i had some i had a pocket

9383
08:29:25,280 --> 08:29:28,160
question about uh you know legal legal

9384
08:29:28,160 --> 08:29:31,200
concern of of the your both research so

9385
08:29:31,200 --> 08:29:34,398
i'm gonna i'm not i'm just gonna jump on

9386
08:29:34,398 --> 08:29:36,478
i am on this question

9387
08:29:36,478 --> 08:29:38,318
um

9388
08:29:38,318 --> 08:29:41,120
so are there legal concerns about doing

9389
08:29:41,120 --> 08:29:44,558
typo squatting on a specific company is

9390
08:29:44,558 --> 08:29:47,610
it considered as attacking this company

9391
08:29:47,610 --> 08:29:50,779
[Music]

9392
08:29:50,798 --> 08:29:52,080
that's a really good question and i've

9393
08:29:52,080 --> 08:29:53,440
lost a lot of sleep over it recently

9394
08:29:53,440 --> 08:29:54,398
especially knowing that i'm going to

9395
08:29:54,398 --> 08:29:57,520
present it in a very public forum

9396
08:29:57,520 --> 08:29:58,478
um

9397
08:29:58,478 --> 08:30:00,240
i think yes i think depending on what

9398
08:30:00,240 --> 08:30:01,680
you're doing with it i don't think

9399
08:30:01,680 --> 08:30:04,080
owning the domain is necessarily enough

9400
08:30:04,080 --> 08:30:05,840
to to call it a criminal act or an

9401
08:30:05,840 --> 08:30:07,200
illegal act

9402
08:30:07,200 --> 08:30:08,478
i think depending on what you do with it

9403
08:30:08,478 --> 08:30:11,520
and how you use it maybe

9404
08:30:11,520 --> 08:30:12,798
is it illegal to steal mail from

9405
08:30:12,798 --> 08:30:14,798
somebody's mailbox

9406
08:30:14,798 --> 08:30:17,040
is this the same thing

9407
08:30:17,040 --> 08:30:18,398
i think there's a lot of questions about

9408
08:30:18,398 --> 08:30:21,040
it i think intent is important i mean if

9409
08:30:21,040 --> 08:30:22,798
i'm in front of a judge and saying i

9410
08:30:22,798 --> 08:30:24,478
really wanted those heat transfers

9411
08:30:24,478 --> 08:30:25,920
that's one thing but if it's for

9412
08:30:25,920 --> 08:30:27,600
security research i would like to think

9413
08:30:27,600 --> 08:30:29,760
anyway that we have a society that

9414
08:30:29,760 --> 08:30:31,840
um wants us and encourages us to point

9415
08:30:31,840 --> 08:30:34,878
these things out and try to correct them

9416
08:30:34,878 --> 08:30:37,040
so i mean in my case it's a risk i'm

9417
08:30:37,040 --> 08:30:38,478
willing to take

9418
08:30:38,478 --> 08:30:40,398
i'm not going to share data with anybody

9419
08:30:40,398 --> 08:30:42,160
i'm not going to talk about personal

9420
08:30:42,160 --> 08:30:43,760
information

9421
08:30:43,760 --> 08:30:45,040
and i would discourage anybody from

9422
08:30:45,040 --> 08:30:46,558
trying this it's already been proven you

9423
08:30:46,558 --> 08:30:47,680
can do it you don't need to do it at

9424
08:30:47,680 --> 08:30:49,600
home

9425
08:30:49,600 --> 08:30:50,878
in the case of a red team engagement a

9426
08:30:50,878 --> 08:30:52,718
great tool

9427
08:30:52,718 --> 08:30:54,558
i think awareness is probably key so i

9428
08:30:54,558 --> 08:30:56,318
think yeah it should be illegal but how

9429
08:30:56,318 --> 08:30:57,680
do you enforce it how do you police it

9430
08:30:57,680 --> 08:31:00,240
those are the bigger questions

9431
08:31:00,240 --> 08:31:02,798
i agree and all you would like to add on

9432
08:31:02,798 --> 08:31:05,360
this uh

9433
08:31:05,760 --> 08:31:07,040
no

9434
08:31:07,040 --> 08:31:09,120
no thanks for asking though but it was

9435
08:31:09,120 --> 08:31:11,120
very a very good question and it's it's

9436
08:31:11,120 --> 08:31:14,558
very difficult situation i agree

9437
08:31:14,558 --> 08:31:17,170
i agree too okay

9438
08:31:17,170 --> 08:31:18,958
[Music]

9439
08:31:18,958 --> 08:31:20,798
i work a lot with the

9440
08:31:20,798 --> 08:31:22,638
cyber threat intel team

9441
08:31:22,638 --> 08:31:24,558
and most of the companies

9442
08:31:24,558 --> 08:31:27,200
base their security prioritization based

9443
08:31:27,200 --> 08:31:28,000
on

9444
08:31:28,000 --> 08:31:30,718
threat actors with documented activities

9445
08:31:30,718 --> 08:31:33,200
so i was wondering if you have for your

9446
08:31:33,200 --> 08:31:34,718
both research

9447
08:31:34,718 --> 08:31:35,920
uh

9448
08:31:35,920 --> 08:31:39,200
used such intel have you seen attacks

9449
08:31:39,200 --> 08:31:41,520
like that been made by for example

9450
08:31:41,520 --> 08:31:46,638
ransomware or publicly known groups

9451
08:31:46,638 --> 08:31:50,478
in their campaign in their ttp

9452
08:31:50,878 --> 08:31:52,240
want to go first

9453
08:31:52,240 --> 08:31:53,760
go ahead yeah

9454
08:31:53,760 --> 08:31:56,478
so recently the octa breach which we

9455
08:31:56,478 --> 08:31:59,520
heard about was rdp

9456
08:31:59,520 --> 08:32:01,520
so yeah i removed the that from the

9457
08:32:01,520 --> 08:32:03,280
slide unfortunately but

9458
08:32:03,280 --> 08:32:04,798
i mean it was just a screenshot saying

9459
08:32:04,798 --> 08:32:06,878
hey rdb is important

9460
08:32:06,878 --> 08:32:11,760
but uh yeah no so rdp is attacked and uh

9461
08:32:11,760 --> 08:32:14,160
there's a lot of ips out there and some

9462
08:32:14,160 --> 08:32:16,398
of this some of the them are my

9463
08:32:16,398 --> 08:32:18,878
honeypots so you know i'm increasing the

9464
08:32:18,878 --> 08:32:22,798
number of exposed rdp systems but uh

9465
08:32:22,798 --> 08:32:25,840
it's used and it's a low-hanging fruit

9466
08:32:25,840 --> 08:32:29,200
and it's brute forceable so of course

9467
08:32:29,200 --> 08:32:30,958
and and you know the ransomware groups

9468
08:32:30,958 --> 08:32:32,878
they're going after a low-hanging fruit

9469
08:32:32,878 --> 08:32:35,840
um but in the octa case they purchased

9470
08:32:35,840 --> 08:32:39,040
credentials on the forum and then you

9471
08:32:39,040 --> 08:32:41,680
leverage them and there's there are rdp

9472
08:32:41,680 --> 08:32:45,440
credentials for sale on forums so yeah

9473
08:32:45,440 --> 08:32:48,798
yes it's real it's used um and it's

9474
08:32:48,798 --> 08:32:51,520
it's not going to go away but uh i mean

9475
08:32:51,520 --> 08:32:55,200
stop exposing rdp

9476
08:32:56,478 --> 08:32:58,958
um in my case what i can say for sure is

9477
08:32:58,958 --> 08:33:00,638
that there are a lot of i mean i spoke

9478
08:33:00,638 --> 08:33:02,718
about it a little bit in my slides

9479
08:33:02,718 --> 08:33:04,240
just from the three sample domains i

9480
08:33:04,240 --> 08:33:06,718
looked at i think it was over 400

9481
08:33:06,718 --> 08:33:09,840
different domains with active mx records

9482
08:33:09,840 --> 08:33:11,840
that were nonsense domains that don't

9483
08:33:11,840 --> 08:33:13,360
have real services that i'm aware of

9484
08:33:13,360 --> 08:33:14,558
behind them

9485
08:33:14,558 --> 08:33:15,920
the bigger question is who's behind them

9486
08:33:15,920 --> 08:33:17,520
and what are they using them for i think

9487
08:33:17,520 --> 08:33:19,280
the part of my talk that

9488
08:33:19,280 --> 08:33:20,638
was most interesting and i think

9489
08:33:20,638 --> 08:33:22,160
impactful for me is that it's a passive

9490
08:33:22,160 --> 08:33:25,360
technique i can stand up a mail server

9491
08:33:25,360 --> 08:33:27,200
completely anonymously on a vps anywhere

9492
08:33:27,200 --> 08:33:28,718
in the world and i can receive these

9493
08:33:28,718 --> 08:33:31,120
emails what i do with them i think you

9494
08:33:31,120 --> 08:33:32,558
know

9495
08:33:32,558 --> 08:33:34,478
as an attacker i think that's something

9496
08:33:34,478 --> 08:33:36,638
that needs to be researched maybe canary

9497
08:33:36,638 --> 08:33:38,398
tokens and sending things out to these

9498
08:33:38,398 --> 08:33:39,680
these addresses and just seeing what

9499
08:33:39,680 --> 08:33:40,718
happens

9500
08:33:40,718 --> 08:33:42,398
i'm really curious about that question

9501
08:33:42,398 --> 08:33:43,840
as well

9502
08:33:43,840 --> 08:33:45,520
and i don't know who's behind them

9503
08:33:45,520 --> 08:33:47,120
it would be interesting to see i don't

9504
08:33:47,120 --> 08:33:48,878
know of any known cases other than other

9505
08:33:48,878 --> 08:33:52,318
research i've seen on the subject but

9506
08:33:52,318 --> 08:33:54,958
i i don't doubt that it's happening

9507
08:33:54,958 --> 08:33:56,638
would be my take on it

9508
08:33:56,638 --> 08:33:57,600
okay

9509
08:33:57,600 --> 08:33:58,798
thank you

9510
08:33:58,798 --> 08:34:01,840
a quick question for olivier about rdp

9511
08:34:01,840 --> 08:34:04,398
did you did you

9512
08:34:04,398 --> 08:34:05,760
do you know if

9513
08:34:05,760 --> 08:34:07,440
two-factor authentication or

9514
08:34:07,440 --> 08:34:09,040
multiple-factor authentication would

9515
08:34:09,040 --> 08:34:10,638
mitigate

9516
08:34:10,638 --> 08:34:11,600
or

9517
08:34:11,600 --> 08:34:13,120
well we'll mitigate what you just

9518
08:34:13,120 --> 08:34:16,398
presented this afternoon

9519
08:34:16,398 --> 08:34:17,840
so i think it depends on how it's

9520
08:34:17,840 --> 08:34:20,878
implemented uh and i haven't looked at

9521
08:34:20,878 --> 08:34:22,718
implementations i would be interested in

9522
08:34:22,718 --> 08:34:24,638
knowing popular free ones because i

9523
08:34:24,638 --> 08:34:26,478
don't want to pay for service to just

9524
08:34:26,478 --> 08:34:31,040
attack it um but um i let's let's assume

9525
08:34:31,040 --> 08:34:33,520
that it's a pin added at the end of your

9526
08:34:33,520 --> 08:34:35,440
password

9527
08:34:35,440 --> 08:34:38,878
then the net ntlm capture would work but

9528
08:34:38,878 --> 08:34:41,600
the hash would potentially be harder to

9529
08:34:41,600 --> 08:34:45,280
crack unless you know that is the

9530
08:34:45,280 --> 08:34:47,280
nip appended and then you add that to

9531
08:34:47,280 --> 08:34:49,600
your cracking rules

9532
08:34:49,600 --> 08:34:50,558
uh

9533
08:34:50,558 --> 08:34:52,958
so this would still work but is this how

9534
08:34:52,958 --> 08:34:54,718
they implement um

9535
08:34:54,718 --> 08:34:57,360
two factor for rdp i don't know

9536
08:34:57,360 --> 08:34:59,840
i'm sorry i don't know but i mean i i

9537
08:34:59,840 --> 08:35:02,318
needed to ask but uh it's fair i think

9538
08:35:02,318 --> 08:35:03,760
it's a fair answer

9539
08:35:03,760 --> 08:35:05,440
uh now we're going to talk about

9540
08:35:05,440 --> 08:35:08,240
honeypots um because it's a field that

9541
08:35:08,240 --> 08:35:10,638
is growing in the cyber security

9542
08:35:10,638 --> 08:35:13,200
industry there are some companies that

9543
08:35:13,200 --> 08:35:15,840
dedicate uh that they really make

9544
08:35:15,840 --> 08:35:18,000
products that make it easy to deploy

9545
08:35:18,000 --> 08:35:19,280
honeypots

9546
08:35:19,280 --> 08:35:21,680
so i think pi rdp is a great project to

9547
08:35:21,680 --> 08:35:23,680
build honeypots

9548
08:35:23,680 --> 08:35:25,280
probably there will be probably

9549
08:35:25,280 --> 08:35:26,878
something to do with uh

9550
08:35:26,878 --> 08:35:30,478
with uh with your your work

9551
08:35:30,478 --> 08:35:32,240
but uh

9552
08:35:32,240 --> 08:35:34,080
do you think it would be a great idea to

9553
08:35:34,080 --> 08:35:37,440
to use pi rdp for honeypot and literally

9554
08:35:37,440 --> 08:35:38,240
have

9555
08:35:38,240 --> 08:35:40,878
let's say sophisticated actors

9556
08:35:40,878 --> 08:35:43,360
with breadcrumbs with you put some hints

9557
08:35:43,360 --> 08:35:44,958
you put some password on the network and

9558
08:35:44,958 --> 08:35:48,398
have them reach your server and monitor

9559
08:35:48,398 --> 08:35:51,760
it what do you think about that

9560
08:35:51,920 --> 08:35:55,280
i think this is what i'm doing right now

9561
08:35:55,280 --> 08:35:57,920
no but the the problem is that uh like

9562
08:35:57,920 --> 08:36:00,558
lately we we had um

9563
08:36:00,558 --> 08:36:02,000
we had actor interact with our

9564
08:36:02,000 --> 08:36:03,840
headphones and i i

9565
08:36:03,840 --> 08:36:04,798
we

9566
08:36:04,798 --> 08:36:06,558
some of the attacks they kind of stopped

9567
08:36:06,558 --> 08:36:08,878
doing them and then i was like why is so

9568
08:36:08,878 --> 08:36:11,120
and looking at the replay i i was like

9569
08:36:11,120 --> 08:36:12,958
okay they're transferring a large amount

9570
08:36:12,958 --> 08:36:14,878
of files so

9571
08:36:14,878 --> 08:36:17,520
i i reproduced it and uh it turns out we

9572
08:36:17,520 --> 08:36:19,760
have a bug so that the transfer really

9573
08:36:19,760 --> 08:36:21,360
slows down

9574
08:36:21,360 --> 08:36:24,000
i'm not sure quite what this is but i

9575
08:36:24,000 --> 08:36:26,878
think that we're so eagerly fetching

9576
08:36:26,878 --> 08:36:28,718
client-side files

9577
08:36:28,718 --> 08:36:31,680
that even on a stat system call so the

9578
08:36:31,680 --> 08:36:33,200
equivalent of a stat system call but

9579
08:36:33,200 --> 08:36:35,360
like i want to know the size of the file

9580
08:36:35,360 --> 08:36:37,520
and i want to know the permissions for

9581
08:36:37,520 --> 08:36:40,398
example we are grabbing the file so if

9582
08:36:40,398 --> 08:36:42,958
the person mounts a drive with a lot of

9583
08:36:42,958 --> 08:36:45,200
stuff on it and then gra

9584
08:36:45,200 --> 08:36:46,718
drops

9585
08:36:46,718 --> 08:36:49,600
with thousands of files you know drops a

9586
08:36:49,600 --> 08:36:51,318
folder well

9587
08:36:51,318 --> 08:36:53,520
explorer.exe will do

9588
08:36:53,520 --> 08:36:56,240
a stat on all these files in order to

9589
08:36:56,240 --> 08:36:58,798
just show how long the transfer will be

9590
08:36:58,798 --> 08:37:00,958
but priority p in the middle is doing

9591
08:37:00,958 --> 08:37:02,638
just like

9592
08:37:02,638 --> 08:37:05,280
i want all of them and so i we have

9593
08:37:05,280 --> 08:37:07,520
issues to work on regarding that

9594
08:37:07,520 --> 08:37:09,760
so unfortunately i haven't caught but we

9595
08:37:09,760 --> 08:37:14,478
know we so we've seen the minor um

9596
08:37:14,478 --> 08:37:16,478
crypto miner stuff being transferred and

9597
08:37:16,478 --> 08:37:18,958
stuff like that but we do have um

9598
08:37:18,958 --> 08:37:20,558
scalability

9599
08:37:20,558 --> 08:37:22,718
things to look at also

9600
08:37:22,718 --> 08:37:26,080
uh for example like on a

9601
08:37:26,080 --> 08:37:29,120
on a typical week we'll have like

9602
08:37:29,120 --> 08:37:31,760
17 000 replay files to look at so i

9603
08:37:31,760 --> 08:37:33,920
really have a triage problem the problem

9604
08:37:33,920 --> 08:37:35,600
with those replay files is that they are

9605
08:37:35,600 --> 08:37:38,798
all unique b and binary but because they

9606
08:37:38,798 --> 08:37:40,878
are all unique and even if you hash them

9607
08:37:40,878 --> 08:37:42,638
they're all unique because there are

9608
08:37:42,638 --> 08:37:44,958
timestamps in that protocol so i need to

9609
08:37:44,958 --> 08:37:47,120
find a way and and lisandro was working

9610
08:37:47,120 --> 08:37:49,120
on that actually not so long ago but we

9611
08:37:49,120 --> 08:37:52,398
need a way to uh factor out all of the

9612
08:37:52,398 --> 08:37:54,798
time stamping and the bits of the

9613
08:37:54,798 --> 08:37:56,878
protocol we don't care about and then

9614
08:37:56,878 --> 08:37:58,798
focus on the interesting things because

9615
08:37:58,798 --> 08:38:00,160
the only the other thing i want to do

9616
08:38:00,160 --> 08:38:02,160
with those honeypots more so than

9617
08:38:02,160 --> 08:38:05,760
finding threat actors is finding also uh

9618
08:38:05,760 --> 08:38:08,638
attacks like uh potential zero days or

9619
08:38:08,638 --> 08:38:11,040
you know blue keep and stuff like that

9620
08:38:11,040 --> 08:38:12,878
we do have blue keep detections and we

9621
08:38:12,878 --> 08:38:14,958
do have detection for a couple of them

9622
08:38:14,958 --> 08:38:18,240
built in but but um but like why did the

9623
08:38:18,240 --> 08:38:21,120
protocol fail or who is this

9624
08:38:21,120 --> 08:38:23,440
what tool is this guy using that is

9625
08:38:23,440 --> 08:38:26,000
creating this kind of interaction uh at

9626
08:38:26,000 --> 08:38:28,318
the protocol level so we're all looking

9627
08:38:28,318 --> 08:38:30,398
at that but it's a ton of work and

9628
08:38:30,398 --> 08:38:31,920
i'm have a small team and we're not

9629
08:38:31,920 --> 08:38:34,478
making money with any of this so this is

9630
08:38:34,478 --> 08:38:37,360
why it's slow

9631
08:38:37,600 --> 08:38:39,440
make sense

9632
08:38:39,440 --> 08:38:41,120
all right i'm going to jump into more

9633
08:38:41,120 --> 08:38:42,958
high-level questions

9634
08:38:42,958 --> 08:38:45,360
about red teaming the field in general

9635
08:38:45,360 --> 08:38:47,760
just do your best guys

9636
08:38:47,760 --> 08:38:49,920
i think it's going to be fun so my first

9637
08:38:49,920 --> 08:38:51,760
question would be

9638
08:38:51,760 --> 08:38:53,760
based on your work what do you think is

9639
08:38:53,760 --> 08:38:56,878
the cyber security industry's best next

9640
08:38:56,878 --> 08:38:59,840
move

9641
08:39:02,638 --> 08:39:04,798
uh that's yeah that's that's a really

9642
08:39:04,798 --> 08:39:07,200
kind of big question i think

9643
08:39:07,200 --> 08:39:08,558
the next best move for the cyber

9644
08:39:08,558 --> 08:39:10,398
security industry i think is train more

9645
08:39:10,398 --> 08:39:11,520
people

9646
08:39:11,520 --> 08:39:14,558
i think there's there's a lot of uh need

9647
08:39:14,558 --> 08:39:16,638
in cyber security and not necessarily

9648
08:39:16,638 --> 08:39:19,280
experts have a super high caliber but

9649
08:39:19,280 --> 08:39:21,040
there's a lot of work and just grunt

9650
08:39:21,040 --> 08:39:22,638
work that goes into research whether

9651
08:39:22,638 --> 08:39:25,440
it's going through honeypot files or

9652
08:39:25,440 --> 08:39:27,520
looking at stats in an email collection

9653
08:39:27,520 --> 08:39:28,958
and there's a lot of work that can be

9654
08:39:28,958 --> 08:39:30,160
done and i think there's a lot of

9655
08:39:30,160 --> 08:39:33,680
interest um in the field and i think

9656
08:39:33,680 --> 08:39:35,520
hire more people is probably the the

9657
08:39:35,520 --> 08:39:37,280
first thing i would say is the next best

9658
08:39:37,280 --> 08:39:38,558
thing we can do

9659
08:39:38,558 --> 08:39:40,638
train more people

9660
08:39:40,638 --> 08:39:42,478
i'm glad you finished by with train

9661
08:39:42,478 --> 08:39:44,240
because hiring more people it's tough

9662
08:39:44,240 --> 08:39:46,240
right now

9663
08:39:46,240 --> 08:39:48,240
okay i'll try this

9664
08:39:48,240 --> 08:39:50,718
this is super accurate and good uh i'll

9665
08:39:50,718 --> 08:39:51,840
try to do

9666
08:39:51,840 --> 08:39:54,878
go in a different direction um okay so

9667
08:39:54,878 --> 08:39:56,638
during the pandemic something i was not

9668
08:39:56,638 --> 08:39:58,558
doing a lot that i started doing again

9669
08:39:58,558 --> 08:40:01,680
is play dnd dungeon and dragons and i'll

9670
08:40:01,680 --> 08:40:04,558
i'll link it with cyber security

9671
08:40:04,558 --> 08:40:07,600
so one of the first things not the first

9672
08:40:07,600 --> 08:40:09,520
one of the latest offerings of my

9673
08:40:09,520 --> 08:40:13,520
company is a tabletop exercises for

9674
08:40:13,520 --> 08:40:16,398
threat simulation and so

9675
08:40:16,398 --> 08:40:17,200
the

9676
08:40:17,200 --> 08:40:20,318
what i like when i heard that is that

9677
08:40:20,318 --> 08:40:22,398
we are now in a state

9678
08:40:22,398 --> 08:40:25,120
where we are assuming breach

9679
08:40:25,120 --> 08:40:26,558
we we

9680
08:40:26,558 --> 08:40:28,478
we no longer think we're gonna protect

9681
08:40:28,478 --> 08:40:31,040
them we are assuming breach but now we

9682
08:40:31,040 --> 08:40:32,958
are testing you

9683
08:40:32,958 --> 08:40:34,718
how are you gonna react

9684
08:40:34,718 --> 08:40:36,558
and you know what's the drill do you

9685
08:40:36,558 --> 08:40:38,718
have plans and this can be done in a

9686
08:40:38,718 --> 08:40:42,000
simulated way without much cost

9687
08:40:42,000 --> 08:40:43,440
and and what's interesting is that you

9688
08:40:43,440 --> 08:40:45,600
can go deeper and then validate it one

9689
08:40:45,600 --> 08:40:47,520
day will that you know we'll have red

9690
08:40:47,520 --> 08:40:50,318
teamers validate the plans but for most

9691
08:40:50,318 --> 08:40:51,840
organizations and we deal with

9692
08:40:51,840 --> 08:40:53,520
medium-sized companies and smaller

9693
08:40:53,520 --> 08:40:55,920
companies but for most of them

9694
08:40:55,920 --> 08:40:58,080
sitting down with smart people who you

9695
08:40:58,080 --> 08:41:01,200
know play some corporate dnd you know

9696
08:41:01,200 --> 08:41:02,558
okay let's

9697
08:41:02,558 --> 08:41:06,160
simulate like oh you this user received

9698
08:41:06,160 --> 08:41:08,558
an email and clicked on that link what's

9699
08:41:08,558 --> 08:41:11,360
your visibility uh where it was

9700
08:41:11,360 --> 08:41:12,878
downloaded what do you have on your

9701
08:41:12,878 --> 08:41:14,718
endpoint you know and then you just go

9702
08:41:14,718 --> 08:41:16,958
through this mental exercise and then

9703
08:41:16,958 --> 08:41:19,360
eventually you say like oh the computer

9704
08:41:19,360 --> 08:41:21,520
is getting encrypted what are the map

9705
08:41:21,520 --> 08:41:23,520
drives that are you know accessible to

9706
08:41:23,520 --> 08:41:25,360
that computer and you just you know

9707
08:41:25,360 --> 08:41:27,680
played you know you even could roll some

9708
08:41:27,680 --> 08:41:29,600
dice if you want you know

9709
08:41:29,600 --> 08:41:31,680
like oh this the the n drive was

9710
08:41:31,680 --> 08:41:34,160
encrypted i thought i had eight you know

9711
08:41:34,160 --> 08:41:36,558
i i i'm making this up i know i

9712
08:41:36,558 --> 08:41:39,120
don't and i'm not doing the service it

9713
08:41:39,120 --> 08:41:40,638
probably doesn't look like that at all

9714
08:41:40,638 --> 08:41:42,798
but to me it sounds like interesting and

9715
08:41:42,798 --> 08:41:44,160
then you can

9716
08:41:44,160 --> 08:41:45,120
uh

9717
08:41:45,120 --> 08:41:47,040
you know this is very effective and low

9718
08:41:47,040 --> 08:41:49,440
cost because it's just a long half hour

9719
08:41:49,440 --> 08:41:52,160
half day meeting of simulation and then

9720
08:41:52,160 --> 08:41:54,160
imagine the client has a long list of

9721
08:41:54,160 --> 08:41:56,558
stuff to look at he was like i couldn't

9722
08:41:56,558 --> 08:41:58,398
answer half

9723
08:41:58,398 --> 08:42:01,040
of the questions and so then you come

9724
08:42:01,040 --> 08:42:03,280
back and then you iterate so i think we

9725
08:42:03,280 --> 08:42:06,558
we are at a maturity level where

9726
08:42:06,558 --> 08:42:08,638
we can get

9727
08:42:08,638 --> 08:42:11,280
a lot done and effectively done to get

9728
08:42:11,280 --> 08:42:16,638
better by by knowing how long to spend

9729
08:42:16,638 --> 08:42:19,120
and then buying the things that will

9730
08:42:19,120 --> 08:42:22,240
protect us you know but not not buy

9731
08:42:22,240 --> 08:42:27,360
first because you have uh capex you know

9732
08:42:27,360 --> 08:42:30,798
use humans to buy intelligently products

9733
08:42:30,798 --> 08:42:32,558
instead and i think this is where we

9734
08:42:32,558 --> 08:42:33,680
should go

9735
08:42:33,680 --> 08:42:37,040
awesome awesome answer

9736
08:42:37,120 --> 08:42:38,718
i was going to talk about purple teaming

9737
08:42:38,718 --> 08:42:41,360
i think the industry really needs a

9738
08:42:41,360 --> 08:42:43,920
purple team exercise they shouldn't pay

9739
08:42:43,920 --> 08:42:46,638
for big red teams just for

9740
08:42:46,638 --> 08:42:48,958
you know having a surprise and a big

9741
08:42:48,958 --> 08:42:51,040
report that showed them that they have

9742
08:42:51,040 --> 08:42:52,958
some mistakes

9743
08:42:52,958 --> 08:42:53,840
uh

9744
08:42:53,840 --> 08:42:56,240
but i i really like your answer

9745
08:42:56,240 --> 08:42:58,160
i would love to be invited to such a

9746
08:42:58,160 --> 08:43:01,600
dungeon and dragon game

9747
08:43:01,600 --> 08:43:02,878
so

9748
08:43:02,878 --> 08:43:07,040
another question not an easy one but

9749
08:43:07,120 --> 08:43:08,318
anyway

9750
08:43:08,318 --> 08:43:10,478
what's the best way to use a red team

9751
08:43:10,478 --> 08:43:12,478
for companies

9752
08:43:12,478 --> 08:43:13,840
uh

9753
08:43:13,840 --> 08:43:15,840
again based on your work if if if you

9754
08:43:15,840 --> 08:43:17,760
can

9755
08:43:17,760 --> 08:43:19,840
like should it be to

9756
08:43:19,840 --> 08:43:22,398
shake to rattle the company's cage to

9757
08:43:22,398 --> 08:43:24,000
show the circuit that security is

9758
08:43:24,000 --> 08:43:25,040
important

9759
08:43:25,040 --> 08:43:26,798
should it be to ramp up the technology

9760
08:43:26,798 --> 08:43:30,398
the process the humans

9761
08:43:30,398 --> 08:43:32,638
how do you see red teaming in in the

9762
08:43:32,638 --> 08:43:35,120
industry

9763
08:43:35,280 --> 08:43:36,160
um

9764
08:43:36,160 --> 08:43:37,680
it's a really good question and i think

9765
08:43:37,680 --> 08:43:39,680
a lot of times

9766
08:43:39,680 --> 08:43:41,680
red teaming penetration testing is

9767
08:43:41,680 --> 08:43:44,000
misplaced um

9768
08:43:44,000 --> 08:43:45,600
it's the sexy thing to do right we're

9769
08:43:45,600 --> 08:43:46,638
gonna hire some hackers and they're

9770
08:43:46,638 --> 08:43:48,240
gonna show us how they broke in

9771
08:43:48,240 --> 08:43:50,958
um i think it's often mistimed or

9772
08:43:50,958 --> 08:43:53,680
maybe not conducted in the right

9773
08:43:53,680 --> 08:43:56,080
frame of mind in the right context

9774
08:43:56,080 --> 08:43:57,120
um

9775
08:43:57,120 --> 08:43:58,398
you know

9776
08:43:58,398 --> 08:44:00,318
if i did we used an analogy earlier if i

9777
08:44:00,318 --> 08:44:01,680
take my five-year-old and bring her to

9778
08:44:01,680 --> 08:44:04,160
the to the taekwondo

9779
08:44:04,160 --> 08:44:08,080
arena and i say tester

9780
08:44:08,080 --> 08:44:09,920
you know what's the result going to be

9781
08:44:09,920 --> 08:44:11,440
um i don't know if it's a very

9782
08:44:11,440 --> 08:44:13,600
productive exercise to just do red team

9783
08:44:13,600 --> 08:44:15,760
engagements without first taking the

9784
08:44:15,760 --> 08:44:18,958
baby steps before you're ready for it

9785
08:44:18,958 --> 08:44:20,798
i think purple teaming is a great use of

9786
08:44:20,798 --> 08:44:23,120
red team assets to work alongside and

9787
08:44:23,120 --> 08:44:25,280
train blue teams uh turn against each

9788
08:44:25,280 --> 08:44:28,398
other um and i think that red teams are

9789
08:44:28,398 --> 08:44:30,958
a great validation tool and

9790
08:44:30,958 --> 08:44:32,000
i think when you reach a certain

9791
08:44:32,000 --> 08:44:34,080
maturity in your security organization

9792
08:44:34,080 --> 08:44:35,600
that's when a red team is is really

9793
08:44:35,600 --> 08:44:36,958
valuable

9794
08:44:36,958 --> 08:44:39,280
but i think you can start with basics

9795
08:44:39,280 --> 08:44:41,840
and not necessarily need a red team to

9796
08:44:41,840 --> 08:44:43,360
to introduce you to the basic best

9797
08:44:43,360 --> 08:44:46,558
security practices all the time

9798
08:44:46,558 --> 08:44:49,520
would be i guess my opinion on that

9799
08:44:49,520 --> 08:44:50,558
thank you

9800
08:44:50,558 --> 08:44:54,478
and it's also a a kind of a bloated term

9801
08:44:54,478 --> 08:44:56,398
right now like everyone's a red teamer

9802
08:44:56,398 --> 08:45:00,080
big i don't know man i'm sure you're not

9803
08:45:00,080 --> 08:45:00,958
and

9804
08:45:00,958 --> 08:45:03,520
the if you have a scope are you really a

9805
08:45:03,520 --> 08:45:05,600
red teamer you know type stuff but i

9806
08:45:05,600 --> 08:45:08,160
think this is the the

9807
08:45:08,160 --> 08:45:10,478
definitions and i and we don't have do

9808
08:45:10,478 --> 08:45:12,798
we have a standard bodies that defines

9809
08:45:12,798 --> 08:45:14,878
like what are these or we're just like

9810
08:45:14,878 --> 08:45:16,318
the problem is that there are many

9811
08:45:16,318 --> 08:45:18,318
definitions if you follow spectre ups

9812
08:45:18,318 --> 08:45:19,840
they have their own definition of red

9813
08:45:19,840 --> 08:45:22,160
team if you read someone else it's

9814
08:45:22,160 --> 08:45:24,318
something else i think it's a language

9815
08:45:24,318 --> 08:45:28,240
abuse so red team is usually used for

9816
08:45:28,240 --> 08:45:30,478
offensive security or just pen testing

9817
08:45:30,478 --> 08:45:33,280
ethical hacking

9818
08:45:33,280 --> 08:45:34,798
in my opinion red teaming is really

9819
08:45:34,798 --> 08:45:35,840
about

9820
08:45:35,840 --> 08:45:38,080
you know training technology process

9821
08:45:38,080 --> 08:45:40,558
humans i i follow more the spectrops

9822
08:45:40,558 --> 08:45:42,318
definition so it's about

9823
08:45:42,318 --> 08:45:45,760
simulating threat actor based uh

9824
08:45:45,760 --> 08:45:48,398
by using several ttps to

9825
08:45:48,398 --> 08:45:50,558
create training opportunities for a blue

9826
08:45:50,558 --> 08:45:51,520
team

9827
08:45:51,520 --> 08:45:53,680
uh but in the industry it's used for

9828
08:45:53,680 --> 08:45:55,920
anything you're right

9829
08:45:55,920 --> 08:45:57,040
um

9830
08:45:57,040 --> 08:45:58,878
yeah

9831
08:45:58,878 --> 08:46:00,558
good answer my time

9832
08:46:00,558 --> 08:46:02,718
no but i just want this to be clear

9833
08:46:02,718 --> 08:46:04,958
right the he is the one who should

9834
08:46:04,958 --> 08:46:06,798
answer those questions so this guy

9835
08:46:06,798 --> 08:46:08,878
manages a red team at a large

9836
08:46:08,878 --> 08:46:11,680
institution and he like i am a director

9837
08:46:11,680 --> 08:46:14,798
of research and uh what about you

9838
08:46:14,798 --> 08:46:16,718
i didn't read you i i like red teaming

9839
08:46:16,718 --> 08:46:18,718
stuff but i'm not a red teamer either um

9840
08:46:18,718 --> 08:46:20,558
i'm i'm interested in it but i'm

9841
08:46:20,558 --> 08:46:21,840
definitely not at the caliber of either

9842
08:46:21,840 --> 08:46:23,040
of these guys

9843
08:46:23,040 --> 08:46:24,958
um but i don't need to be to pull off an

9844
08:46:24,958 --> 08:46:26,718
effective attack either

9845
08:46:26,718 --> 08:46:28,318
which is sort of what i was getting at

9846
08:46:28,318 --> 08:46:29,840
is we don't need the best hacker in the

9847
08:46:29,840 --> 08:46:32,318
world to prove that you're fundamentally

9848
08:46:32,318 --> 08:46:34,318
insecure so i think there's a time and a

9849
08:46:34,318 --> 08:46:38,398
place to to conduct these exercises and

9850
08:46:38,398 --> 08:46:40,718
again you know my white belt

9851
08:46:40,718 --> 08:46:42,718
five-year-old is not going to

9852
08:46:42,718 --> 08:46:44,318
stand a chance in a sparring session

9853
08:46:44,318 --> 08:46:45,920
against uh

9854
08:46:45,920 --> 08:46:48,398
mike tyson yeah exactly there you go

9855
08:46:48,398 --> 08:46:51,040
so i think context matters and time and

9856
08:46:51,040 --> 08:46:53,040
place and asking yourself why are we

9857
08:46:53,040 --> 08:46:55,200
hiring a red team for what to embarrass

9858
08:46:55,200 --> 08:46:57,040
us are we doing it to actually improve

9859
08:46:57,040 --> 08:46:58,958
our security culture

9860
08:46:58,958 --> 08:47:02,000
i think that's what it comes down to

9861
08:47:02,000 --> 08:47:03,040
all right

9862
08:47:03,040 --> 08:47:04,638
that's good so the next red theme

9863
08:47:04,638 --> 08:47:08,920
questions goes to martin directly

9864
08:47:09,600 --> 08:47:12,478
you want me to read it

9865
08:47:12,958 --> 08:47:14,558
okay i'm gonna try but or we'll have

9866
08:47:14,558 --> 08:47:19,280
like us and then you that's nice i think

9867
08:47:19,840 --> 08:47:21,600
well i i was gonna say it's my last

9868
08:47:21,600 --> 08:47:24,000
question we have just a few minutes left

9869
08:47:24,000 --> 08:47:24,798
uh

9870
08:47:24,798 --> 08:47:27,760
but i will try to answer uh

9871
08:47:27,760 --> 08:47:30,798
and it's unlike the

9872
08:47:31,120 --> 08:47:32,798
it's the worst question because i know

9873
08:47:32,798 --> 08:47:35,520
it will it will raise a debate

9874
08:47:35,520 --> 08:47:36,558
but

9875
08:47:36,558 --> 08:47:38,398
nice

9876
08:47:38,398 --> 08:47:40,240
it's about red team

9877
08:47:40,240 --> 08:47:43,840
the rt ost debate so red team open

9878
08:47:43,840 --> 08:47:45,520
source tools

9879
08:47:45,520 --> 08:47:46,398
so

9880
08:47:46,398 --> 08:47:48,958
a lot of people

9881
08:47:48,958 --> 08:47:51,120
care about sharing they they say that

9882
08:47:51,120 --> 08:47:52,798
sharing is caring

9883
08:47:52,798 --> 08:47:53,920
you should

9884
08:47:53,920 --> 08:47:56,958
publish your open source tools your you

9885
08:47:56,958 --> 08:47:59,840
both have very awesome research

9886
08:47:59,840 --> 08:48:02,398
uh it can be good it can be good used

9887
08:48:02,398 --> 08:48:05,040
for the good but also for the bad

9888
08:48:05,040 --> 08:48:06,318
and

9889
08:48:06,318 --> 08:48:08,958
so what do you think about publishing

9890
08:48:08,958 --> 08:48:11,600
all your work you said before that you

9891
08:48:11,600 --> 08:48:14,718
wouldn't publish your data but maybe you

9892
08:48:14,718 --> 08:48:17,600
will publish tools to accelerate your

9893
08:48:17,600 --> 08:48:18,958
this work

9894
08:48:18,958 --> 08:48:20,000
so

9895
08:48:20,000 --> 08:48:21,680
what do you think about this debate and

9896
08:48:21,680 --> 08:48:23,120
would you publish

9897
08:48:23,120 --> 08:48:24,558
your job

9898
08:48:24,558 --> 08:48:26,398
um i'm a little bit biased because i'm a

9899
08:48:26,398 --> 08:48:28,638
net beneficiary of open source tools i'm

9900
08:48:28,638 --> 08:48:30,840
not i'm not a net contributor

9901
08:48:30,840 --> 08:48:32,958
um i think there's a lot of value in

9902
08:48:32,958 --> 08:48:34,958
open source and

9903
08:48:34,958 --> 08:48:36,718
but i do respect the fact that people

9904
08:48:36,718 --> 08:48:38,000
will spend a lot of time developing

9905
08:48:38,000 --> 08:48:39,920
techniques and and developing tools for

9906
08:48:39,920 --> 08:48:42,558
themselves um personally i'm on the side

9907
08:48:42,558 --> 08:48:44,558
of open source i think if you discover a

9908
08:48:44,558 --> 08:48:46,558
vulnerability you should disclose it and

9909
08:48:46,558 --> 08:48:48,318
do course i think putting tools out

9910
08:48:48,318 --> 08:48:50,398
there that people can take advantage of

9911
08:48:50,398 --> 08:48:52,240
they're great learning tools as you say

9912
08:48:52,240 --> 08:48:53,680
i tend to be on the open source side of

9913
08:48:53,680 --> 08:48:55,120
things

9914
08:48:55,120 --> 08:48:56,878
but again i'm biased because i haven't

9915
08:48:56,878 --> 08:48:58,798
spent hundreds of hours developing a

9916
08:48:58,798 --> 08:49:01,520
tool uh that may be obsolete uh three

9917
08:49:01,520 --> 08:49:03,120
days after i release it

9918
08:49:03,120 --> 08:49:04,638
um

9919
08:49:04,638 --> 08:49:06,318
thanks my opinion you want me to answer

9920
08:49:06,318 --> 08:49:07,280
first

9921
08:49:07,280 --> 08:49:08,318
oh man

9922
08:49:08,318 --> 08:49:12,840
i'm i'm a kind of a a philosopher in my

9923
08:49:12,840 --> 08:49:15,760
times and

9924
08:49:15,760 --> 08:49:19,760
i think i think we lack perspective

9925
08:49:19,760 --> 08:49:21,840
like

9926
08:49:21,840 --> 08:49:26,160
piratery existed and was authorized or

9927
08:49:26,160 --> 08:49:28,878
you know or happened without

9928
08:49:28,878 --> 08:49:31,200
no one doing anything against it because

9929
08:49:31,200 --> 08:49:32,558
it was

9930
08:49:32,558 --> 08:49:35,600
you know all countries were separated

9931
08:49:35,600 --> 08:49:38,398
but then eventually the pirates did so

9932
08:49:38,398 --> 08:49:41,280
much damage that the countries had to

9933
08:49:41,280 --> 08:49:43,120
get together and create this

9934
08:49:43,120 --> 08:49:46,318
international zone and then

9935
08:49:46,318 --> 08:49:49,040
 kill them you know get rid of

9936
08:49:49,040 --> 08:49:50,958
them because they were losing so much

9937
08:49:50,958 --> 08:49:53,359
money

9938
08:49:53,760 --> 08:49:56,878
so i think we're at the era like

9939
08:49:56,878 --> 08:50:00,318
basically we're we're creating firearms

9940
08:50:00,318 --> 08:50:01,200
okay

9941
08:50:01,200 --> 08:50:03,120
i wouldn't like uh this is not go

9942
08:50:03,120 --> 08:50:06,080
seguro's opinion of anything

9943
08:50:06,080 --> 08:50:08,160
this is my own here okay

9944
08:50:08,160 --> 08:50:10,558
i think we're creating firearms

9945
08:50:10,558 --> 08:50:13,360
and uh i don't think you're allowed to

9946
08:50:13,360 --> 08:50:15,680
create firearms right now right i i

9947
08:50:15,680 --> 08:50:17,280
don't know to be honest i don't know i

9948
08:50:17,280 --> 08:50:19,680
know people try to 3d print them maybe

9949
08:50:19,680 --> 08:50:21,520
we're loud i don't in and in canada and

9950
08:50:21,520 --> 08:50:23,200
the us it's probably different

9951
08:50:23,200 --> 08:50:25,120
but

9952
08:50:25,120 --> 08:50:28,240
i think that we lack this perspective so

9953
08:50:28,240 --> 08:50:30,718
for now we're doing it we're having fun

9954
08:50:30,718 --> 08:50:33,280
but eventually

9955
08:50:33,280 --> 08:50:35,440
a hundred years for now if climate

9956
08:50:35,440 --> 08:50:39,280
change didn't kill all of us

9957
08:50:39,280 --> 08:50:41,360
we will look at this and be like these

9958
08:50:41,360 --> 08:50:43,360
guys were crazy

9959
08:50:43,360 --> 08:50:45,360
like they were allowed

9960
08:50:45,360 --> 08:50:47,280
to create

9961
08:50:47,280 --> 08:50:50,638
destructive tools and put them online

9962
08:50:50,638 --> 08:50:53,200
whereas the defenders

9963
08:50:53,200 --> 08:50:55,920
were not sharing right that that's the

9964
08:50:55,920 --> 08:50:58,478
asymmetry of it right now and now the

9965
08:50:58,478 --> 08:51:00,798
blue team folks now are sharing you know

9966
08:51:00,798 --> 08:51:03,200
twitter accounts with iocs automated and

9967
08:51:03,200 --> 08:51:06,000
stuff like that and and there's a lot of

9968
08:51:06,000 --> 08:51:09,440
blue team talks good blue team talks now

9969
08:51:09,440 --> 08:51:11,280
when i started

9970
08:51:11,280 --> 08:51:14,160
that didn't exist blue team were kind of

9971
08:51:14,160 --> 08:51:15,760
like uh this must

9972
08:51:15,760 --> 08:51:17,360
suck you look at

9973
08:51:17,360 --> 08:51:18,980
ids all day

9974
08:51:18,980 --> 08:51:22,000
[Music]

9975
08:51:22,000 --> 08:51:24,638
you know now blue team is sexy which is

9976
08:51:24,638 --> 08:51:27,520
good which is very important which is

9977
08:51:27,520 --> 08:51:30,718
part of education that is going on but

9978
08:51:30,718 --> 08:51:32,958
they still have sharing problems because

9979
08:51:32,958 --> 08:51:35,920
the organizations that they are in don't

9980
08:51:35,920 --> 08:51:38,638
understand that they should share it's

9981
08:51:38,638 --> 08:51:40,478
not the fault of the blue teamers

9982
08:51:40,478 --> 08:51:42,478
themselves it's the fault of their

9983
08:51:42,478 --> 08:51:45,520
organizations and so this asymmetry is

9984
08:51:45,520 --> 08:51:47,600
not helping them and so the red team

9985
08:51:47,600 --> 08:51:49,920
they collaborate they create patreons

9986
08:51:49,920 --> 08:51:52,318
they have tools you can now have like

9987
08:51:52,318 --> 08:51:54,718
paid for offensive tooling that

9988
08:51:54,718 --> 08:51:56,398
eventually becomes free like the

9989
08:51:56,398 --> 08:51:58,478
porchetta industries guys which are very

9990
08:51:58,478 --> 08:52:00,558
good they're actually like really really

9991
08:52:00,558 --> 08:52:02,638
good with rdp right now i'm following

9992
08:52:02,638 --> 08:52:03,760
all that stuff

9993
08:52:03,760 --> 08:52:04,798
um

9994
08:52:04,798 --> 08:52:06,558
and

9995
08:52:06,558 --> 08:52:09,520
at at one point maybe we'll be like you

9996
08:52:09,520 --> 08:52:11,200
know what like and it will be an

9997
08:52:11,200 --> 08:52:13,840
incident like something will get hacked

9998
08:52:13,840 --> 08:52:15,360
that it's so

9999
08:52:15,360 --> 08:52:18,160
 bad that we'll be like okay you

10000
08:52:18,160 --> 08:52:20,000
know what it was a bad idea

10001
08:52:20,000 --> 08:52:21,680
the whole thing of like because they'll

10002
08:52:21,680 --> 08:52:23,760
use cobalt strike and stuff like

10003
08:52:23,760 --> 08:52:24,558
that

10004
08:52:24,558 --> 08:52:27,520
and so i and sorry if i'm talking

10005
08:52:27,520 --> 08:52:29,120
against you you'll have time you'll have

10006
08:52:29,120 --> 08:52:30,638
you'll be retired

10007
08:52:30,638 --> 08:52:32,160
by them

10008
08:52:32,160 --> 08:52:35,040
but i i i i don't think it makes sense

10009
08:52:35,040 --> 08:52:36,240
if you

10010
08:52:36,240 --> 08:52:37,840
think of it

10011
08:52:37,840 --> 08:52:40,478
from far enough

10012
08:52:40,478 --> 08:52:42,798
and last thing i'm

10013
08:52:42,798 --> 08:52:47,280
i told you i was a philosopher okay so

10014
08:52:47,520 --> 08:52:50,318
think about this at one point

10015
08:52:50,318 --> 08:52:53,120
fire protection you had to pay for it

10016
08:52:53,120 --> 08:52:55,760
okay you had a badge on your house

10017
08:52:55,760 --> 08:52:57,120
it was like

10018
08:52:57,120 --> 08:52:59,200
opt in with money

10019
08:52:59,200 --> 08:53:00,000
and

10020
08:53:00,000 --> 08:53:03,040
if you didn't had that the firemen would

10021
08:53:03,040 --> 08:53:06,000
come and water the house that had the

10022
08:53:06,000 --> 08:53:08,318
little badge but the other house would

10023
08:53:08,318 --> 08:53:09,840
burn right

10024
08:53:09,840 --> 08:53:12,958
so eventually it became

10025
08:53:12,958 --> 08:53:15,040
so much of an issue that it was

10026
08:53:15,040 --> 08:53:18,160
nationalized or municipalized

10027
08:53:18,160 --> 08:53:19,840
i'm not sure which but

10028
08:53:19,840 --> 08:53:22,558
like it's it's part of

10029
08:53:22,558 --> 08:53:25,200
the things that we need as a society and

10030
08:53:25,200 --> 08:53:27,600
so i think eventually government will be

10031
08:53:27,600 --> 08:53:30,160
so pissed off that it costs so much

10032
08:53:30,160 --> 08:53:32,638
money to so much companies that there

10033
08:53:32,638 --> 08:53:35,600
will be like you know av and you know

10034
08:53:35,600 --> 08:53:38,240
isp protection and security in general

10035
08:53:38,240 --> 08:53:39,200
will be

10036
08:53:39,200 --> 08:53:42,638
mandatory like built in the things and

10037
08:53:42,638 --> 08:53:45,520
which means that and if it's regularized

10038
08:53:45,520 --> 08:53:47,840
it will mean like anything trying to be

10039
08:53:47,840 --> 08:53:49,360
against that

10040
08:53:49,360 --> 08:53:51,920
will be outlawed

10041
08:53:51,920 --> 08:53:53,040
maybe

10042
08:53:53,040 --> 08:53:55,840
i don't know i'm just a philosopher

10043
08:53:55,840 --> 08:53:57,360
i should write a book we just need to

10044
08:53:57,360 --> 08:53:59,440
finish on that that was an amazing

10045
08:53:59,440 --> 08:54:01,280
question so thank you everyone i hope

10046
08:54:01,280 --> 08:54:04,558
you enjoyed uh i wish you a lot of flags

10047
08:54:04,558 --> 08:54:06,318
this weekend

10048
08:54:06,318 --> 08:54:08,798
pray with me for a windows track maybe

10049
08:54:08,798 --> 08:54:10,398
it would be fun

10050
08:54:10,398 --> 08:54:11,600
and

10051
08:54:11,600 --> 08:54:13,600
that's it thank you everyone

10052
08:54:13,600 --> 08:54:17,570
[Applause]

10053
08:55:00,718 --> 08:55:02,718
there's this

10054
08:55:02,718 --> 08:55:05,760
okay so just before you quit we do have

10055
08:55:05,760 --> 08:55:07,760
a feedback survey so if you want to give

10056
08:55:07,760 --> 08:55:09,840
comments to the conference

10057
08:55:09,840 --> 08:55:13,280
uh yeah uh go go to me or just go to the

10058
08:55:13,280 --> 08:55:15,680
survey we have the link there

10059
08:55:15,680 --> 08:55:18,080
uh thank you very much we'll send it

10060
08:55:18,080 --> 08:55:21,638
through our social

10061
08:55:23,380 --> 08:55:32,500
[Music]

10062
08:55:35,010 --> 08:55:39,010
[Music]

10063
08:55:41,060 --> 08:55:54,939
[Music]

10064
08:56:05,450 --> 08:56:08,580
[Music]

10065
08:56:18,290 --> 08:56:33,740
[Music]

10066
08:56:37,430 --> 08:56:40,529
[Music]

10067
08:56:42,540 --> 08:56:50,220
[Music]

10068
08:56:58,290 --> 08:57:01,470
[Music]

10069
08:57:04,250 --> 08:57:07,380
[Music]

10070
08:57:24,840 --> 08:57:31,120
[Music]

10071
08:57:31,120 --> 08:57:34,120
so

10072
08:57:36,050 --> 08:57:40,180
[Music]

10073
08:57:45,150 --> 08:58:05,099
[Music]

10074
08:58:12,770 --> 08:58:18,750
[Music]

10075
08:58:28,470 --> 08:58:43,910
[Music]

10076
08:58:46,950 --> 08:58:50,029
[Music]

10077
08:58:52,710 --> 08:58:58,790
[Music]

10078
08:59:09,040 --> 08:59:12,040
so

10079
08:59:12,420 --> 08:59:15,899
[Music]

10080
08:59:23,840 --> 08:59:25,920
you

