1
00:00:00,630 --> 00:00:03,739
[Music]

2
00:00:06,200 --> 00:00:09,440
this next speaker works in the languages

3
00:00:09,440 --> 00:00:11,849
optimization and libraries team at

4
00:00:11,849 --> 00:00:14,190
Google where they lead a team working to

5
00:00:14,190 --> 00:00:16,170
enable faster speed iteration and

6
00:00:16,170 --> 00:00:18,600
deployment of hardware accelerators in

7
00:00:18,600 --> 00:00:21,119
their free time they work on projects

8
00:00:21,119 --> 00:00:23,850
like I'm Tomo a range of development

9
00:00:23,850 --> 00:00:25,680
boards that fit inside your USB port

10
00:00:25,680 --> 00:00:28,170
their talk today will demonstrate the

11
00:00:28,170 --> 00:00:30,500
possibilities of a fully open source

12
00:00:30,500 --> 00:00:32,668
fpga tool chain

13
00:00:32,668 --> 00:00:34,800
please welcome to the hackaday super

14
00:00:34,800 --> 00:00:46,320
conference stage tim mithril Ansel hi I

15
00:00:46,320 --> 00:00:49,140
am Tim and I'll be giving this talk I

16
00:00:49,140 --> 00:00:53,010
have a hundred and fifteen slides and

17
00:00:53,010 --> 00:00:57,090
about thirty minutes so I brought

18
00:00:57,090 --> 00:01:00,390
something to help me along with that so

19
00:01:00,390 --> 00:01:03,210
I'm talking about FPGAs you'll have a

20
00:01:03,210 --> 00:01:07,010
badge with FPGAs and I like to think of

21
00:01:07,010 --> 00:01:10,500
FPGAs as converting hardware into

22
00:01:10,500 --> 00:01:12,420
software and I self-identify as a

23
00:01:12,420 --> 00:01:16,350
software developer and so you need a

24
00:01:16,350 --> 00:01:19,740
tool chain that matches your software

25
00:01:19,740 --> 00:01:24,960
development type lifestyle so it's

26
00:01:24,960 --> 00:01:27,570
important to note that Simba Fleur is

27
00:01:27,570 --> 00:01:32,250
the name of a group of projects and it

28
00:01:32,250 --> 00:01:35,490
doesn't really own any of them it

29
00:01:35,490 --> 00:01:37,560
collaborates and integrates and brings

30
00:01:37,560 --> 00:01:41,130
people together but there is a huge

31
00:01:41,130 --> 00:01:43,740
number of people working on this project

32
00:01:43,740 --> 00:01:46,770
in many ways I'm just a project manager

33
00:01:46,770 --> 00:01:48,960
and don't do anything interesting except

34
00:01:48,960 --> 00:01:51,020
help people get their work done

35
00:01:51,020 --> 00:01:54,360
people like Clifford wolf from symbiotic

36
00:01:54,360 --> 00:01:54,750
EDA

37
00:01:54,750 --> 00:01:57,689
and Dave sha have made extremely huge

38
00:01:57,689 --> 00:01:59,579
contributions and it's important to

39
00:01:59,579 --> 00:02:02,700
understand that like I might be up here

40
00:02:02,700 --> 00:02:05,820
presenting but this is mostly not work I

41
00:02:05,820 --> 00:02:08,758
have done they're just more shy than I

42
00:02:08,758 --> 00:02:10,770
am and it's also important to understand

43
00:02:10,770 --> 00:02:14,230
because we need you to help us

44
00:02:14,230 --> 00:02:18,220
push this tool chain forward so Simba

45
00:02:18,220 --> 00:02:22,350
flow aims to be completely open-source

46
00:02:22,350 --> 00:02:25,180
verilock to bitstream and a bit stream

47
00:02:25,180 --> 00:02:28,450
something you can load on the FPGA um it

48
00:02:28,450 --> 00:02:32,800
aims to be cross-platform multi-platform

49
00:02:32,800 --> 00:02:36,700
support wide variety of different

50
00:02:36,700 --> 00:02:39,250
vendors and it's designed to be

51
00:02:39,250 --> 00:02:41,230
pluggable and interchangeable so that

52
00:02:41,230 --> 00:02:44,110
you can choose which parts you want to

53
00:02:44,110 --> 00:02:48,370
use and this is kind of different from

54
00:02:48,370 --> 00:02:50,470
any other tooling out there at the

55
00:02:50,470 --> 00:02:53,370
moment because it's designed to target

56
00:02:53,370 --> 00:02:56,500
FPGA types from multiple different

57
00:02:56,500 --> 00:03:00,970
vendors and we hope that eventually it

58
00:03:00,970 --> 00:03:07,480
supports all FPGAs beak FPGAs like Intel

59
00:03:07,480 --> 00:03:12,060
x86 size things down to tiny little

60
00:03:12,060 --> 00:03:17,110
micro controllers like the arm teeny

61
00:03:17,110 --> 00:03:19,810
little things that you're used to and

62
00:03:19,810 --> 00:03:22,000
the same way you can use GCC for all

63
00:03:22,000 --> 00:03:24,280
that range we want this to be the same

64
00:03:24,280 --> 00:03:31,360
and FPGA is come in all sizes this is a

65
00:03:31,360 --> 00:03:32,470
giant FPGA

66
00:03:32,470 --> 00:03:34,930
probably something found in data centers

67
00:03:34,930 --> 00:03:38,190
or in a bit mining Reed catching on fire

68
00:03:38,190 --> 00:03:42,460
and these are really pricey they're like

69
00:03:42,460 --> 00:03:45,820
the same price as an Intel CPU but they

70
00:03:45,820 --> 00:03:48,940
also come in really tiny packages and

71
00:03:48,940 --> 00:03:55,210
very accessible sizes this is a really

72
00:03:55,210 --> 00:03:57,970
small FPGA their board and it fits

73
00:03:57,970 --> 00:04:01,180
inside you yours be port and it's priced

74
00:04:01,180 --> 00:04:04,990
in the same type of category as a tiny

75
00:04:04,990 --> 00:04:07,240
little arm microcontroller you know a

76
00:04:07,240 --> 00:04:11,350
couple of bucks type range the badge you

77
00:04:11,350 --> 00:04:14,440
have has an FPGA on it it's kind of what

78
00:04:14,440 --> 00:04:16,750
we would call the mid-size FPGA these

79
00:04:16,750 --> 00:04:19,390
days and it's kind of in a similar class

80
00:04:19,390 --> 00:04:22,300
to at a better Linux microcontroller

81
00:04:22,300 --> 00:04:26,230
kind of the five to ten dollar range

82
00:04:26,230 --> 00:04:31,910
type thing and both the tiny FPGA in the

83
00:04:31,910 --> 00:04:37,640
full moon and the FPGA found on your

84
00:04:37,640 --> 00:04:40,280
badge come from a company called ladder

85
00:04:40,280 --> 00:04:44,600
semiconductor the thing is if you look

86
00:04:44,600 --> 00:04:49,190
at the FPGA market space and divide it

87
00:04:49,190 --> 00:04:52,660
up you tend to get a pie chart like this

88
00:04:52,660 --> 00:04:57,100
the thing is that on this pie chart

89
00:04:57,100 --> 00:04:59,710
neither of these big slices are lattice

90
00:04:59,710 --> 00:05:03,100
lettis is even mentioned on this chart

91
00:05:03,100 --> 00:05:06,170
and is frequently not even mentioned on

92
00:05:06,170 --> 00:05:10,130
these type of charts lattice is included

93
00:05:10,130 --> 00:05:14,330
in that green slice called other they

94
00:05:14,330 --> 00:05:17,300
only have a very small market share the

95
00:05:17,300 --> 00:05:21,050
big slice that has kind of 50% of the

96
00:05:21,050 --> 00:05:24,050
market is a company called ilex you can

97
00:05:24,050 --> 00:05:26,570
kind of think of them as the Intel of

98
00:05:26,570 --> 00:05:31,040
the FPGA world the other big pie slice

99
00:05:31,040 --> 00:05:35,990
is this group called art era which is

100
00:05:35,990 --> 00:05:38,300
actually until now so Intel's kind of

101
00:05:38,300 --> 00:05:43,370
AMD of the FPGA world Silex is

102
00:05:43,370 --> 00:05:46,430
definitely the big powerhouse in the

103
00:05:46,430 --> 00:05:48,920
FPGA market they have a huge range with

104
00:05:48,920 --> 00:05:52,070
a lot of different and highly advanced

105
00:05:52,070 --> 00:05:55,160
parts and this is kind of what their

106
00:05:55,160 --> 00:06:01,580
product market diagram looks like at the

107
00:06:01,580 --> 00:06:04,430
moment your FPGAs get newer as you go

108
00:06:04,430 --> 00:06:07,400
across and bigger and more expensive as

109
00:06:07,400 --> 00:06:10,970
you go up up to you know paying $10,000

110
00:06:10,970 --> 00:06:14,510
a chip they also have a poet line called

111
00:06:14,510 --> 00:06:17,240
zinc which takes an FPGA and smashes it

112
00:06:17,240 --> 00:06:19,480
together with an arm microcontroller

113
00:06:19,480 --> 00:06:22,700
confusingly the zinc's have different

114
00:06:22,700 --> 00:06:25,610
types of FPGA in them but are not named

115
00:06:25,610 --> 00:06:27,590
in any logical way that will let you

116
00:06:27,590 --> 00:06:32,770
tell that and so if you're looking at

117
00:06:32,770 --> 00:06:35,750
the Silex part and compare them to the

118
00:06:35,750 --> 00:06:37,190
lattice parts that you're familiar with

119
00:06:37,190 --> 00:06:39,590
from the badge the

120
00:06:39,590 --> 00:06:42,260
cp5 is kind of similar to a Spartan 7

121
00:06:42,260 --> 00:06:45,920
type device and the CP 5 5g which has

122
00:06:45,920 --> 00:06:48,290
high-speed transceivers is kind of

123
00:06:48,290 --> 00:06:51,530
similar to the Arctic 7 Series from

124
00:06:51,530 --> 00:06:56,120
Silex the interesting thing is Silex

125
00:06:56,120 --> 00:06:58,760
don't really have a reasonable

126
00:06:58,760 --> 00:07:01,280
equivalent to the letter size 40 that's

127
00:07:01,280 --> 00:07:03,650
found in the formula if you want a full

128
00:07:03,650 --> 00:07:06,410
moon type device you really need to get

129
00:07:06,410 --> 00:07:09,530
this part from lattice and lattice don't

130
00:07:09,530 --> 00:07:12,830
have a real equivalent to the zinc which

131
00:07:12,830 --> 00:07:16,070
takes an arm and FPGA smashes it

132
00:07:16,070 --> 00:07:18,110
together into one chip and this is why

133
00:07:18,110 --> 00:07:20,720
it's really important to have multi

134
00:07:20,720 --> 00:07:23,240
vendor support in the same tool chain so

135
00:07:23,240 --> 00:07:24,920
that you don't have to change your tool

136
00:07:24,920 --> 00:07:28,880
chain based on which FPGA you want to

137
00:07:28,880 --> 00:07:33,410
use and so that's kind of the 7 what we

138
00:07:33,410 --> 00:07:36,680
call the 7 series of dialects parts the

139
00:07:36,680 --> 00:07:40,160
Spartan 7 Arctic 7 and the zinc's with

140
00:07:40,160 --> 00:07:42,700
those equivalent FPGA is internally and

141
00:07:42,700 --> 00:07:45,320
they kind of sit there they're not the

142
00:07:45,320 --> 00:07:47,180
most modern stuff from Silex but they're

143
00:07:47,180 --> 00:07:48,790
definitely not old either

144
00:07:48,790 --> 00:07:56,000
and we often abbreviate it to XE 7 so as

145
00:07:56,000 --> 00:07:58,630
I mentioned simpie flow is aiming to be

146
00:07:58,630 --> 00:08:01,940
multi-platform for all projects big and

147
00:08:01,940 --> 00:08:05,420
small and if I came to you and was

148
00:08:05,420 --> 00:08:09,200
trying to sell you this new awesome C

149
00:08:09,200 --> 00:08:12,290
compiler you think it was pretty niche

150
00:08:12,290 --> 00:08:15,860
if it didn't support x86 at all

151
00:08:15,860 --> 00:08:18,770
and so that's why the Simba flow project

152
00:08:18,770 --> 00:08:20,780
really needs to support Silex parts

153
00:08:20,780 --> 00:08:22,820
because they are the most commonly

154
00:08:22,820 --> 00:08:26,870
available parts out there there's a

155
00:08:26,870 --> 00:08:32,030
problem though an FPGA vendors do not

156
00:08:32,030 --> 00:08:35,179
provide any documentation on how their

157
00:08:35,179 --> 00:08:39,020
parts work that is suitable for building

158
00:08:39,020 --> 00:08:43,360
tools for those parts so that's a pain

159
00:08:43,360 --> 00:08:46,670
and so if we look at the symbol flow

160
00:08:46,670 --> 00:08:48,920
project diagram one of the first things

161
00:08:48,920 --> 00:08:53,060
we have to do for any part

162
00:08:53,060 --> 00:08:56,540
is document the bitstream for that part

163
00:08:56,540 --> 00:09:00,940
document how the project at how the FPGA

164
00:09:00,940 --> 00:09:07,790
works and how you configure it simply

165
00:09:07,790 --> 00:09:10,430
flow currently has three bit stream

166
00:09:10,430 --> 00:09:13,820
documentation projects Icestorm is for

167
00:09:13,820 --> 00:09:15,470
the little ice 40 because you know ice

168
00:09:15,470 --> 00:09:19,670
and ice EC p5 is project trellis because

169
00:09:19,670 --> 00:09:21,970
the lattice is a type of trellis and

170
00:09:21,970 --> 00:09:26,120
project x-ray is for the Serie seven

171
00:09:26,120 --> 00:09:28,850
parts and the kind of cool thing about

172
00:09:28,850 --> 00:09:31,339
project x-ray is because all of the

173
00:09:31,339 --> 00:09:34,190
series seven parts from Silex share a

174
00:09:34,190 --> 00:09:37,180
lot of common architecture project x-ray

175
00:09:37,180 --> 00:09:42,589
targets all of them but what we do most

176
00:09:42,589 --> 00:09:46,730
of our testing on is the art x7 and this

177
00:09:46,730 --> 00:09:49,279
is an our tech 7 50 T and what it looks

178
00:09:49,279 --> 00:09:49,760
like

179
00:09:49,760 --> 00:09:55,720
internally back at the start of 2018

180
00:09:55,720 --> 00:09:58,070
this is kind of what the status look

181
00:09:58,070 --> 00:09:59,930
like we had really good documentation

182
00:09:59,930 --> 00:10:03,940
for a nice 40 and we had some initial

183
00:10:03,940 --> 00:10:09,110
documentation for the 7 Series type

184
00:10:09,110 --> 00:10:12,620
thing you could probably with some force

185
00:10:12,620 --> 00:10:16,610
to an IOT level design at the start of

186
00:10:16,610 --> 00:10:21,800
2018 and an interesting to note is that

187
00:10:21,800 --> 00:10:24,260
at the start of 2018 there was no real

188
00:10:24,260 --> 00:10:28,610
EC p5 documentation but this is what it

189
00:10:28,610 --> 00:10:33,800
looked like by the end of 2018 for Silex

190
00:10:33,800 --> 00:10:36,740
parts we had enough to do these IOT

191
00:10:36,740 --> 00:10:40,339
designs but we didn't really advertise

192
00:10:40,339 --> 00:10:42,260
this because there's still a huge set of

193
00:10:42,260 --> 00:10:45,530
limitations if you look at that diagram

194
00:10:45,530 --> 00:10:49,580
again at the end of 2018 we knew all the

195
00:10:49,580 --> 00:10:51,500
green stuff there's still quite a lot of

196
00:10:51,500 --> 00:10:53,690
red stuff there which you need if you

197
00:10:53,690 --> 00:10:56,240
want to do anything advanced the

198
00:10:56,240 --> 00:10:59,060
interesting thing is in 2018 the whole

199
00:10:59,060 --> 00:11:02,060
of the ECB 5 was documented and that was

200
00:11:02,060 --> 00:11:06,320
done by a guy called David Shaw David

201
00:11:06,320 --> 00:11:06,980
rose

202
00:11:06,980 --> 00:11:08,449
absolute powerhouse of the open-source

203
00:11:08,449 --> 00:11:11,120
fpga community and it's probably the

204
00:11:11,120 --> 00:11:14,589
person most responsible for building a

205
00:11:14,589 --> 00:11:18,110
open-source tool for the CP 5 which is

206
00:11:18,110 --> 00:11:22,010
used on your badge recently he started a

207
00:11:22,010 --> 00:11:24,199
patreon so if you have some spare money

208
00:11:24,199 --> 00:11:27,860
please sign up and help him but he

209
00:11:27,860 --> 00:11:30,769
didn't come here to talk about ECB 5 you

210
00:11:30,769 --> 00:11:35,899
came to talk about series 7 stuff and so

211
00:11:35,899 --> 00:11:38,240
our target for at the star of 2019 was

212
00:11:38,240 --> 00:11:42,320
to take what we had built and enable a

213
00:11:42,320 --> 00:11:47,389
full big Linux system running on the

214
00:11:47,389 --> 00:11:49,820
fabric and so that's either net and DDR

215
00:11:49,820 --> 00:11:58,100
memory so by the middle of 2019 we had

216
00:11:58,100 --> 00:11:59,690
made significant progress and we

217
00:11:59,690 --> 00:12:02,089
actually understood all the bits

218
00:12:02,089 --> 00:12:07,310
required for that Linux design as well a

219
00:12:07,310 --> 00:12:10,880
group from a company called micro had

220
00:12:10,880 --> 00:12:13,399
expanded our series 7 support to also

221
00:12:13,399 --> 00:12:17,329
work with zinc pretty much by the middle

222
00:12:17,329 --> 00:12:20,899
of this year there are only two major

223
00:12:20,899 --> 00:12:23,810
things that we hadn't got good

224
00:12:23,810 --> 00:12:26,420
understanding of and they were the DSPs

225
00:12:26,420 --> 00:12:29,480
and the high speed transceivers or GDPs

226
00:12:29,480 --> 00:12:31,880
as we frequently call it so going back

227
00:12:31,880 --> 00:12:34,790
to this tile view this is where we were

228
00:12:34,790 --> 00:12:39,529
at 2018 end of 2018 and this is where we

229
00:12:39,529 --> 00:12:43,220
were at the middle of 2019 the blue

230
00:12:43,220 --> 00:12:46,850
blocks the DSP blocks there's kind of a

231
00:12:46,850 --> 00:12:48,949
couple columns of there there's some

232
00:12:48,949 --> 00:12:51,579
advanced i/o modes that we haven't quite

233
00:12:51,579 --> 00:12:54,920
documented yet and these are the high

234
00:12:54,920 --> 00:12:59,600
speed transceivers and so that's kind of

235
00:12:59,600 --> 00:13:01,810
the summary of the bitstream

236
00:13:01,810 --> 00:13:04,610
documentation so once you have the

237
00:13:04,610 --> 00:13:06,110
bitstream documentation you're done

238
00:13:06,110 --> 00:13:09,350
right well sadly no that's just like

239
00:13:09,350 --> 00:13:14,420
having an x86 manual for how the CPU and

240
00:13:14,420 --> 00:13:16,579
execute instructions you still need to

241
00:13:16,579 --> 00:13:20,840
be able to generate the designs and

242
00:13:20,840 --> 00:13:23,240
and part of that is a thing called place

243
00:13:23,240 --> 00:13:26,630
and route and remember how I said that

244
00:13:26,630 --> 00:13:29,840
Simba Fleur is trying to be pluggable

245
00:13:29,840 --> 00:13:33,380
and interchangeable we actually have two

246
00:13:33,380 --> 00:13:36,230
timing driven place and route solutions

247
00:13:36,230 --> 00:13:42,020
that we've been working on the one that

248
00:13:42,020 --> 00:13:44,360
you've been probably playing with

249
00:13:44,360 --> 00:13:46,430
through the badge is a thing called neck

250
00:13:46,430 --> 00:13:49,160
spinner and it strongly targets the

251
00:13:49,160 --> 00:13:52,820
latus parts at the moment again this

252
00:13:52,820 --> 00:13:55,540
project has been driven forward

253
00:13:55,540 --> 00:14:01,279
extremely heavily by Dave Shah and your

254
00:14:01,279 --> 00:14:04,670
bench basically was possible because of

255
00:14:04,670 --> 00:14:07,970
his work on necks PNR so really if you

256
00:14:07,970 --> 00:14:09,980
do have spare money please do sign up

257
00:14:09,980 --> 00:14:14,420
for his patreon for the Serie 7 though

258
00:14:14,420 --> 00:14:19,790
we use a different place and route tool

259
00:14:19,790 --> 00:14:24,440
cord verilock to routing or VTR vpr

260
00:14:24,440 --> 00:14:29,560
depending on how you talk about it and

261
00:14:29,560 --> 00:14:34,580
the interesting thing about VTR is again

262
00:14:34,580 --> 00:14:37,070
this is not most of my work it's

263
00:14:37,070 --> 00:14:39,710
primarily developed by university called

264
00:14:39,710 --> 00:14:41,660
the University of Toronto and it was

265
00:14:41,660 --> 00:14:43,700
developed to be an academic research

266
00:14:43,700 --> 00:14:49,310
tool for researching new FPGA types and

267
00:14:49,310 --> 00:14:51,200
so what we've been doing is working with

268
00:14:51,200 --> 00:14:54,350
them to actually target real Hardware

269
00:14:54,350 --> 00:14:58,910
rather than research hardware and to

270
00:14:58,910 --> 00:15:01,070
make this all work we use a repository

271
00:15:01,070 --> 00:15:01,790
called

272
00:15:01,790 --> 00:15:04,430
architecture definitions which takes the

273
00:15:04,430 --> 00:15:06,880
information from projects ray and

274
00:15:06,880 --> 00:15:10,130
generates the information needed for

275
00:15:10,130 --> 00:15:14,810
vera log2 routing that's still not

276
00:15:14,810 --> 00:15:18,950
enough though before you can do place

277
00:15:18,950 --> 00:15:21,820
and rail you have to do synthesis and

278
00:15:21,820 --> 00:15:25,700
for synthesis looking at this diagram it

279
00:15:25,700 --> 00:15:27,170
kind of sits here so I've kind of been

280
00:15:27,170 --> 00:15:30,620
going backwards along the diagram for

281
00:15:30,620 --> 00:15:33,300
synthesis we use yosef and again

282
00:15:33,300 --> 00:15:35,490
yo sis is not something I've developed

283
00:15:35,490 --> 00:15:38,220
it was developed mainly by Clifford wolf

284
00:15:38,220 --> 00:15:41,580
who now leads a team at symbiotic EDA to

285
00:15:41,580 --> 00:15:45,420
do it and the interesting thing about

286
00:15:45,420 --> 00:15:47,610
Yosa this is a pretty essential part of

287
00:15:47,610 --> 00:15:51,360
the whole ecosystem for a lot of

288
00:15:51,360 --> 00:15:53,610
different things and so this is a more

289
00:15:53,610 --> 00:15:55,620
complicated version of the diagram and

290
00:15:55,620 --> 00:15:58,740
in 2019 there was a big effort to

291
00:15:58,740 --> 00:16:02,010
improve Joseph's foot synthesis going

292
00:16:02,010 --> 00:16:04,320
into Vivaro for place and route so you

293
00:16:04,320 --> 00:16:06,810
can use yo --ss at which is open source

294
00:16:06,810 --> 00:16:09,630
and Vivaro which is the closed source

295
00:16:09,630 --> 00:16:14,360
tool provided by the vendor to do a

296
00:16:14,360 --> 00:16:17,870
generation of a bit stream on a sidenote

297
00:16:17,870 --> 00:16:20,970
uses has also been improved for Silex as

298
00:16:20,970 --> 00:16:25,440
older ISE tools so you can use the same

299
00:16:25,440 --> 00:16:28,200
front-end for multiple different vendor

300
00:16:28,200 --> 00:16:32,100
backends and the other big thing that's

301
00:16:32,100 --> 00:16:35,070
happened in 2019 is better inference

302
00:16:35,070 --> 00:16:40,230
support this was mainly led by a person

303
00:16:40,230 --> 00:16:43,440
could eddie hyung and what inference

304
00:16:43,440 --> 00:16:46,110
support means is that it takes something

305
00:16:46,110 --> 00:16:49,140
like this multiply operation and maps it

306
00:16:49,140 --> 00:16:51,720
to DSP tiles so that you can use some

307
00:16:51,720 --> 00:16:53,130
more of the advanced functionality

308
00:16:53,130 --> 00:16:57,209
inside the fpga at the start of 2019

309
00:16:57,209 --> 00:17:00,450
gnosis didn't have much ability to

310
00:17:00,450 --> 00:17:04,410
inference DSPs at all by the middle of

311
00:17:04,410 --> 00:17:09,059
this year we had support and quite good

312
00:17:09,059 --> 00:17:12,059
support now and the interesting thing is

313
00:17:12,059 --> 00:17:14,429
because yo sis is used as the front end

314
00:17:14,429 --> 00:17:18,449
for both the 7-series and the latter's

315
00:17:18,449 --> 00:17:21,630
stuff a lot of the latter stuff was

316
00:17:21,630 --> 00:17:23,280
pulled forward as well and this is a

317
00:17:23,280 --> 00:17:27,270
really good example of how the sim be

318
00:17:27,270 --> 00:17:31,290
flow community is kind of working well

319
00:17:31,290 --> 00:17:36,150
together so the what you've all been

320
00:17:36,150 --> 00:17:39,950
waiting for now is what about Linux on

321
00:17:39,950 --> 00:17:44,790
7-series take something like this adi

322
00:17:44,790 --> 00:17:47,260
board which has DDR memory

323
00:17:47,260 --> 00:17:52,620
and has 100 megabit Ethernet could you

324
00:17:52,620 --> 00:17:57,940
build a design that works if you use

325
00:17:57,940 --> 00:18:02,500
yosef into the commercial tools that

326
00:18:02,500 --> 00:18:05,980
does work and that kind of gets you

327
00:18:05,980 --> 00:18:06,520
halfway

328
00:18:06,520 --> 00:18:10,000
but what you really want to know is

329
00:18:10,000 --> 00:18:13,540
whether it works for symbol flow so can

330
00:18:13,540 --> 00:18:19,810
I get a drumroll go on afraid to

331
00:18:19,810 --> 00:18:21,210
disappoint you though

332
00:18:21,210 --> 00:18:29,230
dancers no but it is the 14th of

333
00:18:29,230 --> 00:18:31,750
November today you might notice that the

334
00:18:31,750 --> 00:18:34,030
14th of November is not the end of the

335
00:18:34,030 --> 00:18:40,980
year and we're getting very close I

336
00:18:40,980 --> 00:18:44,980
believe that by at the end of this year

337
00:18:44,980 --> 00:18:48,160
we will have this working we're pushing

338
00:18:48,160 --> 00:18:52,210
hard to make it happen and it seems

339
00:18:52,210 --> 00:18:54,760
entirely realistic that we can make it

340
00:18:54,760 --> 00:18:55,120
happen

341
00:18:55,120 --> 00:18:57,460
and you can help make it happen by

342
00:18:57,460 --> 00:19:02,550
contributing and remember how I said

343
00:19:02,550 --> 00:19:05,470
place and route we had two systems and

344
00:19:05,470 --> 00:19:07,540
how productive Dave Shah has been with

345
00:19:07,540 --> 00:19:10,360
NEX Pienaar he wasn't satisfied with

346
00:19:10,360 --> 00:19:13,240
just targeting ly latter stuff so he's

347
00:19:13,240 --> 00:19:15,100
also started doing some experimental

348
00:19:15,100 --> 00:19:17,890
work on importing project x-ray into

349
00:19:17,890 --> 00:19:20,260
next Pienaar arm it's not ready for

350
00:19:20,260 --> 00:19:22,720
users but if you have some spare money

351
00:19:22,720 --> 00:19:25,630
please donate to him so that he can make

352
00:19:25,630 --> 00:19:28,030
that a reality because having multiple

353
00:19:28,030 --> 00:19:30,520
implementations is a really great way to

354
00:19:30,520 --> 00:19:35,110
make both better so that's the current

355
00:19:35,110 --> 00:19:39,040
state of our tech seven-iron series

356
00:19:39,040 --> 00:19:42,310
seven support in Simba flow our

357
00:19:42,310 --> 00:19:44,350
important thing to remember though is

358
00:19:44,350 --> 00:19:48,490
this was mostly just done this year

359
00:19:48,490 --> 00:19:52,420
things are moving really fast um you

360
00:19:52,420 --> 00:19:55,660
should be using upstream basically head

361
00:19:55,660 --> 00:19:59,440
of everything I have seen people like

362
00:19:59,440 --> 00:20:00,669
deja and

363
00:20:00,669 --> 00:20:04,179
Clifford respond to pool requests were

364
00:20:04,179 --> 00:20:07,840
and like to bug requests within like

365
00:20:07,840 --> 00:20:11,440
five minutes of you logging them and

366
00:20:11,440 --> 00:20:14,409
then if you cloned update you buggers

367
00:20:14,409 --> 00:20:17,499
fixed so if you're watching this at home

368
00:20:17,499 --> 00:20:19,570
on YouTube

369
00:20:19,570 --> 00:20:22,869
and it's no longer the 17th of November

370
00:20:22,869 --> 00:20:26,529
the information in this is probably out

371
00:20:26,529 --> 00:20:28,840
of date so go and find a newer

372
00:20:28,840 --> 00:20:31,059
presentation from me that actually has

373
00:20:31,059 --> 00:20:34,840
the later information and I want to

374
00:20:34,840 --> 00:20:39,129
reiterate that ultimately simba flow is

375
00:20:39,129 --> 00:20:45,460
a group of people it has heroes like

376
00:20:45,460 --> 00:20:47,799
deja who are doing awesome work that we

377
00:20:47,799 --> 00:20:50,049
should Paul but I also has many other

378
00:20:50,049 --> 00:20:55,710
people doing many other things and so

379
00:20:55,710 --> 00:21:00,519
you can contribute to and one place we

380
00:21:00,519 --> 00:21:02,529
would love your contribution is in

381
00:21:02,529 --> 00:21:04,539
helping document one of the most

382
00:21:04,539 --> 00:21:09,029
complicated tiles which is the DSP slice

383
00:21:09,029 --> 00:21:12,309
they show it normally like this but

384
00:21:12,309 --> 00:21:15,220
internally it's actually like this so

385
00:21:15,220 --> 00:21:17,950
it's quite complicated and we really

386
00:21:17,950 --> 00:21:20,169
need good simulation models and

387
00:21:20,169 --> 00:21:24,249
bitstream documentation and so that's

388
00:21:24,249 --> 00:21:25,869
one of the key things that you could

389
00:21:25,869 --> 00:21:28,989
help with but I'm pretty sure everyone

390
00:21:28,989 --> 00:21:30,879
in this room could contribute in some

391
00:21:30,879 --> 00:21:36,629
way if you know Python you can help um

392
00:21:36,629 --> 00:21:39,549
all our scripts are written in Python if

393
00:21:39,549 --> 00:21:42,249
you know C++ pretty much all our tooling

394
00:21:42,249 --> 00:21:44,950
is written in C and C++ if you know

395
00:21:44,950 --> 00:21:48,489
tickle I'm sorry that you do but we

396
00:21:48,489 --> 00:21:50,799
would love your help because all the

397
00:21:50,799 --> 00:21:52,929
vendor tools use tickle as a scripting

398
00:21:52,929 --> 00:21:56,859
interface if you know vera log I'm also

399
00:21:56,859 --> 00:21:59,230
sorry but we would love your help in

400
00:21:59,230 --> 00:22:03,580
writing simulation models for the parts

401
00:22:03,580 --> 00:22:05,889
because it's much easier to test things

402
00:22:05,889 --> 00:22:09,730
if you have a model to compare to if you

403
00:22:09,730 --> 00:22:12,159
know XML or congratulations for getting

404
00:22:12,159 --> 00:22:14,320
to the early 1990s

405
00:22:14,320 --> 00:22:16,690
we're also stuck there in some areas and

406
00:22:16,690 --> 00:22:18,970
we need your help with doing things like

407
00:22:18,970 --> 00:22:22,540
XML parsing efficiently if you're more

408
00:22:22,540 --> 00:22:26,650
sad min or you know user focused we

409
00:22:26,650 --> 00:22:28,630
would love your help with packaging with

410
00:22:28,630 --> 00:22:31,660
things like docker and I know whatever

411
00:22:31,660 --> 00:22:34,390
the popular packaging method is these

412
00:22:34,390 --> 00:22:36,460
days and we need you to do it in such a

413
00:22:36,460 --> 00:22:39,550
way that every time we push you get a

414
00:22:39,550 --> 00:22:42,820
new version because everything's moving

415
00:22:42,820 --> 00:22:46,150
so fast and if you're listening to me

416
00:22:46,150 --> 00:22:50,920
you probably know English and we would

417
00:22:50,920 --> 00:22:53,890
love help with things like documentation

418
00:22:53,890 --> 00:22:57,040
and logging bugs about where things

419
00:22:57,040 --> 00:23:01,450
aren't clear and logging bugs with this

420
00:23:01,450 --> 00:23:04,960
doesn't work and you know helping solve

421
00:23:04,960 --> 00:23:07,210
them being on the IRC Channel and

422
00:23:07,210 --> 00:23:09,490
helping new users go through the same

423
00:23:09,490 --> 00:23:14,110
thing that you did spreading the word if

424
00:23:14,110 --> 00:23:17,940
you have time I am sure I can find

425
00:23:17,940 --> 00:23:22,260
something that I can get you to do so

426
00:23:22,260 --> 00:23:24,850
this is specially students who think

427
00:23:24,850 --> 00:23:27,250
they don't know anything you actually a

428
00:23:27,250 --> 00:23:29,020
prime candidate for a whole bunch of

429
00:23:29,020 --> 00:23:31,570
things because we're very much targeting

430
00:23:31,570 --> 00:23:34,860
users who have not done this before

431
00:23:34,860 --> 00:23:38,140
users from a software background and if

432
00:23:38,140 --> 00:23:40,240
you don't have time but happen to be

433
00:23:40,240 --> 00:23:42,940
like me and have a well-paying job at a

434
00:23:42,940 --> 00:23:45,970
big IT corporate you can probably spare

435
00:23:45,970 --> 00:23:51,940
the money to fund Dave and he does more

436
00:23:51,940 --> 00:23:53,440
like he's kind of equivalent to 10

437
00:23:53,440 --> 00:23:56,620
people the other thing is if you

438
00:23:56,620 --> 00:23:59,580
contribute to the Simbi flow project I

439
00:23:59,580 --> 00:24:04,270
will send you Hardware this is a FPGA

440
00:24:04,270 --> 00:24:04,960
Tom ooh

441
00:24:04,960 --> 00:24:09,370
I have sent these to every continent

442
00:24:09,370 --> 00:24:13,690
apart from Antarctica at the moment I

443
00:24:13,690 --> 00:24:15,280
don't know if post goes to Antarctica

444
00:24:15,280 --> 00:24:19,000
but I will send you Hardware if you

445
00:24:19,000 --> 00:24:26,260
contribute I also have here somewhere

446
00:24:26,260 --> 00:24:28,669
the problem of the Tommo is it's quite

447
00:24:28,669 --> 00:24:35,720
small there's about 150 here I also have

448
00:24:35,720 --> 00:24:45,049
Spartan six boards and arty sports and

449
00:24:45,049 --> 00:24:48,860
the deal is you need to use them for

450
00:24:48,860 --> 00:24:52,250
something if you're doing something cool

451
00:24:52,250 --> 00:24:55,190
with them I'm quite happy to give people

452
00:24:55,190 --> 00:24:58,610
hardware like hardware for me with the

453
00:24:58,610 --> 00:25:01,909
Silicon Valley you know salary and not

454
00:25:01,909 --> 00:25:03,860
having any kids not having a wife or

455
00:25:03,860 --> 00:25:06,429
anything like that not having a mortgage

456
00:25:06,429 --> 00:25:09,740
means I have or drinking I don't drink

457
00:25:09,740 --> 00:25:12,799
it all means that this is quite easy for

458
00:25:12,799 --> 00:25:15,200
me to do and if not having hardware is

459
00:25:15,200 --> 00:25:17,390
blocking me from contributing I would

460
00:25:17,390 --> 00:25:21,429
love to remove that so do something cool

461
00:25:21,429 --> 00:25:24,169
come and chat to me and convince me that

462
00:25:24,169 --> 00:25:27,350
you'll do something cool send me pull

463
00:25:27,350 --> 00:25:29,450
requests and I'll send you hardware

464
00:25:29,450 --> 00:25:33,740
that's kind of the deal and so any

465
00:25:33,740 --> 00:25:36,350
questions I'm kind of at the end you've

466
00:25:36,350 --> 00:25:40,669
got the status we would love to see you

467
00:25:40,669 --> 00:25:43,309
come join our IRC channel or slack

468
00:25:43,309 --> 00:25:46,039
channel if you're interested in other

469
00:25:46,039 --> 00:25:48,140
types of FPGAs there are other people

470
00:25:48,140 --> 00:25:50,600
working on other projects out there to

471
00:25:50,600 --> 00:25:53,840
document other FPGAs we want to support

472
00:25:53,840 --> 00:25:57,140
everything we can we're definitely

473
00:25:57,140 --> 00:25:59,690
heavily focused on dialects parts at the

474
00:25:59,690 --> 00:26:01,299
moment because of the things I mentioned

475
00:26:01,299 --> 00:26:05,299
and yeah if you come and check to me I

476
00:26:05,299 --> 00:26:09,950
will find a task that you can do and you

477
00:26:09,950 --> 00:26:13,820
can help drive this forward so thank you

478
00:26:13,820 --> 00:26:16,010
Matt very much and any questions

479
00:26:16,010 --> 00:26:19,089
[Applause]

