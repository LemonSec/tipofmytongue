1
00:00:00,000 --> 00:00:02,090
[Applause]

2
00:00:02,090 --> 00:00:05,759
hi thank you so much for having us we're

3
00:00:05,759 --> 00:00:08,700
very excited to be here so first of all

4
00:00:08,700 --> 00:00:11,010
some context to this project because I'm

5
00:00:11,010 --> 00:00:13,500
definitely not a blockchain evangelist

6
00:00:13,500 --> 00:00:15,660
I'm kind of the opposite so people were

7
00:00:15,660 --> 00:00:18,510
like why are you talking about that so

8
00:00:18,510 --> 00:00:23,369
in the fall of 2018 like was mentioned

9
00:00:23,369 --> 00:00:25,289
both of us are students at Rowan College

10
00:00:25,289 --> 00:00:29,429
of Burlington County and in fall of 2018

11
00:00:29,429 --> 00:00:32,340
Lockheed Martin started with sponsoring

12
00:00:32,340 --> 00:00:35,219
our cybersecurity undergraduate research

13
00:00:35,219 --> 00:00:39,420
project and the prompt to that group was

14
00:00:39,420 --> 00:00:42,120
take two nascent technologies

15
00:00:42,120 --> 00:00:46,230
specifically blockchain and Adina tools

16
00:00:46,230 --> 00:00:48,539
which is automated detection of

17
00:00:48,539 --> 00:00:50,489
anomalous network activity so take these

18
00:00:50,489 --> 00:00:53,129
two tools and tell us about them if you

19
00:00:53,129 --> 00:00:56,070
find a way to combine them great now

20
00:00:56,070 --> 00:00:58,020
Jeff and I had not yet been part of this

21
00:00:58,020 --> 00:01:00,690
research project we heard about it okay

22
00:01:00,690 --> 00:01:01,469
that's cool

23
00:01:01,469 --> 00:01:05,099
the next semester spring 2019 we said we

24
00:01:05,099 --> 00:01:07,860
really want to join this project now

25
00:01:07,860 --> 00:01:11,189
alongside with us were rebecca de joseph

26
00:01:11,189 --> 00:01:13,590
christopher hendricks christopher hurley

27
00:01:13,590 --> 00:01:16,439
joy then GOC dalton Gravette and hannah

28
00:01:16,439 --> 00:01:18,659
martha lair so we are only one-fourth of

29
00:01:18,659 --> 00:01:20,700
an amazing team of people who are back

30
00:01:20,700 --> 00:01:23,430
home now when we joined the project it

31
00:01:23,430 --> 00:01:26,189
was great this project the plan exists

32
00:01:26,189 --> 00:01:30,030
and now is the execution so for anyone

33
00:01:30,030 --> 00:01:32,490
who may you know roll their eyes at

34
00:01:32,490 --> 00:01:37,200
blockchain I do that too um anyway this

35
00:01:37,200 --> 00:01:39,270
this turned into our research project

36
00:01:39,270 --> 00:01:41,610
for the semester titled validating data

37
00:01:41,610 --> 00:01:44,159
integrity with hyper ledger fabric and

38
00:01:44,159 --> 00:01:46,229
it was like I mentioned sponsored by

39
00:01:46,229 --> 00:01:48,509
Lockheed Martin and advised by Professor

40
00:01:48,509 --> 00:01:51,600
Paul Warner these are the members these

41
00:01:51,600 --> 00:01:52,860
are some of the members of our group

42
00:01:52,860 --> 00:01:55,380
from left to right we have Christopher

43
00:01:55,380 --> 00:01:57,030
Hendrix myself

44
00:01:57,030 --> 00:01:59,909
Jordan GOC Hannah Martha Lou and Jeff

45
00:01:59,909 --> 00:02:02,520
not pictured our Rebecca de Joseph

46
00:02:02,520 --> 00:02:06,049
Christopher Hurley and Dalton Gravett so

47
00:02:06,049 --> 00:02:08,758
one of the technologies on which this is

48
00:02:08,758 --> 00:02:11,008
based are smart contracts that's all

49
00:02:11,008 --> 00:02:12,750
nice but what does that actually mean

50
00:02:12,750 --> 00:02:16,820
this is a self-executing and managing

51
00:02:16,820 --> 00:02:18,930
contract that is built upon the

52
00:02:18,930 --> 00:02:21,630
blockchain infrastructure basically what

53
00:02:21,630 --> 00:02:23,520
that means is you have the integrity

54
00:02:23,520 --> 00:02:25,350
that comes along with blockchain where

55
00:02:25,350 --> 00:02:28,350
you can't edit former blocks because

56
00:02:28,350 --> 00:02:30,000
everything is based on each other and

57
00:02:30,000 --> 00:02:34,070
there's the visibility however unlike

58
00:02:34,070 --> 00:02:36,720
cryptocurrency there's no mining

59
00:02:36,720 --> 00:02:39,660
involved so you don't need to you don't

60
00:02:39,660 --> 00:02:41,490
need to complete ever complex

61
00:02:41,490 --> 00:02:44,190
mathematical processes just to create

62
00:02:44,190 --> 00:02:47,190
another block now smart contract is just

63
00:02:47,190 --> 00:02:51,030
a type of blockchain that is not it is

64
00:02:51,030 --> 00:02:55,170
just the format itself and what we ended

65
00:02:55,170 --> 00:02:56,790
up using was hyper ledger which is a

66
00:02:56,790 --> 00:02:59,280
project of the Linux Foundation it's

67
00:02:59,280 --> 00:03:01,110
what's called a permission distributed

68
00:03:01,110 --> 00:03:03,390
ledger framework the permissioned means

69
00:03:03,390 --> 00:03:05,910
that not just anyone can take part in it

70
00:03:05,910 --> 00:03:08,010
or can view it but that you need

71
00:03:08,010 --> 00:03:10,470
permission that's given by Business

72
00:03:10,470 --> 00:03:12,900
Network cards so those need to be

73
00:03:12,900 --> 00:03:15,239
actively granted by whoever is

74
00:03:15,239 --> 00:03:17,940
attempting to connect or interact within

75
00:03:17,940 --> 00:03:21,299
that network because it is created by

76
00:03:21,299 --> 00:03:23,489
the Linux Foundation and also backed by

77
00:03:23,489 --> 00:03:26,310
IBM it's completely open-source and

78
00:03:26,310 --> 00:03:29,160
enterprise grade and underneath hyper

79
00:03:29,160 --> 00:03:31,230
ledger there are actually sub projects

80
00:03:31,230 --> 00:03:33,750
and frameworks so there is hyper ledger

81
00:03:33,750 --> 00:03:36,120
fabric which is a framework composer

82
00:03:36,120 --> 00:03:38,730
which is a tool for fabric and to roja

83
00:03:38,730 --> 00:03:41,790
which is another framework the second

84
00:03:41,790 --> 00:03:43,410
tool which was the basis of this

85
00:03:43,410 --> 00:03:45,269
experiment were a dana tools the

86
00:03:45,269 --> 00:03:47,820
automated detection of anomalous network

87
00:03:47,820 --> 00:03:50,670
activity and what the data tools do is

88
00:03:50,670 --> 00:03:52,709
they take in logs that get created

89
00:03:52,709 --> 00:03:55,079
across the network by systems by

90
00:03:55,079 --> 00:03:57,450
machines and it takes them and

91
00:03:57,450 --> 00:04:00,239
establishes a baseline now when it gets

92
00:04:00,239 --> 00:04:02,880
any logs that say hmm this this doesn't

93
00:04:02,880 --> 00:04:05,489
fit with what we're used to it raises an

94
00:04:05,489 --> 00:04:07,890
alert this is anomalous behavior not

95
00:04:07,890 --> 00:04:09,570
only does it raise that alert but it

96
00:04:09,570 --> 00:04:12,060
actually tries to investigate is this

97
00:04:12,060 --> 00:04:14,700
malicious anomalous behavior or is it

98
00:04:14,700 --> 00:04:16,680
anomalous behavior for some legitimate

99
00:04:16,680 --> 00:04:19,858
or benign reason and at that point it's

100
00:04:19,858 --> 00:04:23,380
able to to tell you know the owner of

101
00:04:23,380 --> 00:04:25,470
hey you may want to check this out

102
00:04:25,470 --> 00:04:28,240
syslog-ng is great for collecting logs

103
00:04:28,240 --> 00:04:30,520
it is able to collect logs from any

104
00:04:30,520 --> 00:04:33,880
system as well as docker which is what

105
00:04:33,880 --> 00:04:35,830
we were using it's application level

106
00:04:35,830 --> 00:04:37,750
virtualization that we were using on all

107
00:04:37,750 --> 00:04:40,390
of our machines and even better than

108
00:04:40,390 --> 00:04:40,720
that

109
00:04:40,720 --> 00:04:42,700
Splunk which is a well-known oedema tool

110
00:04:42,700 --> 00:04:45,160
that's used for security monitoring

111
00:04:45,160 --> 00:04:49,240
software was in alpha testing for a new

112
00:04:49,240 --> 00:04:51,880
feature that integrated hyper ledger

113
00:04:51,880 --> 00:04:54,160
fabric logs one of our team members

114
00:04:54,160 --> 00:04:56,620
reached out to the team at Splunk in

115
00:04:56,620 --> 00:04:58,330
charge of that and said hey we're

116
00:04:58,330 --> 00:05:00,520
students can we test this out for you

117
00:05:00,520 --> 00:05:02,950
and they were wonderful gave at us

118
00:05:02,950 --> 00:05:06,010
access to that and it is now full public

119
00:05:06,010 --> 00:05:08,890
mode so it was really nice getting to

120
00:05:08,890 --> 00:05:11,260
have alpha testing for that and giving

121
00:05:11,260 --> 00:05:16,570
them feedback on it so based off of

122
00:05:16,570 --> 00:05:17,890
those two things the first thing that

123
00:05:17,890 --> 00:05:19,510
comes to mind is what the project goal

124
00:05:19,510 --> 00:05:22,540
was so the project goal was to build a

125
00:05:22,540 --> 00:05:25,210
secure messaging network based off of

126
00:05:25,210 --> 00:05:27,670
those smart contracts and the smart

127
00:05:27,670 --> 00:05:29,290
contracts are pretty much the inter

128
00:05:29,290 --> 00:05:31,420
communication between the computers and

129
00:05:31,420 --> 00:05:34,200
then all of that is fed to the Dana tool

130
00:05:34,200 --> 00:05:36,580
looking at the network to go about

131
00:05:36,580 --> 00:05:41,800
seeing for any anomalous traffic just to

132
00:05:41,800 --> 00:05:43,120
give a little bit of explanation about

133
00:05:43,120 --> 00:05:45,310
this picture here the original idea was

134
00:05:45,310 --> 00:05:47,710
to have four computer nodes that all

135
00:05:47,710 --> 00:05:49,780
communicated on the hyper ledger server

136
00:05:49,780 --> 00:05:51,490
which was the one that was hosting the

137
00:05:51,490 --> 00:05:55,870
actual the smart contract software on

138
00:05:55,870 --> 00:05:57,430
top of that it was also hosting a

139
00:05:57,430 --> 00:06:00,760
syslog-ng client as long also with all

140
00:06:00,760 --> 00:06:02,800
four the nodes all that information

141
00:06:02,800 --> 00:06:04,750
would be fed into the syslog-ng server

142
00:06:04,750 --> 00:06:06,790
which the logs would be collected and

143
00:06:06,790 --> 00:06:09,040
then fed to the Splunk server also known

144
00:06:09,040 --> 00:06:11,680
as the Dana tool on top of that we

145
00:06:11,680 --> 00:06:13,420
wanted to see if this would actually

146
00:06:13,420 --> 00:06:14,920
work as far as demonstrating its

147
00:06:14,920 --> 00:06:17,440
security abilities so we created Eve

148
00:06:17,440 --> 00:06:19,390
over here the bad guy who's pretty much

149
00:06:19,390 --> 00:06:21,190
going to be attempting to eavesdrop on

150
00:06:21,190 --> 00:06:23,710
message traffic and see what he can go

151
00:06:23,710 --> 00:06:27,190
about getting so with all of that there

152
00:06:27,190 --> 00:06:28,930
was a set of challenges especially since

153
00:06:28,930 --> 00:06:31,240
we are college students some of those

154
00:06:31,240 --> 00:06:33,220
being that we were using decommissioned

155
00:06:33,220 --> 00:06:34,800
college computers at a community college

156
00:06:34,800 --> 00:06:37,330
we were constrained to a thirteen

157
00:06:37,330 --> 00:06:39,189
I'm weak period based off the semester

158
00:06:39,189 --> 00:06:41,379
we're also all college students who are

159
00:06:41,379 --> 00:06:43,139
working part-time jobs at the same time

160
00:06:43,139 --> 00:06:46,090
and the other parts were we had no clear

161
00:06:46,090 --> 00:06:48,159
path for this project as far as like

162
00:06:48,159 --> 00:06:51,159
people have worked on this before us so

163
00:06:51,159 --> 00:06:53,500
it was kind of trial by fire for a lot

164
00:06:53,500 --> 00:06:55,599
of us on both blockchain and the other

165
00:06:55,599 --> 00:06:59,590
very tools that we used as far as those

166
00:06:59,590 --> 00:07:00,849
challenges we learned a lot throughout

167
00:07:00,849 --> 00:07:02,500
the journey some of those things was

168
00:07:02,500 --> 00:07:05,199
attempting to use raspberry pies as the

169
00:07:05,199 --> 00:07:06,490
nudes instead of computers themselves

170
00:07:06,490 --> 00:07:09,909
seeing if we can add some IOT or other

171
00:07:09,909 --> 00:07:11,620
devices into the network and see if it

172
00:07:11,620 --> 00:07:14,379
worked we've quickly found out that the

173
00:07:14,379 --> 00:07:16,569
system architecture for most your PI's

174
00:07:16,569 --> 00:07:19,539
your especially your PI zero w's did was

175
00:07:19,539 --> 00:07:21,669
not compatible with docker so we quickly

176
00:07:21,669 --> 00:07:23,770
found out and had to switch off back to

177
00:07:23,770 --> 00:07:27,389
using the decommissioned pcs

178
00:07:27,509 --> 00:07:30,009
additionally like I mentioned before

179
00:07:30,009 --> 00:07:32,169
there are a lot of frameworks for

180
00:07:32,169 --> 00:07:34,479
blockchain and smart contract so we

181
00:07:34,479 --> 00:07:35,889
played around with those for a while

182
00:07:35,889 --> 00:07:39,789
before we settled on the right one first

183
00:07:39,789 --> 00:07:41,860
we tried writing a blockchain from

184
00:07:41,860 --> 00:07:44,319
scratch and C++ based on the tutorial

185
00:07:44,319 --> 00:07:47,409
online from Dave Nash tutorial was great

186
00:07:47,409 --> 00:07:50,289
highly do not recommend doing that if

187
00:07:50,289 --> 00:07:53,800
you only have 13 weeks yeah maybe if we

188
00:07:53,800 --> 00:07:56,110
had more time we also tried using hyper

189
00:07:56,110 --> 00:07:58,870
ledger Aroha which like I said is also

190
00:07:58,870 --> 00:08:00,639
one of the frameworks created by the

191
00:08:00,639 --> 00:08:04,050
Linux project it was wonderful however

192
00:08:04,050 --> 00:08:07,289
Iroha and fabric both have different

193
00:08:07,289 --> 00:08:11,139
uses and focuses and for our purposes we

194
00:08:11,139 --> 00:08:13,000
found that hyper ledger fabric was a

195
00:08:13,000 --> 00:08:15,610
little bit better for our shorter time

196
00:08:15,610 --> 00:08:19,360
period also we tried to grant each node

197
00:08:19,360 --> 00:08:21,400
explicit permission so you know only

198
00:08:21,400 --> 00:08:23,650
node one could send a certain type of

199
00:08:23,650 --> 00:08:26,080
message to node 2 and node 3 couldn't

200
00:08:26,080 --> 00:08:30,039
send messages however like I said like

201
00:08:30,039 --> 00:08:33,130
we said there is we didn't really have

202
00:08:33,130 --> 00:08:37,839
much experience prior to this so we we

203
00:08:37,839 --> 00:08:40,029
didn't have the time nor a lot of the

204
00:08:40,029 --> 00:08:42,309
knowledge to take advantage of a lot of

205
00:08:42,309 --> 00:08:44,620
the advanced features in in the

206
00:08:44,620 --> 00:08:48,279
framework now following on on the

207
00:08:48,279 --> 00:08:49,930
challenges and some of the things we

208
00:08:49,930 --> 00:08:51,100
tried this is

209
00:08:51,100 --> 00:08:52,899
a reality that our project ended up

210
00:08:52,899 --> 00:08:55,769
being so we have a total of six machines

211
00:08:55,769 --> 00:09:01,600
two servers that you have Oh two servers

212
00:09:01,600 --> 00:09:05,380
you have up here and here so our top

213
00:09:05,380 --> 00:09:08,769
server here is our hyper it hosts the

214
00:09:08,769 --> 00:09:12,040
hyper ledger itself and underneath the

215
00:09:12,040 --> 00:09:13,930
hyper ledger we have the composer

216
00:09:13,930 --> 00:09:16,870
playground tool now based on that we

217
00:09:16,870 --> 00:09:19,209
have the REST API which lets web

218
00:09:19,209 --> 00:09:21,040
services interface with the blockchain

219
00:09:21,040 --> 00:09:25,319
an anger opera an angular application

220
00:09:25,319 --> 00:09:28,630
created using yeoman runs against the

221
00:09:28,630 --> 00:09:31,630
API and allows users to easily use and

222
00:09:31,630 --> 00:09:33,790
interact within the hyper ledger network

223
00:09:33,790 --> 00:09:36,339
from a web platform so it allows us to

224
00:09:36,339 --> 00:09:38,920
get around the need to distribute

225
00:09:38,920 --> 00:09:41,230
Business Network cards to give those

226
00:09:41,230 --> 00:09:44,680
permissions out now from there we had

227
00:09:44,680 --> 00:09:48,360
four nodes all machines running a bun -

228
00:09:48,360 --> 00:09:52,120
and those nodes each were also running

229
00:09:52,120 --> 00:09:56,430
docker that is the application level

230
00:09:56,430 --> 00:09:58,959
virtualization and they were each able

231
00:09:58,959 --> 00:10:01,060
to communicate with the hyper ledger and

232
00:10:01,060 --> 00:10:04,930
run transactions simultaneously we had

233
00:10:04,930 --> 00:10:07,569
all of them we had all of their logs

234
00:10:07,569 --> 00:10:10,420
sent over to the secondary server was

235
00:10:10,420 --> 00:10:13,689
collected by syslog-ng now using a

236
00:10:13,689 --> 00:10:16,630
universal Foer there on port 1050 we're

237
00:10:16,630 --> 00:10:18,189
able to send them back to the original

238
00:10:18,189 --> 00:10:20,529
hyper ledger fabric server which was

239
00:10:20,529 --> 00:10:23,500
also hosting Splunk now that we had the

240
00:10:23,500 --> 00:10:26,290
logs from the machines being fed back to

241
00:10:26,290 --> 00:10:29,259
Splunk as well as Splunk monitoring

242
00:10:29,259 --> 00:10:32,110
hyper ledger fabric spunk was able to

243
00:10:32,110 --> 00:10:34,600
detect any anomalous behavior so even if

244
00:10:34,600 --> 00:10:37,329
something did go wrong it was something

245
00:10:37,329 --> 00:10:40,329
we were able to detect additionally we

246
00:10:40,329 --> 00:10:43,600
had a node 3 we had WS cat running the

247
00:10:43,600 --> 00:10:46,630
loud node 3 to act as a WebSocket client

248
00:10:46,630 --> 00:10:48,220
so it could subscribe to any

249
00:10:48,220 --> 00:10:51,269
transactions or exchanges occur within

250
00:10:51,269 --> 00:10:55,329
the overall blockchain network so we

251
00:10:55,329 --> 00:10:57,550
were able to add on top of that even

252
00:10:57,550 --> 00:11:00,279
another layer of human authorization

253
00:11:00,279 --> 00:11:02,620
they could tell if anything was was

254
00:11:02,620 --> 00:11:04,310
acting kind of funny

255
00:11:04,310 --> 00:11:06,290
so so this is what it really ended up

256
00:11:06,290 --> 00:11:10,820
being so for as far as moving forward we

257
00:11:10,820 --> 00:11:13,520
talked about the the future of this the

258
00:11:13,520 --> 00:11:15,590
applications everything else that comes

259
00:11:15,590 --> 00:11:17,660
of it and there's a few things that we

260
00:11:17,660 --> 00:11:19,610
definitely need to add on to it for sure

261
00:11:19,610 --> 00:11:22,940
one of those being that we needed to add

262
00:11:22,940 --> 00:11:27,020
the minor minor modification of the

263
00:11:27,020 --> 00:11:28,970
hyper ledger fabric which was recently

264
00:11:28,970 --> 00:11:32,930
deprecated in late August so a matter of

265
00:11:32,930 --> 00:11:34,730
rewriting the code for moving forward

266
00:11:34,730 --> 00:11:37,730
which is perfectly fine the other things

267
00:11:37,730 --> 00:11:39,470
that we wanted to do is go about

268
00:11:39,470 --> 00:11:41,330
expanding the compatibility I don't know

269
00:11:41,330 --> 00:11:43,100
if it you we mentioned it before but

270
00:11:43,100 --> 00:11:44,840
most of the machines that we had running

271
00:11:44,840 --> 00:11:46,790
initially we're using just plain old a

272
00:11:46,790 --> 00:11:50,360
boon to 16.4 I believe so we want to

273
00:11:50,360 --> 00:11:53,540
expand to Windows and some of the other

274
00:11:53,540 --> 00:11:55,910
mobile OS is to be allowed to be used in

275
00:11:55,910 --> 00:11:59,750
way greater networks some of the other

276
00:11:59,750 --> 00:12:02,420
things is the manual or the

277
00:12:02,420 --> 00:12:04,600
communication was all done manually

278
00:12:04,600 --> 00:12:07,910
using the WebSocket and the rest API

279
00:12:07,910 --> 00:12:10,820
will be adding the automation so that

280
00:12:10,820 --> 00:12:12,950
way this can happen seamlessly in the

281
00:12:12,950 --> 00:12:15,230
background for whatever communication

282
00:12:15,230 --> 00:12:17,540
you want to be implemented and going

283
00:12:17,540 --> 00:12:19,970
about that refining the code to be used

284
00:12:19,970 --> 00:12:21,560
in the relevant industry that it would

285
00:12:21,560 --> 00:12:23,150
be used for so being able to use it with

286
00:12:23,150 --> 00:12:24,710
whatever program wherever the data is

287
00:12:24,710 --> 00:12:30,170
stored so we're you know we're very

288
00:12:30,170 --> 00:12:32,690
thankful for hackaday and everyone

289
00:12:32,690 --> 00:12:35,630
having us and like we say that we're

290
00:12:35,630 --> 00:12:37,670
we're only a quarter of a wonderful

291
00:12:37,670 --> 00:12:41,180
group of people back at home we were

292
00:12:41,180 --> 00:12:43,700
definitely thankful for for being part

293
00:12:43,700 --> 00:12:46,280
of that group and getting to build upon

294
00:12:46,280 --> 00:12:48,140
you know a concept that they really

295
00:12:48,140 --> 00:12:50,060
developed and we're really the driving

296
00:12:50,060 --> 00:12:53,030
force behind but if you have any

297
00:12:53,030 --> 00:12:56,089
questions feel free to find us and thank

298
00:12:56,089 --> 00:12:57,680
you very much

299
00:12:57,680 --> 00:13:00,520
[Applause]

