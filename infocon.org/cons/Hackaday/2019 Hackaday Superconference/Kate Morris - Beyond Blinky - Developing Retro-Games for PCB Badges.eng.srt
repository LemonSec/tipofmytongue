1
00:00:00,560 --> 00:00:04,230
okay so this is the badge that we made I

2
00:00:04,230 --> 00:00:07,529
have one here which I can show you later

3
00:00:07,529 --> 00:00:11,370
if you're interested if the code is open

4
00:00:11,370 --> 00:00:14,009
source it's available on github if you'd

5
00:00:14,009 --> 00:00:16,230
like to take a look so I will give you a

6
00:00:16,230 --> 00:00:18,060
bit of an overview here and if you want

7
00:00:18,060 --> 00:00:20,010
to go download the code if you want to

8
00:00:20,010 --> 00:00:21,420
send us a pull request because you have

9
00:00:21,420 --> 00:00:23,100
something cool you'd like to add feel

10
00:00:23,100 --> 00:00:25,640
free to do that

11
00:00:25,760 --> 00:00:29,820
so what are we building today what we're

12
00:00:29,820 --> 00:00:32,009
looking at is how to write the software

13
00:00:32,009 --> 00:00:35,399
for a PCB badge that has an LCD screen

14
00:00:35,399 --> 00:00:38,040
it's about this one is two point eight

15
00:00:38,040 --> 00:00:40,829
inch 320 by 240 so a little smaller than

16
00:00:40,829 --> 00:00:43,190
the conference badge for this conference

17
00:00:43,190 --> 00:00:46,950
it has some buttons for interactivity it

18
00:00:46,950 --> 00:00:49,140
has some blinky LEDs because we still

19
00:00:49,140 --> 00:00:51,570
have to blink and it has the shitty

20
00:00:51,570 --> 00:00:53,760
add-on port for powering shitty add-ons

21
00:00:53,760 --> 00:01:00,239
of course so today what I'll be doing is

22
00:01:00,239 --> 00:01:02,940
talking about the hardware and dev tool

23
00:01:02,940 --> 00:01:05,610
chain that we used a little bit and then

24
00:01:05,610 --> 00:01:07,400
I'll talk about the outline of the code

25
00:01:07,400 --> 00:01:10,229
the shell which is the part that runs

26
00:01:10,229 --> 00:01:13,020
all the company I games and apps that

27
00:01:13,020 --> 00:01:15,930
are on the badge I'll talk a little bit

28
00:01:15,930 --> 00:01:18,509
about performance considerations that we

29
00:01:18,509 --> 00:01:23,070
had the display scrolling some questions

30
00:01:23,070 --> 00:01:26,280
about Bluetooth and and the use of the

31
00:01:26,280 --> 00:01:31,140
serial port so the first lesson that we

32
00:01:31,140 --> 00:01:33,180
had was that you know software for

33
00:01:33,180 --> 00:01:36,180
badges it's not that quick to write it

34
00:01:36,180 --> 00:01:39,390
takes time so if you're going to be

35
00:01:39,390 --> 00:01:41,340
developing a badge make sure you've got

36
00:01:41,340 --> 00:01:43,380
some kind of hardware that you can

37
00:01:43,380 --> 00:01:46,409
prototype on you know you can create an

38
00:01:46,409 --> 00:01:49,170
early prototype using off-the-shelf dev

39
00:01:49,170 --> 00:01:51,240
boards and proto boards which is what we

40
00:01:51,240 --> 00:01:51,750
did

41
00:01:51,750 --> 00:01:54,299
that's my glorious soldering attempt

42
00:01:54,299 --> 00:01:57,840
then don't look at that too closely you

43
00:01:57,840 --> 00:02:00,030
can create a board without the artwork

44
00:02:00,030 --> 00:02:02,460
if you're not ready you can reuse

45
00:02:02,460 --> 00:02:05,790
hardware so for next year's badge my

46
00:02:05,790 --> 00:02:09,270
plan is to reuse the GPIO pins that are

47
00:02:09,270 --> 00:02:11,038
on the shitty add-on port to add a

48
00:02:11,038 --> 00:02:12,660
couple of extra buttons because we

49
00:02:12,660 --> 00:02:13,590
didn't have enough button

50
00:02:13,590 --> 00:02:16,290
on this one so giving something away

51
00:02:16,290 --> 00:02:21,599
there so what we used for our hardware

52
00:02:21,599 --> 00:02:26,129
prototype was an Adafruit ESP 32 feather

53
00:02:26,129 --> 00:02:29,580
board and we got to display also from

54
00:02:29,580 --> 00:02:33,599
Adafruit the code itself was written in

55
00:02:33,599 --> 00:02:39,000
C C++ ish and why do we do that not

56
00:02:39,000 --> 00:02:42,629
because we wanted a hard challenge we

57
00:02:42,629 --> 00:02:46,110
wrote it in C because what I really

58
00:02:46,110 --> 00:02:47,970
wanted was to get the performance I

59
00:02:47,970 --> 00:02:49,950
wanted the animation to be pretty smooth

60
00:02:49,950 --> 00:02:51,989
I wanted it to feel like you are playing

61
00:02:51,989 --> 00:02:55,340
in arcade game with dedicated hardware

62
00:02:55,340 --> 00:02:58,890
also using C means that I can use the

63
00:02:58,890 --> 00:03:02,459
ESP 32 specific code cause much more

64
00:03:02,459 --> 00:03:06,150
easily it let me do things like use two

65
00:03:06,150 --> 00:03:08,489
processes on the ESP 32 which is

66
00:03:08,489 --> 00:03:10,230
difficult to do with some of the other

67
00:03:10,230 --> 00:03:13,920
options it'll let me get access to some

68
00:03:13,920 --> 00:03:15,269
of the other things like the Hall effect

69
00:03:15,269 --> 00:03:17,220
sensor and stuff like that which I'll

70
00:03:17,220 --> 00:03:20,090
talk about more in a bit

71
00:03:20,090 --> 00:03:24,299
so the toolchain were used are you start

72
00:03:24,299 --> 00:03:26,069
do we know it's the easiest way to get

73
00:03:26,069 --> 00:03:28,470
started it's not what I ended up using

74
00:03:28,470 --> 00:03:30,870
fine for the whole thing but it's a good

75
00:03:30,870 --> 00:03:34,260
way to get started I supplemented that

76
00:03:34,260 --> 00:03:36,569
with the processor specific code when I

77
00:03:36,569 --> 00:03:37,470
needed to

78
00:03:37,470 --> 00:03:41,280
I'm from expressive we used I use github

79
00:03:41,280 --> 00:03:44,000
for sharing the code with my

80
00:03:44,000 --> 00:03:47,519
co-conspirator on the badge and also for

81
00:03:47,519 --> 00:03:49,349
sharing the code once the once I was

82
00:03:49,349 --> 00:03:53,400
ready to publish it for actually doing

83
00:03:53,400 --> 00:03:55,169
the editing of the code I didn't really

84
00:03:55,169 --> 00:03:57,810
like the Arduino IDE so much for just

85
00:03:57,810 --> 00:03:59,489
doing the text editing I'm used to

86
00:03:59,489 --> 00:04:00,750
something a bit more powerful

87
00:04:00,750 --> 00:04:04,349
I used sublime text you can also use

88
00:04:04,349 --> 00:04:07,590
Visual Studio code or Emacs or vim or

89
00:04:07,590 --> 00:04:12,389
pretty much anything so but you know

90
00:04:12,389 --> 00:04:13,889
choose the editor you're comfortable

91
00:04:13,889 --> 00:04:15,840
with don't feel like you have to use the

92
00:04:15,840 --> 00:04:18,418
Arduino editor just because she riding

93
00:04:18,418 --> 00:04:21,750
an Arduino and when you're flashing

94
00:04:21,750 --> 00:04:24,930
badges Arduino has this nice thing where

95
00:04:24,930 --> 00:04:26,700
you can ask it to print out the

96
00:04:26,700 --> 00:04:28,560
man line and that's how you flush

97
00:04:28,560 --> 00:04:30,600
multiple badges very quickly you don't

98
00:04:30,600 --> 00:04:33,530
have to actually do it through the IDE

99
00:04:33,530 --> 00:04:35,940
so that was the tool chain so let's look

100
00:04:35,940 --> 00:04:39,960
a little bit about the shell so the

101
00:04:39,960 --> 00:04:42,480
shell that we used as I said has the

102
00:04:42,480 --> 00:04:44,940
splash screen which you see when you

103
00:04:44,940 --> 00:04:46,620
first power the badge on and that just

104
00:04:46,620 --> 00:04:50,310
tells you hey here are the buttons the

105
00:04:50,310 --> 00:04:52,230
lesson that we should have done was we

106
00:04:52,230 --> 00:04:53,670
should have also put the software

107
00:04:53,670 --> 00:04:56,430
version number on the splash screen that

108
00:04:56,430 --> 00:04:57,660
would have meant that when we turned a

109
00:04:57,660 --> 00:04:59,250
badge on we could tell if we needed to

110
00:04:59,250 --> 00:05:01,380
reflash it or not so if you're writing

111
00:05:01,380 --> 00:05:03,360
one of these things highly recommended

112
00:05:03,360 --> 00:05:05,130
at the software version number don't do

113
00:05:05,130 --> 00:05:09,210
what we did so this has a greeting it

114
00:05:09,210 --> 00:05:12,270
gives you a list of menu choices so you

115
00:05:12,270 --> 00:05:14,340
can play the lander game you can play

116
00:05:14,340 --> 00:05:17,040
commander you can adjust some settings

117
00:05:17,040 --> 00:05:19,680
you can look at your friends who you

118
00:05:19,680 --> 00:05:21,150
might have shared scores with on

119
00:05:21,150 --> 00:05:23,730
Bluetooth you could see the credits and

120
00:05:23,730 --> 00:05:27,450
so on if you've got a game selected it

121
00:05:27,450 --> 00:05:30,290
tells you your score I was at 32 games

122
00:05:30,290 --> 00:05:33,570
116 that was why I stopped at this point

123
00:05:33,570 --> 00:05:34,710
because this was just pretty much

124
00:05:34,710 --> 00:05:38,400
perfect it shows you the battery level

125
00:05:38,400 --> 00:05:43,050
as well we're using a great big lipo

126
00:05:43,050 --> 00:05:45,210
battery and you have to be careful of

127
00:05:45,210 --> 00:05:46,830
those things you want to make sure that

128
00:05:46,830 --> 00:05:49,380
you don't make it you don't completely

129
00:05:49,380 --> 00:05:51,570
flatten it so it's good to keep track of

130
00:05:51,570 --> 00:05:54,780
the level so we show that the other

131
00:05:54,780 --> 00:05:57,030
thing that the shell does is it drives

132
00:05:57,030 --> 00:06:01,410
the actual game itself so it drives the

133
00:06:01,410 --> 00:06:04,640
app which is the game so looking at that

134
00:06:04,640 --> 00:06:07,380
here's what the app interface looks like

135
00:06:07,380 --> 00:06:09,270
and here's where it looks a little like

136
00:06:09,270 --> 00:06:14,100
a little like class cool okay so the app

137
00:06:14,100 --> 00:06:16,830
is the basic thing that we used for

138
00:06:16,830 --> 00:06:19,500
implementing the lunar lander game the

139
00:06:19,500 --> 00:06:22,110
friends up where you scan we you use

140
00:06:22,110 --> 00:06:24,210
bluetooth to find other people who may

141
00:06:24,210 --> 00:06:27,170
have played the game the commander game

142
00:06:27,170 --> 00:06:30,960
greatly underrated the commander game

143
00:06:30,960 --> 00:06:35,730
and the Settings app as well here's what

144
00:06:35,730 --> 00:06:37,470
you have to implement if you're going to

145
00:06:37,470 --> 00:06:39,630
go ahead and build one of these apps for

146
00:06:39,630 --> 00:06:39,810
the

147
00:06:39,810 --> 00:06:42,180
badge there's a couple of things you

148
00:06:42,180 --> 00:06:44,580
have to override you need to override

149
00:06:44,580 --> 00:06:49,260
the start method you need and so and

150
00:06:49,260 --> 00:06:51,660
that takes the current time and a color

151
00:06:51,660 --> 00:06:53,639
map I'll show you the color map later

152
00:06:53,639 --> 00:06:55,560
it's not like the palette on the

153
00:06:55,560 --> 00:06:58,830
hackaday badge this is much more naive

154
00:06:58,830 --> 00:07:00,810
because we're doing vector graphics not

155
00:07:00,810 --> 00:07:04,260
raster graphics on here

156
00:07:04,260 --> 00:07:06,360
you have to up what you have to actually

157
00:07:06,360 --> 00:07:08,010
do something which is what update is

158
00:07:08,010 --> 00:07:10,020
complete does so it updates the screen

159
00:07:10,020 --> 00:07:12,780
and returns true if you're done that

160
00:07:12,780 --> 00:07:15,060
gets called periodically and that the

161
00:07:15,060 --> 00:07:17,040
app controls how frequently that gets

162
00:07:17,040 --> 00:07:20,220
called we have a way of figuring out if

163
00:07:20,220 --> 00:07:21,990
the app is actually running or not and

164
00:07:21,990 --> 00:07:25,790
of course every app needs to have a name

165
00:07:25,790 --> 00:07:29,310
so the other thing though if you want to

166
00:07:29,310 --> 00:07:30,750
do something a little more interesting

167
00:07:30,750 --> 00:07:34,200
if you might also want to override the

168
00:07:34,200 --> 00:07:36,780
blink action where you can blink things

169
00:07:36,780 --> 00:07:40,500
that are on the screen if you want to so

170
00:07:40,500 --> 00:07:43,680
on the screen for our game the landing

171
00:07:43,680 --> 00:07:48,630
zones blink on and off periodically you

172
00:07:48,630 --> 00:07:50,729
also want to over if you want to

173
00:07:50,729 --> 00:07:52,620
interact with buttons you need to

174
00:07:52,620 --> 00:07:54,690
override this button action thing you

175
00:07:54,690 --> 00:07:55,950
don't have to you can write something

176
00:07:55,950 --> 00:07:57,750
that doesn't interact at all it maybe

177
00:07:57,750 --> 00:07:59,970
just shows a video and then stops that

178
00:07:59,970 --> 00:08:02,700
would be fine if it's a game you

179
00:08:02,700 --> 00:08:04,470
probably want to be able to reset

180
00:08:04,470 --> 00:08:06,810
statistics you want to be able to return

181
00:08:06,810 --> 00:08:08,789
the number of games that were one played

182
00:08:08,789 --> 00:08:14,010
and what the current score is one of the

183
00:08:14,010 --> 00:08:16,050
things when you look at the blinky

184
00:08:16,050 --> 00:08:18,300
example for Arduino and a lot of the

185
00:08:18,300 --> 00:08:20,490
early examples that come with an Arduino

186
00:08:20,490 --> 00:08:23,330
is that it uses this delay call and

187
00:08:23,330 --> 00:08:26,100
that's not a great idea if you want to

188
00:08:26,100 --> 00:08:28,320
have animation that runs smoothly

189
00:08:28,320 --> 00:08:31,680
so if you use delay and you might at

190
00:08:31,680 --> 00:08:34,140
this step you do a lot of work you know

191
00:08:34,140 --> 00:08:36,690
you might do say 30 milliseconds of work

192
00:08:36,690 --> 00:08:38,458
and then the next time you do 5

193
00:08:38,458 --> 00:08:41,279
milliseconds then maybe you do you know

194
00:08:41,279 --> 00:08:43,708
200 milliseconds of work what you'll

195
00:08:43,708 --> 00:08:46,050
notice if you've got a 60 oh say a 30

196
00:08:46,050 --> 00:08:48,360
millisecond delay in there is that the

197
00:08:48,360 --> 00:08:50,760
animation looks really jumpy it pauses

198
00:08:50,760 --> 00:08:52,350
and then it goes really fast for a few

199
00:08:52,350 --> 00:08:53,800
frames then it's

200
00:08:53,800 --> 00:08:57,010
again and so what we do instead is we

201
00:08:57,010 --> 00:08:58,720
spin with and I'll show you what the

202
00:08:58,720 --> 00:09:01,780
code looks like for that the other thing

203
00:09:01,780 --> 00:09:03,880
that delay does is it locks out the

204
00:09:03,880 --> 00:09:05,620
polling for button presses and so if

205
00:09:05,620 --> 00:09:07,300
you're polling for button presses which

206
00:09:07,300 --> 00:09:09,700
is the approach I took here um you

207
00:09:09,700 --> 00:09:11,440
really want to be able to actively keep

208
00:09:11,440 --> 00:09:14,110
polling it as much as you can otherwise

209
00:09:14,110 --> 00:09:16,150
you'll have the experience where you're

210
00:09:16,150 --> 00:09:18,160
playing the game and then sometimes the

211
00:09:18,160 --> 00:09:20,500
buttons don't work which is pretty

212
00:09:20,500 --> 00:09:24,340
unpleasant experience we also found that

213
00:09:24,340 --> 00:09:26,830
delay didn't act work really well with

214
00:09:26,830 --> 00:09:31,030
Bluetooth as well on here so here's what

215
00:09:31,030 --> 00:09:34,630
a spin loop looks like so things to know

216
00:09:34,630 --> 00:09:36,850
looking at this code is that now is the

217
00:09:36,850 --> 00:09:39,640
current time and so it at the top of the

218
00:09:39,640 --> 00:09:42,940
main loop in Arduino I call I say now

219
00:09:42,940 --> 00:09:44,980
equals Millie's and that's the current

220
00:09:44,980 --> 00:09:48,220
time in milliseconds so if the current

221
00:09:48,220 --> 00:09:51,580
time if the current the difference

222
00:09:51,580 --> 00:09:53,230
between the current time and when I last

223
00:09:53,230 --> 00:09:55,270
blinked was greater than this icons

224
00:09:55,270 --> 00:09:57,100
flash interval which I think has set to

225
00:09:57,100 --> 00:09:59,830
about 500 milliseconds then I'm going to

226
00:09:59,830 --> 00:10:01,840
tell the game to blink the game may

227
00:10:01,840 --> 00:10:03,550
choose not to blink and not bother

228
00:10:03,550 --> 00:10:05,320
implementing that in which case nothing

229
00:10:05,320 --> 00:10:07,030
will happen but if it's a game that

230
00:10:07,030 --> 00:10:09,660
wants to blink it gets the opportunity I

231
00:10:09,660 --> 00:10:12,220
then go and pull all the buttons and I

232
00:10:12,220 --> 00:10:15,670
had this debounce a thing which mean on

233
00:10:15,670 --> 00:10:17,980
this game what the Dee bouncer does is

234
00:10:17,980 --> 00:10:20,700
that it does a couple of things it'll

235
00:10:20,700 --> 00:10:23,140
recognize if the button has been held

236
00:10:23,140 --> 00:10:25,060
down for enough time to register once

237
00:10:25,060 --> 00:10:27,580
but it also has a repeat function so you

238
00:10:27,580 --> 00:10:29,710
know how on a keyboard if you hold down

239
00:10:29,710 --> 00:10:33,310
the key it'll press once and then after

240
00:10:33,310 --> 00:10:35,290
a while or so oh okay I guess they want

241
00:10:35,290 --> 00:10:36,970
to do this a lot and so they'll start in

242
00:10:36,970 --> 00:10:39,250
repeat mode so that whole debounce does

243
00:10:39,250 --> 00:10:44,530
takes care of that so and then the thing

244
00:10:44,530 --> 00:10:47,170
is once we've processed the buttons we

245
00:10:47,170 --> 00:10:49,060
then go and if the time since the last

246
00:10:49,060 --> 00:10:50,890
update err is greater than milliseconds

247
00:10:50,890 --> 00:10:53,380
per frame which is about 60 milliseconds

248
00:10:53,380 --> 00:10:57,390
then we go and tell the game to update

249
00:10:57,390 --> 00:11:00,040
um the other thing I want to thank

250
00:11:00,040 --> 00:11:01,900
Charles who went before me for talking

251
00:11:01,900 --> 00:11:04,930
about look-up tables because we pre

252
00:11:04,930 --> 00:11:06,940
calculate everything for this as much as

253
00:11:06,940 --> 00:11:10,060
possible as chil said so what you want

254
00:11:10,060 --> 00:11:12,490
to do is you know floating point is slow

255
00:11:12,490 --> 00:11:14,440
you want to try to help that animation

256
00:11:14,440 --> 00:11:16,840
out as much as possible by not making it

257
00:11:16,840 --> 00:11:19,870
do floating point not me you know just

258
00:11:19,870 --> 00:11:22,180
basically as much as possible you should

259
00:11:22,180 --> 00:11:24,370
be pre calculating things and so we pre

260
00:11:24,370 --> 00:11:27,130
calculate the points for that when we

261
00:11:27,130 --> 00:11:29,650
draw the lander at each rotation it has

262
00:11:29,650 --> 00:11:31,780
16 different rotational positions and we

263
00:11:31,780 --> 00:11:33,910
have those pre calculated so I'm not

264
00:11:33,910 --> 00:11:36,070
doing sines and cosines and things like

265
00:11:36,070 --> 00:11:42,370
that we store the grayscale images in

266
00:11:42,370 --> 00:11:45,820
bitmaps in Prague mem and we have two

267
00:11:45,820 --> 00:11:49,650
kinds of things so for the for the

268
00:11:49,650 --> 00:11:53,380
commander game I had a moon shape a

269
00:11:53,380 --> 00:11:55,350
beautiful grayscale image of the moon

270
00:11:55,350 --> 00:11:59,440
takes a lot of memory but if it's in

271
00:11:59,440 --> 00:12:02,080
program it's fine and then for the

272
00:12:02,080 --> 00:12:04,690
bitmap of the lander that you see when

273
00:12:04,690 --> 00:12:07,180
you first turn it on that's a that's

274
00:12:07,180 --> 00:12:09,100
just a black-and-white bitmap that of

275
00:12:09,100 --> 00:12:12,430
course you can tell you can tell the TFT

276
00:12:12,430 --> 00:12:14,320
libraries to display in whatever color

277
00:12:14,320 --> 00:12:18,760
you choose an alternative way which a

278
00:12:18,760 --> 00:12:20,980
lot of the samples give you is to show

279
00:12:20,980 --> 00:12:25,750
you drawing bitmaps on an SD card an SD

280
00:12:25,750 --> 00:12:27,430
card is a good solution if you've got

281
00:12:27,430 --> 00:12:29,860
enormous bitmaps but if you're trying to

282
00:12:29,860 --> 00:12:31,570
distribute a badge it's got a couple of

283
00:12:31,570 --> 00:12:34,270
drawbacks one drawback is that if you

284
00:12:34,270 --> 00:12:37,060
lose your SD card suddenly your badge

285
00:12:37,060 --> 00:12:39,760
doesn't work or it doesn't display some

286
00:12:39,760 --> 00:12:42,370
of your bitmaps and you know and that

287
00:12:42,370 --> 00:12:44,890
would be sad the other problem with it

288
00:12:44,890 --> 00:12:48,760
is that as a badge maker you have to

289
00:12:48,760 --> 00:12:52,210
flash the SD cards as well as the badges

290
00:12:52,210 --> 00:12:54,670
and so then you've got a problem where

291
00:12:54,670 --> 00:12:56,740
you've got a logistics problem you're

292
00:12:56,740 --> 00:12:59,620
probably paying someone to get all of

293
00:12:59,620 --> 00:13:02,170
the data onto the SD cards but you're

294
00:13:02,170 --> 00:13:05,740
also at the same time going to need to

295
00:13:05,740 --> 00:13:08,680
get the other bat the rest of the badge

296
00:13:08,680 --> 00:13:10,120
flashed and then make sure that

297
00:13:10,120 --> 00:13:11,530
everything works together so

298
00:13:11,530 --> 00:13:14,560
logistically it's a lot more complex to

299
00:13:14,560 --> 00:13:18,060
use a separate SD card

300
00:13:19,039 --> 00:13:24,389
okay so let's talk about the interface

301
00:13:24,389 --> 00:13:28,559
with the hardware a bit so most of these

302
00:13:28,559 --> 00:13:31,229
buttons so this is how we define the

303
00:13:31,229 --> 00:13:33,089
interface with the hardware and so the

304
00:13:33,089 --> 00:13:36,809
app the the shell that I wrote uses

305
00:13:36,809 --> 00:13:40,859
these ones so furring so you know we're

306
00:13:40,859 --> 00:13:42,449
using spy to communicate with the

307
00:13:42,449 --> 00:13:45,449
display and that's a pretty standard TFT

308
00:13:45,449 --> 00:13:49,559
display thing the leds we define these

309
00:13:49,559 --> 00:13:53,909
are output GPIO pins the buttons we

310
00:13:53,909 --> 00:13:56,489
define the buttons here as well we also

311
00:13:56,489 --> 00:14:00,419
define the GPIO and the SCL SDA port

312
00:14:00,419 --> 00:14:04,319
pins for the shitty ad on the badge that

313
00:14:04,319 --> 00:14:06,389
the software that we wrote here doesn't

314
00:14:06,389 --> 00:14:09,299
actually use the shitty add-on except to

315
00:14:09,299 --> 00:14:12,259
provide power to it so we didn't do the

316
00:14:12,259 --> 00:14:14,629
communication with that

317
00:14:14,629 --> 00:14:16,979
another thing that's worth noticing here

318
00:14:16,979 --> 00:14:18,689
is that we monitor the battery level and

319
00:14:18,689 --> 00:14:20,639
so you there's a pin that's used for

320
00:14:20,639 --> 00:14:24,629
doing that people who are more familiar

321
00:14:24,629 --> 00:14:26,849
with the ESP 32 might notice that we're

322
00:14:26,849 --> 00:14:30,929
using pins 36 and 39 as inputs and that

323
00:14:30,929 --> 00:14:35,639
was a problem so after we built the

324
00:14:35,639 --> 00:14:37,439
badge when we got the prototype back we

325
00:14:37,439 --> 00:14:39,329
thought we really should do something to

326
00:14:39,329 --> 00:14:41,399
make this more interesting so I looked

327
00:14:41,399 --> 00:14:45,569
up the specs and hey ESP 32 has a Hall

328
00:14:45,569 --> 00:14:48,059
effect sensor and what that means is you

329
00:14:48,059 --> 00:14:50,729
can go and put a magnet near the

330
00:14:50,729 --> 00:14:52,769
processor and detect that there's a

331
00:14:52,769 --> 00:14:56,009
magnet there and so that sounded really

332
00:14:56,009 --> 00:14:59,519
cool so I wrote this piece of software

333
00:14:59,519 --> 00:15:01,529
that the the I wrote this function that

334
00:15:01,529 --> 00:15:03,479
will go and read the Hall effect sensor

335
00:15:03,479 --> 00:15:06,119
and there's two things to notice about

336
00:15:06,119 --> 00:15:09,599
this the first thing is when you go and

337
00:15:09,599 --> 00:15:12,059
look online people will be saying oh

338
00:15:12,059 --> 00:15:15,179
that Hall effect sensor it is not

339
00:15:15,179 --> 00:15:17,909
reliable it gives me random numbers it

340
00:15:17,909 --> 00:15:20,939
doesn't seem to work but it turns out if

341
00:15:20,939 --> 00:15:23,279
you average it over about a thousand

342
00:15:23,279 --> 00:15:25,169
readings which is pretty quick I know it

343
00:15:25,169 --> 00:15:26,970
seems like a big number but if you have

344
00:15:26,970 --> 00:15:29,279
Richard over a thousand it's actually

345
00:15:29,279 --> 00:15:31,630
fine it's really it's very stable

346
00:15:31,630 --> 00:15:34,450
you just need to sample it enough the

347
00:15:34,450 --> 00:15:36,550
other problem was that when we first

348
00:15:36,550 --> 00:15:38,080
wrote this code and it didn't have those

349
00:15:38,080 --> 00:15:41,980
pin modes input lines there it would

350
00:15:41,980 --> 00:15:43,870
cause two of the buttons to go haywire

351
00:15:43,870 --> 00:15:45,640
and suddenly they would start firing

352
00:15:45,640 --> 00:15:47,530
randomly so I went and read the code

353
00:15:47,530 --> 00:15:49,540
this is the great thing about basing

354
00:15:49,540 --> 00:15:51,460
your development on open source code is

355
00:15:51,460 --> 00:15:54,340
that I realized that what the ESP 32

356
00:15:54,340 --> 00:15:56,230
code was doing was setting those pins to

357
00:15:56,230 --> 00:15:57,790
being analog so it could do the whole

358
00:15:57,790 --> 00:16:01,090
read so what I'm doing is setting them

359
00:16:01,090 --> 00:16:03,400
back to being regular digital input pins

360
00:16:03,400 --> 00:16:08,920
afterwards and like that it works now I

361
00:16:08,920 --> 00:16:11,020
suspect most people who use the badge

362
00:16:11,020 --> 00:16:13,870
never figured out how to do that so

363
00:16:13,870 --> 00:16:16,540
that's how it goes I've got a hint at

364
00:16:16,540 --> 00:16:17,800
the yet and the last slide about how

365
00:16:17,800 --> 00:16:21,730
have it to actually make that work so

366
00:16:21,730 --> 00:16:25,240
managing the display we're using vector

367
00:16:25,240 --> 00:16:27,700
graphics not not raster as I said so

368
00:16:27,700 --> 00:16:29,740
what that means we're doing is we're

369
00:16:29,740 --> 00:16:33,940
using those TFT commands to call things

370
00:16:33,940 --> 00:16:36,370
like draw circle draw filled triangle

371
00:16:36,370 --> 00:16:41,710
draw lines etc so to make if you try to

372
00:16:41,710 --> 00:16:44,230
clear the screen each time you go each

373
00:16:44,230 --> 00:16:46,630
time around the loop then what happens

374
00:16:46,630 --> 00:16:48,550
is you get this annoying flicker and it

375
00:16:48,550 --> 00:16:50,770
just looks terrible nobody wants to see

376
00:16:50,770 --> 00:16:54,130
that so what you do instead is what I'm

377
00:16:54,130 --> 00:16:56,380
doing is I redraw the previous artifacts

378
00:16:56,380 --> 00:16:58,060
in whatever my background color is at

379
00:16:58,060 --> 00:17:01,090
the time so that way it looks pretty

380
00:17:01,090 --> 00:17:03,400
clean and you know the experience from

381
00:17:03,400 --> 00:17:05,260
the user perspective is they cannot see

382
00:17:05,260 --> 00:17:07,569
those redraws what they see is it looks

383
00:17:07,569 --> 00:17:09,760
like the lander moves smoothly across

384
00:17:09,760 --> 00:17:12,250
the screen and the scrolling side to

385
00:17:12,250 --> 00:17:14,020
side and up and down just seems to work

386
00:17:14,020 --> 00:17:17,530
so you know it's very fortunate like

387
00:17:17,530 --> 00:17:20,890
that so here's the here's what we do in

388
00:17:20,890 --> 00:17:23,410
update is complete for the lunar lander

389
00:17:23,410 --> 00:17:26,140
game we run our physics engine one step

390
00:17:26,140 --> 00:17:28,180
telling it the current time and it

391
00:17:28,180 --> 00:17:30,730
applies gravity to the lander it applies

392
00:17:30,730 --> 00:17:32,860
thrust in either up or maybe down if you

393
00:17:32,860 --> 00:17:35,590
want to crash quickly get it over with

394
00:17:35,590 --> 00:17:38,480
so it

395
00:17:38,480 --> 00:17:40,820
so it runs the physics engine it redraws

396
00:17:40,820 --> 00:17:43,220
the screen and it updates the heads-up

397
00:17:43,220 --> 00:17:46,190
display text on the screen and then it

398
00:17:46,190 --> 00:17:48,919
returns true if you've won or you've

399
00:17:48,919 --> 00:17:55,100
lost or you quit so let's talk a bit

400
00:17:55,100 --> 00:17:58,130
about scrolling now the world is much

401
00:17:58,130 --> 00:18:01,940
larger than the screen so what I want to

402
00:18:01,940 --> 00:18:03,590
do and this is pretty common for these

403
00:18:03,590 --> 00:18:06,500
arcade style games is that the Lander or

404
00:18:06,500 --> 00:18:09,049
the player stays in the middle of the

405
00:18:09,049 --> 00:18:12,110
screen more or less in this case the

406
00:18:12,110 --> 00:18:14,299
lander stays exactly horizontally in the

407
00:18:14,299 --> 00:18:16,010
middle of the screen it can move up and

408
00:18:16,010 --> 00:18:18,020
down a little bit because I don't scroll

409
00:18:18,020 --> 00:18:20,470
the mountains up beyond that zero point

410
00:18:20,470 --> 00:18:23,809
so the world wraps around horizontally

411
00:18:23,809 --> 00:18:25,640
you don't notice when you're playing

412
00:18:25,640 --> 00:18:28,910
because you will you tend not to notice

413
00:18:28,910 --> 00:18:30,919
if you're really looking for it you can

414
00:18:30,919 --> 00:18:34,190
tell I'm wrapping it the sky above the

415
00:18:34,190 --> 00:18:36,260
ground also wraps vertically once you're

416
00:18:36,260 --> 00:18:38,330
above the mountains so what you can do

417
00:18:38,330 --> 00:18:40,340
is decide I want to see how high I can

418
00:18:40,340 --> 00:18:42,950
fly and so you just blast it go straight

419
00:18:42,950 --> 00:18:45,080
up and it keeps scrolling and after a

420
00:18:45,080 --> 00:18:46,610
while it's scrolling but it's not

421
00:18:46,610 --> 00:18:51,140
usually very obvious to people so here's

422
00:18:51,140 --> 00:18:53,929
a picture of what this looks like and

423
00:18:53,929 --> 00:18:56,480
why the screen translation is a little

424
00:18:56,480 --> 00:19:00,740
complicated so when I'm in the world

425
00:19:00,740 --> 00:19:03,080
coordinate coordinates it's very

426
00:19:03,080 --> 00:19:07,880
convenient to have ground be at zero so

427
00:19:07,880 --> 00:19:11,299
I want to have the the lower left-hand

428
00:19:11,299 --> 00:19:13,309
corner is where zero zero is in the

429
00:19:13,309 --> 00:19:15,770
world coordinates and that's nice

430
00:19:15,770 --> 00:19:17,600
because gravity works the way you'd

431
00:19:17,600 --> 00:19:19,809
expect it to in the physics engine and

432
00:19:19,809 --> 00:19:22,640
it means that it's obvious when I should

433
00:19:22,640 --> 00:19:25,880
stop scrolling down when I get to zero I

434
00:19:25,880 --> 00:19:28,970
stop scrolling down on the other hand

435
00:19:28,970 --> 00:19:31,940
the screen itself wants zero to be on

436
00:19:31,940 --> 00:19:35,299
the top left and so you can see here the

437
00:19:35,299 --> 00:19:38,390
Pink's the pink rectangle is you know

438
00:19:38,390 --> 00:19:40,910
the the actual camera the world view

439
00:19:40,910 --> 00:19:41,720
that you're looking at you're looking

440
00:19:41,720 --> 00:19:47,480
through this little camera okay so and

441
00:19:47,480 --> 00:19:49,669
so then the camera the camera gets

442
00:19:49,669 --> 00:19:52,749
scrolled left down up and right etc

443
00:19:52,749 --> 00:19:55,359
we also consume it now when I started

444
00:19:55,359 --> 00:19:57,279
putting this to the hackaday badge which

445
00:19:57,279 --> 00:20:00,190
the port is not finished because moving

446
00:20:00,190 --> 00:20:02,769
from vector graphics to raster graphics

447
00:20:02,769 --> 00:20:05,769
is not trivial it turns out when I

448
00:20:05,769 --> 00:20:07,929
started porting that I decided that the

449
00:20:07,929 --> 00:20:09,849
zooming would be too complicated because

450
00:20:09,849 --> 00:20:13,649
I would probably need too many sprites

451
00:20:13,649 --> 00:20:17,019
but here's how we caught here's there's

452
00:20:17,019 --> 00:20:19,059
some macros you're not expected to learn

453
00:20:19,059 --> 00:20:21,309
these macros but you know I use macros

454
00:20:21,309 --> 00:20:23,259
to convert between from world

455
00:20:23,259 --> 00:20:24,940
coordinates to screen coordinates when I

456
00:20:24,940 --> 00:20:27,729
go to print so the physics engine and

457
00:20:27,729 --> 00:20:30,070
all of the other things there for this

458
00:20:30,070 --> 00:20:32,829
game are in world coordinates and then I

459
00:20:32,829 --> 00:20:35,409
just convert them back to screen when

460
00:20:35,409 --> 00:20:39,089
I'm going to when I go to display it

461
00:20:39,359 --> 00:20:42,879
color maps now you know on the hackaday

462
00:20:42,879 --> 00:20:45,039
badge it has this palette you can do

463
00:20:45,039 --> 00:20:46,959
interesting effects by shifting the

464
00:20:46,959 --> 00:20:50,739
palette for this game it's because of

465
00:20:50,739 --> 00:20:52,570
the way the graphics are working what

466
00:20:52,570 --> 00:20:54,820
I'm doing instead is I'm giving a color

467
00:20:54,820 --> 00:20:57,729
map to each app that comes from the

468
00:20:57,729 --> 00:21:01,029
settings and so I define what the color

469
00:21:01,029 --> 00:21:03,309
the background color looks like which by

470
00:21:03,309 --> 00:21:07,809
default is black etc and so that's what

471
00:21:07,809 --> 00:21:09,759
that's the default color map and I just

472
00:21:09,759 --> 00:21:11,739
commented there with the colors so that

473
00:21:11,739 --> 00:21:13,629
I could remember what the defaults look

474
00:21:13,629 --> 00:21:16,179
like while I was doing that but there

475
00:21:16,179 --> 00:21:17,799
are different color Maps possible on

476
00:21:17,799 --> 00:21:19,570
this badge and that lets you add a

477
00:21:19,570 --> 00:21:21,429
little bit of interest without or not

478
00:21:21,429 --> 00:21:23,679
without a lot of code actually that was

479
00:21:23,679 --> 00:21:28,389
pretty easy so let me let me talk a

480
00:21:28,389 --> 00:21:31,029
little bit about Bluetooth so Bluetooth

481
00:21:31,029 --> 00:21:34,089
on the ESP 32 works great but it does

482
00:21:34,089 --> 00:21:36,879
take a lot of memory and so what that

483
00:21:36,879 --> 00:21:39,099
meant happened is that when I compiled

484
00:21:39,099 --> 00:21:41,109
it for the first time running Bluetooth

485
00:21:41,109 --> 00:21:44,919
as well it didn't fit I couldn't load it

486
00:21:44,919 --> 00:21:48,129
onto the Arduino using the Arduino IDE I

487
00:21:48,129 --> 00:21:51,369
couldn't fit my app on the thing so what

488
00:21:51,369 --> 00:21:53,109
I did it so what I did was I looked

489
00:21:53,109 --> 00:21:54,999
around and realized that the right way

490
00:21:54,999 --> 00:21:59,049
to do is to edit boards txt and so you

491
00:21:59,049 --> 00:22:01,299
can see the dip there I'm actually using

492
00:22:01,299 --> 00:22:03,980
the ESP the feather ESP 32

493
00:22:03,980 --> 00:22:06,530
my fake board here I could have created

494
00:22:06,530 --> 00:22:07,940
a new one but it was easier to just

495
00:22:07,940 --> 00:22:11,390
reuse it and add some more stuff so I

496
00:22:11,390 --> 00:22:14,120
added the default partition scheme for

497
00:22:14,120 --> 00:22:17,360
the ESP 32 and then I added this new one

498
00:22:17,360 --> 00:22:20,179
which was huge app which is predefined

499
00:22:20,179 --> 00:22:23,120
somewhere and what that gives you is 3

500
00:22:23,120 --> 00:22:26,360
Meg of size for uploading instead of 1.2

501
00:22:26,360 --> 00:22:30,919
Meg I'm sitting at about 1.4 million up

502
00:22:30,919 --> 00:22:32,600
that it was not gonna it wasn't going to

503
00:22:32,600 --> 00:22:35,960
be a happy thing so that's some a little

504
00:22:35,960 --> 00:22:38,120
tricky to find that it's worth being

505
00:22:38,120 --> 00:22:40,130
aware of if you're riding one of these

506
00:22:40,130 --> 00:22:41,780
games and you need a bit more memory

507
00:22:41,780 --> 00:22:46,610
that's how you get it so in the Arduino

508
00:22:46,610 --> 00:22:49,760
settings what you'll see is that I'm

509
00:22:49,760 --> 00:22:53,380
using the board is the ESP 32 feather

510
00:22:53,380 --> 00:22:56,390
and the partition scheme is that one

511
00:22:56,390 --> 00:22:58,940
that we just defined but I'm shipping it

512
00:22:58,940 --> 00:23:02,510
I set with core debug level to none I'm

513
00:23:02,510 --> 00:23:04,840
also I also use this tool the ESP

514
00:23:04,840 --> 00:23:07,160
exception decoder which is open source

515
00:23:07,160 --> 00:23:09,559
it's available on github and it's highly

516
00:23:09,559 --> 00:23:12,140
recommended if you're doing any ESP work

517
00:23:12,140 --> 00:23:15,470
because you'll find that it really helps

518
00:23:15,470 --> 00:23:17,960
if you if it crashes and yes I have

519
00:23:17,960 --> 00:23:21,890
crushed the ESP 32 multiple times as a

520
00:23:21,890 --> 00:23:23,210
software engineer you know you spend

521
00:23:23,210 --> 00:23:24,770
most of your time looking at code that's

522
00:23:24,770 --> 00:23:30,530
broken and this helps ok so the other

523
00:23:30,530 --> 00:23:32,570
thing I noticed is that when I was

524
00:23:32,570 --> 00:23:35,780
running Bluetooth to scan so let me take

525
00:23:35,780 --> 00:23:37,070
a step back and talk about how the

526
00:23:37,070 --> 00:23:40,340
friends app works so what it does is if

527
00:23:40,340 --> 00:23:42,770
you enable bluetooth passively it

528
00:23:42,770 --> 00:23:44,929
broadcasts your score for the Lunar

529
00:23:44,929 --> 00:23:47,030
Lander game to anyone who's around so

530
00:23:47,030 --> 00:23:48,830
it'll send these little messages that

531
00:23:48,830 --> 00:23:52,640
say hey no full-name 256 or you know I

532
00:23:52,640 --> 00:23:55,040
think was 1735 or something was my score

533
00:23:55,040 --> 00:23:59,000
not that I'm counting and so anybody

534
00:23:59,000 --> 00:24:02,900
who's around can then turn on scan for

535
00:24:02,900 --> 00:24:04,970
friends on that friends app and find

536
00:24:04,970 --> 00:24:06,710
people around who may have also been

537
00:24:06,710 --> 00:24:09,440
playing the game that game and they can

538
00:24:09,440 --> 00:24:11,210
get their scores and their scores show

539
00:24:11,210 --> 00:24:13,010
up on the leaderboard that's on that

540
00:24:13,010 --> 00:24:15,470
friends app

541
00:24:15,470 --> 00:24:16,820
now the problem I had when we started

542
00:24:16,820 --> 00:24:18,980
doing this was that the badge would just

543
00:24:18,980 --> 00:24:22,279
lock up all scanning and the normally

544
00:24:22,279 --> 00:24:24,110
what happens if the badge has just

545
00:24:24,110 --> 00:24:29,059
turned on I was this is that there's

546
00:24:29,059 --> 00:24:32,000
this little Idol loop thing that runs

547
00:24:32,000 --> 00:24:34,970
that runs these LEDs here see the LEDs

548
00:24:34,970 --> 00:24:36,529
on the tile and they just kind of and

549
00:24:36,529 --> 00:24:38,480
it's kind of a comforting thing to know

550
00:24:38,480 --> 00:24:40,549
that the badge is still working that

551
00:24:40,549 --> 00:24:44,210
stopped when I would turn the when I

552
00:24:44,210 --> 00:24:46,460
would be doing Bluetooth scanning and so

553
00:24:46,460 --> 00:24:48,139
if you used to sing those comforting

554
00:24:48,139 --> 00:24:50,149
lights flashing you had decided that

555
00:24:50,149 --> 00:24:51,679
maybe the badge was dead and you'd turn

556
00:24:51,679 --> 00:24:53,029
it off

557
00:24:53,029 --> 00:24:55,700
to get around that what I was doing is

558
00:24:55,700 --> 00:24:58,639
running an idle loop on the second core

559
00:24:58,639 --> 00:25:03,740
of the the ESP 32 I do weknow use the

560
00:25:03,740 --> 00:25:07,399
CPU one but that means the CPU zero on

561
00:25:07,399 --> 00:25:10,100
the ESP 32 typically is sitting there

562
00:25:10,100 --> 00:25:13,460
doing absolutely nothing so what I'm

563
00:25:13,460 --> 00:25:16,399
doing is I run the idle task on there

564
00:25:16,399 --> 00:25:19,730
and that keeps and that keeps the those

565
00:25:19,730 --> 00:25:22,429
lights on while I'm doing scanning for

566
00:25:22,429 --> 00:25:28,730
Bluetooth and then and we're actually

567
00:25:28,730 --> 00:25:30,019
almost to the end of the really

568
00:25:30,019 --> 00:25:33,019
technical part of this so the serial

569
00:25:33,019 --> 00:25:38,360
port now one of the when I gave this to

570
00:25:38,360 --> 00:25:40,549
one of the Kickstarter badges backers

571
00:25:40,549 --> 00:25:42,169
one of the first people who received

572
00:25:42,169 --> 00:25:44,840
this badge said to me I don't see how to

573
00:25:44,840 --> 00:25:48,470
change my name it looks like you know I

574
00:25:48,470 --> 00:25:50,809
can see then on your examples you don't

575
00:25:50,809 --> 00:25:52,279
have badge number

576
00:25:52,279 --> 00:25:56,059
some obfuscated version of the MAC

577
00:25:56,059 --> 00:25:58,490
address of the ESP 32 I'm like yeah

578
00:25:58,490 --> 00:26:00,190
that's right I don't actually have that

579
00:26:00,190 --> 00:26:03,380
and so you know took a lot of people to

580
00:26:03,380 --> 00:26:04,909
realize that actually you can use that

581
00:26:04,909 --> 00:26:07,309
serial port for a couple of other things

582
00:26:07,309 --> 00:26:10,940
so while I'm while developing of course

583
00:26:10,940 --> 00:26:12,559
you use it for debugging you print

584
00:26:12,559 --> 00:26:14,330
things out you look at it and say well I

585
00:26:14,330 --> 00:26:16,610
see why that's not working you can also

586
00:26:16,610 --> 00:26:18,950
print things that do print apps to the

587
00:26:18,950 --> 00:26:20,570
serial port in order to slow things down

588
00:26:20,570 --> 00:26:22,610
so you can see what's going on if your

589
00:26:22,610 --> 00:26:24,320
animation is looking a bit janky and

590
00:26:24,320 --> 00:26:26,790
you're not sure what's going on

591
00:26:26,790 --> 00:26:30,270
but you can change your name so you can

592
00:26:30,270 --> 00:26:32,370
see the example there if you connect it

593
00:26:32,370 --> 00:26:35,820
up to a serial to some kind of serial

594
00:26:35,820 --> 00:26:39,090
device like on the Mac you use screen to

595
00:26:39,090 --> 00:26:41,850
dev TTY and that will vary a little bit

596
00:26:41,850 --> 00:26:43,169
so you might take a little while to

597
00:26:43,169 --> 00:26:44,730
figure out which one it's connected to

598
00:26:44,730 --> 00:26:47,610
you can use putty you can use whatever

599
00:26:47,610 --> 00:26:50,280
it's basically it's a vt100

600
00:26:50,280 --> 00:26:53,730
it's what the is what the serial port on

601
00:26:53,730 --> 00:26:56,360
this thing on an ASP 30 32 looks like

602
00:26:56,360 --> 00:26:59,280
vt100 is being old technology even when

603
00:26:59,280 --> 00:27:03,690
i started in in tech so you can change

604
00:27:03,690 --> 00:27:07,290
your name you can also have a serial

605
00:27:07,290 --> 00:27:09,210
version of the game and so I did this

606
00:27:09,210 --> 00:27:11,040
for the commander game and so you can

607
00:27:11,040 --> 00:27:13,710
see on the right there that it says you

608
00:27:13,710 --> 00:27:15,150
know the command module is really

609
00:27:15,150 --> 00:27:16,860
important and you're like oh yeah I know

610
00:27:16,860 --> 00:27:19,620
and it says I can't you see the moon you

611
00:27:19,620 --> 00:27:21,870
see the command module orbiting the moon

612
00:27:21,870 --> 00:27:23,970
the lander separates from the command

613
00:27:23,970 --> 00:27:26,549
module it lands on the lunar surface and

614
00:27:26,549 --> 00:27:28,320
then if you start pressing buttons

615
00:27:28,320 --> 00:27:29,460
because you're annoyed about this and

616
00:27:29,460 --> 00:27:31,260
you're kind of done okay this is really

617
00:27:31,260 --> 00:27:33,419
boring this game it starts popping up

618
00:27:33,419 --> 00:27:35,490
messages okay I think I'm about out of

619
00:27:35,490 --> 00:27:37,860
time but you can see here this was my

620
00:27:37,860 --> 00:27:40,320
hint for how the Hall effect sensor was

621
00:27:40,320 --> 00:27:44,429
supposed to work so these are the

622
00:27:44,429 --> 00:27:46,320
libraries that I used these slides will

623
00:27:46,320 --> 00:27:48,600
be available later I think in any case

624
00:27:48,600 --> 00:27:50,190
I'll leave this up for long enough that

625
00:27:50,190 --> 00:27:51,630
you can go and look at the recording

626
00:27:51,630 --> 00:27:56,370
later a few months I think I covered all

627
00:27:56,370 --> 00:27:59,010
of this play testing is really important

628
00:27:59,010 --> 00:28:02,340
for any game and using git is important

629
00:28:02,340 --> 00:28:04,320
so that you can be brave about

630
00:28:04,320 --> 00:28:07,049
refactoring it's very valuable to have a

631
00:28:07,049 --> 00:28:07,860
community

632
00:28:07,860 --> 00:28:10,020
I learnt heavily on the badge life

633
00:28:10,020 --> 00:28:12,179
community for dealing for getting

634
00:28:12,179 --> 00:28:15,150
feedback on this and you know the

635
00:28:15,150 --> 00:28:16,590
hackaday community The Bachelor life

636
00:28:16,590 --> 00:28:18,419
communities are really awesome for

637
00:28:18,419 --> 00:28:21,960
helping with this the code as I said is

638
00:28:21,960 --> 00:28:25,980
on github I have there's some good

639
00:28:25,980 --> 00:28:28,140
resources here for converting bitmaps

640
00:28:28,140 --> 00:28:33,150
and so on and finally thank you to badge

641
00:28:33,150 --> 00:28:35,040
life communities to Def Con the

642
00:28:35,040 --> 00:28:37,080
Kickstarter backers who supported

643
00:28:37,080 --> 00:28:38,820
developing this our first badge it's a

644
00:28:38,820 --> 00:28:39,950
huge risk

645
00:28:39,950 --> 00:28:42,740
putting you money behind a badge from

646
00:28:42,740 --> 00:28:44,480
somebody who's never delivered one

647
00:28:44,480 --> 00:28:48,080
before my family and Rowand who's

648
00:28:48,080 --> 00:28:49,580
sitting back there who did the hardware

649
00:28:49,580 --> 00:28:51,409
design and challenged me to really

650
00:28:51,409 --> 00:28:53,539
improve the code by relentlessly

651
00:28:53,539 --> 00:28:58,330
playtesting okay thank you very much

652
00:28:58,990 --> 00:29:02,160
[Applause]

