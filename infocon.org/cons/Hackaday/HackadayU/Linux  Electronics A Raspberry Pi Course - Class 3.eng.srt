1
00:00:00,000 --> 00:00:08,400
[Music]

2
00:00:08,400 --> 00:00:09,040
okay

3
00:00:09,040 --> 00:00:12,320
um welcome everybody uh this is the

4
00:00:12,320 --> 00:00:13,360
third class

5
00:00:13,360 --> 00:00:15,839
of linux and electronics at raspberry pi

6
00:00:15,839 --> 00:00:16,560
course

7
00:00:16,560 --> 00:00:18,960
today we're going to be seeing and

8
00:00:18,960 --> 00:00:20,160
learning about uh

9
00:00:20,160 --> 00:00:22,320
bash scripting and python scripting a

10
00:00:22,320 --> 00:00:23,840
little bit a little bit of python

11
00:00:23,840 --> 00:00:24,880
scripting

12
00:00:24,880 --> 00:00:27,920
where first uh we're gonna look

13
00:00:27,920 --> 00:00:30,320
at patch first that's gonna that's going

14
00:00:30,320 --> 00:00:32,479
to be our main thing today

15
00:00:32,479 --> 00:00:35,600
and yeah so today i'm gonna be working

16
00:00:35,600 --> 00:00:37,520
from vnc

17
00:00:37,520 --> 00:00:40,079
as we saw in the first class i connected

18
00:00:40,079 --> 00:00:41,280
myself with uh

19
00:00:41,280 --> 00:00:43,920
as as you all know i connected myself

20
00:00:43,920 --> 00:00:44,480
with uh

21
00:00:44,480 --> 00:00:47,680
looking for the ip on the

22
00:00:47,680 --> 00:00:50,960
on the on the windows command line

23
00:00:50,960 --> 00:00:53,760
connecting through through end map here

24
00:00:53,760 --> 00:00:54,559
his respect

25
00:00:54,559 --> 00:00:57,840
my raspberry pi and

26
00:00:57,840 --> 00:01:00,160
then i i connected through the ip

27
00:01:00,160 --> 00:01:02,000
through vnc viewer

28
00:01:02,000 --> 00:01:06,080
having already uh all the settings here

29
00:01:06,080 --> 00:01:09,200
on the raspberry pi configurations

30
00:01:09,200 --> 00:01:13,600
and interfaces having ssh and vnc

31
00:01:13,600 --> 00:01:16,960
all set up so today we're going to be

32
00:01:16,960 --> 00:01:20,240
doing a batch scripting this is

33
00:01:20,240 --> 00:01:21,520
something that

34
00:01:21,520 --> 00:01:24,560
most system administrators

35
00:01:24,560 --> 00:01:27,920
have to do on a daily basis um they

36
00:01:27,920 --> 00:01:30,880
this is a this is for automating a i

37
00:01:30,880 --> 00:01:32,799
like to call it a process

38
00:01:32,799 --> 00:01:35,280
a way for uh programming as operating

39
00:01:35,280 --> 00:01:37,280
system this is how i like to call it

40
00:01:37,280 --> 00:01:40,479
it's not technically that so

41
00:01:40,479 --> 00:01:44,000
yeah um so

42
00:01:44,000 --> 00:01:46,000
last time we saw a little another

43
00:01:46,000 --> 00:01:47,920
example in the last class we saw a

44
00:01:47,920 --> 00:01:48,960
little example

45
00:01:48,960 --> 00:01:53,280
of how to create a new a a batch script

46
00:01:53,280 --> 00:01:56,880
a little simple one uh it was it was

47
00:01:56,880 --> 00:02:00,320
just two lines uh calling uh

48
00:02:00,320 --> 00:02:02,719
the the shell that we're gonna be that

49
00:02:02,719 --> 00:02:04,159
we were going to be using

50
00:02:04,159 --> 00:02:07,600
and using an echo command just to do the

51
00:02:07,600 --> 00:02:08,080
example

52
00:02:08,080 --> 00:02:12,319
right um then

53
00:02:12,319 --> 00:02:16,879
we proceed to to

54
00:02:16,879 --> 00:02:20,560
to run it or do or

55
00:02:20,560 --> 00:02:23,040
give give it permission and then run it

56
00:02:23,040 --> 00:02:24,000
this other way

57
00:02:24,000 --> 00:02:27,440
which is another way to to to run a

58
00:02:27,440 --> 00:02:29,520
command

59
00:02:29,520 --> 00:02:33,040
okay so what is bash bash is a shell

60
00:02:33,040 --> 00:02:36,160
program is as we as we saw in the first

61
00:02:36,160 --> 00:02:36,879
class

62
00:02:36,879 --> 00:02:40,400
a shell is a program uh that basically

63
00:02:40,400 --> 00:02:44,239
it inter uh talks to the kernel

64
00:02:44,239 --> 00:02:46,959
through and between the person in the

65
00:02:46,959 --> 00:02:47,599
kernel

66
00:02:47,599 --> 00:02:50,080
and any any any reads commands and it

67
00:02:50,080 --> 00:02:50,640
gives you

68
00:02:50,640 --> 00:02:53,120
output output that we saw in the last

69
00:02:53,120 --> 00:02:54,080
class called

70
00:02:54,080 --> 00:02:56,720
uh a standard input standard output is

71
00:02:56,720 --> 00:02:58,480
under error

72
00:02:58,480 --> 00:03:01,599
um bash it stands for born again

73
00:03:01,599 --> 00:03:05,280
shell that's this that's a that's a good

74
00:03:05,280 --> 00:03:06,159
thing to know

75
00:03:06,159 --> 00:03:08,400
and there are other shells that's not

76
00:03:08,400 --> 00:03:09,760
there's not only one

77
00:03:09,760 --> 00:03:12,159
there's shell two bash the difference

78
00:03:12,159 --> 00:03:13,120
between bash and

79
00:03:13,120 --> 00:03:16,480
shell is that bash is uh it has a couple

80
00:03:16,480 --> 00:03:17,599
more features

81
00:03:17,599 --> 00:03:21,120
so it's uh it's just chill but

82
00:03:21,120 --> 00:03:23,760
with let's say asteroids there's there's

83
00:03:23,760 --> 00:03:26,000
no many difference to talk about here

84
00:03:26,000 --> 00:03:28,159
uh but just just letting you know that

85
00:03:28,159 --> 00:03:31,280
bash is the standard

86
00:03:31,440 --> 00:03:34,720
csh and ksh are both

87
00:03:34,720 --> 00:03:38,159
other type of shells um i've only seen

88
00:03:38,159 --> 00:03:38,720
this

89
00:03:38,720 --> 00:03:40,799
this used by my teacher but i don't know

90
00:03:40,799 --> 00:03:42,239
i don't i don't know i don't know

91
00:03:42,239 --> 00:03:45,440
which are the specific use of this for

92
00:03:45,440 --> 00:03:47,680
raspberry raspberry pie we're only going

93
00:03:47,680 --> 00:03:48,799
to be using bash

94
00:03:48,799 --> 00:03:50,480
there's no need there's not going to be

95
00:03:50,480 --> 00:03:52,239
a a a

96
00:03:52,239 --> 00:03:55,120
sudden need to use this uh one of these

97
00:03:55,120 --> 00:03:55,760
two

98
00:03:55,760 --> 00:04:00,480
um right away

99
00:04:00,480 --> 00:04:03,280
so let's see how a batch script is is

100
00:04:03,280 --> 00:04:05,280
structured

101
00:04:05,280 --> 00:04:08,480
so everything i'm going i'm going

102
00:04:08,480 --> 00:04:10,080
we're going to be seeing i'm going to be

103
00:04:10,080 --> 00:04:12,840
doing here in the

104
00:04:12,840 --> 00:04:18,160
vnc so let's go to the common line right

105
00:04:18,160 --> 00:04:22,239
here and the command line so

106
00:04:24,960 --> 00:04:27,840
so let's create i don't know if you

107
00:04:27,840 --> 00:04:30,000
people can see that

108
00:04:30,000 --> 00:04:32,320
i don't

109
00:04:36,000 --> 00:04:39,360
okay great much better so let's create

110
00:04:39,360 --> 00:04:43,840
a example script

111
00:04:45,759 --> 00:04:49,120
so we see is here and also here

112
00:04:49,120 --> 00:04:51,360
here

113
00:04:54,840 --> 00:04:57,840
so

114
00:04:57,919 --> 00:05:00,320
here how you here's how you decrea

115
00:05:00,320 --> 00:05:01,039
declare

116
00:05:01,039 --> 00:05:04,800
variables in bash you can do you can try

117
00:05:04,800 --> 00:05:07,280
this on the command line and also you

118
00:05:07,280 --> 00:05:07,919
can do them

119
00:05:07,919 --> 00:05:11,440
on the script we're gonna do that

120
00:05:11,440 --> 00:05:13,600
it's a common it's a good price it's a

121
00:05:13,600 --> 00:05:14,800
good practice

122
00:05:14,800 --> 00:05:17,360
to put the the variables on on on on

123
00:05:17,360 --> 00:05:18,720
caps

124
00:05:18,720 --> 00:05:21,039
that's something you need to know so let

125
00:05:21,039 --> 00:05:23,199
me do this

126
00:05:23,199 --> 00:05:28,240
so let's use nano to edit the script

127
00:05:28,800 --> 00:05:32,240
and let's do what we

128
00:05:32,240 --> 00:05:34,880
always have to do which is declare which

129
00:05:34,880 --> 00:05:36,880
is the child that is going to be

130
00:05:36,880 --> 00:05:40,080
running on um in a second

131
00:05:40,080 --> 00:05:41,199
[Music]

132
00:05:41,199 --> 00:05:43,680
okay here

133
00:05:50,800 --> 00:05:55,360
let's decline it the variable here

134
00:05:57,680 --> 00:06:02,400
let me change my keyboard

135
00:06:04,720 --> 00:06:07,840
let me put pablo here

136
00:06:07,840 --> 00:06:10,159
oops

137
00:06:11,680 --> 00:06:15,280
and let's say echo name

138
00:06:15,280 --> 00:06:18,479
this is how you call the variable back

139
00:06:18,479 --> 00:06:20,400
this is what when when you when you're

140
00:06:20,400 --> 00:06:21,919
using another program

141
00:06:21,919 --> 00:06:23,600
and and you want to use a variable that

142
00:06:23,600 --> 00:06:25,600
you store or you are

143
00:06:25,600 --> 00:06:29,120
um storing let's say you call it by

144
00:06:29,120 --> 00:06:30,319
putting a dollar sign

145
00:06:30,319 --> 00:06:34,080
on on the beginning of it so let's write

146
00:06:34,080 --> 00:06:39,680
this yes enter and let's run it

147
00:06:47,280 --> 00:06:50,560
oh yes it's because we don't have

148
00:06:50,560 --> 00:06:53,360
permissions as you can see here we don't

149
00:06:53,360 --> 00:06:55,199
have

150
00:06:55,199 --> 00:06:59,599
permission to execute it so let's do

151
00:07:00,840 --> 00:07:03,840
that

152
00:07:06,319 --> 00:07:10,240
now i was this is the way i i look for

153
00:07:10,240 --> 00:07:13,039
for comments that i just typed pressing

154
00:07:13,039 --> 00:07:15,039
the arrows up and down

155
00:07:15,039 --> 00:07:16,880
so i now press one up and this is the

156
00:07:16,880 --> 00:07:18,240
one that i just did

157
00:07:18,240 --> 00:07:19,759
press another one and this is the other

158
00:07:19,759 --> 00:07:22,240
one i did

159
00:07:22,720 --> 00:07:26,160
so here i just run my program my batch

160
00:07:26,160 --> 00:07:26,960
script

161
00:07:26,960 --> 00:07:30,000
and give me this which which was the

162
00:07:30,000 --> 00:07:33,120
variable that i put here

163
00:07:33,360 --> 00:07:36,560
so let's continue um this is

164
00:07:36,560 --> 00:07:39,919
um this is another example

165
00:07:39,919 --> 00:07:42,560
um a good a good thing you you're gonna

166
00:07:42,560 --> 00:07:43,280
you guys

167
00:07:43,280 --> 00:07:46,479
want to do today is looking on each link

168
00:07:46,479 --> 00:07:48,560
that i have below and if you if you're

169
00:07:48,560 --> 00:07:49,759
interested because

170
00:07:49,759 --> 00:07:52,720
each each source that i put here is very

171
00:07:52,720 --> 00:07:53,120
is

172
00:07:53,120 --> 00:07:55,120
really really good and maybe as even

173
00:07:55,120 --> 00:07:57,199
necessary

174
00:07:57,199 --> 00:08:00,160
so um

175
00:08:00,319 --> 00:08:03,120
this way this way of declaring a

176
00:08:03,120 --> 00:08:04,319
variable

177
00:08:04,319 --> 00:08:08,160
is doing a command and the output is

178
00:08:08,160 --> 00:08:08,639
going to

179
00:08:08,639 --> 00:08:11,759
is going to be storing the variable so

180
00:08:11,759 --> 00:08:15,520
if we do if you remember this command

181
00:08:15,520 --> 00:08:16,479
pwd

182
00:08:16,479 --> 00:08:18,560
which it gives you where you are the

183
00:08:18,560 --> 00:08:21,039
root path of where you are

184
00:08:21,039 --> 00:08:26,319
you can just change here

185
00:08:26,319 --> 00:08:29,120
and let's change how do i call this this

186
00:08:29,120 --> 00:08:31,520
command

187
00:08:31,520 --> 00:08:34,159
let's do this

188
00:08:38,479 --> 00:08:43,599
save it and let's run it

189
00:08:43,599 --> 00:08:46,720
so what it did was that it run the

190
00:08:46,720 --> 00:08:47,200
command

191
00:08:47,200 --> 00:08:49,200
it run the command at the when when the

192
00:08:49,200 --> 00:08:50,880
variable was declared so if

193
00:08:50,880 --> 00:08:54,000
it goes one by one did this first and

194
00:08:54,000 --> 00:08:54,320
then

195
00:08:54,320 --> 00:08:56,399
store it and then it goes it went down

196
00:08:56,399 --> 00:08:57,920
and did the echo

197
00:08:57,920 --> 00:09:01,040
that's what what just happened this is a

198
00:09:01,040 --> 00:09:01,839
way

199
00:09:01,839 --> 00:09:04,640
for you to in case you need to know uh

200
00:09:04,640 --> 00:09:05,360
for example

201
00:09:05,360 --> 00:09:06,959
this is a good practice to do it and if

202
00:09:06,959 --> 00:09:08,880
you're doing um

203
00:09:08,880 --> 00:09:11,360
some script that you need to be sure

204
00:09:11,360 --> 00:09:12,240
that you have

205
00:09:12,240 --> 00:09:15,680
x version of your program

206
00:09:15,680 --> 00:09:19,360
uh running in your computer so

207
00:09:19,360 --> 00:09:23,839
let's say python v

208
00:09:24,000 --> 00:09:26,399
oh wait

209
00:09:28,000 --> 00:09:31,519
oops let me go back

210
00:09:31,519 --> 00:09:36,160
let me open up again

211
00:09:36,160 --> 00:09:39,120
okay um

212
00:09:43,279 --> 00:09:47,200
okay so let's do another um

213
00:09:47,920 --> 00:09:51,120
yeah let's do date okay so

214
00:09:51,120 --> 00:09:53,440
if i wanna if i wanna if i want to save

215
00:09:53,440 --> 00:09:54,240
the date oh

216
00:09:54,240 --> 00:09:57,839
i'm not in the in the desktop

217
00:09:57,839 --> 00:10:01,839
here and then none script

218
00:10:03,120 --> 00:10:19,839
i can just do this

219
00:10:30,839 --> 00:10:33,839
sure

220
00:10:34,320 --> 00:10:37,040
there you go and if as we saw there are

221
00:10:37,040 --> 00:10:38,560
more programs that you can use

222
00:10:38,560 --> 00:10:41,519
to to cut whatever information you want

223
00:10:41,519 --> 00:10:42,800
and you can parse it

224
00:10:42,800 --> 00:10:46,399
as as as whatever you want

225
00:10:46,399 --> 00:10:49,120
um this is really cool i've i've done

226
00:10:49,120 --> 00:10:51,120
programs to let me know

227
00:10:51,120 --> 00:10:53,680
how much storage i have left in my in my

228
00:10:53,680 --> 00:10:54,720
in my

229
00:10:54,720 --> 00:10:57,360
in my computer when i was running ubuntu

230
00:10:57,360 --> 00:10:58,880
on my main computer

231
00:10:58,880 --> 00:11:01,839
and and and i even did notifications on

232
00:11:01,839 --> 00:11:03,680
ubuntu

233
00:11:03,680 --> 00:11:06,959
uh which has their own it has its own

234
00:11:06,959 --> 00:11:08,800
program to do notifications

235
00:11:08,800 --> 00:11:12,079
so yeah uh so functions this is how you

236
00:11:12,079 --> 00:11:13,120
declare a function

237
00:11:13,120 --> 00:11:16,240
you just put a name on it and

238
00:11:16,240 --> 00:11:19,279
a good a good practice is to use

239
00:11:19,279 --> 00:11:22,320
um underscore for

240
00:11:22,320 --> 00:11:25,040
for spaces

241
00:11:27,120 --> 00:11:30,240
and then you just when you when you want

242
00:11:30,240 --> 00:11:31,120
to call it

243
00:11:31,120 --> 00:11:33,760
you just put the name of it this is not

244
00:11:33,760 --> 00:11:36,880
the only way to do it

245
00:11:37,120 --> 00:11:43,839
but let's let's do this example here

246
00:11:47,200 --> 00:11:50,560
let's just do it right here right

247
00:11:52,959 --> 00:11:57,839
oh we can lose this

248
00:12:03,279 --> 00:12:06,399
so here i'm going to put the name

249
00:12:06,399 --> 00:12:09,440
i'm going to put the parentheses i'm

250
00:12:09,440 --> 00:12:10,320
going to put

251
00:12:10,320 --> 00:12:13,279
here um

252
00:12:15,040 --> 00:12:17,519
and then

253
00:12:20,800 --> 00:12:25,839
calm date

254
00:12:29,279 --> 00:12:32,399
um yes

255
00:12:33,440 --> 00:12:38,000
no let's just run date

256
00:12:38,000 --> 00:12:41,279
right now um let me cancel this

257
00:12:41,279 --> 00:12:43,600
here

258
00:12:46,079 --> 00:12:48,319
okay

259
00:12:49,519 --> 00:12:54,720
right now um this is not being used

260
00:12:55,920 --> 00:12:58,959
but let's run it anyways

261
00:12:58,959 --> 00:13:07,839
let's see if it works okay it didn't

262
00:13:09,279 --> 00:13:13,200
let's let's see if this way it works

263
00:13:13,200 --> 00:13:15,680
no it didn't okay so let's use the

264
00:13:15,680 --> 00:13:17,680
example

265
00:13:17,680 --> 00:13:21,839
all right forgot

266
00:13:27,120 --> 00:13:35,839
i was doing an echo to the thing

267
00:13:38,560 --> 00:13:43,360
there you go so the only the there's

268
00:13:43,360 --> 00:13:44,800
the way that they're showing you here

269
00:13:44,800 --> 00:13:47,040
that you can do it is just is to put it

270
00:13:47,040 --> 00:13:48,000
inside of a string

271
00:13:48,000 --> 00:13:51,600
that you're going to call but as as you

272
00:13:51,600 --> 00:13:52,800
can see here

273
00:13:52,800 --> 00:13:55,279
i did call the function just by putting

274
00:13:55,279 --> 00:13:57,199
the name of it

275
00:13:57,199 --> 00:14:00,479
okay so have that in mind

276
00:14:00,560 --> 00:14:03,760
so conditionals this is a good way to

277
00:14:03,760 --> 00:14:04,079
make

278
00:14:04,079 --> 00:14:07,519
a program uh to be uh

279
00:14:07,519 --> 00:14:10,399
to to know when things are happening if

280
00:14:10,399 --> 00:14:11,920
you're doing a backup and you want to

281
00:14:11,920 --> 00:14:12,480
search

282
00:14:12,480 --> 00:14:16,959
if you want to see that there's a um

283
00:14:16,959 --> 00:14:19,600
a file that exists and if it's not then

284
00:14:19,600 --> 00:14:21,279
it should run the program again again

285
00:14:21,279 --> 00:14:23,040
because there's an error

286
00:14:23,040 --> 00:14:26,480
so this way

287
00:14:26,480 --> 00:14:29,279
is is is a way to you can do an if and

288
00:14:29,279 --> 00:14:30,000
and

289
00:14:30,000 --> 00:14:33,199
with an else if notice

290
00:14:33,199 --> 00:14:35,600
and i really like this about about uh

291
00:14:35,600 --> 00:14:36,240
about

292
00:14:36,240 --> 00:14:39,440
bash scripting that the end of it

293
00:14:39,440 --> 00:14:42,959
is just the the if or whatever

294
00:14:42,959 --> 00:14:45,199
whatever you're using at the end but add

295
00:14:45,199 --> 00:14:46,240
backwards

296
00:14:46,240 --> 00:14:50,000
so if you want to declare at if um

297
00:14:50,000 --> 00:14:52,399
then you need to you need to put it to

298
00:14:52,399 --> 00:14:53,199
put it backwards

299
00:14:53,199 --> 00:14:55,599
at the end

300
00:14:56,839 --> 00:14:59,839
so

301
00:15:00,079 --> 00:15:02,800
what can we do

302
00:15:03,519 --> 00:15:07,199
what can we do what can we check

303
00:15:08,399 --> 00:15:10,800
let's see what programs do we have um

304
00:15:10,800 --> 00:15:13,839
let's do

305
00:15:14,079 --> 00:15:15,600
okay uh we're gonna we're gonna see the

306
00:15:15,600 --> 00:15:17,680
conditionals in a bit once we once we

307
00:15:17,680 --> 00:15:17,920
see

308
00:15:17,920 --> 00:15:20,959
once we once we see how we can uh what

309
00:15:20,959 --> 00:15:21,360
this

310
00:15:21,360 --> 00:15:25,519
what what these uh commodities means

311
00:15:25,519 --> 00:15:29,120
what this conditionals means so you can

312
00:15:29,120 --> 00:15:33,040
you can compare on on these conditionals

313
00:15:33,040 --> 00:15:35,680
uh you can use equally equal for to to

314
00:15:35,680 --> 00:15:36,160
see

315
00:15:36,160 --> 00:15:40,000
to test if those two strings are equal

316
00:15:40,000 --> 00:15:43,120
these two strings can be um

317
00:15:43,120 --> 00:15:45,519
variables where you have store for

318
00:15:45,519 --> 00:15:47,759
example if you run the date at one point

319
00:15:47,759 --> 00:15:48,959
and you have for example

320
00:15:48,959 --> 00:15:52,000
older date saved in a variable

321
00:15:52,000 --> 00:15:55,279
and then you have a new date to see

322
00:15:55,279 --> 00:15:57,040
that you run every time you run the

323
00:15:57,040 --> 00:15:58,639
program and you see the both

324
00:15:58,639 --> 00:16:00,639
are the same it means that it shouldn't

325
00:16:00,639 --> 00:16:02,160
run the program again because you just

326
00:16:02,160 --> 00:16:02,560
did

327
00:16:02,560 --> 00:16:04,880
right because you have an all the the

328
00:16:04,880 --> 00:16:06,720
the same date and the new date

329
00:16:06,720 --> 00:16:10,399
both the same date if they are not equal

330
00:16:10,399 --> 00:16:13,680
you can do whatever else you want to do

331
00:16:13,680 --> 00:16:15,680
here there's another type of of

332
00:16:15,680 --> 00:16:17,680
conditional which is uh

333
00:16:17,680 --> 00:16:19,519
which is really fun because it's really

334
00:16:19,519 --> 00:16:21,199
easy to to see

335
00:16:21,199 --> 00:16:24,000
this this means less than this means

336
00:16:24,000 --> 00:16:25,040
less

337
00:16:25,040 --> 00:16:28,560
than or equal equal

338
00:16:28,560 --> 00:16:31,120
greater than and greater than equal or

339
00:16:31,120 --> 00:16:33,440
equal

340
00:16:33,920 --> 00:16:36,560
this is another this is this is other

341
00:16:36,560 --> 00:16:37,120
type of

342
00:16:37,120 --> 00:16:41,199
uh conditionals which is uh

343
00:16:41,199 --> 00:16:44,639
you can just uh look for a file

344
00:16:44,639 --> 00:16:48,800
for example and see if if it exists

345
00:16:48,800 --> 00:16:52,959
if it's if it's at the directory a file

346
00:16:52,959 --> 00:16:56,240
an executable if it uh oh i put two

347
00:16:56,240 --> 00:16:56,639
times

348
00:16:56,639 --> 00:17:00,000
if it exists and if they are the same

349
00:17:00,000 --> 00:17:01,360
file

350
00:17:01,360 --> 00:17:04,079
so i wanted to see this before before i

351
00:17:04,079 --> 00:17:05,839
want you to see this before

352
00:17:05,839 --> 00:17:08,400
i did the program because now we can we

353
00:17:08,400 --> 00:17:11,280
can use it in our

354
00:17:11,599 --> 00:17:16,839
in our program right so let's use this

355
00:17:16,839 --> 00:17:19,839
example

356
00:17:21,039 --> 00:17:32,799
so let's do exist and let's do

357
00:17:32,799 --> 00:17:36,080
am i here

358
00:17:38,320 --> 00:17:47,840
dot txt

359
00:18:08,080 --> 00:18:15,840
so i can use this

360
00:18:26,840 --> 00:18:29,840
here

361
00:18:32,160 --> 00:18:43,840
so let's test this

362
00:18:54,840 --> 00:18:57,840
this

363
00:18:59,039 --> 00:19:01,919
let's debug a bit

364
00:19:03,120 --> 00:19:06,080
we can just do this

365
00:19:09,440 --> 00:19:12,480
if it just sits there

366
00:19:15,039 --> 00:19:19,280
it's probably because it's not the path

367
00:19:20,080 --> 00:19:24,799
home by this

368
00:19:24,799 --> 00:19:27,520
next stop

369
00:19:29,200 --> 00:19:32,080
let's see if it runs

370
00:19:33,039 --> 00:19:39,840
huh this is interesting

371
00:19:46,080 --> 00:19:49,840
okay we're going to look at it in a bit

372
00:19:49,840 --> 00:19:52,720
you can do comments you can do comments

373
00:19:52,720 --> 00:19:53,840
uh

374
00:19:53,840 --> 00:19:56,559
here you can do comments one lines are

375
00:19:56,559 --> 00:19:58,879
here

376
00:19:59,280 --> 00:20:03,440
and multiple lines are with these single

377
00:20:04,840 --> 00:20:07,840
ones

378
00:20:18,840 --> 00:20:21,840
okay

379
00:20:38,880 --> 00:20:42,080
okay for some reason

380
00:20:42,240 --> 00:20:45,120
the multiple line

381
00:20:46,960 --> 00:20:49,840
okay

382
00:20:50,880 --> 00:20:52,559
okay so this is this is the fun part

383
00:20:52,559 --> 00:20:54,159
this is where you want to do

384
00:20:54,159 --> 00:20:57,360
um cool programs and

385
00:20:57,360 --> 00:21:01,200
that even takes that that they're being

386
00:21:01,200 --> 00:21:03,760
as if there were comments so let's

387
00:21:03,760 --> 00:21:05,520
create another

388
00:21:05,520 --> 00:21:09,120
um another another program

389
00:21:09,120 --> 00:21:12,400
input test let's call it input sh

390
00:21:12,400 --> 00:21:16,159
let's do uh let's put the

391
00:21:16,159 --> 00:21:30,240
the permissions tool to run it

392
00:21:30,240 --> 00:21:34,480
okay so as every time we declare

393
00:21:34,480 --> 00:21:38,559
that it's going to run the bash

394
00:21:39,840 --> 00:21:44,240
here so um

395
00:21:44,240 --> 00:21:47,440
let's do a program that

396
00:21:49,280 --> 00:21:52,000
enter h

397
00:21:54,480 --> 00:21:57,039
let's do a program to see if you can

398
00:21:57,039 --> 00:21:58,320
enter to

399
00:21:58,320 --> 00:22:02,480
a library right

400
00:22:02,480 --> 00:22:06,720
so read and let's put the name

401
00:22:06,799 --> 00:22:13,120
the age

402
00:22:13,120 --> 00:22:16,320
h of

403
00:22:16,320 --> 00:22:18,720
person

404
00:22:19,600 --> 00:22:23,840
okay so

405
00:22:24,840 --> 00:22:27,840
um

406
00:22:31,120 --> 00:22:33,918
let's see if

407
00:22:34,240 --> 00:22:39,360
age of person

408
00:22:39,360 --> 00:22:42,240
is um

409
00:22:52,400 --> 00:22:55,840
it's greater than five

410
00:22:55,840 --> 00:23:09,840
now it's greater than five

411
00:23:20,840 --> 00:23:23,840
so

412
00:23:34,840 --> 00:23:36,880
library

413
00:23:36,880 --> 00:23:39,360
and we should test if this is if this

414
00:23:39,360 --> 00:23:41,678
works

415
00:23:45,520 --> 00:23:48,640
let's put four

416
00:23:48,640 --> 00:23:52,480
and if we put 10

417
00:23:52,480 --> 00:23:56,320
there you go oh i did a really big typo

418
00:23:56,320 --> 00:23:59,840
library so

419
00:23:59,840 --> 00:24:02,640
this way you can do um let's say let's

420
00:24:02,640 --> 00:24:04,000
see if it works

421
00:24:04,000 --> 00:24:09,279
the less less

422
00:24:10,159 --> 00:24:13,440
or no greater or

423
00:24:13,440 --> 00:24:19,840
equal i think it was

424
00:24:20,320 --> 00:24:22,559
10.

425
00:24:24,480 --> 00:24:28,640
i think it didn't okay let me check that

426
00:24:31,360 --> 00:24:35,120
hmm okay i did that right

427
00:24:35,120 --> 00:24:38,159
okay so i i did i did this a couple of

428
00:24:38,159 --> 00:24:39,840
times and i think it is something about

429
00:24:39,840 --> 00:24:41,919
the syntax we we're gonna look at

430
00:24:41,919 --> 00:24:44,480
look at data in the end so don't worry

431
00:24:44,480 --> 00:24:46,159
about it

432
00:24:46,159 --> 00:24:48,559
so we just did a program that you can

433
00:24:48,559 --> 00:24:50,720
check

434
00:24:50,720 --> 00:24:54,080
that the the age of a person that you

435
00:24:54,080 --> 00:24:55,679
put it that you enter

436
00:24:55,679 --> 00:24:58,799
you can also do as as we saw

437
00:24:58,799 --> 00:25:00,559
you can instead of doing this you can

438
00:25:00,559 --> 00:25:02,960
just put um

439
00:25:02,960 --> 00:25:05,200
i'm going to put it in a comment here

440
00:25:05,200 --> 00:25:06,159
for example

441
00:25:06,159 --> 00:25:10,480
if there's a table with the

442
00:25:10,480 --> 00:25:13,360
with the with the all the all the of all

443
00:25:13,360 --> 00:25:15,440
of the

444
00:25:15,440 --> 00:25:18,960
the ages per person you can just do the

445
00:25:18,960 --> 00:25:22,000
uh cut the

446
00:25:22,000 --> 00:25:25,840
let's call the h database a file

447
00:25:25,840 --> 00:25:29,120
then you pipe that into grab let's look

448
00:25:29,120 --> 00:25:29,840
for the name

449
00:25:29,840 --> 00:25:34,080
let's call the key george

450
00:25:35,200 --> 00:25:39,919
and then you know the the

451
00:25:39,919 --> 00:25:43,200
the h is on the third column for example

452
00:25:43,200 --> 00:25:44,799
as we saw in the last time there's

453
00:25:44,799 --> 00:25:46,240
there's like a

454
00:25:46,240 --> 00:25:49,360
a a little command

455
00:25:49,440 --> 00:25:51,200
which is something around like this it's

456
00:25:51,200 --> 00:25:52,799
not it's not like this

457
00:25:52,799 --> 00:25:56,080
but it's it's something like this so

458
00:25:56,080 --> 00:26:01,120
so you what you can do is

459
00:26:01,120 --> 00:26:03,200
once you have that program that is one

460
00:26:03,200 --> 00:26:04,320
if if you if

461
00:26:04,320 --> 00:26:07,520
you put press enter you're gonna get the

462
00:26:07,520 --> 00:26:08,000
h

463
00:26:08,000 --> 00:26:10,559
just the h you can just do as we did

464
00:26:10,559 --> 00:26:11,279
before

465
00:26:11,279 --> 00:26:14,320
um h or

466
00:26:14,320 --> 00:26:19,600
h of person

467
00:26:21,120 --> 00:26:24,640
equal here and here

468
00:26:24,640 --> 00:26:27,360
so this is going to run the command is

469
00:26:27,360 --> 00:26:28,080
going to give

470
00:26:28,080 --> 00:26:32,080
the the the result as a as a

471
00:26:32,080 --> 00:26:35,679
as an input for this um

472
00:26:35,679 --> 00:26:39,440
this variable so the only way is not

473
00:26:39,440 --> 00:26:40,960
just reading by the command line but you

474
00:26:40,960 --> 00:26:43,600
can just find it in another file

475
00:26:43,600 --> 00:26:47,279
for example if you are on a server or

476
00:26:47,279 --> 00:26:50,080
but you can just scrap it for from the

477
00:26:50,080 --> 00:26:51,039
internet

478
00:26:51,039 --> 00:26:53,120
so yeah that's those just a couple of

479
00:26:53,120 --> 00:26:56,000
ways to do it

480
00:26:57,520 --> 00:27:01,039
so arguments um this is another way that

481
00:27:01,039 --> 00:27:02,880
you can do is that

482
00:27:02,880 --> 00:27:05,120
this is a way to make a program more to

483
00:27:05,120 --> 00:27:06,640
look like a

484
00:27:06,640 --> 00:27:11,039
um yeah to look like a command

485
00:27:11,039 --> 00:27:14,080
so what you want to do

486
00:27:14,240 --> 00:27:17,520
is let's call this

487
00:27:19,279 --> 00:27:24,640
h let's delete this

488
00:27:26,159 --> 00:27:31,360
right so let's call this the same age

489
00:27:31,360 --> 00:27:35,840
of person

490
00:27:38,559 --> 00:27:40,960
equal

491
00:27:43,840 --> 00:27:46,480
one so once you run the command with the

492
00:27:46,480 --> 00:27:47,039
next

493
00:27:47,039 --> 00:27:49,120
with the next argument on it which is

494
00:27:49,120 --> 00:27:52,159
going to be this one

495
00:27:52,159 --> 00:27:55,279
that's that's the the the

496
00:27:55,279 --> 00:27:56,960
the input is going to take us an

497
00:27:56,960 --> 00:27:59,039
argument so if we do

498
00:27:59,039 --> 00:28:03,520
um let's do a state say it right

499
00:28:03,520 --> 00:28:08,240
bash input and let's do uh five

500
00:28:10,000 --> 00:28:17,840
oh wait i did this wrong

501
00:28:26,320 --> 00:28:31,840
i think this is wrong

502
00:28:38,640 --> 00:28:41,679
there you go so as you can see i can

503
00:28:41,679 --> 00:28:45,520
i can pass many arguments and i can make

504
00:28:45,520 --> 00:28:46,000
it

505
00:28:46,000 --> 00:28:49,600
for example to look for uh instead of

506
00:28:49,600 --> 00:28:53,440
numbers to look for uh letters

507
00:28:53,440 --> 00:28:55,360
and then you you you're gonna be able to

508
00:28:55,360 --> 00:28:58,240
make a command like

509
00:28:58,240 --> 00:29:02,240
like ls that that it waits for

510
00:29:02,240 --> 00:29:05,760
for a nail or some other later there are

511
00:29:05,760 --> 00:29:07,200
good practices and there are good

512
00:29:07,200 --> 00:29:08,880
examples on the internet if you want to

513
00:29:08,880 --> 00:29:09,840
look for it

514
00:29:09,840 --> 00:29:12,159
and it's and it's uh and it's a good way

515
00:29:12,159 --> 00:29:14,880
to make a program

516
00:29:15,120 --> 00:29:20,158
so let's do crontab this is

517
00:29:21,200 --> 00:29:24,080
a current tab it's a process which is in

518
00:29:24,080 --> 00:29:26,320
linux it's called daemon spelled this

519
00:29:26,320 --> 00:29:27,919
way

520
00:29:27,919 --> 00:29:30,720
that run continuously and it's only and

521
00:29:30,720 --> 00:29:31,919
only going to run

522
00:29:31,919 --> 00:29:35,120
the program when it when it at a given

523
00:29:35,120 --> 00:29:35,840
time that you

524
00:29:35,840 --> 00:29:39,200
specify it here we have a couple of

525
00:29:39,200 --> 00:29:40,559
contact commands

526
00:29:40,559 --> 00:29:42,720
this raspberry pi has a program that i

527
00:29:42,720 --> 00:29:44,240
that i put in

528
00:29:44,240 --> 00:29:48,559
um that is that it runs on the

529
00:29:48,559 --> 00:29:52,720
each time each time it boots

530
00:29:52,840 --> 00:29:55,120
so here

531
00:29:55,120 --> 00:29:57,360
we're going to create a new one so be

532
00:29:57,360 --> 00:29:58,960
aware of that

533
00:29:58,960 --> 00:30:02,240
if you want to see the here we have the

534
00:30:02,240 --> 00:30:03,600
the commands we're going to see each one

535
00:30:03,600 --> 00:30:05,919
of them chrome tab crown tab e

536
00:30:05,919 --> 00:30:09,679
is for a deed and creating a a contact

537
00:30:09,679 --> 00:30:12,960
crontab e actually

538
00:30:12,960 --> 00:30:16,559
opens you up the file

539
00:30:16,559 --> 00:30:20,320
that has all the crontabs available

540
00:30:20,320 --> 00:30:22,320
when you boot up your raspberry pi when

541
00:30:22,320 --> 00:30:24,240
you start using your raspberry pi

542
00:30:24,240 --> 00:30:27,440
this should be this this lines shouldn't

543
00:30:27,440 --> 00:30:27,679
be

544
00:30:27,679 --> 00:30:30,960
in because it should be blank

545
00:30:30,960 --> 00:30:32,880
i have this one and i'm going to i'm

546
00:30:32,880 --> 00:30:35,360
going to explain it in a bit

547
00:30:35,360 --> 00:30:37,440
but for the time being let's do let's do

548
00:30:37,440 --> 00:30:40,159
the other comments

549
00:30:40,799 --> 00:30:44,320
so crontab slash hell

550
00:30:44,320 --> 00:30:47,039
which is just like we if we were doing a

551
00:30:47,039 --> 00:30:47,919
cat

552
00:30:47,919 --> 00:30:50,960
just reading the file uh if you want to

553
00:30:50,960 --> 00:30:52,720
remove it i'm not gonna do that

554
00:30:52,720 --> 00:30:56,720
and if you wanna see the the last time

555
00:31:00,159 --> 00:31:02,799
oh yeah this this these comments some of

556
00:31:02,799 --> 00:31:04,480
them are are version

557
00:31:04,480 --> 00:31:06,799
version sensitive for example if you are

558
00:31:06,799 --> 00:31:07,760
in on

559
00:31:07,760 --> 00:31:09,600
a this this command probably works on

560
00:31:09,600 --> 00:31:13,279
ubuntu but it doesn't work here

561
00:31:13,840 --> 00:31:16,799
so chrometap it this is the content

562
00:31:16,799 --> 00:31:18,240
parameter this is how you

563
00:31:18,240 --> 00:31:21,279
specify um when a current

564
00:31:21,279 --> 00:31:25,039
contact task is going to run

565
00:31:25,039 --> 00:31:28,320
so this first this first character

566
00:31:28,320 --> 00:31:32,240
means the minute this is the hour

567
00:31:32,240 --> 00:31:36,000
this is the day this is the month

568
00:31:36,000 --> 00:31:37,840
and this is the day of the week or

569
00:31:37,840 --> 00:31:39,200
weekday

570
00:31:39,200 --> 00:31:43,039
and the comment to be executed

571
00:31:43,039 --> 00:31:46,559
you can use um

572
00:31:46,559 --> 00:31:48,720
you can use you you're gonna be using

573
00:31:48,720 --> 00:31:49,919
numbers

574
00:31:49,919 --> 00:31:53,200
um and you're gonna be using a specials

575
00:31:53,200 --> 00:31:56,880
um oh i just repeated it

576
00:31:56,880 --> 00:31:58,720
this you're gonna be using a special

577
00:31:58,720 --> 00:32:01,279
characters which which are these ones

578
00:32:01,279 --> 00:32:03,039
as you can see there's one called at

579
00:32:03,039 --> 00:32:05,519
reboot which means that boot

580
00:32:05,519 --> 00:32:09,039
which i'm using right here

581
00:32:10,880 --> 00:32:14,159
here at boot so each time the

582
00:32:14,159 --> 00:32:17,279
raspberry pi boots this is going to

583
00:32:17,279 --> 00:32:19,360
this this program is going to be

584
00:32:19,360 --> 00:32:21,600
executed

585
00:32:21,600 --> 00:32:23,919
these other special characters means

586
00:32:23,919 --> 00:32:25,440
something else

587
00:32:25,440 --> 00:32:28,320
and we're gonna see here if you want a

588
00:32:28,320 --> 00:32:30,000
program to be run

589
00:32:30,000 --> 00:32:33,360
um for example

590
00:32:33,360 --> 00:32:36,640
at every time every minute of every hour

591
00:32:36,640 --> 00:32:39,039
of every day of every month of every day

592
00:32:39,039 --> 00:32:41,279
of the week

593
00:32:41,279 --> 00:32:46,480
we just need to do this just put five

594
00:32:46,799 --> 00:32:50,639
and then the comment to be executed

595
00:32:52,399 --> 00:32:56,159
here and as we cannot see this running

596
00:32:56,159 --> 00:32:58,720
because it's going to be run on on not

597
00:32:58,720 --> 00:32:59,760
this terminal

598
00:32:59,760 --> 00:33:02,960
once it we we save it it's going to be

599
00:33:02,960 --> 00:33:04,559
run on a terminal that doesn't have

600
00:33:04,559 --> 00:33:08,000
a a an instance like this window

601
00:33:08,000 --> 00:33:10,159
is going to be running each time each

602
00:33:10,159 --> 00:33:11,360
minute

603
00:33:11,360 --> 00:33:15,760
each um of each hour of each day of each

604
00:33:15,760 --> 00:33:16,159
month

605
00:33:16,159 --> 00:33:18,720
of each day of the week if you want to

606
00:33:18,720 --> 00:33:20,080
change that for example

607
00:33:20,080 --> 00:33:23,279
i wanted to to be used uh to be run

608
00:33:23,279 --> 00:33:26,559
every 15 minutes so we're gonna use

609
00:33:26,559 --> 00:33:30,000
this slash

610
00:33:33,200 --> 00:33:36,720
15 minutes right

611
00:33:37,120 --> 00:33:40,799
of every one every uh one every two

612
00:33:40,799 --> 00:33:42,080
hours

613
00:33:42,080 --> 00:33:45,279
i mean every 15 minutes or

614
00:33:45,279 --> 00:33:48,880
uh of every two hours

615
00:33:48,880 --> 00:33:51,600
this is this is a way to every two hours

616
00:33:51,600 --> 00:33:53,039
is going to be run

617
00:33:53,039 --> 00:33:54,240
this means it's going to be in the

618
00:33:54,240 --> 00:33:58,559
minute zero by the way if i put a number

619
00:33:59,039 --> 00:34:00,640
this just means that it's going to run

620
00:34:00,640 --> 00:34:02,559
every on every two hours

621
00:34:02,559 --> 00:34:05,279
and the minute is 15. so have that in

622
00:34:05,279 --> 00:34:07,600
mind

623
00:34:07,600 --> 00:34:10,879
if i want a range i can just use

624
00:34:10,879 --> 00:34:14,560
15 30

625
00:34:14,560 --> 00:34:16,560
which means it's going to be run on each

626
00:34:16,560 --> 00:34:17,918
minute

627
00:34:17,918 --> 00:34:21,280
from 15 to the 30

628
00:34:21,280 --> 00:34:25,679
to the 30 minutes of every two hour

629
00:34:26,000 --> 00:34:28,719
so it's going to be for example let's

630
00:34:28,719 --> 00:34:29,280
say

631
00:34:29,280 --> 00:34:32,480
zero or let's say 12 a.m it's going to

632
00:34:32,480 --> 00:34:33,199
be run on

633
00:34:33,199 --> 00:34:37,040
the minute 15 16 17

634
00:34:37,040 --> 00:34:40,159
until 30 and then it's going to be

635
00:34:40,159 --> 00:34:42,239
one hour which is going to be 1 am and

636
00:34:42,239 --> 00:34:43,440
it's not gonna run

637
00:34:43,440 --> 00:34:45,440
then the other hour which is going to

638
00:34:45,440 --> 00:34:46,480
run

639
00:34:46,480 --> 00:34:51,679
again on 15 7 16 and so on and so forth

640
00:34:51,679 --> 00:34:54,800
um you can also use if if you want

641
00:34:54,800 --> 00:34:56,560
specific times you can also use

642
00:34:56,560 --> 00:34:59,760
uh what was the common it was a coma

643
00:34:59,760 --> 00:35:00,240
right

644
00:35:00,240 --> 00:35:04,240
yeah it was a coma so you just do a coma

645
00:35:04,240 --> 00:35:08,240
just put 20 10 20

646
00:35:08,240 --> 00:35:11,599
30. so this

647
00:35:11,599 --> 00:35:14,079
program is going to run this program

648
00:35:14,079 --> 00:35:16,160
right this command

649
00:35:16,160 --> 00:35:19,280
again if if you want to do a program

650
00:35:19,280 --> 00:35:20,960
you just need to do what we are writing

651
00:35:20,960 --> 00:35:23,680
out how to do which is put python 3

652
00:35:23,680 --> 00:35:27,839
or bash or

653
00:35:27,839 --> 00:35:31,119
and then you put the the

654
00:35:31,119 --> 00:35:34,960
the path which is going to be home pi

655
00:35:34,960 --> 00:35:38,720
desktop and then you can put test.pi

656
00:35:38,720 --> 00:35:45,839
for example and and andy and this or sh

657
00:35:46,240 --> 00:35:48,079
okay so you need to be you need to be

658
00:35:48,079 --> 00:35:49,680
careful with the name because you're not

659
00:35:49,680 --> 00:35:50,800
going to be able to do

660
00:35:50,800 --> 00:35:54,320
tap to autocomplete and because this is

661
00:35:54,320 --> 00:35:54,960
a file

662
00:35:54,960 --> 00:35:58,000
this is not a a this is not in the child

663
00:35:58,000 --> 00:36:01,359
this is a file so it does not out

664
00:36:01,359 --> 00:36:04,800
auto complete so yeah so if

665
00:36:04,800 --> 00:36:07,839
this program is going to run on on the

666
00:36:07,839 --> 00:36:08,720
minute 15

667
00:36:08,720 --> 00:36:12,160
20 30 of every two hours

668
00:36:12,160 --> 00:36:15,920
of every day uh of every day of the year

669
00:36:15,920 --> 00:36:19,599
of every day of every day of every month

670
00:36:19,599 --> 00:36:23,119
of every day of the week

671
00:36:23,119 --> 00:36:24,880
so have that in mind you can also do

672
00:36:24,880 --> 00:36:28,000
this um

673
00:36:28,480 --> 00:36:31,520
with letters which is more a little bit

674
00:36:31,520 --> 00:36:32,240
more simpler

675
00:36:32,240 --> 00:36:33,760
you can do this if you want something to

676
00:36:33,760 --> 00:36:35,680
happen a um

677
00:36:35,680 --> 00:36:40,560
at some point weekly

678
00:36:40,560 --> 00:36:43,920
then you just do that you may be asking

679
00:36:43,920 --> 00:36:44,720
at what

680
00:36:44,720 --> 00:36:48,400
time is going to be running at for that

681
00:36:48,400 --> 00:36:52,160
yeah let's go back for that

682
00:36:52,160 --> 00:36:54,960
i have a a good tool that i put down

683
00:36:54,960 --> 00:36:57,119
here which is crumb type guru

684
00:36:57,119 --> 00:37:00,480
you can go with me here contact

685
00:37:00,480 --> 00:37:02,400
this is a really great tool if you want

686
00:37:02,400 --> 00:37:04,240
to like test

687
00:37:04,240 --> 00:37:07,440
what's the best time for you

688
00:37:07,440 --> 00:37:11,599
so here let's do um

689
00:37:11,599 --> 00:37:14,640
every five minutes

690
00:37:16,079 --> 00:37:19,040
every fifth minute of the past hours

691
00:37:19,040 --> 00:37:20,560
five

692
00:37:20,560 --> 00:37:22,880
and if you want to do let's say what we

693
00:37:22,880 --> 00:37:25,760
were doing here

694
00:37:26,079 --> 00:37:30,240
doing ah okay so you can do also

695
00:37:30,240 --> 00:37:32,000
i don't know if you can put it here yeah

696
00:37:32,000 --> 00:37:33,839
we clean

697
00:37:33,839 --> 00:37:36,960
so yes it's going to be run at zero zero

698
00:37:36,960 --> 00:37:38,800
zero on sunday

699
00:37:38,800 --> 00:37:40,880
this is the default uh setting that it

700
00:37:40,880 --> 00:37:42,240
has for weekly

701
00:37:42,240 --> 00:37:45,280
if we look for monthly

702
00:37:45,280 --> 00:37:48,320
yeah zero zero zero of every

703
00:37:48,320 --> 00:37:51,440
day first of the month so this is a

704
00:37:51,440 --> 00:37:52,800
really good tool and i suggest you to

705
00:37:52,800 --> 00:37:54,880
use it i always use it before putting it

706
00:37:54,880 --> 00:37:58,800
on my on my on my contact slash e

707
00:37:58,800 --> 00:38:01,119
so yeah i have that in mind so let's do

708
00:38:01,119 --> 00:38:04,720
a test

709
00:38:04,720 --> 00:38:08,240
and let's do a test where we run

710
00:38:08,240 --> 00:38:12,240
um we run a program to

711
00:38:12,240 --> 00:38:15,680
to make a file each time that

712
00:38:15,680 --> 00:38:19,599
every minute so we don't have to

713
00:38:19,599 --> 00:38:22,800
stay here every day so let's let's put

714
00:38:22,800 --> 00:38:23,520
here

715
00:38:23,520 --> 00:38:26,880
right okay there you go

716
00:38:26,880 --> 00:38:30,000
so let's put five co five uh asterix

717
00:38:30,000 --> 00:38:30,720
which means

718
00:38:30,720 --> 00:38:33,680
every day i mean every minute every hour

719
00:38:33,680 --> 00:38:34,079
of

720
00:38:34,079 --> 00:38:37,119
every day of every day of the month of

721
00:38:37,119 --> 00:38:40,720
every week every day of the week

722
00:38:41,359 --> 00:38:44,560
okay here

723
00:38:44,560 --> 00:38:47,200
if you're confused you can also use just

724
00:38:47,200 --> 00:38:48,240
a day of the month

725
00:38:48,240 --> 00:38:50,560
right month every month of every day of

726
00:38:50,560 --> 00:38:51,359
the week

727
00:38:51,359 --> 00:38:54,560
every day of the month

728
00:38:59,760 --> 00:39:03,520
so let's do create a in home

729
00:39:03,520 --> 00:39:06,640
pi desktop remember you cannot

730
00:39:06,640 --> 00:39:10,240
have um typos here if if that happens

731
00:39:10,240 --> 00:39:11,440
then

732
00:39:11,440 --> 00:39:13,599
the command is gonna run anyways but

733
00:39:13,599 --> 00:39:15,119
it's going to give you an error and it's

734
00:39:15,119 --> 00:39:16,480
not going to show it

735
00:39:16,480 --> 00:39:18,480
it's going to only going to show in a in

736
00:39:18,480 --> 00:39:19,520
a log

737
00:39:19,520 --> 00:39:22,400
that had the crown has or if you want as

738
00:39:22,400 --> 00:39:22,720
we

739
00:39:22,720 --> 00:39:24,880
show you how to do on the second class

740
00:39:24,880 --> 00:39:25,760
which was

741
00:39:25,760 --> 00:39:29,520
how to output the error of a command

742
00:39:29,520 --> 00:39:32,800
into a file you can also do that here

743
00:39:32,800 --> 00:39:35,760
so that home desktop pipe desktop yeah

744
00:39:35,760 --> 00:39:36,800
uh

745
00:39:36,800 --> 00:39:42,480
crown tab just checks it

746
00:39:42,480 --> 00:39:45,760
yes so let's

747
00:39:45,760 --> 00:39:49,119
wait i think i don't

748
00:39:49,119 --> 00:39:52,560
it's probably um

749
00:39:54,480 --> 00:39:57,839
let's see if if it works

750
00:39:58,160 --> 00:40:01,359
let me show you what meanwhile this uh

751
00:40:01,359 --> 00:40:05,119
this command which means watch

752
00:40:09,280 --> 00:40:13,520
which me which is for um

753
00:40:13,760 --> 00:40:18,319
to to see when something is happening

754
00:40:18,720 --> 00:40:22,240
let me use this oh here

755
00:40:22,240 --> 00:40:25,760
it works so it just made it i'm going to

756
00:40:25,760 --> 00:40:27,440
delete it

757
00:40:27,440 --> 00:40:29,839
move to trash yes and then we're going

758
00:40:29,839 --> 00:40:30,560
to wait

759
00:40:30,560 --> 00:40:38,319
until the other one happened ah

760
00:40:38,319 --> 00:40:43,599
and so these comments is for

761
00:40:44,560 --> 00:40:48,000
this command is for watching every

762
00:40:48,000 --> 00:40:52,720
one second

763
00:40:52,720 --> 00:40:55,839
here maybe here

764
00:40:55,839 --> 00:41:00,079
so this is every second this is oh

765
00:41:00,079 --> 00:41:07,280
wait i'm sorry

766
00:41:07,280 --> 00:41:10,079
okay so what what i just did was a

767
00:41:10,079 --> 00:41:11,040
command to

768
00:41:11,040 --> 00:41:14,319
run every second this command so if i

769
00:41:14,319 --> 00:41:17,359
want to see if something happened here

770
00:41:17,359 --> 00:41:19,520
i can just do that command and i'm going

771
00:41:19,520 --> 00:41:20,640
to

772
00:41:20,640 --> 00:41:24,720
see when when this changes as you saw

773
00:41:24,720 --> 00:41:26,720
the crown tab was the contact 5 was

774
00:41:26,720 --> 00:41:28,240
generated and then

775
00:41:28,240 --> 00:41:31,760
it appears it appeared right here

776
00:41:31,760 --> 00:41:34,960
so i can just go to contract e if i if i

777
00:41:34,960 --> 00:41:36,319
want to save a crontab

778
00:41:36,319 --> 00:41:38,160
you don't have to delete it you just put

779
00:41:38,160 --> 00:41:42,078
you just make it make it a comment

780
00:41:42,319 --> 00:41:45,119
and then we are not going to have that

781
00:41:45,119 --> 00:41:46,880
program run

782
00:41:46,880 --> 00:41:50,319
in a bit or whenever you initiate it

783
00:41:50,319 --> 00:41:52,240
again

784
00:41:52,240 --> 00:41:55,280
this is what this is this

785
00:41:55,280 --> 00:41:56,880
crontab is something you can use for

786
00:41:56,880 --> 00:41:58,800
again if you're doing a

787
00:41:58,800 --> 00:42:00,960
computer program to be run every time

788
00:42:00,960 --> 00:42:02,960
the the raspberry pi boots up you put it

789
00:42:02,960 --> 00:42:03,760
at boot

790
00:42:03,760 --> 00:42:05,839
if you have uh backups that need to be

791
00:42:05,839 --> 00:42:07,119
done

792
00:42:07,119 --> 00:42:09,440
for example most people are i don't know

793
00:42:09,440 --> 00:42:11,040
if most people but i've seen that that

794
00:42:11,040 --> 00:42:13,760
people with uh raspberry pi projects do

795
00:42:13,760 --> 00:42:16,400
it's they put a current contact to

796
00:42:16,400 --> 00:42:18,880
sip a couple of files and folders and

797
00:42:18,880 --> 00:42:20,480
direct our directories

798
00:42:20,480 --> 00:42:24,560
and then move them up to the cloud

799
00:42:24,560 --> 00:42:26,000
that is something that that is something

800
00:42:26,000 --> 00:42:28,160
that you can do i've done it with mega

801
00:42:28,160 --> 00:42:30,800
they have the their own api or i i

802
00:42:30,800 --> 00:42:31,280
remember

803
00:42:31,280 --> 00:42:33,680
if i used the third party which is

804
00:42:33,680 --> 00:42:35,520
really cool

805
00:42:35,520 --> 00:42:38,160
um so yeah

806
00:42:41,359 --> 00:42:44,319
okay so python script we're gonna see a

807
00:42:44,319 --> 00:42:45,359
little bonus

808
00:42:45,359 --> 00:42:49,119
um for this python script um

809
00:42:49,119 --> 00:42:50,160
this and the other and the other

810
00:42:50,160 --> 00:42:52,160
subjects are going to be bonus

811
00:42:52,160 --> 00:42:54,319
uh because we're going to see some more

812
00:42:54,319 --> 00:42:56,160
depth in the next class

813
00:42:56,160 --> 00:43:00,319
but python script is a as

814
00:43:00,319 --> 00:43:02,960
uh we're going to see how to make a

815
00:43:02,960 --> 00:43:05,440
simple python script on on raspberry pi

816
00:43:05,440 --> 00:43:08,560
to control the gpio so here we have

817
00:43:08,560 --> 00:43:09,280
something that is

818
00:43:09,280 --> 00:43:11,280
really important which is the the the

819
00:43:11,280 --> 00:43:12,800
numbering declaration

820
00:43:12,800 --> 00:43:15,920
which the gpio if you don't know

821
00:43:15,920 --> 00:43:19,119
or you have a couple of pins which are

822
00:43:19,119 --> 00:43:21,599
uh color golden on the raspberry pi

823
00:43:21,599 --> 00:43:23,280
which is where you connect things that

824
00:43:23,280 --> 00:43:24,880
you want the electronics that you want

825
00:43:24,880 --> 00:43:25,200
to

826
00:43:25,200 --> 00:43:28,240
to to interface with so there are

827
00:43:28,240 --> 00:43:31,280
two types or two ways to

828
00:43:31,280 --> 00:43:33,760
call each one of these these pins which

829
00:43:33,760 --> 00:43:35,760
are gpio.board

830
00:43:35,760 --> 00:43:39,040
and gpio.vcm

831
00:43:39,040 --> 00:43:42,240
gpio dot board is is uh

832
00:43:42,240 --> 00:43:46,000
the board the raspberry pi scheme is is

833
00:43:46,000 --> 00:43:48,960
uh a numbered scheme that they they they

834
00:43:48,960 --> 00:43:49,760
went with

835
00:43:49,760 --> 00:43:52,960
and and they created but the bmc is the

836
00:43:52,960 --> 00:43:54,480
broad broadcom

837
00:43:54,480 --> 00:43:57,599
chip specific pin numbers which is when

838
00:43:57,599 --> 00:43:59,200
when you're in electronics each

839
00:43:59,200 --> 00:44:01,839
microcontroller or single board computer

840
00:44:01,839 --> 00:44:05,599
uh has uh a processor or a

841
00:44:05,599 --> 00:44:06,800
microcontroller

842
00:44:06,800 --> 00:44:09,280
the microcontroller per se has pin

843
00:44:09,280 --> 00:44:11,040
numbers

844
00:44:11,040 --> 00:44:13,680
so the broadcom processor that they're

845
00:44:13,680 --> 00:44:15,760
using where they are connecting the pins

846
00:44:15,760 --> 00:44:16,560
to

847
00:44:16,560 --> 00:44:19,359
those pins has their own numbers so

848
00:44:19,359 --> 00:44:21,040
whichever you want to use

849
00:44:21,040 --> 00:44:24,000
your feel free to use to use it this is

850
00:44:24,000 --> 00:44:24,480
uh

851
00:44:24,480 --> 00:44:27,599
this this is what the

852
00:44:27,599 --> 00:44:31,599
the the pin numbers both of them look

853
00:44:31,599 --> 00:44:35,119
um here is the board

854
00:44:35,119 --> 00:44:37,359
the in the middle so you can see one two

855
00:44:37,359 --> 00:44:38,640
three four five it's just

856
00:44:38,640 --> 00:44:41,760
number as as as it goes down

857
00:44:41,760 --> 00:44:45,200
but for the bmc you're using these ones

858
00:44:45,200 --> 00:44:48,240
gpio 14 for example

859
00:44:48,240 --> 00:44:53,280
or um 17 instead of 11.

860
00:44:53,280 --> 00:44:56,480
so yeah if you want to do a program

861
00:44:56,480 --> 00:44:59,680
where you can um

862
00:45:01,119 --> 00:45:04,640
you can do it right now uh we're gonna

863
00:45:04,640 --> 00:45:05,839
there's something missing here we're

864
00:45:05,839 --> 00:45:07,839
gonna see it in in the next slide

865
00:45:07,839 --> 00:45:10,079
but what we what you're gonna do is

866
00:45:10,079 --> 00:45:10,880
import

867
00:45:10,880 --> 00:45:13,359
the gpio library which is gonna be in

868
00:45:13,359 --> 00:45:14,560
the other slide

869
00:45:14,560 --> 00:45:16,800
uh you're gonna set the mode for example

870
00:45:16,800 --> 00:45:18,319
to bcm

871
00:45:18,319 --> 00:45:21,760
and then you're gonna set up the pin 18

872
00:45:21,760 --> 00:45:23,200
as an output

873
00:45:23,200 --> 00:45:25,599
there's uh we're gonna look that in into

874
00:45:25,599 --> 00:45:27,359
more detail in the next class

875
00:45:27,359 --> 00:45:30,800
and you then you put it

876
00:45:30,800 --> 00:45:33,040
high which means that you there's going

877
00:45:33,040 --> 00:45:34,079
to be a positive

878
00:45:34,079 --> 00:45:37,280
uh if if you measure positive

879
00:45:37,280 --> 00:45:40,720
output on this gpio so the eight

880
00:45:40,720 --> 00:45:43,760
the 18 pin of the bmc

881
00:45:43,760 --> 00:45:47,599
is going to be this one if we wanted to

882
00:45:47,599 --> 00:45:48,160
do it

883
00:45:48,160 --> 00:45:51,599
on the board board number which it would

884
00:45:51,599 --> 00:45:52,160
probably

885
00:45:52,160 --> 00:45:56,160
be 12. so have that in mind

886
00:45:56,160 --> 00:46:01,040
so this is the the descript bonus

887
00:46:01,040 --> 00:46:02,880
which is going to be a blinky using an

888
00:46:02,880 --> 00:46:04,640
led from your from your

889
00:46:04,640 --> 00:46:08,480
from your um kits

890
00:46:08,880 --> 00:46:11,599
first of all we're gonna see that here

891
00:46:11,599 --> 00:46:12,319
the

892
00:46:12,319 --> 00:46:16,000
the leds if in case you don't know have

893
00:46:16,000 --> 00:46:18,960
a polarity which means that they they

894
00:46:18,960 --> 00:46:19,520
they can

895
00:46:19,520 --> 00:46:22,800
they only can be used one way you cannot

896
00:46:22,800 --> 00:46:25,440
connect it in the other way

897
00:46:25,440 --> 00:46:27,680
because it's either going not going to

898
00:46:27,680 --> 00:46:28,640
work

899
00:46:28,640 --> 00:46:31,760
or probably going to burn not

900
00:46:31,760 --> 00:46:33,839
not right not with this kind of current

901
00:46:33,839 --> 00:46:35,119
by the way but i mean if

902
00:46:35,119 --> 00:46:36,880
if you're doing a special application

903
00:46:36,880 --> 00:46:38,560
it's probably going just to shut down

904
00:46:38,560 --> 00:46:39,040
and never

905
00:46:39,040 --> 00:46:40,720
never turn again that's what i mean by

906
00:46:40,720 --> 00:46:42,640
burn by the way

907
00:46:42,640 --> 00:46:45,680
so this is a way to connect using your

908
00:46:45,680 --> 00:46:46,560
breadboard

909
00:46:46,560 --> 00:46:47,920
i'm going to explain because the

910
00:46:47,920 --> 00:46:50,160
breadboard seems seems a little scary at

911
00:46:50,160 --> 00:46:51,520
first because you don't know

912
00:46:51,520 --> 00:46:55,760
what each of those uh holes mean

913
00:46:55,760 --> 00:46:59,760
so here each line

914
00:46:59,760 --> 00:47:03,520
each line um here

915
00:47:03,520 --> 00:47:06,480
are connected so this is like basically

916
00:47:06,480 --> 00:47:07,280
a wire

917
00:47:07,280 --> 00:47:10,000
all of these lines as you can see here

918
00:47:10,000 --> 00:47:10,640
and here

919
00:47:10,640 --> 00:47:14,480
is like a cable so this is connected

920
00:47:14,480 --> 00:47:18,000
and on the sides depending on the type

921
00:47:18,000 --> 00:47:20,000
of breadboard that you have

922
00:47:20,000 --> 00:47:23,440
you probably have in the middle cutoff

923
00:47:23,440 --> 00:47:25,440
so for example here if you connect

924
00:47:25,440 --> 00:47:27,200
something here on this pin

925
00:47:27,200 --> 00:47:29,839
and something oh let's just use this

926
00:47:29,839 --> 00:47:31,280
here on this pin

927
00:47:31,280 --> 00:47:33,040
and here on this pin is is going to look

928
00:47:33,040 --> 00:47:35,200
like it's going to use like a cable

929
00:47:35,200 --> 00:47:38,559
these are typically used for voltage

930
00:47:38,559 --> 00:47:41,040
so you can put here and the red one the

931
00:47:41,040 --> 00:47:42,559
uh positive voltage either

932
00:47:42,559 --> 00:47:44,319
the five volts or the 3.3 volts that

933
00:47:44,319 --> 00:47:45,920
you're using and here then

934
00:47:45,920 --> 00:47:49,440
the ground or the negative and but

935
00:47:49,440 --> 00:47:51,520
you're not required to use this is just

936
00:47:51,520 --> 00:47:53,920
to make your life easier

937
00:47:53,920 --> 00:47:56,640
but in case you run out just in case you

938
00:47:56,640 --> 00:47:57,760
run out of this

939
00:47:57,760 --> 00:48:00,000
you can use this ones and what i was

940
00:48:00,000 --> 00:48:01,119
saying was that

941
00:48:01,119 --> 00:48:04,960
some breadboards come with this cut in

942
00:48:04,960 --> 00:48:05,599
the middle

943
00:48:05,599 --> 00:48:07,760
so you can connect something here and

944
00:48:07,760 --> 00:48:09,359
something here it's not going to be on a

945
00:48:09,359 --> 00:48:10,000
cable

946
00:48:10,000 --> 00:48:12,240
until you connect it in the middle okay

947
00:48:12,240 --> 00:48:13,520
and until you jump

948
00:48:13,520 --> 00:48:17,040
it so yeah

949
00:48:17,040 --> 00:48:19,200
so you're going to identify which is

950
00:48:19,200 --> 00:48:20,640
going to be the

951
00:48:20,640 --> 00:48:24,160
smaller is going to be the longer uh pin

952
00:48:24,160 --> 00:48:27,760
of the of the of the uh of the led

953
00:48:27,760 --> 00:48:30,800
but i want you to put the led uh

954
00:48:30,800 --> 00:48:34,079
in front of a uh between you

955
00:48:34,079 --> 00:48:36,640
and the lamp so you can see these two

956
00:48:36,640 --> 00:48:37,599
parts

957
00:48:37,599 --> 00:48:40,079
the little one is the an is the anode

958
00:48:40,079 --> 00:48:41,359
which is the positive

959
00:48:41,359 --> 00:48:44,100
pin if you're going to

960
00:48:44,100 --> 00:48:47,040
[Music]

961
00:48:47,040 --> 00:48:49,839
for example turn this led on by sending

962
00:48:49,839 --> 00:48:50,559
negative

963
00:48:50,559 --> 00:48:52,480
then the positive should be should be

964
00:48:52,480 --> 00:48:54,000
connected right on

965
00:48:54,000 --> 00:48:55,839
right on top of here for example you're

966
00:48:55,839 --> 00:48:57,359
gonna be connecting here on the

967
00:48:57,359 --> 00:49:00,400
five volts we're going to see that

968
00:49:00,400 --> 00:49:01,839
in case you didn't understand it we're

969
00:49:01,839 --> 00:49:03,119
going to see that in more detail in the

970
00:49:03,119 --> 00:49:05,920
in the next class

971
00:49:06,000 --> 00:49:08,960
so yeah so here's the example program

972
00:49:08,960 --> 00:49:10,640
that i was telling you about

973
00:49:10,640 --> 00:49:12,880
this is a python program so what you

974
00:49:12,880 --> 00:49:14,480
need to do

975
00:49:14,480 --> 00:49:17,280
i'm going to do it here with you in case

976
00:49:17,280 --> 00:49:18,800
you're doing it with me right

977
00:49:18,800 --> 00:49:24,160
in case in the case okay so

978
00:49:24,640 --> 00:49:27,359
so let's create a program a file called

979
00:49:27,359 --> 00:49:29,760
blinky

980
00:49:29,760 --> 00:49:34,079
dot pi we're going to give it

981
00:49:34,240 --> 00:49:37,359
the the permission

982
00:49:37,359 --> 00:49:40,559
to be executed there you go

983
00:49:40,559 --> 00:49:44,000
so we do ls l and we're going to

984
00:49:44,000 --> 00:49:47,680
see we're going to see that blinky has

985
00:49:47,680 --> 00:49:51,680
executed permissions right so

986
00:49:51,680 --> 00:49:55,440
uh let's let's enter

987
00:49:56,400 --> 00:49:59,200
by the way you can also use if you're

988
00:49:59,200 --> 00:50:00,559
using the raspberry pi

989
00:50:00,559 --> 00:50:05,440
uh gui right you can also use

990
00:50:05,760 --> 00:50:10,400
here the this ide

991
00:50:10,400 --> 00:50:12,319
which is basically a specialized if you

992
00:50:12,319 --> 00:50:13,520
don't know what an ide

993
00:50:13,520 --> 00:50:17,359
is it's basically a

994
00:50:17,359 --> 00:50:20,319
text it's a notepad or it's a text text

995
00:50:20,319 --> 00:50:20,880
reader

996
00:50:20,880 --> 00:50:23,200
but with asteroids so it's going to help

997
00:50:23,200 --> 00:50:24,480
you to

998
00:50:24,480 --> 00:50:28,720
to develop in x or y language

999
00:50:28,720 --> 00:50:31,839
this one is specifically for python

1000
00:50:31,839 --> 00:50:36,160
so we're going to see blinky right

1001
00:50:37,040 --> 00:50:38,640
let me see because i have it okay there

1002
00:50:38,640 --> 00:50:41,839
you go okay

1003
00:50:41,839 --> 00:50:45,280
so yeah i'm going to import the

1004
00:50:45,280 --> 00:50:48,880
raspberry pi the

1005
00:50:48,880 --> 00:50:51,680
gpio

1006
00:50:53,599 --> 00:50:56,800
as gpio so what i'm doing here i'm going

1007
00:50:56,800 --> 00:50:59,200
to explain this briefly

1008
00:50:59,200 --> 00:51:01,200
here is what you call the library this

1009
00:51:01,200 --> 00:51:02,559
library is

1010
00:51:02,559 --> 00:51:05,599
basically a program that helps you

1011
00:51:05,599 --> 00:51:09,040
to talk to whatever you need uni or

1012
00:51:09,040 --> 00:51:10,960
or do whatever you need to do this is

1013
00:51:10,960 --> 00:51:12,079
just basically com

1014
00:51:12,079 --> 00:51:14,960
com compact programs that you call for

1015
00:51:14,960 --> 00:51:17,280
you use on this program

1016
00:51:17,280 --> 00:51:20,720
so i'm just when i use as

1017
00:51:20,720 --> 00:51:23,359
gpio i mean that whenever i'm going to

1018
00:51:23,359 --> 00:51:25,200
call this i'm going to call it like this

1019
00:51:25,200 --> 00:51:29,119
so for example um

1020
00:51:29,119 --> 00:51:31,920
instead of doing raspberry pi like this

1021
00:51:31,920 --> 00:51:33,839
raspberry

1022
00:51:33,839 --> 00:51:39,040
pi gpio instead of doing this

1023
00:51:39,040 --> 00:51:43,040
dot again set warnings

1024
00:51:48,839 --> 00:51:50,000
false

1025
00:51:50,000 --> 00:51:54,400
instead of doing this i can just do gpio

1026
00:51:54,640 --> 00:51:57,440
set warnings

1027
00:51:58,960 --> 00:52:04,559
false right

1028
00:52:04,559 --> 00:52:07,200
there you go so that's what i'm doing

1029
00:52:07,200 --> 00:52:08,079
right here like

1030
00:52:08,079 --> 00:52:09,599
you can just change the name it doesn't

1031
00:52:09,599 --> 00:52:12,000
need to be either you can just do

1032
00:52:12,000 --> 00:52:15,280
for example let's call it sun and then

1033
00:52:15,280 --> 00:52:18,880
you can just call it like that

1034
00:52:18,880 --> 00:52:23,200
um this is case sensitive by the way

1035
00:52:23,200 --> 00:52:25,280
as you can see that even the eye of the

1036
00:52:25,280 --> 00:52:27,119
raspberry pi is case sensitive

1037
00:52:27,119 --> 00:52:31,599
so from the library time

1038
00:52:31,599 --> 00:52:35,119
i'm going to import sleep

1039
00:52:35,119 --> 00:52:37,200
which is going to help us to do the the

1040
00:52:37,200 --> 00:52:40,480
timing for the blinking

1041
00:52:40,559 --> 00:52:42,960
so here i i said that the first line

1042
00:52:42,960 --> 00:52:43,680
which is uh

1043
00:52:43,680 --> 00:52:47,040
set the the warnings off if if you have

1044
00:52:47,040 --> 00:52:48,559
it on

1045
00:52:48,559 --> 00:52:50,960
in the in your in your uh whenever

1046
00:52:50,960 --> 00:52:52,720
you're whatever you're running the

1047
00:52:52,720 --> 00:52:55,040
the program is going to is is going to

1048
00:52:55,040 --> 00:52:56,720
give you a couple of warnings so

1049
00:52:56,720 --> 00:52:59,520
you just said so set them the them up

1050
00:52:59,520 --> 00:53:02,400
for the time being

1051
00:53:03,040 --> 00:53:06,400
gpio set mode

1052
00:53:08,960 --> 00:53:12,480
so gpio board

1053
00:53:12,480 --> 00:53:15,839
let's use the board one

1054
00:53:19,200 --> 00:53:23,839
then use gpio setup oops

1055
00:53:25,040 --> 00:53:29,440
set up

1056
00:53:29,440 --> 00:53:34,000
eight gpio out

1057
00:53:35,920 --> 00:53:38,720
and then you can even put the initial

1058
00:53:38,720 --> 00:53:39,680
state

1059
00:53:39,680 --> 00:53:43,119
like that but i but i wanna

1060
00:53:43,119 --> 00:53:44,720
for you to understand it better so you

1061
00:53:44,720 --> 00:53:46,640
don't have uh like too many things

1062
00:53:46,640 --> 00:53:49,680
in that statement i just do uh

1063
00:53:49,680 --> 00:53:54,000
gpio dot output

1064
00:53:54,640 --> 00:53:59,759
and then i just set it manually low

1065
00:54:01,599 --> 00:54:04,640
so there if you save this program

1066
00:54:04,640 --> 00:54:08,559
and you run it um

1067
00:54:08,559 --> 00:54:10,640
yeah this is it's just going to run and

1068
00:54:10,640 --> 00:54:11,760
it's going to go

1069
00:54:11,760 --> 00:54:14,240
and and and set that pin off and this

1070
00:54:14,240 --> 00:54:14,800
and that

1071
00:54:14,800 --> 00:54:16,960
then the program is just going to stop

1072
00:54:16,960 --> 00:54:19,440
so in order to do the blinky we need to

1073
00:54:19,440 --> 00:54:20,720
do something called

1074
00:54:20,720 --> 00:54:24,880
a a function in order to for it to run

1075
00:54:24,880 --> 00:54:29,280
like forever which is while

1076
00:54:29,280 --> 00:54:32,480
it's wild true

1077
00:54:32,559 --> 00:54:35,200
missing space

1078
00:54:36,799 --> 00:54:42,000
then we can do okay so let's turn

1079
00:54:43,760 --> 00:54:53,839
this pin on

1080
00:54:55,760 --> 00:54:58,480
let's sleep for one second this is

1081
00:54:58,480 --> 00:55:00,160
something that

1082
00:55:00,160 --> 00:55:02,559
this is like we call this in the

1083
00:55:02,559 --> 00:55:03,359
programming

1084
00:55:03,359 --> 00:55:06,559
uh of our work we call this a delay this

1085
00:55:06,559 --> 00:55:07,520
is something that

1086
00:55:07,520 --> 00:55:10,559
um when you're doing timing things it's

1087
00:55:10,559 --> 00:55:12,480
just

1088
00:55:12,480 --> 00:55:15,200
you're telling the the cpu of of your

1089
00:55:15,200 --> 00:55:16,400
computer which is running

1090
00:55:16,400 --> 00:55:18,880
really really fast a couple of times

1091
00:55:18,880 --> 00:55:20,319
many times per second

1092
00:55:20,319 --> 00:55:23,920
you just doing do don't do nothing

1093
00:55:23,920 --> 00:55:26,319
do nothing for a second and wait for the

1094
00:55:26,319 --> 00:55:27,119
next command

1095
00:55:27,119 --> 00:55:28,880
so the next command is going to be this

1096
00:55:28,880 --> 00:55:31,119
one

1097
00:55:32,400 --> 00:55:34,400
which is go which is we're just gonna

1098
00:55:34,400 --> 00:55:35,440
set

1099
00:55:35,440 --> 00:55:39,040
here so

1100
00:55:39,040 --> 00:55:42,000
now if i save this and run it then it's

1101
00:55:42,000 --> 00:55:42,480
just

1102
00:55:42,480 --> 00:55:44,640
going to to be forever here and doing

1103
00:55:44,640 --> 00:55:45,760
the on and off

1104
00:55:45,760 --> 00:55:47,920
i want you to try that to connect it to

1105
00:55:47,920 --> 00:55:48,880
the to the

1106
00:55:48,880 --> 00:55:51,200
to the pin number eight which is going

1107
00:55:51,200 --> 00:55:52,000
to be

1108
00:55:52,000 --> 00:55:54,880
uh on the board will be this one or the

1109
00:55:54,880 --> 00:55:55,599
14th

1110
00:55:55,599 --> 00:55:58,720
in the bmc i want you to try that and

1111
00:55:58,720 --> 00:56:01,200
let me know

1112
00:56:01,200 --> 00:56:03,440
how does it works the result should be

1113
00:56:03,440 --> 00:56:04,880
something like this

1114
00:56:04,880 --> 00:56:09,200
should be turning on on and off um

1115
00:56:09,760 --> 00:56:13,520
so yeah that's

1116
00:56:13,520 --> 00:56:17,839
that's it for the class of today

