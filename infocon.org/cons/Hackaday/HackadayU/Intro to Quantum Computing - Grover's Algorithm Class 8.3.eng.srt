1
00:00:00,000 --> 00:00:08,400
[Music]

2
00:00:08,400 --> 00:00:09,920
welcome

3
00:00:09,920 --> 00:00:13,679
everyone this is our 16th

4
00:00:13,679 --> 00:00:16,800
session at hackaday for quantum

5
00:00:16,800 --> 00:00:18,480
computing

6
00:00:18,480 --> 00:00:21,600
and also eight sessions ago we started

7
00:00:21,600 --> 00:00:22,160
looking at

8
00:00:22,160 --> 00:00:24,960
code we've been doing these hands-on

9
00:00:24,960 --> 00:00:26,320
exercises with

10
00:00:26,320 --> 00:00:30,000
quantum tatas so every week we have some

11
00:00:30,000 --> 00:00:32,960
new people joining

12
00:00:32,960 --> 00:00:35,760
uh in case you missed uh previous

13
00:00:35,760 --> 00:00:36,719
classes

14
00:00:36,719 --> 00:00:39,440
all of our recording am i sharing my

15
00:00:39,440 --> 00:00:40,480
screen though

16
00:00:40,480 --> 00:00:45,839
sorry about that

17
00:00:47,120 --> 00:00:52,399
all right that's sharing okay

18
00:00:53,840 --> 00:00:56,239
so in case people missed previous

19
00:00:56,239 --> 00:00:56,879
sessions

20
00:00:56,879 --> 00:01:00,559
we have all of our recording on hackaday

21
00:01:00,559 --> 00:01:02,719
on the quantum computing through comics

22
00:01:02,719 --> 00:01:04,239
projects

23
00:01:04,239 --> 00:01:07,200
so every sunday we spend 30 minutes to

24
00:01:07,200 --> 00:01:08,400
one hour

25
00:01:08,400 --> 00:01:11,439
discussing one concept and i also post a

26
00:01:11,439 --> 00:01:12,159
new piece of

27
00:01:12,159 --> 00:01:15,360
comics every sunday so

28
00:01:15,360 --> 00:01:16,960
if you if people have already seen

29
00:01:16,960 --> 00:01:18,960
today's comics we're gonna

30
00:01:18,960 --> 00:01:20,960
do again a little bit more about

31
00:01:20,960 --> 00:01:22,880
google's algorithm

32
00:01:22,880 --> 00:01:26,000
all of the content

33
00:01:26,000 --> 00:01:29,360
we refer

34
00:01:29,360 --> 00:01:31,759
to the q sharp documentation by

35
00:01:31,759 --> 00:01:32,640
microsoft

36
00:01:32,640 --> 00:01:35,680
and we use the samples from there and

37
00:01:35,680 --> 00:01:39,280
the quantum tatas as well with q sharp

38
00:01:39,280 --> 00:01:42,960
exercises so

39
00:01:42,960 --> 00:01:47,600
today we would look at groover again

40
00:01:47,600 --> 00:01:50,640
last class we spent the whole class

41
00:01:50,640 --> 00:01:54,000
discussing the gurus algorithm step

42
00:01:54,000 --> 00:01:57,520
by step and

43
00:01:57,520 --> 00:02:01,439
i will repeat that google's algorithm is

44
00:02:01,439 --> 00:02:04,799
using interference and entanglement

45
00:02:04,799 --> 00:02:08,479
to especially interference to help us

46
00:02:08,479 --> 00:02:12,400
get the answer quickly more quickly than

47
00:02:12,400 --> 00:02:15,040
classical algorithm would be able to

48
00:02:15,040 --> 00:02:16,480
achieve

49
00:02:16,480 --> 00:02:18,800
in this particular application which is

50
00:02:18,800 --> 00:02:20,239
searching for

51
00:02:20,239 --> 00:02:24,879
an item in an unordered list

52
00:02:24,879 --> 00:02:28,160
as for example here if you

53
00:02:28,160 --> 00:02:30,239
are looking for a book in the library

54
00:02:30,239 --> 00:02:31,920
you have a huge library

55
00:02:31,920 --> 00:02:33,840
so many books you know which book you're

56
00:02:33,840 --> 00:02:36,160
looking for but then you have to

57
00:02:36,160 --> 00:02:39,360
find the where it is with the right

58
00:02:39,360 --> 00:02:42,959
title classically if you're lucky

59
00:02:42,959 --> 00:02:45,360
the first book you look at is the one

60
00:02:45,360 --> 00:02:46,800
that you're looking for

61
00:02:46,800 --> 00:02:48,720
but if you are unlucky you have to go

62
00:02:48,720 --> 00:02:50,080
through every single book

63
00:02:50,080 --> 00:02:53,680
and given it is unsorted and it's

64
00:02:53,680 --> 00:02:57,360
all labeled this library is very chaotic

65
00:02:57,360 --> 00:03:00,480
then your last maybe the

66
00:03:00,480 --> 00:03:02,560
if you're unlucky the last book is the

67
00:03:02,560 --> 00:03:05,040
one that you're looking for

68
00:03:05,040 --> 00:03:09,360
guru's search puts all of the

69
00:03:09,360 --> 00:03:13,440
library books into the algorithm

70
00:03:13,440 --> 00:03:16,319
and through the interference between all

71
00:03:16,319 --> 00:03:17,519
the books

72
00:03:17,519 --> 00:03:20,400
the one that you're looking for will

73
00:03:20,400 --> 00:03:22,000
come out

74
00:03:22,000 --> 00:03:25,280
through constructive interference and

75
00:03:25,280 --> 00:03:29,120
it will output as the one

76
00:03:29,120 --> 00:03:32,319
so there's maybe some confusion

77
00:03:32,319 --> 00:03:34,239
that people may think that quantum

78
00:03:34,239 --> 00:03:36,799
computing is using parallel computing

79
00:03:36,799 --> 00:03:39,440
because you have cubits putting

80
00:03:39,440 --> 00:03:40,959
superposition

81
00:03:40,959 --> 00:03:44,319
but is actually really using

82
00:03:44,319 --> 00:03:49,040
interference to destructively interfere

83
00:03:49,040 --> 00:03:51,040
the answers you don't want and

84
00:03:51,040 --> 00:03:52,799
constructively

85
00:03:52,799 --> 00:03:56,480
getting the answer you want

86
00:03:56,480 --> 00:03:59,439
so there is really the interference in

87
00:03:59,439 --> 00:04:01,599
the algorithm that is playing the road

88
00:04:01,599 --> 00:04:02,239
there's no

89
00:04:02,239 --> 00:04:05,280
parallel computing

90
00:04:06,319 --> 00:04:10,640
and to recap this is

91
00:04:10,640 --> 00:04:15,519
what google's algorithm involves it has

92
00:04:15,519 --> 00:04:18,880
some inputs and then a bunch of h gates

93
00:04:18,880 --> 00:04:21,120
to put them into superposition

94
00:04:21,120 --> 00:04:23,680
and then you have two boxes the first

95
00:04:23,680 --> 00:04:24,240
one

96
00:04:24,240 --> 00:04:28,400
is allowing you to label the states that

97
00:04:28,400 --> 00:04:31,120
you're looking for with a minus sign

98
00:04:31,120 --> 00:04:35,040
and then the second box is to

99
00:04:35,040 --> 00:04:39,360
revert it through the mean

100
00:04:39,360 --> 00:04:43,360
so a reflection over the mean then would

101
00:04:43,360 --> 00:04:46,240
let your negative one becomes even

102
00:04:46,240 --> 00:04:47,360
larger

103
00:04:47,360 --> 00:04:49,280
so in a way grouper's algorithm is

104
00:04:49,280 --> 00:04:51,440
increasing your signal to noise

105
00:04:51,440 --> 00:04:53,759
the other ones are all kind of noise and

106
00:04:53,759 --> 00:04:54,880
gradually

107
00:04:54,880 --> 00:04:58,160
when you iterate between these two boxes

108
00:04:58,160 --> 00:05:00,720
the other states would decrease the

109
00:05:00,720 --> 00:05:02,080
amplitude

110
00:05:02,080 --> 00:05:03,759
but the one you're looking for would

111
00:05:03,759 --> 00:05:07,199
continually to amplify its amplitude

112
00:05:07,199 --> 00:05:09,680
this is really interesting algorithm

113
00:05:09,680 --> 00:05:10,800
very cool that

114
00:05:10,800 --> 00:05:14,080
we can do something like this

115
00:05:14,160 --> 00:05:17,840
and i also mentioned that

116
00:05:17,840 --> 00:05:22,560
google's algorithm scales and

117
00:05:22,840 --> 00:05:24,800
has

118
00:05:24,800 --> 00:05:28,080
a order of 2 to the n over 2 so

119
00:05:28,080 --> 00:05:31,440
square root of 2 to the n

120
00:05:31,440 --> 00:05:34,639
as your scaling with

121
00:05:34,639 --> 00:05:37,199
number of qubits whereas classical as i

122
00:05:37,199 --> 00:05:38,000
mentioned if you have

123
00:05:38,000 --> 00:05:41,120
to look at every single book

124
00:05:41,120 --> 00:05:44,479
and using bits that would be

125
00:05:44,479 --> 00:05:47,600
2 to the n bits with

126
00:05:47,600 --> 00:05:51,120
for the scale at some point so you don't

127
00:05:51,120 --> 00:05:51,600
know how

128
00:05:51,600 --> 00:05:54,479
intrinsically one iteration would take

129
00:05:54,479 --> 00:05:57,359
with your algorithm

130
00:05:57,600 --> 00:06:01,280
but is a factor depending on your what

131
00:06:01,280 --> 00:06:02,880
type of computer you're using

132
00:06:02,880 --> 00:06:05,520
so in this region you may have your

133
00:06:05,520 --> 00:06:07,600
fastest super computer

134
00:06:07,600 --> 00:06:10,720
that's faster

135
00:06:10,720 --> 00:06:13,919
than your fastest quantum computer but

136
00:06:13,919 --> 00:06:14,720
then

137
00:06:14,720 --> 00:06:16,560
at some point google's algorithm is

138
00:06:16,560 --> 00:06:18,319
going to

139
00:06:18,319 --> 00:06:21,680
take over and the

140
00:06:21,680 --> 00:06:23,600
time it takes for it to look for the

141
00:06:23,600 --> 00:06:25,520
right answer is much

142
00:06:25,520 --> 00:06:27,840
lower than the time that it takes for

143
00:06:27,840 --> 00:06:29,520
the classical computer

144
00:06:29,520 --> 00:06:33,360
so beyond certain qubit numbers you're

145
00:06:33,360 --> 00:06:34,240
going to get

146
00:06:34,240 --> 00:06:37,680
a speed up for a quantum

147
00:06:37,680 --> 00:06:40,880
computer so

148
00:06:40,880 --> 00:06:43,919
this is unknown the factors how fast

149
00:06:43,919 --> 00:06:46,160
each computer

150
00:06:46,160 --> 00:06:49,039
supercomputer versus quantum computer

151
00:06:49,039 --> 00:06:50,240
would take

152
00:06:50,240 --> 00:06:54,080
but we know the scaling and we also

153
00:06:54,080 --> 00:06:56,800
don't i'm not quite sure what this

154
00:06:56,800 --> 00:06:57,840
number of qubits

155
00:06:57,840 --> 00:06:59,919
would be and we we just know that it's

156
00:06:59,919 --> 00:07:02,560
going to be a large number small number

157
00:07:02,560 --> 00:07:03,599
is not

158
00:07:03,599 --> 00:07:06,319
going to be cost effective to use a

159
00:07:06,319 --> 00:07:07,599
quantum computer

160
00:07:07,599 --> 00:07:11,440
and it's not necessary to use one

161
00:07:11,440 --> 00:07:14,639
but one is large number then is more

162
00:07:14,639 --> 00:07:15,520
advantageous

163
00:07:15,520 --> 00:07:17,840
to use a quantum computer but then in

164
00:07:17,840 --> 00:07:18,880
this region

165
00:07:18,880 --> 00:07:21,919
is a job for a lot of us both in terms

166
00:07:21,919 --> 00:07:22,560
of

167
00:07:22,560 --> 00:07:25,120
hardware development and software

168
00:07:25,120 --> 00:07:26,160
development

169
00:07:26,160 --> 00:07:28,880
to find there are other things other

170
00:07:28,880 --> 00:07:30,960
applications and algorithms that we can

171
00:07:30,960 --> 00:07:32,240
come up with

172
00:07:32,240 --> 00:07:35,440
that would use smaller number of

173
00:07:35,440 --> 00:07:38,720
qubits yet achieve speed speed up

174
00:07:38,720 --> 00:07:42,000
compared to quantum so this

175
00:07:42,000 --> 00:07:44,720
is a big unknown for all of us and

176
00:07:44,720 --> 00:07:46,400
that's why we're learning that and

177
00:07:46,400 --> 00:07:47,759
trying to

178
00:07:47,759 --> 00:07:51,199
find interesting things

179
00:07:52,800 --> 00:07:56,000
and a quick also quick reminder

180
00:07:56,000 --> 00:07:59,199
if you missed last class definitely go

181
00:07:59,199 --> 00:08:00,479
back to it because that's

182
00:08:00,479 --> 00:08:03,599
when we look at how we construct the

183
00:08:03,599 --> 00:08:05,039
whole gross algorithm

184
00:08:05,039 --> 00:08:07,919
step by step but here is just reminding

185
00:08:07,919 --> 00:08:09,199
people that

186
00:08:09,199 --> 00:08:12,800
this box here is your oracle that

187
00:08:12,800 --> 00:08:16,000
introduces a minus sign and this is your

188
00:08:16,000 --> 00:08:18,080
reflection over mean

189
00:08:18,080 --> 00:08:21,360
box that allows you to reflect

190
00:08:21,360 --> 00:08:24,560
all of your amplitude over all of

191
00:08:24,560 --> 00:08:27,599
their's mean value and these

192
00:08:27,599 --> 00:08:32,080
two these are two ways that you can

193
00:08:32,080 --> 00:08:34,000
introduce a negative sign to achieve

194
00:08:34,000 --> 00:08:36,080
this effect

195
00:08:36,080 --> 00:08:39,200
and we tried the quantum titles last

196
00:08:39,200 --> 00:08:40,880
week which is using the bottom one is

197
00:08:40,880 --> 00:08:42,159
quite elegant because it

198
00:08:42,159 --> 00:08:45,440
actually doesn't need the last qubit

199
00:08:45,440 --> 00:08:47,440
in this case is our output qubit we

200
00:08:47,440 --> 00:08:48,560
don't even need it

201
00:08:48,560 --> 00:08:50,480
in this box in order to introduce the

202
00:08:50,480 --> 00:08:55,440
negative sign

203
00:08:55,440 --> 00:08:58,720
and that is what that box does so here

204
00:08:58,720 --> 00:09:01,920
is reflection over all the zeros and

205
00:09:01,920 --> 00:09:02,480
then

206
00:09:02,480 --> 00:09:05,360
adding all of these each gates you would

207
00:09:05,360 --> 00:09:08,640
be able to reflect over the mean

208
00:09:08,640 --> 00:09:13,279
so how many iterations is enough though

209
00:09:13,279 --> 00:09:16,160
depending on how big your list is how

210
00:09:16,160 --> 00:09:16,720
many

211
00:09:16,720 --> 00:09:20,000
qubits you will need

212
00:09:20,160 --> 00:09:23,600
how do we derive that 2 to the

213
00:09:23,600 --> 00:09:26,560
n square root of 2 to the n order of

214
00:09:26,560 --> 00:09:27,920
magnitude

215
00:09:27,920 --> 00:09:29,760
so it turns out that there's actually a

216
00:09:29,760 --> 00:09:31,040
really

217
00:09:31,040 --> 00:09:35,440
cool tripometrical way to

218
00:09:35,440 --> 00:09:38,480
derive it and

219
00:09:38,480 --> 00:09:41,920
there are numeric ways also you can look

220
00:09:41,920 --> 00:09:42,720
it up

221
00:09:42,720 --> 00:09:44,720
and i will also show you where to find

222
00:09:44,720 --> 00:09:45,920
those derivations

223
00:09:45,920 --> 00:09:49,040
but this one i especially find it

224
00:09:49,040 --> 00:09:52,240
elegant because it requires

225
00:09:52,240 --> 00:09:54,320
several things that we have learned

226
00:09:54,320 --> 00:09:56,640
before and we're really thinking about

227
00:09:56,640 --> 00:10:00,000
multi-dimensions so

228
00:10:00,000 --> 00:10:03,279
still using our examples of three qubits

229
00:10:03,279 --> 00:10:06,959
this are these eight possible states

230
00:10:06,959 --> 00:10:07,839
that you can

231
00:10:07,839 --> 00:10:11,040
have in your system but

232
00:10:11,040 --> 00:10:14,079
each of them is

233
00:10:14,079 --> 00:10:18,480
orthogonal to the other ones so

234
00:10:18,480 --> 00:10:21,680
this is a complete set of the states

235
00:10:21,680 --> 00:10:23,920
in your system and each of them between

236
00:10:23,920 --> 00:10:26,079
each of them they are orthogonal

237
00:10:26,079 --> 00:10:29,279
so then you can think uh

238
00:10:29,279 --> 00:10:31,440
because we can't really visualize more

239
00:10:31,440 --> 00:10:32,399
than

240
00:10:32,399 --> 00:10:34,079
three dimensions but you can still

241
00:10:34,079 --> 00:10:35,839
imagine if we

242
00:10:35,839 --> 00:10:38,640
project it down to the dimension and if

243
00:10:38,640 --> 00:10:39,680
we want to draw it

244
00:10:39,680 --> 00:10:42,720
it would draw a two axis

245
00:10:42,720 --> 00:10:45,360
that's orthogonal that's perpendicular

246
00:10:45,360 --> 00:10:46,959
to each other

247
00:10:46,959 --> 00:10:50,160
so say that this one

248
00:10:50,160 --> 00:10:53,440
state b is our all zero state

249
00:10:53,440 --> 00:10:55,920
in this case we only have three zeros so

250
00:10:55,920 --> 00:10:57,839
i'm just writing the general case here

251
00:10:57,839 --> 00:10:59,760
so if you have even bigger larger

252
00:10:59,760 --> 00:11:01,360
dimension it's got

253
00:11:01,360 --> 00:11:04,640
n number of zeros there

254
00:11:04,640 --> 00:11:08,000
and this

255
00:11:08,000 --> 00:11:10,079
other one other state that you want to

256
00:11:10,079 --> 00:11:11,120
get to

257
00:11:11,120 --> 00:11:14,560
in this case is 1 0 1 is this

258
00:11:14,560 --> 00:11:19,040
perpendicular one and now

259
00:11:19,040 --> 00:11:21,040
what you do in the first box when you

260
00:11:21,040 --> 00:11:22,480
flag reflect

261
00:11:22,480 --> 00:11:25,519
over your zero axis

262
00:11:25,519 --> 00:11:30,240
is this here so if you have a

263
00:11:30,240 --> 00:11:33,680
arbitrary state um sorry if you have

264
00:11:33,680 --> 00:11:36,959
all all the zero states and you apply

265
00:11:36,959 --> 00:11:39,120
each gates to them you will put them in

266
00:11:39,120 --> 00:11:40,839
superposition

267
00:11:40,839 --> 00:11:44,079
equal amplitudes

268
00:11:44,079 --> 00:11:47,120
and then your first box is to put a

269
00:11:47,120 --> 00:11:49,040
reflection over zero

270
00:11:49,040 --> 00:11:52,160
and then you get this state and then we

271
00:11:52,160 --> 00:11:53,120
know the next

272
00:11:53,120 --> 00:11:56,240
box as shown earlier is reflection

273
00:11:56,240 --> 00:11:59,360
over mean

274
00:11:59,360 --> 00:12:02,320
so when you reflect over zero for that

275
00:12:02,320 --> 00:12:03,519
particular state

276
00:12:03,519 --> 00:12:05,360
you give it a mark you labeled it so

277
00:12:05,360 --> 00:12:07,839
only this one is negative

278
00:12:07,839 --> 00:12:11,839
but then uh next step is reflection over

279
00:12:11,839 --> 00:12:12,320
me

280
00:12:12,320 --> 00:12:17,519
you will get to this phi dash state

281
00:12:17,519 --> 00:12:19,360
there is also proof if you want to be

282
00:12:19,360 --> 00:12:21,360
very very rigorous there's proof that

283
00:12:21,360 --> 00:12:25,839
when you reflect two

284
00:12:26,160 --> 00:12:29,440
reflect your state over two

285
00:12:29,440 --> 00:12:33,200
arbitrary lines on your

286
00:12:33,600 --> 00:12:37,360
coordinates if the angle between the two

287
00:12:37,360 --> 00:12:38,320
lines is theta

288
00:12:38,320 --> 00:12:41,040
then your end state will be two thetas

289
00:12:41,040 --> 00:12:41,519
away

290
00:12:41,519 --> 00:12:45,040
from your origin but you can also see

291
00:12:45,040 --> 00:12:45,440
that

292
00:12:45,440 --> 00:12:47,680
of course this one is the mean because

293
00:12:47,680 --> 00:12:48,959
it's equal angle

294
00:12:48,959 --> 00:12:53,279
spreading out so this is your mean

295
00:12:53,279 --> 00:12:56,000
axis that you are reflecting over and

296
00:12:56,000 --> 00:12:57,760
get to this

297
00:12:57,760 --> 00:13:00,480
phi dash

298
00:13:00,880 --> 00:13:03,279
and if you want to write out what the

299
00:13:03,279 --> 00:13:04,800
states are

300
00:13:04,800 --> 00:13:07,760
for example when you're just starting

301
00:13:07,760 --> 00:13:08,560
with the phi

302
00:13:08,560 --> 00:13:11,760
states you can write out it's got some

303
00:13:11,760 --> 00:13:15,839
angle theta and it's projected to b

304
00:13:15,839 --> 00:13:18,320
so it's cosine theta and projected to a

305
00:13:18,320 --> 00:13:20,000
is sine theta

306
00:13:20,000 --> 00:13:23,040
now when you have a phi dash

307
00:13:23,040 --> 00:13:26,320
you get cosine

308
00:13:26,320 --> 00:13:30,000
2 theta reflected

309
00:13:30,000 --> 00:13:33,680
projected onto b and 2 theta projected

310
00:13:33,680 --> 00:13:34,000
onto

311
00:13:34,000 --> 00:13:37,279
a but now if you have

312
00:13:37,279 --> 00:13:40,639
run this iteration k times

313
00:13:40,639 --> 00:13:44,000
then it will become 2k plus 1

314
00:13:44,000 --> 00:13:47,600
theta so you have just checked this

315
00:13:47,600 --> 00:13:51,279
that when k is zero you you have

316
00:13:51,279 --> 00:13:54,399
two theta uh you have sorry

317
00:13:54,399 --> 00:13:57,600
you have theta but then if k is one

318
00:13:57,600 --> 00:14:01,279
you have three fetus away from here

319
00:14:01,279 --> 00:14:06,079
from this here so

320
00:14:06,399 --> 00:14:10,000
then this is your arbitrary state after

321
00:14:10,000 --> 00:14:13,040
k times of iterations

322
00:14:13,040 --> 00:14:15,360
you know that eventually you want you

323
00:14:15,360 --> 00:14:16,320
want to do this

324
00:14:16,320 --> 00:14:19,760
reflection over this one

325
00:14:19,760 --> 00:14:22,959
and this one this one and this one so

326
00:14:22,959 --> 00:14:25,040
gradually you are folding and folding

327
00:14:25,040 --> 00:14:26,000
floating

328
00:14:26,000 --> 00:14:28,480
and your state would eventually be very

329
00:14:28,480 --> 00:14:29,199
very close

330
00:14:29,199 --> 00:14:31,680
to a here and that's what google's

331
00:14:31,680 --> 00:14:32,639
algorithm does

332
00:14:32,639 --> 00:14:35,760
is starting with a state but then

333
00:14:35,760 --> 00:14:38,639
moving it towards the answer that you

334
00:14:38,639 --> 00:14:39,839
want

335
00:14:39,839 --> 00:14:42,959
so if then your end state

336
00:14:42,959 --> 00:14:46,160
is close to a that means your amplitude

337
00:14:46,160 --> 00:14:46,560
here

338
00:14:46,560 --> 00:14:49,680
needs to be close to a and your amp to

339
00:14:49,680 --> 00:14:53,120
here is close to zero so if you

340
00:14:53,120 --> 00:14:56,720
write sine 2k plus 1 times theta

341
00:14:56,720 --> 00:15:00,800
equal to 1 then you will get this

342
00:15:00,800 --> 00:15:04,240
pi over 4 theta minus

343
00:15:04,240 --> 00:15:07,839
half is your number of iterations

344
00:15:07,839 --> 00:15:10,399
that's how you can prove it is i think

345
00:15:10,399 --> 00:15:11,360
it's a very

346
00:15:11,360 --> 00:15:14,320
very cool elegant way to prove what's

347
00:15:14,320 --> 00:15:15,360
the number of

348
00:15:15,360 --> 00:15:18,959
k and that is given us

349
00:15:18,959 --> 00:15:21,760
okay now what is theta theta you can

350
00:15:21,760 --> 00:15:22,560
find out

351
00:15:22,560 --> 00:15:26,399
from over here

352
00:15:26,399 --> 00:15:30,639
when you get started with

353
00:15:30,639 --> 00:15:34,800
2 to the n is the number of states

354
00:15:34,800 --> 00:15:38,399
and n is the number of qubits

355
00:15:38,399 --> 00:15:42,079
so your amplitude when you start

356
00:15:42,079 --> 00:15:46,000
with is always 1 over

357
00:15:46,000 --> 00:15:50,240
square root of 2 to the n so that's why

358
00:15:50,240 --> 00:15:52,880
this sine theta a is here because we

359
00:15:52,880 --> 00:15:53,279
know

360
00:15:53,279 --> 00:15:56,959
a would be one zero one and we know

361
00:15:56,959 --> 00:16:00,000
its amplitude right here is one over

362
00:16:00,000 --> 00:16:00,720
eight

363
00:16:00,720 --> 00:16:02,720
and one over eight expanding to the

364
00:16:02,720 --> 00:16:04,320
general case is one over

365
00:16:04,320 --> 00:16:08,160
two to the n so we we already know theta

366
00:16:08,160 --> 00:16:11,120
right here you just plug it in and you

367
00:16:11,120 --> 00:16:12,160
see

368
00:16:12,160 --> 00:16:14,880
actually it will be on the order of 2 to

369
00:16:14,880 --> 00:16:15,360
the n

370
00:16:15,360 --> 00:16:18,560
for for k and there's also a

371
00:16:18,560 --> 00:16:22,320
approximation here when sine

372
00:16:22,320 --> 00:16:24,880
gets the angle gets really large then

373
00:16:24,880 --> 00:16:25,920
sine theta

374
00:16:25,920 --> 00:16:29,120
is the same as theta

375
00:16:29,120 --> 00:16:32,160
so sine theta when n

376
00:16:32,160 --> 00:16:35,279
is very large is very close to 1 over 2

377
00:16:35,279 --> 00:16:36,240
to the n so

378
00:16:36,240 --> 00:16:39,199
that's why theta will be very close to 1

379
00:16:39,199 --> 00:16:40,720
to the

380
00:16:40,720 --> 00:16:44,959
2 to the n yeah so there's

381
00:16:44,959 --> 00:16:47,920
this kind of proof here which is really

382
00:16:47,920 --> 00:16:48,399
cool

383
00:16:48,399 --> 00:16:51,920
so let's take a look at the the code now

384
00:16:51,920 --> 00:16:53,519
if we want to

385
00:16:53,519 --> 00:16:58,000
just try a little bit of practice

386
00:16:58,079 --> 00:17:01,120
so we're not using the cutters today but

387
00:17:01,120 --> 00:17:02,399
we will be using

388
00:17:02,399 --> 00:17:05,760
the samples from the

389
00:17:05,760 --> 00:17:10,720
documentation page or

390
00:17:15,280 --> 00:17:17,039
people who haven't seen this before this

391
00:17:17,039 --> 00:17:19,280
is the microsoft

392
00:17:19,280 --> 00:17:22,559
quantum documentation and in this

393
00:17:22,559 --> 00:17:25,520
tutorials page you can even find quite a

394
00:17:25,520 --> 00:17:27,359
few getting started

395
00:17:27,359 --> 00:17:30,000
samples and we have the implement google

396
00:17:30,000 --> 00:17:33,280
search algorithm here

397
00:17:33,280 --> 00:17:36,080
and it does a little bit of explanation

398
00:17:36,080 --> 00:17:38,320
and then goes to the code you can copy

399
00:17:38,320 --> 00:17:39,760
and paste the code

400
00:17:39,760 --> 00:17:43,840
to your ide but you can also go to the

401
00:17:43,840 --> 00:17:47,280
q sharp sample where you can

402
00:17:47,280 --> 00:17:50,559
also find a github repository of the

403
00:17:50,559 --> 00:17:52,320
exact code and download it

404
00:17:52,320 --> 00:17:57,200
or clone it from the sample code

405
00:17:57,200 --> 00:18:01,600
repository also a few words about how to

406
00:18:01,600 --> 00:18:02,240
use this

407
00:18:02,240 --> 00:18:06,160
i am going to use the visual studio code

408
00:18:06,160 --> 00:18:09,840
we use this previously also

409
00:18:09,840 --> 00:18:15,200
it's kind of my favorite environment for

410
00:18:15,200 --> 00:18:18,320
q sharp and you have

411
00:18:18,320 --> 00:18:20,559
other options if you don't have this

412
00:18:20,559 --> 00:18:21,360
installed

413
00:18:21,360 --> 00:18:23,200
don't worry i will just show you how

414
00:18:23,200 --> 00:18:24,400
this works

415
00:18:24,400 --> 00:18:27,120
and in the quick starts you will be able

416
00:18:27,120 --> 00:18:27,600
to

417
00:18:27,600 --> 00:18:31,120
find all about the different types of

418
00:18:31,120 --> 00:18:33,600
ides and which one to install

419
00:18:33,600 --> 00:18:35,679
and we have all these different options

420
00:18:35,679 --> 00:18:38,960
so i'm just using the

421
00:18:41,679 --> 00:18:45,039
comment line and i had to install visual

422
00:18:45,039 --> 00:18:46,480
studio code and

423
00:18:46,480 --> 00:18:50,080
the qdk extension so you just follow

424
00:18:50,080 --> 00:18:52,799
this if you want to do the same

425
00:18:52,799 --> 00:18:56,080
so i already downloaded the sample and

426
00:18:56,080 --> 00:18:57,440
let's take a look at

427
00:18:57,440 --> 00:19:00,320
the code here

428
00:19:03,600 --> 00:19:06,720
okay so it comes with two

429
00:19:06,720 --> 00:19:10,000
files the program.qs is the one that we

430
00:19:10,000 --> 00:19:11,360
will execute

431
00:19:11,360 --> 00:19:14,679
and it's the main file here but then the

432
00:19:14,679 --> 00:19:16,320
reflection.qs

433
00:19:16,320 --> 00:19:19,440
has the definition of all these

434
00:19:19,440 --> 00:19:22,799
gates and

435
00:19:22,840 --> 00:19:26,720
steps so it's kind of written

436
00:19:26,720 --> 00:19:29,280
the same algorithm that we tried last

437
00:19:29,280 --> 00:19:29,760
week

438
00:19:29,760 --> 00:19:32,320
in the co more concise way in a way

439
00:19:32,320 --> 00:19:33,679
because last week we were you

440
00:19:33,679 --> 00:19:37,039
we're building groover as a cutters

441
00:19:37,039 --> 00:19:40,480
um exercise but now

442
00:19:40,480 --> 00:19:43,600
we want to run groover's algorithm and

443
00:19:43,600 --> 00:19:44,320
also

444
00:19:44,320 --> 00:19:47,919
figure out the state that it would

445
00:19:47,919 --> 00:19:51,520
return so here we

446
00:19:51,520 --> 00:19:55,360
just have arbitrary array of qubits

447
00:19:55,360 --> 00:19:57,039
and then we have something called

448
00:19:57,039 --> 00:20:00,400
prepare uniform qubits

449
00:20:00,400 --> 00:20:03,919
so if we look at this here or

450
00:20:03,919 --> 00:20:07,039
rather this one is either we want to

451
00:20:07,039 --> 00:20:08,320
prepare them

452
00:20:08,320 --> 00:20:12,159
and then uh we do a reflection over the

453
00:20:12,159 --> 00:20:13,679
marked which is this all

454
00:20:13,679 --> 00:20:15,760
this article here and then do a

455
00:20:15,760 --> 00:20:18,320
reflection about uniform what is uniform

456
00:20:18,320 --> 00:20:20,159
i think it's just a naming thing

457
00:20:20,159 --> 00:20:22,960
so we're going to look at that later but

458
00:20:22,960 --> 00:20:23,760
in effect

459
00:20:23,760 --> 00:20:26,640
is als is just doing the reflection over

460
00:20:26,640 --> 00:20:28,159
mean

461
00:20:28,159 --> 00:20:31,200
and then it also does

462
00:20:31,200 --> 00:20:33,120
the calculation of the number of

463
00:20:33,120 --> 00:20:35,600
iterations and is automatically

464
00:20:35,600 --> 00:20:38,240
taking into account here depending on

465
00:20:38,240 --> 00:20:40,400
how many qubits you ask this algorithm

466
00:20:40,400 --> 00:20:41,200
to

467
00:20:41,200 --> 00:20:44,400
calculate this would get updated so look

468
00:20:44,400 --> 00:20:44,799
here

469
00:20:44,799 --> 00:20:48,480
this is what we just derived is the

470
00:20:48,480 --> 00:20:52,480
angular presentation here

471
00:20:52,480 --> 00:20:55,840
pi over 4 theta theta is the the angle

472
00:20:55,840 --> 00:20:56,400
minus

473
00:20:56,400 --> 00:20:59,679
half so in this

474
00:20:59,679 --> 00:21:02,720
reflection dot qs we can see what

475
00:21:02,720 --> 00:21:06,159
these definitions are

476
00:21:12,559 --> 00:21:15,679
the reflect reflect about

477
00:21:15,679 --> 00:21:19,919
marked this algorithm this article here

478
00:21:19,919 --> 00:21:23,200
is asking to do

479
00:21:23,200 --> 00:21:27,840
the x for the output qubit

480
00:21:27,840 --> 00:21:31,120
and the h fold out per qubit so this

481
00:21:31,120 --> 00:21:32,159
initializes

482
00:21:32,159 --> 00:21:35,039
the output qubit this here and the

483
00:21:35,039 --> 00:21:36,159
reason for doing this

484
00:21:36,159 --> 00:21:38,159
as we've seen before is to introduce

485
00:21:38,159 --> 00:21:39,600
that minus sign

486
00:21:39,600 --> 00:21:41,520
to our system so that it can be

487
00:21:41,520 --> 00:21:44,559
entangled with the other

488
00:21:44,559 --> 00:21:49,280
qubits and then label the one you want

489
00:21:49,280 --> 00:21:52,320
and here is something you can modify

490
00:21:52,320 --> 00:21:55,360
it for the oracle so i think when the

491
00:21:55,360 --> 00:21:57,520
sample first came in it was

492
00:21:57,520 --> 00:22:01,840
2. i change this to 3 for fun

493
00:22:01,840 --> 00:22:06,240
and when you put

494
00:22:06,240 --> 00:22:09,840
input qubits with the 2 as your sequence

495
00:22:09,840 --> 00:22:10,159
then

496
00:22:10,159 --> 00:22:13,280
is the 0 1 0 1 0 1

497
00:22:13,280 --> 00:22:16,720
state this is where you define which

498
00:22:16,720 --> 00:22:19,919
state in your system you want to label

499
00:22:19,919 --> 00:22:24,080
and now it asks us to do the widthing

500
00:22:24,080 --> 00:22:26,799
remember we learned this in uh the

501
00:22:26,799 --> 00:22:28,159
cutters

502
00:22:28,159 --> 00:22:31,840
so within this do the control x

503
00:22:31,840 --> 00:22:34,880
here this is your control x so

504
00:22:34,880 --> 00:22:38,880
this whole chunk is setting up

505
00:22:38,880 --> 00:22:42,159
the first article

506
00:22:42,240 --> 00:22:45,120
then there's the reflect about uniform

507
00:22:45,120 --> 00:22:46,640
and it has

508
00:22:46,640 --> 00:22:50,799
several more definitions below

509
00:22:50,799 --> 00:22:54,400
reflect over about

510
00:22:54,400 --> 00:22:56,480
i i think about over maybe the same

511
00:22:56,480 --> 00:22:58,240
thing reflect about

512
00:22:58,240 --> 00:23:01,919
uniform here is doing a adjoint

513
00:23:01,919 --> 00:23:05,679
prepare uniform so it's preparing the

514
00:23:05,679 --> 00:23:07,360
input qubits

515
00:23:07,360 --> 00:23:10,159
and what is a prepare uniform is

516
00:23:10,159 --> 00:23:11,039
basically

517
00:23:11,039 --> 00:23:14,960
again applying all the h

518
00:23:15,039 --> 00:23:18,240
gates to all the input qubits and then

519
00:23:18,240 --> 00:23:18,960
prepare

520
00:23:18,960 --> 00:23:24,720
all ones so the all ones

521
00:23:24,799 --> 00:23:28,158
is defined here

522
00:23:29,200 --> 00:23:32,000
because you you have to have them to be

523
00:23:32,000 --> 00:23:34,000
all ones in order to have

524
00:23:34,000 --> 00:23:38,159
this or or this um

525
00:23:38,159 --> 00:23:40,799
useful because when you have a zero is

526
00:23:40,799 --> 00:23:41,520
not gonna

527
00:23:41,520 --> 00:23:45,120
do any control on this qubit here

528
00:23:45,120 --> 00:23:47,840
so this is what they call reflect uh

529
00:23:47,840 --> 00:23:49,039
prepare all ones

530
00:23:49,039 --> 00:23:52,700
so in effect you're having all of them

531
00:23:52,700 --> 00:23:54,080
[Music]

532
00:23:54,080 --> 00:23:57,440
having the superposition

533
00:23:57,440 --> 00:24:00,640
and then all the ones would have

534
00:24:00,640 --> 00:24:06,159
the control effect on that last qubit

535
00:24:08,720 --> 00:24:12,159
yeah and then that's it

536
00:24:12,159 --> 00:24:14,880
that's actually how you would set up

537
00:24:14,880 --> 00:24:15,679
everything

538
00:24:15,679 --> 00:24:18,960
here is the reflect about all ones

539
00:24:18,960 --> 00:24:21,520
which is this step and remember last

540
00:24:21,520 --> 00:24:22,640
time we learned about

541
00:24:22,640 --> 00:24:25,360
most which is all of them but the last

542
00:24:25,360 --> 00:24:26,159
one

543
00:24:26,159 --> 00:24:29,520
and the tail tail is the last qubit

544
00:24:29,520 --> 00:24:32,400
and note these are all input qubits

545
00:24:32,400 --> 00:24:34,880
we're not using the output qubit

546
00:24:34,880 --> 00:24:39,840
at the bottom in this box at all

547
00:24:40,640 --> 00:24:44,000
so yeah so this is how you set it up

548
00:24:44,000 --> 00:24:47,840
and let's run it

549
00:24:48,080 --> 00:24:51,120
in this case so

550
00:24:51,120 --> 00:24:54,960
the instruction on documentation

551
00:24:54,960 --> 00:24:58,400
shows that you need to build

552
00:24:59,039 --> 00:25:02,080
the program

553
00:25:02,080 --> 00:25:03,760
if it's the first time you're running it

554
00:25:03,760 --> 00:25:05,120
but i've already done

555
00:25:05,120 --> 00:25:08,080
these so now i just need to put in the

556
00:25:08,080 --> 00:25:08,720
comment

557
00:25:08,720 --> 00:25:11,840
to have it run but it also tells you

558
00:25:11,840 --> 00:25:12,159
that

559
00:25:12,159 --> 00:25:14,480
if you do this it's not going to run

560
00:25:14,480 --> 00:25:16,080
because you haven't told it

561
00:25:16,080 --> 00:25:18,880
haven't told the program how many qubits

562
00:25:18,880 --> 00:25:19,440
you have

563
00:25:19,440 --> 00:25:22,640
so if we do this let's run

564
00:25:22,640 --> 00:25:27,120
five qubits that's what it asks

565
00:25:27,120 --> 00:25:29,200
it's just an example is any arbitrary

566
00:25:29,200 --> 00:25:30,559
number so this

567
00:25:30,559 --> 00:25:34,000
algorithm is built on no restrictions of

568
00:25:34,000 --> 00:25:43,840
the number of qubits

569
00:25:46,400 --> 00:25:49,600
okay not taking a while okay yep so it

570
00:25:49,600 --> 00:25:50,080
now

571
00:25:50,080 --> 00:25:52,559
outputs zero one zero one zero one

572
00:25:52,559 --> 00:25:53,440
that's what we

573
00:25:53,440 --> 00:25:56,480
we defined that's what we

574
00:25:56,480 --> 00:26:00,080
labeled and you only needed to do this

575
00:26:00,080 --> 00:26:03,279
iteration four times when you have five

576
00:26:03,279 --> 00:26:04,480
qubits

577
00:26:04,480 --> 00:26:07,200
but then if you have more qubits and

578
00:26:07,200 --> 00:26:08,000
just

579
00:26:08,000 --> 00:26:11,279
for the sake of generality i can change

580
00:26:11,279 --> 00:26:14,640
this here to

581
00:26:15,600 --> 00:26:19,679
the number and

582
00:26:19,679 --> 00:26:25,840
change also let's try

583
00:26:26,000 --> 00:26:39,840
11 cubits

584
00:26:51,760 --> 00:26:54,799
now yeah that's what it finds

585
00:26:54,799 --> 00:26:57,919
it finds the correct state and also it

586
00:26:57,919 --> 00:27:00,080
calculates the number of iteration that

587
00:27:00,080 --> 00:27:00,880
it needs

588
00:27:00,880 --> 00:27:04,559
to run the algorithm

589
00:27:04,559 --> 00:27:07,440
yeah so that's how you do it on q sharp

590
00:27:07,440 --> 00:27:09,840
in the sample

591
00:27:09,840 --> 00:27:13,279
and um tutorials

592
00:27:13,279 --> 00:27:15,760
uh yeah that's what we just did and the

593
00:27:15,760 --> 00:27:16,960
cutouts we looked at

594
00:27:16,960 --> 00:27:19,440
last time but i also want to point you

595
00:27:19,440 --> 00:27:20,480
to

596
00:27:20,480 --> 00:27:25,520
some further readings through this tatas

597
00:27:26,080 --> 00:27:29,520
so the gruber's algorithm

598
00:27:29,520 --> 00:27:34,880
we already did the exercise but in here

599
00:27:34,880 --> 00:27:38,960
it links to some reading materials

600
00:27:39,039 --> 00:27:41,919
of course wikipedia has a page but there

601
00:27:41,919 --> 00:27:42,350
are some

602
00:27:42,350 --> 00:27:43,520
[Music]

603
00:27:43,520 --> 00:27:50,240
lectures one of them uses the angular

604
00:27:50,240 --> 00:27:54,080
derivation and the other ones use the

605
00:27:54,080 --> 00:27:57,520
numerical way so these are all very good

606
00:27:57,520 --> 00:28:00,840
lecture materials if we want to study

607
00:28:00,840 --> 00:28:02,240
further

608
00:28:02,240 --> 00:28:04,640
and

609
00:28:05,440 --> 00:28:08,559
yeah these are more mathematical if you

610
00:28:08,559 --> 00:28:10,640
prefer

611
00:28:10,640 --> 00:28:15,440
so this one uses a similar

612
00:28:15,440 --> 00:28:19,200
this is the proof for the two theta

613
00:28:19,200 --> 00:28:21,360
yeah just read those uh in your spare

614
00:28:21,360 --> 00:28:22,320
time

615
00:28:22,320 --> 00:28:24,320
and there's one more thing i want to

616
00:28:24,320 --> 00:28:26,559
show

617
00:28:29,039 --> 00:28:33,360
uh here is a really cool animation of

618
00:28:33,360 --> 00:28:45,840
groovers i have to wait for it to load

619
00:28:53,039 --> 00:28:57,039
not sure why it's not loading but

620
00:28:57,440 --> 00:29:00,080
you should go and to this link through

621
00:29:00,080 --> 00:29:01,440
the goddess

622
00:29:01,440 --> 00:29:04,720
let me also see if i can

623
00:29:04,720 --> 00:29:07,279
copy and paste here it's got a really

624
00:29:07,279 --> 00:29:08,640
nice animation

625
00:29:08,640 --> 00:29:12,000
and it's got a fixed number of um

626
00:29:12,000 --> 00:29:15,440
is also using three qubits and then but

627
00:29:15,440 --> 00:29:16,240
then they have

628
00:29:16,240 --> 00:29:20,000
a also a output qubit

629
00:29:20,240 --> 00:29:24,399
so exactly like what we set up here

630
00:29:24,399 --> 00:29:26,320
it's got three qubits and then one

631
00:29:26,320 --> 00:29:27,919
output as your

632
00:29:27,919 --> 00:29:31,600
uh the state that can introduce your

633
00:29:31,600 --> 00:29:33,279
negative sign and then when you run it

634
00:29:33,279 --> 00:29:36,080
it has the the phase arrows showing how

635
00:29:36,080 --> 00:29:38,000
large the amplitudes are and how they

636
00:29:38,000 --> 00:29:40,640
can cancel each other out and enhance

637
00:29:40,640 --> 00:29:42,159
the one that you want

638
00:29:42,159 --> 00:29:45,679
it's a shame why is it not running

639
00:29:45,679 --> 00:29:48,080
but i'll post the link you can try it on

640
00:29:48,080 --> 00:29:50,320
your

641
00:29:51,120 --> 00:29:54,159
my own computer so that's it

642
00:29:54,159 --> 00:29:57,279
for today it's pretty quick this is a

643
00:29:57,279 --> 00:29:57,919
short

644
00:29:57,919 --> 00:30:00,720
short class today and frequently asked

645
00:30:00,720 --> 00:30:01,679
question is

646
00:30:01,679 --> 00:30:06,080
um where is this recorded yes

647
00:30:06,080 --> 00:30:09,440
and these are the two places youtube and

648
00:30:09,440 --> 00:30:11,120
cacaday that you can find

649
00:30:11,120 --> 00:30:13,840
the recording and definitely if you

650
00:30:13,840 --> 00:30:15,279
haven't

651
00:30:15,279 --> 00:30:18,720
gone through the groupers algorithm

652
00:30:18,720 --> 00:30:22,320
go back to the recording for that

653
00:30:22,320 --> 00:30:25,360
also next weekend next

654
00:30:25,360 --> 00:30:28,159
sunday we have special classes so i

655
00:30:28,159 --> 00:30:29,200
won't be

656
00:30:29,200 --> 00:30:31,840
teaching a class like this not at the

657
00:30:31,840 --> 00:30:32,960
normal time

658
00:30:32,960 --> 00:30:36,640
so we have on thursday a female tech

659
00:30:36,640 --> 00:30:39,840
leaders event

660
00:30:39,840 --> 00:30:43,039
at this time this is on thursday so if

661
00:30:43,039 --> 00:30:44,320
you're interested i think you can

662
00:30:44,320 --> 00:30:45,600
register and

663
00:30:45,600 --> 00:30:48,960
listening but on sunday i will be given

664
00:30:48,960 --> 00:30:53,039
a workshop for the teens in ai

665
00:30:53,039 --> 00:30:56,159
and it will be a

666
00:30:56,159 --> 00:30:59,840
summary and revision for if you've been

667
00:30:59,840 --> 00:31:01,519
coming to this class then

668
00:31:01,519 --> 00:31:04,320
the material is not new to you but it's

669
00:31:04,320 --> 00:31:04,880
for

670
00:31:04,880 --> 00:31:07,360
teenagers and i will be showing a lot of

671
00:31:07,360 --> 00:31:08,720
the

672
00:31:08,720 --> 00:31:11,760
overviews and do some exercise there and

673
00:31:11,760 --> 00:31:12,559
the time

674
00:31:12,559 --> 00:31:15,440
is earlier than this time so i won't be

675
00:31:15,440 --> 00:31:16,240
giving

676
00:31:16,240 --> 00:31:20,240
a class again during this time next week

677
00:31:20,240 --> 00:31:22,559
and i don't think this one is open to

678
00:31:22,559 --> 00:31:23,519
public so

679
00:31:23,519 --> 00:31:26,080
i will ask the organizer to record it

680
00:31:26,080 --> 00:31:27,679
and if i can post it

681
00:31:27,679 --> 00:31:30,320
i'll post it on hackaday i will post a

682
00:31:30,320 --> 00:31:31,519
link there

683
00:31:31,519 --> 00:31:33,440
so if you want to join this one this

684
00:31:33,440 --> 00:31:35,919
one's open this one i can try to get the

685
00:31:35,919 --> 00:31:37,039
recording

686
00:31:37,039 --> 00:31:39,600
for you guys and yeah that's it and

687
00:31:39,600 --> 00:31:41,360
today

688
00:31:41,360 --> 00:31:44,720
is for next week remember don't

689
00:31:44,720 --> 00:31:47,679
dilate at this time because we're doing

690
00:31:47,679 --> 00:31:49,679
extra things

691
00:31:49,679 --> 00:31:53,120
okay thanks everyone

692
00:31:55,600 --> 00:31:59,360
let me see if there's any

693
00:31:59,360 --> 00:32:02,240
question here

694
00:32:10,720 --> 00:32:14,399
yeah sorry about the small screen but

695
00:32:14,399 --> 00:32:16,559
hopefully it was resolved you have to

696
00:32:16,559 --> 00:32:20,639
press ctrl plus to zoom in

697
00:32:20,880 --> 00:32:26,320
okay thank you so much

698
00:32:26,320 --> 00:32:29,840
have a good week

