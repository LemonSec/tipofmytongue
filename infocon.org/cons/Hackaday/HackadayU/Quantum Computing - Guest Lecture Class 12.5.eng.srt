1
00:00:00,000 --> 00:00:08,160
[Music]

2
00:00:08,160 --> 00:00:09,599
thank you everyone for

3
00:00:09,599 --> 00:00:12,960
joining us this is our 25th

4
00:00:12,960 --> 00:00:15,440
session of the quantum computing class

5
00:00:15,440 --> 00:00:16,960
at hackaday

6
00:00:16,960 --> 00:00:20,400
and this is also our fifth

7
00:00:20,400 --> 00:00:23,600
guest lecture and i'm gonna do a

8
00:00:23,600 --> 00:00:28,400
very quick introduction of the

9
00:00:28,480 --> 00:00:31,359
class and michael in a bit this is our

10
00:00:31,359 --> 00:00:32,719
last class actually

11
00:00:32,719 --> 00:00:35,680
welcome everyone and welcome back our

12
00:00:35,680 --> 00:00:37,280
season finale

13
00:00:37,280 --> 00:00:40,879
uh where we spent since the last

14
00:00:40,879 --> 00:00:44,000
week of march we've been having this

15
00:00:44,000 --> 00:00:47,039
class and as you see is already being

16
00:00:47,039 --> 00:00:48,239
25th

17
00:00:48,239 --> 00:00:50,640
every almost every sunday since the

18
00:00:50,640 --> 00:00:52,239
pandemic started

19
00:00:52,239 --> 00:00:54,640
and kudos to everyone who's been coming

20
00:00:54,640 --> 00:00:55,520
to the class

21
00:00:55,520 --> 00:00:58,239
and you've experienced a lot during the

22
00:00:58,239 --> 00:00:58,800
past

23
00:00:58,800 --> 00:01:02,000
few months and we covered a lot of

24
00:01:02,000 --> 00:01:02,960
materials

25
00:01:02,960 --> 00:01:05,600
about quantum computing from the basic

26
00:01:05,600 --> 00:01:06,400
concepts

27
00:01:06,400 --> 00:01:10,320
physics and to the algorithms

28
00:01:10,320 --> 00:01:13,439
linear algebra and also some

29
00:01:13,439 --> 00:01:16,799
hardware concepts and today's class

30
00:01:16,799 --> 00:01:20,000
is one of the most interesting topics as

31
00:01:20,000 --> 00:01:21,439
we were discussing

32
00:01:21,439 --> 00:01:24,880
a lot of the previous concepts earlier

33
00:01:24,880 --> 00:01:26,960
so i'm gonna introduce michael in a

34
00:01:26,960 --> 00:01:28,000
little bit

35
00:01:28,000 --> 00:01:31,680
so just for anyone who uh every time

36
00:01:31,680 --> 00:01:35,200
every sunday we have some newcomers so

37
00:01:35,200 --> 00:01:37,600
welcome to anyone who's new and this is

38
00:01:37,600 --> 00:01:38,720
the last class

39
00:01:38,720 --> 00:01:41,680
if you missed anything we have all of

40
00:01:41,680 --> 00:01:43,840
the recording and slides on the

41
00:01:43,840 --> 00:01:46,600
hackaday project so if you search on

42
00:01:46,600 --> 00:01:47,920
hackaday.io

43
00:01:47,920 --> 00:01:50,960
for comics on

44
00:01:50,960 --> 00:01:53,759
computing through comics you find the

45
00:01:53,759 --> 00:01:54,799
recording of

46
00:01:54,799 --> 00:01:58,320
a topic that we discussed on sunday

47
00:01:58,320 --> 00:02:00,640
and we'll be using the microsoft q sharp

48
00:02:00,640 --> 00:02:02,880
documentation as well as the quantum

49
00:02:02,880 --> 00:02:03,600
cutters

50
00:02:03,600 --> 00:02:05,759
in our exercises so we have some coding

51
00:02:05,759 --> 00:02:08,318
classes too

52
00:02:08,318 --> 00:02:11,599
so as a lot of people know since

53
00:02:11,599 --> 00:02:13,200
september we've been having guest

54
00:02:13,200 --> 00:02:14,879
lectures and we have

55
00:02:14,879 --> 00:02:17,840
five special topics well we covered

56
00:02:17,840 --> 00:02:19,920
cryptography tomography

57
00:02:19,920 --> 00:02:22,959
uh kyusha communities project q pro

58
00:02:22,959 --> 00:02:25,680
and quantum machine learning so today we

59
00:02:25,680 --> 00:02:26,080
have

60
00:02:26,080 --> 00:02:29,520
michael beverland dr michael biblen

61
00:02:29,520 --> 00:02:31,599
talking about quantum error correction

62
00:02:31,599 --> 00:02:33,680
so michael is actually my colleague at

63
00:02:33,680 --> 00:02:34,800
microsoft

64
00:02:34,800 --> 00:02:36,319
welcome and thank you michael for

65
00:02:36,319 --> 00:02:38,319
joining us today so mike

66
00:02:38,319 --> 00:02:40,560
michael is a senior researcher at

67
00:02:40,560 --> 00:02:42,480
microsoft quantum

68
00:02:42,480 --> 00:02:45,120
and he specializes in quantum error

69
00:02:45,120 --> 00:02:46,000
correction

70
00:02:46,000 --> 00:02:48,080
a lot of and fault tolerance and a lot

71
00:02:48,080 --> 00:02:50,080
of the

72
00:02:50,080 --> 00:02:53,120
questions we got during the past few

73
00:02:53,120 --> 00:02:54,400
months

74
00:02:54,400 --> 00:03:00,000
mathematically but um i'm going to note

75
00:03:02,840 --> 00:03:05,760
cool yeah this happens

76
00:03:05,760 --> 00:03:09,519
in a quantum computer you can't create

77
00:03:09,519 --> 00:03:12,959
um oh let's give it a like

78
00:03:14,319 --> 00:03:18,159
this is funny cool um

79
00:03:18,159 --> 00:03:20,720
yeah but today's lecture is michael so

80
00:03:20,720 --> 00:03:22,400
we'll be talking about

81
00:03:22,400 --> 00:03:24,959
quantum error correction uh in the last

82
00:03:24,959 --> 00:03:26,959
few months when we

83
00:03:26,959 --> 00:03:30,720
talked about measurements and hardware

84
00:03:30,720 --> 00:03:33,519
we always had questions about how do we

85
00:03:33,519 --> 00:03:34,959
actually make sure

86
00:03:34,959 --> 00:03:38,080
what we are measuring are what we intend

87
00:03:38,080 --> 00:03:38,560
to

88
00:03:38,560 --> 00:03:41,680
and by measuring we also

89
00:03:41,680 --> 00:03:44,959
disturb the system so how do we correct

90
00:03:44,959 --> 00:03:47,040
the errors that might be introduced

91
00:03:47,040 --> 00:03:48,400
during measurements

92
00:03:48,400 --> 00:03:51,440
and micro uh provided a very interesting

93
00:03:51,440 --> 00:03:55,360
abstract so um like in our everyday life

94
00:03:55,360 --> 00:03:56,799
we don't see things like

95
00:03:56,799 --> 00:04:00,400
shorting just cats in both dead and

96
00:04:00,400 --> 00:04:03,680
alive so uh how is

97
00:04:03,680 --> 00:04:07,280
this affecting our observation due to

98
00:04:07,280 --> 00:04:11,040
the coherence and um

99
00:04:11,040 --> 00:04:13,920
how is superposition states being

100
00:04:13,920 --> 00:04:14,720
collapsed

101
00:04:14,720 --> 00:04:18,079
into any sub states

102
00:04:18,079 --> 00:04:21,358
so today's topic will be around that

103
00:04:21,358 --> 00:04:23,919
and i'm very looking forward to micros

104
00:04:23,919 --> 00:04:25,120
lecture

105
00:04:25,120 --> 00:04:28,240
and then just before everyone forgets

106
00:04:28,240 --> 00:04:31,600
all of our class recording

107
00:04:31,600 --> 00:04:35,040
and slides are all posted on hackaday

108
00:04:35,040 --> 00:04:38,000
and also shortly after the class it will

109
00:04:38,000 --> 00:04:39,280
be on my youtube

110
00:04:39,280 --> 00:04:41,759
and hackaday also has a playlist that

111
00:04:41,759 --> 00:04:42,479
they are

112
00:04:42,479 --> 00:04:46,080
gradually uploading the past recordings

113
00:04:46,080 --> 00:04:47,840
and of course if you like anything

114
00:04:47,840 --> 00:04:49,680
physical we have the book

115
00:04:49,680 --> 00:04:52,960
that's i published the book through uh

116
00:04:52,960 --> 00:04:56,160
making this class actually the all the

117
00:04:56,160 --> 00:04:59,440
topics except the guest lectures

118
00:04:59,440 --> 00:05:00,880
are all in this book if you're

119
00:05:00,880 --> 00:05:02,720
interested it's a way to bring

120
00:05:02,720 --> 00:05:06,240
13 markets on amazon

121
00:05:06,240 --> 00:05:09,440
and stay up to date

122
00:05:09,440 --> 00:05:11,759
even after today's class we will have

123
00:05:11,759 --> 00:05:14,160
updates on microsoft website

124
00:05:14,160 --> 00:05:17,280
and some people are here due to the

125
00:05:17,280 --> 00:05:18,800
microsoft reactor

126
00:05:18,800 --> 00:05:21,520
promotions and make sure you follow

127
00:05:21,520 --> 00:05:22,000
these

128
00:05:22,000 --> 00:05:24,320
meetup groups by the reactor and sign up

129
00:05:24,320 --> 00:05:25,440
for their mailing list

130
00:05:25,440 --> 00:05:29,120
for their upcoming events and

131
00:05:29,120 --> 00:05:32,800
when we have updates upcoming events or

132
00:05:32,800 --> 00:05:35,360
any new materials that we are

133
00:05:35,360 --> 00:05:38,080
introducing we'll be posting them

134
00:05:38,080 --> 00:05:41,360
on the hackaday project so definitely

135
00:05:41,360 --> 00:05:42,720
follow that

136
00:05:42,720 --> 00:05:45,919
and a final reminder of the

137
00:05:45,919 --> 00:05:48,960
ms learn modules that microsoft produces

138
00:05:48,960 --> 00:05:51,039
for you to get hands-on with quantum

139
00:05:51,039 --> 00:05:53,199
computing so check out these links

140
00:05:53,199 --> 00:05:55,680
i'll be posting the slide with the links

141
00:05:55,680 --> 00:05:57,440
on hacker day

142
00:05:57,440 --> 00:05:59,520
after this and of course the usual

143
00:05:59,520 --> 00:06:00,479
suspects of

144
00:06:00,479 --> 00:06:02,479
the social media posts if you want to

145
00:06:02,479 --> 00:06:04,160
see anything

146
00:06:04,160 --> 00:06:06,639
right when they're published all right

147
00:06:06,639 --> 00:06:08,240
thank you everyone

148
00:06:08,240 --> 00:06:11,680
let's welcome michael

149
00:06:12,400 --> 00:06:15,039
hey everybody thanks a lot and uh thanks

150
00:06:15,039 --> 00:06:15,840
kitty for the

151
00:06:15,840 --> 00:06:18,319
introduction and yeah it's really cool

152
00:06:18,319 --> 00:06:19,600
to be a part of this project

153
00:06:19,600 --> 00:06:21,919
it's something that i think is is really

154
00:06:21,919 --> 00:06:23,759
awesome that you've put together and

155
00:06:23,759 --> 00:06:26,479
it's an honor to be there the final

156
00:06:26,479 --> 00:06:28,880
speaker of the series so

157
00:06:28,880 --> 00:06:30,960
um that's great i'm just gonna share

158
00:06:30,960 --> 00:06:33,600
some slides here

159
00:06:33,600 --> 00:06:37,360
so that'll take just a second

160
00:06:42,720 --> 00:06:45,280
okay

161
00:06:47,360 --> 00:06:48,880
so as kitty mentioned we're going to be

162
00:06:48,880 --> 00:06:50,880
talking about quantum era correction and

163
00:06:50,880 --> 00:06:54,319
and i do think that the the big picture

164
00:06:54,319 --> 00:06:56,800
way to think about this is really you

165
00:06:56,800 --> 00:06:57,759
know you've

166
00:06:57,759 --> 00:07:00,000
you've all heard of schrodinger's cat

167
00:07:00,000 --> 00:07:00,880
and

168
00:07:00,880 --> 00:07:04,319
about the bizarre quantum effects that

169
00:07:04,319 --> 00:07:06,560
um exist in the quantum world but

170
00:07:06,560 --> 00:07:07,599
quantum mechanics

171
00:07:07,599 --> 00:07:10,080
is what we believe or our best

172
00:07:10,080 --> 00:07:11,440
understanding of how

173
00:07:11,440 --> 00:07:13,919
the universe really works and so why is

174
00:07:13,919 --> 00:07:15,840
it that we don't see these quantum

175
00:07:15,840 --> 00:07:17,520
effects in our everyday life if that's

176
00:07:17,520 --> 00:07:19,759
what's going on at a fundamental level

177
00:07:19,759 --> 00:07:21,919
why are we not experiencing quantum

178
00:07:21,919 --> 00:07:23,360
superpositions like

179
00:07:23,360 --> 00:07:27,039
like schrodinger's cap and and moreover

180
00:07:27,039 --> 00:07:30,000
this quest that we're all along to build

181
00:07:30,000 --> 00:07:32,639
a functioning scalable quantum computer

182
00:07:32,639 --> 00:07:35,039
in some senses it's like building

183
00:07:35,039 --> 00:07:36,479
schrodinger's cat

184
00:07:36,479 --> 00:07:39,199
we want to you know we have we know that

185
00:07:39,199 --> 00:07:40,720
quantum mechanics is how things work at

186
00:07:40,720 --> 00:07:42,000
a small scale and

187
00:07:42,000 --> 00:07:44,000
and indeed you need quantum mechanics in

188
00:07:44,000 --> 00:07:45,440
order to be able to predict

189
00:07:45,440 --> 00:07:48,560
behavior of atoms and molecules and

190
00:07:48,560 --> 00:07:49,919
but what we want to do is we want to

191
00:07:49,919 --> 00:07:51,680
build a huge quantum system

192
00:07:51,680 --> 00:07:53,520
which exhibits these same quantum

193
00:07:53,520 --> 00:07:55,599
effects unspoiled

194
00:07:55,599 --> 00:07:58,960
and of course the reason for

195
00:07:58,960 --> 00:08:01,599
the reason that we don't see these giant

196
00:08:01,599 --> 00:08:02,560
um

197
00:08:02,560 --> 00:08:04,560
superposition states and we don't see

198
00:08:04,560 --> 00:08:06,479
these entangled

199
00:08:06,479 --> 00:08:09,039
um properties that we have at the small

200
00:08:09,039 --> 00:08:10,800
scale of quantum systems

201
00:08:10,800 --> 00:08:12,560
in the everyday world the reason for

202
00:08:12,560 --> 00:08:14,400
that of course is that

203
00:08:14,400 --> 00:08:16,720
the coherence is happening and that's

204
00:08:16,720 --> 00:08:18,400
really what we want to prevent with one

205
00:08:18,400 --> 00:08:20,319
america correction

206
00:08:20,319 --> 00:08:22,319
so today i'm gonna i'm gonna talk

207
00:08:22,319 --> 00:08:23,440
through

208
00:08:23,440 --> 00:08:25,599
the big picture of this field how we

209
00:08:25,599 --> 00:08:26,879
think about things some of the

210
00:08:26,879 --> 00:08:28,400
strategies that are used

211
00:08:28,400 --> 00:08:31,599
to to protect information from noise and

212
00:08:31,599 --> 00:08:32,719
to build out

213
00:08:32,719 --> 00:08:34,719
a large scale quantum computer and i'm

214
00:08:34,719 --> 00:08:35,760
also gonna

215
00:08:35,760 --> 00:08:38,240
because this is the last in in a series

216
00:08:38,240 --> 00:08:39,120
of um

217
00:08:39,120 --> 00:08:40,640
different topics that kitty has covered

218
00:08:40,640 --> 00:08:42,559
and other guest speakers

219
00:08:42,559 --> 00:08:44,320
i'm going to assume a fair bit of

220
00:08:44,320 --> 00:08:46,800
knowledge and but i'll try to not assume

221
00:08:46,800 --> 00:08:48,080
any of the standard

222
00:08:48,080 --> 00:08:51,440
topics in quantum error correction

223
00:08:51,440 --> 00:08:53,360
also if there are any points where

224
00:08:53,360 --> 00:08:55,120
people are confused then i don't know

225
00:08:55,120 --> 00:08:56,480
exactly what's been taught in the

226
00:08:56,480 --> 00:08:58,080
previous um

227
00:08:58,080 --> 00:08:59,680
classes as well so if there are things

228
00:08:59,680 --> 00:09:02,080
which are which i'm assuming which i

229
00:09:02,080 --> 00:09:03,920
should not have assumed feel free to

230
00:09:03,920 --> 00:09:06,800
jump in and ping me and ask a question

231
00:09:06,800 --> 00:09:10,160
okay so the basic idea of of um quantum

232
00:09:10,160 --> 00:09:11,120
error correction is

233
00:09:11,120 --> 00:09:12,880
encapsulated encapsulated in this

234
00:09:12,880 --> 00:09:14,240
picture

235
00:09:14,240 --> 00:09:16,320
we know that these qubits that we have

236
00:09:16,320 --> 00:09:18,080
which are represented by black circles

237
00:09:18,080 --> 00:09:18,480
here

238
00:09:18,480 --> 00:09:21,440
or black disks are are going to be noisy

239
00:09:21,440 --> 00:09:23,120
which is represented by these

240
00:09:23,120 --> 00:09:25,839
little blue clouds around them and so

241
00:09:25,839 --> 00:09:26,800
the idea is that

242
00:09:26,800 --> 00:09:29,200
we're going to hope that we can you know

243
00:09:29,200 --> 00:09:30,560
accept they're going to be noisy but we

244
00:09:30,560 --> 00:09:32,160
can hope that we can somehow get

245
00:09:32,160 --> 00:09:34,800
a large number of them and using a large

246
00:09:34,800 --> 00:09:37,040
number of noisy qubits

247
00:09:37,040 --> 00:09:40,160
trade that for a single

248
00:09:40,160 --> 00:09:43,360
much less noisy logical qubit

249
00:09:43,360 --> 00:09:45,279
and then the logical qubit is what we

250
00:09:45,279 --> 00:09:47,440
will run the quantum computer on

251
00:09:47,440 --> 00:09:48,880
and so the point is that the number of

252
00:09:48,880 --> 00:09:50,480
logical qubits will be less than the

253
00:09:50,480 --> 00:09:52,560
physical qubits we start with

254
00:09:52,560 --> 00:09:54,640
but of course the probability of each of

255
00:09:54,640 --> 00:09:55,680
those failing

256
00:09:55,680 --> 00:09:57,760
will also be less and that's why we

257
00:09:57,760 --> 00:09:58,880
would do this

258
00:09:58,880 --> 00:10:00,399
so you can think about it a little bit

259
00:10:00,399 --> 00:10:02,560
like an emulator for

260
00:10:02,560 --> 00:10:05,600
for a computer if you grew up with that

261
00:10:05,600 --> 00:10:07,760
you know some old computer console that

262
00:10:07,760 --> 00:10:09,519
you want to use today on your regular

263
00:10:09,519 --> 00:10:10,480
computer and you can

264
00:10:10,480 --> 00:10:12,240
you can emulate that on your regular

265
00:10:12,240 --> 00:10:14,079
computer and in some sense what we want

266
00:10:14,079 --> 00:10:15,120
to do is

267
00:10:15,120 --> 00:10:17,279
with a large number of physical qubits

268
00:10:17,279 --> 00:10:18,640
emulate a perfect

269
00:10:18,640 --> 00:10:23,360
qubit so how perfect does it need to be

270
00:10:23,360 --> 00:10:25,360
well the encoded information doesn't

271
00:10:25,360 --> 00:10:26,959
have to be absolutely perfect it just

272
00:10:26,959 --> 00:10:28,399
needs to be good enough

273
00:10:28,399 --> 00:10:30,399
so that for the particular quantum

274
00:10:30,399 --> 00:10:32,399
algorithm that you want to run

275
00:10:32,399 --> 00:10:36,000
it it will succeed with high probability

276
00:10:36,000 --> 00:10:38,240
so what you can imagine is suppose that

277
00:10:38,240 --> 00:10:40,000
the quantum circuit that you want to run

278
00:10:40,000 --> 00:10:41,760
maybe it implements shores algorithm or

279
00:10:41,760 --> 00:10:44,480
something else suppose it has a certain

280
00:10:44,480 --> 00:10:47,120
it consists of a number of qubits and a

281
00:10:47,120 --> 00:10:48,000
number of

282
00:10:48,000 --> 00:10:51,600
operations so you can think all of the

283
00:10:51,600 --> 00:10:53,360
operations that happen in this entire

284
00:10:53,360 --> 00:10:55,839
computer we can think of as the circuit

285
00:10:55,839 --> 00:10:56,800
size

286
00:10:56,800 --> 00:11:00,000
and what we want is we want that with

287
00:11:00,000 --> 00:11:02,480
reasonable probability none of those

288
00:11:02,480 --> 00:11:03,040
different

289
00:11:03,040 --> 00:11:06,480
pieces of the circuit will fail this is

290
00:11:06,480 --> 00:11:08,880
this is going to be satisfied roughly

291
00:11:08,880 --> 00:11:09,760
speaking

292
00:11:09,760 --> 00:11:12,160
if the probability of each component

293
00:11:12,160 --> 00:11:13,040
failing

294
00:11:13,040 --> 00:11:16,399
is at most one divided by the total

295
00:11:16,399 --> 00:11:19,120
number of things in the circuit

296
00:11:19,120 --> 00:11:20,800
then probably nothing will go wrong

297
00:11:20,800 --> 00:11:22,480
whenever we run it

298
00:11:22,480 --> 00:11:24,079
this is just a back of the envelope way

299
00:11:24,079 --> 00:11:27,120
of thinking about it of course

300
00:11:27,440 --> 00:11:29,760
okay so something before we get into the

301
00:11:29,760 --> 00:11:30,959
the details of this is

302
00:11:30,959 --> 00:11:34,160
i i want to mention two terms error

303
00:11:34,160 --> 00:11:35,920
correction quantum error correction and

304
00:11:35,920 --> 00:11:37,040
fault tolerance

305
00:11:37,040 --> 00:11:39,600
and these terms are often interchanged

306
00:11:39,600 --> 00:11:41,600
whenever you read about things in

307
00:11:41,600 --> 00:11:43,839
popular media and also i in fact often

308
00:11:43,839 --> 00:11:45,200
interchange whenever you read about

309
00:11:45,200 --> 00:11:46,240
things in

310
00:11:46,240 --> 00:11:49,120
in quantum error correction or sorry in

311
00:11:49,120 --> 00:11:50,800
quantum computing articles

312
00:11:50,800 --> 00:11:52,880
that are not focused on quantum era

313
00:11:52,880 --> 00:11:54,399
corrections specifically

314
00:11:54,399 --> 00:11:56,399
and i just want to highlight that these

315
00:11:56,399 --> 00:11:57,519
things are a little bit different from

316
00:11:57,519 --> 00:11:58,959
one another and we'll come back to this

317
00:11:58,959 --> 00:11:59,600
later

318
00:11:59,600 --> 00:12:01,440
but quantum era correction is kind of an

319
00:12:01,440 --> 00:12:02,639
ideal setting

320
00:12:02,639 --> 00:12:04,800
and it's it's where we come up with toy

321
00:12:04,800 --> 00:12:06,480
models essentially for

322
00:12:06,480 --> 00:12:09,040
for what we really want to do fall

323
00:12:09,040 --> 00:12:10,320
tolerance is really

324
00:12:10,320 --> 00:12:11,920
what we actually want to build we want

325
00:12:11,920 --> 00:12:13,200
to build quantum computers that are

326
00:12:13,200 --> 00:12:14,079
fault tolerant

327
00:12:14,079 --> 00:12:15,920
and just as a rough idea of what the

328
00:12:15,920 --> 00:12:17,519
difference between these two things

329
00:12:17,519 --> 00:12:19,839
are if you're familiar with the more

330
00:12:19,839 --> 00:12:21,519
computer science way of thinking

331
00:12:21,519 --> 00:12:22,880
quantum era correction is a little bit

332
00:12:22,880 --> 00:12:25,040
like an oracle

333
00:12:25,040 --> 00:12:27,600
in computer science where in fact you

334
00:12:27,600 --> 00:12:28,959
imagine that you have some

335
00:12:28,959 --> 00:12:31,120
extra power that we don't really have in

336
00:12:31,120 --> 00:12:32,079
the real world

337
00:12:32,079 --> 00:12:35,440
to measure things perfectly and so we

338
00:12:35,440 --> 00:12:36,959
can measure perfectly

339
00:12:36,959 --> 00:12:39,200
different parts of the physical system

340
00:12:39,200 --> 00:12:41,120
and use those measurements to learn

341
00:12:41,120 --> 00:12:41,680
about

342
00:12:41,680 --> 00:12:44,880
noise which has occurred and

343
00:12:44,880 --> 00:12:46,800
however just like oracle's in computer

344
00:12:46,800 --> 00:12:48,160
science

345
00:12:48,160 --> 00:12:50,639
in reality we don't have that power and

346
00:12:50,639 --> 00:12:51,440
so what

347
00:12:51,440 --> 00:12:53,279
actually we need to do is have full

348
00:12:53,279 --> 00:12:55,120
tolerance schemes to find out

349
00:12:55,120 --> 00:12:58,480
um about noise in the system where

350
00:12:58,480 --> 00:13:00,959
tests that we use to identify the noise

351
00:13:00,959 --> 00:13:02,880
can also go wrong

352
00:13:02,880 --> 00:13:05,680
and that's really what we need and but

353
00:13:05,680 --> 00:13:06,000
anyway

354
00:13:06,000 --> 00:13:07,760
don't worry too much if this didn't make

355
00:13:07,760 --> 00:13:09,120
a lot of sense at this stage we'll come

356
00:13:09,120 --> 00:13:11,920
back to that later

357
00:13:13,279 --> 00:13:17,120
okay so what's the rough idea

358
00:13:17,120 --> 00:13:18,720
so let's think about the non-quantum

359
00:13:18,720 --> 00:13:20,240
case first

360
00:13:20,240 --> 00:13:22,560
so you can of course imagine a scenario

361
00:13:22,560 --> 00:13:24,320
where some information needs to be sent

362
00:13:24,320 --> 00:13:25,680
from one place to another

363
00:13:25,680 --> 00:13:27,440
but there's going to be some noise which

364
00:13:27,440 --> 00:13:29,040
occurs which causes the information to

365
00:13:29,040 --> 00:13:30,240
be corrupted

366
00:13:30,240 --> 00:13:32,079
for example imagine if you have a space

367
00:13:32,079 --> 00:13:33,839
probe and as it gets further and further

368
00:13:33,839 --> 00:13:34,720
from earth

369
00:13:34,720 --> 00:13:36,800
the signal becomes weaker and weaker and

370
00:13:36,800 --> 00:13:38,639
then every time the space probe wants to

371
00:13:38,639 --> 00:13:40,720
send back some important scientific data

372
00:13:40,720 --> 00:13:41,600
to earth

373
00:13:41,600 --> 00:13:43,199
there's a possibility that that

374
00:13:43,199 --> 00:13:45,680
information will be corrupted

375
00:13:45,680 --> 00:13:48,880
so a simple model is that the the probe

376
00:13:48,880 --> 00:13:50,880
sends you ones and zeros

377
00:13:50,880 --> 00:13:53,279
and which encode the information and

378
00:13:53,279 --> 00:13:54,000
that each

379
00:13:54,000 --> 00:13:56,240
of those bits that it's sent could be

380
00:13:56,240 --> 00:13:59,440
flipped with some probability p

381
00:13:59,440 --> 00:14:01,040
so what's the solution to this well

382
00:14:01,040 --> 00:14:02,880
they're a simple solution that you

383
00:14:02,880 --> 00:14:03,360
probably

384
00:14:03,360 --> 00:14:06,480
already thought of is instead of sending

385
00:14:06,480 --> 00:14:07,600
a single bit

386
00:14:07,600 --> 00:14:09,279
for each bit of information that you

387
00:14:09,279 --> 00:14:11,199
want to convey that space proof wants to

388
00:14:11,199 --> 00:14:12,399
send back to earth

389
00:14:12,399 --> 00:14:16,800
send a repeated set of bits

390
00:14:16,800 --> 00:14:18,959
and then so for example instead of

391
00:14:18,959 --> 00:14:20,800
sending zero send zero zero zero and

392
00:14:20,800 --> 00:14:23,839
instead of sending one send one one one

393
00:14:23,839 --> 00:14:25,920
and we can call the bits that we send

394
00:14:25,920 --> 00:14:27,040
physical bits

395
00:14:27,040 --> 00:14:28,880
and the bits that we actually want to

396
00:14:28,880 --> 00:14:31,120
convey the message logical bits and this

397
00:14:31,120 --> 00:14:31,839
will

398
00:14:31,839 --> 00:14:33,440
have a parallel with the quantum case

399
00:14:33,440 --> 00:14:35,440
later

400
00:14:35,440 --> 00:14:37,120
so how does this work well of course the

401
00:14:37,120 --> 00:14:39,279
receiver might receive zero zero zero

402
00:14:39,279 --> 00:14:40,800
and identify that the message

403
00:14:40,800 --> 00:14:43,040
that was supposed to be sent was a zero

404
00:14:43,040 --> 00:14:44,160
but it also

405
00:14:44,160 --> 00:14:47,279
could receive zero zero one and that

406
00:14:47,279 --> 00:14:47,920
would

407
00:14:47,920 --> 00:14:50,320
be interpreted as the third bit that was

408
00:14:50,320 --> 00:14:51,360
sent was

409
00:14:51,360 --> 00:14:54,399
flipped but

410
00:14:54,399 --> 00:14:57,680
then of course it would be identified as

411
00:14:57,680 --> 00:14:58,160
um

412
00:14:58,160 --> 00:15:01,040
the intention being sent was a was a

413
00:15:01,040 --> 00:15:02,160
zero zero zero

414
00:15:02,160 --> 00:15:05,519
with a bit flip

415
00:15:05,920 --> 00:15:08,240
and so you can work out the probability

416
00:15:08,240 --> 00:15:10,320
of still getting the answer wrong even

417
00:15:10,320 --> 00:15:10,880
though you're

418
00:15:10,880 --> 00:15:13,519
encoding information in this way and of

419
00:15:13,519 --> 00:15:15,199
course you can get things wrong whenever

420
00:15:15,199 --> 00:15:17,760
two bits flip

421
00:15:17,760 --> 00:15:19,519
and so that does happen but it happens

422
00:15:19,519 --> 00:15:22,079
with lower probability provided p is

423
00:15:22,079 --> 00:15:24,399
relatively small

424
00:15:24,399 --> 00:15:27,519
so for example if you had p being about

425
00:15:27,519 --> 00:15:28,639
one percent

426
00:15:28,639 --> 00:15:31,040
then the probability that there would be

427
00:15:31,040 --> 00:15:31,759
a

428
00:15:31,759 --> 00:15:35,040
logical failure would be about 30 times

429
00:15:35,040 --> 00:15:37,040
less than that so you indeed gain from

430
00:15:37,040 --> 00:15:39,279
this

431
00:15:39,759 --> 00:15:42,480
and if you want

432
00:15:43,279 --> 00:15:46,720
if you want you can um you can make it

433
00:15:46,720 --> 00:15:47,519
even better

434
00:15:47,519 --> 00:15:49,759
so you can instead of using three bits

435
00:15:49,759 --> 00:15:50,720
instead of one

436
00:15:50,720 --> 00:15:52,800
you can use an arbitrary number of bits

437
00:15:52,800 --> 00:15:54,000
instead of one

438
00:15:54,000 --> 00:15:56,560
and do the same thing and you'll get a

439
00:15:56,560 --> 00:15:58,320
lower and lower probability of things

440
00:15:58,320 --> 00:15:59,199
going wrong

441
00:15:59,199 --> 00:16:02,240
so here i've just shown a curve of the

442
00:16:02,240 --> 00:16:04,880
probability over failure

443
00:16:04,880 --> 00:16:07,440
the probability of a failure whenever

444
00:16:07,440 --> 00:16:08,399
you have

445
00:16:08,399 --> 00:16:10,480
some the probability of a logical

446
00:16:10,480 --> 00:16:11,680
failure of your message whenever you

447
00:16:11,680 --> 00:16:13,519
have some probability of a failure on

448
00:16:13,519 --> 00:16:13,759
the

449
00:16:13,759 --> 00:16:16,079
on the x-axis of the actual bits each

450
00:16:16,079 --> 00:16:17,519
bit individually

451
00:16:17,519 --> 00:16:19,360
and and if you want to get a really

452
00:16:19,360 --> 00:16:22,160
accurate and final result then the

453
00:16:22,160 --> 00:16:24,079
overall probability

454
00:16:24,079 --> 00:16:26,800
of 10 to the minus 10 for example then

455
00:16:26,800 --> 00:16:29,040
you might need hundreds of thousands of

456
00:16:29,040 --> 00:16:32,160
bits to encode that information given

457
00:16:32,160 --> 00:16:34,800
um these values of p here and if you

458
00:16:34,800 --> 00:16:35,600
want

459
00:16:35,600 --> 00:16:37,440
even more accuracy then of course you

460
00:16:37,440 --> 00:16:38,720
need more bits to encode that

461
00:16:38,720 --> 00:16:40,160
information so this should all make

462
00:16:40,160 --> 00:16:41,360
rough sense

463
00:16:41,360 --> 00:16:43,440
and there's one point here that i want

464
00:16:43,440 --> 00:16:44,639
to point out where

465
00:16:44,639 --> 00:16:46,560
if each bit is flipped with probability

466
00:16:46,560 --> 00:16:49,199
one half then you're really beyond hope

467
00:16:49,199 --> 00:16:51,040
there's no there's no way of encoding

468
00:16:51,040 --> 00:16:52,320
any information and

469
00:16:52,320 --> 00:16:56,399
in that case okay so what about the

470
00:16:56,399 --> 00:16:58,560
quantum case that was all for this um

471
00:16:58,560 --> 00:17:01,199
non-quantum case so there are some

472
00:17:01,199 --> 00:17:02,320
challenges that

473
00:17:02,320 --> 00:17:05,439
that were clear at the um at the outset

474
00:17:05,439 --> 00:17:06,799
of the field of quantum computing and

475
00:17:06,799 --> 00:17:08,400
actually led many people to believe that

476
00:17:08,400 --> 00:17:10,240
quantum computing would never

477
00:17:10,240 --> 00:17:12,880
actually be possible or practical and

478
00:17:12,880 --> 00:17:14,160
the first

479
00:17:14,160 --> 00:17:17,199
one is that it's not the case where you

480
00:17:17,199 --> 00:17:18,319
know whereas this

481
00:17:18,319 --> 00:17:20,400
scenario we're describing before was for

482
00:17:20,400 --> 00:17:21,520
a satellite that was

483
00:17:21,520 --> 00:17:23,679
or a space probe that was moving further

484
00:17:23,679 --> 00:17:25,039
and further from earth

485
00:17:25,039 --> 00:17:28,400
and so there it seems that the classical

486
00:17:28,400 --> 00:17:30,080
information needed protected because it

487
00:17:30,080 --> 00:17:31,679
was getting weaker and weaker

488
00:17:31,679 --> 00:17:33,840
in the quantum case we don't just just

489
00:17:33,840 --> 00:17:35,120
need to protect

490
00:17:35,120 --> 00:17:38,080
the quantum information in very

491
00:17:38,080 --> 00:17:39,520
contrived

492
00:17:39,520 --> 00:17:42,559
scenarios of elevated noise like that we

493
00:17:42,559 --> 00:17:44,160
actually need to protect the information

494
00:17:44,160 --> 00:17:47,840
all the time

495
00:17:48,320 --> 00:17:49,840
and part of the reason for that is that

496
00:17:49,840 --> 00:17:51,600
there's just more that can go wrong

497
00:17:51,600 --> 00:17:55,039
for the quantum system so for example

498
00:17:55,039 --> 00:17:57,039
if you have a quantum state which is

499
00:17:57,039 --> 00:17:59,039
alpha zero plus beta1

500
00:17:59,039 --> 00:18:01,200
and so this is an arbitrary and single

501
00:18:01,200 --> 00:18:02,640
qubit state

502
00:18:02,640 --> 00:18:05,679
then there's a huge number of ways that

503
00:18:05,679 --> 00:18:07,200
this could go wrong

504
00:18:07,200 --> 00:18:08,799
in the in the classical case if you have

505
00:18:08,799 --> 00:18:10,240
a bit which is zero

506
00:18:10,240 --> 00:18:12,160
then it could be flipped to one or not

507
00:18:12,160 --> 00:18:14,000
flipped and those are the only two

508
00:18:14,000 --> 00:18:16,400
possibilities but in the case of the

509
00:18:16,400 --> 00:18:18,080
quantum state then it can change

510
00:18:18,080 --> 00:18:19,520
alpha and beta can change by an

511
00:18:19,520 --> 00:18:21,280
arbitrary amount or you can have

512
00:18:21,280 --> 00:18:22,160
something like

513
00:18:22,160 --> 00:18:25,200
just a phase change between the two so

514
00:18:25,200 --> 00:18:27,120
it doesn't change the overall magnitude

515
00:18:27,120 --> 00:18:28,720
or the overall probability of measuring

516
00:18:28,720 --> 00:18:29,520
zero or one

517
00:18:29,520 --> 00:18:31,679
but it does change the state and so

518
00:18:31,679 --> 00:18:33,120
there are many many ways

519
00:18:33,120 --> 00:18:35,440
an infinite number of ways in fact that

520
00:18:35,440 --> 00:18:36,400
a quantum

521
00:18:36,400 --> 00:18:38,640
state could be corrupted by noise

522
00:18:38,640 --> 00:18:40,080
whereas there's only one way

523
00:18:40,080 --> 00:18:41,919
that a piece of classical information

524
00:18:41,919 --> 00:18:43,520
could be corrupted

525
00:18:43,520 --> 00:18:46,960
by being flipped and the other thing is

526
00:18:46,960 --> 00:18:48,400
that

527
00:18:48,400 --> 00:18:51,039
measuring the system destroys the state

528
00:18:51,039 --> 00:18:51,600
so

529
00:18:51,600 --> 00:18:54,320
it makes it hard to imagine a scenario

530
00:18:54,320 --> 00:18:54,960
where

531
00:18:54,960 --> 00:18:58,480
we can somehow make sure that

532
00:18:58,480 --> 00:19:00,320
errors have not occurred or fixed errors

533
00:19:00,320 --> 00:19:02,320
as we go because if we want to check

534
00:19:02,320 --> 00:19:04,640
the system then we're going to measure

535
00:19:04,640 --> 00:19:06,320
it and we know that in quantum mechanics

536
00:19:06,320 --> 00:19:08,000
when we make measurements we collapse

537
00:19:08,000 --> 00:19:10,240
the state

538
00:19:10,240 --> 00:19:12,960
so how so that seems difficult to to get

539
00:19:12,960 --> 00:19:13,919
around that

540
00:19:13,919 --> 00:19:16,080
another thing which is um even more

541
00:19:16,080 --> 00:19:16,960
fundamental

542
00:19:16,960 --> 00:19:19,280
is that if you have an arbitrary quantum

543
00:19:19,280 --> 00:19:20,960
state then you can actually prove just

544
00:19:20,960 --> 00:19:21,679
using the

545
00:19:21,679 --> 00:19:24,799
the rules of quantum mechanics that you

546
00:19:24,799 --> 00:19:25,280
can't

547
00:19:25,280 --> 00:19:27,600
copy it so we can't do something like we

548
00:19:27,600 --> 00:19:29,039
did before where we

549
00:19:29,039 --> 00:19:32,160
take a zero and replace it by zero zero

550
00:19:32,160 --> 00:19:34,720
zero et cetera and for the quantum case

551
00:19:34,720 --> 00:19:36,160
because if we have some arbitrary

552
00:19:36,160 --> 00:19:38,240
quantum state like alpha zero plus beta

553
00:19:38,240 --> 00:19:38,799
one

554
00:19:38,799 --> 00:19:43,039
we can't just copy that it's impossible

555
00:19:43,840 --> 00:19:46,160
okay so this all seems like bad news but

556
00:19:46,160 --> 00:19:47,760
these problems can be overcome

557
00:19:47,760 --> 00:19:50,320
and it's remarkable that they that they

558
00:19:50,320 --> 00:19:50,960
were

559
00:19:50,960 --> 00:19:53,600
these problems were first overcome and

560
00:19:53,600 --> 00:19:55,919
pointed out by peter shaw the same

561
00:19:55,919 --> 00:19:59,039
the same um researcher who discovered

562
00:19:59,039 --> 00:20:01,200
the algorithm for factoring which really

563
00:20:01,200 --> 00:20:02,080
kicked off

564
00:20:02,080 --> 00:20:04,480
a large amount of progress in the field

565
00:20:04,480 --> 00:20:06,720
of quantum computing

566
00:20:06,720 --> 00:20:08,240
it was also at a very similar time i

567
00:20:08,240 --> 00:20:09,600
think it could even have been the same

568
00:20:09,600 --> 00:20:12,000
year in the 90s

569
00:20:12,000 --> 00:20:14,320
okay so the point and i i will come back

570
00:20:14,320 --> 00:20:15,440
to this later

571
00:20:15,440 --> 00:20:17,919
and some examples but the point is that

572
00:20:17,919 --> 00:20:20,159
the that we use entanglement to protect

573
00:20:20,159 --> 00:20:21,760
the information

574
00:20:21,760 --> 00:20:24,480
and instead so for example each of these

575
00:20:24,480 --> 00:20:26,240
little disks here represents a qubit and

576
00:20:26,240 --> 00:20:28,400
instead of encoding the information in

577
00:20:28,400 --> 00:20:31,440
one of those disks and or copying it

578
00:20:31,440 --> 00:20:32,400
among the others

579
00:20:32,400 --> 00:20:34,559
we actually encode it in the

580
00:20:34,559 --> 00:20:36,960
entanglement degrees of freedom between

581
00:20:36,960 --> 00:20:40,000
these different qubits and

582
00:20:40,000 --> 00:20:41,679
and it's not obvious why that works

583
00:20:41,679 --> 00:20:43,440
right now but what we'll see later is

584
00:20:43,440 --> 00:20:44,880
if something happens to just one of

585
00:20:44,880 --> 00:20:47,039
those then it doesn't destroy that

586
00:20:47,039 --> 00:20:48,880
encoded information it can be perfectly

587
00:20:48,880 --> 00:20:51,360
recovered

588
00:20:51,360 --> 00:20:53,600
and another key thing that we'll see

589
00:20:53,600 --> 00:20:54,880
later is that

590
00:20:54,880 --> 00:20:58,080
the and what we learn

591
00:20:58,080 --> 00:21:00,640
whenever we check the system is we learn

592
00:21:00,640 --> 00:21:02,559
about the errors so we will end up

593
00:21:02,559 --> 00:21:03,360
collapsing

594
00:21:03,360 --> 00:21:06,000
the state of the system in some way but

595
00:21:06,000 --> 00:21:06,880
not completely

596
00:21:06,880 --> 00:21:09,440
we won't collapse the part which encodes

597
00:21:09,440 --> 00:21:10,880
the information we'll just think

598
00:21:10,880 --> 00:21:12,240
we'll just collapse the part which

599
00:21:12,240 --> 00:21:14,720
encodes the error

600
00:21:14,720 --> 00:21:16,880
okay so here is a similar picture

601
00:21:16,880 --> 00:21:18,880
picture to what we showed before

602
00:21:18,880 --> 00:21:21,520
um although those of you are paying

603
00:21:21,520 --> 00:21:23,679
attention will notice that the x-axis in

604
00:21:23,679 --> 00:21:24,640
this case for the

605
00:21:24,640 --> 00:21:26,640
quantum scenario um is in the

606
00:21:26,640 --> 00:21:28,400
logarithmic scale

607
00:21:28,400 --> 00:21:30,480
whereas it was linear scale in the in

608
00:21:30,480 --> 00:21:31,760
the case for

609
00:21:31,760 --> 00:21:34,640
classical um information and that shows

610
00:21:34,640 --> 00:21:35,520
that things are

611
00:21:35,520 --> 00:21:36,960
a lot harder in the quantum case but

612
00:21:36,960 --> 00:21:38,960
they're still possible

613
00:21:38,960 --> 00:21:42,640
and so with quantum error correction

614
00:21:42,640 --> 00:21:45,360
with some well-known approach this is

615
00:21:45,360 --> 00:21:47,280
this one this graph is plotted for

616
00:21:47,280 --> 00:21:51,280
this this um you can achieve something

617
00:21:51,280 --> 00:21:52,480
very similar

618
00:21:52,480 --> 00:21:54,880
qualitatively to what you achieve in the

619
00:21:54,880 --> 00:21:55,760
classical case

620
00:21:55,760 --> 00:21:57,440
if you want to store information with

621
00:21:57,440 --> 00:21:59,200
some specified

622
00:21:59,200 --> 00:22:01,679
and logical error rate like 10 to the

623
00:22:01,679 --> 00:22:02,640
minus 10

624
00:22:02,640 --> 00:22:04,400
then you can do that with a large number

625
00:22:04,400 --> 00:22:06,240
of qubits and of course the number of

626
00:22:06,240 --> 00:22:07,280
qubits that

627
00:22:07,280 --> 00:22:10,000
you require depends on the probability

628
00:22:10,000 --> 00:22:11,200
of each qubit

629
00:22:11,200 --> 00:22:15,120
failing um and of course if you

630
00:22:15,120 --> 00:22:18,159
if you want more accurate stored

631
00:22:18,159 --> 00:22:19,520
information then you're going to need

632
00:22:19,520 --> 00:22:22,400
more qubits to do that but something

633
00:22:22,400 --> 00:22:23,360
that i just want to

634
00:22:23,360 --> 00:22:27,200
point out here is that um

635
00:22:27,200 --> 00:22:30,159
it's important to note that if your

636
00:22:30,159 --> 00:22:31,760
qubits are better if they have lower

637
00:22:31,760 --> 00:22:32,480
noise

638
00:22:32,480 --> 00:22:36,080
then you need far fewer of them to do so

639
00:22:36,080 --> 00:22:38,080
so for example if the probability of

640
00:22:38,080 --> 00:22:40,480
failure is 10 to the minus three

641
00:22:40,480 --> 00:22:43,360
which is roughly what um the

642
00:22:43,360 --> 00:22:44,320
superconducting

643
00:22:44,320 --> 00:22:47,840
qubit approaches are are aiming for then

644
00:22:47,840 --> 00:22:50,080
this is kind of the ballpark using this

645
00:22:50,080 --> 00:22:52,000
particular approach of the number of

646
00:22:52,000 --> 00:22:52,880
qubits that

647
00:22:52,880 --> 00:22:55,039
will be needed to store a single logical

648
00:22:55,039 --> 00:22:56,799
qubit number of physical cubes per

649
00:22:56,799 --> 00:22:57,919
logical

650
00:22:57,919 --> 00:22:59,760
by using that same approach if you

651
00:22:59,760 --> 00:23:01,440
manage to achieve a much lower error

652
00:23:01,440 --> 00:23:02,799
rate which is

653
00:23:02,799 --> 00:23:04,960
which could be possible with for example

654
00:23:04,960 --> 00:23:06,799
the topological approach

655
00:23:06,799 --> 00:23:11,280
then you might need far fewer qubits

656
00:23:11,280 --> 00:23:12,720
and the other thing i will point out is

657
00:23:12,720 --> 00:23:14,320
that there is also a threshold here like

658
00:23:14,320 --> 00:23:15,840
for the classical case

659
00:23:15,840 --> 00:23:19,039
and um it's much it's much lower

660
00:23:19,039 --> 00:23:20,880
the classical case was a fifty percent

661
00:23:20,880 --> 00:23:22,320
error rate it's the threshold here it's

662
00:23:22,320 --> 00:23:24,080
one percent

663
00:23:24,080 --> 00:23:26,080
so if your qubits are not better than

664
00:23:26,080 --> 00:23:27,360
that then

665
00:23:27,360 --> 00:23:29,280
error correction is is not going to help

666
00:23:29,280 --> 00:23:31,440
you

667
00:23:32,559 --> 00:23:33,919
okay so this is one of the reasons that

668
00:23:33,919 --> 00:23:36,159
we believe that it's very important

669
00:23:36,159 --> 00:23:40,240
when describing how describing how

670
00:23:40,240 --> 00:23:43,520
far an experimental team has has gotten

671
00:23:43,520 --> 00:23:46,559
with their quantum hardware it's not

672
00:23:46,559 --> 00:23:48,080
enough to report how many qubits they

673
00:23:48,080 --> 00:23:49,600
have it's really important to know how

674
00:23:49,600 --> 00:23:51,919
good they are too

675
00:23:51,919 --> 00:23:54,559
okay so how does this work well let's

676
00:23:54,559 --> 00:23:56,240
first of all remind ourselves about some

677
00:23:56,240 --> 00:23:58,480
of the basics of quantum mechanics

678
00:23:58,480 --> 00:24:01,919
and as they're relevant to this topic

679
00:24:01,919 --> 00:24:04,240
so suppose you have one qubit and you

680
00:24:04,240 --> 00:24:06,559
measure it then as we know

681
00:24:06,559 --> 00:24:09,760
you collapse the state and you collapse

682
00:24:09,760 --> 00:24:11,039
the state completely so

683
00:24:11,039 --> 00:24:13,039
if you have an arbitrary quantum state

684
00:24:13,039 --> 00:24:15,440
and over zero and one

685
00:24:15,440 --> 00:24:18,240
then in this particular case when you

686
00:24:18,240 --> 00:24:18,880
measure it

687
00:24:18,880 --> 00:24:21,600
with some probability which is the

688
00:24:21,600 --> 00:24:23,120
modulus squared of the

689
00:24:23,120 --> 00:24:26,240
coefficient in front of the zero cat

690
00:24:26,240 --> 00:24:28,640
then you'll get a plus one outcome and

691
00:24:28,640 --> 00:24:30,240
with some other probability you'll get a

692
00:24:30,240 --> 00:24:31,279
minus one outcome

693
00:24:31,279 --> 00:24:34,880
okay very good um another thing that

694
00:24:34,880 --> 00:24:36,080
i'll point out here i don't know if you

695
00:24:36,080 --> 00:24:36,880
discussed is

696
00:24:36,880 --> 00:24:39,120
measuring z here so this is this just

697
00:24:39,120 --> 00:24:40,240
means that we're measuring in a

698
00:24:40,240 --> 00:24:42,080
particular basis you could measure in

699
00:24:42,080 --> 00:24:43,120
another basis

700
00:24:43,120 --> 00:24:45,120
so we're measuring in the in the zero

701
00:24:45,120 --> 00:24:46,720
one basis you could measure in another

702
00:24:46,720 --> 00:24:47,679
basis

703
00:24:47,679 --> 00:24:50,799
instead of that um which which is

704
00:24:50,799 --> 00:24:54,080
important for quantum error correction

705
00:24:54,080 --> 00:24:56,000
okay so what about when you have more

706
00:24:56,000 --> 00:24:57,919
than one qubit

707
00:24:57,919 --> 00:25:00,400
well if you measure then you can it's

708
00:25:00,400 --> 00:25:02,080
possible to only partially collapse the

709
00:25:02,080 --> 00:25:02,559
state

710
00:25:02,559 --> 00:25:05,279
so for example suppose you have um this

711
00:25:05,279 --> 00:25:07,279
arbitrary two qubit

712
00:25:07,279 --> 00:25:09,600
state here so now there are four complex

713
00:25:09,600 --> 00:25:10,880
coefficients

714
00:25:10,880 --> 00:25:14,159
m a zero zero a zero one etcetera

715
00:25:14,159 --> 00:25:17,360
and let's suppose that we just measure

716
00:25:17,360 --> 00:25:20,720
the first of these two qubits so

717
00:25:20,720 --> 00:25:22,240
that means that we are going to collapse

718
00:25:22,240 --> 00:25:24,080
the state of the first qubit

719
00:25:24,080 --> 00:25:26,640
but not the second so what happens in

720
00:25:26,640 --> 00:25:28,400
that case and this may not be familiar

721
00:25:28,400 --> 00:25:29,200
to people and

722
00:25:29,200 --> 00:25:32,000
it's not discussed as as often and but

723
00:25:32,000 --> 00:25:33,760
what happens is that you will end up

724
00:25:33,760 --> 00:25:36,000
after this measurement with still a

725
00:25:36,000 --> 00:25:37,360
superposition state

726
00:25:37,360 --> 00:25:39,120
but the superposition will only be over

727
00:25:39,120 --> 00:25:41,120
the second qubit so look at this

728
00:25:41,120 --> 00:25:44,159
state here notice that both parts of it

729
00:25:44,159 --> 00:25:47,440
after the measurement um are in zero

730
00:25:47,440 --> 00:25:49,520
for the first qubit whereas the second

731
00:25:49,520 --> 00:25:51,679
qubit is in a superposition

732
00:25:51,679 --> 00:25:55,120
and so the the superposition survives

733
00:25:55,120 --> 00:25:57,440
for the second qubit but not the first

734
00:25:57,440 --> 00:25:59,679
and and that's only if you get the plus

735
00:25:59,679 --> 00:26:01,200
one outcome for your measurements

736
00:26:01,200 --> 00:26:03,679
because we observed a zero

737
00:26:03,679 --> 00:26:06,080
and state for the first qubit and that

738
00:26:06,080 --> 00:26:07,600
happens with this probability but don't

739
00:26:07,600 --> 00:26:08,640
worry too much about

740
00:26:08,640 --> 00:26:11,200
the probabilities right now and you

741
00:26:11,200 --> 00:26:13,520
could have also gotten a one for that

742
00:26:13,520 --> 00:26:15,039
and that would have happened with this

743
00:26:15,039 --> 00:26:16,880
other probability

744
00:26:16,880 --> 00:26:20,400
okay so that's one thing um and before

745
00:26:20,400 --> 00:26:21,039
we

746
00:26:21,039 --> 00:26:22,960
go into a little bit more detail here i

747
00:26:22,960 --> 00:26:24,960
want to just think at the conceptual

748
00:26:24,960 --> 00:26:25,440
level

749
00:26:25,440 --> 00:26:27,600
of what's going on of course it's true

750
00:26:27,600 --> 00:26:29,679
that if you have two qubits and you

751
00:26:29,679 --> 00:26:30,799
measure one of them the other one's

752
00:26:30,799 --> 00:26:32,799
going to survive

753
00:26:32,799 --> 00:26:35,919
in some way for example if

754
00:26:35,919 --> 00:26:37,440
two different experimental teams have

755
00:26:37,440 --> 00:26:39,679
two completely independent qubits

756
00:26:39,679 --> 00:26:41,760
and you know one team is working on

757
00:26:41,760 --> 00:26:42,960
their qubit and the other team is

758
00:26:42,960 --> 00:26:44,559
working on their other qubit

759
00:26:44,559 --> 00:26:47,360
then it must be possible for the teams

760
00:26:47,360 --> 00:26:48,480
to

761
00:26:48,480 --> 00:26:50,480
independently address their qubits and

762
00:26:50,480 --> 00:26:52,400
for things not

763
00:26:52,400 --> 00:26:54,080
to go wrong because of that so we know

764
00:26:54,080 --> 00:26:56,240
that in a very kind of

765
00:26:56,240 --> 00:26:58,080
trivial case whenever two qubits are

766
00:26:58,080 --> 00:26:59,600
completely independent

767
00:26:59,600 --> 00:27:01,679
and then measuring one will not collapse

768
00:27:01,679 --> 00:27:02,720
the other

769
00:27:02,720 --> 00:27:04,799
and here we're showing a case where the

770
00:27:04,799 --> 00:27:07,200
qubits are entangled in some way because

771
00:27:07,200 --> 00:27:09,600
these coefficients are are arbitrary so

772
00:27:09,600 --> 00:27:11,039
we'll include

773
00:27:11,039 --> 00:27:13,440
some cases where they keep its entangled

774
00:27:13,440 --> 00:27:15,039
um

775
00:27:15,039 --> 00:27:17,760
and but it's still the case that you

776
00:27:17,760 --> 00:27:18,799
don't completely

777
00:27:18,799 --> 00:27:20,320
collapse the system whenever you just

778
00:27:20,320 --> 00:27:23,520
measure one of the two qubits

779
00:27:23,520 --> 00:27:25,679
so another example that you could

780
00:27:25,679 --> 00:27:26,720
measure is

781
00:27:26,720 --> 00:27:28,720
um instead of measuring just one of the

782
00:27:28,720 --> 00:27:30,320
two qubits you could measure something

783
00:27:30,320 --> 00:27:31,760
else which still gives you a bit of

784
00:27:31,760 --> 00:27:33,039
information

785
00:27:33,039 --> 00:27:35,039
but it's not the same thing as measuring

786
00:27:35,039 --> 00:27:37,679
one of the qubits and that's the parity

787
00:27:37,679 --> 00:27:40,159
so imagine measuring the overall parity

788
00:27:40,159 --> 00:27:40,880
of

789
00:27:40,880 --> 00:27:42,880
these qubits and that would mean that if

790
00:27:42,880 --> 00:27:44,000
we get

791
00:27:44,000 --> 00:27:46,399
if if the state is zero zero that has a

792
00:27:46,399 --> 00:27:47,360
parity

793
00:27:47,360 --> 00:27:49,600
plus one if the state is in one one that

794
00:27:49,600 --> 00:27:51,360
has a parity plus one too

795
00:27:51,360 --> 00:27:53,440
but if the state is in zero one or one

796
00:27:53,440 --> 00:27:55,840
zero that is a parity minus one

797
00:27:55,840 --> 00:27:59,360
so all we mean by parity here is just um

798
00:27:59,360 --> 00:28:01,919
it distinguishes modulo to the sum of

799
00:28:01,919 --> 00:28:02,480
the

800
00:28:02,480 --> 00:28:05,919
the entries in a bit string

801
00:28:05,919 --> 00:28:08,240
okay so again this will collapse the

802
00:28:08,240 --> 00:28:10,399
system partially but not entirely

803
00:28:10,399 --> 00:28:12,559
so if you get a plus one outcome then it

804
00:28:12,559 --> 00:28:14,559
will collapse into this combination

805
00:28:14,559 --> 00:28:17,279
this superposition of the zero zero and

806
00:28:17,279 --> 00:28:19,520
the one one parts of the state

807
00:28:19,520 --> 00:28:22,159
whereas if you measure a minus one

808
00:28:22,159 --> 00:28:23,919
parity that will collapse into the

809
00:28:23,919 --> 00:28:27,279
other two parts of the state but again

810
00:28:27,279 --> 00:28:27,679
the

811
00:28:27,679 --> 00:28:31,039
the outcome is the superposition so the

812
00:28:31,039 --> 00:28:34,399
goal of qec then is going to be to store

813
00:28:34,399 --> 00:28:37,679
our information in such in specially

814
00:28:37,679 --> 00:28:39,120
chosen states

815
00:28:39,120 --> 00:28:42,080
so that whenever we do measure certain

816
00:28:42,080 --> 00:28:44,240
things about the state

817
00:28:44,240 --> 00:28:46,000
we will learn about the error but not

818
00:28:46,000 --> 00:28:48,480
about the information that's stored

819
00:28:48,480 --> 00:28:51,039
and let's in fact use a particular

820
00:28:51,039 --> 00:28:54,000
example to see how this might work

821
00:28:54,000 --> 00:28:56,240
so we suppose that and we're going to

822
00:28:56,240 --> 00:28:57,440
make a lot of assumptions here because

823
00:28:57,440 --> 00:28:58,880
it's going to be a very simple example

824
00:28:58,880 --> 00:28:59,440
but the

825
00:28:59,440 --> 00:29:01,120
the concepts are going to be the the

826
00:29:01,120 --> 00:29:02,880
same as for the

827
00:29:02,880 --> 00:29:06,000
more general cases so suppose we have

828
00:29:06,000 --> 00:29:09,679
um a state alpha 0 0 plus beta 1 1

829
00:29:09,679 --> 00:29:12,000
and we don't know what alpha and beta

830
00:29:12,000 --> 00:29:13,679
are they're completely arbitrary

831
00:29:13,679 --> 00:29:16,720
this is an arbitrary and quantum state

832
00:29:16,720 --> 00:29:19,440
but note that this is a quantum state on

833
00:29:19,440 --> 00:29:21,440
two qubits and it's not completely

834
00:29:21,440 --> 00:29:22,799
general

835
00:29:22,799 --> 00:29:25,360
because we don't have any there's no

836
00:29:25,360 --> 00:29:26,960
part of this state which is in zero one

837
00:29:26,960 --> 00:29:28,960
or one zero

838
00:29:28,960 --> 00:29:31,760
and that will be important and suppose

839
00:29:31,760 --> 00:29:33,440
that we are told that there's

840
00:29:33,440 --> 00:29:35,520
there's only one possible error that can

841
00:29:35,520 --> 00:29:36,559
occur either

842
00:29:36,559 --> 00:29:39,200
an x is applied to the first qubit or

843
00:29:39,200 --> 00:29:41,440
it's not

844
00:29:41,440 --> 00:29:43,840
and our goal is going to be to come up

845
00:29:43,840 --> 00:29:44,640
with

846
00:29:44,640 --> 00:29:46,159
an error correction scheme for this

847
00:29:46,159 --> 00:29:47,840
scenario so

848
00:29:47,840 --> 00:29:50,000
if we we're going to measure something

849
00:29:50,000 --> 00:29:51,200
and then depending on the outcome of

850
00:29:51,200 --> 00:29:52,320
that measurement we're going to do

851
00:29:52,320 --> 00:29:52,799
something

852
00:29:52,799 --> 00:29:55,440
to fix a potential error that may have

853
00:29:55,440 --> 00:29:57,760
occurred

854
00:29:57,840 --> 00:29:59,919
so in this case the thing that we do is

855
00:29:59,919 --> 00:30:02,399
we measure the parity

856
00:30:02,399 --> 00:30:04,320
let's see how that works so there are

857
00:30:04,320 --> 00:30:05,520
two cases

858
00:30:05,520 --> 00:30:06,640
of course we don't know which one of

859
00:30:06,640 --> 00:30:09,360
these cases has happened but

860
00:30:09,360 --> 00:30:10,799
one of the cases is that nothing's

861
00:30:10,799 --> 00:30:12,159
happened at all and then of course we're

862
00:30:12,159 --> 00:30:14,080
in the same state as we started with

863
00:30:14,080 --> 00:30:16,399
alpha zero zero plus beta one one and if

864
00:30:16,399 --> 00:30:18,399
we measure the parity in this case

865
00:30:18,399 --> 00:30:21,440
we get the outcome plus one

866
00:30:21,440 --> 00:30:24,320
and that of course occurs with with

867
00:30:24,320 --> 00:30:26,000
certainty

868
00:30:26,000 --> 00:30:29,039
if on the other hand we the x

869
00:30:29,039 --> 00:30:31,279
this x error has happened well what does

870
00:30:31,279 --> 00:30:33,840
this x1 do as we know it flips 0

871
00:30:33,840 --> 00:30:37,679
and 1. so the state given the x error

872
00:30:37,679 --> 00:30:40,159
given the x1 error will be alpha one

873
00:30:40,159 --> 00:30:42,799
zero plus beta01

874
00:30:42,799 --> 00:30:45,440
and if we measure the priority of this

875
00:30:45,440 --> 00:30:46,880
state of course we get the minus one

876
00:30:46,880 --> 00:30:48,720
outcome

877
00:30:48,720 --> 00:30:51,120
and that's with absolute certainty again

878
00:30:51,120 --> 00:30:53,520
if the nx1 errors happen then we will

879
00:30:53,520 --> 00:30:55,200
definitely get a minus one minecraft

880
00:30:55,200 --> 00:30:57,600
for this parity measurement and so then

881
00:30:57,600 --> 00:30:58,240
our

882
00:30:58,240 --> 00:31:00,559
our correction procedure should be after

883
00:31:00,559 --> 00:31:02,159
we've measured the parity

884
00:31:02,159 --> 00:31:04,240
if we get plus one parity don't do

885
00:31:04,240 --> 00:31:06,720
anything and if we get minus one parity

886
00:31:06,720 --> 00:31:10,880
flip the first bit so apply an x1

887
00:31:10,880 --> 00:31:13,679
and that will recover the original state

888
00:31:13,679 --> 00:31:14,880
so this is an example

889
00:31:14,880 --> 00:31:16,720
where we learned nothing and we didn't

890
00:31:16,720 --> 00:31:18,080
collapse anything about

891
00:31:18,080 --> 00:31:20,960
alpha and beta but we did learn about

892
00:31:20,960 --> 00:31:22,799
whether an error had occurred or not and

893
00:31:22,799 --> 00:31:23,120
we

894
00:31:23,120 --> 00:31:26,080
we know how to fix it

895
00:31:26,559 --> 00:31:30,799
so that's a that's a very simple case um

896
00:31:30,799 --> 00:31:33,120
and this is a point where if i was

897
00:31:33,120 --> 00:31:34,080
giving this

898
00:31:34,080 --> 00:31:36,320
um this talk in person i would be

899
00:31:36,320 --> 00:31:38,000
looking at people's faces to see how

900
00:31:38,000 --> 00:31:39,760
happy or how confused they are because

901
00:31:39,760 --> 00:31:41,679
i'm going to go into more detail

902
00:31:41,679 --> 00:31:44,559
so if somebody wants to chime in and and

903
00:31:44,559 --> 00:31:46,080
say that maybe we should skip

904
00:31:46,080 --> 00:31:48,320
a more detailed example but now is your

905
00:31:48,320 --> 00:31:49,919
chance to do that i'm going to wait 10

906
00:31:49,919 --> 00:31:52,080
seconds to alive

907
00:31:52,080 --> 00:31:54,559
there is a question in the chat for an

908
00:31:54,559 --> 00:31:57,200
earlier slide i'm not sure if it's

909
00:31:57,200 --> 00:32:00,880
completely answered from

910
00:32:01,279 --> 00:32:04,880
yeah so thomas asked what do you mean by

911
00:32:04,880 --> 00:32:07,679
fail so one earlier slice you use the

912
00:32:07,679 --> 00:32:08,080
word

913
00:32:08,080 --> 00:32:11,039
fail the amplitude are continuous

914
00:32:11,039 --> 00:32:11,600
doesn't

915
00:32:11,600 --> 00:32:15,279
a qubit kind of always fail

916
00:32:15,279 --> 00:32:19,120
um yeah i think it's a good question and

917
00:32:19,120 --> 00:32:20,080
it has to be

918
00:32:20,080 --> 00:32:21,200
[Music]

919
00:32:21,200 --> 00:32:24,320
carefully defined but you can very it's

920
00:32:24,320 --> 00:32:25,679
very well defined to say

921
00:32:25,679 --> 00:32:28,320
fail for a an overall quantum

922
00:32:28,320 --> 00:32:29,519
computation

923
00:32:29,519 --> 00:32:32,240
so you have some quantum computer you

924
00:32:32,240 --> 00:32:33,039
set it up

925
00:32:33,039 --> 00:32:36,080
with some initial input which is just

926
00:32:36,080 --> 00:32:37,919
classical information

927
00:32:37,919 --> 00:32:40,080
right you start your computer by

928
00:32:40,080 --> 00:32:42,559
inputting ones and zeros there's no

929
00:32:42,559 --> 00:32:44,799
superposition and then you run your

930
00:32:44,799 --> 00:32:46,080
quantum computer which builds

931
00:32:46,080 --> 00:32:46,960
superposition

932
00:32:46,960 --> 00:32:49,279
and does lots of complicated things but

933
00:32:49,279 --> 00:32:50,480
at the very end of your quantum

934
00:32:50,480 --> 00:32:51,840
computation you measure

935
00:32:51,840 --> 00:32:53,519
all the qubits and you get some output

936
00:32:53,519 --> 00:32:56,320
which is again some classical

937
00:32:56,320 --> 00:32:58,399
information just a bit string

938
00:32:58,399 --> 00:33:01,679
and and at that point it's

939
00:33:01,679 --> 00:33:03,760
possible to understand exactly what a

940
00:33:03,760 --> 00:33:05,600
failure fail means

941
00:33:05,600 --> 00:33:07,039
for example if you're running shor's

942
00:33:07,039 --> 00:33:09,039
algorithm and

943
00:33:09,039 --> 00:33:12,640
the output the input is encoding um

944
00:33:12,640 --> 00:33:15,919
an integer to factor and the output

945
00:33:15,919 --> 00:33:18,000
is encoding a pair of integers which are

946
00:33:18,000 --> 00:33:19,440
supposed to multiply to give

947
00:33:19,440 --> 00:33:22,480
the the input and if

948
00:33:22,480 --> 00:33:25,120
that's not the case if the output does

949
00:33:25,120 --> 00:33:26,720
not multiply together to give the input

950
00:33:26,720 --> 00:33:28,159
that's a fail

951
00:33:28,159 --> 00:33:30,880
um so failure is well defined for the

952
00:33:30,880 --> 00:33:31,600
entire

953
00:33:31,600 --> 00:33:33,519
quantum computation and it really just

954
00:33:33,519 --> 00:33:35,519
means has something gone wrong

955
00:33:35,519 --> 00:33:38,799
during the computation um and then

956
00:33:38,799 --> 00:33:40,640
a slightly more blurry thing but that we

957
00:33:40,640 --> 00:33:42,000
can still define

958
00:33:42,000 --> 00:33:44,399
and if we're careful is the failure of a

959
00:33:44,399 --> 00:33:46,480
component within a quantum comp

960
00:33:46,480 --> 00:33:48,640
within within a quantum computer so we

961
00:33:48,640 --> 00:33:49,679
can understand

962
00:33:49,679 --> 00:33:51,760
that something somewhere in the quantum

963
00:33:51,760 --> 00:33:54,640
computer has gone wrong

964
00:33:54,640 --> 00:33:57,519
and i don't know if that satisfactorily

965
00:33:57,519 --> 00:33:59,360
answers the question or not

966
00:33:59,360 --> 00:34:02,799
thomas comments so is a probabilistic

967
00:34:02,799 --> 00:34:05,120
fail

968
00:34:05,120 --> 00:34:08,639
um when a failure occurs

969
00:34:08,639 --> 00:34:11,599
yeah i i think it's a it's a hard

970
00:34:11,599 --> 00:34:13,599
question to answer in a really clear way

971
00:34:13,599 --> 00:34:16,879
um so the failure itself will be

972
00:34:16,879 --> 00:34:18,079
probabilistic

973
00:34:18,079 --> 00:34:20,480
but when a failure has occurred when you

974
00:34:20,480 --> 00:34:22,000
use your quantum computer

975
00:34:22,000 --> 00:34:24,879
it either will have occurred or not and

976
00:34:24,879 --> 00:34:26,079
from the outset

977
00:34:26,079 --> 00:34:27,760
it will be probabilistic if you run the

978
00:34:27,760 --> 00:34:29,520
same quantum computer again

979
00:34:29,520 --> 00:34:32,639
it might not fail the next time but yes

980
00:34:32,639 --> 00:34:36,480
it's it's when you run it it's

981
00:34:36,480 --> 00:34:37,679
it definitely has failed or it

982
00:34:37,679 --> 00:34:39,760
definitely has not failed and

983
00:34:39,760 --> 00:34:42,719
but if you run it multiple times with

984
00:34:42,719 --> 00:34:44,320
the same

985
00:34:44,320 --> 00:34:46,960
noise processes acting you may get

986
00:34:46,960 --> 00:34:48,639
sometimes it fails and sometimes it does

987
00:34:48,639 --> 00:34:50,879
not

988
00:34:52,000 --> 00:34:54,719
great thank you i have a quick question

989
00:34:54,719 --> 00:34:55,199
here

990
00:34:55,199 --> 00:34:59,040
uh hopefully is quick so how do you

991
00:34:59,040 --> 00:35:02,480
even measure and get these parity

992
00:35:02,480 --> 00:35:06,240
plus one and minus one yeah so we

993
00:35:06,240 --> 00:35:07,599
depending on how much time we have we

994
00:35:07,599 --> 00:35:09,599
will come back to that a little bit

995
00:35:09,599 --> 00:35:12,079
but you but just as a rough idea you

996
00:35:12,079 --> 00:35:13,119
build a gadget

997
00:35:13,119 --> 00:35:15,040
so you you have some alloy things that

998
00:35:15,040 --> 00:35:16,640
you're allowed to do in your hardware

999
00:35:16,640 --> 00:35:19,119
and that comes it depends on the

1000
00:35:19,119 --> 00:35:20,560
hardware that you're using

1001
00:35:20,560 --> 00:35:23,119
what those allowed operations are but

1002
00:35:23,119 --> 00:35:23,760
these

1003
00:35:23,760 --> 00:35:26,800
actions of measurement and are

1004
00:35:26,800 --> 00:35:29,200
you build them out of those basic

1005
00:35:29,200 --> 00:35:30,400
building blocks that you're allowed in

1006
00:35:30,400 --> 00:35:31,119
your hardware

1007
00:35:31,119 --> 00:35:32,880
with majorana qubits for example

1008
00:35:32,880 --> 00:35:34,240
actually measuring

1009
00:35:34,240 --> 00:35:36,960
parity is a direct operation so if you

1010
00:35:36,960 --> 00:35:38,640
have two majorana

1011
00:35:38,640 --> 00:35:41,680
um if you have two qubits encoded in

1012
00:35:41,680 --> 00:35:44,160
tetrons for example in in built out of

1013
00:35:44,160 --> 00:35:46,480
majoranas and they're in neighboring

1014
00:35:46,480 --> 00:35:49,839
um patches then you can just directly

1015
00:35:49,839 --> 00:35:51,680
measure the parity of that pair

1016
00:35:51,680 --> 00:35:55,200
of qubits encoded um but another

1017
00:35:55,200 --> 00:35:57,040
another hardware there's like different

1018
00:35:57,040 --> 00:35:58,400
things there's different ways you do

1019
00:35:58,400 --> 00:35:59,280
that

1020
00:35:59,280 --> 00:36:03,280
cool let's uh jump let's uh go forward

1021
00:36:03,280 --> 00:36:06,079
with yeah please and come back to

1022
00:36:06,079 --> 00:36:07,599
additional questions if we have more

1023
00:36:07,599 --> 00:36:08,160
time

1024
00:36:08,160 --> 00:36:11,280
afterwards sure thank you so what i want

1025
00:36:11,280 --> 00:36:12,400
to walk through noise

1026
00:36:12,400 --> 00:36:16,400
and at a very high level is how you

1027
00:36:16,400 --> 00:36:20,400
um how you do error correction

1028
00:36:20,400 --> 00:36:22,079
when you have a slightly more realistic

1029
00:36:22,079 --> 00:36:24,400
scenario for noise

1030
00:36:24,400 --> 00:36:28,160
so the first thing is um

1031
00:36:28,160 --> 00:36:29,440
now we're going to have seven qubits

1032
00:36:29,440 --> 00:36:31,599
instead of two and we're going to encode

1033
00:36:31,599 --> 00:36:32,240
one

1034
00:36:32,240 --> 00:36:35,280
qubit among those seven and we're gonna

1035
00:36:35,280 --> 00:36:36,560
have to make some assumptions here

1036
00:36:36,560 --> 00:36:38,400
because we don't have time to go through

1037
00:36:38,400 --> 00:36:40,720
all of the theory carefully but the

1038
00:36:40,720 --> 00:36:43,280
point is we're going to have two

1039
00:36:43,280 --> 00:36:46,800
states um which

1040
00:36:46,800 --> 00:36:49,920
satisfy certain conditions in the space

1041
00:36:49,920 --> 00:36:52,960
of this um set of seven qubits so in

1042
00:36:52,960 --> 00:36:54,640
principle there's actually

1043
00:36:54,640 --> 00:36:57,359
um an overall space of 2 to the power of

1044
00:36:57,359 --> 00:36:57,920
7

1045
00:36:57,920 --> 00:37:00,560
here but we have we're going to choose

1046
00:37:00,560 --> 00:37:01,359
two

1047
00:37:01,359 --> 00:37:03,599
states within that very large space as

1048
00:37:03,599 --> 00:37:04,400
our

1049
00:37:04,400 --> 00:37:08,400
code states um

1050
00:37:08,400 --> 00:37:11,200
and uh those two states are going to

1051
00:37:11,200 --> 00:37:12,079
satisfy some

1052
00:37:12,079 --> 00:37:13,839
special properties the the first

1053
00:37:13,839 --> 00:37:15,359
property is that if we measure

1054
00:37:15,359 --> 00:37:19,680
the parity of any four qubits

1055
00:37:19,680 --> 00:37:22,640
um so for example i think you can see my

1056
00:37:22,640 --> 00:37:23,440
mouse here

1057
00:37:23,440 --> 00:37:26,480
if you take the four qubits around this

1058
00:37:26,480 --> 00:37:28,160
face at the top

1059
00:37:28,160 --> 00:37:30,400
then if we measure the overall parity of

1060
00:37:30,400 --> 00:37:31,920
those four qubits

1061
00:37:31,920 --> 00:37:34,400
then in in both of the states that we

1062
00:37:34,400 --> 00:37:35,839
are going to encode our information in

1063
00:37:35,839 --> 00:37:36,560
we'll get up

1064
00:37:36,560 --> 00:37:38,800
we'll get a plus one outcome and the

1065
00:37:38,800 --> 00:37:40,240
same thing is true of

1066
00:37:40,240 --> 00:37:42,800
these four qubits in this phase here and

1067
00:37:42,800 --> 00:37:44,320
the same thing is true of the four

1068
00:37:44,320 --> 00:37:46,480
qubits in this phase here

1069
00:37:46,480 --> 00:37:48,320
okay so that's those are three

1070
00:37:48,320 --> 00:37:50,320
conditions on these states there's also

1071
00:37:50,320 --> 00:37:51,839
another three conditions which is

1072
00:37:51,839 --> 00:37:54,640
if we measure the x parity so what this

1073
00:37:54,640 --> 00:37:55,119
means

1074
00:37:55,119 --> 00:37:56,880
and we don't need to worry about this

1075
00:37:56,880 --> 00:37:58,560
too much if it's if it's not something

1076
00:37:58,560 --> 00:37:59,760
that you guys have covered

1077
00:37:59,760 --> 00:38:01,839
but instead of measuring the operator's

1078
00:38:01,839 --> 00:38:03,119
ezz

1079
00:38:03,119 --> 00:38:06,240
we can measure the operator xxx and but

1080
00:38:06,240 --> 00:38:07,760
it's really the same thing as checking

1081
00:38:07,760 --> 00:38:08,720
the parity

1082
00:38:08,720 --> 00:38:12,079
but in a different basis um and

1083
00:38:12,079 --> 00:38:14,240
and again if we do that for the four

1084
00:38:14,240 --> 00:38:15,520
qubits in this face

1085
00:38:15,520 --> 00:38:17,200
we'll get a plus one outcome on those

1086
00:38:17,200 --> 00:38:19,040
states and if we do it for these we'll

1087
00:38:19,040 --> 00:38:20,400
get a plus one outcome and if we do it

1088
00:38:20,400 --> 00:38:22,480
for these we'll get a plus one micro

1089
00:38:22,480 --> 00:38:23,839
okay so now let's talk about what

1090
00:38:23,839 --> 00:38:26,160
happens if we have an error

1091
00:38:26,160 --> 00:38:29,520
so an x type error if if an x type error

1092
00:38:29,520 --> 00:38:31,040
afflicts a single qubit

1093
00:38:31,040 --> 00:38:34,160
it will cause any of the

1094
00:38:34,160 --> 00:38:37,119
z face measurements to flip that touches

1095
00:38:37,119 --> 00:38:38,800
that qubit

1096
00:38:38,800 --> 00:38:40,960
so instead of getting a plus one which

1097
00:38:40,960 --> 00:38:42,400
we would get for these

1098
00:38:42,400 --> 00:38:43,839
special states that we encode the

1099
00:38:43,839 --> 00:38:46,160
information in we would get a minus one

1100
00:38:46,160 --> 00:38:48,800
for a face which touches that qubit and

1101
00:38:48,800 --> 00:38:50,640
so we can just walk through the cases

1102
00:38:50,640 --> 00:38:53,359
of different qubits suppose there's an x

1103
00:38:53,359 --> 00:38:55,200
air on this qubit here

1104
00:38:55,200 --> 00:38:57,920
then because these faces over here don't

1105
00:38:57,920 --> 00:38:58,960
touch that qubit

1106
00:38:58,960 --> 00:39:01,760
they will have a plus one outcome

1107
00:39:01,760 --> 00:39:04,160
they'll be satisfied as we expect

1108
00:39:04,160 --> 00:39:05,920
but this phase here because it does

1109
00:39:05,920 --> 00:39:07,520
touch that cuba will be

1110
00:39:07,520 --> 00:39:08,960
will be flipped so we'll have a minus

1111
00:39:08,960 --> 00:39:11,440
one outcome for that parity measurement

1112
00:39:11,440 --> 00:39:14,480
and that pattern of good good

1113
00:39:14,480 --> 00:39:17,440
bad will identify this qubit as the one

1114
00:39:17,440 --> 00:39:18,079
which has an

1115
00:39:18,079 --> 00:39:20,880
the x error on it and just by rotating

1116
00:39:20,880 --> 00:39:22,079
this you can imagine that you would

1117
00:39:22,079 --> 00:39:23,440
identify this

1118
00:39:23,440 --> 00:39:26,800
and cube it here or this cube here as um

1119
00:39:26,800 --> 00:39:30,160
in the same way and what about instead

1120
00:39:30,160 --> 00:39:31,839
of these corner qubits if we have one of

1121
00:39:31,839 --> 00:39:33,119
these edge qubits

1122
00:39:33,119 --> 00:39:35,599
then of course there will be two phases

1123
00:39:35,599 --> 00:39:36,640
which and

1124
00:39:36,640 --> 00:39:39,440
have their parity measurement flipped

1125
00:39:39,440 --> 00:39:40,240
both of these

1126
00:39:40,240 --> 00:39:44,160
touch that qubit um

1127
00:39:44,160 --> 00:39:47,359
and of course the other two edge types

1128
00:39:47,359 --> 00:39:49,280
would be identified in a similar way

1129
00:39:49,280 --> 00:39:51,200
and the last one is if the middle qubit

1130
00:39:51,200 --> 00:39:52,400
has an x-type error

1131
00:39:52,400 --> 00:39:56,960
then we can identify it as well and so

1132
00:39:56,960 --> 00:39:59,680
so if any single qubit is afflicted by

1133
00:39:59,680 --> 00:40:00,640
an x error

1134
00:40:00,640 --> 00:40:02,960
then this qubit or this code will tell

1135
00:40:02,960 --> 00:40:04,400
us what

1136
00:40:04,400 --> 00:40:07,200
qubit it was and and this is better than

1137
00:40:07,200 --> 00:40:09,040
the previous case because it only told

1138
00:40:09,040 --> 00:40:11,839
us what happened if the first qubit had

1139
00:40:11,839 --> 00:40:12,240
an x

1140
00:40:12,240 --> 00:40:13,760
error but if the second qubit had an x

1141
00:40:13,760 --> 00:40:14,880
error then we would actually be in

1142
00:40:14,880 --> 00:40:17,200
trouble we would have gotten a minus one

1143
00:40:17,200 --> 00:40:19,119
parity measurement and we we wouldn't

1144
00:40:19,119 --> 00:40:20,720
know how we wouldn't

1145
00:40:20,720 --> 00:40:22,160
fix it correctly we would actually

1146
00:40:22,160 --> 00:40:24,240
introduce an error but here

1147
00:40:24,240 --> 00:40:27,119
in this case we can identify uniquely

1148
00:40:27,119 --> 00:40:27,839
all of the

1149
00:40:27,839 --> 00:40:31,040
cube single qubit x errors

1150
00:40:31,040 --> 00:40:35,200
moreover by measuring the x type parity

1151
00:40:35,200 --> 00:40:38,240
we can measure single qubit z errors and

1152
00:40:38,240 --> 00:40:40,400
just by symmetry it's exactly the same

1153
00:40:40,400 --> 00:40:42,480
if we have a z error on this qubit

1154
00:40:42,480 --> 00:40:44,720
then the x parity will be flipped for

1155
00:40:44,720 --> 00:40:46,319
this face but not the other two et

1156
00:40:46,319 --> 00:40:46,960
cetera

1157
00:40:46,960 --> 00:40:50,480
so we can measure we can identify

1158
00:40:50,480 --> 00:40:52,960
and then fix by applying the appropriate

1159
00:40:52,960 --> 00:40:53,839
correction

1160
00:40:53,839 --> 00:40:57,040
all of the single qubit x and z errors

1161
00:40:57,040 --> 00:41:00,240
and importantly the the y type

1162
00:41:00,240 --> 00:41:03,599
um poly operator is just

1163
00:41:03,599 --> 00:41:06,480
a multiplication of an x type and a z z

1164
00:41:06,480 --> 00:41:08,000
type coily operator

1165
00:41:08,000 --> 00:41:09,920
up to some overall phase and we know

1166
00:41:09,920 --> 00:41:11,520
that overall phases don't actually

1167
00:41:11,520 --> 00:41:12,960
matter in quantum mechanics if we

1168
00:41:12,960 --> 00:41:13,839
multiply

1169
00:41:13,839 --> 00:41:16,880
a superposition state by a global phase

1170
00:41:16,880 --> 00:41:18,640
it doesn't actually change the state so

1171
00:41:18,640 --> 00:41:20,319
we don't care about this little

1172
00:41:20,319 --> 00:41:22,880
square root of minus one here in front

1173
00:41:22,880 --> 00:41:24,880
of the x and the z

1174
00:41:24,880 --> 00:41:28,240
so by separately measuring the

1175
00:41:28,240 --> 00:41:29,680
z type priorities on the x side

1176
00:41:29,680 --> 00:41:31,280
priorities and correcting

1177
00:41:31,280 --> 00:41:33,440
the x type the z type or partially the

1178
00:41:33,440 --> 00:41:35,040
x-divers and the z-type errors

1179
00:41:35,040 --> 00:41:37,520
we actually and automatically without

1180
00:41:37,520 --> 00:41:38,720
any extra effort

1181
00:41:38,720 --> 00:41:42,400
will correct the y-type errors as well

1182
00:41:42,400 --> 00:41:44,560
so this can correct against any single

1183
00:41:44,560 --> 00:41:45,920
qubit x y and z

1184
00:41:45,920 --> 00:41:49,359
error and another thing that i i

1185
00:41:49,359 --> 00:41:51,040
didn't go into any detail on here but

1186
00:41:51,040 --> 00:41:52,960
which is really beautiful and important

1187
00:41:52,960 --> 00:41:57,280
is moreover even if each qubit has some

1188
00:41:57,280 --> 00:41:58,800
superposition of different

1189
00:41:58,800 --> 00:42:01,200
types of error so instead of just an x

1190
00:42:01,200 --> 00:42:02,640
air or a wire

1191
00:42:02,640 --> 00:42:04,960
or the air it actually has some

1192
00:42:04,960 --> 00:42:06,560
superposition of those

1193
00:42:06,560 --> 00:42:08,319
whenever we measure these different

1194
00:42:08,319 --> 00:42:10,319
operators these parity operators

1195
00:42:10,319 --> 00:42:12,640
it actually collapses into one of these

1196
00:42:12,640 --> 00:42:13,839
three cases

1197
00:42:13,839 --> 00:42:16,480
and this is this is the beautiful way

1198
00:42:16,480 --> 00:42:16,880
that

1199
00:42:16,880 --> 00:42:18,319
quantum era correction solves the

1200
00:42:18,319 --> 00:42:20,640
problem of having um

1201
00:42:20,640 --> 00:42:22,240
an infinite number of different types of

1202
00:42:22,240 --> 00:42:24,319
error because the measurement that you

1203
00:42:24,319 --> 00:42:24,800
use

1204
00:42:24,800 --> 00:42:26,800
in quantum era correction actually

1205
00:42:26,800 --> 00:42:31,839
collapses into a finite set of errors

1206
00:42:32,160 --> 00:42:35,440
okay so this um the code that i just

1207
00:42:35,440 --> 00:42:37,040
described this approach to quantum era

1208
00:42:37,040 --> 00:42:38,000
correction

1209
00:42:38,000 --> 00:42:40,560
was actually a famous code called steam

1210
00:42:40,560 --> 00:42:41,599
code

1211
00:42:41,599 --> 00:42:44,160
but it's it's the first it can be viewed

1212
00:42:44,160 --> 00:42:45,920
as the first instance in a family of

1213
00:42:45,920 --> 00:42:46,800
codes

1214
00:42:46,800 --> 00:42:48,880
and it was able to correct against a

1215
00:42:48,880 --> 00:42:50,240
single error

1216
00:42:50,240 --> 00:42:52,079
but when you generalize it you need more

1217
00:42:52,079 --> 00:42:53,839
qubits but it can correct more errors

1218
00:42:53,839 --> 00:42:55,200
the second one can correct

1219
00:42:55,200 --> 00:42:57,040
two errors and then three hours etc and

1220
00:42:57,040 --> 00:42:58,880
you can make it as big as you want

1221
00:42:58,880 --> 00:43:01,599
and the point is that you can by making

1222
00:43:01,599 --> 00:43:03,119
it bigger and bigger you can get better

1223
00:43:03,119 --> 00:43:05,359
and better protection against error

1224
00:43:05,359 --> 00:43:06,880
and although you're paying for it

1225
00:43:06,880 --> 00:43:08,640
because you need more and more physical

1226
00:43:08,640 --> 00:43:09,200
qubits

1227
00:43:09,200 --> 00:43:11,680
to encode just one logical qubit each of

1228
00:43:11,680 --> 00:43:13,359
these different versions just encodes

1229
00:43:13,359 --> 00:43:15,680
one logical qubit

1230
00:43:15,680 --> 00:43:19,200
so the the picture over here shows

1231
00:43:19,200 --> 00:43:22,640
that um the value p

1232
00:43:22,640 --> 00:43:25,680
of each error on each qubit

1233
00:43:25,680 --> 00:43:27,359
on the x-axis and then the probability

1234
00:43:27,359 --> 00:43:28,880
of an overall failure

1235
00:43:28,880 --> 00:43:32,000
and so what i was describing was and you

1236
00:43:32,000 --> 00:43:32,400
get

1237
00:43:32,400 --> 00:43:34,960
better and better protection as you make

1238
00:43:34,960 --> 00:43:36,240
the system bigger and bigger

1239
00:43:36,240 --> 00:43:38,839
as you increase this the size of this

1240
00:43:38,839 --> 00:43:40,640
triangle

1241
00:43:40,640 --> 00:43:42,240
and therefore the number of qubits that

1242
00:43:42,240 --> 00:43:44,400
you need but there is a trade-off

1243
00:43:44,400 --> 00:43:45,839
there's a crossover point

1244
00:43:45,839 --> 00:43:49,040
if the if the noise on each qubit is too

1245
00:43:49,040 --> 00:43:49,680
high

1246
00:43:49,680 --> 00:43:51,920
then you actually make it worse and it's

1247
00:43:51,920 --> 00:43:53,040
kind of clear to see

1248
00:43:53,040 --> 00:43:55,440
where this comes from intuitively just

1249
00:43:55,440 --> 00:43:56,560
by the fact that

1250
00:43:56,560 --> 00:43:58,800
um if you have a large number a larger

1251
00:43:58,800 --> 00:44:00,400
number of qubits in your system that

1252
00:44:00,400 --> 00:44:01,839
you're using for error correction

1253
00:44:01,839 --> 00:44:04,400
there's more things that can go wrong so

1254
00:44:04,400 --> 00:44:06,079
even though you can correct more errors

1255
00:44:06,079 --> 00:44:08,720
more can go wrong as well and you win

1256
00:44:08,720 --> 00:44:10,319
this trade-off if you're below some

1257
00:44:10,319 --> 00:44:12,560
particular threshold value of

1258
00:44:12,560 --> 00:44:14,480
the noise and that's what i was talking

1259
00:44:14,480 --> 00:44:15,920
about when i talked about threshold

1260
00:44:15,920 --> 00:44:17,119
before

1261
00:44:17,119 --> 00:44:20,319
it's this turning point where below

1262
00:44:20,319 --> 00:44:21,680
which things are getting better with

1263
00:44:21,680 --> 00:44:23,119
error correction and above which you

1264
00:44:23,119 --> 00:44:24,400
shouldn't use error correction at all

1265
00:44:24,400 --> 00:44:27,520
because things are going to get worse

1266
00:44:27,520 --> 00:44:29,359
and okay and i just wanted to flash a

1267
00:44:29,359 --> 00:44:30,800
picture of you know we had

1268
00:44:30,800 --> 00:44:34,240
one particular family of um

1269
00:44:34,240 --> 00:44:36,000
of strategies we can say for quantum era

1270
00:44:36,000 --> 00:44:37,599
correction but there are many

1271
00:44:37,599 --> 00:44:40,000
um and there are many which are being

1272
00:44:40,000 --> 00:44:41,359
invented all the time

1273
00:44:41,359 --> 00:44:44,560
and it's very exciting that that so much

1274
00:44:44,560 --> 00:44:46,000
work is being done in this particular

1275
00:44:46,000 --> 00:44:47,040
area and it's something

1276
00:44:47,040 --> 00:44:48,960
that this is my research area so i'm

1277
00:44:48,960 --> 00:44:50,560
very passionate about

1278
00:44:50,560 --> 00:44:52,560
about these new developments which we

1279
00:44:52,560 --> 00:44:55,599
are making all the time

1280
00:44:55,599 --> 00:44:57,680
and and then i just wanted to highlight

1281
00:44:57,680 --> 00:45:00,079
we alluded to this earlier

1282
00:45:00,079 --> 00:45:02,000
what happens whenever we go from error

1283
00:45:02,000 --> 00:45:04,000
correction to fault tolerance

1284
00:45:04,000 --> 00:45:07,680
so here we said we could measure these

1285
00:45:07,680 --> 00:45:09,200
parities and that will tell us about

1286
00:45:09,200 --> 00:45:10,640
errors that occurred

1287
00:45:10,640 --> 00:45:12,480
but as kitty brought up we need to think

1288
00:45:12,480 --> 00:45:15,440
about how do we measure these parities

1289
00:45:15,440 --> 00:45:17,440
in the first contrived example where we

1290
00:45:17,440 --> 00:45:20,319
just measure the parity of two qubits

1291
00:45:20,319 --> 00:45:22,720
that might be possible in some systems

1292
00:45:22,720 --> 00:45:24,800
like in majorana systems

1293
00:45:24,800 --> 00:45:28,079
and but not in others and in

1294
00:45:28,079 --> 00:45:30,720
a scenario where we have a bigger error

1295
00:45:30,720 --> 00:45:32,000
correction scheme

1296
00:45:32,000 --> 00:45:33,760
like for the steam or the color code as

1297
00:45:33,760 --> 00:45:35,680
i described in a little bit more detail

1298
00:45:35,680 --> 00:45:36,960
afterwards

1299
00:45:36,960 --> 00:45:38,720
then we need four qubit parity

1300
00:45:38,720 --> 00:45:40,720
measurements and how do we do that in

1301
00:45:40,720 --> 00:45:42,560
practice

1302
00:45:42,560 --> 00:45:44,640
well the fact is that we need to build

1303
00:45:44,640 --> 00:45:46,240
these from some

1304
00:45:46,240 --> 00:45:47,920
basic operations that are actually

1305
00:45:47,920 --> 00:45:50,319
possible in this in the physical systems

1306
00:45:50,319 --> 00:45:52,319
and those basic operations can go wrong

1307
00:45:52,319 --> 00:45:54,480
too so maybe we actually introduce

1308
00:45:54,480 --> 00:45:55,920
errors when we're trying to

1309
00:45:55,920 --> 00:45:59,200
find and fix them so just

1310
00:45:59,200 --> 00:46:02,400
as a as a rough idea of this this is a

1311
00:46:02,400 --> 00:46:03,119
circuit

1312
00:46:03,119 --> 00:46:06,000
built of smaller pieces which allows you

1313
00:46:06,000 --> 00:46:07,119
to measure

1314
00:46:07,119 --> 00:46:10,720
the x type parity so here each of these

1315
00:46:10,720 --> 00:46:13,599
wires represents a single physical qubit

1316
00:46:13,599 --> 00:46:15,040
and the goal is to measure the x

1317
00:46:15,040 --> 00:46:16,560
priority on all of those

1318
00:46:16,560 --> 00:46:18,880
and a gadget to implement that

1319
00:46:18,880 --> 00:46:20,079
measurement is this one

1320
00:46:20,079 --> 00:46:23,680
we introduce one additional qubit here

1321
00:46:23,680 --> 00:46:26,319
and ancilla one whose job is really just

1322
00:46:26,319 --> 00:46:28,560
to help us with this measurement

1323
00:46:28,560 --> 00:46:30,400
and we prepare we prepare that qubit in

1324
00:46:30,400 --> 00:46:31,760
the plus state

1325
00:46:31,760 --> 00:46:34,960
we apply control not gates from that

1326
00:46:34,960 --> 00:46:37,359
and silicubit to each of the qubits that

1327
00:46:37,359 --> 00:46:38,319
we want to measure

1328
00:46:38,319 --> 00:46:40,960
the overall parity x priority of and

1329
00:46:40,960 --> 00:46:42,000
then we measure that

1330
00:46:42,000 --> 00:46:44,240
qubit and that outcome if nothing has

1331
00:46:44,240 --> 00:46:45,839
gone wrong if there's been no faults in

1332
00:46:45,839 --> 00:46:46,480
this

1333
00:46:46,480 --> 00:46:49,200
will tell us the overall parity the x

1334
00:46:49,200 --> 00:46:50,560
parity

1335
00:46:50,560 --> 00:46:51,920
but of course each of those things might

1336
00:46:51,920 --> 00:46:54,240
go wrong and so

1337
00:46:54,240 --> 00:46:56,480
whenever we have some circuit like this

1338
00:46:56,480 --> 00:46:57,440
we replace

1339
00:46:57,440 --> 00:46:59,359
each piece of the circuit as i've shown

1340
00:46:59,359 --> 00:47:00,960
here this is some other circuit

1341
00:47:00,960 --> 00:47:04,000
not necessarily for measuring and

1342
00:47:04,000 --> 00:47:05,680
for measuring a stabilizer for error

1343
00:47:05,680 --> 00:47:07,280
correction but just some arbitrary

1344
00:47:07,280 --> 00:47:08,079
circuit

1345
00:47:08,079 --> 00:47:10,480
and each of the pieces in the circuit

1346
00:47:10,480 --> 00:47:12,480
should be considered noisy so what do we

1347
00:47:12,480 --> 00:47:13,680
do is we follow

1348
00:47:13,680 --> 00:47:15,280
whenever we're simulating and imagining

1349
00:47:15,280 --> 00:47:16,720
how this works we

1350
00:47:16,720 --> 00:47:18,640
we make a noise model where we follow

1351
00:47:18,640 --> 00:47:20,079
each of the components

1352
00:47:20,079 --> 00:47:22,720
by some error or event that is possible

1353
00:47:22,720 --> 00:47:25,280
so for example a hadamard gate

1354
00:47:25,280 --> 00:47:27,520
would be represented in this in this

1355
00:47:27,520 --> 00:47:29,520
picture this noise picture

1356
00:47:29,520 --> 00:47:32,640
as a perfect hadamard gate followed by

1357
00:47:32,640 --> 00:47:36,000
um some probabilistic

1358
00:47:36,000 --> 00:47:39,040
process where you apply an x or a y or z

1359
00:47:39,040 --> 00:47:40,400
with each with probability p

1360
00:47:40,400 --> 00:47:43,359
over 3. but anyway this is getting very

1361
00:47:43,359 --> 00:47:44,000
detailed

1362
00:47:44,000 --> 00:47:46,640
but the idea is that what we described

1363
00:47:46,640 --> 00:47:48,079
before was very contrived

1364
00:47:48,079 --> 00:47:49,359
and what we really want to do is much

1365
00:47:49,359 --> 00:47:51,119
harder

1366
00:47:51,119 --> 00:47:53,119
and so i'm not going to go into detail

1367
00:47:53,119 --> 00:47:54,400
on this but

1368
00:47:54,400 --> 00:47:56,079
the idea there are strategies to deal

1369
00:47:56,079 --> 00:47:58,160
with this and and they're known as fault

1370
00:47:58,160 --> 00:47:59,760
tolerant error correction

1371
00:47:59,760 --> 00:48:01,839
and one of the ways that we can achieve

1372
00:48:01,839 --> 00:48:02,960
this is

1373
00:48:02,960 --> 00:48:07,040
to have um

1374
00:48:07,040 --> 00:48:09,680
is to repeat measurements and use the

1375
00:48:09,680 --> 00:48:11,520
fact that we now have

1376
00:48:11,520 --> 00:48:14,000
um some repetition in the information

1377
00:48:14,000 --> 00:48:15,520
that we've gathered about the errors in

1378
00:48:15,520 --> 00:48:16,480
the system

1379
00:48:16,480 --> 00:48:19,680
to to be able to trust that information

1380
00:48:19,680 --> 00:48:21,839
better

1381
00:48:22,079 --> 00:48:23,440
okay but one thing i want to point out

1382
00:48:23,440 --> 00:48:25,599
here is that

1383
00:48:25,599 --> 00:48:28,800
um the current best approach in in some

1384
00:48:28,800 --> 00:48:30,480
regards is the surface code

1385
00:48:30,480 --> 00:48:31,920
and you've probably heard about that

1386
00:48:31,920 --> 00:48:34,720
before and the surface code has a

1387
00:48:34,720 --> 00:48:36,480
threshold for quantum error correction

1388
00:48:36,480 --> 00:48:39,119
given noise noise in the measurements of

1389
00:48:39,119 --> 00:48:40,720
around one percent

1390
00:48:40,720 --> 00:48:42,400
and it's best it's important to point

1391
00:48:42,400 --> 00:48:44,160
out that before that

1392
00:48:44,160 --> 00:48:46,480
um things were continually getting

1393
00:48:46,480 --> 00:48:47,200
better but the

1394
00:48:47,200 --> 00:48:49,280
the original thresholds the early

1395
00:48:49,280 --> 00:48:50,800
thresholds that were

1396
00:48:50,800 --> 00:48:52,480
discussed and other types of approaches

1397
00:48:52,480 --> 00:48:53,920
to quantum computing were much much

1398
00:48:53,920 --> 00:48:54,480
lower

1399
00:48:54,480 --> 00:48:56,960
so much harder to achieve with hardware

1400
00:48:56,960 --> 00:48:58,720
and so instead of ten to the minus two

1401
00:48:58,720 --> 00:48:59,359
they were

1402
00:48:59,359 --> 00:49:01,040
you know three orders of magnitude lower

1403
00:49:01,040 --> 00:49:03,599
than that around 10 to the -5

1404
00:49:03,599 --> 00:49:07,200
and no hardware that people have today

1405
00:49:07,200 --> 00:49:10,319
at scale um well

1406
00:49:10,319 --> 00:49:11,760
i should be a little careful with what i

1407
00:49:11,760 --> 00:49:13,599
say it seems very improbable

1408
00:49:13,599 --> 00:49:16,640
to me at least that at scale

1409
00:49:16,640 --> 00:49:19,200
you can get much better than than that

1410
00:49:19,200 --> 00:49:19,920
kind of

1411
00:49:19,920 --> 00:49:22,319
threshold and if you're not considerably

1412
00:49:22,319 --> 00:49:23,680
below that threshold

1413
00:49:23,680 --> 00:49:26,960
then i think um yeah quantum era

1414
00:49:26,960 --> 00:49:27,839
correction wouldn't

1415
00:49:27,839 --> 00:49:32,000
wouldn't be able to work at all and the

1416
00:49:32,000 --> 00:49:35,280
point i'm trying to make here is that

1417
00:49:35,280 --> 00:49:37,599
advances in just the theory of quantum

1418
00:49:37,599 --> 00:49:39,520
era correction and fault tolerance

1419
00:49:39,520 --> 00:49:42,559
can take things which are available in

1420
00:49:42,559 --> 00:49:43,680
the lab

1421
00:49:43,680 --> 00:49:46,800
from not being it not being possible to

1422
00:49:46,800 --> 00:49:48,240
make scalable quantum computers out of

1423
00:49:48,240 --> 00:49:48,559
them

1424
00:49:48,559 --> 00:49:51,520
to it being possible to do so certainly

1425
00:49:51,520 --> 00:49:52,559
that's what happened in

1426
00:49:52,559 --> 00:49:54,800
in the case of going from the original

1427
00:49:54,800 --> 00:49:58,240
approaches to the surface code

1428
00:49:58,240 --> 00:49:59,760
okay another thing that we look at and

1429
00:49:59,760 --> 00:50:01,839
we think about a lot in this field

1430
00:50:01,839 --> 00:50:04,079
that i'm going to skip is how you

1431
00:50:04,079 --> 00:50:04,960
implement

1432
00:50:04,960 --> 00:50:06,720
gates on the logical information that's

1433
00:50:06,720 --> 00:50:08,720
encoded and

1434
00:50:08,720 --> 00:50:11,440
but there's and there are ways of doing

1435
00:50:11,440 --> 00:50:12,000
this and

1436
00:50:12,000 --> 00:50:14,480
some of these um gates can be very

1437
00:50:14,480 --> 00:50:15,200
costly

1438
00:50:15,200 --> 00:50:19,119
and in general for example uh typically

1439
00:50:19,119 --> 00:50:21,839
quantum error correction approach will

1440
00:50:21,839 --> 00:50:23,839
allow some gates to be implemented quite

1441
00:50:23,839 --> 00:50:25,200
easily and some other cases to be

1442
00:50:25,200 --> 00:50:27,520
implemented in a really difficult way

1443
00:50:27,520 --> 00:50:29,920
and in the surface code for example the

1444
00:50:29,920 --> 00:50:32,240
clifford gates tend to be quite

1445
00:50:32,240 --> 00:50:35,040
direct to implement but the non-clifford

1446
00:50:35,040 --> 00:50:36,480
gates can be

1447
00:50:36,480 --> 00:50:39,440
very costly to implement and you

1448
00:50:39,440 --> 00:50:41,280
actually use something called

1449
00:50:41,280 --> 00:50:43,839
magic state distillation to do that um

1450
00:50:43,839 --> 00:50:46,559
which i'm not going to go into in detail

1451
00:50:46,559 --> 00:50:48,240
and yeah so i think i'm going to skip

1452
00:50:48,240 --> 00:50:50,240
the details of this part so that we have

1453
00:50:50,240 --> 00:50:51,680
some time for questions

1454
00:50:51,680 --> 00:50:54,720
if there are any um but the point is

1455
00:50:54,720 --> 00:50:55,440
that

1456
00:50:55,440 --> 00:50:56,720
it's not just enough to store

1457
00:50:56,720 --> 00:50:59,200
information falter-learnly you also need

1458
00:50:59,200 --> 00:51:01,119
to be able to process it

1459
00:51:01,119 --> 00:51:04,400
and this is a this is a quick sketch of

1460
00:51:04,400 --> 00:51:06,240
how magic state distillation works

1461
00:51:06,240 --> 00:51:08,800
but this is essentially the most costly

1462
00:51:08,800 --> 00:51:10,160
of the

1463
00:51:10,160 --> 00:51:12,559
um operations that you would perform for

1464
00:51:12,559 --> 00:51:14,240
example in the surface code

1465
00:51:14,240 --> 00:51:16,880
and the reason it's so costly is because

1466
00:51:16,880 --> 00:51:18,559
it's not a natural gate and you need to

1467
00:51:18,559 --> 00:51:20,720
build it out of many many many

1468
00:51:20,720 --> 00:51:23,920
and smaller gates and use this process

1469
00:51:23,920 --> 00:51:24,640
to

1470
00:51:24,640 --> 00:51:28,480
to take those small noisy um

1471
00:51:28,480 --> 00:51:30,880
operations and make them into large

1472
00:51:30,880 --> 00:51:32,079
clean operations

1473
00:51:32,079 --> 00:51:34,319
but that process requires a huge number

1474
00:51:34,319 --> 00:51:36,079
of inputs and so it's it's

1475
00:51:36,079 --> 00:51:40,559
very costly on a quantum computer um

1476
00:51:40,559 --> 00:51:44,160
okay so let me skip

1477
00:51:44,160 --> 00:51:46,640
yeah okay

1478
00:51:47,200 --> 00:51:49,359
let me skip that and just go to the

1479
00:51:49,359 --> 00:51:50,480
summary so

1480
00:51:50,480 --> 00:51:53,359
the the things that i described and want

1481
00:51:53,359 --> 00:51:54,000
to highlight

1482
00:51:54,000 --> 00:51:56,400
are first of all that noise is one of

1483
00:51:56,400 --> 00:51:57,839
the main things that has held us back

1484
00:51:57,839 --> 00:51:59,520
from scalable quantum computers

1485
00:51:59,520 --> 00:52:01,040
it's quantum computing was first

1486
00:52:01,040 --> 00:52:03,359
proposed um in the 80s

1487
00:52:03,359 --> 00:52:04,880
and people have been working hard to

1488
00:52:04,880 --> 00:52:07,359
make it a reality and we're getting

1489
00:52:07,359 --> 00:52:09,119
we're getting very close to scalable

1490
00:52:09,119 --> 00:52:11,040
quantum computers today we believe

1491
00:52:11,040 --> 00:52:12,960
feel that we're on a precipice at this

1492
00:52:12,960 --> 00:52:14,800
moment but there's quite a period of

1493
00:52:14,800 --> 00:52:16,480
time between then and now

1494
00:52:16,480 --> 00:52:19,359
and one of the major challenges was

1495
00:52:19,359 --> 00:52:20,640
overcoming the effects of

1496
00:52:20,640 --> 00:52:24,640
noise in quantum systems and

1497
00:52:24,640 --> 00:52:26,400
but we have been able to achieve that

1498
00:52:26,400 --> 00:52:28,480
and so there are quantum era correction

1499
00:52:28,480 --> 00:52:29,920
and fault tolerance schemes that have

1500
00:52:29,920 --> 00:52:32,319
been designed that will work if we have

1501
00:52:32,319 --> 00:52:33,599
good enough qubits

1502
00:52:33,599 --> 00:52:37,040
and if we have enough of them but

1503
00:52:37,040 --> 00:52:40,240
those existing schemes are still much

1504
00:52:40,240 --> 00:52:41,280
more

1505
00:52:41,280 --> 00:52:43,119
restrictive than we would like and we

1506
00:52:43,119 --> 00:52:44,880
would like to have new ones

1507
00:52:44,880 --> 00:52:47,920
which allow us to use systems which

1508
00:52:47,920 --> 00:52:48,720
don't have to be

1509
00:52:48,720 --> 00:52:51,359
quite as good and where we don't need

1510
00:52:51,359 --> 00:52:53,040
quite as many physical qubits per

1511
00:52:53,040 --> 00:52:54,480
logical qubit

1512
00:52:54,480 --> 00:52:56,480
and and as has happened before with

1513
00:52:56,480 --> 00:52:57,920
quantum error correction

1514
00:52:57,920 --> 00:52:59,839
if we get if we have new ideas and new

1515
00:52:59,839 --> 00:53:01,440
approaches then these

1516
00:53:01,440 --> 00:53:03,200
approaches without actually having to

1517
00:53:03,200 --> 00:53:04,880
change the hardware that exists

1518
00:53:04,880 --> 00:53:06,880
could jump the field forward by many

1519
00:53:06,880 --> 00:53:08,880
years

1520
00:53:08,880 --> 00:53:11,760
so i think i will end there and switch

1521
00:53:11,760 --> 00:53:13,200
over to questions if there

1522
00:53:13,200 --> 00:53:16,960
are any yeah there are

1523
00:53:16,960 --> 00:53:20,880
a couple of questions in the chat

1524
00:53:22,160 --> 00:53:26,319
so one at 906

1525
00:53:26,319 --> 00:53:29,280
my time what if there are multiple

1526
00:53:29,280 --> 00:53:30,640
devices with

1527
00:53:30,640 --> 00:53:33,280
saying initial condition for copying

1528
00:53:33,280 --> 00:53:34,160
states

1529
00:53:34,160 --> 00:53:38,160
so failure part and parity bit

1530
00:53:38,160 --> 00:53:40,839
um can you repeat that what if there are

1531
00:53:40,839 --> 00:53:42,480
multiple yeah i'm just

1532
00:53:42,480 --> 00:53:44,480
reading i'm not quite sure what they're

1533
00:53:44,480 --> 00:53:46,160
asking actually

1534
00:53:46,160 --> 00:53:48,160
um but read it again maybe i can figure

1535
00:53:48,160 --> 00:53:50,319
out what's meant

1536
00:53:50,319 --> 00:53:52,640
or can i see i don't know yes you can

1537
00:53:52,640 --> 00:53:53,359
see the

1538
00:53:53,359 --> 00:53:55,680
message too so that's why we were

1539
00:53:55,680 --> 00:53:56,480
talking about

1540
00:53:56,480 --> 00:53:59,599
failure fail yeah and

1541
00:53:59,599 --> 00:54:02,640
uh sumit asks what if there are multiple

1542
00:54:02,640 --> 00:54:03,359
devices

1543
00:54:03,359 --> 00:54:06,640
with the same initial condition for

1544
00:54:06,640 --> 00:54:09,680
copying states so failure part

1545
00:54:09,680 --> 00:54:12,879
and parity bit

1546
00:54:15,200 --> 00:54:17,359
yeah so i think i'm not totally sure i

1547
00:54:17,359 --> 00:54:18,319
understand the question

1548
00:54:18,319 --> 00:54:21,920
but um the problem is that

1549
00:54:21,920 --> 00:54:25,359
you can't copy a quantum state

1550
00:54:25,359 --> 00:54:27,839
so what i imagine this person is

1551
00:54:27,839 --> 00:54:30,079
thinking about is what if you just start

1552
00:54:30,079 --> 00:54:31,520
two completely different quantum

1553
00:54:31,520 --> 00:54:33,200
computers and

1554
00:54:33,200 --> 00:54:35,040
and you start them in exactly the same

1555
00:54:35,040 --> 00:54:36,880
way and then

1556
00:54:36,880 --> 00:54:39,200
and then you then you know that after a

1557
00:54:39,200 --> 00:54:40,480
certain period of time you're gonna have

1558
00:54:40,480 --> 00:54:41,920
the same state if no errors have

1559
00:54:41,920 --> 00:54:44,559
occurred the same state in each of them

1560
00:54:44,559 --> 00:54:46,640
then can you somehow use this

1561
00:54:46,640 --> 00:54:48,400
information to help you

1562
00:54:48,400 --> 00:54:51,280
um and the answer is not in a not in a

1563
00:54:51,280 --> 00:54:52,079
really scalable

1564
00:54:52,079 --> 00:54:54,240
way because the things which are going

1565
00:54:54,240 --> 00:54:55,119
to happen

1566
00:54:55,119 --> 00:54:59,359
separately is going to be um

1567
00:54:59,359 --> 00:55:00,480
is going to be different in the two

1568
00:55:00,480 --> 00:55:02,640
cases

1569
00:55:02,640 --> 00:55:03,920
so yeah there will be different errors

1570
00:55:03,920 --> 00:55:06,160
in each of the two systems that you run

1571
00:55:06,160 --> 00:55:07,440
just because as we discussed they're

1572
00:55:07,440 --> 00:55:09,280
probabilistic so in one case there'll be

1573
00:55:09,280 --> 00:55:09,920
one error

1574
00:55:09,920 --> 00:55:11,760
another case will be a different error

1575
00:55:11,760 --> 00:55:13,760
and eventually for a big system those

1576
00:55:13,760 --> 00:55:15,200
are going to build up into the

1577
00:55:15,200 --> 00:55:17,520
completely completely separate sets of

1578
00:55:17,520 --> 00:55:18,960
errors that you can't use to

1579
00:55:18,960 --> 00:55:21,839
check across one another and and and you

1580
00:55:21,839 --> 00:55:24,480
wouldn't be able to

1581
00:55:24,480 --> 00:55:26,079
yeah in the classical case you can just

1582
00:55:26,079 --> 00:55:27,920
copy your state and you know that any

1583
00:55:27,920 --> 00:55:29,839
errors that have occurred

1584
00:55:29,839 --> 00:55:33,040
um between the two copies

1585
00:55:33,040 --> 00:55:34,640
so any discrepancy between the two

1586
00:55:34,640 --> 00:55:36,480
copies happy happened either

1587
00:55:36,480 --> 00:55:38,720
during the state being copied or since

1588
00:55:38,720 --> 00:55:40,480
then but in the quantum case you can't

1589
00:55:40,480 --> 00:55:42,079
do that you can't just copy your state

1590
00:55:42,079 --> 00:55:44,000
at a particular moment you

1591
00:55:44,000 --> 00:55:47,839
so yeah that's one of the problems

1592
00:55:47,839 --> 00:55:51,119
yeah and another question from pk can

1593
00:55:51,119 --> 00:55:54,960
repetition of an experiment to come up

1594
00:55:54,960 --> 00:55:59,119
with a result based on probability

1595
00:55:59,119 --> 00:56:01,760
yeah so again again the i think this is

1596
00:56:01,760 --> 00:56:03,359
a similar point i'm

1597
00:56:03,359 --> 00:56:06,799
but i'm not totally sure repeating

1598
00:56:06,799 --> 00:56:09,599
the entire competition so they're saying

1599
00:56:09,599 --> 00:56:10,640
they're asking if

1600
00:56:10,640 --> 00:56:13,440
um if it would be simpler than just

1601
00:56:13,440 --> 00:56:14,799
doing error correction

1602
00:56:14,799 --> 00:56:17,280
or can we combine both error correction

1603
00:56:17,280 --> 00:56:20,160
and repetition to get more accuracy

1604
00:56:20,160 --> 00:56:23,280
so repetition will help you for really

1605
00:56:23,280 --> 00:56:24,480
small systems

1606
00:56:24,480 --> 00:56:26,079
but what happens if you don't do error

1607
00:56:26,079 --> 00:56:28,079
correction in a quantum computer which

1608
00:56:28,079 --> 00:56:29,200
is a bigger system

1609
00:56:29,200 --> 00:56:31,359
is the probability of of it failing will

1610
00:56:31,359 --> 00:56:32,720
be almost exactly

1611
00:56:32,720 --> 00:56:36,480
one so it will almost certainly fail

1612
00:56:36,480 --> 00:56:39,920
and the probability of it failing

1613
00:56:39,920 --> 00:56:42,720
with the size of the computation goes to

1614
00:56:42,720 --> 00:56:45,040
one exponentially quickly

1615
00:56:45,040 --> 00:56:46,799
so you would need an exponential number

1616
00:56:46,799 --> 00:56:48,720
of copies of the system in order to

1617
00:56:48,720 --> 00:56:50,559
extract the output

1618
00:56:50,559 --> 00:56:53,760
so the answer is that that won't work

1619
00:56:53,760 --> 00:56:56,240
for a big quantum computer for a really

1620
00:56:56,240 --> 00:56:58,160
really small quantum computer where

1621
00:56:58,160 --> 00:57:00,000
you might you'll be in the regime where

1622
00:57:00,000 --> 00:57:01,839
just one error might have occurred

1623
00:57:01,839 --> 00:57:04,559
then then you might be fine but remember

1624
00:57:04,559 --> 00:57:06,160
just to give a rough idea

1625
00:57:06,160 --> 00:57:08,079
the number of gates that you're going to

1626
00:57:08,079 --> 00:57:09,200
need to apply

1627
00:57:09,200 --> 00:57:11,839
in say shores algorithm is going to be

1628
00:57:11,839 --> 00:57:14,400
around 10 to the 15.

1629
00:57:14,400 --> 00:57:17,119
and so if each of your qubits is failing

1630
00:57:17,119 --> 00:57:19,839
with the probability 10 to the minus 3

1631
00:57:19,839 --> 00:57:21,359
then they're going to be like 10 to the

1632
00:57:21,359 --> 00:57:23,440
12 failures

1633
00:57:23,440 --> 00:57:26,079
in your overall computation so the

1634
00:57:26,079 --> 00:57:28,000
overall computation will definitely fail

1635
00:57:28,000 --> 00:57:29,839
if you don't do error correction

1636
00:57:29,839 --> 00:57:33,760
and it's not that you can just repeat

1637
00:57:33,760 --> 00:57:35,200
over and over again you would need to

1638
00:57:35,200 --> 00:57:40,160
repeat it many billions of times

1639
00:57:40,160 --> 00:57:43,760
and mike asked also in terms of

1640
00:57:43,760 --> 00:57:45,760
quantum error correction and reducing

1641
00:57:45,760 --> 00:57:47,520
noise is this still

1642
00:57:47,520 --> 00:57:50,720
only over cables or

1643
00:57:50,720 --> 00:57:55,839
is there a less noisy wireless method

1644
00:57:56,319 --> 00:57:59,839
um there's noise so there's noise in in

1645
00:57:59,839 --> 00:58:01,520
the sources of the noise i didn't really

1646
00:58:01,520 --> 00:58:03,599
discuss today because they come from

1647
00:58:03,599 --> 00:58:07,040
really everything so for example

1648
00:58:07,040 --> 00:58:10,079
noise includes noise on the cables but

1649
00:58:10,079 --> 00:58:11,440
noise also includes

1650
00:58:11,440 --> 00:58:14,079
a photon which happens to hit the system

1651
00:58:14,079 --> 00:58:15,040
noise

1652
00:58:15,040 --> 00:58:16,960
noise includes the fact that other

1653
00:58:16,960 --> 00:58:18,480
qubits are

1654
00:58:18,480 --> 00:58:20,559
nearby the qubit that that i'm

1655
00:58:20,559 --> 00:58:21,920
considering right now and so they

1656
00:58:21,920 --> 00:58:23,119
interact slightly

1657
00:58:23,119 --> 00:58:26,400
all of these effects are will introduce

1658
00:58:26,400 --> 00:58:27,040
noise

1659
00:58:27,040 --> 00:58:29,760
and they're not they're unavoidable you

1660
00:58:29,760 --> 00:58:30,720
can't

1661
00:58:30,720 --> 00:58:33,280
you can't reduce the probability of

1662
00:58:33,280 --> 00:58:34,960
noise to

1663
00:58:34,960 --> 00:58:37,440
to be below a certain level it's just

1664
00:58:37,440 --> 00:58:39,760
practically never going to be possible

1665
00:58:39,760 --> 00:58:41,599
um so you have to accept that there's

1666
00:58:41,599 --> 00:58:43,760
always going to be some noise

1667
00:58:43,760 --> 00:58:45,760
yeah and i think there are some people

1668
00:58:45,760 --> 00:58:47,359
who are thinking more about

1669
00:58:47,359 --> 00:58:48,240
communication

1670
00:58:48,240 --> 00:58:51,280
like what type of cables optical

1671
00:58:51,280 --> 00:58:52,000
electrical

1672
00:58:52,000 --> 00:58:54,480
even some someone said gamma waves i

1673
00:58:54,480 --> 00:58:55,200
think they're

1674
00:58:55,200 --> 00:58:56,960
more thinking about how you you're

1675
00:58:56,960 --> 00:58:58,559
transmitting the data

1676
00:58:58,559 --> 00:59:01,520
and the errors occur there yeah and this

1677
00:59:01,520 --> 00:59:01,920
is

1678
00:59:01,920 --> 00:59:04,160
that's that's a separate topic but in

1679
00:59:04,160 --> 00:59:06,000
this case we're really just imagining

1680
00:59:06,000 --> 00:59:07,680
you have a quantum computer it's sitting

1681
00:59:07,680 --> 00:59:09,440
in one place and you want to use it

1682
00:59:09,440 --> 00:59:12,160
and errors happen while you're using it

1683
00:59:12,160 --> 00:59:12,799
yeah

1684
00:59:12,799 --> 00:59:14,240
and we're talking about the actual

1685
00:59:14,240 --> 00:59:18,559
qubits that's itself generating errors

1686
00:59:18,559 --> 00:59:22,160
yeah so um yeah less

1687
00:59:22,160 --> 00:59:24,880
less about the how do you transmit

1688
00:59:24,880 --> 00:59:27,040
information is more about

1689
00:59:27,040 --> 00:59:30,319
your actual qubit for example

1690
00:59:30,319 --> 00:59:33,280
superconducting qubit sitting in a

1691
00:59:33,280 --> 00:59:34,160
really cold

1692
00:59:34,160 --> 00:59:37,359
dilution refrigerator even there yeah

1693
00:59:37,359 --> 00:59:39,200
both the noise could be on the

1694
00:59:39,200 --> 00:59:40,880
superconducting qubit itself because

1695
00:59:40,880 --> 00:59:42,079
there's some

1696
00:59:42,079 --> 00:59:44,000
changing magnetic field which is all

1697
00:59:44,000 --> 00:59:46,000
right affecting the qubit or it could be

1698
00:59:46,000 --> 00:59:47,280
whenever you're reading out the

1699
00:59:47,280 --> 00:59:49,280
information from that qubit

1700
00:59:49,280 --> 00:59:51,359
then the wire has some noise and you get

1701
00:59:51,359 --> 00:59:52,960
the outcome wrong

1702
00:59:52,960 --> 00:59:54,960
and it can be all of these things but

1703
00:59:54,960 --> 00:59:56,640
there are many many different sources of

1704
00:59:56,640 --> 00:59:57,680
the noise

1705
00:59:57,680 --> 01:00:01,920
yep says are there any

1706
01:00:01,920 --> 01:00:04,799
error migration um sorry mitigation

1707
01:00:04,799 --> 01:00:05,440
techniques

1708
01:00:05,440 --> 01:00:07,119
other than error correction that are

1709
01:00:07,119 --> 01:00:09,040
promising for working in

1710
01:00:09,040 --> 01:00:12,079
conjunction with error correcting code

1711
01:00:12,079 --> 01:00:16,720
to achieve fault tolerance um

1712
01:00:16,720 --> 01:00:21,040
yeah i would say that that everything

1713
01:00:21,040 --> 01:00:22,960
every approach has some error mitigation

1714
01:00:22,960 --> 01:00:24,160
techniques so

1715
01:00:24,160 --> 01:00:26,240
um for example in superconducting qubits

1716
01:00:26,240 --> 01:00:28,240
and you've probably been through this

1717
01:00:28,240 --> 01:00:31,119
you can tune the system so that it's

1718
01:00:31,119 --> 01:00:31,760
less

1719
01:00:31,760 --> 01:00:35,280
it picks up noise less um

1720
01:00:35,280 --> 01:00:36,960
there are many things that people do at

1721
01:00:36,960 --> 01:00:38,960
the physical level to try

1722
01:00:38,960 --> 01:00:41,440
dynamic decoupling in some approaches

1723
01:00:41,440 --> 01:00:44,319
and but various different

1724
01:00:44,319 --> 01:00:46,160
physical things that you can do in your

1725
01:00:46,160 --> 01:00:48,799
hardware to reduce the noise and there

1726
01:00:48,799 --> 01:00:50,880
you can think of those as helping a

1727
01:00:50,880 --> 01:00:52,000
reflection

1728
01:00:52,000 --> 01:00:54,400
by reducing the probability of a failure

1729
01:00:54,400 --> 01:00:55,680
of each component

1730
01:00:55,680 --> 01:00:58,880
and yeah so yes i would say that's very

1731
01:00:58,880 --> 01:01:00,079
important and

1732
01:01:00,079 --> 01:01:04,799
and making the probability of each

1733
01:01:04,799 --> 01:01:08,480
operation in in hardware fail as small

1734
01:01:08,480 --> 01:01:11,280
as possible is is extremely useful for

1735
01:01:11,280 --> 01:01:12,799
reducing the overhead of quantum era

1736
01:01:12,799 --> 01:01:15,280
correction

1737
01:01:15,680 --> 01:01:19,440
yeah and we're at time i think okay

1738
01:01:19,440 --> 01:01:22,000
yeah we can we should let michael go

1739
01:01:22,000 --> 01:01:22,640
back

1740
01:01:22,640 --> 01:01:24,880
to this day thank you so much for

1741
01:01:24,880 --> 01:01:26,079
joining us

1742
01:01:26,079 --> 01:01:29,200
and um also we

1743
01:01:29,200 --> 01:01:31,119
this class is really to show people

1744
01:01:31,119 --> 01:01:32,480
what's in the real

1745
01:01:32,480 --> 01:01:35,760
world like in the past uh

1746
01:01:35,760 --> 01:01:38,880
maybe 20 sessions we're like learning

1747
01:01:38,880 --> 01:01:40,240
the basics

1748
01:01:40,240 --> 01:01:42,960
of how quantum computing works and then

1749
01:01:42,960 --> 01:01:44,880
writing the code and perhaps you can run

1750
01:01:44,880 --> 01:01:47,040
on simulators which runs perfectly and

1751
01:01:47,040 --> 01:01:48,319
there's no

1752
01:01:48,319 --> 01:01:50,960
like physical real world errors

1753
01:01:50,960 --> 01:01:51,680
introduced

1754
01:01:51,680 --> 01:01:55,359
but today we see that there's a lot to

1755
01:01:55,359 --> 01:01:56,079
consider

1756
01:01:56,079 --> 01:01:58,960
and it's very difficult but there are

1757
01:01:58,960 --> 01:02:00,559
ways people are working on it and i

1758
01:02:00,559 --> 01:02:02,400
think error correction is actually one

1759
01:02:02,400 --> 01:02:04,240
of the

1760
01:02:04,240 --> 01:02:06,880
really needed area for quantum

1761
01:02:06,880 --> 01:02:08,480
development quantum computing

1762
01:02:08,480 --> 01:02:10,559
so for the audience here if you are

1763
01:02:10,559 --> 01:02:12,400
entering the field of quantum

1764
01:02:12,400 --> 01:02:14,720
computing this would definitely be a

1765
01:02:14,720 --> 01:02:15,599
very

1766
01:02:15,599 --> 01:02:19,039
needing area that we need a lot of

1767
01:02:19,039 --> 01:02:20,160
people to come together

1768
01:02:20,160 --> 01:02:23,440
and come up with new methods for sure

1769
01:02:23,440 --> 01:02:24,640
yeah i think it's a very exciting

1770
01:02:24,640 --> 01:02:26,000
research area with

1771
01:02:26,000 --> 01:02:29,039
a huge potential impact and yeah

1772
01:02:29,039 --> 01:02:30,799
you should definitely if you want to

1773
01:02:30,799 --> 01:02:32,319
learn more then

1774
01:02:32,319 --> 01:02:35,680
you should definitely feel motivated to

1775
01:02:35,680 --> 01:02:37,520
do so there's a lot a lot of cool

1776
01:02:37,520 --> 01:02:40,880
um research being done yeah

1777
01:02:40,880 --> 01:02:44,400
small colleagues yeah

1778
01:02:44,400 --> 01:02:46,240
thanks everyone for joining and thank

1779
01:02:46,240 --> 01:02:48,480
you for coming to the very last class

1780
01:02:48,480 --> 01:02:48,799
for

1781
01:02:48,799 --> 01:02:52,240
2020 so we may have new contents next

1782
01:02:52,240 --> 01:02:55,599
year we'll keep everyone updated

1783
01:02:55,599 --> 01:02:57,920
through the hackaday page and also check

1784
01:02:57,920 --> 01:02:59,440
out our microsoft

1785
01:02:59,440 --> 01:03:08,240
websites all alright thank you everyone

