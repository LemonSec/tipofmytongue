1
00:00:00,000 --> 00:00:08,800
[Music]

2
00:00:08,800 --> 00:00:10,639
welcome to the first class of this four

3
00:00:10,639 --> 00:00:12,639
part series on interactive media art

4
00:00:12,639 --> 00:00:14,400
using light and sensors

5
00:00:14,400 --> 00:00:16,000
i'm your instructor mirabelle jones and

6
00:00:16,000 --> 00:00:17,520
i'll be introducing you to

7
00:00:17,520 --> 00:00:19,680
the circuit playground microcontroller a

8
00:00:19,680 --> 00:00:21,439
powerful device loaded with onboard

9
00:00:21,439 --> 00:00:22,000
sensors

10
00:00:22,000 --> 00:00:25,119
leds even a speaker we'll also be using

11
00:00:25,119 --> 00:00:26,720
servos to make projects with moving

12
00:00:26,720 --> 00:00:27,519
parts

13
00:00:27,519 --> 00:00:30,880
let's get started we're going to be

14
00:00:30,880 --> 00:00:32,079
using the circuit playground

15
00:00:32,079 --> 00:00:33,920
microcontroller in this class

16
00:00:33,920 --> 00:00:37,040
but what is a microcontroller

17
00:00:37,040 --> 00:00:38,719
a microcontroller is an electronic

18
00:00:38,719 --> 00:00:40,879
device which is capable of doing one or

19
00:00:40,879 --> 00:00:41,920
more tests

20
00:00:41,920 --> 00:00:44,000
it is made for embedded systems and is

21
00:00:44,000 --> 00:00:46,640
often used in automatic control systems

22
00:00:46,640 --> 00:00:49,120
it consists of memory i o ports and a

23
00:00:49,120 --> 00:00:50,160
processor

24
00:00:50,160 --> 00:00:52,239
a microcontroller unit usually comes

25
00:00:52,239 --> 00:00:54,160
with a breakout board which might extend

26
00:00:54,160 --> 00:00:57,120
its capabilities

27
00:00:57,520 --> 00:00:59,199
here are some popular microcontroller

28
00:00:59,199 --> 00:01:01,280
units there's the teensy

29
00:01:01,280 --> 00:01:04,799
the esp32 a pro micro and on the left we

30
00:01:04,799 --> 00:01:06,720
have the arduino uno which is often just

31
00:01:06,720 --> 00:01:09,760
called an arduino

32
00:01:10,240 --> 00:01:11,520
we're going to be using the circuit

33
00:01:11,520 --> 00:01:13,280
playground express which is a newer

34
00:01:13,280 --> 00:01:14,400
microcontroller

35
00:01:14,400 --> 00:01:16,080
loaded up with goodies for us to play

36
00:01:16,080 --> 00:01:18,320
with

37
00:01:18,560 --> 00:01:20,799
the circuit playground express has 10

38
00:01:20,799 --> 00:01:22,880
neopixels already on board

39
00:01:22,880 --> 00:01:25,520
it has a temperature sensor it has a

40
00:01:25,520 --> 00:01:26,400
light sensor

41
00:01:26,400 --> 00:01:29,040
it has a speaker a microphone a slide

42
00:01:29,040 --> 00:01:30,880
switch two buttons

43
00:01:30,880 --> 00:01:33,040
and it also has capacitive touch pads

44
00:01:33,040 --> 00:01:35,920
which we'll be using today

45
00:01:35,920 --> 00:01:39,360
let's get set up first you'll want to

46
00:01:39,360 --> 00:01:41,520
install the arduino ide

47
00:01:41,520 --> 00:01:44,560
to do so you can go to arduino.cc

48
00:01:44,560 --> 00:01:46,560
and under software you'll see a download

49
00:01:46,560 --> 00:01:48,640
link you'll want to download the correct

50
00:01:48,640 --> 00:01:52,320
version whether you're on mac or pc

51
00:01:52,320 --> 00:01:54,240
once you're at the arduino homepage

52
00:01:54,240 --> 00:01:56,240
you'll want to go to software

53
00:01:56,240 --> 00:02:00,079
and then go down to downloads

54
00:02:01,600 --> 00:02:03,360
you'll also see that there's an arduino

55
00:02:03,360 --> 00:02:05,520
web editor but we're going to download

56
00:02:05,520 --> 00:02:08,959
the arduino ide if you scroll down

57
00:02:08,959 --> 00:02:10,399
you'll see that the latest version of

58
00:02:10,399 --> 00:02:13,840
arduino is 1.8.13

59
00:02:13,840 --> 00:02:15,280
to the right you'll see different

60
00:02:15,280 --> 00:02:18,080
installers select the installer for your

61
00:02:18,080 --> 00:02:19,360
operating system

62
00:02:19,360 --> 00:02:23,840
i'm going to select mac

63
00:02:24,640 --> 00:02:27,280
arduino is open source software you can

64
00:02:27,280 --> 00:02:29,440
contribute to its development here

65
00:02:29,440 --> 00:02:34,000
or you can just click just download

66
00:02:34,800 --> 00:02:36,879
you'll be prompted to save the file

67
00:02:36,879 --> 00:02:39,518
click ok

68
00:02:40,000 --> 00:02:42,160
once the file is finished downloading

69
00:02:42,160 --> 00:02:45,280
you want to open it up

70
00:02:46,480 --> 00:02:50,879
it should automatically expand

71
00:02:50,879 --> 00:02:52,239
if you're on windows you're going to

72
00:02:52,239 --> 00:02:53,760
also want to install the circuit

73
00:02:53,760 --> 00:02:55,120
playground driver

74
00:02:55,120 --> 00:02:57,440
you can find it at the following url

75
00:02:57,440 --> 00:02:58,480
just follow through

76
00:02:58,480 --> 00:03:00,400
with what it says to do and you'll be

77
00:03:00,400 --> 00:03:02,080
all right

78
00:03:02,080 --> 00:03:05,040
this requires a special driver you're

79
00:03:05,040 --> 00:03:06,720
going to want to go to the adafruit

80
00:03:06,720 --> 00:03:08,640
website to find this

81
00:03:08,640 --> 00:03:11,519
you can also just google windows driver

82
00:03:11,519 --> 00:03:13,680
adafruit circuit playground express

83
00:03:13,680 --> 00:03:15,280
and it should be the first option that

84
00:03:15,280 --> 00:03:17,360
comes up

85
00:03:17,360 --> 00:03:18,720
once you're on the page that says

86
00:03:18,720 --> 00:03:20,720
windows driver installation

87
00:03:20,720 --> 00:03:22,640
you'll see a big green button that says

88
00:03:22,640 --> 00:03:24,879
download latest adafruit windows driver

89
00:03:24,879 --> 00:03:26,400
installer

90
00:03:26,400 --> 00:03:28,480
click this in order to download and run

91
00:03:28,480 --> 00:03:30,799
the installer

92
00:03:30,799 --> 00:03:34,400
then follow the instructions

93
00:03:45,599 --> 00:03:47,040
now we're going to want to install the

94
00:03:47,040 --> 00:03:50,080
library in arduino we're going to go to

95
00:03:50,080 --> 00:03:51,040
tools

96
00:03:51,040 --> 00:03:54,799
manage libraries in library manager

97
00:03:54,799 --> 00:03:57,040
type circuit playground express into the

98
00:03:57,040 --> 00:03:58,080
search bar

99
00:03:58,080 --> 00:04:00,640
then click install on adafruit circuit

100
00:04:00,640 --> 00:04:03,760
playground express

101
00:04:05,040 --> 00:04:08,159
now we want to install the library

102
00:04:08,159 --> 00:04:10,879
you're going to want to go up to tools

103
00:04:10,879 --> 00:04:12,840
manage

104
00:04:12,840 --> 00:04:15,840
libraries

105
00:04:16,238 --> 00:04:18,160
and then you'll have the library manager

106
00:04:18,160 --> 00:04:20,720
pop-up

107
00:04:21,680 --> 00:04:28,240
we can type in circuit playground

108
00:04:28,240 --> 00:04:30,000
and the adafruit circuit playground

109
00:04:30,000 --> 00:04:32,000
library will pop up

110
00:04:32,000 --> 00:04:33,759
unlike the boards there's just one

111
00:04:33,759 --> 00:04:35,759
library so you only need to worry about

112
00:04:35,759 --> 00:04:37,360
installing the adafruit circuit

113
00:04:37,360 --> 00:04:39,919
playground library for both the adafruit

114
00:04:39,919 --> 00:04:41,759
circuit playground board and also the

115
00:04:41,759 --> 00:04:45,440
adafruit circuit playground express

116
00:04:45,440 --> 00:04:48,240
to install it select the version that's

117
00:04:48,240 --> 00:04:49,440
most recent

118
00:04:49,440 --> 00:04:56,000
then click install

119
00:04:56,000 --> 00:04:58,800
we're going to install the board in

120
00:04:58,800 --> 00:05:00,240
arduino you're going to want to go back

121
00:05:00,240 --> 00:05:01,520
to tools

122
00:05:01,520 --> 00:05:04,240
and then under boards manager which is

123
00:05:04,240 --> 00:05:04,720
under

124
00:05:04,720 --> 00:05:07,520
board you're going to type in circuit

125
00:05:07,520 --> 00:05:08,800
playground express

126
00:05:08,800 --> 00:05:12,160
into the search bar you can also type in

127
00:05:12,160 --> 00:05:15,199
samd boards if you don't see it

128
00:05:15,199 --> 00:05:17,280
be careful because there's actually two

129
00:05:17,280 --> 00:05:19,199
versions of the circuit playground

130
00:05:19,199 --> 00:05:20,639
there's a circuit playground and a

131
00:05:20,639 --> 00:05:22,479
circuit playground express

132
00:05:22,479 --> 00:05:24,000
and we want to install the circuit

133
00:05:24,000 --> 00:05:26,080
playground express which is under

134
00:05:26,080 --> 00:05:29,360
samd boards once that comes up click

135
00:05:29,360 --> 00:05:33,199
install to install the latest version

136
00:05:33,199 --> 00:05:34,720
to make sure that you have the right

137
00:05:34,720 --> 00:05:38,000
board installed you want to go to tools

138
00:05:38,000 --> 00:05:42,720
board boards manager

139
00:05:43,520 --> 00:05:48,560
here you should type in samd boards

140
00:05:51,360 --> 00:05:54,080
you'll see that under samd boards the

141
00:05:54,080 --> 00:05:54,479
last

142
00:05:54,479 --> 00:05:56,560
option is adafruit circuit playground

143
00:05:56,560 --> 00:05:58,240
express

144
00:05:58,240 --> 00:06:00,560
beware that if you just type in circuit

145
00:06:00,560 --> 00:06:03,039
playground

146
00:06:03,280 --> 00:06:06,720
you'll get two different things pop up

147
00:06:06,720 --> 00:06:09,039
one of these is samd boards for the

148
00:06:09,039 --> 00:06:11,759
adafruit circuit playground express

149
00:06:11,759 --> 00:06:14,000
the other one is for adafruit circuit

150
00:06:14,000 --> 00:06:15,360
playground

151
00:06:15,360 --> 00:06:17,680
we're going to want to select express

152
00:06:17,680 --> 00:06:19,280
because that's the controller that we

153
00:06:19,280 --> 00:06:20,479
have

154
00:06:20,479 --> 00:06:22,720
if you select the most recent version

155
00:06:22,720 --> 00:06:24,319
and then click install

156
00:06:24,319 --> 00:06:28,000
it will begin the install process

157
00:06:29,120 --> 00:06:30,880
now you want to plug in your circuit

158
00:06:30,880 --> 00:06:32,880
playground in arduino

159
00:06:32,880 --> 00:06:35,120
go to tools board and then select the

160
00:06:35,120 --> 00:06:36,160
circuit playground

161
00:06:36,160 --> 00:06:38,560
express from the list if you don't see

162
00:06:38,560 --> 00:06:39,600
this as an option

163
00:06:39,600 --> 00:06:42,560
you have to install this amd boards go

164
00:06:42,560 --> 00:06:46,400
back a few slides and then try again

165
00:06:46,800 --> 00:06:49,280
to select the right board we go down to

166
00:06:49,280 --> 00:06:50,479
tools

167
00:06:50,479 --> 00:06:53,280
board and then we want to make sure that

168
00:06:53,280 --> 00:06:55,039
under arduino samd

169
00:06:55,039 --> 00:06:57,440
boards we have adafruit circuit

170
00:06:57,440 --> 00:06:58,800
playground express

171
00:06:58,800 --> 00:07:01,360
selected make sure that if you have an

172
00:07:01,360 --> 00:07:03,280
adafruit circuit playground

173
00:07:03,280 --> 00:07:05,199
that you don't select that for the

174
00:07:05,199 --> 00:07:07,840
express

175
00:07:10,160 --> 00:07:13,039
now we want to select the correct port

176
00:07:13,039 --> 00:07:14,400
you're going to go to tools

177
00:07:14,400 --> 00:07:16,960
board port and select the one that has

178
00:07:16,960 --> 00:07:18,639
the circuit playground

179
00:07:18,639 --> 00:07:22,319
which will either be under dev.cu.usb

180
00:07:22,319 --> 00:07:24,560
modem and a number if you're on mac

181
00:07:24,560 --> 00:07:27,199
or on windows it'll be a com port so

182
00:07:27,199 --> 00:07:28,000
com1

183
00:07:28,000 --> 00:07:32,000
2 3 4 etc in order to make sure that we

184
00:07:32,000 --> 00:07:33,919
have the right port selected

185
00:07:33,919 --> 00:07:37,599
we want to go to tools port

186
00:07:37,599 --> 00:07:39,440
and then depending on whether or not you

187
00:07:39,440 --> 00:07:40,720
have windows or mac

188
00:07:40,720 --> 00:07:43,360
it might look a little different for me

189
00:07:43,360 --> 00:07:44,639
i have

190
00:07:44,639 --> 00:07:47,759
forward slash dev forward slash cu dot

191
00:07:47,759 --> 00:07:48,879
usb modem

192
00:07:48,879 --> 00:07:51,199
and then a number i also have in

193
00:07:51,199 --> 00:07:53,440
parentheses adafruit circuit playground

194
00:07:53,440 --> 00:07:54,560
express

195
00:07:54,560 --> 00:07:56,479
if you have an older mac you might not

196
00:07:56,479 --> 00:07:58,720
see adafruit circuit express pop

197
00:07:58,720 --> 00:08:00,879
up but as long as you have something

198
00:08:00,879 --> 00:08:02,319
that says dev

199
00:08:02,319 --> 00:08:05,360
or usb modem it's probably the right

200
00:08:05,360 --> 00:08:07,680
port

201
00:08:10,319 --> 00:08:12,160
all of the code for this course is

202
00:08:12,160 --> 00:08:14,400
located on github

203
00:08:14,400 --> 00:08:16,800
you're going to want to go to github.com

204
00:08:16,800 --> 00:08:17,680
forward slash

205
00:08:17,680 --> 00:08:20,319
mirabel j forward slash hackaday

206
00:08:20,319 --> 00:08:21,039
underscore

207
00:08:21,039 --> 00:08:23,759
sensors you'll see a big green button

208
00:08:23,759 --> 00:08:24,319
that says

209
00:08:24,319 --> 00:08:27,360
code if you select that you can select

210
00:08:27,360 --> 00:08:29,759
download as zip this will allow you to

211
00:08:29,759 --> 00:08:32,479
download all the files to your computer

212
00:08:32,479 --> 00:08:34,799
unzip the files and then locate them on

213
00:08:34,799 --> 00:08:36,240
the desktop

214
00:08:36,240 --> 00:08:38,240
open the first sketch which is called

215
00:08:38,240 --> 00:08:40,479
one underscore hello world

216
00:08:40,479 --> 00:08:43,120
dot eno

217
00:08:43,760 --> 00:08:45,279
all of the sketches that we're going to

218
00:08:45,279 --> 00:08:47,600
be using in order to program our circuit

219
00:08:47,600 --> 00:08:48,560
playground

220
00:08:48,560 --> 00:08:52,320
can be found at github specifically

221
00:08:52,320 --> 00:08:55,839
go to github.com forward slash mirabelle

222
00:08:55,839 --> 00:08:59,279
j forward slash hackaday u underscore

223
00:08:59,279 --> 00:09:00,800
sensors

224
00:09:00,800 --> 00:09:02,480
there you'll see a big green button that

225
00:09:02,480 --> 00:09:04,560
says code

226
00:09:04,560 --> 00:09:06,399
if you click on this you should be able

227
00:09:06,399 --> 00:09:09,040
to download the zip file

228
00:09:09,040 --> 00:09:12,000
and then save it wherever you like once

229
00:09:12,000 --> 00:09:12,959
it's downloaded

230
00:09:12,959 --> 00:09:15,279
you should be able to open and unzip it

231
00:09:15,279 --> 00:09:17,120
and run any of the sketches that are in

232
00:09:17,120 --> 00:09:18,240
there

233
00:09:18,240 --> 00:09:20,720
if you have any trouble using github or

234
00:09:20,720 --> 00:09:22,399
downloading the zip file

235
00:09:22,399 --> 00:09:26,000
you can also click on any sketch

236
00:09:26,000 --> 00:09:28,720
and you'll see the code if you click on

237
00:09:28,720 --> 00:09:30,080
raw

238
00:09:30,080 --> 00:09:33,680
it will make it easier to copy and paste

239
00:09:33,680 --> 00:09:35,360
if you're going to do this make sure

240
00:09:35,360 --> 00:09:36,959
that you copy the whole

241
00:09:36,959 --> 00:09:39,760
sketch if you leave out just one

242
00:09:39,760 --> 00:09:43,040
semicolon it might be a problem

243
00:09:43,040 --> 00:09:47,360
open up the sketch called hello world

244
00:09:48,399 --> 00:09:50,320
if you don't have arduino open already

245
00:09:50,320 --> 00:09:53,200
it may take a second to initialize

246
00:09:53,200 --> 00:09:56,720
once it's open you'll see the ide ide

247
00:09:56,720 --> 00:09:58,720
stands for integrated development

248
00:09:58,720 --> 00:09:59,360
environment

249
00:09:59,360 --> 00:10:00,560
and it's where we'll be writing our

250
00:10:00,560 --> 00:10:02,720
arduino code

251
00:10:02,720 --> 00:10:04,480
first you'll see an include statement

252
00:10:04,480 --> 00:10:06,240
that tells us that we're including

253
00:10:06,240 --> 00:10:09,360
the adafruit circuit playground library

254
00:10:09,360 --> 00:10:13,120
then you'll see two functions void setup

255
00:10:13,120 --> 00:10:16,079
and void loop these are the two main

256
00:10:16,079 --> 00:10:17,040
functions

257
00:10:17,040 --> 00:10:19,839
of an arduino sketch they're a little

258
00:10:19,839 --> 00:10:21,279
different however

259
00:10:21,279 --> 00:10:23,360
void setup happens at the beginning of

260
00:10:23,360 --> 00:10:24,480
our sketch

261
00:10:24,480 --> 00:10:26,399
and anything we put in here will only

262
00:10:26,399 --> 00:10:28,720
run one time

263
00:10:28,720 --> 00:10:30,880
so for example we have a print statement

264
00:10:30,880 --> 00:10:33,200
that says serial.printline

265
00:10:33,200 --> 00:10:36,000
and then within parentheses and within

266
00:10:36,000 --> 00:10:36,720
quotes

267
00:10:36,720 --> 00:10:39,839
we have our statement started up

268
00:10:39,839 --> 00:10:42,240
then we have a short delay of 3000

269
00:10:42,240 --> 00:10:43,279
microseconds

270
00:10:43,279 --> 00:10:46,000
or 3 seconds this means that when our

271
00:10:46,000 --> 00:10:47,279
program runs

272
00:10:47,279 --> 00:10:49,279
we'll print this statement and then

273
00:10:49,279 --> 00:10:51,279
we'll wait for three seconds

274
00:10:51,279 --> 00:10:53,680
then we'll move on to our void loop

275
00:10:53,680 --> 00:10:55,120
function

276
00:10:55,120 --> 00:10:58,160
this function allows us to re-run code

277
00:10:58,160 --> 00:11:00,560
again and again and again

278
00:11:00,560 --> 00:11:03,040
so here we see serial print line hello

279
00:11:03,040 --> 00:11:04,320
world

280
00:11:04,320 --> 00:11:06,720
this message will print once per loop

281
00:11:06,720 --> 00:11:09,040
because it is in our loop function

282
00:11:09,040 --> 00:11:11,680
then we'll see a short delay of 250

283
00:11:11,680 --> 00:11:13,519
milliseconds

284
00:11:13,519 --> 00:11:15,360
let's try uploading this to our circuit

285
00:11:15,360 --> 00:11:17,600
playground and see what happens

286
00:11:17,600 --> 00:11:19,600
first make sure under tools board that

287
00:11:19,600 --> 00:11:21,279
you have the adafruit circuit playground

288
00:11:21,279 --> 00:11:23,440
express selected

289
00:11:23,440 --> 00:11:25,519
if you don't have this board you might

290
00:11:25,519 --> 00:11:28,480
need to add it in boards manager

291
00:11:28,480 --> 00:11:30,959
next go to port and make sure that you

292
00:11:30,959 --> 00:11:32,480
have the correct port

293
00:11:32,480 --> 00:11:34,000
again this will look a little different

294
00:11:34,000 --> 00:11:35,600
depending on if you're on mac

295
00:11:35,600 --> 00:11:38,399
or pc if you're on a pc you probably

296
00:11:38,399 --> 00:11:39,600
will see something like

297
00:11:39,600 --> 00:11:42,079
com and then a number if you're on a mac

298
00:11:42,079 --> 00:11:43,279
you'll see something like

299
00:11:43,279 --> 00:11:46,640
dev backslash cu.usb modem

300
00:11:46,640 --> 00:11:49,680
and then a long number

301
00:11:50,560 --> 00:11:52,720
next we want to upload the sketch to do

302
00:11:52,720 --> 00:11:53,920
this we can click

303
00:11:53,920 --> 00:11:56,560
this forward arrow if we hover over it

304
00:11:56,560 --> 00:11:57,120
it'll say

305
00:11:57,120 --> 00:11:59,839
upload the sketch might take a moment to

306
00:11:59,839 --> 00:12:01,680
compile

307
00:12:01,680 --> 00:12:03,680
if all goes well you'll see done

308
00:12:03,680 --> 00:12:06,240
uploading

309
00:12:06,240 --> 00:12:09,040
when it's finished go to tools and

310
00:12:09,040 --> 00:12:11,760
serial monitor

311
00:12:11,760 --> 00:12:13,920
as you can see we can see our statement

312
00:12:13,920 --> 00:12:15,680
printed out again and again and again

313
00:12:15,680 --> 00:12:17,360
and again

314
00:12:17,360 --> 00:12:18,800
if you get an error message while

315
00:12:18,800 --> 00:12:21,040
uploading your sketch try pressing the

316
00:12:21,040 --> 00:12:23,120
reset button between the two larger

317
00:12:23,120 --> 00:12:25,839
buttons twice

318
00:12:32,079 --> 00:12:34,880
in this sketch we can output text to the

319
00:12:34,880 --> 00:12:37,120
serial monitor

320
00:12:37,120 --> 00:12:39,680
as a challenge try changing the output

321
00:12:39,680 --> 00:12:40,399
to say

322
00:12:40,399 --> 00:12:44,800
hello your name instead of hello world

323
00:12:44,800 --> 00:12:47,360
next try adding a second print statement

324
00:12:47,360 --> 00:12:50,079
so it prints two things repeatedly

325
00:12:50,079 --> 00:12:53,760
you could ask how are you doing today

326
00:12:53,760 --> 00:12:55,519
then try changing the number in the

327
00:12:55,519 --> 00:12:58,399
delay from 250 to some other value

328
00:12:58,399 --> 00:13:00,720
to make the print statements shorter or

329
00:13:00,720 --> 00:13:02,480
faster

330
00:13:02,480 --> 00:13:04,800
for advanced users try writing some

331
00:13:04,800 --> 00:13:06,000
pseudocode or real

332
00:13:06,000 --> 00:13:08,399
code for a program that blinks an led on

333
00:13:08,399 --> 00:13:09,120
and off

334
00:13:09,120 --> 00:13:12,639
each loop or plays a tone

335
00:13:12,639 --> 00:13:15,440
now let's try making some sounds we

336
00:13:15,440 --> 00:13:17,120
downloaded the adafruit circuit

337
00:13:17,120 --> 00:13:18,959
playground library

338
00:13:18,959 --> 00:13:20,880
and underneath that we'll find lots of

339
00:13:20,880 --> 00:13:23,120
sketches that we can use

340
00:13:23,120 --> 00:13:26,720
to do so go to examples adafruit circuit

341
00:13:26,720 --> 00:13:27,839
playground

342
00:13:27,839 --> 00:13:30,160
hello circuit playground and hello

343
00:13:30,160 --> 00:13:32,639
speaker

344
00:13:32,720 --> 00:13:34,399
this should look very similar to our

345
00:13:34,399 --> 00:13:36,160
hello world sketch

346
00:13:36,160 --> 00:13:37,680
we're again including the adafruit

347
00:13:37,680 --> 00:13:39,839
circuit playground library

348
00:13:39,839 --> 00:13:42,160
we're initializing our controller we're

349
00:13:42,160 --> 00:13:44,639
adding a small delay for startup

350
00:13:44,639 --> 00:13:47,279
and then in our loop we're playing a

351
00:13:47,279 --> 00:13:48,399
tone

352
00:13:48,399 --> 00:13:51,440
to play a tone on our speaker we first

353
00:13:51,440 --> 00:13:52,079
say

354
00:13:52,079 --> 00:13:55,680
circuit playground dot play tone

355
00:13:55,680 --> 00:13:57,760
and then we have two different values

356
00:13:57,760 --> 00:13:59,839
that are in parentheses

357
00:13:59,839 --> 00:14:02,800
these values are a tone that's in hertz

358
00:14:02,800 --> 00:14:05,120
in this case it's 5000

359
00:14:05,120 --> 00:14:07,040
and then a duration which is in

360
00:14:07,040 --> 00:14:08,320
milliseconds

361
00:14:08,320 --> 00:14:10,880
so this is 2000 milliseconds which means

362
00:14:10,880 --> 00:14:12,720
it's two seconds

363
00:14:12,720 --> 00:14:14,480
we're telling the circuit playground to

364
00:14:14,480 --> 00:14:16,160
play a tone

365
00:14:16,160 --> 00:14:18,880
that's five thousand hertz for two

366
00:14:18,880 --> 00:14:20,240
seconds

367
00:14:20,240 --> 00:14:23,519
then we're adding a delay of one second

368
00:14:23,519 --> 00:14:25,920
because this is in loop this will happen

369
00:14:25,920 --> 00:14:27,040
again and again

370
00:14:27,040 --> 00:14:30,800
and again and again make sure that you

371
00:14:30,800 --> 00:14:32,639
have the correct

372
00:14:32,639 --> 00:14:36,639
board and also port selected

373
00:14:36,639 --> 00:14:39,920
then upload your sketch

374
00:14:43,680 --> 00:14:46,959
try changing the tone to a value between

375
00:14:46,959 --> 00:14:50,959
60 and 9000 to make a higher or lower

376
00:14:50,959 --> 00:14:52,800
tone

377
00:14:52,800 --> 00:14:59,839
you can also try changing the duration

378
00:15:03,360 --> 00:15:05,920
you can try copying and pasting to

379
00:15:05,920 --> 00:15:06,880
create your own

380
00:15:06,880 --> 00:15:10,240
song try changing the delay to also

381
00:15:10,240 --> 00:15:11,120
change

382
00:15:11,120 --> 00:15:27,839
the moments of silence between the tones

383
00:15:29,920 --> 00:15:32,639
try changing the values for hertz and

384
00:15:32,639 --> 00:15:33,440
duration

385
00:15:33,440 --> 00:15:36,160
in playtone to make your own jingle you

386
00:15:36,160 --> 00:15:37,360
can copy and paste

387
00:15:37,360 --> 00:15:40,800
the play tone statement

388
00:15:40,800 --> 00:15:43,199
for advanced users try combining the

389
00:15:43,199 --> 00:15:44,160
hello speaker

390
00:15:44,160 --> 00:15:46,399
and the hello neopixel sketches to

391
00:15:46,399 --> 00:15:47,519
include both sound

392
00:15:47,519 --> 00:15:50,959
and light for a very advanced challenge

393
00:15:50,959 --> 00:15:52,560
try creating different sounds and

394
00:15:52,560 --> 00:15:56,079
lighting loops with functions

395
00:15:56,959 --> 00:15:58,959
to solve the first challenge and make

396
00:15:58,959 --> 00:16:00,399
our own jingle

397
00:16:00,399 --> 00:16:02,160
we're going to want to make changes to

398
00:16:02,160 --> 00:16:05,920
the circuit playground.playtone function

399
00:16:05,920 --> 00:16:07,920
you can see this function written as the

400
00:16:07,920 --> 00:16:11,279
first line of our loop statement

401
00:16:11,279 --> 00:16:13,600
to make another note let's copy and

402
00:16:13,600 --> 00:16:14,560
paste

403
00:16:14,560 --> 00:16:16,480
both the circuit playground.playtone

404
00:16:16,480 --> 00:16:19,839
function and the delay

405
00:16:21,199 --> 00:16:23,839
then let's change the first value so

406
00:16:23,839 --> 00:16:26,880
right now we have a value of 300 hertz

407
00:16:26,880 --> 00:16:28,720
let's make a note that is a little

408
00:16:28,720 --> 00:16:31,199
higher than that last one

409
00:16:31,199 --> 00:16:33,519
we can also change how long the note is

410
00:16:33,519 --> 00:16:34,560
played for

411
00:16:34,560 --> 00:16:36,160
so right now the note is being played

412
00:16:36,160 --> 00:16:38,240
for a full second let's change this to

413
00:16:38,240 --> 00:16:40,399
500 and have it play for just half a

414
00:16:40,399 --> 00:16:41,759
second

415
00:16:41,759 --> 00:16:44,720
we can also change the delay value

416
00:16:44,720 --> 00:16:45,920
during the delay

417
00:16:45,920 --> 00:16:47,920
no note will be played so this is

418
00:16:47,920 --> 00:16:49,759
equivalent to the amount of silence we

419
00:16:49,759 --> 00:16:50,079
want

420
00:16:50,079 --> 00:16:53,360
between notes let's say half of a second

421
00:16:53,360 --> 00:16:54,880
again

422
00:16:54,880 --> 00:16:57,279
to put in a third note we just copy and

423
00:16:57,279 --> 00:17:01,279
paste these two lines once again

424
00:17:01,519 --> 00:17:03,519
let's make an even higher note than last

425
00:17:03,519 --> 00:17:06,720
time let's put in 900 hertz

426
00:17:06,720 --> 00:17:08,880
let's make this note play for three

427
00:17:08,880 --> 00:17:09,760
seconds

428
00:17:09,760 --> 00:17:12,799
or three thousand milliseconds then

429
00:17:12,799 --> 00:17:15,039
let's make a long delay

430
00:17:15,039 --> 00:17:18,480
of four seconds

431
00:17:18,480 --> 00:17:20,880
now we've made a three note song if you

432
00:17:20,880 --> 00:17:22,640
want to add more notes you can simply

433
00:17:22,640 --> 00:17:23,119
copy

434
00:17:23,119 --> 00:17:25,760
and paste again let's try uploading the

435
00:17:25,760 --> 00:17:33,840
sketch and see how it sounds

436
00:17:45,760 --> 00:17:47,840
learn a lot by looking at the examples

437
00:17:47,840 --> 00:17:49,360
of the adafruit circuit playground

438
00:17:49,360 --> 00:17:51,200
express library

439
00:17:51,200 --> 00:17:54,240
to do so we go up to file

440
00:17:54,240 --> 00:17:57,840
examples and then we go down to adafruit

441
00:17:57,840 --> 00:18:00,640
circuit playground

442
00:18:00,640 --> 00:18:02,320
here you'll see a lot of different

443
00:18:02,320 --> 00:18:04,320
example sketches with code that we can

444
00:18:04,320 --> 00:18:05,679
use

445
00:18:05,679 --> 00:18:07,039
if you're new to using the circuit

446
00:18:07,039 --> 00:18:08,720
playground or to microcontroller

447
00:18:08,720 --> 00:18:09,679
programming

448
00:18:09,679 --> 00:18:11,840
these are a great place to get started

449
00:18:11,840 --> 00:18:12,880
in your spare time

450
00:18:12,880 --> 00:18:14,720
have some fun looking at these example

451
00:18:14,720 --> 00:18:16,480
sketches and see if you can figure out

452
00:18:16,480 --> 00:18:17,840
what's going on

453
00:18:17,840 --> 00:18:20,000
for more advanced users i recommend

454
00:18:20,000 --> 00:18:22,640
looking at the microphone demos

455
00:18:22,640 --> 00:18:24,960
for example the sketch called birthday

456
00:18:24,960 --> 00:18:27,200
candles is an excellent example

457
00:18:27,200 --> 00:18:31,679
of interactivity with light and sound

458
00:18:31,679 --> 00:18:34,559
in this sketch we use variables to hold

459
00:18:34,559 --> 00:18:36,160
our notes

460
00:18:36,160 --> 00:18:37,840
so instead of playing note and then

461
00:18:37,840 --> 00:18:39,840
entering the value directly

462
00:18:39,840 --> 00:18:42,640
we create a list of notes that gets

463
00:18:42,640 --> 00:18:44,320
passed in

464
00:18:44,320 --> 00:18:47,440
when we play our note

465
00:18:47,440 --> 00:18:50,799
you can see this down below

466
00:18:50,799 --> 00:18:53,200
there are also variables to hold the

467
00:18:53,200 --> 00:18:56,559
length of the node

468
00:18:56,559 --> 00:18:58,320
if you're an advanced user try using

469
00:18:58,320 --> 00:19:00,000
this sketch to create your own

470
00:19:00,000 --> 00:19:03,200
sounds and your own lighting animations

471
00:19:03,200 --> 00:19:05,360
if you're new to programming here's a

472
00:19:05,360 --> 00:19:07,280
crash course in order to help you get

473
00:19:07,280 --> 00:19:08,640
started

474
00:19:08,640 --> 00:19:10,720
let's say we wanted to write our own new

475
00:19:10,720 --> 00:19:13,840
sketch that uses the circuit playground

476
00:19:13,840 --> 00:19:16,240
first we would want to go up to new in

477
00:19:16,240 --> 00:19:18,080
arduino

478
00:19:18,080 --> 00:19:19,840
and then we would open a new sketch

479
00:19:19,840 --> 00:19:22,080
sketches are always titled by the date

480
00:19:22,080 --> 00:19:25,200
but you can change this later then we'll

481
00:19:25,200 --> 00:19:26,559
want to see that the first thing we want

482
00:19:26,559 --> 00:19:28,400
to do if we're using anything that's in

483
00:19:28,400 --> 00:19:30,240
the circuit playground library

484
00:19:30,240 --> 00:19:32,720
is included so we'll want to copy this

485
00:19:32,720 --> 00:19:33,679
include statement

486
00:19:33,679 --> 00:19:36,799
or you can type it out if you want to

487
00:19:36,799 --> 00:19:38,400
we want to put this at the beginning of

488
00:19:38,400 --> 00:19:40,640
our sketch

489
00:19:40,640 --> 00:19:43,360
then in setup we want to initialize our

490
00:19:43,360 --> 00:19:45,360
circuit playground

491
00:19:45,360 --> 00:19:48,240
this is written as circuit playground

492
00:19:48,240 --> 00:19:48,640
dot

493
00:19:48,640 --> 00:19:51,840
begin here begin is a function of the

494
00:19:51,840 --> 00:19:54,720
circuit playground

495
00:19:54,720 --> 00:19:56,320
then we want to put in whatever is going

496
00:19:56,320 --> 00:19:57,919
to go in our loop

497
00:19:57,919 --> 00:19:59,600
you can copy and paste from other

498
00:19:59,600 --> 00:20:01,679
examples we'll do throughout the course

499
00:20:01,679 --> 00:20:03,760
or if you want to type hello world you

500
00:20:03,760 --> 00:20:06,159
can type a serial print line statement

501
00:20:06,159 --> 00:20:09,360
to do so we type serial dot print

502
00:20:09,360 --> 00:20:12,799
line beginning parentheses

503
00:20:12,799 --> 00:20:16,480
open quotes hello world

504
00:20:16,480 --> 00:20:19,200
and quotes and parentheses and a

505
00:20:19,200 --> 00:20:20,880
semicolon

506
00:20:20,880 --> 00:20:23,200
we end every statement with a semicolon

507
00:20:23,200 --> 00:20:25,039
this is a way to let the compiler know

508
00:20:25,039 --> 00:20:27,600
that we are done with a command

509
00:20:27,600 --> 00:20:31,199
we can also throw in a delay

510
00:20:31,280 --> 00:20:35,840
let's put in a delay of one second

511
00:20:36,240 --> 00:20:37,919
now when we run this program what do you

512
00:20:37,919 --> 00:20:40,000
think we'll see

513
00:20:40,000 --> 00:20:42,720
we'll see hello world being printed

514
00:20:42,720 --> 00:20:45,200
every second

515
00:20:45,200 --> 00:20:47,280
we've mentioned the word function before

516
00:20:47,280 --> 00:20:49,200
but what is a function

517
00:20:49,200 --> 00:20:52,400
a function is just a set of commands

518
00:20:52,400 --> 00:20:54,400
so in this case we could make a separate

519
00:20:54,400 --> 00:20:57,840
function for printing hello world

520
00:20:57,840 --> 00:21:01,360
to do so we would write void

521
00:21:01,360 --> 00:21:04,719
and then we would name our function

522
00:21:09,679 --> 00:21:11,280
and then within our brackets we would

523
00:21:11,280 --> 00:21:14,080
want to put in whatever our command is

524
00:21:14,080 --> 00:21:17,200
so in this case let's just say serial

525
00:21:17,200 --> 00:21:17,840
print line

526
00:21:17,840 --> 00:21:22,320
hello world and then a delay

527
00:21:22,320 --> 00:21:25,360
now if we replace this in our main loop

528
00:21:25,360 --> 00:21:31,760
we can call it by saying say hello world

529
00:21:31,760 --> 00:21:33,280
and then when we run it we'll see the

530
00:21:33,280 --> 00:21:35,760
same result

531
00:21:35,760 --> 00:21:37,919
we've used void here but sometimes

532
00:21:37,919 --> 00:21:39,360
you'll see int

533
00:21:39,360 --> 00:21:42,799
or bull or another variable

534
00:21:42,799 --> 00:21:44,400
void means that we're not returning

535
00:21:44,400 --> 00:21:46,559
anything in our function but sometimes

536
00:21:46,559 --> 00:21:47,600
you'll see functions

537
00:21:47,600 --> 00:21:49,679
especially mathematical ones that will

538
00:21:49,679 --> 00:21:50,880
return something

539
00:21:50,880 --> 00:21:53,760
like a number or true or false we'll see

540
00:21:53,760 --> 00:21:56,159
that later on in the course

541
00:21:56,159 --> 00:21:58,960
a variable allows us to store something

542
00:21:58,960 --> 00:22:00,480
either a number

543
00:22:00,480 --> 00:22:04,799
or a message a character or a value

544
00:22:04,799 --> 00:22:08,080
or true or false value so that we can

545
00:22:08,080 --> 00:22:10,559
use it later in our sketches

546
00:22:10,559 --> 00:22:12,640
say for example that instead of saying

547
00:22:12,640 --> 00:22:15,039
serial.print line hello world

548
00:22:15,039 --> 00:22:17,120
i wanted to store hello world as a

549
00:22:17,120 --> 00:22:18,320
message

550
00:22:18,320 --> 00:22:21,600
i could use a string variable to do so

551
00:22:21,600 --> 00:22:25,679
i would say string would name it

552
00:22:25,679 --> 00:22:30,400
message and then i would set it equal to

553
00:22:30,400 --> 00:22:33,120
hello world

554
00:22:35,440 --> 00:22:38,080
now instead of hello world i can just

555
00:22:38,080 --> 00:22:38,840
type

556
00:22:38,840 --> 00:22:42,799
message let's upload this and see if it

557
00:22:42,799 --> 00:22:45,120
works

558
00:22:45,600 --> 00:22:47,520
as we can see it still prints hello

559
00:22:47,520 --> 00:22:50,400
world just fine

560
00:22:53,280 --> 00:22:56,640
we can also do the same to store numbers

561
00:22:56,640 --> 00:22:59,520
for example say i want to store the

562
00:22:59,520 --> 00:23:01,200
number

563
00:23:01,200 --> 00:23:08,320
5 as my special number

564
00:23:08,320 --> 00:23:10,080
now let's say i wanted to print out my

565
00:23:10,080 --> 00:23:11,360
special number

566
00:23:11,360 --> 00:23:15,440
i could do a serial print line

567
00:23:15,440 --> 00:23:19,280
and then i could type special number

568
00:23:19,280 --> 00:23:21,200
what will happen now is that when the

569
00:23:21,200 --> 00:23:23,360
compiler sees serial print line

570
00:23:23,360 --> 00:23:25,600
and then sees this variable name it'll

571
00:23:25,600 --> 00:23:27,360
look to see what the value is

572
00:23:27,360 --> 00:23:30,640
in this case five so now we'll see hello

573
00:23:30,640 --> 00:23:32,400
world printed over and over again

574
00:23:32,400 --> 00:23:34,720
and we'll see my special number let's

575
00:23:34,720 --> 00:23:38,320
try to upload it and see what happens

576
00:23:44,480 --> 00:23:46,400
we can of course do mathematical

577
00:23:46,400 --> 00:23:48,159
calculations too

578
00:23:48,159 --> 00:23:51,120
so let's say that i wanted to add two to

579
00:23:51,120 --> 00:24:05,840
my special number

580
00:24:07,679 --> 00:24:10,640
now we see seven

581
00:24:13,679 --> 00:24:16,080
if we wanted to we could include this

582
00:24:16,080 --> 00:24:19,440
print statement as its own function

583
00:24:19,440 --> 00:24:24,320
again we would just need to say void

584
00:24:24,559 --> 00:24:27,840
print special number

585
00:24:30,880 --> 00:24:32,720
and then copy the serial print line

586
00:24:32,720 --> 00:24:34,159
statement

587
00:24:34,159 --> 00:24:37,760
then we would call it by saying print

588
00:24:37,760 --> 00:24:40,799
special number

589
00:24:43,360 --> 00:24:47,840
and you see it works just fine

590
00:24:48,799 --> 00:24:50,799
creating functions like this is a nice

591
00:24:50,799 --> 00:24:52,000
way to keep our code

592
00:24:52,000 --> 00:24:55,600
tidy we can also send arguments in

593
00:24:55,600 --> 00:24:56,880
functions

594
00:24:56,880 --> 00:24:58,960
so so far we've been having nothing in

595
00:24:58,960 --> 00:25:00,159
between the parentheses

596
00:25:00,159 --> 00:25:02,720
when we've been creating our functions

597
00:25:02,720 --> 00:25:04,480
but here we see the circuit playground

598
00:25:04,480 --> 00:25:05,120
playtone

599
00:25:05,120 --> 00:25:08,000
and it takes two arguments first it

600
00:25:08,000 --> 00:25:10,159
takes the hertz value

601
00:25:10,159 --> 00:25:12,559
which is what note to play in hertz and

602
00:25:12,559 --> 00:25:14,480
then it takes a duration

603
00:25:14,480 --> 00:25:16,640
this can be really useful if we need to

604
00:25:16,640 --> 00:25:19,200
have a function that has certain values

605
00:25:19,200 --> 00:25:22,400
we'll see this more in section two

606
00:25:22,400 --> 00:25:24,080
say we wanted to store our notes as

607
00:25:24,080 --> 00:25:25,679
variables

608
00:25:25,679 --> 00:25:28,559
we could easily do that by setting them

609
00:25:28,559 --> 00:25:28,799
as

610
00:25:28,799 --> 00:25:31,679
integer values for the first one let's

611
00:25:31,679 --> 00:25:32,320
call it

612
00:25:32,320 --> 00:25:35,679
note 1 and let's set it to

613
00:25:35,679 --> 00:25:39,600
50. now we can replace in our code

614
00:25:39,600 --> 00:25:43,039
note 1. we can do the same for the other

615
00:25:43,039 --> 00:25:44,240
notes

616
00:25:44,240 --> 00:25:57,679
note 2 and note 3.

617
00:25:57,679 --> 00:25:59,840
now whenever we want to change the note

618
00:25:59,840 --> 00:26:00,960
say it's a little

619
00:26:00,960 --> 00:26:03,360
too low or a little too high we can just

620
00:26:03,360 --> 00:26:05,200
change it at the top of our sketch

621
00:26:05,200 --> 00:26:06,880
instead of having to go down and find

622
00:26:06,880 --> 00:26:09,200
the note this can be really useful once

623
00:26:09,200 --> 00:26:12,559
you start to develop longer programs

624
00:26:12,559 --> 00:26:14,159
in the upcoming section we're going to

625
00:26:14,159 --> 00:26:15,760
use what we've learned about the speaker

626
00:26:15,760 --> 00:26:17,200
of the circuit playground

627
00:26:17,200 --> 00:26:20,159
in order to trigger tones using touch in

628
00:26:20,159 --> 00:26:21,679
order to do this we're going to need to

629
00:26:21,679 --> 00:26:23,039
learn a technology called

630
00:26:23,039 --> 00:26:25,440
capacitive touch don't worry if that

631
00:26:25,440 --> 00:26:26,799
term sounds confusing

632
00:26:26,799 --> 00:26:28,320
we'll go over it in detail in the next

633
00:26:28,320 --> 00:26:30,640
section

634
00:26:30,640 --> 00:26:32,080
you might be wondering what the term

635
00:26:32,080 --> 00:26:34,480
capacitive means and if it's related to

636
00:26:34,480 --> 00:26:35,840
a capacitor

637
00:26:35,840 --> 00:26:39,360
well it is as a reminder capacitor is an

638
00:26:39,360 --> 00:26:41,120
electronic component that consists of

639
00:26:41,120 --> 00:26:43,760
two electrically conductive surfaces

640
00:26:43,760 --> 00:26:46,320
also called electrodes one is connected

641
00:26:46,320 --> 00:26:48,159
to the positive pole of an electrical

642
00:26:48,159 --> 00:26:49,840
circuit and the other is connected to

643
00:26:49,840 --> 00:26:51,120
ground

644
00:26:51,120 --> 00:26:52,720
between these surfaces there is a

645
00:26:52,720 --> 00:26:55,760
non-conductive layer called a dielectric

646
00:26:55,760 --> 00:26:57,919
the capacitor can be compared to a small

647
00:26:57,919 --> 00:26:58,880
battery

648
00:26:58,880 --> 00:27:01,200
when sending a pulse to the capacitor it

649
00:27:01,200 --> 00:27:02,720
quickly charges

650
00:27:02,720 --> 00:27:04,400
when the signal goes to zero the

651
00:27:04,400 --> 00:27:06,960
capacitor discharges

652
00:27:06,960 --> 00:27:08,960
this creates a delay in the pulse due to

653
00:27:08,960 --> 00:27:10,400
the time it takes to charge and

654
00:27:10,400 --> 00:27:12,720
discharge the capacitor

655
00:27:12,720 --> 00:27:14,960
by measuring this change in the signal

656
00:27:14,960 --> 00:27:16,720
we can detect when something is being

657
00:27:16,720 --> 00:27:17,760
touched

658
00:27:17,760 --> 00:27:19,360
and we can do some pretty incredible

659
00:27:19,360 --> 00:27:20,960
things with that to make reactive

660
00:27:20,960 --> 00:27:24,159
artworks and instruments

661
00:27:24,720 --> 00:27:27,360
in 1928 leon theremin invented an

662
00:27:27,360 --> 00:27:28,960
instrument that could be controlled

663
00:27:28,960 --> 00:27:31,679
using this idea of capacitance to

664
00:27:31,679 --> 00:27:32,399
control it

665
00:27:32,399 --> 00:27:34,799
the performer positions their hands next

666
00:27:34,799 --> 00:27:36,720
to two metal antennas

667
00:27:36,720 --> 00:27:39,039
one for frequency and one for amplitude

668
00:27:39,039 --> 00:27:40,640
or volume

669
00:27:40,640 --> 00:27:42,559
the electric signals from the theremin

670
00:27:42,559 --> 00:27:44,399
are then amplified and sent out to a

671
00:27:44,399 --> 00:27:47,760
loudspeaker where they're made audible

672
00:27:47,760 --> 00:27:49,520
although leon theremin was the first to

673
00:27:49,520 --> 00:27:50,799
patent the invention

674
00:27:50,799 --> 00:27:52,559
the theremin was actually the result of

675
00:27:52,559 --> 00:27:55,039
early experiments in proximity sensing

676
00:27:55,039 --> 00:27:58,799
by the soviet government in the early

677
00:28:00,840 --> 00:28:03,840
1920s

678
00:28:13,270 --> 00:28:14,840
[Music]

679
00:28:14,840 --> 00:28:17,310
instruments

680
00:28:17,310 --> 00:28:47,289
[Music]

681
00:28:48,160 --> 00:28:51,100
[Applause]

682
00:28:51,100 --> 00:29:07,200
[Music]

683
00:29:07,200 --> 00:29:09,279
now we're going to try using capacitive

684
00:29:09,279 --> 00:29:11,120
touch if you've never heard of this

685
00:29:11,120 --> 00:29:13,039
technology it's a little difficult to

686
00:29:13,039 --> 00:29:14,159
explain

687
00:29:14,159 --> 00:29:16,080
but basically on board our circuit

688
00:29:16,080 --> 00:29:18,799
playground we have different copper pads

689
00:29:18,799 --> 00:29:21,120
these copper pads can be used to sense

690
00:29:21,120 --> 00:29:22,000
touch

691
00:29:22,000 --> 00:29:24,240
the way that this works is that each pad

692
00:29:24,240 --> 00:29:25,120
has an em

693
00:29:25,120 --> 00:29:27,440
or an electromagnetic field when this

694
00:29:27,440 --> 00:29:28,880
field is disturbed

695
00:29:28,880 --> 00:29:31,520
as you can see in the left photo it

696
00:29:31,520 --> 00:29:32,880
changes the reading

697
00:29:32,880 --> 00:29:36,480
of this field we can use this value

698
00:29:36,480 --> 00:29:38,840
of change in order to trigger different

699
00:29:38,840 --> 00:29:40,000
effects

700
00:29:40,000 --> 00:29:41,760
for a more detailed explanation of

701
00:29:41,760 --> 00:29:43,039
capacitive touch

702
00:29:43,039 --> 00:29:44,799
feel free to look at the following two

703
00:29:44,799 --> 00:29:46,640
links

704
00:29:46,640 --> 00:29:49,039
tap touches may be better explained in

705
00:29:49,039 --> 00:29:49,919
action

706
00:29:49,919 --> 00:29:55,840
so let's look at some examples

707
00:30:06,840 --> 00:30:09,840
so

708
00:30:18,520 --> 00:30:21,670
[Music]

709
00:30:24,550 --> 00:30:27,659
[Music]

710
00:30:35,679 --> 00:30:37,919
in this piece we see the artist using

711
00:30:37,919 --> 00:30:39,279
pieces of copper

712
00:30:39,279 --> 00:30:42,880
and foil tape and also conductive paint

713
00:30:42,880 --> 00:30:51,840
in order to extend the circuit

714
00:31:26,640 --> 00:31:28,240
here's another project that uses

715
00:31:28,240 --> 00:31:30,480
conductive paint but this time

716
00:31:30,480 --> 00:31:32,799
uses it to trigger different projections

717
00:31:32,799 --> 00:31:47,840
that map over the painting

718
00:31:48,560 --> 00:32:01,859
[Music]

719
00:32:02,880 --> 00:32:04,720
here we see that the instruments are

720
00:32:04,720 --> 00:32:15,810
actually made out of extensions of wire

721
00:32:15,810 --> 00:32:19,069
[Music]

722
00:32:26,840 --> 00:32:29,840
hey

723
00:32:38,470 --> 00:32:39,840
[Music]

724
00:32:39,840 --> 00:32:41,519
here's another piece that powerfully

725
00:32:41,519 --> 00:32:43,360
combines capacitive touch

726
00:32:43,360 --> 00:32:57,840
with projection mapping and sound

727
00:32:58,080 --> 00:32:59,519
the circuit playground has seven

728
00:32:59,519 --> 00:33:02,080
built-in capacitive touch sensing pads

729
00:33:02,080 --> 00:33:04,960
these are labeled as a1 through a7 on

730
00:33:04,960 --> 00:33:05,760
the board

731
00:33:05,760 --> 00:33:07,760
and correspond to the following digital

732
00:33:07,760 --> 00:33:09,279
pins

733
00:33:09,279 --> 00:33:10,880
you should note that the digital pins

734
00:33:10,880 --> 00:33:13,039
are not printed on the pcb

735
00:33:13,039 --> 00:33:15,279
but you can see the pin out on the next

736
00:33:15,279 --> 00:33:17,360
slide to see what each digital pin

737
00:33:17,360 --> 00:33:19,840
is here's the pin out map for the

738
00:33:19,840 --> 00:33:22,240
adafruit circuit playground express

739
00:33:22,240 --> 00:33:24,320
here you can see which pin each sensor

740
00:33:24,320 --> 00:33:25,519
is connected to

741
00:33:25,519 --> 00:33:28,080
as well as which pin is each analog and

742
00:33:28,080 --> 00:33:29,679
digital pin

743
00:33:29,679 --> 00:33:33,519
open up the sketch cap touch simple

744
00:33:33,519 --> 00:33:35,760
this looks a bit familiar to us but with

745
00:33:35,760 --> 00:33:37,279
some changes

746
00:33:37,279 --> 00:33:38,799
we're still including the adafruit

747
00:33:38,799 --> 00:33:40,559
circuit playground library

748
00:33:40,559 --> 00:33:43,279
but here we're defining a capped touch

749
00:33:43,279 --> 00:33:44,080
pin

750
00:33:44,080 --> 00:33:48,159
as a1 we can change this number to a

751
00:33:48,159 --> 00:33:49,440
different pin

752
00:33:49,440 --> 00:33:51,679
and include any cap touch pin that we

753
00:33:51,679 --> 00:33:54,399
want to use

754
00:33:54,480 --> 00:33:57,200
in our loop function we're having a

755
00:33:57,200 --> 00:33:58,640
print statement

756
00:33:58,640 --> 00:34:01,679
that reads out the cap touch value of

757
00:34:01,679 --> 00:34:03,519
that pin

758
00:34:03,519 --> 00:34:06,559
here cap pin 1 is used

759
00:34:06,559 --> 00:34:09,839
in place of a1 but we can just as easily

760
00:34:09,839 --> 00:34:10,480
say

761
00:34:10,480 --> 00:34:14,480
a1 why would we want to do it this way

762
00:34:14,480 --> 00:34:16,480
well if we want to change the cap touch

763
00:34:16,480 --> 00:34:18,560
pin all we need to do is change the

764
00:34:18,560 --> 00:34:20,239
number here

765
00:34:20,239 --> 00:34:23,520
this keeps our code nice and tidy

766
00:34:23,520 --> 00:34:26,560
after we read the cap touch value

767
00:34:26,560 --> 00:34:29,599
then we have a small delay a small delay

768
00:34:29,599 --> 00:34:31,119
is useful to keep our

769
00:34:31,119 --> 00:34:34,480
arduino from getting overwhelmed

770
00:34:34,480 --> 00:34:36,399
let's try uploading the sketch and then

771
00:34:36,399 --> 00:34:38,719
see what happens

772
00:34:38,719 --> 00:34:40,719
if you open up serial monitor you'll see

773
00:34:40,719 --> 00:34:42,480
different values

774
00:34:42,480 --> 00:34:45,520
but if you open up serial plotter

775
00:34:45,520 --> 00:34:47,359
you'll be able to see a plot of those

776
00:34:47,359 --> 00:34:49,839
values

777
00:34:50,320 --> 00:34:54,320
we're reading the value from pin a1

778
00:34:54,320 --> 00:34:56,879
try putting your finger on the copper

779
00:34:56,879 --> 00:34:59,599
pad that says a1

780
00:34:59,599 --> 00:35:03,839
what happens

781
00:35:06,079 --> 00:35:08,880
we notice a spike in the values try

782
00:35:08,880 --> 00:35:11,839
removing your finger

783
00:35:13,359 --> 00:35:14,839
you'll notice that it goes back to

784
00:35:14,839 --> 00:35:16,720
normal

785
00:35:16,720 --> 00:35:18,880
how does it look if you hold your finger

786
00:35:18,880 --> 00:35:22,720
versus if you take it on and off

787
00:35:26,320 --> 00:35:28,000
try this yourself with your own

788
00:35:28,000 --> 00:35:30,000
controller you can try different pins to

789
00:35:30,000 --> 00:35:32,320
compare them if you'd like

790
00:35:32,320 --> 00:35:34,160
as a challenge close the plotter and

791
00:35:34,160 --> 00:35:35,680
open the serial monitor

792
00:35:35,680 --> 00:35:37,599
try the same experiment what do you

793
00:35:37,599 --> 00:35:39,520
notice

794
00:35:39,520 --> 00:35:41,359
try putting a piece of paper over the

795
00:35:41,359 --> 00:35:43,040
electrode and seeing how this changes

796
00:35:43,040 --> 00:35:44,160
the result

797
00:35:44,160 --> 00:35:47,920
what if you use fabric plastic

798
00:35:47,920 --> 00:35:49,359
what if we want to design using

799
00:35:49,359 --> 00:35:51,440
capacitive touch to trigger some kind of

800
00:35:51,440 --> 00:35:54,640
output we need to set a threshold value

801
00:35:54,640 --> 00:35:56,720
in order to decide what value means the

802
00:35:56,720 --> 00:35:58,560
pad has been touched

803
00:35:58,560 --> 00:36:00,880
we've done this in the sketch to cap

804
00:36:00,880 --> 00:36:02,400
touch threshold

805
00:36:02,400 --> 00:36:05,520
open this sketch in this sketch cap

806
00:36:05,520 --> 00:36:05,920
touch

807
00:36:05,920 --> 00:36:09,599
threshold we have again an inclusion of

808
00:36:09,599 --> 00:36:12,240
our adafruit circuit playground library

809
00:36:12,240 --> 00:36:14,320
we also are still defining our cap touch

810
00:36:14,320 --> 00:36:16,560
pin remember we can change this value to

811
00:36:16,560 --> 00:36:19,040
look at other cap touch pins

812
00:36:19,040 --> 00:36:20,720
then we have a definition for a

813
00:36:20,720 --> 00:36:22,720
threshold value

814
00:36:22,720 --> 00:36:24,400
this is the minimum reading that we're

815
00:36:24,400 --> 00:36:26,160
counting as a touch

816
00:36:26,160 --> 00:36:28,560
if you remember from our last sketch

817
00:36:28,560 --> 00:36:30,400
when we were touching the pin

818
00:36:30,400 --> 00:36:33,280
the value spiked so we want to choose

819
00:36:33,280 --> 00:36:33,599
what

820
00:36:33,599 --> 00:36:35,599
is the number that's the minimum that

821
00:36:35,599 --> 00:36:37,280
will count as a touch

822
00:36:37,280 --> 00:36:40,960
in this case we're counting it as 500.

823
00:36:40,960 --> 00:36:43,119
in the loop we're again reading the cap

824
00:36:43,119 --> 00:36:44,079
touch pin

825
00:36:44,079 --> 00:36:46,480
but in this case we're storing it as a

826
00:36:46,480 --> 00:36:47,200
variable

827
00:36:47,200 --> 00:36:49,839
called an integer then we're printing

828
00:36:49,839 --> 00:36:51,599
capacitive touch reading

829
00:36:51,599 --> 00:36:54,079
and then printing the data for that

830
00:36:54,079 --> 00:36:56,079
reading

831
00:36:56,079 --> 00:36:58,720
if the data is greater than our

832
00:36:58,720 --> 00:37:00,240
threshold value

833
00:37:00,240 --> 00:37:03,200
then we're going to print touch else

834
00:37:03,200 --> 00:37:05,280
we're not going to do anything

835
00:37:05,280 --> 00:37:07,440
this is called an if-else statement and

836
00:37:07,440 --> 00:37:09,359
it's useful for creating logic in our

837
00:37:09,359 --> 00:37:10,079
programs

838
00:37:10,079 --> 00:37:12,480
especially if we want to use sensor data

839
00:37:12,480 --> 00:37:13,440
then do something

840
00:37:13,440 --> 00:37:16,720
based on the sensor data

841
00:37:17,119 --> 00:37:20,320
then we have a small delay so in this

842
00:37:20,320 --> 00:37:22,720
sketch what we're doing is we're over

843
00:37:22,720 --> 00:37:23,599
and over again

844
00:37:23,599 --> 00:37:26,079
reading the cap touch pins data storing

845
00:37:26,079 --> 00:37:27,920
it as a variable

846
00:37:27,920 --> 00:37:30,720
printing out that data and then if the

847
00:37:30,720 --> 00:37:33,680
data is greater than our threshold value

848
00:37:33,680 --> 00:37:36,720
we'll print touched let's try this

849
00:37:36,720 --> 00:37:39,280
and see if it works make sure that you

850
00:37:39,280 --> 00:37:40,160
have your correct

851
00:37:40,160 --> 00:37:44,000
board and port selected

852
00:37:44,079 --> 00:37:47,359
open up serial monitor

853
00:37:47,359 --> 00:37:49,599
now you'll see capacitive touch reading

854
00:37:49,599 --> 00:37:51,599
and then the data

855
00:37:51,599 --> 00:37:55,760
what happens if you touch pin a1

856
00:37:55,839 --> 00:37:58,160
now we see a statement that says touched

857
00:37:58,160 --> 00:38:02,079
and we also see the cap touch data

858
00:38:02,079 --> 00:38:04,000
as a challenge try having your circuit

859
00:38:04,000 --> 00:38:05,760
playground play a sound when it's being

860
00:38:05,760 --> 00:38:08,240
touched

861
00:38:08,240 --> 00:38:10,560
to combine these two i'm going to start

862
00:38:10,560 --> 00:38:12,320
by having hello speaker

863
00:38:12,320 --> 00:38:15,599
and cap touch threshold open my goal is

864
00:38:15,599 --> 00:38:16,800
to change the code

865
00:38:16,800 --> 00:38:19,280
so that i can play a tone instead of

866
00:38:19,280 --> 00:38:20,160
just printing

867
00:38:20,160 --> 00:38:22,880
touched in order to do this i want to

868
00:38:22,880 --> 00:38:23,440
find

869
00:38:23,440 --> 00:38:26,480
where i'm printing touched it looks like

870
00:38:26,480 --> 00:38:28,400
in the code i'm printing it after this

871
00:38:28,400 --> 00:38:29,920
if statement

872
00:38:29,920 --> 00:38:32,320
first i'm checking if the cap touch data

873
00:38:32,320 --> 00:38:34,400
is greater than the threshold

874
00:38:34,400 --> 00:38:37,920
and then if it is i'm printing touched

875
00:38:37,920 --> 00:38:40,400
instead of or in addition to printing

876
00:38:40,400 --> 00:38:42,560
touched i want to play a tone

877
00:38:42,560 --> 00:38:45,680
so i can copy that from my other sketch

878
00:38:45,680 --> 00:38:48,800
now i should be able to just paste it in

879
00:38:48,800 --> 00:38:51,440
if i write my code like this then if the

880
00:38:51,440 --> 00:38:53,119
cap touch data is greater than the

881
00:38:53,119 --> 00:38:54,160
threshold

882
00:38:54,160 --> 00:38:56,560
first it will print touched then it will

883
00:38:56,560 --> 00:38:58,160
play the tone

884
00:38:58,160 --> 00:39:01,520
let's give it a try now when i touch my

885
00:39:01,520 --> 00:39:04,320
cap touch pin

886
00:39:04,640 --> 00:39:08,000
sure enough i hear a tone

887
00:39:08,880 --> 00:39:10,960
i can change the duration of the tone to

888
00:39:10,960 --> 00:39:14,380
play a tone for longer

889
00:39:14,380 --> 00:39:17,359
[Music]

890
00:39:17,359 --> 00:39:19,680
now every time i touch the cap touch pin

891
00:39:19,680 --> 00:39:23,359
it'll play a tone for one second

892
00:39:24,480 --> 00:39:27,520
in serial monitor

893
00:39:27,520 --> 00:39:29,920
i'll see touched and i'll also see it

894
00:39:29,920 --> 00:39:31,680
pause for one second while it's playing

895
00:39:31,680 --> 00:39:33,520
the tone

896
00:39:33,520 --> 00:39:35,440
[Music]

897
00:39:35,440 --> 00:39:37,839
in the last sketch we compared the cap

898
00:39:37,839 --> 00:39:40,000
touch data to the threshold

899
00:39:40,000 --> 00:39:43,119
by using a greater than this is a

900
00:39:43,119 --> 00:39:45,040
comparison operator

901
00:39:45,040 --> 00:39:48,240
and there are several of them we can

902
00:39:48,240 --> 00:39:49,040
also use

903
00:39:49,040 --> 00:39:52,560
less than less than or equal to

904
00:39:52,560 --> 00:39:57,839
or equal to

905
00:39:58,560 --> 00:40:02,560
or not equal to but what for example if

906
00:40:02,560 --> 00:40:04,560
we have a value that we want to hit

907
00:40:04,560 --> 00:40:08,240
that's a threshold between two values

908
00:40:08,240 --> 00:40:11,920
we could use a boolean operator and

909
00:40:11,920 --> 00:40:14,400
in order to set a specific case for our

910
00:40:14,400 --> 00:40:15,440
data

911
00:40:15,440 --> 00:40:17,440
in this case if the cap data is greater

912
00:40:17,440 --> 00:40:19,280
than zero and it's less than

913
00:40:19,280 --> 00:40:22,319
threshold then we print touch

914
00:40:22,319 --> 00:40:25,200
to do this we have two ampersands what

915
00:40:25,200 --> 00:40:27,280
if we only wanted to print touch

916
00:40:27,280 --> 00:40:30,640
if it was one value or another value

917
00:40:30,640 --> 00:40:33,440
we could use the or boolean operator

918
00:40:33,440 --> 00:40:35,359
here's a reference of some comparison

919
00:40:35,359 --> 00:40:37,440
operators

920
00:40:37,440 --> 00:40:39,359
you can also find a really thorough

921
00:40:39,359 --> 00:40:43,759
reference on the arduino website

922
00:40:46,560 --> 00:40:48,640
the built-in capacitive pads on the

923
00:40:48,640 --> 00:40:50,800
circuit playground express are neat

924
00:40:50,800 --> 00:40:52,319
but they're especially neat because we

925
00:40:52,319 --> 00:40:53,920
can extend them

926
00:40:53,920 --> 00:40:56,240
we can use alligator clips wire thread

927
00:40:56,240 --> 00:40:58,160
paint and other conductive materials to

928
00:40:58,160 --> 00:40:59,920
extend our capacitive touch

929
00:40:59,920 --> 00:41:02,880
and build other circuits capacitive

930
00:41:02,880 --> 00:41:05,040
touch or capacitive sensing allows us to

931
00:41:05,040 --> 00:41:06,079
detect and measure

932
00:41:06,079 --> 00:41:08,480
anything that is conductive conductive

933
00:41:08,480 --> 00:41:10,960
materials include but aren't limited to

934
00:41:10,960 --> 00:41:13,920
conductive thread fabric paint copper

935
00:41:13,920 --> 00:41:15,280
silver aluminum steel

936
00:41:15,280 --> 00:41:18,000
tin graphite and other metals electrical

937
00:41:18,000 --> 00:41:18,800
wires

938
00:41:18,800 --> 00:41:21,359
conductive silicones conductive sprays

939
00:41:21,359 --> 00:41:22,960
and biological structures

940
00:41:22,960 --> 00:41:26,160
including fruits veggies plants even us

941
00:41:26,160 --> 00:41:28,000
as a challenge try grabbing something in

942
00:41:28,000 --> 00:41:29,520
your house that you think might be

943
00:41:29,520 --> 00:41:30,720
conductive

944
00:41:30,720 --> 00:41:32,480
examples of these things are anything

945
00:41:32,480 --> 00:41:34,480
shown including spoons knives scissors

946
00:41:34,480 --> 00:41:37,599
tin foil fruit veggies tin cans

947
00:41:37,599 --> 00:41:40,079
we can also use conductive paint

948
00:41:40,079 --> 00:41:41,760
conductive paint is made using

949
00:41:41,760 --> 00:41:43,040
conductive pigments

950
00:41:43,040 --> 00:41:44,880
usually these contain silver copper

951
00:41:44,880 --> 00:41:46,160
nickel or carbon

952
00:41:46,160 --> 00:41:48,000
there's a tutorial linked here that

953
00:41:48,000 --> 00:41:50,000
includes how to make your own conductive

954
00:41:50,000 --> 00:41:50,880
paint

955
00:41:50,880 --> 00:41:53,119
you can also purchase it as a paint or

956
00:41:53,119 --> 00:41:53,920
paint pen

957
00:41:53,920 --> 00:41:57,200
pens or raw pigments they can be used to

958
00:41:57,200 --> 00:41:58,560
create conductive artworks like

959
00:41:58,560 --> 00:42:00,720
paintings or sketches

960
00:42:00,720 --> 00:42:02,480
one bad thing to conductive paint is

961
00:42:02,480 --> 00:42:04,000
that it's prone to breaking

962
00:42:04,000 --> 00:42:06,480
and it can crack if it's bent i highly

963
00:42:06,480 --> 00:42:08,000
recommend the bare conductive touch

964
00:42:08,000 --> 00:42:10,400
board if you're looking to play mp3s

965
00:42:10,400 --> 00:42:13,760
using conductive paint here's an example

966
00:42:13,760 --> 00:42:15,760
of a performance that uses conductive

967
00:42:15,760 --> 00:42:16,160
paint

968
00:42:16,160 --> 00:42:18,560
to create a connection between a

969
00:42:18,560 --> 00:42:19,280
performer

970
00:42:19,280 --> 00:42:22,720
and a wall conductive thread is usually

971
00:42:22,720 --> 00:42:24,000
made of stainless steel

972
00:42:24,000 --> 00:42:26,720
and comes in two ply or three ply when

973
00:42:26,720 --> 00:42:28,800
you're deciding whether to use two ply

974
00:42:28,800 --> 00:42:30,400
or three ply you want to think about

975
00:42:30,400 --> 00:42:32,079
strength and stretch

976
00:42:32,079 --> 00:42:33,599
it's a bit trickier to work with than

977
00:42:33,599 --> 00:42:35,520
normal cotton or polyester threads

978
00:42:35,520 --> 00:42:36,000
though

979
00:42:36,000 --> 00:42:38,720
it frays and it also tangles it can be

980
00:42:38,720 --> 00:42:40,400
sewn by hand or you can use a sewing

981
00:42:40,400 --> 00:42:41,040
machine

982
00:42:41,040 --> 00:42:42,720
and sewing hoops work great to keep it

983
00:42:42,720 --> 00:42:45,359
steady it can be sealed and finished

984
00:42:45,359 --> 00:42:47,119
with clear nail polish pla

985
00:42:47,119 --> 00:42:50,160
or hot glue conductive fabrics are

986
00:42:50,160 --> 00:42:51,760
another way to create wearables and

987
00:42:51,760 --> 00:42:53,359
extend your circuit

988
00:42:53,359 --> 00:42:54,880
woven textiles which integrate

989
00:42:54,880 --> 00:42:56,880
conductive materials like threads or

990
00:42:56,880 --> 00:42:58,880
finishes are a great source of

991
00:42:58,880 --> 00:43:00,079
conductive fabric

992
00:43:00,079 --> 00:43:01,760
conductive fabric is available in

993
00:43:01,760 --> 00:43:03,440
ripstop nylon stretch

994
00:43:03,440 --> 00:43:05,599
jersey and as patterns like the one on

995
00:43:05,599 --> 00:43:06,720
the right

996
00:43:06,720 --> 00:43:08,640
some fabrics with metallic threads are

997
00:43:08,640 --> 00:43:11,520
conductive but it really depends

998
00:43:11,520 --> 00:43:14,079
it's often sold as rfid or em

999
00:43:14,079 --> 00:43:16,240
electromagnetic shielding so keep an eye

1000
00:43:16,240 --> 00:43:18,160
out for that

1001
00:43:18,160 --> 00:43:19,920
let's go even further with capacitive

1002
00:43:19,920 --> 00:43:22,240
touch try attaching an alligator clip to

1003
00:43:22,240 --> 00:43:23,599
the pad and then attaching your

1004
00:43:23,599 --> 00:43:25,280
conductive object

1005
00:43:25,280 --> 00:43:27,839
this could be foil knife scissors fruit

1006
00:43:27,839 --> 00:43:29,440
whatever you grabbed

1007
00:43:29,440 --> 00:43:32,079
then try re-uploading the sketch what

1008
00:43:32,079 --> 00:43:34,400
happens when you touch your object

1009
00:43:34,400 --> 00:43:36,480
alligator clips are a great solution for

1010
00:43:36,480 --> 00:43:38,240
rapid prototyping

1011
00:43:38,240 --> 00:43:40,480
to use them just attach one end to

1012
00:43:40,480 --> 00:43:41,440
whatever your

1013
00:43:41,440 --> 00:43:44,160
conductive material is so in this case

1014
00:43:44,160 --> 00:43:46,079
i'm using a piece of copper tape

1015
00:43:46,079 --> 00:43:48,160
in a book with the idea that people will

1016
00:43:48,160 --> 00:43:49,599
put their thumbs on it when they're

1017
00:43:49,599 --> 00:43:51,119
holding the book

1018
00:43:51,119 --> 00:43:53,760
you could also use wire or foil whatever

1019
00:43:53,760 --> 00:43:56,640
else you want to attach to the other end

1020
00:43:56,640 --> 00:43:58,000
then you want to take the other end of

1021
00:43:58,000 --> 00:44:00,480
the alligator clip and attach it to your

1022
00:44:00,480 --> 00:44:03,359
circuit playground

1023
00:44:04,240 --> 00:44:05,520
note that if you're getting a false

1024
00:44:05,520 --> 00:44:07,119
positive meaning the monitor keeps

1025
00:44:07,119 --> 00:44:08,960
saying touch when the pad isn't being

1026
00:44:08,960 --> 00:44:09,599
touched

1027
00:44:09,599 --> 00:44:11,640
you can try raising the threshold to

1028
00:44:11,640 --> 00:44:12,800
1015

1029
00:44:12,800 --> 00:44:15,200
then re-uploading your sketch if you're

1030
00:44:15,200 --> 00:44:16,800
still getting false positives try

1031
00:44:16,800 --> 00:44:18,319
unplugging or resetting your

1032
00:44:18,319 --> 00:44:19,440
microcontroller

1033
00:44:19,440 --> 00:44:21,200
you might have to do this a few times

1034
00:44:21,200 --> 00:44:23,839
before it settles

1035
00:44:23,920 --> 00:44:25,680
now we've been able to trigger a tone

1036
00:44:25,680 --> 00:44:27,359
when we press one of the capacitive

1037
00:44:27,359 --> 00:44:27,680
touch

1038
00:44:27,680 --> 00:44:30,480
pads but there are seven pads what would

1039
00:44:30,480 --> 00:44:32,240
happen if we played a different tone for

1040
00:44:32,240 --> 00:44:33,119
each of those seven

1041
00:44:33,119 --> 00:44:36,000
pads let's go even further and use our

1042
00:44:36,000 --> 00:44:37,680
alligator clips to extend

1043
00:44:37,680 --> 00:44:40,079
the capacitive touch pads you can add

1044
00:44:40,079 --> 00:44:42,160
anything that's conductive to the end

1045
00:44:42,160 --> 00:44:44,560
that includes metals biological

1046
00:44:44,560 --> 00:44:45,440
structures

1047
00:44:45,440 --> 00:44:49,040
fruit plants you name it give it a try

1048
00:44:49,040 --> 00:44:51,760
see if it works open the sketch to cap

1049
00:44:51,760 --> 00:44:53,119
touch instrument

1050
00:44:53,119 --> 00:44:55,200
what if we wanted to read the cap touch

1051
00:44:55,200 --> 00:44:58,079
value for all of the cap touch pads

1052
00:44:58,079 --> 00:45:00,800
well we could create several if else

1053
00:45:00,800 --> 00:45:01,599
statements

1054
00:45:01,599 --> 00:45:18,420
one for each pad okay

1055
00:45:18,420 --> 00:45:21,559
[Music]

1056
00:45:27,760 --> 00:45:30,079
but that's a lot of code maybe there's

1057
00:45:30,079 --> 00:45:33,359
an easier way to do this well there is

1058
00:45:33,359 --> 00:45:35,599
open up the sketch to cap touch

1059
00:45:35,599 --> 00:45:37,119
instrument

1060
00:45:37,119 --> 00:45:38,800
here you'll see something called a

1061
00:45:38,800 --> 00:45:40,800
switch case statement

1062
00:45:40,800 --> 00:45:42,640
this is an excellent solution if you

1063
00:45:42,640 --> 00:45:44,800
have lots of if statements

1064
00:45:44,800 --> 00:45:46,720
and lots of inputs and you want to do

1065
00:45:46,720 --> 00:45:49,040
different things for them

1066
00:45:49,040 --> 00:45:51,359
in this case what we're doing is we're

1067
00:45:51,359 --> 00:45:52,400
checking

1068
00:45:52,400 --> 00:45:55,599
what the value is of each pad and then

1069
00:45:55,599 --> 00:45:58,079
if it's over our threshold we're having

1070
00:45:58,079 --> 00:45:58,839
it do

1071
00:45:58,839 --> 00:46:01,200
something and we're calling that doing

1072
00:46:01,200 --> 00:46:01,920
something

1073
00:46:01,920 --> 00:46:05,119
take action so first we have

1074
00:46:05,119 --> 00:46:08,000
an array to store all of our pads you'll

1075
00:46:08,000 --> 00:46:09,520
see the numbers here look a little

1076
00:46:09,520 --> 00:46:10,079
different

1077
00:46:10,079 --> 00:46:12,880
this is because as we explained earlier

1078
00:46:12,880 --> 00:46:14,240
there are several digital

1079
00:46:14,240 --> 00:46:16,160
and analog pins on the circuit

1080
00:46:16,160 --> 00:46:18,800
playground and they overlap

1081
00:46:18,800 --> 00:46:20,560
then we have a variable to store the

1082
00:46:20,560 --> 00:46:22,880
number of pads we'll be using this later

1083
00:46:22,880 --> 00:46:24,640
on in the sketch

1084
00:46:24,640 --> 00:46:27,760
in our void take action we're doing a

1085
00:46:27,760 --> 00:46:29,359
different thing depending on

1086
00:46:29,359 --> 00:46:32,560
which pad we've selected so

1087
00:46:32,560 --> 00:46:35,599
for whatever pad has been activated

1088
00:46:35,599 --> 00:46:39,920
we're activating a case so say i touch

1089
00:46:39,920 --> 00:46:44,560
pin number a4 or d3

1090
00:46:44,560 --> 00:46:47,200
what will happen first it'll print

1091
00:46:47,200 --> 00:46:47,839
touched

1092
00:46:47,839 --> 00:46:52,400
d3 slash a4 then it'll play a tone

1093
00:46:52,400 --> 00:46:55,599
then we see something new which is break

1094
00:46:55,599 --> 00:46:57,440
in a switch case statement we have to

1095
00:46:57,440 --> 00:46:59,440
break out of the statement

1096
00:46:59,440 --> 00:47:02,640
so every case ends with break then we

1097
00:47:02,640 --> 00:47:04,640
see the following for each of the

1098
00:47:04,640 --> 00:47:06,160
different cases

1099
00:47:06,160 --> 00:47:08,319
this allows us to do something different

1100
00:47:08,319 --> 00:47:09,200
each time

1101
00:47:09,200 --> 00:47:11,680
we press a different cap touch pad

1102
00:47:11,680 --> 00:47:13,280
you'll also see at the bottom that we

1103
00:47:13,280 --> 00:47:14,720
have a default case

1104
00:47:14,720 --> 00:47:16,800
which should never happen but it's nice

1105
00:47:16,800 --> 00:47:19,680
to have just in case

1106
00:47:19,680 --> 00:47:21,920
then we see something called boolean

1107
00:47:21,920 --> 00:47:22,800
booleans

1108
00:47:22,800 --> 00:47:25,520
are a value that's either true or false

1109
00:47:25,520 --> 00:47:27,599
in this case we're checking

1110
00:47:27,599 --> 00:47:30,559
is the cap touch read greater than the

1111
00:47:30,559 --> 00:47:31,760
threshold

1112
00:47:31,760 --> 00:47:34,800
for a specific pad if it is we're

1113
00:47:34,800 --> 00:47:36,160
returning true

1114
00:47:36,160 --> 00:47:39,200
and else we're returning false in our

1115
00:47:39,200 --> 00:47:39,680
loop

1116
00:47:39,680 --> 00:47:42,800
we see a for loop a for loop is another

1117
00:47:42,800 --> 00:47:44,720
way to do something several times

1118
00:47:44,720 --> 00:47:47,599
without writing a lot of code

1119
00:47:47,599 --> 00:47:49,520
formatting for a for loop looks like

1120
00:47:49,520 --> 00:47:51,760
this we start with the word for

1121
00:47:51,760 --> 00:47:54,319
and then we have an open parenthesis

1122
00:47:54,319 --> 00:47:55,200
then we have

1123
00:47:55,200 --> 00:47:58,319
int usually i equals zero

1124
00:47:58,319 --> 00:47:59,920
which means that we're starting our

1125
00:47:59,920 --> 00:48:02,720
start value at zero

1126
00:48:02,720 --> 00:48:05,200
then we have a semicolon and then we

1127
00:48:05,200 --> 00:48:06,079
have a limiting

1128
00:48:06,079 --> 00:48:09,119
value so in this case if i is less than

1129
00:48:09,119 --> 00:48:10,240
10

1130
00:48:10,240 --> 00:48:12,880
we will do whatever is in this loop then

1131
00:48:12,880 --> 00:48:14,880
we have another semicolon

1132
00:48:14,880 --> 00:48:16,960
then we say what we want to do in this

1133
00:48:16,960 --> 00:48:18,400
case we want to increase

1134
00:48:18,400 --> 00:48:23,680
each time i plus plus

1135
00:48:23,680 --> 00:48:26,079
let's use a real world example let's say

1136
00:48:26,079 --> 00:48:27,680
i have a class and i want to ask them

1137
00:48:27,680 --> 00:48:28,960
how they're doing

1138
00:48:28,960 --> 00:48:30,960
i could go to each student individually

1139
00:48:30,960 --> 00:48:33,359
and ask them how are you doing

1140
00:48:33,359 --> 00:48:35,680
in this case the code might look like

1141
00:48:35,680 --> 00:48:36,880
serial print line

1142
00:48:36,880 --> 00:48:38,960
how are you doing and then for student

1143
00:48:38,960 --> 00:48:39,920
number two

1144
00:48:39,920 --> 00:48:42,400
serial print line how are you doing and

1145
00:48:42,400 --> 00:48:44,960
so on each time waiting for a response

1146
00:48:44,960 --> 00:48:47,280
that would end up being 31 lines of code

1147
00:48:47,280 --> 00:48:49,359
if i have 31 students

1148
00:48:49,359 --> 00:48:51,839
but we could also use a for loop to do

1149
00:48:51,839 --> 00:48:53,520
so i would want to know how many

1150
00:48:53,520 --> 00:48:54,960
students are in the class

1151
00:48:54,960 --> 00:48:56,480
and i would want to have a starting

1152
00:48:56,480 --> 00:48:59,119
value i would want to start with student

1153
00:48:59,119 --> 00:49:01,760
number 0.

1154
00:49:01,760 --> 00:49:04,319
in programming we start counting at zero

1155
00:49:04,319 --> 00:49:07,599
so zero is our first student

1156
00:49:07,599 --> 00:49:11,040
i would then set i equal to this amount

1157
00:49:11,040 --> 00:49:12,960
i equals zero because we're starting

1158
00:49:12,960 --> 00:49:15,280
counting at zero

1159
00:49:15,280 --> 00:49:17,040
then i want to know how many students

1160
00:49:17,040 --> 00:49:18,480
are in the class total

1161
00:49:18,480 --> 00:49:21,359
so there are 31. so i want to do this

1162
00:49:21,359 --> 00:49:22,079
for loop

1163
00:49:22,079 --> 00:49:24,319
for every student in the class so that

1164
00:49:24,319 --> 00:49:25,119
means

1165
00:49:25,119 --> 00:49:27,359
i want to do it every time i is less

1166
00:49:27,359 --> 00:49:29,040
than 31.

1167
00:49:29,040 --> 00:49:31,200
again it's less than 31 because we're

1168
00:49:31,200 --> 00:49:33,920
starting to count at zero

1169
00:49:33,920 --> 00:49:36,079
then what do i want to do well i want to

1170
00:49:36,079 --> 00:49:38,000
go from one student to the next

1171
00:49:38,000 --> 00:49:40,640
which is incrementing so we'll use i

1172
00:49:40,640 --> 00:49:42,240
plus plus

1173
00:49:42,240 --> 00:49:46,640
which is a shorthand for i plus one

1174
00:49:53,599 --> 00:49:56,960
so we start at pad number zero

1175
00:49:56,960 --> 00:50:00,160
and then for the number of less than the

1176
00:50:00,160 --> 00:50:01,920
number of pads

1177
00:50:01,920 --> 00:50:04,480
we go through each of the pads and then

1178
00:50:04,480 --> 00:50:06,000
we check to see

1179
00:50:06,000 --> 00:50:09,440
the state of the pad has it been touched

1180
00:50:09,440 --> 00:50:11,839
if the pad has been touched then we take

1181
00:50:11,839 --> 00:50:13,119
action

1182
00:50:13,119 --> 00:50:16,800
which is this up here

1183
00:50:16,800 --> 00:50:19,359
after we've taken the action we have the

1184
00:50:19,359 --> 00:50:20,240
delay

1185
00:50:20,240 --> 00:50:24,079
of a de bounce amount a debounce allows

1186
00:50:24,079 --> 00:50:27,359
us to get clean data from our sensor

1187
00:50:27,359 --> 00:50:29,200
often you'll have to change this amount

1188
00:50:29,200 --> 00:50:31,119
depending on what sensor you're using

1189
00:50:31,119 --> 00:50:33,200
because some sensors are noisier than

1190
00:50:33,200 --> 00:50:35,440
others

1191
00:50:35,440 --> 00:50:38,240
in this case our debounce is 100. you

1192
00:50:38,240 --> 00:50:40,000
can try changing this and see how

1193
00:50:40,000 --> 00:50:43,839
it reacts let's try uploading this

1194
00:50:43,839 --> 00:50:44,400
program

1195
00:50:44,400 --> 00:50:47,599
and then seeing what happens

1196
00:50:48,640 --> 00:50:50,640
once you've uploaded your sketch open

1197
00:50:50,640 --> 00:50:53,440
the serial monitor

1198
00:50:53,440 --> 00:50:54,810
now try touching the pads

1199
00:50:54,810 --> 00:51:01,110
[Music]

1200
00:51:05,280 --> 00:51:06,960
you should see a different message and

1201
00:51:06,960 --> 00:51:09,040
hear a different tone for each pad you

1202
00:51:09,040 --> 00:51:11,280
touched

1203
00:51:11,280 --> 00:51:13,200
try touching each of the cap touch pads

1204
00:51:13,200 --> 00:51:15,359
to trigger different sounds

1205
00:51:15,359 --> 00:51:17,200
you can try changing the sounds in order

1206
00:51:17,200 --> 00:51:20,400
to make your own reactive instrument

1207
00:51:20,400 --> 00:51:22,319
as a second challenge try attaching the

1208
00:51:22,319 --> 00:51:24,400
alligator clips and various conductive

1209
00:51:24,400 --> 00:51:26,720
objects to make your own instrument

1210
00:51:26,720 --> 00:51:28,720
you might try creating a sculpture using

1211
00:51:28,720 --> 00:51:31,119
foil wire or other materials

1212
00:51:31,119 --> 00:51:35,119
get creative if you're having trouble

1213
00:51:35,119 --> 00:51:37,440
getting a clean detection of a touch

1214
00:51:37,440 --> 00:51:39,040
you might be getting something called a

1215
00:51:39,040 --> 00:51:41,520
false positive a false positive

1216
00:51:41,520 --> 00:51:43,440
is when you're getting a response that

1217
00:51:43,440 --> 00:51:45,359
says the sensor's been touched when it

1218
00:51:45,359 --> 00:51:46,800
actually hasn't

1219
00:51:46,800 --> 00:51:48,880
this usually happens when your threshold

1220
00:51:48,880 --> 00:51:50,079
isn't correct

1221
00:51:50,079 --> 00:51:51,920
to calibrate it correctly what we need

1222
00:51:51,920 --> 00:51:54,000
to do is we need to look at the data

1223
00:51:54,000 --> 00:51:55,599
from the cap touch sensor

1224
00:51:55,599 --> 00:51:57,680
and we need to see what a reasonable

1225
00:51:57,680 --> 00:51:59,200
threshold might be

1226
00:51:59,200 --> 00:52:00,720
so you'll want to check the difference

1227
00:52:00,720 --> 00:52:02,319
between when there's no touch

1228
00:52:02,319 --> 00:52:04,880
and when there is a touch and based on

1229
00:52:04,880 --> 00:52:05,680
that value

1230
00:52:05,680 --> 00:52:08,240
then you can set your threshold once the

1231
00:52:08,240 --> 00:52:10,319
value has gone beyond that threshold

1232
00:52:10,319 --> 00:52:12,160
then we know that it's a touch

1233
00:52:12,160 --> 00:52:13,599
you might need to play around with

1234
00:52:13,599 --> 00:52:15,839
setting up your alligator clips and also

1235
00:52:15,839 --> 00:52:17,599
whatever you're attaching to them a few

1236
00:52:17,599 --> 00:52:18,000
times

1237
00:52:18,000 --> 00:52:19,599
to make sure that you have a correct

1238
00:52:19,599 --> 00:52:21,440
threshold if it's not

1239
00:52:21,440 --> 00:52:23,680
actually detecting a change then you

1240
00:52:23,680 --> 00:52:25,760
might need to reset the controller

1241
00:52:25,760 --> 00:52:27,839
you might also need to try unplugging

1242
00:52:27,839 --> 00:52:29,839
and re-plugging in the controller

1243
00:52:29,839 --> 00:52:32,079
eventually it will calm down and you'll

1244
00:52:32,079 --> 00:52:47,040
be able to calibrate it successfully

1245
00:52:47,040 --> 00:52:48,480
[Music]

1246
00:52:48,480 --> 00:52:50,319
there are lots of ways to incorporate

1247
00:52:50,319 --> 00:52:52,960
capacitive touch into your projects

1248
00:52:52,960 --> 00:52:55,119
you might look into creating wearables

1249
00:52:55,119 --> 00:52:57,040
with custom sensors

1250
00:52:57,040 --> 00:52:59,119
these could be hidden again below a

1251
00:52:59,119 --> 00:53:00,480
piece of plastic

1252
00:53:00,480 --> 00:53:03,760
or other protective shielding this may

1253
00:53:03,760 --> 00:53:05,599
take some experimenting in order to make

1254
00:53:05,599 --> 00:53:07,200
sure you can still sense touch

1255
00:53:07,200 --> 00:53:10,640
underneath whatever you have on top

1256
00:53:10,640 --> 00:53:13,200
you might also try creating sculptures

1257
00:53:13,200 --> 00:53:15,359
these could have exposed electrodes like

1258
00:53:15,359 --> 00:53:16,800
foil or wire

1259
00:53:16,800 --> 00:53:20,480
or again you could try concealing them

1260
00:53:20,480 --> 00:53:23,520
here we see a group of metal balls each

1261
00:53:23,520 --> 00:53:24,400
is connected

1262
00:53:24,400 --> 00:53:27,200
below the pedestal to a microcontroller

1263
00:53:27,200 --> 00:53:28,000
that's capable

1264
00:53:28,000 --> 00:53:30,960
of sensing touch

1265
00:53:31,280 --> 00:53:33,440
when each ball is touched it plays a

1266
00:53:33,440 --> 00:53:36,240
different sound

1267
00:53:36,480 --> 00:53:38,559
the sculpture might be polyphonic

1268
00:53:38,559 --> 00:53:40,400
meaning it plays more than one sound at

1269
00:53:40,400 --> 00:53:41,040
a time

1270
00:53:41,040 --> 00:53:43,440
or monophonic meaning it plays only one

1271
00:53:43,440 --> 00:53:45,440
sound

1272
00:53:45,440 --> 00:53:46,960
or you can make large scale

1273
00:53:46,960 --> 00:53:48,880
installations in this

1274
00:53:48,880 --> 00:53:51,920
seagrass installation at burning man

1275
00:53:51,920 --> 00:53:54,319
each led animation is changed by a

1276
00:53:54,319 --> 00:53:57,119
teensy that has capacitive touch pins

1277
00:53:57,119 --> 00:53:58,559
when someone touches the base of the

1278
00:53:58,559 --> 00:54:00,640
sculpture it changes the animation for

1279
00:54:00,640 --> 00:54:03,279
the whole group

1280
00:54:08,319 --> 00:54:11,200
one benefit to using capacitive touch is

1281
00:54:11,200 --> 00:54:13,520
that it doesn't have exposed hardware

1282
00:54:13,520 --> 00:54:16,000
you can create things like dials knobs

1283
00:54:16,000 --> 00:54:17,040
and sliders

1284
00:54:17,040 --> 00:54:19,119
without having to worry about things

1285
00:54:19,119 --> 00:54:21,359
breaking this can be really useful if

1286
00:54:21,359 --> 00:54:22,720
you're creating an exhibit or an

1287
00:54:22,720 --> 00:54:24,079
installation that's going to be under

1288
00:54:24,079 --> 00:54:24,880
pressure

1289
00:54:24,880 --> 00:54:26,800
or is going to be in harsh conditions

1290
00:54:26,800 --> 00:54:29,520
like the desert

1291
00:54:30,079 --> 00:54:32,000
if you're an illustrator or painter you

1292
00:54:32,000 --> 00:54:33,839
can try using conductive paint or

1293
00:54:33,839 --> 00:54:34,720
graphite

1294
00:54:34,720 --> 00:54:37,200
or carbon paint in order to create your

1295
00:54:37,200 --> 00:54:39,040
own playable walls paintings and

1296
00:54:39,040 --> 00:54:41,040
sketches

1297
00:54:41,040 --> 00:54:43,040
you can start small and see how big you

1298
00:54:43,040 --> 00:54:45,440
can go

1299
00:54:45,760 --> 00:54:47,520
we've learned a lot today we've learned

1300
00:54:47,520 --> 00:54:49,040
how to use the circuit playground

1301
00:54:49,040 --> 00:54:51,359
how to use example sketches how to play

1302
00:54:51,359 --> 00:54:52,799
tones using the speaker

1303
00:54:52,799 --> 00:54:55,359
and how to use the capacitive touch pads

1304
00:54:55,359 --> 00:54:57,359
next time we'll talk about light output

1305
00:54:57,359 --> 00:55:05,920
and how to use leds see you then

