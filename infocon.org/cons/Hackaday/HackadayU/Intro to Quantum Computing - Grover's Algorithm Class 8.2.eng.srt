1
00:00:00,000 --> 00:00:08,639
[Music]

2
00:00:08,639 --> 00:00:09,760
hello everyone

3
00:00:09,760 --> 00:00:13,040
welcome to another quantum computing

4
00:00:13,040 --> 00:00:13,599
class

5
00:00:13,599 --> 00:00:17,039
at hackaday this is our session 15

6
00:00:17,039 --> 00:00:20,160
for the hackathe community and also

7
00:00:20,160 --> 00:00:22,800
seven sessions ago we started inviting a

8
00:00:22,800 --> 00:00:25,039
lot more other communities so welcome

9
00:00:25,039 --> 00:00:25,439
and

10
00:00:25,439 --> 00:00:27,439
welcome back to people who have been

11
00:00:27,439 --> 00:00:28,800
joining

12
00:00:28,800 --> 00:00:31,920
so always a reminder for people who

13
00:00:31,920 --> 00:00:34,480
are joining for the first time we've

14
00:00:34,480 --> 00:00:35,520
been

15
00:00:35,520 --> 00:00:38,559
doing this class every sunday

16
00:00:38,559 --> 00:00:42,239
and all of the materials and recording

17
00:00:42,239 --> 00:00:45,680
slides are posted on the hackaday

18
00:00:45,680 --> 00:00:47,680
introduction to quantum computing

19
00:00:47,680 --> 00:00:49,120
projects

20
00:00:49,120 --> 00:00:52,399
and every sunday i spend about

21
00:00:52,399 --> 00:00:55,840
30 minutes to one hour discussing one

22
00:00:55,840 --> 00:00:56,559
topic

23
00:00:56,559 --> 00:00:58,879
thanks nathan for for posting the link

24
00:00:58,879 --> 00:01:01,199
there

25
00:01:01,280 --> 00:01:04,400
and if people can also mute themselves

26
00:01:04,400 --> 00:01:04,959
that would

27
00:01:04,959 --> 00:01:09,439
be helpful thanks

28
00:01:09,439 --> 00:01:13,680
the materials that we use in the class

29
00:01:13,680 --> 00:01:17,439
we refer to the microsoft q sharp

30
00:01:17,439 --> 00:01:18,640
documentation

31
00:01:18,640 --> 00:01:21,920
and we also use the quantum cutters

32
00:01:21,920 --> 00:01:24,320
for exercises so today we're going to

33
00:01:24,320 --> 00:01:24,960
also do

34
00:01:24,960 --> 00:01:27,600
others

35
00:01:28,240 --> 00:01:31,520
actually a is singular

36
00:01:31,520 --> 00:01:34,560
so this people have seen almost every

37
00:01:34,560 --> 00:01:35,360
class now

38
00:01:35,360 --> 00:01:38,720
that we have this landscape that tells

39
00:01:38,720 --> 00:01:39,040
us

40
00:01:39,040 --> 00:01:41,520
where we are and what we are doing for

41
00:01:41,520 --> 00:01:42,640
the class

42
00:01:42,640 --> 00:01:45,840
and we use the q sharp as a way to

43
00:01:45,840 --> 00:01:46,640
connect

44
00:01:46,640 --> 00:01:50,640
from the concept to coding algorithms

45
00:01:50,640 --> 00:01:53,280
so previously we have done quite a few

46
00:01:53,280 --> 00:01:54,159
algorithms

47
00:01:54,159 --> 00:01:58,000
that's based on superposition and

48
00:01:58,000 --> 00:02:01,920
entanglement so like teleportation

49
00:02:01,920 --> 00:02:04,159
super dense coding those are using

50
00:02:04,159 --> 00:02:05,439
entanglement

51
00:02:05,439 --> 00:02:10,160
for interesting communication purposes

52
00:02:10,160 --> 00:02:13,120
there are a lot of other algorithms that

53
00:02:13,120 --> 00:02:14,959
are using all of these

54
00:02:14,959 --> 00:02:18,480
properties so if we put entanglement

55
00:02:18,480 --> 00:02:21,760
and interference into the same algorithm

56
00:02:21,760 --> 00:02:25,360
and use all of these

57
00:02:25,360 --> 00:02:29,200
behaviors from quantum computing effects

58
00:02:29,200 --> 00:02:31,920
that can be very interesting and

59
00:02:31,920 --> 00:02:33,280
powerful

60
00:02:33,280 --> 00:02:36,319
so today we are going to

61
00:02:36,319 --> 00:02:38,640
look into a particular algorithm called

62
00:02:38,640 --> 00:02:40,160
gruber's algorithm

63
00:02:40,160 --> 00:02:43,200
before that i have this reminder here we

64
00:02:43,200 --> 00:02:44,720
have seen

65
00:02:44,720 --> 00:02:48,800
in some previous classes the deutsche

66
00:02:48,800 --> 00:02:51,519
algorithm and deutsche hosa algorithm

67
00:02:51,519 --> 00:02:52,160
where

68
00:02:52,160 --> 00:02:55,440
we did look at a case where entanglement

69
00:02:55,440 --> 00:02:59,040
sorry in interference was very

70
00:02:59,040 --> 00:03:03,040
important so namely when you can

71
00:03:03,040 --> 00:03:05,440
have interference happening when you

72
00:03:05,440 --> 00:03:06,159
introduce

73
00:03:06,159 --> 00:03:10,879
a negative sign you can distractively

74
00:03:10,879 --> 00:03:14,640
interfere with some other states

75
00:03:14,640 --> 00:03:18,080
and reducing the probability of that

76
00:03:18,080 --> 00:03:18,640
state

77
00:03:18,640 --> 00:03:21,200
being in your measurement result so this

78
00:03:21,200 --> 00:03:23,360
is really useful

79
00:03:23,360 --> 00:03:26,480
if you use this interference

80
00:03:26,480 --> 00:03:30,560
behavior in your setup you can extract

81
00:03:30,560 --> 00:03:33,440
very you can extract information

82
00:03:33,440 --> 00:03:34,879
efficiently

83
00:03:34,879 --> 00:03:37,599
so this is deutsches algorithm we're not

84
00:03:37,599 --> 00:03:38,799
going to do

85
00:03:38,799 --> 00:03:41,280
uh i don't think we we need to do

86
00:03:41,280 --> 00:03:43,040
another coding exercise although there

87
00:03:43,040 --> 00:03:43,760
are

88
00:03:43,760 --> 00:03:46,000
quite a few on the quantum catalyst so

89
00:03:46,000 --> 00:03:48,239
if you are interested and i

90
00:03:48,239 --> 00:03:50,720
definitely encourage you to go to the

91
00:03:50,720 --> 00:03:52,640
cata and try the deutsche

92
00:03:52,640 --> 00:03:55,360
algorithm and deutsch hosa algorithm

93
00:03:55,360 --> 00:03:58,400
using the contacts

94
00:03:58,560 --> 00:04:02,000
and if you missed the conceptual class

95
00:04:02,000 --> 00:04:05,680
about this we have that in the previous

96
00:04:05,680 --> 00:04:07,599
list of classes you can watch the

97
00:04:07,599 --> 00:04:09,360
recording for

98
00:04:09,360 --> 00:04:12,080
but we're gonna use today's class on

99
00:04:12,080 --> 00:04:14,159
google's algorithm because that's

100
00:04:14,159 --> 00:04:18,560
a useful algorithm

101
00:04:18,560 --> 00:04:21,839
for is also one of the most

102
00:04:21,839 --> 00:04:24,960
famous algorithms that was invented or

103
00:04:24,960 --> 00:04:26,479
came out with

104
00:04:26,479 --> 00:04:29,759
by the indian american computer

105
00:04:29,759 --> 00:04:30,960
scientist

106
00:04:30,960 --> 00:04:34,720
grouper and we did spend

107
00:04:34,720 --> 00:04:38,160
uh session eight on discussing the topic

108
00:04:38,160 --> 00:04:39,360
and concept

109
00:04:39,360 --> 00:04:42,160
about this but we would do a revision

110
00:04:42,160 --> 00:04:43,520
today

111
00:04:43,520 --> 00:04:46,080
and if you want to see the previous one

112
00:04:46,080 --> 00:04:47,440
go to the may

113
00:04:47,440 --> 00:04:50,800
17th session

114
00:04:50,800 --> 00:04:53,440
this one as well as the shorts algorithm

115
00:04:53,440 --> 00:04:55,840
are the ones that you can actually

116
00:04:55,840 --> 00:04:59,040
use for some applications

117
00:04:59,040 --> 00:05:01,360
whereas uh deutsches algorithm and

118
00:05:01,360 --> 00:05:03,120
deutsch hosa are more

119
00:05:03,120 --> 00:05:06,240
academic algorithms that were very

120
00:05:06,240 --> 00:05:10,800
that were invented early on in the

121
00:05:10,800 --> 00:05:14,080
development of quantum computing so they

122
00:05:14,080 --> 00:05:16,800
do not have real use cases but they are

123
00:05:16,800 --> 00:05:17,440
very

124
00:05:17,440 --> 00:05:19,600
useful in terms of learning and

125
00:05:19,600 --> 00:05:21,199
understanding

126
00:05:21,199 --> 00:05:23,440
we can also use grouper to gain some

127
00:05:23,440 --> 00:05:25,440
intuition and understanding of

128
00:05:25,440 --> 00:05:28,160
using superposition interference

129
00:05:28,160 --> 00:05:28,960
entanglement

130
00:05:28,960 --> 00:05:32,800
in the algorithm setup so

131
00:05:32,800 --> 00:05:36,639
broadly speaking if we just zoom out

132
00:05:36,639 --> 00:05:39,360
not looking at the details what this

133
00:05:39,360 --> 00:05:40,479
algorithm does

134
00:05:40,479 --> 00:05:44,160
is trying to search

135
00:05:44,160 --> 00:05:47,520
for an item in a unordered

136
00:05:47,520 --> 00:05:50,639
unsorted list and

137
00:05:50,639 --> 00:05:54,160
it's like doing this selection

138
00:05:54,160 --> 00:05:57,680
here it can increase the amplitude

139
00:05:57,680 --> 00:06:01,120
or probability of the item that we're

140
00:06:01,120 --> 00:06:03,039
looking for

141
00:06:03,039 --> 00:06:06,800
and they co is consisted of a couple of

142
00:06:06,800 --> 00:06:12,000
boxes that we need to run in iterations

143
00:06:12,400 --> 00:06:16,080
the goofers algorithm

144
00:06:16,080 --> 00:06:19,600
you can do

145
00:06:19,600 --> 00:06:24,000
you you can use it for searching an item

146
00:06:24,000 --> 00:06:26,720
and you can do that using classical

147
00:06:26,720 --> 00:06:28,880
argument as well

148
00:06:28,880 --> 00:06:32,080
and classically

149
00:06:32,080 --> 00:06:34,000
if you want to search an item in the

150
00:06:34,000 --> 00:06:35,120
list then

151
00:06:35,120 --> 00:06:38,240
you may have to if you have n bits you

152
00:06:38,240 --> 00:06:39,680
may have to

153
00:06:39,680 --> 00:06:42,800
run your algorithm up

154
00:06:42,800 --> 00:06:47,360
scaling with 2 to the n but for groover

155
00:06:47,360 --> 00:06:50,960
the scaling is 2 to the n over 2 so

156
00:06:50,960 --> 00:06:54,160
square root of 2 to the n

157
00:06:54,160 --> 00:06:58,479
then at first if you have a small number

158
00:06:58,479 --> 00:06:59,039
of

159
00:06:59,039 --> 00:07:02,560
bits it may not be a speed up

160
00:07:02,560 --> 00:07:05,039
so this is something that we have to

161
00:07:05,039 --> 00:07:07,599
keep in mind that

162
00:07:07,599 --> 00:07:11,759
this algorithm would be advantageous

163
00:07:11,759 --> 00:07:15,440
once we reach certain qubit

164
00:07:15,440 --> 00:07:18,720
numbers so it's like this race

165
00:07:18,720 --> 00:07:23,199
between a super con computer and a

166
00:07:23,199 --> 00:07:26,880
quantum computer where at this

167
00:07:26,880 --> 00:07:30,960
region so maybe a small number of qubits

168
00:07:30,960 --> 00:07:34,560
you you can just do it with a classical

169
00:07:34,560 --> 00:07:36,479
computer there's not much

170
00:07:36,479 --> 00:07:38,400
reason why you will use a quantum

171
00:07:38,400 --> 00:07:39,840
computer to run it

172
00:07:39,840 --> 00:07:41,759
but when the number of qubits gets

173
00:07:41,759 --> 00:07:43,520
really large then that's

174
00:07:43,520 --> 00:07:46,400
when the school versus algorithm really

175
00:07:46,400 --> 00:07:48,800
can take off

176
00:07:48,800 --> 00:07:51,840
so we don't quite know the

177
00:07:51,840 --> 00:07:54,960
exact number that's needed what

178
00:07:54,960 --> 00:07:57,759
where this will occur it depends on a

179
00:07:57,759 --> 00:07:59,599
couple of things

180
00:07:59,599 --> 00:08:02,639
so the

181
00:08:02,639 --> 00:08:05,680
classical versus

182
00:08:05,680 --> 00:08:09,440
quantum these scaling

183
00:08:09,440 --> 00:08:11,840
we don't exactly these are the scaling

184
00:08:11,840 --> 00:08:13,520
factors but don't we don't

185
00:08:13,520 --> 00:08:16,639
exactly know the

186
00:08:16,639 --> 00:08:20,000
factors for the super

187
00:08:20,000 --> 00:08:23,199
computer or quantum computer

188
00:08:23,199 --> 00:08:26,720
because we don't quite know what

189
00:08:26,720 --> 00:08:30,160
would be the best kind of super computer

190
00:08:30,160 --> 00:08:32,880
and the best kind of quantum computer

191
00:08:32,880 --> 00:08:33,919
yet

192
00:08:33,919 --> 00:08:35,919
and of course we're still building

193
00:08:35,919 --> 00:08:38,320
quantum computers and there are so many

194
00:08:38,320 --> 00:08:41,440
different types of architecture so this

195
00:08:41,440 --> 00:08:45,039
uh how much

196
00:08:45,440 --> 00:08:49,440
running one of the

197
00:08:49,440 --> 00:08:52,560
algorithm running in once we take

198
00:08:52,560 --> 00:08:55,680
we don't exactly know and

199
00:08:55,680 --> 00:08:59,120
we don't exactly know how many numbers

200
00:08:59,120 --> 00:09:02,720
of qubits that we would need to see this

201
00:09:02,720 --> 00:09:06,160
crossover but then we know that it's

202
00:09:06,160 --> 00:09:09,519
going to be a large number

203
00:09:09,519 --> 00:09:13,279
and then if we look at smaller numbers

204
00:09:13,279 --> 00:09:16,399
we have to come up with a lot

205
00:09:16,399 --> 00:09:19,519
more algorithms to really show

206
00:09:19,519 --> 00:09:22,000
at the low number can we come up with

207
00:09:22,000 --> 00:09:22,959
some

208
00:09:22,959 --> 00:09:26,399
useful interesting algorithms that could

209
00:09:26,399 --> 00:09:28,640
have

210
00:09:28,800 --> 00:09:30,320
quantum computers being more

211
00:09:30,320 --> 00:09:33,200
advantageous so this is definitely all

212
00:09:33,200 --> 00:09:34,080
of these are

213
00:09:34,080 --> 00:09:38,080
both the hardware and the algorithms are

214
00:09:38,080 --> 00:09:41,200
depending on all of us

215
00:09:41,200 --> 00:09:44,080
when we are doing quantum computing

216
00:09:44,080 --> 00:09:45,360
development

217
00:09:45,360 --> 00:09:48,640
both in terms of software and algorithm

218
00:09:48,640 --> 00:09:49,360
development

219
00:09:49,360 --> 00:09:52,720
as well as the hardware i did also

220
00:09:52,720 --> 00:09:55,839
make a little plot just to

221
00:09:55,839 --> 00:09:58,959
to show this concept here

222
00:09:58,959 --> 00:10:02,480
it's not that for yeah of course if we

223
00:10:02,480 --> 00:10:05,040
look at the scaling factor

224
00:10:05,040 --> 00:10:08,800
groover is square root of 2 to the n

225
00:10:08,800 --> 00:10:10,959
classical is 2 to the n and it seems

226
00:10:10,959 --> 00:10:12,720
that goover will be

227
00:10:12,720 --> 00:10:15,680
will be faster but then we don't know

228
00:10:15,680 --> 00:10:17,360
what the prefactors are

229
00:10:17,360 --> 00:10:21,040
so if you want to see how this scaling

230
00:10:21,040 --> 00:10:25,040
goes and you can put just fixed tissues

231
00:10:25,040 --> 00:10:27,519
factors in front of them in this case

232
00:10:27,519 --> 00:10:28,640
i'm putting b

233
00:10:28,640 --> 00:10:32,160
over equals to 10 and a equals to

234
00:10:32,160 --> 00:10:35,519
one and that's just a fictitious guess

235
00:10:35,519 --> 00:10:37,839
because that really depends on how good

236
00:10:37,839 --> 00:10:40,320
your hardware is and how fast

237
00:10:40,320 --> 00:10:44,720
intrinsically your computer will run

238
00:10:44,720 --> 00:10:48,399
one iteration of your algorithm

239
00:10:48,399 --> 00:10:51,519
so yeah just just some additional

240
00:10:51,519 --> 00:10:52,160
emphasis

241
00:10:52,160 --> 00:10:54,399
that i didn't mention in the last class

242
00:10:54,399 --> 00:10:55,680
and also some

243
00:10:55,680 --> 00:11:00,240
fruitful thoughts there

244
00:11:00,240 --> 00:11:04,079
okay so when we are building

245
00:11:04,079 --> 00:11:07,680
a algorithm we will need to have this

246
00:11:07,680 --> 00:11:10,959
oracle when you want to use interference

247
00:11:10,959 --> 00:11:13,279
in your algorithm this article is like a

248
00:11:13,279 --> 00:11:14,320
black box

249
00:11:14,320 --> 00:11:17,840
we have learned about this in session 7

250
00:11:17,840 --> 00:11:19,519
[Music]

251
00:11:19,519 --> 00:11:22,880
on may 10th and we

252
00:11:22,880 --> 00:11:26,079
use the deutsche hoda

253
00:11:26,079 --> 00:11:29,120
algorithm 2 to understand concept

254
00:11:29,120 --> 00:11:32,560
of quantum article so for people who

255
00:11:32,560 --> 00:11:33,519
have missed that

256
00:11:33,519 --> 00:11:36,000
definitely go to that session we won't

257
00:11:36,000 --> 00:11:36,800
be repeating

258
00:11:36,800 --> 00:11:40,079
it so in short

259
00:11:40,079 --> 00:11:42,720
when we are building a quantum algorithm

260
00:11:42,720 --> 00:11:43,600
we need

261
00:11:43,600 --> 00:11:46,880
these oracles that functions

262
00:11:46,880 --> 00:11:49,920
like inputs of another part of the

263
00:11:49,920 --> 00:11:52,000
algorithm

264
00:11:52,000 --> 00:11:54,399
and

265
00:11:55,279 --> 00:11:57,680
for google we can build several

266
00:11:57,680 --> 00:12:00,320
different types of

267
00:12:00,320 --> 00:12:04,240
boxes depending on which item we're

268
00:12:04,240 --> 00:12:07,519
searching for for example

269
00:12:07,519 --> 00:12:11,040
the black box for 101 so if we

270
00:12:11,040 --> 00:12:13,920
just have three qubits that we are

271
00:12:13,920 --> 00:12:15,360
interested in

272
00:12:15,360 --> 00:12:19,200
um we can

273
00:12:19,200 --> 00:12:22,560
just arbitrarily say 110 is

274
00:12:22,560 --> 00:12:27,200
what we are looking for and

275
00:12:27,200 --> 00:12:30,560
the label of that so y of

276
00:12:30,560 --> 00:12:33,920
f of x we expect it to be one and the

277
00:12:33,920 --> 00:12:34,959
other ones would

278
00:12:34,959 --> 00:12:38,000
output zero in order to

279
00:12:38,000 --> 00:12:41,519
build a black box that would uh pick out

280
00:12:41,519 --> 00:12:44,639
1 1 0 we need to construct

281
00:12:44,639 --> 00:12:48,240
this kind of controlled

282
00:12:48,240 --> 00:12:52,480
gates so

283
00:12:52,480 --> 00:12:54,880
if you remember the control not gate

284
00:12:54,880 --> 00:12:57,279
just involves two qubits

285
00:12:57,279 --> 00:13:00,240
and one the first one is the control the

286
00:13:00,240 --> 00:13:02,240
second one is the target

287
00:13:02,240 --> 00:13:05,600
and only when the first one is one the

288
00:13:05,600 --> 00:13:08,079
second one would flip from zero to one

289
00:13:08,079 --> 00:13:09,839
or from one to zero

290
00:13:09,839 --> 00:13:12,160
if you have three qubits is this is

291
00:13:12,160 --> 00:13:14,079
called the cc knot

292
00:13:14,079 --> 00:13:17,360
it is also called a tofoli gate it has

293
00:13:17,360 --> 00:13:20,160
the first two qubits being the control

294
00:13:20,160 --> 00:13:23,519
and the last one being the target again

295
00:13:23,519 --> 00:13:24,240
you have

296
00:13:24,240 --> 00:13:26,800
you can only flip this one when the

297
00:13:26,800 --> 00:13:27,360
first

298
00:13:27,360 --> 00:13:30,399
two are both zeros

299
00:13:30,399 --> 00:13:33,920
now you have more qubits you just add up

300
00:13:33,920 --> 00:13:34,399
this

301
00:13:34,399 --> 00:13:37,440
control bits so the requirement of this

302
00:13:37,440 --> 00:13:39,120
control

303
00:13:39,120 --> 00:13:42,639
gate is that the first

304
00:13:42,639 --> 00:13:46,079
all of the other qubits need to be

305
00:13:46,079 --> 00:13:49,519
once when your last one

306
00:13:49,519 --> 00:13:52,959
can be flipped so then

307
00:13:52,959 --> 00:13:56,320
this means that uh 110 wouldn't work

308
00:13:56,320 --> 00:13:59,440
unless you put these

309
00:13:59,440 --> 00:14:02,399
flip gates around it so especially this

310
00:14:02,399 --> 00:14:02,800
one

311
00:14:02,800 --> 00:14:05,680
because that would flip from zero to one

312
00:14:05,680 --> 00:14:06,959
then you can

313
00:14:06,959 --> 00:14:11,040
change this qubit here

314
00:14:11,040 --> 00:14:13,600
so that's how you set up a black box and

315
00:14:13,600 --> 00:14:15,120
i forgot to mention that

316
00:14:15,120 --> 00:14:18,560
oracle also needs to be set up

317
00:14:18,560 --> 00:14:22,480
in order to make a unitary

318
00:14:22,480 --> 00:14:25,040
operation so that's another need for

319
00:14:25,040 --> 00:14:27,120
setting up our codes

320
00:14:27,120 --> 00:14:29,440
if these all sound very new to you

321
00:14:29,440 --> 00:14:30,880
definitely go back to the previous

322
00:14:30,880 --> 00:14:32,880
sessions

323
00:14:32,880 --> 00:14:35,680
so similarly you can build other types

324
00:14:35,680 --> 00:14:36,079
of

325
00:14:36,079 --> 00:14:38,079
other black boxes still using three

326
00:14:38,079 --> 00:14:39,680
qubits as examples

327
00:14:39,680 --> 00:14:43,199
for 0 1 0 you will have the x

328
00:14:43,199 --> 00:14:46,480
gates set up on the the

329
00:14:46,480 --> 00:14:49,519
both the zeros if you have already the

330
00:14:49,519 --> 00:14:51,600
111 you want to label that you need

331
00:14:51,600 --> 00:14:53,120
don't need to give it

332
00:14:53,120 --> 00:14:56,800
a flip because this already can already

333
00:14:56,800 --> 00:15:00,079
flip the last qubit so this is the part

334
00:15:00,079 --> 00:15:02,880
that you need to

335
00:15:03,360 --> 00:15:06,240
set up first as your oracle for google's

336
00:15:06,240 --> 00:15:07,360
algorithm

337
00:15:07,360 --> 00:15:10,639
which would then label or mark

338
00:15:10,639 --> 00:15:14,560
your item on the list

339
00:15:15,600 --> 00:15:19,040
if you look at the complete diagram for

340
00:15:19,040 --> 00:15:22,320
groupers again using just

341
00:15:22,320 --> 00:15:25,279
three qubits because that's not too many

342
00:15:25,279 --> 00:15:28,079
qubits and not too few qubits

343
00:15:28,079 --> 00:15:30,160
we can still do some calculations by

344
00:15:30,160 --> 00:15:31,199
hand if we

345
00:15:31,199 --> 00:15:34,959
get lost this

346
00:15:34,959 --> 00:15:39,279
first part is

347
00:15:39,279 --> 00:15:43,839
making everything to equal

348
00:15:43,839 --> 00:15:47,360
superposition when you start with

349
00:15:47,360 --> 00:15:50,959
just zeros in your system you will have

350
00:15:50,959 --> 00:15:51,360
this

351
00:15:51,360 --> 00:15:54,800
maximum amplitude for zero zero zero

352
00:15:54,800 --> 00:15:57,279
the other options are not there but if

353
00:15:57,279 --> 00:16:00,000
you scramble them with the

354
00:16:00,000 --> 00:16:03,120
h gates they would make all of your

355
00:16:03,120 --> 00:16:03,680
qubits

356
00:16:03,680 --> 00:16:07,040
into a superposition of zero and ones

357
00:16:07,040 --> 00:16:10,480
then you have all of these possibilities

358
00:16:10,480 --> 00:16:11,519
in superposition

359
00:16:11,519 --> 00:16:14,079
and they all have equal amplitudes

360
00:16:14,079 --> 00:16:14,959
that's what

361
00:16:14,959 --> 00:16:18,079
this part does then the second part is

362
00:16:18,079 --> 00:16:18,480
the

363
00:16:18,480 --> 00:16:23,839
black box the oracles that i'm already

364
00:16:23,839 --> 00:16:27,279
mentioned introduced what this does

365
00:16:27,279 --> 00:16:31,519
is it's

366
00:16:32,079 --> 00:16:35,120
if you are if you want to set up a one

367
00:16:35,120 --> 00:16:36,079
zero one

368
00:16:36,079 --> 00:16:39,519
black box you would put

369
00:16:39,519 --> 00:16:43,199
the x gates around your second bit

370
00:16:43,199 --> 00:16:46,880
because your second bit is zero

371
00:16:46,880 --> 00:16:50,000
and then what happens in here is

372
00:16:50,000 --> 00:16:53,199
then this very last bit

373
00:16:53,199 --> 00:16:58,160
is used to introduce a negative sign

374
00:16:58,160 --> 00:17:01,199
so this negative sign would then be

375
00:17:01,199 --> 00:17:05,359
scrambled into your

376
00:17:05,359 --> 00:17:08,640
whole entanglement or

377
00:17:08,640 --> 00:17:13,280
this controlled setup

378
00:17:13,280 --> 00:17:16,160
this negative sign will be introduced to

379
00:17:16,160 --> 00:17:17,119
no one else

380
00:17:17,119 --> 00:17:20,640
except the one that you label

381
00:17:20,640 --> 00:17:23,039
so the one zero one now gets a negative

382
00:17:23,039 --> 00:17:25,039
amplitude

383
00:17:25,039 --> 00:17:27,760
this would be very very useful in the

384
00:17:27,760 --> 00:17:28,160
next

385
00:17:28,160 --> 00:17:32,640
few steps

386
00:17:32,640 --> 00:17:35,840
look at the second part of the algorithm

387
00:17:35,840 --> 00:17:39,520
this another box this is like

388
00:17:39,520 --> 00:17:43,120
the article earlier where you

389
00:17:43,120 --> 00:17:46,559
have now the x case

390
00:17:46,559 --> 00:17:50,000
for all three of the

391
00:17:50,000 --> 00:17:53,760
input qubits and

392
00:17:53,760 --> 00:17:55,919
because of your experience with the the

393
00:17:55,919 --> 00:17:57,679
earlier one you know

394
00:17:57,679 --> 00:18:01,039
that if my

395
00:18:01,039 --> 00:18:03,600
qubits are all zero then they are being

396
00:18:03,600 --> 00:18:04,240
flipped

397
00:18:04,240 --> 00:18:07,679
and then they can control the very last

398
00:18:07,679 --> 00:18:09,360
bit

399
00:18:09,360 --> 00:18:13,120
so this one allows you to get

400
00:18:13,120 --> 00:18:16,400
the zero zero zero to have a negative

401
00:18:16,400 --> 00:18:19,039
just like how this one got a negative

402
00:18:19,039 --> 00:18:20,480
for the one zero

403
00:18:20,480 --> 00:18:23,919
one this one would give a negative to

404
00:18:23,919 --> 00:18:26,960
your zero zero zero

405
00:18:27,600 --> 00:18:32,400
but what happens when you have a extra

406
00:18:32,400 --> 00:18:35,520
incoming qubit that

407
00:18:35,520 --> 00:18:39,600
had a negative sign introduced

408
00:18:39,600 --> 00:18:42,880
what this one does is allowing all of

409
00:18:42,880 --> 00:18:45,919
these amplitudes to flip their signs

410
00:18:45,919 --> 00:18:49,120
so now your 000 becomes positive and

411
00:18:49,120 --> 00:18:52,799
all the rest becomes negative

412
00:18:52,799 --> 00:18:56,080
this is the use of this very last

413
00:18:56,080 --> 00:18:59,200
qubit here is purposely introducing this

414
00:18:59,200 --> 00:19:02,000
negative sign

415
00:19:02,080 --> 00:19:06,240
the next bit is even funnier

416
00:19:06,240 --> 00:19:09,520
is that not only do you have this box

417
00:19:09,520 --> 00:19:11,200
with all these axe gates

418
00:19:11,200 --> 00:19:14,480
you also have some h gates

419
00:19:14,480 --> 00:19:17,760
on both sides and what does this

420
00:19:17,760 --> 00:19:21,120
do this both sides you have h gates

421
00:19:21,120 --> 00:19:24,400
will actually allow you to flip all of

422
00:19:24,400 --> 00:19:25,919
the amplitudes

423
00:19:25,919 --> 00:19:28,880
over this mean value of all of the

424
00:19:28,880 --> 00:19:31,280
amplitudes

425
00:19:31,280 --> 00:19:34,480
so this is a maybe a little if this is

426
00:19:34,480 --> 00:19:35,760
the first time you see gruber's

427
00:19:35,760 --> 00:19:37,600
algorithm

428
00:19:37,600 --> 00:19:41,280
maybe a little mind boggling how is it

429
00:19:41,280 --> 00:19:45,120
allowing you to flip over the mean

430
00:19:45,120 --> 00:19:49,600
so the h gates remember that

431
00:19:49,600 --> 00:19:52,799
when we look at the single qubits

432
00:19:52,799 --> 00:19:56,080
gates when we introduce each it is

433
00:19:56,080 --> 00:19:58,080
allowing you to

434
00:19:58,080 --> 00:20:01,520
go from zero to plus and

435
00:20:01,520 --> 00:20:04,720
one to minus and

436
00:20:04,720 --> 00:20:08,159
in effect it is also flipping

437
00:20:08,159 --> 00:20:10,480
your

438
00:20:11,520 --> 00:20:14,720
your states around the mean

439
00:20:14,720 --> 00:20:18,080
if you have uh two

440
00:20:18,080 --> 00:20:21,520
each gates around both sides of whatever

441
00:20:21,520 --> 00:20:23,679
that's in here

442
00:20:23,679 --> 00:20:25,440
and i will show you a little bit more

443
00:20:25,440 --> 00:20:27,520
about this uh when we do

444
00:20:27,520 --> 00:20:30,240
the the coding oh actually i do have

445
00:20:30,240 --> 00:20:31,840
this slide here coming up

446
00:20:31,840 --> 00:20:35,200
yeah let me show this then so imagine

447
00:20:35,200 --> 00:20:39,600
you just have one qubit

448
00:20:39,600 --> 00:20:42,720
you would just have zero one

449
00:20:42,720 --> 00:20:47,280
as your bases and you have an arbitrary

450
00:20:47,280 --> 00:20:50,720
state so

451
00:20:50,720 --> 00:20:53,679
we just saw that whatever is in this box

452
00:20:53,679 --> 00:20:56,880
is allowing you to

453
00:20:56,880 --> 00:20:59,440
have a negative sign introduced and

454
00:20:59,440 --> 00:21:00,320
that's

455
00:21:00,320 --> 00:21:03,919
that means you're rotating around this

456
00:21:03,919 --> 00:21:07,520
zero axis and that's what

457
00:21:07,520 --> 00:21:10,480
uh this whole box does when you have

458
00:21:10,480 --> 00:21:10,960
that

459
00:21:10,960 --> 00:21:14,240
negative sign introduced now if you

460
00:21:14,240 --> 00:21:16,159
apply this

461
00:21:16,159 --> 00:21:18,480
when we have just one cubit just one h

462
00:21:18,480 --> 00:21:19,679
gauge on

463
00:21:19,679 --> 00:21:23,760
both sides your eventually your

464
00:21:23,760 --> 00:21:26,640
state is going to end up here and that

465
00:21:26,640 --> 00:21:29,039
is a flip

466
00:21:29,039 --> 00:21:32,480
over its mean value and this is just

467
00:21:32,480 --> 00:21:35,679
looking at one cubit

468
00:21:36,000 --> 00:21:39,039
so anything that is

469
00:21:39,039 --> 00:21:42,159
flipping around the x the

470
00:21:42,159 --> 00:21:46,480
z axis or flipping around the zero state

471
00:21:46,480 --> 00:21:50,480
plus two h k's on both sides

472
00:21:50,480 --> 00:21:53,760
will allow you to flip around the mean

473
00:21:53,760 --> 00:21:57,039
eventually so this

474
00:21:57,039 --> 00:22:00,080
is only one qubit and we're looking at

475
00:22:00,080 --> 00:22:01,280
the block sphere

476
00:22:01,280 --> 00:22:04,080
and it's an easy

477
00:22:04,320 --> 00:22:08,400
cons easy visual tool to think about it

478
00:22:08,400 --> 00:22:11,679
but now if you have additional qubits

479
00:22:11,679 --> 00:22:14,480
then you're adding up the dimension and

480
00:22:14,480 --> 00:22:15,440
humans we

481
00:22:15,440 --> 00:22:18,480
won't be able to visualize

482
00:22:18,480 --> 00:22:20,400
more than four dimension more than three

483
00:22:20,400 --> 00:22:22,159
dimensions

484
00:22:22,159 --> 00:22:25,440
but the truth is is

485
00:22:25,440 --> 00:22:28,159
just adding more states and it's the

486
00:22:28,159 --> 00:22:29,679
same principle

487
00:22:29,679 --> 00:22:32,880
you are flipping over the all zero

488
00:22:32,880 --> 00:22:33,840
states

489
00:22:33,840 --> 00:22:36,640
in this box and then in this whole box

490
00:22:36,640 --> 00:22:37,200
here

491
00:22:37,200 --> 00:22:39,840
you're flipping over all of the

492
00:22:39,840 --> 00:22:41,840
possibilities mean

493
00:22:41,840 --> 00:22:44,240
so this is really freaky i really like

494
00:22:44,240 --> 00:22:47,039
this algorithm

495
00:22:47,120 --> 00:22:50,480
so that's what it does it's

496
00:22:50,480 --> 00:22:53,760
very useful because now if you repeat

497
00:22:53,760 --> 00:22:54,320
these

498
00:22:54,320 --> 00:22:57,360
two boxes over and over

499
00:22:57,360 --> 00:23:00,080
you would be able to continuously

500
00:23:00,080 --> 00:23:00,799
increase

501
00:23:00,799 --> 00:23:04,240
the amplitude of the

502
00:23:04,240 --> 00:23:07,360
first the one that you marked

503
00:23:07,360 --> 00:23:10,559
so flip over

504
00:23:10,559 --> 00:23:12,960
zero and flip over mean a couple of

505
00:23:12,960 --> 00:23:14,240
times

506
00:23:14,240 --> 00:23:16,240
so it turns out that the number of times

507
00:23:16,240 --> 00:23:18,080
you need to do this iteration

508
00:23:18,080 --> 00:23:20,880
is square root of two to the n as i

509
00:23:20,880 --> 00:23:22,080
introduced at the beginning

510
00:23:22,080 --> 00:23:25,520
of the class so if you just have

511
00:23:25,520 --> 00:23:28,400
like three qubits you don't have to flip

512
00:23:28,400 --> 00:23:29,120
so many

513
00:23:29,120 --> 00:23:32,159
e3 so many times but when you have lots

514
00:23:32,159 --> 00:23:33,919
of lots of qubits

515
00:23:33,919 --> 00:23:36,000
your classical computer is going to

516
00:23:36,000 --> 00:23:38,080
scale with 2 to the n

517
00:23:38,080 --> 00:23:41,279
but then google can scale to square root

518
00:23:41,279 --> 00:23:42,320
of 2 to the n

519
00:23:42,320 --> 00:23:44,880
much fewer steps than classical and

520
00:23:44,880 --> 00:23:46,000
that's why

521
00:23:46,000 --> 00:23:51,520
it's useful and gives us that speed up

522
00:23:51,520 --> 00:23:54,720
and yeah and even if you just have a few

523
00:23:54,720 --> 00:23:55,679
qubits you don't

524
00:23:55,679 --> 00:23:58,400
also even have to use any computer you

525
00:23:58,400 --> 00:24:00,159
can just use your brain

526
00:24:00,159 --> 00:24:03,360
and i think earlier i do want to mention

527
00:24:03,360 --> 00:24:04,240
that i

528
00:24:04,240 --> 00:24:06,799
put the math here if you want to check

529
00:24:06,799 --> 00:24:08,400
what's happening

530
00:24:08,400 --> 00:24:11,120
feel free to just write out things we

531
00:24:11,120 --> 00:24:13,039
only have three qubits you can write out

532
00:24:13,039 --> 00:24:15,520
every single state and see what happens

533
00:24:15,520 --> 00:24:16,799
and then you will see

534
00:24:16,799 --> 00:24:19,200
this negative sign will be introduced to

535
00:24:19,200 --> 00:24:20,159
all of the

536
00:24:20,159 --> 00:24:22,480
possibilities but then because your

537
00:24:22,480 --> 00:24:26,159
first 000 already has a minus it becomes

538
00:24:26,159 --> 00:24:29,600
positive the rest of it will be negative

539
00:24:29,600 --> 00:24:31,600
so definitely try out the math i would

540
00:24:31,600 --> 00:24:33,600
highly recommend that

541
00:24:33,600 --> 00:24:36,400
so let's do some coding we have the

542
00:24:36,400 --> 00:24:37,200
quantum

543
00:24:37,200 --> 00:24:40,799
codes and a lot of samples on google's

544
00:24:40,799 --> 00:24:41,840
algorithm

545
00:24:41,840 --> 00:24:46,000
what we're going to use today is the one

546
00:24:46,000 --> 00:24:51,360
in the cada

547
00:24:51,440 --> 00:24:54,559
this one so the the one that sets

548
00:24:54,559 --> 00:24:57,360
up the groover's orgasm the other ones

549
00:24:57,360 --> 00:24:58,400
are using them

550
00:24:58,400 --> 00:25:00,240
using the autism and there are some

551
00:25:00,240 --> 00:25:01,760
really fun ones like this

552
00:25:01,760 --> 00:25:05,039
is to use

553
00:25:05,039 --> 00:25:07,760
the gruber's algorithm in another setup

554
00:25:07,760 --> 00:25:08,880
this one

555
00:25:08,880 --> 00:25:12,320
helps you visualize it by doing a graph

556
00:25:12,320 --> 00:25:13,120
coloring

557
00:25:13,120 --> 00:25:16,240
example this one is a fun write-up by my

558
00:25:16,240 --> 00:25:19,279
colleagues on decorating christmas trees

559
00:25:19,279 --> 00:25:22,400
it's like you want to choose

560
00:25:22,400 --> 00:25:26,240
you have a rule of how how many

561
00:25:26,240 --> 00:25:28,159
ornaments you want to put on each layer

562
00:25:28,159 --> 00:25:30,400
of the tree and you need to have

563
00:25:30,400 --> 00:25:32,960
efficient algorithm to automatically

564
00:25:32,960 --> 00:25:33,679
select

565
00:25:33,679 --> 00:25:37,039
where to put what we also have like

566
00:25:37,039 --> 00:25:40,799
a analogy by my colleague about

567
00:25:40,799 --> 00:25:43,600
santa claus trying to find the right

568
00:25:43,600 --> 00:25:44,080
gift

569
00:25:44,080 --> 00:25:47,360
for for the kids from the bag but all of

570
00:25:47,360 --> 00:25:48,240
the gifts are

571
00:25:48,240 --> 00:25:52,000
randomly ordered and he needs to have

572
00:25:52,000 --> 00:25:56,240
a algorithm to find the exact right

573
00:25:56,240 --> 00:25:59,120
gift so that's the kind of examples that

574
00:25:59,120 --> 00:26:00,880
googlers can help

575
00:26:00,880 --> 00:26:03,760
so let's go to the cutters i would show

576
00:26:03,760 --> 00:26:06,880
both of my screens now

577
00:26:06,880 --> 00:26:09,840
do the control plus to hopefully

578
00:26:09,840 --> 00:26:11,840
increase the

579
00:26:11,840 --> 00:26:14,320
words for you and you can also do it on

580
00:26:14,320 --> 00:26:16,880
your screen

581
00:26:16,880 --> 00:26:19,600
so the google's one is the screwers

582
00:26:19,600 --> 00:26:22,240
algorithm

583
00:26:22,840 --> 00:26:25,120
folder now

584
00:26:25,120 --> 00:26:30,158
we will use the jupiter notebook

585
00:26:30,320 --> 00:26:33,360
and also i think we probably can spend a

586
00:26:33,360 --> 00:26:34,480
couple

587
00:26:34,480 --> 00:26:37,919
classes on gurus if we don't get to

588
00:26:37,919 --> 00:26:38,400
finish

589
00:26:38,400 --> 00:26:41,520
everything we can continue next time

590
00:26:41,520 --> 00:26:44,640
there are so many interesting work

591
00:26:44,640 --> 00:26:46,490
around that

592
00:26:46,490 --> 00:26:48,880
[Music]

593
00:26:48,880 --> 00:26:52,159
yeah hopefully jupiter is not

594
00:26:52,159 --> 00:26:54,240
too slow i mean binder is not too slow

595
00:26:54,240 --> 00:26:56,240
today

596
00:26:56,240 --> 00:26:59,039
so when you open the guru's algorithm on

597
00:26:59,039 --> 00:27:00,400
the catas

598
00:27:00,400 --> 00:27:03,919
this is the non-installation option on

599
00:27:03,919 --> 00:27:08,240
jupyter notebook on the binder

600
00:27:08,320 --> 00:27:10,640
feel free to read the earlier ones when

601
00:27:10,640 --> 00:27:11,440
you have time

602
00:27:11,440 --> 00:27:16,960
so we just gonna go to task 101 here

603
00:27:18,000 --> 00:27:21,279
we are given n qubits as our

604
00:27:21,279 --> 00:27:23,600
arbitrary states so our all of our

605
00:27:23,600 --> 00:27:24,320
inputs

606
00:27:24,320 --> 00:27:28,080
qubits so all of the the first

607
00:27:28,080 --> 00:27:31,200
ones but in this case we have n not just

608
00:27:31,200 --> 00:27:32,159
three

609
00:27:32,159 --> 00:27:34,799
and that's also by the way why a

610
00:27:34,799 --> 00:27:36,480
language like q sharp is

611
00:27:36,480 --> 00:27:39,520
powerful is that we're not limited to a

612
00:27:39,520 --> 00:27:41,039
small number

613
00:27:41,039 --> 00:27:43,840
we can scale it up to any number of

614
00:27:43,840 --> 00:27:45,440
qubits

615
00:27:45,440 --> 00:27:47,919
and then we have a arbitrary state y

616
00:27:47,919 --> 00:27:49,700
which is our very bottom one

617
00:27:49,700 --> 00:27:50,960
[Music]

618
00:27:50,960 --> 00:27:54,000
it says flip the state of the target

619
00:27:54,000 --> 00:27:57,440
qubit apply a x gate

620
00:27:57,440 --> 00:28:01,200
to it if the query register

621
00:28:01,200 --> 00:28:04,640
is in the 101 states

622
00:28:04,640 --> 00:28:08,480
so this is basically saying that uh

623
00:28:08,480 --> 00:28:10,880
we want to label our all one state as

624
00:28:10,880 --> 00:28:12,310
the one we are looking for

625
00:28:12,310 --> 00:28:14,159
[Music]

626
00:28:14,159 --> 00:28:17,360
so if the query register

627
00:28:17,360 --> 00:28:20,480
is in the state all zero leave the

628
00:28:20,480 --> 00:28:22,159
target unchanged

629
00:28:22,159 --> 00:28:25,440
if it's one plus or zero uh leave

630
00:28:25,440 --> 00:28:27,760
unchanged so if you have any zero in

631
00:28:27,760 --> 00:28:29,600
your state leave the amount changed

632
00:28:29,600 --> 00:28:35,279
only the all ones you flip the target

633
00:28:35,279 --> 00:28:38,080
so we just set up like what this shows

634
00:28:38,080 --> 00:28:40,320
here

635
00:28:40,720 --> 00:28:44,559
and don't worry about this this is for

636
00:28:44,559 --> 00:28:46,880
later

637
00:28:46,880 --> 00:28:49,120
so

638
00:28:50,159 --> 00:28:54,159
this over here is yeah so this

639
00:28:54,159 --> 00:28:57,120
oracle all once test is asking us to

640
00:28:57,120 --> 00:28:57,520
build

641
00:28:57,520 --> 00:29:00,240
exactly this article here except it's

642
00:29:00,240 --> 00:29:02,640
the r1 state that we want to do

643
00:29:02,640 --> 00:29:04,480
so that's that's actually very very

644
00:29:04,480 --> 00:29:05,679
simple

645
00:29:05,679 --> 00:29:08,799
we use the control x

646
00:29:08,799 --> 00:29:12,320
exactly like these control x

647
00:29:12,320 --> 00:29:16,640
and we make all of the query register

648
00:29:16,640 --> 00:29:20,080
as our inputs

649
00:29:24,000 --> 00:29:27,200
and then the target is the target

650
00:29:27,200 --> 00:29:30,320
so that's it

651
00:29:30,320 --> 00:29:33,039
because this one is basically the

652
00:29:33,039 --> 00:29:34,399
easiest one

653
00:29:34,399 --> 00:29:39,120
oh do i miss anything oh target

654
00:29:39,520 --> 00:29:41,039
this one is the easiest one because you

655
00:29:41,039 --> 00:29:44,240
don't have to add any additional x gates

656
00:29:44,240 --> 00:29:46,720
but if you are asked to do like the

657
00:29:46,720 --> 00:29:47,679
later ones

658
00:29:47,679 --> 00:29:50,880
that you actually have to flip the zero

659
00:29:50,880 --> 00:29:54,080
states to the one in order to have

660
00:29:54,080 --> 00:29:57,200
this control operation working

661
00:29:57,200 --> 00:30:00,080
we're going to skip the next three

662
00:30:00,080 --> 00:30:00,880
articles

663
00:30:00,880 --> 00:30:04,720
those are for you to do as homework

664
00:30:04,720 --> 00:30:06,080
those are just setting up different

665
00:30:06,080 --> 00:30:07,840
types of

666
00:30:07,840 --> 00:30:10,080
and then we we should go build up the

667
00:30:10,080 --> 00:30:13,360
groover iterations

668
00:30:13,919 --> 00:30:16,240
now is asking to do the hadamard

669
00:30:16,240 --> 00:30:18,559
transformation

670
00:30:18,559 --> 00:30:22,000
so it's this part of the algorithm here

671
00:30:22,000 --> 00:30:26,559
is the flip over mean

672
00:30:26,559 --> 00:30:30,240
so this is asking

673
00:30:30,240 --> 00:30:34,159
to build using the n

674
00:30:34,159 --> 00:30:37,760
qubits are registry qubits so all of

675
00:30:37,760 --> 00:30:41,520
the top ones and apply the harmonal

676
00:30:41,520 --> 00:30:43,360
transformation to each of the cubes in

677
00:30:43,360 --> 00:30:44,880
the register

678
00:30:44,880 --> 00:30:47,760
if the register started in the all zero

679
00:30:47,760 --> 00:30:48,480
state

680
00:30:48,480 --> 00:30:50,960
this operation will prepare an equal

681
00:30:50,960 --> 00:30:52,240
superposition

682
00:30:52,240 --> 00:30:55,440
of all two to the n basis states

683
00:30:55,440 --> 00:30:59,919
sure um so

684
00:30:59,919 --> 00:31:02,559
yeah okay i was going to talk about this

685
00:31:02,559 --> 00:31:03,039
but no

686
00:31:03,039 --> 00:31:05,760
it's the next step so this is nothing

687
00:31:05,760 --> 00:31:06,080
but

688
00:31:06,080 --> 00:31:09,440
setting up these hard on my gates

689
00:31:09,440 --> 00:31:11,840
actually just these these ones the

690
00:31:11,840 --> 00:31:13,120
inputs

691
00:31:13,120 --> 00:31:16,960
so again you gonna do the

692
00:31:16,960 --> 00:31:20,559
hartimer we have a very convenient

693
00:31:20,559 --> 00:31:23,600
command called

694
00:31:23,600 --> 00:31:27,200
operation called apply to each so that

695
00:31:27,200 --> 00:31:29,279
reduces your your writing you don't have

696
00:31:29,279 --> 00:31:31,200
to do

697
00:31:31,200 --> 00:31:33,840
um like three lines because you can

698
00:31:33,840 --> 00:31:34,480
write like

699
00:31:34,480 --> 00:31:37,279
four all the qubits in your register do

700
00:31:37,279 --> 00:31:38,000
a h

701
00:31:38,000 --> 00:31:41,360
but we do have a command called apply

702
00:31:41,360 --> 00:31:46,080
to each and you can just do the

703
00:31:46,080 --> 00:31:49,679
h key to register

704
00:31:49,679 --> 00:31:53,120
but here is asking for an add join

705
00:31:53,120 --> 00:31:56,720
we have also a very convenient

706
00:31:56,720 --> 00:32:00,399
uh way to do that you can just put a as

707
00:32:00,399 --> 00:32:03,760
our join we also have a control type so

708
00:32:03,760 --> 00:32:06,240
if if the question asks us to build

709
00:32:06,240 --> 00:32:08,880
control we would put the c there

710
00:32:08,880 --> 00:32:11,919
and how do we find out about what is

711
00:32:11,919 --> 00:32:14,960
i mean we can go to

712
00:32:14,960 --> 00:32:19,200
the microsoft quantum documentation page

713
00:32:19,200 --> 00:32:21,840
that's where you can find all the apis

714
00:32:21,840 --> 00:32:23,440
about q sharp

715
00:32:23,440 --> 00:32:26,480
so if i put

716
00:32:26,480 --> 00:32:29,840
apply to each

717
00:32:29,840 --> 00:32:33,039
there are applied to each with without

718
00:32:33,039 --> 00:32:34,080
anything that a

719
00:32:34,080 --> 00:32:38,799
c or ac so this is the one we're using

720
00:32:38,799 --> 00:32:42,000
and you can read about what

721
00:32:42,000 --> 00:32:45,710
this operation does

722
00:32:45,710 --> 00:32:47,120
[Music]

723
00:32:47,120 --> 00:32:52,080
so a here is just the address some

724
00:32:52,080 --> 00:32:55,600
classes ago so that's that's what you

725
00:32:55,600 --> 00:32:57,440
need for that step

726
00:32:57,440 --> 00:33:01,279
this here so the next part is is fun

727
00:33:01,279 --> 00:33:04,080
and i also kind of learned about this

728
00:33:04,080 --> 00:33:05,039
part

729
00:33:05,039 --> 00:33:07,279
from the catalyst because earlier i

730
00:33:07,279 --> 00:33:08,960
didn't realize this and this

731
00:33:08,960 --> 00:33:12,880
is really cool that

732
00:33:13,039 --> 00:33:15,840
there are actually many ways you can

733
00:33:15,840 --> 00:33:18,320
introduce the minus sign

734
00:33:18,320 --> 00:33:20,559
the one that i showed you was kind of

735
00:33:20,559 --> 00:33:22,240
because

736
00:33:22,240 --> 00:33:25,360
is very similar to this part so i was

737
00:33:25,360 --> 00:33:27,519
naturally showing you this option

738
00:33:27,519 --> 00:33:30,559
where you have all of the control ones

739
00:33:30,559 --> 00:33:32,559
two you need to make all of your control

740
00:33:32,559 --> 00:33:33,600
ones to be one

741
00:33:33,600 --> 00:33:36,799
and the last qubit to be target in order

742
00:33:36,799 --> 00:33:39,120
to introduce the minus sign from the

743
00:33:39,120 --> 00:33:40,720
last qubit

744
00:33:40,720 --> 00:33:44,960
however you have other ways to do that

745
00:33:45,039 --> 00:33:47,279
you don't even have to use this very

746
00:33:47,279 --> 00:33:48,399
last qubit

747
00:33:48,399 --> 00:33:53,760
in this reflection over mean operation

748
00:33:53,760 --> 00:33:57,360
remember in our single qubit gates we

749
00:33:57,360 --> 00:33:57,919
have

750
00:33:57,919 --> 00:34:00,240
we have c in the x what x does is

751
00:34:00,240 --> 00:34:03,200
flipping from zero to one one to zero

752
00:34:03,200 --> 00:34:06,320
but we also have this z gate it

753
00:34:06,320 --> 00:34:08,879
intrinsically introduces a minus sign is

754
00:34:08,879 --> 00:34:10,239
rotating around the z

755
00:34:10,239 --> 00:34:12,639
axis so you're giving your second

756
00:34:12,639 --> 00:34:15,119
element this negative sign here

757
00:34:15,119 --> 00:34:18,159
and you can just do this to introduce

758
00:34:18,159 --> 00:34:20,159
that minus sign

759
00:34:20,159 --> 00:34:23,199
and this is what this conditional face

760
00:34:23,199 --> 00:34:23,839
flip

761
00:34:23,839 --> 00:34:27,280
is asking us to do but you can also

762
00:34:27,280 --> 00:34:28,320
build this one

763
00:34:28,320 --> 00:34:32,480
if you want so this one is

764
00:34:32,480 --> 00:34:36,560
it is trying to give us a hint to do

765
00:34:36,560 --> 00:34:40,239
this kind of uh operation so let's

766
00:34:40,239 --> 00:34:43,679
do their way so

767
00:34:43,679 --> 00:34:45,839
the

768
00:34:47,199 --> 00:34:49,918
first thing is that you need to set up

769
00:34:49,918 --> 00:34:50,560
these

770
00:34:50,560 --> 00:34:54,079
x uh sorry use this one now set up these

771
00:34:54,079 --> 00:34:58,079
x uh control the x case and then the

772
00:34:58,079 --> 00:34:58,960
control

773
00:34:58,960 --> 00:35:02,480
z gate and

774
00:35:02,480 --> 00:35:05,760
this algorithm is nice this whole kata

775
00:35:05,760 --> 00:35:07,119
is nice because he's

776
00:35:07,119 --> 00:35:10,560
introducing quite a few algorithms or

777
00:35:10,560 --> 00:35:14,960
sorry quite a few operations

778
00:35:14,960 --> 00:35:19,839
so there's something called within

779
00:35:19,839 --> 00:35:22,320
apply

780
00:35:25,920 --> 00:35:29,200
so that means it's kind of exactly like

781
00:35:29,200 --> 00:35:30,800
what this does is within

782
00:35:30,800 --> 00:35:34,400
these things you can apply this here

783
00:35:34,400 --> 00:35:38,960
so you can do

784
00:35:41,200 --> 00:35:45,119
within again apply

785
00:35:45,119 --> 00:35:48,560
to each and again it's asking for the

786
00:35:48,560 --> 00:35:49,280
adjoin

787
00:35:49,280 --> 00:35:52,960
version so we put a there

788
00:35:53,760 --> 00:35:59,839
the x to the register

789
00:36:06,000 --> 00:36:12,320
now in here we are doing the ctrl z

790
00:36:12,320 --> 00:36:14,560
so

791
00:36:24,640 --> 00:36:27,359
how do you how do you write uh in the

792
00:36:27,359 --> 00:36:29,119
most efficient way that

793
00:36:29,119 --> 00:36:31,839
you want the last qubit to be your

794
00:36:31,839 --> 00:36:33,280
target

795
00:36:33,280 --> 00:36:36,079
the rest to be controlled turns out

796
00:36:36,079 --> 00:36:36,560
there's

797
00:36:36,560 --> 00:36:40,000
something in q sharp you can do that and

798
00:36:40,000 --> 00:36:43,680
that one is called the tail

799
00:36:43,680 --> 00:36:47,200
if you look at the api

800
00:36:47,200 --> 00:36:49,359
the tail function returns the last

801
00:36:49,359 --> 00:36:51,760
element of the array

802
00:36:51,760 --> 00:36:54,800
and opposite to tail is most

803
00:36:54,800 --> 00:36:59,440
so most is all the rest of the

804
00:36:59,440 --> 00:37:03,839
qubits and tail

805
00:37:07,280 --> 00:37:10,400
i might have left out i should i think

806
00:37:10,400 --> 00:37:13,440
we need to have the um x

807
00:37:13,440 --> 00:37:17,119
for these ones too so

808
00:37:17,119 --> 00:37:21,200
that's what this is helping us to set up

809
00:37:21,200 --> 00:37:24,400
so that's how you can do a control

810
00:37:24,400 --> 00:37:27,760
conditional flip to all this does

811
00:37:27,760 --> 00:37:30,720
is introducing to you i might have left

812
00:37:30,720 --> 00:37:33,280
some brackets

813
00:37:33,280 --> 00:37:36,400
a oh

814
00:37:36,400 --> 00:37:41,839
good point okay so i'm using this

815
00:37:43,040 --> 00:37:48,880
operation without opening the right

816
00:37:49,040 --> 00:37:53,599
package and is that the name space

817
00:37:53,599 --> 00:37:57,920
so you actually have to

818
00:37:58,640 --> 00:38:01,680
open it here in order to

819
00:38:01,680 --> 00:38:04,320
use the library

820
00:38:04,320 --> 00:38:07,200
[Music]

821
00:38:07,200 --> 00:38:10,240
so that should do it

822
00:38:11,359 --> 00:38:14,480
the very last step

823
00:38:14,480 --> 00:38:16,839
is allowing us to put everything

824
00:38:16,839 --> 00:38:18,720
together

825
00:38:18,720 --> 00:38:22,240
so doing the iterations so it's

826
00:38:22,240 --> 00:38:25,599
exactly like what we

827
00:38:25,599 --> 00:38:29,440
set up on the left here you just do

828
00:38:29,440 --> 00:38:31,359
because oracle here is already

829
00:38:31,359 --> 00:38:34,480
introduced and this is the oracle

830
00:38:34,480 --> 00:38:38,320
you write or call

831
00:38:38,960 --> 00:38:40,260
register

832
00:38:40,260 --> 00:38:43,499
[Music]

833
00:38:44,960 --> 00:38:49,359
and then you have the

834
00:38:49,359 --> 00:38:53,440
hardamar and we had the hartimer

835
00:38:53,440 --> 00:38:56,320
transformation

836
00:38:56,640 --> 00:39:01,839
defined here

837
00:39:11,359 --> 00:39:16,319
then we have the conditional face flip

838
00:39:26,880 --> 00:39:30,640
last step is the the rest of the

839
00:39:30,640 --> 00:39:35,200
heart of my case so we do this again

840
00:39:37,680 --> 00:39:42,079
that should do

841
00:39:42,079 --> 00:39:45,599
so this is how we set up step by step

842
00:39:45,599 --> 00:39:48,880
and see that article here if you just

843
00:39:48,880 --> 00:39:52,720
have any oracle setup

844
00:39:52,720 --> 00:39:55,359
then you can interchangeably put any

845
00:39:55,359 --> 00:39:56,000
oracle that you

846
00:39:56,000 --> 00:40:00,000
want in this step and also we have

847
00:40:00,000 --> 00:40:02,480
no limitation of the number of qubits

848
00:40:02,480 --> 00:40:03,200
because and

849
00:40:03,200 --> 00:40:05,920
it can be any number so this is just a

850
00:40:05,920 --> 00:40:06,800
visual guide

851
00:40:06,800 --> 00:40:09,040
for a small number of qubits we can

852
00:40:09,040 --> 00:40:10,319
write we can draw

853
00:40:10,319 --> 00:40:14,240
a diagram but when we want to scale it

854
00:40:14,240 --> 00:40:17,839
it really needs the

855
00:40:17,839 --> 00:40:20,400
this kind of high level language for us

856
00:40:20,400 --> 00:40:21,599
to represent

857
00:40:21,599 --> 00:40:25,280
a scalable algorithm

858
00:40:25,280 --> 00:40:28,720
so yeah let's um i will let you finish

859
00:40:28,720 --> 00:40:30,480
the the ones that we skipped and the

860
00:40:30,480 --> 00:40:32,079
last bit

861
00:40:32,079 --> 00:40:34,960
and next class we should probably try

862
00:40:34,960 --> 00:40:36,400
something else

863
00:40:36,400 --> 00:40:39,760
around grover so

864
00:40:39,760 --> 00:40:43,040
frequently asked question all of the

865
00:40:43,040 --> 00:40:45,119
recording is

866
00:40:45,119 --> 00:40:47,440
is posted on hackaday on the project and

867
00:40:47,440 --> 00:40:49,680
also on on youtube

868
00:40:49,680 --> 00:40:52,640
and i have a few minutes i can look at

869
00:40:52,640 --> 00:40:55,040
in the chat if there's any question

870
00:40:55,040 --> 00:40:57,280
but if any question comes up during the

871
00:40:57,280 --> 00:40:58,400
week

872
00:40:58,400 --> 00:41:01,119
you can post on the hackaday project as

873
00:41:01,119 --> 00:41:01,839
well

874
00:41:01,839 --> 00:41:03,760
there is a comment section at the very

875
00:41:03,760 --> 00:41:05,599
bottom of the project you can post

876
00:41:05,599 --> 00:41:07,839
questions

