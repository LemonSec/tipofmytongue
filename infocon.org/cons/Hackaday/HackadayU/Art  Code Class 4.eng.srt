1
00:00:00,000 --> 00:00:09,280
[Music]

2
00:00:09,280 --> 00:00:10,719
welcome to the last week

3
00:00:10,719 --> 00:00:13,599
of our class i can't believe we're here

4
00:00:13,599 --> 00:00:15,440
so as promised

5
00:00:15,440 --> 00:00:19,119
this week we are going to focus on

6
00:00:19,119 --> 00:00:21,600
our data and apis so we looked at all

7
00:00:21,600 --> 00:00:22,960
these other amazing things we talked

8
00:00:22,960 --> 00:00:24,720
about color we talked about recursion we

9
00:00:24,720 --> 00:00:26,640
talked about natural movement that was a

10
00:00:26,640 --> 00:00:28,080
lot of like math we talked about sine

11
00:00:28,080 --> 00:00:29,279
and cosine

12
00:00:29,279 --> 00:00:32,719
and the purlin noise the concept of

13
00:00:32,719 --> 00:00:34,000
purlin noise

14
00:00:34,000 --> 00:00:35,520
and then this week we're going to dig

15
00:00:35,520 --> 00:00:37,360
deep into

16
00:00:37,360 --> 00:00:39,680
how you actually set up a data

17
00:00:39,680 --> 00:00:41,840
visualization that is intelligible

18
00:00:41,840 --> 00:00:43,600
and ethical because i think it's

19
00:00:43,600 --> 00:00:45,039
important to teach you that

20
00:00:45,039 --> 00:00:46,960
in teaching you the skills to create a

21
00:00:46,960 --> 00:00:48,879
data visualization right you shouldn't

22
00:00:48,879 --> 00:00:50,399
be able to wield power unless you know

23
00:00:50,399 --> 00:00:51,039
how

24
00:00:51,039 --> 00:00:54,160
to use it effectively and safely and

25
00:00:54,160 --> 00:00:54,879
then

26
00:00:54,879 --> 00:00:57,199
we're going to spend a large part of our

27
00:00:57,199 --> 00:00:58,320
class just talking about

28
00:00:58,320 --> 00:01:01,359
how to actually utilize an api we're

29
00:01:01,359 --> 00:01:02,320
going to focus in

30
00:01:02,320 --> 00:01:05,438
just on public apis today so

31
00:01:05,438 --> 00:01:06,960
all of this stuff would be applicable if

32
00:01:06,960 --> 00:01:08,640
you wanted to use an api where you need

33
00:01:08,640 --> 00:01:10,479
a login and a key

34
00:01:10,479 --> 00:01:12,240
i'll address that later in the lecture

35
00:01:12,240 --> 00:01:13,600
as well but

36
00:01:13,600 --> 00:01:15,920
just for the sake of keeping things

37
00:01:15,920 --> 00:01:17,759
simple and making sure it's accessible

38
00:01:17,759 --> 00:01:19,439
for everyone we're going to focus in on

39
00:01:19,439 --> 00:01:22,960
just public apis so

40
00:01:22,960 --> 00:01:24,799
of course let's get into a review of

41
00:01:24,799 --> 00:01:26,080
what we did last time

42
00:01:26,080 --> 00:01:29,360
which is trigonometry and purlin noise

43
00:01:29,360 --> 00:01:30,799
and then gestalt psychology so we're

44
00:01:30,799 --> 00:01:32,159
just going to go on a quick little tour

45
00:01:32,159 --> 00:01:33,759
of the things we did before

46
00:01:33,759 --> 00:01:35,040
just because it's really important for

47
00:01:35,040 --> 00:01:36,320
the ways that your brain integrates

48
00:01:36,320 --> 00:01:37,200
knowledge and so

49
00:01:37,200 --> 00:01:38,840
we want to revisit before we move

50
00:01:38,840 --> 00:01:40,799
forward

51
00:01:40,799 --> 00:01:43,119
we talked about in gestalt psychology

52
00:01:43,119 --> 00:01:44,880
how there's a framework and then there

53
00:01:44,880 --> 00:01:45,920
are principles

54
00:01:45,920 --> 00:01:47,680
we talked about how each of these things

55
00:01:47,680 --> 00:01:49,360
in the framework basically amount to

56
00:01:49,360 --> 00:01:52,479
how your brain interprets groupings of

57
00:01:52,479 --> 00:01:55,439
objects or representations anything that

58
00:01:55,439 --> 00:01:56,640
you are perceiving

59
00:01:56,640 --> 00:01:59,920
in your world and um i don't really have

60
00:01:59,920 --> 00:02:01,439
to go through all of these again as i

61
00:02:01,439 --> 00:02:02,479
mentioned last time

62
00:02:02,479 --> 00:02:03,840
these are things you don't necessarily

63
00:02:03,840 --> 00:02:05,280
need to know the words for but you need

64
00:02:05,280 --> 00:02:08,318
to know the concept behind them

65
00:02:08,318 --> 00:02:10,399
then all of these things work their way

66
00:02:10,399 --> 00:02:11,920
into the grouping principles the

67
00:02:11,920 --> 00:02:13,440
grouping principles are incredibly

68
00:02:13,440 --> 00:02:14,160
important and

69
00:02:14,160 --> 00:02:16,720
share a lot with our composition our

70
00:02:16,720 --> 00:02:18,560
composition having come

71
00:02:18,560 --> 00:02:21,040
many hundreds of years before gestalt

72
00:02:21,040 --> 00:02:23,120
psychology which occurred mostly in the

73
00:02:23,120 --> 00:02:25,360
late 1800s early 1900s

74
00:02:25,360 --> 00:02:27,920
but these things kind of wrap their way

75
00:02:27,920 --> 00:02:29,200
around each other right

76
00:02:29,200 --> 00:02:31,519
what you perceive to be beautiful or

77
00:02:31,519 --> 00:02:32,400
well grouped

78
00:02:32,400 --> 00:02:33,760
has something to do with the way your

79
00:02:33,760 --> 00:02:36,400
brain perceives groupings and

80
00:02:36,400 --> 00:02:38,720
we looked at the ways that your brain

81
00:02:38,720 --> 00:02:40,879
decides what is a figure and what is a

82
00:02:40,879 --> 00:02:41,920
background

83
00:02:41,920 --> 00:02:44,000
we talked about how your brain perceives

84
00:02:44,000 --> 00:02:46,000
groupings of objects based on how close

85
00:02:46,000 --> 00:02:47,040
they are together

86
00:02:47,040 --> 00:02:49,120
how much they look alike and then we

87
00:02:49,120 --> 00:02:51,200
also talked about this closure which is

88
00:02:51,200 --> 00:02:52,879
the concept that your brain will fill in

89
00:02:52,879 --> 00:02:55,120
gaps even if things are missing and so

90
00:02:55,120 --> 00:02:56,959
as an artist you can use this to your

91
00:02:56,959 --> 00:02:58,319
advantage by

92
00:02:58,319 --> 00:03:01,519
maybe not showing all of a figure or

93
00:03:01,519 --> 00:03:02,959
showing a figure that's broken up in

94
00:03:02,959 --> 00:03:03,760
some way

95
00:03:03,760 --> 00:03:06,159
to make your viewer look at it for more

96
00:03:06,159 --> 00:03:08,560
or ingest it for longer

97
00:03:08,560 --> 00:03:10,400
while still understanding the concept of

98
00:03:10,400 --> 00:03:12,080
what you're trying to do

99
00:03:12,080 --> 00:03:14,159
so just adding visual visual interest to

100
00:03:14,159 --> 00:03:15,440
your pieces

101
00:03:15,440 --> 00:03:16,720
the second half of these grouping

102
00:03:16,720 --> 00:03:19,120
principles look a lot at the way things

103
00:03:19,120 --> 00:03:20,319
move and the way that we

104
00:03:20,319 --> 00:03:22,879
interpret movement as a part of a group

105
00:03:22,879 --> 00:03:24,400
this would be great for

106
00:03:24,400 --> 00:03:26,720
looking at say like a group of dancers

107
00:03:26,720 --> 00:03:27,599
symmetry

108
00:03:27,599 --> 00:03:29,599
is the idea that if two people on

109
00:03:29,599 --> 00:03:31,440
opposite sides of the stage jump at the

110
00:03:31,440 --> 00:03:32,319
same time

111
00:03:32,319 --> 00:03:33,920
you are going to associate them as a

112
00:03:33,920 --> 00:03:35,360
part of the same group

113
00:03:35,360 --> 00:03:37,840
and this does often get used in dance or

114
00:03:37,840 --> 00:03:40,159
in motion to tell stories

115
00:03:40,159 --> 00:03:42,480
and then the law of common fate being

116
00:03:42,480 --> 00:03:44,239
that everything that's moving in the

117
00:03:44,239 --> 00:03:45,920
same direction the same speed will be

118
00:03:45,920 --> 00:03:47,920
interpreted as a part of a group

119
00:03:47,920 --> 00:03:50,400
so like birds flying in the sky you see

120
00:03:50,400 --> 00:03:52,159
a flock of birds you associate them with

121
00:03:52,159 --> 00:03:53,439
one another because they're all moving

122
00:03:53,439 --> 00:03:55,120
in the same direction

123
00:03:55,120 --> 00:03:56,879
we talked about continuity which in my

124
00:03:56,879 --> 00:03:58,720
opinion has a lot in common with the law

125
00:03:58,720 --> 00:03:59,680
of closure

126
00:03:59,680 --> 00:04:02,159
the idea that something will continue

127
00:04:02,159 --> 00:04:03,760
even if it's outside of the field of

128
00:04:03,760 --> 00:04:05,280
view so the example that we saw there

129
00:04:05,280 --> 00:04:07,439
was those two keys that were overlapping

130
00:04:07,439 --> 00:04:09,439
and your brain will assume that the key

131
00:04:09,439 --> 00:04:11,120
that is overlapped

132
00:04:11,120 --> 00:04:13,920
is still continuous behind the key even

133
00:04:13,920 --> 00:04:14,480
though you

134
00:04:14,480 --> 00:04:16,238
don't know for sure it's just an

135
00:04:16,238 --> 00:04:17,759
assumption being made

136
00:04:17,759 --> 00:04:19,440
and then the law of past experience so

137
00:04:19,440 --> 00:04:21,120
the things that you see you will assume

138
00:04:21,120 --> 00:04:22,720
they will happen again

139
00:04:22,720 --> 00:04:24,560
you can definitely exploit all of these

140
00:04:24,560 --> 00:04:26,320
principles and many people do

141
00:04:26,320 --> 00:04:28,639
magicians i think most of all especially

142
00:04:28,639 --> 00:04:30,479
utilizing the law of continuity

143
00:04:30,479 --> 00:04:32,880
and the law of past experience to play

144
00:04:32,880 --> 00:04:34,000
with your perception

145
00:04:34,000 --> 00:04:37,680
in a way that is interesting or fun

146
00:04:37,680 --> 00:04:40,000
then we talked about cosine and sine

147
00:04:40,000 --> 00:04:42,479
being a form of regular motion

148
00:04:42,479 --> 00:04:44,800
that oscillates between one and negative

149
00:04:44,800 --> 00:04:46,000
one of course

150
00:04:46,000 --> 00:04:48,960
sine and cosine are offset because of

151
00:04:48,960 --> 00:04:51,199
the concept of trigonometry like the way

152
00:04:51,199 --> 00:04:52,560
the math is made

153
00:04:52,560 --> 00:04:56,000
they're going to be offset by 90 degrees

154
00:04:56,000 --> 00:05:00,320
or by pi over two depending on whether

155
00:05:00,320 --> 00:05:01,600
you're in a radial system

156
00:05:01,600 --> 00:05:04,320
or in a degree system and you see here

157
00:05:04,320 --> 00:05:04,639
on

158
00:05:04,639 --> 00:05:07,520
our screen how that actually plays out

159
00:05:07,520 --> 00:05:08,639
both from the

160
00:05:08,639 --> 00:05:11,039
side of the unit circle looking at the

161
00:05:11,039 --> 00:05:11,919
triangle

162
00:05:11,919 --> 00:05:13,840
and how that translates itself into the

163
00:05:13,840 --> 00:05:15,120
oscillating graph

164
00:05:15,120 --> 00:05:16,720
so we talked about the use of kind of

165
00:05:16,720 --> 00:05:18,639
sine and cosine to

166
00:05:18,639 --> 00:05:21,600
represent motion in code that likes to

167
00:05:21,600 --> 00:05:21,919
go

168
00:05:21,919 --> 00:05:24,400
from slow to fast to slow that is a

169
00:05:24,400 --> 00:05:26,000
regular oscillating pattern

170
00:05:26,000 --> 00:05:28,320
so the examples that i gave were like a

171
00:05:28,320 --> 00:05:29,919
bird flapping its wings

172
00:05:29,919 --> 00:05:32,080
that is very very easy to model with a

173
00:05:32,080 --> 00:05:34,960
sine or a cosine

174
00:05:34,960 --> 00:05:37,120
then we talked about purlin noise the

175
00:05:37,120 --> 00:05:38,960
concept that

176
00:05:38,960 --> 00:05:41,919
there's an irregular motion or irregular

177
00:05:41,919 --> 00:05:42,720
pattern

178
00:05:42,720 --> 00:05:45,039
that still feels natural in some way so

179
00:05:45,039 --> 00:05:46,880
not completely random

180
00:05:46,880 --> 00:05:49,440
this is definitely in contrast to pure

181
00:05:49,440 --> 00:05:52,160
random evenly distributed numbers purlin

182
00:05:52,160 --> 00:05:53,840
noise likes to

183
00:05:53,840 --> 00:05:56,720
cluster together all in one spot so when

184
00:05:56,720 --> 00:05:58,240
you graph it out like we saw

185
00:05:58,240 --> 00:06:02,160
you see gradual movement

186
00:06:02,160 --> 00:06:04,560
oscillatory movement but movement that

187
00:06:04,560 --> 00:06:05,680
is irregular

188
00:06:05,680 --> 00:06:08,560
in some way some of the examples that i

189
00:06:08,560 --> 00:06:10,400
gave for perlin noise although they are

190
00:06:10,400 --> 00:06:12,240
definitely not inclusive of everything

191
00:06:12,240 --> 00:06:13,520
you can do with it

192
00:06:13,520 --> 00:06:16,720
involve walking or eating or some kind

193
00:06:16,720 --> 00:06:18,639
of

194
00:06:18,639 --> 00:06:20,880
mammalian or animal behavior that is

195
00:06:20,880 --> 00:06:22,880
oscillatory but not regular

196
00:06:22,880 --> 00:06:24,960
it's also just really great for making

197
00:06:24,960 --> 00:06:27,360
beautiful graphics that feel natural

198
00:06:27,360 --> 00:06:30,319
and human designed but are mathematical

199
00:06:30,319 --> 00:06:34,479
and generative

200
00:06:34,479 --> 00:06:36,720
getting into it straight away we're

201
00:06:36,720 --> 00:06:37,759
going to start talking about data

202
00:06:37,759 --> 00:06:39,280
visualization

203
00:06:39,280 --> 00:06:42,240
there are a handful of types of database

204
00:06:42,240 --> 00:06:42,800
i

205
00:06:42,800 --> 00:06:44,240
have a background in science that's

206
00:06:44,240 --> 00:06:46,160
where i was originally trained so it's

207
00:06:46,160 --> 00:06:47,199
very hard for me

208
00:06:47,199 --> 00:06:51,039
not to get super into data visualization

209
00:06:51,039 --> 00:06:52,960
we're going to skim across the top of it

210
00:06:52,960 --> 00:06:54,400
these are some important things i think

211
00:06:54,400 --> 00:06:56,080
that you need to know about it before we

212
00:06:56,080 --> 00:06:57,599
start doing it

213
00:06:57,599 --> 00:07:00,639
there are four types of graph

214
00:07:00,639 --> 00:07:02,160
as with any rule there are things that

215
00:07:02,160 --> 00:07:03,919
break rules but in general

216
00:07:03,919 --> 00:07:06,319
we're looking at comparison graphs

217
00:07:06,319 --> 00:07:07,840
composition graphs

218
00:07:07,840 --> 00:07:10,000
relational graphs and distribution

219
00:07:10,000 --> 00:07:10,880
graphs

220
00:07:10,880 --> 00:07:13,440
the idea here is that comparison is

221
00:07:13,440 --> 00:07:15,520
looking at two different values or two

222
00:07:15,520 --> 00:07:17,440
different systems and comparing them

223
00:07:17,440 --> 00:07:19,680
as the name would suggest composition

224
00:07:19,680 --> 00:07:20,479
would be

225
00:07:20,479 --> 00:07:23,840
a pie graph as a great example how much

226
00:07:23,840 --> 00:07:26,319
of a thing is made up of individual

227
00:07:26,319 --> 00:07:27,680
elements

228
00:07:27,680 --> 00:07:30,080
the relational is a little tougher for

229
00:07:30,080 --> 00:07:31,919
me even to wrap my head around

230
00:07:31,919 --> 00:07:35,599
the idea is what is the correlation

231
00:07:35,599 --> 00:07:38,479
between two things like xy graph

232
00:07:38,479 --> 00:07:41,840
if i move my phone from one location to

233
00:07:41,840 --> 00:07:42,560
another

234
00:07:42,560 --> 00:07:44,400
do i send more text messages so what's

235
00:07:44,400 --> 00:07:45,840
the relationship between these two

236
00:07:45,840 --> 00:07:46,960
variables

237
00:07:46,960 --> 00:07:49,440
and then last the distribution would be

238
00:07:49,440 --> 00:07:50,319
a map

239
00:07:50,319 --> 00:07:53,759
of any space or

240
00:07:53,759 --> 00:07:56,800
even an online space seeing how people

241
00:07:56,800 --> 00:07:58,639
or anything else interacts with that

242
00:07:58,639 --> 00:08:00,160
thing so a great example would be

243
00:08:00,160 --> 00:08:01,759
where are there snowstorms right now in

244
00:08:01,759 --> 00:08:04,479
the united states

245
00:08:05,199 --> 00:08:07,840
in data visualization we got to start

246
00:08:07,840 --> 00:08:08,720
with the math

247
00:08:08,720 --> 00:08:11,680
the math being there are dependent and

248
00:08:11,680 --> 00:08:14,080
independent variables

249
00:08:14,080 --> 00:08:16,800
in math it is standard to graph your

250
00:08:16,800 --> 00:08:19,120
independent variable on the x-axis

251
00:08:19,120 --> 00:08:21,039
and your dependent variable on the

252
00:08:21,039 --> 00:08:24,160
y-axis the idea being as you move from

253
00:08:24,160 --> 00:08:25,599
left to right

254
00:08:25,599 --> 00:08:27,360
you see the change in the dependent

255
00:08:27,360 --> 00:08:29,280
variable as the independent variable

256
00:08:29,280 --> 00:08:31,599
increases so the standard example for

257
00:08:31,599 --> 00:08:32,399
this if you

258
00:08:32,399 --> 00:08:34,559
ever need help in your brain figuring

259
00:08:34,559 --> 00:08:36,640
out which goes on which axis

260
00:08:36,640 --> 00:08:40,320
time is always always always

261
00:08:40,320 --> 00:08:42,640
the independent variable and it is

262
00:08:42,640 --> 00:08:44,640
always graphed on the x-axis

263
00:08:44,640 --> 00:08:48,160
so think in your head what axis is time

264
00:08:48,160 --> 00:08:49,360
graphed on

265
00:08:49,360 --> 00:08:50,959
okay i need to put my independent

266
00:08:50,959 --> 00:08:53,360
variable on the x-axis

267
00:08:53,360 --> 00:08:56,399
of course there's a third option which

268
00:08:56,399 --> 00:08:58,080
would be the z-axis

269
00:08:58,080 --> 00:08:59,839
so that's moving into the third

270
00:08:59,839 --> 00:09:01,680
dimension at least

271
00:09:01,680 --> 00:09:03,920
in theory when you're graphing something

272
00:09:03,920 --> 00:09:05,360
on the z-axis the way that you would

273
00:09:05,360 --> 00:09:06,720
represent something being

274
00:09:06,720 --> 00:09:09,040
farther back versus closer to you would

275
00:09:09,040 --> 00:09:10,720
be the size of that object

276
00:09:10,720 --> 00:09:12,720
this has to do with linear perspective

277
00:09:12,720 --> 00:09:14,560
so objects that are farther away

278
00:09:14,560 --> 00:09:17,120
are perceived as smaller and that's also

279
00:09:17,120 --> 00:09:17,839
true when you're

280
00:09:17,839 --> 00:09:20,240
graphing in three dimensions the idea

281
00:09:20,240 --> 00:09:22,399
here of course being that the

282
00:09:22,399 --> 00:09:25,440
z-axis and the x-axis can either be

283
00:09:25,440 --> 00:09:27,920
two different independent variables or

284
00:09:27,920 --> 00:09:28,959
you could be graphing

285
00:09:28,959 --> 00:09:31,120
two dependent variables and one

286
00:09:31,120 --> 00:09:36,800
independent variable on your x-axis

287
00:09:36,800 --> 00:09:39,360
there are lots of ways to think about

288
00:09:39,360 --> 00:09:40,800
graphs but this is the one that works

289
00:09:40,800 --> 00:09:42,320
best for my brain

290
00:09:42,320 --> 00:09:45,040
definitely don't hold me to this you

291
00:09:45,040 --> 00:09:46,800
know there are many other ways to look

292
00:09:46,800 --> 00:09:47,839
at graphing

293
00:09:47,839 --> 00:09:49,360
but if i'm looking to graph something

294
00:09:49,360 --> 00:09:51,120
i'm thinking about how many dimensions i

295
00:09:51,120 --> 00:09:52,000
should graph it in

296
00:09:52,000 --> 00:09:54,240
and so i'm going to pass that on to you

297
00:09:54,240 --> 00:09:56,160
when you graph something you can graph

298
00:09:56,160 --> 00:09:56,399
it

299
00:09:56,399 --> 00:09:58,720
in as many as four dimensions if you

300
00:09:58,720 --> 00:10:00,320
think about time being our fourth

301
00:10:00,320 --> 00:10:01,680
dimension

302
00:10:01,680 --> 00:10:04,959
one dimensional would be a single

303
00:10:04,959 --> 00:10:07,360
valued category over a fixed amount of

304
00:10:07,360 --> 00:10:09,120
time so you don't even have an

305
00:10:09,120 --> 00:10:10,959
independent and a dependent variable

306
00:10:10,959 --> 00:10:11,519
usually

307
00:10:11,519 --> 00:10:13,200
usually you're looking at a single time

308
00:10:13,200 --> 00:10:14,640
point or the time

309
00:10:14,640 --> 00:10:17,279
doesn't matter to you at all so looking

310
00:10:17,279 --> 00:10:18,720
at hash marks

311
00:10:18,720 --> 00:10:20,800
is a great example of a one-dimensional

312
00:10:20,800 --> 00:10:22,399
graph you're just counting

313
00:10:22,399 --> 00:10:25,920
say how many pieces of pizza i ate today

314
00:10:25,920 --> 00:10:29,760
obviously 13. um and

315
00:10:29,760 --> 00:10:32,880
the time limiter is outside of the graph

316
00:10:32,880 --> 00:10:33,519
space

317
00:10:33,519 --> 00:10:35,680
today therefore we're not graphing

318
00:10:35,680 --> 00:10:38,399
overtime we're graphing at a time

319
00:10:38,399 --> 00:10:41,600
you can combine the independent and

320
00:10:41,600 --> 00:10:43,120
dependent variable and then look at

321
00:10:43,120 --> 00:10:45,200
things in two dimensions so that's an x

322
00:10:45,200 --> 00:10:48,079
y axis situation just like we saw before

323
00:10:48,079 --> 00:10:50,079
one of my favorite representations that

324
00:10:50,079 --> 00:10:51,760
is two-dimensional is what's called a

325
00:10:51,760 --> 00:10:53,600
spider plot or a radial plot you see

326
00:10:53,600 --> 00:10:54,560
that here

327
00:10:54,560 --> 00:10:57,120
so here we're looking at the

328
00:10:57,120 --> 00:10:58,720
relationship between

329
00:10:58,720 --> 00:11:01,760
different factors over

330
00:11:01,760 --> 00:11:05,360
the same scale so the way that we're

331
00:11:05,360 --> 00:11:06,480
comparing these is saying

332
00:11:06,480 --> 00:11:09,839
everything is between 10 and 3 that's

333
00:11:09,839 --> 00:11:11,760
very small there but the units here are

334
00:11:11,760 --> 00:11:12,160
10

335
00:11:12,160 --> 00:11:15,120
on the outside and three on the inside

336
00:11:15,120 --> 00:11:16,959
and then they're graphing each of the

337
00:11:16,959 --> 00:11:18,079
indicators

338
00:11:18,079 --> 00:11:21,200
on that radial plane so even still this

339
00:11:21,200 --> 00:11:22,880
is two dimensions because we're looking

340
00:11:22,880 --> 00:11:24,399
at the relationship between

341
00:11:24,399 --> 00:11:27,279
the identity of the thing or the axis of

342
00:11:27,279 --> 00:11:29,440
these many radial axes

343
00:11:29,440 --> 00:11:33,279
in relation to other things on the graph

344
00:11:33,279 --> 00:11:34,880
and then last we have a

345
00:11:34,880 --> 00:11:36,480
three-dimensional plot

346
00:11:36,480 --> 00:11:39,519
so that's looking at two variables that

347
00:11:39,519 --> 00:11:39,760
are

348
00:11:39,760 --> 00:11:42,800
dependent and one independent or two

349
00:11:42,800 --> 00:11:44,560
independent variables and a single

350
00:11:44,560 --> 00:11:46,320
dependent variable

351
00:11:46,320 --> 00:11:47,680
this is a great example of a

352
00:11:47,680 --> 00:11:49,360
three-dimensional graph even though it's

353
00:11:49,360 --> 00:11:50,880
graphed in two dimensions

354
00:11:50,880 --> 00:11:54,800
we're looking at composition over time

355
00:11:54,800 --> 00:11:57,519
so we see here the composition of two

356
00:11:57,519 --> 00:11:59,839
different materials that we're comparing

357
00:11:59,839 --> 00:12:02,480
on a time scale which is why we're

358
00:12:02,480 --> 00:12:04,399
looking at it in three dimensions we see

359
00:12:04,399 --> 00:12:06,560
two dependent variables and a single

360
00:12:06,560 --> 00:12:09,200
independent variable

361
00:12:09,200 --> 00:12:12,320
of course you can always do that over

362
00:12:12,320 --> 00:12:15,120
a time value so looking at the change of

363
00:12:15,120 --> 00:12:16,560
something over time

364
00:12:16,560 --> 00:12:18,639
and then using your x-axis potentially

365
00:12:18,639 --> 00:12:20,000
for something else

366
00:12:20,000 --> 00:12:21,760
and then that would allow you to go into

367
00:12:21,760 --> 00:12:24,160
a fourth dimension of data and i do

368
00:12:24,160 --> 00:12:27,920
have some examples later on i think

369
00:12:28,240 --> 00:12:31,600
so we're looking at

370
00:12:32,079 --> 00:12:33,920
misleading practices in data

371
00:12:33,920 --> 00:12:36,240
visualization we've talked about

372
00:12:36,240 --> 00:12:39,200
different key characteristics of any

373
00:12:39,200 --> 00:12:40,880
data visualization

374
00:12:40,880 --> 00:12:42,639
and now we're going to kind of switch

375
00:12:42,639 --> 00:12:44,959
over into the application side

376
00:12:44,959 --> 00:12:46,560
what are things that people do to

377
00:12:46,560 --> 00:12:48,240
mislead using data

378
00:12:48,240 --> 00:12:50,839
and how can you avoid making those

379
00:12:50,839 --> 00:12:52,079
mistakes

380
00:12:52,079 --> 00:12:55,440
these are i would say like the big four

381
00:12:55,440 --> 00:12:57,680
things that people do of course there

382
00:12:57,680 --> 00:12:58,639
are many more

383
00:12:58,639 --> 00:13:01,440
but if you are auditing yourself on

384
00:13:01,440 --> 00:13:03,519
these four principles you're probably

385
00:13:03,519 --> 00:13:05,680
doing okay

386
00:13:05,680 --> 00:13:08,880
a really easy mistake to make is area

387
00:13:08,880 --> 00:13:09,440
versus

388
00:13:09,440 --> 00:13:12,560
radius the idea being that we

389
00:13:12,560 --> 00:13:15,839
perceive changes on the radius

390
00:13:15,839 --> 00:13:18,399
scale or sorry on the area scale but

391
00:13:18,399 --> 00:13:20,399
people can change the radius to make the

392
00:13:20,399 --> 00:13:21,440
differences

393
00:13:21,440 --> 00:13:24,639
seem much larger between two concepts so

394
00:13:24,639 --> 00:13:27,440
here's an example i've got on the left

395
00:13:27,440 --> 00:13:29,040
hand side the quantity is radius the

396
00:13:29,040 --> 00:13:31,279
right hand side quantity is area

397
00:13:31,279 --> 00:13:33,120
if you look at the numbers here it says

398
00:13:33,120 --> 00:13:34,480
one is the smaller dot

399
00:13:34,480 --> 00:13:36,639
and one and a half is the larger dot but

400
00:13:36,639 --> 00:13:38,560
this dot does not look one and a half

401
00:13:38,560 --> 00:13:39,680
times larger

402
00:13:39,680 --> 00:13:43,120
because the area scales at square

403
00:13:43,120 --> 00:13:46,160
instead of scaling linearly so

404
00:13:46,160 --> 00:13:50,160
the larger the larger differences will

405
00:13:50,160 --> 00:13:51,360
be

406
00:13:51,360 --> 00:13:54,480
out of proportion perceptually whereas

407
00:13:54,480 --> 00:13:55,760
when you're looking at them

408
00:13:55,760 --> 00:13:59,279
as the area they seem about right

409
00:13:59,279 --> 00:14:02,480
one and a half to one in an area

410
00:14:02,480 --> 00:14:04,639
feels right so always being aware when

411
00:14:04,639 --> 00:14:06,399
you're creating your visualizations to

412
00:14:06,399 --> 00:14:07,120
be working

413
00:14:07,120 --> 00:14:10,720
as area not as radius

414
00:14:10,720 --> 00:14:13,120
it's a common mistake that misleads

415
00:14:13,120 --> 00:14:14,800
people

416
00:14:14,800 --> 00:14:16,480
making sure you have the appropriate

417
00:14:16,480 --> 00:14:19,120
axis is very important and something i

418
00:14:19,120 --> 00:14:20,320
think sometimes

419
00:14:20,320 --> 00:14:22,720
can happen in art on accident because

420
00:14:22,720 --> 00:14:24,000
you want to

421
00:14:24,000 --> 00:14:27,519
exaggerate the changes so having an

422
00:14:27,519 --> 00:14:29,440
inappropriate access can be done

423
00:14:29,440 --> 00:14:32,560
to increase the amount of contrast

424
00:14:32,560 --> 00:14:35,680
between two different data points and

425
00:14:35,680 --> 00:14:37,440
frankly if that's what you're doing for

426
00:14:37,440 --> 00:14:39,199
your visualization that's

427
00:14:39,199 --> 00:14:41,360
fine but you need to be telling your

428
00:14:41,360 --> 00:14:43,040
audience what you're doing

429
00:14:43,040 --> 00:14:45,920
so doing a switcheroo on the axis

430
00:14:45,920 --> 00:14:47,839
especially in a visualization

431
00:14:47,839 --> 00:14:49,519
where it's a little more already and you

432
00:14:49,519 --> 00:14:51,519
may not be labeling an axis

433
00:14:51,519 --> 00:14:53,839
it is vitally important that you tell

434
00:14:53,839 --> 00:14:54,639
people

435
00:14:54,639 --> 00:14:57,760
that you are not scaling to zero so what

436
00:14:57,760 --> 00:14:58,639
i mean by that

437
00:14:58,639 --> 00:15:00,880
is for example here you see they're

438
00:15:00,880 --> 00:15:02,399
inverting the y-axis

439
00:15:02,399 --> 00:15:05,760
so we have this which would be like the

440
00:15:05,760 --> 00:15:08,160
appropriate way to draw the graph

441
00:15:08,160 --> 00:15:11,199
or actually sorry the one let me wrap my

442
00:15:11,199 --> 00:15:12,880
head around this so we've got zero to

443
00:15:12,880 --> 00:15:13,600
ten

444
00:15:13,600 --> 00:15:15,600
and then we've got ten to zero so we're

445
00:15:15,600 --> 00:15:17,920
looking at the negatives

446
00:15:17,920 --> 00:15:21,519
below below the x-axis so we're looking

447
00:15:21,519 --> 00:15:22,480
at

448
00:15:22,480 --> 00:15:24,480
negative two negative four negative six

449
00:15:24,480 --> 00:15:25,680
or you can imagine it the other way

450
00:15:25,680 --> 00:15:26,000
around

451
00:15:26,000 --> 00:15:26,959
essentially what they're doing is

452
00:15:26,959 --> 00:15:28,639
they're flipping it to the other side of

453
00:15:28,639 --> 00:15:30,000
the x-axis

454
00:15:30,000 --> 00:15:31,839
and that makes it look like things are

455
00:15:31,839 --> 00:15:33,680
going up when they're going down or vice

456
00:15:33,680 --> 00:15:35,440
versa so always making sure that you

457
00:15:35,440 --> 00:15:37,680
have the appropriate y-axis

458
00:15:37,680 --> 00:15:39,040
the other way that you can mess with the

459
00:15:39,040 --> 00:15:41,199
y-axis as i previously said would be to

460
00:15:41,199 --> 00:15:41,600
bump

461
00:15:41,600 --> 00:15:45,600
up and skip zero so here i could

462
00:15:45,600 --> 00:15:49,279
move the first value up to one

463
00:15:49,279 --> 00:15:51,920
and then we would see this change as

464
00:15:51,920 --> 00:15:53,279
being more dramatic than it

465
00:15:53,279 --> 00:15:56,000
actually is so being aware of your scale

466
00:15:56,000 --> 00:15:57,040
and being aware

467
00:15:57,040 --> 00:15:59,120
that you're either going to zero zero or

468
00:15:59,120 --> 00:16:00,639
you're disclosing to people that you are

469
00:16:00,639 --> 00:16:03,600
not going to zero on your y-axis

470
00:16:03,600 --> 00:16:06,880
then we have omitted data again

471
00:16:06,880 --> 00:16:08,880
if you are omitting data because you

472
00:16:08,880 --> 00:16:10,320
think it makes for a more beautiful

473
00:16:10,320 --> 00:16:11,680
visualization

474
00:16:11,680 --> 00:16:13,759
and you think it is a more poignant way

475
00:16:13,759 --> 00:16:15,199
to make your point

476
00:16:15,199 --> 00:16:17,680
that's okay as long as you are making

477
00:16:17,680 --> 00:16:19,600
that clear to people the reasoning why

478
00:16:19,600 --> 00:16:20,639
you did that

479
00:16:20,639 --> 00:16:23,839
and how you actually omitted data this

480
00:16:23,839 --> 00:16:24,320
is

481
00:16:24,320 --> 00:16:26,639
really really gnarly when you're getting

482
00:16:26,639 --> 00:16:28,639
into medical science or

483
00:16:28,639 --> 00:16:31,519
um chemistry for example omitting data

484
00:16:31,519 --> 00:16:33,600
can really change the way a scene looks

485
00:16:33,600 --> 00:16:33,920
so

486
00:16:33,920 --> 00:16:37,440
say like i sped up and slowed down and

487
00:16:37,440 --> 00:16:39,279
sped up and slowed down my car

488
00:16:39,279 --> 00:16:40,959
and i was measuring the mileage that i

489
00:16:40,959 --> 00:16:43,120
moved if i omitted the times that i

490
00:16:43,120 --> 00:16:43,680
slowed

491
00:16:43,680 --> 00:16:45,680
down it would look like i was moving at

492
00:16:45,680 --> 00:16:47,920
a constant rate the entire time

493
00:16:47,920 --> 00:16:49,120
that wouldn't be an accurate

494
00:16:49,120 --> 00:16:51,120
representation of the way i was moving

495
00:16:51,120 --> 00:16:52,079
through space

496
00:16:52,079 --> 00:16:54,560
so always asking yourself am i telling

497
00:16:54,560 --> 00:16:55,279
the full

498
00:16:55,279 --> 00:16:57,920
story do i have all the data if i'm

499
00:16:57,920 --> 00:16:58,800
omitting data

500
00:16:58,800 --> 00:17:00,720
or changing my access i need to have a

501
00:17:00,720 --> 00:17:02,079
real reason why and i need to be

502
00:17:02,079 --> 00:17:04,079
disclosing that to the audience of my

503
00:17:04,079 --> 00:17:07,359
work last of course is correlation

504
00:17:07,359 --> 00:17:08,799
versus causation

505
00:17:08,799 --> 00:17:12,720
this is often taught by saying

506
00:17:12,720 --> 00:17:15,280
murders and ice cream sales both spike

507
00:17:15,280 --> 00:17:16,319
in the summer time

508
00:17:16,319 --> 00:17:18,559
why does that happen drownings and ice

509
00:17:18,559 --> 00:17:19,760
cream sales

510
00:17:19,760 --> 00:17:21,119
both spike in the summertime why does

511
00:17:21,119 --> 00:17:23,119
that happen is it that ice cream is

512
00:17:23,119 --> 00:17:24,640
causing people to drown

513
00:17:24,640 --> 00:17:26,400
the obvious answer is no people are

514
00:17:26,400 --> 00:17:28,079
spending more time at the pool and also

515
00:17:28,079 --> 00:17:29,600
eating more ice cream when the weather

516
00:17:29,600 --> 00:17:30,559
is warmer

517
00:17:30,559 --> 00:17:32,480
those things are not related to each

518
00:17:32,480 --> 00:17:34,080
other but they are related to

519
00:17:34,080 --> 00:17:37,679
a third data point so

520
00:17:37,679 --> 00:17:39,840
i think my recommendation here for you

521
00:17:39,840 --> 00:17:41,280
as someone who's building data

522
00:17:41,280 --> 00:17:42,880
visualizations is to be

523
00:17:42,880 --> 00:17:46,080
aware of the tendency to conflate

524
00:17:46,080 --> 00:17:49,120
correlation with causation and to

525
00:17:49,120 --> 00:17:51,840
not tell your audience the conclusions

526
00:17:51,840 --> 00:17:53,679
they should be drawing from your work

527
00:17:53,679 --> 00:17:55,520
so you can create a visualization with a

528
00:17:55,520 --> 00:17:57,600
goal in mind and you can spread that

529
00:17:57,600 --> 00:17:58,880
visualization

530
00:17:58,880 --> 00:18:00,400
with all of the important

531
00:18:00,400 --> 00:18:02,559
contextualizing information

532
00:18:02,559 --> 00:18:04,559
but it is not your job as the person

533
00:18:04,559 --> 00:18:05,919
creating the data

534
00:18:05,919 --> 00:18:09,039
to draw conclusions for your audience

535
00:18:09,039 --> 00:18:11,600
unless you have that skill set or that's

536
00:18:11,600 --> 00:18:13,039
something you're working on

537
00:18:13,039 --> 00:18:15,840
it's vital to remember that two things

538
00:18:15,840 --> 00:18:17,600
that look like they're related

539
00:18:17,600 --> 00:18:19,760
may be related because there's some part

540
00:18:19,760 --> 00:18:21,520
of the picture that you are not seeing

541
00:18:21,520 --> 00:18:23,039
so always being humble in the way that

542
00:18:23,039 --> 00:18:25,520
we make our work

543
00:18:25,520 --> 00:18:27,600
so oh great i have one here here's an

544
00:18:27,600 --> 00:18:29,760
example of a y-axis

545
00:18:29,760 --> 00:18:32,240
that is not scaled to zero and you can

546
00:18:32,240 --> 00:18:34,799
see how much more intense these changes

547
00:18:34,799 --> 00:18:35,520
look

548
00:18:35,520 --> 00:18:38,880
it would be vital for you to make clear

549
00:18:38,880 --> 00:18:41,039
that this y-axis is not scaled to zero

550
00:18:41,039 --> 00:18:42,000
because it can be very

551
00:18:42,000 --> 00:18:44,320
easy for your audience to just assume

552
00:18:44,320 --> 00:18:45,600
that that's the case

553
00:18:45,600 --> 00:18:47,840
and then completely misunderstand your

554
00:18:47,840 --> 00:18:50,240
data

555
00:18:51,679 --> 00:18:54,960
these are some examples of beautiful

556
00:18:54,960 --> 00:18:57,760
generative data visualizations as always

557
00:18:57,760 --> 00:18:59,280
i'm here to show you people doing it

558
00:18:59,280 --> 00:19:00,080
right

559
00:19:00,080 --> 00:19:03,039
so here is a graph of minimum wage

560
00:19:03,039 --> 00:19:03,919
increases

561
00:19:03,919 --> 00:19:06,960
it was published in may 2020 in fortune

562
00:19:06,960 --> 00:19:07,840
magazine

563
00:19:07,840 --> 00:19:08,960
and they're doing this great

564
00:19:08,960 --> 00:19:10,880
three-dimensional data visualization

565
00:19:10,880 --> 00:19:13,200
where they are looking at i believe

566
00:19:13,200 --> 00:19:14,320
these are states

567
00:19:14,320 --> 00:19:16,720
in the united states and then they're

568
00:19:16,720 --> 00:19:17,600
looking at the

569
00:19:17,600 --> 00:19:20,960
change in minimum wage over time so

570
00:19:20,960 --> 00:19:24,559
we're seeing where things are the most

571
00:19:24,559 --> 00:19:26,400
the most sloped where are we seeing the

572
00:19:26,400 --> 00:19:28,720
most changes and then we're also seeing

573
00:19:28,720 --> 00:19:30,640
the places that have the highest minimum

574
00:19:30,640 --> 00:19:32,320
wage in general

575
00:19:32,320 --> 00:19:34,400
in the year 2020. so i think this is a

576
00:19:34,400 --> 00:19:36,880
really lovely plot because it uses color

577
00:19:36,880 --> 00:19:39,200
but it uses the color in a way that even

578
00:19:39,200 --> 00:19:40,559
someone who's colorblind would be able

579
00:19:40,559 --> 00:19:42,320
to see because we're only changing one

580
00:19:42,320 --> 00:19:43,840
of the aspects of that color

581
00:19:43,840 --> 00:19:46,880
the saturation level it is also really

582
00:19:46,880 --> 00:19:48,640
lovely because they're stacking all of

583
00:19:48,640 --> 00:19:50,320
these little slices on top of each other

584
00:19:50,320 --> 00:19:51,600
so we're getting to see

585
00:19:51,600 --> 00:19:55,039
an entirely increased level of dimension

586
00:19:55,039 --> 00:19:58,480
inside of this plot and then we have a

587
00:19:58,480 --> 00:20:00,480
really well labeled axis

588
00:20:00,480 --> 00:20:02,320
and we have really compelling data

589
00:20:02,320 --> 00:20:04,880
overall this is a great visualization

590
00:20:04,880 --> 00:20:06,880
and oftentimes news will be the best

591
00:20:06,880 --> 00:20:08,000
place for you to go

592
00:20:08,000 --> 00:20:10,080
for your inspiration so new york times

593
00:20:10,080 --> 00:20:11,120
has really great

594
00:20:11,120 --> 00:20:13,600
data visualizations the economist has

595
00:20:13,600 --> 00:20:15,280
really great data visualizations and

596
00:20:15,280 --> 00:20:15,919
then

597
00:20:15,919 --> 00:20:18,159
fortune any kind of business mag often

598
00:20:18,159 --> 00:20:19,760
has a good database team

599
00:20:19,760 --> 00:20:21,440
the new york times has a dedicated

600
00:20:21,440 --> 00:20:23,120
generative visuals

601
00:20:23,120 --> 00:20:24,799
team so if you're ever looking for

602
00:20:24,799 --> 00:20:26,799
inspiration for p5 stuff check them out

603
00:20:26,799 --> 00:20:29,120
they're really awesome too

604
00:20:29,120 --> 00:20:32,480
this is a piece called melting memories

605
00:20:32,480 --> 00:20:32,960
by

606
00:20:32,960 --> 00:20:36,159
rafiq anadol he is

607
00:20:36,159 --> 00:20:39,200
a generative art genius and is

608
00:20:39,200 --> 00:20:39,919
definitely

609
00:20:39,919 --> 00:20:42,400
at the top of the field right now so if

610
00:20:42,400 --> 00:20:44,159
you're ever looking for inspiration or

611
00:20:44,159 --> 00:20:45,120
even looking to see

612
00:20:45,120 --> 00:20:47,440
where where things are trickling down

613
00:20:47,440 --> 00:20:48,559
from you know like

614
00:20:48,559 --> 00:20:50,880
you look at fashion week to see what's

615
00:20:50,880 --> 00:20:53,120
going to happen in fashion in two years

616
00:20:53,120 --> 00:20:55,360
so looking at his work is a great way to

617
00:20:55,360 --> 00:20:57,200
see kind of where the field might be

618
00:20:57,200 --> 00:20:58,080
headed

619
00:20:58,080 --> 00:21:00,159
a lot of his work has to do with

620
00:21:00,159 --> 00:21:01,919
collaborative

621
00:21:01,919 --> 00:21:05,200
ai generating art here

622
00:21:05,200 --> 00:21:07,919
i believe he's looking at some personal

623
00:21:07,919 --> 00:21:09,360
data of his

624
00:21:09,360 --> 00:21:11,919
and running it through an ai and this is

625
00:21:11,919 --> 00:21:13,600
actually a three-dimensional sculpture

626
00:21:13,600 --> 00:21:15,360
it's very beautiful it first was

627
00:21:15,360 --> 00:21:17,520
exhibited in 2018

628
00:21:17,520 --> 00:21:19,919
a lot of his work is similar to this but

629
00:21:19,919 --> 00:21:22,080
kind of expanded in concept

630
00:21:22,080 --> 00:21:25,760
so go check him out as well

631
00:21:26,559 --> 00:21:28,640
and then i think this is a really great

632
00:21:28,640 --> 00:21:31,280
example because it's so simple

633
00:21:31,280 --> 00:21:34,159
so this is a piece called appeal it was

634
00:21:34,159 --> 00:21:36,000
created by richard they

635
00:21:36,000 --> 00:21:39,600
um and it first debuted in the year 2007

636
00:21:39,600 --> 00:21:42,880
the idea here was the artist

637
00:21:42,880 --> 00:21:45,840
created a wall that was completely

638
00:21:45,840 --> 00:21:47,120
wallpapered in

639
00:21:47,120 --> 00:21:49,760
peel off stickers and asked people at

640
00:21:49,760 --> 00:21:51,440
the museum to remove a sticker and then

641
00:21:51,440 --> 00:21:53,440
to place that sticker somewhere else

642
00:21:53,440 --> 00:21:54,960
a lot of the stickers ended up on the

643
00:21:54,960 --> 00:21:57,280
walls but apparently they also ended up

644
00:21:57,280 --> 00:21:58,799
all over the city in which this was

645
00:21:58,799 --> 00:21:59,919
exhibiting

646
00:21:59,919 --> 00:22:02,400
and this is a type of data visualization

647
00:22:02,400 --> 00:22:03,600
and it's an interactive data

648
00:22:03,600 --> 00:22:06,080
visualization but it requires zero code

649
00:22:06,080 --> 00:22:08,559
and it's very lovely and beautiful i

650
00:22:08,559 --> 00:22:10,400
think some of the things that

651
00:22:10,400 --> 00:22:12,559
are really cool about this piece are the

652
00:22:12,559 --> 00:22:15,520
ways that humans interact

653
00:22:15,520 --> 00:22:18,559
in such a elegant way you can see the

654
00:22:18,559 --> 00:22:19,360
average height

655
00:22:19,360 --> 00:22:21,760
of people on this i also think it's cool

656
00:22:21,760 --> 00:22:23,440
there's a couple here that are like

657
00:22:23,440 --> 00:22:25,120
half torn off like someone was being

658
00:22:25,120 --> 00:22:27,120
cheeky and so

659
00:22:27,120 --> 00:22:30,000
i just include this to remind you that

660
00:22:30,000 --> 00:22:31,679
your work doesn't have to be

661
00:22:31,679 --> 00:22:34,159
technically complex to be artistically

662
00:22:34,159 --> 00:22:35,600
compelling so

663
00:22:35,600 --> 00:22:38,480
while rafiq and adol is doing incredible

664
00:22:38,480 --> 00:22:38,880
work

665
00:22:38,880 --> 00:22:41,840
using generative ais to make moving

666
00:22:41,840 --> 00:22:43,440
sculptures that are exhibiting in

667
00:22:43,440 --> 00:22:44,320
galleries

668
00:22:44,320 --> 00:22:45,840
there are also people in this world that

669
00:22:45,840 --> 00:22:47,600
are working on the sticker scale

670
00:22:47,600 --> 00:22:49,200
and you can definitely be working on a

671
00:22:49,200 --> 00:22:50,799
sticker scale and still be doing things

672
00:22:50,799 --> 00:22:51,840
that are artwork

673
00:22:51,840 --> 00:22:53,840
artworthy noteworthy as an artist so

674
00:22:53,840 --> 00:22:55,600
just remember that too in this work like

675
00:22:55,600 --> 00:22:56,960
don't let yourself get overwhelmed by

676
00:22:56,960 --> 00:22:59,360
the data

677
00:22:59,440 --> 00:23:01,280
speaking of data let's start talking

678
00:23:01,280 --> 00:23:02,880
about how data is formatted and how

679
00:23:02,880 --> 00:23:06,400
we're going to get it into our pieces

680
00:23:07,280 --> 00:23:10,640
so there's two ways to get your data and

681
00:23:10,640 --> 00:23:11,039
they're

682
00:23:11,039 --> 00:23:14,320
interrelated inside of this interface

683
00:23:14,320 --> 00:23:15,919
first we're going to talk about json

684
00:23:15,919 --> 00:23:17,440
files and then we're going to talk about

685
00:23:17,440 --> 00:23:20,080
apis

686
00:23:20,080 --> 00:23:23,039
this is a json file or a little snippet

687
00:23:23,039 --> 00:23:23,840
of one

688
00:23:23,840 --> 00:23:27,600
json is javascript object notation

689
00:23:27,600 --> 00:23:29,679
javascript is an object oriented

690
00:23:29,679 --> 00:23:31,360
language hopefully that rings a bell

691
00:23:31,360 --> 00:23:32,000
with you

692
00:23:32,000 --> 00:23:34,320
but if it doesn't javascript is an

693
00:23:34,320 --> 00:23:36,080
object oriented language it's a big part

694
00:23:36,080 --> 00:23:37,679
of the structure of the language it's a

695
00:23:37,679 --> 00:23:39,120
big part of its identity

696
00:23:39,120 --> 00:23:41,840
and at its core what that means is that

697
00:23:41,840 --> 00:23:43,440
your code is always structured around

698
00:23:43,440 --> 00:23:43,840
these

699
00:23:43,840 --> 00:23:46,320
objects so this is how an object is

700
00:23:46,320 --> 00:23:48,320
written inside of javascript

701
00:23:48,320 --> 00:23:51,840
and you see here we have an outside

702
00:23:51,840 --> 00:23:54,880
level so these brackets enclose the

703
00:23:54,880 --> 00:23:57,919
entire javascript object

704
00:23:57,919 --> 00:24:00,720
then we have a labeled object inside of

705
00:24:00,720 --> 00:24:01,120
that

706
00:24:01,120 --> 00:24:04,159
encapsulating object and then inside of

707
00:24:04,159 --> 00:24:05,200
that we see

708
00:24:05,200 --> 00:24:07,840
the title and so on and so forth so we

709
00:24:07,840 --> 00:24:09,279
can go deep in

710
00:24:09,279 --> 00:24:11,520
i highlight this part of the object for

711
00:24:11,520 --> 00:24:13,520
you so that you can see

712
00:24:13,520 --> 00:24:16,880
the fact that an object can be its own

713
00:24:16,880 --> 00:24:18,799
encapsulation and have nothing related

714
00:24:18,799 --> 00:24:19,919
to it or

715
00:24:19,919 --> 00:24:21,840
it can have lots of other things inside

716
00:24:21,840 --> 00:24:23,679
of a list all of those things are

717
00:24:23,679 --> 00:24:25,440
separated with commas

718
00:24:25,440 --> 00:24:27,200
and you want to make sure that any

719
00:24:27,200 --> 00:24:29,440
strings inside of a javascript object

720
00:24:29,440 --> 00:24:31,760
are encapsulated inside of quotation

721
00:24:31,760 --> 00:24:32,480
marks

722
00:24:32,480 --> 00:24:34,159
we haven't talked about strings yet the

723
00:24:34,159 --> 00:24:36,159
idea of a string is anything that's

724
00:24:36,159 --> 00:24:39,120
text and not numbers should always be

725
00:24:39,120 --> 00:24:41,279
inside of quotation marks in your code

726
00:24:41,279 --> 00:24:42,880
so just always making sure that you're

727
00:24:42,880 --> 00:24:44,400
putting quotation marks around

728
00:24:44,400 --> 00:24:46,640
the strings inside of your javascript

729
00:24:46,640 --> 00:24:48,240
object

730
00:24:48,240 --> 00:24:50,799
and the really amazing thing about a

731
00:24:50,799 --> 00:24:52,480
javascript object is that you actually

732
00:24:52,480 --> 00:24:53,679
call

733
00:24:53,679 --> 00:24:56,480
the values from their names so if i

734
00:24:56,480 --> 00:24:57,200
wanted to get

735
00:24:57,200 --> 00:25:00,960
this id property i can call the glossary

736
00:25:00,960 --> 00:25:04,240
the title the gloss div the

737
00:25:04,240 --> 00:25:06,880
gloss list the gloss entry and then the

738
00:25:06,880 --> 00:25:07,360
id

739
00:25:07,360 --> 00:25:09,679
so everything is nested inside let me

740
00:25:09,679 --> 00:25:12,000
show you what i mean

741
00:25:12,000 --> 00:25:16,000
so just a reminder that hitting return

742
00:25:16,000 --> 00:25:18,559
is more of a format for you the human

743
00:25:18,559 --> 00:25:20,559
operator than it is for javascript so

744
00:25:20,559 --> 00:25:22,559
here you see i've taken

745
00:25:22,559 --> 00:25:26,400
this inner portion of the object

746
00:25:26,400 --> 00:25:28,400
and just put them all in one line for

747
00:25:28,400 --> 00:25:30,960
the sake of space so don't get confused

748
00:25:30,960 --> 00:25:33,279
enters are just there for humans the

749
00:25:33,279 --> 00:25:34,559
computer can't tell the difference as

750
00:25:34,559 --> 00:25:36,000
long as you have commas in between your

751
00:25:36,000 --> 00:25:38,159
lines

752
00:25:38,159 --> 00:25:40,880
here i've got an object called cats and

753
00:25:40,880 --> 00:25:41,279
then

754
00:25:41,279 --> 00:25:43,679
inside of that object i've got a

755
00:25:43,679 --> 00:25:45,679
category called mine

756
00:25:45,679 --> 00:25:48,320
two names for each of these two objects

757
00:25:48,320 --> 00:25:48,720
and then

758
00:25:48,720 --> 00:25:50,400
attributes that i've assigned to those

759
00:25:50,400 --> 00:25:53,120
objects so if i wanted to call

760
00:25:53,120 --> 00:25:56,240
for example the age of the cat fluffy i

761
00:25:56,240 --> 00:25:58,240
would go into my javascript code and

762
00:25:58,240 --> 00:25:59,039
print

763
00:25:59,039 --> 00:26:03,039
cats dot mine dot fluffy dot age

764
00:26:03,039 --> 00:26:04,799
so you see here i'm going from the top

765
00:26:04,799 --> 00:26:06,640
level and then kind of flipping through

766
00:26:06,640 --> 00:26:08,320
it like it's a dictionary

767
00:26:08,320 --> 00:26:11,520
cats mine fluffy age and the answer i'll

768
00:26:11,520 --> 00:26:13,360
get would be eight

769
00:26:13,360 --> 00:26:16,640
so a self-check opportunity um

770
00:26:16,640 --> 00:26:20,320
if i was going to set cats.mind.sunny

771
00:26:20,320 --> 00:26:23,600
equal to the variable of x and then

772
00:26:23,600 --> 00:26:25,679
print out that variable

773
00:26:25,679 --> 00:26:28,159
what would i get so you can go ahead and

774
00:26:28,159 --> 00:26:29,440
pause if you'd like to

775
00:26:29,440 --> 00:26:32,799
answer that question on your own

776
00:26:33,679 --> 00:26:36,000
it's going to spit out the entire

777
00:26:36,000 --> 00:26:38,240
interior of that object so this is a

778
00:26:38,240 --> 00:26:38,799
great

779
00:26:38,799 --> 00:26:41,840
affordance a great thing to know if you

780
00:26:41,840 --> 00:26:42,400
want to

781
00:26:42,400 --> 00:26:44,480
see the structure of a javascript object

782
00:26:44,480 --> 00:26:45,840
that maybe

783
00:26:45,840 --> 00:26:48,080
isn't inside of your sketch but you need

784
00:26:48,080 --> 00:26:49,360
to have information about how it's

785
00:26:49,360 --> 00:26:50,159
structured

786
00:26:50,159 --> 00:26:51,840
so we'll use this inside of the work

787
00:26:51,840 --> 00:26:53,919
that we're doing today

788
00:26:53,919 --> 00:26:55,600
this is something you can practice

789
00:26:55,600 --> 00:26:56,960
endlessly go

790
00:26:56,960 --> 00:27:00,240
google javascript objects and start

791
00:27:00,240 --> 00:27:02,000
working your way through them inside of

792
00:27:02,000 --> 00:27:04,000
a p5 sketch

793
00:27:04,000 --> 00:27:05,679
just practicing how to navigate around

794
00:27:05,679 --> 00:27:06,960
them is a really good way to get

795
00:27:06,960 --> 00:27:07,919
familiar

796
00:27:07,919 --> 00:27:10,159
it's a map so you need to be experienced

797
00:27:10,159 --> 00:27:12,000
with how to use that map

798
00:27:12,000 --> 00:27:13,840
in order to be better at how to display

799
00:27:13,840 --> 00:27:16,159
that data i'll show you how to access

800
00:27:16,159 --> 00:27:16,480
this

801
00:27:16,480 --> 00:27:18,320
and how to display it inside of a p5

802
00:27:18,320 --> 00:27:20,159
sketch during our code demo

803
00:27:20,159 --> 00:27:21,760
but the more practice you get with it

804
00:27:21,760 --> 00:27:23,440
the more familiar you'll be

805
00:27:23,440 --> 00:27:24,720
and the better you will be at

806
00:27:24,720 --> 00:27:27,600
manipulating data

807
00:27:27,600 --> 00:27:30,080
another quick note we won't be covering

808
00:27:30,080 --> 00:27:32,640
this inside of our code demo today

809
00:27:32,640 --> 00:27:34,399
because we're specifically interested in

810
00:27:34,399 --> 00:27:36,559
reading data but you can write to a

811
00:27:36,559 --> 00:27:38,000
javascript object from

812
00:27:38,000 --> 00:27:40,880
your code and change the value so if for

813
00:27:40,880 --> 00:27:42,559
some reason i wanted to change

814
00:27:42,559 --> 00:27:44,559
fluffy's age maybe i got it wrong when i

815
00:27:44,559 --> 00:27:45,919
was creating the object

816
00:27:45,919 --> 00:27:49,200
i can just do cats.mind.fluffy.h so we

817
00:27:49,200 --> 00:27:52,960
go cats.mine.fluffy.age

818
00:27:52,960 --> 00:27:55,520
and then set that equal to 10. and then

819
00:27:55,520 --> 00:27:57,039
i'm checking my work here by saying

820
00:27:57,039 --> 00:27:57,760
print

821
00:27:57,760 --> 00:28:00,399
cat's mind fluffy age and the response

822
00:28:00,399 --> 00:28:03,039
will be 10.

823
00:28:03,039 --> 00:28:05,919
the same is not true if you are changing

824
00:28:05,919 --> 00:28:08,320
the variable that you have set equal to

825
00:28:08,320 --> 00:28:09,840
a part of an object

826
00:28:09,840 --> 00:28:11,440
hopefully this will be obvious but i

827
00:28:11,440 --> 00:28:13,440
just want to make it completely plain

828
00:28:13,440 --> 00:28:14,240
for you

829
00:28:14,240 --> 00:28:15,919
so that you don't end up confused down

830
00:28:15,919 --> 00:28:19,440
the line for example i set a variable

831
00:28:19,440 --> 00:28:22,320
x equal to cats.mind.sunny the same as

832
00:28:22,320 --> 00:28:23,360
we did in the last

833
00:28:23,360 --> 00:28:27,279
so you'll in theory get the spit out age

834
00:28:27,279 --> 00:28:30,640
um favorite food color

835
00:28:30,640 --> 00:28:34,080
if i change the value of x and print x

836
00:28:34,080 --> 00:28:37,200
i will get the string nonsense but

837
00:28:37,200 --> 00:28:40,640
if i print cats.mine.sunny i will

838
00:28:40,640 --> 00:28:43,600
still get the interior of that object so

839
00:28:43,600 --> 00:28:45,039
if you want to change the object you

840
00:28:45,039 --> 00:28:46,320
have to actually

841
00:28:46,320 --> 00:28:50,880
access it in javascript object notation

842
00:28:50,880 --> 00:28:54,880
and then you have to insert a new value

843
00:28:54,880 --> 00:28:57,520
so let's talk about apis why do they

844
00:28:57,520 --> 00:28:58,559
matter what are they

845
00:28:58,559 --> 00:29:01,840
how are we going to use them in our code

846
00:29:01,840 --> 00:29:04,799
the internet is built out of computers

847
00:29:04,799 --> 00:29:06,159
that are all connected together

848
00:29:06,159 --> 00:29:09,200
at its core in all of the magic

849
00:29:09,200 --> 00:29:12,159
and mystery that is the internet it is a

850
00:29:12,159 --> 00:29:14,559
bunch of connected computers

851
00:29:14,559 --> 00:29:17,600
and technically speaking if you are the

852
00:29:17,600 --> 00:29:18,080
person

853
00:29:18,080 --> 00:29:20,080
typing in the url and accessing the

854
00:29:20,080 --> 00:29:22,080
internet you are a client

855
00:29:22,080 --> 00:29:24,000
and if you're the one passing out the

856
00:29:24,000 --> 00:29:25,760
information you're a server

857
00:29:25,760 --> 00:29:28,159
so anytime you go log into facebook or

858
00:29:28,159 --> 00:29:30,559
google you're accessing a server or a

859
00:29:30,559 --> 00:29:31,919
bank of servers

860
00:29:31,919 --> 00:29:35,360
and they're serving you that website

861
00:29:35,360 --> 00:29:37,840
one way to connect would be your just

862
00:29:37,840 --> 00:29:39,360
straight up browser

863
00:29:39,360 --> 00:29:41,039
but another way to connect is through

864
00:29:41,039 --> 00:29:42,960
the use of an api

865
00:29:42,960 --> 00:29:45,200
an api is called an application

866
00:29:45,200 --> 00:29:47,120
programming interface

867
00:29:47,120 --> 00:29:49,360
basically it's a way for you to use your

868
00:29:49,360 --> 00:29:51,520
code to talk to a server

869
00:29:51,520 --> 00:29:53,520
without having to intervene beyond

870
00:29:53,520 --> 00:29:54,960
running the code

871
00:29:54,960 --> 00:29:58,080
so you get to put in a format that is a

872
00:29:58,080 --> 00:29:59,520
url essentially

873
00:29:59,520 --> 00:30:01,200
a way that a server wants to communicate

874
00:30:01,200 --> 00:30:02,880
with you and then

875
00:30:02,880 --> 00:30:05,919
it will give you an answer

876
00:30:06,320 --> 00:30:09,760
apis can do a lot of stuff anything a

877
00:30:09,760 --> 00:30:10,960
server can do

878
00:30:10,960 --> 00:30:13,600
here are some like super snapshotty

879
00:30:13,600 --> 00:30:15,440
examples that you might be interested in

880
00:30:15,440 --> 00:30:16,480
utilizing

881
00:30:16,480 --> 00:30:18,240
you can look at the state of the system

882
00:30:18,240 --> 00:30:20,080
there's a lot of weather and stock

883
00:30:20,080 --> 00:30:21,279
market application

884
00:30:21,279 --> 00:30:24,320
programming interfaces you can manage

885
00:30:24,320 --> 00:30:27,200
your bank or you can buy things with an

886
00:30:27,200 --> 00:30:28,399
api

887
00:30:28,399 --> 00:30:31,600
you can post to social media

888
00:30:31,600 --> 00:30:33,760
the twitter api is a really common and

889
00:30:33,760 --> 00:30:34,960
easy to use api

890
00:30:34,960 --> 00:30:37,039
it's easy to create bots which is why

891
00:30:37,039 --> 00:30:38,320
people have

892
00:30:38,320 --> 00:30:39,840
there's so many problems with bots on

893
00:30:39,840 --> 00:30:41,520
twitter twitter and reddit

894
00:30:41,520 --> 00:30:44,399
both have very easy apis to use on the

895
00:30:44,399 --> 00:30:45,039
whole

896
00:30:45,039 --> 00:30:46,720
so if you're looking to do social media

897
00:30:46,720 --> 00:30:49,200
work definitely check out those

898
00:30:49,200 --> 00:30:51,520
you can have them do math for you matlab

899
00:30:51,520 --> 00:30:52,480
has an api

900
00:30:52,480 --> 00:30:54,799
which allows you to say have the

901
00:30:54,799 --> 00:30:56,720
computer solve a function and then send

902
00:30:56,720 --> 00:30:58,399
you back the value

903
00:30:58,399 --> 00:31:00,399
and it can also connect you to an

904
00:31:00,399 --> 00:31:02,480
artificial intelligence platform

905
00:31:02,480 --> 00:31:04,159
something that's already been trained

906
00:31:04,159 --> 00:31:05,919
but maybe can take the data that you

907
00:31:05,919 --> 00:31:07,279
pass it and give you some kind of

908
00:31:07,279 --> 00:31:09,440
response so i've used this before

909
00:31:09,440 --> 00:31:11,279
to have the computer send me back a

910
00:31:11,279 --> 00:31:14,080
sentiment analysis on a block of text

911
00:31:14,080 --> 00:31:16,240
i was able to send watson text and then

912
00:31:16,240 --> 00:31:17,760
watson sent me back the text

913
00:31:17,760 --> 00:31:21,039
coded with all of the emotions that are

914
00:31:21,039 --> 00:31:24,399
inside of it based on the ai

915
00:31:24,399 --> 00:31:27,039
you can oh before we move on you can run

916
00:31:27,039 --> 00:31:27,760
an api

917
00:31:27,760 --> 00:31:29,440
in just about any language that's out

918
00:31:29,440 --> 00:31:30,799
there as long as your computer is

919
00:31:30,799 --> 00:31:32,320
connected to the server

920
00:31:32,320 --> 00:31:33,679
which either means you need to be

921
00:31:33,679 --> 00:31:35,919
locally connected or more likely

922
00:31:35,919 --> 00:31:37,279
you're connected to the internet and the

923
00:31:37,279 --> 00:31:39,440
server is connected to the internet

924
00:31:39,440 --> 00:31:41,919
um we are just going to focus obviously

925
00:31:41,919 --> 00:31:43,840
on javascript apis but

926
00:31:43,840 --> 00:31:47,200
often you'll see in documentation um

927
00:31:47,200 --> 00:31:49,840
api calls for other languages so don't

928
00:31:49,840 --> 00:31:51,760
like lose your mind

929
00:31:51,760 --> 00:31:53,279
javascript is just one of the options

930
00:31:53,279 --> 00:31:56,240
for accessing an api

931
00:31:56,559 --> 00:32:00,320
and then the idea is that an api

932
00:32:00,320 --> 00:32:02,799
will almost always send you back a json

933
00:32:02,799 --> 00:32:05,279
file so that's why we talked about json

934
00:32:05,279 --> 00:32:09,279
both as a way to just encode data inside

935
00:32:09,279 --> 00:32:10,960
of your javascript sketch which is what

936
00:32:10,960 --> 00:32:12,559
we're going to visit first

937
00:32:12,559 --> 00:32:14,480
and then after we've kind of familiar

938
00:32:14,480 --> 00:32:16,399
familiarized ourselves with the

939
00:32:16,399 --> 00:32:18,399
structure of a json file

940
00:32:18,399 --> 00:32:20,559
and how to access that using our p5

941
00:32:20,559 --> 00:32:22,399
skills then we'll take it to the next

942
00:32:22,399 --> 00:32:24,080
level and start to utilize

943
00:32:24,080 --> 00:32:26,399
a json file that we get passed back to

944
00:32:26,399 --> 00:32:27,440
us from an api

945
00:32:27,440 --> 00:32:32,080
call to create a piece of generative art

946
00:32:32,399 --> 00:32:35,519
all right buckle up here we go we are in

947
00:32:35,519 --> 00:32:37,519
a blank sketch in p5.js

948
00:32:37,519 --> 00:32:39,519
we're going to leave everything as its

949
00:32:39,519 --> 00:32:42,159
default our main focus here is going to

950
00:32:42,159 --> 00:32:42,480
be

951
00:32:42,480 --> 00:32:45,200
on building and utilizing a basic json

952
00:32:45,200 --> 00:32:46,880
file just to give you the opportunity to

953
00:32:46,880 --> 00:32:47,840
play around

954
00:32:47,840 --> 00:32:50,960
and understand how json files work

955
00:32:50,960 --> 00:32:53,200
uh just like we did when we created our

956
00:32:53,200 --> 00:32:55,200
image to load into

957
00:32:55,200 --> 00:32:57,519
our sketch we're going to open up our

958
00:32:57,519 --> 00:32:58,480
files window

959
00:32:58,480 --> 00:33:01,519
in p5.js and then i am going to

960
00:33:01,519 --> 00:33:03,519
actually create a json file and we're

961
00:33:03,519 --> 00:33:05,120
going to go for just the same

962
00:33:05,120 --> 00:33:07,440
object the basic object that we had in

963
00:33:07,440 --> 00:33:09,120
our

964
00:33:09,120 --> 00:33:10,760
lecture so i'm going to call it

965
00:33:10,760 --> 00:33:12,240
cats.json

966
00:33:12,240 --> 00:33:14,399
and then we'll fill it in with the data

967
00:33:14,399 --> 00:33:16,399
the data that we had in our sketch

968
00:33:16,399 --> 00:33:19,120
was just or our lecture was just an

969
00:33:19,120 --> 00:33:20,000
object that

970
00:33:20,000 --> 00:33:23,600
is called cats and then inside of that

971
00:33:23,600 --> 00:33:24,080
object

972
00:33:24,080 --> 00:33:27,360
we have mine

973
00:33:27,360 --> 00:33:30,799
and then the names of the cats

974
00:33:36,159 --> 00:33:38,559
and you'll notice as i'm typing this out

975
00:33:38,559 --> 00:33:40,159
here that i am again putting

976
00:33:40,159 --> 00:33:43,279
all of my strings in quotation marks and

977
00:33:43,279 --> 00:33:44,960
all of my numbers can stay

978
00:33:44,960 --> 00:33:48,080
as num numeric values so always in your

979
00:33:48,080 --> 00:33:49,039
code you want to make sure you're

980
00:33:49,039 --> 00:33:50,320
putting your strings

981
00:33:50,320 --> 00:33:53,360
inside of quotation marks because that's

982
00:33:53,360 --> 00:33:56,720
how it likes to handle them

983
00:33:56,720 --> 00:33:58,159
and if you're ever looking for ways to

984
00:33:58,159 --> 00:33:59,760
manipulate strings that's how you would

985
00:33:59,760 --> 00:34:01,519
google it so

986
00:34:01,519 --> 00:34:07,840
that's like code talk for text basically

987
00:34:09,918 --> 00:34:13,359
then i'm just going to copy paste

988
00:34:13,359 --> 00:34:15,839
this

989
00:34:16,480 --> 00:34:21,839
and then change the variables

990
00:34:33,839 --> 00:34:39,839
okay so here you see that i've got

991
00:34:41,760 --> 00:34:43,520
brackets that are all paired with one

992
00:34:43,520 --> 00:34:45,280
another this bracket

993
00:34:45,280 --> 00:34:47,679
is the bracket for the cat named sunny

994
00:34:47,679 --> 00:34:49,359
this bracket is all of the information

995
00:34:49,359 --> 00:34:50,879
for the cat named sunny

996
00:34:50,879 --> 00:34:53,040
every javascript object should always

997
00:34:53,040 --> 00:34:54,000
have

998
00:34:54,000 --> 00:34:56,399
everything separated out one thing i'm

999
00:34:56,399 --> 00:34:57,520
noticing here

1000
00:34:57,520 --> 00:34:59,280
in doing a little audit of our

1001
00:34:59,280 --> 00:35:01,200
javascript object

1002
00:35:01,200 --> 00:35:03,520
is that our commas need to be on the

1003
00:35:03,520 --> 00:35:05,200
outside of those brackets so what we're

1004
00:35:05,200 --> 00:35:06,800
doing is we're separating the entire

1005
00:35:06,800 --> 00:35:09,280
object of fluffy

1006
00:35:09,280 --> 00:35:11,680
from the entire object of sunny using

1007
00:35:11,680 --> 00:35:13,040
those commas

1008
00:35:13,040 --> 00:35:15,040
looks like i'm getting an error i wonder

1009
00:35:15,040 --> 00:35:17,200
what it is let me

1010
00:35:17,200 --> 00:35:18,720
audit this really quickly what do you

1011
00:35:18,720 --> 00:35:20,879
say

1012
00:35:24,160 --> 00:35:27,359
oh okay it should be fine let's just pop

1013
00:35:27,359 --> 00:35:28,880
this up on the line

1014
00:35:28,880 --> 00:35:33,280
hopefully that will help um

1015
00:35:35,280 --> 00:35:38,640
yeah all should be well anyway um

1016
00:35:38,640 --> 00:35:40,320
let's make sure this works because

1017
00:35:40,320 --> 00:35:43,119
perhaps there's something i am missing

1018
00:35:43,119 --> 00:35:45,440
um oh i understand what i've got wrong

1019
00:35:45,440 --> 00:35:46,240
here

1020
00:35:46,240 --> 00:35:48,160
uh hopefully some of you saw before i

1021
00:35:48,160 --> 00:35:49,520
did these

1022
00:35:49,520 --> 00:35:53,040
are sunny and fluffy are two objects

1023
00:35:53,040 --> 00:35:56,000
inside of the mine so instead of adding

1024
00:35:56,000 --> 00:35:56,240
an

1025
00:35:56,240 --> 00:35:58,400
end bracket here we want to make sure we

1026
00:35:58,400 --> 00:35:59,680
have our end bracket

1027
00:35:59,680 --> 00:36:01,920
here so this level of object is

1028
00:36:01,920 --> 00:36:03,760
encapsulated entirely

1029
00:36:03,760 --> 00:36:05,280
in those two brackets whereas before i

1030
00:36:05,280 --> 00:36:06,800
was separating them

1031
00:36:06,800 --> 00:36:09,280
i hope that makes sense to you so now

1032
00:36:09,280 --> 00:36:10,880
we've got our json object it's

1033
00:36:10,880 --> 00:36:13,040
structured i'm going to save my sketch

1034
00:36:13,040 --> 00:36:14,560
and then i'm going to jump back over

1035
00:36:14,560 --> 00:36:17,359
into my actual sketch file my sketch.js

1036
00:36:17,359 --> 00:36:18,320
file

1037
00:36:18,320 --> 00:36:20,720
and just because my screen is a little

1038
00:36:20,720 --> 00:36:22,480
small i'm going to

1039
00:36:22,480 --> 00:36:26,000
minimize that to the side so the first

1040
00:36:26,000 --> 00:36:26,800
thing we need to do

1041
00:36:26,800 --> 00:36:29,119
is load our json file we do that the

1042
00:36:29,119 --> 00:36:31,040
exact same way we loaded the image file

1043
00:36:31,040 --> 00:36:32,160
it's just going to be a slightly

1044
00:36:32,160 --> 00:36:34,000
different command so it will be function

1045
00:36:34,000 --> 00:36:36,560
preload

1046
00:36:38,560 --> 00:36:41,920
and then we're going to say load

1047
00:36:41,920 --> 00:36:44,079
oh

1048
00:36:45,119 --> 00:36:48,640
so we're going to say load json

1049
00:36:48,960 --> 00:36:50,599
and then our file name which is

1050
00:36:50,599 --> 00:36:52,079
cats.json

1051
00:36:52,079 --> 00:36:53,440
but we need to make it equal to a

1052
00:36:53,440 --> 00:36:54,880
variable so i'm going to call that

1053
00:36:54,880 --> 00:36:56,240
variable cats

1054
00:36:56,240 --> 00:36:57,680
and then i have to initialize the

1055
00:36:57,680 --> 00:36:59,280
variable so let

1056
00:36:59,280 --> 00:37:01,920
cats and then now we have a variable

1057
00:37:01,920 --> 00:37:02,400
cats

1058
00:37:02,400 --> 00:37:04,240
that should be equal to the json file

1059
00:37:04,240 --> 00:37:05,760
that we just created

1060
00:37:05,760 --> 00:37:08,000
um gotta make sure that file name is in

1061
00:37:08,000 --> 00:37:10,240
quotation marks

1062
00:37:10,240 --> 00:37:12,640
and i am going to just print it right

1063
00:37:12,640 --> 00:37:14,560
now to make sure from a debugging

1064
00:37:14,560 --> 00:37:15,599
perspective

1065
00:37:15,599 --> 00:37:17,280
that we have what we think we should

1066
00:37:17,280 --> 00:37:19,280
have

1067
00:37:19,280 --> 00:37:21,040
so we're going to print the variable

1068
00:37:21,040 --> 00:37:23,040
cats in our setup

1069
00:37:23,040 --> 00:37:25,680
and then let me refresh my sketch looks

1070
00:37:25,680 --> 00:37:27,359
like we do so we have an object it looks

1071
00:37:27,359 --> 00:37:28,640
exactly the same as the one that we made

1072
00:37:28,640 --> 00:37:29,440
before

1073
00:37:29,440 --> 00:37:30,880
and you can look down in your console

1074
00:37:30,880 --> 00:37:32,480
and see the actual structure of the

1075
00:37:32,480 --> 00:37:33,200
object

1076
00:37:33,200 --> 00:37:35,760
and confirm that it's all actually there

1077
00:37:35,760 --> 00:37:37,200
so you can just audit yourself really

1078
00:37:37,200 --> 00:37:38,079
quickly

1079
00:37:38,079 --> 00:37:39,760
if you weren't into any trouble at this

1080
00:37:39,760 --> 00:37:41,440
step just go back

1081
00:37:41,440 --> 00:37:44,000
and make sure that your object exactly

1082
00:37:44,000 --> 00:37:45,200
matches mine

1083
00:37:45,200 --> 00:37:47,040
it's very possible that like say you're

1084
00:37:47,040 --> 00:37:48,400
missing a comma or

1085
00:37:48,400 --> 00:37:50,160
another really common thing that happens

1086
00:37:50,160 --> 00:37:51,760
is there are two

1087
00:37:51,760 --> 00:37:54,320
different formats of quotation marks

1088
00:37:54,320 --> 00:37:55,920
there's one that's used in code and

1089
00:37:55,920 --> 00:37:57,200
there's one that's used

1090
00:37:57,200 --> 00:38:00,480
in um like microsoft office or something

1091
00:38:00,480 --> 00:38:01,359
like that

1092
00:38:01,359 --> 00:38:03,119
and they the ones in microsoft office

1093
00:38:03,119 --> 00:38:04,640
have curly ends

1094
00:38:04,640 --> 00:38:06,640
and the ones inside of this sketch i'll

1095
00:38:06,640 --> 00:38:08,000
even change these here so you can see

1096
00:38:08,000 --> 00:38:09,200
them

1097
00:38:09,200 --> 00:38:11,680
you see that these guys have like

1098
00:38:11,680 --> 00:38:13,119
straight ends

1099
00:38:13,119 --> 00:38:14,400
you want to make sure when you're using

1100
00:38:14,400 --> 00:38:16,160
stuff in your code to

1101
00:38:16,160 --> 00:38:18,240
denote strings that you're always using

1102
00:38:18,240 --> 00:38:20,079
those ones that have straight lines on

1103
00:38:20,079 --> 00:38:20,640
them

1104
00:38:20,640 --> 00:38:22,240
so if you have any trouble loading in

1105
00:38:22,240 --> 00:38:24,000
your json file or it's not reading the

1106
00:38:24,000 --> 00:38:25,280
way you think it should

1107
00:38:25,280 --> 00:38:29,040
that would be a good debugging step okay

1108
00:38:29,040 --> 00:38:31,359
the next thing i want to do is just

1109
00:38:31,359 --> 00:38:33,119
print out some of those words

1110
00:38:33,119 --> 00:38:35,839
in a format on our screen and we're

1111
00:38:35,839 --> 00:38:37,119
going to do that

1112
00:38:37,119 --> 00:38:38,720
by actually looping through the

1113
00:38:38,720 --> 00:38:41,119
variables in our json object

1114
00:38:41,119 --> 00:38:45,200
so accessing things in json

1115
00:38:45,200 --> 00:38:47,680
you can do what we did before so we'll

1116
00:38:47,680 --> 00:38:49,680
do like print

1117
00:38:49,680 --> 00:38:55,680
cats dot um mine dot fluffy

1118
00:38:55,680 --> 00:38:58,880
dot age and then now you'll see

1119
00:38:58,880 --> 00:39:01,200
in my console fluffy's age which is

1120
00:39:01,200 --> 00:39:01,920
eight

1121
00:39:01,920 --> 00:39:05,680
will appear but especially because in

1122
00:39:05,680 --> 00:39:07,359
our next part of our code demo we're

1123
00:39:07,359 --> 00:39:08,880
going to be working with some javascript

1124
00:39:08,880 --> 00:39:10,240
objects that you maybe don't know

1125
00:39:10,240 --> 00:39:11,599
exactly what they look like or they're

1126
00:39:11,599 --> 00:39:13,359
super long so you can't do all of that

1127
00:39:13,359 --> 00:39:14,320
manually

1128
00:39:14,320 --> 00:39:15,839
we're going to do it in a loop sort of

1129
00:39:15,839 --> 00:39:17,359
similar to the way that we've used loops

1130
00:39:17,359 --> 00:39:18,640
in the past

1131
00:39:18,640 --> 00:39:20,960
so the first thing that i'm going to do

1132
00:39:20,960 --> 00:39:22,800
is create this thing

1133
00:39:22,800 --> 00:39:25,080
that loops through our

1134
00:39:25,080 --> 00:39:26,960
[Music]

1135
00:39:26,960 --> 00:39:30,000
object and be on

1136
00:39:30,000 --> 00:39:32,160
your toes if you've never used something

1137
00:39:32,160 --> 00:39:34,000
like this before

1138
00:39:34,000 --> 00:39:36,160
oh oh we're having errors that's okay

1139
00:39:36,160 --> 00:39:37,280
we'll keep going

1140
00:39:37,280 --> 00:39:40,320
um so if you've never used javascript

1141
00:39:40,320 --> 00:39:41,200
objects before

1142
00:39:41,200 --> 00:39:42,800
be on your toes right now because this

1143
00:39:42,800 --> 00:39:44,640
is something that will be new and maybe

1144
00:39:44,640 --> 00:39:45,280
like

1145
00:39:45,280 --> 00:39:46,560
a little bit uncanny because it's

1146
00:39:46,560 --> 00:39:48,480
familiar but it's not the same so you

1147
00:39:48,480 --> 00:39:50,079
see here i've created

1148
00:39:50,079 --> 00:39:52,240
var k i could make it i which would be

1149
00:39:52,240 --> 00:39:53,680
standard practice

1150
00:39:53,680 --> 00:39:55,760
um so i'm creating a variable that's a

1151
00:39:55,760 --> 00:39:57,359
counter variable that's going to look

1152
00:39:57,359 --> 00:39:58,880
through our entire

1153
00:39:58,880 --> 00:40:02,079
um object on the mind level

1154
00:40:02,079 --> 00:40:03,920
so because i can look at this object and

1155
00:40:03,920 --> 00:40:05,599
see there's nothing

1156
00:40:05,599 --> 00:40:07,920
at that level except for the word mine

1157
00:40:07,920 --> 00:40:08,960
i'm gonna

1158
00:40:08,960 --> 00:40:10,880
zoom us in just a little bit farther and

1159
00:40:10,880 --> 00:40:12,480
focus on looping through

1160
00:40:12,480 --> 00:40:15,680
that part of the object

1161
00:40:15,680 --> 00:40:19,280
next i am going to

1162
00:40:19,280 --> 00:40:23,839
print so we can debug as always

1163
00:40:23,839 --> 00:40:27,040
mine with a bracket and then the letter

1164
00:40:27,040 --> 00:40:28,079
i

1165
00:40:28,079 --> 00:40:31,119
so what we're doing here is looking

1166
00:40:31,119 --> 00:40:34,240
at the console to make sure that our

1167
00:40:34,240 --> 00:40:34,960
loop

1168
00:40:34,960 --> 00:40:37,599
is spitting out both of the objects

1169
00:40:37,599 --> 00:40:38,240
inside

1170
00:40:38,240 --> 00:40:40,000
of that object so what we're hoping is

1171
00:40:40,000 --> 00:40:41,280
that we'll see

1172
00:40:41,280 --> 00:40:43,760
fluffy and sunny the interior of fluffy

1173
00:40:43,760 --> 00:40:44,480
and sunny

1174
00:40:44,480 --> 00:40:46,319
get spit out into our logs so let me

1175
00:40:46,319 --> 00:40:48,400
just refresh this

1176
00:40:48,400 --> 00:40:50,079
you'll notice i have auto refresh off

1177
00:40:50,079 --> 00:40:52,640
right now later when we

1178
00:40:52,640 --> 00:40:55,839
are inside of our big

1179
00:40:55,839 --> 00:40:58,480
sketch that has to do with usgs it can

1180
00:40:58,480 --> 00:40:59,359
be a bit

1181
00:40:59,359 --> 00:41:02,480
of a like a bandwidth pull

1182
00:41:02,480 --> 00:41:04,319
to be running it every single time so

1183
00:41:04,319 --> 00:41:06,160
when i'm working with big pieces of data

1184
00:41:06,160 --> 00:41:08,720
i usually keep my auto refresh off with

1185
00:41:08,720 --> 00:41:10,319
this you could definitely leave it on

1186
00:41:10,319 --> 00:41:13,520
i just have it off for later so look

1187
00:41:13,520 --> 00:41:14,560
what we got

1188
00:41:14,560 --> 00:41:18,000
we got two objects because it's printing

1189
00:41:18,000 --> 00:41:19,680
each time it loops

1190
00:41:19,680 --> 00:41:22,800
that are the interior of our two cats

1191
00:41:22,800 --> 00:41:24,079
so we're getting exactly what we

1192
00:41:24,079 --> 00:41:27,200
expected to get now i might want to put

1193
00:41:27,200 --> 00:41:29,440
that inside of our sketch in some way

1194
00:41:29,440 --> 00:41:30,960
so we're going to write it out in our

1195
00:41:30,960 --> 00:41:32,640
text i'm

1196
00:41:32,640 --> 00:41:35,839
thinking that we will create text that

1197
00:41:35,839 --> 00:41:36,240
says

1198
00:41:36,240 --> 00:41:40,000
how many caps that we have

1199
00:41:40,000 --> 00:41:41,839
and the way that you would write text

1200
00:41:41,839 --> 00:41:43,040
would be

1201
00:41:43,040 --> 00:41:44,800
using this text command we're going to

1202
00:41:44,800 --> 00:41:48,319
set a variable

1203
00:41:48,319 --> 00:41:51,760
equal to a string so right now we'll

1204
00:41:51,760 --> 00:41:52,960
just test it out

1205
00:41:52,960 --> 00:41:54,079
and then you should see over on the

1206
00:41:54,079 --> 00:41:56,800
right hand side we have the word test

1207
00:41:56,800 --> 00:42:00,160
so far so good i hope next we are going

1208
00:42:00,160 --> 00:42:01,760
to actually set that how many

1209
00:42:01,760 --> 00:42:06,119
equal to the size of our

1210
00:42:06,119 --> 00:42:09,440
cats.mine object and the way that we'll

1211
00:42:09,440 --> 00:42:10,000
do that

1212
00:42:10,000 --> 00:42:14,400
is by adding a variable

1213
00:42:15,520 --> 00:42:18,400
called size

1214
00:42:21,440 --> 00:42:25,520
and then adding 1 to the value of size

1215
00:42:25,520 --> 00:42:28,079
every time we go through our loop so

1216
00:42:28,079 --> 00:42:30,720
it's vital here that you set size equal

1217
00:42:30,720 --> 00:42:31,920
to zero before you

1218
00:42:31,920 --> 00:42:34,079
start otherwise you will run into an

1219
00:42:34,079 --> 00:42:35,599
error so if you're running into an error

1220
00:42:35,599 --> 00:42:37,280
where size is not defined

1221
00:42:37,280 --> 00:42:38,800
make sure you define it before you start

1222
00:42:38,800 --> 00:42:40,960
adding to it you can't add value to

1223
00:42:40,960 --> 00:42:43,839
something that doesn't have value

1224
00:42:43,839 --> 00:42:46,880
next we're going to add using

1225
00:42:46,880 --> 00:42:49,040
the increment command so we're just

1226
00:42:49,040 --> 00:42:50,560
adding the number one

1227
00:42:50,560 --> 00:42:52,880
to size every single time that we loop

1228
00:42:52,880 --> 00:42:53,599
and then

1229
00:42:53,599 --> 00:42:55,359
the last thing i'm going to do is just

1230
00:42:55,359 --> 00:42:56,800
replace this how many

1231
00:42:56,800 --> 00:42:58,880
with the variable size so we can confirm

1232
00:42:58,880 --> 00:43:01,280
that we got what we expected to get

1233
00:43:01,280 --> 00:43:03,599
and here we see the number two so we

1234
00:43:03,599 --> 00:43:05,280
know that there are two caps inside of

1235
00:43:05,280 --> 00:43:06,400
that array

1236
00:43:06,400 --> 00:43:09,119
all is well the next thing we're going

1237
00:43:09,119 --> 00:43:10,079
to do

1238
00:43:10,079 --> 00:43:11,760
just because like it will make our

1239
00:43:11,760 --> 00:43:14,000
sketch look prettier and maybe be more

1240
00:43:14,000 --> 00:43:14,800
intelligible

1241
00:43:14,800 --> 00:43:18,319
is give that number a unit

1242
00:43:18,319 --> 00:43:19,920
so instead of it just being a number

1243
00:43:19,920 --> 00:43:21,680
floating out in space in our sketch

1244
00:43:21,680 --> 00:43:23,599
we want to make sure it has some context

1245
00:43:23,599 --> 00:43:25,040
the way i'm going to contextualize that

1246
00:43:25,040 --> 00:43:26,240
is by utilizing

1247
00:43:26,240 --> 00:43:28,720
strings and the ability to concatenate

1248
00:43:28,720 --> 00:43:29,440
them

1249
00:43:29,440 --> 00:43:32,720
so we're going to say how many cats do

1250
00:43:32,720 --> 00:43:35,279
i own

1251
00:43:36,720 --> 00:43:38,560
and then we're going to add size to that

1252
00:43:38,560 --> 00:43:41,200
value so now we should get

1253
00:43:41,200 --> 00:43:44,079
how many cats do i own plus the number

1254
00:43:44,079 --> 00:43:46,240
two

1255
00:43:46,240 --> 00:43:48,319
and there we go one thing you'll notice

1256
00:43:48,319 --> 00:43:50,160
here is that there's not a space

1257
00:43:50,160 --> 00:43:52,240
after a question mark there and that's

1258
00:43:52,240 --> 00:43:54,319
because we didn't add one so whenever

1259
00:43:54,319 --> 00:43:56,079
you're concatenating your strings it's

1260
00:43:56,079 --> 00:43:57,920
important to remember that computers

1261
00:43:57,920 --> 00:44:01,040
can't assume that there are spaces

1262
00:44:01,040 --> 00:44:04,240
and we want to make sure that

1263
00:44:04,240 --> 00:44:07,200
those spaces are added in manually okay

1264
00:44:07,200 --> 00:44:08,880
here we are we have a space how many

1265
00:44:08,880 --> 00:44:09,760
cats do i own

1266
00:44:09,760 --> 00:44:12,880
two just for my own peace of mind

1267
00:44:12,880 --> 00:44:14,560
as you should always label your data i'm

1268
00:44:14,560 --> 00:44:17,520
going to say two cats

1269
00:44:17,520 --> 00:44:18,800
and you notice i put a space in the

1270
00:44:18,800 --> 00:44:20,160
beginning of cats because otherwise

1271
00:44:20,160 --> 00:44:22,400
there won't be a space there

1272
00:44:22,400 --> 00:44:24,720
here we've got i think this is awesome

1273
00:44:24,720 --> 00:44:26,240
the way that it is

1274
00:44:26,240 --> 00:44:28,319
i am going to show you how to add one

1275
00:44:28,319 --> 00:44:30,560
more piece of data which would be

1276
00:44:30,560 --> 00:44:32,960
the ages of their of the cats and it's

1277
00:44:32,960 --> 00:44:34,640
going to require us to use a little bit

1278
00:44:34,640 --> 00:44:36,000
of like

1279
00:44:36,000 --> 00:44:38,079
flexibility and maybe some creative

1280
00:44:38,079 --> 00:44:39,520
thinking in the way that we

1281
00:44:39,520 --> 00:44:41,760
put our data into our sketch i'm also

1282
00:44:41,760 --> 00:44:43,599
going to change the text size really

1283
00:44:43,599 --> 00:44:44,480
quickly just for

1284
00:44:44,480 --> 00:44:46,640
aesthetic purposes this is an art class

1285
00:44:46,640 --> 00:44:48,560
after all we got to be beautiful

1286
00:44:48,560 --> 00:44:51,599
okay so next i'm really interested in

1287
00:44:51,599 --> 00:44:52,160
knowing

1288
00:44:52,160 --> 00:44:55,280
how old each of the cats are so we're

1289
00:44:55,280 --> 00:44:55,760
gonna

1290
00:44:55,760 --> 00:44:59,599
create a variable called how old

1291
00:45:03,040 --> 00:45:04,720
and then we need to figure out what

1292
00:45:04,720 --> 00:45:06,960
we're going to add to that to create

1293
00:45:06,960 --> 00:45:11,760
our response so

1294
00:45:11,760 --> 00:45:14,640
you cannot just grab those values unless

1295
00:45:14,640 --> 00:45:16,240
you know the length

1296
00:45:16,240 --> 00:45:17,920
in the interest of efficiency we're

1297
00:45:17,920 --> 00:45:19,520
going to do this the right way

1298
00:45:19,520 --> 00:45:21,040
and the right way to do this would be

1299
00:45:21,040 --> 00:45:22,640
using an array so

1300
00:45:22,640 --> 00:45:24,079
this is our first introduction to the

1301
00:45:24,079 --> 00:45:25,920
concept of arrays we're actually not

1302
00:45:25,920 --> 00:45:27,680
going to revisit this at all through the

1303
00:45:27,680 --> 00:45:29,200
rest of our lecture

1304
00:45:29,200 --> 00:45:31,200
but it is a really key piece of

1305
00:45:31,200 --> 00:45:33,040
information if you're not familiar with

1306
00:45:33,040 --> 00:45:34,480
them

1307
00:45:34,480 --> 00:45:38,079
arrays are usually utilized to do the

1308
00:45:38,079 --> 00:45:40,960
work of an object but in a smaller way

1309
00:45:40,960 --> 00:45:43,359
that you can actually say the position

1310
00:45:43,359 --> 00:45:44,240
of that array

1311
00:45:44,240 --> 00:45:47,119
so for example if i was to list like one

1312
00:45:47,119 --> 00:45:47,760
two three

1313
00:45:47,760 --> 00:45:50,960
four five then i can actually call that

1314
00:45:50,960 --> 00:45:52,480
value and print it out

1315
00:45:52,480 --> 00:45:56,079
inside of our um

1316
00:45:56,480 --> 00:45:58,960
console like this let's say i'll do

1317
00:45:58,960 --> 00:46:00,800
print and then we'll do

1318
00:46:00,800 --> 00:46:03,839
ages at the position zero because the

1319
00:46:03,839 --> 00:46:05,839
computer always counts from zero

1320
00:46:05,839 --> 00:46:09,119
and then i will get the number one oh

1321
00:46:09,119 --> 00:46:09,520
wow

1322
00:46:09,520 --> 00:46:11,040
it's a little bit messy down there here

1323
00:46:11,040 --> 00:46:15,839
let me clean that up for you

1324
00:46:16,560 --> 00:46:18,720
i'll get the value 1 because that's the

1325
00:46:18,720 --> 00:46:20,160
first

1326
00:46:20,160 --> 00:46:23,280
position inside of the ages array

1327
00:46:23,280 --> 00:46:26,400
we are going to fill the ages array with

1328
00:46:26,400 --> 00:46:29,440
information from our javascript object

1329
00:46:29,440 --> 00:46:31,680
and we'll do that by pushing to the

1330
00:46:31,680 --> 00:46:32,800
array

1331
00:46:32,800 --> 00:46:36,079
each time we loop through our object

1332
00:46:36,079 --> 00:46:38,480
and we're going to do ages which is a

1333
00:46:38,480 --> 00:46:40,400
reference to that array

1334
00:46:40,400 --> 00:46:42,800
dot push which is telling the computer

1335
00:46:42,800 --> 00:46:45,200
to add a value to the end of that array

1336
00:46:45,200 --> 00:46:46,560
each and every time we go through the

1337
00:46:46,560 --> 00:46:47,359
loop

1338
00:46:47,359 --> 00:46:50,920
and then we're going to push the value

1339
00:46:50,920 --> 00:46:53,920
cats.mine

1340
00:46:54,480 --> 00:46:58,079
i dot age so now what we're telling the

1341
00:46:58,079 --> 00:46:58,720
computer is

1342
00:46:58,720 --> 00:47:02,240
every time you go through the um object

1343
00:47:02,240 --> 00:47:05,359
i want you to add the value of the

1344
00:47:05,359 --> 00:47:08,720
age at that position to the end of our

1345
00:47:08,720 --> 00:47:10,319
ages array

1346
00:47:10,319 --> 00:47:12,319
let's just check and see what our output

1347
00:47:12,319 --> 00:47:13,520
is by printing

1348
00:47:13,520 --> 00:47:15,839
the entire ages array so i'm going to do

1349
00:47:15,839 --> 00:47:16,960
print

1350
00:47:16,960 --> 00:47:19,520
and then ages we should see the value of

1351
00:47:19,520 --> 00:47:22,160
that array come up in our console

1352
00:47:22,160 --> 00:47:23,599
so now i hope you're understanding where

1353
00:47:23,599 --> 00:47:25,200
i'm coming from the

1354
00:47:25,200 --> 00:47:27,359
the ages of our cats inside of our

1355
00:47:27,359 --> 00:47:29,119
cats.json file

1356
00:47:29,119 --> 00:47:31,200
are eight and four and then we went

1357
00:47:31,200 --> 00:47:33,359
ahead and pushed those values using that

1358
00:47:33,359 --> 00:47:34,000
loop

1359
00:47:34,000 --> 00:47:37,280
to our array so let me jump back over um

1360
00:47:37,280 --> 00:47:38,960
here we are adding that value to the end

1361
00:47:38,960 --> 00:47:40,559
of our array each time we go through the

1362
00:47:40,559 --> 00:47:41,920
loop

1363
00:47:41,920 --> 00:47:47,280
so we could simply add ages

1364
00:47:47,760 --> 00:47:51,280
to that how old value and then

1365
00:47:51,280 --> 00:47:53,520
write that text inside of our sketch so

1366
00:47:53,520 --> 00:47:55,040
we'll say how old

1367
00:47:55,040 --> 00:47:57,839
and then we're saying it's at the x

1368
00:47:57,839 --> 00:47:58,559
position

1369
00:47:58,559 --> 00:48:01,760
of 30 because we want them to be aligned

1370
00:48:01,760 --> 00:48:03,280
and then the y position i'm going to

1371
00:48:03,280 --> 00:48:05,280
make 100 so that they're not overlapping

1372
00:48:05,280 --> 00:48:07,839
with each other

1373
00:48:07,839 --> 00:48:09,920
now we see how old are they eight and

1374
00:48:09,920 --> 00:48:10,880
four

1375
00:48:10,880 --> 00:48:12,720
but because we're going conversational

1376
00:48:12,720 --> 00:48:14,000
on this piece i'm gonna make it

1377
00:48:14,000 --> 00:48:15,040
conversational

1378
00:48:15,040 --> 00:48:18,000
the way i'll do that is just simply by

1379
00:48:18,000 --> 00:48:18,720
doing

1380
00:48:18,720 --> 00:48:21,760
ages at position zero

1381
00:48:21,760 --> 00:48:24,319
and then at the word and with a space on

1382
00:48:24,319 --> 00:48:26,240
either side

1383
00:48:26,240 --> 00:48:30,000
and then ages position one

1384
00:48:30,000 --> 00:48:32,160
and then you always label your data so

1385
00:48:32,160 --> 00:48:33,040
we'll say

1386
00:48:33,040 --> 00:48:36,319
years old so now we should see

1387
00:48:36,319 --> 00:48:38,319
when i refresh my sketch the question

1388
00:48:38,319 --> 00:48:40,400
how old are they and then the answer

1389
00:48:40,400 --> 00:48:43,760
eight and four years old so let's check

1390
00:48:43,760 --> 00:48:45,359
it and make sure it worked

1391
00:48:45,359 --> 00:48:48,720
here we go so i'm hoping that this will

1392
00:48:48,720 --> 00:48:50,400
give you the ability to understand the

1393
00:48:50,400 --> 00:48:52,160
basics of how to

1394
00:48:52,160 --> 00:48:54,559
move your way through a javascript

1395
00:48:54,559 --> 00:48:56,400
object using code

1396
00:48:56,400 --> 00:48:58,240
and it will also give you a familiarity

1397
00:48:58,240 --> 00:49:00,000
with the structure of a javascript

1398
00:49:00,000 --> 00:49:01,040
object

1399
00:49:01,040 --> 00:49:04,480
again the best way to use

1400
00:49:04,480 --> 00:49:07,599
your debugging skills is just printing

1401
00:49:07,599 --> 00:49:09,200
each and every time you feel like you're

1402
00:49:09,200 --> 00:49:10,800
lost where you don't know what your

1403
00:49:10,800 --> 00:49:11,920
response is

1404
00:49:11,920 --> 00:49:13,920
verifying in your console before you

1405
00:49:13,920 --> 00:49:15,280
move forward so that you make sure

1406
00:49:15,280 --> 00:49:16,960
you're getting what you need to get

1407
00:49:16,960 --> 00:49:18,400
so that's the basics of a javascript

1408
00:49:18,400 --> 00:49:21,040
object let's move on to

1409
00:49:21,040 --> 00:49:23,520
our next sketch i'm just going to create

1410
00:49:23,520 --> 00:49:25,839
a new one here

1411
00:49:25,839 --> 00:49:28,960
in our next example we're going to

1412
00:49:28,960 --> 00:49:32,720
start using an api um

1413
00:49:32,720 --> 00:49:36,000
using an api is

1414
00:49:36,000 --> 00:49:38,319
again our way of calling into the

1415
00:49:38,319 --> 00:49:40,240
internet to access a server

1416
00:49:40,240 --> 00:49:42,319
and then getting back a response

1417
00:49:42,319 --> 00:49:44,000
oftentimes you need a login

1418
00:49:44,000 --> 00:49:46,000
to get to an api that's because they

1419
00:49:46,000 --> 00:49:47,359
want to know what you're using the data

1420
00:49:47,359 --> 00:49:47,680
for

1421
00:49:47,680 --> 00:49:49,599
how often you're using the data and how

1422
00:49:49,599 --> 00:49:51,200
much data you're using because they'll

1423
00:49:51,200 --> 00:49:53,040
often charge you after a certain

1424
00:49:53,040 --> 00:49:55,760
level um we are just working with public

1425
00:49:55,760 --> 00:49:57,920
apis inside of this one so we don't need

1426
00:49:57,920 --> 00:49:59,280
any keys

1427
00:49:59,280 --> 00:50:00,640
this api that we're going to use is

1428
00:50:00,640 --> 00:50:04,400
called cat as a service dot com

1429
00:50:04,400 --> 00:50:07,520
and what it does is it sends you um

1430
00:50:07,520 --> 00:50:08,880
i don't know what i'm doing here it

1431
00:50:08,880 --> 00:50:12,240
sends you a random image file

1432
00:50:12,240 --> 00:50:15,040
based on some parameters you put into

1433
00:50:15,040 --> 00:50:16,160
that api

1434
00:50:16,160 --> 00:50:18,880
so let's start by just creating a

1435
00:50:18,880 --> 00:50:21,200
variable called

1436
00:50:21,200 --> 00:50:24,480
image url and that will be

1437
00:50:24,480 --> 00:50:29,839
how we access the api and then

1438
00:50:29,839 --> 00:50:35,520
the basic api call for this service

1439
00:50:35,520 --> 00:50:40,720
is cat as a service dot com backslash

1440
00:50:40,720 --> 00:50:41,839
cat

1441
00:50:41,839 --> 00:50:45,520
and this call will send back

1442
00:50:45,520 --> 00:50:48,000
an image so in just the same way that we

1443
00:50:48,000 --> 00:50:50,160
could use this to load in a json file

1444
00:50:50,160 --> 00:50:52,079
just like we did before we're going to

1445
00:50:52,079 --> 00:50:54,480
use this to load in a

1446
00:50:54,480 --> 00:50:57,680
image file instead and in fact as

1447
00:50:57,680 --> 00:50:59,119
is always the case we want to do this

1448
00:50:59,119 --> 00:51:02,160
all in preload

1449
00:51:03,440 --> 00:51:04,640
preload just means we're running it

1450
00:51:04,640 --> 00:51:06,480
before our sketch starts where a setup

1451
00:51:06,480 --> 00:51:07,119
happens

1452
00:51:07,119 --> 00:51:09,920
on the load of the image um on the load

1453
00:51:09,920 --> 00:51:11,280
of the canvas and so we always want to

1454
00:51:11,280 --> 00:51:11,839
make sure

1455
00:51:11,839 --> 00:51:13,839
we are accessing the api and getting the

1456
00:51:13,839 --> 00:51:14,880
information back

1457
00:51:14,880 --> 00:51:17,839
before we start drawing anything okay so

1458
00:51:17,839 --> 00:51:20,160
we've got our image url

1459
00:51:20,160 --> 00:51:23,359
then i'm going to

1460
00:51:23,359 --> 00:51:26,079
uh create a variable for our image like

1461
00:51:26,079 --> 00:51:26,880
we always do

1462
00:51:26,880 --> 00:51:30,240
so what image image

1463
00:51:30,240 --> 00:51:32,800
equals load image hopefully this is

1464
00:51:32,800 --> 00:51:34,720
feeling familiar both from last week and

1465
00:51:34,720 --> 00:51:36,720
from loading the javascript object that

1466
00:51:36,720 --> 00:51:38,160
we just loaded

1467
00:51:38,160 --> 00:51:39,520
and then here we're just going to load

1468
00:51:39,520 --> 00:51:41,839
image url since you'll remember

1469
00:51:41,839 --> 00:51:44,000
load image can work on a local file and

1470
00:51:44,000 --> 00:51:45,839
it can also work on a file you grab from

1471
00:51:45,839 --> 00:51:47,040
the internet

1472
00:51:47,040 --> 00:51:48,960
and then last but not least we want to

1473
00:51:48,960 --> 00:51:50,800
make sure that we actually have the

1474
00:51:50,800 --> 00:51:52,400
image that we think we got

1475
00:51:52,400 --> 00:51:56,480
so let's do image which is the

1476
00:51:56,480 --> 00:51:59,520
call in p5.js to get our image the name

1477
00:51:59,520 --> 00:52:01,040
of our image variable

1478
00:52:01,040 --> 00:52:04,240
and then the position zero zero and then

1479
00:52:04,240 --> 00:52:05,839
hopefully when we load this

1480
00:52:05,839 --> 00:52:08,640
we'll get a random picture of a cat i

1481
00:52:08,640 --> 00:52:10,160
see some problems with this

1482
00:52:10,160 --> 00:52:13,520
um the main one being that our cat

1483
00:52:13,520 --> 00:52:16,240
is not fully fitting inside of our

1484
00:52:16,240 --> 00:52:17,119
screen

1485
00:52:17,119 --> 00:52:18,800
and that's because his dimensions don't

1486
00:52:18,800 --> 00:52:21,200
match the dimensions of our canvas

1487
00:52:21,200 --> 00:52:22,640
and this is where we can start getting

1488
00:52:22,640 --> 00:52:25,119
into the api call information

1489
00:52:25,119 --> 00:52:27,920
so every ap api call is structured

1490
00:52:27,920 --> 00:52:28,720
differently

1491
00:52:28,720 --> 00:52:31,119
this one happens to be structured like

1492
00:52:31,119 --> 00:52:32,720
this so we're going to do

1493
00:52:32,720 --> 00:52:35,440
um question mark after cat that's how we

1494
00:52:35,440 --> 00:52:37,520
delineate our first

1495
00:52:37,520 --> 00:52:39,839
value in the avi call and then we're

1496
00:52:39,839 --> 00:52:41,280
going to say width

1497
00:52:41,280 --> 00:52:43,920
which is the width of the image we

1498
00:52:43,920 --> 00:52:44,720
received back

1499
00:52:44,720 --> 00:52:47,680
and then because our canvas is size 400

1500
00:52:47,680 --> 00:52:50,800
we're gonna size our image to that same

1501
00:52:50,800 --> 00:52:53,680
dimension so let's see what we get now

1502
00:52:53,680 --> 00:52:54,480
cool

1503
00:52:54,480 --> 00:52:56,960
really cool we get this cute little cat

1504
00:52:56,960 --> 00:52:57,680
and

1505
00:52:57,680 --> 00:53:00,480
he is fitting inside of our canvas

1506
00:53:00,480 --> 00:53:01,760
awesome

1507
00:53:01,760 --> 00:53:04,160
unfortunately the way this api works is

1508
00:53:04,160 --> 00:53:05,760
that it will serve us the same

1509
00:53:05,760 --> 00:53:09,040
image no matter what based on our api

1510
00:53:09,040 --> 00:53:10,800
call so no matter how many times i run

1511
00:53:10,800 --> 00:53:13,760
cat as a service dot com slash cat i

1512
00:53:13,760 --> 00:53:15,520
always get that same picture of that

1513
00:53:15,520 --> 00:53:16,640
tabby cat

1514
00:53:16,640 --> 00:53:20,079
i don't want that so i'm gonna do two

1515
00:53:20,079 --> 00:53:23,280
little pieces of like clever code

1516
00:53:23,280 --> 00:53:28,400
to get us some different cats just

1517
00:53:28,400 --> 00:53:30,559
like with our string concatenating

1518
00:53:30,559 --> 00:53:32,480
inside of that javascript object work we

1519
00:53:32,480 --> 00:53:33,040
just did

1520
00:53:33,040 --> 00:53:35,040
we can do the same thing to make our api

1521
00:53:35,040 --> 00:53:38,160
calls so i'm going to create a variable

1522
00:53:38,160 --> 00:53:43,839
called random size

1523
00:53:44,079 --> 00:53:49,359
and we are going to add that in to our

1524
00:53:50,960 --> 00:53:54,160
api call so now what we're doing is

1525
00:53:54,160 --> 00:53:54,720
saying

1526
00:53:54,720 --> 00:53:57,599
i want this image to be sized however

1527
00:53:57,599 --> 00:54:00,240
randomly we put in for this variable

1528
00:54:00,240 --> 00:54:02,079
and then send me back whatever you get

1529
00:54:02,079 --> 00:54:04,000
based on that random number

1530
00:54:04,000 --> 00:54:05,200
i don't want these images to be

1531
00:54:05,200 --> 00:54:07,119
stretched out too much so we're going to

1532
00:54:07,119 --> 00:54:07,599
stay

1533
00:54:07,599 --> 00:54:09,280
kind of in the neighborhood of 400

1534
00:54:09,280 --> 00:54:12,160
pixels but we'll still get a lot more

1535
00:54:12,160 --> 00:54:15,280
um randomness more generativeness just

1536
00:54:15,280 --> 00:54:17,760
by adding this random value

1537
00:54:17,760 --> 00:54:20,800
and we're going to do random from 350

1538
00:54:20,800 --> 00:54:23,119
to 600 because it's all still very much

1539
00:54:23,119 --> 00:54:24,000
in the neighborhood

1540
00:54:24,000 --> 00:54:26,880
of our 400 pixel wide canvas not super

1541
00:54:26,880 --> 00:54:27,599
huge

1542
00:54:27,599 --> 00:54:29,040
not super small so we're not going to

1543
00:54:29,040 --> 00:54:30,960
get any weird artifacts from moving that

1544
00:54:30,960 --> 00:54:33,680
image size

1545
00:54:35,440 --> 00:54:38,160
so cute um now we've got this cute

1546
00:54:38,160 --> 00:54:39,839
little piece of cat sushi

1547
00:54:39,839 --> 00:54:42,079
but you see here unfortunately our cat

1548
00:54:42,079 --> 00:54:43,359
sushi does not fit

1549
00:54:43,359 --> 00:54:46,480
inside of our canvas the last thing

1550
00:54:46,480 --> 00:54:47,200
we're going to do

1551
00:54:47,200 --> 00:54:49,040
to add a little bit more complexity to

1552
00:54:49,040 --> 00:54:50,839
this api call

1553
00:54:50,839 --> 00:54:54,480
is adding the value

1554
00:54:54,480 --> 00:54:57,839
for type and then square

1555
00:54:57,839 --> 00:54:59,359
all of this stuff comes straight from

1556
00:54:59,359 --> 00:55:01,280
the documentation for this api

1557
00:55:01,280 --> 00:55:02,480
and that's where you'll have to go

1558
00:55:02,480 --> 00:55:04,319
anytime you want to use an api so i kind

1559
00:55:04,319 --> 00:55:05,599
of already worked out the kinks on this

1560
00:55:05,599 --> 00:55:06,160
one

1561
00:55:06,160 --> 00:55:08,319
i'm showing you directly how to use it

1562
00:55:08,319 --> 00:55:10,319
but always this just comes down to

1563
00:55:10,319 --> 00:55:11,599
reading the documentation

1564
00:55:11,599 --> 00:55:13,680
and understanding what the api calls are

1565
00:55:13,680 --> 00:55:15,520
actually looking for

1566
00:55:15,520 --> 00:55:18,079
so now what i'm asking for is i want our

1567
00:55:18,079 --> 00:55:20,240
api to send us back a square image

1568
00:55:20,240 --> 00:55:22,720
that is randomly sized and because i

1569
00:55:22,720 --> 00:55:24,400
know that image is square

1570
00:55:24,400 --> 00:55:27,440
i can utilize our image command in p5.js

1571
00:55:27,440 --> 00:55:29,599
to make that image fit our canvas every

1572
00:55:29,599 --> 00:55:30,640
single time

1573
00:55:30,640 --> 00:55:33,200
so we're going to make it at the widest

1574
00:55:33,200 --> 00:55:35,119
point as wide as the width of our canvas

1575
00:55:35,119 --> 00:55:36,799
and at the tallest point as tall as the

1576
00:55:36,799 --> 00:55:38,799
height of our canvas so now no matter

1577
00:55:38,799 --> 00:55:39,599
what happens

1578
00:55:39,599 --> 00:55:42,559
our p5.js sketch is going to do the math

1579
00:55:42,559 --> 00:55:44,319
to make those images the same size as

1580
00:55:44,319 --> 00:55:45,119
our canvas

1581
00:55:45,119 --> 00:55:49,839
so let's give it a try

1582
00:55:54,240 --> 00:55:56,880
wow what a majestic cat and now you can

1583
00:55:56,880 --> 00:55:57,760
run this

1584
00:55:57,760 --> 00:55:59,920
a bunch of times and no matter what

1585
00:55:59,920 --> 00:56:01,839
happens you'll get a different image of

1586
00:56:01,839 --> 00:56:03,280
a cat unless of course you run it so

1587
00:56:03,280 --> 00:56:04,240
many times you see

1588
00:56:04,240 --> 00:56:05,839
every one of these random numbers

1589
00:56:05,839 --> 00:56:10,400
between 350 pixels and 600 pixels but

1590
00:56:10,400 --> 00:56:13,119
that should get you to the understanding

1591
00:56:13,119 --> 00:56:15,200
of how to utilize an api call

1592
00:56:15,200 --> 00:56:17,440
how to structure an api call inside of

1593
00:56:17,440 --> 00:56:18,240
your code

1594
00:56:18,240 --> 00:56:19,920
and then how to start using that to do

1595
00:56:19,920 --> 00:56:23,760
some generative work in our code

1596
00:56:23,760 --> 00:56:26,319
the last thing we're going to do is

1597
00:56:26,319 --> 00:56:29,040
pretty advanced so buckle up

1598
00:56:29,040 --> 00:56:32,319
we're going to use the usgs api

1599
00:56:32,319 --> 00:56:35,119
to create a map of all of the

1600
00:56:35,119 --> 00:56:36,400
earthquakes that have happened in the

1601
00:56:36,400 --> 00:56:37,680
last month

1602
00:56:37,680 --> 00:56:40,799
so we're going to start basic

1603
00:56:40,799 --> 00:56:43,040
we're going to start basic with just an

1604
00:56:43,040 --> 00:56:45,440
api call to the usgs

1605
00:56:45,440 --> 00:56:47,119
service so you'll remember the first

1606
00:56:47,119 --> 00:56:49,440
thing we need to do is make it

1607
00:56:49,440 --> 00:56:52,079
preload

1608
00:56:55,760 --> 00:56:58,000
and then we will create a variable that

1609
00:56:58,000 --> 00:56:59,440
holds our url

1610
00:56:59,440 --> 00:57:03,119
so let url

1611
00:57:03,200 --> 00:57:07,119
the url is our api call so i'm going to

1612
00:57:07,119 --> 00:57:08,880
type this all out for you again this

1613
00:57:08,880 --> 00:57:10,400
comes straight from the documentation

1614
00:57:10,400 --> 00:57:11,119
for this

1615
00:57:11,119 --> 00:57:13,119
api so if you're ever curious about this

1616
00:57:13,119 --> 00:57:15,119
or you're looking to do an application

1617
00:57:15,119 --> 00:57:16,880
with an api you always want to consult

1618
00:57:16,880 --> 00:57:27,280
the documents

1619
00:57:27,280 --> 00:57:32,160
fds nws

1620
00:57:34,400 --> 00:57:36,000
and now we're getting into the actual

1621
00:57:36,000 --> 00:57:38,160
api part of the api call the first part

1622
00:57:38,160 --> 00:57:39,359
is just like all the garbage that we

1623
00:57:39,359 --> 00:57:40,000
need to get

1624
00:57:40,000 --> 00:57:42,000
to get to there and now what we're going

1625
00:57:42,000 --> 00:57:45,359
to tell it is we want

1626
00:57:45,359 --> 00:57:47,920
our file formatted in what they called

1627
00:57:47,920 --> 00:57:49,680
geojson

1628
00:57:49,680 --> 00:57:51,839
and you can get a return from this

1629
00:57:51,839 --> 00:57:53,599
specific api in a couple of different

1630
00:57:53,599 --> 00:57:55,040
file formats which is why we have to

1631
00:57:55,040 --> 00:57:56,000
specify

1632
00:57:56,000 --> 00:57:59,680
and then we're going to say start time

1633
00:58:00,000 --> 00:58:03,440
for our returned call just to keep our

1634
00:58:03,440 --> 00:58:04,480
data small

1635
00:58:04,480 --> 00:58:05,920
and then we're going to add a variable

1636
00:58:05,920 --> 00:58:08,400
start date to this call

1637
00:58:08,400 --> 00:58:10,000
so of course i need to initialize that

1638
00:58:10,000 --> 00:58:12,480
variable

1639
00:58:14,640 --> 00:58:16,480
you can always change this variable i'm

1640
00:58:16,480 --> 00:58:17,680
going to set it to a month

1641
00:58:17,680 --> 00:58:20,559
ago from the time that i'm recording

1642
00:58:20,559 --> 00:58:20,880
this

1643
00:58:20,880 --> 00:58:24,559
so i pre-record them um

1644
00:58:26,400 --> 00:58:30,880
and then we are going to go to

1645
00:58:31,359 --> 00:58:36,319
209 14.

1646
00:58:36,319 --> 00:58:39,119
um which is like a week ago two weeks

1647
00:58:39,119 --> 00:58:40,720
ago for me right now

1648
00:58:40,720 --> 00:58:43,200
um and then what's gonna happen is it

1649
00:58:43,200 --> 00:58:45,040
will fill this date into the api call

1650
00:58:45,040 --> 00:58:46,559
just like we did with the cats

1651
00:58:46,559 --> 00:58:48,960
and it will return all of the data for

1652
00:58:48,960 --> 00:58:50,000
all of the earthquakes that

1653
00:58:50,000 --> 00:58:52,480
usgs has collected over that amount of

1654
00:58:52,480 --> 00:58:53,599
time

1655
00:58:53,599 --> 00:58:55,760
and this is just again part of their

1656
00:58:55,760 --> 00:58:57,440
documentation that's the date format

1657
00:58:57,440 --> 00:58:59,760
they ask for us to use

1658
00:58:59,760 --> 00:59:03,040
last we're going to load our json and

1659
00:59:03,040 --> 00:59:04,640
you'll remember we need to give that a

1660
00:59:04,640 --> 00:59:06,400
variable name as well so we're going to

1661
00:59:06,400 --> 00:59:09,440
call it earthquakes

1662
00:59:10,319 --> 00:59:13,760
and then we're going to say earthquakes

1663
00:59:13,760 --> 00:59:18,319
equals low json

1664
00:59:18,319 --> 00:59:22,160
and then url so here we have an

1665
00:59:22,160 --> 00:59:25,119
api call that's structured based on a

1666
00:59:25,119 --> 00:59:26,720
variable we've inputted

1667
00:59:26,720 --> 00:59:30,640
and we are returning that api call in

1668
00:59:30,640 --> 00:59:33,760
the form of a json file

1669
00:59:33,760 --> 00:59:36,079
if i do this i should get nothing just

1670
00:59:36,079 --> 00:59:37,920
gray background like we always get

1671
00:59:37,920 --> 00:59:39,200
see you'll notice here it's taking a

1672
00:59:39,200 --> 00:59:40,960
while to load which is why we're

1673
00:59:40,960 --> 00:59:42,559
pre-loading everything

1674
00:59:42,559 --> 00:59:44,000
and also why we're keeping that file

1675
00:59:44,000 --> 00:59:46,079
small using that start date

1676
00:59:46,079 --> 00:59:48,400
in order to verify that i have the file

1677
00:59:48,400 --> 00:59:49,839
that i want to have and it looks the way

1678
00:59:49,839 --> 00:59:50,880
i want it to look

1679
00:59:50,880 --> 00:59:52,799
i am going to print that file so we're

1680
00:59:52,799 --> 00:59:55,520
going to print the entire

1681
00:59:55,520 --> 00:59:57,200
earthquakes json file so now you

1682
00:59:57,200 --> 00:59:58,640
understand what i meant when i said if

1683
00:59:58,640 --> 01:00:00,240
you're debugging your json

1684
01:00:00,240 --> 01:00:01,760
objects you want to make sure that you

1685
01:00:01,760 --> 01:00:03,119
are just printing them out and then

1686
01:00:03,119 --> 01:00:04,480
looking at them manually so you can get

1687
01:00:04,480 --> 01:00:06,720
an idea for the structure of them

1688
01:00:06,720 --> 01:00:09,760
and as i open up this file i see

1689
01:00:09,760 --> 01:00:12,640
there are a couple of sub sections here

1690
01:00:12,640 --> 01:00:14,240
we've got metadata

1691
01:00:14,240 --> 01:00:16,000
which is information about the actual

1692
01:00:16,000 --> 01:00:17,359
call

1693
01:00:17,359 --> 01:00:19,680
we have features which is information

1694
01:00:19,680 --> 01:00:21,040
about all of the

1695
01:00:21,040 --> 01:00:23,040
earthquakes wow it's a big file so it's

1696
01:00:23,040 --> 01:00:24,400
taking a while to open

1697
01:00:24,400 --> 01:00:27,520
and then each of these is an earthquake

1698
01:00:27,520 --> 01:00:29,200
so we can see

1699
01:00:29,200 --> 01:00:30,960
what the magnitude of that earthquake

1700
01:00:30,960 --> 01:00:33,839
was they have their own time coding here

1701
01:00:33,839 --> 01:00:36,880
you can get some typed out information

1702
01:00:36,880 --> 01:00:38,559
of where that was located

1703
01:00:38,559 --> 01:00:40,400
and then inside of the geometry we get

1704
01:00:40,400 --> 01:00:42,000
to see the type

1705
01:00:42,000 --> 01:00:43,760
of earthquake if you're an earthquake

1706
01:00:43,760 --> 01:00:45,520
nerd and you want to know the type

1707
01:00:45,520 --> 01:00:48,960
and then we also can see the coordinates

1708
01:00:48,960 --> 01:00:51,200
that's what really intrigues me about

1709
01:00:51,200 --> 01:00:54,240
this api call is the gps coordinates

1710
01:00:54,240 --> 01:00:56,240
and these are actually reversed so

1711
01:00:56,240 --> 01:00:57,440
typically you see

1712
01:00:57,440 --> 01:00:59,839
latitude longitude and this is the

1713
01:00:59,839 --> 01:01:01,599
longitude value and this is the latitude

1714
01:01:01,599 --> 01:01:02,880
value so we have to use our brains a

1715
01:01:02,880 --> 01:01:04,400
little bit on this one

1716
01:01:04,400 --> 01:01:08,559
um let me minimize my console

1717
01:01:08,559 --> 01:01:10,720
oh of course i cleared that out like a

1718
01:01:10,720 --> 01:01:11,680
dope

1719
01:01:11,680 --> 01:01:14,079
um i'm going to type out how you would

1720
01:01:14,079 --> 01:01:15,920
type out that command

1721
01:01:15,920 --> 01:01:19,359
and always like i said i print it first

1722
01:01:19,359 --> 01:01:21,280
to confirm that i'm getting back what i

1723
01:01:21,280 --> 01:01:22,640
expected to get

1724
01:01:22,640 --> 01:01:26,319
so i'm going to print here the word lat

1725
01:01:26,319 --> 01:01:29,599
and then i am going to add

1726
01:01:29,599 --> 01:01:33,040
the javascript object for just the first

1727
01:01:33,040 --> 01:01:35,359
of those earthquakes so i can confirm

1728
01:01:35,359 --> 01:01:36,799
that i'm actually getting the latitude

1729
01:01:36,799 --> 01:01:39,119
and the longitude of the earthquake

1730
01:01:39,119 --> 01:01:42,240
so here we have earthquakes

1731
01:01:42,240 --> 01:01:45,359
dot features and then it's position

1732
01:01:45,359 --> 01:01:47,760
zero so you see when we expand this out

1733
01:01:47,760 --> 01:01:49,520
and i go to features

1734
01:01:49,520 --> 01:01:51,440
that features is actually a numbered

1735
01:01:51,440 --> 01:01:52,799
array so we're going to pick

1736
01:01:52,799 --> 01:01:55,680
the first which is zero inside of that

1737
01:01:55,680 --> 01:01:57,359
numbered array

1738
01:01:57,359 --> 01:02:01,680
and i'm going to say properties

1739
01:02:02,000 --> 01:02:03,280
oh just kidding we're going to use

1740
01:02:03,280 --> 01:02:05,280
geometry right so we've got properties

1741
01:02:05,280 --> 01:02:06,720
we've got geometry

1742
01:02:06,720 --> 01:02:09,598
geometry

1743
01:02:09,920 --> 01:02:12,160
and then inside of geometry we have to

1744
01:02:12,160 --> 01:02:15,200
go to coordinates

1745
01:02:16,319 --> 01:02:18,319
and then coordinates is another array so

1746
01:02:18,319 --> 01:02:20,720
i'm going to set that one equal to

1747
01:02:20,720 --> 01:02:24,640
the value of 1 because as i said

1748
01:02:24,640 --> 01:02:26,640
this value is what we're looking for for

1749
01:02:26,640 --> 01:02:28,880
our latitude

1750
01:02:28,880 --> 01:02:31,200
and then i'm going to do the exact same

1751
01:02:31,200 --> 01:02:32,720
thing so i'm even going to copy and

1752
01:02:32,720 --> 01:02:34,000
paste it

1753
01:02:34,000 --> 01:02:36,000
to get our longitude the only thing

1754
01:02:36,000 --> 01:02:37,359
that's different is that

1755
01:02:37,359 --> 01:02:40,880
the coordinates array value sorry that's

1756
01:02:40,880 --> 01:02:42,559
a little bit awkwardly squished there

1757
01:02:42,559 --> 01:02:44,160
the coordinates array value is going to

1758
01:02:44,160 --> 01:02:47,839
be equal to 0 rather than being equal to

1759
01:02:47,839 --> 01:02:49,359
let's confirm that we got what we

1760
01:02:49,359 --> 01:02:50,720
expected to get i'm going to take a

1761
01:02:50,720 --> 01:02:51,839
little

1762
01:02:51,839 --> 01:02:53,599
nose at these numbers here to make sure

1763
01:02:53,599 --> 01:02:55,359
i can go back and verify them

1764
01:02:55,359 --> 01:02:58,480
so it looks like the first earthquake in

1765
01:02:58,480 --> 01:02:59,440
my time span

1766
01:02:59,440 --> 01:03:02,559
which may be different than yours is

1767
01:03:02,559 --> 01:03:07,839
uh 122 minus 122.8

1768
01:03:07,839 --> 01:03:11,200
longitude oh

1769
01:03:11,440 --> 01:03:14,839
and then 38.794

1770
01:03:14,839 --> 01:03:18,000
latitude right that's right

1771
01:03:18,000 --> 01:03:21,760
yeah one for latitude zero for longitude

1772
01:03:21,760 --> 01:03:24,400
and i had to go up there and change the

1773
01:03:24,400 --> 01:03:25,599
longitude because i

1774
01:03:25,599 --> 01:03:27,599
forgot to do that when i copy pasted

1775
01:03:27,599 --> 01:03:29,680
bonus points if you caught that

1776
01:03:29,680 --> 01:03:31,760
so let's go ahead and run this and then

1777
01:03:31,760 --> 01:03:33,119
check our console to make sure we got

1778
01:03:33,119 --> 01:03:34,559
the numbers that we expected to get so

1779
01:03:34,559 --> 01:03:36,000
negative 122

1780
01:03:36,000 --> 01:03:39,200
for longitude and 38.79 for latitude

1781
01:03:39,200 --> 01:03:42,559
we're awesome so far so good so now we

1782
01:03:42,559 --> 01:03:43,280
have

1783
01:03:43,280 --> 01:03:46,559
this canvas and we have our api call

1784
01:03:46,559 --> 01:03:47,920
that's running

1785
01:03:47,920 --> 01:03:51,520
i want to do something wild and put them

1786
01:03:51,520 --> 01:03:52,640
on a map

1787
01:03:52,640 --> 01:03:54,559
so i went ahead and grabbed this world

1788
01:03:54,559 --> 01:03:55,839
map from google

1789
01:03:55,839 --> 01:03:57,440
you can go pick whatever world map you

1790
01:03:57,440 --> 01:03:59,680
want this is just the one that i liked

1791
01:03:59,680 --> 01:04:03,200
and when i load that over into my canvas

1792
01:04:03,200 --> 01:04:04,799
it's not going to fit because it's a

1793
01:04:04,799 --> 01:04:06,799
giant file so

1794
01:04:06,799 --> 01:04:08,880
i happen to know how big that file is

1795
01:04:08,880 --> 01:04:09,920
and i'm going to do a quick little

1796
01:04:09,920 --> 01:04:11,920
conversion to make that file fit onto my

1797
01:04:11,920 --> 01:04:12,799
canvas

1798
01:04:12,799 --> 01:04:14,640
that partly requires me to resize my

1799
01:04:14,640 --> 01:04:15,920
canvas

1800
01:04:15,920 --> 01:04:18,480
because the aspect ratio the width

1801
01:04:18,480 --> 01:04:19,920
versus the height of this

1802
01:04:19,920 --> 01:04:23,599
image is not um square so i'm going to

1803
01:04:23,599 --> 01:04:24,240
make my

1804
01:04:24,240 --> 01:04:26,720
aspect ratio of my sketch equal to the

1805
01:04:26,720 --> 01:04:29,280
dimensions of my file

1806
01:04:29,280 --> 01:04:30,880
so now i have this map of the world

1807
01:04:30,880 --> 01:04:32,559
that's displaying on my sketch

1808
01:04:32,559 --> 01:04:35,280
i happen to pick one that has a

1809
01:04:35,280 --> 01:04:36,480
transparent background

1810
01:04:36,480 --> 01:04:39,119
it was on wikipedia so if i wanted to i

1811
01:04:39,119 --> 01:04:40,160
could change the size

1812
01:04:40,160 --> 01:04:41,839
or the color of this background so i

1813
01:04:41,839 --> 01:04:43,599
could make it like totally white

1814
01:04:43,599 --> 01:04:44,960
and now you'll see when the sketch

1815
01:04:44,960 --> 01:04:46,799
refreshes i get a white background on a

1816
01:04:46,799 --> 01:04:47,520
gray world

1817
01:04:47,520 --> 01:04:52,160
so very cool very simple very beautiful

1818
01:04:52,160 --> 01:04:54,880
i am going to start actually putting

1819
01:04:54,880 --> 01:04:55,760
that data

1820
01:04:55,760 --> 01:04:58,400
into some form that we can use to make

1821
01:04:58,400 --> 01:05:00,400
our generative art piece

1822
01:05:00,400 --> 01:05:03,839
and that requires us to take

1823
01:05:03,839 --> 01:05:06,880
these coordinate geometries and then the

1824
01:05:06,880 --> 01:05:09,280
magnitude and actually put it into

1825
01:05:09,280 --> 01:05:10,880
a loop sort of similar to the one that

1826
01:05:10,880 --> 01:05:14,319
we made in our other json exploration

1827
01:05:14,319 --> 01:05:16,480
and the way that we're going to do that

1828
01:05:16,480 --> 01:05:17,599
is

1829
01:05:17,599 --> 01:05:21,680
um i'm actually going to make

1830
01:05:21,680 --> 01:05:24,880
the loop here so 4

1831
01:05:24,880 --> 01:05:28,799
variable i of

1832
01:05:28,799 --> 01:05:33,359
and then oh sorry in earthquakes

1833
01:05:34,640 --> 01:05:37,839
and then inside of this we're going to

1834
01:05:37,839 --> 01:05:40,559
create a variable for our latitude our

1835
01:05:40,559 --> 01:05:41,520
longitude

1836
01:05:41,520 --> 01:05:44,960
and then our magnitude

1837
01:05:44,960 --> 01:05:47,119
and i'm actually going to take this

1838
01:05:47,119 --> 01:05:48,559
sorry down to

1839
01:05:48,559 --> 01:05:51,280
our draw function so that each and every

1840
01:05:51,280 --> 01:05:51,680
time

1841
01:05:51,680 --> 01:05:53,599
we loop we also go ahead and draw a

1842
01:05:53,599 --> 01:05:55,599
circle for each of those

1843
01:05:55,599 --> 01:05:58,799
um latitudes and longitudes

1844
01:05:58,799 --> 01:05:59,839
so we want to make sure that we are

1845
01:05:59,839 --> 01:06:02,240
looping through this one

1846
01:06:02,240 --> 01:06:05,839
so we've got our latitude and longitude

1847
01:06:05,839 --> 01:06:07,520
i'm going to make us a variable for each

1848
01:06:07,520 --> 01:06:07,920
of them

1849
01:06:07,920 --> 01:06:11,520
so lats lunge

1850
01:06:11,520 --> 01:06:13,839
and then we want one for magnitude so

1851
01:06:13,839 --> 01:06:15,200
magnitude

1852
01:06:15,200 --> 01:06:17,119
see we're getting complex fast on this

1853
01:06:17,119 --> 01:06:18,880
one all right so

1854
01:06:18,880 --> 01:06:21,520
we know that our latitude is equal to

1855
01:06:21,520 --> 01:06:22,640
this value up here

1856
01:06:22,640 --> 01:06:25,359
earthquakes

1857
01:06:26,720 --> 01:06:30,079
features and then

1858
01:06:30,079 --> 01:06:31,680
we're going to look at all of the

1859
01:06:31,680 --> 01:06:33,680
variables or all of the values inside of

1860
01:06:33,680 --> 01:06:35,119
the features object which is why we're

1861
01:06:35,119 --> 01:06:38,000
looping through them

1862
01:06:38,079 --> 01:06:39,359
and then inside of features we know it

1863
01:06:39,359 --> 01:06:41,839
lives in geometry

1864
01:06:41,839 --> 01:06:43,920
and it's position one inside of the

1865
01:06:43,920 --> 01:06:45,280
coordinates array

1866
01:06:45,280 --> 01:06:47,359
so that's how we get our latitude value

1867
01:06:47,359 --> 01:06:50,079
now we want our longitude value

1868
01:06:50,079 --> 01:06:53,839
which is the same thing earthquakes

1869
01:06:53,839 --> 01:06:56,960
features i

1870
01:06:56,960 --> 01:07:00,799
geometry coordinates

1871
01:07:00,799 --> 01:07:04,880
and then zero and then last we're gonna

1872
01:07:04,880 --> 01:07:08,319
fill our variable called mag oh

1873
01:07:08,319 --> 01:07:09,839
mag looks like it has another value so

1874
01:07:09,839 --> 01:07:11,359
i'm gonna call it mag

1875
01:07:11,359 --> 01:07:15,440
with an n magnum

1876
01:07:15,440 --> 01:07:18,559
uh magnitude which is equal to

1877
01:07:18,559 --> 01:07:22,480
earthquakes features

1878
01:07:22,480 --> 01:07:24,079
and then i because we're looping through

1879
01:07:24,079 --> 01:07:27,280
it and then instead of going to geometry

1880
01:07:27,280 --> 01:07:28,720
inside of our object we're going to go

1881
01:07:28,720 --> 01:07:30,319
to properties like we talked about

1882
01:07:30,319 --> 01:07:30,799
before

1883
01:07:30,799 --> 01:07:34,799
properties and then just the word

1884
01:07:34,799 --> 01:07:38,559
mag cool so now we have

1885
01:07:38,559 --> 01:07:40,559
a variable latitude longitude and

1886
01:07:40,559 --> 01:07:42,000
magnitude that's set

1887
01:07:42,000 --> 01:07:45,680
equal to the value that we're at

1888
01:07:45,680 --> 01:07:47,920
inside of our loop so we're going to

1889
01:07:47,920 --> 01:07:48,960
create a variable

1890
01:07:48,960 --> 01:07:52,880
a variable for x and a variable for y

1891
01:07:53,440 --> 01:07:56,559
this should feel very familiar

1892
01:07:56,559 --> 01:08:00,559
and we are going to set them equal to

1893
01:08:00,559 --> 01:08:02,400
our latitude and longitude but with a

1894
01:08:02,400 --> 01:08:03,760
little bit of

1895
01:08:03,760 --> 01:08:06,000
math involved so this is just like a

1896
01:08:06,000 --> 01:08:07,280
standard calculation

1897
01:08:07,280 --> 01:08:11,760
for um changing things to the size

1898
01:08:11,760 --> 01:08:14,799
of your canvas for anything latitude and

1899
01:08:14,799 --> 01:08:16,319
longitude related the first thing we're

1900
01:08:16,319 --> 01:08:16,880
going to do

1901
01:08:16,880 --> 01:08:20,238
is the width of our canvas which is 716

1902
01:08:20,238 --> 01:08:22,000
divided by the number 360. we're

1903
01:08:22,000 --> 01:08:23,520
basically converting things that go on a

1904
01:08:23,520 --> 01:08:24,158
circle

1905
01:08:24,158 --> 01:08:26,319
to a flat surface and then the next

1906
01:08:26,319 --> 01:08:28,000
thing we're going to do is multiply that

1907
01:08:28,000 --> 01:08:31,120
by 180

1908
01:08:31,120 --> 01:08:34,880
um we want this all to be in parentheses

1909
01:08:34,880 --> 01:08:38,479
180 plus the longitude

1910
01:08:38,479 --> 01:08:40,238
and this will give us like a rough

1911
01:08:40,238 --> 01:08:41,759
approximation

1912
01:08:41,759 --> 01:08:44,719
of that conversion but we will also need

1913
01:08:44,719 --> 01:08:45,120
to

1914
01:08:45,120 --> 01:08:47,679
scale it to our individual image so i'll

1915
01:08:47,679 --> 01:08:49,120
show you how to do that in just a couple

1916
01:08:49,120 --> 01:08:50,000
of minutes

1917
01:08:50,000 --> 01:08:51,759
let's do the same thing for y the

1918
01:08:51,759 --> 01:08:53,359
calculation for y is just slightly

1919
01:08:53,359 --> 01:08:54,560
different so we're going to do

1920
01:08:54,560 --> 01:08:59,198
height divided by 180

1921
01:08:59,198 --> 01:09:02,639
multiplied by 90

1922
01:09:02,719 --> 01:09:06,238
minus the latitude

1923
01:09:06,238 --> 01:09:09,759
now we should see some dots oh

1924
01:09:09,759 --> 01:09:11,198
we don't see dots does anyone know why

1925
01:09:11,198 --> 01:09:12,479
we don't see dots it's because i didn't

1926
01:09:12,479 --> 01:09:13,439
draw any circles

1927
01:09:13,439 --> 01:09:15,520
silly silly gotta draw circles you can't

1928
01:09:15,520 --> 01:09:18,839
just make x and y values let's make a

1929
01:09:18,839 --> 01:09:20,719
circle

1930
01:09:20,719 --> 01:09:24,319
at value x value y and then magnitude as

1931
01:09:24,319 --> 01:09:26,719
our radius

1932
01:09:26,719 --> 01:09:29,839
now we should have some circles

1933
01:09:29,839 --> 01:09:31,439
cannot read property coordinates of

1934
01:09:31,439 --> 01:09:35,198
undefined line 33.

1935
01:09:35,198 --> 01:09:38,880
coordinates oh

1936
01:09:38,880 --> 01:09:42,399
oh geometry geometry

1937
01:09:42,399 --> 01:09:45,599
now we should have no problem

1938
01:09:46,640 --> 01:09:48,799
awesome so you see we have some dots

1939
01:09:48,799 --> 01:09:51,600
over here they're showing up on our map

1940
01:09:51,600 --> 01:09:55,120
you in real technical terms should now

1941
01:09:55,120 --> 01:09:57,520
grab one of these dots that you know the

1942
01:09:57,520 --> 01:09:59,600
latitude and longitude of

1943
01:09:59,600 --> 01:10:02,640
look that latitude and longitude up on

1944
01:10:02,640 --> 01:10:05,679
an actual calibrated sketch

1945
01:10:05,679 --> 01:10:07,840
or calibrated website to see exactly

1946
01:10:07,840 --> 01:10:09,040
where it's located

1947
01:10:09,040 --> 01:10:12,320
and then shift your sketch accordingly i

1948
01:10:12,320 --> 01:10:13,679
however happen to know

1949
01:10:13,679 --> 01:10:16,239
that these dots should be along the

1950
01:10:16,239 --> 01:10:17,760
coastline in california

1951
01:10:17,760 --> 01:10:20,640
stretching from the bottom of that part

1952
01:10:20,640 --> 01:10:22,080
of the united states and then working

1953
01:10:22,080 --> 01:10:22,719
their way

1954
01:10:22,719 --> 01:10:25,199
up to washington you can also kind of

1955
01:10:25,199 --> 01:10:27,040
see that here with alaska like i'm

1956
01:10:27,040 --> 01:10:28,880
pretty close but not quite

1957
01:10:28,880 --> 01:10:30,159
and so the easiest way for me to

1958
01:10:30,159 --> 01:10:32,080
calibrate that is just to go ahead and

1959
01:10:32,080 --> 01:10:33,840
add a little bit of a value to the

1960
01:10:33,840 --> 01:10:34,880
longitude

1961
01:10:34,880 --> 01:10:36,719
and then subtract a little bit of or

1962
01:10:36,719 --> 01:10:37,760
we're actually going to subtract from

1963
01:10:37,760 --> 01:10:39,360
both so we want to move left and we

1964
01:10:39,360 --> 01:10:41,840
want to move up so i'm going to go ahead

1965
01:10:41,840 --> 01:10:42,800
and take a guess

1966
01:10:42,800 --> 01:10:45,920
that i want to do like minus eight maybe

1967
01:10:45,920 --> 01:10:47,920
and then my latitude it needs to be

1968
01:10:47,920 --> 01:10:49,440
shifted by less so i'll do like

1969
01:10:49,440 --> 01:10:52,880
less three and then let's see what kind

1970
01:10:52,880 --> 01:10:53,600
of

1971
01:10:53,600 --> 01:10:58,640
response we get out of this

1972
01:10:58,640 --> 01:11:02,159
pretty pretty close um if i expand over

1973
01:11:02,159 --> 01:11:04,239
to the other side of my canvas

1974
01:11:04,239 --> 01:11:05,679
i notice that there are some places that

1975
01:11:05,679 --> 01:11:07,360
should be along coastlines or a long

1976
01:11:07,360 --> 01:11:08,000
lands

1977
01:11:08,000 --> 01:11:10,239
that maybe aren't so it makes sense to

1978
01:11:10,239 --> 01:11:11,520
shift it a little more

1979
01:11:11,520 --> 01:11:13,120
this is definitely the artist way to

1980
01:11:13,120 --> 01:11:14,640
take this on if you were doing this and

1981
01:11:14,640 --> 01:11:16,159
you needed it to be technically correct

1982
01:11:16,159 --> 01:11:18,320
it would be vital for you to actually

1983
01:11:18,320 --> 01:11:20,159
um calibrate these dots and their

1984
01:11:20,159 --> 01:11:21,520
locations but since we're just doing

1985
01:11:21,520 --> 01:11:24,080
this as like a graphical representation

1986
01:11:24,080 --> 01:11:26,560
and we're doing it so zoomed out i feel

1987
01:11:26,560 --> 01:11:27,840
totally okay with just

1988
01:11:27,840 --> 01:11:30,159
eyeing this and i'm gonna subtract a

1989
01:11:30,159 --> 01:11:32,000
little bit more from the longitude or x

1990
01:11:32,000 --> 01:11:32,800
direction

1991
01:11:32,800 --> 01:11:34,000
to make these things line up with the

1992
01:11:34,000 --> 01:11:37,120
coastlines like i know they ought to

1993
01:11:37,120 --> 01:11:39,679
uh so now we see this looks like pretty

1994
01:11:39,679 --> 01:11:40,800
intelligible

1995
01:11:40,800 --> 01:11:43,679
these are definitely within bounds for

1996
01:11:43,679 --> 01:11:45,199
something on this level of

1997
01:11:45,199 --> 01:11:48,960
accuracy and a data visualization and

1998
01:11:48,960 --> 01:11:52,080
we are using an api from usgs

1999
01:11:52,080 --> 01:11:54,480
to actually map out earthquakes from the

2000
01:11:54,480 --> 01:11:55,840
last two weeks

2001
01:11:55,840 --> 01:11:58,480
onto our canvas so i could go in and

2002
01:11:58,480 --> 01:12:00,560
change this date to any set of dates and

2003
01:12:00,560 --> 01:12:01,120
i could get

2004
01:12:01,120 --> 01:12:03,520
a different set of values and it'll use

2005
01:12:03,520 --> 01:12:04,880
all of this stuff that we did

2006
01:12:04,880 --> 01:12:07,280
generally to map those things to our

2007
01:12:07,280 --> 01:12:08,560
mouth

2008
01:12:08,560 --> 01:12:09,920
and then the last thing i wanted to talk

2009
01:12:09,920 --> 01:12:12,080
to you about just super briefly

2010
01:12:12,080 --> 01:12:15,760
is sharing your work so i

2011
01:12:15,760 --> 01:12:18,560
am so grateful that you've been here

2012
01:12:18,560 --> 01:12:20,159
with me on this journey i'm

2013
01:12:20,159 --> 01:12:21,840
so glad to have shared this with you

2014
01:12:21,840 --> 01:12:23,679
like i cannot

2015
01:12:23,679 --> 01:12:26,960
tell you with more enthusiasm and more

2016
01:12:26,960 --> 01:12:27,920
excitement like

2017
01:12:27,920 --> 01:12:29,760
thank you for dedicating four hours of

2018
01:12:29,760 --> 01:12:30,960
your life to this

2019
01:12:30,960 --> 01:12:32,800
i have learned so much from all of you

2020
01:12:32,800 --> 01:12:34,400
both just through the process of making

2021
01:12:34,400 --> 01:12:36,080
these videos but also because of those

2022
01:12:36,080 --> 01:12:37,360
of you who've been coming to office

2023
01:12:37,360 --> 01:12:38,320
hours

2024
01:12:38,320 --> 01:12:41,600
and i want to see what you made so

2025
01:12:41,600 --> 01:12:44,239
tag hackaday in any of your instagram

2026
01:12:44,239 --> 01:12:45,360
posts and also tag

2027
01:12:45,360 --> 01:12:48,080
me the best way to share this stuff out

2028
01:12:48,080 --> 01:12:48,880
on instagram

2029
01:12:48,880 --> 01:12:51,520
is to use a screen recorder to record

2030
01:12:51,520 --> 01:12:53,120
your screen and then post that on

2031
01:12:53,120 --> 01:12:55,120
instagram that's something i usually do

2032
01:12:55,120 --> 01:12:57,360
for most of my p5.js sketches

2033
01:12:57,360 --> 01:12:59,440
if you're on a pc usually that looks

2034
01:12:59,440 --> 01:13:00,800
like using the game center

2035
01:13:00,800 --> 01:13:02,800
to do a screen recording if you're on a

2036
01:13:02,800 --> 01:13:04,000
mac you can use quicktime

2037
01:13:04,000 --> 01:13:05,520
to do a screen recording just go google

2038
01:13:05,520 --> 01:13:07,440
it it's super easy to set up i

2039
01:13:07,440 --> 01:13:08,719
definitely have faith that all of you

2040
01:13:08,719 --> 01:13:10,880
can do it because you made it

2041
01:13:10,880 --> 01:13:13,040
so congrats and thank you for sharing

2042
01:13:13,040 --> 01:13:14,239
this time with me

2043
01:13:14,239 --> 01:13:15,920
swing by office hours if you want a

2044
01:13:15,920 --> 01:13:17,440
detailed explanation of

2045
01:13:17,440 --> 01:13:20,640
how to embed your javascript into a

2046
01:13:20,640 --> 01:13:21,679
website or how to

2047
01:13:21,679 --> 01:13:24,400
screen share or whatever you want to do

2048
01:13:24,400 --> 01:13:26,560
but you learned a lot of stuff

2049
01:13:26,560 --> 01:13:28,320
in such a short period of time and i'm

2050
01:13:28,320 --> 01:13:29,679
so glad that i could have been a part of

2051
01:13:29,679 --> 01:13:30,239
it with you

2052
01:13:30,239 --> 01:13:39,440
so thanks for joining me bye

