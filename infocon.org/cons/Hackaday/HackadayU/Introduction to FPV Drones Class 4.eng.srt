1
00:00:00,080 --> 00:00:08,160
[Music]

2
00:00:08,160 --> 00:00:09,840
hi everybody welcome back to the

3
00:00:09,840 --> 00:00:11,519
epidural nursing course on academy my

4
00:00:11,519 --> 00:00:12,320
name is ayan

5
00:00:12,320 --> 00:00:13,920
and today we are going to be talking

6
00:00:13,920 --> 00:00:16,400
about flight controllers in class 4

7
00:00:16,400 --> 00:00:19,439
so until now we have discussed about

8
00:00:19,439 --> 00:00:20,800
what are drones what are the physics

9
00:00:20,800 --> 00:00:22,480
involved with drone the

10
00:00:22,480 --> 00:00:24,000
propeller selection guide then we talk

11
00:00:24,000 --> 00:00:25,199
about different frames that are

12
00:00:25,199 --> 00:00:26,880
available different types of frame in

13
00:00:26,880 --> 00:00:28,720
terms of material number of repulsion

14
00:00:28,720 --> 00:00:29,679
system

15
00:00:29,679 --> 00:00:31,840
we also talked about the motors and

16
00:00:31,840 --> 00:00:33,200
electronic speed controllers and

17
00:00:33,200 --> 00:00:34,079
batteries

18
00:00:34,079 --> 00:00:35,360
and today we're going to be talking

19
00:00:35,360 --> 00:00:37,760
about how the flight controller helps a

20
00:00:37,760 --> 00:00:39,680
drone take a stable flight the level

21
00:00:39,680 --> 00:00:40,800
flight and how it

22
00:00:40,800 --> 00:00:43,280
uh compensate for the external forces

23
00:00:43,280 --> 00:00:44,719
and internal defects

24
00:00:44,719 --> 00:00:46,879
and what is a digital signal processing

25
00:00:46,879 --> 00:00:48,960
why you need that what is the

26
00:00:48,960 --> 00:00:51,440
control system why you need that pid and

27
00:00:51,440 --> 00:00:52,640
all that stuff so

28
00:00:52,640 --> 00:00:54,480
in the class 1 you might remember that i

29
00:00:54,480 --> 00:00:55,760
told that

30
00:00:55,760 --> 00:00:59,120
drone needs to be having uh motion in

31
00:00:59,120 --> 00:01:00,800
three different axis that is the pitch

32
00:01:00,800 --> 00:01:03,039
axis the roll axis and the yo axis these

33
00:01:03,039 --> 00:01:04,400
are the degree of freedom

34
00:01:04,400 --> 00:01:06,799
and if the drone uh pilot or the drone

35
00:01:06,799 --> 00:01:08,479
operator wants the drone to go

36
00:01:08,479 --> 00:01:11,600
uh in the row left axis so then uh if

37
00:01:11,600 --> 00:01:13,360
this command is given from the remote or

38
00:01:13,360 --> 00:01:15,360
the transmitter the flight controller

39
00:01:15,360 --> 00:01:16,640
process it and

40
00:01:16,640 --> 00:01:19,360
it rotates the right motors up at higher

41
00:01:19,360 --> 00:01:21,680
rpm and the left motors at lower rpm so

42
00:01:21,680 --> 00:01:23,920
the overall thrust coming from the right

43
00:01:23,920 --> 00:01:25,439
is more and the drone will go in this

44
00:01:25,439 --> 00:01:27,439
direction so how much

45
00:01:27,439 --> 00:01:30,720
uh rpm to rotate at which voter data is

46
00:01:30,720 --> 00:01:32,400
calculated by flight controller and how

47
00:01:32,400 --> 00:01:34,000
that calculation happen

48
00:01:34,000 --> 00:01:35,759
how that computation happens we'll talk

49
00:01:35,759 --> 00:01:37,119
about today's class

50
00:01:37,119 --> 00:01:38,880
also we'll talk about why you just

51
00:01:38,880 --> 00:01:41,520
cannot just plug in four motors together

52
00:01:41,520 --> 00:01:43,439
and just give them power and without any

53
00:01:43,439 --> 00:01:44,960
weight control try to

54
00:01:44,960 --> 00:01:46,720
fly it off and trust me that's not

55
00:01:46,720 --> 00:01:48,799
possible so we'll uh

56
00:01:48,799 --> 00:01:50,880
talk about all this uh introduce class

57
00:01:50,880 --> 00:01:52,560
so without further ado let's start

58
00:01:52,560 --> 00:01:53,680
all right so we're on the computer

59
00:01:53,680 --> 00:01:55,680
screen and let's begin with today's

60
00:01:55,680 --> 00:01:57,360
class that is class fourth on flight

61
00:01:57,360 --> 00:01:58,560
controllers

62
00:01:58,560 --> 00:02:01,680
so the agenda for today class is this we

63
00:02:01,680 --> 00:02:02,719
will talking about

64
00:02:02,719 --> 00:02:05,119
flight controllers and digital signal

65
00:02:05,119 --> 00:02:06,079
processing

66
00:02:06,079 --> 00:02:07,759
uh why do we actually need a flight

67
00:02:07,759 --> 00:02:09,919
controller why can't we just uh

68
00:02:09,919 --> 00:02:12,319
plug in connect four motors and four

69
00:02:12,319 --> 00:02:14,239
propellers and just let the drone fly

70
00:02:14,239 --> 00:02:15,840
why do we need computation

71
00:02:15,840 --> 00:02:17,920
and similarly why do we need uh sensors

72
00:02:17,920 --> 00:02:18,879
in our drone

73
00:02:18,879 --> 00:02:20,959
uh accelerometer is there gyroscope is

74
00:02:20,959 --> 00:02:22,000
there and we'll also

75
00:02:22,000 --> 00:02:23,760
be touching about how many sensors are

76
00:02:23,760 --> 00:02:25,680
there but why do we need that

77
00:02:25,680 --> 00:02:27,360
uh we'll also talk about what is an

78
00:02:27,360 --> 00:02:29,120
inertial measurement unit

79
00:02:29,120 --> 00:02:30,959
and a degree of freedom and this is a

80
00:02:30,959 --> 00:02:32,319
quite an interesting

81
00:02:32,319 --> 00:02:35,440
topic then we'll talk about the basics

82
00:02:35,440 --> 00:02:35,840
of

83
00:02:35,840 --> 00:02:37,840
digital signal processing and what kind

84
00:02:37,840 --> 00:02:40,560
of signal processing do we actually need

85
00:02:40,560 --> 00:02:43,680
when we are making drones and under that

86
00:02:43,680 --> 00:02:44,720
we'll talk about

87
00:02:44,720 --> 00:02:46,879
sensor fusion data filtering what is

88
00:02:46,879 --> 00:02:48,160
read frequency

89
00:02:48,160 --> 00:02:50,959
what are filters uh then lastly we'll

90
00:02:50,959 --> 00:02:52,640
talk about what is control system and

91
00:02:52,640 --> 00:02:54,160
why do we need control system in our

92
00:02:54,160 --> 00:02:54,800
drone

93
00:02:54,800 --> 00:02:57,519
and we'll also talk about the

94
00:02:57,519 --> 00:02:59,599
proportional integral derivative that is

95
00:02:59,599 --> 00:03:01,040
the pid control system

96
00:03:01,040 --> 00:03:03,360
uh the math behind this and we'll have a

97
00:03:03,360 --> 00:03:05,120
small discussion on pid tuning

98
00:03:05,120 --> 00:03:07,920
uh and if you are so among few who have

99
00:03:07,920 --> 00:03:09,519
already made a drone then you'll know

100
00:03:09,519 --> 00:03:10,159
that

101
00:03:10,159 --> 00:03:12,400
this thing is really messy and a lot of

102
00:03:12,400 --> 00:03:14,159
people don't really get it

103
00:03:14,159 --> 00:03:16,080
and in the end we'll talk about the

104
00:03:16,080 --> 00:03:17,360
connection

105
00:03:17,360 --> 00:03:21,200
of the flight controller so let's begin

106
00:03:22,720 --> 00:03:25,040
all right so in the first class i had

107
00:03:25,040 --> 00:03:25,920
talked about

108
00:03:25,920 --> 00:03:29,200
the different axes of motion on which a

109
00:03:29,200 --> 00:03:30,480
drone

110
00:03:30,480 --> 00:03:32,239
drone has a freedom so these are

111
00:03:32,239 --> 00:03:33,840
basically called degree of freedom and

112
00:03:33,840 --> 00:03:35,280
if you talk about drone

113
00:03:35,280 --> 00:03:39,040
a drone can can do the

114
00:03:39,040 --> 00:03:41,360
roll motion the drone can do a pitch

115
00:03:41,360 --> 00:03:44,159
motion and a drone can do a yaw motion

116
00:03:44,159 --> 00:03:46,000
and of course you can take your drone up

117
00:03:46,000 --> 00:03:47,760
and down if you increase the value of

118
00:03:47,760 --> 00:03:49,280
throttle so these are the degree of

119
00:03:49,280 --> 00:03:51,280
freedom that is available in the drone

120
00:03:51,280 --> 00:03:53,519
and i also talked about a concept called

121
00:03:53,519 --> 00:03:55,200
motor mixing which i just explained in

122
00:03:55,200 --> 00:03:57,120
the introduction that

123
00:03:57,120 --> 00:03:59,439
a flight controller it changes the rpm

124
00:03:59,439 --> 00:04:01,040
of motors or

125
00:04:01,040 --> 00:04:02,640
mostly two at a time to give you a

126
00:04:02,640 --> 00:04:05,040
particular uh a degree of freedom

127
00:04:05,040 --> 00:04:07,439
authority uh so of course if you want to

128
00:04:07,439 --> 00:04:08,239
go

129
00:04:08,239 --> 00:04:10,000
roll left your right motor will spin up

130
00:04:10,000 --> 00:04:11,760
your left motor will spin down and

131
00:04:11,760 --> 00:04:13,519
overall thrust coming from right will be

132
00:04:13,519 --> 00:04:15,680
more than the thrust coming from left

133
00:04:15,680 --> 00:04:17,839
and your drone will go in that direction

134
00:04:17,839 --> 00:04:19,839
uh so that is exactly how our drone

135
00:04:19,839 --> 00:04:22,240
works but the topic of today's class is

136
00:04:22,240 --> 00:04:26,080
how this is happening and how much

137
00:04:26,080 --> 00:04:28,160
rpm and motor should be revolving at how

138
00:04:28,160 --> 00:04:30,000
flat controller calculates that and all

139
00:04:30,000 --> 00:04:31,600
kind of things so we'll we'll touch upon

140
00:04:31,600 --> 00:04:33,199
that

141
00:04:33,199 --> 00:04:35,280
so again this is the same thing which i

142
00:04:35,280 --> 00:04:37,120
just said that if your

143
00:04:37,120 --> 00:04:38,880
if you want to go row left your right

144
00:04:38,880 --> 00:04:40,560
motor will spin up your left motor will

145
00:04:40,560 --> 00:04:41,680
spill down

146
00:04:41,680 --> 00:04:44,160
if you want to go roll right opposite

147
00:04:44,160 --> 00:04:45,040
the left

148
00:04:45,040 --> 00:04:47,919
set of motor will speed up the right set

149
00:04:47,919 --> 00:04:49,600
of motor will speed down and the overall

150
00:04:49,600 --> 00:04:51,280
thrust coming from one direction will be

151
00:04:51,280 --> 00:04:52,479
more than the other and

152
00:04:52,479 --> 00:04:54,479
you will get the desired motion same

153
00:04:54,479 --> 00:04:55,680
goes for

154
00:04:55,680 --> 00:04:58,160
your but in the case of your there is

155
00:04:58,160 --> 00:05:00,240
the diagonal motor which comes into the

156
00:05:00,240 --> 00:05:00,880
picture

157
00:05:00,880 --> 00:05:03,039
uh two at a time the diagonal motor and

158
00:05:03,039 --> 00:05:04,639
the pitch you'll have the back and the

159
00:05:04,639 --> 00:05:07,360
front motors

160
00:05:08,080 --> 00:05:09,680
so you might remember this slide from

161
00:05:09,680 --> 00:05:11,199
the first class and

162
00:05:11,199 --> 00:05:12,720
this slide says that the uav

163
00:05:12,720 --> 00:05:14,400
multi-rotors are aerodynamically

164
00:05:14,400 --> 00:05:16,000
unstable and i've mentioned in the first

165
00:05:16,000 --> 00:05:17,280
class they don't have

166
00:05:17,280 --> 00:05:20,240
uh the design which allows them to stay

167
00:05:20,240 --> 00:05:22,160
in air stability they don't have airfoil

168
00:05:22,160 --> 00:05:24,400
so they are basically unstable and

169
00:05:24,400 --> 00:05:27,600
to become stable to hover at one place

170
00:05:27,600 --> 00:05:29,520
without much changing their position

171
00:05:29,520 --> 00:05:31,039
they require computer

172
00:05:31,039 --> 00:05:32,960
and computer requires sensors so the

173
00:05:32,960 --> 00:05:35,039
first step is to sense where you are

174
00:05:35,039 --> 00:05:36,960
and the second step is to sense where

175
00:05:36,960 --> 00:05:38,080
you are going and

176
00:05:38,080 --> 00:05:40,160
if that matches what user wants if not

177
00:05:40,160 --> 00:05:41,759
then compensate it

178
00:05:41,759 --> 00:05:43,680
uh by changing the rpm of motor so that

179
00:05:43,680 --> 00:05:45,440
is exactly how a drone work and to

180
00:05:45,440 --> 00:05:46,400
obtain that

181
00:05:46,400 --> 00:05:48,000
the drone flight controller it has a

182
00:05:48,000 --> 00:05:50,160
program it has a firmware running and

183
00:05:50,160 --> 00:05:50,880
the

184
00:05:50,880 --> 00:05:52,880
responsibility of that firmware is to do

185
00:05:52,880 --> 00:05:54,639
all this mathematical algorithms and

186
00:05:54,639 --> 00:05:55,440
computation

187
00:05:55,440 --> 00:05:58,639
and uh instruct each motor at what rpm

188
00:05:58,639 --> 00:05:58,960
to

189
00:05:58,960 --> 00:06:02,160
spin at what particular instance so

190
00:06:02,160 --> 00:06:04,560
let's see how that works so this is the

191
00:06:04,560 --> 00:06:06,240
brain of the drone this is

192
00:06:06,240 --> 00:06:08,880
uh the main component which in which

193
00:06:08,880 --> 00:06:09,600
helps you do

194
00:06:09,600 --> 00:06:11,520
this which we just talked about so this

195
00:06:11,520 --> 00:06:13,520
is nothing but a flight controller

196
00:06:13,520 --> 00:06:15,840
and uh the picture i'm showing is one of

197
00:06:15,840 --> 00:06:17,280
the famous strike controller but

198
00:06:17,280 --> 00:06:19,440
there are like thousands of fret

199
00:06:19,440 --> 00:06:21,039
controller in the market

200
00:06:21,039 --> 00:06:23,199
uh each one have different pcb layout

201
00:06:23,199 --> 00:06:25,120
each one have different kinds of sensors

202
00:06:25,120 --> 00:06:25,919
so maybe

203
00:06:25,919 --> 00:06:28,639
same sensors from different company uh

204
00:06:28,639 --> 00:06:30,160
maybe same sensors

205
00:06:30,160 --> 00:06:31,759
but different configuration and we'll

206
00:06:31,759 --> 00:06:33,199
talk about that as well

207
00:06:33,199 --> 00:06:36,240
and this is a most common fpv

208
00:06:36,240 --> 00:06:37,759
flight controller which has

209
00:06:37,759 --> 00:06:40,400
accelerometer and gyroscope and has

210
00:06:40,400 --> 00:06:44,479
one cpu as you can see this arm stm32f4

211
00:06:44,479 --> 00:06:45,520
this is the main

212
00:06:45,520 --> 00:06:48,160
chipset which do all the computation and

213
00:06:48,160 --> 00:06:48,800
this is the

214
00:06:48,800 --> 00:06:52,479
chip which has accelerometer and gyro so

215
00:06:52,479 --> 00:06:54,160
what exactly is happening here so on the

216
00:06:54,160 --> 00:06:55,759
right you can see how

217
00:06:55,759 --> 00:06:57,840
the flight controller talks to the esc

218
00:06:57,840 --> 00:06:59,759
so basically flight controller and esc

219
00:06:59,759 --> 00:07:00,080
has

220
00:07:00,080 --> 00:07:02,639
a communication going on over a signal

221
00:07:02,639 --> 00:07:04,880
line which is also known as esc signal

222
00:07:04,880 --> 00:07:06,560
and the flight controller also gets

223
00:07:06,560 --> 00:07:08,400
signal from the receiver so basically

224
00:07:08,400 --> 00:07:10,639
what is happening in this case is this

225
00:07:10,639 --> 00:07:13,280
transmitter or let's assume there is a

226
00:07:13,280 --> 00:07:14,160
pilot

227
00:07:14,160 --> 00:07:16,560
using this transmitter or drone operator

228
00:07:16,560 --> 00:07:18,080
uh the drone operator is

229
00:07:18,080 --> 00:07:20,400
using this transmitter to send signal uh

230
00:07:20,400 --> 00:07:22,080
to the receiver and we know what kind of

231
00:07:22,080 --> 00:07:23,280
signal it will send

232
00:07:23,280 --> 00:07:25,440
it will send what value of role i need

233
00:07:25,440 --> 00:07:27,199
what value of pitch i need and what

234
00:07:27,199 --> 00:07:28,800
value of view i need and what is the

235
00:07:28,800 --> 00:07:30,960
throttle and these kind of thing it can

236
00:07:30,960 --> 00:07:31,599
send

237
00:07:31,599 --> 00:07:33,520
so all these values will be will be

238
00:07:33,520 --> 00:07:35,360
passed to the receiver and receiver will

239
00:07:35,360 --> 00:07:36,800
pass it to the flight controller so

240
00:07:36,800 --> 00:07:38,639
flight controller knows what the user

241
00:07:38,639 --> 00:07:39,360
wants

242
00:07:39,360 --> 00:07:41,759
flight controller knows that the drone

243
00:07:41,759 --> 00:07:43,599
operator wants me to let's say

244
00:07:43,599 --> 00:07:46,400
i wants me to give a roll of 3 degree to

245
00:07:46,400 --> 00:07:47,039
the right

246
00:07:47,039 --> 00:07:50,400
or wants me to give a yaw of 7 degree

247
00:07:50,400 --> 00:07:52,879
to the left so these kinds of thing the

248
00:07:52,879 --> 00:07:54,160
receiver will pass to the flight

249
00:07:54,160 --> 00:07:55,199
controller now

250
00:07:55,199 --> 00:07:57,039
it is the duty of flight controller to

251
00:07:57,039 --> 00:07:58,879
do the function that

252
00:07:58,879 --> 00:08:00,240
the drone operator wants the flight

253
00:08:00,240 --> 00:08:02,319
controller to execute and how it's

254
00:08:02,319 --> 00:08:03,520
happening so

255
00:08:03,520 --> 00:08:05,919
uh it will do all the maths it has the

256
00:08:05,919 --> 00:08:07,520
firmware which is responsible for doing

257
00:08:07,520 --> 00:08:09,280
all the math so after doing all the

258
00:08:09,280 --> 00:08:09,840
maths

259
00:08:09,840 --> 00:08:11,919
flight controller will send signal to

260
00:08:11,919 --> 00:08:13,759
each and every esc

261
00:08:13,759 --> 00:08:15,599
and it will tell them to what rpm you

262
00:08:15,599 --> 00:08:17,840
should be rotating at that particular

263
00:08:17,840 --> 00:08:18,720
instant

264
00:08:18,720 --> 00:08:22,319
so exactly uh as as i mentioned in the

265
00:08:22,319 --> 00:08:24,319
in the flowchart the drone operator is

266
00:08:24,319 --> 00:08:26,319
sending the value of a roll

267
00:08:26,319 --> 00:08:28,800
pitch yaw and throttle to the to the

268
00:08:28,800 --> 00:08:29,599
receiver

269
00:08:29,599 --> 00:08:30,879
receiver pass that to the flight

270
00:08:30,879 --> 00:08:33,679
controller flight controller computed uh

271
00:08:33,679 --> 00:08:35,679
the current rpm of each motor and pass

272
00:08:35,679 --> 00:08:37,440
it to the esc and as the name suggests

273
00:08:37,440 --> 00:08:38,799
electronic speed control they will

274
00:08:38,799 --> 00:08:40,799
ultimately control the speed of the

275
00:08:40,799 --> 00:08:41,839
motors

276
00:08:41,839 --> 00:08:43,679
uh so receiver and flight controller

277
00:08:43,679 --> 00:08:45,440
communicates with one another over a

278
00:08:45,440 --> 00:08:47,200
protocol that we have already discussed

279
00:08:47,200 --> 00:08:47,519
in

280
00:08:47,519 --> 00:08:51,120
class two uh flight controller and esc

281
00:08:51,120 --> 00:08:52,880
talks to one another over a particular

282
00:08:52,880 --> 00:08:54,080
protocol that we discuss

283
00:08:54,080 --> 00:08:56,240
in class three so ultimately everything

284
00:08:56,240 --> 00:08:57,200
is sorted

285
00:08:57,200 --> 00:09:00,000
uh they uh they are able to communicate

286
00:09:00,000 --> 00:09:01,839
with one another and you get the desired

287
00:09:01,839 --> 00:09:03,519
motion of the drone and again

288
00:09:03,519 --> 00:09:06,480
uh every ac needs a need some power so

289
00:09:06,480 --> 00:09:08,000
you can also see the battery in the

290
00:09:08,000 --> 00:09:10,640
picture as well so this is the overall

291
00:09:10,640 --> 00:09:13,200
uh what you can say is architecture

292
00:09:13,200 --> 00:09:14,959
diagram or

293
00:09:14,959 --> 00:09:17,680
the functioning of flight controller in

294
00:09:17,680 --> 00:09:20,560
this one slide

295
00:09:20,880 --> 00:09:23,040
all right so coming back to the flight

296
00:09:23,040 --> 00:09:24,560
controller which is the brain of the

297
00:09:24,560 --> 00:09:25,040
drone

298
00:09:25,040 --> 00:09:27,279
i just want you to look uh thoroughly to

299
00:09:27,279 --> 00:09:28,800
this picture so this is a flight

300
00:09:28,800 --> 00:09:29,519
controller it's

301
00:09:29,519 --> 00:09:31,920
really small uh but it packed a lot of

302
00:09:31,920 --> 00:09:33,040
things so

303
00:09:33,040 --> 00:09:34,800
over here you can see this is the main

304
00:09:34,800 --> 00:09:36,720
cpu which is responsible for

305
00:09:36,720 --> 00:09:39,360
holding the firmware the firmware holds

306
00:09:39,360 --> 00:09:40,959
all the algorithms and all the

307
00:09:40,959 --> 00:09:42,720
mathematics equation which it needs to

308
00:09:42,720 --> 00:09:44,720
compute so this is the

309
00:09:44,720 --> 00:09:48,080
main cpu and this cpus can be different

310
00:09:48,080 --> 00:09:49,440
on different flight controller for

311
00:09:49,440 --> 00:09:51,480
example this one has

312
00:09:51,480 --> 00:09:54,720
stm32f4 based you can also get f1 based

313
00:09:54,720 --> 00:09:55,680
f3 based

314
00:09:55,680 --> 00:09:57,120
or you can get an entirely different

315
00:09:57,120 --> 00:09:58,800
chip if you are doing

316
00:09:58,800 --> 00:10:01,279
more than uh let's say fpv flying for

317
00:10:01,279 --> 00:10:02,560
example if you are doing autonomous

318
00:10:02,560 --> 00:10:04,720
drones then it has more powerful cpus

319
00:10:04,720 --> 00:10:07,120
and more powerful sensors so

320
00:10:07,120 --> 00:10:10,000
this is the main cpu which is holding

321
00:10:10,000 --> 00:10:10,880
the firmware then

322
00:10:10,880 --> 00:10:13,360
over here this is uh the chip which

323
00:10:13,360 --> 00:10:14,640
contains the sensor

324
00:10:14,640 --> 00:10:18,000
uh it's known as imu or inertial

325
00:10:18,000 --> 00:10:19,040
measurement unit

326
00:10:19,040 --> 00:10:22,079
i'll talk about that in a bit and

327
00:10:22,079 --> 00:10:23,839
these two are basically the main part of

328
00:10:23,839 --> 00:10:25,200
the flight controller but these days

329
00:10:25,200 --> 00:10:27,279
flight controllers are getting uh

330
00:10:27,279 --> 00:10:29,680
a lot of blood and a lot of advancement

331
00:10:29,680 --> 00:10:30,959
and because of that they are getting

332
00:10:30,959 --> 00:10:32,640
more and more elite day by day so as you

333
00:10:32,640 --> 00:10:34,480
can see this is another big chip here so

334
00:10:34,480 --> 00:10:35,600
this is nothing but an

335
00:10:35,600 --> 00:10:38,399
osd uh which sits between the camera and

336
00:10:38,399 --> 00:10:39,680
video transmitter and

337
00:10:39,680 --> 00:10:41,680
it overlays the screen of information

338
00:10:41,680 --> 00:10:42,959
like your current battery

339
00:10:42,959 --> 00:10:46,079
or your current ampere usage

340
00:10:46,079 --> 00:10:47,760
but we'll talk about that in maybe some

341
00:10:47,760 --> 00:10:49,839
future classes when we talk about fpv

342
00:10:49,839 --> 00:10:52,320
so you can see that over here these are

343
00:10:52,320 --> 00:10:55,200
the parts where you solder the esc

344
00:10:55,200 --> 00:10:57,040
wires where you where your flight

345
00:10:57,040 --> 00:10:58,800
controller and esc will communicate

346
00:10:58,800 --> 00:11:00,240
through so these are the solder pads

347
00:11:00,240 --> 00:11:02,000
where you can solder the signal wire of

348
00:11:02,000 --> 00:11:03,120
your ac

349
00:11:03,120 --> 00:11:06,000
and over here you can see uh ground five

350
00:11:06,000 --> 00:11:08,160
volt rx and tx so these are the uarts

351
00:11:08,160 --> 00:11:08,640
and

352
00:11:08,640 --> 00:11:10,480
uh here you can solder the receiver so

353
00:11:10,480 --> 00:11:12,720
receiver if your receiver works on s bus

354
00:11:12,720 --> 00:11:15,600
it uses a uart for the communication

355
00:11:15,600 --> 00:11:17,440
uh uart basically is a communication

356
00:11:17,440 --> 00:11:19,600
protocol serial protocol universal

357
00:11:19,600 --> 00:11:20,640
asynchronous

358
00:11:20,640 --> 00:11:23,040
receiver transmitter and over here you

359
00:11:23,040 --> 00:11:24,399
plug the receiver so

360
00:11:24,399 --> 00:11:26,320
as i showed you you plug the receiver

361
00:11:26,320 --> 00:11:28,560
you plug the esc you plug the battery

362
00:11:28,560 --> 00:11:30,640
and the flight control is good to go so

363
00:11:30,640 --> 00:11:32,079
this is how a flight controller looks

364
00:11:32,079 --> 00:11:33,600
like a typical fpv drone flight

365
00:11:33,600 --> 00:11:34,640
controller

366
00:11:34,640 --> 00:11:36,399
and this again i mentioned this has

367
00:11:36,399 --> 00:11:37,839
nothing but a cpu

368
00:11:37,839 --> 00:11:40,079
and something called inertial

369
00:11:40,079 --> 00:11:42,320
measurement unit so what is an inertial

370
00:11:42,320 --> 00:11:44,000
measurement unit so

371
00:11:44,000 --> 00:11:46,480
uh i'm sure that all of you have heard

372
00:11:46,480 --> 00:11:48,240
that your phone has

373
00:11:48,240 --> 00:11:50,000
some kind of sensor i'm talking about

374
00:11:50,000 --> 00:11:52,000
mobile mobile devices your mobile phones

375
00:11:52,000 --> 00:11:54,079
or tablet so

376
00:11:54,079 --> 00:11:56,399
let's take an example that when you

377
00:11:56,399 --> 00:11:57,519
rotate the phone

378
00:11:57,519 --> 00:11:59,200
uh your screen also rotates let's say

379
00:11:59,200 --> 00:12:00,959
you're watching a video in a portrait

380
00:12:00,959 --> 00:12:01,440
mode

381
00:12:01,440 --> 00:12:03,200
suddenly you decide to watch it in the

382
00:12:03,200 --> 00:12:05,440
landscape mode you rotate your phone and

383
00:12:05,440 --> 00:12:07,200
your video gets rotated so

384
00:12:07,200 --> 00:12:09,519
uh it's because it has sensors and the

385
00:12:09,519 --> 00:12:10,720
sensors detect

386
00:12:10,720 --> 00:12:14,160
the change of the phone attitude and

387
00:12:14,160 --> 00:12:15,120
accordingly it

388
00:12:15,120 --> 00:12:17,040
sends signal to the program playing

389
00:12:17,040 --> 00:12:19,440
video that i want to play the video in

390
00:12:19,440 --> 00:12:21,600
landscape mode so the sensors

391
00:12:21,600 --> 00:12:23,120
responsible for that is called

392
00:12:23,120 --> 00:12:24,399
accelerometer

393
00:12:24,399 --> 00:12:26,720
and similarly your phone has more than

394
00:12:26,720 --> 00:12:28,800
one sensor it has accelerometer it has

395
00:12:28,800 --> 00:12:29,760
gyroscope

396
00:12:29,760 --> 00:12:32,399
uh maybe it also has the magnetometer

397
00:12:32,399 --> 00:12:34,720
nowadays it also has a barometer so it

398
00:12:34,720 --> 00:12:36,639
can tell you how high you are from sea

399
00:12:36,639 --> 00:12:37,760
level or how

400
00:12:37,760 --> 00:12:39,440
how many floors you have climbed in a

401
00:12:39,440 --> 00:12:42,720
day so a common misconception is that

402
00:12:42,720 --> 00:12:43,839
there will be different different

403
00:12:43,839 --> 00:12:45,680
sensors in the phone but actually all

404
00:12:45,680 --> 00:12:47,360
the sensors comes inside the same

405
00:12:47,360 --> 00:12:48,160
package

406
00:12:48,160 --> 00:12:49,839
and what i mean by same package is that

407
00:12:49,839 --> 00:12:51,839
this single chip on the right this small

408
00:12:51,839 --> 00:12:52,560
chip

409
00:12:52,560 --> 00:12:54,480
this these have all the sensors and

410
00:12:54,480 --> 00:12:56,399
these this this one chip has

411
00:12:56,399 --> 00:12:58,880
accelerometer and gyroscope in this case

412
00:12:58,880 --> 00:13:00,800
but this kind of similar chip can also

413
00:13:00,800 --> 00:13:01,120
has

414
00:13:01,120 --> 00:13:04,079
a magnetometer or a barometer so uh the

415
00:13:04,079 --> 00:13:06,000
single package containing all the

416
00:13:06,000 --> 00:13:07,200
sensors it's called

417
00:13:07,200 --> 00:13:10,000
inertial measurement unit or imu for

418
00:13:10,000 --> 00:13:10,720
short

419
00:13:10,720 --> 00:13:13,360
and an imu can be made by different

420
00:13:13,360 --> 00:13:14,880
different companies so it's not

421
00:13:14,880 --> 00:13:17,200
necessary that only one company made imu

422
00:13:17,200 --> 00:13:18,240
maybe

423
00:13:18,240 --> 00:13:21,120
you can get an imu from uh hd micro

424
00:13:21,120 --> 00:13:22,880
electronics maybe you get from texas

425
00:13:22,880 --> 00:13:24,160
instruments so

426
00:13:24,160 --> 00:13:27,279
uh i believe this one is uh made by hd

427
00:13:27,279 --> 00:13:29,360
magnetron is i'm not sure but uh

428
00:13:29,360 --> 00:13:32,000
uh i'm i'm pretty sure that the chip

429
00:13:32,000 --> 00:13:34,000
name is mpu6000 so

430
00:13:34,000 --> 00:13:35,920
mpu stands for motion processing unit

431
00:13:35,920 --> 00:13:37,040
6000 but

432
00:13:37,040 --> 00:13:39,040
that is none of our concern we only

433
00:13:39,040 --> 00:13:40,800
concern about what it has

434
00:13:40,800 --> 00:13:43,199
so this one has uh accelerometer and

435
00:13:43,199 --> 00:13:44,079
gyroscope

436
00:13:44,079 --> 00:13:46,079
so on a flight controller on a typical

437
00:13:46,079 --> 00:13:47,600
flight controller which we use for fpv

438
00:13:47,600 --> 00:13:49,199
flying you'll get accelerometer and

439
00:13:49,199 --> 00:13:50,240
gyroscope

440
00:13:50,240 --> 00:13:52,639
and to be more precise three axis

441
00:13:52,639 --> 00:13:55,199
accelerometer and three axis gyroscope

442
00:13:55,199 --> 00:13:56,880
now the question is why do we need three

443
00:13:56,880 --> 00:13:58,880
axis uh acrometer and there's gyroscope

444
00:13:58,880 --> 00:14:00,399
so it's simple because

445
00:14:00,399 --> 00:14:02,639
the degree of freedom for drone is three

446
00:14:02,639 --> 00:14:03,920
and you need uh

447
00:14:03,920 --> 00:14:06,560
one for each axis that is one for rule

448
00:14:06,560 --> 00:14:07,279
one for

449
00:14:07,279 --> 00:14:09,920
pitch and one for your uh similarly

450
00:14:09,920 --> 00:14:12,079
gyroscope three axis one for your one

451
00:14:12,079 --> 00:14:13,760
for pitch and one for roll

452
00:14:13,760 --> 00:14:16,720
and this chip imu is sending data to

453
00:14:16,720 --> 00:14:18,079
your main cpu

454
00:14:18,079 --> 00:14:20,160
over some protocol so these protocols

455
00:14:20,160 --> 00:14:21,440
are generally i2c

456
00:14:21,440 --> 00:14:25,199
uh inter integrated circuit or spi

457
00:14:25,199 --> 00:14:27,279
serial peripheral interface so these are

458
00:14:27,279 --> 00:14:28,399
the common

459
00:14:28,399 --> 00:14:31,120
uh chip to chip communication protocols

460
00:14:31,120 --> 00:14:32,320
or digital protocols

461
00:14:32,320 --> 00:14:35,120
serial protocols that uh imu used to

462
00:14:35,120 --> 00:14:37,440
communicate with the the main cpu

463
00:14:37,440 --> 00:14:40,560
and the data rate at which they can send

464
00:14:40,560 --> 00:14:41,279
data is

465
00:14:41,279 --> 00:14:43,199
let's say eight kilohertz 16 kilohertz

466
00:14:43,199 --> 00:14:45,040
32 kilowatt so

467
00:14:45,040 --> 00:14:48,079
that means it's sending 32 into 10

468
00:14:48,079 --> 00:14:49,760
raised to power 3 i guess

469
00:14:49,760 --> 00:14:53,279
32 000 values per second so that is how

470
00:14:53,279 --> 00:14:53,680
much

471
00:14:53,680 --> 00:14:56,079
data it's sending after one second 32

472
00:14:56,079 --> 00:14:57,519
000 different values of

473
00:14:57,519 --> 00:15:00,000
your pitch and roll in one second so you

474
00:15:00,000 --> 00:15:01,680
can imagine a lot of data and a lot of

475
00:15:01,680 --> 00:15:02,639
computation is

476
00:15:02,639 --> 00:15:05,440
required uh so this is the entire

477
00:15:05,440 --> 00:15:07,360
initial measurement unit and that's how

478
00:15:07,360 --> 00:15:09,199
the communication is happening

479
00:15:09,199 --> 00:15:11,199
since on the flight controller the cpu

480
00:15:11,199 --> 00:15:13,440
and imus are on the same pcb

481
00:15:13,440 --> 00:15:15,199
uh that's why they are integrated in the

482
00:15:15,199 --> 00:15:17,440
same same pcb and

483
00:15:17,440 --> 00:15:19,600
you don't see any wiring going from this

484
00:15:19,600 --> 00:15:21,120
to this but again

485
00:15:21,120 --> 00:15:23,279
internally they are connected using pcb

486
00:15:23,279 --> 00:15:24,639
tracks and they communicate over right

487
00:15:24,639 --> 00:15:25,120
to

488
00:15:25,120 --> 00:15:29,839
spi spi is faster i2c is

489
00:15:29,839 --> 00:15:32,639
relatively slower so on i2c you cannot

490
00:15:32,639 --> 00:15:33,040
get

491
00:15:33,040 --> 00:15:35,440
let's say 32 kilohertz of speed so if

492
00:15:35,440 --> 00:15:36,639
you want to

493
00:15:36,639 --> 00:15:39,360
go for a flight controller which has imu

494
00:15:39,360 --> 00:15:41,600
capable of sending 32 kilohertz

495
00:15:41,600 --> 00:15:43,839
data then you will need to have an imu

496
00:15:43,839 --> 00:15:45,519
which supports spi

497
00:15:45,519 --> 00:15:48,320
so mpu 6050 which is a very common imu

498
00:15:48,320 --> 00:15:50,160
that doesn't support spi that works on

499
00:15:50,160 --> 00:15:50,880
i2c

500
00:15:50,880 --> 00:15:52,720
so you are restricted to 8 kilohertz

501
00:15:52,720 --> 00:15:54,079
data rate

502
00:15:54,079 --> 00:15:56,240
but if you want 32 kilohertz you will

503
00:15:56,240 --> 00:15:58,560
need to go for an imu like mpu 6000 i

504
00:15:58,560 --> 00:16:00,959
guess which can do 32 kilohertz

505
00:16:00,959 --> 00:16:03,600
uh the overall the overall thing

506
00:16:03,600 --> 00:16:05,440
happening here is more the data

507
00:16:05,440 --> 00:16:08,399
more information cpu has to process

508
00:16:08,399 --> 00:16:10,399
which might sound counter-intuitive but

509
00:16:10,399 --> 00:16:12,240
actually more data is useful so if you

510
00:16:12,240 --> 00:16:14,079
are sending more data then you know

511
00:16:14,079 --> 00:16:16,959
uh more precisely where your drone is at

512
00:16:16,959 --> 00:16:18,480
one particular instance so that is why

513
00:16:18,480 --> 00:16:21,680
you need imu with higher data rates

514
00:16:21,680 --> 00:16:23,199
okay so let's talk about degree of

515
00:16:23,199 --> 00:16:24,720
freedom so uh

516
00:16:24,720 --> 00:16:27,199
as i mentioned drone has a roll pitch

517
00:16:27,199 --> 00:16:28,720
and your degree of freedom

518
00:16:28,720 --> 00:16:30,800
and for each axis we need an

519
00:16:30,800 --> 00:16:33,199
accelerometer or at least a gyroscope

520
00:16:33,199 --> 00:16:36,240
so if we are buying a flight controller

521
00:16:36,240 --> 00:16:37,519
we can consult that

522
00:16:37,519 --> 00:16:39,360
how much degree of freedom the imu

523
00:16:39,360 --> 00:16:41,440
inside the flight controller supports

524
00:16:41,440 --> 00:16:44,560
so a typical imu it's a six degree of

525
00:16:44,560 --> 00:16:45,759
freedom imu

526
00:16:45,759 --> 00:16:47,440
and what i mean by six degree of freedom

527
00:16:47,440 --> 00:16:49,199
that it has three axis

528
00:16:49,199 --> 00:16:52,000
accelerometer and three axis a gyroscope

529
00:16:52,000 --> 00:16:53,120
so three plus three

530
00:16:53,120 --> 00:16:55,040
uh combines becomes six so that is why

531
00:16:55,040 --> 00:16:57,199
it's called 60 degree of freedom or

532
00:16:57,199 --> 00:16:59,839
six dof in short now there are some more

533
00:16:59,839 --> 00:17:01,759
advanced imus and more advanced

534
00:17:01,759 --> 00:17:03,440
flight controllers containing this imu

535
00:17:03,440 --> 00:17:05,439
like a nine degree of freedom so

536
00:17:05,439 --> 00:17:07,520
a nine degree of freedom imu will have

537
00:17:07,520 --> 00:17:09,199
everything data six degree of freedom

538
00:17:09,199 --> 00:17:09,599
has

539
00:17:09,599 --> 00:17:11,760
that is a three axis accelerometer and

540
00:17:11,760 --> 00:17:13,199
three axis gyroscope

541
00:17:13,199 --> 00:17:15,039
apart from that it will also have a

542
00:17:15,039 --> 00:17:18,480
three axis magnetometer so

543
00:17:18,480 --> 00:17:20,000
that becomes a nine degree of freedom

544
00:17:20,000 --> 00:17:21,839
and we'll talk about what each of these

545
00:17:21,839 --> 00:17:24,240
do then we'll have 10 degree of freedom

546
00:17:24,240 --> 00:17:26,559
so it will have everything a nine dot

547
00:17:26,559 --> 00:17:29,520
imu has but it also has a barometer and

548
00:17:29,520 --> 00:17:30,400
what it

549
00:17:30,400 --> 00:17:33,200
is happening here is that with the help

550
00:17:33,200 --> 00:17:33,600
of

551
00:17:33,600 --> 00:17:36,240
accelerometer sensor you can measure

552
00:17:36,240 --> 00:17:37,520
acceleration

553
00:17:37,520 --> 00:17:40,559
that is uh acceleration in one axis

554
00:17:40,559 --> 00:17:42,640
like for roll there would be different

555
00:17:42,640 --> 00:17:44,240
acceleration for pitch and for

556
00:17:44,240 --> 00:17:47,919
uh yaw similarly gyroscope helps you to

557
00:17:47,919 --> 00:17:49,919
find the angular velocity or a

558
00:17:49,919 --> 00:17:51,440
particular axis what is the angular

559
00:17:51,440 --> 00:17:53,280
velocity in one particular direction

560
00:17:53,280 --> 00:17:54,480
let's say pitch so

561
00:17:54,480 --> 00:17:56,000
with the help of gyroscope you can

562
00:17:56,000 --> 00:17:57,760
measure that and with the help of

563
00:17:57,760 --> 00:17:59,520
magnetometer you can

564
00:17:59,520 --> 00:18:01,280
find the magnetic orientation for your

565
00:18:01,280 --> 00:18:03,600
drone so we we all know that earth has

566
00:18:03,600 --> 00:18:05,360
the magnetic field of its own

567
00:18:05,360 --> 00:18:07,280
and with the help of compass we can find

568
00:18:07,280 --> 00:18:08,640
where is the north

569
00:18:08,640 --> 00:18:10,480
that is the same function the

570
00:18:10,480 --> 00:18:12,240
magnetometer does it tells you where is

571
00:18:12,240 --> 00:18:13,200
the north and

572
00:18:13,200 --> 00:18:14,320
it will tell you the magnetic

573
00:18:14,320 --> 00:18:16,240
orientation of your drone and

574
00:18:16,240 --> 00:18:18,080
with the help of the barometer you can

575
00:18:18,080 --> 00:18:20,240
calculate the altitude so nowadays

576
00:18:20,240 --> 00:18:21,679
fitness smart watches and even

577
00:18:21,679 --> 00:18:23,440
smartphone it comes with

578
00:18:23,440 --> 00:18:26,080
an altimeter or a barometer it's nothing

579
00:18:26,080 --> 00:18:28,400
but a barometer which is capable of

580
00:18:28,400 --> 00:18:30,240
sensing the change in air pressure as

581
00:18:30,240 --> 00:18:32,080
you move to a height and with the help

582
00:18:32,080 --> 00:18:33,520
of that it can tell you your current

583
00:18:33,520 --> 00:18:34,240
altitude

584
00:18:34,240 --> 00:18:36,640
from sea level from ground level so that

585
00:18:36,640 --> 00:18:38,400
is a function of a barometer

586
00:18:38,400 --> 00:18:40,400
so the question is how these sensors are

587
00:18:40,400 --> 00:18:41,760
made so small that

588
00:18:41,760 --> 00:18:43,520
they can fit in one single chip as you

589
00:18:43,520 --> 00:18:44,880
can see on the left so

590
00:18:44,880 --> 00:18:47,520
the answer lies in piezoelectricity so

591
00:18:47,520 --> 00:18:49,440
piezoelectricity is a concept where you

592
00:18:49,440 --> 00:18:51,360
can make electricity from some kind of

593
00:18:51,360 --> 00:18:52,160
motion

594
00:18:52,160 --> 00:18:54,640
and vice versa so a piezoelectric

595
00:18:54,640 --> 00:18:56,320
crystals are basically

596
00:18:56,320 --> 00:18:59,039
the subtanks used for making these kinds

597
00:18:59,039 --> 00:19:00,799
of sensors and they are relatively very

598
00:19:00,799 --> 00:19:01,520
very small

599
00:19:01,520 --> 00:19:04,160
in microns and these piezoelectric

600
00:19:04,160 --> 00:19:05,919
crystals when you make motion in one

601
00:19:05,919 --> 00:19:06,799
axis they

602
00:19:06,799 --> 00:19:08,880
generate some electricity some electric

603
00:19:08,880 --> 00:19:10,240
current and uh

604
00:19:10,240 --> 00:19:12,080
inside the chip you can have some

605
00:19:12,080 --> 00:19:13,919
amplifiers and you can find

606
00:19:13,919 --> 00:19:15,360
how much current is generated and you

607
00:19:15,360 --> 00:19:17,280
can you can find the

608
00:19:17,280 --> 00:19:19,679
uh the the motion in one particular axis

609
00:19:19,679 --> 00:19:21,200
so this concept is known as

610
00:19:21,200 --> 00:19:23,600
piezoelectricity and the septums that

611
00:19:23,600 --> 00:19:24,960
shows piece of electricity are called

612
00:19:24,960 --> 00:19:27,440
piezoelectric materials so that is how

613
00:19:27,440 --> 00:19:30,400
uh these uh imus are integrated in

614
00:19:30,400 --> 00:19:32,400
smaller chips and that's how they are

615
00:19:32,400 --> 00:19:34,000
manufactured all right so i mentioned

616
00:19:34,000 --> 00:19:35,520
that with the help of accelerometer you

617
00:19:35,520 --> 00:19:36,400
can calculate

618
00:19:36,400 --> 00:19:38,240
the acceleration in one direction and

619
00:19:38,240 --> 00:19:39,600
with the help of gyroscope you can

620
00:19:39,600 --> 00:19:41,440
calculate the angular velocity in one

621
00:19:41,440 --> 00:19:42,400
direction

622
00:19:42,400 --> 00:19:43,919
and if your drone also has a

623
00:19:43,919 --> 00:19:45,520
magnetometer which is not

624
00:19:45,520 --> 00:19:47,360
very much common in case of fpv drones

625
00:19:47,360 --> 00:19:49,039
then you can also calculate the magnetic

626
00:19:49,039 --> 00:19:50,080
orientation

627
00:19:50,080 --> 00:19:52,400
but as i mentioned that the imu is

628
00:19:52,400 --> 00:19:54,720
communicating with the cpu our i2c and

629
00:19:54,720 --> 00:19:55,360
spi

630
00:19:55,360 --> 00:19:58,240
and uh with the very high speed uh data

631
00:19:58,240 --> 00:19:58,960
transfer

632
00:19:58,960 --> 00:20:01,120
uh the problem that is often seen in

633
00:20:01,120 --> 00:20:02,640
these kinds of communication is the

634
00:20:02,640 --> 00:20:03,679
noise in the

635
00:20:03,679 --> 00:20:06,159
in in the system and this noise sources

636
00:20:06,159 --> 00:20:08,000
can be anything it can be the noise

637
00:20:08,000 --> 00:20:09,919
coming from the vibration of your drone

638
00:20:09,919 --> 00:20:11,919
or your motors maybe your motor is

639
00:20:11,919 --> 00:20:13,760
not correctly mounted and it's vibrating

640
00:20:13,760 --> 00:20:15,039
when it's rotating

641
00:20:15,039 --> 00:20:17,360
so these kinds of problem are also very

642
00:20:17,360 --> 00:20:18,799
common when we're talking about

643
00:20:18,799 --> 00:20:20,640
communication between the imu and the

644
00:20:20,640 --> 00:20:23,840
cpu but again as i mentioned that

645
00:20:23,840 --> 00:20:25,679
you can you can definitely measure the

646
00:20:25,679 --> 00:20:27,840
linear acceleration and angular velocity

647
00:20:27,840 --> 00:20:28,799
using

648
00:20:28,799 --> 00:20:30,960
accelerometer and gyroscope but at the

649
00:20:30,960 --> 00:20:32,559
end of the day we are more concerned

650
00:20:32,559 --> 00:20:34,000
about the angle of the drone

651
00:20:34,000 --> 00:20:35,600
and not the acceleration and not the

652
00:20:35,600 --> 00:20:37,760
angular velocity we need to calculate

653
00:20:37,760 --> 00:20:38,400
what is

654
00:20:38,400 --> 00:20:40,400
my roll angle what is my pitch angle and

655
00:20:40,400 --> 00:20:42,159
what is my yaw angle because at the end

656
00:20:42,159 --> 00:20:43,200
of the day

657
00:20:43,200 --> 00:20:46,159
this is the data which you are more

658
00:20:46,159 --> 00:20:47,760
considerate about and this is the data

659
00:20:47,760 --> 00:20:48,000
which

660
00:20:48,000 --> 00:20:49,840
you need more and you need to compute it

661
00:20:49,840 --> 00:20:52,320
on that particular angle you don't need

662
00:20:52,320 --> 00:20:54,320
the linear acceleration or angular

663
00:20:54,320 --> 00:20:56,480
velocity so how can we solve this

664
00:20:56,480 --> 00:20:57,280
problem and

665
00:20:57,280 --> 00:20:59,440
as i mentioned that noise in the signal

666
00:20:59,440 --> 00:21:01,520
can be from mechanical vibration it can

667
00:21:01,520 --> 00:21:03,360
be electrical noise and

668
00:21:03,360 --> 00:21:05,919
in the motor chapter i mentioned that

669
00:21:05,919 --> 00:21:07,919
the new esc's has something called

670
00:21:07,919 --> 00:21:10,240
regenerative braking and when the motor

671
00:21:10,240 --> 00:21:10,960
is brake

672
00:21:10,960 --> 00:21:14,159
some electricity some voltage is

673
00:21:14,159 --> 00:21:16,000
sent back to the signal it's called back

674
00:21:16,000 --> 00:21:18,080
emf so these kinds of things generate

675
00:21:18,080 --> 00:21:20,159
noise in the system and it can

676
00:21:20,159 --> 00:21:22,000
very easily uh give the false

677
00:21:22,000 --> 00:21:23,760
information to the cpu that

678
00:21:23,760 --> 00:21:25,679
this is not the correct data coming from

679
00:21:25,679 --> 00:21:29,200
imu but some distorted data

680
00:21:29,200 --> 00:21:31,600
there is some other problems which are

681
00:21:31,600 --> 00:21:33,200
problems related to these

682
00:21:33,200 --> 00:21:34,880
sensors and these are universal in

683
00:21:34,880 --> 00:21:37,039
nature and you cannot just

684
00:21:37,039 --> 00:21:39,600
uh ignore that for example the value of

685
00:21:39,600 --> 00:21:40,480
a gyroscope

686
00:21:40,480 --> 00:21:42,640
drifts over time and that with drifting

687
00:21:42,640 --> 00:21:43,600
i mean that

688
00:21:43,600 --> 00:21:45,840
the value of gyroscope will keep on

689
00:21:45,840 --> 00:21:47,360
changing over time and

690
00:21:47,360 --> 00:21:49,360
it you cannot rely on gyroscope value in

691
00:21:49,360 --> 00:21:51,760
very long duration for that reason

692
00:21:51,760 --> 00:21:53,520
and the accelerometer values they are

693
00:21:53,520 --> 00:21:54,880
very noisy and

694
00:21:54,880 --> 00:21:57,360
even if you do very small motion very

695
00:21:57,360 --> 00:21:58,159
very small

696
00:21:58,159 --> 00:22:00,480
motion you will get a change in the

697
00:22:00,480 --> 00:22:02,559
accelerometer value and that is why it's

698
00:22:02,559 --> 00:22:04,000
not very reliable for short-term

699
00:22:04,000 --> 00:22:05,679
duration so

700
00:22:05,679 --> 00:22:08,159
with with with these problems in system

701
00:22:08,159 --> 00:22:08,880
you cannot

702
00:22:08,880 --> 00:22:11,360
just to use accelerometer and gyroscope

703
00:22:11,360 --> 00:22:12,240
straight away

704
00:22:12,240 --> 00:22:14,320
to make a reliable drone and you need

705
00:22:14,320 --> 00:22:15,679
something which can

706
00:22:15,679 --> 00:22:18,400
counter this uh problems and what is the

707
00:22:18,400 --> 00:22:20,240
solution the solution lies in

708
00:22:20,240 --> 00:22:22,400
digital signal processing and now that

709
00:22:22,400 --> 00:22:24,159
you know that we have all these problems

710
00:22:24,159 --> 00:22:26,159
we also have the solutions and

711
00:22:26,159 --> 00:22:28,480
the solution lies in dsp or digital

712
00:22:28,480 --> 00:22:30,000
signal processing so

713
00:22:30,000 --> 00:22:32,480
what exactly is dsp it's like a

714
00:22:32,480 --> 00:22:34,320
filtering of signals so what we need to

715
00:22:34,320 --> 00:22:34,640
do

716
00:22:34,640 --> 00:22:37,440
is uh we need to filter the main signal

717
00:22:37,440 --> 00:22:39,039
out from the noise we need to filter out

718
00:22:39,039 --> 00:22:41,039
the noise we don't want noise in that

719
00:22:41,039 --> 00:22:43,679
in our system because noise gives false

720
00:22:43,679 --> 00:22:44,640
information

721
00:22:44,640 --> 00:22:47,200
uh because of noise use your cpu will

722
00:22:47,200 --> 00:22:48,799
get false information and it will do

723
00:22:48,799 --> 00:22:50,159
false computation and

724
00:22:50,159 --> 00:22:51,760
you will not get the desired results

725
00:22:51,760 --> 00:22:53,600
what you want to do with the system or

726
00:22:53,600 --> 00:22:54,240
in

727
00:22:54,240 --> 00:22:56,240
in our case the drone so we need to

728
00:22:56,240 --> 00:22:57,440
filter out the noise and

729
00:22:57,440 --> 00:22:59,280
we can do that by using dsp and we'll

730
00:22:59,280 --> 00:23:00,880
talk about how

731
00:23:00,880 --> 00:23:02,960
the second thing which i mentioned that

732
00:23:02,960 --> 00:23:04,480
accelerometer gives you the linear

733
00:23:04,480 --> 00:23:05,360
acceleration

734
00:23:05,360 --> 00:23:07,039
and gyroscope gives you the angular

735
00:23:07,039 --> 00:23:09,440
velocity but how you can use these two

736
00:23:09,440 --> 00:23:10,080
different

737
00:23:10,080 --> 00:23:12,559
values to find the angle of one

738
00:23:12,559 --> 00:23:14,240
particular axis the answer lies in

739
00:23:14,240 --> 00:23:15,600
sensor fusion

740
00:23:15,600 --> 00:23:17,919
so we can combine multiple sensor value

741
00:23:17,919 --> 00:23:19,600
and we can calculate what we want

742
00:23:19,600 --> 00:23:22,080
and not exactly what they give so we'll

743
00:23:22,080 --> 00:23:24,000
talk about these two powerful concept

744
00:23:24,000 --> 00:23:25,679
and trust me these are the

745
00:23:25,679 --> 00:23:28,480
very powerful concept especially sensor

746
00:23:28,480 --> 00:23:29,039
fusion

747
00:23:29,039 --> 00:23:30,720
and it's being used everywhere in

748
00:23:30,720 --> 00:23:33,360
today's world in self-driving cars

749
00:23:33,360 --> 00:23:36,159
in your printers in everywhere you can

750
00:23:36,159 --> 00:23:37,679
see these kinds of concepts are being

751
00:23:37,679 --> 00:23:38,320
used

752
00:23:38,320 --> 00:23:40,000
so let's talk about how they are being

753
00:23:40,000 --> 00:23:41,679
used in the drone so

754
00:23:41,679 --> 00:23:43,440
first of all let's talk about filtering

755
00:23:43,440 --> 00:23:45,679
and what we need to filter here we need

756
00:23:45,679 --> 00:23:47,600
to filter the noise from the system we

757
00:23:47,600 --> 00:23:49,919
need to filter the noise which is coming

758
00:23:49,919 --> 00:23:51,279
with the actual value of

759
00:23:51,279 --> 00:23:53,679
accelerometer and gyroscope so filtering

760
00:23:53,679 --> 00:23:55,760
can be as simple as mounting

761
00:23:55,760 --> 00:23:58,320
your imu on a vibration dampening base

762
00:23:58,320 --> 00:23:59,440
or it can be as

763
00:23:59,440 --> 00:24:01,919
complex as designing a multiple order

764
00:24:01,919 --> 00:24:03,760
filter filter in the firmware

765
00:24:03,760 --> 00:24:06,000
example notch filter so you need to

766
00:24:06,000 --> 00:24:06,960
ultimately

767
00:24:06,960 --> 00:24:08,720
reduce the vibrations coming into your

768
00:24:08,720 --> 00:24:10,720
system because as i mentioned that even

769
00:24:10,720 --> 00:24:12,480
the small motion can

770
00:24:12,480 --> 00:24:14,159
generate some values in the system which

771
00:24:14,159 --> 00:24:16,000
you don't want so what you can do is you

772
00:24:16,000 --> 00:24:17,279
can either mount your

773
00:24:17,279 --> 00:24:19,520
imu or in this case flight controller

774
00:24:19,520 --> 00:24:20,960
because imu is in

775
00:24:20,960 --> 00:24:23,120
on on your flight controller so what you

776
00:24:23,120 --> 00:24:24,480
can do is you can mount your flight

777
00:24:24,480 --> 00:24:26,159
controller on a vibration dampening

778
00:24:26,159 --> 00:24:27,919
system so it doesn't

779
00:24:27,919 --> 00:24:30,000
affect if there are vibration coming in

780
00:24:30,000 --> 00:24:31,039
the system

781
00:24:31,039 --> 00:24:33,120
and uh what else you can do is so that

782
00:24:33,120 --> 00:24:34,640
is not the solution maybe your drone

783
00:24:34,640 --> 00:24:36,559
frame is really small you cannot uh

784
00:24:36,559 --> 00:24:38,240
add a vibration dampening what you can

785
00:24:38,240 --> 00:24:40,000
do is you can design a filter

786
00:24:40,000 --> 00:24:42,559
in in your firmware and you can program

787
00:24:42,559 --> 00:24:43,279
the filter

788
00:24:43,279 --> 00:24:45,120
and example is a notch filter so what a

789
00:24:45,120 --> 00:24:46,799
notch filter to notch filter

790
00:24:46,799 --> 00:24:48,480
will identify the noise source will

791
00:24:48,480 --> 00:24:50,000
identify the noise signal and it will

792
00:24:50,000 --> 00:24:51,120
filter it out

793
00:24:51,120 --> 00:24:53,600
uh similarly you can use a low pass

794
00:24:53,600 --> 00:24:55,440
filter that will filter the high

795
00:24:55,440 --> 00:24:56,960
frequencies and

796
00:24:56,960 --> 00:24:58,480
when i talk about the noise these are

797
00:24:58,480 --> 00:25:00,240
generally high frequencies in the system

798
00:25:00,240 --> 00:25:00,799
so

799
00:25:00,799 --> 00:25:02,400
you can design a low pass filter that

800
00:25:02,400 --> 00:25:04,240
will pass the low signal no low

801
00:25:04,240 --> 00:25:05,760
frequency signal and it will block the

802
00:25:05,760 --> 00:25:07,120
high frequency signal

803
00:25:07,120 --> 00:25:09,520
so one such good example is i can show

804
00:25:09,520 --> 00:25:11,039
with the overhead camera

805
00:25:11,039 --> 00:25:14,320
uh is so here you can see in my drone

806
00:25:14,320 --> 00:25:15,360
i'm using uh this

807
00:25:15,360 --> 00:25:17,200
vibration dampening the balls which we

808
00:25:17,200 --> 00:25:18,720
are using in our drone so this

809
00:25:18,720 --> 00:25:21,200
ensure that there is no mechanical noise

810
00:25:21,200 --> 00:25:22,240
in the system

811
00:25:22,240 --> 00:25:25,360
and uh similarly you can add that in the

812
00:25:25,360 --> 00:25:27,200
drone itself so this is a

813
00:25:27,200 --> 00:25:29,120
bigger frame which allows you to add

814
00:25:29,120 --> 00:25:30,720
these kinds of

815
00:25:30,720 --> 00:25:32,720
vibration absorbers and this ensures

816
00:25:32,720 --> 00:25:35,279
that the mechanical noise coming from

817
00:25:35,279 --> 00:25:36,880
the vibrations in the drone

818
00:25:36,880 --> 00:25:38,240
so moving part of the drones are

819
00:25:38,240 --> 00:25:39,600
generally motors and they create

820
00:25:39,600 --> 00:25:40,960
vibrations so this will absorb the

821
00:25:40,960 --> 00:25:43,039
vibration and your flight controller

822
00:25:43,039 --> 00:25:44,480
which is having the imu

823
00:25:44,480 --> 00:25:46,880
will be mounted on the top of this plate

824
00:25:46,880 --> 00:25:48,799
so overall it's a really

825
00:25:48,799 --> 00:25:50,880
a sweet hack to do and a lot of people

826
00:25:50,880 --> 00:25:53,120
do that it will give you a good flight

827
00:25:53,120 --> 00:25:55,360
uh tuning of the drone will be much

828
00:25:55,360 --> 00:25:57,520
easier because you are countering the

829
00:25:57,520 --> 00:25:59,919
vibration coming into the system uh but

830
00:25:59,919 --> 00:26:01,760
again it's not possible everywhere it's

831
00:26:01,760 --> 00:26:02,799
not

832
00:26:02,799 --> 00:26:04,640
it's something which requires space and

833
00:26:04,640 --> 00:26:07,200
it's not possible in smaller drones so

834
00:26:07,200 --> 00:26:09,039
what you can do is you can implement a

835
00:26:09,039 --> 00:26:10,480
higher order filter

836
00:26:10,480 --> 00:26:13,039
as i have seen here so this is again a

837
00:26:13,039 --> 00:26:14,720
complicated thing but

838
00:26:14,720 --> 00:26:16,320
we are lucky enough that the drone

839
00:26:16,320 --> 00:26:17,919
firmwares are open source and we don't

840
00:26:17,919 --> 00:26:18,720
need to program

841
00:26:18,720 --> 00:26:20,320
everything so we'll talk about that in

842
00:26:20,320 --> 00:26:22,080
later slides but now for now you can

843
00:26:22,080 --> 00:26:23,279
understand that

844
00:26:23,279 --> 00:26:25,039
we can filter the noise in the system

845
00:26:25,039 --> 00:26:27,039
using vibration dampeners or designing

846
00:26:27,039 --> 00:26:28,960
of filters in the firmware so we solve

847
00:26:28,960 --> 00:26:30,960
the first problem of noise using

848
00:26:30,960 --> 00:26:33,039
filters or vibration dampeners but what

849
00:26:33,039 --> 00:26:34,480
about the second problem the second

850
00:26:34,480 --> 00:26:36,640
problem is relatively more complicated

851
00:26:36,640 --> 00:26:37,279
where

852
00:26:37,279 --> 00:26:39,520
the sensors which are available to us on

853
00:26:39,520 --> 00:26:41,039
our drone imus

854
00:26:41,039 --> 00:26:43,360
they do not directly provide the the

855
00:26:43,360 --> 00:26:44,960
degrees of any access

856
00:26:44,960 --> 00:26:46,640
like what is the degree of your pitch

857
00:26:46,640 --> 00:26:48,400
currently how much

858
00:26:48,400 --> 00:26:50,720
uh your drone is tilted in this

859
00:26:50,720 --> 00:26:52,240
particular angle

860
00:26:52,240 --> 00:26:54,720
but it provides acceleration and angular

861
00:26:54,720 --> 00:26:56,880
velocity but that is no use of us

862
00:26:56,880 --> 00:26:59,200
directly so uh what we're going to do

863
00:26:59,200 --> 00:27:00,960
we're going to use a concept called

864
00:27:00,960 --> 00:27:03,039
sensor fusion and as i already mentioned

865
00:27:03,039 --> 00:27:05,039
sensor fusion is a very very powerful

866
00:27:05,039 --> 00:27:06,159
concept used

867
00:27:06,159 --> 00:27:08,240
a lot of different industries like

868
00:27:08,240 --> 00:27:10,080
automation and automotive

869
00:27:10,080 --> 00:27:12,320
uh in the automotive it's really useful

870
00:27:12,320 --> 00:27:14,480
in self-driving cars where

871
00:27:14,480 --> 00:27:16,240
you have a lot of cameras in your cars

872
00:27:16,240 --> 00:27:17,840
and you also have lidar so you have

873
00:27:17,840 --> 00:27:19,440
different sensors and you combine all

874
00:27:19,440 --> 00:27:20,000
those

875
00:27:20,000 --> 00:27:22,159
you fuse all those and you come up with

876
00:27:22,159 --> 00:27:24,399
the with one value or one

877
00:27:24,399 --> 00:27:26,240
useful set of data that you can use for

878
00:27:26,240 --> 00:27:28,720
your advantage so similarly we will be

879
00:27:28,720 --> 00:27:30,880
fusing the accelerometer value and the

880
00:27:30,880 --> 00:27:33,919
gyro gyro value together to get

881
00:27:33,919 --> 00:27:36,960
some some something of use we may not

882
00:27:36,960 --> 00:27:37,279
get

883
00:27:37,279 --> 00:27:39,200
the angle directly but we will try to

884
00:27:39,200 --> 00:27:40,799
estimate it so let's see how that works

885
00:27:40,799 --> 00:27:41,440
so

886
00:27:41,440 --> 00:27:43,760
uh let's see how we can use

887
00:27:43,760 --> 00:27:46,240
accelerometer to our advantage so

888
00:27:46,240 --> 00:27:49,279
no matter how your drone is

889
00:27:49,279 --> 00:27:51,360
in with respect to the ground no matter

890
00:27:51,360 --> 00:27:53,039
what is the pitch angle roll angle or

891
00:27:53,039 --> 00:27:54,000
your angle

892
00:27:54,000 --> 00:27:56,159
the acceleration due to gravity will

893
00:27:56,159 --> 00:27:57,840
always face downwards because the

894
00:27:57,840 --> 00:27:58,799
gravity

895
00:27:58,799 --> 00:28:01,200
pulls the object downwards so we always

896
00:28:01,200 --> 00:28:03,039
know that in which direction the gravity

897
00:28:03,039 --> 00:28:05,120
is that is the down and if your drone is

898
00:28:05,120 --> 00:28:06,880
making some changes in this

899
00:28:06,880 --> 00:28:08,399
let's say pitch angle so you will see

900
00:28:08,399 --> 00:28:09,840
this is forming a right triangle and

901
00:28:09,840 --> 00:28:11,600
with the help of a trigonometry let's

902
00:28:11,600 --> 00:28:13,360
say tan theta we know

903
00:28:13,360 --> 00:28:14,960
this distance and this distance and we

904
00:28:14,960 --> 00:28:16,799
can calculate uh the

905
00:28:16,799 --> 00:28:18,960
this angle so this is a very powerful

906
00:28:18,960 --> 00:28:21,520
concept and we can use the accelerometer

907
00:28:21,520 --> 00:28:23,760
uh to our advantage and we can calculate

908
00:28:23,760 --> 00:28:24,640
this angle

909
00:28:24,640 --> 00:28:27,360
uh but of course it is not much useful

910
00:28:27,360 --> 00:28:27,840
because

911
00:28:27,840 --> 00:28:30,960
as i mentioned that the value of the

912
00:28:30,960 --> 00:28:32,799
data coming from the accelerometer it's

913
00:28:32,799 --> 00:28:34,880
a very noisy and even very very small

914
00:28:34,880 --> 00:28:35,840
change can

915
00:28:35,840 --> 00:28:39,200
uh give a huge deviation in the value so

916
00:28:39,200 --> 00:28:41,440
uh it's a not very helpful in shorter

917
00:28:41,440 --> 00:28:42,480
term maybe over long

918
00:28:42,480 --> 00:28:44,960
longer term let's say uh when your drone

919
00:28:44,960 --> 00:28:46,640
is flying for

920
00:28:46,640 --> 00:28:48,559
five minutes it's it's maybe useful but

921
00:28:48,559 --> 00:28:49,919
not for the shorter term because it's

922
00:28:49,919 --> 00:28:50,799
very noisy

923
00:28:50,799 --> 00:28:52,640
to get value from accelerometer and if

924
00:28:52,640 --> 00:28:54,559
you want to verify you can just take an

925
00:28:54,559 --> 00:28:55,520
arduino and

926
00:28:55,520 --> 00:28:58,240
and use any accelerometer like adxl 335

927
00:28:58,240 --> 00:28:59,200
and you can see

928
00:28:59,200 --> 00:29:01,120
even very small chains will give you a

929
00:29:01,120 --> 00:29:03,279
very huge deviation in the data so

930
00:29:03,279 --> 00:29:05,039
accelerometer values are no good in

931
00:29:05,039 --> 00:29:06,399
shorter terms

932
00:29:06,399 --> 00:29:09,050
but how we can estimate using

933
00:29:09,050 --> 00:29:10,320
[Music]

934
00:29:10,320 --> 00:29:12,480
the gyroscope so gyroscope what it

935
00:29:12,480 --> 00:29:13,919
counts it counts uh

936
00:29:13,919 --> 00:29:16,799
uh angular velocity so how we can use

937
00:29:16,799 --> 00:29:18,880
that for our advantage so let's say the

938
00:29:18,880 --> 00:29:20,320
angular velocity of

939
00:29:20,320 --> 00:29:22,880
this particular drone in pitch axis it's

940
00:29:22,880 --> 00:29:23,600
two degree

941
00:29:23,600 --> 00:29:25,520
per second let's estimate that so let's

942
00:29:25,520 --> 00:29:26,799
say we are uh

943
00:29:26,799 --> 00:29:28,880
moving our drone in pitch axis at two

944
00:29:28,880 --> 00:29:30,240
degree per second so

945
00:29:30,240 --> 00:29:33,120
uh at the time of for takeoff the pitch

946
00:29:33,120 --> 00:29:35,360
angle is zero degree that is a perfectly

947
00:29:35,360 --> 00:29:37,520
uh level with the horizon to the ground

948
00:29:37,520 --> 00:29:39,360
and it's changing at the rate of 2

949
00:29:39,360 --> 00:29:41,200
degree per second so we know that after

950
00:29:41,200 --> 00:29:43,200
10 second it will be

951
00:29:43,200 --> 00:29:45,200
10 degrees per second or 20 degrees per

952
00:29:45,200 --> 00:29:46,320
second excuse me

953
00:29:46,320 --> 00:29:49,440
so what we have done is we have used the

954
00:29:49,440 --> 00:29:51,600
rate of change of one axis and we have

955
00:29:51,600 --> 00:29:53,120
integrated it over

956
00:29:53,120 --> 00:29:55,600
a time period so this technique it's

957
00:29:55,600 --> 00:29:57,039
called dead reckoning that is

958
00:29:57,039 --> 00:29:58,399
integrating a value

959
00:29:58,399 --> 00:30:00,640
a rate over the time and this is very

960
00:30:00,640 --> 00:30:01,440
helpful

961
00:30:01,440 --> 00:30:04,000
if you want to calculate the rate of

962
00:30:04,000 --> 00:30:05,919
change of a particular set of time

963
00:30:05,919 --> 00:30:09,440
but again the problem here is value is

964
00:30:09,440 --> 00:30:11,279
not the only thing that is integrating

965
00:30:11,279 --> 00:30:13,520
over time so these values also have some

966
00:30:13,520 --> 00:30:14,080
sort of

967
00:30:14,080 --> 00:30:16,240
noise and this noise will also get

968
00:30:16,240 --> 00:30:17,840
integrated over the time and

969
00:30:17,840 --> 00:30:20,320
over the over the over the time let's

970
00:30:20,320 --> 00:30:21,039
say

971
00:30:21,039 --> 00:30:23,120
in two or three minutes it will get

972
00:30:23,120 --> 00:30:25,520
almost unusable values because

973
00:30:25,520 --> 00:30:27,360
the noise will become too big after

974
00:30:27,360 --> 00:30:28,880
integrating in each cycle

975
00:30:28,880 --> 00:30:31,360
so that is why i said in in couple of

976
00:30:31,360 --> 00:30:33,039
previous slides that

977
00:30:33,039 --> 00:30:35,279
gyroscope values it drifts over time

978
00:30:35,279 --> 00:30:36,960
because the noise is getting integrating

979
00:30:36,960 --> 00:30:38,240
over time and it becomes

980
00:30:38,240 --> 00:30:41,039
very unusable to use only the gyroscope

981
00:30:41,039 --> 00:30:42,480
value over the

982
00:30:42,480 --> 00:30:44,080
bigger period of time so that's what i

983
00:30:44,080 --> 00:30:45,440
mentioned that noises also get

984
00:30:45,440 --> 00:30:46,799
integrated so

985
00:30:46,799 --> 00:30:48,559
the problem with accelerometer is the

986
00:30:48,559 --> 00:30:50,720
value it's not usable for

987
00:30:50,720 --> 00:30:52,320
shorter duration the problem with

988
00:30:52,320 --> 00:30:54,240
gyroscope is the value is not reliable

989
00:30:54,240 --> 00:30:55,840
in longer duration so

990
00:30:55,840 --> 00:30:58,159
how we can use these two techniques

991
00:30:58,159 --> 00:30:59,600
because these two techniques definitely

992
00:30:59,600 --> 00:31:01,200
giving us some useful data

993
00:31:01,200 --> 00:31:02,880
but how we can use these two techniques

994
00:31:02,880 --> 00:31:04,480
to get something usable out of it

995
00:31:04,480 --> 00:31:06,159
something which we can actually use for

996
00:31:06,159 --> 00:31:07,360
our advantage

997
00:31:07,360 --> 00:31:09,360
and we can actually do that so we can do

998
00:31:09,360 --> 00:31:10,480
that something

999
00:31:10,480 --> 00:31:11,519
with something using called

1000
00:31:11,519 --> 00:31:13,600
complementary filter and complementary

1001
00:31:13,600 --> 00:31:15,840
filter is a very easy to implement a

1002
00:31:15,840 --> 00:31:18,159
very powerful concept and

1003
00:31:18,159 --> 00:31:19,919
what is happening here so as i mentioned

1004
00:31:19,919 --> 00:31:21,279
that accelerometer

1005
00:31:21,279 --> 00:31:23,440
not reliable in short term gyroscope not

1006
00:31:23,440 --> 00:31:25,120
reliable in longer term so how we can

1007
00:31:25,120 --> 00:31:27,200
take best of both worlds so we can use

1008
00:31:27,200 --> 00:31:29,200
something called complementary filter

1009
00:31:29,200 --> 00:31:31,360
where we pass the value of accelerometer

1010
00:31:31,360 --> 00:31:34,080
from a low pass filter and we pass the

1011
00:31:34,080 --> 00:31:35,440
gyroscope value

1012
00:31:35,440 --> 00:31:38,080
integrated gyroscopic value from a high

1013
00:31:38,080 --> 00:31:40,080
pass filter and together we get a

1014
00:31:40,080 --> 00:31:42,399
complementary filter because

1015
00:31:42,399 --> 00:31:44,159
the low pass filter is complementary of

1016
00:31:44,159 --> 00:31:46,320
the high pass filter that is if your low

1017
00:31:46,320 --> 00:31:47,279
pass filter is g

1018
00:31:47,279 --> 00:31:49,279
of s your high pass filter will be 1

1019
00:31:49,279 --> 00:31:51,919
minus g of s and ultimately you will get

1020
00:31:51,919 --> 00:31:55,679
the full value that is the one value so

1021
00:31:55,679 --> 00:31:57,679
this is a very powerful concept and very

1022
00:31:57,679 --> 00:31:59,440
easy to implement complementary filters

1023
00:31:59,440 --> 00:31:59,679
are

1024
00:31:59,679 --> 00:32:02,240
really smooth to implement even if you

1025
00:32:02,240 --> 00:32:02,880
have some

1026
00:32:02,880 --> 00:32:04,799
different application let's say you want

1027
00:32:04,799 --> 00:32:06,000
to build a self

1028
00:32:06,000 --> 00:32:08,720
self stabilized robot which can be

1029
00:32:08,720 --> 00:32:10,320
stabilized in two wheels

1030
00:32:10,320 --> 00:32:11,200
you can use something called

1031
00:32:11,200 --> 00:32:13,600
complementary filter where you can

1032
00:32:13,600 --> 00:32:17,039
use a mpu6050 imu which is very cheaply

1033
00:32:17,039 --> 00:32:17,679
available

1034
00:32:17,679 --> 00:32:20,240
you can use it with the arduino you can

1035
00:32:20,240 --> 00:32:22,080
uh you can put some motors and

1036
00:32:22,080 --> 00:32:23,840
you can pass the value of accelerometer

1037
00:32:23,840 --> 00:32:25,679
from low pass filter value of gyro from

1038
00:32:25,679 --> 00:32:26,799
high pass filter

1039
00:32:26,799 --> 00:32:29,200
and over uh the actual value which you

1040
00:32:29,200 --> 00:32:30,399
will get that is

1041
00:32:30,399 --> 00:32:32,000
the one value that will be the usable

1042
00:32:32,000 --> 00:32:34,240
value which you can actually rely on

1043
00:32:34,240 --> 00:32:36,720
so this will give you the usable value

1044
00:32:36,720 --> 00:32:38,240
and it will tell you what is

1045
00:32:38,240 --> 00:32:40,320
the current attitude of your system in

1046
00:32:40,320 --> 00:32:42,720
our case so it will tell us what is

1047
00:32:42,720 --> 00:32:45,919
uh the attitude of for the drone in x y

1048
00:32:45,919 --> 00:32:49,679
and z or the yaw pitch and roll axis so

1049
00:32:49,679 --> 00:32:52,320
again this is called sensor fusion and

1050
00:32:52,320 --> 00:32:54,320
we literally fuse this two value we take

1051
00:32:54,320 --> 00:32:56,320
accelerometer value we take integrated

1052
00:32:56,320 --> 00:32:58,240
gyro value and we fuse this together to

1053
00:32:58,240 --> 00:33:00,880
use one value for our advantage we use

1054
00:33:00,880 --> 00:33:02,640
the best of both world

1055
00:33:02,640 --> 00:33:04,880
that is the short-term benefits of

1056
00:33:04,880 --> 00:33:07,120
accelerometer and long-term benefits of

1057
00:33:07,120 --> 00:33:08,320
gyroscope and you can see this

1058
00:33:08,320 --> 00:33:10,720
excitement because when you actually

1059
00:33:10,720 --> 00:33:13,360
implement this it's a very powerful

1060
00:33:13,360 --> 00:33:14,720
concept and very easy

1061
00:33:14,720 --> 00:33:16,799
so even for arduino like

1062
00:33:16,799 --> 00:33:18,559
microcontrollers if you have

1063
00:33:18,559 --> 00:33:20,000
uh complementary filters you can

1064
00:33:20,000 --> 00:33:22,240
implement with some libraries there are

1065
00:33:22,240 --> 00:33:23,840
some open source library which help you

1066
00:33:23,840 --> 00:33:25,440
implement complementary filter and if

1067
00:33:25,440 --> 00:33:26,720
you are into that i would highly

1068
00:33:26,720 --> 00:33:28,480
recommend you to do that and see for

1069
00:33:28,480 --> 00:33:29,840
yourself

1070
00:33:29,840 --> 00:33:32,000
so again this is called sensor fusion

1071
00:33:32,000 --> 00:33:32,960
and

1072
00:33:32,960 --> 00:33:34,799
at the end you get something useful

1073
00:33:34,799 --> 00:33:36,159
value you get

1074
00:33:36,159 --> 00:33:39,279
a degree an estimated degree of uh

1075
00:33:39,279 --> 00:33:40,880
one particular access which you can

1076
00:33:40,880 --> 00:33:42,640
definitely use for your advantage so

1077
00:33:42,640 --> 00:33:46,000
that was uh uh called sensitive

1078
00:33:46,000 --> 00:33:47,840
all right so that was a complimentary

1079
00:33:47,840 --> 00:33:49,840
filter but uh do you really see some

1080
00:33:49,840 --> 00:33:51,760
disadvantage going on over here and

1081
00:33:51,760 --> 00:33:52,640
which is

1082
00:33:52,640 --> 00:33:54,640
quite significant especially if you see

1083
00:33:54,640 --> 00:33:55,679
that

1084
00:33:55,679 --> 00:33:58,080
you are getting data at speed of 32

1085
00:33:58,080 --> 00:33:59,039
kilohertz at

1086
00:33:59,039 --> 00:34:02,080
32 000 values per second so

1087
00:34:02,080 --> 00:34:03,919
one thing which i can definitely see

1088
00:34:03,919 --> 00:34:05,600
right away is a

1089
00:34:05,600 --> 00:34:07,760
complimentary filter is using old values

1090
00:34:07,760 --> 00:34:09,918
and integrating it over time so over

1091
00:34:09,918 --> 00:34:10,560
time

1092
00:34:10,560 --> 00:34:12,000
a lot of different values will be

1093
00:34:12,000 --> 00:34:13,918
integrated together and you need to

1094
00:34:13,918 --> 00:34:15,679
store these old values and

1095
00:34:15,679 --> 00:34:18,480
it will become really cost costly on

1096
00:34:18,480 --> 00:34:20,000
memory and computation power

1097
00:34:20,000 --> 00:34:21,760
and to integrate it and do all kind of

1098
00:34:21,760 --> 00:34:23,119
things so

1099
00:34:23,119 --> 00:34:26,000
that is one drawback i see and of course

1100
00:34:26,000 --> 00:34:27,520
we are getting the angle but

1101
00:34:27,520 --> 00:34:30,079
do we really need the absolute value of

1102
00:34:30,079 --> 00:34:31,599
the angle or we can do some kind of

1103
00:34:31,599 --> 00:34:32,560
estimation

1104
00:34:32,560 --> 00:34:34,320
so to overcome these kinds of

1105
00:34:34,320 --> 00:34:36,719
disadvantage we have something

1106
00:34:36,719 --> 00:34:39,040
uh called a kalman filter and this is a

1107
00:34:39,040 --> 00:34:40,879
really really advanced filter it's

1108
00:34:40,879 --> 00:34:43,599
so advanced that i don't want to even

1109
00:34:43,599 --> 00:34:45,199
show you the equation

1110
00:34:45,199 --> 00:34:48,159
uh so you won't get intimidated uh

1111
00:34:48,159 --> 00:34:49,918
because the first time i saw the maths

1112
00:34:49,918 --> 00:34:51,440
behind kalam and filter i was

1113
00:34:51,440 --> 00:34:53,760
really intimidated and it it took me a

1114
00:34:53,760 --> 00:34:54,560
lot of

1115
00:34:54,560 --> 00:34:57,440
time and a lot of efforts to actually

1116
00:34:57,440 --> 00:34:59,119
understand it and

1117
00:34:59,119 --> 00:35:02,320
to actually implement one for myself and

1118
00:35:02,320 --> 00:35:04,240
the reason i don't want to go into that

1119
00:35:04,240 --> 00:35:05,599
much detail because

1120
00:35:05,599 --> 00:35:07,520
not everyone would be implementing it

1121
00:35:07,520 --> 00:35:09,040
their self so you do not have to

1122
00:35:09,040 --> 00:35:11,359
reinvent them in invent the wheel

1123
00:35:11,359 --> 00:35:13,839
there are already people who are good

1124
00:35:13,839 --> 00:35:14,880
programmers who

1125
00:35:14,880 --> 00:35:17,760
are good scientists in this domain of

1126
00:35:17,760 --> 00:35:20,000
digital signal processing who have

1127
00:35:20,000 --> 00:35:21,760
done that and they are provided some

1128
00:35:21,760 --> 00:35:23,440
libraries for us so we can definitely

1129
00:35:23,440 --> 00:35:23,839
use

1130
00:35:23,839 --> 00:35:26,400
those libraries and implement a kalman

1131
00:35:26,400 --> 00:35:27,440
filter but

1132
00:35:27,440 --> 00:35:29,280
because the drones are getting more and

1133
00:35:29,280 --> 00:35:31,040
more advanced and

1134
00:35:31,040 --> 00:35:32,960
the imus are getting more and more

1135
00:35:32,960 --> 00:35:34,240
faster uh

1136
00:35:34,240 --> 00:35:36,000
even in drone racing you are flying at

1137
00:35:36,000 --> 00:35:39,280
speed of 150 miles per hour so you need

1138
00:35:39,280 --> 00:35:42,160
to have a relatively faster filters you

1139
00:35:42,160 --> 00:35:44,079
need to do sensor fusion really fast

1140
00:35:44,079 --> 00:35:45,760
and that is why kalman filter is a

1141
00:35:45,760 --> 00:35:47,359
really really common filter when it

1142
00:35:47,359 --> 00:35:48,400
comes to drone

1143
00:35:48,400 --> 00:35:50,800
so technically speaking complementary

1144
00:35:50,800 --> 00:35:52,880
filter you can definitely use but it is

1145
00:35:52,880 --> 00:35:54,000
not as fast it's

1146
00:35:54,000 --> 00:35:57,040
really costly on memory and on space and

1147
00:35:57,040 --> 00:35:58,079
computation

1148
00:35:58,079 --> 00:36:01,359
so in drone industry in in drone hobbies

1149
00:36:01,359 --> 00:36:02,000
uh the

1150
00:36:02,000 --> 00:36:05,359
the firmware we use so that is uh uh the

1151
00:36:05,359 --> 00:36:06,960
the formula for a flight controller they

1152
00:36:06,960 --> 00:36:08,560
implement called something called kalman

1153
00:36:08,560 --> 00:36:10,560
filter and not complementary filter

1154
00:36:10,560 --> 00:36:12,720
uh maybe some previous firmware so they

1155
00:36:12,720 --> 00:36:14,400
have complimentary filter but nowadays

1156
00:36:14,400 --> 00:36:15,200
i've seen

1157
00:36:15,200 --> 00:36:17,599
everyone using kalman filters and uh why

1158
00:36:17,599 --> 00:36:18,640
because

1159
00:36:18,640 --> 00:36:21,040
uh it's it's i've already told you the

1160
00:36:21,040 --> 00:36:22,480
advantages of kalman filter over

1161
00:36:22,480 --> 00:36:23,920
complementary filters so let's talk

1162
00:36:23,920 --> 00:36:26,240
about that so kalaman filter can be

1163
00:36:26,240 --> 00:36:28,800
used in a dynamic system with uncertain

1164
00:36:28,800 --> 00:36:31,040
data to help make an educated guess

1165
00:36:31,040 --> 00:36:32,480
about what the system is going to do

1166
00:36:32,480 --> 00:36:34,480
next so this is a very very powerful

1167
00:36:34,480 --> 00:36:36,320
concept of kalman filter

1168
00:36:36,320 --> 00:36:39,200
it will give you a a very very good

1169
00:36:39,200 --> 00:36:40,960
estimation of what your system will be

1170
00:36:40,960 --> 00:36:43,040
going to do next based on the current

1171
00:36:43,040 --> 00:36:43,839
values

1172
00:36:43,839 --> 00:36:45,599
and this uncertain data set which you

1173
00:36:45,599 --> 00:36:47,200
will provide to the kalman filter that

1174
00:36:47,200 --> 00:36:47,839
will

1175
00:36:47,839 --> 00:36:49,920
that it will use and do some computation

1176
00:36:49,920 --> 00:36:52,160
and give you a very very good

1177
00:36:52,160 --> 00:36:54,160
guess so it's not absolute it will give

1178
00:36:54,160 --> 00:36:55,839
you uh the estimation

1179
00:36:55,839 --> 00:36:57,200
it's ideal for system that is

1180
00:36:57,200 --> 00:36:59,359
continuously changing and for fpv drones

1181
00:36:59,359 --> 00:37:01,280
so we are flying it very fast from the

1182
00:37:01,280 --> 00:37:02,800
gates and doing all kind of

1183
00:37:02,800 --> 00:37:05,280
maneuvers so it's really ideal for these

1184
00:37:05,280 --> 00:37:06,640
kinds of situation

1185
00:37:06,640 --> 00:37:08,720
uh it does not keep history for previous

1186
00:37:08,720 --> 00:37:09,920
state as i already mentioned in the

1187
00:37:09,920 --> 00:37:11,440
complementary filter it's a neat

1188
00:37:11,440 --> 00:37:12,960
previous value to integrate over time

1189
00:37:12,960 --> 00:37:13,760
but nothing of

1190
00:37:13,760 --> 00:37:15,839
that sort in kalaman and that is why

1191
00:37:15,839 --> 00:37:17,440
it's a very light on memory

1192
00:37:17,440 --> 00:37:19,760
and very light on cpu for faster

1193
00:37:19,760 --> 00:37:21,520
execution so

1194
00:37:21,520 --> 00:37:23,040
and again it's used for optimal state

1195
00:37:23,040 --> 00:37:26,640
estimation so it is used to estimate the

1196
00:37:26,640 --> 00:37:28,400
state of a system and what it will going

1197
00:37:28,400 --> 00:37:30,079
to do next based on the value which you

1198
00:37:30,079 --> 00:37:31,359
are providing it so

1199
00:37:31,359 --> 00:37:34,079
a very powerful concept and everywhere

1200
00:37:34,079 --> 00:37:35,119
where you need to use

1201
00:37:35,119 --> 00:37:37,680
a sensor fused values the kalaman filter

1202
00:37:37,680 --> 00:37:39,760
is a go-to filter i have seen

1203
00:37:39,760 --> 00:37:41,760
everywhere if you want uh have more than

1204
00:37:41,760 --> 00:37:43,040
one sensor and you need to get some

1205
00:37:43,040 --> 00:37:44,400
useful information

1206
00:37:44,400 --> 00:37:47,200
kalavan filter is uh the one thing which

1207
00:37:47,200 --> 00:37:49,359
everyone uses for sensor fusion so that

1208
00:37:49,359 --> 00:37:50,079
was uh

1209
00:37:50,079 --> 00:37:52,640
about kalaman filter and if uh some of

1210
00:37:52,640 --> 00:37:54,320
you are really interested to implement

1211
00:37:54,320 --> 00:37:54,640
that

1212
00:37:54,640 --> 00:37:56,800
again there are libraries available out

1213
00:37:56,800 --> 00:37:58,320
there you can use that

1214
00:37:58,320 --> 00:38:00,400
uh with the your microcontroller and you

1215
00:38:00,400 --> 00:38:01,839
can definitely implement column

1216
00:38:01,839 --> 00:38:04,720
filter so that was about sensor fusion

1217
00:38:04,720 --> 00:38:06,400
now let's talk about control systems

1218
00:38:06,400 --> 00:38:07,839
all right so talking about control

1219
00:38:07,839 --> 00:38:10,320
system so we managed to get clean sensor

1220
00:38:10,320 --> 00:38:12,640
fused values from imu but what about the

1221
00:38:12,640 --> 00:38:14,880
compensation for external forces acting

1222
00:38:14,880 --> 00:38:16,960
on drones such as wind so a really

1223
00:38:16,960 --> 00:38:18,480
really great question

1224
00:38:18,480 --> 00:38:22,079
and uh it's simple so if

1225
00:38:22,079 --> 00:38:23,520
you are getting clean values from

1226
00:38:23,520 --> 00:38:25,359
accelerometer okay that is sorted but

1227
00:38:25,359 --> 00:38:26,079
now

1228
00:38:26,079 --> 00:38:27,520
what happens when you are flying the

1229
00:38:27,520 --> 00:38:29,680
drone and some external forces are

1230
00:38:29,680 --> 00:38:31,359
acting on it let's say some wind gusts

1231
00:38:31,359 --> 00:38:32,800
came and your drone

1232
00:38:32,800 --> 00:38:34,640
gets drifted away so how do you fight

1233
00:38:34,640 --> 00:38:35,920
that so

1234
00:38:35,920 --> 00:38:37,920
these kinds of things are very important

1235
00:38:37,920 --> 00:38:40,000
and that is the reason we actually need

1236
00:38:40,000 --> 00:38:41,119
flight controller for

1237
00:38:41,119 --> 00:38:44,400
to exactly do what a drone operator

1238
00:38:44,400 --> 00:38:46,320
wants it to do to actually do

1239
00:38:46,320 --> 00:38:49,200
as it commanded and to cancel out the

1240
00:38:49,200 --> 00:38:51,359
effect of external forces to compensate

1241
00:38:51,359 --> 00:38:51,920
it and

1242
00:38:51,920 --> 00:38:54,880
to give us the entire result that we are

1243
00:38:54,880 --> 00:38:55,920
asking for

1244
00:38:55,920 --> 00:38:57,440
for it to do and that is a function of

1245
00:38:57,440 --> 00:38:59,119
flight control and again wind is just

1246
00:38:59,119 --> 00:38:59,680
one

1247
00:38:59,680 --> 00:39:01,839
external example that you would need to

1248
00:39:01,839 --> 00:39:03,359
compensate

1249
00:39:03,359 --> 00:39:04,960
if you want a stable flight but what

1250
00:39:04,960 --> 00:39:07,599
about some internal factors let's say

1251
00:39:07,599 --> 00:39:09,280
you are building a quadcopter you are

1252
00:39:09,280 --> 00:39:10,640
using four motors

1253
00:39:10,640 --> 00:39:12,400
exactly same motor but since its

1254
00:39:12,400 --> 00:39:14,079
mechanical it cannot be

1255
00:39:14,079 --> 00:39:16,640
exactly exactly same maybe some motor

1256
00:39:16,640 --> 00:39:17,520
has a

1257
00:39:17,520 --> 00:39:19,920
more rpm than other i'm not saying it

1258
00:39:19,920 --> 00:39:21,839
would be have drastically more rpm but

1259
00:39:21,839 --> 00:39:25,040
let's say 100 rpms more because of let's

1260
00:39:25,040 --> 00:39:25,920
say the

1261
00:39:25,920 --> 00:39:29,040
the manufacturing defects or it

1262
00:39:29,040 --> 00:39:31,359
is it is a bit smoother so these kinds

1263
00:39:31,359 --> 00:39:32,880
of things are very very common

1264
00:39:32,880 --> 00:39:34,000
when you are doing some

1265
00:39:34,000 --> 00:39:35,520
electromechanical systems some

1266
00:39:35,520 --> 00:39:36,640
manufacturing

1267
00:39:36,640 --> 00:39:38,800
uh processes defects and some other

1268
00:39:38,800 --> 00:39:40,720
things so because of that you just

1269
00:39:40,720 --> 00:39:41,440
cannot

1270
00:39:41,440 --> 00:39:45,599
achieve the exact system which you have

1271
00:39:45,599 --> 00:39:47,599
a designer which you have a simulated so

1272
00:39:47,599 --> 00:39:49,760
that is why you need control system and

1273
00:39:49,760 --> 00:39:51,680
uh in this case flight controller you

1274
00:39:51,680 --> 00:39:53,520
just cannot plug four motors and just

1275
00:39:53,520 --> 00:39:55,440
give them power and you fly the drone

1276
00:39:55,440 --> 00:39:58,480
because the external forces and uh the

1277
00:39:58,480 --> 00:39:59,119
internal

1278
00:39:59,119 --> 00:40:00,720
mismatch of the components will not

1279
00:40:00,720 --> 00:40:02,720
allow you to have a stable flight and to

1280
00:40:02,720 --> 00:40:03,839
have a stable flight you need to

1281
00:40:03,839 --> 00:40:06,000
compensate for all these factors so

1282
00:40:06,000 --> 00:40:07,520
let's take a very good example in the

1283
00:40:07,520 --> 00:40:09,200
next slide so

1284
00:40:09,200 --> 00:40:11,520
let's say this is your drone and you

1285
00:40:11,520 --> 00:40:13,119
have given the command

1286
00:40:13,119 --> 00:40:16,560
to your drone to rotate uh uh right

1287
00:40:16,560 --> 00:40:19,119
in roll access or two degrees so this is

1288
00:40:19,119 --> 00:40:19,920
your drone

1289
00:40:19,920 --> 00:40:22,240
perfectly level perfectly stable with

1290
00:40:22,240 --> 00:40:24,160
respect to the ground and

1291
00:40:24,160 --> 00:40:26,079
the drone operator has given the command

1292
00:40:26,079 --> 00:40:27,200
to roll right

1293
00:40:27,200 --> 00:40:28,800
to degree you can do that with your

1294
00:40:28,800 --> 00:40:31,040
remote a receiver receives the command

1295
00:40:31,040 --> 00:40:32,800
and passes it to the flight controller

1296
00:40:32,800 --> 00:40:35,520
that the drone operator wants to rotate

1297
00:40:35,520 --> 00:40:36,880
the drone in the road axis

1298
00:40:36,880 --> 00:40:39,599
or 2 degree right so this will go to the

1299
00:40:39,599 --> 00:40:41,200
flight controller and flight controller

1300
00:40:41,200 --> 00:40:42,960
what it will do it will send

1301
00:40:42,960 --> 00:40:45,599
it will do some calculation that okay my

1302
00:40:45,599 --> 00:40:46,480
current

1303
00:40:46,480 --> 00:40:50,480
angle is 0 degrees user wants to

1304
00:40:50,480 --> 00:40:53,200
have a roll right two degrees i need to

1305
00:40:53,200 --> 00:40:55,040
speed up the left motors i need to speed

1306
00:40:55,040 --> 00:40:56,480
down the right motors

1307
00:40:56,480 --> 00:40:59,520
how much uh i need to speed i need to

1308
00:40:59,520 --> 00:41:00,960
speed let's say x amount but after

1309
00:41:00,960 --> 00:41:02,560
changing the rpm the

1310
00:41:02,560 --> 00:41:04,560
the role you get is the five degree

1311
00:41:04,560 --> 00:41:07,119
right so why that happens you wanted

1312
00:41:07,119 --> 00:41:10,000
the flight controller to give roll your

1313
00:41:10,000 --> 00:41:11,520
two degree light but you actually get

1314
00:41:11,520 --> 00:41:12,800
five degree right

1315
00:41:12,800 --> 00:41:14,880
that is not what you want that is not a

1316
00:41:14,880 --> 00:41:17,040
pleasurable flight experience so

1317
00:41:17,040 --> 00:41:19,760
so why that happens and maybe because of

1318
00:41:19,760 --> 00:41:22,079
external wind you want it to degree

1319
00:41:22,079 --> 00:41:23,280
the wind is blowing in the same

1320
00:41:23,280 --> 00:41:25,440
direction the overall angle you get five

1321
00:41:25,440 --> 00:41:26,319
degrees and

1322
00:41:26,319 --> 00:41:27,839
uh this is not a pleasurable fire

1323
00:41:27,839 --> 00:41:29,520
experience that's not what you want

1324
00:41:29,520 --> 00:41:31,599
you want to counteract this you want to

1325
00:41:31,599 --> 00:41:32,960
solve this and

1326
00:41:32,960 --> 00:41:35,520
so the current value of your drone rule

1327
00:41:35,520 --> 00:41:37,520
is read by the imu

1328
00:41:37,520 --> 00:41:40,560
and the imu reddit it says that uh this

1329
00:41:40,560 --> 00:41:42,000
is the current value and the flight

1330
00:41:42,000 --> 00:41:43,920
controller see that okay this is

1331
00:41:43,920 --> 00:41:47,520
a an error this is not right user wanted

1332
00:41:47,520 --> 00:41:48,319
me to

1333
00:41:48,319 --> 00:41:50,400
do roll right to degree but this is 5

1334
00:41:50,400 --> 00:41:52,000
degree so i need to compensate that i

1335
00:41:52,000 --> 00:41:53,839
need to compensate for the wind

1336
00:41:53,839 --> 00:41:56,079
so it will generate a command to do

1337
00:41:56,079 --> 00:41:57,200
minus 3

1338
00:41:57,200 --> 00:41:59,920
roll right and of course with that

1339
00:41:59,920 --> 00:42:00,720
command and

1340
00:42:00,720 --> 00:42:02,079
with the next user command it will

1341
00:42:02,079 --> 00:42:03,599
getting it will combine and it will come

1342
00:42:03,599 --> 00:42:05,520
back to the flight controller and

1343
00:42:05,520 --> 00:42:07,680
this loop will continue uh continue to

1344
00:42:07,680 --> 00:42:09,040
operate and this is called

1345
00:42:09,040 --> 00:42:12,160
the feedback loop the feedback control

1346
00:42:12,160 --> 00:42:14,000
system mechanism

1347
00:42:14,000 --> 00:42:16,319
and if some of you have read it in uh if

1348
00:42:16,319 --> 00:42:17,520
you're from engineering background you

1349
00:42:17,520 --> 00:42:18,240
might have read

1350
00:42:18,240 --> 00:42:19,520
these kind of things so this is a very

1351
00:42:19,520 --> 00:42:22,079
common control system with the feedback

1352
00:42:22,079 --> 00:42:25,280
and the imu is doing the feedback

1353
00:42:25,280 --> 00:42:27,280
loop here so the function of the imu is

1354
00:42:27,280 --> 00:42:28,319
to read the current

1355
00:42:28,319 --> 00:42:29,839
attitude of the drone to read the

1356
00:42:29,839 --> 00:42:31,599
current role a pitch

1357
00:42:31,599 --> 00:42:33,680
and yaw and to keep sending it to the

1358
00:42:33,680 --> 00:42:34,800
flight controller back

1359
00:42:34,800 --> 00:42:36,640
and the flight controller if if it

1360
00:42:36,640 --> 00:42:38,880
matches it to the what user wanted and

1361
00:42:38,880 --> 00:42:39,200
it's

1362
00:42:39,200 --> 00:42:41,680
if it's not right then it will uh

1363
00:42:41,680 --> 00:42:44,000
generate a compensate signal to the esc

1364
00:42:44,000 --> 00:42:46,000
and again change the rpm and it keeps on

1365
00:42:46,000 --> 00:42:48,240
going on this will never stop

1366
00:42:48,240 --> 00:42:50,400
as from the movement you take off to the

1367
00:42:50,400 --> 00:42:51,680
moment you land this

1368
00:42:51,680 --> 00:42:53,599
loop will continue to operate this

1369
00:42:53,599 --> 00:42:54,880
feedback loop this

1370
00:42:54,880 --> 00:42:56,880
forward path everything will continue to

1371
00:42:56,880 --> 00:42:58,000
operate and

1372
00:42:58,000 --> 00:42:59,760
that's how exactly the flight controller

1373
00:42:59,760 --> 00:43:01,200
compensate it

1374
00:43:01,200 --> 00:43:03,359
by getting a feedback from the imu so

1375
00:43:03,359 --> 00:43:05,040
imu gives you the current

1376
00:43:05,040 --> 00:43:06,640
sensor readings and the flight

1377
00:43:06,640 --> 00:43:08,240
controller it matches it to the what

1378
00:43:08,240 --> 00:43:10,079
user want and based on that if there is

1379
00:43:10,079 --> 00:43:11,599
any error flight controller

1380
00:43:11,599 --> 00:43:14,319
wants to do some compensation and to

1381
00:43:14,319 --> 00:43:16,160
mitigate the error it generates a new

1382
00:43:16,160 --> 00:43:16,880
signal so

1383
00:43:16,880 --> 00:43:19,280
that is how the entire drone works

1384
00:43:19,280 --> 00:43:20,319
internally

1385
00:43:20,319 --> 00:43:23,760
and if you talk about some something in

1386
00:43:23,760 --> 00:43:25,359
technical so

1387
00:43:25,359 --> 00:43:27,760
in technical language the value which we

1388
00:43:27,760 --> 00:43:29,839
wants our drone to be it's called a set

1389
00:43:29,839 --> 00:43:31,839
point and the set point is nothing but

1390
00:43:31,839 --> 00:43:34,880
the desired value uh what value we want

1391
00:43:34,880 --> 00:43:37,520
so we set a point for the flight

1392
00:43:37,520 --> 00:43:38,240
controller

1393
00:43:38,240 --> 00:43:40,000
and we want the flight controller to

1394
00:43:40,000 --> 00:43:41,680
achieve that point and

1395
00:43:41,680 --> 00:43:45,119
our drone should be at that point and uh

1396
00:43:45,119 --> 00:43:48,160
the actual value which we read after the

1397
00:43:48,160 --> 00:43:50,000
after the command has been executed to

1398
00:43:50,000 --> 00:43:52,480
change the rpm to the esc's

1399
00:43:52,480 --> 00:43:54,400
and we measure it again using imu it's

1400
00:43:54,400 --> 00:43:55,760
called measured value

1401
00:43:55,760 --> 00:43:58,160
the value which we have get after the

1402
00:43:58,160 --> 00:43:59,280
loop is complete

1403
00:43:59,280 --> 00:44:02,720
uh sorry the execution is complete and

1404
00:44:02,720 --> 00:44:05,599
ultimately if the flight controller what

1405
00:44:05,599 --> 00:44:07,440
it will do it will compare the measure

1406
00:44:07,440 --> 00:44:08,000
value with

1407
00:44:08,000 --> 00:44:10,240
the the set point the value which it

1408
00:44:10,240 --> 00:44:11,440
actually gets

1409
00:44:11,440 --> 00:44:14,560
after executing the command uh minus the

1410
00:44:14,560 --> 00:44:16,960
value the user wanted the set point so

1411
00:44:16,960 --> 00:44:18,720
it will get the error signal so error

1412
00:44:18,720 --> 00:44:20,400
signal is nothing but a set point minus

1413
00:44:20,400 --> 00:44:21,520
measured value

1414
00:44:21,520 --> 00:44:23,680
and based off that as a error signal and

1415
00:44:23,680 --> 00:44:24,880
the next value it will

1416
00:44:24,880 --> 00:44:26,880
continue to work so this is the entire

1417
00:44:26,880 --> 00:44:28,880
block diagram entire architecture

1418
00:44:28,880 --> 00:44:31,040
how the control system in a drone works

1419
00:44:31,040 --> 00:44:32,400
so if you actually try to

1420
00:44:32,400 --> 00:44:34,480
take a bigger look it's not actually a

1421
00:44:34,480 --> 00:44:35,440
new concept

1422
00:44:35,440 --> 00:44:37,440
in fact it's everywhere and we are

1423
00:44:37,440 --> 00:44:39,359
experiencing it in our

1424
00:44:39,359 --> 00:44:40,880
day-to-day routine so let's take an

1425
00:44:40,880 --> 00:44:42,880
example of this

1426
00:44:42,880 --> 00:44:45,440
thermostat so thermostat is a device

1427
00:44:45,440 --> 00:44:47,119
which controls your

1428
00:44:47,119 --> 00:44:49,040
central heating and central cooling

1429
00:44:49,040 --> 00:44:50,560
system in your houses

1430
00:44:50,560 --> 00:44:53,440
it's more common in western uh countries

1431
00:44:53,440 --> 00:44:54,079
compared to

1432
00:44:54,079 --> 00:44:57,040
let's say something like in india but uh

1433
00:44:57,040 --> 00:44:58,640
it's the same concept as

1434
00:44:58,640 --> 00:45:01,839
everything works in in terms of control

1435
00:45:01,839 --> 00:45:03,440
system so let's take an example that you

1436
00:45:03,440 --> 00:45:04,480
want

1437
00:45:04,480 --> 00:45:08,240
uh your home your room to be at 74

1438
00:45:08,240 --> 00:45:10,240
degrees fahrenheit so let's say you have

1439
00:45:10,240 --> 00:45:12,160
set in the thermostat that i want 74

1440
00:45:12,160 --> 00:45:13,280
degree fahrenheit

1441
00:45:13,280 --> 00:45:16,240
the thermostat will have a sensor or

1442
00:45:16,240 --> 00:45:18,240
temperature sensor inside it and

1443
00:45:18,240 --> 00:45:20,160
currently it measured that it's a 80

1444
00:45:20,160 --> 00:45:21,359
degree fahrenheit so

1445
00:45:21,359 --> 00:45:22,960
what it needs to do it needs to bring

1446
00:45:22,960 --> 00:45:24,800
the temperature down and to

1447
00:45:24,800 --> 00:45:26,480
actually do it it will what it do it

1448
00:45:26,480 --> 00:45:28,319
will turn up the ac and it will turn

1449
00:45:28,319 --> 00:45:28,800
down the

1450
00:45:28,800 --> 00:45:32,160
central heating system hvac so

1451
00:45:32,160 --> 00:45:35,440
that is a one simple example uh in

1452
00:45:35,440 --> 00:45:37,520
inside the this entire control system

1453
00:45:37,520 --> 00:45:39,920
the thermostat it's nothing but uh

1454
00:45:39,920 --> 00:45:41,599
same compensation is happening it will

1455
00:45:41,599 --> 00:45:43,280
measure the value again and again and it

1456
00:45:43,280 --> 00:45:44,240
will keep

1457
00:45:44,240 --> 00:45:46,560
keep controlling the ac and and and the

1458
00:45:46,560 --> 00:45:48,079
hype and see if

1459
00:45:48,079 --> 00:45:50,319
the set point has been achieved if not

1460
00:45:50,319 --> 00:45:51,760
it will keep doing that until the set

1461
00:45:51,760 --> 00:45:52,720
point is achieved

1462
00:45:52,720 --> 00:45:54,800
once the set point is achieved it may uh

1463
00:45:54,800 --> 00:45:56,240
try to maintain it

1464
00:45:56,240 --> 00:45:58,800
uh so there might be a chances that the

1465
00:45:58,800 --> 00:45:59,680
value goes

1466
00:45:59,680 --> 00:46:02,720
even lower than 74 and it will then

1467
00:46:02,720 --> 00:46:04,960
bring the heating system up or maybe

1468
00:46:04,960 --> 00:46:06,880
bring the cooling system down so these

1469
00:46:06,880 --> 00:46:07,680
kinds of things

1470
00:46:07,680 --> 00:46:09,440
will continue be happening until the

1471
00:46:09,440 --> 00:46:10,880
system is operating so

1472
00:46:10,880 --> 00:46:12,400
that's why i said from the moment you

1473
00:46:12,400 --> 00:46:14,000
take off to the moment you land

1474
00:46:14,000 --> 00:46:16,240
the control system is activated the

1475
00:46:16,240 --> 00:46:17,920
entire time in the drone so

1476
00:46:17,920 --> 00:46:20,640
uh let's talk about uh algorithms and

1477
00:46:20,640 --> 00:46:22,480
controllers so the entire

1478
00:46:22,480 --> 00:46:24,880
idea for telling you this compensation

1479
00:46:24,880 --> 00:46:27,440
of external forces and internal defects

1480
00:46:27,440 --> 00:46:30,160
by the flight controller the entire idea

1481
00:46:30,160 --> 00:46:32,160
of the control system is to minimize the

1482
00:46:32,160 --> 00:46:32,800
error

1483
00:46:32,800 --> 00:46:35,599
that is to have the measured value as

1484
00:46:35,599 --> 00:46:36,079
close

1485
00:46:36,079 --> 00:46:38,240
as to the set point value to give the

1486
00:46:38,240 --> 00:46:40,720
user best experience to

1487
00:46:40,720 --> 00:46:43,839
give the drone exact control as user has

1488
00:46:43,839 --> 00:46:46,160
demanded and just to compensate if there

1489
00:46:46,160 --> 00:46:46,960
is any

1490
00:46:46,960 --> 00:46:49,040
error caused by something like a wind or

1491
00:46:49,040 --> 00:46:50,640
some internal defects and

1492
00:46:50,640 --> 00:46:53,359
to minimize this error the flight

1493
00:46:53,359 --> 00:46:54,000
controller

1494
00:46:54,000 --> 00:46:56,319
implements some different algorithms and

1495
00:46:56,319 --> 00:46:58,079
controllers and

1496
00:46:58,079 --> 00:47:00,560
these are the part of control system the

1497
00:47:00,560 --> 00:47:02,079
entire control system and these are

1498
00:47:02,079 --> 00:47:02,880
nothing but

1499
00:47:02,880 --> 00:47:06,400
a set of instructions or programming

1500
00:47:06,400 --> 00:47:06,720
which

1501
00:47:06,720 --> 00:47:08,480
implements some mathematical formulas

1502
00:47:08,480 --> 00:47:09,760
and algorithms

1503
00:47:09,760 --> 00:47:11,680
so there are a lot of different control

1504
00:47:11,680 --> 00:47:12,880
system algorithm that

1505
00:47:12,880 --> 00:47:16,560
you can use when it comes to having

1506
00:47:16,560 --> 00:47:18,160
having a closed loop feedback system

1507
00:47:18,160 --> 00:47:19,920
with motif to minimize the error and

1508
00:47:19,920 --> 00:47:20,319
these

1509
00:47:20,319 --> 00:47:22,800
are let's say a fuzzy logic so fuzzy

1510
00:47:22,800 --> 00:47:23,680
logic is a

1511
00:47:23,680 --> 00:47:25,599
also type of control system all these

1512
00:47:25,599 --> 00:47:27,040
are nothing but these are algorithms

1513
00:47:27,040 --> 00:47:28,000
which you implement

1514
00:47:28,000 --> 00:47:30,720
in your firmware uh using programming

1515
00:47:30,720 --> 00:47:31,760
and

1516
00:47:31,760 --> 00:47:33,280
using some mathematical equations so

1517
00:47:33,280 --> 00:47:35,359
fuzzy logic is again a type of control

1518
00:47:35,359 --> 00:47:36,640
system

1519
00:47:36,640 --> 00:47:38,559
there is also a simplest control system

1520
00:47:38,559 --> 00:47:40,400
like bank bank control system so what

1521
00:47:40,400 --> 00:47:42,800
uh if if we have to compare it with the

1522
00:47:42,800 --> 00:47:43,839
again uh

1523
00:47:43,839 --> 00:47:46,160
the thermostat example so our bank man

1524
00:47:46,160 --> 00:47:47,599
control system what it will do it it

1525
00:47:47,599 --> 00:47:48,880
will check if

1526
00:47:48,880 --> 00:47:50,640
the room temperature has reached a

1527
00:47:50,640 --> 00:47:52,000
certain point if yes it will

1528
00:47:52,000 --> 00:47:54,559
it will close down the ac or the hvac

1529
00:47:54,559 --> 00:47:56,319
system based on that so it's very simple

1530
00:47:56,319 --> 00:47:57,359
to implement

1531
00:47:57,359 --> 00:47:59,200
uh so we'll not talk about fussy logic

1532
00:47:59,200 --> 00:48:00,960
and bang bang but what we'll talk about

1533
00:48:00,960 --> 00:48:04,000
is uh proportional so proportional

1534
00:48:04,000 --> 00:48:07,200
integral and derivative to be precise so

1535
00:48:07,200 --> 00:48:09,200
these three are different controllers

1536
00:48:09,200 --> 00:48:11,520
proportional integral and derivative but

1537
00:48:11,520 --> 00:48:13,599
these three together are being used in

1538
00:48:13,599 --> 00:48:16,319
drone control system algorithms and

1539
00:48:16,319 --> 00:48:19,359
it's called pid so the uh

1540
00:48:19,359 --> 00:48:21,760
the thing is that drone uh is a

1541
00:48:21,760 --> 00:48:23,520
relatively a very advanced system

1542
00:48:23,520 --> 00:48:25,920
when it when it comes to uh minimizing

1543
00:48:25,920 --> 00:48:26,559
the error

1544
00:48:26,559 --> 00:48:29,599
and it does have some uh present error

1545
00:48:29,599 --> 00:48:31,119
and it also has some past error which

1546
00:48:31,119 --> 00:48:32,400
are getting integrated

1547
00:48:32,400 --> 00:48:35,440
over time as we discuss in sensor fusion

1548
00:48:35,440 --> 00:48:37,760
and as we as we discuss in kalman filter

1549
00:48:37,760 --> 00:48:39,599
the kalama filter is capable of for

1550
00:48:39,599 --> 00:48:40,480
estimating

1551
00:48:40,480 --> 00:48:42,800
the next value so we also have some

1552
00:48:42,800 --> 00:48:44,160
estimations of future

1553
00:48:44,160 --> 00:48:46,240
and similarly we can also estimate some

1554
00:48:46,240 --> 00:48:48,000
error in the future and that is where

1555
00:48:48,000 --> 00:48:50,000
derivative comes into picture so

1556
00:48:50,000 --> 00:48:51,520
proportional helps to deal with the

1557
00:48:51,520 --> 00:48:54,160
present error uh if a user wants

1558
00:48:54,160 --> 00:48:57,280
this degree in this axis at present

1559
00:48:57,280 --> 00:48:59,200
and if that's not there the proportional

1560
00:48:59,200 --> 00:49:00,640
will eradicate it

1561
00:49:00,640 --> 00:49:02,880
if there are some error in the system

1562
00:49:02,880 --> 00:49:04,559
because the past values are getting

1563
00:49:04,559 --> 00:49:05,920
there the integral will

1564
00:49:05,920 --> 00:49:09,040
deal with that and if we estimate that

1565
00:49:09,040 --> 00:49:10,480
based on the current rate of change

1566
00:49:10,480 --> 00:49:12,000
there would be some future error then

1567
00:49:12,000 --> 00:49:13,280
the derivative

1568
00:49:13,280 --> 00:49:16,000
takes into that so we can use them

1569
00:49:16,000 --> 00:49:17,599
together like a pi

1570
00:49:17,599 --> 00:49:20,000
proportional integral by totally uh

1571
00:49:20,000 --> 00:49:21,040
neglecting that uh

1572
00:49:21,040 --> 00:49:23,200
d but we can uh the most common

1573
00:49:23,200 --> 00:49:25,440
implementation is pid where we'll use uh

1574
00:49:25,440 --> 00:49:29,040
every uh controller from pid types so

1575
00:49:29,040 --> 00:49:32,319
uh this is uh the uh equation of pid

1576
00:49:32,319 --> 00:49:35,200
uh don't get frightened it's very simple

1577
00:49:35,200 --> 00:49:37,680
so i just want you to focus on this uh

1578
00:49:37,680 --> 00:49:41,359
e of t this is uh the error signal uh so

1579
00:49:41,359 --> 00:49:44,880
if i go back to a couple of slides

1580
00:49:44,880 --> 00:49:48,079
and we talked about the error signals so

1581
00:49:48,079 --> 00:49:50,960
error signal is nothing but your

1582
00:49:50,960 --> 00:49:52,800
difference between the set point what

1583
00:49:52,800 --> 00:49:53,680
user want

1584
00:49:53,680 --> 00:49:55,839
and the current value so in this case

1585
00:49:55,839 --> 00:49:56,720
the 3 degree

1586
00:49:56,720 --> 00:49:58,480
minus three degree is the error which

1587
00:49:58,480 --> 00:50:00,480
flattens used to compensate so

1588
00:50:00,480 --> 00:50:02,480
uh i wanted to focus on the error signal

1589
00:50:02,480 --> 00:50:03,760
only so

1590
00:50:03,760 --> 00:50:06,880
what the pid equation is doing uh the p

1591
00:50:06,880 --> 00:50:09,680
part is multiplying the error with a

1592
00:50:09,680 --> 00:50:10,480
constant k

1593
00:50:10,480 --> 00:50:13,599
of p so k of p is a constant it's not

1594
00:50:13,599 --> 00:50:16,880
a variable it's a constant like 1 2 3

1595
00:50:16,880 --> 00:50:20,160
0 3 10 11 11.4 something like that

1596
00:50:20,160 --> 00:50:22,079
so it's taking the error signal and it's

1597
00:50:22,079 --> 00:50:24,000
multiplying it with a constant so that

1598
00:50:24,000 --> 00:50:24,960
becomes your p

1599
00:50:24,960 --> 00:50:27,920
part of your pid your proportional

1600
00:50:27,920 --> 00:50:29,520
control system

1601
00:50:29,520 --> 00:50:32,480
i what i is doing it is integrating the

1602
00:50:32,480 --> 00:50:34,079
error over time

1603
00:50:34,079 --> 00:50:36,960
and multiplying it to a k of i constant

1604
00:50:36,960 --> 00:50:38,960
so we have a constant k of p

1605
00:50:38,960 --> 00:50:41,520
and we i have a constant of k of i

1606
00:50:41,520 --> 00:50:42,400
similarly what

1607
00:50:42,400 --> 00:50:44,160
derivative is doing as a name so that

1608
00:50:44,160 --> 00:50:46,559
it's derivating the error over time

1609
00:50:46,559 --> 00:50:50,079
with k of d so this looks very

1610
00:50:50,079 --> 00:50:51,520
intimidating but when we actually

1611
00:50:51,520 --> 00:50:53,280
understand it is nothing but

1612
00:50:53,280 --> 00:50:55,599
we take the error signal we multiply it

1613
00:50:55,599 --> 00:50:56,559
with k of p

1614
00:50:56,559 --> 00:50:58,480
we integrate it with k of i and we

1615
00:50:58,480 --> 00:50:59,680
derive it with

1616
00:50:59,680 --> 00:51:02,720
k of d and what we get is a sum

1617
00:51:02,720 --> 00:51:05,200
of uh the value which the flight

1618
00:51:05,200 --> 00:51:07,119
controller is actually generating to

1619
00:51:07,119 --> 00:51:08,720
compensate the error so that

1620
00:51:08,720 --> 00:51:11,040
is the entire concept you just need to

1621
00:51:11,040 --> 00:51:12,800
find the error signal the value of the

1622
00:51:12,800 --> 00:51:13,359
error

1623
00:51:13,359 --> 00:51:15,680
you multiply with k of p you multiply

1624
00:51:15,680 --> 00:51:17,040
with integral of

1625
00:51:17,040 --> 00:51:19,599
k of i and you derive it and multiply

1626
00:51:19,599 --> 00:51:21,359
with k of d and you get the

1627
00:51:21,359 --> 00:51:23,680
actual signal and you send it back so

1628
00:51:23,680 --> 00:51:25,200
this is the

1629
00:51:25,200 --> 00:51:27,760
control system which we use is in drone

1630
00:51:27,760 --> 00:51:29,599
it's called pid proportional integral

1631
00:51:29,599 --> 00:51:30,480
derivative

1632
00:51:30,480 --> 00:51:32,400
the motive is simple to reduce the error

1633
00:51:32,400 --> 00:51:34,160
as much as possible and to bring the

1634
00:51:34,160 --> 00:51:34,640
current

1635
00:51:34,640 --> 00:51:37,920
value the measured value as close as

1636
00:51:37,920 --> 00:51:39,760
to what user requested the set point

1637
00:51:39,760 --> 00:51:41,599
what user has set the point for us

1638
00:51:41,599 --> 00:51:44,960
so uh okay so this also

1639
00:51:44,960 --> 00:51:48,000
uh might be intimidating but might not

1640
00:51:48,000 --> 00:51:48,480
but

1641
00:51:48,480 --> 00:51:51,040
when we come to actualizing it there is

1642
00:51:51,040 --> 00:51:51,920
a lot of

1643
00:51:51,920 --> 00:51:53,839
maths involved and you should know how

1644
00:51:53,839 --> 00:51:56,079
to do integration encoding how to

1645
00:51:56,079 --> 00:51:59,359
do derivation in coding but

1646
00:51:59,359 --> 00:52:01,200
more than that there could be one

1647
00:52:01,200 --> 00:52:03,440
question that what is the value of k of

1648
00:52:03,440 --> 00:52:05,680
p what is the value of k of 5 what is

1649
00:52:05,680 --> 00:52:06,880
the value of kd

1650
00:52:06,880 --> 00:52:09,359
and how do we calculate that so that is

1651
00:52:09,359 --> 00:52:11,119
the entire concept behind

1652
00:52:11,119 --> 00:52:14,640
pid tuning what is a pid tuning so

1653
00:52:14,640 --> 00:52:17,119
finding this k p k i n k d for your

1654
00:52:17,119 --> 00:52:19,280
system is called pid tuning finding

1655
00:52:19,280 --> 00:52:19,760
these

1656
00:52:19,760 --> 00:52:22,720
gains and one more thing i would like to

1657
00:52:22,720 --> 00:52:24,800
mention here that this pid

1658
00:52:24,800 --> 00:52:27,920
is different for each access for example

1659
00:52:27,920 --> 00:52:30,400
uh this pid may be for roll axis but you

1660
00:52:30,400 --> 00:52:31,040
will need

1661
00:52:31,040 --> 00:52:34,319
a two more for your and pitch access so

1662
00:52:34,319 --> 00:52:36,559
you will have pid for roll pid for pitch

1663
00:52:36,559 --> 00:52:38,000
and pid for

1664
00:52:38,000 --> 00:52:41,599
uh yaw and similarly you will have uh

1665
00:52:41,599 --> 00:52:45,119
kp ki and kd for each access so kp for

1666
00:52:45,119 --> 00:52:47,200
a pitch will be different than kap for

1667
00:52:47,200 --> 00:52:48,880
your so things like that

1668
00:52:48,880 --> 00:52:50,640
so what is the pi tuning again coming

1669
00:52:50,640 --> 00:52:52,400
back to it it's finding the value of

1670
00:52:52,400 --> 00:52:53,119
these uh

1671
00:52:53,119 --> 00:52:55,280
constants k p k i and k d so as i

1672
00:52:55,280 --> 00:52:57,119
mentioned these are constants and

1673
00:52:57,119 --> 00:52:58,640
what could be this value this value

1674
00:52:58,640 --> 00:53:00,800
could be anything so how do we find this

1675
00:53:00,800 --> 00:53:01,839
value

1676
00:53:01,839 --> 00:53:04,240
we need to find this value which is fit

1677
00:53:04,240 --> 00:53:06,319
for our system so generally there are

1678
00:53:06,319 --> 00:53:08,480
different ways to find this value

1679
00:53:08,480 --> 00:53:11,440
if you talk about drone what people used

1680
00:53:11,440 --> 00:53:12,400
to do

1681
00:53:12,400 --> 00:53:14,559
every firmware comes with some default

1682
00:53:14,559 --> 00:53:16,400
value of kpk and kd

1683
00:53:16,400 --> 00:53:18,640
for each access so if if you are using

1684
00:53:18,640 --> 00:53:20,319
betaflight which i'm using

1685
00:53:20,319 --> 00:53:22,559
uh it already pre-programmed into the

1686
00:53:22,559 --> 00:53:23,920
firmware with some

1687
00:53:23,920 --> 00:53:26,880
uh good to use good to start values but

1688
00:53:26,880 --> 00:53:27,200
that

1689
00:53:27,200 --> 00:53:30,079
is not for every system because every

1690
00:53:30,079 --> 00:53:31,760
system is different everyone is using

1691
00:53:31,760 --> 00:53:33,359
different motors everyone is using

1692
00:53:33,359 --> 00:53:34,720
different propellers

1693
00:53:34,720 --> 00:53:37,520
uh maybe you are running same firmware

1694
00:53:37,520 --> 00:53:39,599
in a bigger drone and same firmware is

1695
00:53:39,599 --> 00:53:42,079
being by you someone for smaller drone

1696
00:53:42,079 --> 00:53:44,400
uh maybe someone has hexacopter you has

1697
00:53:44,400 --> 00:53:46,800
octacopter or you have quadcopter

1698
00:53:46,800 --> 00:53:49,520
so you need to definitely do pid tuning

1699
00:53:49,520 --> 00:53:51,440
without pre-edit tuning you cannot

1700
00:53:51,440 --> 00:53:54,400
have a greater result so you will having

1701
00:53:54,400 --> 00:53:56,160
your error multiply with the

1702
00:53:56,160 --> 00:53:57,839
constant which is not good for a system

1703
00:53:57,839 --> 00:53:59,200
that is not good so

1704
00:53:59,200 --> 00:54:01,200
ultimately when you build the drone when

1705
00:54:01,200 --> 00:54:03,200
you flash the firmware the last part you

1706
00:54:03,200 --> 00:54:05,280
need to do is to fly the drone and see

1707
00:54:05,280 --> 00:54:05,680
if

1708
00:54:05,680 --> 00:54:07,119
these values are good if not then you

1709
00:54:07,119 --> 00:54:08,880
need to change it so

1710
00:54:08,880 --> 00:54:12,640
uh finding the right value for this

1711
00:54:12,640 --> 00:54:14,720
constant that is called pid tuning

1712
00:54:14,720 --> 00:54:16,480
and if you talk about generally in drone

1713
00:54:16,480 --> 00:54:17,760
industry in drone

1714
00:54:17,760 --> 00:54:20,079
hobby what people do they fly the drone

1715
00:54:20,079 --> 00:54:21,119
and they know what to

1716
00:54:21,119 --> 00:54:23,440
observe uh when the drone is flying and

1717
00:54:23,440 --> 00:54:24,240
based on that

1718
00:54:24,240 --> 00:54:26,000
observation they comes and makes changes

1719
00:54:26,000 --> 00:54:28,240
for example if you have given some

1720
00:54:28,240 --> 00:54:30,240
command and your drone is taking

1721
00:54:30,240 --> 00:54:32,720
longer to process that command and there

1722
00:54:32,720 --> 00:54:34,559
is some delay in the process then

1723
00:54:34,559 --> 00:54:36,240
you need to increase the kp or the

1724
00:54:36,240 --> 00:54:38,720
proportional because the multiplication

1725
00:54:38,720 --> 00:54:40,240
constant if you increase that it will

1726
00:54:40,240 --> 00:54:42,160
give you the the more results

1727
00:54:42,160 --> 00:54:45,200
the more multiplied results so things

1728
00:54:45,200 --> 00:54:46,079
like that but

1729
00:54:46,079 --> 00:54:48,799
uh that is something that does not comes

1730
00:54:48,799 --> 00:54:49,359
in one

1731
00:54:49,359 --> 00:54:52,079
in one class so this is something that

1732
00:54:52,079 --> 00:54:53,680
you need to learn and you need to see by

1733
00:54:53,680 --> 00:54:55,040
reading forums and how

1734
00:54:55,040 --> 00:54:56,640
people so because everyone is having

1735
00:54:56,640 --> 00:54:58,640
different method of pid tuning

1736
00:54:58,640 --> 00:55:00,240
so let let me discuss some methods of

1737
00:55:00,240 --> 00:55:01,760
pid tuning so

1738
00:55:01,760 --> 00:55:03,920
number one is tuning using simulation so

1739
00:55:03,920 --> 00:55:06,000
what you can do is uh

1740
00:55:06,000 --> 00:55:09,040
you can design a drone in in simulation

1741
00:55:09,040 --> 00:55:11,280
you can design a drone in software and

1742
00:55:11,280 --> 00:55:13,280
based on your drone parameters let's say

1743
00:55:13,280 --> 00:55:14,640
you you fix that

1744
00:55:14,640 --> 00:55:17,119
this is a 2200 kv motor this is this

1745
00:55:17,119 --> 00:55:19,200
battery based on that you can

1746
00:55:19,200 --> 00:55:21,920
get some values for kpk and kd so you

1747
00:55:21,920 --> 00:55:24,240
let the computer decide it but

1748
00:55:24,240 --> 00:55:26,480
real life is very different and uh the

1749
00:55:26,480 --> 00:55:27,760
best part is you're tuning my

1750
00:55:27,760 --> 00:55:29,359
observations so as i mentioned a small

1751
00:55:29,359 --> 00:55:30,720
example if your drone

1752
00:55:30,720 --> 00:55:35,280
is a bit laggy it has some a lag

1753
00:55:35,280 --> 00:55:37,440
so when you give a command and it takes

1754
00:55:37,440 --> 00:55:39,280
a significant more amount to

1755
00:55:39,280 --> 00:55:41,040
execute then you need to increase the kp

1756
00:55:41,040 --> 00:55:43,680
and so on so you're tuned by observation

1757
00:55:43,680 --> 00:55:46,480
uh one thing that is also was very

1758
00:55:46,480 --> 00:55:48,079
common a couple of years back

1759
00:55:48,079 --> 00:55:49,920
when new people are coming into this

1760
00:55:49,920 --> 00:55:51,920
hobby and they were not from technical

1761
00:55:51,920 --> 00:55:54,000
background they do not understand kp ki

1762
00:55:54,000 --> 00:55:55,760
and kd and pid tuning

1763
00:55:55,760 --> 00:55:58,799
so some firmware has a feature called

1764
00:55:58,799 --> 00:56:00,160
auto tuning so

1765
00:56:00,160 --> 00:56:03,200
what is auto tuning is you uh you you

1766
00:56:03,200 --> 00:56:05,200
you take off your drone you bring it to

1767
00:56:05,200 --> 00:56:06,480
certain height and then

1768
00:56:06,480 --> 00:56:09,359
you you switch uh the auto tune on and

1769
00:56:09,359 --> 00:56:10,960
it will do some motion in all the three

1770
00:56:10,960 --> 00:56:11,839
axis and

1771
00:56:11,839 --> 00:56:14,160
based on that motion it will it will set

1772
00:56:14,160 --> 00:56:16,400
the value of kpk and kd for you by auto

1773
00:56:16,400 --> 00:56:17,599
tuning but

1774
00:56:17,599 --> 00:56:19,520
the disadvantage is that auto tuning is

1775
00:56:19,520 --> 00:56:21,040
not very accurate it's a

1776
00:56:21,040 --> 00:56:23,119
it's a good ballpark number but it's not

1777
00:56:23,119 --> 00:56:24,400
very accurate

1778
00:56:24,400 --> 00:56:27,760
uh how it do is because if you

1779
00:56:27,760 --> 00:56:30,000
if your values of kpk and kda is very

1780
00:56:30,000 --> 00:56:31,040
high then your system will have

1781
00:56:31,040 --> 00:56:32,240
vibration so

1782
00:56:32,240 --> 00:56:33,839
it will keep on increasing the value

1783
00:56:33,839 --> 00:56:35,440
until some vibrations come into the

1784
00:56:35,440 --> 00:56:37,040
system and as soon as the vibration come

1785
00:56:37,040 --> 00:56:37,839
it stops and

1786
00:56:37,839 --> 00:56:41,040
dial down the value so even while

1787
00:56:41,040 --> 00:56:42,559
observing we do this we keep on

1788
00:56:42,559 --> 00:56:44,400
increasing the kp until we see some

1789
00:56:44,400 --> 00:56:46,000
vibration and as soon as the vibration

1790
00:56:46,000 --> 00:56:47,839
comes we dial down the value

1791
00:56:47,839 --> 00:56:51,359
so these are the methods of pid tuning

1792
00:56:51,359 --> 00:56:52,240
and

1793
00:56:52,240 --> 00:56:53,359
i would highly recommend if you're

1794
00:56:53,359 --> 00:56:55,119
building the drone and you want to pay

1795
00:56:55,119 --> 00:56:56,240
id tune just

1796
00:56:56,240 --> 00:56:58,960
find what is the best method people are

1797
00:56:58,960 --> 00:57:00,559
using these days and

1798
00:57:00,559 --> 00:57:02,880
if there are some tools for that another

1799
00:57:02,880 --> 00:57:04,799
method that i have not

1800
00:57:04,799 --> 00:57:06,559
mentioned here is something called black

1801
00:57:06,559 --> 00:57:08,240
box logging and i didn't mention it

1802
00:57:08,240 --> 00:57:10,000
because not every flight controller has

1803
00:57:10,000 --> 00:57:10,799
the

1804
00:57:10,799 --> 00:57:13,119
option for black box logging so what is

1805
00:57:13,119 --> 00:57:14,480
a black box logging it's

1806
00:57:14,480 --> 00:57:17,440
basically logging your flight data into

1807
00:57:17,440 --> 00:57:19,599
an sd card and then analyzing it using a

1808
00:57:19,599 --> 00:57:20,720
software so

1809
00:57:20,720 --> 00:57:23,599
uh you log the data that at what

1810
00:57:23,599 --> 00:57:25,280
particular instant what command you gave

1811
00:57:25,280 --> 00:57:26,960
from the transmitter and how your drone

1812
00:57:26,960 --> 00:57:28,720
reacted so based on that

1813
00:57:28,720 --> 00:57:30,480
you can bring that into the computer and

1814
00:57:30,480 --> 00:57:32,640
you can see that okay i have given

1815
00:57:32,640 --> 00:57:34,480
uh my drone command and it take two

1816
00:57:34,480 --> 00:57:36,559
milliseconds to react so it's a it's a

1817
00:57:36,559 --> 00:57:37,359
high delay

1818
00:57:37,359 --> 00:57:39,040
and you increase the kps things like

1819
00:57:39,040 --> 00:57:41,520
that and you also observe that okay now

1820
00:57:41,520 --> 00:57:43,119
my drone is having vibration on your

1821
00:57:43,119 --> 00:57:44,480
axis so you can dial down

1822
00:57:44,480 --> 00:57:47,280
so this is a another method which i used

1823
00:57:47,280 --> 00:57:48,000
to do

1824
00:57:48,000 --> 00:57:51,280
like a few years back but i would highly

1825
00:57:51,280 --> 00:57:52,720
recommend you read more about it

1826
00:57:52,720 --> 00:57:54,880
especially the tuning my observation and

1827
00:57:54,880 --> 00:57:57,599
how to tune that so it's a uh it's

1828
00:57:57,599 --> 00:57:59,040
something which is very important

1829
00:57:59,040 --> 00:58:00,799
because the default values are not going

1830
00:58:00,799 --> 00:58:02,079
to help for longer run

1831
00:58:02,079 --> 00:58:04,319
all right so let's talk about uh the

1832
00:58:04,319 --> 00:58:06,640
flight controller firmware so

1833
00:58:06,640 --> 00:58:08,400
this was a relatively very advanced

1834
00:58:08,400 --> 00:58:10,240
class where we discuss about uh digital

1835
00:58:10,240 --> 00:58:11,520
signal processor

1836
00:58:11,520 --> 00:58:13,119
uh we discussed about implementing

1837
00:58:13,119 --> 00:58:14,799
complementary filter and which is notch

1838
00:58:14,799 --> 00:58:16,799
filter we also discussed about

1839
00:58:16,799 --> 00:58:18,480
control system and algorithms

1840
00:58:18,480 --> 00:58:20,559
proportional integral and derivative

1841
00:58:20,559 --> 00:58:22,640
the question is if i want to design a

1842
00:58:22,640 --> 00:58:24,319
flight controller do i need to program

1843
00:58:24,319 --> 00:58:25,440
everything into that

1844
00:58:25,440 --> 00:58:27,839
the answer is yes you have to if you

1845
00:58:27,839 --> 00:58:28,559
want to

1846
00:58:28,559 --> 00:58:30,240
have a stable flight then you need all

1847
00:58:30,240 --> 00:58:32,480
that you need signal processing you need

1848
00:58:32,480 --> 00:58:34,079
uh to understand how imu is

1849
00:58:34,079 --> 00:58:36,079
communicating with the the cpu

1850
00:58:36,079 --> 00:58:37,599
you need to understand if they're

1851
00:58:37,599 --> 00:58:39,680
communicating in i2c you need to know

1852
00:58:39,680 --> 00:58:41,760
how i2c works and how to get data from

1853
00:58:41,760 --> 00:58:42,799
i2c bus

1854
00:58:42,799 --> 00:58:44,880
uh the protocol implementation writing

1855
00:58:44,880 --> 00:58:46,880
drivers you also need to understand that

1856
00:58:46,880 --> 00:58:48,400
once you get the data that

1857
00:58:48,400 --> 00:58:50,720
you need to do some filtering to get a

1858
00:58:50,720 --> 00:58:52,400
good data you need to apply some notch

1859
00:58:52,400 --> 00:58:53,359
filter

1860
00:58:53,359 --> 00:58:55,920
then you also need to do sensor fusion

1861
00:58:55,920 --> 00:58:57,440
by applying column and filter on

1862
00:58:57,440 --> 00:58:58,799
complementary filter

1863
00:58:58,799 --> 00:59:01,520
then finally you need to implement the

1864
00:59:01,520 --> 00:59:03,280
entire closed loop feedback system that

1865
00:59:03,280 --> 00:59:04,559
i showed and

1866
00:59:04,559 --> 00:59:06,960
you need to have a control system pid or

1867
00:59:06,960 --> 00:59:07,760
something like that

1868
00:59:07,760 --> 00:59:11,440
in place so is that really difficult the

1869
00:59:11,440 --> 00:59:13,040
answer is yes it's not

1870
00:59:13,040 --> 00:59:16,559
something for complete beginners if you

1871
00:59:16,559 --> 00:59:18,160
if you want to do everything you need to

1872
00:59:18,160 --> 00:59:19,760
have good knowledge of electrical

1873
00:59:19,760 --> 00:59:21,359
systems electronics uh

1874
00:59:21,359 --> 00:59:24,720
control system and dsps uh so

1875
00:59:24,720 --> 00:59:26,880
another question could be so i i don't

1876
00:59:26,880 --> 00:59:28,720
know that so i cannot uh

1877
00:59:28,720 --> 00:59:31,359
fly the drone the answer is no because

1878
00:59:31,359 --> 00:59:33,119
there are some open source

1879
00:59:33,119 --> 00:59:36,079
projects with good people who already

1880
00:59:36,079 --> 00:59:37,920
have this knowledge and

1881
00:59:37,920 --> 00:59:40,000
make these programs available free for

1882
00:59:40,000 --> 00:59:41,839
you you can just use that you can

1883
00:59:41,839 --> 00:59:43,680
download the firmware you can flash your

1884
00:59:43,680 --> 00:59:45,680
fret controller with this firmware

1885
00:59:45,680 --> 00:59:48,079
you can tune on the on the graphical

1886
00:59:48,079 --> 00:59:50,000
user interface and you are good to go

1887
00:59:50,000 --> 00:59:51,760
so yes you do not need to code

1888
00:59:51,760 --> 00:59:53,520
everything from your

1889
00:59:53,520 --> 00:59:56,640
from your own knowledge so

1890
00:59:56,640 --> 00:59:59,359
i want to show you one such example so

1891
00:59:59,359 --> 01:00:00,000
uh

1892
01:00:00,000 --> 01:00:02,559
let let me let me show you the source

1893
01:00:02,559 --> 01:00:03,040
code

1894
01:00:03,040 --> 01:00:05,200
for one of the project that i use so i

1895
01:00:05,200 --> 01:00:06,079
use a

1896
01:00:06,079 --> 01:00:08,960
beta flight betaflight is an open source

1897
01:00:08,960 --> 01:00:10,319
project and

1898
01:00:10,319 --> 01:00:11,680
open source project means that the

1899
01:00:11,680 --> 01:00:13,280
source code is freely available for

1900
01:00:13,280 --> 01:00:15,280
everyone to see and modify and see

1901
01:00:15,280 --> 01:00:16,799
what's happening so

1902
01:00:16,799 --> 01:00:20,400
it's a github.com slash

1903
01:00:20,400 --> 01:00:22,160
betaflight where the source code is

1904
01:00:22,160 --> 01:00:23,839
located so

1905
01:00:23,839 --> 01:00:26,160
you can see github.com betaflight

1906
01:00:26,160 --> 01:00:27,440
betaflight is where the

1907
01:00:27,440 --> 01:00:30,000
entire source code is located and it

1908
01:00:30,000 --> 01:00:31,920
supports a lot of flight control and you

1909
01:00:31,920 --> 01:00:32,480
can see it's

1910
01:00:32,480 --> 01:00:35,040
under active development it has 215

1911
01:00:35,040 --> 01:00:37,359
issues and 23 pull requests and

1912
01:00:37,359 --> 01:00:39,599
latest release came back four days ago

1913
01:00:39,599 --> 01:00:41,599
that is 4.2.3

1914
01:00:41,599 --> 01:00:45,520
so yes it has a multi-color rgb feature

1915
01:00:45,520 --> 01:00:47,040
d short as you mentioned in the ac

1916
01:00:47,040 --> 01:00:48,880
chapter it supports the d-shot

1917
01:00:48,880 --> 01:00:50,799
i was just saying about black box flight

1918
01:00:50,799 --> 01:00:52,480
recorder it supports

1919
01:00:52,480 --> 01:00:55,760
uh it supports s-bus and all kinds of

1920
01:00:55,760 --> 01:00:57,599
receiver connection

1921
01:00:57,599 --> 01:01:00,640
uh so yes let's see about

1922
01:01:00,640 --> 01:01:03,680
uh so let's see

1923
01:01:03,680 --> 01:01:04,960
how these kinds of things are

1924
01:01:04,960 --> 01:01:07,119
implemented in source code just for the

1925
01:01:07,119 --> 01:01:07,599
fun

1926
01:01:07,599 --> 01:01:10,000
so if you go into the source directory

1927
01:01:10,000 --> 01:01:10,799
and

1928
01:01:10,799 --> 01:01:13,839
if you go into let's say utils and this

1929
01:01:13,839 --> 01:01:14,880
is where the uh

1930
01:01:14,880 --> 01:01:17,839
sorry not utils the main where the fun

1931
01:01:17,839 --> 01:01:18,640
part is

1932
01:01:18,640 --> 01:01:20,880
so you can see that there is a source

1933
01:01:20,880 --> 01:01:23,599
for everything and i am interested into

1934
01:01:23,599 --> 01:01:27,440
fc the flight controller uh or not i'm

1935
01:01:27,440 --> 01:01:28,720
interested in the flight

1936
01:01:28,720 --> 01:01:30,960
what happens when the when we are taking

1937
01:01:30,960 --> 01:01:32,400
off light so you can see

1938
01:01:32,400 --> 01:01:34,960
imu.c is here which is having the source

1939
01:01:34,960 --> 01:01:35,839
code for

1940
01:01:35,839 --> 01:01:38,079
inertial measurement unit there are some

1941
01:01:38,079 --> 01:01:40,319
helper libraries like gyro analyze

1942
01:01:40,319 --> 01:01:43,440
or mixer dot h uh maybe something for

1943
01:01:43,440 --> 01:01:44,720
sensor fusion

1944
01:01:44,720 --> 01:01:47,839
and i want to see yeah there we are

1945
01:01:47,839 --> 01:01:50,559
we have pid dot c and pi dot h library

1946
01:01:50,559 --> 01:01:52,480
so let's see what's happening in imu

1947
01:01:52,480 --> 01:01:56,079
so if i open imu.c this is the

1948
01:01:56,079 --> 01:01:58,240
the source code for reading value with

1949
01:01:58,240 --> 01:01:59,680
the imu and you can see a lot of

1950
01:01:59,680 --> 01:02:02,160
libraries are involved here

1951
01:02:02,160 --> 01:02:04,839
and you will see a lot of maths

1952
01:02:04,839 --> 01:02:06,079
happening

1953
01:02:06,079 --> 01:02:08,720
attitude reset gyro limit so this is uh

1954
01:02:08,720 --> 01:02:10,799
just a small example where

1955
01:02:10,799 --> 01:02:12,720
exactly it's not it's very big but it's

1956
01:02:12,720 --> 01:02:14,640
a small example compared to the entire

1957
01:02:14,640 --> 01:02:15,599
project now

1958
01:02:15,599 --> 01:02:17,680
let's see about the pid so how the pid

1959
01:02:17,680 --> 01:02:18,880
is implemented

1960
01:02:18,880 --> 01:02:21,119
so this is the implementation of pid in

1961
01:02:21,119 --> 01:02:22,480
beta flight

1962
01:02:22,480 --> 01:02:26,240
uh i might be able to show you if there

1963
01:02:26,240 --> 01:02:27,039
are some

1964
01:02:27,039 --> 01:02:30,640
values for kpk and kd

1965
01:02:30,799 --> 01:02:33,119
uh so yes here you can see that pid roll

1966
01:02:33,119 --> 01:02:34,319
42 85 these

1967
01:02:34,319 --> 01:02:36,559
are i believe uh some values which you

1968
01:02:36,559 --> 01:02:38,960
get if you reset the pid profiles

1969
01:02:38,960 --> 01:02:42,000
so in betaflight you have four different

1970
01:02:42,000 --> 01:02:43,760
profiles for pid i mean

1971
01:02:43,760 --> 01:02:45,119
you can you can change different

1972
01:02:45,119 --> 01:02:46,799
profiles based on your drones and you

1973
01:02:46,799 --> 01:02:48,000
can see what value is good for

1974
01:02:48,000 --> 01:02:50,240
you so these are the four values for

1975
01:02:50,240 --> 01:02:51,520
four different profiles for

1976
01:02:51,520 --> 01:02:54,160
roll uh these are for pitch and these

1977
01:02:54,160 --> 01:02:55,280
are for your

1978
01:02:55,280 --> 01:02:57,599
and things like that so i want to show

1979
01:02:57,599 --> 01:02:58,720
you uh

1980
01:02:58,720 --> 01:03:01,039
the betaflight configurator that is if

1981
01:03:01,039 --> 01:03:02,480
you are

1982
01:03:02,480 --> 01:03:04,240
willing to just use this flight

1983
01:03:04,240 --> 01:03:05,920
controller uh

1984
01:03:05,920 --> 01:03:08,000
sorry flight control firmware without

1985
01:03:08,000 --> 01:03:09,760
developing your own how that would look

1986
01:03:09,760 --> 01:03:12,000
so for that i'll open betaflight okay so

1987
01:03:12,000 --> 01:03:13,839
this is the betaflight configurator and

1988
01:03:13,839 --> 01:03:14,559
you can see

1989
01:03:14,559 --> 01:03:17,039
here is a firmware flasher so you can go

1990
01:03:17,039 --> 01:03:18,640
here and you can select your flight

1991
01:03:18,640 --> 01:03:20,640
controller and it will fetch the latest

1992
01:03:20,640 --> 01:03:21,680
firmware and flash

1993
01:03:21,680 --> 01:03:24,240
it with that so you can see these are

1994
01:03:24,240 --> 01:03:25,520
all the flight controller it supports

1995
01:03:25,520 --> 01:03:27,599
and the list is really big and

1996
01:03:27,599 --> 01:03:29,680
a lot of fragrance are there so you can

1997
01:03:29,680 --> 01:03:31,119
choose your flight controller you can

1998
01:03:31,119 --> 01:03:32,160
choose which

1999
01:03:32,160 --> 01:03:33,680
build you want to flash and then you can

2000
01:03:33,680 --> 01:03:36,240
flash it uh once you flash it i will not

2001
01:03:36,240 --> 01:03:37,760
flash because i already have so i've

2002
01:03:37,760 --> 01:03:39,520
connected my drone my flight controller

2003
01:03:39,520 --> 01:03:41,119
using a usb cable

2004
01:03:41,119 --> 01:03:43,280
to my computer so once you've flashed it

2005
01:03:43,280 --> 01:03:44,880
you can connect it and you can go inside

2006
01:03:44,880 --> 01:03:46,400
the configurator

2007
01:03:46,400 --> 01:03:49,200
so this is how the configurator looks so

2008
01:03:49,200 --> 01:03:50,720
i wanted to also

2009
01:03:50,720 --> 01:03:52,480
uh so there are a lot of videos you can

2010
01:03:52,480 --> 01:03:53,920
find about pid tuning

2011
01:03:53,920 --> 01:03:56,799
in bit of light and what i want to show

2012
01:03:56,799 --> 01:03:58,799
you is how that looks

2013
01:03:58,799 --> 01:04:01,760
so okay as that's what i wanted to show

2014
01:04:01,760 --> 01:04:03,119
you so this is a

2015
01:04:03,119 --> 01:04:07,200
pid tuning page on betaflight and

2016
01:04:07,200 --> 01:04:10,160
so you can see here it says proportional

2017
01:04:10,160 --> 01:04:11,440
role 50

2018
01:04:11,440 --> 01:04:14,079
proportional pitch 80 proportional yacht

2019
01:04:14,079 --> 01:04:14,799
90

2020
01:04:14,799 --> 01:04:17,039
so these are the value of kp for each

2021
01:04:17,039 --> 01:04:18,559
axis and similarly for i

2022
01:04:18,559 --> 01:04:20,880
and similarly for d so this is how you

2023
01:04:20,880 --> 01:04:22,480
can change it and this is how you can

2024
01:04:22,480 --> 01:04:24,640
tune it so if you think that your kp is

2025
01:04:24,640 --> 01:04:25,119
less

2026
01:04:25,119 --> 01:04:26,720
for pitch you can come back after the

2027
01:04:26,720 --> 01:04:28,160
flight you can increase it you can save

2028
01:04:28,160 --> 01:04:29,520
it and you're good to go

2029
01:04:29,520 --> 01:04:31,119
so that was about firmwares and how you

2030
01:04:31,119 --> 01:04:32,640
can use an open source firmware and

2031
01:04:32,640 --> 01:04:34,240
flash your freight controller with it

2032
01:04:34,240 --> 01:04:34,880
and

2033
01:04:34,880 --> 01:04:37,200
tune the parameter which you want to do

2034
01:04:37,200 --> 01:04:37,920
uh so

2035
01:04:37,920 --> 01:04:39,920
also that was of today's class thank you

2036
01:04:39,920 --> 01:04:42,480
very much for joining today and

2037
01:04:42,480 --> 01:04:43,920
everyone who signed up for this course

2038
01:04:43,920 --> 01:04:45,760
it was really fun experience to interact

2039
01:04:45,760 --> 01:04:47,119
with you all especially during the

2040
01:04:47,119 --> 01:04:48,559
office hours

2041
01:04:48,559 --> 01:04:50,799
we started with the drone frame

2042
01:04:50,799 --> 01:04:51,680
selection

2043
01:04:51,680 --> 01:04:53,760
and propeller selection then we moved to

2044
01:04:53,760 --> 01:04:55,440
motors and esc

2045
01:04:55,440 --> 01:04:57,280
to transmitters and receivers we talked

2046
01:04:57,280 --> 01:04:59,280
about protocols we talked about

2047
01:04:59,280 --> 01:05:01,920
communication link frequency channels

2048
01:05:01,920 --> 01:05:03,599
and today we talked about digital signal

2049
01:05:03,599 --> 01:05:05,680
processing and control system which are

2050
01:05:05,680 --> 01:05:07,359
a really important concept and used

2051
01:05:07,359 --> 01:05:10,079
everywhere in control system industry so

2052
01:05:10,079 --> 01:05:12,400
it was really fun for me to teach and i

2053
01:05:12,400 --> 01:05:14,000
really enjoyed the

2054
01:05:14,000 --> 01:05:15,760
being the instructor for this course and

2055
01:05:15,760 --> 01:05:17,119
interacting with you all

2056
01:05:17,119 --> 01:05:19,039
so i'll see you tomorrow for the office

2057
01:05:19,039 --> 01:05:20,559
hours for this class so if you have any

2058
01:05:20,559 --> 01:05:20,960
doubt

2059
01:05:20,960 --> 01:05:24,240
please show up and thank you very much

2060
01:05:24,240 --> 01:05:25,760
for joining and i'll see you sometime

2061
01:05:25,760 --> 01:05:28,160
later

2062
01:05:29,720 --> 01:05:32,720
bye

