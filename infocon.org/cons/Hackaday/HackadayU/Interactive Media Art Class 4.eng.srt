1
00:00:00,000 --> 00:00:08,559
[Music]

2
00:00:08,559 --> 00:00:10,639
welcome to this fourth and final class

3
00:00:10,639 --> 00:00:13,440
in interactive media art at hackday u

4
00:00:13,440 --> 00:00:15,120
in this final class we'll take a look at

5
00:00:15,120 --> 00:00:16,239
what we've already learned about

6
00:00:16,239 --> 00:00:17,680
planning our interactivity in

7
00:00:17,680 --> 00:00:18,560
programming

8
00:00:18,560 --> 00:00:20,240
using flowcharts and interactivity

9
00:00:20,240 --> 00:00:22,560
matrixes and implement a finite state

10
00:00:22,560 --> 00:00:23,760
machine in our code

11
00:00:23,760 --> 00:00:26,400
using a switch case statement this is a

12
00:00:26,400 --> 00:00:28,480
very useful construct for really nailing

13
00:00:28,480 --> 00:00:30,080
down what your program or project

14
00:00:30,080 --> 00:00:32,320
is doing in every mode or state that

15
00:00:32,320 --> 00:00:33,200
it's in

16
00:00:33,200 --> 00:00:35,360
it's also easy to adapt for more complex

17
00:00:35,360 --> 00:00:37,120
programs with multiple inputs and

18
00:00:37,120 --> 00:00:37,920
outputs

19
00:00:37,920 --> 00:00:40,320
such as room scale experiences and it's

20
00:00:40,320 --> 00:00:41,680
easy to edit if you decide the

21
00:00:41,680 --> 00:00:43,440
interactivity isn't really working in a

22
00:00:43,440 --> 00:00:45,039
given state

23
00:00:45,039 --> 00:00:46,800
we're also going to discuss off-board

24
00:00:46,800 --> 00:00:48,719
sensors and how to work with those

25
00:00:48,719 --> 00:00:50,640
so you can explore sensors beyond what's

26
00:00:50,640 --> 00:00:51,920
already on the circuit playground

27
00:00:51,920 --> 00:00:53,199
express

28
00:00:53,199 --> 00:00:55,120
we'll discuss biosensors and computer

29
00:00:55,120 --> 00:00:56,640
vision as well

30
00:00:56,640 --> 00:00:58,399
we'll also discuss places to find

31
00:00:58,399 --> 00:01:00,160
inspiration and techniques for

32
00:01:00,160 --> 00:01:02,079
integrating sensors into objects and

33
00:01:02,079 --> 00:01:03,440
experiences

34
00:01:03,440 --> 00:01:04,879
we'll learn about how to communicate

35
00:01:04,879 --> 00:01:06,799
with other programs using a variety of

36
00:01:06,799 --> 00:01:08,400
communication protocols

37
00:01:08,400 --> 00:01:10,159
and learn about some cool software you

38
00:01:10,159 --> 00:01:12,560
might want to use in addition to arduino

39
00:01:12,560 --> 00:01:14,240
finally we'll conclude by examining

40
00:01:14,240 --> 00:01:15,920
design and development techniques

41
00:01:15,920 --> 00:01:17,680
in project planning singular or room

42
00:01:17,680 --> 00:01:19,119
scale experiences

43
00:01:19,119 --> 00:01:21,840
including user testing we've got a ton

44
00:01:21,840 --> 00:01:25,119
to cover this class so let's get going

45
00:01:25,119 --> 00:01:27,280
a finite state machine usually

46
00:01:27,280 --> 00:01:28,240
abbreviated as

47
00:01:28,240 --> 00:01:31,280
fsm is a computational model that can be

48
00:01:31,280 --> 00:01:33,680
used to simulate sequential logic

49
00:01:33,680 --> 00:01:35,680
representing and controlling execution

50
00:01:35,680 --> 00:01:36,720
flow

51
00:01:36,720 --> 00:01:38,560
a finite state machine can be used to

52
00:01:38,560 --> 00:01:40,240
model problems in lots of different

53
00:01:40,240 --> 00:01:40,799
fields

54
00:01:40,799 --> 00:01:42,479
including mathematics artificial

55
00:01:42,479 --> 00:01:46,640
intelligence games or linguistics

56
00:01:46,640 --> 00:01:49,200
in an fsm a machine or program can only

57
00:01:49,200 --> 00:01:52,240
be in one state at a time

58
00:01:52,240 --> 00:01:54,320
by figuring out what states our machine

59
00:01:54,320 --> 00:01:56,799
can be in and what the transitions are

60
00:01:56,799 --> 00:01:59,200
from one state to a next it can help us

61
00:01:59,200 --> 00:02:01,360
realize how to program the logic for our

62
00:02:01,360 --> 00:02:02,159
installation

63
00:02:02,159 --> 00:02:05,280
interactive artwork or experience we've

64
00:02:05,280 --> 00:02:07,200
talked a bit already about states

65
00:02:07,200 --> 00:02:08,878
and how thinking of our programs as

66
00:02:08,878 --> 00:02:10,479
moving through different states

67
00:02:10,479 --> 00:02:12,319
can help us with our programming as well

68
00:02:12,319 --> 00:02:14,239
as the logic for our interactivity

69
00:02:14,239 --> 00:02:16,959
but how do we program using states first

70
00:02:16,959 --> 00:02:19,360
let's clarify what we mean by states

71
00:02:19,360 --> 00:02:21,280
you can think of the state as a mode for

72
00:02:21,280 --> 00:02:22,480
your program

73
00:02:22,480 --> 00:02:24,080
this will vary depending on what you're

74
00:02:24,080 --> 00:02:26,239
building but let's say we're designing

75
00:02:26,239 --> 00:02:28,400
an exercise wearable that plays music

76
00:02:28,400 --> 00:02:30,160
based on someone's heart rate

77
00:02:30,160 --> 00:02:32,000
if the heart rate is way up we want to

78
00:02:32,000 --> 00:02:34,000
play something that's at a fast bpm to

79
00:02:34,000 --> 00:02:35,280
keep them motivated

80
00:02:35,280 --> 00:02:37,200
if their heart rate is slow we want to

81
00:02:37,200 --> 00:02:38,959
play soothing music

82
00:02:38,959 --> 00:02:40,560
now this is a little difficult to do

83
00:02:40,560 --> 00:02:42,160
with a circuit playground express

84
00:02:42,160 --> 00:02:44,480
it doesn't have a heart rate reader but

85
00:02:44,480 --> 00:02:45,760
let's just talk about it as a

86
00:02:45,760 --> 00:02:47,920
hypothetical situation

87
00:02:47,920 --> 00:02:51,120
what might be the states for our program

88
00:02:51,120 --> 00:02:52,800
well we might want to have a warm-up

89
00:02:52,800 --> 00:02:55,920
state when the device is first turned on

90
00:02:55,920 --> 00:02:57,200
this will let the user know that the

91
00:02:57,200 --> 00:02:59,360
device isn't broken it just needs a

92
00:02:59,360 --> 00:03:01,760
little time to calibrate

93
00:03:01,760 --> 00:03:03,360
during the state we might play a little

94
00:03:03,360 --> 00:03:05,760
jingle while we calibrate our sensors

95
00:03:05,760 --> 00:03:07,760
and take our readings

96
00:03:07,760 --> 00:03:09,599
next we'll want to do something based on

97
00:03:09,599 --> 00:03:10,800
that reading and maybe

98
00:03:10,800 --> 00:03:12,800
we have a couple modes here this is

99
00:03:12,800 --> 00:03:15,040
where we'll want to play our music

100
00:03:15,040 --> 00:03:16,879
we probably want to keep taking sensor

101
00:03:16,879 --> 00:03:18,239
readings during this state

102
00:03:18,239 --> 00:03:20,159
just to make sure that our music matches

103
00:03:20,159 --> 00:03:22,080
the heart rate but we only want to do

104
00:03:22,080 --> 00:03:22,640
this

105
00:03:22,640 --> 00:03:24,720
after a reasonable amount of time

106
00:03:24,720 --> 00:03:26,560
otherwise the music will keep changing

107
00:03:26,560 --> 00:03:29,360
and it might be annoying to the user

108
00:03:29,360 --> 00:03:31,040
if there's a change to our input state

109
00:03:31,040 --> 00:03:33,680
then we want to change our output state

110
00:03:33,680 --> 00:03:36,080
this is very important we don't want to

111
00:03:36,080 --> 00:03:37,920
constantly be re-triggering the same

112
00:03:37,920 --> 00:03:39,680
interactivity

113
00:03:39,680 --> 00:03:41,920
otherwise the person will hear the same

114
00:03:41,920 --> 00:03:43,840
song starting over and over and over

115
00:03:43,840 --> 00:03:44,319
again

116
00:03:44,319 --> 00:03:46,000
we only want to change if there's been a

117
00:03:46,000 --> 00:03:47,680
change in the heart rate

118
00:03:47,680 --> 00:03:49,200
we haven't done this yet and i'll show

119
00:03:49,200 --> 00:03:51,360
you how to do this shortly finally we

120
00:03:51,360 --> 00:03:53,439
want to have some timeout function

121
00:03:53,439 --> 00:03:56,720
or a way of ending our program let's say

122
00:03:56,720 --> 00:03:59,200
that there's a power down button

123
00:03:59,200 --> 00:04:01,439
maybe just like with our power on state

124
00:04:01,439 --> 00:04:02,959
we want to play a little jingle while

125
00:04:02,959 --> 00:04:04,400
it's powering down

126
00:04:04,400 --> 00:04:06,080
maybe this happens for about five

127
00:04:06,080 --> 00:04:08,239
seconds what would this look like

128
00:04:08,239 --> 00:04:10,720
in a flow chart here we can see we've

129
00:04:10,720 --> 00:04:12,640
executed a flow chart that walks us

130
00:04:12,640 --> 00:04:14,560
through our states

131
00:04:14,560 --> 00:04:16,399
we write in our transitions between

132
00:04:16,399 --> 00:04:18,478
states where the lines go from one state

133
00:04:18,478 --> 00:04:20,160
to the next

134
00:04:20,160 --> 00:04:22,320
we have a state for startup a state for

135
00:04:22,320 --> 00:04:24,960
play mode and a state for power down

136
00:04:24,960 --> 00:04:27,199
in startup we take a reading from our

137
00:04:27,199 --> 00:04:28,560
sensor

138
00:04:28,560 --> 00:04:31,840
we also play our startup sound after

139
00:04:31,840 --> 00:04:32,160
five

140
00:04:32,160 --> 00:04:34,240
seconds we enter into play mode and

141
00:04:34,240 --> 00:04:35,919
again take a reading from our sensor at

142
00:04:35,919 --> 00:04:37,199
regular intervals

143
00:04:37,199 --> 00:04:39,360
while also outputting different music if

144
00:04:39,360 --> 00:04:41,199
the sensor data has changed

145
00:04:41,199 --> 00:04:43,919
we only do this if we're in state 2

146
00:04:43,919 --> 00:04:46,320
which is the state for play mode

147
00:04:46,320 --> 00:04:48,560
we have two options for this mode fast

148
00:04:48,560 --> 00:04:50,320
or slow depending on the heart rate

149
00:04:50,320 --> 00:04:51,919
sensor

150
00:04:51,919 --> 00:04:53,759
finally we have a power down state that

151
00:04:53,759 --> 00:04:55,840
gets executed playing the power down

152
00:04:55,840 --> 00:04:56,479
sound

153
00:04:56,479 --> 00:04:58,880
when the power button is pressed and

154
00:04:58,880 --> 00:05:01,440
this continues for 5 seconds

155
00:05:01,440 --> 00:05:03,199
using this flowchart it would be pretty

156
00:05:03,199 --> 00:05:05,680
easy to create the logic for our program

157
00:05:05,680 --> 00:05:07,120
but considering we don't have a heart

158
00:05:07,120 --> 00:05:09,280
rate sensor how about we have a look at

159
00:05:09,280 --> 00:05:11,199
how a different but similar program

160
00:05:11,199 --> 00:05:12,800
might work using the circuit playground

161
00:05:12,800 --> 00:05:14,400
express

162
00:05:14,400 --> 00:05:16,479
from your course files open the sketch

163
00:05:16,479 --> 00:05:17,840
for state machine

164
00:05:17,840 --> 00:05:19,919
let's go back to our earlier example of

165
00:05:19,919 --> 00:05:22,000
a light sensor responsive lamp that

166
00:05:22,000 --> 00:05:24,080
changes colors based on the light sensor

167
00:05:24,080 --> 00:05:25,280
data

168
00:05:25,280 --> 00:05:26,960
let's create a sketch where we'll do

169
00:05:26,960 --> 00:05:28,639
something different depending on whether

170
00:05:28,639 --> 00:05:29,600
it's a sunny day

171
00:05:29,600 --> 00:05:33,039
cloudy day or night time if you open the

172
00:05:33,039 --> 00:05:33,600
sketch

173
00:05:33,600 --> 00:05:36,000
for state machine you'll see an example

174
00:05:36,000 --> 00:05:37,440
of this

175
00:05:37,440 --> 00:05:41,280
we start our sketch with a new data type

176
00:05:41,280 --> 00:05:44,479
on line 10 we see enum state night

177
00:05:44,479 --> 00:05:47,520
overcast sunny an

178
00:05:47,520 --> 00:05:50,479
enumerated type or enum for short is a

179
00:05:50,479 --> 00:05:51,280
data type

180
00:05:51,280 --> 00:05:53,600
consisting of a set of named values

181
00:05:53,600 --> 00:05:55,600
called elements

182
00:05:55,600 --> 00:05:57,440
the enumerator names are usually

183
00:05:57,440 --> 00:06:00,319
identifiers that behave as constants

184
00:06:00,319 --> 00:06:02,880
each enumerator has name that's easy for

185
00:06:02,880 --> 00:06:04,960
a human to read and identify

186
00:06:04,960 --> 00:06:06,880
under the hood it's interchangeable with

187
00:06:06,880 --> 00:06:08,319
a number

188
00:06:08,319 --> 00:06:11,520
for example in enum state night overcast

189
00:06:11,520 --> 00:06:12,479
sunny

190
00:06:12,479 --> 00:06:15,680
night is zero overcast is one and sunny

191
00:06:15,680 --> 00:06:17,120
would be two

192
00:06:17,120 --> 00:06:19,280
in this way an enumerator is a useful

193
00:06:19,280 --> 00:06:21,360
way to address your states by numbers or

194
00:06:21,360 --> 00:06:22,639
by name

195
00:06:22,639 --> 00:06:24,800
using enums increases the level of

196
00:06:24,800 --> 00:06:26,639
abstraction and lets the programmer

197
00:06:26,639 --> 00:06:28,720
think about what the values mean

198
00:06:28,720 --> 00:06:30,080
rather than worrying about how they're

199
00:06:30,080 --> 00:06:35,840
stored and accessed

200
00:06:36,319 --> 00:06:37,919
you'll see this more and it'll make

201
00:06:37,919 --> 00:06:40,000
sense as we go through the sketch

202
00:06:40,000 --> 00:06:42,080
next we have a variable to keep track of

203
00:06:42,080 --> 00:06:44,400
our state and our last state

204
00:06:44,400 --> 00:06:46,639
this is going to be useful because as i

205
00:06:46,639 --> 00:06:48,800
mentioned in our earlier example

206
00:06:48,800 --> 00:06:51,199
we want to switch state only when

207
00:06:51,199 --> 00:06:52,479
there's been a change

208
00:06:52,479 --> 00:06:54,479
if we keep switching the state we'll

209
00:06:54,479 --> 00:06:56,240
re-trigger our interactivity

210
00:06:56,240 --> 00:06:58,080
so if our interactivity is something

211
00:06:58,080 --> 00:06:59,360
like a song

212
00:06:59,360 --> 00:07:01,199
we might re-trigger the song from the

213
00:07:01,199 --> 00:07:02,880
beginning each time if we're not

214
00:07:02,880 --> 00:07:05,599
checking to see if our state has changed

215
00:07:05,599 --> 00:07:07,599
instead we only want to trigger our

216
00:07:07,599 --> 00:07:10,560
state change if it's been changed

217
00:07:10,560 --> 00:07:12,080
we'll have a look at that later on in

218
00:07:12,080 --> 00:07:15,199
the sketch to see how that works

219
00:07:15,199 --> 00:07:17,120
to begin with we want to have an int

220
00:07:17,120 --> 00:07:19,199
state and we want to set it different to

221
00:07:19,199 --> 00:07:21,039
something than our last state

222
00:07:21,039 --> 00:07:24,080
otherwise our first check won't work and

223
00:07:24,080 --> 00:07:27,039
our code won't run then we have code for

224
00:07:27,039 --> 00:07:28,240
our timer

225
00:07:28,240 --> 00:07:31,280
and our timer is set to update every

226
00:07:31,280 --> 00:07:34,240
thousand milliseconds so this is going

227
00:07:34,240 --> 00:07:36,160
to be a timer for our entire loop

228
00:07:36,160 --> 00:07:38,319
meaning how often should we check so in

229
00:07:38,319 --> 00:07:39,440
this case we're going to check our

230
00:07:39,440 --> 00:07:40,319
sensor

231
00:07:40,319 --> 00:07:43,199
every 1000 milliseconds and then we also

232
00:07:43,199 --> 00:07:43,599
have an

233
00:07:43,599 --> 00:07:46,240
unsigned long to hold our timing millies

234
00:07:46,240 --> 00:07:47,840
again you always have to have an

235
00:07:47,840 --> 00:07:49,039
unsigned long

236
00:07:49,039 --> 00:07:51,039
for millions values otherwise you might

237
00:07:51,039 --> 00:07:52,800
overflow the variable

238
00:07:52,800 --> 00:07:54,080
these two lines should look very

239
00:07:54,080 --> 00:07:56,560
familiar we're storing a value for our

240
00:07:56,560 --> 00:07:57,199
low light

241
00:07:57,199 --> 00:07:58,800
and for our bright light and these are

242
00:07:58,800 --> 00:08:00,639
our thresholds for both low light and

243
00:08:00,639 --> 00:08:01,840
bright light

244
00:08:01,840 --> 00:08:03,360
you can adjust these of course to

245
00:08:03,360 --> 00:08:05,520
whatever is low light for you meaning

246
00:08:05,520 --> 00:08:08,240
whatever would be night time or darkness

247
00:08:08,240 --> 00:08:10,240
and also you can adjust the bright light

248
00:08:10,240 --> 00:08:12,000
to be whatever might be a sunny day

249
00:08:12,000 --> 00:08:14,080
nothing unusual in our setup except that

250
00:08:14,080 --> 00:08:15,520
we're including a three

251
00:08:15,520 --> 00:08:17,840
second delay a warm-up delay i often

252
00:08:17,840 --> 00:08:19,599
like to do this especially when i'm

253
00:08:19,599 --> 00:08:21,599
using sensitive sensors

254
00:08:21,599 --> 00:08:23,599
because a lot can happen when your

255
00:08:23,599 --> 00:08:25,680
microcontroller is starting up

256
00:08:25,680 --> 00:08:27,440
and you don't want all that noise so

257
00:08:27,440 --> 00:08:28,960
it's an easy way to factor out that

258
00:08:28,960 --> 00:08:30,319
noise and just start

259
00:08:30,319 --> 00:08:32,719
once everything is settled down then in

260
00:08:32,719 --> 00:08:34,719
our loop we see right off the bat we're

261
00:08:34,719 --> 00:08:35,679
starting with

262
00:08:35,679 --> 00:08:38,479
our timer and we're checking to see if

263
00:08:38,479 --> 00:08:39,679
the millis

264
00:08:39,679 --> 00:08:42,719
is greater than our timing millies

265
00:08:42,719 --> 00:08:45,200
at the end of our sketch we'll update

266
00:08:45,200 --> 00:08:46,160
timing millies

267
00:08:46,160 --> 00:08:48,480
to be millies plus our event update

268
00:08:48,480 --> 00:08:50,320
timer so that we can keep track of the

269
00:08:50,320 --> 00:08:50,880
time

270
00:08:50,880 --> 00:08:53,120
so every second it will trigger

271
00:08:53,120 --> 00:08:55,040
everything within that loop

272
00:08:55,040 --> 00:08:56,720
then we see that we're storing our light

273
00:08:56,720 --> 00:08:59,120
sensor data as in sensory valve

274
00:08:59,120 --> 00:09:00,640
you can switch this out for whatever

275
00:09:00,640 --> 00:09:03,519
sensor you want to try with a sketch

276
00:09:03,519 --> 00:09:05,839
then we have our if else if else

277
00:09:05,839 --> 00:09:06,800
statement

278
00:09:06,800 --> 00:09:09,600
where we check our sensor value and

279
00:09:09,600 --> 00:09:11,200
we're looking to see

280
00:09:11,200 --> 00:09:13,680
if our sensor value is lower than or

281
00:09:13,680 --> 00:09:14,720
equal to low light

282
00:09:14,720 --> 00:09:18,240
which again we've set up here and if it

283
00:09:18,240 --> 00:09:18,800
is

284
00:09:18,800 --> 00:09:22,560
then we want to set the state tonight

285
00:09:22,560 --> 00:09:25,440
so we've decided that it will be night

286
00:09:25,440 --> 00:09:25,839
if

287
00:09:25,839 --> 00:09:28,399
the sensor value is lower than our low

288
00:09:28,399 --> 00:09:30,320
light or equal to our low light value

289
00:09:30,320 --> 00:09:31,600
which makes sense

290
00:09:31,600 --> 00:09:33,839
in the else if statement it says if the

291
00:09:33,839 --> 00:09:36,640
sensor value is greater than low light

292
00:09:36,640 --> 00:09:39,040
and if it's less than bright light

293
00:09:39,040 --> 00:09:41,680
meaning if it's about average light

294
00:09:41,680 --> 00:09:42,880
then we're going to say that it's

295
00:09:42,880 --> 00:09:45,920
overcast you might have more than one

296
00:09:45,920 --> 00:09:47,200
mode in between

297
00:09:47,200 --> 00:09:49,680
night and sunny but for the sake of this

298
00:09:49,680 --> 00:09:51,600
demonstration we just have one

299
00:09:51,600 --> 00:09:54,000
then we have another elsif statement to

300
00:09:54,000 --> 00:09:55,600
say if the sensor value

301
00:09:55,600 --> 00:09:57,839
is greater than or equal to bright light

302
00:09:57,839 --> 00:09:59,200
then we're going to set the state to

303
00:09:59,200 --> 00:09:59,680
sunny

304
00:09:59,680 --> 00:10:01,760
finally we have an else statement to

305
00:10:01,760 --> 00:10:04,240
print if the sensor's out of range

306
00:10:04,240 --> 00:10:06,720
hypothetically this should never run but

307
00:10:06,720 --> 00:10:08,880
it's always good to have a just in case

308
00:10:08,880 --> 00:10:10,880
state in case your sensor does something

309
00:10:10,880 --> 00:10:12,240
really weird

310
00:10:12,240 --> 00:10:14,720
next we have our switch case statement

311
00:10:14,720 --> 00:10:16,880
and in this case we're actually using it

312
00:10:16,880 --> 00:10:18,640
with a state

313
00:10:18,640 --> 00:10:20,880
so the first thing we do is we check to

314
00:10:20,880 --> 00:10:23,040
see if the state has changed

315
00:10:23,040 --> 00:10:25,920
meaning is the state not the same as the

316
00:10:25,920 --> 00:10:27,120
last state

317
00:10:27,120 --> 00:10:28,959
again this is why it's important that we

318
00:10:28,959 --> 00:10:31,279
start out with different state values

319
00:10:31,279 --> 00:10:34,079
in the beginning then if our state is

320
00:10:34,079 --> 00:10:35,839
not equal to our last state

321
00:10:35,839 --> 00:10:39,120
we'll want to switch the case

322
00:10:39,120 --> 00:10:42,160
so if our case is night meaning

323
00:10:42,160 --> 00:10:44,000
if our sensor value is less than and

324
00:10:44,000 --> 00:10:45,200
equal to low light

325
00:10:45,200 --> 00:10:46,880
right now we're just going to print

326
00:10:46,880 --> 00:10:48,720
knight but you can set this to be

327
00:10:48,720 --> 00:10:49,600
whatever you like

328
00:10:49,600 --> 00:10:52,720
it could be a fast led animation it

329
00:10:52,720 --> 00:10:53,680
could be playing

330
00:10:53,680 --> 00:10:57,440
a tune completely up to you similarly we

331
00:10:57,440 --> 00:10:59,760
have a case for overcast and a case for

332
00:10:59,760 --> 00:11:00,480
sunny

333
00:11:00,480 --> 00:11:02,800
we could just as easily because these

334
00:11:02,800 --> 00:11:04,079
are enumerators

335
00:11:04,079 --> 00:11:07,519
say zero one

336
00:11:07,519 --> 00:11:09,920
and two and these would be the same

337
00:11:09,920 --> 00:11:11,279
thing as

338
00:11:11,279 --> 00:11:13,360
what we have up here night overcast and

339
00:11:13,360 --> 00:11:14,959
sunny because they're in order

340
00:11:14,959 --> 00:11:18,480
for 0 1 and 2. but

341
00:11:18,480 --> 00:11:20,079
it's a little hard to read this and

342
00:11:20,079 --> 00:11:21,519
figure out what it is

343
00:11:21,519 --> 00:11:23,279
especially if we take out the serial

344
00:11:23,279 --> 00:11:25,120
print line statement

345
00:11:25,120 --> 00:11:29,440
so let's not do that

346
00:11:29,440 --> 00:11:32,079
we also have a default case which again

347
00:11:32,079 --> 00:11:33,440
should never happen

348
00:11:33,440 --> 00:11:35,680
but again it's good practice to keep it

349
00:11:35,680 --> 00:11:36,800
in

350
00:11:36,800 --> 00:11:39,040
as a reminder switch case statements

351
00:11:39,040 --> 00:11:40,240
always end

352
00:11:40,240 --> 00:11:42,399
with a break to learn more about switch

353
00:11:42,399 --> 00:11:43,279
case statements

354
00:11:43,279 --> 00:11:46,959
you can see the arduino reference

355
00:11:50,000 --> 00:11:52,320
at the very end of all of this we're

356
00:11:52,320 --> 00:11:54,639
setting our last state variable

357
00:11:54,639 --> 00:11:57,680
to be our state and that basically holds

358
00:11:57,680 --> 00:11:58,800
the state

359
00:11:58,800 --> 00:12:00,959
so we know what the last state was so

360
00:12:00,959 --> 00:12:03,040
that when we start our loop over again

361
00:12:03,040 --> 00:12:05,360
and we do our comparison then we know

362
00:12:05,360 --> 00:12:07,200
that we are comparing correctly

363
00:12:07,200 --> 00:12:09,839
the last state to our state and if it

364
00:12:09,839 --> 00:12:10,880
hasn't changed

365
00:12:10,880 --> 00:12:13,120
for example if it continues to be a

366
00:12:13,120 --> 00:12:14,320
sunny day

367
00:12:14,320 --> 00:12:17,120
we don't execute anything again this is

368
00:12:17,120 --> 00:12:18,160
really important

369
00:12:18,160 --> 00:12:20,720
because if we didn't have a serial print

370
00:12:20,720 --> 00:12:22,639
line statement in here and instead had

371
00:12:22,639 --> 00:12:23,279
something

372
00:12:23,279 --> 00:12:25,200
that really requires an action that

373
00:12:25,200 --> 00:12:27,120
isn't interrupted

374
00:12:27,120 --> 00:12:30,079
like starting a song we wouldn't want to

375
00:12:30,079 --> 00:12:31,760
start the song over and over again

376
00:12:31,760 --> 00:12:33,600
we would just want it to play once and

377
00:12:33,600 --> 00:12:35,440
continue to play until the state has

378
00:12:35,440 --> 00:12:36,480
changed

379
00:12:36,480 --> 00:12:38,399
so this allows us to do that this

380
00:12:38,399 --> 00:12:40,320
combination of checking if the state has

381
00:12:40,320 --> 00:12:41,440
changed

382
00:12:41,440 --> 00:12:44,399
and then updating the state at the end

383
00:12:44,399 --> 00:12:46,000
and then the last thing we do again

384
00:12:46,000 --> 00:12:48,959
is to update our timer so give this a

385
00:12:48,959 --> 00:12:50,240
try and as a challenge

386
00:12:50,240 --> 00:12:52,560
try to put different things inside of

387
00:12:52,560 --> 00:12:54,240
the switch case statement

388
00:12:54,240 --> 00:12:56,720
and try to use some different sensors so

389
00:12:56,720 --> 00:12:57,440
can you

390
00:12:57,440 --> 00:12:59,920
do the same thing with the sound sensor

391
00:12:59,920 --> 00:13:01,519
but when it's a loud sound

392
00:13:01,519 --> 00:13:03,920
have it have a very bright lighting

393
00:13:03,920 --> 00:13:05,040
pattern play

394
00:13:05,040 --> 00:13:08,639
or if it's a quiet sound have it play a

395
00:13:08,639 --> 00:13:09,920
very muted

396
00:13:09,920 --> 00:13:12,720
breathing pattern give it a try and play

397
00:13:12,720 --> 00:13:13,839
around with this a bit

398
00:13:13,839 --> 00:13:15,760
especially the timers and also the

399
00:13:15,760 --> 00:13:16,959
different states

400
00:13:16,959 --> 00:13:19,040
like i said before you can of course add

401
00:13:19,040 --> 00:13:21,120
more states just add whatever makes

402
00:13:21,120 --> 00:13:21,839
sense

403
00:13:21,839 --> 00:13:24,240
and make sure in your if else statement

404
00:13:24,240 --> 00:13:25,920
that you're really checking to make sure

405
00:13:25,920 --> 00:13:27,760
that you're not overlapping

406
00:13:27,760 --> 00:13:32,079
so for example if i had set this to

407
00:13:32,079 --> 00:13:34,560
if i had two cases where it could be

408
00:13:34,560 --> 00:13:36,079
equal to low light

409
00:13:36,079 --> 00:13:38,560
this will be confusing and so both of

410
00:13:38,560 --> 00:13:40,320
these will execute

411
00:13:40,320 --> 00:13:42,079
and so make sure that you're you're not

412
00:13:42,079 --> 00:13:44,399
having overlapping if else statements or

413
00:13:44,399 --> 00:13:46,240
overlapping thresholds

414
00:13:46,240 --> 00:13:49,839
so if i upload this and i put my hand

415
00:13:49,839 --> 00:13:52,480
over the sensor i can see that it

416
00:13:52,480 --> 00:13:54,480
changes to night and it only prints

417
00:13:54,480 --> 00:13:57,760
night once because it's only changed

418
00:13:57,760 --> 00:14:01,360
state once but if i take my hand off

419
00:14:01,360 --> 00:14:03,360
then i see that it does a sensor reading

420
00:14:03,360 --> 00:14:04,639
and reads sunny

421
00:14:04,639 --> 00:14:06,399
again it's not printing sunny sunny

422
00:14:06,399 --> 00:14:07,680
sunny over and over again

423
00:14:07,680 --> 00:14:09,199
because it's only printing it when it's

424
00:14:09,199 --> 00:14:10,800
changed its state

425
00:14:10,800 --> 00:14:15,279
if i put my hand over again we see night

426
00:14:15,279 --> 00:14:17,440
so you can see how useful this is in

427
00:14:17,440 --> 00:14:19,279
just getting one thing to execute and

428
00:14:19,279 --> 00:14:20,320
then continue to

429
00:14:20,320 --> 00:14:23,199
execute again and again and again until

430
00:14:23,199 --> 00:14:24,399
something's different

431
00:14:24,399 --> 00:14:26,560
and then it switches to the next state

432
00:14:26,560 --> 00:14:29,839
and does the next kind of interactivity

433
00:14:29,839 --> 00:14:33,920
open the sketch for calibration

434
00:14:33,920 --> 00:14:35,760
you have an installation that's running

435
00:14:35,760 --> 00:14:37,279
for a long time

436
00:14:37,279 --> 00:14:40,000
your sensor value and threshold might

437
00:14:40,000 --> 00:14:41,440
change a bit

438
00:14:41,440 --> 00:14:43,279
how can you adjust for this without

439
00:14:43,279 --> 00:14:45,360
having to be present and manually adjust

440
00:14:45,360 --> 00:14:47,519
the threshold every time

441
00:14:47,519 --> 00:14:49,600
well there's a way of auto calibrating

442
00:14:49,600 --> 00:14:51,760
your sensor and it's shown in the sketch

443
00:14:51,760 --> 00:14:55,760
for calibration this can be used for any

444
00:14:55,760 --> 00:14:56,399
sensor

445
00:14:56,399 --> 00:14:58,320
but for this case we're using it for

446
00:14:58,320 --> 00:15:00,320
capacitive touch values

447
00:15:00,320 --> 00:15:01,600
in the sketch you'll see different

448
00:15:01,600 --> 00:15:03,120
options for using it with different

449
00:15:03,120 --> 00:15:04,639
sensors on the circuit playground

450
00:15:04,639 --> 00:15:06,240
express

451
00:15:06,240 --> 00:15:10,800
we start by declaring sensor pin as a1

452
00:15:10,800 --> 00:15:13,120
now we have our integer to hold our

453
00:15:13,120 --> 00:15:14,399
sensor value

454
00:15:14,399 --> 00:15:16,639
and we have an integer for sensor min

455
00:15:16,639 --> 00:15:18,240
and sensor max

456
00:15:18,240 --> 00:15:21,120
this is 0 to 1023 which is the minimum

457
00:15:21,120 --> 00:15:23,519
and maximum for that sensor

458
00:15:23,519 --> 00:15:25,199
it might change a little bit based on

459
00:15:25,199 --> 00:15:27,120
your sensor but these are likely the

460
00:15:27,120 --> 00:15:30,000
values that you'll have

461
00:15:30,000 --> 00:15:31,680
then we have a threshold value that

462
00:15:31,680 --> 00:15:33,040
we've set to 200

463
00:15:33,040 --> 00:15:34,399
and you might think how is this

464
00:15:34,399 --> 00:15:36,639
different than the threshold sketch

465
00:15:36,639 --> 00:15:39,920
well this value actually is between 0

466
00:15:39,920 --> 00:15:41,440
and 255

467
00:15:41,440 --> 00:15:43,600
and reflects a mapped value of our

468
00:15:43,600 --> 00:15:45,279
sensor threshold

469
00:15:45,279 --> 00:15:48,079
we'll show you that in a second then we

470
00:15:48,079 --> 00:15:48,560
have a

471
00:15:48,560 --> 00:15:51,920
bounce of a hundred again delays are not

472
00:15:51,920 --> 00:15:52,639
ideal

473
00:15:52,639 --> 00:15:54,720
but sometimes if you have a very simple

474
00:15:54,720 --> 00:15:57,120
sketch say a sketch that's only taking

475
00:15:57,120 --> 00:15:58,399
sensor data

476
00:15:58,399 --> 00:16:00,399
then it's okay to have a delay or a

477
00:16:00,399 --> 00:16:01,759
bounce rate

478
00:16:01,759 --> 00:16:04,000
this is to keep the sensor from creating

479
00:16:04,000 --> 00:16:04,959
too much noise

480
00:16:04,959 --> 00:16:08,079
and getting readings that aren't correct

481
00:16:08,079 --> 00:16:09,920
this will vary depending on what sensor

482
00:16:09,920 --> 00:16:11,920
you have and what kind of noise you have

483
00:16:11,920 --> 00:16:12,880
with your sensor

484
00:16:12,880 --> 00:16:15,279
but sometimes this is the best way you

485
00:16:15,279 --> 00:16:17,279
can also replace this with a timer if

486
00:16:17,279 --> 00:16:19,600
you prefer

487
00:16:19,600 --> 00:16:23,360
in setup we have a warm-up delay of 3000

488
00:16:23,360 --> 00:16:24,639
this is to wait until the

489
00:16:24,639 --> 00:16:26,959
microcontroller has fully started up

490
00:16:26,959 --> 00:16:28,639
then we have something a bit unusual

491
00:16:28,639 --> 00:16:30,000
which is a while loop

492
00:16:30,000 --> 00:16:32,480
within our setup and you might wonder

493
00:16:32,480 --> 00:16:34,480
why is a while loop in our setup we

494
00:16:34,480 --> 00:16:37,040
usually put while loops and other loops

495
00:16:37,040 --> 00:16:39,199
and other kinds of interactivity in our

496
00:16:39,199 --> 00:16:40,560
loop function

497
00:16:40,560 --> 00:16:42,320
well if you remember from the beginning

498
00:16:42,320 --> 00:16:44,240
anything that's in setup will only run

499
00:16:44,240 --> 00:16:46,639
one time we only want to calibrate our

500
00:16:46,639 --> 00:16:48,720
sensor within the first five seconds of

501
00:16:48,720 --> 00:16:50,000
our sketch

502
00:16:50,000 --> 00:16:52,240
and so we put it in setup and it only

503
00:16:52,240 --> 00:16:54,639
runs once

504
00:16:54,639 --> 00:16:56,560
we can see that the while loop says

505
00:16:56,560 --> 00:16:59,040
while millies is less than 5000

506
00:16:59,040 --> 00:17:00,800
meaning while the time that's elapsed

507
00:17:00,800 --> 00:17:02,639
since we ran our sketch is less than

508
00:17:02,639 --> 00:17:04,000
5000 milliseconds

509
00:17:04,000 --> 00:17:07,119
or 5 seconds do the following and the

510
00:17:07,119 --> 00:17:10,559
following is our calibration loop

511
00:17:10,559 --> 00:17:13,199
here we set the sensor value to read the

512
00:17:13,199 --> 00:17:13,839
cap

513
00:17:13,839 --> 00:17:16,400
sensor pin in the next section we have

514
00:17:16,400 --> 00:17:17,679
an if statement

515
00:17:17,679 --> 00:17:20,079
if the sensor value is greater than our

516
00:17:20,079 --> 00:17:21,679
sensor max

517
00:17:21,679 --> 00:17:24,640
then the sensor max is our sensor value

518
00:17:24,640 --> 00:17:26,559
so we're seeing if their sensor value

519
00:17:26,559 --> 00:17:28,480
has gone beyond what we're allowing as

520
00:17:28,480 --> 00:17:30,320
our sensor maximum

521
00:17:30,320 --> 00:17:33,280
if so we reset sensor max we're doing

522
00:17:33,280 --> 00:17:35,120
the same for the minimum value in the

523
00:17:35,120 --> 00:17:35,520
next

524
00:17:35,520 --> 00:17:37,440
if statement we're checking to see if

525
00:17:37,440 --> 00:17:39,679
the sensor value has somehow gone below

526
00:17:39,679 --> 00:17:42,400
zero if it has then we're setting our

527
00:17:42,400 --> 00:17:45,120
sensor minimum to the new lowest value

528
00:17:45,120 --> 00:17:47,200
which is the value that our sensor value

529
00:17:47,200 --> 00:17:48,480
is reading

530
00:17:48,480 --> 00:17:50,320
in our loop we're again reading the

531
00:17:50,320 --> 00:17:52,480
sensor value and we put it in loop so

532
00:17:52,480 --> 00:17:53,440
that we can read it

533
00:17:53,440 --> 00:17:55,360
each time as the first thing we do in

534
00:17:55,360 --> 00:17:57,520
our loop then we're printing the raw

535
00:17:57,520 --> 00:17:58,160
value

536
00:17:58,160 --> 00:17:59,919
and the sensor value that we're getting

537
00:17:59,919 --> 00:18:02,320
in this is to illustrate how this sketch

538
00:18:02,320 --> 00:18:03,039
is working

539
00:18:03,039 --> 00:18:04,799
you don't necessarily need to keep this

540
00:18:04,799 --> 00:18:08,160
in then we're mapping the sensor value

541
00:18:08,160 --> 00:18:10,320
to a range that's between our minimum

542
00:18:10,320 --> 00:18:12,000
and maximum

543
00:18:12,000 --> 00:18:14,240
so if you remember our minimum is 0 and

544
00:18:14,240 --> 00:18:15,600
our sensor max is

545
00:18:15,600 --> 00:18:18,720
1023 so what we're saying

546
00:18:18,720 --> 00:18:22,240
is take 0 and map it to 0 and take 1023

547
00:18:22,240 --> 00:18:24,480
and map it to 255.

548
00:18:24,480 --> 00:18:26,960
that will give us a range of between 0

549
00:18:26,960 --> 00:18:29,600
and 255

550
00:18:29,600 --> 00:18:31,360
then we're showing what our mapped value

551
00:18:31,360 --> 00:18:34,960
is next we're using a constrain

552
00:18:34,960 --> 00:18:36,799
so this is saying that if the sensor

553
00:18:36,799 --> 00:18:38,400
value is outside

554
00:18:38,400 --> 00:18:41,520
somehow the range of 0 to 255

555
00:18:41,520 --> 00:18:44,400
then constrain it this is to make sure

556
00:18:44,400 --> 00:18:45,919
that the sensor value is

557
00:18:45,919 --> 00:18:49,440
a correct reading then we're printing

558
00:18:49,440 --> 00:18:51,520
that value

559
00:18:51,520 --> 00:18:53,760
finally we're doing our interactivity so

560
00:18:53,760 --> 00:18:55,600
if the sensor value is greater than our

561
00:18:55,600 --> 00:18:56,720
threshold

562
00:18:56,720 --> 00:19:00,320
we'll play a tone we also have an

563
00:19:00,320 --> 00:19:01,919
else loop in here but we don't have

564
00:19:01,919 --> 00:19:03,360
anything that we're doing

565
00:19:03,360 --> 00:19:05,200
in this else loop you can put something

566
00:19:05,200 --> 00:19:06,799
in if you want to

567
00:19:06,799 --> 00:19:09,679
finally we conclude with a debounce give

568
00:19:09,679 --> 00:19:12,480
this sketch a try and see how it works

569
00:19:12,480 --> 00:19:15,520
you'll notice that the 0 to 255 is now

570
00:19:15,520 --> 00:19:17,520
the value that you'll get instead of 0

571
00:19:17,520 --> 00:19:19,039
to 1023

572
00:19:19,039 --> 00:19:20,880
and this will be consistent for nearly

573
00:19:20,880 --> 00:19:22,880
every sensor so every sensor you have

574
00:19:22,880 --> 00:19:24,160
will have a value between

575
00:19:24,160 --> 00:19:27,200
0 and 255. you can see how this would be

576
00:19:27,200 --> 00:19:28,160
very useful

577
00:19:28,160 --> 00:19:30,320
in determining what a default threshold

578
00:19:30,320 --> 00:19:31,280
might be

579
00:19:31,280 --> 00:19:33,840
so for example if you're having a sensor

580
00:19:33,840 --> 00:19:34,559
that creeps

581
00:19:34,559 --> 00:19:37,360
increasingly towards 255 you could set

582
00:19:37,360 --> 00:19:38,160
your threshold

583
00:19:38,160 --> 00:19:40,720
higher or if you wanted to have a less

584
00:19:40,720 --> 00:19:41,760
sensitive sensor

585
00:19:41,760 --> 00:19:43,600
you can set it somewhere in the middle

586
00:19:43,600 --> 00:19:45,360
of 0 and 255

587
00:19:45,360 --> 00:19:48,960
say 150 or so if i open up serial

588
00:19:48,960 --> 00:19:50,400
monitor i can see

589
00:19:50,400 --> 00:19:52,240
the raw value the mapped value in the

590
00:19:52,240 --> 00:19:53,840
constrain value

591
00:19:53,840 --> 00:19:56,799
when i press the pin

592
00:19:58,080 --> 00:20:01,199
i hear a tone play

593
00:20:03,120 --> 00:20:06,400
open the sketch for running average

594
00:20:06,400 --> 00:20:07,760
in the sketch we'll learn how to

595
00:20:07,760 --> 00:20:09,440
calculate a running average

596
00:20:09,440 --> 00:20:11,440
and then self-calibrate for our cap

597
00:20:11,440 --> 00:20:12,880
touch pins

598
00:20:12,880 --> 00:20:14,960
the basic principle of a running average

599
00:20:14,960 --> 00:20:17,280
is create an array of measurements

600
00:20:17,280 --> 00:20:19,120
a variable to keep track of which one

601
00:20:19,120 --> 00:20:20,320
you're currently on

602
00:20:20,320 --> 00:20:23,120
and a variable to hold your average then

603
00:20:23,120 --> 00:20:24,720
every time you take a measurement

604
00:20:24,720 --> 00:20:26,640
you'll put your new measurement in the

605
00:20:26,640 --> 00:20:28,559
current element of the array

606
00:20:28,559 --> 00:20:30,960
and you'll increase the position by 1 or

607
00:20:30,960 --> 00:20:32,720
reset it to 0 if you're at the end of

608
00:20:32,720 --> 00:20:34,159
the array

609
00:20:34,159 --> 00:20:35,760
then you'll divide the sum of all the

610
00:20:35,760 --> 00:20:37,440
measurements here accomplished by

611
00:20:37,440 --> 00:20:39,919
continuously subtracting the old reading

612
00:20:39,919 --> 00:20:42,559
and then adding the new one by the total

613
00:20:42,559 --> 00:20:45,520
number of measurements in the array

614
00:20:45,520 --> 00:20:47,360
you can see this at work in the take

615
00:20:47,360 --> 00:20:49,520
reading function

616
00:20:49,520 --> 00:20:52,799
here we have a save index of zero

617
00:20:52,799 --> 00:20:54,640
next we're going to subtract the last

618
00:20:54,640 --> 00:20:56,400
reading as indicated by

619
00:20:56,400 --> 00:20:59,440
total equals total minus readings

620
00:20:59,440 --> 00:21:03,120
read index then we're going to read from

621
00:21:03,120 --> 00:21:04,240
the sensor

622
00:21:04,240 --> 00:21:06,960
using circuit playground read cap cap

623
00:21:06,960 --> 00:21:09,120
pin

624
00:21:09,440 --> 00:21:11,840
then we save our index so we can return

625
00:21:11,840 --> 00:21:14,399
the value

626
00:21:14,960 --> 00:21:17,840
then we add the reading to the total and

627
00:21:17,840 --> 00:21:19,520
then we go to the next position

628
00:21:19,520 --> 00:21:23,360
in the array if we're at the end of the

629
00:21:23,360 --> 00:21:23,919
array

630
00:21:23,919 --> 00:21:27,039
we go back to zero

631
00:21:27,679 --> 00:21:29,840
on line 61 is where we actually

632
00:21:29,840 --> 00:21:32,879
calculate the average

633
00:21:33,360 --> 00:21:36,399
and then we return it

634
00:21:36,720 --> 00:21:38,559
doing this gives you an average of the

635
00:21:38,559 --> 00:21:41,360
last n values read by the sensor

636
00:21:41,360 --> 00:21:43,360
one that continually updates as new

637
00:21:43,360 --> 00:21:45,280
values are read

638
00:21:45,280 --> 00:21:47,280
this trick is very useful for smoothing

639
00:21:47,280 --> 00:21:49,200
data if you have a sensor that is

640
00:21:49,200 --> 00:21:50,559
susceptible to noise

641
00:21:50,559 --> 00:21:53,360
or tends to spike between values it's

642
00:21:53,360 --> 00:21:55,360
also good for self-calibrating systems

643
00:21:55,360 --> 00:21:56,880
that depend on a threshold

644
00:21:56,880 --> 00:22:01,120
which can change like capacitive touch

645
00:22:01,600 --> 00:22:04,720
upload the sketch and give it a try

646
00:22:04,720 --> 00:22:07,280
try touching pad a1 and watching the

647
00:22:07,280 --> 00:22:09,200
serial monitor for change

648
00:22:09,200 --> 00:22:11,120
you can watch the running average rise

649
00:22:11,120 --> 00:22:13,840
and drop as you touch the pad

650
00:22:13,840 --> 00:22:15,919
in serial monitor i can see the

651
00:22:15,919 --> 00:22:17,360
capacitive touch reading

652
00:22:17,360 --> 00:22:20,720
and the running average as they come in

653
00:22:20,720 --> 00:22:25,039
if i touch the sensor i see touched

654
00:22:25,039 --> 00:22:26,960
and i also see that the capacitive touch

655
00:22:26,960 --> 00:22:28,559
reading and the average

656
00:22:28,559 --> 00:22:31,600
change once you've exhausted the

657
00:22:31,600 --> 00:22:33,679
possibilities of the onboard sensors of

658
00:22:33,679 --> 00:22:35,360
the circuit playground express

659
00:22:35,360 --> 00:22:37,520
the fun is just beginning you can

660
00:22:37,520 --> 00:22:39,600
control any number of input output

661
00:22:39,600 --> 00:22:40,480
devices

662
00:22:40,480 --> 00:22:42,880
using the digital and analog pins on the

663
00:22:42,880 --> 00:22:44,880
circuit playground express

664
00:22:44,880 --> 00:22:47,280
you can even control sensors which use

665
00:22:47,280 --> 00:22:49,520
some relatively advanced protocols

666
00:22:49,520 --> 00:22:52,559
like serial and i2c

667
00:22:52,559 --> 00:22:54,559
one thing to note when using external

668
00:22:54,559 --> 00:22:57,840
sensors is the logic level of the sensor

669
00:22:57,840 --> 00:23:00,799
3.3 volts and 5 volts are two very

670
00:23:00,799 --> 00:23:02,559
common control voltages

671
00:23:02,559 --> 00:23:05,280
that sensors are built to run on the

672
00:23:05,280 --> 00:23:06,080
gpio

673
00:23:06,080 --> 00:23:08,400
pins on the circuit playground express

674
00:23:08,400 --> 00:23:10,480
run on 3.3 volts

675
00:23:10,480 --> 00:23:13,520
like most teensies while the gpio pins

676
00:23:13,520 --> 00:23:15,120
on an arduino uno

677
00:23:15,120 --> 00:23:18,159
or omega run on 5 volts

678
00:23:18,159 --> 00:23:20,559
while most output devices built for 5

679
00:23:20,559 --> 00:23:21,440
volts will work

680
00:23:21,440 --> 00:23:24,480
okay at a 3.3 volt logic level

681
00:23:24,480 --> 00:23:27,679
like our neopixels some input sensors

682
00:23:27,679 --> 00:23:30,159
are built for a 5 volt logic level and

683
00:23:30,159 --> 00:23:30,960
won't work

684
00:23:30,960 --> 00:23:34,320
at 3.3 volts if you run into this

685
00:23:34,320 --> 00:23:35,200
problem

686
00:23:35,200 --> 00:23:37,600
an easy way to address it is to add a

687
00:23:37,600 --> 00:23:40,080
logic level shifter

688
00:23:40,080 --> 00:23:42,559
this is about 3 bucks and is a board

689
00:23:42,559 --> 00:23:44,559
that converts 3.3 volts

690
00:23:44,559 --> 00:23:48,159
logic to 5 volts logic or vice versa

691
00:23:48,159 --> 00:23:52,159
i like to use this one from sparkfun

692
00:23:53,440 --> 00:23:55,600
at this point you might be asking where

693
00:23:55,600 --> 00:23:58,880
do i find sensors and how do i use them

694
00:23:58,880 --> 00:24:01,360
i always recommend starting at adafruit

695
00:24:01,360 --> 00:24:02,720
and sparkfun

696
00:24:02,720 --> 00:24:04,640
both sites are aimed at makers and

697
00:24:04,640 --> 00:24:05,919
artists so they sell

698
00:24:05,919 --> 00:24:07,919
tons of sensors which work with the

699
00:24:07,919 --> 00:24:09,440
arduino ide

700
00:24:09,440 --> 00:24:11,840
and come with libraries or example code

701
00:24:11,840 --> 00:24:14,400
that you can download and use

702
00:24:14,400 --> 00:24:16,720
they also provide plenty of step-by-step

703
00:24:16,720 --> 00:24:17,679
tutorials

704
00:24:17,679 --> 00:24:19,760
for many of their sensors and output

705
00:24:19,760 --> 00:24:21,440
devices

706
00:24:21,440 --> 00:24:22,799
here you'll find everything from

707
00:24:22,799 --> 00:24:24,640
distance and movement sensors

708
00:24:24,640 --> 00:24:27,200
to tiny cameras and lcd screens that you

709
00:24:27,200 --> 00:24:30,080
can drive with your circuit playground

710
00:24:30,080 --> 00:24:32,480
i've also found a ton of useful stuff

711
00:24:32,480 --> 00:24:34,559
especially servos and other motors

712
00:24:34,559 --> 00:24:36,880
lidar scanners and rangefinders and

713
00:24:36,880 --> 00:24:38,480
other things one might want to put in a

714
00:24:38,480 --> 00:24:39,520
mobile robot

715
00:24:39,520 --> 00:24:42,960
on df robot digikey and mouser

716
00:24:42,960 --> 00:24:45,440
are more advanced sources for sensors

717
00:24:45,440 --> 00:24:47,440
mostly because it can be hard to search

718
00:24:47,440 --> 00:24:49,200
through tens of thousands of items they

719
00:24:49,200 --> 00:24:50,320
have in stock

720
00:24:50,320 --> 00:24:52,240
but braving the onslaught can be worth

721
00:24:52,240 --> 00:24:53,919
it in particular

722
00:24:53,919 --> 00:24:55,760
they can be a great place to pick up a

723
00:24:55,760 --> 00:24:57,919
sensor or device if it's out of stock at

724
00:24:57,919 --> 00:25:01,120
adafruit or sparkfun digikey carries a

725
00:25:01,120 --> 00:25:03,039
lot of brands

726
00:25:03,039 --> 00:25:05,039
both are also great places to pick up

727
00:25:05,039 --> 00:25:06,880
general electronic supplies like

728
00:25:06,880 --> 00:25:10,000
wire protoboards hand tools soldering

729
00:25:10,000 --> 00:25:10,640
supplies

730
00:25:10,640 --> 00:25:14,960
thermal tape and more

731
00:25:14,960 --> 00:25:16,640
okay so now you know where to find

732
00:25:16,640 --> 00:25:18,559
sensors but you might not know what

733
00:25:18,559 --> 00:25:19,919
you'd like to get

734
00:25:19,919 --> 00:25:21,760
so here's a quick overview of some

735
00:25:21,760 --> 00:25:23,120
sensors i have known

736
00:25:23,120 --> 00:25:26,840
and loved first of all is the

737
00:25:26,840 --> 00:25:28,720
potentiometer

738
00:25:28,720 --> 00:25:31,200
a rotary potentiometer is essentially a

739
00:25:31,200 --> 00:25:31,760
knob

740
00:25:31,760 --> 00:25:33,840
or at least the inside of a knob the

741
00:25:33,840 --> 00:25:35,840
ones that you buy for use as sensors

742
00:25:35,840 --> 00:25:37,520
typically let you add your own

743
00:25:37,520 --> 00:25:40,400
knob cap to them there are hundreds and

744
00:25:40,400 --> 00:25:42,400
hundreds of different kinds but each

745
00:25:42,400 --> 00:25:44,320
lets you measure voltage across an

746
00:25:44,320 --> 00:25:45,440
analog pin

747
00:25:45,440 --> 00:25:48,159
which then changes as you turn the knob

748
00:25:48,159 --> 00:25:50,000
this can be great for controlling things

749
00:25:50,000 --> 00:25:50,880
like volume

750
00:25:50,880 --> 00:25:52,720
or the intensity of your algorithm's

751
00:25:52,720 --> 00:25:54,000
parameters

752
00:25:54,000 --> 00:25:56,720
if you get a contactless potentiometer

753
00:25:56,720 --> 00:25:58,320
you'll spend way more money

754
00:25:58,320 --> 00:26:00,400
but people who use it will be unable to

755
00:26:00,400 --> 00:26:01,440
turn it too far

756
00:26:01,440 --> 00:26:03,760
and rip the wires out this can be great

757
00:26:03,760 --> 00:26:06,799
for permanent installations

758
00:26:06,799 --> 00:26:08,480
i like arcade buttons for their

759
00:26:08,480 --> 00:26:10,400
familiarity longevity

760
00:26:10,400 --> 00:26:12,960
and ease of installation and wiring

761
00:26:12,960 --> 00:26:14,799
adafruit has some that even come with

762
00:26:14,799 --> 00:26:17,200
controllable leds

763
00:26:17,200 --> 00:26:19,840
buttons are incredibly easy to read the

764
00:26:19,840 --> 00:26:22,000
pin connected to them is either digital

765
00:26:22,000 --> 00:26:23,520
high or digital low

766
00:26:23,520 --> 00:26:24,960
depending on whether the button is

767
00:26:24,960 --> 00:26:27,360
pressed you can experiment with this

768
00:26:27,360 --> 00:26:29,200
using the onboard buttons of the circuit

769
00:26:29,200 --> 00:26:29,919
playground

770
00:26:29,919 --> 00:26:31,679
but if you want a fancier button

771
00:26:31,679 --> 00:26:34,720
consider going off board

772
00:26:34,720 --> 00:26:38,159
a hall effect sensor detects magnetism

773
00:26:38,159 --> 00:26:40,480
along with a small rare earth magnet

774
00:26:40,480 --> 00:26:42,960
glued to the object you wish to detect

775
00:26:42,960 --> 00:26:45,279
it's an astonishingly affordable way to

776
00:26:45,279 --> 00:26:46,880
detect whether things are in their

777
00:26:46,880 --> 00:26:48,400
resting position

778
00:26:48,400 --> 00:26:51,440
or have been moved for instance it's one

779
00:26:51,440 --> 00:26:53,679
of my go-to sensors when i need to check

780
00:26:53,679 --> 00:26:55,520
whether a cabinet or drawer has been

781
00:26:55,520 --> 00:26:56,799
opened or closed

782
00:26:56,799 --> 00:26:59,440
or whether a special object which slots

783
00:26:59,440 --> 00:27:00,080
in place

784
00:27:00,080 --> 00:27:03,120
has been moved the one i like to use

785
00:27:03,120 --> 00:27:06,720
is the diah925

786
00:27:06,720 --> 00:27:10,240
which you can find on digikey

787
00:27:10,240 --> 00:27:13,120
ultrasonic sensors detect distance and

788
00:27:13,120 --> 00:27:15,200
thus can also work as motion

789
00:27:15,200 --> 00:27:18,159
or person detectors i've found that they

790
00:27:18,159 --> 00:27:20,000
often work better than the small

791
00:27:20,000 --> 00:27:22,960
pir sensors you see in a lot of arduino

792
00:27:22,960 --> 00:27:26,000
motion detection applications

793
00:27:26,000 --> 00:27:28,320
this one is cool due to the long length

794
00:27:28,320 --> 00:27:29,520
of its cord

795
00:27:29,520 --> 00:27:31,919
almost eight feet combined with a

796
00:27:31,919 --> 00:27:33,520
waterproof sensor probe

797
00:27:33,520 --> 00:27:36,960
you can hide anywhere check out df robot

798
00:27:36,960 --> 00:27:39,360
for this product

799
00:27:39,360 --> 00:27:41,279
weight sensors can be really useful for

800
00:27:41,279 --> 00:27:43,120
triggering doors to open when someone is

801
00:27:43,120 --> 00:27:44,480
standing on a surface

802
00:27:44,480 --> 00:27:46,399
or effects need to change based on how

803
00:27:46,399 --> 00:27:48,480
many people are in a room

804
00:27:48,480 --> 00:27:50,240
weight sensors are usually referred to

805
00:27:50,240 --> 00:27:51,520
as load cells

806
00:27:51,520 --> 00:27:53,600
and are rated for different weights so

807
00:27:53,600 --> 00:27:55,760
choose them accordingly

808
00:27:55,760 --> 00:27:57,440
pressure sensors usually come in the

809
00:27:57,440 --> 00:27:59,120
form of fsrs

810
00:27:59,120 --> 00:28:02,240
force sensitive resistors they are great

811
00:28:02,240 --> 00:28:04,240
for inserting into objects to see when

812
00:28:04,240 --> 00:28:05,760
they've been pushed

813
00:28:05,760 --> 00:28:07,760
they can be pretty fragile though so

814
00:28:07,760 --> 00:28:09,600
make sure you install them securely and

815
00:28:09,600 --> 00:28:09,840
be

816
00:28:09,840 --> 00:28:11,200
aware that they may need ongoing

817
00:28:11,200 --> 00:28:13,679
maintenance

818
00:28:15,120 --> 00:28:17,279
i want to talk a little about biosensors

819
00:28:17,279 --> 00:28:18,880
because people are always so interested

820
00:28:18,880 --> 00:28:20,559
in using them in their art

821
00:28:20,559 --> 00:28:22,159
i want to encourage you to do that but i

822
00:28:22,159 --> 00:28:24,799
will say that biosensors are very noisy

823
00:28:24,799 --> 00:28:26,080
you will likely have to do a lot of

824
00:28:26,080 --> 00:28:27,919
manipulation of the data in order to

825
00:28:27,919 --> 00:28:29,600
control things using them

826
00:28:29,600 --> 00:28:31,200
unless you're using a sensor that comes

827
00:28:31,200 --> 00:28:32,559
with a library that handles the

828
00:28:32,559 --> 00:28:34,559
smoothing for you

829
00:28:34,559 --> 00:28:36,240
one sensor i really enjoy is the

830
00:28:36,240 --> 00:28:38,559
galvanic skin response sensor

831
00:28:38,559 --> 00:28:40,240
this measures your electrodermal

832
00:28:40,240 --> 00:28:41,919
activity meaning the electrical

833
00:28:41,919 --> 00:28:43,360
conductivity of your skin

834
00:28:43,360 --> 00:28:45,919
sweat and awl to wear this sensor the

835
00:28:45,919 --> 00:28:47,600
subject puts their index and middle

836
00:28:47,600 --> 00:28:48,080
finger

837
00:28:48,080 --> 00:28:49,840
into the fabric loops where there are

838
00:28:49,840 --> 00:28:51,760
two dry electrodes

839
00:28:51,760 --> 00:28:53,520
this sensor is a useful gauge for

840
00:28:53,520 --> 00:28:55,200
stimulation and has been used for

841
00:28:55,200 --> 00:28:56,559
determining excitement

842
00:28:56,559 --> 00:28:59,120
stress pain and more one thing i'd like

843
00:28:59,120 --> 00:29:00,000
to point out

844
00:29:00,000 --> 00:29:01,919
with this sensor is that an excited

845
00:29:01,919 --> 00:29:03,440
state could be read either

846
00:29:03,440 --> 00:29:06,159
as caused by something good or bad the

847
00:29:06,159 --> 00:29:07,919
sensor will read both the same way

848
00:29:07,919 --> 00:29:09,120
depending on the person

849
00:29:09,120 --> 00:29:12,799
so keep that in mind

850
00:29:12,799 --> 00:29:16,000
an ecg or electrocardiogram sensor also

851
00:29:16,000 --> 00:29:17,600
known as a heart rate sensor

852
00:29:17,600 --> 00:29:19,679
works by connecting the sensor to three

853
00:29:19,679 --> 00:29:21,279
different test leads

854
00:29:21,279 --> 00:29:23,120
these leads have electrodes at the end

855
00:29:23,120 --> 00:29:24,399
which connect to the body

856
00:29:24,399 --> 00:29:26,720
in the position shown the electrodes are

857
00:29:26,720 --> 00:29:28,720
usually capped with adhesive pads that

858
00:29:28,720 --> 00:29:30,320
are dipped in a gel which improves the

859
00:29:30,320 --> 00:29:31,760
conductivity

860
00:29:31,760 --> 00:29:35,679
you can find a tutorial for this here

861
00:29:35,919 --> 00:29:38,000
a less invasive and easier to install

862
00:29:38,000 --> 00:29:39,120
heart rate sensor

863
00:29:39,120 --> 00:29:41,159
is a pulse sensor that uses

864
00:29:41,159 --> 00:29:42,960
photoplasmography

865
00:29:42,960 --> 00:29:44,880
these sensors work by shining a small

866
00:29:44,880 --> 00:29:46,159
led at the skin

867
00:29:46,159 --> 00:29:47,760
and then using a light detector to

868
00:29:47,760 --> 00:29:50,159
detect minute changes in blood volume

869
00:29:50,159 --> 00:29:53,840
due to fluctuations in blood flow

870
00:29:53,840 --> 00:29:56,960
to ecg eeg sensors work by connecting

871
00:29:56,960 --> 00:29:59,279
various leads that end in electrodes

872
00:29:59,279 --> 00:30:01,360
to specific locations on the head to

873
00:30:01,360 --> 00:30:03,279
measure brain activity

874
00:30:03,279 --> 00:30:05,360
eeg is measured in different channels of

875
00:30:05,360 --> 00:30:07,440
activity and actually understanding what

876
00:30:07,440 --> 00:30:08,080
these channels

877
00:30:08,080 --> 00:30:10,240
means either in isolation or in

878
00:30:10,240 --> 00:30:11,279
combination

879
00:30:11,279 --> 00:30:13,600
is an extremely challenging task even

880
00:30:13,600 --> 00:30:15,279
for medical experts

881
00:30:15,279 --> 00:30:17,120
if your goal is simply to create artwork

882
00:30:17,120 --> 00:30:18,559
with eeg however

883
00:30:18,559 --> 00:30:19,840
there are a number of companies that

884
00:30:19,840 --> 00:30:22,640
create limited channel eeg headsets

885
00:30:22,640 --> 00:30:24,320
some companies include software

886
00:30:24,320 --> 00:30:26,000
specifically for developers

887
00:30:26,000 --> 00:30:27,760
and some you have to pay extra to gain

888
00:30:27,760 --> 00:30:29,520
development access

889
00:30:29,520 --> 00:30:32,080
eeg sensors are extremely noisy and it

890
00:30:32,080 --> 00:30:34,000
can be difficult to make any purposeful

891
00:30:34,000 --> 00:30:34,880
meaningful work

892
00:30:34,880 --> 00:30:36,880
using them unless you've done a lot of

893
00:30:36,880 --> 00:30:38,320
manipulation of the data

894
00:30:38,320 --> 00:30:40,880
or chosen your channels very carefully

895
00:30:40,880 --> 00:30:42,880
muscle movement will add noise too

896
00:30:42,880 --> 00:30:44,640
so in order to use this sensor your

897
00:30:44,640 --> 00:30:48,399
subject should be still and relaxed

898
00:30:48,399 --> 00:30:50,240
computer vision can be an extremely

899
00:30:50,240 --> 00:30:51,440
useful way to trigger

900
00:30:51,440 --> 00:30:54,480
interactivity using libraries like

901
00:30:54,480 --> 00:30:55,279
opencv

902
00:30:55,279 --> 00:30:57,840
and a camera you can detect movement the

903
00:30:57,840 --> 00:30:59,519
number of people in a room

904
00:30:59,519 --> 00:31:01,679
how many people are smiling what color

905
00:31:01,679 --> 00:31:03,120
shirt everyone's wearing

906
00:31:03,120 --> 00:31:05,279
specific gestures even hand gestures and

907
00:31:05,279 --> 00:31:06,480
so on

908
00:31:06,480 --> 00:31:08,000
computer vision can be used for

909
00:31:08,000 --> 00:31:10,000
proximity even without a depth or

910
00:31:10,000 --> 00:31:11,200
skeletal camera

911
00:31:11,200 --> 00:31:13,440
by examining the distance between faces

912
00:31:13,440 --> 00:31:14,720
the top of blobs

913
00:31:14,720 --> 00:31:16,880
and the ratio of the face to determine

914
00:31:16,880 --> 00:31:18,640
distance from the camera

915
00:31:18,640 --> 00:31:20,480
for an easier way to do this you might

916
00:31:20,480 --> 00:31:22,000
try purchasing a connect

917
00:31:22,000 --> 00:31:24,880
openmv or realsense camera which also

918
00:31:24,880 --> 00:31:26,480
come with software to help you develop

919
00:31:26,480 --> 00:31:29,120
your program

920
00:31:29,279 --> 00:31:30,880
here are two interesting wearable

921
00:31:30,880 --> 00:31:32,799
projects that use computer vision for

922
00:31:32,799 --> 00:31:34,799
facial recognition

923
00:31:34,799 --> 00:31:36,799
the left is by a neuqua prect and is a

924
00:31:36,799 --> 00:31:38,880
wearable featuring a set of tentacles

925
00:31:38,880 --> 00:31:40,720
that wiggle depending on if they detect

926
00:31:40,720 --> 00:31:43,679
a face the wearable on the left oppal

927
00:31:43,679 --> 00:31:45,840
is by benaz farahi and features a

928
00:31:45,840 --> 00:31:47,360
selection of spikes

929
00:31:47,360 --> 00:31:49,200
that like the fur of a cat respond to

930
00:31:49,200 --> 00:31:51,679
facial expression either laying flat or

931
00:31:51,679 --> 00:31:52,320
standing on

932
00:31:52,320 --> 00:31:54,559
end

933
00:31:56,720 --> 00:31:59,760
going beyond simple one-pin sensors i2c

934
00:31:59,760 --> 00:32:01,519
is a two-wire protocol

935
00:32:01,519 --> 00:32:03,360
for communicating with simple sensors

936
00:32:03,360 --> 00:32:04,960
and devices

937
00:32:04,960 --> 00:32:08,240
you need two pins to control i2c usually

938
00:32:08,240 --> 00:32:09,279
referred to as

939
00:32:09,279 --> 00:32:13,360
scl and sda if you look closely at the

940
00:32:13,360 --> 00:32:14,480
pin out map

941
00:32:14,480 --> 00:32:16,480
you'll see that scl on the circuit

942
00:32:16,480 --> 00:32:17,519
playground express

943
00:32:17,519 --> 00:32:21,120
is pin a4 48

944
00:32:21,120 --> 00:32:25,679
and sda is pin a5 47.

945
00:32:25,679 --> 00:32:27,840
knowing this you can control just about

946
00:32:27,840 --> 00:32:29,919
any sensor or device that speaks

947
00:32:29,919 --> 00:32:33,039
i2c if you're wondering if your sensor

948
00:32:33,039 --> 00:32:34,559
speaks i2c

949
00:32:34,559 --> 00:32:38,399
it should say it on its spec sheet

950
00:32:38,480 --> 00:32:40,960
you can learn more about i2c here

951
00:32:40,960 --> 00:32:44,480
including some code examples

952
00:32:45,519 --> 00:32:49,480
one of my favorite i2c devices is the

953
00:32:49,480 --> 00:32:50,799
vl53l0x

954
00:32:50,799 --> 00:32:54,159
time-of-flight distance sensor

955
00:32:54,159 --> 00:32:56,399
this sensor measures distances between

956
00:32:56,399 --> 00:32:57,360
the sensor and

957
00:32:57,360 --> 00:33:00,159
any object or person within 30

958
00:33:00,159 --> 00:33:02,399
millimeters and a thousand millimeters

959
00:33:02,399 --> 00:33:05,679
or about three feet it's perfect for

960
00:33:05,679 --> 00:33:06,720
person detection

961
00:33:06,720 --> 00:33:09,279
directly in front of an object like for

962
00:33:09,279 --> 00:33:11,200
instance triggering a video

963
00:33:11,200 --> 00:33:13,200
or interactivity when someone approaches

964
00:33:13,200 --> 00:33:14,480
your artwork

965
00:33:14,480 --> 00:33:16,159
and it can also be used to measure

966
00:33:16,159 --> 00:33:18,240
distance if you need to measure how far

967
00:33:18,240 --> 00:33:19,039
away things

968
00:33:19,039 --> 00:33:22,080
are in a linear fashion

969
00:33:22,080 --> 00:33:24,720
however its field of detection is very

970
00:33:24,720 --> 00:33:25,360
narrow

971
00:33:25,360 --> 00:33:27,679
so it only measures things directly in

972
00:33:27,679 --> 00:33:28,640
front of it

973
00:33:28,640 --> 00:33:30,640
if you need to monitor a small area

974
00:33:30,640 --> 00:33:31,760
rather than a narrow

975
00:33:31,760 --> 00:33:34,240
single location the ultrasonic sensors

976
00:33:34,240 --> 00:33:37,440
might be a better choice

977
00:33:37,600 --> 00:33:39,679
what's your favorite sensor let us know

978
00:33:39,679 --> 00:33:42,480
in the discord or in our office hours

979
00:33:42,480 --> 00:33:44,399
most sensors will come with hookup

980
00:33:44,399 --> 00:33:47,200
guides written by the manufacturer

981
00:33:47,200 --> 00:33:49,279
if you don't have one you can look up

982
00:33:49,279 --> 00:33:50,480
the name of your sensor

983
00:33:50,480 --> 00:33:52,720
plus hookup guide and you'll usually

984
00:33:52,720 --> 00:33:53,760
find quite a few

985
00:33:53,760 --> 00:33:57,200
options once you have that open

986
00:33:57,200 --> 00:33:58,880
it should show you how to hook up your

987
00:33:58,880 --> 00:34:01,679
sensor to your controller

988
00:34:01,679 --> 00:34:04,240
match this with your wires you can

989
00:34:04,240 --> 00:34:06,399
either use alligator clips or alligator

990
00:34:06,399 --> 00:34:07,360
clips with male

991
00:34:07,360 --> 00:34:11,280
or female ends to jumper cables

992
00:34:11,280 --> 00:34:12,560
here i've hooked up the circuit

993
00:34:12,560 --> 00:34:14,719
playground to v out

994
00:34:14,719 --> 00:34:19,440
ground and sda scl as shown

995
00:34:19,440 --> 00:34:21,760
many sensors also come with libraries

996
00:34:21,760 --> 00:34:23,359
that'll give you code examples that are

997
00:34:23,359 --> 00:34:25,359
ready to use

998
00:34:25,359 --> 00:34:27,280
see if your library is already in

999
00:34:27,280 --> 00:34:29,679
arduino library options you can go to

1000
00:34:29,679 --> 00:34:31,679
tools

1001
00:34:31,679 --> 00:34:34,239
manage libraries and then search for

1002
00:34:34,239 --> 00:34:36,959
your sensor

1003
00:34:38,399 --> 00:34:40,079
here i see that the first option that

1004
00:34:40,079 --> 00:34:43,599
comes up is the adafruit vl6180x

1005
00:34:43,599 --> 00:34:46,399
sensor by adafruit since i did get this

1006
00:34:46,399 --> 00:34:47,839
sensor from adafruit i'm going to

1007
00:34:47,839 --> 00:34:49,040
install that one

1008
00:34:49,040 --> 00:34:50,719
but you can also see that there's a few

1009
00:34:50,719 --> 00:34:52,159
other options

1010
00:34:52,159 --> 00:34:53,918
if you don't get one library to work

1011
00:34:53,918 --> 00:34:56,320
it's worth trying the other options

1012
00:34:56,320 --> 00:34:58,160
i'm going to select the most current

1013
00:34:58,160 --> 00:34:59,680
version to install

1014
00:34:59,680 --> 00:35:02,720
and then click install once it's done i

1015
00:35:02,720 --> 00:35:03,839
should be able to use

1016
00:35:03,839 --> 00:35:06,000
the example code if you can't find your

1017
00:35:06,000 --> 00:35:08,560
sensor in the arduino libraries

1018
00:35:08,560 --> 00:35:10,400
you might have to manually download and

1019
00:35:10,400 --> 00:35:12,560
install it a good place to find

1020
00:35:12,560 --> 00:35:14,800
libraries is of course on github

1021
00:35:14,800 --> 00:35:16,400
you can do a quick search for your

1022
00:35:16,400 --> 00:35:18,240
sensor

1023
00:35:18,240 --> 00:35:20,000
then what you want to do is you want to

1024
00:35:20,000 --> 00:35:22,640
grab all of the code as a zip file

1025
00:35:22,640 --> 00:35:24,720
so you'll go to code and then download

1026
00:35:24,720 --> 00:35:26,079
zip

1027
00:35:26,079 --> 00:35:28,000
to install your new library you can go

1028
00:35:28,000 --> 00:35:29,520
to sketch

1029
00:35:29,520 --> 00:35:33,920
include library add a zip library

1030
00:35:33,920 --> 00:35:35,599
then you want to navigate to where your

1031
00:35:35,599 --> 00:35:38,320
library is

1032
00:35:38,400 --> 00:35:40,960
mine's on my desktop this will add your

1033
00:35:40,960 --> 00:35:42,720
library to your sketch

1034
00:35:42,720 --> 00:35:44,640
installed the library we should be able

1035
00:35:44,640 --> 00:35:46,960
to open it in example sketches

1036
00:35:46,960 --> 00:35:50,160
in arduino go to examples and then go

1037
00:35:50,160 --> 00:35:51,680
down to where you see the name of the

1038
00:35:51,680 --> 00:35:53,440
sensor

1039
00:35:53,440 --> 00:35:56,079
here we have two examples one which is

1040
00:35:56,079 --> 00:35:58,000
the normal example and one which seems

1041
00:35:58,000 --> 00:35:59,599
to be used with an oled

1042
00:35:59,599 --> 00:36:01,599
display since we don't have an oled

1043
00:36:01,599 --> 00:36:05,040
display let's use the first example

1044
00:36:05,040 --> 00:36:06,560
this should give us some code that's

1045
00:36:06,560 --> 00:36:08,640
ready to use we should be able to upload

1046
00:36:08,640 --> 00:36:10,880
it and see the values for the sensors

1047
00:36:10,880 --> 00:36:12,960
however sometimes library sketches give

1048
00:36:12,960 --> 00:36:15,280
us a lot of extra information

1049
00:36:15,280 --> 00:36:17,119
so it's worth going through and weeding

1050
00:36:17,119 --> 00:36:19,839
out things you don't need

1051
00:36:19,839 --> 00:36:22,960
in this sketch there's a lot of if else

1052
00:36:22,960 --> 00:36:23,520
ifs

1053
00:36:23,520 --> 00:36:26,000
and these are related to the sensor not

1054
00:36:26,000 --> 00:36:27,520
working

1055
00:36:27,520 --> 00:36:30,240
so this controls an error message if the

1056
00:36:30,240 --> 00:36:30,960
sensor

1057
00:36:30,960 --> 00:36:34,000
is having trouble in practice

1058
00:36:34,000 --> 00:36:35,920
once you have your sensor working you

1059
00:36:35,920 --> 00:36:37,280
can take all this out

1060
00:36:37,280 --> 00:36:39,359
unless you want to keep it in but it's

1061
00:36:39,359 --> 00:36:41,760
not required

1062
00:36:41,760 --> 00:36:44,079
the real meat of the sketch is in our

1063
00:36:44,079 --> 00:36:46,400
loop function

1064
00:36:46,400 --> 00:36:49,280
because the vl-6180x also has an

1065
00:36:49,280 --> 00:36:50,000
on-board

1066
00:36:50,000 --> 00:36:53,040
light sensor this sketch also prints

1067
00:36:53,040 --> 00:36:54,320
that value out

1068
00:36:54,320 --> 00:36:55,920
this is similar to the light sensor

1069
00:36:55,920 --> 00:36:57,440
that's already on board the circuit

1070
00:36:57,440 --> 00:36:59,119
playground express

1071
00:36:59,119 --> 00:37:01,680
so here we're setting the value lux to

1072
00:37:01,680 --> 00:37:03,280
the reading of that sensor

1073
00:37:03,280 --> 00:37:05,520
and then we're printing it out again if

1074
00:37:05,520 --> 00:37:07,359
you only want to use the proximity for

1075
00:37:07,359 --> 00:37:08,640
the sensor

1076
00:37:08,640 --> 00:37:11,839
you can take that out here we see

1077
00:37:11,839 --> 00:37:14,000
that we're declaring our range to be the

1078
00:37:14,000 --> 00:37:15,359
reading of the range

1079
00:37:15,359 --> 00:37:20,160
read range is a function of this library

1080
00:37:20,400 --> 00:37:22,320
then we're also setting the status to be

1081
00:37:22,320 --> 00:37:24,560
the read range status

1082
00:37:24,560 --> 00:37:26,240
this is what will give us our error

1083
00:37:26,240 --> 00:37:28,160
message again

1084
00:37:28,160 --> 00:37:30,400
you don't need this if you're sure that

1085
00:37:30,400 --> 00:37:32,480
your sensor is working

1086
00:37:32,480 --> 00:37:34,720
so if i were going to trim this down to

1087
00:37:34,720 --> 00:37:36,720
just give me the proximity

1088
00:37:36,720 --> 00:37:39,760
i would take all of this out i might

1089
00:37:39,760 --> 00:37:41,839
also take out the delay

1090
00:37:41,839 --> 00:37:44,880
if i wanted to use a timer

1091
00:37:44,880 --> 00:37:48,720
i'm also going to take out the light

1092
00:37:48,839 --> 00:37:50,000
reading

1093
00:37:50,000 --> 00:37:52,880
and now we just have a range but we

1094
00:37:52,880 --> 00:37:55,760
probably want to print out what that is

1095
00:37:55,760 --> 00:37:57,440
so let's do a serial print line

1096
00:37:57,440 --> 00:37:59,920
statement

1097
00:38:03,599 --> 00:38:06,480
the code in setup we can leave as is all

1098
00:38:06,480 --> 00:38:08,400
it's doing is saying if it can find the

1099
00:38:08,400 --> 00:38:09,920
sensor or not

1100
00:38:09,920 --> 00:38:11,839
we can take it out if we want to but

1101
00:38:11,839 --> 00:38:14,480
let's just leave it in in this case

1102
00:38:14,480 --> 00:38:16,599
you'll also see as our parameter for

1103
00:38:16,599 --> 00:38:18,720
serial.begin that we're beginning at a

1104
00:38:18,720 --> 00:38:20,320
boat rate of a hundred and fifteen

1105
00:38:20,320 --> 00:38:22,079
thousand two hundred

1106
00:38:22,079 --> 00:38:23,599
boat rates are different for different

1107
00:38:23,599 --> 00:38:25,520
sensors some are faster and some are

1108
00:38:25,520 --> 00:38:26,320
slower

1109
00:38:26,320 --> 00:38:28,079
you just wanna make sure that it matches

1110
00:38:28,079 --> 00:38:30,160
whatever you're using in serial monitor

1111
00:38:30,160 --> 00:38:31,440
so that you're reading the sensor

1112
00:38:31,440 --> 00:38:34,320
correctly in this demo from adafruit you

1113
00:38:34,320 --> 00:38:36,560
can see the sensor working with the oled

1114
00:38:36,560 --> 00:38:39,200
display this sensor is one of my

1115
00:38:39,200 --> 00:38:41,599
favorites for triggering proximity at a

1116
00:38:41,599 --> 00:38:42,880
close range

1117
00:38:42,880 --> 00:38:44,880
it also works with a piece of small

1118
00:38:44,880 --> 00:38:46,800
acrylic in front of it which is unusual

1119
00:38:46,800 --> 00:38:49,280
for time of flight sensors

1120
00:38:49,280 --> 00:38:51,119
one of my favorite programs for

1121
00:38:51,119 --> 00:38:52,960
triggering interactivity especially

1122
00:38:52,960 --> 00:38:53,760
video

1123
00:38:53,760 --> 00:38:55,680
is touch designer there's a

1124
00:38:55,680 --> 00:38:57,359
non-commercial free version you can

1125
00:38:57,359 --> 00:38:59,440
download from the derivative website

1126
00:38:59,440 --> 00:39:01,359
that will allow you to try it out and

1127
00:39:01,359 --> 00:39:03,200
there are lots of wonderful tutorials

1128
00:39:03,200 --> 00:39:04,320
online

1129
00:39:04,320 --> 00:39:06,240
touch designer works really well for

1130
00:39:06,240 --> 00:39:08,160
processing video feedback and doing

1131
00:39:08,160 --> 00:39:10,160
simple projection mapping using sensor

1132
00:39:10,160 --> 00:39:11,119
data

1133
00:39:11,119 --> 00:39:13,200
under the hood touch designer is written

1134
00:39:13,200 --> 00:39:14,240
in python

1135
00:39:14,240 --> 00:39:15,760
and you can actually write python

1136
00:39:15,760 --> 00:39:17,760
scripts within touch designer

1137
00:39:17,760 --> 00:39:19,599
but you also don't need to know python

1138
00:39:19,599 --> 00:39:21,359
in order to use it as it has a

1139
00:39:21,359 --> 00:39:24,560
node-based interface

1140
00:39:25,839 --> 00:39:28,240
for audio processing i really recommend

1141
00:39:28,240 --> 00:39:29,680
max msp

1142
00:39:29,680 --> 00:39:32,960
maximusp is not free but cycling74

1143
00:39:32,960 --> 00:39:35,280
the company which produces it offers a

1144
00:39:35,280 --> 00:39:37,040
free trial as well as discounted

1145
00:39:37,040 --> 00:39:39,040
licenses for students

1146
00:39:39,040 --> 00:39:41,599
the back end of maximusp is c but again

1147
00:39:41,599 --> 00:39:43,359
you don't need to know how to use it

1148
00:39:43,359 --> 00:39:46,640
in order to use the program max msp also

1149
00:39:46,640 --> 00:39:49,040
has a video processing component jitter

1150
00:39:49,040 --> 00:39:51,200
and has a legacy community of followers

1151
00:39:51,200 --> 00:39:53,919
and developers

1152
00:39:55,440 --> 00:39:57,520
processing is an excellent option if

1153
00:39:57,520 --> 00:39:59,280
you're interested in producing simple

1154
00:39:59,280 --> 00:40:00,000
guise

1155
00:40:00,000 --> 00:40:02,800
or geometry based on sensor input

1156
00:40:02,800 --> 00:40:04,800
processing is written in javascript

1157
00:40:04,800 --> 00:40:06,640
which you do have to know at least a

1158
00:40:06,640 --> 00:40:08,560
little in order to use

1159
00:40:08,560 --> 00:40:10,400
that said processing has some of the

1160
00:40:10,400 --> 00:40:12,480
best getting started tutorials i've ever

1161
00:40:12,480 --> 00:40:13,200
seen

1162
00:40:13,200 --> 00:40:14,800
and because it was designed to be used

1163
00:40:14,800 --> 00:40:17,040
for creative coding and its web focus

1164
00:40:17,040 --> 00:40:18,720
sister p5.js

1165
00:40:18,720 --> 00:40:20,960
is also designed to be used for creative

1166
00:40:20,960 --> 00:40:22,000
purposes

1167
00:40:22,000 --> 00:40:24,240
they're both extremely well documented

1168
00:40:24,240 --> 00:40:27,200
with creative programming tutorials

1169
00:40:27,200 --> 00:40:29,760
the simplest and easiest to set up form

1170
00:40:29,760 --> 00:40:30,800
of communication

1171
00:40:30,800 --> 00:40:33,119
is serial communication that's what

1172
00:40:33,119 --> 00:40:35,119
we've been using this entire class to

1173
00:40:35,119 --> 00:40:36,800
communicate between your computer and

1174
00:40:36,800 --> 00:40:38,319
the board

1175
00:40:38,319 --> 00:40:40,880
serial communication uses the serial bus

1176
00:40:40,880 --> 00:40:43,520
to communicate one bit at a time

1177
00:40:43,520 --> 00:40:45,119
you don't need anything aside from the

1178
00:40:45,119 --> 00:40:47,119
micro usb cable you've already been

1179
00:40:47,119 --> 00:40:48,560
using

1180
00:40:48,560 --> 00:40:50,160
all you have to do is make sure you

1181
00:40:50,160 --> 00:40:51,680
select a serial object

1182
00:40:51,680 --> 00:40:53,920
in the corresponding program and have it

1183
00:40:53,920 --> 00:40:55,680
connected to the correct port for your

1184
00:40:55,680 --> 00:40:57,440
controller

1185
00:40:57,440 --> 00:40:59,599
as an example of this touch designer has

1186
00:40:59,599 --> 00:41:00,640
a serial dat

1187
00:41:00,640 --> 00:41:03,280
and a serial chop which can easily be

1188
00:41:03,280 --> 00:41:05,680
set up to grab data from your controller

1189
00:41:05,680 --> 00:41:07,760
simply by aiming the port parameter at

1190
00:41:07,760 --> 00:41:10,640
the port for your controller

1191
00:41:10,640 --> 00:41:13,280
maximusp also has a serial object that's

1192
00:41:13,280 --> 00:41:15,440
similarly quite easy to configure as

1193
00:41:15,440 --> 00:41:17,119
shown

1194
00:41:17,119 --> 00:41:18,880
but what if you don't want to have wires

1195
00:41:18,880 --> 00:41:20,480
between your microcontroller and the

1196
00:41:20,480 --> 00:41:21,359
computer

1197
00:41:21,359 --> 00:41:24,880
what can you do one option is bluetooth

1198
00:41:24,880 --> 00:41:26,560
bluetooth is a wireless form of

1199
00:41:26,560 --> 00:41:28,400
communication that you might have used

1200
00:41:28,400 --> 00:41:30,079
on your cell phone headphones or another

1201
00:41:30,079 --> 00:41:31,200
device

1202
00:41:31,200 --> 00:41:33,119
well i tend to avoid bluetooth because

1203
00:41:33,119 --> 00:41:35,040
it can be fussy and connectivity can

1204
00:41:35,040 --> 00:41:35,839
waver

1205
00:41:35,839 --> 00:41:38,720
it's an okay choice for static objects

1206
00:41:38,720 --> 00:41:40,560
adafruit actually makes a version of

1207
00:41:40,560 --> 00:41:41,920
circuit playground express

1208
00:41:41,920 --> 00:41:43,599
that is specifically designed to work

1209
00:41:43,599 --> 00:41:45,119
with bluetooth

1210
00:41:45,119 --> 00:41:46,720
bluetooth will allow you to communicate

1211
00:41:46,720 --> 00:41:48,400
with any device that has bluetooth

1212
00:41:48,400 --> 00:41:49,359
connectivity

1213
00:41:49,359 --> 00:41:51,520
such as mobile phones other controllers

1214
00:41:51,520 --> 00:41:53,200
that also have bluetooth enabled

1215
00:41:53,200 --> 00:41:57,119
and computers but what about wifi

1216
00:41:57,119 --> 00:41:58,800
well in order to connect your circuit

1217
00:41:58,800 --> 00:42:00,720
playground express to wi-fi you'll need

1218
00:42:00,720 --> 00:42:03,359
either an esp8266

1219
00:42:03,359 --> 00:42:06,240
or an esp32 breakout to use as your

1220
00:42:06,240 --> 00:42:07,680
wireless modem

1221
00:42:07,680 --> 00:42:09,599
once connected this will enable you to

1222
00:42:09,599 --> 00:42:11,119
do all sorts of iot

1223
00:42:11,119 --> 00:42:13,119
or internet of things projects and

1224
00:42:13,119 --> 00:42:15,040
connect to other wireless devices like

1225
00:42:15,040 --> 00:42:16,400
your phone and computer

1226
00:42:16,400 --> 00:42:18,160
want to change your fast led lighting

1227
00:42:18,160 --> 00:42:19,680
pattern based on how many people are

1228
00:42:19,680 --> 00:42:21,200
tweeting about comets

1229
00:42:21,200 --> 00:42:23,680
well now you can adafruit has a guide to

1230
00:42:23,680 --> 00:42:26,160
using the esp32 if you'd like to give it

1231
00:42:26,160 --> 00:42:27,040
a try

1232
00:42:27,040 --> 00:42:28,960
for the same reason i avoid bluetooth in

1233
00:42:28,960 --> 00:42:30,960
permanent installations i also avoid

1234
00:42:30,960 --> 00:42:32,160
using wi-fi

1235
00:42:32,160 --> 00:42:34,160
while less physically messy than a wired

1236
00:42:34,160 --> 00:42:36,240
connection wi-fi can be a pain to

1237
00:42:36,240 --> 00:42:37,200
maintain

1238
00:42:37,200 --> 00:42:38,800
if it drops out you'll need a way of

1239
00:42:38,800 --> 00:42:40,800
resetting it and you'll need to monitor

1240
00:42:40,800 --> 00:42:42,839
it to make sure it always stays

1241
00:42:42,839 --> 00:42:45,440
connected so what's a good reliable

1242
00:42:45,440 --> 00:42:46,319
connection

1243
00:42:46,319 --> 00:42:49,040
for a permanent installation say one

1244
00:42:49,040 --> 00:42:50,800
that you want to have running for years

1245
00:42:50,800 --> 00:42:52,160
and years

1246
00:42:52,160 --> 00:42:55,680
well i'd recommend a wired connection

1247
00:42:55,680 --> 00:42:57,440
unfortunately to get this to work you'll

1248
00:42:57,440 --> 00:42:58,880
need an ethernet shield

1249
00:42:58,880 --> 00:43:03,440
like the wiznet w5500 for arduino uno

1250
00:43:03,440 --> 00:43:07,440
or the wiz812 ethernet module for teensy

1251
00:43:07,440 --> 00:43:09,200
unfortunately i haven't been able to

1252
00:43:09,200 --> 00:43:11,440
locate a compatible ethernet shield for

1253
00:43:11,440 --> 00:43:13,359
the circuit playground express

1254
00:43:13,359 --> 00:43:15,200
but hopefully in the future someone will

1255
00:43:15,200 --> 00:43:17,200
make that happen

1256
00:43:17,200 --> 00:43:19,040
i'll try to keep you all updated on the

1257
00:43:19,040 --> 00:43:21,200
hackaday page

1258
00:43:21,200 --> 00:43:22,960
once you have your controller set up to

1259
00:43:22,960 --> 00:43:24,720
use ethernet with a shield

1260
00:43:24,720 --> 00:43:26,000
there are a few options for

1261
00:43:26,000 --> 00:43:27,839
communication that have been tested and

1262
00:43:27,839 --> 00:43:28,880
proven

1263
00:43:28,880 --> 00:43:30,800
which one you select will depend a bit

1264
00:43:30,800 --> 00:43:32,400
on your preference and a bit on the

1265
00:43:32,400 --> 00:43:34,240
needs of the project

1266
00:43:34,240 --> 00:43:35,760
my favorite and the one i've used the

1267
00:43:35,760 --> 00:43:38,319
most during my career is osc

1268
00:43:38,319 --> 00:43:40,640
osc stands for open sound control and

1269
00:43:40,640 --> 00:43:42,240
despite the name it's not just for

1270
00:43:42,240 --> 00:43:43,680
controlling sounds

1271
00:43:43,680 --> 00:43:46,160
it's a great way to control an entire

1272
00:43:46,160 --> 00:43:46,720
show

1273
00:43:46,720 --> 00:43:49,920
or speak between devices to use osc

1274
00:43:49,920 --> 00:43:52,079
you'll usually install an osc library

1275
00:43:52,079 --> 00:43:53,520
which will give you instructions on how

1276
00:43:53,520 --> 00:43:56,000
to format your osc messages

1277
00:43:56,000 --> 00:43:57,920
these messages allow you to communicate

1278
00:43:57,920 --> 00:43:59,440
between programs

1279
00:43:59,440 --> 00:44:01,680
messages could be the equivalent of hey

1280
00:44:01,680 --> 00:44:02,640
touch designer

1281
00:44:02,640 --> 00:44:04,160
my light sensor is reading that it's

1282
00:44:04,160 --> 00:44:06,079
bright turn all the lights in the venue

1283
00:44:06,079 --> 00:44:06,960
to blue

1284
00:44:06,960 --> 00:44:09,359
or hey maximus p someone touched my

1285
00:44:09,359 --> 00:44:10,880
capacitive touch sensor

1286
00:44:10,880 --> 00:44:12,720
triggered the amazing 8 channel spatial

1287
00:44:12,720 --> 00:44:14,400
audio experience

1288
00:44:14,400 --> 00:44:16,240
of course messages aren't formatted like

1289
00:44:16,240 --> 00:44:18,319
sentences but essentially this is the

1290
00:44:18,319 --> 00:44:19,520
sort of information you'll be

1291
00:44:19,520 --> 00:44:22,800
communicating between programs

1292
00:44:22,800 --> 00:44:24,480
another very reliable form of

1293
00:44:24,480 --> 00:44:26,160
communication is tcp

1294
00:44:26,160 --> 00:44:29,119
ip which stand for transmission control

1295
00:44:29,119 --> 00:44:30,800
protocol and internet protocol

1296
00:44:30,800 --> 00:44:32,240
respectively

1297
00:44:32,240 --> 00:44:34,319
you probably recognize that last one and

1298
00:44:34,319 --> 00:44:36,319
can figure out what this does

1299
00:44:36,319 --> 00:44:38,800
the first part tcp is responsible for

1300
00:44:38,800 --> 00:44:40,800
chopping up messages into packets of

1301
00:44:40,800 --> 00:44:42,160
information

1302
00:44:42,160 --> 00:44:44,400
then ip is used to address and route

1303
00:44:44,400 --> 00:44:46,000
each package

1304
00:44:46,000 --> 00:44:48,960
udp stands for user data protocol and

1305
00:44:48,960 --> 00:44:51,119
it's similar but it doesn't establish a

1306
00:44:51,119 --> 00:44:52,880
connection with the host prior to

1307
00:44:52,880 --> 00:44:54,079
sending the data

1308
00:44:54,079 --> 00:44:57,040
it just sends it tcp ip on the other

1309
00:44:57,040 --> 00:44:57,440
hand

1310
00:44:57,440 --> 00:44:59,680
really care if the message is received

1311
00:44:59,680 --> 00:45:02,160
so they establish that connection

1312
00:45:02,160 --> 00:45:03,760
you could compare this to a message you

1313
00:45:03,760 --> 00:45:05,520
send with the post office that has a

1314
00:45:05,520 --> 00:45:07,839
receipt confirmation service

1315
00:45:07,839 --> 00:45:09,680
udp would be the one without this

1316
00:45:09,680 --> 00:45:12,000
service if no one gets the message

1317
00:45:12,000 --> 00:45:14,640
it just disappears and you never know so

1318
00:45:14,640 --> 00:45:17,040
why would you ever want to use udp

1319
00:45:17,040 --> 00:45:20,160
well because it's fast i once had an

1320
00:45:20,160 --> 00:45:21,680
installation where i had to trigger

1321
00:45:21,680 --> 00:45:23,599
a ton of lights based on sensor data

1322
00:45:23,599 --> 00:45:25,680
from a couple very fast sensors

1323
00:45:25,680 --> 00:45:27,680
and i found that osc just wasn't keeping

1324
00:45:27,680 --> 00:45:30,319
up i ended up having to use udp

1325
00:45:30,319 --> 00:45:32,240
which was much faster and because i

1326
00:45:32,240 --> 00:45:34,000
didn't really need that receipt of

1327
00:45:34,000 --> 00:45:35,119
confirmation

1328
00:45:35,119 --> 00:45:38,079
it was a good choice

1329
00:45:38,480 --> 00:45:40,480
a few students have asked me now about

1330
00:45:40,480 --> 00:45:42,000
where i get my inspiration

1331
00:45:42,000 --> 00:45:44,960
and how i organize my ideas usually what

1332
00:45:44,960 --> 00:45:45,520
i'll do

1333
00:45:45,520 --> 00:45:48,000
is i'll start with a mood board and i

1334
00:45:48,000 --> 00:45:50,000
tend to use pinterest for this

1335
00:45:50,000 --> 00:45:51,839
and what i'll do is i'll either collect

1336
00:45:51,839 --> 00:45:53,920
images that i find elsewhere

1337
00:45:53,920 --> 00:45:56,160
or i'll specifically search for images

1338
00:45:56,160 --> 00:45:57,040
that are within

1339
00:45:57,040 --> 00:45:59,520
the database and find things like

1340
00:45:59,520 --> 00:46:00,960
similar textures or

1341
00:46:00,960 --> 00:46:03,520
colors or materials that i'm interested

1342
00:46:03,520 --> 00:46:04,720
in working with

1343
00:46:04,720 --> 00:46:06,640
and these can range from biological

1344
00:46:06,640 --> 00:46:08,240
creatures to

1345
00:46:08,240 --> 00:46:10,560
materials that are 3d printed to

1346
00:46:10,560 --> 00:46:12,319
sculptures

1347
00:46:12,319 --> 00:46:14,400
it's also a nice way of exploring what's

1348
00:46:14,400 --> 00:46:15,359
already been done

1349
00:46:15,359 --> 00:46:18,480
and how i might do things differently

1350
00:46:18,480 --> 00:46:20,720
based on aspects of these images i might

1351
00:46:20,720 --> 00:46:22,880
develop my own sketches or concept

1352
00:46:22,880 --> 00:46:27,520
art i'm also inspired by new materials

1353
00:46:27,520 --> 00:46:28,000
including

1354
00:46:28,000 --> 00:46:30,079
sensors actuators and computer vision

1355
00:46:30,079 --> 00:46:31,440
technologies

1356
00:46:31,440 --> 00:46:33,280
in this video you can see artist and

1357
00:46:33,280 --> 00:46:35,119
researcher ji chi

1358
00:46:35,119 --> 00:46:37,599
manipulating origami using a material

1359
00:46:37,599 --> 00:46:38,319
called shape

1360
00:46:38,319 --> 00:46:40,960
memory alloy shape memory alloy is

1361
00:46:40,960 --> 00:46:42,640
material which you can train to be a

1362
00:46:42,640 --> 00:46:43,760
specific shape

1363
00:46:43,760 --> 00:46:45,680
you can then manipulate it and when you

1364
00:46:45,680 --> 00:46:48,319
apply heat it will return to that shape

1365
00:46:48,319 --> 00:46:50,480
here we see it used as an actuator for

1366
00:46:50,480 --> 00:46:52,640
controlling the origami

1367
00:46:52,640 --> 00:46:54,240
often before i make a larger

1368
00:46:54,240 --> 00:46:56,160
installation i'll do a smaller version

1369
00:46:56,160 --> 00:46:56,880
like this

1370
00:46:56,880 --> 00:46:58,960
just to do a test of motion and to see

1371
00:46:58,960 --> 00:47:02,480
how the electronics are working

1372
00:47:02,880 --> 00:47:04,880
i might do a stress test to see how

1373
00:47:04,880 --> 00:47:06,079
durable they are

1374
00:47:06,079 --> 00:47:08,400
or have different people try them out to

1375
00:47:08,400 --> 00:47:10,000
see what the user experience might be

1376
00:47:10,000 --> 00:47:11,760
like for different people

1377
00:47:11,760 --> 00:47:14,079
inert materials like fabrics and 3d

1378
00:47:14,079 --> 00:47:16,079
printing resins and filaments are also

1379
00:47:16,079 --> 00:47:17,680
inspiring for me

1380
00:47:17,680 --> 00:47:19,760
here's an elastic resin from formlabs

1381
00:47:19,760 --> 00:47:21,599
which i can imagine all kinds of uses

1382
00:47:21,599 --> 00:47:22,160
for

1383
00:47:22,160 --> 00:47:25,920
from led diffusion to flexible wearables

1384
00:47:25,920 --> 00:47:28,079
i'll usually begin with a small sample

1385
00:47:28,079 --> 00:47:30,160
of whatever material i'm using like this

1386
00:47:30,160 --> 00:47:30,720
one

1387
00:47:30,720 --> 00:47:32,400
and just see what i can do with it in

1388
00:47:32,400 --> 00:47:34,480
order to get ideas about the limitations

1389
00:47:34,480 --> 00:47:36,960
and possibilities for that material

1390
00:47:36,960 --> 00:47:38,640
i might try using different lighting

1391
00:47:38,640 --> 00:47:40,720
effects also to see how it might be used

1392
00:47:40,720 --> 00:47:42,000
as a diffuser

1393
00:47:42,000 --> 00:47:44,000
to learn new techniques i tend to

1394
00:47:44,000 --> 00:47:46,200
explore blogs and forums

1395
00:47:46,200 --> 00:47:48,640
hackaday.io has tons of projects that

1396
00:47:48,640 --> 00:47:50,640
often include code samples and lists of

1397
00:47:50,640 --> 00:47:51,359
materials

1398
00:47:51,359 --> 00:47:53,760
so you can try projects out yourself you

1399
00:47:53,760 --> 00:47:55,760
can find projects by what's most recent

1400
00:47:55,760 --> 00:47:56,960
or what's popular

1401
00:47:56,960 --> 00:47:58,720
or if you have a particular genre of

1402
00:47:58,720 --> 00:48:00,480
project in mind you can check out the

1403
00:48:00,480 --> 00:48:02,160
main project page where you'll find

1404
00:48:02,160 --> 00:48:04,000
everything from brain hacking to hacker

1405
00:48:04,000 --> 00:48:04,839
art

1406
00:48:04,839 --> 00:48:08,079
hackster.i is a maker dedicated site

1407
00:48:08,079 --> 00:48:10,319
loaded with videos workshops interviews

1408
00:48:10,319 --> 00:48:11,200
with makers

1409
00:48:11,200 --> 00:48:13,359
and project tutorials as well as some

1410
00:48:13,359 --> 00:48:15,359
excellent articles on new projects like

1411
00:48:15,359 --> 00:48:16,960
this adorable tiny robot

1412
00:48:16,960 --> 00:48:21,839
by maker rang zhang li

1413
00:48:23,119 --> 00:48:25,280
similarly the arduino project hub is

1414
00:48:25,280 --> 00:48:26,960
loaded with example projects and

1415
00:48:26,960 --> 00:48:29,280
tutorials that range from easy to

1416
00:48:29,280 --> 00:48:31,280
wow i certainly cannot make that but i'm

1417
00:48:31,280 --> 00:48:32,720
very glad you did

1418
00:48:32,720 --> 00:48:35,680
the makers of teensy pjrc also host a

1419
00:48:35,680 --> 00:48:37,280
blog that keeps the community in the

1420
00:48:37,280 --> 00:48:39,680
know of new teensy-powered projects

1421
00:48:39,680 --> 00:48:41,599
i recommend checking this out even if

1422
00:48:41,599 --> 00:48:44,160
you haven't used the teensy

1423
00:48:44,160 --> 00:48:46,319
the instructables website isn't limited

1424
00:48:46,319 --> 00:48:47,520
to electronics or

1425
00:48:47,520 --> 00:48:49,920
engineering projects but it's an amazing

1426
00:48:49,920 --> 00:48:52,079
resource for tutorials of all kinds

1427
00:48:52,079 --> 00:48:54,559
from how to etch pcbs with pickle juice

1428
00:48:54,559 --> 00:48:56,319
to how to make robotic fish for your

1429
00:48:56,319 --> 00:48:58,559
futuristic koi pond

1430
00:48:58,559 --> 00:49:00,400
when i'm designing a project i'll tend

1431
00:49:00,400 --> 00:49:01,760
to come back to the same set of

1432
00:49:01,760 --> 00:49:04,079
questions which will help me along

1433
00:49:04,079 --> 00:49:05,760
these questions might vary a little on

1434
00:49:05,760 --> 00:49:07,359
the project and its intent

1435
00:49:07,359 --> 00:49:09,119
especially if it's an artwork or a

1436
00:49:09,119 --> 00:49:11,359
product but below is a set of questions

1437
00:49:11,359 --> 00:49:12,960
that seems to come up for me again and

1438
00:49:12,960 --> 00:49:14,400
again

1439
00:49:14,400 --> 00:49:16,640
the first is what emotions do i wish to

1440
00:49:16,640 --> 00:49:17,520
evoke

1441
00:49:17,520 --> 00:49:19,680
and the second closely related is how

1442
00:49:19,680 --> 00:49:22,079
will i evoke those emotions

1443
00:49:22,079 --> 00:49:24,000
your mind might jump to considering what

1444
00:49:24,000 --> 00:49:25,839
outputs like sound and lighting

1445
00:49:25,839 --> 00:49:27,280
you're going to use to create an

1446
00:49:27,280 --> 00:49:29,440
environment but it's equally important

1447
00:49:29,440 --> 00:49:30,079
to consider

1448
00:49:30,079 --> 00:49:32,079
what actions you're asking the viewer or

1449
00:49:32,079 --> 00:49:33,280
visitor to do

1450
00:49:33,280 --> 00:49:35,599
and what mindset or emotional state that

1451
00:49:35,599 --> 00:49:36,960
might put them in

1452
00:49:36,960 --> 00:49:39,040
for example if your output is sound and

1453
00:49:39,040 --> 00:49:40,800
the trigger for your interactivity is to

1454
00:49:40,800 --> 00:49:42,079
sit on the floor

1455
00:49:42,079 --> 00:49:43,680
the visitor will probably be in a

1456
00:49:43,680 --> 00:49:45,359
different state than if your trigger is

1457
00:49:45,359 --> 00:49:47,119
to arm wrestle a robot

1458
00:49:47,119 --> 00:49:48,960
the next question is what is the

1459
00:49:48,960 --> 00:49:50,480
expected interactivity

1460
00:49:50,480 --> 00:49:53,040
and have i made that clear i think as

1461
00:49:53,040 --> 00:49:53,760
designers

1462
00:49:53,760 --> 00:49:55,839
it's easy to automatically respond yes

1463
00:49:55,839 --> 00:49:57,280
to this question

1464
00:49:57,280 --> 00:49:59,839
but keep in mind we have our biases the

1465
00:49:59,839 --> 00:50:01,280
big one being that we know how our

1466
00:50:01,280 --> 00:50:02,559
program works

1467
00:50:02,559 --> 00:50:04,160
we've probably been thinking about it

1468
00:50:04,160 --> 00:50:06,240
intensely for days weeks months

1469
00:50:06,240 --> 00:50:08,800
years user testing will help us figure

1470
00:50:08,800 --> 00:50:10,400
this out further down the line

1471
00:50:10,400 --> 00:50:12,000
but even as we're still designing and

1472
00:50:12,000 --> 00:50:13,680
developing we want to consider what

1473
00:50:13,680 --> 00:50:16,559
other kinds of interactions are possible

1474
00:50:16,559 --> 00:50:18,559
from everything that is possible what

1475
00:50:18,559 --> 00:50:20,240
kinds of interactions do we want to

1476
00:50:20,240 --> 00:50:20,800
encourage

1477
00:50:20,800 --> 00:50:23,200
and which do we want to discourage and

1478
00:50:23,200 --> 00:50:25,040
how can we do that

1479
00:50:25,040 --> 00:50:27,280
if you have multiple inputs in a desired

1480
00:50:27,280 --> 00:50:29,200
sequence for your interactivity this can

1481
00:50:29,200 --> 00:50:31,359
be a really tricky question

1482
00:50:31,359 --> 00:50:33,440
sometimes positioning and the size of

1483
00:50:33,440 --> 00:50:35,680
inputs can really guide the viewer

1484
00:50:35,680 --> 00:50:37,599
you can also use light and sound as

1485
00:50:37,599 --> 00:50:38,880
feedback to reward

1486
00:50:38,880 --> 00:50:41,520
or discourage specific choices the next

1487
00:50:41,520 --> 00:50:43,520
question investigates the length of the

1488
00:50:43,520 --> 00:50:44,400
experience

1489
00:50:44,400 --> 00:50:46,319
and that might seem kind of trivial but

1490
00:50:46,319 --> 00:50:49,040
again understanding timing and sequence

1491
00:50:49,040 --> 00:50:50,319
is essential to planning your

1492
00:50:50,319 --> 00:50:53,200
interactivity you might plan a 20-minute

1493
00:50:53,200 --> 00:50:54,079
interactive video

1494
00:50:54,079 --> 00:50:55,599
sequence but how long do you think

1495
00:50:55,599 --> 00:50:57,280
someone will reasonably interact with

1496
00:50:57,280 --> 00:50:58,480
that experience

1497
00:50:58,480 --> 00:51:01,200
especially if it's in a crowd if it's an

1498
00:51:01,200 --> 00:51:01,760
object

1499
00:51:01,760 --> 00:51:02,880
is there a sequence to that

1500
00:51:02,880 --> 00:51:06,079
interactivity is it okay if the viewer

1501
00:51:06,079 --> 00:51:08,640
doesn't complete that sequence

1502
00:51:08,640 --> 00:51:10,720
does the object have a reset mode if

1503
00:51:10,720 --> 00:51:12,079
it's not interacted with

1504
00:51:12,079 --> 00:51:14,640
over a certain period of time and how

1505
00:51:14,640 --> 00:51:16,800
about variety of experience

1506
00:51:16,800 --> 00:51:18,400
will the viewer experience different

1507
00:51:18,400 --> 00:51:20,839
things each time to reward repeat

1508
00:51:20,839 --> 00:51:22,079
experiences

1509
00:51:22,079 --> 00:51:23,599
or do you want to keep the experience

1510
00:51:23,599 --> 00:51:25,200
the same because it's meaningful that

1511
00:51:25,200 --> 00:51:26,240
way

1512
00:51:26,240 --> 00:51:28,160
if your experience is long you might

1513
00:51:28,160 --> 00:51:29,839
want to add events along the way

1514
00:51:29,839 --> 00:51:31,599
to encourage the viewer to continue to

1515
00:51:31,599 --> 00:51:33,520
interact it's important to keep

1516
00:51:33,520 --> 00:51:35,440
accessibility in mind when designing

1517
00:51:35,440 --> 00:51:36,000
artworks

1518
00:51:36,000 --> 00:51:38,880
as well as experiences how will viewers

1519
00:51:38,880 --> 00:51:41,040
or users of different abilities interact

1520
00:51:41,040 --> 00:51:42,319
with your work

1521
00:51:42,319 --> 00:51:44,079
does the interactivity hinge on a

1522
00:51:44,079 --> 00:51:45,520
particular ability

1523
00:51:45,520 --> 00:51:47,760
site sound being able to reach or pull

1524
00:51:47,760 --> 00:51:49,680
or manipulate something

1525
00:51:49,680 --> 00:51:51,839
if so is there a way for you to create

1526
00:51:51,839 --> 00:51:54,000
redundant feedback in another form

1527
00:51:54,000 --> 00:51:55,920
such as haptic feedback or light in

1528
00:51:55,920 --> 00:51:57,920
addition to sound content

1529
00:51:57,920 --> 00:51:59,839
safety is also a great concern

1530
00:51:59,839 --> 00:52:01,839
especially with electronic works

1531
00:52:01,839 --> 00:52:03,599
the last thing you want is for your work

1532
00:52:03,599 --> 00:52:05,200
to hurt someone

1533
00:52:05,200 --> 00:52:07,119
make sure your cables are neatly managed

1534
00:52:07,119 --> 00:52:08,800
and aren't trip hazards

1535
00:52:08,800 --> 00:52:10,319
wires should be tucked away where they

1536
00:52:10,319 --> 00:52:13,359
can't be yanked they should be secured

1537
00:52:13,359 --> 00:52:15,200
power supplies should be completely out

1538
00:52:15,200 --> 00:52:17,200
of reach of the public and in ventilated

1539
00:52:17,200 --> 00:52:18,400
compartments

1540
00:52:18,400 --> 00:52:19,920
your work should be safe for those who

1541
00:52:19,920 --> 00:52:22,000
will handle it delicately as well as for

1542
00:52:22,000 --> 00:52:24,000
two-year-olds who might enjoy a round of

1543
00:52:24,000 --> 00:52:26,400
yank out all the cables it's also

1544
00:52:26,400 --> 00:52:28,559
important to have a plan for maintenance

1545
00:52:28,559 --> 00:52:30,319
we've talked a bit about how sensors

1546
00:52:30,319 --> 00:52:32,000
might need ongoing observation

1547
00:52:32,000 --> 00:52:33,920
and some ways to get around this but

1548
00:52:33,920 --> 00:52:35,760
stuff can happen especially over the

1549
00:52:35,760 --> 00:52:37,440
course of a long exhibition

1550
00:52:37,440 --> 00:52:40,000
or permanent installation and especially

1551
00:52:40,000 --> 00:52:41,520
if you have embedded sensors

1552
00:52:41,520 --> 00:52:43,839
in your work like a sculpture or other

1553
00:52:43,839 --> 00:52:45,599
hands-on experience where they're likely

1554
00:52:45,599 --> 00:52:47,280
to get jostled

1555
00:52:47,280 --> 00:52:48,559
if you're creating an artwork you'll

1556
00:52:48,559 --> 00:52:50,240
want to consider if there's a way to

1557
00:52:50,240 --> 00:52:51,440
test your electronics

1558
00:52:51,440 --> 00:52:53,359
while they're still embedded rather than

1559
00:52:53,359 --> 00:52:54,880
having to take them out

1560
00:52:54,880 --> 00:52:56,240
this could be something like putting

1561
00:52:56,240 --> 00:52:58,319
your leds on full white so it's easy to

1562
00:52:58,319 --> 00:53:00,400
see if any have burnt out or turning

1563
00:53:00,400 --> 00:53:02,319
your sound to play a demo or testing

1564
00:53:02,319 --> 00:53:03,359
song

1565
00:53:03,359 --> 00:53:04,880
you'll also want to make sure that

1566
00:53:04,880 --> 00:53:06,640
anything that might need to be replaced

1567
00:53:06,640 --> 00:53:07,760
is easy to swap

1568
00:53:07,760 --> 00:53:10,079
out for leds i recommend using

1569
00:53:10,079 --> 00:53:12,000
connectors and including some extra

1570
00:53:12,000 --> 00:53:12,640
ready-to-be

1571
00:53:12,640 --> 00:53:15,760
attached strands i also always include

1572
00:53:15,760 --> 00:53:18,400
extra batteries or an extra power supply

1573
00:53:18,400 --> 00:53:20,160
sound equipment can be a little trickier

1574
00:53:20,160 --> 00:53:22,240
but i find again using connectors and

1575
00:53:22,240 --> 00:53:25,200
simple diagrams goes a long way

1576
00:53:25,200 --> 00:53:27,520
before anything goes live and ongoingly

1577
00:53:27,520 --> 00:53:29,040
during the prototyping stage

1578
00:53:29,040 --> 00:53:30,880
i like to do a few kinds of testing with

1579
00:53:30,880 --> 00:53:32,960
my colleagues who are all experts in

1580
00:53:32,960 --> 00:53:33,920
their own field

1581
00:53:33,920 --> 00:53:35,680
and members of the public especially

1582
00:53:35,680 --> 00:53:37,200
people who i don't know

1583
00:53:37,200 --> 00:53:38,720
when designing something it's easy to

1584
00:53:38,720 --> 00:53:40,559
get in your own head and forget that not

1585
00:53:40,559 --> 00:53:42,240
everyone will know that they should

1586
00:53:42,240 --> 00:53:44,319
say touch the button at this time in the

1587
00:53:44,319 --> 00:53:45,760
lighting sequence or

1588
00:53:45,760 --> 00:53:47,119
know to press their hand against a

1589
00:53:47,119 --> 00:53:48,800
particular sculpture

1590
00:53:48,800 --> 00:53:51,119
while having easter eggs or hidden forms

1591
00:53:51,119 --> 00:53:52,079
of interactivity

1592
00:53:52,079 --> 00:53:54,480
intended for die hard fans can be really

1593
00:53:54,480 --> 00:53:55,119
fun

1594
00:53:55,119 --> 00:53:56,480
you want to make sure that your top

1595
00:53:56,480 --> 00:53:58,960
level interactivity is always intuitive

1596
00:53:58,960 --> 00:54:00,880
or else all your hard work may never be

1597
00:54:00,880 --> 00:54:02,559
fully experienced

1598
00:54:02,559 --> 00:54:03,920
as much as you plan to make your

1599
00:54:03,920 --> 00:54:05,440
interactivity apparent using the

1600
00:54:05,440 --> 00:54:07,200
questions from the last section

1601
00:54:07,200 --> 00:54:09,280
you won't really know if it's intuitive

1602
00:54:09,280 --> 00:54:10,800
until you test it

1603
00:54:10,800 --> 00:54:12,960
i like to do live testing with as large

1604
00:54:12,960 --> 00:54:14,400
a group as possible that's still

1605
00:54:14,400 --> 00:54:15,920
maintainable for me

1606
00:54:15,920 --> 00:54:17,760
for commercial work this sometimes means

1607
00:54:17,760 --> 00:54:19,920
soft openings where we gather feedback

1608
00:54:19,920 --> 00:54:21,599
or testing days where we encourage

1609
00:54:21,599 --> 00:54:23,760
colleagues and visitors to come by and

1610
00:54:23,760 --> 00:54:24,960
interact with the work

1611
00:54:24,960 --> 00:54:27,200
then leave notes who should your test

1612
00:54:27,200 --> 00:54:28,240
group be

1613
00:54:28,240 --> 00:54:30,000
for products and company sponsored work

1614
00:54:30,000 --> 00:54:31,599
i prefer this group to include a

1615
00:54:31,599 --> 00:54:33,680
sizeable group from our target audience

1616
00:54:33,680 --> 00:54:35,440
and i also like to include a group of

1617
00:54:35,440 --> 00:54:37,520
subjects of various ages body types

1618
00:54:37,520 --> 00:54:38,880
abilities etc

1619
00:54:38,880 --> 00:54:40,640
to make sure my work is inclusive and

1620
00:54:40,640 --> 00:54:42,640
accessible if you can get an

1621
00:54:42,640 --> 00:54:44,400
accessibility consultant to look over

1622
00:54:44,400 --> 00:54:46,079
your work at different stages

1623
00:54:46,079 --> 00:54:47,920
that is ideal as they are trained to

1624
00:54:47,920 --> 00:54:50,160
recognize in what might be an issue for

1625
00:54:50,160 --> 00:54:51,680
certain users

1626
00:54:51,680 --> 00:54:53,359
the specific questions i asked during

1627
00:54:53,359 --> 00:54:54,720
testing might vary

1628
00:54:54,720 --> 00:54:56,240
and the methods i deployed to collect

1629
00:54:56,240 --> 00:54:57,839
responses which might include

1630
00:54:57,839 --> 00:55:00,400
questionnaires in-person interviews

1631
00:55:00,400 --> 00:55:02,480
voting for option a or option b

1632
00:55:02,480 --> 00:55:04,880
for example might also change depending

1633
00:55:04,880 --> 00:55:06,079
on the project

1634
00:55:06,079 --> 00:55:07,839
but here's an overview of what i tend to

1635
00:55:07,839 --> 00:55:10,160
look out for

1636
00:55:10,160 --> 00:55:11,839
how did people interact with the work

1637
00:55:11,839 --> 00:55:13,839
and was it what i expected

1638
00:55:13,839 --> 00:55:15,839
how did the experience work for people

1639
00:55:15,839 --> 00:55:18,880
of all ages body type ability etc

1640
00:55:18,880 --> 00:55:20,480
how long did people interact with the

1641
00:55:20,480 --> 00:55:23,920
work was the interactivity clear

1642
00:55:23,920 --> 00:55:25,599
were there any situations in which the

1643
00:55:25,599 --> 00:55:27,680
interactivity didn't function

1644
00:55:27,680 --> 00:55:29,280
did participants think the experience

1645
00:55:29,280 --> 00:55:31,200
was too long or too short

1646
00:55:31,200 --> 00:55:33,119
did the experience work for one person

1647
00:55:33,119 --> 00:55:34,799
too many people

1648
00:55:34,799 --> 00:55:36,559
was the piece successful in being

1649
00:55:36,559 --> 00:55:39,599
interesting evoking emotions and so on

1650
00:55:39,599 --> 00:55:41,359
were there any accessibility concerns

1651
00:55:41,359 --> 00:55:42,799
that need to be addressed

1652
00:55:42,799 --> 00:55:44,559
does anything need to be adjusted to

1653
00:55:44,559 --> 00:55:47,520
make it more apparent

1654
00:55:47,520 --> 00:55:49,040
when you're scaling upwards from a

1655
00:55:49,040 --> 00:55:51,839
singular artwork or an exhibition

1656
00:55:51,839 --> 00:55:54,720
to a room scale exhibition there are

1657
00:55:54,720 --> 00:55:56,640
some additional questions you might ask

1658
00:55:56,640 --> 00:55:57,119
before

1659
00:55:57,119 --> 00:55:59,280
and during the testing stage in addition

1660
00:55:59,280 --> 00:56:01,119
to some of those we asked for a singular

1661
00:56:01,119 --> 00:56:02,240
work

1662
00:56:02,240 --> 00:56:04,319
here's a few i tend to ask myself and

1663
00:56:04,319 --> 00:56:07,440
the considerations that go into them

1664
00:56:07,440 --> 00:56:09,200
the first is how would i describe the

1665
00:56:09,200 --> 00:56:11,440
feel of this room

1666
00:56:11,440 --> 00:56:13,200
when we start to add in more elements

1667
00:56:13,200 --> 00:56:15,200
and we start to go into a large scale

1668
00:56:15,200 --> 00:56:16,559
exhibition

1669
00:56:16,559 --> 00:56:18,079
we run the risk of creating an

1670
00:56:18,079 --> 00:56:19,760
overwhelming or cacophonous

1671
00:56:19,760 --> 00:56:22,559
experience and i don't just mean sound

1672
00:56:22,559 --> 00:56:24,640
i've seen beautiful lighting experiences

1673
00:56:24,640 --> 00:56:26,559
turn to mud because the lighting in one

1674
00:56:26,559 --> 00:56:27,760
section clashes

1675
00:56:27,760 --> 00:56:29,599
with another creating a really

1676
00:56:29,599 --> 00:56:32,160
unsatisfactory experience

1677
00:56:32,160 --> 00:56:33,599
it's important to consider how the

1678
00:56:33,599 --> 00:56:35,520
various elements are working together

1679
00:56:35,520 --> 00:56:38,400
to create a harmony of a feeling you

1680
00:56:38,400 --> 00:56:39,520
might also consider

1681
00:56:39,520 --> 00:56:41,119
how someone might feel in different

1682
00:56:41,119 --> 00:56:42,880
places of the room and what the

1683
00:56:42,880 --> 00:56:44,160
audience's journey is

1684
00:56:44,160 --> 00:56:46,799
or could be

1685
00:56:47,200 --> 00:56:49,200
next i ask how does it connect to

1686
00:56:49,200 --> 00:56:51,520
previous experiences or artworks in the

1687
00:56:51,520 --> 00:56:52,960
exhibit

1688
00:56:52,960 --> 00:56:55,040
this question also addresses that idea

1689
00:56:55,040 --> 00:56:56,880
of the audience's journey

1690
00:56:56,880 --> 00:56:59,280
in an immersive environment especially

1691
00:56:59,280 --> 00:57:00,960
the goal is to keep the audience

1692
00:57:00,960 --> 00:57:03,359
immersed within a world you don't want

1693
00:57:03,359 --> 00:57:04,559
anything that will take them

1694
00:57:04,559 --> 00:57:06,720
out of that world so it's important to

1695
00:57:06,720 --> 00:57:07,839
consider the narrative

1696
00:57:07,839 --> 00:57:10,480
underlying your experience what fits and

1697
00:57:10,480 --> 00:57:12,000
what doesn't fit

1698
00:57:12,000 --> 00:57:13,440
is this a world in which nothing

1699
00:57:13,440 --> 00:57:15,920
man-made exists if so you're going to

1700
00:57:15,920 --> 00:57:17,920
need to do extra work to make sure human

1701
00:57:17,920 --> 00:57:20,079
technologies like speakers and wires

1702
00:57:20,079 --> 00:57:22,000
aren't visible

1703
00:57:22,000 --> 00:57:23,760
you might also consider the journey

1704
00:57:23,760 --> 00:57:25,280
throughout the space as a learning

1705
00:57:25,280 --> 00:57:26,480
process

1706
00:57:26,480 --> 00:57:28,640
with immersive experiences we train the

1707
00:57:28,640 --> 00:57:31,200
audience to interact with the work

1708
00:57:31,200 --> 00:57:32,960
most audiences are still used to

1709
00:57:32,960 --> 00:57:34,480
standing in front of an artwork

1710
00:57:34,480 --> 00:57:36,799
at a distance they've learned that they

1711
00:57:36,799 --> 00:57:38,559
can't touch an artwork and they can't

1712
00:57:38,559 --> 00:57:40,960
get close to it so it might require some

1713
00:57:40,960 --> 00:57:44,640
encouragement to get them to interact

1714
00:57:44,640 --> 00:57:46,400
in your exhibit they'll learn that if

1715
00:57:46,400 --> 00:57:49,520
they do x it will result in something

1716
00:57:49,520 --> 00:57:51,760
you'll want to consider what that x is

1717
00:57:51,760 --> 00:57:53,359
what the audience has learned

1718
00:57:53,359 --> 00:57:55,280
and see if you can use that knowledge

1719
00:57:55,280 --> 00:57:57,280
and that training to your advantage in

1720
00:57:57,280 --> 00:57:58,640
order to make your interactivity

1721
00:57:58,640 --> 00:57:59,520
apparent

1722
00:57:59,520 --> 00:58:01,200
while also making sure they won't view

1723
00:58:01,200 --> 00:58:03,040
your artwork as broken or not

1724
00:58:03,040 --> 00:58:03,760
functioning

1725
00:58:03,760 --> 00:58:06,839
if they don't receive a reward for that

1726
00:58:06,839 --> 00:58:08,640
interaction

1727
00:58:08,640 --> 00:58:10,319
the next question is how does each

1728
00:58:10,319 --> 00:58:12,160
element add to the story

1729
00:58:12,160 --> 00:58:15,440
of the complete experience

1730
00:58:15,440 --> 00:58:17,119
it can be tempting to include many

1731
00:58:17,119 --> 00:58:19,359
interactions or objects

1732
00:58:19,359 --> 00:58:21,119
but this usually unnecessarily

1733
00:58:21,119 --> 00:58:22,880
complicates things

1734
00:58:22,880 --> 00:58:24,960
in figuring this out what really needs

1735
00:58:24,960 --> 00:58:26,079
to be in the room

1736
00:58:26,079 --> 00:58:28,480
for the work to succeed it's important

1737
00:58:28,480 --> 00:58:31,440
to ask why each element is there

1738
00:58:31,440 --> 00:58:33,040
what is it doing to further the

1739
00:58:33,040 --> 00:58:34,480
experience

1740
00:58:34,480 --> 00:58:37,119
if the answer is nothing then cut it

1741
00:58:37,119 --> 00:58:39,040
unless of course your experience is meow

1742
00:58:39,040 --> 00:58:40,799
wolf style maximalism

1743
00:58:40,799 --> 00:58:43,759
then more is more

1744
00:58:44,480 --> 00:58:46,319
the next question i ask is about the

1745
00:58:46,319 --> 00:58:47,760
crowd who

1746
00:58:47,760 --> 00:58:50,480
is the crowd going to be and what is the

1747
00:58:50,480 --> 00:58:51,839
crowd size

1748
00:58:51,839 --> 00:58:54,319
this is really important to consider in

1749
00:58:54,319 --> 00:58:56,559
an ideal world we have one visitor who

1750
00:58:56,559 --> 00:58:57,599
goes on a journey

1751
00:58:57,599 --> 00:58:59,359
spending the time to carefully explore

1752
00:58:59,359 --> 00:59:01,680
each object but in reality this is

1753
00:59:01,680 --> 00:59:03,200
rarely the case

1754
00:59:03,200 --> 00:59:05,599
you want to consider realistically based

1755
00:59:05,599 --> 00:59:06,720
on where your room will be

1756
00:59:06,720 --> 00:59:08,240
and who will be attending the event or

1757
00:59:08,240 --> 00:59:10,559
venue what kind of crowd you can expect

1758
00:59:10,559 --> 00:59:12,640
what the crowdflow might look like and

1759
00:59:12,640 --> 00:59:15,760
how you can accommodate a crowd

1760
00:59:15,760 --> 00:59:18,480
a few tips here i still really love

1761
00:59:18,480 --> 00:59:20,720
creating intimate one-on-one experiences

1762
00:59:20,720 --> 00:59:22,160
where it's really just made for one

1763
00:59:22,160 --> 00:59:22,799
person

1764
00:59:22,799 --> 00:59:24,559
but you can consider how an experience

1765
00:59:24,559 --> 00:59:26,160
for one person might turn into an

1766
00:59:26,160 --> 00:59:28,319
experience for those around them

1767
00:59:28,319 --> 00:59:30,000
say you have a sculpture that controls

1768
00:59:30,000 --> 00:59:32,160
sound and lighting could you also rig it

1769
00:59:32,160 --> 00:59:32,799
to control

1770
00:59:32,799 --> 00:59:34,720
all the sound and lighting in the room

1771
00:59:34,720 --> 00:59:36,400
that way the entire crowd gets to

1772
00:59:36,400 --> 00:59:37,599
experience it

1773
00:59:37,599 --> 00:59:38,799
they might not know that that

1774
00:59:38,799 --> 00:59:40,240
interactivity is on account of the

1775
00:59:40,240 --> 00:59:41,119
sculpture

1776
00:59:41,119 --> 00:59:42,559
but they'll realize it when they get a

1777
00:59:42,559 --> 00:59:44,160
chance to interact with it and have an

1778
00:59:44,160 --> 00:59:45,680
aha moment

1779
00:59:45,680 --> 00:59:47,520
you could also have multiple sculptures

1780
00:59:47,520 --> 00:59:49,440
that mix sound and lighting

1781
00:59:49,440 --> 00:59:51,200
another way to deal with crowds is to

1782
00:59:51,200 --> 00:59:53,280
detect them and accommodate them

1783
00:59:53,280 --> 00:59:55,760
i usually do this by having a crowd mode

1784
00:59:55,760 --> 00:59:57,599
where perhaps the interactivity is more

1785
00:59:57,599 --> 00:59:59,359
multiplayer

1786
00:59:59,359 --> 01:00:01,040
i might also include the bouncing

1787
01:00:01,040 --> 01:00:02,799
options that consider crowds

1788
01:00:02,799 --> 01:00:04,720
like people who keep repeatedly tapping

1789
01:00:04,720 --> 01:00:07,520
on a controller

1790
01:00:08,319 --> 01:00:10,400
the next question i ask is are there any

1791
01:00:10,400 --> 01:00:12,480
elements which distract from the feeling

1792
01:00:12,480 --> 01:00:13,839
of the room

1793
01:00:13,839 --> 01:00:15,920
again more isn't always more so make

1794
01:00:15,920 --> 01:00:17,359
sure that everything you've included in

1795
01:00:17,359 --> 01:00:19,359
the room is harmonious for the feel

1796
01:00:19,359 --> 01:00:21,200
aesthetic and experience you're hoping

1797
01:00:21,200 --> 01:00:23,359
for

1798
01:00:23,520 --> 01:00:26,319
is this experience over or underwhelming

1799
01:00:26,319 --> 01:00:27,839
the answer here is definitely going to

1800
01:00:27,839 --> 01:00:28,799
vary per person

1801
01:00:28,799 --> 01:00:30,640
so this is an important question to ask

1802
01:00:30,640 --> 01:00:32,079
during testing

1803
01:00:32,079 --> 01:00:34,079
you should also ask what specifically

1804
01:00:34,079 --> 01:00:36,079
was under or overwhelming

1805
01:00:36,079 --> 01:00:38,160
in the case of underwhelming experiences

1806
01:00:38,160 --> 01:00:39,680
it's often the case that your big

1807
01:00:39,680 --> 01:00:41,760
interactivity payoff was too difficult

1808
01:00:41,760 --> 01:00:42,640
to get to

1809
01:00:42,640 --> 01:00:45,119
or that it wasn't as big as you thought

1810
01:00:45,119 --> 01:00:46,799
shortening the experience or making it

1811
01:00:46,799 --> 01:00:47,359
easier

1812
01:00:47,359 --> 01:00:50,079
might help in the case of overwhelming

1813
01:00:50,079 --> 01:00:51,599
it's usually that the interactivity

1814
01:00:51,599 --> 01:00:52,400
isn't clear

1815
01:00:52,400 --> 01:00:54,079
or there's an unnecessary amount of

1816
01:00:54,079 --> 01:00:56,640
output happening for each state

1817
01:00:56,640 --> 01:00:58,559
try going back to a flow chart and see

1818
01:00:58,559 --> 01:01:02,480
if you can't simplify your interactivity

1819
01:01:02,720 --> 01:01:04,400
will people have different experiences

1820
01:01:04,400 --> 01:01:06,000
depending on where they stand and what

1821
01:01:06,000 --> 01:01:07,280
they do

1822
01:01:07,280 --> 01:01:09,280
are all of those experiences satisfying

1823
01:01:09,280 --> 01:01:10,880
in their own way

1824
01:01:10,880 --> 01:01:12,880
this goes back to thinking about crowds

1825
01:01:12,880 --> 01:01:14,880
and different groups of visitors

1826
01:01:14,880 --> 01:01:16,880
i like to have both quiet experiences

1827
01:01:16,880 --> 01:01:18,400
for folks who need a little rest

1828
01:01:18,400 --> 01:01:20,960
as well as intense experiences i feel

1829
01:01:20,960 --> 01:01:22,880
like the former is often overlooked in

1830
01:01:22,880 --> 01:01:24,160
immersive environments

1831
01:01:24,160 --> 01:01:26,000
but immersive environments don't have to

1832
01:01:26,000 --> 01:01:28,960
be overwhelming

1833
01:01:29,119 --> 01:01:31,119
have i successfully directed the focus

1834
01:01:31,119 --> 01:01:33,040
in the room if desired

1835
01:01:33,040 --> 01:01:35,119
focus can most easily be directed with

1836
01:01:35,119 --> 01:01:36,319
sound and lighting

1837
01:01:36,319 --> 01:01:38,160
if you have a lot going on try using

1838
01:01:38,160 --> 01:01:39,920
these elements to draw the visitor to a

1839
01:01:39,920 --> 01:01:41,760
specific object or guide them in their

1840
01:01:41,760 --> 01:01:43,440
interactions

1841
01:01:43,440 --> 01:01:45,440
have i provided an intuitive experience

1842
01:01:45,440 --> 01:01:46,480
for visitors

1843
01:01:46,480 --> 01:01:48,000
this is something that you can figure

1844
01:01:48,000 --> 01:01:50,160
out during testing

1845
01:01:50,160 --> 01:01:52,960
have i provided options for all visitors

1846
01:01:52,960 --> 01:01:53,280
this

1847
01:01:53,280 --> 01:01:54,720
and the next question relate to

1848
01:01:54,720 --> 01:01:56,640
accessibility it's important that as

1849
01:01:56,640 --> 01:01:58,720
designers and developers we consider how

1850
01:01:58,720 --> 01:01:59,920
users of varying

1851
01:01:59,920 --> 01:02:01,920
ages body types and abilities will

1852
01:02:01,920 --> 01:02:03,520
interact with our works

1853
01:02:03,520 --> 01:02:05,440
i often hear pushback to this and that

1854
01:02:05,440 --> 01:02:07,599
people say it's not the experience if we

1855
01:02:07,599 --> 01:02:08,960
don't make it challenging

1856
01:02:08,960 --> 01:02:11,119
or we just can't make this experience

1857
01:02:11,119 --> 01:02:12,079
accessible for

1858
01:02:12,079 --> 01:02:14,480
so and so and my pushback to that

1859
01:02:14,480 --> 01:02:16,160
pushback would be that challenge looks

1860
01:02:16,160 --> 01:02:17,920
different to different people

1861
01:02:17,920 --> 01:02:19,520
if you're having a hard time figuring

1862
01:02:19,520 --> 01:02:20,880
out how to make your experience

1863
01:02:20,880 --> 01:02:21,680
accessible

1864
01:02:21,680 --> 01:02:23,520
try to consider what the goal of that

1865
01:02:23,520 --> 01:02:25,200
experience really is

1866
01:02:25,200 --> 01:02:26,880
congratulations on completing this

1867
01:02:26,880 --> 01:02:28,720
course i know it's been a ton of

1868
01:02:28,720 --> 01:02:29,599
information

1869
01:02:29,599 --> 01:02:31,599
and hopefully it's helped to demystify

1870
01:02:31,599 --> 01:02:33,599
how to create interactive artworks and

1871
01:02:33,599 --> 01:02:34,640
experiences

1872
01:02:34,640 --> 01:02:37,359
from programming to installation of

1873
01:02:37,359 --> 01:02:38,400
course we couldn't cover

1874
01:02:38,400 --> 01:02:40,559
everything especially without additional

1875
01:02:40,559 --> 01:02:41,520
equipment

1876
01:02:41,520 --> 01:02:42,880
but this course should at least get you

1877
01:02:42,880 --> 01:02:44,559
started out towards making your own

1878
01:02:44,559 --> 01:02:48,400
interactive artworks and installations

1879
01:02:48,400 --> 01:02:49,920
for homework and to test what you've

1880
01:02:49,920 --> 01:02:52,000
learned try to start or continue the

1881
01:02:52,000 --> 01:02:53,680
process of developing a singular

1882
01:02:53,680 --> 01:02:55,520
interactive artwork or a room scale

1883
01:02:55,520 --> 01:02:56,640
exhibit

1884
01:02:56,640 --> 01:02:58,960
try making a mood board flow chart and

1885
01:02:58,960 --> 01:03:00,720
or interactivity matrix

1886
01:03:00,720 --> 01:03:02,400
then try asking yourself some of the

1887
01:03:02,400 --> 01:03:04,400
questions we established in this video

1888
01:03:04,400 --> 01:03:06,000
to figure out how you can improve the

1889
01:03:06,000 --> 01:03:08,000
design if you've already started

1890
01:03:08,000 --> 01:03:08,960
prototyping

1891
01:03:08,960 --> 01:03:10,960
see if you can do a material study or

1892
01:03:10,960 --> 01:03:12,000
proof of concept

1893
01:03:12,000 --> 01:03:13,680
and get a bit closer to realizing your

1894
01:03:13,680 --> 01:03:15,599
idea feel free to share

1895
01:03:15,599 --> 01:03:18,400
photos and videos on our course page if

1896
01:03:18,400 --> 01:03:19,760
you'd like a more hands-on

1897
01:03:19,760 --> 01:03:21,599
and live deep dive into designing

1898
01:03:21,599 --> 01:03:23,920
installations feel free to drop by my

1899
01:03:23,920 --> 01:03:26,720
office hour this tuesday at 1 pm edt

1900
01:03:26,720 --> 01:03:28,720
east coast time where we'll collaborate

1901
01:03:28,720 --> 01:03:30,079
on creating a room scale

1902
01:03:30,079 --> 01:03:32,880
exhibit via group design exercise thank

1903
01:03:32,880 --> 01:03:34,319
you so much for all your hard work

1904
01:03:34,319 --> 01:03:35,599
throughout the course

1905
01:03:35,599 --> 01:03:37,760
i can't wait to see what you create

1906
01:03:37,760 --> 01:03:44,640
happy hacking

