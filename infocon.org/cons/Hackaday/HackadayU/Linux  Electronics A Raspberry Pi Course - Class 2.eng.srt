1
00:00:00,000 --> 00:00:08,639
[Music]

2
00:00:08,639 --> 00:00:09,360
okay so

3
00:00:09,360 --> 00:00:13,040
welcome to the linux and electronics

4
00:00:13,040 --> 00:00:15,040
raspberry pi course this is the second

5
00:00:15,040 --> 00:00:17,840
class um

6
00:00:17,840 --> 00:00:20,560
today we're gonna be seeing and and

7
00:00:20,560 --> 00:00:21,600
learning about the

8
00:00:21,600 --> 00:00:24,080
linux basics this is the fun part this

9
00:00:24,080 --> 00:00:24,880
is uh

10
00:00:24,880 --> 00:00:28,400
the biggest uh barrier to entry to the

11
00:00:28,400 --> 00:00:30,880
raspberry pi the linux operating system

12
00:00:30,880 --> 00:00:33,440
so hopefully at the end of the class or

13
00:00:33,440 --> 00:00:34,480
hopefully after

14
00:00:34,480 --> 00:00:38,079
a two or three repetitions of this video

15
00:00:38,079 --> 00:00:40,800
you're gonna you're gonna be able to to

16
00:00:40,800 --> 00:00:41,360
move

17
00:00:41,360 --> 00:00:44,640
around the raspberry pi ecosystem

18
00:00:44,640 --> 00:00:48,399
much freely than you did before this is

19
00:00:48,399 --> 00:00:50,239
what we're going to learn today is going

20
00:00:50,239 --> 00:00:52,559
to be uh the differentiator

21
00:00:52,559 --> 00:00:56,160
the the main differentiator between

22
00:00:56,160 --> 00:00:58,239
uh what you can do on an arduino or how

23
00:00:58,239 --> 00:00:59,760
you can do things on an arduino

24
00:00:59,760 --> 00:01:03,280
and a raspberry pi so

25
00:01:03,280 --> 00:01:05,840
first of all um let's connect remotely

26
00:01:05,840 --> 00:01:07,200
to the raspberry pi

27
00:01:07,200 --> 00:01:10,640
on the on the first class we saw

28
00:01:10,640 --> 00:01:14,240
how to open uh we did a process of

29
00:01:14,240 --> 00:01:18,240
making ssh uh available

30
00:01:18,240 --> 00:01:20,799
um so we can so we can connect to the

31
00:01:20,799 --> 00:01:22,560
raspberry pi because it becomes disabled

32
00:01:22,560 --> 00:01:24,320
by by default

33
00:01:24,320 --> 00:01:25,920
and we're going we're going to do that

34
00:01:25,920 --> 00:01:29,280
today we're not going to do the

35
00:01:29,280 --> 00:01:32,159
the the file process as we saw in the

36
00:01:32,159 --> 00:01:33,360
last class but we're going to

37
00:01:33,360 --> 00:01:35,200
we're going to do it uh a little bit

38
00:01:35,200 --> 00:01:37,520
different

39
00:01:37,520 --> 00:01:39,600
so these are basically the options you

40
00:01:39,600 --> 00:01:41,680
have to find the ip address

41
00:01:41,680 --> 00:01:45,040
on of the raspberry pi every every

42
00:01:45,040 --> 00:01:48,000
device connected on the on your network

43
00:01:48,000 --> 00:01:49,920
has an ip address an ip address is

44
00:01:49,920 --> 00:01:51,200
basically an address where

45
00:01:51,200 --> 00:01:54,320
you can find that device on the network

46
00:01:54,320 --> 00:01:56,240
every every device connected to the

47
00:01:56,240 --> 00:01:57,840
router has

48
00:01:57,840 --> 00:01:59,920
an ip address assigned to them by the

49
00:01:59,920 --> 00:02:01,280
router

50
00:02:01,280 --> 00:02:04,240
and and and you have to know which one

51
00:02:04,240 --> 00:02:06,640
is it to talk to them

52
00:02:06,640 --> 00:02:09,520
so this is this is these are these are

53
00:02:09,520 --> 00:02:10,080
basically

54
00:02:10,080 --> 00:02:13,360
the the the steps the first one is you

55
00:02:13,360 --> 00:02:15,200
activate the ssh on the pi so you can

56
00:02:15,200 --> 00:02:16,800
connect later

57
00:02:16,800 --> 00:02:19,920
um or the the vnc which is

58
00:02:19,920 --> 00:02:22,239
which is what i'm going to be using for

59
00:02:22,239 --> 00:02:23,360
you to see my

60
00:02:23,360 --> 00:02:25,120
my connection to the raspberry pi

61
00:02:25,120 --> 00:02:27,599
through my computer

62
00:02:27,599 --> 00:02:30,800
uh the vnc is something like uh

63
00:02:30,800 --> 00:02:34,879
teamviewer just to put that more clearly

64
00:02:34,879 --> 00:02:36,640
your first option is to go to the

65
00:02:36,640 --> 00:02:38,480
settings of your router

66
00:02:38,480 --> 00:02:40,879
um first of all you for for in order to

67
00:02:40,879 --> 00:02:41,840
go to the router

68
00:02:41,840 --> 00:02:44,160
you need to know your ip address which

69
00:02:44,160 --> 00:02:45,680
is we we're going to be

70
00:02:45,680 --> 00:02:47,280
we're going to be looking at in a in a

71
00:02:47,280 --> 00:02:48,800
bit and then

72
00:02:48,800 --> 00:02:50,959
the first the first one is going to be

73
00:02:50,959 --> 00:02:52,080
the router always

74
00:02:52,080 --> 00:02:54,480
the whatever number you have here is

75
00:02:54,480 --> 00:02:55,200
probably

76
00:02:55,200 --> 00:02:58,239
100 or 10 points something something

77
00:02:58,239 --> 00:03:00,879
but at the end it's going to be a number

78
00:03:00,879 --> 00:03:01,920
of your computer

79
00:03:01,920 --> 00:03:05,120
which or your cell phone or whichever

80
00:03:05,120 --> 00:03:07,599
but note that the the ip address for the

81
00:03:07,599 --> 00:03:08,400
router

82
00:03:08,400 --> 00:03:11,280
almost commonly is the first one the

83
00:03:11,280 --> 00:03:12,800
number one

84
00:03:12,800 --> 00:03:16,480
so um there you can also do a pin

85
00:03:16,480 --> 00:03:19,440
raspberry pi dot local which means that

86
00:03:19,440 --> 00:03:20,080
is

87
00:03:20,080 --> 00:03:23,200
a dns uh it is this is a dns server

88
00:03:23,200 --> 00:03:25,239
something like

89
00:03:25,239 --> 00:03:28,400
www.facebook.com which is something like

90
00:03:28,400 --> 00:03:31,440
uh an address look like that looks like

91
00:03:31,440 --> 00:03:31,680
an

92
00:03:31,680 --> 00:03:36,159
url uh this option hasn't hasn't worked

93
00:03:36,159 --> 00:03:37,120
for me

94
00:03:37,120 --> 00:03:40,159
um like ever but

95
00:03:40,159 --> 00:03:43,360
if maybe it's something because of my

96
00:03:43,360 --> 00:03:46,480
router's configuration

97
00:03:46,480 --> 00:03:49,440
the uh this is the step the step to know

98
00:03:49,440 --> 00:03:49,840
which

99
00:03:49,840 --> 00:03:52,480
which address uh which ip address your

100
00:03:52,480 --> 00:03:54,560
computer has

101
00:03:54,560 --> 00:03:57,200
so you can know which one is the routers

102
00:03:57,200 --> 00:03:58,560
so you can know

103
00:03:58,560 --> 00:04:00,480
how to which one is going to be the

104
00:04:00,480 --> 00:04:02,239
raspberry pi's

105
00:04:02,239 --> 00:04:03,439
this is a command we're going to be

106
00:04:03,439 --> 00:04:06,080
using in order to look for the

107
00:04:06,080 --> 00:04:08,480
for the address of the all of all the

108
00:04:08,480 --> 00:04:09,680
devices that are

109
00:04:09,680 --> 00:04:12,959
in the in the in the network we're going

110
00:04:12,959 --> 00:04:14,159
to see that later

111
00:04:14,159 --> 00:04:16,959
and this is the command for you to go to

112
00:04:16,959 --> 00:04:18,399
the

113
00:04:18,399 --> 00:04:21,600
to initiate a connection ssh

114
00:04:21,600 --> 00:04:24,000
to your ass to your raspberry pi note

115
00:04:24,000 --> 00:04:25,040
that this is not

116
00:04:25,040 --> 00:04:27,199
this is not going to be this is going to

117
00:04:27,199 --> 00:04:28,560
change depending on

118
00:04:28,560 --> 00:04:31,280
which ip address your raspberry pi has

119
00:04:31,280 --> 00:04:32,320
on your network

120
00:04:32,320 --> 00:04:35,759
this is just an example this ip address

121
00:04:35,759 --> 00:04:38,000
so yes a good page is this one that is

122
00:04:38,000 --> 00:04:38,880
below the

123
00:04:38,880 --> 00:04:41,680
in the source it's the raspberry pi

124
00:04:41,680 --> 00:04:42,320
access

125
00:04:42,320 --> 00:04:44,160
remote access you can find it on google

126
00:04:44,160 --> 00:04:45,360
like that

127
00:04:45,360 --> 00:04:48,320
so let's do that so first of all we need

128
00:04:48,320 --> 00:04:48,880
to see

129
00:04:48,880 --> 00:04:51,440
which which ip address we have on the

130
00:04:51,440 --> 00:04:52,479
computer

131
00:04:52,479 --> 00:04:55,120
so i'm going to open this is the ubuntu

132
00:04:55,120 --> 00:04:56,160
that i ask you to

133
00:04:56,160 --> 00:04:58,870
download you can use whichever um

134
00:04:58,870 --> 00:05:00,800
[Music]

135
00:05:00,800 --> 00:05:03,120
console you have in hand i like the

136
00:05:03,120 --> 00:05:04,160
linux one

137
00:05:04,160 --> 00:05:07,360
but you can also you use the cmd from

138
00:05:07,360 --> 00:05:08,720
windows

139
00:05:08,720 --> 00:05:11,759
and you can find your your computer's ip

140
00:05:11,759 --> 00:05:13,759
address on the network

141
00:05:13,759 --> 00:05:17,039
for example in linux even though um my

142
00:05:17,039 --> 00:05:20,320
my my operating system is windows ubuntu

143
00:05:20,320 --> 00:05:23,919
runs on on windows 2. so i'm going to do

144
00:05:23,919 --> 00:05:24,800
the command

145
00:05:24,800 --> 00:05:30,479
called uh here ifconfig let's run it

146
00:05:30,800 --> 00:05:33,919
here you can see that it gave

147
00:05:33,919 --> 00:05:36,880
that it gave uh an answer so depending

148
00:05:36,880 --> 00:05:37,199
on

149
00:05:37,199 --> 00:05:38,880
which kind of connection do you have to

150
00:05:38,880 --> 00:05:40,320
the to the router

151
00:05:40,320 --> 00:05:42,880
is going to is going to tell you which

152
00:05:42,880 --> 00:05:45,039
uh which ap address do you have on

153
00:05:45,039 --> 00:05:47,520
for example i know this is my ap address

154
00:05:47,520 --> 00:05:48,800
because i'm connected to

155
00:05:48,800 --> 00:05:50,880
with wi-fi to the network if you're

156
00:05:50,880 --> 00:05:52,800
connected through ethernet

157
00:05:52,800 --> 00:05:54,800
the cable is probably going to be around

158
00:05:54,800 --> 00:05:56,479
this one

159
00:05:56,479 --> 00:05:59,360
an ip address should look like this uh

160
00:05:59,360 --> 00:05:59,919
either

161
00:05:59,919 --> 00:06:03,039
192 168

162
00:06:03,039 --> 00:06:05,919
or 10 point something or a hundred point

163
00:06:05,919 --> 00:06:07,039
something

164
00:06:07,039 --> 00:06:11,280
this is ipv4 which is an old standard

165
00:06:11,280 --> 00:06:14,479
but there's also ipv6 which is a

166
00:06:14,479 --> 00:06:15,840
which is something that we're not gonna

167
00:06:15,840 --> 00:06:18,160
be touching now but it's it could be it

168
00:06:18,160 --> 00:06:20,319
could look something like this

169
00:06:20,319 --> 00:06:21,840
right now we're gonna be working with

170
00:06:21,840 --> 00:06:23,840
ipv4

171
00:06:23,840 --> 00:06:26,880
so it should look something like this

172
00:06:26,880 --> 00:06:30,800
depending on your router if you are on

173
00:06:30,800 --> 00:06:35,840
windows we can do this right now

174
00:06:36,240 --> 00:06:40,479
we can run ipconfig

175
00:06:41,199 --> 00:06:44,080
i as you can see ipv4 address you have

176
00:06:44,080 --> 00:06:45,680
this one as you can see it's the same

177
00:06:45,680 --> 00:06:46,080
one

178
00:06:46,080 --> 00:06:49,360
as we found out on the linux uh soup

179
00:06:49,360 --> 00:06:52,720
opera soup operating system

180
00:06:52,720 --> 00:06:56,800
so once we know um

181
00:06:56,800 --> 00:06:59,440
which ip address we have this is good

182
00:06:59,440 --> 00:07:00,560
because now we have we

183
00:07:00,560 --> 00:07:03,919
we of we could kind of guess the range

184
00:07:03,919 --> 00:07:07,199
of where the ips are going from

185
00:07:07,199 --> 00:07:10,240
and to usually the

186
00:07:10,240 --> 00:07:13,520
ranges come comes uh the

187
00:07:13,520 --> 00:07:16,880
these are these numbers are going to be

188
00:07:16,880 --> 00:07:19,039
the ones that are going to vary between

189
00:07:19,039 --> 00:07:20,240
devices

190
00:07:20,240 --> 00:07:22,000
for example these are probably going to

191
00:07:22,000 --> 00:07:24,160
be common on all of your network

192
00:07:24,160 --> 00:07:26,160
your devices maybe for example your

193
00:07:26,160 --> 00:07:28,240
phone kit could be this same number

194
00:07:28,240 --> 00:07:32,160
point 90 or 0.1 or 0.2

195
00:07:32,160 --> 00:07:35,199
etc it's probably not going to be 0.1 as

196
00:07:35,199 --> 00:07:36,160
i said because

197
00:07:36,160 --> 00:07:39,599
that's going to be the routers so

198
00:07:39,599 --> 00:07:44,000
in order to know which which which uh of

199
00:07:44,000 --> 00:07:46,400
which is the right the the the address

200
00:07:46,400 --> 00:07:48,319
of your raspberry pi

201
00:07:48,319 --> 00:07:52,319
you need to do a command which is nmap

202
00:07:52,319 --> 00:07:55,440
which is a which is a linux um

203
00:07:55,440 --> 00:07:58,400
firstly linux tool to map the network

204
00:07:58,400 --> 00:07:59,919
that you're on

205
00:07:59,919 --> 00:08:03,520
but it's not it's not only to linux

206
00:08:03,520 --> 00:08:07,440
i downloaded a a tool called

207
00:08:07,440 --> 00:08:10,720
send map or nmap for windows you can

208
00:08:10,720 --> 00:08:12,879
download it right now

209
00:08:12,879 --> 00:08:15,120
and you can and you can use this command

210
00:08:15,120 --> 00:08:16,400
to find out

211
00:08:16,400 --> 00:08:18,319
the network that the device is on your

212
00:08:18,319 --> 00:08:20,160
network

213
00:08:20,160 --> 00:08:23,680
here you can see that i put nmr sn

214
00:08:23,680 --> 00:08:29,680
same as here 192.168.100

215
00:08:29,680 --> 00:08:33,039
this is different from the example but

216
00:08:33,039 --> 00:08:34,719
it's the same as this one it has the

217
00:08:34,719 --> 00:08:36,799
same uh initiate

218
00:08:36,799 --> 00:08:40,240
the same number at the beginning

219
00:08:40,240 --> 00:08:42,880
this you need to put at the end um kinda

220
00:08:42,880 --> 00:08:43,599
mind

221
00:08:43,599 --> 00:08:45,920
mandatory this at the end means that

222
00:08:45,920 --> 00:08:46,880
it's going

223
00:08:46,880 --> 00:08:49,360
it's going to go through all the devices

224
00:08:49,360 --> 00:08:51,920
that are on this range

225
00:08:51,920 --> 00:08:53,600
this this is the address is going to

226
00:08:53,600 --> 00:08:56,080
look on the all the ranges of numbers

227
00:08:56,080 --> 00:08:58,160
and and and and devices that are going

228
00:08:58,160 --> 00:08:59,760
to be on the network

229
00:08:59,760 --> 00:09:01,839
so you can download this program and use

230
00:09:01,839 --> 00:09:02,880
this one

231
00:09:02,880 --> 00:09:04,399
at the beginning we're going to use the

232
00:09:04,399 --> 00:09:06,080
ubuntu one but i

233
00:09:06,080 --> 00:09:10,240
but uh but i i i noticed that it doesn't

234
00:09:10,240 --> 00:09:10,880
work

235
00:09:10,880 --> 00:09:15,200
on the on the windows subsystem

236
00:09:15,200 --> 00:09:18,320
you can also do this program the send

237
00:09:18,320 --> 00:09:19,120
map is really

238
00:09:19,120 --> 00:09:21,040
is really light so you can download it

239
00:09:21,040 --> 00:09:22,560
right now and it's probably going

240
00:09:22,560 --> 00:09:24,000
and you're probably going to do it with

241
00:09:24,000 --> 00:09:25,760
me so

242
00:09:25,760 --> 00:09:27,920
again i'm going to put the the program

243
00:09:27,920 --> 00:09:30,000
i'm going to hit scan

244
00:09:30,000 --> 00:09:32,959
it's going to ask me if for permission

245
00:09:32,959 --> 00:09:34,959
of the administrator kind

246
00:09:34,959 --> 00:09:36,560
and then i'm going to see every device

247
00:09:36,560 --> 00:09:38,480
that i have on my network

248
00:09:38,480 --> 00:09:40,000
here as you can see i can see the

249
00:09:40,000 --> 00:09:41,920
raspberry pi foundation

250
00:09:41,920 --> 00:09:44,480
note that if you use this command and

251
00:09:44,480 --> 00:09:46,080
you're on a linux computer

252
00:09:46,080 --> 00:09:49,120
you maybe need to use a sudo

253
00:09:49,120 --> 00:09:51,760
which is right really like this at the

254
00:09:51,760 --> 00:09:53,600
beginning of the comment because

255
00:09:53,600 --> 00:09:55,920
it's going to tell you all the all the

256
00:09:55,920 --> 00:09:57,600
addresses but it's not going to tell you

257
00:09:57,600 --> 00:10:00,720
the the host names

258
00:10:01,040 --> 00:10:02,640
this is the hostname of the raspberry pi

259
00:10:02,640 --> 00:10:04,079
that comes um

260
00:10:04,079 --> 00:10:07,920
from out of the box so as i can see this

261
00:10:07,920 --> 00:10:08,480
is the

262
00:10:08,480 --> 00:10:10,079
this is the the address for the

263
00:10:10,079 --> 00:10:12,640
raspberry pi

264
00:10:12,640 --> 00:10:15,920
um now i can do i can

265
00:10:15,920 --> 00:10:20,000
use ssh or vnc to

266
00:10:20,000 --> 00:10:23,600
to connect to the raspberry pi vnc

267
00:10:23,600 --> 00:10:24,880
is a program that i'm going to be using

268
00:10:24,880 --> 00:10:27,040
vnc viewer

269
00:10:27,040 --> 00:10:30,480
for this for use this and or for use the

270
00:10:30,480 --> 00:10:34,079
this ssh you need to ability

271
00:10:34,079 --> 00:10:37,440
the the option on the raspberry pi from

272
00:10:37,440 --> 00:10:40,640
the from the visual side

273
00:10:40,640 --> 00:10:44,480
or with the with the file in ssh

274
00:10:44,480 --> 00:10:47,279
that we did in the last class so i'm

275
00:10:47,279 --> 00:10:49,360
going to connect through ssh

276
00:10:49,360 --> 00:10:52,160
here on ubuntu while you guys maybe are

277
00:10:52,160 --> 00:10:52,880
downloading

278
00:10:52,880 --> 00:10:56,640
vnc viewer and sendmap

279
00:10:56,640 --> 00:11:01,600
so i'm going to hit ssh pi

280
00:11:01,600 --> 00:11:05,920
at let's copy the

281
00:11:05,920 --> 00:11:07,680
the ip address that we know that is from

282
00:11:07,680 --> 00:11:10,399
the raspberry pi

283
00:11:10,560 --> 00:11:14,959
and here so let's let's say

284
00:11:14,959 --> 00:11:16,959
the the parts of the structure of this

285
00:11:16,959 --> 00:11:18,720
command this is the command this is the

286
00:11:18,720 --> 00:11:19,920
one that makes the

287
00:11:19,920 --> 00:11:21,839
thing secure it's making a secure

288
00:11:21,839 --> 00:11:22,959
connection

289
00:11:22,959 --> 00:11:26,480
it's secure chill chalice as we said in

290
00:11:26,480 --> 00:11:27,519
the last class

291
00:11:27,519 --> 00:11:30,399
is where you can the interpreter of

292
00:11:30,399 --> 00:11:32,320
commands from linux

293
00:11:32,320 --> 00:11:36,240
this is the the uh the user that we're

294
00:11:36,240 --> 00:11:37,519
gonna be locked

295
00:11:37,519 --> 00:11:41,279
on so if if we wanna locked on root

296
00:11:41,279 --> 00:11:45,439
we can do something wait not like this

297
00:11:46,320 --> 00:11:49,680
but like this and any other user that

298
00:11:49,680 --> 00:11:50,480
you may have

299
00:11:50,480 --> 00:11:54,320
we're gonna use pi on this one at

300
00:11:54,320 --> 00:11:56,720
this means where where where the address

301
00:11:56,720 --> 00:11:57,440
is

302
00:11:57,440 --> 00:12:02,639
and you put the ip address if i do enter

303
00:12:03,279 --> 00:12:11,839
wait here sweet

304
00:12:18,000 --> 00:12:20,560
let's see if if it's going to let me

305
00:12:20,560 --> 00:12:21,279
meanwhile

306
00:12:21,279 --> 00:12:24,800
let's do this over here

307
00:12:24,800 --> 00:12:28,959
to see if dnc is going to work

308
00:12:36,639 --> 00:12:40,079
oh it changes it it changed i'm going to

309
00:12:40,079 --> 00:12:42,079
use now this ip that's probably why it

310
00:12:42,079 --> 00:12:44,560
was failing

311
00:12:44,560 --> 00:12:48,079
okay so it's 1a

312
00:12:49,680 --> 00:12:52,800
okay this is the error that gives

313
00:12:52,800 --> 00:12:54,720
usually when it's not the same ip

314
00:12:54,720 --> 00:12:56,639
address or it's not or is not

315
00:12:56,639 --> 00:13:00,639
uh um enabled the ssh

316
00:13:00,639 --> 00:13:02,959
connection refuse i'm going to use this

317
00:13:02,959 --> 00:13:04,079
one

318
00:13:04,079 --> 00:13:06,638
it is

319
00:13:11,120 --> 00:13:14,240
by the computer i'm going to look in the

320
00:13:14,240 --> 00:13:16,560
on the raspberry pi that i have to see

321
00:13:16,560 --> 00:13:20,959
if there's any issues

322
00:13:20,959 --> 00:13:24,479
things like this can happen guys

323
00:13:27,200 --> 00:13:29,760
so don't worry too much if something

324
00:13:29,760 --> 00:13:31,200
like this is not

325
00:13:31,200 --> 00:13:33,680
it's not working right now for example

326
00:13:33,680 --> 00:13:34,959
this is a very good example that is

327
00:13:34,959 --> 00:13:35,839
happening to me

328
00:13:35,839 --> 00:13:37,440
so i can teach so i can tell you guys

329
00:13:37,440 --> 00:13:49,839
what to do in this case

330
00:13:57,040 --> 00:14:02,240
okay i can see that now it's at 196.

331
00:14:02,240 --> 00:14:06,480
from my raspberry pi i can see that too

332
00:14:06,480 --> 00:14:09,519
okay there you go now i can now i can

333
00:14:09,519 --> 00:14:11,279
have the connection it's asking me for

334
00:14:11,279 --> 00:14:12,160
the password

335
00:14:12,160 --> 00:14:16,079
of the pi user

336
00:14:16,079 --> 00:14:20,638
is here this one i'm going to use the

337
00:14:21,199 --> 00:14:23,199
the the password that comes out of the

338
00:14:23,199 --> 00:14:24,560
box which is raspberry

339
00:14:24,560 --> 00:14:27,760
on on my newscaps so here

340
00:14:27,760 --> 00:14:30,079
i'm right now i'm locked on i can i can

341
00:14:30,079 --> 00:14:31,839
i can i can do commands right now

342
00:14:31,839 --> 00:14:34,959
and i can see whatever is on my on my on

343
00:14:34,959 --> 00:14:35,920
my home

344
00:14:35,920 --> 00:14:37,760
uh we're going to discuss commands in a

345
00:14:37,760 --> 00:14:40,480
bit so let's do this also with the with

346
00:14:40,480 --> 00:14:41,760
the vnc

347
00:14:41,760 --> 00:14:44,160
so you can so you can see also what i'm

348
00:14:44,160 --> 00:14:45,279
what i'm talking about

349
00:14:45,279 --> 00:14:48,160
well about this one

350
00:14:49,120 --> 00:14:52,399
oh wait um i forgot this was it is

351
00:14:52,399 --> 00:14:57,440
96. let's do this one

352
00:14:57,440 --> 00:14:59,440
okay so it's going to warn me i'm going

353
00:14:59,440 --> 00:15:00,639
to click continue

354
00:15:00,639 --> 00:15:02,320
it's going to ask me for the username

355
00:15:02,320 --> 00:15:04,000
and the and and uh

356
00:15:04,000 --> 00:15:08,720
and the password as i said raspberry

357
00:15:08,720 --> 00:15:12,320
here is this is the the

358
00:15:12,320 --> 00:15:14,399
the the password that comes out of the

359
00:15:14,399 --> 00:15:15,680
box

360
00:15:15,680 --> 00:15:19,199
hit okay and now i can see like it was

361
00:15:19,199 --> 00:15:21,600
like it is team viewer

362
00:15:21,600 --> 00:15:24,240
from my computer so this is where i'm

363
00:15:24,240 --> 00:15:25,120
going to be

364
00:15:25,120 --> 00:15:26,480
showing you whatever i do on the

365
00:15:26,480 --> 00:15:29,600
raspberry pi and the gui

366
00:15:29,600 --> 00:15:33,120
um let's show you first how to

367
00:15:33,120 --> 00:15:37,600
um how to enable the

368
00:15:39,199 --> 00:15:42,880
how to enable the ssh from the gui

369
00:15:42,880 --> 00:15:45,120
i i i told you in the last class how to

370
00:15:45,120 --> 00:15:46,399
do with a file

371
00:15:46,399 --> 00:15:49,600
here you can do it on interfaces

372
00:15:49,600 --> 00:15:53,040
and for vcn the teamviewer like

373
00:15:53,040 --> 00:15:56,720
program and for ssh it's over here

374
00:15:56,720 --> 00:15:59,759
you click they come disable by default

375
00:15:59,759 --> 00:16:01,519
and you click enable

376
00:16:01,519 --> 00:16:05,440
and also okay um remember this com

377
00:16:05,440 --> 00:16:07,600
this how you configure this because

378
00:16:07,600 --> 00:16:08,800
we're gonna use this

379
00:16:08,800 --> 00:16:10,639
on the next classes when we're talking

380
00:16:10,639 --> 00:16:14,880
about serial ports like i score c

381
00:16:14,880 --> 00:16:16,959
okay so there's a couple of a few

382
00:16:16,959 --> 00:16:18,079
options but we

383
00:16:18,079 --> 00:16:19,830
we're not gonna see them right now

384
00:16:19,830 --> 00:16:21,120
[Music]

385
00:16:21,120 --> 00:16:23,199
okay so right now as you can see i can

386
00:16:23,199 --> 00:16:25,199
see the

387
00:16:25,199 --> 00:16:29,120
my screen the my my raspberry pi screen

388
00:16:29,120 --> 00:16:32,800
and i also can be

389
00:16:32,800 --> 00:16:36,240
on the on the on the on the co

390
00:16:36,240 --> 00:16:39,519
on the console too here i'm connected

391
00:16:39,519 --> 00:16:43,120
both ways this is um this is possible

392
00:16:43,120 --> 00:16:43,680
because

393
00:16:43,680 --> 00:16:46,000
each time you create a set you you can

394
00:16:46,000 --> 00:16:46,880
be

395
00:16:46,880 --> 00:16:50,720
there there can be many sessions on the

396
00:16:50,720 --> 00:16:54,000
on linux so if i can

397
00:16:54,000 --> 00:16:57,040
open a command line here and i can have

398
00:16:57,040 --> 00:16:57,680
them both

399
00:16:57,680 --> 00:16:59,680
working for example i'm i'm here on the

400
00:16:59,680 --> 00:17:01,199
raspberry on the pi

401
00:17:01,199 --> 00:17:04,799
raspberry pi and i'm also over here

402
00:17:04,799 --> 00:17:08,640
also on the pi raspberry pi that's

403
00:17:08,640 --> 00:17:10,160
i'm just letting you know that that's

404
00:17:10,160 --> 00:17:11,760
possible

405
00:17:11,760 --> 00:17:14,880
so once we got that out

406
00:17:14,880 --> 00:17:18,559
and you got this figured out um

407
00:17:18,559 --> 00:17:21,039
we can go through and see the other

408
00:17:21,039 --> 00:17:21,919
things

409
00:17:21,919 --> 00:17:24,079
okay so again if you if you're having

410
00:17:24,079 --> 00:17:26,160
any trouble a good guy is the raspberry

411
00:17:26,160 --> 00:17:27,039
pi one

412
00:17:27,039 --> 00:17:30,000
um let's move this over here i've the

413
00:17:30,000 --> 00:17:31,360
raspberry pi guy

414
00:17:31,360 --> 00:17:34,640
um you can search raspberry pi remote

415
00:17:34,640 --> 00:17:35,440
access on google

416
00:17:35,440 --> 00:17:37,919
s and it's and it's really clear and and

417
00:17:37,919 --> 00:17:39,360
you can see that

418
00:17:39,360 --> 00:17:42,559
i i took i took um inspiration from that

419
00:17:42,559 --> 00:17:47,520
to use to make this

420
00:17:47,520 --> 00:17:48,880
if you're having any trouble learning

421
00:17:48,880 --> 00:17:50,640
step uh

422
00:17:50,640 --> 00:17:53,840
a google a google search can can can can

423
00:17:53,840 --> 00:17:56,640
can really can really help these are

424
00:17:56,640 --> 00:17:58,240
problems that are really common

425
00:17:58,240 --> 00:18:01,440
so no note that many people have

426
00:18:01,440 --> 00:18:03,600
had any problem on these steps so you

427
00:18:03,600 --> 00:18:04,960
can find there too

428
00:18:04,960 --> 00:18:08,080
again you enable ssh if you want to

429
00:18:08,080 --> 00:18:09,200
connect directly to

430
00:18:09,200 --> 00:18:13,039
ssh you either modify the interfaces

431
00:18:13,039 --> 00:18:15,360
on on the configuration that we saw over

432
00:18:15,360 --> 00:18:17,600
here

433
00:18:19,280 --> 00:18:22,640
wait um our last connection right here

434
00:18:22,640 --> 00:18:25,360
let's do that again

435
00:18:27,360 --> 00:18:29,840
let's do that

436
00:18:36,720 --> 00:18:40,480
okay probably change the ip again

437
00:18:40,480 --> 00:18:42,160
that that usually doesn't happen okay

438
00:18:42,160 --> 00:18:43,679
that's probably an

439
00:18:43,679 --> 00:18:45,039
issue unless me the ratio that i'm

440
00:18:45,039 --> 00:18:47,039
having right now so

441
00:18:47,039 --> 00:18:49,919
um you activate the ssh either through

442
00:18:49,919 --> 00:18:50,880
the gui

443
00:18:50,880 --> 00:18:54,000
or through the file that we saw last

444
00:18:54,000 --> 00:18:56,720
last week um

445
00:18:56,720 --> 00:19:00,559
you do you find the routers

446
00:19:00,559 --> 00:19:02,320
and you can do it through the menus of

447
00:19:02,320 --> 00:19:04,320
the router of your battery it this is

448
00:19:04,320 --> 00:19:07,039
this step is is only going to be

449
00:19:07,039 --> 00:19:09,919
possible if you know your router's um

450
00:19:09,919 --> 00:19:10,720
model

451
00:19:10,720 --> 00:19:12,320
you can find the model physically on

452
00:19:12,320 --> 00:19:14,080
your on your on your on your router

453
00:19:14,080 --> 00:19:16,400
and you can find the the stock

454
00:19:16,400 --> 00:19:18,880
configurations

455
00:19:18,880 --> 00:19:22,000
there are probably instructions online

456
00:19:22,000 --> 00:19:24,559
on how to access your router so you find

457
00:19:24,559 --> 00:19:25,200
the model

458
00:19:25,200 --> 00:19:27,600
you find you use google and then you go

459
00:19:27,600 --> 00:19:29,120
there

460
00:19:29,120 --> 00:19:31,440
you can also pin raspberry pi dot local

461
00:19:31,440 --> 00:19:32,240
local

462
00:19:32,240 --> 00:19:33,600
uh you can do that and it's going to

463
00:19:33,600 --> 00:19:35,520
tell you which is the ip address of the

464
00:19:35,520 --> 00:19:36,960
raspberry pi directly

465
00:19:36,960 --> 00:19:40,480
you can do this from the web uh

466
00:19:40,480 --> 00:19:44,160
from the ubuntu program of subsystem

467
00:19:44,160 --> 00:19:46,880
from on your windows computer or you can

468
00:19:46,880 --> 00:19:47,919
do it from the

469
00:19:47,919 --> 00:19:50,960
command line on mac or or

470
00:19:50,960 --> 00:19:54,880
linux you can use these these comments

471
00:19:54,880 --> 00:19:58,799
on windows and linux to

472
00:19:58,799 --> 00:20:02,480
to find uh to find which is your ip

473
00:20:02,480 --> 00:20:05,520
and then you can use that and put in a

474
00:20:05,520 --> 00:20:06,960
zero at the end

475
00:20:06,960 --> 00:20:09,760
so you can do a a full scan of your

476
00:20:09,760 --> 00:20:11,679
network

477
00:20:11,679 --> 00:20:15,919
um you do you do an ssh

478
00:20:15,919 --> 00:20:18,720
to your to raspberry pi or you do a vnc

479
00:20:18,720 --> 00:20:20,159
using vnc viewer

480
00:20:20,159 --> 00:20:22,000
which is something that is that that it

481
00:20:22,000 --> 00:20:25,520
comes stuck under on the raspberry pi

482
00:20:25,520 --> 00:20:28,880
so let's go let's let's go next basic

483
00:20:28,880 --> 00:20:29,600
commands

484
00:20:29,600 --> 00:20:32,240
uh this is something i'm fun that i'm

485
00:20:32,240 --> 00:20:33,840
that i'm going to put i'm going to be

486
00:20:33,840 --> 00:20:35,360
putting fun stuff

487
00:20:35,360 --> 00:20:38,080
around here so you can so you can see uh

488
00:20:38,080 --> 00:20:38,559
you

489
00:20:38,559 --> 00:20:40,240
you're going to understand ironically

490
00:20:40,240 --> 00:20:41,520
you're going to understand these these

491
00:20:41,520 --> 00:20:43,440
messages at the end of the class

492
00:20:43,440 --> 00:20:47,760
sorry today this class dxc

493
00:20:47,760 --> 00:20:49,679
let's run a basic a couple of basic

494
00:20:49,679 --> 00:20:50,799
commands let's

495
00:20:50,799 --> 00:20:52,400
let's connect again let's see if i have

496
00:20:52,400 --> 00:20:53,919
still have connection no i don't have

497
00:20:53,919 --> 00:20:55,120
connection

498
00:20:55,120 --> 00:21:02,000
okay let's see a second

499
00:21:02,000 --> 00:21:04,320
i'm doing now another another another a

500
00:21:04,320 --> 00:21:07,439
scan just in case

501
00:21:08,159 --> 00:21:13,360
one eight i'm going to do an ssh

502
00:21:14,840 --> 00:21:17,840
oh

503
00:21:18,080 --> 00:21:31,840
connection refuse

504
00:21:42,840 --> 00:21:44,559
1.99

505
00:21:44,559 --> 00:21:45,919
i'm going to see if i have any issues

506
00:21:45,919 --> 00:21:47,520
from my raspberry pi this is something

507
00:21:47,520 --> 00:21:48,400
that is just

508
00:21:48,400 --> 00:21:50,320
probably happening to me you shouldn't

509
00:21:50,320 --> 00:21:52,559
have any trouble

510
00:21:52,559 --> 00:21:54,559
even when when i was preparing this

511
00:21:54,559 --> 00:21:56,320
class um

512
00:21:56,320 --> 00:21:59,440
i wasn't having any issues

513
00:21:59,440 --> 00:22:02,320
right now as it always happened let's go

514
00:22:02,320 --> 00:22:04,879
it goes

515
00:22:05,360 --> 00:22:13,840
okay 1896.

516
00:22:15,200 --> 00:22:19,120
let me check if i disabled by mistake

517
00:22:19,120 --> 00:22:22,080
the ssh

518
00:22:23,679 --> 00:22:28,640
okay yeah i'm going to reboot my

519
00:22:29,760 --> 00:22:34,559
raspberry pi okay

520
00:22:35,120 --> 00:22:37,039
um so these are going to be the basics

521
00:22:37,039 --> 00:22:38,559
common that you see on the screen

522
00:22:38,559 --> 00:22:39,919
are going to be the basic comments that

523
00:22:39,919 --> 00:22:42,240
we're going to see right now after after

524
00:22:42,240 --> 00:22:43,600
that we're going to see the comment

525
00:22:43,600 --> 00:22:44,559
structure

526
00:22:44,559 --> 00:22:46,400
uh the command structure so you

527
00:22:46,400 --> 00:22:47,600
understand what are you doing

528
00:22:47,600 --> 00:22:50,240
and which part is it so you can know

529
00:22:50,240 --> 00:22:51,760
when when you're going to look

530
00:22:51,760 --> 00:22:54,000
for in on the internet up questions

531
00:22:54,000 --> 00:22:54,880
about

532
00:22:54,880 --> 00:22:57,200
each or if you need a command specific

533
00:22:57,200 --> 00:22:58,640
if you specifically

534
00:22:58,640 --> 00:23:03,919
for something you know uh the lingo

535
00:23:05,039 --> 00:23:10,320
so there my raspberry pi is rebooting

536
00:23:10,960 --> 00:23:13,520
password

537
00:23:14,240 --> 00:23:17,200
i have my raspberry pi um right side

538
00:23:17,200 --> 00:23:19,520
right by my side with a

539
00:23:19,520 --> 00:23:21,360
with a keyboard and a screen just in

540
00:23:21,360 --> 00:23:24,719
case something like this happened

541
00:23:26,400 --> 00:23:29,520
glad that i did this

542
00:23:29,679 --> 00:23:32,000
96 is saying me it's telling me that i

543
00:23:32,000 --> 00:23:33,360
have 96

544
00:23:33,360 --> 00:23:36,480
196 so let's try

545
00:23:36,480 --> 00:23:41,440
yes okay so let's do it over here

546
00:23:42,720 --> 00:23:45,039
okay there you go so we're gonna use the

547
00:23:45,039 --> 00:23:47,440
commands

548
00:23:47,520 --> 00:23:49,360
let me put this over here so you can see

549
00:23:49,360 --> 00:23:52,799
all the commands where we're doing them

550
00:23:53,520 --> 00:23:55,760
here

551
00:23:58,960 --> 00:24:02,840
hopefully you can see let me see if i

552
00:24:02,840 --> 00:24:05,840
can

553
00:24:20,400 --> 00:24:24,559
okay apparently i cannot i cannot um

554
00:24:24,559 --> 00:24:27,840
hopefully it's it looks well um if not

555
00:24:27,840 --> 00:24:28,880
i'm going to

556
00:24:28,880 --> 00:24:30,640
i'm probably going to use this let me

557
00:24:30,640 --> 00:24:32,640
let me see okay i can see it i can use

558
00:24:32,640 --> 00:24:34,000
this

559
00:24:34,000 --> 00:24:36,960
okay again doing this over from the

560
00:24:36,960 --> 00:24:38,720
anywhere in the world you can use this

561
00:24:38,720 --> 00:24:40,080
anywhere in the world

562
00:24:40,080 --> 00:24:43,279
or doing it from the oops

563
00:24:43,279 --> 00:24:46,480
or doing it from the from the vnc like

564
00:24:46,480 --> 00:24:47,120
or

565
00:24:47,120 --> 00:24:48,960
directly on the raspberry pi shouldn't

566
00:24:48,960 --> 00:24:50,720
be any difference between doing these

567
00:24:50,720 --> 00:24:51,760
comments that we're gonna see

568
00:24:51,760 --> 00:24:54,880
that we're gonna look uh in this class

569
00:24:54,880 --> 00:24:57,360
um there are some commands that are that

570
00:24:57,360 --> 00:24:59,520
are not gonna run if a gui

571
00:24:59,520 --> 00:25:03,360
the the process x11 is not initiated

572
00:25:03,360 --> 00:25:05,840
but those are very very very uh advanced

573
00:25:05,840 --> 00:25:06,640
commands

574
00:25:06,640 --> 00:25:08,480
so just letting you know that this

575
00:25:08,480 --> 00:25:09,840
basics command and the ones that we're

576
00:25:09,840 --> 00:25:10,400
going to be

577
00:25:10,400 --> 00:25:12,799
using today shouldn't be a problem to

578
00:25:12,799 --> 00:25:14,240
run in any

579
00:25:14,240 --> 00:25:17,840
cssh connection anywhere in the world

580
00:25:17,840 --> 00:25:20,320
here from my ubuntu subsystem computer

581
00:25:20,320 --> 00:25:21,360
on windows

582
00:25:21,360 --> 00:25:25,760
or on vnc using the the uh

583
00:25:25,760 --> 00:25:28,240
the the comma the command line directly

584
00:25:28,240 --> 00:25:29,919
from the raspberry pi

585
00:25:29,919 --> 00:25:33,360
so let's do it over here so man

586
00:25:33,360 --> 00:25:36,320
man this is going to be your first um

587
00:25:36,320 --> 00:25:37,039
your first

588
00:25:37,039 --> 00:25:38,880
uh command that you're gonna learn this

589
00:25:38,880 --> 00:25:40,400
is good because this is

590
00:25:40,400 --> 00:25:42,559
this is stand for manual so i'm going to

591
00:25:42,559 --> 00:25:44,000
do amendment

592
00:25:44,000 --> 00:25:45,600
which means i'm going to see the manual

593
00:25:45,600 --> 00:25:47,919
from the manual and interface to the

594
00:25:47,919 --> 00:25:49,919
online reference manuals

595
00:25:49,919 --> 00:25:55,200
this is going to to tell you um

596
00:25:55,200 --> 00:25:58,240
a little bit it has many parts so let's

597
00:25:58,240 --> 00:25:59,279
start with the name

598
00:25:59,279 --> 00:26:01,840
which is the demand diagnosis which is

599
00:26:01,840 --> 00:26:02,880
how how are they

600
00:26:02,880 --> 00:26:05,919
are they are they reading to

601
00:26:05,919 --> 00:26:08,960
description and so forth and so on

602
00:26:08,960 --> 00:26:11,679
so whenever you don't know what a

603
00:26:11,679 --> 00:26:12,960
command

604
00:26:12,960 --> 00:26:17,039
does or i also use also use it for

605
00:26:17,039 --> 00:26:19,919
for to see if i have a command a command

606
00:26:19,919 --> 00:26:21,039
or a program

607
00:26:21,039 --> 00:26:24,080
installed uh i

608
00:26:24,080 --> 00:26:28,159
use man and x program or tool or command

609
00:26:28,159 --> 00:26:30,400
these are base you can use it kind of

610
00:26:30,400 --> 00:26:32,159
interchangeably when you're talking

611
00:26:32,159 --> 00:26:35,279
about the command line because a tool uh

612
00:26:35,279 --> 00:26:38,400
it's it's uh you can use it

613
00:26:38,400 --> 00:26:39,760
and you can use it as a command and a

614
00:26:39,760 --> 00:26:41,520
command can be used as a tool and

615
00:26:41,520 --> 00:26:42,080
program

616
00:26:42,080 --> 00:26:45,520
etc so i'm going to do man ls

617
00:26:45,520 --> 00:26:47,600
it's going to give me the manual for the

618
00:26:47,600 --> 00:26:48,720
ls or list

619
00:26:48,720 --> 00:26:51,919
directory content here you can see that

620
00:26:51,919 --> 00:26:53,919
if i if i use the

621
00:26:53,919 --> 00:26:57,840
oops if i use the

622
00:26:57,840 --> 00:27:00,320
the the keys on my keyboard again i can

623
00:27:00,320 --> 00:27:01,279
go around

624
00:27:01,279 --> 00:27:03,360
and if i have if i have to quit the

625
00:27:03,360 --> 00:27:06,720
manual i can press q so

626
00:27:06,720 --> 00:27:09,360
let's go uh through the commands because

627
00:27:09,360 --> 00:27:09,919
uh

628
00:27:09,919 --> 00:27:11,840
i can see that we already have halfway

629
00:27:11,840 --> 00:27:13,120
through the class

630
00:27:13,120 --> 00:27:16,320
ls is a command so you can list the

631
00:27:16,320 --> 00:27:17,760
the the things that are in your

632
00:27:17,760 --> 00:27:20,159
directory your current directory

633
00:27:20,159 --> 00:27:22,000
which is where you are right now or your

634
00:27:22,000 --> 00:27:24,320
current folder

635
00:27:24,320 --> 00:27:27,200
folder from windows is known as a

636
00:27:27,200 --> 00:27:29,600
directory on linux

637
00:27:29,600 --> 00:27:33,760
cd is a command to go into a directory

638
00:27:33,760 --> 00:27:34,000
so

639
00:27:34,000 --> 00:27:35,760
for example if i wanted to go to

640
00:27:35,760 --> 00:27:37,039
documents i go i

641
00:27:37,039 --> 00:27:42,000
write cd documents

642
00:27:42,000 --> 00:27:44,960
press enter and now you can see that it

643
00:27:44,960 --> 00:27:49,120
changes over here and it says

644
00:27:49,120 --> 00:27:52,320
where i am right now this

645
00:27:52,320 --> 00:27:54,880
sign we're going we're going to see it

646
00:27:54,880 --> 00:27:56,799
i'm going to explain it in in a few

647
00:27:56,799 --> 00:28:00,639
uh slides later

648
00:28:01,840 --> 00:28:05,360
is to move um files

649
00:28:05,360 --> 00:28:07,760
from directories from directories to

650
00:28:07,760 --> 00:28:09,760
another directory so let's do

651
00:28:09,760 --> 00:28:12,559
let's go back

652
00:28:13,120 --> 00:28:16,799
and i'm going to move

653
00:28:16,799 --> 00:28:19,279
errors

654
00:28:19,840 --> 00:28:23,199
to documents

655
00:28:29,440 --> 00:28:32,080
oh um probably because i made errors

656
00:28:32,080 --> 00:28:33,840
with

657
00:28:33,840 --> 00:28:36,799
with uh with with that with another kind

658
00:28:36,799 --> 00:28:38,320
of permissions we're gonna see that tool

659
00:28:38,320 --> 00:28:39,840
in this class

660
00:28:39,840 --> 00:28:43,919
let's example dot txt i'm going to

661
00:28:43,919 --> 00:28:44,399
explain

662
00:28:44,399 --> 00:28:46,399
what dodge does in a bit i just want to

663
00:28:46,399 --> 00:28:47,679
prove

664
00:28:47,679 --> 00:28:51,840
what nv example

665
00:28:52,399 --> 00:28:54,959
documents

666
00:28:56,840 --> 00:28:59,840
oh

667
00:29:01,679 --> 00:29:04,880
okay let's see what kind of permissions

668
00:29:04,880 --> 00:29:12,559
does that have

669
00:29:12,559 --> 00:29:16,000
okay so we can use we can do

670
00:29:16,000 --> 00:29:18,960
we can do uh we can use move i don't

671
00:29:18,960 --> 00:29:19,279
know

672
00:29:19,279 --> 00:29:20,640
why it's not working on my computer

673
00:29:20,640 --> 00:29:23,120
right now but we cannot we can also use

674
00:29:23,120 --> 00:29:23,760
move to

675
00:29:23,760 --> 00:29:26,320
change the name of a file so you can use

676
00:29:26,320 --> 00:29:27,200
error

677
00:29:27,200 --> 00:29:30,480
txt move error txt no

678
00:29:30,480 --> 00:29:34,240
let's use example example txt

679
00:29:34,240 --> 00:29:38,799
to example exam dot txt

680
00:29:38,799 --> 00:29:42,720
when to ls you can see that it moved to

681
00:29:42,720 --> 00:29:46,080
to here um i changed the name using the

682
00:29:46,080 --> 00:29:47,679
move command

683
00:29:47,679 --> 00:29:50,720
cp isn't is to copy cp

684
00:29:50,720 --> 00:29:54,240
exam txt to uh

685
00:29:54,240 --> 00:29:57,679
example tsc so when i do a ls i list the

686
00:29:57,679 --> 00:29:58,320
commands

687
00:29:58,320 --> 00:30:02,240
i have errors example txt2

688
00:30:02,240 --> 00:30:07,200
so um echo

689
00:30:07,279 --> 00:30:09,919
it's just shadows whatever you say in

690
00:30:09,919 --> 00:30:11,039
the console

691
00:30:11,039 --> 00:30:15,919
so echo one

692
00:30:16,320 --> 00:30:19,360
is going to give you back a one

693
00:30:19,360 --> 00:30:23,840
touch is the comment that i just use so

694
00:30:25,520 --> 00:30:28,799
touch is used to make a file literally

695
00:30:28,799 --> 00:30:30,000
you can make a file

696
00:30:30,000 --> 00:30:33,600
i can call them a test

697
00:30:34,799 --> 00:30:38,320
here test touch

698
00:30:38,320 --> 00:30:40,640
i can do it with an extension or without

699
00:30:40,640 --> 00:30:43,360
the extension

700
00:30:45,600 --> 00:30:51,200
and you can use this

701
00:30:51,200 --> 00:30:54,159
okay so you can use it you can use it to

702
00:30:54,159 --> 00:30:54,640
create

703
00:30:54,640 --> 00:30:56,960
files

704
00:30:57,919 --> 00:31:00,559
okay so as you can see i'm going to

705
00:31:00,559 --> 00:31:05,840
throw an ls

706
00:31:07,519 --> 00:31:12,720
um so you can see example exam etc

707
00:31:12,720 --> 00:31:16,640
um let's go to mkdir mkdir is good to

708
00:31:16,640 --> 00:31:18,960
make f my make directory so i'm going to

709
00:31:18,960 --> 00:31:20,159
make a folder

710
00:31:20,159 --> 00:31:23,760
the slash directory i'm going to make

711
00:31:23,760 --> 00:31:32,000
example directory

712
00:31:32,000 --> 00:31:35,440
and to read whatever i have

713
00:31:35,440 --> 00:31:39,200
on any of my txts

714
00:31:39,440 --> 00:31:42,960
um i can use cap so

715
00:31:42,960 --> 00:31:47,600
cat error txt

716
00:31:47,600 --> 00:31:52,000
right now oh wait cat

717
00:31:52,080 --> 00:31:56,000
errors dxe okay this is what it is

718
00:31:56,000 --> 00:31:59,279
written on this file

719
00:31:59,279 --> 00:32:04,159
um so history history is a command

720
00:32:04,159 --> 00:32:06,159
to see which art which commands have you

721
00:32:06,159 --> 00:32:09,760
thrown before that

722
00:32:09,760 --> 00:32:13,039
and and if they have numbers

723
00:32:13,039 --> 00:32:16,320
uh because of a reason you can

724
00:32:16,320 --> 00:32:17,919
if you have a command that you want to

725
00:32:17,919 --> 00:32:20,320
repeat for maybe it's more complicated

726
00:32:20,320 --> 00:32:21,440
than these ones

727
00:32:21,440 --> 00:32:23,919
you can you can do them again for

728
00:32:23,919 --> 00:32:25,600
example let's let's repeat

729
00:32:25,600 --> 00:32:29,600
this command the five three

730
00:32:29,760 --> 00:32:33,360
one five three as you can see

731
00:32:33,360 --> 00:32:35,200
it repeated the command and it repeated

732
00:32:35,200 --> 00:32:38,159
the the answer

733
00:32:38,320 --> 00:32:42,399
um mram is for deleting

734
00:32:42,399 --> 00:32:44,880
so let's delete the errors file if if

735
00:32:44,880 --> 00:32:47,679
it's going to let me

736
00:32:47,840 --> 00:32:50,480
we don't have any anymore here and now

737
00:32:50,480 --> 00:32:52,720
it's not here

738
00:32:52,720 --> 00:32:56,159
um so yeah so far hopefully we're good

739
00:32:56,159 --> 00:32:57,600
you can see if you have any any

740
00:32:57,600 --> 00:32:59,279
questions about how to do any any of

741
00:32:59,279 --> 00:33:00,240
these comments

742
00:33:00,240 --> 00:33:02,880
you can throw them uh on the q a or on

743
00:33:02,880 --> 00:33:04,799
the on the i o page

744
00:33:04,799 --> 00:33:09,360
you can this pro this ram works on files

745
00:33:09,360 --> 00:33:11,679
if you want to delete a directory you

746
00:33:11,679 --> 00:33:14,720
need to put something called flag

747
00:33:14,720 --> 00:33:17,760
which is we're gonna be look uh

748
00:33:17,760 --> 00:33:19,760
oh okay first we're going to we're going

749
00:33:19,760 --> 00:33:20,880
to see how to manage

750
00:33:20,880 --> 00:33:22,720
managing the terminal there there's

751
00:33:22,720 --> 00:33:24,159
there's a couple of things

752
00:33:24,159 --> 00:33:25,840
that you need to know for example right

753
00:33:25,840 --> 00:33:28,320
now i have the commands that i've thrown

754
00:33:28,320 --> 00:33:31,440
i can do a command called clear and it

755
00:33:31,440 --> 00:33:33,200
and it deletes everything that i have on

756
00:33:33,200 --> 00:33:35,039
my on my

757
00:33:35,039 --> 00:33:37,440
on my screen on the command line if you

758
00:33:37,440 --> 00:33:39,360
have if you want to auto complete

759
00:33:39,360 --> 00:33:43,600
for example cd to enter a directory

760
00:33:43,600 --> 00:33:47,440
you go cd docu and then you press tab

761
00:33:47,440 --> 00:33:50,559
and it's going automatically um auto

762
00:33:50,559 --> 00:33:51,440
completed

763
00:33:51,440 --> 00:33:52,880
this is really good because sometimes

764
00:33:52,880 --> 00:33:54,720
you want to go inside of a folder then

765
00:33:54,720 --> 00:33:56,320
inside of a folder and then you just

766
00:33:56,320 --> 00:33:59,200
press the first few letters uh notice

767
00:33:59,200 --> 00:34:00,320
that

768
00:34:00,320 --> 00:34:03,519
this the command line is case sensitive

769
00:34:03,519 --> 00:34:05,840
this is very important this is why many

770
00:34:05,840 --> 00:34:06,799
programs do the same

771
00:34:06,799 --> 00:34:09,839
or the many things from linux uh from

772
00:34:09,839 --> 00:34:10,239
the

773
00:34:10,239 --> 00:34:12,639
from the file system are doesn't have

774
00:34:12,639 --> 00:34:14,560
caps

775
00:34:14,560 --> 00:34:17,839
so yeah uh we already saw the how to the

776
00:34:17,839 --> 00:34:19,119
command

777
00:34:19,119 --> 00:34:22,399
so cd

778
00:34:22,399 --> 00:34:26,320
as you can see if i do an ls flag

779
00:34:26,320 --> 00:34:29,599
la i'm going to see everything listed

780
00:34:29,599 --> 00:34:30,079
this

781
00:34:30,079 --> 00:34:33,199
this is l means for for list

782
00:34:33,199 --> 00:34:36,320
so it's going to throw it on a

783
00:34:36,320 --> 00:34:39,679
as a list output as you can see

784
00:34:39,679 --> 00:34:42,879
not only are the program that the files

785
00:34:42,879 --> 00:34:45,199
that directories and that we already saw

786
00:34:45,199 --> 00:34:46,879
like documents and the files that we

787
00:34:46,879 --> 00:34:48,079
created from example

788
00:34:48,079 --> 00:34:50,239
to exam we also have these two

789
00:34:50,239 --> 00:34:51,679
directories

790
00:34:51,679 --> 00:34:54,879
dot dot and dot dot means

791
00:34:54,879 --> 00:34:58,640
here in linux and dot dot means

792
00:34:58,640 --> 00:35:01,680
the directory from before which is the

793
00:35:01,680 --> 00:35:04,720
pattern of the of of this folder

794
00:35:04,720 --> 00:35:06,960
if you go if we go for example let's do

795
00:35:06,960 --> 00:35:08,640
a clear

796
00:35:08,640 --> 00:35:12,078
if we go cd downloads

797
00:35:12,400 --> 00:35:14,160
we are on downloads right now right as

798
00:35:14,160 --> 00:35:15,440
you can see here

799
00:35:15,440 --> 00:35:19,359
if we want to go back we do cd dot dot

800
00:35:19,359 --> 00:35:21,520
and then we go to the parent one which

801
00:35:21,520 --> 00:35:23,760
is this one

802
00:35:23,760 --> 00:35:26,800
um you can throw commands uh

803
00:35:26,800 --> 00:35:30,000
with that semicolon in the middle so

804
00:35:30,000 --> 00:35:32,480
they can they can do uh they can run

805
00:35:32,480 --> 00:35:33,520
separately

806
00:35:33,520 --> 00:35:38,800
for example echo one semicolon

807
00:35:38,800 --> 00:35:41,280
echo

808
00:35:41,839 --> 00:35:44,880
two and the n is going to run

809
00:35:44,880 --> 00:35:48,880
on order first firstly the first one and

810
00:35:48,880 --> 00:35:50,560
secondly the second one

811
00:35:50,560 --> 00:35:54,720
and the last one means it means this

812
00:35:54,720 --> 00:35:58,240
this means where you are right now which

813
00:35:58,240 --> 00:36:00,960
directory you're right now

814
00:36:00,960 --> 00:36:04,560
there's a pro there's a a a command

815
00:36:04,560 --> 00:36:06,720
program called pwd which is going to

816
00:36:06,720 --> 00:36:08,320
tell you where you are right now

817
00:36:08,320 --> 00:36:10,480
if i do it it's going to tell you home

818
00:36:10,480 --> 00:36:13,359
pi this means home

819
00:36:13,359 --> 00:36:16,480
so if you are on cd um

820
00:36:16,480 --> 00:36:19,040
documents

821
00:36:19,760 --> 00:36:22,560
let's see if i have okay let's do that

822
00:36:22,560 --> 00:36:24,799
um

823
00:36:24,839 --> 00:36:26,079
cd

824
00:36:26,079 --> 00:36:29,200
okay now we are two directories in

825
00:36:29,200 --> 00:36:31,680
what about if one go back directly into

826
00:36:31,680 --> 00:36:32,240
the home

827
00:36:32,240 --> 00:36:35,599
and now do the cd dot dot couple times

828
00:36:35,599 --> 00:36:38,720
we do cd and define and uh

829
00:36:38,720 --> 00:36:40,640
and the home signal and you're going

830
00:36:40,640 --> 00:36:43,119
straight to home

831
00:36:43,119 --> 00:36:46,800
pwd is a command and also a a

832
00:36:46,800 --> 00:36:49,359
global variable which means that you can

833
00:36:49,359 --> 00:36:50,000
call the

834
00:36:50,000 --> 00:36:55,839
global variable called pwd

835
00:36:56,960 --> 00:36:59,839
or echo

836
00:37:01,359 --> 00:37:05,680
pwd which is going to tell you

837
00:37:05,680 --> 00:37:07,760
what the variable contains which is the

838
00:37:07,760 --> 00:37:08,800
direction we are

839
00:37:08,800 --> 00:37:12,079
in right now the path

840
00:37:12,160 --> 00:37:14,320
hopefully everything is being is being

841
00:37:14,320 --> 00:37:17,040
clear so far

842
00:37:17,040 --> 00:37:18,800
and we have okay we have more people

843
00:37:18,800 --> 00:37:20,079
right now so

844
00:37:20,079 --> 00:37:22,800
the structure of the command usually

845
00:37:22,800 --> 00:37:25,680
you'll have one command

846
00:37:25,680 --> 00:37:28,480
then a couple or a single flag which is

847
00:37:28,480 --> 00:37:29,119
uh

848
00:37:29,119 --> 00:37:32,880
separated from one uh line or

849
00:37:32,880 --> 00:37:36,320
or yeah a line or two

850
00:37:36,320 --> 00:37:38,960
depending on what type of flags are you

851
00:37:38,960 --> 00:37:40,480
going to be using

852
00:37:40,480 --> 00:37:43,520
for example if i if i do man

853
00:37:43,520 --> 00:37:48,480
ls you can see that

854
00:37:48,960 --> 00:37:52,240
you can use a or slash sl or

855
00:37:52,240 --> 00:37:56,240
or barbar all which are basically the

856
00:37:56,240 --> 00:37:56,640
same

857
00:37:56,640 --> 00:38:01,920
you can do ls a ls

858
00:38:02,880 --> 00:38:06,160
oh i use

859
00:38:06,160 --> 00:38:08,640
you can also to clean that your your

860
00:38:08,640 --> 00:38:09,200
your

861
00:38:09,200 --> 00:38:11,680
your command line you can use ctrl l

862
00:38:11,680 --> 00:38:13,839
just for you to know this is

863
00:38:13,839 --> 00:38:17,280
a handy uh trick so i like

864
00:38:17,280 --> 00:38:20,400
the the the benefit or of using this

865
00:38:20,400 --> 00:38:20,960
type of

866
00:38:20,960 --> 00:38:24,400
uh flags is that you can you can

867
00:38:24,400 --> 00:38:27,440
stack them for example ls

868
00:38:27,440 --> 00:38:31,200
a l which means all meaning that there

869
00:38:31,200 --> 00:38:31,680
are

870
00:38:31,680 --> 00:38:33,920
files that are probably hidden that are

871
00:38:33,920 --> 00:38:35,520
not showing if you're only using

872
00:38:35,520 --> 00:38:39,839
l you can see there's no any hidden

873
00:38:39,839 --> 00:38:40,640
files

874
00:38:40,640 --> 00:38:44,160
but once you use ls al

875
00:38:44,160 --> 00:38:46,560
then the one with the points means they

876
00:38:46,560 --> 00:38:47,359
are hidden

877
00:38:47,359 --> 00:38:50,480
from the from any normal search and now

878
00:38:50,480 --> 00:38:51,839
you can see them because i

879
00:38:51,839 --> 00:38:54,480
i i said you need to show them all and

880
00:38:54,480 --> 00:38:56,320
list them

881
00:38:56,320 --> 00:38:59,520
so so

882
00:38:59,520 --> 00:39:01,520
here also are the targets or the

883
00:39:01,520 --> 00:39:02,640
arguments

884
00:39:02,640 --> 00:39:05,920
which means what the what

885
00:39:05,920 --> 00:39:08,560
the command is going to apply to if i'm

886
00:39:08,560 --> 00:39:09,920
going to do an ls

887
00:39:09,920 --> 00:39:13,119
uh dev def or at efc

888
00:39:13,119 --> 00:39:16,160
let's do this right now

889
00:39:17,599 --> 00:39:21,119
that slash

890
00:39:21,119 --> 00:39:25,520
yet c okay

891
00:39:26,240 --> 00:39:29,359
right now you can see that they it gave

892
00:39:29,359 --> 00:39:31,520
me

893
00:39:32,800 --> 00:39:36,480
the both answers here from etc

894
00:39:36,480 --> 00:39:40,960
here downwards and here for

895
00:39:41,040 --> 00:39:44,720
death done everything

896
00:39:44,720 --> 00:39:48,480
is here let me clean my thing

897
00:39:48,480 --> 00:39:51,040
okay there you go so this is the basic

898
00:39:51,040 --> 00:39:53,839
structure of a coma

899
00:39:53,839 --> 00:39:57,359
now some medium commands pwd we already

900
00:39:57,359 --> 00:39:59,440
saw it

901
00:39:59,440 --> 00:40:01,520
which it tells us where we are right now

902
00:40:01,520 --> 00:40:02,800
this home

903
00:40:02,800 --> 00:40:06,800
pi for the the user pi and this

904
00:40:06,800 --> 00:40:10,560
are the same so you can say cd

905
00:40:10,560 --> 00:40:15,760
home pi or cd

906
00:40:15,760 --> 00:40:17,119
and it's probably going to take you the

907
00:40:17,119 --> 00:40:20,640
same the same the same route

908
00:40:20,640 --> 00:40:24,000
uh grab is a favorite a favorite comment

909
00:40:24,000 --> 00:40:26,880
of mine if we're gonna know if this is

910
00:40:26,880 --> 00:40:27,280
for

911
00:40:27,280 --> 00:40:30,800
like um searching things

912
00:40:30,800 --> 00:40:34,000
from a command for example let's

913
00:40:34,000 --> 00:40:38,800
use history again

914
00:40:38,800 --> 00:40:41,680
i want to find the time that i used uh

915
00:40:41,680 --> 00:40:42,000
the

916
00:40:42,000 --> 00:40:46,000
clear command or no the touch command

917
00:40:46,000 --> 00:40:49,599
to see this i'm going to use ls

918
00:40:49,599 --> 00:40:53,200
no history use pipe

919
00:40:53,200 --> 00:40:54,960
i'm going to explain what a pipe is

920
00:40:54,960 --> 00:40:56,319
later but

921
00:40:56,319 --> 00:40:59,359
bear with me on this one you scrap

922
00:40:59,359 --> 00:41:01,440
and then put the keyword that we're

923
00:41:01,440 --> 00:41:02,560
going to be looking for

924
00:41:02,560 --> 00:41:05,920
in this case touch and it's going to

925
00:41:05,920 --> 00:41:07,280
give me as a result

926
00:41:07,280 --> 00:41:10,079
not the long answer from the full common

927
00:41:10,079 --> 00:41:12,079
history

928
00:41:12,079 --> 00:41:15,599
but the instances where the

929
00:41:15,599 --> 00:41:19,280
the query or the keyword that we put is

930
00:41:19,280 --> 00:41:22,079
is presented on the output from this

931
00:41:22,079 --> 00:41:23,359
command

932
00:41:23,359 --> 00:41:25,839
so here it even says the number the

933
00:41:25,839 --> 00:41:26,480
number

934
00:41:26,480 --> 00:41:28,160
it gave me the whole line this is

935
00:41:28,160 --> 00:41:30,480
something that that linux does which is

936
00:41:30,480 --> 00:41:31,839
really good

937
00:41:31,839 --> 00:41:34,720
um so yes if i want to repeat any

938
00:41:34,720 --> 00:41:36,000
command i can just do

939
00:41:36,000 --> 00:41:39,440
uh again the exclamation point

940
00:41:39,440 --> 00:41:43,760
and the number let's do um

941
00:41:44,160 --> 00:41:49,680
148. oh no

942
00:41:49,680 --> 00:41:53,680
148 46 i'm sorry

943
00:41:53,680 --> 00:41:56,079
okay so i just created an example txt on

944
00:41:56,079 --> 00:41:57,200
the desktop

945
00:41:57,200 --> 00:42:00,319
okay this was my by mistake but uh it is

946
00:42:00,319 --> 00:42:02,079
good because we don't have an example

947
00:42:02,079 --> 00:42:05,040
txt there we can see it over here

948
00:42:05,040 --> 00:42:06,079
example

949
00:42:06,079 --> 00:42:09,200
tx over here there you go

950
00:42:09,200 --> 00:42:12,160
so if you want to go home we do this or

951
00:42:12,160 --> 00:42:14,079
home

952
00:42:14,079 --> 00:42:17,680
pi now we're home again

953
00:42:17,680 --> 00:42:19,920
you understand this better once we have

954
00:42:19,920 --> 00:42:21,680
we we get to the point of the

955
00:42:21,680 --> 00:42:24,079
file hierarchy which you're gonna know

956
00:42:24,079 --> 00:42:24,880
what the

957
00:42:24,880 --> 00:42:29,200
the the the memory or the the hard disk

958
00:42:29,200 --> 00:42:31,599
or the operating system files are

959
00:42:31,599 --> 00:42:32,640
organized

960
00:42:32,640 --> 00:42:36,000
are organized i mean head and tail which

961
00:42:36,000 --> 00:42:38,880
are it's going to tell me the beginning

962
00:42:38,880 --> 00:42:41,520
or or the end of a program of the

963
00:42:41,520 --> 00:42:44,000
of a file for example let's go to

964
00:42:44,000 --> 00:42:45,920
desktop which i have a couple of

965
00:42:45,920 --> 00:42:48,319
programs let's do cad which is for

966
00:42:48,319 --> 00:42:50,160
reading a file which we didn't use

967
00:42:50,160 --> 00:42:51,599
before actually

968
00:42:51,599 --> 00:42:53,280
and let's do this and it's going to tell

969
00:42:53,280 --> 00:42:54,640
me what is

970
00:42:54,640 --> 00:42:59,359
on this program okay

971
00:42:59,359 --> 00:43:01,920
so what if i just as you can see it's

972
00:43:01,920 --> 00:43:02,720
filled my

973
00:43:02,720 --> 00:43:05,760
my full screen my my my entire common

974
00:43:05,760 --> 00:43:06,400
line screen

975
00:43:06,400 --> 00:43:07,920
and i just want to see the beginning so

976
00:43:07,920 --> 00:43:09,520
i can do head

977
00:43:09,520 --> 00:43:12,800
um bluetooth and you know

978
00:43:12,800 --> 00:43:14,720
only going to show me the few lines in

979
00:43:14,720 --> 00:43:16,800
the beginning you can use some flags

980
00:43:16,800 --> 00:43:20,160
to to um

981
00:43:20,160 --> 00:43:24,000
to say how many lines do you want to see

982
00:43:24,000 --> 00:43:26,000
and also tail which is going to show you

983
00:43:26,000 --> 00:43:28,240
that the end of it

984
00:43:28,240 --> 00:43:31,280
here this is the end

985
00:43:31,280 --> 00:43:34,000
of the file

986
00:43:34,400 --> 00:43:37,119
top which is something like the program

987
00:43:37,119 --> 00:43:37,440
uh

988
00:43:37,440 --> 00:43:39,520
the control center from for windows

989
00:43:39,520 --> 00:43:41,359
which it tells you the amount of

990
00:43:41,359 --> 00:43:44,800
um amount of processing power

991
00:43:44,800 --> 00:43:47,920
which programs are using it who is using

992
00:43:47,920 --> 00:43:48,319
this

993
00:43:48,319 --> 00:43:51,040
this this or activated this program the

994
00:43:51,040 --> 00:43:52,720
time that is running on et cetera et

995
00:43:52,720 --> 00:43:54,960
cetera et etcetera

996
00:43:54,960 --> 00:43:56,880
uh and get it this is not a program that

997
00:43:56,880 --> 00:43:59,280
we have on

998
00:43:59,280 --> 00:44:01,599
on on raspberry pi but it's on the

999
00:44:01,599 --> 00:44:02,800
window on the

1000
00:44:02,800 --> 00:44:05,920
subsystem of linux which is like an

1001
00:44:05,920 --> 00:44:08,560
editor like a notepad i think we have

1002
00:44:08,560 --> 00:44:09,119
nano

1003
00:44:09,119 --> 00:44:12,880
yeah we have nano so we can do nano uh

1004
00:44:12,880 --> 00:44:16,960
uh test test file

1005
00:44:18,319 --> 00:44:22,319
file txt or no no we created a file

1006
00:44:22,319 --> 00:44:24,319
called example right yeah example so

1007
00:44:24,319 --> 00:44:26,079
let's edit that

1008
00:44:26,079 --> 00:44:29,200
that file notice that i did an ls

1009
00:44:29,200 --> 00:44:31,200
to know where i am or which files i have

1010
00:44:31,200 --> 00:44:32,800
there and

1011
00:44:32,800 --> 00:44:35,280
i did a tab to auto complete the name of

1012
00:44:35,280 --> 00:44:36,000
the program

1013
00:44:36,000 --> 00:44:38,640
or the argument that nano is taking it

1014
00:44:38,640 --> 00:44:41,279
hit enter

1015
00:44:42,480 --> 00:44:45,599
let me see if we take it

1016
00:44:47,760 --> 00:44:51,839
okay i don't think it's taking it

1017
00:44:54,720 --> 00:44:56,880
okay so let's let's try it again if not

1018
00:44:56,880 --> 00:44:59,119
we're going to use another

1019
00:44:59,119 --> 00:45:02,720
example okay there you go

1020
00:45:02,720 --> 00:45:06,079
so now i can write something echo

1021
00:45:06,079 --> 00:45:10,240
one um echo hello

1022
00:45:10,240 --> 00:45:13,680
hello now we're gonna we're going to

1023
00:45:13,680 --> 00:45:15,040
save it

1024
00:45:15,040 --> 00:45:19,839
this is for saving this

1025
00:45:21,680 --> 00:45:25,280
x um yes i'm going i want to save it

1026
00:45:25,280 --> 00:45:25,760
then

1027
00:45:25,760 --> 00:45:28,319
enter and then it should be saved how do

1028
00:45:28,319 --> 00:45:29,040
we know

1029
00:45:29,040 --> 00:45:31,520
that we wrote that we wrote i use the

1030
00:45:31,520 --> 00:45:34,720
command cat to read it

1031
00:45:35,119 --> 00:45:38,480
here here it is

1032
00:45:38,640 --> 00:45:41,680
so yes let's continue

1033
00:45:41,680 --> 00:45:46,000
with more commands kill command

1034
00:45:47,440 --> 00:45:50,240
let's do these couple ones so if we go

1035
00:45:50,240 --> 00:45:52,160
to the vnc

1036
00:45:52,160 --> 00:45:55,040
let's use this one right now as you can

1037
00:45:55,040 --> 00:45:56,640
see i have another terminal

1038
00:45:56,640 --> 00:46:01,839
over here let me open a program called

1039
00:46:03,040 --> 00:46:05,680
on yeah let's use genie i want to kill

1040
00:46:05,680 --> 00:46:06,400
that program

1041
00:46:06,400 --> 00:46:09,440
but from the common line

1042
00:46:09,440 --> 00:46:13,200
what do i do first of all i use stop

1043
00:46:13,200 --> 00:46:17,200
to see where the program is

1044
00:46:17,280 --> 00:46:21,839
let's see if i have it or here

1045
00:46:24,319 --> 00:46:26,400
again we know it's called genie we're

1046
00:46:26,400 --> 00:46:27,599
going to look for

1047
00:46:27,599 --> 00:46:30,160
it here

1048
00:46:32,640 --> 00:46:34,960
as you can see it's moving so what i can

1049
00:46:34,960 --> 00:46:35,839
do

1050
00:46:35,839 --> 00:46:38,880
is doing the grep command to to get that

1051
00:46:38,880 --> 00:46:40,240
line

1052
00:46:40,240 --> 00:46:43,359
once taken so i can do top

1053
00:46:43,359 --> 00:46:47,200
do the pipe then do grab and then do

1054
00:46:47,200 --> 00:46:51,040
search search for genie

1055
00:46:52,000 --> 00:46:54,160
if it's not on the first page it's

1056
00:46:54,160 --> 00:46:55,520
probably going to take a while what i

1057
00:46:55,520 --> 00:46:56,000
like to do

1058
00:46:56,000 --> 00:46:58,720
is click on the program so it goes up on

1059
00:46:58,720 --> 00:46:59,599
usage

1060
00:46:59,599 --> 00:47:04,160
and it shows then i go back i cancel

1061
00:47:04,160 --> 00:47:06,800
and then as you can see i have here i

1062
00:47:06,800 --> 00:47:10,160
have what i need which is the pid

1063
00:47:10,160 --> 00:47:12,079
this is needed for the for the kill

1064
00:47:12,079 --> 00:47:13,599
command so i can do

1065
00:47:13,599 --> 00:47:17,600
kill 12 42

1066
00:47:17,600 --> 00:47:19,040
[Music]

1067
00:47:19,040 --> 00:47:21,040
and there i killed the process that i

1068
00:47:21,040 --> 00:47:23,040
was running genie on

1069
00:47:23,040 --> 00:47:25,200
awk i'm not going to give you an example

1070
00:47:25,200 --> 00:47:28,240
because aki's also is so complex that is

1071
00:47:28,240 --> 00:47:31,440
um it can be easy there's

1072
00:47:31,440 --> 00:47:34,480
what i mean is you can go really complex

1073
00:47:34,480 --> 00:47:38,640
this is for word or or or or searches

1074
00:47:38,640 --> 00:47:40,240
for example if you want to have this

1075
00:47:40,240 --> 00:47:41,839
line but you don't need

1076
00:47:41,839 --> 00:47:44,559
uh the 20 the oh you only need the the

1077
00:47:44,559 --> 00:47:47,200
num the pid which is the process id

1078
00:47:47,200 --> 00:47:49,680
the who is running the user and the

1079
00:47:49,680 --> 00:47:50,720
command

1080
00:47:50,720 --> 00:47:52,880
there's a there's there's a way you can

1081
00:47:52,880 --> 00:47:54,640
do this command so it can gives you

1082
00:47:54,640 --> 00:47:58,319
these three this th only these

1083
00:47:58,319 --> 00:48:00,880
three uh values just as a result from

1084
00:48:00,880 --> 00:48:02,720
the from from their command

1085
00:48:02,720 --> 00:48:05,280
so know that sudo is something that

1086
00:48:05,280 --> 00:48:07,200
you've probably seen if you ever touch a

1087
00:48:07,200 --> 00:48:10,480
raspberry pi um it's a program that

1088
00:48:10,480 --> 00:48:14,000
makes you uh temporarily

1089
00:48:14,000 --> 00:48:17,920
have um have root

1090
00:48:17,920 --> 00:48:21,680
access and sue is is for changing the

1091
00:48:21,680 --> 00:48:22,559
user

1092
00:48:22,559 --> 00:48:24,720
so if if i want to create something like

1093
00:48:24,720 --> 00:48:27,200
um let's do sudo

1094
00:48:27,200 --> 00:48:29,440
let me do an ls which we should have an

1095
00:48:29,440 --> 00:48:31,280
example txt

1096
00:48:31,280 --> 00:48:34,880
so let's do a touch a

1097
00:48:39,760 --> 00:48:43,200
so we can know it's a different one txt

1098
00:48:43,200 --> 00:48:47,440
so if we do ls a l

1099
00:48:47,440 --> 00:48:50,960
and we look for the examples one

1100
00:48:50,960 --> 00:48:54,400
uh here there you go so when we created

1101
00:48:54,400 --> 00:48:55,280
the touch

1102
00:48:55,280 --> 00:48:58,960
the the the user that run it which is a

1103
00:48:58,960 --> 00:49:01,680
yeah those are the users and the group

1104
00:49:01,680 --> 00:49:02,000
the

1105
00:49:02,000 --> 00:49:03,920
user that created it was pi because i

1106
00:49:03,920 --> 00:49:06,400
was just using touch and it was running

1107
00:49:06,400 --> 00:49:07,839
here

1108
00:49:07,839 --> 00:49:10,079
but once i did the pseudo with the

1109
00:49:10,079 --> 00:49:11,680
example surah

1110
00:49:11,680 --> 00:49:14,720
it became from the root so it gave

1111
00:49:14,720 --> 00:49:16,400
it gave them permission from from the

1112
00:49:16,400 --> 00:49:17,839
root and it gave

1113
00:49:17,839 --> 00:49:20,480
and and is it and and it's signed like

1114
00:49:20,480 --> 00:49:20,880
it was

1115
00:49:20,880 --> 00:49:23,920
created by the rule is that is that

1116
00:49:23,920 --> 00:49:26,800
is the most powerful user that comes

1117
00:49:26,800 --> 00:49:27,599
from

1118
00:49:27,599 --> 00:49:30,480
by default on the linux operating system

1119
00:49:30,480 --> 00:49:32,800
if you want to change the user to

1120
00:49:32,800 --> 00:49:34,880
users you need to use this command

1121
00:49:34,880 --> 00:49:36,079
called su

1122
00:49:36,079 --> 00:49:37,280
for example we're going to use it right

1123
00:49:37,280 --> 00:49:40,480
now to change to root

1124
00:49:41,440 --> 00:49:44,800
i have it set it up so you can so

1125
00:49:44,800 --> 00:49:47,599
i have the same uh raspberry pi password

1126
00:49:47,599 --> 00:49:48,720
that we use on pi

1127
00:49:48,720 --> 00:49:52,400
for root so here now i'm on root

1128
00:49:52,400 --> 00:49:56,079
and i'm on the home pi okay

1129
00:49:56,079 --> 00:49:59,440
we can change back just use cu by

1130
00:49:59,440 --> 00:50:01,599
and there you go back so this is for

1131
00:50:01,599 --> 00:50:03,440
changing user on the command line

1132
00:50:03,440 --> 00:50:07,280
tar and and and unzip

1133
00:50:07,280 --> 00:50:09,920
are used to compress and uncompress uh

1134
00:50:09,920 --> 00:50:10,640
files

1135
00:50:10,640 --> 00:50:12,480
but due to time we're not gonna see them

1136
00:50:12,480 --> 00:50:13,839
right now

1137
00:50:13,839 --> 00:50:17,280
shmod and essay shown sh group

1138
00:50:17,280 --> 00:50:19,599
these are for changing this the the

1139
00:50:19,599 --> 00:50:20,480
permissions we

1140
00:50:20,480 --> 00:50:23,119
are gonna be seeing in a while the owner

1141
00:50:23,119 --> 00:50:24,240
and the group

1142
00:50:24,240 --> 00:50:26,160
these two we're not gonna be seeing it

1143
00:50:26,160 --> 00:50:28,160
right now but maybe if you go deep into

1144
00:50:28,160 --> 00:50:29,920
raspberry pi we you're probably gonna

1145
00:50:29,920 --> 00:50:31,119
use these ones

1146
00:50:31,119 --> 00:50:32,880
this is really good or you need to know

1147
00:50:32,880 --> 00:50:34,400
this because the

1148
00:50:34,400 --> 00:50:37,440
that's this is this is what makes uh

1149
00:50:37,440 --> 00:50:38,640
security

1150
00:50:38,640 --> 00:50:41,359
uh on on the raspberry pi this is this

1151
00:50:41,359 --> 00:50:42,000
is what com

1152
00:50:42,000 --> 00:50:45,119
uh it makes it it makes it uh powerful

1153
00:50:45,119 --> 00:50:48,240
so you can change who is going to access

1154
00:50:48,240 --> 00:50:51,439
you can create a user

1155
00:50:51,680 --> 00:50:55,119
make a file or a program the that user

1156
00:50:55,119 --> 00:50:58,559
to be the owner and only that

1157
00:50:58,559 --> 00:51:01,359
process or user is going to be able to

1158
00:51:01,359 --> 00:51:03,200
run that program

1159
00:51:03,200 --> 00:51:05,680
that's powerful so and that's that's why

1160
00:51:05,680 --> 00:51:07,680
uh this this is one of the reasons linux

1161
00:51:07,680 --> 00:51:08,480
is

1162
00:51:08,480 --> 00:51:10,960
very much used on for for for server

1163
00:51:10,960 --> 00:51:13,440
purposes

1164
00:51:13,520 --> 00:51:17,440
everything is a file so um

1165
00:51:17,440 --> 00:51:18,640
everything is a file something that

1166
00:51:18,640 --> 00:51:20,960
comes from unix uh this is something

1167
00:51:20,960 --> 00:51:22,720
that if if you have your raspberry pi

1168
00:51:22,720 --> 00:51:24,240
turn on right now i want you to do with

1169
00:51:24,240 --> 00:51:25,359
me

1170
00:51:25,359 --> 00:51:28,240
first of all uh if you need to check if

1171
00:51:28,240 --> 00:51:28,800
you

1172
00:51:28,800 --> 00:51:32,400
if you uh if this program the zoo

1173
00:51:32,400 --> 00:51:34,079
that to change the route is is giving

1174
00:51:34,079 --> 00:51:36,160
you trouble use this command

1175
00:51:36,160 --> 00:51:40,000
sudo pass pass pass wd root

1176
00:51:40,000 --> 00:51:42,160
this is giving you the the the root

1177
00:51:42,160 --> 00:51:43,599
access temporarily

1178
00:51:43,599 --> 00:51:47,520
this is a command to change the

1179
00:51:47,520 --> 00:51:49,599
the the password of an user and this is

1180
00:51:49,599 --> 00:51:51,119
the user that you're changing it to

1181
00:51:51,119 --> 00:51:53,200
you can also do this with the pi if you

1182
00:51:53,200 --> 00:51:54,160
want to

1183
00:51:54,160 --> 00:51:56,240
just but probably you don't need the

1184
00:51:56,240 --> 00:51:57,760
pseudo at the beginning you can try it

1185
00:51:57,760 --> 00:51:59,359
out

1186
00:51:59,359 --> 00:52:01,760
but now we're going to change at the

1187
00:52:01,760 --> 00:52:02,720
state of the

1188
00:52:02,720 --> 00:52:04,880
led that is on board on the raspberry pi

1189
00:52:04,880 --> 00:52:05,920
and we're going to do it

1190
00:52:05,920 --> 00:52:08,000
right now i'm not going to be able to

1191
00:52:08,000 --> 00:52:08,960
show you

1192
00:52:08,960 --> 00:52:11,040
because i don't have a the camera that's

1193
00:52:11,040 --> 00:52:13,040
set up so i can see the raspberry pi but

1194
00:52:13,040 --> 00:52:14,559
if you do the example with me you're

1195
00:52:14,559 --> 00:52:16,240
going to notice that the

1196
00:52:16,240 --> 00:52:18,640
the led on board not the one you bought

1197
00:52:18,640 --> 00:52:19,359
on the kit

1198
00:52:19,359 --> 00:52:22,319
but on board is going to turn on and off

1199
00:52:22,319 --> 00:52:23,359
so i'm going to do

1200
00:52:23,359 --> 00:52:25,680
the echo one which means we're going to

1201
00:52:25,680 --> 00:52:27,280
throw one

1202
00:52:27,280 --> 00:52:29,280
we're going to do this symbol which i'm

1203
00:52:29,280 --> 00:52:30,640
going to explain what it does

1204
00:52:30,640 --> 00:52:34,240
in a bit class

1205
00:52:34,240 --> 00:52:36,799
leds

1206
00:52:39,119 --> 00:52:42,000
led zero

1207
00:52:44,839 --> 00:52:47,839
brightness

1208
00:52:49,920 --> 00:52:54,480
okay so yeah i forgot to change the user

1209
00:52:56,640 --> 00:53:01,839
here now i'm root i'm going to copy this

1210
00:53:05,200 --> 00:53:09,839
here oops

1211
00:53:09,839 --> 00:53:12,400
here now it should it should be on as i

1212
00:53:12,400 --> 00:53:13,280
have it on mine

1213
00:53:13,280 --> 00:53:16,559
if you wanted to turn it off

1214
00:53:16,559 --> 00:53:18,960
you can just delete this and put on zero

1215
00:53:18,960 --> 00:53:20,000
and you can try this

1216
00:53:20,000 --> 00:53:22,400
so you can so you can be able to to

1217
00:53:22,400 --> 00:53:24,240
change the

1218
00:53:24,240 --> 00:53:29,359
the the the state of the led

1219
00:53:29,359 --> 00:53:32,800
um these are a couple of examples

1220
00:53:32,800 --> 00:53:35,920
um def new

1221
00:53:35,920 --> 00:53:40,319
dev random dev0 these are some files

1222
00:53:40,319 --> 00:53:42,800
that are on the on the linux operating

1223
00:53:42,800 --> 00:53:43,520
system

1224
00:53:43,520 --> 00:53:45,920
which for example if i move anything to

1225
00:53:45,920 --> 00:53:47,040
know it's going to

1226
00:53:47,040 --> 00:53:50,559
delete you may see this joke

1227
00:53:50,559 --> 00:53:56,000
let's change the user that we're on

1228
00:53:56,000 --> 00:53:58,800
okay so let's let me delete the example

1229
00:53:58,800 --> 00:54:00,960
txt file that we did

1230
00:54:00,960 --> 00:54:04,880
let me move the example example

1231
00:54:04,880 --> 00:54:08,400
to that i need to put the bar first

1232
00:54:08,400 --> 00:54:11,839
def no

1233
00:54:13,359 --> 00:54:15,280
okay so let me do a suit up in the

1234
00:54:15,280 --> 00:54:16,960
beginning

1235
00:54:16,960 --> 00:54:20,640
there you go so if i do an ls

1236
00:54:21,200 --> 00:54:24,880
there's no example txt on this on

1237
00:54:24,880 --> 00:54:28,480
on this directory right now def random

1238
00:54:28,480 --> 00:54:32,240
and you random are a stream of files

1239
00:54:32,240 --> 00:54:36,079
of bytes which is uh depending on your

1240
00:54:36,079 --> 00:54:36,799
computer

1241
00:54:36,799 --> 00:54:40,640
operating system and so forth uh fourth

1242
00:54:40,640 --> 00:54:43,920
it it there is a constant streaming of

1243
00:54:43,920 --> 00:54:45,040
random numbers of

1244
00:54:45,040 --> 00:54:47,440
pseudo random numbers generated from

1245
00:54:47,440 --> 00:54:48,400
them

1246
00:54:48,400 --> 00:54:50,839
i suggest you not to do something like

1247
00:54:50,839 --> 00:54:52,079
echo um

1248
00:54:52,079 --> 00:54:55,599
or eck or cat

1249
00:54:55,599 --> 00:54:59,920
for example def random

1250
00:55:00,240 --> 00:55:04,319
um tx uh something file txt

1251
00:55:04,319 --> 00:55:06,640
i'm not i don't suggest you to do that

1252
00:55:06,640 --> 00:55:09,839
because if you hit enter

1253
00:55:09,839 --> 00:55:12,240
your cpu usage going from the raspberry

1254
00:55:12,240 --> 00:55:13,200
pi is going to go

1255
00:55:13,200 --> 00:55:16,480
on like way up and it's going to write

1256
00:55:16,480 --> 00:55:17,280
on that file

1257
00:55:17,280 --> 00:55:21,040
until your whole um

1258
00:55:21,040 --> 00:55:22,640
operating system fails because it's

1259
00:55:22,640 --> 00:55:24,720
going to be filled so

1260
00:55:24,720 --> 00:55:27,440
this is how powerful linux is you need

1261
00:55:27,440 --> 00:55:28,559
to be very careful

1262
00:55:28,559 --> 00:55:32,799
whenever you use these three um

1263
00:55:32,799 --> 00:55:35,200
uh these three uh fight the stream of

1264
00:55:35,200 --> 00:55:36,240
bytes

1265
00:55:36,240 --> 00:55:38,960
and also be careful when using sudo this

1266
00:55:38,960 --> 00:55:40,160
is a command if you want to

1267
00:55:40,160 --> 00:55:43,520
if you want to uh test

1268
00:55:43,520 --> 00:55:47,359
um creating a little a little file

1269
00:55:47,359 --> 00:55:50,559
by with with random numbers

1270
00:55:50,559 --> 00:55:54,799
uh also this is zero it just has many

1271
00:55:54,799 --> 00:55:57,200
if you want to fill something or delete

1272
00:55:57,200 --> 00:55:58,559
or for example if you want to

1273
00:55:58,559 --> 00:56:01,680
um format a disk

1274
00:56:01,680 --> 00:56:05,520
you can use this to to to as a stream of

1275
00:56:05,520 --> 00:56:06,799
bytes of zeros

1276
00:56:06,799 --> 00:56:09,760
to change everything to zeroes this

1277
00:56:09,760 --> 00:56:10,240
something

1278
00:56:10,240 --> 00:56:12,799
uh a little bit advanced so just i'm

1279
00:56:12,799 --> 00:56:16,400
just letting you know this okay let's

1280
00:56:16,400 --> 00:56:19,359
talk about permissions

1281
00:56:19,520 --> 00:56:21,440
yes uh you're gonna understand this

1282
00:56:21,440 --> 00:56:22,880
later shmod

1283
00:56:22,880 --> 00:56:26,720
x ask questions dot pi

1284
00:56:26,799 --> 00:56:30,880
so permissions as you notice

1285
00:56:30,880 --> 00:56:35,440
every time we did an ls l

1286
00:56:35,520 --> 00:56:38,640
things appear like this so

1287
00:56:38,640 --> 00:56:40,319
it's going to tell you that the total

1288
00:56:40,319 --> 00:56:42,000
file size

1289
00:56:42,000 --> 00:56:44,640
is going to tell you the permissions for

1290
00:56:44,640 --> 00:56:46,400
example for these files is give you the

1291
00:56:46,400 --> 00:56:48,319
permissions

1292
00:56:48,319 --> 00:56:51,359
the group name the user

1293
00:56:51,359 --> 00:56:54,640
the number of our links the size

1294
00:56:54,640 --> 00:56:56,960
and the date time or last modifier and

1295
00:56:56,960 --> 00:56:58,960
the file name

1296
00:56:58,960 --> 00:57:01,280
we're going to see what what what it

1297
00:57:01,280 --> 00:57:02,400
where this

1298
00:57:02,400 --> 00:57:07,040
number uh letters down the beginning

1299
00:57:08,400 --> 00:57:11,680
this is going to to show you what type

1300
00:57:11,680 --> 00:57:13,040
of file it is

1301
00:57:13,040 --> 00:57:14,960
this is on the next slide so let's go

1302
00:57:14,960 --> 00:57:17,839
through to to this part

1303
00:57:17,839 --> 00:57:20,319
these are going to tell you which

1304
00:57:20,319 --> 00:57:21,839
permissions have

1305
00:57:21,839 --> 00:57:24,880
the owner the group

1306
00:57:24,880 --> 00:57:28,079
and the other users if you want someone

1307
00:57:28,079 --> 00:57:30,400
for example a txt create let's create

1308
00:57:30,400 --> 00:57:31,440
let's

1309
00:57:31,440 --> 00:57:36,720
touch nobody

1310
00:57:36,799 --> 00:57:41,280
watch dot txt

1311
00:57:41,280 --> 00:57:44,960
oh it's fine like that and i'm going to

1312
00:57:44,960 --> 00:57:45,520
do one

1313
00:57:45,520 --> 00:57:50,960
ls lsl

1314
00:57:51,119 --> 00:57:54,079
you can see that everybody can read it

1315
00:57:54,079 --> 00:57:55,280
right now

1316
00:57:55,280 --> 00:57:59,440
not only can write it the owner

1317
00:57:59,440 --> 00:58:03,920
here and nobody can execute it

1318
00:58:03,920 --> 00:58:06,559
if this was a program we need someone to

1319
00:58:06,559 --> 00:58:08,079
be able to execute it

1320
00:58:08,079 --> 00:58:11,680
so uh a uh a command

1321
00:58:11,680 --> 00:58:12,960
that we're gonna be using when we're

1322
00:58:12,960 --> 00:58:15,280
doing if uh

1323
00:58:15,280 --> 00:58:18,400
what we're doing um uh

1324
00:58:18,400 --> 00:58:22,000
by scripts or scripts with python it's

1325
00:58:22,000 --> 00:58:22,880
going to be

1326
00:58:22,880 --> 00:58:25,760
chmod which we saw plus x which is going

1327
00:58:25,760 --> 00:58:27,520
to be which is going to give

1328
00:58:27,520 --> 00:58:30,799
everyone the owner the group

1329
00:58:30,799 --> 00:58:32,799
and the other users permission to

1330
00:58:32,799 --> 00:58:36,000
execute this file

1331
00:58:36,000 --> 00:58:39,520
nobody watch so when we do an slsl

1332
00:58:39,520 --> 00:58:43,040
and we can see that here you have an

1333
00:58:43,040 --> 00:58:46,160
an execute permission for the

1334
00:58:46,160 --> 00:58:49,280
for the owner the group and the other

1335
00:58:49,280 --> 00:58:51,839
users

1336
00:58:53,520 --> 00:58:55,359
this is something a little bit more

1337
00:58:55,359 --> 00:58:57,119
advanced when you're doing a command you

1338
00:58:57,119 --> 00:58:58,319
can also specify

1339
00:58:58,319 --> 00:59:02,559
for example hmod you're going to specify

1340
00:59:02,559 --> 00:59:05,760
how are you going to give uh

1341
00:59:05,760 --> 00:59:09,200
with numbers the next precise

1342
00:59:09,200 --> 00:59:12,880
um files permissions so if you want to

1343
00:59:12,880 --> 00:59:13,280
give

1344
00:59:13,280 --> 00:59:15,520
everyone the owner the group and the

1345
00:59:15,520 --> 00:59:16,720
others

1346
00:59:16,720 --> 00:59:19,440
every single permission that there is

1347
00:59:19,440 --> 00:59:19,920
you go

1348
00:59:19,920 --> 00:59:21,760
here and you can see every single

1349
00:59:21,760 --> 00:59:23,520
permission is one one one

1350
00:59:23,520 --> 00:59:25,839
which is the air the read the right and

1351
00:59:25,839 --> 00:59:27,119
the execute

1352
00:59:27,119 --> 00:59:30,400
which is seven so if you wanna just to

1353
00:59:30,400 --> 00:59:34,960
to to uh to let the owner

1354
00:59:34,960 --> 00:59:37,359
to execute dread and right you'd run a

1355
00:59:37,359 --> 00:59:38,079
seven

1356
00:59:38,079 --> 00:59:40,240
and then a zero and then a zero because

1357
00:59:40,240 --> 00:59:41,520
the group and the others are not gonna

1358
00:59:41,520 --> 00:59:43,280
be able to see it let's do this

1359
00:59:43,280 --> 00:59:46,880
right now um

1360
00:59:46,880 --> 00:59:51,680
seven zero zero uh nobody watch

1361
00:59:51,680 --> 00:59:55,118
so we do an ls l

1362
00:59:56,079 --> 00:59:59,200
here we change the permissions of this

1363
00:59:59,200 --> 00:59:59,760
file

1364
00:59:59,760 --> 01:00:02,640
if anybody if if this raspberry pi has

1365
01:00:02,640 --> 01:00:03,680
more users

1366
01:00:03,680 --> 01:00:06,480
the only the pi user can be able to

1367
01:00:06,480 --> 01:00:07,440
execute

1368
01:00:07,440 --> 01:00:11,200
touch or

1369
01:00:11,200 --> 01:00:14,880
i mean read write or execute this file

1370
01:00:14,880 --> 01:00:18,559
which is really cool this is

1371
01:00:18,559 --> 01:00:21,760
some types of files as we saw uh back

1372
01:00:21,760 --> 01:00:24,880
the b c these are these are they are

1373
01:00:24,880 --> 01:00:26,240
these are rare you're not gonna see them

1374
01:00:26,240 --> 01:00:28,480
frequently you're gonna see directory

1375
01:00:28,480 --> 01:00:31,599
and they're probably file symbolic link

1376
01:00:31,599 --> 01:00:34,240
and those are basically it and the under

1377
01:00:34,240 --> 01:00:36,079
on the under on the right and the

1378
01:00:36,079 --> 01:00:38,319
line those are the ones that you're

1379
01:00:38,319 --> 01:00:39,119
going to see

1380
01:00:39,119 --> 01:00:43,920
mostly so piping and one-liners

1381
01:00:43,920 --> 01:00:46,799
this is uh

1382
01:00:47,280 --> 01:00:49,280
how you can pass we use this already

1383
01:00:49,280 --> 01:00:50,559
with the crap

1384
01:00:50,559 --> 01:00:52,720
command i'm going to explain well i'm

1385
01:00:52,720 --> 01:00:56,480
going to be explaining what i did piping

1386
01:00:56,480 --> 01:00:56,720
is

1387
01:00:56,720 --> 01:00:59,119
used uh uh for this we know we we should

1388
01:00:59,119 --> 01:01:00,000
know the tip that

1389
01:01:00,000 --> 01:01:02,160
the three types of stream of bytes that

1390
01:01:02,160 --> 01:01:03,760
you have on the command line

1391
01:01:03,760 --> 01:01:06,400
which the std in the standard input is

1392
01:01:06,400 --> 01:01:07,280
cd out

1393
01:01:07,280 --> 01:01:10,079
which is a standard output and the std

1394
01:01:10,079 --> 01:01:10,480
error

1395
01:01:10,480 --> 01:01:12,640
which is the standard error these are

1396
01:01:12,640 --> 01:01:13,920
these are are

1397
01:01:13,920 --> 01:01:18,160
signified by a number zero one two

1398
01:01:18,160 --> 01:01:20,480
destiny in we can test this right now as

1399
01:01:20,480 --> 01:01:22,880
we saw

1400
01:01:22,960 --> 01:01:26,000
is uh we're going to create let's see uh

1401
01:01:26,000 --> 01:01:31,520
nano text dot txt

1402
01:01:31,680 --> 01:01:33,680
or no let's we don't need to use this

1403
01:01:33,680 --> 01:01:34,640
for example if we want to write

1404
01:01:34,640 --> 01:01:36,240
something let's just write um

1405
01:01:36,240 --> 01:01:39,760
echo is a couple of

1406
01:01:39,760 --> 01:01:42,880
i use i use this uh these symbols to

1407
01:01:42,880 --> 01:01:45,119
to to confine whatever i'm going to uh

1408
01:01:45,119 --> 01:01:46,319
transfer to the to the

1409
01:01:46,319 --> 01:01:49,280
text file precise this precisely if i'm

1410
01:01:49,280 --> 01:01:50,160
going

1411
01:01:50,160 --> 01:01:52,400
and more specifically if i'm writing a

1412
01:01:52,400 --> 01:01:53,359
whole sentence

1413
01:01:53,359 --> 01:01:59,279
so hello people of the second class

1414
01:02:03,039 --> 01:02:06,000
so i'm going to use this sign in order

1415
01:02:06,000 --> 01:02:06,720
for me to

1416
01:02:06,720 --> 01:02:10,240
to pipe this

1417
01:02:10,240 --> 01:02:13,279
command to here

1418
01:02:14,240 --> 01:02:17,599
wait okay there you go

1419
01:02:17,599 --> 01:02:21,680
so we use cut text you can see that this

1420
01:02:21,680 --> 01:02:24,000
the the file contains what i just gave

1421
01:02:24,000 --> 01:02:24,960
i'm going to explain

1422
01:02:24,960 --> 01:02:29,359
this this symbol in a bit so

1423
01:02:29,359 --> 01:02:35,680
um let's do this command which is cat

1424
01:02:35,680 --> 01:02:39,599
txt text dot txt

1425
01:02:39,599 --> 01:02:43,039
file crap hello

1426
01:02:43,039 --> 01:02:46,240
we now are reading this file

1427
01:02:46,240 --> 01:02:49,440
right and instead of putting it here

1428
01:02:49,440 --> 01:02:51,920
we're going to put this output through

1429
01:02:51,920 --> 01:02:52,799
the pipe

1430
01:02:52,799 --> 01:02:56,079
and give it as a standard input for the

1431
01:02:56,079 --> 01:02:56,640
grab

1432
01:02:56,640 --> 01:03:00,799
command grab hello

1433
01:03:00,799 --> 01:03:04,880
and it's going to give you wait

1434
01:03:04,880 --> 01:03:06,960
here it's going to tell you which is the

1435
01:03:06,960 --> 01:03:08,640
line that has the word hello

1436
01:03:08,640 --> 01:03:13,440
we could have used web hello

1437
01:03:14,000 --> 01:03:17,200
text and this result would have been the

1438
01:03:17,200 --> 01:03:17,760
same

1439
01:03:17,760 --> 01:03:19,760
but for example if you're doing fine

1440
01:03:19,760 --> 01:03:21,440
searches

1441
01:03:21,440 --> 01:03:24,319
you can do uh you can do you can do

1442
01:03:24,319 --> 01:03:25,200
whole comments

1443
01:03:25,200 --> 01:03:29,280
like very big ones and then just

1444
01:03:29,280 --> 01:03:31,440
looking for something specific this is

1445
01:03:31,440 --> 01:03:33,839
why a standard variable sounder output

1446
01:03:33,839 --> 01:03:37,359
are are good to know std out

1447
01:03:37,359 --> 01:03:39,520
which is a standard output is uh there's

1448
01:03:39,520 --> 01:03:41,280
a uh

1449
01:03:41,280 --> 01:03:43,839
typo um an std output is something like

1450
01:03:43,839 --> 01:03:44,720
for example

1451
01:03:44,720 --> 01:03:48,160
let's do an ls minus l and instead of

1452
01:03:48,160 --> 01:03:50,319
putting it on the screen like i said

1453
01:03:50,319 --> 01:03:53,359
you can put list of files

1454
01:03:53,359 --> 01:03:56,799
dot txt and if we do cut

1455
01:03:56,799 --> 01:03:59,119
it off files it's going to give me what

1456
01:03:59,119 --> 01:04:00,000
the result of

1457
01:04:00,000 --> 01:04:03,200
l when i run this command was so

1458
01:04:03,200 --> 01:04:06,960
um this is not executing this command

1459
01:04:06,960 --> 01:04:09,520
i'm executing the command and and and

1460
01:04:09,520 --> 01:04:10,079
pipe

1461
01:04:10,079 --> 01:04:12,079
and and transferring that standard

1462
01:04:12,079 --> 01:04:14,720
output to this file

1463
01:04:14,720 --> 01:04:19,200
um yes a standard output you d you can

1464
01:04:19,200 --> 01:04:20,880
use the pipe example to the standard

1465
01:04:20,880 --> 01:04:23,359
output because

1466
01:04:23,359 --> 01:04:25,680
whatever is going through here the

1467
01:04:25,680 --> 01:04:27,839
standard output of this command

1468
01:04:27,839 --> 01:04:30,960
goes to the standard input of this one

1469
01:04:30,960 --> 01:04:33,520
this is just putting it in here on on

1470
01:04:33,520 --> 01:04:34,799
this on this file

1471
01:04:34,799 --> 01:04:37,680
but this is the standard output from

1472
01:04:37,680 --> 01:04:39,039
this command is going to the standard

1473
01:04:39,039 --> 01:04:40,480
input for this command

1474
01:04:40,480 --> 01:04:42,720
you can also see you can also say that

1475
01:04:42,720 --> 01:04:43,520
here when i do

1476
01:04:43,520 --> 01:04:45,760
when i did this command grab hello the

1477
01:04:45,760 --> 01:04:48,000
text this was the standard input for

1478
01:04:48,000 --> 01:04:51,440
example this was the input

1479
01:04:52,079 --> 01:04:54,240
so the standard error is when you do an

1480
01:04:54,240 --> 01:04:55,359
error uh

1481
01:04:55,359 --> 01:04:56,799
for example if you want to know if a

1482
01:04:56,799 --> 01:04:58,720
command fail and you want to know why

1483
01:04:58,720 --> 01:05:01,359
and you don't you're not around to for

1484
01:05:01,359 --> 01:05:02,880
for example something that is executed

1485
01:05:02,880 --> 01:05:04,799
on the background

1486
01:05:04,799 --> 01:05:08,480
you're gonna do um let me do ls

1487
01:05:08,480 --> 01:05:11,599
to list a file to list that where i am

1488
01:05:11,599 --> 01:05:15,280
grab oh no which is which are not

1489
01:05:15,280 --> 01:05:20,640
real um flags this this is on purpose

1490
01:05:20,839 --> 01:05:23,760
death

1491
01:05:23,760 --> 01:05:26,079
uh this this is to pipe the standard

1492
01:05:26,079 --> 01:05:27,359
error to

1493
01:05:27,359 --> 01:05:30,720
a file for example error errors

1494
01:05:30,720 --> 01:05:35,440
errors txt so there you go

1495
01:05:35,440 --> 01:05:39,280
now i should open

1496
01:05:40,720 --> 01:05:51,839
and there's not anything there wait

1497
01:05:58,559 --> 01:06:00,400
okay apparently it didn't have any

1498
01:06:00,400 --> 01:06:05,200
errors but it should

1499
01:06:05,200 --> 01:06:08,000
okay there you go now i can see that

1500
01:06:08,000 --> 01:06:08,799
there's

1501
01:06:08,799 --> 01:06:10,240
there are errors and then telling you

1502
01:06:10,240 --> 01:06:12,480
this for example i did i didn't use the

1503
01:06:12,480 --> 01:06:14,160
flags correctly or i didn't put any

1504
01:06:14,160 --> 01:06:16,640
arguments

1505
01:06:16,839 --> 01:06:18,240
okay

1506
01:06:18,240 --> 01:06:19,920
lastly we're going to look at the file

1507
01:06:19,920 --> 01:06:21,839
the file system hierarchy which is

1508
01:06:21,839 --> 01:06:24,880
um what uh what is

1509
01:06:24,880 --> 01:06:27,200
how is how's the file system on the on

1510
01:06:27,200 --> 01:06:29,119
the linux linux computer

1511
01:06:29,119 --> 01:06:31,280
is organized as you can see this is the

1512
01:06:31,280 --> 01:06:34,559
path this is similar to windows

1513
01:06:34,559 --> 01:06:37,200
so this is a good image i don't know

1514
01:06:37,200 --> 01:06:37,680
where i

1515
01:06:37,680 --> 01:06:39,440
where it comes from i i got it on the

1516
01:06:39,440 --> 01:06:40,960
internet and i tried to find the source

1517
01:06:40,960 --> 01:06:42,160
but i didn't find it

1518
01:06:42,160 --> 01:06:45,200
but this is a good image

1519
01:06:45,200 --> 01:06:47,039
every program that we've been running

1520
01:06:47,039 --> 01:06:50,160
it's come it comes from the

1521
01:06:50,160 --> 01:06:54,319
by bin uh essential binaries um

1522
01:06:54,319 --> 01:06:57,920
file i mean directory all the programs

1523
01:06:57,920 --> 01:06:59,359
are there for example ls

1524
01:06:59,359 --> 01:07:02,640
cad aura and bin

1525
01:07:02,640 --> 01:07:06,640
we can do an ls slash bin

1526
01:07:06,640 --> 01:07:08,400
and we're going to be able to find all

1527
01:07:08,400 --> 01:07:09,760
the programs that we can do for example

1528
01:07:09,760 --> 01:07:10,079
here

1529
01:07:10,079 --> 01:07:13,920
is move and probably if we look here ls

1530
01:07:13,920 --> 01:07:14,400
so

1531
01:07:14,400 --> 01:07:16,960
there there's where it is all the

1532
01:07:16,960 --> 01:07:17,920
programs

1533
01:07:17,920 --> 01:07:20,160
the basic essential binaries the ones

1534
01:07:20,160 --> 01:07:22,960
that are essential for linux

1535
01:07:22,960 --> 01:07:27,039
there's some more files boot etc

1536
01:07:27,039 --> 01:07:30,160
so on uh this i'm going to show you a

1537
01:07:30,160 --> 01:07:31,599
couple of cool ones for example

1538
01:07:31,599 --> 01:07:34,640
tmp which if you want to put a a

1539
01:07:34,640 --> 01:07:37,280
a a file but you don't want people to

1540
01:07:37,280 --> 01:07:38,240
know

1541
01:07:38,240 --> 01:07:39,920
what you've been reading there you can

1542
01:07:39,920 --> 01:07:41,599
put there because every time

1543
01:07:41,599 --> 01:07:43,680
the raspberry pi or the linux uh

1544
01:07:43,680 --> 01:07:45,119
whatever linux you're using

1545
01:07:45,119 --> 01:07:48,960
is uh re rebooted

1546
01:07:48,960 --> 01:07:50,720
it's going to delete every every file

1547
01:07:50,720 --> 01:07:52,079
that is going to be there

1548
01:07:52,079 --> 01:07:56,240
def is where all the device files are

1549
01:07:56,240 --> 01:08:00,079
let's def as you can see

1550
01:08:00,079 --> 01:08:03,760
here there's memories um

1551
01:08:03,760 --> 01:08:07,200
these are instances of programs running

1552
01:08:07,200 --> 01:08:08,240
in the background

1553
01:08:08,240 --> 01:08:10,799
for example this instance is running i

1554
01:08:10,799 --> 01:08:11,359
don't know

1555
01:08:11,359 --> 01:08:14,799
which one is it but this one uh

1556
01:08:14,799 --> 01:08:16,560
there's one this is one of the process

1557
01:08:16,560 --> 01:08:18,000
that is running the the command line

1558
01:08:18,000 --> 01:08:20,319
that i'm using right now

1559
01:08:20,319 --> 01:08:22,399
and for example if you put if you have a

1560
01:08:22,399 --> 01:08:24,560
camera on this you can see

1561
01:08:24,560 --> 01:08:26,719
you're probably going to be able to see

1562
01:08:26,719 --> 01:08:28,399
it here

1563
01:08:28,399 --> 01:08:31,198
as a device

1564
01:08:31,600 --> 01:08:35,040
um there are many more

1565
01:08:35,040 --> 01:08:36,960
and and i could spend a day is

1566
01:08:36,960 --> 01:08:38,479
explaining uh

1567
01:08:38,479 --> 01:08:41,198
how this is this is organized but just

1568
01:08:41,198 --> 01:08:41,679
to know

1569
01:08:41,679 --> 01:08:43,198
this is the beginning of everything for

1570
01:08:43,198 --> 01:08:44,880
example uh

1571
01:08:44,880 --> 01:08:48,880
let's do a pw pwd

1572
01:08:48,880 --> 01:08:52,238
the bar is the beginning is is the root

1573
01:08:52,238 --> 01:08:54,080
that's that's what we mean by the rule

1574
01:08:54,080 --> 01:08:57,359
every time we talk about analytics

1575
01:08:57,359 --> 01:09:00,560
so this is a little a little bonus this

1576
01:09:00,560 --> 01:09:02,319
is bad scripting this is

1577
01:09:02,319 --> 01:09:04,319
we every comment that we saw before

1578
01:09:04,319 --> 01:09:05,520
we're going to see how

1579
01:09:05,520 --> 01:09:08,479
we can do a simple bash script just to

1580
01:09:08,479 --> 01:09:10,158
let you know how to do them

1581
01:09:10,158 --> 01:09:11,920
and we're going to be touching them in

1582
01:09:11,920 --> 01:09:13,520
the next class

1583
01:09:13,520 --> 01:09:16,640
uh bigger than this or or

1584
01:09:16,640 --> 01:09:19,839
on more or more um

1585
01:09:19,839 --> 01:09:23,120
so let's do a simple program right you

1586
01:09:23,120 --> 01:09:23,600
either

1587
01:09:23,600 --> 01:09:26,960
can do touch

1588
01:09:27,600 --> 01:09:30,640
touch uh sh as

1589
01:09:30,640 --> 01:09:33,920
a script sh you can either

1590
01:09:33,920 --> 01:09:37,120
do this to create the the file or you

1591
01:09:37,120 --> 01:09:38,640
can use

1592
01:09:38,640 --> 01:09:42,640
nano script

1593
01:09:42,640 --> 01:09:45,520
dot sh i'm going to use nano because

1594
01:09:45,520 --> 01:09:46,799
it's actually going to

1595
01:09:46,799 --> 01:09:50,000
directly open the the text editor called

1596
01:09:50,000 --> 01:09:51,198
nano

1597
01:09:51,198 --> 01:09:52,719
and we're going to put exactly the

1598
01:09:52,719 --> 01:09:54,880
beginning which is

1599
01:09:54,880 --> 01:09:58,000
which means this means which

1600
01:09:58,000 --> 01:10:02,159
program is going to run this

1601
01:10:02,159 --> 01:10:05,600
program on or which channel for example

1602
01:10:05,600 --> 01:10:06,719
if you ever want to

1603
01:10:06,719 --> 01:10:09,920
run a python program you can either use

1604
01:10:09,920 --> 01:10:11,520
you can put for example something like

1605
01:10:11,520 --> 01:10:13,040
this something like being

1606
01:10:13,040 --> 01:10:17,120
python3 just for you to understand

1607
01:10:17,120 --> 01:10:18,960
what are we doing we're going to put

1608
01:10:18,960 --> 01:10:20,800
bash because that's the shell that we're

1609
01:10:20,800 --> 01:10:22,960
going to be using

1610
01:10:22,960 --> 01:10:26,159
or this program is it be running on

1611
01:10:26,159 --> 01:10:28,239
and i'm going to put what the program is

1612
01:10:28,239 --> 01:10:31,839
going to be a simple hello world

1613
01:10:32,800 --> 01:10:35,040
i'm going to click exit i'm going to say

1614
01:10:35,040 --> 01:10:38,400
yes here at the at the bottom it says

1615
01:10:38,400 --> 01:10:42,880
click y for yes and no n for no

1616
01:10:42,880 --> 01:10:46,159
and then click enter so

1617
01:10:46,159 --> 01:10:49,520
right now you have two two ways of of

1618
01:10:49,520 --> 01:10:53,280
running it either the bash script

1619
01:10:53,280 --> 01:10:56,080
and it runs here is echo hello world if

1620
01:10:56,080 --> 01:10:57,360
we do an outside

1621
01:10:57,360 --> 01:11:00,639
you're gonna you're gonna see

1622
01:11:02,800 --> 01:11:07,199
here there you go this i i'm replicating

1623
01:11:07,199 --> 01:11:09,520
or run the program that has the the

1624
01:11:09,520 --> 01:11:10,400
command inside

1625
01:11:10,400 --> 01:11:13,679
or do the command outside or i can do

1626
01:11:13,679 --> 01:11:15,360
what we're probably going to be doing

1627
01:11:15,360 --> 01:11:16,960
and we also i'm going to be

1628
01:11:16,960 --> 01:11:19,440
uh focusing on the next class is giving

1629
01:11:19,440 --> 01:11:22,000
this permission to run

1630
01:11:22,000 --> 01:11:25,679
for example ssh mod x

1631
01:11:25,679 --> 01:11:29,440
script and now if we look for

1632
01:11:29,440 --> 01:11:32,559
less script

1633
01:11:36,320 --> 01:11:40,960
here you can see that

1634
01:11:40,960 --> 01:11:44,159
script has every permission to run which

1635
01:11:44,159 --> 01:11:45,120
means that i can do

1636
01:11:45,120 --> 01:11:48,880
dot which means here slash

1637
01:11:48,880 --> 01:11:52,320
script and it should run so

1638
01:11:52,320 --> 01:11:54,239
this is something that that that that

1639
01:11:54,239 --> 01:11:56,239
y'all i want you to test because next

1640
01:11:56,239 --> 01:11:57,760
next week we're going to be touching on

1641
01:11:57,760 --> 01:11:59,520
more detail we're going to be doing

1642
01:11:59,520 --> 01:12:01,520
python programs and we're going to be

1643
01:12:01,520 --> 01:12:03,120
doing bash scripting

1644
01:12:03,120 --> 01:12:04,880
uh i'm going to give you the basics so

1645
01:12:04,880 --> 01:12:06,880
you know how to how to handle

1646
01:12:06,880 --> 01:12:09,760
uh you and and we also be we are we're

1647
01:12:09,760 --> 01:12:10,640
also going to be

1648
01:12:10,640 --> 01:12:13,440
teaching the a couple of tools from

1649
01:12:13,440 --> 01:12:14,159
linux which

1650
01:12:14,159 --> 01:12:16,880
are going to let you to run programs uh

1651
01:12:16,880 --> 01:12:18,800
from time to time

1652
01:12:18,800 --> 01:12:21,280
this has been this class for today so

1653
01:12:21,280 --> 01:12:22,719
i'm going to check if you have

1654
01:12:22,719 --> 01:12:29,760
any questions right now

