1
00:00:01,580 --> 00:00:04,649
[Music]

2
00:00:12,380 --> 00:00:15,839
hello everyone my name is Sherry

3
00:00:15,839 --> 00:00:18,480
um so as you can tell this is the boat

4
00:00:18,480 --> 00:00:19,920
that we built

5
00:00:19,920 --> 00:00:21,359
um so about three years ago my friends

6
00:00:21,359 --> 00:00:23,699
and I realized that so we were talking

7
00:00:23,699 --> 00:00:25,740
to some other authorities and they were

8
00:00:25,740 --> 00:00:27,359
telling us that they need a better

9
00:00:27,359 --> 00:00:30,840
solution for monitoring water quality so

10
00:00:30,840 --> 00:00:33,120
as a bunch of Hardware Engineers we

11
00:00:33,120 --> 00:00:35,880
attempted to automate that that's how SS

12
00:00:35,880 --> 00:00:37,920
mapper fancy name was born

13
00:00:37,920 --> 00:00:40,140
um to a muddy the water

14
00:00:40,140 --> 00:00:42,719
so I like to preface my talk by

15
00:00:42,719 --> 00:00:45,660
introducing my lovely teammates uh we're

16
00:00:45,660 --> 00:00:47,820
a team of six with mixed backgrounds

17
00:00:47,820 --> 00:00:49,260
from mechanical engineering electrical

18
00:00:49,260 --> 00:00:51,360
engineering to computer science uh the

19
00:00:51,360 --> 00:00:52,379
project wouldn't have been possible

20
00:00:52,379 --> 00:00:53,640
without the support from the University

21
00:00:53,640 --> 00:00:55,860
of Pennsylvania and our three amazing

22
00:00:55,860 --> 00:00:57,660
advisors

23
00:00:57,660 --> 00:00:58,500
um

24
00:00:58,500 --> 00:01:00,840
I'd also like to tell our story using

25
00:01:00,840 --> 00:01:03,899
this V diagram some of you might have

26
00:01:03,899 --> 00:01:05,880
seen this from some systems engineering

27
00:01:05,880 --> 00:01:07,920
lectures so this diagram shows the

28
00:01:07,920 --> 00:01:09,360
typical flow of building a complex

29
00:01:09,360 --> 00:01:11,640
system by starting from concept

30
00:01:11,640 --> 00:01:14,580
definition to requirements architecture

31
00:01:14,580 --> 00:01:17,460
to detailed design of subsystems so

32
00:01:17,460 --> 00:01:18,780
everything from three to five is

33
00:01:18,780 --> 00:01:20,700
subsystems land you design everything

34
00:01:20,700 --> 00:01:22,979
individually Implement them test them

35
00:01:22,979 --> 00:01:24,420
and then go back to the system

36
00:01:24,420 --> 00:01:26,159
verification and then go back to

37
00:01:26,159 --> 00:01:28,200
operations so looking back our journey

38
00:01:28,200 --> 00:01:31,380
was mostly Guided by this diagram was

39
00:01:31,380 --> 00:01:32,640
sort of because the couple times we

40
00:01:32,640 --> 00:01:34,560
messed up we learned it the hard way and

41
00:01:34,560 --> 00:01:36,840
came back to this diagram

42
00:01:36,840 --> 00:01:38,579
um so yeah so let's start with the

43
00:01:38,579 --> 00:01:40,439
problem that we're trying to solve

44
00:01:40,439 --> 00:01:43,740
um so Philadelphia the city where yupan

45
00:01:43,740 --> 00:01:45,720
was located was part of the Delaware

46
00:01:45,720 --> 00:01:47,220
River system

47
00:01:47,220 --> 00:01:49,740
um but it was it was famous but not for

48
00:01:49,740 --> 00:01:50,880
a good reason it was famous for its

49
00:01:50,880 --> 00:01:52,680
water quality problems you know in the

50
00:01:52,680 --> 00:01:54,840
last few years so many facilities have

51
00:01:54,840 --> 00:01:56,460
been polluting the river for many years

52
00:01:56,460 --> 00:01:58,799
but it took the water departments six

53
00:01:58,799 --> 00:02:01,380
years to collect enough data to regulate

54
00:02:01,380 --> 00:02:03,420
their emissions and six years well was

55
00:02:03,420 --> 00:02:05,460
enough to seriously damage the local

56
00:02:05,460 --> 00:02:08,280
ecosystem and get many people sick so we

57
00:02:08,280 --> 00:02:10,020
asked how to make this process more

58
00:02:10,020 --> 00:02:10,979
efficient

59
00:02:10,979 --> 00:02:13,739
so if we look at how they regulate those

60
00:02:13,739 --> 00:02:18,180
emitters they need an accurate aquatic

61
00:02:18,180 --> 00:02:19,739
model to facilitate the regulation

62
00:02:19,739 --> 00:02:22,140
process and the bottleneck back then was

63
00:02:22,140 --> 00:02:24,180
that it took them years just to do the

64
00:02:24,180 --> 00:02:26,040
first step to collect enough data for

65
00:02:26,040 --> 00:02:28,200
the to sample and measure and get the

66
00:02:28,200 --> 00:02:30,599
data to model and then propose a

67
00:02:30,599 --> 00:02:33,000
regulation and that took time so

68
00:02:33,000 --> 00:02:34,860
currently what they do is that they took

69
00:02:34,860 --> 00:02:36,420
measurements at fixed locations along

70
00:02:36,420 --> 00:02:38,640
the river and they also took samples at

71
00:02:38,640 --> 00:02:40,739
the surface so the data point is super

72
00:02:40,739 --> 00:02:43,200
limited one sample was used to represent

73
00:02:43,200 --> 00:02:45,120
six miles of river which is on average

74
00:02:45,120 --> 00:02:48,300
45 feet deep what does it mean it means

75
00:02:48,300 --> 00:02:50,160
like we're trying to predict whether

76
00:02:50,160 --> 00:02:52,200
there's gold three floors underground in

77
00:02:52,200 --> 00:02:54,000
downtown L.A by taking the soil sample

78
00:02:54,000 --> 00:02:56,459
in Pasadena so to solve this problem

79
00:02:56,459 --> 00:02:58,500
they have tried doing some multi-depth

80
00:02:58,500 --> 00:03:00,180
measurements by hand like in this photo

81
00:03:00,180 --> 00:03:02,760
but unfortunately it was very expensive

82
00:03:02,760 --> 00:03:04,680
so they could only do this uh once a

83
00:03:04,680 --> 00:03:05,640
year

84
00:03:05,640 --> 00:03:08,160
so we talked to multiple water

85
00:03:08,160 --> 00:03:09,720
departments and we start to hear the

86
00:03:09,720 --> 00:03:11,940
same thing the river is so big and the

87
00:03:11,940 --> 00:03:14,040
changes so dynamically that it's very

88
00:03:14,040 --> 00:03:15,780
hard to keep up with this change over

89
00:03:15,780 --> 00:03:18,599
time and because of this more data more

90
00:03:18,599 --> 00:03:20,700
frequent data especially multi-depth

91
00:03:20,700 --> 00:03:23,159
data will be very valuable to them and

92
00:03:23,159 --> 00:03:24,480
this problem wasn't limited to other

93
00:03:24,480 --> 00:03:26,580
departments too aquaculture companies

94
00:03:26,580 --> 00:03:28,019
said the same thing about their fish

95
00:03:28,019 --> 00:03:29,220
worms right here

96
00:03:29,220 --> 00:03:33,180
so uh we actually looked around and we

97
00:03:33,180 --> 00:03:34,800
found some autonomous multi-depth

98
00:03:34,800 --> 00:03:36,540
measurement Solutions out there like

99
00:03:36,540 --> 00:03:38,280
this fancy autonomous service vehicle

100
00:03:38,280 --> 00:03:40,080
and this even fancier or Thomas

101
00:03:40,080 --> 00:03:42,239
underwater vehicle uh but their problem

102
00:03:42,239 --> 00:03:45,120
is pretty obvious they're very expensive

103
00:03:45,120 --> 00:03:46,860
um and also

104
00:03:46,860 --> 00:03:49,440
um this is like from our insiders

105
00:03:49,440 --> 00:03:51,420
um the the boat could collect one liter

106
00:03:51,420 --> 00:03:54,299
of water but for the water departments

107
00:03:54,299 --> 00:03:56,519
they need a lot more water to get the

108
00:03:56,519 --> 00:03:58,140
number of metrics that they want from

109
00:03:58,140 --> 00:03:59,760
the water samples

110
00:03:59,760 --> 00:04:02,400
so for a prototype we decided to focus

111
00:04:02,400 --> 00:04:04,799
on a cheaper and denser spatial data

112
00:04:04,799 --> 00:04:06,720
solution specifically we'll build a

113
00:04:06,720 --> 00:04:08,280
solution for multi-depth measurements

114
00:04:08,280 --> 00:04:10,019
and samples to help other authorities

115
00:04:10,019 --> 00:04:12,540
monitor pollution salt front and

116
00:04:12,540 --> 00:04:14,220
bacterial composition for regulatory

117
00:04:14,220 --> 00:04:16,680
purposes and we would also hope that

118
00:04:16,680 --> 00:04:18,298
this will be used by fish farms to

119
00:04:18,298 --> 00:04:21,418
improve their fish farming environment

120
00:04:21,418 --> 00:04:24,540
so here are requirements and ideal

121
00:04:24,540 --> 00:04:26,520
Solutions should cost less than three

122
00:04:26,520 --> 00:04:28,160
thousand dollars up front

123
00:04:28,160 --> 00:04:31,139
it should take at most four hours to run

124
00:04:31,139 --> 00:04:32,639
which is about half of a work day for

125
00:04:32,639 --> 00:04:35,220
our regulators and it should be able to

126
00:04:35,220 --> 00:04:37,380
get a cross-sectional map for typical

127
00:04:37,380 --> 00:04:39,000
cross-section along the Delaware River

128
00:04:39,000 --> 00:04:41,180
which is about this wide and this deep

129
00:04:41,180 --> 00:04:43,440
and they should get eight liters of low

130
00:04:43,440 --> 00:04:45,120
volume that's what they're asking for

131
00:04:45,120 --> 00:04:46,620
and they should only take one person to

132
00:04:46,620 --> 00:04:49,740
run so these requirements conclude our

133
00:04:49,740 --> 00:04:52,139
first step of the V diagram later on

134
00:04:52,139 --> 00:04:54,180
they proved to be very crucial to enable

135
00:04:54,180 --> 00:04:55,680
us the finished product in actually six

136
00:04:55,680 --> 00:04:57,479
months because we could design and

137
00:04:57,479 --> 00:04:59,759
Implement those subsystems in parallel

138
00:04:59,759 --> 00:05:01,800
and validate the success very quickly on

139
00:05:01,800 --> 00:05:03,600
our own

140
00:05:03,600 --> 00:05:06,180
um so now that we have a problem to

141
00:05:06,180 --> 00:05:07,800
solve let's get into the high level

142
00:05:07,800 --> 00:05:09,000
architecture

143
00:05:09,000 --> 00:05:11,400
so what what the solution even look like

144
00:05:11,400 --> 00:05:14,639
well after some initial brainstorming we

145
00:05:14,639 --> 00:05:18,180
came down to four options a submarine a

146
00:05:18,180 --> 00:05:21,360
drone a crawler or a boat uh so we

147
00:05:21,360 --> 00:05:22,979
rolled out the submarine solution very

148
00:05:22,979 --> 00:05:24,780
quickly as the price exceeds more than

149
00:05:24,780 --> 00:05:27,060
50 times our budget and then we looked

150
00:05:27,060 --> 00:05:29,820
into power consumption and how we could

151
00:05:29,820 --> 00:05:32,220
how many number of trips is needed to

152
00:05:32,220 --> 00:05:34,199
collect eight liters of samples and

153
00:05:34,199 --> 00:05:36,240
drones just won't work because they're

154
00:05:36,240 --> 00:05:37,620
super limited by the amount of weight

155
00:05:37,620 --> 00:05:40,199
they can carry and if we're limited by

156
00:05:40,199 --> 00:05:41,400
weight why don't we just develop

157
00:05:41,400 --> 00:05:43,919
something that cross underwater on the

158
00:05:43,919 --> 00:05:45,720
ground so it kind of came up with this

159
00:05:45,720 --> 00:05:47,820
underwater crawler with a little boy on

160
00:05:47,820 --> 00:05:50,580
top and we quickly realized that the

161
00:05:50,580 --> 00:05:52,259
delivery river is just not a good place

162
00:05:52,259 --> 00:05:54,780
for this boat because it's it's known

163
00:05:54,780 --> 00:05:56,460
for its large amounts of silt buildup

164
00:05:56,460 --> 00:05:58,199
and vegetation and the crawler would

165
00:05:58,199 --> 00:05:59,639
just get entangled at the bottom very

166
00:05:59,639 --> 00:06:02,759
quickly so this leaves us with the last

167
00:06:02,759 --> 00:06:05,940
form which is a boat and there's this

168
00:06:05,940 --> 00:06:09,000
one has his mopper was born

169
00:06:09,000 --> 00:06:10,860
so here's a breakdown of the three

170
00:06:10,860 --> 00:06:14,100
subsystems on the boat we have the first

171
00:06:14,100 --> 00:06:16,139
one task functions that include sampling

172
00:06:16,139 --> 00:06:17,699
the water getting it on the boat and

173
00:06:17,699 --> 00:06:19,800
collect them and also measuring the

174
00:06:19,800 --> 00:06:23,220
water quality metrics in the water

175
00:06:23,220 --> 00:06:24,900
um and the second one pretty simple

176
00:06:24,900 --> 00:06:27,360
drives the boat uh it has an autonomy

177
00:06:27,360 --> 00:06:30,720
software and a control mechanism and the

178
00:06:30,720 --> 00:06:33,060
third one includes UI and data

179
00:06:33,060 --> 00:06:34,860
processing which communicates with the

180
00:06:34,860 --> 00:06:38,460
onshore machine laptop and there's also

181
00:06:38,460 --> 00:06:40,380
a power subsystem that provides energy

182
00:06:40,380 --> 00:06:42,680
for all the moving Parts on the boat

183
00:06:42,680 --> 00:06:46,620
uh and uh for the task function so

184
00:06:46,620 --> 00:06:48,060
here's a high level design we'll get

185
00:06:48,060 --> 00:06:49,560
into all of the details but essentially

186
00:06:49,560 --> 00:06:52,680
a long tube is lowered to collect the

187
00:06:52,680 --> 00:06:55,740
water and the water will so so that's

188
00:06:55,740 --> 00:06:58,259
the I guess the sampling mechanism and

189
00:06:58,259 --> 00:07:00,780
then the oh and then there's a probe

190
00:07:00,780 --> 00:07:02,639
here so that's the measuring and then

191
00:07:02,639 --> 00:07:05,100
the water is sucked up so fancy of

192
00:07:05,100 --> 00:07:06,960
Animation yes it sucked up to the boat

193
00:07:06,960 --> 00:07:08,819
and then go into one of those sampling

194
00:07:08,819 --> 00:07:11,340
bottles so that's the sampling and then

195
00:07:11,340 --> 00:07:14,100
lastly we also have a collection which

196
00:07:14,100 --> 00:07:16,020
is like this tray will collect will

197
00:07:16,020 --> 00:07:18,240
rotate itself to fill up the assembling

198
00:07:18,240 --> 00:07:21,419
bottles and we take them back to the lab

199
00:07:21,419 --> 00:07:24,720
um so for the actuation system this is a

200
00:07:24,720 --> 00:07:26,220
slightly more detailed view of what it

201
00:07:26,220 --> 00:07:27,539
looks like so we designed two control

202
00:07:27,539 --> 00:07:29,759
modes manual and autonomous in either

203
00:07:29,759 --> 00:07:31,500
mode the control signal is sent by the

204
00:07:31,500 --> 00:07:33,300
user from the onshore as you can tell

205
00:07:33,300 --> 00:07:36,360
it's a laptop through XP to a Raspberry

206
00:07:36,360 --> 00:07:38,160
Pi on the boat

207
00:07:38,160 --> 00:07:41,039
um and the X the pi controls the

208
00:07:41,039 --> 00:07:42,780
propellers actually through another

209
00:07:42,780 --> 00:07:45,419
microcontroller to the to the propeller

210
00:07:45,419 --> 00:07:47,160
CS so for manual control the control

211
00:07:47,160 --> 00:07:49,259
command is just directly relayed there's

212
00:07:49,259 --> 00:07:51,539
no extra processing but for the

213
00:07:51,539 --> 00:07:53,340
autonomous mode we actually just asked

214
00:07:53,340 --> 00:07:55,440
the user to put in waypoints and then

215
00:07:55,440 --> 00:07:56,819
the Raspberry Pi will calculate the

216
00:07:56,819 --> 00:07:59,460
thrust needed based on extra IMU and GPS

217
00:07:59,460 --> 00:08:01,740
data we'll get into more details but

218
00:08:01,740 --> 00:08:03,660
this is just a high level overview

219
00:08:03,660 --> 00:08:05,220
um so putting everything together this

220
00:08:05,220 --> 00:08:06,660
is what looks like much prettier in the

221
00:08:06,660 --> 00:08:08,880
in the cat we're going to build a

222
00:08:08,880 --> 00:08:11,520
low-cost autonomous boat for multi-depth

223
00:08:11,520 --> 00:08:14,880
water quality measuring and sampling

224
00:08:14,880 --> 00:08:16,620
um because I'm kind of on time all right

225
00:08:16,620 --> 00:08:19,440
so uh we tackled the design details uh

226
00:08:19,440 --> 00:08:21,539
actually perception subsystem after we

227
00:08:21,539 --> 00:08:22,919
did the whole high level design or

228
00:08:22,919 --> 00:08:24,720
whatever so let's first take a look at

229
00:08:24,720 --> 00:08:27,780
the task functions and to start off how

230
00:08:27,780 --> 00:08:29,520
do we get the water from the river up to

231
00:08:29,520 --> 00:08:31,680
the boat so that's the sampling

232
00:08:31,680 --> 00:08:34,020
um so how do we design this so according

233
00:08:34,020 --> 00:08:35,339
to the users we have almost four hours

234
00:08:35,339 --> 00:08:37,979
to collect uh samples at 10 points

235
00:08:37,979 --> 00:08:40,380
across the river and up to 10 locations

236
00:08:40,380 --> 00:08:42,599
downward into the river so that's a 100

237
00:08:42,599 --> 00:08:44,760
Point cross-sectional map for measuring

238
00:08:44,760 --> 00:08:46,920
and sampling so our boat should be able

239
00:08:46,920 --> 00:08:49,560
to navigate uh so there should be enough

240
00:08:49,560 --> 00:08:51,300
time to do these things and then second

241
00:08:51,300 --> 00:08:52,920
our boat should navigate at the speed

242
00:08:52,920 --> 00:08:54,720
higher than the worst case River current

243
00:08:54,720 --> 00:08:56,940
speed which was measured at about the

244
00:08:56,940 --> 00:08:57,959
speed

245
00:08:57,959 --> 00:08:59,760
um and that's after some quick math we

246
00:08:59,760 --> 00:09:02,459
allocated 47 minutes for travel and

247
00:09:02,459 --> 00:09:05,160
gives us 190 ish minutes for the task

248
00:09:05,160 --> 00:09:06,720
functions

249
00:09:06,720 --> 00:09:08,519
um so these time constraints helped us

250
00:09:08,519 --> 00:09:10,500
narrow down like how to design the

251
00:09:10,500 --> 00:09:12,360
pumping mechanism so this is an example

252
00:09:12,360 --> 00:09:14,399
decision we made which is how big as a

253
00:09:14,399 --> 00:09:16,800
two right so uh as shown that this plot

254
00:09:16,800 --> 00:09:18,720
the flow rate in the tube goes up with

255
00:09:18,720 --> 00:09:20,640
the tube diameter so we consider silver

256
00:09:20,640 --> 00:09:23,519
factors first uh the flow rate cannot be

257
00:09:23,519 --> 00:09:26,640
too slow and friction which also cannot

258
00:09:26,640 --> 00:09:28,440
be too slow and then lastly if you get

259
00:09:28,440 --> 00:09:30,600
too big there's a space constraint on

260
00:09:30,600 --> 00:09:32,459
the boat so we basically like kind of

261
00:09:32,459 --> 00:09:34,440
draw out this small

262
00:09:34,440 --> 00:09:37,140
feasible window and then we picked a

263
00:09:37,140 --> 00:09:40,980
tube with 5 8 of inch inner diameter and

264
00:09:40,980 --> 00:09:43,080
this also helped us get the flow rate

265
00:09:43,080 --> 00:09:45,420
which help us pick the pump later on so

266
00:09:45,420 --> 00:09:48,720
that's that's one thing we did and then

267
00:09:48,720 --> 00:09:51,480
oh cool so uh so that's that's the

268
00:09:51,480 --> 00:09:52,920
pumping that mechanism that's like the

269
00:09:52,920 --> 00:09:54,959
major design decision there and then we

270
00:09:54,959 --> 00:09:57,240
had to test it so what we did was we

271
00:09:57,240 --> 00:09:58,320
didn't have the boat yet at that point

272
00:09:58,320 --> 00:09:59,880
so we set up the system in the building

273
00:09:59,880 --> 00:10:01,680
in the steering wheel and we put the

274
00:10:01,680 --> 00:10:02,880
whole pumping mechanism on the third

275
00:10:02,880 --> 00:10:04,620
floor we put the water on the first

276
00:10:04,620 --> 00:10:06,600
floor uh actually on the basement and

277
00:10:06,600 --> 00:10:09,000
then we our goal is to say that hey can

278
00:10:09,000 --> 00:10:12,420
we collect 10 bottles of water uh by

279
00:10:12,420 --> 00:10:14,040
pumping water from the basement to the

280
00:10:14,040 --> 00:10:15,839
third floor in the time limit that we

281
00:10:15,839 --> 00:10:16,800
want

282
00:10:16,800 --> 00:10:19,440
um so it turns out that we could

283
00:10:19,440 --> 00:10:22,140
um to here are the results we uh did

284
00:10:22,140 --> 00:10:23,940
some theoretical measurements before we

285
00:10:23,940 --> 00:10:26,100
did experiments and then like this is

286
00:10:26,100 --> 00:10:27,839
like the amount of time that it should

287
00:10:27,839 --> 00:10:29,820
take per bottle like based on this depth

288
00:10:29,820 --> 00:10:32,160
and then these the orange points were

289
00:10:32,160 --> 00:10:34,260
the measured points and it turns out we

290
00:10:34,260 --> 00:10:35,820
were pretty close to the expected values

291
00:10:35,820 --> 00:10:37,500
and it took us under six minutes to

292
00:10:37,500 --> 00:10:39,360
collect the 10 water samples within a

293
00:10:39,360 --> 00:10:41,339
column so this is much better than the

294
00:10:41,339 --> 00:10:43,200
19 minutes that we're aiming for

295
00:10:43,200 --> 00:10:45,000
um and this leaves us a lot of buffer

296
00:10:45,000 --> 00:10:46,860
for some other cleaning and positioning

297
00:10:46,860 --> 00:10:50,820
the simple bottles later on cool so oh

298
00:10:50,820 --> 00:10:52,440
yeah we have some buffer and second

299
00:10:52,440 --> 00:10:54,660
let's talk about the like I mentioned

300
00:10:54,660 --> 00:10:56,579
that we had a probe at the end of the of

301
00:10:56,579 --> 00:10:58,380
the two so that's our measuring

302
00:10:58,380 --> 00:10:59,640
mechanism

303
00:10:59,640 --> 00:11:01,680
so a very important component of the

304
00:11:01,680 --> 00:11:03,660
measuring system is to ensure that the

305
00:11:03,660 --> 00:11:06,320
probe stays within a one meter cubed box

306
00:11:06,320 --> 00:11:08,700
uh as required otherwise you're

307
00:11:08,700 --> 00:11:10,260
measuring from a different depth so what

308
00:11:10,260 --> 00:11:12,180
it looks like so when you have a current

309
00:11:12,180 --> 00:11:13,980
it will push it away from the bounding

310
00:11:13,980 --> 00:11:15,959
box right so essentially we have to

311
00:11:15,959 --> 00:11:17,940
minimize the both the vertical and the

312
00:11:17,940 --> 00:11:19,560
horizontal Arrow to minimize the

313
00:11:19,560 --> 00:11:21,060
vertical error that was simple we just

314
00:11:21,060 --> 00:11:23,220
added a depth sensor and we control the

315
00:11:23,220 --> 00:11:24,959
tube line to just keep it within this

316
00:11:24,959 --> 00:11:26,700
vertical bounding box but for the

317
00:11:26,700 --> 00:11:29,160
horizontal era we had to decrease the

318
00:11:29,160 --> 00:11:31,500
angle Theta this Theta here by making

319
00:11:31,500 --> 00:11:33,060
this thing heavier so we added a

320
00:11:33,060 --> 00:11:34,500
sounding weight

321
00:11:34,500 --> 00:11:37,140
um so how do we do this we plotted the

322
00:11:37,140 --> 00:11:39,839
angle Theta we saw just now

323
00:11:39,839 --> 00:11:42,540
um as a relationship to the weight of

324
00:11:42,540 --> 00:11:44,040
the sounding weight and then we plot it

325
00:11:44,040 --> 00:11:46,500
uh against the current speed for up to

326
00:11:46,500 --> 00:11:49,860
2.5 miles per hour and then from this

327
00:11:49,860 --> 00:11:52,440
plot we can ask the user to just select

328
00:11:52,440 --> 00:11:53,700
a sounding weight based on the current

329
00:11:53,700 --> 00:11:55,440
speed on that day to keep the Theta

330
00:11:55,440 --> 00:11:57,779
lower than the threshold and here we are

331
00:11:57,779 --> 00:12:01,560
cool so as another challenge we had was

332
00:12:01,560 --> 00:12:03,240
to maintain the data quality from the

333
00:12:03,240 --> 00:12:05,220
depth sensor so actually when we did the

334
00:12:05,220 --> 00:12:06,660
experiment in the lab everything was

335
00:12:06,660 --> 00:12:09,240
great the wire is sure the quality is

336
00:12:09,240 --> 00:12:11,399
high okay not the too high but it's like

337
00:12:11,399 --> 00:12:13,500
it's reasonable but as we increase the

338
00:12:13,500 --> 00:12:15,600
wire to 50 feet this is the date that we

339
00:12:15,600 --> 00:12:18,480
got it didn't work so for this reason we

340
00:12:18,480 --> 00:12:21,899
added a boosting and a filtering circuit

341
00:12:21,899 --> 00:12:23,399
to maintain the data transmission

342
00:12:23,399 --> 00:12:26,279
quality so that we can keep the depth

343
00:12:26,279 --> 00:12:29,160
sensor accuracy at the two millimeter as

344
00:12:29,160 --> 00:12:31,440
claimed by the manufacturer

345
00:12:31,440 --> 00:12:32,760
um so yeah so these are the two things

346
00:12:32,760 --> 00:12:34,440
that we main things that we tackled at

347
00:12:34,440 --> 00:12:36,360
the end of this stage uh we validated

348
00:12:36,360 --> 00:12:37,800
the three task functions in the

349
00:12:37,800 --> 00:12:39,779
Schuylkill River in Philadelphia the

350
00:12:39,779 --> 00:12:40,980
smaller river right next to the Lower

351
00:12:40,980 --> 00:12:43,680
River and as you can see so this video

352
00:12:43,680 --> 00:12:45,120
is a little hard to see but essentially

353
00:12:45,120 --> 00:12:47,160
we lowered the pump right here and we

354
00:12:47,160 --> 00:12:50,160
were pumping away the water from the two

355
00:12:50,160 --> 00:12:52,200
from a different depth first and then we

356
00:12:52,200 --> 00:12:54,420
moved it to bottle two and then we were

357
00:12:54,420 --> 00:12:56,700
pumping water into the bottle at this

358
00:12:56,700 --> 00:12:59,220
time and then after that was done it was

359
00:12:59,220 --> 00:13:00,959
moved back to the exhaust so that was

360
00:13:00,959 --> 00:13:03,660
like the process of one simple so we did

361
00:13:03,660 --> 00:13:06,060
10 bottles at that configuration

362
00:13:06,060 --> 00:13:07,800
essentially and then the second thing

363
00:13:07,800 --> 00:13:09,540
that we did was

364
00:13:09,540 --> 00:13:11,700
um like measuring right so this is

365
00:13:11,700 --> 00:13:13,980
actually a data that we collected later

366
00:13:13,980 --> 00:13:16,860
on of a of a like autonomous boat run so

367
00:13:16,860 --> 00:13:18,360
basically the probe was lowered to like

368
00:13:18,360 --> 00:13:20,579
10 points across the river like into the

369
00:13:20,579 --> 00:13:22,800
river and then we get a conductivity map

370
00:13:22,800 --> 00:13:24,480
and that was very similar to the one

371
00:13:24,480 --> 00:13:26,399
that they usually collect but usually

372
00:13:26,399 --> 00:13:28,440
they only collect like a couple of data

373
00:13:28,440 --> 00:13:31,139
points but now this is like a full map

374
00:13:31,139 --> 00:13:34,560
um so yeah this is a test function

375
00:13:34,560 --> 00:13:36,480
so now let's get into the second

376
00:13:36,480 --> 00:13:38,940
subsystem actually in the control

377
00:13:38,940 --> 00:13:42,899
so one of the most important uh can I

378
00:13:42,899 --> 00:13:44,700
stop this stop this well most important

379
00:13:44,700 --> 00:13:46,980
uh parameters that guided the design for

380
00:13:46,980 --> 00:13:49,260
that control was the coefficient of drag

381
00:13:49,260 --> 00:13:52,019
which is set CD right here so we first

382
00:13:52,019 --> 00:13:54,300
get a theoretical value through a fancy

383
00:13:54,300 --> 00:13:56,579
simulation called computational fluid

384
00:13:56,579 --> 00:13:58,920
dynamics in SolidWorks and then this

385
00:13:58,920 --> 00:14:00,720
value was confirmed through a pull test

386
00:14:00,720 --> 00:14:03,060
so this was our school swimming pool and

387
00:14:03,060 --> 00:14:05,940
we basically drove the boat uh through a

388
00:14:05,940 --> 00:14:07,980
very simple pwm control until it reaches

389
00:14:07,980 --> 00:14:09,660
constant speed and then we measure its

390
00:14:09,660 --> 00:14:13,079
feet and then we use this to like match

391
00:14:13,079 --> 00:14:15,839
up the pwm values and the speed and then

392
00:14:15,839 --> 00:14:17,519
like from the data we calculate another

393
00:14:17,519 --> 00:14:19,980
CD and then we found that it was pretty

394
00:14:19,980 --> 00:14:22,500
close to our theoretical value so we

395
00:14:22,500 --> 00:14:24,060
basically use the measured one for

396
00:14:24,060 --> 00:14:26,399
simulation and also for selecting a

397
00:14:26,399 --> 00:14:28,380
propeller

398
00:14:28,380 --> 00:14:30,899
um so a second thing that we did here

399
00:14:30,899 --> 00:14:33,540
just to select a processor uh I don't

400
00:14:33,540 --> 00:14:35,160
know how much was there to say but this

401
00:14:35,160 --> 00:14:36,779
is what we selected we chose Raspberry

402
00:14:36,779 --> 00:14:39,240
Pi as the main processor considering its

403
00:14:39,240 --> 00:14:40,740
computing power was enough for the

404
00:14:40,740 --> 00:14:41,940
autonomous navigation software we're

405
00:14:41,940 --> 00:14:43,980
going to run and it's cheap and it

406
00:14:43,980 --> 00:14:45,899
doesn't require too much power to to

407
00:14:45,899 --> 00:14:49,260
power and then to complement that we

408
00:14:49,260 --> 00:14:51,000
added a margin controller to control the

409
00:14:51,000 --> 00:14:53,279
motors two two big reasons one is

410
00:14:53,279 --> 00:14:54,839
Raspberry Pi just simply doesn't have

411
00:14:54,839 --> 00:14:56,760
enough pwm ports so we had to need a

412
00:14:56,760 --> 00:14:58,920
second one and then it also helped us

413
00:14:58,920 --> 00:15:01,199
separate the low level control loop from

414
00:15:01,199 --> 00:15:02,399
the heavier computations that's

415
00:15:02,399 --> 00:15:04,920
happening on Raspberry Pi and we picked

416
00:15:04,920 --> 00:15:07,260
embed because of its good Library

417
00:15:07,260 --> 00:15:09,360
support and it's very customizable

418
00:15:09,360 --> 00:15:11,339
because it's a c plus and most

419
00:15:11,339 --> 00:15:12,779
importantly that's what you usually do

420
00:15:12,779 --> 00:15:14,639
on the pickupport is some of us have

421
00:15:14,639 --> 00:15:16,980
used it before so we know how to use it

422
00:15:16,980 --> 00:15:18,899
we know how to debug it

423
00:15:18,899 --> 00:15:21,180
um so yeah this is I guess like how the

424
00:15:21,180 --> 00:15:22,800
software was laid out across the two

425
00:15:22,800 --> 00:15:24,899
ports the main computer gets the

426
00:15:24,899 --> 00:15:27,240
computation heavy tasks like autonomous

427
00:15:27,240 --> 00:15:29,360
navigation the RF communication

428
00:15:29,360 --> 00:15:32,519
and like a big giant State machine for

429
00:15:32,519 --> 00:15:34,199
the task functions and data processing

430
00:15:34,199 --> 00:15:36,180
and the microcontroller takes off the

431
00:15:36,180 --> 00:15:38,160
low level control for the propellers the

432
00:15:38,160 --> 00:15:40,560
motors the pumps involved and getting

433
00:15:40,560 --> 00:15:43,320
data from the measuring probe uh and

434
00:15:43,320 --> 00:15:45,180
these two boards are connected through a

435
00:15:45,180 --> 00:15:47,160
simple serial connection uh and the main

436
00:15:47,160 --> 00:15:49,079
advantage is that by separating the high

437
00:15:49,079 --> 00:15:50,339
level State machine and the low level

438
00:15:50,339 --> 00:15:52,800
control Loop we can ensure a very low

439
00:15:52,800 --> 00:15:54,600
latency planning Loop that's constantly

440
00:15:54,600 --> 00:15:56,820
talking to the user control on onshore

441
00:15:56,820 --> 00:15:58,199
without compromising the control

442
00:15:58,199 --> 00:16:00,779
frequency

443
00:16:00,779 --> 00:16:03,240
um cool so for those of you who are

444
00:16:03,240 --> 00:16:04,980
interested in what autonomy that we used

445
00:16:04,980 --> 00:16:07,800
uh we implemented a localization

446
00:16:07,800 --> 00:16:09,360
algorithm with a filter called common

447
00:16:09,360 --> 00:16:13,199
filter uh it has to update update status

448
00:16:13,199 --> 00:16:16,139
and it chunks out a location of the book

449
00:16:16,139 --> 00:16:19,139
uh and the first stage the action update

450
00:16:19,139 --> 00:16:21,839
it takes the IMU data and then

451
00:16:21,839 --> 00:16:24,180
some math has an option update and then

452
00:16:24,180 --> 00:16:25,920
for every GPS input it has a measurement

453
00:16:25,920 --> 00:16:28,139
update and then so by doing all those

454
00:16:28,139 --> 00:16:30,060
like math that's going on in there it

455
00:16:30,060 --> 00:16:31,620
basically accounts for the uncertainty

456
00:16:31,620 --> 00:16:33,540
in both of the sensor updates and then

457
00:16:33,540 --> 00:16:35,639
fuse them together to give us a slightly

458
00:16:35,639 --> 00:16:38,180
more accurate location

459
00:16:38,180 --> 00:16:41,220
information yes so that's the

460
00:16:41,220 --> 00:16:43,980
localization and for the control we just

461
00:16:43,980 --> 00:16:46,920
use a simple PID control but in order

462
00:16:46,920 --> 00:16:48,660
for the boat to switch naturally between

463
00:16:48,660 --> 00:16:51,180
like following a path and stopping we

464
00:16:51,180 --> 00:16:52,620
actually designed a state machine with

465
00:16:52,620 --> 00:16:54,300
three different control modes one is

466
00:16:54,300 --> 00:16:56,759
turning just simple turning and one is

467
00:16:56,759 --> 00:16:58,680
heading towards the next Waypoint and

468
00:16:58,680 --> 00:17:00,320
one is staying within the bounding box

469
00:17:00,320 --> 00:17:02,820
and within each mode it's a simple PID

470
00:17:02,820 --> 00:17:05,640
controller it takes in the era of the

471
00:17:05,640 --> 00:17:08,939
both distance and the angle and

472
00:17:08,939 --> 00:17:10,980
calculates the thrust needed for the for

473
00:17:10,980 --> 00:17:12,780
the two motions

474
00:17:12,780 --> 00:17:15,359
um so yeah so here's the fun part we are

475
00:17:15,359 --> 00:17:16,740
testing the control performance on the

476
00:17:16,740 --> 00:17:19,799
river so uh here in this experiment we

477
00:17:19,799 --> 00:17:21,299
confirmed the accuracy of the

478
00:17:21,299 --> 00:17:23,160
localization algorithm so the boat was

479
00:17:23,160 --> 00:17:25,980
driven in a straight line and we derived

480
00:17:25,980 --> 00:17:28,380
the trajectory from our drone video

481
00:17:28,380 --> 00:17:30,960
um and then we plotted the raw GPS data

482
00:17:30,960 --> 00:17:33,720
which has a range of 5 meters but after

483
00:17:33,720 --> 00:17:36,000
we like like pass it through the common

484
00:17:36,000 --> 00:17:39,900
filter it was got down to one meter and

485
00:17:39,900 --> 00:17:41,820
this was like good enough for our

486
00:17:41,820 --> 00:17:44,280
Precision for the control and then the

487
00:17:44,280 --> 00:17:46,020
other thing that we tested was that can

488
00:17:46,020 --> 00:17:47,760
it hold itself in the same place while

489
00:17:47,760 --> 00:17:49,740
it's doing the sampling measuring so we

490
00:17:49,740 --> 00:17:50,760
place the boat at three different

491
00:17:50,760 --> 00:17:52,740
locations in autonomy mode for 20

492
00:17:52,740 --> 00:17:54,480
minutes and then again derive the

493
00:17:54,480 --> 00:17:56,160
trajectory from drone videos and plot

494
00:17:56,160 --> 00:17:58,380
them against the bounding circles and

495
00:17:58,380 --> 00:18:00,419
validated that yes it can hold itself

496
00:18:00,419 --> 00:18:02,100
within the two meter radius that we

497
00:18:02,100 --> 00:18:04,380
asked for and last but not least we

498
00:18:04,380 --> 00:18:06,299
tested its ability to follow a set of

499
00:18:06,299 --> 00:18:08,400
waypoints so in this plot we actually

500
00:18:08,400 --> 00:18:10,140
showed both the simulation results and

501
00:18:10,140 --> 00:18:11,660
the actual results

502
00:18:11,660 --> 00:18:15,660
and the German video was kind of like

503
00:18:15,660 --> 00:18:17,280
matches it up but I don't think it's the

504
00:18:17,280 --> 00:18:18,840
same one but essentially in simulation

505
00:18:18,840 --> 00:18:20,880
we tune the parameters with a

506
00:18:20,880 --> 00:18:22,500
probabilistic sensor input and then

507
00:18:22,500 --> 00:18:24,480
during testing we asked it to follow the

508
00:18:24,480 --> 00:18:26,760
same waypoints and see whether like the

509
00:18:26,760 --> 00:18:29,100
performance was close enough as what we

510
00:18:29,100 --> 00:18:31,200
thought it would do and this actually

511
00:18:31,200 --> 00:18:33,299
confirms our simulation results pretty

512
00:18:33,299 --> 00:18:35,100
well and most importantly it was able to

513
00:18:35,100 --> 00:18:36,660
hold itself at the spot that we asked it

514
00:18:36,660 --> 00:18:38,400
to hold it

515
00:18:38,400 --> 00:18:39,120
um

516
00:18:39,120 --> 00:18:42,900
cool so uh lastly I guess a few brief

517
00:18:42,900 --> 00:18:45,720
words um we did on the power so for the

518
00:18:45,720 --> 00:18:48,240
power source we added up the power needs

519
00:18:48,240 --> 00:18:50,039
of all the components and did the down

520
00:18:50,039 --> 00:18:52,140
selection again and to balance between

521
00:18:52,140 --> 00:18:55,260
cost and the weight we end up deciding

522
00:18:55,260 --> 00:18:58,380
on a gasoline generator so that's uh so

523
00:18:58,380 --> 00:18:59,520
there's actually a pretty dramatic story

524
00:18:59,520 --> 00:19:00,960
here on why we decided gasoline

525
00:19:00,960 --> 00:19:03,360
generator which we'll get into later but

526
00:19:03,360 --> 00:19:05,280
that's all you need to know for now cool

527
00:19:05,280 --> 00:19:08,160
so let's look at what SS mapper will be

528
00:19:08,160 --> 00:19:10,500
look like for a user that's an ideal

529
00:19:10,500 --> 00:19:12,600
user flow that we took a video let's say

530
00:19:12,600 --> 00:19:15,480
Joe our one of our main contacts from

531
00:19:15,480 --> 00:19:17,160
the United States Geological Survey is

532
00:19:17,160 --> 00:19:18,480
going to collect data and samples from

533
00:19:18,480 --> 00:19:20,880
the Delaware River he arrives outside in

534
00:19:20,880 --> 00:19:23,340
his very typical pickup truck not from

535
00:19:23,340 --> 00:19:25,020
U-Haul and with the help from the driver

536
00:19:25,020 --> 00:19:27,179
he unloaded this mapper and takes it to

537
00:19:27,179 --> 00:19:29,640
the dock and then he turns on the

538
00:19:29,640 --> 00:19:32,220
gasoline generator on SS mapper and then

539
00:19:32,220 --> 00:19:35,340
he also pumps up the boat yes and then

540
00:19:35,340 --> 00:19:37,860
on the user interface you can import the

541
00:19:37,860 --> 00:19:39,419
waypoints and the depth that he wants

542
00:19:39,419 --> 00:19:41,520
the sample and measure from and blah

543
00:19:41,520 --> 00:19:44,120
blah this is a simple UI and then boom

544
00:19:44,120 --> 00:19:48,120
off it goes cool so SSS mapper is

545
00:19:48,120 --> 00:19:49,740
running in the water Joe can follow as

546
00:19:49,740 --> 00:19:51,000
his mappers progress through the

547
00:19:51,000 --> 00:19:52,740
interface with live data streaming in

548
00:19:52,740 --> 00:19:54,720
and if anything happens you can switch

549
00:19:54,720 --> 00:19:56,460
to manual control from the user

550
00:19:56,460 --> 00:19:58,620
interface so in four hours SS mapper

551
00:19:58,620 --> 00:20:00,660
drives back with 100 data points 2.5

552
00:20:00,660 --> 00:20:02,880
liter of samples and he packs up and

553
00:20:02,880 --> 00:20:04,620
goes back to the office and that's half

554
00:20:04,620 --> 00:20:07,559
a day of work so full disclaimer we

555
00:20:07,559 --> 00:20:09,780
didn't actually implement the UI and

556
00:20:09,780 --> 00:20:11,400
today real-time data processing at the

557
00:20:11,400 --> 00:20:13,740
end but this is an ideal user flow that

558
00:20:13,740 --> 00:20:17,580
we used for pitching this to like like a

559
00:20:17,580 --> 00:20:20,160
lot of teachers all right so this is

560
00:20:20,160 --> 00:20:21,539
what we end up achieving

561
00:20:21,539 --> 00:20:24,539
um the we end up getting a fixed cost of

562
00:20:24,539 --> 00:20:27,419
about like 2800 so that's under three

563
00:20:27,419 --> 00:20:30,240
thousand and then it is of course much

564
00:20:30,240 --> 00:20:31,620
cheaper than the existing other

565
00:20:31,620 --> 00:20:33,360
Solutions and we also achieved a much

566
00:20:33,360 --> 00:20:35,100
lower unit cost because as this mapper

567
00:20:35,100 --> 00:20:36,900
can collect a lot of data points and a

568
00:20:36,900 --> 00:20:38,760
lot of water sample in one trip one

569
00:20:38,760 --> 00:20:39,960
thing that we did have to mention that

570
00:20:39,960 --> 00:20:41,940
we didn't achieve the 41 metrics that

571
00:20:41,940 --> 00:20:43,799
they asked for but we did 60 which is

572
00:20:43,799 --> 00:20:44,880
already a lot better than the two

573
00:20:44,880 --> 00:20:47,340
metrics that they can do but there's

574
00:20:47,340 --> 00:20:49,679
still a lot to improve here and last but

575
00:20:49,679 --> 00:20:51,500
not least we reduced the Manpower

576
00:20:51,500 --> 00:20:54,539
required per trip from 12 hours to 4

577
00:20:54,539 --> 00:20:55,860
hours

578
00:20:55,860 --> 00:20:58,620
so here is a close-up video from the

579
00:20:58,620 --> 00:21:00,780
final System test and we're proud to say

580
00:21:00,780 --> 00:21:02,340
that SS mapper helps water authorities

581
00:21:02,340 --> 00:21:05,400
get more data at a lower cost

582
00:21:05,400 --> 00:21:07,200
right that's not the end yet so here are

583
00:21:07,200 --> 00:21:08,640
some of our takeaways from building SS

584
00:21:08,640 --> 00:21:11,039
mapper and then if you still remember

585
00:21:11,039 --> 00:21:12,419
this diagram that I mentioned at the

586
00:21:12,419 --> 00:21:14,280
beginning we actually didn't take it too

587
00:21:14,280 --> 00:21:16,080
seriously during the process and we got

588
00:21:16,080 --> 00:21:17,940
a couple robots and it kicked us back to

589
00:21:17,940 --> 00:21:20,039
the side room so to summarize how it has

590
00:21:20,039 --> 00:21:21,299
helped us

591
00:21:21,299 --> 00:21:23,220
um first the metrics that we designed at

592
00:21:23,220 --> 00:21:25,080
the beginning the big slide with a lot

593
00:21:25,080 --> 00:21:26,880
of numbers that kept us on track by

594
00:21:26,880 --> 00:21:28,860
providing a way to objectively measure

595
00:21:28,860 --> 00:21:30,960
progress and success so we could wrap up

596
00:21:30,960 --> 00:21:32,940
every stage very quickly and move on to

597
00:21:32,940 --> 00:21:35,580
the next and as you can tell we use down

598
00:21:35,580 --> 00:21:37,380
selection throughout the design process

599
00:21:37,380 --> 00:21:40,740
high level architecture subsystems and

600
00:21:40,740 --> 00:21:43,140
then some lessons learned always test

601
00:21:43,140 --> 00:21:45,240
the subsystems first before putting

602
00:21:45,240 --> 00:21:46,980
everything together we learned it the

603
00:21:46,980 --> 00:21:49,320
hard way and also budget a lot of time

604
00:21:49,320 --> 00:21:50,520
for integrating everything together

605
00:21:50,520 --> 00:21:51,960
because they always break when you put

606
00:21:51,960 --> 00:21:53,700
them together so we actually try putting

607
00:21:53,700 --> 00:21:55,260
everything together at first something

608
00:21:55,260 --> 00:21:57,240
broke and we have to put take it apart

609
00:21:57,240 --> 00:21:59,100
and integrate them one by one at a time

610
00:21:59,100 --> 00:22:01,740
and lastly operations

611
00:22:01,740 --> 00:22:03,419
um so we actually found a lot of

612
00:22:03,419 --> 00:22:05,159
usability issues at the final systems

613
00:22:05,159 --> 00:22:07,380
test that we did not anticipate such as

614
00:22:07,380 --> 00:22:09,960
how to organize the spool of tubes very

615
00:22:09,960 --> 00:22:12,600
elegantly and to make this SS mapper

616
00:22:12,600 --> 00:22:14,400
usable by everyone there's still a long

617
00:22:14,400 --> 00:22:15,659
way to go

618
00:22:15,659 --> 00:22:18,179
so uh this was the drama that I promised

619
00:22:18,179 --> 00:22:19,980
so we ran into many unfamiliar subjects

620
00:22:19,980 --> 00:22:21,600
throughout the project and it's okay to

621
00:22:21,600 --> 00:22:23,460
be wrong for the very few first few uh

622
00:22:23,460 --> 00:22:25,200
for the first few times as long as you

623
00:22:25,200 --> 00:22:27,480
keep trying so our initial calculation

624
00:22:27,480 --> 00:22:29,820
for battery capacity was very wrong and

625
00:22:29,820 --> 00:22:31,320
we were also spending a lot of time

626
00:22:31,320 --> 00:22:32,940
trying to build a battery pack because

627
00:22:32,940 --> 00:22:35,039
we had no idea how to build one and as

628
00:22:35,039 --> 00:22:36,659
we're running out of time some advisor

629
00:22:36,659 --> 00:22:38,100
was saying hey why don't you just use a

630
00:22:38,100 --> 00:22:40,080
small gas generator we're like sure so

631
00:22:40,080 --> 00:22:43,020
we did but we had to add a lid to keep

632
00:22:43,020 --> 00:22:45,179
the generator away from water as worn by

633
00:22:45,179 --> 00:22:46,860
the manufacturer and we also had to

634
00:22:46,860 --> 00:22:49,320
build an entire air circulation system

635
00:22:49,320 --> 00:22:53,220
Inlet fan exotuct to make sure that the

636
00:22:53,220 --> 00:22:55,440
generator can stay functional throughout

637
00:22:55,440 --> 00:22:58,020
the four hours so here we are this is

638
00:22:58,020 --> 00:23:00,120
how we built the lid with carbon fiber

639
00:23:00,120 --> 00:23:02,220
and as you can tell we're having a lot

640
00:23:02,220 --> 00:23:03,480
of fun

641
00:23:03,480 --> 00:23:07,200
um so yeah so uh my third takeaway from

642
00:23:07,200 --> 00:23:08,760
this journey was that to solve

643
00:23:08,760 --> 00:23:10,559
environmental issues we need a lot more

644
00:23:10,559 --> 00:23:12,600
Hardware Solutions and my major was

645
00:23:12,600 --> 00:23:14,100
electrical engineering and I did most of

646
00:23:14,100 --> 00:23:15,659
the software work on this project but

647
00:23:15,659 --> 00:23:17,220
software was not going to help us

648
00:23:17,220 --> 00:23:19,380
collect more data from a muddy river nor

649
00:23:19,380 --> 00:23:21,299
was able to fix global warming so

650
00:23:21,299 --> 00:23:23,039
because of this after I start working I

651
00:23:23,039 --> 00:23:24,419
started nerva Labs with a team of

652
00:23:24,419 --> 00:23:26,400
roboticists and Engineers with a mission

653
00:23:26,400 --> 00:23:28,140
to encourage more Hardware Engineers to

654
00:23:28,140 --> 00:23:30,179
build climate solutions by sharing what

655
00:23:30,179 --> 00:23:32,880
we've learned right now we run a Blog

656
00:23:32,880 --> 00:23:34,799
and the newsletter are impactful climate

657
00:23:34,799 --> 00:23:36,539
Hardware Solutions and sometimes share

658
00:23:36,539 --> 00:23:38,220
tips on applying robotics to real world

659
00:23:38,220 --> 00:23:41,520
problems and soon we are gonna try to

660
00:23:41,520 --> 00:23:43,260
share some tips of climate Hardware

661
00:23:43,260 --> 00:23:45,000
project ideas coming from industry

662
00:23:45,000 --> 00:23:46,559
stakeholders so you're welcome to learn

663
00:23:46,559 --> 00:23:48,120
more through this link or come find me

664
00:23:48,120 --> 00:23:49,140
after the talk

665
00:23:49,140 --> 00:23:51,419
so I'd like to thank all our advisors

666
00:23:51,419 --> 00:23:53,460
from the water authorities and hakade

667
00:23:53,460 --> 00:23:54,840
Cornell cup University of Pennsylvania

668
00:23:54,840 --> 00:23:57,720
from making SS map where possible and

669
00:23:57,720 --> 00:23:59,580
thank you for listening now I'm open for

670
00:23:59,580 --> 00:24:01,919
questions if we have time

671
00:24:01,919 --> 00:24:03,700
this is

672
00:24:03,700 --> 00:24:09,259
[Applause]

