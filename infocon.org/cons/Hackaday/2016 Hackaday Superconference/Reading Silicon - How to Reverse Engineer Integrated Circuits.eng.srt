1
00:00:01,000 --> 00:00:04,230
[Music]

2
00:00:19,660 --> 00:00:30,079
[Music]

3
00:00:30,690 --> 00:00:36,280
hello and welcome back everyone

4
00:00:33,010 --> 00:00:39,010
um<font color="#CCCCCC"> I am very excited to announce our</font>

5
00:00:36,280 --> 00:00:42,790
next speaker<font color="#CCCCCC"> uh</font><font color="#E5E5E5"> Ken</font><font color="#CCCCCC"> Sheriff</font>

6
00:00:39,010 --> 00:00:46,360
um he is he writes a popular blog blog

7
00:00:42,790 --> 00:00:48,129
right<font color="#CCCCCC"> oh come on reverse-engineering</font>

8
00:00:46,360 --> 00:00:51,190
everything from<font color="#E5E5E5"> chargers to micro</font>

9
00:00:48,130 --> 00:00:54,220
processors<font color="#CCCCCC"> he</font><font color="#E5E5E5"> created the IR remote</font>

10
00:00:51,190 --> 00:00:56,920
library for Arduino<font color="#CCCCCC"> and</font><font color="#E5E5E5"> has written</font>

11
00:00:54,220 --> 00:01:02,470
about<font color="#E5E5E5"> Bitcoin mining on a 1960s</font>

12
00:00:56,920 --> 00:01:04,599
<font color="#CCCCCC">punch-card computer um he can</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> a</font>

13
00:01:02,470 --> 00:01:07,420
farmer formerly a programmer at Google

14
00:01:04,599 --> 00:01:10,359
and is currently restoring a Xerox Alto

15
00:01:07,420 --> 00:01:21,639
please join join me in welcoming Ken to

16
00:01:10,359 --> 00:01:24,939
the stage hi<font color="#E5E5E5"> everyone thank</font><font color="#CCCCCC"> you for</font>

17
00:01:21,639 --> 00:01:26,408
<font color="#E5E5E5">coming out here</font><font color="#CCCCCC"> so you've</font><font color="#E5E5E5"> probably</font>

18
00:01:24,939 --> 00:01:28,508
wondered you<font color="#CCCCCC"> know what's happening</font>

19
00:01:26,409 --> 00:01:29,889
inside<font color="#E5E5E5"> integrated circuits</font><font color="#CCCCCC"> what's</font><font color="#E5E5E5"> inside</font>

20
00:01:28,509 --> 00:01:31,899
<font color="#E5E5E5">those little packages maybe you've</font>

21
00:01:29,889 --> 00:01:32,770
looked at<font color="#CCCCCC"> Dai photos and thought no this</font>

22
00:01:31,899 --> 00:01:35,020
makes no sense

23
00:01:32,770 --> 00:01:37,420
so I'm here to introduce<font color="#CCCCCC"> you to the</font>

24
00:01:35,020 --> 00:01:41,949
bizarre hobby of reverse<font color="#CCCCCC"> engineering old</font>

25
00:01:37,420 --> 00:01:44,109
chips<font color="#E5E5E5"> so I'll start with the z80 any z80</font>

26
00:01:41,950 --> 00:01:47,170
fans out there<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> awesome</font>

27
00:01:44,109 --> 00:01:49,288
so this 8-bit<font color="#E5E5E5"> CPU</font><font color="#CCCCCC"> here's a dye photo I</font>

28
00:01:47,170 --> 00:01:52,299
<font color="#E5E5E5">got from</font><font color="#CCCCCC"> Zug towbars</font>

29
00:01:49,289 --> 00:01:54,249
<font color="#E5E5E5">let's see if this laser pointer works so</font>

30
00:01:52,299 --> 00:01:55,990
when you look at<font color="#E5E5E5"> this chip at first you</font>

31
00:01:54,249 --> 00:01:58,169
may think this is<font color="#E5E5E5"> just like a crazy</font>

32
00:01:55,990 --> 00:02:00,158
jumble of circuitry what's going on here

33
00:01:58,169 --> 00:02:02,020
<font color="#E5E5E5">well there's some ways you can figure</font>

34
00:02:00,159 --> 00:02:03,819
out what's<font color="#E5E5E5"> going on on these little</font>

35
00:02:02,020 --> 00:02:06,029
squares<font color="#E5E5E5"> around the outside those are the</font>

36
00:02:03,819 --> 00:02:08,170
pads that<font color="#E5E5E5"> connect</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> external pins</font>

37
00:02:06,029 --> 00:02:10,419
<font color="#E5E5E5">you'll notice that a lot of them have</font>

38
00:02:08,169 --> 00:02:13,390
these green squiggly things those are

39
00:02:10,419 --> 00:02:15,250
driver transistors for the outputs<font color="#E5E5E5"> you</font>

40
00:02:13,390 --> 00:02:18,010
can<font color="#E5E5E5"> notice some big pads here for ground</font>

41
00:02:15,250 --> 00:02:19,540
and<font color="#E5E5E5"> power and so once you figured</font><font color="#CCCCCC"> that</font>

42
00:02:18,010 --> 00:02:20,859
out<font color="#E5E5E5"> that gives you a bunch of landmarks</font>

43
00:02:19,540 --> 00:02:22,780
that you can use to look<font color="#E5E5E5"> at the data</font>

44
00:02:20,860 --> 00:02:24,549
sheet<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> you can label all</font><font color="#E5E5E5"> the</font>

45
00:02:22,780 --> 00:02:26,370
<font color="#E5E5E5">pins and this gives you a huge</font><font color="#CCCCCC"> amount of</font>

46
00:02:24,549 --> 00:02:28,689
information<font color="#E5E5E5"> about what the chip is doing</font>

47
00:02:26,370 --> 00:02:31,269
so you can see up at the<font color="#E5E5E5"> top</font><font color="#CCCCCC"> of the</font>

48
00:02:28,689 --> 00:02:32,469
control pins so that<font color="#E5E5E5"> lets you know</font><font color="#CCCCCC"> that</font>

49
00:02:31,269 --> 00:02:33,189
the circuitry up there is the control

50
00:02:32,469 --> 00:02:36,159
<font color="#E5E5E5">circuitry</font>

51
00:02:33,189 --> 00:02:36,989
<font color="#E5E5E5">you've got address pins around here you</font>

52
00:02:36,159 --> 00:02:38,760
follow<font color="#E5E5E5"> those pin</font>

53
00:02:36,990 --> 00:02:41,820
and you discover the address bus runs

54
00:02:38,760 --> 00:02:43,489
along<font color="#CCCCCC"> here it</font><font color="#E5E5E5"> may show</font><font color="#CCCCCC"> move</font><font color="#E5E5E5"> this over</font><font color="#CCCCCC"> in</font>

55
00:02:41,820 --> 00:02:46,560
right so I<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see you guys over there</font>

56
00:02:43,490 --> 00:02:48,410
<font color="#CCCCCC">data pins</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> follow them to the</font>

57
00:02:46,560 --> 00:02:50,970
data bus which runs<font color="#CCCCCC"> through here</font>

58
00:02:48,410 --> 00:02:53,730
<font color="#E5E5E5">connects to these blocks here connects</font>

59
00:02:50,970 --> 00:02:54,990
<font color="#E5E5E5">to this block up</font><font color="#CCCCCC"> here so already even</font><font color="#E5E5E5"> at</font>

60
00:02:53,730 --> 00:02:58,140
<font color="#E5E5E5">this level we can</font><font color="#CCCCCC"> figure out a lot of</font>

61
00:02:54,990 --> 00:03:00,360
<font color="#E5E5E5">what's going</font><font color="#CCCCCC"> on in the circuit there's a</font>

62
00:02:58,140 --> 00:03:03,269
few regular blocks amid the chaos here

63
00:03:00,360 --> 00:03:06,330
here<font color="#E5E5E5"> and</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> and those we can look at</font>

64
00:03:03,270 --> 00:03:08,310
in more detail<font color="#CCCCCC"> first block is the</font>

65
00:03:06,330 --> 00:03:10,230
register file<font color="#CCCCCC"> and whenever you</font><font color="#E5E5E5"> see a</font>

66
00:03:08,310 --> 00:03:11,850
bunch of repeating patterns<font color="#E5E5E5"> like this</font>

67
00:03:10,230 --> 00:03:14,369
each of<font color="#CCCCCC"> one</font><font color="#E5E5E5"> of these little blocks is</font>

68
00:03:11,850 --> 00:03:17,070
one bit of storage<font color="#E5E5E5"> and so this is the</font>

69
00:03:14,370 --> 00:03:19,530
<font color="#CCCCCC">Saudis internal registers if you count</font>

70
00:03:17,070 --> 00:03:22,709
down there's<font color="#E5E5E5"> sixteen blocks so</font><font color="#CCCCCC"> it's a</font>

71
00:03:19,530 --> 00:03:26,250
16-bit register pair so each column<font color="#E5E5E5"> is a</font>

72
00:03:22,710 --> 00:03:27,870
separate register<font color="#E5E5E5"> over</font><font color="#CCCCCC"> here we know the</font>

73
00:03:26,250 --> 00:03:30,330
address<font color="#E5E5E5"> lines are connected</font><font color="#CCCCCC"> so we can</font>

74
00:03:27,870 --> 00:03:32,250
figure that<font color="#CCCCCC"> this must be the</font><font color="#E5E5E5"> program</font>

75
00:03:30,330 --> 00:03:34,380
counter<font color="#E5E5E5"> and the incrementing circuit for</font>

76
00:03:32,250 --> 00:03:36,090
the program<font color="#CCCCCC"> counter and then the data</font>

77
00:03:34,380 --> 00:03:38,730
bus is connected over<font color="#E5E5E5"> here to read out</font>

78
00:03:36,090 --> 00:03:40,050
the registers<font color="#CCCCCC"> if you go into a little</font>

79
00:03:38,730 --> 00:03:43,140
<font color="#CCCCCC">more detail there's some interesting</font>

80
00:03:40,050 --> 00:03:46,290
<font color="#E5E5E5">things</font><font color="#CCCCCC"> I found</font><font color="#E5E5E5"> there's secret registers</font>

81
00:03:43,140 --> 00:03:48,420
<font color="#CCCCCC">WZ</font><font color="#E5E5E5"> these are used internally</font><font color="#CCCCCC"> even though</font>

82
00:03:46,290 --> 00:03:52,200
they're invisible<font color="#CCCCCC"> to the programmer</font><font color="#E5E5E5"> for</font>

83
00:03:48,420 --> 00:03:53,850
internal storage<font color="#CCCCCC"> another thing is this</font>

84
00:03:52,200 --> 00:03:56,820
<font color="#CCCCCC">gating has a couple instructions that</font>

85
00:03:53,850 --> 00:03:58,410
will swap the<font color="#CCCCCC"> data in registers and it</font>

86
00:03:56,820 --> 00:04:00,840
turns out<font color="#E5E5E5"> that it's actually</font><font color="#CCCCCC"> not moving</font>

87
00:03:58,410 --> 00:04:03,240
<font color="#CCCCCC">the</font><font color="#E5E5E5"> data between registers instead it</font>

88
00:04:00,840 --> 00:04:04,860
swaps<font color="#E5E5E5"> the control lines at the top so</font>

89
00:04:03,240 --> 00:04:06,780
it's much<font color="#CCCCCC"> faster than actually</font><font color="#E5E5E5"> moving</font>

90
00:04:04,860 --> 00:04:08,550
data between registers<font color="#E5E5E5"> so just one of</font>

91
00:04:06,780 --> 00:04:11,970
these optimizations<font color="#CCCCCC"> that you find inside</font>

92
00:04:08,550 --> 00:04:13,700
<font color="#CCCCCC">a chip the next thing that you see in a</font>

93
00:04:11,970 --> 00:04:16,589
<font color="#E5E5E5">lot of microprocessor is from this era</font>

94
00:04:13,700 --> 00:04:20,420
<font color="#CCCCCC">is called</font><font color="#E5E5E5"> the PLA for instruction</font>

95
00:04:16,589 --> 00:04:23,580
decoding<font color="#E5E5E5"> and that's this block up here</font>

96
00:04:20,420 --> 00:04:26,010
<font color="#CCCCCC">the way this</font><font color="#E5E5E5"> works is the data bus we</font>

97
00:04:23,580 --> 00:04:27,359
figured out comes in here<font color="#CCCCCC"> the</font>

98
00:04:26,010 --> 00:04:29,849
destruction register holds the

99
00:04:27,360 --> 00:04:32,820
instruction the bits<font color="#E5E5E5"> of the instruction</font>

100
00:04:29,850 --> 00:04:35,070
flow back and<font color="#CCCCCC"> forth</font><font color="#E5E5E5"> across here each</font>

101
00:04:32,820 --> 00:04:38,400
transistor will match a bit in the

102
00:04:35,070 --> 00:04:39,990
instruction so what you end up with<font color="#E5E5E5"> is</font>

103
00:04:38,400 --> 00:04:42,690
<font color="#E5E5E5">you know</font><font color="#CCCCCC"> something like</font><font color="#E5E5E5"> say</font><font color="#CCCCCC"> zero zero</font>

104
00:04:39,990 --> 00:04:45,930
<font color="#CCCCCC">one indicates a load that will generate</font>

105
00:04:42,690 --> 00:04:48,180
a control line coming out other<font color="#E5E5E5"> other</font>

106
00:04:45,930 --> 00:04:50,290
<font color="#CCCCCC">things will match all the different</font>

107
00:04:48,180 --> 00:04:52,240
instructions<font color="#CCCCCC"> so this is where the</font>

108
00:04:50,290 --> 00:04:53,500
matching between<font color="#E5E5E5"> the instruction set and</font>

109
00:04:52,240 --> 00:04:56,230
what<font color="#CCCCCC"> actually happens in the chip</font>

110
00:04:53,500 --> 00:04:59,920
happens and so instruction sets get

111
00:04:56,230 --> 00:05:03,430
designed so that it's easy<font color="#CCCCCC"> to get from a</font>

112
00:04:59,920 --> 00:05:05,440
bit pattern<font color="#CCCCCC"> into what's</font><font color="#E5E5E5"> happening</font><font color="#CCCCCC"> on the</font>

113
00:05:03,430 --> 00:05:07,270
third interesting block is the ALU and

114
00:05:05,440 --> 00:05:09,130
this is where things actually<font color="#E5E5E5"> happened</font>

115
00:05:07,270 --> 00:05:13,359
in the chip the addition subtraction bit

116
00:05:09,130 --> 00:05:15,159
operations<font color="#E5E5E5"> most chips use a bit slice so</font>

117
00:05:13,360 --> 00:05:17,800
they'll have<font color="#E5E5E5"> for an 8-bit processor</font>

118
00:05:15,160 --> 00:05:20,620
<font color="#E5E5E5">eight stacks of circuitry</font><font color="#CCCCCC"> one handling</font>

119
00:05:17,800 --> 00:05:22,840
each bit of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> of the data now the</font>

120
00:05:20,620 --> 00:05:24,340
bizarre thing I found<font color="#E5E5E5"> in the z80</font><font color="#CCCCCC"> is that</font>

121
00:05:22,840 --> 00:05:27,369
you can see there's only four slices

122
00:05:24,340 --> 00:05:30,010
<font color="#E5E5E5">here the z80 is an</font><font color="#CCCCCC"> 8-bit</font><font color="#E5E5E5"> chip but it</font>

123
00:05:27,370 --> 00:05:33,150
only has<font color="#CCCCCC"> four bits of of ALU how does</font>

124
00:05:30,010 --> 00:05:35,409
<font color="#E5E5E5">that work well it turns out that the</font>

125
00:05:33,150 --> 00:05:37,330
performance of the z80 the designers

126
00:05:35,410 --> 00:05:39,220
<font color="#CCCCCC">realized it was limited by memory speed</font>

127
00:05:37,330 --> 00:05:42,609
so they had<font color="#E5E5E5"> enough time that could run</font>

128
00:05:39,220 --> 00:05:44,920
everything through<font color="#E5E5E5"> the ALU twice so</font><font color="#CCCCCC"> they</font>

129
00:05:42,610 --> 00:05:48,910
<font color="#E5E5E5">saved space by putting a 4-bit ALU into</font>

130
00:05:44,920 --> 00:05:50,290
an 8-bit chip<font color="#E5E5E5"> so you know from this</font>

131
00:05:48,910 --> 00:05:52,390
<font color="#CCCCCC">level we</font><font color="#E5E5E5"> can figure out a lot</font><font color="#CCCCCC"> about the</font>

132
00:05:50,290 --> 00:05:54,760
chip but to learn more<font color="#E5E5E5"> we have to dive</font>

133
00:05:52,390 --> 00:05:57,700
down into the transistor<font color="#CCCCCC"> level</font><font color="#E5E5E5"> so I'll</font>

134
00:05:54,760 --> 00:06:01,090
give<font color="#E5E5E5"> you the quick</font><font color="#CCCCCC"> description of MOS</font>

135
00:05:57,700 --> 00:06:03,520
<font color="#E5E5E5">transistors</font><font color="#CCCCCC"> you know for our purposes we</font>

136
00:06:01,090 --> 00:06:05,469
<font color="#CCCCCC">can consider it basically a switch and</font>

137
00:06:03,520 --> 00:06:07,150
when the gate is put on<font color="#CCCCCC"> we'll connect</font>

138
00:06:05,470 --> 00:06:10,570
the source<font color="#E5E5E5"> and drain when the gate</font><font color="#CCCCCC"> is</font>

139
00:06:07,150 --> 00:06:12,159
off the disconnected<font color="#CCCCCC"> in on</font><font color="#E5E5E5"> the silicon</font>

140
00:06:10,570 --> 00:06:14,380
we have a silicon layer which<font color="#CCCCCC"> is</font>

141
00:06:12,160 --> 00:06:16,450
basically insulator<font color="#E5E5E5"> parts of it get</font>

142
00:06:14,380 --> 00:06:20,430
diffused<font color="#E5E5E5"> with impurities such as</font><font color="#CCCCCC"> boron</font>

143
00:06:16,450 --> 00:06:23,400
to become conducting semiconductor

144
00:06:20,430 --> 00:06:25,570
<font color="#CCCCCC">there's a poly silicon gate on top</font>

145
00:06:23,400 --> 00:06:28,719
separated<font color="#E5E5E5"> by a small insulating layer</font>

146
00:06:25,570 --> 00:06:30,550
when the gate<font color="#CCCCCC"> is on due to</font><font color="#E5E5E5"> semiconductor</font>

147
00:06:28,720 --> 00:06:32,500
magic it makes<font color="#E5E5E5"> this part conduct and</font>

148
00:06:30,550 --> 00:06:34,890
when the gate is off this<font color="#E5E5E5"> is not</font>

149
00:06:32,500 --> 00:06:37,990
conducting<font color="#E5E5E5"> and they're disconnected</font>

150
00:06:34,890 --> 00:06:41,020
<font color="#E5E5E5">couple</font><font color="#CCCCCC"> interesting things</font><font color="#E5E5E5"> this thin</font>

151
00:06:37,990 --> 00:06:43,600
oxide layer<font color="#CCCCCC"> is why MOS transistors or</font>

152
00:06:41,020 --> 00:06:44,919
static sensitive<font color="#E5E5E5"> if you you know shuffle</font>

153
00:06:43,600 --> 00:06:46,870
your feet across the<font color="#E5E5E5"> carpet</font><font color="#CCCCCC"> and touch</font>

154
00:06:44,920 --> 00:06:48,520
the chip<font color="#E5E5E5"> the charge in the gate has</font>

155
00:06:46,870 --> 00:06:50,920
nowhere to<font color="#E5E5E5"> go and it'll just blow a hole</font>

156
00:06:48,520 --> 00:06:55,240
right<font color="#CCCCCC"> through the oxide layer</font><font color="#E5E5E5"> and</font>

157
00:06:50,920 --> 00:06:56,710
destroy the chip<font color="#CCCCCC"> in the early days the</font>

158
00:06:55,240 --> 00:06:59,740
gate was made<font color="#E5E5E5"> out</font><font color="#CCCCCC"> of metal so you'd have</font>

159
00:06:56,710 --> 00:07:01,870
metal oxide and semiconductor<font color="#E5E5E5"> so that</font>

160
00:06:59,740 --> 00:07:04,270
was your MOS transistor ever since<font color="#E5E5E5"> about</font>

161
00:07:01,870 --> 00:07:06,580
1970<font color="#E5E5E5"> they've</font><font color="#CCCCCC"> used poly silicon</font>

162
00:07:04,270 --> 00:07:11,020
so it's really a POS transistor<font color="#E5E5E5"> but they</font>

163
00:07:06,580 --> 00:07:13,389
<font color="#E5E5E5">don't use that word so so this is the</font>

164
00:07:11,020 --> 00:07:15,008
<font color="#E5E5E5">listen</font><font color="#CCCCCC"> you know once you have the</font>

165
00:07:13,389 --> 00:07:18,220
transistors you can<font color="#E5E5E5"> connect them up to</font>

166
00:07:15,009 --> 00:07:20,380
form some gates<font color="#CCCCCC"> take two transistors you</font>

167
00:07:18,220 --> 00:07:23,229
have a NAND gate<font color="#E5E5E5"> if both your inputs are</font>

168
00:07:20,380 --> 00:07:25,690
<font color="#E5E5E5">one the gates conduct it pulls the</font>

169
00:07:23,229 --> 00:07:27,639
output to<font color="#E5E5E5"> ground you get to zero I'm</font>

170
00:07:25,690 --> 00:07:29,319
pretty straightforward and if you have a

171
00:07:27,639 --> 00:07:31,720
zero input<font color="#CCCCCC"> the transistor stops</font>

172
00:07:29,319 --> 00:07:34,479
<font color="#CCCCCC">conducting and this resistor will pull</font>

173
00:07:31,720 --> 00:07:36,370
the output<font color="#E5E5E5"> high and so it's very very</font>

174
00:07:34,479 --> 00:07:39,909
easy<font color="#E5E5E5"> to</font><font color="#CCCCCC"> implement and navigate with with</font>

175
00:07:36,370 --> 00:07:42,099
MOS transistors<font color="#E5E5E5"> when you look at a chip</font>

176
00:07:39,909 --> 00:07:44,080
<font color="#E5E5E5">it's a lot more complicated than</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we</font>

177
00:07:42,099 --> 00:07:47,919
can<font color="#CCCCCC"> zoom way in on</font><font color="#E5E5E5"> the z80 chip and we</font>

178
00:07:44,080 --> 00:07:49,750
<font color="#CCCCCC">get something like this at first it</font>

179
00:07:47,919 --> 00:07:51,669
looks you<font color="#E5E5E5"> know just bizarre but if you</font>

180
00:07:49,750 --> 00:07:55,659
stare at<font color="#E5E5E5"> it long enough it'll start to</font>

181
00:07:51,669 --> 00:07:57,039
<font color="#E5E5E5">make sense here is</font><font color="#CCCCCC"> here's what's on the</font>

182
00:07:55,659 --> 00:07:59,710
chip photo and then here's what it

183
00:07:57,039 --> 00:08:04,599
actually means<font color="#E5E5E5"> you can see this green</font>

184
00:07:59,710 --> 00:08:06,280
region<font color="#E5E5E5"> is conduct doped silicon we have</font>

185
00:08:04,599 --> 00:08:08,169
these<font color="#E5E5E5"> these things that look</font><font color="#CCCCCC"> like metal</font>

186
00:08:06,280 --> 00:08:10,388
<font color="#E5E5E5">on top</font><font color="#CCCCCC"> that's the</font><font color="#E5E5E5"> metal layer of the</font>

187
00:08:08,169 --> 00:08:12,900
chip<font color="#E5E5E5"> that</font><font color="#CCCCCC"> connects stuff up provides</font>

188
00:08:10,389 --> 00:08:15,340
<font color="#CCCCCC">five volts and ground</font><font color="#E5E5E5"> to the the gate</font>

189
00:08:12,900 --> 00:08:18,609
inputs<font color="#CCCCCC"> or poly silicon coming down</font>

190
00:08:15,340 --> 00:08:20,560
wherever poly silicon crosses silicon it

191
00:08:18,610 --> 00:08:22,360
turns into a transistor so you see<font color="#E5E5E5"> that</font>

192
00:08:20,560 --> 00:08:24,699
<font color="#E5E5E5">you have</font><font color="#CCCCCC"> your two transistors for</font><font color="#E5E5E5"> the</font>

193
00:08:22,360 --> 00:08:26,259
NAND gate here and then the pull-up

194
00:08:24,699 --> 00:08:28,270
resistor is actually<font color="#E5E5E5"> implemented with a</font>

195
00:08:26,259 --> 00:08:32,020
transistor because resistors are just

196
00:08:28,270 --> 00:08:34,088
awful<font color="#E5E5E5"> on ICS so if you you know stare at</font>

197
00:08:32,020 --> 00:08:35,649
these diet these chip photos long enough

198
00:08:34,089 --> 00:08:37,209
and<font color="#E5E5E5"> closely enough</font><font color="#CCCCCC"> you can figure out</font>

199
00:08:35,649 --> 00:08:41,140
<font color="#E5E5E5">all</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> transistors figure out the</font>

200
00:08:37,208 --> 00:08:43,088
circuitry<font color="#CCCCCC"> it's a little tedious it's</font>

201
00:08:41,140 --> 00:08:46,120
easier if someone like the visual 6502

202
00:08:43,089 --> 00:08:48,550
team goes in and has<font color="#CCCCCC"> people who</font><font color="#E5E5E5"> digitize</font>

203
00:08:46,120 --> 00:08:50,829
<font color="#E5E5E5">all these all these things into polygons</font>

204
00:08:48,550 --> 00:08:54,670
and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> it's much</font><font color="#E5E5E5"> easier</font><font color="#CCCCCC"> to extract the</font>

205
00:08:50,829 --> 00:08:57,579
transistors and the circuitry so it's

206
00:08:54,670 --> 00:08:59,110
<font color="#E5E5E5">not all</font><font color="#CCCCCC"> Amanda gates though it's just as</font>

207
00:08:57,579 --> 00:09:01,029
easy<font color="#E5E5E5"> to build an or gate by putting the</font>

208
00:08:59,110 --> 00:09:03,370
transistors in parallel<font color="#E5E5E5"> now if any</font>

209
00:09:01,029 --> 00:09:06,160
transistor<font color="#E5E5E5"> is turned on the output is</font>

210
00:09:03,370 --> 00:09:08,440
grounded if all<font color="#E5E5E5"> inputs are</font><font color="#CCCCCC"> 0 then</font><font color="#E5E5E5"> it</font>

211
00:09:06,160 --> 00:09:10,660
gets<font color="#E5E5E5"> pulled high so that seems</font>

212
00:09:08,440 --> 00:09:12,820
straightforward<font color="#E5E5E5"> enough but the designers</font>

213
00:09:10,660 --> 00:09:14,890
of the<font color="#CCCCCC"> Lissie 80 they wanted to optimize</font>

214
00:09:12,820 --> 00:09:17,830
<font color="#CCCCCC">things</font><font color="#E5E5E5"> so they've made a whole bunch</font><font color="#CCCCCC"> of</font>

215
00:09:14,890 --> 00:09:21,520
<font color="#E5E5E5">crazy gates here's one of the gates in</font>

216
00:09:17,830 --> 00:09:24,190
<font color="#E5E5E5">the ALU</font><font color="#CCCCCC"> it's a little hard</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> fall</font><font color="#E5E5E5"> of</font>

217
00:09:21,520 --> 00:09:27,520
the diagram but<font color="#E5E5E5"> transistors</font><font color="#CCCCCC"> 1 2 & 3</font>

218
00:09:24,190 --> 00:09:29,800
<font color="#CCCCCC">connect to this yellow metal strip then</font>

219
00:09:27,520 --> 00:09:31,329
<font color="#CCCCCC">a4 if 4</font><font color="#E5E5E5"> & 5</font><font color="#CCCCCC"> one of</font><font color="#E5E5E5"> those conduct</font>

220
00:09:29,800 --> 00:09:33,099
connects<font color="#E5E5E5"> the middle strip to the output</font>

221
00:09:31,330 --> 00:09:36,180
so that<font color="#E5E5E5"> gives you this circuitry and</font>

222
00:09:33,100 --> 00:09:39,010
then 6 7<font color="#CCCCCC"> & 8</font><font color="#E5E5E5"> or transistors in series</font>

223
00:09:36,180 --> 00:09:40,839
<font color="#E5E5E5">and so that gives you a second part of</font>

224
00:09:39,010 --> 00:09:43,360
<font color="#E5E5E5">the gate so when you put this all</font>

225
00:09:40,840 --> 00:09:46,180
together<font color="#E5E5E5"> you end</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> with a single gate</font>

226
00:09:43,360 --> 00:09:49,530
on the chip is logically<font color="#CCCCCC"> 5 different</font>

227
00:09:46,180 --> 00:09:52,599
<font color="#E5E5E5">gates so it makes things very efficient</font>

228
00:09:49,530 --> 00:09:54,220
<font color="#CCCCCC">you know these two gates are actually</font>

229
00:09:52,600 --> 00:09:55,720
you<font color="#E5E5E5"> don't require any circuitry they're</font>

230
00:09:54,220 --> 00:09:58,090
just you know made by<font color="#CCCCCC"> wiring the two</font>

231
00:09:55,720 --> 00:10:00,400
parts together<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is one</font><font color="#CCCCCC"> of the</font>

232
00:09:58,090 --> 00:10:03,760
ways that<font color="#E5E5E5"> made the this gate II you know</font>

233
00:10:00,400 --> 00:10:06,670
much more compact<font color="#CCCCCC"> I won't try to</font><font color="#E5E5E5"> explain</font>

234
00:10:03,760 --> 00:10:09,700
<font color="#E5E5E5">what this is actually doing other than</font>

235
00:10:06,670 --> 00:10:12,520
it takes<font color="#E5E5E5"> ALU inputs B and C and then</font>

236
00:10:09,700 --> 00:10:16,210
computes the right<font color="#E5E5E5"> operation all with</font>

237
00:10:12,520 --> 00:10:17,829
<font color="#CCCCCC">this</font><font color="#E5E5E5"> one this one gate so</font><font color="#CCCCCC"> al use are</font>

238
00:10:16,210 --> 00:10:20,110
<font color="#E5E5E5">really interesting because every chip</font>

239
00:10:17,830 --> 00:10:21,850
does things<font color="#CCCCCC"> differently you might think</font>

240
00:10:20,110 --> 00:10:24,640
you<font color="#E5E5E5"> just take an adder you take AB gates</font>

241
00:10:21,850 --> 00:10:26,440
<font color="#E5E5E5">and you get the logic you want but but</font>

242
00:10:24,640 --> 00:10:28,180
it's all highly<font color="#E5E5E5"> optimized</font><font color="#CCCCCC"> you know</font>

243
00:10:26,440 --> 00:10:30,670
because it's repeated<font color="#CCCCCC"> four or eight four</font>

244
00:10:28,180 --> 00:10:33,280
or eight times they try<font color="#CCCCCC"> to squeeze</font><font color="#E5E5E5"> out</font>

245
00:10:30,670 --> 00:10:36,520
every<font color="#E5E5E5"> bit of circuitry they can</font><font color="#CCCCCC"> and the</font>

246
00:10:33,280 --> 00:10:37,959
6502 does things totally differently<font color="#E5E5E5"> so</font>

247
00:10:36,520 --> 00:10:41,290
<font color="#E5E5E5">I've written you</font><font color="#CCCCCC"> know more information</font>

248
00:10:37,960 --> 00:10:45,430
<font color="#CCCCCC">on the z80 and al use if you want that</font>

249
00:10:41,290 --> 00:10:47,800
<font color="#E5E5E5">fair</font><font color="#CCCCCC"> so that's</font><font color="#E5E5E5"> is a gating now I'll move</font>

250
00:10:45,430 --> 00:10:51,310
on to an interesting calculator the

251
00:10:47,800 --> 00:10:53,199
Sinclair scientific<font color="#CCCCCC"> the idea there was</font>

252
00:10:51,310 --> 00:10:56,800
<font color="#CCCCCC">Texas instance made this cheap</font>

253
00:10:53,200 --> 00:10:59,200
calculator chip in the 1970s<font color="#E5E5E5"> it had</font><font color="#CCCCCC"> 320</font>

254
00:10:56,800 --> 00:11:01,449
<font color="#CCCCCC">words</font><font color="#E5E5E5"> and instructions in it they could</font>

255
00:10:59,200 --> 00:11:02,920
barely fit<font color="#CCCCCC"> four functions into that</font>

256
00:11:01,450 --> 00:11:06,730
addition subtraction multiplication

257
00:11:02,920 --> 00:11:08,829
<font color="#CCCCCC">division</font><font color="#E5E5E5"> Sinclair took the same chip and</font>

258
00:11:06,730 --> 00:11:11,710
then reprogrammed it to be a<font color="#E5E5E5"> scientific</font>

259
00:11:08,830 --> 00:11:14,170
calculator<font color="#E5E5E5"> with logs and logs trig</font>

260
00:11:11,710 --> 00:11:15,790
inverse trig and the mystery is<font color="#E5E5E5"> how can</font>

261
00:11:14,170 --> 00:11:18,150
you<font color="#E5E5E5"> take a chip that can barely multiply</font>

262
00:11:15,790 --> 00:11:22,750
and make<font color="#E5E5E5"> it into a scientific calculator</font>

263
00:11:18,150 --> 00:11:25,240
<font color="#E5E5E5">so I decided to find out so thanks to</font>

264
00:11:22,750 --> 00:11:27,310
<font color="#E5E5E5">John</font><font color="#CCCCCC"> Rick Master I got this</font><font color="#E5E5E5"> dye photo of</font>

265
00:11:25,240 --> 00:11:29,080
the calculator chip<font color="#CCCCCC"> I'm you can see a</font>

266
00:11:27,310 --> 00:11:30,540
lot<font color="#CCCCCC"> of the same features that showed up</font>

267
00:11:29,080 --> 00:11:33,090
in<font color="#E5E5E5"> the z80 you know</font>

268
00:11:30,540 --> 00:11:36,900
hands around<font color="#E5E5E5"> the outside ALU up here in</font>

269
00:11:33,090 --> 00:11:39,690
the corner<font color="#CCCCCC"> decoding PL a</font><font color="#E5E5E5"> regular</font>

270
00:11:36,900 --> 00:11:41,130
register grid<font color="#E5E5E5"> idols</font><font color="#CCCCCC"> essence and things</font>

271
00:11:39,690 --> 00:11:44,130
you<font color="#CCCCCC"> don't see in the z80 such as</font>

272
00:11:41,130 --> 00:11:46,140
<font color="#CCCCCC">7-segment display drivers but the most</font>

273
00:11:44,130 --> 00:11:47,790
<font color="#CCCCCC">interesting thing for us</font><font color="#E5E5E5"> is instruction</font>

274
00:11:46,140 --> 00:11:50,520
<font color="#E5E5E5">ROM here in the middle which holds the</font>

275
00:11:47,790 --> 00:11:52,380
code<font color="#E5E5E5"> that the calculator runs if you</font>

276
00:11:50,520 --> 00:11:55,290
zoom way in on it<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> see</font>

277
00:11:52,380 --> 00:11:57,330
the individual bits on the<font color="#E5E5E5"> chip in the</font>

278
00:11:55,290 --> 00:11:59,550
metal<font color="#E5E5E5"> layer and so by looking at this</font>

279
00:11:57,330 --> 00:12:01,970
<font color="#E5E5E5">very carefully as able</font><font color="#CCCCCC"> to pull out the</font>

280
00:11:59,550 --> 00:12:04,949
the code that the calculator is running

281
00:12:01,970 --> 00:12:07,230
<font color="#CCCCCC">then is</font><font color="#E5E5E5"> also able</font><font color="#CCCCCC"> to reverse-engineer</font>

282
00:12:04,950 --> 00:12:09,110
the instructions that<font color="#E5E5E5"> it's using and so</font>

283
00:12:07,230 --> 00:12:13,380
I built<font color="#E5E5E5"> a simulator for the calculator</font>

284
00:12:09,110 --> 00:12:16,170
so<font color="#E5E5E5"> you know this simulator you can try</font>

285
00:12:13,380 --> 00:12:19,470
it out<font color="#E5E5E5"> online</font><font color="#CCCCCC"> if you want</font><font color="#E5E5E5"> it runs the</font>

286
00:12:16,170 --> 00:12:20,849
exact code of the calculator<font color="#CCCCCC"> I then you</font>

287
00:12:19,470 --> 00:12:22,350
know<font color="#CCCCCC"> reverse engineer the algorithms</font>

288
00:12:20,850 --> 00:12:24,000
that<font color="#E5E5E5"> worked and discovered</font><font color="#CCCCCC"> you know how</font>

289
00:12:22,350 --> 00:12:26,520
they managed<font color="#E5E5E5"> to</font><font color="#CCCCCC"> cram all</font><font color="#E5E5E5"> this into</font><font color="#CCCCCC"> a</font>

290
00:12:24,000 --> 00:12:28,650
such a small chip and they discover

291
00:12:26,520 --> 00:12:30,660
there were two tricks<font color="#E5E5E5"> the first trick is</font>

292
00:12:28,650 --> 00:12:32,730
that<font color="#E5E5E5"> because they use scientific</font>

293
00:12:30,660 --> 00:12:34,380
<font color="#CCCCCC">notation</font><font color="#E5E5E5"> and they used</font><font color="#CCCCCC"> RP n input</font>

294
00:12:32,730 --> 00:12:36,930
they're able<font color="#E5E5E5"> to save a whole lot</font><font color="#CCCCCC"> of code</font>

295
00:12:34,380 --> 00:12:39,510
on the chip<font color="#CCCCCC"> and then they use that extra</font>

296
00:12:36,930 --> 00:12:41,969
<font color="#E5E5E5">space to put in these really really</font>

297
00:12:39,510 --> 00:12:43,830
compact but really slow and inaccurate

298
00:12:41,970 --> 00:12:46,470
algorithms for<font color="#E5E5E5"> the for the scientific</font>

299
00:12:43,830 --> 00:12:49,680
functions so for instance for<font color="#E5E5E5"> trig</font>

300
00:12:46,470 --> 00:12:51,840
functions they do repeated rotations by

301
00:12:49,680 --> 00:12:54,209
<font color="#E5E5E5">1/1000 for the degree until you get to</font>

302
00:12:51,840 --> 00:12:56,280
the angle<font color="#E5E5E5"> you want because it's a</font>

303
00:12:54,210 --> 00:12:58,350
decimal calculator dividing by a

304
00:12:56,280 --> 00:13:00,420
thousand is just a trivial shift you do

305
00:12:58,350 --> 00:13:02,610
a shift and then add and subtract<font color="#E5E5E5"> you</font>

306
00:13:00,420 --> 00:13:04,439
just repeat<font color="#CCCCCC"> that as necessary</font><font color="#E5E5E5"> and you</font>

307
00:13:02,610 --> 00:13:07,710
can get your sine cosine inverse

308
00:13:04,440 --> 00:13:09,750
operations<font color="#E5E5E5"> one side</font><font color="#CCCCCC"> effect of this is</font>

309
00:13:07,710 --> 00:13:11,730
that<font color="#CCCCCC"> the bigger the angle</font><font color="#E5E5E5"> you put in the</font>

310
00:13:09,750 --> 00:13:14,000
slower the calculator because<font color="#E5E5E5"> just has</font>

311
00:13:11,730 --> 00:13:17,400
to keep going<font color="#E5E5E5"> until it gets to</font><font color="#CCCCCC"> the angle</font>

312
00:13:14,000 --> 00:13:19,620
<font color="#E5E5E5">similarly for logs they used an</font>

313
00:13:17,400 --> 00:13:21,449
<font color="#CCCCCC">algorithm with powers</font><font color="#E5E5E5"> of 0.99 on a</font>

314
00:13:19,620 --> 00:13:24,060
decimal machine<font color="#E5E5E5"> that's really easy to</font>

315
00:13:21,450 --> 00:13:26,160
you just shift two digits to<font color="#E5E5E5"> divide by</font>

316
00:13:24,060 --> 00:13:29,369
100<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then</font><font color="#CCCCCC"> you subtract and repeat as</font>

317
00:13:26,160 --> 00:13:31,290
necessary<font color="#CCCCCC"> so that solved the</font><font color="#E5E5E5"> mystery</font><font color="#CCCCCC"> of</font>

318
00:13:29,370 --> 00:13:33,800
how they<font color="#E5E5E5"> managed to get scientific</font>

319
00:13:31,290 --> 00:13:36,569
calculator<font color="#E5E5E5"> out of a regular calculator</font>

320
00:13:33,800 --> 00:13:38,550
<font color="#E5E5E5">they sold a whole pile of these even</font>

321
00:13:36,570 --> 00:13:40,320
though it was super inaccurate it's kind

322
00:13:38,550 --> 00:13:41,969
of sad<font color="#CCCCCC"> that HP went to like so much I</font>

323
00:13:40,320 --> 00:13:44,279
work to<font color="#E5E5E5"> give their algorithms totally</font>

324
00:13:41,970 --> 00:13:45,689
accurate<font color="#E5E5E5"> and this it's like most of the</font>

325
00:13:44,279 --> 00:13:47,339
<font color="#E5E5E5">you can probably get three digits of</font>

326
00:13:45,689 --> 00:13:51,089
accuracy and people bought<font color="#E5E5E5"> this by the</font>

327
00:13:47,339 --> 00:13:53,459
<font color="#CCCCCC">young millions next I'd like to move</font><font color="#E5E5E5"> on</font>

328
00:13:51,089 --> 00:13:57,569
to<font color="#CCCCCC"> a forgotten bit of computer storage</font>

329
00:13:53,459 --> 00:14:01,378
history back<font color="#E5E5E5"> in 1970</font><font color="#CCCCCC"> Ram storage was</font>

330
00:13:57,569 --> 00:14:04,079
super expensive<font color="#CCCCCC"> so</font><font color="#E5E5E5"> Intel had something</font>

331
00:14:01,379 --> 00:14:06,360
called shift register memory<font color="#E5E5E5"> this is a</font>

332
00:14:04,079 --> 00:14:08,399
board from<font color="#E5E5E5"> the datapoint 2200</font><font color="#CCCCCC"> which some</font>

333
00:14:06,360 --> 00:14:10,709
people call<font color="#E5E5E5"> the</font><font color="#CCCCCC"> first personal computer</font>

334
00:14:08,399 --> 00:14:13,050
<font color="#E5E5E5">although</font><font color="#CCCCCC"> it says say the</font><font color="#E5E5E5"> Xerox also is</font>

335
00:14:10,709 --> 00:14:16,229
first<font color="#E5E5E5"> but anyway each one of these chips</font>

336
00:14:13,050 --> 00:14:22,680
holds 512 bits or in modern<font color="#CCCCCC"> units that's</font>

337
00:14:16,230 --> 00:14:24,480
a<font color="#E5E5E5"> little less than half</font><font color="#CCCCCC"> a tweet</font><font color="#E5E5E5"> so it's</font>

338
00:14:22,680 --> 00:14:25,979
a shift<font color="#E5E5E5"> register which means you put the</font>

339
00:14:24,480 --> 00:14:28,470
bits in and then<font color="#CCCCCC"> eventually they come</font>

340
00:14:25,980 --> 00:14:30,839
<font color="#CCCCCC">out the other side I cut</font><font color="#E5E5E5"> one of these</font>

341
00:14:28,470 --> 00:14:33,209
open to see what's inside<font color="#CCCCCC"> took a</font><font color="#E5E5E5"> die</font>

342
00:14:30,839 --> 00:14:36,600
photo<font color="#E5E5E5"> and here's what here's what's</font>

343
00:14:33,209 --> 00:14:38,248
<font color="#E5E5E5">inside the chip your bits come in they</font>

344
00:14:36,600 --> 00:14:40,680
go through these shift register stages

345
00:14:38,249 --> 00:14:42,870
and eventually they come up the<font color="#CCCCCC"> top here</font>

346
00:14:40,680 --> 00:14:44,609
where you can read them out at that

347
00:14:42,870 --> 00:14:48,180
<font color="#E5E5E5">point you can either write a new bit or</font>

348
00:14:44,610 --> 00:14:49,500
the old bit cancer<font color="#CCCCCC"> cure</font><font color="#E5E5E5"> it around so if</font>

349
00:14:48,180 --> 00:14:51,689
you're<font color="#CCCCCC"> reading your data sequentially</font>

350
00:14:49,500 --> 00:14:53,699
<font color="#CCCCCC">this isn't too bad</font><font color="#E5E5E5"> but if you're doing</font>

351
00:14:51,689 --> 00:14:55,469
<font color="#E5E5E5">it you want</font><font color="#CCCCCC"> to access something out of</font>

352
00:14:53,699 --> 00:14:57,660
sequence<font color="#CCCCCC"> you have to wait until</font><font color="#E5E5E5"> the bit</font>

353
00:14:55,470 --> 00:14:58,559
you<font color="#E5E5E5"> want comes all the way through kind</font>

354
00:14:57,660 --> 00:15:01,139
<font color="#E5E5E5">of like waiting for the baggage</font>

355
00:14:58,559 --> 00:15:02,490
<font color="#CCCCCC">carrousel so you can wait up to half a</font>

356
00:15:01,139 --> 00:15:05,550
millisecond for<font color="#E5E5E5"> your data if you're</font>

357
00:15:02,490 --> 00:15:07,920
unlucky<font color="#CCCCCC"> so</font><font color="#E5E5E5"> needless to say</font><font color="#CCCCCC"> you know once</font>

358
00:15:05,550 --> 00:15:10,620
<font color="#E5E5E5">RAM chips dropped in price Intel stopped</font>

359
00:15:07,920 --> 00:15:13,519
making these and we<font color="#CCCCCC"> can zoom in way</font>

360
00:15:10,620 --> 00:15:16,170
closer<font color="#E5E5E5"> to see the actual actual logic</font>

361
00:15:13,519 --> 00:15:17,819
<font color="#E5E5E5">again we have the metal layer we have</font>

362
00:15:16,170 --> 00:15:20,009
poly silicon and<font color="#E5E5E5"> then underneath the</font>

363
00:15:17,819 --> 00:15:23,040
silicon layer I'm on the right I have<font color="#E5E5E5"> an</font>

364
00:15:20,009 --> 00:15:26,069
interpretation of it each bit is stored

365
00:15:23,040 --> 00:15:27,870
in an inverter there's two clock phases

366
00:15:26,069 --> 00:15:29,339
in the first clock phase it gets passed

367
00:15:27,870 --> 00:15:31,350
from<font color="#CCCCCC"> the first inverter to the second</font>

368
00:15:29,339 --> 00:15:34,019
inverter and the second clock<font color="#E5E5E5"> phase it</font>

369
00:15:31,350 --> 00:15:36,420
gets passed on<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> next inverter so</font>

370
00:15:34,019 --> 00:15:40,259
<font color="#E5E5E5">basically your bits just slowly flow</font>

371
00:15:36,420 --> 00:15:42,860
through the chip until you get them<font color="#CCCCCC"> so</font>

372
00:15:40,259 --> 00:15:46,499
now I'd like<font color="#CCCCCC"> to</font><font color="#E5E5E5"> move on to analog chips</font>

373
00:15:42,860 --> 00:15:48,139
<font color="#E5E5E5">anyone here ever used a 555</font><font color="#CCCCCC"> timer</font><font color="#E5E5E5"> yeah I</font>

374
00:15:46,499 --> 00:15:52,100
figured to<font color="#CCCCCC"> be pretty</font><font color="#E5E5E5"> much all of you</font>

375
00:15:48,139 --> 00:15:54,569
so this is this is<font color="#CCCCCC"> one that I cut open</font>

376
00:15:52,100 --> 00:15:56,040
<font color="#CCCCCC">before I</font><font color="#E5E5E5"> get into the details of that</font><font color="#CCCCCC"> I</font>

377
00:15:54,569 --> 00:15:57,240
should<font color="#E5E5E5"> talk a little bit about</font><font color="#CCCCCC"> bipolar</font>

378
00:15:56,040 --> 00:15:59,610
chips

379
00:15:57,240 --> 00:16:02,370
transistors<font color="#E5E5E5"> you know the NPN and PNP</font>

380
00:15:59,610 --> 00:16:03,810
transistors<font color="#CCCCCC"> that get used</font><font color="#E5E5E5"> you're</font>

381
00:16:02,370 --> 00:16:06,089
probably familiar<font color="#E5E5E5"> with how NPN</font>

382
00:16:03,810 --> 00:16:08,849
transistors<font color="#E5E5E5"> you got a layer of n layer a</font>

383
00:16:06,089 --> 00:16:11,100
P layer of<font color="#E5E5E5"> n the</font><font color="#CCCCCC"> basis</font><font color="#E5E5E5"> connected in the</font>

384
00:16:08,850 --> 00:16:13,800
middle<font color="#CCCCCC"> but</font><font color="#E5E5E5"> the thing is</font><font color="#CCCCCC"> when you look at</font>

385
00:16:11,100 --> 00:16:16,529
ICS<font color="#CCCCCC"> it's nothing</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> that just totally</font>

386
00:16:13,800 --> 00:16:19,949
<font color="#CCCCCC">different here are some real bipolar</font>

387
00:16:16,529 --> 00:16:21,660
transistors from ICS<font color="#E5E5E5"> often you have your</font>

388
00:16:19,950 --> 00:16:23,190
emitter in the middle<font color="#E5E5E5"> sometimes it's</font>

389
00:16:21,660 --> 00:16:25,199
like a right angle<font color="#E5E5E5"> sometimes you've got</font>

390
00:16:23,190 --> 00:16:26,730
two<font color="#E5E5E5"> emitters sometimes you've got six</font>

391
00:16:25,200 --> 00:16:28,980
collectors<font color="#E5E5E5"> and you can't even find the</font>

392
00:16:26,730 --> 00:16:33,720
base it just gets really<font color="#E5E5E5"> strange when</font>

393
00:16:28,980 --> 00:16:36,240
you look inside<font color="#CCCCCC"> an IC so to explain</font>

394
00:16:33,720 --> 00:16:38,430
what's going<font color="#E5E5E5"> on a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> more here's a</font>

395
00:16:36,240 --> 00:16:41,010
<font color="#E5E5E5">dye photo of an NPN transistor and then</font>

396
00:16:38,430 --> 00:16:43,170
here's<font color="#E5E5E5"> the</font><font color="#CCCCCC"> cross-section now as you can</font>

397
00:16:41,010 --> 00:16:45,089
<font color="#E5E5E5">see</font><font color="#CCCCCC"> it's much more</font><font color="#E5E5E5"> complex</font><font color="#CCCCCC"> than</font><font color="#E5E5E5"> the MOS</font>

398
00:16:43,170 --> 00:16:48,540
transistor<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> why the world has</font>

399
00:16:45,089 --> 00:16:50,459
<font color="#E5E5E5">mostly moved off bipolar transistors if</font>

400
00:16:48,540 --> 00:16:52,770
if you<font color="#E5E5E5"> look down</font><font color="#CCCCCC"> from the emitter</font><font color="#E5E5E5"> you</font>

401
00:16:50,459 --> 00:16:55,380
<font color="#CCCCCC">can see the NP and</font><font color="#E5E5E5"> layers are stacked</font>

402
00:16:52,770 --> 00:16:57,839
vertically but<font color="#E5E5E5"> the connections are very</font>

403
00:16:55,380 --> 00:17:00,390
<font color="#E5E5E5">different to figure out what's</font><font color="#CCCCCC"> happening</font>

404
00:16:57,839 --> 00:17:04,290
<font color="#E5E5E5">in a dye photo the emitter</font><font color="#CCCCCC"> usually has</font>

405
00:17:00,390 --> 00:17:06,959
this multiple circles<font color="#E5E5E5"> the base you can</font>

406
00:17:04,290 --> 00:17:09,000
see<font color="#E5E5E5"> this faint outline here of the of</font>

407
00:17:06,959 --> 00:17:11,579
the P layer<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> collector is</font>

408
00:17:09,000 --> 00:17:13,410
off to the side<font color="#CCCCCC"> somewhere</font><font color="#E5E5E5"> now you might</font>

409
00:17:11,579 --> 00:17:15,119
think<font color="#E5E5E5"> that the PNP transistor you just</font>

410
00:17:13,410 --> 00:17:16,110
switch everything around<font color="#CCCCCC"> but it turns</font>

411
00:17:15,119 --> 00:17:19,319
out they<font color="#CCCCCC"> have a totally different</font>

412
00:17:16,109 --> 00:17:22,800
<font color="#E5E5E5">structure</font><font color="#CCCCCC"> it's more</font><font color="#E5E5E5"> of a circle</font>

413
00:17:19,319 --> 00:17:25,859
structure<font color="#CCCCCC"> here you can see the</font><font color="#E5E5E5"> P the end</font>

414
00:17:22,800 --> 00:17:27,750
the P so<font color="#E5E5E5"> you do</font><font color="#CCCCCC"> have the PNP layers but</font>

415
00:17:25,859 --> 00:17:30,059
physically the<font color="#CCCCCC"> mitr</font><font color="#E5E5E5"> is this little bot</font>

416
00:17:27,750 --> 00:17:32,059
in<font color="#E5E5E5"> the middle surrounded by the base and</font>

417
00:17:30,059 --> 00:17:34,980
then the<font color="#E5E5E5"> collector is off to the side</font>

418
00:17:32,059 --> 00:17:36,840
wrapping<font color="#E5E5E5"> the whole thing and then the</font>

419
00:17:34,980 --> 00:17:39,210
base connection goes way underneath<font color="#E5E5E5"> and</font>

420
00:17:36,840 --> 00:17:40,590
comes up the other side here it's so far

421
00:17:39,210 --> 00:17:41,970
our way that they actually<font color="#E5E5E5"> run another</font>

422
00:17:40,590 --> 00:17:45,030
<font color="#E5E5E5">wire you know through the middle of</font>

423
00:17:41,970 --> 00:17:48,420
their transistor to help the layout so

424
00:17:45,030 --> 00:17:51,600
now that<font color="#E5E5E5"> you know what to</font><font color="#CCCCCC"> look at here's</font>

425
00:17:48,420 --> 00:17:54,780
a<font color="#CCCCCC"> dye photo I took</font><font color="#E5E5E5"> of the 555 timer you</font>

426
00:17:51,600 --> 00:17:56,580
<font color="#E5E5E5">can see the circular PNP transistors and</font>

427
00:17:54,780 --> 00:17:59,309
you can see tiny rectangular NPN

428
00:17:56,580 --> 00:18:02,220
transistors the bond<font color="#E5E5E5"> wires around the</font>

429
00:17:59,309 --> 00:18:06,210
outside<font color="#E5E5E5"> three giant transistors to</font>

430
00:18:02,220 --> 00:18:08,490
provide the high<font color="#E5E5E5"> current output</font><font color="#CCCCCC"> and then</font>

431
00:18:06,210 --> 00:18:10,770
these three<font color="#E5E5E5"> pale stripes in the middle</font>

432
00:18:08,490 --> 00:18:13,530
these<font color="#E5E5E5"> are the three transistors</font><font color="#CCCCCC"> that</font>

433
00:18:10,770 --> 00:18:16,410
sorry three resistors that<font color="#CCCCCC"> make up the</font>

434
00:18:13,530 --> 00:18:18,270
voltage divider<font color="#CCCCCC"> for the 555 timer that</font>

435
00:18:16,410 --> 00:18:20,670
set the upper and<font color="#E5E5E5"> lower oscillation</font>

436
00:18:18,270 --> 00:18:22,500
limits<font color="#E5E5E5"> so you can see that resistors are</font>

437
00:18:20,670 --> 00:18:25,830
kind of<font color="#E5E5E5"> in conveniently large when</font>

438
00:18:22,500 --> 00:18:27,900
you're building a chip<font color="#CCCCCC"> so up</font><font color="#E5E5E5"> here we</font>

439
00:18:25,830 --> 00:18:29,909
<font color="#E5E5E5">have one of the comparators here we have</font>

440
00:18:27,900 --> 00:18:33,210
another comparator over here is a

441
00:18:29,910 --> 00:18:35,400
flip-flop<font color="#CCCCCC"> so I made an interactive chip</font>

442
00:18:33,210 --> 00:18:37,200
viewer that<font color="#CCCCCC"> map's everything on the chip</font>

443
00:18:35,400 --> 00:18:39,060
to the<font color="#E5E5E5"> schematic</font><font color="#CCCCCC"> you can click on</font>

444
00:18:37,200 --> 00:18:41,460
something<font color="#E5E5E5"> it tells you what it does and</font>

445
00:18:39,060 --> 00:18:44,159
where it is<font color="#E5E5E5"> in the schematic so you can</font>

446
00:18:41,460 --> 00:18:47,370
try<font color="#CCCCCC"> that out to get</font><font color="#E5E5E5"> more details of how</font>

447
00:18:44,160 --> 00:18:50,760
the chip works<font color="#E5E5E5"> next I wanted to talk</font>

448
00:18:47,370 --> 00:18:53,820
about the 741 op amp this op amp came

449
00:18:50,760 --> 00:18:55,920
out in the 1960s<font color="#CCCCCC"> on 1968 it was hugely</font>

450
00:18:53,820 --> 00:18:58,350
<font color="#CCCCCC">popular they sold hundreds</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> millions</font>

451
00:18:55,920 --> 00:19:01,710
<font color="#E5E5E5">of them I'm going to explain a little</font>

452
00:18:58,350 --> 00:19:04,020
<font color="#E5E5E5">about why it was so popular</font><font color="#CCCCCC"> here here's</font>

453
00:19:01,710 --> 00:19:06,900
<font color="#E5E5E5">the</font><font color="#CCCCCC"> die photo</font><font color="#E5E5E5"> I took again you can pick</font>

454
00:19:04,020 --> 00:19:09,780
up the transistors<font color="#CCCCCC"> there's this</font><font color="#E5E5E5"> giant</font>

455
00:19:06,900 --> 00:19:12,390
resistor<font color="#E5E5E5"> you know this big squiggle here</font>

456
00:19:09,780 --> 00:19:13,290
that's all one resistor<font color="#E5E5E5"> and then this</font>

457
00:19:12,390 --> 00:19:15,870
big thing in the middle

458
00:19:13,290 --> 00:19:17,760
that's a capacitor<font color="#E5E5E5"> and the reason the</font>

459
00:19:15,870 --> 00:19:18,929
capacitor is important is it previous op

460
00:19:17,760 --> 00:19:20,790
amps you had to put an external

461
00:19:18,930 --> 00:19:24,090
<font color="#CCCCCC">capacitor to keep it from oscillating</font>

462
00:19:20,790 --> 00:19:25,920
<font color="#CCCCCC">Dave fuller</font><font color="#E5E5E5"> the designer of the 741 he</font>

463
00:19:24,090 --> 00:19:27,750
said you know engineers are lazy<font color="#E5E5E5"> if we</font>

464
00:19:25,920 --> 00:19:29,550
put the capacitor inside<font color="#CCCCCC"> the chip</font><font color="#E5E5E5"> and</font>

465
00:19:27,750 --> 00:19:31,020
<font color="#CCCCCC">the engineers don't have to add this</font>

466
00:19:29,550 --> 00:19:32,639
extra capacitor they'll love it

467
00:19:31,020 --> 00:19:34,620
and so that's what he<font color="#CCCCCC"> did put the</font>

468
00:19:32,640 --> 00:19:38,730
capacitor inside the chip<font color="#E5E5E5"> it became</font>

469
00:19:34,620 --> 00:19:40,199
hugely popular<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> can look</font><font color="#E5E5E5"> now at</font>

470
00:19:38,730 --> 00:19:43,710
more<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the functional parts of the chip</font>

471
00:19:40,200 --> 00:19:45,420
the inputs go into the<font color="#E5E5E5"> loop or we're</font>

472
00:19:43,710 --> 00:19:49,020
losing a little<font color="#E5E5E5"> off the top differential</font>

473
00:19:45,420 --> 00:19:51,630
<font color="#E5E5E5">an old amplifier there this does the</font>

474
00:19:49,020 --> 00:19:53,850
first stage of the<font color="#E5E5E5"> op amp the gain stage</font>

475
00:19:51,630 --> 00:19:55,320
provides<font color="#E5E5E5"> more amplification than the</font>

476
00:19:53,850 --> 00:19:57,300
output<font color="#E5E5E5"> stage you can</font><font color="#CCCCCC"> see these giant</font>

477
00:19:55,320 --> 00:20:00,510
transistors<font color="#E5E5E5"> that provide the high</font>

478
00:19:57,300 --> 00:20:03,210
<font color="#CCCCCC">current output so another thing that</font>

479
00:20:00,510 --> 00:20:05,760
made the 741 popular is this short

480
00:20:03,210 --> 00:20:07,500
circuit<font color="#CCCCCC"> protection</font><font color="#E5E5E5"> they added previous</font>

481
00:20:05,760 --> 00:20:10,230
op amps if<font color="#CCCCCC"> you shorted the output the</font>

482
00:20:07,500 --> 00:20:12,600
chip would burn up<font color="#CCCCCC"> and</font><font color="#E5E5E5"> be destroyed they</font>

483
00:20:10,230 --> 00:20:14,160
<font color="#E5E5E5">added this protection circuitry that</font>

484
00:20:12,600 --> 00:20:16,350
<font color="#E5E5E5">would detect the overload and shut down</font>

485
00:20:14,160 --> 00:20:17,700
<font color="#CCCCCC">the</font><font color="#E5E5E5"> chip before it self-destructed and</font>

486
00:20:16,350 --> 00:20:22,500
this was<font color="#E5E5E5"> another</font><font color="#CCCCCC"> thing that made it very</font>

487
00:20:17,700 --> 00:20:24,669
<font color="#CCCCCC">popular so one thing that's important to</font>

488
00:20:22,500 --> 00:20:27,309
understand in analog circuits

489
00:20:24,669 --> 00:20:29,529
<font color="#CCCCCC">sigh the</font><font color="#E5E5E5"> chip is the current mirror</font><font color="#CCCCCC"> data</font>

490
00:20:27,309 --> 00:20:31,658
sheets will show these symbols for<font color="#E5E5E5"> a</font>

491
00:20:29,529 --> 00:20:33,549
current source<font color="#E5E5E5"> you know the first time I</font>

492
00:20:31,659 --> 00:20:35,109
saw a current source I'm like current

493
00:20:33,549 --> 00:20:36,809
source<font color="#CCCCCC"> this is like a</font><font color="#E5E5E5"> battery on this</font>

494
00:20:35,109 --> 00:20:39,070
<font color="#E5E5E5">chip where is the current coming from</font>

495
00:20:36,809 --> 00:20:41,590
and it turns out<font color="#CCCCCC"> that what it is is</font>

496
00:20:39,070 --> 00:20:43,600
<font color="#E5E5E5">since resistors are so awful and chips</font>

497
00:20:41,590 --> 00:20:46,299
<font color="#E5E5E5">what they'll do is they'll have a single</font>

498
00:20:43,600 --> 00:20:47,469
resistor to generate the set<font color="#E5E5E5"> the how</font>

499
00:20:46,299 --> 00:20:49,299
much<font color="#E5E5E5"> current they want for the whole</font>

500
00:20:47,470 --> 00:20:51,070
chip and they can use this circuit

501
00:20:49,299 --> 00:20:52,779
called a<font color="#E5E5E5"> current mirror which basically</font>

502
00:20:51,070 --> 00:20:55,178
clones that<font color="#E5E5E5"> current so you can get as</font>

503
00:20:52,779 --> 00:20:58,509
many occurrences you need just from the

504
00:20:55,179 --> 00:21:00,700
one resistor and it's much<font color="#E5E5E5"> more compact</font>

505
00:20:58,509 --> 00:21:02,200
and much more accurate<font color="#CCCCCC"> to use this</font>

506
00:21:00,700 --> 00:21:04,179
current mirror circuit rather than

507
00:21:02,200 --> 00:21:05,440
resistors<font color="#E5E5E5"> it's kind of</font><font color="#CCCCCC"> interesting</font>

508
00:21:04,179 --> 00:21:07,299
<font color="#E5E5E5">because when you're building something</font>

509
00:21:05,440 --> 00:21:09,249
on a<font color="#E5E5E5"> PCB you think of resistors is</font>

510
00:21:07,299 --> 00:21:11,470
basically free and transistors are kind

511
00:21:09,249 --> 00:21:13,779
of expensive<font color="#CCCCCC"> but inside an integrated</font>

512
00:21:11,470 --> 00:21:15,369
circuit that's<font color="#E5E5E5"> the other way around</font><font color="#CCCCCC"> your</font>

513
00:21:13,779 --> 00:21:16,840
transistors are pretty much<font color="#E5E5E5"> free and</font>

514
00:21:15,369 --> 00:21:20,259
it's your resistors<font color="#CCCCCC"> that are expensive</font>

515
00:21:16,840 --> 00:21:23,499
<font color="#CCCCCC">so to see how important current mirrors</font>

516
00:21:20,259 --> 00:21:25,720
are this big reason<font color="#E5E5E5"> this is the one huge</font>

517
00:21:23,499 --> 00:21:28,239
resistor to control most<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the currents</font>

518
00:21:25,720 --> 00:21:29,409
in<font color="#E5E5E5"> the 741 and then there's four</font>

519
00:21:28,239 --> 00:21:33,129
<font color="#CCCCCC">different</font><font color="#E5E5E5"> current mirrors that are</font>

520
00:21:29,409 --> 00:21:35,739
<font color="#E5E5E5">making</font><font color="#CCCCCC"> copies of that current</font><font color="#E5E5E5"> another</font>

521
00:21:33,129 --> 00:21:37,439
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> thing is the inside ICS you</font>

522
00:21:35,739 --> 00:21:39,669
find these really<font color="#E5E5E5"> bizarre transistors</font>

523
00:21:37,440 --> 00:21:41,259
there's this one which has six

524
00:21:39,669 --> 00:21:43,419
collectors this isn't something<font color="#E5E5E5"> you can</font>

525
00:21:41,259 --> 00:21:45,759
<font color="#E5E5E5">buy at Fry's</font><font color="#CCCCCC"> but it's easy</font><font color="#E5E5E5"> to do inside</font>

526
00:21:43,419 --> 00:21:47,440
<font color="#E5E5E5">an integrated circuit</font><font color="#CCCCCC"> the point of that</font>

527
00:21:45,759 --> 00:21:49,690
<font color="#E5E5E5">was they</font><font color="#CCCCCC"> wanted to have six different</font>

528
00:21:47,440 --> 00:21:51,100
<font color="#CCCCCC">six</font><font color="#E5E5E5"> copies of the current coming out of</font>

529
00:21:49,690 --> 00:21:53,169
<font color="#E5E5E5">their current mirror</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> they just make a</font>

530
00:21:51,100 --> 00:21:53,859
a transistor with six collectors and

531
00:21:53,169 --> 00:21:56,169
there you go

532
00:21:53,859 --> 00:21:58,480
or if you want<font color="#E5E5E5"> two big currents and one</font>

533
00:21:56,169 --> 00:21:59,950
small current you may<font color="#E5E5E5"> hit a transistor</font>

534
00:21:58,480 --> 00:22:03,309
that<font color="#E5E5E5"> has two big collectors and one</font>

535
00:21:59,950 --> 00:22:04,659
small collector and there you go so it's

536
00:22:03,309 --> 00:22:06,399
just you know some<font color="#E5E5E5"> of the bizarre things</font>

537
00:22:04,659 --> 00:22:10,239
you<font color="#E5E5E5"> find when</font><font color="#CCCCCC"> you look at an integrated</font>

538
00:22:06,399 --> 00:22:13,059
circuit<font color="#CCCCCC"> final chip</font><font color="#E5E5E5"> I want to look at was</font>

539
00:22:10,239 --> 00:22:15,009
<font color="#E5E5E5">the 7805 voltage regulator</font><font color="#CCCCCC"> I'm sure</font>

540
00:22:13,059 --> 00:22:17,320
probably<font color="#E5E5E5"> all of you have</font><font color="#CCCCCC"> used a voltage</font>

541
00:22:15,009 --> 00:22:20,470
regulator in in one way either<font color="#E5E5E5"> on an</font>

542
00:22:17,320 --> 00:22:23,080
Arduino or<font color="#E5E5E5"> is a discrete component so I</font>

543
00:22:20,470 --> 00:22:24,429
cut<font color="#E5E5E5"> this one open and I don't</font><font color="#CCCCCC"> know if</font>

544
00:22:23,080 --> 00:22:26,109
you've ever<font color="#CCCCCC"> opened a chocolate bar and</font>

545
00:22:24,429 --> 00:22:27,789
you discover it's like mostly packaging

546
00:22:26,109 --> 00:22:29,710
and there's just<font color="#CCCCCC"> a small chocolate</font><font color="#E5E5E5"> bar</font>

547
00:22:27,789 --> 00:22:32,849
inside<font color="#E5E5E5"> it's kind of the same here to</font>

548
00:22:29,710 --> 00:22:35,080
this tiny<font color="#CCCCCC"> dye inside this</font><font color="#E5E5E5"> huge package</font>

549
00:22:32,849 --> 00:22:37,169
<font color="#E5E5E5">so you can see the bond wires that</font>

550
00:22:35,080 --> 00:22:40,620
connect the the dye to the<font color="#E5E5E5"> pins</font>

551
00:22:37,170 --> 00:22:43,800
the output has two wires<font color="#CCCCCC"> for reasons</font>

552
00:22:40,620 --> 00:22:47,879
I'll get to in just<font color="#E5E5E5"> a moment so I took</font>

553
00:22:43,800 --> 00:22:50,129
<font color="#CCCCCC">Dai photos of this chip</font><font color="#E5E5E5"> and you</font><font color="#CCCCCC"> can see</font>

554
00:22:47,880 --> 00:22:52,410
on the right this huge transistor this

555
00:22:50,130 --> 00:22:55,230
<font color="#E5E5E5">is the output transistor that provides</font>

556
00:22:52,410 --> 00:22:56,490
the<font color="#CCCCCC"> 1 amp output</font><font color="#E5E5E5"> because it has so much</font>

557
00:22:55,230 --> 00:22:59,490
current they need to have a big

558
00:22:56,490 --> 00:23:01,140
transistor one thing with the big

559
00:22:59,490 --> 00:23:03,690
current is you end<font color="#E5E5E5"> up having some</font>

560
00:23:01,140 --> 00:23:06,900
voltage drop<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> wire</font><font color="#E5E5E5"> the wire from</font>

561
00:23:03,690 --> 00:23:08,550
<font color="#CCCCCC">the output here</font><font color="#E5E5E5"> to the output pin so by</font>

562
00:23:06,900 --> 00:23:10,830
using a second wire to sense the voltage

563
00:23:08,550 --> 00:23:12,419
<font color="#E5E5E5">on the output pin and they can make</font><font color="#CCCCCC"> sure</font>

564
00:23:10,830 --> 00:23:15,750
<font color="#E5E5E5">it's more</font><font color="#CCCCCC"> accurate and account</font><font color="#E5E5E5"> for that</font>

565
00:23:12,420 --> 00:23:18,540
<font color="#E5E5E5">voltage drop</font><font color="#CCCCCC"> so some interesting things</font>

566
00:23:15,750 --> 00:23:19,980
<font color="#E5E5E5">in this chip up at the top you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> see</font>

567
00:23:18,540 --> 00:23:22,470
another<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of these giant snaking</font>

568
00:23:19,980 --> 00:23:25,740
resistors and this one provides<font color="#CCCCCC"> startup</font>

569
00:23:22,470 --> 00:23:27,780
current to get the chip going you can

570
00:23:25,740 --> 00:23:30,090
see another<font color="#E5E5E5"> big capacitor here to keep</font>

571
00:23:27,780 --> 00:23:32,790
<font color="#E5E5E5">it from oscillating these six</font>

572
00:23:30,090 --> 00:23:35,010
transistors form a form a current mirror

573
00:23:32,790 --> 00:23:37,530
<font color="#E5E5E5">and then over here you</font><font color="#CCCCCC"> have a</font><font color="#E5E5E5"> bandgap</font>

574
00:23:35,010 --> 00:23:39,450
regulator which sounds really<font color="#CCCCCC"> scary</font><font color="#E5E5E5"> but</font>

575
00:23:37,530 --> 00:23:42,330
it's basically just a transistor circuit

576
00:23:39,450 --> 00:23:44,760
that is<font color="#CCCCCC"> temperature compensated</font><font color="#E5E5E5"> so you</font>

577
00:23:42,330 --> 00:23:45,810
can get a stable<font color="#E5E5E5"> voltage</font><font color="#CCCCCC"> even if you you</font>

578
00:23:44,760 --> 00:23:48,300
know<font color="#E5E5E5"> even if the temperature of your</font>

579
00:23:45,810 --> 00:23:51,830
<font color="#E5E5E5">chip changes and then there's this big</font>

580
00:23:48,300 --> 00:23:57,870
<font color="#CCCCCC">resistor here that's kind</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> interesting</font>

581
00:23:51,830 --> 00:24:00,570
if<font color="#CCCCCC"> we oh that's not good</font><font color="#E5E5E5"> but so anyway</font>

582
00:23:57,870 --> 00:24:03,750
with this<font color="#E5E5E5"> with this resistor does is it</font>

583
00:24:00,570 --> 00:24:05,790
it's a voltage divider<font color="#E5E5E5"> so that they can</font>

584
00:24:03,750 --> 00:24:07,830
have a whole line of<font color="#E5E5E5"> different chips</font>

585
00:24:05,790 --> 00:24:10,080
from anywhere from<font color="#E5E5E5"> like 5 volts</font><font color="#CCCCCC"> to 28</font>

586
00:24:07,830 --> 00:24:12,080
volts with the same chip<font color="#E5E5E5"> all they have</font>

587
00:24:10,080 --> 00:24:15,510
<font color="#E5E5E5">to do is change the contact between</font>

588
00:24:12,080 --> 00:24:17,189
between<font color="#CCCCCC"> the metal layer</font><font color="#E5E5E5"> and the resistor</font>

589
00:24:15,510 --> 00:24:18,660
to<font color="#E5E5E5"> change the value of the</font><font color="#CCCCCC"> voltage</font>

590
00:24:17,190 --> 00:24:20,910
divider<font color="#E5E5E5"> and that changes the output</font>

591
00:24:18,660 --> 00:24:22,500
<font color="#E5E5E5">voltage so it's</font><font color="#CCCCCC"> just a cute trick they</font>

592
00:24:20,910 --> 00:24:26,820
do so they can<font color="#E5E5E5"> get a whole line</font><font color="#CCCCCC"> of chips</font>

593
00:24:22,500 --> 00:24:28,440
from from one single<font color="#E5E5E5"> design so where do</font>

594
00:24:26,820 --> 00:24:30,720
these where do these photos<font color="#E5E5E5"> come from</font>

595
00:24:28,440 --> 00:24:32,850
well I use what's called<font color="#E5E5E5"> a metallurgical</font>

596
00:24:30,720 --> 00:24:35,040
microscope<font color="#CCCCCC"> if you use a normal</font>

597
00:24:32,850 --> 00:24:36,600
<font color="#E5E5E5">microscope the light shines from</font><font color="#CCCCCC"> below</font>

598
00:24:35,040 --> 00:24:38,879
which works well<font color="#E5E5E5"> if you're dealing with</font>

599
00:24:36,600 --> 00:24:41,879
cells<font color="#E5E5E5"> but not so good if you're</font><font color="#CCCCCC"> dealing</font>

600
00:24:38,880 --> 00:24:43,950
with<font color="#E5E5E5"> something ok click a chip so</font><font color="#CCCCCC"> what</font>

601
00:24:41,880 --> 00:24:46,260
the metallurgical<font color="#E5E5E5"> microscope does</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> it</font>

602
00:24:43,950 --> 00:24:48,750
has<font color="#E5E5E5"> this big goofy light here</font><font color="#CCCCCC"> it shines</font>

603
00:24:46,260 --> 00:24:50,540
<font color="#E5E5E5">down through the lens</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> you end up with</font>

604
00:24:48,750 --> 00:24:52,850
<font color="#E5E5E5">this intense light source from above</font>

605
00:24:50,540 --> 00:24:54,980
which lets you see<font color="#CCCCCC"> the features of a</font>

606
00:24:52,850 --> 00:24:55,939
chip<font color="#E5E5E5"> really well if you</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> look at</font>

607
00:24:54,980 --> 00:24:57,410
the chip you can<font color="#CCCCCC"> use a regular</font>

608
00:24:55,940 --> 00:24:59,090
<font color="#CCCCCC">microscope and</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of shine the</font>

609
00:24:57,410 --> 00:25:00,800
flashlight from above<font color="#CCCCCC"> and you know you</font>

610
00:24:59,090 --> 00:25:02,750
can see a lot of<font color="#CCCCCC"> it but works a whole</font>

611
00:25:00,800 --> 00:25:05,060
lot<font color="#E5E5E5"> better with you know the specialized</font>

612
00:25:02,750 --> 00:25:07,190
microscope<font color="#E5E5E5"> you can spend tons of money</font>

613
00:25:05,060 --> 00:25:11,179
on microscopes but<font color="#CCCCCC"> I got this</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> on</font>

614
00:25:07,190 --> 00:25:13,250
<font color="#E5E5E5">eBay for a couple hundred</font><font color="#CCCCCC"> dollars was</font>

615
00:25:11,180 --> 00:25:15,830
let's<font color="#CCCCCC"> have</font><font color="#E5E5E5"> the microscope I take a whole</font>

616
00:25:13,250 --> 00:25:18,170
<font color="#CCCCCC">bunch of</font><font color="#E5E5E5"> pictures of a chip and then I</font>

617
00:25:15,830 --> 00:25:21,320
<font color="#CCCCCC">tile these together using</font><font color="#E5E5E5"> a program</font>

618
00:25:18,170 --> 00:25:24,110
called Hugin<font color="#CCCCCC"> it's got a little</font><font color="#E5E5E5"> bit of a</font>

619
00:25:21,320 --> 00:25:25,399
learning<font color="#E5E5E5"> curve</font><font color="#CCCCCC"> my first attempt</font><font color="#E5E5E5"> I ended</font>

620
00:25:24,110 --> 00:25:30,500
up with this<font color="#E5E5E5"> sort of Picasso style</font>

621
00:25:25,400 --> 00:25:32,330
<font color="#CCCCCC">cubist</font><font color="#E5E5E5"> chip the one secret is make sure</font>

622
00:25:30,500 --> 00:25:34,160
<font color="#E5E5E5">you have a way more overlap between</font>

623
00:25:32,330 --> 00:25:36,169
<font color="#E5E5E5">successive images than you think you</font>

624
00:25:34,160 --> 00:25:38,990
need<font color="#CCCCCC"> because that overlap</font><font color="#E5E5E5"> is what lets</font>

625
00:25:36,170 --> 00:25:40,100
it tie the the photos<font color="#CCCCCC"> together</font><font color="#E5E5E5"> so once I</font>

626
00:25:38,990 --> 00:25:43,460
got<font color="#E5E5E5"> that straightened out</font><font color="#CCCCCC"> you know</font>

627
00:25:40,100 --> 00:25:45,949
here's a<font color="#CCCCCC"> die photo I took</font><font color="#E5E5E5"> of the this is</font>

628
00:25:43,460 --> 00:25:49,490
<font color="#E5E5E5">a Motorola interface chip this chip was</font>

629
00:25:45,950 --> 00:25:55,640
used in the Apple<font color="#E5E5E5"> one among other places</font>

630
00:25:49,490 --> 00:25:58,910
and then<font color="#E5E5E5"> the others</font><font color="#CCCCCC"> won't</font><font color="#E5E5E5"> go into that</font>

631
00:25:55,640 --> 00:26:00,920
<font color="#E5E5E5">Dom so now how do you get to the the</font><font color="#CCCCCC"> die</font>

632
00:25:58,910 --> 00:26:03,050
now if you're<font color="#E5E5E5"> unlucky</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know most</font>

633
00:26:00,920 --> 00:26:05,120
chips come in epoxy<font color="#CCCCCC"> and the way to get</font>

634
00:26:03,050 --> 00:26:07,129
through epoxy is you boil the chip in

635
00:26:05,120 --> 00:26:09,739
sulfuric<font color="#E5E5E5"> and nitric acid</font><font color="#CCCCCC"> to dissolve the</font>

636
00:26:07,130 --> 00:26:13,760
epoxy so this is what the<font color="#CCCCCC"> experts like</font>

637
00:26:09,740 --> 00:26:15,980
<font color="#E5E5E5">Zepto bars and visual 6502 do you know I</font>

638
00:26:13,760 --> 00:26:17,390
I stay away from boiling nitric acid

639
00:26:15,980 --> 00:26:20,450
because you know I don't want to end<font color="#E5E5E5"> up</font>

640
00:26:17,390 --> 00:26:22,580
<font color="#E5E5E5">with a Superfund</font><font color="#CCCCCC"> site at home so the</font>

641
00:26:20,450 --> 00:26:24,050
<font color="#E5E5E5">easiest way is you let somebody else</font>

642
00:26:22,580 --> 00:26:26,480
take<font color="#E5E5E5"> the pictures</font><font color="#CCCCCC"> and you can</font><font color="#E5E5E5"> just</font>

643
00:26:24,050 --> 00:26:29,810
download them so Zepto bar is visual

644
00:26:26,480 --> 00:26:32,270
6502 and silicon<font color="#CCCCCC"> pron</font><font color="#E5E5E5"> these are three</font>

645
00:26:29,810 --> 00:26:34,429
sites that have you<font color="#E5E5E5"> know hundreds of</font>

646
00:26:32,270 --> 00:26:35,810
<font color="#E5E5E5">died photos if you want to try reverse</font>

647
00:26:34,430 --> 00:26:38,720
engineering a chip<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can download</font>

648
00:26:35,810 --> 00:26:41,030
images from<font color="#E5E5E5"> there most of these images</font>

649
00:26:38,720 --> 00:26:44,060
nobody has ever tried<font color="#CCCCCC"> to</font><font color="#E5E5E5"> analyze them so</font>

650
00:26:41,030 --> 00:26:45,470
you just<font color="#E5E5E5"> find something easy download it</font>

651
00:26:44,060 --> 00:26:54,350
and you'll see what<font color="#CCCCCC"> you can figure out</font>

652
00:26:45,470 --> 00:26:56,690
from it<font color="#CCCCCC"> October's so yep Tavares</font><font color="#E5E5E5"> is this</font>

653
00:26:54,350 --> 00:27:00,020
guy<font color="#CCCCCC"> mikhail in russia who's done a whole</font>

654
00:26:56,690 --> 00:27:02,930
<font color="#CCCCCC">bunch of chips your visual 6502 if you</font>

655
00:27:00,020 --> 00:27:04,100
haven't seen<font color="#E5E5E5"> their 6502 simulator you</font>

656
00:27:02,930 --> 00:27:05,890
should really need to

657
00:27:04,100 --> 00:27:10,250
you really need to<font color="#E5E5E5"> check that out and</font>

658
00:27:05,890 --> 00:27:13,340
<font color="#E5E5E5">then this is John McMaster site so yeah</font>

659
00:27:10,250 --> 00:27:15,110
these are all very interesting<font color="#CCCCCC"> the</font><font color="#E5E5E5"> way I</font>

660
00:27:13,340 --> 00:27:17,330
like<font color="#E5E5E5"> to deal with chips is just get</font>

661
00:27:15,110 --> 00:27:20,990
chips that aren't made<font color="#CCCCCC"> of epoxy</font><font color="#E5E5E5"> and then</font>

662
00:27:17,330 --> 00:27:23,840
life is easy so you<font color="#E5E5E5"> can get analog chips</font>

663
00:27:20,990 --> 00:27:25,490
in metal cans<font color="#CCCCCC"> they're cheap to get on</font>

664
00:27:23,840 --> 00:27:27,409
eBay and<font color="#E5E5E5"> then you can just cut it</font><font color="#CCCCCC"> open</font>

665
00:27:25,490 --> 00:27:31,160
with a hacksaw<font color="#CCCCCC"> or with a jewelers saw</font>

666
00:27:27,410 --> 00:27:33,530
and see what's inside<font color="#CCCCCC"> other chips</font><font color="#E5E5E5"> come</font>

667
00:27:31,160 --> 00:27:35,750
with a metal lid that<font color="#E5E5E5"> you can just tap</font>

668
00:27:33,530 --> 00:27:39,440
with a chisel<font color="#CCCCCC"> and it will pop</font><font color="#E5E5E5"> off and</font>

669
00:27:35,750 --> 00:27:40,610
that makes<font color="#E5E5E5"> life a whole</font><font color="#CCCCCC"> lot easier so</font>

670
00:27:39,440 --> 00:27:42,230
I've been looking<font color="#CCCCCC"> at</font><font color="#E5E5E5"> old micro</font>

671
00:27:40,610 --> 00:27:44,510
processors and one thing I found was

672
00:27:42,230 --> 00:27:48,470
there aren't any<font color="#E5E5E5"> good pictures</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> 8008</font>

673
00:27:44,510 --> 00:27:49,940
out there so I got<font color="#CCCCCC"> in 8008 on ebay it</font>

674
00:27:48,470 --> 00:27:52,970
was all<font color="#E5E5E5"> scratched up so I could get it</font>

675
00:27:49,940 --> 00:27:54,890
cheap<font color="#E5E5E5"> since it came in a ceramic package</font>

676
00:27:52,970 --> 00:27:58,159
I could just tap it with a chisel<font color="#E5E5E5"> and</font>

677
00:27:54,890 --> 00:27:59,780
<font color="#CCCCCC">the top popped right off</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> no there's a</font>

678
00:27:58,159 --> 00:28:03,440
lot<font color="#E5E5E5"> of a lot</font><font color="#CCCCCC"> of options if you don't</font>

679
00:27:59,780 --> 00:28:07,389
want to deal<font color="#CCCCCC"> with boiling acid</font><font color="#E5E5E5"> so my my</font>

680
00:28:03,440 --> 00:28:11,990
current project is analyzing<font color="#CCCCCC"> the 8008 I</font>

681
00:28:07,390 --> 00:28:14,030
took this dye photo<font color="#E5E5E5"> last week so I'm</font>

682
00:28:11,990 --> 00:28:16,309
just<font color="#E5E5E5"> starting on the analysis but you</font>

683
00:28:14,030 --> 00:28:18,220
<font color="#CCCCCC">know based on what I said about</font><font color="#E5E5E5"> the z80</font>

684
00:28:16,309 --> 00:28:20,690
you can see a lot of similar features

685
00:28:18,220 --> 00:28:23,630
<font color="#E5E5E5">you can see the pads</font><font color="#CCCCCC"> around the outside</font>

686
00:28:20,690 --> 00:28:26,780
you<font color="#E5E5E5"> can see</font><font color="#CCCCCC"> the driver transistors the</font>

687
00:28:23,630 --> 00:28:28,190
power and ground<font color="#CCCCCC"> connections I don't</font>

688
00:28:26,780 --> 00:28:30,889
know if you can see it from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> back but</font>

689
00:28:28,190 --> 00:28:33,890
these regular blocks those are those<font color="#CCCCCC"> are</font>

690
00:28:30,890 --> 00:28:35,690
internal<font color="#E5E5E5"> registers you can see the data</font>

691
00:28:33,890 --> 00:28:37,940
lines running<font color="#E5E5E5"> along the top</font><font color="#CCCCCC"> to the</font>

692
00:28:35,690 --> 00:28:39,650
instruction register<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then this this</font>

693
00:28:37,940 --> 00:28:42,350
<font color="#E5E5E5">block in the middle</font><font color="#CCCCCC"> is the</font><font color="#E5E5E5"> PLA</font><font color="#CCCCCC"> that does</font>

694
00:28:39,650 --> 00:28:44,000
the instruction decoding over here you

695
00:28:42,350 --> 00:28:48,020
can see<font color="#CCCCCC"> eight</font><font color="#E5E5E5"> columns that form the</font>

696
00:28:44,000 --> 00:28:50,809
<font color="#CCCCCC">8-bit ALU</font><font color="#E5E5E5"> so hopefully at this point</font><font color="#CCCCCC"> you</font>

697
00:28:48,020 --> 00:28:54,500
can you can start<font color="#E5E5E5"> to understand you know</font>

698
00:28:50,809 --> 00:28:57,200
what's going<font color="#E5E5E5"> on inside chips</font><font color="#CCCCCC"> you know I</font>

699
00:28:54,500 --> 00:28:58,970
hope some of<font color="#CCCCCC"> you</font><font color="#E5E5E5"> will you know you know</font>

700
00:28:57,200 --> 00:29:00,950
download or photograph some chips and

701
00:28:58,970 --> 00:29:02,720
<font color="#E5E5E5">start reverse-engineering them because</font>

702
00:29:00,950 --> 00:29:04,520
it's a it's a really<font color="#E5E5E5"> interesting hobby</font>

703
00:29:02,720 --> 00:29:09,159
and a great way to<font color="#E5E5E5"> find out what's going</font>

704
00:29:04,520 --> 00:29:09,158
<font color="#CCCCCC">on inside chips</font><font color="#E5E5E5"> so thank you</font><font color="#CCCCCC"> very much</font>

705
00:29:16,580 --> 00:29:35,109
[Music]

706
00:29:53,950 --> 00:29:57,019
[Music]

707
00:30:01,140 --> 00:30:32,689
[Music]

708
00:30:57,370 --> 00:31:00,459
[Music]

709
00:31:18,070 --> 00:31:52,589
[Music]

