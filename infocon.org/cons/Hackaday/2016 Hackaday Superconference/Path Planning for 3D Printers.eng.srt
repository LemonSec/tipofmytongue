1
00:00:01,000 --> 00:00:04,230
[Music]

2
00:00:19,660 --> 00:00:30,079
[Music]

3
00:00:30,870 --> 00:00:34,780
<font color="#E5E5E5">okay</font>

4
00:00:32,110 --> 00:00:37,150
so up next<font color="#E5E5E5"> we have</font><font color="#CCCCCC"> Derick Schulte a</font><font color="#E5E5E5"> um</font>

5
00:00:34,780 --> 00:00:39,820
<font color="#CCCCCC">he</font><font color="#E5E5E5"> is responsible for</font><font color="#CCCCCC"> our all hardware</font>

6
00:00:37,150 --> 00:00:41,800
and<font color="#CCCCCC"> firmware at new matter</font><font color="#E5E5E5"> he works on a</font>

7
00:00:39,820 --> 00:00:45,810
wide variety<font color="#E5E5E5"> of projects from follicle</font>

8
00:00:41,800 --> 00:00:48,599
implants to<font color="#E5E5E5"> spaceflight fiber optics</font>

9
00:00:45,810 --> 00:00:50,710
<font color="#CCCCCC">he's worked on force-feedback robotics</font>

10
00:00:48,600 --> 00:00:54,610
<font color="#E5E5E5">industrial scale solar trackers and</font>

11
00:00:50,710 --> 00:00:56,470
laser initiated pyrotechnics<font color="#E5E5E5"> so can we</font>

12
00:00:54,610 --> 00:01:06,310
all give a round of applause to<font color="#CCCCCC"> Derick</font>

13
00:00:56,470 --> 00:01:08,079
Schulte<font color="#CCCCCC"> which is thank you</font><font color="#E5E5E5"> I'm here to</font>

14
00:01:06,310 --> 00:01:09,700
talk<font color="#E5E5E5"> about</font><font color="#CCCCCC"> efficient processing for</font>

15
00:01:08,079 --> 00:01:11,079
motion control I apologize some of the

16
00:01:09,700 --> 00:01:13,060
fonts are appearing<font color="#E5E5E5"> to not show up right</font>

17
00:01:11,079 --> 00:01:14,859
so you'll have some subscripts<font color="#E5E5E5"> there off</font>

18
00:01:13,060 --> 00:01:16,929
<font color="#E5E5E5">anyway that really boils down to how to</font>

19
00:01:14,859 --> 00:01:18,908
get from A to B and since this is

20
00:01:16,929 --> 00:01:21,310
hackaday<font color="#E5E5E5"> I'm assuming that doing that</font>

21
00:01:18,909 --> 00:01:22,359
along a straight<font color="#CCCCCC"> line is pretty easy but</font>

22
00:01:21,310 --> 00:01:23,859
it gets quite a bit<font color="#E5E5E5"> more complicated</font>

23
00:01:22,359 --> 00:01:25,899
well you want to<font color="#E5E5E5"> go from alpha to</font><font color="#CCCCCC"> Omega</font>

24
00:01:23,859 --> 00:01:28,119
and you're going<font color="#E5E5E5"> to do that with</font>

25
00:01:25,899 --> 00:01:29,530
multiple<font color="#E5E5E5"> segments in</font><font color="#CCCCCC"> 3-space so you need</font>

26
00:01:28,119 --> 00:01:32,279
to figure<font color="#E5E5E5"> out how to round the corners</font>

27
00:01:29,530 --> 00:01:34,600
<font color="#CCCCCC">because you don't want to come</font><font color="#E5E5E5"> to a stop</font>

28
00:01:32,279 --> 00:01:42,789
<font color="#E5E5E5">because we like to</font><font color="#CCCCCC"> make stuff</font><font color="#E5E5E5"> that looks</font>

29
00:01:34,600 --> 00:01:44,589
<font color="#CCCCCC">like that all that said I am</font><font color="#E5E5E5"> the</font>

30
00:01:42,789 --> 00:01:46,149
principal<font color="#E5E5E5"> engineer for new matter so I</font>

31
00:01:44,590 --> 00:01:49,569
am a little<font color="#CCCCCC"> bit of a corporate</font><font color="#E5E5E5"> shill we</font>

32
00:01:46,149 --> 00:01:51,429
make a 3d printer<font color="#E5E5E5"> and it has been a</font>

33
00:01:49,569 --> 00:01:54,450
market for a<font color="#E5E5E5"> little while it's an</font><font color="#CCCCCC"> FDM</font>

34
00:01:51,429 --> 00:01:56,829
based printer so we're laying down

35
00:01:54,450 --> 00:02:00,159
<font color="#E5E5E5">basically like a robotic</font><font color="#CCCCCC"> Lu Gong drips</font>

36
00:01:56,829 --> 00:02:02,499
<font color="#E5E5E5">of PLA in 50 micron 40 micron layers</font>

37
00:02:00,159 --> 00:02:04,060
with<font color="#E5E5E5"> a 400 micron nozzle I'm assuming</font>

38
00:02:02,499 --> 00:02:06,759
you're all probably familiar with<font color="#CCCCCC"> that</font>

39
00:02:04,060 --> 00:02:08,830
process<font color="#E5E5E5"> we'll talk about a little bit</font>

40
00:02:06,759 --> 00:02:11,530
<font color="#CCCCCC">about our development</font><font color="#E5E5E5"> process where we</font>

41
00:02:08,830 --> 00:02:15,400
went from<font color="#E5E5E5"> a sort</font><font color="#CCCCCC"> of crazy really</font><font color="#E5E5E5"> couple</font>

42
00:02:11,530 --> 00:02:17,409
<font color="#E5E5E5">axis but really small printer to a penny</font>

43
00:02:15,400 --> 00:02:20,470
<font color="#CCCCCC">drive mechanism</font><font color="#E5E5E5"> to what we showed</font><font color="#CCCCCC"> its</font>

44
00:02:17,409 --> 00:02:23,649
<font color="#E5E5E5">yes to a web-based system for</font>

45
00:02:20,470 --> 00:02:25,810
controlling<font color="#E5E5E5"> the printer of trying to</font>

46
00:02:23,650 --> 00:02:29,379
sell<font color="#E5E5E5"> it</font><font color="#CCCCCC"> also we can make ping-pong ball</font>

47
00:02:25,810 --> 00:02:31,150
launchers<font color="#E5E5E5"> it is a consumer focused</font>

48
00:02:29,379 --> 00:02:33,370
printer so if you want<font color="#E5E5E5"> to hack your</font>

49
00:02:31,150 --> 00:02:35,019
printer you're probably better off with

50
00:02:33,370 --> 00:02:39,000
a lulzbot which is one<font color="#E5E5E5"> of the conference</font>

51
00:02:35,019 --> 00:02:41,319
sponsors<font color="#E5E5E5"> that said I am a corporate show</font>

52
00:02:39,000 --> 00:02:42,400
<font color="#E5E5E5">okay so if you want to make a 3d printer</font>

53
00:02:41,319 --> 00:02:44,078
<font color="#CCCCCC">you first need to think a</font><font color="#E5E5E5"> little bit</font>

54
00:02:42,400 --> 00:02:46,780
<font color="#CCCCCC">about what the requirements are for</font><font color="#E5E5E5"> that</font>

55
00:02:44,079 --> 00:02:48,940
printer functionally<font color="#CCCCCC"> speaking you need</font>

56
00:02:46,780 --> 00:02:50,950
<font color="#E5E5E5">to do</font><font color="#CCCCCC"> special motion</font><font color="#E5E5E5"> control obviously</font>

57
00:02:48,940 --> 00:02:52,569
<font color="#CCCCCC">you've got an extruder that's going to</font>

58
00:02:50,950 --> 00:02:55,060
have motion that's<font color="#CCCCCC"> coupled to that</font>

59
00:02:52,569 --> 00:02:57,399
<font color="#CCCCCC">spatial</font><font color="#E5E5E5"> motion control you have to think</font>

60
00:02:55,060 --> 00:02:58,750
about thermal control for the heater<font color="#CCCCCC"> you</font>

61
00:02:57,400 --> 00:03:00,700
need a path planner which<font color="#CCCCCC"> we'll talk a</font>

62
00:02:58,750 --> 00:03:04,060
<font color="#E5E5E5">bit about and obviously you need some</font>

63
00:03:00,700 --> 00:03:05,048
<font color="#E5E5E5">comms on that printer if you're</font><font color="#CCCCCC"> building</font>

64
00:03:04,060 --> 00:03:06,670
a product there's a whole bunch<font color="#CCCCCC"> of</font>

65
00:03:05,049 --> 00:03:08,079
product requirements<font color="#E5E5E5"> since this is</font>

66
00:03:06,670 --> 00:03:11,069
<font color="#E5E5E5">hackaday I'm going to try to avoid</font>

67
00:03:08,079 --> 00:03:15,480
talking<font color="#CCCCCC"> about product development issues</font>

68
00:03:11,069 --> 00:03:17,589
but sometimes those work their way in

69
00:03:15,480 --> 00:03:20,108
<font color="#E5E5E5">letting out those functional</font>

70
00:03:17,590 --> 00:03:21,220
requirements into a<font color="#E5E5E5"> product</font><font color="#CCCCCC"> you come up</font>

71
00:03:20,109 --> 00:03:23,560
with<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that looks like the block</font>

72
00:03:21,220 --> 00:03:25,569
<font color="#E5E5E5">diagram when I do this</font><font color="#CCCCCC"> I highlight</font>

73
00:03:23,560 --> 00:03:27,549
<font color="#E5E5E5">things in red</font><font color="#CCCCCC"> that make you lose sleep</font>

74
00:03:25,569 --> 00:03:30,849
<font color="#CCCCCC">at night particularly connectors and</font>

75
00:03:27,549 --> 00:03:32,560
harnesses<font color="#E5E5E5"> this will show up in</font><font color="#CCCCCC"> a similar</font>

76
00:03:30,849 --> 00:03:36,010
form<font color="#CCCCCC"> and a little bit later</font><font color="#E5E5E5"> when</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> show</font>

77
00:03:32,560 --> 00:03:37,659
what the firm water boils down to when

78
00:03:36,010 --> 00:03:39,220
it comes<font color="#E5E5E5"> time to select</font><font color="#CCCCCC"> motion control</font>

79
00:03:37,659 --> 00:03:40,870
components often one of<font color="#E5E5E5"> the first</font><font color="#CCCCCC"> things</font>

80
00:03:39,220 --> 00:03:43,209
we think<font color="#E5E5E5"> of is the good</font><font color="#CCCCCC"> old NEMA 17</font>

81
00:03:40,870 --> 00:03:46,120
stepper motor<font color="#E5E5E5"> that's not your only</font>

82
00:03:43,209 --> 00:03:47,620
option<font color="#E5E5E5"> they are expensive and they can</font>

83
00:03:46,120 --> 00:03:50,709
be noisy<font color="#CCCCCC"> but they're</font><font color="#E5E5E5"> very easy to</font>

84
00:03:47,620 --> 00:03:53,739
<font color="#CCCCCC">control</font><font color="#E5E5E5"> you want</font><font color="#CCCCCC"> happy daddy and fine</font>

85
00:03:50,709 --> 00:03:58,090
brushless motors you can<font color="#E5E5E5"> make your own</font>

86
00:03:53,739 --> 00:04:01,209
<font color="#CCCCCC">galvo x' or you can machine</font><font color="#E5E5E5"> out operable</font>

87
00:03:58,090 --> 00:04:03,159
v12<font color="#E5E5E5"> model engines if you happen to have</font>

88
00:04:01,209 --> 00:04:06,280
some nice<font color="#CCCCCC"> swiss</font><font color="#E5E5E5"> made motors or</font><font color="#CCCCCC"> gearboxes</font>

89
00:04:03,159 --> 00:04:08,500
around<font color="#E5E5E5"> this work well</font><font color="#CCCCCC"> - lots of options</font>

90
00:04:06,280 --> 00:04:11,560
<font color="#CCCCCC">here for feedback</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> control you might</font>

91
00:04:08,500 --> 00:04:14,319
use<font color="#E5E5E5"> something like a quad cell</font><font color="#CCCCCC"> P SD slot</font>

92
00:04:11,560 --> 00:04:18,699
car motors capacitive modular encoder

93
00:04:14,319 --> 00:04:20,199
systems that<font color="#CCCCCC"> Hummel solenoid all sorts</font>

94
00:04:18,699 --> 00:04:22,960
of<font color="#E5E5E5"> great stuff this is where mechanical</font>

95
00:04:20,199 --> 00:04:25,950
engineers some stay up late at<font color="#CCCCCC"> night</font>

96
00:04:22,960 --> 00:04:25,950
<font color="#E5E5E5">browsing the weapon</font>

97
00:04:26,650 --> 00:04:30,250
but if you're actually<font color="#E5E5E5"> trying to put</font>

98
00:04:28,419 --> 00:04:31,508
something<font color="#E5E5E5"> together</font><font color="#CCCCCC"> for a product</font><font color="#E5E5E5"> you</font>

99
00:04:30,250 --> 00:04:35,169
can't necessarily go<font color="#CCCCCC"> into your</font><font color="#E5E5E5"> garage</font>

100
00:04:31,509 --> 00:04:37,570
and grab that<font color="#CCCCCC"> air bearing system in the</font>

101
00:04:35,169 --> 00:04:39,250
lower corner<font color="#E5E5E5"> so you have to use some</font>

102
00:04:37,570 --> 00:04:40,900
product engineering where you put down

103
00:04:39,250 --> 00:04:43,180
the<font color="#E5E5E5"> parameters you come up with</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> bunch</font>

104
00:04:40,900 --> 00:04:45,400
of<font color="#CCCCCC"> calculations</font><font color="#E5E5E5"> you compare those</font>

105
00:04:43,180 --> 00:04:46,810
calculations<font color="#E5E5E5"> against each other</font><font color="#CCCCCC"> put in a</font>

106
00:04:45,400 --> 00:04:48,849
whole bunch<font color="#E5E5E5"> of</font><font color="#CCCCCC"> merit functions and I'm</font>

107
00:04:46,810 --> 00:04:51,970
trying to<font color="#CCCCCC"> avoid talking</font><font color="#E5E5E5"> about that and</font>

108
00:04:48,850 --> 00:04:54,190
we wound up selecting a common motor for

109
00:04:51,970 --> 00:04:56,199
all four of our axes<font color="#E5E5E5"> so it turned out</font>

110
00:04:54,190 --> 00:04:58,150
<font color="#CCCCCC">that when</font><font color="#E5E5E5"> we looked at the resolution</font>

111
00:04:56,199 --> 00:05:00,460
the speed the force<font color="#E5E5E5"> torque etc</font>

112
00:04:58,150 --> 00:05:01,750
requirements and a variety<font color="#CCCCCC"> of during</font>

113
00:05:00,460 --> 00:05:04,060
<font color="#E5E5E5">arrangements we were</font><font color="#CCCCCC"> able to use a</font>

114
00:05:01,750 --> 00:05:05,979
common motor which<font color="#E5E5E5"> greatly helped our</font>

115
00:05:04,060 --> 00:05:07,840
selection process<font color="#CCCCCC"> and in</font><font color="#E5E5E5"> this case it's</font>

116
00:05:05,979 --> 00:05:10,479
a brushed DC<font color="#E5E5E5"> motor with a</font><font color="#CCCCCC"> high</font>

117
00:05:07,840 --> 00:05:12,159
<font color="#CCCCCC">resolution encoder</font><font color="#E5E5E5"> on the back</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that</font>

118
00:05:10,479 --> 00:05:15,099
<font color="#E5E5E5">gives us a little bit less than 0.3</font>

119
00:05:12,160 --> 00:05:17,500
degrees per<font color="#E5E5E5"> County in quadrature which</font>

120
00:05:15,100 --> 00:05:20,199
is very convenient<font color="#E5E5E5"> we put that together</font>

121
00:05:17,500 --> 00:05:22,360
with<font color="#E5E5E5"> an emic self</font><font color="#CCCCCC"> belt drive system in</font>

122
00:05:20,199 --> 00:05:23,650
the pinion rod arrangement<font color="#E5E5E5"> for the x and</font>

123
00:05:22,360 --> 00:05:26,080
<font color="#E5E5E5">y</font><font color="#CCCCCC"> axes</font>

124
00:05:23,650 --> 00:05:29,289
we used a simple<font color="#CCCCCC"> gearbox for</font><font color="#E5E5E5"> the z-axis</font>

125
00:05:26,080 --> 00:05:32,159
<font color="#CCCCCC">on a threaded rod</font><font color="#E5E5E5"> and then a gearbox</font>

126
00:05:29,289 --> 00:05:36,880
<font color="#CCCCCC">with an idler gear</font><font color="#E5E5E5"> for the extruder</font><font color="#CCCCCC"> and</font>

127
00:05:32,160 --> 00:05:39,010
<font color="#E5E5E5">we were ready to go so</font><font color="#CCCCCC"> that cut puts</font>

128
00:05:36,880 --> 00:05:43,510
together a<font color="#E5E5E5"> system this is all of the</font>

129
00:05:39,010 --> 00:05:52,599
electronics that gun into a mod<font color="#CCCCCC"> t that's</font>

130
00:05:43,510 --> 00:05:54,969
it in that we needed<font color="#E5E5E5"> a controller board</font>

131
00:05:52,599 --> 00:05:57,159
we decided to roll<font color="#E5E5E5"> our own controller</font>

132
00:05:54,970 --> 00:05:58,750
board predominantly for cost reasons<font color="#E5E5E5"> but</font>

133
00:05:57,159 --> 00:06:01,570
also<font color="#E5E5E5"> because</font><font color="#CCCCCC"> we were</font><font color="#E5E5E5"> using a servo motor</font>

134
00:05:58,750 --> 00:06:03,460
system<font color="#CCCCCC"> I'm not aware of any other</font><font color="#E5E5E5"> 3d</font>

135
00:06:01,570 --> 00:06:06,130
<font color="#E5E5E5">printers on the market at least in the</font>

136
00:06:03,460 --> 00:06:08,739
sort of<font color="#E5E5E5"> sub</font><font color="#CCCCCC"> $10,000 range that use a</font>

137
00:06:06,130 --> 00:06:10,599
closed<font color="#E5E5E5"> loop control system</font><font color="#CCCCCC"> and that had</font>

138
00:06:08,740 --> 00:06:12,220
some<font color="#CCCCCC"> additional complications on the</font>

139
00:06:10,599 --> 00:06:15,250
electronics that<font color="#E5E5E5"> we needed to</font><font color="#CCCCCC"> roll our</font>

140
00:06:12,220 --> 00:06:18,820
own<font color="#CCCCCC"> on so we use an</font><font color="#E5E5E5"> STM 32 f103</font>

141
00:06:15,250 --> 00:06:22,570
microprocessor and<font color="#E5E5E5"> Allegro 849 53</font>

142
00:06:18,820 --> 00:06:25,479
motor drivers with that and variety of

143
00:06:22,570 --> 00:06:26,800
other components<font color="#CCCCCC"> that are there</font><font color="#E5E5E5"> you</font>

144
00:06:25,479 --> 00:06:28,930
<font color="#E5E5E5">always want to put</font><font color="#CCCCCC"> in some debug</font>

145
00:06:26,800 --> 00:06:30,580
functions like having a serial port<font color="#CCCCCC"> even</font>

146
00:06:28,930 --> 00:06:32,770
if you don't expose it<font color="#E5E5E5"> and your product</font>

147
00:06:30,580 --> 00:06:34,750
later<font color="#E5E5E5"> on we found that we actually</font>

148
00:06:32,770 --> 00:06:36,760
<font color="#E5E5E5">needed</font><font color="#CCCCCC"> four</font><font color="#E5E5E5"> different voltage</font><font color="#CCCCCC"> buses in</font>

149
00:06:34,750 --> 00:06:39,029
<font color="#E5E5E5">the product in part because of certain</font>

150
00:06:36,760 --> 00:06:40,360
<font color="#CCCCCC">can components</font><font color="#E5E5E5"> that we wanted to</font><font color="#CCCCCC"> use for</font>

151
00:06:39,029 --> 00:06:43,389
<font color="#CCCCCC">example we use</font>

152
00:06:40,360 --> 00:06:45,340
the CC<font color="#E5E5E5"> 3100 Wi-Fi module from TI which</font>

153
00:06:43,389 --> 00:06:49,740
is frankly<font color="#CCCCCC"> a bit of a disaster although</font>

154
00:06:45,340 --> 00:06:51,960
it does work and<font color="#E5E5E5"> it was</font><font color="#CCCCCC"> pretty certified</font>

155
00:06:49,740 --> 00:06:55,270
<font color="#CCCCCC">board looks like that</font>

156
00:06:51,960 --> 00:06:58,210
<font color="#E5E5E5">you can see in the lower corner there</font>

157
00:06:55,270 --> 00:07:00,878
all<font color="#CCCCCC"> of the dense stuff is the canned</font><font color="#E5E5E5"> TI</font>

158
00:06:58,210 --> 00:07:03,099
<font color="#E5E5E5">circuit area that you have</font><font color="#CCCCCC"> to follow if</font>

159
00:07:00,879 --> 00:07:05,259
you<font color="#CCCCCC"> want to maintain</font><font color="#E5E5E5"> certification you</font>

160
00:07:03,099 --> 00:07:09,669
can<font color="#CCCCCC"> see the SD chip there we've got a</font>

161
00:07:05,259 --> 00:07:11,680
<font color="#E5E5E5">little</font><font color="#CCCCCC"> SD card and some flying leads</font><font color="#E5E5E5"> and</font>

162
00:07:09,669 --> 00:07:15,549
some connectorized stuff which people

163
00:07:11,680 --> 00:07:18,520
like me lose sleep over in<font color="#E5E5E5"> the firmware</font>

164
00:07:15,550 --> 00:07:20,919
<font color="#E5E5E5">we chose to use</font><font color="#CCCCCC"> free are costs</font><font color="#E5E5E5"> as a</font>

165
00:07:18,520 --> 00:07:23,289
<font color="#CCCCCC">real-time operating system in part to</font>

166
00:07:20,919 --> 00:07:26,889
modularize the development of the code

167
00:07:23,289 --> 00:07:29,460
for the<font color="#CCCCCC"> system</font><font color="#E5E5E5"> we use the GCC toolchain</font>

168
00:07:26,889 --> 00:07:32,620
<font color="#CCCCCC">arm compiler in the</font><font color="#E5E5E5"> Eclipse IDE you</font>

169
00:07:29,460 --> 00:07:34,688
<font color="#CCCCCC">implement a bunch of functions</font><font color="#E5E5E5"> you put</font>

170
00:07:32,620 --> 00:07:37,029
together a state machine<font color="#CCCCCC"> you wind</font><font color="#E5E5E5"> up</font>

171
00:07:34,689 --> 00:07:39,340
having<font color="#E5E5E5"> to fake a bunch of states</font><font color="#CCCCCC"> you</font>

172
00:07:37,029 --> 00:07:43,960
find up having a bunch<font color="#CCCCCC"> of events and it</font>

173
00:07:39,340 --> 00:07:46,508
all turns into an eye chart and back to

174
00:07:43,960 --> 00:07:48,580
talking about<font color="#CCCCCC"> to actual</font><font color="#E5E5E5"> path processing</font>

175
00:07:46,509 --> 00:07:50,440
for motion control now that we have some

176
00:07:48,580 --> 00:07:52,719
hardware<font color="#CCCCCC"> so we're going</font><font color="#E5E5E5"> to get from</font>

177
00:07:50,440 --> 00:07:54,370
<font color="#E5E5E5">alpha to</font><font color="#CCCCCC"> Omega it's not as simple as</font>

178
00:07:52,719 --> 00:07:55,990
<font color="#CCCCCC">just following a simple line we need to</font>

179
00:07:54,370 --> 00:07:58,930
<font color="#CCCCCC">actually compute what these curves look</font>

180
00:07:55,990 --> 00:08:03,699
<font color="#CCCCCC">like and actually</font><font color="#E5E5E5"> get into time domain</font>

181
00:07:58,930 --> 00:08:09,310
<font color="#E5E5E5">information so again we can make another</font>

182
00:08:03,699 --> 00:08:10,990
mess so where does the planner fit in

183
00:08:09,310 --> 00:08:13,000
this<font color="#E5E5E5"> process if you're going to create</font>

184
00:08:10,990 --> 00:08:14,919
<font color="#E5E5E5">something in a typical 3d printing</font>

185
00:08:13,000 --> 00:08:16,360
workflow<font color="#E5E5E5"> you're going to create some</font>

186
00:08:14,919 --> 00:08:18,669
<font color="#CCCCCC">geometry whether you download that</font>

187
00:08:16,360 --> 00:08:21,009
geometry<font color="#E5E5E5"> or you create it or model it in</font>

188
00:08:18,669 --> 00:08:22,750
<font color="#E5E5E5">the CAD package or sculpt it you then</font>

189
00:08:21,009 --> 00:08:25,479
generally export that<font color="#CCCCCC"> to</font><font color="#E5E5E5"> something like</font>

190
00:08:22,750 --> 00:08:29,080
an STL or obj file<font color="#E5E5E5"> which is a really</font>

191
00:08:25,479 --> 00:08:31,779
simplified<font color="#CCCCCC"> a triangular tessellation it</font>

192
00:08:29,080 --> 00:08:33,130
is then sliced<font color="#E5E5E5"> in the vertical direction</font>

193
00:08:31,779 --> 00:08:35,708
because<font color="#CCCCCC"> we generally</font><font color="#E5E5E5"> print layer by</font>

194
00:08:33,130 --> 00:08:39,519
layer and then filled in with paths and

195
00:08:35,708 --> 00:08:41,588
<font color="#E5E5E5">that creates the G code the G code is a</font>

196
00:08:39,519 --> 00:08:43,479
basically<font color="#E5E5E5"> a set</font><font color="#CCCCCC"> of destinations and</font>

197
00:08:41,589 --> 00:08:45,990
target velocities that<font color="#E5E5E5"> you would like to</font>

198
00:08:43,479 --> 00:08:50,829
hit in getting<font color="#CCCCCC"> it to those</font><font color="#E5E5E5"> destinations</font>

199
00:08:45,990 --> 00:08:52,600
so if you want<font color="#E5E5E5"> to exactly execute that</font>

200
00:08:50,829 --> 00:08:53,739
line<font color="#E5E5E5"> path every time you come to</font><font color="#CCCCCC"> a</font>

201
00:08:52,600 --> 00:08:56,110
corner you have<font color="#E5E5E5"> to come to it</font>

202
00:08:53,740 --> 00:08:58,390
complete stop<font color="#CCCCCC"> because in each segment of</font>

203
00:08:56,110 --> 00:09:01,720
<font color="#E5E5E5">the line you're moving at a fixed ratio</font>

204
00:08:58,390 --> 00:09:05,439
between the motors we don't want to come

205
00:09:01,720 --> 00:09:06,970
to<font color="#CCCCCC"> a stop in part</font><font color="#E5E5E5"> because the the flow</font>

206
00:09:05,440 --> 00:09:08,830
rate you'll have<font color="#E5E5E5"> basically drool from</font>

207
00:09:06,970 --> 00:09:13,270
<font color="#E5E5E5">your extruder</font><font color="#CCCCCC"> nozzle and</font><font color="#E5E5E5"> it will take a</font>

208
00:09:08,830 --> 00:09:14,920
long<font color="#E5E5E5"> time to print so</font><font color="#CCCCCC"> we work on</font><font color="#E5E5E5"> a</font>

209
00:09:13,270 --> 00:09:19,120
planner<font color="#E5E5E5"> again this sits between the</font>

210
00:09:14,920 --> 00:09:22,990
g-code<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> servo execution of the</font>

211
00:09:19,120 --> 00:09:26,560
actual path and we're going<font color="#E5E5E5"> from sharp</font>

212
00:09:22,990 --> 00:09:27,910
corners to rounded corners<font color="#E5E5E5"> in doing this</font>

213
00:09:26,560 --> 00:09:29,709
you<font color="#E5E5E5"> need to think about acceleration</font>

214
00:09:27,910 --> 00:09:33,069
limits in the system whether that<font color="#E5E5E5"> be on</font>

215
00:09:29,709 --> 00:09:35,619
<font color="#E5E5E5">the motor specific cider or resonant</font>

216
00:09:33,070 --> 00:09:37,450
frequencies<font color="#CCCCCC"> velocity limits in the</font>

217
00:09:35,620 --> 00:09:39,220
system you may be<font color="#E5E5E5"> thinking about jerk</font>

218
00:09:37,450 --> 00:09:42,040
limits where jerk is the<font color="#CCCCCC"> derivative of</font>

219
00:09:39,220 --> 00:09:44,980
<font color="#E5E5E5">velocity</font><font color="#CCCCCC"> how much path error is</font>

220
00:09:42,040 --> 00:09:47,140
permissible how long it's going<font color="#E5E5E5"> to take</font>

221
00:09:44,980 --> 00:09:49,990
how smooth you want it to be the axes

222
00:09:47,140 --> 00:09:51,939
<font color="#E5E5E5">are coupled</font><font color="#CCCCCC"> dynamic computation</font><font color="#E5E5E5"> so</font>

223
00:09:49,990 --> 00:09:54,970
g-code file may have say a<font color="#E5E5E5"> million two</font>

224
00:09:51,940 --> 00:09:56,800
million<font color="#E5E5E5"> lines in it because of that and</font>

225
00:09:54,970 --> 00:09:58,510
if you're working<font color="#E5E5E5"> in 96 kilobytes or Ram</font>

226
00:09:56,800 --> 00:10:00,209
you can't pre-process<font color="#CCCCCC"> the whole thing</font>

227
00:09:58,510 --> 00:10:04,029
<font color="#CCCCCC">very easily so you're going to</font><font color="#E5E5E5"> be</font>

228
00:10:00,209 --> 00:10:06,010
trading<font color="#E5E5E5"> off between processing that path</font>

229
00:10:04,029 --> 00:10:07,839
and then kicking<font color="#E5E5E5"> that path out or</font>

230
00:10:06,010 --> 00:10:10,779
kicking<font color="#E5E5E5"> those instructions out to the</font>

231
00:10:07,839 --> 00:10:13,120
servos if you're going<font color="#E5E5E5"> to be able to</font>

232
00:10:10,779 --> 00:10:14,529
pause<font color="#E5E5E5"> and resume in that system it gets</font>

233
00:10:13,120 --> 00:10:16,300
a little<font color="#E5E5E5"> bit more complicated how are</font>

234
00:10:14,529 --> 00:10:17,950
you going<font color="#E5E5E5"> to handle the pause and then</font>

235
00:10:16,300 --> 00:10:21,250
remember where you are<font color="#E5E5E5"> and then start</font>

236
00:10:17,950 --> 00:10:23,680
planning<font color="#E5E5E5"> again you also need to</font><font color="#CCCCCC"> think</font>

237
00:10:21,250 --> 00:10:25,329
<font color="#E5E5E5">about how to handle</font><font color="#CCCCCC"> interrupts desperate</font>

238
00:10:23,680 --> 00:10:28,029
ization or residuals if you're going to

239
00:10:25,329 --> 00:10:30,640
go through<font color="#E5E5E5"> a sort of a fixed interval</font>

240
00:10:28,029 --> 00:10:32,800
time clock on the path<font color="#E5E5E5"> the actual</font>

241
00:10:30,640 --> 00:10:35,589
computed time to go<font color="#E5E5E5"> through a segment or</font>

242
00:10:32,800 --> 00:10:37,660
sub segment may not land or generally

243
00:10:35,589 --> 00:10:39,940
won't land on a specific discretization

244
00:10:37,660 --> 00:10:42,010
<font color="#E5E5E5">so you need to make sure that you handle</font>

245
00:10:39,940 --> 00:10:43,600
that residual so that you've computed

246
00:10:42,010 --> 00:10:47,290
<font color="#E5E5E5">path</font><font color="#CCCCCC"> it's actually where you want it to</font>

247
00:10:43,600 --> 00:10:48,910
be when it comes<font color="#CCCCCC"> out</font><font color="#E5E5E5"> all of</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> said</font>

248
00:10:47,290 --> 00:10:50,980
really boils down<font color="#E5E5E5"> to how do you manage</font>

249
00:10:48,910 --> 00:10:54,399
<font color="#E5E5E5">the acceleration</font><font color="#CCCCCC"> so that you</font><font color="#E5E5E5"> don't stall</font>

250
00:10:50,980 --> 00:10:55,899
or you<font color="#E5E5E5"> don't skip how do you manage the</font>

251
00:10:54,399 --> 00:10:59,860
corners<font color="#CCCCCC"> so</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you don't have to stop</font>

252
00:10:55,899 --> 00:11:01,420
and how you don't<font color="#CCCCCC"> a crash</font><font color="#E5E5E5"> because if you</font>

253
00:10:59,860 --> 00:11:03,310
can only look so far ahead how do you

254
00:11:01,420 --> 00:11:06,490
know<font color="#E5E5E5"> that you won't be coming</font><font color="#CCCCCC"> to a stop</font>

255
00:11:03,310 --> 00:11:07,599
<font color="#CCCCCC">at a</font><font color="#E5E5E5"> particular time if you're</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> going</font>

256
00:11:06,490 --> 00:11:09,130
to<font color="#E5E5E5"> round the corners</font><font color="#CCCCCC"> and you</font>

257
00:11:07,600 --> 00:11:14,259
are coming<font color="#CCCCCC"> to a stop you don't</font><font color="#E5E5E5"> have to</font>

258
00:11:09,130 --> 00:11:16,389
worry<font color="#CCCCCC"> about crashing there are a</font><font color="#E5E5E5"> bunch</font>

259
00:11:14,259 --> 00:11:18,040
of ways to<font color="#CCCCCC"> do planning</font><font color="#E5E5E5"> you can do this</font>

260
00:11:16,389 --> 00:11:20,350
with really<font color="#CCCCCC"> simple step functions for a</font>

261
00:11:18,040 --> 00:11:22,719
lot of<font color="#E5E5E5"> systems</font><font color="#CCCCCC"> you can use trapezoidal</font>

262
00:11:20,350 --> 00:11:26,139
velocity profiles<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can do coronal</font>

263
00:11:22,720 --> 00:11:28,329
rounding you can do finite jerk methods

264
00:11:26,139 --> 00:11:31,480
<font color="#E5E5E5">and you can do smooth jerk or smooth</font>

265
00:11:28,329 --> 00:11:33,758
doubts related<font color="#E5E5E5"> methods in the case of</font>

266
00:11:31,480 --> 00:11:36,639
the mod<font color="#CCCCCC"> T</font><font color="#E5E5E5"> were used trapezoidal velocity</font>

267
00:11:33,759 --> 00:11:38,410
profiles with corner rounding the trick

268
00:11:36,639 --> 00:11:40,779
here is to<font color="#E5E5E5"> keep it</font><font color="#CCCCCC"> simple to</font><font color="#E5E5E5"> figure out</font>

269
00:11:38,410 --> 00:11:44,019
what you can<font color="#CCCCCC"> actually get</font><font color="#E5E5E5"> away with in</font>

270
00:11:40,779 --> 00:11:46,689
<font color="#E5E5E5">your system and make the early stuff</font>

271
00:11:44,019 --> 00:11:48,910
work<font color="#E5E5E5"> first because chances are you may</font>

272
00:11:46,690 --> 00:11:51,160
want it later<font color="#E5E5E5"> during debugging so</font>

273
00:11:48,910 --> 00:11:53,319
<font color="#CCCCCC">oftentimes</font><font color="#E5E5E5"> you'll want to work through</font>

274
00:11:51,160 --> 00:11:56,829
<font color="#E5E5E5">this in a step based fashion as your</font>

275
00:11:53,319 --> 00:11:59,430
system<font color="#CCCCCC"> starts to</font><font color="#E5E5E5"> come online trapezoidal</font>

276
00:11:56,829 --> 00:12:01,709
velocity profiles<font color="#E5E5E5"> look like trapezoids</font>

277
00:11:59,430 --> 00:12:03,758
<font color="#E5E5E5">here we have one in pink</font><font color="#CCCCCC"> the</font>

278
00:12:01,709 --> 00:12:05,258
<font color="#CCCCCC">acceleration is a step function the</font>

279
00:12:03,759 --> 00:12:07,870
distance<font color="#E5E5E5"> coming out of that in this case</font>

280
00:12:05,259 --> 00:12:10,600
we have an<font color="#E5E5E5"> S curve and we've capped the</font>

281
00:12:07,870 --> 00:12:12,939
top of the velocity at some limit for

282
00:12:10,600 --> 00:12:14,709
the system the nice<font color="#E5E5E5"> thing about this is</font>

283
00:12:12,939 --> 00:12:16,180
that<font color="#E5E5E5"> that slope is</font><font color="#CCCCCC"> constant you can have</font>

284
00:12:14,709 --> 00:12:17,979
a different entry velocity or exit

285
00:12:16,180 --> 00:12:19,810
velocity<font color="#E5E5E5"> but that slope is always</font>

286
00:12:17,980 --> 00:12:21,939
<font color="#E5E5E5">constant so it's</font><font color="#CCCCCC"> really easy to figure</font>

287
00:12:19,810 --> 00:12:25,719
<font color="#CCCCCC">out what the optimum trapezoid</font><font color="#E5E5E5"> needs to</font>

288
00:12:21,939 --> 00:12:27,130
look like governed by acceleration

289
00:12:25,720 --> 00:12:29,139
<font color="#E5E5E5">velocity and distance</font><font color="#CCCCCC"> really</font>

290
00:12:27,130 --> 00:12:31,060
straightforward functions<font color="#CCCCCC"> they're very</font>

291
00:12:29,139 --> 00:12:32,680
nice<font color="#E5E5E5"> and that that's just a</font><font color="#CCCCCC"> quadratic</font>

292
00:12:31,060 --> 00:12:33,849
and<font color="#CCCCCC"> you have the quadratic formula</font><font color="#E5E5E5"> which</font>

293
00:12:32,680 --> 00:12:36,279
has<font color="#CCCCCC"> a discriminant that's easily</font>

294
00:12:33,850 --> 00:12:39,100
evaluatable<font color="#E5E5E5"> to tell you whether or</font><font color="#CCCCCC"> not</font>

295
00:12:36,279 --> 00:12:43,569
you have<font color="#E5E5E5"> the roots that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> want in that</font>

296
00:12:39,100 --> 00:12:46,000
<font color="#CCCCCC">equation but</font><font color="#E5E5E5"> you have infinite jerk if</font>

297
00:12:43,569 --> 00:12:48,130
your<font color="#E5E5E5"> servo time is</font><font color="#CCCCCC"> infinitely small</font><font color="#E5E5E5"> at</font>

298
00:12:46,000 --> 00:12:49,149
those acceleration transitions<font color="#E5E5E5"> so that</font>

299
00:12:48,130 --> 00:12:51,970
is<font color="#E5E5E5"> something that you do have to be</font>

300
00:12:49,149 --> 00:12:53,649
<font color="#CCCCCC">aware of</font><font color="#E5E5E5"> and how your mechanism is going</font>

301
00:12:51,970 --> 00:12:57,579
to handle<font color="#E5E5E5"> that and and how the system</font><font color="#CCCCCC"> is</font>

302
00:12:53,649 --> 00:12:59,139
<font color="#E5E5E5">going to behave</font><font color="#CCCCCC"> when it comes</font><font color="#E5E5E5"> time to</font>

303
00:12:57,579 --> 00:13:02,199
actually<font color="#E5E5E5"> rounding the corners again</font>

304
00:12:59,139 --> 00:13:03,610
<font color="#CCCCCC">there's lots of ways to</font><font color="#E5E5E5"> do this you</font>

305
00:13:02,199 --> 00:13:06,310
could come to a short corner<font color="#CCCCCC"> come to a</font>

306
00:13:03,610 --> 00:13:07,870
<font color="#CCCCCC">stop you could</font><font color="#E5E5E5"> implement a circular arc</font>

307
00:13:06,310 --> 00:13:10,268
you could do a<font color="#E5E5E5"> spline and a track</font>

308
00:13:07,870 --> 00:13:12,220
transition curve<font color="#E5E5E5"> you can do</font><font color="#CCCCCC"> in order to</font>

309
00:13:10,269 --> 00:13:14,319
<font color="#CCCCCC">brake overs there's low-pass filtering</font>

310
00:13:12,220 --> 00:13:17,319
<font color="#E5E5E5">methods</font><font color="#CCCCCC"> all sorts of stuff</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> that in</font>

311
00:13:14,319 --> 00:13:19,930
the case<font color="#E5E5E5"> of the mod</font><font color="#CCCCCC"> T</font><font color="#E5E5E5"> we put in a few</font>

312
00:13:17,319 --> 00:13:21,260
simplifications<font color="#CCCCCC"> the first of which is</font>

313
00:13:19,930 --> 00:13:22,819
that<font color="#E5E5E5"> we said when we go into a</font>

314
00:13:21,260 --> 00:13:24,410
we're going to enter<font color="#E5E5E5"> that corner at the</font>

315
00:13:22,820 --> 00:13:26,480
same<font color="#E5E5E5"> speed as we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> exit the</font>

316
00:13:24,410 --> 00:13:28,339
corner<font color="#E5E5E5"> we're not necessarily going to</font>

317
00:13:26,480 --> 00:13:31,430
hold the same speed through the<font color="#CCCCCC"> corner</font>

318
00:13:28,340 --> 00:13:32,990
<font color="#E5E5E5">but</font><font color="#CCCCCC"> are a long path a long path velocity</font>

319
00:13:31,430 --> 00:13:35,660
coming<font color="#E5E5E5"> in will be the same as it is</font>

320
00:13:32,990 --> 00:13:38,030
<font color="#CCCCCC">going</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> and that greatly simplifies</font>

321
00:13:35,660 --> 00:13:40,550
how you look ahead in the buffer<font color="#E5E5E5"> and</font>

322
00:13:38,030 --> 00:13:41,870
figure<font color="#CCCCCC"> out what you're</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> look</font><font color="#E5E5E5"> ahead</font>

323
00:13:40,550 --> 00:13:46,189
processing needs<font color="#E5E5E5"> to look like which</font>

324
00:13:41,870 --> 00:13:47,450
<font color="#E5E5E5">we'll come to</font><font color="#CCCCCC"> in a second we also said</font>

325
00:13:46,190 --> 00:13:49,940
<font color="#CCCCCC">that we're going</font><font color="#E5E5E5"> to have a constant per</font>

326
00:13:47,450 --> 00:13:51,920
<font color="#CCCCCC">r6 acceleration</font><font color="#E5E5E5"> so there'll be step</font>

327
00:13:49,940 --> 00:13:54,200
functions in the acceleration but you

328
00:13:51,920 --> 00:13:56,479
<font color="#E5E5E5">either have that acceleration or some</font>

329
00:13:54,200 --> 00:13:58,940
other computed acceleration<font color="#E5E5E5"> for any</font>

330
00:13:56,480 --> 00:14:02,870
<font color="#E5E5E5">given sub segment of the system</font>

331
00:13:58,940 --> 00:14:03,950
we don't have a continuous<font color="#E5E5E5"> function of</font>

332
00:14:02,870 --> 00:14:07,010
<font color="#CCCCCC">acceleration</font><font color="#E5E5E5"> that we're trying to</font>

333
00:14:03,950 --> 00:14:09,050
<font color="#E5E5E5">evaluate we're going to ignore what the</font>

334
00:14:07,010 --> 00:14:10,460
<font color="#E5E5E5">actual path shape is as it goes through</font>

335
00:14:09,050 --> 00:14:12,170
<font color="#CCCCCC">the corner we know it's going to</font><font color="#E5E5E5"> be</font>

336
00:14:10,460 --> 00:14:14,510
bounded<font color="#CCCCCC"> by a</font><font color="#E5E5E5"> circular arc through the</font>

337
00:14:12,170 --> 00:14:16,880
<font color="#E5E5E5">endpoints and the sharp corner but we're</font>

338
00:14:14,510 --> 00:14:19,910
going<font color="#E5E5E5"> to ignore where it</font><font color="#CCCCCC"> actually is and</font>

339
00:14:16,880 --> 00:14:21,470
we're going to calculate the geometry

340
00:14:19,910 --> 00:14:23,959
the endpoints<font color="#E5E5E5"> the fee and row in this</font>

341
00:14:21,470 --> 00:14:27,200
chart before<font color="#E5E5E5"> we do the reverse pass</font><font color="#CCCCCC"> in</font>

342
00:14:23,960 --> 00:14:29,540
velocity and we're going to corner in

343
00:14:27,200 --> 00:14:31,310
the plane<font color="#CCCCCC"> of fee Q and Rho</font><font color="#E5E5E5"> the three</font>

344
00:14:29,540 --> 00:14:33,170
points<font color="#E5E5E5"> of the start and end of the</font>

345
00:14:31,310 --> 00:14:34,280
<font color="#E5E5E5">corner and the actual corner so if</font>

346
00:14:33,170 --> 00:14:35,810
you're doing<font color="#E5E5E5"> this</font><font color="#CCCCCC"> in three dimensions</font>

347
00:14:34,280 --> 00:14:40,670
<font color="#E5E5E5">you need to know what plane you're</font>

348
00:14:35,810 --> 00:14:42,770
operating in once you know the<font color="#E5E5E5"> per</font><font color="#CCCCCC"> xyx</font>

349
00:14:40,670 --> 00:14:44,120
acceleration and velocity<font color="#E5E5E5"> the servo</font>

350
00:14:42,770 --> 00:14:47,030
level target positions are trivial

351
00:14:44,120 --> 00:14:49,760
<font color="#E5E5E5">because we're using those really simple</font>

352
00:14:47,030 --> 00:14:53,360
formulas for acceleration<font color="#CCCCCC"> velocity and</font>

353
00:14:49,760 --> 00:14:56,060
distance<font color="#CCCCCC"> a little more detail on</font><font color="#E5E5E5"> how</font><font color="#CCCCCC"> to</font>

354
00:14:53,360 --> 00:14:58,550
<font color="#CCCCCC">actually do this we set a limit this is</font>

355
00:14:56,060 --> 00:15:01,250
the the limit that's drawn in blue here

356
00:14:58,550 --> 00:15:04,400
of the maximum path error<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you were to</font>

357
00:15:01,250 --> 00:15:06,440
use a circular<font color="#CCCCCC"> arc we calculate</font><font color="#E5E5E5"> what</font>

358
00:15:04,400 --> 00:15:09,230
<font color="#E5E5E5">those endpoints look like the</font><font color="#CCCCCC"> screw up</font>

359
00:15:06,440 --> 00:15:15,620
characters there<font color="#CCCCCC"> are our vectors for the</font>

360
00:15:09,230 --> 00:15:18,770
<font color="#E5E5E5">input and output directions that gives</font>

361
00:15:15,620 --> 00:15:20,210
you<font color="#E5E5E5"> the per axis accelerations you can</font>

362
00:15:18,770 --> 00:15:22,490
then inspect<font color="#E5E5E5"> that against the</font>

363
00:15:20,210 --> 00:15:25,220
acceleration limits<font color="#CCCCCC"> with your</font>

364
00:15:22,490 --> 00:15:27,020
constraints<font color="#CCCCCC"> from the</font><font color="#E5E5E5"> velocity your</font>

365
00:15:25,220 --> 00:15:31,210
<font color="#E5E5E5">volley will also have other limits in</font>

366
00:15:27,020 --> 00:15:31,210
the system<font color="#E5E5E5"> from linear acceleration and</font>

367
00:15:31,389 --> 00:15:34,959
long path velocity limits you don't want

368
00:15:33,489 --> 00:15:36,429
to go faster than<font color="#CCCCCC"> say eighty millimeters</font>

369
00:15:34,959 --> 00:15:40,299
per second or<font color="#E5E5E5"> something like that</font><font color="#CCCCCC"> for</font>

370
00:15:36,429 --> 00:15:41,860
<font color="#CCCCCC">your extruder and once you know those</font>

371
00:15:40,299 --> 00:15:44,199
pieces of information<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have a</font><font color="#E5E5E5"> fairly</font>

372
00:15:41,860 --> 00:15:47,079
straightforward<font color="#CCCCCC"> set of equations to</font>

373
00:15:44,199 --> 00:15:49,689
solve<font color="#CCCCCC"> for each axis</font><font color="#E5E5E5"> again they're</font>

374
00:15:47,079 --> 00:15:53,319
<font color="#CCCCCC">they're quadratic in nature and</font><font color="#E5E5E5"> you know</font>

375
00:15:49,689 --> 00:15:58,089
what your path looks like<font color="#E5E5E5"> one issue with</font>

376
00:15:53,319 --> 00:16:00,099
this algorithm<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that the velocity can</font>

377
00:15:58,089 --> 00:16:02,230
<font color="#CCCCCC">be overly limited if you have a really</font>

378
00:16:00,100 --> 00:16:03,759
<font color="#CCCCCC">short segment we're going</font><font color="#E5E5E5"> to force that</font>

379
00:16:02,230 --> 00:16:06,790
<font color="#E5E5E5">corner to be less than half of the</font>

380
00:16:03,759 --> 00:16:09,790
minimum segment length<font color="#CCCCCC"> when that segment</font>

381
00:16:06,790 --> 00:16:11,230
<font color="#E5E5E5">length gets really small often slicers</font>

382
00:16:09,790 --> 00:16:14,230
will generate something<font color="#E5E5E5"> like a 10 micron</font>

383
00:16:11,230 --> 00:16:16,029
move<font color="#CCCCCC"> that can throttle</font><font color="#E5E5E5"> the velocity down</font>

384
00:16:14,230 --> 00:16:20,679
<font color="#E5E5E5">even if there isn't a big angle change</font>

385
00:16:16,029 --> 00:16:22,689
that you'd like<font color="#E5E5E5"> to blow through one</font><font color="#CCCCCC"> of</font>

386
00:16:20,679 --> 00:16:25,179
the results<font color="#CCCCCC"> looked like so</font><font color="#E5E5E5"> here we have</font>

387
00:16:22,689 --> 00:16:27,998
<font color="#CCCCCC">a</font><font color="#E5E5E5"> acute and obtuse corner you can see</font>

388
00:16:25,179 --> 00:16:30,449
<font color="#E5E5E5">that with each servo cycle we're slowing</font>

389
00:16:27,999 --> 00:16:32,619
down<font color="#E5E5E5"> as we come into the</font><font color="#CCCCCC"> corner</font><font color="#E5E5E5"> the</font>

390
00:16:30,449 --> 00:16:34,628
velocity along<font color="#E5E5E5"> the corner stays</font>

391
00:16:32,619 --> 00:16:36,279
relatively<font color="#CCCCCC"> constant and then we</font>

392
00:16:34,629 --> 00:16:38,529
accelerate coming back out<font color="#CCCCCC"> of</font><font color="#E5E5E5"> that</font>

393
00:16:36,279 --> 00:16:43,079
corner<font color="#E5E5E5"> you can see we're bounded here by</font>

394
00:16:38,529 --> 00:16:43,079
the circular arcs that<font color="#CCCCCC"> are shown in</font><font color="#E5E5E5"> pink</font>

395
00:16:43,529 --> 00:16:47,829
<font color="#CCCCCC">the future</font><font color="#E5E5E5"> stop problem is actually</font>

396
00:16:46,600 --> 00:16:50,649
<font color="#E5E5E5">fairly straightforward</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> solve</font>

397
00:16:47,829 --> 00:16:52,149
<font color="#E5E5E5">conceptually you buffer n segments ahead</font>

398
00:16:50,649 --> 00:16:54,970
whether that's<font color="#CCCCCC"> five segments three</font>

399
00:16:52,149 --> 00:16:57,009
segments or<font color="#CCCCCC"> sixteen segments you do I</font>

400
00:16:54,970 --> 00:16:59,379
treat<font color="#CCCCCC"> that buffer as the end</font><font color="#E5E5E5"> of your</font>

401
00:16:57,009 --> 00:17:02,019
<font color="#E5E5E5">path so you're going to pretend that the</font>

402
00:16:59,379 --> 00:17:04,750
<font color="#CCCCCC">velocity has to</font><font color="#E5E5E5"> come to zero you reverse</font>

403
00:17:02,019 --> 00:17:07,120
plan<font color="#E5E5E5"> to find out what the maximum</font><font color="#CCCCCC"> speed</font>

404
00:17:04,750 --> 00:17:08,559
<font color="#CCCCCC">you can reach is and then you release</font>

405
00:17:07,119 --> 00:17:11,518
<font color="#CCCCCC">the</font><font color="#E5E5E5"> first segment making sure that</font>

406
00:17:08,559 --> 00:17:14,369
you're not<font color="#E5E5E5"> going faster</font><font color="#CCCCCC"> than that limit</font>

407
00:17:11,519 --> 00:17:17,138
you add the next<font color="#CCCCCC"> segment and</font><font color="#E5E5E5"> you loop it</font>

408
00:17:14,369 --> 00:17:18,579
<font color="#CCCCCC">seems</font><font color="#E5E5E5"> really simple but</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> actually</font>

409
00:17:17,138 --> 00:17:20,260
chances are it's going<font color="#E5E5E5"> to give you a</font>

410
00:17:18,579 --> 00:17:22,089
significant increase<font color="#E5E5E5"> in the complexity</font>

411
00:17:20,260 --> 00:17:23,949
<font color="#CCCCCC">of your firmware</font><font color="#E5E5E5"> particularly when you</font>

412
00:17:22,089 --> 00:17:25,599
<font color="#CCCCCC">think about how are</font><font color="#E5E5E5"> you going</font><font color="#CCCCCC"> to pause</font>

413
00:17:23,949 --> 00:17:27,459
and resume this because now you've<font color="#CCCCCC"> got a</font>

414
00:17:25,599 --> 00:17:30,010
buffer<font color="#E5E5E5"> that you're</font><font color="#CCCCCC"> iterating through and</font>

415
00:17:27,459 --> 00:17:31,929
rolling around in and you need to be

416
00:17:30,010 --> 00:17:34,809
<font color="#CCCCCC">able to do</font><font color="#E5E5E5"> this simultaneously</font><font color="#CCCCCC"> with the</font>

417
00:17:31,929 --> 00:17:36,789
servo computations which<font color="#CCCCCC"> also</font><font color="#E5E5E5"> means that</font>

418
00:17:34,809 --> 00:17:38,970
<font color="#E5E5E5">you need to have a quick calculation for</font>

419
00:17:36,789 --> 00:17:41,260
your maximum<font color="#E5E5E5"> segment exit speed</font>

420
00:17:38,970 --> 00:17:43,840
particularly if you use a large<font color="#CCCCCC"> buffer</font>

421
00:17:41,260 --> 00:17:44,629
we use a<font color="#CCCCCC"> 15-second</font><font color="#E5E5E5"> buffer for example</font>

422
00:17:43,840 --> 00:17:49,340
and it's it

423
00:17:44,630 --> 00:17:51,110
seems to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> plenty deep we use our</font>

424
00:17:49,340 --> 00:17:52,699
feedback<font color="#E5E5E5"> in our system we have those</font>

425
00:17:51,110 --> 00:17:54,139
encoders on the motors there's a variety

426
00:17:52,700 --> 00:17:55,610
<font color="#E5E5E5">of</font><font color="#CCCCCC"> different methods to do</font><font color="#E5E5E5"> that there</font>

427
00:17:54,140 --> 00:17:58,160
are<font color="#CCCCCC"> open-loop control methods which are</font>

428
00:17:55,610 --> 00:17:59,719
<font color="#E5E5E5">much simpler you can do bang bang and</font>

429
00:17:58,160 --> 00:18:03,020
deadband control which is<font color="#E5E5E5"> what your</font>

430
00:17:59,720 --> 00:18:04,940
thermostat does at home you can do

431
00:18:03,020 --> 00:18:07,280
proportional control<font color="#E5E5E5"> and that can be</font>

432
00:18:04,940 --> 00:18:09,500
<font color="#CCCCCC">based on position or velocity</font><font color="#E5E5E5"> targets or</font>

433
00:18:07,280 --> 00:18:11,480
some other parameter you<font color="#E5E5E5"> can do a</font>

434
00:18:09,500 --> 00:18:13,040
proportional integral control when you

435
00:18:11,480 --> 00:18:14,600
do that you need<font color="#E5E5E5"> to watch out</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> what</font>

436
00:18:13,040 --> 00:18:15,980
happens when you have a step change or

437
00:18:14,600 --> 00:18:20,330
when you're going<font color="#E5E5E5"> to reset your integral</font>

438
00:18:15,980 --> 00:18:23,020
buffer you<font color="#E5E5E5"> can do PID control watch out</font>

439
00:18:20,330 --> 00:18:25,490
for<font color="#CCCCCC"> silver</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> eight and velocity</font>

440
00:18:23,020 --> 00:18:27,980
resolution issues<font color="#CCCCCC"> that may</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> available</font>

441
00:18:25,490 --> 00:18:29,900
<font color="#CCCCCC">to</font><font color="#E5E5E5"> you we perform our</font><font color="#CCCCCC"> server loops at a</font>

442
00:18:27,980 --> 00:18:32,240
substantially lower rate than<font color="#E5E5E5"> many</font>

443
00:18:29,900 --> 00:18:35,120
mechanical systems out there<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we</font>

444
00:18:32,240 --> 00:18:37,970
have a<font color="#E5E5E5"> better velocity resolution in our</font>

445
00:18:35,120 --> 00:18:39,649
PID<font color="#E5E5E5"> control you can add in</font><font color="#CCCCCC"> some</font>

446
00:18:37,970 --> 00:18:41,300
<font color="#E5E5E5">feed-forward terms these could be a very</font>

447
00:18:39,650 --> 00:18:44,020
complicated system model of the system

448
00:18:41,300 --> 00:18:46,970
<font color="#CCCCCC">or</font><font color="#E5E5E5"> simply adding in some terms that are</font>

449
00:18:44,020 --> 00:18:49,879
coefficients<font color="#E5E5E5"> on your target</font><font color="#CCCCCC"> velocity or</font>

450
00:18:46,970 --> 00:18:52,630
your<font color="#E5E5E5"> target</font><font color="#CCCCCC"> acceleration you can</font><font color="#E5E5E5"> also</font>

451
00:18:49,880 --> 00:18:55,190
implement<font color="#E5E5E5"> adaptive methods where you're</font>

452
00:18:52,630 --> 00:18:57,080
informing the changing the<font color="#CCCCCC"> gainsay of</font>

453
00:18:55,190 --> 00:18:59,720
your PID parameters based on<font color="#E5E5E5"> the</font>

454
00:18:57,080 --> 00:19:02,659
performance of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> system</font><font color="#E5E5E5"> in the case of</font>

455
00:18:59,720 --> 00:19:04,400
the mod T we do PID you with a few<font color="#CCCCCC"> feed</font>

456
00:19:02,660 --> 00:19:07,250
<font color="#E5E5E5">with forward terms on acceleration and</font>

457
00:19:04,400 --> 00:19:09,050
velocity in the X<font color="#E5E5E5"> and y axis</font><font color="#CCCCCC"> and again</font>

458
00:19:07,250 --> 00:19:10,700
you<font color="#E5E5E5"> want to keep it simple here start</font>

459
00:19:09,050 --> 00:19:13,370
with something<font color="#E5E5E5"> that's really simple work</font>

460
00:19:10,700 --> 00:19:14,720
through progressive<font color="#E5E5E5"> stages and when you</font>

461
00:19:13,370 --> 00:19:16,760
get<font color="#E5E5E5"> something that works you may just</font>

462
00:19:14,720 --> 00:19:17,960
want<font color="#CCCCCC"> to sit there</font><font color="#E5E5E5"> and optimize</font><font color="#CCCCCC"> it rather</font>

463
00:19:16,760 --> 00:19:22,640
than<font color="#E5E5E5"> getting</font><font color="#CCCCCC"> into something</font><font color="#E5E5E5"> really</font>

464
00:19:17,960 --> 00:19:25,340
complicated<font color="#CCCCCC"> or academic with feedback</font>

465
00:19:22,640 --> 00:19:27,080
you<font color="#E5E5E5"> can use that for Turk utilization in</font>

466
00:19:25,340 --> 00:19:30,439
a<font color="#CCCCCC"> closed-loop system you generally</font><font color="#E5E5E5"> need</font>

467
00:19:27,080 --> 00:19:33,139
less<font color="#E5E5E5"> margin in terms of the force that's</font>

468
00:19:30,440 --> 00:19:35,300
available<font color="#E5E5E5"> on the motors and how you're</font>

469
00:19:33,140 --> 00:19:36,680
<font color="#E5E5E5">using it because</font><font color="#CCCCCC"> you can recover</font><font color="#E5E5E5"> you can</font>

470
00:19:35,300 --> 00:19:39,290
use<font color="#CCCCCC"> it for stall detection and motor</font>

471
00:19:36,680 --> 00:19:42,710
<font color="#CCCCCC">protection unit test bump</font><font color="#E5E5E5"> and drag</font>

472
00:19:39,290 --> 00:19:45,950
homing in the case of the mod<font color="#CCCCCC"> T we sense</font>

473
00:19:42,710 --> 00:19:48,800
<font color="#E5E5E5">stall in the</font><font color="#CCCCCC"> X and y-axis on our build</font>

474
00:19:45,950 --> 00:19:50,710
<font color="#CCCCCC">tray and we sense the transverse drag in</font>

475
00:19:48,800 --> 00:19:54,110
the<font color="#E5E5E5"> z-axis</font><font color="#CCCCCC"> to home the z-axis</font>

476
00:19:50,710 --> 00:19:56,830
automatically because we can do that we

477
00:19:54,110 --> 00:19:59,649
<font color="#E5E5E5">don't need to dial in those parameters</font>

478
00:19:56,830 --> 00:20:01,960
fully automatic<font color="#CCCCCC"> and it allows us</font><font color="#E5E5E5"> to</font>

479
00:19:59,649 --> 00:20:05,889
reduce<font color="#E5E5E5"> our part count</font><font color="#CCCCCC"> we don't have any</font>

480
00:20:01,960 --> 00:20:07,210
limits which is in the system so what

481
00:20:05,890 --> 00:20:09,640
<font color="#E5E5E5">does this actually look</font><font color="#CCCCCC"> like here's a</font>

482
00:20:07,210 --> 00:20:12,279
simple star<font color="#E5E5E5"> the path is drawn in black</font>

483
00:20:09,640 --> 00:20:14,440
the execution is shown in blue because

484
00:20:12,279 --> 00:20:16,840
<font color="#CCCCCC">we have sort of a feedback we can</font><font color="#E5E5E5"> plot</font>

485
00:20:14,440 --> 00:20:19,140
those servo traces<font color="#E5E5E5"> if we zoom in on a</font>

486
00:20:16,840 --> 00:20:21,908
corner<font color="#E5E5E5"> again</font><font color="#CCCCCC"> you can see</font><font color="#E5E5E5"> this nice</font>

487
00:20:19,140 --> 00:20:23,320
smooth<font color="#E5E5E5"> arc that's that's performed there</font>

488
00:20:21,909 --> 00:20:26,049
and you can see how well we follow that

489
00:20:23,320 --> 00:20:28,330
the tick marks here<font color="#CCCCCC"> are tenth of a</font>

490
00:20:26,049 --> 00:20:30,789
millimeter<font color="#E5E5E5"> tick marks</font><font color="#CCCCCC"> so we're actually</font>

491
00:20:28,330 --> 00:20:33,039
following<font color="#E5E5E5"> quite well however this is</font>

492
00:20:30,789 --> 00:20:36,220
being<font color="#E5E5E5"> taken at the encoder position not</font>

493
00:20:33,039 --> 00:20:38,320
the<font color="#E5E5E5"> actual tray position if you look at</font>

494
00:20:36,220 --> 00:20:39,940
a simple circle<font color="#E5E5E5"> this is just the start</font>

495
00:20:38,320 --> 00:20:42,879
and fold over<font color="#CCCCCC"> on that very similar</font>

496
00:20:39,940 --> 00:20:46,149
<font color="#E5E5E5">situation I like to look at things like</font>

497
00:20:42,880 --> 00:20:48,010
a what I call<font color="#CCCCCC"> a bowtie path and when i</font>

498
00:20:46,149 --> 00:20:49,928
<font color="#CCCCCC">zoom in on that</font><font color="#E5E5E5"> it really helps you</font>

499
00:20:48,010 --> 00:20:51,850
identify<font color="#E5E5E5"> when you've got a problem</font><font color="#CCCCCC"> in</font>

500
00:20:49,929 --> 00:20:55,169
your<font color="#E5E5E5"> path planner you can see all</font><font color="#CCCCCC"> sorts</font>

501
00:20:51,850 --> 00:20:58,120
of strangeness<font color="#E5E5E5"> going on in that path</font>

502
00:20:55,169 --> 00:20:59,649
<font color="#E5E5E5">then back out you can see in the</font><font color="#CCCCCC"> servo</font>

503
00:20:58,120 --> 00:21:01,539
plot on this you can<font color="#CCCCCC"> see we've got some</font>

504
00:20:59,649 --> 00:21:03,908
resonance<font color="#E5E5E5"> as we come into the</font><font color="#CCCCCC"> centre and</font>

505
00:21:01,539 --> 00:21:07,629
<font color="#E5E5E5">then it drops off as we actually execute</font>

506
00:21:03,909 --> 00:21:10,750
the<font color="#CCCCCC"> centre this is just a random</font><font color="#E5E5E5"> path in</font>

507
00:21:07,630 --> 00:21:12,460
space<font color="#E5E5E5"> if we look at the positions as a</font>

508
00:21:10,750 --> 00:21:14,500
function<font color="#E5E5E5"> of time we have fairly smooth</font>

509
00:21:12,460 --> 00:21:17,320
curves there if we look at the velocity

510
00:21:14,500 --> 00:21:19,809
<font color="#E5E5E5">plots in this case you can see we have</font>

511
00:21:17,320 --> 00:21:21,549
it's basically all lined and<font color="#E5E5E5"> it should</font>

512
00:21:19,809 --> 00:21:23,110
be<font color="#E5E5E5"> because we're using constant</font>

513
00:21:21,549 --> 00:21:25,360
<font color="#E5E5E5">acceleration which gives us these</font>

514
00:21:23,110 --> 00:21:28,090
trapezoidal or linear velocity profiles

515
00:21:25,360 --> 00:21:30,399
<font color="#E5E5E5">they're capped at our maximum velocity</font>

516
00:21:28,090 --> 00:21:32,949
the<font color="#E5E5E5"> combined velocities in red there you</font>

517
00:21:30,399 --> 00:21:34,510
see<font color="#CCCCCC"> little dips occasionally for</font>

518
00:21:32,950 --> 00:21:36,159
instance in the top<font color="#CCCCCC"> centre that's</font>

519
00:21:34,510 --> 00:21:37,779
actually when we're going<font color="#CCCCCC"> through a</font>

520
00:21:36,159 --> 00:21:39,730
corner I said that the entry exit

521
00:21:37,779 --> 00:21:42,490
velocity are the same but the along path

522
00:21:39,730 --> 00:21:45,580
velocity through<font color="#E5E5E5"> that corner actually</font>

523
00:21:42,490 --> 00:21:48,669
dips a<font color="#CCCCCC"> little bit you can then plot the</font>

524
00:21:45,580 --> 00:21:49,720
acceleration in<font color="#E5E5E5"> this case we have a 500</font>

525
00:21:48,669 --> 00:21:52,690
<font color="#CCCCCC">millimeter per second squared</font>

526
00:21:49,720 --> 00:21:54,789
acceleration cap and you can see how

527
00:21:52,690 --> 00:21:56,830
that's implemented<font color="#E5E5E5"> there are six spots</font>

528
00:21:54,789 --> 00:21:57,940
there where we exceed<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and that's</font>

529
00:21:56,830 --> 00:22:00,399
where we're playing a little<font color="#CCCCCC"> bit of</font>

530
00:21:57,940 --> 00:22:05,049
dirty math to deal with handling of

531
00:22:00,399 --> 00:22:06,610
small segments and<font color="#E5E5E5"> then we can go</font><font color="#CCCCCC"> back</font>

532
00:22:05,049 --> 00:22:08,770
put<font color="#CCCCCC"> those sort of a traces on</font><font color="#E5E5E5"> the path</font>

533
00:22:06,610 --> 00:22:10,479
and<font color="#E5E5E5"> actually look at the error as a</font>

534
00:22:08,770 --> 00:22:13,180
function<font color="#CCCCCC"> of time</font>

535
00:22:10,480 --> 00:22:15,370
the tick marks here are<font color="#E5E5E5"> 50 microns apart</font>

536
00:22:13,180 --> 00:22:17,260
it's about half a hair apart<font color="#E5E5E5"> the total</font>

537
00:22:15,370 --> 00:22:22,629
size is<font color="#CCCCCC"> the size</font><font color="#E5E5E5"> of the nozzle diameter</font>

538
00:22:17,260 --> 00:22:23,790
so<font color="#CCCCCC"> tracks fairly well so we've talked</font>

539
00:22:22,630 --> 00:22:27,580
<font color="#CCCCCC">about how to get from alpha to Omega</font>

540
00:22:23,790 --> 00:22:30,190
<font color="#E5E5E5">with the mod T we do this with the high</font>

541
00:22:27,580 --> 00:22:32,949
<font color="#CCCCCC">resolution encoder that's 334 lines</font>

542
00:22:30,190 --> 00:22:36,670
going<font color="#E5E5E5"> around we do that was a</font><font color="#CCCCCC"> little bit</font>

543
00:22:32,950 --> 00:22:38,830
of math and<font color="#CCCCCC"> Thank You hackaday for</font>

544
00:22:36,670 --> 00:22:41,340
having me to come and enjoy your time at

545
00:22:38,830 --> 00:22:41,340
<font color="#E5E5E5">Supercross</font>

546
00:22:45,380 --> 00:22:52,220
[Music]

547
00:22:54,350 --> 00:22:57,399
[Music]

548
00:23:27,490 --> 00:23:30,650
[Music]

549
00:23:37,730 --> 00:23:59,059
[Music]

550
00:24:05,520 --> 00:24:08,609
[Music]

551
00:24:14,140 --> 00:24:17,219
[Music]

552
00:24:20,840 --> 00:24:28,759
[Music]

553
00:24:44,180 --> 00:25:18,500
[Music]

