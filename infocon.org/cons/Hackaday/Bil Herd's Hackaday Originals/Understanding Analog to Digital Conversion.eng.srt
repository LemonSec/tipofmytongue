1
00:00:02,210 --> 00:00:04,890
they'll heard from hackaday today we're

2
00:00:04,890 --> 00:00:06,779
going to be talking about analog to

3
00:00:06,779 --> 00:00:09,710
digital converters let's get started

4
00:00:09,710 --> 00:00:12,389
analog to digital conversion as the name

5
00:00:12,389 --> 00:00:14,429
sounds we're we're converting an analog

6
00:00:14,429 --> 00:00:17,130
signal to digital to something the

7
00:00:17,130 --> 00:00:19,350
processor can read and understand and

8
00:00:19,350 --> 00:00:21,990
manipulate it's all it is all about

9
00:00:21,990 --> 00:00:24,510
sensing the environment it's about you

10
00:00:24,510 --> 00:00:26,430
know is it time to shut the chicken-coop

11
00:00:26,430 --> 00:00:28,320
doors because it's raining what's the

12
00:00:28,320 --> 00:00:30,869
voltage what's the temperature and these

13
00:00:30,869 --> 00:00:32,790
days with the the prevalence of all

14
00:00:32,790 --> 00:00:35,489
these microcontrollers they're just made

15
00:00:35,489 --> 00:00:38,910
for analog to digital conversion a DC we

16
00:00:38,910 --> 00:00:41,129
call it we don't bring out all of the

17
00:00:41,129 --> 00:00:43,200
signals that used to be part of a

18
00:00:43,200 --> 00:00:45,360
microprocessor the data lines the

19
00:00:45,360 --> 00:00:47,430
address lines we don't have to there's

20
00:00:47,430 --> 00:00:49,140
enough internal memory to run your

21
00:00:49,140 --> 00:00:51,030
program so that leaves the pins

22
00:00:51,030 --> 00:00:53,670
available for a DC's or just general

23
00:00:53,670 --> 00:00:56,489
purpose i/o lines so we're going to talk

24
00:00:56,489 --> 00:00:59,250
more about the different kinds of analog

25
00:00:59,250 --> 00:01:01,050
to digital converters I can't get to

26
00:01:01,050 --> 00:01:02,370
them all there is a bunch but we're

27
00:01:02,370 --> 00:01:03,930
gonna talk about the three main kinds

28
00:01:03,930 --> 00:01:07,110
and they're they're trade-offs which are

29
00:01:07,110 --> 00:01:09,930
basically resolution how many bits - how

30
00:01:09,930 --> 00:01:12,750
much do you know about that thing you're

31
00:01:12,750 --> 00:01:14,939
trying to measure the speed of what you

32
00:01:14,939 --> 00:01:17,040
do it are we doing it like my fluke

33
00:01:17,040 --> 00:01:19,320
meter here four times a second or are we

34
00:01:19,320 --> 00:01:21,689
doing it at radar speeds or video speeds

35
00:01:21,689 --> 00:01:24,420
and then the cost you can going fast or

36
00:01:24,420 --> 00:01:26,549
going deep you know going fast or going

37
00:01:26,549 --> 00:01:29,100
big and resolution comes with costs

38
00:01:29,100 --> 00:01:31,049
associated with it and complexity but

39
00:01:31,049 --> 00:01:33,420
it's mostly about cost here's a handy

40
00:01:33,420 --> 00:01:35,579
little chart showing the four most

41
00:01:35,579 --> 00:01:39,030
prevalent ADC architectures one being

42
00:01:39,030 --> 00:01:41,070
dual slope this is where a capacitor is

43
00:01:41,070 --> 00:01:42,990
involved and there's integration going

44
00:01:42,990 --> 00:01:45,329
on and you'll see that in digital

45
00:01:45,329 --> 00:01:47,450
instrumentation your fluke meter etc

46
00:01:47,450 --> 00:01:49,350
sigma-delta which we're not going to

47
00:01:49,350 --> 00:01:51,390
talk about today it's it's a half

48
00:01:51,390 --> 00:01:54,000
digital half analog technique and I

49
00:01:54,000 --> 00:01:56,250
could do an entire video just on it I

50
00:01:56,250 --> 00:01:59,460
think successive approximation you'll

51
00:01:59,460 --> 00:02:01,530
find this a lot of times in your little

52
00:02:01,530 --> 00:02:04,860
controllers and whatnot it's cheap and

53
00:02:04,860 --> 00:02:06,420
it's kind of right in the middle here

54
00:02:06,420 --> 00:02:08,098
where we've got a resolution and our

55
00:02:08,098 --> 00:02:11,400
throughput and then flash which sounds

56
00:02:11,400 --> 00:02:13,110
fast well look where it is it's up in

57
00:02:13,110 --> 00:02:13,500
the high

58
00:02:13,500 --> 00:02:16,680
throughput speeds but it's limited in

59
00:02:16,680 --> 00:02:19,800
resolution and so let me show you more

60
00:02:19,800 --> 00:02:21,060
about flash

61
00:02:21,060 --> 00:02:24,270
here's a simple diagram of what's in a

62
00:02:24,270 --> 00:02:27,030
flash converter and it's a string of

63
00:02:27,030 --> 00:02:29,580
comparators I'm only showing three here

64
00:02:29,580 --> 00:02:32,490
but for eight bits of binary there would

65
00:02:32,490 --> 00:02:35,459
be 256 of these and the way the

66
00:02:35,459 --> 00:02:37,950
resistors are stacked together each

67
00:02:37,950 --> 00:02:40,260
comparator is looking for a voltage or

68
00:02:40,260 --> 00:02:42,480
will activate on a voltage slightly

69
00:02:42,480 --> 00:02:45,570
higher than the one above it now when we

70
00:02:45,570 --> 00:02:47,610
do ADC you know even though the world is

71
00:02:47,610 --> 00:02:50,670
full of magnetism and and and light and

72
00:02:50,670 --> 00:02:53,760
those kind of things at typically we end

73
00:02:53,760 --> 00:02:55,560
up converting that to a voltage so I'm

74
00:02:55,560 --> 00:02:57,209
gonna be talking mostly about voltage

75
00:02:57,209 --> 00:02:58,980
here today so here's a voltage that

76
00:02:58,980 --> 00:03:01,110
comes in and goes to the every

77
00:03:01,110 --> 00:03:03,660
comparator and then the other terminal

78
00:03:03,660 --> 00:03:05,640
on each comparator sees a slightly

79
00:03:05,640 --> 00:03:07,800
greater voltage this happens pretty much

80
00:03:07,800 --> 00:03:09,660
all at once then when this voltage comes

81
00:03:09,660 --> 00:03:12,000
in these comparators will all make a

82
00:03:12,000 --> 00:03:14,610
decision about the same time hence flash

83
00:03:14,610 --> 00:03:17,790
so the only time constraint is the time

84
00:03:17,790 --> 00:03:19,769
it takes from for it to get from the

85
00:03:19,769 --> 00:03:23,400
input through to the output now we do

86
00:03:23,400 --> 00:03:25,440
Sten to clock this a little bit rather

87
00:03:25,440 --> 00:03:27,000
than just let it keep racing through

88
00:03:27,000 --> 00:03:29,820
here we might put a sample and hold and

89
00:03:29,820 --> 00:03:31,860
I'll talk about those more later in the

90
00:03:31,860 --> 00:03:33,510
front of it and then I'll synchronize

91
00:03:33,510 --> 00:03:35,370
this so that I don't read it right as

92
00:03:35,370 --> 00:03:37,440
the the bits are changing that's bad we

93
00:03:37,440 --> 00:03:39,420
like to be synchronous when we grab our

94
00:03:39,420 --> 00:03:42,930
bits out of a device if we look at at

95
00:03:42,930 --> 00:03:45,720
ADC in general what we're doing is

96
00:03:45,720 --> 00:03:48,989
creating a digital value to represent an

97
00:03:48,989 --> 00:03:51,030
analog value and here's a sine wave in

98
00:03:51,030 --> 00:03:53,370
red and here's just a three bit and you

99
00:03:53,370 --> 00:03:54,989
can see that that doesn't look much like

100
00:03:54,989 --> 00:03:57,269
a sine wave that we can tell the

101
00:03:57,269 --> 00:03:59,190
frequency we can tell some things from

102
00:03:59,190 --> 00:04:01,320
it but it's it won't sound like a sine

103
00:04:01,320 --> 00:04:03,870
wave if you were to play that back here

104
00:04:03,870 --> 00:04:05,850
we see more bits and here you see it

105
00:04:05,850 --> 00:04:08,370
looking more like a sine wave and I'll

106
00:04:08,370 --> 00:04:10,680
tell you that everywhere that you see

107
00:04:10,680 --> 00:04:12,570
this deviation between the red and the

108
00:04:12,570 --> 00:04:14,549
blue that's a certain amount of noise

109
00:04:14,549 --> 00:04:17,010
that and that appears right on the

110
00:04:17,010 --> 00:04:19,858
signal if this was an audio signal you'd

111
00:04:19,858 --> 00:04:22,229
hear it's called quantization noise

112
00:04:22,229 --> 00:04:25,140
you'd hear everything from a noise to

113
00:04:25,140 --> 00:04:27,120
that weird hollow rumbling

114
00:04:27,120 --> 00:04:29,729
that you get like on skype and other

115
00:04:29,729 --> 00:04:32,160
things where the bandwidth is very low

116
00:04:32,160 --> 00:04:34,680
and down here we can see that here we're

117
00:04:34,680 --> 00:04:37,830
showing the samples and by the way the

118
00:04:37,830 --> 00:04:40,830
more often we sample the better it will

119
00:04:40,830 --> 00:04:42,630
sound and there's a criteria called

120
00:04:42,630 --> 00:04:45,449
Nyquist criteria where to just tell the

121
00:04:45,449 --> 00:04:47,160
frequency that we're listening for if

122
00:04:47,160 --> 00:04:49,169
this was all the same in just an even

123
00:04:49,169 --> 00:04:51,389
sine wave you need at least twice that

124
00:04:51,389 --> 00:04:53,430
frequency just to make sure that you

125
00:04:53,430 --> 00:04:55,290
know that frequency that you you picked

126
00:04:55,290 --> 00:04:57,479
it up and saw the transition from high

127
00:04:57,479 --> 00:04:59,280
to low to high again if you go too slow

128
00:04:59,280 --> 00:05:02,220
you might see hihihihi and that's

129
00:05:02,220 --> 00:05:04,380
because you didn't sample it when it was

130
00:05:04,380 --> 00:05:06,840
low however if you only sample it at

131
00:05:06,840 --> 00:05:09,060
twice the frequency each not going to

132
00:05:09,060 --> 00:05:10,979
sound real good either so that we called

133
00:05:10,979 --> 00:05:13,650
over sampling you'll see it I don't like

134
00:05:13,650 --> 00:05:16,470
DVD player mp3 all that you'll see over

135
00:05:16,470 --> 00:05:17,729
sampling we're talking about how many

136
00:05:17,729 --> 00:05:19,889
little slices we put in here so we get

137
00:05:19,889 --> 00:05:21,930
errors from these discrete steps but we

138
00:05:21,930 --> 00:05:24,750
also get errors from how often we sample

139
00:05:24,750 --> 00:05:27,120
it and here they actually try and show

140
00:05:27,120 --> 00:05:29,400
that little red wiggle there is the

141
00:05:29,400 --> 00:05:32,310
error that comes from the sampling time

142
00:05:32,310 --> 00:05:34,860
so every time deviates see we're in the

143
00:05:34,860 --> 00:05:36,720
tube we're in the green the yellow split

144
00:05:36,720 --> 00:05:39,539
that's a deviation so flash converter

145
00:05:39,539 --> 00:05:42,120
now I used to use these in video all the

146
00:05:42,120 --> 00:05:45,270
time love them right the problem is you

147
00:05:45,270 --> 00:05:48,180
eight bits there's 256 comparators nine

148
00:05:48,180 --> 00:05:50,880
bits there's 512 can we've comparators

149
00:05:50,880 --> 00:05:54,000
ten bits it's up to a thousand and and

150
00:05:54,000 --> 00:05:56,039
and the resistors that go with it and a

151
00:05:56,039 --> 00:05:57,840
lot of times they they used to have two

152
00:05:57,840 --> 00:06:01,169
relays or trim these nowadays they might

153
00:06:01,169 --> 00:06:02,789
have the process good enough that these

154
00:06:02,789 --> 00:06:05,070
track but they may need a laser trim

155
00:06:05,070 --> 00:06:06,750
them so it gets frightfully expensive

156
00:06:06,750 --> 00:06:09,360
real quick so we don't typically buy the

157
00:06:09,360 --> 00:06:11,070
time if you look at even in digit key

158
00:06:11,070 --> 00:06:13,020
you get to the ten bit converters and

159
00:06:13,020 --> 00:06:14,639
they've jumped to a hundred dollars up

160
00:06:14,639 --> 00:06:17,250
from like ten now a priority encoder if

161
00:06:17,250 --> 00:06:19,110
you're familiar with an address decoder

162
00:06:19,110 --> 00:06:20,910
where you give it three address lines

163
00:06:20,910 --> 00:06:22,560
and I'll make like eight different

164
00:06:22,560 --> 00:06:25,110
single outputs a priority encoders the

165
00:06:25,110 --> 00:06:26,820
opposite of that takes eight single

166
00:06:26,820 --> 00:06:28,650
outputs and tries to tell you the three

167
00:06:28,650 --> 00:06:31,800
bit version in in priority just means it

168
00:06:31,800 --> 00:06:33,210
tells you the highest version it sees

169
00:06:33,210 --> 00:06:35,640
that's all this is doing this is taking

170
00:06:35,640 --> 00:06:37,650
all these discrete inputs and giving you

171
00:06:37,650 --> 00:06:40,260
a binary value for the highest value it

172
00:06:40,260 --> 00:06:40,800
sees

173
00:06:40,800 --> 00:06:43,949
sar successive approximation register

174
00:06:43,949 --> 00:06:46,740
and this is a technique that actually

175
00:06:46,740 --> 00:06:49,440
uses a digital to analog converter the

176
00:06:49,440 --> 00:06:52,229
opposite of analog to digital and it

177
00:06:52,229 --> 00:06:53,940
compares a value written by the

178
00:06:53,940 --> 00:06:56,250
processor or some logic to the analog

179
00:06:56,250 --> 00:06:58,560
input and as it tries to get closer and

180
00:06:58,560 --> 00:07:01,050
closer to it until it lasts it says hey

181
00:07:01,050 --> 00:07:03,360
that's so close I've approximated what

182
00:07:03,360 --> 00:07:05,400
that is to whatever bits and you can go

183
00:07:05,400 --> 00:07:07,319
quite high on these this is the most

184
00:07:07,319 --> 00:07:08,580
common one in the little

185
00:07:08,580 --> 00:07:11,340
microcontrollers and things built in you

186
00:07:11,340 --> 00:07:12,960
might even see where it says for a tit

187
00:07:12,960 --> 00:07:15,539
dated C's really what it is as they MUX

188
00:07:15,539 --> 00:07:17,819
it so you have four inputs to the same

189
00:07:17,819 --> 00:07:20,009
analog to digital converter and a lot of

190
00:07:20,009 --> 00:07:22,560
times that's own SAR so the way this

191
00:07:22,560 --> 00:07:24,360
works is at first it does the most

192
00:07:24,360 --> 00:07:27,060
significant bit and it outputs that and

193
00:07:27,060 --> 00:07:28,860
basically cuts the voltage in half and

194
00:07:28,860 --> 00:07:30,960
it says is it higher than this or less

195
00:07:30,960 --> 00:07:33,000
than this then it puts out the next one

196
00:07:33,000 --> 00:07:35,310
which cuts another fourth and it says a

197
00:07:35,310 --> 00:07:37,169
higher lower and it goes right on

198
00:07:37,169 --> 00:07:38,879
through that so I'm going to show you

199
00:07:38,879 --> 00:07:41,310
that in a simulation using Excel and now

200
00:07:41,310 --> 00:07:42,569
I'm going to show you on the bench

201
00:07:42,569 --> 00:07:44,610
because it's kind of cool to watch now

202
00:07:44,610 --> 00:07:46,860
during this time where it's trying these

203
00:07:46,860 --> 00:07:48,990
bits the analog can't be squiggling

204
00:07:48,990 --> 00:07:51,479
around if you measured it and you said

205
00:07:51,479 --> 00:07:52,979
are you of greater than or less than

206
00:07:52,979 --> 00:07:55,020
half and in the mean time it goes from

207
00:07:55,020 --> 00:07:57,120
greater to less than it'll screw

208
00:07:57,120 --> 00:07:58,680
everything up so we have what's called a

209
00:07:58,680 --> 00:08:00,539
sample and hold in front of these almost

210
00:08:00,539 --> 00:08:04,919
always and a sample and hold is quite

211
00:08:04,919 --> 00:08:06,930
simply something like where we let the

212
00:08:06,930 --> 00:08:08,940
voltage onto a capacitor and then open

213
00:08:08,940 --> 00:08:11,219
it and forgetting for a moment that this

214
00:08:11,219 --> 00:08:13,469
cap will start drooping and discharging

215
00:08:13,469 --> 00:08:15,479
there's ways to prevent that it just

216
00:08:15,479 --> 00:08:18,840
holds it during the entire conversion

217
00:08:18,840 --> 00:08:21,090
process so that's what a sample and hold

218
00:08:21,090 --> 00:08:23,460
us let me show you a simulation of this

219
00:08:23,460 --> 00:08:27,479
thing as it hunts for the voltage okay

220
00:08:27,479 --> 00:08:29,639
follow me on this it's actually quite

221
00:08:29,639 --> 00:08:31,979
simple once you see it what I'm doing

222
00:08:31,979 --> 00:08:35,190
though first off is I'm referencing I'm

223
00:08:35,190 --> 00:08:37,440
typing in input voltages as they compare

224
00:08:37,440 --> 00:08:39,089
to our 5 volt reference which I've

225
00:08:39,089 --> 00:08:42,000
chosen just as a standard and what does

226
00:08:42,000 --> 00:08:44,880
that mean if it were an 8-bit word so

227
00:08:44,880 --> 00:08:49,490
2.5 volts is half of 5 so that'd be a

228
00:08:49,490 --> 00:08:53,459
128 alright so the way successive

229
00:08:53,459 --> 00:08:54,540
approximation

230
00:08:54,540 --> 00:08:57,240
works is it will try first the most

231
00:08:57,240 --> 00:09:01,620
significant bit d7 and he says he puts

232
00:09:01,620 --> 00:09:03,930
it out in that DAC and he compares to it

233
00:09:03,930 --> 00:09:07,410
he says are you greater than 128 and in

234
00:09:07,410 --> 00:09:09,899
this case when it's ready says no and we

235
00:09:09,899 --> 00:09:13,019
put a zero here okay now had the value

236
00:09:13,019 --> 00:09:17,430
had it been slightly above 128 he would

237
00:09:17,430 --> 00:09:19,500
has put a 1 here and said yes and he

238
00:09:19,500 --> 00:09:21,810
remembers that and then on the next one

239
00:09:21,810 --> 00:09:24,630
he says well are you greater than 128

240
00:09:24,630 --> 00:09:26,790
plus 64 and you get him that's the red

241
00:09:26,790 --> 00:09:29,399
he says no this time I'm not he puts a

242
00:09:29,399 --> 00:09:31,649
zero he goes well are you greater than

243
00:09:31,649 --> 00:09:36,149
128 plus 32 m's and down till he gets to

244
00:09:36,149 --> 00:09:38,880
bang he hits one all the way down here

245
00:09:38,880 --> 00:09:41,730
where he says ah okay I'm I'm you can

246
00:09:41,730 --> 00:09:44,670
leave that one add it in and a punt

247
00:09:44,670 --> 00:09:46,649
still it gets right down to the value in

248
00:09:46,649 --> 00:09:49,500
this case 133 that's the value for here

249
00:09:49,500 --> 00:09:52,050
so if I were to give it point three

250
00:09:52,050 --> 00:09:54,930
volts you'd see it hunt down and then

251
00:09:54,930 --> 00:09:57,300
start hunting back up now this takes

252
00:09:57,300 --> 00:09:59,279
eight clock cycles to do but it takes

253
00:09:59,279 --> 00:10:01,380
the same amount of time every time four

254
00:10:01,380 --> 00:10:04,529
eight eight eight bit SAR takes a clock

255
00:10:04,529 --> 00:10:07,290
cycles if I go way up high and I say

256
00:10:07,290 --> 00:10:10,319
four point eight volts you'll see it

257
00:10:10,319 --> 00:10:11,970
hunts all the way up till it finally

258
00:10:11,970 --> 00:10:14,519
runs off the top and then he squiggles

259
00:10:14,519 --> 00:10:16,260
around till he gets it as close as he

260
00:10:16,260 --> 00:10:20,279
can and he gets a 246 so this is a this

261
00:10:20,279 --> 00:10:22,110
actually works in time from left to

262
00:10:22,110 --> 00:10:23,670
right and we're gonna see that on the

263
00:10:23,670 --> 00:10:25,560
bench now but this is just an Excel

264
00:10:25,560 --> 00:10:27,180
spreadsheet I wrote that helps you

265
00:10:27,180 --> 00:10:30,980
visualize this this hunting process

266
00:10:30,980 --> 00:10:34,050
here's an SAR that I built out of basic

267
00:10:34,050 --> 00:10:37,019
pieces to show you the innards of it in

268
00:10:37,019 --> 00:10:39,269
action and again this is what you might

269
00:10:39,269 --> 00:10:41,699
find inside a chip only not all big and

270
00:10:41,699 --> 00:10:43,470
blown out like this but this way we can

271
00:10:43,470 --> 00:10:45,660
look at the signals so if you remember

272
00:10:45,660 --> 00:10:47,880
the block diagram we started with a

273
00:10:47,880 --> 00:10:50,579
piece of logic to control it we have a

274
00:10:50,579 --> 00:10:53,459
digital to analog converter we have a

275
00:10:53,459 --> 00:10:58,259
comparator and those are right here

276
00:10:58,259 --> 00:11:00,420
here's my control logic I could have

277
00:11:00,420 --> 00:11:02,760
used my hackaday pro trinket if I wanted

278
00:11:02,760 --> 00:11:04,709
to and written it in code I just have no

279
00:11:04,709 --> 00:11:07,740
ride it in FPGA here is

280
00:11:07,740 --> 00:11:10,920
digital-to-analog converter remember the

281
00:11:10,920 --> 00:11:15,840
r2r ladder that we did for DDS well here

282
00:11:15,840 --> 00:11:17,790
it is again it's just some resistors

283
00:11:17,790 --> 00:11:19,680
hanging off an i/o port and I'm making

284
00:11:19,680 --> 00:11:21,660
my own digital to analog converter for

285
00:11:21,660 --> 00:11:23,760
almost nothing and then I have little

286
00:11:23,760 --> 00:11:26,040
LEDs to show you which port is active

287
00:11:26,040 --> 00:11:28,200
and latched and which one's on now I

288
00:11:28,200 --> 00:11:29,940
just have one of my little modules here

289
00:11:29,940 --> 00:11:32,400
as a comparator remember the simulation

290
00:11:32,400 --> 00:11:34,380
I showed what happens is it first tries

291
00:11:34,380 --> 00:11:36,480
the most significant bit and keeps going

292
00:11:36,480 --> 00:11:38,760
downwards and meanwhile it's latching

293
00:11:38,760 --> 00:11:40,380
the state of whether it was greater than

294
00:11:40,380 --> 00:11:43,860
or less than the test value so if I

295
00:11:43,860 --> 00:11:45,480
lowered the voltage that's going into

296
00:11:45,480 --> 00:11:47,970
this we'll see that the most significant

297
00:11:47,970 --> 00:11:50,730
bit stops being latched they are now

298
00:11:50,730 --> 00:11:53,910
it's down into the the lesser digits as

299
00:11:53,910 --> 00:11:57,510
we go and if I show you the output of

300
00:11:57,510 --> 00:12:00,120
the digital to analog converter you can

301
00:12:00,120 --> 00:12:02,460
see it hunt now for that one volt that

302
00:12:02,460 --> 00:12:05,730
I'm giving it and finally here's what it

303
00:12:05,730 --> 00:12:07,020
looks like on the scope now I'm running

304
00:12:07,020 --> 00:12:08,640
this real slow normally this would be

305
00:12:08,640 --> 00:12:12,270
zipping along at thousands of cycles per

306
00:12:12,270 --> 00:12:15,000
second but I've slowed it down here so

307
00:12:15,000 --> 00:12:16,860
that we can see it but watch the blue

308
00:12:16,860 --> 00:12:18,510
line as the reference voltage and watch

309
00:12:18,510 --> 00:12:18,900
it

310
00:12:18,900 --> 00:12:22,970
seek out using SAR

311
00:12:33,110 --> 00:12:36,290
and our last one today is the dual slope

312
00:12:36,290 --> 00:12:39,410
conversion analog to digital converter I

313
00:12:39,410 --> 00:12:41,720
used to use this an instrumentation that

314
00:12:41,720 --> 00:12:44,360
I used to get like 18 to 20 bits out of

315
00:12:44,360 --> 00:12:46,399
it if we did everything very careful and

316
00:12:46,399 --> 00:12:48,830
just right quite simply what happens as

317
00:12:48,830 --> 00:12:50,720
you couple you first you switch to the

318
00:12:50,720 --> 00:12:53,240
input voltage you want to measure and it

319
00:12:53,240 --> 00:12:55,430
integrates it so it starts to charge up

320
00:12:55,430 --> 00:12:57,680
a capacitor but because it's inside or

321
00:12:57,680 --> 00:12:59,570
not Pam if we get a straight line not an

322
00:12:59,570 --> 00:13:02,209
RC and we don't know how long this will

323
00:13:02,209 --> 00:13:04,100
take because we don't know the different

324
00:13:04,100 --> 00:13:05,810
sizes this is a small voltage here is a

325
00:13:05,810 --> 00:13:08,420
big voltage example but then we switch

326
00:13:08,420 --> 00:13:10,190
it to a reference voltage that we do

327
00:13:10,190 --> 00:13:12,920
know and we time how long it takes to

328
00:13:12,920 --> 00:13:16,550
discharge it now this also cancels out

329
00:13:16,550 --> 00:13:19,100
all kinds of effects that happen you

330
00:13:19,100 --> 00:13:20,540
know there are some things like the

331
00:13:20,540 --> 00:13:22,670
dielectric absorption of the capacitor

332
00:13:22,670 --> 00:13:24,860
used to be something we'd have to watch

333
00:13:24,860 --> 00:13:26,810
because it caused an error when you jump

334
00:13:26,810 --> 00:13:28,700
from one direction to the other that

335
00:13:28,700 --> 00:13:30,680
difference between the two was lost in

336
00:13:30,680 --> 00:13:32,959
the capacitor itself here's a little

337
00:13:32,959 --> 00:13:35,959
circuit I made for the TC 71 0-9 which

338
00:13:35,959 --> 00:13:38,440
is a single chip dual slope converter

339
00:13:38,440 --> 00:13:40,670
you know you'll find these things in

340
00:13:40,670 --> 00:13:42,920
things like handheld instrumentation or

341
00:13:42,920 --> 00:13:44,000
whatnot but this one's got a

342
00:13:44,000 --> 00:13:46,700
microprocessor interface that's why

343
00:13:46,700 --> 00:13:48,680
there's so many pins on it as opposed to

344
00:13:48,680 --> 00:13:50,480
like an SPI or something it's got a

345
00:13:50,480 --> 00:13:54,020
parallel interface but if we look at the

346
00:13:54,020 --> 00:13:58,820
scope here's where I was talking earlier

347
00:13:58,820 --> 00:14:02,810
where it charges based on the input

348
00:14:02,810 --> 00:14:04,700
voltage and let me change the input

349
00:14:04,700 --> 00:14:09,770
voltage I'll show you alright and the

350
00:14:09,770 --> 00:14:11,360
square wave at the top I'm just using

351
00:14:11,360 --> 00:14:13,190
for a trigger but also indicates how

352
00:14:13,190 --> 00:14:14,959
long in the conversion cycle is from

353
00:14:14,959 --> 00:14:17,050
start to finish so there's two phases

354
00:14:17,050 --> 00:14:19,760
integrate the unknown voltage which is

355
00:14:19,760 --> 00:14:22,220
what I'm changing and that's the the

356
00:14:22,220 --> 00:14:25,279
slope going down and then the discharge

357
00:14:25,279 --> 00:14:28,250
which is the return to the baseline and

358
00:14:28,250 --> 00:14:30,230
actually if you look the discharge

359
00:14:30,230 --> 00:14:32,300
occurs at the same rate all the time and

360
00:14:32,300 --> 00:14:34,910
it's that at that time that we count and

361
00:14:34,910 --> 00:14:39,860
because we're you know testing it by the

362
00:14:39,860 --> 00:14:41,540
discharge of the reference

363
00:14:41,540 --> 00:14:44,270
we're actually canceling out gain gain

364
00:14:44,270 --> 00:14:46,819
shifts and even some offsets and stuff

365
00:14:46,819 --> 00:14:49,160
again the time between these conversions

366
00:14:49,160 --> 00:14:51,679
is an auto zero phase so what you don't

367
00:14:51,679 --> 00:14:53,660
see here is a massive amount of pulses

368
00:14:53,660 --> 00:14:55,429
that gets counted during the vrf time

369
00:14:55,429 --> 00:14:57,799
and let me show you one last thing here

370
00:14:57,799 --> 00:15:00,709
about how to count just tons of pulses

371
00:15:00,709 --> 00:15:03,129
for example coming out of one of these

372
00:15:03,129 --> 00:15:05,629
finally I wanted to show a trick for

373
00:15:05,629 --> 00:15:09,470
counting lots of fast pulses where you

374
00:15:09,470 --> 00:15:11,179
you don't have to count each and every

375
00:15:11,179 --> 00:15:12,439
pulse but at the end of the day you

376
00:15:12,439 --> 00:15:14,359
still get the same precision as if you

377
00:15:14,359 --> 00:15:16,729
did and quite simply you put the pulses

378
00:15:16,729 --> 00:15:19,549
into a / encounter let's say it's a

379
00:15:19,549 --> 00:15:22,609
16-bit counter so every 65,000 pulses

380
00:15:22,609 --> 00:15:24,410
you get an interrupt maybe this goes to

381
00:15:24,410 --> 00:15:26,569
the counter directly in your processor

382
00:15:26,569 --> 00:15:30,619
or controller and so you get only one

383
00:15:30,619 --> 00:15:32,079
pulse that you have to count

384
00:15:32,079 --> 00:15:36,410
representing you know 16 bits at the end

385
00:15:36,410 --> 00:15:38,329
of that though then there is an amount

386
00:15:38,329 --> 00:15:40,669
left in this counter and what you do is

387
00:15:40,669 --> 00:15:42,649
you grab an i/o port put it in here and

388
00:15:42,649 --> 00:15:45,139
then you keep toggling until you get one

389
00:15:45,139 --> 00:15:47,869
last overflow and you subtract that and

390
00:15:47,869 --> 00:15:49,519
that's how many pulses happened

391
00:15:49,519 --> 00:15:51,619
throughout the time was all of these

392
00:15:51,619 --> 00:15:54,289
interrupts plus the amount left in the

393
00:15:54,289 --> 00:15:57,789
counter so I want to show you a

394
00:15:57,789 --> 00:16:00,319
combination of many of the things we've

395
00:16:00,319 --> 00:16:02,029
talked about here on the videos here at

396
00:16:02,029 --> 00:16:04,639
hackaday into a single product this is

397
00:16:04,639 --> 00:16:06,439
an analogue section that I did for a

398
00:16:06,439 --> 00:16:09,439
digital scale back in 1982 it was good

399
00:16:09,439 --> 00:16:12,529
for 18 to 20 bits it used a dual slope

400
00:16:12,529 --> 00:16:13,909
building block and here's our

401
00:16:13,909 --> 00:16:16,129
polypropylene cap to cut down on

402
00:16:16,129 --> 00:16:20,359
dielectric absorption and this did our

403
00:16:20,359 --> 00:16:22,159
dual slope conversion that we just went

404
00:16:22,159 --> 00:16:24,379
over up here is an instrumentation

405
00:16:24,379 --> 00:16:26,239
amplifier made by three separate

406
00:16:26,239 --> 00:16:29,539
amplifiers the Opio sevens made by PMI

407
00:16:29,539 --> 00:16:31,339
who are no longer with us precision

408
00:16:31,339 --> 00:16:34,669
monolithic and then here is a low-pass

409
00:16:34,669 --> 00:16:38,269
filter we've talked about those and here

410
00:16:38,269 --> 00:16:41,029
is the front-end switches where it would

411
00:16:41,029 --> 00:16:43,189
look at a present precision resistor

412
00:16:43,189 --> 00:16:44,989
network we would buy all three resistors

413
00:16:44,989 --> 00:16:46,729
at the same time match to each other

414
00:16:46,729 --> 00:16:49,399
where we would look the signal then we

415
00:16:49,399 --> 00:16:50,929
would look at a gain we'd look at the

416
00:16:50,929 --> 00:16:52,819
single and we'd look at a zero and then

417
00:16:52,819 --> 00:16:54,589
we would do the math to cancel all that

418
00:16:54,589 --> 00:16:57,470
out and we use a lo sites which we've

419
00:16:57,470 --> 00:16:59,449
talked about high side switches to

420
00:16:59,449 --> 00:17:00,740
disconnect the capacitor

421
00:17:00,740 --> 00:17:02,450
when we are jumping this around so that

422
00:17:02,450 --> 00:17:04,819
the capacitors were in there for our

423
00:17:04,819 --> 00:17:06,470
chevy sheffield ER and our low-pass

424
00:17:06,470 --> 00:17:08,930
filter are real poll filter

425
00:17:08,930 --> 00:17:11,900
during the signal phase but when we went

426
00:17:11,900 --> 00:17:13,130
to look at all these different gain

427
00:17:13,130 --> 00:17:15,230
values to crack for we'd cut out the cap

428
00:17:15,230 --> 00:17:17,150
suddenly because they had a long time

429
00:17:17,150 --> 00:17:20,180
constant so here's everything that we've

430
00:17:20,180 --> 00:17:21,980
talked about this was a hand tape board

431
00:17:21,980 --> 00:17:24,050
hand taped by a friend line Terry Fisher

432
00:17:24,050 --> 00:17:27,589
of Fisher PCB this this would still work

433
00:17:27,589 --> 00:17:29,540
today it's just we can do it a lot

434
00:17:29,540 --> 00:17:31,610
smaller this whole front end with the

435
00:17:31,610 --> 00:17:33,590
gain and zero reference checking is now

436
00:17:33,590 --> 00:17:35,990
done inside instrumentation amperes to

437
00:17:35,990 --> 00:17:38,350
the zero drift instrumentation amply

438
00:17:38,350 --> 00:17:40,730
which is chopper stabilized and that's

439
00:17:40,730 --> 00:17:43,310
essentially what this was doing other

440
00:17:43,310 --> 00:17:48,400
than that it's it's still viable today

441
00:17:48,400 --> 00:17:51,080
there are some other aspects to a 2ds

442
00:17:51,080 --> 00:17:53,750
we'll get into later uh basically how do

443
00:17:53,750 --> 00:17:57,230
you have digital circuitry live next to

444
00:17:57,230 --> 00:17:59,300
analog circuitry and not become noisy

445
00:17:59,300 --> 00:18:01,250
from the digital so there's always some

446
00:18:01,250 --> 00:18:03,980
isolation there to keep one side out of

447
00:18:03,980 --> 00:18:05,360
the other and those techniques are

448
00:18:05,360 --> 00:18:07,610
actually done in here and perhaps will

449
00:18:07,610 --> 00:18:10,160
show them at a later time that's it for

450
00:18:10,160 --> 00:18:12,590
this video I took the time to build a

451
00:18:12,590 --> 00:18:14,660
couple circuits because I really wanted

452
00:18:14,660 --> 00:18:17,180
you to see the the innards and see it

453
00:18:17,180 --> 00:18:19,070
and intuitive feel for how some of this

454
00:18:19,070 --> 00:18:21,530
works you know as they say a picture's

455
00:18:21,530 --> 00:18:23,990
worth a thousand twenty four words so

456
00:18:23,990 --> 00:18:27,020
bill heard from hackaday and will catch

457
00:18:27,020 --> 00:18:29,830
on the next one

