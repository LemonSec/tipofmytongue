1
00:00:00,000 --> 00:00:01,949
they'll heard from hackaday today I'm

2
00:00:01,949 --> 00:00:03,810
going to be getting control my analog

3
00:00:03,810 --> 00:00:07,680
from some digital processing and let me

4
00:00:07,680 --> 00:00:10,160
show you what I mean if you saw the

5
00:00:10,160 --> 00:00:13,259
universal active filter video that we

6
00:00:13,259 --> 00:00:15,929
did just a little while ago you'll see

7
00:00:15,929 --> 00:00:18,270
that I picked a component that that

8
00:00:18,270 --> 00:00:20,130
allowed me to build a filter where else

9
00:00:20,130 --> 00:00:21,660
I had to do was adjust a couple of

10
00:00:21,660 --> 00:00:23,250
resistors and that made it easy for a

11
00:00:23,250 --> 00:00:25,680
human to turn the knob and sweet band

12
00:00:25,680 --> 00:00:28,619
pass low pass up and down as opposed to

13
00:00:28,619 --> 00:00:30,630
varying multiple components all at once

14
00:00:30,630 --> 00:00:33,180
that's at the stage four then stepping

15
00:00:33,180 --> 00:00:35,190
in with a microcontroller more a

16
00:00:35,190 --> 00:00:37,649
processor but these days I know a lot of

17
00:00:37,649 --> 00:00:39,239
people are using the microcontrollers

18
00:00:39,239 --> 00:00:42,059
out there the AVR is the Picts these

19
00:00:42,059 --> 00:00:45,030
things are very I of e there they're

20
00:00:45,030 --> 00:00:48,360
made to take in input and put out output

21
00:00:48,360 --> 00:00:50,340
and the most the projects I see for that

22
00:00:50,340 --> 00:00:53,039
versus you know as a systems designer in

23
00:00:53,039 --> 00:00:55,680
the old days you know I was designing a

24
00:00:55,680 --> 00:00:58,469
core that did 80% thinking and only 20%

25
00:00:58,469 --> 00:01:01,020
inputting an outing but a lot of baggage

26
00:01:01,020 --> 00:01:03,180
went with that right versus the little

27
00:01:03,180 --> 00:01:05,129
stuff we can do today you know based on

28
00:01:05,129 --> 00:01:08,760
the AVR for example so I wanted to take

29
00:01:08,760 --> 00:01:12,750
that universal active filter and if we

30
00:01:12,750 --> 00:01:15,240
look here I'm gonna pop up an image and

31
00:01:15,240 --> 00:01:18,200
we see that I have this dual gang pot

32
00:01:18,200 --> 00:01:22,229
and I want to replace that with two

33
00:01:22,229 --> 00:01:25,590
digitally controlled potentiometers pot

34
00:01:25,590 --> 00:01:27,680
means potentiometer not the other stuff

35
00:01:27,680 --> 00:01:31,650
so that kind of you know set the stage

36
00:01:31,650 --> 00:01:34,290
for this next step so here I wanted to

37
00:01:34,290 --> 00:01:36,509
point you out I'm going to show you this

38
00:01:36,509 --> 00:01:40,049
the the datasheet for a pot I picked

39
00:01:40,049 --> 00:01:41,520
just by going through the parameters

40
00:01:41,520 --> 00:01:43,140
real quick probably used digi-key and

41
00:01:43,140 --> 00:01:46,200
whittled it down and and then bottom and

42
00:01:46,200 --> 00:01:48,270
brought them in and so let's take a look

43
00:01:48,270 --> 00:01:51,390
at that digital pots back here's the

44
00:01:51,390 --> 00:01:57,060
data sheet for the a microchip single

45
00:01:57,060 --> 00:01:59,340
digital potentiometer with an SPI

46
00:01:59,340 --> 00:02:01,049
interface we're going to talk about SPI

47
00:02:01,049 --> 00:02:03,060
in a second but if you look here

48
00:02:03,060 --> 00:02:05,369
essentially what you'll see are it's

49
00:02:05,369 --> 00:02:07,530
using the word wiper it's got you know

50
00:02:07,530 --> 00:02:09,209
pictures of resistors in here and

51
00:02:09,209 --> 00:02:12,720
control logic and some digital shift

52
00:02:12,720 --> 00:02:14,069
registering going on

53
00:02:14,069 --> 00:02:16,319
so quite simply it's a way to shift in

54
00:02:16,319 --> 00:02:18,629
logic and create different resistance

55
00:02:18,629 --> 00:02:21,480
values now I don't work for microchip I

56
00:02:21,480 --> 00:02:23,150
just picked this one out of the blue

57
00:02:23,150 --> 00:02:26,209
there are plenty of them out there and

58
00:02:26,209 --> 00:02:29,400
picking one depends on your criteria at

59
00:02:29,400 --> 00:02:30,989
hand the voltage the amount of

60
00:02:30,989 --> 00:02:33,690
resistance and the interface so in this

61
00:02:33,690 --> 00:02:37,319
case it's spi and let's talk about SPI

62
00:02:37,319 --> 00:02:41,400
and i2c I squared C the other one that's

63
00:02:41,400 --> 00:02:42,900
really out there for doing this kind of

64
00:02:42,900 --> 00:02:46,829
thing these are here are two of the

65
00:02:46,829 --> 00:02:50,010
prevalent serial control protocols and

66
00:02:50,010 --> 00:02:51,870
and by that we mean we take just a

67
00:02:51,870 --> 00:02:54,989
couple of data lines i/o lines and we

68
00:02:54,989 --> 00:02:56,970
can talk to lots of slaves and or lots

69
00:02:56,970 --> 00:02:59,609
of devices and we can say a lot to them

70
00:02:59,609 --> 00:03:02,430
and that's why this came about was you

71
00:03:02,430 --> 00:03:03,840
know the chips were getting big in the

72
00:03:03,840 --> 00:03:06,239
early 2000s when Philips developed i2c

73
00:03:06,239 --> 00:03:08,670
and you didn't want to run your address

74
00:03:08,670 --> 00:03:11,250
bus in your in your data bus over there

75
00:03:11,250 --> 00:03:14,400
or do all kinds of distilling down the

76
00:03:14,400 --> 00:03:16,409
Creator chip select just to talk to the

77
00:03:16,409 --> 00:03:18,000
registers and one of these devices so

78
00:03:18,000 --> 00:03:20,220
they came up with this common bus called

79
00:03:20,220 --> 00:03:24,000
i2c and it's it's it's a protocol that's

80
00:03:24,000 --> 00:03:26,010
been very well specified to the point

81
00:03:26,010 --> 00:03:28,739
where the addresses that are defined for

82
00:03:28,739 --> 00:03:30,150
these you actually have to go and get

83
00:03:30,150 --> 00:03:32,519
those addresses from Philips if you want

84
00:03:32,519 --> 00:03:34,680
to be certified in XP whatever they're

85
00:03:34,680 --> 00:03:37,230
called today and then what you can do is

86
00:03:37,230 --> 00:03:39,030
you can set jumpers to so let's say you

87
00:03:39,030 --> 00:03:40,199
had two of the same one well you don't

88
00:03:40,199 --> 00:03:42,810
want them on the same address you can

89
00:03:42,810 --> 00:03:46,519
set jumpers to two like say uh 2001-2002

90
00:03:46,519 --> 00:03:49,230
and so that's the way this works as this

91
00:03:49,230 --> 00:03:51,329
guy says I'm addressing somebody and

92
00:03:51,329 --> 00:03:52,799
here's some data and here's some more

93
00:03:52,799 --> 00:03:54,569
data and by the way I'm the master and

94
00:03:54,569 --> 00:03:56,459
later a slave can even wake up say you

95
00:03:56,459 --> 00:03:57,629
know what I'm gonna fight you for the

96
00:03:57,629 --> 00:03:59,760
bus I win on now the master here's some

97
00:03:59,760 --> 00:04:03,239
data here's some data spi serial

98
00:04:03,239 --> 00:04:04,620
peripheral interface by the way this

99
00:04:04,620 --> 00:04:07,730
means of intelligent interconnect

100
00:04:07,730 --> 00:04:09,500
intercommunication something like that I

101
00:04:09,500 --> 00:04:13,709
forget we just call it i2c spi through a

102
00:04:13,709 --> 00:04:17,789
peripheral interface the it's more of an

103
00:04:17,789 --> 00:04:20,159
attitude than it is a protocol I'll tell

104
00:04:20,159 --> 00:04:23,010
you I say that because I've seen some

105
00:04:23,010 --> 00:04:25,110
different specs for how the Select lines

106
00:04:25,110 --> 00:04:26,070
can work and think

107
00:04:26,070 --> 00:04:28,350
but essentially we have a clock that

108
00:04:28,350 --> 00:04:30,690
goes to everybody there's a data out

109
00:04:30,690 --> 00:04:32,580
that goes to everybody in a data in that

110
00:04:32,580 --> 00:04:34,560
goes to everybody and it's the chip

111
00:04:34,560 --> 00:04:37,110
selects that determine which of these

112
00:04:37,110 --> 00:04:39,060
guys to be talking to so it can only be

113
00:04:39,060 --> 00:04:42,270
one master one slave and one master and

114
00:04:42,270 --> 00:04:44,370
multiple slaves depending on how many of

115
00:04:44,370 --> 00:04:47,130
these chip selects you have so no

116
00:04:47,130 --> 00:04:48,870
setting of addresses but setting of

117
00:04:48,870 --> 00:04:50,370
these so that means there's some logic

118
00:04:50,370 --> 00:04:52,440
going on that says maybe you are end up

119
00:04:52,440 --> 00:04:54,630
decoding some things or maybe you first

120
00:04:54,630 --> 00:04:56,850
write to a register fix your chip select

121
00:04:56,850 --> 00:05:01,470
and then do it but this is if you're

122
00:05:01,470 --> 00:05:03,300
working with i2c and it's already been

123
00:05:03,300 --> 00:05:05,340
debugged it's wonderful I've had a debug

124
00:05:05,340 --> 00:05:07,320
it down at a very low level and it can

125
00:05:07,320 --> 00:05:11,880
be a real pain spi um easy to use and

126
00:05:11,880 --> 00:05:13,830
guess what our digital potentiometer

127
00:05:13,830 --> 00:05:16,860
that I picked out uses SPI and I did

128
00:05:16,860 --> 00:05:18,120
want to show you real quick before we

129
00:05:18,120 --> 00:05:22,170
moved on kind of the guts of a digital

130
00:05:22,170 --> 00:05:25,830
potentiometer and almost always when we

131
00:05:25,830 --> 00:05:28,350
talk about controlling the resistance of

132
00:05:28,350 --> 00:05:31,590
a component it's almost always an FPT

133
00:05:31,590 --> 00:05:35,640
field effect transistor a transistor

134
00:05:35,640 --> 00:05:38,070
gets involved it's a current driven

135
00:05:38,070 --> 00:05:40,590
device it's a combination how much base

136
00:05:40,590 --> 00:05:43,410
carrier how much an Fe T is give me a

137
00:05:43,410 --> 00:05:45,090
certain amount and I will change my

138
00:05:45,090 --> 00:05:48,690
conductance my mo which is phone and so

139
00:05:48,690 --> 00:05:50,520
it becomes a resistive device and in

140
00:05:50,520 --> 00:05:52,530
fact inside integrated circuits where we

141
00:05:52,530 --> 00:05:56,640
use FETs in the early in most days we

142
00:05:56,640 --> 00:05:58,620
had NAND gates and or gates exclusive

143
00:05:58,620 --> 00:06:01,170
nor but who's counting inverters and

144
00:06:01,170 --> 00:06:03,180
then a pass device and that's where you

145
00:06:03,180 --> 00:06:05,100
took the device put it right in line and

146
00:06:05,100 --> 00:06:09,420
if you look here I'm showing some past

147
00:06:09,420 --> 00:06:11,850
devices in series with different

148
00:06:11,850 --> 00:06:13,680
resistors and that's what happens is the

149
00:06:13,680 --> 00:06:16,350
SPI logic picks out which resistance you

150
00:06:16,350 --> 00:06:19,380
want so if I write at 212 using the SPI

151
00:06:19,380 --> 00:06:22,380
interface he's going to select the in

152
00:06:22,380 --> 00:06:24,360
turn on the Fe T's in series with the

153
00:06:24,360 --> 00:06:26,790
212 resistance that's already on the on

154
00:06:26,790 --> 00:06:29,880
the chip and that that becomes our

155
00:06:29,880 --> 00:06:32,460
digital potentiometer value so there's

156
00:06:32,460 --> 00:06:34,440
two two ways to have designed you know

157
00:06:34,440 --> 00:06:35,940
some with three components where we've

158
00:06:35,940 --> 00:06:37,620
got the thing you want to control the

159
00:06:37,620 --> 00:06:38,700
digital potential

160
00:06:38,700 --> 00:06:41,250
in the middle and the controlling

161
00:06:41,250 --> 00:06:43,440
processor microcontroller on the end now

162
00:06:43,440 --> 00:06:45,840
I started from the side where I said hey

163
00:06:45,840 --> 00:06:47,880
here's the circuit here's a pot that's

164
00:06:47,880 --> 00:06:49,440
compatible once it's what kind of

165
00:06:49,440 --> 00:06:51,570
controller do I need he could have done

166
00:06:51,570 --> 00:06:52,650
it the other way you might have said hey

167
00:06:52,650 --> 00:06:54,450
I'm really checked out trawler I want to

168
00:06:54,450 --> 00:06:56,520
use it and work your way back towards

169
00:06:56,520 --> 00:06:58,980
the circuitry either ones valid so in my

170
00:06:58,980 --> 00:07:00,990
case then it's like okay I'm now on SPI

171
00:07:00,990 --> 00:07:03,150
what do I need to do I looked at the bus

172
00:07:03,150 --> 00:07:06,360
pirate great 4-bit banging or byte

173
00:07:06,360 --> 00:07:08,850
banging I should say bring up a terminal

174
00:07:08,850 --> 00:07:10,950
and get running start poking into some

175
00:07:10,950 --> 00:07:12,720
registers if you just need to set up a

176
00:07:12,720 --> 00:07:14,730
chip in my case I wanted something

177
00:07:14,730 --> 00:07:16,410
interactive I wanted the resistance to

178
00:07:16,410 --> 00:07:18,540
keep changing while I'm filming here so

179
00:07:18,540 --> 00:07:20,460
you know I thought about driving this

180
00:07:20,460 --> 00:07:23,340
from you know RAAA mode a language just

181
00:07:23,340 --> 00:07:25,230
took a little more effort than I had

182
00:07:25,230 --> 00:07:27,450
time for I thought well I could strap it

183
00:07:27,450 --> 00:07:30,450
to a unique system and it's more closely

184
00:07:30,450 --> 00:07:32,280
a couple you get the primary you know

185
00:07:32,280 --> 00:07:35,340
you dev it into place and and open it up

186
00:07:35,340 --> 00:07:37,200
as if it was a file cos and UNIX

187
00:07:37,200 --> 00:07:39,840
everything's just pile and so I said

188
00:07:39,840 --> 00:07:41,430
well I could drive it from a Raspberry

189
00:07:41,430 --> 00:07:44,400
Pi been kind of redundant raspberry PI's

190
00:07:44,400 --> 00:07:47,400
gotta just be SPI built in it I squared

191
00:07:47,400 --> 00:07:51,120
C and everybody's got one

192
00:07:51,120 --> 00:07:54,030
so everybody's got one about well to try

193
00:07:54,030 --> 00:07:58,350
and re out of g25 just be different to

194
00:07:58,350 --> 00:08:00,660
put with this just to be redundant the

195
00:08:00,660 --> 00:08:02,130
end of the day none of these things had

196
00:08:02,130 --> 00:08:06,060
a skull on them so I chose the hackaday

197
00:08:06,060 --> 00:08:09,000
pro trinket and I'd show you one here

198
00:08:09,000 --> 00:08:11,100
here let's let's put an image of one in

199
00:08:11,100 --> 00:08:13,200
here for you can't show you mine it's on

200
00:08:13,200 --> 00:08:14,850
the bench completely covered in wires

201
00:08:14,850 --> 00:08:16,890
that's why we're talking on this camera

202
00:08:16,890 --> 00:08:19,680
today and when we're done here we will

203
00:08:19,680 --> 00:08:22,650
go look at the big pile of wires so

204
00:08:22,650 --> 00:08:25,380
picking through the data sheet we find

205
00:08:25,380 --> 00:08:27,180
that the first eight bits

206
00:08:27,180 --> 00:08:29,400
kind of figure out the addressing and

207
00:08:29,400 --> 00:08:32,490
the second eight bits configured the

208
00:08:32,490 --> 00:08:34,440
data read the value you want the

209
00:08:34,440 --> 00:08:36,059
resistor to be now there's a lot of

210
00:08:36,059 --> 00:08:37,679
things this potentiometer does it's got

211
00:08:37,679 --> 00:08:39,990
non-volatile Ram you can store the wiper

212
00:08:39,990 --> 00:08:42,690
setting the wiper the potentiometer we

213
00:08:42,690 --> 00:08:43,919
don't care about any that we're actually

214
00:08:43,919 --> 00:08:46,140
going to be writing to location 0 will

215
00:08:46,140 --> 00:08:48,540
affect the wiper immediately so I know

216
00:08:48,540 --> 00:08:51,190
that I'll be writing a 0 and

217
00:08:51,190 --> 00:08:55,150
from zero to 256 over here just to make

218
00:08:55,150 --> 00:08:57,490
the register values the resistor value

219
00:08:57,490 --> 00:09:00,490
go up and down to 250 you know of the

220
00:09:00,490 --> 00:09:04,120
256 steps so that's the value we're

221
00:09:04,120 --> 00:09:06,880
gonna be writing let's jump into a way

222
00:09:06,880 --> 00:09:09,880
to get that over to the digital

223
00:09:09,880 --> 00:09:14,260
potentiometer okay here's a one of the

224
00:09:14,260 --> 00:09:16,630
Arduino development environments version

225
00:09:16,630 --> 00:09:18,490
you can't see it it's version one point

226
00:09:18,490 --> 00:09:22,030
zero five this isn't the type I used

227
00:09:22,030 --> 00:09:23,980
typically I tend to go with something

228
00:09:23,980 --> 00:09:25,930
that's got to handle more of the pics

229
00:09:25,930 --> 00:09:28,180
and things but this one already has

230
00:09:28,180 --> 00:09:30,490
everything I need built in to manage the

231
00:09:30,490 --> 00:09:33,070
trinket Pro so grab this off Adafruit

232
00:09:33,070 --> 00:09:35,800
installed it and it does indeed talk to

233
00:09:35,800 --> 00:09:37,600
the trinket Pro right out of the gate of

234
00:09:37,600 --> 00:09:40,600
the gate so I went to look for examples

235
00:09:40,600 --> 00:09:42,940
and if we go there we find that there

236
00:09:42,940 --> 00:09:45,400
are SPI examples and lo behold there's a

237
00:09:45,400 --> 00:09:48,220
digital POC control example this is what

238
00:09:48,220 --> 00:09:50,080
I meant why I said well you could have

239
00:09:50,080 --> 00:09:51,580
done it the other way cuz had I started

240
00:09:51,580 --> 00:09:53,230
with the trinket Pro I would have found

241
00:09:53,230 --> 00:09:55,000
the digit pod example I might have used

242
00:09:55,000 --> 00:09:57,550
the part it's already compiled to use or

243
00:09:57,550 --> 00:10:00,210
can be configured to use I should say

244
00:10:00,210 --> 00:10:03,610
but if it's no big deal I go into the

245
00:10:03,610 --> 00:10:06,670
code it's at C and I said hey for the

246
00:10:06,670 --> 00:10:09,640
first channel you know which is in here

247
00:10:09,640 --> 00:10:11,980
this shows an incoming Channel I set it

248
00:10:11,980 --> 00:10:13,570
to be the channels you know the first

249
00:10:13,570 --> 00:10:15,670
bites always zeros and then the second

250
00:10:15,670 --> 00:10:18,130
part is the value changing up and down

251
00:10:18,130 --> 00:10:22,720
to 255 and compiled it uploaded it it

252
00:10:22,720 --> 00:10:27,280
does not use you need the the bootloader

253
00:10:27,280 --> 00:10:31,390
thing not the not the USB thing on this

254
00:10:31,390 --> 00:10:34,930
one and I'm gonna work basically right

255
00:10:34,930 --> 00:10:37,300
out of the gate so finally let's go over

256
00:10:37,300 --> 00:10:40,920
to the bench and see this sucker working

257
00:10:41,760 --> 00:10:43,340
here we are

258
00:10:43,340 --> 00:10:45,860
at the bench and it's it's quite a bit

259
00:10:45,860 --> 00:10:49,220
messier than normal and in fact if I

260
00:10:49,220 --> 00:10:51,620
this was a real Rd project I would stop

261
00:10:51,620 --> 00:10:55,610
and reconsider how I've done things but

262
00:10:55,610 --> 00:10:57,260
this is a video and I'm under a time

263
00:10:57,260 --> 00:10:59,060
constraint so we're gonna keep going

264
00:10:59,060 --> 00:11:01,790
the and I'll give you an overhead shot

265
00:11:01,790 --> 00:11:03,680
here in a second I actually used a

266
00:11:03,680 --> 00:11:06,230
breadboard this time I normally don't

267
00:11:06,230 --> 00:11:08,390
because of the issue of as you're trying

268
00:11:08,390 --> 00:11:09,920
to move things around something else

269
00:11:09,920 --> 00:11:13,340
will change I did shoot a PC board for

270
00:11:13,340 --> 00:11:15,290
this video that showed the digital Cox

271
00:11:15,290 --> 00:11:18,140
hooked right up and I just couldn't

272
00:11:18,140 --> 00:11:19,760
thread the needle as far as the the

273
00:11:19,760 --> 00:11:22,610
split supplies for the analog the supply

274
00:11:22,610 --> 00:11:25,600
for the for the trinket the supply for

275
00:11:25,600 --> 00:11:30,170
the digital pots themselves and actually

276
00:11:30,170 --> 00:11:32,120
even this one here where I've got going

277
00:11:32,120 --> 00:11:34,220
if I hook up one last cable from the

278
00:11:34,220 --> 00:11:36,140
trigger from a piece of equipment behind

279
00:11:36,140 --> 00:11:38,450
me over to one of the scopes everything

280
00:11:38,450 --> 00:11:41,270
stops working I'm not surprised there's

281
00:11:41,270 --> 00:11:42,410
there's probably all kinds of ground

282
00:11:42,410 --> 00:11:44,450
sneak pass and yet it's still working so

283
00:11:44,450 --> 00:11:46,760
I'm okay with that for demonstration

284
00:11:46,760 --> 00:11:49,160
purposes so let me give you an overhead

285
00:11:49,160 --> 00:11:51,620
shot of what we got going and then I'll

286
00:11:51,620 --> 00:11:55,040
break it down for you so here's what we

287
00:11:55,040 --> 00:11:57,040
got going today we have the trinket Pro

288
00:11:57,040 --> 00:11:59,180
hopefully I can unplug it show you the

289
00:11:59,180 --> 00:12:01,550
skull on the bottom before we're done

290
00:12:01,550 --> 00:12:04,640
here today it's controlling via SPI

291
00:12:04,640 --> 00:12:07,160
these three wires over to the to digital

292
00:12:07,160 --> 00:12:08,330
pots that are on the side of this

293
00:12:08,330 --> 00:12:10,310
breadboard and all they do is they bring

294
00:12:10,310 --> 00:12:12,440
over two wires and the ground but two

295
00:12:12,440 --> 00:12:14,290
wires one for each resistor and that

296
00:12:14,290 --> 00:12:16,970
replaces the resistor function we had in

297
00:12:16,970 --> 00:12:20,720
the universal active filter earlier so

298
00:12:20,720 --> 00:12:22,370
let me show it start out by showing you

299
00:12:22,370 --> 00:12:24,800
the spi that we have going here the

300
00:12:24,800 --> 00:12:27,680
three wire interface and we'll follow it

301
00:12:27,680 --> 00:12:30,190
through the circuit

302
00:12:30,190 --> 00:12:32,990
now I have a new oscilloscope in the in

303
00:12:32,990 --> 00:12:36,680
the shop here a Tektronix MDO 3104

304
00:12:36,680 --> 00:12:39,020
courtesy of my good friends at Tektronix

305
00:12:39,020 --> 00:12:41,540
and this is the web interface on it so

306
00:12:41,540 --> 00:12:43,970
it allows me to really zoom in and show

307
00:12:43,970 --> 00:12:46,640
you what's going on here I've labeled

308
00:12:46,640 --> 00:12:49,040
the three lines for the SPI the clock

309
00:12:49,040 --> 00:12:51,380
the data the select that the chip select

310
00:12:51,380 --> 00:12:55,430
and you can see that the first event an

311
00:12:55,430 --> 00:12:57,020
event I'm actually triggering on is the

312
00:12:57,020 --> 00:12:59,330
select going and then we have two sets

313
00:12:59,330 --> 00:13:00,140
of eight clocks

314
00:13:00,140 --> 00:13:02,180
remember I said that the first word

315
00:13:02,180 --> 00:13:04,100
needed to be all zeros so easy to

316
00:13:04,100 --> 00:13:06,920
eyeball here you can then see if pushing

317
00:13:06,920 --> 00:13:09,110
down the the value as it's counting up

318
00:13:09,110 --> 00:13:12,620
in binary or counting down I didn't look

319
00:13:12,620 --> 00:13:15,470
to see which one it's actually doing now

320
00:13:15,470 --> 00:13:19,280
this scope does include an SPI decoder

321
00:13:19,280 --> 00:13:21,590
if I was doing actual data commands and

322
00:13:21,590 --> 00:13:23,600
I'd want to see a 5a followed by a b0

323
00:13:23,600 --> 00:13:25,340
but this is easy for us to see we've got

324
00:13:25,340 --> 00:13:28,040
a zero and then walking numbers so it's

325
00:13:28,040 --> 00:13:29,990
easy for us to see the output over on

326
00:13:29,990 --> 00:13:32,750
the bench and if if you don't remember

327
00:13:32,750 --> 00:13:36,290
or you didn't see the video on universal

328
00:13:36,290 --> 00:13:39,200
active filters here again is the the

329
00:13:39,200 --> 00:13:40,970
analog that we are controlling where

330
00:13:40,970 --> 00:13:42,830
there are two external resistors that

331
00:13:42,830 --> 00:13:44,660
we've now replaced with the digital pots

332
00:13:44,660 --> 00:13:46,880
and what they do is they affect where

333
00:13:46,880 --> 00:13:48,620
this high-pass filter where this

334
00:13:48,620 --> 00:13:50,990
low-pass filter and where this bandpass

335
00:13:50,990 --> 00:13:53,480
filter are so as I were to turn these up

336
00:13:53,480 --> 00:13:55,250
and down you would see the bandpass

337
00:13:55,250 --> 00:13:57,800
filter moving up and down now I'm

338
00:13:57,800 --> 00:14:00,260
changing these under spi control from my

339
00:14:00,260 --> 00:14:02,870
hackaday pro trinket and let's take a

340
00:14:02,870 --> 00:14:05,130
look at what that waveform looks like

341
00:14:05,130 --> 00:14:07,770
and here we see the the output of

342
00:14:07,770 --> 00:14:11,460
artwork on the top in in in the top

343
00:14:11,460 --> 00:14:14,190
you'll see several cycles of the sweep

344
00:14:14,190 --> 00:14:17,070
frequency generator labeled sweep in is

345
00:14:17,070 --> 00:14:19,110
cycling from a low to a high frequency

346
00:14:19,110 --> 00:14:22,740
and then the blue line on the bottom

347
00:14:22,740 --> 00:14:26,130
low-pass is the output of the low-pass

348
00:14:26,130 --> 00:14:28,980
filter as it is swept up and down also

349
00:14:28,980 --> 00:14:31,050
so it's letting a variable number a

350
00:14:31,050 --> 00:14:33,570
variable amount of the signal through

351
00:14:33,570 --> 00:14:35,820
based on the commands being sent from I

352
00:14:35,820 --> 00:14:37,740
squared C if you carry the thinking

353
00:14:37,740 --> 00:14:41,880
behind this further out you know this

354
00:14:41,880 --> 00:14:43,560
demonstrates that you could do something

355
00:14:43,560 --> 00:14:46,260
like have a the equivalent of an analog

356
00:14:46,260 --> 00:14:49,290
synth synthesizer only instead of using

357
00:14:49,290 --> 00:14:51,210
control voltages that you got to get

358
00:14:51,210 --> 00:14:53,550
extremely linear and tracking each other

359
00:14:53,550 --> 00:14:56,250
and tracking for temperature you could

360
00:14:56,250 --> 00:14:58,620
use something simple like an S POS SPI

361
00:14:58,620 --> 00:15:01,470
or an I squared C bus and send these

362
00:15:01,470 --> 00:15:03,210
commands that sweep filters and

363
00:15:03,210 --> 00:15:05,220
frequencies and oscillators and

364
00:15:05,220 --> 00:15:07,620
everything and have them all be you know

365
00:15:07,620 --> 00:15:09,330
perfectly in line because at the heart

366
00:15:09,330 --> 00:15:11,190
of it it's it's a command that says go

367
00:15:11,190 --> 00:15:13,860
to a thousand Hertz just to kind of

368
00:15:13,860 --> 00:15:18,060
prove that the mechanism here was really

369
00:15:18,060 --> 00:15:21,840
a variable resistor a very analog thing

370
00:15:21,840 --> 00:15:25,460
again that the heart is probably an Fe T

371
00:15:25,460 --> 00:15:29,910
or several you can see my old Simpson

372
00:15:29,910 --> 00:15:34,410
260 that I've had since I have a 17 and

373
00:15:34,410 --> 00:15:38,250
it's about as beat up as I am but it's

374
00:15:38,250 --> 00:15:40,380
displaying I what I've done is I've

375
00:15:40,380 --> 00:15:45,210
unplug two wires that ran to the filter

376
00:15:45,210 --> 00:15:47,430
can't quite see him and I've just run

377
00:15:47,430 --> 00:15:49,700
them to the resistance on this and

378
00:15:49,700 --> 00:15:52,080
here's one of those times when a linear

379
00:15:52,080 --> 00:15:53,790
meter kind of tells you more of what's

380
00:15:53,790 --> 00:15:55,890
going on if you put a DMM on there you'd

381
00:15:55,890 --> 00:15:58,410
just see a bunch of jumpin numbers so

382
00:15:58,410 --> 00:15:59,280
again

383
00:15:59,280 --> 00:16:02,490
demonstration of our mastery over analog

384
00:16:02,490 --> 00:16:05,510
as done with an SPI bus

385
00:16:05,510 --> 00:16:08,340
hopefully this made sense as I walked

386
00:16:08,340 --> 00:16:11,040
through the different steps I'm sure if

387
00:16:11,040 --> 00:16:12,450
you've done this you've got your own

388
00:16:12,450 --> 00:16:14,340
flavors your own versions you'd say why

389
00:16:14,340 --> 00:16:16,470
did he do that no reason just playing

390
00:16:16,470 --> 00:16:20,070
around right but no we we we you know

391
00:16:20,070 --> 00:16:22,800
took it from one end to another and you

392
00:16:22,800 --> 00:16:24,780
know like I said these days the the

393
00:16:24,780 --> 00:16:26,670
microcontroller environment is one

394
00:16:26,670 --> 00:16:29,700
that's very IO heavy and so here's how

395
00:16:29,700 --> 00:16:31,950
to you know cobble up a couple pieces

396
00:16:31,950 --> 00:16:34,110
and in this case we made a variable

397
00:16:34,110 --> 00:16:35,820
resistor that could control a variable

398
00:16:35,820 --> 00:16:38,670
filter or as you saw in the Simpson even

399
00:16:38,670 --> 00:16:42,060
you know act as a true variable resistor

400
00:16:42,060 --> 00:16:44,010
I'm going to stop there we covered a lot

401
00:16:44,010 --> 00:16:45,690
of things actually went through the

402
00:16:45,690 --> 00:16:47,700
design process if you think about it

403
00:16:47,700 --> 00:16:49,950
from beginning in with processor on one

404
00:16:49,950 --> 00:16:51,570
side something in the middle and our

405
00:16:51,570 --> 00:16:54,030
output on the other end and the

406
00:16:54,030 --> 00:16:56,580
microcontroller of varieties these days

407
00:16:56,580 --> 00:16:59,100
are very i/o intensive analog intensive

408
00:16:59,100 --> 00:17:00,900
you don't need to build your own of many

409
00:17:00,900 --> 00:17:03,480
things but a variable resistor isn't a

410
00:17:03,480 --> 00:17:05,339
normal thing so that's why we tackled it

411
00:17:05,339 --> 00:17:07,859
and it goes along well with the web

412
00:17:07,859 --> 00:17:09,180
we're just coming off of from the

413
00:17:09,180 --> 00:17:11,700
universal active filter I was going

414
00:17:11,700 --> 00:17:12,990
today actually build some white noise

415
00:17:12,990 --> 00:17:15,060
sources show you sweeping it and you

416
00:17:15,060 --> 00:17:17,329
know now we've we've done enough it's

417
00:17:17,329 --> 00:17:20,130
maybe we'll do that in a later one and

418
00:17:20,130 --> 00:17:22,410
talk about those kind of things so bill

419
00:17:22,410 --> 00:17:25,109
heard from hackaday hope again this made

420
00:17:25,109 --> 00:17:27,599
sense and I hope it give you an idea or

421
00:17:27,599 --> 00:17:29,400
something of something you could do or

422
00:17:29,400 --> 00:17:31,020
know that that you can do more than just

423
00:17:31,020 --> 00:17:32,820
what the chip already does

424
00:17:32,820 --> 00:17:35,160
so again bill heard from hackaday and

425
00:17:35,160 --> 00:17:38,450
I'll catch you next time

