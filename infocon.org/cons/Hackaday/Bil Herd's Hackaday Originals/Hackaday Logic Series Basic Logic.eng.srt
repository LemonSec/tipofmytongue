1
00:00:02,270 --> 00:00:05,700
they'll heard from hackaday well we just

2
00:00:05,700 --> 00:00:08,610
got back from disrupting New York a

3
00:00:08,610 --> 00:00:10,860
hackathon some other hackaday related

4
00:00:10,860 --> 00:00:13,080
events and it's back to time to make

5
00:00:13,080 --> 00:00:15,360
some videos here so I want to do a

6
00:00:15,360 --> 00:00:18,630
series on logic and it was a it was

7
00:00:18,630 --> 00:00:20,279
recommended to me that I start at the

8
00:00:20,279 --> 00:00:20,850
beginning

9
00:00:20,850 --> 00:00:22,920
who'd have thought right so I want to do

10
00:00:22,920 --> 00:00:27,000
some basic logic talk about true events

11
00:00:27,000 --> 00:00:28,890
right and then we'll get into ones and

12
00:00:28,890 --> 00:00:31,410
zeroes and volts and things but I also

13
00:00:31,410 --> 00:00:34,050
want to talk about aids in thinking

14
00:00:34,050 --> 00:00:37,590
about logic and some useful tricks so

15
00:00:37,590 --> 00:00:40,680
also before we wrap up I want to hit

16
00:00:40,680 --> 00:00:42,629
some of the electrical properties don't

17
00:00:42,629 --> 00:00:45,059
you know about the voltages and after

18
00:00:45,059 --> 00:00:48,719
that in the next series I want to talk

19
00:00:48,719 --> 00:00:51,449
about karnaugh maps static switching

20
00:00:51,449 --> 00:00:54,629
hazards truth tables boolean's and then

21
00:00:54,629 --> 00:00:59,969
ultimately let's take the entire path

22
00:00:59,969 --> 00:01:02,910
towards making a CPL D and maybe our own

23
00:01:02,910 --> 00:01:05,729
FPGA shield and that's if I stop

24
00:01:05,729 --> 00:01:08,250
screwing up the FPGA shield schematic

25
00:01:08,250 --> 00:01:10,890
but today is about basic logic and yes

26
00:01:10,890 --> 00:01:13,350
if you know all this skip it

27
00:01:13,350 --> 00:01:15,360
well maybe there's some cool stuff in

28
00:01:15,360 --> 00:01:16,680
there after all been doing this long

29
00:01:16,680 --> 00:01:19,170
time so let's get started starting with

30
00:01:19,170 --> 00:01:23,040
a simple inverter which takes a signal

31
00:01:23,040 --> 00:01:25,830
and converts it it negates it sometimes

32
00:01:25,830 --> 00:01:27,930
we used to call bubbling it because this

33
00:01:27,930 --> 00:01:30,799
is a bubble here that is the symbol for

34
00:01:30,799 --> 00:01:34,560
true low and so we would actually use it

35
00:01:34,560 --> 00:01:37,320
as a verb but beware that most these

36
00:01:37,320 --> 00:01:40,590
components logic gates can be drawn with

37
00:01:40,590 --> 00:01:42,540
an alternate symbol in this case it's

38
00:01:42,540 --> 00:01:44,369
still an inverter but what I'm saying is

39
00:01:44,369 --> 00:01:46,049
well I was looking for a low to make a

40
00:01:46,049 --> 00:01:47,970
high as opposed to a high to make a low

41
00:01:47,970 --> 00:01:50,100
or sometimes you just use that but this

42
00:01:50,100 --> 00:01:52,590
this is a need for helping you think

43
00:01:52,590 --> 00:01:54,030
about your logic if it gets real

44
00:01:54,030 --> 00:01:57,270
complicated here's the equations for it

45
00:01:57,270 --> 00:01:58,469
and I've shown three different ways to

46
00:01:58,469 --> 00:02:01,049
draw the equation in the old days we

47
00:02:01,049 --> 00:02:03,420
would do this in the middle here under

48
00:02:03,420 --> 00:02:05,310
because it was all hand drafted so we

49
00:02:05,310 --> 00:02:07,020
would make these lines we would actually

50
00:02:07,020 --> 00:02:09,209
sometimes have a line over a line you

51
00:02:09,209 --> 00:02:11,580
know if there was multiple terms in

52
00:02:11,580 --> 00:02:13,800
there and then we started using slide

53
00:02:13,800 --> 00:02:16,170
because it was kind of a character we

54
00:02:16,170 --> 00:02:18,140
could print but then it's kind of also a

55
00:02:18,140 --> 00:02:20,880
special character so sometimes in the

56
00:02:20,880 --> 00:02:24,300
HDLs and stuff you'll see it printed as

57
00:02:24,300 --> 00:02:26,100
a bang you know meaning to invert this

58
00:02:26,100 --> 00:02:28,170
this particular symbol so why is the

59
00:02:28,170 --> 00:02:31,350
inversion of a very simple so one thing

60
00:02:31,350 --> 00:02:35,250
I recommend as you work with your way

61
00:02:35,250 --> 00:02:36,870
through logic because not only think of

62
00:02:36,870 --> 00:02:39,900
it as ones and zeros or highs and lows

63
00:02:39,900 --> 00:02:42,050
but think of it as true that not true

64
00:02:42,050 --> 00:02:44,430
sometimes that that alternate way of

65
00:02:44,430 --> 00:02:45,810
thinking will help you get through a

66
00:02:45,810 --> 00:02:48,060
really thick circuit or you just divorce

67
00:02:48,060 --> 00:02:49,740
yourself from the polarity till the very

68
00:02:49,740 --> 00:02:53,310
last moment especially and FPGAs things

69
00:02:53,310 --> 00:02:56,640
like that so in this case an and is if a

70
00:02:56,640 --> 00:02:59,100
and B are true then Y is true that's

71
00:02:59,100 --> 00:03:01,050
this equation right here in our little

72
00:03:01,050 --> 00:03:03,150
boolean table the way we would write it

73
00:03:03,150 --> 00:03:04,710
in the old days we used to use a dot

74
00:03:04,710 --> 00:03:06,870
right yeah it was hard to read but we

75
00:03:06,870 --> 00:03:09,300
knew it was there well you know as we

76
00:03:09,300 --> 00:03:12,870
went to more less hand-drawn we would

77
00:03:12,870 --> 00:03:16,020
end up with an Asterix and then the

78
00:03:16,020 --> 00:03:18,000
ampersand will fill in and then in the

79
00:03:18,000 --> 00:03:19,890
HDL is a double ampersand because the

80
00:03:19,890 --> 00:03:21,750
single ampersand often means a bitwise

81
00:03:21,750 --> 00:03:26,220
and thing so now there is an alternate

82
00:03:26,220 --> 00:03:28,290
symbol for this if you think about it as

83
00:03:28,290 --> 00:03:30,900
well 1 + 1 is 1 or true in truth true

84
00:03:30,900 --> 00:03:33,989
well we can also draw it as if not true

85
00:03:33,989 --> 00:03:39,150
or 0 or 0 or both zeros will yield

86
00:03:39,150 --> 00:03:42,780
0 so this is an alternate way of drawing

87
00:03:42,780 --> 00:03:44,130
this and I'll show you a little later on

88
00:03:44,130 --> 00:03:45,720
a circuit where I actually did this but

89
00:03:45,720 --> 00:03:47,430
be aware that this is the same thing as

90
00:03:47,430 --> 00:03:50,940
this now an an is a simple case where we

91
00:03:50,940 --> 00:03:54,150
invert the the polarity of what a true

92
00:03:54,150 --> 00:03:58,620
is and and honestly if you're including

93
00:03:58,620 --> 00:04:01,590
a quad and or NAND gate into a design

94
00:04:01,590 --> 00:04:03,390
and you don't know how all your going to

95
00:04:03,390 --> 00:04:05,850
use it I'll throw a NAND in because I

96
00:04:05,850 --> 00:04:07,680
can get an extra functionality and I can

97
00:04:07,680 --> 00:04:09,330
make an inverter if you have just an

98
00:04:09,330 --> 00:04:11,280
gates you'll you can't make an inverter

99
00:04:11,280 --> 00:04:12,660
out of a NAND gate here's one of my

100
00:04:12,660 --> 00:04:15,150
favorite exclusive or squirrely little

101
00:04:15,150 --> 00:04:19,589
sucker LS 86 I think it was here's our

102
00:04:19,589 --> 00:04:21,930
squirrely little hand-drawn signal for

103
00:04:21,930 --> 00:04:23,729
how to make an exclusive or sometimes

104
00:04:23,729 --> 00:04:25,500
they use it as an ampersand sometimes

105
00:04:25,500 --> 00:04:27,330
it's used as a

106
00:04:27,330 --> 00:04:29,310
the little carrots in what we call it

107
00:04:29,310 --> 00:04:32,460
but quite simply it is true only if if

108
00:04:32,460 --> 00:04:34,740
there's a 1 and a 0 or a 1 and a 0 or

109
00:04:34,740 --> 00:04:37,020
true in a not true if both of these are

110
00:04:37,020 --> 00:04:39,599
equal it will not be true so it's

111
00:04:39,599 --> 00:04:42,990
exclusive it's an or but not both now

112
00:04:42,990 --> 00:04:44,669
I'm going to show you something kind of

113
00:04:44,669 --> 00:04:47,520
unique that you can do with an exclusive

114
00:04:47,520 --> 00:04:50,400
or gate and these days where you've got

115
00:04:50,400 --> 00:04:55,080
lots of processors with i/o lines you

116
00:04:55,080 --> 00:04:56,970
know you're generating your own logic a

117
00:04:56,970 --> 00:04:59,430
lot of times we we don't use TTL like we

118
00:04:59,430 --> 00:05:02,009
did in the old days because of the how

119
00:05:02,009 --> 00:05:03,900
many controllers that are out there

120
00:05:03,900 --> 00:05:06,090
these days but here's a way a controller

121
00:05:06,090 --> 00:05:09,780
can change a polarity of a signal let's

122
00:05:09,780 --> 00:05:11,879
say this is a high stream signal from

123
00:05:11,879 --> 00:05:14,159
you know an opto isolator or something

124
00:05:14,159 --> 00:05:16,229
like that and you just want to flip the

125
00:05:16,229 --> 00:05:18,629
polarity what we have is we have the

126
00:05:18,629 --> 00:05:20,340
signal coming in the single out and if

127
00:05:20,340 --> 00:05:22,590
the invert line is low the single end

128
00:05:22,590 --> 00:05:25,259
and the signal out are identical yay but

129
00:05:25,259 --> 00:05:26,940
if we want to invert the polarity for

130
00:05:26,940 --> 00:05:28,699
whatever reason and I've done this

131
00:05:28,699 --> 00:05:31,409
making this high now whenever it's high

132
00:05:31,409 --> 00:05:34,590
and a high and a high it will actually

133
00:05:34,590 --> 00:05:37,050
make a low so we get the exact same

134
00:05:37,050 --> 00:05:39,569
signal only it's an inversion and so

135
00:05:39,569 --> 00:05:41,490
this is a useful little technique using

136
00:05:41,490 --> 00:05:43,590
exclusive or gate now I'm going to show

137
00:05:43,590 --> 00:05:48,060
you some some some output function some

138
00:05:48,060 --> 00:05:51,719
chips open collector and tri-state you

139
00:05:51,719 --> 00:05:53,250
might think these are simply bus driver

140
00:05:53,250 --> 00:05:55,529
output drive capabilities but we find

141
00:05:55,529 --> 00:05:57,719
that we can actually generate a logic

142
00:05:57,719 --> 00:05:59,159
function in them so I want to show those

143
00:05:59,159 --> 00:06:02,879
to you so a tri-state part or a

144
00:06:02,879 --> 00:06:05,460
tri-state output is an output that has

145
00:06:05,460 --> 00:06:07,259
the ability to add another state instead

146
00:06:07,259 --> 00:06:09,750
of true and false or 1 and 0 there's a

147
00:06:09,750 --> 00:06:11,699
sour state called high impedance not

148
00:06:11,699 --> 00:06:14,430
asserted it means the bus is free the

149
00:06:14,430 --> 00:06:16,139
common connection is free to go do

150
00:06:16,139 --> 00:06:19,500
something driven by something else since

151
00:06:19,500 --> 00:06:22,080
it's shared since it's this we call it Z

152
00:06:22,080 --> 00:06:25,620
hi z state we find we can do things in

153
00:06:25,620 --> 00:06:27,629
combination with other chips so drawing

154
00:06:27,629 --> 00:06:29,969
like this a tri-state buffer is a buffer

155
00:06:29,969 --> 00:06:32,639
no bubbles so it's an audit inverter it

156
00:06:32,639 --> 00:06:34,800
has an intern out and enable and so

157
00:06:34,800 --> 00:06:36,719
while the enables asserted whatever

158
00:06:36,719 --> 00:06:38,909
comes in the input goes the output but

159
00:06:38,909 --> 00:06:40,860
when we take the enable away it goes to

160
00:06:40,860 --> 00:06:41,390
hi

161
00:06:41,390 --> 00:06:44,780
it'll float to some value based on

162
00:06:44,780 --> 00:06:45,890
something else

163
00:06:45,890 --> 00:06:47,870
right the impedance of the bus pull ups

164
00:06:47,870 --> 00:06:50,780
capacitance on the bus this is useful if

165
00:06:50,780 --> 00:06:54,200
we have a shared bus like like let's say

166
00:06:54,200 --> 00:06:55,940
memory we want to drive it from two

167
00:06:55,940 --> 00:06:58,460
different things we have an enable

168
00:06:58,460 --> 00:07:00,410
signal and then we'll invert it so when

169
00:07:00,410 --> 00:07:02,360
we assert the enable signal one can

170
00:07:02,360 --> 00:07:04,730
drive it when we deselect it then the

171
00:07:04,730 --> 00:07:08,300
other can drive it so very simple but

172
00:07:08,300 --> 00:07:09,980
it's it's a true logic function

173
00:07:09,980 --> 00:07:12,470
especially in architecting a system a

174
00:07:12,470 --> 00:07:15,490
cousin of this is the open collector and

175
00:07:15,490 --> 00:07:18,590
and an open collector device is a device

176
00:07:18,590 --> 00:07:20,870
that will only pull down using a

177
00:07:20,870 --> 00:07:22,910
transistor quite it quite frankly and

178
00:07:22,910 --> 00:07:25,400
and it has an external passive pull up

179
00:07:25,400 --> 00:07:29,150
and two devices can sit on the same bus

180
00:07:29,150 --> 00:07:31,220
they can never short each other right

181
00:07:31,220 --> 00:07:32,720
because they only pull down downs down

182
00:07:32,720 --> 00:07:35,150
and it's floating it's not down versus

183
00:07:35,150 --> 00:07:38,140
up well we can create an and function

184
00:07:38,140 --> 00:07:41,870
this this will be low as long as a or B

185
00:07:41,870 --> 00:07:43,670
is low because either one will pull it

186
00:07:43,670 --> 00:07:46,520
low and only when neither one is low and

187
00:07:46,520 --> 00:07:48,080
they're both high will this resistor

188
00:07:48,080 --> 00:07:52,100
assert itself and we end up with a high

189
00:07:52,100 --> 00:07:53,780
function so this we create an and

190
00:07:53,780 --> 00:07:56,870
function out of open collector we can

191
00:07:56,870 --> 00:07:59,210
also do this with just basic transistors

192
00:07:59,210 --> 00:08:02,780
to it I've shown a transistor here so

193
00:08:02,780 --> 00:08:04,250
that you know that's the actual device

194
00:08:04,250 --> 00:08:06,170
we're turning on and at some point

195
00:08:06,170 --> 00:08:07,520
during this series I'll show you how to

196
00:08:07,520 --> 00:08:11,000
use transistors for logic okay here is a

197
00:08:11,000 --> 00:08:15,290
more complex this I broke it

198
00:08:15,290 --> 00:08:19,310
here is a more complex logic diagram and

199
00:08:19,310 --> 00:08:21,970
what I'm starting to show is how to

200
00:08:21,970 --> 00:08:24,440
write a logic equation and this is

201
00:08:24,440 --> 00:08:26,180
important later in software and it's

202
00:08:26,180 --> 00:08:28,400
also important later when we

203
00:08:28,400 --> 00:08:30,830
troubleshoot when we create truth tables

204
00:08:30,830 --> 00:08:33,140
but in this equation is quite simple to

205
00:08:33,140 --> 00:08:36,140
read a and since an gate a and B and C

206
00:08:36,140 --> 00:08:44,720
and D or not a I'm sorry or not D and a

207
00:08:44,720 --> 00:08:48,830
and B and C so a and B and C and D or a

208
00:08:48,830 --> 00:08:53,300
and B and C and not D so quite simple

209
00:08:53,300 --> 00:08:54,950
straightforward I've used the an symbols

210
00:08:54,950 --> 00:08:56,130
in this

211
00:08:56,130 --> 00:08:58,410
I'll tell you that there's a problem in

212
00:08:58,410 --> 00:09:00,180
this it looks simple doesn't it but if

213
00:09:00,180 --> 00:09:03,570
you're expecting this to not have a

214
00:09:03,570 --> 00:09:06,750
glitch when this makes a transition it

215
00:09:06,750 --> 00:09:08,970
could it's called a a switching hazard

216
00:09:08,970 --> 00:09:11,010
and quite simply as let's say it's

217
00:09:11,010 --> 00:09:12,840
already asserted it's already true it's

218
00:09:12,840 --> 00:09:15,570
already high and so this is feeding the

219
00:09:15,570 --> 00:09:17,940
or gate at the moment the signal goes

220
00:09:17,940 --> 00:09:21,900
low there's a time it takes for this to

221
00:09:21,900 --> 00:09:25,110
become positive for this to become true

222
00:09:25,110 --> 00:09:26,730
during the meantime this could have

223
00:09:26,730 --> 00:09:29,700
become untrue so even though both of

224
00:09:29,700 --> 00:09:31,170
these are true whether this is high or

225
00:09:31,170 --> 00:09:33,540
low or the some of them is true whether

226
00:09:33,540 --> 00:09:35,670
this high or low a transition here can

227
00:09:35,670 --> 00:09:37,350
cause a glitch on the output sometimes

228
00:09:37,350 --> 00:09:39,780
that matters sometimes it doesn't we're

229
00:09:39,780 --> 00:09:41,280
going to talk later and how to find

230
00:09:41,280 --> 00:09:43,650
these and these get complex but that's

231
00:09:43,650 --> 00:09:45,210
called a switching hazard we're going to

232
00:09:45,210 --> 00:09:47,100
find out how to eliminate them as we use

233
00:09:47,100 --> 00:09:48,840
a lot of logic specially in programmable

234
00:09:48,840 --> 00:09:51,300
logic in one last example there's a you

235
00:09:51,300 --> 00:09:53,400
know the order of operations just like

236
00:09:53,400 --> 00:09:56,100
in math so in this case we've got not a

237
00:09:56,100 --> 00:09:59,400
and B see I bubbled it not a and B and C

238
00:09:59,400 --> 00:10:05,220
and D or E right so we print to see them

239
00:10:05,220 --> 00:10:10,380
so that we got her and F so the order of

240
00:10:10,380 --> 00:10:12,540
operation says that these are ordered

241
00:10:12,540 --> 00:10:15,150
together just as you would in math and

242
00:10:15,150 --> 00:10:17,910
I'll also tell you that when you look at

243
00:10:17,910 --> 00:10:19,680
this stuff I worked for somebody one

244
00:10:19,680 --> 00:10:21,090
time he did this whole bunch of

245
00:10:21,090 --> 00:10:23,730
jellybeans he didn't understand that

246
00:10:23,730 --> 00:10:27,090
this happens faster than this and so

247
00:10:27,090 --> 00:10:29,040
there's a time dimension to this and

248
00:10:29,040 --> 00:10:31,470
it's important this guy will work faster

249
00:10:31,470 --> 00:10:33,060
than this guy assert them all at the

250
00:10:33,060 --> 00:10:36,000
same time and one asserts and the others

251
00:10:36,000 --> 00:10:38,760
fault so be be aware that time is

252
00:10:38,760 --> 00:10:40,650
involved it's three-dimensional not

253
00:10:40,650 --> 00:10:43,350
two-dimensional now remember when I said

254
00:10:43,350 --> 00:10:45,990
you could draw a NAND gate as this silly

255
00:10:45,990 --> 00:10:49,110
creature here which is low or low is a

256
00:10:49,110 --> 00:10:51,780
low and basically I'm targeting this

257
00:10:51,780 --> 00:10:53,190
line instead of these other three

258
00:10:53,190 --> 00:10:55,950
instead of this line here actually I'm

259
00:10:55,950 --> 00:10:57,630
targeting these three lines other than

260
00:10:57,630 --> 00:10:59,910
this line here well here's an example I

261
00:10:59,910 --> 00:11:02,490
took from an old design where D Rams

262
00:11:02,490 --> 00:11:04,950
have a single cold-cast column address

263
00:11:04,950 --> 00:11:07,440
strobe it's it's a low signal it's a low

264
00:11:07,440 --> 00:11:08,880
going signal it's a low

265
00:11:08,880 --> 00:11:11,430
strobing signal it's an important low

266
00:11:11,430 --> 00:11:14,160
signal you think about it as a low or as

267
00:11:14,160 --> 00:11:15,810
I don't even think it was not true I

268
00:11:15,810 --> 00:11:18,960
think of is and no in this case so if I

269
00:11:18,960 --> 00:11:21,330
need to make two of these from one okay

270
00:11:21,330 --> 00:11:23,790
it's cats it's a low it's sorted love

271
00:11:23,790 --> 00:11:26,310
all that good stuff then I basically if

272
00:11:26,310 --> 00:11:28,050
I want a very fast delay where I only

273
00:11:28,050 --> 00:11:30,150
have one gate then there's only one gate

274
00:11:30,150 --> 00:11:32,520
logic I can use to propagate or select a

275
00:11:32,520 --> 00:11:35,490
low to low in one nice clean motion and

276
00:11:35,490 --> 00:11:38,430
not going through a medium integration

277
00:11:38,430 --> 00:11:41,820
chip and that is actually turned out to

278
00:11:41,820 --> 00:11:44,610
be an or gate but what I'm saying is low

279
00:11:44,610 --> 00:11:47,940
and a select low so if I want to select

280
00:11:47,940 --> 00:11:50,910
the low caste low and low gives me my

281
00:11:50,910 --> 00:11:53,040
caste so the second that bangs disel

282
00:11:53,040 --> 00:11:56,610
bang and so this really helps in the in

283
00:11:56,610 --> 00:11:58,590
the way of thinking where the important

284
00:11:58,590 --> 00:12:01,140
signal is this is more a mental trick

285
00:12:01,140 --> 00:12:02,700
especially for when it's late at night

286
00:12:02,700 --> 00:12:06,270
and you've run out of coffee so here is

287
00:12:06,270 --> 00:12:08,910
a we can also use remember I was talking

288
00:12:08,910 --> 00:12:10,740
about an open collector being an and

289
00:12:10,740 --> 00:12:13,560
situation well that's not restricted to

290
00:12:13,560 --> 00:12:16,920
just digital analog be logical can be

291
00:12:16,920 --> 00:12:19,440
involved in logic and here I have I've

292
00:12:19,440 --> 00:12:22,320
got 1/2 of an lm339 open collector

293
00:12:22,320 --> 00:12:25,290
comparator and if either of these

294
00:12:25,290 --> 00:12:28,110
outputs is asserted or true or tripped

295
00:12:28,110 --> 00:12:30,300
this signal will be low both of these

296
00:12:30,300 --> 00:12:32,040
have to have their conditions met for

297
00:12:32,040 --> 00:12:34,350
this signal to go high in this case I've

298
00:12:34,350 --> 00:12:37,740
said well V out will be true if VN is

299
00:12:37,740 --> 00:12:42,480
less than V a here's V a so the end the

300
00:12:42,480 --> 00:12:44,610
voltage in has to be less than that he

301
00:12:44,610 --> 00:12:47,430
says okay I've let it go high only if

302
00:12:47,430 --> 00:12:49,080
this guy's willing to let it go Hynes

303
00:12:49,080 --> 00:12:52,950
and B in is greater than V B so it means

304
00:12:52,950 --> 00:12:54,840
we have to be less than V a and greater

305
00:12:54,840 --> 00:12:57,630
than V B so we've created a window this

306
00:12:57,630 --> 00:12:59,940
is a window comparator and at both times

307
00:12:59,940 --> 00:13:01,590
then that he says I'm willing to let it

308
00:13:01,590 --> 00:13:03,660
go hi I'm willing to let it go hi boom

309
00:13:03,660 --> 00:13:06,120
your window comparator trips we created

310
00:13:06,120 --> 00:13:07,740
a logical true single you can actually

311
00:13:07,740 --> 00:13:09,480
puts us in a gate in the right condition

312
00:13:09,480 --> 00:13:12,960
CMOS or something based on an analog

313
00:13:12,960 --> 00:13:14,640
comparison finally I want to show that

314
00:13:14,640 --> 00:13:18,720
you can create logic without using gates

315
00:13:18,720 --> 00:13:20,490
exactly like you thought they might need

316
00:13:20,490 --> 00:13:22,170
to be used I used to do this trick all

317
00:13:22,170 --> 00:13:22,350
the

318
00:13:22,350 --> 00:13:25,350
time but whenever I get meeting a lot

319
00:13:25,350 --> 00:13:27,060
piece of logic I'd sit down with data

320
00:13:27,060 --> 00:13:29,670
books see data books I know nobody used

321
00:13:29,670 --> 00:13:31,680
Dave Lux these days but data books great

322
00:13:31,680 --> 00:13:33,630
have all the gates right there for me

323
00:13:33,630 --> 00:13:34,950
you can go right through the list of

324
00:13:34,950 --> 00:13:37,110
them but I'd sit down and I'd find the

325
00:13:37,110 --> 00:13:38,700
logic I wanted even if that wasn't

326
00:13:38,700 --> 00:13:41,700
necessarily the logic that was planned

327
00:13:41,700 --> 00:13:46,830
so in this case if I want a a a logic of

328
00:13:46,830 --> 00:13:51,420
a low B high C low or true false false

329
00:13:51,420 --> 00:13:54,570
true false I can create that with an

330
00:13:54,570 --> 00:13:57,210
Alice 139 which is a dual two-bit

331
00:13:57,210 --> 00:13:59,640
decoder well if I look at the the logic

332
00:13:59,640 --> 00:14:01,170
signals here's what's inside so there's

333
00:14:01,170 --> 00:14:03,720
a lot to choose from I can find when a

334
00:14:03,720 --> 00:14:05,910
is low and and and B is high I get a

335
00:14:05,910 --> 00:14:08,030
seat out of one of these outputs and

336
00:14:08,030 --> 00:14:10,560
it's actually got an enabled so if I

337
00:14:10,560 --> 00:14:12,360
wanted to add one more column and add a

338
00:14:12,360 --> 00:14:15,180
zero I can make it zero select inputs

339
00:14:15,180 --> 00:14:18,600
and in this case I get a strange

340
00:14:18,600 --> 00:14:20,760
function I can do with something like a

341
00:14:20,760 --> 00:14:22,860
decoder nice cheap part leaves me half

342
00:14:22,860 --> 00:14:24,840
available for my next strange function

343
00:14:24,840 --> 00:14:26,520
I'm going to stop there for the series

344
00:14:26,520 --> 00:14:30,090
on on logic but that of course that was

345
00:14:30,090 --> 00:14:31,620
the basics but you saw a few little

346
00:14:31,620 --> 00:14:33,630
tricks in there and you saw a static

347
00:14:33,630 --> 00:14:35,580
switching hazard and that's where we're

348
00:14:35,580 --> 00:14:36,720
going to pick up we're going to talk

349
00:14:36,720 --> 00:14:39,000
about karnaugh maps I mispronounced it

350
00:14:39,000 --> 00:14:40,860
excuse me karnaugh however you want to

351
00:14:40,860 --> 00:14:44,970
hear and boolean tables and logic truth

352
00:14:44,970 --> 00:14:47,250
tables and if we do it right we can go

353
00:14:47,250 --> 00:14:48,930
in there and dentists I when when things

354
00:14:48,930 --> 00:14:52,950
switching cause undesirable results I'll

355
00:14:52,950 --> 00:14:54,960
talk more about electrical properties

356
00:14:54,960 --> 00:14:56,700
about unknowns I only talked about highs

357
00:14:56,700 --> 00:14:57,960
and lows this time I'm going to talk

358
00:14:57,960 --> 00:15:00,570
about unknowns and then we're going to

359
00:15:00,570 --> 00:15:02,490
use that we're going to get into some

360
00:15:02,490 --> 00:15:06,420
PLD type software and translate

361
00:15:06,420 --> 00:15:09,690
equations into programmable logic it's a

362
00:15:09,690 --> 00:15:11,640
basis it's it's a foundation you can

363
00:15:11,640 --> 00:15:13,200
take that all the way up to Vera logs

364
00:15:13,200 --> 00:15:14,880
and the other things if you want or VHDL

365
00:15:14,880 --> 00:15:18,060
s but we're going to start with the pl

366
00:15:18,060 --> 00:15:20,190
DS and maybe there's even some PL DS we

367
00:15:20,190 --> 00:15:22,470
can still use in program that might be

368
00:15:22,470 --> 00:15:24,210
useful in your little projects you know

369
00:15:24,210 --> 00:15:26,720
the little Arduino H thinks maybe not

370
00:15:26,720 --> 00:15:30,810
we'll see so bill heard from hackaday of

371
00:15:30,810 --> 00:15:33,180
basic logic ones out of the way so now

372
00:15:33,180 --> 00:15:35,700
clear sailing for some logic tables

373
00:15:35,700 --> 00:15:36,209
don't

374
00:15:36,209 --> 00:15:39,240
switching hazards and the propagation of

375
00:15:39,240 --> 00:15:42,679
unknowns have a good day

