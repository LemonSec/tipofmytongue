1
00:00:00,000 --> 00:00:02,129
bill heard from hackaday today we're

2
00:00:02,129 --> 00:00:03,540
going to be playing with direct digital

3
00:00:03,540 --> 00:00:06,779
synthesis otherwise known as DDS and I

4
00:00:06,779 --> 00:00:08,370
guarantee you my mind is going to wander

5
00:00:08,370 --> 00:00:10,700
a bit on this so let's get started

6
00:00:10,700 --> 00:00:13,799
direct digital synthesis is where we

7
00:00:13,799 --> 00:00:17,900
take a digital signal digital value and

8
00:00:17,900 --> 00:00:20,400
we run it into some kind of analog

9
00:00:20,400 --> 00:00:22,949
process some kind of digital die analog

10
00:00:22,949 --> 00:00:25,740
process and we create an analogue value

11
00:00:25,740 --> 00:00:28,890
from it the simplest version of this is

12
00:00:28,890 --> 00:00:32,729
is a counter okay and so I'm going to

13
00:00:32,729 --> 00:00:35,610
jump over to my I've got my altaira

14
00:00:35,610 --> 00:00:37,860
screen open and I'm going to create a

15
00:00:37,860 --> 00:00:40,980
counter using the CPL D board we saw

16
00:00:40,980 --> 00:00:43,170
last time you could do this in a

17
00:00:43,170 --> 00:00:45,600
processor and count you could use a

18
00:00:45,600 --> 00:00:47,100
counter that's built into the process

19
00:00:47,100 --> 00:00:49,260
you use timers built in the processor

20
00:00:49,260 --> 00:00:51,570
you can use straight hardware and no CPL

21
00:00:51,570 --> 00:00:54,059
d lots of ways but since we're going to

22
00:00:54,059 --> 00:00:56,309
be doing lots of things today I'm gonna

23
00:00:56,309 --> 00:00:58,350
be doing it with programmable logic so

24
00:00:58,350 --> 00:01:00,180
let me show you the setup here here's my

25
00:01:00,180 --> 00:01:03,059
Altera screen this is cordis this is the

26
00:01:03,059 --> 00:01:05,760
free version the in this case if you

27
00:01:05,760 --> 00:01:07,530
remember last time I made a counter

28
00:01:07,530 --> 00:01:10,409
myself just to show you how quick it was

29
00:01:10,409 --> 00:01:15,689
to - to do one in ver log in this case

30
00:01:15,689 --> 00:01:17,729
now I've gone ahead and I've used to

31
00:01:17,729 --> 00:01:19,290
build in counter called an L p.m.

32
00:01:19,290 --> 00:01:22,320
counter our first rule with CPLDs and

33
00:01:22,320 --> 00:01:24,630
FPGAs use the global clock

34
00:01:24,630 --> 00:01:26,970
don't make your own don't try and take

35
00:01:26,970 --> 00:01:28,320
the output of something and run it into

36
00:01:28,320 --> 00:01:30,329
the clock of something so that's exactly

37
00:01:30,329 --> 00:01:32,340
what we got here I've got my input clock

38
00:01:32,340 --> 00:01:34,920
going to the global clock and I simply

39
00:01:34,920 --> 00:01:36,630
are taking my cues out and I'm running

40
00:01:36,630 --> 00:01:39,720
them to the pins I predefined and I

41
00:01:39,720 --> 00:01:42,030
preset it to be an up counter and we're

42
00:01:42,030 --> 00:01:44,220
going to compile and we're going to

43
00:01:44,220 --> 00:01:45,960
shoot it over to the bench just that

44
00:01:45,960 --> 00:01:48,060
quick as I said we're back over at the

45
00:01:48,060 --> 00:01:50,070
bench I'm going to show you what we did

46
00:01:50,070 --> 00:01:52,860
here before I load this up I want to

47
00:01:52,860 --> 00:01:54,450
show you exactly what we're going to do

48
00:01:54,450 --> 00:01:56,909
so here's the counter you just saw me

49
00:01:56,909 --> 00:01:59,880
working on over on the L Tara and what

50
00:01:59,880 --> 00:02:02,009
we're going to do is we're going to make

51
00:02:02,009 --> 00:02:05,310
that counter feed a what's called an R -

52
00:02:05,310 --> 00:02:09,239
R resistor ladder or network or however

53
00:02:09,239 --> 00:02:11,099
you want to say but it's bunch of

54
00:02:11,099 --> 00:02:12,840
resistors and that's all we're going to

55
00:02:12,840 --> 00:02:13,740
make a digital

56
00:02:13,740 --> 00:02:16,020
analog converter out of just a count

57
00:02:16,020 --> 00:02:19,500
value going into these resistors and

58
00:02:19,500 --> 00:02:20,940
then measuring this voltage out we're

59
00:02:20,940 --> 00:02:22,740
actually going throw it on the scope now

60
00:02:22,740 --> 00:02:26,100
this assumes that these outputs act kind

61
00:02:26,100 --> 00:02:28,560
of linear in in that they probably go to

62
00:02:28,560 --> 00:02:31,290
a very similar voltage each and have

63
00:02:31,290 --> 00:02:33,150
very similar outputs this is just down

64
00:02:33,150 --> 00:02:34,740
and dirty it's not the most accurate

65
00:02:34,740 --> 00:02:36,450
thing in the world but where it's

66
00:02:36,450 --> 00:02:38,340
synthesizing a signal not making an

67
00:02:38,340 --> 00:02:40,680
accurate analog to digital converter and

68
00:02:40,680 --> 00:02:43,320
these days CMOS and the parts we have

69
00:02:43,320 --> 00:02:45,690
they actually do do this pretty well and

70
00:02:45,690 --> 00:02:47,760
it's actually selectable in the part to

71
00:02:47,760 --> 00:02:50,430
some of the parameters so let's load

72
00:02:50,430 --> 00:02:53,280
this up here's going to be the counter

73
00:02:53,280 --> 00:02:56,550
and here's our little r2 our network and

74
00:02:56,550 --> 00:02:58,980
I'll get you on the scope here all right

75
00:02:58,980 --> 00:03:01,170
so I've programmed the CPL D and I've

76
00:03:01,170 --> 00:03:03,210
powered it up here I've got my general

77
00:03:03,210 --> 00:03:04,890
purpose power supply in this case I'm

78
00:03:04,890 --> 00:03:08,100
making three volts that goes into the

79
00:03:08,100 --> 00:03:09,690
one point eight bolt is what the core

80
00:03:09,690 --> 00:03:11,490
this runs off of and then three volts

81
00:03:11,490 --> 00:03:12,840
for the circuitry we're going to be

82
00:03:12,840 --> 00:03:15,510
looking at little programmer and then

83
00:03:15,510 --> 00:03:17,160
I'm taking those outputs right to the

84
00:03:17,160 --> 00:03:19,280
resistors that we saw that's these and

85
00:03:19,280 --> 00:03:21,660
here's what we get here's where the

86
00:03:21,660 --> 00:03:24,300
counter starts from zero and just

87
00:03:24,300 --> 00:03:26,940
increments all the way up to FF in this

88
00:03:26,940 --> 00:03:29,250
case and then starts over so if you were

89
00:03:29,250 --> 00:03:30,720
to look at this very carefully there's

90
00:03:30,720 --> 00:03:32,730
two hundred and fifty five distinct

91
00:03:32,730 --> 00:03:35,040
values but running at speed it just kind

92
00:03:35,040 --> 00:03:37,230
of molds together and if I had to I

93
00:03:37,230 --> 00:03:39,480
could stick a capacitor on here to make

94
00:03:39,480 --> 00:03:41,640
this even smoother so here's our first

95
00:03:41,640 --> 00:03:45,840
waveform we've created a ramp wave out

96
00:03:45,840 --> 00:03:48,030
of just a counter and some resistors

97
00:03:48,030 --> 00:03:51,030
there's actually a second wave we've

98
00:03:51,030 --> 00:03:53,070
already made - it's really the even

99
00:03:53,070 --> 00:03:54,870
lower hanging fruit than the ramp wave

100
00:03:54,870 --> 00:03:57,750
let me show that to you also I am doing

101
00:03:57,750 --> 00:04:01,830
here is I am adding my signal of my next

102
00:04:01,830 --> 00:04:03,810
probe my scope probe right to the

103
00:04:03,810 --> 00:04:05,490
highest digit bit

104
00:04:05,490 --> 00:04:08,610
it was d7 so in theory it's on half the

105
00:04:08,610 --> 00:04:11,520
time and it's off half the time and here

106
00:04:11,520 --> 00:04:13,860
it is when the counter starts at zero

107
00:04:13,860 --> 00:04:17,250
the it starts counting up you can see

108
00:04:17,250 --> 00:04:19,500
the lower bits but right at halfway when

109
00:04:19,500 --> 00:04:23,580
it goes from 127 128 d7 flips and that

110
00:04:23,580 --> 00:04:25,200
gives us a nice square wave so now I've

111
00:04:25,200 --> 00:04:27,630
generated two distinct way for

112
00:04:27,630 --> 00:04:30,780
with just a counter okay I'm going to

113
00:04:30,780 --> 00:04:32,820
take advantage of the fact that iím

114
00:04:32,820 --> 00:04:35,700
using a CPL D a complex programmable

115
00:04:35,700 --> 00:04:38,310
logic device and so what I've done is

116
00:04:38,310 --> 00:04:41,100
I've gone into my counter and I've told

117
00:04:41,100 --> 00:04:43,140
it to turn on some more features again

118
00:04:43,140 --> 00:04:45,090
this was the kind of counter I used with

119
00:04:45,090 --> 00:04:48,150
the the library mode here and so I've

120
00:04:48,150 --> 00:04:51,420
turned on and as the ability to reset it

121
00:04:51,420 --> 00:04:55,140
and I've turned on the ability to change

122
00:04:55,140 --> 00:04:58,350
the direction so real quick just by

123
00:04:58,350 --> 00:04:59,790
doing the direction change and what I

124
00:04:59,790 --> 00:05:02,720
did is I put in a toggle flip-flop and

125
00:05:02,720 --> 00:05:05,670
alls I do is I catch the positive edge

126
00:05:05,670 --> 00:05:08,250
and if you remember from last time we

127
00:05:08,250 --> 00:05:10,620
don't run to make an edge we don't run

128
00:05:10,620 --> 00:05:13,140
it into the clock of something we run it

129
00:05:13,140 --> 00:05:16,350
into into the flip-flop and we catch it

130
00:05:16,350 --> 00:05:18,180
where the first one that's high well the

131
00:05:18,180 --> 00:05:20,340
last one is still low that's our edge

132
00:05:20,340 --> 00:05:24,120
and we can see the effect here and now

133
00:05:24,120 --> 00:05:26,430
you see that the the ramp signal

134
00:05:26,430 --> 00:05:29,040
actually starts high and counts down low

135
00:05:29,040 --> 00:05:32,100
so if you're keeping track we just made

136
00:05:32,100 --> 00:05:35,190
another waveform it's a lot like the

137
00:05:35,190 --> 00:05:36,930
other one but we've made another way

138
00:05:36,930 --> 00:05:40,850
form just by adding a couple flip-flops

139
00:05:40,850 --> 00:05:44,400
as you can see I've started to add some

140
00:05:44,400 --> 00:05:47,360
circuitry here in this case I've got a

141
00:05:47,360 --> 00:05:50,910
comparator and a voltage source and all

142
00:05:50,910 --> 00:05:53,430
that this is just a variable resistor

143
00:05:53,430 --> 00:05:55,800
that I can adjust feeding into the

144
00:05:55,800 --> 00:05:58,170
comparator and what that does is that

145
00:05:58,170 --> 00:06:01,760
allows me to create a voltage with the

146
00:06:01,760 --> 00:06:05,340
DDS using my R to R and then compare it

147
00:06:05,340 --> 00:06:07,020
to an outside voltage and when I make

148
00:06:07,020 --> 00:06:08,490
this voltage equal to the outside

149
00:06:08,490 --> 00:06:11,310
voltage the comparator will trip well

150
00:06:11,310 --> 00:06:14,010
that means I can using just some outputs

151
00:06:14,010 --> 00:06:16,680
in one input if I watch that comparator

152
00:06:16,680 --> 00:06:18,330
that means I can figure out what an

153
00:06:18,330 --> 00:06:20,730
external voltage is by using digital

154
00:06:20,730 --> 00:06:23,370
outputs and an input and you can do this

155
00:06:23,370 --> 00:06:25,050
you know like on the arduino z-- and

156
00:06:25,050 --> 00:06:27,600
those kind of things use just a couple

157
00:06:27,600 --> 00:06:30,150
bits perhaps to figure out what your

158
00:06:30,150 --> 00:06:32,730
voltage is you you know if you're

159
00:06:32,730 --> 00:06:34,290
monitoring a battery voltage or

160
00:06:34,290 --> 00:06:36,990
something like that here we see the

161
00:06:36,990 --> 00:06:39,720
voltage that i've hooked up to it is the

162
00:06:39,720 --> 00:06:41,100
green line

163
00:06:41,100 --> 00:06:42,690
the voltage that we're generating with

164
00:06:42,690 --> 00:06:45,840
the r2r ladder is the yellow so you can

165
00:06:45,840 --> 00:06:48,630
see then I can vary the green within you

166
00:06:48,630 --> 00:06:50,640
know compared to the yellow and the

167
00:06:50,640 --> 00:06:54,000
purple is our comparator so as the

168
00:06:54,000 --> 00:06:57,120
voltage gets greater and greater you'll

169
00:06:57,120 --> 00:06:59,220
see that it takes longer and longer for

170
00:06:59,220 --> 00:07:01,980
it to trip the purple at the top or if

171
00:07:01,980 --> 00:07:03,750
it goes all the way down the ground or

172
00:07:03,750 --> 00:07:06,240
near ground that it spends most of its

173
00:07:06,240 --> 00:07:08,400
time in a tripped condition finally here

174
00:07:08,400 --> 00:07:09,600
I've added just a little bit of

175
00:07:09,600 --> 00:07:11,760
circuitry I've got a set reset flip-flop

176
00:07:11,760 --> 00:07:13,740
on the up-down I've added a comparator

177
00:07:13,740 --> 00:07:16,530
I've add an external signal and I'm

178
00:07:16,530 --> 00:07:18,000
going to do a couple of things with

179
00:07:18,000 --> 00:07:20,820
those so you know again what you don't

180
00:07:20,820 --> 00:07:23,100
see is I hit compile and then I download

181
00:07:23,100 --> 00:07:26,340
it to the PLD and let's see what this is

182
00:07:26,340 --> 00:07:28,830
so if you're keeping track what I did I

183
00:07:28,830 --> 00:07:33,330
took the counter and I made it when it

184
00:07:33,330 --> 00:07:35,250
counts all the way up it turns around

185
00:07:35,250 --> 00:07:38,460
and counts down so if you are keeping

186
00:07:38,460 --> 00:07:38,970
track

187
00:07:38,970 --> 00:07:41,400
here's another waveform I'm doing with

188
00:07:41,400 --> 00:07:44,220
again just some outputs and some

189
00:07:44,220 --> 00:07:46,590
resistors and finally one last thing

190
00:07:46,590 --> 00:07:49,440
before I put the comparator away is if

191
00:07:49,440 --> 00:07:53,430
you take that triangle wave we are

192
00:07:53,430 --> 00:07:56,610
creating and you you do it based on the

193
00:07:56,610 --> 00:07:58,710
comparator which says as soon as you get

194
00:07:58,710 --> 00:08:00,330
to the voltage go ahead and turn around

195
00:08:00,330 --> 00:08:02,670
and go back the other way what you end

196
00:08:02,670 --> 00:08:06,090
up doing is creating a voltage to

197
00:08:06,090 --> 00:08:10,550
frequency converter so let's take a look

198
00:08:10,550 --> 00:08:12,990
it's not great you know it's got some

199
00:08:12,990 --> 00:08:15,510
issues so up to here I've just been

200
00:08:15,510 --> 00:08:17,550
playing games with with some of the

201
00:08:17,550 --> 00:08:21,450
circuitry that drives DDS the real part

202
00:08:21,450 --> 00:08:25,470
of direct digital synthesis is a lookup

203
00:08:25,470 --> 00:08:28,680
table is is ROM or Ram if it's Ram you

204
00:08:28,680 --> 00:08:31,230
can actually sample into it record it

205
00:08:31,230 --> 00:08:33,210
and then play it back if it's ROM you

206
00:08:33,210 --> 00:08:38,010
can pre pre record it or pre calculate

207
00:08:38,010 --> 00:08:41,849
it and you can do things you you can't

208
00:08:41,849 --> 00:08:45,420
do any other way by doing the DDS so

209
00:08:45,420 --> 00:08:47,130
what I've done here I'm going to show

210
00:08:47,130 --> 00:08:48,960
you that I've added a lookup table to

211
00:08:48,960 --> 00:08:51,660
the design and we're going to go to a

212
00:08:51,660 --> 00:08:53,760
sine wave then here's what the circuitry

213
00:08:53,760 --> 00:08:54,900
looks like moving for

214
00:08:54,900 --> 00:08:58,080
I had to swap out my CPL deboard and I

215
00:08:58,080 --> 00:09:01,200
just dropped in some cheap FPGA demo

216
00:09:01,200 --> 00:09:03,690
board in this case it's a cyclone too

217
00:09:03,690 --> 00:09:07,170
and I I had to do that because the CPL D

218
00:09:07,170 --> 00:09:10,440
just did not have good built-in ROM or

219
00:09:10,440 --> 00:09:13,650
Ram capabilities in my case I could do I

220
00:09:13,650 --> 00:09:15,690
could implement a ROM but I couldn't

221
00:09:15,690 --> 00:09:18,240
preload it with an initialization value

222
00:09:18,240 --> 00:09:21,060
and I want to initialize it with the

223
00:09:21,060 --> 00:09:23,370
value to draw a sine wave here's the

224
00:09:23,370 --> 00:09:25,920
design again I had gone in and I changed

225
00:09:25,920 --> 00:09:29,100
the device assignment to be an FPGA this

226
00:09:29,100 --> 00:09:31,380
is cold I mean the whole reason to do

227
00:09:31,380 --> 00:09:34,020
programmable logic is exactly this kind

228
00:09:34,020 --> 00:09:36,960
of thing to read target and here's our

229
00:09:36,960 --> 00:09:38,730
counter we were driving directly into

230
00:09:38,730 --> 00:09:41,340
the r2r ladder before and now there's a

231
00:09:41,340 --> 00:09:43,020
lookup table and from and we used to use

232
00:09:43,020 --> 00:09:44,880
look-up tables all the time to make

233
00:09:44,880 --> 00:09:46,440
color look-up tables in the past way

234
00:09:46,440 --> 00:09:49,020
this is a call to sound lookup table if

235
00:09:49,020 --> 00:09:52,050
you want or a just a linear 2d waveform

236
00:09:52,050 --> 00:09:54,210
lookup table also it is the counter

237
00:09:54,210 --> 00:09:57,030
going in and I had created this with the

238
00:09:57,030 --> 00:09:59,160
wizard that allows me to specify the

239
00:09:59,160 --> 00:10:01,140
depth of number of blocks and how to

240
00:10:01,140 --> 00:10:03,420
implement it and everything and then it

241
00:10:03,420 --> 00:10:06,540
allowed me to specify a file for its

242
00:10:06,540 --> 00:10:08,760
initialization and in my case I had

243
00:10:08,760 --> 00:10:11,910
created a file using trigonometry to

244
00:10:11,910 --> 00:10:14,940
generate the the the values for the sine

245
00:10:14,940 --> 00:10:15,540
wave

246
00:10:15,540 --> 00:10:20,280
so here's let's get out of here and so

247
00:10:20,280 --> 00:10:23,190
out of counter into lookup table out of

248
00:10:23,190 --> 00:10:25,140
lookup table to the same pins we were

249
00:10:25,140 --> 00:10:27,540
doing the R to R let's check the results

250
00:10:27,540 --> 00:10:30,300
here's our sine wave and if you were to

251
00:10:30,300 --> 00:10:32,190
look you can see there's little itty

252
00:10:32,190 --> 00:10:33,900
bitty jaggies in there because I only

253
00:10:33,900 --> 00:10:35,810
use two eight bits to make the sine wave

254
00:10:35,810 --> 00:10:38,220
but to kind of prove this isn't just one

255
00:10:38,220 --> 00:10:40,560
of my signal generators turned on if I

256
00:10:40,560 --> 00:10:42,960
remove some of the bits you see that the

257
00:10:42,960 --> 00:10:44,850
waveform changes in new and interesting

258
00:10:44,850 --> 00:10:50,010
ways and this is just quite simply where

259
00:10:50,010 --> 00:10:52,140
the tables not getting every not getting

260
00:10:52,140 --> 00:10:54,390
the right data bits anymore and there's

261
00:10:54,390 --> 00:10:56,880
my sine wave back let me show you one

262
00:10:56,880 --> 00:10:58,920
last waveform it's it's it's kind of

263
00:10:58,920 --> 00:11:02,160
nonsensical but it's something we can do

264
00:11:02,160 --> 00:11:04,440
with DDS so let me show this to you so

265
00:11:04,440 --> 00:11:07,270
here in the just for fun Department

266
00:11:07,270 --> 00:11:10,480
I made a signal that does two pulses of

267
00:11:10,480 --> 00:11:12,850
square wave two pulses of triangle wave

268
00:11:12,850 --> 00:11:16,570
and then two sine waves so let's see you

269
00:11:16,570 --> 00:11:19,120
do that with your your regular frequency

270
00:11:19,120 --> 00:11:22,930
generator finally let me show you the

271
00:11:22,930 --> 00:11:24,880
kind of thing I would use to make DDS if

272
00:11:24,880 --> 00:11:27,250
I were doing a new design and didn't

273
00:11:27,250 --> 00:11:28,990
have a real reason to run analog to

274
00:11:28,990 --> 00:11:29,920
digital converter

275
00:11:29,920 --> 00:11:31,630
I'm sorry digital to analog converters

276
00:11:31,630 --> 00:11:34,930
and blow-off pins and FPGA and resistors

277
00:11:34,930 --> 00:11:36,970
and that kind of thing and quite simply

278
00:11:36,970 --> 00:11:39,940
I would look at the available DDS

279
00:11:39,940 --> 00:11:42,730
specific chips here's one on the bench

280
00:11:42,730 --> 00:11:46,150
this is an analog devices 9 8 3 7 and

281
00:11:46,150 --> 00:11:48,190
it's right here it's just a small little

282
00:11:48,190 --> 00:11:50,830
critter right there and I I grabbed this

283
00:11:50,830 --> 00:11:52,390
one just because it was sitting in a

284
00:11:52,390 --> 00:11:54,070
development board do you know me I like

285
00:11:54,070 --> 00:11:56,620
development these these small

286
00:11:56,620 --> 00:11:58,660
development environments for playing

287
00:11:58,660 --> 00:12:01,780
around and you know again it speaks I

288
00:12:01,780 --> 00:12:03,310
squared see you don't have to blow off

289
00:12:03,310 --> 00:12:05,710
pins three wires and you've got your DDS

290
00:12:05,710 --> 00:12:07,600
output so let me show you the

291
00:12:07,600 --> 00:12:10,390
capabilities of this up on the scope

292
00:12:10,390 --> 00:12:12,430
here's the little application that

293
00:12:12,430 --> 00:12:14,800
shipped with the little evaluation board

294
00:12:14,800 --> 00:12:17,800
here and here's the output on the scope

295
00:12:17,800 --> 00:12:19,630
and we can do a lot of things but

296
00:12:19,630 --> 00:12:21,490
basically this is about storing two

297
00:12:21,490 --> 00:12:24,550
different frequencies and allowing you

298
00:12:24,550 --> 00:12:26,200
to switch between them for example you

299
00:12:26,200 --> 00:12:28,600
could do a frequency shift keying where

300
00:12:28,600 --> 00:12:31,180
you jump from one frequency to the other

301
00:12:31,180 --> 00:12:33,520
or phase shift keying where actually the

302
00:12:33,520 --> 00:12:35,590
signal just jumps 90 degrees phase shift

303
00:12:35,590 --> 00:12:37,480
and back to zero that kind of thing just

304
00:12:37,480 --> 00:12:40,720
like I did earlier you can make a ramp

305
00:12:40,720 --> 00:12:42,640
wave out of it or what not but here

306
00:12:42,640 --> 00:12:45,100
here's the ability to switch between the

307
00:12:45,100 --> 00:12:46,960
two frequencies just with the toggle

308
00:12:46,960 --> 00:12:49,120
switch and you can also do sweep

309
00:12:49,120 --> 00:12:50,980
generation that kind of thing add

310
00:12:50,980 --> 00:12:54,670
anything to this that does SPI you know

311
00:12:54,670 --> 00:12:56,680
the serial protocol the three wire

312
00:12:56,680 --> 00:12:59,530
serial protocol and you can make your

313
00:12:59,530 --> 00:13:01,960
own functional test generator you know

314
00:13:01,960 --> 00:13:04,150
and you can actually sweep a frequency

315
00:13:04,150 --> 00:13:06,670
from high to low and if you look at that

316
00:13:06,670 --> 00:13:08,230
on the scope and trigger right you'll

317
00:13:08,230 --> 00:13:10,270
see the frequency response of something

318
00:13:10,270 --> 00:13:12,370
so we'll we'll do that in a different a

319
00:13:12,370 --> 00:13:15,280
video that's more about certain kinds of

320
00:13:15,280 --> 00:13:17,320
testing so that's it for this video

321
00:13:17,320 --> 00:13:20,260
about direct digital synthesis DDS which

322
00:13:20,260 --> 00:13:20,560
is

323
00:13:20,560 --> 00:13:21,940
really a name for what we've been doing

324
00:13:21,940 --> 00:13:23,770
for many years which is just mixing some

325
00:13:23,770 --> 00:13:25,510
stuff together half in the analog have

326
00:13:25,510 --> 00:13:27,700
from the digital to get what we need in

327
00:13:27,700 --> 00:13:29,650
the old days as a matter of fact when we

328
00:13:29,650 --> 00:13:32,410
needed to make a sine wave and and the

329
00:13:32,410 --> 00:13:34,540
the Proms the eeproms

330
00:13:34,540 --> 00:13:37,029
or are slow and expensive we didn't even

331
00:13:37,029 --> 00:13:39,310
map the whole sine wave we you if you

332
00:13:39,310 --> 00:13:41,050
looked at a sine wave you could hey I

333
00:13:41,050 --> 00:13:43,089
could map the positive half and the

334
00:13:43,089 --> 00:13:46,150
negative half right so I'll just use one

335
00:13:46,150 --> 00:13:48,430
in one half of a sine wave and then I'll

336
00:13:48,430 --> 00:13:50,110
flip the sign and then you look at the

337
00:13:50,110 --> 00:13:51,670
remaining sine wave in your eyes that

338
00:13:51,670 --> 00:13:53,950
the rising part is is the same as the

339
00:13:53,950 --> 00:13:56,110
falling part so you flip it again so we

340
00:13:56,110 --> 00:13:58,000
used to store just one quarter of a sine

341
00:13:58,000 --> 00:14:01,390
wave in an EPROM table or prom table for

342
00:14:01,390 --> 00:14:03,520
whatever sine wave we needed to make and

343
00:14:03,520 --> 00:14:05,020
thank goodness we don't have to be

344
00:14:05,020 --> 00:14:06,370
stingy like that these days

345
00:14:06,370 --> 00:14:09,460
so again bill heard from hackaday now I

346
00:14:09,460 --> 00:14:11,860
hope you learned something and or

347
00:14:11,860 --> 00:14:14,290
enjoyed it if nothing else and we'll

348
00:14:14,290 --> 00:14:17,670
catch you on the next video

