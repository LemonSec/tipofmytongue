1
00:00:02,020 --> 00:00:05,069
[Music]

2
00:00:06,379 --> 00:00:11,910
hi and welcome<font color="#E5E5E5"> back you might recognize</font>

3
00:00:09,240 --> 00:00:14,460
our next<font color="#E5E5E5"> speaker from</font><font color="#CCCCCC"> the LA chapter of</font>

4
00:00:11,910 --> 00:00:17,180
Django<font color="#E5E5E5"> girls a nonprofit that inspires</font>

5
00:00:14,460 --> 00:00:19,710
women<font color="#E5E5E5"> who are interested</font><font color="#CCCCCC"> in tech she's a</font>

6
00:00:17,180 --> 00:00:21,960
self-taught software engineer and is

7
00:00:19,710 --> 00:00:24,660
here today<font color="#E5E5E5"> to teach us a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit</font>

8
00:00:21,960 --> 00:00:27,359
<font color="#E5E5E5">about deep learning</font><font color="#CCCCCC"> on computers small</font>

9
00:00:24,660 --> 00:00:29,400
enough to<font color="#E5E5E5"> fit inside</font><font color="#CCCCCC"> your pocket</font><font color="#E5E5E5"> please</font>

10
00:00:27,359 --> 00:00:36,300
welcome to the hackaday super<font color="#CCCCCC"> con stage</font>

11
00:00:29,400 --> 00:00:39,390
<font color="#CCCCCC">Lee</font><font color="#E5E5E5"> Johnson hello everybody</font>

12
00:00:36,300 --> 00:00:42,510
can you hear me in the back<font color="#E5E5E5"> cool awesome</font>

13
00:00:39,390 --> 00:00:44,309
hi I'm<font color="#E5E5E5"> Lee Johnson and I'm</font><font color="#CCCCCC"> the founder</font>

14
00:00:42,510 --> 00:00:46,379
of a<font color="#E5E5E5"> startup that automatically matches</font>

15
00:00:44,309 --> 00:00:49,680
students<font color="#E5E5E5"> with unclaimed scholarship</font>

16
00:00:46,379 --> 00:00:52,649
money<font color="#E5E5E5"> I also run a consulting firm</font><font color="#CCCCCC"> that</font>

17
00:00:49,680 --> 00:00:54,780
specializes in shipping MVPs<font color="#E5E5E5"> for seed</font>

18
00:00:52,649 --> 00:00:58,260
stage startups and<font color="#E5E5E5"> series a startups and</font>

19
00:00:54,780 --> 00:01:01,230
young capital is so easy<font color="#E5E5E5"> to get these</font>

20
00:00:58,260 --> 00:01:02,820
days that a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> companies find that</font>

21
00:01:01,230 --> 00:01:05,820
technical strategies where their dearth

22
00:01:02,820 --> 00:01:07,920
is<font color="#CCCCCC"> and execution that's required to</font>

23
00:01:05,820 --> 00:01:11,639
<font color="#E5E5E5">bring products to market is missing so I</font>

24
00:01:07,920 --> 00:01:15,299
help bridge that<font color="#CCCCCC"> gap and today I'm gonna</font>

25
00:01:11,640 --> 00:01:16,590
<font color="#E5E5E5">be talking</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> you about how one of my</font>

26
00:01:15,299 --> 00:01:18,479
<font color="#E5E5E5">buddies</font><font color="#CCCCCC"> he does a lot</font><font color="#E5E5E5"> of work in</font>

27
00:01:16,590 --> 00:01:19,830
emerging markets<font color="#CCCCCC"> he asked me that</font><font color="#E5E5E5"> if I</font>

28
00:01:18,479 --> 00:01:21,869
could build a computer<font color="#E5E5E5"> vision device</font>

29
00:01:19,830 --> 00:01:25,860
that worked offline and could cost less

30
00:01:21,869 --> 00:01:27,299
than<font color="#CCCCCC"> about $100 per unit so raise your</font>

31
00:01:25,860 --> 00:01:30,090
hands if you've ever done<font color="#E5E5E5"> a Raspberry Pi</font>

32
00:01:27,299 --> 00:01:31,439
project<font color="#E5E5E5"> yeah a lot of</font><font color="#CCCCCC"> people in this</font>

33
00:01:30,090 --> 00:01:32,880
audience<font color="#E5E5E5"> cool now raise your hands if</font>

34
00:01:31,439 --> 00:01:36,139
you've ever done any work<font color="#CCCCCC"> with machine</font>

35
00:01:32,880 --> 00:01:38,820
learning<font color="#CCCCCC"> suite a lot of people</font><font color="#E5E5E5"> - awesome</font>

36
00:01:36,140 --> 00:01:40,350
<font color="#CCCCCC">so real quick I'm gonna</font><font color="#E5E5E5"> do some term</font>

37
00:01:38,820 --> 00:01:41,758
recap just<font color="#CCCCCC"> to catch our own up to</font><font color="#E5E5E5"> speed</font>

38
00:01:40,350 --> 00:01:43,259
<font color="#E5E5E5">so what I mean when I say a portable</font>

39
00:01:41,759 --> 00:01:44,850
object<font color="#E5E5E5"> detection is I want to be able to</font>

40
00:01:43,259 --> 00:01:46,710
point my Raspberry Pi camera at

41
00:01:44,850 --> 00:01:48,929
something and get a prediction<font color="#E5E5E5"> about</font>

42
00:01:46,710 --> 00:01:51,570
<font color="#CCCCCC">what</font><font color="#E5E5E5"> that thing might be and some</font>

43
00:01:48,930 --> 00:01:53,520
<font color="#E5E5E5">real-world examples</font><font color="#CCCCCC"> of this or a device</font>

44
00:01:51,570 --> 00:01:54,658
that<font color="#E5E5E5"> can identify clients or an</font>

45
00:01:53,520 --> 00:01:57,298
assistive device<font color="#E5E5E5"> to</font><font color="#CCCCCC"> help someone</font><font color="#E5E5E5"> whose</font>

46
00:01:54,659 --> 00:01:58,710
vision impaired or a cheap way to build

47
00:01:57,299 --> 00:02:01,409
computer vision for an autonomous

48
00:01:58,710 --> 00:02:03,509
self-driving robot<font color="#E5E5E5"> and if you are</font>

49
00:02:01,409 --> 00:02:07,170
<font color="#E5E5E5">hearing impaired</font><font color="#CCCCCC"> I have some of my</font>

50
00:02:03,509 --> 00:02:09,000
speaker notes<font color="#CCCCCC"> online</font><font color="#E5E5E5"> at RPI Johnson got</font>

51
00:02:07,170 --> 00:02:11,280
me you can follow along I might<font color="#CCCCCC"> deviate</font>

52
00:02:09,000 --> 00:02:13,170
or<font color="#E5E5E5"> ad-lib a little but I myself have an</font>

53
00:02:11,280 --> 00:02:13,950
auditory<font color="#CCCCCC"> processing</font><font color="#E5E5E5"> disorder so if you</font>

54
00:02:13,170 --> 00:02:16,109
want to read along

55
00:02:13,950 --> 00:02:19,349
there you go you can tweet at<font color="#CCCCCC"> me to it</font>

56
00:02:16,110 --> 00:02:21,300
<font color="#E5E5E5">brettly and i have the code that</font><font color="#CCCCCC"> i'm</font>

57
00:02:19,349 --> 00:02:23,220
developing<font color="#E5E5E5"> online at github</font><font color="#CCCCCC"> it RPI</font>

58
00:02:21,300 --> 00:02:24,900
vision so<font color="#CCCCCC"> pull that down check</font><font color="#E5E5E5"> it out</font>

59
00:02:23,220 --> 00:02:28,830
I'm<font color="#CCCCCC"> trying</font><font color="#E5E5E5"> to build a</font><font color="#CCCCCC"> platform that</font><font color="#E5E5E5"> I</font>

60
00:02:24,900 --> 00:02:37,970
wish<font color="#CCCCCC"> had existed when I got started so</font>

61
00:02:28,830 --> 00:02:37,970
real quick I'm going to technical snafu

62
00:02:49,349 --> 00:02:53,470
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> won't show you any video</font><font color="#CCCCCC"> so</font>

63
00:02:51,610 --> 00:02:54,730
here's the hardware essentials<font color="#E5E5E5"> that I'm</font>

64
00:02:53,470 --> 00:02:56,620
using it's really<font color="#E5E5E5"> simple this isn't an</font>

65
00:02:54,730 --> 00:02:59,440
auto<font color="#E5E5E5"> AI kit this is just a Raspberry Pi</font>

66
00:02:56,620 --> 00:03:04,239
<font color="#CCCCCC">3</font><font color="#E5E5E5"> a PI camera</font><font color="#CCCCCC"> V 2</font><font color="#E5E5E5"> and a 3 and a half</font>

67
00:02:59,440 --> 00:03:05,349
inch TFT<font color="#E5E5E5"> and some more term definition</font>

68
00:03:04,239 --> 00:03:07,150
what is<font color="#CCCCCC"> machine learning it's just</font>

69
00:03:05,349 --> 00:03:08,560
automate it's just pattern recognition

70
00:03:07,150 --> 00:03:10,900
automated pattern recognition

71
00:03:08,560 --> 00:03:12,190
fundamentally and no data scientists are

72
00:03:10,900 --> 00:03:13,480
here to throw fruit at me for

73
00:03:12,190 --> 00:03:16,300
simplifying it that much so I'm going<font color="#E5E5E5"> to</font>

74
00:03:13,480 --> 00:03:19,599
proceed<font color="#E5E5E5"> and what is a neural network</font>

75
00:03:16,300 --> 00:03:22,209
it's optimized ation<font color="#E5E5E5"> of machine learning</font>

76
00:03:19,599 --> 00:03:24,399
pattern recognition<font color="#E5E5E5"> so a lot</font><font color="#CCCCCC"> of the hard</font>

77
00:03:22,209 --> 00:03:26,220
part about tuning a machine learning

78
00:03:24,400 --> 00:03:28,900
model is tuning hyper parameters and

79
00:03:26,220 --> 00:03:29,890
what<font color="#CCCCCC"> your what a neural network brings</font>

80
00:03:28,900 --> 00:03:31,720
to the table<font color="#E5E5E5"> is some automated</font>

81
00:03:29,890 --> 00:03:34,079
optimization as<font color="#E5E5E5"> well</font>

82
00:03:31,720 --> 00:03:38,049
<font color="#E5E5E5">so what's tensorflow</font><font color="#CCCCCC"> what is Kerris</font>

83
00:03:34,080 --> 00:03:40,810
tensorflow<font color="#E5E5E5"> is a really cool framework</font>

84
00:03:38,049 --> 00:03:43,239
developed by<font color="#E5E5E5"> the Google AI organization</font>

85
00:03:40,810 --> 00:03:45,610
and<font color="#CCCCCC"> caris is a higher-level framework</font>

86
00:03:43,239 --> 00:03:47,349
that aims to<font color="#CCCCCC"> simplify software</font>

87
00:03:45,610 --> 00:03:49,180
interfaces that train<font color="#E5E5E5"> and analyze and</font>

88
00:03:47,349 --> 00:03:51,548
save machine learning models tensorflow

89
00:03:49,180 --> 00:03:54,280
is just one of<font color="#CCCCCC"> three so</font><font color="#E5E5E5"> Ford supported</font>

90
00:03:51,549 --> 00:03:55,900
backends by<font color="#E5E5E5"> Kerris so you can bring in</font>

91
00:03:54,280 --> 00:03:58,510
other backgrounds like siano soar

92
00:03:55,900 --> 00:04:00,070
<font color="#CCCCCC">microsoft c NT k that means that you can</font>

93
00:03:58,510 --> 00:04:02,590
experiment very<font color="#E5E5E5"> easily with other</font>

94
00:04:00,070 --> 00:04:05,380
backends keris also provides a solid

95
00:04:02,590 --> 00:04:07,690
<font color="#E5E5E5">tool chain for data pre-processing</font><font color="#CCCCCC"> so</font>

96
00:04:05,380 --> 00:04:09,579
that means if<font color="#E5E5E5"> you use</font><font color="#CCCCCC"> carrots</font><font color="#E5E5E5"> you can</font>

97
00:04:07,690 --> 00:04:11,980
<font color="#E5E5E5">easily port your data and your</font>

98
00:04:09,579 --> 00:04:16,780
<font color="#CCCCCC">prediction pipeline over to a different</font>

99
00:04:11,980 --> 00:04:19,209
<font color="#CCCCCC">back-end for</font><font color="#E5E5E5"> easier experimentation</font><font color="#CCCCCC"> ok</font>

100
00:04:16,779 --> 00:04:21,929
so really<font color="#E5E5E5"> basic let's go through what a</font>

101
00:04:19,209 --> 00:04:24,850
convolutional neural network is and

102
00:04:21,930 --> 00:04:27,039
there<font color="#E5E5E5"> are first I'll say that there are</font>

103
00:04:24,850 --> 00:04:28,090
a lot of types<font color="#E5E5E5"> of neural networks</font><font color="#CCCCCC"> today</font>

104
00:04:27,039 --> 00:04:31,180
I'm just<font color="#CCCCCC"> going to be talking about this</font>

105
00:04:28,090 --> 00:04:33,429
<font color="#E5E5E5">one CNN and I'm going to talk</font><font color="#CCCCCC"> about how</font>

106
00:04:31,180 --> 00:04:35,410
they work at a<font color="#E5E5E5"> very high</font><font color="#CCCCCC"> level so you</font>

107
00:04:33,430 --> 00:04:37,000
start with<font color="#E5E5E5"> an input feature map</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> you</font>

108
00:04:35,410 --> 00:04:39,610
can see on the top<font color="#CCCCCC"> right there it's got</font>

109
00:04:37,000 --> 00:04:43,060
an input depth<font color="#CCCCCC"> width</font><font color="#E5E5E5"> a height</font><font color="#CCCCCC"> and a</font>

110
00:04:39,610 --> 00:04:44,740
convolution works by sliding this 3 by<font color="#CCCCCC"> 3</font>

111
00:04:43,060 --> 00:04:47,770
window those three by three input

112
00:04:44,740 --> 00:04:51,490
patches<font color="#E5E5E5"> over the 3d input mat stopping</font>

113
00:04:47,770 --> 00:04:54,250
at each possible location<font color="#E5E5E5"> and then each</font>

114
00:04:51,490 --> 00:04:56,380
<font color="#E5E5E5">3d patch is then transformed into a 1d</font>

115
00:04:54,250 --> 00:04:59,409
vector with the<font color="#E5E5E5"> length determined by</font>

116
00:04:56,380 --> 00:05:01,690
your output depth and the transformation

117
00:04:59,409 --> 00:05:02,150
occurs via a tensor product or a dot

118
00:05:01,690 --> 00:05:03,710
<font color="#E5E5E5">product</font>

119
00:05:02,150 --> 00:05:07,010
if you're a<font color="#CCCCCC"> Matthew calculus person in</font>

120
00:05:03,710 --> 00:05:08,570
the<font color="#E5E5E5"> audience and</font><font color="#CCCCCC"> that has</font><font color="#E5E5E5"> that is</font>

121
00:05:07,010 --> 00:05:10,310
informed<font color="#CCCCCC"> by a learn wait nature it's</font>

122
00:05:08,570 --> 00:05:13,159
also called<font color="#E5E5E5"> a convolutional kernel</font>

123
00:05:10,310 --> 00:05:15,560
you'll see<font color="#E5E5E5"> that term a lot too</font><font color="#CCCCCC"> so then</font>

124
00:05:13,160 --> 00:05:17,630
those<font color="#E5E5E5"> vectors are reassembled into</font>

125
00:05:15,560 --> 00:05:20,150
another 3d output map at the very bottom

126
00:05:17,630 --> 00:05:22,120
<font color="#CCCCCC">and what's really</font><font color="#E5E5E5"> cool</font><font color="#CCCCCC"> is every spatial</font>

127
00:05:20,150 --> 00:05:24,620
location and the output<font color="#E5E5E5"> feature map</font>

128
00:05:22,120 --> 00:05:26,780
corresponds to the same location in the

129
00:05:24,620 --> 00:05:29,060
input feature map so the lower<font color="#CCCCCC"> left-hand</font>

130
00:05:26,780 --> 00:05:30,409
corner<font color="#E5E5E5"> of that output feature map</font>

131
00:05:29,060 --> 00:05:37,580
corresponds<font color="#E5E5E5"> to the lower left-hand</font>

132
00:05:30,410 --> 00:05:39,530
corner<font color="#CCCCCC"> of that input</font><font color="#E5E5E5"> feature map</font><font color="#CCCCCC"> ok that</font>

133
00:05:37,580 --> 00:05:41,450
was<font color="#E5E5E5"> that was kind</font><font color="#CCCCCC"> of a lot right so</font><font color="#E5E5E5"> what</font>

134
00:05:39,530 --> 00:05:43,159
<font color="#E5E5E5">our CNN's good at why would you use them</font>

135
00:05:41,450 --> 00:05:45,380
why would<font color="#CCCCCC"> you use them in one</font><font color="#E5E5E5"> of your</font>

136
00:05:43,160 --> 00:05:47,480
<font color="#CCCCCC">raspberry pi projects they're really</font>

137
00:05:45,380 --> 00:05:50,540
really<font color="#E5E5E5"> good</font><font color="#CCCCCC"> at learning spatial</font>

138
00:05:47,480 --> 00:05:52,040
hierarchies of<font color="#E5E5E5"> patterns so what is what</font>

139
00:05:50,540 --> 00:05:54,530
<font color="#E5E5E5">does</font><font color="#CCCCCC"> that mean how do</font><font color="#E5E5E5"> they do that</font>

140
00:05:52,040 --> 00:05:56,960
the first convolutional layer<font color="#CCCCCC"> in a CNN</font>

141
00:05:54,530 --> 00:06:00,200
will learn small local patterns local

142
00:05:56,960 --> 00:06:01,640
minima local<font color="#E5E5E5"> Maxima like edges and the</font>

143
00:06:00,200 --> 00:06:04,099
second convolution layer will learn

144
00:06:01,640 --> 00:06:05,240
larger patterns and then after that<font color="#E5E5E5"> and</font>

145
00:06:04,100 --> 00:06:08,450
so on<font color="#E5E5E5"> and so on building into an</font>

146
00:06:05,240 --> 00:06:10,490
<font color="#E5E5E5">increasingly complex spatial pattern</font>

147
00:06:08,450 --> 00:06:13,670
that can recognize<font color="#E5E5E5"> more complex visual</font>

148
00:06:10,490 --> 00:06:17,270
concepts<font color="#CCCCCC"> some other</font><font color="#E5E5E5"> cool properties are</font>

149
00:06:13,670 --> 00:06:19,490
that<font color="#CCCCCC"> cnn's our translation invariant</font>

150
00:06:17,270 --> 00:06:21,530
that means that after<font color="#E5E5E5"> learning a pattern</font>

151
00:06:19,490 --> 00:06:23,900
in<font color="#E5E5E5"> the lower right hand corner</font><font color="#CCCCCC"> of a</font>

152
00:06:21,530 --> 00:06:25,369
<font color="#E5E5E5">picture the the</font><font color="#CCCCCC"> ComNet can recognize it</font>

153
00:06:23,900 --> 00:06:27,380
anywhere<font color="#CCCCCC"> like in the</font><font color="#E5E5E5"> upper left</font><font color="#CCCCCC"> hand</font>

154
00:06:25,370 --> 00:06:31,700
corner<font color="#E5E5E5"> so really cool for image</font>

155
00:06:27,380 --> 00:06:33,800
<font color="#E5E5E5">processing and recognition a more</font>

156
00:06:31,700 --> 00:06:35,420
densely connected<font color="#E5E5E5"> network would have to</font>

157
00:06:33,800 --> 00:06:36,950
learn those<font color="#E5E5E5"> patterns over and over again</font>

158
00:06:35,420 --> 00:06:38,930
<font color="#CCCCCC">so it would have</font><font color="#E5E5E5"> to learn that an</font>

159
00:06:36,950 --> 00:06:40,700
<font color="#E5E5E5">upside-down cat is also a cat or a</font>

160
00:06:38,930 --> 00:06:43,550
right-side up cat is up<font color="#E5E5E5"> for is also a</font>

161
00:06:40,700 --> 00:06:49,400
cat or any configuration possible<font color="#E5E5E5"> of a</font>

162
00:06:43,550 --> 00:06:51,920
cat<font color="#E5E5E5"> is still a cat and this is this</font>

163
00:06:49,400 --> 00:06:53,810
<font color="#E5E5E5">image</font><font color="#CCCCCC"> really helped me</font><font color="#E5E5E5"> grok what the</font>

164
00:06:51,920 --> 00:06:54,950
pieces<font color="#CCCCCC"> like the local minima</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> Maxima</font>

165
00:06:53,810 --> 00:06:57,050
<font color="#E5E5E5">we're actually targeting when you're</font>

166
00:06:54,950 --> 00:06:58,580
<font color="#E5E5E5">trying</font><font color="#CCCCCC"> to identify a cat</font><font color="#E5E5E5"> so if you're</font>

167
00:06:57,050 --> 00:06:59,900
trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> figure</font><font color="#CCCCCC"> out what what is it</font>

168
00:06:58,580 --> 00:07:01,849
<font color="#E5E5E5">that makes up a cat you can see that</font>

169
00:06:59,900 --> 00:07:03,440
these edge boundaries are starting to

170
00:07:01,850 --> 00:07:07,550
add<font color="#CCCCCC"> up to</font><font color="#E5E5E5"> increasingly more complex</font>

171
00:07:03,440 --> 00:07:09,830
<font color="#CCCCCC">features which add up</font><font color="#E5E5E5"> to a cat these are</font>

172
00:07:07,550 --> 00:07:11,720
also<font color="#E5E5E5"> from a great book called deep</font>

173
00:07:09,830 --> 00:07:13,039
<font color="#E5E5E5">learning with Python which you should</font>

174
00:07:11,720 --> 00:07:14,330
totally<font color="#CCCCCC"> check out if you're interested</font>

175
00:07:13,040 --> 00:07:17,310
<font color="#E5E5E5">in this</font>

176
00:07:14,330 --> 00:07:20,130
<font color="#E5E5E5">okay so I talked</font><font color="#CCCCCC"> about building a</font>

177
00:07:17,310 --> 00:07:21,510
<font color="#CCCCCC">software platform</font><font color="#E5E5E5"> I wanted to put</font>

178
00:07:20,130 --> 00:07:23,850
<font color="#E5E5E5">tensorflow in a Raspberry Pi and there</font>

179
00:07:21,510 --> 00:07:25,440
didn't exist<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot of tooling to get</font>

180
00:07:23,850 --> 00:07:27,720
<font color="#E5E5E5">started with training my models and</font>

181
00:07:25,440 --> 00:07:29,580
production izing on the Raspberry Pi<font color="#E5E5E5"> so</font>

182
00:07:27,720 --> 00:07:31,590
I created the interfaces<font color="#CCCCCC"> that I wish it</font>

183
00:07:29,580 --> 00:07:35,039
existed<font color="#E5E5E5"> where I can basically run this</font>

184
00:07:31,590 --> 00:07:36,659
<font color="#E5E5E5">trainer task</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can choose to run</font>

185
00:07:35,040 --> 00:07:38,520
it<font color="#CCCCCC"> locally I would recommend</font><font color="#E5E5E5"> not running</font>

186
00:07:36,660 --> 00:07:40,680
it on the<font color="#E5E5E5"> PI run it on some machine that</font>

187
00:07:38,520 --> 00:07:42,210
has GPU acceleration unless you've just

188
00:07:40,680 --> 00:07:45,390
got a lot<font color="#CCCCCC"> of time to kill or a very</font>

189
00:07:42,210 --> 00:07:47,640
small<font color="#CCCCCC"> data set</font><font color="#E5E5E5"> and you</font><font color="#CCCCCC"> can also</font><font color="#E5E5E5"> run it</font>

190
00:07:45,390 --> 00:07:48,330
<font color="#E5E5E5">via Google Cloud ml</font><font color="#CCCCCC"> engine through a</font>

191
00:07:47,640 --> 00:07:49,890
<font color="#E5E5E5">script that I wrote</font>

192
00:07:48,330 --> 00:07:51,210
if you check<font color="#E5E5E5"> you can check that</font><font color="#CCCCCC"> out and</font>

193
00:07:49,890 --> 00:07:53,789
<font color="#E5E5E5">I've got instructions about how to</font><font color="#CCCCCC"> set</font>

194
00:07:51,210 --> 00:07:55,109
up<font color="#CCCCCC"> a Google cloud platform I would</font>

195
00:07:53,790 --> 00:07:57,480
definitely recommend<font color="#E5E5E5"> running it in the</font>

196
00:07:55,110 --> 00:08:01,050
<font color="#E5E5E5">cloud</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> because it's a lot easier</font><font color="#CCCCCC"> to</font>

197
00:07:57,480 --> 00:08:03,990
monitor<font color="#E5E5E5"> and maintain I created a sample</font>

198
00:08:01,050 --> 00:08:06,840
task<font color="#E5E5E5"> based on this dice training set so</font>

199
00:08:03,990 --> 00:08:08,880
if you check out<font color="#CCCCCC"> some of these</font><font color="#E5E5E5"> images</font>

200
00:08:06,840 --> 00:08:10,619
that<font color="#E5E5E5"> I took I am trying to train a model</font>

201
00:08:08,880 --> 00:08:13,140
<font color="#E5E5E5">not only</font><font color="#CCCCCC"> to recognize the shape of a</font>

202
00:08:10,620 --> 00:08:15,870
dice like<font color="#E5E5E5"> a d20 a</font><font color="#CCCCCC"> d4</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> d6</font>

203
00:08:13,140 --> 00:08:18,390
but<font color="#CCCCCC"> also what face is facing</font><font color="#E5E5E5"> up what</font>

204
00:08:15,870 --> 00:08:19,710
face should I read on the<font color="#E5E5E5"> dice it's</font>

205
00:08:18,390 --> 00:08:21,210
pretty straightforward<font color="#CCCCCC"> task if you've</font>

206
00:08:19,710 --> 00:08:25,770
never done anything<font color="#E5E5E5"> like this before</font><font color="#CCCCCC"> so</font>

207
00:08:21,210 --> 00:08:27,270
<font color="#E5E5E5">here's a good starter</font><font color="#CCCCCC"> alright so let me</font>

208
00:08:25,770 --> 00:08:29,700
talk a<font color="#CCCCCC"> little bit about the</font><font color="#E5E5E5"> software</font>

209
00:08:27,270 --> 00:08:31,859
architecture<font color="#CCCCCC"> so here's my detector and</font>

210
00:08:29,700 --> 00:08:34,979
this<font color="#E5E5E5"> is what's running on the Raspberry</font>

211
00:08:31,860 --> 00:08:35,970
Pi<font color="#CCCCCC"> so I wanted</font><font color="#E5E5E5"> to create</font><font color="#CCCCCC"> an interface so</font>

212
00:08:34,979 --> 00:08:37,800
I could<font color="#CCCCCC"> just pass in the</font><font color="#E5E5E5"> name of the</font>

213
00:08:35,970 --> 00:08:40,260
model<font color="#E5E5E5"> instantiate</font><font color="#CCCCCC"> it and be ready</font><font color="#E5E5E5"> to go</font>

214
00:08:37,799 --> 00:08:43,799
<font color="#E5E5E5">and I'll talk to you a little bit about</font>

215
00:08:40,260 --> 00:08:46,500
how<font color="#E5E5E5"> this is actually</font><font color="#CCCCCC"> working so first</font>

216
00:08:43,799 --> 00:08:48,920
we're going<font color="#E5E5E5"> to in one process load up a</font>

217
00:08:46,500 --> 00:08:51,960
model here we're using mobile Navi to

218
00:08:48,920 --> 00:08:55,410
mobile net<font color="#CCCCCC"> B - is a pre trained</font>

219
00:08:51,960 --> 00:08:57,270
convolutional<font color="#E5E5E5"> network and so what that</font>

220
00:08:55,410 --> 00:08:59,839
<font color="#CCCCCC">means is it's trained and benchmarked</font>

221
00:08:57,270 --> 00:09:02,160
<font color="#E5E5E5">against the image</font><font color="#CCCCCC"> and a data</font><font color="#E5E5E5"> set or and</font>

222
00:08:59,840 --> 00:09:03,720
it's a<font color="#E5E5E5"> general-purpose object detection</font>

223
00:09:02,160 --> 00:09:05,370
model which is<font color="#E5E5E5"> really well suited</font><font color="#CCCCCC"> for</font>

224
00:09:03,720 --> 00:09:06,810
<font color="#CCCCCC">small devices</font><font color="#E5E5E5"> hence the name mobile net</font>

225
00:09:05,370 --> 00:09:12,120
<font color="#E5E5E5">and you can read a little bit more about</font>

226
00:09:06,810 --> 00:09:14,459
it on google's AI blog<font color="#E5E5E5"> and so in the</font>

227
00:09:12,120 --> 00:09:17,220
<font color="#E5E5E5">software architecture</font><font color="#CCCCCC"> I don't want to be</font>

228
00:09:14,460 --> 00:09:19,050
buffering frames from my Raspberry Pi in

229
00:09:17,220 --> 00:09:21,000
the<font color="#CCCCCC"> same process I want to you</font><font color="#E5E5E5"> know</font>

230
00:09:19,050 --> 00:09:22,969
start on you or<font color="#CCCCCC"> and anything in the same</font>

231
00:09:21,000 --> 00:09:25,770
thread<font color="#E5E5E5"> I want to start a new</font><font color="#CCCCCC"> thread</font><font color="#E5E5E5"> and</font>

232
00:09:22,970 --> 00:09:28,770
read that frame buffer

233
00:09:25,770 --> 00:09:29,730
through an async process or you know I

234
00:09:28,770 --> 00:09:31,230
want to<font color="#E5E5E5"> be able to pull that out</font>

235
00:09:29,730 --> 00:09:33,330
whenever<font color="#E5E5E5"> I want to</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then make a batch</font>

236
00:09:31,230 --> 00:09:36,030
prediction against<font color="#E5E5E5"> that frame buffer and</font>

237
00:09:33,330 --> 00:09:38,520
then optionally<font color="#E5E5E5"> I can render a bounding</font>

238
00:09:36,030 --> 00:09:40,560
box<font color="#E5E5E5"> overlay over that I've also included</font>

239
00:09:38,520 --> 00:09:43,230
instructions about how<font color="#E5E5E5"> to</font><font color="#CCCCCC"> set up frame</font>

240
00:09:40,560 --> 00:09:45,719
buffer copy in this repo frame buffer

241
00:09:43,230 --> 00:09:48,060
<font color="#E5E5E5">copy is something that can as the name</font>

242
00:09:45,720 --> 00:09:51,060
<font color="#E5E5E5">might indicate copy frame buffer</font><font color="#CCCCCC"> and</font>

243
00:09:48,060 --> 00:09:54,859
here I'm<font color="#CCCCCC"> copying frame buffer from</font><font color="#E5E5E5"> HDMI</font>

244
00:09:51,060 --> 00:09:59,189
to my<font color="#E5E5E5"> SPI which is the TFT screens</font>

245
00:09:54,860 --> 00:10:00,710
display output<font color="#E5E5E5"> okay this is a video</font>

246
00:09:59,190 --> 00:10:03,390
<font color="#CCCCCC">that's not</font><font color="#E5E5E5"> gonna work</font>

247
00:10:00,710 --> 00:10:07,770
<font color="#E5E5E5">alright so here's a little bit</font><font color="#CCCCCC"> more</font>

248
00:10:03,390 --> 00:10:10,560
about tensor<font color="#E5E5E5"> board visualizations</font><font color="#CCCCCC"> and so</font>

249
00:10:07,770 --> 00:10:13,290
the<font color="#E5E5E5"> thing I really wanted to do here was</font>

250
00:10:10,560 --> 00:10:15,119
<font color="#CCCCCC">make sure</font><font color="#E5E5E5"> that I prioritize versioning</font>

251
00:10:13,290 --> 00:10:16,920
and<font color="#E5E5E5"> analytics here because it's</font>

252
00:10:15,120 --> 00:10:18,990
important<font color="#E5E5E5"> to create reducible scenarios</font>

253
00:10:16,920 --> 00:10:21,420
and keep track<font color="#CCCCCC"> of incremental</font><font color="#E5E5E5"> changes</font>

254
00:10:18,990 --> 00:10:23,280
when you're doing science<font color="#CCCCCC"> I created some</font>

255
00:10:21,420 --> 00:10:25,110
custom callbacks for Karis<font color="#E5E5E5"> modal</font>

256
00:10:23,280 --> 00:10:27,180
training and also patched<font color="#E5E5E5"> Karis is pre</font>

257
00:10:25,110 --> 00:10:29,010
<font color="#E5E5E5">processing library in order to give</font><font color="#CCCCCC"> us</font>

258
00:10:27,180 --> 00:10:30,510
the option<font color="#E5E5E5"> of saving tensor board events</font>

259
00:10:29,010 --> 00:10:32,610
and model<font color="#E5E5E5"> check points directly to</font>

260
00:10:30,510 --> 00:10:34,590
Google Cloud<font color="#CCCCCC"> Storage</font><font color="#E5E5E5"> sensor board is</font>

261
00:10:32,610 --> 00:10:36,420
what you see on<font color="#CCCCCC"> the right that's showing</font>

262
00:10:34,590 --> 00:10:37,710
me kind<font color="#CCCCCC"> of the tail end of my dice</font>

263
00:10:36,420 --> 00:10:39,900
<font color="#CCCCCC">trading model you can see</font><font color="#E5E5E5"> the dense</font>

264
00:10:37,710 --> 00:10:42,450
output layers you<font color="#CCCCCC"> can see the final</font>

265
00:10:39,900 --> 00:10:46,079
activation<font color="#CCCCCC"> you can see the intermediary</font>

266
00:10:42,450 --> 00:10:47,820
<font color="#CCCCCC">rayleigh activation there I'll be</font>

267
00:10:46,080 --> 00:10:48,840
writing<font color="#E5E5E5"> a</font><font color="#CCCCCC"> proposal in plural pull</font>

268
00:10:47,820 --> 00:10:50,610
requests to get those features

269
00:10:48,840 --> 00:10:53,310
incorporated<font color="#E5E5E5"> upstream in the next couple</font>

270
00:10:50,610 --> 00:10:55,290
of weeks<font color="#E5E5E5"> and I've open sourced the</font>

271
00:10:53,310 --> 00:10:56,640
<font color="#E5E5E5">raspberry pi vision bucket so my</font>

272
00:10:55,290 --> 00:10:59,130
<font color="#E5E5E5">training data is</font><font color="#CCCCCC"> available to the</font>

273
00:10:56,640 --> 00:11:02,430
<font color="#E5E5E5">general public</font><font color="#CCCCCC"> in particular the dice</font>

274
00:10:59,130 --> 00:11:05,750
data that<font color="#E5E5E5"> I have taken pictures</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> is</font>

275
00:11:02,430 --> 00:11:08,310
open to the<font color="#E5E5E5"> general public now so what's</font>

276
00:11:05,750 --> 00:11:11,310
what I wanted to get<font color="#E5E5E5"> people</font><font color="#CCCCCC"> started with</font>

277
00:11:08,310 --> 00:11:13,140
was the<font color="#CCCCCC"> ability one to download and use</font>

278
00:11:11,310 --> 00:11:15,959
a<font color="#CCCCCC"> pre-training network straight out of</font>

279
00:11:13,140 --> 00:11:19,050
<font color="#CCCCCC">the box</font><font color="#E5E5E5"> you can do that I also want you</font>

280
00:11:15,960 --> 00:11:21,390
<font color="#CCCCCC">to</font><font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to take a</font><font color="#E5E5E5"> pre trade network</font>

281
00:11:19,050 --> 00:11:23,609
<font color="#E5E5E5">use only</font><font color="#CCCCCC"> what's called the convolutional</font>

282
00:11:21,390 --> 00:11:26,100
base and then train your own<font color="#E5E5E5"> network on</font>

283
00:11:23,610 --> 00:11:28,260
<font color="#CCCCCC">top of that and this</font><font color="#E5E5E5"> is a fairly</font>

284
00:11:26,100 --> 00:11:30,450
<font color="#E5E5E5">processor inexpensive cost you can do</font>

285
00:11:28,260 --> 00:11:32,330
this on the<font color="#CCCCCC"> Raspberry Pi</font><font color="#E5E5E5"> and then three</font>

286
00:11:30,450 --> 00:11:35,070
I<font color="#CCCCCC"> want you to be able</font><font color="#E5E5E5"> to train your own</font>

287
00:11:32,330 --> 00:11:36,570
convolutional base by yourself<font color="#E5E5E5"> this is</font>

288
00:11:35,070 --> 00:11:37,850
<font color="#E5E5E5">what you would need a GPU accelerated</font>

289
00:11:36,570 --> 00:11:39,930
machine<font color="#E5E5E5"> for</font>

290
00:11:37,850 --> 00:11:43,050
here's an example<font color="#CCCCCC"> of mine with</font>

291
00:11:39,930 --> 00:11:44,670
versioning if you want to check out<font color="#CCCCCC"> some</font>

292
00:11:43,050 --> 00:11:46,349
<font color="#CCCCCC">datasets</font><font color="#E5E5E5"> like if you're not sure what</font>

293
00:11:44,670 --> 00:11:48,209
<font color="#CCCCCC">datasets to</font><font color="#E5E5E5"> get started with this isn't</font>

294
00:11:46,350 --> 00:11:50,100
<font color="#E5E5E5">really good data set tool so if you're</font>

295
00:11:48,210 --> 00:11:51,210
eager<font color="#E5E5E5"> and bursting to go out and find</font>

296
00:11:50,100 --> 00:11:54,690
<font color="#E5E5E5">some</font><font color="#CCCCCC"> data that train your own neural</font>

297
00:11:51,210 --> 00:11:56,220
network try this first<font color="#E5E5E5"> and thank you if</font>

298
00:11:54,690 --> 00:11:59,940
<font color="#CCCCCC">you want to contribute to</font><font color="#E5E5E5"> this project</font>

299
00:11:56,220 --> 00:12:01,200
<font color="#CCCCCC">at all in the form of</font><font color="#E5E5E5"> user case studies</font>

300
00:11:59,940 --> 00:12:03,029
I'm trying to<font color="#E5E5E5"> figure out</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> if you</font>

301
00:12:01,200 --> 00:12:03,990
have a<font color="#CCCCCC"> Raspberry Pi</font><font color="#E5E5E5"> what are you what do</font>

302
00:12:03,029 --> 00:12:06,180
you<font color="#E5E5E5"> want to do with it if you're</font><font color="#CCCCCC"> using</font>

303
00:12:03,990 --> 00:12:09,029
<font color="#E5E5E5">computer vision</font><font color="#CCCCCC"> please feel free to open</font>

304
00:12:06,180 --> 00:12:11,040
<font color="#CCCCCC">an issue my goal here is to develop a</font>

305
00:12:09,029 --> 00:12:12,510
<font color="#CCCCCC">framework for training CNN models and</font>

306
00:12:11,040 --> 00:12:15,480
production heisting them on a Raspberry

307
00:12:12,510 --> 00:12:17,130
Pi<font color="#E5E5E5"> so if you're</font><font color="#CCCCCC"> interested</font><font color="#E5E5E5"> in that at</font>

308
00:12:15,480 --> 00:12:18,360
<font color="#E5E5E5">all and collecting examples of what</font>

309
00:12:17,130 --> 00:12:19,649
<font color="#CCCCCC">people want to do</font><font color="#E5E5E5"> and building a</font>

310
00:12:18,360 --> 00:12:22,500
framework that will<font color="#E5E5E5"> capture all of those</font>

311
00:12:19,649 --> 00:12:24,300
uses<font color="#CCCCCC"> is some</font><font color="#E5E5E5"> of the next practical</font>

312
00:12:22,500 --> 00:12:25,680
applications include diagnosing skin

313
00:12:24,300 --> 00:12:27,689
cancer in humans this<font color="#E5E5E5"> is what my buddy</font>

314
00:12:25,680 --> 00:12:29,579
originally came<font color="#CCCCCC"> to me to</font><font color="#E5E5E5"> try to do using</font>

315
00:12:27,690 --> 00:12:33,779
<font color="#CCCCCC">a small hundred dollar device</font><font color="#E5E5E5"> we can go</font>

316
00:12:29,580 --> 00:12:36,270
<font color="#CCCCCC">ship off and I will be doing</font><font color="#E5E5E5"> some more</font>

317
00:12:33,779 --> 00:12:38,850
development<font color="#CCCCCC"> and testing by building a</font>

318
00:12:36,270 --> 00:12:40,850
model<font color="#E5E5E5"> of healthy and unhealthy dog poop</font>

319
00:12:38,850 --> 00:12:44,130
which is<font color="#E5E5E5"> why I've got my</font><font color="#CCCCCC"> quarry there</font>

320
00:12:40,850 --> 00:12:45,690
frame and then I'll be open sourcing

321
00:12:44,130 --> 00:12:47,490
that<font color="#E5E5E5"> dataset as well I do need</font><font color="#CCCCCC"> to gather</font>

322
00:12:45,690 --> 00:12:48,240
<font color="#E5E5E5">data so if you want to send me photos of</font>

323
00:12:47,490 --> 00:12:52,200
dog poop

324
00:12:48,240 --> 00:12:54,770
I can send if any of this<font color="#E5E5E5"> sounds</font>

325
00:12:52,200 --> 00:12:56,880
<font color="#E5E5E5">interesting the dog poop the the</font>

326
00:12:54,770 --> 00:12:59,699
computer<font color="#E5E5E5"> vision on her ass</font><font color="#CCCCCC"> berry</font><font color="#E5E5E5"> pie</font>

327
00:12:56,880 --> 00:13:01,230
follow me on<font color="#CCCCCC"> Twitter</font><font color="#E5E5E5"> or check out this</font>

328
00:12:59,700 --> 00:13:04,100
repo<font color="#CCCCCC"> and open an issue with</font><font color="#E5E5E5"> your</font>

329
00:13:01,230 --> 00:13:04,100
comments<font color="#E5E5E5"> thank</font><font color="#CCCCCC"> you</font>

330
00:13:06,770 --> 00:13:09,890
thank you

