1
00:00:05,279 --> 00:00:07,520
hello everybody and welcome back uh i'm

2
00:00:07,520 --> 00:00:10,480
jenny list your european uh hackaday

3
00:00:10,480 --> 00:00:12,160
contributing editor and i'm your compare

4
00:00:12,160 --> 00:00:15,200
for these segments uh coming up next is

5
00:00:15,200 --> 00:00:18,000
um hash salahi um now how she's best

6
00:00:18,000 --> 00:00:19,760
known to hackaday readers for his

7
00:00:19,760 --> 00:00:21,600
infrastructure work um reverse

8
00:00:21,600 --> 00:00:23,760
engineering smart power meters probing

9
00:00:23,760 --> 00:00:25,279
their inner workings and reverse

10
00:00:25,279 --> 00:00:27,599
engineering their comms protocols

11
00:00:27,599 --> 00:00:30,160
since these devices are starting to

12
00:00:30,160 --> 00:00:32,399
appear in every house all over the place

13
00:00:32,399 --> 00:00:33,360
uh

14
00:00:33,360 --> 00:00:35,680
they hide behind a veil of secrecy um

15
00:00:35,680 --> 00:00:37,600
his work is particularly fascinating and

16
00:00:37,600 --> 00:00:39,840
also vital from a security perspective

17
00:00:39,840 --> 00:00:41,440
um so we're looking forward to hearing

18
00:00:41,440 --> 00:00:43,680
about his progress and the method c is

19
00:00:43,680 --> 00:00:47,680
to achieve it hash take it away

20
00:00:48,559 --> 00:00:49,520
okay

21
00:00:49,520 --> 00:00:51,039
so if you're seeing my screen right now

22
00:00:51,039 --> 00:00:53,680
it started with the remote icon uh

23
00:00:53,680 --> 00:00:55,120
imagery

24
00:00:55,120 --> 00:00:57,600
so let's get into it this is a map of

25
00:00:57,600 --> 00:01:00,160
dallas texas and each one of these red

26
00:01:00,160 --> 00:01:02,879
dots you see here on the map is a smart

27
00:01:02,879 --> 00:01:05,680
meter the height above the ground of the

28
00:01:05,680 --> 00:01:08,000
red dot represents the number of days

29
00:01:08,000 --> 00:01:10,320
it's been running since it last lost

30
00:01:10,320 --> 00:01:11,280
power

31
00:01:11,280 --> 00:01:12,479
this one here

32
00:01:12,479 --> 00:01:14,799
the meter id starts with a d00 has been

33
00:01:14,799 --> 00:01:15,960
running for

34
00:01:15,960 --> 00:01:19,439
1767 days without a power loss

35
00:01:19,439 --> 00:01:21,520
this talk will be about how i receive

36
00:01:21,520 --> 00:01:23,600
this data that's transmitted in the

37
00:01:23,600 --> 00:01:24,560
clear

38
00:01:24,560 --> 00:01:26,400
driving up and down the freeway

39
00:01:26,400 --> 00:01:28,720
but first let's take a a blast to the

40
00:01:28,720 --> 00:01:32,320
past uh it was the year was 2010

41
00:01:32,320 --> 00:01:34,960
and there was a a project to reverse

42
00:01:34,960 --> 00:01:37,840
engineer a lidar on a robotic vacuum

43
00:01:37,840 --> 00:01:38,960
cleaner

44
00:01:38,960 --> 00:01:42,079
and this is my desk from way back then a

45
00:01:42,079 --> 00:01:45,119
makeshift jig and a taken apart robot

46
00:01:45,119 --> 00:01:48,560
on the thanksgiving weekend of 2010 and

47
00:01:48,560 --> 00:01:51,600
this is my software that i use to to

48
00:01:51,600 --> 00:01:54,159
decode that laser transmission and

49
00:01:54,159 --> 00:01:55,920
ultimately displayed on the screen here

50
00:01:55,920 --> 00:01:58,479
and moved my hand inside this box it was

51
00:01:58,479 --> 00:01:59,920
sometime in the middle of the night and

52
00:01:59,920 --> 00:02:01,600
i was trying to win this

53
00:02:01,600 --> 00:02:04,799
challenge they posted a 400 bounty and

54
00:02:04,799 --> 00:02:07,040
and winning it was featured on

55
00:02:07,040 --> 00:02:08,878
in gadget

56
00:02:08,878 --> 00:02:11,280
and it was really my first kind of foray

57
00:02:11,280 --> 00:02:14,080
into hackaday hackaday featured a number

58
00:02:14,080 --> 00:02:15,920
of my articles and and i really

59
00:02:15,920 --> 00:02:17,840
appreciate that community the hackaday

60
00:02:17,840 --> 00:02:20,160
is built and and the the ability for all

61
00:02:20,160 --> 00:02:22,400
of us to get together and and see what

62
00:02:22,400 --> 00:02:24,160
what we're working on and so that was

63
00:02:24,160 --> 00:02:25,599
the early day

64
00:02:25,599 --> 00:02:27,920
lab right there but let's bring it back

65
00:02:27,920 --> 00:02:30,560
to the the present now and talk a bit

66
00:02:30,560 --> 00:02:33,040
about smart meters

67
00:02:33,040 --> 00:02:36,000
so this is me my name's hash i don't do

68
00:02:36,000 --> 00:02:37,440
this professionally this is all kind of

69
00:02:37,440 --> 00:02:39,760
in my spare time like a lot of us and

70
00:02:39,760 --> 00:02:42,239
this is a talk i gave for the ics

71
00:02:42,239 --> 00:02:44,800
village for defcon earlier this year

72
00:02:44,800 --> 00:02:46,400
and so what i'm going to talk about to

73
00:02:46,400 --> 00:02:50,319
you today is landison gear smart meters

74
00:02:50,319 --> 00:02:52,000
and the the ones that are used by the

75
00:02:52,000 --> 00:02:54,959
power company encore that's here in the

76
00:02:54,959 --> 00:02:56,640
dallas area and i don't do that to name

77
00:02:56,640 --> 00:02:58,319
and shame these companies it's just what

78
00:02:58,319 --> 00:02:59,920
i'm talking about it's very specific to

79
00:02:59,920 --> 00:03:01,760
these meters and how it's been

80
00:03:01,760 --> 00:03:04,959
configured by this company but you know

81
00:03:04,959 --> 00:03:07,200
working on infrastructure is kind of a

82
00:03:07,200 --> 00:03:10,000
challenging topic and travis goodspeed

83
00:03:10,000 --> 00:03:11,280
i'm sure a lot of you have heard of he's

84
00:03:11,280 --> 00:03:12,800
talked about stuff like this and he had

85
00:03:12,800 --> 00:03:14,480
a great talk that was basically saying

86
00:03:14,480 --> 00:03:16,080
we should reverse engineer stuff that

87
00:03:16,080 --> 00:03:18,400
uses the same parts as smart meters but

88
00:03:18,400 --> 00:03:20,239
not smart meters so we don't all get you

89
00:03:20,239 --> 00:03:22,400
know hauled away and and people come

90
00:03:22,400 --> 00:03:25,440
after us but i think the challenge is is

91
00:03:25,440 --> 00:03:27,680
that more and more there's ransomware

92
00:03:27,680 --> 00:03:29,280
events there's all these things where

93
00:03:29,280 --> 00:03:30,879
stuff gets hacked and they don't even

94
00:03:30,879 --> 00:03:33,440
necessarily have to hack uh billing

95
00:03:33,440 --> 00:03:35,440
systems and stuff like that like if they

96
00:03:35,440 --> 00:03:37,200
hack devices they might get shut down

97
00:03:37,200 --> 00:03:39,440
they might shut down a whole network and

98
00:03:39,440 --> 00:03:41,120
it's all in our best interest to make

99
00:03:41,120 --> 00:03:42,560
sure this stuff is secure and to talk

100
00:03:42,560 --> 00:03:44,959
about it openly and so that's what i

101
00:03:44,959 --> 00:03:46,799
started doing

102
00:03:46,799 --> 00:03:48,480
so let me just explain to you a little

103
00:03:48,480 --> 00:03:51,120
bit about how this network works so that

104
00:03:51,120 --> 00:03:52,879
you have some framework ladies and gear

105
00:03:52,879 --> 00:03:54,799
did a great job of putting out kind of a

106
00:03:54,799 --> 00:03:58,000
marketing video and we'll use it to walk

107
00:03:58,000 --> 00:04:00,799
through how this system works and so

108
00:04:00,799 --> 00:04:03,120
what we're talking about is these smart

109
00:04:03,120 --> 00:04:04,959
meters that are on the side of homes and

110
00:04:04,959 --> 00:04:06,640
apartments and

111
00:04:06,640 --> 00:04:09,519
businesses that you'll see here

112
00:04:09,519 --> 00:04:11,920
and in it there's a microcontroller and

113
00:04:11,920 --> 00:04:14,239
there's a couple transceivers one's a

114
00:04:14,239 --> 00:04:16,079
zigbee transceiver and some of them and

115
00:04:16,079 --> 00:04:19,279
one's a 900 megahertz mesh network

116
00:04:19,279 --> 00:04:20,478
transceiver

117
00:04:20,478 --> 00:04:22,320
and so the meters they send their data

118
00:04:22,320 --> 00:04:23,919
back but they don't all send it back to

119
00:04:23,919 --> 00:04:26,800
the mother ship directly they send it

120
00:04:26,800 --> 00:04:28,960
back to other meters and those meters

121
00:04:28,960 --> 00:04:31,280
relay it and they form a huge mesh

122
00:04:31,280 --> 00:04:33,199
network in in the neighborhood that

123
00:04:33,199 --> 00:04:35,600
they're deployed in they all relay their

124
00:04:35,600 --> 00:04:38,000
messages back and forth until they get

125
00:04:38,000 --> 00:04:41,199
to some kind of aggregation device

126
00:04:41,199 --> 00:04:43,600
in this case it's either a router or a

127
00:04:43,600 --> 00:04:45,919
collector that's installed up on a pole

128
00:04:45,919 --> 00:04:48,000
really the difference is a collector

129
00:04:48,000 --> 00:04:49,840
forwards the data directly back to the

130
00:04:49,840 --> 00:04:52,240
power company and a router routes it

131
00:04:52,240 --> 00:04:54,800
back again to uh what is ultimately a

132
00:04:54,800 --> 00:04:56,960
collector this one is inside of a a

133
00:04:56,960 --> 00:04:59,120
substation with some antennas on it if

134
00:04:59,120 --> 00:05:01,199
you're driving around you'll see it like

135
00:05:01,199 --> 00:05:03,360
this one here to the the left that i

136
00:05:03,360 --> 00:05:05,199
show and from there it sends it back

137
00:05:05,199 --> 00:05:07,520
over an ip network to the power company

138
00:05:07,520 --> 00:05:09,919
where they use it for billing and to see

139
00:05:09,919 --> 00:05:12,160
outage information and and stuff like

140
00:05:12,160 --> 00:05:14,080
that and so i wondered how does this

141
00:05:14,080 --> 00:05:15,919
system work you know they don't publish

142
00:05:15,919 --> 00:05:18,240
anything on on these things but i did

143
00:05:18,240 --> 00:05:21,039
manage to find a paper at the ieee it

144
00:05:21,039 --> 00:05:22,880
was written by a couple of people that

145
00:05:22,880 --> 00:05:24,800
worked for landis and gear and it it

146
00:05:24,800 --> 00:05:26,880
kind of outlined a test system that was

147
00:05:26,880 --> 00:05:30,479
deployed here in in dallas and uh and so

148
00:05:30,479 --> 00:05:32,240
it had some good information in it one

149
00:05:32,240 --> 00:05:34,400
thing that was particularly interesting

150
00:05:34,400 --> 00:05:36,960
was something they called a geographical

151
00:05:36,960 --> 00:05:38,880
routing protocol and when i got to that

152
00:05:38,880 --> 00:05:41,120
section i was super interested like what

153
00:05:41,120 --> 00:05:43,759
is a geographical routing protocol and

154
00:05:43,759 --> 00:05:46,400
so they said it's basically a routing

155
00:05:46,400 --> 00:05:48,880
scheme which utilizes the geographical

156
00:05:48,880 --> 00:05:51,759
coordinates the latitude and longitude

157
00:05:51,759 --> 00:05:54,080
of the communicating nodes and by nodes

158
00:05:54,080 --> 00:05:56,479
they mean smart meters so i thought

159
00:05:56,479 --> 00:05:58,000
where could i get one of these smart

160
00:05:58,000 --> 00:06:00,080
meters so i could take it apart and so i

161
00:06:00,080 --> 00:06:02,240
went to ebay and you know

162
00:06:02,240 --> 00:06:04,000
everything's on ebay

163
00:06:04,000 --> 00:06:06,160
i have no idea why this stuff is on ebay

164
00:06:06,160 --> 00:06:07,840
i don't know who's buying it other than

165
00:06:07,840 --> 00:06:10,319
me although i'm pretty uh i'll buy a lot

166
00:06:10,319 --> 00:06:12,319
of it so maybe this market exists solely

167
00:06:12,319 --> 00:06:13,759
to sell me uh

168
00:06:13,759 --> 00:06:15,360
smart meters

169
00:06:15,360 --> 00:06:16,960
and so i started i started picking

170
00:06:16,960 --> 00:06:19,120
things up a couple years ago just slowly

171
00:06:19,120 --> 00:06:20,560
buying things and so

172
00:06:20,560 --> 00:06:22,960
here in my lab um which is you know

173
00:06:22,960 --> 00:06:24,720
you're seeing right behind me

174
00:06:24,720 --> 00:06:27,039
the test equipment i have and and a lot

175
00:06:27,039 --> 00:06:29,360
of meters that i've bought and a lot of

176
00:06:29,360 --> 00:06:31,360
modems the modems are used inside of

177
00:06:31,360 --> 00:06:33,600
other devices they're backhaul devices

178
00:06:33,600 --> 00:06:35,759
or or things like that and i started

179
00:06:35,759 --> 00:06:37,600
looking at them and trying to dump the

180
00:06:37,600 --> 00:06:40,000
flash memory and trying to see what's

181
00:06:40,000 --> 00:06:42,160
going on and what processor are they

182
00:06:42,160 --> 00:06:45,120
using and could i potentially get the

183
00:06:45,120 --> 00:06:48,000
firmware off of the processor and to buy

184
00:06:48,000 --> 00:06:50,160
residential meters and commercial meters

185
00:06:50,160 --> 00:06:50,960
and

186
00:06:50,960 --> 00:06:53,120
this is my software-defined radio setup

187
00:06:53,120 --> 00:06:54,720
that we'll see a little more of later

188
00:06:54,720 --> 00:06:56,240
and that's the new radio running and

189
00:06:56,240 --> 00:06:58,479
it's just decoding all the packets that

190
00:06:58,479 --> 00:07:00,240
are being broadcast around me so that i

191
00:07:00,240 --> 00:07:02,319
can just look at them and stare at the

192
00:07:02,319 --> 00:07:04,319
data and trying to figure out what

193
00:07:04,319 --> 00:07:06,160
they're sending

194
00:07:06,160 --> 00:07:08,560
there's a farady cage in the back there

195
00:07:08,560 --> 00:07:11,039
and here you see one of those routers

196
00:07:11,039 --> 00:07:13,360
this one's a collector that i managed to

197
00:07:13,360 --> 00:07:15,360
find on ebay of course

198
00:07:15,360 --> 00:07:17,919
and then a faraday cage to isolate the

199
00:07:17,919 --> 00:07:19,759
the transmission so that i can put smart

200
00:07:19,759 --> 00:07:22,400
meters inside there and and try to just

201
00:07:22,400 --> 00:07:23,840
isolate what they're sending to

202
00:07:23,840 --> 00:07:26,400
understand at a singular level what's

203
00:07:26,400 --> 00:07:28,800
going on with this network and so my

204
00:07:28,800 --> 00:07:30,639
when i began reverse engineering it i

205
00:07:30,639 --> 00:07:32,000
started looking at the circuit boards

206
00:07:32,000 --> 00:07:34,080
and just creating schematics so these

207
00:07:34,080 --> 00:07:35,280
are the schematics that i started

208
00:07:35,280 --> 00:07:36,960
creating to get a better understanding

209
00:07:36,960 --> 00:07:39,120
of what are the different parts and the

210
00:07:39,120 --> 00:07:40,960
power meter chip and the processor

211
00:07:40,960 --> 00:07:42,479
that's on it and the different

212
00:07:42,479 --> 00:07:45,840
communication radios like the cc1020

213
00:07:45,840 --> 00:07:47,599
and as you get towards the back of the

214
00:07:47,599 --> 00:07:50,000
meter it's even uh i don't know if it's

215
00:07:50,000 --> 00:07:51,840
more interesting or less interesting but

216
00:07:51,840 --> 00:07:54,319
it's interesting nonetheless is a device

217
00:07:54,319 --> 00:07:57,039
that is basically a huge relay so this

218
00:07:57,039 --> 00:08:00,720
will switch 240 volts at 200 amps which

219
00:08:00,720 --> 00:08:02,800
is 48 000 watts

220
00:08:02,800 --> 00:08:05,440
10 000 times according to their spec

221
00:08:05,440 --> 00:08:08,479
sheet on and off so that means the power

222
00:08:08,479 --> 00:08:10,800
company can send a wireless signal which

223
00:08:10,800 --> 00:08:12,479
takes a few seconds to arrive at the

224
00:08:12,479 --> 00:08:14,639
meter and the power will turn on or off

225
00:08:14,639 --> 00:08:16,560
at any specific meter

226
00:08:16,560 --> 00:08:18,479
and so i wondered you know if they can

227
00:08:18,479 --> 00:08:20,400
send a message to a meter to turn power

228
00:08:20,400 --> 00:08:22,080
on and off could somebody else send a

229
00:08:22,080 --> 00:08:24,479
message to that meter and how protected

230
00:08:24,479 --> 00:08:26,879
are those messages and and are there any

231
00:08:26,879 --> 00:08:28,720
communication flaws or anything else

232
00:08:28,720 --> 00:08:30,560
inside these so

233
00:08:30,560 --> 00:08:33,519
i said to understand that and to to try

234
00:08:33,519 --> 00:08:36,320
to reverse engineer these things to see

235
00:08:36,320 --> 00:08:39,360
you know how how protected are they and

236
00:08:39,360 --> 00:08:42,159
can someone send a message and and do

237
00:08:42,159 --> 00:08:44,399
that

238
00:08:45,519 --> 00:08:47,920
so i did manage to get the firmware off

239
00:08:47,920 --> 00:08:49,760
of one of the microcontrollers in the

240
00:08:49,760 --> 00:08:50,640
meter

241
00:08:50,640 --> 00:08:53,519
this is the bootloader firmware uh the

242
00:08:53,519 --> 00:08:56,880
firmware itself is about 384k and and

243
00:08:56,880 --> 00:08:58,160
when you're reverse engineering that's a

244
00:08:58,160 --> 00:08:59,680
rather large file to be starting out

245
00:08:59,680 --> 00:09:00,880
with so i started looking at the

246
00:09:00,880 --> 00:09:02,880
bootloader to see if i can understand

247
00:09:02,880 --> 00:09:05,440
how it loads loads things in and how it

248
00:09:05,440 --> 00:09:07,600
reads its keys for memory and and things

249
00:09:07,600 --> 00:09:09,839
like that so this is using binary ninja

250
00:09:09,839 --> 00:09:12,480
but even this is rather large and so

251
00:09:12,480 --> 00:09:14,320
when i'm kind of bored on the weekends

252
00:09:14,320 --> 00:09:16,320
i'll pull this open and try to make a

253
00:09:16,320 --> 00:09:20,760
little progress on it here and there

254
00:09:23,200 --> 00:09:25,360
now this is the waterfall

255
00:09:25,360 --> 00:09:27,519
classic software-defined radio waterfall

256
00:09:27,519 --> 00:09:29,760
and every one of these little peaks that

257
00:09:29,760 --> 00:09:32,240
you see appear here is a smart meter

258
00:09:32,240 --> 00:09:34,320
transmitting just about all of them and

259
00:09:34,320 --> 00:09:35,920
you can see they're transmitting all the

260
00:09:35,920 --> 00:09:37,920
time this is just an antenna that's on

261
00:09:37,920 --> 00:09:39,839
my house it lets me hear what's around

262
00:09:39,839 --> 00:09:42,000
me and so there's a lot of traffic that

263
00:09:42,000 --> 00:09:44,080
goes and so i wanted to receive this

264
00:09:44,080 --> 00:09:45,760
data and start to decode it and when i

265
00:09:45,760 --> 00:09:48,080
began i started with one of these

266
00:09:48,080 --> 00:09:50,560
great scott gadgets yardstick ones and

267
00:09:50,560 --> 00:09:53,120
so it uses the same transceiver chip but

268
00:09:53,120 --> 00:09:54,880
it only lets me listen to one channel at

269
00:09:54,880 --> 00:09:58,959
a time there's about 240 to 260 channels

270
00:09:58,959 --> 00:10:00,880
and so i was only getting to hear like a

271
00:10:00,880 --> 00:10:03,040
sliver of the traffic and i really

272
00:10:03,040 --> 00:10:05,440
wanted to use the new radio to receive

273
00:10:05,440 --> 00:10:07,760
this traffic it's kind of the tool in my

274
00:10:07,760 --> 00:10:10,079
mind and so i started building a

275
00:10:10,079 --> 00:10:11,920
receiver and wanted to build a receiver

276
00:10:11,920 --> 00:10:13,560
that could receive all

277
00:10:13,560 --> 00:10:16,800
240 channels simultaneously and so this

278
00:10:16,800 --> 00:10:18,880
is a block that receives 10 channels

279
00:10:18,880 --> 00:10:21,200
simultaneously or a number of blocks and

280
00:10:21,200 --> 00:10:24,240
decodes them and writes into a file

281
00:10:24,240 --> 00:10:25,839
and i was able to get that working and

282
00:10:25,839 --> 00:10:27,440
as i scaled it up i ended up building

283
00:10:27,440 --> 00:10:29,920
this monster computer with a huge gpu in

284
00:10:29,920 --> 00:10:32,079
it and each one of these blocks you see

285
00:10:32,079 --> 00:10:34,480
on the right decodes 10 channels and

286
00:10:34,480 --> 00:10:35,680
feeds it in

287
00:10:35,680 --> 00:10:37,680
and tries to you know gather it all down

288
00:10:37,680 --> 00:10:40,000
and to do with 240 and that computer was

289
00:10:40,000 --> 00:10:42,079
just smoke was flying out of it trying

290
00:10:42,079 --> 00:10:43,839
to decode this stuff and and it wasn't

291
00:10:43,839 --> 00:10:46,320
really working and so despair set in and

292
00:10:46,320 --> 00:10:48,000
i went to youtube looking for

293
00:10:48,000 --> 00:10:50,880
inspiration and i came across this guy

294
00:10:50,880 --> 00:10:53,120
jacob gilbert giving a talk at the new

295
00:10:53,120 --> 00:10:55,519
radio conference of a flowgraph that

296
00:10:55,519 --> 00:10:58,560
they created that does frequency hopping

297
00:10:58,560 --> 00:11:01,120
a spread spectrum decoding where it just

298
00:11:01,120 --> 00:11:02,640
looks for packets anywhere and it

299
00:11:02,640 --> 00:11:04,160
decodes it you don't have to look at

300
00:11:04,160 --> 00:11:05,680
individual channels

301
00:11:05,680 --> 00:11:07,839
and so you know hope hope had arrived

302
00:11:07,839 --> 00:11:10,240
again and i took this flow graph and i

303
00:11:10,240 --> 00:11:12,800
added this part to the bottom here and

304
00:11:12,800 --> 00:11:14,720
ended up creating my own block to

305
00:11:14,720 --> 00:11:17,600
specifically decode the landis and gear

306
00:11:17,600 --> 00:11:20,079
data and so what i did was feed in a

307
00:11:20,079 --> 00:11:22,320
sync word initially these one zero one

308
00:11:22,320 --> 00:11:25,360
zeros this from the wiki shows uh the

309
00:11:25,360 --> 00:11:27,360
sync and the header that these smart

310
00:11:27,360 --> 00:11:30,399
meters transmit out that i figured out

311
00:11:30,399 --> 00:11:31,839
and so i added that to the block and

312
00:11:31,839 --> 00:11:33,440
what that does is it filters down all

313
00:11:33,440 --> 00:11:35,600
the transmission it sees and just gets

314
00:11:35,600 --> 00:11:38,079
this initial sync and then passes those

315
00:11:38,079 --> 00:11:40,640
packets into this grid stream block

316
00:11:40,640 --> 00:11:42,399
and what this blog lets me do is kind of

317
00:11:42,399 --> 00:11:44,800
filter some stuff down and filter by

318
00:11:44,800 --> 00:11:47,440
network so these networks what they do

319
00:11:47,440 --> 00:11:49,200
is if two different power companies are

320
00:11:49,200 --> 00:11:51,519
using the same types of meters they

321
00:11:51,519 --> 00:11:53,760
assign them a different crc value

322
00:11:53,760 --> 00:11:56,399
basically for their packets so that one

323
00:11:56,399 --> 00:11:58,160
group of meters from one power company

324
00:11:58,160 --> 00:11:59,760
and another group of meters from another

325
00:11:59,760 --> 00:12:01,600
power company don't hear each other they

326
00:12:01,600 --> 00:12:03,680
don't interact they frequency hop

327
00:12:03,680 --> 00:12:05,600
differently and so they can basically

328
00:12:05,600 --> 00:12:07,680
coexist right near each other and so the

329
00:12:07,680 --> 00:12:10,240
first step is figuring out well what crc

330
00:12:10,240 --> 00:12:12,399
is used by the power company i want to

331
00:12:12,399 --> 00:12:14,720
look at and so i can enable or disable

332
00:12:14,720 --> 00:12:15,600
that

333
00:12:15,600 --> 00:12:17,440
there's two kinds of packets there's

334
00:12:17,440 --> 00:12:20,000
this five five packet which is basically

335
00:12:20,000 --> 00:12:22,720
a broadcast packet as far as i can tell

336
00:12:22,720 --> 00:12:24,480
and then there's what's called a d5

337
00:12:24,480 --> 00:12:26,639
packet which is more of a routed packet

338
00:12:26,639 --> 00:12:28,720
it contains a source and a destination

339
00:12:28,720 --> 00:12:31,680
to route packets across the network

340
00:12:31,680 --> 00:12:34,000
and so the packet we want to look at is

341
00:12:34,000 --> 00:12:36,560
a five five packet and so this block

342
00:12:36,560 --> 00:12:38,399
lets me filter it down and say i just

343
00:12:38,399 --> 00:12:40,399
want to see five five packets of a

344
00:12:40,399 --> 00:12:42,160
certain length which are the ones that

345
00:12:42,160 --> 00:12:44,880
are broadcasting out these gps

346
00:12:44,880 --> 00:12:47,519
coordinates and this uptime data and

347
00:12:47,519 --> 00:12:49,839
then i can choose to either enable or or

348
00:12:49,839 --> 00:12:52,320
not enable the crc

349
00:12:52,320 --> 00:12:54,720
so here's the the sandia labs that jacob

350
00:12:54,720 --> 00:12:57,120
gilbert flowgraph running

351
00:12:57,120 --> 00:12:59,040
and we see a decoding information and

352
00:12:59,040 --> 00:13:00,959
it's showing the packets down there at

353
00:13:00,959 --> 00:13:02,639
the bottom that it's receiving and

354
00:13:02,639 --> 00:13:05,040
decoding and so i push those out to a

355
00:13:05,040 --> 00:13:07,760
little tcp server from the new radio

356
00:13:07,760 --> 00:13:10,160
flow graph and i wrote a python script

357
00:13:10,160 --> 00:13:12,240
that connects to that

358
00:13:12,240 --> 00:13:14,240
and it decodes the information that it's

359
00:13:14,240 --> 00:13:17,279
seeing so when a packet comes across it

360
00:13:17,279 --> 00:13:19,680
separates out the first number which is

361
00:13:19,680 --> 00:13:22,079
the meter id and then the uptime in

362
00:13:22,079 --> 00:13:23,600
seconds and then i convert that to

363
00:13:23,600 --> 00:13:25,120
uptime and days

364
00:13:25,120 --> 00:13:27,040
and then the latitude and longitude like

365
00:13:27,040 --> 00:13:28,639
if you copy and pasted that into a

366
00:13:28,639 --> 00:13:31,120
google map you'd see the area around my

367
00:13:31,120 --> 00:13:32,240
neighborhood

368
00:13:32,240 --> 00:13:35,519
and then an uptime in uh or a timestamp

369
00:13:35,519 --> 00:13:37,440
there at the end so i can keep track of

370
00:13:37,440 --> 00:13:39,760
when these came in and that's ultimately

371
00:13:39,760 --> 00:13:41,760
how i was able to plot all these red

372
00:13:41,760 --> 00:13:43,839
dots on the map i was going down that

373
00:13:43,839 --> 00:13:46,399
freeway at 70 miles an hour

374
00:13:46,399 --> 00:13:48,560
in a car with an antenna on top of it

375
00:13:48,560 --> 00:13:50,320
not doing anything special you can see

376
00:13:50,320 --> 00:13:52,240
just how much data is captured i mean

377
00:13:52,240 --> 00:13:54,480
the meter had to transmit that

378
00:13:54,480 --> 00:13:56,560
but the thing is in order to do

379
00:13:56,560 --> 00:13:58,639
something really interesting we have to

380
00:13:58,639 --> 00:14:01,120
transmit back to this network and so the

381
00:14:01,120 --> 00:14:02,639
power company you know they're going to

382
00:14:02,639 --> 00:14:04,560
get mad if i start transmitting back to

383
00:14:04,560 --> 00:14:06,320
the their network and i'm sure some

384
00:14:06,320 --> 00:14:08,480
people will come to pay me a visit so

385
00:14:08,480 --> 00:14:10,720
what i needed to do was build my own

386
00:14:10,720 --> 00:14:13,199
smart meter network in order to run some

387
00:14:13,199 --> 00:14:14,959
experiments that i'm completely in

388
00:14:14,959 --> 00:14:16,560
control of it so i thought do i have

389
00:14:16,560 --> 00:14:18,639
enough like i bought so much stuff do i

390
00:14:18,639 --> 00:14:21,040
have enough stuff now to build my own

391
00:14:21,040 --> 00:14:22,639
smart meter network

392
00:14:22,639 --> 00:14:23,600
and so

393
00:14:23,600 --> 00:14:26,399
using the collector that i found i i got

394
00:14:26,399 --> 00:14:28,959
a message on twitter that said hey there

395
00:14:28,959 --> 00:14:30,800
might be something interesting inside

396
00:14:30,800 --> 00:14:32,079
there

397
00:14:32,079 --> 00:14:33,600
so i've been sitting on my floor this

398
00:14:33,600 --> 00:14:34,959
whole time i've been looking at meters

399
00:14:34,959 --> 00:14:36,720
and so i decided to take it apart and

400
00:14:36,720 --> 00:14:38,240
it's a bunch of high-res photos of

401
00:14:38,240 --> 00:14:40,880
what's inside that i posted on the the

402
00:14:40,880 --> 00:14:43,360
wiki if you want to take a look at it

403
00:14:43,360 --> 00:14:45,040
and so as i opened it up you'll see the

404
00:14:45,040 --> 00:14:46,959
first thing i saw was a magnetic read

405
00:14:46,959 --> 00:14:48,000
switch

406
00:14:48,000 --> 00:14:50,160
which is hopefully used to wipe security

407
00:14:50,160 --> 00:14:52,240
keys or or something else if somebody

408
00:14:52,240 --> 00:14:55,199
happens to take one of these devices

409
00:14:55,199 --> 00:14:57,199
and so i began taking it apart

410
00:14:57,199 --> 00:14:58,959
in it there's also a large battery and

411
00:14:58,959 --> 00:15:00,800
that battery is used so when power goes

412
00:15:00,800 --> 00:15:02,720
out it can still relay messages to the

413
00:15:02,720 --> 00:15:05,199
power company the meters also have super

414
00:15:05,199 --> 00:15:07,040
capacitors inside them and so when power

415
00:15:07,040 --> 00:15:08,800
goes out or if they get pulled off the

416
00:15:08,800 --> 00:15:11,279
wall they can relay a message back

417
00:15:11,279 --> 00:15:13,440
this is a modem board like the modems

418
00:15:13,440 --> 00:15:15,199
you saw on my desk it's the same board

419
00:15:15,199 --> 00:15:17,199
slid inside there and so that's how it

420
00:15:17,199 --> 00:15:19,760
this device communicates with the mesh

421
00:15:19,760 --> 00:15:22,000
network to all the meters and then as i

422
00:15:22,000 --> 00:15:24,399
pull this off my mind was blown

423
00:15:24,399 --> 00:15:27,519
inside there is an m-stated drive that's

424
00:15:27,519 --> 00:15:29,600
a motherboard with an intel processor

425
00:15:29,600 --> 00:15:32,560
below it run in windows embedded seven

426
00:15:32,560 --> 00:15:34,240
and the whole program that this

427
00:15:34,240 --> 00:15:37,279
collector runs is written in dot-net

428
00:15:37,279 --> 00:15:40,000
which means we can just load it in uh in

429
00:15:40,000 --> 00:15:42,240
some software and basically see the full

430
00:15:42,240 --> 00:15:43,600
source code

431
00:15:43,600 --> 00:15:45,759
which we'll pull up here in a moment

432
00:15:45,759 --> 00:15:47,279
so i pulled out the rest of these

433
00:15:47,279 --> 00:15:49,759
devices and just for thoroughness you'll

434
00:15:49,759 --> 00:15:52,000
see there's also a cellular modem in

435
00:15:52,000 --> 00:15:53,920
here and so this collector how it sends

436
00:15:53,920 --> 00:15:55,680
its data back is over a cellular

437
00:15:55,680 --> 00:15:56,800
connection

438
00:15:56,800 --> 00:15:59,680
so inside that ssd drive there was a

439
00:15:59,680 --> 00:16:02,079
folder called collector it's convenient

440
00:16:02,079 --> 00:16:04,240
enough so i copied that to a different

441
00:16:04,240 --> 00:16:07,199
windows machine and loaded up d and spy

442
00:16:07,199 --> 00:16:09,839
and sure enough it's able to decompile

443
00:16:09,839 --> 00:16:12,639
everything that's there all the

444
00:16:12,639 --> 00:16:14,079
symbols everything else that need to

445
00:16:14,079 --> 00:16:15,680
exist is there and you can just see the

446
00:16:15,680 --> 00:16:17,360
full source code like there's nothing

447
00:16:17,360 --> 00:16:19,519
hidden at all about what's on this thing

448
00:16:19,519 --> 00:16:21,920
and i can even run the thing in debug

449
00:16:21,920 --> 00:16:24,000
mode and set break points and step

450
00:16:24,000 --> 00:16:25,680
through the code and so this is that

451
00:16:25,680 --> 00:16:27,759
application starting up i connected one

452
00:16:27,759 --> 00:16:30,079
of the modems with the usb to serial

453
00:16:30,079 --> 00:16:32,800
adapter over to that computer so that it

454
00:16:32,800 --> 00:16:34,399
could communicate with it but i needed

455
00:16:34,399 --> 00:16:36,639
to set some configuration data and this

456
00:16:36,639 --> 00:16:38,639
was the initialization file i couldn't

457
00:16:38,639 --> 00:16:41,519
make out anything of it but i did notice

458
00:16:41,519 --> 00:16:44,000
in that code that it decrypts it when it

459
00:16:44,000 --> 00:16:46,639
loads it and then it encrypts it when it

460
00:16:46,639 --> 00:16:48,079
writes it back to disk so i thought well

461
00:16:48,079 --> 00:16:51,279
what if i just disable those routines uh

462
00:16:51,279 --> 00:16:52,639
and sure enough there's the

463
00:16:52,639 --> 00:16:54,720
configuration file there's no encryption

464
00:16:54,720 --> 00:16:56,800
anymore and i can set the network id and

465
00:16:56,800 --> 00:16:58,720
the other things i need to set so i can

466
00:16:58,720 --> 00:17:01,120
build my own simulated network and we

467
00:17:01,120 --> 00:17:02,480
see one of the meters i have in the

468
00:17:02,480 --> 00:17:04,559
faraday cage communicate with it and

469
00:17:04,559 --> 00:17:06,959
that's its message that shows up there

470
00:17:06,959 --> 00:17:08,640
on the screen

471
00:17:08,640 --> 00:17:11,199
and so now that i kind of have my own

472
00:17:11,199 --> 00:17:13,679
network i need to build a transmitter

473
00:17:13,679 --> 00:17:15,359
that allows me to interact with that

474
00:17:15,359 --> 00:17:18,160
network and so my software radio here i

475
00:17:18,160 --> 00:17:20,079
have set up with kind of the signal

476
00:17:20,079 --> 00:17:22,079
looping back into it so i can see what

477
00:17:22,079 --> 00:17:24,640
i'm transmitting out and then i also

478
00:17:24,640 --> 00:17:27,119
have a modem here and this modem i found

479
00:17:27,119 --> 00:17:28,640
a pin that i could set to ground

480
00:17:28,640 --> 00:17:30,559
internally and it puts it into a test

481
00:17:30,559 --> 00:17:32,799
mode and so i have a terminal window

482
00:17:32,799 --> 00:17:35,120
here with it up it allows me to set

483
00:17:35,120 --> 00:17:37,280
things like the received channel that

484
00:17:37,280 --> 00:17:39,039
i'm going to go to and whether i want to

485
00:17:39,039 --> 00:17:41,919
receive data or send test packets

486
00:17:41,919 --> 00:17:43,760
and so this is the test setup now that

487
00:17:43,760 --> 00:17:45,760
i'm i'm going to use to try to write my

488
00:17:45,760 --> 00:17:46,400
own

489
00:17:46,400 --> 00:17:48,880
uh device to transmit but

490
00:17:48,880 --> 00:17:50,240
there's some challenges with

491
00:17:50,240 --> 00:17:52,240
transmitting to this network and and

492
00:17:52,240 --> 00:17:55,600
this should help the sum that up so

493
00:17:55,600 --> 00:17:57,760
if we look at a a graph here and we just

494
00:17:57,760 --> 00:18:00,720
put time on one axis and we put

495
00:18:00,720 --> 00:18:02,960
frequency on the other so they transmit

496
00:18:02,960 --> 00:18:07,200
from 902 to 928 megahertz

497
00:18:07,200 --> 00:18:09,200
they also hop around all the time even

498
00:18:09,200 --> 00:18:11,760
if they're not transmitting so every 700

499
00:18:11,760 --> 00:18:13,919
milliseconds every 7 tenths of a second

500
00:18:13,919 --> 00:18:16,000
the meter hops to a new frequency

501
00:18:16,000 --> 00:18:18,000
sometimes it transmits sometimes it

502
00:18:18,000 --> 00:18:20,799
doesn't but it's constantly hopping so

503
00:18:20,799 --> 00:18:23,039
the the challenge is as this is hopping

504
00:18:23,039 --> 00:18:25,039
around where is it hopping what

505
00:18:25,039 --> 00:18:27,280
frequency is it going to be on every 700

506
00:18:27,280 --> 00:18:29,360
milliseconds so that we can interact

507
00:18:29,360 --> 00:18:31,919
with it and send it some data there

508
00:18:31,919 --> 00:18:34,000
now if we look at this another way

509
00:18:34,000 --> 00:18:35,840
we say let's look at frequency on the

510
00:18:35,840 --> 00:18:38,320
bottom and let's just look at power on

511
00:18:38,320 --> 00:18:40,640
the top this kind of sets the stage for

512
00:18:40,640 --> 00:18:42,559
what you'll see with these other

513
00:18:42,559 --> 00:18:43,760
flow graphs

514
00:18:43,760 --> 00:18:46,000
every time a meter transmits the burst

515
00:18:46,000 --> 00:18:48,240
is just shown like this a burst at a

516
00:18:48,240 --> 00:18:50,640
different frequency and a peak that pops

517
00:18:50,640 --> 00:18:53,039
up and the the power that it it

518
00:18:53,039 --> 00:18:54,840
transmits out

519
00:18:54,840 --> 00:18:57,039
ultimately and so that's the same thing

520
00:18:57,039 --> 00:18:58,720
you saw on the waterfall those little

521
00:18:58,720 --> 00:19:00,640
peaks that pop up and the waterfalls

522
00:19:00,640 --> 00:19:03,120
that flow down

523
00:19:03,120 --> 00:19:05,360
and so i thought as opposed to trying to

524
00:19:05,360 --> 00:19:07,280
decode and figure out the frequency

525
00:19:07,280 --> 00:19:10,240
hopping and building this huge scheme

526
00:19:10,240 --> 00:19:12,640
that allows us to hop and hop along with

527
00:19:12,640 --> 00:19:14,160
the meter and hop along with different

528
00:19:14,160 --> 00:19:15,760
meters they all hop differently mind you

529
00:19:15,760 --> 00:19:17,200
they're not all hopping to the same

530
00:19:17,200 --> 00:19:18,400
pattern

531
00:19:18,400 --> 00:19:21,120
what if i could build a transmitter that

532
00:19:21,120 --> 00:19:25,200
just split out all 260 channels and

533
00:19:25,200 --> 00:19:27,600
transmitted on every single channel

534
00:19:27,600 --> 00:19:29,840
simultaneously every single time i sent

535
00:19:29,840 --> 00:19:31,679
a transmission so no matter where the

536
00:19:31,679 --> 00:19:34,080
meter was what frequency it was at the

537
00:19:34,080 --> 00:19:35,679
given time

538
00:19:35,679 --> 00:19:37,440
it would receive the message we send and

539
00:19:37,440 --> 00:19:40,640
so i set out to try to build that in gnu

540
00:19:40,640 --> 00:19:42,160
radio

541
00:19:42,160 --> 00:19:43,760
and so this took this process you know

542
00:19:43,760 --> 00:19:45,200
this talk will only take a few minutes

543
00:19:45,200 --> 00:19:46,640
to tell you about it took a lot longer

544
00:19:46,640 --> 00:19:49,440
than a few minutes uh to figure this out

545
00:19:49,440 --> 00:19:50,960
but so what i started with is some

546
00:19:50,960 --> 00:19:52,640
blocks here that are just simulators

547
00:19:52,640 --> 00:19:55,039
they send a cosign i set them to a few

548
00:19:55,039 --> 00:19:56,880
different frequencies and this block

549
00:19:56,880 --> 00:19:59,360
combines those individual signals into

550
00:19:59,360 --> 00:20:02,000
one spread of bandwidth so that they're

551
00:20:02,000 --> 00:20:04,000
together so that instead of four

552
00:20:04,000 --> 00:20:05,840
individual signals we're sending the

553
00:20:05,840 --> 00:20:07,840
four individual singles but on the same

554
00:20:07,840 --> 00:20:10,400
bandwidth at the same time

555
00:20:10,400 --> 00:20:12,480
and so this initially i thought okay

556
00:20:12,480 --> 00:20:14,640
that's that's cool this block allows me

557
00:20:14,640 --> 00:20:17,280
to put these four together and so that

558
00:20:17,280 --> 00:20:19,600
initial experiment i i thought looked

559
00:20:19,600 --> 00:20:22,400
good so the game now is to try to scale

560
00:20:22,400 --> 00:20:24,400
it up from these four

561
00:20:24,400 --> 00:20:27,039
and so i i took 10 signals instead and

562
00:20:27,039 --> 00:20:28,960
fed it into this block

563
00:20:28,960 --> 00:20:31,280
and and tried to send it and and as you

564
00:20:31,280 --> 00:20:32,320
do this

565
00:20:32,320 --> 00:20:34,240
the thing is you know the more you send

566
00:20:34,240 --> 00:20:35,760
the more blocks you start to put

567
00:20:35,760 --> 00:20:38,159
together the more processor it takes

568
00:20:38,159 --> 00:20:40,320
other things start to happen right so

569
00:20:40,320 --> 00:20:42,480
while it seems like this should be easy

570
00:20:42,480 --> 00:20:43,960
just make one with

571
00:20:43,960 --> 00:20:47,600
260 it's a little challenging so as i

572
00:20:47,600 --> 00:20:50,080
had these initial signals uh fed in

573
00:20:50,080 --> 00:20:51,520
there i thought okay that's great

574
00:20:51,520 --> 00:20:53,120
they're not doing anything i need to

575
00:20:53,120 --> 00:20:55,039
modulate one of these signals and see if

576
00:20:55,039 --> 00:20:57,760
it still stays within its channel and so

577
00:20:57,760 --> 00:20:59,600
i'm just sending some random data but we

578
00:20:59,600 --> 00:21:01,120
can see one of those doesn't look like

579
00:21:01,120 --> 00:21:04,000
the others and it has this modulated

580
00:21:04,000 --> 00:21:06,320
random data so it's frequency shift

581
00:21:06,320 --> 00:21:08,720
keying is the the modulation type we're

582
00:21:08,720 --> 00:21:10,640
working with and so i thought okay well

583
00:21:10,640 --> 00:21:13,840
let me send just a string of of ones and

584
00:21:13,840 --> 00:21:15,919
zeros so i sent something other than

585
00:21:15,919 --> 00:21:18,159
random data and see can i build a flow

586
00:21:18,159 --> 00:21:20,880
graph where i send it on a few channels

587
00:21:20,880 --> 00:21:23,760
and then i show that data and i i decode

588
00:21:23,760 --> 00:21:24,880
it

589
00:21:24,880 --> 00:21:27,440
so at the top here you see that waveform

590
00:21:27,440 --> 00:21:29,919
representation of those ones and zeros

591
00:21:29,919 --> 00:21:31,520
on the bottom you see that i'm sitting

592
00:21:31,520 --> 00:21:33,760
it on three individual channels and as i

593
00:21:33,760 --> 00:21:35,360
slide this over you get kind of the

594
00:21:35,360 --> 00:21:36,880
static we're in the middle somewhere

595
00:21:36,880 --> 00:21:38,960
we're not on a channel and as i land on

596
00:21:38,960 --> 00:21:41,120
the next channel you see it's decoding

597
00:21:41,120 --> 00:21:42,640
it properly and then i do the same thing

598
00:21:42,640 --> 00:21:45,120
i slide it over to the next channel here

599
00:21:45,120 --> 00:21:47,120
and we say okay now it's decoding it

600
00:21:47,120 --> 00:21:49,919
properly so i can send multiple channels

601
00:21:49,919 --> 00:21:52,799
of the same data and it looks like this

602
00:21:52,799 --> 00:21:54,720
theory is panning out

603
00:21:54,720 --> 00:21:57,360
so now what i need to do is send some

604
00:21:57,360 --> 00:22:00,720
actual data so this flow graph here what

605
00:22:00,720 --> 00:22:04,000
the top half lets me do is create a a

606
00:22:04,000 --> 00:22:07,760
packet of data so this is 512

607
00:22:07,760 --> 00:22:10,400
bits of information so it's all the bits

608
00:22:10,400 --> 00:22:12,640
that make up one smart meter packet

609
00:22:12,640 --> 00:22:14,480
transmission

610
00:22:14,480 --> 00:22:16,799
and then i feed it over across through

611
00:22:16,799 --> 00:22:19,679
this fsk encoder

612
00:22:19,679 --> 00:22:22,000
and then down across it turns it into a

613
00:22:22,000 --> 00:22:24,159
little packet of information and turns

614
00:22:24,159 --> 00:22:26,480
it into a stream for good radio it sends

615
00:22:26,480 --> 00:22:28,240
it to a graph that lets me see what that

616
00:22:28,240 --> 00:22:30,159
looks like and then at the bottom

617
00:22:30,159 --> 00:22:31,520
transmits it out and then you remember

618
00:22:31,520 --> 00:22:33,760
that loopback that i had go through on

619
00:22:33,760 --> 00:22:35,360
my radio that's that part there that

620
00:22:35,360 --> 00:22:37,919
lets me see what i'm transmitting inside

621
00:22:37,919 --> 00:22:39,520
of my own flow graph so it kind of lets

622
00:22:39,520 --> 00:22:41,600
me see what's the what's the data look

623
00:22:41,600 --> 00:22:43,919
like that's going over to the modem the

624
00:22:43,919 --> 00:22:45,360
rf data

625
00:22:45,360 --> 00:22:47,200
and so at the top there we see a much

626
00:22:47,200 --> 00:22:48,640
more complex

627
00:22:48,640 --> 00:22:50,799
signal and at the bottom here we see

628
00:22:50,799 --> 00:22:53,360
this little a single channel of data

629
00:22:53,360 --> 00:22:55,080
being sent so it's at

630
00:22:55,080 --> 00:23:00,799
915.1 megahertz and that's a channel 131

631
00:23:00,799 --> 00:23:03,120
on the smart meter uh

632
00:23:03,120 --> 00:23:04,640
network

633
00:23:04,640 --> 00:23:06,960
so this terminal window here on the left

634
00:23:06,960 --> 00:23:08,400
is connected to

635
00:23:08,400 --> 00:23:11,280
uh the modem that landis and gear modem

636
00:23:11,280 --> 00:23:12,799
that you saw on the table and these are

637
00:23:12,799 --> 00:23:14,320
the different functions that lets you do

638
00:23:14,320 --> 00:23:16,400
it lets you send test packets and set

639
00:23:16,400 --> 00:23:18,080
the channel that you want to receive on

640
00:23:18,080 --> 00:23:20,240
and receive packets and a bunch of cool

641
00:23:20,240 --> 00:23:23,039
tests and so we'll set it to channel 131

642
00:23:23,039 --> 00:23:25,039
and tell it to receive and we see hey

643
00:23:25,039 --> 00:23:27,360
it's receiving good packets like these

644
00:23:27,360 --> 00:23:29,280
packets are coming across it's a good

645
00:23:29,280 --> 00:23:30,320
signal

646
00:23:30,320 --> 00:23:32,559
the crc is correct

647
00:23:32,559 --> 00:23:35,280
everything about it is is looking good

648
00:23:35,280 --> 00:23:37,840
the only challenge is is that it's only

649
00:23:37,840 --> 00:23:40,480
on one channel right now so we're

650
00:23:40,480 --> 00:23:42,960
channel 131 but if we change the channel

651
00:23:42,960 --> 00:23:44,559
even to the channel right next to it

652
00:23:44,559 --> 00:23:46,080
nothing comes across

653
00:23:46,080 --> 00:23:49,440
any other channel other than 131 right

654
00:23:49,440 --> 00:23:51,919
now it won't receive anything but on

655
00:23:51,919 --> 00:23:55,120
channel 131 we're doing fantastic it's

656
00:23:55,120 --> 00:23:57,600
like perfect data that comes across it

657
00:23:57,600 --> 00:24:00,159
receives it every single time and so i

658
00:24:00,159 --> 00:24:01,840
was pretty excited at this point because

659
00:24:01,840 --> 00:24:03,279
it's kind of really the first time i'd

660
00:24:03,279 --> 00:24:05,039
ever built a

661
00:24:05,039 --> 00:24:07,039
stream of information in gnu radio and

662
00:24:07,039 --> 00:24:09,440
managed to transmit it out had something

663
00:24:09,440 --> 00:24:11,840
other than the new radio receive that

664
00:24:11,840 --> 00:24:13,679
signal properly like it's kind of

665
00:24:13,679 --> 00:24:16,320
verified with another device being the

666
00:24:16,320 --> 00:24:19,120
latest secure modem and so this is the

667
00:24:19,120 --> 00:24:21,279
kind of more complex version but the

668
00:24:21,279 --> 00:24:23,200
familiar setup you saw before where we

669
00:24:23,200 --> 00:24:25,039
feed the signal in and we try to scale

670
00:24:25,039 --> 00:24:28,159
it up so let's send the same signal but

671
00:24:28,159 --> 00:24:30,400
let's send it out on 10 channels as

672
00:24:30,400 --> 00:24:32,960
opposed to one channel and see how that

673
00:24:32,960 --> 00:24:33,840
works

674
00:24:33,840 --> 00:24:36,559
and so we see there's my signal there's

675
00:24:36,559 --> 00:24:38,159
10 little bursts down there at the

676
00:24:38,159 --> 00:24:40,000
bottom that are coming out they're not

677
00:24:40,000 --> 00:24:42,400
quite spaced at 100 kilohertz at this

678
00:24:42,400 --> 00:24:45,679
point but i'm sending 10 and and it

679
00:24:45,679 --> 00:24:47,039
looks like they're all grouped together

680
00:24:47,039 --> 00:24:49,200
and it looks pretty clean and so i'm

681
00:24:49,200 --> 00:24:51,679
pretty excited about that and so i add

682
00:24:51,679 --> 00:24:54,240
in some blocks that space it accord

683
00:24:54,240 --> 00:24:56,240
properly so that it's spaced at 100

684
00:24:56,240 --> 00:24:58,640
kilohertz for each channel

685
00:24:58,640 --> 00:25:00,320
i'm also feeling pretty good so i say

686
00:25:00,320 --> 00:25:02,559
what the heck let's add another set of

687
00:25:02,559 --> 00:25:04,880
blocks right below that to take those 10

688
00:25:04,880 --> 00:25:05,840
channels

689
00:25:05,840 --> 00:25:08,799
and then multiply that by 2 basically so

690
00:25:08,799 --> 00:25:10,799
that we send out 20 channels of

691
00:25:10,799 --> 00:25:13,520
information as opposed to 10 which is

692
00:25:13,520 --> 00:25:15,120
that block there that you see with the

693
00:25:15,120 --> 00:25:17,440
two inputs and the one output

694
00:25:17,440 --> 00:25:19,360
and then we feed it across again to the

695
00:25:19,360 --> 00:25:21,360
the software defined radio

696
00:25:21,360 --> 00:25:22,400
output

697
00:25:22,400 --> 00:25:25,120
and so here we see the burst of 20

698
00:25:25,120 --> 00:25:27,600
transmissions down there and now when we

699
00:25:27,600 --> 00:25:29,600
go over to our modem and we set it to

700
00:25:29,600 --> 00:25:32,480
channel 131 we receive data like we

701
00:25:32,480 --> 00:25:33,679
would expect

702
00:25:33,679 --> 00:25:35,360
we see the data once a second but if we

703
00:25:35,360 --> 00:25:38,320
set it to channels in year 131 now we

704
00:25:38,320 --> 00:25:40,720
also receive data so we're not just

705
00:25:40,720 --> 00:25:42,799
sending one channel of information at a

706
00:25:42,799 --> 00:25:44,559
time we're sending 20 channels if a

707
00:25:44,559 --> 00:25:46,559
meter were to hop and land in any one of

708
00:25:46,559 --> 00:25:49,200
those 20 channels it would receive the

709
00:25:49,200 --> 00:25:51,840
information that we're sending

710
00:25:51,840 --> 00:25:54,000
but outside of that it it wouldn't

711
00:25:54,000 --> 00:25:56,799
receive anything so now it was to try to

712
00:25:56,799 --> 00:25:59,120
scale it up but as i scale it up you see

713
00:25:59,120 --> 00:26:01,279
at the bottom there that would send

714
00:26:01,279 --> 00:26:03,440
40 channels of information and then i

715
00:26:03,440 --> 00:26:04,880
have another one that i scaled up to

716
00:26:04,880 --> 00:26:07,279
send 80 channels of information but as i

717
00:26:07,279 --> 00:26:09,440
started to scale this i started to

718
00:26:09,440 --> 00:26:11,200
notice this problem you know and the

719
00:26:11,200 --> 00:26:13,279
sinking feeling as that the more i

720
00:26:13,279 --> 00:26:15,840
scaled it and the the bottom left what

721
00:26:15,840 --> 00:26:18,320
you'll see is these little u's that

722
00:26:18,320 --> 00:26:20,000
start transmitting out and what that

723
00:26:20,000 --> 00:26:21,840
means is that it's called an underflow

724
00:26:21,840 --> 00:26:23,679
it means that data isn't passing through

725
00:26:23,679 --> 00:26:26,400
my flow graph fast enough to get to the

726
00:26:26,400 --> 00:26:28,320
software-defined radio it's basically

727
00:26:28,320 --> 00:26:30,159
when it's ready to transmit the data is

728
00:26:30,159 --> 00:26:32,400
not quite there yet and so how that

729
00:26:32,400 --> 00:26:34,720
translates into signals up top is that

730
00:26:34,720 --> 00:26:36,400
you see it's still receiving a good

731
00:26:36,400 --> 00:26:37,919
packet but the problem is it's not

732
00:26:37,919 --> 00:26:40,159
receiving it every time i transmit it

733
00:26:40,159 --> 00:26:42,080
sometimes it gets it and it comes across

734
00:26:42,080 --> 00:26:44,320
sometimes it doesn't and so the system

735
00:26:44,320 --> 00:26:47,039
is becoming unreliable and we're only at

736
00:26:47,039 --> 00:26:50,159
80 channels so as we try to scale it up

737
00:26:50,159 --> 00:26:53,360
further as i got to 260 just nothing

738
00:26:53,360 --> 00:26:55,279
came out anymore i mean you know it

739
00:26:55,279 --> 00:26:56,880
literally there was so many underflows

740
00:26:56,880 --> 00:26:58,799
so i was in the new radio chat channel

741
00:26:58,799 --> 00:27:00,240
there's a ton of helpful people there

742
00:27:00,240 --> 00:27:03,200
and a guy named dr mpeg said hey i think

743
00:27:03,200 --> 00:27:05,360
you should use this fft block instead

744
00:27:05,360 --> 00:27:07,440
like it's way more processor efficient

745
00:27:07,440 --> 00:27:09,279
so i'd look i changed the flow graph all

746
00:27:09,279 --> 00:27:10,559
around

747
00:27:10,559 --> 00:27:12,240
and transmit the data out and now you

748
00:27:12,240 --> 00:27:13,440
can see at the bottom there that's a

749
00:27:13,440 --> 00:27:15,679
full 260 channels that's being

750
00:27:15,679 --> 00:27:18,000
transmitted no matter where i tell this

751
00:27:18,000 --> 00:27:20,080
modem to go it receives the transmission

752
00:27:20,080 --> 00:27:22,000
it receives the transmission perfect

753
00:27:22,000 --> 00:27:24,880
every single time and so what this meant

754
00:27:24,880 --> 00:27:27,120
is at this point i have a receiver

755
00:27:27,120 --> 00:27:29,039
through the sandia labs

756
00:27:29,039 --> 00:27:30,880
receiver that allows me to receive a

757
00:27:30,880 --> 00:27:32,880
frequency hopping transmission on any

758
00:27:32,880 --> 00:27:35,039
channel and now i have a transmitter

759
00:27:35,039 --> 00:27:37,440
that allows me to transmit back on every

760
00:27:37,440 --> 00:27:39,440
single channel so that i can essentially

761
00:27:39,440 --> 00:27:40,799
interact with this network without

762
00:27:40,799 --> 00:27:42,640
knowing anything about the frequency

763
00:27:42,640 --> 00:27:46,080
hopping so to say i was a little excited

764
00:27:46,080 --> 00:27:48,720
uh would be just uh you know it wouldn't

765
00:27:48,720 --> 00:27:52,480
even begin to describe uh staying up all

766
00:27:52,480 --> 00:27:55,360
night long and and trying to get this

767
00:27:55,360 --> 00:27:57,760
thing going so i was pumped up

768
00:27:57,760 --> 00:28:01,200
so now now the game is to load all of

769
00:28:01,200 --> 00:28:04,399
this into the farady cage

770
00:28:04,399 --> 00:28:06,000
and try to send some intelligent

771
00:28:06,000 --> 00:28:07,919
messages now these meters they're

772
00:28:07,919 --> 00:28:10,080
they're not dumb by by any stretch of

773
00:28:10,080 --> 00:28:12,720
the imagination when you send data to

774
00:28:12,720 --> 00:28:16,320
them it it has to be proper data and so

775
00:28:16,320 --> 00:28:18,159
when you see this setup i have here i

776
00:28:18,159 --> 00:28:19,279
have this

777
00:28:19,279 --> 00:28:21,120
software defined radio going into the

778
00:28:21,120 --> 00:28:22,480
faraday cage over there and i have a

779
00:28:22,480 --> 00:28:24,960
couple modems one's in test mode and

780
00:28:24,960 --> 00:28:27,919
one's connected up to the um

781
00:28:27,919 --> 00:28:30,799
the collector software it allows me to

782
00:28:30,799 --> 00:28:34,000
run some some tests there and and the

783
00:28:34,000 --> 00:28:36,640
game now is to to take the data being

784
00:28:36,640 --> 00:28:39,200
transmitted from the smart meter and it

785
00:28:39,200 --> 00:28:41,039
transmits out some sequence information

786
00:28:41,039 --> 00:28:43,760
and things like that and to receive it

787
00:28:43,760 --> 00:28:45,679
build my own packet and transmit it back

788
00:28:45,679 --> 00:28:47,440
and so that's what i'm working on as of

789
00:28:47,440 --> 00:28:48,799
this moment

790
00:28:48,799 --> 00:28:50,720
right now

791
00:28:50,720 --> 00:28:52,000
if you enjoy

792
00:28:52,000 --> 00:28:54,000
uh this kind of stuff and following

793
00:28:54,000 --> 00:28:55,440
along i encourage you to look at my

794
00:28:55,440 --> 00:28:57,840
youtube channel i document all this as i

795
00:28:57,840 --> 00:28:59,360
work on it it's kind of a choose your

796
00:28:59,360 --> 00:29:01,600
own adventure game like you're watching

797
00:29:01,600 --> 00:29:04,480
where i am right now um with this uh

798
00:29:04,480 --> 00:29:06,799
these efforts and i have a website here

799
00:29:06,799 --> 00:29:08,880
that has some links to discord channel

800
00:29:08,880 --> 00:29:11,120
and and things like that in a wiki where

801
00:29:11,120 --> 00:29:13,840
i post all my information and anyone

802
00:29:13,840 --> 00:29:16,080
create an account here and and share and

803
00:29:16,080 --> 00:29:17,600
contribute if you want i've had other

804
00:29:17,600 --> 00:29:19,679
people contribute findings here

805
00:29:19,679 --> 00:29:21,679
and i either include their name or don't

806
00:29:21,679 --> 00:29:24,720
if they want to share who they are

807
00:29:24,720 --> 00:29:26,960
and i have a github as well um where i

808
00:29:26,960 --> 00:29:28,240
share this i believe in sharing

809
00:29:28,240 --> 00:29:30,880
everything uh openly and so this the

810
00:29:30,880 --> 00:29:32,320
transmitter stuff that i'm working on as

811
00:29:32,320 --> 00:29:34,399
soon as it's cleaned up enough i'll be

812
00:29:34,399 --> 00:29:36,159
posting it here as well

813
00:29:36,159 --> 00:29:37,840
uh and so i really want to thank

814
00:29:37,840 --> 00:29:40,240
hackaday um for putting this on and for

815
00:29:40,240 --> 00:29:42,480
really having a community

816
00:29:42,480 --> 00:29:44,159
where all of us can come together and

817
00:29:44,159 --> 00:29:45,679
share this information and see what

818
00:29:45,679 --> 00:29:47,520
other people are working on it's always

819
00:29:47,520 --> 00:29:49,440
super fascinating and it's it's nice

820
00:29:49,440 --> 00:29:51,520
when we kind of come out of our closed

821
00:29:51,520 --> 00:29:54,000
environments here and and share it all

822
00:29:54,000 --> 00:29:56,399
with the world so i hope you enjoyed

823
00:29:56,399 --> 00:29:59,639
this talk

