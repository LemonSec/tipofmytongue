1
00:00:05,680 --> 00:00:07,440
all right so there's a higher than

2
00:00:07,440 --> 00:00:09,280
average chance that anyone spending

3
00:00:09,280 --> 00:00:10,639
their saturday watching the hack of

4
00:00:10,639 --> 00:00:12,719
their emoticon has also spent an evening

5
00:00:12,719 --> 00:00:14,719
hunched over a pcb looking for an

6
00:00:14,719 --> 00:00:16,880
unmarked serial port you may have even

7
00:00:16,880 --> 00:00:18,800
disarmed the occasional flash chip and

8
00:00:18,800 --> 00:00:21,119
and tried to dump its firmware but what

9
00:00:21,119 --> 00:00:23,359
if cracking into a device requires more

10
00:00:23,359 --> 00:00:26,400
advanced techniques say side channel

11
00:00:26,400 --> 00:00:27,920
power analysis

12
00:00:27,920 --> 00:00:29,840
our next guest is here to show that with

13
00:00:29,840 --> 00:00:31,920
open source tools and low-cost equipment

14
00:00:31,920 --> 00:00:34,079
you too can add these exotic techniques

15
00:00:34,079 --> 00:00:35,920
to your bag of tricks please join me in

16
00:00:35,920 --> 00:00:38,719
welcoming colonel flynn to emoticons

17
00:00:38,719 --> 00:00:41,200
all right thanks so much tom um

18
00:00:41,200 --> 00:00:43,360
see i hope i hope you enjoy this this

19
00:00:43,360 --> 00:00:45,120
talk will be a little i don't want to

20
00:00:45,120 --> 00:00:47,440
say that different but what i sort of

21
00:00:47,440 --> 00:00:49,760
miss about the real conferences is the

22
00:00:49,760 --> 00:00:51,440
chance to you know talk to people and to

23
00:00:51,440 --> 00:00:53,680
sit down next to someone doing some

24
00:00:53,680 --> 00:00:55,120
interesting work and say oh can you show

25
00:00:55,120 --> 00:00:57,120
me how this works can i just watch you

26
00:00:57,120 --> 00:01:00,160
do it um so one of the things about this

27
00:01:00,160 --> 00:01:01,920
talk is i'm going to have a number of

28
00:01:01,920 --> 00:01:04,559
demos all the demos are going to use

29
00:01:04,559 --> 00:01:06,400
code that's available that's either

30
00:01:06,400 --> 00:01:08,159
already posted or if i've posted

31
00:01:08,159 --> 00:01:09,200
recently

32
00:01:09,200 --> 00:01:10,320
um

33
00:01:10,320 --> 00:01:12,400
so it's really supposed to be about not

34
00:01:12,400 --> 00:01:14,000
just hey here's a cool thing you can do

35
00:01:14,000 --> 00:01:15,680
but here's what it looks like when you

36
00:01:15,680 --> 00:01:18,799
do it and you can go and do that

37
00:01:18,799 --> 00:01:21,439
yourself you know right away um so i

38
00:01:21,439 --> 00:01:23,600
have a few slides i did just upload them

39
00:01:23,600 --> 00:01:26,720
so i guess i'll do that so we start with

40
00:01:26,720 --> 00:01:28,560
the slides and then as i say i'm going

41
00:01:28,560 --> 00:01:30,320
to be switching back and forth between

42
00:01:30,320 --> 00:01:32,799
some hardware demos and some other stuff

43
00:01:32,799 --> 00:01:34,560
i'll try to keep an eye on the discord

44
00:01:34,560 --> 00:01:36,240
so if you have questions feel free to

45
00:01:36,240 --> 00:01:37,920
drop them in as well

46
00:01:37,920 --> 00:01:39,119
i have quite a few different sort of

47
00:01:39,119 --> 00:01:41,200
demos i can cover but if people want to

48
00:01:41,200 --> 00:01:43,840
see specific stuff i'll try to

49
00:01:43,840 --> 00:01:45,439
move it that way it's only half an hour

50
00:01:45,439 --> 00:01:47,119
though so obviously i'm going to be a

51
00:01:47,119 --> 00:01:48,240
little

52
00:01:48,240 --> 00:01:50,079
uh a little constrained on what i can do

53
00:01:50,079 --> 00:01:53,600
so um really quickly about me so i sort

54
00:01:53,600 --> 00:01:55,759
of got into power analysis and fault

55
00:01:55,759 --> 00:01:57,280
injection and and really hardware

56
00:01:57,280 --> 00:01:59,439
hacking in general from previous work

57
00:01:59,439 --> 00:02:02,000
doing embedded systems design um i

58
00:02:02,000 --> 00:02:04,399
started this chip whisperer project uh

59
00:02:04,399 --> 00:02:06,479
which was started as a fully open source

60
00:02:06,479 --> 00:02:08,000
tool now we have this kind of weird

61
00:02:08,000 --> 00:02:09,679
combination of some stuff open source

62
00:02:09,679 --> 00:02:12,319
some stuff proprietary

63
00:02:12,319 --> 00:02:13,760
which is in itself i think an

64
00:02:13,760 --> 00:02:15,599
interesting topic for a different talk

65
00:02:15,599 --> 00:02:18,000
right is how you uh build sort of a

66
00:02:18,000 --> 00:02:19,760
business out of this because there's

67
00:02:19,760 --> 00:02:21,680
lots of people you talk to that you know

68
00:02:21,680 --> 00:02:23,360
dude this is just a little side project

69
00:02:23,360 --> 00:02:25,840
but what i'm curious about is how can we

70
00:02:25,840 --> 00:02:28,239
help everyone you know help more people

71
00:02:28,239 --> 00:02:31,040
actually uh do this as a full-time job

72
00:02:31,040 --> 00:02:33,120
right and in our case we have about six

73
00:02:33,120 --> 00:02:34,720
uh people that are you know running

74
00:02:34,720 --> 00:02:36,319
full-time out of some of the various

75
00:02:36,319 --> 00:02:38,000
tools we built so

76
00:02:38,000 --> 00:02:39,760
it's definitely not impossible right you

77
00:02:39,760 --> 00:02:41,280
don't have to go work at a big company

78
00:02:41,280 --> 00:02:42,720
and just do this in your spare time you

79
00:02:42,720 --> 00:02:44,879
can actually do this as something

80
00:02:44,879 --> 00:02:46,800
full-time and you can get other people

81
00:02:46,800 --> 00:02:48,720
um along with you so it's a lot of fun

82
00:02:48,720 --> 00:02:51,519
that way i was involved in academia for

83
00:02:51,519 --> 00:02:54,640
a while too um so i'm still a little bit

84
00:02:54,640 --> 00:02:56,959
looped in with that but i was much more

85
00:02:56,959 --> 00:03:00,239
involved now i'm back kind of doing

86
00:03:00,239 --> 00:03:02,319
similar open ideas sharing of

87
00:03:02,319 --> 00:03:04,000
information i really like that part of

88
00:03:04,000 --> 00:03:05,280
academia

89
00:03:05,280 --> 00:03:06,959
so i'm continuing to do that but

90
00:03:06,959 --> 00:03:09,519
focusing more on my chip whisperer

91
00:03:09,519 --> 00:03:11,760
projects and related projects

92
00:03:11,760 --> 00:03:13,519
another cool thing recently is there's a

93
00:03:13,519 --> 00:03:15,680
book that came out to this hardware

94
00:03:15,680 --> 00:03:17,440
hacking handbook

95
00:03:17,440 --> 00:03:18,720
hopefully you can see this on the screen

96
00:03:18,720 --> 00:03:21,440
here uh so colleague jasper van windberg

97
00:03:21,440 --> 00:03:23,040
and i have uh co-wrote this book that

98
00:03:23,040 --> 00:03:25,840
was a year so another another topic is

99
00:03:25,840 --> 00:03:27,280
the effort in writing a book we

100
00:03:27,280 --> 00:03:29,040
calculated i forget exactly it's like

101
00:03:29,040 --> 00:03:31,200
0.1 pages a day or something that's the

102
00:03:31,200 --> 00:03:33,760
rate you have to rate a book at um and

103
00:03:33,760 --> 00:03:35,440
you too can write a book so so there's a

104
00:03:35,440 --> 00:03:37,120
lot of you know a lot that goes into

105
00:03:37,120 --> 00:03:38,640
this beyond just

106
00:03:38,640 --> 00:03:40,480
uh writing it so

107
00:03:40,480 --> 00:03:41,920
um the other thing i'll note is there's

108
00:03:41,920 --> 00:03:44,080
a bunch of demos for this talk

109
00:03:44,080 --> 00:03:45,120
there we go

110
00:03:45,120 --> 00:03:46,400
so i tried to keep a bunch of heart

111
00:03:46,400 --> 00:03:48,239
around it was a physical book

112
00:03:48,239 --> 00:03:50,560
um so that's pretty cool i think

113
00:03:50,560 --> 00:03:52,080
uh there's some demos for the talk so

114
00:03:52,080 --> 00:03:54,000
it's linked below um there's some tools

115
00:03:54,000 --> 00:03:55,680
i'm gonna show you that i kind of just

116
00:03:55,680 --> 00:03:57,519
created for this talk as i said it's

117
00:03:57,519 --> 00:03:58,720
supposed to be

118
00:03:58,720 --> 00:04:00,959
a little more ad hoc this isn't really

119
00:04:00,959 --> 00:04:03,680
great finish things um for all of them

120
00:04:03,680 --> 00:04:04,879
i'm going to show you some of them are

121
00:04:04,879 --> 00:04:06,239
going to be chip whisperer tools some of

122
00:04:06,239 --> 00:04:08,319
them are going to be other stuff

123
00:04:08,319 --> 00:04:10,239
this slide isn't online so

124
00:04:10,239 --> 00:04:13,599
um we're going to be giving away a few

125
00:04:13,599 --> 00:04:15,280
uh chip whisperer

126
00:04:15,280 --> 00:04:16,880
little mini kits so these chip whisperer

127
00:04:16,880 --> 00:04:19,358
nanos these little boards um with some

128
00:04:19,358 --> 00:04:22,320
other kits and some uh

129
00:04:22,320 --> 00:04:23,919
copies of the book so if you want feel

130
00:04:23,919 --> 00:04:26,320
free to uh to fill that out

131
00:04:26,320 --> 00:04:27,759
and it's just kind of like a random

132
00:04:27,759 --> 00:04:30,000
selection uh for now so we couldn't

133
00:04:30,000 --> 00:04:31,840
figure out a better way for yet so this

134
00:04:31,840 --> 00:04:34,320
this one's just a random selection

135
00:04:34,320 --> 00:04:36,880
um all right so on to the the real talk

136
00:04:36,880 --> 00:04:38,880
itself uh what are we gonna focus on our

137
00:04:38,880 --> 00:04:39,680
talk

138
00:04:39,680 --> 00:04:41,680
uh i'm gonna show you a few examples of

139
00:04:41,680 --> 00:04:43,600
fault injection and power analysis so if

140
00:04:43,600 --> 00:04:45,680
you're kind of curious about you know

141
00:04:45,680 --> 00:04:47,040
how does this work in general so i'm

142
00:04:47,040 --> 00:04:49,680
going to start with what you know maybe

143
00:04:49,680 --> 00:04:51,360
you think is a little theoretical but

144
00:04:51,360 --> 00:04:52,960
i'm going to try to link that into some

145
00:04:52,960 --> 00:04:54,639
real real life stuff

146
00:04:54,639 --> 00:04:56,320
um after but at first i want to show you

147
00:04:56,320 --> 00:04:58,080
that in fact you can run some some

148
00:04:58,080 --> 00:05:00,639
pretty cool examples i think anyway um

149
00:05:00,639 --> 00:05:03,680
about how these types of attacks work

150
00:05:03,680 --> 00:05:05,840
um i'm then actually gonna target a

151
00:05:05,840 --> 00:05:07,520
different type of device so i'm gonna

152
00:05:07,520 --> 00:05:10,000
start with sort of like cortex-m

153
00:05:10,000 --> 00:05:12,479
uh stm type devices i'm gonna actually

154
00:05:12,479 --> 00:05:15,360
jump to a raspberry pi 3 so

155
00:05:15,360 --> 00:05:16,960
this is something that's new for this

156
00:05:16,960 --> 00:05:19,120
talk i've done a tiny bit on this but i

157
00:05:19,120 --> 00:05:20,800
i've sort of gotten several different

158
00:05:20,800 --> 00:05:22,240
things working

159
00:05:22,240 --> 00:05:25,440
um the other thing i'm gonna show that i

160
00:05:25,440 --> 00:05:27,840
promised on twitter uh is that i

161
00:05:27,840 --> 00:05:30,080
actually made a really cheap emfi tool

162
00:05:30,080 --> 00:05:33,759
so as i said this this talk is not um

163
00:05:33,759 --> 00:05:34,800
you know it's supposed to be like hey

164
00:05:34,800 --> 00:05:36,560
here's something cool i did so quite

165
00:05:36,560 --> 00:05:38,720
literally i went to walmart like uh

166
00:05:38,720 --> 00:05:39,840
yesterday

167
00:05:39,840 --> 00:05:41,520
uh to get the equipment to build this

168
00:05:41,520 --> 00:05:44,479
really quality device but um

169
00:05:44,479 --> 00:05:46,320
it's gonna be a cool thing right so i'm

170
00:05:46,320 --> 00:05:47,919
gonna show you that

171
00:05:47,919 --> 00:05:49,759
i'm not just trying to use only chip

172
00:05:49,759 --> 00:05:51,039
whisperer there's a lot of different

173
00:05:51,039 --> 00:05:52,639
ways to do this

174
00:05:52,639 --> 00:05:54,800
the information we post is available so

175
00:05:54,800 --> 00:05:56,400
there's a lot of open source information

176
00:05:56,400 --> 00:05:59,280
out there um and you can use all sorts

177
00:05:59,280 --> 00:06:01,520
of different you know tools you have on

178
00:06:01,520 --> 00:06:03,039
hand to learn a bit that's the real

179
00:06:03,039 --> 00:06:05,360
point is that it's not so much you have

180
00:06:05,360 --> 00:06:08,400
to use tool a even if i'm using tool a

181
00:06:08,400 --> 00:06:09,280
um

182
00:06:09,280 --> 00:06:11,120
you know the the actual fundamental

183
00:06:11,120 --> 00:06:13,039
information is applicable against a wide

184
00:06:13,039 --> 00:06:14,720
range of tools and examples so i think

185
00:06:14,720 --> 00:06:16,720
that's the pretty cool part mike

186
00:06:16,720 --> 00:06:18,560
is sort of what i want to get at

187
00:06:18,560 --> 00:06:20,400
all right so um examples for power

188
00:06:20,400 --> 00:06:22,400
analysis demos right that's all that's

189
00:06:22,400 --> 00:06:24,000
in the slide so if you downloaded the

190
00:06:24,000 --> 00:06:26,319
slides that's what you get

191
00:06:26,319 --> 00:06:27,919
um

192
00:06:27,919 --> 00:06:28,720
so

193
00:06:28,720 --> 00:06:31,600
let's take a look let's stop my share

194
00:06:31,600 --> 00:06:34,080
for a second

195
00:06:34,080 --> 00:06:36,960
let's go

196
00:06:39,440 --> 00:06:43,120
let's take a look at

197
00:06:45,440 --> 00:06:48,840
this guy

198
00:06:49,520 --> 00:06:51,599
um so i've got a bunch of different

199
00:06:51,599 --> 00:06:53,039
hardware here

200
00:06:53,039 --> 00:06:54,319
we're not going to look at the raspberry

201
00:06:54,319 --> 00:06:57,599
pi yet so i'm going to start with um

202
00:06:57,599 --> 00:07:00,560
one of the original sort of

203
00:07:00,560 --> 00:07:03,599
things so this is back from

204
00:07:03,599 --> 00:07:05,759
uh the hackaday prize timeline and then

205
00:07:05,759 --> 00:07:06,960
there was a kickstarter and stuff was

206
00:07:06,960 --> 00:07:09,199
this chip whisper light um so what this

207
00:07:09,199 --> 00:07:11,440
guy does is this was an open source

208
00:07:11,440 --> 00:07:13,039
hardware project

209
00:07:13,039 --> 00:07:14,319
um

210
00:07:14,319 --> 00:07:16,560
that basically has a target

211
00:07:16,560 --> 00:07:18,560
that we can run different code examples

212
00:07:18,560 --> 00:07:20,479
on and then the board that does the

213
00:07:20,479 --> 00:07:22,960
actual um power analysis and fault

214
00:07:22,960 --> 00:07:25,199
injection type stuff so you kind of have

215
00:07:25,199 --> 00:07:27,919
everything um on one board is the idea

216
00:07:27,919 --> 00:07:30,240
and the whole point of this is that for

217
00:07:30,240 --> 00:07:31,840
understanding the attack so this is

218
00:07:31,840 --> 00:07:34,000
really good for learning uh you don't

219
00:07:34,000 --> 00:07:37,039
have any fidgeting around so if you've

220
00:07:37,039 --> 00:07:38,960
tried to follow along sometimes you find

221
00:07:38,960 --> 00:07:41,039
that you know you need a specific device

222
00:07:41,039 --> 00:07:42,240
and if you can't find the device

223
00:07:42,240 --> 00:07:44,240
especially right now supply chain right

224
00:07:44,240 --> 00:07:45,599
then you've got to figure out okay i've

225
00:07:45,599 --> 00:07:47,039
got to port this code to something else

226
00:07:47,039 --> 00:07:49,120
so one of the ideas was to make this um

227
00:07:49,120 --> 00:07:51,680
pretty straightforward

228
00:07:51,680 --> 00:07:53,840
for understanding and and you might

229
00:07:53,840 --> 00:07:57,280
notice there's like kind of this obvious

230
00:07:57,280 --> 00:07:59,199
location that you can split the boards

231
00:07:59,199 --> 00:08:01,199
apart right which was the original

232
00:08:01,199 --> 00:08:02,720
design for this so you can split the

233
00:08:02,720 --> 00:08:06,319
boards apart afterwards um and use it to

234
00:08:06,319 --> 00:08:08,080
you know target other things that aren't

235
00:08:08,080 --> 00:08:09,360
the built-in terrain so but that's what

236
00:08:09,360 --> 00:08:10,960
the hardware is looking like

237
00:08:10,960 --> 00:08:14,400
right now um and so that's just gonna

238
00:08:14,400 --> 00:08:16,400
sit there blinking so i'm gonna

239
00:08:16,400 --> 00:08:19,840
go back to the screen share

240
00:08:22,879 --> 00:08:27,400
um and what we'll see is

241
00:08:27,680 --> 00:08:30,319
out of the way

242
00:08:30,319 --> 00:08:31,680
okay so i'm going to be using these

243
00:08:31,680 --> 00:08:34,080
examples that are part of chip whisper

244
00:08:34,080 --> 00:08:35,599
so

245
00:08:35,599 --> 00:08:37,039
you'll notice

246
00:08:37,039 --> 00:08:38,320
you might not be able to see this but in

247
00:08:38,320 --> 00:08:40,958
the url um it's it's a local so there's

248
00:08:40,958 --> 00:08:42,240
a server running for something called

249
00:08:42,240 --> 00:08:43,760
jupiter notebooks

250
00:08:43,760 --> 00:08:45,279
um but if you're just kind of curious

251
00:08:45,279 --> 00:08:47,040
hey what you know what all could i do

252
00:08:47,040 --> 00:08:48,480
with this stuff

253
00:08:48,480 --> 00:08:51,360
um there's this jupiter chip whisperer

254
00:08:51,360 --> 00:08:54,080
jupiter repository so this is all uh

255
00:08:54,080 --> 00:08:55,680
available publicly

256
00:08:55,680 --> 00:08:56,880
um

257
00:08:56,880 --> 00:08:58,959
this has various different examples that

258
00:08:58,959 --> 00:09:01,360
are running so the idea of this is you

259
00:09:01,360 --> 00:09:02,959
can actually kind of self-teach yourself

260
00:09:02,959 --> 00:09:04,320
quite a bit of this

261
00:09:04,320 --> 00:09:06,640
uh so you have some sort of courses

262
00:09:06,640 --> 00:09:07,680
stuff like that so i'm just going to

263
00:09:07,680 --> 00:09:09,600
pull in a few of these to show you how

264
00:09:09,600 --> 00:09:11,519
these sort of attacks work

265
00:09:11,519 --> 00:09:13,279
and in particular i'm going to show you

266
00:09:13,279 --> 00:09:15,839
just a power analysis kind of how you'd

267
00:09:15,839 --> 00:09:17,920
use that to understand if a password

268
00:09:17,920 --> 00:09:21,200
prompt had some sort of

269
00:09:21,200 --> 00:09:23,200
vulnerability that let us bypass it with

270
00:09:23,200 --> 00:09:24,959
power analysis so

271
00:09:24,959 --> 00:09:26,480
um

272
00:09:26,480 --> 00:09:28,640
this is what i'm going to do is i'm

273
00:09:28,640 --> 00:09:30,720
going to take a password check i'm going

274
00:09:30,720 --> 00:09:32,640
to compile it for

275
00:09:32,640 --> 00:09:35,120
an arm microcontroller

276
00:09:35,120 --> 00:09:36,560
right so this is actually compiling the

277
00:09:36,560 --> 00:09:38,320
source code so i'm i'm compiling the

278
00:09:38,320 --> 00:09:39,920
code that runs on this right this is not

279
00:09:39,920 --> 00:09:42,240
an offensive attack i'm doing right here

280
00:09:42,240 --> 00:09:44,959
i have full control over it

281
00:09:44,959 --> 00:09:46,480
and in this case i actually know what

282
00:09:46,480 --> 00:09:48,399
the password is so

283
00:09:48,399 --> 00:09:49,920
what i'm going to do first is i'm going

284
00:09:49,920 --> 00:09:51,519
to look at what's the difference in

285
00:09:51,519 --> 00:09:53,279
power consumption on it on a very fine

286
00:09:53,279 --> 00:09:54,959
grain level

287
00:09:54,959 --> 00:09:58,240
when i send like a known and an unknown

288
00:09:58,240 --> 00:09:59,440
password

289
00:09:59,440 --> 00:10:00,640
and this is really interesting because

290
00:10:00,640 --> 00:10:02,720
if we see a difference between or sort

291
00:10:02,720 --> 00:10:04,880
of a valid and invalid and because i

292
00:10:04,880 --> 00:10:07,440
know what the password is um password it

293
00:10:07,440 --> 00:10:09,279
can tell us something interesting might

294
00:10:09,279 --> 00:10:11,120
be possible we see some differences here

295
00:10:11,120 --> 00:10:13,360
we don't know if it's random or not yet

296
00:10:13,360 --> 00:10:14,399
um

297
00:10:14,399 --> 00:10:16,560
but it's clear like there is

298
00:10:16,560 --> 00:10:19,440
some amount of difference uh that we can

299
00:10:19,440 --> 00:10:20,240
see

300
00:10:20,240 --> 00:10:22,720
um in a power trace right so so that's

301
00:10:22,720 --> 00:10:25,839
kind of the basic idea of power analysis

302
00:10:25,839 --> 00:10:27,839
is there's some difference and then all

303
00:10:27,839 --> 00:10:29,839
the effort in power analysis is actually

304
00:10:29,839 --> 00:10:31,120
exploiting it

305
00:10:31,120 --> 00:10:33,360
um and so in this case what we would do

306
00:10:33,360 --> 00:10:34,640
you know in real life you wouldn't know

307
00:10:34,640 --> 00:10:36,720
if the password was correct or incorrect

308
00:10:36,720 --> 00:10:39,680
um so what i will do here

309
00:10:39,680 --> 00:10:41,519
is i'm going to send every possible

310
00:10:41,519 --> 00:10:43,519
character to the device

311
00:10:43,519 --> 00:10:46,399
right i'm only covering lowercase

312
00:10:46,399 --> 00:10:47,120
so

313
00:10:47,120 --> 00:10:48,240
to make the

314
00:10:48,240 --> 00:10:50,959
demo faster it doesn't you know you

315
00:10:50,959 --> 00:10:54,000
should do this for every all 256

316
00:10:54,000 --> 00:10:55,600
binary values

317
00:10:55,600 --> 00:10:58,079
or at least lowercase and uppercase um

318
00:10:58,079 --> 00:11:00,399
in this case i just try all lowercase

319
00:11:00,399 --> 00:11:02,000
right and so this the sort of things

320
00:11:02,000 --> 00:11:04,079
power analysis tells you is hey

321
00:11:04,079 --> 00:11:05,519
you know for

322
00:11:05,519 --> 00:11:07,519
most of the time

323
00:11:07,519 --> 00:11:09,279
um and what you have along the bottom

324
00:11:09,279 --> 00:11:11,920
axis is is samples or time and along the

325
00:11:11,920 --> 00:11:14,480
y-axis is um

326
00:11:14,480 --> 00:11:17,920
power trace right so most of the time

327
00:11:17,920 --> 00:11:20,959
um the

328
00:11:21,120 --> 00:11:23,120
uh i'm just looking at discourse or i

329
00:11:23,120 --> 00:11:25,120
had a dead link sorry about that

330
00:11:25,120 --> 00:11:27,360
people figured out

331
00:11:27,360 --> 00:11:30,560
maybe anyway so most of the time um

332
00:11:30,560 --> 00:11:32,160
the

333
00:11:32,160 --> 00:11:34,880
device takes one sequence except for one

334
00:11:34,880 --> 00:11:36,240
other time it takes this other the

335
00:11:36,240 --> 00:11:38,399
sequencing gray right so the system is

336
00:11:38,399 --> 00:11:40,880
taking a different path it looks like

337
00:11:40,880 --> 00:11:42,480
and it looks like it takes longer so you

338
00:11:42,480 --> 00:11:44,720
can kind of see this offset

339
00:11:44,720 --> 00:11:46,079
and why you might have that right is

340
00:11:46,079 --> 00:11:49,120
that if it's comparing the password um

341
00:11:49,120 --> 00:11:51,519
once the first character is correct it

342
00:11:51,519 --> 00:11:53,680
continues comparison comparing you know

343
00:11:53,680 --> 00:11:55,360
at a longer time so this is a classic

344
00:11:55,360 --> 00:11:57,200
sort of attack you might see it written

345
00:11:57,200 --> 00:11:59,040
as like a mem compare type attack or

346
00:11:59,040 --> 00:12:00,320
anything like that

347
00:12:00,320 --> 00:12:01,600
um

348
00:12:01,600 --> 00:12:04,880
but this is the the idea that

349
00:12:04,880 --> 00:12:06,720
using power analysis we can actually

350
00:12:06,720 --> 00:12:08,160
figure out so this would be a totally

351
00:12:08,160 --> 00:12:09,680
black box right i wouldn't need to know

352
00:12:09,680 --> 00:12:11,600
the correct password in this case

353
00:12:11,600 --> 00:12:13,839
because i've just sent every possible

354
00:12:13,839 --> 00:12:15,519
first byte

355
00:12:15,519 --> 00:12:18,000
value and then i i figure out if if we

356
00:12:18,000 --> 00:12:19,760
can go further than that

357
00:12:19,760 --> 00:12:20,800
um

358
00:12:20,800 --> 00:12:22,160
so that's the type of thing you can do

359
00:12:22,160 --> 00:12:23,279
with paranormal so you can go way

360
00:12:23,279 --> 00:12:24,480
further than that so you can recover

361
00:12:24,480 --> 00:12:26,079
encryption queries with power analysis

362
00:12:26,079 --> 00:12:28,959
but the fundamental idea is that we can

363
00:12:28,959 --> 00:12:31,839
use it to understand if the device has

364
00:12:31,839 --> 00:12:34,399
some difference when it's processing

365
00:12:34,399 --> 00:12:36,000
different values of the secret the

366
00:12:36,000 --> 00:12:37,920
secret mean a password a key or anything

367
00:12:37,920 --> 00:12:40,000
else um

368
00:12:40,000 --> 00:12:41,600
we can even so in this case we have

369
00:12:41,600 --> 00:12:43,200
what's called like a

370
00:12:43,200 --> 00:12:45,519
kind of instruction flow dependent on

371
00:12:45,519 --> 00:12:48,000
the the data being processed um we can

372
00:12:48,000 --> 00:12:50,320
even leak information about the data

373
00:12:50,320 --> 00:12:52,959
itself so different values of data going

374
00:12:52,959 --> 00:12:54,720
across the power

375
00:12:54,720 --> 00:12:56,959
a data bus internally do give you

376
00:12:56,959 --> 00:12:59,040
leakage so all those demos you know you

377
00:12:59,040 --> 00:13:00,000
can do

378
00:13:00,000 --> 00:13:01,120
i'm not going to go through all of them

379
00:13:01,120 --> 00:13:03,200
because i want to also show you a bunch

380
00:13:03,200 --> 00:13:05,040
more stuff too

381
00:13:05,040 --> 00:13:06,800
um

382
00:13:06,800 --> 00:13:08,000
okay

383
00:13:08,000 --> 00:13:11,360
so one little example for power analysis

384
00:13:11,360 --> 00:13:13,839
um as a note 2 so we're talking about

385
00:13:13,839 --> 00:13:16,560
software uh if you're you know a lot of

386
00:13:16,560 --> 00:13:19,440
people are doing fpgas these days

387
00:13:19,440 --> 00:13:22,800
you can do similar attacks on on fpga

388
00:13:22,800 --> 00:13:24,160
devices so

389
00:13:24,160 --> 00:13:26,320
let me stop this share to show you some

390
00:13:26,320 --> 00:13:28,000
hardware

391
00:13:28,000 --> 00:13:31,440
right so what i'm going to do now

392
00:13:31,519 --> 00:13:33,360
is i'm going to use that same capture

393
00:13:33,360 --> 00:13:35,839
hardware

394
00:13:38,399 --> 00:13:40,720
okay and so this is a board i've

395
00:13:40,720 --> 00:13:42,880
designed but you can also modify exist

396
00:13:42,880 --> 00:13:44,560
other boards to do it so this has an

397
00:13:44,560 --> 00:13:46,880
artix a35

398
00:13:46,880 --> 00:13:52,000
fpga on it and we can actually see

399
00:13:52,240 --> 00:13:55,680
power traces from heard like fpga blocks

400
00:13:55,680 --> 00:13:56,959
right so in this case what i could do is

401
00:13:56,959 --> 00:13:58,399
i can load a

402
00:13:58,399 --> 00:14:03,199
aes core onto that fpga so it's a design

403
00:14:03,199 --> 00:14:05,760
you know for an aes core that's loaded

404
00:14:05,760 --> 00:14:08,560
on the fpga

405
00:14:08,560 --> 00:14:11,920
so this is another example

406
00:14:11,920 --> 00:14:14,560
where again this this is open source so

407
00:14:14,560 --> 00:14:17,279
you can download the the design that's

408
00:14:17,279 --> 00:14:20,320
being loaded onto the fpga um

409
00:14:20,320 --> 00:14:21,760
right you can download that you can

410
00:14:21,760 --> 00:14:23,920
change the fpga design

411
00:14:23,920 --> 00:14:24,959
um

412
00:14:24,959 --> 00:14:26,880
i don't know if you want to see me

413
00:14:26,880 --> 00:14:29,279
probably not so let's put that back

414
00:14:29,279 --> 00:14:30,720
because you'll see some different lights

415
00:14:30,720 --> 00:14:31,839
blinking

416
00:14:31,839 --> 00:14:35,760
so maybe it's a little more interesting

417
00:14:36,320 --> 00:14:39,680
ignore the raspberry pi that's for

418
00:14:39,680 --> 00:14:40,480
that

419
00:14:40,480 --> 00:14:42,000
okay

420
00:14:42,000 --> 00:14:44,959
i just want to short stuff out

421
00:14:44,959 --> 00:14:47,120
okay so what's going to happen is that

422
00:14:47,120 --> 00:14:49,199
i'm basically going to

423
00:14:49,199 --> 00:14:50,560
and i'm not going to run the full attack

424
00:14:50,560 --> 00:14:52,079
here i'm just again trying to show you

425
00:14:52,079 --> 00:14:54,079
that sort of look over the shoulder that

426
00:14:54,079 --> 00:14:56,480
hey you can actually

427
00:14:56,480 --> 00:14:57,920
see this type of stuff so i'm going to

428
00:14:57,920 --> 00:14:59,920
record a few power traces

429
00:14:59,920 --> 00:15:02,480
um here right and so all again all this

430
00:15:02,480 --> 00:15:04,560
is available to you

431
00:15:04,560 --> 00:15:07,040
and what you see is you can actually see

432
00:15:07,040 --> 00:15:08,560
this is the device operating with

433
00:15:08,560 --> 00:15:10,240
different data

434
00:15:10,240 --> 00:15:11,760
and depending on the data there's going

435
00:15:11,760 --> 00:15:14,160
to be minor variations in the power

436
00:15:14,160 --> 00:15:16,000
usage so if we were to operate with the

437
00:15:16,000 --> 00:15:18,160
same data we should see much more

438
00:15:18,160 --> 00:15:19,680
consistent power traces than with

439
00:15:19,680 --> 00:15:21,360
different data

440
00:15:21,360 --> 00:15:23,040
um and so if you're kind of curious

441
00:15:23,040 --> 00:15:25,680
about you know that that sort of

442
00:15:25,680 --> 00:15:27,120
design where you're actually designing

443
00:15:27,120 --> 00:15:29,600
cores again the materials available for

444
00:15:29,600 --> 00:15:31,600
you to to look at

445
00:15:31,600 --> 00:15:33,040
so that's pretty cool

446
00:15:33,040 --> 00:15:35,040
all right fault injection um so fault

447
00:15:35,040 --> 00:15:38,000
injection is probably one of the more

448
00:15:38,000 --> 00:15:40,800
interesting areas

449
00:15:40,800 --> 00:15:43,120
and as i said these are all pretty quick

450
00:15:43,120 --> 00:15:45,519
because i want to show you that it's you

451
00:15:45,519 --> 00:15:47,120
know the information's there you can run

452
00:15:47,120 --> 00:15:49,680
these yourself

453
00:15:49,680 --> 00:15:50,480
so

454
00:15:50,480 --> 00:15:52,399
fault injection

455
00:15:52,399 --> 00:15:54,800
you might know it you know mostly from

456
00:15:54,800 --> 00:15:58,240
like bypassing um jtag and stuff like

457
00:15:58,240 --> 00:15:59,040
that

458
00:15:59,040 --> 00:16:00,880
um fundamentally though the idea is that

459
00:16:00,880 --> 00:16:03,120
we have the ability to

460
00:16:03,120 --> 00:16:06,720
um change instruction flow right or

461
00:16:06,720 --> 00:16:08,079
change the data being loaded or

462
00:16:08,079 --> 00:16:09,519
something like that

463
00:16:09,519 --> 00:16:11,440
in a device um

464
00:16:11,440 --> 00:16:12,720
and so

465
00:16:12,720 --> 00:16:14,959
at a very basic level what i'm going to

466
00:16:14,959 --> 00:16:16,320
do and i'm going to run this on a few

467
00:16:16,320 --> 00:16:17,600
different

468
00:16:17,600 --> 00:16:19,440
examples here

469
00:16:19,440 --> 00:16:20,399
is

470
00:16:20,399 --> 00:16:22,399
i'm going to run a simple loop where we

471
00:16:22,399 --> 00:16:24,959
have this double loop process

472
00:16:24,959 --> 00:16:27,759
so we have two loops running and why why

473
00:16:27,759 --> 00:16:29,279
are we going to start with this

474
00:16:29,279 --> 00:16:32,560
really straightforward um

475
00:16:32,560 --> 00:16:34,720
it's very obvious when we get invalid

476
00:16:34,720 --> 00:16:36,079
results with this so this is the

477
00:16:36,079 --> 00:16:37,600
interesting thing is it makes it very

478
00:16:37,600 --> 00:16:40,000
easy to see in valve results so i'm

479
00:16:40,000 --> 00:16:41,519
first going to show you how we would

480
00:16:41,519 --> 00:16:43,440
typically use this in like our little

481
00:16:43,440 --> 00:16:45,519
chip whisperer system so

482
00:16:45,519 --> 00:16:48,079
i'm going to plug back in

483
00:16:48,079 --> 00:16:49,279
this board

484
00:16:49,279 --> 00:16:52,000
so i'm going to run on the stm device

485
00:16:52,000 --> 00:16:52,720
and

486
00:16:52,720 --> 00:16:56,480
um it's not going to do a whole lot so

487
00:16:56,480 --> 00:16:58,800
i'm going to pull that up

488
00:16:58,800 --> 00:17:02,240
and what we can actually see

489
00:17:02,720 --> 00:17:04,559
and so all it does is it programs in

490
00:17:04,559 --> 00:17:07,520
that little loop test right so it's very

491
00:17:07,520 --> 00:17:09,439
it doesn't seem very exciting

492
00:17:09,439 --> 00:17:11,679
um

493
00:17:14,559 --> 00:17:16,400
doesn't like when i switch the demo so

494
00:17:16,400 --> 00:17:19,400
much

495
00:17:22,640 --> 00:17:23,839
i should have checked things were

496
00:17:23,839 --> 00:17:26,839
working

497
00:17:33,120 --> 00:17:35,679
um and so again the the chip whisperer

498
00:17:35,679 --> 00:17:37,840
stuff gives you these toolings that what

499
00:17:37,840 --> 00:17:39,840
it's doing is it's running these loops

500
00:17:39,840 --> 00:17:41,679
um and it's simply checking if the

501
00:17:41,679 --> 00:17:43,760
output of the loops become invalid at

502
00:17:43,760 --> 00:17:46,160
some point um and so if we see these

503
00:17:46,160 --> 00:17:49,520
invalid loops we'll kind of see it

504
00:17:49,520 --> 00:17:52,000
uh figure out that at some point in time

505
00:17:52,000 --> 00:17:53,840
there's like an invalid output here so

506
00:17:53,840 --> 00:17:55,840
we have these x's and pluses so x means

507
00:17:55,840 --> 00:17:59,039
the device reset plus means um there was

508
00:17:59,039 --> 00:18:01,200
some kind of interesting output

509
00:18:01,200 --> 00:18:03,760
aka a fault coming out of this

510
00:18:03,760 --> 00:18:05,600
now you might say like okay that's kind

511
00:18:05,600 --> 00:18:07,039
of boring

512
00:18:07,039 --> 00:18:08,240
why do we care about the loop being

513
00:18:08,240 --> 00:18:10,559
wrong um if we loop if we have the

514
00:18:10,559 --> 00:18:11,919
output of the loop wrong that actually

515
00:18:11,919 --> 00:18:13,760
means we have some ability to control

516
00:18:13,760 --> 00:18:15,600
the instruction flow

517
00:18:15,600 --> 00:18:17,360
which means we can do stuff so there's

518
00:18:17,360 --> 00:18:20,000
another example it won't run right here

519
00:18:20,000 --> 00:18:22,320
but you can do things like

520
00:18:22,320 --> 00:18:26,320
uh bypass if there's a password check um

521
00:18:26,320 --> 00:18:28,880
you can do things like bypass there's a

522
00:18:28,880 --> 00:18:32,000
really cool example running on the

523
00:18:32,000 --> 00:18:34,080
against the lpc device

524
00:18:34,080 --> 00:18:36,720
um so chris kurlinsky had first shown

525
00:18:36,720 --> 00:18:39,840
this basically a bypass on one of the

526
00:18:39,840 --> 00:18:41,520
fuse bits of it

527
00:18:41,520 --> 00:18:43,200
um so there's a ton of stuff you can do

528
00:18:43,200 --> 00:18:45,280
once you have that working but what i

529
00:18:45,280 --> 00:18:47,679
want to jump into is kind of

530
00:18:47,679 --> 00:18:48,880
the real

531
00:18:48,880 --> 00:18:50,400
but i think the real interesting stuff

532
00:18:50,400 --> 00:18:52,400
is looking at a more complex device so i

533
00:18:52,400 --> 00:18:54,000
have a raspberry pi

534
00:18:54,000 --> 00:18:56,640
model 3 and if ignore the fact that heat

535
00:18:56,640 --> 00:18:58,240
spreader is off for now

536
00:18:58,240 --> 00:19:00,320
um that was for another test

537
00:19:00,320 --> 00:19:04,320
and what we're gonna do

538
00:19:04,880 --> 00:19:07,520
is let's just

539
00:19:07,520 --> 00:19:09,200
pull the slides up

540
00:19:09,200 --> 00:19:10,880
okay is we're actually going to do some

541
00:19:10,880 --> 00:19:13,600
fault injection right on

542
00:19:13,600 --> 00:19:15,919
the um the raspberry pi model 3. and

543
00:19:15,919 --> 00:19:17,520
this is cool because it's like a more

544
00:19:17,520 --> 00:19:19,120
complex device right so you might say

545
00:19:19,120 --> 00:19:20,240
hey you're just showing little

546
00:19:20,240 --> 00:19:22,400
microcontrollers let's kick it up or not

547
00:19:22,400 --> 00:19:23,919
notch

548
00:19:23,919 --> 00:19:25,360
so i did an old demo on this using

549
00:19:25,360 --> 00:19:27,360
voltage fi which i have time i can

550
00:19:27,360 --> 00:19:28,480
recreate

551
00:19:28,480 --> 00:19:30,400
um but what i want to show you real

552
00:19:30,400 --> 00:19:34,240
quickly is new demos with emfi and also

553
00:19:34,240 --> 00:19:36,080
very rapidly

554
00:19:36,080 --> 00:19:38,480
that you you can build an emfi tool for

555
00:19:38,480 --> 00:19:40,480
pretty cheap so i built a more complex

556
00:19:40,480 --> 00:19:43,840
tool um and one of the you know the

557
00:19:43,840 --> 00:19:45,360
interesting things i wanted to show is

558
00:19:45,360 --> 00:19:46,960
that you can again do this with stuff

559
00:19:46,960 --> 00:19:48,960
you might have kicking around

560
00:19:48,960 --> 00:19:51,360
um so let's before we jump into the

561
00:19:51,360 --> 00:19:54,320
final part the cheap emf i tooling

562
00:19:54,320 --> 00:19:56,720
um let's just pull up the raspberry pi

563
00:19:56,720 --> 00:19:59,919
demo and so

564
00:20:00,000 --> 00:20:01,919
there's the raspberry pi

565
00:20:01,919 --> 00:20:04,960
here's my raspberry pi

566
00:20:04,960 --> 00:20:07,840
mouse

567
00:20:10,720 --> 00:20:12,799
here's my raspberry pi so hopefully you

568
00:20:12,799 --> 00:20:14,320
can see this

569
00:20:14,320 --> 00:20:16,240
um

570
00:20:16,240 --> 00:20:18,799
and we will open

571
00:20:18,799 --> 00:20:21,799
terminal

572
00:20:22,880 --> 00:20:26,080
okay and so what i have

573
00:20:26,080 --> 00:20:30,159
is that same um this the same test that

574
00:20:30,159 --> 00:20:32,559
was running on let's see if i can get a

575
00:20:32,559 --> 00:20:34,000
picture in picture i'll just show you

576
00:20:34,000 --> 00:20:36,320
the board um so the same test that was

577
00:20:36,320 --> 00:20:37,200
running

578
00:20:37,200 --> 00:20:38,559
where it's just calculated doing this

579
00:20:38,559 --> 00:20:41,360
double loop um we can actually now try

580
00:20:41,360 --> 00:20:42,960
to insert faults and there's different

581
00:20:42,960 --> 00:20:45,039
ways of inserting the fault so

582
00:20:45,039 --> 00:20:48,679
this was a tool

583
00:20:48,880 --> 00:20:51,360
that i built that's um

584
00:20:51,360 --> 00:20:53,520
kind of more complex

585
00:20:53,520 --> 00:20:55,760
uh for doing emfi and the idea is that

586
00:20:55,760 --> 00:20:58,240
you could hopefully insert emfi

587
00:20:58,240 --> 00:21:00,640
by sort of you know it inserts a large

588
00:21:00,640 --> 00:21:02,640
pulse into the device and if we're

589
00:21:02,640 --> 00:21:04,720
really lucky we'll see some sort of

590
00:21:04,720 --> 00:21:06,799
errors coming out here

591
00:21:06,799 --> 00:21:08,960
if you're unlucky you don't see any such

592
00:21:08,960 --> 00:21:10,960
errors

593
00:21:10,960 --> 00:21:13,919
or the device resets

594
00:21:13,919 --> 00:21:16,880
um so you might see you know

595
00:21:16,880 --> 00:21:19,360
errors you might see the device reset um

596
00:21:19,360 --> 00:21:20,960
it's kind of a bit of

597
00:21:20,960 --> 00:21:23,039
to be honest a little bit lucky so i'm

598
00:21:23,039 --> 00:21:24,559
just going to do this without showing

599
00:21:24,559 --> 00:21:25,360
you

600
00:21:25,360 --> 00:21:28,000
the output

601
00:21:28,080 --> 00:21:30,080
we'll see if we get default and so we'll

602
00:21:30,080 --> 00:21:32,320
see a fault if the

603
00:21:32,320 --> 00:21:34,880
account

604
00:21:34,880 --> 00:21:37,679
of these is invalid um or if the device

605
00:21:37,679 --> 00:21:40,320
crashes okay so there you go so that's a

606
00:21:40,320 --> 00:21:42,159
invalid count there

607
00:21:42,159 --> 00:21:43,360
um

608
00:21:43,360 --> 00:21:46,080
means that we're seeing the actual uh

609
00:21:46,080 --> 00:21:48,400
faults being inserted into the device

610
00:21:48,400 --> 00:21:50,240
um where this gets sort of interesting

611
00:21:50,240 --> 00:21:52,400
is that you can do a lot with that right

612
00:21:52,400 --> 00:21:54,240
so even on the raspberry pi we can do

613
00:21:54,240 --> 00:21:56,159
something um called a fault attack

614
00:21:56,159 --> 00:21:58,960
against rsa so when rsa signs

615
00:21:58,960 --> 00:22:00,080
um

616
00:22:00,080 --> 00:22:02,000
a device there's a kind of a well-known

617
00:22:02,000 --> 00:22:03,120
attack

618
00:22:03,120 --> 00:22:05,440
that and so i linked in the repo the

619
00:22:05,440 --> 00:22:07,120
code to do all of this

620
00:22:07,120 --> 00:22:09,520
but what you have is this well-known

621
00:22:09,520 --> 00:22:12,000
attack against rsa as it's signing if

622
00:22:12,000 --> 00:22:14,240
there's a fault in rsa

623
00:22:14,240 --> 00:22:17,039
it's actually going to

624
00:22:17,039 --> 00:22:19,120
allow us to

625
00:22:19,120 --> 00:22:21,200
recover the private key

626
00:22:21,200 --> 00:22:23,360
so

627
00:22:23,919 --> 00:22:26,080
what this is doing is this is running a

628
00:22:26,080 --> 00:22:28,240
whole bunch of signing operations um it

629
00:22:28,240 --> 00:22:30,559
printed a secret value of the known p

630
00:22:30,559 --> 00:22:32,080
and known q

631
00:22:32,080 --> 00:22:32,960
um

632
00:22:32,960 --> 00:22:35,200
and

633
00:22:35,840 --> 00:22:37,600
if we're lucky so again we could crash

634
00:22:37,600 --> 00:22:40,320
the device fully all i'm doing here is

635
00:22:40,320 --> 00:22:42,320
i'm just holding this over the core like

636
00:22:42,320 --> 00:22:43,360
that

637
00:22:43,360 --> 00:22:45,760
right so i just kind of hit it somewhere

638
00:22:45,760 --> 00:22:48,240
and oh crap okay that just worked

639
00:22:48,240 --> 00:22:50,640
got really lucky uh so the output was

640
00:22:50,640 --> 00:22:52,720
faulty

641
00:22:52,720 --> 00:22:54,799
and it's then

642
00:22:54,799 --> 00:22:58,400
able to recover the p and q values so it

643
00:22:58,400 --> 00:23:00,400
doesn't actually know so this this this

644
00:23:00,400 --> 00:23:02,159
is printed purely and you can go see the

645
00:23:02,159 --> 00:23:04,960
code um in the repo um this is printed

646
00:23:04,960 --> 00:23:07,679
purely for your own interest

647
00:23:07,679 --> 00:23:09,520
and you can confirm they match so that's

648
00:23:09,520 --> 00:23:11,039
that's pretty cool right and that just

649
00:23:11,039 --> 00:23:12,159
kind of worked

650
00:23:12,159 --> 00:23:13,280
really well

651
00:23:13,280 --> 00:23:15,760
all right so but that was using um this

652
00:23:15,760 --> 00:23:18,000
larger more expensive emfi tool i built

653
00:23:18,000 --> 00:23:19,679
what if you want to do this ultra cheap

654
00:23:19,679 --> 00:23:21,520
so in the last kind of five minutes i've

655
00:23:21,520 --> 00:23:23,039
got here

656
00:23:23,039 --> 00:23:24,880
what i'm going to do

657
00:23:24,880 --> 00:23:27,840
is let's

658
00:23:28,080 --> 00:23:30,880
go back to this and let's look at real

659
00:23:30,880 --> 00:23:33,440
cheap emfi tool

660
00:23:33,440 --> 00:23:35,280
because this is always the question

661
00:23:35,280 --> 00:23:38,000
so all of this is going to use

662
00:23:38,000 --> 00:23:41,120
a uh a flash

663
00:23:41,120 --> 00:23:42,480
device so

664
00:23:42,480 --> 00:23:45,600
back in the day of right

665
00:23:45,600 --> 00:23:47,279
disposable cameras lots of people

666
00:23:47,279 --> 00:23:50,080
probably

667
00:23:50,080 --> 00:23:52,720
saw these guys these were like these uh

668
00:23:52,720 --> 00:23:55,200
disposable camera flash units

669
00:23:55,200 --> 00:23:57,440
um and so

670
00:23:57,440 --> 00:23:58,880
these were

671
00:23:58,880 --> 00:24:00,159
you used to be able to get lots of them

672
00:24:00,159 --> 00:24:03,679
for free if you just asked um

673
00:24:03,679 --> 00:24:04,480
now

674
00:24:04,480 --> 00:24:07,120
it's a little trickier so i bought a

675
00:24:07,120 --> 00:24:08,799
pack of two of these for 20 bucks so

676
00:24:08,799 --> 00:24:11,360
they're still pretty cheap right um the

677
00:24:11,360 --> 00:24:13,600
downside of these devices so if you kind

678
00:24:13,600 --> 00:24:17,039
of look at the uh the online schematic

679
00:24:17,039 --> 00:24:19,679
um they have a lot of charge that goes

680
00:24:19,679 --> 00:24:21,200
everywhere so they're not very good to

681
00:24:21,200 --> 00:24:23,120
try to use on their own

682
00:24:23,120 --> 00:24:25,200
um there you go

683
00:24:25,200 --> 00:24:27,360
because basically relative to this

684
00:24:27,360 --> 00:24:30,400
battery even um like the the switches

685
00:24:30,400 --> 00:24:33,039
and stuff will be at like a high voltage

686
00:24:33,039 --> 00:24:34,400
so it's not something you really want to

687
00:24:34,400 --> 00:24:35,840
use on its own

688
00:24:35,840 --> 00:24:38,880
um so what i've done instead is i have

689
00:24:38,880 --> 00:24:41,120
sort of this this tool that's slightly

690
00:24:41,120 --> 00:24:42,799
less dangerous and it's slightly less

691
00:24:42,799 --> 00:24:46,240
dangerous because what it does is uh it

692
00:24:46,240 --> 00:24:47,679
exposes

693
00:24:47,679 --> 00:24:49,760
or uses battery power so the high

694
00:24:49,760 --> 00:24:52,640
voltage never has a way to close a path

695
00:24:52,640 --> 00:24:54,320
around it so

696
00:24:54,320 --> 00:24:56,799
it's basically a way to make a slightly

697
00:24:56,799 --> 00:25:00,120
less terrible

698
00:25:01,440 --> 00:25:03,600
slightly less terrible emf i tool so

699
00:25:03,600 --> 00:25:05,679
this is basically what i've done um and

700
00:25:05,679 --> 00:25:07,360
there's more photos of this in the repo

701
00:25:07,360 --> 00:25:09,840
basically so you take your your camera

702
00:25:09,840 --> 00:25:11,039
flash

703
00:25:11,039 --> 00:25:13,600
um i changed the capacitor so by default

704
00:25:13,600 --> 00:25:15,760
they've got this big chunky electrolytic

705
00:25:15,760 --> 00:25:17,120
capacitor

706
00:25:17,120 --> 00:25:18,880
i changed this out

707
00:25:18,880 --> 00:25:21,120
so that

708
00:25:21,120 --> 00:25:24,960
it's now using a ceramic capacitor

709
00:25:24,960 --> 00:25:27,200
this reduces the amount of charge that

710
00:25:27,200 --> 00:25:29,520
has stored so it's a tiny bit safer

711
00:25:29,520 --> 00:25:31,600
but it also gives us higher current

712
00:25:31,600 --> 00:25:33,919
through the the coil so that's one part

713
00:25:33,919 --> 00:25:36,720
of it um we have a coil we built so i

714
00:25:36,720 --> 00:25:39,600
have some details of that um on the repo

715
00:25:39,600 --> 00:25:41,279
and we basically just connect it through

716
00:25:41,279 --> 00:25:42,480
to a

717
00:25:42,480 --> 00:25:45,279
little in this case an igbt

718
00:25:45,279 --> 00:25:47,840
you can use a mosfet or whatever too

719
00:25:47,840 --> 00:25:50,320
um yeah so that's kind of the the base

720
00:25:50,320 --> 00:25:52,000
design of it and then in this case i

721
00:25:52,000 --> 00:25:53,440
have a pulse button as i mentioned you

722
00:25:53,440 --> 00:25:55,279
can use an auto isolator

723
00:25:55,279 --> 00:25:58,400
or anything else um so does it work so

724
00:25:58,400 --> 00:26:01,440
it's a bit questionable uh and i'll show

725
00:26:01,440 --> 00:26:02,159
you

726
00:26:02,159 --> 00:26:04,080
let's just try it

727
00:26:04,080 --> 00:26:06,960
i found that it's

728
00:26:06,960 --> 00:26:09,440
not quite as reliable but basically you

729
00:26:09,440 --> 00:26:11,200
have two buttons one button charges it

730
00:26:11,200 --> 00:26:14,320
so if i hold down one button

731
00:26:14,320 --> 00:26:16,480
you'll see a flashing there's a little

732
00:26:16,480 --> 00:26:18,080
neon light it may or may not show

733
00:26:18,080 --> 00:26:19,200
through

734
00:26:19,200 --> 00:26:20,559
and then you kind of click the other

735
00:26:20,559 --> 00:26:21,760
button

736
00:26:21,760 --> 00:26:22,720
so

737
00:26:22,720 --> 00:26:24,880
i'm gonna show you i'm gonna jump right

738
00:26:24,880 --> 00:26:27,760
to the uh

739
00:26:29,279 --> 00:26:31,520
this guy here so this is just gonna do

740
00:26:31,520 --> 00:26:35,039
repeated um rsa signing operations right

741
00:26:35,039 --> 00:26:36,080
um

742
00:26:36,080 --> 00:26:37,520
but if it works it's pretty cool and it

743
00:26:37,520 --> 00:26:40,159
has worked a few times for me um we'll

744
00:26:40,159 --> 00:26:42,480
see if the demo gods and so

745
00:26:42,480 --> 00:26:45,279
this is what it looks like fyi right i'm

746
00:26:45,279 --> 00:26:48,080
just going to do that and click it

747
00:26:48,080 --> 00:26:49,039
um

748
00:26:49,039 --> 00:26:52,799
and so you can see it signing

749
00:26:52,799 --> 00:26:56,240
and if you get real lucky

750
00:26:57,200 --> 00:27:00,559
i'm not going to spend too long trying

751
00:27:00,559 --> 00:27:02,400
yeah if you get real lucky what you get

752
00:27:02,400 --> 00:27:04,159
is there's an error during the signing

753
00:27:04,159 --> 00:27:05,919
okay you got segmentation fault which

754
00:27:05,919 --> 00:27:07,440
can also happen but that's good because

755
00:27:07,440 --> 00:27:11,360
that means i mean you're getting errors

756
00:27:14,559 --> 00:27:16,240
right so it just wasn't in the right

757
00:27:16,240 --> 00:27:18,159
time because remember this is a whole os

758
00:27:18,159 --> 00:27:19,679
running so

759
00:27:19,679 --> 00:27:21,919
legal instruction right

760
00:27:21,919 --> 00:27:26,240
when we insert a fault nobody guarantees

761
00:27:26,240 --> 00:27:28,799
the fault is where we want it

762
00:27:28,799 --> 00:27:30,480
um so normally we'd have some timing and

763
00:27:30,480 --> 00:27:32,000
stuff like that as well

764
00:27:32,000 --> 00:27:35,000
um

765
00:27:37,360 --> 00:27:40,320
okay oh there we go so so that was my

766
00:27:40,320 --> 00:27:42,960
cheap emfi tool right inserting a fault

767
00:27:42,960 --> 00:27:44,640
into the raspberry pi

768
00:27:44,640 --> 00:27:46,559
um and so you can give it a shot

769
00:27:46,559 --> 00:27:49,039
yourself uh it's easier to test first

770
00:27:49,039 --> 00:27:51,679
with the um the little loop test but

771
00:27:51,679 --> 00:27:53,200
um you can see that actually works so

772
00:27:53,200 --> 00:27:54,960
that's pretty cool right like that was a

773
00:27:54,960 --> 00:27:56,480
little

774
00:27:56,480 --> 00:28:00,080
real self-built emfi um

775
00:28:00,080 --> 00:28:02,640
that was able to work you know in some

776
00:28:02,640 --> 00:28:04,320
degree pretty well

777
00:28:04,320 --> 00:28:07,200
um other demos so low cost if to kind of

778
00:28:07,200 --> 00:28:09,440
wrap it up right low-cost demos that

779
00:28:09,440 --> 00:28:11,360
might be interesting um you can do

780
00:28:11,360 --> 00:28:12,480
something similar with a barbecue

781
00:28:12,480 --> 00:28:14,640
lighter so uh it's a little trickier you

782
00:28:14,640 --> 00:28:15,840
want to make sure you have some kapton

783
00:28:15,840 --> 00:28:18,799
tape and stuff protecting you um

784
00:28:18,799 --> 00:28:20,480
but it's actually possible to do this

785
00:28:20,480 --> 00:28:22,320
this type of attack

786
00:28:22,320 --> 00:28:24,080
in another way as well

787
00:28:24,080 --> 00:28:26,240
um so this

788
00:28:26,240 --> 00:28:27,760
bottom photo was pulled from the

789
00:28:27,760 --> 00:28:30,399
hardware hacking handbook um the other

790
00:28:30,399 --> 00:28:32,320
real cool one to watch out for so thomas

791
00:28:32,320 --> 00:28:34,159
roth who you've probably seen through a

792
00:28:34,159 --> 00:28:35,520
bunch of stuff the air tags most

793
00:28:35,520 --> 00:28:37,919
recently but some other uh really nice

794
00:28:37,919 --> 00:28:39,440
attacks and does some really nice

795
00:28:39,440 --> 00:28:41,919
documentation for them um

796
00:28:41,919 --> 00:28:43,840
had this working on a raspberry pi pico

797
00:28:43,840 --> 00:28:45,760
where it's basically glitching from one

798
00:28:45,760 --> 00:28:47,520
core to the other so again something

799
00:28:47,520 --> 00:28:48,799
that you can try if you want to learn

800
00:28:48,799 --> 00:28:51,679
about this yourself um with very minimal

801
00:28:51,679 --> 00:28:53,440
investment in it

802
00:28:53,440 --> 00:28:55,520
um with that i think i'm basically at

803
00:28:55,520 --> 00:28:58,399
the end so um if you're interested in

804
00:28:58,399 --> 00:29:00,399
seeing updates on this uh feel free to

805
00:29:00,399 --> 00:29:02,000
ping me on twitter of course on the

806
00:29:02,000 --> 00:29:04,080
discord here i'll be around

807
00:29:04,080 --> 00:29:07,120
um and we i post occasional blog posts

808
00:29:07,120 --> 00:29:08,960
as well as a lot of the work goes into

809
00:29:08,960 --> 00:29:10,720
that chip whisper itself so there's all

810
00:29:10,720 --> 00:29:13,120
sorts of tutorials that get pushed in

811
00:29:13,120 --> 00:29:14,720
um to that so if you're curious about

812
00:29:14,720 --> 00:29:17,120
you know ecdsa ecc

813
00:29:17,120 --> 00:29:19,919
aes des we have examples on all of those

814
00:29:19,919 --> 00:29:21,919
we have fault attacks on rsa fault

815
00:29:21,919 --> 00:29:23,840
attacks on aes

816
00:29:23,840 --> 00:29:26,159
it's all available right the

817
00:29:26,159 --> 00:29:28,159
documentation the examples are all fully

818
00:29:28,159 --> 00:29:29,120
open

819
00:29:29,120 --> 00:29:30,960
a lot of the firmware hardware all that

820
00:29:30,960 --> 00:29:32,480
stuff's open as well so there's quite a

821
00:29:32,480 --> 00:29:35,360
bit of resources available for you

822
00:29:35,360 --> 00:29:37,520
to get started in the art

823
00:29:37,520 --> 00:29:39,039
i know this was really quick as i said i

824
00:29:39,039 --> 00:29:42,080
wanted to kind of show some examples and

825
00:29:42,080 --> 00:29:44,720
hopefully that accomplished that feel

826
00:29:44,720 --> 00:29:47,200
for you and you enjoy the rest of the

827
00:29:47,200 --> 00:29:50,200
talk

