1
00:00:03,540 --> 00:00:07,600
[Music]

2
00:00:07,600 --> 00:00:09,679
thanks for the introduction

3
00:00:09,679 --> 00:00:14,080
um so yeah i'm super happy to be here um

4
00:00:14,080 --> 00:00:17,119
uh it's quite uh funny experience being

5
00:00:17,119 --> 00:00:17,680
part of a

6
00:00:17,680 --> 00:00:19,680
remote conference but i'm uh really glad

7
00:00:19,680 --> 00:00:21,600
that they've done this and i want to say

8
00:00:21,600 --> 00:00:22,640
thanks to

9
00:00:22,640 --> 00:00:25,599
the hackaday team for extending out um

10
00:00:25,599 --> 00:00:27,439
the kind of 20-minute demo slot into

11
00:00:27,439 --> 00:00:28,160
something

12
00:00:28,160 --> 00:00:31,199
um that i can fit this into because it's

13
00:00:31,199 --> 00:00:32,159
a bit of a huge

14
00:00:32,159 --> 00:00:35,360
subject um i'm

15
00:00:35,360 --> 00:00:38,640
uh really a learning by doing kind of

16
00:00:38,640 --> 00:00:39,280
person

17
00:00:39,280 --> 00:00:41,680
so um when i decided i wanted to learn a

18
00:00:41,680 --> 00:00:42,559
bit more about

19
00:00:42,559 --> 00:00:45,760
asic stuff and i just kind of jumped

20
00:00:45,760 --> 00:00:46,399
into

21
00:00:46,399 --> 00:00:49,360
um doing it doing the vlsi courses doing

22
00:00:49,360 --> 00:00:50,800
magic stuff

23
00:00:50,800 --> 00:00:53,680
um and then there was this big um

24
00:00:53,680 --> 00:00:54,960
announcement by

25
00:00:54,960 --> 00:00:58,320
google and skywater for this um

26
00:00:58,320 --> 00:01:01,359
open open source pdk

27
00:01:01,359 --> 00:01:03,039
so one of the things i'm going to really

28
00:01:03,039 --> 00:01:04,799
try hard to do is to not

29
00:01:04,799 --> 00:01:06,720
confuse everyone with loads of jargon so

30
00:01:06,720 --> 00:01:08,880
this really is a zero to asic course

31
00:01:08,880 --> 00:01:11,760
so let's start at the top asic is a

32
00:01:11,760 --> 00:01:12,560
custom

33
00:01:12,560 --> 00:01:15,439
uh integrated circuit so it's lots of

34
00:01:15,439 --> 00:01:17,520
tiny little switches packed into

35
00:01:17,520 --> 00:01:20,640
a silicon chip and then put onto a

36
00:01:20,640 --> 00:01:23,680
a tiny little um

37
00:01:23,680 --> 00:01:26,159
chip and then you put that on your board

38
00:01:26,159 --> 00:01:27,280
um

39
00:01:27,280 --> 00:01:31,439
so the aims of this um

40
00:01:31,439 --> 00:01:34,720
kind of one hour demo presentation is to

41
00:01:34,720 --> 00:01:37,439
give you a high level understanding

42
00:01:37,439 --> 00:01:41,360
of um

43
00:01:41,360 --> 00:01:44,079
uh of what it takes to make a custom

44
00:01:44,079 --> 00:01:45,040
digital chip

45
00:01:45,040 --> 00:01:48,720
um why you might want to do that um

46
00:01:48,720 --> 00:01:50,399
see some of the tools in action for

47
00:01:50,399 --> 00:01:51,759
simple design

48
00:01:51,759 --> 00:01:55,280
um familiarity with the jargon um

49
00:01:55,280 --> 00:01:58,960
to kind of uh take away this slightly

50
00:01:58,960 --> 00:02:02,320
unapproachable aspect of asex stuff

51
00:02:02,320 --> 00:02:05,920
um and where to find help

52
00:02:05,920 --> 00:02:08,720
um and this is the the kind of the flow

53
00:02:08,720 --> 00:02:10,239
that i'm gonna the follow through this

54
00:02:10,239 --> 00:02:11,280
um presentation

55
00:02:11,280 --> 00:02:14,480
so um if uh

56
00:02:14,480 --> 00:02:18,319
you could um i'm gonna paste this in the

57
00:02:18,319 --> 00:02:19,280
twitch now

58
00:02:19,280 --> 00:02:23,599
in the twitch chat if you could fill in

59
00:02:23,599 --> 00:02:25,840
um the stuff that you're most interested

60
00:02:25,840 --> 00:02:26,879
in in this

61
00:02:26,879 --> 00:02:28,879
uh in this walkthrough then that will

62
00:02:28,879 --> 00:02:30,720
help me allocate the time to the stuff

63
00:02:30,720 --> 00:02:33,440
that people are most interested in

64
00:02:33,440 --> 00:02:34,800
so i'm going to start off with like a

65
00:02:34,800 --> 00:02:36,480
little bit of historical context

66
00:02:36,480 --> 00:02:39,760
talk about digital switches um look at

67
00:02:39,760 --> 00:02:40,160
how

68
00:02:40,160 --> 00:02:42,720
they are made and packed into these tiny

69
00:02:42,720 --> 00:02:43,840
chips

70
00:02:43,840 --> 00:02:46,959
look at the sky water factories um chip

71
00:02:46,959 --> 00:02:48,959
making specification that's what the pdk

72
00:02:48,959 --> 00:02:50,080
is

73
00:02:50,080 --> 00:02:53,360
process design kit so

74
00:02:53,360 --> 00:02:54,800
that provides all the information you

75
00:02:54,800 --> 00:02:56,800
need to make a chip using that

76
00:02:56,800 --> 00:02:57,680
particular

77
00:02:57,680 --> 00:03:00,000
factory's process for the type of

78
00:03:00,000 --> 00:03:02,560
process that they've made open source

79
00:03:02,560 --> 00:03:04,640
open lane is the name of the tool that

80
00:03:04,640 --> 00:03:05,599
we use

81
00:03:05,599 --> 00:03:08,959
to build the um the chip

82
00:03:08,959 --> 00:03:10,720
um a little bit of look at digital

83
00:03:10,720 --> 00:03:12,319
design with a hardware description

84
00:03:12,319 --> 00:03:13,440
language and a bit of

85
00:03:13,440 --> 00:03:15,599
simulation verification and then ending

86
00:03:15,599 --> 00:03:16,879
up with google's

87
00:03:16,879 --> 00:03:19,360
free chip manufacturing opportunity so

88
00:03:19,360 --> 00:03:20,239
this is the

89
00:03:20,239 --> 00:03:22,720
um one of the things that's most

90
00:03:22,720 --> 00:03:23,680
exciting about this

91
00:03:23,680 --> 00:03:26,959
is having the actual opportunity to

92
00:03:26,959 --> 00:03:30,400
make your own chips so at the end of

93
00:03:30,400 --> 00:03:30,959
this

94
00:03:30,959 --> 00:03:32,640
um demo you should have seen the whole

95
00:03:32,640 --> 00:03:34,319
thing if you want to do it

96
00:03:34,319 --> 00:03:36,239
there's links in the resources all the

97
00:03:36,239 --> 00:03:38,159
slides will be shared and so forth

98
00:03:38,159 --> 00:03:42,000
for you to get involved so i'll just

99
00:03:42,000 --> 00:03:46,879
look at what the results are um

100
00:03:46,879 --> 00:03:51,680
and looks like and it's fairly

101
00:03:51,680 --> 00:03:55,760
evenly spread

102
00:03:57,599 --> 00:03:58,959
there's not there's nothing that

103
00:03:58,959 --> 00:04:01,920
anyone's completely uninterested in so

104
00:04:01,920 --> 00:04:04,159
i'll just go it i'll go at my kind of

105
00:04:04,159 --> 00:04:06,640
the pace that i've been practicing

106
00:04:06,640 --> 00:04:10,319
um okay so um why

107
00:04:10,319 --> 00:04:12,640
um is a good question why would you want

108
00:04:12,640 --> 00:04:14,319
to i think this is going to be a really

109
00:04:14,319 --> 00:04:15,280
exciting field

110
00:04:15,280 --> 00:04:18,160
we've seen how open source has kind of

111
00:04:18,160 --> 00:04:19,440
revolutionized

112
00:04:19,440 --> 00:04:22,160
um different technologies and we've

113
00:04:22,160 --> 00:04:23,919
we've kind of had this

114
00:04:23,919 --> 00:04:27,360
going down through the stack and

115
00:04:27,360 --> 00:04:29,440
the next step is going to be open source

116
00:04:29,440 --> 00:04:30,639
silicon

117
00:04:30,639 --> 00:04:32,000
so where will this lead i think that's

118
00:04:32,000 --> 00:04:33,840
an interesting question i think what

119
00:04:33,840 --> 00:04:35,199
bunny huang is doing

120
00:04:35,199 --> 00:04:38,320
with his um secure hardware he's using

121
00:04:38,320 --> 00:04:40,320
an fpga there to prevent

122
00:04:40,320 --> 00:04:43,840
um supply chain shenanigans and

123
00:04:43,840 --> 00:04:46,000
open source silicon i think is maybe the

124
00:04:46,000 --> 00:04:47,520
ultimate way of

125
00:04:47,520 --> 00:04:51,120
protecting your security

126
00:04:51,120 --> 00:04:53,360
we'll see unpredictable innovation with

127
00:04:53,360 --> 00:04:54,320
open source stuff

128
00:04:54,320 --> 00:04:56,000
simpler more accessible tools and

129
00:04:56,000 --> 00:04:59,120
greater accessibility so more

130
00:04:59,120 --> 00:05:01,520
more availability and part of the

131
00:05:01,520 --> 00:05:02,960
accessibility is the cost

132
00:05:02,960 --> 00:05:04,400
so we'll see how that figures into

133
00:05:04,400 --> 00:05:07,039
things as well

134
00:05:08,800 --> 00:05:12,160
so when i was um getting

135
00:05:12,160 --> 00:05:15,039
getting ready with all of this stuff um

136
00:05:15,039 --> 00:05:15,600
it was

137
00:05:15,600 --> 00:05:18,639
really blowing my mind how what a crazy

138
00:05:18,639 --> 00:05:19,759
field this is so

139
00:05:19,759 --> 00:05:22,080
it's like it's full of huge and tiny

140
00:05:22,080 --> 00:05:23,199
numbers

141
00:05:23,199 --> 00:05:26,880
um so we've got like tiny feature sizes

142
00:05:26,880 --> 00:05:28,479
in the order of nanometers

143
00:05:28,479 --> 00:05:32,000
so um we've got meters a thousand times

144
00:05:32,000 --> 00:05:32,720
smaller is

145
00:05:32,720 --> 00:05:34,240
millimeters a thousand times smaller

146
00:05:34,240 --> 00:05:35,759
says micrometers

147
00:05:35,759 --> 00:05:37,280
or microns a thousand times smaller than

148
00:05:37,280 --> 00:05:39,039
that is nanometers and nanometers is the

149
00:05:39,039 --> 00:05:39,840
scale that we're

150
00:05:39,840 --> 00:05:42,400
operating on here we've got huge setup

151
00:05:42,400 --> 00:05:43,840
costs which is one of the things that's

152
00:05:43,840 --> 00:05:44,639
held it

153
00:05:44,639 --> 00:05:48,160
out of the um approachability for

154
00:05:48,160 --> 00:05:50,240
makers for example or like their

155
00:05:50,240 --> 00:05:52,560
hackaday community

156
00:05:52,560 --> 00:05:56,400
um the tiny switches used inside modern

157
00:05:56,400 --> 00:05:57,759
chips mosfets

158
00:05:57,759 --> 00:06:00,160
um they are the most manufactured thing

159
00:06:00,160 --> 00:06:02,800
that has ever been made 1.3 times 10 to

160
00:06:02,800 --> 00:06:04,720
the 22 according to wikipedia which is

161
00:06:04,720 --> 00:06:07,840
totally mind-blowing

162
00:06:08,000 --> 00:06:11,120
and yeah it's magical in a way computers

163
00:06:11,120 --> 00:06:12,960
think using etchings and poison sound

164
00:06:12,960 --> 00:06:14,479
and measure time using vibrating

165
00:06:14,479 --> 00:06:15,840
crystals so if you're looking for magic

166
00:06:15,840 --> 00:06:16,720
you found it i

167
00:06:16,720 --> 00:06:19,520
like that quote and my buddy niels

168
00:06:19,520 --> 00:06:20,960
mosley helped me out with

169
00:06:20,960 --> 00:06:22,639
um preparing for this and just

170
00:06:22,639 --> 00:06:24,960
discussing um asic stuff

171
00:06:24,960 --> 00:06:27,680
said that it was trying to do a zero to

172
00:06:27,680 --> 00:06:28,160
asic

173
00:06:28,160 --> 00:06:29,919
workshop was mad but in a good way so

174
00:06:29,919 --> 00:06:31,520
that's kind of given me uh

175
00:06:31,520 --> 00:06:33,440
hope that it's worth doing something

176
00:06:33,440 --> 00:06:35,199
like this

177
00:06:35,199 --> 00:06:37,120
when i first got into learning about

178
00:06:37,120 --> 00:06:38,400
vlsi

179
00:06:38,400 --> 00:06:41,520
uh very large scale integrated circuits

180
00:06:41,520 --> 00:06:45,199
i read this book and

181
00:06:45,199 --> 00:06:46,960
it was really interesting it's quite

182
00:06:46,960 --> 00:06:48,639
dated in terms of the technology but

183
00:06:48,639 --> 00:06:49,199
it's

184
00:06:49,199 --> 00:06:50,800
it's very refreshing in the way that

185
00:06:50,800 --> 00:06:52,479
it's everything's open

186
00:06:52,479 --> 00:06:56,319
um and one of the things that they

187
00:06:56,319 --> 00:06:57,919
talked about was about learning by doing

188
00:06:57,919 --> 00:06:59,360
so that resonated with

189
00:06:59,360 --> 00:07:01,039
with me and i hope that that resonates

190
00:07:01,039 --> 00:07:02,960
with you as well and you see that

191
00:07:02,960 --> 00:07:04,000
throughout this

192
00:07:04,000 --> 00:07:06,479
um this demo that there's nothing really

193
00:07:06,479 --> 00:07:07,840
unapproachable here

194
00:07:07,840 --> 00:07:10,000
and with the announcement of the open

195
00:07:10,000 --> 00:07:10,880
source

196
00:07:10,880 --> 00:07:13,360
development kit from skywater and the

197
00:07:13,360 --> 00:07:14,560
new tools that we have

198
00:07:14,560 --> 00:07:16,560
and the free shuttle from google that

199
00:07:16,560 --> 00:07:18,319
actually this is something that is

200
00:07:18,319 --> 00:07:21,360
maybe um possible for you to

201
00:07:21,360 --> 00:07:23,440
get one of your designs on silicon that

202
00:07:23,440 --> 00:07:24,560
was certainly one of the things that

203
00:07:24,560 --> 00:07:26,000
really excited me

204
00:07:26,000 --> 00:07:28,400
as an electronic engineer for 10 or 15

205
00:07:28,400 --> 00:07:29,520
years i never

206
00:07:29,520 --> 00:07:31,360
really thought that i would ever make a

207
00:07:31,360 --> 00:07:32,800
chip but that's always been kind of like

208
00:07:32,800 --> 00:07:33,280
a

209
00:07:33,280 --> 00:07:35,680
i don't know kind of magical thing for

210
00:07:35,680 --> 00:07:37,919
me maybe

211
00:07:37,919 --> 00:07:42,000
so a little bit of context um

212
00:07:42,000 --> 00:07:44,400
digital computers need switches and it

213
00:07:44,400 --> 00:07:45,039
used to be

214
00:07:45,039 --> 00:07:48,000
mechanics um and then it was relays and

215
00:07:48,000 --> 00:07:49,199
then it was valves and then it was

216
00:07:49,199 --> 00:07:50,560
transistors

217
00:07:50,560 --> 00:07:52,479
and in transit transistors was the first

218
00:07:52,479 --> 00:07:54,400
transistor was 1954 this is

219
00:07:54,400 --> 00:07:57,759
the um from the

220
00:07:57,759 --> 00:07:59,680
photo from the computer science museum

221
00:07:59,680 --> 00:08:02,000
in san francisco

222
00:08:02,000 --> 00:08:04,400
and then um this is an integrated

223
00:08:04,400 --> 00:08:05,440
circuit so when you put

224
00:08:05,440 --> 00:08:07,840
multiple switches together or multiple

225
00:08:07,840 --> 00:08:10,960
parts of a component on one

226
00:08:10,960 --> 00:08:12,960
uh bit of silicon it becomes an

227
00:08:12,960 --> 00:08:14,479
integrated circuit so it's a way of

228
00:08:14,479 --> 00:08:17,199
making things smaller

229
00:08:17,199 --> 00:08:21,039
and we see over the years how uh

230
00:08:21,039 --> 00:08:22,720
things just got more and more and more

231
00:08:22,720 --> 00:08:24,639
exponentially complex and now we've

232
00:08:24,639 --> 00:08:27,680
got millions or billions of transistors

233
00:08:27,680 --> 00:08:28,800
or switches

234
00:08:28,800 --> 00:08:31,680
on a chip

235
00:08:32,000 --> 00:08:35,120
so i'll just play you a quick um video

236
00:08:35,120 --> 00:08:37,440
here

237
00:08:38,559 --> 00:08:42,080
this is um so we've got a chip here

238
00:08:42,080 --> 00:08:43,599
and the top's been etched off and you

239
00:08:43,599 --> 00:08:46,000
can see the gold bond wires that break

240
00:08:46,000 --> 00:08:46,880
out

241
00:08:46,880 --> 00:08:50,240
this uh little chip of um silicon in the

242
00:08:50,240 --> 00:08:51,200
middle

243
00:08:51,200 --> 00:08:52,959
with all the pattings patterns actually

244
00:08:52,959 --> 00:08:55,200
do the magical work

245
00:08:55,200 --> 00:08:56,800
and one interesting thing here is that

246
00:08:56,800 --> 00:08:58,320
this chip is so tiny that

247
00:08:58,320 --> 00:09:00,240
it has to be put in this big block of

248
00:09:00,240 --> 00:09:01,680
plastic and then bonded

249
00:09:01,680 --> 00:09:04,000
with these bond wires for us to actually

250
00:09:04,000 --> 00:09:06,800
get those signals out to the real world

251
00:09:06,800 --> 00:09:08,399
and now we're switching from the optical

252
00:09:08,399 --> 00:09:10,480
microscope to the

253
00:09:10,480 --> 00:09:14,160
um the electron scanning electron

254
00:09:14,160 --> 00:09:15,680
microscope

255
00:09:15,680 --> 00:09:16,959
we start to see some of the internal

256
00:09:16,959 --> 00:09:19,120
structure here so these thicker

257
00:09:19,120 --> 00:09:21,600
lines here are going to be power

258
00:09:21,600 --> 00:09:23,120
distribution

259
00:09:23,120 --> 00:09:26,800
and then we start to see all the uh fine

260
00:09:26,800 --> 00:09:28,240
interconnects wires that connects

261
00:09:28,240 --> 00:09:31,360
everything together

262
00:09:31,360 --> 00:09:34,160
um and then you can start to see

263
00:09:34,160 --> 00:09:37,040
underneath those tiny wires we've got

264
00:09:37,040 --> 00:09:38,640
some other structures with some

265
00:09:38,640 --> 00:09:41,600
other um wires these slightly thicker

266
00:09:41,600 --> 00:09:43,440
ones that's more power distribution

267
00:09:43,440 --> 00:09:45,200
and then underneath that we've actually

268
00:09:45,200 --> 00:09:46,640
got the the

269
00:09:46,640 --> 00:09:49,680
switches the mosfets and this um kind of

270
00:09:49,680 --> 00:09:50,080
this

271
00:09:50,080 --> 00:09:52,080
dimension here this is a critical

272
00:09:52,080 --> 00:09:53,200
dimension

273
00:09:53,200 --> 00:09:56,640
and um it's about a thousand nanometers

274
00:09:56,640 --> 00:09:59,920
in this video and that dimension in the

275
00:09:59,920 --> 00:10:02,320
um toolkit that we've got from skywater

276
00:10:02,320 --> 00:10:03,680
is about

277
00:10:03,680 --> 00:10:07,439
nanometers so even smaller than this

278
00:10:12,320 --> 00:10:15,839
so um a mosfet is a type of transistor

279
00:10:15,839 --> 00:10:17,680
so these small switches that we need to

280
00:10:17,680 --> 00:10:18,160
build

281
00:10:18,160 --> 00:10:21,200
up the chip we

282
00:10:21,200 --> 00:10:22,880
we use a mosfet these days which stands

283
00:10:22,880 --> 00:10:24,480
for metal oxide silicon

284
00:10:24,480 --> 00:10:26,160
field effect transistor so quite a

285
00:10:26,160 --> 00:10:28,399
mouthful first mosfet

286
00:10:28,399 --> 00:10:31,600
is 1950 1959

287
00:10:31,600 --> 00:10:34,240
it uh attributed to two people um if

288
00:10:34,240 --> 00:10:34,800
you've

289
00:10:34,800 --> 00:10:37,120
used mosfets in your own projects maybe

290
00:10:37,120 --> 00:10:39,120
for driving motors or h bridges

291
00:10:39,120 --> 00:10:41,120
they kind of the big ones look like this

292
00:10:41,120 --> 00:10:42,320
i think actually this thing i've got on

293
00:10:42,320 --> 00:10:44,240
my desk here is a mosfet is a smaller

294
00:10:44,240 --> 00:10:45,440
package

295
00:10:45,440 --> 00:10:48,399
um so we have a tiny little chip of

296
00:10:48,399 --> 00:10:49,040
silicon

297
00:10:49,040 --> 00:10:51,200
and that on the cross section looks a

298
00:10:51,200 --> 00:10:52,800
bit like this and then it's put into a

299
00:10:52,800 --> 00:10:54,640
bigger package maybe to make it easier

300
00:10:54,640 --> 00:10:57,360
to solder or easier to dissipate heat

301
00:10:57,360 --> 00:10:59,680
and if we look across the surface of the

302
00:10:59,680 --> 00:11:00,399
silicon

303
00:11:00,399 --> 00:11:02,079
we have a structure a bit like this i'm

304
00:11:02,079 --> 00:11:03,519
not going to get too

305
00:11:03,519 --> 00:11:06,800
into this but just a really super high

306
00:11:06,800 --> 00:11:09,120
level overview

307
00:11:09,120 --> 00:11:12,079
the way i think of this is we have a

308
00:11:12,079 --> 00:11:13,200
capacitor

309
00:11:13,200 --> 00:11:15,279
formed between the gate and the body so

310
00:11:15,279 --> 00:11:18,000
this oxide layer here silicon dioxide is

311
00:11:18,000 --> 00:11:19,040
non-conductive

312
00:11:19,040 --> 00:11:20,640
then we have a metal layer here and a

313
00:11:20,640 --> 00:11:22,320
metal layer here and then this

314
00:11:22,320 --> 00:11:23,920
semiconductor here

315
00:11:23,920 --> 00:11:26,160
so when you've got two metal plates that

316
00:11:26,160 --> 00:11:28,240
are insulated you've got a capacitor

317
00:11:28,240 --> 00:11:30,640
when we put an electric field across

318
00:11:30,640 --> 00:11:31,600
here

319
00:11:31,600 --> 00:11:33,519
it changes the electrochemical

320
00:11:33,519 --> 00:11:35,680
properties of this channel region and it

321
00:11:35,680 --> 00:11:37,519
allows a current to flow from the source

322
00:11:37,519 --> 00:11:39,519
of the drain or the drain to source

323
00:11:39,519 --> 00:11:42,079
and if you look at this um picture it's

324
00:11:42,079 --> 00:11:43,600
symmetrical at the moment

325
00:11:43,600 --> 00:11:46,480
um and off we normally to make these

326
00:11:46,480 --> 00:11:48,160
actually work we make them asymmetrical

327
00:11:48,160 --> 00:11:49,200
so you can see in the

328
00:11:49,200 --> 00:11:50,560
in the circuit symbol down here there's

329
00:11:50,560 --> 00:11:52,880
an asymmetry so i won't get into that

330
00:11:52,880 --> 00:11:53,440
but it's in

331
00:11:53,440 --> 00:11:57,279
it's an interesting part of

332
00:11:57,279 --> 00:11:59,760
how the structures actually work on the

333
00:11:59,760 --> 00:12:00,959
chips

334
00:12:00,959 --> 00:12:04,320
and this gate length here this distance

335
00:12:04,320 --> 00:12:07,200
between the source and the drain regions

336
00:12:07,200 --> 00:12:10,160
for the sky water process that we have

337
00:12:10,160 --> 00:12:12,480
access to now that's 150 nanometers so

338
00:12:12,480 --> 00:12:15,120
that's the scale

339
00:12:15,279 --> 00:12:18,639
so why mosfets um they're easy to

340
00:12:18,639 --> 00:12:20,000
manufacture in volume

341
00:12:20,000 --> 00:12:23,279
we've got this super cool way of

342
00:12:23,279 --> 00:12:25,920
making hundreds and millions of them all

343
00:12:25,920 --> 00:12:27,360
in one go

344
00:12:27,360 --> 00:12:29,120
um it's easy to change the size so you

345
00:12:29,120 --> 00:12:30,399
can make a big one for

346
00:12:30,399 --> 00:12:34,000
power um switching or tiny ones for um

347
00:12:34,000 --> 00:12:36,800
calculation digital computers and it's

348
00:12:36,800 --> 00:12:38,079
become the basic building block

349
00:12:38,079 --> 00:12:41,120
of modern electronics

350
00:12:41,120 --> 00:12:42,959
so let's have a look at how we could use

351
00:12:42,959 --> 00:12:44,880
a mosfet to build

352
00:12:44,880 --> 00:12:47,360
one of the most basic structures of

353
00:12:47,360 --> 00:12:48,160
digital

354
00:12:48,160 --> 00:12:51,279
electronics an inverter so an inverter

355
00:12:51,279 --> 00:12:51,600
if

356
00:12:51,600 --> 00:12:54,240
you're just drawing it out on paper um

357
00:12:54,240 --> 00:12:55,360
you draw it like this

358
00:12:55,360 --> 00:12:57,040
we have a simple truth table if you've

359
00:12:57,040 --> 00:12:59,440
got an n of zero the out is one

360
00:12:59,440 --> 00:13:02,160
so let's have a look at that if the gate

361
00:13:02,160 --> 00:13:03,680
of the mosfet is zero

362
00:13:03,680 --> 00:13:06,639
it's not turned on this is an nmos so

363
00:13:06,639 --> 00:13:08,320
this is not turned on then the

364
00:13:08,320 --> 00:13:11,120
pull-up resistor here pulls this to be

365
00:13:11,120 --> 00:13:11,600
high

366
00:13:11,600 --> 00:13:14,399
so we get the output high if we turn on

367
00:13:14,399 --> 00:13:15,440
the input

368
00:13:15,440 --> 00:13:17,360
now this starts conducting so it shorts

369
00:13:17,360 --> 00:13:18,720
this to ground

370
00:13:18,720 --> 00:13:21,360
and then the output becomes low and one

371
00:13:21,360 --> 00:13:22,800
of the problems with nmoz and

372
00:13:22,800 --> 00:13:25,040
so the introduction to vlsi book is all

373
00:13:25,040 --> 00:13:26,800
based on nmos technology but one of the

374
00:13:26,800 --> 00:13:28,079
problems is efficiency

375
00:13:28,079 --> 00:13:31,279
because when this is uh pulled down

376
00:13:31,279 --> 00:13:33,360
this resistor is always conducting so

377
00:13:33,360 --> 00:13:35,279
it's always dissipating a tiny bit of

378
00:13:35,279 --> 00:13:36,399
heat but because you've got

379
00:13:36,399 --> 00:13:38,320
millions of them in a chip it makes a

380
00:13:38,320 --> 00:13:39,760
lot of heat and

381
00:13:39,760 --> 00:13:43,120
we all know from our hot computers and

382
00:13:43,120 --> 00:13:45,760
hot phones that cooling is a problem

383
00:13:45,760 --> 00:13:49,519
so what we do is we put an n and a p

384
00:13:49,519 --> 00:13:52,560
channel together so that the uh the p

385
00:13:52,560 --> 00:13:55,040
replaces the pull up resistor so that

386
00:13:55,040 --> 00:13:55,760
when the p

387
00:13:55,760 --> 00:13:57,360
is turned on it's pulled up and when the

388
00:13:57,360 --> 00:13:59,839
n is uh turned on is pulled down

389
00:13:59,839 --> 00:14:01,440
so the putting the two together in this

390
00:14:01,440 --> 00:14:02,720
complementary style is called

391
00:14:02,720 --> 00:14:05,519
complementary mosfet or cmos

392
00:14:05,519 --> 00:14:07,440
and the big reason to do that is for

393
00:14:07,440 --> 00:14:09,760
efficiency

394
00:14:09,760 --> 00:14:12,959
so how do you actually make a chip well

395
00:14:12,959 --> 00:14:13,920
fundamentally

396
00:14:13,920 --> 00:14:17,120
you draw um squares that represent

397
00:14:17,120 --> 00:14:20,160
where metal or the silicon dioxide

398
00:14:20,160 --> 00:14:21,839
isolation or where the doping

399
00:14:21,839 --> 00:14:23,680
the n or the p type semiconductor needs

400
00:14:23,680 --> 00:14:25,920
to be and it used to be

401
00:14:25,920 --> 00:14:28,079
done by hand you can see these people

402
00:14:28,079 --> 00:14:28,959
here doing some

403
00:14:28,959 --> 00:14:32,000
uh cutting on some red tape there

404
00:14:32,000 --> 00:14:34,240
um but you could do it on anything you

405
00:14:34,240 --> 00:14:36,399
could do it on inkscape and actually

406
00:14:36,399 --> 00:14:40,000
my first um tiny demo is

407
00:14:40,000 --> 00:14:45,680
um in uh

408
00:14:45,760 --> 00:14:50,880
logo to g2s i've got a um

409
00:14:54,480 --> 00:14:58,000
a little python script um

410
00:14:58,000 --> 00:15:01,199
and it uses a g2s gds pi

411
00:15:01,199 --> 00:15:04,240
uh library we'll get onto gds later it

412
00:15:04,240 --> 00:15:05,519
opens a logo

413
00:15:05,519 --> 00:15:09,440
um rescales it and then for each of the

414
00:15:09,440 --> 00:15:10,320
pixels

415
00:15:10,320 --> 00:15:13,199
it just draws a rectangle using this gds

416
00:15:13,199 --> 00:15:14,880
format which is the format that we

417
00:15:14,880 --> 00:15:17,680
send to a fabric a factory which is

418
00:15:17,680 --> 00:15:18,000
called

419
00:15:18,000 --> 00:15:21,600
a fab um so if i do make

420
00:15:21,600 --> 00:15:25,199
that runs a script and we get a custom

421
00:15:25,199 --> 00:15:28,560
bit of gds here and i can measure this

422
00:15:28,560 --> 00:15:29,440
and see that it's

423
00:15:29,440 --> 00:15:32,320
40 microns so i'm going to put this on

424
00:15:32,320 --> 00:15:32,959
one of

425
00:15:32,959 --> 00:15:35,279
my chips i'm sending to fab if it gets

426
00:15:35,279 --> 00:15:36,320
past crt

427
00:15:36,320 --> 00:15:37,680
and we'll be in for a chance of the

428
00:15:37,680 --> 00:15:40,800
smallest jolly rancher

429
00:15:40,800 --> 00:15:42,079
but you could draw in inkscape as you

430
00:15:42,079 --> 00:15:43,759
want the fundamental thing is that you

431
00:15:43,759 --> 00:15:46,480
end up with stuff in a gds2 file format

432
00:15:46,480 --> 00:15:50,000
and that's what you send to the factory

433
00:15:50,000 --> 00:15:53,040
um now i made a mistake on my

434
00:15:53,040 --> 00:15:54,560
practice videos because i thought taping

435
00:15:54,560 --> 00:15:56,399
out was actually people taping things

436
00:15:56,399 --> 00:15:56,720
but

437
00:15:56,720 --> 00:15:59,199
actually what it means is my buddy omar

438
00:15:59,199 --> 00:15:59,839
told me

439
00:15:59,839 --> 00:16:02,000
is that when they took the tape reels

440
00:16:02,000 --> 00:16:03,839
out of the computers and carried them to

441
00:16:03,839 --> 00:16:04,800
the factory

442
00:16:04,800 --> 00:16:06,480
you take the tape out so you finished

443
00:16:06,480 --> 00:16:07,680
doing the work on it and we still use

444
00:16:07,680 --> 00:16:08,959
that term now

445
00:16:08,959 --> 00:16:12,639
tape out so if you want to know more

446
00:16:12,639 --> 00:16:14,639
about how this stuff is actually done

447
00:16:14,639 --> 00:16:17,279
then i really recommend samsulu's um

448
00:16:17,279 --> 00:16:18,399
video from

449
00:16:18,399 --> 00:16:22,240
super con because he he did he

450
00:16:22,240 --> 00:16:24,639
built up this process in his carriage um

451
00:16:24,639 --> 00:16:26,959
using a very a small set of masks and a

452
00:16:26,959 --> 00:16:28,639
big process size

453
00:16:28,639 --> 00:16:31,839
um so the a very quick

454
00:16:31,839 --> 00:16:34,399
walkthrough is you you get your doped um

455
00:16:34,399 --> 00:16:35,199
silicon

456
00:16:35,199 --> 00:16:39,120
so a p-type silicon ready you put

457
00:16:39,120 --> 00:16:41,839
photoresist on top of it you bake it and

458
00:16:41,839 --> 00:16:42,560
then you

459
00:16:42,560 --> 00:16:44,800
put a mask on it and expose it with

460
00:16:44,800 --> 00:16:46,160
ultraviolet light which

461
00:16:46,160 --> 00:16:49,839
um changes the um the

462
00:16:49,839 --> 00:16:51,920
and then you when you develop it it wash

463
00:16:51,920 --> 00:16:53,120
and you can wash it

464
00:16:53,120 --> 00:16:56,399
and wash away uh the holes and then you

465
00:16:56,399 --> 00:16:57,759
can do some process so you've got this

466
00:16:57,759 --> 00:16:59,600
kind of pattern on top of the silicon

467
00:16:59,600 --> 00:17:02,079
and then you can either etch and cut

468
00:17:02,079 --> 00:17:04,000
away or you can

469
00:17:04,000 --> 00:17:07,039
bombard it with n or p type dopants to

470
00:17:07,039 --> 00:17:08,160
change the

471
00:17:08,160 --> 00:17:10,720
chemical structure of the silicon or you

472
00:17:10,720 --> 00:17:11,520
can

473
00:17:11,520 --> 00:17:13,599
grow a level of silicon dioxide on air

474
00:17:13,599 --> 00:17:14,880
as an insulation layer

475
00:17:14,880 --> 00:17:16,959
or you can grow polysilicon which is

476
00:17:16,959 --> 00:17:18,319
another type of

477
00:17:18,319 --> 00:17:20,079
structure that we use on there or put

478
00:17:20,079 --> 00:17:22,799
metal on there for interconnects

479
00:17:22,799 --> 00:17:25,039
and you end up with these amazing 3d

480
00:17:25,039 --> 00:17:26,720
structures

481
00:17:26,720 --> 00:17:29,840
um so i just got this one straight out

482
00:17:29,840 --> 00:17:30,640
of wikipedia

483
00:17:30,640 --> 00:17:31,760
i quite like this one because it looks

484
00:17:31,760 --> 00:17:33,280
like out of a computer game so if maybe

485
00:17:33,280 --> 00:17:34,720
if someone wants to make a

486
00:17:34,720 --> 00:17:37,600
a computer game 3d you have to kind of

487
00:17:37,600 --> 00:17:40,240
jump and follow these bridges

488
00:17:40,240 --> 00:17:41,280
as part of the game i think that would

489
00:17:41,280 --> 00:17:43,280
be quite cool this is

490
00:17:43,280 --> 00:17:44,799
what an inverter looks like in the sky

491
00:17:44,799 --> 00:17:47,280
skywater standard cell library

492
00:17:47,280 --> 00:17:49,360
um and i'll explain what that is in a

493
00:17:49,360 --> 00:17:50,400
minute so

494
00:17:50,400 --> 00:17:53,360
um the what the thing that uh i think

495
00:17:53,360 --> 00:17:53,760
that

496
00:17:53,760 --> 00:17:57,280
really um piqued my interest on this is

497
00:17:57,280 --> 00:17:59,840
seeing how um it's fundamentally a

498
00:17:59,840 --> 00:18:01,840
three-dimensional structure that

499
00:18:01,840 --> 00:18:04,799
builds up this functionality on the chip

500
00:18:04,799 --> 00:18:06,480
and i saw this really recently on

501
00:18:06,480 --> 00:18:08,960
um twitter and i was permission to

502
00:18:08,960 --> 00:18:10,799
reproduce it here and this is

503
00:18:10,799 --> 00:18:12,880
um you can see here the so this is like

504
00:18:12,880 --> 00:18:15,039
the um the working layer

505
00:18:15,039 --> 00:18:16,720
so when i showed that mosfet picture

506
00:18:16,720 --> 00:18:18,640
before here's all the all the switches

507
00:18:18,640 --> 00:18:19,760
here and then we've got all these

508
00:18:19,760 --> 00:18:20,480
interconnect

509
00:18:20,480 --> 00:18:23,039
layers building up and this is like a

510
00:18:23,039 --> 00:18:24,480
reverse engineering process so you can

511
00:18:24,480 --> 00:18:25,760
see how all these things are stacked up

512
00:18:25,760 --> 00:18:27,120
together that make up

513
00:18:27,120 --> 00:18:30,239
this whole working chip

514
00:18:30,559 --> 00:18:34,960
um okay so let's take

515
00:18:34,960 --> 00:18:36,400
for the next demo let's take a quick

516
00:18:36,400 --> 00:18:38,400
look at how we would actually build

517
00:18:38,400 --> 00:18:41,120
a cmos inverter using a tool and the

518
00:18:41,120 --> 00:18:42,320
tool i'm going to use is

519
00:18:42,320 --> 00:18:45,440
magic and it's a very old tool but it's

520
00:18:45,440 --> 00:18:45,919
still

521
00:18:45,919 --> 00:18:49,679
used a lot in the today and it's used in

522
00:18:49,679 --> 00:18:52,559
the open source flow

523
00:18:54,840 --> 00:18:57,840
um

524
00:19:01,440 --> 00:19:03,440
so all of this stuff will be this and

525
00:19:03,440 --> 00:19:04,720
all the slides will all be

526
00:19:04,720 --> 00:19:06,160
uh linked at the end and you'll be able

527
00:19:06,160 --> 00:19:08,840
to download it all

528
00:19:08,840 --> 00:19:11,840
um

529
00:19:12,080 --> 00:19:15,280
so here's one i drew earlier um but

530
00:19:15,280 --> 00:19:17,280
i'll just show you now if i wanted to

531
00:19:17,280 --> 00:19:19,280
make a um

532
00:19:19,280 --> 00:19:22,720
an n-channel mosfet what i need to do is

533
00:19:22,720 --> 00:19:26,000
uh draw the um the where the

534
00:19:26,000 --> 00:19:29,919
n type dopants are going to be implanted

535
00:19:29,919 --> 00:19:32,720
and then i need to draw the gate so

536
00:19:32,720 --> 00:19:34,880
that's made of polysilicon

537
00:19:34,880 --> 00:19:36,480
middle click there and then where they

538
00:19:36,480 --> 00:19:39,600
overlap that forms an n-type transistor

539
00:19:39,600 --> 00:19:40,880
at the moment this is no good because it

540
00:19:40,880 --> 00:19:42,640
doesn't connect to anything so what i

541
00:19:42,640 --> 00:19:43,440
can do is

542
00:19:43,440 --> 00:19:46,559
draw some local interconnects here and

543
00:19:46,559 --> 00:19:47,840
local interconnect

544
00:19:47,840 --> 00:19:51,039
here and then at the moment they're just

545
00:19:51,039 --> 00:19:52,160
on top of each other but they're not

546
00:19:52,160 --> 00:19:52,960
connected

547
00:19:52,960 --> 00:19:56,400
i need a kind of special via so i need a

548
00:19:56,400 --> 00:20:00,880
um n substrate n contacts fire

549
00:20:00,880 --> 00:20:07,840
for these two

550
00:20:11,919 --> 00:20:15,039
where is it there now you see all this

551
00:20:15,039 --> 00:20:17,440
white stuff around here is magic telling

552
00:20:17,440 --> 00:20:19,520
me that it's got drc errors

553
00:20:19,520 --> 00:20:23,280
so it's loaded with the sky 130

554
00:20:23,280 --> 00:20:24,960
process design kit and part of that

555
00:20:24,960 --> 00:20:27,280
process design kit is the design rule

556
00:20:27,280 --> 00:20:28,240
check

557
00:20:28,240 --> 00:20:30,880
so if anything is slightly overlapping

558
00:20:30,880 --> 00:20:32,559
in the wrong way or breaks a rule

559
00:20:32,559 --> 00:20:34,720
magic tells you what what is the problem

560
00:20:34,720 --> 00:20:36,159
with these um

561
00:20:36,159 --> 00:20:38,880
with these white areas so you can see

562
00:20:38,880 --> 00:20:40,240
how you could build up

563
00:20:40,240 --> 00:20:43,280
a shape like this and we've got the n

564
00:20:43,280 --> 00:20:46,320
channel here the p channel here the

565
00:20:46,320 --> 00:20:47,200
polysilicon

566
00:20:47,200 --> 00:20:50,080
gate the input connector the output

567
00:20:50,080 --> 00:20:51,039
connector

568
00:20:51,039 --> 00:20:52,640
and then the way this kind of this

569
00:20:52,640 --> 00:20:54,400
structured bit at the bottom and the top

570
00:20:54,400 --> 00:20:57,600
makes this easy to duplicate and make a

571
00:20:57,600 --> 00:20:59,520
raise of and lay them out in big

572
00:20:59,520 --> 00:21:00,159
patterns

573
00:21:00,159 --> 00:21:02,480
and that's what the open lane asic tool

574
00:21:02,480 --> 00:21:04,480
flow makes use of

575
00:21:04,480 --> 00:21:08,720
so um let me just quit this

576
00:21:08,720 --> 00:21:12,559
and start it again now i know that this

577
00:21:12,559 --> 00:21:13,520
is quite

578
00:21:13,520 --> 00:21:15,520
small writing but i'm going to show you

579
00:21:15,520 --> 00:21:17,760
something that i think is super cool so

580
00:21:17,760 --> 00:21:18,880
because we've

581
00:21:18,880 --> 00:21:21,200
loaded the library and we've got access

582
00:21:21,200 --> 00:21:24,000
to all the models of all the transistors

583
00:21:24,000 --> 00:21:26,799
what i can do is ask magic so i'm just

584
00:21:26,799 --> 00:21:28,880
typing in here extract

585
00:21:28,880 --> 00:21:31,440
and what that does is it looks at how

586
00:21:31,440 --> 00:21:33,039
everything is connected and then

587
00:21:33,039 --> 00:21:36,320
extracts a digital netlist

588
00:21:36,320 --> 00:21:40,960
and then i can say x2spice

589
00:21:42,480 --> 00:21:45,679
lvs that loads a whole bunch of um

590
00:21:45,679 --> 00:21:47,679
defaults but i don't actually want some

591
00:21:47,679 --> 00:21:50,080
of those defaults i want to turn on

592
00:21:50,080 --> 00:21:53,280
modeling of the capacitance um

593
00:21:53,280 --> 00:21:55,679
so i've done that by typing x to spice c

594
00:21:55,679 --> 00:21:56,880
thresh0

595
00:21:56,880 --> 00:22:00,559
so um when we whenever in engineering

596
00:22:00,559 --> 00:22:02,400
we're always making compromises

597
00:22:02,400 --> 00:22:04,400
here what we want is a perfect uh

598
00:22:04,400 --> 00:22:06,000
inverter but

599
00:22:06,000 --> 00:22:08,799
we've seen that when they switch state

600
00:22:08,799 --> 00:22:09,280
they

601
00:22:09,280 --> 00:22:12,559
waste a tiny bit of energy and

602
00:22:12,559 --> 00:22:13,919
part of that is because we have a tiny

603
00:22:13,919 --> 00:22:16,159
bit of capacitance this gate capacitance

604
00:22:16,159 --> 00:22:17,600
so every time you change it you have to

605
00:22:17,600 --> 00:22:19,039
charge up or discharge

606
00:22:19,039 --> 00:22:22,559
this gate and that means that

607
00:22:22,559 --> 00:22:24,159
things aren't quite so far so they take

608
00:22:24,159 --> 00:22:26,320
a bit of energy and that's the downside

609
00:22:26,320 --> 00:22:28,000
and with electronic engineering often

610
00:22:28,000 --> 00:22:29,600
these things are called parasitic so we

611
00:22:29,600 --> 00:22:30,320
have

612
00:22:30,320 --> 00:22:32,880
um parasitic capacitance and what i've

613
00:22:32,880 --> 00:22:34,000
done here is

614
00:22:34,000 --> 00:22:36,720
turn on parasitic capacitance modeling

615
00:22:36,720 --> 00:22:37,039
for

616
00:22:37,039 --> 00:22:40,720
in magic and then when i finally do

617
00:22:40,720 --> 00:22:44,720
um x2 spice it extracts all that out

618
00:22:44,720 --> 00:22:48,000
into a spice file and then i can do make

619
00:22:48,000 --> 00:22:49,679
sim

620
00:22:49,679 --> 00:22:51,440
and that will run this through a

621
00:22:51,440 --> 00:22:53,440
simulation where i put it

622
00:22:53,440 --> 00:22:57,120
stepped input and output

623
00:22:57,919 --> 00:23:00,960
so the red line is an input and we've

624
00:23:00,960 --> 00:23:01,280
got

625
00:23:01,280 --> 00:23:05,360
1.8 volts at the top here and zero here

626
00:23:05,360 --> 00:23:07,360
and then this is nanoseconds along here

627
00:23:07,360 --> 00:23:08,880
not to two nanoseconds so we've got the

628
00:23:08,880 --> 00:23:10,960
red going high and then it goes low and

629
00:23:10,960 --> 00:23:12,159
we see the blue line

630
00:23:12,159 --> 00:23:15,280
following it and if i uh right click

631
00:23:15,280 --> 00:23:17,840
and drag here i get another one and i

632
00:23:17,840 --> 00:23:19,840
can measure this

633
00:23:19,840 --> 00:23:23,679
and see that i've got one nanosecond so

634
00:23:23,679 --> 00:23:24,960
by drawing the inverter and then

635
00:23:24,960 --> 00:23:27,200
extracting it doing the model i can see

636
00:23:27,200 --> 00:23:29,440
how fast these things can switch

637
00:23:29,440 --> 00:23:30,880
and the other thing i wanted to show you

638
00:23:30,880 --> 00:23:32,559
was um

639
00:23:32,559 --> 00:23:34,320
here's the current usage so we can see

640
00:23:34,320 --> 00:23:36,240
with cmos the current only

641
00:23:36,240 --> 00:23:38,559
is used when we're changing state and

642
00:23:38,559 --> 00:23:40,720
this is something that

643
00:23:40,720 --> 00:23:42,000
i've been doing electronics for a long

644
00:23:42,000 --> 00:23:43,279
time but i never really thought about

645
00:23:43,279 --> 00:23:45,520
this before until i did this so

646
00:23:45,520 --> 00:23:47,120
it was really interesting for me to

647
00:23:47,120 --> 00:23:49,039
realize that when you put your chips in

648
00:23:49,039 --> 00:23:50,400
low power mode often what you're doing

649
00:23:50,400 --> 00:23:51,679
is doing gating

650
00:23:51,679 --> 00:23:53,840
you turn off all the clocks and then

651
00:23:53,840 --> 00:23:55,600
nothing none of the logic can change

652
00:23:55,600 --> 00:23:56,640
state and so

653
00:23:56,640 --> 00:24:00,960
your power doesn't get used

654
00:24:02,840 --> 00:24:04,320
um

655
00:24:04,320 --> 00:24:06,400
so yes what's next we've built an

656
00:24:06,400 --> 00:24:08,960
inverter and modeled it

657
00:24:08,960 --> 00:24:12,080
but in reality we're not going to be

658
00:24:12,080 --> 00:24:13,600
drawing all of this stuff out because it

659
00:24:13,600 --> 00:24:15,919
takes too long and

660
00:24:15,919 --> 00:24:18,000
we might draw stuff out for analog side

661
00:24:18,000 --> 00:24:19,039
of things but i'm

662
00:24:19,039 --> 00:24:21,200
concentrating on the digital side of

663
00:24:21,200 --> 00:24:22,559
things

664
00:24:22,559 --> 00:24:25,600
um so what we get from

665
00:24:25,600 --> 00:24:27,919
sky water and what one of the exciting

666
00:24:27,919 --> 00:24:30,880
parts of this announcement was

667
00:24:30,880 --> 00:24:33,760
the the skywater 130 nanometer process

668
00:24:33,760 --> 00:24:35,360
has been made available on an open

669
00:24:35,360 --> 00:24:36,720
source license

670
00:24:36,720 --> 00:24:38,400
and whereas previously you would need to

671
00:24:38,400 --> 00:24:39,919
sign an nda to be able to use it you

672
00:24:39,919 --> 00:24:41,760
wouldn't be able to publish your results

673
00:24:41,760 --> 00:24:44,559
now we can use this development kit and

674
00:24:44,559 --> 00:24:46,159
it contains all the specifications

675
00:24:46,159 --> 00:24:48,720
of their process that they need that

676
00:24:48,720 --> 00:24:50,240
they use to fabricate chips

677
00:24:50,240 --> 00:24:52,960
it's called a pdk as part of the jargon

678
00:24:52,960 --> 00:24:54,400
so we've already seen that

679
00:24:54,400 --> 00:24:56,480
we've got a drc the design rule check so

680
00:24:56,480 --> 00:24:58,080
we can design stuff in magic and know

681
00:24:58,080 --> 00:25:00,240
that it will work using their process

682
00:25:00,240 --> 00:25:02,400
we have behavioral models so that's what

683
00:25:02,400 --> 00:25:04,799
let me do the simulation

684
00:25:04,799 --> 00:25:07,120
spice models and we have this thing

685
00:25:07,120 --> 00:25:08,480
called standard cells

686
00:25:08,480 --> 00:25:11,120
so i would never normally want to draw

687
00:25:11,120 --> 00:25:12,240
an inverter as i'm

688
00:25:12,240 --> 00:25:16,480
learning i would use a standard cell

689
00:25:16,480 --> 00:25:18,880
so i can just show you now as a another

690
00:25:18,880 --> 00:25:21,360
demo

691
00:25:26,840 --> 00:25:29,840
and

692
00:25:31,600 --> 00:25:34,000
this is using a tool called k layout and

693
00:25:34,000 --> 00:25:35,200
here are all the

694
00:25:35,200 --> 00:25:38,320
standard cells um for the

695
00:25:38,320 --> 00:25:41,840
high density version of the cell library

696
00:25:41,840 --> 00:25:42,799
and

697
00:25:42,799 --> 00:25:45,600
there's about 150 of them and here is

698
00:25:45,600 --> 00:25:48,240
inverter 1.

699
00:25:48,240 --> 00:25:49,440
so it's quite you can see it's quite

700
00:25:49,440 --> 00:25:52,000
similar um to what i drew

701
00:25:52,000 --> 00:25:54,159
with the input and the output and this

702
00:25:54,159 --> 00:25:56,880
top and bottom that all tile together

703
00:25:56,880 --> 00:26:00,559
and i can measure this and we've got 150

704
00:26:00,559 --> 00:26:01,279
nanometers

705
00:26:01,279 --> 00:26:02,880
so this is one of these critical

706
00:26:02,880 --> 00:26:04,720
dimensions um

707
00:26:04,720 --> 00:26:07,840
and we'll get in a bit into why uh

708
00:26:07,840 --> 00:26:09,840
that matters and what where the naming

709
00:26:09,840 --> 00:26:12,000
comes from in a minute

710
00:26:12,000 --> 00:26:14,880
um let's just for let's take a look at

711
00:26:14,880 --> 00:26:18,240
an eight-way inverter

712
00:26:18,240 --> 00:26:20,799
uh show his new top so this is put eight

713
00:26:20,799 --> 00:26:22,559
of them all together in parallel so we

714
00:26:22,559 --> 00:26:24,320
get much stronger drive strength

715
00:26:24,320 --> 00:26:26,400
but you can see it's still the same it

716
00:26:26,400 --> 00:26:28,320
fits they're kind of like legos they can

717
00:26:28,320 --> 00:26:29,679
you can fit them all together in a

718
00:26:29,679 --> 00:26:31,120
structured block

719
00:26:31,120 --> 00:26:32,720
with power at the top and ground at the

720
00:26:32,720 --> 00:26:34,799
bottom always the same

721
00:26:34,799 --> 00:26:38,000
distance across the top

722
00:26:38,000 --> 00:26:41,760
okay so standard cell so a big part of

723
00:26:41,760 --> 00:26:43,120
the standard cell library is we've got

724
00:26:43,120 --> 00:26:43,840
all these cells

725
00:26:43,840 --> 00:26:45,279
but one also one of the things that's

726
00:26:45,279 --> 00:26:47,840
really confusing and uh

727
00:26:47,840 --> 00:26:49,919
made it hard for me to get started was

728
00:26:49,919 --> 00:26:51,279
that just the like the

729
00:26:51,279 --> 00:26:53,120
density and the quantity of information

730
00:26:53,120 --> 00:26:54,559
so if we go to

731
00:26:54,559 --> 00:26:57,279
um this skywater pdk which i've got

732
00:26:57,279 --> 00:26:58,960
extracted here

733
00:26:58,960 --> 00:27:01,919
i've got um nearly three giga files on

734
00:27:01,919 --> 00:27:02,720
disk

735
00:27:02,720 --> 00:27:05,200
and if i find them all and count them

736
00:27:05,200 --> 00:27:07,039
i've got 75 000 files

737
00:27:07,039 --> 00:27:09,840
and a lot of this is not of any use to

738
00:27:09,840 --> 00:27:10,720
me at all

739
00:27:10,720 --> 00:27:14,000
but sometimes i want to find a file um

740
00:27:14,000 --> 00:27:16,159
i need to look something up and finding

741
00:27:16,159 --> 00:27:17,120
stuff in all of the

742
00:27:17,120 --> 00:27:19,440
in all of this is is difficult and that

743
00:27:19,440 --> 00:27:20,559
was one of the things that slowed me

744
00:27:20,559 --> 00:27:22,799
down at the beginning

745
00:27:22,799 --> 00:27:24,320
it turns out you don't need that that

746
00:27:24,320 --> 00:27:26,320
many things um but it's good to know

747
00:27:26,320 --> 00:27:28,320
where they are

748
00:27:28,320 --> 00:27:31,120
so i showed you uh the high density

749
00:27:31,120 --> 00:27:32,799
standard cell library we've got 160

750
00:27:32,799 --> 00:27:33,760
cells there

751
00:27:33,760 --> 00:27:34,960
but we also have these different

752
00:27:34,960 --> 00:27:36,960
versions i haven't extract i haven't got

753
00:27:36,960 --> 00:27:38,240
any of these on my computer

754
00:27:38,240 --> 00:27:40,240
so i'm just focusing on the high density

755
00:27:40,240 --> 00:27:41,760
ones but you've got ones that are

756
00:27:41,760 --> 00:27:43,600
optimized for high voltage or high speed

757
00:27:43,600 --> 00:27:46,240
or low power

758
00:27:47,360 --> 00:27:51,120
let me just check my notes

759
00:27:53,360 --> 00:27:54,880
and have a drink of water from my

760
00:27:54,880 --> 00:27:57,919
beautiful bottle

761
00:27:59,840 --> 00:28:03,360
so this is a not to scale

762
00:28:03,360 --> 00:28:07,120
um look at sky water 130 process that

763
00:28:07,120 --> 00:28:08,399
we've got available

764
00:28:08,399 --> 00:28:10,399
so we've got this the p substrate at the

765
00:28:10,399 --> 00:28:11,440
bottom

766
00:28:11,440 --> 00:28:13,679
if we're drawing a p channel mosfet we

767
00:28:13,679 --> 00:28:16,320
need to insulate it with an n well

768
00:28:16,320 --> 00:28:18,240
then we have the diffusion layer so that

769
00:28:18,240 --> 00:28:19,440
would be um p

770
00:28:19,440 --> 00:28:21,919
for a p-type or n for an n-type now

771
00:28:21,919 --> 00:28:23,360
we've got the polysilicon gate that was

772
00:28:23,360 --> 00:28:24,799
that red stuff i showed you in

773
00:28:24,799 --> 00:28:27,679
magic the local interconnect that joins

774
00:28:27,679 --> 00:28:28,640
things up

775
00:28:28,640 --> 00:28:30,159
here this kind of green layer local

776
00:28:30,159 --> 00:28:31,600
interconnect and then we've got metal

777
00:28:31,600 --> 00:28:32,799
one so

778
00:28:32,799 --> 00:28:35,440
underneath here let me see if i turn on

779
00:28:35,440 --> 00:28:36,159
this pointer

780
00:28:36,159 --> 00:28:38,000
underneath this level here is all the

781
00:28:38,000 --> 00:28:39,360
standard cells

782
00:28:39,360 --> 00:28:42,240
and then above on this is four like a

783
00:28:42,240 --> 00:28:44,720
four layer circuit board um

784
00:28:44,720 --> 00:28:47,200
that we get given kind of as part of the

785
00:28:47,200 --> 00:28:48,480
process design kit

786
00:28:48,480 --> 00:28:50,320
so we can put all the standard cells in

787
00:28:50,320 --> 00:28:52,399
in an array and then connect them all up

788
00:28:52,399 --> 00:28:53,840
in the way that we want with metal

789
00:28:53,840 --> 00:28:54,480
layers

790
00:28:54,480 --> 00:28:57,600
five four three and two

791
00:28:57,600 --> 00:29:00,799
um so with the

792
00:29:00,799 --> 00:29:02,799
with the pdk that we've got from skyward

793
00:29:02,799 --> 00:29:04,480
we've got 33 layers

794
00:29:04,480 --> 00:29:06,720
this lot are used for actually drawing

795
00:29:06,720 --> 00:29:08,240
the transistors

796
00:29:08,240 --> 00:29:10,480
this lot is for connecting things up and

797
00:29:10,480 --> 00:29:12,480
this lot here is for packaging and i'll

798
00:29:12,480 --> 00:29:13,919
explain the packaging bit when we get to

799
00:29:13,919 --> 00:29:16,880
the shuttle at the end

800
00:29:18,000 --> 00:29:21,279
okay so very quickly so this uh these um

801
00:29:21,279 --> 00:29:24,880
slides come from mohamed

802
00:29:24,880 --> 00:29:27,760
who has been doing a lot of work on and

803
00:29:27,760 --> 00:29:29,440
he did a presentation for

804
00:29:29,440 --> 00:29:32,000
the fosse dial-up so that's linked in

805
00:29:32,000 --> 00:29:33,200
the resources at the end but i just want

806
00:29:33,200 --> 00:29:35,120
to thank him for the slides

807
00:29:35,120 --> 00:29:38,320
um we've got a bunch of file formats the

808
00:29:38,320 --> 00:29:40,080
gds is the thing we send to the factory

809
00:29:40,080 --> 00:29:41,279
in the end

810
00:29:41,279 --> 00:29:43,440
um and we've got def and left files and

811
00:29:43,440 --> 00:29:45,279
they're used a lot in the intermediate

812
00:29:45,279 --> 00:29:46,159
processes

813
00:29:46,159 --> 00:29:49,039
so the def files are just kind of

814
00:29:49,039 --> 00:29:50,480
because we end up with millions of

815
00:29:50,480 --> 00:29:51,679
things it can

816
00:29:51,679 --> 00:29:54,000
the computers can really slow down if

817
00:29:54,000 --> 00:29:54,799
you're trying to

818
00:29:54,799 --> 00:29:56,880
have all the information at once so you

819
00:29:56,880 --> 00:29:58,000
abstract it

820
00:29:58,000 --> 00:30:01,200
by having just where the blocks are the

821
00:30:01,200 --> 00:30:02,640
cells are and where the inputs and

822
00:30:02,640 --> 00:30:04,080
outputs are

823
00:30:04,080 --> 00:30:05,440
and then you forget everything else so

824
00:30:05,440 --> 00:30:07,279
you can do the routing just with the def

825
00:30:07,279 --> 00:30:08,640
file

826
00:30:08,640 --> 00:30:11,039
and then the left file allows you to see

827
00:30:11,039 --> 00:30:12,640
what's inside that so you would need to

828
00:30:12,640 --> 00:30:14,640
load both of those things together

829
00:30:14,640 --> 00:30:17,120
to actually make sense of of the

830
00:30:17,120 --> 00:30:18,640
intermediate files

831
00:30:18,640 --> 00:30:20,559
and i'll show you an example of that

832
00:30:20,559 --> 00:30:22,399
when we get onto the

833
00:30:22,399 --> 00:30:26,000
um open lane asic flow

834
00:30:26,159 --> 00:30:30,159
so um i already mentioned drc as part of

835
00:30:30,159 --> 00:30:33,600
um the process development kit processes

836
00:30:33,600 --> 00:30:35,279
on gear

837
00:30:35,279 --> 00:30:37,360
and i just wanted to share my favorite

838
00:30:37,360 --> 00:30:39,440
example of a drc rule which is an

839
00:30:39,440 --> 00:30:42,559
antenna rule so remember we're building

840
00:30:42,559 --> 00:30:44,080
up this structure layer by layer and we

841
00:30:44,080 --> 00:30:46,799
start at the bottom by building our gate

842
00:30:46,799 --> 00:30:49,679
um and then we maybe connect it up to a

843
00:30:49,679 --> 00:30:50,000
metal

844
00:30:50,000 --> 00:30:52,559
one go through a fire metal two but ev

845
00:30:52,559 --> 00:30:54,000
between every process

846
00:30:54,000 --> 00:30:56,080
um we need to kind of clean and flatten

847
00:30:56,080 --> 00:30:58,000
the wafer

848
00:30:58,000 --> 00:31:01,519
and that cleaning process can charge up

849
00:31:01,519 --> 00:31:04,159
anything that's exposed so this metal

850
00:31:04,159 --> 00:31:05,679
too could get charged up

851
00:31:05,679 --> 00:31:07,039
and then if there's enough charge on

852
00:31:07,039 --> 00:31:09,200
there it can destroy the gate

853
00:31:09,200 --> 00:31:11,120
and we break our chip in the process of

854
00:31:11,120 --> 00:31:12,240
making it

855
00:31:12,240 --> 00:31:15,360
so a drc antenna rule is make sure that

856
00:31:15,360 --> 00:31:16,480
these

857
00:31:16,480 --> 00:31:18,720
these metal lines don't get too long or

858
00:31:18,720 --> 00:31:20,559
if they do get too long that you have as

859
00:31:20,559 --> 00:31:22,960
like a special diode here that protects

860
00:31:22,960 --> 00:31:24,799
the gate so if you've ever done

861
00:31:24,799 --> 00:31:27,039
um electronic engineering you often have

862
00:31:27,039 --> 00:31:29,679
these special esd diodes electrostatic

863
00:31:29,679 --> 00:31:31,279
discharge those that protect things if

864
00:31:31,279 --> 00:31:33,039
you touch them with a static shock

865
00:31:33,039 --> 00:31:35,519
and we basically use a very analogous

866
00:31:35,519 --> 00:31:36,960
thing here to protect

867
00:31:36,960 --> 00:31:39,360
the gate against static shocks during

868
00:31:39,360 --> 00:31:42,479
the manufacturing process

869
00:31:43,200 --> 00:31:46,640
so i mentioned um this whole 130 sky

870
00:31:46,640 --> 00:31:48,559
water 130 nanometers this is another

871
00:31:48,559 --> 00:31:50,240
thing that i found really confusing and

872
00:31:50,240 --> 00:31:51,600
frustrating when i was getting involved

873
00:31:51,600 --> 00:31:53,600
i was like this 130 has got to mean

874
00:31:53,600 --> 00:31:55,200
something what does it measure is it

875
00:31:55,200 --> 00:31:56,720
like what part of the chip

876
00:31:56,720 --> 00:31:59,120
does it measure but it doesn't anymore

877
00:31:59,120 --> 00:32:00,880
it used to mean

878
00:32:00,880 --> 00:32:03,679
the gate length and the half pitch um

879
00:32:03,679 --> 00:32:05,600
back in 1992 they were both the same so

880
00:32:05,600 --> 00:32:07,039
they got called

881
00:32:07,039 --> 00:32:10,159
the 500 process node 500

882
00:32:10,159 --> 00:32:13,200
um but as time has gone on these

883
00:32:13,200 --> 00:32:15,200
numbers have drifted and they don't they

884
00:32:15,200 --> 00:32:16,640
don't line up anymore

885
00:32:16,640 --> 00:32:20,000
a recent ieee article uh titled the node

886
00:32:20,000 --> 00:32:21,440
is nonsense was quite interesting they

887
00:32:21,440 --> 00:32:22,799
were talking about

888
00:32:22,799 --> 00:32:24,320
better to choose something that tells

889
00:32:24,320 --> 00:32:26,799
you about the density of the

890
00:32:26,799 --> 00:32:30,000
cells that you can get on or um

891
00:32:30,000 --> 00:32:32,480
more something that is more fundamental

892
00:32:32,480 --> 00:32:33,840
um

893
00:32:33,840 --> 00:32:36,720
but this the structure this this is this

894
00:32:36,720 --> 00:32:39,039
sky water 130 is using it like a very

895
00:32:39,039 --> 00:32:40,480
traditional

896
00:32:40,480 --> 00:32:42,720
mosfet structure and the latest tinier

897
00:32:42,720 --> 00:32:45,519
ones that are quite different to this

898
00:32:45,519 --> 00:32:48,720
so this is a fairly old process

899
00:32:48,720 --> 00:32:50,480
um but it's still extremely useful so

900
00:32:50,480 --> 00:32:54,399
this comes from mohammed kassim's

901
00:32:54,399 --> 00:32:57,760
presentation also on fosse dial-up and

902
00:32:57,760 --> 00:33:00,880
euro practice asic factory

903
00:33:00,880 --> 00:33:03,919
50 of their output is 130

904
00:33:03,919 --> 00:33:06,799
nanometers or bigger um so it's still

905
00:33:06,799 --> 00:33:11,279
very widely used in industry

906
00:33:11,279 --> 00:33:15,519
okay so we got on to um open lane

907
00:33:15,519 --> 00:33:18,000
so you can check out and download open

908
00:33:18,000 --> 00:33:19,200
lane from this

909
00:33:19,200 --> 00:33:22,960
github link and it takes in

910
00:33:22,960 --> 00:33:26,080
design files and then spits out gds2

911
00:33:26,080 --> 00:33:26,880
files with

912
00:33:26,880 --> 00:33:29,600
very very little intermediary messing

913
00:33:29,600 --> 00:33:31,440
around that you need to do

914
00:33:31,440 --> 00:33:33,440
it only takes about 15 or 20 minutes to

915
00:33:33,440 --> 00:33:34,799
install um

916
00:33:34,799 --> 00:33:36,480
but you will need about three gigabytes

917
00:33:36,480 --> 00:33:38,080
of space on your computer to get the

918
00:33:38,080 --> 00:33:41,279
um pdk in there

919
00:33:41,279 --> 00:33:43,360
so i'll just talk through this process

920
00:33:43,360 --> 00:33:44,480
briefly

921
00:33:44,480 --> 00:33:47,120
and then i'll show you a couple of

922
00:33:47,120 --> 00:33:48,159
examples

923
00:33:48,159 --> 00:33:50,559
with um showing the intermediate files

924
00:33:50,559 --> 00:33:51,360
so we can see

925
00:33:51,360 --> 00:33:55,679
how the uh the file the gds files that

926
00:33:55,679 --> 00:33:56,960
we're going to send to the factory get

927
00:33:56,960 --> 00:34:00,240
built up layer by layer

928
00:34:00,559 --> 00:34:04,480
so we typically write

929
00:34:04,480 --> 00:34:06,240
a model of the thing that we're trying

930
00:34:06,240 --> 00:34:07,919
to design with a

931
00:34:07,919 --> 00:34:09,679
high-level language i'll get onto that

932
00:34:09,679 --> 00:34:11,520
in a bit um

933
00:34:11,520 --> 00:34:14,480
and we need to synthesize that text

934
00:34:14,480 --> 00:34:15,040
language

935
00:34:15,040 --> 00:34:17,839
into a list of like ands and ors and

936
00:34:17,839 --> 00:34:20,079
flip-flops these fundamental digital

937
00:34:20,079 --> 00:34:23,679
and building blocks we can do

938
00:34:23,679 --> 00:34:26,719
sta static timing analysis so that

939
00:34:26,719 --> 00:34:28,320
allows us to work out how fast the chip

940
00:34:28,320 --> 00:34:29,359
can work

941
00:34:29,359 --> 00:34:32,239
and then design for test dft allows us

942
00:34:32,239 --> 00:34:33,119
to put

943
00:34:33,119 --> 00:34:35,520
special structures in the chip that make

944
00:34:35,520 --> 00:34:36,800
it easier to debug

945
00:34:36,800 --> 00:34:40,079
if things go wrong later then inside

946
00:34:40,079 --> 00:34:40,960
we've got

947
00:34:40,960 --> 00:34:42,719
open road which is a whole other tool

948
00:34:42,719 --> 00:34:45,119
kit that is like the kind of the core

949
00:34:45,119 --> 00:34:48,239
of this flow and it does floor planning

950
00:34:48,239 --> 00:34:50,560
which is working out how big the chip

951
00:34:50,560 --> 00:34:52,000
needs to be and where the pins go around

952
00:34:52,000 --> 00:34:53,199
the outside

953
00:34:53,199 --> 00:34:56,639
where best to put the uh the cells

954
00:34:56,639 --> 00:35:00,320
um clock tree synthesis um so the clock

955
00:35:00,320 --> 00:35:01,119
is

956
00:35:01,119 --> 00:35:02,560
usually our designs have a clock in them

957
00:35:02,560 --> 00:35:04,880
for digital design and the clock is

958
00:35:04,880 --> 00:35:06,640
one of the most important signals and it

959
00:35:06,640 --> 00:35:09,280
needs special consideration

960
00:35:09,280 --> 00:35:12,000
optimizing and routing the antenna

961
00:35:12,000 --> 00:35:14,000
diodes insertion so that takes care of

962
00:35:14,000 --> 00:35:16,000
the drc rule that explained about the

963
00:35:16,000 --> 00:35:17,839
antenna diodes to protect the

964
00:35:17,839 --> 00:35:21,200
gates of the mosfets we can do a logical

965
00:35:21,200 --> 00:35:22,800
equivalence check so that checks that

966
00:35:22,800 --> 00:35:24,079
the output

967
00:35:24,079 --> 00:35:26,480
from the what we've got from open road

968
00:35:26,480 --> 00:35:27,440
matches

969
00:35:27,440 --> 00:35:30,720
our input um

970
00:35:30,720 --> 00:35:32,720
coming on through here we can extract

971
00:35:32,720 --> 00:35:35,359
the parasitic resistance and capacitance

972
00:35:35,359 --> 00:35:36,960
like i showed you in the magic demo

973
00:35:36,960 --> 00:35:38,160
and that can give us a better

974
00:35:38,160 --> 00:35:40,240
understanding of

975
00:35:40,240 --> 00:35:43,760
timing we can do another timing analysis

976
00:35:43,760 --> 00:35:46,640
and then we can do gds2 files so we can

977
00:35:46,640 --> 00:35:48,240
generate the gvs2 file

978
00:35:48,240 --> 00:35:50,400
and then that's what we can send off to

979
00:35:50,400 --> 00:35:52,880
the factory

980
00:35:53,760 --> 00:35:56,000
so i'm going to show you this with an

981
00:35:56,000 --> 00:35:57,040
example

982
00:35:57,040 --> 00:35:58,880
continuing with the inverter example

983
00:35:58,880 --> 00:36:00,240
because i want to take this inverter and

984
00:36:00,240 --> 00:36:02,320
show you all the way through the process

985
00:36:02,320 --> 00:36:05,119
so like i said we're not going to draw

986
00:36:05,119 --> 00:36:06,320
an inverter we're going to use a

987
00:36:06,320 --> 00:36:07,599
standard cell but we're not going to

988
00:36:07,599 --> 00:36:09,599
arrange those standard cells by hand

989
00:36:09,599 --> 00:36:12,320
we're going to use a high level language

990
00:36:12,320 --> 00:36:13,359
and in this case we're going to use

991
00:36:13,359 --> 00:36:14,320
verilog

992
00:36:14,320 --> 00:36:16,240
which is a hardware description language

993
00:36:16,240 --> 00:36:18,240
and we can describe the hardware we want

994
00:36:18,240 --> 00:36:21,200
by typing it out in text so i can say

995
00:36:21,200 --> 00:36:23,440
i want a little block with an input and

996
00:36:23,440 --> 00:36:24,320
an output

997
00:36:24,320 --> 00:36:27,119
and the output has got to be the not of

998
00:36:27,119 --> 00:36:28,000
the input

999
00:36:28,000 --> 00:36:29,920
and that's all this is saying and then i

1000
00:36:29,920 --> 00:36:31,119
give this

1001
00:36:31,119 --> 00:36:33,920
into the big the beginning of here and

1002
00:36:33,920 --> 00:36:35,680
it goes all the way through and then out

1003
00:36:35,680 --> 00:36:37,680
we're going to get the gvs2 files

1004
00:36:37,680 --> 00:36:40,000
so let's see how we do that with open

1005
00:36:40,000 --> 00:36:42,240
lane

1006
00:36:48,880 --> 00:36:52,240
um all right so to start open lane

1007
00:36:52,240 --> 00:36:55,440
i have an alias called start openling

1008
00:36:55,440 --> 00:36:57,040
which moves me to the right place and

1009
00:36:57,040 --> 00:36:58,560
starts the docker so the way this is

1010
00:36:58,560 --> 00:36:59,280
distributed

1011
00:36:59,280 --> 00:37:02,400
is as a docker um

1012
00:37:02,400 --> 00:37:04,000
and if if that if you don't understand

1013
00:37:04,000 --> 00:37:05,839
that it just it doesn't really mean

1014
00:37:05,839 --> 00:37:06,800
anything at all

1015
00:37:06,800 --> 00:37:08,720
just means that we're kind of running

1016
00:37:08,720 --> 00:37:10,720
another we're running the tools inside a

1017
00:37:10,720 --> 00:37:12,320
virtual environment

1018
00:37:12,320 --> 00:37:15,680
which probably doesn't also doesn't help

1019
00:37:15,680 --> 00:37:18,880
um so

1020
00:37:18,880 --> 00:37:21,040
um and then on the other window i'm

1021
00:37:21,040 --> 00:37:22,640
going to be

1022
00:37:22,640 --> 00:37:26,720
in open name designs

1023
00:37:26,720 --> 00:37:30,320
so i'm going to say flow so the main

1024
00:37:30,320 --> 00:37:31,920
tool here is flow

1025
00:37:31,920 --> 00:37:34,480
and i'm going to say i want an inverter

1026
00:37:34,480 --> 00:37:35,440
design

1027
00:37:35,440 --> 00:37:40,720
and i want to init design config

1028
00:37:41,599 --> 00:37:45,040
all right i have no

1029
00:37:45,040 --> 00:37:51,119
not double slash single slash

1030
00:37:51,119 --> 00:37:55,119
all right and then here

1031
00:37:55,119 --> 00:37:58,880
i've got um this setup file i've got

1032
00:37:58,880 --> 00:38:00,160
nothing in source

1033
00:38:00,160 --> 00:38:02,320
and i've got a default config so this is

1034
00:38:02,320 --> 00:38:04,400
all generated for us

1035
00:38:04,400 --> 00:38:06,230
now i'm going to copy um

1036
00:38:06,230 --> 00:38:09,349
[Music]

1037
00:38:10,960 --> 00:38:14,240
to save time but show you

1038
00:38:14,240 --> 00:38:16,480
there's no magic here here's the same

1039
00:38:16,480 --> 00:38:19,440
file i showed you on the screen

1040
00:38:19,440 --> 00:38:22,720
make that a bit bigger um

1041
00:38:22,720 --> 00:38:27,200
and then over here i say flow design

1042
00:38:27,200 --> 00:38:29,920
inverter and that's going to run and

1043
00:38:29,920 --> 00:38:31,599
while that's running

1044
00:38:31,599 --> 00:38:34,800
um i'm going to go back up here and

1045
00:38:34,800 --> 00:38:37,200
show you

1046
00:38:38,480 --> 00:38:40,320
this so this is the output of yosis so

1047
00:38:40,320 --> 00:38:42,079
it's read that hdl

1048
00:38:42,079 --> 00:38:43,440
and it's worked out that it needs an

1049
00:38:43,440 --> 00:38:45,359
inverter and got an input and

1050
00:38:45,359 --> 00:38:48,720
output and then i can also look at

1051
00:38:48,720 --> 00:38:51,119
after the mapping to the standard cell

1052
00:38:51,119 --> 00:38:53,440
libraries

1053
00:38:53,440 --> 00:38:57,119
now it's chosen this sky 130

1054
00:38:57,119 --> 00:38:59,280
high density inverter 8 and that was the

1055
00:38:59,280 --> 00:39:00,720
one that i showed you with the eight

1056
00:39:00,720 --> 00:39:01,839
inverters in a row

1057
00:39:01,839 --> 00:39:03,920
within it so now we've got the actual

1058
00:39:03,920 --> 00:39:06,640
standard cell that we need

1059
00:39:06,640 --> 00:39:09,200
let's see how openflow's gone okay it's

1060
00:39:09,200 --> 00:39:10,079
failed so

1061
00:39:10,079 --> 00:39:12,720
um i knew this is gonna fail um and this

1062
00:39:12,720 --> 00:39:13,359
like this is

1063
00:39:13,359 --> 00:39:14,960
this is very much part of the process

1064
00:39:14,960 --> 00:39:16,480
here so you're gonna get a failure on

1065
00:39:16,480 --> 00:39:17,280
something

1066
00:39:17,280 --> 00:39:18,320
and then you're gonna have to try to

1067
00:39:18,320 --> 00:39:20,480
work out so what i do is

1068
00:39:20,480 --> 00:39:23,920
um ask my questions in the slack channel

1069
00:39:23,920 --> 00:39:26,000
um and then helpful people help me

1070
00:39:26,000 --> 00:39:27,280
understand the errors so what this is

1071
00:39:27,280 --> 00:39:28,320
saying is that

1072
00:39:28,320 --> 00:39:31,200
basically the design is too small the

1073
00:39:31,200 --> 00:39:33,440
the default config works very well for

1074
00:39:33,440 --> 00:39:35,119
normal designs but actually this design

1075
00:39:35,119 --> 00:39:38,000
is so small it needs a couple of changes

1076
00:39:38,000 --> 00:39:41,200
so um back in the inverter

1077
00:39:41,200 --> 00:39:44,560
let's edit the config file

1078
00:39:46,240 --> 00:39:49,520
and we need to change the

1079
00:39:49,520 --> 00:39:52,079
density

1080
00:39:53,680 --> 00:39:58,720
and then i can run the tool again

1081
00:39:59,359 --> 00:40:00,320
and this time hopefully we're going to

1082
00:40:00,320 --> 00:40:02,960
get a bit further

1083
00:40:04,240 --> 00:40:05,599
all right let's take a look at the log

1084
00:40:05,599 --> 00:40:08,079
so this is the output from meiosis

1085
00:40:08,079 --> 00:40:09,280
so it's telling us okay there's the

1086
00:40:09,280 --> 00:40:11,680
standard cell it needs

1087
00:40:11,680 --> 00:40:16,079
um oh and we've got another fail

1088
00:40:16,079 --> 00:40:19,839
and this time um it's saying

1089
00:40:19,839 --> 00:40:23,119
uh clock tree synthesis

1090
00:40:23,119 --> 00:40:25,920
cts so our design doesn't have a clock

1091
00:40:25,920 --> 00:40:26,240
so

1092
00:40:26,240 --> 00:40:27,839
actually we need to turn off that so

1093
00:40:27,839 --> 00:40:29,200
again this is something that you

1094
00:40:29,200 --> 00:40:31,660
wouldn't need to do normally

1095
00:40:31,660 --> 00:40:34,240
[Music]

1096
00:40:34,240 --> 00:40:37,040
there we go so this inverter design is

1097
00:40:37,040 --> 00:40:38,160
now part of the

1098
00:40:38,160 --> 00:40:40,720
um the demos inside open lane so you've

1099
00:40:40,720 --> 00:40:42,319
got access to this

1100
00:40:42,319 --> 00:40:43,440
and here we're just saying there's no

1101
00:40:43,440 --> 00:40:45,040
clock and don't bother about the clock

1102
00:40:45,040 --> 00:40:46,000
port

1103
00:40:46,000 --> 00:40:52,640
okay so third time third time's a charm

1104
00:40:52,640 --> 00:40:56,078
just as well this is a super quick one

1105
00:41:02,160 --> 00:41:06,240
and we're getting a lot further here

1106
00:41:06,240 --> 00:41:10,560
and we've got a result um so

1107
00:41:10,560 --> 00:41:14,480
back here in where the the source is

1108
00:41:14,480 --> 00:41:17,599
um and the config we've also got uh runs

1109
00:41:17,599 --> 00:41:19,040
we've got the three runs that we just

1110
00:41:19,040 --> 00:41:20,079
did

1111
00:41:20,079 --> 00:41:23,280
and this is the latest one

1112
00:41:25,280 --> 00:41:28,800
and there's a lot of intermediate files

1113
00:41:28,800 --> 00:41:30,400
and this is another thing that took me a

1114
00:41:30,400 --> 00:41:31,440
long time to get

1115
00:41:31,440 --> 00:41:34,240
my head around what does all this stuff

1116
00:41:34,240 --> 00:41:34,880
mean

1117
00:41:34,880 --> 00:41:36,240
what stuff to pay attention to what

1118
00:41:36,240 --> 00:41:38,319
stuff to ignore um

1119
00:41:38,319 --> 00:41:40,400
so for now all i'm going to show you is

1120
00:41:40,400 --> 00:41:42,000
just the final result and then for a

1121
00:41:42,000 --> 00:41:43,440
slightly more complicated result we'll

1122
00:41:43,440 --> 00:41:44,319
take a look at

1123
00:41:44,319 --> 00:41:48,880
a few steps along the way um so

1124
00:41:48,880 --> 00:41:52,800
the way i'm going to do this is

1125
00:41:53,040 --> 00:41:55,359
presentation tools and i'm going to say

1126
00:41:55,359 --> 00:41:56,560
um

1127
00:41:56,560 --> 00:42:02,319
make magic final design

1128
00:42:02,319 --> 00:42:05,759
run date because

1129
00:42:08,640 --> 00:42:10,960
so that little bit of stuff in the

1130
00:42:10,960 --> 00:42:12,319
background there's

1131
00:42:12,319 --> 00:42:14,720
uh what i'm using to make it fast for me

1132
00:42:14,720 --> 00:42:16,560
to show the intermediate files in this

1133
00:42:16,560 --> 00:42:18,160
presentation

1134
00:42:18,160 --> 00:42:20,640
and the make file is pushed on my github

1135
00:42:20,640 --> 00:42:21,839
so you're free to check out what's

1136
00:42:21,839 --> 00:42:22,960
actually happening there it's not too

1137
00:42:22,960 --> 00:42:25,280
hard it's just a save time

1138
00:42:25,280 --> 00:42:29,359
so got our input here and our output

1139
00:42:29,359 --> 00:42:32,160
zoom in a bit

1140
00:42:32,960 --> 00:42:36,640
and most of this is um filler

1141
00:42:36,640 --> 00:42:40,079
we've got our power distribution here um

1142
00:42:40,079 --> 00:42:42,000
on these vert big vertical and

1143
00:42:42,000 --> 00:42:43,280
horizontals

1144
00:42:43,280 --> 00:42:44,960
and then we've got thinner horizontals

1145
00:42:44,960 --> 00:42:46,319
for the power and ground

1146
00:42:46,319 --> 00:42:50,720
you can see here this is where the um

1147
00:42:50,720 --> 00:42:52,960
standard cell fits in and it's a def

1148
00:42:52,960 --> 00:42:54,079
file at the moment

1149
00:42:54,079 --> 00:42:56,640
so we're not seeing any um interior

1150
00:42:56,640 --> 00:42:57,200
stuff

1151
00:42:57,200 --> 00:43:00,720
to save um cycles on the processor

1152
00:43:00,720 --> 00:43:03,440
but i can select that press x and then

1153
00:43:03,440 --> 00:43:03,920
that

1154
00:43:03,920 --> 00:43:06,079
shows me so this is the same thing that

1155
00:43:06,079 --> 00:43:07,760
we saw earlier

1156
00:43:07,760 --> 00:43:12,319
um zoom out

1157
00:43:12,319 --> 00:43:15,359
um and then we these things all this

1158
00:43:15,359 --> 00:43:17,760
uh d-cap these are decoupling capacitors

1159
00:43:17,760 --> 00:43:19,599
so it's all basically full of decoupling

1160
00:43:19,599 --> 00:43:20,560
capacitors

1161
00:43:20,560 --> 00:43:24,560
and this whole thing if i type b

1162
00:43:24,560 --> 00:43:27,040
and go here this is telling me it's 20

1163
00:43:27,040 --> 00:43:28,880
microns by 20 microns so

1164
00:43:28,880 --> 00:43:32,160
absolutely tiny we've got 10 million um

1165
00:43:32,160 --> 00:43:35,119
square microns to play with in the

1166
00:43:35,119 --> 00:43:37,839
google shuttle

1167
00:43:38,160 --> 00:43:39,860
so um

1168
00:43:39,860 --> 00:43:42,000
[Music]

1169
00:43:42,000 --> 00:43:45,119
let's now move on um to

1170
00:43:45,119 --> 00:43:48,560
describing circuits with a um

1171
00:43:48,560 --> 00:43:50,640
hardware description language so i

1172
00:43:50,640 --> 00:43:52,000
started off with that with the inverter

1173
00:43:52,000 --> 00:43:53,119
design now i want to show something a

1174
00:43:53,119 --> 00:43:54,079
bit more complicated

1175
00:43:54,079 --> 00:43:56,319
and then run that through the open lane

1176
00:43:56,319 --> 00:43:58,480
flow and show the intermediate files a

1177
00:43:58,480 --> 00:44:00,480
few more steps

1178
00:44:00,480 --> 00:44:03,520
so we've we're trying to model hardware

1179
00:44:03,520 --> 00:44:03,839
and

1180
00:44:03,839 --> 00:44:05,520
it's going to split up into two things

1181
00:44:05,520 --> 00:44:08,000
we've got combinatorial circuits where

1182
00:44:08,000 --> 00:44:09,760
you've got lots of and and or gates

1183
00:44:09,760 --> 00:44:11,520
where as soon as you change the input

1184
00:44:11,520 --> 00:44:13,119
the output changes

1185
00:44:13,119 --> 00:44:16,240
and we've also got sequential circuits

1186
00:44:16,240 --> 00:44:18,560
where the output doesn't change until

1187
00:44:18,560 --> 00:44:20,240
you get a clock and those are kind of

1188
00:44:20,240 --> 00:44:20,960
built up with

1189
00:44:20,960 --> 00:44:24,400
flip flops um

1190
00:44:24,400 --> 00:44:27,200
and we've got various different op

1191
00:44:27,200 --> 00:44:28,880
options to use here verilog is probably

1192
00:44:28,880 --> 00:44:30,960
the most common especially in the states

1193
00:44:30,960 --> 00:44:32,640
and that we we've also got these kind of

1194
00:44:32,640 --> 00:44:35,200
meta languages that are often

1195
00:44:35,200 --> 00:44:37,280
they're often python libraries that

1196
00:44:37,280 --> 00:44:39,280
generate verilog for you

1197
00:44:39,280 --> 00:44:42,720
um and um yeah there's

1198
00:44:42,720 --> 00:44:44,319
a lot of a lot of choice here i'm

1199
00:44:44,319 --> 00:44:45,839
sticking with verilog because it's the

1200
00:44:45,839 --> 00:44:47,040
kind of the most well known

1201
00:44:47,040 --> 00:44:50,000
and the most well supported so let's

1202
00:44:50,000 --> 00:44:51,839
make a slightly more complicated digital

1203
00:44:51,839 --> 00:44:52,800
design

1204
00:44:52,800 --> 00:44:55,200
let's make a seven segment second

1205
00:44:55,200 --> 00:44:55,920
counter

1206
00:44:55,920 --> 00:44:58,240
so we're going to have a 16 megahertz

1207
00:44:58,240 --> 00:44:59,440
clock come in

1208
00:44:59,440 --> 00:45:01,599
and then we're going to build an asic

1209
00:45:01,599 --> 00:45:02,640
and when we

1210
00:45:02,640 --> 00:45:05,440
put a seven segment uh display on the

1211
00:45:05,440 --> 00:45:06,640
back end of it

1212
00:45:06,640 --> 00:45:07,920
it's going to count up one two three

1213
00:45:07,920 --> 00:45:09,760
four five six seven eight nine zero to

1214
00:45:09,760 --> 00:45:11,520
match the seconds

1215
00:45:11,520 --> 00:45:13,920
so inside the asic we need something

1216
00:45:13,920 --> 00:45:16,079
that can count up to 16 million

1217
00:45:16,079 --> 00:45:18,319
so every time this clock triggers 16

1218
00:45:18,319 --> 00:45:19,520
million times a second

1219
00:45:19,520 --> 00:45:21,359
we count it once that counter gets up to

1220
00:45:21,359 --> 00:45:22,960
16 million we can

1221
00:45:22,960 --> 00:45:25,280
send a trigger to a digit counter and

1222
00:45:25,280 --> 00:45:27,200
this will count from naught to nine

1223
00:45:27,200 --> 00:45:29,599
and then we'll make something that takes

1224
00:45:29,599 --> 00:45:31,839
that naught to nine and then decodes it

1225
00:45:31,839 --> 00:45:32,640
into the

1226
00:45:32,640 --> 00:45:34,160
segments that we need to have on our

1227
00:45:34,160 --> 00:45:37,200
seven segment display

1228
00:45:37,520 --> 00:45:42,079
um and then we'll walk that through the

1229
00:45:42,079 --> 00:45:47,839
whole open lane process

1230
00:45:51,680 --> 00:45:53,760
so same as before we've got an input

1231
00:45:53,760 --> 00:45:55,599
clock

1232
00:45:55,599 --> 00:45:59,200
input reset and now we've got

1233
00:45:59,200 --> 00:46:01,280
seven wires coming output to drive the

1234
00:46:01,280 --> 00:46:02,240
leds

1235
00:46:02,240 --> 00:46:04,319
six down to zero so six including zero

1236
00:46:04,319 --> 00:46:06,000
seven

1237
00:46:06,000 --> 00:46:09,520
um to count up to 16 million we need

1238
00:46:09,520 --> 00:46:12,960
at 24 bits so we need 24 flip flops

1239
00:46:12,960 --> 00:46:15,440
and we can ask for 24 flip-flops to be

1240
00:46:15,440 --> 00:46:16,880
wired in a row by saying

1241
00:46:16,880 --> 00:46:19,680
we want a reg so register 23 down to

1242
00:46:19,680 --> 00:46:21,440
zero second counter

1243
00:46:21,440 --> 00:46:23,040
and the same for a digit but we only

1244
00:46:23,040 --> 00:46:24,480
need to count up to nine so we'd make

1245
00:46:24,480 --> 00:46:26,160
that four bits and we can count up to

1246
00:46:26,160 --> 00:46:27,520
16.

1247
00:46:27,520 --> 00:46:29,040
this is to do a simulation so i'm going

1248
00:46:29,040 --> 00:46:31,920
to ignore that now

1249
00:46:32,800 --> 00:46:35,440
and then here we've got the sequential

1250
00:46:35,440 --> 00:46:37,520
parts the counter

1251
00:46:37,520 --> 00:46:39,440
so this is saying that it's only going

1252
00:46:39,440 --> 00:46:41,040
to trigger on the clock

1253
00:46:41,040 --> 00:46:42,640
we've got a bit of reset stuff here so

1254
00:46:42,640 --> 00:46:44,000
if we get the reset set everything back

1255
00:46:44,000 --> 00:46:45,839
to zero

1256
00:46:45,839 --> 00:46:49,119
otherwise if we hit the maximum counter

1257
00:46:49,119 --> 00:46:49,680
on the

1258
00:46:49,680 --> 00:46:52,319
um this 16 million cycles per second

1259
00:46:52,319 --> 00:46:53,280
counter

1260
00:46:53,280 --> 00:46:55,359
set that back to zero and incre

1261
00:46:55,359 --> 00:46:56,880
increment the digits by one

1262
00:46:56,880 --> 00:46:58,960
and then do the same with digits so if

1263
00:46:58,960 --> 00:47:00,240
they get up to nine set them back to

1264
00:47:00,240 --> 00:47:01,680
zero

1265
00:47:01,680 --> 00:47:03,040
otherwise we're going to just be adding

1266
00:47:03,040 --> 00:47:05,440
one to the um the second counter all the

1267
00:47:05,440 --> 00:47:08,079
time till it gets up to 16 million

1268
00:47:08,079 --> 00:47:10,240
so it's very tempting to read this as c

1269
00:47:10,240 --> 00:47:11,599
or something sequential but it is

1270
00:47:11,599 --> 00:47:12,800
absolutely not

1271
00:47:12,800 --> 00:47:16,000
um it's one of the difficulties with um

1272
00:47:16,000 --> 00:47:17,839
a hardware description language is that

1273
00:47:17,839 --> 00:47:19,440
you're describing hardware

1274
00:47:19,440 --> 00:47:22,880
so when i write something like this i'm

1275
00:47:22,880 --> 00:47:24,720
just i've basically told it that it

1276
00:47:24,720 --> 00:47:26,559
needs to build a full adder

1277
00:47:26,559 --> 00:47:28,800
out of digital logic so that we can add

1278
00:47:28,800 --> 00:47:30,800
one to a register every time

1279
00:47:30,800 --> 00:47:32,960
and when i say something like this i'm

1280
00:47:32,960 --> 00:47:34,720
saying build a

1281
00:47:34,720 --> 00:47:38,079
set of combinatorial logic that

1282
00:47:38,079 --> 00:47:39,920
connects to each of the flip flops in

1283
00:47:39,920 --> 00:47:41,599
second counter that can

1284
00:47:41,599 --> 00:47:43,920
do like a complicated add or xor

1285
00:47:43,920 --> 00:47:44,720
whatever

1286
00:47:44,720 --> 00:47:46,480
until it gets to a single signal that

1287
00:47:46,480 --> 00:47:48,240
goes high if it gets to 16 million and

1288
00:47:48,240 --> 00:47:48,880
is low

1289
00:47:48,880 --> 00:47:52,480
at all other times um and when i say

1290
00:47:52,480 --> 00:47:54,800
register what i'm asking for is a whole

1291
00:47:54,800 --> 00:47:56,640
load of flip-flops all joined together

1292
00:47:56,640 --> 00:47:58,319
in a way that lets me use them as a

1293
00:47:58,319 --> 00:48:01,119
block of memory

1294
00:48:01,119 --> 00:48:03,440
then down here i've got um the bit that

1295
00:48:03,440 --> 00:48:06,240
does the seven segment decoding

1296
00:48:06,240 --> 00:48:09,119
so this is combinatorial logic one way

1297
00:48:09,119 --> 00:48:10,400
of doing that

1298
00:48:10,400 --> 00:48:13,760
um so whenever the counter input counter

1299
00:48:13,760 --> 00:48:15,280
changes so this is this number

1300
00:48:15,280 --> 00:48:18,160
from zero to nine then it's going to be

1301
00:48:18,160 --> 00:48:19,280
setting the segments

1302
00:48:19,280 --> 00:48:21,040
to be what we needed so let's take three

1303
00:48:21,040 --> 00:48:22,880
as an example

1304
00:48:22,880 --> 00:48:26,000
um if the input is three then we want

1305
00:48:26,000 --> 00:48:28,960
segment one two seven three and four to

1306
00:48:28,960 --> 00:48:29,760
be on

1307
00:48:29,760 --> 00:48:33,599
so here was seven three so um

1308
00:48:33,599 --> 00:48:37,760
one two three four

1309
00:48:37,760 --> 00:48:41,040
um and seven so that's how it would show

1310
00:48:41,040 --> 00:48:44,079
the three on the led uh seven segment

1311
00:48:44,079 --> 00:48:46,480
this way

1312
00:48:47,119 --> 00:48:50,319
so um

1313
00:48:50,319 --> 00:48:53,760
let's now um run this

1314
00:48:53,760 --> 00:48:58,079
through open lane

1315
00:48:58,559 --> 00:49:01,599
so i'm gonna do um flow

1316
00:49:01,599 --> 00:49:03,390
design seven

1317
00:49:03,390 --> 00:49:04,720
[Music]

1318
00:49:04,720 --> 00:49:08,480
uh segment seconds

1319
00:49:08,559 --> 00:49:10,400
okay this takes a little bit longer so

1320
00:49:10,400 --> 00:49:12,319
now while that's running

1321
00:49:12,319 --> 00:49:16,559
um i'll go to um open lane design

1322
00:49:16,559 --> 00:49:20,319
seven segment seconds so in s in source

1323
00:49:20,319 --> 00:49:24,480
i've got that same file um and config

1324
00:49:24,480 --> 00:49:26,559
this is the default conflict so i didn't

1325
00:49:26,559 --> 00:49:28,400
need to change anything for this design

1326
00:49:28,400 --> 00:49:30,319
so because it's big enough

1327
00:49:30,319 --> 00:49:32,400
um all the defaults work fine i didn't

1328
00:49:32,400 --> 00:49:34,640
need to mess around with that

1329
00:49:34,640 --> 00:49:35,839
[Music]

1330
00:49:35,839 --> 00:49:37,839
if things don't work and you need to

1331
00:49:37,839 --> 00:49:40,319
explore the design space

1332
00:49:40,319 --> 00:49:43,599
then one of the cool things with

1333
00:49:43,599 --> 00:49:45,200
open lane is it has these kind of

1334
00:49:45,200 --> 00:49:47,119
feedback loops

1335
00:49:47,119 --> 00:49:50,480
so you can say check try with these

1336
00:49:50,480 --> 00:49:52,000
different densities or these different

1337
00:49:52,000 --> 00:49:53,520
clock speeds or these different

1338
00:49:53,520 --> 00:49:55,119
aims for area whatever you're trying to

1339
00:49:55,119 --> 00:49:57,359
optimize and it will go round and round

1340
00:49:57,359 --> 00:49:58,079
in a circle

1341
00:49:58,079 --> 00:49:59,359
trying all these things out and then

1342
00:49:59,359 --> 00:50:01,520
give you a report at the end of uh how

1343
00:50:01,520 --> 00:50:03,280
well it's done

1344
00:50:03,280 --> 00:50:06,960
so we've taken our um our design our

1345
00:50:06,960 --> 00:50:09,839
um this seven segment seconds and it's

1346
00:50:09,839 --> 00:50:10,960
being synthesized

1347
00:50:10,960 --> 00:50:12,559
with the oasis as we've seen before so

1348
00:50:12,559 --> 00:50:14,000
we this um

1349
00:50:14,000 --> 00:50:16,480
input verilog has gotten turned now into

1350
00:50:16,480 --> 00:50:17,760
this netlist

1351
00:50:17,760 --> 00:50:21,920
so let's take a look at that

1352
00:50:21,920 --> 00:50:25,040
um postsynth

1353
00:50:25,040 --> 00:50:29,920
dot dot this is a much bigger file now

1354
00:50:30,240 --> 00:50:33,440
um and uh let's see

1355
00:50:33,440 --> 00:50:37,359
so this part here is

1356
00:50:37,359 --> 00:50:40,720
the comparison so we've got the counter

1357
00:50:40,720 --> 00:50:43,920
and that we've got um 24

1358
00:50:43,920 --> 00:50:46,720
um elements of that bits and you can see

1359
00:50:46,720 --> 00:50:47,839
how they're all being

1360
00:50:47,839 --> 00:50:50,640
nanded together or ored or knotted all

1361
00:50:50,640 --> 00:50:51,680
the way to the end

1362
00:50:51,680 --> 00:50:53,839
until we get to this one last signal

1363
00:50:53,839 --> 00:50:55,280
that that's going to be the

1364
00:50:55,280 --> 00:50:57,680
rollover signal when it matches with 16

1365
00:50:57,680 --> 00:51:00,079
million and it increments

1366
00:51:00,079 --> 00:51:05,300
this is the full adder that can add one

1367
00:51:05,300 --> 00:51:06,720
[Music]

1368
00:51:06,720 --> 00:51:09,359
here's all the d-type flip-flops that

1369
00:51:09,359 --> 00:51:11,359
are used to store that number so we've

1370
00:51:11,359 --> 00:51:11,760
got

1371
00:51:11,760 --> 00:51:14,319
a bunch up here and a bunch down there i

1372
00:51:14,319 --> 00:51:14,960
only know

1373
00:51:14,960 --> 00:51:16,559
i only know this as quickly as i do

1374
00:51:16,559 --> 00:51:18,160
because i've spent some time looking at

1375
00:51:18,160 --> 00:51:19,119
this

1376
00:51:19,119 --> 00:51:22,400
uh diagram before i showed you

1377
00:51:22,400 --> 00:51:24,319
here's the four d type flip flops we

1378
00:51:24,319 --> 00:51:26,000
need to store the numbers from naught to

1379
00:51:26,000 --> 00:51:26,559
nine

1380
00:51:26,559 --> 00:51:28,400
and then this is the d code logic so

1381
00:51:28,400 --> 00:51:30,000
this is all this combinatorial

1382
00:51:30,000 --> 00:51:32,400
logic so as soon as this number changes

1383
00:51:32,400 --> 00:51:33,920
it flows all the way all the way through

1384
00:51:33,920 --> 00:51:34,400
here

1385
00:51:34,400 --> 00:51:36,559
and then the output segments changed

1386
00:51:36,559 --> 00:51:38,800
here

1387
00:51:39,040 --> 00:51:42,079
so let's see how that's gone right it's

1388
00:51:42,079 --> 00:51:44,000
finished

1389
00:51:44,000 --> 00:51:47,280
um so now i'm gonna go

1390
00:51:47,280 --> 00:51:50,079
back to okay so got to do the same thing

1391
00:51:50,079 --> 00:51:51,440
with

1392
00:51:51,440 --> 00:51:54,960
runs so the latest one

1393
00:51:54,960 --> 00:51:57,839
is this one

1394
00:52:00,559 --> 00:52:05,839
and i'm going to show first um

1395
00:52:07,440 --> 00:52:10,000
the floor plan so this is where the

1396
00:52:10,000 --> 00:52:11,440
tools trying to work out where things

1397
00:52:11,440 --> 00:52:12,559
are going to go

1398
00:52:12,559 --> 00:52:15,280
and putting the pins in so there's very

1399
00:52:15,280 --> 00:52:17,760
little there's very low detail

1400
00:52:17,760 --> 00:52:21,920
so make magic floor plan

1401
00:52:21,920 --> 00:52:26,079
design because seven segment seconds

1402
00:52:26,079 --> 00:52:29,200
run date equals

1403
00:52:31,440 --> 00:52:33,920
so down here we've got all the standard

1404
00:52:33,920 --> 00:52:34,720
cells that are

1405
00:52:34,720 --> 00:52:37,359
being used in the design loads but

1406
00:52:37,359 --> 00:52:40,480
they're all on top of each other

1407
00:52:41,119 --> 00:52:43,440
and then here we've got um let's just

1408
00:52:43,440 --> 00:52:44,880
zoom in here

1409
00:52:44,880 --> 00:52:48,160
we've got the um the pins being laid out

1410
00:52:48,160 --> 00:52:49,839
and then the rest is kind of the basic

1411
00:52:49,839 --> 00:52:54,160
structure of the the size of the chip

1412
00:52:57,599 --> 00:53:00,240
then we've got um like a course and a

1413
00:53:00,240 --> 00:53:00,720
fine

1414
00:53:00,720 --> 00:53:02,400
placement so all those standard cells

1415
00:53:02,400 --> 00:53:03,839
are now going to be put in the right

1416
00:53:03,839 --> 00:53:05,839
places

1417
00:53:05,839 --> 00:53:09,040
so i'm going to say magic

1418
00:53:09,040 --> 00:53:11,680
replace this is one of these

1419
00:53:11,680 --> 00:53:13,119
intermediate files

1420
00:53:13,119 --> 00:53:14,960
so now things are kind of roughly in the

1421
00:53:14,960 --> 00:53:16,240
right place but they're not

1422
00:53:16,240 --> 00:53:19,119
lined up on the grid so we can't root

1423
00:53:19,119 --> 00:53:20,800
them yet you can see they're all kind of

1424
00:53:20,800 --> 00:53:22,559
overlapping each other in a not a great

1425
00:53:22,559 --> 00:53:24,720
way

1426
00:53:26,720 --> 00:53:28,000
and then we'll look at the detailed

1427
00:53:28,000 --> 00:53:30,400
version so that is

1428
00:53:30,400 --> 00:53:34,480
um placement

1429
00:53:35,119 --> 00:53:37,280
and now everything is lined up so they

1430
00:53:37,280 --> 00:53:38,960
still look overlapping but remember that

1431
00:53:38,960 --> 00:53:40,880
the standard cells do overlap on the top

1432
00:53:40,880 --> 00:53:42,720
and the bottom because they're sharing

1433
00:53:42,720 --> 00:53:45,920
the power lines but that is all very

1434
00:53:45,920 --> 00:53:46,400
ordered

1435
00:53:46,400 --> 00:53:49,520
now and so the final step is

1436
00:53:49,520 --> 00:53:53,040
wiring it all together so that is

1437
00:53:53,040 --> 00:53:57,839
make magic final

1438
00:53:57,920 --> 00:54:00,160
um so we've got the pins got everything

1439
00:54:00,160 --> 00:54:02,800
laid out we've got quite a lot of filler

1440
00:54:02,800 --> 00:54:05,839
um but we've also got all the uh the

1441
00:54:05,839 --> 00:54:07,520
juicy standard cells that are making

1442
00:54:07,520 --> 00:54:08,720
this

1443
00:54:08,720 --> 00:54:11,920
work and as before i can um

1444
00:54:11,920 --> 00:54:15,280
let's find something like this one um

1445
00:54:15,280 --> 00:54:18,480
this is a three inputs and gates and i

1446
00:54:18,480 --> 00:54:18,960
can

1447
00:54:18,960 --> 00:54:21,839
do this and see by because i've loaded

1448
00:54:21,839 --> 00:54:23,440
the left file as well i can bring up

1449
00:54:23,440 --> 00:54:26,800
this extra detail and see inside

1450
00:54:26,800 --> 00:54:29,839
so how big is it um

1451
00:54:29,839 --> 00:54:33,680
i can type b here and this is 100

1452
00:54:33,680 --> 00:54:35,839
microns by 100 microns

1453
00:54:35,839 --> 00:54:38,400
and so we so that's 10 000 um square

1454
00:54:38,400 --> 00:54:39,280
microns

1455
00:54:39,280 --> 00:54:41,440
and we've got 10 million square microns

1456
00:54:41,440 --> 00:54:42,480
so we can put

1457
00:54:42,480 --> 00:54:44,880
about a thousand of these designs into

1458
00:54:44,880 --> 00:54:46,240
the uh google

1459
00:54:46,240 --> 00:54:48,240
shuttle so that gives you a kind of a

1460
00:54:48,240 --> 00:54:49,760
sense of scale about what you could

1461
00:54:49,760 --> 00:54:50,640
achieve

1462
00:54:50,640 --> 00:54:53,839
experimenting with this kind of stuff

1463
00:54:54,880 --> 00:55:00,240
okay um yeah we've just seen this one

1464
00:55:00,240 --> 00:55:02,000
and then the sign off is done with

1465
00:55:02,000 --> 00:55:04,880
layout versus so

1466
00:55:04,880 --> 00:55:08,480
um yeah so if

1467
00:55:08,480 --> 00:55:12,000
if um open lane finishes uh without an

1468
00:55:12,000 --> 00:55:14,240
error it's drc clean and it's ready to

1469
00:55:14,240 --> 00:55:15,359
send to the foundry

1470
00:55:15,359 --> 00:55:16,799
although one thing we've not looked at

1471
00:55:16,799 --> 00:55:18,720
yet is the pad ring and that's the bit

1472
00:55:18,720 --> 00:55:19,520
that's

1473
00:55:19,520 --> 00:55:21,760
the design fits into that allows that

1474
00:55:21,760 --> 00:55:23,599
has the bond pads that break out to the

1475
00:55:23,599 --> 00:55:24,240
chip

1476
00:55:24,240 --> 00:55:25,760
so that's what we'll look at with the

1477
00:55:25,760 --> 00:55:28,480
google shuttle

1478
00:55:28,559 --> 00:55:30,480
uh which is the next but one thing i

1479
00:55:30,480 --> 00:55:32,000
just want to have a quick time check

1480
00:55:32,000 --> 00:55:33,920
because i know people are going to go to

1481
00:55:33,920 --> 00:55:34,559
um

1482
00:55:34,559 --> 00:55:37,599
they're going to other workshops so what

1483
00:55:37,599 --> 00:55:40,400
is the time now

1484
00:55:40,960 --> 00:55:44,880
nearly eleven so i think i've got time

1485
00:55:44,880 --> 00:55:45,440
to

1486
00:55:45,440 --> 00:55:50,400
talk about this as well so um

1487
00:55:50,400 --> 00:55:52,559
we are making physical hardware here

1488
00:55:52,559 --> 00:55:54,559
we're not doing stuff with a

1489
00:55:54,559 --> 00:55:56,240
like a vera board or a breadboard we

1490
00:55:56,240 --> 00:55:57,920
can't change stuff after it's been made

1491
00:55:57,920 --> 00:55:59,839
and we have this super long waiting

1492
00:55:59,839 --> 00:56:01,440
period maybe two or three months before

1493
00:56:01,440 --> 00:56:02,640
we got our design back

1494
00:56:02,640 --> 00:56:04,480
so we want to be super super sure that

1495
00:56:04,480 --> 00:56:06,880
everything's going to work well

1496
00:56:06,880 --> 00:56:10,240
and we can do that with combination of

1497
00:56:10,240 --> 00:56:13,280
simulating the design so that usually

1498
00:56:13,280 --> 00:56:14,960
that's showing that some functions work

1499
00:56:14,960 --> 00:56:15,599
so

1500
00:56:15,599 --> 00:56:19,440
in my um seven segment seconds

1501
00:56:19,440 --> 00:56:22,000
i can do make sim this uses an open

1502
00:56:22,000 --> 00:56:23,599
source simulation framework

1503
00:56:23,599 --> 00:56:27,680
called cocotb and then i can

1504
00:56:27,680 --> 00:56:29,760
load up all the digital waveform here so

1505
00:56:29,760 --> 00:56:31,119
i can see the

1506
00:56:31,119 --> 00:56:34,000
clock changing the seconds counting up

1507
00:56:34,000 --> 00:56:35,839
the digits changing and then the

1508
00:56:35,839 --> 00:56:38,560
the decoder working

1509
00:56:38,560 --> 00:56:40,960
[Music]

1510
00:56:40,960 --> 00:56:42,880
you can use a coverage tool and that

1511
00:56:42,880 --> 00:56:44,559
tells you how much of your design you're

1512
00:56:44,559 --> 00:56:45,680
simulating

1513
00:56:45,680 --> 00:56:47,119
and that can tell you whether you're

1514
00:56:47,119 --> 00:56:48,799
missing stuff and you can do

1515
00:56:48,799 --> 00:56:50,240
verification so that's

1516
00:56:50,240 --> 00:56:52,559
like one of the options for verification

1517
00:56:52,559 --> 00:56:53,280
we've now

1518
00:56:53,280 --> 00:56:55,280
also got open source formal verification

1519
00:56:55,280 --> 00:56:56,400
tools which if you've

1520
00:56:56,400 --> 00:56:58,960
seen any of my other videos about that

1521
00:56:58,960 --> 00:57:00,720
you'll you'll know what that's about

1522
00:57:00,720 --> 00:57:02,720
but that's a way of proving that your

1523
00:57:02,720 --> 00:57:03,839
design is

1524
00:57:03,839 --> 00:57:07,200
good and it's going to work and that's a

1525
00:57:07,200 --> 00:57:09,200
way of saving time and cost with this

1526
00:57:09,200 --> 00:57:11,599
kind of stuff

1527
00:57:11,599 --> 00:57:15,040
so um final chapter

1528
00:57:15,040 --> 00:57:17,520
um thanks for bearing with me on this uh

1529
00:57:17,520 --> 00:57:18,240
super long

1530
00:57:18,240 --> 00:57:21,119
demo prez is the google sky water

1531
00:57:21,119 --> 00:57:21,760
shuttle

1532
00:57:21,760 --> 00:57:22,640
so i don't know why it's called a

1533
00:57:22,640 --> 00:57:25,200
shuttle um but i thought i'd put a fun

1534
00:57:25,200 --> 00:57:27,359
space picture in here but essentially

1535
00:57:27,359 --> 00:57:28,559
what it means is

1536
00:57:28,559 --> 00:57:32,079
um every few months one of these big

1537
00:57:32,079 --> 00:57:33,200
factories

1538
00:57:33,200 --> 00:57:36,160
um takes like a group order and that's

1539
00:57:36,160 --> 00:57:38,160
called a multi-project wafer so

1540
00:57:38,160 --> 00:57:40,000
instead of like just one factory like

1541
00:57:40,000 --> 00:57:42,240
texas one um

1542
00:57:42,240 --> 00:57:43,680
design company like say texas

1543
00:57:43,680 --> 00:57:45,839
instruments buys like a million wafers

1544
00:57:45,839 --> 00:57:46,720
whatever

1545
00:57:46,720 --> 00:57:49,760
they um p a whole group of people team

1546
00:57:49,760 --> 00:57:50,799
together

1547
00:57:50,799 --> 00:57:53,040
uh and buy a little slice on a

1548
00:57:53,040 --> 00:57:54,400
multi-project wafer

1549
00:57:54,400 --> 00:57:56,640
so you send your designs in they're all

1550
00:57:56,640 --> 00:57:58,079
aggregated onto one

1551
00:57:58,079 --> 00:58:01,280
and then that wafer is made and then

1552
00:58:01,280 --> 00:58:03,040
it's sliced up and it gets sent out to

1553
00:58:03,040 --> 00:58:04,400
everybody

1554
00:58:04,400 --> 00:58:09,040
so when i was first looking into this um

1555
00:58:09,040 --> 00:58:12,400
a couple months before the announcement

1556
00:58:12,400 --> 00:58:13,680
it was looking like it was going to be

1557
00:58:13,680 --> 00:58:15,760
kind of 10 15 000

1558
00:58:15,760 --> 00:58:17,920
dollars to be part of a multi-project

1559
00:58:17,920 --> 00:58:18,799
wafer

1560
00:58:18,799 --> 00:58:20,720
and one of the exciting things that has

1561
00:58:20,720 --> 00:58:22,720
happened recently as google have

1562
00:58:22,720 --> 00:58:25,760
made a free shuttle so by

1563
00:58:25,760 --> 00:58:28,960
um putting your designs in in the

1564
00:58:28,960 --> 00:58:31,200
in an open source format and submitting

1565
00:58:31,200 --> 00:58:33,040
them to efablis

1566
00:58:33,040 --> 00:58:35,280
you can have a chance of having your

1567
00:58:35,280 --> 00:58:37,440
silicon made

1568
00:58:37,440 --> 00:58:40,559
so and this is from tim ansel slides

1569
00:58:40,559 --> 00:58:42,960
again on the fosse dial up

1570
00:58:42,960 --> 00:58:45,680
kind of explaining the philosophy your

1571
00:58:45,680 --> 00:58:47,839
design has to be open source

1572
00:58:47,839 --> 00:58:49,599
there's about 40 slots and then each of

1573
00:58:49,599 --> 00:58:51,200
those slots is going to get about 100 or

1574
00:58:51,200 --> 00:58:52,079
150

1575
00:58:52,079 --> 00:58:55,119
chips back the first run is soon

1576
00:58:55,119 --> 00:58:57,200
so end of november that's the current

1577
00:58:57,200 --> 00:58:59,040
date although we're still waiting on a

1578
00:58:59,040 --> 00:59:01,040
few critical things like the

1579
00:59:01,040 --> 00:59:04,400
the pad ring and the io pads that's

1580
00:59:04,400 --> 00:59:06,960
being done right at the moment right now

1581
00:59:06,960 --> 00:59:09,119
um and that's gonna happen every quarter

1582
00:59:09,119 --> 00:59:10,079
if there's enough

1583
00:59:10,079 --> 00:59:13,280
demand so um i hope one of the

1584
00:59:13,280 --> 00:59:16,079
outcomes of this uh demo is that people

1585
00:59:16,079 --> 00:59:16,640
uh

1586
00:59:16,640 --> 00:59:18,960
get involved and make sure that there is

1587
00:59:18,960 --> 00:59:19,920
a demand

1588
00:59:19,920 --> 00:59:21,440
and that will make sure that there's

1589
00:59:21,440 --> 00:59:22,720
more of these shuttles running in the

1590
00:59:22,720 --> 00:59:24,960
future

1591
00:59:24,960 --> 00:59:28,240
um so let's have a quick look at the

1592
00:59:28,240 --> 00:59:31,359
harness so your design is going to go in

1593
00:59:31,359 --> 00:59:33,440
this mega project area so this started

1594
00:59:33,440 --> 00:59:34,559
out as

1595
00:59:34,559 --> 00:59:37,280
10 square millimeters so about three by

1596
00:59:37,280 --> 00:59:38,640
three millimeters

1597
00:59:38,640 --> 00:59:40,880
but it's shrunk down a little bit by now

1598
00:59:40,880 --> 00:59:41,680
but um

1599
00:59:41,680 --> 00:59:43,440
when i was doing the calculations and

1600
00:59:43,440 --> 00:59:44,799
sorting out this presentation it was a

1601
00:59:44,799 --> 00:59:46,000
bit bigger

1602
00:59:46,000 --> 00:59:47,359
and then there's like a whole bunch of

1603
00:59:47,359 --> 00:59:49,280
support circuitry and the idea here is

1604
00:59:49,280 --> 00:59:53,280
um a way of kind of supporting

1605
00:59:53,280 --> 00:59:55,359
giving common support for your designs

1606
00:59:55,359 --> 00:59:56,559
so um

1607
00:59:56,559 --> 00:59:58,400
we've got a risk five processor on there

1608
00:59:58,400 --> 01:00:00,480
some ram some io

1609
01:00:00,480 --> 01:00:03,359
ability to read programs off the flash

1610
01:00:03,359 --> 01:00:05,280
we've got a logic analyzer built in a

1611
01:00:05,280 --> 01:00:06,240
wishbone bus

1612
01:00:06,240 --> 01:00:08,319
a whole bunch of support stuff so if you

1613
01:00:08,319 --> 01:00:10,720
add like this design for testing

1614
01:00:10,720 --> 01:00:13,359
we can we can like read in or set things

1615
01:00:13,359 --> 01:00:14,400
using the

1616
01:00:14,400 --> 01:00:17,200
risk five processor and then this is

1617
01:00:17,200 --> 01:00:18,720
where your design is going to go and

1618
01:00:18,720 --> 01:00:20,079
then all of that is going to be

1619
01:00:20,079 --> 01:00:22,400
packaged on a wafer level chip scale

1620
01:00:22,400 --> 01:00:23,599
package

1621
01:00:23,599 --> 01:00:25,920
so when i was looking into this i was

1622
01:00:25,920 --> 01:00:26,880
thinking it'd be cool to get one of

1623
01:00:26,880 --> 01:00:28,000
these big kind of ceramic

1624
01:00:28,000 --> 01:00:29,680
dual online packages but they are really

1625
01:00:29,680 --> 01:00:31,520
expensive you pay like

1626
01:00:31,520 --> 01:00:34,000
10 000 euros for the mpw and then 5000

1627
01:00:34,000 --> 01:00:35,920
euros for the packaging whereas

1628
01:00:35,920 --> 01:00:38,079
this is all done in the fab so it's just

1629
01:00:38,079 --> 01:00:39,760
it's kind of much cheaper

1630
01:00:39,760 --> 01:00:42,319
and those final five layers in the

1631
01:00:42,319 --> 01:00:43,280
skywater

1632
01:00:43,280 --> 01:00:47,119
pdk layers are these layers here

1633
01:00:47,119 --> 01:00:49,599
so the back of the package is actually

1634
01:00:49,599 --> 01:00:51,280
the the back of the silicon

1635
01:00:51,280 --> 01:00:54,880
wafer so it's really thin really small

1636
01:00:54,880 --> 01:00:56,880
and then we've got it's a bit like a bga

1637
01:00:56,880 --> 01:00:58,880
package ball grid array so we've got the

1638
01:00:58,880 --> 01:01:01,839
bumps on there so it's um a trade-off

1639
01:01:01,839 --> 01:01:02,160
it's

1640
01:01:02,160 --> 01:01:04,400
um cheaper and it gives better

1641
01:01:04,400 --> 01:01:05,760
performance there's lower

1642
01:01:05,760 --> 01:01:07,920
and inductance because there's no bond

1643
01:01:07,920 --> 01:01:09,440
wires so it's good for high speed

1644
01:01:09,440 --> 01:01:10,640
designs

1645
01:01:10,640 --> 01:01:12,559
but it's a little bit harder to solder

1646
01:01:12,559 --> 01:01:14,480
although i find bga

1647
01:01:14,480 --> 01:01:17,440
easier than qfn personally so and you're

1648
01:01:17,440 --> 01:01:19,280
going to get about 150 of these so if

1649
01:01:19,280 --> 01:01:21,359
you mess up a few it doesn't matter

1650
01:01:21,359 --> 01:01:26,400
um so i think this is the ultimate slide

1651
01:01:26,400 --> 01:01:29,440
this is just like showing you some

1652
01:01:29,440 --> 01:01:32,319
design so the pico rv 32 is kind of like

1653
01:01:32,319 --> 01:01:33,440
a common

1654
01:01:33,440 --> 01:01:35,520
risk five processor made by my friend

1655
01:01:35,520 --> 01:01:37,200
claire and

1656
01:01:37,200 --> 01:01:40,480
um you can fit 10 of those on that mega

1657
01:01:40,480 --> 01:01:41,440
project area

1658
01:01:41,440 --> 01:01:45,040
you can fit um 10 usb endpoints

1659
01:01:45,040 --> 01:01:48,480
you can fit 10 aes encryption cores

1660
01:01:48,480 --> 01:01:51,359
um you can fit eight ibex risk five

1661
01:01:51,359 --> 01:01:52,400
cores

1662
01:01:52,400 --> 01:01:53,920
you can fit a thousand of those seven

1663
01:01:53,920 --> 01:01:55,839
segment decoder uh little

1664
01:01:55,839 --> 01:01:59,039
blocks i made this little um

1665
01:01:59,039 --> 01:02:00,640
vga clock that is going to be one of my

1666
01:02:00,640 --> 01:02:02,319
first designs i think

1667
01:02:02,319 --> 01:02:03,920
i can get about five or six hundred of

1668
01:02:03,920 --> 01:02:07,839
them in that mega project area

1669
01:02:07,920 --> 01:02:11,119
um so here's all the resources um go to

1670
01:02:11,119 --> 01:02:12,720
the slides here's the slides then you

1671
01:02:12,720 --> 01:02:13,920
can click on all the links

1672
01:02:13,920 --> 01:02:17,119
um the fossee foundation dial-ups are

1673
01:02:17,119 --> 01:02:18,240
really useful

1674
01:02:18,240 --> 01:02:19,359
if you're going to take this seriously

1675
01:02:19,359 --> 01:02:21,359
get involved in the slack

1676
01:02:21,359 --> 01:02:24,559
um canals udemy course the vlsi one is a

1677
01:02:24,559 --> 01:02:25,280
good one for

1678
01:02:25,280 --> 01:02:26,720
like getting started and this

1679
01:02:26,720 --> 01:02:29,280
introduction to the lsi books is good

1680
01:02:29,280 --> 01:02:32,880
um i'd really recommend simulating and

1681
01:02:32,880 --> 01:02:34,720
making your design work on an fpga as

1682
01:02:34,720 --> 01:02:36,799
well before trying to go to an asic that

1683
01:02:36,799 --> 01:02:37,920
will really help you with the digital

1684
01:02:37,920 --> 01:02:38,640
design

1685
01:02:38,640 --> 01:02:41,280
i'd like to recommend tiny fpga and

1686
01:02:41,280 --> 01:02:42,240
icebreaker

1687
01:02:42,240 --> 01:02:45,839
um and the uh what what the fpga course

1688
01:02:45,839 --> 01:02:48,160
as we're getting started and then my

1689
01:02:48,160 --> 01:02:50,160
repos i've used for this presentation

1690
01:02:50,160 --> 01:02:52,079
are all here

1691
01:02:52,079 --> 01:02:54,160
so big list of people to say thanks to

1692
01:02:54,160 --> 01:02:55,119
um

1693
01:02:55,119 --> 01:02:56,960
really helpful getting me up to started

1694
01:02:56,960 --> 01:02:59,440
helping me proof the presentation

1695
01:02:59,440 --> 01:03:01,039
telling me what stuff is too crazy what

1696
01:03:01,039 --> 01:03:02,799
stuff is not crazy enough

1697
01:03:02,799 --> 01:03:05,119
um and then the final thing is if you're

1698
01:03:05,119 --> 01:03:06,480
interested in doing this

1699
01:03:06,480 --> 01:03:09,680
i'm gonna be running a paid course later

1700
01:03:09,680 --> 01:03:11,920
so if you're interested in um paying to

1701
01:03:11,920 --> 01:03:14,000
do like a 10 hour zoom course

1702
01:03:14,000 --> 01:03:17,599
where at the end we multi-project wafer

1703
01:03:17,599 --> 01:03:19,359
on the multi-project wafer put all our

1704
01:03:19,359 --> 01:03:20,000
designs

1705
01:03:20,000 --> 01:03:22,240
in this area and then send that off as

1706
01:03:22,240 --> 01:03:23,119
part of the

1707
01:03:23,119 --> 01:03:26,400
um application for the for this asic

1708
01:03:26,400 --> 01:03:27,760
show me your interest here tell me what

1709
01:03:27,760 --> 01:03:28,880
you're interested in learning give me

1710
01:03:28,880 --> 01:03:30,160
your email address and i'll keep you up

1711
01:03:30,160 --> 01:03:31,119
to date with that

1712
01:03:31,119 --> 01:03:34,559
so um that's the end of the presentation

1713
01:03:34,559 --> 01:03:37,839
um thanks very much for your patience

1714
01:03:37,839 --> 01:03:41,039
um and um

1715
01:03:41,039 --> 01:03:43,680
i'm going to bring on muhammad's qasim

1716
01:03:43,680 --> 01:03:45,359
now to help me answer questions

1717
01:03:45,359 --> 01:03:46,960
and give me a break so i can get a

1718
01:03:46,960 --> 01:03:49,280
little drink of water

1719
01:03:49,280 --> 01:03:53,359
hello this is green sharing

1720
01:03:54,240 --> 01:03:58,559
hey mamat hello

1721
01:03:58,559 --> 01:04:01,520
so you're on there as well

1722
01:04:07,119 --> 01:04:10,079
so i'm on uh twitter not twitter here

1723
01:04:10,079 --> 01:04:12,240
twitch so if people got questions

1724
01:04:12,240 --> 01:04:15,039
um feel free to just bang them in the

1725
01:04:15,039 --> 01:04:15,920
twitch

1726
01:04:15,920 --> 01:04:19,359
um chat and if there's anything i can't

1727
01:04:19,359 --> 01:04:21,280
answer then

1728
01:04:21,280 --> 01:04:27,839
mohammed will surely be able to

1729
01:04:32,319 --> 01:04:34,960
oh good got a shout out from horizontal

1730
01:04:34,960 --> 01:04:40,480
thanks mine

1731
01:04:40,480 --> 01:04:43,119
and thanks el viejo adi for putting the

1732
01:04:43,119 --> 01:04:45,680
link in there

1733
01:04:47,039 --> 01:04:49,920
verilog vhdl yeah that reminds me of the

1734
01:04:49,920 --> 01:04:51,039
slide from the

1735
01:04:51,039 --> 01:04:54,400
last hackaday super con with the uh

1736
01:04:54,400 --> 01:04:57,599
the badge and sprite tm said the vhdl

1737
01:04:57,599 --> 01:04:58,240
stands for

1738
01:04:58,240 --> 01:05:01,839
very hard difficult language

1739
01:05:01,839 --> 01:05:05,200
so um uh

1740
01:05:05,200 --> 01:05:09,039
vhdl is getting supported but is not

1741
01:05:09,039 --> 01:05:12,000
very well supported yet i would say so

1742
01:05:12,000 --> 01:05:13,760
um

1743
01:05:13,760 --> 01:05:17,359
verilog is still the one to be going for

1744
01:05:20,960 --> 01:05:23,599
i like high level yeah gotta juggle what

1745
01:05:23,599 --> 01:05:24,640
was the hardest thing while you were

1746
01:05:24,640 --> 01:05:25,520
learning

1747
01:05:25,520 --> 01:05:27,759
um

1748
01:05:33,760 --> 01:05:37,119
i think yeah just getting like

1749
01:05:37,119 --> 01:05:40,160
yeah it's so deep there's so much uh

1750
01:05:40,160 --> 01:05:41,760
technical jargon that was one of the big

1751
01:05:41,760 --> 01:05:44,079
reasons why i wanted to do this was to

1752
01:05:44,079 --> 01:05:47,680
try to unpack um everything and then i

1753
01:05:47,680 --> 01:05:48,960
heard a really good um

1754
01:05:48,960 --> 01:05:51,760
podcast uh called ologies and it had

1755
01:05:51,760 --> 01:05:53,440
bill nye the science guy on it and he

1756
01:05:53,440 --> 01:05:55,280
said about how

1757
01:05:55,280 --> 01:05:58,240
you should never introduce terminology

1758
01:05:58,240 --> 01:05:59,760
and then explain it you should explain

1759
01:05:59,760 --> 01:06:00,240
that

1760
01:06:00,240 --> 01:06:01,839
explain the thing and then say here's

1761
01:06:01,839 --> 01:06:03,119
what it is so that's like what i tried

1762
01:06:03,119 --> 01:06:04,319
to do with saying

1763
01:06:04,319 --> 01:06:07,359
um as a way of making nmos

1764
01:06:07,359 --> 01:06:09,520
more efficient you put two mosfets

1765
01:06:09,520 --> 01:06:10,480
together and then they become

1766
01:06:10,480 --> 01:06:12,240
complementary and that's what cmos

1767
01:06:12,240 --> 01:06:13,119
stands for

1768
01:06:13,119 --> 01:06:14,880
hopefully that makes things easier to

1769
01:06:14,880 --> 01:06:18,799
understand um so yeah i think probably

1770
01:06:18,799 --> 01:06:20,240
getting over the jargon the

1771
01:06:20,240 --> 01:06:22,319
like for ages i thought i've got to find

1772
01:06:22,319 --> 01:06:24,240
out what this 130 nanometer stands for

1773
01:06:24,240 --> 01:06:27,200
that was really annoying

1774
01:06:28,720 --> 01:06:31,359
have you got an opinion on that mohammed

1775
01:06:31,359 --> 01:06:32,400
yeah it's that

1776
01:06:32,400 --> 01:06:34,880
it's the uh the transistor minimum

1777
01:06:34,880 --> 01:06:36,799
transistor feature pin length

1778
01:06:36,799 --> 01:06:39,680
so the the logic transistor in this

1779
01:06:39,680 --> 01:06:40,799
process

1780
01:06:40,799 --> 01:06:44,839
is 0.13 micron

1781
01:06:44,839 --> 01:06:48,880
minimum yeah always that is it like um

1782
01:06:48,880 --> 01:06:51,920
at the moment we've got um intel and uh

1783
01:06:51,920 --> 01:06:53,520
taiwan yeah so this is evolved

1784
01:06:53,520 --> 01:06:56,799
so we it was started in two

1785
01:06:56,799 --> 01:07:01,200
two two microns

1786
01:07:01,200 --> 01:07:03,280
one micron so this is there's an

1787
01:07:03,280 --> 01:07:05,119
evolution across the

1788
01:07:05,119 --> 01:07:09,520
time from very large transistors

1789
01:07:09,520 --> 01:07:11,920
all the way to now as you can hear three

1790
01:07:11,920 --> 01:07:15,680
five and three nanometers the technology

1791
01:07:15,680 --> 01:07:18,880
as you get down beyond that

1792
01:07:18,880 --> 01:07:22,319
maybe 20 you start getting the optics

1793
01:07:22,319 --> 01:07:25,520
to start to be crazy so there is a lot

1794
01:07:25,520 --> 01:07:26,480
of

1795
01:07:26,480 --> 01:07:29,920
investment to actually make it work um

1796
01:07:29,920 --> 01:07:32,240
at this length and that means you can

1797
01:07:32,240 --> 01:07:33,280
get the transistor

1798
01:07:33,280 --> 01:07:37,599
as short as 130.

1799
01:07:37,599 --> 01:07:39,119
mohammed there's a question here that i

1800
01:07:39,119 --> 01:07:40,480
think you'd be the best person to answer

1801
01:07:40,480 --> 01:07:42,240
which was um

1802
01:07:42,240 --> 01:07:44,640
where are we at with the ios how are the

1803
01:07:44,640 --> 01:07:47,440
ios handled

1804
01:07:48,160 --> 01:07:51,839
so the ios are actually right now

1805
01:07:51,839 --> 01:07:54,640
are finished they have not been released

1806
01:07:54,640 --> 01:07:55,039
yet

1807
01:07:55,039 --> 01:07:57,920
that they have been finished at least

1808
01:07:57,920 --> 01:07:59,280
the set

1809
01:07:59,280 --> 01:08:02,559
that is um associated with the with the

1810
01:08:02,559 --> 01:08:05,760
uh harness it's

1811
01:08:05,760 --> 01:08:07,359
it's it's out there it's gonna be out

1812
01:08:07,359 --> 01:08:09,440
there soon meaning soon and hopefully

1813
01:08:09,440 --> 01:08:13,280
tomorrow because i know commensal and

1814
01:08:13,280 --> 01:08:14,559
the team has been working on it

1815
01:08:14,559 --> 01:08:17,920
today and so

1816
01:08:17,920 --> 01:08:20,158
one of the things that are i want to

1817
01:08:20,158 --> 01:08:20,960
mention

1818
01:08:20,960 --> 01:08:24,080
if you're going on the shuttle and you

1819
01:08:24,080 --> 01:08:27,279
have a design

1820
01:08:27,279 --> 01:08:30,479
you will not need necessarily to to play

1821
01:08:30,479 --> 01:08:31,759
with the arrows if you're building your

1822
01:08:31,759 --> 01:08:35,040
own design that is completely

1823
01:08:35,040 --> 01:08:38,238
from scratch you will of course so

1824
01:08:38,238 --> 01:08:41,759
just a few cases for the shuttle

1825
01:08:41,759 --> 01:08:44,080
we're asking people to focus on the in

1826
01:08:44,080 --> 01:08:45,120
the box

1827
01:08:45,120 --> 01:08:48,158
and we're actually probably releasing

1828
01:08:48,158 --> 01:08:52,000
in a couple of days um a new version of

1829
01:08:52,000 --> 01:08:53,279
the design that is

1830
01:08:53,279 --> 01:08:55,600
has a little bit more area for the user

1831
01:08:55,600 --> 01:08:56,799
space

1832
01:08:56,799 --> 01:09:01,439
uh at the expense of other area is

1833
01:09:02,000 --> 01:09:04,158
functions that we didn't want to have on

1834
01:09:04,158 --> 01:09:05,600
the rest of the chip

1835
01:09:05,600 --> 01:09:07,819
so uh stay tuned for that

1836
01:09:07,819 --> 01:09:11,009
[Music]

1837
01:09:11,279 --> 01:09:14,399
okay i've got a few more questions um

1838
01:09:14,399 --> 01:09:16,080
what analog blocks are available in the

1839
01:09:16,080 --> 01:09:18,399
pdk plls level shifters

1840
01:09:18,399 --> 01:09:21,839
etc um

1841
01:09:21,839 --> 01:09:23,120
yeah i've not actually looked at any of

1842
01:09:23,120 --> 01:09:25,279
that so mohammed yeah so the

1843
01:09:25,279 --> 01:09:29,359
pdk that is released it is the pdk

1844
01:09:29,359 --> 01:09:33,040
lowest level it is the transistors and

1845
01:09:33,040 --> 01:09:35,439
components and the standard digital

1846
01:09:35,439 --> 01:09:36,880
standard cell that is

1847
01:09:36,880 --> 01:09:40,080
the libraries um four by four

1848
01:09:40,080 --> 01:09:43,120
or five variants i don't remember and

1849
01:09:43,120 --> 01:09:46,399
the ios and this this is it

1850
01:09:46,399 --> 01:09:50,000
so there is a vacuum of

1851
01:09:50,000 --> 01:09:53,600
analog and i'm counting on a community

1852
01:09:53,600 --> 01:09:58,080
and that we actually identify a list

1853
01:09:58,080 --> 01:10:01,040
and go through a target one by one and

1854
01:10:01,040 --> 01:10:02,880
make him open source

1855
01:10:02,880 --> 01:10:05,679
so power management related clocking

1856
01:10:05,679 --> 01:10:07,120
like plls

1857
01:10:07,120 --> 01:10:11,760
and these in my opinion i saw

1858
01:10:11,760 --> 01:10:13,199
you know i always see somebody talking

1859
01:10:13,199 --> 01:10:15,120
about the high-speed interfaces and

1860
01:10:15,120 --> 01:10:18,960
30s and i say we don't even have

1861
01:10:18,960 --> 01:10:22,560
an amplifier yet open source so

1862
01:10:22,560 --> 01:10:26,239
i encourage the community to go do that

1863
01:10:26,239 --> 01:10:28,840
and help building that library very

1864
01:10:28,840 --> 01:10:30,239
quickly

1865
01:10:30,239 --> 01:10:31,679
well i'm not saying just stop at the

1866
01:10:31,679 --> 01:10:34,960
amplifier just the general

1867
01:10:34,960 --> 01:10:38,320
next level components beyond the

1868
01:10:42,840 --> 01:10:45,840
transistors

1869
01:10:52,560 --> 01:10:54,640
so one question for me was what design

1870
01:10:54,640 --> 01:10:56,080
am i working for for the

1871
01:10:56,080 --> 01:10:58,719
um my first application so i showed this

1872
01:10:58,719 --> 01:11:00,960
like um

1873
01:11:00,960 --> 01:11:04,159
little uh uh vga clock which is i just

1874
01:11:04,159 --> 01:11:06,400
pulled the power out

1875
01:11:06,400 --> 01:11:10,800
um and um i'm gonna put i've

1876
01:11:10,800 --> 01:11:13,040
got a few other uh people that i've been

1877
01:11:13,040 --> 01:11:14,080
working with who are

1878
01:11:14,080 --> 01:11:15,280
putting their own designs in so there's

1879
01:11:15,280 --> 01:11:18,560
going to be a frequency counter

1880
01:11:18,560 --> 01:11:21,600
something like an spi multiplexer that

1881
01:11:21,600 --> 01:11:23,040
someone's using for a raspberry pi

1882
01:11:23,040 --> 01:11:24,239
cluster

1883
01:11:24,239 --> 01:11:26,800
um i'll definitely put a little hackaday

1884
01:11:26,800 --> 01:11:27,920
logo in there

1885
01:11:27,920 --> 01:11:31,679
um yeah i'll probably try to put maybe

1886
01:11:31,679 --> 01:11:33,600
four or five or six things in because

1887
01:11:33,600 --> 01:11:41,840
there's so much room

1888
01:11:45,440 --> 01:11:46,719
people are also talking about trying

1889
01:11:46,719 --> 01:11:48,480
stuff on an fpga first so

1890
01:11:48,480 --> 01:11:54,239
i would definitely agree with that um

1891
01:11:54,239 --> 01:11:56,960
uh simulation can take you a long way

1892
01:11:56,960 --> 01:11:58,400
and verification

1893
01:11:58,400 --> 01:12:00,480
but sometimes you get this mismatch

1894
01:12:00,480 --> 01:12:01,760
between

1895
01:12:01,760 --> 01:12:03,520
um the simulation and what is actually

1896
01:12:03,520 --> 01:12:04,880
happening like you get these

1897
01:12:04,880 --> 01:12:08,080
weird meta stability or

1898
01:12:08,080 --> 01:12:10,960
clock domain crossing problems uh not

1899
01:12:10,960 --> 01:12:12,480
trivial to solve and

1900
01:12:12,480 --> 01:12:15,040
they can show up on real hardware so

1901
01:12:15,040 --> 01:12:16,800
running stuff on an fpga can give you a

1902
01:12:16,800 --> 01:12:18,480
little bit of an insight whether that's

1903
01:12:18,480 --> 01:12:20,480
going to be a problem

1904
01:12:20,480 --> 01:12:22,960
yeah i saw a question here about what is

1905
01:12:22,960 --> 01:12:23,520
there

1906
01:12:23,520 --> 01:12:26,560
whether magic is uh capable of uh

1907
01:12:26,560 --> 01:12:28,880
parasitic extraction the answer is yes

1908
01:12:28,880 --> 01:12:30,800
and there's also another effort going on

1909
01:12:30,800 --> 01:12:34,400
uh on on k layout to add the

1910
01:12:34,400 --> 01:12:37,839
extraction rules for it

1911
01:12:42,800 --> 01:12:46,800
and um what about an open source fpga

1912
01:12:46,800 --> 01:12:50,000
yeah that's um that's in progress um

1913
01:12:50,000 --> 01:12:51,600
that is do you know if that's going to

1914
01:12:51,600 --> 01:12:53,440
be in the first

1915
01:12:53,440 --> 01:12:57,120
is that going to be right from the

1916
01:12:57,120 --> 01:12:59,600
la you know laws of statistics we have

1917
01:12:59,600 --> 01:13:00,159
four

1918
01:13:00,159 --> 01:13:02,080
different people working on different

1919
01:13:02,080 --> 01:13:03,600
things or different

1920
01:13:03,600 --> 01:13:06,159
activities so they're gonna one of them

1921
01:13:06,159 --> 01:13:07,920
is company's gonna make it

1922
01:13:07,920 --> 01:13:10,560
now but i i yeah i i have there i

1923
01:13:10,560 --> 01:13:11,440
actually

1924
01:13:11,440 --> 01:13:13,040
i think they're gonna make a few of them

1925
01:13:13,040 --> 01:13:16,880
different architectures some of them

1926
01:13:17,120 --> 01:13:20,880
or tried before and some not so but uh

1927
01:13:20,880 --> 01:13:24,159
there will be a few slots filled with

1928
01:13:24,159 --> 01:13:27,040
an efpga

1929
01:13:28,400 --> 01:13:32,239
are they going to make their own um

1930
01:13:32,239 --> 01:13:35,360
like standard cells for fpgas like are

1931
01:13:35,360 --> 01:13:36,080
they building

1932
01:13:36,080 --> 01:13:39,120
a look no so

1933
01:13:39,120 --> 01:13:42,159
this is actually the easiest and the

1934
01:13:42,159 --> 01:13:43,440
most

1935
01:13:43,440 --> 01:13:46,239
flexible uh approach that was used for

1936
01:13:46,239 --> 01:13:46,960
uh

1937
01:13:46,960 --> 01:13:48,159
targeting the processes to build the

1938
01:13:48,159 --> 01:13:49,679
fpga itself from the standard cell

1939
01:13:49,679 --> 01:13:51,360
library

1940
01:13:51,360 --> 01:13:53,520
so literal basically it becomes a

1941
01:13:53,520 --> 01:13:54,480
digital design

1942
01:13:54,480 --> 01:13:57,760
with a certain regularity and you

1943
01:13:57,760 --> 01:14:00,640
you put it in together and it becomes

1944
01:14:00,640 --> 01:14:01,440
the fpga

1945
01:14:01,440 --> 01:14:03,280
so it actually makes it sometimes you

1946
01:14:03,280 --> 01:14:05,840
need to make a custom cell

1947
01:14:05,840 --> 01:14:09,679
for certain footprints that don't exist

1948
01:14:09,679 --> 01:14:12,800
in the uh in the center cell especially

1949
01:14:12,800 --> 01:14:13,199
if the

1950
01:14:13,199 --> 01:14:16,640
design is high density

1951
01:14:16,640 --> 01:14:19,280
but generally speaking this open open

1952
01:14:19,280 --> 01:14:21,440
fpga

1953
01:14:21,440 --> 01:14:23,600
project project is based on standard

1954
01:14:23,600 --> 01:14:25,520
cell

1955
01:14:25,520 --> 01:14:29,280
based architectures

1956
01:14:29,280 --> 01:14:31,280
we've got another question for you here

1957
01:14:31,280 --> 01:14:34,480
about other sonos cells available

1958
01:14:34,480 --> 01:14:38,159
nope they are completely

1959
01:14:38,159 --> 01:14:40,560
proprietary and they're not at this

1960
01:14:40,560 --> 01:14:44,719
point open source what else on ourselves

1961
01:14:44,719 --> 01:14:46,239
it's a technology that cyprus does

1962
01:14:46,239 --> 01:14:48,800
develop from memory and other

1963
01:14:48,800 --> 01:14:52,239
and then they they're not

1964
01:14:52,239 --> 01:14:54,480
they're not going to be there so it was

1965
01:14:54,480 --> 01:14:56,400
not part of it

1966
01:14:56,400 --> 01:14:58,239
it's like a proprietary technology made

1967
01:14:58,239 --> 01:15:01,679
by air well it was not made open source

1968
01:15:01,679 --> 01:15:11,840
uh in the in the context of this project

1969
01:15:12,000 --> 01:15:14,320
okay um are there any active open source

1970
01:15:14,320 --> 01:15:15,120
projects for

1971
01:15:15,120 --> 01:15:18,159
tiny microcontrollers um eight bit or

1972
01:15:18,159 --> 01:15:18,640
below

1973
01:15:18,640 --> 01:15:20,990
eight bit or below i think um

1974
01:15:20,990 --> 01:15:22,880
[Music]

1975
01:15:22,880 --> 01:15:25,679
i mean pico rv 32 is like the classic

1976
01:15:25,679 --> 01:15:27,040
risk five small

1977
01:15:27,040 --> 01:15:30,400
one that's the sixteen no thirty two two

1978
01:15:30,400 --> 01:15:34,159
only implements the i uh the smallest

1979
01:15:34,159 --> 01:15:34,719
part of

1980
01:15:34,719 --> 01:15:38,080
risk five um i mean there's a lot out

1981
01:15:38,080 --> 01:15:38,560
there

1982
01:15:38,560 --> 01:15:41,199
but that's like the i mean that's been

1983
01:15:41,199 --> 01:15:43,199
taped out

1984
01:15:43,199 --> 01:15:46,480
10 15 20 times

1985
01:15:46,480 --> 01:15:48,000
it's i mean it's used quite a lot isn't

1986
01:15:48,000 --> 01:15:49,760
it yeah we

1987
01:15:49,760 --> 01:15:53,600
at least on our side about five times

1988
01:15:53,600 --> 01:15:57,600
so uh i think actually for

1989
01:15:57,600 --> 01:16:00,640
as far as tiny microcontrollers

1990
01:16:00,640 --> 01:16:03,679
i i will not claim that is their effort

1991
01:16:03,679 --> 01:16:04,800
because i don't know

1992
01:16:04,800 --> 01:16:06,560
here's the beauty of open source is that

1993
01:16:06,560 --> 01:16:08,239
you don't know who's doing what

1994
01:16:08,239 --> 01:16:10,960
where so sometimes when they evolve it

1995
01:16:10,960 --> 01:16:12,239
to a certain

1996
01:16:12,239 --> 01:16:15,520
maturity they show up

1997
01:16:15,520 --> 01:16:17,679
but

1998
01:16:19,120 --> 01:16:21,760
i have been personally seeing efforts

1999
01:16:21,760 --> 01:16:22,320
there and

2000
01:16:22,320 --> 01:16:24,400
if they make sense then people shouldn't

2001
01:16:24,400 --> 01:16:25,679
should do it

2002
01:16:25,679 --> 01:16:28,960
yeah also um i should signpost um

2003
01:16:28,960 --> 01:16:32,080
your talk on fosse dial-up where you

2004
01:16:32,080 --> 01:16:33,600
introduce the strive series because

2005
01:16:33,600 --> 01:16:34,239
those are

2006
01:16:34,239 --> 01:16:37,520
like small general purpose um yeah and

2007
01:16:37,520 --> 01:16:38,760
they are based on the

2008
01:16:38,760 --> 01:16:42,320
picorv32 and we've got a question here

2009
01:16:42,320 --> 01:16:45,360
what kind of dft do is design for test

2010
01:16:45,360 --> 01:16:47,360
openlane is going to use scan chain so

2011
01:16:47,360 --> 01:16:48,880
we're going to have like

2012
01:16:48,880 --> 01:16:52,239
yeah so so actually uh and i need to

2013
01:16:52,239 --> 01:16:53,440
check whether this is a

2014
01:16:53,440 --> 01:16:56,159
already released or not but they we're

2015
01:16:56,159 --> 01:16:56,880
putting

2016
01:16:56,880 --> 01:16:59,040
there's an open source engine called

2017
01:16:59,040 --> 01:17:00,080
fault

2018
01:17:00,080 --> 01:17:03,120
and it it has the scan chain insertion

2019
01:17:03,120 --> 01:17:03,520
and

2020
01:17:03,520 --> 01:17:06,000
vector generation and it wasn't

2021
01:17:06,000 --> 01:17:07,280
available in the first time

2022
01:17:07,280 --> 01:17:11,360
around when we put out the open lid

2023
01:17:11,360 --> 01:17:14,480
now uh it will be

2024
01:17:14,480 --> 01:17:17,839
in the next upcoming one

2025
01:17:29,040 --> 01:17:30,880
uh here's an interesting one can

2026
01:17:30,880 --> 01:17:32,800
standard cells be drawn by other shapes

2027
01:17:32,800 --> 01:17:33,440
other than

2028
01:17:33,440 --> 01:17:37,120
rectangles as long as you follow the

2029
01:17:37,120 --> 01:17:38,320
design rules

2030
01:17:38,320 --> 01:17:41,920
for manufacturability generally yes

2031
01:17:41,920 --> 01:17:45,360
however there are india design rules

2032
01:17:45,360 --> 01:17:46,080
there are

2033
01:17:46,080 --> 01:17:48,080
layers of criticality some of them are

2034
01:17:48,080 --> 01:17:49,840
manufacturing rules there are

2035
01:17:49,840 --> 01:17:51,679
hard rules that if you don't meet him

2036
01:17:51,679 --> 01:17:53,760
you get a failure

2037
01:17:53,760 --> 01:17:56,400
or short circuits or things like that

2038
01:17:56,400 --> 01:17:57,840
there are other rules that are

2039
01:17:57,840 --> 01:17:59,520
potentially weavable

2040
01:17:59,520 --> 01:18:02,640
so that you can do more you

2041
01:18:02,640 --> 01:18:05,840
become more flexible to violate the

2042
01:18:05,840 --> 01:18:08,159
first level however in general at the

2043
01:18:08,159 --> 01:18:09,600
standard cell you can actually build the

2044
01:18:09,600 --> 01:18:12,000
standard cell without

2045
01:18:12,000 --> 01:18:14,800
without violating a rule in any shape

2046
01:18:14,800 --> 01:18:15,600
and if you're

2047
01:18:15,600 --> 01:18:18,960
if you've loaded the drc inside say

2048
01:18:18,960 --> 01:18:22,320
magic and you've loaded your um your gds

2049
01:18:22,320 --> 01:18:23,840
file in magic then it will tell you if

2050
01:18:23,840 --> 01:18:26,000
you've got a drc problem

2051
01:18:26,000 --> 01:18:30,400
there wouldn't it yeah and then we

2052
01:18:30,400 --> 01:18:32,800
part of that actually is we instead of

2053
01:18:32,800 --> 01:18:34,239
loading into magic with the

2054
01:18:34,239 --> 01:18:35,600
where you suffer from the display

2055
01:18:35,600 --> 01:18:37,600
refresh and you know in the different

2056
01:18:37,600 --> 01:18:38,880
layers

2057
01:18:38,880 --> 01:18:42,000
we also wrote a few wrappers around

2058
01:18:42,000 --> 01:18:42,480
magic

2059
01:18:42,480 --> 01:18:45,520
and potentially around uh key layout for

2060
01:18:45,520 --> 01:18:48,239
inline drc would give you a report with

2061
01:18:48,239 --> 01:18:49,120
tickle

2062
01:18:49,120 --> 01:18:52,000
yeah well it's just a wrapper around

2063
01:18:52,000 --> 01:18:52,480
what

2064
01:18:52,480 --> 01:18:56,719
what magic is uh is doing

2065
01:18:56,719 --> 01:19:00,480
and that applies to extraction as well

2066
01:19:01,920 --> 01:19:04,880
okay um here's one for you mohammed do

2067
01:19:04,880 --> 01:19:06,960
you guys have inverters with shifted

2068
01:19:06,960 --> 01:19:10,239
thresholds in your library

2069
01:19:10,400 --> 01:19:14,239
so i'm going to admit shifted threshold

2070
01:19:14,239 --> 01:19:15,760
i don't know what that means yeah i

2071
01:19:15,760 --> 01:19:17,280
don't know that means it's either a

2072
01:19:17,280 --> 01:19:17,760
second

2073
01:19:17,760 --> 01:19:20,400
threshold different threshold voltages

2074
01:19:20,400 --> 01:19:20,800
or

2075
01:19:20,800 --> 01:19:24,560
uh or uh maybe it's the the threshold

2076
01:19:24,560 --> 01:19:26,640
that is modified with pocket implants so

2077
01:19:26,640 --> 01:19:29,040
you can reduce leakage

2078
01:19:29,040 --> 01:19:32,480
so i mean there's the high voltage

2079
01:19:32,480 --> 01:19:36,080
standard cell library right that's

2080
01:19:36,080 --> 01:19:38,960
well i just saw the the comment here so

2081
01:19:38,960 --> 01:19:40,560
the harry potter center library exists

2082
01:19:40,560 --> 01:19:41,360
but

2083
01:19:41,360 --> 01:19:43,040
shifted i don't know if you're talking

2084
01:19:43,040 --> 01:19:45,600
about live and shifted

2085
01:19:45,600 --> 01:19:48,880
little little shifters yeah i thought i

2086
01:19:48,880 --> 01:19:51,280
thought you're talking about threshold

2087
01:19:51,280 --> 01:19:53,520
but uh level shifters yes and some of

2088
01:19:53,520 --> 01:19:55,120
the ios have so

2089
01:19:55,120 --> 01:19:56,719
because the io's are twirler and all the

2090
01:19:56,719 --> 01:19:58,560
way to five volts

2091
01:19:58,560 --> 01:20:01,760
pipe when something volts that'll make

2092
01:20:01,760 --> 01:20:05,840
it easy to do breakout boards

2093
01:20:06,639 --> 01:20:08,800
yeah i'm really looking forward to um

2094
01:20:08,800 --> 01:20:10,320
having a little pcb

2095
01:20:10,320 --> 01:20:13,199
with a plug-in oscillator and a few p

2096
01:20:13,199 --> 01:20:14,239
mods and

2097
01:20:14,239 --> 01:20:16,239
this little asic in the middle it's

2098
01:20:16,239 --> 01:20:19,839
going to be super cool

2099
01:20:20,880 --> 01:20:22,560
we're all looking forward to it it's

2100
01:20:22,560 --> 01:20:23,920
very exciting

2101
01:20:23,920 --> 01:20:27,360
yeah it's very exciting yeah it's never

2102
01:20:27,360 --> 01:20:29,840
uh so um we're looking like we're on

2103
01:20:29,840 --> 01:20:31,440
track for end of november for the

2104
01:20:31,440 --> 01:20:34,639
first shuttle um yes so um

2105
01:20:34,639 --> 01:20:38,000
let's say that um my submission gets

2106
01:20:38,000 --> 01:20:39,360
accepted on that

2107
01:20:39,360 --> 01:20:42,480
when do i get the chips back

2108
01:20:42,480 --> 01:20:47,679
so from typically i mean there's a

2109
01:20:47,679 --> 01:20:50,719
window of 76 days

2110
01:20:50,719 --> 01:20:54,159
and just to get wafer out so

2111
01:20:54,159 --> 01:20:56,719
not packaged not and so there's a little

2112
01:20:56,719 --> 01:20:59,199
bit of lead time on as well so

2113
01:20:59,199 --> 01:21:03,840
76 76 days is uh

2114
01:21:03,840 --> 01:21:06,560
roughly two and a half months right so

2115
01:21:06,560 --> 01:21:07,280
you get

2116
01:21:07,280 --> 01:21:10,800
we're talking about february early march

2117
01:21:10,800 --> 01:21:14,159
packaged fantastic in time for my

2118
01:21:14,159 --> 01:21:16,559
birthday

2119
01:21:16,639 --> 01:21:18,800
good

2120
01:21:23,840 --> 01:21:26,320
yeah i'm reading if there are other

2121
01:21:26,320 --> 01:21:27,120
questions

2122
01:21:27,120 --> 01:21:29,120
ratboy is saying our hobbyist after

2123
01:21:29,120 --> 01:21:30,560
google shuttle prototypes happen what's

2124
01:21:30,560 --> 01:21:31,199
next

2125
01:21:31,199 --> 01:21:34,080
but i think maybe you think um maybe

2126
01:21:34,080 --> 01:21:35,199
i've given the impression that there's

2127
01:21:35,199 --> 01:21:35,840
just going to be

2128
01:21:35,840 --> 01:21:38,400
one free shuttle but as far as i know

2129
01:21:38,400 --> 01:21:39,840
and mithra is in the comments as well

2130
01:21:39,840 --> 01:21:40,320
but

2131
01:21:40,320 --> 01:21:43,120
as far as i know um there's going to be

2132
01:21:43,120 --> 01:21:44,000
multiple

2133
01:21:44,000 --> 01:21:46,880
shuttles um so if you don't make it on

2134
01:21:46,880 --> 01:21:47,440
the first one

2135
01:21:47,440 --> 01:21:48,639
you'd hopefully make it on the second

2136
01:21:48,639 --> 01:21:50,800
one yeah and and

2137
01:21:50,800 --> 01:21:52,400
and one of the interesting slides is

2138
01:21:52,400 --> 01:21:54,239
that there are the foundries

2139
01:21:54,239 --> 01:21:58,000
and generally they offer

2140
01:21:58,000 --> 01:21:59,679
for some specific designs when the

2141
01:21:59,679 --> 01:22:01,679
business need matches what is being

2142
01:22:01,679 --> 01:22:02,960
designed

2143
01:22:02,960 --> 01:22:04,480
but we wouldn't depend on that hundred

2144
01:22:04,480 --> 01:22:06,159
percent because you don't know whether

2145
01:22:06,159 --> 01:22:07,360
that's gonna online or not

2146
01:22:07,360 --> 01:22:09,199
but if you actually do something our

2147
01:22:09,199 --> 01:22:10,960
experience is something that potentially

2148
01:22:10,960 --> 01:22:12,320
goes into

2149
01:22:12,320 --> 01:22:15,440
the foundries library as an advantage as

2150
01:22:15,440 --> 01:22:17,280
a competitive advantage

2151
01:22:17,280 --> 01:22:20,080
then they would help you prototype it so

2152
01:22:20,080 --> 01:22:21,360
that they can prove

2153
01:22:21,360 --> 01:22:22,719
improve it and put it in their library

2154
01:22:22,719 --> 01:22:25,120
and they also make it

2155
01:22:25,120 --> 01:22:28,960
as an available part of their portfolio

2156
01:22:29,280 --> 01:22:32,800
um so the clarification is

2157
01:22:32,800 --> 01:22:36,080
um you've you've proved that your design

2158
01:22:36,080 --> 01:22:36,639
works

2159
01:22:36,639 --> 01:22:40,000
on the shuttle and then you want to um

2160
01:22:40,000 --> 01:22:41,920
scale it so i guess the answer there

2161
01:22:41,920 --> 01:22:44,080
would be you have a chat with

2162
01:22:44,080 --> 01:22:48,480
uh yourself at ephebus

2163
01:22:48,880 --> 01:22:50,560
like if you wanted to if you wanted to

2164
01:22:50,560 --> 01:22:54,000
now make an order for 10 000.

2165
01:22:54,000 --> 01:22:57,120
well any scale that we

2166
01:22:57,120 --> 01:22:59,280
for this one we need to be it's going to

2167
01:22:59,280 --> 01:23:00,719
be very clear it's a

2168
01:23:00,719 --> 01:23:03,400
certain number of units right and

2169
01:23:03,400 --> 01:23:04,840
[Music]

2170
01:23:04,840 --> 01:23:07,920
the if the design

2171
01:23:07,920 --> 01:23:10,880
caravel the the carrier chip as well as

2172
01:23:10,880 --> 01:23:12,480
the designing that becomes a

2173
01:23:12,480 --> 01:23:15,840
of course yes uh this becomes a

2174
01:23:15,840 --> 01:23:19,360
will be the interface to the foundry

2175
01:23:19,520 --> 01:23:21,040
okay so i think we're going to have just

2176
01:23:21,040 --> 01:23:23,040
like a couple more questions because

2177
01:23:23,040 --> 01:23:25,280
uh i want to be off the air in time for

2178
01:23:25,280 --> 01:23:26,400
people to get to the

2179
01:23:26,400 --> 01:23:31,040
um workshops um

2180
01:23:31,199 --> 01:23:34,320
another one from uh pvp pdp7 drew hi

2181
01:23:34,320 --> 01:23:34,880
drew

2182
01:23:34,880 --> 01:23:36,320
and we didn't have that chat but let's

2183
01:23:36,320 --> 01:23:38,960
do it soon um

2184
01:23:38,960 --> 01:23:41,760
what process would be needed for uh risk

2185
01:23:41,760 --> 01:23:42,320
5

2186
01:23:42,320 --> 01:23:44,400
64 gc implementation like rocket or

2187
01:23:44,400 --> 01:23:45,679
ariane

2188
01:23:45,679 --> 01:23:47,760
i think that you could use this there'd

2189
01:23:47,760 --> 01:23:49,040
be nothing to stop you from

2190
01:23:49,040 --> 01:23:52,080
using this process i mean um you would

2191
01:23:52,080 --> 01:23:53,840
want to run it through open lane and

2192
01:23:53,840 --> 01:23:55,760
find out how big it is but

2193
01:23:55,760 --> 01:24:00,239
um if you can fit 10 pico rv 32s in

2194
01:24:00,239 --> 01:24:04,560
um you've probably got room for a bigger

2195
01:24:04,560 --> 01:24:06,560
a bigger processor have you tried um

2196
01:24:06,560 --> 01:24:09,120
64-bit risk

2197
01:24:09,120 --> 01:24:12,639
through open lane mohammed

2198
01:24:12,639 --> 01:24:15,760
well it the process is

2199
01:24:15,760 --> 01:24:17,120
well there's a process and there's the

2200
01:24:17,120 --> 01:24:19,360
flow so the process yes

2201
01:24:19,360 --> 01:24:23,120
you know you know i mentioned before uh

2202
01:24:23,120 --> 01:24:24,960
this has been used more than 15 years

2203
01:24:24,960 --> 01:24:26,239
ago in

2204
01:24:26,239 --> 01:24:28,840
high speed processors but they weren't

2205
01:24:28,840 --> 01:24:30,080
now the

2206
01:24:30,080 --> 01:24:32,239
flow itself maybe i need to check

2207
01:24:32,239 --> 01:24:33,840
whether the team has tried and wanted

2208
01:24:33,840 --> 01:24:34,639
them or not

2209
01:24:34,639 --> 01:24:37,760
but it's uh uh uh

2210
01:24:37,760 --> 01:24:40,239
i don't see a reason why not we it's

2211
01:24:40,239 --> 01:24:41,040
just the main

2212
01:24:41,040 --> 01:24:45,120
thinking area like is that well

2213
01:24:45,120 --> 01:24:46,960
i don't know it depends how if i want to

2214
01:24:46,960 --> 01:24:48,159
know if you want to know what

2215
01:24:48,159 --> 01:24:49,679
whether it's going to fit in the user

2216
01:24:49,679 --> 01:24:51,679
space in caravel then the only way to do

2217
01:24:51,679 --> 01:24:52,800
it is to do it

2218
01:24:52,800 --> 01:24:54,320
and try and basically try different

2219
01:24:54,320 --> 01:24:55,920
configurations and see how much you can

2220
01:24:55,920 --> 01:24:57,440
get

2221
01:24:57,440 --> 01:25:00,639
download open lane put it in uh

2222
01:25:00,639 --> 01:25:03,040
run the tools and then uh look at it

2223
01:25:03,040 --> 01:25:04,800
yeah and as far as the gate

2224
01:25:04,800 --> 01:25:08,639
count we we were able to get

2225
01:25:08,639 --> 01:25:12,080
all the way to like a 900 000 gates

2226
01:25:12,080 --> 01:25:15,120
uh with a no with

2227
01:25:15,120 --> 01:25:17,440
of course the design that we we made it

2228
01:25:17,440 --> 01:25:18,800
just in a way but it's

2229
01:25:18,800 --> 01:25:21,040
because it's not exactly an architecture

2230
01:25:21,040 --> 01:25:22,159
design uh

2231
01:25:22,159 --> 01:25:24,239
it may in the results may be different

2232
01:25:24,239 --> 01:25:25,199
from different

2233
01:25:25,199 --> 01:25:27,440
for different architectures being

2234
01:25:27,440 --> 01:25:30,000
synthesized

2235
01:25:30,000 --> 01:25:33,520
um okay so last one i'll just

2236
01:25:33,520 --> 01:25:35,440
try to address one from tommy thorne

2237
01:25:35,440 --> 01:25:37,840
saying risk 564 without caches isn't

2238
01:25:37,840 --> 01:25:39,040
that interesting because i just want to

2239
01:25:39,040 --> 01:25:40,800
say that um

2240
01:25:40,800 --> 01:25:43,600
uh one of the other fossee dial-ups was

2241
01:25:43,600 --> 01:25:44,080
about

2242
01:25:44,080 --> 01:25:46,560
open ram so there's a different process

2243
01:25:46,560 --> 01:25:47,520
for building

2244
01:25:47,520 --> 01:25:49,600
big memories that it uses a more

2245
01:25:49,600 --> 01:25:52,080
efficient uh in terms of area

2246
01:25:52,080 --> 01:25:54,639
uh process so definitely check that out

2247
01:25:54,639 --> 01:25:55,520
so i think

2248
01:25:55,520 --> 01:25:58,800
uh this is the uh the sign off time

2249
01:25:58,800 --> 01:26:01,520
so i just wanna say thanks to muhammad

2250
01:26:01,520 --> 01:26:01,840
for

2251
01:26:01,840 --> 01:26:03,199
helping me out at the end i really

2252
01:26:03,199 --> 01:26:05,280
appreciate you being on hand to answer

2253
01:26:05,280 --> 01:26:06,800
any questions i can do

2254
01:26:06,800 --> 01:26:09,920
thanks everyone for staying tuned for

2255
01:26:09,920 --> 01:26:13,520
a whole hour and a bit uh no it's

2256
01:26:13,520 --> 01:26:15,600
super long hope it was interesting and

2257
01:26:15,600 --> 01:26:17,840
hopefully i'll see

2258
01:26:17,840 --> 01:26:20,400
some of you on a on a zoom course near

2259
01:26:20,400 --> 01:26:22,719
you

2260
01:26:25,199 --> 01:26:27,280
great thanks matt and muhammad it's been

2261
01:26:27,280 --> 01:26:30,639
a pleasure having you today

2262
01:26:30,639 --> 01:26:33,199
i guess we'll uh see everyone in the

2263
01:26:33,199 --> 01:26:34,840
next one

2264
01:26:34,840 --> 01:26:37,180
okay

2265
01:26:37,180 --> 01:26:40,390
[Music]

