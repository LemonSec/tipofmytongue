1
00:00:00,550 --> 00:00:00,799
[Applause]

2
00:00:00,799 --> 00:00:02,560
thank you

3
00:00:02,560 --> 00:00:03,840
so now

4
00:00:03,840 --> 00:00:06,000
let's start so

5
00:00:06,000 --> 00:00:08,240
good morning i think it's good morning

6
00:00:08,240 --> 00:00:11,120
so my name is philippe peters again i'm

7
00:00:11,120 --> 00:00:13,599
a brazilian but i live in portugal in

8
00:00:13,599 --> 00:00:16,480
this moment with my big family

9
00:00:16,480 --> 00:00:18,640
yeah i have four children maybe i'm

10
00:00:18,640 --> 00:00:20,640
crazy probably

11
00:00:20,640 --> 00:00:25,199
and today my idea is to

12
00:00:25,680 --> 00:00:27,439
to talk more about the something that i

13
00:00:27,439 --> 00:00:29,119
would like to think

14
00:00:29,119 --> 00:00:31,439
because we saw in the last

15
00:00:31,439 --> 00:00:34,079
presentations about debuggers and

16
00:00:34,079 --> 00:00:36,480
debuggers more analysis and stuff like

17
00:00:36,480 --> 00:00:37,280
that

18
00:00:37,280 --> 00:00:39,360
it's pretty cool

19
00:00:39,360 --> 00:00:40,320
but

20
00:00:40,320 --> 00:00:43,120
we need understand how those bases works

21
00:00:43,120 --> 00:00:45,920
and the idea behind of this talk is

22
00:00:45,920 --> 00:00:47,600
explain about those bases and how

23
00:00:47,600 --> 00:00:48,719
important

24
00:00:48,719 --> 00:00:50,960
is to use those bases

25
00:00:50,960 --> 00:00:52,640
for each

26
00:00:52,640 --> 00:00:54,079
field when you talk about the cyber

27
00:00:54,079 --> 00:00:55,680
security right

28
00:00:55,680 --> 00:00:58,640
so this is my contact act twitter

29
00:00:58,640 --> 00:01:00,239
i like to share

30
00:01:00,239 --> 00:01:02,879
many open source tools there so if you'd

31
00:01:02,879 --> 00:01:05,920
like follow me and send a message send

32
00:01:05,920 --> 00:01:08,720
me tools i like to test as well

33
00:01:08,720 --> 00:01:09,920
so

34
00:01:09,920 --> 00:01:12,320
other contacts that i have a small

35
00:01:12,320 --> 00:01:14,960
simple web page we can find some talks

36
00:01:14,960 --> 00:01:16,640
there about the same topic in other

37
00:01:16,640 --> 00:01:17,680
talks

38
00:01:17,680 --> 00:01:21,119
and my github you can find some research

39
00:01:21,119 --> 00:01:23,520
that i made in some security

40
00:01:23,520 --> 00:01:26,880
vendors actually and of course i share

41
00:01:26,880 --> 00:01:29,040
with those reports with the vendors and

42
00:01:29,040 --> 00:01:30,560
i talk with them to improve the

43
00:01:30,560 --> 00:01:32,640
solutions and stuff like that and my

44
00:01:32,640 --> 00:01:33,920
linkedin

45
00:01:33,920 --> 00:01:37,119
right so who am i i pass very fast i'm

46
00:01:37,119 --> 00:01:39,280
security research at sapporo support is

47
00:01:39,280 --> 00:01:41,280
a startup from swissland

48
00:01:41,280 --> 00:01:43,280
i'm responsible for creating attack

49
00:01:43,280 --> 00:01:45,840
modules from for this app so i need to

50
00:01:45,840 --> 00:01:47,439
understand how the attack

51
00:01:47,439 --> 00:01:50,159
how the attacker explore vulnerability

52
00:01:50,159 --> 00:01:53,040
or using permissions in the cloud and

53
00:01:53,040 --> 00:01:54,399
privacy environment

54
00:01:54,399 --> 00:01:56,479
and i need to create those you know

55
00:01:56,479 --> 00:01:58,560
scenarios and i sent to the developer

56
00:01:58,560 --> 00:01:59,759
team and the team created to the

57
00:01:59,759 --> 00:02:01,439
intelligence of the product it's very

58
00:02:01,439 --> 00:02:02,399
nice

59
00:02:02,399 --> 00:02:04,960
and i'm a founder of this organization

60
00:02:04,960 --> 00:02:06,799
it's a small company for now it's a

61
00:02:06,799 --> 00:02:09,038
black black watch technology it's my

62
00:02:09,038 --> 00:02:10,318
company

63
00:02:10,318 --> 00:02:12,160
and it's a kind of reseller company

64
00:02:12,160 --> 00:02:14,160
actually and i'm developer advocate of

65
00:02:14,160 --> 00:02:16,879
this uh open source projects cube shop

66
00:02:16,879 --> 00:02:19,280
specifically looking for the testers

67
00:02:19,280 --> 00:02:20,959
uh it's more when you talk about the

68
00:02:20,959 --> 00:02:22,800
software development life cycle and

69
00:02:22,800 --> 00:02:24,000
stuff like that

70
00:02:24,000 --> 00:02:26,640
and i'm advocating of those projects

71
00:02:26,640 --> 00:02:28,319
mainly

72
00:02:28,319 --> 00:02:30,400
to the two of the oh this is

73
00:02:30,400 --> 00:02:31,599
specifically it's a hacking it's not a

74
00:02:31,599 --> 00:02:33,760
crime it's a very nice project starting

75
00:02:33,760 --> 00:02:34,959
in us

76
00:02:34,959 --> 00:02:36,720
the idea behind of this project is to

77
00:02:36,720 --> 00:02:38,720
explain more about the haki concept

78
00:02:38,720 --> 00:02:39,519
right

79
00:02:39,519 --> 00:02:41,760
and how you can use in this in your life

80
00:02:41,760 --> 00:02:43,840
because hacking is really not a crime

81
00:02:43,840 --> 00:02:45,120
because when you talk about the crime

82
00:02:45,120 --> 00:02:47,840
it's a cyber criminal is um you know the

83
00:02:47,840 --> 00:02:49,920
people needs to pay for that not a

84
00:02:49,920 --> 00:02:52,800
hacking hacking is a lifestyle lifestyle

85
00:02:52,800 --> 00:02:55,440
and how you looking from the

86
00:02:55,440 --> 00:02:58,080
software how to use your creative mind

87
00:02:58,080 --> 00:03:00,640
let's suppose if you are a soccer player

88
00:03:00,640 --> 00:03:04,800
and you do bad things like a cream you

89
00:03:04,800 --> 00:03:07,840
you you and this moment you norma

90
00:03:07,840 --> 00:03:08,959
you're no more

91
00:03:08,959 --> 00:03:11,920
a soccer player you are a criminal right

92
00:03:11,920 --> 00:03:14,159
so that's the point unfortunately the

93
00:03:14,159 --> 00:03:16,800
newspapers on tv needs to pick up one

94
00:03:16,800 --> 00:03:19,599
person and call this person has a hacker

95
00:03:19,599 --> 00:03:21,840
the bad guy but it's not a hack is not a

96
00:03:21,840 --> 00:03:23,599
it's not a crime another project it's a

97
00:03:23,599 --> 00:03:25,920
defcon groups from my friend jason

98
00:03:25,920 --> 00:03:27,680
i'm a leader of this project in sao

99
00:03:27,680 --> 00:03:29,680
paulo one of those leads in sao paulo is

100
00:03:29,680 --> 00:03:31,760
a community like this that we can share

101
00:03:31,760 --> 00:03:34,000
the knowledge of security and others is

102
00:03:34,000 --> 00:03:36,159
saying segura is specifically about the

103
00:03:36,159 --> 00:03:37,360
solutions

104
00:03:37,360 --> 00:03:39,519
for organizations in his nic is

105
00:03:39,519 --> 00:03:41,360
assassin's solutions application

106
00:03:41,360 --> 00:03:43,519
security for for the software action

107
00:03:43,519 --> 00:03:46,159
analysis in code

108
00:03:46,159 --> 00:03:48,959
and this last i mean right structure

109
00:03:48,959 --> 00:03:50,480
writer and reviewer from those three

110
00:03:50,480 --> 00:03:52,159
magazines this is light it's very

111
00:03:52,159 --> 00:03:53,840
important for my mother because of that

112
00:03:53,840 --> 00:03:56,159
i'd like to share with you okay

113
00:03:56,159 --> 00:03:57,680
but anyway

114
00:03:57,680 --> 00:04:00,159
so very fast what is a threat just to

115
00:04:00,159 --> 00:04:01,599
put all those people in the same page

116
00:04:01,599 --> 00:04:03,120
simple definition of definition from

117
00:04:03,120 --> 00:04:05,439
flip from this iso is a kind of

118
00:04:05,439 --> 00:04:07,280
potential incident maybe the software

119
00:04:07,280 --> 00:04:09,519
attack tough intellectual property maybe

120
00:04:09,519 --> 00:04:12,400
identity death sabotage and information

121
00:04:12,400 --> 00:04:14,319
stores are example of information

122
00:04:14,319 --> 00:04:17,120
threads the point is if you see here

123
00:04:17,120 --> 00:04:20,160
all those things is related to a

124
00:04:20,160 --> 00:04:21,120
software

125
00:04:21,120 --> 00:04:23,280
maybe it's a code maybe software maybe

126
00:04:23,280 --> 00:04:25,759
application or maybe a binary but if you

127
00:04:25,759 --> 00:04:28,400
see all those things is about

128
00:04:28,400 --> 00:04:31,600
the code right okay so when you

129
00:04:31,600 --> 00:04:34,160
start your research or your analysis

130
00:04:34,160 --> 00:04:35,680
when you talk about the

131
00:04:35,680 --> 00:04:37,440
the mower analysis specifically or

132
00:04:37,440 --> 00:04:39,040
hunting something

133
00:04:39,040 --> 00:04:41,440
first you have an artifact or a sample

134
00:04:41,440 --> 00:04:42,800
because you don't know if it's malicious

135
00:04:42,800 --> 00:04:44,240
or not right so this is the first step

136
00:04:44,240 --> 00:04:46,240
identification i will show after

137
00:04:46,240 --> 00:04:48,960
semi-small comments and stuff like that

138
00:04:48,960 --> 00:04:50,880
and you you need to understand if he's

139
00:04:50,880 --> 00:04:52,479
malware it's a malicious software or

140
00:04:52,479 --> 00:04:54,720
maldoc malicious document and after that

141
00:04:54,720 --> 00:04:56,240
you can choose what the best methodology

142
00:04:56,240 --> 00:04:58,240
you can apply okay statistic analysis

143
00:04:58,240 --> 00:05:00,080
and dynamic analysis so two different

144
00:05:00,080 --> 00:05:02,800
approach maybe you are think where is

145
00:05:02,800 --> 00:05:04,800
reversion engineering reversion engineer

146
00:05:04,800 --> 00:05:06,240
is a technique that you can use in both

147
00:05:06,240 --> 00:05:08,560
of those methodologies right so when you

148
00:05:08,560 --> 00:05:10,479
perform something like this

149
00:05:10,479 --> 00:05:12,160
my recommendation is a suggestion

150
00:05:12,160 --> 00:05:13,600
actually

151
00:05:13,600 --> 00:05:15,199
when you do something like this it's

152
00:05:15,199 --> 00:05:17,039
important to register all those steps

153
00:05:17,039 --> 00:05:20,160
why because you can learn more about

154
00:05:20,160 --> 00:05:21,759
those steps and mainly about the

155
00:05:21,759 --> 00:05:24,000
technique used by the attacker what kind

156
00:05:24,000 --> 00:05:26,880
of technique and after that you can

157
00:05:26,880 --> 00:05:28,960
prepare an article you can prepare a

158
00:05:28,960 --> 00:05:30,880
talks and you can present a report for

159
00:05:30,880 --> 00:05:33,120
your manager it's good for manager right

160
00:05:33,120 --> 00:05:35,919
or coordinator like this because you can

161
00:05:35,919 --> 00:05:37,199
explain those

162
00:05:37,199 --> 00:05:40,080
steps and how you discovery

163
00:05:40,080 --> 00:05:41,600
what is the

164
00:05:41,600 --> 00:05:42,960
way that the attacker used in your

165
00:05:42,960 --> 00:05:44,479
organization not only that but you can

166
00:05:44,479 --> 00:05:46,240
improve defense's mechanism because you

167
00:05:46,240 --> 00:05:48,639
will understand what kind of technique

168
00:05:48,639 --> 00:05:50,320
the attacker used

169
00:05:50,320 --> 00:05:52,320
in your environment and what kind of

170
00:05:52,320 --> 00:05:54,400
solution the attacker bypass your

171
00:05:54,400 --> 00:05:56,080
environment because of that it's very

172
00:05:56,080 --> 00:05:57,919
important and not only that but you can

173
00:05:57,919 --> 00:06:00,160
create in this beautiful name called cti

174
00:06:00,160 --> 00:06:01,840
or cyber threat intelligence it's a

175
00:06:01,840 --> 00:06:03,199
beautiful name

176
00:06:03,199 --> 00:06:05,520
right i know that is it's very difficult

177
00:06:05,520 --> 00:06:07,280
to implement that but you can use in

178
00:06:07,280 --> 00:06:09,360
some tools to automatize the process for

179
00:06:09,360 --> 00:06:11,600
help you okay and of course other

180
00:06:11,600 --> 00:06:14,080
beautiful word is straightening cyber

181
00:06:14,080 --> 00:06:15,600
resilience because the

182
00:06:15,600 --> 00:06:17,199
the threads are changing all the time

183
00:06:17,199 --> 00:06:19,360
okay nice so what is the statistic

184
00:06:19,360 --> 00:06:21,840
analysis simple definition basically is

185
00:06:21,840 --> 00:06:23,199
the first step when you talk about the

186
00:06:23,199 --> 00:06:26,080
mod analysis or threading hunting when

187
00:06:26,080 --> 00:06:28,080
you're looking more about the binary not

188
00:06:28,080 --> 00:06:29,759
about the tools because when you talk

189
00:06:29,759 --> 00:06:32,319
about 3d hunting you need to hunting

190
00:06:32,319 --> 00:06:34,960
using tools right but how you can

191
00:06:34,960 --> 00:06:36,800
looking from the binary because in the

192
00:06:36,800 --> 00:06:38,960
end of the day

193
00:06:38,960 --> 00:06:40,639
our idea is to figure out how the

194
00:06:40,639 --> 00:06:42,400
attacker using the binary to explore the

195
00:06:42,400 --> 00:06:44,000
environment how the technique they're

196
00:06:44,000 --> 00:06:47,199
using to inject something in the binary

197
00:06:47,199 --> 00:06:48,720
and stuff like that because of that is

198
00:06:48,720 --> 00:06:50,560
the first step when you talk about mri

199
00:06:50,560 --> 00:06:52,960
studies not only that because this

200
00:06:52,960 --> 00:06:54,960
the analysis the statistical analysis

201
00:06:54,960 --> 00:06:57,199
analyze the process of the specifically

202
00:06:57,199 --> 00:06:59,599
program code or if have some library

203
00:06:59,599 --> 00:07:01,280
what kind of function is important by

204
00:07:01,280 --> 00:07:04,080
this library if this library makes sense

205
00:07:04,080 --> 00:07:05,759
or not makes sense with the the system

206
00:07:05,759 --> 00:07:08,479
operation if using the the dll or

207
00:07:08,479 --> 00:07:11,199
specifically library inside of the unix

208
00:07:11,199 --> 00:07:13,199
platform for example

209
00:07:13,199 --> 00:07:15,280
and this specific analysis doesn't run

210
00:07:15,280 --> 00:07:16,880
at this time the file so you're using

211
00:07:16,880 --> 00:07:20,000
some comments you see some results and

212
00:07:20,000 --> 00:07:22,720
here's my the point of this talk

213
00:07:22,720 --> 00:07:25,680
what is the result when you executing

214
00:07:25,680 --> 00:07:26,639
the tool

215
00:07:26,639 --> 00:07:28,400
because sometimes when we analyze

216
00:07:28,400 --> 00:07:30,800
something we perform the tool

217
00:07:30,800 --> 00:07:33,120
you see the results and you think

218
00:07:33,120 --> 00:07:34,960
this tool doesn't work for me i don't

219
00:07:34,960 --> 00:07:37,360
find anything for this binary but

220
00:07:37,360 --> 00:07:41,280
actually we can find some results but we

221
00:07:41,280 --> 00:07:42,160
don't

222
00:07:42,160 --> 00:07:44,639
know how we can interpret that or in

223
00:07:44,639 --> 00:07:46,479
understand actually the result of this

224
00:07:46,479 --> 00:07:47,759
comment okay

225
00:07:47,759 --> 00:07:50,400
so because of this is more safe and on

226
00:07:50,400 --> 00:07:52,400
the other hand you have dynamic analysis

227
00:07:52,400 --> 00:07:54,960
is a kind of analysis based on behavior

228
00:07:54,960 --> 00:07:56,879
when you can put in this malware in

229
00:07:56,879 --> 00:08:00,000
specific place and you can analyze the

230
00:08:00,000 --> 00:08:03,840
behavior so i have a question for you

231
00:08:03,840 --> 00:08:05,440
when you talk about the dynamic analysis

232
00:08:05,440 --> 00:08:07,280
you can use in this this concept calling

233
00:08:07,280 --> 00:08:09,680
sandbox right so you put in your binary

234
00:08:09,680 --> 00:08:11,520
inside of this specif specifically

235
00:08:11,520 --> 00:08:13,039
controlled environment

236
00:08:13,039 --> 00:08:15,360
and you can run the binary inside of

237
00:08:15,360 --> 00:08:17,360
that and you can see all those

238
00:08:17,360 --> 00:08:20,160
behavior right so my question is so if i

239
00:08:20,160 --> 00:08:21,440
create in the virtual machine in my

240
00:08:21,440 --> 00:08:25,599
environment i have a sandbox yes or no

241
00:08:25,599 --> 00:08:26,960
yes

242
00:08:26,960 --> 00:08:29,520
ends up no

243
00:08:29,520 --> 00:08:31,680
maybe

244
00:08:31,680 --> 00:08:32,479
no

245
00:08:32,479 --> 00:08:34,799
the people are shamed

246
00:08:34,799 --> 00:08:36,479
i don't believe in the security events

247
00:08:36,479 --> 00:08:38,320
that people are ashamed

248
00:08:38,320 --> 00:08:40,080
i need to talk i need to talk bad words

249
00:08:40,080 --> 00:08:42,479
like a you

250
00:08:42,479 --> 00:08:45,600
yeah okay so actually here we have an

251
00:08:45,600 --> 00:08:47,040
important information when you talk

252
00:08:47,040 --> 00:08:49,920
about the sandbox we need to have

253
00:08:49,920 --> 00:08:52,080
different engines inside of that so of

254
00:08:52,080 --> 00:08:53,600
course it's a virtual machine that you

255
00:08:53,600 --> 00:08:55,200
can execute the binary inside of that

256
00:08:55,200 --> 00:08:57,200
but you need to have these engines

257
00:08:57,200 --> 00:08:58,720
because those engines will be

258
00:08:58,720 --> 00:09:00,080
responsible for

259
00:09:00,080 --> 00:09:02,959
give you the result if this binary is

260
00:09:02,959 --> 00:09:05,600
malicious or not based on those engines

261
00:09:05,600 --> 00:09:07,360
based on those intelligence right like

262
00:09:07,360 --> 00:09:10,160
you probably you already heard about the

263
00:09:10,160 --> 00:09:13,120
uh virustotal right scanning so you put

264
00:09:13,120 --> 00:09:16,640
in the binary there or url so they

265
00:09:16,640 --> 00:09:18,640
they have many engines inside of this

266
00:09:18,640 --> 00:09:21,360
platform like others like joey sandbox

267
00:09:21,360 --> 00:09:24,320
or other hybrid cloud or other sandbox

268
00:09:24,320 --> 00:09:26,800
so when you try

269
00:09:26,800 --> 00:09:28,560
or you would you like to create your

270
00:09:28,560 --> 00:09:30,640
sandbox you need to have those engines

271
00:09:30,640 --> 00:09:32,640
inside of your environment right so just

272
00:09:32,640 --> 00:09:35,279
a simple concept very nice okay let's

273
00:09:35,279 --> 00:09:36,640
talk about the

274
00:09:36,640 --> 00:09:38,720
binary all the first steps when you talk

275
00:09:38,720 --> 00:09:40,640
about the binary as i mentioned it with

276
00:09:40,640 --> 00:09:42,080
you so

277
00:09:42,080 --> 00:09:44,630
first remember we we have the

278
00:09:44,630 --> 00:09:46,560
[Music]

279
00:09:46,560 --> 00:09:49,279
oops we have the identification step i

280
00:09:49,279 --> 00:09:51,200
have here many files

281
00:09:51,200 --> 00:09:52,720
let me put here i think it's more easy

282
00:09:52,720 --> 00:09:53,600
to see

283
00:09:53,600 --> 00:09:56,800
so we need to understand how those files

284
00:09:56,800 --> 00:09:58,720
is exactly what kind of type so the

285
00:09:58,720 --> 00:10:01,120
first step is to identify remember in

286
00:10:01,120 --> 00:10:02,959
the flow so identification steps it's

287
00:10:02,959 --> 00:10:05,600
pretty simple so first of all i would

288
00:10:05,600 --> 00:10:07,600
like to see what kind of

289
00:10:07,600 --> 00:10:09,920
file i have here so it's a simple amazon

290
00:10:09,920 --> 00:10:12,560
i use file command right so

291
00:10:12,560 --> 00:10:15,040
how many people heard about this comment

292
00:10:15,040 --> 00:10:18,399
it's simple thank you god answers nice

293
00:10:18,399 --> 00:10:21,440
and the second is malware.txt is

294
00:10:21,440 --> 00:10:23,839
probably a text it's a text nice so

295
00:10:23,839 --> 00:10:26,160
let's read what i have inside of this

296
00:10:26,160 --> 00:10:27,440
text

297
00:10:27,440 --> 00:10:30,240
nice what i have here

298
00:10:30,240 --> 00:10:32,160
a simple python code right is that

299
00:10:32,160 --> 00:10:34,000
correct or not

300
00:10:34,000 --> 00:10:36,240
see yeah

301
00:10:36,240 --> 00:10:37,600
no

302
00:10:37,600 --> 00:10:39,360
i don't know

303
00:10:39,360 --> 00:10:40,880
let's try

304
00:10:40,880 --> 00:10:42,640
what happened now

305
00:10:42,640 --> 00:10:44,079
cool

306
00:10:44,079 --> 00:10:46,480
it's a mou it's a it's a python okay but

307
00:10:46,480 --> 00:10:48,000
the extension is different

308
00:10:48,000 --> 00:10:50,320
okay something works here so

309
00:10:50,320 --> 00:10:52,959
i have a question again so

310
00:10:52,959 --> 00:10:54,320
what is

311
00:10:54,320 --> 00:10:55,040
what

312
00:10:55,040 --> 00:10:57,760
how type works so what information the

313
00:10:57,760 --> 00:10:59,279
type collects from the binary to

314
00:10:59,279 --> 00:11:02,959
identify this specifically binary

315
00:11:02,959 --> 00:11:04,079
do you know

316
00:11:04,079 --> 00:11:06,320
what is for example let's check what

317
00:11:06,320 --> 00:11:08,320
there is a

318
00:11:08,320 --> 00:11:11,519
file sample here

319
00:11:13,600 --> 00:11:16,000
simple

320
00:11:16,079 --> 00:11:17,839
take a look this is a kind of different

321
00:11:17,839 --> 00:11:21,120
when you see if you see here

322
00:11:21,760 --> 00:11:24,480
i have a two text files but one of these

323
00:11:24,480 --> 00:11:26,839
is a python script

324
00:11:26,839 --> 00:11:28,560
executable

325
00:11:28,560 --> 00:11:29,839
and this

326
00:11:29,839 --> 00:11:31,680
is different you see

327
00:11:31,680 --> 00:11:34,160
so what do you think about that why the

328
00:11:34,160 --> 00:11:37,360
difference between the files

329
00:11:39,839 --> 00:11:43,839
sorry man i can't hear you

330
00:11:50,000 --> 00:11:52,079
maybe i don't understand my baby

331
00:11:52,079 --> 00:11:53,760
okay

332
00:11:53,760 --> 00:11:54,880
probably

333
00:11:54,880 --> 00:11:57,760
i i really i sorry i don't probably they

334
00:11:57,760 --> 00:12:00,959
have a microphone but sorry for that but

335
00:12:00,959 --> 00:12:04,079
here is one specifically key

336
00:12:04,079 --> 00:12:06,160
how the file works that's the point here

337
00:12:06,160 --> 00:12:07,519
so

338
00:12:07,519 --> 00:12:10,160
oh no philip i need to read the manual

339
00:12:10,160 --> 00:12:12,880
yeah i don't like the read manual but

340
00:12:12,880 --> 00:12:14,880
fio works

341
00:12:14,880 --> 00:12:16,880
actually file looks for a specific

342
00:12:16,880 --> 00:12:19,839
information is inside of the binary and

343
00:12:19,839 --> 00:12:22,639
this information it's here

344
00:12:22,639 --> 00:12:25,120
so if you read the book on the book the

345
00:12:25,120 --> 00:12:26,160
manual

346
00:12:26,160 --> 00:12:27,839
you see here the

347
00:12:27,839 --> 00:12:29,040
magic

348
00:12:29,040 --> 00:12:30,560
you see

349
00:12:30,560 --> 00:12:33,599
the kind of tip here

350
00:12:33,760 --> 00:12:36,320
actually this concept is called magic

351
00:12:36,320 --> 00:12:37,519
number

352
00:12:37,519 --> 00:12:39,920
how many people heard about that

353
00:12:39,920 --> 00:12:43,040
think of god answers again so nice so

354
00:12:43,040 --> 00:12:45,360
basically fio works in this way so they

355
00:12:45,360 --> 00:12:47,920
try find this to find this information

356
00:12:47,920 --> 00:12:48,720
in

357
00:12:48,720 --> 00:12:50,399
so this file

358
00:12:50,399 --> 00:12:51,600
here

359
00:12:51,600 --> 00:12:53,279
this file here

360
00:12:53,279 --> 00:12:55,279
have a magic number stored in particular

361
00:12:55,279 --> 00:12:56,320
place

362
00:12:56,320 --> 00:12:58,639
in the beginning of the file

363
00:12:58,639 --> 00:13:00,639
you see so that's this is the

364
00:13:00,639 --> 00:13:03,279
informations that the file use has a

365
00:13:03,279 --> 00:13:05,040
base to find that

366
00:13:05,040 --> 00:13:07,360
but philip how this works so actually of

367
00:13:07,360 --> 00:13:09,440
course fios is compiling inside of the

368
00:13:09,440 --> 00:13:11,519
uni unix platform they have a database

369
00:13:11,519 --> 00:13:13,440
inside of that to check

370
00:13:13,440 --> 00:13:16,079
those magic numbers not only

371
00:13:16,079 --> 00:13:17,760
one specifically but

372
00:13:17,760 --> 00:13:21,680
let's see here i think i download here

373
00:13:21,680 --> 00:13:24,079
i don't remember but i think every yeah

374
00:13:24,079 --> 00:13:25,440
file

375
00:13:25,440 --> 00:13:26,800
magic

376
00:13:26,800 --> 00:13:28,560
magic gear

377
00:13:28,560 --> 00:13:29,600
yeah

378
00:13:29,600 --> 00:13:31,600
and let's see take a look that this is

379
00:13:31,600 --> 00:13:33,120
the

380
00:13:33,120 --> 00:13:35,600
database i download this from the debian

381
00:13:35,600 --> 00:13:38,399
to see how database works so let's check

382
00:13:38,399 --> 00:13:39,920
for example

383
00:13:39,920 --> 00:13:42,479
python

384
00:13:43,279 --> 00:13:46,079
this is a kind this is a kind of

385
00:13:46,079 --> 00:13:49,360
rules actually or magic number

386
00:13:49,360 --> 00:13:52,000
that the file the

387
00:13:52,000 --> 00:13:55,279
file used when they check the file

388
00:13:55,279 --> 00:13:57,600
right so as you can see here some

389
00:13:57,600 --> 00:14:00,399
informations like this take a look this

390
00:14:00,399 --> 00:14:02,639
interesting they're using some

391
00:14:02,639 --> 00:14:03,760
rules

392
00:14:03,760 --> 00:14:07,680
and strings to define those files right

393
00:14:07,680 --> 00:14:11,040
so if you see here three double quotes

394
00:14:11,040 --> 00:14:14,160
and if i

395
00:14:14,240 --> 00:14:17,279
if i return here for example

396
00:14:17,279 --> 00:14:18,560
let's

397
00:14:18,560 --> 00:14:20,399
um

398
00:14:20,399 --> 00:14:22,639
change something here

399
00:14:22,639 --> 00:14:25,279
so if i

400
00:14:25,279 --> 00:14:27,120
change here for example and put those

401
00:14:27,120 --> 00:14:29,680
three quotes and i will save this

402
00:14:29,680 --> 00:14:32,880
let's see if the description change

403
00:14:32,880 --> 00:14:34,240
you see

404
00:14:34,240 --> 00:14:35,279
why

405
00:14:35,279 --> 00:14:37,760
the question is simple why change

406
00:14:37,760 --> 00:14:39,519
because i changed the reference of the

407
00:14:39,519 --> 00:14:41,440
magical number in this specifically file

408
00:14:41,440 --> 00:14:42,560
right

409
00:14:42,560 --> 00:14:46,959
so if i change once again

410
00:14:48,480 --> 00:14:53,839
um let's check here percent pdf the 1.8

411
00:14:53,839 --> 00:14:55,440
save

412
00:14:55,440 --> 00:14:56,320
and

413
00:14:56,320 --> 00:15:00,639
now we have a what we have a pdf file

414
00:15:00,639 --> 00:15:03,120
it's a simple magic number manipulation

415
00:15:03,120 --> 00:15:04,639
of course it's a simple because it's a

416
00:15:04,639 --> 00:15:06,639
text file i'm not talking about the pe

417
00:15:06,639 --> 00:15:09,519
portable executable or alpha for unix or

418
00:15:09,519 --> 00:15:11,600
other or macho for a mac os no it's a

419
00:15:11,600 --> 00:15:12,399
software

420
00:15:12,399 --> 00:15:14,560
for a text file right

421
00:15:14,560 --> 00:15:15,839
and

422
00:15:15,839 --> 00:15:18,480
if you are using for example pdf id is a

423
00:15:18,480 --> 00:15:22,480
tool to check some strings in a pdf file

424
00:15:22,480 --> 00:15:25,199
take a look this

425
00:15:25,279 --> 00:15:28,320
the identification is

426
00:15:28,320 --> 00:15:30,639
these tools

427
00:15:30,639 --> 00:15:32,320
understand that this file is really a

428
00:15:32,320 --> 00:15:33,839
pgf

429
00:15:33,839 --> 00:15:35,920
but it's not a pdf

430
00:15:35,920 --> 00:15:39,680
it's a python is that correct or not

431
00:15:39,680 --> 00:15:40,959
right

432
00:15:40,959 --> 00:15:42,800
so i am

433
00:15:42,800 --> 00:15:45,600
manipulate something but the tool

434
00:15:45,600 --> 00:15:47,920
because of that the tool is important to

435
00:15:47,920 --> 00:15:49,600
give you the result but you need to

436
00:15:49,600 --> 00:15:51,839
understand the result of those tools

437
00:15:51,839 --> 00:15:54,079
malware analysis is a very nice topic to

438
00:15:54,079 --> 00:15:56,560
understand about the reverse engineering

439
00:15:56,560 --> 00:15:59,040
but we need to understand those bases

440
00:15:59,040 --> 00:16:01,040
because when you perform something you

441
00:16:01,040 --> 00:16:02,880
can understand if you attacker are using

442
00:16:02,880 --> 00:16:04,560
some techniques

443
00:16:04,560 --> 00:16:05,839
since the base

444
00:16:05,839 --> 00:16:09,040
to advance it right so other things

445
00:16:09,040 --> 00:16:11,519
interesting here is about that let me

446
00:16:11,519 --> 00:16:12,720
show you

447
00:16:12,720 --> 00:16:14,959
let me go to the windows

448
00:16:14,959 --> 00:16:18,000
i think i have here yeah windows

449
00:16:18,000 --> 00:16:19,360
and i have here

450
00:16:19,360 --> 00:16:20,880
some files

451
00:16:20,880 --> 00:16:26,160
okay and not here let me go to the

452
00:16:26,160 --> 00:16:28,320
start with linux i think it's better

453
00:16:28,320 --> 00:16:30,240
linux

454
00:16:30,240 --> 00:16:33,199
so i have here some files okay

455
00:16:33,199 --> 00:16:35,680
let me check if this is executable or

456
00:16:35,680 --> 00:16:37,040
not

457
00:16:37,040 --> 00:16:39,759
okay this is a elf binary okay it's

458
00:16:39,759 --> 00:16:44,160
executable so let me check another

459
00:16:46,320 --> 00:16:48,839
maybe it's a text okay

460
00:16:48,839 --> 00:16:51,120
so take a look at this

461
00:16:51,120 --> 00:16:52,480
another

462
00:16:52,480 --> 00:16:54,399
super simple

463
00:16:54,399 --> 00:16:56,639
tools to using in the first steps in the

464
00:16:56,639 --> 00:16:57,600
first

465
00:16:57,600 --> 00:16:59,600
when you talk about the more analysis is

466
00:16:59,600 --> 00:17:01,279
strings right

467
00:17:01,279 --> 00:17:04,000
dash o to see all those things now you

468
00:17:04,000 --> 00:17:05,119
check for

469
00:17:05,119 --> 00:17:06,799
the first errables

470
00:17:06,799 --> 00:17:09,839
okay and i put the pipels here to start

471
00:17:09,839 --> 00:17:11,760
the beginning

472
00:17:11,760 --> 00:17:13,520
take a look at this what kind of the

473
00:17:13,520 --> 00:17:15,439
first information you can find by

474
00:17:15,439 --> 00:17:17,119
strings

475
00:17:17,119 --> 00:17:18,880
this is the first string mentioned by

476
00:17:18,880 --> 00:17:20,959
these tools right

477
00:17:20,959 --> 00:17:22,319
but

478
00:17:22,319 --> 00:17:24,640
when you using

479
00:17:24,640 --> 00:17:26,480
uh

480
00:17:26,480 --> 00:17:27,359
x

481
00:17:27,359 --> 00:17:30,160
uh to to find some hexadecimal to to to

482
00:17:30,160 --> 00:17:32,400
changing to convert actually the

483
00:17:32,400 --> 00:17:34,320
the hexadecimal information for the

484
00:17:34,320 --> 00:17:36,720
string

485
00:17:37,360 --> 00:17:39,840
let's see what happened now in this for

486
00:17:39,840 --> 00:17:40,799
the same

487
00:17:40,799 --> 00:17:44,520
noise xt

488
00:17:48,320 --> 00:17:51,520
this is the first string

489
00:17:52,400 --> 00:17:55,280
so something happened here

490
00:17:55,280 --> 00:17:58,678
put it here

491
00:18:00,799 --> 00:18:02,400
not yet

492
00:18:02,400 --> 00:18:05,600
not yet so where is the

493
00:18:05,600 --> 00:18:06,480
the

494
00:18:06,480 --> 00:18:10,559
the reference of the strings remember

495
00:18:13,360 --> 00:18:16,240
not yet

496
00:18:16,240 --> 00:18:18,559
okay

497
00:18:18,640 --> 00:18:20,960
that's me changing

498
00:18:20,960 --> 00:18:24,320
how many bytes 60 600

499
00:18:24,320 --> 00:18:26,639
maybe

500
00:18:27,200 --> 00:18:29,440
yeah here

501
00:18:29,440 --> 00:18:31,280
this is the reference of the string the

502
00:18:31,280 --> 00:18:33,120
first string remember

503
00:18:33,120 --> 00:18:34,799
yes or no

504
00:18:34,799 --> 00:18:35,919
yeah

505
00:18:35,919 --> 00:18:37,679
but here

506
00:18:37,679 --> 00:18:40,080
it's really the first string

507
00:18:40,080 --> 00:18:41,280
and when you're looking from the

508
00:18:41,280 --> 00:18:43,280
structure of the alfie

509
00:18:43,280 --> 00:18:46,480
you can understand what those

510
00:18:46,480 --> 00:18:47,679
16

511
00:18:47,679 --> 00:18:50,080
reference years for example

512
00:18:50,080 --> 00:18:51,440
um

513
00:18:51,440 --> 00:18:53,280
meaning actually when you're looking

514
00:18:53,280 --> 00:18:55,679
from the structure of the alpha i will

515
00:18:55,679 --> 00:18:56,799
show you after

516
00:18:56,799 --> 00:18:59,039
but here i have a one interesting point

517
00:18:59,039 --> 00:19:00,720
so why

518
00:19:00,720 --> 00:19:03,520
those ladders

519
00:19:03,600 --> 00:19:05,919
doesn't appears when you executing the

520
00:19:05,919 --> 00:19:07,679
string command

521
00:19:07,679 --> 00:19:11,480
what do you think about that

522
00:19:11,520 --> 00:19:14,160
to shorts

523
00:19:15,280 --> 00:19:17,440
maybe it's a good answer

524
00:19:17,440 --> 00:19:18,960
it's a good answer

525
00:19:18,960 --> 00:19:23,880
and the explanation is simple it's here

526
00:19:24,640 --> 00:19:27,600
in the beginning of this manual

527
00:19:27,600 --> 00:19:29,840
um

528
00:19:30,880 --> 00:19:32,080
no not this

529
00:19:32,080 --> 00:19:33,120
yeah

530
00:19:33,120 --> 00:19:35,919
what is the explanation

531
00:19:35,919 --> 00:19:36,720
oh

532
00:19:36,720 --> 00:19:39,120
what is is a key

533
00:19:39,120 --> 00:19:41,600
strings yeah thank you

534
00:19:41,600 --> 00:19:43,200
one letter

535
00:19:43,200 --> 00:19:45,520
here

536
00:19:46,640 --> 00:19:49,039
this is the answer it's a short

537
00:19:49,039 --> 00:19:50,080
but

538
00:19:50,080 --> 00:19:51,760
it's after

539
00:19:51,760 --> 00:19:53,200
four letters

540
00:19:53,200 --> 00:19:54,799
you see

541
00:19:54,799 --> 00:19:56,000
simple

542
00:19:56,000 --> 00:19:57,760
is basis

543
00:19:57,760 --> 00:19:59,280
and we need to understand those basis so

544
00:19:59,280 --> 00:20:01,520
how the binary works and all those

545
00:20:01,520 --> 00:20:03,120
things but not only that but how the

546
00:20:03,120 --> 00:20:04,840
tools for example

547
00:20:04,840 --> 00:20:10,240
um let me go to the file here once again

548
00:20:10,240 --> 00:20:13,120
i will talking about the

549
00:20:13,120 --> 00:20:15,840
structure of the eu the linux right the

550
00:20:15,840 --> 00:20:16,880
unix

551
00:20:16,880 --> 00:20:18,960
where is the file here when they define

552
00:20:18,960 --> 00:20:21,600
the structure it's here f dot elf dot

553
00:20:21,600 --> 00:20:22,799
that

554
00:20:22,799 --> 00:20:24,480
dash eight

555
00:20:24,480 --> 00:20:25,919
um

556
00:20:25,919 --> 00:20:27,440
locate

557
00:20:27,440 --> 00:20:30,480
elf dot dash eight

558
00:20:30,480 --> 00:20:34,600
is in the beginning here

559
00:20:34,720 --> 00:20:37,039
here

560
00:20:38,080 --> 00:20:38,880
cool

561
00:20:38,880 --> 00:20:41,880
and

562
00:20:48,720 --> 00:20:52,000
so here is the structure of the pdf the

563
00:20:52,000 --> 00:20:53,200
elf

564
00:20:53,200 --> 00:20:54,960
and here we can understand how this

565
00:20:54,960 --> 00:20:57,039
works since the beginning for example we

566
00:20:57,039 --> 00:20:59,360
have a specific array of the the

567
00:20:59,360 --> 00:21:01,039
information specifically bytes in the

568
00:21:01,039 --> 00:21:03,679
beginning how is uh

569
00:21:03,679 --> 00:21:05,120
created those

570
00:21:05,120 --> 00:21:07,919
words as words the words and so on and

571
00:21:07,919 --> 00:21:08,880
so on

572
00:21:08,880 --> 00:21:10,880
and and the header of the

573
00:21:10,880 --> 00:21:13,120
the healthy that we have the health the

574
00:21:13,120 --> 00:21:15,120
elf file that we have here

575
00:21:15,120 --> 00:21:17,200
in the beginning we have the first array

576
00:21:17,200 --> 00:21:20,159
of that we have 16 bytes right

577
00:21:20,159 --> 00:21:23,200
the first array is called identity the

578
00:21:23,200 --> 00:21:25,039
identity actually

579
00:21:25,039 --> 00:21:27,200
and what kind of information we have

580
00:21:27,200 --> 00:21:30,480
inside of this specifically 16 bytes we

581
00:21:30,480 --> 00:21:32,240
have a magic number and others

582
00:21:32,240 --> 00:21:34,000
information very nice what kind of

583
00:21:34,000 --> 00:21:36,799
informations we have so if you go there

584
00:21:36,799 --> 00:21:38,159
you can see

585
00:21:38,159 --> 00:21:41,360
this words the letters elf take a look

586
00:21:41,360 --> 00:21:42,640
this

587
00:21:42,640 --> 00:21:46,720
so this is the first position right

588
00:21:46,720 --> 00:21:47,679
zero

589
00:21:47,679 --> 00:21:50,559
and this magic number the second is e

590
00:21:50,559 --> 00:21:53,840
third l fourth f f

591
00:21:53,840 --> 00:21:57,199
so this is the structure of the

592
00:21:57,520 --> 00:21:59,679
the the the alpha file

593
00:21:59,679 --> 00:22:01,840
not only that but if you go there you

594
00:22:01,840 --> 00:22:03,679
can understand those positions for

595
00:22:03,679 --> 00:22:04,880
example

596
00:22:04,880 --> 00:22:06,320
let me

597
00:22:06,320 --> 00:22:09,760
split other things here

598
00:22:09,760 --> 00:22:10,840
and

599
00:22:10,840 --> 00:22:13,760
um so let me compare

600
00:22:13,760 --> 00:22:16,880
some files to show you here is xd

601
00:22:16,880 --> 00:22:18,590
um any 32

602
00:22:18,590 --> 00:22:20,240
[Music]

603
00:22:20,240 --> 00:22:21,520
16 better

604
00:22:21,520 --> 00:22:23,679
airbus

605
00:22:23,679 --> 00:22:26,880
and another is xt

606
00:22:26,880 --> 00:22:29,679
36

607
00:22:33,200 --> 00:22:34,559
16

608
00:22:34,559 --> 00:22:36,159
um

609
00:22:36,159 --> 00:22:39,679
linux i think it's i have a thing 32

610
00:22:39,679 --> 00:22:41,120
yeah

611
00:22:41,120 --> 00:22:41,919
okay

612
00:22:41,919 --> 00:22:44,000
so let's comp you can see there i think

613
00:22:44,000 --> 00:22:45,360
you can see

614
00:22:45,360 --> 00:22:46,720
okay so

615
00:22:46,720 --> 00:22:48,640
if you see here in the beginning

616
00:22:48,640 --> 00:22:50,240
is the same right the same information

617
00:22:50,240 --> 00:22:51,600
that you can find here

618
00:22:51,600 --> 00:22:54,720
so those reference about the structure

619
00:22:54,720 --> 00:22:56,240
of the elf

620
00:22:56,240 --> 00:22:59,840
and when you go there

621
00:22:59,840 --> 00:23:00,799
let's

622
00:23:00,799 --> 00:23:02,240
compare here

623
00:23:02,240 --> 00:23:04,320
about those informations

624
00:23:04,320 --> 00:23:06,240
let me

625
00:23:06,240 --> 00:23:07,440
see here

626
00:23:07,440 --> 00:23:11,840
so and the and this position

627
00:23:11,919 --> 00:23:13,280
if is

628
00:23:13,280 --> 00:23:15,039
0 2

629
00:23:15,039 --> 00:23:15,840
is

630
00:23:15,840 --> 00:23:17,280
what

631
00:23:17,280 --> 00:23:20,720
16 bytes 64 bytes right

632
00:23:20,720 --> 00:23:23,280
so and the second one

633
00:23:23,280 --> 00:23:27,120
is not two is zero one why

634
00:23:27,120 --> 00:23:28,880
because

635
00:23:28,880 --> 00:23:30,400
is

636
00:23:30,400 --> 00:23:31,840
32 bytes

637
00:23:31,840 --> 00:23:34,159
see so let's check another

638
00:23:34,159 --> 00:23:37,200
so about the structure it's the same

639
00:23:37,200 --> 00:23:40,080
case the position seven so if you if you

640
00:23:40,080 --> 00:23:41,120
see some

641
00:23:41,120 --> 00:23:42,159
difference

642
00:23:42,159 --> 00:23:43,840
we can check

643
00:23:43,840 --> 00:23:46,559
how the tools works when you're looking

644
00:23:46,559 --> 00:23:50,480
from the binary so that's the key so we

645
00:23:50,480 --> 00:23:52,720
need to understand how

646
00:23:52,720 --> 00:23:54,480
when you use some tools how these tools

647
00:23:54,480 --> 00:23:55,840
can help you

648
00:23:55,840 --> 00:23:58,080
but you need to understand deeply not

649
00:23:58,080 --> 00:24:00,480
only the two but the concepts of the

650
00:24:00,480 --> 00:24:01,520
binary

651
00:24:01,520 --> 00:24:03,440
that's important is that the idea of

652
00:24:03,440 --> 00:24:05,840
this conversation right

653
00:24:05,840 --> 00:24:07,120
so cool

654
00:24:07,120 --> 00:24:08,400
this is the when you talk about the

655
00:24:08,400 --> 00:24:10,080
portables equitable i just mentioned i

656
00:24:10,080 --> 00:24:11,760
had some instructor about that it's very

657
00:24:11,760 --> 00:24:14,000
simple you have a sample here you have

658
00:24:14,000 --> 00:24:15,919
it divided in two ways a habit in

659
00:24:15,919 --> 00:24:16,880
session

660
00:24:16,880 --> 00:24:18,559
and inside of the header we have many

661
00:24:18,559 --> 00:24:20,080
informations like

662
00:24:20,080 --> 00:24:21,440
uh um

663
00:24:21,440 --> 00:24:24,880
mz signatures pe signatures and stuff

664
00:24:24,880 --> 00:24:26,159
like that

665
00:24:26,159 --> 00:24:28,000
and you have the sessions and this

666
00:24:28,000 --> 00:24:29,840
specifically session is usually the

667
00:24:29,840 --> 00:24:32,480
place that usually is the place that the

668
00:24:32,480 --> 00:24:34,240
attacker using to inputting something

669
00:24:34,240 --> 00:24:35,679
malicious like

670
00:24:35,679 --> 00:24:37,440
in this um

671
00:24:37,440 --> 00:24:39,440
text doc data

672
00:24:39,440 --> 00:24:41,600
or something like this and this specific

673
00:24:41,600 --> 00:24:42,559
session

674
00:24:42,559 --> 00:24:46,480
doc or s or c usually is the

675
00:24:46,480 --> 00:24:49,120
the session using for the icon or the

676
00:24:49,120 --> 00:24:50,480
the binary

677
00:24:50,480 --> 00:24:52,559
data piece to the users okay

678
00:24:52,559 --> 00:24:54,480
nice and this is the elf as i mentioned

679
00:24:54,480 --> 00:24:56,960
that it's almost almost it's not the

680
00:24:56,960 --> 00:24:58,880
same but almost the same they have a

681
00:24:58,880 --> 00:25:01,679
header session and stuff like that okay

682
00:25:01,679 --> 00:25:03,440
so nice so let's talk about other

683
00:25:03,440 --> 00:25:06,480
structure about the pd the pdf

684
00:25:06,480 --> 00:25:09,760
okay so pdf has specifically four stroke

685
00:25:09,760 --> 00:25:12,159
four uh parts actually the header the

686
00:25:12,159 --> 00:25:14,960
body cross reference table or x table

687
00:25:14,960 --> 00:25:18,080
and trailer right so basically is the v

688
00:25:18,080 --> 00:25:21,039
in this way so this print but basically

689
00:25:21,039 --> 00:25:22,480
is from the

690
00:25:22,480 --> 00:25:25,200
dj students blog it's the person that

691
00:25:25,200 --> 00:25:27,360
the researcher already know about our

692
00:25:27,360 --> 00:25:29,360
analysis and other things like

693
00:25:29,360 --> 00:25:33,760
this topic specifically and this is the

694
00:25:33,840 --> 00:25:36,400
how the pdf organized those things right

695
00:25:36,400 --> 00:25:38,640
so you can see the header and you see

696
00:25:38,640 --> 00:25:40,400
the body when you see the

697
00:25:40,400 --> 00:25:43,919
funny things like a color you know

698
00:25:43,919 --> 00:25:46,400
page images and the cross reference

699
00:25:46,400 --> 00:25:47,760
table you have a locations of the

700
00:25:47,760 --> 00:25:50,240
objects ethan the file for access random

701
00:25:50,240 --> 00:25:52,960
leica you have a specifically first

702
00:25:52,960 --> 00:25:56,240
object like a root object okay and you

703
00:25:56,240 --> 00:25:58,880
have others two child

704
00:25:58,880 --> 00:26:01,279
and after that in object two or three

705
00:26:01,279 --> 00:26:03,840
remember of this kind of three you have

706
00:26:03,840 --> 00:26:05,919
another reference so object four and

707
00:26:05,919 --> 00:26:08,080
five may connect it to the object two

708
00:26:08,080 --> 00:26:10,559
others objects connect to

709
00:26:10,559 --> 00:26:12,080
an object three

710
00:26:12,080 --> 00:26:14,799
all those uh objects are reference

711
00:26:14,799 --> 00:26:16,720
each one okay

712
00:26:16,720 --> 00:26:18,640
nice i will explain more when you talk

713
00:26:18,640 --> 00:26:19,919
about the virtual machine i think it's

714
00:26:19,919 --> 00:26:24,840
easier to explain this and um

715
00:26:28,400 --> 00:26:29,600
no

716
00:26:29,600 --> 00:26:30,720
okay

717
00:26:30,720 --> 00:26:32,480
let me return here my

718
00:26:32,480 --> 00:26:33,760
pdf

719
00:26:33,760 --> 00:26:36,320
files

720
00:26:36,880 --> 00:26:40,320
okay here i have some pdfs and um

721
00:26:40,320 --> 00:26:42,960
for example pdf id is a tool from dj

722
00:26:42,960 --> 00:26:44,720
stevens did this even create these tools

723
00:26:44,720 --> 00:26:47,679
basically so if you see here i have in

724
00:26:47,679 --> 00:26:51,200
this case this pdf they have the header

725
00:26:51,200 --> 00:26:52,640
small

726
00:26:52,640 --> 00:26:53,440
but

727
00:26:53,440 --> 00:26:54,960
okay

728
00:26:54,960 --> 00:26:57,600
we have a header as i mentioned it

729
00:26:57,600 --> 00:27:00,400
we have the body with many things like

730
00:27:00,400 --> 00:27:02,240
pages and we have

731
00:27:02,240 --> 00:27:06,080
objects in this case we have a 6 63

732
00:27:06,080 --> 00:27:07,279
objects

733
00:27:07,279 --> 00:27:09,120
and we have

734
00:27:09,120 --> 00:27:11,840
22 streamings

735
00:27:11,840 --> 00:27:14,159
usually these streams is apart important

736
00:27:14,159 --> 00:27:16,240
inside of the pdf that the attacker

737
00:27:16,240 --> 00:27:17,760
using to put in something malicious

738
00:27:17,760 --> 00:27:19,360
thank you

739
00:27:19,360 --> 00:27:22,159
they can use of course the url

740
00:27:22,159 --> 00:27:24,240
you know in other parts but usually they

741
00:27:24,240 --> 00:27:26,720
put in something obfuscated encoded

742
00:27:26,720 --> 00:27:29,279
inside of this streaming okay so they

743
00:27:29,279 --> 00:27:31,679
need to using something to uncompress

744
00:27:31,679 --> 00:27:33,840
things and of course to check those

745
00:27:33,840 --> 00:27:35,600
informations we need what uncompressed

746
00:27:35,600 --> 00:27:39,200
right okay so let me share other

747
00:27:39,200 --> 00:27:40,640
um

748
00:27:40,640 --> 00:27:42,720
other pdf i have here for example no

749
00:27:42,720 --> 00:27:45,520
photo file pdf

750
00:27:45,520 --> 00:27:49,760
pdf id i have a thor

751
00:27:49,760 --> 00:27:54,399
in this case nice pdf id

752
00:27:55,440 --> 00:27:58,080
in this case it's almost different it's

753
00:27:58,080 --> 00:28:03,440
is not to not too much object 18.

754
00:28:03,440 --> 00:28:04,880
not

755
00:28:04,880 --> 00:28:06,559
streaming

756
00:28:06,559 --> 00:28:08,159
16 streaming

757
00:28:08,159 --> 00:28:10,080
and they have here and specifically open

758
00:28:10,080 --> 00:28:10,960
action

759
00:28:10,960 --> 00:28:14,640
open action yeah open action so it means

760
00:28:14,640 --> 00:28:16,559
one thing very interesting when you have

761
00:28:16,559 --> 00:28:19,600
this flag and a pdf it means that the

762
00:28:19,600 --> 00:28:21,919
user don't need to interact

763
00:28:21,919 --> 00:28:25,919
more than once with this pdf the only

764
00:28:25,919 --> 00:28:28,080
thing the user need to do is to open the

765
00:28:28,080 --> 00:28:30,720
pdf and after that something happened

766
00:28:30,720 --> 00:28:32,720
automatically this is the functions of

767
00:28:32,720 --> 00:28:34,159
the open action

768
00:28:34,159 --> 00:28:36,000
so that's interesting to see to

769
00:28:36,000 --> 00:28:38,000
investigate more about that they haven't

770
00:28:38,000 --> 00:28:40,640
specifically object streaming here

771
00:28:40,640 --> 00:28:43,520
so another point to investigate

772
00:28:43,520 --> 00:28:44,399
and

773
00:28:44,399 --> 00:28:46,320
and as you can see and i show you about

774
00:28:46,320 --> 00:28:48,720
the pdf we have a different things here

775
00:28:48,720 --> 00:28:49,600
so

776
00:28:49,600 --> 00:28:51,760
some pdf has more than

777
00:28:51,760 --> 00:28:54,559
15 objects so it's a too big

778
00:28:54,559 --> 00:28:57,440
and more than 20 streamings is too big

779
00:28:57,440 --> 00:28:59,440
that we need to investigate as the same

780
00:28:59,440 --> 00:29:02,399
case in this case it's not too big

781
00:29:02,399 --> 00:29:04,720
it's not too much object it's just 18

782
00:29:04,720 --> 00:29:06,480
but

783
00:29:06,480 --> 00:29:08,480
maybe each one of this object has any

784
00:29:08,480 --> 00:29:11,039
streaming so

785
00:29:11,039 --> 00:29:12,240
becomes this more difficult to

786
00:29:12,240 --> 00:29:13,760
investigate because we need to look in

787
00:29:13,760 --> 00:29:16,480
for each streaming to see what kind of

788
00:29:16,480 --> 00:29:18,559
thing we can find there okay

789
00:29:18,559 --> 00:29:21,520
nice let me return it to the demo and i

790
00:29:21,520 --> 00:29:23,600
will finish my presentation okay

791
00:29:23,600 --> 00:29:25,360
and

792
00:29:25,360 --> 00:29:28,000
so i have here one specifically fio in

793
00:29:28,000 --> 00:29:30,240
pdf that i received

794
00:29:30,240 --> 00:29:31,520
like a cv

795
00:29:31,520 --> 00:29:33,200
something the people

796
00:29:33,200 --> 00:29:35,279
receive if the people works in hr team

797
00:29:35,279 --> 00:29:36,240
receive

798
00:29:36,240 --> 00:29:38,399
every day the pdf okay

799
00:29:38,399 --> 00:29:39,679
so first

800
00:29:39,679 --> 00:29:43,200
i checked the version of course i

801
00:29:43,200 --> 00:29:44,159
i

802
00:29:44,159 --> 00:29:46,480
check other things if is if this r5 it's

803
00:29:46,480 --> 00:29:48,799
really pdf or not the second tool that i

804
00:29:48,799 --> 00:29:51,120
used here is a pdf id

805
00:29:51,120 --> 00:29:53,039
right to check how many objects i have

806
00:29:53,039 --> 00:29:55,279
here so i have here how many objects

807
00:29:55,279 --> 00:29:58,240
15. in this case i have a look

808
00:29:58,240 --> 00:30:01,360
just only two streams okay and but they

809
00:30:01,360 --> 00:30:04,000
have here if you see

810
00:30:04,000 --> 00:30:07,399
we have here

811
00:30:08,080 --> 00:30:10,480
five maybe or two

812
00:30:10,480 --> 00:30:12,640
js reference javascript and other

813
00:30:12,640 --> 00:30:14,720
specifically javascript and in this case

814
00:30:14,720 --> 00:30:16,640
is three and the same case they have an

815
00:30:16,640 --> 00:30:19,760
open action here as you can see so

816
00:30:19,760 --> 00:30:21,120
very interesting when i made this

817
00:30:21,120 --> 00:30:22,880
investigation because

818
00:30:22,880 --> 00:30:25,200
they have a specific object

819
00:30:25,200 --> 00:30:26,960
and they have a specifically open action

820
00:30:26,960 --> 00:30:28,399
and they have

821
00:30:28,399 --> 00:30:30,720
maybe five javascript

822
00:30:30,720 --> 00:30:33,360
so maybe those things are linked so i

823
00:30:33,360 --> 00:30:35,520
need to investigate or i investigate

824
00:30:35,520 --> 00:30:36,720
more to

825
00:30:36,720 --> 00:30:38,720
to see about that other tool that i use

826
00:30:38,720 --> 00:30:41,600
here in this case is pdf parser

827
00:30:41,600 --> 00:30:44,240
is a is a part of the package of those

828
00:30:44,240 --> 00:30:45,120
tools

829
00:30:45,120 --> 00:30:47,520
and you can find the in the in cal linux

830
00:30:47,520 --> 00:30:50,799
or parachute s and you can find there so

831
00:30:50,799 --> 00:30:54,240
just to see some comments that i can

832
00:30:54,240 --> 00:30:57,200
search inside of the the pdf

833
00:30:57,200 --> 00:30:59,440
so first of all you

834
00:30:59,440 --> 00:31:00,880
compare

835
00:31:00,880 --> 00:31:02,880
this reference remember when i use pdf

836
00:31:02,880 --> 00:31:05,840
id i found five javascript so this is

837
00:31:05,840 --> 00:31:09,279
the first one the reference object one

838
00:31:09,279 --> 00:31:11,760
object seven and object

839
00:31:11,760 --> 00:31:16,159
12. so three javascript another is js

840
00:31:16,159 --> 00:31:19,120
only two right if i'm correct only two

841
00:31:19,120 --> 00:31:22,399
okay nice only two so okay i used two

842
00:31:22,399 --> 00:31:23,919
different tools

843
00:31:23,919 --> 00:31:26,159
to achieve the same action not the same

844
00:31:26,159 --> 00:31:27,840
but the same result because just to

845
00:31:27,840 --> 00:31:29,519
compare the results

846
00:31:29,519 --> 00:31:30,559
but

847
00:31:30,559 --> 00:31:33,039
now i need to looking more deeply about

848
00:31:33,039 --> 00:31:34,559
those javascript because for me it's

849
00:31:34,559 --> 00:31:36,720
totally suspicious right is suspicious

850
00:31:36,720 --> 00:31:38,880
for you

851
00:31:38,880 --> 00:31:41,760
our script with pdf

852
00:31:41,760 --> 00:31:44,000
is very suspicious so it's malicious so

853
00:31:44,000 --> 00:31:46,159
let's finish the presentation because

854
00:31:46,159 --> 00:31:48,960
the idea is to yeah no okay

855
00:31:48,960 --> 00:31:51,919
so the the next i using the

856
00:31:51,919 --> 00:31:54,399
this this flag because they're these two

857
00:31:54,399 --> 00:31:56,880
looking from the raw data

858
00:31:56,880 --> 00:31:59,519
for filters to actually to open all

859
00:31:59,519 --> 00:32:01,039
those informations inside of this

860
00:32:01,039 --> 00:32:03,919
specifically pdf okay so if you see here

861
00:32:03,919 --> 00:32:05,279
so let's

862
00:32:05,279 --> 00:32:07,760
walk through for this specific pdx so we

863
00:32:07,760 --> 00:32:09,600
have here the object one and take a look

864
00:32:09,600 --> 00:32:11,840
at this three remember the structure of

865
00:32:11,840 --> 00:32:12,960
the pdf

866
00:32:12,960 --> 00:32:16,240
object one referring those six objects

867
00:32:16,240 --> 00:32:18,880
remember those the three object one and

868
00:32:18,880 --> 00:32:21,279
more than one the child files and take a

869
00:32:21,279 --> 00:32:23,360
look this

870
00:32:23,360 --> 00:32:25,120
one interesting information

871
00:32:25,120 --> 00:32:29,440
so the open action is totally linked

872
00:32:29,440 --> 00:32:30,320
with

873
00:32:30,320 --> 00:32:31,919
a javascript so

874
00:32:31,919 --> 00:32:34,320
i can suppose now

875
00:32:34,320 --> 00:32:35,519
that

876
00:32:35,519 --> 00:32:37,360
when the user opened the pdf what

877
00:32:37,360 --> 00:32:38,559
happened

878
00:32:38,559 --> 00:32:41,039
some javascript running right is that

879
00:32:41,039 --> 00:32:42,399
correct

880
00:32:42,399 --> 00:32:44,000
i'm supposing because

881
00:32:44,000 --> 00:32:46,240
that's this is the information but here

882
00:32:46,240 --> 00:32:48,720
it's interesting i heard something or

883
00:32:48,720 --> 00:32:50,559
many things i heard actually from the

884
00:32:50,559 --> 00:32:51,919
some guys

885
00:32:51,919 --> 00:32:55,519
that ah this tool this doesn't works

886
00:32:55,519 --> 00:32:57,039
why because

887
00:32:57,039 --> 00:32:59,840
appears some efforts for us

888
00:32:59,840 --> 00:33:01,600
actually is not er

889
00:33:01,600 --> 00:33:03,840
i am not using in this moment the

890
00:33:03,840 --> 00:33:06,880
correct tools to find this information

891
00:33:06,880 --> 00:33:08,720
that of course some

892
00:33:08,720 --> 00:33:11,840
sometimes we try to use in in problem

893
00:33:11,840 --> 00:33:14,720
happen of course but in this case or in

894
00:33:14,720 --> 00:33:17,440
many cases happen that you are not using

895
00:33:17,440 --> 00:33:18,960
the correct tool

896
00:33:18,960 --> 00:33:21,120
to find the information because of that

897
00:33:21,120 --> 00:33:22,960
it's important to understand those bases

898
00:33:22,960 --> 00:33:25,440
right

899
00:33:25,440 --> 00:33:26,480
nice

900
00:33:26,480 --> 00:33:28,399
so let's continue so we have this

901
00:33:28,399 --> 00:33:30,640
reference and open action link it with

902
00:33:30,640 --> 00:33:33,679
javascript cool so let's go to the next

903
00:33:33,679 --> 00:33:36,559
object two nothing to to lead to c

904
00:33:36,559 --> 00:33:38,960
object three take a look this object

905
00:33:38,960 --> 00:33:42,559
four is another part of those this three

906
00:33:42,559 --> 00:33:44,720
referring object eight and nine remember

907
00:33:44,720 --> 00:33:47,840
how many objects we have here

908
00:33:47,840 --> 00:33:49,519
fifteen

909
00:33:49,519 --> 00:33:50,960
okay

910
00:33:50,960 --> 00:33:52,960
in object 7 we have another reference

911
00:33:52,960 --> 00:33:55,519
object 10 and not only that but one of

912
00:33:55,519 --> 00:33:57,200
those reference is

913
00:33:57,200 --> 00:33:59,440
remember of the link

914
00:33:59,440 --> 00:34:01,840
about the javascript object 8 is more

915
00:34:01,840 --> 00:34:02,960
you know

916
00:34:02,960 --> 00:34:06,480
shiny things like a font image object

917
00:34:06,480 --> 00:34:09,040
nine you're referring the four because

918
00:34:09,040 --> 00:34:10,639
this object is connected with another

919
00:34:10,639 --> 00:34:11,520
object

920
00:34:11,520 --> 00:34:13,280
referring on others

921
00:34:13,280 --> 00:34:15,359
in object 10 remember they have the

922
00:34:15,359 --> 00:34:17,440
specific reference of javascript but

923
00:34:17,440 --> 00:34:20,639
referring another 12 with javascript and

924
00:34:20,639 --> 00:34:23,918
here take a look at this we find

925
00:34:23,918 --> 00:34:25,599
this the first

926
00:34:25,599 --> 00:34:27,839
streaming okay

927
00:34:27,839 --> 00:34:29,359
and here

928
00:34:29,359 --> 00:34:32,079
you see this is an i specifically flag

929
00:34:32,079 --> 00:34:33,440
flat decode

930
00:34:33,440 --> 00:34:35,520
it means

931
00:34:35,520 --> 00:34:37,599
we need the code something

932
00:34:37,599 --> 00:34:38,719
it's simple

933
00:34:38,719 --> 00:34:41,599
but now we need to decode why what

934
00:34:41,599 --> 00:34:44,560
exactly we need to decode this

935
00:34:44,560 --> 00:34:46,960
streaming the content inside of this

936
00:34:46,960 --> 00:34:49,918
stream but if you see here the left is

937
00:34:49,918 --> 00:34:51,599
36

938
00:34:51,599 --> 00:34:53,199
it's a kind of small

939
00:34:53,199 --> 00:34:54,960
but maybe we can look in from this

940
00:34:54,960 --> 00:34:57,119
specific object okay let's continue to

941
00:34:57,119 --> 00:34:58,720
see all objects

942
00:34:58,720 --> 00:35:02,160
objects whoever been fairing object 13

943
00:35:02,160 --> 00:35:04,800
that we found in specifically javascript

944
00:35:04,800 --> 00:35:06,320
but take a look this and this

945
00:35:06,320 --> 00:35:08,160
specifically is the second one remember

946
00:35:08,160 --> 00:35:11,680
we have two stream and here the left is

947
00:35:11,680 --> 00:35:13,680
is too big when you compare with the

948
00:35:13,680 --> 00:35:15,760
first right it's too big

949
00:35:15,760 --> 00:35:17,280
so maybe this is

950
00:35:17,280 --> 00:35:20,160
the focus that we to look in this is the

951
00:35:20,160 --> 00:35:23,680
main object okay so let me go to

952
00:35:23,680 --> 00:35:27,440
the next okay so

953
00:35:27,440 --> 00:35:29,200
what i

954
00:35:29,200 --> 00:35:30,480
thought here so

955
00:35:30,480 --> 00:35:32,079
i have the

956
00:35:32,079 --> 00:35:33,440
pdf

957
00:35:33,440 --> 00:35:36,160
and they have an open action linked with

958
00:35:36,160 --> 00:35:38,240
a specifically javascript and i have a

959
00:35:38,240 --> 00:35:40,400
nice a cool information inside of this

960
00:35:40,400 --> 00:35:41,599
specifically

961
00:35:41,599 --> 00:35:44,079
object 13. so i need to go too deeply in

962
00:35:44,079 --> 00:35:46,480
this object this specific object but i

963
00:35:46,480 --> 00:35:48,160
need to using something

964
00:35:48,160 --> 00:35:49,520
to

965
00:35:49,520 --> 00:35:51,680
to show this information for me

966
00:35:51,680 --> 00:35:54,079
because i using pdf parts it and i

967
00:35:54,079 --> 00:35:57,440
didn't find anything with this so i use

968
00:35:57,440 --> 00:35:59,839
in this case pdf techa is another tool

969
00:35:59,839 --> 00:36:02,160
to manipulate pdf

970
00:36:02,160 --> 00:36:04,560
it means that i can create pdf i can

971
00:36:04,560 --> 00:36:06,800
merge pdf and

972
00:36:06,800 --> 00:36:09,440
i can do other things i can encode i can

973
00:36:09,440 --> 00:36:10,320
using

974
00:36:10,320 --> 00:36:12,640
for different purpose not only that but

975
00:36:12,640 --> 00:36:14,320
i can uncompress

976
00:36:14,320 --> 00:36:15,839
recompress

977
00:36:15,839 --> 00:36:17,599
so my idea is

978
00:36:17,599 --> 00:36:19,440
it was uncompressed

979
00:36:19,440 --> 00:36:22,079
this specific information in object 13.

980
00:36:22,079 --> 00:36:23,839
okay so

981
00:36:23,839 --> 00:36:26,960
basically i said here pdf pdf deca the

982
00:36:26,960 --> 00:36:28,800
file output because i would like to

983
00:36:28,800 --> 00:36:30,640
collect this output

984
00:36:30,640 --> 00:36:33,680
not only this but the whole pdf

985
00:36:33,680 --> 00:36:36,079
and i set the dump doc text to copy

986
00:36:36,079 --> 00:36:38,000
those information from this file and

987
00:36:38,000 --> 00:36:40,079
execute and compress to uncompress the

988
00:36:40,079 --> 00:36:43,359
fire so now we have here the pdf

989
00:36:43,359 --> 00:36:45,200
and the whole

990
00:36:45,200 --> 00:36:48,560
uncompressed file okay nice so now i can

991
00:36:48,560 --> 00:36:50,640
look in more deeply and take a look what

992
00:36:50,640 --> 00:36:52,880
i found in this streaming

993
00:36:52,880 --> 00:36:55,119
i found here the very interesting

994
00:36:55,119 --> 00:36:57,520
information the javascript

995
00:36:57,520 --> 00:36:59,200
it here it's here

996
00:36:59,200 --> 00:37:00,480
but

997
00:37:00,480 --> 00:37:02,000
if you know how this

998
00:37:02,000 --> 00:37:04,160
javascript javascript works you know

999
00:37:04,160 --> 00:37:06,240
that's not

1000
00:37:06,240 --> 00:37:09,040
looks like a javascript because yeah

1001
00:37:09,040 --> 00:37:09,920
because

1002
00:37:09,920 --> 00:37:11,520
this javascript

1003
00:37:11,520 --> 00:37:13,760
is obfuscated

1004
00:37:13,760 --> 00:37:16,880
because of that is this way so

1005
00:37:16,880 --> 00:37:20,400
the next step i need to copy this

1006
00:37:20,400 --> 00:37:22,720
and pass in creating another file

1007
00:37:22,720 --> 00:37:24,560
because i thought so i'm talking about

1008
00:37:24,560 --> 00:37:26,640
javascript javascript maybe i talk about

1009
00:37:26,640 --> 00:37:28,640
the web application so if i have

1010
00:37:28,640 --> 00:37:31,599
application i can try to interpret this

1011
00:37:31,599 --> 00:37:34,480
in a specific html file that's my idea

1012
00:37:34,480 --> 00:37:36,640
because i found a specific evo parameter

1013
00:37:36,640 --> 00:37:39,520
here and i can change in this file

1014
00:37:39,520 --> 00:37:42,160
my idea is to try to rewrite

1015
00:37:42,160 --> 00:37:43,599
this specifically javascript to

1016
00:37:43,599 --> 00:37:45,119
solfuscate

1017
00:37:45,119 --> 00:37:46,400
this file okay

1018
00:37:46,400 --> 00:37:48,400
and if you see specifically the other

1019
00:37:48,400 --> 00:37:50,079
thing interesting is a kind of standard

1020
00:37:50,079 --> 00:37:53,599
here letters percent numbers you see in

1021
00:37:53,599 --> 00:37:55,760
inside of the parenthesis you know

1022
00:37:55,760 --> 00:37:57,280
and the color is different so something

1023
00:37:57,280 --> 00:37:59,680
is interesting here but the first idea

1024
00:37:59,680 --> 00:38:01,920
here is to rewrite remember i

1025
00:38:01,920 --> 00:38:04,960
i set this specifically script here and

1026
00:38:04,960 --> 00:38:06,880
i put in document right to rewrite these

1027
00:38:06,880 --> 00:38:08,160
informations

1028
00:38:08,160 --> 00:38:09,440
because i'm using this specific

1029
00:38:09,440 --> 00:38:12,079
parameter to

1030
00:38:12,160 --> 00:38:14,800
describe this javascript so i save this

1031
00:38:14,800 --> 00:38:17,359
file and next step is to give the

1032
00:38:17,359 --> 00:38:19,520
permission to access this file

1033
00:38:19,520 --> 00:38:22,000
or to show this information for in the

1034
00:38:22,000 --> 00:38:24,240
browse for us okay

1035
00:38:24,240 --> 00:38:25,200
nice

1036
00:38:25,200 --> 00:38:27,200
cool so the next step is to as i could

1037
00:38:27,200 --> 00:38:29,920
this to see what is this

1038
00:38:29,920 --> 00:38:32,240
kind of behavior or what kind of

1039
00:38:32,240 --> 00:38:33,440
information you can find in this

1040
00:38:33,440 --> 00:38:35,760
specific javascript obfuscated so after

1041
00:38:35,760 --> 00:38:38,880
that open the firefox browser

1042
00:38:38,880 --> 00:38:42,480
and take a look what happened now

1043
00:38:42,560 --> 00:38:45,839
we have a payload

1044
00:38:45,839 --> 00:38:47,520
nice

1045
00:38:47,520 --> 00:38:49,760
you know what is a payload

1046
00:38:49,760 --> 00:38:51,440
we have an exploit and you have a

1047
00:38:51,440 --> 00:38:53,119
payload you know what you know what's

1048
00:38:53,119 --> 00:38:56,400
the difference basically

1049
00:38:56,400 --> 00:38:58,720
yeah

1050
00:38:58,720 --> 00:39:00,400
you know

1051
00:39:00,400 --> 00:39:03,200
okay let me clarify for something

1052
00:39:03,200 --> 00:39:06,000
because i don't see many hands okay so

1053
00:39:06,000 --> 00:39:07,920
exploit is a

1054
00:39:07,920 --> 00:39:10,480
maybe it's a a tool or a binary that you

1055
00:39:10,480 --> 00:39:13,040
can use it to explore and specifically

1056
00:39:13,040 --> 00:39:14,640
vulnerabilities

1057
00:39:14,640 --> 00:39:18,079
okay and a payload is a package

1058
00:39:18,079 --> 00:39:19,680
is a code

1059
00:39:19,680 --> 00:39:21,680
that you can download in specifically

1060
00:39:21,680 --> 00:39:23,359
victor machine

1061
00:39:23,359 --> 00:39:25,359
to gain specifically access or to

1062
00:39:25,359 --> 00:39:27,440
receive and specifically reverse or

1063
00:39:27,440 --> 00:39:29,839
reverse connection actually okay

1064
00:39:29,839 --> 00:39:30,960
basically those different so you're

1065
00:39:30,960 --> 00:39:33,200
using the exploit as a tool to explore

1066
00:39:33,200 --> 00:39:35,119
the vulnerability and if you would like

1067
00:39:35,119 --> 00:39:35,839
to

1068
00:39:35,839 --> 00:39:37,040
because of course depend on the

1069
00:39:37,040 --> 00:39:39,119
vulnerability that you are exploring but

1070
00:39:39,119 --> 00:39:40,960
if you like sometimes you can download

1071
00:39:40,960 --> 00:39:42,640
these exploits it's a pi a part of

1072
00:39:42,640 --> 00:39:44,079
package that you download in the victory

1073
00:39:44,079 --> 00:39:45,760
machine to receive

1074
00:39:45,760 --> 00:39:47,359
this connection reverse a kind of

1075
00:39:47,359 --> 00:39:50,880
reverse shell maybe okay so in this case

1076
00:39:50,880 --> 00:39:52,800
we had

1077
00:39:52,800 --> 00:39:55,440
the specifically code to explore a

1078
00:39:55,440 --> 00:39:58,320
specific vulnerability in this case

1079
00:39:58,320 --> 00:40:00,320
because after i don't have a time to

1080
00:40:00,320 --> 00:40:03,520
explain those details or using dynamic

1081
00:40:03,520 --> 00:40:05,680
analysis just a simple

1082
00:40:05,680 --> 00:40:07,680
statistic analysis but

1083
00:40:07,680 --> 00:40:09,599
the attacker using specifically exploit

1084
00:40:09,599 --> 00:40:11,760
to explore specific vulnerability inside

1085
00:40:11,760 --> 00:40:13,760
of the environment of the customer

1086
00:40:13,760 --> 00:40:16,079
or the client and after that you

1087
00:40:16,079 --> 00:40:18,240
download this

1088
00:40:18,240 --> 00:40:20,800
payload inside of the victor machine

1089
00:40:20,800 --> 00:40:22,400
as you can see here

1090
00:40:22,400 --> 00:40:25,680
it's a payload responsible for

1091
00:40:25,680 --> 00:40:27,920
starting the connection reverse with the

1092
00:40:27,920 --> 00:40:31,760
cnc so uh now i could finish my i could

1093
00:40:31,760 --> 00:40:33,119
because remember the idea when i

1094
00:40:33,119 --> 00:40:34,640
investigate that is to identify if this

1095
00:40:34,640 --> 00:40:37,280
pdf is malicious or not or not it's

1096
00:40:37,280 --> 00:40:38,800
malicious

1097
00:40:38,800 --> 00:40:41,119
point you know

1098
00:40:41,119 --> 00:40:42,720
um

1099
00:40:42,720 --> 00:40:44,960
but now we have a payload

1100
00:40:44,960 --> 00:40:46,319
so let's go

1101
00:40:46,319 --> 00:40:48,480
more let's see what happened now

1102
00:40:48,480 --> 00:40:50,640
cool and if you see here some remember

1103
00:40:50,640 --> 00:40:52,880
the behavior like a number of ladders

1104
00:40:52,880 --> 00:40:54,560
percent or something

1105
00:40:54,560 --> 00:40:57,280
are happening here i don't know

1106
00:40:57,280 --> 00:41:00,319
exactly so let's go to continue to do

1107
00:41:00,319 --> 00:41:02,800
so i copped this code

1108
00:41:02,800 --> 00:41:07,520
and i my idea here is it was

1109
00:41:07,520 --> 00:41:07,710
to

1110
00:41:07,710 --> 00:41:09,119
[Music]

1111
00:41:09,119 --> 00:41:12,079
clean actually to clean the file

1112
00:41:12,079 --> 00:41:13,119
uh

1113
00:41:13,119 --> 00:41:16,000
i copy this this file here and i using

1114
00:41:16,000 --> 00:41:17,280
sad

1115
00:41:17,280 --> 00:41:19,680
basically to cut the percent because of

1116
00:41:19,680 --> 00:41:22,319
course after some times to try other

1117
00:41:22,319 --> 00:41:24,560
things like this i found the information

1118
00:41:24,560 --> 00:41:27,200
that this payload basically the attacker

1119
00:41:27,200 --> 00:41:29,680
using another technique

1120
00:41:29,680 --> 00:41:32,560
the encoding technique okay the using

1121
00:41:32,560 --> 00:41:35,040
specifically technique here to encode

1122
00:41:35,040 --> 00:41:36,480
this payload

1123
00:41:36,480 --> 00:41:38,720
because remember for the attacker

1124
00:41:38,720 --> 00:41:40,880
perspective they need to using many

1125
00:41:40,880 --> 00:41:43,440
techniques like debugger like you know

1126
00:41:43,440 --> 00:41:46,240
encoding like

1127
00:41:46,240 --> 00:41:48,960
obfuscation many other techniques

1128
00:41:48,960 --> 00:41:51,440
to make more difficult our life

1129
00:41:51,440 --> 00:41:53,119
as a researcher as an analyst or

1130
00:41:53,119 --> 00:41:55,680
whatever okay so basically this is as

1131
00:41:55,680 --> 00:41:58,160
you can see here now we have here

1132
00:41:58,160 --> 00:41:59,599
the

1133
00:41:59,599 --> 00:42:02,400
the the

1134
00:42:02,400 --> 00:42:04,640
the informations that the the real

1135
00:42:04,640 --> 00:42:07,760
payload not in real but the payload

1136
00:42:07,760 --> 00:42:10,000
encoded and basically the attacker using

1137
00:42:10,000 --> 00:42:11,839
here the the different techniques

1138
00:42:11,839 --> 00:42:14,720
because they don't use in here the ascii

1139
00:42:14,720 --> 00:42:16,480
they use an unicode is a different

1140
00:42:16,480 --> 00:42:18,880
because it's based on two into binaries

1141
00:42:18,880 --> 00:42:21,839
not only in two bytes not one bytes has

1142
00:42:21,839 --> 00:42:23,680
x ascii

1143
00:42:23,680 --> 00:42:26,560
works so they're using specifically uh

1144
00:42:26,560 --> 00:42:29,119
unicode so remember they use it the

1145
00:42:29,119 --> 00:42:31,200
first they use a javascript

1146
00:42:31,200 --> 00:42:32,640
obfuscated

1147
00:42:32,640 --> 00:42:34,800
inside of this javascript they're using

1148
00:42:34,800 --> 00:42:36,880
the

1149
00:42:37,040 --> 00:42:37,920
the

1150
00:42:37,920 --> 00:42:40,160
the payload and inside of this payload

1151
00:42:40,160 --> 00:42:42,400
they haven't specifically code

1152
00:42:42,400 --> 00:42:45,440
using this technique in based on unicode

1153
00:42:45,440 --> 00:42:47,280
so i'll explain more any other thing

1154
00:42:47,280 --> 00:42:49,200
because maybe you are thinking flip just

1155
00:42:49,200 --> 00:42:50,160
using

1156
00:42:50,160 --> 00:42:51,839
unix i would like to see if it's

1157
00:42:51,839 --> 00:42:54,400
possible to using windows okay

1158
00:42:54,400 --> 00:42:57,280
so are you continue to doing the same

1159
00:42:57,280 --> 00:42:59,599
analysis but in windows platform

1160
00:42:59,599 --> 00:43:02,880
remember we have here i stopped here the

1161
00:43:02,880 --> 00:43:05,119
investigation when i found the the

1162
00:43:05,119 --> 00:43:07,200
encode right the code

1163
00:43:07,200 --> 00:43:08,640
encoded

1164
00:43:08,640 --> 00:43:10,400
it's a kind of

1165
00:43:10,400 --> 00:43:12,240
okay so i'm executing here the same i

1166
00:43:12,240 --> 00:43:14,240
mean copy this

1167
00:43:14,240 --> 00:43:16,560
the payload remember that the payload

1168
00:43:16,560 --> 00:43:19,280
here and i cop and paste here using

1169
00:43:19,280 --> 00:43:21,839
another platform mozilla

1170
00:43:21,839 --> 00:43:22,960
i don't know if you've already heard

1171
00:43:22,960 --> 00:43:25,359
about that this about these tools so i

1172
00:43:25,359 --> 00:43:28,480
pass here and if you see here this is

1173
00:43:28,480 --> 00:43:29,200
the

1174
00:43:29,200 --> 00:43:32,160
technique used by the attacker to inc

1175
00:43:32,160 --> 00:43:34,800
oh my goodness let me go to the end

1176
00:43:34,800 --> 00:43:36,960
again

1177
00:43:36,960 --> 00:43:38,560
this is that

1178
00:43:38,560 --> 00:43:42,240
i'm putting stop here okay this encoding

1179
00:43:42,240 --> 00:43:43,920
that the attacker using

1180
00:43:43,920 --> 00:43:48,119
is based on this specifically technique

1181
00:43:48,119 --> 00:43:49,760
ucs2

1182
00:43:49,760 --> 00:43:51,359
is a kind of old

1183
00:43:51,359 --> 00:43:53,680
because the evolution now it's called

1184
00:43:53,680 --> 00:43:57,359
etf16 if you have 32 that using this

1185
00:43:57,359 --> 00:43:59,440
and the idea here is to it's the same

1186
00:43:59,440 --> 00:44:01,040
that i use in the set

1187
00:44:01,040 --> 00:44:02,720
i cut the percent

1188
00:44:02,720 --> 00:44:05,200
and i created to to generate

1189
00:44:05,200 --> 00:44:08,560
this information in the axa file right

1190
00:44:08,560 --> 00:44:10,400
as you can see here i click

1191
00:44:10,400 --> 00:44:13,200
and now i have the exa file basically

1192
00:44:13,200 --> 00:44:15,680
this is the xfi when i cut the percent

1193
00:44:15,680 --> 00:44:17,760
using sad i had

1194
00:44:17,760 --> 00:44:20,560
the extra file but i used but using here

1195
00:44:20,560 --> 00:44:23,119
the mozilla i have the extra file i

1196
00:44:23,119 --> 00:44:26,400
generate and specifically binary

1197
00:44:26,400 --> 00:44:29,839
okay because my idea now is to to try

1198
00:44:29,839 --> 00:44:31,200
to find

1199
00:44:31,200 --> 00:44:32,960
the cnc

1200
00:44:32,960 --> 00:44:34,800
from the attacker

1201
00:44:34,800 --> 00:44:37,200
and after that

1202
00:44:37,200 --> 00:44:40,160
i try i use ensure

1203
00:44:40,160 --> 00:44:42,079
to find in specifically

1204
00:44:42,079 --> 00:44:44,000
information inside of this binary that i

1205
00:44:44,000 --> 00:44:48,240
generate for http and now

1206
00:44:48,240 --> 00:44:49,280
we have

1207
00:44:49,280 --> 00:44:50,720
the commanding controller from the

1208
00:44:50,720 --> 00:44:52,880
attacker remember the payload

1209
00:44:52,880 --> 00:44:56,000
so the attacker using those steps to

1210
00:44:56,000 --> 00:44:57,119
to go

1211
00:44:57,119 --> 00:44:58,880
for this

1212
00:44:58,880 --> 00:45:00,079
this

1213
00:45:00,079 --> 00:45:01,599
server right the

1214
00:45:01,599 --> 00:45:03,760
the command controller the idea from the

1215
00:45:03,760 --> 00:45:06,240
attacker for the attacker is when the

1216
00:45:06,240 --> 00:45:08,480
the attacker on the vitamin receive the

1217
00:45:08,480 --> 00:45:11,119
file and download the payload that this

1218
00:45:11,119 --> 00:45:14,560
ip address will receive a connection

1219
00:45:14,560 --> 00:45:15,760
right

1220
00:45:15,760 --> 00:45:17,920
and i finish here just to

1221
00:45:17,920 --> 00:45:19,280
show the

1222
00:45:19,280 --> 00:45:21,680
information here about the specific ip

1223
00:45:21,680 --> 00:45:23,599
address as you can see so they have all

1224
00:45:23,599 --> 00:45:26,000
these informations other url related to

1225
00:45:26,000 --> 00:45:29,040
the specific attack but

1226
00:45:29,040 --> 00:45:31,760
you see that this uh

1227
00:45:31,760 --> 00:45:34,319
this ip address is totally linked one

1228
00:45:34,319 --> 00:45:36,880
specifically attack as you can see here

1229
00:45:36,880 --> 00:45:39,760
so we go step by step into these

1230
00:45:39,760 --> 00:45:42,079
investigations and now i finish the

1231
00:45:42,079 --> 00:45:44,079
presentation this is some books if you'd

1232
00:45:44,079 --> 00:45:46,720
like to read understand more about the

1233
00:45:46,720 --> 00:45:50,319
the more analysis we have here

1234
00:45:50,319 --> 00:45:51,920
about the you know

1235
00:45:51,920 --> 00:45:53,680
specifically difference here but it's

1236
00:45:53,680 --> 00:45:55,040
more this

1237
00:45:55,040 --> 00:45:56,480
so since the beginning to the advanced

1238
00:45:56,480 --> 00:45:59,040
set here is more focusing in 3d hunting

1239
00:45:59,040 --> 00:46:01,680
even in trendy hunting looking from the

1240
00:46:01,680 --> 00:46:03,760
the tools

1241
00:46:03,760 --> 00:46:07,040
and yes thank you so much for this

1242
00:46:07,040 --> 00:46:08,000
time

1243
00:46:08,000 --> 00:46:09,780
once again it's a pleasure

1244
00:46:09,780 --> 00:46:13,119
[Applause]

1245
00:46:13,119 --> 00:46:15,839
thank you

1246
00:46:18,880 --> 00:46:20,000
okay

1247
00:46:20,000 --> 00:46:22,960
we'll have a short q a

1248
00:46:22,960 --> 00:46:24,000
session

1249
00:46:24,000 --> 00:46:26,000
so uh

1250
00:46:26,000 --> 00:46:28,360
questions

1251
00:46:28,360 --> 00:46:34,369
[Music]

1252
00:46:41,200 --> 00:46:42,480
i have

1253
00:46:42,480 --> 00:46:44,400
maybe it's good oh baby it's bad i don't

1254
00:46:44,400 --> 00:46:45,920
know

1255
00:46:45,920 --> 00:46:47,520
hello

1256
00:46:47,520 --> 00:46:49,280
go ahead go ahead

1257
00:46:49,280 --> 00:46:50,240
okay

1258
00:46:50,240 --> 00:46:51,520
hello

1259
00:46:51,520 --> 00:46:53,440
yes thank you for the presentation it

1260
00:46:53,440 --> 00:46:54,240
was

1261
00:46:54,240 --> 00:46:56,480
really really interesting i have

1262
00:46:56,480 --> 00:46:59,119
question here about the payload actually

1263
00:46:59,119 --> 00:47:00,160
that is

1264
00:47:00,160 --> 00:47:03,440
stored inside the pdf file

1265
00:47:03,440 --> 00:47:05,200
let's say that we have a victim for

1266
00:47:05,200 --> 00:47:07,760
example a target that will open the pdf

1267
00:47:07,760 --> 00:47:08,720
file

1268
00:47:08,720 --> 00:47:11,119
how the payload will be executed it is

1269
00:47:11,119 --> 00:47:12,480
no click

1270
00:47:12,480 --> 00:47:15,119
like the victim will be compromised uh

1271
00:47:15,119 --> 00:47:18,240
without uh just like by uh opening the

1272
00:47:18,240 --> 00:47:20,240
file or he need like to activate

1273
00:47:20,240 --> 00:47:23,680
something or no the the action is is for

1274
00:47:23,680 --> 00:47:24,960
if you understand your question because

1275
00:47:24,960 --> 00:47:27,119
i can hear you not so good but

1276
00:47:27,119 --> 00:47:29,200
it's the flow of the infection the user

1277
00:47:29,200 --> 00:47:30,480
perspective right

1278
00:47:30,480 --> 00:47:32,960
so when user received this this file

1279
00:47:32,960 --> 00:47:34,880
let's suppose that you work in an atr

1280
00:47:34,880 --> 00:47:38,720
team and you receive the cv the resume

1281
00:47:38,720 --> 00:47:40,880
and the only action the user need to do

1282
00:47:40,880 --> 00:47:42,800
is to open the pdf

1283
00:47:42,800 --> 00:47:46,480
to read to see one file one file after

1284
00:47:46,480 --> 00:47:48,960
that automatically you're running all

1285
00:47:48,960 --> 00:47:50,400
those steps

1286
00:47:50,400 --> 00:47:52,160
automatically because they have the

1287
00:47:52,160 --> 00:47:54,000
specifically open action functions

1288
00:47:54,000 --> 00:47:55,760
linked with javascript remember the

1289
00:47:55,760 --> 00:47:59,200
javascript this javascript is obfuscated

1290
00:47:59,200 --> 00:48:01,280
inside of the javascript you have the

1291
00:48:01,280 --> 00:48:02,960
payload this is this payload is

1292
00:48:02,960 --> 00:48:06,480
responsible for callback to then cnc

1293
00:48:06,480 --> 00:48:08,319
you see so the user don't need to click

1294
00:48:08,319 --> 00:48:10,480
it more than once just need to open once

1295
00:48:10,480 --> 00:48:13,599
again and that's it so may if of course

1296
00:48:13,599 --> 00:48:15,599
if user

1297
00:48:15,599 --> 00:48:18,160
should have the specific security sensor

1298
00:48:18,160 --> 00:48:20,319
like antivirus or other thing like this

1299
00:48:20,319 --> 00:48:22,800
in the the you know the laptop to

1300
00:48:22,800 --> 00:48:24,880
protect but

1301
00:48:24,880 --> 00:48:26,319
because it's a no mower actually the

1302
00:48:26,319 --> 00:48:28,079
vulnerabilities it's a non-vulnerability

1303
00:48:28,079 --> 00:48:30,000
and that's time when i investigate that

1304
00:48:30,000 --> 00:48:32,319
but it's the flow the only one click and

1305
00:48:32,319 --> 00:48:34,800
just and that's it

1306
00:48:34,800 --> 00:48:37,440
okay thank you

1307
00:48:38,800 --> 00:48:41,520
anyone more

1308
00:48:41,760 --> 00:48:43,760
here below

1309
00:48:43,760 --> 00:48:47,400
here over there

1310
00:48:49,200 --> 00:48:51,439
um

1311
00:48:52,559 --> 00:48:54,319
okay

1312
00:48:54,319 --> 00:48:57,920
is this exploit related uh to

1313
00:48:57,920 --> 00:48:59,040
um

1314
00:48:59,040 --> 00:49:00,240
to adobe

1315
00:49:00,240 --> 00:49:00,960
and

1316
00:49:00,960 --> 00:49:02,800
oh

1317
00:49:02,800 --> 00:49:04,319
um

1318
00:49:04,319 --> 00:49:05,920
did they say that

1319
00:49:05,920 --> 00:49:06,960
uh

1320
00:49:06,960 --> 00:49:08,880
can i tell it in french and someone

1321
00:49:08,880 --> 00:49:10,800
trust me yeah yeah yeah yeah thank you

1322
00:49:10,800 --> 00:49:13,040
yes

1323
00:49:14,400 --> 00:49:17,400
acrobatics

1324
00:49:27,040 --> 00:49:30,040
um

1325
00:49:39,359 --> 00:49:40,400
is that

1326
00:49:40,400 --> 00:49:42,480
vulnerability linked

1327
00:49:42,480 --> 00:49:46,000
either on pdf format

1328
00:49:46,000 --> 00:49:49,359
in itself or in acrobat reader

1329
00:49:49,359 --> 00:49:52,240
um i don't remember exactly if this

1330
00:49:52,240 --> 00:49:54,880
vulnerability was in a in a in a correct

1331
00:49:54,880 --> 00:49:56,400
reader

1332
00:49:56,400 --> 00:49:57,440
but

1333
00:49:57,440 --> 00:49:58,559
you know

1334
00:49:58,559 --> 00:50:00,000
when you create

1335
00:50:00,000 --> 00:50:01,760
if you are would you like to try for

1336
00:50:01,760 --> 00:50:03,599
example your security sensor let's

1337
00:50:03,599 --> 00:50:06,800
suppose that you are testing okay so you

1338
00:50:06,800 --> 00:50:09,040
can create in this pdf you can put in

1339
00:50:09,040 --> 00:50:11,839
specifically exploit inside of this pdf

1340
00:50:11,839 --> 00:50:13,920
using for example pdf deca to compress

1341
00:50:13,920 --> 00:50:15,839
something or use it in code

1342
00:50:15,839 --> 00:50:19,040
and you can explore the victim so

1343
00:50:19,040 --> 00:50:20,720
the the point is the exploit that you

1344
00:50:20,720 --> 00:50:22,960
can put in the pdf you can use

1345
00:50:22,960 --> 00:50:24,400
each one

1346
00:50:24,400 --> 00:50:27,280
desire you know and uh i don't remember

1347
00:50:27,280 --> 00:50:29,119
this exactly it was specifically

1348
00:50:29,119 --> 00:50:30,880
vulnerability from acrobat i don't i

1349
00:50:30,880 --> 00:50:32,559
really i don't remember

1350
00:50:32,559 --> 00:50:35,440
but you know you can using whatever

1351
00:50:35,440 --> 00:50:37,200
exploit you want of course remember when

1352
00:50:37,200 --> 00:50:39,280
you're using something to test like if

1353
00:50:39,280 --> 00:50:42,559
you see my in my my repository in on on

1354
00:50:42,559 --> 00:50:45,280
github i test in some security vendors

1355
00:50:45,280 --> 00:50:46,160
and

1356
00:50:46,160 --> 00:50:48,160
i like to using

1357
00:50:48,160 --> 00:50:50,559
when i test something i like to using

1358
00:50:50,559 --> 00:50:52,880
i i like to go to for specific steps so

1359
00:50:52,880 --> 00:50:54,800
the first i like to using no

1360
00:50:54,800 --> 00:50:57,920
threads like a normal hours no exploits

1361
00:50:57,920 --> 00:50:58,720
no

1362
00:50:58,720 --> 00:51:00,400
to test how the engines the engines

1363
00:51:00,400 --> 00:51:02,720
works like uh signatures

1364
00:51:02,720 --> 00:51:04,480
machine learning or other things based

1365
00:51:04,480 --> 00:51:06,960
on signatures after that i go to the

1366
00:51:06,960 --> 00:51:09,520
not a nazir day but you know it's a

1367
00:51:09,520 --> 00:51:11,680
other techniques but you can put in

1368
00:51:11,680 --> 00:51:13,680
whatever exploit you want inside of this

1369
00:51:13,680 --> 00:51:16,000
pdf

1370
00:51:16,000 --> 00:51:18,079
you you just need to on the or to know

1371
00:51:18,079 --> 00:51:20,400
what kind of tools you can use to put

1372
00:51:20,400 --> 00:51:23,839
this information inside of that

1373
00:51:31,119 --> 00:51:33,839
hi hello hi thanks for the talk is there

1374
00:51:33,839 --> 00:51:36,079
a way to mitigate or to disable the open

1375
00:51:36,079 --> 00:51:38,400
action

1376
00:51:38,720 --> 00:51:41,119
actually good question

1377
00:51:41,119 --> 00:51:43,590
for the open action

1378
00:51:43,590 --> 00:51:46,079
[Music]

1379
00:51:46,079 --> 00:51:48,720
actually i i don't know

1380
00:51:48,720 --> 00:51:52,160
yeah because it's for me open action i

1381
00:51:52,160 --> 00:51:54,559
don't know if that makes sense some pdf

1382
00:51:54,559 --> 00:51:57,200
open the other task like an open action

1383
00:51:57,200 --> 00:51:59,680
because it's another activity from pdf

1384
00:51:59,680 --> 00:52:00,720
maybe

1385
00:52:00,720 --> 00:52:03,680
for the security perspective

1386
00:52:03,680 --> 00:52:07,119
probably in security uh sensors like

1387
00:52:07,119 --> 00:52:09,200
antivirus as i mentioned or a binary

1388
00:52:09,200 --> 00:52:11,680
that you have inside of the machine

1389
00:52:11,680 --> 00:52:13,839
should have some specifically behavior

1390
00:52:13,839 --> 00:52:17,040
like or related and specific like

1391
00:52:17,040 --> 00:52:19,680
if you have a pdf binary

1392
00:52:19,680 --> 00:52:22,000
no a pdf it's a binary of course but you

1393
00:52:22,000 --> 00:52:23,200
have a pdf

1394
00:52:23,200 --> 00:52:24,559
so pdf

1395
00:52:24,559 --> 00:52:27,839
having a specific reaction just open

1396
00:52:27,839 --> 00:52:30,000
shared information because if you put in

1397
00:52:30,000 --> 00:52:33,200
the string in pdf you see like a text

1398
00:52:33,200 --> 00:52:35,680
because pdf is a really text file

1399
00:52:35,680 --> 00:52:38,240
but with image and phones

1400
00:52:38,240 --> 00:52:41,280
and shiny things but it's a it's a text

1401
00:52:41,280 --> 00:52:43,440
so why they need to using other

1402
00:52:43,440 --> 00:52:44,800
activities like

1403
00:52:44,800 --> 00:52:48,240
because you don't use macros in pdf

1404
00:52:48,240 --> 00:52:49,440
i think

1405
00:52:49,440 --> 00:52:52,319
using you know in word in excel in other

1406
00:52:52,319 --> 00:52:55,280
in microsoft office files but in pdf

1407
00:52:55,280 --> 00:52:56,720
usually not

1408
00:52:56,720 --> 00:52:59,200
so based on this behavior you can use it

1409
00:52:59,200 --> 00:53:01,040
specifically tagging in antivirus you

1410
00:53:01,040 --> 00:53:02,880
can put this for example

1411
00:53:02,880 --> 00:53:05,359
but for the specific pdf or in the

1412
00:53:05,359 --> 00:53:07,200
specific machine i don't know exactly

1413
00:53:07,200 --> 00:53:08,240
but i

1414
00:53:08,240 --> 00:53:09,200
if i

1415
00:53:09,200 --> 00:53:11,280
had if i you know if i have the

1416
00:53:11,280 --> 00:53:13,280
specifically security vendors i you go

1417
00:53:13,280 --> 00:53:15,040
for this way you know to looking from

1418
00:53:15,040 --> 00:53:17,680
the specific behavior from the pdf

1419
00:53:17,680 --> 00:53:19,920
or if some

1420
00:53:19,920 --> 00:53:21,440
block to javascript is not is

1421
00:53:21,440 --> 00:53:23,040
complicated because depends of the

1422
00:53:23,040 --> 00:53:24,400
application that you have inside of the

1423
00:53:24,400 --> 00:53:26,160
organization you see

1424
00:53:26,160 --> 00:53:27,440
and

1425
00:53:27,440 --> 00:53:30,000
it's based on behavior basically is how

1426
00:53:30,000 --> 00:53:31,359
the

1427
00:53:31,359 --> 00:53:33,040
the antivirus works

1428
00:53:33,040 --> 00:53:35,280
the new technology is based on behavior

1429
00:53:35,280 --> 00:53:37,839
and machine learning and many vendors it

1430
00:53:37,839 --> 00:53:39,599
doesn't work with the signatures only

1431
00:53:39,599 --> 00:53:40,960
from behavior

1432
00:53:40,960 --> 00:53:42,960
so the user need to click in the mower

1433
00:53:42,960 --> 00:53:45,599
and after that they you protect

1434
00:53:45,599 --> 00:53:47,119
i don't like this i like to use them

1435
00:53:47,119 --> 00:53:48,720
both you know so i don't need to check

1436
00:53:48,720 --> 00:53:50,319
if it's malicious when i

1437
00:53:50,319 --> 00:53:52,240
know that it's malicious for me that

1438
00:53:52,240 --> 00:53:53,280
makes sense

1439
00:53:53,280 --> 00:53:54,800
and i talk with some

1440
00:53:54,800 --> 00:53:56,480
i talked with some vendors about that

1441
00:53:56,480 --> 00:53:58,240
and i have some fights but anyway it's

1442
00:53:58,240 --> 00:54:00,799
another talk

1443
00:54:02,480 --> 00:54:03,180
okay

1444
00:54:03,180 --> 00:54:04,559
[Music]

1445
00:54:04,559 --> 00:54:07,040
anything more

1446
00:54:07,040 --> 00:54:10,040
there

1447
00:54:10,079 --> 00:54:13,040
i go i go there to hurry more too hello

1448
00:54:13,040 --> 00:54:15,920
so yeah it's working uh thank you first

1449
00:54:15,920 --> 00:54:18,319
of all for the presentation uh then i

1450
00:54:18,319 --> 00:54:20,640
think i have a question

1451
00:54:20,640 --> 00:54:23,040
about the very last command and it was

1452
00:54:23,040 --> 00:54:24,480
the one to get

1453
00:54:24,480 --> 00:54:26,880
the information about the attacker like

1454
00:54:26,880 --> 00:54:28,720
the search exure

1455
00:54:28,720 --> 00:54:31,280
that exo one i think

1456
00:54:31,280 --> 00:54:33,200
the question is about this script

1457
00:54:33,200 --> 00:54:35,839
whether it's a github

1458
00:54:35,839 --> 00:54:37,119
script

1459
00:54:37,119 --> 00:54:38,720
whether it's something that you've

1460
00:54:38,720 --> 00:54:40,559
downloaded we need to download it from

1461
00:54:40,559 --> 00:54:42,880
somewhere or something a tool that we

1462
00:54:42,880 --> 00:54:46,960
can just like get on linux

1463
00:54:46,960 --> 00:54:48,799
so yeah

1464
00:54:48,799 --> 00:54:50,480
uh i don't know if you understand the

1465
00:54:50,480 --> 00:54:53,599
question but it is based on the the file

1466
00:54:53,599 --> 00:54:55,599
or based on the

1467
00:54:55,599 --> 00:54:58,160
your question is about specifically

1468
00:54:58,160 --> 00:54:59,920
some tools to check

1469
00:54:59,920 --> 00:55:03,680
yeah i saw that you used a tool maybe a

1470
00:55:03,680 --> 00:55:06,720
file which was exercise i guess

1471
00:55:06,720 --> 00:55:09,680
and this is something that i'm like uh i

1472
00:55:09,680 --> 00:55:12,400
didn't see before and there wasn't like

1473
00:55:12,400 --> 00:55:15,040
uh the reference whether it's a github

1474
00:55:15,040 --> 00:55:17,200
file whether it's a tool oh okay so yeah

1475
00:55:17,200 --> 00:55:18,839
my question is about the file

1476
00:55:18,839 --> 00:55:22,079
itself okay yeah you can actually the

1477
00:55:22,079 --> 00:55:23,839
file is one is specifically command

1478
00:55:23,839 --> 00:55:25,760
right and you can use in

1479
00:55:25,760 --> 00:55:28,240
other commands that you can use

1480
00:55:28,240 --> 00:55:30,000
to check those informations

1481
00:55:30,000 --> 00:55:31,200
because

1482
00:55:31,200 --> 00:55:34,000
for each um

1483
00:55:34,000 --> 00:55:35,680
it's not investigation system operation

1484
00:55:35,680 --> 00:55:37,839
but you have for example the kala linux

1485
00:55:37,839 --> 00:55:40,319
if you read for example the kali linux

1486
00:55:40,319 --> 00:55:42,960
they have specifically suggestion to you

1487
00:55:42,960 --> 00:55:43,839
you

1488
00:55:43,839 --> 00:55:45,599
you should be using for example cal

1489
00:55:45,599 --> 00:55:47,839
linux has a desktop

1490
00:55:47,839 --> 00:55:49,760
only for and specifically purpose in the

1491
00:55:49,760 --> 00:55:51,359
same case apparel choice we have a

1492
00:55:51,359 --> 00:55:53,839
specific version inside of those tools

1493
00:55:53,839 --> 00:55:55,839
in this specific system operation we

1494
00:55:55,839 --> 00:55:58,720
have many tools to check so you can use

1495
00:55:58,720 --> 00:56:01,359
it for example file you can use in other

1496
00:56:01,359 --> 00:56:03,520
tools to check i don't remember other

1497
00:56:03,520 --> 00:56:04,240
uh

1498
00:56:04,240 --> 00:56:07,200
check types of file now

1499
00:56:07,200 --> 00:56:09,119
but one thing interesting about that i

1500
00:56:09,119 --> 00:56:10,720
don't know if i can i answer your

1501
00:56:10,720 --> 00:56:12,880
question but it's about

1502
00:56:12,880 --> 00:56:14,720
a specific vulnerability and

1503
00:56:14,720 --> 00:56:17,200
specifically tools because i remember in

1504
00:56:17,200 --> 00:56:20,000
2008

1505
00:56:20,000 --> 00:56:23,280
if i don't uh if you know wrong

1506
00:56:23,280 --> 00:56:25,680
and specifically vulnerability in string

1507
00:56:25,680 --> 00:56:27,119
command

1508
00:56:27,119 --> 00:56:29,440
when you has a cute and string command

1509
00:56:29,440 --> 00:56:31,200
something happened you can using the

1510
00:56:31,200 --> 00:56:33,280
string command to explore the the

1511
00:56:33,280 --> 00:56:35,920
environment but i don't remember i don't

1512
00:56:35,920 --> 00:56:38,559
try and that time but

1513
00:56:38,559 --> 00:56:40,240
you can use in different tools you can

1514
00:56:40,240 --> 00:56:42,880
use in you know um

1515
00:56:42,880 --> 00:56:44,400
again you can use in

1516
00:56:44,400 --> 00:56:46,559
some comments like i don't use in here

1517
00:56:46,559 --> 00:56:48,799
but you can use in for example read read

1518
00:56:48,799 --> 00:56:51,200
pe it's a kind of tools to check the

1519
00:56:51,200 --> 00:56:53,280
structure and the informations about the

1520
00:56:53,280 --> 00:56:56,240
pd the portable executable the pe or you

1521
00:56:56,240 --> 00:56:58,400
can use read elf is the same for the

1522
00:56:58,400 --> 00:57:00,319
yield the linux and you can check the

1523
00:57:00,319 --> 00:57:02,960
structure of the binaries and how is the

1524
00:57:02,960 --> 00:57:05,359
sessions and all those reference

1525
00:57:05,359 --> 00:57:06,720
okay so this is

1526
00:57:06,720 --> 00:57:08,160
this wasn't something that you

1527
00:57:08,160 --> 00:57:10,400
structured like for your need or

1528
00:57:10,400 --> 00:57:12,160
something that's available online on

1529
00:57:12,160 --> 00:57:14,480
open sources like uh sources yeah yeah

1530
00:57:14,480 --> 00:57:16,400
just to need to download the the linux

1531
00:57:16,400 --> 00:57:17,599
the unix

1532
00:57:17,599 --> 00:57:19,359
you need to download the kali linux or

1533
00:57:19,359 --> 00:57:21,680
parachois and usually you have these

1534
00:57:21,680 --> 00:57:24,480
tools on those machines or even you you

1535
00:57:24,480 --> 00:57:26,480
can download the the ubuntu you can find

1536
00:57:26,480 --> 00:57:28,400
there you want to debian because it's a

1537
00:57:28,400 --> 00:57:30,480
it's like a file it's i think it's open

1538
00:57:30,480 --> 00:57:32,400
basically it's a kind of you don't you

1539
00:57:32,400 --> 00:57:34,880
you can using you know apt install and

1540
00:57:34,880 --> 00:57:35,920
that's it

1541
00:57:35,920 --> 00:57:37,599
okay thank you it's it's just that it's

1542
00:57:37,599 --> 00:57:39,520
a tool that is the very first time that

1543
00:57:39,520 --> 00:57:41,200
i see the exhort thing and i thought it

1544
00:57:41,200 --> 00:57:43,359
was a library that yeah those two that i

1545
00:57:43,359 --> 00:57:46,160
use this totally open source is is

1546
00:57:46,160 --> 00:57:48,799
embedded in the in the unix platform in

1547
00:57:48,799 --> 00:57:50,480
this case for example for the pdf

1548
00:57:50,480 --> 00:57:52,559
perspective are using

1549
00:57:52,559 --> 00:57:55,119
some many uh comments and tools from dj

1550
00:57:55,119 --> 00:57:57,920
stevens and inside of the blog of the

1551
00:57:57,920 --> 00:57:59,280
day steven they haven't specifically

1552
00:57:59,280 --> 00:58:02,079
packaged to using those tools in windows

1553
00:58:02,079 --> 00:58:04,319
so you can download the zip file and

1554
00:58:04,319 --> 00:58:05,920
compress this and after that you can

1555
00:58:05,920 --> 00:58:08,960
using so many tools he developed many

1556
00:58:08,960 --> 00:58:11,359
many many tools it's very nice of course

1557
00:58:11,359 --> 00:58:12,799
in linux it's more easier you know to

1558
00:58:12,799 --> 00:58:15,520
put in those open source tools

1559
00:58:15,520 --> 00:58:17,440
thank you and thank you for the talk it

1560
00:58:17,440 --> 00:58:20,799
was quite interesting thank you

1561
00:58:21,440 --> 00:58:22,799
thank you all

1562
00:58:22,799 --> 00:58:25,799
merciatus

