1
00:00:00,000 --> 00:00:02,550
hello to all so today I'm going

2
00:00:02,550 --> 00:00:05,700
to present to you a new class

3
00:00:05,700 --> 00:00:07,849
of vulnerability which is a little more obscure

4
00:00:07,849 --> 00:00:10,050
which is therefore called too early size for

5
00:00:10,050 --> 00:00:12,769
the fall and which impacts

6
00:00:12,769 --> 00:00:15,210
javascript applications another

7
00:00:15,210 --> 00:00:16,910
I have in mind particularly

8
00:00:16,910 --> 00:00:19,289
so in  what concerns me so i am

9
00:00:19,289 --> 00:00:21,029
zakaria brahimi bread tester at

10
00:00:21,029 --> 00:00:22,519
verizon

11
00:00:22,519 --> 00:00:26,130
i have 5 years of experience in

12
00:00:26,130 --> 00:00:29,099
general in cybersecurity is also

13
00:00:29,099 --> 00:00:31,080
that i am the author of several works

14
00:00:31,080 --> 00:00:34,200
in cybersecurity r&d also but

15
00:00:34,200 --> 00:00:37,050
also articles of interventions

16
00:00:37,050 --> 00:00:39,360
including events of  cybersecurity and in

17
00:00:39,360 --> 00:00:40,800
particular volunteering actions

18
00:00:40,800 --> 00:00:43,440
so in cybersecurity clubs and

19
00:00:43,440 --> 00:00:44,860
it's

20
00:00:44,860 --> 00:00:46,190
[Music]

21
00:00:46,190 --> 00:00:48,770
so a

22
00:00:48,770 --> 00:00:52,890
prototype overview for the fall so that's it

23
00:00:52,890 --> 00:00:54,090
alludes so to a vulnerability

24
00:00:54,090 --> 00:00:56,550
that makes sure to inject so  of the

25
00:00:56,550 --> 00:00:59,670
properties of which we are going we will first

26
00:00:59,670 --> 00:01:02,129
approach certain theoretical notions

27
00:01:02,129 --> 00:01:04,619
before seeing in fact bits of code and

28
00:01:04,619 --> 00:01:06,299
technical demonstrations so

29
00:01:06,299 --> 00:01:07,470
we will have to move on to  ut the same by

30
00:01:07,470 --> 00:01:10,650
certain theoretical points we will say and

31
00:01:10,650 --> 00:01:13,409
which take from the basic design

32
00:01:13,409 --> 00:01:16,110
therefore of javascript in itself so I said

33
00:01:16,110 --> 00:01:19,380
proto size pillows it is the fact

34
00:01:19,380 --> 00:01:21,030
of injecting therefore products of the

35
00:01:21,030 --> 00:01:23,610
properties sorry in java

36
00:01:23,610 --> 00:01:26,070
script objects name of  teeth prototypes

37
00:01:26,070 --> 00:01:29,130
of javascript objects so what is a

38
00:01:29,130 --> 00:01:31,799
java script object a java script object

39
00:01:31,799 --> 00:01:33,780
is nothing more than a key

40
00:01:33,780 --> 00:01:36,630
value pair so a structure so pair

41
00:01:36,630 --> 00:01:39,030
than values a bit like cows 

42
00:01:39,030 --> 00:01:42,180
map here is therefore if you want and therefore it

43
00:01:42,180 --> 00:01:44,250
is also said that javascript prototypes

44
00:01:44,250 --> 00:01:46,680
would therefore be the prototypes on in the

45
00:01:46,680 --> 00:01:48,140
vast crypt

46
00:01:48,140 --> 00:01:50,970
precisely therefore defined objects

47
00:01:50,970 --> 00:01:52,439
with structures and courtyards of

48
00:01:52,439 --> 00:01:54,750
properties bardon therefore the

49
00:01:54,750 --> 00:01:56,880
only downside therefore of which in all this  it is

50
00:01:56,880 --> 00:01:58,799
that conceptually therefore of havas script

51
00:01:58,799 --> 00:02:00,990
it is made so that each time

52
00:02:00,990 --> 00:02:02,790
we modify a prototype of an object

53
00:02:02,790 --> 00:02:05,729
therefore in a particular place therefore the

54
00:02:05,729 --> 00:02:07,530
basic object that we do not have that we call the

55
00:02:07,530 --> 00:02:10,348
base object that does  t that if we touch the

56
00:02:10,348 --> 00:02:12,640
prototype of this object there we will modify

57
00:02:12,640 --> 00:02:14,260
and all the prototypes of all the

58
00:02:14,260 --> 00:02:16,270
objects whether it is the existing objects

59
00:02:16,270 --> 00:02:18,280
or the objects so newly

60
00:02:18,280 --> 00:02:20,520
created

61
00:02:21,999 --> 00:02:26,480
so your javascript does it so no

62
00:02:26,480 --> 00:02:28,370
javascript when I said the

63
00:02:28,370 --> 00:02:31,129
newly created objects  carries or inherits

64
00:02:31,129 --> 00:02:33,319
if you want from the object class

65
00:02:33,319 --> 00:02:34,969
we are talking about so there is a base class

66
00:02:34,969 --> 00:02:37,549
which defines some priorities some

67
00:02:37,549 --> 00:02:38,900
bardon properties and some methods

68
00:02:38,900 --> 00:02:40,849
like any string the method

69
00:02:40,849 --> 00:02:43,849
constructors etc so we have seven this

70
00:02:43,849 --> 00:02:47,030
object there it is that this  basic object and

71
00:02:47,030 --> 00:02:48,310
the idea is that

72
00:02:48,310 --> 00:02:51,499
therefore the fact that we modify this

73
00:02:51,499 --> 00:02:53,620
object where even any other object

74
00:02:53,620 --> 00:02:55,969
so that will ensure that all the

75
00:02:55,969 --> 00:02:58,129
objects are all the objects that will

76
00:02:58,129 --> 00:03:00,889
be impacted and we will therefore see  every

77
00:03:00,889 --> 00:03:04,010
object so when i said inherits from

78
00:03:04,010 --> 00:03:06,199
class objects and it also inherits

79
00:03:06,199 --> 00:03:08,000
some prototypes so all

80
00:03:08,000 --> 00:03:09,739
prototypes so prototypes are

81
00:03:09,739 --> 00:03:11,329
parameters than values when i said 

82
00:03:11,329 --> 00:03:14,030
nd don  c there are also some

83
00:03:14,030 --> 00:03:15,709
prototypes which are a bit special, so

84
00:03:15,709 --> 00:03:18,590
we call them pros and magic

85
00:03:18,590 --> 00:03:21,560
a tribute and so here they are they

86
00:03:21,560 --> 00:03:23,120
are they are 3 in number but

87
00:03:23,120 --> 00:03:25,129
there may be others so we have the

88
00:03:25,129 --> 00:03:27,040
under  score protour underscore

89
00:03:27,040 --> 00:03:29,720
constructors and prototypes

90
00:03:29,720 --> 00:03:31,430
touching these three magic prototypes

91
00:03:31,430 --> 00:03:33,709
will in fact make it

92
00:03:33,709 --> 00:03:34,970
possible to alter any

93
00:03:34,970 --> 00:03:37,159
object any attributes of a

94
00:03:37,159 --> 00:03:40,269
javascript object therefore

95
00:03:40,269 --> 00:03:42,379
the fact that  an attacker as I was

96
00:03:42,379 --> 00:03:44,689
saying then crushed or even

97
00:03:44,689 --> 00:03:46,400
any object interest therefore will

98
00:03:46,400 --> 00:03:48,620
ensure impact and all the rest and last

99
00:03:48,620 --> 00:03:52,669
point therefore the priorities therefore of the

100
00:03:52,669 --> 00:03:55,699
class object prototype therefore there it speaks

101
00:03:55,699 --> 00:03:57,680
of inheritance of between the objects therefore

102
00:03:57,680 --> 00:03:59,359
when I was saying this point it has

103
00:03:59,359 --> 00:04:01,150
already been mentioned

104
00:04:01,150 --> 00:04:03,739
we are going to see an example so it

105
00:04:03,739 --> 00:04:05,870
will perhaps be clearer so this

106
00:04:05,870 --> 00:04:07,759
example here is very simple we have

107
00:04:07,759 --> 00:04:10,129
little by little a small piece of

108
00:04:10,129 --> 00:04:12,349
javascript code which means that we  defines

109
00:04:12,349 --> 00:04:15,379
a beaver object with d  them keys attributes

110
00:04:15,379 --> 00:04:18,500
name and address so we put

111
00:04:18,500 --> 00:04:20,779
anything the values don't matter so in our c

112
00:04:20,779 --> 00:04:23,810
se and we will first print we will 

113
00:04:23,810 --> 00:04:25,430
irst call on the all strin

114
00:04:25,430 --> 00:04:28,370
method on this object the case one year 

115
00:04:28,370 --> 00:04:30,020
o  the exit is the high road that we

116
00:04:30,020 --> 00:04:33,729
see therefore that we see and therefore we have the

117
00:04:33,729 --> 00:04:36,610
type of this object which objects object

118
00:04:36,610 --> 00:04:39,580
once we touch the prototype of this

119
00:04:39,580 --> 00:04:42,699
art object with the period with the the

120
00:04:42,699 --> 00:04:45,039
way that we see here therefore at stoner

121
00:04:45,039 --> 00:04:48,910
points under score proto underscore and

122
00:04:48,910 --> 00:04:51,400
we therefore define there that the tribe any

123
00:04:51,400 --> 00:04:53,770
string to something other than what it was

124
00:04:53,770 --> 00:04:56,380
therefore base defined in the the object

125
00:04:56,380 --> 00:04:58,599
in the base object for example as

126
00:04:58,599 --> 00:05:00,220
example if we put an alert for the

127
00:05:00,220 --> 00:05:01,900
south instead of what they had instead

128
00:05:01,900 --> 00:05:03,490
of the way that defines by the

129
00:05:03,490 --> 00:05:05,620
base class what will happen each

130
00:05:05,620 --> 00:05:07,180
time we create an object or  even if

131
00:05:07,180 --> 00:05:08,949
we call any string on this object there

132
00:05:08,949 --> 00:05:11,710
we will have an alert instead of jeans

133
00:05:11,710 --> 00:05:13,599
message that we had previously so

134
00:05:13,599 --> 00:05:15,840
here is

135
00:05:16,840 --> 00:05:19,350
the problem  with all this money so

136
00:05:19,350 --> 00:05:23,350
the impact is not less and it is due

137
00:05:23,350 --> 00:05:24,760
to the fact that any string is really

138
00:05:24,760 --> 00:05:26,949
used in applications in

139
00:05:26,949 --> 00:05:29,020
the code so that if we do

140
00:05:29,020 --> 00:05:31,540
not alter this function there and we are  just

141
00:05:31,540 --> 00:05:33,250
about anything they could have

142
00:05:33,250 --> 00:05:34,870
we can we can in fact cause

143
00:05:34,870 --> 00:05:36,220
denials of service due to the fact that

144
00:05:36,220 --> 00:05:38,410
the application will therefore act in an

145
00:05:38,410 --> 00:05:40,479
unexpected way and that each time it

146
00:05:40,479 --> 00:05:41,979
had to call an all string for

147
00:05:41,979 --> 00:05:43,750
recover something it will end up

148
00:05:43,750 --> 00:05:45,910
with something else with other

149
00:05:45,910 --> 00:05:49,990
information which is which is altered so

150
00:05:49,990 --> 00:05:52,180
we are going to talk about the identification

151
00:05:52,180 --> 00:05:53,830
and exploitation of this vulnerability

152
00:05:53,830 --> 00:05:56,860
before that so a small point so you

153
00:05:56,860 --> 00:05:59,130
have to know that this vulnerability there

154
00:05:59,130 --> 00:06:03,160
this product  must precisely the existence of

155
00:06:03,160 --> 00:06:05,770
functions that are not very secure like

156
00:06:05,770 --> 00:06:08,290
the unsafe [ __ ] clown function you don't have with

157
00:06:08,290 --> 00:06:10,960
dignity and the last one which is external

158
00:06:10,960 --> 00:06:13,090
so these are functions that

159
00:06:13,090 --> 00:06:15,280
handle operations including orange

160
00:06:15,280 --> 00:06:16,570
are there so they handle da  ns

161
00:06:16,570 --> 00:06:18,970
jso toys we're going to see a guy a small

162
00:06:18,970 --> 00:06:21,100
example of each of seven of these

163
00:06:21,100 --> 00:06:23,170
bond functions and vulnerable pieces of

164
00:06:23,170 --> 00:06:25,360
code or his functions the age

165
00:06:25,360 --> 00:06:27,560
that his

166
00:06:27,560 --> 00:06:29,570
employee started with the mersch function which

167
00:06:29,570 --> 00:06:31,850
is quite popular therefore in  the framework

168
00:06:31,850 --> 00:06:33,340
of this vulnerability has

169
00:06:33,340 --> 00:06:35,830
so this function is very simple

170
00:06:35,830 --> 00:06:39,410
it will just merge two objects, that is to

171
00:06:39,410 --> 00:06:41,630
say that we will stretch on all the

172
00:06:41,630 --> 00:06:44,270
attributes of another giant to

173
00:06:44,270 --> 00:06:46,450
copy them into an object b

174
00:06:46,450 --> 00:06:49,330
and therefore iteratively

175
00:06:49,330 --> 00:06:52,070
unitary on a target object has tribute

176
00:06:52,070 --> 00:06:53,300
so each time there are

177
00:06:53,300 --> 00:06:55,430
attributes defined on these objects there

178
00:06:55,430 --> 00:06:57,169
will be a mersch of these objects and the

179
00:06:57,169 --> 00:06:58,970
result will therefore be saved including

180
00:06:58,970 --> 00:07:01,400
in the target whose destination

181
00:07:01,400 --> 00:07:04,160
so at the end we  will return target

182
00:07:04,160 --> 00:07:05,630
in the sense that we will return to

183
00:07:05,630 --> 00:07:07,910
the object which will therefore contain the mayor of

184
00:07:07,910 --> 00:07:10,970
toul and the parameters in fact of

185
00:07:10,970 --> 00:07:13,070
all the prototypes of these two

186
00:07:13,070 --> 00:07:13,840
objects water

187
00:07:13,840 --> 00:07:16,040
so the problem with this function

188
00:07:16,040 --> 00:07:17,840
is that it  proved general

189
00:07:17,840 --> 00:07:20,090
p  why quite simply because it

190
00:07:20,090 --> 00:07:23,180
is possible in fact to merge an object

191
00:07:23,180 --> 00:07:25,190
with another object which in fact defines

192
00:07:25,190 --> 00:07:26,320
a prototype

193
00:07:26,320 --> 00:07:29,389
in an arbitrary way, for example if

194
00:07:29,389 --> 00:07:33,169
we define an object and a fuba object

195
00:07:33,169 --> 00:07:35,210
and we modify the

196
00:07:35,210 --> 00:07:37,310
prototype of  this way there

197
00:07:37,310 --> 00:07:38,660
it says what will happen is that

198
00:07:38,660 --> 00:07:41,570
all the objects will have an attribute for

199
00:07:41,570 --> 00:07:43,390
the fall and which tells hole value

200
00:07:43,390 --> 00:07:46,220
so there right away it's clear that we do

201
00:07:46,220 --> 00:07:48,260
n't really see the impact but we'll go there

202
00:07:48,260 --> 00:07:49,030
to arrive

203
00:07:49,030 --> 00:07:51,669
therefore the second function its clones

204
00:07:51,669 --> 00:07:54,350
whereas london quite simply serge

205
00:07:54,350 --> 00:07:56,300
but with an object quickly therefore between an

206
00:07:56,300 --> 00:07:58,460
object an object quickly here it is therefore it

207
00:07:58,460 --> 00:08:00,289
comes back a function but rj between an

208
00:08:00,289 --> 00:08:03,219
object an object quickly

209
00:08:03,960 --> 00:08:06,539
also the pata cinema said to itself that it  is

210
00:08:06,539 --> 00:08:09,360
an operation where it is possible to

211
00:08:09,360 --> 00:08:11,160
therefore define the priorities of an object

212
00:08:11,160 --> 00:08:12,960
through direct access to its

213
00:08:12,960 --> 00:08:15,599
path so as an example here is a

214
00:08:15,599 --> 00:08:17,819
piece of code which illustrates this

215
00:08:17,819 --> 00:08:21,210
vulnerability there we have an object we

216
00:08:21,210 --> 00:08:23,729
call on the  p-function  atassé 90 we

217
00:08:23,729 --> 00:08:26,729
therefore give it an object with a key is a

218
00:08:26,729 --> 00:08:29,880
value in this case there we give two

219
00:08:29,880 --> 00:08:31,949
braces this is what means an object

220
00:08:31,949 --> 00:08:33,419
quickly so the fact of putting 2 in cologne

221
00:08:33,419 --> 00:08:36,120
means that we are concrete an object and at

222
00:08:36,120 --> 00:08:38,070
inside we will therefore define a key

223
00:08:38,070 --> 00:08:40,950
is false with a bar value so

224
00:08:40,950 --> 00:08:43,049
until then everything is fine but on the other hand

225
00:08:43,049 --> 00:08:45,000
if we call precisely on this

226
00:08:45,000 --> 00:08:47,610
fatah cinema function in the same object

227
00:08:47,610 --> 00:08:49,800
and that we define instead of  a

228
00:08:49,800 --> 00:08:51,120
simple values key we are going to touch the proto

229
00:08:51,120 --> 00:08:52,230
ype by pr

230
00:08:52,230 --> 00:08:53,700
cisely defining therefore one of the sprin

231
00:08:53,700 --> 00:08:55,230
s proto 1 points scores for him a

232
00:08:55,230 --> 00:08:57,390
d we give him the value hole at this momen

233
00:08:57,390 --> 00:09:00,120
there will be there will be all the objec

234
00:09:00,120 --> 00:09:02,430
s that they will have precisely therefore 7  ,7

235
00:09:02,430 --> 00:09:04,680
this attribute the prudence defined who is

236
00:09:04,680 --> 00:09:06,089
paul houde who will have the value holes in

237
00:09:06,089 --> 00:09:08,220
particular therefore the new objects created

238
00:09:08,220 --> 00:09:10,970
that you will have created therefore afterwards

239
00:09:10,970 --> 00:09:14,459
we also have the ex tint which says that it is the

240
00:09:14,459 --> 00:09:15,839
same as the mayor ch but by  against

241
00:09:15,839 --> 00:09:18,600
this it is a question of merging several objects

242
00:09:18,600 --> 00:09:20,399
so not fair  not just two but

243
00:09:20,399 --> 00:09:22,649
several objects but almost in the

244
00:09:22,649 --> 00:09:24,830
same way

245
00:09:24,830 --> 00:09:27,540
so we are going to see vulnerabilities

246
00:09:27,540 --> 00:09:30,110
in relation with this

247
00:09:30,110 --> 00:09:32,310
end of the scenarios which are in

248
00:09:32,310 --> 00:09:34,860
relation with CVs which are in

249
00:09:34,860 --> 00:09:36,240
relation precisely with these functions

250
00:09:36,240 --> 00:09:38,760
each of a  so that one therefore of the

251
00:09:38,760 --> 00:09:42,300
functions induced therefore to a cv had at

252
00:09:42,300 --> 00:09:45,570
least to begin therefore with the cvae 2010

253
00:09:45,570 --> 00:09:49,440
9 10 744 which in fact affects a

254
00:09:49,440 --> 00:09:52,500
library named the audacity of which all

255
00:09:52,500 --> 00:09:54,240
versions lower than 4 points 17

256
00:09:54,240 --> 00:09:57,360
points 12 so it says  that the aude h is

257
00:09:57,360 --> 00:09:59,250
a javascript library which

258
00:09:59,250 --> 00:10:01,080
therefore delivers performance modularity

259
00:10:01,080 --> 00:10:02,760
and it is therefore to use them in a

260
00:10:02,760 --> 00:10:04,680
specific context what matters to us in fact

261
00:10:04,680 --> 00:10:07,350
is that this one uses precisely

262
00:10:07,350 --> 00:10:09,750
so to appeal to the  function mersch

263
00:10:09,750 --> 00:10:12,210
do not necessarily therefore have the function of

264
00:10:12,210 --> 00:10:13,920
mayor i as it is as

265
00:10:13,920 --> 00:10:15,870
we have seen it therefore algorithmic words but it

266
00:10:15,870 --> 00:10:16,950
comes down to doing the same thing in fact

267
00:10:16,950 --> 00:10:18,660
so it is a function which is called in

268
00:10:18,660 --> 00:10:20,100
the occurrence mr chef does not like  s but rj

269
00:10:20,100 --> 00:10:21,750
but which does exactly the same

270
00:10:21,750 --> 00:10:25,920
thing inside so what there is we have we

271
00:10:25,920 --> 00:10:27,420
start with films so include the

272
00:10:27,420 --> 00:10:29,310
library in this case a

273
00:10:29,310 --> 00:10:31,290
vulnerable version of the library then we have

274
00:10:31,290 --> 00:10:33,540
when this driver have defined  a constant

275
00:10:33,540 --> 00:10:36,000
period which therefore carries a

276
00:10:36,000 --> 00:10:37,710
constructors attribute and at this moment we

277
00:10:37,710 --> 00:10:39,930
touch on the prototype we define its a

278
00:10:39,930 --> 00:10:43,560
new object key to 0 holes so after

279
00:10:43,560 --> 00:10:45,210
calling the check function what it

280
00:10:45,210 --> 00:10:46,890
does is that it puts rj11 objects  empty

281
00:10:46,890 --> 00:10:48,780
with therefore the period that we have just

282
00:10:48,780 --> 00:10:51,180
created at that time when I was

283
00:10:51,180 --> 00:10:53,400
saying that we touched on the prototype

284
00:10:53,400 --> 00:10:55,260
and that we then made an air between

285
00:10:55,260 --> 00:10:57,150
two objects the object quickly which inherits from

286
00:10:57,150 --> 00:11:00,030
the base objects  and another object which

287
00:11:00,030 --> 00:11:02,310
therefore defines a prototype apart from what is

288
00:11:02,310 --> 00:11:04,530
going to happen we make a condition

289
00:11:04,530 --> 00:11:07,500
in fact just below which says that if therefore

290
00:11:07,500 --> 00:11:09,960
any object then the vacuum we will

291
00:11:09,960 --> 00:11:12,089
say the object quickly which means n

292
00:11:12,089 --> 00:11:15,120
Any object really has a key at

293
00:11:15,120 --> 00:11:17,880
0 which equals a hole at this time.  at we

294
00:11:17,880 --> 00:11:19,950
display a message it's very simple

295
00:11:19,950 --> 00:11:21,810
so our output after calling this

296
00:11:21,810 --> 00:11:24,240
function has really been so so we

297
00:11:24,240 --> 00:11:25,920
really enter the condition is

298
00:11:25,920 --> 00:11:27,960
so we confirm that we were able to pollute

299
00:11:27,960 --> 00:11:30,480
so the prototype is modified so

300
00:11:30,480 --> 00:11:32,130
information on all the objects

301
00:11:32,130 --> 00:11:33,870
javascript

302
00:11:33,870 --> 00:11:38,490
so there is the cvae 2020 28 461 which

303
00:11:38,490 --> 00:11:41,040
affects the the library i ended up in

304
00:11:41,040 --> 00:11:44,520
its versions lower than 1.3.0 and therefore

305
00:11:44,520 --> 00:11:45,720
the device years old therefore in age and is

306
00:11:45,720 --> 00:11:47,279
cynical it is free and which does

307
00:11:47,279 --> 00:11:48,990
parking and its  realizations

308
00:11:48,990 --> 00:11:51,240
of the configuration files and there is

309
00:11:51,240 --> 00:11:53,220
therefore there what happens is that we will

310
00:11:53,220 --> 00:11:54,960
create a small file that we do not remember

311
00:11:54,960 --> 00:11:57,360
before and is therefore the library

312
00:11:57,360 --> 00:11:59,400
operates beyond this way there so we

313
00:11:59,400 --> 00:12:01,290
create we create  a small file we

314
00:12:01,290 --> 00:12:03,060
therefore define all inside us in our case we

315
00:12:03,060 --> 00:12:05,040
will create the file we will therefore define

316
00:12:05,040 --> 00:12:06,029
only our country and the other who will

317
00:12:06,029 --> 00:12:07,560
modify the prototype inside

318
00:12:07,560 --> 00:12:09,270
this file there and at that moment so

319
00:12:09,270 --> 00:12:11,279
when we have  already includes the

320
00:12:11,279 --> 00:12:14,279
vulnerable library  require I have finished and we are going to

321
00:12:14,279 --> 00:12:16,950
do parking with the function in il

322
00:12:16,950 --> 00:12:19,770
point because and we are therefore going to load our

323
00:12:19,770 --> 00:12:21,839
file the content of our file

324
00:12:21,839 --> 00:12:23,640
what is going to happen in fact to check

325
00:12:23,640 --> 00:12:25,230
quite simply as we are used to

326
00:12:25,230 --> 00:12:26,700
doing so for  check that we have

327
00:12:26,700 --> 00:12:28,920
polluted the prototypes of all the objects

328
00:12:28,920 --> 00:12:30,930
we will try to see if the crazy variable

329
00:12:30,930 --> 00:12:32,310
that we had defined in the other files

330
00:12:32,310 --> 00:12:35,040
and exists in all the objects in

331
00:12:35,040 --> 00:12:36,990
particular the object quickly so a little

332
00:12:36,990 --> 00:12:39,540
console  point log on the empty object

333
00:12:39,540 --> 00:12:42,570
crazy point will return us precisely therefore the

334
00:12:42,570 --> 00:12:43,709
value for him perhaps which

335
00:12:43,709 --> 00:12:46,920
confirms we are doing our success of

336
00:12:46,920 --> 00:12:49,230
the exploitation therefore another

337
00:12:49,230 --> 00:12:52,100
vulnerability which therefore affects

338
00:12:52,100 --> 00:12:54,009
mersch the function which we have already seen

339
00:12:54,009 --> 00:12:56,029
recursive  mersch so there is a

340
00:12:56,029 --> 00:12:57,079
library you should know that there is an

341
00:12:57,079 --> 00:12:58,399
emerging library which does a bit what

342
00:12:58,399 --> 00:13:01,100
we have said so far so thank you for the

343
00:13:01,100 --> 00:13:03,800
objects of the parameters and the attributes

344
00:13:03,800 --> 00:13:06,529
of objects and so there when I said so

345
00:13:06,529 --> 00:13:09,230
if  we follow the piece of code we start  e

346
00:13:09,230 --> 00:13:11,269
by including the library so a

347
00:13:11,269 --> 00:13:14,360
2d version vulnerable version then we

348
00:13:14,360 --> 00:13:17,660
define note the other pelo 2 where we

349
00:13:17,660 --> 00:13:20,240
therefore define a safe value the

350
00:13:20,240 --> 00:13:23,690
prototype which is for him yes and

351
00:13:23,690 --> 00:13:25,399
then what will happen is that we

352
00:13:25,399 --> 00:13:27,620
therefore define two objects  in their way

353
00:13:27,620 --> 00:13:31,310
so we breastfeed object one that has the same

354
00:13:31,310 --> 00:13:32,899
shape have only paid our two if you

355
00:13:32,899 --> 00:13:36,350
want and we will therefore display the content

356
00:13:36,350 --> 00:13:38,480
of objects a point paul houde

357
00:13:38,480 --> 00:13:41,269
before having to appeal to the mayors ch we

358
00:13:41,269 --> 00:13:44,300
see that we don't  there is no feedback so before

359
00:13:44,300 --> 00:13:46,190
before calling the mayors but on the other hand

360
00:13:46,190 --> 00:13:47,959
after it calls for the function

361
00:13:47,959 --> 00:13:50,329
but rj recursive we will see that now

362
00:13:50,329 --> 00:13:53,690
there is a prototype so there is an attribute for

363
00:13:53,690 --> 00:13:55,940
the jet and which is therefore defined downstream and

364
00:13:55,940 --> 00:13:58,279
laugh that we have  specified so we will see

365
00:13:58,279 --> 00:14:00,529
that we have we have succeeded in polluting the

366
00:14:00,529 --> 00:14:04,480
prototype of the object

367
00:14:05,130 --> 00:14:08,220
another wakes up at 2019 11 358 which

368
00:14:08,220 --> 00:14:11,010
is done I am writing in this case so that

369
00:14:11,010 --> 00:14:12,810
if she has done a little more  noise

370
00:14:12,810 --> 00:14:14,130
simply because I have leather so it is

371
00:14:14,130 --> 00:14:16,770
very used in the  he

372
00:14:16,770 --> 00:14:19,110
web environment is what made it

373
00:14:19,110 --> 00:14:21,480
more impactful than others, but the

374
00:14:21,480 --> 00:14:24,000
principle remains the same, we do so we

375
00:14:24,000 --> 00:14:26,010
therefore have free software and I therefore write everything

376
00:14:26,010 --> 00:14:28,190
that is lower than version 3.4.0

377
00:14:28,190 --> 00:14:30,750
so I  I have leather there so it allows

378
00:14:30,750 --> 00:14:32,880
these libraries which therefore allows to

379
00:14:32,880 --> 00:14:36,590
manipulate gso html code sorry

380
00:14:36,590 --> 00:14:40,770
ajax html code and everything that is

381
00:14:40,770 --> 00:14:43,980
therefore around the events the

382
00:14:43,980 --> 00:14:47,250
animations so who can have is therefore

383
00:14:47,250 --> 00:14:49,470
there we define we start with

384
00:14:49,470 --> 00:14:51,650
therefore include one of these

385
00:14:51,650 --> 00:14:55,140
vulnerable libraries and have in fact defined so

386
00:14:55,140 --> 00:14:57,240
the we have an hour we have a variable so

387
00:14:57,240 --> 00:14:59,220
which is finally called we have a prototype

388
00:14:59,220 --> 00:15:01,530
which is therefore called from modes we

389
00:15:01,530 --> 00:15:03,120
start by making a console points

390
00:15:03,120 --> 00:15:05,250
loeb so we  we know we are trying to see the

391
00:15:05,250 --> 00:15:07,890
content of this attribute then we are

392
00:15:07,890 --> 00:15:10,560
going to do so initially it is empty and

393
00:15:10,560 --> 00:15:13,140
then we are going to use external

394
00:15:13,140 --> 00:15:15,660
this time it is the same way we are going to

395
00:15:15,660 --> 00:15:17,580
put therefore whose attributes that

396
00:15:17,580 --> 00:15:18,750
the function takes  end of the year by a master

397
00:15:18,750 --> 00:15:20,280
who takes the  external function at some

398
00:15:20,280 --> 00:15:21,990
point we will define the prototype

399
00:15:21,990 --> 00:15:23,970
in the same way so by putting

400
00:15:23,970 --> 00:15:27,390
hole modes so there is not all the

401
00:15:27,390 --> 00:15:29,160
code it could be that the

402
00:15:29,160 --> 00:15:31,860
blood tribe is already initialized with a

403
00:15:31,860 --> 00:15:34,140
value for example folz and  there we make

404
00:15:34,140 --> 00:15:35,940
sure that we change the value

405
00:15:35,940 --> 00:15:38,040
arbitrarily we do not precisely modify the

406
00:15:38,040 --> 00:15:39,870
prototype so we are going to put this value

407
00:15:39,870 --> 00:15:41,940
we are going to pass it through holes we will see

408
00:15:41,940 --> 00:15:45,090
a scenario that or therefore which

409
00:15:45,090 --> 00:15:46,860
shows the impact in fact behind  this

410
00:15:46,860 --> 00:15:49,890
small manipulation and therefore in the end

411
00:15:49,890 --> 00:15:53,160
if we display the an object quickly with

412
00:15:53,160 --> 00:15:54,840
a dave mode attribute we will see we will have

413
00:15:54,840 --> 00:15:57,330
the best the hole value which will be

414
00:15:57,330 --> 00:16:01,010
displayed in the console

415
00:16:01,020 --> 00:16:03,140
I think that one last therefore

416
00:16:03,140 --> 00:16:07,500
vulnerability cve e 2021  of 134 38 who

417
00:16:07,500 --> 00:16:09,120
made this time so the library

418
00:16:09,120 --> 00:16:11,430
impact in versions below

419
00:16:11,430 --> 00:16:14,070
zero point 8.4 so there in this case

420
00:16:14,070 --> 00:16:17,490
so the same we have we start by therefore

421
00:16:17,490 --> 00:16:20,040
including the library it says it is

422
00:16:20,040 --> 00:16:22,050
said that a leg c  is a package q  ui

423
00:16:22,050 --> 00:16:24,840
therefore makes it possible to define java

424
00:16:24,840 --> 00:16:28,140
javascript objects using pasta

425
00:16:28,140 --> 00:16:30,660
mango db so in the way bucket b

426
00:16:30,660 --> 00:16:33,210
so paths in the way so mango

427
00:16:33,210 --> 00:16:36,270
db so there the same we are going this time c

428
00:16:36,270 --> 00:16:39,120
we are in the process of exploiting so a  code

429
00:16:39,120 --> 00:16:41,820
that uses

430
00:16:41,820 --> 00:16:43,410
the pateras cinema function that we saw earlier so

431
00:16:43,410 --> 00:16:45,750
just in passing and the device so

432
00:16:45,750 --> 00:16:48,870
we call on this function so

433
00:16:48,870 --> 00:16:51,350
method 7 we precisely

434
00:16:51,350 --> 00:16:53,160
define it are therefore our pay l  the other

435
00:16:53,160 --> 00:16:55,860
as usual is the same we replay the

436
00:16:55,860 --> 00:16:57,540
same the same scenario so we arrive

437
00:16:57,540 --> 00:16:59,400
each time injected to show you

438
00:16:59,400 --> 00:17:01,020
the idea is to show you in fact

439
00:17:01,020 --> 00:17:03,690
for each function that it is possible

440
00:17:03,690 --> 00:17:05,430
finally what the keys are

441
00:17:05,430 --> 00:17:09,770
sensitive to this vulnerability there

442
00:17:10,089 --> 00:17:12,130
so there we are going to speak in a general way

443
00:17:12,130 --> 00:17:13,990
therefore of the potential impacts and then

444
00:17:13,990 --> 00:17:16,869
we will see a case therefore which reflects an

445
00:17:16,869 --> 00:17:18,819
impact of armed therefore this list but

446
00:17:18,819 --> 00:17:20,470
roughly speaking therefore these are the

447
00:17:20,470 --> 00:17:22,359
exhaustive list of the impacts which could

448
00:17:22,359 --> 00:17:24,880
have been caused by  this v  ulnerability

449
00:17:24,880 --> 00:17:26,439
therefore does not have to start with a denial of service as

450
00:17:26,439 --> 00:17:28,150
we had said to ourselves earlier

451
00:17:28,150 --> 00:17:31,240
so if we manage to touch an object

452
00:17:31,240 --> 00:17:34,600
so finally a method of an object so

453
00:17:34,600 --> 00:17:36,640
which is very very used such as for

454
00:17:36,640 --> 00:17:38,830
example at  put all streaming etc we

455
00:17:38,830 --> 00:17:40,600
will ensure that if it is

456
00:17:40,600 --> 00:17:42,279
used a lot in the code there will be

457
00:17:42,279 --> 00:17:43,899
inconsistencies for example we can

458
00:17:43,899 --> 00:17:46,330
modify finally give it an

459
00:17:46,330 --> 00:17:47,590
integer value instead of what

460
00:17:47,590 --> 00:17:49,899
it is initially defined  is

461
00:17:49,899 --> 00:17:50,830
it going to happen is that there will be

462
00:17:50,830 --> 00:17:52,149
inconsistencies in the code which

463
00:17:52,149 --> 00:17:53,649
could potentially cause

464
00:17:53,649 --> 00:17:56,230
the code to crash and therefore cause a

465
00:17:56,230 --> 00:17:59,169
denial of service second case it's the

466
00:17:59,169 --> 00:18:02,559
rcea so it still requires

467
00:18:02,559 --> 00:18:04,450
specific conditions so

468
00:18:04,450 --> 00:18:06,279
that for this to happen to happen

469
00:18:06,279 --> 00:18:08,500
by so there would have to be a and

470
00:18:08,500 --> 00:18:10,720
valdes a code that is precisely

471
00:18:10,720 --> 00:18:13,899
retrieved from an attribute so for

472
00:18:13,899 --> 00:18:16,120
example it is said that if we have and valls

473
00:18:16,120 --> 00:18:17,860
we object points are awarded  august

474
00:18:17,860 --> 00:18:20,320
for example  and at that moment therefore if an

475
00:18:20,320 --> 00:18:22,020
attacker manages to pollute therefore

476
00:18:22,020 --> 00:18:24,909
the attribution of a tribute of another

477
00:18:24,909 --> 00:18:26,440
object one does not necessarily speak this one

478
00:18:26,440 --> 00:18:28,539
as we had said dual is due to the

479
00:18:28,539 --> 00:18:30,789
conceptual way of javascript he will be able to

480
00:18:30,789 --> 00:18:32,529
precisely manipulate  this informed of

481
00:18:32,529 --> 00:18:34,059
this data and therefore

482
00:18:34,059 --> 00:18:37,630
execute code so last impact

483
00:18:37,630 --> 00:18:41,679
is the injection is therefore there it is said

484
00:18:41,679 --> 00:18:43,659
that an attacker can therefore pollute

485
00:18:43,659 --> 00:18:46,630
a property of an object of a base

486
00:18:46,630 --> 00:18:49,809
object and therefore that  who will therefore be able to

487
00:18:49,809 --> 00:18:52,029
potentially altered an information

488
00:18:52,029 --> 00:18:54,789
which is he that they use and therefore by

489
00:18:54,789 --> 00:18:57,220
the bec lindon his logic for example of

490
00:18:57,220 --> 00:18:58,720
access control mechanisms or

491
00:18:58,720 --> 00:19:01,779
anything therefore as soon as this value

492
00:19:01,779 --> 00:19:03,580
recover from a prototype and

493
00:19:03,580 --> 00:19:05,380
therefore use in  bec india to do for

494
00:19:05,380 --> 00:19:07,649
in conditions for

495
00:19:07,649 --> 00:19:09,820
example authentication or as part of the

496
00:19:09,820 --> 00:19:11,500
access control mechanism at this

497
00:19:11,500 --> 00:19:13,140
time so there could

498
00:19:13,140 --> 00:19:15,820
potentially be a possibility to play around

499
00:19:15,820 --> 00:19:17,350
with that to try and make a stopover

500
00:19:17,350 --> 00:19:19,510
in sion  of privileges we will see a case

501
00:19:19,510 --> 00:19:22,240
precisely which reflects the third

502
00:19:22,240 --> 00:19:24,630
the last a PACS

503
00:19:24,630 --> 00:19:27,660
and this one so it is drawn in ctf

504
00:19:27,660 --> 00:19:30,120
from a challenge of ctf which appeared in

505
00:19:30,120 --> 00:19:33,330
the nile as zero like akiyama 2019

506
00:19:33,330 --> 00:19:36,270
so there we had in fact a piece of  code

507
00:19:36,270 --> 00:19:38,790
therefore in our youth on the back hand side

508
00:19:38,790 --> 00:19:41,400
which means that therefore we had made a

509
00:19:41,400 --> 00:19:43,290
donation that there is a call for the function of

510
00:19:43,290 --> 00:19:46,110
mayor precisely in what beyond and at a

511
00:19:46,110 --> 00:19:48,900
given moment therefore in terms

512
00:19:48,900 --> 00:19:50,910
of access control  so

513
00:19:50,910 --> 00:19:52,950
there was precisely this case where

514
00:19:52,950 --> 00:19:54,780
values that are retrieved from attri

515
00:19:54,780 --> 00:19:56,580
utes were used in the acces

516
00:19:56,580 --> 00:19:59,220
control logic and at that time we had s

517
00:19:59,220 --> 00:20:02,400
we start by defining an ob

518
00:20:02,400 --> 00:20:05,100
ect quickly then we have an object  a

519
00:20:05,100 --> 00:20:07,740
definition of an object b which in

520
00:20:07,740 --> 00:20:10,710
fact carries the admin key and which is initialized

521
00:20:10,710 --> 00:20:13,770
to falls then we have a call to the

522
00:20:13,770 --> 00:20:15,960
function but rj with the two objects a

523
00:20:15,960 --> 00:20:18,450
and b and subsequently good so we

524
00:20:18,450 --> 00:20:20,160
start by making a console points

525
00:20:20,160 --> 00:20:22,620
loeb after admin we will see that the good

526
00:20:22,620 --> 00:20:25,140
so the  a value is indeed false what

527
00:20:25,140 --> 00:20:26,880
will happen is that we will define

528
00:20:26,880 --> 00:20:28,620
another object to replay the scenario

529
00:20:28,620 --> 00:20:30,720
so we will define an object it is the same

530
00:20:30,720 --> 00:20:33,540
quickly and have another object d with a

531
00:20:33,540 --> 00:20:35,430
period so who goes who goes  therefore pollute

532
00:20:35,430 --> 00:20:37,920
the prototype we will do but rj give in

533
00:20:37,920 --> 00:20:39,960
so some walk on their two others

534
00:20:39,960 --> 00:20:42,060
annoying if on the other hand this time we

535
00:20:42,060 --> 00:20:44,940
therefore try to print and therefore the

536
00:20:44,940 --> 00:20:47,340
content of the admin prototype end of the

537
00:20:47,340 --> 00:20:49,290
admin key we will see that this time it

538
00:20:49,290 --> 00:20:51,170
will be holey and at that time so

539
00:20:51,170 --> 00:20:53,700
all the other objects

540
00:20:53,700 --> 00:20:55,380
will be holey too so the idea is to

541
00:20:55,380 --> 00:20:57,090
just be able to define two other

542
00:20:57,090 --> 00:20:59,340
objects to play with and so we will have an

543
00:20:59,340 --> 00:21:00,720
impact is therefore the rest of the  objects in

544
00:21:00,720 --> 00:21:02,430
particular those which are actually

545
00:21:02,430 --> 00:21:05,040
used in the code on the tray 1 side of

546
00:21:05,040 --> 00:21:06,960
the application and therefore we will have

547
00:21:06,960 --> 00:21:09,630
gained the axes and finally an

548
00:21:09,630 --> 00:21:12,860
administrator access in an arbitrary way

549
00:21:12,860 --> 00:21:15,830
a tweak brawl for the for the

550
00:21:15,830 --> 00:21:18,049
mersch function and therefore we can we can

551
00:21:18,049 --> 00:21:19,580
get inspiration for others too  s

552
00:21:19,580 --> 00:21:20,809
functions we can follow the same logic

553
00:21:20,809 --> 00:21:24,470
so it's very simple moreover it is

554
00:21:24,470 --> 00:21:27,130
the fixed that has been taken into account and

555
00:21:27,130 --> 00:21:30,590
therefore provides through the parking lot of the

556
00:21:30,590 --> 00:21:32,450
various vulnerable bookstores in

557
00:21:32,450 --> 00:21:33,890
particular mersch the free and the

558
00:21:33,890 --> 00:21:36,020
main margins therefore the  idea is to

559
00:21:36,020 --> 00:21:38,809
check that the prototype finally the

560
00:21:38,809 --> 00:21:40,160
prototypes when we do our

561
00:21:40,160 --> 00:21:41,660
iteration between the between one object

562
00:21:41,660 --> 00:21:43,640
another for precisely everything paired we

563
00:21:43,640 --> 00:21:46,130
first check that we are not

564
00:21:46,130 --> 00:21:48,049
manipulating there are no

565
00:21:48,049 --> 00:21:50,179
magic prototypes  prototype that we talked about for

566
00:21:50,179 --> 00:21:51,500
example too early proto taipei

567
00:21:51,500 --> 00:21:53,120
builders for example that we

568
00:21:53,120 --> 00:21:55,220
are not trying to have the energy to

569
00:21:55,220 --> 00:21:57,260
manipulate these types of prototype for the

570
00:21:57,260 --> 00:21:59,450
rest we will accept any attribute

571
00:21:59,450 --> 00:22:01,010
so there is a small problem a small

572
00:22:01,010 --> 00:22:03,500
condition which has  been added if therefore the

573
00:22:03,500 --> 00:22:06,169
tribe and is defined on under sport

574
00:22:06,169 --> 00:22:07,640
proto underscore at this time we will do

575
00:22:07,640 --> 00:22:10,460
well so we will not touch on the other hand

576
00:22:10,460 --> 00:22:12,230
for any other attribute we will do the

577
00:22:12,230 --> 00:22:15,200
mayor jean so here it is a fixed shrink

578
00:22:15,200 --> 00:22:16,600
for this  This is

579
00:22:16,600 --> 00:22:19,370
therefore the recommendation in general

580
00:22:19,370 --> 00:22:21,309
so it says that

581
00:22:21,309 --> 00:22:23,840
used in recommends to use therefore

582
00:22:23,840 --> 00:22:26,720
javascript libraries which are

583
00:22:26,720 --> 00:22:29,000
reputed to be endless or

584
00:22:29,000 --> 00:22:30,679
therefore use functions it is the

585
00:22:30,679 --> 00:22:32,630
vulnerable functions in a precisely

586
00:22:32,630 --> 00:22:35,540
safe way like its banks  clown pata cinema

587
00:22:35,540 --> 00:22:36,610
txt

588
00:22:36,610 --> 00:22:39,770
second point therefore it is advisable to

589
00:22:39,770 --> 00:22:41,480
actually check the dependencies

590
00:22:41,480 --> 00:22:43,280
therefore check the existence of these come to

591
00:22:43,280 --> 00:22:44,780
live in dependencies before

592
00:22:44,780 --> 00:22:46,100
even using them therefore do not take

593
00:22:46,100 --> 00:22:49,100
third-party libraries directly

594
00:22:49,100 --> 00:22:50,630
and use them include them in your

595
00:22:50,630 --> 00:22:53,049
rating  directly

596
00:22:53,049 --> 00:22:54,340
we will therefore see in a more technical way

597
00:22:54,340 --> 00:22:56,279
some

598
00:22:56,279 --> 00:22:58,690
preventive measures this time so first

599
00:22:58,690 --> 00:23:01,119
point we have the freeze object so who

600
00:23:01,119 --> 00:23:03,820
knows the mechanisms which are they are

601
00:23:03,820 --> 00:23:05,919
therefore offered by jonah street also

602
00:23:05,919 --> 00:23:09,009
natively therefore the fact of curling an

603
00:23:09,009 --> 00:23:10,450
object that  does that mean so we

604
00:23:10,450 --> 00:23:12,629
are going to have a first test object

605
00:23:12,629 --> 00:23:15,340
finally we are going to define therefore on the asset

606
00:23:15,340 --> 00:23:18,309
string we are going to replace  puts it at the bare minimum

607
00:23:18,309 --> 00:23:20,499
we tell it let's finish so we

608
00:23:20,499 --> 00:23:23,259
assign it a value test a string of

609
00:23:23,259 --> 00:23:25,720
characters test if we print so

610
00:23:25,720 --> 00:23:27,789
what ensures the object of the string on the

611
00:23:27,789 --> 00:23:29,169
prototype of the object any string so we

612
00:23:29,169 --> 00:23:32,049
will have a test like the  foot now if

613
00:23:32,049 --> 00:23:33,850
we frieze the object so we will do a

614
00:23:33,850 --> 00:23:35,769
freeze object point a prototype so

615
00:23:35,769 --> 00:23:38,049
which is our object in this case if

616
00:23:38,049 --> 00:23:41,049
we frieze the object we will see that there

617
00:23:41,049 --> 00:23:43,210
will be more the possibility of modifying the

618
00:23:43,210 --> 00:23:45,269
prototypes of this object  so for example at the

619
00:23:45,269 --> 00:23:47,440
very bottom if we

620
00:23:47,440 --> 00:23:49,720
redefine this same object again and

621
00:23:49,720 --> 00:23:50,980
this time we give the value and

622
00:23:50,980 --> 00:23:53,679
therefore aim at this object there we will see that if

623
00:23:53,679 --> 00:23:56,139
we redo a print of the tone tribe

624
00:23:56,139 --> 00:23:57,940
than of the method  any string we will see

625
00:23:57,940 --> 00:24:00,100
that it will remain on the first the

626
00:24:00,100 --> 00:24:01,269
first value which is is in

627
00:24:01,269 --> 00:24:02,200
occurrence so there is this

628
00:24:02,200 --> 00:24:05,080
possibility of frieze and objects when after

629
00:24:05,080 --> 00:24:07,149
having defined them so there is a way

630
00:24:07,149 --> 00:24:11,720
to call the freeze method

631
00:24:11,720 --> 00:24:14,370
second point these diagrams  validation of

632
00:24:14,370 --> 00:24:18,060
this  we can therefore there we tell you that it

633
00:24:18,060 --> 00:24:20,090
will be necessary to do a filtering therefore gie its to

634
00:24:20,090 --> 00:24:23,040
do a strict filtering therefore when

635
00:24:23,040 --> 00:24:25,260
the parameters used therefore in your

636
00:24:25,260 --> 00:24:27,360
code come from external sources

637
00:24:27,360 --> 00:24:29,100
and it is also said that several

638
00:24:29,100 --> 00:24:32,100
node js libraries allow precisely

639
00:24:32,100 --> 00:24:35,070
therefore to do this  I will give you the

640
00:24:35,070 --> 00:24:37,440
name of a reputable library precisely

641
00:24:37,440 --> 00:24:39,180
so to check the code and

642
00:24:39,180 --> 00:24:41,370
correct it so finally bring up

643
00:24:41,370 --> 00:24:43,310
all the non-conformities

644
00:24:43,310 --> 00:24:46,140
third point is to see venice cleared up

645
00:24:46,140 --> 00:24:48,570
so there it is said that it will be necessary to

646
00:24:48,570 --> 00:24:50,280
simply avoid the functions

647
00:24:50,280 --> 00:24:51,780
vulnerable implementations so it

648
00:24:51,780 --> 00:24:53,910
will be necessary to at least know which are

649
00:24:53,910 --> 00:24:56,990
the vulnerable versions of the libraries

650
00:24:56,990 --> 00:24:59,580
concerned and make sure not

651
00:24:59,580 --> 00:25:01,950
to use them in when I said the

652
00:25:01,950 --> 00:25:03,240
only way is to check

653
00:25:03,240 --> 00:25:06,210
what you are using then we have a

654
00:25:06,210 --> 00:25:09,570
fourth point which is  used therefore

655
00:25:09,570 --> 00:25:12,000
objects prototype leaves our objects

656
00:25:12,000 --> 00:25:13,980
its prototype so it is possible also

657
00:25:13,980 --> 00:25:15,570
effectively through java  script to

658
00:25:15,570 --> 00:25:17,790
create objects that hold no

659
00:25:17,790 --> 00:25:19,920
prototype so if you in your code

660
00:25:19,920 --> 00:25:21,360
you don't actually need that

661
00:25:21,360 --> 00:25:24,180
you won't need the prototypes at

662
00:25:24,180 --> 00:25:26,610
this time let's create a prototype

663
00:25:26,610 --> 00:25:30,210
with the create method and giving null

664
00:25:30,210 --> 00:25:32,190
against caen parameters you will create

665
00:25:32,190 --> 00:25:34,560
between an object its no prototype

666
00:25:34,560 --> 00:25:36,750
proof in support so the piece of

667
00:25:36,750 --> 00:25:39,630
code at the bottom we start by defining a

668
00:25:39,630 --> 00:25:43,590
crazy object with a key which is a

669
00:25:43,590 --> 00:25:46,350
value value we start with trinity

670
00:25:46,350 --> 00:25:49,320
so the prototype 2 2 finally  the

671
00:25:49,320 --> 00:25:51,360
prototype najib which is proto of this

672
00:25:51,360 --> 00:25:52,980
object does not have so we will have

673
00:25:52,980 --> 00:25:55,290
a whole chain we have hot foot

674
00:25:55,290 --> 00:25:57,870
now if we go if we do that if we

675
00:25:57,870 --> 00:25:59,700
make another object we will create another

676
00:25:59,700 --> 00:26:02,970
bar object with by doing  call this

677
00:26:02,970 --> 00:26:04,800
time therefore to the create function and we

678
00:26:04,800 --> 00:26:07,590
therefore give it the null parameter if

679
00:26:07,590 --> 00:26:09,120
we therefore call once

680
00:26:09,120 --> 00:26:10,530
again its bar points constructors for

681
00:26:10,530 --> 00:26:11,880
example or even prototype or

682
00:26:11,880 --> 00:26:13,830
anything we will see that we will therefore have a

683
00:26:13,830 --> 00:26:16,800
message  undefin  ed and that said so when

684
00:26:16,800 --> 00:26:19,170
I said we created a java

685
00:26:19,170 --> 00:26:21,050
script object its no prototype

686
00:26:21,050 --> 00:26:23,620
and last element

687
00:26:23,620 --> 00:26:25,210
it says that so it is better

688
00:26:25,210 --> 00:26:27,760
to use so dh map maps

689
00:26:27,760 --> 00:26:30,130
dictionaries instead of object so that

690
00:26:30,130 --> 00:26:31,600
's really  if you want to use

691
00:26:31,600 --> 00:26:34,450
a dictionary so if you

692
00:26:34,450 --> 00:26:35,830
just want that you don't need the

693
00:26:35,830 --> 00:26:38,620
prototypes no need to use them it

694
00:26:38,620 --> 00:26:40,270
's possible in fact to use

695
00:26:40,270 --> 00:26:41,980
maps instead and so you'll have a

696
00:26:41,980 --> 00:26:44,020
structure that has the same value

697
00:26:44,020 --> 00:26:47,910
as the  prototype that we saw

698
00:26:47,910 --> 00:26:50,860
in this bonus our pollutions package of

699
00:26:50,860 --> 00:26:53,080
which it is the package so

700
00:26:53,080 --> 00:26:55,720
I spoke to you which is called our pollutions and

701
00:26:55,720 --> 00:26:58,059
which precisely allows people who

702
00:26:58,059 --> 00:26:59,679
hold versions finally who

703
00:26:59,679 --> 00:27:02,080
deploy versions still daddy of dogs or

704
00:27:02,080 --> 00:27:04,780
well by technical constraint so

705
00:27:04,780 --> 00:27:06,880
they are not able to

706
00:27:06,880 --> 00:27:09,309
immediately upgrade the libraries so

707
00:27:09,309 --> 00:27:11,140
this one will completely correct and

708
00:27:11,140 --> 00:27:13,090
clean up your code in search of

709
00:27:13,090 --> 00:27:14,800
precisely this type of

710
00:27:14,800 --> 00:27:17,580
prototype bug  es au look

711
00:27:18,110 --> 00:27:20,860
thank you for your attention

712
00:27:20,860 --> 00:27:29,220
[Applause]

713
00:27:29,220 --> 00:27:32,130
benq madjak to nothing thank you very much for the

714
00:27:32,130 --> 00:27:33,590
deviations

715
00:27:33,590 --> 00:27:35,970
ya do you have any questions on

716
00:27:35,970 --> 00:27:38,140
the toc

717
00:27:38,140 --> 00:27:41,550
of the reflections an intervention

718
00:27:43,510 --> 00:27:46,260
person

719
00:27:46,380 --> 00:27:48,580
ok very well in this case we will

720
00:27:48,580 --> 00:27:50,860
thank zakaria brahimi I will tell you

721
00:27:50,860 --> 00:27:51,450
pray

722
00:27:51,450 --> 00:27:57,499
[Applause]

