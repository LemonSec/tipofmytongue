1
00:00:00,000 --> 00:00:02,480
hello to all

2
00:00:03,780 --> 00:00:05,390
ok

3
00:00:05,390 --> 00:00:08,849
so its tocs the goal of stoke and to present to you

4
00:00:08,849 --> 00:00:11,780
their various of

5
00:00:11,780 --> 00:00:14,099
two security mechanisms

6
00:00:14,099 --> 00:00:16,020
implemented by hackers and tools

7
00:00:16,020 --> 00:00:18,110
certified

8
00:00:18,110 --> 00:00:20,610
protection code protection and android applications

9
00:00:20,610 --> 00:00:22,220


10
00:00:22,220 --> 00:00:26,570
and their winter with frida

11
00:00:30,870 --> 00:00:32,549
they told me  can introduce my name is

12
00:00:32,549 --> 00:00:34,800
georges bastien michel aka french and there

13
00:00:34,800 --> 00:00:36,330
is surely a lot of content on github

14
00:00:36,330 --> 00:00:38,100
so I invite you to go see if this

15
00:00:38,100 --> 00:00:40,320
is your domain the auriverde damien

16
00:00:40,320 --> 00:00:41,900
droid

17
00:00:41,900 --> 00:00:44,750
I have created some tools for

18
00:00:44,750 --> 00:00:48,450
tracking your automation frida and

19
00:00:48,450 --> 00:00:49,820
frieder exciting

20
00:00:49,820 --> 00:00:53,150
so the purpose of this talk it's going to be in

21
00:00:53,150 --> 00:00:55,500
fact cutting stocks has essentially

22
00:00:55,500 --> 00:00:57,150
two parts the first is the

23
00:00:57,150 --> 00:00:59,210
presentation of protection mechanisms

24
00:00:59,210 --> 00:01:02,460
implemented by hour packs where its

25
00:01:02,460 --> 00:01:04,920
call raspes so tools that

26
00:01:04,920 --> 00:01:07,050
will bring Czechs

27
00:01:07,050 --> 00:01:09,530
emulator detection route

28
00:01:09,530 --> 00:01:11,960
detection hook detection

29
00:01:11,960 --> 00:01:15,780
and it's inside the application we

30
00:01:15,780 --> 00:01:17,550
'll see how it works how

31
00:01:17,550 --> 00:01:19,170
to bypass them and individually and

32
00:01:19,170 --> 00:01:21,540
then  e comment design is a tool that

33
00:01:21,540 --> 00:01:23,640
will circumvent them in a universal way

34
00:01:23,640 --> 00:01:25,700
because our goal is really to

35
00:01:25,700 --> 00:01:27,720
describe a tool that will work to

36
00:01:27,720 --> 00:01:29,340
do it tells us baye not what will

37
00:01:29,340 --> 00:01:31,140
work for all protection tools

38
00:01:31,140 --> 00:01:33,180
and not only for the one

39
00:01:33,180 --> 00:01:35,990
that  you are saying exercised

40
00:01:38,370 --> 00:01:40,430
so a little reminder of the acronyms

41
00:01:40,430 --> 00:01:42,930
some speak some industrialists

42
00:01:42,930 --> 00:01:45,560
speak of spt software protection tools

43
00:01:45,560 --> 00:01:47,330
especially in the banking sector, in

44
00:01:47,330 --> 00:01:50,190
particular marketing it is rather in

45
00:01:50,190 --> 00:01:52,520
terms of applications this protection

46
00:01:52,520 --> 00:01:55,340
security protection

47
00:01:55,340 --> 00:01:58,730
it really symbolizes a tool which

48
00:01:58,730 --> 00:02:01,200
at the  minimum will do some packing but

49
00:02:01,200 --> 00:02:02,850
above all will add environmental Czechs

50
00:02:02,850 --> 00:02:04,440
in order to

51
00:02:04,440 --> 00:02:07,500
detect emulators one of the bloggers etc and

52
00:02:07,500 --> 00:02:09,930
also we will talk about sb here so

53
00:02:09,930 --> 00:02:11,790
let's stop it is the instruction which allows

54
00:02:11,790 --> 00:02:14,070
to make six passes in 1064 since

55
00:02:14,070 --> 00:02:16,010
these  architectures

56
00:02:16,010 --> 00:02:18,300
which we will essentially talk about during

57
00:02:18,300 --> 00:02:20,280
his tocs

58
00:02:20,280 --> 00:02:22,740
so I present to you and join modo

59
00:02:22,740 --> 00:02:24,450
what you can find in this gen

60
00:02:24,450 --> 00:02:27,330
re tool so when I said that we

61
00:02:27,330 --> 00:02:28,740
tease protection of android applications

62
00:02:28,740 --> 00:02:30,360
that is to say that the application is

63
00:02:30,360 --> 00:02:31,910
packaged

64
00:02:31,910 --> 00:02:35,400
in a format called an

65
00:02:35,400 --> 00:02:37,410
apk file which is in fact in zip which contains

66
00:02:37,410 --> 00:02:39,690
both the bytecode

67
00:02:39,690 --> 00:02:41,280
android application libraries for the

68
00:02:41,280 --> 00:02:43,440
different abbeys and

69
00:02:43,440 --> 00:02:45,170
resources resources can

70
00:02:45,170 --> 00:02:47,459
basically be data that is

71
00:02:47,459 --> 00:02:48,920
serialized

72
00:02:48,920 --> 00:02:51,239
to initialize the application it can

73
00:02:51,239 --> 00:02:53,790
be pen resources png files

74
00:02:53,790 --> 00:02:56,459
but it can also be code like

75
00:02:56,459 --> 00:02:58,410
javascript if l  The application

76
00:02:58,410 --> 00:03:00,360
implements multi-platform frameworks

77
00:03:00,360 --> 00:03:02,840
such as Gap or Cordova,

78
00:03:02,840 --> 00:03:06,810
so the protection tools will

79
00:03:06,810 --> 00:03:10,100
add

80
00:03:10,100 --> 00:03:12,120
different layers of protection to

81
00:03:12,120 --> 00:03:14,130
each type of resource and file

82
00:03:14,130 --> 00:03:15,060
that you can find inside

83
00:03:15,060 --> 00:03:16,040
these applications,

84
00:03:16,040 --> 00:03:18,330
for example at  minimum on

85
00:03:18,330 --> 00:03:19,470
resources you will have

86
00:03:19,470 --> 00:03:21,300
integrity czechs so here we are not talking about the

87
00:03:21,300 --> 00:03:23,910
czechs provided by android at

88
00:03:23,910 --> 00:03:25,560
the beckham level is really d  e cech which

89
00:03:25,560 --> 00:03:27,060
will be added by the

90
00:03:27,060 --> 00:03:29,190
protection tool in order to verify that

91
00:03:29,190 --> 00:03:31,980
the data has not been modified

92
00:03:31,980 --> 00:03:34,200
in peace only at a site in the event that

93
00:03:34,200 --> 00:03:35,310
peace cases have been redistributed kadji meals

94
00:03:35,310 --> 00:03:36,900


95
00:03:36,900 --> 00:03:40,379
we will also l  'inciting little ring if it will

96
00:03:40,379 --> 00:03:41,930
rather be safe

97
00:03:41,930 --> 00:03:43,920
often in a mixture of a title a little ric

98
00:03:43,920 --> 00:03:45,720
and the integrity czech titanium the

99
00:03:45,720 --> 00:03:47,629
ring and perhaps earlier on

100
00:03:47,629 --> 00:03:50,870
the runtime blur typically

101
00:03:50,870 --> 00:03:53,280
if you have js files  which are

102
00:03:53,280 --> 00:03:55,530
used with cordova the purpose is going to be

103
00:03:55,530 --> 00:03:57,810
to verify the integrity of the

104
00:03:57,810 --> 00:04:00,060
execution blur of a single i have this

105
00:04:00,060 --> 00:04:02,780
while its files through 60 resources

106
00:04:02,780 --> 00:04:04,709
another layer of protection it

107
00:04:04,709 --> 00:04:05,670
could be two digits and the

108
00:04:05,670 --> 00:04:08,310
resources and we  not going to dwell on

109
00:04:08,310 --> 00:04:08,959
it

110
00:04:08,959 --> 00:04:11,909
at the level of the code we will therefore find

111
00:04:11,909 --> 00:04:13,950
very classically lenses or king and

112
00:04:13,950 --> 00:04:15,599
the offer until sion of code is often

113
00:04:15,599 --> 00:04:18,870
the bytecode which continues from one of the

114
00:04:18,870 --> 00:04:21,959
aix files and encrypt and decrypt

115
00:04:21,959 --> 00:04:23,789
at the  execution either for a native freeware

116
00:04:23,789 --> 00:04:25,770
or by the application  itself is

117
00:04:25,770 --> 00:04:27,570
loaded dynamically this is what we

118
00:04:27,570 --> 00:04:28,770
call the classics in the event

119
00:04:28,770 --> 00:04:30,470
of

120
00:04:30,470 --> 00:04:33,000
registration there finally we can consider that there is a

121
00:04:33,000 --> 00:04:34,620
last layer of application last

122
00:04:34,620 --> 00:04:37,259
layer of protection which will cover

123
00:04:37,259 --> 00:04:39,479
the entire application  are huge

124
00:04:39,479 --> 00:04:40,380
at so called and environmental czechs

125
00:04:40,380 --> 00:04:42,930
for example

126
00:04:42,930 --> 00:04:45,210
emulator detection so very

127
00:04:45,210 --> 00:04:47,880
basically android emulator but

128
00:04:47,880 --> 00:04:51,030
more generally unicorn where you are better off

129
00:04:51,030 --> 00:04:53,090
or

130
00:04:55,550 --> 00:04:58,320
even code peace emulation where there is

131
00:04:58,320 --> 00:05:01,820
going to be full  of types of cech said

132
00:05:01,820 --> 00:05:04,320
roadmap it's his accepting clinic

133
00:05:04,320 --> 00:05:05,760


134
00:05:05,760 --> 00:05:07,500
but we roughly speaking what will

135
00:05:07,500 --> 00:05:10,920
interest us is what will protect these

136
00:05:10,920 --> 00:05:13,260
protection mechanisms added

137
00:05:13,260 --> 00:05:16,520
over the android applications

138
00:05:16,520 --> 00:05:19,020
is generally suddenly the packers have

139
00:05:19,020 --> 00:05:20,690
protected the packs  hours and the

140
00:05:20,690 --> 00:05:22,890
security functions that we have seen

141
00:05:22,890 --> 00:05:25,800
previously are protected in turn

142
00:05:25,800 --> 00:05:28,440
by dawn until Zion to slow down the

143
00:05:28,440 --> 00:05:29,760
design and circumvention

144
00:05:29,760 --> 00:05:31,650
of these measures we are related to

145
00:05:31,650 --> 00:05:34,170
slow  illes or because generally it

146
00:05:34,170 --> 00:05:36,090
will be bypassed

147
00:05:36,090 --> 00:05:38,430
the understanding will be acquired by the

148
00:05:38,430 --> 00:05:39,660
d office only in sion but the bypass

149
00:05:39,660 --> 00:05:42,550
will be done for the instrumentation

150
00:05:42,550 --> 00:05:44,410
so we know what we are

151
00:05:44,410 --> 00:05:47,680
going to talk about is  the rice to that

152
00:05:47,680 --> 00:05:49,720
of antirust bypass since

153
00:05:49,720 --> 00:05:51,370
roughly speaking once you pass there did

154
00:05:51,370 --> 00:05:53,740
you have a tube you can all

155
00:05:53,740 --> 00:05:56,370
overwhelmed

156
00:05:57,120 --> 00:05:58,380
so the first question you can

157
00:05:58,380 --> 00:05:59,490
ask yourself is how am I going to

158
00:05:59,490 --> 00:06:03,000
recover apks that are protected by

159
00:06:03,000 --> 00:06:06,020
the hours pack that interests us is

160
00:06:06,020 --> 00:06:08,040
me so what I did is I

161
00:06:08,040 --> 00:06:10,139
wrote diarra rules and I used

162
00:06:10,139 --> 00:06:13,199
a platform of a reminder plus which is

163
00:06:13,199 --> 00:06:17,289
developed by a Frenchwoman

164
00:06:17,289 --> 00:06:19,300
it works  a bit like khoudoss but

165
00:06:19,300 --> 00:06:20,649
it's an open source project so I

166
00:06:20,649 --> 00:06:23,229
invite you to use it and push

167
00:06:23,229 --> 00:06:26,169
your malicious apk on it to grow

168
00:06:26,169 --> 00:06:28,749
this platform which is free is

169
00:06:28,749 --> 00:06:31,710
maintained on a voluntary basis

170
00:06:31,710 --> 00:06:33,410
so

171
00:06:33,410 --> 00:06:35,340
used if a certain number of

172
00:06:35,340 --> 00:06:37,650
symbols so you  can in app  as

173
00:06:37,650 --> 00:06:38,940
for the rules there will be which will

174
00:06:38,940 --> 00:06:41,820
specifically target your catr chip like

175
00:06:41,820 --> 00:06:43,640
this one

176
00:06:43,640 --> 00:06:46,080
you will be able to recover symbols which

177
00:06:46,080 --> 00:06:47,570
implement

178
00:06:47,570 --> 00:06:50,060
the hour pack that you will have paid them

179
00:06:50,060 --> 00:06:52,280
so there for example

180
00:06:52,280 --> 00:06:55,260
this diarra rule is very specific to

181
00:06:55,260 --> 00:06:57,350
our creators of the market

182
00:06:57,350 --> 00:07:01,070
roughly speaking  the first paternot is

183
00:07:01,070 --> 00:07:03,750
this piece of code which comes from the course

184
00:07:03,750 --> 00:07:05,670
of proxy maps in order to detect

185
00:07:05,670 --> 00:07:09,290
nuke then there are two pieces of code

186
00:07:09,290 --> 00:07:12,000
which also come from the native power supply and

187
00:07:12,000 --> 00:07:13,350
which are used for the decryption

188
00:07:13,350 --> 00:07:16,040
of the strings and finally

189
00:07:16,040 --> 00:07:18,240
like many applications finally like

190
00:07:18,240 --> 00:07:20,790
many libraries of this type

191
00:07:20,790 --> 00:07:22,260
do not use league c but

192
00:07:22,260 --> 00:07:24,230
implement their own six

193
00:07:24,230 --> 00:07:27,289
passes using the nbc instruction

194
00:07:27,289 --> 00:07:28,909
sometimes what they do what is

195
00:07:28,909 --> 00:07:30,559
good it  is that he has passed six passes in

196
00:07:30,559 --> 00:07:33,340
the series

197
00:07:33,340 --> 00:07:34,449
but suddenly it gives us a great

198
00:07:34,449 --> 00:07:35,710
signature so the big one we also see at

199
00:07:35,710 --> 00:07:37,570
more than 6 sv is that they are hit

200
00:07:37,570 --> 00:07:41,370
and that the other baptisms mark

201
00:07:41,639 --> 00:07:43,690
we should find  symbols that

202
00:07:43,690 --> 00:07:45,880
use our version of our

203
00:07:45,880 --> 00:07:48,220
target chrono hour pack is there for

204
00:07:48,220 --> 00:07:49,300
example on hard blow what is

205
00:07:49,300 --> 00:07:51,400
now pays a paid platform at

206
00:07:51,400 --> 00:07:54,000
the time I found 350 in beijing

207
00:07:54,000 --> 00:07:58,020
with this version there of the pack

208
00:07:58,110 --> 00:08:00,490
I encourage you all even to  support

209
00:08:00,490 --> 00:08:03,120
the pictus project

210
00:08:03,120 --> 00:08:07,560
and finally to finish it's a hole

211
00:08:07,710 --> 00:08:09,870
we're going to enter them into the subject I'm going

212
00:08:09,870 --> 00:08:11,070
to present to you a little bit how

213
00:08:11,070 --> 00:08:13,430


214
00:08:15,010 --> 00:08:18,350
the combination of the tools of these

215
00:08:18,350 --> 00:08:19,870
different layers of protection works

216
00:08:19,870 --> 00:08:23,630
so generally the hall tied any

217
00:08:23,630 --> 00:08:25,150
start of the  application

218
00:08:25,150 --> 00:08:27,710
when the execution wants to enter the

219
00:08:27,710 --> 00:08:29,889
bookstore which implements the

220
00:08:29,889 --> 00:08:33,080
security Czechs in the warehouse of

221
00:08:33,080 --> 00:08:34,549
the bookstore whether it is the inite

222
00:08:34,549 --> 00:08:37,250
ears or genius in the aude it will

223
00:08:37,250 --> 00:08:39,349
start to decipher strings and

224
00:08:39,349 --> 00:08:41,450
carried out normally on Monday suffers we

225
00:08:41,450 --> 00:08:42,830
know  not always the case so if it's

226
00:08:42,830 --> 00:08:44,179
not the case good for you it

227
00:08:44,179 --> 00:08:45,620
would be much easier to swallow

228
00:08:45,620 --> 00:08:47,260
move on

229
00:08:47,260 --> 00:08:49,280
so generally we start with a

230
00:08:49,280 --> 00:08:51,160
tube because  that detection dooks and

231
00:08:51,160 --> 00:08:52,300
[Music]

232
00:08:52,300 --> 00:08:54,980
it's essential if you can everything

233
00:08:54,980 --> 00:08:57,290
will pass if you can instrument you

234
00:08:57,290 --> 00:08:58,550
can pass the rest so you have to

235
00:08:58,550 --> 00:09:00,620
start with that so generally

236
00:09:00,620 --> 00:09:02,750
simple as the application starts with

237
00:09:02,750 --> 00:09:06,760
check and this in its own memory

238
00:09:06,760 --> 00:09:09,080
this  memory match looking for

239
00:09:09,080 --> 00:09:11,060
libraries that wouldn't be peace we

240
00:09:11,060 --> 00:09:13,110
'll come back to that wouldn't

241
00:09:13,110 --> 00:09:16,140
legitimately call me like it

242
00:09:16,140 --> 00:09:18,800
would with frida

243
00:09:20,540 --> 00:09:23,030
it'll create a thread and the thread will

244
00:09:23,030 --> 00:09:26,240
also do this kind of cech on on the

245
00:09:26,240 --> 00:09:27,640
Parent

246
00:09:27,640 --> 00:09:29,540
all of this is because it's more

247
00:09:29,540 --> 00:09:31,580
difficult to instrument at the level of

248
00:09:31,580 --> 00:09:34,550
instruction from a thread than in the

249
00:09:34,550 --> 00:09:36,410
endless trial that in this raid per year

250
00:09:36,410 --> 00:09:39,059
nahl would be two main

251
00:09:39,059 --> 00:09:40,919
ones the goal there it's really going to be to

252
00:09:40,919 --> 00:09:42,959
make

253
00:09:42,959 --> 00:09:45,389
complicated river instrumentation tasks for the analyst so you

254
00:09:45,389 --> 00:09:47,129
have to multiply the processes and

255
00:09:47,129 --> 00:09:47,989
deal with

256
00:09:47,989 --> 00:09:51,179
them once the detection of look and not

257
00:09:51,179 --> 00:09:53,339
is that it's good 6 if you are

258
00:09:53,339 --> 00:09:54,989
detected the application it may spit

259
00:09:54,989 --> 00:09:57,209
s not during the detection of the hit we

260
00:09:57,209 --> 00:09:58,529
apply the execution will continue and

261
00:09:58,529 --> 00:10:00,419
later it will cut in order

262
00:10:00,419 --> 00:10:01,889
to prevent you from going back

263
00:10:01,889 --> 00:10:04,219
from errors

264
00:10:04,810 --> 00:10:06,220
so then it continues there will

265
00:10:06,220 --> 00:10:08,830
generally be a fork and lens

266
00:10:08,830 --> 00:10:10,480
bugs will be  run as well from

267
00:10:10,480 --> 00:10:13,300
the fork since the main trial tool

268
00:10:13,300 --> 00:10:14,590
d box a can be is

269
00:10:14,590 --> 00:10:15,750
a people trial

270
00:10:15,750 --> 00:10:17,980
it will do between petra it will

271
00:10:17,980 --> 00:10:20,590
p trace since the trial crack by

272
00:10:20,590 --> 00:10:22,480
an excellent

273
00:10:22,480 --> 00:10:24,649
because i summarized  there

274
00:10:24,649 --> 00:10:26,930
of course each time the mechanisms

275
00:10:26,930 --> 00:10:30,170
also make new this raid so the

276
00:10:30,170 --> 00:10:31,610
goal is to arrive in a state where

277
00:10:31,610 --> 00:10:33,019
each time there is a new layer

278
00:10:33,019 --> 00:10:35,029
which is deployed all the Czechs

279
00:10:35,029 --> 00:10:37,009
lent a spell and executed  since all

280
00:10:37,009 --> 00:10:38,959
this raid where all all the child processes

281
00:10:38,959 --> 00:10:40,550


282
00:10:40,550 --> 00:10:43,620
generally if we had a good time on Monday or

283
00:10:43,620 --> 00:10:45,930
which is all of the bugs we arrive in

284
00:10:45,930 --> 00:10:47,730
the Czech environment detection

285
00:10:47,730 --> 00:10:50,089
of routes etc

286
00:10:50,570 --> 00:10:52,040
and finally the launch of the application

287
00:10:52,040 --> 00:10:54,800
so everything  it went well  and

288
00:10:54,800 --> 00:10:55,730
generally what happens is that

289
00:10:55,730 --> 00:10:57,790
the application when it is going to do

290
00:10:57,790 --> 00:10:59,630
critical processing it is a

291
00:10:59,630 --> 00:11:01,210
winning application it could be

292
00:11:01,210 --> 00:11:03,650
before payment or when you enter

293
00:11:03,650 --> 00:11:06,230
your pin code savard run all

294
00:11:06,230 --> 00:11:08,800
this list

295
00:11:08,800 --> 00:11:10,959
generally also the trials it  there are

296
00:11:10,959 --> 00:11:12,250
processes that run in the background that

297
00:11:12,250 --> 00:11:15,930
will run periodically it's jack

298
00:11:16,940 --> 00:11:18,590
so now I present to you a little

299
00:11:18,590 --> 00:11:20,690
more in detail when I pay some

300
00:11:20,690 --> 00:11:22,880
of its mechanisms before going

301
00:11:22,880 --> 00:11:25,990
further I have developed a tool

302
00:11:25,990 --> 00:11:28,520
which I think  is very useful also you

303
00:11:28,520 --> 00:11:33,140
want to traffic 2 6 passes and the

304
00:11:33,140 --> 00:11:35,810
or king without looking for the number of the six

305
00:11:35,810 --> 00:11:37,180
passes or

306
00:11:37,180 --> 00:11:39,530
the good value of the good constant

307
00:11:39,530 --> 00:11:40,880
that lets you eat in the book

308
00:11:40,880 --> 00:11:42,470
the former star

309
00:11:42,470 --> 00:11:43,910
so I invite you to go see  it's

310
00:11:43,910 --> 00:11:46,340
called switch it's available

311
00:11:46,340 --> 00:11:48,500
on github surely github where you

312
00:11:48,500 --> 00:11:50,450
can use it from the

313
00:11:50,450 --> 00:11:53,260
frida coacher directly

314
00:11:53,260 --> 00:11:56,360
we will use this tool there in my

315
00:11:56,360 --> 00:11:57,670
presentation

316
00:11:57,670 --> 00:12:00,560


317
00:12:00,560 --> 00:12:02,570
to modify the parameters  very of a line

318
00:12:02,570 --> 00:12:05,080
where the values of the returns of the six sticks so a 

319
00:12:05,080 --> 00:12:08,080
ir

320
00:12:08,550 --> 00:12:10,550
t evolution that 

321
00:12:10,550 --> 00:12:14,750
e saw in the recent opus 14 is th

322
00:12:14,750 --> 00:12:17,130
idea of replacing the comparisons

323
00:12:17,130 --> 00:12:18,330
which are based on character s

324
00:12:18,330 --> 00:12:19,350
rings by comparisons

325
00:12:19,350 --> 00:12:20,580
are  based on 10 a.m.

326
00:12:20,580 --> 00:12:22,260
just because if you can't

327
00:12:22,260 --> 00:12:24,240
find the strings you

328
00:12:24,240 --> 00:12:25,459
can't

329
00:12:25,459 --> 00:12:28,110
set up debates there and

330
00:12:28,110 --> 00:12:30,860
share them with your friends

331
00:12:30,899 --> 00:12:32,999
so traditionally we had this

332
00:12:32,999 --> 00:12:34,040
kind

333
00:12:34,040 --> 00:12:36,569
of apps had lists of

334
00:12:36,569 --> 00:12:38,730
strings and it was

335
00:12:38,730 --> 00:12:39,869
fetching  in the

336
00:12:39,869 --> 00:12:41,040
android package manager also to such or such

337
00:12:41,040 --> 00:12:43,040
application been installed or

338
00:12:43,040 --> 00:12:45,600
if it had such permission also such this

339
00:12:45,600 --> 00:12:47,420
raid had so much etc

340
00:12:47,420 --> 00:12:51,069
that in fact it has been replaced by

341
00:12:51,190 --> 00:12:53,110
if the strings are still necessary

342
00:12:53,110 --> 00:12:56,080
they will be in line and at  valves of

343
00:12:56,080 --> 00:12:58,630
figures and not by a function

344
00:12:58,630 --> 00:13:00,010
but in fact the decryption will be in

345
00:13:00,010 --> 00:13:02,200
line and in the library and that you

346
00:13:02,200 --> 00:13:04,030
will be able to mess up the taxman and by using

347
00:13:04,030 --> 00:13:05,260
elimination of peace code  de tinguely

348
00:13:05,260 --> 00:13:08,040
right I provide and

349
00:13:08,040 --> 00:13:11,440
days of the scripts or near on the

350
00:13:11,440 --> 00:13:14,890
github of this talk a third motorcycle it

351
00:13:14,890 --> 00:13:17,670
gives you the right result

352
00:13:17,670 --> 00:13:19,840
know how to analyze all binary and it will take

353
00:13:19,840 --> 00:13:21,790
you out the strings decipher their

354
00:13:21,790 --> 00:13:23,700
location

355
00:13:23,700 --> 00:13:28,750
but if really respect can

356
00:13:28,750 --> 00:13:30,640
do without  two character strings which

357
00:13:30,640 --> 00:13:31,840
would be horde coded or which would be

358
00:13:31,840 --> 00:13:34,210
dominant it will try to replace these

359
00:13:34,210 --> 00:13:38,050
comparisons by listing h and all

360
00:13:38,050 --> 00:13:39,550
the values and comparing them with the ages 

361
00:13:39,550 --> 00:13:42,510
hich are our side that 

362
00:13:45,490 --> 00:13:48,279
ummarizes a little bit I tol

363
00:13:48,279 --> 00:13:50,370
you neces

364
00:13:50,370 --> 00:13:53,699
arily it is less  easy to find

365
00:13:53,699 --> 00:13:57,389
so there you have a small example this

366
00:13:57,389 --> 00:13:59,529
is an example that is

367
00:13:59,529 --> 00:14:01,990
generally used in the souk in curry lentils

368
00:14:01,990 --> 00:14:02,670


369
00:14:02,670 --> 00:14:05,230
the tools will fetch libraries

370
00:14:05,230 --> 00:14:07,629
which are the list of libraries that

371
00:14:07,629 --> 00:14:10,420
are normally included in the android

372
00:14:10,420 --> 00:14:12,689
written from android  or included in

373
00:14:12,689 --> 00:14:16,149
the layer added by the vendor or the

374
00:14:16,149 --> 00:14:17,949
libraries added by

375
00:14:17,949 --> 00:14:20,680
the tea builder them and therefore to identify these

376
00:14:20,680 --> 00:14:22,509
files there which are so  it in a

377
00:14:22,509 --> 00:14:24,240
book system either in 22 hrs free

378
00:14:24,240 --> 00:14:27,430
rather than going to look rather

379
00:14:27,430 --> 00:14:29,620
than going to do an open on the path of

380
00:14:29,620 --> 00:14:32,040
this file there in fact they will

381
00:14:32,040 --> 00:14:35,139
browse all system content for

382
00:14:35,139 --> 00:14:37,449
example is hashed all the paths

383
00:14:37,449 --> 00:14:39,610
and compare them  with values so it's much 

384
00:14:39,610 --> 00:14:43,019
ore difficult to read it's I thi

385
00:14:43,550 --> 00:14:46,640
k that sizes work so th

386
00:14:46,640 --> 00:14:50,130
hyenas at the beginning of the piece of code we se

387
00:14:50,130 --> 00:14:53,880
that he knows if he is in the right in th

388
00:14:53,880 --> 00:14:57,300
right way just because hatch

389
00:14:57,300 --> 00:15:00,860
t equals  at the right value

390
00:15:00,860 --> 00:15:02,880
so that's much more difficult to

391
00:15:02,880 --> 00:15:05,660
understand what the algorithm is doing

392
00:15:05,660 --> 00:15:07,880
often a bit if they use

393
00:15:07,880 --> 00:15:10,050
ax functions that aren't

394
00:15:10,050 --> 00:15:11,130
functions of the bone outside it can

395
00:15:11,130 --> 00:15:13,579
be things that look like  to circes and

396
00:15:13,579 --> 00:15:15,839
but expects little modification so roughly

397
00:15:15,839 --> 00:15:18,180
speaking the paterno that you have on the left

398
00:15:18,180 --> 00:15:20,540
the f open is replaced by

399
00:15:20,540 --> 00:15:23,500
the code that you have on the right

400
00:15:23,500 --> 00:15:25,630
which will therefore remind the sex dsv

401
00:15:25,630 --> 00:15:26,850
and

402
00:15:26,850 --> 00:15:30,780
of a code it may look like

403
00:15:31,020 --> 00:15:33,340
so that when I provide you with 6 of the code

404
00:15:33,340 --> 00:15:34,960
you can copy paste if you have

405
00:15:34,960 --> 00:15:38,100
if you are

406
00:15:40,209 --> 00:15:41,980
interested do you have this is the function

407
00:15:41,980 --> 00:15:44,019
that I used to reconstruct the

408
00:15:44,019 --> 00:15:44,920
character strings

409
00:15:44,920 --> 00:15:48,639
as it is h&e print them and and above

410
00:15:48,639 --> 00:15:50,379
all warn you when it  will continue its

411
00:15:50,379 --> 00:15:53,639
execution in the right path

412
00:15:53,889 --> 00:15:55,749
so I have normal the result of this

413
00:15:55,749 --> 00:15:57,220
execution it's good we see that it will

414
00:15:57,220 --> 00:15:58,290
tear

415
00:15:58,290 --> 00:16:01,290
it

416
00:16:03,059 --> 00:16:05,250
we see that it goes to a whole bunch of

417
00:16:05,250 --> 00:16:07,470
bookstores but that the result of this h

418
00:16:07,470 --> 00:16:09,890
the  never never

419
00:16:09,890 --> 00:16:12,170


420
00:16:12,170 --> 00:16:13,880
never works the rest however we

421
00:16:13,880 --> 00:16:16,160
see that as soon as it goes to public

422
00:16:16,160 --> 00:16:17,870
libraries then it's not the name of

423
00:16:17,870 --> 00:16:20,420
the playboy file it's just the first

424
00:16:20,420 --> 00:16:22,880
byte of the file which has been hashed and

425
00:16:22,880 --> 00:16:25,519
slightly this number  of bytes changes and

426
00:16:25,519 --> 00:16:27,470
hiroko swaps depending

427
00:16:27,470 --> 00:16:30,170
on where effect the h of the library

428
00:16:30,170 --> 00:16:31,490
by the way you may have

429
00:16:31,490 --> 00:16:34,080
the impression that it is a function but

430
00:16:34,080 --> 00:16:35,820
in fact the function is called on

431
00:16:35,820 --> 00:16:37,620
each byte and du  suddenly you have to

432
00:16:37,620 --> 00:16:38,790
implement a state machine for

433
00:16:38,790 --> 00:16:40,650
that it's i  interesting mention if you

434
00:16:40,650 --> 00:16:43,730
have this case to reuse look

435
00:16:44,370 --> 00:16:47,270
but roughly speaking this

436
00:16:48,480 --> 00:16:50,850
is how it will detect that

437
00:16:50,850 --> 00:16:53,940
the file to read its systems that the

438
00:16:53,940 --> 00:16:55,110
file it is enumerating

439
00:16:55,110 --> 00:16:58,170
is public atc system the  break too much

440
00:16:58,170 --> 00:17:00,620
this tonic of other texts

441
00:17:00,620 --> 00:17:03,649
so already for

442
00:17:03,649 --> 00:17:05,809
to pour that that you are

443
00:17:05,809 --> 00:17:07,549
you need to be able or qe the six

444
00:17:07,549 --> 00:17:08,409
passes

445
00:17:08,409 --> 00:17:10,819
to have implemented multithreading in

446
00:17:10,819 --> 00:17:14,029
the stalker frida and to add to

447
00:17:14,029 --> 00:17:16,429
follow the clones so that requires

448
00:17:16,429 --> 00:17:18,230
quite a huge job to just

449
00:17:18,230 --> 00:17:22,179
understand which Czech stolen files

450
00:17:23,089 --> 00:17:24,829
I'm not going to dwell on it but there

451
00:17:24,829 --> 00:17:27,289
are other mechanisms to make

452
00:17:27,289 --> 00:17:28,820
their winters are complicated for

453
00:17:28,820 --> 00:17:31,520
example we can insert code from one

454
00:17:31,520 --> 00:17:33,440
of the blocks of data from  one of the blocks

455
00:17:33,440 --> 00:17:36,020
of code it no longer uses the stac in

456
00:17:36,020 --> 00:17:38,059
fact it will do a job in a

457
00:17:38,059 --> 00:17:40,960
belt instruction so when

458
00:17:40,960 --> 00:17:43,500
not

459
00:17:43,500 --> 00:17:45,220
when we go

460
00:17:45,220 --> 00:17:46,600
when we arrive just above

461
00:17:46,600 --> 00:17:48,039
this savate section I don't like an

462
00:17:48,039 --> 00:17:50,320
address and it will put  update the

463
00:17:50,320 --> 00:17:51,610
register and  the air and the register looks like it

464
00:17:51,610 --> 00:17:54,120
will point to this list of

465
00:17:54,120 --> 00:17:56,590
payouts unfortunately gives these data there are

466
00:17:56,590 --> 00:17:59,110
generally used by the tube in

467
00:17:59,110 --> 00:18:00,730
which we finally arrived in the

468
00:18:00,730 --> 00:18:02,650
basic gives with honors and that

469
00:18:02,650 --> 00:18:05,020
's normal it's  very misunderstood

470
00:18:05,020 --> 00:18:07,360
by both pilot camps

471
00:18:07,360 --> 00:18:09,160
and it's really done on purpose

472
00:18:09,160 --> 00:18:12,900
for you to slow you down in your analysis

473
00:18:13,210 --> 00:18:14,770
I'm going to pass quickly but you're

474
00:18:14,770 --> 00:18:17,260
interested I invite you to read the

475
00:18:17,260 --> 00:18:19,539
slides to really understand what

476
00:18:19,539 --> 00:18:20,309
is happening to

477
00:18:20,309 --> 00:18:23,919
another  common example more than in

478
00:18:23,919 --> 00:18:26,200
sion this time at the bytecode level it's

479
00:18:26,200 --> 00:18:29,730
going to be the decryption

480
00:18:29,730 --> 00:18:32,399
decryption of dalvik bytecode

481
00:18:32,399 --> 00:18:35,529
around the margins of the application so

482
00:18:35,529 --> 00:18:37,179
generally present for

483
00:18:37,179 --> 00:18:39,610
application developers

484
00:18:39,610 --> 00:18:41,620
most people the starting point the

485
00:18:41,620 --> 00:18:43,600
point  entry of an android application

486
00:18:43,600 --> 00:18:48,029
these applications attaches to this context

487
00:18:49,870 --> 00:18:52,240
except that in reality it is not the case

488
00:18:52,240 --> 00:18:55,690
the truth if you can define a

489
00:18:55,690 --> 00:18:59,110
class which will override component

490
00:18:59,110 --> 00:19:00,760
factory it is  say an android class

491
00:19:00,760 --> 00:19:01,620
that

492
00:19:01,620 --> 00:19:04,570
challenges that implements methods that

493
00:19:04,570 --> 00:19:06,070
are used for instantial and

494
00:19:06,070 --> 00:19:07,620
components of your manifest

495
00:19:07,620 --> 00:19:10,059
in which you can set new

496
00:19:10,059 --> 00:19:11,620
class the default smell for your

497
00:19:11,620 --> 00:19:14,100
involvement and generally it's in

498
00:19:14,100 --> 00:19:18,360
that's at that level there the  clac that

499
00:19:18,360 --> 00:19:20,920
the aix files of your in beijing will

500
00:19:20,920 --> 00:19:22,390
be replaced by text files

501
00:19:22,390 --> 00:19:23,650
which have been numbers on the fly and

502
00:19:23,650 --> 00:19:26,460
change dynamically

503
00:19:28,260 --> 00:19:30,000
so there I put you another example

504
00:19:30,000 --> 00:19:32,880
of these examples from a real certified packer

505
00:19:32,880 --> 00:19:34,640


506
00:19:34,640 --> 00:19:38,510
roughly  modo he will he will replace the

507
00:19:38,510 --> 00:19:41,670
class the smell he will call in-memory

508
00:19:41,670 --> 00:19:44,480
class reader

509
00:19:44,480 --> 00:19:47,850
to roughly decipher an

510
00:19:47,850 --> 00:19:49,559
aix file transform it into a saver buffer

511
00:19:49,559 --> 00:19:53,039
by claude this buzz has passed

512
00:19:53,039 --> 00:19:54,929
and say that you have to use  that

513
00:19:54,929 --> 00:19:57,179
rather than the aix files continue

514
00:19:57,179 --> 00:19:59,570
in the wound case

515
00:19:59,610 --> 00:20:01,500
and basically what it does is

516
00:20:01,500 --> 00:20:04,590
it's going to take a what beyond that isn't

517
00:20:04,590 --> 00:20:06,630
in a file inside your

518
00:20:06,630 --> 00:20:08,520
app to fight side  of chi  ffrer

519
00:20:08,520 --> 00:20:10,440
but in fact it is a debate and

520
00:20:10,440 --> 00:20:12,440
ears of

521
00:20:12,440 --> 00:20:16,230
2000 entries to the heroes x 2000 entries

522
00:20:16,230 --> 00:20:18,540
which are dispatched the competition of

523
00:20:18,540 --> 00:20:20,480
950 class

524
00:20:20,480 --> 00:20:22,799
so analyze these classes the statics

525
00:20:22,799 --> 00:20:24,929
man will marry give you if you

526
00:20:24,929 --> 00:20:27,700
are not able to rebuild the

527
00:20:27,700 --> 00:20:30,399
beforehand the text that will

528
00:20:30,399 --> 00:20:34,100
actually be loaded so

529
00:20:34,100 --> 00:20:35,660
good there in this case you can

530
00:20:35,660 --> 00:20:37,070
do it quite easily a script ans

531
00:20:37,070 --> 00:20:39,710
with the osm in bed there also I provide

532
00:20:39,710 --> 00:20:42,410
on the repository a script that

533
00:20:42,410 --> 00:20:44,799
allows you to do

534
00:20:46,460 --> 00:20:49,940
then I present d  'others

535
00:20:49,940 --> 00:20:51,690
I don't think I will have time to cover

536
00:20:51,690 --> 00:20:53,580
everything but roughly speaking I

537
00:20:53,580 --> 00:20:54,440
present other

538
00:20:54,440 --> 00:20:56,490
mechanisms for example rather

539
00:20:56,490 --> 00:20:59,940
than using fopen to find out rather

540
00:20:59,940 --> 00:21:01,620
than doing a six-pass open to find out if

541
00:21:01,620 --> 00:21:02,970
a file exists or not in  function of

542
00:21:02,970 --> 00:21:04,070
its error code

543
00:21:04,070 --> 00:21:06,420
with the aim of always hiding what

544
00:21:06,420 --> 00:21:08,370
we are doing we can not call this

545
00:21:08,370 --> 00:21:11,660
kof and the

546
00:21:11,660 --> 00:21:13,890
ski will actually be executed by

547
00:21:13,890 --> 00:21:15,150
because we will depend on the second

548
00:21:15,150 --> 00:21:19,320
argument and the result will not  not to be

549
00:21:19,320 --> 00:21:21,120
a ball and chain typically the file will

550
00:21:21,120 --> 00:21:22,950
exist if the return value is

551
00:21:22,950 --> 00:21:25,200
oryx mines so you would have to

552
00:21:25,200 --> 00:21:28,230
pay done you have to spend a lot of

553
00:21:28,230 --> 00:21:29,910
time understanding what

554
00:21:29,910 --> 00:21:31,260
all the functions do little to understand

555
00:21:31,260 --> 00:21:33,890
that what the application does

556
00:21:35,820 --> 00:21:37,320
well I'm going  pass this otherwise I wo

557
00:21:37,320 --> 00:21:39,600
n't have time to talk to me if you're

558
00:21:39,600 --> 00:21:40,650
interested if we can talk about it after the

559
00:21:40,650 --> 00:21:42,890
conference

560
00:21:43,850 --> 00:21:47,980
it's another example of easter hours

561
00:21:47,980 --> 00:21:50,290
that will

562
00:21:50,290 --> 00:21:54,090
I modified some code dynamically

563
00:21:54,480 --> 00:21:56,509
m

564
00:21:56,509 --> 00:21:57,799
so now we want to render not

565
00:21:57,799 --> 00:21:58,850
returned to the really

566
00:21:58,850 --> 00:22:01,600
detection part look at the part that does not

567
00:22:01,600 --> 00:22:03,980
see it as the most interesting from the point of

568
00:22:03,980 --> 00:22:05,600
view of the hat if we consider that the

569
00:22:05,600 --> 00:22:07,159
tax and bypass and deactivate the

570
00:22:07,159 --> 00:22:08,379
contributions

571
00:22:08,379 --> 00:22:11,360
so generally lancial that will

572
00:22:11,360 --> 00:22:13,140
start

573
00:22:13,140 --> 00:22:15,500
by putting themselves in a

574
00:22:15,500 --> 00:22:19,670
good  context to prevent the

575
00:22:19,670 --> 00:22:22,530
hook attacker and our anti hero

576
00:22:22,530 --> 00:22:24,710
so generally it just consists of

577
00:22:24,710 --> 00:22:28,440
duplicating the library finally the end of the

578
00:22:28,440 --> 00:22:29,430
segment that we are executing

579
00:22:29,430 --> 00:22:31,830
and jumping to the address  sse you have been

580
00:22:31,830 --> 00:22:33,660
in this new low segment at least

581
00:22:33,660 --> 00:22:34,890
we didn't have the

582
00:22:34,890 --> 00:22:37,310
low end address for you like the base address of your

583
00:22:37,310 --> 00:22:40,710
your memory segment changing that can

584
00:22:40,710 --> 00:22:41,820
make and that will change at each

585
00:22:41,820 --> 00:22:43,530
execution that can  make the instrumentation a little more

586
00:22:43,530 --> 00:22:46,580
difficult

587
00:22:47,360 --> 00:22:51,610
it's sugar in them

588
00:22:53,940 --> 00:22:55,350
gone tell me interesting to know

589
00:22:55,350 --> 00:22:57,600
the analysis of the memory mapping of

590
00:22:57,600 --> 00:23:00,179
the application there the goal it can be for

591
00:23:00,179 --> 00:23:03,210
example to detect the giant frida so

592
00:23:03,210 --> 00:23:05,100
generally in print  dead we will

593
00:23:05,100 --> 00:23:06,179
find several things we will find

594
00:23:06,179 --> 00:23:09,110
data files

595
00:23:09,110 --> 00:23:12,809
shared memory slots etc and we will

596
00:23:12,809 --> 00:23:15,029
also find regions that are my

597
00:23:15,029 --> 00:23:16,830
pay to files that exist on your

598
00:23:16,830 --> 00:23:18,259
disk

599
00:23:18,259 --> 00:23:21,929
and generally we can distribute

600
00:23:21,929 --> 00:23:25,019
these files  there come from one of its

601
00:23:25,019 --> 00:23:27,470
four sources

602
00:23:28,880 --> 00:23:32,810
rather the name of the file which is my peace

603
00:23:32,810 --> 00:23:34,850
to the region is listed at least in one

604
00:23:34,850 --> 00:23:37,240
of these four sources

605
00:23:37,240 --> 00:23:39,320
that's what I said before so

606
00:23:39,320 --> 00:23:41,630
for example in the system file

607
00:23:41,630 --> 00:23:44,450
tested publ  ic of tabriz other texts

608
00:23:44,450 --> 00:23:47,590
you will have the common libraries

609
00:23:47,590 --> 00:23:51,280
provided by android aosp

610
00:23:51,280 --> 00:23:56,860
and therefore you have this kind of listings

611
00:23:56,860 --> 00:23:58,630
in these files jerome haas what to do

612
00:23:58,630 --> 00:24:02,020
the title detection what goes to

613
00:24:02,020 --> 00:24:03,580
I liked it previously entry all all

614
00:24:03,580 --> 00:24:06,610
and these names of  files there and when it

615
00:24:06,610 --> 00:24:09,149
goes to browse the

616
00:24:10,530 --> 00:24:13,570
memory machine it was worth therefore

617
00:24:13,570 --> 00:24:16,540
technically if a file is

618
00:24:16,540 --> 00:24:18,010
not from one of its four sources

619
00:24:18,010 --> 00:24:20,320
except one if it is not a library

620
00:24:20,320 --> 00:24:21,730
that comes from the platform and if c  it's

621
00:24:21,730 --> 00:24:22,750
not a library that comes from apeca

622
00:24:22,750 --> 00:24:24,820
and well it's something

623
00:24:24,820 --> 00:24:27,460
suspicious it's code that you

624
00:24:27,460 --> 00:24:30,210
injected dynamically

625
00:24:33,049 --> 00:24:34,970
how when it goes around the world

626
00:24:34,970 --> 00:24:38,690
it goes to read each line of your

627
00:24:38,690 --> 00:24:42,429
file in the proxima program for example

628
00:24:42,429 --> 00:24:45,320
and he will enter the first he will

629
00:24:45,320 --> 00:24:47,330
say to lower finally I make in the

630
00:24:47,330 --> 00:24:49,340
list of booksellers the 1st celib jls

631
00:24:49,340 --> 00:24:50,590


632
00:24:50,590 --> 00:24:53,960
mali other assaults so if level of the

633
00:24:53,960 --> 00:24:56,720
gpu it finally comes it is the seller

634
00:24:56,720 --> 00:24:59,029
of manufacturer telephones  and so he

635
00:24:59,029 --> 00:25:00,499
will find it in the file

636
00:25:00,499 --> 00:25:03,470
jonah hill will continue it's

637
00:25:03,470 --> 00:25:04,359


638
00:25:04,359 --> 00:25:08,450
pkc senate files from shared memory cd

639
00:25:08,450 --> 00:25:10,639
files from times maybe there he

640
00:25:10,639 --> 00:25:12,129
doesn't care he knows it's

641
00:25:12,129 --> 00:25:14,859
data anyway  he will not find him amap and

642
00:25:14,859 --> 00:25:16,730
germain who guide them each time

643
00:25:16,730 --> 00:25:19,009
the attributes 6 executable or not

644
00:25:19,009 --> 00:25:21,730
before doing this heat

645
00:25:22,280 --> 00:25:24,600
I speak of the attributes on the region

646
00:25:24,600 --> 00:25:28,340
but me and then they continue to

647
00:25:28,340 --> 00:25:31,200
attract on his island sting and he will

648
00:25:31,200 --> 00:25:32,700
manage to sort  more or less

649
00:25:32,700 --> 00:25:35,929
bookstores in boxes but

650
00:25:35,929 --> 00:25:38,790
typically our free agent in

651
00:25:38,790 --> 00:25:40,350
another frida gadget which could be

652
00:25:40,350 --> 00:25:42,330
their motto is simple still our case

653
00:25:42,330 --> 00:25:44,580
but it gives us our another

654
00:25:44,580 --> 00:25:46,130
frida jeans which will be injected

655
00:25:46,130 --> 00:25:50,309
into our our memory space it

656
00:25:50,309 --> 00:25:53,419
will be  my pay none none of these

657
00:25:53,419 --> 00:25:55,919
none of these four cases there so it is

658
00:25:55,919 --> 00:25:57,630
considered suspicious also all

659
00:25:57,630 --> 00:25:59,630
the libraries which to be the water of the

660
00:25:59,630 --> 00:26:02,150
executions using ld preload

661
00:26:02,150 --> 00:26:06,350
will end up in this case there

662
00:26:08,400 --> 00:26:10,680
of course  you can modify the

663
00:26:10,680 --> 00:26:12,840
files to say that it's my frida

664
00:26:12,840 --> 00:26:14,460
gadgets offered regents is an

665
00:26:14,460 --> 00:26:17,130
android library but germa it's okay

666
00:26:17,130 --> 00:26:19,620
you worry you'll fart secure

667
00:26:19,620 --> 00:26:21,420
boot you'll blow the integrity of

668
00:26:21,420 --> 00:26:23,070
your android image so it's not

669
00:26:23,070 --> 00:26:24,170
necessarily there

670
00:26:24,170 --> 00:26:28,070
it is not a solution that we retain

671
00:26:29,179 --> 00:26:32,480
and then suddenly once he has

672
00:26:32,480 --> 00:26:35,210
gone through 7 memory mapping and that he has

673
00:26:35,210 --> 00:26:37,929
acquired the plot that he has identified

674
00:26:37,929 --> 00:26:40,419
and are and files

675
00:26:40,419 --> 00:26:42,850
paid me which are  executables and it's

676
00:26:42,850 --> 00:26:45,090
their region

677
00:26:45,090 --> 00:26:49,200
he will try to detect if the

678
00:26:49,200 --> 00:26:52,269
symbols of these libraries there are

679
00:26:52,269 --> 00:26:55,269
san mateo good address so germain he

680
00:26:55,269 --> 00:26:57,580
goes it's not clear there on line heart that

681
00:26:57,580 --> 00:26:59,529
this volume inside which will do the

682
00:26:59,529 --> 00:27:01,559
same job  than your dynamic linker but

683
00:27:01,559 --> 00:27:03,549
they will reload the books

684
00:27:03,549 --> 00:27:05,830
manually so roughly speaking when

685
00:27:05,830 --> 00:27:07,089
you have this is the example of a

686
00:27:07,089 --> 00:27:08,489
structure that were returned to

687
00:27:08,489 --> 00:27:10,589
reconstituted from

688
00:27:10,589 --> 00:27:14,639
tomorrow industrial packer

689
00:27:15,030 --> 00:27:17,320
and in fact they build our

690
00:27:17,320 --> 00:27:19,030
chesnais lists and after having gone through  there

691
00:27:19,030 --> 00:27:21,040
memory he will go through this list there

692
00:27:21,040 --> 00:27:24,070
by analyzing the plots so he will

693
00:27:24,070 --> 00:27:26,830
look for example at the beginning of what

694
00:27:26,830 --> 00:27:29,530
is my p what took me to the beginning of

695
00:27:29,530 --> 00:27:31,330
the address of each region and see there

696
00:27:31,330 --> 00:27:33,880
that samuel daughter he says

697
00:27:33,880 --> 00:27:36,010
I have to go and try to load the

698
00:27:36,010 --> 00:27:39,600
original league to find

699
00:27:40,110 --> 00:27:41,360
the symbol

700
00:27:41,360 --> 00:27:42,809
1

701
00:27:42,809 --> 00:27:46,090
roughly speaking there are several and several

702
00:27:46,090 --> 00:27:48,000
steps to do

703
00:27:48,000 --> 00:27:51,809
this talk about it after the talk

704
00:27:52,179 --> 00:27:55,179
but roughly speaking he will check the

705
00:27:55,179 --> 00:27:57,070
different regions and how we get  in

706
00:27:57,070 --> 00:27:59,129
recall is free

707
00:27:59,129 --> 00:28:03,418
if he did the new york job on

708
00:28:04,790 --> 00:28:06,080
thursday this is what you can see is the

709
00:28:06,080 --> 00:28:07,610
difference in the mapping between a

710
00:28:07,610 --> 00:28:10,220
file a trial which is a physio

711
00:28:10,220 --> 00:28:12,500
in which frida is not injected and

712
00:28:12,500 --> 00:28:15,890
our so there c  was cuts in

713
00:28:15,890 --> 00:28:18,170
libé sow lips and other and sow that are

714
00:28:18,170 --> 00:28:20,990
deployed function loops that

715
00:28:20,990 --> 00:28:23,360
use frida's apei interceptor

716
00:28:23,360 --> 00:28:26,480
you can see that in fact it will

717
00:28:26,480 --> 00:28:28,670
add regions and so i normal

718
00:28:28,670 --> 00:28:31,850
and the tubes go  try to detect if there

719
00:28:31,850 --> 00:28:33,320
are d  supernumerary regions that are

720
00:28:33,320 --> 00:28:35,540
maps and if there are regions that are

721
00:28:35,540 --> 00:28:36,830
not the right size there are lots of

722
00:28:36,830 --> 00:28:39,130
different strategies depending on

723
00:28:39,130 --> 00:28:41,960
them operators that are used end of the

724
00:28:41,960 --> 00:28:43,520
packers have roughly speaking the idea

725
00:28:43,520 --> 00:28:44,600
was to  know how we are going to get through

726
00:28:44,600 --> 00:28:46,640
this either specifically or

727
00:28:46,640 --> 00:28:49,070
universally

728
00:28:49,070 --> 00:28:51,649
so the first part would be to say the

729
00:28:51,649 --> 00:28:53,179
first part which is specific the

730
00:28:53,179 --> 00:28:55,690
risk that I wrongly presented to you

731
00:28:55,690 --> 00:28:58,700
is to say well I am not going to hide my

732
00:28:58,700 --> 00:29:00,110
list  chesnais to tell him you

733
00:29:00,110 --> 00:29:02,389
stop at the first entry just in

734
00:29:02,389 --> 00:29:06,110
these times the next region cancel

735
00:29:06,110 --> 00:29:08,299
and the other solution which on the other hand

736
00:29:08,299 --> 00:29:09,950
is much more universal and that's what

737
00:29:09,950 --> 00:29:13,480
we're going to remember, that is to say I'm going

738
00:29:13,480 --> 00:29:15,920
it will necessarily do the cisco during reed

739
00:29:15,920 --> 00:29:20,140
to go and read their preferring emop

740
00:29:20,140 --> 00:29:22,220
them in general it was worth ferrand

741
00:29:22,220 --> 00:29:24,740
reid to go and read the contents of

742
00:29:24,740 --> 00:29:26,690
the prospects maps file so

743
00:29:26,690 --> 00:29:29,120
I have to play only the cisco during reed just

744
00:29:29,120 --> 00:29:31,870
after to go and

745
00:29:31,870 --> 00:29:34,520
modify the buffer of  spell  ie of the 6 cols

746
00:29:34,520 --> 00:29:37,670
reid before the program continues

747
00:29:37,670 --> 00:29:41,049
to ring to execute

748
00:29:41,570 --> 00:29:44,360
necessarily it is the quick solution but

749
00:29:44,360 --> 00:29:47,020
not universal

750
00:29:47,250 --> 00:29:49,620
and the second it is the second

751
00:29:49,620 --> 00:29:52,970
solution that universal therefore tight

752
00:29:52,970 --> 00:29:55,470
of to eat the reading of this line

753
00:29:55,470 --> 00:29:58,740
therefore  that already forces you to say ah

754
00:29:58,740 --> 00:30:02,510
but that will do the postulate that would

755
00:30:02,510 --> 00:30:04,920
already be is it reading line by line

756
00:30:04,920 --> 00:30:07,170
because nothing tells you that the

757
00:30:07,170 --> 00:30:10,230
landlord will check the memory line by

758
00:30:10,230 --> 00:30:10,910
line

759
00:30:10,910 --> 00:30:12,930
and generally this is generally the case

760
00:30:12,930 --> 00:30:14,150


761
00:30:14,150 --> 00:30:18,090
the intimates who will read your

762
00:30:18,090 --> 00:30:20,250
character by character they will

763
00:30:20,250 --> 00:30:22,170
make decisions before they have read the whole

764
00:30:22,170 --> 00:30:24,450
line or else the length will be

765
00:30:24,450 --> 00:30:26,580
renamed will change

766
00:30:26,580 --> 00:30:27,510
during execution which will make

767
00:30:27,510 --> 00:30:31,620
the application spoof the of the

768
00:30:31,620 --> 00:30:33,690
value of can make two outings of the

769
00:30:33,690 --> 00:30:36,420
ried very very difficult to know how to win

770
00:30:36,420 --> 00:30:39,830
a machine has been implemented acceptable

771
00:30:40,280 --> 00:30:42,350
good it is nevertheless this solution there

772
00:30:42,350 --> 00:30:43,690
which has been retained

773
00:30:43,690 --> 00:30:46,820
and therefore what I tell you what you

774
00:30:46,820 --> 00:30:49,090
will be able to find in the slides  it's

775
00:30:49,090 --> 00:30:52,010
if you want to test therefore sealed august

776
00:30:52,010 --> 00:30:54,710
for interceptors for switch the

777
00:30:54,710 --> 00:30:56,780
iodine library that I developed for

778
00:30:56,780 --> 00:30:58,630
frida which I spoke to you at the beginning

779
00:30:58,630 --> 00:31:02,840
for hook and this six cols of six colors

780
00:31:02,840 --> 00:31:05,300
of so there you have some examples

781
00:31:05,300 --> 00:31:07,120
of

782
00:31:07,120 --> 00:31:09,350
some  examples of what you can

783
00:31:09,350 --> 00:31:11,210
do inside the look using

784
00:31:11,210 --> 00:31:15,410
frida's memory api to scan is

785
00:31:15,410 --> 00:31:17,530
removed for example

786
00:31:17,530 --> 00:31:21,040
1 to replace regions mamr wx with

787
00:31:21,040 --> 00:31:23,740
asterix or

788
00:31:23,740 --> 00:31:26,720
rename some deep the library

789
00:31:26,720 --> 00:31:28,280
was soft you can for example

790
00:31:28,280 --> 00:31:32,410
removed frida  or

791
00:31:32,410 --> 00:31:34,850
output business patterns end of the output buffer

792
00:31:34,850 --> 00:31:38,170
of the 6 passes and therefore this pouf and the

793
00:31:38,170 --> 00:31:40,850
roughly own brand proc the

794
00:31:40,850 --> 00:31:43,190
proximity content the idea is

795
00:31:43,190 --> 00:31:45,290
really you to run the application

796
00:31:45,290 --> 00:31:47,480
on a road phone  and having by

797
00:31:47,480 --> 00:31:49,910
injecting lots of stuff etc and you

798
00:31:49,910 --> 00:31:51,410
what you need to give the impression to

799
00:31:51,410 --> 00:31:53,120
the application knows that the proc max the

800
00:31:53,120 --> 00:31:55,670
fma proxy since it will fetch that's the

801
00:31:55,670 --> 00:31:58,640
one of its most

802
00:31:58,640 --> 00:32:01,390
legitimate use possible  e this

803
00:32:01,720 --> 00:32:04,620
is the objective

804
00:32:04,620 --> 00:32:06,670
finally good there are other other

805
00:32:06,670 --> 00:32:09,640
mechanisms to

806
00:32:09,640 --> 00:32:11,650
detect instrumentation for example a

807
00:32:11,650 --> 00:32:14,200
course in all the content of proc

808
00:32:14,200 --> 00:32:18,600
your country said or self d'ascq statute

809
00:32:18,600 --> 00:32:21,790
you will be able to browse a file

810
00:32:21,790 --> 00:32:23,230
which  describes the status of all this raid

811
00:32:23,230 --> 00:32:25,720
so typically frida therefore

812
00:32:25,720 --> 00:32:28,600
running this raid I led the game I

813
00:32:28,600 --> 00:32:29,790
have a

814
00:32:29,790 --> 00:32:34,360
magnifying glass so there typically to have 3

815
00:32:34,360 --> 00:32:36,419
or that

816
00:32:36,419 --> 00:32:37,129
we

817
00:32:37,129 --> 00:32:39,720
can see three formations three

818
00:32:39,720 --> 00:32:41,489
ways of cooking and that in a universal way

819
00:32:41,489 --> 00:32:42,440


820
00:32:42,440 --> 00:32:45,739
its  survival

821
00:32:48,080 --> 00:32:51,470
provide a script to do this by

822
00:32:51,470 --> 00:32:53,679
yourself a show

823
00:32:53,679 --> 00:32:56,300
and finally b

824
00:32:56,300 --> 00:32:59,410
there are many other types of

825
00:32:59,410 --> 00:33:01,260
cech and there the goal is really going to be to

826
00:33:01,260 --> 00:33:03,910
keep the results consistent because

827
00:33:03,910 --> 00:33:05,680
they know that the developers

828
00:33:05,680 --> 00:33:07,060
know that you are going to try  of

829
00:33:07,060 --> 00:33:09,400
bouquets to eat its values so they 

830
00:33:09,400 --> 00:33:11,950
ill be useful tackle value will be each 

831
00:33:11,950 --> 00:33:14,380
ile will be read in 4.5 diffe

832
00:33:14,380 --> 00:33:16,330
ent ways for example the andro

833
00:33:16,330 --> 00:33:20,860
d properties will be a game it's possible I pas

834
00:33:20,860 --> 00:33:24,299
ed gmi from a side no so

835
00:33:28,090 --> 00:33:30,178
ry

836
00:33:34,260 --> 00:33:37,770
I  went out

837
00:33:41,309 --> 00:33:43,690
well it's the anti debugger because

838
00:33:43,690 --> 00:33:44,770
otherwise I don't see the time to talk to you

839
00:33:44,770 --> 00:33:47,149
about the rest

840
00:33:47,149 --> 00:33:48,799
it's worth it interesting we can

841
00:33:48,799 --> 00:33:51,309
talk about it later

842
00:33:52,440 --> 00:33:55,559
let's get back to our topic

843
00:33:55,770 --> 00:33:57,450
including the goal it's to bypass and

844
00:33:57,450 --> 00:34:00,450
that's  each where when as low as

845
00:34:00,450 --> 00:34:02,730
possible, that is to say at the level of the six

846
00:34:02,730 --> 00:34:04,080
passes or at the level of education, it is

847
00:34:04,080 --> 00:34:05,700
good we will consider that the league c

848
00:34:05,700 --> 00:34:07,830
is too high level because it can

849
00:34:07,830 --> 00:34:09,418
really change they can decide to

850
00:34:09,418 --> 00:34:11,250
not to use it they can line that

851
00:34:11,250 --> 00:34:13,969
aesthetically etc

852
00:34:15,480 --> 00:34:17,100
so the idea is to make a lease because

853
00:34:17,100 --> 00:34:19,429
they only use

854
00:34:19,429 --> 00:34:22,590
frida the ideal thing is that everything is

855
00:34:22,590 --> 00:34:24,239
done in the money that you  do not

856
00:34:24,239 --> 00:34:26,399
need to have a script that runs on

857
00:34:26,399 --> 00:34:28,530
batch that we will see it can be complicated

858
00:34:28,530 --> 00:34:30,980
if there are several processes

859
00:34:30,980 --> 00:34:33,119
typically also with clones you

860
00:34:33,119 --> 00:34:34,980
will need to recover the worst that

861
00:34:34,980 --> 00:34:38,750
is said of the new process on the other

862
00:34:39,530 --> 00:34:41,389
we want it to be universal so it

863
00:34:41,389 --> 00:34:42,440
works for all applications we

864
00:34:42,440 --> 00:34:44,840
want it to be standalone do  nc frida

865
00:34:44,840 --> 00:34:46,429
d'oeuvre the agent will have to choose a little bit

866
00:34:46,429 --> 00:34:48,080
what will be instrumented as the execution progresses and

867
00:34:48,080 --> 00:34:49,449


868
00:34:49,449 --> 00:34:51,989


869
00:34:51,989 --> 00:34:53,690
and of course it has to work with

870
00:34:53,690 --> 00:34:55,429
the

871
00:34:55,429 --> 00:34:58,050
official binary of frida ideally

872
00:34:58,050 --> 00:35:00,500


873
00:35:02,180 --> 00:35:04,130
majestic basically this name

874
00:35:04,130 --> 00:35:06,940
passed all that

875
00:35:08,080 --> 00:35:10,570
''  I solve frida it's really a

876
00:35:10,570 --> 00:35:11,620
lot of things but there are also a

877
00:35:11,620 --> 00:35:13,240
lot of things that are not possible

878
00:35:13,240 --> 00:35:15,900
to do around boxing wrote in

879
00:35:15,900 --> 00:35:18,300
for example

880
00:35:18,300 --> 00:35:22,350
I'm not afraid I'm going to move forward but

881
00:35:22,350 --> 00:35:24,520
for example if you use java

882
00:35:24,520 --> 00:35:25,960
performe you have

883
00:35:25,960 --> 00:35:27,700
maybe feel like you're gonna uke all the

884
00:35:27,700 --> 00:35:29,500
java in your application

885
00:35:29,500 --> 00:35:30,700
except actually I had to perform it

886
00:35:30,700 --> 00:35:33,370
's loaded to this art so what I was

887
00:35:33,370 --> 00:35:34,840
saying earlier if you have

888
00:35:34,840 --> 00:35:37,480
about factory and  that for example the

889
00:35:37,480 --> 00:35:38,920
same class the class the default smell

890
00:35:38,920 --> 00:35:40,420
which has been replaced by a new class

891
00:35:40,420 --> 00:35:42,340
smells ah well that you will not be able to look

892
00:35:42,340 --> 00:35:45,370
and author the box you will have to use the

893
00:35:45,370 --> 00:35:48,040
optimization options of hoerdt

894
00:35:48,040 --> 00:35:50,100
of free in or

895
00:35:50,100 --> 00:35:53,520
efficient java or

896
00:35:53,520 --> 00:35:55,960
other cases so it's two o  utils

897
00:35:55,960 --> 00:35:56,950
and methods that are not yet

898
00:35:56,950 --> 00:35:58,720
defined in the steps of the

899
00:35:58,720 --> 00:36:00,790
dookie application of libraries in

900
00:36:00,790 --> 00:36:03,010
the traditional company perhaps you have already

901
00:36:03,010 --> 00:36:04,630
used books to patch its

902
00:36:04,630 --> 00:36:07,000
libraries and reinject them in

903
00:36:07,000 --> 00:36:08,290
peace case but suddenly it forces you  to

904
00:36:08,290 --> 00:36:09,820
patch the integrity

905
00:36:09,820 --> 00:36:11,770
czechs of apeca so there the idea is to do

906
00:36:11,770 --> 00:36:16,140
everything with frida etc

907
00:36:17,040 --> 00:36:19,950
so to summarize the

908
00:36:19,950 --> 00:36:21,819
difficulties you may encounter

909
00:36:21,819 --> 00:36:24,420
so that's what I was saying before it's

910
00:36:24,420 --> 00:36:27,900
if you do java  performs

911
00:36:27,900 --> 00:36:30,579
the most classic method with frida

912
00:36:30,579 --> 00:36:32,680
in fact you are quite late

913
00:36:32,680 --> 00:36:35,290
in executing the application good

914
00:36:35,290 --> 00:36:37,359
practice is either to use optimind

915
00:36:37,359 --> 00:36:39,940
everything or use high-performance java

916
00:36:39,940 --> 00:36:42,430
on the latest versions of frida you

917
00:36:42,430 --> 00:36:45,150
will really be zero

918
00:36:45,150 --> 00:36:49,020
for me  approach of the application

919
00:36:49,720 --> 00:36:52,759
to have an idea also of all that

920
00:36:52,759 --> 00:36:55,400
is loaded in terms of class e

921
00:36:55,400 --> 00:36:56,599
before the class odor of your application

922
00:36:56,599 --> 00:36:59,079
is loaded

923
00:36:59,079 --> 00:37:04,529
and even before the ball

924
00:37:05,070 --> 00:37:07,660
the first point of entry  in kung fu

925
00:37:07,660 --> 00:37:10,600
nanny factory be sure to be called via

926
00:37:10,600 --> 00:37:12,970
personal incidental hour thanks to

927
00:37:12,970 --> 00:37:14,800
frida you can still

928
00:37:14,800 --> 00:37:17,140
instrument using audioboo ma is everything

929
00:37:17,140 --> 00:37:18,790
you can instrument things

930
00:37:18,790 --> 00:37:22,600
very upstream even upstream of the existing one at

931
00:37:22,600 --> 00:37:24,040
a stage where the package of  java games

932
00:37:24,040 --> 00:37:26,850
do not exist in education

933
00:37:31,350 --> 00:37:34,490
new skies which I was telling you about it is

934
00:37:34,490 --> 00:37:38,040
you use if for example visit these

935
00:37:38,040 --> 00:37:40,500
interceptors for hook and gina

936
00:37:40,500 --> 00:37:43,410
youngblood in a trip tip of the

937
00:37:43,410 --> 00:37:45,060
bookstore in fact I have an iphone aude

938
00:37:45,060 --> 00:37:47,580
it  will still happen after the

939
00:37:47,580 --> 00:37:50,760
real triplet namely zero for

940
00:37:50,760 --> 00:37:52,010
example you

941
00:37:52,010 --> 00:37:53,940
and it is really in this case where you

942
00:37:53,940 --> 00:37:56,730
should use book the solution that

943
00:37:56,730 --> 00:37:58,400
I propose to you is rather to

944
00:37:58,400 --> 00:38:00,710
use douk and the linker

945
00:38:00,710 --> 00:38:02,550
and finally you will  to be able to

946
00:38:02,550 --> 00:38:04,290
inject your scripts into the library

947
00:38:04,290 --> 00:38:06,360
before going into advanced sorting

948
00:38:06,360 --> 00:38:10,420
it's really very upstream

949
00:38:10,420 --> 00:38:13,510
and suddenly it's very interesting to

950
00:38:13,510 --> 00:38:16,589
free yourself from books

951
00:38:18,020 --> 00:38:20,910
then your jet your thing another

952
00:38:20,910 --> 00:38:23,790
challenge that's

953
00:38:23,790 --> 00:38:27,710


954
00:38:28,790 --> 00:38:29,780


955
00:38:29,780 --> 00:38:31,729


956
00:38:31,729 --> 00:38:33,210


957
00:38:33,210 --> 00:38:35,609


958
00:38:35,609 --> 00:38:38,219


959
00:38:38,219 --> 00:38:41,099


960
00:38:41,099 --> 00:38:42,619


961
00:38:42,619 --> 00:38:45,569


962
00:38:45,569 --> 00:38:48,210


963
00:38:48,210 --> 00:38:49,680


964
00:38:49,680 --> 00:38:51,479


965
00:38:51,479 --> 00:38:55,140


966
00:38:55,140 --> 00:38:56,849


967
00:38:56,849 --> 00:38:59,150


968
00:38:59,150 --> 00:39:01,619


969
00:39:01,619 --> 00:39:03,049


970
00:39:03,049 --> 00:39:06,299


971
00:39:06,299 --> 00:39:07,950


972
00:39:07,950 --> 00:39:09,150


973
00:39:09,150 --> 00:39:10,799


974
00:39:10,799 --> 00:39:13,499


975
00:39:13,499 --> 00:39:15,150


976
00:39:15,150 --> 00:39:18,440


977
00:39:18,440 --> 00:39:22,579


978
00:39:23,210 --> 00:39:25,109


979
00:39:25,109 --> 00:39:28,049


980
00:39:28,049 --> 00:39:29,509


981
00:39:29,509 --> 00:39:32,160
re the multithread especially if you have to hook and the six cols which suddenly the [Music] traditionally one could imagine that an android application it's a single trial it may be just whatever this raid that is running so this posts you it's not a problem as long as you instrument java methods or native functions but as soon as you want to instrument at the instruction level it will work by would in fact be so and also if you have or dock functions before deploying d where qu at civics level there will not be loaded so if you have or kyiv open c league and then you use frida stalker to hook and instructions in a thread now that would be from there you will no longer have the look on the function fo leipzig failure that's why I invite you to use the switch the woodstock library so typically there what is implemented for the follow the follow this raid is this  version but naive to its looks of

982
00:39:32,160 --> 00:39:33,719
peace would be from crete I explain

983
00:39:33,719 --> 00:39:35,719
how to do it

984
00:39:35,719 --> 00:39:38,750
and also what not to do

985
00:39:38,750 --> 00:39:40,580
my idea in fact it's going to redefine

986
00:39:40,580 --> 00:39:43,310
the routine which you can define

987
00:39:43,310 --> 00:39:44,810
when you create a thread a

988
00:39:44,810 --> 00:39:46,220
function routine  which will be executed at all

989
00:39:46,220 --> 00:39:48,830
approach of this would be in fact we

990
00:39:48,830 --> 00:39:51,560
will the club will replace this function

991
00:39:51,560 --> 00:39:55,100
there to pass from another to another or that

992
00:39:55,100 --> 00:39:57,800
before passing into the routine of

993
00:39:57,800 --> 00:39:59,530
desproges

994
00:39:59,530 --> 00:40:02,150
but roughly speaking an application to the

995
00:40:02,150 --> 00:40:05,180
modern and looks like it's going to be multi

996
00:40:05,180 --> 00:40:08,030
process there's going to be isolated processes

997
00:40:08,030 --> 00:40:09,380
in slightly the czechs are done

998
00:40:09,380 --> 00:40:13,240
in a process is external

999
00:40:13,360 --> 00:40:16,330
because they say at late in process

1000
00:40:16,330 --> 00:40:20,540
and if your application uses

1001
00:40:20,540 --> 00:40:22,910
some is for example the savak to

1002
00:40:22,910 --> 00:40:25,490
put back would be  to favor a

1003
00:40:25,490 --> 00:40:26,900
completely external privileged process

1004
00:40:26,900 --> 00:40:29,410
which would require the instrument

1005
00:40:29,410 --> 00:40:31,340
to have additional agents at the

1006
00:40:31,340 --> 00:40:33,350
level of frida and an agent level endows

1007
00:40:33,350 --> 00:40:37,329
therefore roughly speaking to make our golden

1008
00:40:37,329 --> 00:40:39,779
amr

1009
00:40:40,400 --> 00:40:41,690
you have to print in addition to all the

1010
00:40:41,690 --> 00:40:42,980
looks that I am going to present to you at the

1011
00:40:42,980 --> 00:40:44,539
level of all the bones as universal at the

1012
00:40:44,539 --> 00:40:47,089
level of the Czechs you also have to

1013
00:40:47,089 --> 00:40:49,760
implement it is unfortunately these agents

1014
00:40:49,760 --> 00:40:53,380
there and scripts at the level of nato

1015
00:40:55,480 --> 00:40:58,619
you have little by little  you latif 2

1016
00:40:58,619 --> 00:40:59,700
what you need to implement for

1017
00:40:59,700 --> 00:41:01,799
example you will need a dictionary of

1018
00:41:01,799 --> 00:41:03,180
all the values to eat it's super

1019
00:41:03,180 --> 00:41:04,680
important because suddenly if you h

1020
00:41:04,680 --> 00:41:07,130
ve a lot of there

1021
00:41:07,130 --> 00:41:10,099
are lots of ways you don't wa

1022
00:41:10,099 --> 00:41:12,569
nt your body will use lots of diffe

1023
00:41:12,569 --> 00:41:13,890
ent ways d  'go get the

1024
00:41:13,890 --> 00:41:16,200
values it is absolutely necessary to guarantee the i

1025
00:41:16,200 --> 00:41:17,490
tegrity of its values it is really necessary that all th

1026
00:41:17,490 --> 00:41:18,779
Czechs return the same value other

1027
00:41:18,779 --> 00:41:20,339
ise they will detect which is somethin

1028
00:41:20,339 --> 00:41:21,269
that is wrong and that you are trying to f

1029
00:41:21,269 --> 00:41:24,079
ol them that's all 

1030
00:41:24,079 --> 00:41:27,690
the all blue boxes

1031
00:41:27,690 --> 00:41:30,480
one down these are particular contexts

1032
00:41:30,480 --> 00:41:32,069
at

1033
00:41:32,069 --> 00:41:34,599
the application lifecycle level that they may

1034
00:41:34,599 --> 00:41:36,029
that are not

1035
00:41:36,029 --> 00:41:38,769
supported up to boxing by

1036
00:41:38,769 --> 00:41:40,539
frida and so it  you will need or that they

1037
00:41:40,539 --> 00:41:41,890
have each of these contexts there and

1038
00:41:41,890 --> 00:41:44,200
redeploy you that from these

1039
00:41:44,200 --> 00:41:47,519
contexts hours or new ones

1040
00:41:47,910 --> 00:41:49,920
not

1041
00:41:49,920 --> 00:41:53,270
the court of the top

