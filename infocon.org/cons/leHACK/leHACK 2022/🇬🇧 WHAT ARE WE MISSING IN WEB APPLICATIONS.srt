1
00:00:00,120 --> 00:00:04,319
okay sorry for the glitch uh it's uh

2
00:00:04,319 --> 00:00:06,839
something about the audio and uh sharing

3
00:00:06,839 --> 00:00:09,420
the content so uh let's begin without

4
00:00:09,420 --> 00:00:13,440
further Ado uh today my topic uh what

5
00:00:13,440 --> 00:00:15,420
are we missing in web application before

6
00:00:15,420 --> 00:00:17,520
that I would like to introduce the topic

7
00:00:17,520 --> 00:00:19,320
and myself as well that what we are

8
00:00:19,320 --> 00:00:22,260
going to do and who am I and what I'm

9
00:00:22,260 --> 00:00:25,439
doing right now in the market so if we

10
00:00:25,439 --> 00:00:28,080
just go with the flow and this is a

11
00:00:28,080 --> 00:00:30,740
basic uh short introduction about myself

12
00:00:30,740 --> 00:00:33,780
uh my name is mirzaber hanvig and I've

13
00:00:33,780 --> 00:00:36,120
been working with the zero day labs in

14
00:00:36,120 --> 00:00:38,760
Manchester UK for around five to six

15
00:00:38,760 --> 00:00:41,520
months now prior to that I was in Riyadh

16
00:00:41,520 --> 00:00:44,160
Saudi Arabia and

17
00:00:44,160 --> 00:00:46,620
I was working as a trade analyst over

18
00:00:46,620 --> 00:00:49,440
there so uh in my career I've been

19
00:00:49,440 --> 00:00:51,480
working as a bug Bounty Hunter it's all

20
00:00:51,480 --> 00:00:54,660
started in 2013 and 14 when we started

21
00:00:54,660 --> 00:00:56,699
by bounty hunting for big large

22
00:00:56,699 --> 00:01:00,239
companies that are listed so I'm uh a

23
00:01:00,239 --> 00:01:02,280
few of my credentials are that I'm oscp

24
00:01:02,280 --> 00:01:03,780
certified along with some other great

25
00:01:03,780 --> 00:01:06,479
credentials of Elon security and I'm

26
00:01:06,479 --> 00:01:09,119
pursuing more into that so my main area

27
00:01:09,119 --> 00:01:12,500
of concern nowadays and from

28
00:01:12,500 --> 00:01:16,259
2017 to 18 and now on I've been working

29
00:01:16,259 --> 00:01:18,420
with the red teaming assignments the

30
00:01:18,420 --> 00:01:20,820
blue teaming and all the other things

31
00:01:20,820 --> 00:01:23,159
including the soft monitoring systems

32
00:01:23,159 --> 00:01:26,400
and all the other uh the components that

33
00:01:26,400 --> 00:01:29,159
we connect to secure our environment

34
00:01:29,159 --> 00:01:31,439
working with the edrs and the thread in

35
00:01:31,439 --> 00:01:34,200
the list and the uh doing the compromise

36
00:01:34,200 --> 00:01:36,960
assessments I've acknowledged and I've

37
00:01:36,960 --> 00:01:39,960
witnessed uh many things in the web

38
00:01:39,960 --> 00:01:42,899
applications and the network so nowadays

39
00:01:42,899 --> 00:01:45,840
we are most really working with the web

40
00:01:45,840 --> 00:01:48,720
applications and for that specific

41
00:01:48,720 --> 00:01:52,439
reason I did my web application

42
00:01:52,439 --> 00:01:54,899
penetration testing and it's been around

43
00:01:54,899 --> 00:01:58,079
seven years now that I'm working on a

44
00:01:58,079 --> 00:02:00,079
specific domain of the web application

45
00:02:00,079 --> 00:02:03,719
and that's it yeah I've worked for many

46
00:02:03,719 --> 00:02:07,140
business sectors and I am working

47
00:02:07,140 --> 00:02:09,959
in the industry for banking industry

48
00:02:09,959 --> 00:02:12,239
nowadays mostly that I did my projects

49
00:02:12,239 --> 00:02:15,360
so this talk and this problem occurs uh

50
00:02:15,360 --> 00:02:17,280
in the banking industry most of the time

51
00:02:17,280 --> 00:02:20,879
because uh the compliance and the issues

52
00:02:20,879 --> 00:02:23,400
that are raised for the compliance and

53
00:02:23,400 --> 00:02:26,760
the isos and you are talking about the

54
00:02:26,760 --> 00:02:29,400
policies and all the other things so we

55
00:02:29,400 --> 00:02:31,560
want to strengthen our financial

56
00:02:31,560 --> 00:02:35,459
environment more in the industry and in

57
00:02:35,459 --> 00:02:39,120
the award regardless in other talks so

58
00:02:39,120 --> 00:02:41,760
let's uh start the presentation what I'm

59
00:02:41,760 --> 00:02:44,760
going to present nowadays today and what

60
00:02:44,760 --> 00:02:47,700
we are going to do so what are some

61
00:02:47,700 --> 00:02:49,739
critical web application flows nowadays

62
00:02:49,739 --> 00:02:52,620
so we are going to compare the OAS top

63
00:02:52,620 --> 00:02:56,879
10 previous and now so in 2017 we used

64
00:02:56,879 --> 00:03:00,840
to see OAS top 10 and uh most of them

65
00:03:00,840 --> 00:03:03,480
most of them are covering the areas from

66
00:03:03,480 --> 00:03:06,300
top to bottom and so in 2017 if we

67
00:03:06,300 --> 00:03:07,980
witnessed that and we have seen and we

68
00:03:07,980 --> 00:03:10,500
have worked on that so injections are

69
00:03:10,500 --> 00:03:13,159
the most critical vulnerability in 2017

70
00:03:13,159 --> 00:03:17,580
and now as well but the injections the

71
00:03:17,580 --> 00:03:20,099
authentication flows the xss and all the

72
00:03:20,099 --> 00:03:23,819
other things but in now 2021 and 22 now

73
00:03:23,819 --> 00:03:26,280
we are talking about the different kind

74
00:03:26,280 --> 00:03:29,159
of attacks now we are witnessing these

75
00:03:29,159 --> 00:03:31,500
realization attacks we are facing the

76
00:03:31,500 --> 00:03:33,480
authentication attacks and all the

77
00:03:33,480 --> 00:03:36,060
others as well so now it's a pretty

78
00:03:36,060 --> 00:03:38,519
change in the OS top 10 as well that we

79
00:03:38,519 --> 00:03:40,260
have worked with the broken access

80
00:03:40,260 --> 00:03:43,739
controls and the uh injections are moved

81
00:03:43,739 --> 00:03:46,379
to third position from first why is that

82
00:03:46,379 --> 00:03:49,019
so and how we are going to test it as

83
00:03:49,019 --> 00:03:51,480
well we will talk about that but first

84
00:03:51,480 --> 00:03:55,019
the major changes in the current was top

85
00:03:55,019 --> 00:03:57,120
10 is listed over here and you can find

86
00:03:57,120 --> 00:03:59,280
it on the web application as well the

87
00:03:59,280 --> 00:04:01,939
WASP so why there is a need for a change

88
00:04:01,939 --> 00:04:05,760
the main question lies that it's going

89
00:04:05,760 --> 00:04:08,340
pretty forward and it's it's going very

90
00:04:08,340 --> 00:04:11,580
smooth in 2000 till 2017 and now as well

91
00:04:11,580 --> 00:04:13,620
that we have a framework according was

92
00:04:13,620 --> 00:04:16,500
we have uh testing guidelines we have

93
00:04:16,500 --> 00:04:18,238
the all the other things and the

94
00:04:18,238 --> 00:04:19,918
criticality and the civility of a

95
00:04:19,918 --> 00:04:22,440
special vulnerability so why we change

96
00:04:22,440 --> 00:04:25,440
that we have changed because everything

97
00:04:25,440 --> 00:04:27,660
needs to be changed right according to

98
00:04:27,660 --> 00:04:30,060
the time according to the need so first

99
00:04:30,060 --> 00:04:33,240
of all we will be taking a few examples

100
00:04:33,240 --> 00:04:35,340
and we'll discuss the some scanning

101
00:04:35,340 --> 00:04:37,919
techniques and uh today uh we are

102
00:04:37,919 --> 00:04:39,960
talking about a vulnerability that could

103
00:04:39,960 --> 00:04:42,180
not be found by the static or the

104
00:04:42,180 --> 00:04:44,699
dynamic analysis or the dynamic scanners

105
00:04:44,699 --> 00:04:47,280
so what you have to do you have to go

106
00:04:47,280 --> 00:04:49,199
manually for these kind of

107
00:04:49,199 --> 00:04:51,540
vulnerabilities so first of all uh

108
00:04:51,540 --> 00:04:54,240
static and dynamic scanning I'm sure

109
00:04:54,240 --> 00:04:56,699
most of you guys are very well aware of

110
00:04:56,699 --> 00:04:58,860
these terminologies and if we talk about

111
00:04:58,860 --> 00:05:01,320
the static and dynamic things so what

112
00:05:01,320 --> 00:05:02,940
happens from the front end and the back

113
00:05:02,940 --> 00:05:04,979
end you scan the source code you do the

114
00:05:04,979 --> 00:05:07,919
revolution from the front end but

115
00:05:07,919 --> 00:05:10,919
I'm talking about the few view if I can

116
00:05:10,919 --> 00:05:12,840
take the names we have used the net

117
00:05:12,840 --> 00:05:15,000
spark or akinetics and all the other web

118
00:05:15,000 --> 00:05:17,699
scanners and there was a IBM app scan

119
00:05:17,699 --> 00:05:20,340
source for analysis so we Vera code and

120
00:05:20,340 --> 00:05:22,500
we have a lot of multiple products that

121
00:05:22,500 --> 00:05:24,539
we can use for these static and dynamic

122
00:05:24,539 --> 00:05:27,600
analysis but in today's world uh the

123
00:05:27,600 --> 00:05:30,919
vulnerabilities the the attacks and the

124
00:05:30,919 --> 00:05:33,660
exploits they are much more efficient

125
00:05:33,660 --> 00:05:36,479
than a scanner so a human mind can think

126
00:05:36,479 --> 00:05:38,820
a thousands of possibilities and we can

127
00:05:38,820 --> 00:05:41,820
direct them in different ways regardless

128
00:05:41,820 --> 00:05:44,340
of the scanner so now if you want to

129
00:05:44,340 --> 00:05:47,220
take a simple example uh how they are

130
00:05:47,220 --> 00:05:49,800
protected and how we can protect our web

131
00:05:49,800 --> 00:05:52,199
applications from such attacks so I'm

132
00:05:52,199 --> 00:05:54,300
just taking an example of the xq

133
00:05:54,300 --> 00:05:57,600
injection uh we can talk uh about 10 of

134
00:05:57,600 --> 00:06:00,240
things in the OS top 10 but right now

135
00:06:00,240 --> 00:06:02,759
I'm just taking a skill injection just

136
00:06:02,759 --> 00:06:04,819
for the sake of the example

137
00:06:04,819 --> 00:06:07,319
how are we gonna exploit that previously

138
00:06:07,319 --> 00:06:10,080
and how it it is secure now and why I'm

139
00:06:10,080 --> 00:06:12,000
saying that it's moved from one to third

140
00:06:12,000 --> 00:06:15,000
or some Downer position that uh we can

141
00:06:15,000 --> 00:06:18,000
see in the last changes so what happened

142
00:06:18,000 --> 00:06:22,020
previously we lack in information uh

143
00:06:22,020 --> 00:06:24,259
security due to the input validation

144
00:06:24,259 --> 00:06:27,780
parameters there were no parameterized

145
00:06:27,780 --> 00:06:30,120
queries and the character escaping was

146
00:06:30,120 --> 00:06:33,060
not in the market so what happens uh we

147
00:06:33,060 --> 00:06:36,120
and you with the tester do just a single

148
00:06:36,120 --> 00:06:39,840
quote and we uh bypass the security and

149
00:06:39,840 --> 00:06:42,120
we get the data from the database very

150
00:06:42,120 --> 00:06:44,460
name and language I'm using right now we

151
00:06:44,460 --> 00:06:47,100
just inject some queries into the

152
00:06:47,100 --> 00:06:50,160
a search bar input a field and we get

153
00:06:50,160 --> 00:06:51,960
the data what we want from the server

154
00:06:51,960 --> 00:06:54,479
but now if we talk about the SQL

155
00:06:54,479 --> 00:06:56,280
injection and other attacks so these

156
00:06:56,280 --> 00:06:59,099
skill injections are protected how there

157
00:06:59,099 --> 00:07:00,900
are multiple there are multiple

158
00:07:00,900 --> 00:07:04,139
libraries you can use for the ASP PHP

159
00:07:04,139 --> 00:07:06,960
and all the other things that are pre uh

160
00:07:06,960 --> 00:07:09,840
defined secured and if you want to use a

161
00:07:09,840 --> 00:07:12,139
input validation for your ASP

162
00:07:12,139 --> 00:07:14,280
project.net project or the PHP project

163
00:07:14,280 --> 00:07:17,039
so you can induce those libraries and

164
00:07:17,039 --> 00:07:20,400
you can just secure your data input from

165
00:07:20,400 --> 00:07:22,560
the input validation point of view so we

166
00:07:22,560 --> 00:07:24,479
have a parameterized key store

167
00:07:24,479 --> 00:07:27,000
procedures escaping is there in the

168
00:07:27,000 --> 00:07:28,680
market and if you talk about the

169
00:07:28,680 --> 00:07:31,680
browsers so now the browsers are very

170
00:07:31,680 --> 00:07:35,520
much efficient and you can easily see

171
00:07:35,520 --> 00:07:39,060
that your SQL injection query or your

172
00:07:39,060 --> 00:07:41,639
xss cannot be bypassed from the browser

173
00:07:41,639 --> 00:07:44,160
that is handling your requests so they

174
00:07:44,160 --> 00:07:46,680
have put the uh filters they have put

175
00:07:46,680 --> 00:07:49,319
the module tools and everything they can

176
00:07:49,319 --> 00:07:51,419
control from the front end as well from

177
00:07:51,419 --> 00:07:53,940
the back end to the back end so now it

178
00:07:53,940 --> 00:07:57,240
is quite a hard thing to do a skill

179
00:07:57,240 --> 00:07:59,340
injection many of us many of us are

180
00:07:59,340 --> 00:08:00,900
doing the bug bounty hunting and all the

181
00:08:00,900 --> 00:08:03,780
other things nowadays as well so

182
00:08:03,780 --> 00:08:06,599
if you talk about the SQL injection uh

183
00:08:06,599 --> 00:08:09,660
I'm not sure 10 of the people are able

184
00:08:09,660 --> 00:08:11,460
to find SQL injection nowadays in the

185
00:08:11,460 --> 00:08:13,319
web application why because this is

186
00:08:13,319 --> 00:08:14,940
secure from the front end and the back

187
00:08:14,940 --> 00:08:17,520
end as well so we have to look for the

188
00:08:17,520 --> 00:08:20,580
fact that now the browsers are changing

189
00:08:20,580 --> 00:08:22,680
now the libraries modules and everything

190
00:08:22,680 --> 00:08:25,199
is evolving and they are securing the

191
00:08:25,199 --> 00:08:27,840
application much more efficient way than

192
00:08:27,840 --> 00:08:30,599
they have used to be now if you talk

193
00:08:30,599 --> 00:08:32,580
about the other vulnerabilities the xss

194
00:08:32,580 --> 00:08:34,500
bypass so we have the filters for that

195
00:08:34,500 --> 00:08:37,260
the character escaping is there so you

196
00:08:37,260 --> 00:08:41,458
can not bypass the xss or uh just any

197
00:08:41,458 --> 00:08:43,380
other vulnerability by just simply

198
00:08:43,380 --> 00:08:46,740
simply placing the query in the box or

199
00:08:46,740 --> 00:08:49,200
bypassing control with the front end

200
00:08:49,200 --> 00:08:51,660
just easily now you have to think

201
00:08:51,660 --> 00:08:53,279
critically on the other vulnerabilities

202
00:08:53,279 --> 00:08:55,320
as well and you have to follow the

203
00:08:55,320 --> 00:08:58,200
stream okay so if we talk about the

204
00:08:58,200 --> 00:09:00,420
business logic flaws that is the main

205
00:09:00,420 --> 00:09:03,120
topic of my talk today the specific

206
00:09:03,120 --> 00:09:05,519
thing the main thing that I am

207
00:09:05,519 --> 00:09:08,100
discussing now and we cannot find it

208
00:09:08,100 --> 00:09:11,700
with the dynamic or static scanners in

209
00:09:11,700 --> 00:09:13,680
the web application I'm sure most of you

210
00:09:13,680 --> 00:09:16,580
guys will uh

211
00:09:16,580 --> 00:09:20,040
resent for me on this one that yes we

212
00:09:20,040 --> 00:09:22,320
cannot find the vulnerability business

213
00:09:22,320 --> 00:09:25,200
logic law in the web application with

214
00:09:25,200 --> 00:09:27,779
the scanner itself just a scanner we

215
00:09:27,779 --> 00:09:30,060
have to tune it we have to do multiple

216
00:09:30,060 --> 00:09:33,360
things to just run the scanner for other

217
00:09:33,360 --> 00:09:35,100
business logic I'll explain it later as

218
00:09:35,100 --> 00:09:37,019
well we have a lot of plugins for the

219
00:09:37,019 --> 00:09:39,420
verb and other things as well so we can

220
00:09:39,420 --> 00:09:42,720
scan this specific vulnerability this is

221
00:09:42,720 --> 00:09:44,640
the vulnerability that is the most

222
00:09:44,640 --> 00:09:46,740
critical in the web application or in

223
00:09:46,740 --> 00:09:48,480
any form of application if we are

224
00:09:48,480 --> 00:09:50,940
talking about why what is the business

225
00:09:50,940 --> 00:09:55,080
logic floss how how do they even exist

226
00:09:55,080 --> 00:09:57,360
and what's the impact for this I'll just

227
00:09:57,360 --> 00:09:59,459
take an example for this one what a

228
00:09:59,459 --> 00:10:01,320
business logic laws the business logic

229
00:10:01,320 --> 00:10:05,040
flaws is simply uh an example now you

230
00:10:05,040 --> 00:10:06,720
are in the conference you bought a

231
00:10:06,720 --> 00:10:08,820
ticket and you head to the arena you

232
00:10:08,820 --> 00:10:10,500
showed your ticket and you are inside

233
00:10:10,500 --> 00:10:13,620
the arena but what if if you bypass the

234
00:10:13,620 --> 00:10:15,720
ticket checking process and you're just

235
00:10:15,720 --> 00:10:19,260
right in the arena without processing of

236
00:10:19,260 --> 00:10:21,779
without showing that ticket on the gate

237
00:10:21,779 --> 00:10:24,720
or something like that so this is a flu

238
00:10:24,720 --> 00:10:28,740
you we have to pick it A B C D I have a

239
00:10:28,740 --> 00:10:31,320
few examples in the uh the slides as

240
00:10:31,320 --> 00:10:34,620
well but if we try to just take an

241
00:10:34,620 --> 00:10:36,720
example from the Facebook go to the

242
00:10:36,720 --> 00:10:38,940
Facebook put your credentials and boom

243
00:10:38,940 --> 00:10:40,560
you are presented with your home page

244
00:10:40,560 --> 00:10:43,380
but what if if I skip the step two I

245
00:10:43,380 --> 00:10:45,420
have the request for this step one and

246
00:10:45,420 --> 00:10:48,240
three and I just rely on that and

247
00:10:48,240 --> 00:10:51,540
replace these actually with certain uh

248
00:10:51,540 --> 00:10:54,839
what we can say probabilities and then

249
00:10:54,839 --> 00:10:57,180
we can see the screen so business logic

250
00:10:57,180 --> 00:10:59,579
flow means you are breaking the logic

251
00:10:59,579 --> 00:11:02,640
and the flow of the business that is

252
00:11:02,640 --> 00:11:05,579
meant to be so how these uh

253
00:11:05,579 --> 00:11:08,640
vulnerabilities arise negligence simply

254
00:11:08,640 --> 00:11:10,440
a negligence because as a penetration

255
00:11:10,440 --> 00:11:12,060
tester for around seven years eight

256
00:11:12,060 --> 00:11:14,220
years now as a red teamer as a security

257
00:11:14,220 --> 00:11:18,060
consultant and uh I I just want to thank

258
00:11:18,060 --> 00:11:20,579
all the developers they are leaving the

259
00:11:20,579 --> 00:11:24,140
vulnerabilities behind for us

260
00:11:27,959 --> 00:11:31,200
so I would like to thank the developers

261
00:11:31,200 --> 00:11:32,700
the hardcore developer for the

262
00:11:32,700 --> 00:11:34,620
applications in every kind of

263
00:11:34,620 --> 00:11:36,620
application that they are working for

264
00:11:36,620 --> 00:11:42,180
and why because if the Developers

265
00:11:42,180 --> 00:11:45,660
codes very well and securely then there

266
00:11:45,660 --> 00:11:48,779
is no job for us in the market so that's

267
00:11:48,779 --> 00:11:51,060
a huge thanks for Developers for leaving

268
00:11:51,060 --> 00:11:52,560
the Christmas behind leaving the

269
00:11:52,560 --> 00:11:54,120
vulnerabilities behind so we can work on

270
00:11:54,120 --> 00:11:56,940
this and we are working to secure

271
00:11:56,940 --> 00:11:59,100
everything nowadays so negligence means

272
00:11:59,100 --> 00:12:01,980
you are leaving something in your code

273
00:12:01,980 --> 00:12:03,660
while developing your web application

274
00:12:03,660 --> 00:12:06,480
that can lead to an privileged

275
00:12:06,480 --> 00:12:09,060
escalation attack or a complete uh data

276
00:12:09,060 --> 00:12:11,820
exposure or what we can think of that

277
00:12:11,820 --> 00:12:15,420
how big this can be this can be a

278
00:12:15,420 --> 00:12:17,579
disaster for a financial institution

279
00:12:17,579 --> 00:12:20,160
like a bank or the insurance company if

280
00:12:20,160 --> 00:12:21,899
someone can access your data without

281
00:12:21,899 --> 00:12:25,440
your cookies or your session ID or they

282
00:12:25,440 --> 00:12:27,300
are just reusing your session ID or

283
00:12:27,300 --> 00:12:29,820
something like that so that can be a

284
00:12:29,820 --> 00:12:31,980
disaster thing for your organization

285
00:12:31,980 --> 00:12:34,440
just take an example we are working

286
00:12:34,440 --> 00:12:37,740
that's example is in the presentation uh

287
00:12:37,740 --> 00:12:40,019
in the coming slides uh there's a

288
00:12:40,019 --> 00:12:41,700
practical example that's a financial

289
00:12:41,700 --> 00:12:45,360
institute that I have had for uh as a

290
00:12:45,360 --> 00:12:46,860
white Tech hacker and that was an

291
00:12:46,860 --> 00:12:48,839
assignment and That is a global product

292
00:12:48,839 --> 00:12:51,300
that we still use in the market but that

293
00:12:51,300 --> 00:12:54,240
is best so the take an example that uh

294
00:12:54,240 --> 00:12:57,060
we are the we are insurance company and

295
00:12:57,060 --> 00:12:59,220
we have a Target to meet we have a leads

296
00:12:59,220 --> 00:13:01,920
data is everything nowadays as we all

297
00:13:01,920 --> 00:13:04,920
know the data is everything you have the

298
00:13:04,920 --> 00:13:06,959
data you are winning in the market you

299
00:13:06,959 --> 00:13:08,160
don't have the data you are not winning

300
00:13:08,160 --> 00:13:10,019
in the market so everyone is after the

301
00:13:10,019 --> 00:13:13,260
data data from the original Source a

302
00:13:13,260 --> 00:13:15,600
passive active anywhere we find that it

303
00:13:15,600 --> 00:13:19,500
does so what if I can take out all the

304
00:13:19,500 --> 00:13:22,920
customers of your profile and I would

305
00:13:22,920 --> 00:13:26,100
like to go with them with my leads and

306
00:13:26,100 --> 00:13:28,200
we are working in the same capacity in

307
00:13:28,200 --> 00:13:30,300
the same company in the same environment

308
00:13:30,300 --> 00:13:33,420
but what if I can just grab your all the

309
00:13:33,420 --> 00:13:36,420
profiles and the clients from Yo and I'm

310
00:13:36,420 --> 00:13:38,880
not authorized to do that for that I

311
00:13:38,880 --> 00:13:40,560
have to bypass the system for a business

312
00:13:40,560 --> 00:13:42,779
logic flaw or that kind of vulnerability

313
00:13:42,779 --> 00:13:46,500
or Idol indirect object reference we can

314
00:13:46,500 --> 00:13:49,440
fetch from the web application so we can

315
00:13:49,440 --> 00:13:51,000
see the disasters

316
00:13:51,000 --> 00:13:53,880
okay common vulnerabilities are the

317
00:13:53,880 --> 00:13:57,060
misconception or the problems in the BLS

318
00:13:57,060 --> 00:13:58,860
business logic law that's a shortfall

319
00:13:58,860 --> 00:14:02,279
for that what are we missing

320
00:14:02,279 --> 00:14:06,240
basically we trust the client side we

321
00:14:06,240 --> 00:14:08,519
trust the client that they are not going

322
00:14:08,519 --> 00:14:12,540
to do anything wrong or any uh they will

323
00:14:12,540 --> 00:14:14,639
follow every step that we have taught

324
00:14:14,639 --> 00:14:17,180
them and we have asked them for that

325
00:14:17,180 --> 00:14:20,399
user won't always Supply mandatory

326
00:14:20,399 --> 00:14:23,399
import just keep that in mind and do

327
00:14:23,399 --> 00:14:25,019
whatever you want to do with your input

328
00:14:25,019 --> 00:14:27,060
validation to secure it because we are

329
00:14:27,060 --> 00:14:29,339
thinking that user is going to provide

330
00:14:29,339 --> 00:14:33,779
me uh email ID we can not depend on the

331
00:14:33,779 --> 00:14:35,760
user that they will provide an email ID

332
00:14:35,760 --> 00:14:38,639
in the email box for example if they can

333
00:14:38,639 --> 00:14:41,459
bypass that and from the front end the

334
00:14:41,459 --> 00:14:43,980
the front end protection from the client

335
00:14:43,980 --> 00:14:46,199
here we can easily bypass it with the

336
00:14:46,199 --> 00:14:47,940
birth suit and all the other things that

337
00:14:47,940 --> 00:14:50,399
we are using but on the server end we

338
00:14:50,399 --> 00:14:53,100
have to check it if either this is the

339
00:14:53,100 --> 00:14:54,899
same request that I am requesting or

340
00:14:54,899 --> 00:14:56,760
they are passing some other data in that

341
00:14:56,760 --> 00:14:58,860
if I am asking you for the mobile

342
00:14:58,860 --> 00:15:01,680
application uh sorry mobile number so

343
00:15:01,680 --> 00:15:03,540
are you putting that mobile number in

344
00:15:03,540 --> 00:15:07,040
that field specifically or you are just

345
00:15:07,040 --> 00:15:10,680
manipulating my data so we trust the

346
00:15:10,680 --> 00:15:13,560
user so don't trust your user just do

347
00:15:13,560 --> 00:15:16,740
your protection uh first in the client

348
00:15:16,740 --> 00:15:18,240
set controls

349
00:15:18,240 --> 00:15:21,899
um if we talk about back in 2013 and 14

350
00:15:21,899 --> 00:15:25,740
the client side controls were very

351
00:15:25,740 --> 00:15:29,220
easily bypassed now it is also bypassed

352
00:15:29,220 --> 00:15:31,620
very easily whatever you have put the

353
00:15:31,620 --> 00:15:33,420
protection on the front end we can just

354
00:15:33,420 --> 00:15:36,240
bypass it from the intercept and we can

355
00:15:36,240 --> 00:15:38,759
pass our own data but it is mandatory

356
00:15:38,759 --> 00:15:40,500
that it has to be checked on the server

357
00:15:40,500 --> 00:15:43,019
side before leaving your system or or

358
00:15:43,019 --> 00:15:46,019
arriving at the server so you can secure

359
00:15:46,019 --> 00:15:49,680
it properly so user won't always follow

360
00:15:49,680 --> 00:15:52,259
the intended sequence what does that

361
00:15:52,259 --> 00:15:55,519
mean user is not following the sequence

362
00:15:55,519 --> 00:15:59,100
if you have said that a can follow the

363
00:15:59,100 --> 00:16:01,320
ABC and if they are not following the

364
00:16:01,320 --> 00:16:03,120
ABC and they are just manipulating with

365
00:16:03,120 --> 00:16:07,320
A and C then this is your control this

366
00:16:07,320 --> 00:16:10,440
is your call to check user

367
00:16:10,440 --> 00:16:13,740
identification check user at every step

368
00:16:13,740 --> 00:16:16,380
of the web application so these are the

369
00:16:16,380 --> 00:16:18,779
few things that cause the vulnerability

370
00:16:18,779 --> 00:16:21,360
in the business logic flaws we can talk

371
00:16:21,360 --> 00:16:24,420
about Okay so

372
00:16:24,420 --> 00:16:27,959
talking about my first application and

373
00:16:27,959 --> 00:16:30,600
talking about the Practical thing that I

374
00:16:30,600 --> 00:16:34,320
did for a bank back in my country that

375
00:16:34,320 --> 00:16:36,779
we were testing for vulnerability and

376
00:16:36,779 --> 00:16:39,300
accidentally I found a vulnerability in

377
00:16:39,300 --> 00:16:41,160
an Enterprise solution

378
00:16:41,160 --> 00:16:43,740
so there is a CV published and it's

379
00:16:43,740 --> 00:16:47,040
patch and it's all good to go so this

380
00:16:47,040 --> 00:16:50,060
application this is a financial services

381
00:16:50,060 --> 00:16:53,399
application uh designed by the IBM

382
00:16:53,399 --> 00:16:56,820
Oracle uh and the vulnerability in this

383
00:16:56,820 --> 00:16:59,100
application is that there are two users

384
00:16:59,100 --> 00:17:02,100
one is a low privileged user and second

385
00:17:02,100 --> 00:17:05,099
one is a high privilege user one user is

386
00:17:05,099 --> 00:17:07,740
the reporting manager and the second

387
00:17:07,740 --> 00:17:11,339
user was the admin so what did I do

388
00:17:11,339 --> 00:17:14,819
I did nothing especially so I just

389
00:17:14,819 --> 00:17:17,819
record every request and response from

390
00:17:17,819 --> 00:17:20,520
the server to the client this is a good

391
00:17:20,520 --> 00:17:22,679
habit if you are doing the web

392
00:17:22,679 --> 00:17:24,359
application testing or the bug Bounty

393
00:17:24,359 --> 00:17:27,720
ending just save every request and

394
00:17:27,720 --> 00:17:31,080
response in the notepad or anything you

395
00:17:31,080 --> 00:17:33,900
like to be very specifically using that

396
00:17:33,900 --> 00:17:36,000
again in the web application so what I

397
00:17:36,000 --> 00:17:38,520
did I just record every request in the

398
00:17:38,520 --> 00:17:41,039
response in the web application that is

399
00:17:41,039 --> 00:17:45,299
coming and going so after some time what

400
00:17:45,299 --> 00:17:49,200
I did I just see that admin can see all

401
00:17:49,200 --> 00:17:51,299
the logs and all the reports in the

402
00:17:51,299 --> 00:17:54,299
system but a reporting person the

403
00:17:54,299 --> 00:17:56,880
reporting manager only sees a specific

404
00:17:56,880 --> 00:18:00,299
project so what we have to do we have to

405
00:18:00,299 --> 00:18:02,880
just manipulate the things and see if a

406
00:18:02,880 --> 00:18:06,360
simple low privilege user can access and

407
00:18:06,360 --> 00:18:09,360
see the admin uh reporting features and

408
00:18:09,360 --> 00:18:10,919
all the other things and the logs as

409
00:18:10,919 --> 00:18:13,860
well so for the sake of the presentation

410
00:18:13,860 --> 00:18:16,919
example I have taken and I have masked

411
00:18:16,919 --> 00:18:21,299
the data everything this is the screen

412
00:18:21,299 --> 00:18:23,160
from the left hand side and the right

413
00:18:23,160 --> 00:18:27,980
hand side the user and the uh he was a

414
00:18:27,980 --> 00:18:31,620
engineer he is with the low Privileges

415
00:18:31,620 --> 00:18:35,160
and I just take these uh requests and

416
00:18:35,160 --> 00:18:37,620
response from the admin save it to my

417
00:18:37,620 --> 00:18:40,380
notepads log out that request log in

418
00:18:40,380 --> 00:18:42,299
with the reporting that was the low

419
00:18:42,299 --> 00:18:45,059
privilege user and what I just did I

420
00:18:45,059 --> 00:18:46,980
just copy and paste back and the

421
00:18:46,980 --> 00:18:49,500
repeater all the requests that I saved

422
00:18:49,500 --> 00:18:52,620
from the admin and boom what can I see

423
00:18:52,620 --> 00:18:55,500
over here I can see every log and

424
00:18:55,500 --> 00:18:58,260
everything on the system that admin can

425
00:18:58,260 --> 00:19:00,480
see without a trace that I have login

426
00:19:00,480 --> 00:19:02,940
into the system so this is a very

427
00:19:02,940 --> 00:19:04,919
critical vulnerability at that time in

428
00:19:04,919 --> 00:19:07,740
2019 because it was a fraud management

429
00:19:07,740 --> 00:19:10,500
system that they were using and they

430
00:19:10,500 --> 00:19:13,860
were going to deploy so what we have to

431
00:19:13,860 --> 00:19:16,919
think about that don't miss any requests

432
00:19:16,919 --> 00:19:20,220
just save and repeat after and after

433
00:19:20,220 --> 00:19:23,460
every time you don't know which request

434
00:19:23,460 --> 00:19:26,580
is gonna hit you don't know which

435
00:19:26,580 --> 00:19:28,799
session which page is missing the

436
00:19:28,799 --> 00:19:31,320
session ID validation or the user

437
00:19:31,320 --> 00:19:33,419
identification the control and the view

438
00:19:33,419 --> 00:19:35,880
view you can display all the things if

439
00:19:35,880 --> 00:19:38,340
the controller is not intact with the

440
00:19:38,340 --> 00:19:40,200
user identification or the session

441
00:19:40,200 --> 00:19:42,960
handling if a single control in your web

442
00:19:42,960 --> 00:19:46,260
application your application gonna leave

443
00:19:46,260 --> 00:19:48,299
everything in the hackers or the

444
00:19:48,299 --> 00:19:52,080
malicious actor in their hand so now if

445
00:19:52,080 --> 00:19:55,020
we talk about the second application and

446
00:19:55,020 --> 00:19:58,919
these all are my practical uh doings and

447
00:19:58,919 --> 00:20:00,780
I've been working with the banks and

448
00:20:00,780 --> 00:20:03,780
industries so this is a mobile

449
00:20:03,780 --> 00:20:05,000
application

450
00:20:05,000 --> 00:20:09,179
launched in a bank a newly launched

451
00:20:09,179 --> 00:20:11,460
application we have to bypass it somehow

452
00:20:11,460 --> 00:20:13,799
right we have to test it dynamically we

453
00:20:13,799 --> 00:20:16,860
can use we have you the mob SL we have

454
00:20:16,860 --> 00:20:18,960
used the other tools the Freedia and all

455
00:20:18,960 --> 00:20:19,919
the other things for the mobile

456
00:20:19,919 --> 00:20:24,120
application but manual assessment always

457
00:20:24,120 --> 00:20:27,600
when that's my call so what I did what

458
00:20:27,600 --> 00:20:31,020
what we were doing we want to bypass the

459
00:20:31,020 --> 00:20:33,659
flow so bear with me and just follow the

460
00:20:33,659 --> 00:20:35,340
step one by one from the left to right

461
00:20:35,340 --> 00:20:37,679
so first of all we have a username and

462
00:20:37,679 --> 00:20:39,299
password field every application that we

463
00:20:39,299 --> 00:20:42,659
have that we put the right legit

464
00:20:42,659 --> 00:20:44,700
username and password the credentials so

465
00:20:44,700 --> 00:20:46,980
it can login into the mobile application

466
00:20:46,980 --> 00:20:50,039
now it say on the secondary screen it

467
00:20:50,039 --> 00:20:53,460
presents me with a passport the OTP so

468
00:20:53,460 --> 00:20:55,380
OTP will be sended to your mobile phone

469
00:20:55,380 --> 00:20:59,580
and we can put that and we use as 2fa uh

470
00:20:59,580 --> 00:21:02,400
we always do so now what happened

471
00:21:02,400 --> 00:21:05,700
for the first time I did the legend

472
00:21:05,700 --> 00:21:08,460
username and password legit passcode and

473
00:21:08,460 --> 00:21:10,440
I checked the application flow and the

474
00:21:10,440 --> 00:21:12,480
behavior of the application that how it

475
00:21:12,480 --> 00:21:14,760
is responding on my request so what

476
00:21:14,760 --> 00:21:16,980
happens it's perfectly fine if you see

477
00:21:16,980 --> 00:21:19,860
next time what I did I use the username

478
00:21:19,860 --> 00:21:22,919
and password and then I just put the

479
00:21:22,919 --> 00:21:24,120
wrong

480
00:21:24,120 --> 00:21:27,480
OTP uh original OTP was on my mobile but

481
00:21:27,480 --> 00:21:30,600
I put the wrong OTB what happens it says

482
00:21:30,600 --> 00:21:33,480
invalid passport and it's redirected me

483
00:21:33,480 --> 00:21:36,299
to the user screen once again

484
00:21:36,299 --> 00:21:38,880
so the flow was I use the username and

485
00:21:38,880 --> 00:21:41,039
password I put the wrong password it

486
00:21:41,039 --> 00:21:43,919
redirects me to the login screen once

487
00:21:43,919 --> 00:21:47,580
again that the you the OTP is not valid

488
00:21:47,580 --> 00:21:51,179
I did nothing seriously I did nothing I

489
00:21:51,179 --> 00:21:53,220
didn't open my website in this case as

490
00:21:53,220 --> 00:21:56,820
well why I click on the login again and

491
00:21:56,820 --> 00:22:00,059
it just bypass the system and it showed

492
00:22:00,059 --> 00:22:03,600
me my banking application front end

493
00:22:03,600 --> 00:22:07,020
I was also shocked because I have not

494
00:22:07,020 --> 00:22:09,179
touched the burp suit yet and I just put

495
00:22:09,179 --> 00:22:12,000
the username and password wrong OTP and

496
00:22:12,000 --> 00:22:14,460
it just redirected me to the login I

497
00:22:14,460 --> 00:22:16,679
click login once again and it also

498
00:22:16,679 --> 00:22:18,659
bypass so what was the business logic

499
00:22:18,659 --> 00:22:20,580
flow over here that business logic is

500
00:22:20,580 --> 00:22:22,799
that the application is not handling the

501
00:22:22,799 --> 00:22:26,159
error for twice or Thrice time it just

502
00:22:26,159 --> 00:22:30,659
checked the error that it exists and it

503
00:22:30,659 --> 00:22:33,600
bypassed for the next second time so

504
00:22:33,600 --> 00:22:36,240
this was the logic that a developer

505
00:22:36,240 --> 00:22:40,260
somehow quoted right in the code that

506
00:22:40,260 --> 00:22:42,240
just checked for the one time not the

507
00:22:42,240 --> 00:22:44,700
twice with the Thrice so we have to be

508
00:22:44,700 --> 00:22:46,760
very uh

509
00:22:46,760 --> 00:22:49,860
observant about the applications not

510
00:22:49,860 --> 00:22:51,720
always the bird suit or these scanner is

511
00:22:51,720 --> 00:22:53,640
going to help you you just have to trick

512
00:22:53,640 --> 00:22:55,919
your mind and you have to just go with

513
00:22:55,919 --> 00:22:58,080
the flow and try to break the flow as

514
00:22:58,080 --> 00:23:00,299
well in the application just try

515
00:23:00,299 --> 00:23:02,820
everything as you see in the application

516
00:23:02,820 --> 00:23:05,820
it's not all about injections it's not

517
00:23:05,820 --> 00:23:09,299
all about the Desolation nowadays the

518
00:23:09,299 --> 00:23:10,799
exercise and all the other things

519
00:23:10,799 --> 00:23:13,919
examinated injection it's all about the

520
00:23:13,919 --> 00:23:17,340
business Logics nowadays and for this uh

521
00:23:17,340 --> 00:23:20,520
there was the there was a person uh I'm

522
00:23:20,520 --> 00:23:22,860
not sure about his name he bypassed the

523
00:23:22,860 --> 00:23:23,820
Instagram

524
00:23:23,820 --> 00:23:27,720
OTP and for as a bug bounty hunting and

525
00:23:27,720 --> 00:23:31,320
Instagram paid him 20 000 US dollars for

526
00:23:31,320 --> 00:23:33,419
that specific single vulnerability

527
00:23:33,419 --> 00:23:36,600
because he was able to bypass the

528
00:23:36,600 --> 00:23:38,039
Instagram

529
00:23:38,039 --> 00:23:41,820
OTP so the business logic flaws are very

530
00:23:41,820 --> 00:23:43,740
important in the application and for the

531
00:23:43,740 --> 00:23:45,779
financial institutions banking in

532
00:23:45,779 --> 00:23:48,600
Industry I'm talking about the data

533
00:23:48,600 --> 00:23:53,159
where your uh money is uh on the line

534
00:23:53,159 --> 00:23:55,860
and you can just not protect it so

535
00:23:55,860 --> 00:23:58,200
please be patient and

536
00:23:58,200 --> 00:23:59,820
try everything you see in the

537
00:23:59,820 --> 00:24:01,440
application so this was the second

538
00:24:01,440 --> 00:24:03,480
application I encountered the third

539
00:24:03,480 --> 00:24:06,000
application was also a banking

540
00:24:06,000 --> 00:24:08,039
application and that required the

541
00:24:08,039 --> 00:24:11,100
pursuit so now the third application

542
00:24:11,100 --> 00:24:13,500
there was another bank we tried to

543
00:24:13,500 --> 00:24:17,460
bypass mostly as a whitehead hacker my

544
00:24:17,460 --> 00:24:19,500
personal goal and my personal job is to

545
00:24:19,500 --> 00:24:22,559
bypass the system no matter how no

546
00:24:22,559 --> 00:24:24,360
matter what uh because I've been doing

547
00:24:24,360 --> 00:24:25,919
the red theming assignments as well so

548
00:24:25,919 --> 00:24:28,620
my mind plays like that that whatever

549
00:24:28,620 --> 00:24:30,840
you have to do do it but just bypasses

550
00:24:30,840 --> 00:24:32,760
itself don't bring it down because we

551
00:24:32,760 --> 00:24:35,460
are testing in the uat environment most

552
00:24:35,460 --> 00:24:38,340
of the time and we all do that right uh

553
00:24:38,340 --> 00:24:40,080
all the white detectors over here we do

554
00:24:40,080 --> 00:24:42,539
the assignment in the uad mostly if the

555
00:24:42,539 --> 00:24:44,039
client insists so we can go for the

556
00:24:44,039 --> 00:24:46,020
production but not necessarily we can

557
00:24:46,020 --> 00:24:48,840
work on the uad so this was on the uat

558
00:24:48,840 --> 00:24:51,539
environment as well and what I did I use

559
00:24:51,539 --> 00:24:54,299
a burp suit exactly the same thing I did

560
00:24:54,299 --> 00:24:56,520
for the previous Bank uh just use

561
00:24:56,520 --> 00:24:59,220
username and password and I just for the

562
00:24:59,220 --> 00:25:01,860
OTP proper OTP Legend OTP and I just

563
00:25:01,860 --> 00:25:04,020
record every sequence of the user

564
00:25:04,020 --> 00:25:06,120
interaction with the server every

565
00:25:06,120 --> 00:25:08,760
question every response I have noted

566
00:25:08,760 --> 00:25:12,059
there and I've saved in a file in

567
00:25:12,059 --> 00:25:14,159
notepad plus plus it's about 30 plus

568
00:25:14,159 --> 00:25:17,580
tabs I request I I save everything to

569
00:25:17,580 --> 00:25:18,720
see what's happening in the web

570
00:25:18,720 --> 00:25:20,820
application which request is going and

571
00:25:20,820 --> 00:25:23,480
what data is here even I save the dot

572
00:25:23,480 --> 00:25:26,820
json.css file requests and response as

573
00:25:26,820 --> 00:25:29,279
well I'm not sure which file will will

574
00:25:29,279 --> 00:25:31,860
contain what and then I do my analysis

575
00:25:31,860 --> 00:25:34,620
on that so in this application uh what I

576
00:25:34,620 --> 00:25:36,419
did I use the legit username and

577
00:25:36,419 --> 00:25:38,100
password then the password was sent on

578
00:25:38,100 --> 00:25:41,520
my email I put that as well and I just

579
00:25:41,520 --> 00:25:43,980
log into the application say I have

580
00:25:43,980 --> 00:25:46,080
recorded every request in response from

581
00:25:46,080 --> 00:25:49,140
my application and then what I did I

582
00:25:49,140 --> 00:25:52,740
just to repeat it after few repetitions

583
00:25:52,740 --> 00:25:56,159
it it seems that I can bypass the OTP

584
00:25:56,159 --> 00:26:00,059
how very simple uh there was a request

585
00:26:00,059 --> 00:26:03,360
when I just post the OTP and click on

586
00:26:03,360 --> 00:26:05,700
the login button or the continue button

587
00:26:05,700 --> 00:26:07,799
so there's a request generated which

588
00:26:07,799 --> 00:26:11,820
verifies the or valid OTP so I just

589
00:26:11,820 --> 00:26:14,039
record that one and there's a response

590
00:26:14,039 --> 00:26:16,380
from the server as well there was no

591
00:26:16,380 --> 00:26:18,840
runtime response there was a static

592
00:26:18,840 --> 00:26:21,900
response every time there's a valid OTP

593
00:26:21,900 --> 00:26:24,779
a server respond a specific line of

594
00:26:24,779 --> 00:26:27,179
codes to you so what I did I just copy

595
00:26:27,179 --> 00:26:30,360
and pasted somewhere else now I provide

596
00:26:30,360 --> 00:26:33,059
the legit username and password and then

597
00:26:33,059 --> 00:26:37,320
I tried with the wrong OTP first time it

598
00:26:37,320 --> 00:26:39,299
just says that wrong OTB if you can see

599
00:26:39,299 --> 00:26:40,679
on the

600
00:26:40,679 --> 00:26:42,779
uh

601
00:26:42,779 --> 00:26:46,620
screenshot right top so it says there's

602
00:26:46,620 --> 00:26:49,980
an OTP then I what I did in the next

603
00:26:49,980 --> 00:26:53,039
page that diagram the picture as you can

604
00:26:53,039 --> 00:26:57,000
see it's redirecting me to the home.aspx

605
00:26:57,000 --> 00:26:58,980
so there is a

606
00:26:58,980 --> 00:27:01,980
OTP and it bypass like this the next

607
00:27:01,980 --> 00:27:03,840
screen the next slide will demonstrate

608
00:27:03,840 --> 00:27:06,720
it much better way so now the second

609
00:27:06,720 --> 00:27:09,659
scenario that I did for the bypassing

610
00:27:09,659 --> 00:27:11,220
the OTP I put the username and password

611
00:27:11,220 --> 00:27:13,559
wrong so now if you can see in the

612
00:27:13,559 --> 00:27:16,020
middle screenshot that is down the

613
00:27:16,020 --> 00:27:19,980
provided OTP is incorrect because I have

614
00:27:19,980 --> 00:27:23,220
provided the wrong OT then what I did I

615
00:27:23,220 --> 00:27:25,679
just bring that request and response

616
00:27:25,679 --> 00:27:28,320
from the server saved previously 15

617
00:27:28,320 --> 00:27:30,779
minutes ago and then just put that in

618
00:27:30,779 --> 00:27:34,320
the repeater or the verb and bypass the

619
00:27:34,320 --> 00:27:37,500
system with the flying colors so this is

620
00:27:37,500 --> 00:27:40,200
the application flow we are talking

621
00:27:40,200 --> 00:27:42,299
about these are the three applications I

622
00:27:42,299 --> 00:27:46,860
have encount entered the attacks most

623
00:27:46,860 --> 00:27:50,179
obvious attacks in the web applications

624
00:27:50,179 --> 00:27:52,580
mostly in the

625
00:27:52,580 --> 00:27:56,520
banking industry why because where I

626
00:27:56,520 --> 00:27:59,039
work most of the compliance are put into

627
00:27:59,039 --> 00:28:01,919
the uh web application and the mobile

628
00:28:01,919 --> 00:28:04,620
applications of the banks insurance and

629
00:28:04,620 --> 00:28:06,419
all other things so if you talk about

630
00:28:06,419 --> 00:28:09,299
the data Health Data Hospital data and

631
00:28:09,299 --> 00:28:10,799
all the other then there are most

632
00:28:10,799 --> 00:28:13,440
valuable data as well so we have to keep

633
00:28:13,440 --> 00:28:15,960
an eye if you are a new starter if you

634
00:28:15,960 --> 00:28:17,820
are intermediate or if you're a champion

635
00:28:17,820 --> 00:28:20,880
and if you're my senior we just have to

636
00:28:20,880 --> 00:28:22,679
look for the flaws and all the other

637
00:28:22,679 --> 00:28:25,740
things why and how my system can be

638
00:28:25,740 --> 00:28:28,440
bypassed and just try multiple things

639
00:28:28,440 --> 00:28:30,480
multiple things to just bypass your

640
00:28:30,480 --> 00:28:33,840
system with the sequence just focus on

641
00:28:33,840 --> 00:28:37,260
the sequence and then try to manipulate

642
00:28:37,260 --> 00:28:40,140
those requests so security design flaws

643
00:28:40,140 --> 00:28:43,919
why and how that all happened this is a

644
00:28:43,919 --> 00:28:45,840
image I have taken from the port sugar

645
00:28:45,840 --> 00:28:49,860
the developer of the bird suit so uh a

646
00:28:49,860 --> 00:28:51,899
simple thing that we have talked a lot

647
00:28:51,899 --> 00:28:55,260
in the previously that username one you

648
00:28:55,260 --> 00:28:57,000
attempt one attempt to an attempt three

649
00:28:57,000 --> 00:28:59,640
this is the exactly same scenario that I

650
00:28:59,640 --> 00:29:01,799
discussed on the mobile application uh

651
00:29:01,799 --> 00:29:04,080
in the previous slide that I try to put

652
00:29:04,080 --> 00:29:06,899
the username and password wrong OTP once

653
00:29:06,899 --> 00:29:09,720
second time it bypass the system this is

654
00:29:09,720 --> 00:29:12,360
the exact example of this screenshot and

655
00:29:12,360 --> 00:29:15,179
the uh one of it that I have discussed

656
00:29:15,179 --> 00:29:18,299
so where are we lacking we are lacking

657
00:29:18,299 --> 00:29:19,860
in multiple things we are lacking first

658
00:29:19,860 --> 00:29:22,200
of all in the coding practice so first

659
00:29:22,200 --> 00:29:24,299
of all if you're a developer or a

660
00:29:24,299 --> 00:29:26,760
security in this website you have to

661
00:29:26,760 --> 00:29:28,799
focus on the secure coding practices

662
00:29:28,799 --> 00:29:31,020
either you're a developer or no

663
00:29:31,020 --> 00:29:35,159
developer you just have to uh be able to

664
00:29:35,159 --> 00:29:37,679
read the code to catch the flow if

665
00:29:37,679 --> 00:29:39,779
you're not a hardcore developer that's

666
00:29:39,779 --> 00:29:42,659
not a problem you just need to read the

667
00:29:42,659 --> 00:29:45,419
code code and see if you can find a flow

668
00:29:45,419 --> 00:29:47,100
the exploit writers the exploit

669
00:29:47,100 --> 00:29:50,100
developers right here in this Arena uh

670
00:29:50,100 --> 00:29:52,200
this is a piece of cake for you you just

671
00:29:52,200 --> 00:29:54,899
see the code and you just find a

672
00:29:54,899 --> 00:29:57,360
vulnerability to bypass it but for the

673
00:29:57,360 --> 00:29:58,860
new starters and all the other people

674
00:29:58,860 --> 00:30:01,320
who are interested in this so go for the

675
00:30:01,320 --> 00:30:03,960
secure coding practices as well so this

676
00:30:03,960 --> 00:30:06,480
is all about design and Logics that how

677
00:30:06,480 --> 00:30:09,059
you design your application I'm not

678
00:30:09,059 --> 00:30:11,640
talking about a medium or small scale

679
00:30:11,640 --> 00:30:13,919
applications I'm talking about the large

680
00:30:13,919 --> 00:30:17,399
scale applications uh the enterprise we

681
00:30:17,399 --> 00:30:20,159
are we we had a talk about sap previous

682
00:30:20,159 --> 00:30:23,460
uh presentation so the sap system the

683
00:30:23,460 --> 00:30:25,380
Enterprise if you're designing your own

684
00:30:25,380 --> 00:30:30,059
Erp that will contain 50 modules and 100

685
00:30:30,059 --> 00:30:31,919
of developers are developing the same

686
00:30:31,919 --> 00:30:34,860
application but the core the architect

687
00:30:34,860 --> 00:30:38,520
should be in uh one team's hand because

688
00:30:38,520 --> 00:30:40,860
you have to secure the Enterprise and

689
00:30:40,860 --> 00:30:43,039
all the other things so

690
00:30:43,039 --> 00:30:46,380
methodologies to test your application I

691
00:30:46,380 --> 00:30:48,299
previously said that there are no

692
00:30:48,299 --> 00:30:51,419
scanners static or dynamic you can scan

693
00:30:51,419 --> 00:30:54,720
that uh on the web application but there

694
00:30:54,720 --> 00:30:57,960
are few alternates that you can use so

695
00:30:57,960 --> 00:31:01,620
uh with the burp suit or others as well

696
00:31:01,620 --> 00:31:04,799
to automate your steps right we have

697
00:31:04,799 --> 00:31:07,200
seen the automated scripts as well if

698
00:31:07,200 --> 00:31:09,720
you want to automate a task so you can

699
00:31:09,720 --> 00:31:11,700
just strip it down and it's automated

700
00:31:11,700 --> 00:31:14,820
it's not basically AI it's automated you

701
00:31:14,820 --> 00:31:17,760
you do all the work behind that that ABC

702
00:31:17,760 --> 00:31:20,940
and blah blah so there is a plugin if

703
00:31:20,940 --> 00:31:23,460
you want to use in the burp suit uh

704
00:31:23,460 --> 00:31:26,159
there's a plugin named authmetrics what

705
00:31:26,159 --> 00:31:28,440
it does it do it just repeat the

706
00:31:28,440 --> 00:31:30,179
workflows with different credentials

707
00:31:30,179 --> 00:31:32,580
with different roles different users so

708
00:31:32,580 --> 00:31:35,120
what you do you just record a sequence

709
00:31:35,120 --> 00:31:39,120
uh the webpage login dashboard reports

710
00:31:39,120 --> 00:31:41,820
this is a sequence and now you will give

711
00:31:41,820 --> 00:31:44,460
it different users different credentials

712
00:31:44,460 --> 00:31:47,940
different uh privileged users one user

713
00:31:47,940 --> 00:31:51,360
cannot see other user data and you can

714
00:31:51,360 --> 00:31:55,080
just use this application recently

715
00:31:55,080 --> 00:31:58,559
recently uh I'm on a travel uh to a lot

716
00:31:58,559 --> 00:32:01,260
of countries for a private and official

717
00:32:01,260 --> 00:32:04,260
work so I doubted another vulnerability

718
00:32:04,260 --> 00:32:08,700
because nowadays uh we all previously in

719
00:32:08,700 --> 00:32:12,360
2020 and 21 mostly we do the PCR test

720
00:32:12,360 --> 00:32:15,659
for the covet right so there was a lab

721
00:32:15,659 --> 00:32:18,779
and I got my

722
00:32:18,779 --> 00:32:22,740
PCR test and they sent me a report on

723
00:32:22,740 --> 00:32:25,320
the email right so I just opened that

724
00:32:25,320 --> 00:32:28,799
and that was just calling the API of the

725
00:32:28,799 --> 00:32:31,500
lab then and that is a very renowned uh

726
00:32:31,500 --> 00:32:34,080
hospital and a lab in that country so

727
00:32:34,080 --> 00:32:36,600
what I did I just tried to manipulate

728
00:32:36,600 --> 00:32:39,480
that request and see if I can see others

729
00:32:39,480 --> 00:32:43,679
data and fortunately happily as a

730
00:32:43,679 --> 00:32:46,220
penetration tester I

731
00:32:46,220 --> 00:32:49,260
uh get my hands on all the information

732
00:32:49,260 --> 00:32:52,860
of that specific lab and hospital

733
00:32:52,860 --> 00:32:55,580
because I can see all the application

734
00:32:55,580 --> 00:32:58,679
all the reports of the patients all the

735
00:32:58,679 --> 00:33:03,299
data user by just removing a single tag

736
00:33:03,299 --> 00:33:06,539
in that URL or you can see it in a

737
00:33:06,539 --> 00:33:09,960
request so this is really harmful if you

738
00:33:09,960 --> 00:33:12,419
are talking about the health and your

739
00:33:12,419 --> 00:33:15,000
financial data so this is a recent

740
00:33:15,000 --> 00:33:18,480
discovery that I have done with my uh

741
00:33:18,480 --> 00:33:22,080
lab or Hospital you can say and I try to

742
00:33:22,080 --> 00:33:24,299
stay in a hotel as well and I'm trying

743
00:33:24,299 --> 00:33:27,059
to bypass that maybe next time I'm going

744
00:33:27,059 --> 00:33:30,539
to present that as well so this is the

745
00:33:30,539 --> 00:33:32,460
methodology if you want to test your web

746
00:33:32,460 --> 00:33:34,559
application just use the auth metrics

747
00:33:34,559 --> 00:33:36,299
with the burp suit and check all the

748
00:33:36,299 --> 00:33:39,600
flow flow of your application that it is

749
00:33:39,600 --> 00:33:41,640
following the sequence or it's not

750
00:33:41,640 --> 00:33:43,380
following the sequence so that's in your

751
00:33:43,380 --> 00:33:46,799
hand so what to look for a and the

752
00:33:46,799 --> 00:33:48,659
source code what what you what you are

753
00:33:48,659 --> 00:33:51,899
planning so just design full

754
00:33:51,899 --> 00:33:54,659
understanding of your application divide

755
00:33:54,659 --> 00:33:57,899
your application and model it and one

756
00:33:57,899 --> 00:33:59,760
more thing please uh be careful with the

757
00:33:59,760 --> 00:34:02,460
threat models always always develop a

758
00:34:02,460 --> 00:34:03,960
threat model for your application no

759
00:34:03,960 --> 00:34:05,940
matter how many pages are there no money

760
00:34:05,940 --> 00:34:09,239
no matter how much critical or not

761
00:34:09,239 --> 00:34:10,859
critical that application is always

762
00:34:10,859 --> 00:34:14,280
always make a threat model of your

763
00:34:14,280 --> 00:34:16,440
application that will help you a lot in

764
00:34:16,440 --> 00:34:19,980
the coming times so analysis uh analyze

765
00:34:19,980 --> 00:34:22,560
every control that you are giving to the

766
00:34:22,560 --> 00:34:25,440
user user ABC nowadays we have the

767
00:34:25,440 --> 00:34:28,320
application we go to the user roles and

768
00:34:28,320 --> 00:34:31,800
we just tag the pages a b c d e f just

769
00:34:31,800 --> 00:34:34,260
try to see that if that can be bypassed

770
00:34:34,260 --> 00:34:36,540
or if you are a developer or a security

771
00:34:36,540 --> 00:34:38,879
person just try to check your own

772
00:34:38,879 --> 00:34:41,219
application by your own hands so you are

773
00:34:41,219 --> 00:34:43,199
much sure that this is a secure

774
00:34:43,199 --> 00:34:46,859
application now what you have to ask if

775
00:34:46,859 --> 00:34:49,379
you are a business uh operator if you

776
00:34:49,379 --> 00:34:51,418
are a account manager and if you are a

777
00:34:51,418 --> 00:34:53,820
project manager something like that that

778
00:34:53,820 --> 00:34:56,280
just talk about the data

779
00:34:56,280 --> 00:35:00,240
from whom where and I am seeing the data

780
00:35:00,240 --> 00:35:03,060
where to where and from where where the

781
00:35:03,060 --> 00:35:05,339
data is coming to the way data that is

782
00:35:05,339 --> 00:35:08,579
coming are going and from I am occupying

783
00:35:08,579 --> 00:35:11,700
all the things why what cause and what

784
00:35:11,700 --> 00:35:14,099
purpose you need the data why what

785
00:35:14,099 --> 00:35:16,380
purpose and how much time you need it so

786
00:35:16,380 --> 00:35:19,079
just build a timeline we call it a play

787
00:35:19,079 --> 00:35:21,720
box that uh we use in the compromise

788
00:35:21,720 --> 00:35:24,300
assessment thing that uh please create

789
00:35:24,300 --> 00:35:26,099
your playbooks in the web application

790
00:35:26,099 --> 00:35:28,740
point of view as well then how often you

791
00:35:28,740 --> 00:35:31,500
just provide the data how you are going

792
00:35:31,500 --> 00:35:33,180
to provide the data if you're using the

793
00:35:33,180 --> 00:35:36,599
API secure your EPS because nowadays

794
00:35:36,599 --> 00:35:38,520
everyone is very interested in the API

795
00:35:38,520 --> 00:35:40,560
but they are not securing it I'm telling

796
00:35:40,560 --> 00:35:42,060
you this thing that most of the

797
00:35:42,060 --> 00:35:43,800
developers most of the people know how

798
00:35:43,800 --> 00:35:46,380
to developers API how to write an API

799
00:35:46,380 --> 00:35:48,359
how to fetch the data but they are not

800
00:35:48,359 --> 00:35:52,560
protecting it as much as they have to so

801
00:35:52,560 --> 00:35:54,660
let's bring to the conclusion of my

802
00:35:54,660 --> 00:35:56,220
presentation thank you very much

803
00:35:56,220 --> 00:35:59,220
everyone for your patience and I am

804
00:35:59,220 --> 00:36:01,200
really sorry that I have to present that

805
00:36:01,200 --> 00:36:03,720
their own state but due to some problem

806
00:36:03,720 --> 00:36:06,240
I am not able to join you guys

807
00:36:06,240 --> 00:36:08,339
personally physically so thank you very

808
00:36:08,339 --> 00:36:10,940
much for your time

