1
00:00:00,240 --> 00:00:03,240
foreign

2
00:00:05,060 --> 00:00:07,140
happy to be here

3
00:00:07,140 --> 00:00:09,900
so I'm going to talk to you about an

4
00:00:09,900 --> 00:00:11,700
attack campaign that is currently going

5
00:00:11,700 --> 00:00:13,920
on on a very different kind of cyber

6
00:00:13,920 --> 00:00:15,660
physical assets and that is actually

7
00:00:15,660 --> 00:00:18,539
buildings uh particularly about the

8
00:00:18,539 --> 00:00:21,660
first incident we have been involved in

9
00:00:21,660 --> 00:00:25,140
and how we unproned a building so back

10
00:00:25,140 --> 00:00:27,720
in November 21 I got a call from an

11
00:00:27,720 --> 00:00:30,720
electrician actually uh and he said hey

12
00:00:30,720 --> 00:00:33,059
we have a problem here we have a

13
00:00:33,059 --> 00:00:34,920
building that is hacked I mean what are

14
00:00:34,920 --> 00:00:36,120
you what do you mean with a building

15
00:00:36,120 --> 00:00:37,739
that is hacked is somebody controlling

16
00:00:37,739 --> 00:00:40,079
your license no we cannot control the

17
00:00:40,079 --> 00:00:42,120
buildings ourselves anymore we don't

18
00:00:42,120 --> 00:00:45,660
know how to recover right

19
00:00:45,660 --> 00:00:47,399
um and so that was like the initial

20
00:00:47,399 --> 00:00:49,620
situation it was a complete loss of the

21
00:00:49,620 --> 00:00:51,300
control of the building automation

22
00:00:51,300 --> 00:00:52,440
system

23
00:00:52,440 --> 00:00:54,840
what does that mean it means you have no

24
00:00:54,840 --> 00:00:58,980
operation of light you have no operation

25
00:00:58,980 --> 00:01:01,559
of heating and ventilation anymore in

26
00:01:01,559 --> 00:01:02,879
this case actually have been lucky

27
00:01:02,879 --> 00:01:04,920
because the heating was on an okay level

28
00:01:04,920 --> 00:01:07,080
they just couldn't change it anymore so

29
00:01:07,080 --> 00:01:09,900
that's a bit of a luck also no operation

30
00:01:09,900 --> 00:01:12,119
at shutters uh so they have been

31
00:01:12,119 --> 00:01:14,880
completely locked out of those systems

32
00:01:14,880 --> 00:01:16,560
what helped a little bit here is that

33
00:01:16,560 --> 00:01:18,360
this was a commercial building with a

34
00:01:18,360 --> 00:01:21,360
lot of offices in it and well it was in

35
00:01:21,360 --> 00:01:22,979
the middle of a pandemic right A lot of

36
00:01:22,979 --> 00:01:24,720
people are in home office so that helps

37
00:01:24,720 --> 00:01:26,759
a little bit but do you know who can not

38
00:01:26,759 --> 00:01:28,439
work from home office

39
00:01:28,439 --> 00:01:31,200
a dentist yeah so one of the rooms

40
00:01:31,200 --> 00:01:33,420
rented there was actually rented out to

41
00:01:33,420 --> 00:01:35,700
a dentist and the instruments from the

42
00:01:35,700 --> 00:01:39,479
dentist they actually rely on compressed

43
00:01:39,479 --> 00:01:41,939
air and this compressed air was also

44
00:01:41,939 --> 00:01:43,439
controlled with a building automation

45
00:01:43,439 --> 00:01:44,939
system so this is one like if the

46
00:01:44,939 --> 00:01:47,420
typical cases where there are

47
00:01:47,420 --> 00:01:49,680
dependencies that you wouldn't think of

48
00:01:49,680 --> 00:01:52,200
in the first place right same as we have

49
00:01:52,200 --> 00:01:54,960
in production facilities so that was the

50
00:01:54,960 --> 00:01:56,579
initial situation and that feels really

51
00:01:56,579 --> 00:01:58,320
really bad I gave a big office building

52
00:01:58,320 --> 00:02:00,180
actually a series of Office Buildings

53
00:02:00,180 --> 00:02:03,479
and you cannot control them anymore

54
00:02:03,479 --> 00:02:06,060
so what was the situation we have some

55
00:02:06,060 --> 00:02:09,000
good things the engineering the program

56
00:02:09,000 --> 00:02:11,700
of the billing automation system that

57
00:02:11,700 --> 00:02:13,739
was still available because this is not

58
00:02:13,739 --> 00:02:16,319
online this is like very typical yeah

59
00:02:16,319 --> 00:02:18,599
you can compare those systems a lot like

60
00:02:18,599 --> 00:02:21,060
you know of plcs like you have an

61
00:02:21,060 --> 00:02:23,520
engineering PC that has this used for

62
00:02:23,520 --> 00:02:25,020
programming that has the engineering

63
00:02:25,020 --> 00:02:27,300
program on it that is not part of the

64
00:02:27,300 --> 00:02:29,360
operational system so that was not

65
00:02:29,360 --> 00:02:32,040
effective that was the good part

66
00:02:32,040 --> 00:02:34,980
the bad part this particular building

67
00:02:34,980 --> 00:02:39,720
it had about 300 KNX components that

68
00:02:39,720 --> 00:02:42,360
together compromise or they could set up

69
00:02:42,360 --> 00:02:45,959
build a building automation system and

70
00:02:45,959 --> 00:02:49,760
about 75 of those component of Those

71
00:02:49,760 --> 00:02:53,099
sensors of those actuators

72
00:02:53,099 --> 00:02:55,920
they were not operational anymore yes

73
00:02:55,920 --> 00:02:59,280
they could not be used anymore

74
00:02:59,280 --> 00:03:02,040
the ugly

75
00:03:02,040 --> 00:03:04,379
um the electrician and the owner of the

76
00:03:04,379 --> 00:03:06,780
building they tried already to recover

77
00:03:06,780 --> 00:03:09,180
and they contacted also the vendors of

78
00:03:09,180 --> 00:03:11,940
the various KNX components

79
00:03:11,940 --> 00:03:14,640
and they all told them we cannot help

80
00:03:14,640 --> 00:03:16,379
you you have to replace your whole

81
00:03:16,379 --> 00:03:18,239
billing automation system you have to

82
00:03:18,239 --> 00:03:20,220
replace your several hundred components

83
00:03:20,220 --> 00:03:23,640
and that would cost you around 100

84
00:03:23,640 --> 00:03:24,599
000 dollars

85
00:03:24,599 --> 00:03:26,879
for this single instance

86
00:03:26,879 --> 00:03:30,239
um so that was the initial situation

87
00:03:30,239 --> 00:03:32,340
so I want to give you some background of

88
00:03:32,340 --> 00:03:34,080
this particular kind of building

89
00:03:34,080 --> 00:03:36,540
automation system that is used here and

90
00:03:36,540 --> 00:03:39,780
that is based on a standard called KNX

91
00:03:39,780 --> 00:03:41,040
it's one of the big standards for

92
00:03:41,040 --> 00:03:42,860
building automation systems

93
00:03:42,860 --> 00:03:46,319
it's used quite a lot both in commercial

94
00:03:46,319 --> 00:03:48,659
buildings but also like in private

95
00:03:48,659 --> 00:03:51,900
building private owned houses

96
00:03:51,900 --> 00:03:54,180
um it is a very decentralized system so

97
00:03:54,180 --> 00:03:56,099
you could think of that such a building

98
00:03:56,099 --> 00:03:58,200
automation system consists of a lot

99
00:03:58,200 --> 00:04:00,720
little computers this could be from the

100
00:04:00,720 --> 00:04:03,659
motion detectors light switch but also

101
00:04:03,659 --> 00:04:06,900
the actuators PLC like actuators all of

102
00:04:06,900 --> 00:04:08,940
them are parts of such a key and EC

103
00:04:08,940 --> 00:04:11,760
system but there's no Central master

104
00:04:11,760 --> 00:04:14,159
that can be attacked but all those

105
00:04:14,159 --> 00:04:18,560
components talk to each other

106
00:04:18,720 --> 00:04:20,699
um now all of that is program via

107
00:04:20,699 --> 00:04:22,740
engineering software called ETS that's

108
00:04:22,740 --> 00:04:25,320
the one on the engineering PC so very

109
00:04:25,320 --> 00:04:27,060
similar what you know from from other

110
00:04:27,060 --> 00:04:29,040
plcs

111
00:04:29,040 --> 00:04:30,720
um as well we will come back to that why

112
00:04:30,720 --> 00:04:32,040
this is important

113
00:04:32,040 --> 00:04:35,280
usually the normal bus is a local

114
00:04:35,280 --> 00:04:37,680
Twisted Pier bus that is running

115
00:04:37,680 --> 00:04:40,139
throughout the building and interconnect

116
00:04:40,139 --> 00:04:44,340
all of those components but what you can

117
00:04:44,340 --> 00:04:47,160
also do is you can add so-called IP

118
00:04:47,160 --> 00:04:49,979
gateways and such an IP Gateway allows

119
00:04:49,979 --> 00:04:50,880
you

120
00:04:50,880 --> 00:04:55,080
to stretch out this local bus for mainly

121
00:04:55,080 --> 00:04:57,600
for two reasons one of the reasons is

122
00:04:57,600 --> 00:04:59,699
that you can interconnect different

123
00:04:59,699 --> 00:05:01,620
building automation systems let's say

124
00:05:01,620 --> 00:05:03,120
you have a campus you have three

125
00:05:03,120 --> 00:05:05,520
buildings that stretch over a certain

126
00:05:05,520 --> 00:05:07,560
area you can interconnect them with your

127
00:05:07,560 --> 00:05:10,740
IP gateways for a longer distance but

128
00:05:10,740 --> 00:05:13,320
the main reason why such IP gateways are

129
00:05:13,320 --> 00:05:15,479
used in such systems is actually for

130
00:05:15,479 --> 00:05:18,479
remote maintenance it allows you to

131
00:05:18,479 --> 00:05:20,460
remotely connect from your engineering

132
00:05:20,460 --> 00:05:24,360
station at Home Revere IP network and

133
00:05:24,360 --> 00:05:26,820
that could potentially be the internet

134
00:05:26,820 --> 00:05:29,340
to a KNX bars and do the engineering

135
00:05:29,340 --> 00:05:31,100
there

136
00:05:31,100 --> 00:05:34,440
actually it's a quite easy protocol it's

137
00:05:34,440 --> 00:05:38,940
based on UDP report 3671 this is how you

138
00:05:38,940 --> 00:05:41,280
could connect it and like we hear it

139
00:05:41,280 --> 00:05:43,620
here very often it's insecure by default

140
00:05:43,620 --> 00:05:46,740
and it's insecure by Design in its base

141
00:05:46,740 --> 00:05:50,220
version that it is used normally

142
00:05:50,220 --> 00:05:54,000
so this is some Basics about KNX where

143
00:05:54,000 --> 00:05:55,620
is it actually used to have here a

144
00:05:55,620 --> 00:05:57,060
little picture about the global attack

145
00:05:57,060 --> 00:05:59,220
surface you can see that this is a kind

146
00:05:59,220 --> 00:06:01,380
of technology that is very focused as

147
00:06:01,380 --> 00:06:03,840
its strongest point in Europe but it

148
00:06:03,840 --> 00:06:06,180
actually stretches out all over the

149
00:06:06,180 --> 00:06:09,419
world you can also see there are some I

150
00:06:09,419 --> 00:06:12,300
actually internet accessible KNX

151
00:06:12,300 --> 00:06:16,199
installations here in Miami so what we

152
00:06:16,199 --> 00:06:18,539
see here on this picture is not the

153
00:06:18,539 --> 00:06:20,400
total number of clinics installation

154
00:06:20,400 --> 00:06:21,600
installations

155
00:06:21,600 --> 00:06:23,880
but it's a number of those installations

156
00:06:23,880 --> 00:06:27,180
that are directly accessible from the

157
00:06:27,180 --> 00:06:28,319
internet

158
00:06:28,319 --> 00:06:31,620
and that is part of the problem

159
00:06:31,620 --> 00:06:33,840
so how was it actually possible that

160
00:06:33,840 --> 00:06:36,479
somebody is blocking a operator the

161
00:06:36,479 --> 00:06:37,919
owner of a building

162
00:06:37,919 --> 00:06:39,720
from accessing its own building

163
00:06:39,720 --> 00:06:41,699
automation system and we have to know

164
00:06:41,699 --> 00:06:44,160
about one particular security feature

165
00:06:44,160 --> 00:06:46,860
that is part of KNX and that is the

166
00:06:46,860 --> 00:06:49,380
so-called BCU key and again you can

167
00:06:49,380 --> 00:06:51,660
compare it a lot to what you see with

168
00:06:51,660 --> 00:06:54,900
many plcs you have a programming

169
00:06:54,900 --> 00:06:58,500
password and the PSU key is very similar

170
00:06:58,500 --> 00:07:00,840
so you don't need this PCU key for

171
00:07:00,840 --> 00:07:03,300
normal operation but you need this PCU

172
00:07:03,300 --> 00:07:06,300
key or you can use the VCU key to

173
00:07:06,300 --> 00:07:08,340
protect the different components from

174
00:07:08,340 --> 00:07:10,500
being reprogrammed

175
00:07:10,500 --> 00:07:12,539
and actually it's quite a short key it's

176
00:07:12,539 --> 00:07:15,900
a fixed length key it's four bytes uh in

177
00:07:15,900 --> 00:07:18,600
total and that is sent along as an

178
00:07:18,600 --> 00:07:20,520
authentication request when you want to

179
00:07:20,520 --> 00:07:24,539
make changes to any of the components

180
00:07:24,539 --> 00:07:27,060
once the PCU key is set

181
00:07:27,060 --> 00:07:29,340
that has several effects

182
00:07:29,340 --> 00:07:32,220
first of all you cannot make any changes

183
00:07:32,220 --> 00:07:34,979
to parameters anymore without providing

184
00:07:34,979 --> 00:07:38,880
the BCU key that's what it's used for

185
00:07:38,880 --> 00:07:41,639
um you can also no longer change the

186
00:07:41,639 --> 00:07:44,099
programming of the different components

187
00:07:44,099 --> 00:07:47,520
you cannot re-engineer it anymore

188
00:07:47,520 --> 00:07:51,000
and an important aspect is also you

189
00:07:51,000 --> 00:07:54,360
cannot reset the device anymore so it's

190
00:07:54,360 --> 00:07:56,099
not like there's a functionality where

191
00:07:56,099 --> 00:07:58,979
you would do a physical reset of the

192
00:07:58,979 --> 00:08:02,460
device and it's gone back to default to

193
00:08:02,460 --> 00:08:04,919
Vector default that is not part of it so

194
00:08:04,919 --> 00:08:08,520
the beat when the PC PCU key is set

195
00:08:08,520 --> 00:08:11,039
it also denies your access even if you

196
00:08:11,039 --> 00:08:13,020
have local access

197
00:08:13,020 --> 00:08:15,960
to the component so one interesting

198
00:08:15,960 --> 00:08:18,060
aspect about it is that it's hardly

199
00:08:18,060 --> 00:08:19,620
documented

200
00:08:19,620 --> 00:08:22,800
well it is actually documented in the

201
00:08:22,800 --> 00:08:25,319
Knick standard and it is documented in

202
00:08:25,319 --> 00:08:28,139
the various documentations of the Knicks

203
00:08:28,139 --> 00:08:29,879
Association who is doing the

204
00:08:29,879 --> 00:08:32,940
standardization of Knicks but during our

205
00:08:32,940 --> 00:08:35,219
research we looked into the data sheets

206
00:08:35,219 --> 00:08:37,679
and minerals of the different KNX

207
00:08:37,679 --> 00:08:40,080
components so those components that are

208
00:08:40,080 --> 00:08:42,059
actually built by the various vendors

209
00:08:42,059 --> 00:08:44,339
and we didn't find any hint about the

210
00:08:44,339 --> 00:08:46,740
BCU key there oh you look through the

211
00:08:46,740 --> 00:08:49,800
metal it's not there and well

212
00:08:49,800 --> 00:08:53,700
unlike it guys and that electricians

213
00:08:53,700 --> 00:08:56,160
actually do read manuals in our

214
00:08:56,160 --> 00:08:58,140
experience yeah that's something we

215
00:08:58,140 --> 00:09:00,660
don't do but it's not there

216
00:09:00,660 --> 00:09:03,240
on the other side if we put those pieces

217
00:09:03,240 --> 00:09:04,320
together

218
00:09:04,320 --> 00:09:06,480
well actually it's quite helpful

219
00:09:06,480 --> 00:09:08,940
to build a ransomware targeted at

220
00:09:08,940 --> 00:09:11,959
buildings right

221
00:09:12,060 --> 00:09:13,560
so

222
00:09:13,560 --> 00:09:15,959
actually I want to talk now about how we

223
00:09:15,959 --> 00:09:18,000
handled the very first incident it was

224
00:09:18,000 --> 00:09:21,360
not the only incident that we've seen so

225
00:09:21,360 --> 00:09:23,580
actually it's a huge huge knife and it's

226
00:09:23,580 --> 00:09:26,040
a huge but it's an ongoing small attack

227
00:09:26,040 --> 00:09:29,160
campaign so we still see buildings

228
00:09:29,160 --> 00:09:32,459
affected now and then uh so it's still

229
00:09:32,459 --> 00:09:33,540
going on

230
00:09:33,540 --> 00:09:35,399
so for that start with this first

231
00:09:35,399 --> 00:09:37,620
incident where we got this call from the

232
00:09:37,620 --> 00:09:39,480
electrician

233
00:09:39,480 --> 00:09:42,000
so basically we started with very little

234
00:09:42,000 --> 00:09:43,980
knowledge about what is going on so we

235
00:09:43,980 --> 00:09:47,040
needed to build up our Theory step by

236
00:09:47,040 --> 00:09:47,940
step

237
00:09:47,940 --> 00:09:51,779
and the our working theory was that the

238
00:09:51,779 --> 00:09:54,540
IP Gateway was directly connected to the

239
00:09:54,540 --> 00:09:56,220
internet was directly accessible from

240
00:09:56,220 --> 00:09:58,320
the internet and we got a confirmation

241
00:09:58,320 --> 00:10:00,300
confirmation that that was actually the

242
00:10:00,300 --> 00:10:02,940
case by the electrician from this

243
00:10:02,940 --> 00:10:03,959
building

244
00:10:03,959 --> 00:10:08,459
so probably somebody found this ipk3

245
00:10:08,459 --> 00:10:12,060
either by doing a network sweep or

246
00:10:12,060 --> 00:10:14,279
network scanner over the Internet or by

247
00:10:14,279 --> 00:10:16,680
just looking it up your Showdown or any

248
00:10:16,680 --> 00:10:18,480
other search engine right you will find

249
00:10:18,480 --> 00:10:19,980
it there as well

250
00:10:19,980 --> 00:10:23,339
Next Step enumerated the Knicks bars so

251
00:10:23,339 --> 00:10:25,019
you can do that once you connect to this

252
00:10:25,019 --> 00:10:28,560
P Gateway you can enumerate what kind of

253
00:10:28,560 --> 00:10:31,019
devices and what devices are in this

254
00:10:31,019 --> 00:10:33,660
particular installation so to find those

255
00:10:33,660 --> 00:10:37,140
several hundred keyonics components

256
00:10:37,140 --> 00:10:40,200
uh once the attacker identifies which

257
00:10:40,200 --> 00:10:42,120
components are there

258
00:10:42,120 --> 00:10:45,180
and there's no protection set the

259
00:10:45,180 --> 00:10:47,760
attacker can now and actually not by

260
00:10:47,760 --> 00:10:49,680
creating any highly sophisticated

261
00:10:49,680 --> 00:10:52,440
malware but by using the default

262
00:10:52,440 --> 00:10:56,220
engineering software can start to unload

263
00:10:56,220 --> 00:10:59,100
the components remove the programming

264
00:10:59,100 --> 00:11:00,420
from the component

265
00:11:00,420 --> 00:11:02,519
so that they don't fulfill the

266
00:11:02,519 --> 00:11:04,220
functionality anymore

267
00:11:04,220 --> 00:11:08,459
and second of all set this PCU key

268
00:11:08,459 --> 00:11:10,140
and that would have been the effect that

269
00:11:10,140 --> 00:11:12,540
we are seeing right so the building is

270
00:11:12,540 --> 00:11:15,600
not functioning anymore as expected if

271
00:11:15,600 --> 00:11:18,000
you switch the light switch light is not

272
00:11:18,000 --> 00:11:19,740
going on

273
00:11:19,740 --> 00:11:22,079
um if you want to operate the shutters

274
00:11:22,079 --> 00:11:25,079
nothing is going on so that would be the

275
00:11:25,079 --> 00:11:28,019
expected outcome now normally everything

276
00:11:28,019 --> 00:11:30,120
that the electrician needs to do is

277
00:11:30,120 --> 00:11:32,700
start up the engineering software

278
00:11:32,700 --> 00:11:35,040
and download the actual application

279
00:11:35,040 --> 00:11:38,399
again but the BCU key is denying you

280
00:11:38,399 --> 00:11:40,440
from doing that if you don't know the

281
00:11:40,440 --> 00:11:43,560
PCU key and the attacker has set a

282
00:11:43,560 --> 00:11:45,959
random BCU key you cannot do that

283
00:11:45,959 --> 00:11:49,440
anymore so that is the situation that we

284
00:11:49,440 --> 00:11:50,579
have here

285
00:11:50,579 --> 00:11:52,339
so we had

286
00:11:52,339 --> 00:11:55,440
the electrician centers several of the

287
00:11:55,440 --> 00:11:58,320
affected components and this is what

288
00:11:58,320 --> 00:12:00,420
they look like actually so on the top

289
00:12:00,420 --> 00:12:02,399
right here you see a typical light

290
00:12:02,399 --> 00:12:03,620
switch

291
00:12:03,620 --> 00:12:06,720
on the bottom right you see a motion

292
00:12:06,720 --> 00:12:08,519
detector so that would be like the

293
00:12:08,519 --> 00:12:11,040
sensors of such a network and on the

294
00:12:11,040 --> 00:12:13,740
left side there to activate us so those

295
00:12:13,740 --> 00:12:16,620
are the ones that actually control the

296
00:12:16,620 --> 00:12:20,240
flow of power for example

297
00:12:20,640 --> 00:12:22,560
um so

298
00:12:22,560 --> 00:12:25,680
what we didn't know yet is if the PCU

299
00:12:25,680 --> 00:12:29,220
key that was set is actually one for the

300
00:12:29,220 --> 00:12:30,540
whole installation

301
00:12:30,540 --> 00:12:34,019
or in theory it could also be one per

302
00:12:34,019 --> 00:12:36,360
component and that would make the

303
00:12:36,360 --> 00:12:38,579
incident resolution much more difficult

304
00:12:38,579 --> 00:12:40,200
so this is something that we did not

305
00:12:40,200 --> 00:12:43,019
know yet but what we did see is that the

306
00:12:43,019 --> 00:12:45,120
devices still has their old physical

307
00:12:45,120 --> 00:12:47,820
address and unlike with network cards in

308
00:12:47,820 --> 00:12:50,820
it the physical address is nothing that

309
00:12:50,820 --> 00:12:53,459
comes with the device but actually it is

310
00:12:53,459 --> 00:12:55,680
something that you program into the

311
00:12:55,680 --> 00:12:58,139
device per project so even if the

312
00:12:58,139 --> 00:13:00,000
components have been unloaded the

313
00:13:00,000 --> 00:13:02,519
address was still there and that becomes

314
00:13:02,519 --> 00:13:06,300
important in later steps of the incident

315
00:13:06,300 --> 00:13:07,620
handling actually

316
00:13:07,620 --> 00:13:10,139
so now we were thinking about how do we

317
00:13:10,139 --> 00:13:13,200
proceed so our goal was to recover this

318
00:13:13,200 --> 00:13:15,480
building to make it accessible to the

319
00:13:15,480 --> 00:13:19,500
owners again and get it operating again

320
00:13:19,500 --> 00:13:21,420
so we came up with different theories

321
00:13:21,420 --> 00:13:25,019
and different tactics what to do here

322
00:13:25,019 --> 00:13:27,120
some of them were less promising and one

323
00:13:27,120 --> 00:13:29,220
of the less promising is Brute Force so

324
00:13:29,220 --> 00:13:31,200
thanks for everybody who took part in

325
00:13:31,200 --> 00:13:34,500
the poll about how long would it take to

326
00:13:34,500 --> 00:13:37,139
actually online Brute Force we don't

327
00:13:37,139 --> 00:13:39,300
have any hash or something like that to

328
00:13:39,300 --> 00:13:42,860
online uh online Brute Force such for

329
00:13:42,860 --> 00:13:47,579
byte hash and to be honest most of you

330
00:13:47,579 --> 00:13:51,240
have been far off right so actually out

331
00:13:51,240 --> 00:13:53,399
of 42 people that participated in the

332
00:13:53,399 --> 00:13:56,399
poll uh only five uh took one of the

333
00:13:56,399 --> 00:13:58,440
longer options with many hours or even

334
00:13:58,440 --> 00:14:02,399
years I would say for a typical

335
00:14:02,399 --> 00:14:05,660
very good scaling system like

336
00:14:05,660 --> 00:14:08,279
cloud-based service you could expect

337
00:14:08,279 --> 00:14:11,639
here that it takes many hours maybe

338
00:14:11,639 --> 00:14:14,040
several days it's still four random

339
00:14:14,040 --> 00:14:16,200
bytes right in our online system

340
00:14:16,200 --> 00:14:18,600
that is about four billion different

341
00:14:18,600 --> 00:14:22,440
combinations uh that you have but one

342
00:14:22,440 --> 00:14:24,480
issue that we have here the way that we

343
00:14:24,480 --> 00:14:27,060
could online brute force it is via the

344
00:14:27,060 --> 00:14:30,779
KNX bus and that is a very slow bus so

345
00:14:30,779 --> 00:14:34,800
we have here speeds of about 9100 Watt

346
00:14:34,800 --> 00:14:38,399
and then correlates roughly four to nine

347
00:14:38,399 --> 00:14:41,100
ten maybe if you're lucky 11 Keys per

348
00:14:41,100 --> 00:14:43,740
second that you can try that for 4

349
00:14:43,740 --> 00:14:47,459
billion keys it's about 13 years if you

350
00:14:47,459 --> 00:14:49,620
really need to try all the keys let's

351
00:14:49,620 --> 00:14:51,180
say you're lucky get it in the first

352
00:14:51,180 --> 00:14:53,820
half still a few years so that was not

353
00:14:53,820 --> 00:14:57,000
our best option to get the key we're

354
00:14:57,000 --> 00:14:59,040
also thinking about like not using the

355
00:14:59,040 --> 00:15:01,440
key and experts but going directly into

356
00:15:01,440 --> 00:15:03,660
the CPU we'll certain interfaces like

357
00:15:03,660 --> 00:15:05,699
uart but still not our first choice

358
00:15:05,699 --> 00:15:08,160
because it will still not scale good

359
00:15:08,160 --> 00:15:11,100
enough to be successful with a Brute

360
00:15:11,100 --> 00:15:12,240
Force attack

361
00:15:12,240 --> 00:15:15,240
so another thing that we came up was

362
00:15:15,240 --> 00:15:19,440
maybe we can circumvent actually the BCU

363
00:15:19,440 --> 00:15:22,920
Key Well it may be that from time to

364
00:15:22,920 --> 00:15:25,860
time I see s components have certain

365
00:15:25,860 --> 00:15:28,500
vulnerabilities that can be used to

366
00:15:28,500 --> 00:15:30,420
circumvent authentication we might have

367
00:15:30,420 --> 00:15:32,279
heard of one or two cases so we were

368
00:15:32,279 --> 00:15:34,860
hoping that this was the case also here

369
00:15:34,860 --> 00:15:37,440
so we tried our luck with some small

370
00:15:37,440 --> 00:15:40,260
vulnerability testing and see if we find

371
00:15:40,260 --> 00:15:42,060
a functionality that would allow us

372
00:15:42,060 --> 00:15:45,360
outside the clinic specification to get

373
00:15:45,360 --> 00:15:47,880
around the PCU key and still be able to

374
00:15:47,880 --> 00:15:50,399
reset the devices so we tried some

375
00:15:50,399 --> 00:15:52,320
simple fussing looking for any

376
00:15:52,320 --> 00:15:53,880
interfaces that could be used without

377
00:15:53,880 --> 00:15:55,440
Authentication

378
00:15:55,440 --> 00:15:57,839
but again we have not been lucky with

379
00:15:57,839 --> 00:16:01,380
that and we didn't want to use more time

380
00:16:01,380 --> 00:16:03,380
to do very deep

381
00:16:03,380 --> 00:16:05,639
vulnerability testing on this component

382
00:16:05,639 --> 00:16:08,579
so we need to come up with other options

383
00:16:08,579 --> 00:16:11,160
to do it another option could have been

384
00:16:11,160 --> 00:16:14,579
actually debugging trying to debug the

385
00:16:14,579 --> 00:16:17,459
component and jump the execution uh jump

386
00:16:17,459 --> 00:16:19,500
the part of the program where it is

387
00:16:19,500 --> 00:16:22,019
actually checking the authentication

388
00:16:22,019 --> 00:16:25,079
with the PCU key but yeah well maybe not

389
00:16:25,079 --> 00:16:27,600
because this our experience shows is

390
00:16:27,600 --> 00:16:30,120
something that takes up quite some time

391
00:16:30,120 --> 00:16:33,240
and time we didn't have here

392
00:16:33,240 --> 00:16:36,420
so what was the more promising solution

393
00:16:36,420 --> 00:16:41,759
so our idea was the PCU key has to be in

394
00:16:41,759 --> 00:16:44,100
those several hundred devices that are

395
00:16:44,100 --> 00:16:46,380
affected by the attack so we were

396
00:16:46,380 --> 00:16:48,899
looking for ways to reach the VCU key

397
00:16:48,899 --> 00:16:51,360
out of the component to be able to

398
00:16:51,360 --> 00:16:54,839
recover it and to recover the building

399
00:16:54,839 --> 00:16:57,420
actually we had several components as I

400
00:16:57,420 --> 00:16:59,519
said before that we asked them to send

401
00:16:59,519 --> 00:17:01,680
us a couple of components for for us to

402
00:17:01,680 --> 00:17:04,199
test and what we did is we started

403
00:17:04,199 --> 00:17:06,419
opening those components now so we had a

404
00:17:06,419 --> 00:17:08,640
little light switch for example in a

405
00:17:08,640 --> 00:17:10,380
nice packaging we cracked the packaging

406
00:17:10,380 --> 00:17:12,299
so they actually get to the electronics

407
00:17:12,299 --> 00:17:15,419
and see what kind of CPUs what kind of

408
00:17:15,419 --> 00:17:19,319
components are built into those devices

409
00:17:19,319 --> 00:17:23,040
and our goal was then to identify if

410
00:17:23,040 --> 00:17:25,919
there are any debug interfaces active on

411
00:17:25,919 --> 00:17:28,079
those devices so would be able to grab

412
00:17:28,079 --> 00:17:30,900
out the memory from the devices and look

413
00:17:30,900 --> 00:17:33,960
for the PCU key there

414
00:17:33,960 --> 00:17:35,820
so we did that and that actually takes

415
00:17:35,820 --> 00:17:37,440
quite some time because you need to

416
00:17:37,440 --> 00:17:39,840
identify what kind of CPU is it you need

417
00:17:39,840 --> 00:17:42,600
to look at the handbook what kind of uh

418
00:17:42,600 --> 00:17:45,660
debug interfaces there are you need to

419
00:17:45,660 --> 00:17:47,640
wire everything so there's actually some

420
00:17:47,640 --> 00:17:50,039
soldering involved and actually to

421
00:17:50,039 --> 00:17:52,020
connect it and then you plug everything

422
00:17:52,020 --> 00:17:53,520
together

423
00:17:53,520 --> 00:17:56,039
plug it into your PC run certain

424
00:17:56,039 --> 00:18:00,240
software to read out the memory and Hope

425
00:18:00,240 --> 00:18:02,160
that the component would actually allow

426
00:18:02,160 --> 00:18:04,559
it right after hours of work

427
00:18:04,559 --> 00:18:07,200
and with the first component we were not

428
00:18:07,200 --> 00:18:08,039
lucky

429
00:18:08,039 --> 00:18:10,320
so actually we were able to contact the

430
00:18:10,320 --> 00:18:13,740
CPU via jteg that was still possible but

431
00:18:13,740 --> 00:18:15,600
you have certain possibilities in such

432
00:18:15,600 --> 00:18:18,000
CPUs actually to activate protection

433
00:18:18,000 --> 00:18:21,299
mechanisms so you hear of fuses that are

434
00:18:21,299 --> 00:18:22,980
activated

435
00:18:22,980 --> 00:18:23,580
um

436
00:18:23,580 --> 00:18:26,100
so-called protection bits and with this

437
00:18:26,100 --> 00:18:28,080
protection bits the vendor can control

438
00:18:28,080 --> 00:18:31,140
if you are weird is cheating interface

439
00:18:31,140 --> 00:18:34,380
allowed to read or write memory and with

440
00:18:34,380 --> 00:18:35,940
the first component we have not been

441
00:18:35,940 --> 00:18:38,220
lucky so we had four components at that

442
00:18:38,220 --> 00:18:39,120
point

443
00:18:39,120 --> 00:18:41,100
three were left

444
00:18:41,100 --> 00:18:43,919
so we tried it with the next one again

445
00:18:43,919 --> 00:18:47,460
not lucky so our oops went down actually

446
00:18:47,460 --> 00:18:49,919
um but finally with one of the last

447
00:18:49,919 --> 00:18:52,980
components we actually have been able to

448
00:18:52,980 --> 00:18:56,039
dump the firmware so the memory out of

449
00:18:56,039 --> 00:18:57,120
the device

450
00:18:57,120 --> 00:19:00,299
and here on the left you see a small

451
00:19:00,299 --> 00:19:03,000
setup what it looks like actually so on

452
00:19:03,000 --> 00:19:04,860
the right side you have on the right

453
00:19:04,860 --> 00:19:06,900
bottom you have like the case of a

454
00:19:06,900 --> 00:19:09,600
keyonics actuator on top of it is

455
00:19:09,600 --> 00:19:12,120
actually the electronics of the actuator

456
00:19:12,120 --> 00:19:14,880
and what you can see here is that we

457
00:19:14,880 --> 00:19:17,580
soldered wires on it to the debug

458
00:19:17,580 --> 00:19:20,160
interface used a little board called

459
00:19:20,160 --> 00:19:22,320
Focaccia that makes the running a bit

460
00:19:22,320 --> 00:19:24,600
easy and go into the debugger that goes

461
00:19:24,600 --> 00:19:27,000
into the PC so this is what the setup

462
00:19:27,000 --> 00:19:29,000
looks like to read out

463
00:19:29,000 --> 00:19:31,980
the memory now we use certain

464
00:19:31,980 --> 00:19:34,140
applications that helped us here to

465
00:19:34,140 --> 00:19:35,660
analyze actually

466
00:19:35,660 --> 00:19:38,460
what is going on in the memory

467
00:19:38,460 --> 00:19:42,120
uh to find the VCU key

468
00:19:42,120 --> 00:19:44,880
like this was the first

469
00:19:44,880 --> 00:19:47,160
step that brings us closer to recovering

470
00:19:47,160 --> 00:19:49,320
it by now what we could do is we could

471
00:19:49,320 --> 00:19:51,179
download the memory

472
00:19:51,179 --> 00:19:53,580
but for now it was just a big chunk of

473
00:19:53,580 --> 00:19:55,799
different seemingly random bits and

474
00:19:55,799 --> 00:19:58,919
bytes so we still didn't have the BCU

475
00:19:58,919 --> 00:20:01,140
key

476
00:20:01,140 --> 00:20:05,480
so we needed to to develop a strategy to

477
00:20:05,480 --> 00:20:09,240
identify from this many many bytes what

478
00:20:09,240 --> 00:20:11,580
are actually the four bytes that build

479
00:20:11,580 --> 00:20:13,260
up the PCU key

480
00:20:13,260 --> 00:20:15,600
if it is there in clear text right we

481
00:20:15,600 --> 00:20:19,740
didn't know that uh as well yet

482
00:20:19,740 --> 00:20:23,940
so we came up with an idea to locate a

483
00:20:23,940 --> 00:20:26,880
more likely place within the byte chunks

484
00:20:26,880 --> 00:20:29,220
where the key could be located and you

485
00:20:29,220 --> 00:20:31,679
remember from the beginning the initial

486
00:20:31,679 --> 00:20:35,400
situation we were still able to

487
00:20:35,400 --> 00:20:37,860
communicate with the device via the set

488
00:20:37,860 --> 00:20:40,100
address

489
00:20:40,100 --> 00:20:43,020
so now we give it another try and say if

490
00:20:43,020 --> 00:20:45,179
the address is still available after

491
00:20:45,179 --> 00:20:49,380
unloading the uh the component maybe we

492
00:20:49,380 --> 00:20:51,720
can also rewrite the address still even

493
00:20:51,720 --> 00:20:54,000
though the PCU key is set and that was

494
00:20:54,000 --> 00:20:57,179
actually possible so what we did is that

495
00:20:57,179 --> 00:20:59,400
we rewrite the address to another value

496
00:20:59,400 --> 00:21:02,280
make another memory dump rewrite it

497
00:21:02,280 --> 00:21:04,919
again take another memory dump and look

498
00:21:04,919 --> 00:21:07,919
up where in the memory the address that

499
00:21:07,919 --> 00:21:10,860
we just set is actually stored so our

500
00:21:10,860 --> 00:21:13,679
theory was that probably if this is the

501
00:21:13,679 --> 00:21:15,960
area where the information is written to

502
00:21:15,960 --> 00:21:19,860
the PCU key will also be close to it so

503
00:21:19,860 --> 00:21:22,140
we just looked for different patterns of

504
00:21:22,140 --> 00:21:24,179
what could be like the four byte key

505
00:21:24,179 --> 00:21:25,679
that is close to the div to the address

506
00:21:25,679 --> 00:21:27,720
that we set but we have not been

507
00:21:27,720 --> 00:21:30,780
immediately lucky that was not that easy

508
00:21:30,780 --> 00:21:34,080
but what we could do now is to actually

509
00:21:34,080 --> 00:21:36,539
combine different methods and different

510
00:21:36,539 --> 00:21:39,179
strategies that we had before

511
00:21:39,179 --> 00:21:42,720
because well before we said brute

512
00:21:42,720 --> 00:21:44,580
forcing is not our favorite strategy

513
00:21:44,580 --> 00:21:46,500
because there are four billion different

514
00:21:46,500 --> 00:21:49,500
combinations of the PCU key but now that

515
00:21:49,500 --> 00:21:51,120
we have the memory

516
00:21:51,120 --> 00:21:54,419
what we can do is we have this fixed

517
00:21:54,419 --> 00:21:57,120
four byte lengths key we can create a

518
00:21:57,120 --> 00:21:59,400
sliding window or with a memory and take

519
00:21:59,400 --> 00:22:01,740
always four bytes four bytes four bytes

520
00:22:01,740 --> 00:22:02,940
four bytes

521
00:22:02,940 --> 00:22:04,980
and build a dictionary out of that that

522
00:22:04,980 --> 00:22:07,799
is much much smaller than the 4 billion

523
00:22:07,799 --> 00:22:10,620
different combinations that the key

524
00:22:10,620 --> 00:22:12,659
could have

525
00:22:12,659 --> 00:22:14,700
um so what we did is we patched a tool

526
00:22:14,700 --> 00:22:16,740
called keyonics map that is an open

527
00:22:16,740 --> 00:22:20,100
source application to actually do such

528
00:22:20,100 --> 00:22:22,440
Brute Force attacks on KNX

529
00:22:22,440 --> 00:22:25,260
uh we modified it a bit so that we can

530
00:22:25,260 --> 00:22:27,480
feed it our dictionary

531
00:22:27,480 --> 00:22:30,720
and used that actually to do the brute

532
00:22:30,720 --> 00:22:32,159
forcing

533
00:22:32,159 --> 00:22:35,280
and so we started this it started

534
00:22:35,280 --> 00:22:36,179
running

535
00:22:36,179 --> 00:22:39,720
and it took several minutes and we were

536
00:22:39,720 --> 00:22:41,700
very hopeful that it would work at the

537
00:22:41,700 --> 00:22:44,580
end and then after about 45 minutes we

538
00:22:44,580 --> 00:22:46,740
actually really got lucky we had the BCU

539
00:22:46,740 --> 00:22:49,620
key and we could try the BCU key in the

540
00:22:49,620 --> 00:22:51,120
programming software if it's actually

541
00:22:51,120 --> 00:22:52,260
working

542
00:22:52,260 --> 00:22:54,059
and it actually worked so that was a

543
00:22:54,059 --> 00:22:57,179
great moment for us finally we found a

544
00:22:57,179 --> 00:23:00,299
way to actually recover the key here

545
00:23:00,299 --> 00:23:03,179
uh now one question was left

546
00:23:03,179 --> 00:23:06,960
and that is is it the same BCU key for

547
00:23:06,960 --> 00:23:09,059
all the devices in the project then we

548
00:23:09,059 --> 00:23:10,140
are lucky

549
00:23:10,140 --> 00:23:12,360
or is it a different PCU key for all of

550
00:23:12,360 --> 00:23:14,400
the components because then we first

551
00:23:14,400 --> 00:23:16,140
need to repeat this step for each and

552
00:23:16,140 --> 00:23:18,179
every component and it doesn't work for

553
00:23:18,179 --> 00:23:19,740
each and every component so that would

554
00:23:19,740 --> 00:23:22,679
be very bad but luck was on our side the

555
00:23:22,679 --> 00:23:24,360
same BCU key was set for the whole

556
00:23:24,360 --> 00:23:26,700
project so we could test it with the

557
00:23:26,700 --> 00:23:28,620
other three components that we had in

558
00:23:28,620 --> 00:23:31,080
our lab it worked with them we called up

559
00:23:31,080 --> 00:23:33,179
the electrician say this is the PCU key

560
00:23:33,179 --> 00:23:35,880
go and try it and it actually worked and

561
00:23:35,880 --> 00:23:37,740
this is how the building could be

562
00:23:37,740 --> 00:23:41,220
recovered by actually using kind of a

563
00:23:41,220 --> 00:23:42,900
security vulnerability of one of the

564
00:23:42,900 --> 00:23:45,780
components because we could read out

565
00:23:45,780 --> 00:23:47,340
um the memory

566
00:23:47,340 --> 00:23:50,520
and this is what it looks like so what

567
00:23:50,520 --> 00:23:51,900
you see here this is actually the

568
00:23:51,900 --> 00:23:53,460
programming software

569
00:23:53,460 --> 00:23:55,980
and you do the engineering here in this

570
00:23:55,980 --> 00:23:58,500
application and once the engineering is

571
00:23:58,500 --> 00:24:01,620
done you can say download this

572
00:24:01,620 --> 00:24:03,900
application now to the component

573
00:24:03,900 --> 00:24:06,600
by default the BCU key is not set so it

574
00:24:06,600 --> 00:24:08,520
would just run through but in this case

575
00:24:08,520 --> 00:24:10,740
a PCU key is set

576
00:24:10,740 --> 00:24:13,320
and if we don't know this PCU key we

577
00:24:13,320 --> 00:24:16,620
cannot program the application

578
00:24:16,620 --> 00:24:19,260
right so that's what's happening here

579
00:24:19,260 --> 00:24:21,299
these are some pictures out of the lab

580
00:24:21,299 --> 00:24:23,760
from the debugging process

581
00:24:23,760 --> 00:24:25,679
similar to what you've you've seen

582
00:24:25,679 --> 00:24:28,159
before

583
00:24:30,780 --> 00:24:33,419
and what you see here actually

584
00:24:33,419 --> 00:24:36,960
is the execution of a single jumped a

585
00:24:36,960 --> 00:24:39,539
little bit here we actually rebuilt

586
00:24:39,539 --> 00:24:41,400
everything in a script so that it goes a

587
00:24:41,400 --> 00:24:43,919
bit faster and now we are here back in

588
00:24:43,919 --> 00:24:45,600
the programming software and you can see

589
00:24:45,600 --> 00:24:47,280
that we had to do many clicks actually

590
00:24:47,280 --> 00:24:50,039
to find this functionality of setting

591
00:24:50,039 --> 00:24:52,799
the BCU key in the programming software

592
00:24:52,799 --> 00:24:54,480
so it's a really really hidden feature

593
00:24:54,480 --> 00:24:57,539
that many electricians don't know about

594
00:24:57,539 --> 00:25:01,620
so many users of the ETS and the kinik

595
00:25:01,620 --> 00:25:03,780
system don't know about and now that we

596
00:25:03,780 --> 00:25:07,799
feed the BCU key to the application

597
00:25:07,799 --> 00:25:11,100
we could successfully uh download the

598
00:25:11,100 --> 00:25:13,320
application again

599
00:25:13,320 --> 00:25:15,480
to the components so we could just

600
00:25:15,480 --> 00:25:17,460
recovered there's some things that we

601
00:25:17,460 --> 00:25:19,919
learned after a while uh from one

602
00:25:19,919 --> 00:25:22,080
incident to the other one thing that we

603
00:25:22,080 --> 00:25:23,580
learned is that there are actually

604
00:25:23,580 --> 00:25:25,799
several protection levels that are

605
00:25:25,799 --> 00:25:27,480
hidden

606
00:25:27,480 --> 00:25:29,880
um and we found a way that actually once

607
00:25:29,880 --> 00:25:32,460
the PCU key is stored in the memory of

608
00:25:32,460 --> 00:25:33,840
the device it's actually not stored

609
00:25:33,840 --> 00:25:35,580
there just once but actually several

610
00:25:35,580 --> 00:25:38,460
times in a row for different levels so

611
00:25:38,460 --> 00:25:40,559
for following incidents it was a little

612
00:25:40,559 --> 00:25:42,720
bit easier to find the PCU key in the

613
00:25:42,720 --> 00:25:45,360
memory Heap because we are looking for a

614
00:25:45,360 --> 00:25:47,760
pattern where we have a sequence where

615
00:25:47,760 --> 00:25:50,460
the same four bytes are there three

616
00:25:50,460 --> 00:25:52,919
times so there are improvements

617
00:25:52,919 --> 00:25:54,240
going on

618
00:25:54,240 --> 00:25:56,460
so now the question is how to fix this

619
00:25:56,460 --> 00:25:59,460
and to this community

620
00:25:59,460 --> 00:26:03,240
it is very easy to say how such an

621
00:26:03,240 --> 00:26:05,159
incident should be avoided well because

622
00:26:05,159 --> 00:26:08,100
this is one of the ground rules that you

623
00:26:08,100 --> 00:26:10,980
don't put in ICS system directly to the

624
00:26:10,980 --> 00:26:12,840
internet without any kind of protection

625
00:26:12,840 --> 00:26:15,360
so to us this is very obvious right

626
00:26:15,360 --> 00:26:17,820
don't do it in the internet

627
00:26:17,820 --> 00:26:20,820
make a good Network design create a VPN

628
00:26:20,820 --> 00:26:23,520
make sure that only authenticated users

629
00:26:23,520 --> 00:26:26,100
can remotely access it

630
00:26:26,100 --> 00:26:28,799
what's also an option that helps here

631
00:26:28,799 --> 00:26:31,860
there's actually an uh it's not a new

632
00:26:31,860 --> 00:26:33,480
version but it's like an additional

633
00:26:33,480 --> 00:26:35,760
functionality that's called KNX secure

634
00:26:35,760 --> 00:26:38,640
so there are components available at the

635
00:26:38,640 --> 00:26:40,580
keyonics

636
00:26:40,580 --> 00:26:43,500
environments that do have actually

637
00:26:43,500 --> 00:26:46,500
stronger protection mechanisms

638
00:26:46,500 --> 00:26:48,840
in the discussions also came up that one

639
00:26:48,840 --> 00:26:51,659
strategy could be that well you set the

640
00:26:51,659 --> 00:26:54,960
BCU key yourself the programming key

641
00:26:54,960 --> 00:26:57,179
so that nobody else could set it for you

642
00:26:57,179 --> 00:27:00,659
we discussed this with electricians and

643
00:27:00,659 --> 00:27:03,179
they said it might be not such a good

644
00:27:03,179 --> 00:27:05,580
idea idea because they see a very very

645
00:27:05,580 --> 00:27:07,679
high chance that a building is

646
00:27:07,679 --> 00:27:08,940
engineered

647
00:27:08,940 --> 00:27:12,600
the PCU key is set at some point the VCU

648
00:27:12,600 --> 00:27:14,940
key is just forgotten it's on a piece of

649
00:27:14,940 --> 00:27:16,860
paper piece of paper is lost

650
00:27:16,860 --> 00:27:20,220
so you lock yourself out by doing this

651
00:27:20,220 --> 00:27:22,260
so they actually from their practical

652
00:27:22,260 --> 00:27:24,779
perspective are not a fan of setting the

653
00:27:24,779 --> 00:27:26,580
PCU key

654
00:27:26,580 --> 00:27:28,679
what could also be help here is actually

655
00:27:28,679 --> 00:27:31,320
to add a logger on the key and express

656
00:27:31,320 --> 00:27:33,120
because by default everything that's

657
00:27:33,120 --> 00:27:35,159
going on the key and express is in clear

658
00:27:35,159 --> 00:27:37,500
text and if you lock what's going on on

659
00:27:37,500 --> 00:27:39,179
the Knicks bus you would also lock

660
00:27:39,179 --> 00:27:41,640
Actually the password that is set by an

661
00:27:41,640 --> 00:27:43,860
adversary but the number one

662
00:27:43,860 --> 00:27:46,740
uh mechanism here definitely is don't

663
00:27:46,740 --> 00:27:50,640
put it directly in the internet but then

664
00:27:50,640 --> 00:27:53,760
again to us it's very obvious but the

665
00:27:53,760 --> 00:27:56,760
people installing those systems

666
00:27:56,760 --> 00:28:00,020
their electricians the people

667
00:28:00,020 --> 00:28:03,000
maintaining those systems

668
00:28:03,000 --> 00:28:05,039
is facility management

669
00:28:05,039 --> 00:28:07,919
and they are very very often

670
00:28:07,919 --> 00:28:11,400
not included in any kind of risk

671
00:28:11,400 --> 00:28:14,520
management in security initiatives they

672
00:28:14,520 --> 00:28:17,220
very often are under the radar they

673
00:28:17,220 --> 00:28:19,140
don't have this kind of knowledge that

674
00:28:19,140 --> 00:28:22,760
we have about networking about

675
00:28:22,760 --> 00:28:25,320
about security so for them it's black

676
00:28:25,320 --> 00:28:27,299
magic that they can access it with the

677
00:28:27,299 --> 00:28:30,360
internet anyway so what helps here is

678
00:28:30,360 --> 00:28:33,740
basically mainly

679
00:28:33,779 --> 00:28:36,179
um to raise the the avianas so this was

680
00:28:36,179 --> 00:28:39,000
not the only victim uh by now we've seen

681
00:28:39,000 --> 00:28:41,760
about 20 cases and they are still coming

682
00:28:41,760 --> 00:28:44,059
in

683
00:28:44,700 --> 00:28:46,919
um we also have a Honeypot running to do

684
00:28:46,919 --> 00:28:50,100
further research but for now our

685
00:28:50,100 --> 00:28:53,279
Honeypot unfortunately did not show

686
00:28:53,279 --> 00:28:55,980
anything that helps us to get further

687
00:28:55,980 --> 00:28:58,980
information about the actual attacks so

688
00:28:58,980 --> 00:29:01,880
if any one of you is actually running

689
00:29:01,880 --> 00:29:03,860
logging services

690
00:29:03,860 --> 00:29:07,620
honeypots that have a potential that you

691
00:29:07,620 --> 00:29:11,039
have records of KNX based attacks please

692
00:29:11,039 --> 00:29:12,299
approach me

693
00:29:12,299 --> 00:29:14,760
I would be very interested if you have

694
00:29:14,760 --> 00:29:18,659
any additional information about that so

695
00:29:18,659 --> 00:29:21,899
I have three key takeaways for you

696
00:29:21,899 --> 00:29:24,659
first thing in this case a security

697
00:29:24,659 --> 00:29:28,440
vulnerability actually saved the day

698
00:29:28,440 --> 00:29:30,600
per default we would say a good

699
00:29:30,600 --> 00:29:33,600
manufacturer has certain hardening

700
00:29:33,600 --> 00:29:36,299
policies and makes sure that before a

701
00:29:36,299 --> 00:29:38,039
product is shipped all the debugging

702
00:29:38,039 --> 00:29:41,340
interfaces are deactivated and actually

703
00:29:41,340 --> 00:29:43,679
for most components that we tested this

704
00:29:43,679 --> 00:29:46,200
is actually the case so we found some

705
00:29:46,200 --> 00:29:48,960
components that allowed us actually to

706
00:29:48,960 --> 00:29:51,120
access the memory via the debug

707
00:29:51,120 --> 00:29:52,620
interface and this security

708
00:29:52,620 --> 00:29:55,799
vulnerability allowed us to recover the

709
00:29:55,799 --> 00:29:57,059
building

710
00:29:57,059 --> 00:29:58,740
secondly

711
00:29:58,740 --> 00:30:02,520
criminals are constantly looking for new

712
00:30:02,520 --> 00:30:07,140
ways to attack new Rays to generate

713
00:30:07,140 --> 00:30:08,760
Revenue

714
00:30:08,760 --> 00:30:11,760
and well it was discussed very very long

715
00:30:11,760 --> 00:30:13,559
time for many years that there are those

716
00:30:13,559 --> 00:30:16,080
insecure clinics installation but people

717
00:30:16,080 --> 00:30:18,419
were always thinking hey if you don't do

718
00:30:18,419 --> 00:30:19,980
this in a secure way somebody could

719
00:30:19,980 --> 00:30:21,659
control your building

720
00:30:21,659 --> 00:30:23,880
but hardly anybody discussed that they

721
00:30:23,880 --> 00:30:26,640
could actually deny you access to your

722
00:30:26,640 --> 00:30:29,039
building into the building automation

723
00:30:29,039 --> 00:30:30,240
system

724
00:30:30,240 --> 00:30:33,120
and the third point that I want to make

725
00:30:33,120 --> 00:30:35,520
sure that also part of the message here

726
00:30:35,520 --> 00:30:38,039
because it is well the one thing that is

727
00:30:38,039 --> 00:30:40,140
missing here there are many people out

728
00:30:40,140 --> 00:30:42,899
there that are not in contact with the

729
00:30:42,899 --> 00:30:45,179
security Community or even with their

730
00:30:45,179 --> 00:30:48,179
own security staff in the company but

731
00:30:48,179 --> 00:30:51,240
they still operate critical assets of

732
00:30:51,240 --> 00:30:53,640
the organization so we need to make sure

733
00:30:53,640 --> 00:30:57,480
that security awareness is also reaching

734
00:30:57,480 --> 00:30:59,460
people that are not on our radar that

735
00:30:59,460 --> 00:31:03,720
are not typical it or OT users

736
00:31:03,720 --> 00:31:07,500
so that's for me thank you

737
00:31:07,500 --> 00:31:09,720
if there is a question we probably have

738
00:31:09,720 --> 00:31:12,000
time for one question

739
00:31:12,000 --> 00:31:14,220
uh there are mics on the right and on

740
00:31:14,220 --> 00:31:16,460
the left

741
00:31:27,779 --> 00:31:30,720
all right if any questions arise you can

742
00:31:30,720 --> 00:31:34,440
grab me anytime happy to discuss thank

743
00:31:34,440 --> 00:31:36,559
you

744
00:31:36,899 --> 00:31:39,899
foreign

