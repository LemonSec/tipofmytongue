1
00:00:04,799 --> 00:00:06,640
let's talk about the most exciting thing

2
00:00:06,640 --> 00:00:08,960
that you'll ever hear right more so for

3
00:00:08,960 --> 00:00:10,639
the past three days so

4
00:00:10,639 --> 00:00:12,480
let's see okay i see

5
00:00:12,480 --> 00:00:15,440
secure plc coding

6
00:00:15,440 --> 00:00:18,080
okay this is the agenda for the next 75

7
00:00:18,080 --> 00:00:19,840
enthralling minutes okay i will be

8
00:00:19,840 --> 00:00:22,400
captivating and spellbound

9
00:00:22,400 --> 00:00:24,000
we'll quickly go through uh what to

10
00:00:24,000 --> 00:00:26,000
expect in the session right we'll talk a

11
00:00:26,000 --> 00:00:27,359
little bit about our project we'll go

12
00:00:27,359 --> 00:00:29,840
through some examples uh some closing

13
00:00:29,840 --> 00:00:31,599
thoughts for the future and happy to

14
00:00:31,599 --> 00:00:34,800
take any questions okay

15
00:00:35,040 --> 00:00:36,800
and

16
00:00:36,800 --> 00:00:39,360
quick uh format what we have today is a

17
00:00:39,360 --> 00:00:41,520
bunch of slides a lot of pictures so

18
00:00:41,520 --> 00:00:42,879
we'll talk over it

19
00:00:42,879 --> 00:00:44,320
and if you really want to dig deeper

20
00:00:44,320 --> 00:00:46,399
into the code itself you want the config

21
00:00:46,399 --> 00:00:49,600
files give us a shout send me an email

22
00:00:49,600 --> 00:00:51,360
we'll get that to you but for the most

23
00:00:51,360 --> 00:00:53,120
part we'll be talking about

24
00:00:53,120 --> 00:00:55,280
the content on a picture format right

25
00:00:55,280 --> 00:00:59,000
and then we'll go through some examples

26
00:00:59,680 --> 00:01:01,359
introduction about our project so let's

27
00:01:01,359 --> 00:01:03,440
see if that works okay

28
00:01:03,440 --> 00:01:05,920
top 20 list most of you probably heard

29
00:01:05,920 --> 00:01:07,760
of it and that's why you're here so we

30
00:01:07,760 --> 00:01:09,200
have the website in for their email

31
00:01:09,200 --> 00:01:11,600
contact as well you'll know um you know

32
00:01:11,600 --> 00:01:13,200
talk to jake talk to isaiah you know

33
00:01:13,200 --> 00:01:15,040
you'll get the background about how this

34
00:01:15,040 --> 00:01:16,479
started where it is you have a bunch of

35
00:01:16,479 --> 00:01:18,880
videos on there for intros uh this talk

36
00:01:18,880 --> 00:01:20,479
will go a little bit deeper into those

37
00:01:20,479 --> 00:01:21,920
practice examples so we're not going to

38
00:01:21,920 --> 00:01:24,240
talk about the intro but of these eight

39
00:01:24,240 --> 00:01:26,240
that are underlined josh is going to

40
00:01:26,240 --> 00:01:27,759
talk about the first four and i'm going

41
00:01:27,759 --> 00:01:30,960
to take the next four

42
00:01:30,960 --> 00:01:33,040
what we often hear right that plcs are

43
00:01:33,040 --> 00:01:35,040
insecure by design and you probably

44
00:01:35,040 --> 00:01:37,280
heard that many many times and to a

45
00:01:37,280 --> 00:01:39,439
large extent it's true right but then

46
00:01:39,439 --> 00:01:41,520
the next conclusion drawn from it that

47
00:01:41,520 --> 00:01:43,439
the ot security posture cannot be

48
00:01:43,439 --> 00:01:44,720
improved by

49
00:01:44,720 --> 00:01:46,960
uh programming because it's insecure by

50
00:01:46,960 --> 00:01:49,600
design the protocols are insecure so you

51
00:01:49,600 --> 00:01:50,960
can't do much that's what you hear

52
00:01:50,960 --> 00:01:53,520
typically right you also hear that

53
00:01:53,520 --> 00:01:55,759
implementing any plc level security

54
00:01:55,759 --> 00:01:57,280
would need newer platforms newer

55
00:01:57,280 --> 00:01:59,119
protocols newer everything because hey

56
00:01:59,119 --> 00:02:01,360
they're better designed more modern so

57
00:02:01,360 --> 00:02:02,880
you have to use them

58
00:02:02,880 --> 00:02:04,880
so look at the other side of the picture

59
00:02:04,880 --> 00:02:06,719
it is to an extent these things that we

60
00:02:06,719 --> 00:02:08,479
mentioned here however there are things

61
00:02:08,479 --> 00:02:10,639
that still can be done with existing

62
00:02:10,639 --> 00:02:13,120
plcs right you can monitor you can

63
00:02:13,120 --> 00:02:15,440
validate you can verify you can improve

64
00:02:15,440 --> 00:02:18,000
the resilience of the plc architecture

65
00:02:18,000 --> 00:02:20,319
by improving the programming practices

66
00:02:20,319 --> 00:02:22,160
which is how this project was started in

67
00:02:22,160 --> 00:02:23,920
the first place so

68
00:02:23,920 --> 00:02:26,160
you can harden the plc you can improve

69
00:02:26,160 --> 00:02:28,640
the resilience you can monitor i without

70
00:02:28,640 --> 00:02:30,640
using additional tools at the base level

71
00:02:30,640 --> 00:02:31,840
right there are things that the

72
00:02:31,840 --> 00:02:34,319
additional tools will get to you right

73
00:02:34,319 --> 00:02:35,920
however there are things that you can't

74
00:02:35,920 --> 00:02:37,920
fundamentally do leveraging best

75
00:02:37,920 --> 00:02:40,239
practices engineering practices in the

76
00:02:40,239 --> 00:02:43,120
plc programming and that's how um you

77
00:02:43,120 --> 00:02:44,480
know we are approaching these security

78
00:02:44,480 --> 00:02:45,680
improvements right so we're talking

79
00:02:45,680 --> 00:02:47,200
about security quite a bit but we'll

80
00:02:47,200 --> 00:02:48,879
leverage many of the good engineering

81
00:02:48,879 --> 00:02:52,799
practices to get to better security

82
00:02:53,519 --> 00:02:54,400
and

83
00:02:54,400 --> 00:02:56,080
josh is going to talk about this

84
00:02:56,080 --> 00:02:57,680
security objectives and target groups

85
00:02:57,680 --> 00:02:59,360
and then take you to the next few

86
00:02:59,360 --> 00:03:01,840
examples

87
00:03:02,080 --> 00:03:04,480
yeah so as we were kind of going through

88
00:03:04,480 --> 00:03:06,879
everything and starting to kind of uh

89
00:03:06,879 --> 00:03:08,879
categorize the different practices that

90
00:03:08,879 --> 00:03:10,480
were out there we kind of had a lot of

91
00:03:10,480 --> 00:03:12,239
different conversations about like what

92
00:03:12,239 --> 00:03:14,159
are the actual security objectives and

93
00:03:14,159 --> 00:03:15,519
we were able to break it down into four

94
00:03:15,519 --> 00:03:17,840
separate categories um obviously being

95
00:03:17,840 --> 00:03:20,319
the highest one integrity uh is what

96
00:03:20,319 --> 00:03:21,760
you're focused on the most with plcs

97
00:03:21,760 --> 00:03:23,599
usually right you want your plc to be

98
00:03:23,599 --> 00:03:26,400
functioning as designed as expected and

99
00:03:26,400 --> 00:03:28,640
protecting your

100
00:03:28,640 --> 00:03:30,319
your environmental and your physical

101
00:03:30,319 --> 00:03:32,560
cyberspace and your physical uh

102
00:03:32,560 --> 00:03:34,239
environment

103
00:03:34,239 --> 00:03:35,040
um

104
00:03:35,040 --> 00:03:36,640
so but really when you have a lot of

105
00:03:36,640 --> 00:03:38,560
conversations about security and plc

106
00:03:38,560 --> 00:03:40,000
security the first thing most people

107
00:03:40,000 --> 00:03:41,200
think of is hardening because that's the

108
00:03:41,200 --> 00:03:42,959
way a lot of us cyber security engineers

109
00:03:42,959 --> 00:03:44,319
first think about things right like all

110
00:03:44,319 --> 00:03:45,840
right how are we gonna harden the device

111
00:03:45,840 --> 00:03:47,360
the first conversation that comes up is

112
00:03:47,360 --> 00:03:49,120
all right we got to go put in passwords

113
00:03:49,120 --> 00:03:51,360
how we can disable different protocols

114
00:03:51,360 --> 00:03:52,159
but

115
00:03:52,159 --> 00:03:53,840
as we really dug into this that wasn't

116
00:03:53,840 --> 00:03:55,840
really where a lot of these practices

117
00:03:55,840 --> 00:03:57,920
and ideas came from the community and we

118
00:03:57,920 --> 00:03:59,280
all sat down and were brainstorming

119
00:03:59,280 --> 00:04:01,040
together

120
00:04:01,040 --> 00:04:02,720
there's still a different level of

121
00:04:02,720 --> 00:04:04,319
monitoring items that can be done that

122
00:04:04,319 --> 00:04:06,080
may not be done through a number of

123
00:04:06,080 --> 00:04:07,599
different platforms that already out

124
00:04:07,599 --> 00:04:08,799
there today so there's things that you

125
00:04:08,799 --> 00:04:10,319
can already do natively in the

126
00:04:10,319 --> 00:04:12,799
controllers and be leveraging and then

127
00:04:12,799 --> 00:04:15,439
resilience is the last category uh and

128
00:04:15,439 --> 00:04:16,959
then the further we got into this too

129
00:04:16,959 --> 00:04:18,238
and having the different conversations

130
00:04:18,238 --> 00:04:19,358
we were talking about what are all the

131
00:04:19,358 --> 00:04:20,320
different target groups that you're

132
00:04:20,320 --> 00:04:22,479
gonna be talking with because not all

133
00:04:22,479 --> 00:04:25,040
the practices or uh different techniques

134
00:04:25,040 --> 00:04:26,639
that we were bringing up were really

135
00:04:26,639 --> 00:04:28,400
gonna be valid from each part of the

136
00:04:28,400 --> 00:04:30,400
life cycle that the

137
00:04:30,400 --> 00:04:31,919
code would be developed

138
00:04:31,919 --> 00:04:34,400
in um or who would actually be adopting

139
00:04:34,400 --> 00:04:35,680
the practices

140
00:04:35,680 --> 00:04:36,560
so

141
00:04:36,560 --> 00:04:38,160
the first one is in the life cycle

142
00:04:38,160 --> 00:04:39,520
really is like your product suppliers

143
00:04:39,520 --> 00:04:41,680
right so product suppliers is the first

144
00:04:41,680 --> 00:04:44,320
chance you really have to actually start

145
00:04:44,320 --> 00:04:46,400
hardening and improving your programming

146
00:04:46,400 --> 00:04:48,800
practices and so when you actually start

147
00:04:48,800 --> 00:04:51,040
focusing on those folks they they have

148
00:04:51,040 --> 00:04:52,800
less constraints to some extent there

149
00:04:52,800 --> 00:04:54,560
right because when you have it early on

150
00:04:54,560 --> 00:04:56,800
in the life cycle you don't have to deal

151
00:04:56,800 --> 00:04:59,120
with what's my uptime at this time or

152
00:04:59,120 --> 00:05:01,280
this period in time is this download

153
00:05:01,280 --> 00:05:02,800
going to be required

154
00:05:02,800 --> 00:05:04,320
what's this going to do

155
00:05:04,320 --> 00:05:05,680
to affect the current rating that it

156
00:05:05,680 --> 00:05:07,120
already has out there

157
00:05:07,120 --> 00:05:09,039
you just have a lot more flexibility and

158
00:05:09,039 --> 00:05:10,479
then you kind of move into the

159
00:05:10,479 --> 00:05:12,160
integration and maintenance providers

160
00:05:12,160 --> 00:05:13,520
and they're really going to touch us at

161
00:05:13,520 --> 00:05:15,199
almost any point in its life cycle they

162
00:05:15,199 --> 00:05:16,720
could be the ones developing your code

163
00:05:16,720 --> 00:05:18,240
they could be the ones modifying it to

164
00:05:18,240 --> 00:05:20,240
integrate into your current systems

165
00:05:20,240 --> 00:05:21,600
they could be the ones troubleshooting

166
00:05:21,600 --> 00:05:22,720
it late at night trying to figure out

167
00:05:22,720 --> 00:05:24,080
what's going on they're the ones making

168
00:05:24,080 --> 00:05:25,600
small changes that might just be

169
00:05:25,600 --> 00:05:28,320
operational improvements along the way

170
00:05:28,320 --> 00:05:29,680
and then the last one is the asset

171
00:05:29,680 --> 00:05:31,440
owners they really may not be the ones

172
00:05:31,440 --> 00:05:32,320
who are actually doing all the

173
00:05:32,320 --> 00:05:34,000
programming but they're the ones who may

174
00:05:34,000 --> 00:05:34,960
be putting together some of the

175
00:05:34,960 --> 00:05:37,039
standards that may be in place putting

176
00:05:37,039 --> 00:05:38,400
the different requirements that may be

177
00:05:38,400 --> 00:05:40,560
there and needed and so

178
00:05:40,560 --> 00:05:42,000
we would just kind of categorize these

179
00:05:42,000 --> 00:05:44,000
to help do a quick pass as to where you

180
00:05:44,000 --> 00:05:45,360
want to focus your eyes depending on

181
00:05:45,360 --> 00:05:47,120
where you sit or where what you're

182
00:05:47,120 --> 00:05:49,919
responsible for

183
00:05:51,440 --> 00:05:53,120
so we'll do some stage setting but as

184
00:05:53,120 --> 00:05:54,720
we're moving through uh we're going to

185
00:05:54,720 --> 00:05:56,560
walk through the eight different items

186
00:05:56,560 --> 00:05:58,000
that we kind of want to highlight today

187
00:05:58,000 --> 00:06:01,919
from a secure coding example um

188
00:06:01,919 --> 00:06:03,360
the top 20 items that were brought up

189
00:06:03,360 --> 00:06:04,800
was a big community that came together

190
00:06:04,800 --> 00:06:06,880
to create all these and the idea is this

191
00:06:06,880 --> 00:06:08,800
isn't being talked about enough i think

192
00:06:08,800 --> 00:06:10,319
jake initially had brought up that a

193
00:06:10,319 --> 00:06:12,000
couple years ago

194
00:06:12,000 --> 00:06:13,199
that it just needs to be something that

195
00:06:13,199 --> 00:06:15,440
starts getting socialized and starts

196
00:06:15,440 --> 00:06:17,280
becoming a normal part of the daily

197
00:06:17,280 --> 00:06:18,720
conversation that there is something you

198
00:06:18,720 --> 00:06:22,160
can do it's a part of a defense in depth

199
00:06:22,160 --> 00:06:23,440
strategy

200
00:06:23,440 --> 00:06:25,199
and you just need to start thinking

201
00:06:25,199 --> 00:06:26,319
about it when you're starting to do the

202
00:06:26,319 --> 00:06:28,319
design but what am i going to do today

203
00:06:28,319 --> 00:06:30,000
so a lot of these practices that are

204
00:06:30,000 --> 00:06:31,360
going to be brought up

205
00:06:31,360 --> 00:06:32,960
they're not that complex to implement

206
00:06:32,960 --> 00:06:34,639
they're a good way to start

207
00:06:34,639 --> 00:06:36,400
changing the perspective of folks who

208
00:06:36,400 --> 00:06:37,840
are doing the programming the engineers

209
00:06:37,840 --> 00:06:39,440
who are designing it the people who are

210
00:06:39,440 --> 00:06:40,800
developing the systems and building the

211
00:06:40,800 --> 00:06:42,960
systems and so as we walk through each

212
00:06:42,960 --> 00:06:44,720
of these different

213
00:06:44,720 --> 00:06:46,000
practices what we're going to do is

214
00:06:46,000 --> 00:06:47,360
we're going to walk through

215
00:06:47,360 --> 00:06:48,720
outline the practice give a quick

216
00:06:48,720 --> 00:06:50,560
overview what the practice is what the

217
00:06:50,560 --> 00:06:51,919
guidelines would be

218
00:06:51,919 --> 00:06:53,199
what the different benefits may be

219
00:06:53,199 --> 00:06:55,120
around it and then we'll kind of put it

220
00:06:55,120 --> 00:06:57,599
in a real con contextual scenario where

221
00:06:57,599 --> 00:06:59,360
we kind of describe and operate like a

222
00:06:59,360 --> 00:07:01,440
real world operating scenario

223
00:07:01,440 --> 00:07:03,440
what insecure programming would do if an

224
00:07:03,440 --> 00:07:06,080
attacker were to step in what the secure

225
00:07:06,080 --> 00:07:07,680
programming would do so you can actually

226
00:07:07,680 --> 00:07:09,680
contextualize what making some of these

227
00:07:09,680 --> 00:07:12,000
changes could actually do

228
00:07:12,000 --> 00:07:13,599
as far as improving your cyber security

229
00:07:13,599 --> 00:07:14,560
posture

230
00:07:14,560 --> 00:07:15,840
of course a lot of these are not going

231
00:07:15,840 --> 00:07:17,520
to stop an advanced

232
00:07:17,520 --> 00:07:19,280
persistent threat actor but a lot of

233
00:07:19,280 --> 00:07:21,680
these can stop the very s the really

234
00:07:21,680 --> 00:07:23,840
quick attacks and improve your posture

235
00:07:23,840 --> 00:07:25,280
overall where they were other

236
00:07:25,280 --> 00:07:26,720
compensating controls you may have in

237
00:07:26,720 --> 00:07:29,039
place combined with these just improve

238
00:07:29,039 --> 00:07:31,840
your overall posture

239
00:07:32,560 --> 00:07:34,160
so the first practice we'll go through

240
00:07:34,160 --> 00:07:35,520
is practice number three which is

241
00:07:35,520 --> 00:07:38,160
leaving the operational logic in the plc

242
00:07:38,160 --> 00:07:40,479
so there's a lot of different

243
00:07:40,479 --> 00:07:43,039
vendors out there different uh

244
00:07:43,039 --> 00:07:45,199
ics devices that can do some level of

245
00:07:45,199 --> 00:07:48,000
control some level of logic some level

246
00:07:48,000 --> 00:07:49,919
of amount of

247
00:07:49,919 --> 00:07:52,080
controls within them uh some different

248
00:07:52,080 --> 00:07:54,479
examples of that would be so your hmi

249
00:07:54,479 --> 00:07:56,720
can do it'll have a number of logic

250
00:07:56,720 --> 00:07:57,759
items that you can do in it you can

251
00:07:57,759 --> 00:07:59,440
program and see maybe able to program in

252
00:07:59,440 --> 00:08:01,840
vb and some rare cases you may be even

253
00:08:01,840 --> 00:08:03,199
able to write some ladder logic in your

254
00:08:03,199 --> 00:08:05,759
hmi and have internal tags in there

255
00:08:05,759 --> 00:08:07,039
on the flip side if you start talking

256
00:08:07,039 --> 00:08:07,919
about

257
00:08:07,919 --> 00:08:10,240
the like flow meters or flow controllers

258
00:08:10,240 --> 00:08:11,840
they have a level of logic they can do

259
00:08:11,840 --> 00:08:14,000
in them as well so a lot of this is

260
00:08:14,000 --> 00:08:15,199
trying to focus on leaving the

261
00:08:15,199 --> 00:08:17,440
operational logic in the plc as opposed

262
00:08:17,440 --> 00:08:20,240
to spreading it out just because you can

263
00:08:20,240 --> 00:08:21,440
when you're first developing it and

264
00:08:21,440 --> 00:08:22,639
developing a lot of this code you may

265
00:08:22,639 --> 00:08:24,319
think this is oh this is great it's

266
00:08:24,319 --> 00:08:25,599
actually way easier for me to develop

267
00:08:25,599 --> 00:08:27,199
this code in the hmi or do a little bit

268
00:08:27,199 --> 00:08:28,479
in the flow meter

269
00:08:28,479 --> 00:08:30,639
but you're not thinking long term of how

270
00:08:30,639 --> 00:08:32,159
you're going to be actually maintaining

271
00:08:32,159 --> 00:08:33,200
this and

272
00:08:33,200 --> 00:08:34,880
also the additional security risks that

273
00:08:34,880 --> 00:08:36,559
you may be introducing

274
00:08:36,559 --> 00:08:38,479
so the idea here is to be really

275
00:08:38,479 --> 00:08:41,200
calculating and doing your controls in

276
00:08:41,200 --> 00:08:42,799
the most logical device and as close to

277
00:08:42,799 --> 00:08:44,800
the process as possible

278
00:08:44,800 --> 00:08:46,240
there's other benefits around this that

279
00:08:46,240 --> 00:08:47,839
are not just security focus where you're

280
00:08:47,839 --> 00:08:50,000
gonna improve your latency you're gonna

281
00:08:50,000 --> 00:08:52,000
make it easier to troubleshoot i don't

282
00:08:52,000 --> 00:08:53,360
know if anybody's actually had to go out

283
00:08:53,360 --> 00:08:55,120
there and do maintenance in the middle

284
00:08:55,120 --> 00:08:56,560
of the night or try to get a process

285
00:08:56,560 --> 00:08:58,240
back up and you haven't even ever seen

286
00:08:58,240 --> 00:08:59,279
the code you get in the code and you

287
00:08:59,279 --> 00:09:01,120
start trying to troubleshoot it and the

288
00:09:01,120 --> 00:09:03,120
code's spread out in the hmi and the plc

289
00:09:03,120 --> 00:09:05,120
maybe in a different controller

290
00:09:05,120 --> 00:09:06,800
and you're spending a long time

291
00:09:06,800 --> 00:09:08,080
extending the downtime you're very

292
00:09:08,080 --> 00:09:09,200
stressed trying to figure out where all

293
00:09:09,200 --> 00:09:10,320
this code's at and some of these don't

294
00:09:10,320 --> 00:09:12,320
even have the best debugging features

295
00:09:12,320 --> 00:09:14,800
so putting that aside there's there's

296
00:09:14,800 --> 00:09:16,880
other security features that are helpful

297
00:09:16,880 --> 00:09:18,320
within it so

298
00:09:18,320 --> 00:09:19,600
what we're going to do for describing

299
00:09:19,600 --> 00:09:20,880
this scenario we're going to focus more

300
00:09:20,880 --> 00:09:22,959
on a simple like stage shutdown of a

301
00:09:22,959 --> 00:09:24,880
compressor system which you could easily

302
00:09:24,880 --> 00:09:27,680
extrapolate out to like any full

303
00:09:27,680 --> 00:09:29,440
processing facility but we're going to

304
00:09:29,440 --> 00:09:30,399
do here is we're going to talk about a

305
00:09:30,399 --> 00:09:31,760
stage shutdown that goes through a

306
00:09:31,760 --> 00:09:33,760
number of different just timed events

307
00:09:33,760 --> 00:09:35,440
it's very simple it moves through five

308
00:09:35,440 --> 00:09:37,120
different stages and has

309
00:09:37,120 --> 00:09:39,200
a time delay between each stage before

310
00:09:39,200 --> 00:09:41,360
it moves on to the next stage which in a

311
00:09:41,360 --> 00:09:42,640
real environment you may actually have a

312
00:09:42,640 --> 00:09:44,800
number of different interlocks or

313
00:09:44,800 --> 00:09:46,240
environmental scenarios that have to be

314
00:09:46,240 --> 00:09:47,920
met first before it moves on but to keep

315
00:09:47,920 --> 00:09:50,480
it simple that's a good starting point

316
00:09:50,480 --> 00:09:52,480
so for this you're going to have a the

317
00:09:52,480 --> 00:09:53,920
delay timer between each of it in the

318
00:09:53,920 --> 00:09:54,959
insecure coding that's going to be

319
00:09:54,959 --> 00:09:57,360
handled in the hmi as opposed to the plc

320
00:09:57,360 --> 00:09:59,519
and every time that it moves on to the

321
00:09:59,519 --> 00:10:00,800
next stage the hmi is going to actually

322
00:10:00,800 --> 00:10:02,079
have done the right and tell it to move

323
00:10:02,079 --> 00:10:04,079
on to the next stage for the secure

324
00:10:04,079 --> 00:10:04,959
coding you're going to actually have

325
00:10:04,959 --> 00:10:09,199
done all of the coding within the plc

326
00:10:09,760 --> 00:10:10,959
so

327
00:10:10,959 --> 00:10:12,640
for this graphic here you actually have

328
00:10:12,640 --> 00:10:14,640
a number of different items you've got a

329
00:10:14,640 --> 00:10:16,160
operator that's going to be interacting

330
00:10:16,160 --> 00:10:18,079
with your hmi on the left side you've

331
00:10:18,079 --> 00:10:20,079
got a network that's associated with it

332
00:10:20,079 --> 00:10:22,079
connected to a plc over ethernet ip or

333
00:10:22,079 --> 00:10:22,959
something

334
00:10:22,959 --> 00:10:24,560
equivalent and then you've got a

335
00:10:24,560 --> 00:10:26,560
hardwired control from the plc to your

336
00:10:26,560 --> 00:10:28,240
process equipment in this case it's just

337
00:10:28,240 --> 00:10:30,240
a compressor right now in a number of

338
00:10:30,240 --> 00:10:31,200
different transmitters around the

339
00:10:31,200 --> 00:10:33,040
compressor and you have a stage shutdown

340
00:10:33,040 --> 00:10:34,320
control

341
00:10:34,320 --> 00:10:36,000
just because there's nothing shown above

342
00:10:36,000 --> 00:10:37,279
the switches in any of these doesn't

343
00:10:37,279 --> 00:10:39,600
mean it's not connected to the wider

344
00:10:39,600 --> 00:10:42,240
lan network so you still just this is

345
00:10:42,240 --> 00:10:45,680
kind of closing in your view

346
00:10:45,680 --> 00:10:47,040
when you step into this let's say you're

347
00:10:47,040 --> 00:10:48,399
going to start initiating the shutdown

348
00:10:48,399 --> 00:10:49,519
the operator is going to initiate a

349
00:10:49,519 --> 00:10:51,200
shutdown from the hmi this command's

350
00:10:51,200 --> 00:10:53,040
going to go to the plc this is in that

351
00:10:53,040 --> 00:10:55,120
insecure scenario and that timer in the

352
00:10:55,120 --> 00:10:58,079
hmi is going to start going off after

353
00:10:58,079 --> 00:11:00,160
a timer elapses it moves on to the

354
00:11:00,160 --> 00:11:01,760
second stage of the shutdown passes that

355
00:11:01,760 --> 00:11:04,079
command over to the plc again

356
00:11:04,079 --> 00:11:05,600
same action goes

357
00:11:05,600 --> 00:11:07,519
on to stage three and then enter your

358
00:11:07,519 --> 00:11:09,360
threat actor at this point and your

359
00:11:09,360 --> 00:11:11,200
threat actor then steps in and causes a

360
00:11:11,200 --> 00:11:13,600
denial of service attack to your hmis to

361
00:11:13,600 --> 00:11:15,360
your switches to your network and it

362
00:11:15,360 --> 00:11:16,640
doesn't even have to be a threat actor

363
00:11:16,640 --> 00:11:18,079
this can just be something weird happens

364
00:11:18,079 --> 00:11:19,920
on your network you have that finicky

365
00:11:19,920 --> 00:11:23,040
network you have uh device failure

366
00:11:23,040 --> 00:11:24,320
and since you're handling some of your

367
00:11:24,320 --> 00:11:27,600
control in your hmi you start actually

368
00:11:27,600 --> 00:11:29,120
if the right scenario happens at the

369
00:11:29,120 --> 00:11:30,560
right time now you're actually in a

370
00:11:30,560 --> 00:11:32,320
compromised situation where your

371
00:11:32,320 --> 00:11:34,000
compressor can't shut down properly and

372
00:11:34,000 --> 00:11:36,160
it's stuck in this third stage in this

373
00:11:36,160 --> 00:11:37,920
example

374
00:11:37,920 --> 00:11:39,279
so

375
00:11:39,279 --> 00:11:41,760
if you're doing fat or sat testing so

376
00:11:41,760 --> 00:11:43,279
factor acceptance or site acceptance

377
00:11:43,279 --> 00:11:44,720
testing you may not actually catch this

378
00:11:44,720 --> 00:11:46,000
scenario you may go through your whole

379
00:11:46,000 --> 00:11:47,680
testing scenario if you didn't go review

380
00:11:47,680 --> 00:11:50,720
all the logic you didn't specify how

381
00:11:50,720 --> 00:11:52,160
your vendors are supposed to program

382
00:11:52,160 --> 00:11:53,760
this you're going to go through entire

383
00:11:53,760 --> 00:11:56,000
safety testing and acceptance testing

384
00:11:56,000 --> 00:11:57,920
and not run into a problem at all and

385
00:11:57,920 --> 00:11:59,600
not even notice this scenario and it may

386
00:11:59,600 --> 00:12:02,240
be fine for years or decades but the

387
00:12:02,240 --> 00:12:03,600
when the right thing happens or the

388
00:12:03,600 --> 00:12:04,800
right timing happens you're going to

389
00:12:04,800 --> 00:12:06,079
have an event

390
00:12:06,079 --> 00:12:07,360
that can

391
00:12:07,360 --> 00:12:08,839
could be catastrophic depending on the

392
00:12:08,839 --> 00:12:10,800
scenarios and i can actually speak to

393
00:12:10,800 --> 00:12:12,399
this you may say this is really obvious

394
00:12:12,399 --> 00:12:14,160
not to do this well if you're early on

395
00:12:14,160 --> 00:12:15,519
in your programming career it's not

396
00:12:15,519 --> 00:12:17,040
always obvious because i've done this in

397
00:12:17,040 --> 00:12:19,600
the past i did it in hmi it worked fine

398
00:12:19,600 --> 00:12:21,279
while i was testing it for months and

399
00:12:21,279 --> 00:12:23,120
then one time when i was out on site

400
00:12:23,120 --> 00:12:24,720
doing my testing it was a well test

401
00:12:24,720 --> 00:12:26,079
where i had a number of wells flowing

402
00:12:26,079 --> 00:12:28,160
into a main treater and one that would

403
00:12:28,160 --> 00:12:30,079
flow into the well test and i had some

404
00:12:30,079 --> 00:12:31,279
controls that happened in each of mine

405
00:12:31,279 --> 00:12:32,480
when i clicked some stuff on the on the

406
00:12:32,480 --> 00:12:34,480
hmi it worked every single time except

407
00:12:34,480 --> 00:12:36,480
for when my scan times didn't line up so

408
00:12:36,480 --> 00:12:38,000
that you know the 100 times i tested

409
00:12:38,000 --> 00:12:39,440
before it was fine until i was sitting

410
00:12:39,440 --> 00:12:40,399
out there and they were about to start

411
00:12:40,399 --> 00:12:41,920
the facility up and it didn't work and i

412
00:12:41,920 --> 00:12:43,600
had last minute i had to make changes

413
00:12:43,600 --> 00:12:45,279
last minute and that could have been a

414
00:12:45,279 --> 00:12:47,360
problem that showed up you know months

415
00:12:47,360 --> 00:12:49,360
years down the line

416
00:12:49,360 --> 00:12:50,560
so you can only imagine trying to

417
00:12:50,560 --> 00:12:53,600
troubleshoot something like that

418
00:12:53,600 --> 00:12:55,360
so to do this properly we're gonna go

419
00:12:55,360 --> 00:12:56,560
through the exact same scenario the

420
00:12:56,560 --> 00:12:58,639
code's been moved over to the plc so you

421
00:12:58,639 --> 00:13:00,639
no longer have the code in hmi

422
00:13:00,639 --> 00:13:02,480
when that shutdown gets initiated it

423
00:13:02,480 --> 00:13:04,560
gets pushed over to the plc you go

424
00:13:04,560 --> 00:13:05,680
through the different stages and the

425
00:13:05,680 --> 00:13:07,760
different stage commands and it keeps

426
00:13:07,760 --> 00:13:09,600
bringing the process down you have the

427
00:13:09,600 --> 00:13:11,440
same thread actor step in

428
00:13:11,440 --> 00:13:12,880
you go through the same denial service

429
00:13:12,880 --> 00:13:14,480
attack but since all the code is in the

430
00:13:14,480 --> 00:13:15,760
plc it doesn't really matter what just

431
00:13:15,760 --> 00:13:17,040
happened to your network or those other

432
00:13:17,040 --> 00:13:18,800
devices you're still going to go through

433
00:13:18,800 --> 00:13:21,839
a safe shutdown phase

434
00:13:22,639 --> 00:13:24,320
all right so practice number six is

435
00:13:24,320 --> 00:13:26,320
validating the timers and counters

436
00:13:26,320 --> 00:13:27,760
so this has got a whole bunch of

437
00:13:27,760 --> 00:13:29,760
different angles on it uh and i'm

438
00:13:29,760 --> 00:13:31,200
actually gonna let you speak to this a

439
00:13:31,200 --> 00:13:32,880
little bit at the end of it

440
00:13:32,880 --> 00:13:34,880
but depending on the different areas of

441
00:13:34,880 --> 00:13:36,399
plcs you have depending on how they're

442
00:13:36,399 --> 00:13:38,800
programmed the key here is

443
00:13:38,800 --> 00:13:41,360
your timers and counters can end up

444
00:13:41,360 --> 00:13:43,199
outside of your normal operating ranges

445
00:13:43,199 --> 00:13:44,399
or expect ranges the way they're

446
00:13:44,399 --> 00:13:45,920
programmed either from somebody

447
00:13:45,920 --> 00:13:47,920
maliciously writing to it or some weird

448
00:13:47,920 --> 00:13:49,680
scenario happening in your plc where it

449
00:13:49,680 --> 00:13:52,000
stepped outside of that that time range

450
00:13:52,000 --> 00:13:53,920
so really the whole guidance here is to

451
00:13:53,920 --> 00:13:55,360
focus on all of your timers and counters

452
00:13:55,360 --> 00:13:56,720
in your plc you want to make sure you

453
00:13:56,720 --> 00:13:58,320
put guard rails in there and you make

454
00:13:58,320 --> 00:13:59,920
sure that those timers

455
00:13:59,920 --> 00:14:01,680
and counters cannot go outside of what

456
00:14:01,680 --> 00:14:03,279
their operating ranges are how are they

457
00:14:03,279 --> 00:14:06,320
designed to be put in there

458
00:14:06,320 --> 00:14:07,760
so

459
00:14:07,760 --> 00:14:08,959
really this is just improving the

460
00:14:08,959 --> 00:14:11,040
integrity of your plc and then we'll

461
00:14:11,040 --> 00:14:12,880
create a scenario where an attacker is

462
00:14:12,880 --> 00:14:16,079
able to step in and

463
00:14:16,880 --> 00:14:18,800
leverage the misconfiguration around

464
00:14:18,800 --> 00:14:20,399
this so the control scenario we'll have

465
00:14:20,399 --> 00:14:22,560
here is a high pressure shutdown delay

466
00:14:22,560 --> 00:14:24,320
timer so you may want to have a delay

467
00:14:24,320 --> 00:14:25,839
timer in your

468
00:14:25,839 --> 00:14:27,680
on your shutdown so that a quick blip

469
00:14:27,680 --> 00:14:29,279
doesn't shut you down you have so almost

470
00:14:29,279 --> 00:14:30,560
like it's almost like a dead band that's

471
00:14:30,560 --> 00:14:32,560
programmed in there and

472
00:14:32,560 --> 00:14:34,320
depending on your control schemes you

473
00:14:34,320 --> 00:14:36,079
may actually have it being a writable

474
00:14:36,079 --> 00:14:38,320
tag and it's not a hard-coded tag so the

475
00:14:38,320 --> 00:14:40,079
operators have a little bit of room to

476
00:14:40,079 --> 00:14:42,079
play with that on their own

477
00:14:42,079 --> 00:14:43,519
and so from an insecure coating

478
00:14:43,519 --> 00:14:44,480
standpoint

479
00:14:44,480 --> 00:14:45,920
you're going to have no guard rails

480
00:14:45,920 --> 00:14:47,920
included for the higher pressure

481
00:14:47,920 --> 00:14:49,920
shutdown delay timer and this your

482
00:14:49,920 --> 00:14:51,600
coating you are going to have

483
00:14:51,600 --> 00:14:54,560
the guardrails in there

484
00:14:54,639 --> 00:14:55,920
so

485
00:14:55,920 --> 00:14:57,680
in this case i actually tried to like

486
00:14:57,680 --> 00:14:59,440
pull it in to where it was more like a

487
00:14:59,440 --> 00:15:02,480
likely scenario so it's actually

488
00:15:02,480 --> 00:15:04,639
written in the specifications that the

489
00:15:04,639 --> 00:15:06,079
operator is not allowed to input more

490
00:15:06,079 --> 00:15:08,320
than 10 00 to 10 seconds in here so the

491
00:15:08,320 --> 00:15:10,000
hmi has actually got the guardrails

492
00:15:10,000 --> 00:15:11,440
programmed in its interface you have a

493
00:15:11,440 --> 00:15:14,000
restricted interface on the hmi but you

494
00:15:14,000 --> 00:15:15,920
don't own the plc and the and the tag in

495
00:15:15,920 --> 00:15:18,000
the plc is already set at 10 seconds so

496
00:15:18,000 --> 00:15:19,440
we're focused on the discharge pressure

497
00:15:19,440 --> 00:15:22,320
here and so when the operator steps in

498
00:15:22,320 --> 00:15:23,920
and goes to write you know a set point

499
00:15:23,920 --> 00:15:25,760
that's outside of the range the operator

500
00:15:25,760 --> 00:15:26,880
is going to be stopped because he hits a

501
00:15:26,880 --> 00:15:29,199
restricted interface on the hmi which is

502
00:15:29,199 --> 00:15:30,399
great and this is the way it gets

503
00:15:30,399 --> 00:15:32,079
programmable a lot of times because this

504
00:15:32,079 --> 00:15:34,240
is just honestly simpler you're still

505
00:15:34,240 --> 00:15:36,160
meeting design specs because they're not

506
00:15:36,160 --> 00:15:37,839
specific enough to tell you what device

507
00:15:37,839 --> 00:15:39,040
you need to be putting the restricted

508
00:15:39,040 --> 00:15:41,360
interface on so from a program an

509
00:15:41,360 --> 00:15:42,959
automation programming standpoint you

510
00:15:42,959 --> 00:15:43,920
think this is covering your

511
00:15:43,920 --> 00:15:45,600
specifications

512
00:15:45,600 --> 00:15:46,800
the issue lies is when you actually

513
00:15:46,800 --> 00:15:48,320
start getting thread actors in there

514
00:15:48,320 --> 00:15:51,040
again stepping in and let's say this

515
00:15:51,040 --> 00:15:52,560
thread actor steps in

516
00:15:52,560 --> 00:15:54,639
and let's say you even have network ids

517
00:15:54,639 --> 00:15:56,079
in place and you're watching for these

518
00:15:56,079 --> 00:15:58,079
attacks well this thread actor steps in

519
00:15:58,079 --> 00:16:00,240
and actually compromises your opc server

520
00:16:00,240 --> 00:16:01,839
and your pc server has already got a

521
00:16:01,839 --> 00:16:03,360
valid connection on your network to be

522
00:16:03,360 --> 00:16:04,800
able to connect to this plc and read and

523
00:16:04,800 --> 00:16:06,399
write tags say from a scada system or

524
00:16:06,399 --> 00:16:08,079
some external system that's pulling

525
00:16:08,079 --> 00:16:09,440
these values

526
00:16:09,440 --> 00:16:10,880
so you've already got a conduit that

527
00:16:10,880 --> 00:16:13,279
he's allowed to tackle attack

528
00:16:13,279 --> 00:16:14,560
you're not restricting at the right

529
00:16:14,560 --> 00:16:16,160
interface and he's able to sit here and

530
00:16:16,160 --> 00:16:17,839
attack this and write to the

531
00:16:17,839 --> 00:16:20,399
tag value

532
00:16:20,959 --> 00:16:23,440
so now that he's able to change that tag

533
00:16:23,440 --> 00:16:25,440
values within the plc

534
00:16:25,440 --> 00:16:26,800
when you actually get to that scenario

535
00:16:26,800 --> 00:16:28,639
where you have a high pressure alarm on

536
00:16:28,639 --> 00:16:30,079
this discharge you can over pressure the

537
00:16:30,079 --> 00:16:33,920
line because your time delay is too long

538
00:16:33,920 --> 00:16:35,680
and this can go into a lot more nuance

539
00:16:35,680 --> 00:16:36,880
when you start talking about it too

540
00:16:36,880 --> 00:16:39,600
because you can start diving into

541
00:16:39,600 --> 00:16:41,600
the way tags are handled within the plc

542
00:16:41,600 --> 00:16:43,360
and whether or not you're actually able

543
00:16:43,360 --> 00:16:44,240
to

544
00:16:44,240 --> 00:16:46,079
masquerade or hide what that tag value

545
00:16:46,079 --> 00:16:47,759
is in the plc and how sophisticated

546
00:16:47,759 --> 00:16:49,680
attack is but the point is when you're

547
00:16:49,680 --> 00:16:50,800
sitting here writing these external

548
00:16:50,800 --> 00:16:52,000
writes you don't it doesn't matter if

549
00:16:52,000 --> 00:16:54,000
you have security on your plc these two

550
00:16:54,000 --> 00:16:55,680
and you have like you have to log in to

551
00:16:55,680 --> 00:16:56,880
get to your interface this doesn't

552
00:16:56,880 --> 00:16:58,079
require them having the engineering

553
00:16:58,079 --> 00:16:59,920
software this just requires them to make

554
00:16:59,920 --> 00:17:01,680
a right at this they don't have to have

555
00:17:01,680 --> 00:17:03,360
a lot of knowledge about your process to

556
00:17:03,360 --> 00:17:04,799
just start poking at different tags or

557
00:17:04,799 --> 00:17:06,640
registers in your plc to cause something

558
00:17:06,640 --> 00:17:09,839
a scenario like this to happen

559
00:17:11,760 --> 00:17:13,919
so we'll inverse this and actually put

560
00:17:13,919 --> 00:17:15,679
it in the right programming or the more

561
00:17:15,679 --> 00:17:17,199
secure programming approach and that's

562
00:17:17,199 --> 00:17:18,799
moving the guardrails from the hmi to

563
00:17:18,799 --> 00:17:21,439
the plc so when you move the

564
00:17:21,439 --> 00:17:24,160
guardrails from the hmi to the plc

565
00:17:24,160 --> 00:17:25,439
the operator can still try to enter it

566
00:17:25,439 --> 00:17:27,280
from the hmi the hmi is not going to

567
00:17:27,280 --> 00:17:28,559
restrict it but when you get to the plc

568
00:17:28,559 --> 00:17:29,919
your plc is going to restrict what the

569
00:17:29,919 --> 00:17:31,760
acceptable values are

570
00:17:31,760 --> 00:17:33,440
when your threat actor steps in and does

571
00:17:33,440 --> 00:17:34,720
the right he's going to have the same

572
00:17:34,720 --> 00:17:35,760
issues

573
00:17:35,760 --> 00:17:38,160
and again even if your network ids tools

574
00:17:38,160 --> 00:17:39,760
are not capturing this and you have a

575
00:17:39,760 --> 00:17:41,919
valid path to it your plc is still going

576
00:17:41,919 --> 00:17:43,679
to stop it and not allow it to step out

577
00:17:43,679 --> 00:17:45,200
of bounds

578
00:17:45,200 --> 00:17:46,559
and then when your shutdown scenario

579
00:17:46,559 --> 00:17:47,679
happens you end up going through a safe

580
00:17:47,679 --> 00:17:50,080
shutdown

581
00:17:52,160 --> 00:17:53,760
actually i'll back this up and i think

582
00:17:53,760 --> 00:17:56,160
you've got we've got a couple examples

583
00:17:56,160 --> 00:17:57,679
yeah i mean there are many examples of

584
00:17:57,679 --> 00:18:00,000
timers encounters right

585
00:18:00,000 --> 00:18:01,919
what most people don't realize is and we

586
00:18:01,919 --> 00:18:03,600
think about a timer that goes up right

587
00:18:03,600 --> 00:18:05,679
so you know x number of seconds or you

588
00:18:05,679 --> 00:18:07,679
know y number of minutes later process

589
00:18:07,679 --> 00:18:09,679
starts or whatnot imagine a scenario

590
00:18:09,679 --> 00:18:12,320
where someone decreases that time right

591
00:18:12,320 --> 00:18:13,840
so you'll never get to the next step

592
00:18:13,840 --> 00:18:16,240
right it needs five seconds to activate

593
00:18:16,240 --> 00:18:18,240
something to go there i worked a long

594
00:18:18,240 --> 00:18:20,240
time in gas turbines and gas turbine

595
00:18:20,240 --> 00:18:22,320
maintenance cycle is depending on number

596
00:18:22,320 --> 00:18:24,400
of fired hours so imagine a situation

597
00:18:24,400 --> 00:18:26,400
where you know you have this complex

598
00:18:26,400 --> 00:18:28,880
calculation of what fuel was used how

599
00:18:28,880 --> 00:18:30,799
many megawatts you had on the load and

600
00:18:30,799 --> 00:18:33,039
how many hours of fired hours on diesel

601
00:18:33,039 --> 00:18:35,360
or or gas what not right so imagine a

602
00:18:35,360 --> 00:18:37,760
situation where someone forces a value

603
00:18:37,760 --> 00:18:39,120
right and that doesn't change so let's

604
00:18:39,120 --> 00:18:41,039
say it's five hours and doesn't change

605
00:18:41,039 --> 00:18:42,640
and over the next six months nobody

606
00:18:42,640 --> 00:18:45,679
notices it and suddenly your gas turbine

607
00:18:45,679 --> 00:18:48,080
is now at risk of destroying itself

608
00:18:48,080 --> 00:18:49,120
because you haven't maintained you

609
00:18:49,120 --> 00:18:50,720
haven't shut down you haven't done the

610
00:18:50,720 --> 00:18:52,640
due diligence on the next step so

611
00:18:52,640 --> 00:18:54,640
there's a lot to it in validating

612
00:18:54,640 --> 00:18:56,559
timeless encounters it's very critical

613
00:18:56,559 --> 00:18:59,520
that um what might be a simple timer and

614
00:18:59,520 --> 00:19:01,039
of course we're talking about putting

615
00:19:01,039 --> 00:19:02,880
the timers in the hmi versus putting the

616
00:19:02,880 --> 00:19:04,480
timers in the plc where it's a lot more

617
00:19:04,480 --> 00:19:06,720
accurate based on scan time but more

618
00:19:06,720 --> 00:19:09,120
importantly you always have to validate

619
00:19:09,120 --> 00:19:11,440
if the numbers are going the direction

620
00:19:11,440 --> 00:19:12,799
that they're supposed to right both

621
00:19:12,799 --> 00:19:14,480
timers and counters so

622
00:19:14,480 --> 00:19:16,400
yeah i already do it in the regular

623
00:19:16,400 --> 00:19:17,679
programming space but it's something we

624
00:19:17,679 --> 00:19:19,520
overlook within the automation space and

625
00:19:19,520 --> 00:19:22,320
then the plcs

626
00:19:22,799 --> 00:19:24,320
all right so practice number seven is

627
00:19:24,320 --> 00:19:26,000
validating paired inputs and outputs so

628
00:19:26,000 --> 00:19:27,760
when we talk about validating what is a

629
00:19:27,760 --> 00:19:29,919
paired input and what is a paired output

630
00:19:29,919 --> 00:19:31,840
so an example of paired inputs may be

631
00:19:31,840 --> 00:19:33,600
you have two limit switches on a valve

632
00:19:33,600 --> 00:19:35,600
on a control valve right you can't have

633
00:19:35,600 --> 00:19:38,080
both of those active at the same time so

634
00:19:38,080 --> 00:19:40,080
you can't have both the closed and the

635
00:19:40,080 --> 00:19:41,679
open

636
00:19:41,679 --> 00:19:43,440
signals on at the same time and if you

637
00:19:43,440 --> 00:19:45,120
do it either could be somebody being

638
00:19:45,120 --> 00:19:47,520
malicious or it could be equipment

639
00:19:47,520 --> 00:19:49,360
failure that's causing it

640
00:19:49,360 --> 00:19:50,720
when you're talking about paired outputs

641
00:19:50,720 --> 00:19:52,799
we may be talking about valve commands

642
00:19:52,799 --> 00:19:54,960
open to close or start and stop commands

643
00:19:54,960 --> 00:19:57,440
to a compressor

644
00:19:57,440 --> 00:19:58,880
and really the idea is you should be

645
00:19:58,880 --> 00:20:00,480
able to identify these early on in your

646
00:20:00,480 --> 00:20:02,159
programming practice

647
00:20:02,159 --> 00:20:04,400
what is a mutually exclusive paired

648
00:20:04,400 --> 00:20:07,760
input and output and be able to start

649
00:20:07,760 --> 00:20:09,679
either for inputs putting alarms around

650
00:20:09,679 --> 00:20:12,000
it and triggering a safe scenario when

651
00:20:12,000 --> 00:20:12,960
you're like all right my equipment's

652
00:20:12,960 --> 00:20:14,400
malfunctioning i need to move this to a

653
00:20:14,400 --> 00:20:15,679
safe state

654
00:20:15,679 --> 00:20:18,720
or for out outputs you want to make sure

655
00:20:18,720 --> 00:20:20,080
that those outputs can't go on at the

656
00:20:20,080 --> 00:20:22,400
same time and that whatever if they are

657
00:20:22,400 --> 00:20:23,600
going on at the same time something

658
00:20:23,600 --> 00:20:25,600
happens you have additional compensating

659
00:20:25,600 --> 00:20:27,840
like programmed controls in place to

660
00:20:27,840 --> 00:20:30,400
limit what could happen around that so

661
00:20:30,400 --> 00:20:33,039
from a control scenario

662
00:20:33,039 --> 00:20:35,039
we're gonna focus on the outputs because

663
00:20:35,039 --> 00:20:37,440
inputs are are fairly easy right from

664
00:20:37,440 --> 00:20:38,559
when you get two inputs that are

665
00:20:38,559 --> 00:20:40,240
mutually exclusive you're gonna alarm

666
00:20:40,240 --> 00:20:41,840
you're gonna want the operator to know

667
00:20:41,840 --> 00:20:43,039
and you wanna make sure you go into a

668
00:20:43,039 --> 00:20:45,120
safe state if you're in that or in that

669
00:20:45,120 --> 00:20:46,400
awkward scenario or if something's

670
00:20:46,400 --> 00:20:48,400
breaking and not functioning when you're

671
00:20:48,400 --> 00:20:49,919
talking about starting stopping a

672
00:20:49,919 --> 00:20:51,440
compressor or an output you have a

673
00:20:51,440 --> 00:20:53,280
little more control of how you program

674
00:20:53,280 --> 00:20:55,440
this and the type of states you can step

675
00:20:55,440 --> 00:20:56,720
into

676
00:20:56,720 --> 00:20:58,880
so from an insecure standpoint we're

677
00:20:58,880 --> 00:21:00,640
going to focus on these start and stop

678
00:21:00,640 --> 00:21:02,080
commands don't have any interlocks on

679
00:21:02,080 --> 00:21:03,760
them they don't have any time delays

680
00:21:03,760 --> 00:21:05,679
between the

681
00:21:05,679 --> 00:21:07,360
different or the between cycling between

682
00:21:07,360 --> 00:21:08,960
the starting and stopping

683
00:21:08,960 --> 00:21:10,240
and

684
00:21:10,240 --> 00:21:12,400
for the secure coding we're gonna end up

685
00:21:12,400 --> 00:21:13,840
having interlocks in there so you can't

686
00:21:13,840 --> 00:21:16,320
have both outputs on at the same time

687
00:21:16,320 --> 00:21:18,799
and if one does if you do go to a soft

688
00:21:18,799 --> 00:21:20,240
state there's going to be another

689
00:21:20,240 --> 00:21:22,559
interlock in there for a time delay so

690
00:21:22,559 --> 00:21:24,480
that you can't quickly toggle and on and

691
00:21:24,480 --> 00:21:26,080
off the motor or whatever output you're

692
00:21:26,080 --> 00:21:27,360
trying to

693
00:21:27,360 --> 00:21:29,360
trying to trigger

694
00:21:29,360 --> 00:21:30,559
so we're going to go back into that same

695
00:21:30,559 --> 00:21:32,240
scenario but we're going to refocus it

696
00:21:32,240 --> 00:21:34,559
on to the start and stop outputs so in

697
00:21:34,559 --> 00:21:36,000
this case we have

698
00:21:36,000 --> 00:21:37,520
two wires going out to it there's many

699
00:21:37,520 --> 00:21:38,799
different scenarios with different

700
00:21:38,799 --> 00:21:40,159
levels of wires and different ways

701
00:21:40,159 --> 00:21:41,360
they're controlled it really just

702
00:21:41,360 --> 00:21:42,640
depends on what was designed ahead of

703
00:21:42,640 --> 00:21:44,480
time what equipment you have out there

704
00:21:44,480 --> 00:21:45,760
but in this scenario we're going to

705
00:21:45,760 --> 00:21:47,360
actually start in the stopped state so

706
00:21:47,360 --> 00:21:48,720
you're actually in the safe stop state

707
00:21:48,720 --> 00:21:51,360
where this isn't supposed to be running

708
00:21:51,360 --> 00:21:53,919
and your thread actor steps in

709
00:21:53,919 --> 00:21:55,679
and it actually sits there and starts

710
00:21:55,679 --> 00:21:58,400
toggling on and off your start command

711
00:21:58,400 --> 00:21:59,919
and if you don't have any logic in there

712
00:21:59,919 --> 00:22:01,600
for interlocks or to be actually

713
00:22:01,600 --> 00:22:03,120
monitoring how what's happening on this

714
00:22:03,120 --> 00:22:05,039
other on the on both outputs if they

715
00:22:05,039 --> 00:22:06,799
both come on you can end up having both

716
00:22:06,799 --> 00:22:08,880
these outputs on the same time depending

717
00:22:08,880 --> 00:22:10,480
on how your vfd or whatever you're

718
00:22:10,480 --> 00:22:12,080
interfacing with for the compressor is

719
00:22:12,080 --> 00:22:13,600
or the different motor

720
00:22:13,600 --> 00:22:15,919
it could start and stop consistently and

721
00:22:15,919 --> 00:22:17,520
start damaging the motor or it could go

722
00:22:17,520 --> 00:22:19,520
into an internal failed state and if

723
00:22:19,520 --> 00:22:21,440
you're not monitoring that vfd or

724
00:22:21,440 --> 00:22:23,679
whatever the motor is you're talking to

725
00:22:23,679 --> 00:22:25,200
you may not know it's actually gone into

726
00:22:25,200 --> 00:22:27,760
a locked out state so even if they

727
00:22:27,760 --> 00:22:29,200
stopped triggering this on and off and

728
00:22:29,200 --> 00:22:31,039
it did protect itself the next time they

729
00:22:31,039 --> 00:22:32,720
try to start the process up it's going

730
00:22:32,720 --> 00:22:34,080
to end up having some sort of failed to

731
00:22:34,080 --> 00:22:35,760
start and not actually start when the

732
00:22:35,760 --> 00:22:37,919
plc is asking it to start again and

733
00:22:37,919 --> 00:22:39,039
that's going to lead to additional

734
00:22:39,039 --> 00:22:40,400
downtime it's going to lead to more

735
00:22:40,400 --> 00:22:41,679
troubleshooting they may have to call

736
00:22:41,679 --> 00:22:43,039
somebody out to come look at the

737
00:22:43,039 --> 00:22:45,520
diagnostics in the vfd to see why it's

738
00:22:45,520 --> 00:22:48,080
not running

739
00:22:48,559 --> 00:22:50,559
and so from a

740
00:22:50,559 --> 00:22:52,880
securely programmed plc practice or when

741
00:22:52,880 --> 00:22:54,240
you're implementing the items that we've

742
00:22:54,240 --> 00:22:56,640
kind of outlined in here

743
00:22:56,640 --> 00:22:58,720
you've actually got the interlocks in

744
00:22:58,720 --> 00:23:00,320
place so right now we're actually in a

745
00:23:00,320 --> 00:23:02,559
started position and the the compressor

746
00:23:02,559 --> 00:23:04,240
is running

747
00:23:04,240 --> 00:23:06,080
there are interlocks in place so that if

748
00:23:06,080 --> 00:23:07,679
the compressor does go to a stop point

749
00:23:07,679 --> 00:23:09,760
it's got to complete a full 120 seconds

750
00:23:09,760 --> 00:23:11,760
before it actually rolls over and will

751
00:23:11,760 --> 00:23:13,200
allow it to start again so even if you

752
00:23:13,200 --> 00:23:14,640
trigger stuff on and off it's not going

753
00:23:14,640 --> 00:23:15,679
to allow it to start and stop

754
00:23:15,679 --> 00:23:17,200
consistently potentially damaging

755
00:23:17,200 --> 00:23:18,400
equipment

756
00:23:18,400 --> 00:23:21,120
and if it goes into this the stop state

757
00:23:21,120 --> 00:23:22,400
it's going to be locked into that stop

758
00:23:22,400 --> 00:23:24,799
state for the full time that full time

759
00:23:24,799 --> 00:23:26,799
period and there is an interlock that it

760
00:23:26,799 --> 00:23:28,240
won't allow both outputs to go on at the

761
00:23:28,240 --> 00:23:30,480
same time so if the stop output does go

762
00:23:30,480 --> 00:23:32,240
on it's going to lock it into that 120

763
00:23:32,240 --> 00:23:34,400
seconds and not allow it to move into

764
00:23:34,400 --> 00:23:36,960
the start state so when the attacker

765
00:23:36,960 --> 00:23:38,799
goes in there and writes the start and

766
00:23:38,799 --> 00:23:40,640
stop commands on and off or modif pushes

767
00:23:40,640 --> 00:23:42,240
the code around and tries to force this

768
00:23:42,240 --> 00:23:44,320
into that position it's going to default

769
00:23:44,320 --> 00:23:46,240
to the safe state and the stop state and

770
00:23:46,240 --> 00:23:47,919
be locked in that for 120 seconds so if

771
00:23:47,919 --> 00:23:49,200
any of these is causing this for a long

772
00:23:49,200 --> 00:23:50,880
period of time you're gonna keep from

773
00:23:50,880 --> 00:23:53,200
damaging the equipment at that period in

774
00:23:53,200 --> 00:23:54,960
time and you should have some alarms

775
00:23:54,960 --> 00:23:55,919
around this too if some of these

776
00:23:55,919 --> 00:23:57,120
scenarios start happening if you start

777
00:23:57,120 --> 00:23:58,320
seeing any of these two come on at the

778
00:23:58,320 --> 00:23:59,679
same time so you know there's something

779
00:23:59,679 --> 00:24:04,120
to go diving into and investigate

780
00:24:05,760 --> 00:24:07,279
so just here's some examples from some

781
00:24:07,279 --> 00:24:08,559
of the code that was written on the back

782
00:24:08,559 --> 00:24:10,240
side that if anybody wants access to

783
00:24:10,240 --> 00:24:12,159
later we can give access to

784
00:24:12,159 --> 00:24:13,840
but

785
00:24:13,840 --> 00:24:15,679
the one on the left side here is

786
00:24:15,679 --> 00:24:17,039
actually where you're looking at that

787
00:24:17,039 --> 00:24:19,120
different code so once you've gone into

788
00:24:19,120 --> 00:24:20,640
the stop

789
00:24:20,640 --> 00:24:21,840
state

790
00:24:21,840 --> 00:24:24,799
and the stop command's been entered are

791
00:24:24,799 --> 00:24:27,279
been initialized internally

792
00:24:27,279 --> 00:24:29,360
it ends up energizing the output for the

793
00:24:29,360 --> 00:24:30,559
stop

794
00:24:30,559 --> 00:24:32,640
it's going to trigger a time delay and

795
00:24:32,640 --> 00:24:34,240
an interlock to not allow it to start

796
00:24:34,240 --> 00:24:37,760
again until that time delay is finished

797
00:24:37,760 --> 00:24:39,279
and so you have two separate interlocks

798
00:24:39,279 --> 00:24:41,039
sitting on the bottom one of them is to

799
00:24:41,039 --> 00:24:42,960
make sure that there's no stop happening

800
00:24:42,960 --> 00:24:45,520
at the same at any time and there is the

801
00:24:45,520 --> 00:24:47,200
time delay has been met and it's

802
00:24:47,200 --> 00:24:49,760
finished the timing

803
00:24:49,760 --> 00:24:51,600
on the right side there's just a good

804
00:24:51,600 --> 00:24:54,159
example here there's a set of

805
00:24:54,159 --> 00:24:56,640
well-defined comments in there in the

806
00:24:56,640 --> 00:24:58,400
plc so that anybody who's coming in and

807
00:24:58,400 --> 00:25:00,159
troubleshooting this later has good

808
00:25:00,159 --> 00:25:02,480
comments to go around and actually

809
00:25:02,480 --> 00:25:03,679
follow the code that's in place

810
00:25:03,679 --> 00:25:04,960
understand why it's there what's going

811
00:25:04,960 --> 00:25:06,240
on help them

812
00:25:06,240 --> 00:25:07,919
diagnose and troubleshoot

813
00:25:07,919 --> 00:25:09,279
adversity you could argue why would you

814
00:25:09,279 --> 00:25:10,960
want to put comments in the code because

815
00:25:10,960 --> 00:25:12,640
then it makes it easier for an attacker

816
00:25:12,640 --> 00:25:14,240
to figure out what's going on with the

817
00:25:14,240 --> 00:25:15,760
code the reality is you can't do

818
00:25:15,760 --> 00:25:17,600
security through obscurity and if you do

819
00:25:17,600 --> 00:25:18,960
a security through obscurity all you're

820
00:25:18,960 --> 00:25:20,080
going to do is probably cause the much

821
00:25:20,080 --> 00:25:22,000
more likely scenario of somebody from

822
00:25:22,000 --> 00:25:23,360
your maintenance team or someone from

823
00:25:23,360 --> 00:25:24,880
your integration team accidentally

824
00:25:24,880 --> 00:25:26,080
shutting something down or causing a

825
00:25:26,080 --> 00:25:27,200
different issue

826
00:25:27,200 --> 00:25:28,720
it's much less likely somebody's got

827
00:25:28,720 --> 00:25:31,039
into your code and is trying to engineer

828
00:25:31,039 --> 00:25:32,559
an attack and if they have i don't think

829
00:25:32,559 --> 00:25:33,919
comments are necessarily going to be the

830
00:25:33,919 --> 00:25:36,000
thing that stops them

831
00:25:36,000 --> 00:25:37,760
in the bottom is a just a screenshot

832
00:25:37,760 --> 00:25:39,520
from the hmi where we have a couple like

833
00:25:39,520 --> 00:25:40,960
just test scenarios where you can walk

834
00:25:40,960 --> 00:25:42,640
through a couple different wiring

835
00:25:42,640 --> 00:25:44,480
scenarios in there between single wire

836
00:25:44,480 --> 00:25:47,120
or dual wire outputs and kind of how the

837
00:25:47,120 --> 00:25:48,559
code would function so if you wanted to

838
00:25:48,559 --> 00:25:50,000
monitor the code and see how the code

839
00:25:50,000 --> 00:25:51,520
was written this would give you an

840
00:25:51,520 --> 00:25:53,120
interface to

841
00:25:53,120 --> 00:25:56,600
play with that

842
00:25:57,520 --> 00:25:58,640
all right so practice number eight is

843
00:25:58,640 --> 00:26:00,400
validating hmi input variables in the

844
00:26:00,400 --> 00:26:02,240
plc we kind of already went over this so

845
00:26:02,240 --> 00:26:03,360
i'll move through this pretty quick and

846
00:26:03,360 --> 00:26:04,799
just kind of bring up some additional

847
00:26:04,799 --> 00:26:06,880
peripheral items around it but this is

848
00:26:06,880 --> 00:26:09,120
really for like any input variables that

849
00:26:09,120 --> 00:26:12,159
come into the to the plc so think about

850
00:26:12,159 --> 00:26:14,000
set points in general like you're going

851
00:26:14,000 --> 00:26:14,880
to want to make sure you have a

852
00:26:14,880 --> 00:26:17,120
restricted interface within the plc not

853
00:26:17,120 --> 00:26:18,480
in the hmi

854
00:26:18,480 --> 00:26:19,760
program in the guardrails you want to

855
00:26:19,760 --> 00:26:21,279
make sure the guardrails are hard-coded

856
00:26:21,279 --> 00:26:23,279
and not tags you may think it's easier

857
00:26:23,279 --> 00:26:24,799
to write

858
00:26:24,799 --> 00:26:26,640
uh code where all everything's all this

859
00:26:26,640 --> 00:26:28,240
nice common tag format and everything's

860
00:26:28,240 --> 00:26:30,559
tags but if you don't restrict what the

861
00:26:30,559 --> 00:26:33,360
writing restrict it to not be a writable

862
00:26:33,360 --> 00:26:35,039
tag you still somebody can sit there and

863
00:26:35,039 --> 00:26:36,159
mess with your guardrails and change

864
00:26:36,159 --> 00:26:37,760
your guardrails without having to have

865
00:26:37,760 --> 00:26:39,600
access to your plc

866
00:26:39,600 --> 00:26:41,360
logic

867
00:26:41,360 --> 00:26:42,400
so

868
00:26:42,400 --> 00:26:45,520
you want to hard code in the guardrails

869
00:26:45,520 --> 00:26:46,960
and that will limit the attacker's

870
00:26:46,960 --> 00:26:49,600
ability with low knowledge just to write

871
00:26:49,600 --> 00:26:51,679
directly maliciously to the plc over

872
00:26:51,679 --> 00:26:53,360
approved channels without having to

873
00:26:53,360 --> 00:26:54,480
actually get into the code and

874
00:26:54,480 --> 00:26:55,520
understand the code and see what they're

875
00:26:55,520 --> 00:26:57,440
doing so this control center will go

876
00:26:57,440 --> 00:26:58,720
through is just going to be a high

877
00:26:58,720 --> 00:27:01,120
temperature shutdown in the insecure

878
00:27:01,120 --> 00:27:02,720
coding it'll be having the guardrails in

879
00:27:02,720 --> 00:27:04,400
the hmi and the

880
00:27:04,400 --> 00:27:06,240
secure coding it'll have the guardrails

881
00:27:06,240 --> 00:27:08,960
in the plc

882
00:27:11,120 --> 00:27:12,799
so same scenario right you go through

883
00:27:12,799 --> 00:27:15,279
that entering that set point

884
00:27:15,279 --> 00:27:16,880
the malicious actor can

885
00:27:16,880 --> 00:27:19,360
can step in and he can still write to it

886
00:27:19,360 --> 00:27:21,360
since it's it's happening outside of the

887
00:27:21,360 --> 00:27:24,000
outside of the hmi

888
00:27:24,000 --> 00:27:25,440
and one thing to note here we'll

889
00:27:25,440 --> 00:27:26,640
actually have some screenshots on this

890
00:27:26,640 --> 00:27:28,320
later too depending on the vintage of

891
00:27:28,320 --> 00:27:29,679
code you're writing on you could

892
00:27:29,679 --> 00:27:32,399
actually have the plc

893
00:27:32,399 --> 00:27:34,880
have multiple tags for the same type of

894
00:27:34,880 --> 00:27:37,600
variable so you could have plc to hmi

895
00:27:37,600 --> 00:27:40,799
hmi to plc and plc

896
00:27:40,799 --> 00:27:42,880
logic tags in there and so an attacker

897
00:27:42,880 --> 00:27:44,080
if you can already sit here and write to

898
00:27:44,080 --> 00:27:45,520
a lot of these tags even though he's

899
00:27:45,520 --> 00:27:46,960
changed the set points he can write to

900
00:27:46,960 --> 00:27:48,960
it in such a way that the hmi doesn't

901
00:27:48,960 --> 00:27:51,840
ever even see that this value is changed

902
00:27:51,840 --> 00:27:54,240
so depending on what your scenarios are

903
00:27:54,240 --> 00:27:56,640
too on how the logic or how this tag is

904
00:27:56,640 --> 00:27:58,240
moved around and what triggers it to

905
00:27:58,240 --> 00:27:59,600
move into these different variable

906
00:27:59,600 --> 00:28:01,360
points you actually can run into

907
00:28:01,360 --> 00:28:03,360
scenarios where you can definitely and

908
00:28:03,360 --> 00:28:05,440
it's it's hidden and masqueraded without

909
00:28:05,440 --> 00:28:06,880
even ever having to do a man in the

910
00:28:06,880 --> 00:28:09,600
middle attack

911
00:28:10,960 --> 00:28:12,399
so if you move into

912
00:28:12,399 --> 00:28:14,559
the secure coding approach this the

913
00:28:14,559 --> 00:28:16,399
secure coding approach is again moving

914
00:28:16,399 --> 00:28:18,159
the guardrails into the plc it

915
00:28:18,159 --> 00:28:19,679
definitely limits this

916
00:28:19,679 --> 00:28:21,279
how you move variables about if you have

917
00:28:21,279 --> 00:28:23,679
multiple tags you want to be careful how

918
00:28:23,679 --> 00:28:25,039
you're moving the variables about and

919
00:28:25,039 --> 00:28:26,240
thinking about

920
00:28:26,240 --> 00:28:29,200
that that they're always

921
00:28:29,200 --> 00:28:30,720
they're always congruent or always all

922
00:28:30,720 --> 00:28:32,720
the same and you don't have a weird

923
00:28:32,720 --> 00:28:34,000
scenario that can happen so you want to

924
00:28:34,000 --> 00:28:35,039
almost sit there and work through the

925
00:28:35,039 --> 00:28:36,960
different logic around that

926
00:28:36,960 --> 00:28:38,240
and so the same

927
00:28:38,240 --> 00:28:39,279
i'm not going to walk through this one

928
00:28:39,279 --> 00:28:40,480
again but this is the same approach

929
00:28:40,480 --> 00:28:42,240
where when you sit there and write these

930
00:28:42,240 --> 00:28:44,399
commands the plc is protecting you

931
00:28:44,399 --> 00:28:46,320
from that

932
00:28:46,320 --> 00:28:47,679
and depending on how you want to

933
00:28:47,679 --> 00:28:48,720
approach this

934
00:28:48,720 --> 00:28:50,720
every vendor every vintage every

935
00:28:50,720 --> 00:28:52,880
firmware version all have different ways

936
00:28:52,880 --> 00:28:54,399
to solve this problem so this isn't a

937
00:28:54,399 --> 00:28:56,159
prescriptive here's exactly how you do

938
00:28:56,159 --> 00:28:58,399
it some of these may have the you can

939
00:28:58,399 --> 00:29:00,000
limit the ranges within the variable

940
00:29:00,000 --> 00:29:01,520
itself some of them you have to program

941
00:29:01,520 --> 00:29:02,720
it in

942
00:29:02,720 --> 00:29:04,880
others you can limit what is a writable

943
00:29:04,880 --> 00:29:06,799
tag what is a writable tag some you may

944
00:29:06,799 --> 00:29:08,240
not

945
00:29:08,240 --> 00:29:10,320
someone may be able to limit who can

946
00:29:10,320 --> 00:29:11,600
write to it from where you can actually

947
00:29:11,600 --> 00:29:12,960
start even associating with different

948
00:29:12,960 --> 00:29:15,520
endpoints

949
00:29:17,679 --> 00:29:18,720
so

950
00:29:18,720 --> 00:29:20,240
this uh this is kind of just a

951
00:29:20,240 --> 00:29:22,799
screenshot from the

952
00:29:22,799 --> 00:29:24,880
sample code that we've got so what it

953
00:29:24,880 --> 00:29:27,520
does is it actually has some ways where

954
00:29:27,520 --> 00:29:28,799
you can actually sit there and see the

955
00:29:28,799 --> 00:29:30,159
different high and low range or the

956
00:29:30,159 --> 00:29:32,080
guard rails that were never hard coded

957
00:29:32,080 --> 00:29:33,360
and some of them

958
00:29:33,360 --> 00:29:34,480
in such a way that you can sit there and

959
00:29:34,480 --> 00:29:35,760
play with and see how much you can mess

960
00:29:35,760 --> 00:29:38,480
with it in in either scenario

961
00:29:38,480 --> 00:29:39,840
this is example i was talking about

962
00:29:39,840 --> 00:29:41,279
where you may have the three different

963
00:29:41,279 --> 00:29:42,240
tags

964
00:29:42,240 --> 00:29:44,480
so for the three different tags this one

965
00:29:44,480 --> 00:29:46,000
actually does its check before it does

966
00:29:46,000 --> 00:29:48,000
the move so when the variable's written

967
00:29:48,000 --> 00:29:50,559
to from the hmi the code first not shown

968
00:29:50,559 --> 00:29:52,480
here we'll go and check to see if that

969
00:29:52,480 --> 00:29:54,720
is a valid tag within the guardrails if

970
00:29:54,720 --> 00:29:56,480
it is a valid tag great it's going to do

971
00:29:56,480 --> 00:29:58,720
a move and it's going to move it to the

972
00:29:58,720 --> 00:30:00,320
internal tag that's used for all your

973
00:30:00,320 --> 00:30:02,080
safety or control logic

974
00:30:02,080 --> 00:30:03,840
and it'll do the same check before it

975
00:30:03,840 --> 00:30:05,919
moves it from the internal logic out to

976
00:30:05,919 --> 00:30:07,679
where the hmi is actually doing its read

977
00:30:07,679 --> 00:30:09,600
value so you have a handful of different

978
00:30:09,600 --> 00:30:11,520
tags happening here and depending on how

979
00:30:11,520 --> 00:30:13,520
you write this code as well can

980
00:30:13,520 --> 00:30:15,039
introduce additional scenarios where an

981
00:30:15,039 --> 00:30:16,480
attacker can leverage it if you aren't

982
00:30:16,480 --> 00:30:19,679
cautious about how you program the code

983
00:30:19,679 --> 00:30:21,679
and again it goes without saying that

984
00:30:21,679 --> 00:30:22,720
many of these different items we're

985
00:30:22,720 --> 00:30:24,159
talking about are not going to be

986
00:30:24,159 --> 00:30:26,240
captured during your typical fat sat

987
00:30:26,240 --> 00:30:27,840
testing so they're going to still go

988
00:30:27,840 --> 00:30:29,120
through all their safety tests and think

989
00:30:29,120 --> 00:30:30,880
they're just fine when they've done it

990
00:30:30,880 --> 00:30:32,640
but if you don't engineer this in on the

991
00:30:32,640 --> 00:30:35,120
front side

992
00:30:35,120 --> 00:30:36,720
you just have opportunities for almost a

993
00:30:36,720 --> 00:30:38,799
ticking time bomb to happen later

994
00:30:38,799 --> 00:30:40,399
like you would say logic bomb but it's

995
00:30:40,399 --> 00:30:44,158
not necessarily intentional no

996
00:30:44,640 --> 00:30:45,919
so at this point i'm going to hand it

997
00:30:45,919 --> 00:30:48,799
over to vic to continue thank you josh

998
00:30:48,799 --> 00:30:50,640
all right so by now you've been thinking

999
00:30:50,640 --> 00:30:52,320
is the attacker sophisticated not so

1000
00:30:52,320 --> 00:30:54,159
sophisticated i don't think it matters

1001
00:30:54,159 --> 00:30:55,679
right what we're trying to say is look

1002
00:30:55,679 --> 00:30:57,120
at all the scenarios for all the things

1003
00:30:57,120 --> 00:30:59,760
that happened in the past decade and and

1004
00:30:59,760 --> 00:31:01,919
see what things can be improved because

1005
00:31:01,919 --> 00:31:04,080
we're talking about improving plc right

1006
00:31:04,080 --> 00:31:07,760
plc programming and security is built in

1007
00:31:07,760 --> 00:31:11,039
and built in this idea of um engineering

1008
00:31:11,039 --> 00:31:13,440
practices best practices so this one is

1009
00:31:13,440 --> 00:31:14,960
a little bit more esoteric so instrument

1010
00:31:14,960 --> 00:31:16,320
for plausibility checks you might be

1011
00:31:16,320 --> 00:31:17,919
thinking well we're not going to add

1012
00:31:17,919 --> 00:31:19,440
instrumentation as part of plc

1013
00:31:19,440 --> 00:31:20,880
programming right that's not the

1014
00:31:20,880 --> 00:31:22,720
recommendation either but in general

1015
00:31:22,720 --> 00:31:24,640
most process

1016
00:31:24,640 --> 00:31:26,880
areas will have a lot of instruments

1017
00:31:26,880 --> 00:31:29,120
that have correlated or corresponding

1018
00:31:29,120 --> 00:31:30,960
readings so our example here is a

1019
00:31:30,960 --> 00:31:33,519
chemical tank but we have other examples

1020
00:31:33,519 --> 00:31:34,720
as well

1021
00:31:34,720 --> 00:31:36,799
the key is try to find out things that

1022
00:31:36,799 --> 00:31:38,080
are connected

1023
00:31:38,080 --> 00:31:40,320
by physics or chemistry right if

1024
00:31:40,320 --> 00:31:42,799
something has to burn and so the

1025
00:31:42,799 --> 00:31:45,760
temperature will increase right and

1026
00:31:45,760 --> 00:31:47,600
that's physics and chemistry so if you

1027
00:31:47,600 --> 00:31:49,360
burn something the temperature in there

1028
00:31:49,360 --> 00:31:51,360
should increase so the amount of fuel

1029
00:31:51,360 --> 00:31:53,200
that you put in a burner and the

1030
00:31:53,200 --> 00:31:55,360
temperature increase are correlated

1031
00:31:55,360 --> 00:31:56,880
right you can use that physics to

1032
00:31:56,880 --> 00:32:00,240
advantage right you can also say i'm

1033
00:32:00,240 --> 00:32:02,559
measuring pressure here and then i'm

1034
00:32:02,559 --> 00:32:04,640
increasing the pressure so and so but

1035
00:32:04,640 --> 00:32:06,880
downstream maybe at another level you

1036
00:32:06,880 --> 00:32:08,559
know after a valve or maybe after a

1037
00:32:08,559 --> 00:32:10,640
process the pressure there should also

1038
00:32:10,640 --> 00:32:12,640
increase right like after the process

1039
00:32:12,640 --> 00:32:14,720
and otherwise it's venting someplace

1040
00:32:14,720 --> 00:32:16,080
like the pressure increase here and the

1041
00:32:16,080 --> 00:32:17,600
pressure increase there

1042
00:32:17,600 --> 00:32:20,159
are correlated right that's the process

1043
00:32:20,159 --> 00:32:21,919
so use that to your advantage and that

1044
00:32:21,919 --> 00:32:24,640
does not need additional instrumentation

1045
00:32:24,640 --> 00:32:26,320
but you have existing instrumentation

1046
00:32:26,320 --> 00:32:29,039
that you can leverage for that so

1047
00:32:29,039 --> 00:32:30,480
that also gives you the advantage of

1048
00:32:30,480 --> 00:32:32,880
bringing process anomaly detection

1049
00:32:32,880 --> 00:32:34,799
natively in the plc because it has all

1050
00:32:34,799 --> 00:32:36,399
the inputs coming from the field

1051
00:32:36,399 --> 00:32:38,799
pressure flow temperature and so on and

1052
00:32:38,799 --> 00:32:41,120
then worst case even without the

1053
00:32:41,120 --> 00:32:43,519
security benefits it can enable quicker

1054
00:32:43,519 --> 00:32:45,600
identification of manipulated variables

1055
00:32:45,600 --> 00:32:48,080
so someone is manipulating one value and

1056
00:32:48,080 --> 00:32:50,399
not manipulating the other value and you

1057
00:32:50,399 --> 00:32:52,720
have some correlation logic you say oh

1058
00:32:52,720 --> 00:32:54,320
this is increasing but that's not so

1059
00:32:54,320 --> 00:32:56,720
something is wrong right or maybe this

1060
00:32:56,720 --> 00:32:58,320
one transmitter failed and that other

1061
00:32:58,320 --> 00:33:00,399
transmitter is correct so you say okay i

1062
00:33:00,399 --> 00:33:02,000
found something wrong then i found out

1063
00:33:02,000 --> 00:33:03,679
that this transmitter and there was

1064
00:33:03,679 --> 00:33:04,880
something wrong with the impulse line

1065
00:33:04,880 --> 00:33:07,360
for example right so in our example here

1066
00:33:07,360 --> 00:33:09,519
we use a chemical tank level and the

1067
00:33:09,519 --> 00:33:10,880
base case is

1068
00:33:10,880 --> 00:33:13,440
only monitored by a level transmitter so

1069
00:33:13,440 --> 00:33:15,440
you know if you have flow into the tank

1070
00:33:15,440 --> 00:33:16,960
level increases you know if you have a

1071
00:33:16,960 --> 00:33:19,519
drain then the level decreases simple

1072
00:33:19,519 --> 00:33:21,519
enough and

1073
00:33:21,519 --> 00:33:24,240
in the secure coding world you're using

1074
00:33:24,240 --> 00:33:26,080
an existing flow meter or flow

1075
00:33:26,080 --> 00:33:28,000
transmitter in both the inlet and the

1076
00:33:28,000 --> 00:33:30,799
outlet if they so happen to exist right

1077
00:33:30,799 --> 00:33:32,799
utilize them to say

1078
00:33:32,799 --> 00:33:34,720
let's correlate these two right so in

1079
00:33:34,720 --> 00:33:38,399
the attack scenario someone is forcing

1080
00:33:38,399 --> 00:33:41,679
a low value for the for the tank level

1081
00:33:41,679 --> 00:33:44,240
but the tank level is increasing so

1082
00:33:44,240 --> 00:33:46,159
you might have an overflow condition or

1083
00:33:46,159 --> 00:33:48,480
some kind of discharge similarly in

1084
00:33:48,480 --> 00:33:50,320
another situation maybe they force the

1085
00:33:50,320 --> 00:33:52,000
value to the existing whatever high

1086
00:33:52,000 --> 00:33:54,000
value and then it's draining and you

1087
00:33:54,000 --> 00:33:55,600
wouldn't know that you're losing liquid

1088
00:33:55,600 --> 00:33:57,120
or you're draining liquid

1089
00:33:57,120 --> 00:33:58,960
an environmental issue or some other

1090
00:33:58,960 --> 00:34:01,120
problem right

1091
00:34:01,120 --> 00:34:03,039
so in this pictorial what we're trying

1092
00:34:03,039 --> 00:34:06,240
to say is look at the level 77 right 77

1093
00:34:06,240 --> 00:34:08,159
percent of the tank is full and you have

1094
00:34:08,159 --> 00:34:10,320
an inlet valve and sorry for the

1095
00:34:10,320 --> 00:34:12,879
depiction we're using a crude hmi for

1096
00:34:12,879 --> 00:34:15,599
this right so the the valve

1097
00:34:15,599 --> 00:34:16,480
um

1098
00:34:16,480 --> 00:34:19,440
is green it's open and you have this ft1

1099
00:34:19,440 --> 00:34:22,239
the flow going in and as long as the

1100
00:34:22,239 --> 00:34:24,879
bottom right drain is closed uh there

1101
00:34:24,879 --> 00:34:27,280
will be no flow ft2 would not have any

1102
00:34:27,280 --> 00:34:29,760
flow in it but then you can integrate

1103
00:34:29,760 --> 00:34:33,119
the flow going in from ft1 and and

1104
00:34:33,119 --> 00:34:35,280
correlate that with the level you say i

1105
00:34:35,280 --> 00:34:37,119
had this much flow for an hour so the

1106
00:34:37,119 --> 00:34:39,040
tank level should increase this much

1107
00:34:39,040 --> 00:34:41,359
right what that is is a function so as a

1108
00:34:41,359 --> 00:34:43,199
controls engineer you have to work with

1109
00:34:43,199 --> 00:34:44,719
your process engineer to say what the

1110
00:34:44,719 --> 00:34:46,320
function is right what instrumentation

1111
00:34:46,320 --> 00:34:47,918
is available look at your p and id

1112
00:34:47,918 --> 00:34:49,359
diagrams and look at all the

1113
00:34:49,359 --> 00:34:51,359
instrumentation available and say i this

1114
00:34:51,359 --> 00:34:52,800
is critical this particular loop is

1115
00:34:52,800 --> 00:34:54,239
critical and you don't want to do this

1116
00:34:54,239 --> 00:34:56,079
for every single instrument every single

1117
00:34:56,079 --> 00:34:58,640
process right but in general you ask the

1118
00:34:58,640 --> 00:35:00,560
question hey i want to have a

1119
00:35:00,560 --> 00:35:01,760
verification of what other

1120
00:35:01,760 --> 00:35:03,200
instrumentation is available for me to

1121
00:35:03,200 --> 00:35:05,200
do that so in this case the process

1122
00:35:05,200 --> 00:35:08,160
engineer will say yep ft1 ft2 i can give

1123
00:35:08,160 --> 00:35:10,079
you the model i can tell you how these

1124
00:35:10,079 --> 00:35:11,359
things are correlated with the level

1125
00:35:11,359 --> 00:35:12,720
right depending on the condition the

1126
00:35:12,720 --> 00:35:14,480
fluid the tank volume all that good

1127
00:35:14,480 --> 00:35:16,400
stuff that's easy enough like they do

1128
00:35:16,400 --> 00:35:18,480
this all the time so ask that person for

1129
00:35:18,480 --> 00:35:20,160
that and then you can verify right so

1130
00:35:20,160 --> 00:35:21,359
once you come up with a function you

1131
00:35:21,359 --> 00:35:23,280
compare you say

1132
00:35:23,280 --> 00:35:25,440
as a function of this flow on the inlet

1133
00:35:25,440 --> 00:35:27,359
flow in the outlet the level increase or

1134
00:35:27,359 --> 00:35:29,119
degree should be this you come up with

1135
00:35:29,119 --> 00:35:31,359
that logic and you put that in the plc

1136
00:35:31,359 --> 00:35:32,960
imagine a scenario where an attacker is

1137
00:35:32,960 --> 00:35:35,200
trying to force a level condition so

1138
00:35:35,200 --> 00:35:36,800
let's say they're trying to force that

1139
00:35:36,800 --> 00:35:39,839
77 to 100 or to zero whichever the case

1140
00:35:39,839 --> 00:35:42,640
might be then they have to also force

1141
00:35:42,640 --> 00:35:45,200
both ft1 and ft2 and they need to know

1142
00:35:45,200 --> 00:35:46,480
the model right so they need to be on

1143
00:35:46,480 --> 00:35:48,720
your network for a long time understand

1144
00:35:48,720 --> 00:35:50,800
how your process works and then you're

1145
00:35:50,800 --> 00:35:52,560
making it much more difficult for them

1146
00:35:52,560 --> 00:35:53,839
because they're having to come up with

1147
00:35:53,839 --> 00:35:56,000
the scenario and force that many more

1148
00:35:56,000 --> 00:35:58,079
values in a way that doesn't trigger

1149
00:35:58,079 --> 00:36:00,640
this alarm right otherwise it'll easily

1150
00:36:00,640 --> 00:36:02,240
come up with some something is wrong and

1151
00:36:02,240 --> 00:36:03,599
then you can troubleshoot you can figure

1152
00:36:03,599 --> 00:36:05,280
out we don't call it forensics in our

1153
00:36:05,280 --> 00:36:06,480
world right you investigate you

1154
00:36:06,480 --> 00:36:08,400
troubleshoot and you figure out if

1155
00:36:08,400 --> 00:36:09,520
something is wrong with the flow

1156
00:36:09,520 --> 00:36:11,920
transmitters or other level transmitter

1157
00:36:11,920 --> 00:36:13,280
for that matter or if someone is trying

1158
00:36:13,280 --> 00:36:15,119
to manipulate the value so

1159
00:36:15,119 --> 00:36:16,160
using

1160
00:36:16,160 --> 00:36:18,000
process existing instrumentation to your

1161
00:36:18,000 --> 00:36:19,680
advantage because

1162
00:36:19,680 --> 00:36:21,839
none of this requires additional machine

1163
00:36:21,839 --> 00:36:24,320
learning or advanced ai right this this

1164
00:36:24,320 --> 00:36:26,800
logic is very simple straightforward to

1165
00:36:26,800 --> 00:36:30,560
be implemented in the plc itself

1166
00:36:30,880 --> 00:36:34,160
next one is validating i'm sorry

1167
00:36:34,160 --> 00:36:36,000
sorry

1168
00:36:36,000 --> 00:36:39,000
absolutely

1169
00:36:40,560 --> 00:36:42,480
uh executed a man-in-the-middle attack

1170
00:36:42,480 --> 00:36:44,480
so i'm not actually seeing on the hmi

1171
00:36:44,480 --> 00:36:47,280
what's really going on

1172
00:36:47,280 --> 00:36:49,520
all right the question is does it assume

1173
00:36:49,520 --> 00:36:52,240
that the attacker has not already gotten

1174
00:36:52,240 --> 00:36:53,680
in is not doing a man in the middle

1175
00:36:53,680 --> 00:36:55,839
attack right there are many scenarios to

1176
00:36:55,839 --> 00:36:57,359
answer your question there are many

1177
00:36:57,359 --> 00:36:58,800
scenarios about replay attacks for

1178
00:36:58,800 --> 00:37:00,400
example and we know how this has

1179
00:37:00,400 --> 00:37:02,000
happened in the past where someone

1180
00:37:02,000 --> 00:37:03,280
records the whole

1181
00:37:03,280 --> 00:37:05,119
uh you know process for like an hour and

1182
00:37:05,119 --> 00:37:07,119
then replay the next hour that's

1183
00:37:07,119 --> 00:37:09,280
possible we have many practices here

1184
00:37:09,280 --> 00:37:11,440
that can address each component of it

1185
00:37:11,440 --> 00:37:13,280
right in this particular case in this

1186
00:37:13,280 --> 00:37:15,200
scenario we're talking about someone

1187
00:37:15,200 --> 00:37:16,880
that's trying to force

1188
00:37:16,880 --> 00:37:19,280
one or two values right not all the

1189
00:37:19,280 --> 00:37:21,920
values simultaneously so

1190
00:37:21,920 --> 00:37:23,359
that's the other advantage of all these

1191
00:37:23,359 --> 00:37:25,599
20 practices is that each one of them

1192
00:37:25,599 --> 00:37:27,440
tries to address a particular component

1193
00:37:27,440 --> 00:37:29,520
or maybe a couple and then implementing

1194
00:37:29,520 --> 00:37:31,359
many of these over

1195
00:37:31,359 --> 00:37:32,960
your whole logic gets you the

1196
00:37:32,960 --> 00:37:34,560
destination that you want so we have

1197
00:37:34,560 --> 00:37:37,440
many practices here that also will alert

1198
00:37:37,440 --> 00:37:39,520
if someone is trying to do a

1199
00:37:39,520 --> 00:37:41,359
replay type attack

1200
00:37:41,359 --> 00:37:43,280
but in this particular case it's just

1201
00:37:43,280 --> 00:37:45,520
making it difficult for an attacker just

1202
00:37:45,520 --> 00:37:47,280
to get away with forcing one thing or

1203
00:37:47,280 --> 00:37:49,119
two things because there are many other

1204
00:37:49,119 --> 00:37:51,119
interlocks to compare that this process

1205
00:37:51,119 --> 00:37:53,280
value shouldn't be this at this moment

1206
00:37:53,280 --> 00:37:54,640
because the others are saying something

1207
00:37:54,640 --> 00:37:56,879
else

1208
00:37:57,520 --> 00:37:59,520
next one is uh validating inputs for

1209
00:37:59,520 --> 00:38:01,520
physical plausibility this is also

1210
00:38:01,520 --> 00:38:03,119
related right so the previous one was

1211
00:38:03,119 --> 00:38:05,920
about you know checking uh two different

1212
00:38:05,920 --> 00:38:07,599
things to compare and say does it make

1213
00:38:07,599 --> 00:38:09,680
sense in this case it's going one step

1214
00:38:09,680 --> 00:38:11,280
further to say is even physically

1215
00:38:11,280 --> 00:38:13,680
possible right um

1216
00:38:13,680 --> 00:38:15,839
we'll take a recent example about the

1217
00:38:15,839 --> 00:38:17,440
you know florida old smart situation

1218
00:38:17,440 --> 00:38:18,960
where someone was trying to enter a big

1219
00:38:18,960 --> 00:38:20,880
value we have many practices

1220
00:38:20,880 --> 00:38:22,160
recommendations where we talk about

1221
00:38:22,160 --> 00:38:24,560
validating inputs and set points and

1222
00:38:24,560 --> 00:38:26,720
putting that in the plc but even taking

1223
00:38:26,720 --> 00:38:28,480
a step back and thinking

1224
00:38:28,480 --> 00:38:31,520
if i enter 10 000 what is the process

1225
00:38:31,520 --> 00:38:34,480
doing can the process actually dose 10

1226
00:38:34,480 --> 00:38:35,839
000

1227
00:38:35,839 --> 00:38:37,760
maybe it cannot because you size the

1228
00:38:37,760 --> 00:38:39,359
valves you size the flow lines you

1229
00:38:39,359 --> 00:38:42,160
decide the tanks you size the chemical

1230
00:38:42,160 --> 00:38:44,800
to do certain things right and maybe

1231
00:38:44,800 --> 00:38:47,119
even the worst case dosing can only be

1232
00:38:47,119 --> 00:38:49,920
100 ppm per minute

1233
00:38:49,920 --> 00:38:52,079
possible right then that should be your

1234
00:38:52,079 --> 00:38:54,079
physical limit for all the numbers right

1235
00:38:54,079 --> 00:38:56,400
you should never code something in there

1236
00:38:56,400 --> 00:38:59,040
that is physically not possible so it's

1237
00:38:59,040 --> 00:39:00,720
one thing to validate let's say a

1238
00:39:00,720 --> 00:39:03,200
transmitter range is 0 to 10 psi and you

1239
00:39:03,200 --> 00:39:05,680
validate it for 0 to 10 psi but your

1240
00:39:05,680 --> 00:39:08,000
process if the process cannot go beyond

1241
00:39:08,000 --> 00:39:10,640
5 psi that should be your actual limits

1242
00:39:10,640 --> 00:39:12,640
don't ever code anything in there that

1243
00:39:12,640 --> 00:39:15,200
would need or enter a value even

1244
00:39:15,200 --> 00:39:17,280
possibly to get to more than the five

1245
00:39:17,280 --> 00:39:18,320
right

1246
00:39:18,320 --> 00:39:20,640
so our example here in this case

1247
00:39:20,640 --> 00:39:22,560
we have many variations of this example

1248
00:39:22,560 --> 00:39:24,960
right so you can use the set points

1249
00:39:24,960 --> 00:39:26,720
example you can see the physical

1250
00:39:26,720 --> 00:39:29,200
possibility for a process

1251
00:39:29,200 --> 00:39:31,760
we'll take a gate example right

1252
00:39:31,760 --> 00:39:34,400
a physical gate or a dam or a valve or

1253
00:39:34,400 --> 00:39:36,720
anything has a certain time period for

1254
00:39:36,720 --> 00:39:38,720
opening and certainly for closing

1255
00:39:38,720 --> 00:39:41,200
depending on the solenoid air pressure

1256
00:39:41,200 --> 00:39:43,359
the type of diaphragm all the physical

1257
00:39:43,359 --> 00:39:46,480
things that you size for in the process

1258
00:39:46,480 --> 00:39:48,960
it takes time right so in our example a

1259
00:39:48,960 --> 00:39:50,720
dam takes you know the gate takes five

1260
00:39:50,720 --> 00:39:52,720
minutes to open in the base case

1261
00:39:52,720 --> 00:39:55,280
scenario there's no alert for something

1262
00:39:55,280 --> 00:39:57,200
that's opening late you know it took six

1263
00:39:57,200 --> 00:39:59,839
minutes or ten minutes or

1264
00:39:59,839 --> 00:40:02,000
the scenario when it opened too quickly

1265
00:40:02,000 --> 00:40:04,079
and that's fairly common in an attack

1266
00:40:04,079 --> 00:40:05,440
scenario where someone is just trying to

1267
00:40:05,440 --> 00:40:06,960
force a bunch of values right maybe

1268
00:40:06,960 --> 00:40:09,119
modbus or opc like you mentioned you can

1269
00:40:09,119 --> 00:40:11,200
always force things and you can issue a

1270
00:40:11,200 --> 00:40:12,640
command to a valve

1271
00:40:12,640 --> 00:40:14,079
but then

1272
00:40:14,079 --> 00:40:16,160
force the open switch to say no it's

1273
00:40:16,160 --> 00:40:18,960
still zero so it's not open right so

1274
00:40:18,960 --> 00:40:21,839
in the secure programming world you've

1275
00:40:21,839 --> 00:40:23,839
configured in such a way to say okay if

1276
00:40:23,839 --> 00:40:26,640
i issue a command and this gate should

1277
00:40:26,640 --> 00:40:28,960
open in five minutes i'll have an alert

1278
00:40:28,960 --> 00:40:30,880
if it doesn't open in five minutes

1279
00:40:30,880 --> 00:40:33,280
similarly the one thing that most people

1280
00:40:33,280 --> 00:40:35,920
do not consider the scenario is

1281
00:40:35,920 --> 00:40:37,680
the opposite meaning it opened too

1282
00:40:37,680 --> 00:40:39,760
quickly right it opened in one minute

1283
00:40:39,760 --> 00:40:41,359
this gate should take five minutes to

1284
00:40:41,359 --> 00:40:42,640
open because of the process the

1285
00:40:42,640 --> 00:40:44,720
condition the piston the whole thing but

1286
00:40:44,720 --> 00:40:46,640
it only took one minute to open

1287
00:40:46,640 --> 00:40:48,560
uh it could be a failure something just

1288
00:40:48,560 --> 00:40:49,839
you know popped up and then the whole

1289
00:40:49,839 --> 00:40:51,520
thing you know open fail open it's

1290
00:40:51,520 --> 00:40:53,920
possible or again a malicious attacker

1291
00:40:53,920 --> 00:40:56,079
is trying to use a replay attack or

1292
00:40:56,079 --> 00:40:58,160
something from another scenario and use

1293
00:40:58,160 --> 00:41:00,960
it here right so it opened too quickly

1294
00:41:00,960 --> 00:41:01,760
so

1295
00:41:01,760 --> 00:41:05,040
consider both both those examples so

1296
00:41:05,040 --> 00:41:06,640
again i'm using some of the graphics

1297
00:41:06,640 --> 00:41:08,079
from the past

1298
00:41:08,079 --> 00:41:10,720
examples from josh uh attacker is trying

1299
00:41:10,720 --> 00:41:13,200
to manipulate the plc values he's trying

1300
00:41:13,200 --> 00:41:15,839
to say you know i'm opening the val but

1301
00:41:15,839 --> 00:41:17,920
you know i'm not letting the open switch

1302
00:41:17,920 --> 00:41:19,520
activate so the open switch is going to

1303
00:41:19,520 --> 00:41:22,880
show zero right in in our condition in

1304
00:41:22,880 --> 00:41:24,880
this example if you open the valve the

1305
00:41:24,880 --> 00:41:27,760
level keeps increasing right and we had

1306
00:41:27,760 --> 00:41:29,520
other examples before we talk about how

1307
00:41:29,520 --> 00:41:31,359
you can compare physical characteristics

1308
00:41:31,359 --> 00:41:33,359
and making sure that level is accurate

1309
00:41:33,359 --> 00:41:35,200
comparing to flow but let's say you

1310
00:41:35,200 --> 00:41:38,000
don't have it and this level increases

1311
00:41:38,000 --> 00:41:39,599
and you don't know why it's increasing

1312
00:41:39,599 --> 00:41:42,240
because you did not see the valve open

1313
00:41:42,240 --> 00:41:44,640
right but if you had programmed it with

1314
00:41:44,640 --> 00:41:47,599
this example you would have an alert for

1315
00:41:47,599 --> 00:41:50,000
hey i shoot an open command to the valve

1316
00:41:50,000 --> 00:41:53,200
and it did not open so that too slow to

1317
00:41:53,200 --> 00:41:55,280
open or too fast to open to consider

1318
00:41:55,280 --> 00:41:56,720
again you wouldn't want to do this for

1319
00:41:56,720 --> 00:41:58,160
every single

1320
00:41:58,160 --> 00:41:59,839
application but you have to consider

1321
00:41:59,839 --> 00:42:01,599
your process to say which ones are

1322
00:42:01,599 --> 00:42:03,839
critical which ones are

1323
00:42:03,839 --> 00:42:05,040
you know safety critical for your

1324
00:42:05,040 --> 00:42:06,960
process what's important for me to not

1325
00:42:06,960 --> 00:42:07,839
lose

1326
00:42:07,839 --> 00:42:09,440
maybe the fluid or you know cause any

1327
00:42:09,440 --> 00:42:12,640
other environmental conditions

1328
00:42:13,920 --> 00:42:16,000
so again just a pictorial of the graph

1329
00:42:16,000 --> 00:42:17,760
that we have in our

1330
00:42:17,760 --> 00:42:19,920
programming here so

1331
00:42:19,920 --> 00:42:21,680
like josh mentioned we added some notes

1332
00:42:21,680 --> 00:42:23,359
in there so those of you that are

1333
00:42:23,359 --> 00:42:24,960
security people are not programming

1334
00:42:24,960 --> 00:42:27,760
people if you want to

1335
00:42:27,760 --> 00:42:29,599
let some of your engineering folks

1336
00:42:29,599 --> 00:42:31,200
understand this you know let us know

1337
00:42:31,200 --> 00:42:32,960
we'll send this to them they'll get it

1338
00:42:32,960 --> 00:42:34,400
because we try to program with enough

1339
00:42:34,400 --> 00:42:35,920
notes so that they understand what the

1340
00:42:35,920 --> 00:42:38,079
intent behind the programming practices

1341
00:42:38,079 --> 00:42:39,440
and then i know how it's actually

1342
00:42:39,440 --> 00:42:42,000
implemented

1343
00:42:42,079 --> 00:42:44,240
next up disable unused ports and

1344
00:42:44,240 --> 00:42:46,480
protocols so again i guess in the it

1345
00:42:46,480 --> 00:42:47,839
world it's pretty straightforward right

1346
00:42:47,839 --> 00:42:49,680
so you know you use certain protocols

1347
00:42:49,680 --> 00:42:52,000
and you disable the others ipv6 for

1348
00:42:52,000 --> 00:42:53,280
example

1349
00:42:53,280 --> 00:42:55,040
in our world multiple communication

1350
00:42:55,040 --> 00:42:56,960
protocols could be enabled by default on

1351
00:42:56,960 --> 00:42:58,560
a lot of things because

1352
00:42:58,560 --> 00:43:00,880
especially when a platform has support

1353
00:43:00,880 --> 00:43:02,800
for multiple protocols

1354
00:43:02,800 --> 00:43:05,760
for an engineering firm for a

1355
00:43:05,760 --> 00:43:07,839
integrator it's a lot easier for them to

1356
00:43:07,839 --> 00:43:09,599
keep everything open right that way they

1357
00:43:09,599 --> 00:43:11,440
can configure whichever they want

1358
00:43:11,440 --> 00:43:12,640
whatever the

1359
00:43:12,640 --> 00:43:14,640
conditions might be and then in some

1360
00:43:14,640 --> 00:43:17,920
cases um they actually recommend keeping

1361
00:43:17,920 --> 00:43:19,920
everything open so that they don't have

1362
00:43:19,920 --> 00:43:21,200
to go troubleshoot later on like

1363
00:43:21,200 --> 00:43:22,400
something is not working and it's

1364
00:43:22,400 --> 00:43:24,400
available you can log in remotely for

1365
00:43:24,400 --> 00:43:26,560
example and get get it going but the

1366
00:43:26,560 --> 00:43:28,400
recommendation from this practice is

1367
00:43:28,400 --> 00:43:30,160
disable all the portion protocols that

1368
00:43:30,160 --> 00:43:32,079
are not required right seems

1369
00:43:32,079 --> 00:43:33,680
straightforward but a lot of people

1370
00:43:33,680 --> 00:43:34,720
don't do it

1371
00:43:34,720 --> 00:43:36,240
so

1372
00:43:36,240 --> 00:43:38,319
the key is to come up with a

1373
00:43:38,319 --> 00:43:40,560
you know a pictorial representation

1374
00:43:40,560 --> 00:43:42,560
where you clearly show

1375
00:43:42,560 --> 00:43:44,079
all the ports and protocols that are

1376
00:43:44,079 --> 00:43:45,680
actually required enabled and use and

1377
00:43:45,680 --> 00:43:47,920
disable all the others if possible it

1378
00:43:47,920 --> 00:43:49,920
has multiple advantage in security so if

1379
00:43:49,920 --> 00:43:51,839
you give it to the sock for example if

1380
00:43:51,839 --> 00:43:54,240
they're doing level one support and they

1381
00:43:54,240 --> 00:43:56,800
know that they're seeing this traffic

1382
00:43:56,800 --> 00:43:58,240
that's on the protocol that is not

1383
00:43:58,240 --> 00:44:00,160
supported not required that's an easy

1384
00:44:00,160 --> 00:44:01,520
alert for them that someone is actually

1385
00:44:01,520 --> 00:44:03,760
trying to manipulate right usually

1386
00:44:03,760 --> 00:44:05,359
communication on a different protocol

1387
00:44:05,359 --> 00:44:07,599
wouldn't happen by accident so that's a

1388
00:44:07,599 --> 00:44:10,000
red alert you know easy to understand

1389
00:44:10,000 --> 00:44:12,400
what's going on and then dig further in

1390
00:44:12,400 --> 00:44:14,560
and then also um you know some of the

1391
00:44:14,560 --> 00:44:16,640
side benefits besides security and

1392
00:44:16,640 --> 00:44:18,319
malformed traffic if you have a big

1393
00:44:18,319 --> 00:44:20,240
network where you know maybe one plc

1394
00:44:20,240 --> 00:44:22,560
requires a certain protocol

1395
00:44:22,560 --> 00:44:25,839
for an operation the other plc doesn't

1396
00:44:25,839 --> 00:44:27,680
the packets from the first will not

1397
00:44:27,680 --> 00:44:29,280
influence the second one that way you

1398
00:44:29,280 --> 00:44:31,520
keep it clean there's no

1399
00:44:31,520 --> 00:44:33,760
reason why the second plc i will get

1400
00:44:33,760 --> 00:44:35,200
confused with this previous protocol

1401
00:44:35,200 --> 00:44:36,960
that's not in use and maybe crash right

1402
00:44:36,960 --> 00:44:39,119
so that that is one advantage and then

1403
00:44:39,119 --> 00:44:41,359
reducing the overall complexity in your

1404
00:44:41,359 --> 00:44:43,359
situation if you're using only you know

1405
00:44:43,359 --> 00:44:45,440
modbus and if you're only using

1406
00:44:45,440 --> 00:44:47,359
you know serial communication you don't

1407
00:44:47,359 --> 00:44:48,960
need any other additional advanced

1408
00:44:48,960 --> 00:44:51,040
protocols by disabling it you don't have

1409
00:44:51,040 --> 00:44:52,560
to maintain it right

1410
00:44:52,560 --> 00:44:54,720
out comes a cve outcomes availability

1411
00:44:54,720 --> 00:44:57,200
notification about a particular protocol

1412
00:44:57,200 --> 00:45:00,000
that you're not using you've disabled it

1413
00:45:00,000 --> 00:45:01,680
maybe you're good right maybe you don't

1414
00:45:01,680 --> 00:45:02,960
have to upgrade something maybe you

1415
00:45:02,960 --> 00:45:04,400
don't have to address something if it's

1416
00:45:04,400 --> 00:45:07,040
not used and disabled so in our base

1417
00:45:07,040 --> 00:45:08,720
case scenario all the ports and

1418
00:45:08,720 --> 00:45:11,040
protocols are enabled by default

1419
00:45:11,040 --> 00:45:13,680
in our secure programming scenario

1420
00:45:13,680 --> 00:45:15,280
as the title says you know you only

1421
00:45:15,280 --> 00:45:16,400
enable

1422
00:45:16,400 --> 00:45:18,160
whatever that you need and everything

1423
00:45:18,160 --> 00:45:20,560
else is disabled and the attack scenario

1424
00:45:20,560 --> 00:45:21,440
is that

1425
00:45:21,440 --> 00:45:24,160
someone is trying to attack because the

1426
00:45:24,160 --> 00:45:25,760
outsiders don't know what protocols

1427
00:45:25,760 --> 00:45:27,599
you're using right not till they test

1428
00:45:27,599 --> 00:45:29,839
them out so they have to find out what

1429
00:45:29,839 --> 00:45:32,079
ports and protocols are in use so they

1430
00:45:32,079 --> 00:45:34,319
see these ports and protocols in use so

1431
00:45:34,319 --> 00:45:36,079
they try to

1432
00:45:36,079 --> 00:45:38,240
initiate an attack on a protocol that

1433
00:45:38,240 --> 00:45:40,160
they're familiar with and you get an

1434
00:45:40,160 --> 00:45:42,240
alert right away that someone is trying

1435
00:45:42,240 --> 00:45:45,119
to utilize that protocol

1436
00:45:45,119 --> 00:45:46,720
this example you might not be able to

1437
00:45:46,720 --> 00:45:49,040
clearly see it but we try to show uh you

1438
00:45:49,040 --> 00:45:51,280
know configuration option each plc is

1439
00:45:51,280 --> 00:45:53,839
different right so not all plc support

1440
00:45:53,839 --> 00:45:55,839
all the protocols and not all plcs have

1441
00:45:55,839 --> 00:45:57,200
all the

1442
00:45:57,200 --> 00:45:59,920
options to disable particular ones but

1443
00:45:59,920 --> 00:46:01,200
go through it right this is one of the

1444
00:46:01,200 --> 00:46:03,520
things as a programmer as a plc coding

1445
00:46:03,520 --> 00:46:05,839
person go through it to say okay this is

1446
00:46:05,839 --> 00:46:07,760
what i need for this project right and

1447
00:46:07,760 --> 00:46:09,359
it will be different from project to

1448
00:46:09,359 --> 00:46:11,359
project for all those others you might

1449
00:46:11,359 --> 00:46:13,359
need other protocols but go through the

1450
00:46:13,359 --> 00:46:15,119
list check out what options are

1451
00:46:15,119 --> 00:46:17,599
available what protocols

1452
00:46:17,599 --> 00:46:19,920
could be disabled and disable them and

1453
00:46:19,920 --> 00:46:22,640
for the most part most plcs

1454
00:46:22,640 --> 00:46:24,800
when you enable or disable these you

1455
00:46:24,800 --> 00:46:26,560
still have to perform a download so if

1456
00:46:26,560 --> 00:46:28,880
someone an attacker was you know

1457
00:46:28,880 --> 00:46:30,240
creative enough and they have access to

1458
00:46:30,240 --> 00:46:32,079
these files they want to enable this

1459
00:46:32,079 --> 00:46:34,000
protocol for their purpose they still

1460
00:46:34,000 --> 00:46:35,680
most likely have to download it right so

1461
00:46:35,680 --> 00:46:37,200
there are other ways you can catch it

1462
00:46:37,200 --> 00:46:38,560
because if you have to download

1463
00:46:38,560 --> 00:46:40,560
obviously that's another alert that you

1464
00:46:40,560 --> 00:46:43,119
can trigger so it's a lot easier to

1465
00:46:43,119 --> 00:46:44,319
manage this folks it's not that

1466
00:46:44,319 --> 00:46:47,040
difficult to disable ports that are on

1467
00:46:47,040 --> 00:46:50,400
or protocols that are not in use

1468
00:46:50,640 --> 00:46:52,800
defining safe process states for a plc

1469
00:46:52,800 --> 00:46:55,200
restart this is also something that is

1470
00:46:55,200 --> 00:46:56,960
not considered usually by a lot of

1471
00:46:56,960 --> 00:46:58,400
programmers

1472
00:46:58,400 --> 00:47:00,160
i think one of the examples of josh cave

1473
00:47:00,160 --> 00:47:02,319
also talks about it where you test out

1474
00:47:02,319 --> 00:47:04,079
your scenario in all the good times

1475
00:47:04,079 --> 00:47:07,839
right you have the plc up and running

1476
00:47:07,839 --> 00:47:09,440
you have this amazing program that

1477
00:47:09,440 --> 00:47:11,440
you've written you're so proud of it you

1478
00:47:11,440 --> 00:47:13,440
test it out all the scenarios you do

1479
00:47:13,440 --> 00:47:15,440
process component failure instrument

1480
00:47:15,440 --> 00:47:18,160
failure um you know commands different

1481
00:47:18,160 --> 00:47:20,079
set points but you never think about a

1482
00:47:20,079 --> 00:47:22,960
situation when the plc is rebooted or

1483
00:47:22,960 --> 00:47:25,040
reset you might actually think about a

1484
00:47:25,040 --> 00:47:27,680
situation where the plc has rebooted you

1485
00:47:27,680 --> 00:47:30,079
wait till it's in a healthy state and

1486
00:47:30,079 --> 00:47:31,680
then you think about the functionality

1487
00:47:31,680 --> 00:47:34,160
after but let's say the plc is in the

1488
00:47:34,160 --> 00:47:36,720
middle of an important function and all

1489
00:47:36,720 --> 00:47:39,760
the attacker did is to cause it to crash

1490
00:47:39,760 --> 00:47:41,839
a typical ddos right

1491
00:47:41,839 --> 00:47:43,920
of the network or did they did something

1492
00:47:43,920 --> 00:47:45,359
to the engineering workstation they

1493
00:47:45,359 --> 00:47:47,440
tried to download something and this has

1494
00:47:47,440 --> 00:47:49,200
happened you've seen many examples even

1495
00:47:49,200 --> 00:47:51,599
in triton right that's a safety plc but

1496
00:47:51,599 --> 00:47:55,200
whatever the plc that is out there it is

1497
00:47:55,200 --> 00:47:58,079
imaginable in a lot of cases that um

1498
00:47:58,079 --> 00:48:00,319
someone can force the plc to reboot

1499
00:48:00,319 --> 00:48:01,920
right because we don't have encrypted

1500
00:48:01,920 --> 00:48:04,160
communications you can do a lot of a lot

1501
00:48:04,160 --> 00:48:07,119
of attack vectors are quite plausible to

1502
00:48:07,119 --> 00:48:09,200
crash a plc so

1503
00:48:09,200 --> 00:48:11,200
think about the condition where it takes

1504
00:48:11,200 --> 00:48:13,280
five minutes or ten minutes or whatever

1505
00:48:13,280 --> 00:48:16,160
for the plc to reboot and now

1506
00:48:16,160 --> 00:48:19,040
what is the condition of your process

1507
00:48:19,040 --> 00:48:21,599
let's say we used the same

1508
00:48:21,599 --> 00:48:24,079
example that josh had about the shutdown

1509
00:48:24,079 --> 00:48:25,599
of the process and you did everything

1510
00:48:25,599 --> 00:48:28,000
right you programmed the plc you did not

1511
00:48:28,000 --> 00:48:29,760
use the hmi to

1512
00:48:29,760 --> 00:48:32,079
code anything in the in the in the plc

1513
00:48:32,079 --> 00:48:34,400
program however

1514
00:48:34,400 --> 00:48:36,079
there is a ddos or there is a forced

1515
00:48:36,079 --> 00:48:38,160
reboot of this plc

1516
00:48:38,160 --> 00:48:40,160
and now the plc is booting back up and

1517
00:48:40,160 --> 00:48:42,400
it's not yet in the healthy state or it

1518
00:48:42,400 --> 00:48:44,240
might be going towards a healthy state

1519
00:48:44,240 --> 00:48:45,760
what is the condition of the process

1520
00:48:45,760 --> 00:48:46,839
right

1521
00:48:46,839 --> 00:48:48,960
now in this

1522
00:48:48,960 --> 00:48:51,440
stage two stage three let's say you know

1523
00:48:51,440 --> 00:48:53,680
i'm taking a pr in a compressor example

1524
00:48:53,680 --> 00:48:55,599
so compressors are good let's call it a

1525
00:48:55,599 --> 00:48:58,000
natural gas compressor so when you shut

1526
00:48:58,000 --> 00:48:59,680
down the compressor you typically do not

1527
00:48:59,680 --> 00:49:01,280
vent because it's a natural gas it's

1528
00:49:01,280 --> 00:49:03,520
pressurized you have to send it to flare

1529
00:49:03,520 --> 00:49:05,359
a lot of other conditions why you do not

1530
00:49:05,359 --> 00:49:07,920
want to depressurize it but that's still

1531
00:49:07,920 --> 00:49:10,000
a safe state right a pressurized

1532
00:49:10,000 --> 00:49:13,440
shutdown is a safe state a depressurized

1533
00:49:13,440 --> 00:49:15,760
shutdown is also a safe state what is

1534
00:49:15,760 --> 00:49:18,400
not a safe state is an unknown condition

1535
00:49:18,400 --> 00:49:20,880
wherein you don't know in what condition

1536
00:49:20,880 --> 00:49:23,760
the compressor is as in you initiated

1537
00:49:23,760 --> 00:49:25,920
the shutdown you know the

1538
00:49:25,920 --> 00:49:28,559
inlet valve closed the output valve

1539
00:49:28,559 --> 00:49:30,319
closed you know you're going through the

1540
00:49:30,319 --> 00:49:32,960
process of the driver shutdown

1541
00:49:32,960 --> 00:49:35,359
and the plc reboot it and now the state

1542
00:49:35,359 --> 00:49:37,599
is unknown right that is what you want

1543
00:49:37,599 --> 00:49:40,000
to avoid what you want to happen is when

1544
00:49:40,000 --> 00:49:42,000
the plc come back up

1545
00:49:42,000 --> 00:49:44,079
you double check right you create

1546
00:49:44,079 --> 00:49:45,839
additional logic in such a way to

1547
00:49:45,839 --> 00:49:47,920
compare what state it should have been

1548
00:49:47,920 --> 00:49:50,000
in and if it's not in one of those safe

1549
00:49:50,000 --> 00:49:52,240
states go back to the safe state number

1550
00:49:52,240 --> 00:49:55,200
one and number two go to a state any

1551
00:49:55,200 --> 00:49:57,359
state where you can continue the process

1552
00:49:57,359 --> 00:49:59,680
from then right compared to getting

1553
00:49:59,680 --> 00:50:01,839
stuck and needing a controls engineer to

1554
00:50:01,839 --> 00:50:03,599
come back up and force something the

1555
00:50:03,599 --> 00:50:06,720
last thing you want is plc rebooted the

1556
00:50:06,720 --> 00:50:08,720
operator cannot do anything like they're

1557
00:50:08,720 --> 00:50:10,480
scrambling to reset they're scrambling

1558
00:50:10,480 --> 00:50:12,880
to you know push a button

1559
00:50:12,880 --> 00:50:15,200
you know click on a valve to open

1560
00:50:15,200 --> 00:50:17,680
and it doesn't because the plc is now

1561
00:50:17,680 --> 00:50:20,000
unable to function because it's thinking

1562
00:50:20,000 --> 00:50:21,839
you know or it's not thinking where it

1563
00:50:21,839 --> 00:50:23,599
is it's not clear what condition it is

1564
00:50:23,599 --> 00:50:26,400
in so what you have to do is program in

1565
00:50:26,400 --> 00:50:29,040
such a way that it can go to a safe

1566
00:50:29,040 --> 00:50:31,359
state and more importantly a state where

1567
00:50:31,359 --> 00:50:33,599
it can continue operation versus getting

1568
00:50:33,599 --> 00:50:37,200
stuck right something to consider

1569
00:50:37,200 --> 00:50:39,599
so closing thoughts we both have quite a

1570
00:50:39,599 --> 00:50:41,520
few um

1571
00:50:41,520 --> 00:50:43,839
i'll start with josh will add you know

1572
00:50:43,839 --> 00:50:45,839
his thoughts as well these practices are

1573
00:50:45,839 --> 00:50:48,480
all um you know varied but they're not

1574
00:50:48,480 --> 00:50:50,319
all-encompassing right

1575
00:50:50,319 --> 00:50:52,240
a lot of people have asked the question

1576
00:50:52,240 --> 00:50:54,720
uh why 20 you know why not more or have

1577
00:50:54,720 --> 00:50:57,280
you considered anything other than you

1578
00:50:57,280 --> 00:51:00,000
know programming the plc uh

1579
00:51:00,000 --> 00:51:01,119
there are right obviously there are a

1580
00:51:01,119 --> 00:51:03,119
lot more thoughts about this than just

1581
00:51:03,119 --> 00:51:04,480
programming the plc your security

1582
00:51:04,480 --> 00:51:06,559
posture is not just based on the plc

1583
00:51:06,559 --> 00:51:09,119
programming but this is defense in depth

1584
00:51:09,119 --> 00:51:11,119
right one of the important things to do

1585
00:51:11,119 --> 00:51:13,760
as part of an engineering solution is to

1586
00:51:13,760 --> 00:51:16,319
think about secure programming of plcs

1587
00:51:16,319 --> 00:51:17,680
and

1588
00:51:17,680 --> 00:51:19,680
consider these implementations as part

1589
00:51:19,680 --> 00:51:21,599
of the project development as opposed to

1590
00:51:21,599 --> 00:51:23,200
thinking that think about that after the

1591
00:51:23,200 --> 00:51:25,680
fact it's a lot easier to incorporate

1592
00:51:25,680 --> 00:51:27,119
these when you're developing a green

1593
00:51:27,119 --> 00:51:29,200
field project or an upgrade project

1594
00:51:29,200 --> 00:51:30,880
versus thinking about it after the fact

1595
00:51:30,880 --> 00:51:32,720
because a lot more engineering hours a

1596
00:51:32,720 --> 00:51:35,359
lot more additional testing s a t f a t

1597
00:51:35,359 --> 00:51:37,119
so on and so forth

1598
00:51:37,119 --> 00:51:39,200
and then uh supplement these practices

1599
00:51:39,200 --> 00:51:40,960
with third-party tools josh you want to

1600
00:51:40,960 --> 00:51:43,680
talk about it yeah sure so you i mean

1601
00:51:43,680 --> 00:51:44,880
we're all seeing the new shiny tools

1602
00:51:44,880 --> 00:51:46,800
that are out there today that are being

1603
00:51:46,800 --> 00:51:48,079
used that everybody's just buying and

1604
00:51:48,079 --> 00:51:49,599
putting out there

1605
00:51:49,599 --> 00:51:50,559
we've already gone through a couple

1606
00:51:50,559 --> 00:51:52,720
scenarios today where those tools don't

1607
00:51:52,720 --> 00:51:54,240
solve all of your problems right there's

1608
00:51:54,240 --> 00:51:55,680
other ways that you can go about

1609
00:51:55,680 --> 00:51:58,079
programming the plc

1610
00:51:58,079 --> 00:51:59,680
but that doesn't get it all right so you

1611
00:51:59,680 --> 00:52:01,119
you want to start supplementing these

1612
00:52:01,119 --> 00:52:02,640
figure out what swim lanes they cover

1613
00:52:02,640 --> 00:52:05,040
what what these different tools cover

1614
00:52:05,040 --> 00:52:07,040
and make sure that they complement each

1615
00:52:07,040 --> 00:52:09,520
other with what you're doing

1616
00:52:09,520 --> 00:52:12,319
so i i think in a lot of cases too you

1617
00:52:12,319 --> 00:52:13,920
may already have some of these tools in

1618
00:52:13,920 --> 00:52:15,520
your toolbox that you just don't know

1619
00:52:15,520 --> 00:52:16,880
you have that the vendors are already

1620
00:52:16,880 --> 00:52:18,800
providing you you've already paid for

1621
00:52:18,800 --> 00:52:20,800
that you're just not leveraging a lot of

1622
00:52:20,800 --> 00:52:22,000
these vendors already may have

1623
00:52:22,000 --> 00:52:24,160
application security in place they may

1624
00:52:24,160 --> 00:52:25,599
have different tools that already scan

1625
00:52:25,599 --> 00:52:27,280
through the code and look for common

1626
00:52:27,280 --> 00:52:29,040
misconfigurations in the code it may not

1627
00:52:29,040 --> 00:52:30,800
align with this top 20 but it may find a

1628
00:52:30,800 --> 00:52:31,920
lot of different scenarios you just

1629
00:52:31,920 --> 00:52:34,079
haven't thought about yet uh you have

1630
00:52:34,079 --> 00:52:35,200
the different tools that are out there

1631
00:52:35,200 --> 00:52:37,440
to do backups of your plcs

1632
00:52:37,440 --> 00:52:38,960
using the native protocols do

1633
00:52:38,960 --> 00:52:40,960
comparisons watching for any changes

1634
00:52:40,960 --> 00:52:42,800
some of them have already have checksums

1635
00:52:42,800 --> 00:52:45,119
in the plc that you can monitor for

1636
00:52:45,119 --> 00:52:47,680
some of them have pre-built in security

1637
00:52:47,680 --> 00:52:48,960
that you may not be using that doesn't

1638
00:52:48,960 --> 00:52:50,640
require just putting in a password that

1639
00:52:50,640 --> 00:52:52,480
may use more of an active directory

1640
00:52:52,480 --> 00:52:54,559
based security approach that doesn't

1641
00:52:54,559 --> 00:52:55,839
have to have a connection to your active

1642
00:52:55,839 --> 00:52:57,839
directory all the time these all exist

1643
00:52:57,839 --> 00:53:00,640
out there so you want to take this

1644
00:53:00,640 --> 00:53:02,000
on top of everything else you've been

1645
00:53:02,000 --> 00:53:03,520
picking up and learning and been chasing

1646
00:53:03,520 --> 00:53:05,359
down over the last couple years and

1647
00:53:05,359 --> 00:53:07,440
figure out what's the easiest to apply

1648
00:53:07,440 --> 00:53:08,960
what is it covering

1649
00:53:08,960 --> 00:53:10,960
and how am i improving my posture the

1650
00:53:10,960 --> 00:53:12,720
more of these tools and practice you put

1651
00:53:12,720 --> 00:53:14,319
in place that are actually maintainable

1652
00:53:14,319 --> 00:53:16,559
and achievable the easier it's going to

1653
00:53:16,559 --> 00:53:17,920
be for you to stop somebody in their

1654
00:53:17,920 --> 00:53:19,359
tracks and for them to trip up and make

1655
00:53:19,359 --> 00:53:21,200
a mistake the longer the harder you make

1656
00:53:21,200 --> 00:53:23,440
it for them to actually compromise your

1657
00:53:23,440 --> 00:53:25,200
system the more likely it is they're

1658
00:53:25,200 --> 00:53:27,440
going to get caught on their way

1659
00:53:27,440 --> 00:53:29,440
i agree i mean in fact not being a sales

1660
00:53:29,440 --> 00:53:30,880
pitch and i see this all the time for

1661
00:53:30,880 --> 00:53:32,720
the day job that i have right

1662
00:53:32,720 --> 00:53:34,800
customer purchase is a tool they bought

1663
00:53:34,800 --> 00:53:37,119
it for a purpose but they don't leverage

1664
00:53:37,119 --> 00:53:38,480
it completely there are many benefits

1665
00:53:38,480 --> 00:53:40,079
that the tool comes with

1666
00:53:40,079 --> 00:53:41,760
and supplement that with these practices

1667
00:53:41,760 --> 00:53:43,520
right these practices are for level one

1668
00:53:43,520 --> 00:53:45,280
programming and improvement but there

1669
00:53:45,280 --> 00:53:47,200
are tools that you uh install in level

1670
00:53:47,200 --> 00:53:49,520
two or about that you can supplement to

1671
00:53:49,520 --> 00:53:51,680
enhance your defense in depth for sure

1672
00:53:51,680 --> 00:53:53,440
yeah and and again a lot of this is

1673
00:53:53,440 --> 00:53:55,280
changing culture right like a lot of

1674
00:53:55,280 --> 00:53:56,559
your automation folks that are out there

1675
00:53:56,559 --> 00:53:58,880
today you're out there solving problems

1676
00:53:58,880 --> 00:54:00,000
getting the process up and running

1677
00:54:00,000 --> 00:54:01,440
making sure everything you're the last

1678
00:54:01,440 --> 00:54:03,280
step to running so all the pressure's on

1679
00:54:03,280 --> 00:54:04,800
you all the time the last thing you're

1680
00:54:04,800 --> 00:54:07,200
concerned with usually is cyber security

1681
00:54:07,200 --> 00:54:08,559
so you have to start kind of baking that

1682
00:54:08,559 --> 00:54:09,920
in early and start making aware that

1683
00:54:09,920 --> 00:54:11,119
there is a difference you can make there

1684
00:54:11,119 --> 00:54:12,559
is a change you can make and from a

1685
00:54:12,559 --> 00:54:13,920
cyber security standpoint most of us

1686
00:54:13,920 --> 00:54:15,599
cyber security engineers

1687
00:54:15,599 --> 00:54:17,119
stop thinking about things beyond what

1688
00:54:17,119 --> 00:54:18,640
we know about right when you talk about

1689
00:54:18,640 --> 00:54:19,920
plc security you're just talking about

1690
00:54:19,920 --> 00:54:21,920
passwords when you start talking about

1691
00:54:21,920 --> 00:54:23,200
like doing backups you're not even

1692
00:54:23,200 --> 00:54:24,400
thinking about your control system

1693
00:54:24,400 --> 00:54:25,920
backups even though they may be some of

1694
00:54:25,920 --> 00:54:27,839
the most critical items that you have in

1695
00:54:27,839 --> 00:54:29,920
your control in your entire environment

1696
00:54:29,920 --> 00:54:32,480
yeah uh

1697
00:54:32,480 --> 00:54:34,640
yeah so yeah contribution opportunities

1698
00:54:34,640 --> 00:54:36,400
there's a question in the in the app

1699
00:54:36,400 --> 00:54:37,760
that i i don't know if i'm saying it

1700
00:54:37,760 --> 00:54:39,760
right but app had a question so i'll

1701
00:54:39,760 --> 00:54:41,839
answer that first so um

1702
00:54:41,839 --> 00:54:43,440
one of the questions was

1703
00:54:43,440 --> 00:54:45,920
uh can we automate this right are these

1704
00:54:45,920 --> 00:54:49,119
practices um easy to automate or cross

1705
00:54:49,119 --> 00:54:50,720
check so how do we know if these

1706
00:54:50,720 --> 00:54:53,520
practices are done correctly in a plc

1707
00:54:53,520 --> 00:54:55,359
it's not that straightforward because

1708
00:54:55,359 --> 00:54:57,599
each plc has its own way of programming

1709
00:54:57,599 --> 00:54:59,920
own validation tools for quality checks

1710
00:54:59,920 --> 00:55:02,319
and for you know compiling checks right

1711
00:55:02,319 --> 00:55:04,720
but it's possible we have a project with

1712
00:55:04,720 --> 00:55:06,240
an ongoing project a lot of people are

1713
00:55:06,240 --> 00:55:08,079
still contributing a lot of people still

1714
00:55:08,079 --> 00:55:09,599
actively involved

1715
00:55:09,599 --> 00:55:11,119
and we've reached out to all the vendors

1716
00:55:11,119 --> 00:55:12,799
and we're getting feedback from vendors

1717
00:55:12,799 --> 00:55:14,319
saying yes we're incorporating this as

1718
00:55:14,319 --> 00:55:16,640
part of our programming because this is

1719
00:55:16,640 --> 00:55:19,119
not about a toolkit this is not about a

1720
00:55:19,119 --> 00:55:21,359
function this is not about a

1721
00:55:21,359 --> 00:55:23,760
a particular feature right

1722
00:55:23,760 --> 00:55:25,760
those features and functions might be

1723
00:55:25,760 --> 00:55:28,079
available in all the plc's but the key

1724
00:55:28,079 --> 00:55:29,680
is how do you confirm that they're

1725
00:55:29,680 --> 00:55:32,480
actually being implemented as part of

1726
00:55:32,480 --> 00:55:34,160
this program right so we're hearing back

1727
00:55:34,160 --> 00:55:36,319
from vendors that they're including it

1728
00:55:36,319 --> 00:55:38,559
as part of their along with quality and

1729
00:55:38,559 --> 00:55:39,920
you know compiling checks that also

1730
00:55:39,920 --> 00:55:41,839
including security checks right we're

1731
00:55:41,839 --> 00:55:44,799
seeing that and we're also hearing about

1732
00:55:44,799 --> 00:55:47,760
newer third-party independent groups

1733
00:55:47,760 --> 00:55:50,480
doing this on behalf of other vendors so

1734
00:55:50,480 --> 00:55:51,520
they're

1735
00:55:51,520 --> 00:55:53,040
collecting the logic from the

1736
00:55:53,040 --> 00:55:54,559
engineering files

1737
00:55:54,559 --> 00:55:57,119
comparing and reviewing with

1738
00:55:57,119 --> 00:55:59,040
you know known vulnerabilities or known

1739
00:55:59,040 --> 00:56:00,880
issues or comparing with these practices

1740
00:56:00,880 --> 00:56:03,599
to say yep this checks you know 15 of

1741
00:56:03,599 --> 00:56:05,440
the top 20 practices right that's

1742
00:56:05,440 --> 00:56:07,599
something that is an automation that can

1743
00:56:07,599 --> 00:56:09,359
benefit you that way you know you've

1744
00:56:09,359 --> 00:56:11,680
asked in the rfq you've asked your

1745
00:56:11,680 --> 00:56:14,000
vendor your integrator to provide

1746
00:56:14,000 --> 00:56:15,920
programming that is done securely but

1747
00:56:15,920 --> 00:56:17,040
you can then have an independent

1748
00:56:17,040 --> 00:56:19,119
verification from the third party or

1749
00:56:19,119 --> 00:56:20,799
maybe from the vendor tool right but

1750
00:56:20,799 --> 00:56:22,799
right now that's a work in progress and

1751
00:56:22,799 --> 00:56:24,480
maybe that's some place you can help us

1752
00:56:24,480 --> 00:56:26,799
maybe you work with us on this project

1753
00:56:26,799 --> 00:56:28,880
this is a community project right this

1754
00:56:28,880 --> 00:56:30,960
is not a vendor-initiated one become

1755
00:56:30,960 --> 00:56:32,640
part of this group and contribute so

1756
00:56:32,640 --> 00:56:35,280
that more of the vendors know that this

1757
00:56:35,280 --> 00:56:36,880
is important more of the asset owners

1758
00:56:36,880 --> 00:56:39,119
are asking for this information and so

1759
00:56:39,119 --> 00:56:40,559
the vendors and the integrators would

1760
00:56:40,559 --> 00:56:43,359
have no choice but to comply with it

1761
00:56:43,359 --> 00:56:46,000
now any questions folks

1762
00:56:46,000 --> 00:56:48,079
yes sir

1763
00:56:48,079 --> 00:56:51,480
so um

1764
00:57:11,440 --> 00:57:14,400
unless it's specified by the owners

1765
00:57:14,400 --> 00:57:17,440
asset owners or operators um

1766
00:57:17,440 --> 00:57:19,359
i don't see many people

1767
00:57:19,359 --> 00:57:20,880
implementing this so would you recommend

1768
00:57:20,880 --> 00:57:22,720
that this is something that there are

1769
00:57:22,720 --> 00:57:25,119
there are some programmers that would

1770
00:57:25,119 --> 00:57:26,720
just for the sake of it's it's the right

1771
00:57:26,720 --> 00:57:29,200
thing to do but in most cases is this

1772
00:57:29,200 --> 00:57:30,319
something that you would recommend

1773
00:57:30,319 --> 00:57:32,640
owners and asset asset owners to

1774
00:57:32,640 --> 00:57:35,119
implement as part of the deliverables

1775
00:57:35,119 --> 00:57:38,160
for any new projects or new machines or

1776
00:57:38,160 --> 00:57:40,000
you know whatever the case is that

1777
00:57:40,000 --> 00:57:42,400
they're bringing a programmer in yeah

1778
00:57:42,400 --> 00:57:44,079
great question for those of you that

1779
00:57:44,079 --> 00:57:45,520
couldn't hear the initial part yeah the

1780
00:57:45,520 --> 00:57:46,640
question is

1781
00:57:46,640 --> 00:57:48,559
is it recommended to you know put that

1782
00:57:48,559 --> 00:57:50,480
in the rfp process so they will deliver

1783
00:57:50,480 --> 00:57:51,920
otherwise it won't get done right won't

1784
00:57:51,920 --> 00:57:54,000
we get done so that's the truth of the

1785
00:57:54,000 --> 00:57:55,839
matter we absolutely recommend putting

1786
00:57:55,839 --> 00:57:58,079
that out as part of the rfp process

1787
00:57:58,079 --> 00:58:00,400
granted in my assessment there are many

1788
00:58:00,400 --> 00:58:02,480
of these practices that don't have to

1789
00:58:02,480 --> 00:58:04,319
add engineering hours right so once you

1790
00:58:04,319 --> 00:58:06,559
do it as part of your programming you

1791
00:58:06,559 --> 00:58:09,040
know if you're thinking about you know

1792
00:58:09,040 --> 00:58:12,319
validation of a timer or uh monitoring

1793
00:58:12,319 --> 00:58:14,640
certain process values or the plc up

1794
00:58:14,640 --> 00:58:17,280
time or cycle time those are pretty

1795
00:58:17,280 --> 00:58:19,040
straightforward you do it once on a

1796
00:58:19,040 --> 00:58:20,640
particular type of project that's your

1797
00:58:20,640 --> 00:58:23,359
library you implement it it doesn't take

1798
00:58:23,359 --> 00:58:25,280
additional engineering hours whereas

1799
00:58:25,280 --> 00:58:27,520
others like validating with the physical

1800
00:58:27,520 --> 00:58:30,319
process or validating with the

1801
00:58:30,319 --> 00:58:32,880
uh you know plausibility aspect of it

1802
00:58:32,880 --> 00:58:35,440
those things need additional time so as

1803
00:58:35,440 --> 00:58:37,760
an asset owner right if you're demanding

1804
00:58:37,760 --> 00:58:39,920
something off of your plc program or

1805
00:58:39,920 --> 00:58:41,839
your vendor your integrator you have to

1806
00:58:41,839 --> 00:58:43,040
compensate for their additional

1807
00:58:43,040 --> 00:58:44,160
engineering time right you have to be

1808
00:58:44,160 --> 00:58:46,319
prepared to get that additional security

1809
00:58:46,319 --> 00:58:47,839
you have to be prepared that they have

1810
00:58:47,839 --> 00:58:48,960
to go through that engineering and

1811
00:58:48,960 --> 00:58:51,119
validation and you have to ask for it in

1812
00:58:51,119 --> 00:58:52,000
fact

1813
00:58:52,000 --> 00:58:54,880
we have a template for rfp on our

1814
00:58:54,880 --> 00:58:56,960
project website as well where you know

1815
00:58:56,960 --> 00:58:59,520
yeah use this practices list to say we

1816
00:58:59,520 --> 00:59:02,079
want this to be done right and then you

1817
00:59:02,079 --> 00:59:03,760
can go back and forth right you can say

1818
00:59:03,760 --> 00:59:05,440
okay in my process these are the four

1819
00:59:05,440 --> 00:59:07,680
critical control loops where i want this

1820
00:59:07,680 --> 00:59:09,839
additional features or additional aspect

1821
00:59:09,839 --> 00:59:12,319
of it with the others you can program

1822
00:59:12,319 --> 00:59:14,720
as you wish as you wish which is still

1823
00:59:14,720 --> 00:59:16,400
functional and safe

1824
00:59:16,400 --> 00:59:18,720
however you have to absolutely specify

1825
00:59:18,720 --> 00:59:19,680
and that's one of the things we're

1826
00:59:19,680 --> 00:59:20,880
working on so we're trying to get more

1827
00:59:20,880 --> 00:59:22,880
asset owners involved uh ask this

1828
00:59:22,880 --> 00:59:25,040
question as part of their rfe process so

1829
00:59:25,040 --> 00:59:26,640
that the vendors or the integrators can

1830
00:59:26,640 --> 00:59:28,240
actually comply with it

1831
00:59:28,240 --> 00:59:29,599
and it doesn't it doesn't have to be

1832
00:59:29,599 --> 00:59:31,760
difficult it can it can be very simple

1833
00:59:31,760 --> 00:59:32,880
and that's kind of what the example that

1834
00:59:32,880 --> 00:59:35,119
we have up there too is just get started

1835
00:59:35,119 --> 00:59:36,400
just start creating that culture and

1836
00:59:36,400 --> 00:59:37,839
start requiring some of these and then

1837
00:59:37,839 --> 00:59:38,640
people

1838
00:59:38,640 --> 00:59:40,400
will naturally start to inquire more

1839
00:59:40,400 --> 00:59:42,000
about it or have other ideas themselves

1840
00:59:42,000 --> 00:59:44,640
that they may want to add to it so

1841
00:59:44,640 --> 00:59:46,480
another question in the corner

1842
00:59:46,480 --> 00:59:48,480
so it was not a question but more of a

1843
00:59:48,480 --> 00:59:50,079
comment since i am an asset owner right

1844
00:59:50,079 --> 00:59:50,880
now

1845
00:59:50,880 --> 00:59:52,880
uh so one great job carrying this

1846
00:59:52,880 --> 00:59:55,040
forward so me and jake appreciate

1847
00:59:55,040 --> 00:59:56,720
everything you guys are doing

1848
00:59:56,720 --> 00:59:59,040
um it doesn't also have to be part of

1849
00:59:59,040 --> 01:00:01,520
the rfp right so right now if we have

1850
01:00:01,520 --> 01:00:03,440
in-flight retrofits or new green field

1851
01:00:03,440 --> 01:00:05,680
and we're doing fat and sat i'm putting

1852
01:00:05,680 --> 01:00:07,599
it in during fat and set so even if it

1853
01:00:07,599 --> 01:00:09,119
wasn't in the rfp

1854
01:00:09,119 --> 01:00:10,400
when we're going through fat and sound

1855
01:00:10,400 --> 01:00:12,000
we're looking at logic i'm making them

1856
01:00:12,000 --> 01:00:14,400
do this the integrators the vendors

1857
01:00:14,400 --> 01:00:16,160
and in some cases they're charging us

1858
01:00:16,160 --> 01:00:17,280
for it

1859
01:00:17,280 --> 01:00:18,559
other cases are like yeah we should

1860
01:00:18,559 --> 01:00:19,920
already be doing this we'll update the

1861
01:00:19,920 --> 01:00:22,960
sds or the design specs and we'll

1862
01:00:22,960 --> 01:00:24,480
account for like where we're doing each

1863
01:00:24,480 --> 01:00:25,760
practice so it doesn't have to be

1864
01:00:25,760 --> 01:00:28,240
complicated i've even done stuff where

1865
01:00:28,240 --> 01:00:29,839
it's like hey give me a sample

1866
01:00:29,839 --> 01:00:32,079
screenshot of the logic showing me which

1867
01:00:32,079 --> 01:00:35,440
practices you can do now right so it you

1868
01:00:35,440 --> 01:00:37,200
can do it multiple ways there's no one

1869
01:00:37,200 --> 01:00:39,359
size fits all

1870
01:00:39,359 --> 01:00:41,680
and joining the community too and like

1871
01:00:41,680 --> 01:00:43,280
contributing you actually pick up from

1872
01:00:43,280 --> 01:00:44,480
other contributors who are already doing

1873
01:00:44,480 --> 01:00:45,520
this where you can ask the questions

1874
01:00:45,520 --> 01:00:46,559
because they're already trying to

1875
01:00:46,559 --> 01:00:48,720
implement this as you already today

1876
01:00:48,720 --> 01:00:49,839
because i've already seen a bunch of

1877
01:00:49,839 --> 01:00:52,240
emails that go out too that

1878
01:00:52,240 --> 01:00:53,359
you can learn how somebody else is

1879
01:00:53,359 --> 01:00:54,640
successfully doing it today you don't

1880
01:00:54,640 --> 01:00:56,160
have to figure it out yourself and you

1881
01:00:56,160 --> 01:00:57,520
can actually start showing other

1882
01:00:57,520 --> 01:00:58,880
colleagues that are maybe potentially

1883
01:00:58,880 --> 01:00:59,839
arduous and how they're doing it

1884
01:00:59,839 --> 01:01:01,280
successfully and learn from their

1885
01:01:01,280 --> 01:01:03,920
experiences

1886
01:01:04,240 --> 01:01:05,440
yep

1887
01:01:05,440 --> 01:01:08,680
yes sir

1888
01:01:10,480 --> 01:01:12,880
have you seen a standard or company

1889
01:01:12,880 --> 01:01:15,680
actually kind of codify your secure

1890
01:01:15,680 --> 01:01:18,079
poc coding practices into a standard

1891
01:01:18,079 --> 01:01:18,960
that

1892
01:01:18,960 --> 01:01:21,200
is repeatable and it's at a high enough

1893
01:01:21,200 --> 01:01:22,640
level it doesn't matter if it's a

1894
01:01:22,640 --> 01:01:24,319
rockwell or siemens whoever the

1895
01:01:24,319 --> 01:01:26,880
manufacturer is but you know these are

1896
01:01:26,880 --> 01:01:28,880
the the kind of coding practices that

1897
01:01:28,880 --> 01:01:30,960
would need to be addressed whether it

1898
01:01:30,960 --> 01:01:34,079
was your in-house you know staff or it

1899
01:01:34,079 --> 01:01:36,480
was uh external consultant or the or the

1900
01:01:36,480 --> 01:01:38,319
manufacturer

1901
01:01:38,319 --> 01:01:40,000
yeah good question um the question is

1902
01:01:40,000 --> 01:01:43,200
again have we seen vendors or innovators

1903
01:01:43,200 --> 01:01:44,960
using this as a standard and saying yep

1904
01:01:44,960 --> 01:01:47,920
we comply um we have one so far we've

1905
01:01:47,920 --> 01:01:49,920
reached out to many of these integrators

1906
01:01:49,920 --> 01:01:52,160
vendors engineering firms vendors we've

1907
01:01:52,160 --> 01:01:54,240
asked the question are you doing it the

1908
01:01:54,240 --> 01:01:56,559
commonly heard answer is we're doing

1909
01:01:56,559 --> 01:01:59,359
most of it for other reasons right so

1910
01:01:59,359 --> 01:02:01,359
most that is done as part of their

1911
01:02:01,359 --> 01:02:03,039
engineering effort and that's because of

1912
01:02:03,039 --> 01:02:05,039
functionality and other features that

1913
01:02:05,039 --> 01:02:06,799
they need from doing this

1914
01:02:06,799 --> 01:02:08,480
the missing piece is the security piece

1915
01:02:08,480 --> 01:02:09,680
that they're getting the security

1916
01:02:09,680 --> 01:02:11,520
benefit in all these practices but they

1917
01:02:11,520 --> 01:02:12,799
haven't thought about it that way so

1918
01:02:12,799 --> 01:02:14,160
they haven't implemented it with

1919
01:02:14,160 --> 01:02:15,599
security in mind

1920
01:02:15,599 --> 01:02:17,280
so so far we only had one published

1921
01:02:17,280 --> 01:02:19,440
document to say yep we are doing this as

1922
01:02:19,440 --> 01:02:21,680
part of our standard operating procedure

1923
01:02:21,680 --> 01:02:24,480
we use this 20 list to compare now there

1924
01:02:24,480 --> 01:02:26,400
might be more right i mean we compile

1925
01:02:26,400 --> 01:02:29,359
this 20 from a lot of aggregation in

1926
01:02:29,359 --> 01:02:31,599
fact we have a huge set of other

1927
01:02:31,599 --> 01:02:33,839
practices that didn't make it because

1928
01:02:33,839 --> 01:02:36,079
they were related to networking power

1929
01:02:36,079 --> 01:02:37,920
supplies level two

1930
01:02:37,920 --> 01:02:39,839
not specifically level one so when we

1931
01:02:39,839 --> 01:02:41,760
came together as a project we said let's

1932
01:02:41,760 --> 01:02:44,319
focus on plc programming for this aspect

1933
01:02:44,319 --> 01:02:46,079
let's add those others whereas those

1934
01:02:46,079 --> 01:02:48,079
vendors and integrators are doing the

1935
01:02:48,079 --> 01:02:49,920
bigger projects so

1936
01:02:49,920 --> 01:02:51,520
for them this is one piece of the puzzle

1937
01:02:51,520 --> 01:02:53,599
but they're doing a lot more as well

1938
01:02:53,599 --> 01:02:55,119
what we haven't seen so far is someone

1939
01:02:55,119 --> 01:02:56,400
to come out say

1940
01:02:56,400 --> 01:02:58,160
for our plc's no matter what they make

1941
01:02:58,160 --> 01:03:00,160
no matter what the model we're doing all

1942
01:03:00,160 --> 01:03:02,000
of them that we haven't seen but i think

1943
01:03:02,000 --> 01:03:04,480
that's a tough ask i mean honestly the

1944
01:03:04,480 --> 01:03:06,720
intent is to not to make this a standard

1945
01:03:06,720 --> 01:03:08,799
or not to make this a

1946
01:03:08,799 --> 01:03:11,280
regulation the intent is to get the best

1947
01:03:11,280 --> 01:03:14,480
practices uh from these practices be

1948
01:03:14,480 --> 01:03:16,960
part of the culture right so as long as

1949
01:03:16,960 --> 01:03:18,400
asset owners are asking the question and

1950
01:03:18,400 --> 01:03:19,599
that particular vendor for that

1951
01:03:19,599 --> 01:03:21,119
particular project says

1952
01:03:21,119 --> 01:03:22,720
we understand what you're looking for

1953
01:03:22,720 --> 01:03:24,799
and we'll give you you know our best

1954
01:03:24,799 --> 01:03:27,520
version i think that's the the next step

1955
01:03:27,520 --> 01:03:28,720
right it's

1956
01:03:28,720 --> 01:03:29,520
you know

1957
01:03:29,520 --> 01:03:31,760
crack in a crawl walk and run so we're

1958
01:03:31,760 --> 01:03:34,240
in that crawl to walk face

1959
01:03:34,240 --> 01:03:35,920
yes sir

1960
01:03:35,920 --> 01:03:38,160
thank you again gentlemen um since i

1961
01:03:38,160 --> 01:03:40,880
gave the paper two years ago i never

1962
01:03:40,880 --> 01:03:43,200
expected it to look like this um and it

1963
01:03:43,200 --> 01:03:45,440
it really is it amazes me that it's gone

1964
01:03:45,440 --> 01:03:47,599
this far i want to point out a couple of

1965
01:03:47,599 --> 01:03:50,000
things uh there was a uh

1966
01:03:50,000 --> 01:03:51,359
for those of you that have ever had the

1967
01:03:51,359 --> 01:03:53,599
misfortune of programming in c there was

1968
01:03:53,599 --> 01:03:55,520
a fantastic book it was it started off

1969
01:03:55,520 --> 01:03:57,760
as a paper written by bell labs

1970
01:03:57,760 --> 01:03:58,880
on

1971
01:03:58,880 --> 01:04:01,359
c traps and pitfalls they showed you

1972
01:04:01,359 --> 01:04:03,839
what you don't do and that's actually a

1973
01:04:03,839 --> 01:04:05,920
lot of what this list is it's a list of

1974
01:04:05,920 --> 01:04:07,760
things that you shouldn't do and

1975
01:04:07,760 --> 01:04:09,599
eventually after doing enough of this

1976
01:04:09,599 --> 01:04:11,839
thing you can you can get industry

1977
01:04:11,839 --> 01:04:14,000
standards such as um if you look in

1978
01:04:14,000 --> 01:04:16,160
motor vehicles they have misra versions

1979
01:04:16,160 --> 01:04:18,640
of c programming style so if you're

1980
01:04:18,640 --> 01:04:20,480
programming an engine computer this is

1981
01:04:20,480 --> 01:04:21,440
the sorts of things that they're

1982
01:04:21,440 --> 01:04:23,039
expecting you to do and oh by the way

1983
01:04:23,039 --> 01:04:24,799
don't use heap because heap is bad in

1984
01:04:24,799 --> 01:04:27,119
embedded systems things like that you're

1985
01:04:27,119 --> 01:04:29,520
going to have a hard time

1986
01:04:29,520 --> 01:04:31,200
we've already stubbed our toes on a lot

1987
01:04:31,200 --> 01:04:32,880
of these problems we're still gathering

1988
01:04:32,880 --> 01:04:34,240
up the lists we're still trying to

1989
01:04:34,240 --> 01:04:36,559
figure out what's working and what's not

1990
01:04:36,559 --> 01:04:38,960
and so what these folks have gathered

1991
01:04:38,960 --> 01:04:41,520
together is fantastic

1992
01:04:41,520 --> 01:04:43,839
um but it's only a start and we do not

1993
01:04:43,839 --> 01:04:45,119
we're not at the stage yet where we

1994
01:04:45,119 --> 01:04:47,039
could codify this into a standard say

1995
01:04:47,039 --> 01:04:49,599
yay verily go to iec and then just give

1996
01:04:49,599 --> 01:04:52,000
some long number after it and then say

1997
01:04:52,000 --> 01:04:53,839
you should use this standard we're

1998
01:04:53,839 --> 01:04:56,240
nowhere near that yet and we don't want

1999
01:04:56,240 --> 01:04:58,240
to stump we don't want to stumble over

2000
01:04:58,240 --> 01:05:01,520
ourselves trying to build that standard

2001
01:05:01,520 --> 01:05:03,760
thank you jake that's very very accurate

2002
01:05:03,760 --> 01:05:05,599
i think the the process of just pulling

2003
01:05:05,599 --> 01:05:07,119
together was trying to pull like a

2004
01:05:07,119 --> 01:05:09,039
thousand people's ideas together and be

2005
01:05:09,039 --> 01:05:10,000
like figure out all right what are the

2006
01:05:10,000 --> 01:05:11,680
most important let's vote on these how

2007
01:05:11,680 --> 01:05:13,359
do we agree on language how do we just

2008
01:05:13,359 --> 01:05:15,599
get this across the door so that we

2009
01:05:15,599 --> 01:05:16,240
actually started having the

2010
01:05:16,240 --> 01:05:18,160
conversations today it's an evergreen

2011
01:05:18,160 --> 01:05:20,160
approach we want a lot more contributors

2012
01:05:20,160 --> 01:05:22,319
to come in it's just absolutely the top

2013
01:05:22,319 --> 01:05:23,680
20. it doesn't necessarily mean it is

2014
01:05:23,680 --> 01:05:25,680
it's the 21s that we could get whoever

2015
01:05:25,680 --> 01:05:27,599
was engaging at the time to agree on are

2016
01:05:27,599 --> 01:05:29,039
the top 20 the ones we could define the

2017
01:05:29,039 --> 01:05:31,440
best right and that was a win to get it

2018
01:05:31,440 --> 01:05:33,440
across the finish line that way but this

2019
01:05:33,440 --> 01:05:36,160
is very very very new and i'm sure

2020
01:05:36,160 --> 01:05:38,160
there's a ton of great ideas out there

2021
01:05:38,160 --> 01:05:39,520
and it's open for

2022
01:05:39,520 --> 01:05:41,599
everybody's open to learn more from it

2023
01:05:41,599 --> 01:05:42,960
and have different contributors come in

2024
01:05:42,960 --> 01:05:44,880
and help grow the document or help grow

2025
01:05:44,880 --> 01:05:47,039
peripheral documents they may not think

2026
01:05:47,039 --> 01:05:48,799
are related to cyber security but are

2027
01:05:48,799 --> 01:05:50,079
like one of the ones we're focusing on

2028
01:05:50,079 --> 01:05:52,160
next is the environmental aspect so you

2029
01:05:52,160 --> 01:05:53,280
might start getting down to stuff that

2030
01:05:53,280 --> 01:05:54,720
is more like i o based or

2031
01:05:54,720 --> 01:05:55,760
engineering-based you would think it's

2032
01:05:55,760 --> 01:05:57,839
never even focused in cyber security but

2033
01:05:57,839 --> 01:05:59,119
if you design it properly from the

2034
01:05:59,119 --> 01:06:01,119
engineering side you may restrict a lot

2035
01:06:01,119 --> 01:06:03,039
of the things that can be done

2036
01:06:03,039 --> 01:06:05,760
from a cyber asset or a cyber lens so

2037
01:06:05,760 --> 01:06:07,680
they're related in one way or another so

2038
01:06:07,680 --> 01:06:09,039
you just have to start opening up those

2039
01:06:09,039 --> 01:06:10,240
doors and

2040
01:06:10,240 --> 01:06:12,079
kind of triggering those light bulbs

2041
01:06:12,079 --> 01:06:14,160
yeah that's definitely taking off

2042
01:06:14,160 --> 01:06:15,839
we have at least six language

2043
01:06:15,839 --> 01:06:17,920
translations so those of you that are

2044
01:06:17,920 --> 01:06:20,160
global you you know people that around

2045
01:06:20,160 --> 01:06:22,319
the world program in different languages

2046
01:06:22,319 --> 01:06:23,280
um

2047
01:06:23,280 --> 01:06:25,839
languages as in not plc languages but uh

2048
01:06:25,839 --> 01:06:28,240
people that speak so we have more

2049
01:06:28,240 --> 01:06:30,400
languages coming in translations so try

2050
01:06:30,400 --> 01:06:32,400
to send this out right so if you're a

2051
01:06:32,400 --> 01:06:34,240
security person reach out to your

2052
01:06:34,240 --> 01:06:36,160
programming person reach out to those ot

2053
01:06:36,160 --> 01:06:38,160
people that are actually doing

2054
01:06:38,160 --> 01:06:39,920
plc programming or maybe at the plant

2055
01:06:39,920 --> 01:06:41,920
level have them be

2056
01:06:41,920 --> 01:06:44,720
participants in this project try to get

2057
01:06:44,720 --> 01:06:46,319
this info to them right and then like

2058
01:06:46,319 --> 01:06:48,559
like we mentioned we have the back end

2059
01:06:48,559 --> 01:06:50,400
tools the firmware the files for them to

2060
01:06:50,400 --> 01:06:53,039
play with or you know if they are more

2061
01:06:53,039 --> 01:06:54,480
familiar with a different platform they

2062
01:06:54,480 --> 01:06:56,079
can still use the concepts from this

2063
01:06:56,079 --> 01:06:57,440
right so they can still use those

2064
01:06:57,440 --> 01:07:00,160
examples to use their own platform of

2065
01:07:00,160 --> 01:07:03,280
choice to program that

2066
01:07:03,280 --> 01:07:06,319
any other questions folks

2067
01:07:06,720 --> 01:07:07,680
please

2068
01:07:07,680 --> 01:07:08,559
i'm sure you'll be able to hear me

2069
01:07:08,559 --> 01:07:10,400
anyway but um you mentioned other

2070
01:07:10,400 --> 01:07:11,599
documents that could be addendums and i

2071
01:07:11,599 --> 01:07:12,640
was wondering if there's any type of

2072
01:07:12,640 --> 01:07:14,720
matrix to build out like ideation and

2073
01:07:14,720 --> 01:07:16,400
prioritization of the plausibility

2074
01:07:16,400 --> 01:07:17,599
checks you mentioned it feels like you

2075
01:07:17,599 --> 01:07:19,520
could do those all day for data or

2076
01:07:19,520 --> 01:07:21,039
physical plausibility checks and still

2077
01:07:21,039 --> 01:07:22,720
maybe miss some so i was wondering if

2078
01:07:22,720 --> 01:07:25,200
there's any kind of matrix or project to

2079
01:07:25,200 --> 01:07:26,640
again ideate on those potential

2080
01:07:26,640 --> 01:07:27,920
scenarios and or build out

2081
01:07:27,920 --> 01:07:30,000
prioritization for them

2082
01:07:30,000 --> 01:07:32,160
that's a great question

2083
01:07:32,160 --> 01:07:34,480
let me think about that so there are

2084
01:07:34,480 --> 01:07:36,160
things in this that will have to be

2085
01:07:36,160 --> 01:07:37,359
thought through right it's not just a

2086
01:07:37,359 --> 01:07:38,880
one-person thing

2087
01:07:38,880 --> 01:07:40,240
and like i mentioned the controls

2088
01:07:40,240 --> 01:07:42,000
engineer needs to work with the process

2089
01:07:42,000 --> 01:07:44,160
engineer and yeah i can see what you're

2090
01:07:44,160 --> 01:07:46,319
saying that they come through

2091
01:07:46,319 --> 01:07:48,160
they do an assessment but it's only a

2092
01:07:48,160 --> 01:07:49,760
few hours that they spend and maybe they

2093
01:07:49,760 --> 01:07:52,319
didn't think through other scenarios and

2094
01:07:52,319 --> 01:07:54,559
maybe not prioritization but maybe what

2095
01:07:54,559 --> 01:07:57,119
they need is a pool of things that to

2096
01:07:57,119 --> 01:07:59,039
think about right so

2097
01:07:59,039 --> 01:08:00,480
hey make sure that you think about like

2098
01:08:00,480 --> 01:08:02,400
a checklist to say hey think about these

2099
01:08:02,400 --> 01:08:04,640
maybe half a dozen or ten scenarios when

2100
01:08:04,640 --> 01:08:06,720
you're thinking otherwise it's difficult

2101
01:08:06,720 --> 01:08:08,319
a for a newbie especially if you're a

2102
01:08:08,319 --> 01:08:10,160
new control engineer you don't even know

2103
01:08:10,160 --> 01:08:12,079
what questions to ask yeah i want to

2104
01:08:12,079 --> 01:08:14,240
talk about plausibility but what is

2105
01:08:14,240 --> 01:08:15,680
plausible that's not something a new

2106
01:08:15,680 --> 01:08:17,359
controls engineer would know an

2107
01:08:17,359 --> 01:08:18,880
experienced controls engineer maybe

2108
01:08:18,880 --> 01:08:20,719
after having done multiple projects

2109
01:08:20,719 --> 01:08:22,158
might be able to ask the right questions

2110
01:08:22,158 --> 01:08:23,759
but even then they might miss something

2111
01:08:23,759 --> 01:08:24,960
because they're not thinking about it at

2112
01:08:24,960 --> 01:08:26,640
that point so i think that's a good

2113
01:08:26,640 --> 01:08:29,520
point to say maybe think about

2114
01:08:29,520 --> 01:08:31,920
these 10 scenarios right physical

2115
01:08:31,920 --> 01:08:34,000
plausibility other validation that'd be

2116
01:08:34,000 --> 01:08:35,359
a good addition so yeah we'll definitely

2117
01:08:35,359 --> 01:08:37,040
put that in our

2118
01:08:37,040 --> 01:08:38,880
things to work on in the next project

2119
01:08:38,880 --> 01:08:41,279
thank you

2120
01:08:43,040 --> 01:08:46,759
all right thank you folks

