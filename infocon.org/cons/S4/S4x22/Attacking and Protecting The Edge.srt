1
00:00:00,240 --> 00:00:03,240
foreign

2
00:00:05,240 --> 00:00:07,440
thank you

3
00:00:07,440 --> 00:00:10,620
so uh Happy Wednesday

4
00:00:10,620 --> 00:00:12,900
um so I'm here to talk about embedded

5
00:00:12,900 --> 00:00:15,660
security so device security this is

6
00:00:15,660 --> 00:00:18,240
um the security of uh basically

7
00:00:18,240 --> 00:00:20,939
processing that's designed to accomplish

8
00:00:20,939 --> 00:00:24,119
electrical mechanical or data processing

9
00:00:24,119 --> 00:00:25,619
another way to think about it is

10
00:00:25,619 --> 00:00:27,300
Electronics in a box

11
00:00:27,300 --> 00:00:28,680
um this talk is for folks that are

12
00:00:28,680 --> 00:00:30,660
building products this talk is for

13
00:00:30,660 --> 00:00:32,399
people that are procuring products you

14
00:00:32,399 --> 00:00:34,320
kind of know what to ask for

15
00:00:34,320 --> 00:00:35,760
um and then lastly to folks that are

16
00:00:35,760 --> 00:00:37,680
Consulting with either of those folks

17
00:00:37,680 --> 00:00:40,860
there is a lot of good work some of the

18
00:00:40,860 --> 00:00:42,480
mitigations I'll be talking about are

19
00:00:42,480 --> 00:00:44,760
end products that asset owners have

20
00:00:44,760 --> 00:00:46,320
today some is not there's some things

21
00:00:46,320 --> 00:00:47,100
I'm going to talk about it's a little

22
00:00:47,100 --> 00:00:49,680
controversial I'll mention those and

23
00:00:49,680 --> 00:00:51,780
there's some areas where folks aren't

24
00:00:51,780 --> 00:00:52,920
doing some things and I'll Point those

25
00:00:52,920 --> 00:00:54,719
out as well

26
00:00:54,719 --> 00:00:56,120
um there's also good guidance available

27
00:00:56,120 --> 00:00:58,980
nist is always a good place to start

28
00:00:58,980 --> 00:01:01,440
um when and and there's other rubrics as

29
00:01:01,440 --> 00:01:02,879
well but I always find this kind of the

30
00:01:02,879 --> 00:01:04,559
best place to start but it also is

31
00:01:04,559 --> 00:01:05,880
incomplete and I'll kind of talk to that

32
00:01:05,880 --> 00:01:08,700
a little bit so my background I've been

33
00:01:08,700 --> 00:01:10,920
in the utility sector for about 14 years

34
00:01:10,920 --> 00:01:12,720
and

35
00:01:12,720 --> 00:01:16,080
um when uh I worked on da and scada

36
00:01:16,080 --> 00:01:20,040
comms also smart meters and so there

37
00:01:20,040 --> 00:01:23,220
were events in the smart grid space that

38
00:01:23,220 --> 00:01:25,619
led to a decent amount of investment

39
00:01:25,619 --> 00:01:28,500
from the vendors and requirements from

40
00:01:28,500 --> 00:01:30,900
the asset owners to the vendors one of

41
00:01:30,900 --> 00:01:33,360
those was in 2010 there was a black hat

42
00:01:33,360 --> 00:01:34,799
demonstration by Mike Davis where he

43
00:01:34,799 --> 00:01:37,259
created a worm that showed software

44
00:01:37,259 --> 00:01:39,200
going from one meter to another meter

45
00:01:39,200 --> 00:01:42,420
and at that time correlated this there's

46
00:01:42,420 --> 00:01:44,040
a public event there was a decent amount

47
00:01:44,040 --> 00:01:45,900
of investment a lot of mitigations so

48
00:01:45,900 --> 00:01:48,299
it's a good example of the you see an

49
00:01:48,299 --> 00:01:50,700
attack then you see the investment and

50
00:01:50,700 --> 00:01:52,200
so what I'm going to talk through is

51
00:01:52,200 --> 00:01:54,180
just some of the some of the control as

52
00:01:54,180 --> 00:01:55,680
you saw now this is this is the classics

53
00:01:55,680 --> 00:01:58,560
right so in a lot of the the vendors

54
00:01:58,560 --> 00:02:00,360
from that point forward in that space

55
00:02:00,360 --> 00:02:02,759
had product security governance so basic

56
00:02:02,759 --> 00:02:05,700
product security requirements

57
00:02:05,700 --> 00:02:08,098
um basic life cycle controls

58
00:02:08,098 --> 00:02:10,258
um things like uh design Focus design

59
00:02:10,258 --> 00:02:11,940
reviews

60
00:02:11,940 --> 00:02:15,599
um focused uh uh reviews on The Source

61
00:02:15,599 --> 00:02:18,480
Code focused on security SAS and Das

62
00:02:18,480 --> 00:02:21,239
testing pen testing internal external

63
00:02:21,239 --> 00:02:22,860
and then incident response emergency

64
00:02:22,860 --> 00:02:24,060
response all the kinds of things you

65
00:02:24,060 --> 00:02:25,680
expect to see so

66
00:02:25,680 --> 00:02:26,940
um while I'm talking about controls I

67
00:02:26,940 --> 00:02:28,560
did want to start there because really

68
00:02:28,560 --> 00:02:31,920
that that usually is Ground Zero for

69
00:02:31,920 --> 00:02:33,780
having Security in your products is

70
00:02:33,780 --> 00:02:36,060
having a basic governance program so if

71
00:02:36,060 --> 00:02:37,440
if you're building a product obviously

72
00:02:37,440 --> 00:02:38,879
that's and and most of the vendors in

73
00:02:38,879 --> 00:02:40,500
this space I think were pretty pretty

74
00:02:40,500 --> 00:02:43,140
well past this stage but but not

75
00:02:43,140 --> 00:02:44,459
completely

76
00:02:44,459 --> 00:02:46,140
um another thing you see pretty commonly

77
00:02:46,140 --> 00:02:48,120
now but but not everywhere is Flash

78
00:02:48,120 --> 00:02:50,280
encryption and so uh one of the things

79
00:02:50,280 --> 00:02:51,660
that would have kind of been it slowed

80
00:02:51,660 --> 00:02:53,340
the precursor to attack with what Mike

81
00:02:53,340 --> 00:02:54,959
was doing was having the flash encrypted

82
00:02:54,959 --> 00:02:57,120
pretty much any pen test you run these

83
00:02:57,120 --> 00:02:58,200
days if you don't have your flash

84
00:02:58,200 --> 00:02:59,340
encrypted that's going to be finding

85
00:02:59,340 --> 00:03:01,440
number one typically there's a lot of

86
00:03:01,440 --> 00:03:02,940
ways to do this they're not consistent

87
00:03:02,940 --> 00:03:04,800
different chip vendors have some

88
00:03:04,800 --> 00:03:06,120
Hardware mechanisms they're not

89
00:03:06,120 --> 00:03:07,680
consistent

90
00:03:07,680 --> 00:03:09,599
um but but there are mechanisms there

91
00:03:09,599 --> 00:03:11,879
and it's complicated

92
00:03:11,879 --> 00:03:14,480
um one of the interesting Parts is the

93
00:03:14,480 --> 00:03:17,400
unused Flash in in your in your device

94
00:03:17,400 --> 00:03:19,200
so there was

95
00:03:19,200 --> 00:03:19,860
um

96
00:03:19,860 --> 00:03:21,780
I was probably about 15 years ago there

97
00:03:21,780 --> 00:03:23,459
was this attack where people took a

98
00:03:23,459 --> 00:03:24,720
microcontroller and they put it in a

99
00:03:24,720 --> 00:03:27,300
microwave for like seven seconds and

100
00:03:27,300 --> 00:03:29,159
about one out of ten of these chips when

101
00:03:29,159 --> 00:03:31,200
you pulled it out it would dump its

102
00:03:31,200 --> 00:03:35,040
memory out the out of Serial port and

103
00:03:35,040 --> 00:03:37,440
um what what had happened was the

104
00:03:37,440 --> 00:03:39,720
processor had glitched to a piece of

105
00:03:39,720 --> 00:03:42,900
code that was a manufacturing test that

106
00:03:42,900 --> 00:03:44,459
was doing a read of all the internal

107
00:03:44,459 --> 00:03:46,680
memory and it would it would just kind

108
00:03:46,680 --> 00:03:48,239
of hard wire into this glitch when the

109
00:03:48,239 --> 00:03:51,180
processor got damaged so one thing in

110
00:03:51,180 --> 00:03:53,400
addition to flash encryption your unused

111
00:03:53,400 --> 00:03:55,860
flash fill it with something useful like

112
00:03:55,860 --> 00:03:57,959
if it goes to that unused flash maybe it

113
00:03:57,959 --> 00:04:01,140
goes to a a jump somewhere that says hey

114
00:04:01,140 --> 00:04:03,120
let me let me record this event possibly

115
00:04:03,120 --> 00:04:05,040
I've been glitched maybe I have a

116
00:04:05,040 --> 00:04:06,599
quality problem that would have

117
00:04:06,599 --> 00:04:09,720
mitigated that really really nicely and

118
00:04:09,720 --> 00:04:11,700
the other thing I'll mention there

119
00:04:11,700 --> 00:04:13,980
um I've I built one of those types of

120
00:04:13,980 --> 00:04:16,199
controls at a semiconductor I was

121
00:04:16,199 --> 00:04:18,779
working on a secure microcontroller and

122
00:04:18,779 --> 00:04:21,600
what I did is I I had the processor

123
00:04:21,600 --> 00:04:23,520
effectively put itself in a rock State

124
00:04:23,520 --> 00:04:25,259
said oh I think I'm being attacked let

125
00:04:25,259 --> 00:04:26,639
me just shut everything down it's going

126
00:04:26,639 --> 00:04:29,580
to be completely non-operational and I

127
00:04:29,580 --> 00:04:32,280
had somebody from a a three-letter

128
00:04:32,280 --> 00:04:34,020
acronym a government agency reviewed

129
00:04:34,020 --> 00:04:37,320
what I was doing and they go Steve it's

130
00:04:37,320 --> 00:04:39,840
every every Junior designer this

131
00:04:39,840 --> 00:04:42,660
Building Product does this which is

132
00:04:42,660 --> 00:04:44,040
tries to shut everything down when you

133
00:04:44,040 --> 00:04:45,479
think you're being attacked you've got

134
00:04:45,479 --> 00:04:47,040
to maintain your operational goals which

135
00:04:47,040 --> 00:04:49,740
is perfect for for an icsot product

136
00:04:49,740 --> 00:04:51,780
right maintain your operational goals

137
00:04:51,780 --> 00:04:53,940
and he the story he explained was he had

138
00:04:53,940 --> 00:04:55,199
built something similar he'd done the

139
00:04:55,199 --> 00:04:57,660
exact same mistake and the device that

140
00:04:57,660 --> 00:04:59,580
he had built was just for some comms on

141
00:04:59,580 --> 00:05:01,680
telephones securing comms that somebody

142
00:05:01,680 --> 00:05:03,720
had taken that to secure comms on an

143
00:05:03,720 --> 00:05:06,780
airplane and at high altitudes bits will

144
00:05:06,780 --> 00:05:09,180
flip ones will become zeros solar

145
00:05:09,180 --> 00:05:11,720
radiation will change the state of Flash

146
00:05:11,720 --> 00:05:13,740
and his device thought it was being

147
00:05:13,740 --> 00:05:15,479
attacked shut down all the comms and the

148
00:05:15,479 --> 00:05:17,340
plane crashed so anyhow don't don't

149
00:05:17,340 --> 00:05:19,259
crash the plane that's really the the

150
00:05:19,259 --> 00:05:20,520
thing I want to say now the other one is

151
00:05:20,520 --> 00:05:22,199
signed firmware

152
00:05:22,199 --> 00:05:24,479
um this is you'd think it'd be common

153
00:05:24,479 --> 00:05:26,039
but it's not

154
00:05:26,039 --> 00:05:27,960
um so for devices that are out there

155
00:05:27,960 --> 00:05:29,699
firmware should be signed you should

156
00:05:29,699 --> 00:05:30,780
validate the formula before it gets

157
00:05:30,780 --> 00:05:32,280
loaded validate the firmware before you

158
00:05:32,280 --> 00:05:34,979
you update it

159
00:05:34,979 --> 00:05:36,600
um and kind of the interesting thing

160
00:05:36,600 --> 00:05:38,759
here there is no common rubric for how

161
00:05:38,759 --> 00:05:40,139
we sign form or probably something to be

162
00:05:40,139 --> 00:05:42,360
nice kind of after the talk would love

163
00:05:42,360 --> 00:05:44,340
to talk to folks about trying to get

164
00:05:44,340 --> 00:05:45,840
together about finding some more common

165
00:05:45,840 --> 00:05:48,419
ways that that we can have a more of a

166
00:05:48,419 --> 00:05:50,280
standard approach to how we're signing

167
00:05:50,280 --> 00:05:51,900
firmware it is kind of all over the map

168
00:05:51,900 --> 00:05:54,060
right now and there's good practices bad

169
00:05:54,060 --> 00:05:56,280
practices also people calling things

170
00:05:56,280 --> 00:05:58,680
sign that are really hashes it's sort of

171
00:05:58,680 --> 00:06:00,780
just a common rubric now here's one

172
00:06:00,780 --> 00:06:02,639
um we'll get into where it's it's maybe

173
00:06:02,639 --> 00:06:04,620
a little controversial so you've got

174
00:06:04,620 --> 00:06:06,120
test Code test code's running in your

175
00:06:06,120 --> 00:06:07,860
embedded device

176
00:06:07,860 --> 00:06:09,900
um disabling that test code is kind of

177
00:06:09,900 --> 00:06:11,520
the common guidance if you're on a pen

178
00:06:11,520 --> 00:06:12,780
test to say oh we found the test code

179
00:06:12,780 --> 00:06:14,400
make sure you disable it and so you'll

180
00:06:14,400 --> 00:06:16,919
have some some mechanism there that says

181
00:06:16,919 --> 00:06:18,660
okay when the test code's there make

182
00:06:18,660 --> 00:06:20,940
sure it doesn't run

183
00:06:20,940 --> 00:06:23,460
um that's okay but really best practice

184
00:06:23,460 --> 00:06:25,500
is just remove it in the production

185
00:06:25,500 --> 00:06:27,660
software itself and and the reason it's

186
00:06:27,660 --> 00:06:29,220
controversial there's always some part

187
00:06:29,220 --> 00:06:31,080
of a product organization wants to

188
00:06:31,080 --> 00:06:32,460
maintain that test code just in case

189
00:06:32,460 --> 00:06:33,840
there's a field return just in case

190
00:06:33,840 --> 00:06:36,720
really get rid of it I mean it's it's

191
00:06:36,720 --> 00:06:38,400
I've lived this over and over again in a

192
00:06:38,400 --> 00:06:39,900
variety of fields

193
00:06:39,900 --> 00:06:41,520
um those use cases are generally

194
00:06:41,520 --> 00:06:45,000
overstated and removing the Tesco is is

195
00:06:45,000 --> 00:06:47,880
almost always the right way to go and

196
00:06:47,880 --> 00:06:49,319
what's cool about that we show up

197
00:06:49,319 --> 00:06:51,660
security hey make this more secure we

198
00:06:51,660 --> 00:06:54,000
actually have saved some flash so we get

199
00:06:54,000 --> 00:06:55,979
to show up as security and make things

200
00:06:55,979 --> 00:06:58,800
less complex make things uh less flash

201
00:06:58,800 --> 00:07:00,539
could could even be lower cost

202
00:07:00,539 --> 00:07:02,819
um here's another one that that also has

203
00:07:02,819 --> 00:07:04,139
got a little bit of a controversial

204
00:07:04,139 --> 00:07:06,300
piece to it so we are all familiar with

205
00:07:06,300 --> 00:07:08,759
jtags I believe so Jay takes this test

206
00:07:08,759 --> 00:07:10,199
port that allows you to do whatever you

207
00:07:10,199 --> 00:07:11,819
want on a processor

208
00:07:11,819 --> 00:07:13,199
um it's it's there for debugging it's

209
00:07:13,199 --> 00:07:15,060
there for developing a product

210
00:07:15,060 --> 00:07:18,180
so with the chip vendors have done is

211
00:07:18,180 --> 00:07:20,699
added in a mechanism that disables the

212
00:07:20,699 --> 00:07:22,740
pins and usually there's a fuse that

213
00:07:22,740 --> 00:07:24,419
gets blown or there's a password that's

214
00:07:24,419 --> 00:07:26,340
there that and with the password you can

215
00:07:26,340 --> 00:07:28,800
unlock it which is another problem often

216
00:07:28,800 --> 00:07:30,120
there's a way to glitch around the

217
00:07:30,120 --> 00:07:32,280
protection even with the fuse mechanisms

218
00:07:32,280 --> 00:07:34,440
there are um there's some research on

219
00:07:34,440 --> 00:07:36,380
ways around some of the fuse mechanisms

220
00:07:36,380 --> 00:07:38,940
all the chip vendors seem to do this

221
00:07:38,940 --> 00:07:42,000
differently and in reality there was a

222
00:07:42,000 --> 00:07:45,120
time when you could get a processor that

223
00:07:45,120 --> 00:07:48,000
had a JTAG and one that did not and in

224
00:07:48,000 --> 00:07:49,380
some of the secure microcontrollers

225
00:07:49,380 --> 00:07:51,660
you'll see where the jtech logic is

226
00:07:51,660 --> 00:07:53,580
completely removed so what's nice about

227
00:07:53,580 --> 00:07:56,759
that is and and you'll see on here I I

228
00:07:56,759 --> 00:07:58,680
made a mistake it should be pinned for

229
00:07:58,680 --> 00:07:59,940
pin compatible you want to have all the

230
00:07:59,940 --> 00:08:02,039
same pins in all the same places

231
00:08:02,039 --> 00:08:03,240
um and and that's really not that hard

232
00:08:03,240 --> 00:08:06,180
to do as a chip vendor and what you'll

233
00:08:06,180 --> 00:08:10,080
do is have less Gates which means less

234
00:08:10,080 --> 00:08:12,360
real estate on the on the on the chip so

235
00:08:12,360 --> 00:08:13,620
when you're putting chips on a wafer you

236
00:08:13,620 --> 00:08:16,199
can get more chips on a wafer so less

237
00:08:16,199 --> 00:08:17,940
complexity

238
00:08:17,940 --> 00:08:21,720
um better quality ultimately lower costs

239
00:08:21,720 --> 00:08:23,819
to produce so again a security mechanism

240
00:08:23,819 --> 00:08:25,379
that's lower cost when we ever get to

241
00:08:25,379 --> 00:08:26,580
say that

242
00:08:26,580 --> 00:08:28,680
um and so so this one not just about

243
00:08:28,680 --> 00:08:31,139
disabling it long term we really need to

244
00:08:31,139 --> 00:08:33,479
be pushing our chip suppliers to give us

245
00:08:33,479 --> 00:08:35,159
chips that have an option with the JTAG

246
00:08:35,159 --> 00:08:37,099
removed and if we're procuring devices

247
00:08:37,099 --> 00:08:40,260
ask for devices where there is no JTAG

248
00:08:40,260 --> 00:08:42,599
it's not required there's ways to load

249
00:08:42,599 --> 00:08:44,339
code there's ways to do certainly there

250
00:08:44,339 --> 00:08:45,300
was a time when we did this without

251
00:08:45,300 --> 00:08:47,040
jtegs now just

252
00:08:47,040 --> 00:08:49,440
um an interesting point here some of the

253
00:08:49,440 --> 00:08:51,420
new parts are starting to allow remote

254
00:08:51,420 --> 00:08:54,240
JTAG capabilities through Ethernet or

255
00:08:54,240 --> 00:08:56,040
even over the Internet so the moves

256
00:08:56,040 --> 00:08:57,899
actually going in the opposite of of

257
00:08:57,899 --> 00:09:00,720
what I'm recommending here

258
00:09:00,720 --> 00:09:02,399
device software inventories I think

259
00:09:02,399 --> 00:09:04,200
we're all pretty comfortable with this

260
00:09:04,200 --> 00:09:06,120
um certainly in certain regulatory

261
00:09:06,120 --> 00:09:07,500
environments this is now hard

262
00:09:07,500 --> 00:09:10,080
requirement where you have a inventory

263
00:09:10,080 --> 00:09:12,000
of it was always kind of aimed at open

264
00:09:12,000 --> 00:09:13,560
source but of course you want to know

265
00:09:13,560 --> 00:09:14,580
all the software that's running an

266
00:09:14,580 --> 00:09:16,019
embedded device what's in this box

267
00:09:16,019 --> 00:09:18,300
what's running what version's running

268
00:09:18,300 --> 00:09:20,339
does it have known vulnerabilities do we

269
00:09:20,339 --> 00:09:22,140
need to update it

270
00:09:22,140 --> 00:09:23,580
um everybody's pretty comfortable with

271
00:09:23,580 --> 00:09:25,500
that part it's the one below I think

272
00:09:25,500 --> 00:09:28,320
folks really need to pay attention to so

273
00:09:28,320 --> 00:09:31,080
the processors the devices that that

274
00:09:31,080 --> 00:09:34,080
you're procuring have open source vhdl

275
00:09:34,080 --> 00:09:37,019
in them so AES vhdl is very common in a

276
00:09:37,019 --> 00:09:38,820
lot of the processors

277
00:09:38,820 --> 00:09:42,540
um open source JTAG so and again same

278
00:09:42,540 --> 00:09:44,760
questions we ask on the open source

279
00:09:44,760 --> 00:09:47,640
software we need to be asking on what is

280
00:09:47,640 --> 00:09:49,680
the vhdl components that are open source

281
00:09:49,680 --> 00:09:51,839
what are the eulas on it and are there

282
00:09:51,839 --> 00:09:53,760
known vulnerabilities on the open source

283
00:09:53,760 --> 00:09:54,839
that's in the processor that I'm

284
00:09:54,839 --> 00:09:56,700
procuring and again that flows through

285
00:09:56,700 --> 00:09:59,820
all the way through the supply chain

286
00:09:59,820 --> 00:10:02,279
um attack trees so

287
00:10:02,279 --> 00:10:03,899
um short amount of time so I won't spend

288
00:10:03,899 --> 00:10:07,140
a lot of time on this uh about 10 years

289
00:10:07,140 --> 00:10:08,880
ago one of the folks here at the

290
00:10:08,880 --> 00:10:10,140
conference and I built a series of

291
00:10:10,140 --> 00:10:11,940
attack trees for doing some pen testing

292
00:10:11,940 --> 00:10:13,920
I built them out further after we worked

293
00:10:13,920 --> 00:10:15,720
on this together and this one was about

294
00:10:15,720 --> 00:10:17,160
disabling something called a takeout

295
00:10:17,160 --> 00:10:19,080
which is a bridge between two types of

296
00:10:19,080 --> 00:10:21,779
communication technology and

297
00:10:21,779 --> 00:10:24,000
um it had a much larger fishbone looking

298
00:10:24,000 --> 00:10:25,740
diagram but basically we had kind of

299
00:10:25,740 --> 00:10:27,060
right here I just narrowed it down to

300
00:10:27,060 --> 00:10:28,980
two ways we were looking at if you were

301
00:10:28,980 --> 00:10:30,360
going to disable the RF you might remove

302
00:10:30,360 --> 00:10:32,399
the antenna and you can see we rated it

303
00:10:32,399 --> 00:10:35,040
by tax scale repeatability and cost and

304
00:10:35,040 --> 00:10:36,480
then have a kind of feasibility score at

305
00:10:36,480 --> 00:10:38,519
the bottom and on the right we did all

306
00:10:38,519 --> 00:10:39,480
we could do remote confusion

307
00:10:39,480 --> 00:10:41,220
configuration Brute Force the password

308
00:10:41,220 --> 00:10:43,980
you can see we'd scored the feasibility

309
00:10:43,980 --> 00:10:45,600
much higher obviously for just taking

310
00:10:45,600 --> 00:10:47,240
the antenna off

311
00:10:47,240 --> 00:10:50,579
now it's always interesting when reality

312
00:10:50,579 --> 00:10:52,440
kicks in so

313
00:10:52,440 --> 00:10:54,899
few years ago there was an employee at

314
00:10:54,899 --> 00:10:57,120
one of the vendors who was fired and

315
00:10:57,120 --> 00:10:58,800
when he was fired his equipment was not

316
00:10:58,800 --> 00:10:59,760
taken away

317
00:10:59,760 --> 00:11:03,480
and the uh individual

318
00:11:03,480 --> 00:11:05,940
logged in to a series of takeouts all

319
00:11:05,940 --> 00:11:07,500
across the Northeast

320
00:11:07,500 --> 00:11:09,480
and was changing the RF characteristics

321
00:11:09,480 --> 00:11:11,940
of the takeouts was

322
00:11:11,940 --> 00:11:12,720
um

323
00:11:12,720 --> 00:11:14,760
modifying the login screen to have a

324
00:11:14,760 --> 00:11:16,500
bunch of Pink Floyd lyrics on it and

325
00:11:16,500 --> 00:11:17,519
then change the password to something

326
00:11:17,519 --> 00:11:20,820
profane now the net result was

327
00:11:20,820 --> 00:11:22,560
the infrastructure that was interacting

328
00:11:22,560 --> 00:11:24,360
with the Water Systems wasn't working

329
00:11:24,360 --> 00:11:26,640
you couldn't communicate for months now

330
00:11:26,640 --> 00:11:29,459
the FBI got involved they went to they

331
00:11:29,459 --> 00:11:31,620
they found the IP address what was what

332
00:11:31,620 --> 00:11:33,060
was connecting to these devices and

333
00:11:33,060 --> 00:11:34,500
found it was registered with the vendor

334
00:11:34,500 --> 00:11:36,300
very quickly figured out who it was

335
00:11:36,300 --> 00:11:38,040
they're bringing the individual in they

336
00:11:38,040 --> 00:11:39,959
said you're a master hacker and he's I'm

337
00:11:39,959 --> 00:11:41,160
not a master hacker this never took away

338
00:11:41,160 --> 00:11:43,380
my equipment and so this is a good

339
00:11:43,380 --> 00:11:46,380
example of Insider threat so

340
00:11:46,380 --> 00:11:48,480
um I spent a lot of years in retail and

341
00:11:48,480 --> 00:11:50,700
Banking and something we were very

342
00:11:50,700 --> 00:11:52,440
comfortable with there and it seems like

343
00:11:52,440 --> 00:11:53,820
we're not as comfortable with it in the

344
00:11:53,820 --> 00:11:56,519
otics space was just this idea that The

345
00:11:56,519 --> 00:11:58,620
Insider is the attacker who used to talk

346
00:11:58,620 --> 00:12:00,360
about it all the time imagine you're the

347
00:12:00,360 --> 00:12:01,800
attacker imagine you're the one

348
00:12:01,800 --> 00:12:03,060
designing the trolls that you're the one

349
00:12:03,060 --> 00:12:04,380
that's going to be attacking it how do

350
00:12:04,380 --> 00:12:06,000
you design it in a way it doesn't mean

351
00:12:06,000 --> 00:12:08,279
it's perfect if you if you if you can't

352
00:12:08,279 --> 00:12:09,959
imagine a way to attack it but it's the

353
00:12:09,959 --> 00:12:11,040
right way to think about it having

354
00:12:11,040 --> 00:12:13,260
mitigating compensating controls for

355
00:12:13,260 --> 00:12:14,880
those of us that are doing the the

356
00:12:14,880 --> 00:12:16,740
building of these systems to protect

357
00:12:16,740 --> 00:12:19,079
them and so that's that's one kind of

358
00:12:19,079 --> 00:12:20,220
from the banking side of the way the

359
00:12:20,220 --> 00:12:22,200
reason we saw that is in the banking

360
00:12:22,200 --> 00:12:24,180
system it's very common for people

361
00:12:24,180 --> 00:12:26,160
insiders to the the the the money

362
00:12:26,160 --> 00:12:28,380
motivation was very high so you did see

363
00:12:28,380 --> 00:12:30,180
that happen a lot unfortunately it was

364
00:12:30,180 --> 00:12:31,620
kind of hard to figure out so anyhow

365
00:12:31,620 --> 00:12:33,779
you're building an embedded device you

366
00:12:33,779 --> 00:12:34,860
still need to think about identity

367
00:12:34,860 --> 00:12:36,240
management you still need to think about

368
00:12:36,240 --> 00:12:37,920
how do I revoke privileges what

369
00:12:37,920 --> 00:12:40,680
privileges who has access to what why

370
00:12:40,680 --> 00:12:42,660
um all the same things we think about

371
00:12:42,660 --> 00:12:44,220
um in other systems our embedded devices

372
00:12:44,220 --> 00:12:45,839
a lot of times when we're designing them

373
00:12:45,839 --> 00:12:48,600
when we're procuring them when we're

374
00:12:48,600 --> 00:12:50,100
installing them this seems to get left

375
00:12:50,100 --> 00:12:52,139
out a lot on a better devices same thing

376
00:12:52,139 --> 00:12:53,519
with removing the remote and local

377
00:12:53,519 --> 00:12:55,620
debugging capabilities

378
00:12:55,620 --> 00:12:56,839
um

379
00:12:56,839 --> 00:12:59,279
basically there needs to be a mechanism

380
00:12:59,279 --> 00:13:00,600
where that's managed when you're

381
00:13:00,600 --> 00:13:02,940
building the device and then also again

382
00:13:02,940 --> 00:13:04,500
when you're installing it and

383
00:13:04,500 --> 00:13:06,839
configuring it field tool security so

384
00:13:06,839 --> 00:13:09,060
there was a field tool that allowed this

385
00:13:09,060 --> 00:13:12,540
individual to to set up maintain these

386
00:13:12,540 --> 00:13:13,860
takeouts

387
00:13:13,860 --> 00:13:15,300
um there's all kinds of ways to do this

388
00:13:15,300 --> 00:13:18,060
they also are not there's no commonly a

389
00:13:18,060 --> 00:13:19,079
great way to do this it'd be a good

390
00:13:19,079 --> 00:13:21,180
thing I think if we shared more of the

391
00:13:21,180 --> 00:13:22,500
mechanisms that are there and

392
00:13:22,500 --> 00:13:23,820
coordinated better on this one

393
00:13:23,820 --> 00:13:25,560
specifically

394
00:13:25,560 --> 00:13:27,720
um so another attack tree Mass

395
00:13:27,720 --> 00:13:30,839
disconnect so this one's about metering

396
00:13:30,839 --> 00:13:34,079
and uh it was one um when I was when I

397
00:13:34,079 --> 00:13:35,700
was working in the space worried me a

398
00:13:35,700 --> 00:13:37,740
lot was was as we're building these

399
00:13:37,740 --> 00:13:39,600
products how do you ensure that somebody

400
00:13:39,600 --> 00:13:42,000
can't run a disconnect that takes out a

401
00:13:42,000 --> 00:13:44,880
you know a a sizable portion of of the

402
00:13:44,880 --> 00:13:46,740
power grid and so you can see on the

403
00:13:46,740 --> 00:13:48,120
attack tree you know we could have a

404
00:13:48,120 --> 00:13:50,100
broadcast service disconnect and there's

405
00:13:50,100 --> 00:13:52,320
mitigations in place for that and well

406
00:13:52,320 --> 00:13:54,060
to accomplish that you'd want to

407
00:13:54,060 --> 00:13:56,279
compromise the has now we have this is

408
00:13:56,279 --> 00:13:58,200
not that feasible you'll see

409
00:13:58,200 --> 00:13:59,820
um meaner virus this is basically the

410
00:13:59,820 --> 00:14:01,440
Mike Davis presentation from the

411
00:14:01,440 --> 00:14:03,600
beginning of the presentation

412
00:14:03,600 --> 00:14:05,639
um and again had that one less feasible

413
00:14:05,639 --> 00:14:07,079
due to a lot of the compensating

414
00:14:07,079 --> 00:14:08,880
controls that were there well this did

415
00:14:08,880 --> 00:14:09,899
happen

416
00:14:09,899 --> 00:14:12,060
um happened about two years ago

417
00:14:12,060 --> 00:14:16,200
um in uh 2020 there was a command sent

418
00:14:16,200 --> 00:14:19,079
out to disconnect power at 1.23 million

419
00:14:19,079 --> 00:14:22,980
meters at a a major metropolitan area in

420
00:14:22,980 --> 00:14:26,579
India and so what what happened was the

421
00:14:26,579 --> 00:14:28,260
system it was a cellular based calm

422
00:14:28,260 --> 00:14:30,480
system the cues

423
00:14:30,480 --> 00:14:33,600
um apparently couldn't uh were going so

424
00:14:33,600 --> 00:14:35,579
slow that after an hour only 150 000

425
00:14:35,579 --> 00:14:38,399
disconnects had been sent out the asset

426
00:14:38,399 --> 00:14:40,019
operators were able to shut it down at

427
00:14:40,019 --> 00:14:42,600
that point but it took a while to reset

428
00:14:42,600 --> 00:14:43,980
the system

429
00:14:43,980 --> 00:14:45,540
um it took days for some people to get

430
00:14:45,540 --> 00:14:47,820
their power restored it was a major

431
00:14:47,820 --> 00:14:51,959
event for this utility the executives at

432
00:14:51,959 --> 00:14:54,300
the utility uh there were there were had

433
00:14:54,300 --> 00:14:56,459
an impact on careers there was a

434
00:14:56,459 --> 00:14:58,920
government inquiry whether it was an

435
00:14:58,920 --> 00:15:01,760
external threat actor or an internal

436
00:15:01,760 --> 00:15:04,740
issue still not public the results of

437
00:15:04,740 --> 00:15:06,480
that were basically that they they said

438
00:15:06,480 --> 00:15:07,500
they weren't going to go public with

439
00:15:07,500 --> 00:15:11,279
what the actual root cause was so kind

440
00:15:11,279 --> 00:15:13,199
of a good example where

441
00:15:13,199 --> 00:15:16,380
um got mitigations it it still happened

442
00:15:16,380 --> 00:15:18,600
and so back to the device side of things

443
00:15:18,600 --> 00:15:20,339
one of the things that helps is

444
00:15:20,339 --> 00:15:22,199
cryptography

445
00:15:22,199 --> 00:15:24,000
um photography is a deep subject

446
00:15:24,000 --> 00:15:25,560
obviously we're not going to cover than

447
00:15:25,560 --> 00:15:28,040
25 minutes related to embedded devices

448
00:15:28,040 --> 00:15:30,320
but generally

449
00:15:30,320 --> 00:15:32,639
encryption is for privacy I think most

450
00:15:32,639 --> 00:15:34,199
of us know that

451
00:15:34,199 --> 00:15:36,000
um and and really for in the case of a

452
00:15:36,000 --> 00:15:37,620
mass disconnect not really helpful but

453
00:15:37,620 --> 00:15:39,480
when you're talking depending on the use

454
00:15:39,480 --> 00:15:41,639
case it does have a place

455
00:15:41,639 --> 00:15:44,160
um secure hashing is for integrity well

456
00:15:44,160 --> 00:15:46,199
so is uh Integrity checks off of

457
00:15:46,199 --> 00:15:48,540
different types of AES counter modes

458
00:15:48,540 --> 00:15:49,980
um and there's lots of other ways to do

459
00:15:49,980 --> 00:15:51,779
Integrity lots of different modes that

460
00:15:51,779 --> 00:15:54,060
manage this a lot of times we'll look at

461
00:15:54,060 --> 00:15:56,040
nist recommendations and we'll we'll

462
00:15:56,040 --> 00:15:57,839
manage all that but there's it gets

463
00:15:57,839 --> 00:15:59,880
becomes a very complicated topic on the

464
00:15:59,880 --> 00:16:01,500
application of the cryptography and then

465
00:16:01,500 --> 00:16:03,480
the last one uh that I've got just just

466
00:16:03,480 --> 00:16:05,519
as a quick survey on embedded systems

467
00:16:05,519 --> 00:16:06,839
and cryptographies around signatures

468
00:16:06,839 --> 00:16:08,820
which is about identifying where uh

469
00:16:08,820 --> 00:16:10,560
proof of origin where something came

470
00:16:10,560 --> 00:16:12,660
from non-repudiation

471
00:16:12,660 --> 00:16:14,220
um having said all that there's other

472
00:16:14,220 --> 00:16:15,959
types of cryptography uh like

473
00:16:15,959 --> 00:16:17,820
homomorphic encryption um of course

474
00:16:17,820 --> 00:16:19,260
there's a lot a lot of talk these days

475
00:16:19,260 --> 00:16:21,600
on Quantum resistant and really the

476
00:16:21,600 --> 00:16:23,639
recommendation I would have and I just

477
00:16:23,639 --> 00:16:24,839
don't see enough people do this is

478
00:16:24,839 --> 00:16:27,600
higher photographers the if you're

479
00:16:27,600 --> 00:16:28,820
building a device

480
00:16:28,820 --> 00:16:31,440
there are cryptographic libraries that

481
00:16:31,440 --> 00:16:33,959
you can procure that and they'll come

482
00:16:33,959 --> 00:16:35,339
with services from the cryptographic

483
00:16:35,339 --> 00:16:38,100
community it's a complicated topic when

484
00:16:38,100 --> 00:16:40,199
I was doing semiconductors I had a team

485
00:16:40,199 --> 00:16:41,820
that I was working with and that was

486
00:16:41,820 --> 00:16:45,480
working for me of cryptographers and

487
00:16:45,480 --> 00:16:48,300
even within that Community their

488
00:16:48,300 --> 00:16:50,820
specialization and it's very easy to get

489
00:16:50,820 --> 00:16:52,139
this wrong

490
00:16:52,139 --> 00:16:53,820
um and so that's that's that's one and

491
00:16:53,820 --> 00:16:54,839
now

492
00:16:54,839 --> 00:16:55,620
um

493
00:16:55,620 --> 00:16:57,480
architecture certificate issuance and

494
00:16:57,480 --> 00:16:59,519
updating this is something that's uh

495
00:16:59,519 --> 00:17:01,920
commonly not really thought through and

496
00:17:01,920 --> 00:17:03,959
really the basic control here is

497
00:17:03,959 --> 00:17:06,959
architect it design it know where the

498
00:17:06,959 --> 00:17:09,000
certificates are coming from know the

499
00:17:09,000 --> 00:17:10,079
mechanism for the obvious if you're

500
00:17:10,079 --> 00:17:12,059
using very common embedded devices to

501
00:17:12,059 --> 00:17:13,500
have trivials that don't expire for

502
00:17:13,500 --> 00:17:15,299
identity so is there operational

503
00:17:15,299 --> 00:17:17,220
certificates how are those issued manage

504
00:17:17,220 --> 00:17:18,660
maintained

505
00:17:18,660 --> 00:17:21,660
um this one's a controversial so which

506
00:17:21,660 --> 00:17:22,380
is

507
00:17:22,380 --> 00:17:23,880
um and this came from my experience in

508
00:17:23,880 --> 00:17:25,919
the payment world so in in the payment

509
00:17:25,919 --> 00:17:29,880
world uh if your PIN pads ATMs what we

510
00:17:29,880 --> 00:17:31,440
would do is is there was a key injection

511
00:17:31,440 --> 00:17:34,400
process that required a cage it required

512
00:17:34,400 --> 00:17:37,320
a multi multi-person authentication off

513
00:17:37,320 --> 00:17:39,539
I have man traps involved so a proper

514
00:17:39,539 --> 00:17:41,280
way to do key injection and it costs

515
00:17:41,280 --> 00:17:44,220
money usually it was it it was it was it

516
00:17:44,220 --> 00:17:47,820
was it was sizable so um per device and

517
00:17:47,820 --> 00:17:49,260
so you're changing the manufacturing

518
00:17:49,260 --> 00:17:51,419
flow I've seen it done where the subcons

519
00:17:51,419 --> 00:17:52,919
have to do it and there's going to be a

520
00:17:52,919 --> 00:17:55,020
cost associated with its own right so if

521
00:17:55,020 --> 00:17:56,640
somebody's injecting keys or even

522
00:17:56,640 --> 00:17:58,020
injecting certs and there's not a cost

523
00:17:58,020 --> 00:18:00,299
associated with it probably means some

524
00:18:00,299 --> 00:18:01,980
shortcuts are being taken on the key

525
00:18:01,980 --> 00:18:04,260
injection so if needed though and I

526
00:18:04,260 --> 00:18:05,880
talked to one of the folks here who

527
00:18:05,880 --> 00:18:08,340
works on some of the OT assets and and

528
00:18:08,340 --> 00:18:09,660
they're doing this which is which is

529
00:18:09,660 --> 00:18:12,240
really good to hear which is if needed

530
00:18:12,240 --> 00:18:14,700
you can inject on chip on real or you

531
00:18:14,700 --> 00:18:16,080
can inject on chip on the cartridge

532
00:18:16,080 --> 00:18:19,080
which means before it goes to the subcon

533
00:18:19,080 --> 00:18:21,299
there are these secure facilities that

534
00:18:21,299 --> 00:18:23,100
are set up to do this this would be the

535
00:18:23,100 --> 00:18:24,660
right way to do it again there's a cost

536
00:18:24,660 --> 00:18:26,220
associated with this but there should be

537
00:18:26,220 --> 00:18:28,320
if it's done right that's really the the

538
00:18:28,320 --> 00:18:30,299
recommendation on this one

539
00:18:30,299 --> 00:18:33,600
um and the last things uh in terms of

540
00:18:33,600 --> 00:18:35,039
recommending controls is understand your

541
00:18:35,039 --> 00:18:36,840
random number generation

542
00:18:36,840 --> 00:18:41,520
so if one is generating entropy

543
00:18:41,520 --> 00:18:44,400
um you if you're doing it right you have

544
00:18:44,400 --> 00:18:47,039
to run long statistical tests there's

545
00:18:47,039 --> 00:18:49,380
some a handful of tests recommendous

546
00:18:49,380 --> 00:18:51,600
there's Die Hard tests there's all kinds

547
00:18:51,600 --> 00:18:53,340
of different test Suites out there from

548
00:18:53,340 --> 00:18:55,860
BSI and others that that allow you to

549
00:18:55,860 --> 00:18:57,720
determine yes I have good entropy what

550
00:18:57,720 --> 00:18:59,760
is the entropy strength of what I'm

551
00:18:59,760 --> 00:19:00,780
doing here

552
00:19:00,780 --> 00:19:02,760
and um

553
00:19:02,760 --> 00:19:04,860
what happens is a lot of times people

554
00:19:04,860 --> 00:19:06,179
will build a random number generally

555
00:19:06,179 --> 00:19:07,500
they might do this statistical test

556
00:19:07,500 --> 00:19:08,880
during development

557
00:19:08,880 --> 00:19:10,679
and then in the actual product they

558
00:19:10,679 --> 00:19:12,840
don't keep the tests one of the ways to

559
00:19:12,840 --> 00:19:14,820
know that you don't have a good trng is

560
00:19:14,820 --> 00:19:16,820
it doesn't take a long time to get

561
00:19:16,820 --> 00:19:18,840
entropy because they're not running the

562
00:19:18,840 --> 00:19:21,240
statistical test why in the live when

563
00:19:21,240 --> 00:19:23,340
you have the device and if a device is

564
00:19:23,340 --> 00:19:25,679
generating entropy through a trng it

565
00:19:25,679 --> 00:19:27,780
should run those long run statistical

566
00:19:27,780 --> 00:19:29,640
tests every time you ask for entropy it

567
00:19:29,640 --> 00:19:31,440
should take a minute every time you ask

568
00:19:31,440 --> 00:19:33,419
for a good entropy if it's not if the

569
00:19:33,419 --> 00:19:36,120
entropy comes back right away it's not a

570
00:19:36,120 --> 00:19:38,580
it's not an actual trng or the the work

571
00:19:38,580 --> 00:19:40,140
isn't being done probably and why is

572
00:19:40,140 --> 00:19:42,480
that done that way for bias so if

573
00:19:42,480 --> 00:19:43,860
somebody takes the top off the part

574
00:19:43,860 --> 00:19:45,900
shines light on it if there's RF

575
00:19:45,900 --> 00:19:47,280
interference maybe

576
00:19:47,280 --> 00:19:48,900
um the random number generation acts

577
00:19:48,900 --> 00:19:49,860
differently at different temperatures

578
00:19:49,860 --> 00:19:52,320
those biases can be detected with the

579
00:19:52,320 --> 00:19:54,000
statistical test without that you're not

580
00:19:54,000 --> 00:19:55,860
going to have it now short of it is

581
00:19:55,860 --> 00:19:57,360
higher cryptographers they know entropy

582
00:19:57,360 --> 00:19:58,679
two by the way

583
00:19:58,679 --> 00:20:02,220
um very helpful there so with that I've

584
00:20:02,220 --> 00:20:05,220
got five minutes left and um again

585
00:20:05,220 --> 00:20:07,020
there's a lot of good people doing a lot

586
00:20:07,020 --> 00:20:09,360
of good work in this space and a and I

587
00:20:09,360 --> 00:20:11,400
do I do want to make sure that that a

588
00:20:11,400 --> 00:20:12,480
lot of the controls I've mentioned here

589
00:20:12,480 --> 00:20:14,340
are in a lot of the devices that that

590
00:20:14,340 --> 00:20:16,559
that that you're you're uh procurring

591
00:20:16,559 --> 00:20:18,840
today so I'll pause for questions I got

592
00:20:18,840 --> 00:20:21,419
five minutes for questions

593
00:20:21,419 --> 00:20:23,580
thank you a lot of interesting

594
00:20:23,580 --> 00:20:26,340
techniques uh one of the concern I have

595
00:20:26,340 --> 00:20:30,000
is uh some of the techniques you

596
00:20:30,000 --> 00:20:32,820
mentioned uh is difficult to implement

597
00:20:32,820 --> 00:20:35,660
in a resource constrained

598
00:20:35,660 --> 00:20:38,400
industrial device and also industrial

599
00:20:38,400 --> 00:20:42,179
iot devices including

600
00:20:42,179 --> 00:20:44,580
um some of the cryptography Techniques

601
00:20:44,580 --> 00:20:47,760
plus even the embedded devices haven't

602
00:20:47,760 --> 00:20:50,940
even implemented at Large Scale the

603
00:20:50,940 --> 00:20:53,700
identity management framework itself

604
00:20:53,700 --> 00:20:57,720
right so how do you address that and

605
00:20:57,720 --> 00:21:00,780
particularly cost implication is very

606
00:21:00,780 --> 00:21:03,240
concerned for these vendors to compete

607
00:21:03,240 --> 00:21:05,280
in the market so just if you could wrap

608
00:21:05,280 --> 00:21:07,919
around address those concerns so every

609
00:21:07,919 --> 00:21:09,419
field I've entered whether it was

610
00:21:09,419 --> 00:21:12,780
banking whether it was retail when I was

611
00:21:12,780 --> 00:21:15,120
doing semiconductor and then also in in

612
00:21:15,120 --> 00:21:16,620
the grid space when I was doing da in

613
00:21:16,620 --> 00:21:19,140
scada comms this concern comes up

614
00:21:19,140 --> 00:21:21,179
and I've been doing crypto on 8-bit

615
00:21:21,179 --> 00:21:23,460
micros running two megahertz in resource

616
00:21:23,460 --> 00:21:25,200
constrained devices inductively powered

617
00:21:25,200 --> 00:21:28,200
devices there's a way to get there

618
00:21:28,200 --> 00:21:30,120
um that that that that argument's dated

619
00:21:30,120 --> 00:21:32,280
I mean just just to be blunt it's just

620
00:21:32,280 --> 00:21:35,100
really dated so um uh back to the higher

621
00:21:35,100 --> 00:21:36,780
cryptographers so what I highly

622
00:21:36,780 --> 00:21:39,659
recommend is make sure you engage with

623
00:21:39,659 --> 00:21:41,280
some of the folks that do cryptography

624
00:21:41,280 --> 00:21:43,799
you don't have to have dedicated

625
00:21:43,799 --> 00:21:46,320
security micros to do this stuff you can

626
00:21:46,320 --> 00:21:47,640
use it with general purpose micros

627
00:21:47,640 --> 00:21:49,919
there's lots of of techniques out there

628
00:21:49,919 --> 00:21:53,179
that allow you to run in deeply

629
00:21:53,179 --> 00:21:56,340
in the early to mid 90s I was working on

630
00:21:56,340 --> 00:21:57,900
digital cash

631
00:21:57,900 --> 00:22:02,159
on 8-bit micros with 16k of RAM and we

632
00:22:02,159 --> 00:22:03,960
were doing cryptography including public

633
00:22:03,960 --> 00:22:07,020
key crypto so there's a way to get there

634
00:22:07,020 --> 00:22:08,880
um and the other part of it is latency

635
00:22:08,880 --> 00:22:10,919
right so and it's not that latency

636
00:22:10,919 --> 00:22:12,900
latency is very important in OT systems

637
00:22:12,900 --> 00:22:14,580
it needs to be architected I think

638
00:22:14,580 --> 00:22:16,020
that's the other half of it but I don't

639
00:22:16,020 --> 00:22:17,760
think I don't think

640
00:22:17,760 --> 00:22:19,799
saying I have a resource constrained

641
00:22:19,799 --> 00:22:21,000
device therefore I don't need to do

642
00:22:21,000 --> 00:22:22,500
crypto I don't think that argument

643
00:22:22,500 --> 00:22:25,159
washes anymore

644
00:22:25,500 --> 00:22:27,900
go ahead uh this may be just asking you

645
00:22:27,900 --> 00:22:30,960
to pontificate a bit but when you talked

646
00:22:30,960 --> 00:22:31,880
about

647
00:22:31,880 --> 00:22:36,080
the prevalence of encrypted uh Flash

648
00:22:36,080 --> 00:22:39,480
versus the less prevalence of signed

649
00:22:39,480 --> 00:22:40,740
firmware do you think that's just

650
00:22:40,740 --> 00:22:42,419
because the economic like the IP

651
00:22:42,419 --> 00:22:45,480
protection is understood for encrypting

652
00:22:45,480 --> 00:22:47,400
what's there but signing is not

653
00:22:47,400 --> 00:22:48,840
important for protecting the business

654
00:22:48,840 --> 00:22:50,940
value is that why that

655
00:22:50,940 --> 00:22:53,640
so um it's yeah it is it so it's

656
00:22:53,640 --> 00:22:55,140
speculation right

657
00:22:55,140 --> 00:22:57,120
um and and what I what I would say is

658
00:22:57,120 --> 00:22:59,820
for encrypting flash some of the parts

659
00:22:59,820 --> 00:23:01,620
come with a bit you flip a bit and you

660
00:23:01,620 --> 00:23:03,419
have encrypted flash so that's really

661
00:23:03,419 --> 00:23:05,640
easy right second

662
00:23:05,640 --> 00:23:07,919
um sadly uh a lot of a lot of

663
00:23:07,919 --> 00:23:09,840
programmers are confident I can

664
00:23:09,840 --> 00:23:11,100
Implement cryptography and they'll

665
00:23:11,100 --> 00:23:12,659
Implement AES or some type of

666
00:23:12,659 --> 00:23:14,280
cryptography and some often they'll

667
00:23:14,280 --> 00:23:16,080
implement it wrong by the way

668
00:23:16,080 --> 00:23:17,340
um and they'll pick a mode that doesn't

669
00:23:17,340 --> 00:23:18,960
make sense for Flash encryption but

670
00:23:18,960 --> 00:23:21,480
they'll do it and so um I would say just

671
00:23:21,480 --> 00:23:23,400
the technical barrier to entry to

672
00:23:23,400 --> 00:23:25,799
encrypting flash is much smaller than

673
00:23:25,799 --> 00:23:27,179
for sign firmware the other thing that's

674
00:23:27,179 --> 00:23:29,039
interesting about sign firmware I don't

675
00:23:29,039 --> 00:23:30,480
know of any two vendors doing it the

676
00:23:30,480 --> 00:23:31,380
same way

677
00:23:31,380 --> 00:23:34,980
so um a really kind of a um and and

678
00:23:34,980 --> 00:23:36,480
Michael's not in his head violently yes

679
00:23:36,480 --> 00:23:37,440
right here in front of me which is

680
00:23:37,440 --> 00:23:38,220
awesome

681
00:23:38,220 --> 00:23:40,080
um so which is probably Michael myself

682
00:23:40,080 --> 00:23:41,940
and a few others at the next beer eye

683
00:23:41,940 --> 00:23:43,500
sack we should probably start sketching

684
00:23:43,500 --> 00:23:44,820
out a common way for folks to sign

685
00:23:44,820 --> 00:23:46,860
firmware because it really there should

686
00:23:46,860 --> 00:23:48,539
just be here's the cookbook here's how

687
00:23:48,539 --> 00:23:49,919
you do it

688
00:23:49,919 --> 00:23:52,500
um uh here's a classic example

689
00:23:52,500 --> 00:23:55,020
um does the does the manufacturer of the

690
00:23:55,020 --> 00:23:56,340
firmware sign the firmware or does the

691
00:23:56,340 --> 00:23:57,960
asset owner sign the firmware you see

692
00:23:57,960 --> 00:23:59,400
that answer differently depending on

693
00:23:59,400 --> 00:24:00,900
vendor vendor type

694
00:24:00,900 --> 00:24:02,100
um and and what's the right answer

695
00:24:02,100 --> 00:24:03,840
probably yes as a community should

696
00:24:03,840 --> 00:24:05,400
figure that out right

697
00:24:05,400 --> 00:24:06,900
um so and yeah Mike's got a great answer

698
00:24:06,900 --> 00:24:09,659
which is both so um I've got time I

699
00:24:09,659 --> 00:24:12,120
think for one more question

700
00:24:12,120 --> 00:24:13,860
um just to make sure okay yeah go ahead

701
00:24:13,860 --> 00:24:16,200
I just wanted to add a point regarding

702
00:24:16,200 --> 00:24:19,140
there's a work uh by nist and I'm from

703
00:24:19,140 --> 00:24:24,000
miter so my train is worked on a truster

704
00:24:24,000 --> 00:24:26,760
Internet of Things device networking

705
00:24:26,760 --> 00:24:29,039
layer onboarding and life cycle

706
00:24:29,039 --> 00:24:33,299
management uh publication sure that uh

707
00:24:33,299 --> 00:24:35,159
actually addresses some of these IT

708
00:24:35,159 --> 00:24:36,720
addresses some of them yeah IT addresses

709
00:24:36,720 --> 00:24:37,860
some of them

710
00:24:37,860 --> 00:24:39,539
um and I would argue if you look at that

711
00:24:39,539 --> 00:24:41,400
guidance if you look at the nist iot

712
00:24:41,400 --> 00:24:43,440
guidance if you look at the 7628

713
00:24:43,440 --> 00:24:45,480
guidance for from nist for the for the

714
00:24:45,480 --> 00:24:46,500
there's a lot of people in the room

715
00:24:46,500 --> 00:24:48,419
worked on it's incomplete all of it's

716
00:24:48,419 --> 00:24:50,460
incomplete yes it is it is a good

717
00:24:50,460 --> 00:24:52,980
starting point but at least that is uh

718
00:24:52,980 --> 00:24:55,799
recently done and even we are proposing

719
00:24:55,799 --> 00:24:58,440
some additional work on that uh taking

720
00:24:58,440 --> 00:25:00,480
from a network layer to the application

721
00:25:00,480 --> 00:25:03,299
side including that citing process and

722
00:25:03,299 --> 00:25:05,940
all this stuff so I'm saying uh work is

723
00:25:05,940 --> 00:25:08,940
in the public domain is starting to come

724
00:25:08,940 --> 00:25:11,039
of course more comments and inputs are

725
00:25:11,039 --> 00:25:12,900
required it from the audience and I

726
00:25:12,900 --> 00:25:14,820
think there's lack of that participation

727
00:25:14,820 --> 00:25:16,860
from the community of Interest yeah I

728
00:25:16,860 --> 00:25:18,480
wanted to share that no it sounds good

729
00:25:18,480 --> 00:25:20,580
and yeah probably join Michael and I a

730
00:25:20,580 --> 00:25:22,260
little later

731
00:25:22,260 --> 00:25:25,200
recommendation there so I'm out of time

732
00:25:25,200 --> 00:25:26,820
um very much appreciate you taking time

733
00:25:26,820 --> 00:25:29,039
to to let me talk to you about embedded

734
00:25:29,039 --> 00:25:30,710
security

735
00:25:30,710 --> 00:25:35,239
[Applause]

