1
00:00:00,360 --> 00:00:08,570
[Music]

2
00:00:08,570 --> 00:00:11,040
our next speaker is Eric Schweickart who

3
00:00:11,040 --> 00:00:12,420
leaves the Tofino engineering team

4
00:00:12,420 --> 00:00:14,370
within Belden's industrial cybersecurity

5
00:00:14,370 --> 00:00:15,240
platform

6
00:00:15,240 --> 00:00:17,100
he'll be presenting how deep is your

7
00:00:17,100 --> 00:00:19,529
deep packet inspection let's please

8
00:00:19,529 --> 00:00:27,570
welcome Eric thanks it's Eric where the

9
00:00:27,570 --> 00:00:29,820
Kay actually there's a little typo in

10
00:00:29,820 --> 00:00:36,180
there so so I've been with well Tofino

11
00:00:36,180 --> 00:00:38,309
actually we started as as buyer security

12
00:00:38,309 --> 00:00:42,270
at the time so that was back in 2007 so

13
00:00:42,270 --> 00:00:44,300
I got to learn a lot you know from Eric

14
00:00:44,300 --> 00:00:46,320
let me change her name obviously to

15
00:00:46,320 --> 00:00:50,670
tofino and we got bought by Belden in

16
00:00:50,670 --> 00:00:52,680
2011 so I managed the software

17
00:00:52,680 --> 00:00:54,930
engineering team for Tofino to move down

18
00:00:54,930 --> 00:00:57,329
to the u.s. from Canada so I'm actually

19
00:00:57,329 --> 00:01:00,690
the guy that I wrote the Modbus TCP UDP

20
00:01:00,690 --> 00:01:04,170
enforcer the OPC module Ethernet IP

21
00:01:04,170 --> 00:01:05,790
modules so those are the D packet

22
00:01:05,790 --> 00:01:08,130
inspection engines that are actually

23
00:01:08,130 --> 00:01:11,010
built into the Tofino itself so you know

24
00:01:11,010 --> 00:01:13,439
over the past 10 years we you know I've

25
00:01:13,439 --> 00:01:15,000
learned a lot about the industry and you

26
00:01:15,000 --> 00:01:17,220
know my my real interest is you know

27
00:01:17,220 --> 00:01:19,890
Deepak inspections so this is kind of a

28
00:01:19,890 --> 00:01:22,170
great talk stuff that I'm really

29
00:01:22,170 --> 00:01:26,520
interested about so the question is you

30
00:01:26,520 --> 00:01:28,409
know how do we kind of compare you know

31
00:01:28,409 --> 00:01:29,549
different products you know there's a

32
00:01:29,549 --> 00:01:31,770
lot of companies out there that produce

33
00:01:31,770 --> 00:01:33,720
you know deep packet inspection

34
00:01:33,720 --> 00:01:35,820
technology you know malware detection

35
00:01:35,820 --> 00:01:37,740
that kind of thing but how do you really

36
00:01:37,740 --> 00:01:40,020
compare them so it's kind of a tough

37
00:01:40,020 --> 00:01:42,119
question so we kind of came up with you

38
00:01:42,119 --> 00:01:44,159
know sort of the plan of like what I'd

39
00:01:44,159 --> 00:01:46,380
like to talk about today so we have to

40
00:01:46,380 --> 00:01:48,030
sort of define these terms you know the

41
00:01:48,030 --> 00:01:51,060
control plane data plane and then what I

42
00:01:51,060 --> 00:01:52,530
want to do is you know keep in the back

43
00:01:52,530 --> 00:01:54,119
of your mind you know what is the Modbus

44
00:01:54,119 --> 00:01:56,310
protocol look like like from a Wireshark

45
00:01:56,310 --> 00:01:57,780
perspective you know how what is the

46
00:01:57,780 --> 00:02:01,439
packet structure like dnp3 and Ethernet

47
00:02:01,439 --> 00:02:03,240
IP specifically you know Ethernet IP

48
00:02:03,240 --> 00:02:06,149
with sip sip on top of it and then how

49
00:02:06,149 --> 00:02:08,729
do we sort of take everything we know

50
00:02:08,729 --> 00:02:10,318
about these protocols and come to some

51
00:02:10,318 --> 00:02:12,750
method to compare against them and what

52
00:02:12,750 --> 00:02:13,740
do we really care about

53
00:02:13,740 --> 00:02:15,570
if you're trying to actually protect you

54
00:02:15,570 --> 00:02:18,990
know this industrial control system so

55
00:02:18,990 --> 00:02:20,640
you know I like math so I kind of came

56
00:02:20,640 --> 00:02:23,130
up with this like a grading scheme so

57
00:02:23,130 --> 00:02:24,750
going from sort of these qualitative

58
00:02:24,750 --> 00:02:28,380
mechanics to some quantitative ways it's

59
00:02:28,380 --> 00:02:30,480
kind of easy to compare things with some

60
00:02:30,480 --> 00:02:33,510
numbers and then I've kind of want to

61
00:02:33,510 --> 00:02:35,910
outline things that you know you can't

62
00:02:35,910 --> 00:02:37,470
really just consider right in the engine

63
00:02:37,470 --> 00:02:39,720
itself you know how usable is it you

64
00:02:39,720 --> 00:02:41,480
know that kind of that kind of stuff so

65
00:02:41,480 --> 00:02:44,340
first thing we need to kind of get some

66
00:02:44,340 --> 00:02:47,910
idea of terms so so there's the data

67
00:02:47,910 --> 00:02:50,760
plane the control plane so the data

68
00:02:50,760 --> 00:02:52,470
plane traffic is like your you know

69
00:02:52,470 --> 00:02:54,120
you're getting processed data it's stuff

70
00:02:54,120 --> 00:02:55,500
that you're you're monitoring you know

71
00:02:55,500 --> 00:02:57,150
it's usually controlled by the actual

72
00:02:57,150 --> 00:02:59,100
ladder logic you know someone's program

73
00:02:59,100 --> 00:03:01,140
this PLC it should function this way

74
00:03:01,140 --> 00:03:03,900
it's monitoring some specific valve some

75
00:03:03,900 --> 00:03:06,570
pressure gauge that kind of stuff you

76
00:03:06,570 --> 00:03:08,880
know typical protocols you know Modbus

77
00:03:08,880 --> 00:03:12,180
dnp3 Ethernet IP you think of goose I

78
00:03:12,180 --> 00:03:16,140
see 104 so then you have the the control

79
00:03:16,140 --> 00:03:18,510
plane so this is the stuff you can do

80
00:03:18,510 --> 00:03:20,880
sort of dangerous things with so you can

81
00:03:20,880 --> 00:03:22,830
think of you know this is the version of

82
00:03:22,830 --> 00:03:24,570
control logics running on your you know

83
00:03:24,570 --> 00:03:29,040
Alan Bradley Rockwell PLC so it's the

84
00:03:29,040 --> 00:03:30,510
ability where you can update firmware

85
00:03:30,510 --> 00:03:32,100
you know this is the stuff that we

86
00:03:32,100 --> 00:03:34,710
really care about so you know in Shriner

87
00:03:34,710 --> 00:03:36,570
they've got this vendor specific you

88
00:03:36,570 --> 00:03:38,760
know function code 9b this unity

89
00:03:38,760 --> 00:03:40,920
programming ofs software you know you

90
00:03:40,920 --> 00:03:42,240
can think of rockwell they've got this

91
00:03:42,240 --> 00:03:44,940
pc cubed embedded or CSP v4 for some

92
00:03:44,940 --> 00:03:48,660
legacy PLC 5s and in kind of the desktop

93
00:03:48,660 --> 00:03:50,430
terms it's like oh you're gonna do an

94
00:03:50,430 --> 00:03:52,650
update on your Linux kernel you know so

95
00:03:52,650 --> 00:03:53,970
it's gonna affect all the user space

96
00:03:53,970 --> 00:03:55,440
processes you know maybe they've changed

97
00:03:55,440 --> 00:03:57,870
some system calls you know windows you

98
00:03:57,870 --> 00:03:59,580
do these sort of Windows updates it's

99
00:03:59,580 --> 00:04:01,260
changed your system you know Service

100
00:04:01,260 --> 00:04:03,450
Pack 1 to service pack 2 that kind of

101
00:04:03,450 --> 00:04:06,000
stuff so this is the updating of the

102
00:04:06,000 --> 00:04:08,400
actual operating system sort of firmware

103
00:04:08,400 --> 00:04:11,459
that's running in it so unfortunately

104
00:04:11,459 --> 00:04:13,650
you know a lot of these protocols

105
00:04:13,650 --> 00:04:16,440
you know Modbus you know dnp3 well

106
00:04:16,440 --> 00:04:18,630
there's you know some authentication but

107
00:04:18,630 --> 00:04:19,470
I don't you know in brownfield

108
00:04:19,470 --> 00:04:20,970
installations it's probably hasn't been

109
00:04:20,970 --> 00:04:22,919
used so there's really no authentication

110
00:04:22,919 --> 00:04:25,890
so I could you know go to show Dan go

111
00:04:25,890 --> 00:04:27,570
find some PLC's on the web

112
00:04:27,570 --> 00:04:29,850
connect to them you know it's kind of

113
00:04:29,850 --> 00:04:32,010
crazy so we really need some Deepak

114
00:04:32,010 --> 00:04:33,900
inspection mechanism to be able to

115
00:04:33,900 --> 00:04:35,550
differentiate between these control

116
00:04:35,550 --> 00:04:40,380
plane and data plane communications so

117
00:04:40,380 --> 00:04:43,530
let's sort of think of some some common

118
00:04:43,530 --> 00:04:47,340
protocols so Modbus Ethernet IP dnp3 so

119
00:04:47,340 --> 00:04:49,140
they all have this you know in the

120
00:04:49,140 --> 00:04:51,210
Modbus case you have your MP op header

121
00:04:51,210 --> 00:04:52,590
you know there's this function codes

122
00:04:52,590 --> 00:04:55,230
specific address ranges and we Ethernet

123
00:04:55,230 --> 00:04:57,060
IP sip you've got your Ethernet IP layer

124
00:04:57,060 --> 00:04:59,310
there's the Ethernet IP commands you

125
00:04:59,310 --> 00:05:00,600
know it's this common packet format

126
00:05:00,600 --> 00:05:02,190
embedded in that you have all your

127
00:05:02,190 --> 00:05:04,050
actual sip messaging so you be the

128
00:05:04,050 --> 00:05:06,810
object services so there's these these

129
00:05:06,810 --> 00:05:08,370
fields that are predefined you know

130
00:05:08,370 --> 00:05:10,940
their specs for this you can get the RFC

131
00:05:10,940 --> 00:05:13,080
but what we're thinking about when we're

132
00:05:13,080 --> 00:05:15,800
trying to kind of compare these is well

133
00:05:15,800 --> 00:05:18,930
you know Modbus really simple it's like

134
00:05:18,930 --> 00:05:22,260
in lar f sees like hundred pages and you

135
00:05:22,260 --> 00:05:23,580
think of Ethernet IP you're looking at

136
00:05:23,580 --> 00:05:25,860
like a thousand you know dnp3 1200 so

137
00:05:25,860 --> 00:05:28,680
the complexity really varies depending

138
00:05:28,680 --> 00:05:30,390
on what protocol you're actually looking

139
00:05:30,390 --> 00:05:34,020
at so and you know speaking to that the

140
00:05:34,020 --> 00:05:35,400
actual complexity of the implementation

141
00:05:35,400 --> 00:05:38,040
of your Deepak inspection engine has to

142
00:05:38,040 --> 00:05:39,510
be more complex to support the

143
00:05:39,510 --> 00:05:42,510
complexity of the protocol itself so you

144
00:05:42,510 --> 00:05:43,710
know you think of sip you have these

145
00:05:43,710 --> 00:05:45,960
multiple service packets so even

146
00:05:45,960 --> 00:05:47,700
portions with say in the protocol itself

147
00:05:47,700 --> 00:05:49,800
become more complex so in a multiple

148
00:05:49,800 --> 00:05:51,390
service packet you actually have these

149
00:05:51,390 --> 00:05:53,100
embedded sip messages so you could have

150
00:05:53,100 --> 00:05:55,470
you know 30 sip messages within a single

151
00:05:55,470 --> 00:05:58,290
TCP frame you know how does the PLC deal

152
00:05:58,290 --> 00:05:59,970
with this if it doesn't expect this you

153
00:05:59,970 --> 00:06:01,050
know does it support it

154
00:06:01,050 --> 00:06:04,860
you know dnp3 has segmentations so you

155
00:06:04,860 --> 00:06:06,060
know these are all things to keep in

156
00:06:06,060 --> 00:06:07,560
mind when you're thinking about you know

157
00:06:07,560 --> 00:06:09,900
this product supports it but what does

158
00:06:09,900 --> 00:06:11,460
that really mean how can you really

159
00:06:11,460 --> 00:06:16,200
grade these against each other so how do

160
00:06:16,200 --> 00:06:18,810
we compare so I've sort of talked you

161
00:06:18,810 --> 00:06:20,960
know probably you know in a quick manner

162
00:06:20,960 --> 00:06:24,570
of all the different protocols so you

163
00:06:24,570 --> 00:06:26,730
know if you think of one packet format

164
00:06:26,730 --> 00:06:28,650
what does this actually mean so you have

165
00:06:28,650 --> 00:06:30,540
some Modbus frame it's got you know some

166
00:06:30,540 --> 00:06:33,900
length field you know how do we compare

167
00:06:33,900 --> 00:06:35,790
how do we kind of you know take all

168
00:06:35,790 --> 00:06:37,919
these disjoint protocols put them

169
00:06:37,919 --> 00:06:39,210
together and think you know what do I

170
00:06:39,210 --> 00:06:40,190
need

171
00:06:40,190 --> 00:06:42,050
to actually protect my PLC so if you

172
00:06:42,050 --> 00:06:43,460
think about you know a lot of the

173
00:06:43,460 --> 00:06:45,350
vulnerabilities the kind of stem from

174
00:06:45,350 --> 00:06:46,970
the same kind of things right you're

175
00:06:46,970 --> 00:06:48,740
looking at you know malware packet

176
00:06:48,740 --> 00:06:50,510
fuzzing type things you know you're

177
00:06:50,510 --> 00:06:52,850
adding two F's to the end of some packet

178
00:06:52,850 --> 00:06:54,530
you know what does the PLC really do

179
00:06:54,530 --> 00:06:56,780
with this or the HMI you know if you're

180
00:06:56,780 --> 00:07:00,170
sending response frames so if we can you

181
00:07:00,170 --> 00:07:02,030
know cover to the that 80 to 90 percent

182
00:07:02,030 --> 00:07:04,760
of vulnerabilities out there you know

183
00:07:04,760 --> 00:07:05,990
we're looking a lot better than just the

184
00:07:05,990 --> 00:07:08,950
plc with no protection in front of it so

185
00:07:08,950 --> 00:07:12,940
what do we what do we really need to do

186
00:07:12,940 --> 00:07:16,640
so this is my this is my rant slide or

187
00:07:16,640 --> 00:07:18,140
actually have two slides about sort of

188
00:07:18,140 --> 00:07:21,530
the signature based approach so you know

189
00:07:21,530 --> 00:07:24,050
signatures that's really you know in my

190
00:07:24,050 --> 00:07:26,650
opinion kind of the way it works is that

191
00:07:26,650 --> 00:07:29,510
you know you to build a signature this

192
00:07:29,510 --> 00:07:31,250
there has to be this vulnerability I

193
00:07:31,250 --> 00:07:32,900
already published so you can go back and

194
00:07:32,900 --> 00:07:34,580
actually build a signature against it so

195
00:07:34,580 --> 00:07:36,590
you can mitigate that attack so it's

196
00:07:36,590 --> 00:07:38,600
really this reactive mech mechanism

197
00:07:38,600 --> 00:07:41,180
rather than some proactive mechanism and

198
00:07:41,180 --> 00:07:43,190
you know with signatures you can build

199
00:07:43,190 --> 00:07:44,870
one that says you know I'm gonna look at

200
00:07:44,870 --> 00:07:47,360
one specific byte you know what if what

201
00:07:47,360 --> 00:07:49,280
if the malware has a malware mutation

202
00:07:49,280 --> 00:07:50,900
right so you're adding extra fields to

203
00:07:50,900 --> 00:07:54,230
it you know changing offset values so

204
00:07:54,230 --> 00:07:56,150
not signatures you know no longer good

205
00:07:56,150 --> 00:07:57,770
you have to go you'll get a database

206
00:07:57,770 --> 00:08:00,890
update so I think you know a lot of

207
00:08:00,890 --> 00:08:02,600
cases the signatures are only as good as

208
00:08:02,600 --> 00:08:04,190
what your signature database contains

209
00:08:04,190 --> 00:08:07,790
within it in addition you're essentially

210
00:08:07,790 --> 00:08:10,130
building a black list rather than white

211
00:08:10,130 --> 00:08:12,380
list so you know you get the signature

212
00:08:12,380 --> 00:08:13,940
database Oh someone's gonna change

213
00:08:13,940 --> 00:08:15,919
we know one byte value or maybe one

214
00:08:15,919 --> 00:08:17,720
offset oh we need to get a new signature

215
00:08:17,720 --> 00:08:20,330
so it's this sort of constant iterative

216
00:08:20,330 --> 00:08:22,100
process we're just trying to build up

217
00:08:22,100 --> 00:08:25,130
this this big black list so it's not

218
00:08:25,130 --> 00:08:26,840
it's not really practical you know in

219
00:08:26,840 --> 00:08:28,640
the in the ICS world you know maybe in

220
00:08:28,640 --> 00:08:31,940
the IT IT world it's kind of makes more

221
00:08:31,940 --> 00:08:33,500
sense and obviously you don't want to

222
00:08:33,500 --> 00:08:34,700
have an internet connection from your

223
00:08:34,700 --> 00:08:36,409
your plant out to the world to be

224
00:08:36,409 --> 00:08:38,630
getting these these signatures back to

225
00:08:38,630 --> 00:08:41,270
your device so the only place that I

226
00:08:41,270 --> 00:08:43,490
really see this may be being useful is

227
00:08:43,490 --> 00:08:46,160
proprietary protocols where you can't

228
00:08:46,160 --> 00:08:48,980
get the RFC you know hopefully we can do

229
00:08:48,980 --> 00:08:50,510
something maybe you can reverse-engineer

230
00:08:50,510 --> 00:08:52,520
the protocol a little bit you know build

231
00:08:52,520 --> 00:08:53,900
up some signature tack

232
00:08:53,900 --> 00:08:56,390
we mitigate these attacks but you know

233
00:08:56,390 --> 00:08:57,530
if you're gonna do something you're

234
00:08:57,530 --> 00:08:58,790
gonna write your own deep packet

235
00:08:58,790 --> 00:09:01,430
inspection module you might as well make

236
00:09:01,430 --> 00:09:03,320
it the best it can be so there's there's

237
00:09:03,320 --> 00:09:05,300
obviously better ways to go about doing

238
00:09:05,300 --> 00:09:09,380
this so just in general you know depth

239
00:09:09,380 --> 00:09:12,230
is more important than prep because you

240
00:09:12,230 --> 00:09:13,610
know if you're looking at one packet or

241
00:09:13,610 --> 00:09:16,910
one byte in a specific packet well you

242
00:09:16,910 --> 00:09:18,080
know are you really supporting that

243
00:09:18,080 --> 00:09:20,660
protocol it just doesn't really make

244
00:09:20,660 --> 00:09:22,880
sense so we really need to sort of get

245
00:09:22,880 --> 00:09:25,100
the fluff or the marketing flood out of

246
00:09:25,100 --> 00:09:27,320
there you know we support 500 protocols

247
00:09:27,320 --> 00:09:28,880
well well you know what does that really

248
00:09:28,880 --> 00:09:30,320
mean how deep is it

249
00:09:30,320 --> 00:09:32,330
you know how secure is your network by

250
00:09:32,330 --> 00:09:34,850
using these you know signature based

251
00:09:34,850 --> 00:09:38,420
systems ok so moving on to sanity

252
00:09:38,420 --> 00:09:40,400
checking so what I've done is kind of

253
00:09:40,400 --> 00:09:43,220
come up with specific things to look at

254
00:09:43,220 --> 00:09:45,320
you know in each in each product so

255
00:09:45,320 --> 00:09:48,260
sanity checking for me is like it's kind

256
00:09:48,260 --> 00:09:50,360
of the gold standard this is this is the

257
00:09:50,360 --> 00:09:51,830
most important thing you know it can

258
00:09:51,830 --> 00:09:53,780
help you mitigate you know 80 to 90% of

259
00:09:53,780 --> 00:09:55,520
those vulnerabilities out there so to

260
00:09:55,520 --> 00:09:57,260
build this what do you need to know well

261
00:09:57,260 --> 00:09:59,000
you need to really know the protocol

262
00:09:59,000 --> 00:10:01,670
inside note you need to get the RFC you

263
00:10:01,670 --> 00:10:03,620
know you need to understand you know if

264
00:10:03,620 --> 00:10:05,240
I have some length field and some

265
00:10:05,240 --> 00:10:07,730
Ethernet IP frame you know what does

266
00:10:07,730 --> 00:10:10,370
that mean on a specific sip service or

267
00:10:10,370 --> 00:10:12,800
sip object or you know for a Modbus

268
00:10:12,800 --> 00:10:15,950
frame what does this really mean so you

269
00:10:15,950 --> 00:10:17,450
know you're speaking about you know

270
00:10:17,450 --> 00:10:19,700
Goose you know there's type length value

271
00:10:19,700 --> 00:10:22,070
field so you need to be able to actually

272
00:10:22,070 --> 00:10:23,540
iterate through these frames and

273
00:10:23,540 --> 00:10:25,490
actually look at you know what it means

274
00:10:25,490 --> 00:10:28,490
what's this action so unlike some

275
00:10:28,490 --> 00:10:31,400
signature based approach you really need

276
00:10:31,400 --> 00:10:34,280
sort of this this all-knowing you know

277
00:10:34,280 --> 00:10:37,070
full protocol implementation and that's

278
00:10:37,070 --> 00:10:38,690
what the whole point of sanity checking

279
00:10:38,690 --> 00:10:41,480
is so this is kind of my comparison item

280
00:10:41,480 --> 00:10:45,110
number one so so if a product is gonna

281
00:10:45,110 --> 00:10:47,180
claim that it can do sanity checking

282
00:10:47,180 --> 00:10:49,280
that means it has to actually understand

283
00:10:49,280 --> 00:10:51,050
the whole protocol so it's looking at

284
00:10:51,050 --> 00:10:52,640
every single frame it's looking at all

285
00:10:52,640 --> 00:10:54,410
the bytes you know obviously there's

286
00:10:54,410 --> 00:10:56,270
some trade-offs you don't want to incur

287
00:10:56,270 --> 00:10:57,860
too much latency for things like you

288
00:10:57,860 --> 00:11:01,280
know goofs you know so when you're

289
00:11:01,280 --> 00:11:03,080
developing these things and hopefully

290
00:11:03,080 --> 00:11:04,220
you know companies that are building

291
00:11:04,220 --> 00:11:05,780
these things are getting the RFC's

292
00:11:05,780 --> 00:11:07,450
they're really understanding what

293
00:11:07,450 --> 00:11:09,940
the protocol means so I think so for me

294
00:11:09,940 --> 00:11:12,100
as far as a grading scheme is concerned

295
00:11:12,100 --> 00:11:13,990
this is like your your number one

296
00:11:13,990 --> 00:11:18,250
comparison item so then I went to the

297
00:11:18,250 --> 00:11:20,350
next thing okay so we talked about this

298
00:11:20,350 --> 00:11:22,690
control plane data plane how do how do

299
00:11:22,690 --> 00:11:24,310
we actually go about differentiating

300
00:11:24,310 --> 00:11:27,070
these so we need to have the way to say

301
00:11:27,070 --> 00:11:29,410
okay you know for Modbus I'm only going

302
00:11:29,410 --> 00:11:31,540
to allow all the reed coils you know I'm

303
00:11:31,540 --> 00:11:33,340
gonna block read/write registers because

304
00:11:33,340 --> 00:11:35,890
it has right capabilities you know with

305
00:11:35,890 --> 00:11:37,210
sip maybe because there's

306
00:11:37,210 --> 00:11:39,730
vulnerabilities in the tcp/ip object so

307
00:11:39,730 --> 00:11:43,330
that's like hex f4 f5 you'd want to just

308
00:11:43,330 --> 00:11:45,070
block those you know once the system set

309
00:11:45,070 --> 00:11:47,020
up you and put your deep packet

310
00:11:47,020 --> 00:11:48,940
inspection engine in there and you're

311
00:11:48,940 --> 00:11:50,650
gonna block any actions to that because

312
00:11:50,650 --> 00:11:52,150
well it's setup you don't want to allow

313
00:11:52,150 --> 00:11:53,860
someone to have the ability to change it

314
00:11:53,860 --> 00:11:56,380
so I kind of call this the action filter

315
00:11:56,380 --> 00:11:59,410
so if you have the ability to also you

316
00:11:59,410 --> 00:12:02,440
know block specific register ranges well

317
00:12:02,440 --> 00:12:04,540
that's kind of bonus points so as we're

318
00:12:04,540 --> 00:12:06,040
kind of thinking of these qualitative

319
00:12:06,040 --> 00:12:09,280
mechanisms we can put numbers to it as I

320
00:12:09,280 --> 00:12:11,530
get further on here so the next thing is

321
00:12:11,530 --> 00:12:13,810
is about state checking of the protocol

322
00:12:13,810 --> 00:12:17,320
so did a response have an initial

323
00:12:17,320 --> 00:12:19,660
request you know did a request have the

324
00:12:19,660 --> 00:12:21,640
specific response and depending on the

325
00:12:21,640 --> 00:12:23,470
protocol you know maybe there's like in

326
00:12:23,470 --> 00:12:24,850
DMV threes case you might have these

327
00:12:24,850 --> 00:12:28,150
asynchronous events coming back so if

328
00:12:28,150 --> 00:12:30,130
you have some engine in there it needs

329
00:12:30,130 --> 00:12:31,270
to understand this you know if you're

330
00:12:31,270 --> 00:12:33,790
thinking about like dce/rpc stuff like

331
00:12:33,790 --> 00:12:36,460
OPC you know on 135 it has these color

332
00:12:36,460 --> 00:12:39,520
IDs so a request has a call idea of one

333
00:12:39,520 --> 00:12:41,770
the response has one so you need to

334
00:12:41,770 --> 00:12:42,970
actually be matching you know the

335
00:12:42,970 --> 00:12:45,280
request response so that someone can't

336
00:12:45,280 --> 00:12:47,410
just be sending a whole slew of these of

337
00:12:47,410 --> 00:12:51,250
these frames and maybe extra training

338
00:12:51,250 --> 00:12:53,410
data as an example so I turned this

339
00:12:53,410 --> 00:12:55,120
state checking so you're checking the

340
00:12:55,120 --> 00:12:59,500
state of the protocol itself so the next

341
00:12:59,500 --> 00:13:01,060
thing is about response packet

342
00:13:01,060 --> 00:13:03,460
validation so to what extent are you

343
00:13:03,460 --> 00:13:05,260
actually looking at these response

344
00:13:05,260 --> 00:13:08,140
messages coming back so this is

345
00:13:08,140 --> 00:13:10,180
important because you know ad mccrane

346
00:13:10,180 --> 00:13:12,940
Kristin Strunk published some dnp3

347
00:13:12,940 --> 00:13:15,190
vulnerabilities probably a few years ago

348
00:13:15,190 --> 00:13:17,830
and a lot of them are actually attacks

349
00:13:17,830 --> 00:13:19,900
in the response direction against the

350
00:13:19,900 --> 00:13:21,430
HMI so you

351
00:13:21,430 --> 00:13:23,140
p3 is widely used in the power

352
00:13:23,140 --> 00:13:25,360
transmission distribution so they have

353
00:13:25,360 --> 00:13:27,550
you know these substations or

354
00:13:27,550 --> 00:13:29,530
outstations sitting miles away from the

355
00:13:29,530 --> 00:13:32,290
actual you know plant the plant

356
00:13:32,290 --> 00:13:34,090
operators so if someone were to actually

357
00:13:34,090 --> 00:13:36,040
gain physical access to these out

358
00:13:36,040 --> 00:13:38,290
stations they could you know modify the

359
00:13:38,290 --> 00:13:41,200
plc send back invalid data to the plant

360
00:13:41,200 --> 00:13:43,330
and you know corrupt HMI or feet at

361
00:13:43,330 --> 00:13:44,920
false data and actually the plants you

362
00:13:44,920 --> 00:13:47,470
know now down no one has any idea so

363
00:13:47,470 --> 00:13:52,420
this is I call response validation and

364
00:13:52,420 --> 00:13:54,130
then there's the vendor specific stuff

365
00:13:54,130 --> 00:13:55,720
so this I'd kind of mentioned this

366
00:13:55,720 --> 00:13:57,520
earlier so you have these you know

367
00:13:57,520 --> 00:14:00,160
vendor specific functions like this

368
00:14:00,160 --> 00:14:02,440
function code 90 from Schneider you know

369
00:14:02,440 --> 00:14:04,600
this far as Ethernet IP they also have

370
00:14:04,600 --> 00:14:06,160
their own sip specific codes you know

371
00:14:06,160 --> 00:14:10,120
bender you know hex 300 no rock walls PC

372
00:14:10,120 --> 00:14:12,760
cube CSP v4 so it's all these kind of

373
00:14:12,760 --> 00:14:16,030
you know unpublished well published

374
00:14:16,030 --> 00:14:17,830
internally but not published out to the

375
00:14:17,830 --> 00:14:21,310
world but you know for for a dpi engine

376
00:14:21,310 --> 00:14:22,870
to really support these things I think

377
00:14:22,870 --> 00:14:24,550
it's important and you know if you use

378
00:14:24,550 --> 00:14:26,560
these protocols and your network you're

379
00:14:26,560 --> 00:14:28,450
probably gonna want your dpi engine to

380
00:14:28,450 --> 00:14:30,190
actually be able to interpret these

381
00:14:30,190 --> 00:14:35,010
these frame types so then I have this

382
00:14:35,010 --> 00:14:37,480
kind of a cool and Eric Eric Byers and I

383
00:14:37,480 --> 00:14:40,120
kind of turn this pipeline messages so

384
00:14:40,120 --> 00:14:42,160
we first looked at this in Modbus so

385
00:14:42,160 --> 00:14:44,620
what you could have is you know if you

386
00:14:44,620 --> 00:14:46,240
think of like CPUs give it your whole

387
00:14:46,240 --> 00:14:50,470
you know up cope the pipeline so this is

388
00:14:50,470 --> 00:14:51,700
the same way so you have you you know a

389
00:14:51,700 --> 00:14:53,890
Modbus function code read you pad it

390
00:14:53,890 --> 00:14:56,080
with a Modbus function code right you

391
00:14:56,080 --> 00:14:57,940
can put this in a whole sequence or in

392
00:14:57,940 --> 00:15:00,940
the case of like Ethernet IP with you

393
00:15:00,940 --> 00:15:03,040
know these multiple service packets well

394
00:15:03,040 --> 00:15:04,510
you have this lookup table within the

395
00:15:04,510 --> 00:15:06,280
frame itself and then you could just pad

396
00:15:06,280 --> 00:15:08,470
you know all these frames in it you know

397
00:15:08,470 --> 00:15:11,140
just hi to read and write and then maybe

398
00:15:11,140 --> 00:15:13,510
another read and so on and you know with

399
00:15:13,510 --> 00:15:16,780
dnp3 it'll pad all these d3 objects in

400
00:15:16,780 --> 00:15:18,790
there so if your actual engine doesn't

401
00:15:18,790 --> 00:15:21,280
iterate through every single object how

402
00:15:21,280 --> 00:15:22,630
can you guarantee that someone has an

403
00:15:22,630 --> 00:15:24,520
embed it's something you know within the

404
00:15:24,520 --> 00:15:27,160
frames along the way so that's my

405
00:15:27,160 --> 00:15:32,230
comparison item number six so you know

406
00:15:32,230 --> 00:15:34,750
there's six items obviously you know

407
00:15:34,750 --> 00:15:35,440
this is just

408
00:15:35,440 --> 00:15:38,440
sort of a template you could expand it

409
00:15:38,440 --> 00:15:40,960
as much as you want you know it's it's

410
00:15:40,960 --> 00:15:42,700
really up to you so we have these

411
00:15:42,700 --> 00:15:44,080
qualitative things that I've kind of

412
00:15:44,080 --> 00:15:46,990
described and then I've you know this is

413
00:15:46,990 --> 00:15:48,910
kind of some fake product just come up

414
00:15:48,910 --> 00:15:51,400
with some specific values so then you

415
00:15:51,400 --> 00:15:53,770
have some some numbers here so on its

416
00:15:53,770 --> 00:15:55,270
own maybe it doesn't make sense but say

417
00:15:55,270 --> 00:15:56,620
you have two products you kind of go

418
00:15:56,620 --> 00:15:58,510
through this the same scheme you can

419
00:15:58,510 --> 00:16:00,700
actually compare against the two of them

420
00:16:00,700 --> 00:16:03,790
you know maybe 66% it's not great but

421
00:16:03,790 --> 00:16:05,440
maybe it's better than the 40% of the

422
00:16:05,440 --> 00:16:07,180
other product does you know based on how

423
00:16:07,180 --> 00:16:10,930
you want to value the product itself so

424
00:16:10,930 --> 00:16:13,000
how do I actually come about these or

425
00:16:13,000 --> 00:16:14,230
how did I come to these values you know

426
00:16:14,230 --> 00:16:16,030
what really constitutes you know a four

427
00:16:16,030 --> 00:16:18,310
for sanity checking or really any any

428
00:16:18,310 --> 00:16:20,500
value for that matter so this this is

429
00:16:20,500 --> 00:16:22,570
kind of the harder the harder part

430
00:16:22,570 --> 00:16:25,510
because it's a bit subjective you know

431
00:16:25,510 --> 00:16:27,880
so for me and like how we've kind of

432
00:16:27,880 --> 00:16:30,520
implemented things or how I'd gone about

433
00:16:30,520 --> 00:16:32,980
doing this is well heck I'm gonna do

434
00:16:32,980 --> 00:16:34,270
everything right you know it's a

435
00:16:34,270 --> 00:16:36,880
thousand pages of a spec well I have to

436
00:16:36,880 --> 00:16:38,530
cover it otherwise how do I claim that I

437
00:16:38,530 --> 00:16:40,420
actually cover the protocol you can't

438
00:16:40,420 --> 00:16:43,000
write so you know in this case for

439
00:16:43,000 --> 00:16:45,580
sanity checking you know if six would be

440
00:16:45,580 --> 00:16:47,920
you cover everything completely but a

441
00:16:47,920 --> 00:16:50,230
four as you know for this Modbus

442
00:16:50,230 --> 00:16:52,210
function code 15 you know maybe you're

443
00:16:52,210 --> 00:16:54,340
only looking at you know two bytes worth

444
00:16:54,340 --> 00:16:56,770
or maybe three bytes and you say well it

445
00:16:56,770 --> 00:16:58,150
doesn't really matter you know what

446
00:16:58,150 --> 00:16:59,980
could someone to do with this although I

447
00:16:59,980 --> 00:17:01,140
don't think that's the greatest approach

448
00:17:01,140 --> 00:17:03,640
but the reality is you know when you're

449
00:17:03,640 --> 00:17:05,619
developing these things you know there's

450
00:17:05,619 --> 00:17:07,540
obviously time involved resources all

451
00:17:07,540 --> 00:17:10,449
that stuff so so when you're looking at

452
00:17:10,449 --> 00:17:11,740
products you know you could come up with

453
00:17:11,740 --> 00:17:13,990
specific values for this and then for

454
00:17:13,990 --> 00:17:16,660
the action filter so this is the same

455
00:17:16,660 --> 00:17:18,520
kind of idea so I went through the

456
00:17:18,520 --> 00:17:19,480
things that I thought were the most

457
00:17:19,480 --> 00:17:21,959
important of what a dpi engine should do

458
00:17:21,959 --> 00:17:24,400
and I kind of came up with these with

459
00:17:24,400 --> 00:17:26,380
these values so in the case of this

460
00:17:26,380 --> 00:17:29,050
action filter so this is like you know

461
00:17:29,050 --> 00:17:30,880
I'm gonna differentiate between control

462
00:17:30,880 --> 00:17:32,620
plane and data plane actions I'm gonna

463
00:17:32,620 --> 00:17:34,690
drop these specific function codes type

464
00:17:34,690 --> 00:17:36,640
codes depending on the term is for the

465
00:17:36,640 --> 00:17:40,030
protocol um so I think dnp3 is a great

466
00:17:40,030 --> 00:17:41,530
example for this because there's so many

467
00:17:41,530 --> 00:17:43,929
different things you can filter on so it

468
00:17:43,929 --> 00:17:44,920
has you know the data link layer

469
00:17:44,920 --> 00:17:48,010
transport layer application layer so the

470
00:17:48,010 --> 00:17:49,210
application layer has these

471
00:17:49,210 --> 00:17:50,890
function function codes so like your

472
00:17:50,890 --> 00:17:52,659
select direct operate that kind of stuff

473
00:17:52,659 --> 00:17:55,029
and then embedded in the actual the

474
00:17:55,029 --> 00:17:57,429
object level or the dnp3 objects now you

475
00:17:57,429 --> 00:17:59,559
have group number variation function

476
00:17:59,559 --> 00:18:02,049
code qualifier code so if your product

477
00:18:02,049 --> 00:18:03,880
can actually allow you to granulator

478
00:18:03,880 --> 00:18:06,100
granularly filter on all these things

479
00:18:06,100 --> 00:18:08,440
well then you know to me that's that's a

480
00:18:08,440 --> 00:18:11,110
four and you know you could expand this

481
00:18:11,110 --> 00:18:13,059
sort of grading scheme how you want you

482
00:18:13,059 --> 00:18:15,010
could go to decimals if you want you

483
00:18:15,010 --> 00:18:16,779
know I just chose sort of whole numbers

484
00:18:16,779 --> 00:18:18,610
but you know if it can do pretty much

485
00:18:18,610 --> 00:18:20,740
everything then maybe give it a 3.5 I

486
00:18:20,740 --> 00:18:22,690
mean in the end it's really you know the

487
00:18:22,690 --> 00:18:24,370
customer that you're trying to figure

488
00:18:24,370 --> 00:18:27,510
out you know what do I really need here

489
00:18:27,510 --> 00:18:29,799
so then as I was sort of going through

490
00:18:29,799 --> 00:18:31,600
this there's a lot of things that

491
00:18:31,600 --> 00:18:33,940
started popping into my mind about doing

492
00:18:33,940 --> 00:18:37,059
this so how do you really gauge depth

493
00:18:37,059 --> 00:18:39,909
it's if you know like I know the taffy

494
00:18:39,909 --> 00:18:42,220
nose case I've written the code so I

495
00:18:42,220 --> 00:18:44,169
kind of know you know how everything is

496
00:18:44,169 --> 00:18:46,120
built but I have no idea how the next

497
00:18:46,120 --> 00:18:48,490
vendor has done it so it's really hard

498
00:18:48,490 --> 00:18:50,980
to be getting this information you know

499
00:18:50,980 --> 00:18:53,320
other than you know making your own sort

500
00:18:53,320 --> 00:18:54,820
of pen testing tool you know these are

501
00:18:54,820 --> 00:18:56,620
the things I care about put this device

502
00:18:56,620 --> 00:18:58,630
in there as a black box and send these

503
00:18:58,630 --> 00:19:02,260
packets and try to detect this obviously

504
00:19:02,260 --> 00:19:04,029
the numbers are a bit subjective it's

505
00:19:04,029 --> 00:19:05,470
really up to you how you would go about

506
00:19:05,470 --> 00:19:09,250
sort of building this and then also how

507
00:19:09,250 --> 00:19:11,350
it's actually been built so you know

508
00:19:11,350 --> 00:19:13,299
maybe it's a signature based system you

509
00:19:13,299 --> 00:19:14,649
know maybe it's a full protocol

510
00:19:14,649 --> 00:19:17,470
implementation you know maybe there's a

511
00:19:17,470 --> 00:19:19,899
proxy involved or maybe you're feeding

512
00:19:19,899 --> 00:19:22,809
data to some other system so you have to

513
00:19:22,809 --> 00:19:25,240
kind of take these things into account

514
00:19:25,240 --> 00:19:28,630
when you're doing this and then thinking

515
00:19:28,630 --> 00:19:30,940
about protocols well maybe some company

516
00:19:30,940 --> 00:19:32,919
did a really great job developing some

517
00:19:32,919 --> 00:19:35,799
DPI engine for Modbus but their dpi

518
00:19:35,799 --> 00:19:38,950
engine for dnp3 is awful you know so you

519
00:19:38,950 --> 00:19:40,600
can't just say well this products great

520
00:19:40,600 --> 00:19:42,340
I've looked at one protocol I'm gonna

521
00:19:42,340 --> 00:19:44,020
use three of them you know so you have

522
00:19:44,020 --> 00:19:46,179
to really you know take all these these

523
00:19:46,179 --> 00:19:48,880
factors into account so and as I

524
00:19:48,880 --> 00:19:50,500
mentioned earlier you know when I built

525
00:19:50,500 --> 00:19:52,720
this this scheme it's like okay well

526
00:19:52,720 --> 00:19:55,059
what is 14 of 21 mean is that really

527
00:19:55,059 --> 00:19:56,559
good so you have to kind of compare

528
00:19:56,559 --> 00:19:59,200
multiple products so I think it would

529
00:19:59,200 --> 00:20:01,210
make more sense from a customer's

530
00:20:01,210 --> 00:20:02,730
perspective they would kind of go

531
00:20:02,730 --> 00:20:04,950
through these things so some of the

532
00:20:04,950 --> 00:20:06,630
other things that I was kind of thinking

533
00:20:06,630 --> 00:20:09,540
about is you know we have this dpi

534
00:20:09,540 --> 00:20:11,580
engine built somebody has to actually

535
00:20:11,580 --> 00:20:14,429
use it so if it's not usable to a

536
00:20:14,429 --> 00:20:15,390
customer you know they're not gonna

537
00:20:15,390 --> 00:20:16,770
understand well this is a Modbus

538
00:20:16,770 --> 00:20:18,840
function code six it does these specific

539
00:20:18,840 --> 00:20:20,160
things or you know this is an Ethernet

540
00:20:20,160 --> 00:20:21,059
command

541
00:20:21,059 --> 00:20:23,190
it's send our data what does it mean you

542
00:20:23,190 --> 00:20:24,840
know these are things that you know

543
00:20:24,840 --> 00:20:26,010
probably we take for granted because

544
00:20:26,010 --> 00:20:27,630
we're gonna spend the time and look at

545
00:20:27,630 --> 00:20:29,700
this stuff but the reality is if it's

546
00:20:29,700 --> 00:20:31,049
not usable for a customer it's not

547
00:20:31,049 --> 00:20:34,320
usable and then there's things like so

548
00:20:34,320 --> 00:20:36,080
in the case of you know Tofino where

549
00:20:36,080 --> 00:20:38,100
intrusion prevention so we're gonna drop

550
00:20:38,100 --> 00:20:40,380
these frames we're not gonna you know

551
00:20:40,380 --> 00:20:42,150
we'll alert that kind of stuff so you

552
00:20:42,150 --> 00:20:44,520
know is it useful to send these TCP

553
00:20:44,520 --> 00:20:46,320
resets to either side you know restart

554
00:20:46,320 --> 00:20:47,700
the session you know generate messages

555
00:20:47,700 --> 00:20:50,100
does this product do this does you know

556
00:20:50,100 --> 00:20:51,660
this product do this so these are some

557
00:20:51,660 --> 00:20:54,200
things to kind of keep in mind and then

558
00:20:54,200 --> 00:20:56,520
you know throughput and latency I didn't

559
00:20:56,520 --> 00:20:58,710
even mention this in here depending on

560
00:20:58,710 --> 00:20:59,880
what protocol you're gonna try to

561
00:20:59,880 --> 00:21:03,059
actually protect you know maybe it you

562
00:21:03,059 --> 00:21:04,530
have these high latency requirements

563
00:21:04,530 --> 00:21:06,870
maybe it's some proprietary protocol

564
00:21:06,870 --> 00:21:08,820
that it really matters you know how fast

565
00:21:08,820 --> 00:21:10,799
you can be interpreting this data you

566
00:21:10,799 --> 00:21:11,760
know you also should think about how

567
00:21:11,760 --> 00:21:13,080
many network streams are going through

568
00:21:13,080 --> 00:21:13,740
the device

569
00:21:13,740 --> 00:21:15,540
you know how fast can we do these things

570
00:21:15,540 --> 00:21:18,179
and then yeah not all dpi

571
00:21:18,179 --> 00:21:21,360
implementations are created equal so you

572
00:21:21,360 --> 00:21:23,610
know for one protocol it might be great

573
00:21:23,610 --> 00:21:25,679
the next protocol it might not be so

574
00:21:25,679 --> 00:21:29,460
great so this is my plug so obviously

575
00:21:29,460 --> 00:21:33,660
Tofino was kind of my baby so so

576
00:21:33,660 --> 00:21:35,809
essentially this is you know Industrial

577
00:21:35,809 --> 00:21:39,210
Security appliance it was built always

578
00:21:39,210 --> 00:21:40,740
for the ICS world we didn't come from

579
00:21:40,740 --> 00:21:43,140
the IT world and move into ICS you know

580
00:21:43,140 --> 00:21:45,330
security was always something that has

581
00:21:45,330 --> 00:21:48,750
always been you know on the forefront so

582
00:21:48,750 --> 00:21:49,710
we have this idea of these little

583
00:21:49,710 --> 00:21:51,059
security modules so if you bought the

584
00:21:51,059 --> 00:21:52,650
product you're only gonna you know use

585
00:21:52,650 --> 00:21:55,669
specific protocols that you care about

586
00:21:55,669 --> 00:21:58,710
so just as an aside so for this dnp3

587
00:21:58,710 --> 00:22:01,590
implementation so when we develop this

588
00:22:01,590 --> 00:22:03,540
you know we have the ability that we can

589
00:22:03,540 --> 00:22:04,799
actually filter on all those things that

590
00:22:04,799 --> 00:22:06,900
I was talking about earlier so you can

591
00:22:06,900 --> 00:22:08,520
do the application layer function code

592
00:22:08,520 --> 00:22:10,110
filtering you can look at all your group

593
00:22:10,110 --> 00:22:12,150
number variation function code qualifier

594
00:22:12,150 --> 00:22:15,270
code all that fun stuff so it's as I'd

595
00:22:15,270 --> 00:22:16,720
call it like a full protocol and

596
00:22:16,720 --> 00:22:22,600
tation and this is some buildin slide so

597
00:22:22,600 --> 00:22:24,429
this is about bringing together the OT

598
00:22:24,429 --> 00:22:27,549
and IT so I guess 2015 Belden bought

599
00:22:27,549 --> 00:22:29,919
tripwire so for the OT side where you

600
00:22:29,919 --> 00:22:32,559
know Tofino Hirshman Garrett calm

601
00:22:32,559 --> 00:22:34,960
it was pro soft and then tripwire on the

602
00:22:34,960 --> 00:22:37,240
trip wire side we're kind of IT so we're

603
00:22:37,240 --> 00:22:39,850
trying to bring together these these

604
00:22:39,850 --> 00:22:41,770
companies so we can you know come

605
00:22:41,770 --> 00:22:43,840
together which is what Dale's sort of

606
00:22:43,840 --> 00:22:48,490
mantra was for this cool so any

607
00:22:48,490 --> 00:23:11,770
questions so first a comment and then a

608
00:23:11,770 --> 00:23:18,669
question the comment is woe to him I see

609
00:23:18,669 --> 00:23:21,669
CP is you've had experience with that

610
00:23:21,669 --> 00:23:24,130
that you could comment on that actually

611
00:23:24,130 --> 00:23:26,650
you know I've been asked but I to be

612
00:23:26,650 --> 00:23:29,020
honest I haven't really looked at that

613
00:23:29,020 --> 00:23:32,260
protocol yeah well we could talk about

614
00:23:32,260 --> 00:23:32,950
it over beer

615
00:23:32,950 --> 00:23:37,390
yes stage later but I'm wondering had

616
00:23:37,390 --> 00:23:39,400
you thought about normalizing this I

617
00:23:39,400 --> 00:23:41,169
like what you've done I'm a classically

618
00:23:41,169 --> 00:23:43,270
trained systems engineer so this is a

619
00:23:43,270 --> 00:23:45,730
true pure trade study right the trade

620
00:23:45,730 --> 00:23:48,130
off study but you haven't normalized the

621
00:23:48,130 --> 00:23:49,960
data that have you thought about

622
00:23:49,960 --> 00:23:52,780
allowing a customer who's creating an

623
00:23:52,780 --> 00:23:56,440
RFP and doing an evaluation to wait the

624
00:23:56,440 --> 00:23:58,360
different pieces so that you can

625
00:23:58,360 --> 00:24:00,159
normalize it because some people may

626
00:24:00,159 --> 00:24:02,650
care more about one quality versus

627
00:24:02,650 --> 00:24:04,299
another have you thought about adding

628
00:24:04,299 --> 00:24:07,780
that to your yeah well I was kind of

629
00:24:07,780 --> 00:24:09,789
trying to touch on one of my points was

630
00:24:09,789 --> 00:24:11,559
just about okay you know obviously

631
00:24:11,559 --> 00:24:13,150
proprietary protocols or vendor specific

632
00:24:13,150 --> 00:24:15,280
ones you know for them they're gonna

633
00:24:15,280 --> 00:24:17,500
care that your implementation for dnp3

634
00:24:17,500 --> 00:24:20,260
is good versus Modbus if they don't even

635
00:24:20,260 --> 00:24:22,510
use so yeah I mean that's that's a great

636
00:24:22,510 --> 00:24:25,690
point so my hope from this was that you

637
00:24:25,690 --> 00:24:27,549
know we can really like as an ICS

638
00:24:27,549 --> 00:24:29,380
community come up with some way to kind

639
00:24:29,380 --> 00:24:29,789
of gay

640
00:24:29,789 --> 00:24:31,979
this stuff I mean obviously foreign

641
00:24:31,979 --> 00:24:34,259
business stands for competitors but the

642
00:24:34,259 --> 00:24:35,429
end goal here is we want to protect

643
00:24:35,429 --> 00:24:37,229
these industrial control systems and

644
00:24:37,229 --> 00:24:38,789
really we should all be trying to make

645
00:24:38,789 --> 00:24:41,789
the best software we can so that's kind

646
00:24:41,789 --> 00:24:46,220
of my my hope for that other questions

647
00:24:46,220 --> 00:24:49,759
there's one in the back

648
00:24:51,559 --> 00:24:55,679
Thanks so I'm curious let's your to my

649
00:24:55,679 --> 00:24:59,100
Modbus so it's clear that you could have

650
00:24:59,100 --> 00:25:02,489
a capability to say for example block

651
00:25:02,489 --> 00:25:05,639
Modbus right register 100 you know

652
00:25:05,639 --> 00:25:09,659
certain ranges 100 to 200 yeah so that's

653
00:25:09,659 --> 00:25:11,700
fine but what if what what's your answer

654
00:25:11,700 --> 00:25:13,769
if I'm like a process control engineer

655
00:25:13,769 --> 00:25:17,159
and I don't want to think about Modbus I

656
00:25:17,159 --> 00:25:19,409
want to think about this is a pressure

657
00:25:19,409 --> 00:25:21,149
vessel and I don't want it to go over

658
00:25:21,149 --> 00:25:24,179
600 degrees how do i express that one of

659
00:25:24,179 --> 00:25:26,580
your rules right so I mean it really

660
00:25:26,580 --> 00:25:29,729
translates down to you know on the wire

661
00:25:29,729 --> 00:25:31,200
you're gonna see it as some Modbus

662
00:25:31,200 --> 00:25:32,789
commands some function he's gonna

663
00:25:32,789 --> 00:25:34,409
represent it maybe as a tag or some

664
00:25:34,409 --> 00:25:37,169
other reference so kanata fee knows case

665
00:25:37,169 --> 00:25:38,700
we have this idea of test modes so what

666
00:25:38,700 --> 00:25:40,679
you do is you put in test mode run all

667
00:25:40,679 --> 00:25:42,929
your commands get a syslog message or an

668
00:25:42,929 --> 00:25:44,879
event message saying you know it's it's

669
00:25:44,879 --> 00:25:47,009
it's blocked this specific Modbus

670
00:25:47,009 --> 00:25:49,619
function code this address range and

671
00:25:49,619 --> 00:25:51,599
then they would go about creating rules

672
00:25:51,599 --> 00:25:52,259
for that

673
00:25:52,259 --> 00:25:54,299
so it'll permit it in test mode when you

674
00:25:54,299 --> 00:25:56,190
move to operational you have these rules

675
00:25:56,190 --> 00:25:56,700
built

676
00:25:56,700 --> 00:25:58,739
however it's not going to correlate you

677
00:25:58,739 --> 00:26:00,869
know this is me looking at this pressure

678
00:26:00,869 --> 00:26:03,169
valve oh this is Modbus function code X

679
00:26:03,169 --> 00:26:09,619
so if I bought the pressure vessel from

680
00:26:09,619 --> 00:26:12,779
GE I would want them to give me the

681
00:26:12,779 --> 00:26:14,460
Tofino rules so that when I'm when I'm

682
00:26:14,460 --> 00:26:15,869
working on a management console I can

683
00:26:15,869 --> 00:26:17,639
say temperature range as opposed to

684
00:26:17,639 --> 00:26:19,619
Modbus functions which I don't ever want

685
00:26:19,619 --> 00:26:21,269
to look at ya know that's I mean that's

686
00:26:21,269 --> 00:26:23,809
a good point

