1
00:00:06,410 --> 00:00:07,939
today we are going to be talking a little about

2
00:00:07,939 --> 00:00:09,580
venice reviving

3
00:00:09,580 --> 00:00:12,650
only a not very complex intro of

4
00:00:12,650 --> 00:00:15,559
how to apply it to bounty for those who do

5
00:00:15,559 --> 00:00:18,380
not know me I am leandro barragán not

6
00:00:18,380 --> 00:00:21,169
opted for something like this normal and it is

7
00:00:21,169 --> 00:00:23,430
pronounced in english

8
00:00:23,430 --> 00:00:24,560
let

9
00:00:24,560 --> 00:00:27,180
the ute systems of

10
00:00:27,180 --> 00:00:31,560
I am a former web developer here from Argentina because it

11
00:00:31,560 --> 00:00:34,830
was quite bad I realized that it was

12
00:00:34,830 --> 00:00:36,870
more difficult to do things than to break them anyway I

13
00:00:36,870 --> 00:00:41,000
change industry

14
00:00:42,010 --> 00:00:43,809
start praying in security core

15
00:00:43,809 --> 00:00:45,969
security is good you teach there without

16
00:00:45,969 --> 00:00:48,180
immunity and from the

17
00:00:48,180 --> 00:00:50,829
end of 2019 I am working as

18
00:00:50,829 --> 00:00:55,000
tester in hacker one as with tractor and

19
00:00:55,000 --> 00:00:56,309
good as always

20
00:00:56,309 --> 00:01:01,468
sparta in as bounty hunter also

21
00:01:01,650 --> 00:01:03,980
a few disclaims

22
00:01:03,980 --> 00:01:07,140
is a moderate level talk requires

23
00:01:07,140 --> 00:01:08,420


24
00:01:08,420 --> 00:01:12,510
classic knowledge such as short course dns that I

25
00:01:12,510 --> 00:01:14,360
am not going to explain in depth

26
00:01:14,360 --> 00:01:17,540
the talk itself is not advanced

27
00:01:17,540 --> 00:01:19,700
no  I am going to go in depth with all the

28
00:01:19,700 --> 00:01:22,130
variants almost all the tooling to

29
00:01:22,130 --> 00:01:23,600
implement them is already solved and

30
00:01:23,600 --> 00:01:25,640
put it for us so what

31
00:01:25,640 --> 00:01:27,290
important in a context of the ont and it is

32
00:01:27,290 --> 00:01:31,370
knowing how to use it and where to apply it

33
00:01:31,370 --> 00:01:34,190
this is known are all you had known

34
00:01:34,190 --> 00:01:37,130
the oldest paper I found was from

35
00:01:37,130 --> 00:01:39,790
1,996 well

36
00:01:39,790 --> 00:01:42,920
writing an attack against jada and so

37
00:01:42,920 --> 00:01:45,520
he is twenty five years old

38
00:01:45,520 --> 00:01:47,890
five years seventy

39
00:01:47,890 --> 00:01:49,659
another little topic about talks  that

40
00:01:49,659 --> 00:01:52,060
Argentines use a medium rare Spanish

41
00:01:52,060 --> 00:01:54,670
I am going to try to use

42
00:01:54,670 --> 00:01:58,290
neutral Spanish to make it more like for everyone

43
00:01:58,470 --> 00:02:01,090
this talk is based on a talk

44
00:02:01,090 --> 00:02:02,710
I saw with a friend in the

45
00:02:02,710 --> 00:02:05,500
local competition in March 2019 on how to exploit

46
00:02:05,500 --> 00:02:08,770
a running headless browser  On a

47
00:02:08,770 --> 00:02:09,959
server with

48
00:02:09,959 --> 00:02:12,060
certain limitations

49
00:02:12,060 --> 00:02:14,530
I find it interesting to revive the issue

50
00:02:14,530 --> 00:02:17,410
since today it is still

51
00:02:17,410 --> 00:02:20,920
prevalent, well for those who were

52
00:02:20,920 --> 00:02:22,900
in this talk there are few but

53
00:02:22,900 --> 00:02:25,420
just come here the first case

54
00:02:25,420 --> 00:02:26,950
that is going to show is exactly the same

55
00:02:26,950 --> 00:02:31,580
and case 2 and  3 are new in short,

56
00:02:31,580 --> 00:02:34,310
do not see a live demo but hey be

57
00:02:34,310 --> 00:02:36,710
interested and people are drinking and ariel

58
00:02:36,710 --> 00:02:38,750
allows it, we could do a longer

59
00:02:38,750 --> 00:02:40,610
stream  or someday on a Sunday that

60
00:02:40,610 --> 00:02:42,290
explaining everything step by step the

61
00:02:42,290 --> 00:02:44,630
blue sea rise without taste of test we followed

62
00:02:44,630 --> 00:02:47,180
a demo and we had fun now he had

63
00:02:47,180 --> 00:02:50,590
to do it half expeditious

64
00:02:51,060 --> 00:02:53,550
thanks to some boys who go

65
00:02:53,550 --> 00:02:57,360
with the ariel through space and other

66
00:02:57,360 --> 00:02:59,420
boys  good for some reason or another

67
00:02:59,420 --> 00:03:01,590
that they do not like names or

68
00:03:01,590 --> 00:03:04,890
want to remain anonymous

69
00:03:04,890 --> 00:03:07,819
with the motivation to talk about this

70
00:03:07,819 --> 00:03:09,680
is one of my favorite techniques the

71
00:03:09,680 --> 00:03:11,090
truth most

72
00:03:11,090 --> 00:03:13,069
are not very aware of the subject almost

73
00:03:13,069 --> 00:03:15,080
always they miss

74
00:03:15,080 --> 00:03:16,820
many devices than one  usually

75
00:03:16,820 --> 00:03:21,400
find in an internal network they

76
00:03:21,520 --> 00:03:23,410
trust other internal devices within

77
00:03:23,410 --> 00:03:24,730
the same network and put all the

78
00:03:24,730 --> 00:03:26,980
responsibility in the firewall that

79
00:03:26,980 --> 00:03:29,860
forward this happens a lot happens a lot

80
00:03:29,860 --> 00:03:32,410
in the devices currently there is useful

81
00:03:32,410 --> 00:03:35,470
for example that they are designed so that

82
00:03:35,470 --> 00:03:36,850
there is no need for authentication  within

83
00:03:36,850 --> 00:03:38,860
the internal network for ease of

84
00:03:38,860 --> 00:03:40,000
operation many times one

85
00:03:40,000 --> 00:03:42,290
raises a

86
00:03:42,290 --> 00:03:45,680
chronicle for example with connect  ar in the

87
00:03:45,680 --> 00:03:47,209
same network of layers, you can configure

88
00:03:47,209 --> 00:03:49,569
the

89
00:03:50,170 --> 00:03:53,080
same, the same thing happens with applications

90
00:03:53,080 --> 00:03:54,440


91
00:03:54,440 --> 00:03:56,240
that open local doors on the same

92
00:03:56,240 --> 00:03:58,100
machine, it was not right in localhost to

93
00:03:58,100 --> 00:03:59,780
communicate with other components of the

94
00:03:59,780 --> 00:04:04,040
application by rpc http etc. no one is

95
00:04:04,040 --> 00:04:07,100
supposed to be right  Sending

96
00:04:07,100 --> 00:04:09,620
packets from the same computer is

97
00:04:09,620 --> 00:04:12,170
malicious by many in that

98
00:04:12,170 --> 00:04:15,110
presumption, let's say even another

99
00:04:15,110 --> 00:04:16,548
motivation is that even

100
00:04:16,548 --> 00:04:19,100
security people have a complicated attack,

101
00:04:19,100 --> 00:04:22,280
let's say and even though they know it, they do

102
00:04:22,280 --> 00:04:24,820
not put it into practice

103
00:04:25,180 --> 00:04:27,100
and other issues that most of them  of the

104
00:04:27,100 --> 00:04:28,330
universities that he does not find being

105
00:04:28,330 --> 00:04:30,970
revine kings had high or

106
00:04:30,970 --> 00:04:33,460
critical counseling so good interesting talk

107
00:04:33,460 --> 00:04:37,150
as a little interest

108
00:04:37,150 --> 00:04:39,160
as well to the right I put some bugs

109
00:04:39,160 --> 00:04:42,010
that I that I have found with riva

110
00:04:42,010 --> 00:04:44,980
inning all jaio critics and there is only one

111
00:04:44,980 --> 00:04:47,650
duplicate  so clearly not everyone is

112
00:04:47,650 --> 00:04:51,130
looking for this as with many

113
00:04:51,130 --> 00:04:53,050
times it happens with the balls that are in the

114
00:04:53,050 --> 00:04:56,990
nucleus or ot  More automatic ras tools

115
00:04:56,990 --> 00:04:58,480
and

116
00:04:58,480 --> 00:05:01,420
well, the main idea of the dns above

117
00:05:01,420 --> 00:05:03,670
in English is going to go for a walk in a firewall

118
00:05:03,670 --> 00:05:06,610
and reach internal network services or

119
00:05:06,610 --> 00:05:07,900
that they are listening in

120
00:05:07,900 --> 00:05:09,500
back light interfaces

121
00:05:09,500 --> 00:05:11,720
simply taking advantage of how

122
00:05:11,720 --> 00:05:14,300
dns works that is, there is no  exploit

123
00:05:14,300 --> 00:05:15,070
that

124
00:05:15,070 --> 00:05:18,710
affects a particular soft mine damage

125
00:05:18,710 --> 00:05:20,140
or a green being in

126
00:05:20,140 --> 00:05:22,730
excessive dns vulnerability is how

127
00:05:22,730 --> 00:05:25,490
nsn works if then there is no

128
00:05:25,490 --> 00:05:27,470
patch that the dns can do to

129
00:05:27,470 --> 00:05:29,180
solve this root problem is a

130
00:05:29,180 --> 00:05:31,480
matter of each software well

131
00:05:31,480 --> 00:05:33,320
e

132
00:05:33,320 --> 00:05:35,000
the objective may be to add a

133
00:05:35,000 --> 00:05:37,400
browser such as chrome or firefox or it is

134
00:05:37,400 --> 00:05:39,950
client side or if not to exploit it in a

135
00:05:39,950 --> 00:05:42,050
component of the back end of an

136
00:05:42,050 --> 00:05:45,700
application that is to see salt there

137
00:05:46,169 --> 00:05:47,699
may be cases where the distinction is

138
00:05:47,699 --> 00:05:49,319
not so clear for example there are

139
00:05:49,319 --> 00:05:51,900
web applications where  from the back in the

140
00:05:51,900 --> 00:05:54,370
backend it joins a

141
00:05:54,370 --> 00:05:58,660
browser in a head, let's tell you

142
00:05:58,660 --> 00:06:00,580
the typical case that was

143
00:06:00,580 --> 00:06:04,350
also recently shown by naham sec,

144
00:06:04,350 --> 00:06:07,750
which was for pdf generators that already

145
00:06:07,750 --> 00:06:09,970
The technique was known but hey,

146
00:06:09,970 --> 00:06:11,560
a headless browser or whatever was raised

147
00:06:11,560 --> 00:06:13,210
and a pdf is generated from is

148
00:06:13,210 --> 00:06:16,870
someone close to the page that you

149
00:06:16,870 --> 00:06:21,250
sent and generated but hey, they are wheats

150
00:06:21,250 --> 00:06:23,020
cases for an idea and the difference

151
00:06:23,020 --> 00:06:24,610
is not so clear between  what is barça from

152
00:06:24,610 --> 00:06:26,400
clarence to housing and there are things that

153
00:06:26,400 --> 00:06:28,810
klein works in a browser but

154
00:06:28,810 --> 00:06:31,650
also questioning a browser in latin

155
00:06:31,650 --> 00:06:33,050
and

156
00:06:33,050 --> 00:06:35,650
some real examples of

157
00:06:35,650 --> 00:06:38,150
this

158
00:06:38,150 --> 00:06:40,310
one made a lot of noise was all the

159
00:06:40,310 --> 00:06:42,500
research that tavis ormandy did on

160
00:06:42,500 --> 00:06:44,900
torrent clients and that many

161
00:06:44,900 --> 00:06:46,310
torrent clients raised an

162
00:06:46,310 --> 00:06:48,170
interface in look back that the problem

163
00:06:48,170 --> 00:06:50,000
was in a ready gate easy look

164
00:06:50,000 --> 00:06:51,750
back

165
00:06:51,750 --> 00:06:54,990
and they trusted blindly well then there is

166
00:06:54,990 --> 00:06:58,710
a water let's get that the exterior that

167
00:06:58,710 --> 00:07:00,770
also raised a port in localhost

168
00:07:00,770 --> 00:07:03,240
and it was very easy to exploit you could

169
00:07:03,240 --> 00:07:05,640
send this language  elsewhere

170
00:07:05,640 --> 00:07:06,990
basically exploiting have

171
00:07:06,990 --> 00:07:09,360
upward haining quite critical and

172
00:07:09,360 --> 00:07:12,480
then a lot of devices from haiti

173
00:07:12,480 --> 00:07:15,050
that are vulnerable to these games or  We do

174
00:07:15,050 --> 00:07:18,450
a lot so that they open ports because they

175
00:07:18,450 --> 00:07:20,150
are in a local network, it is to have a local residential network, it

176
00:07:20,150 --> 00:07:22,590
is assumed that there is

177
00:07:22,590 --> 00:07:24,200
no attacker, this

178
00:07:24,200 --> 00:07:27,200
supposes,

179
00:07:33,080 --> 00:07:36,180
then, where fire we can look

180
00:07:36,180 --> 00:07:39,300
for anybody in the wagon, if necessary, say the

181
00:07:39,300 --> 00:07:42,840
first example are the scf without risk,

182
00:07:42,840 --> 00:07:45,060
let's say those  typical rf agents that one

183
00:07:45,060 --> 00:07:47,340
finds that they are by designs later in

184
00:07:47,340 --> 00:07:50,650
a next images a web

185
00:07:50,650 --> 00:07:52,360
and things like that where there are

186
00:07:52,360 --> 00:07:54,699
restrictions so that the internals cannot be

187
00:07:54,699 --> 00:07:56,440
accessed there is some

188
00:07:56,440 --> 00:07:57,550
component that is doing a

189
00:07:57,550 --> 00:07:59,520
validation

190
00:07:59,520 --> 00:08:02,289
then one finds that crf

191
00:08:02,289 --> 00:08:03,310
that  It is not reportable because

192
00:08:03,310 --> 00:08:04,780
ultimately one can only access

193
00:08:04,780 --> 00:08:08,340
hosts that are public,

194
00:08:08,340 --> 00:08:11,130
what can be done is to verify if

195
00:08:11,130 --> 00:08:13,139
behind this scf there is a browser,

196
00:08:13,139 --> 00:08:15,000
let's say you have the one that seasonal request,

197
00:08:15,000 --> 00:08:17,250
if it is simply a seat or an

198
00:08:17,250 --> 00:08:19,830
http library, let's say that it is the one that  do

199
00:08:19,830 --> 00:08:23,550
the re quest or is there a browser right what we

200
00:08:23,550 --> 00:08:25,590
can do to verify this is to

201
00:08:25,590 --> 00:08:27,690
pay for example an html in an

202
00:08:27,690 --> 00:08:29,220
html file that inside t  trick some

203
00:08:29,220 --> 00:08:31,380
javascript to do something that still windows

204
00:08:31,380 --> 00:08:33,089
point location for example to redirect

205
00:08:33,089 --> 00:08:36,479
the browser to the other side then if with

206
00:08:36,479 --> 00:08:38,010
the s it was refined we only send the

207
00:08:38,010 --> 00:08:40,679
html url the html is interpreted the

208
00:08:40,679 --> 00:08:43,080
javascript code is executed and

209
00:08:43,080 --> 00:08:44,730
redirected to the other side  It means that

210
00:08:44,730 --> 00:08:46,170
well there is a browser, there is someone who

211
00:08:46,170 --> 00:08:48,630
is executing the charter in steppe, in

212
00:08:48,630 --> 00:08:49,920
this case it happens to be a klain sainz attack

213
00:08:49,920 --> 00:08:51,620


214
00:08:51,620 --> 00:08:55,200
and there are also several bounty programs

215
00:08:55,200 --> 00:08:57,600
that have desktop applications and

216
00:08:57,600 --> 00:08:59,769
one can fix it

217
00:08:59,769 --> 00:09:02,499
if they raise ports listening at 127

218
00:09:02,499 --> 00:09:04,779
points  0 points 0.1 can become

219
00:09:04,779 --> 00:09:06,309
interesting if they do not have a type of

220
00:09:06,309 --> 00:09:08,819
authentication to

221
00:09:10,350 --> 00:09:13,650
explain a little roughly that in

222
00:09:13,650 --> 00:09:16,360
that above inning it

223
00:09:16,360 --> 00:09:19,209
basically consists of confusing a component

224
00:09:19,209 --> 00:09:21,579
that makes a request either a

225
00:09:21,579 --> 00:09:23,950
browser on the

226
00:09:23,950 --> 00:09:26,410
victim's computer or a  application home risk

227
00:09:26,410 --> 00:09:28,690
for the outside well where there is that service

228
00:09:28,690 --> 00:09:30,339
by design

229
00:09:30,339 --> 00:09:32,319
the idea is that the first request that

230
00:09:32,319 --> 00:09:33,569
goes out

231
00:09:33,569 --> 00:09:36,339
the one that goes out is a  ip

232
00:09:36,339 --> 00:09:38,379
considered safe, well, normally it is

233
00:09:38,379 --> 00:09:41,379
a public ip and the rich ones that follow

234
00:09:41,379 --> 00:09:42,910
either are the service that we want to

235
00:09:42,910 --> 00:09:44,630
attack

236
00:09:44,630 --> 00:09:46,610
something that is listening on localhost or

237
00:09:46,610 --> 00:09:49,610
an internal ip that has the typical one

238
00:09:49,610 --> 00:09:51,920
is half tied would it be or some

239
00:09:51,920 --> 00:09:55,160
internal jenkins something like that  The

240
00:09:55,160 --> 00:09:57,140
result of creating this attack depends on

241
00:09:57,140 --> 00:09:59,210
the scenario very clearly in a

242
00:09:59,210 --> 00:09:59,980
browser

243
00:09:59,980 --> 00:10:02,990
we can with revine wherever it is and we can

244
00:10:02,990 --> 00:10:05,540
see them walk seymour and without a policy

245
00:10:05,540 --> 00:10:06,980
that this police is in, what it does is

246
00:10:06,980 --> 00:10:09,530
prevent a site from making a request to

247
00:10:09,530 --> 00:10:11,450
another site in this case the site of the

248
00:10:11,450 --> 00:10:13,520
attacker making rich is towards the

249
00:10:13,520 --> 00:10:17,330
cervix inta we do not want to attack and in the

250
00:10:17,330 --> 00:10:19,820
case of servers there is a component of the

251
00:10:19,820 --> 00:10:21,620
back-end well with the case of caesar is

252
00:10:21,620 --> 00:10:23,030
that we can see restrictions at

253
00:10:23,030 --> 00:10:25,660
the application level restrictions that

254
00:10:25,660 --> 00:10:28,580
filters that do not allow us to get rich

255
00:10:28,580 --> 00:10:30,080
is hypersensitive  the activity that does not

256
00:10:30,080 --> 00:10:31,510
try to put

257
00:10:31,510 --> 00:10:34,400
localhost in a field with a url

258
00:10:34,400 --> 00:10:37,850
tells you no, everything is blocked, well,

259
00:10:37,850 --> 00:10:39,380
both cases I will explain  In the

260
00:10:39,380 --> 00:10:41,950
next axes

261
00:10:42,470 --> 00:10:44,690
in the case of clarín side it is like this

262
00:10:44,690 --> 00:10:47,030
suppose that we have a

263
00:10:47,030 --> 00:10:49,370
desktop application listening locally well that it

264
00:10:49,370 --> 00:10:50,600
will be our target and our

265
00:10:50,600 --> 00:10:52,040
victim uses a browser

266
00:10:52,040 --> 00:10:54,080
we all use chrome or firefox or whatever

267
00:10:54,080 --> 00:10:56,510
or we have an application where the  back

268
00:10:56,510 --> 00:10:59,720
end in pauné on the shoulders of good in both

269
00:10:59,720 --> 00:11:01,490
cases we would be using the browser

270
00:11:01,490 --> 00:11:04,910
in principle if a site you visit

271
00:11:04,910 --> 00:11:07,010
tries to communicate with the eyes of the

272
00:11:07,010 --> 00:11:10,340
internal network or localhost this will not be

273
00:11:10,340 --> 00:11:12,860
possible due to the ceim police origin

274
00:11:12,860 --> 00:11:15,620
to the sop well this works  thus the

275
00:11:15,620 --> 00:11:17,780
origin is defined by a triad which

276
00:11:17,780 --> 00:11:20,120
is the hosting protocol and the

277
00:11:20,120 --> 00:11:23,450
portal itself the site a that has a

278
00:11:23,450 --> 00:11:25,120
juniors protocol i ching and a defined port

279
00:11:25,120 --> 00:11:27,470
tries to connect with the site sees in

280
00:11:27,470 --> 00:11:31,370
another origin this request to fail

281
00:11:31,370 --> 00:11:33,130
unless the host  destination or it has

282
00:11:33,130 --> 00:11:35,540
implemented a very lax course policy

283
00:11:35,540 --> 00:11:37,460
but hey no it's not very likely it's not

284
00:11:37,460 --> 00:11:39,350
the case let's see what we're going to

285
00:11:39,350 --> 00:11:41,830
see in cases where there are no cost

286
00:11:41,830 --> 00:11:45,160
ins  We have somehow good

287
00:11:45,160 --> 00:11:47,260
the site code to the javascript code

288
00:11:47,260 --> 00:11:49,000
that is executing on the site to be able to

289
00:11:49,000 --> 00:11:51,130
send packets to the site see that it can

290
00:11:51,130 --> 00:11:53,350
be a port listening on localhost or

291
00:11:53,350 --> 00:11:56,710
some vulnerable internal site but without

292
00:11:56,710 --> 00:11:59,140
violating the same origin policy then it

293
00:11:59,140 --> 00:12:01,060
What we need is that both sites the

294
00:12:01,060 --> 00:12:02,940
attacking site of the victim site

295
00:12:02,940 --> 00:12:05,470
share the same origin and that is where it

296
00:12:05,470 --> 00:12:08,640
enters that herd

297
00:12:09,800 --> 00:12:12,830
let's suppose that the site is well

298
00:12:12,830 --> 00:12:15,100
paid in 13.33 points of sale and

299
00:12:15,100 --> 00:12:18,290
3.168 could not choose a worse one and pp or

300
00:12:18,290 --> 00:12:20,839
that you want several  Sometimes the time is horrible

301
00:12:20,839 --> 00:12:23,870
and the site sees

302
00:12:23,870 --> 00:12:26,810
this adjustment of 292 points 168 points 0.1

303
00:12:26,810 --> 00:12:28,700
well you would be the victim the site that

304
00:12:28,700 --> 00:12:30,860
we want to enter what happens if

305
00:12:30,860 --> 00:12:34,490
we manage to attack point gave

306
00:12:34,490 --> 00:12:37,089
the slide graph first resolve to

307
00:12:37,089 --> 00:12:40,810
13.30 and 3.3 and 3.168 and  after a while,

308
00:12:40,810 --> 00:12:45,050
go to resolve well to 192 points 168

309
00:12:45,050 --> 00:12:48,350
points 0.1 the page in this case will

310
00:12:48,350 --> 00:12:50,899
load all the content from 13.33

311
00:12:50,899 --> 00:12:52,970
point to 10.188 at the beginning and then

312
00:12:52,970 --> 00:12:55,459
eventually  Attack you point and two will

313
00:12:55,459 --> 00:12:58,070
go to point the trip to 192 points

314
00:12:58,070 --> 00:13:00,800
168 points 0.1 then any

315
00:13:00,800 --> 00:13:02,329
sent to any rich is that we send

316
00:13:02,329 --> 00:13:05,209
attack point script after

317
00:13:05,209 --> 00:13:08,600
this happens it will be sent to 192

318
00:13:08,600 --> 00:13:11,209
points 168 points 0.1 instead  from original electro

319
00:13:11,209 --> 00:13:13,100


320
00:13:13,100 --> 00:13:14,810
the problems that not everything is so simple

321
00:13:14,810 --> 00:13:18,290
all modern browsers let's say and

322
00:13:18,290 --> 00:13:19,430
operating systems really

323
00:13:19,430 --> 00:13:22,160
keep a dns cache would be these so as

324
00:13:22,160 --> 00:13:24,680
not to be asking all the time for the

325
00:13:24,680 --> 00:13:27,800
resolution of dns of a domain would be

326
00:13:27,800 --> 00:13:29,660
with the amount of rich that are made

327
00:13:29,660 --> 00:13:31,460
all they do using the amount that

328
00:13:31,460 --> 00:13:33,710
is done in a browser each rich is

329
00:13:33,710 --> 00:13:36,500
having to ask for a dns resolution is

330
00:13:36,500 --> 00:13:38,870
expensive so they store the

331
00:13:38,870 --> 00:13:43,160
dns resolution in a cache well and use that

332
00:13:43,160 --> 00:13:45,410
for a time for how long is

333
00:13:45,410 --> 00:13:47,900
there a good value that is  calls ttl is

334
00:13:47,900 --> 00:13:51,710
the time to live indicates how long

335
00:13:51,710 --> 00:13:55,070
the client can save the value

336
00:13:55,070 --> 00:13:58,300
in the cache well if we put a low ttl

337
00:13:58,300 --> 00:14:01,500
we can a second

338
00:14:01,500 --> 00:14:03,620
before rule

339
00:14:03,620 --> 00:14:05,630
sound of this

340
00:14:05,630 --> 00:14:07,460
We continue to close the view disk if

341
00:14:07,460 --> 00:14:10,700
we put a low TV we can achieve

342
00:14:10,700 --> 00:14:12,740
the scenario that appears they will make the

343
00:14:12,740 --> 00:14:14,720
first request

344
00:14:14,720 --> 00:14:16,490
then through the attacker's ip that

345
00:14:16,490 --> 00:14:18,370
in going up to 13 points of

346
00:14:18,370 --> 00:14:21,769
2,168 the attacker's javascript and html code is loaded

347
00:14:21,769 --> 00:14:23,750
And then from that

348
00:14:23,750 --> 00:14:25,339
code what we can do is make a

349
00:14:25,339 --> 00:14:28,550
request to attack point I, which is the same

350
00:14:28,550 --> 00:14:30,649
origin, so it is legal not if we

351
00:14:30,649 --> 00:14:33,350
are not violating the semar and if polis the

352
00:14:33,350 --> 00:14:35,660
difference is that now

353
00:14:35,660 --> 00:14:37,790
it will point to the internal ip a

354
00:14:37,790 --> 00:14:40,339
Once the pdl is passed once the

355
00:14:40,339 --> 00:14:42,319
cache expires well as we are within the same

356
00:14:42,319 --> 00:14:44,540
origin yet this is not a violation of

357
00:14:44,540 --> 00:14:47,720
the symbol if polis then it seems this

358
00:14:47,720 --> 00:14:49,819
class attack we are two tools one of

359
00:14:49,819 --> 00:14:52,490
necessary to the beaver to resolve the

360
00:14:52,490 --> 00:14:54,800
domain in this way means  Strange well

361
00:14:54,800 --> 00:14:59,180
and check the ttl and codes and download that

362
00:14:59,180 --> 00:15:01,519
it is executed inside the browser and that ex

363
00:15:01,519 --> 00:15:03,560
filter interesting data from the victim's site.

364
00:15:03,560 --> 00:15:06,019
I lie in this case 192 168

365
00:15:06,019 --> 00:15:08,920
points 0.1

366
00:15:10,610 --> 00:15:12,890
I am going to present a case  Real this I

367
00:15:12,890 --> 00:15:15,410
present it with a friend in the reviews in

368
00:15:15,410 --> 00:15:19,010
March 2019 you delay airs

369
00:15:19,010 --> 00:15:20,540
this case we are going to call client side

370
00:15:20,540 --> 00:15:22,670
but in reality something liar because

371
00:15:22,670 --> 00:15:23,839
it is not a person's browser

372
00:15:23,839 --> 00:15:25,430
adding if it is not an

373
00:15:25,430 --> 00:15:27,140
automatic browser that gave rise to a is that

374
00:15:27,140 --> 00:15:29,920
network  Well

375
00:15:30,030 --> 00:15:33,570
this src is the typical complicated case

376
00:15:33,570 --> 00:15:35,460
when I have another genesis I refer to those

377
00:15:35,460 --> 00:15:37,920
of your task a new way was

378
00:15:37,920 --> 00:15:39,810
completely online I had not formed

379
00:15:39,810 --> 00:15:42,270
the answer was completely asynchronous

380
00:15:42,270 --> 00:15:46,500
is no we could not list

381
00:15:46,500 --> 00:15:48,300
local ports using timing the typical technique

382
00:15:48,300 --> 00:15:50,400
of seeing how much 100 100  Rico is it takes more

383
00:15:50,400 --> 00:15:52,830
time in one port than in another so you

384
00:15:52,830 --> 00:15:54,660
can infer that it is open, you can

385
00:15:54,660 --> 00:15:56,520
do a kind of scanner cut

386
00:15:56,520 --> 00:15:59,760
using the necessary efe, as it is asynchronous, it

387
00:15:59,760 --> 00:16:03,420
has no way to do that and no

388
00:16:03,420 --> 00:16:06,990
typical techniques to increase the impact, it

389
00:16:06,990 --> 00:16:09,210
worked then the only thing we can

390
00:16:09,210 --> 00:16:13,890
make dating http https and ftp not much

391
00:16:13,890 --> 00:16:16,860
more innovate the answer nothing was

392
00:16:16,860 --> 00:16:19,589
quite poor he is the king

393
00:16:19,589 --> 00:16:22,930
I just saw as good  to practice, that is, we would

394
00:16:22,930 --> 00:16:24,430
raise a portal to listen

395
00:16:24,430 --> 00:16:25,649
connect

396
00:16:25,649 --> 00:16:28,630
let's see the rich one is someone well

397
00:16:28,630 --> 00:16:30,370
connected to us then one according to what

398
00:16:30,370 --> 00:16:33,190
is interesting is that if that someone,

399
00:16:33,190 --> 00:16:36,520
let's say it was a real browser it was it was a

400
00:16:36,520 --> 00:16:40,420
chrome a browser then this was a

401
00:16:40,420 --> 00:16:42,070
lot of possibilities we are not

402
00:16:42,070 --> 00:16:46,020
attacking a seat or a silly library,

403
00:16:46,020 --> 00:16:49,270
let's say but a full grow being that

404
00:16:49,270 --> 00:16:50,920
has a lot more surface area is

405
00:16:50,920 --> 00:16:53,640
fine here

406
00:16:54,690 --> 00:16:56,769
and

407
00:16:56,769 --> 00:16:59,319
then what happened behind the scenes

408
00:16:59,319 --> 00:17:01,959
basically what happened was that

409
00:17:01,959 --> 00:17:04,449
we were rich in the application if

410
00:17:04,449 --> 00:17:06,429
you had step 1 the application of  body

411
00:17:06,429 --> 00:17:09,369
to 200 ok immediately before doing

412
00:17:09,369 --> 00:17:12,189
the rich it is fine that is why it is asynchronous and

413
00:17:12,189 --> 00:17:14,390
after a few seconds

414
00:17:14,390 --> 00:17:16,490
the back in Spain goes an instance of

415
00:17:16,490 --> 00:17:19,760
google chrome well to two for only

416
00:17:19,760 --> 00:17:21,890
for that page what date goes to the

417
00:17:21,890 --> 00:17:24,650
web page that we indicate and  ready I hope everything

418
00:17:24,650 --> 00:17:27,530
does not return an answer

419
00:17:27,530 --> 00:17:29,000
so

420
00:17:29,000 --> 00:17:30,820
that we can try in these cases

421
00:17:30,820 --> 00:17:33,530
we can afford html and the server

422
00:17:33,530 --> 00:17:36,380
partial it well we could run the

423
00:17:36,380 --> 00:17:38,690
javas code  Crypt validated with the trick that

424
00:17:38,690 --> 00:17:40,910
dimensions classify putting windows

425
00:17:40,910 --> 00:17:43,270
location or some nonsense like that

426
00:17:43,270 --> 00:17:46,130
worked what happened was that

427
00:17:46,130 --> 00:17:49,700
after a minute or so in the instance it

428
00:17:49,700 --> 00:17:51,800
died towards time out and it died if we had

429
00:17:51,800 --> 00:17:55,030
a minute to do it

430
00:17:55,389 --> 00:17:58,179
in the attack

431
00:17:58,179 --> 00:18:00,100
we  We had a chrome zero,

432
00:18:00,100 --> 00:18:01,869
unfortunately, if not, a very easy decision to

433
00:18:01,869 --> 00:18:04,110
get execution there,

434
00:18:04,110 --> 00:18:06,340
we couldn't get two other sides

435
00:18:06,340 --> 00:18:07,720
because the browser obviously has a

436
00:18:07,720 --> 00:18:11,879
man without a policeman, so it prohibits it,

437
00:18:12,360 --> 00:18:15,690
but the interesting thing was that

438
00:18:15,690 --> 00:18:17,970
the IP that made the request was

439
00:18:17,970 --> 00:18:20,309
adjusted from the swimming pool.

440
00:18:20,309 --> 00:18:23,620
It was an s 2 of double successes we did good

441
00:18:23,620 --> 00:18:25,210
we can try to try to bring ourselves to the

442
00:18:25,210 --> 00:18:26,410
middle

443
00:18:26,410 --> 00:18:30,900
the objective was to reach the goal double s

444
00:18:30,900 --> 00:18:34,770
we have to use the top

445
00:18:35,720 --> 00:18:37,429
then we have to plan a strategy

446
00:18:37,429 --> 00:18:40,640
of what we are there are several things a

447
00:18:40,640 --> 00:18:44,540
domain under the control of the  attacker

448
00:18:44,540 --> 00:18:47,639
[Music]

449
00:18:47,789 --> 00:18:49,979
as a sentence save well that they have

450
00:18:49,979 --> 00:18:52,409
I will do them for centuries in that records a

451
00:18:52,409 --> 00:18:55,070
server arranged to a public ip and

452
00:18:55,070 --> 00:18:58,019
some of the tools exi  Stents that must

453
00:18:58,019 --> 00:18:59,789
be called from quite

454
00:18:59,789 --> 00:19:02,749
complicated zeros there are several study red

455
00:19:02,749 --> 00:19:05,749
singularity

456
00:19:06,300 --> 00:19:08,460
which are the best known but

457
00:19:08,460 --> 00:19:09,990
we ended up using singularity because it

458
00:19:09,990 --> 00:19:12,210
was the time that worked best

459
00:19:12,210 --> 00:19:13,650
in fact as full color then

460
00:19:13,650 --> 00:19:15,390
we have to make a web network pool with a

461
00:19:15,390 --> 00:19:18,920
patch  because there were certain

462
00:19:19,010 --> 00:19:21,530
edge cases that contemplated them then

463
00:19:21,530 --> 00:19:22,700
we had to modify the current one so that it

464
00:19:22,700 --> 00:19:24,070
works

465
00:19:24,070 --> 00:19:25,929
and

466
00:19:25,929 --> 00:19:27,519
when we wanted to float all this we

467
00:19:27,519 --> 00:19:29,590
got into with certain problems well

468
00:19:29,590 --> 00:19:32,529
first nothing to answer with a tt below it

469
00:19:32,529 --> 00:19:35,559
does not work in the current roses the

470
00:19:35,559 --> 00:19:37,720
idea of tele as I explained is  try

471
00:19:37,720 --> 00:19:40,809
that the registry does not exist for a long

472
00:19:40,809 --> 00:19:42,129
time in the street then for one put

473
00:19:42,129 --> 00:19:44,280
a low dt l

474
00:19:44,280 --> 00:19:47,400
and wait for the domain of

475
00:19:47,400 --> 00:19:49,110
the resolution to expire and then we can

476
00:19:49,110 --> 00:19:50,610
send a new one

477
00:19:50,610 --> 00:19:53,760
this does not work in pink but in tl of

478
00:19:53,760 --> 00:19:55,830
zero or  a second the bag

479
00:19:55,830 --> 00:19:59,280
directly ignores it and even so it continues we want to

480
00:19:59,280 --> 00:20:02,580
use the initial ip let's say then it does

481
00:20:02,580 --> 00:20:05,400
not serve us we finish  In another technique

482
00:20:05,400 --> 00:20:08,310
where the DNS responds with several

483
00:20:08,310 --> 00:20:11,910
records at the same time, it responds with two

484
00:20:11,910 --> 00:20:14,760
records to in this case one pointing to

485
00:20:14,760 --> 00:20:16,470
our public being and in the

486
00:20:16,470 --> 00:20:19,650
attacking envelope that is 13.33 with 23 points 168

487
00:20:19,650 --> 00:20:23,040
with a telecinco with it and another

488
00:20:23,040 --> 00:20:25,770
record in  the same response with 169

489
00:20:25,770 --> 00:20:29,280
250 and 400 59 254 this is the double data half

490
00:20:29,280 --> 00:20:33,630
of ls this had implies that at

491
00:20:33,630 --> 00:20:36,600
some point in the server 13.23 when they

492
00:20:36,600 --> 00:20:39,600
see 3.168 it stops responding we simulate

493
00:20:39,600 --> 00:20:42,510
that the server crashes, let's say and also the

494
00:20:42,510 --> 00:20:44,250
low dt expires then the  browser

495
00:20:44,250 --> 00:20:47,520
automatically starts using the second

496
00:20:47,520 --> 00:20:48,720
ip that it has,

497
00:20:48,720 --> 00:20:53,059
in this case it will exit, we want to attack,

498
00:20:54,169 --> 00:20:56,869
well, I will show step by step

499
00:20:56,869 --> 00:20:59,299
how the attack works, having it starts

500
00:20:59,299 --> 00:21:02,779
like this, we want to do it, it was used, I had to

501
00:21:02,779 --> 00:21:05,179
write just now and when the browser

502
00:21:05,179 --> 00:21:07,789
asks for the ip  from our domain we

503
00:21:07,789 --> 00:21:10,480
answer

504
00:21:11,389 --> 00:21:13,789
the server our partner from nc

505
00:21:13,789 --> 00:21:15,459
responds with 2 ipes

506
00:21:15,459 --> 00:21:21,440
13,342 and 3,168 of 169 254 169 254 and

507
00:21:21,440 --> 00:21:24,669
until everything is legal

508
00:21:24,669 --> 00:21:28,590
then the browser visits 13.33 point of

509
00:21:28,590 --> 00:21:31,299
1,238 and downloads  all the javascript html code

510
00:21:31,299 --> 00:21:35,070
our good

511
00:21:39,879 --> 00:21:42,850
the javascript code

512
00:21:42,850 --> 00:21:44,500
that is executed in the life of the victim

513
00:21:44,500 --> 00:21:47,770
repeatedly tries to date our

514
00:21:47,770 --> 00:21:50,740
domain bar the url of the

515
00:21:50,740 --> 00:21:52,930
goals metadata that happens this

516
00:21:52,930 --> 00:21:55,800
will respond 404 because our

517
00:21:55,800 --> 00:21:59,530
domain continues to point to our

518
00:21:59,530 --> 00:22:03,410
server not to the  meta data double s

519
00:22:03,410 --> 00:22:05,200
but there

520
00:22:05,200 --> 00:22:07,950
comes a point where the http server

521
00:22:07,950 --> 00:22:10,840
applies a pitbulls rule to

522
00:22:10,840 --> 00:22:12,010
deny any connection to the port,

523
00:22:12,010 --> 00:22:13,539
any connection that you

524
00:22:13,539 --> 00:22:15,100
want to make to respond with a recipe is fine,

525
00:22:15,100 --> 00:22:16,840
then the browser that has a

526
00:22:16,840 --> 00:22:19,570
common domain expired, which to top

527
00:22:19,570 --> 00:22:21,970
it off does not  It works when you try to connect it does not

528
00:22:21,970 --> 00:22:24,370
work then it uses the second IP

529
00:22:24,370 --> 00:22:27,100
that has the second IP that it has

530
00:22:27,100 --> 00:22:30,760
is 189 254 169 254 which is the double des data meta

531
00:22:30,760 --> 00:22:32,690


532
00:22:32,690 --> 00:22:34,520
as the domain now points

533
00:22:34,520 --> 00:22:38,050
effectively to 189 2

534
00:22:38,050 --> 00:22:41,840
459 254 the rich one works and we

535
00:22:41,840 --> 00:22:43,700
bring the  critical initiation after

536
00:22:43,700 --> 00:22:45,710
that information we can ex filter it to

537
00:22:45,710 --> 00:22:47,180
any domain of we control total

538
00:22:47,180 --> 00:22:50,150
request for outside can  We do the

539
00:22:50,150 --> 00:22:52,340
soft allows that what it allows us is to be

540
00:22:52,340 --> 00:22:55,899
able to answer well

541
00:22:56,200 --> 00:22:58,860
well

542
00:22:58,980 --> 00:23:02,130
to finish this is a screenshot of

543
00:23:02,130 --> 00:23:03,660
the terminal of brass singularity that

544
00:23:03,660 --> 00:23:05,490
we use showing how the browser

545
00:23:05,490 --> 00:23:08,100
makes us rich with the beliefs of

546
00:23:08,100 --> 00:23:12,440
doubles and about some comments

547
00:23:12,440 --> 00:23:14,580
The interesting thing about singularity is that you

548
00:23:14,580 --> 00:23:16,110
take away everything, solved the truth,

549
00:23:16,110 --> 00:23:19,160
that is, it does not approve of 'spy kids'

550
00:23:19,160 --> 00:23:22,110
the dns server is the hash to close, there

551
00:23:22,110 --> 00:23:25,380
is also all the code I already downloaded to

552
00:23:25,380 --> 00:23:27,000
attack typical internal services

553
00:23:27,000 --> 00:23:28,559
like half is double s because  each

554
00:23:28,559 --> 00:23:31,020
service is not different let's say it is not the

555
00:23:31,020 --> 00:23:32,790
same to reach the goal tied read they

556
00:23:32,790 --> 00:23:34,700
ran out of who for example then

557
00:23:34,700 --> 00:23:36,660
for example it has a stopped

558
00:23:36,660 --> 00:23:38,610
crappy attack side that was piris an app and they

559
00:23:38,610 --> 00:23:40,320
clearly listen to localhost well

560
00:23:40,320 --> 00:23:42,000
when one raised care

561
00:23:42,000 --> 00:23:46,100
jenkins etc. a lot

562
00:23:46,559 --> 00:23:48,330
And

563
00:23:48,330 --> 00:23:50,130
well that with that ends the first

564
00:23:50,130 --> 00:23:53,899
case now we go to the second case

565
00:23:54,340 --> 00:23:56,020
in this case it is also key in side

566
00:23:56,020 --> 00:23:59,529
but unfortunately I can not give

567
00:23:59,529 --> 00:24:02,620
Many details, that is a bounty vague,

568
00:24:02,620 --> 00:24:04,600
well, so some things that I change to

569
00:24:04,600 --> 00:24:06,640
respect, let's say, but the attack itself is

570
00:24:06,640 --> 00:24:09,010
the same, basically the same, it is a

571
00:24:09,010 --> 00:24:11,169
typical desktop application, it runs on

572
00:24:11,169 --> 00:24:14,409
windows and mac, and the interesting thing about this

573
00:24:14,409 --> 00:24:16,150
application is that it opens one  and in

574
00:24:16,150 --> 00:24:19,360
localhost to handle internal requests

575
00:24:19,360 --> 00:24:21,070
well

576
00:24:21,070 --> 00:24:24,940
without authorization or anything but only

577
00:24:24,940 --> 00:24:29,210
listening in localhost is here

578
00:24:29,210 --> 00:24:31,090
the reversion

579
00:24:31,090 --> 00:24:33,399
has some interesting times

580
00:24:33,399 --> 00:24:37,490
typical exec that received a kind of

581
00:24:37,490 --> 00:24:39,320
linguistic expression something

582
00:24:39,320 --> 00:24:40,940
weird but hey we ended up

583
00:24:40,940 --> 00:24:41,950
executing arbitrary code

584
00:24:41,950 --> 00:24:43,940
then while you were the  local

585
00:24:43,940 --> 00:24:46,039
host or the day the theme code is executed

586
00:24:46,039 --> 00:24:48,879
how to get to localhost

587
00:24:49,290 --> 00:24:51,180
is the recipe for disaster if we know

588
00:24:51,180 --> 00:24:53,040
how to exploit it, we cannot

589
00:24:53,040 --> 00:24:55,350
take advantage of a browser that

590
00:24:55,350 --> 00:24:57,500
the victim is running on the same machine

591
00:24:57,500 --> 00:24:59,490
to make him visit a site that we

592
00:24:59,490 --> 00:25:01,320
control and apply what  The same from nc

593
00:25:01,320 --> 00:25:03,870
knows the problem is that the pencil was

594
00:25:03,870 --> 00:25:06,480
raised between the 50.00  0 and the

595
00:25:06,480 --> 00:25:07,700
60,000

596
00:25:07,700 --> 00:25:11,040
completely random was a with the

597
00:25:11,040 --> 00:25:13,680
exact ports but it was a difference

598
00:25:13,680 --> 00:25:16,560
of 20,000 ports well then it is very

599
00:25:16,560 --> 00:25:18,480
difficult to exploit because we are

600
00:25:18,480 --> 00:25:20,880
right on the correct port of one and

601
00:25:20,880 --> 00:25:23,760
if you are not on the same network you cannot

602
00:25:23,760 --> 00:25:25,770
scan it and also this is listening to

603
00:25:25,770 --> 00:25:27,330
the  localhost that is, you cannot

604
00:25:27,330 --> 00:25:29,659
scan

605
00:25:30,919 --> 00:25:33,309
another issue either, it is that when

606
00:25:33,309 --> 00:25:35,320
the victim visits our site

607
00:25:35,320 --> 00:25:36,909
we cannot hit another port so

608
00:25:36,909 --> 00:25:39,700
that the origin is defined as the

609
00:25:39,700 --> 00:25:42,149
protocol of

610
00:25:42,360 --> 00:25:44,850
the young man and the port then another

611
00:25:44,850 --> 00:25:47,010
port is another origin and they cannot

612
00:25:47,010 --> 00:25:49,710
return  violate the soft let's say

613
00:25:49,710 --> 00:25:52,350
then the solution was to implement a

614
00:25:52,350 --> 00:25:55,770
port scanner in javascript the idea

615
00:25:55,770 --> 00:25:57,360
first found it in valid port and

616
00:25:57,360 --> 00:25:59,510
then counted all the

617
00:25:59,510 --> 00:26:02,549
remaining attack as we did in case 1 in

618
00:26:02,549 --> 00:26:04,500
the first example but with the

619
00:26:04,500 --> 00:26:06,690
correct port then the scanner  ports

620
00:26:06,690 --> 00:26:08,549
was the most difficult to do the truth this

621
00:26:08,549 --> 00:26:10,200
I did with friends cousins almost a

622
00:26:10,200 --> 00:26:12,630
whole day to trace the scanner

623
00:26:12,630 --> 00:26:14,010
we ended up doing  I'm going to use a

624
00:26:14,010 --> 00:26:18,950
completely chaste blue for everything

625
00:26:19,160 --> 00:26:21,690
with this boy and we are all

626
00:26:21,690 --> 00:26:24,870
going to use it for a new attack

627
00:26:24,870 --> 00:26:26,730
but I calculate that you can do it by

628
00:26:26,730 --> 00:26:28,830
understanding the basic concept and based on

629
00:26:28,830 --> 00:26:30,690
what is already done in tours as

630
00:26:30,690 --> 00:26:33,180
singular and others and with  a little

631
00:26:33,180 --> 00:26:34,980
knowledge of the subject that neither of

632
00:26:34,980 --> 00:26:36,900
us are experts in javascript

633
00:26:36,900 --> 00:26:39,809
took us a little more time than it

634
00:26:39,809 --> 00:26:42,139
should

635
00:26:42,190 --> 00:26:44,559
well graph

636
00:26:44,559 --> 00:26:45,990
explains more or less the attack in

637
00:26:45,990 --> 00:26:49,690
summary first what we do what

638
00:26:49,690 --> 00:26:51,730
the victim does because in a browser

639
00:26:51,730 --> 00:26:54,279
we force ourselves  For the victim to

640
00:26:54,279 --> 00:26:56,139
enter our site using a

641
00:26:56,139 --> 00:26:57,909
browser, then we execute the

642
00:26:57,909 --> 00:26:59,409
port scanner locally in their

643
00:26:59,409 --> 00:27:02,049
browser and when we find the port

644
00:27:02,049 --> 00:27:06,009
in this case 45 1,274 what we do is

645
00:27:06,009 --> 00:27:07,719
execute the attack in that up inning

646
00:27:07,719 --> 00:27:10,210
on that particular port and

647
00:27:10,210 --> 00:27:11,619
call  the app and that it is running in

648
00:27:11,619 --> 00:27:13,450
localhost with the command that we want to

649
00:27:13,450 --> 00:27:16,419
execute later in the shell or

650
00:27:16,419 --> 00:27:19,320
whatever,

651
00:27:19,950 --> 00:27:22,389
this is a skill they patched it

652
00:27:22,389 --> 00:27:25,649
added  or authentication in pencil

653
00:27:26,369 --> 00:27:29,370
then when the

654
00:27:29,370 --> 00:27:31,230
application of this wants to make

655
00:27:31,230 --> 00:27:33,390
a rich that crazy host is running the

656
00:27:33,390 --> 00:27:35,600
same machine what it does is

657
00:27:35,600 --> 00:27:38,820
make the rich need a berger they saw

658
00:27:38,820 --> 00:27:41,220
an authentication header and this

659
00:27:41,220 --> 00:27:43,440
authentication value was stored in the

660
00:27:43,440 --> 00:27:45,480
diputator then the  Application of this

661
00:27:45,480 --> 00:27:48,059
simply goes and reads it to disk and makes

662
00:27:48,059 --> 00:27:50,540
the requests with that value, the most that

663
00:27:50,540 --> 00:27:52,400
an

664
00:27:52,400 --> 00:27:55,110
external attacker does not have access to that value

665
00:27:55,110 --> 00:27:58,459
so it is impossible to attack

666
00:27:58,890 --> 00:28:03,560
and thus the history of this ends

667
00:28:04,050 --> 00:28:06,410
let's go to the next case this is

668
00:28:06,410 --> 00:28:09,660
quite a case  interesting in this case

669
00:28:09,660 --> 00:28:12,360
is server site is also a

670
00:28:12,360 --> 00:28:15,210
private program the amount of more or less a

671
00:28:15,210 --> 00:28:17,670
year and a half ago so I can not tell

672
00:28:17,670 --> 00:28:21,180
much being private but hey change

673
00:28:21,180 --> 00:28:23,550
the name I'm sorry and I can count it

674
00:28:23,550 --> 00:28:25,320
anyway this is the typical case of

675
00:28:25,320 --> 00:28:27,960
development suppose that they hit him to the

676
00:28:27,960 --> 00:28:31,590
bottom is for the next rival date something

677
00:28:31,590 --> 00:28:33,960
very typical tells me well here is the

678
00:28:33,960 --> 00:28:36,350
problem is that

679
00:28:36,700 --> 00:28:38,920
there was something that verified that the url did not

680
00:28:38,920 --> 00:28:42,190
solve to children name of the url do not

681
00:28:42,190 --> 00:28:46,030
solve doing 27.0 point 0.1

682
00:28:46,030 --> 00:28:48,100
or any other internal range well

683
00:28:48,100 --> 00:28:49,560
in principle

684
00:28:49,560 --> 00:28:51,770
this is inscrutable

685
00:28:51,770 --> 00:28:54,320
the issue

686
00:28:54,320 --> 00:28:55,759
is trying to find a

687
00:28:55,759 --> 00:28:57,919
decoupling, let's say between

688
00:28:57,919 --> 00:28:59,360
the application component that does the

689
00:28:59,360 --> 00:29:01,580
check, this component that  is the

690
00:29:01,580 --> 00:29:04,190
face of the url itself

691
00:29:04,190 --> 00:29:06,970
so

692
00:29:07,340 --> 00:29:10,899
I don't have the details of

693
00:29:11,810 --> 00:29:14,060
this application it was completely

694
00:29:14,060 --> 00:29:16,490
black books I didn't have the code but the

695
00:29:16,490 --> 00:29:20,120
scheme was more or less like this we had the

696
00:29:20,120 --> 00:29:22,100
container to which it executes all the

697
00:29:22,100 --> 00:29:24,590
referred front-end in the application and

698
00:29:24,590 --> 00:29:26,420
it  it orders some

699
00:29:26,420 --> 00:29:28,280
security controls for example when someone

700
00:29:28,280 --> 00:29:30,500
calls it in point url, something from the

701
00:29:30,500 --> 00:29:33,230
application is fixed that the host does not

702
00:29:33,230 --> 00:29:35,930
resolve it is still wanting to be the rich one,

703
00:29:35,930 --> 00:29:40,090
it does not resolve to a local ip then the

704
00:29:40,090 --> 00:29:42,640


705
00:29:42,640 --> 00:29:45,350
festival request the url ends up being another

706
00:29:45,350 --> 00:29:47,420
component suppose container

707
00:29:47,420 --> 00:29:50,120
container sees that it has a component that

708
00:29:50,120 --> 00:29:52,100
has the resource for example it is common to

709
00:29:52,100 --> 00:29:54,850
have it get up and execute curl well

710
00:29:54,850 --> 00:29:57,110
c  trusting that the first

711
00:29:57,110 --> 00:29:59,000
container contained the container that

712
00:29:59,000 --> 00:30:01,790
controls and its work and reading key

713
00:30:01,790 --> 00:30:04,070
is not malicious

714
00:30:04,070 --> 00:30:07,310
the issue is if both components have

715
00:30:07,310 --> 00:30:09,650
different dns resolution mechanisms,

716
00:30:09,650 --> 00:30:13,400
the dt l will not matter because the

717
00:30:13,400 --> 00:30:15,770
rich one is next it will be  sent

718
00:30:15,770 --> 00:30:18,440
again to be authoritative and we

719
00:30:18,440 --> 00:30:20,420
can respond with a different ip

720
00:30:20,420 --> 00:30:22,880
this time in this case what interests me

721
00:30:22,880 --> 00:30:26,050
now the double metadata also say

722
00:30:26,050 --> 00:30:27,760
then the graph explains more or less

723
00:30:27,760 --> 00:30:30,000
the attack well

724
00:30:30,000 --> 00:30:32,420
although if it was to visit it

725
00:30:32,420 --> 00:30:36,270
vulnerable pencil fechu erreele  or to the attack

726
00:30:36,270 --> 00:30:41,550
point revine well sweep the url the rest

727
00:30:41,550 --> 00:30:43,740
of the url that interested me, for

728
00:30:43,740 --> 00:30:47,300
example in the double metadata s

729
00:30:47,520 --> 00:30:50,160
the front-end what it did was

730
00:30:50,160 --> 00:30:53,340
but the back in let's say but the

731
00:30:53,340 --> 00:30:54,680
component that did the validation

732
00:30:54,680 --> 00:30:57,570
resolved to what extent revine  and this

733
00:30:57,570 --> 00:30:59,430
solved a public ip then it said

734
00:30:59,430 --> 00:31:03,020
ok or it was passed to him by

735
00:31:03,020 --> 00:31:06,430
the container that he makes for the next one

736
00:31:06,430 --> 00:31:10,090
this would be step 3

737
00:31:10,570 --> 00:31:12,279
the container that makes the rich one is in

738
00:31:12,279 --> 00:31:14,860
defin  Itiva resolves it again and when it resolves it

739
00:31:14,860 --> 00:31:16,269
again in that case I

740
00:31:16,269 --> 00:31:17,649
answer it with something else I answer it with

741
00:31:17,649 --> 00:31:22,659
189 254 279 254 then attack point

742
00:31:22,659 --> 00:31:25,809
up goes to aim at the goal is at the

743
00:31:25,809 --> 00:31:27,940
bottom of the goal dated them well

744
00:31:27,940 --> 00:31:31,640
then kurt grabs file ala

745
00:31:31,640 --> 00:31:35,180
la  bs dated meta is returned to

746
00:31:35,180 --> 00:31:38,300
the application server and that video

747
00:31:38,300 --> 00:31:39,890
application returns the result of the

748
00:31:39,890 --> 00:31:42,110
date well to the attacker and another is the

749
00:31:42,110 --> 00:31:45,100
double credentials

750
00:31:46,690 --> 00:31:50,240
this as they happened after several

751
00:31:50,240 --> 00:31:53,720
bad patches the truth was quite

752
00:31:53,720 --> 00:31:55,370
easy to empty they did not understand very well

753
00:31:55,370 --> 00:31:57,680
the subject of the rival and the client did not

754
00:31:57,680 --> 00:32:00,830
understand then I put more

755
00:32:00,830 --> 00:32:03,600
controls of the style I do not know that it does not

756
00:32:03,600 --> 00:32:08,160
solve the metadata in ipv6 with l things

757
00:32:08,160 --> 00:32:10,400
like

758
00:32:10,940 --> 00:32:13,940
that so that it solves the aforementioned I had 4

759
00:32:13,940 --> 00:32:16,550
then I to solve my baby 6 things

760
00:32:16,550 --> 00:32:19,340
that are typical of the round trip  then

761
00:32:19,340 --> 00:32:21,440
he would report it again and they would suffocate

762
00:32:21,440 --> 00:32:22,660
him again, forcing him to sign

763
00:32:22,660 --> 00:32:25,070
until at one point someone has

764
00:32:25,070 --> 00:32:28,080
left and we would say let's not do

765
00:32:28,080 --> 00:32:30,500
a filter at the network level, that is, blocking

766
00:32:30,500 --> 00:32:33,690
as I did.  Were the beatles or directly

767
00:32:33,690 --> 00:32:37,190
used network names space is the linux

768
00:32:37,190 --> 00:32:39,870
to block connections to all

769
00:32:39,870 --> 00:32:43,399
local ranges let's say

770
00:32:43,910 --> 00:32:46,640
again this is nothing new the idea

771
00:32:46,640 --> 00:32:49,940
is such until it is basically a king

772
00:32:49,940 --> 00:32:52,610
condition let's say and I took it out of 16

773
00:32:52,610 --> 00:32:56,870
lights from nicolás I think  And from Obregón, I

774
00:32:56,870 --> 00:32:59,540
don't know how to pronounce it, sorry. Very

775
00:32:59,540 --> 00:33:02,530
well-known talk of soles rc from 2015. The verg is

776
00:33:02,530 --> 00:33:05,330
this talk. It is the scf bible. He

777
00:33:05,330 --> 00:33:08,290
recommended that they see it.

778
00:33:08,290 --> 00:33:12,470
What he was doing.

779
00:33:12,470 --> 00:33:14,950


780
00:33:14,950 --> 00:33:18,250


781
00:33:18,250 --> 00:33:20,799
Verified destination game

782
00:33:20,799 --> 00:33:22,750
that slows down ok and pe against a black

783
00:33:22,750 --> 00:33:24,970
list as it was not in the black list

784
00:33:24,970 --> 00:33:26,380
of the credential local eyes or

785
00:33:26,380 --> 00:33:29,679
whatever it said ok then that has

786
00:33:29,679 --> 00:33:31,419
happened to another component that is a proxy

787
00:33:31,419 --> 00:33:34,269
and the Arab proxy was trying  to date the

788
00:33:34,269 --> 00:33:35,919
same time when trying to date the

789
00:33:35,919 --> 00:33:39,690
url the dns responded with something else well

790
00:33:39,690 --> 00:33:43,360
with another unique private ip and date goes to

791
00:33:43,360 --> 00:33:46,000
what was clean private is clear

792
00:33:46,000 --> 00:33:49,799
decoupling between components

793
00:33:51,100 --> 00:33:52,900
I'm not reading the chat they imitate us if

794
00:33:52,900 --> 00:33:56,220
you ask but in the end I can be

795
00:33:57,290 --> 00:34:00,350
clear a little about how to protect themselves from

796
00:34:00,350 --> 00:34:01,970
these attacks for those on the

797
00:34:01,970 --> 00:34:05,049
other side of the game let's say

798
00:34:05,049 --> 00:34:10,770
cool list of rogers is the typical one

799
00:34:11,399 --> 00:34:12,929
suppose they have an app and that they are

800
00:34:12,929 --> 00:34:15,809
listening  the local fost if a

801
00:34:15,809 --> 00:34:19,559
rich person arrives is http the host is neither localhost

802
00:34:19,559 --> 00:34:23,250
nor 127 points 0 points 0.1 then

803
00:34:23,250 --> 00:34:25,649
deny it and voila and that's it and get in the

804
00:34:25,649 --> 00:34:27,359
ncr binding case it will be to attack

805
00:34:27,359 --> 00:34:29,809
dotcom or whatever else do

806
00:34:29,809 --> 00:34:34,159
this  It is quite implemented the truth

807
00:34:34,159 --> 00:34:36,559
in the case of also in the saar tomorrow

808
00:34:36,559 --> 00:34:38,539
localhost sometimes require or

809
00:34:38,539 --> 00:34:40,399
additional heather as I explained before with a

810
00:34:40,399 --> 00:34:41,960
value that is that they saved actions to

811
00:34:41,960 --> 00:34:45,949
the local system so a

812
00:34:45,949 --> 00:34:47,629
legitimate user will read that file and

813
00:34:47,629 --> 00:34:49,879
send a user  legitimate will not have

814
00:34:49,879 --> 00:34:51,609
access to the system

815
00:34:51,609 --> 00:34:54,168
another typical protection of random hoisting the

816
00:34:54,168 --> 00:34:55,280
port

817
00:34:55,280 --> 00:34:57,859
but of course it is more difficult to

818
00:34:57,859 --> 00:35:01,760
find it the same is possible as we saw

819
00:35:01,760 --> 00:35:03,440
[Music]

820
00:35:03,440 --> 00:35:06,500
you can also redesign the re  d to

821
00:35:06,500 --> 00:35:08,270
not always consider garlic within the

822
00:35:08,270 --> 00:35:10,280
network as friends let's say with many

823
00:35:10,280 --> 00:35:12,550
audi devices

824
00:35:12,550 --> 00:35:14,720
we can implement some kind of

825
00:35:14,720 --> 00:35:17,359
isolation caimta or something like that the other

826
00:35:17,359 --> 00:35:19,030
just see them when the site

827
00:35:19,030 --> 00:35:22,270
when he

828
00:35:22,800 --> 00:35:26,260
on the other side of the facade for the

829
00:35:26,260 --> 00:35:27,880
initial certificate  it does not coincide with the

830
00:35:27,880 --> 00:35:30,180
new

831
00:35:31,800 --> 00:35:35,880
other way would be that the ns server that

832
00:35:35,880 --> 00:35:37,440
uses the vulnerable component

833
00:35:37,440 --> 00:35:39,360
directly blog that any

834
00:35:39,360 --> 00:35:41,280
answer from the authoritative auto trees

835
00:35:41,280 --> 00:35:42,690
that contain a private ip

836
00:35:42,690 --> 00:35:44,150


837
00:35:44,150 --> 00:35:46,599
and

838
00:35:46,660 --> 00:35:48,819
in the case of the browsers

839
00:35:48,819 --> 00:35:51,000
there are some protections in an

840
00:35:51,000 --> 00:35:53,440
early 2000's time  they implemented

841
00:35:53,440 --> 00:35:55,640
nes spinning which was

842
00:35:55,640 --> 00:35:56,890
[Music]

843
00:35:56,890 --> 00:35:59,300
that is to say they use

844
00:35:59,300 --> 00:36:02,810
the first ip that they get well from the dns

845
00:36:02,810 --> 00:36:04,490
for all the subsequent rich

846
00:36:04,490 --> 00:36:06,680
so you cannot change the ip I am going to

847
00:36:06,680 --> 00:36:09,290
do it rebaine this did not upset us

848
00:36:09,290 --> 00:36:11,180
I understand I do not know if using in the

849
00:36:11,180 --> 00:36:13,550
blogs love us  it can cause problems the

850
00:36:13,550 --> 00:36:15,380
sip is constantly fine as it

851
00:36:15,380 --> 00:36:18,080
is cloud my little one now someone's

852
00:36:18,080 --> 00:36:19,760
in 15 minutes can  being someone

853
00:36:19,760 --> 00:36:21,620
else

854
00:36:21,620 --> 00:36:22,950
[Music]

855
00:36:22,950 --> 00:36:26,099
so I was not I understand it has been

856
00:36:26,099 --> 00:36:29,300
used this is not used anymore

857
00:36:29,800 --> 00:36:32,100
and well as a conclusion it is

858
00:36:32,100 --> 00:36:33,630
clearly

859
00:36:33,630 --> 00:36:36,130
you have revine and it is not dead even

860
00:36:36,130 --> 00:36:39,070
after 25 years new software

861
00:36:39,070 --> 00:36:40,420
new applications come out that

862
00:36:40,420 --> 00:36:42,820
make the same mistakes again one  and again

863
00:36:42,820 --> 00:36:44,510


864
00:36:44,510 --> 00:36:46,970
there seem to be no plans for that I

865
00:36:46,970 --> 00:36:50,470
do not know that there are plans to solve

866
00:36:50,470 --> 00:36:53,240
from the root, let's say without breaking various

867
00:36:53,240 --> 00:36:54,650
functionalities that are legitimate,

868
00:36:54,650 --> 00:36:58,220
let's say that of being bening, it takes advantage of

869
00:36:58,220 --> 00:37:00,030
things that

870
00:37:00,030 --> 00:37:02,060
what is how it works in itself

871
00:37:02,060 --> 00:37:05,280
we would say then for example if some

872
00:37:05,280 --> 00:37:08,550
servers for  Example 8.8 points 8 points

873
00:37:08,550 --> 00:37:11,010
8 which is the public being of google and

874
00:37:11,010 --> 00:37:12,810
begins to block the answers they have

875
00:37:12,810 --> 00:37:14,730
at local levels and surely they are

876
00:37:14,730 --> 00:37:17,100
breaking a lot of things and many times it

877
00:37:17,100 --> 00:37:18,930
is legitimate for a jorge to answer me with

878
00:37:18,930 --> 00:37:22,200
127 points 0 points 0.1 then no  They

879
00:37:22,200 --> 00:37:24,990
do it is a complicated issue to solve it

880
00:37:24,990 --> 00:37:29,270
from the root I do not think it is very simple

881
00:37:29,400 --> 00:37:32,100
an advice take the opportunity to look at it at bounty

882
00:37:32,100 --> 00:37:34,200
in my experience there is no  Many people who

883
00:37:34,200 --> 00:37:37,260
are behind these bugs if to a

884
00:37:37,260 --> 00:37:38,850
private program from half to 30 40

885
00:37:38,850 --> 00:37:42,810
people I calculate that 35 I do not know how many

886
00:37:42,810 --> 00:37:45,360
will be those who know the technique and those

887
00:37:45,360 --> 00:37:46,980
that every time our network can be

888
00:37:46,980 --> 00:37:48,810
exploited I do not know when they are but I do not believe

889
00:37:48,810 --> 00:37:50,580
that there are many in my experience they did not

890
00:37:50,580 --> 00:37:52,860
have almost duplicates so

891
00:37:52,860 --> 00:37:54,210
clearly not many people are

892
00:37:54,210 --> 00:37:56,910
looking at it even though it is recognized it is

893
00:37:56,910 --> 00:37:57,980
rare

894
00:37:57,980 --> 00:38:00,480
I have the idea that it is a subject

895
00:38:00,480 --> 00:38:03,060
that people think is difficult but

896
00:38:03,060 --> 00:38:05,670
all dublin is already  solved then

897
00:38:05,670 --> 00:38:07,589
it is not difficult

898
00:38:07,589 --> 00:38:09,299
and well there is still a lot to show the

899
00:38:09,299 --> 00:38:11,400
truth it would be nice to make a demo

900
00:38:11,400 --> 00:38:14,489
show all the peculiarities of the

901
00:38:14,489 --> 00:38:17,640
tl that I do not agree well or in

902
00:38:17,640 --> 00:38:19,079
many cases that you have to

903
00:38:19,079 --> 00:38:19,729
adjust

904
00:38:19,729 --> 00:38:22,589
the ctl for certain browsers according to the

905
00:38:22,589 --> 00:38:23,969
process they behave  in one way others

906
00:38:23,969 --> 00:38:25,630
in another

907
00:38:25,630 --> 00:38:27,849
the super interesting topic and the truth is

908
00:38:27,849 --> 00:38:30,359
that there is a lot to talk

909
00:38:30,359 --> 00:38:33,250
to him

910
00:38:33,250 --> 00:38:34,779
we do one

911
00:38:34,779 --> 00:38:37,299
some Sunday something like that we do a stream

912
00:38:37,299 --> 00:38:40,599
and we can spend 23 hours playing with

913
00:38:40,599 --> 00:38:43,829
this  topic write interesting facts

914
00:38:43,990 --> 00:38:46,710
anyway it haunts me over a long time

915
00:38:46,710 --> 00:38:50,530
thanks a lot for the space and we have

916
00:38:50,530 --> 00:38:52,119
a lot of time for questions so

917
00:38:52,119 --> 00:38:54,900
get creative

