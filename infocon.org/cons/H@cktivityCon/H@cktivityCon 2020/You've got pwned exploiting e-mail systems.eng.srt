1
00:00:01,150 --> 00:00:05,840
[Music]

2
00:00:06,480 --> 00:00:07,759
all right

3
00:00:07,759 --> 00:00:09,679
good afternoon everybody and welcome to

4
00:00:09,679 --> 00:00:11,360
my talk you've got pawned

5
00:00:11,360 --> 00:00:14,400
exploiting email systems my name is

6
00:00:14,400 --> 00:00:16,160
indy the googler i'll do a quick

7
00:00:16,160 --> 00:00:18,240
introduction of myself

8
00:00:18,240 --> 00:00:20,160
i come from this beautiful country in

9
00:00:20,160 --> 00:00:21,760
europe called belgium

10
00:00:21,760 --> 00:00:24,400
so excuse me for the accent i currently

11
00:00:24,400 --> 00:00:26,400
work as a community manager at book

12
00:00:26,400 --> 00:00:27,519
bounty platform

13
00:00:27,519 --> 00:00:30,720
integrity where i basically get to

14
00:00:30,720 --> 00:00:33,120
tweet on their twitter account and and

15
00:00:33,120 --> 00:00:36,079
be the voice of the hacker community

16
00:00:36,079 --> 00:00:38,800
i i really love live hacking events i've

17
00:00:38,800 --> 00:00:41,200
participated in quite a few of them

18
00:00:41,200 --> 00:00:43,440
mostly organized by hacker one so i i

19
00:00:43,440 --> 00:00:45,039
definitely have some experience with

20
00:00:45,039 --> 00:00:45,600
that

21
00:00:45,600 --> 00:00:48,879
and even in in 2018 i was lucky enough

22
00:00:48,879 --> 00:00:49,680
to win

23
00:00:49,680 --> 00:00:52,800
uh the their flagship event in vegas

24
00:00:52,800 --> 00:00:53,480
basically

25
00:00:53,480 --> 00:00:57,039
h1702 where i walked away with with the

26
00:00:57,039 --> 00:00:59,520
most valuable hacker awards so that was

27
00:00:59,520 --> 00:01:00,800
kind of nice

28
00:01:00,800 --> 00:01:02,800
but in all my research and even at these

29
00:01:02,800 --> 00:01:04,159
live hacking events

30
00:01:04,159 --> 00:01:06,720
one thing that always comes back are

31
00:01:06,720 --> 00:01:07,439
emails

32
00:01:07,439 --> 00:01:09,680
and i have made a fair amount of bug

33
00:01:09,680 --> 00:01:10,799
bounty

34
00:01:10,799 --> 00:01:14,000
exploiting or finding books in

35
00:01:14,000 --> 00:01:17,200
email systems or emails themselves and i

36
00:01:17,200 --> 00:01:19,200
hope to share some of this information

37
00:01:19,200 --> 00:01:20,880
with you today

38
00:01:20,880 --> 00:01:23,680
so first i'll go on and explain why

39
00:01:23,680 --> 00:01:26,799
exactly i do like emails that much

40
00:01:26,799 --> 00:01:29,040
first of all emails just contain a whole

41
00:01:29,040 --> 00:01:29,840
bunch of

42
00:01:29,840 --> 00:01:32,159
confidential information and if you

43
00:01:32,159 --> 00:01:34,799
don't believe me i challenge you to

44
00:01:34,799 --> 00:01:38,240
just go to your inbox and and open

45
00:01:38,240 --> 00:01:41,840
a few links that or emails that still

46
00:01:41,840 --> 00:01:43,439
make it to your inbox and not get

47
00:01:43,439 --> 00:01:44,079
filtered

48
00:01:44,079 --> 00:01:46,799
by the spam filter usually you know we

49
00:01:46,799 --> 00:01:48,240
send and receive quite a

50
00:01:48,240 --> 00:01:50,560
quite a lot of confidential information

51
00:01:50,560 --> 00:01:52,479
nobody likes their emails being breached

52
00:01:52,479 --> 00:01:54,079
so it's always a very interesting

53
00:01:54,079 --> 00:01:56,880
target for hackers also they contain

54
00:01:56,880 --> 00:01:58,320
certain links

55
00:01:58,320 --> 00:02:01,200
that allow hackers to break into systems

56
00:02:01,200 --> 00:02:01,920
such as

57
00:02:01,920 --> 00:02:05,040
password reset links and emails have

58
00:02:05,040 --> 00:02:07,280
been around for quite a while and and

59
00:02:07,280 --> 00:02:09,199
people just use it for all different

60
00:02:09,199 --> 00:02:11,120
purposes you have ticket trackers

61
00:02:11,120 --> 00:02:13,680
you have you know people just integrated

62
00:02:13,680 --> 00:02:15,599
with it within their system so it's it's

63
00:02:15,599 --> 00:02:16,480
kind of

64
00:02:16,480 --> 00:02:19,360
complex for such a simple thing which is

65
00:02:19,360 --> 00:02:19,840
just

66
00:02:19,840 --> 00:02:21,760
basically the essence of it is just

67
00:02:21,760 --> 00:02:24,000
delivering messages or attachments or

68
00:02:24,000 --> 00:02:24,959
files

69
00:02:24,959 --> 00:02:27,440
but there's there's a lot of of edge

70
00:02:27,440 --> 00:02:28,160
cases

71
00:02:28,160 --> 00:02:30,319
and implementation mistakes so that's

72
00:02:30,319 --> 00:02:32,000
why i really like it it's also pretty

73
00:02:32,000 --> 00:02:33,440
old standard and

74
00:02:33,440 --> 00:02:37,280
over the past few years the standard

75
00:02:37,280 --> 00:02:39,599
has changed a little bit and we made it

76
00:02:39,599 --> 00:02:41,599
a little bit more secure

77
00:02:41,599 --> 00:02:43,920
but yeah it's it's it's still very

78
00:02:43,920 --> 00:02:45,680
interesting to study for

79
00:02:45,680 --> 00:02:48,239
for for vulnerabilities and and also

80
00:02:48,239 --> 00:02:49,120
every every app

81
00:02:49,120 --> 00:02:52,319
uses it uh name a web app that don't use

82
00:02:52,319 --> 00:02:54,480
that doesn't use emails today i mean

83
00:02:54,480 --> 00:02:56,480
that's that's nearly impossible

84
00:02:56,480 --> 00:02:59,920
um so that that's why i uh

85
00:02:59,920 --> 00:03:01,680
use it as my main target when

86
00:03:01,680 --> 00:03:05,519
participating in bug bounty programs

87
00:03:05,519 --> 00:03:07,599
so let's take a look at we'll cover

88
00:03:07,599 --> 00:03:09,840
today first we'll talk about email

89
00:03:09,840 --> 00:03:12,239
addresses themselves

90
00:03:12,239 --> 00:03:15,120
and then we'll go into the email itself

91
00:03:15,120 --> 00:03:16,319
so basically the

92
00:03:16,319 --> 00:03:18,400
the email that you send out and then

93
00:03:18,400 --> 00:03:20,640
we'll discuss okay what can go wrong

94
00:03:20,640 --> 00:03:23,840
in in all around that which basically is

95
00:03:23,840 --> 00:03:26,480
uh for example spam systems

96
00:03:26,480 --> 00:03:29,440
autoresponders and all the systems and

97
00:03:29,440 --> 00:03:32,560
and behaviors really of of how emails

98
00:03:32,560 --> 00:03:35,280
interact with with systems will be

99
00:03:35,280 --> 00:03:37,440
covered in that last topic

100
00:03:37,440 --> 00:03:39,920
but let's take it one step at a time and

101
00:03:39,920 --> 00:03:44,238
and take a look at email addresses first

102
00:03:44,319 --> 00:03:47,120
for this particular uh part we're going

103
00:03:47,120 --> 00:03:47,599
to

104
00:03:47,599 --> 00:03:50,159
see what kind of interesting payloads

105
00:03:50,159 --> 00:03:51,920
and valid email addresses

106
00:03:51,920 --> 00:03:54,560
uh can contain and then we'll also see

107
00:03:54,560 --> 00:03:55,519
okay

108
00:03:55,519 --> 00:03:58,560
how does how how does the the web

109
00:03:58,560 --> 00:04:00,239
application how do they

110
00:04:00,239 --> 00:04:02,720
react to these payloads and how can we

111
00:04:02,720 --> 00:04:03,439
get our

112
00:04:03,439 --> 00:04:05,920
or interesting payloads into these web

113
00:04:05,920 --> 00:04:06,799
applications

114
00:04:06,799 --> 00:04:08,720
even though they don't support it right

115
00:04:08,720 --> 00:04:10,400
away

116
00:04:10,400 --> 00:04:15,280
so first part payload crafting

117
00:04:15,280 --> 00:04:18,798
so this is a very uh

118
00:04:18,798 --> 00:04:20,959
normal you know representation of an

119
00:04:20,959 --> 00:04:21,839
email address

120
00:04:21,839 --> 00:04:23,680
i mean that's kind of obvious you have a

121
00:04:23,680 --> 00:04:25,040
local part you have the

122
00:04:25,040 --> 00:04:27,440
ad symbol and then you have the domain

123
00:04:27,440 --> 00:04:28,880
but email addresses are

124
00:04:28,880 --> 00:04:31,759
much much more than that if you would

125
00:04:31,759 --> 00:04:33,919
look at the specification of course they

126
00:04:33,919 --> 00:04:35,919
can just contain latin letters

127
00:04:35,919 --> 00:04:39,840
they can contain digits dots but no

128
00:04:39,840 --> 00:04:41,919
two dots after each other and they don't

129
00:04:41,919 --> 00:04:44,720
like that so it's it's prohibited

130
00:04:44,720 --> 00:04:46,800
but i don't think many of you know that

131
00:04:46,800 --> 00:04:48,880
you can for example have an exclamation

132
00:04:48,880 --> 00:04:49,440
point

133
00:04:49,440 --> 00:04:53,440
a mark or like an ampersand for example

134
00:04:53,440 --> 00:04:56,560
in an email address which is perfectly

135
00:04:56,560 --> 00:04:57,759
valid and and

136
00:04:57,759 --> 00:05:00,639
most web applications that use a decent

137
00:05:00,639 --> 00:05:03,120
validator will actually accept that

138
00:05:03,120 --> 00:05:05,759
and also for for international purposes

139
00:05:05,759 --> 00:05:06,160
there's

140
00:05:06,160 --> 00:05:09,039
this more and more support for the more

141
00:05:09,039 --> 00:05:11,360
exotic looking email addresses which

142
00:05:11,360 --> 00:05:12,240
also

143
00:05:12,240 --> 00:05:14,960
i mean brings a couple of problems with

144
00:05:14,960 --> 00:05:16,080
it like

145
00:05:16,080 --> 00:05:18,400
homograph attacks but we won't cover

146
00:05:18,400 --> 00:05:19,600
that in this

147
00:05:19,600 --> 00:05:23,440
uh talk so what's interesting and

148
00:05:23,440 --> 00:05:24,000
something

149
00:05:24,000 --> 00:05:28,160
i found a couple of years ago and i

150
00:05:28,160 --> 00:05:28,960
didn't know it

151
00:05:28,960 --> 00:05:31,039
existed was that if you quote email

152
00:05:31,039 --> 00:05:32,160
addresses so

153
00:05:32,160 --> 00:05:34,479
basically put the local part between

154
00:05:34,479 --> 00:05:35,680
double quotes

155
00:05:35,680 --> 00:05:38,400
you can even add some more characters

156
00:05:38,400 --> 00:05:39,840
and

157
00:05:39,840 --> 00:05:41,600
the most interesting part is that you

158
00:05:41,600 --> 00:05:42,960
can also add

159
00:05:42,960 --> 00:05:45,680
for example a less than sign of a

160
00:05:45,680 --> 00:05:46,720
greater than sign

161
00:05:46,720 --> 00:05:49,600
which can be used to inject html so

162
00:05:49,600 --> 00:05:50,639
every

163
00:05:50,639 --> 00:05:52,960
email address that you see currently

164
00:05:52,960 --> 00:05:54,400
even that the double ad

165
00:05:54,400 --> 00:05:56,800
are actually completely valid email

166
00:05:56,800 --> 00:05:58,800
addresses you can even have a space in

167
00:05:58,800 --> 00:05:59,120
there

168
00:05:59,120 --> 00:06:01,360
and even an emoji i mean it's just it's

169
00:06:01,360 --> 00:06:03,199
just a valid email address if it's

170
00:06:03,199 --> 00:06:03,840
quoted

171
00:06:03,840 --> 00:06:06,000
and not a lot of people are aware of

172
00:06:06,000 --> 00:06:08,240
this

173
00:06:08,400 --> 00:06:11,759
then there's also the fact and i'm sure

174
00:06:11,759 --> 00:06:14,240
quite a lot of you use the basic version

175
00:06:14,240 --> 00:06:15,520
which is basically

176
00:06:15,520 --> 00:06:17,600
uh for gmail for example you have to

177
00:06:17,600 --> 00:06:21,199
append a plus sign and then you can

178
00:06:21,199 --> 00:06:24,160
write some gibberish are the the wild

179
00:06:24,160 --> 00:06:26,000
cards and the comments for example if

180
00:06:26,000 --> 00:06:27,600
you just say okay

181
00:06:27,600 --> 00:06:30,479
i want i have the spam email address for

182
00:06:30,479 --> 00:06:31,520
example and i

183
00:06:31,520 --> 00:06:33,600
i filter out everything but i still want

184
00:06:33,600 --> 00:06:35,440
it to come into my inbox

185
00:06:35,440 --> 00:06:38,160
you can just add something and then the

186
00:06:38,160 --> 00:06:40,400
final result will still be delivered to

187
00:06:40,400 --> 00:06:42,479
you but you'll be able to filter things

188
00:06:42,479 --> 00:06:44,080
out based off

189
00:06:44,080 --> 00:06:46,720
of this wildcard and then there's

190
00:06:46,720 --> 00:06:48,240
another standard and i've

191
00:06:48,240 --> 00:06:50,880
never ever seen this used in a real life

192
00:06:50,880 --> 00:06:52,479
scenario but it's still in the

193
00:06:52,479 --> 00:06:55,520
in the in the rfc uh you can include

194
00:06:55,520 --> 00:06:58,720
comments between parentheses so

195
00:06:58,720 --> 00:07:02,080
um you know just like javascript

196
00:07:02,080 --> 00:07:04,400
and html you can even have a comment in

197
00:07:04,400 --> 00:07:05,599
an email address

198
00:07:05,599 --> 00:07:08,720
uh email parsers or email

199
00:07:08,720 --> 00:07:10,639
processors will just end up ignoring it

200
00:07:10,639 --> 00:07:12,720
so the email will still get through

201
00:07:12,720 --> 00:07:15,280
but that's also quite a interesting

202
00:07:15,280 --> 00:07:17,120
effect or we'll we'll play with

203
00:07:17,120 --> 00:07:20,880
today um and then there's the domain

204
00:07:20,880 --> 00:07:21,520
part

205
00:07:21,520 --> 00:07:25,039
um which is a little bit more strict

206
00:07:25,039 --> 00:07:27,360
um obviously we also have the latin

207
00:07:27,360 --> 00:07:28,720
letters we have the

208
00:07:28,720 --> 00:07:31,680
digits hyphens but what's really

209
00:07:31,680 --> 00:07:33,440
interesting here is that you can have

210
00:07:33,440 --> 00:07:36,000
ip addresses i've never seen a

211
00:07:36,000 --> 00:07:36,880
successful

212
00:07:36,880 --> 00:07:39,360
email address to an ip address i would

213
00:07:39,360 --> 00:07:41,120
have to look into the standard

214
00:07:41,120 --> 00:07:43,120
but definitely for a very specific

215
00:07:43,120 --> 00:07:44,319
vulnerabilities

216
00:07:44,319 --> 00:07:46,400
if this is a valid email address i mean

217
00:07:46,400 --> 00:07:47,759
we can have some

218
00:07:47,759 --> 00:07:49,360
you know we can create some interesting

219
00:07:49,360 --> 00:07:51,120
ssrf payloads with that

220
00:07:51,120 --> 00:07:55,120
um so that's why i i've included those

221
00:07:55,120 --> 00:07:57,919
okay so let's let's start crafting with

222
00:07:57,919 --> 00:08:00,240
the information that we have now

223
00:08:00,240 --> 00:08:03,440
um and the orange is is basically it's

224
00:08:03,440 --> 00:08:04,319
not

225
00:08:04,319 --> 00:08:07,520
entirely valid according to the rfc as

226
00:08:07,520 --> 00:08:08,800
as these

227
00:08:08,800 --> 00:08:10,800
uh characters would have to be double

228
00:08:10,800 --> 00:08:12,000
quoted so so

229
00:08:12,000 --> 00:08:14,639
like here but still i found during my

230
00:08:14,639 --> 00:08:16,080
research that

231
00:08:16,080 --> 00:08:18,879
quite a lot of email address parsers

232
00:08:18,879 --> 00:08:19,520
would actually

233
00:08:19,520 --> 00:08:22,800
accept it so that's why i mention it

234
00:08:22,800 --> 00:08:25,599
for example this email address just test

235
00:08:25,599 --> 00:08:26,879
and then

236
00:08:26,879 --> 00:08:29,199
the wild card and then the parenthesis

237
00:08:29,199 --> 00:08:31,280
to indicate a comment and then just uh

238
00:08:31,280 --> 00:08:33,599
cross-site scripting payload there's a

239
00:08:33,599 --> 00:08:35,360
lot of website that would actually

240
00:08:35,360 --> 00:08:37,279
i think this is a valid email address

241
00:08:37,279 --> 00:08:39,440
and probably have you

242
00:08:39,440 --> 00:08:41,440
confirm it and display it in their

243
00:08:41,440 --> 00:08:42,640
application

244
00:08:42,640 --> 00:08:45,760
problem is if they don't expect an

245
00:08:45,760 --> 00:08:48,640
xss payload in an email address which is

246
00:08:48,640 --> 00:08:50,399
something that developers generally

247
00:08:50,399 --> 00:08:50,880
don't

248
00:08:50,880 --> 00:08:54,000
expect and they they don't properly

249
00:08:54,000 --> 00:08:56,320
sanitize it then it will result in

250
00:08:56,320 --> 00:08:57,920
cross-site scripting

251
00:08:57,920 --> 00:09:00,160
i've seen this happening quite a lot of

252
00:09:00,160 --> 00:09:02,160
public and and very big

253
00:09:02,160 --> 00:09:04,640
uh hacker one program so it's definitely

254
00:09:04,640 --> 00:09:07,760
a thing not a lot of people are aware of

255
00:09:07,760 --> 00:09:08,560
and

256
00:09:08,560 --> 00:09:11,600
this would be the the entirely valid

257
00:09:11,600 --> 00:09:14,800
uh version according to the rfc however

258
00:09:14,800 --> 00:09:17,120
i i've seen this working more than this

259
00:09:17,120 --> 00:09:18,160
part so it's it's

260
00:09:18,160 --> 00:09:20,880
it really comes down to the to the local

261
00:09:20,880 --> 00:09:22,000
implementation or

262
00:09:22,000 --> 00:09:25,360
the interpretation of the rfc

263
00:09:25,360 --> 00:09:27,600
uh by the way you can also put these

264
00:09:27,600 --> 00:09:29,279
things in the domain part because you

265
00:09:29,279 --> 00:09:31,360
can have comments in the domain part and

266
00:09:31,360 --> 00:09:32,320
then it will just

267
00:09:32,320 --> 00:09:34,399
ignore it and send it to your email

268
00:09:34,399 --> 00:09:36,240
address anyways

269
00:09:36,240 --> 00:09:38,959
now we're using script which is ideal

270
00:09:38,959 --> 00:09:41,760
for testing

271
00:09:42,320 --> 00:09:44,000
cross-site scripting for example within

272
00:09:44,000 --> 00:09:45,920
an application but i would always

273
00:09:45,920 --> 00:09:48,480
recommend you to try html in action for

274
00:09:48,480 --> 00:09:51,040
example i sent

275
00:09:51,040 --> 00:09:53,360
an email from this email address or to

276
00:09:53,360 --> 00:09:54,399
this email address

277
00:09:54,399 --> 00:09:57,600
and the email would actually

278
00:09:57,600 --> 00:10:00,320
use the h1 tag and render it so

279
00:10:00,320 --> 00:10:02,480
obviously just normal emails like who

280
00:10:02,480 --> 00:10:04,480
you would receive in gmail they won't be

281
00:10:04,480 --> 00:10:06,399
able to execute a script tag

282
00:10:06,399 --> 00:10:10,160
but you may have an html in action so

283
00:10:10,160 --> 00:10:12,720
don't only test for script text only

284
00:10:12,720 --> 00:10:13,600
just

285
00:10:13,600 --> 00:10:17,200
uh test for for generic html tags as

286
00:10:17,200 --> 00:10:19,040
well

287
00:10:19,040 --> 00:10:21,200
of course there's also templating action

288
00:10:21,200 --> 00:10:23,200
uh you know a lot of email addresses and

289
00:10:23,200 --> 00:10:23,680
you'll

290
00:10:23,680 --> 00:10:25,839
you'll have to check your own inbox

291
00:10:25,839 --> 00:10:27,600
either above or below

292
00:10:27,600 --> 00:10:29,519
and this could be of some because of

293
00:10:29,519 --> 00:10:31,440
some privacy or tracking region

294
00:10:31,440 --> 00:10:33,120
they will actually include the email

295
00:10:33,120 --> 00:10:34,880
address you've

296
00:10:34,880 --> 00:10:36,800
they've sent it to and if that contains

297
00:10:36,800 --> 00:10:38,720
a payload and they didn't properly

298
00:10:38,720 --> 00:10:42,079
execute it it can it can

299
00:10:42,079 --> 00:10:43,839
result in cross-site scripting or

300
00:10:43,839 --> 00:10:45,120
templating action

301
00:10:45,120 --> 00:10:47,040
and usually it's like a sentence this

302
00:10:47,040 --> 00:10:48,160
email was sent to

303
00:10:48,160 --> 00:10:49,839
blah blah blah it's usually in very

304
00:10:49,839 --> 00:10:52,240
small letters but always make sure to

305
00:10:52,240 --> 00:10:53,680
check that because if you can get a

306
00:10:53,680 --> 00:10:54,560
payload in that

307
00:10:54,560 --> 00:10:56,959
that would be interesting these are some

308
00:10:56,959 --> 00:10:58,560
example payloads that are

309
00:10:58,560 --> 00:11:01,839
that would also be valid um and

310
00:11:01,839 --> 00:11:03,920
for example uh if in case of a

311
00:11:03,920 --> 00:11:05,760
successful templating action you would

312
00:11:05,760 --> 00:11:07,120
see something like this

313
00:11:07,120 --> 00:11:09,279
which obviously obviously just rendered

314
00:11:09,279 --> 00:11:10,560
or

315
00:11:10,560 --> 00:11:13,760
executed this one

316
00:11:13,760 --> 00:11:17,200
so uh talking about that and this this

317
00:11:17,200 --> 00:11:19,200
is a while ago but i think it's still a

318
00:11:19,200 --> 00:11:22,000
quite a finnish story i i signed up for

319
00:11:22,000 --> 00:11:23,839
hacker one with with the following email

320
00:11:23,839 --> 00:11:24,560
address

321
00:11:24,560 --> 00:11:27,680
um and nothing happens

322
00:11:27,680 --> 00:11:29,440
so basically it was just sitting there

323
00:11:29,440 --> 00:11:32,000
in my account and i received all emails

324
00:11:32,000 --> 00:11:35,200
uh using this but it's since it's using

325
00:11:35,200 --> 00:11:36,959
a wildcard it would just

326
00:11:36,959 --> 00:11:39,200
come true so i didn't really feel the

327
00:11:39,200 --> 00:11:41,519
need to change it after testing it

328
00:11:41,519 --> 00:11:46,480
and then like months after i injected it

329
00:11:46,480 --> 00:11:50,480
i got an email from mikhil from hackeron

330
00:11:50,480 --> 00:11:53,920
the founder one of the founders and

331
00:11:53,920 --> 00:11:57,120
it was actually sent to indy.co

332
00:11:57,120 --> 00:12:00,240
quickly and then plus sign

333
00:12:00,240 --> 00:12:03,680
49 at gmail.com so i was like panicking

334
00:12:03,680 --> 00:12:05,760
and i was like yeah finally my

335
00:12:05,760 --> 00:12:08,959
my payload got executed i i was very

336
00:12:08,959 --> 00:12:11,040
excited then i thought okay i have

337
00:12:11,040 --> 00:12:12,320
something

338
00:12:12,320 --> 00:12:15,440
in a hacker one system rendering my my

339
00:12:15,440 --> 00:12:17,120
template payload so i was

340
00:12:17,120 --> 00:12:19,600
i was writing my report but then it

341
00:12:19,600 --> 00:12:20,959
turned out he was just

342
00:12:20,959 --> 00:12:23,040
probably looking to the records and

343
00:12:23,040 --> 00:12:24,160
sending some manual

344
00:12:24,160 --> 00:12:27,200
emails and he was just trolling me so so

345
00:12:27,200 --> 00:12:28,800
michael if you're watching this

346
00:12:28,800 --> 00:12:31,519
this still hurts uh so all nikhil did

347
00:12:31,519 --> 00:12:32,880
was just

348
00:12:32,880 --> 00:12:35,760
replace my email address and put a 49 it

349
00:12:35,760 --> 00:12:36,320
would just

350
00:12:36,320 --> 00:12:38,560
it would still come true and i would

351
00:12:38,560 --> 00:12:40,560
think i had a valid bug in hacker one

352
00:12:40,560 --> 00:12:40,959
but

353
00:12:40,959 --> 00:12:42,880
unfortunately it was just a joke by

354
00:12:42,880 --> 00:12:44,800
mikey

355
00:12:44,800 --> 00:12:46,560
um there's also sequining action

356
00:12:46,560 --> 00:12:48,639
obviously and this

357
00:12:48,639 --> 00:12:51,279
using this technique would actually also

358
00:12:51,279 --> 00:12:52,560
uncover some

359
00:12:52,560 --> 00:12:55,360
some tech some sql injections that's

360
00:12:55,360 --> 00:12:57,920
using normal black box testing just by

361
00:12:57,920 --> 00:12:58,560
putting some

362
00:12:58,560 --> 00:13:00,639
gibberish in the email or just by

363
00:13:00,639 --> 00:13:02,320
putting a non-valid

364
00:13:02,320 --> 00:13:05,440
email address containing a sql action

365
00:13:05,440 --> 00:13:07,120
payload in the email address

366
00:13:07,120 --> 00:13:09,600
um it it wouldn't be discovered uh

367
00:13:09,600 --> 00:13:10,480
because

368
00:13:10,480 --> 00:13:12,160
most of the times what happens is they

369
00:13:12,160 --> 00:13:13,760
check whether the email is valid

370
00:13:13,760 --> 00:13:16,320
first and then they execute a query and

371
00:13:16,320 --> 00:13:17,279
then

372
00:13:17,279 --> 00:13:20,240
i mean it's md5 that's it's just an

373
00:13:20,240 --> 00:13:21,440
example by the way it's

374
00:13:21,440 --> 00:13:23,760
but in the password here it wouldn't be

375
00:13:23,760 --> 00:13:25,760
vulnerable because it it gets hashed

376
00:13:25,760 --> 00:13:27,920
but the email would be as you can see

377
00:13:27,920 --> 00:13:30,240
you can just break out of the query and

378
00:13:30,240 --> 00:13:30,800
and

379
00:13:30,800 --> 00:13:33,120
add something yourself but in order to

380
00:13:33,120 --> 00:13:35,040
do that the email would have to be valid

381
00:13:35,040 --> 00:13:36,959
so if you would set the email address to

382
00:13:36,959 --> 00:13:38,880
this for example which is

383
00:13:38,880 --> 00:13:41,760
a valid email address and still valid

384
00:13:41,760 --> 00:13:44,079
for the sql query then it would look

385
00:13:44,079 --> 00:13:45,680
like

386
00:13:45,680 --> 00:13:49,839
there's like like that

387
00:13:50,160 --> 00:13:52,240
yeah okay so like that and obviously

388
00:13:52,240 --> 00:13:54,560
that's a valid ejected query and you

389
00:13:54,560 --> 00:13:56,720
would be able to set a password

390
00:13:56,720 --> 00:13:59,839
of another email address using uh

391
00:13:59,839 --> 00:14:02,160
this trick so that's always very

392
00:14:02,160 --> 00:14:04,399
interesting

393
00:14:04,399 --> 00:14:06,320
and then there's also i talked about

394
00:14:06,320 --> 00:14:08,399
this earlier but then there's also

395
00:14:08,399 --> 00:14:12,480
ssrf so you can in order to test this

396
00:14:12,480 --> 00:14:13,680
for example you can

397
00:14:13,680 --> 00:14:15,839
register with the burp collaborator

398
00:14:15,839 --> 00:14:16,959
email address

399
00:14:16,959 --> 00:14:19,680
and then look for http request obviously

400
00:14:19,680 --> 00:14:20,399
not for a

401
00:14:20,399 --> 00:14:23,199
smtp request because that's normal but

402
00:14:23,199 --> 00:14:24,160
if there's

403
00:14:24,160 --> 00:14:27,040
an http request and usually this happens

404
00:14:27,040 --> 00:14:27,760
because the

405
00:14:27,760 --> 00:14:30,480
application strike try to check whether

406
00:14:30,480 --> 00:14:34,000
the host is up for example

407
00:14:34,720 --> 00:14:37,920
it can result basically it's blind ssrf

408
00:14:37,920 --> 00:14:40,079
so then you can check whether you can

409
00:14:40,079 --> 00:14:42,320
redirect it or make it call internal

410
00:14:42,320 --> 00:14:44,560
resources for example

411
00:14:44,560 --> 00:14:47,120
so i mean every nearly every website has

412
00:14:47,120 --> 00:14:49,519
a register module and they will somehow

413
00:14:49,519 --> 00:14:51,920
try to contact or send an email to the

414
00:14:51,920 --> 00:14:54,320
email address you signed up with so it's

415
00:14:54,320 --> 00:14:55,600
definitely always

416
00:14:55,600 --> 00:14:58,399
something i check at least and then and

417
00:14:58,399 --> 00:14:59,680
i have to admit i

418
00:14:59,680 --> 00:15:03,040
haven't really encountered this

419
00:15:03,040 --> 00:15:05,920
a lot in the in the past but sometimes

420
00:15:05,920 --> 00:15:08,240
when you sign up and it does this

421
00:15:08,240 --> 00:15:11,199
this check to see whether it exists or

422
00:15:11,199 --> 00:15:11,680
not

423
00:15:11,680 --> 00:15:14,880
and you use an internal ip

424
00:15:14,880 --> 00:15:16,959
you'll get an error but when the

425
00:15:16,959 --> 00:15:18,880
internal ip does not exist

426
00:15:18,880 --> 00:15:21,040
and you'll you won't get an error if it

427
00:15:21,040 --> 00:15:22,079
does exist but

428
00:15:22,079 --> 00:15:26,399
then again it's it's a very rare case

429
00:15:26,399 --> 00:15:29,600
and then there's also

430
00:15:29,600 --> 00:15:32,000
and i think this is a quite an

431
00:15:32,000 --> 00:15:34,000
underrated vulnerability

432
00:15:34,000 --> 00:15:36,160
uh especially when it comes to the

433
00:15:36,160 --> 00:15:37,040
server side

434
00:15:37,040 --> 00:15:39,759
it's it's parameter pollution so

435
00:15:39,759 --> 00:15:41,759
basically you would include another

436
00:15:41,759 --> 00:15:42,959
parameter

437
00:15:42,959 --> 00:15:44,399
in your email address and this is a

438
00:15:44,399 --> 00:15:46,399
perfectly valid email address

439
00:15:46,399 --> 00:15:49,759
um and what would happen if

440
00:15:49,759 --> 00:15:52,720
is is if there's they're using a proxy

441
00:15:52,720 --> 00:15:53,440
or they're

442
00:15:53,440 --> 00:15:55,440
they're making a second request on the

443
00:15:55,440 --> 00:15:57,120
back end and they just

444
00:15:57,120 --> 00:15:59,759
include your email address somewhere in

445
00:15:59,759 --> 00:16:01,040
in another

446
00:16:01,040 --> 00:16:04,639
server site request then your email

447
00:16:04,639 --> 00:16:07,680
may end up being replaced by by this one

448
00:16:07,680 --> 00:16:09,040
so the email parameter

449
00:16:09,040 --> 00:16:11,279
basically gets overwritten and if you're

450
00:16:11,279 --> 00:16:12,320
lucky the

451
00:16:12,320 --> 00:16:14,720
the actual app that will process it will

452
00:16:14,720 --> 00:16:16,399
take the second value

453
00:16:16,399 --> 00:16:18,639
instead of the whole or or the first

454
00:16:18,639 --> 00:16:19,680
value

455
00:16:19,680 --> 00:16:21,440
so you would be able for example to

456
00:16:21,440 --> 00:16:23,759
retrieve data from from somebody else in

457
00:16:23,759 --> 00:16:24,959
this example

458
00:16:24,959 --> 00:16:27,680
if they would query the email the data

459
00:16:27,680 --> 00:16:29,519
by email address

460
00:16:29,519 --> 00:16:31,199
it's it's really hard to find and

461
00:16:31,199 --> 00:16:33,440
obviously it's a lot easier to encounter

462
00:16:33,440 --> 00:16:34,240
during

463
00:16:34,240 --> 00:16:36,079
white box assessments but it's

464
00:16:36,079 --> 00:16:37,440
definitely something you should be in

465
00:16:37,440 --> 00:16:39,440
the lookout for

466
00:16:39,440 --> 00:16:42,079
then there's also http or smtp header

467
00:16:42,079 --> 00:16:42,800
reaction

468
00:16:42,800 --> 00:16:46,320
uh also it it's quite like it

469
00:16:46,320 --> 00:16:49,199
it depends uh i i haven't seen this a

470
00:16:49,199 --> 00:16:51,199
lot i know how bilobax has done some

471
00:16:51,199 --> 00:16:52,639
research on it

472
00:16:52,639 --> 00:16:54,880
but basically this this also happens if

473
00:16:54,880 --> 00:16:56,560
you try to register with something and

474
00:16:56,560 --> 00:16:57,279
then it

475
00:16:57,279 --> 00:17:00,560
connects to or it connects to some smtp

476
00:17:00,560 --> 00:17:01,839
interface and

477
00:17:01,839 --> 00:17:05,199
you'll be able to inject some some

478
00:17:05,199 --> 00:17:07,919
additional comments or additional

479
00:17:07,919 --> 00:17:08,720
statements

480
00:17:08,720 --> 00:17:10,959
in the in the command by by just using a

481
00:17:10,959 --> 00:17:12,000
new line

482
00:17:12,000 --> 00:17:15,039
and then it gets executed i gotta say i

483
00:17:15,039 --> 00:17:16,799
haven't encountered this myself in the

484
00:17:16,799 --> 00:17:17,599
past but

485
00:17:17,599 --> 00:17:19,599
since it's a valid payload you should be

486
00:17:19,599 --> 00:17:21,359
looking out for it

487
00:17:21,359 --> 00:17:25,359
um so this this kind of sums it up

488
00:17:25,359 --> 00:17:28,319
these are the i'm sure there's more

489
00:17:28,319 --> 00:17:30,240
valid payload so if

490
00:17:30,240 --> 00:17:33,760
if you if you spot some some other uh

491
00:17:33,760 --> 00:17:35,919
email addresses that would also be valid

492
00:17:35,919 --> 00:17:36,960
payload for uh

493
00:17:36,960 --> 00:17:39,600
for traditional testing techniques make

494
00:17:39,600 --> 00:17:41,679
sure to put them in the comments below i

495
00:17:41,679 --> 00:17:42,720
would say

496
00:17:42,720 --> 00:17:46,320
um and then

497
00:17:46,320 --> 00:17:48,240
another and this is more business logic

498
00:17:48,240 --> 00:17:50,000
but another uh

499
00:17:50,000 --> 00:17:52,720
way i've seen this being abused is by

500
00:17:52,720 --> 00:17:54,960
using domain white lists

501
00:17:54,960 --> 00:17:57,360
and i put slack as an example here i

502
00:17:57,360 --> 00:17:59,280
gotta say that

503
00:17:59,280 --> 00:18:01,360
slack was not actually vulnerable but i

504
00:18:01,360 --> 00:18:02,480
know it's

505
00:18:02,480 --> 00:18:05,039
if there's one domain or company domain

506
00:18:05,039 --> 00:18:07,039
validator most of you would know it's

507
00:18:07,039 --> 00:18:08,880
actually this one so i'm referring to

508
00:18:08,880 --> 00:18:10,480
this one

509
00:18:10,480 --> 00:18:12,880
but as you can see down here it says

510
00:18:12,880 --> 00:18:14,080
okay if you have a

511
00:18:14,080 --> 00:18:16,000
synagogue book riot zerocopter integrity

512
00:18:16,000 --> 00:18:17,200
google blah blah

513
00:18:17,200 --> 00:18:19,039
email address you can just create an

514
00:18:19,039 --> 00:18:20,240
account

515
00:18:20,240 --> 00:18:23,679
um and obviously people don't that don't

516
00:18:23,679 --> 00:18:26,960
have it cannot join the slack workspace

517
00:18:26,960 --> 00:18:29,280
unless they're invited

518
00:18:29,280 --> 00:18:31,520
so if you would sign up you would get

519
00:18:31,520 --> 00:18:33,120
the drop down and it would look that

520
00:18:33,120 --> 00:18:34,160
like this

521
00:18:34,160 --> 00:18:37,360
so in some cases i've seen this once

522
00:18:37,360 --> 00:18:40,160
so i'm not sure if it's very common but

523
00:18:40,160 --> 00:18:42,799
in some cases what you could do

524
00:18:42,799 --> 00:18:45,440
is you would enter this valid perfectly

525
00:18:45,440 --> 00:18:46,240
valid

526
00:18:46,240 --> 00:18:49,280
email address and then

527
00:18:49,280 --> 00:18:52,000
if it accept accepts it and passes it to

528
00:18:52,000 --> 00:18:53,280
whatever service is

529
00:18:53,280 --> 00:18:56,000
sending the email addresses it might see

530
00:18:56,000 --> 00:18:58,080
the semicolon and it will

531
00:18:58,080 --> 00:19:00,480
you know most of these services will see

532
00:19:00,480 --> 00:19:03,120
a semicolon as okay i have to split this

533
00:19:03,120 --> 00:19:05,360
i have to send this to multiple people

534
00:19:05,360 --> 00:19:08,880
so the first uh email address or yeah

535
00:19:08,880 --> 00:19:10,160
in invaliding but i just would they

536
00:19:10,160 --> 00:19:12,320
would try to send it to is this one

537
00:19:12,320 --> 00:19:14,559
and then this is my inbox and then this

538
00:19:14,559 --> 00:19:16,400
is the third one they will try to send

539
00:19:16,400 --> 00:19:16,799
it to

540
00:19:16,799 --> 00:19:19,440
which includes the company domain so it

541
00:19:19,440 --> 00:19:21,520
makes it a valid company domain email

542
00:19:21,520 --> 00:19:22,320
address

543
00:19:22,320 --> 00:19:24,720
but the final email gets delivered to my

544
00:19:24,720 --> 00:19:25,520
inbox which

545
00:19:25,520 --> 00:19:27,360
obviously is not part of the company

546
00:19:27,360 --> 00:19:28,720
domain um

547
00:19:28,720 --> 00:19:31,760
so like i said slack was not vulnerable

548
00:19:31,760 --> 00:19:32,240
to this

549
00:19:32,240 --> 00:19:35,440
it's a theoretical example with at least

550
00:19:35,440 --> 00:19:38,000
one occurrence of it being exploited in

551
00:19:38,000 --> 00:19:39,520
the wild so it's

552
00:19:39,520 --> 00:19:41,679
also something if you see a mechanism

553
00:19:41,679 --> 00:19:43,360
like this make sure to test

554
00:19:43,360 --> 00:19:47,360
something like this and another very fun

555
00:19:47,360 --> 00:19:48,799
example of

556
00:19:48,799 --> 00:19:51,600
possible exploitation in the wild is you

557
00:19:51,600 --> 00:19:52,480
can send

558
00:19:52,480 --> 00:19:54,799
uh to to gmail if you have a gmail

559
00:19:54,799 --> 00:19:56,640
address you can just use the wildcard

560
00:19:56,640 --> 00:19:57,280
and send

561
00:19:57,280 --> 00:19:59,039
this string to your gmail address and it

562
00:19:59,039 --> 00:20:00,480
will actually render

563
00:20:00,480 --> 00:20:02,640
it will still work uh obviously it's not

564
00:20:02,640 --> 00:20:04,240
vulnerable to cross-site scripting

565
00:20:04,240 --> 00:20:06,000
otherwise the gmail team

566
00:20:06,000 --> 00:20:08,480
would have fixed it right away but it

567
00:20:08,480 --> 00:20:10,080
seems to be some weird

568
00:20:10,080 --> 00:20:13,200
gmail quirk i'm not sure who uses it or

569
00:20:13,200 --> 00:20:15,120
why it's there but i mean if you want to

570
00:20:15,120 --> 00:20:16,320
try it out it should

571
00:20:16,320 --> 00:20:21,120
still work if you're watching this video

572
00:20:21,120 --> 00:20:24,559
then i've obviously

573
00:20:24,559 --> 00:20:27,520
like gmail was i for a second i thought

574
00:20:27,520 --> 00:20:29,120
i had cross-site scripting there it was

575
00:20:29,120 --> 00:20:30,240
not the case

576
00:20:30,240 --> 00:20:32,880
but i tested some other email clients as

577
00:20:32,880 --> 00:20:33,440
well

578
00:20:33,440 --> 00:20:36,159
and they were actually vulnerable so i

579
00:20:36,159 --> 00:20:38,080
obviously i cannot name them in this

580
00:20:38,080 --> 00:20:39,760
presentation i didn't get disclosure

581
00:20:39,760 --> 00:20:40,960
permission

582
00:20:40,960 --> 00:20:44,159
but if you ever are testing

583
00:20:44,159 --> 00:20:46,400
an email client also make sure to test

584
00:20:46,400 --> 00:20:48,080
whether they properly escape

585
00:20:48,080 --> 00:20:51,840
email addresses themselves okay and then

586
00:20:51,840 --> 00:20:55,360
uh email validators so okay we have

587
00:20:55,360 --> 00:20:57,600
made all this creative and cool payloads

588
00:20:57,600 --> 00:20:58,640
but we still

589
00:20:58,640 --> 00:21:02,159
have to insert them somewhere in in

590
00:21:02,159 --> 00:21:04,159
in an application and most of them have

591
00:21:04,159 --> 00:21:06,480
a pretty strict email validator and even

592
00:21:06,480 --> 00:21:07,760
if your

593
00:21:07,760 --> 00:21:10,640
email is correct for the rfc it may not

594
00:21:10,640 --> 00:21:11,760
be correct for

595
00:21:11,760 --> 00:21:15,039
the web application so for example with

596
00:21:15,039 --> 00:21:15,600
facebook

597
00:21:15,600 --> 00:21:18,400
you can simply sign up with this it

598
00:21:18,400 --> 00:21:20,159
would give an error

599
00:21:20,159 --> 00:21:23,120
and i was testing gitlab they have a

600
00:21:23,120 --> 00:21:26,159
public hacker one program

601
00:21:26,159 --> 00:21:29,280
and i also tried to insert

602
00:21:29,280 --> 00:21:31,360
my email address uh with the crosshair

603
00:21:31,360 --> 00:21:33,200
scripting payload so i signed up with

604
00:21:33,200 --> 00:21:34,240
this one

605
00:21:34,240 --> 00:21:36,799
and luckily the username was available

606
00:21:36,799 --> 00:21:38,480
but i couldn't sign up with the email

607
00:21:38,480 --> 00:21:39,919
address

608
00:21:39,919 --> 00:21:41,840
so i took a step back and then i saw

609
00:21:41,840 --> 00:21:44,240
okay but you can also actually sign up

610
00:21:44,240 --> 00:21:46,799
and register with one of these services

611
00:21:46,799 --> 00:21:48,799
so if i can get this email address in

612
00:21:48,799 --> 00:21:50,400
one of these services

613
00:21:50,400 --> 00:21:52,640
it would still end up in my gitlab email

614
00:21:52,640 --> 00:21:53,840
account so

615
00:21:53,840 --> 00:21:57,280
that's so i made this table off of

616
00:21:57,280 --> 00:21:59,600
all services that would actually accept

617
00:21:59,600 --> 00:22:02,400
my email address that contained

618
00:22:02,400 --> 00:22:04,400
and cross-site scripting payload and was

619
00:22:04,400 --> 00:22:07,280
actually also valid according to the rfc

620
00:22:07,280 --> 00:22:09,679
so these services did nothing wrong

621
00:22:09,679 --> 00:22:11,919
really it was just gitlab that was not

622
00:22:11,919 --> 00:22:14,559
really prepared for it

623
00:22:14,559 --> 00:22:16,480
and i tried to sign up so basically this

624
00:22:16,480 --> 00:22:17,919
was the first

625
00:22:17,919 --> 00:22:21,760
case i tried i tried to sign up directly

626
00:22:21,760 --> 00:22:23,600
to gitlab with this email address didn't

627
00:22:23,600 --> 00:22:26,240
work then i tried to sign up

628
00:22:26,240 --> 00:22:29,919
with github and then once i had the

629
00:22:29,919 --> 00:22:31,520
github account linked to that email

630
00:22:31,520 --> 00:22:32,559
address i would sign

631
00:22:32,559 --> 00:22:35,840
up with gitlab for gitlab

632
00:22:35,840 --> 00:22:37,679
and it would actually contain my email

633
00:22:37,679 --> 00:22:40,000
address so that's what i did here

634
00:22:40,000 --> 00:22:42,960
as you can see this is me signing up

635
00:22:42,960 --> 00:22:43,440
with

636
00:22:43,440 --> 00:22:46,640
gitlab and then signing up with

637
00:22:46,640 --> 00:22:48,320
with github and then signing up with

638
00:22:48,320 --> 00:22:49,919
gitlab and then as

639
00:22:49,919 --> 00:22:52,480
as you can see my email address

640
00:22:52,480 --> 00:22:54,640
including the payload got added to my

641
00:22:54,640 --> 00:22:55,520
account

642
00:22:55,520 --> 00:22:57,440
uh so this wouldn't have been possible

643
00:22:57,440 --> 00:22:58,559
through the normal

644
00:22:58,559 --> 00:23:02,240
registration form but it was possible by

645
00:23:02,240 --> 00:23:05,360
abusing a single sign-on provider

646
00:23:05,360 --> 00:23:08,400
unfortunately uh gitlab has their things

647
00:23:08,400 --> 00:23:09,440
together and

648
00:23:09,440 --> 00:23:10,960
there was no cross-site scripting issue

649
00:23:10,960 --> 00:23:12,480
here so i had a cool

650
00:23:12,480 --> 00:23:14,880
email validation bypass i would say but

651
00:23:14,880 --> 00:23:16,240
i mean that's not something good to

652
00:23:16,240 --> 00:23:17,120
report

653
00:23:17,120 --> 00:23:21,120
so i started digging deeper and i

654
00:23:21,120 --> 00:23:23,360
eventually made it to account takeover

655
00:23:23,360 --> 00:23:24,159
unfortunately

656
00:23:24,159 --> 00:23:26,720
not on the main gitlab account but i'll

657
00:23:26,720 --> 00:23:27,679
dig in it

658
00:23:27,679 --> 00:23:30,400
into it right away so while i was doing

659
00:23:30,400 --> 00:23:33,280
research i also noticed that salesforce

660
00:23:33,280 --> 00:23:36,480
would actually also allow people to use

661
00:23:36,480 --> 00:23:38,080
their single sign-on

662
00:23:38,080 --> 00:23:40,960
if you had not verified your email

663
00:23:40,960 --> 00:23:43,120
address

664
00:23:43,120 --> 00:23:45,600
they it's documented and they assume

665
00:23:45,600 --> 00:23:47,520
that the defender should probably

666
00:23:47,520 --> 00:23:49,039
i mean they have a parameter to check

667
00:23:49,039 --> 00:23:51,039
whether the email is validated or not so

668
00:23:51,039 --> 00:23:51,600
it's not

669
00:23:51,600 --> 00:23:54,559
salesforce's fault but the vendors

670
00:23:54,559 --> 00:23:56,320
should do an extra check to make sure

671
00:23:56,320 --> 00:23:58,480
that

672
00:23:59,039 --> 00:24:00,799
the email address received is actually

673
00:24:00,799 --> 00:24:02,880
verified it's not salesforce job to do

674
00:24:02,880 --> 00:24:03,679
that is

675
00:24:03,679 --> 00:24:05,919
it's the the third party that integrates

676
00:24:05,919 --> 00:24:07,520
with them

677
00:24:07,520 --> 00:24:10,400
um so i basically tried the same trick

678
00:24:10,400 --> 00:24:11,039
and i

679
00:24:11,039 --> 00:24:13,520
i was wondering what would happen if i

680
00:24:13,520 --> 00:24:14,159
would

681
00:24:14,159 --> 00:24:16,320
try to sign up with the email address of

682
00:24:16,320 --> 00:24:18,880
a victim that was signed up with gitlab

683
00:24:18,880 --> 00:24:20,880
so this is linked to a valid gitlab

684
00:24:20,880 --> 00:24:22,080
account

685
00:24:22,080 --> 00:24:24,480
and then tried to obviously i couldn't

686
00:24:24,480 --> 00:24:25,600
sign up with this

687
00:24:25,600 --> 00:24:26,960
again it would just say okay this

688
00:24:26,960 --> 00:24:29,200
already exists but then

689
00:24:29,200 --> 00:24:30,720
sign this email address up with

690
00:24:30,720 --> 00:24:33,360
salesforce i didn't have to confirm it

691
00:24:33,360 --> 00:24:35,919
and then signing up with salesforce and

692
00:24:35,919 --> 00:24:36,880
if gitlab

693
00:24:36,880 --> 00:24:38,559
wouldn't do the extra check i was

694
00:24:38,559 --> 00:24:40,240
thinking okay what would happen maybe it

695
00:24:40,240 --> 00:24:42,240
would result in account takeover maybe

696
00:24:42,240 --> 00:24:44,640
the system would crash i'm not sure so

697
00:24:44,640 --> 00:24:46,559
the only way to find out is to actually

698
00:24:46,559 --> 00:24:47,840
try it

699
00:24:47,840 --> 00:24:50,640
and uh salesforce as you can see this is

700
00:24:50,640 --> 00:24:52,640
uh this is the respawns and they clearly

701
00:24:52,640 --> 00:24:54,400
have this field that says okay email

702
00:24:54,400 --> 00:24:55,279
verified and

703
00:24:55,279 --> 00:24:58,240
and all would depend on the fact whether

704
00:24:58,240 --> 00:25:00,080
gitlab would actually check that or not

705
00:25:00,080 --> 00:25:01,919
so it's an interesting edge case and

706
00:25:01,919 --> 00:25:02,559
usually

707
00:25:02,559 --> 00:25:05,600
in the case of edge cases developers

708
00:25:05,600 --> 00:25:07,760
tend to forget those so that's always

709
00:25:07,760 --> 00:25:09,360
interesting to search for security

710
00:25:09,360 --> 00:25:10,640
vulnerabilities

711
00:25:10,640 --> 00:25:14,000
so as you can see i just signed up for

712
00:25:14,000 --> 00:25:16,080
salesforce with an email that i can

713
00:25:16,080 --> 00:25:17,520
possibly have

714
00:25:17,520 --> 00:25:20,559
gitlab.com email and as you can see i

715
00:25:20,559 --> 00:25:22,240
actually also went in the api

716
00:25:22,240 --> 00:25:24,320
and my email verified flag was set to

717
00:25:24,320 --> 00:25:27,679
false so no fault on sales for society

718
00:25:27,679 --> 00:25:30,159
but then i tried to sign up with it and

719
00:25:30,159 --> 00:25:31,279
as you can see

720
00:25:31,279 --> 00:25:34,240
the account got created it didn't work

721
00:25:34,240 --> 00:25:35,600
however to

722
00:25:35,600 --> 00:25:38,240
hijack existing accounts what would

723
00:25:38,240 --> 00:25:39,360
happen if

724
00:25:39,360 --> 00:25:41,120
would be that it would just create a

725
00:25:41,120 --> 00:25:42,640
duplicate account with the same email

726
00:25:42,640 --> 00:25:43,520
address

727
00:25:43,520 --> 00:25:45,760
but then i noticed i was doing some some

728
00:25:45,760 --> 00:25:47,760
google docking and some recon

729
00:25:47,760 --> 00:25:50,480
then i noticed they had this forum that

730
00:25:50,480 --> 00:25:50,880
that

731
00:25:50,880 --> 00:25:53,440
would allow people to log in with gitlab

732
00:25:53,440 --> 00:25:55,200
so i was like okay if i can't

733
00:25:55,200 --> 00:25:57,440
take over gitlab accounts maybe i can do

734
00:25:57,440 --> 00:25:58,640
the second best thing

735
00:25:58,640 --> 00:26:01,679
and take over integrations

736
00:26:01,679 --> 00:26:04,480
with gitlab for example the forum with

737
00:26:04,480 --> 00:26:05,919
this button

738
00:26:05,919 --> 00:26:09,440
so let's do a quick recap obviously

739
00:26:09,440 --> 00:26:12,320
my victim example.org already already

740
00:26:12,320 --> 00:26:14,159
existed in gitlab i couldn't just

741
00:26:14,159 --> 00:26:16,720
sign up again and and log into their

742
00:26:16,720 --> 00:26:18,400
account that wouldn't work and would be

743
00:26:18,400 --> 00:26:20,159
a serious security vulnerability

744
00:26:20,159 --> 00:26:22,559
but i could obviously sign up for it

745
00:26:22,559 --> 00:26:23,440
using

746
00:26:23,440 --> 00:26:26,720
salesforce and then i could sign up

747
00:26:26,720 --> 00:26:29,279
with salesforce for gitlab and i would

748
00:26:29,279 --> 00:26:31,360
just have the same email address on a

749
00:26:31,360 --> 00:26:32,880
gitlab account but it wouldn't be the

750
00:26:32,880 --> 00:26:34,400
same account those would be

751
00:26:34,400 --> 00:26:36,240
two different accounts with the same

752
00:26:36,240 --> 00:26:39,760
email address but with a different id

753
00:26:39,760 --> 00:26:41,919
so then i noticed that they have this

754
00:26:41,919 --> 00:26:43,600
they had this discourse

755
00:26:43,600 --> 00:26:46,240
forum linked and you could use login

756
00:26:46,240 --> 00:26:47,200
with gitlab

757
00:26:47,200 --> 00:26:48,799
and the thing they would check was the

758
00:26:48,799 --> 00:26:51,600
email address but since this

759
00:26:51,600 --> 00:26:53,520
email address would equal this email

760
00:26:53,520 --> 00:26:56,000
address for the integration we would be

761
00:26:56,000 --> 00:26:57,200
the same person so

762
00:26:57,200 --> 00:27:01,600
i could hijack and take over any

763
00:27:01,600 --> 00:27:04,080
any integrated service with gitlab which

764
00:27:04,080 --> 00:27:06,799
is not as cool as main account takeover

765
00:27:06,799 --> 00:27:08,400
but it was still a very nice

766
00:27:08,400 --> 00:27:10,159
vulnerability

767
00:27:10,159 --> 00:27:12,320
and and this is this is an actual demo

768
00:27:12,320 --> 00:27:14,480
of it so i signed up with security and

769
00:27:14,480 --> 00:27:17,760
security at we are hackerone.com

770
00:27:17,760 --> 00:27:21,360
and then i also signed up with this but

771
00:27:21,360 --> 00:27:23,440
i didn't really confirm it i was just

772
00:27:23,440 --> 00:27:25,600
playing playing the attacker that

773
00:27:25,600 --> 00:27:27,840
doesn't have access to this email

774
00:27:27,840 --> 00:27:29,039
address

775
00:27:29,039 --> 00:27:30,559
and as you can see this is just my

776
00:27:30,559 --> 00:27:33,279
discourse forum account here is the

777
00:27:33,279 --> 00:27:36,720
my my avatar and as you can see this is

778
00:27:36,720 --> 00:27:38,480
the fake gitlab account and it's

779
00:27:38,480 --> 00:27:40,799
basically just the same email address

780
00:27:40,799 --> 00:27:43,039
and then if i would go to the forum i

781
00:27:43,039 --> 00:27:44,559
would say okay i want to sign in with

782
00:27:44,559 --> 00:27:45,360
gitlab

783
00:27:45,360 --> 00:27:47,039
i would say yeah just have my email

784
00:27:47,039 --> 00:27:48,720
address so you can check who i am

785
00:27:48,720 --> 00:27:51,120
but obviously i just took an unverified

786
00:27:51,120 --> 00:27:52,640
salesforce email address

787
00:27:52,640 --> 00:27:55,200
and here you go we were logged into the

788
00:27:55,200 --> 00:27:56,640
same account and as you can see the

789
00:27:56,640 --> 00:27:57,760
avatar is the same

790
00:27:57,760 --> 00:28:00,000
so it's in the same account and you

791
00:28:00,000 --> 00:28:00,799
could see

792
00:28:00,799 --> 00:28:03,600
for example the messengers or posts as

793
00:28:03,600 --> 00:28:05,600
that user

794
00:28:05,600 --> 00:28:08,799
it obviously got resolved as a critical

795
00:28:08,799 --> 00:28:11,840
and i do have to thank ron chen by the

796
00:28:11,840 --> 00:28:12,640
way because he

797
00:28:12,640 --> 00:28:15,760
initially found the way to bypass

798
00:28:15,760 --> 00:28:18,799
email validation through salesforce

799
00:28:18,799 --> 00:28:20,960
but what he didn't find is the the

800
00:28:20,960 --> 00:28:22,880
actual account takeover part so the next

801
00:28:22,880 --> 00:28:24,080
step that i took

802
00:28:24,080 --> 00:28:26,240
uh where i would go and see if there's

803
00:28:26,240 --> 00:28:28,799
any integrations and take those over

804
00:28:28,799 --> 00:28:31,760
so uh in in in discussion with the

805
00:28:31,760 --> 00:28:33,840
gitlab team we agreed to split

806
00:28:33,840 --> 00:28:36,000
the bounty even though my book was

807
00:28:36,000 --> 00:28:36,880
technically

808
00:28:36,880 --> 00:28:39,360
a duplicate we ended up splitting the

809
00:28:39,360 --> 00:28:40,320
bounty in the end

810
00:28:40,320 --> 00:28:42,480
but they did raise it thanks to me so it

811
00:28:42,480 --> 00:28:43,600
was a win-win for

812
00:28:43,600 --> 00:28:45,760
for both of us all right so now we

813
00:28:45,760 --> 00:28:47,679
covered the email addresses let's take a

814
00:28:47,679 --> 00:28:50,399
look at the emails themselves

815
00:28:50,399 --> 00:28:53,200
emails usually contain an email body and

816
00:28:53,200 --> 00:28:54,240
they may contain

817
00:28:54,240 --> 00:28:56,880
a file or an attachment attached to the

818
00:28:56,880 --> 00:28:57,760
email

819
00:28:57,760 --> 00:28:59,760
there are also email headers but we

820
00:28:59,760 --> 00:29:02,240
won't discuss them in this part

821
00:29:02,240 --> 00:29:04,000
so let's take a look at the email body

822
00:29:04,000 --> 00:29:06,000
first an evil body can be made up

823
00:29:06,000 --> 00:29:09,120
of text or html so

824
00:29:09,120 --> 00:29:10,960
or or you can both of them and you can

825
00:29:10,960 --> 00:29:12,799
have both of them in the same email

826
00:29:12,799 --> 00:29:14,559
and depending on the settings one of

827
00:29:14,559 --> 00:29:16,559
both will display

828
00:29:16,559 --> 00:29:19,200
you could try to insert javascript with

829
00:29:19,200 --> 00:29:20,399
most systems

830
00:29:20,399 --> 00:29:22,960
like an outlook or a gmail this will not

831
00:29:22,960 --> 00:29:23,679
run

832
00:29:23,679 --> 00:29:25,919
however i've discovered some legacy

833
00:29:25,919 --> 00:29:27,919
ticketing software that will actually

834
00:29:27,919 --> 00:29:29,600
that was vulnerable to blight cross-site

835
00:29:29,600 --> 00:29:30,480
scripting

836
00:29:30,480 --> 00:29:32,640
so i made just a list of public bug

837
00:29:32,640 --> 00:29:34,000
warranty programs

838
00:29:34,000 --> 00:29:36,080
sent cross-site scripting and blind

839
00:29:36,080 --> 00:29:38,000
cross-ice cryptic payload to their

840
00:29:38,000 --> 00:29:39,200
support

841
00:29:39,200 --> 00:29:41,679
desks and actually three of those

842
00:29:41,679 --> 00:29:42,880
actually fired

843
00:29:42,880 --> 00:29:46,320
so i i crafted it with the milgan api

844
00:29:46,320 --> 00:29:48,399
should you want to try it yourself but

845
00:29:48,399 --> 00:29:50,399
make sure to read all spamming

846
00:29:50,399 --> 00:29:51,760
guidelines and and

847
00:29:51,760 --> 00:29:55,760
to ask permission first if you do see

848
00:29:55,760 --> 00:29:58,799
that they use a custom or

849
00:29:58,799 --> 00:30:02,080
legacy supports software

850
00:30:02,080 --> 00:30:05,039
for example written in php this is the

851
00:30:05,039 --> 00:30:07,279
example that i stumbled upon a couple of

852
00:30:07,279 --> 00:30:08,399
years ago

853
00:30:08,399 --> 00:30:11,840
and their customer service ticketing

854
00:30:11,840 --> 00:30:12,799
system would just

855
00:30:12,799 --> 00:30:15,200
upload all attachments send over email

856
00:30:15,200 --> 00:30:15,840
to their

857
00:30:15,840 --> 00:30:20,720
server as executables so i would just

858
00:30:20,720 --> 00:30:23,120
write the normal support inquiry and

859
00:30:23,120 --> 00:30:25,440
then i would attach a php file

860
00:30:25,440 --> 00:30:27,279
containing a blind cross-site scripting

861
00:30:27,279 --> 00:30:29,520
payload and some

862
00:30:29,520 --> 00:30:33,679
php command for example phpinfo

863
00:30:33,679 --> 00:30:35,679
and then my cross-site scripting like my

864
00:30:35,679 --> 00:30:36,960
callback once the

865
00:30:36,960 --> 00:30:39,760
customer service agent opened it i would

866
00:30:39,760 --> 00:30:41,039
receive an email with

867
00:30:41,039 --> 00:30:44,880
the actual content or the actual result

868
00:30:44,880 --> 00:30:47,679
of whatever i executed so you can

869
00:30:47,679 --> 00:30:48,320
consider

870
00:30:48,320 --> 00:30:51,760
it as blind rce basically

871
00:30:51,760 --> 00:30:53,440
it's not really social engineering

872
00:30:53,440 --> 00:30:54,480
because there's a technical

873
00:30:54,480 --> 00:30:56,640
vulnerability involved

874
00:30:56,640 --> 00:30:59,440
and and i only found this one so it's

875
00:30:59,440 --> 00:31:00,240
it's quite

876
00:31:00,240 --> 00:31:03,120
it's quite rare and then last week this

877
00:31:03,120 --> 00:31:04,000
came out from

878
00:31:04,000 --> 00:31:07,120
from maxim s corbiak

879
00:31:07,120 --> 00:31:09,360
if i pronounce that right it's not my

880
00:31:09,360 --> 00:31:10,960
finding but it's definitely

881
00:31:10,960 --> 00:31:13,840
an interesting one and he noticed that

882
00:31:13,840 --> 00:31:14,240
some

883
00:31:14,240 --> 00:31:17,440
email parcels would actually for

884
00:31:17,440 --> 00:31:20,559
for certain purposes

885
00:31:20,559 --> 00:31:23,519
uh email templates would include local

886
00:31:23,519 --> 00:31:25,600
files for example a logo

887
00:31:25,600 --> 00:31:28,960
and then before sending it

888
00:31:28,960 --> 00:31:31,120
it would upload as an attachment and it

889
00:31:31,120 --> 00:31:32,320
would be rendered

890
00:31:32,320 --> 00:31:33,919
as an attachment here it would be

891
00:31:33,919 --> 00:31:36,240
referenced and then he found that if you

892
00:31:36,240 --> 00:31:38,559
would have a html in action in an email

893
00:31:38,559 --> 00:31:38,799
and

894
00:31:38,799 --> 00:31:42,159
just say okay i wanna for example etc

895
00:31:42,159 --> 00:31:43,600
password file

896
00:31:43,600 --> 00:31:45,360
then it would just dump it as an

897
00:31:45,360 --> 00:31:46,640
attachment and

898
00:31:46,640 --> 00:31:49,840
try to render it in the in the email

899
00:31:49,840 --> 00:31:52,960
so whenever you stumble upon an html

900
00:31:52,960 --> 00:31:56,399
action in a in an email always make sure

901
00:31:56,399 --> 00:31:58,840
to test that you may get

902
00:31:58,840 --> 00:32:01,679
lucky uh so that's it for for emails

903
00:32:01,679 --> 00:32:03,519
themselves that not really

904
00:32:03,519 --> 00:32:05,360
except for the body and the follow us

905
00:32:05,360 --> 00:32:06,720
there's not really too

906
00:32:06,720 --> 00:32:09,840
a lot of test tests over there

907
00:32:09,840 --> 00:32:12,159
and then there's also email mechanisms

908
00:32:12,159 --> 00:32:14,240
for example

909
00:32:14,240 --> 00:32:17,039
email mechanisms that's basically

910
00:32:17,039 --> 00:32:18,159
everything around

911
00:32:18,159 --> 00:32:21,200
emails those can be features of email uh

912
00:32:21,200 --> 00:32:23,840
clients but also ways people integrate

913
00:32:23,840 --> 00:32:26,480
email into their systems

914
00:32:26,480 --> 00:32:28,399
and obviously because i was testing

915
00:32:28,399 --> 00:32:30,159
these these things at the large

916
00:32:30,159 --> 00:32:33,120
large scale i did have some issues with

917
00:32:33,120 --> 00:32:34,559
bugbounty

918
00:32:34,559 --> 00:32:37,200
programs complaining about spam from my

919
00:32:37,200 --> 00:32:38,000
testing

920
00:32:38,000 --> 00:32:40,320
it's always a very thin line you do want

921
00:32:40,320 --> 00:32:41,120
to

922
00:32:41,120 --> 00:32:44,640
perform research that nobody did before

923
00:32:44,640 --> 00:32:45,679
you do want to

924
00:32:45,679 --> 00:32:48,080
go the extra mile but on the other hand

925
00:32:48,080 --> 00:32:49,760
you do want to

926
00:32:49,760 --> 00:32:51,760
keep the noise for the program as low as

927
00:32:51,760 --> 00:32:54,240
possible so i tried to stay under the

928
00:32:54,240 --> 00:32:56,799
radar unfortunately didn't always work

929
00:32:56,799 --> 00:32:58,320
out

930
00:32:58,320 --> 00:33:00,960
so whenever you send an email it either

931
00:33:00,960 --> 00:33:02,960
arrives or it bounces

932
00:33:02,960 --> 00:33:06,720
that's it and yeah

933
00:33:06,720 --> 00:33:09,840
so what i was telling you is

934
00:33:09,840 --> 00:33:12,399
if you if you're testing this please

935
00:33:12,399 --> 00:33:14,320
seek permission first

936
00:33:14,320 --> 00:33:17,279
reduce your noise and and also if you

937
00:33:17,279 --> 00:33:18,000
can

938
00:33:18,000 --> 00:33:20,559
just write what you're doing or use your

939
00:33:20,559 --> 00:33:22,480
your hacker one we are hacker one email

940
00:33:22,480 --> 00:33:24,640
addresses that make it easier to track

941
00:33:24,640 --> 00:33:26,399
you because you don't want to spend the

942
00:33:26,399 --> 00:33:27,519
customer service

943
00:33:27,519 --> 00:33:29,360
with all kinds of weird tickets because

944
00:33:29,360 --> 00:33:31,120
a lot of other people will be doing that

945
00:33:31,120 --> 00:33:31,600
as well

946
00:33:31,600 --> 00:33:34,080
so always make sure to reduce the noise

947
00:33:34,080 --> 00:33:36,000
and seek permission first

948
00:33:36,000 --> 00:33:39,840
so i was talking about the anti-spam

949
00:33:40,399 --> 00:33:42,799
functionalities so i try to stay under

950
00:33:42,799 --> 00:33:45,039
the radar and by doing so i

951
00:33:45,039 --> 00:33:49,120
i read this rfc about anti-spam measures

952
00:33:49,120 --> 00:33:51,360
people have been dealing with with spam

953
00:33:51,360 --> 00:33:52,640
for a long time and

954
00:33:52,640 --> 00:33:55,679
and this is something from the 90s that

955
00:33:55,679 --> 00:33:57,039
are already mentioned

956
00:33:57,039 --> 00:33:59,519
how you could unsubscribe for a list for

957
00:33:59,519 --> 00:34:00,480
example or

958
00:34:00,480 --> 00:34:03,120
or mention something as spam you could

959
00:34:03,120 --> 00:34:04,480
provide an email header

960
00:34:04,480 --> 00:34:07,679
with the url but every time i see a url

961
00:34:07,679 --> 00:34:11,199
and in a parameter it basically screams

962
00:34:11,199 --> 00:34:12,560
as a srf

963
00:34:12,560 --> 00:34:15,599
so i just put my own

964
00:34:15,599 --> 00:34:17,918
my own host in there in here and a ping

965
00:34:17,918 --> 00:34:19,679
back to my machine

966
00:34:19,679 --> 00:34:21,440
and then with permission of the bug

967
00:34:21,440 --> 00:34:23,359
bounty program i spammed one of their

968
00:34:23,359 --> 00:34:24,879
email addresses

969
00:34:24,879 --> 00:34:27,839
and i got an immediate ping back so what

970
00:34:27,839 --> 00:34:29,599
their system would do is

971
00:34:29,599 --> 00:34:33,119
once they've identified me as spam

972
00:34:33,119 --> 00:34:36,320
they would just ping my my

973
00:34:36,320 --> 00:34:39,440
my list in subscription email like

974
00:34:39,440 --> 00:34:42,960
sorry my list in subscription url here

975
00:34:42,960 --> 00:34:45,040
to make sure it would stop because in

976
00:34:45,040 --> 00:34:46,560
normal situation this would

977
00:34:46,560 --> 00:34:49,040
subscribe you for the list however in

978
00:34:49,040 --> 00:34:51,119
this case it was just as a ref and i

979
00:34:51,119 --> 00:34:52,239
could

980
00:34:52,239 --> 00:34:54,560
have them redirect to internal resources

981
00:34:54,560 --> 00:34:56,960
for example so they did fix that

982
00:34:56,960 --> 00:34:58,800
it was in a firewall solution so

983
00:34:58,800 --> 00:35:00,800
everything went automatically nobody had

984
00:35:00,800 --> 00:35:02,000
to press a button this

985
00:35:02,000 --> 00:35:05,520
spam just went automatically so that's

986
00:35:05,520 --> 00:35:08,160
i think it's it was a rare uh scenario

987
00:35:08,160 --> 00:35:10,480
but it was nevertheless a very cool one

988
00:35:10,480 --> 00:35:11,839
and it also got a

989
00:35:11,839 --> 00:35:15,040
pretty decent big bounty

990
00:35:15,040 --> 00:35:18,079
um so one thing i would advise you when

991
00:35:18,079 --> 00:35:19,839
testing stuff like this even if you have

992
00:35:19,839 --> 00:35:21,359
permission is to verify

993
00:35:21,359 --> 00:35:24,160
whether the email addresses you want to

994
00:35:24,160 --> 00:35:25,359
send emails to

995
00:35:25,359 --> 00:35:28,880
uh exist first so there's different ways

996
00:35:28,880 --> 00:35:30,079
to do that you can

997
00:35:30,079 --> 00:35:33,040
use this verify smtp comment and just

998
00:35:33,040 --> 00:35:34,960
google it if you want some more info on

999
00:35:34,960 --> 00:35:35,440
that

1000
00:35:35,440 --> 00:35:38,240
or you can to log in and then set the

1001
00:35:38,240 --> 00:35:39,839
rcpt

1002
00:35:39,839 --> 00:35:42,560
to then you can in some cases you will

1003
00:35:42,560 --> 00:35:43,760
be able to see

1004
00:35:43,760 --> 00:35:46,000
whether the email address exists or not

1005
00:35:46,000 --> 00:35:48,480
if you think this is too complicated

1006
00:35:48,480 --> 00:35:51,200
don't cry there are services to do this

1007
00:35:51,200 --> 00:35:53,359
for you and some of them are free so you

1008
00:35:53,359 --> 00:35:56,560
really have no excuse

1009
00:35:56,560 --> 00:35:59,680
so moving forwards what i always try to

1010
00:35:59,680 --> 00:36:01,680
do when examining uh

1011
00:36:01,680 --> 00:36:04,240
the email infrastructure of companies

1012
00:36:04,240 --> 00:36:05,839
try to figure out

1013
00:36:05,839 --> 00:36:09,280
what email addresses exist or what email

1014
00:36:09,280 --> 00:36:10,079
aliases

1015
00:36:10,079 --> 00:36:12,560
and what services they they've been

1016
00:36:12,560 --> 00:36:15,280
linked to and i call this email recall

1017
00:36:15,280 --> 00:36:18,079
and these are some pretty common ones uh

1018
00:36:18,079 --> 00:36:19,599
these are mostly ringling to

1019
00:36:19,599 --> 00:36:21,760
customer support then you have the more

1020
00:36:21,760 --> 00:36:23,119
ticketing systems and

1021
00:36:23,119 --> 00:36:25,520
and these are all kind of weird

1022
00:36:25,520 --> 00:36:26,480
integrations

1023
00:36:26,480 --> 00:36:30,800
usually custom for the company itself

1024
00:36:30,960 --> 00:36:35,520
so this is a very basic the example of

1025
00:36:35,520 --> 00:36:35,760
an

1026
00:36:35,760 --> 00:36:38,800
active hacker one program i just sent

1027
00:36:38,800 --> 00:36:41,520
an email to test mybox.com and i got

1028
00:36:41,520 --> 00:36:43,599
like this half a sentence back

1029
00:36:43,599 --> 00:36:45,520
and at first glance it doesn't really

1030
00:36:45,520 --> 00:36:46,960
reveal anything it's just

1031
00:36:46,960 --> 00:36:49,119
an auto reply and if you would look

1032
00:36:49,119 --> 00:36:50,800
deeper and open the email headers you

1033
00:36:50,800 --> 00:36:52,560
would see that it was sent from a

1034
00:36:52,560 --> 00:36:55,599
specific service so even if the original

1035
00:36:55,599 --> 00:36:57,760
email doesn't tell you a lot it's always

1036
00:36:57,760 --> 00:37:00,400
worth to see okay what kind of system

1037
00:37:00,400 --> 00:37:01,760
was this sent from and

1038
00:37:01,760 --> 00:37:03,680
and usually the email headers will or

1039
00:37:03,680 --> 00:37:05,680
the email original

1040
00:37:05,680 --> 00:37:08,720
message will will reveal that to you

1041
00:37:08,720 --> 00:37:11,040
there's also auto responders most of you

1042
00:37:11,040 --> 00:37:12,240
will know that from the

1043
00:37:12,240 --> 00:37:14,240
the classic oh i'm out of office

1044
00:37:14,240 --> 00:37:15,359
especially now

1045
00:37:15,359 --> 00:37:18,320
during uh during the holidays but what i

1046
00:37:18,320 --> 00:37:20,400
found was that there's two kinds of out

1047
00:37:20,400 --> 00:37:21,359
of office

1048
00:37:21,359 --> 00:37:24,880
uh one you have the the the one intended

1049
00:37:24,880 --> 00:37:27,599
internally and this may contain internal

1050
00:37:27,599 --> 00:37:28,160
email

1051
00:37:28,160 --> 00:37:30,880
like email addresses or or forms or or

1052
00:37:30,880 --> 00:37:32,000
whatever and just

1053
00:37:32,000 --> 00:37:34,320
trying to help your colleagues and in

1054
00:37:34,320 --> 00:37:35,200
the other one

1055
00:37:35,200 --> 00:37:38,320
in the other instance you want to um

1056
00:37:38,320 --> 00:37:40,480
send a message to people outside of your

1057
00:37:40,480 --> 00:37:42,480
organization and say okay i'm not

1058
00:37:42,480 --> 00:37:43,520
available

1059
00:37:43,520 --> 00:37:46,720
but i'll i'll handle your your request

1060
00:37:46,720 --> 00:37:49,520
after i'm back so you won't reveal as

1061
00:37:49,520 --> 00:37:51,200
much info as you would to your

1062
00:37:51,200 --> 00:37:52,720
colleagues

1063
00:37:52,720 --> 00:37:54,800
in this case for example but just an

1064
00:37:54,800 --> 00:37:56,320
example it would

1065
00:37:56,320 --> 00:37:59,920
give away a password but how does this

1066
00:37:59,920 --> 00:38:00,800
work

1067
00:38:00,800 --> 00:38:03,440
so basically it's kind of simple you

1068
00:38:03,440 --> 00:38:04,240
would send

1069
00:38:04,240 --> 00:38:06,320
an email address and then the server

1070
00:38:06,320 --> 00:38:07,599
would say okay is this

1071
00:38:07,599 --> 00:38:10,400
actually originating from the company

1072
00:38:10,400 --> 00:38:11,200
yes or no

1073
00:38:11,200 --> 00:38:13,599
and if you're not from the company you

1074
00:38:13,599 --> 00:38:14,880
would get the default

1075
00:38:14,880 --> 00:38:18,320
response and then i noticed that if

1076
00:38:18,320 --> 00:38:20,800
you could also set the reply to header

1077
00:38:20,800 --> 00:38:21,520
uh and

1078
00:38:21,520 --> 00:38:23,839
and you could just have it reply back to

1079
00:38:23,839 --> 00:38:24,800
whoever you want

1080
00:38:24,800 --> 00:38:27,200
by specifying somebody else's your reply

1081
00:38:27,200 --> 00:38:28,640
to you don't really need

1082
00:38:28,640 --> 00:38:30,800
to own that email address nor has have

1083
00:38:30,800 --> 00:38:33,040
access to it

1084
00:38:33,040 --> 00:38:35,920
and i i figured that some of these

1085
00:38:35,920 --> 00:38:37,359
installations would not

1086
00:38:37,359 --> 00:38:39,680
check the from email address to see if

1087
00:38:39,680 --> 00:38:41,760
it belongs to company.com

1088
00:38:41,760 --> 00:38:44,079
um but no they would check the from

1089
00:38:44,079 --> 00:38:45,280
email address i'm sorry

1090
00:38:45,280 --> 00:38:47,359
but they they would still reply to the

1091
00:38:47,359 --> 00:38:48,400
reply to

1092
00:38:48,400 --> 00:38:50,160
so what i would do is i would spoof the

1093
00:38:50,160 --> 00:38:51,440
email and make it

1094
00:38:51,440 --> 00:38:54,640
appear to come from company.com and then

1095
00:38:54,640 --> 00:38:56,560
once it reaches the server you would see

1096
00:38:56,560 --> 00:38:56,960
okay

1097
00:38:56,960 --> 00:38:59,680
this comes from company.com it's valid

1098
00:38:59,680 --> 00:39:01,119
and then it would reply

1099
00:39:01,119 --> 00:39:04,160
to my own email address which is an

1100
00:39:04,160 --> 00:39:05,200
email address on the

1101
00:39:05,200 --> 00:39:07,440
inbox obviously that i can access so i

1102
00:39:07,440 --> 00:39:08,960
would be able to exfiltrate the

1103
00:39:08,960 --> 00:39:10,720
passwords

1104
00:39:10,720 --> 00:39:13,280
this is an actual example i got from one

1105
00:39:13,280 --> 00:39:15,440
of my big bounty assessments

1106
00:39:15,440 --> 00:39:18,079
obviously heavily rejected then there's

1107
00:39:18,079 --> 00:39:20,560
also email bounces which are never fun

1108
00:39:20,560 --> 00:39:23,440
unless you can exploit them of course so

1109
00:39:23,440 --> 00:39:25,359
a couple of years ago i found a bug in

1110
00:39:25,359 --> 00:39:27,760
google docs by accident i just found a

1111
00:39:27,760 --> 00:39:28,000
link

1112
00:39:28,000 --> 00:39:30,320
to google doc somewhere in the github

1113
00:39:30,320 --> 00:39:31,760
repository

1114
00:39:31,760 --> 00:39:34,160
and i just press the request access

1115
00:39:34,160 --> 00:39:35,359
button

1116
00:39:35,359 --> 00:39:37,440
and basically what would happen whenever

1117
00:39:37,440 --> 00:39:38,720
you press it

1118
00:39:38,720 --> 00:39:42,240
is google itself would send an email

1119
00:39:42,240 --> 00:39:43,680
from your account

1120
00:39:43,680 --> 00:39:46,800
to the owner's account so originating

1121
00:39:46,800 --> 00:39:49,040
for your email from your email address

1122
00:39:49,040 --> 00:39:50,800
and it would contain the link to the

1123
00:39:50,800 --> 00:39:53,599
document the title

1124
00:39:53,599 --> 00:39:56,480
and and stuff like that but in my case

1125
00:39:56,480 --> 00:39:58,560
the recipient's inbox was full

1126
00:39:58,560 --> 00:40:01,599
and because the email originated from me

1127
00:40:01,599 --> 00:40:03,280
it would just bounce back to me because

1128
00:40:03,280 --> 00:40:06,400
the system was thinking i sent the email

1129
00:40:06,400 --> 00:40:09,599
so the recipient's inbox was full and i

1130
00:40:09,599 --> 00:40:10,000
found

1131
00:40:10,000 --> 00:40:12,960
out about the owner of this document but

1132
00:40:12,960 --> 00:40:15,040
also i saw the title of the document

1133
00:40:15,040 --> 00:40:17,680
and the link in the original forwarded

1134
00:40:17,680 --> 00:40:18,480
message

1135
00:40:18,480 --> 00:40:20,400
this was information i would otherwise

1136
00:40:20,400 --> 00:40:22,079
not have access to

1137
00:40:22,079 --> 00:40:24,480
obviously i just got lucky because you

1138
00:40:24,480 --> 00:40:27,119
can't really expect somebody's inbox

1139
00:40:27,119 --> 00:40:29,839
uh being fault you really can't control

1140
00:40:29,839 --> 00:40:30,400
it

1141
00:40:30,400 --> 00:40:32,160
and this was the moment that i was

1142
00:40:32,160 --> 00:40:34,160
thinking okay how can we make sure a

1143
00:40:34,160 --> 00:40:36,160
bounce like this happens

1144
00:40:36,160 --> 00:40:39,440
without having control over the the

1145
00:40:39,440 --> 00:40:43,040
status of the recipient's inbox

1146
00:40:43,040 --> 00:40:46,319
then i found out about a dmarc policy

1147
00:40:46,319 --> 00:40:49,680
which would basically evaluate your spf

1148
00:40:49,680 --> 00:40:52,319
or dkim records which would basically

1149
00:40:52,319 --> 00:40:53,599
ensure that

1150
00:40:53,599 --> 00:40:56,880
an email is authorized and and is

1151
00:40:56,880 --> 00:40:59,440
is permitted to be sent from your your

1152
00:40:59,440 --> 00:41:00,319
domain

1153
00:41:00,319 --> 00:41:02,079
and this is basically a policy that

1154
00:41:02,079 --> 00:41:04,160
would define what would happen

1155
00:41:04,160 --> 00:41:06,720
if one of these policies would fail uh

1156
00:41:06,720 --> 00:41:07,920
it can be rejected

1157
00:41:07,920 --> 00:41:10,960
it can be accepted anyways or be deleted

1158
00:41:10,960 --> 00:41:12,560
or guaranteed or

1159
00:41:12,560 --> 00:41:15,040
or you know whatever you you get to

1160
00:41:15,040 --> 00:41:17,119
decide what happens here

1161
00:41:17,119 --> 00:41:19,520
so i would set it to always bounce and

1162
00:41:19,520 --> 00:41:21,119
in order to do that

1163
00:41:21,119 --> 00:41:23,760
i would uh just say okay reject

1164
00:41:23,760 --> 00:41:24,560
everything

1165
00:41:24,560 --> 00:41:27,280
make sure to send a report to this email

1166
00:41:27,280 --> 00:41:29,280
address so i can read it afterwards and

1167
00:41:29,280 --> 00:41:30,079
then have a

1168
00:41:30,079 --> 00:41:32,800
do this for 100 of the cases this is

1169
00:41:32,800 --> 00:41:33,839
basically the way

1170
00:41:33,839 --> 00:41:37,200
to make sure all the the third parties

1171
00:41:37,200 --> 00:41:38,880
or the googles or whatever whatever

1172
00:41:38,880 --> 00:41:40,800
application that tries to forward an

1173
00:41:40,800 --> 00:41:41,520
email

1174
00:41:41,520 --> 00:41:43,839
uh originating from your domain would

1175
00:41:43,839 --> 00:41:45,440
just send whatever it would

1176
00:41:45,440 --> 00:41:48,079
try to send back to you okay so this was

1177
00:41:48,079 --> 00:41:49,680
an example of an email

1178
00:41:49,680 --> 00:41:52,640
forwarder and if in case you're

1179
00:41:52,640 --> 00:41:53,599
wondering

1180
00:41:53,599 --> 00:41:56,240
if there's any other uses for it or any

1181
00:41:56,240 --> 00:41:57,920
other kind of forwarders

1182
00:41:57,920 --> 00:42:00,960
except for google drive for example in

1183
00:42:00,960 --> 00:42:02,000
the wild that you can

1184
00:42:02,000 --> 00:42:04,240
exploit well there are and maybe at

1185
00:42:04,240 --> 00:42:07,359
places you won't expect

1186
00:42:07,359 --> 00:42:11,680
one example i came across is ransomware

1187
00:42:11,680 --> 00:42:13,440
sometimes when you get infected by

1188
00:42:13,440 --> 00:42:15,839
ransomware the criminals will leave an

1189
00:42:15,839 --> 00:42:17,200
email address

1190
00:42:17,200 --> 00:42:20,160
for you to ask questions to and what

1191
00:42:20,160 --> 00:42:20,800
will happen

1192
00:42:20,800 --> 00:42:23,520
sometimes is that all incoming emails

1193
00:42:23,520 --> 00:42:24,480
will automatically

1194
00:42:24,480 --> 00:42:26,800
automatically be forwarded to another

1195
00:42:26,800 --> 00:42:28,079
email address

1196
00:42:28,079 --> 00:42:30,160
sometimes linked to the attackers

1197
00:42:30,160 --> 00:42:31,760
themselves

1198
00:42:31,760 --> 00:42:33,920
obviously you can you can't tell what

1199
00:42:33,920 --> 00:42:36,240
email address this is going to just by

1200
00:42:36,240 --> 00:42:38,640
sending an email to it unless it bounces

1201
00:42:38,640 --> 00:42:40,720
back using our technique

1202
00:42:40,720 --> 00:42:44,480
um so what i did was i would

1203
00:42:44,480 --> 00:42:48,319
send them an email address from an email

1204
00:42:48,319 --> 00:42:51,359
domain day that was prohibited to

1205
00:42:51,359 --> 00:42:54,000
be forwarded so their forward would try

1206
00:42:54,000 --> 00:42:54,720
to

1207
00:42:54,720 --> 00:42:56,800
forward it to their original email

1208
00:42:56,800 --> 00:42:58,640
address in my case it was a gmail

1209
00:42:58,640 --> 00:42:59,359
address

1210
00:42:59,359 --> 00:43:01,920
and i would receive this response back

1211
00:43:01,920 --> 00:43:03,520
so like you can see here

1212
00:43:03,520 --> 00:43:06,480
the full gmail address would be revealed

1213
00:43:06,480 --> 00:43:07,359
in the bounds

1214
00:43:07,359 --> 00:43:09,440
back and the best thing is that the

1215
00:43:09,440 --> 00:43:10,560
attackers would

1216
00:43:10,560 --> 00:43:12,240
not notice anything because they

1217
00:43:12,240 --> 00:43:13,920
wouldn't even receive

1218
00:43:13,920 --> 00:43:17,119
my my email and i would still unmask

1219
00:43:17,119 --> 00:43:20,480
their original email address

1220
00:43:20,480 --> 00:43:23,839
another way forwarders are sometimes

1221
00:43:23,839 --> 00:43:24,560
used is

1222
00:43:24,560 --> 00:43:26,960
are in bounty platforms for example

1223
00:43:26,960 --> 00:43:29,280
integrity hacker one book route i'll use

1224
00:43:29,280 --> 00:43:30,560
email forwarders

1225
00:43:30,560 --> 00:43:34,000
to make it more easy for their hackers

1226
00:43:34,000 --> 00:43:36,400
to sign up somewhere and you know just

1227
00:43:36,400 --> 00:43:38,240
keep better track and what would happen

1228
00:43:38,240 --> 00:43:40,000
if you sign up somewhere is

1229
00:43:40,000 --> 00:43:43,520
this would just forward whatever

1230
00:43:43,520 --> 00:43:45,599
you sent to it to your hacker one or

1231
00:43:45,599 --> 00:43:48,000
integrity or book route associated email

1232
00:43:48,000 --> 00:43:49,440
address

1233
00:43:49,440 --> 00:43:52,240
and i tried this technique with this so

1234
00:43:52,240 --> 00:43:53,040
i tried

1235
00:43:53,040 --> 00:43:56,480
to send an email to my integrity dot

1236
00:43:56,480 --> 00:44:00,079
me email address so my alias using a

1237
00:44:00,079 --> 00:44:00,720
domain

1238
00:44:00,720 --> 00:44:04,240
that was intended to bounce everything

1239
00:44:04,240 --> 00:44:05,040
back

1240
00:44:05,040 --> 00:44:08,000
and i noticed i could actually reveal

1241
00:44:08,000 --> 00:44:10,480
everybody's email address just by

1242
00:44:10,480 --> 00:44:12,480
sending there an email at their

1243
00:44:12,480 --> 00:44:14,720
integrity dot me email address and have

1244
00:44:14,720 --> 00:44:16,319
it bounce back right away

1245
00:44:16,319 --> 00:44:18,560
and then one last case i've seen this

1246
00:44:18,560 --> 00:44:21,359
work is in multi-tenant environments and

1247
00:44:21,359 --> 00:44:22,400
that was actually

1248
00:44:22,400 --> 00:44:25,119
kind of interesting because it resulted

1249
00:44:25,119 --> 00:44:26,720
in account takeover

1250
00:44:26,720 --> 00:44:28,560
so sometimes what will happen is you

1251
00:44:28,560 --> 00:44:30,319
have this sas app

1252
00:44:30,319 --> 00:44:32,640
and you can add it to your own domain

1253
00:44:32,640 --> 00:44:34,000
run it on your domain

1254
00:44:34,000 --> 00:44:36,319
but the user management would still be

1255
00:44:36,319 --> 00:44:37,119
kind of

1256
00:44:37,119 --> 00:44:39,440
centralized so you can for example we

1257
00:44:39,440 --> 00:44:40,560
have two users

1258
00:44:40,560 --> 00:44:43,359
and they have their workspace but john

1259
00:44:43,359 --> 00:44:44,000
could

1260
00:44:44,000 --> 00:44:46,160
invite alice to their tenant and with

1261
00:44:46,160 --> 00:44:49,040
the same account she would have access

1262
00:44:49,040 --> 00:44:51,680
um so if john would trigger a password

1263
00:44:51,680 --> 00:44:53,200
to reset mail it would be

1264
00:44:53,200 --> 00:44:56,640
sent from john.io because the sas app

1265
00:44:56,640 --> 00:44:58,160
has permission to send from

1266
00:44:58,160 --> 00:45:01,200
john.io and the email would be

1267
00:45:01,200 --> 00:45:04,240
uh you know being sent to john.io

1268
00:45:04,240 --> 00:45:07,119
nicely branded now imagine that john

1269
00:45:07,119 --> 00:45:07,520
adds

1270
00:45:07,520 --> 00:45:10,480
alice to their environment and resets

1271
00:45:10,480 --> 00:45:12,319
the password for alice

1272
00:45:12,319 --> 00:45:15,520
but just at that moment john adapts

1273
00:45:15,520 --> 00:45:18,400
the dmarc settings and make sure that

1274
00:45:18,400 --> 00:45:19,040
the

1275
00:45:19,040 --> 00:45:22,240
the validation fails and emails gets

1276
00:45:22,240 --> 00:45:24,800
bounced it gets rejected

1277
00:45:24,800 --> 00:45:27,599
then john dot io will try to send

1278
00:45:27,599 --> 00:45:30,079
alice's password reset email

1279
00:45:30,079 --> 00:45:31,839
that would actually also be valid for

1280
00:45:31,839 --> 00:45:33,280
her own tenants

1281
00:45:33,280 --> 00:45:35,680
so she sends it but of course we have a

1282
00:45:35,680 --> 00:45:36,640
strict

1283
00:45:36,640 --> 00:45:38,720
the mark policy and it will bounce back

1284
00:45:38,720 --> 00:45:40,400
because the sales up is not allowed to

1285
00:45:40,400 --> 00:45:42,400
send from touch on dot io

1286
00:45:42,400 --> 00:45:45,200
and everything works but still jones

1287
00:45:45,200 --> 00:45:46,079
ends up

1288
00:45:46,079 --> 00:45:49,280
receiving alice's access token in a real

1289
00:45:49,280 --> 00:45:51,359
life scenario and this is a screenshot

1290
00:45:51,359 --> 00:45:52,880
i took from an actual bug bounty

1291
00:45:52,880 --> 00:45:54,480
submission it looks

1292
00:45:54,480 --> 00:45:56,640
like this so you have the email attached

1293
00:45:56,640 --> 00:45:58,079
and if you would click this you would

1294
00:45:58,079 --> 00:46:00,000
see the full emails with all headers

1295
00:46:00,000 --> 00:46:03,280
and the password reset link

1296
00:46:03,440 --> 00:46:05,680
so this is the whole situation that

1297
00:46:05,680 --> 00:46:06,560
would occur

1298
00:46:06,560 --> 00:46:09,839
and actually you know would allow john

1299
00:46:09,839 --> 00:46:13,359
to get to reset alice's password and

1300
00:46:13,359 --> 00:46:16,880
thus access her own workspace

1301
00:46:16,880 --> 00:46:18,640
resulting in full account takeover

1302
00:46:18,640 --> 00:46:20,400
without user interaction

1303
00:46:20,400 --> 00:46:22,480
i found multiple of these so it's always

1304
00:46:22,480 --> 00:46:23,839
very interesting to see

1305
00:46:23,839 --> 00:46:26,240
if you have this kind of setup whether

1306
00:46:26,240 --> 00:46:30,640
you can balance other people's

1307
00:46:30,640 --> 00:46:33,280
possible preset tokens that will be a

1308
00:46:33,280 --> 00:46:34,079
horrible

1309
00:46:34,079 --> 00:46:36,480
thing so i think we covered it all for

1310
00:46:36,480 --> 00:46:37,200
today

1311
00:46:37,200 --> 00:46:39,440
thank you for attending the session i

1312
00:46:39,440 --> 00:46:41,440
look forward to your feedback

1313
00:46:41,440 --> 00:46:43,920
and i also look forward to seeing more

1314
00:46:43,920 --> 00:46:44,960
people doing

1315
00:46:44,960 --> 00:46:48,000
research on emails and email addresses

1316
00:46:48,000 --> 00:46:49,119
in general

1317
00:46:49,119 --> 00:46:56,480
thank you

