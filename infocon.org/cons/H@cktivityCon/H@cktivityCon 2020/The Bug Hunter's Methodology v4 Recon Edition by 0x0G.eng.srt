1
00:00:01,150 --> 00:00:05,840
[Music]

2
00:00:05,920 --> 00:00:07,440
all right everyone welcome

3
00:00:07,440 --> 00:00:10,639
to activity con and i just want to say

4
00:00:10,639 --> 00:00:12,639
first off that i'm so honored to be here

5
00:00:12,639 --> 00:00:14,639
and uh i'm so lucky to have worked with

6
00:00:14,639 --> 00:00:15,759
hacker one team

7
00:00:15,759 --> 00:00:17,680
being super generous with the time it

8
00:00:17,680 --> 00:00:18,960
took me to get the presentation in

9
00:00:18,960 --> 00:00:21,600
and uh yeah i i just wanted to thank

10
00:00:21,600 --> 00:00:22,960
everybody involved for putting on an

11
00:00:22,960 --> 00:00:24,080
awesome conference and

12
00:00:24,080 --> 00:00:26,640
uh looking forward to it so uh today uh

13
00:00:26,640 --> 00:00:27,439
we're gonna be

14
00:00:27,439 --> 00:00:28,960
checking out one of the pieces of

15
00:00:28,960 --> 00:00:30,400
content i made called the bug hunters

16
00:00:30,400 --> 00:00:31,519
methodology

17
00:00:31,519 --> 00:00:33,840
um this is the recon edition and this is

18
00:00:33,840 --> 00:00:35,680
version 4.01

19
00:00:35,680 --> 00:00:38,879
uh we have about 45 uh minutes to get

20
00:00:38,879 --> 00:00:40,480
through what is usually like a two hour

21
00:00:40,480 --> 00:00:42,399
talk or maybe hour and 30 talks so

22
00:00:42,399 --> 00:00:44,800
if i talk fast everything is linked in

23
00:00:44,800 --> 00:00:46,480
these slides and you can google all

24
00:00:46,480 --> 00:00:47,840
these tools or you can just grab the

25
00:00:47,840 --> 00:00:49,600
hyperlinks off of the application

26
00:00:49,600 --> 00:00:51,120
they're off of the um

27
00:00:51,120 --> 00:00:53,039
the text document when it's released

28
00:00:53,039 --> 00:00:54,879
after the show so uh

29
00:00:54,879 --> 00:00:56,239
anyways thank you so much for having me

30
00:00:56,239 --> 00:00:57,680
and i really appreciate it and we'll

31
00:00:57,680 --> 00:00:58,000
just

32
00:00:58,000 --> 00:01:01,359
uh we'll get right into it so um the bug

33
00:01:01,359 --> 00:01:02,879
hunters methodology what is it right so

34
00:01:02,879 --> 00:01:04,239
the bug hunters methodology

35
00:01:04,239 --> 00:01:06,320
is this talk i've been doing for several

36
00:01:06,320 --> 00:01:07,520
years now

37
00:01:07,520 --> 00:01:09,040
actually i can trace it all the way back

38
00:01:09,040 --> 00:01:11,280
to brewcon when i was still pen testing

39
00:01:11,280 --> 00:01:12,000
at hp

40
00:01:12,000 --> 00:01:13,439
before i was the director of pen testing

41
00:01:13,439 --> 00:01:15,439
there and um

42
00:01:15,439 --> 00:01:17,360
and it was just like my notes on what

43
00:01:17,360 --> 00:01:18,720
tools were working for me

44
00:01:18,720 --> 00:01:20,320
in the pen test world and then it

45
00:01:20,320 --> 00:01:21,600
extended into bug bounty when i moved

46
00:01:21,600 --> 00:01:22,720
into bug bounty and

47
00:01:22,720 --> 00:01:24,880
and all that and so uh this talk has

48
00:01:24,880 --> 00:01:26,320
been brewing

49
00:01:26,320 --> 00:01:29,119
and uh has been iterated on for many

50
00:01:29,119 --> 00:01:30,560
years now and so the

51
00:01:30,560 --> 00:01:31,680
the version you're seeing right now is

52
00:01:31,680 --> 00:01:33,920
version four four point zero zero one

53
00:01:33,920 --> 00:01:35,759
and basically i've had to split it into

54
00:01:35,759 --> 00:01:37,040
two sections and today we're

55
00:01:37,040 --> 00:01:39,840
going over the recon uh section which is

56
00:01:39,840 --> 00:01:42,000
a recon analysis inside of

57
00:01:42,000 --> 00:01:43,920
inside of bug bounty hunting and the

58
00:01:43,920 --> 00:01:45,520
other part of it is application analysis

59
00:01:45,520 --> 00:01:46,799
what you actually do

60
00:01:46,799 --> 00:01:48,720
on a site and that's a talk i'm going to

61
00:01:48,720 --> 00:01:49,920
release in the future

62
00:01:49,920 --> 00:01:51,119
so uh today we're going to be talking

63
00:01:51,119 --> 00:01:53,200
all about recon when it pertains to

64
00:01:53,200 --> 00:01:56,799
bug bounties so this is a quick about me

65
00:01:56,799 --> 00:01:58,240
i'll be really quick i'm a father

66
00:01:58,240 --> 00:02:00,000
husband hacker gamer and sometimes

67
00:02:00,000 --> 00:02:02,479
streamer you can see all my

68
00:02:02,479 --> 00:02:05,119
social links there and i'm a gamer too

69
00:02:05,119 --> 00:02:05,680
and

70
00:02:05,680 --> 00:02:08,160
these are my awesome kids who i take

71
00:02:08,160 --> 00:02:09,758
inspiration from every day and i

72
00:02:09,758 --> 00:02:10,878
couldn't do anything

73
00:02:10,878 --> 00:02:12,720
that i do without the support of them

74
00:02:12,720 --> 00:02:14,239
and my lovely wife so

75
00:02:14,239 --> 00:02:17,200
uh yeah okay so the first thing i want

76
00:02:17,200 --> 00:02:18,640
to talk about right so we're at kind of

77
00:02:18,640 --> 00:02:20,720
like a bug bounty centric contra

78
00:02:20,720 --> 00:02:23,040
conference and what i want to talk about

79
00:02:23,040 --> 00:02:25,280
is that having a way to track your work

80
00:02:25,280 --> 00:02:28,400
inside of inside of your workflow is

81
00:02:28,400 --> 00:02:30,160
super important right an automation

82
00:02:30,160 --> 00:02:32,319
framework can do some of this for you

83
00:02:32,319 --> 00:02:34,640
but uh but really tracking your work and

84
00:02:34,640 --> 00:02:36,480
knowing where you picked up and put down

85
00:02:36,480 --> 00:02:37,840
contextually

86
00:02:37,840 --> 00:02:39,599
inside of your projects is really

87
00:02:39,599 --> 00:02:41,920
important so i use a mind mapping tool

88
00:02:41,920 --> 00:02:42,239
called

89
00:02:42,239 --> 00:02:45,360
xmind to build trees of how i do my work

90
00:02:45,360 --> 00:02:45,920
but

91
00:02:45,920 --> 00:02:47,840
you can also you know track your work in

92
00:02:47,840 --> 00:02:49,760
many other ways a lot of pen testers can

93
00:02:49,760 --> 00:02:51,840
do it straight in like vim or you know

94
00:02:51,840 --> 00:02:53,760
they keep excel spreadsheets or notepads

95
00:02:53,760 --> 00:02:54,640
i've heard of people

96
00:02:54,640 --> 00:02:57,280
using things like you know microsoft

97
00:02:57,280 --> 00:02:59,200
note onenote or something like that so

98
00:02:59,200 --> 00:03:01,360
uh really what you want to do before you

99
00:03:01,360 --> 00:03:03,280
dive headlong into one of these giant

100
00:03:03,280 --> 00:03:05,200
scope project programs or even a small

101
00:03:05,200 --> 00:03:06,640
scope program is have some place where

102
00:03:06,640 --> 00:03:08,319
you're going to take notes about where

103
00:03:08,319 --> 00:03:10,000
you are what sites you were working on

104
00:03:10,000 --> 00:03:12,400
interesting stuff etc so this is how i

105
00:03:12,400 --> 00:03:13,040
do

106
00:03:13,040 --> 00:03:15,599
mine and this is this is xmind right and

107
00:03:15,599 --> 00:03:17,599
i've built out a tree here

108
00:03:17,599 --> 00:03:19,519
and here you can see i have the project

109
00:03:19,519 --> 00:03:20,879
name in the middle

110
00:03:20,879 --> 00:03:24,799
so this is tesla tesla is uh tesla is a

111
00:03:24,799 --> 00:03:26,879
bug bounty program uh with a wide scope

112
00:03:26,879 --> 00:03:27,920
which is usually what i

113
00:03:27,920 --> 00:03:29,360
love to do right and then you can see on

114
00:03:29,360 --> 00:03:30,879
the left-hand side i've broken this off

115
00:03:30,879 --> 00:03:32,239
into recon

116
00:03:32,239 --> 00:03:34,959
and then roots right and so the recon

117
00:03:34,959 --> 00:03:35,840
node has

118
00:03:35,840 --> 00:03:38,640
tesla's asns it's got its acquisitions

119
00:03:38,640 --> 00:03:39,840
it started to

120
00:03:39,840 --> 00:03:41,680
be a place where i can just dump random

121
00:03:41,680 --> 00:03:43,040
notes or tool output

122
00:03:43,040 --> 00:03:44,319
and then the right hand stand i have

123
00:03:44,319 --> 00:03:46,560
roots right and roots or seed domains

124
00:03:46,560 --> 00:03:47,920
whatever you want to call them these you

125
00:03:47,920 --> 00:03:48,560
know

126
00:03:48,560 --> 00:03:51,200
something.com or something you know org

127
00:03:51,200 --> 00:03:52,640
or net or something like these are your

128
00:03:52,640 --> 00:03:53,760
roots and they're what you're going to

129
00:03:53,760 --> 00:03:55,439
perform all your other analysis on like

130
00:03:55,439 --> 00:03:56,959
your subdomain enumeration

131
00:03:56,959 --> 00:03:58,480
so you have a list of your roots on the

132
00:03:58,480 --> 00:04:00,239
right and then under each root you have

133
00:04:00,239 --> 00:04:02,000
every subdomain for that root and then

134
00:04:02,000 --> 00:04:03,280
under each subdomain you're going to

135
00:04:03,280 --> 00:04:04,959
build up even more information so this

136
00:04:04,959 --> 00:04:07,920
is at the beginning what it looks like

137
00:04:07,920 --> 00:04:09,439
and then on the left hand side of this

138
00:04:09,439 --> 00:04:11,200
page here is when you expand

139
00:04:11,200 --> 00:04:12,879
that roots column you can see i have

140
00:04:12,879 --> 00:04:14,319
tesla and under

141
00:04:14,319 --> 00:04:16,959
tesla.com now i have all the subdomains

142
00:04:16,959 --> 00:04:19,040
of tesla.com

143
00:04:19,040 --> 00:04:21,839
which are direct output of something

144
00:04:21,839 --> 00:04:22,479
like

145
00:04:22,479 --> 00:04:25,040
http probe so all of these links are

146
00:04:25,040 --> 00:04:25,600
live

147
00:04:25,600 --> 00:04:28,720
they are subdomains of tesla.com and i

148
00:04:28,720 --> 00:04:30,479
dump them right there under that node

149
00:04:30,479 --> 00:04:32,360
and then if you drill down into one like

150
00:04:32,360 --> 00:04:34,240
www.tesla.com you can expand

151
00:04:34,240 --> 00:04:35,680
that and that's where i get into keeping

152
00:04:35,680 --> 00:04:37,520
my methodology notes right

153
00:04:37,520 --> 00:04:40,000
notes about questions to ask you know

154
00:04:40,000 --> 00:04:41,360
how does the framework handle special

155
00:04:41,360 --> 00:04:43,120
characters how does it reference a user

156
00:04:43,120 --> 00:04:44,800
are there user roles

157
00:04:44,800 --> 00:04:46,400
what are some of the dynamic parameters

158
00:04:46,400 --> 00:04:48,320
does it have api calls

159
00:04:48,320 --> 00:04:50,320
um you know which parameters are

160
00:04:50,320 --> 00:04:52,800
referencing urls or paths you know is

161
00:04:52,800 --> 00:04:53,280
there

162
00:04:53,280 --> 00:04:55,280
uploads in the you know in the sense of

163
00:04:55,280 --> 00:04:57,040
like multi-part upload forms

164
00:04:57,040 --> 00:04:59,600
um you know are are there business logic

165
00:04:59,600 --> 00:05:00,320
flows

166
00:05:00,320 --> 00:05:01,680
these are all the kinds of like general

167
00:05:01,680 --> 00:05:02,720
questions you're going to start to ask

168
00:05:02,720 --> 00:05:03,680
yourself when you do

169
00:05:03,680 --> 00:05:06,160
a single site analysis right and so uh i

170
00:05:06,160 --> 00:05:07,800
keep these notes under the

171
00:05:07,800 --> 00:05:09,840
www.tesla.com node because i want to

172
00:05:09,840 --> 00:05:10,960
check these off

173
00:05:10,960 --> 00:05:13,400
as i go along during my testing of

174
00:05:13,400 --> 00:05:14,720
www.tesla.com

175
00:05:14,720 --> 00:05:17,280
and figure out you know if if i've

176
00:05:17,280 --> 00:05:18,639
remembered to do these things and now

177
00:05:18,639 --> 00:05:19,840
what will happen is you'll see it's in

178
00:05:19,840 --> 00:05:21,280
orange right now and orange means that

179
00:05:21,280 --> 00:05:23,919
i'm currently working on this node

180
00:05:23,919 --> 00:05:26,240
uncolored means it hasn't been touched

181
00:05:26,240 --> 00:05:27,919
at all right i just know about it and

182
00:05:27,919 --> 00:05:29,680
green means i've completed assessment

183
00:05:29,680 --> 00:05:31,840
and then when you drill down into the

184
00:05:31,840 --> 00:05:33,520
uh into the node on the right i put

185
00:05:33,520 --> 00:05:34,960
check marks because

186
00:05:34,960 --> 00:05:36,320
this mind mapping tool allows me to put

187
00:05:36,320 --> 00:05:38,720
check marks by things so um you know as

188
00:05:38,720 --> 00:05:39,120
i

189
00:05:39,120 --> 00:05:41,280
check for file uploads okay no there's

190
00:05:41,280 --> 00:05:43,039
no file uploads cool i'll check that off

191
00:05:43,039 --> 00:05:43,680
you know

192
00:05:43,680 --> 00:05:45,759
and uh if i find one i will you know

193
00:05:45,759 --> 00:05:47,280
dump that link you know inside of the

194
00:05:47,280 --> 00:05:48,720
file upload section et cetera so this is

195
00:05:48,720 --> 00:05:50,080
how i keep my notes

196
00:05:50,080 --> 00:05:51,759
uh you can see i've i've marked some

197
00:05:51,759 --> 00:05:53,600
interesting endpoints like tesla account

198
00:05:53,600 --> 00:05:55,840
slash configurator api et cetera

199
00:05:55,840 --> 00:05:57,759
under interesting endpoints etc you know

200
00:05:57,759 --> 00:05:59,199
notes on the technology

201
00:05:59,199 --> 00:06:01,120
um so this is how i keep my notes it's

202
00:06:01,120 --> 00:06:02,560
really useful for me to pick up and put

203
00:06:02,560 --> 00:06:04,080
down a project and have this

204
00:06:04,080 --> 00:06:05,919
in front of me but it's really important

205
00:06:05,919 --> 00:06:07,680
to just use any general note taking a

206
00:06:07,680 --> 00:06:08,800
project tracking

207
00:06:08,800 --> 00:06:11,039
software to do this type of analysis not

208
00:06:11,039 --> 00:06:12,720
just to keep track of the urls you know

209
00:06:12,720 --> 00:06:14,160
that are live and the port scan date and

210
00:06:14,160 --> 00:06:15,759
all that stuff but also to contextually

211
00:06:15,759 --> 00:06:17,199
keep track of where you are and what

212
00:06:17,199 --> 00:06:21,039
you've done okay so today we're talking

213
00:06:21,039 --> 00:06:22,080
about recon

214
00:06:22,080 --> 00:06:24,080
and in specific like this idea of wide

215
00:06:24,080 --> 00:06:25,360
recon right what we're going to talk

216
00:06:25,360 --> 00:06:26,560
about today is you know a couple of

217
00:06:26,560 --> 00:06:27,759
programs that

218
00:06:27,759 --> 00:06:30,160
um you know i've had some experience

219
00:06:30,160 --> 00:06:30,880
with or

220
00:06:30,880 --> 00:06:32,160
that i use in demos a lot because

221
00:06:32,160 --> 00:06:34,160
they've got wide scopes right

222
00:06:34,160 --> 00:06:36,639
and so we're going to do we're going to

223
00:06:36,639 --> 00:06:37,520
do

224
00:06:37,520 --> 00:06:39,759
um a little bit of an explanation of you

225
00:06:39,759 --> 00:06:41,280
know finding your end scope domains

226
00:06:41,280 --> 00:06:42,479
right off the bat what are your seed

227
00:06:42,479 --> 00:06:43,039
domains

228
00:06:43,039 --> 00:06:45,039
you know what are what is this company's

229
00:06:45,039 --> 00:06:47,919
acquisition how do you enumerate an asn

230
00:06:47,919 --> 00:06:48,400
you know

231
00:06:48,400 --> 00:06:50,800
how do you do reverse who is enumeration

232
00:06:50,800 --> 00:06:52,400
and subdomain enumeration and port

233
00:06:52,400 --> 00:06:53,599
analysis and then we're going to talk

234
00:06:53,599 --> 00:06:55,039
about some other things that fit along

235
00:06:55,039 --> 00:06:57,360
with this right wide recon idea

236
00:06:57,360 --> 00:06:59,120
uh but yeah that's that's kind of what

237
00:06:59,120 --> 00:07:00,479
we're going to get into today is the ide

238
00:07:00,479 --> 00:07:02,400
the idea of enumerating as many hosts as

239
00:07:02,400 --> 00:07:03,520
we can

240
00:07:03,520 --> 00:07:05,120
to give us the best chance of possible

241
00:07:05,120 --> 00:07:08,800
success in hacking this organization

242
00:07:08,800 --> 00:07:10,080
so the first thing we're going to do is

243
00:07:10,080 --> 00:07:12,240
find these seed or root domains in a

244
00:07:12,240 --> 00:07:13,599
wide scope bounty right

245
00:07:13,599 --> 00:07:15,120
these are sometimes given to you already

246
00:07:15,120 --> 00:07:16,720
right so here's the scope page for

247
00:07:16,720 --> 00:07:18,560
tesla on bug crowd.com it's one of their

248
00:07:18,560 --> 00:07:20,560
widest scope bug bounties right

249
00:07:20,560 --> 00:07:22,319
and you can see here this asterisk next

250
00:07:22,319 --> 00:07:24,400
to the subdomain and that just means

251
00:07:24,400 --> 00:07:26,560
you can test anything that any subdomain

252
00:07:26,560 --> 00:07:28,160
you find that is tesla.com

253
00:07:28,160 --> 00:07:30,319
or tesla.cn or tesla motors or anything

254
00:07:30,319 --> 00:07:31,280
like that right

255
00:07:31,280 --> 00:07:34,160
and so um you can also test almost

256
00:07:34,160 --> 00:07:35,280
anything that you can

257
00:07:35,280 --> 00:07:38,479
you know find out that's tesla's um that

258
00:07:38,479 --> 00:07:41,120
uh that basically um you know you have

259
00:07:41,120 --> 00:07:42,639
verified somehow to be

260
00:07:42,639 --> 00:07:44,639
owned by tesla which is awesome this is

261
00:07:44,639 --> 00:07:46,639
a great scope

262
00:07:46,639 --> 00:07:49,759
to have for a program um

263
00:07:49,759 --> 00:07:51,919
similar scoped programs on hacker one

264
00:07:51,919 --> 00:07:53,680
are verizon media right everybody's

265
00:07:53,680 --> 00:07:54,639
favorite

266
00:07:54,639 --> 00:07:56,080
uh everybody's favorite program right

267
00:07:56,080 --> 00:07:58,240
this is one of the widest scope i think

268
00:07:58,240 --> 00:08:00,560
it is the widest scope bug bounty

269
00:08:00,560 --> 00:08:04,080
in the world um and they have so many

270
00:08:04,080 --> 00:08:05,919
assets and so many seed domains that i

271
00:08:05,919 --> 00:08:07,280
couldn't even fit on one page when i

272
00:08:07,280 --> 00:08:08,479
made the slides

273
00:08:08,479 --> 00:08:10,160
uh but they also have like some

274
00:08:10,160 --> 00:08:12,080
catch-all verbiage

275
00:08:12,080 --> 00:08:13,599
in their brief too when you're on hacker

276
00:08:13,599 --> 00:08:15,199
one that if you find a vulnerability

277
00:08:15,199 --> 00:08:16,879
that if that affects an asset

278
00:08:16,879 --> 00:08:19,360
belonging to verizon media but it's not

279
00:08:19,360 --> 00:08:20,879
in the scope please report it to them

280
00:08:20,879 --> 00:08:22,240
anyway so it's kind of like a

281
00:08:22,240 --> 00:08:24,319
you know a wide open playing field right

282
00:08:24,319 --> 00:08:26,000
um there's so many acquisitions that

283
00:08:26,000 --> 00:08:28,400
verizon media has done over the years

284
00:08:28,400 --> 00:08:29,120
and so many

285
00:08:29,120 --> 00:08:30,720
so many brands that they have and

286
00:08:30,720 --> 00:08:31,759
they're you know they're doing these

287
00:08:31,759 --> 00:08:33,200
things all the time acquiring companies

288
00:08:33,200 --> 00:08:34,559
and creating new brands that this this

289
00:08:34,559 --> 00:08:35,120
is like the

290
00:08:35,120 --> 00:08:36,640
never ending scope and a lot of hackers

291
00:08:36,640 --> 00:08:38,240
spend their whole career

292
00:08:38,240 --> 00:08:41,279
uh hacking on verizon media so you'll

293
00:08:41,279 --> 00:08:42,399
find seed domains in

294
00:08:42,399 --> 00:08:44,399
in the brief page for the site you're

295
00:08:44,399 --> 00:08:46,720
looking for

296
00:08:46,720 --> 00:08:49,040
so the next thing that we do after we

297
00:08:49,040 --> 00:08:50,800
find the seed domains and we kind of add

298
00:08:50,800 --> 00:08:51,440
them to

299
00:08:51,440 --> 00:08:52,800
you know our notes is we want to find

300
00:08:52,800 --> 00:08:55,040
the acquisitions for a company

301
00:08:55,040 --> 00:08:56,880
another company i use a lot in my demos

302
00:08:56,880 --> 00:08:58,720
is twitch because uh stream on twitch

303
00:08:58,720 --> 00:08:59,360
and

304
00:08:59,360 --> 00:09:00,720
uh there are you know decent

305
00:09:00,720 --> 00:09:02,399
organization and stuff like that so

306
00:09:02,399 --> 00:09:04,480
in order to do this i use a tool called

307
00:09:04,480 --> 00:09:06,480
crunchbase and crunchbase is this

308
00:09:06,480 --> 00:09:09,920
basically site that does business and

309
00:09:09,920 --> 00:09:12,000
intelligence basically it'll tell you

310
00:09:12,000 --> 00:09:13,040
things like their

311
00:09:13,040 --> 00:09:14,160
you know people who work there their

312
00:09:14,160 --> 00:09:16,160
investors their funding rounds

313
00:09:16,160 --> 00:09:17,760
you know the employees all their links

314
00:09:17,760 --> 00:09:19,519
and stuff like that so if you just

315
00:09:19,519 --> 00:09:20,959
you know register a free account at

316
00:09:20,959 --> 00:09:22,560
crunchbase you can look up the

317
00:09:22,560 --> 00:09:25,519
organization and here i've put in twitch

318
00:09:25,519 --> 00:09:26,880
and you can go to their organization

319
00:09:26,880 --> 00:09:28,959
page and you can see a whole bunch of

320
00:09:28,959 --> 00:09:30,480
information about them and that they

321
00:09:30,480 --> 00:09:32,480
were acquired by amazon themselves but

322
00:09:32,480 --> 00:09:34,320
they also have a number of acquisitions

323
00:09:34,320 --> 00:09:36,640
for which are revlo clip mine curse and

324
00:09:36,640 --> 00:09:38,000
good game right

325
00:09:38,000 --> 00:09:40,160
and so uh depending on the scope of the

326
00:09:40,160 --> 00:09:42,000
bug bounty uh you know these could be

327
00:09:42,000 --> 00:09:43,600
targets for us well right every one of

328
00:09:43,600 --> 00:09:45,279
those brands those four new brands that

329
00:09:45,279 --> 00:09:46,399
we've found

330
00:09:46,399 --> 00:09:48,720
um have domains right that maybe have

331
00:09:48,720 --> 00:09:49,920
infrastructure still on them that's

332
00:09:49,920 --> 00:09:50,800
related to

333
00:09:50,800 --> 00:09:53,440
you know what is twitch now or uh maybe

334
00:09:53,440 --> 00:09:55,040
they forgot to disable something in one

335
00:09:55,040 --> 00:09:56,560
of those net blocks or you know they

336
00:09:56,560 --> 00:09:58,320
haven't completely transferred over the

337
00:09:58,320 --> 00:09:59,600
infrastructure yet or something like

338
00:09:59,600 --> 00:10:00,399
that right so it's

339
00:10:00,399 --> 00:10:01,920
it's uh it's a good place to start to

340
00:10:01,920 --> 00:10:03,680
look for related

341
00:10:03,680 --> 00:10:05,440
related acquisitions or related

342
00:10:05,440 --> 00:10:06,880
companies now

343
00:10:06,880 --> 00:10:09,200
um you know you want to make sure that

344
00:10:09,200 --> 00:10:11,440
in the scope pages of

345
00:10:11,440 --> 00:10:14,480
the um of the bounty that any

346
00:10:14,480 --> 00:10:16,320
of these companies are not explicitly

347
00:10:16,320 --> 00:10:17,760
out of scope because if they're

348
00:10:17,760 --> 00:10:19,120
explicitly out of scope obviously you

349
00:10:19,120 --> 00:10:20,160
can't hack them

350
00:10:20,160 --> 00:10:21,839
but in a wide scope bounty if they're

351
00:10:21,839 --> 00:10:22,800
not you know like the two we've

352
00:10:22,800 --> 00:10:23,519
mentioned

353
00:10:23,519 --> 00:10:25,040
if they're not mentioned explicitly not

354
00:10:25,040 --> 00:10:26,320
a scope and you know that they're owned

355
00:10:26,320 --> 00:10:27,680
by your main company then

356
00:10:27,680 --> 00:10:29,519
they're usually fair game and if you're

357
00:10:29,519 --> 00:10:30,720
not sure they're for a game just ask the

358
00:10:30,720 --> 00:10:32,240
program submit like a dummy volume and

359
00:10:32,240 --> 00:10:33,680
say hey i might have found

360
00:10:33,680 --> 00:10:35,120
you know some infrastructure on this

361
00:10:35,120 --> 00:10:37,440
domain uh is it cool to

362
00:10:37,440 --> 00:10:39,600
uh to present you some findings i found

363
00:10:39,600 --> 00:10:41,760
there and see what they say

364
00:10:41,760 --> 00:10:43,600
so now we have our seed domains that are

365
00:10:43,600 --> 00:10:45,120
given to us in the brief

366
00:10:45,120 --> 00:10:47,920
and we also have uh we have acquisitions

367
00:10:47,920 --> 00:10:49,600
for that company

368
00:10:49,600 --> 00:10:50,720
so the next thing you want to do is kind

369
00:10:50,720 --> 00:10:53,279
of enumerate what their ip space is

370
00:10:53,279 --> 00:10:54,160
right

371
00:10:54,160 --> 00:10:56,320
and um you know there are manual ways to

372
00:10:56,320 --> 00:10:58,240
do in this presentation manual ways to

373
00:10:58,240 --> 00:10:59,440
do everything that i'm going to tell you

374
00:10:59,440 --> 00:11:00,160
about right so

375
00:11:00,160 --> 00:11:02,320
the first one that we're going to talk

376
00:11:02,320 --> 00:11:04,720
about here to enumerate asns

377
00:11:04,720 --> 00:11:06,680
is a site that i use all the time called

378
00:11:06,680 --> 00:11:07,920
bgp.he.net

379
00:11:07,920 --> 00:11:11,519
and bgp.he.net basically lets you have a

380
00:11:11,519 --> 00:11:13,200
free forum search field

381
00:11:13,200 --> 00:11:15,519
to search for a company's name and then

382
00:11:15,519 --> 00:11:16,560
it'll give you back anything that

383
00:11:16,560 --> 00:11:17,440
matches that

384
00:11:17,440 --> 00:11:19,120
you know name and will give you the

385
00:11:19,120 --> 00:11:20,880
associated as an

386
00:11:20,880 --> 00:11:23,440
asn numbers and so these are collections

387
00:11:23,440 --> 00:11:24,560
of their ip's you know they're

388
00:11:24,560 --> 00:11:26,399
registered ip space that we know about

389
00:11:26,399 --> 00:11:27,360
on the internet

390
00:11:27,360 --> 00:11:28,800
and here you can see that i put in

391
00:11:28,800 --> 00:11:31,279
twitch and i get back that i know that

392
00:11:31,279 --> 00:11:32,800
twitch's organization name is twitch

393
00:11:32,800 --> 00:11:35,279
interactive inc and they have two asn's

394
00:11:35,279 --> 00:11:35,920
four six

395
00:11:35,920 --> 00:11:38,000
four eight nine and three nine seven one

396
00:11:38,000 --> 00:11:39,120
five three

397
00:11:39,120 --> 00:11:40,800
and then the associated ranges that are

398
00:11:40,800 --> 00:11:42,399
associated to

399
00:11:42,399 --> 00:11:44,399
um to twitch which is great now we have

400
00:11:44,399 --> 00:11:47,040
some ip space that we know 100 percent

401
00:11:47,040 --> 00:11:48,399
is theirs and if it's an open scope

402
00:11:48,399 --> 00:11:49,920
bounty you know usually that stuff's in

403
00:11:49,920 --> 00:11:51,440
scope because that's your way of

404
00:11:51,440 --> 00:11:52,720
verifying that it is

405
00:11:52,720 --> 00:11:54,720
exactly there now quick note here is

406
00:11:54,720 --> 00:11:56,079
that this doesn't represent all their

407
00:11:56,079 --> 00:11:57,680
architecture right many companies are

408
00:11:57,680 --> 00:11:58,240
you know

409
00:11:58,240 --> 00:12:00,800
50 lists at least 50 or more in the

410
00:12:00,800 --> 00:12:01,519
cloud

411
00:12:01,519 --> 00:12:03,600
by now right so this this only tracks

412
00:12:03,600 --> 00:12:05,440
their owned ip space it's not tracking

413
00:12:05,440 --> 00:12:06,720
you know assets that they've built in

414
00:12:06,720 --> 00:12:08,320
aws azure and gcp

415
00:12:08,320 --> 00:12:10,880
right so um so this is only a portion of

416
00:12:10,880 --> 00:12:11,760
their infrastructure

417
00:12:11,760 --> 00:12:14,240
um you know so you know use uh your

418
00:12:14,240 --> 00:12:16,079
mileage may vary with you know

419
00:12:16,079 --> 00:12:19,519
how much you use this data

420
00:12:19,839 --> 00:12:21,120
so with everything in the presentation

421
00:12:21,120 --> 00:12:22,639
i'd like to present the manual way to do

422
00:12:22,639 --> 00:12:24,079
it if you want to do it by hand and

423
00:12:24,079 --> 00:12:26,959
you know be able to filter contextually

424
00:12:26,959 --> 00:12:27,839
with like your brain

425
00:12:27,839 --> 00:12:29,440
or if you want to be able to automate

426
00:12:29,440 --> 00:12:31,040
and do stuff there's a i also offer

427
00:12:31,040 --> 00:12:32,880
usually a command line alternative

428
00:12:32,880 --> 00:12:35,200
so there are two alternatives here um

429
00:12:35,200 --> 00:12:38,000
for getting for enumerating an asn uh

430
00:12:38,000 --> 00:12:39,839
that's uh that i like and actually a

431
00:12:39,839 --> 00:12:41,360
third one really recently that

432
00:12:41,360 --> 00:12:44,399
um that i've been using uh myself right

433
00:12:44,399 --> 00:12:44,880
so

434
00:12:44,880 --> 00:12:48,480
uh the first one is um asn look up by

435
00:12:48,480 --> 00:12:51,200
yasin and uh link is down there and this

436
00:12:51,200 --> 00:12:52,079
will just

437
00:12:52,079 --> 00:12:54,240
uh this will just take a domain of yours

438
00:12:54,240 --> 00:12:55,680
with the attack o

439
00:12:55,680 --> 00:12:58,240
flag and what it'll do is it'll run it

440
00:12:58,240 --> 00:12:59,040
through

441
00:12:59,040 --> 00:13:02,079
the maxmind.com dataset

442
00:13:02,079 --> 00:13:04,320
uh for asn information which it

443
00:13:04,320 --> 00:13:05,279
downloads

444
00:13:05,279 --> 00:13:07,040
and then it tries to find the output and

445
00:13:07,040 --> 00:13:08,480
gives you the ranges right pretty simple

446
00:13:08,480 --> 00:13:09,839
so now you have a set of ranges to work

447
00:13:09,839 --> 00:13:12,560
with ipv4 ranges to check out

448
00:13:12,560 --> 00:13:16,079
the other one is um metabigor

449
00:13:16,079 --> 00:13:19,680
by jessiejj and this one relies on a

450
00:13:19,680 --> 00:13:21,320
different data set it uses

451
00:13:21,320 --> 00:13:24,320
asn.lookup.com and also the bgp.he.net

452
00:13:24,320 --> 00:13:24,959
site

453
00:13:24,959 --> 00:13:26,639
um and it will also give you back the

454
00:13:26,639 --> 00:13:29,200
ranges one thing here just to be mindful

455
00:13:29,200 --> 00:13:29,440
of

456
00:13:29,440 --> 00:13:31,519
is that using a command line tool to do

457
00:13:31,519 --> 00:13:32,959
this you're counting on the tool

458
00:13:32,959 --> 00:13:35,120
catching your keyword here which is like

459
00:13:35,120 --> 00:13:36,160
tesla right

460
00:13:36,160 --> 00:13:38,800
and tesla has multiple entries when you

461
00:13:38,800 --> 00:13:40,399
do a free text search

462
00:13:40,399 --> 00:13:43,440
for you know a company um and

463
00:13:43,440 --> 00:13:45,199
so you just want to make sure it's it's

464
00:13:45,199 --> 00:13:47,760
not catching any ip ranges that are out

465
00:13:47,760 --> 00:13:48,000
of

466
00:13:48,000 --> 00:13:50,160
scope right so uh you know there are

467
00:13:50,160 --> 00:13:51,839
many companies with the word tesla in

468
00:13:51,839 --> 00:13:52,560
their name

469
00:13:52,560 --> 00:13:55,360
you know it's not just uh it's not just

470
00:13:55,360 --> 00:13:56,959
tesla motors right so

471
00:13:56,959 --> 00:13:59,519
uh in these cases um you definitely

472
00:13:59,519 --> 00:14:00,639
wanna you know

473
00:14:00,639 --> 00:14:02,320
and you know basically somehow verify

474
00:14:02,320 --> 00:14:04,240
that the the output of the tool is

475
00:14:04,240 --> 00:14:06,880
is accurate the third one i've been

476
00:14:06,880 --> 00:14:07,680
working here

477
00:14:07,680 --> 00:14:10,160
with here which is not on these slides

478
00:14:10,160 --> 00:14:10,959
is uh

479
00:14:10,959 --> 00:14:15,120
is actually one called uh

480
00:14:15,120 --> 00:14:18,959
asn recon now asn recon does

481
00:14:18,959 --> 00:14:20,079
something a little bit different than

482
00:14:20,079 --> 00:14:22,000
this where these go out and you know

483
00:14:22,000 --> 00:14:23,680
pull from these databases to put up

484
00:14:23,680 --> 00:14:27,120
to pull out uh to pull out information

485
00:14:27,120 --> 00:14:30,560
asn recon will go out and also

486
00:14:30,560 --> 00:14:32,639
uh it'll take a domain that you give it

487
00:14:32,639 --> 00:14:34,399
and then it will find

488
00:14:34,399 --> 00:14:36,320
that asn for you but not only will it

489
00:14:36,320 --> 00:14:38,399
find the asn for you it'll also expand

490
00:14:38,399 --> 00:14:40,160
all the ranges and start scanning the

491
00:14:40,160 --> 00:14:41,839
ranges for

492
00:14:41,839 --> 00:14:45,440
uh for sites that are on 443 uh https

493
00:14:45,440 --> 00:14:47,279
and it'll find all the https sites

494
00:14:47,279 --> 00:14:48,880
and parse their certificates and give

495
00:14:48,880 --> 00:14:51,040
you back the uh

496
00:14:51,040 --> 00:14:53,600
the owned section of the certificate

497
00:14:53,600 --> 00:14:54,800
right it'll give you the

498
00:14:54,800 --> 00:14:56,639
domain name that is associated to every

499
00:14:56,639 --> 00:14:58,000
address that responds

500
00:14:58,000 --> 00:14:59,680
to an https probe so i've been using

501
00:14:59,680 --> 00:15:01,120
that one as well it's not on the slide

502
00:15:01,120 --> 00:15:01,680
but

503
00:15:01,680 --> 00:15:03,920
asn recon is is actually pretty pretty

504
00:15:03,920 --> 00:15:05,839
useful that i've been using lately

505
00:15:05,839 --> 00:15:08,639
okay so we've done some asn enumeration

506
00:15:08,639 --> 00:15:11,120
right we've gotten the asn's for

507
00:15:11,120 --> 00:15:13,360
our target right so here we're back on

508
00:15:13,360 --> 00:15:15,800
twitch right we know that twitch is

509
00:15:15,800 --> 00:15:19,600
as46489 uh so now we can use a tool

510
00:15:19,600 --> 00:15:22,399
called a mass and or a mass excuse me

511
00:15:22,399 --> 00:15:24,000
and a mass is a tool that does

512
00:15:24,000 --> 00:15:25,519
all kinds of different domain

513
00:15:25,519 --> 00:15:27,040
intelligence

514
00:15:27,040 --> 00:15:28,480
functions right it's written by jeff

515
00:15:28,480 --> 00:15:30,880
foley and the and the amass team

516
00:15:30,880 --> 00:15:32,880
it's an official owasp project it's

517
00:15:32,880 --> 00:15:34,560
becoming

518
00:15:34,560 --> 00:15:36,480
a core bounty hunter tool i think most

519
00:15:36,480 --> 00:15:37,839
of you probably already know about it

520
00:15:37,839 --> 00:15:38,800
but

521
00:15:38,800 --> 00:15:41,120
you know a lot a lot of people uh really

522
00:15:41,120 --> 00:15:43,519
execute anything other than using a mass

523
00:15:43,519 --> 00:15:45,279
intel which is one section of the tool

524
00:15:45,279 --> 00:15:46,720
there's actually four different

525
00:15:46,720 --> 00:15:49,199
sections that the tool does now um and

526
00:15:49,199 --> 00:15:49,920
so

527
00:15:49,920 --> 00:15:53,040
a mass will take an asn number

528
00:15:53,040 --> 00:15:54,959
and expand upon all of the top level

529
00:15:54,959 --> 00:15:56,720
seed domains that are inside of that

530
00:15:56,720 --> 00:15:57,519
range

531
00:15:57,519 --> 00:15:59,920
and so um so you just feed it a mass

532
00:15:59,920 --> 00:16:01,279
intel

533
00:16:01,279 --> 00:16:03,040
asn and you give it the asm number and

534
00:16:03,040 --> 00:16:04,240
it'll start pulling down everything

535
00:16:04,240 --> 00:16:05,920
that's inside of that ip space that is a

536
00:16:05,920 --> 00:16:08,000
top level domain or

537
00:16:08,000 --> 00:16:10,000
or a root or seed domain so here you can

538
00:16:10,000 --> 00:16:12,000
see we've run it on twitch's asn and we

539
00:16:12,000 --> 00:16:13,040
get back justin tv

540
00:16:13,040 --> 00:16:15,040
which is the company that twitch used to

541
00:16:15,040 --> 00:16:20,480
be ttvnw.net twitch.tv twitchcon.com

542
00:16:20,480 --> 00:16:22,240
which is their conference and social cam

543
00:16:22,240 --> 00:16:23,519
which i don't know it is

544
00:16:23,519 --> 00:16:25,480
um so here we've started to

545
00:16:25,480 --> 00:16:27,519
exponentially kind of uh

546
00:16:27,519 --> 00:16:29,279
expand you know to some other domains

547
00:16:29,279 --> 00:16:30,720
should they you know be in scope for a

548
00:16:30,720 --> 00:16:31,680
wide scope program

549
00:16:31,680 --> 00:16:36,880
so mass intel is really cool here

550
00:16:36,880 --> 00:16:39,120
so now that we've gone and enumerated

551
00:16:39,120 --> 00:16:40,560
some seed domains

552
00:16:40,560 --> 00:16:42,240
uh in the first step we want to see if

553
00:16:42,240 --> 00:16:43,759
we can find more c domains so what else

554
00:16:43,759 --> 00:16:45,279
can we do well

555
00:16:45,279 --> 00:16:47,360
we can use reverse who is so reverse who

556
00:16:47,360 --> 00:16:50,320
has is the idea of going to a a site

557
00:16:50,320 --> 00:16:51,839
that does uh whois

558
00:16:51,839 --> 00:16:54,320
aggregation of records and basically

559
00:16:54,320 --> 00:16:56,079
lets you do searches on different

560
00:16:56,079 --> 00:16:58,560
um parts of the whois data right and so

561
00:16:58,560 --> 00:16:59,199
um

562
00:16:59,199 --> 00:17:02,480
we know we can give a site like waxy.com

563
00:17:02,480 --> 00:17:03,360
which is uh

564
00:17:03,360 --> 00:17:04,799
which is a site that i use for my

565
00:17:04,799 --> 00:17:06,799
reverse who is and you can

566
00:17:06,799 --> 00:17:09,599
basically give them a domain twitch.tv

567
00:17:09,599 --> 00:17:10,959
and here it gives you actually a whole

568
00:17:10,959 --> 00:17:12,160
history of

569
00:17:12,160 --> 00:17:15,280
um you know who the company was um

570
00:17:15,280 --> 00:17:17,119
you know how many domains are associated

571
00:17:17,119 --> 00:17:18,559
to that company who

572
00:17:18,559 --> 00:17:20,959
the email address address is for the

573
00:17:20,959 --> 00:17:22,799
host master et cetera

574
00:17:22,799 --> 00:17:25,119
and so uh you could use hwoxy and get

575
00:17:25,119 --> 00:17:26,880
some free credits

576
00:17:26,880 --> 00:17:29,360
but really when you do this search the

577
00:17:29,360 --> 00:17:30,799
data that is interesting is you know the

578
00:17:30,799 --> 00:17:31,840
kind of things with the arrows by them

579
00:17:31,840 --> 00:17:32,880
which is that

580
00:17:32,880 --> 00:17:36,320
uh previously twitch.com used to be

581
00:17:36,320 --> 00:17:37,200
owned

582
00:17:37,200 --> 00:17:38,640
or used to be the company named

583
00:17:38,640 --> 00:17:40,559
justin.tv which you know we kind of knew

584
00:17:40,559 --> 00:17:42,000
where i knew because i've been working

585
00:17:42,000 --> 00:17:42,720
with

586
00:17:42,720 --> 00:17:45,360
twitch for a long time but then now you

587
00:17:45,360 --> 00:17:47,039
can click on that little link next to it

588
00:17:47,039 --> 00:17:47,919
you can see that

589
00:17:47,919 --> 00:17:49,840
uh it's changed to twitch interactive

590
00:17:49,840 --> 00:17:51,679
inc and there's 575

591
00:17:51,679 --> 00:17:53,360
other domains that have registered with

592
00:17:53,360 --> 00:17:56,080
the company field twitch interactive inc

593
00:17:56,080 --> 00:17:57,520
there's still 20 that are registered

594
00:17:57,520 --> 00:18:00,080
with justin justin.tv

595
00:18:00,080 --> 00:18:02,080
so you can sift through this reverse who

596
00:18:02,080 --> 00:18:03,760
is data from these services and try to

597
00:18:03,760 --> 00:18:06,160
find more seed domains to expand your

598
00:18:06,160 --> 00:18:06,799
search

599
00:18:06,799 --> 00:18:08,480
now one thing you have to be wary of

600
00:18:08,480 --> 00:18:09,679
right is just because something's

601
00:18:09,679 --> 00:18:10,880
registered

602
00:18:10,880 --> 00:18:12,960
and has a whois entry does not mean it's

603
00:18:12,960 --> 00:18:14,000
live right a lot of

604
00:18:14,000 --> 00:18:17,360
companies will park a lot of domains um

605
00:18:17,360 --> 00:18:18,799
you know and there's nothing on them

606
00:18:18,799 --> 00:18:20,400
they're just you know protecting them

607
00:18:20,400 --> 00:18:21,679
either for future use

608
00:18:21,679 --> 00:18:23,200
or you're protecting them from being

609
00:18:23,200 --> 00:18:24,559
spam domains because they look a lot

610
00:18:24,559 --> 00:18:26,000
like their main domain

611
00:18:26,000 --> 00:18:27,600
so this is something you want to make

612
00:18:27,600 --> 00:18:29,919
sure that you sift through i would say

613
00:18:29,919 --> 00:18:31,679
this is like medium fidelity data when

614
00:18:31,679 --> 00:18:32,960
you're going through reverse who is but

615
00:18:32,960 --> 00:18:34,960
you can find some gems doing reverse who

616
00:18:34,960 --> 00:18:37,200
is

617
00:18:37,360 --> 00:18:38,880
uh there is some automation for this

618
00:18:38,880 --> 00:18:40,559
there's a tool called dom link where you

619
00:18:40,559 --> 00:18:41,039
can

620
00:18:41,039 --> 00:18:45,200
give it basically a domain and it will

621
00:18:45,200 --> 00:18:47,120
go through and find everything else that

622
00:18:47,120 --> 00:18:48,720
was both registered

623
00:18:48,720 --> 00:18:51,919
by that person as the registrant or

624
00:18:51,919 --> 00:18:53,280
the organization name and it'll

625
00:18:53,280 --> 00:18:54,880
recursively do this so it's a pretty

626
00:18:54,880 --> 00:18:56,240
cool tool it's written by

627
00:18:56,240 --> 00:18:58,880
vincent yu

628
00:19:00,240 --> 00:19:02,000
all right so the next method right so

629
00:19:02,000 --> 00:19:03,280
we've we've

630
00:19:03,280 --> 00:19:05,520
most likely gotten some seed seed root

631
00:19:05,520 --> 00:19:07,600
domains to start with from our scope for

632
00:19:07,600 --> 00:19:10,880
almost always right always and then now

633
00:19:10,880 --> 00:19:11,520
we

634
00:19:11,520 --> 00:19:14,559
have gotten some c domains from our asn

635
00:19:14,559 --> 00:19:16,080
enumeration and we've gotten some c

636
00:19:16,080 --> 00:19:18,240
domains from possibly reverse dns and

637
00:19:18,240 --> 00:19:19,440
now we're going to check to see if we

638
00:19:19,440 --> 00:19:21,200
can find any new c domains from

639
00:19:21,200 --> 00:19:23,840
add analytic relationships and this is

640
00:19:23,840 --> 00:19:25,039
one that i don't think a lot of people

641
00:19:25,039 --> 00:19:26,400
have been doing except me

642
00:19:26,400 --> 00:19:29,919
for uh you know a while but

643
00:19:29,919 --> 00:19:31,600
but it's actually really useful so every

644
00:19:31,600 --> 00:19:33,280
time you build a site usually you embed

645
00:19:33,280 --> 00:19:34,799
in google analytics or new relic

646
00:19:34,799 --> 00:19:35,679
analytics or

647
00:19:35,679 --> 00:19:38,559
you know some type of analytics into

648
00:19:38,559 --> 00:19:39,840
your site to track the

649
00:19:39,840 --> 00:19:41,919
you know the visitation to it and

650
00:19:41,919 --> 00:19:43,200
collect metrics

651
00:19:43,200 --> 00:19:45,280
um now there is a site called build with

652
00:19:45,280 --> 00:19:46,960
which i use for multiple things but in

653
00:19:46,960 --> 00:19:49,760
in this way uh we use built with to

654
00:19:49,760 --> 00:19:51,520
track what other sites are using the

655
00:19:51,520 --> 00:19:53,360
same analytics codes as our

656
00:19:53,360 --> 00:19:56,080
main domain so here i've given i've made

657
00:19:56,080 --> 00:19:57,840
a free account with twitch.tv

658
00:19:57,840 --> 00:19:59,520
and i've get you know i've made a free

659
00:19:59,520 --> 00:20:01,280
account with built with and i've

660
00:20:01,280 --> 00:20:04,080
searched twitch.tv and here you can see

661
00:20:04,080 --> 00:20:05,600
under twitch.tv there's a tab for what's

662
00:20:05,600 --> 00:20:07,520
called relationship profile

663
00:20:07,520 --> 00:20:08,960
and already it starts to give you a

664
00:20:08,960 --> 00:20:10,799
graph at the bottom of the page

665
00:20:10,799 --> 00:20:13,039
uh about other sites that are similar

666
00:20:13,039 --> 00:20:14,960
using the similar tags right

667
00:20:14,960 --> 00:20:16,480
and you can see that you know we

668
00:20:16,480 --> 00:20:19,120
identified twitch con

669
00:20:19,120 --> 00:20:21,440
there's man versus tv there's another

670
00:20:21,440 --> 00:20:23,799
domain twt

671
00:20:23,799 --> 00:20:27,120
tc.tv there's some of their regional sub

672
00:20:27,120 --> 00:20:29,200
branded ones like es dot twitch tv so

673
00:20:29,200 --> 00:20:30,480
you can start to see that we get this

674
00:20:30,480 --> 00:20:31,760
relationship map and you can scroll

675
00:20:31,760 --> 00:20:32,880
through this and see

676
00:20:32,880 --> 00:20:34,240
okay these are the other sites that are

677
00:20:34,240 --> 00:20:36,480
similar to twitch.tv

678
00:20:36,480 --> 00:20:38,000
and then you can click on any of the

679
00:20:38,000 --> 00:20:39,679
individual trackers

680
00:20:39,679 --> 00:20:42,080
and drill drill into that specific

681
00:20:42,080 --> 00:20:43,840
tracker not just amalgamation of all the

682
00:20:43,840 --> 00:20:45,679
trackers and see what other

683
00:20:45,679 --> 00:20:47,600
domains that that tracker is on or

684
00:20:47,600 --> 00:20:49,520
sub-domains that tracker is on so

685
00:20:49,520 --> 00:20:50,960
you could do this through the for

686
00:20:50,960 --> 00:20:52,559
through the built with website um you

687
00:20:52,559 --> 00:20:54,159
can also do it through the chrome

688
00:20:54,159 --> 00:20:55,360
extension which is in the upper right

689
00:20:55,360 --> 00:20:56,640
hand side they just have this little

690
00:20:56,640 --> 00:20:57,919
built with button that you can click on

691
00:20:57,919 --> 00:20:59,440
and then click relationship

692
00:20:59,440 --> 00:21:00,320
and it will give you all this

693
00:21:00,320 --> 00:21:01,760
information and i keep that running in

694
00:21:01,760 --> 00:21:02,720
my browser

695
00:21:02,720 --> 00:21:04,240
almost all the time i use built with

696
00:21:04,240 --> 00:21:05,600
multiple stuff not only for this

697
00:21:05,600 --> 00:21:06,960
relationship thing but also

698
00:21:06,960 --> 00:21:10,400
tech stack information as well so we can

699
00:21:10,400 --> 00:21:11,360
start to gather more c

700
00:21:11,360 --> 00:21:14,559
domains with this method now i

701
00:21:14,559 --> 00:21:16,640
like to offer some uh you know some

702
00:21:16,640 --> 00:21:18,640
command line um

703
00:21:18,640 --> 00:21:20,400
different uh methods for doing this

704
00:21:20,400 --> 00:21:21,679
stuff in case you want to automate it

705
00:21:21,679 --> 00:21:23,039
and make your own recon framework right

706
00:21:23,039 --> 00:21:24,159
that's what a lot of people are into

707
00:21:24,159 --> 00:21:24,960
these days

708
00:21:24,960 --> 00:21:26,799
as soon as i did the last version of

709
00:21:26,799 --> 00:21:28,159
this talk uh

710
00:21:28,159 --> 00:21:31,360
a hunter by the name of malik

711
00:21:31,360 --> 00:21:33,919
came out and built a uh awesome python

712
00:21:33,919 --> 00:21:34,799
script

713
00:21:34,799 --> 00:21:37,039
that basically uh does this for you it

714
00:21:37,039 --> 00:21:38,000
uses built with

715
00:21:38,000 --> 00:21:40,080
or uses built with it parses out the

716
00:21:40,080 --> 00:21:41,840
relationship information so

717
00:21:41,840 --> 00:21:43,600
the link is there and now you can do

718
00:21:43,600 --> 00:21:45,200
this on the command line and you can see

719
00:21:45,200 --> 00:21:47,679
here he does an example of uber.com

720
00:21:47,679 --> 00:21:48,880
and then you can see that this is

721
00:21:48,880 --> 00:21:50,480
everything related to uber.com now

722
00:21:50,480 --> 00:21:51,039
there's

723
00:21:51,039 --> 00:21:52,640
a tiny bit of lack of contextual

724
00:21:52,640 --> 00:21:54,320
information because you don't know which

725
00:21:54,320 --> 00:21:56,559
ad or analytics tracker matched your

726
00:21:56,559 --> 00:21:58,400
main domain or whatever

727
00:21:58,400 --> 00:21:59,840
but you know like ones that are

728
00:21:59,840 --> 00:22:01,280
immediately interesting in this list are

729
00:22:01,280 --> 00:22:01,840
like

730
00:22:01,840 --> 00:22:05,840
daftar uber and drive.driveuber.cod.nz

731
00:22:05,840 --> 00:22:07,120
and anything with uber in it right

732
00:22:07,120 --> 00:22:09,039
originally could be expansion

733
00:22:09,039 --> 00:22:12,480
of scope here for us so awesome tool

734
00:22:12,480 --> 00:22:14,960
that's great or now what you can do

735
00:22:14,960 --> 00:22:16,480
which is more fringe and you know

736
00:22:16,480 --> 00:22:17,520
probably a little bit more manual

737
00:22:17,520 --> 00:22:18,480
although i'm sure there's some tools

738
00:22:18,480 --> 00:22:19,600
that do this i haven't really found that

739
00:22:19,600 --> 00:22:21,120
are super

740
00:22:21,120 --> 00:22:23,520
effective yet but you can just do some

741
00:22:23,520 --> 00:22:25,120
quick google foo right some google

742
00:22:25,120 --> 00:22:26,559
searching right and one of the ways i

743
00:22:26,559 --> 00:22:28,240
like to do this is you can google

744
00:22:28,240 --> 00:22:30,960
you know things like the copyright text

745
00:22:30,960 --> 00:22:32,799
the terms of service and the privacy

746
00:22:32,799 --> 00:22:33,919
policy text

747
00:22:33,919 --> 00:22:35,280
and you can just put these in quotes

748
00:22:35,280 --> 00:22:37,760
with different years in them right

749
00:22:37,760 --> 00:22:39,360
make sure to try a couple different

750
00:22:39,360 --> 00:22:41,600
years in fact the older you can find

751
00:22:41,600 --> 00:22:42,320
stuff with this

752
00:22:42,320 --> 00:22:45,840
like 2018 2017 actually means that the

753
00:22:45,840 --> 00:22:47,520
site hasn't probably been updated

754
00:22:47,520 --> 00:22:48,799
significantly

755
00:22:48,799 --> 00:22:51,440
um you know in in a while so here i've

756
00:22:51,440 --> 00:22:52,400
searched you know

757
00:22:52,400 --> 00:22:54,480
copyright 2019 twitter interactive and

758
00:22:54,480 --> 00:22:55,840
you're all twitch

759
00:22:55,840 --> 00:22:57,760
and so just try a bunch of different

760
00:22:57,760 --> 00:22:59,760
versions of that or snippets of their

761
00:22:59,760 --> 00:23:01,120
terms of service or snippets to their

762
00:23:01,120 --> 00:23:03,120
privacy policy and see if you can

763
00:23:03,120 --> 00:23:06,000
start to find domains that maybe weren't

764
00:23:06,000 --> 00:23:07,520
anyplace else

765
00:23:07,520 --> 00:23:09,520
next is you have you have showdon so a

766
00:23:09,520 --> 00:23:11,120
lot of pen testers and bug bounty

767
00:23:11,120 --> 00:23:11,840
hunters are

768
00:23:11,840 --> 00:23:13,280
used to showdown it's actually not one

769
00:23:13,280 --> 00:23:15,120
of my super specialties like i'm not

770
00:23:15,120 --> 00:23:15,919
like a

771
00:23:15,919 --> 00:23:17,360
not as strong as i am in showdown as i

772
00:23:17,360 --> 00:23:19,039
am in google or something like that

773
00:23:19,039 --> 00:23:21,120
um you know with the operators and

774
00:23:21,120 --> 00:23:22,400
things like that but

775
00:23:22,400 --> 00:23:24,240
but showdown has a lot of information

776
00:23:24,240 --> 00:23:26,799
showed us an infrastructure spider that

777
00:23:26,799 --> 00:23:28,799
goes out there and parses and keeps

778
00:23:28,799 --> 00:23:31,360
http responses header information does

779
00:23:31,360 --> 00:23:33,200
technology profiling

780
00:23:33,200 --> 00:23:35,039
um you know and then stores it in this

781
00:23:35,039 --> 00:23:36,559
giant database and you can just query it

782
00:23:36,559 --> 00:23:38,080
with all kinds of great operators to

783
00:23:38,080 --> 00:23:38,720
find

784
00:23:38,720 --> 00:23:40,799
infrastructure or things related to

785
00:23:40,799 --> 00:23:42,080
certain organizations stuff like that

786
00:23:42,080 --> 00:23:43,919
right so you can search twitch.tv as a

787
00:23:43,919 --> 00:23:45,039
free form here and you get some

788
00:23:45,039 --> 00:23:46,000
information

789
00:23:46,000 --> 00:23:47,679
you could also search the organization

790
00:23:47,679 --> 00:23:50,000
name on showdown you could search

791
00:23:50,000 --> 00:23:51,360
uh a whole bunch of different ways to

792
00:23:51,360 --> 00:23:53,279
try to find gems that have been

793
00:23:53,279 --> 00:23:56,640
you know captured in twitch.tv uh

794
00:23:56,640 --> 00:23:58,159
you know with you know related to the

795
00:23:58,159 --> 00:24:00,000
twitch.tv domain so you can try to use

796
00:24:00,000 --> 00:24:01,520
showdown to do some of this and

797
00:24:01,520 --> 00:24:03,200
i actually use it in a later workflow

798
00:24:03,200 --> 00:24:04,960
which i'll show you which is sub domain

799
00:24:04,960 --> 00:24:06,400
enumeration i'll use a

800
00:24:06,400 --> 00:24:08,960
a tool that uses queries to show it on

801
00:24:08,960 --> 00:24:09,919
to go out and

802
00:24:09,919 --> 00:24:12,080
try to pull subdomains out of out of

803
00:24:12,080 --> 00:24:14,159
showdown which is great

804
00:24:14,159 --> 00:24:17,520
okay so now we we basically focus on

805
00:24:17,520 --> 00:24:18,000
expanding

806
00:24:18,000 --> 00:24:20,320
our scope by finding a whole bunch of

807
00:24:20,320 --> 00:24:21,279
seed domains

808
00:24:21,279 --> 00:24:22,799
now what we're going to do with those c

809
00:24:22,799 --> 00:24:25,279
domains is try to find subdomains

810
00:24:25,279 --> 00:24:28,240
under those seeds

811
00:24:28,880 --> 00:24:30,720
so subdomain enumeration i have three

812
00:24:30,720 --> 00:24:32,480
main categories of what i do

813
00:24:32,480 --> 00:24:34,799
uh linked in javascript discovery

814
00:24:34,799 --> 00:24:36,320
subdomain scraping

815
00:24:36,320 --> 00:24:38,159
and sub domain brute force and then some

816
00:24:38,159 --> 00:24:39,440
other auxiliary stuff that

817
00:24:39,440 --> 00:24:43,200
maybe fits somewhere in between

818
00:24:43,200 --> 00:24:45,279
so linked in javascript discovery right

819
00:24:45,279 --> 00:24:47,039
we're looking for sub domains now right

820
00:24:47,039 --> 00:24:49,600
so the first thing that i do

821
00:24:49,600 --> 00:24:52,320
is is this idea called linked discovery

822
00:24:52,320 --> 00:24:53,440
and i use

823
00:24:53,440 --> 00:24:55,520
i use burp suite to do mine most of the

824
00:24:55,520 --> 00:24:56,720
time

825
00:24:56,720 --> 00:24:57,840
and the screenshots i'm going to show

826
00:24:57,840 --> 00:25:00,720
you are broke 1.7 i just have

827
00:25:00,720 --> 00:25:03,360
i just don't like burp 2.0 gui right the

828
00:25:03,360 --> 00:25:05,200
spider is hard to instigate

829
00:25:05,200 --> 00:25:08,320
the crawler and the scanner

830
00:25:08,320 --> 00:25:10,720
are not as controllable as they were in

831
00:25:10,720 --> 00:25:12,960
burp 1.7's ui

832
00:25:12,960 --> 00:25:14,320
they may be better they may have more

833
00:25:14,320 --> 00:25:16,480
vulnerability checks but for the

834
00:25:16,480 --> 00:25:19,039
crawling i can usually work with 1.7 but

835
00:25:19,039 --> 00:25:20,240
i do run

836
00:25:20,240 --> 00:25:22,960
2.0 as well in a separate instance so

837
00:25:22,960 --> 00:25:24,080
what i'm going to show you right now is

838
00:25:24,080 --> 00:25:27,600
this process inside of 1.7

839
00:25:27,600 --> 00:25:29,600
so what we're going to do here is we're

840
00:25:29,600 --> 00:25:31,279
basically going to visit our side

841
00:25:31,279 --> 00:25:33,600
our site using burp right and so i've

842
00:25:33,600 --> 00:25:35,360
visited twitch.tv here which is the

843
00:25:35,360 --> 00:25:36,400
example

844
00:25:36,400 --> 00:25:38,640
and all them all of a sudden my site and

845
00:25:38,640 --> 00:25:40,320
my site map just blows up right it's

846
00:25:40,320 --> 00:25:40,720
just

847
00:25:40,720 --> 00:25:42,640
like it's filled with everything that it

848
00:25:42,640 --> 00:25:44,080
can see either linked

849
00:25:44,080 --> 00:25:45,760
or that has been requested as soon as i

850
00:25:45,760 --> 00:25:47,360
landed on twitch.tv

851
00:25:47,360 --> 00:25:49,520
which is a ton of stuff so first we have

852
00:25:49,520 --> 00:25:51,440
to kind of pair it down with

853
00:25:51,440 --> 00:25:54,240
a rule um so the first thing that we do

854
00:25:54,240 --> 00:25:55,760
is we go into target and we go into

855
00:25:55,760 --> 00:25:56,720
scope

856
00:25:56,720 --> 00:25:58,000
and we click the little button that says

857
00:25:58,000 --> 00:26:00,000
use advanced scope control and then

858
00:26:00,000 --> 00:26:01,279
we're going to add

859
00:26:01,279 --> 00:26:03,360
just a regex here and i'm just going to

860
00:26:03,360 --> 00:26:05,120
say twitch

861
00:26:05,120 --> 00:26:06,720
as the first regex i could add and you

862
00:26:06,720 --> 00:26:08,960
can add as many of these as you want

863
00:26:08,960 --> 00:26:11,200
as a rule as a target scope rule now

864
00:26:11,200 --> 00:26:13,200
when we go back to our target and site

865
00:26:13,200 --> 00:26:14,799
map now i can click that little box that

866
00:26:14,799 --> 00:26:16,799
says show only in scope items and that

867
00:26:16,799 --> 00:26:19,039
will significantly

868
00:26:19,039 --> 00:26:21,039
significantly bring down what you're

869
00:26:21,039 --> 00:26:23,679
viewing in the site tree

870
00:26:23,679 --> 00:26:26,320
okay so after that's done we get

871
00:26:26,320 --> 00:26:28,320
everything that has twitch.tv in

872
00:26:28,320 --> 00:26:30,240
somewhere in the you know in the url

873
00:26:30,240 --> 00:26:31,840
right which is great this is a lot to

874
00:26:31,840 --> 00:26:33,039
work with right

875
00:26:33,039 --> 00:26:35,520
already this is a lot of scope well we

876
00:26:35,520 --> 00:26:36,640
want to try to

877
00:26:36,640 --> 00:26:38,320
expand even more on this so what you do

878
00:26:38,320 --> 00:26:40,320
is you select all of these

879
00:26:40,320 --> 00:26:42,720
and you run the spider on them and then

880
00:26:42,720 --> 00:26:43,600
if you don't

881
00:26:43,600 --> 00:26:45,200
deselect them it actually gives you an

882
00:26:45,200 --> 00:26:47,120
idea of how much more you found

883
00:26:47,120 --> 00:26:50,320
so once the spider is finished

884
00:26:50,320 --> 00:26:52,960
you can see that we found a whole bunch

885
00:26:52,960 --> 00:26:54,480
of new stuff

886
00:26:54,480 --> 00:26:56,960
um in white than we had originally right

887
00:26:56,960 --> 00:26:58,640
a ton of subdomains

888
00:26:58,640 --> 00:27:00,799
that are linked or are actually

889
00:27:00,799 --> 00:27:02,559
requested when you spider these sites so

890
00:27:02,559 --> 00:27:04,240
when you try to execute them right

891
00:27:04,240 --> 00:27:06,960
and then your next uh phase after this

892
00:27:06,960 --> 00:27:08,799
would be to select everything again and

893
00:27:08,799 --> 00:27:09,840
spider it again

894
00:27:09,840 --> 00:27:11,520
and just uh you do this over and over

895
00:27:11,520 --> 00:27:12,480
again so you weren't getting any more

896
00:27:12,480 --> 00:27:13,440
results

897
00:27:13,440 --> 00:27:15,279
and that's everything that's linked with

898
00:27:15,279 --> 00:27:16,960
any domain that has twitch.t

899
00:27:16,960 --> 00:27:20,000
or twitch in the url which gives you

900
00:27:20,000 --> 00:27:22,240
a ton of scope to work with you can see

901
00:27:22,240 --> 00:27:23,919
there's you know many sites

902
00:27:23,919 --> 00:27:25,360
in your site tree now that you have to

903
00:27:25,360 --> 00:27:27,279
investigate you just go to each one and

904
00:27:27,279 --> 00:27:28,240
you start hacking

905
00:27:28,240 --> 00:27:30,080
you also i've also gotten some that are

906
00:27:30,080 --> 00:27:31,919
not the seed that i've gotten some new

907
00:27:31,919 --> 00:27:33,360
seed domains right this is a hybrid

908
00:27:33,360 --> 00:27:34,000
technique you'll

909
00:27:34,000 --> 00:27:36,399
get sub domains and seed domains so i

910
00:27:36,399 --> 00:27:37,600
got twitch app and

911
00:27:37,600 --> 00:27:40,600
x twitch.tv and twitch server twitch

912
00:27:40,600 --> 00:27:42,880
svc.net so these are new seed domains

913
00:27:42,880 --> 00:27:44,240
that we can go back

914
00:27:44,240 --> 00:27:46,880
and add to our seed domain our seed

915
00:27:46,880 --> 00:27:48,880
domain list and now we can do subdomain

916
00:27:48,880 --> 00:27:51,919
enumeration on them as well

917
00:27:53,279 --> 00:27:55,440
so how do you get this list once you

918
00:27:55,440 --> 00:27:56,559
have the site tree

919
00:27:56,559 --> 00:27:59,679
you know all spidered recursively well

920
00:27:59,679 --> 00:28:02,080
there's no great way to do it in fact

921
00:28:02,080 --> 00:28:03,679
i'm looking for someone to write

922
00:28:03,679 --> 00:28:06,320
you know some type of tool to do this or

923
00:28:06,320 --> 00:28:07,760
i might just write it myself eventually

924
00:28:07,760 --> 00:28:08,559
if i get

925
00:28:08,559 --> 00:28:11,679
frustrated enough so the way to do it is

926
00:28:11,679 --> 00:28:12,799
you have to have burp pro

927
00:28:12,799 --> 00:28:14,399
and you select everything in your site

928
00:28:14,399 --> 00:28:16,000
tree and you go right click

929
00:28:16,000 --> 00:28:17,679
and choose engagement tools and analyze

930
00:28:17,679 --> 00:28:20,159
target and that generates this html

931
00:28:20,159 --> 00:28:20,960
report

932
00:28:20,960 --> 00:28:23,679
this html report um when you generate

933
00:28:23,679 --> 00:28:24,320
the html

934
00:28:24,320 --> 00:28:25,760
report you open it up and then you just

935
00:28:25,760 --> 00:28:28,399
copy that list under target analysis and

936
00:28:28,399 --> 00:28:29,200
that's

937
00:28:29,200 --> 00:28:30,880
that's unique list of you know all of

938
00:28:30,880 --> 00:28:32,480
your in-scope

939
00:28:32,480 --> 00:28:33,919
stuff right there because you could just

940
00:28:33,919 --> 00:28:36,159
copy all of the urls

941
00:28:36,159 --> 00:28:38,480
but that would be a lot of data you're

942
00:28:38,480 --> 00:28:39,520
talking about since your

943
00:28:39,520 --> 00:28:40,880
spyder has spidered all this stuff

944
00:28:40,880 --> 00:28:42,080
you're talking about hundreds of

945
00:28:42,080 --> 00:28:43,760
thousands of

946
00:28:43,760 --> 00:28:46,480
urls that you know then you're gonna

947
00:28:46,480 --> 00:28:48,080
have to paste a hundred thousand urls in

948
00:28:48,080 --> 00:28:49,520
a text file and then you're gonna have

949
00:28:49,520 --> 00:28:50,000
to

950
00:28:50,000 --> 00:28:53,200
you know like uh sort grep unique cut

951
00:28:53,200 --> 00:28:55,919
awk said whatever you're gonna do to

952
00:28:55,919 --> 00:28:57,360
bring that down to unique

953
00:28:57,360 --> 00:29:00,159
urls so this way is actually way faster

954
00:29:00,159 --> 00:29:03,200
for me most of the time

955
00:29:03,679 --> 00:29:05,840
all right so link discovery you know

956
00:29:05,840 --> 00:29:07,600
used to be something i only did

957
00:29:07,600 --> 00:29:09,279
in burp suite because it just had an

958
00:29:09,279 --> 00:29:10,720
effective spider and i didn't really

959
00:29:10,720 --> 00:29:12,240
have a lot of effective spiders out

960
00:29:12,240 --> 00:29:13,600
there on the command line to work with

961
00:29:13,600 --> 00:29:14,159
but

962
00:29:14,159 --> 00:29:15,840
that has changed in the past year and a

963
00:29:15,840 --> 00:29:18,080
half right there are two projects

964
00:29:18,080 --> 00:29:20,640
uh one by um an awesome person and

965
00:29:20,640 --> 00:29:21,120
hunter

966
00:29:21,120 --> 00:29:22,480
called hack luke which is called hack

967
00:29:22,480 --> 00:29:24,399
crawler which will basically

968
00:29:24,399 --> 00:29:27,919
spider a site and another one called

969
00:29:27,919 --> 00:29:28,799
ghost spider

970
00:29:28,799 --> 00:29:31,200
which will spider a site so you can see

971
00:29:31,200 --> 00:29:32,640
they both give you back

972
00:29:32,640 --> 00:29:35,200
end points as well as subdomains as well

973
00:29:35,200 --> 00:29:38,080
as they will mark javascript files

974
00:29:38,080 --> 00:29:41,200
they will also parse your robots.txt to

975
00:29:41,200 --> 00:29:43,039
get those links so they've got a lot of

976
00:29:43,039 --> 00:29:44,480
cool little features in them

977
00:29:44,480 --> 00:29:46,480
and you could probably institute and

978
00:29:46,480 --> 00:29:48,240
script up yourself the link discovery

979
00:29:48,240 --> 00:29:50,000
process using these spiders

980
00:29:50,000 --> 00:29:52,880
um i still do it most of the time inside

981
00:29:52,880 --> 00:29:53,600
of burp

982
00:29:53,600 --> 00:29:55,840
but it you know someday i might actually

983
00:29:55,840 --> 00:29:58,000
go with you know one of these tools and

984
00:29:58,000 --> 00:29:58,399
write

985
00:29:58,399 --> 00:30:01,678
you know my own process for this

986
00:30:02,799 --> 00:30:04,480
okay so the next thing is you can get

987
00:30:04,480 --> 00:30:05,840
some sub domains

988
00:30:05,840 --> 00:30:07,919
um you can get some sub domains from the

989
00:30:07,919 --> 00:30:09,440
javascript files that you find on these

990
00:30:09,440 --> 00:30:10,640
pages right using

991
00:30:10,640 --> 00:30:13,200
using burp you can parse out all the js

992
00:30:13,200 --> 00:30:15,600
files that exist

993
00:30:15,600 --> 00:30:17,760
and you can save them and then you can

994
00:30:17,760 --> 00:30:19,600
you know run tools on them but uh

995
00:30:19,600 --> 00:30:21,520
but this tool in specific has like an

996
00:30:21,520 --> 00:30:22,799
extra function with it that i really

997
00:30:22,799 --> 00:30:23,760
like it's called sub

998
00:30:23,760 --> 00:30:25,760
it's called sub domain nizer and what it

999
00:30:25,760 --> 00:30:28,240
does is it'll take a javascript file

1000
00:30:28,240 --> 00:30:30,480
a single javascript file and not only

1001
00:30:30,480 --> 00:30:31,760
will it parse it for

1002
00:30:31,760 --> 00:30:33,679
subdomains it'll also parse it for cloud

1003
00:30:33,679 --> 00:30:35,200
services that they're using like sas

1004
00:30:35,200 --> 00:30:36,320
services

1005
00:30:36,320 --> 00:30:38,880
and then it'll also parse it for keys it

1006
00:30:38,880 --> 00:30:41,279
uses the shannon entropy formula to try

1007
00:30:41,279 --> 00:30:42,000
to find

1008
00:30:42,000 --> 00:30:44,559
things that look like keys in javascript

1009
00:30:44,559 --> 00:30:45,760
source code so

1010
00:30:45,760 --> 00:30:48,559
um it's also really nice it's still in

1011
00:30:48,559 --> 00:30:50,080
development and probably needs

1012
00:30:50,080 --> 00:30:51,440
you know a little bit more work but but

1013
00:30:51,440 --> 00:30:52,720
definitely it pulls back some

1014
00:30:52,720 --> 00:30:54,480
interesting results in large javascript

1015
00:30:54,480 --> 00:30:55,279
files

1016
00:30:55,279 --> 00:30:57,200
which is awesome and then if you run

1017
00:30:57,200 --> 00:30:58,320
this over everything you can start to

1018
00:30:58,320 --> 00:31:00,080
find some keys and stuff like that

1019
00:31:00,080 --> 00:31:01,600
if you're just looking at scraping

1020
00:31:01,600 --> 00:31:03,760
subdomains from javascript files that

1021
00:31:03,760 --> 00:31:05,760
you don't want that extra little bit of

1022
00:31:05,760 --> 00:31:09,039
cloud services and key analysis you can

1023
00:31:09,039 --> 00:31:11,279
use a tool called subscraper by cillian

1024
00:31:11,279 --> 00:31:12,640
collins which is awesome

1025
00:31:12,640 --> 00:31:15,919
so yeah okay

1026
00:31:15,919 --> 00:31:17,440
so we're still finding subdomains but

1027
00:31:17,440 --> 00:31:18,720
we're gonna use a different method now

1028
00:31:18,720 --> 00:31:20,399
which is subdomain scraping which is

1029
00:31:20,399 --> 00:31:22,559
what a lot of you are probably used to

1030
00:31:22,559 --> 00:31:24,159
when you use tools like a mass

1031
00:31:24,159 --> 00:31:26,720
or sub finder things like that so what

1032
00:31:26,720 --> 00:31:28,000
subdomain scraping is

1033
00:31:28,000 --> 00:31:31,200
is is basically going out to

1034
00:31:31,200 --> 00:31:32,559
a whole bunch of different sources on

1035
00:31:32,559 --> 00:31:33,919
the internet and scraping their

1036
00:31:33,919 --> 00:31:35,760
databases and pulling back any

1037
00:31:35,760 --> 00:31:37,120
information they have on your target

1038
00:31:37,120 --> 00:31:37,760
right

1039
00:31:37,760 --> 00:31:38,960
uh there's a whole bunch of tools that

1040
00:31:38,960 --> 00:31:41,120
do this and so the tools that exist

1041
00:31:41,120 --> 00:31:44,240
nowadays are probably only as good

1042
00:31:44,240 --> 00:31:46,000
as their sources right and i've listed

1043
00:31:46,000 --> 00:31:47,760
some of the sources out there on the

1044
00:31:47,760 --> 00:31:48,480
internet

1045
00:31:48,480 --> 00:31:49,919
you know infrastructure sources are

1046
00:31:49,919 --> 00:31:52,080
things like census rob texts the wayback

1047
00:31:52,080 --> 00:31:52,720
machine

1048
00:31:52,720 --> 00:31:55,600
dns dumpster netcraft etc you obviously

1049
00:31:55,600 --> 00:31:57,919
know all the search engine sources

1050
00:31:57,919 --> 00:31:59,039
you can there's a whole bunch of

1051
00:31:59,039 --> 00:32:00,559
certificate projects that have domain

1052
00:32:00,559 --> 00:32:02,480
information in them and then security

1053
00:32:02,480 --> 00:32:04,000
projects which have domain information

1054
00:32:04,000 --> 00:32:06,080
in them so all of these sites if you

1055
00:32:06,080 --> 00:32:07,760
were to go to them individually there's

1056
00:32:07,760 --> 00:32:09,519
usually a search field to look for

1057
00:32:09,519 --> 00:32:11,440
something you know related to a domain

1058
00:32:11,440 --> 00:32:13,600
malware or certificate data or

1059
00:32:13,600 --> 00:32:14,159
infrastructure

1060
00:32:14,159 --> 00:32:16,640
data or just searching that domain right

1061
00:32:16,640 --> 00:32:17,519
and so these tools

1062
00:32:17,519 --> 00:32:19,360
have all been specially built to parse

1063
00:32:19,360 --> 00:32:20,880
these and try to find

1064
00:32:20,880 --> 00:32:22,880
any references to you know if we're

1065
00:32:22,880 --> 00:32:25,519
using an example before twitch.tv

1066
00:32:25,519 --> 00:32:27,519
right and these are just some of the

1067
00:32:27,519 --> 00:32:29,200
sources there are many sources that

1068
00:32:29,200 --> 00:32:31,279
these tools are scraping nowadays so

1069
00:32:31,279 --> 00:32:32,480
the next tools we're going to talk about

1070
00:32:32,480 --> 00:32:33,919
do exactly this they scrape these

1071
00:32:33,919 --> 00:32:36,320
sources

1072
00:32:36,399 --> 00:32:37,760
before we get into the tools i'm going

1073
00:32:37,760 --> 00:32:38,880
to talk to you a little about how you

1074
00:32:38,880 --> 00:32:40,240
would do this manually right so here's

1075
00:32:40,240 --> 00:32:40,880
google

1076
00:32:40,880 --> 00:32:42,720
and this is this is just the way that

1077
00:32:42,720 --> 00:32:44,240
you would do it for google right if you

1078
00:32:44,240 --> 00:32:46,000
wanted to scrape google for all of its

1079
00:32:46,000 --> 00:32:48,000
subdomains it knows about twitch.tv it's

1080
00:32:48,000 --> 00:32:49,279
pretty simple

1081
00:32:49,279 --> 00:32:51,200
you would start with site colon

1082
00:32:51,200 --> 00:32:52,880
twitch.tv

1083
00:32:52,880 --> 00:32:54,880
and then you would say google i don't

1084
00:32:54,880 --> 00:32:56,240
want to see anything

1085
00:32:56,240 --> 00:32:58,880
that says dub dub dub twitch.tv right

1086
00:32:58,880 --> 00:33:01,200
and so you say minus www.twitch.tv

1087
00:33:01,200 --> 00:33:02,559
and you'd search that and that would

1088
00:33:02,559 --> 00:33:03,960
give you everything that isn't

1089
00:33:03,960 --> 00:33:05,760
www.twitch.tv so you'll start to see

1090
00:33:05,760 --> 00:33:08,159
other subdomains like link.twitch.com

1091
00:33:08,159 --> 00:33:10,480
and you're like cool in the results that

1092
00:33:10,480 --> 00:33:12,440
you gave me now i don't want to see

1093
00:33:12,440 --> 00:33:14,080
watch.touch.tvx i already know about

1094
00:33:14,080 --> 00:33:16,080
that or dev.twitch.tv and you just keep

1095
00:33:16,080 --> 00:33:18,000
on iteratively minusing these out and

1096
00:33:18,000 --> 00:33:19,440
doing searches until there's nothing

1097
00:33:19,440 --> 00:33:20,080
left

1098
00:33:20,080 --> 00:33:21,600
and now you've enumerated every

1099
00:33:21,600 --> 00:33:23,679
subdomain that google possibly knows

1100
00:33:23,679 --> 00:33:24,880
about twitch.tv

1101
00:33:24,880 --> 00:33:26,960
so you know this would be the manual way

1102
00:33:26,960 --> 00:33:28,640
that you do this subdomain scraping on a

1103
00:33:28,640 --> 00:33:30,960
search engine

1104
00:33:30,960 --> 00:33:32,960
there are tools however to do this for

1105
00:33:32,960 --> 00:33:34,159
you and so

1106
00:33:34,159 --> 00:33:36,080
when you're doing subdomain scraping a

1107
00:33:36,080 --> 00:33:37,279
mass is

1108
00:33:37,279 --> 00:33:39,519
one of the kings of doing this along

1109
00:33:39,519 --> 00:33:40,559
with the tool we're going to talk about

1110
00:33:40,559 --> 00:33:41,039
next

1111
00:33:41,039 --> 00:33:42,960
so we've already said a mass is written

1112
00:33:42,960 --> 00:33:44,559
by jeff foley and the mass team it's an

1113
00:33:44,559 --> 00:33:45,039
obos

1114
00:33:45,039 --> 00:33:47,679
project it's it's an awesome script and

1115
00:33:47,679 --> 00:33:48,559
the

1116
00:33:48,559 --> 00:33:50,240
the source that does it which is not a

1117
00:33:50,240 --> 00:33:53,360
correct in the screenshot amass.d

1118
00:33:53,360 --> 00:33:55,919
a d twitch.tv would not work anymore it

1119
00:33:55,919 --> 00:33:56,559
has to be

1120
00:33:56,559 --> 00:33:59,679
a mass enum d twitch.tv

1121
00:33:59,679 --> 00:34:02,320
but it will go out to all these sources

1122
00:34:02,320 --> 00:34:03,279
and it will

1123
00:34:03,279 --> 00:34:04,799
bring you back all the subdomain data

1124
00:34:04,799 --> 00:34:06,720
which is great because you can just

1125
00:34:06,720 --> 00:34:07,840
point it and go and get all your

1126
00:34:07,840 --> 00:34:10,480
subdomains

1127
00:34:10,800 --> 00:34:14,000
amass also does some awesome things with

1128
00:34:14,000 --> 00:34:16,399
basically giving you a table at the end

1129
00:34:16,399 --> 00:34:18,000
of an enum scan

1130
00:34:18,000 --> 00:34:19,679
which is really cool and i think this

1131
00:34:19,679 --> 00:34:21,760
table is super underplayed when it comes

1132
00:34:21,760 --> 00:34:23,040
to bounty hunting right

1133
00:34:23,040 --> 00:34:25,199
what this does is it gives you a really

1134
00:34:25,199 --> 00:34:26,320
good feel

1135
00:34:26,320 --> 00:34:27,839
of where it tells you where these

1136
00:34:27,839 --> 00:34:30,480
subdomains were found what ip range

1137
00:34:30,480 --> 00:34:32,960
and what asn they belong to which is

1138
00:34:32,960 --> 00:34:34,399
really useful for you as a hunter i

1139
00:34:34,399 --> 00:34:35,599
don't see a lot of hunters using this

1140
00:34:35,599 --> 00:34:37,359
table to its full potential right so if

1141
00:34:37,359 --> 00:34:40,800
we ran it here on twitch.tv

1142
00:34:40,800 --> 00:34:42,960
this table tells us that a large portion

1143
00:34:42,960 --> 00:34:44,800
of the majority is in amazon which makes

1144
00:34:44,800 --> 00:34:45,918
sense because they were acquired by

1145
00:34:45,918 --> 00:34:46,960
amazon right but

1146
00:34:46,960 --> 00:34:49,520
also they still have their own asn

1147
00:34:49,520 --> 00:34:52,719
justin tv here at 46 489 which we

1148
00:34:52,719 --> 00:34:56,000
knew earlier and they're also in

1149
00:34:56,000 --> 00:34:57,280
you know some third parties they're

1150
00:34:57,280 --> 00:34:59,599
using sendgrid for mail

1151
00:34:59,599 --> 00:35:02,800
they use fastly so this gives us some

1152
00:35:02,800 --> 00:35:04,160
more information about how their

1153
00:35:04,160 --> 00:35:05,280
infrastructure

1154
00:35:05,280 --> 00:35:07,040
is kind of done right because you know

1155
00:35:07,040 --> 00:35:08,560
we're pulling this all from third-party

1156
00:35:08,560 --> 00:35:10,000
sources on the internet

1157
00:35:10,000 --> 00:35:12,720
and you know just because a name a cname

1158
00:35:12,720 --> 00:35:14,160
has been registered or a subdomain has

1159
00:35:14,160 --> 00:35:14,800
been

1160
00:35:14,800 --> 00:35:17,119
uh instantiated it doesn't mean it's all

1161
00:35:17,119 --> 00:35:18,240
going to be in the same network so this

1162
00:35:18,240 --> 00:35:20,320
is good information for us to understand

1163
00:35:20,320 --> 00:35:22,800
in fact i've done this before with enum

1164
00:35:22,800 --> 00:35:24,720
and the table will give me back an

1165
00:35:24,720 --> 00:35:27,040
asn that i failed to gather in the

1166
00:35:27,040 --> 00:35:28,720
earlier part of the methodology so i'll

1167
00:35:28,720 --> 00:35:30,560
go back and i'll start the process over

1168
00:35:30,560 --> 00:35:31,680
with that asn

1169
00:35:31,680 --> 00:35:33,359
that i now know is associated to my

1170
00:35:33,359 --> 00:35:35,839
target so this table

1171
00:35:35,839 --> 00:35:38,400
super sweet

1172
00:35:38,880 --> 00:35:41,839
all right the next tool is uh is called

1173
00:35:41,839 --> 00:35:42,960
subfinder and this

1174
00:35:42,960 --> 00:35:44,880
this is you know one that's neck and

1175
00:35:44,880 --> 00:35:46,000
neck with the mass

1176
00:35:46,000 --> 00:35:47,520
all the time they're always releasing

1177
00:35:47,520 --> 00:35:49,280
new sources new features

1178
00:35:49,280 --> 00:35:51,440
uh they're both great honestly in fact

1179
00:35:51,440 --> 00:35:52,880
um subfinder

1180
00:35:52,880 --> 00:35:54,079
just incorporated something i'm going to

1181
00:35:54,079 --> 00:35:56,640
talk about uh in a couple slides about

1182
00:35:56,640 --> 00:36:00,079
parsing subdomains from from github but

1183
00:36:00,079 --> 00:36:02,400
subfinder was written by iceman and

1184
00:36:02,400 --> 00:36:03,760
michael skelton

1185
00:36:03,760 --> 00:36:05,920
also known as kadingo a good friend of

1186
00:36:05,920 --> 00:36:07,520
mine and

1187
00:36:07,520 --> 00:36:09,599
it is an epic tool recently it's been

1188
00:36:09,599 --> 00:36:11,599
taken over by the project discovery io

1189
00:36:11,599 --> 00:36:13,520
team which is a team that's

1190
00:36:13,520 --> 00:36:15,440
more than just iceman but a whole bunch

1191
00:36:15,440 --> 00:36:16,720
of people who are

1192
00:36:16,720 --> 00:36:18,880
building this massive recon framework

1193
00:36:18,880 --> 00:36:19,839
and uh

1194
00:36:19,839 --> 00:36:21,599
and releasing some really stellar

1195
00:36:21,599 --> 00:36:23,760
individual tools for bounty hunting

1196
00:36:23,760 --> 00:36:25,359
so subfinder is the same idea right you

1197
00:36:25,359 --> 00:36:27,280
give it a domain and it will go out to

1198
00:36:27,280 --> 00:36:28,160
all these sources

1199
00:36:28,160 --> 00:36:30,079
and pull back subdomain data for you

1200
00:36:30,079 --> 00:36:32,880
which is awesome

1201
00:36:33,440 --> 00:36:34,720
and if you're wondering i use both of

1202
00:36:34,720 --> 00:36:37,119
these in my automation i use a mass

1203
00:36:37,119 --> 00:36:40,880
and subfinder in parallel

1204
00:36:40,880 --> 00:36:42,880
okay so this is one that i just talked

1205
00:36:42,880 --> 00:36:44,320
about right so

1206
00:36:44,320 --> 00:36:48,079
right now sub finder just implemented

1207
00:36:48,079 --> 00:36:51,359
github scraping into their tool but the

1208
00:36:51,359 --> 00:36:53,760
original idea came from wendell quick

1209
00:36:53,760 --> 00:36:54,400
and

1210
00:36:54,400 --> 00:36:56,240
basically what this does is it uses

1211
00:36:56,240 --> 00:36:57,760
github as a source and none of these

1212
00:36:57,760 --> 00:36:59,119
other tools have done that for a long

1213
00:36:59,119 --> 00:37:00,960
time so you give it

1214
00:37:00,960 --> 00:37:04,480
you give it your github api key

1215
00:37:04,480 --> 00:37:06,480
and then you give it your domain and it

1216
00:37:06,480 --> 00:37:07,520
will go out

1217
00:37:07,520 --> 00:37:10,960
and parse all of this source code

1218
00:37:10,960 --> 00:37:14,560
for subdomains for twitch.tv which is

1219
00:37:14,560 --> 00:37:17,599
quite frankly awesome i found some stuff

1220
00:37:17,599 --> 00:37:19,680
through the github tools that i had not

1221
00:37:19,680 --> 00:37:21,440
found in any other tools

1222
00:37:21,440 --> 00:37:24,560
and made great bounties from these so um

1223
00:37:24,560 --> 00:37:26,160
this is why i put the little fire

1224
00:37:26,160 --> 00:37:27,599
icon you know in the bottom right hand

1225
00:37:27,599 --> 00:37:29,599
corner this is a really effective method

1226
00:37:29,599 --> 00:37:30,960
it's one of my favorite methods right

1227
00:37:30,960 --> 00:37:31,839
now

1228
00:37:31,839 --> 00:37:35,040
so uh gwendel uh wrote

1229
00:37:35,040 --> 00:37:38,160
a whole set of github tools

1230
00:37:38,160 --> 00:37:41,200
um not only to do subdomain sub domain

1231
00:37:41,200 --> 00:37:42,800
enumeration but also source code

1232
00:37:42,800 --> 00:37:43,440
searching

1233
00:37:43,440 --> 00:37:45,839
on github from the command line just

1234
00:37:45,839 --> 00:37:47,040
like i think there was five or six

1235
00:37:47,040 --> 00:37:48,000
different tools that did different

1236
00:37:48,000 --> 00:37:49,760
things on github i mostly use this one

1237
00:37:49,760 --> 00:37:51,440
but the whole suite is awesome i've

1238
00:37:51,440 --> 00:37:52,800
supported his tools

1239
00:37:52,800 --> 00:37:55,839
on github monetarily as a donator so i

1240
00:37:55,839 --> 00:37:57,680
can't speak enough about how great they

1241
00:37:57,680 --> 00:37:58,240
are

1242
00:37:58,240 --> 00:37:59,440
and so what you'll need is you'll need

1243
00:37:59,440 --> 00:38:01,440
to register a couple of github accounts

1244
00:38:01,440 --> 00:38:04,160
create api keys and then also the github

1245
00:38:04,160 --> 00:38:04,880
api

1246
00:38:04,880 --> 00:38:06,240
when you're using this tool is kind of

1247
00:38:06,240 --> 00:38:08,480
finicky right it's rate limited

1248
00:38:08,480 --> 00:38:10,320
also like the searches aren't consistent

1249
00:38:10,320 --> 00:38:12,560
if you do the same search twice in a row

1250
00:38:12,560 --> 00:38:15,359
it won't give you the same results so

1251
00:38:15,359 --> 00:38:17,119
what i do is i actually inside of my

1252
00:38:17,119 --> 00:38:18,000
automation run

1253
00:38:18,000 --> 00:38:20,400
this a whole bunch of times five

1254
00:38:20,400 --> 00:38:21,680
iterations and then

1255
00:38:21,680 --> 00:38:23,920
i sleep in between them and then a big

1256
00:38:23,920 --> 00:38:25,040
long sleep

1257
00:38:25,040 --> 00:38:27,359
and then one last run and i cut all that

1258
00:38:27,359 --> 00:38:28,480
into a file

1259
00:38:28,480 --> 00:38:30,640
and then sort and unique it at the end

1260
00:38:30,640 --> 00:38:32,000
and then that usually seems

1261
00:38:32,000 --> 00:38:35,280
to give me a lot of runway

1262
00:38:35,280 --> 00:38:38,480
and consistency now this method has been

1263
00:38:38,480 --> 00:38:40,560
integrated into project discoveries tool

1264
00:38:40,560 --> 00:38:41,520
which is awesome

1265
00:38:41,520 --> 00:38:43,680
and you can do pretty much the same

1266
00:38:43,680 --> 00:38:44,880
things in there

1267
00:38:44,880 --> 00:38:46,720
i haven't tested them side by side to

1268
00:38:46,720 --> 00:38:47,839
see which one is more stable or

1269
00:38:47,839 --> 00:38:49,040
effective or anything like that

1270
00:38:49,040 --> 00:38:50,320
one thing you can say here is that you

1271
00:38:50,320 --> 00:38:52,640
can you can add to both of these tools

1272
00:38:52,640 --> 00:38:54,480
multiple api keys so if one gets

1273
00:38:54,480 --> 00:38:55,680
blacklisted

1274
00:38:55,680 --> 00:38:57,599
then you know you have a backup or

1275
00:38:57,599 --> 00:38:59,040
concurrent you can run two at the same

1276
00:38:59,040 --> 00:39:01,040
time so you can add as many

1277
00:39:01,040 --> 00:39:03,040
api keys as you want to these tools i

1278
00:39:03,040 --> 00:39:04,480
usually run with like five or something

1279
00:39:04,480 --> 00:39:04,960
like that

1280
00:39:04,960 --> 00:39:08,079
so okay the other one i talked about

1281
00:39:08,079 --> 00:39:09,440
earlier is

1282
00:39:09,440 --> 00:39:10,800
showdown right and so there's a tool

1283
00:39:10,800 --> 00:39:12,480
called show subgo

1284
00:39:12,480 --> 00:39:15,200
which is a go tool written to parse

1285
00:39:15,200 --> 00:39:16,880
showdown for anything related to your

1286
00:39:16,880 --> 00:39:18,480
domain so here

1287
00:39:18,480 --> 00:39:20,960
i've passed twitch.tv into this tool and

1288
00:39:20,960 --> 00:39:22,560
it has gone down to showdown and used

1289
00:39:22,560 --> 00:39:24,160
all of the effective search operators

1290
00:39:24,160 --> 00:39:26,240
it's written by incogbytes

1291
00:39:26,240 --> 00:39:27,920
and uh and basically you provided your

1292
00:39:27,920 --> 00:39:29,520
api key for showdown which is pretty

1293
00:39:29,520 --> 00:39:30,640
cheap nowadays

1294
00:39:30,640 --> 00:39:31,839
and it will give you back all of the

1295
00:39:31,839 --> 00:39:33,760
subdomain enumeration

1296
00:39:33,760 --> 00:39:36,480
for showdown so this is great as well i

1297
00:39:36,480 --> 00:39:37,760
add this to

1298
00:39:37,760 --> 00:39:40,000
my stuff this can also be done inside of

1299
00:39:40,000 --> 00:39:41,440
a mass

1300
00:39:41,440 --> 00:39:43,760
the only reason i don't use a mass for

1301
00:39:43,760 --> 00:39:45,520
this particular source

1302
00:39:45,520 --> 00:39:47,040
is that i've found inconsistencies

1303
00:39:47,040 --> 00:39:49,119
sometimes with the parsing of

1304
00:39:49,119 --> 00:39:51,280
shodan and i've gotten more results from

1305
00:39:51,280 --> 00:39:53,200
this script just running it side by side

1306
00:39:53,200 --> 00:39:54,640
so i don't know exactly what's going on

1307
00:39:54,640 --> 00:39:56,240
there but but yeah i use this

1308
00:39:56,240 --> 00:39:59,440
independently inside of my workflow

1309
00:39:59,440 --> 00:40:02,000
all right so the next method for finding

1310
00:40:02,000 --> 00:40:03,119
subdomains

1311
00:40:03,119 --> 00:40:05,760
is this idea of scraping all the cloud

1312
00:40:05,760 --> 00:40:07,520
ranges right so we talked about earlier

1313
00:40:07,520 --> 00:40:08,160
that

1314
00:40:08,160 --> 00:40:10,960
the cloud ranges uh themselves aren't

1315
00:40:10,960 --> 00:40:12,400
going to be in those asn's you pulled

1316
00:40:12,400 --> 00:40:14,000
down in a wide scope bounty

1317
00:40:14,000 --> 00:40:18,000
and so basically what uh we want to do

1318
00:40:18,000 --> 00:40:20,960
is we want to go out to the whole range

1319
00:40:20,960 --> 00:40:23,599
of aws and gcp and azure and that's huge

1320
00:40:23,599 --> 00:40:24,160
right

1321
00:40:24,160 --> 00:40:26,560
and we want to go out and visit all of

1322
00:40:26,560 --> 00:40:28,560
their https sites anything that's ssl

1323
00:40:28,560 --> 00:40:30,560
and then we want to take those ssl certs

1324
00:40:30,560 --> 00:40:33,680
and we want to parse out the sub domains

1325
00:40:33,680 --> 00:40:34,720
from

1326
00:40:34,720 --> 00:40:37,760
from them that are you know in there and

1327
00:40:37,760 --> 00:40:39,280
you can do this yourself you could do

1328
00:40:39,280 --> 00:40:40,880
this with something like mass scan which

1329
00:40:40,880 --> 00:40:41,280
would

1330
00:40:41,280 --> 00:40:44,560
you know still be pretty fast um but

1331
00:40:44,560 --> 00:40:47,680
also uh there is a project by sam herb

1332
00:40:47,680 --> 00:40:49,599
at defcon a couple years ago where he

1333
00:40:49,599 --> 00:40:50,960
created a service that does this

1334
00:40:50,960 --> 00:40:52,000
bufferover

1335
00:40:52,000 --> 00:40:54,400
dot run and you can query and he you

1336
00:40:54,400 --> 00:40:55,599
know i think he's doing

1337
00:40:55,599 --> 00:40:59,359
this kind of mass scanning every

1338
00:40:59,359 --> 00:41:01,520
two weeks so there's a couple links here

1339
00:41:01,520 --> 00:41:03,440
one is to he parks excellent

1340
00:41:03,440 --> 00:41:06,000
article on how you can do it yourself so

1341
00:41:06,000 --> 00:41:07,119
you could set it up yourself to do the

1342
00:41:07,119 --> 00:41:09,359
scanning or you could use a service

1343
00:41:09,359 --> 00:41:11,760
bufferofer.run and watch sam's talk and

1344
00:41:11,760 --> 00:41:13,680
how he built his

1345
00:41:13,680 --> 00:41:17,440
this is also built into i believe a mass

1346
00:41:17,440 --> 00:41:20,800
or a mass and again same thing

1347
00:41:20,800 --> 00:41:22,800
i tend to use the standalone tool over a

1348
00:41:22,800 --> 00:41:24,319
massive source for this

1349
00:41:24,319 --> 00:41:25,359
just because of some small

1350
00:41:25,359 --> 00:41:27,760
inconsistencies so you're free to check

1351
00:41:27,760 --> 00:41:29,359
out both a mass

1352
00:41:29,359 --> 00:41:32,400
and basically um you know this buffer

1353
00:41:32,400 --> 00:41:32,960
over

1354
00:41:32,960 --> 00:41:36,640
run site but this is a very powerful

1355
00:41:36,640 --> 00:41:37,599
method

1356
00:41:37,599 --> 00:41:38,640
basically you're going to start to

1357
00:41:38,640 --> 00:41:40,720
enumerate a lot of stuff that is in the

1358
00:41:40,720 --> 00:41:41,280
cloud

1359
00:41:41,280 --> 00:41:44,000
and if you do this you know iteratively

1360
00:41:44,000 --> 00:41:45,200
you know over

1361
00:41:45,200 --> 00:41:47,040
you know you do it once a week you'll

1362
00:41:47,040 --> 00:41:48,400
find new data that people have

1363
00:41:48,400 --> 00:41:49,599
or new infrastructure that people have

1364
00:41:49,599 --> 00:41:51,040
just spun up in the cloud and you'll

1365
00:41:51,040 --> 00:41:52,560
find new subdomains and things like that

1366
00:41:52,560 --> 00:41:52,960
so

1367
00:41:52,960 --> 00:41:54,400
a really powerful method here is

1368
00:41:54,400 --> 00:41:57,520
scanning the cloud ranges

1369
00:41:59,440 --> 00:42:02,319
okay so we've gotten our c domains and

1370
00:42:02,319 --> 00:42:03,440
we've enumerated

1371
00:42:03,440 --> 00:42:06,480
sub domains for those c domains

1372
00:42:06,480 --> 00:42:08,560
using scraping and some javascript

1373
00:42:08,560 --> 00:42:10,000
analysis now the last place we're going

1374
00:42:10,000 --> 00:42:11,520
to get subdomain information is through

1375
00:42:11,520 --> 00:42:13,119
brute force

1376
00:42:13,119 --> 00:42:14,960
so brute force has been around for a

1377
00:42:14,960 --> 00:42:17,599
long time it was the first subdomain

1378
00:42:17,599 --> 00:42:20,240
enumeration method that a lot of pen

1379
00:42:20,240 --> 00:42:22,160
testers use remember we use things like

1380
00:42:22,160 --> 00:42:23,280
fierce and

1381
00:42:23,280 --> 00:42:26,079
a whole bunch of other older dns dns

1382
00:42:26,079 --> 00:42:27,760
brute forcing tools

1383
00:42:27,760 --> 00:42:30,880
and uh and so uh those tools were great

1384
00:42:30,880 --> 00:42:32,720
uh we've evolved a little bit from them

1385
00:42:32,720 --> 00:42:34,000
but some not really some

1386
00:42:34,000 --> 00:42:35,680
some are still great but uh you know

1387
00:42:35,680 --> 00:42:38,400
right now the idea of brute forcing the

1388
00:42:38,400 --> 00:42:40,160
subdomain name just giving it a random

1389
00:42:40,160 --> 00:42:42,160
word and seeing if it resolves

1390
00:42:42,160 --> 00:42:43,760
you can handle this inside of things

1391
00:42:43,760 --> 00:42:46,240
like uh mass dns and so

1392
00:42:46,240 --> 00:42:48,640
from the history basically fierce was

1393
00:42:48,640 --> 00:42:50,000
the first one that we had or one of the

1394
00:42:50,000 --> 00:42:51,280
first serious ones that i remember

1395
00:42:51,280 --> 00:42:53,680
everyone using a lot

1396
00:42:53,680 --> 00:42:56,160
the iteration in the last five years has

1397
00:42:56,160 --> 00:42:56,720
been that

1398
00:42:56,720 --> 00:42:59,040
mass dns is the newest tool and what it

1399
00:42:59,040 --> 00:43:01,280
does is it uses multiple dns resolvers

1400
00:43:01,280 --> 00:43:02,720
simultaneously

1401
00:43:02,720 --> 00:43:04,160
so you know you can imagine all these

1402
00:43:04,160 --> 00:43:06,960
dns resolutions could take a lot of time

1403
00:43:06,960 --> 00:43:08,560
and fierce you know with a giant word

1404
00:43:08,560 --> 00:43:10,560
list of brute forcing stuff could take

1405
00:43:10,560 --> 00:43:12,319
a long time to to finish or some of

1406
00:43:12,319 --> 00:43:13,599
these older tools

1407
00:43:13,599 --> 00:43:16,960
well mass dns basically cuts that work

1408
00:43:16,960 --> 00:43:17,440
up

1409
00:43:17,440 --> 00:43:20,079
along multiple dns resolvers and you can

1410
00:43:20,079 --> 00:43:21,040
do this

1411
00:43:21,040 --> 00:43:25,200
uh in you know one tenth maybe even 120

1412
00:43:25,200 --> 00:43:26,400
at the time that you used to be able to

1413
00:43:26,400 --> 00:43:27,680
do it before

1414
00:43:27,680 --> 00:43:31,040
so uh aim a mass you know has now

1415
00:43:31,040 --> 00:43:33,359
built this idea of multiple resolvers

1416
00:43:33,359 --> 00:43:35,119
into its tool and it's had it for quite

1417
00:43:35,119 --> 00:43:36,400
a while actually

1418
00:43:36,400 --> 00:43:38,319
i was using mass dns for the longest

1419
00:43:38,319 --> 00:43:40,319
time and they pioneered the idea

1420
00:43:40,319 --> 00:43:43,440
but i now use a mass for this and a mass

1421
00:43:43,440 --> 00:43:45,599
already uses eight resolvers by default

1422
00:43:45,599 --> 00:43:46,960
and you can go out and parse more

1423
00:43:46,960 --> 00:43:48,400
resolvers for yourself that you trust

1424
00:43:48,400 --> 00:43:49,760
dns resolvers

1425
00:43:49,760 --> 00:43:52,079
and add them to its list and it'll

1426
00:43:52,079 --> 00:43:53,520
dramatically increase

1427
00:43:53,520 --> 00:43:56,800
the brute forcing speed of a mass

1428
00:43:56,800 --> 00:44:01,200
so a mass enum-brute dash d your domain

1429
00:44:01,200 --> 00:44:04,079
and then you can even add the src flag

1430
00:44:04,079 --> 00:44:05,920
but this will basically

1431
00:44:05,920 --> 00:44:09,680
brute force for you and uh it's great

1432
00:44:09,680 --> 00:44:11,280
you can also specify like i said your

1433
00:44:11,280 --> 00:44:13,359
number of resolvers or add a resolver

1434
00:44:13,359 --> 00:44:13,839
list

1435
00:44:13,839 --> 00:44:17,200
by text file and uh yeah so that's the

1436
00:44:17,200 --> 00:44:18,640
way i do forcing most the time is

1437
00:44:18,640 --> 00:44:20,400
through mass there's some other tools

1438
00:44:20,400 --> 00:44:21,920
that are also supposed to be just as

1439
00:44:21,920 --> 00:44:22,880
fast with ais

1440
00:44:22,880 --> 00:44:26,240
dns fruit but yeah i'm pretty sure a

1441
00:44:26,240 --> 00:44:27,920
mass is kind of on the leading edge of

1442
00:44:27,920 --> 00:44:30,640
brute forcing now i think the other one

1443
00:44:30,640 --> 00:44:32,480
that you can use is shuffle dns

1444
00:44:32,480 --> 00:44:34,640
by the project discovery team also does

1445
00:44:34,640 --> 00:44:36,160
the same kind of stuff

1446
00:44:36,160 --> 00:44:39,040
so yeah it's pretty good brute forcing

1447
00:44:39,040 --> 00:44:42,640
awesome tool multiple resolvers

1448
00:44:42,640 --> 00:44:45,920
it relies on mass dns so if you want to

1449
00:44:45,920 --> 00:44:47,920
separate the tool workflow i know a lot

1450
00:44:47,920 --> 00:44:49,599
of people have like resource

1451
00:44:49,599 --> 00:44:51,040
constraints like the big problem with

1452
00:44:51,040 --> 00:44:52,319
the mass is it does a lot of things

1453
00:44:52,319 --> 00:44:53,440
right now and it takes up a lot of

1454
00:44:53,440 --> 00:44:55,119
resources and

1455
00:44:55,119 --> 00:44:56,720
some people don't only like to use it

1456
00:44:56,720 --> 00:44:57,839
for certain things so if you want to

1457
00:44:57,839 --> 00:44:59,359
separate the workload between tools or

1458
00:44:59,359 --> 00:45:00,880
you think that one's more stable or runs

1459
00:45:00,880 --> 00:45:02,240
faster or whatever i don't have any

1460
00:45:02,240 --> 00:45:03,760
benchmarks for you right now i could in

1461
00:45:03,760 --> 00:45:04,720
the future

1462
00:45:04,720 --> 00:45:06,240
but shuffle dns could be your tool

1463
00:45:06,240 --> 00:45:07,839
because it wraps around

1464
00:45:07,839 --> 00:45:10,880
mass dns so

1465
00:45:11,760 --> 00:45:13,760
okay so we've brute forced you know we

1466
00:45:13,760 --> 00:45:14,960
identified you know some brute force

1467
00:45:14,960 --> 00:45:16,160
tools that you can use that are

1468
00:45:16,160 --> 00:45:17,440
infinitely faster because of their

1469
00:45:17,440 --> 00:45:20,160
multi-dns resolver kind of architecture

1470
00:45:20,160 --> 00:45:22,800
now uh we want to talk about you know

1471
00:45:22,800 --> 00:45:24,319
they're only as good as the list you

1472
00:45:24,319 --> 00:45:25,440
provide them right and

1473
00:45:25,440 --> 00:45:26,880
that's true right so you have to give

1474
00:45:26,880 --> 00:45:29,280
them a word list so there are two trains

1475
00:45:29,280 --> 00:45:30,319
of thought here

1476
00:45:30,319 --> 00:45:32,319
on word lists one is a tailored word

1477
00:45:32,319 --> 00:45:35,040
list that you build yourself and tom nom

1478
00:45:35,040 --> 00:45:36,960
nom at naham khan which was the

1479
00:45:36,960 --> 00:45:38,240
conference that

1480
00:45:38,240 --> 00:45:41,760
ben did a month or two back

1481
00:45:41,760 --> 00:45:43,200
talked about building your own word

1482
00:45:43,200 --> 00:45:45,680
lists which is awesome because you know

1483
00:45:45,680 --> 00:45:46,960
then you could build a

1484
00:45:46,960 --> 00:45:48,560
you know a word list that focuses on

1485
00:45:48,560 --> 00:45:50,400
your target and stuff that made they

1486
00:45:50,400 --> 00:45:51,280
might be running

1487
00:45:51,280 --> 00:45:53,119
and i suggest you watch that talk on you

1488
00:45:53,119 --> 00:45:54,880
know on that kind of method and then you

1489
00:45:54,880 --> 00:45:56,560
have massive word lists which

1490
00:45:56,560 --> 00:45:58,560
you know are tend to be what i use but

1491
00:45:58,560 --> 00:46:00,800
you know both have advantages so

1492
00:46:00,800 --> 00:46:03,599
i use an all.txt i've released this

1493
00:46:03,599 --> 00:46:04,880
before it's my

1494
00:46:04,880 --> 00:46:07,920
dns file that basically i took all of

1495
00:46:07,920 --> 00:46:08,880
the

1496
00:46:08,880 --> 00:46:12,319
dns keywords that all of these old tools

1497
00:46:12,319 --> 00:46:13,280
had

1498
00:46:13,280 --> 00:46:15,200
and even newer research for subdomains

1499
00:46:15,200 --> 00:46:17,200
had and i've basically put them all into

1500
00:46:17,200 --> 00:46:18,079
one file and

1501
00:46:18,079 --> 00:46:22,400
sort and unique them so i use all.txt

1502
00:46:22,400 --> 00:46:24,480
in my automation when i'm brute forcing

1503
00:46:24,480 --> 00:46:26,720
for subdomains

1504
00:46:26,720 --> 00:46:29,839
there's also some newer research so my

1505
00:46:29,839 --> 00:46:32,720
all.txt includes this newer research the

1506
00:46:32,720 --> 00:46:34,160
first version of it and this is called

1507
00:46:34,160 --> 00:46:36,000
the commonspeak project by the asset

1508
00:46:36,000 --> 00:46:37,040
note team

1509
00:46:37,040 --> 00:46:39,920
who run asset note the attack surface

1510
00:46:39,920 --> 00:46:40,880
mapping tool

1511
00:46:40,880 --> 00:46:43,280
and which is really awesome and they did

1512
00:46:43,280 --> 00:46:45,119
an open source projects to release

1513
00:46:45,119 --> 00:46:47,520
they used bigquery to go out and query

1514
00:46:47,520 --> 00:46:48,960
different sites around the internet like

1515
00:46:48,960 --> 00:46:49,920
reddit and

1516
00:46:49,920 --> 00:46:51,440
a whole bunch of other places stack

1517
00:46:51,440 --> 00:46:52,880
stack trace and things like that

1518
00:46:52,880 --> 00:46:54,880
mentions of domains

1519
00:46:54,880 --> 00:46:57,839
to build like a newer school data set

1520
00:46:57,839 --> 00:46:59,359
that had sub domains

1521
00:46:59,359 --> 00:47:01,440
and i think parameters too exactly i

1522
00:47:01,440 --> 00:47:03,119
can't remember it but i know subdomains

1523
00:47:03,119 --> 00:47:04,319
and so they did the first version of

1524
00:47:04,319 --> 00:47:05,520
this and i took the version in that and

1525
00:47:05,520 --> 00:47:07,760
i put it into my all.txt file which is

1526
00:47:07,760 --> 00:47:09,119
already up there but version two has

1527
00:47:09,119 --> 00:47:10,160
come out in the last

1528
00:47:10,160 --> 00:47:12,720
year and a half and um it has a new set

1529
00:47:12,720 --> 00:47:14,480
of targets that they've parsed

1530
00:47:14,480 --> 00:47:16,560
and new sets of data and i would uh

1531
00:47:16,560 --> 00:47:18,240
suggest looking at it to see you know if

1532
00:47:18,240 --> 00:47:19,839
you want to add those to your word list

1533
00:47:19,839 --> 00:47:22,160
as well

1534
00:47:22,240 --> 00:47:24,720
so now we've brute forced you know based

1535
00:47:24,720 --> 00:47:25,599
off of words

1536
00:47:25,599 --> 00:47:27,839
but now there's this idea of of what i

1537
00:47:27,839 --> 00:47:29,839
call alteration scanning and this was

1538
00:47:29,839 --> 00:47:30,960
pioneered by

1539
00:47:30,960 --> 00:47:33,359
uh naffian shubs who are two really

1540
00:47:33,359 --> 00:47:35,440
prominent awesome bug mounting hunters

1541
00:47:35,440 --> 00:47:38,000
awesome humans as well and they they

1542
00:47:38,000 --> 00:47:39,440
wrote this tool called alt dns and what

1543
00:47:39,440 --> 00:47:40,079
this would do

1544
00:47:40,079 --> 00:47:42,160
would uh would be notice it it would

1545
00:47:42,160 --> 00:47:43,280
notice a subdomain

1546
00:47:43,280 --> 00:47:44,920
when doing scanning right something like

1547
00:47:44,920 --> 00:47:46,319
dev.com.com

1548
00:47:46,319 --> 00:47:47,839
and then it would add permutations to it

1549
00:47:47,839 --> 00:47:51,040
try dev one try dev2 try dev dash

1550
00:47:51,040 --> 00:47:55,200
one try dev-2 try dev.one.company.com so

1551
00:47:55,200 --> 00:47:58,480
it will add all these permutations and

1552
00:47:58,480 --> 00:47:58,960
um

1553
00:47:58,960 --> 00:48:01,599
and try to resolve them as well so it's

1554
00:48:01,599 --> 00:48:02,640
not wordless scanning it's

1555
00:48:02,640 --> 00:48:04,000
permutation-based scanning

1556
00:48:04,000 --> 00:48:05,119
kind of similar to what you do with

1557
00:48:05,119 --> 00:48:07,920
passwords now alt dns was the first tool

1558
00:48:07,920 --> 00:48:08,880
to do this

1559
00:48:08,880 --> 00:48:12,559
um since alt dns um

1560
00:48:12,559 --> 00:48:14,720
a mass has also integrated permutation

1561
00:48:14,720 --> 00:48:16,400
scanning into its engine

1562
00:48:16,400 --> 00:48:20,000
um so yeah uh i tend to use

1563
00:48:20,000 --> 00:48:22,720
a mass with this function when i'm doing

1564
00:48:22,720 --> 00:48:26,078
all my other a mass scanning too

1565
00:48:26,400 --> 00:48:28,800
so alteration scanning just some you

1566
00:48:28,800 --> 00:48:30,559
know key benefits right so

1567
00:48:30,559 --> 00:48:32,800
uh usually when you have a waff right if

1568
00:48:32,800 --> 00:48:34,160
you look for

1569
00:48:34,160 --> 00:48:36,000
you know the production or the you know

1570
00:48:36,000 --> 00:48:38,000
here i was on dub dub dub

1571
00:48:38,000 --> 00:48:40,480
uh i found you know i thought i had

1572
00:48:40,480 --> 00:48:42,319
found sql injection but i was getting

1573
00:48:42,319 --> 00:48:43,520
blocked by the waff

1574
00:48:43,520 --> 00:48:45,520
and then they didn't apply the waft to

1575
00:48:45,520 --> 00:48:46,720
ww2

1576
00:48:46,720 --> 00:48:49,200
so i was able to get sql injection um

1577
00:48:49,200 --> 00:48:50,079
other things are

1578
00:48:50,079 --> 00:48:52,319
you know uh basically uh adding

1579
00:48:52,319 --> 00:48:54,319
permutations to find the origin of a

1580
00:48:54,319 --> 00:48:56,640
site for like akamai or some other

1581
00:48:56,640 --> 00:48:59,200
cdn like technology finding the origin

1582
00:48:59,200 --> 00:49:00,480
will completely bypass a lot of

1583
00:49:00,480 --> 00:49:02,880
filtering and go to the source so

1584
00:49:02,880 --> 00:49:05,760
i've used tools to find origins before

1585
00:49:05,760 --> 00:49:06,480
uh

1586
00:49:06,480 --> 00:49:08,160
using permutation scanning or ultra or

1587
00:49:08,160 --> 00:49:09,760
alteration scanning for

1588
00:49:09,760 --> 00:49:12,880
basically wealth bypass

1589
00:49:12,880 --> 00:49:15,920
okay so we're about to wrap it up here

1590
00:49:15,920 --> 00:49:16,960
okay so

1591
00:49:16,960 --> 00:49:19,280
uh now we talk a little bit about once

1592
00:49:19,280 --> 00:49:20,400
we have all this stuff

1593
00:49:20,400 --> 00:49:21,839
you know do we want to do some port

1594
00:49:21,839 --> 00:49:24,400
level analysis on all of these

1595
00:49:24,400 --> 00:49:27,599
subdomains we've had yeah we do so

1596
00:49:27,599 --> 00:49:29,760
basically you know old school hacking

1597
00:49:29,760 --> 00:49:31,119
you know nomenclature would have you use

1598
00:49:31,119 --> 00:49:31,680
things like

1599
00:49:31,680 --> 00:49:35,119
nmap right and even

1600
00:49:35,119 --> 00:49:37,599
even with well there's actually a raging

1601
00:49:37,599 --> 00:49:39,280
debate going on right now about this

1602
00:49:39,280 --> 00:49:41,599
but even with the best flags like in

1603
00:49:41,599 --> 00:49:42,319
something like

1604
00:49:42,319 --> 00:49:45,839
min rate i still believe that their

1605
00:49:45,839 --> 00:49:48,160
you know mass scan in this instance

1606
00:49:48,160 --> 00:49:49,680
which i put in this slide is probably a

1607
00:49:49,680 --> 00:49:51,280
more superior

1608
00:49:51,280 --> 00:49:53,839
way to do port scanning the reason why

1609
00:49:53,839 --> 00:49:55,119
is because it's it's re

1610
00:49:55,119 --> 00:49:57,200
it has a rewritten tcp stack that's you

1611
00:49:57,200 --> 00:49:58,480
know for port scanning

1612
00:49:58,480 --> 00:50:01,760
it's multi-threaded it's written in c

1613
00:50:01,760 --> 00:50:03,200
um you know you can say a lot of these

1614
00:50:03,200 --> 00:50:05,359
things about nmap you know side by side

1615
00:50:05,359 --> 00:50:06,880
i'm pretty sure that mass scan

1616
00:50:06,880 --> 00:50:10,240
you know beats min and map most of the

1617
00:50:10,240 --> 00:50:10,880
time for

1618
00:50:10,880 --> 00:50:14,880
fast only port analysis

1619
00:50:14,880 --> 00:50:18,400
level scans so i use mascan for my port

1620
00:50:18,400 --> 00:50:19,119
scanning

1621
00:50:19,119 --> 00:50:22,400
you can scan a whole range of ports

1622
00:50:22,400 --> 00:50:24,079
you can give it an input list and give

1623
00:50:24,079 --> 00:50:26,319
it a max rate or a min rate it takes the

1624
00:50:26,319 --> 00:50:26,800
same

1625
00:50:26,800 --> 00:50:30,319
syntax as nmap which is useful and then

1626
00:50:30,319 --> 00:50:32,160
if you want to get really into masking

1627
00:50:32,160 --> 00:50:33,839
and you know all of its syntax

1628
00:50:33,839 --> 00:50:35,520
daniel measler who's a buddy of mine has

1629
00:50:35,520 --> 00:50:37,839
an excellent article on his website he

1630
00:50:37,839 --> 00:50:39,440
breaks down tools

1631
00:50:39,440 --> 00:50:41,200
to the nth degree and so you can go

1632
00:50:41,200 --> 00:50:42,800
there and see all the syntax from ascan

1633
00:50:42,800 --> 00:50:44,800
but when i do port analysis i feed all

1634
00:50:44,800 --> 00:50:46,160
of my domains

1635
00:50:46,160 --> 00:50:48,240
into a resolver to get their ip address

1636
00:50:48,240 --> 00:50:49,520
because it only takes

1637
00:50:49,520 --> 00:50:51,680
mask and only takes ip addresses and

1638
00:50:51,680 --> 00:50:52,640
then i

1639
00:50:52,640 --> 00:50:54,160
send those ip addresses through mass

1640
00:50:54,160 --> 00:50:55,680
scan now

1641
00:50:55,680 --> 00:50:57,280
i just talked about one limitation is

1642
00:50:57,280 --> 00:50:58,880
that it only scans ip addresses well you

1643
00:50:58,880 --> 00:51:00,640
can use a tool called dn mass which is a

1644
00:51:00,640 --> 00:51:02,319
wrap around math scan

1645
00:51:02,319 --> 00:51:05,520
by uh rastating and basically it will

1646
00:51:05,520 --> 00:51:06,960
you can give it again you can give it

1647
00:51:06,960 --> 00:51:09,520
domains right so this is super useful

1648
00:51:09,520 --> 00:51:11,680
it says it to math scan and then it also

1649
00:51:11,680 --> 00:51:13,760
gives you a table of a log of everything

1650
00:51:13,760 --> 00:51:15,119
that was open and

1651
00:51:15,119 --> 00:51:16,640
yeah so if you didn't want to write your

1652
00:51:16,640 --> 00:51:18,800
own parser to resolve the domain

1653
00:51:18,800 --> 00:51:20,800
uh you can use something like dn mask

1654
00:51:20,800 --> 00:51:22,160
and and it will do that

1655
00:51:22,160 --> 00:51:26,480
do that for you okay so we've got

1656
00:51:26,480 --> 00:51:28,160
subdiv we've got root domains we've got

1657
00:51:28,160 --> 00:51:30,400
sub domains for those root domains

1658
00:51:30,400 --> 00:51:32,720
we've got you know permutations

1659
00:51:32,720 --> 00:51:34,640
basically we've started to do some port

1660
00:51:34,640 --> 00:51:36,800
scanning on all those subdomains which

1661
00:51:36,800 --> 00:51:38,079
is great

1662
00:51:38,079 --> 00:51:39,680
one auxiliary thing we want to do here

1663
00:51:39,680 --> 00:51:41,520
is start doing some port scanning

1664
00:51:41,520 --> 00:51:43,359
and this is more in-depth port scanning

1665
00:51:43,359 --> 00:51:46,160
so uh basically the whole workflow is

1666
00:51:46,160 --> 00:51:49,440
mass scan or dna or dn mass scan right

1667
00:51:49,440 --> 00:51:52,720
and then feed that output to nmap to do

1668
00:51:52,720 --> 00:51:55,359
a full service scan to get the

1669
00:51:55,359 --> 00:51:57,040
full service data and then you could

1670
00:51:57,040 --> 00:51:58,559
feed that to a tool called brute spray

1671
00:51:58,559 --> 00:52:00,160
which does credential brute forcing

1672
00:52:00,160 --> 00:52:01,440
using

1673
00:52:01,440 --> 00:52:04,800
medusa and so you can use basically

1674
00:52:04,800 --> 00:52:06,800
brute space built-in

1675
00:52:06,800 --> 00:52:08,800
built-in credential list and just see if

1676
00:52:08,800 --> 00:52:10,240
any of these services

1677
00:52:10,240 --> 00:52:11,839
that you might find doing the port scan

1678
00:52:11,839 --> 00:52:13,520
like ftp smtp

1679
00:52:13,520 --> 00:52:16,559
ssh mysql all of these

1680
00:52:16,559 --> 00:52:19,760
if they have default passwords enabled

1681
00:52:19,760 --> 00:52:21,280
and these are quick and easy wins

1682
00:52:21,280 --> 00:52:24,400
so this is written by uh ox or

1683
00:52:24,400 --> 00:52:27,760
x90 uh skysneck which is

1684
00:52:27,760 --> 00:52:30,079
an awesome name and brute spray is is

1685
00:52:30,079 --> 00:52:30,800
pretty cool

1686
00:52:30,800 --> 00:52:32,160
i've also heard that you could probably

1687
00:52:32,160 --> 00:52:34,319
do this with any crack i haven't had a

1688
00:52:34,319 --> 00:52:36,079
ton of experience with ncrack for a long

1689
00:52:36,079 --> 00:52:36,559
time

1690
00:52:36,559 --> 00:52:37,680
so i'm going to look into it for the

1691
00:52:37,680 --> 00:52:39,599
next version of the talk and see how

1692
00:52:39,599 --> 00:52:42,160
that would work

1693
00:52:42,319 --> 00:52:46,079
all right so along this whole recon idea

1694
00:52:46,079 --> 00:52:49,119
is the idea of searching github for

1695
00:52:49,119 --> 00:52:49,839
usually

1696
00:52:49,839 --> 00:52:52,000
passwords and keys or internal

1697
00:52:52,000 --> 00:52:53,520
information on a company

1698
00:52:53,520 --> 00:52:56,160
i do this with a quick bash script so as

1699
00:52:56,160 --> 00:52:57,760
my subdomain enumeration is running

1700
00:52:57,760 --> 00:52:59,280
which is the longest part of my life

1701
00:52:59,280 --> 00:52:59,920
cycle

1702
00:52:59,920 --> 00:53:03,119
of my automation i just uh generate

1703
00:53:03,119 --> 00:53:04,079
these links

1704
00:53:04,079 --> 00:53:05,760
that have the search query that i want

1705
00:53:05,760 --> 00:53:07,839
to search for and my gist for all of the

1706
00:53:07,839 --> 00:53:09,119
things i'm looking for is right there

1707
00:53:09,119 --> 00:53:10,640
it's a just on my

1708
00:53:10,640 --> 00:53:13,440
github so or gist i don't know exactly

1709
00:53:13,440 --> 00:53:14,319
how you say that

1710
00:53:14,319 --> 00:53:16,800
um so if your shell supports terminal

1711
00:53:16,800 --> 00:53:19,040
hyperlinks um

1712
00:53:19,040 --> 00:53:20,640
you can click on that and it'll take you

1713
00:53:20,640 --> 00:53:23,040
to github as long as you're logged in

1714
00:53:23,040 --> 00:53:25,119
it'll do a search for twitch.tv and

1715
00:53:25,119 --> 00:53:26,559
password and then you start looking

1716
00:53:26,559 --> 00:53:28,319
through the code and these results

1717
00:53:28,319 --> 00:53:31,119
this can be automated to a sense using

1718
00:53:31,119 --> 00:53:33,040
github search that gwendol wrote in his

1719
00:53:33,040 --> 00:53:34,000
tool suite

1720
00:53:34,000 --> 00:53:36,000
and also just to get a great feel on

1721
00:53:36,000 --> 00:53:37,040
what you're looking for when you're

1722
00:53:37,040 --> 00:53:38,800
doing secret searching using github

1723
00:53:38,800 --> 00:53:39,680
dorking

1724
00:53:39,680 --> 00:53:41,839
check out the gentleman's blood crud

1725
00:53:41,839 --> 00:53:43,119
university module on

1726
00:53:43,119 --> 00:53:44,960
github recon and sensitive data exposure

1727
00:53:44,960 --> 00:53:46,960
it is absolutely great

1728
00:53:46,960 --> 00:53:49,520
probably the best primer on the thing on

1729
00:53:49,520 --> 00:53:51,119
that topic so far

1730
00:53:51,119 --> 00:53:54,839
so i do this while my tools are running

1731
00:53:54,839 --> 00:53:56,160
basically

1732
00:53:56,160 --> 00:53:59,520
at this point we have a whole bunch of

1733
00:53:59,520 --> 00:54:02,720
domains uh and subdomains

1734
00:54:02,720 --> 00:54:06,000
and if i have a large list it can be

1735
00:54:06,000 --> 00:54:08,800
useful to screenshot them right and

1736
00:54:08,800 --> 00:54:10,640
you can feed all of your domains to

1737
00:54:10,640 --> 00:54:12,319
several tools aqua tone

1738
00:54:12,319 --> 00:54:14,480
http screenshot eyewitness they all have

1739
00:54:14,480 --> 00:54:15,760
pros and cons

1740
00:54:15,760 --> 00:54:17,200
but uh really what you're trying to do

1741
00:54:17,200 --> 00:54:18,800
here is get a screenshot full

1742
00:54:18,800 --> 00:54:21,440
or either a html report that has

1743
00:54:21,440 --> 00:54:23,040
screenshots or a folder full of

1744
00:54:23,040 --> 00:54:24,400
screenshots and

1745
00:54:24,400 --> 00:54:26,720
just kind of eyeball them and be like oh

1746
00:54:26,720 --> 00:54:29,119
yeah that's that site looks super old or

1747
00:54:29,119 --> 00:54:30,880
that's a cms i know is vulnerable to

1748
00:54:30,880 --> 00:54:32,559
something you know good

1749
00:54:32,559 --> 00:54:34,480
or you know anything that's not the main

1750
00:54:34,480 --> 00:54:36,559
page you know basically so you can use

1751
00:54:36,559 --> 00:54:38,400
screenshots to prioritize your work in

1752
00:54:38,400 --> 00:54:39,760
bug bounty hunting

1753
00:54:39,760 --> 00:54:41,440
there's also a new one called witness me

1754
00:54:41,440 --> 00:54:42,880
which just came out i just added it to

1755
00:54:42,880 --> 00:54:43,760
this version

1756
00:54:43,760 --> 00:54:45,359
and it's supposed to be really good

1757
00:54:45,359 --> 00:54:47,040
because you can perform this from an api

1758
00:54:47,040 --> 00:54:49,280
you can instigate from an api

1759
00:54:49,280 --> 00:54:50,720
there's just a whole bunch of cool bells

1760
00:54:50,720 --> 00:54:52,559
and whistles to witness me i recommend

1761
00:54:52,559 --> 00:54:53,920
you go check it out it's it looks pretty

1762
00:54:53,920 --> 00:54:55,359
cool so there's a bunch of ways that you

1763
00:54:55,359 --> 00:54:56,720
can do this screenshoting method that

1764
00:54:56,720 --> 00:54:57,839
doesn't really matter just

1765
00:54:57,839 --> 00:54:59,200
you know if you want to prioritize you

1766
00:54:59,200 --> 00:55:01,680
can use it

1767
00:55:01,760 --> 00:55:03,680
during this recon step there are some

1768
00:55:03,680 --> 00:55:05,599
really automated things that you can do

1769
00:55:05,599 --> 00:55:07,280
that aren't like in-depth application

1770
00:55:07,280 --> 00:55:09,200
analysis uh one of them is searching for

1771
00:55:09,200 --> 00:55:10,880
subdomain takeovers

1772
00:55:10,880 --> 00:55:14,720
the the basic you know primer on this

1773
00:55:14,720 --> 00:55:16,160
you know this method was kind of

1774
00:55:16,160 --> 00:55:18,240
invented by franz rosen

1775
00:55:18,240 --> 00:55:20,319
or at least most of the modern ones were

1776
00:55:20,319 --> 00:55:22,000
were created by franz rosen

1777
00:55:22,000 --> 00:55:24,480
but um the most up-to-date primer on

1778
00:55:24,480 --> 00:55:26,720
services that you may land on

1779
00:55:26,720 --> 00:55:29,280
for subdomain takeover are in ed

1780
00:55:29,280 --> 00:55:31,119
overflows repo whose at overflow's

1781
00:55:31,119 --> 00:55:31,680
awesome

1782
00:55:31,680 --> 00:55:33,839
in a repo called can i take over xyz and

1783
00:55:33,839 --> 00:55:35,440
so it has explanations of all these

1784
00:55:35,440 --> 00:55:36,640
services

1785
00:55:36,640 --> 00:55:39,200
when you go to a subdomain of something

1786
00:55:39,200 --> 00:55:41,280
and it redirects you to one of these

1787
00:55:41,280 --> 00:55:42,400
services

1788
00:55:42,400 --> 00:55:43,839
and they don't no longer use that

1789
00:55:43,839 --> 00:55:46,319
service but the cname is still valid

1790
00:55:46,319 --> 00:55:48,880
it tells you it says yeah if amazon you

1791
00:55:48,880 --> 00:55:51,599
know if a domain name for ms3.amazon.com

1792
00:55:51,599 --> 00:55:54,160
is returning the string no such bucket

1793
00:55:54,160 --> 00:55:55,839
then you can create a bucket with this

1794
00:55:55,839 --> 00:55:56,640
name

1795
00:55:56,640 --> 00:55:58,079
but you need to register and so it does

1796
00:55:58,079 --> 00:55:59,680
this with each service and tells you

1797
00:55:59,680 --> 00:56:01,760
you know if things are take overable

1798
00:56:01,760 --> 00:56:04,000
which is a great resource

1799
00:56:04,000 --> 00:56:06,880
to do this you know on the command line

1800
00:56:06,880 --> 00:56:07,599
you

1801
00:56:07,599 --> 00:56:10,799
you probably would have used

1802
00:56:10,799 --> 00:56:13,680
sub over most of the time it was a

1803
00:56:13,680 --> 00:56:15,520
standalone tool written by iceman but

1804
00:56:15,520 --> 00:56:16,160
since

1805
00:56:16,160 --> 00:56:18,960
iceman has gone to the project discovery

1806
00:56:18,960 --> 00:56:19,599
project

1807
00:56:19,599 --> 00:56:21,920
uh that team they've built it into

1808
00:56:21,920 --> 00:56:23,200
nuclei scanner

1809
00:56:23,200 --> 00:56:25,280
now i'm gonna do a little plug for

1810
00:56:25,280 --> 00:56:26,720
nuclei scanner because i think it's one

1811
00:56:26,720 --> 00:56:28,559
of the future of

1812
00:56:28,559 --> 00:56:31,359
web app scanning right um but just for

1813
00:56:31,359 --> 00:56:32,480
this specific task

1814
00:56:32,480 --> 00:56:34,559
subdomain takeovers their subdomain

1815
00:56:34,559 --> 00:56:36,480
takeover library is the most complete

1816
00:56:36,480 --> 00:56:38,000
that i've seen it has the most takeover

1817
00:56:38,000 --> 00:56:39,040
checks

1818
00:56:39,040 --> 00:56:40,640
that i've seen so far in an automated

1819
00:56:40,640 --> 00:56:42,720
tool so i would use

1820
00:56:42,720 --> 00:56:46,400
a sub over for this automation nuclei

1821
00:56:46,400 --> 00:56:48,000
which is the larger framework in which

1822
00:56:48,000 --> 00:56:49,680
the subdomain

1823
00:56:49,680 --> 00:56:53,119
checks are in the new one is

1824
00:56:53,119 --> 00:56:55,359
absolutely amazing it is it is one of

1825
00:56:55,359 --> 00:56:56,720
the coolest pieces of

1826
00:56:56,720 --> 00:56:58,559
scanning tech to come out for a while

1827
00:56:58,559 --> 00:57:00,079
that team is on fire

1828
00:57:00,079 --> 00:57:02,319
i'm really excited to see what they come

1829
00:57:02,319 --> 00:57:03,920
out with next

1830
00:57:03,920 --> 00:57:06,880
all right so let's talk about automation

1831
00:57:06,880 --> 00:57:08,480
okay so

1832
00:57:08,480 --> 00:57:10,400
after you do all this right like if you

1833
00:57:10,400 --> 00:57:11,599
were doing all this manually and

1834
00:57:11,599 --> 00:57:12,559
sometimes

1835
00:57:12,559 --> 00:57:14,559
i end up doing you know like twenty

1836
00:57:14,559 --> 00:57:16,880
percent of it manually and automating

1837
00:57:16,880 --> 00:57:19,440
80 other you know the rest of the 80 um

1838
00:57:19,440 --> 00:57:20,880
if you're gonna make an automation

1839
00:57:20,880 --> 00:57:21,520
script

1840
00:57:21,520 --> 00:57:23,359
uh eventually you'll need to like glue

1841
00:57:23,359 --> 00:57:24,960
some tools together and so

1842
00:57:24,960 --> 00:57:27,599
the the tool that um i really like for

1843
00:57:27,599 --> 00:57:28,240
this that

1844
00:57:28,240 --> 00:57:30,880
adds extensibility to other tools is a

1845
00:57:30,880 --> 00:57:32,559
tool called interlaced by

1846
00:57:32,559 --> 00:57:34,880
michael skelton or codingo and what it

1847
00:57:34,880 --> 00:57:36,319
does is allows you to

1848
00:57:36,319 --> 00:57:38,160
thread tools that don't include

1849
00:57:38,160 --> 00:57:40,079
threading inherently it allows you

1850
00:57:40,079 --> 00:57:42,960
to add target notation like nmap has

1851
00:57:42,960 --> 00:57:43,680
using

1852
00:57:43,680 --> 00:57:46,799
a range or a glob on ip addresses to a

1853
00:57:46,799 --> 00:57:48,880
tool that doesn't already have that

1854
00:57:48,880 --> 00:57:51,520
it's just got these uh it's got all of

1855
00:57:51,520 --> 00:57:52,720
these different

1856
00:57:52,720 --> 00:57:54,799
helpers to make you know maybe a bash

1857
00:57:54,799 --> 00:57:57,119
script or you know a python script that

1858
00:57:57,119 --> 00:57:57,839
hasn't thought

1859
00:57:57,839 --> 00:57:59,520
or hasn't built these things into it yet

1860
00:57:59,520 --> 00:58:01,119
or hasn't thought through these things

1861
00:58:01,119 --> 00:58:02,880
it basically extends them and makes them

1862
00:58:02,880 --> 00:58:04,400
able to do these things so hack luke

1863
00:58:04,400 --> 00:58:05,680
wrote an awesome article

1864
00:58:05,680 --> 00:58:08,880
on some use cases like uh threading

1865
00:58:08,880 --> 00:58:09,440
nicto

1866
00:58:09,440 --> 00:58:11,440
right which you know could be a scanner

1867
00:58:11,440 --> 00:58:13,200
that you use a lot of people like nicto

1868
00:58:13,200 --> 00:58:14,720
you can read his guide there so

1869
00:58:14,720 --> 00:58:16,720
interlace is a sweet sweet tool that

1870
00:58:16,720 --> 00:58:18,400
allows you to glue together other parts

1871
00:58:18,400 --> 00:58:19,680
of your recon framework when you get

1872
00:58:19,680 --> 00:58:22,000
into making one

1873
00:58:22,000 --> 00:58:24,079
tom nom nom his whole repo is awesome

1874
00:58:24,079 --> 00:58:25,599
can't enough can't be said about this

1875
00:58:25,599 --> 00:58:26,000
guy

1876
00:58:26,000 --> 00:58:29,040
uh he's a monster when it comes to bash

1877
00:58:29,040 --> 00:58:31,200
i thought i loved bash tom nom nom just

1878
00:58:31,200 --> 00:58:33,280
blows me out of the water so

1879
00:58:33,280 --> 00:58:35,520
most the tools that i use most with tom

1880
00:58:35,520 --> 00:58:36,640
nom nom are

1881
00:58:36,640 --> 00:58:38,720
http probe it's the it's a middle part

1882
00:58:38,720 --> 00:58:40,079
of glue between

1883
00:58:40,079 --> 00:58:42,400
when i find all those subdomains and

1884
00:58:42,400 --> 00:58:43,440
when i want to see if

1885
00:58:43,440 --> 00:58:45,280
you know services are live http will

1886
00:58:45,280 --> 00:58:46,799
take those subdomains and just scan for

1887
00:58:46,799 --> 00:58:48,640
80 and 443

1888
00:58:48,640 --> 00:58:50,559
and giving back results so http probe

1889
00:58:50,559 --> 00:58:52,160
sits in the middle of most people's

1890
00:58:52,160 --> 00:58:54,559
uh automation right now wayback urls

1891
00:58:54,559 --> 00:58:56,160
will parse the wayback machine for

1892
00:58:56,160 --> 00:58:57,599
everything known about

1893
00:58:57,599 --> 00:59:00,960
um a domain and then meg is like a

1894
00:59:00,960 --> 00:59:03,760
you know a directory brute forcer but

1895
00:59:03,760 --> 00:59:04,000
for

1896
00:59:04,000 --> 00:59:06,880
many hosts um instead of pounding on one

1897
00:59:06,880 --> 00:59:08,079
host with the word list

1898
00:59:08,079 --> 00:59:10,720
until it falls over um with your you

1899
00:59:10,720 --> 00:59:12,400
know large word list that you're doing

1900
00:59:12,400 --> 00:59:14,240
for directory brute forcing or content

1901
00:59:14,240 --> 00:59:16,160
discovery whatever you want to call it

1902
00:59:16,160 --> 00:59:18,160
meg will go to a list of hosts with very

1903
00:59:18,160 --> 00:59:19,200
few

1904
00:59:19,200 --> 00:59:21,119
requests and see if they're there and so

1905
00:59:21,119 --> 00:59:22,799
you know i highly recommend

1906
00:59:22,799 --> 00:59:24,720
using mig and you know i'll just give

1907
00:59:24,720 --> 00:59:26,960
you some easy wins right like

1908
00:59:26,960 --> 00:59:30,079
dot n files dot environment files um so

1909
00:59:30,079 --> 00:59:32,160
making those across your whole domain

1910
00:59:32,160 --> 00:59:33,200
list is

1911
00:59:33,200 --> 00:59:35,760
can really quickly get you some money uh

1912
00:59:35,760 --> 00:59:37,280
the other day i found

1913
00:59:37,280 --> 00:59:40,799
a dot git um dot get ignore path right i

1914
00:59:40,799 --> 00:59:42,480
fed it to meg ran it over my whole list

1915
00:59:42,480 --> 00:59:44,480
for a project got three hits

1916
00:59:44,480 --> 00:59:47,920
one of them was valid and yeah so

1917
00:59:47,920 --> 00:59:50,240
you know like give it some really sure

1918
00:59:50,240 --> 00:59:51,200
fire

1919
00:59:51,200 --> 00:59:52,960
you know directories and meg will go

1920
00:59:52,960 --> 00:59:54,240
over your whole list and

1921
00:59:54,240 --> 00:59:57,520
some megas meg is awesome

1922
00:59:57,760 --> 00:59:59,760
okay last part of the talk run a little

1923
00:59:59,760 --> 01:00:00,960
bit over my bad

1924
01:00:00,960 --> 01:00:03,440
um but we're going to talk here about

1925
01:00:03,440 --> 01:00:04,319
frameworks

1926
01:00:04,319 --> 01:00:06,720
so it could be that all of this recon is

1927
01:00:06,720 --> 01:00:08,240
not your thing it's definitely my thing

1928
01:00:08,240 --> 01:00:08,880
i love it

1929
01:00:08,880 --> 01:00:10,480
i'm not apologetic about that i think

1930
01:00:10,480 --> 01:00:12,480
recon is really cool nothing makes me

1931
01:00:12,480 --> 01:00:15,520
more happy than finding a target i don't

1932
01:00:15,520 --> 01:00:17,200
think anyone has landed on before i can

1933
01:00:17,200 --> 01:00:19,359
just tell that it's so obscure that

1934
01:00:19,359 --> 01:00:20,720
i'm probably the only one who's found

1935
01:00:20,720 --> 01:00:22,880
this that almost makes me as happy

1936
01:00:22,880 --> 01:00:25,680
as hacking the site itself um so but

1937
01:00:25,680 --> 01:00:27,280
that's just me right it could be that

1938
01:00:27,280 --> 01:00:28,079
recon is not

1939
01:00:28,079 --> 01:00:29,920
really your thing right so several

1940
01:00:29,920 --> 01:00:31,440
hunters have open source their

1941
01:00:31,440 --> 01:00:32,799
automation

1942
01:00:32,799 --> 01:00:36,079
uh into recon frameworks now i am going

1943
01:00:36,079 --> 01:00:36,400
to

1944
01:00:36,400 --> 01:00:38,640
classify these frameworks in some

1945
01:00:38,640 --> 01:00:41,040
different tiers and this is very very

1946
01:00:41,040 --> 01:00:41,680
rough

1947
01:00:41,680 --> 01:00:45,760
right um it's it's all subjective

1948
01:00:45,760 --> 01:00:48,240
you know i'm not gartner here i know

1949
01:00:48,240 --> 01:00:49,920
people got offended

1950
01:00:49,920 --> 01:00:53,359
after i release these framework

1951
01:00:53,359 --> 01:00:56,000
these framework tiers but i'm just gonna

1952
01:00:56,000 --> 01:00:57,920
go with the information i have

1953
01:00:57,920 --> 01:00:59,839
and and you know hopefully that'll

1954
01:00:59,839 --> 01:01:01,520
inform some people

1955
01:01:01,520 --> 01:01:03,599
okay so we have four tiers it's just

1956
01:01:03,599 --> 01:01:04,720
like a

1957
01:01:04,720 --> 01:01:06,240
gaming tier list right if you've ever

1958
01:01:06,240 --> 01:01:07,760
seen somebody do

1959
01:01:07,760 --> 01:01:10,240
like a review of all of the builds for

1960
01:01:10,240 --> 01:01:12,160
diablo 3 or something like that they

1961
01:01:12,160 --> 01:01:13,920
classify them into

1962
01:01:13,920 --> 01:01:16,000
four tier c tier is you're pretty

1963
01:01:16,000 --> 01:01:17,119
average still good b

1964
01:01:17,119 --> 01:01:18,720
tier is getting better a tier is really

1965
01:01:18,720 --> 01:01:20,559
good and s tier is probably the best

1966
01:01:20,559 --> 01:01:23,599
right so i put some functions that each

1967
01:01:23,599 --> 01:01:26,079
thing would have in a c tier you know

1968
01:01:26,079 --> 01:01:27,440
these frameworks are mostly building

1969
01:01:27,440 --> 01:01:28,720
around other scripts

1970
01:01:28,720 --> 01:01:30,240
and gluing them together in python or

1971
01:01:30,240 --> 01:01:33,200
bash they're step based workflows

1972
01:01:33,200 --> 01:01:36,000
they only have a few techniques maybe a

1973
01:01:36,000 --> 01:01:38,400
little extensibility in their output

1974
01:01:38,400 --> 01:01:41,359
b-tier automation is automation maybe

1975
01:01:41,359 --> 01:01:42,480
they're writing a few of their own

1976
01:01:42,480 --> 01:01:43,680
modules

1977
01:01:43,680 --> 01:01:46,000
maybe they have a gui or some advanced

1978
01:01:46,000 --> 01:01:47,839
workflow that makes the speed of the

1979
01:01:47,839 --> 01:01:48,799
whole process

1980
01:01:48,799 --> 01:01:50,720
lower they have more techniques that

1981
01:01:50,720 --> 01:01:52,880
they're using but they still run point

1982
01:01:52,880 --> 01:01:54,319
in time and they probably still track

1983
01:01:54,319 --> 01:01:56,160
everything in flat files

1984
01:01:56,160 --> 01:01:57,520
if they track anything at all they could

1985
01:01:57,520 --> 01:01:59,440
just be single shot tools

1986
01:01:59,440 --> 01:02:01,760
beats here is starting to write some of

1987
01:02:01,760 --> 01:02:03,039
their own modules

1988
01:02:03,039 --> 01:02:05,200
of you know whatever they're doing

1989
01:02:05,200 --> 01:02:07,119
finding subdomains or whatever

1990
01:02:07,119 --> 01:02:09,760
they have gui some of them have guise um

1991
01:02:09,760 --> 01:02:11,520
they run iteratively like they run at

1992
01:02:11,520 --> 01:02:12,960
points and times like a cron job or

1993
01:02:12,960 --> 01:02:14,480
something like that and they manage all

1994
01:02:14,480 --> 01:02:14,960
of this

1995
01:02:14,960 --> 01:02:16,240
uh you know eights here one of the

1996
01:02:16,240 --> 01:02:17,599
distinctive qualities is that they

1997
01:02:17,599 --> 01:02:19,440
manage it through a database

1998
01:02:19,440 --> 01:02:22,720
so s tier is the highest level

1999
01:02:22,720 --> 01:02:24,000
they're writing probably all of their

2000
01:02:24,000 --> 01:02:26,000
own modules they have a gui they run

2001
01:02:26,000 --> 01:02:27,599
iteratively they manage it all through a

2002
01:02:27,599 --> 01:02:28,079
db

2003
01:02:28,079 --> 01:02:30,079
they scale across multiple boxes they

2004
01:02:30,079 --> 01:02:31,839
send alerts to the user when new things

2005
01:02:31,839 --> 01:02:32,960
are being found

2006
01:02:32,960 --> 01:02:34,480
they use novel techniques and they

2007
01:02:34,480 --> 01:02:36,400
iterate quickly and they institute

2008
01:02:36,400 --> 01:02:38,240
either you know some powerful algorithms

2009
01:02:38,240 --> 01:02:40,640
or maybe some ml or ai inside of

2010
01:02:40,640 --> 01:02:42,400
inside of their tools probably not ai

2011
01:02:42,400 --> 01:02:45,039
mostly ml and fancy algorithms so

2012
01:02:45,039 --> 01:02:46,559
these are the tiers we're going to talk

2013
01:02:46,559 --> 01:02:48,799
about some of them right now

2014
01:02:48,799 --> 01:02:50,880
this is just a warning my scale like i

2015
01:02:50,880 --> 01:02:52,400
said is mostly subjective

2016
01:02:52,400 --> 01:02:54,240
it can be missing factors it is also

2017
01:02:54,240 --> 01:02:56,240
based off my experience and gut feel it

2018
01:02:56,240 --> 01:02:57,680
is not something people should take to

2019
01:02:57,680 --> 01:02:58,400
heart

2020
01:02:58,400 --> 01:03:01,839
i'm just giving in my opinion

2021
01:03:01,839 --> 01:03:04,240
okay so c tier so these are the ones

2022
01:03:04,240 --> 01:03:05,520
that are you know

2023
01:03:05,520 --> 01:03:08,319
basically uh basically wrapping around

2024
01:03:08,319 --> 01:03:09,520
other tools

2025
01:03:09,520 --> 01:03:12,480
just for disclaimer my tool that i use

2026
01:03:12,480 --> 01:03:13,760
every hunt

2027
01:03:13,760 --> 01:03:18,240
is a c tier tool okay so

2028
01:03:18,240 --> 01:03:21,680
these still work great c and up you know

2029
01:03:21,680 --> 01:03:24,319
are great tools um and they can do

2030
01:03:24,319 --> 01:03:26,319
exactly what you want and nothing less

2031
01:03:26,319 --> 01:03:27,760
and that could be great

2032
01:03:27,760 --> 01:03:29,599
or nothing more and that could be great

2033
01:03:29,599 --> 01:03:32,480
so here we have bounty recon

2034
01:03:32,480 --> 01:03:35,200
recon tools but the one that's shown up

2035
01:03:35,200 --> 01:03:36,960
on the right here is ultimate recon and

2036
01:03:36,960 --> 01:03:38,400
what i like about ultimate recon is it

2037
01:03:38,400 --> 01:03:39,680
does the process that we just talked

2038
01:03:39,680 --> 01:03:40,559
about a lot of

2039
01:03:40,559 --> 01:03:42,000
the tools we've just talked about to

2040
01:03:42,000 --> 01:03:44,480
find domains and subdomains

2041
01:03:44,480 --> 01:03:47,680
and it includes running nucleus

2042
01:03:47,680 --> 01:03:49,760
nucleus checks nucleus scans on

2043
01:03:49,760 --> 01:03:51,280
everything that it finds so

2044
01:03:51,280 --> 01:03:52,319
that's the reason i showed the

2045
01:03:52,319 --> 01:03:55,599
screenshot of ultimate recon

2046
01:03:55,599 --> 01:03:59,200
all right beats here so lazy recon

2047
01:03:59,200 --> 01:04:03,440
maps out the whole start of a recon

2048
01:04:03,440 --> 01:04:07,039
workflow it uses a mass and subfinder

2049
01:04:07,039 --> 01:04:09,520
it will combine those it will then run

2050
01:04:09,520 --> 01:04:11,119
some vulnerability checks like

2051
01:04:11,119 --> 01:04:14,319
subject for takeovers course scanner for

2052
01:04:14,319 --> 01:04:16,319
coors vulnerabilities it'll do

2053
01:04:16,319 --> 01:04:18,319
screenshots and dump those in a

2054
01:04:18,319 --> 01:04:20,960
folder or report for you it will do

2055
01:04:20,960 --> 01:04:22,079
brute forcing

2056
01:04:22,079 --> 01:04:24,640
then it'll scan all of those with nmap

2057
01:04:24,640 --> 01:04:25,680
right so basically

2058
01:04:25,680 --> 01:04:27,280
a lot of what we just talked about it'll

2059
01:04:27,280 --> 01:04:31,520
do on the command line which is great

2060
01:04:32,799 --> 01:04:35,680
in the eights here you have three um

2061
01:04:35,680 --> 01:04:37,039
recon pipeline

2062
01:04:37,039 --> 01:04:40,640
rock on and fine domain uh and find

2063
01:04:40,640 --> 01:04:41,200
domain

2064
01:04:41,200 --> 01:04:42,559
is one that i hadn't had a lot of

2065
01:04:42,559 --> 01:04:44,480
experience with and um

2066
01:04:44,480 --> 01:04:47,039
you know i uh they they were actually

2067
01:04:47,039 --> 01:04:48,079
really sad about

2068
01:04:48,079 --> 01:04:50,160
getting into a tier not s tier when i

2069
01:04:50,160 --> 01:04:51,599
did my original talk

2070
01:04:51,599 --> 01:04:53,359
um so they contacted me and they said

2071
01:04:53,359 --> 01:04:55,359
hey check out the tool the pro version

2072
01:04:55,359 --> 01:04:57,200
you know it's it's a paid tool

2073
01:04:57,200 --> 01:04:59,119
um but it's it's pretty sick and so find

2074
01:04:59,119 --> 01:05:01,520
domain it still sits in the a tier but

2075
01:05:01,520 --> 01:05:02,160
it's so

2076
01:05:02,160 --> 01:05:03,839
close to s tier and the only thing that

2077
01:05:03,839 --> 01:05:05,920
holds it back from s tier is

2078
01:05:05,920 --> 01:05:08,880
a gui basically uh because it has all

2079
01:05:08,880 --> 01:05:11,039
the other functions it has port scans

2080
01:05:11,039 --> 01:05:12,640
it uses all these tools to find

2081
01:05:12,640 --> 01:05:14,960
subdomains it'll alert the user

2082
01:05:14,960 --> 01:05:18,480
over multiple levels um and it'll

2083
01:05:18,480 --> 01:05:20,480
even email you when you find things new

2084
01:05:20,480 --> 01:05:21,520
applications that come

2085
01:05:21,520 --> 01:05:24,799
our new dns entries that come up so uh

2086
01:05:24,799 --> 01:05:26,079
the only thing it doesn't is some of the

2087
01:05:26,079 --> 01:05:27,520
it doesn't have some of these fancier

2088
01:05:27,520 --> 01:05:28,480
gui's

2089
01:05:28,480 --> 01:05:31,119
or any vulnerability checks yet so it's

2090
01:05:31,119 --> 01:05:32,880
still like right on the verge of a

2091
01:05:32,880 --> 01:05:36,000
to s tier

2092
01:05:36,000 --> 01:05:38,160
okay so here's est here now you first

2093
01:05:38,160 --> 01:05:39,760
thing to note some of these are paid

2094
01:05:39,760 --> 01:05:41,359
paid tools and you'll probably never use

2095
01:05:41,359 --> 01:05:42,640
them unfortunately but i'm not talking

2096
01:05:42,640 --> 01:05:43,720
about them anyway

2097
01:05:43,720 --> 01:05:46,799
intrigue.io is a service that jay cran

2098
01:05:46,799 --> 01:05:48,160
runs i used to work with jay current bug

2099
01:05:48,160 --> 01:05:49,760
crowd he's an awesome dude and he writes

2100
01:05:49,760 --> 01:05:51,280
this tool called intrigue

2101
01:05:51,280 --> 01:05:52,799
um the cool thing about intrigue is he

2102
01:05:52,799 --> 01:05:54,720
has a sas version of it that he's you

2103
01:05:54,720 --> 01:05:56,000
know selling as a product

2104
01:05:56,000 --> 01:05:59,440
and it's pretty amazing um but uh he

2105
01:05:59,440 --> 01:06:00,880
also

2106
01:06:00,880 --> 01:06:03,440
open sources almost all of the code for

2107
01:06:03,440 --> 01:06:04,880
intrigue on github

2108
01:06:04,880 --> 01:06:07,920
so you could take it and run it yourself

2109
01:06:07,920 --> 01:06:09,200
you just have to pay for the hosting

2110
01:06:09,200 --> 01:06:10,960
costs and i think that some parts are

2111
01:06:10,960 --> 01:06:12,640
not like the gui is not exactly there

2112
01:06:12,640 --> 01:06:14,559
but the core engine

2113
01:06:14,559 --> 01:06:17,280
is all there it's it's all you know

2114
01:06:17,280 --> 01:06:18,319
basically open source

2115
01:06:18,319 --> 01:06:20,400
intrigue is amazing i love where he's

2116
01:06:20,400 --> 01:06:21,599
going with intrigue and

2117
01:06:21,599 --> 01:06:24,079
john iterates super fast as well j crane

2118
01:06:24,079 --> 01:06:26,079
iterates super fast when it comes to

2119
01:06:26,079 --> 01:06:28,000
uh methods of checking in fact you know

2120
01:06:28,000 --> 01:06:29,760
after i first version this talk

2121
01:06:29,760 --> 01:06:31,039
you know he was already going over it

2122
01:06:31,039 --> 01:06:32,799
for for methods so it's amazing

2123
01:06:32,799 --> 01:06:35,200
asset note was built by um you know a

2124
01:06:35,200 --> 01:06:36,000
whole bunch of

2125
01:06:36,000 --> 01:06:37,760
former bug hunters subs being one of

2126
01:06:37,760 --> 01:06:40,640
them and uh they've gone and made it uh

2127
01:06:40,640 --> 01:06:42,960
enterprise level service uh but this

2128
01:06:42,960 --> 01:06:44,319
should be like kind of one of the gold

2129
01:06:44,319 --> 01:06:45,599
standards when it comes to

2130
01:06:45,599 --> 01:06:48,640
both functionality uh and guise for a

2131
01:06:48,640 --> 01:06:50,240
recon framework right it's a paid

2132
01:06:50,240 --> 01:06:51,039
service

2133
01:06:51,039 --> 01:06:52,559
and you probably know bug hunter's ever

2134
01:06:52,559 --> 01:06:54,160
going to use it because it's

2135
01:06:54,160 --> 01:06:56,720
expensive for a single bug hunter but

2136
01:06:56,720 --> 01:06:58,240
not expensive for a business that might

2137
01:06:58,240 --> 01:06:59,920
purchase this for an attack surface

2138
01:06:59,920 --> 01:07:01,359
management project

2139
01:07:01,359 --> 01:07:04,079
but it has a lot of functions a lot of

2140
01:07:04,079 --> 01:07:04,640
features

2141
01:07:04,640 --> 01:07:06,079
and they have started to build their own

2142
01:07:06,079 --> 01:07:07,920
vulnerability checks that nobody else is

2143
01:07:07,920 --> 01:07:09,119
checking for

2144
01:07:09,119 --> 01:07:11,119
iteratively it gives you data it tells

2145
01:07:11,119 --> 01:07:12,400
you changes

2146
01:07:12,400 --> 01:07:14,720
um it's it's you know it's probably the

2147
01:07:14,720 --> 01:07:16,319
gold standard that a lot of these open

2148
01:07:16,319 --> 01:07:17,359
source frameworks

2149
01:07:17,359 --> 01:07:18,960
are gonna you know work towards i would

2150
01:07:18,960 --> 01:07:20,960
say

2151
01:07:20,960 --> 01:07:22,240
all right then you have spider foot now

2152
01:07:22,240 --> 01:07:24,400
spider foot has an amazing gui an

2153
01:07:24,400 --> 01:07:25,839
amazing analysis

2154
01:07:25,839 --> 01:07:28,079
engine but is not tailored towards bug

2155
01:07:28,079 --> 01:07:29,119
hunters yet

2156
01:07:29,119 --> 01:07:30,720
and so i know that the author of spider

2157
01:07:30,720 --> 01:07:32,720
foot is trying to tailor

2158
01:07:32,720 --> 01:07:35,119
spider fit more towards bug hunting um

2159
01:07:35,119 --> 01:07:37,039
and uh spider foot is somewhat of a paid

2160
01:07:37,039 --> 01:07:37,599
tool but

2161
01:07:37,599 --> 01:07:39,839
it's at a lower price range so i've used

2162
01:07:39,839 --> 01:07:41,119
it a little bit for other things and he

2163
01:07:41,119 --> 01:07:42,640
started to integrate

2164
01:07:42,640 --> 01:07:44,799
bug bounty kind of ideas inside of there

2165
01:07:44,799 --> 01:07:46,160
so it's pretty good

2166
01:07:46,160 --> 01:07:47,520
the one that's unreleased that a lot of

2167
01:07:47,520 --> 01:07:48,640
people are talking about is project

2168
01:07:48,640 --> 01:07:50,480
discovery's framework and this is

2169
01:07:50,480 --> 01:07:51,599
they don't have a name for yet i can't

2170
01:07:51,599 --> 01:07:52,960
remember if they've given a name to it

2171
01:07:52,960 --> 01:07:54,640
but you can see that

2172
01:07:54,640 --> 01:07:57,440
it looks super slick right it's got um

2173
01:07:57,440 --> 01:07:57,839
you know

2174
01:07:57,839 --> 01:08:00,400
projects it's got it's got scans for

2175
01:08:00,400 --> 01:08:02,000
each of these things

2176
01:08:02,000 --> 01:08:03,760
um you know it gives you it'll give you

2177
01:08:03,760 --> 01:08:05,200
port level information this is just one

2178
01:08:05,200 --> 01:08:06,079
screenshot

2179
01:08:06,079 --> 01:08:07,920
it'll find all your subdomains for you

2180
01:08:07,920 --> 01:08:09,119
it'll you know

2181
01:08:09,119 --> 01:08:11,359
i am you whenever you or dm you whenever

2182
01:08:11,359 --> 01:08:12,799
you find a new one so

2183
01:08:12,799 --> 01:08:14,960
project discovery is working on one of

2184
01:08:14,960 --> 01:08:16,479
these it's unreleased but they've

2185
01:08:16,479 --> 01:08:17,600
released a lot of the tools that are

2186
01:08:17,600 --> 01:08:19,279
going into the engine already right

2187
01:08:19,279 --> 01:08:21,439
nuclei we've talked about

2188
01:08:21,439 --> 01:08:22,479
there's a whole bunch of other tools

2189
01:08:22,479 --> 01:08:24,880
that they're building

2190
01:08:24,880 --> 01:08:27,198
okay so these ones were new to me so on

2191
01:08:27,198 --> 01:08:28,158
top of nuclei

2192
01:08:28,158 --> 01:08:30,960
jails is also a scanner that's being

2193
01:08:30,960 --> 01:08:31,679
written

2194
01:08:31,679 --> 01:08:34,880
that is by jesse jj

2195
01:08:34,880 --> 01:08:38,158
which is awesome so i highly suggest you

2196
01:08:38,158 --> 01:08:38,799
look into

2197
01:08:38,799 --> 01:08:42,880
jails and nuclei as scanners uh osmidius

2198
01:08:42,880 --> 01:08:44,399
osmond i think that's how you say it

2199
01:08:44,399 --> 01:08:46,719
osmidius is one that you can stand up by

2200
01:08:46,719 --> 01:08:48,238
yourself it's free

2201
01:08:48,238 --> 01:08:50,560
um and you can see that we're starting

2202
01:08:50,560 --> 01:08:52,719
to get a lot of really homegrown

2203
01:08:52,719 --> 01:08:54,560
great development on these recon

2204
01:08:54,560 --> 01:08:55,839
frameworks right you can build a

2205
01:08:55,839 --> 01:08:57,040
workspace

2206
01:08:57,040 --> 01:08:58,479
it'll institute all your subdomain

2207
01:08:58,479 --> 01:09:00,880
scanning usmedius includes

2208
01:09:00,880 --> 01:09:02,880
technology profiling and port scanning

2209
01:09:02,880 --> 01:09:04,719
as well uh screenshots

2210
01:09:04,719 --> 01:09:06,799
uh yeah so it it's it's uh it's pretty

2211
01:09:06,799 --> 01:09:07,799
slick

2212
01:09:07,799 --> 01:09:11,198
huntersuite.io uh i think it's a

2213
01:09:11,198 --> 01:09:13,520
paid product but it's i think it's a

2214
01:09:13,520 --> 01:09:14,560
paid product

2215
01:09:14,560 --> 01:09:17,120
in the price range of bug hunters right

2216
01:09:17,120 --> 01:09:18,640
also starting to do the same thing

2217
01:09:18,640 --> 01:09:22,319
technology services you can scan it

2218
01:09:22,319 --> 01:09:25,279
screenshots etc all in a nice gui you

2219
01:09:25,279 --> 01:09:26,960
can start to do wordless brute forcing

2220
01:09:26,960 --> 01:09:27,520
off of it

2221
01:09:27,520 --> 01:09:30,719
it's great these two

2222
01:09:30,719 --> 01:09:32,759
are also pretty new so

2223
01:09:32,759 --> 01:09:34,880
bounty.offensiveai.com also paid but in

2224
01:09:34,880 --> 01:09:35,600
the realm

2225
01:09:35,600 --> 01:09:38,479
of feasibility for bounty hunters same

2226
01:09:38,479 --> 01:09:40,479
thing you can have projects screenshots

2227
01:09:40,479 --> 01:09:43,040
port scans domain enumeration technology

2228
01:09:43,040 --> 01:09:44,238
mapping

2229
01:09:44,238 --> 01:09:45,439
it's kind of blocked off there but you

2230
01:09:45,439 --> 01:09:46,880
can get like an attack map for each

2231
01:09:46,880 --> 01:09:48,158
individual asset

2232
01:09:48,158 --> 01:09:51,679
and look for i think cve cv parsings

2233
01:09:51,679 --> 01:09:54,080
getting worked into there uh re-engine

2234
01:09:54,080 --> 01:09:56,400
was one i used this week by

2235
01:09:56,400 --> 01:09:59,840
yoga i'm sorry i'm butchering that

2236
01:09:59,840 --> 01:10:02,400
um but he's a follower on twitter and he

2237
01:10:02,400 --> 01:10:04,080
basically took my methodology and put it

2238
01:10:04,080 --> 01:10:04,560
into

2239
01:10:04,560 --> 01:10:07,040
a framework that he made called rengen

2240
01:10:07,040 --> 01:10:07,760
or re

2241
01:10:07,760 --> 01:10:11,360
re-engine uh recon engine and uh

2242
01:10:11,360 --> 01:10:13,760
you know dashboard projects subdomain

2243
01:10:13,760 --> 01:10:14,480
scans

2244
01:10:14,480 --> 01:10:18,640
endpoint parser yeah it's pretty sick

2245
01:10:18,640 --> 01:10:20,239
it's missing a couple features i tried

2246
01:10:20,239 --> 01:10:21,679
it out this weekend but it's it's pretty

2247
01:10:21,679 --> 01:10:22,320
good

2248
01:10:22,320 --> 01:10:26,080
pretty good and it's free and then scout

2249
01:10:26,080 --> 01:10:30,080
right so pdp is a long time hacker

2250
01:10:30,080 --> 01:10:32,560
and he's been releasing web hacking

2251
01:10:32,560 --> 01:10:33,840
tools as part of the

2252
01:10:33,840 --> 01:10:37,280
sec apps.com team they make their own

2253
01:10:37,280 --> 01:10:39,360
alternative to burp which runs in the

2254
01:10:39,360 --> 01:10:40,320
browser they

2255
01:10:40,320 --> 01:10:43,199
they basically take every need that a

2256
01:10:43,199 --> 01:10:44,880
hacker bug hunter could need they make a

2257
01:10:44,880 --> 01:10:45,600
tool out of it

2258
01:10:45,600 --> 01:10:47,840
really quickly they just release scout

2259
01:10:47,840 --> 01:10:49,600
which is a subscription-based recon

2260
01:10:49,600 --> 01:10:50,640
service

2261
01:10:50,640 --> 01:10:53,679
and here you can see awesome stuff right

2262
01:10:53,679 --> 01:10:55,360
so you can schedule a project or a

2263
01:10:55,360 --> 01:10:56,320
domain

2264
01:10:56,320 --> 01:10:58,080
it will you know do sub domain

2265
01:10:58,080 --> 01:11:00,400
enumeration it'll do certificate

2266
01:11:00,400 --> 01:11:02,640
uh matching it will look for certain

2267
01:11:02,640 --> 01:11:04,320
vulnerabilities that are easy to

2268
01:11:04,320 --> 01:11:05,280
institute

2269
01:11:05,280 --> 01:11:06,800
inside of scout it'll give you

2270
01:11:06,800 --> 01:11:08,480
screenshots for everything

2271
01:11:08,480 --> 01:11:12,000
um scout looks pretty slick

2272
01:11:12,000 --> 01:11:15,040
yeah s tier stuff is getting there not

2273
01:11:15,040 --> 01:11:17,440
any uh not any one of them has done

2274
01:11:17,440 --> 01:11:18,880
everything yet right so it's still kind

2275
01:11:18,880 --> 01:11:20,320
of an open playing field there's a lot

2276
01:11:20,320 --> 01:11:20,960
of

2277
01:11:20,960 --> 01:11:23,120
methods that you know still exist to

2278
01:11:23,120 --> 01:11:24,719
implement into these

2279
01:11:24,719 --> 01:11:26,800
um things i guess the the hazard of

2280
01:11:26,800 --> 01:11:27,920
building an open source

2281
01:11:27,920 --> 01:11:29,920
framework like this is uh eventually

2282
01:11:29,920 --> 01:11:31,520
once it gets really really good a lot of

2283
01:11:31,520 --> 01:11:32,800
people use it you know you probably put

2284
01:11:32,800 --> 01:11:34,800
a significant amount of development time

2285
01:11:34,800 --> 01:11:36,960
into it and you want to get paid for

2286
01:11:36,960 --> 01:11:38,400
your work which makes total sense to me

2287
01:11:38,400 --> 01:11:38,719
and

2288
01:11:38,719 --> 01:11:40,560
as a bug hunter i will pay for a good

2289
01:11:40,560 --> 01:11:42,000
recon framework as long as it does

2290
01:11:42,000 --> 01:11:43,199
everything i need

2291
01:11:43,199 --> 01:11:45,120
so yeah so these are all really easy to

2292
01:11:45,120 --> 01:11:46,719
use if you you know really don't like

2293
01:11:46,719 --> 01:11:49,120
recon

2294
01:11:49,520 --> 01:11:51,120
just another honorable mention is this

2295
01:11:51,120 --> 01:11:53,280
nuclei tool that i talked about right uh

2296
01:11:53,280 --> 01:11:55,040
this is the end of the presentation but

2297
01:11:55,040 --> 01:11:58,480
the project discovery team has really

2298
01:11:58,480 --> 01:12:01,520
gone pretty far with um what they're

2299
01:12:01,520 --> 01:12:03,520
doing with the nuclei tools so it does a

2300
01:12:03,520 --> 01:12:05,199
whole bunch of vulnerability scans and i

2301
01:12:05,199 --> 01:12:06,640
saw a tweet earlier this week i can't

2302
01:12:06,640 --> 01:12:07,040
remember

2303
01:12:07,040 --> 01:12:10,320
who it was by um maybe corsac or some

2304
01:12:10,320 --> 01:12:11,520
one of those guys on twitter

2305
01:12:11,520 --> 01:12:13,360
but nuclei is going to be like the

2306
01:12:13,360 --> 01:12:15,760
metasploit of web hacking we haven't

2307
01:12:15,760 --> 01:12:17,920
really had something like this where

2308
01:12:17,920 --> 01:12:19,600
you can make your own checks the checks

2309
01:12:19,600 --> 01:12:21,520
are extensible and easy to write the

2310
01:12:21,520 --> 01:12:22,080
framework

2311
01:12:22,080 --> 01:12:23,760
is distributed you know they're they're

2312
01:12:23,760 --> 01:12:25,760
releasing checks all the time

2313
01:12:25,760 --> 01:12:27,440
they're releasing tool functions all the

2314
01:12:27,440 --> 01:12:30,320
time nuclei is going to be

2315
01:12:30,320 --> 01:12:32,880
you know really cool uh for a long time

2316
01:12:32,880 --> 01:12:33,760
so

2317
01:12:33,760 --> 01:12:36,239
all right we're pretty far uh in the

2318
01:12:36,239 --> 01:12:37,600
hour i'm sorry i took more than my time

2319
01:12:37,600 --> 01:12:38,880
hopefully that's okay

2320
01:12:38,880 --> 01:12:41,120
but um i really appreciate it if you

2321
01:12:41,120 --> 01:12:42,560
have any questions feel free to hit me

2322
01:12:42,560 --> 01:12:43,520
up in the chat or

2323
01:12:43,520 --> 01:12:46,560
on twitter at jhaddix and um we'll see

2324
01:12:46,560 --> 01:12:47,600
you next time

2325
01:12:47,600 --> 01:12:51,840
thanks so much bye

