1
00:00:10,643 --> 00:00:11,778
- So hi, I'm Michel.

2
00:00:11,778 --> 00:00:14,247
I'm the good-looking
guy on left.

3
00:00:14,247 --> 00:00:17,450
I'm a consultant, security
consultant at NVISO.

4
00:00:17,450 --> 00:00:19,052
- So, I'm Max.

5
00:00:19,052 --> 00:00:22,589
I work as a cyber analyst
at Belgium's National CERT,

6
00:00:22,589 --> 00:00:25,125
and we're here to talk
about threat hunting today,

7
00:00:25,125 --> 00:00:27,259
and our perspective to it.

8
00:00:27,260 --> 00:00:29,496
- And today we're going to
talk about threat hunting,

9
00:00:29,496 --> 00:00:33,400
but mainly about how to start
your threat hunting efforts,

10
00:00:33,400 --> 00:00:35,367
so we were thinking,
okay, threat hunting,

11
00:00:35,368 --> 00:00:37,904
is that something that's
only something to do

12
00:00:37,904 --> 00:00:39,472
for big organizations?

13
00:00:39,472 --> 00:00:41,541
Or is that something
that can be done by small

14
00:00:41,541 --> 00:00:43,709
to medium-sized
organizations as well?

15
00:00:43,710 --> 00:00:47,313
So we decided to do some
sort of research project,

16
00:00:47,313 --> 00:00:51,818
and take four hours a
week and almost no budget

17
00:00:51,818 --> 00:00:55,187
to see where we could get,
so we wanted to so see

18
00:00:55,188 --> 00:00:57,557
if it was feasible.

19
00:00:57,557 --> 00:00:59,826
That being said, we didn't
think we needed that much

20
00:00:59,826 --> 00:01:02,128
budget really to start it.

21
00:01:02,128 --> 00:01:04,497
Immediately, we believed
that in order to start it

22
00:01:04,497 --> 00:01:07,534
you really need to be the
biggest expert on everything

23
00:01:07,534 --> 00:01:11,905
in order to find some bad
things in your network.

24
00:01:11,905 --> 00:01:14,441
So how did we tackle this?

25
00:01:14,441 --> 00:01:18,378
- So basically, we had
a dream that one day,

26
00:01:18,378 --> 00:01:20,780
we would be able to do threat
hunting in our networks,

27
00:01:20,780 --> 00:01:24,317
because we had a lot of
questions from small-to-medium

28
00:01:24,317 --> 00:01:25,785
businesses.

29
00:01:25,785 --> 00:01:28,054
Hey, we hear a lot about this
new threat hunting thing,

30
00:01:28,054 --> 00:01:29,556
but how do we start?

31
00:01:29,556 --> 00:01:32,192
And, we don't have a lot of
money and we don't really

32
00:01:32,192 --> 00:01:33,792
have a lot of resources.

33
00:01:33,793 --> 00:01:37,230
So, that was a challenge,
and Michel and myself

34
00:01:37,230 --> 00:01:41,401
we sat together for a long
time and thanks to some,

35
00:01:43,403 --> 00:01:46,840
some alcohol involved and
some divine intervention,

36
00:01:46,840 --> 00:01:48,808
we came up with six steps.

37
00:01:48,808 --> 00:01:50,877
We believe with these six steps,

38
00:01:50,877 --> 00:01:53,213
it worked for us to do
some threat hunting,

39
00:01:53,213 --> 00:01:55,848
we believe that with those
six steps, you will be able

40
00:01:55,849 --> 00:01:58,284
to do threat hunting
for yourself as well.

41
00:01:58,284 --> 00:02:01,688
First thing's first is you
have to know your environment.

42
00:02:01,688 --> 00:02:04,157
It's really important and it
really amazes me that a lot

43
00:02:04,157 --> 00:02:06,092
of companies don't
already know this.

44
00:02:06,092 --> 00:02:07,861
What are you trying to protect?

45
00:02:07,861 --> 00:02:09,628
What are your crown jewels here?

46
00:02:09,628 --> 00:02:10,964
Is it critical data?

47
00:02:10,964 --> 00:02:12,232
Is it availability?

48
00:02:12,232 --> 00:02:13,700
Is it something else?

49
00:02:13,700 --> 00:02:16,668
It's really important that
you stop and think about this

50
00:02:16,669 --> 00:02:19,339
and identify those crown
jewels in your environment

51
00:02:19,339 --> 00:02:22,075
because those are the things
you're trying to protect.

52
00:02:22,075 --> 00:02:24,844
Next to that, it's important
to know that environment

53
00:02:24,844 --> 00:02:27,814
and it's not always
easy, and here's where

54
00:02:27,814 --> 00:02:29,249
the baselining comes in.

55
00:02:29,249 --> 00:02:31,851
I'll get back to baselining
in a couple of slides,

56
00:02:31,851 --> 00:02:35,188
but I also compare this
to a cop that's patrolling

57
00:02:35,188 --> 00:02:36,689
in his district.

58
00:02:36,689 --> 00:02:39,993
If the cop doesn't know
what is normal or abnormal

59
00:02:39,993 --> 00:02:43,096
in his district, there's
no way for the cop to know

60
00:02:43,096 --> 00:02:46,199
whether there's something
malicious or suspicious going on

61
00:02:46,199 --> 00:02:48,701
and that he needs to
investigate it even further,

62
00:02:48,701 --> 00:02:51,436
so we get back to that in a
minute with the baselining.

63
00:02:51,437 --> 00:02:54,040
The next step then I
know your adversary.

64
00:02:54,040 --> 00:02:57,677
Now, this may seem or sound
like an idle statement,

65
00:02:57,677 --> 00:02:59,179
you know, know your adversary,

66
00:02:59,179 --> 00:03:01,214
we're basically afraid
of anything that's trying

67
00:03:01,214 --> 00:03:02,148
to get in, right?

68
00:03:02,148 --> 00:03:04,817
But what we did actually, we,

69
00:03:04,817 --> 00:03:09,522
we draw on a big canvas and
we put two vectors on there,

70
00:03:09,522 --> 00:03:11,823
threat actors and
threat vectors,

71
00:03:11,824 --> 00:03:13,526
and the threat actors are,

72
00:03:13,526 --> 00:03:17,363
can be anything ranging from
nation states to internal

73
00:03:17,363 --> 00:03:19,632
threats, internal insiders,

74
00:03:21,100 --> 00:03:23,736
and the threat vectors then
can be anything ranging from

75
00:03:23,736 --> 00:03:26,405
social engineering to zero days,

76
00:03:27,373 --> 00:03:28,875
to normal malware.

77
00:03:30,877 --> 00:03:33,379
And when you combine these
two things, you actually

78
00:03:33,379 --> 00:03:36,583
create scenarios and those
scenarios are really important

79
00:03:36,583 --> 00:03:39,419
to have a focus when you're
doing your threat hunting

80
00:03:39,419 --> 00:03:43,223
and that scenarios are not
only important for the focus

81
00:03:43,223 --> 00:03:45,725
but also for the time
frame that you're defining,

82
00:03:45,725 --> 00:03:47,460
and the third point here,

83
00:03:47,460 --> 00:03:50,430
knowing when to start and to
stop with your threat hunt

84
00:03:50,430 --> 00:03:53,333
is as important as deciding
that you want to start

85
00:03:53,333 --> 00:03:55,134
with that threat hunting itself.

86
00:03:55,134 --> 00:03:57,603
Because you want that focus
point in your threat hunting.

87
00:03:57,604 --> 00:04:01,708
It doesn't make sense to just
go threat hunting sometime

88
00:04:01,708 --> 00:04:05,111
and don't really look at how
much time you're spending

89
00:04:05,111 --> 00:04:06,646
with that

90
00:04:06,646 --> 00:04:09,182
because you will not have
a lot of value with that.

91
00:04:09,182 --> 00:04:12,351
Like, in our case, we decided
to, four hours a week,

92
00:04:12,352 --> 00:04:14,287
so that's 16 hours in a month,

93
00:04:14,287 --> 00:04:17,890
and to get the most added
value out of every scenario,

94
00:04:17,890 --> 00:04:20,125
we decided to
rotate that monthly,

95
00:04:20,125 --> 00:04:23,462
so on a monthly basis, we had
a new scenario we looked at

96
00:04:23,463 --> 00:04:26,366
and defined our
threat hunt with that.

97
00:04:26,366 --> 00:04:28,668
Now, of course, then, we do
the threat hunting itself,

98
00:04:28,668 --> 00:04:30,837
we'll get back to that
in a couple of slides,

99
00:04:30,837 --> 00:04:33,772
but the fifth point here is
really important as well.

100
00:04:33,773 --> 00:04:36,542
Review your output
and automate it.

101
00:04:36,542 --> 00:04:39,344
You really need to automate
it because if you're doing

102
00:04:39,345 --> 00:04:41,180
the same thing over
and over again,

103
00:04:41,180 --> 00:04:43,516
you're basically just doing
security operations, right?

104
00:04:43,516 --> 00:04:45,251
You're not really doing
threat hunting anymore

105
00:04:45,251 --> 00:04:47,219
so that's really,
really important,

106
00:04:47,220 --> 00:04:49,989
and we'll get back to
that in a minute as well.

107
00:04:49,989 --> 00:04:53,258
- So, our approach, as Maxim
already said, baselining.

108
00:04:53,259 --> 00:04:55,395
Baselining is something
that helps us a lot

109
00:04:55,395 --> 00:04:58,631
and it's something that's
not really easy to do,

110
00:04:58,631 --> 00:05:00,732
so for that, we started small.

111
00:05:00,733 --> 00:05:04,270
Maxim already talked
about creating scenarios,

112
00:05:04,270 --> 00:05:06,371
so we took a defined time frame,

113
00:05:06,372 --> 00:05:09,976
we gave ourselves only four
hours a week to do this,

114
00:05:09,976 --> 00:05:12,745
so we really needed to
focus our efforts in order

115
00:05:12,745 --> 00:05:13,680
to do this.

116
00:05:15,148 --> 00:05:17,116
Now, despite, and indeed I
have a network engineering

117
00:05:17,116 --> 00:05:18,618
background.

118
00:05:18,618 --> 00:05:20,953
Maxim will talk more on the
network-based threat hunting.

119
00:05:20,953 --> 00:05:22,688
- Yeah, exactly, so
before we start with that,

120
00:05:22,689 --> 00:05:24,290
just a step back,

121
00:05:24,290 --> 00:05:28,094
and ensure that our mission
here is completely clear

122
00:05:28,094 --> 00:05:29,329
to you guys.

123
00:05:29,329 --> 00:05:31,264
This is about how to
start threat hunting.

124
00:05:31,264 --> 00:05:33,900
We saw a lot of people on
the stage already with, like,

125
00:05:33,900 --> 00:05:36,669
okay, how threat hunting
looks at advanced,

126
00:05:36,669 --> 00:05:39,772
with a lot of
systems and networks,

127
00:05:39,772 --> 00:05:41,441
but this is really
aimed to more,

128
00:05:41,441 --> 00:05:44,176
towards the small, medium
business that want to start

129
00:05:44,177 --> 00:05:46,279
with threat hunting
on a budget, so,

130
00:05:46,279 --> 00:05:47,814
just to make that clear,

131
00:05:47,814 --> 00:05:49,949
we decided to split it up
between the network-based

132
00:05:49,949 --> 00:05:51,984
threat hunting and
host-based threat hunting,

133
00:05:51,984 --> 00:05:53,219
because those are
the two major parts

134
00:05:53,219 --> 00:05:55,921
in the threat hunting
space that we see.

135
00:05:55,922 --> 00:05:58,791
Now, for network-based
threat hunting,

136
00:05:58,791 --> 00:06:00,960
you first need to start with
an infrastructure, right?

137
00:06:00,960 --> 00:06:04,229
So, you want to see what's
flowing inside the network

138
00:06:04,230 --> 00:06:06,933
and what we did
there is basically,

139
00:06:06,933 --> 00:06:10,002
there's two kinds
of network tabs.

140
00:06:10,002 --> 00:06:12,004
First, a network tab that
will capture all the traffic

141
00:06:12,004 --> 00:06:13,873
that's flowing
outside your network

142
00:06:13,873 --> 00:06:15,942
because that's what we
really want to look at,

143
00:06:15,942 --> 00:06:18,378
and then, of course,
some network tabs inside

144
00:06:18,378 --> 00:06:21,180
your network that will
capture all the flows

145
00:06:21,180 --> 00:06:23,783
that not necessarily
are going outside.

146
00:06:23,783 --> 00:06:26,219
Now, depending on the
complexity and the segregation

147
00:06:26,219 --> 00:06:28,688
of your network, the amount
of network tabs that you will

148
00:06:28,688 --> 00:06:30,857
need will completely vary,

149
00:06:32,258 --> 00:06:35,027
but what's also important
is the storage thing.

150
00:06:35,027 --> 00:06:37,430
Storage is pretty cheap
nowadays, I would argue,

151
00:06:37,430 --> 00:06:41,234
and I will really urge you,
if you are starting with this

152
00:06:41,234 --> 00:06:43,402
to maximize your storage,

153
00:06:43,403 --> 00:06:46,706
so that you can store
as much as full,

154
00:06:46,706 --> 00:06:49,809
full data captures as possible,

155
00:06:49,809 --> 00:06:51,744
and if that's an issue for
you in your environment,

156
00:06:51,744 --> 00:06:55,348
really recommends to keep
as much of the netflow data

157
00:06:55,348 --> 00:06:57,917
as possible, so
we can analyze it

158
00:06:57,917 --> 00:07:00,018
and go back in time
when we find something.

159
00:07:00,019 --> 00:07:01,854
Now, the tools we
used, pretty simple,

160
00:07:01,854 --> 00:07:03,656
we're only going to
use two types of tools.

161
00:07:03,656 --> 00:07:05,691
We're going to use Bro
Framework and we're going to use

162
00:07:05,691 --> 00:07:08,027
an ELK stack, which
is Elasticsearch,

163
00:07:08,027 --> 00:07:09,962
Logstash and Kibana.

164
00:07:09,962 --> 00:07:11,897
That's the only two tools
we're going to use here

165
00:07:11,898 --> 00:07:13,666
in the networking
threat hunting.

166
00:07:13,666 --> 00:07:17,236
Now, before we start
going into that entire

167
00:07:17,236 --> 00:07:20,973
threat hunting part and
with Bro and ELK Stack,

168
00:07:20,973 --> 00:07:22,308
first you need that baseline.

169
00:07:22,308 --> 00:07:25,111
Now, I realize this
is not an easy thing.

170
00:07:25,111 --> 00:07:27,346
It's not as easy as saying,
hey, we'll just draw

171
00:07:27,346 --> 00:07:29,615
a baseline from my network
traffic and that's it.

172
00:07:29,615 --> 00:07:32,819
It's something that
will evolve over time

173
00:07:32,819 --> 00:07:35,254
but it's really important
not to make a capital mistake

174
00:07:35,254 --> 00:07:36,989
that we've seen a
lot of people make

175
00:07:36,989 --> 00:07:39,991
is waiting until you
have a perfect baseline

176
00:07:39,992 --> 00:07:41,260
to start with the threat hunt.

177
00:07:41,260 --> 00:07:44,096
That's completely wrong
because of two things.

178
00:07:44,096 --> 00:07:46,766
One, you will never
have a perfect baseline.

179
00:07:46,766 --> 00:07:48,634
It will continue
to evolve, and two,

180
00:07:48,634 --> 00:07:51,204
it's better to create
and maintain a baseline

181
00:07:51,204 --> 00:07:53,539
throughout your threat
hunting over and over again,

182
00:07:53,539 --> 00:07:58,311
but we discovered that it's
very helpful to build up

183
00:07:58,311 --> 00:08:01,481
baselines smartly so that
means that you're trying to

184
00:08:01,481 --> 00:08:04,183
filter out all the things that
you're seeing in the network

185
00:08:04,183 --> 00:08:06,085
which are completely
benign and that you checked

186
00:08:06,085 --> 00:08:08,488
with the business, so,
for example, user age

187
00:08:08,488 --> 00:08:12,158
and (mumbles), well-known IP
addresses and domain names,

188
00:08:12,158 --> 00:08:15,194
you can use some (mumbles)
lists or other lists,

189
00:08:15,194 --> 00:08:17,530
references for that, just
to filter out that traffic

190
00:08:17,530 --> 00:08:20,700
that's completely benign,
and that helps a lot

191
00:08:20,700 --> 00:08:22,668
into creating that baseline.

192
00:08:22,668 --> 00:08:26,005
Very important here, and
that's something we really

193
00:08:26,005 --> 00:08:28,107
recommend everyone that's
starting with that threat hunt,

194
00:08:28,107 --> 00:08:30,176
make sure in the first
period of your threat hunting

195
00:08:30,176 --> 00:08:34,145
and forming that baseline,
you have that direct line

196
00:08:34,145 --> 00:08:36,281
to the business because
you will need to validate

197
00:08:36,282 --> 00:08:39,252
a lot of stuff with them
in order to have that

198
00:08:39,251 --> 00:08:41,020
valid baseline.

199
00:08:41,020 --> 00:08:42,255
So that's really important.

200
00:08:42,255 --> 00:08:46,092
Now, Bro and ELK Stack,
like, we said before,

201
00:08:46,092 --> 00:08:48,895
why I like Bro so much,
it's not only an IDS,

202
00:08:48,895 --> 00:08:51,197
but it's the complete framework
around it and a community

203
00:08:51,197 --> 00:08:52,899
providing a lot of scripts,

204
00:08:52,899 --> 00:08:54,066
and Bro is actually pretty cool.

205
00:08:54,066 --> 00:08:55,535
You just,

206
00:08:55,535 --> 00:08:59,671
it will create logs of
every PCAP you throw at it

207
00:08:59,672 --> 00:09:00,907
and it will separate logs,

208
00:09:00,907 --> 00:09:04,410
depending on the amount
or the type of traffic

209
00:09:04,410 --> 00:09:06,945
that goes through them
so that HTP traffic,

210
00:09:06,946 --> 00:09:08,748
SSL, DNS, (mumbles),

211
00:09:08,748 --> 00:09:12,118
anything that sees it will
create a different log.

212
00:09:12,118 --> 00:09:14,654
Now, you can just
manually parse with logs,

213
00:09:14,654 --> 00:09:17,723
with the tools of the trade,
but you can really scale

214
00:09:17,723 --> 00:09:21,260
things up by forwarding
those into an ELK Stack,

215
00:09:21,260 --> 00:09:24,030
and then create dashboards
to spot anomalies.

216
00:09:24,030 --> 00:09:27,400
Now, I know, maybe some of
you are a little afraid of ELK

217
00:09:27,400 --> 00:09:30,536
because it's a lot of
hassle to set it up,

218
00:09:30,536 --> 00:09:34,574
but nowadays there's
some really great,

219
00:09:34,574 --> 00:09:37,642
some really great scripts
out there that can create

220
00:09:37,643 --> 00:09:41,047
the ELK Stack for you,
so that's pretty awesome

221
00:09:41,047 --> 00:09:43,683
and I would recommend to
start with that so you can

222
00:09:43,683 --> 00:09:46,052
easily set it up and
don't waste too much time

223
00:09:46,052 --> 00:09:48,187
with the configuration itself.

224
00:09:48,187 --> 00:09:49,855
Like we said, we
created some scenarios

225
00:09:49,855 --> 00:09:52,692
and the scenario we
were focused on here

226
00:09:52,692 --> 00:09:54,393
was the data exfiltration.

227
00:09:54,393 --> 00:09:58,998
Now, first example here of
a manual parsing of Bro,

228
00:09:58,998 --> 00:10:01,734
very simple and very easy.

229
00:10:01,734 --> 00:10:04,437
We're just going to
look at the DNS log.

230
00:10:04,437 --> 00:10:07,640
We tell Bro to cut
it with a Bro cut,

231
00:10:07,640 --> 00:10:09,141
and only look at the queries,

232
00:10:09,141 --> 00:10:11,911
so Bro cut is a part
of the Bro framework,

233
00:10:11,911 --> 00:10:13,244
and will just cut it,

234
00:10:13,245 --> 00:10:15,915
the field that you want,

235
00:10:15,915 --> 00:10:18,516
sort it uniquely in
reverse order so we see

236
00:10:18,517 --> 00:10:20,386
the longest DNS queries first.

237
00:10:20,386 --> 00:10:22,954
Now, why the longest first?

238
00:10:22,955 --> 00:10:25,024
Because we see a lot of
malware that still uses

239
00:10:25,024 --> 00:10:28,594
those long types
of DNS requests,

240
00:10:28,594 --> 00:10:32,064
and here, already seeing
an evilactor DNS request

241
00:10:32,064 --> 00:10:33,232
popping up.

242
00:10:33,232 --> 00:10:34,766
Just by going
through those logs,

243
00:10:34,767 --> 00:10:37,470
doing the log data analysis,
that's something you could

244
00:10:37,470 --> 00:10:39,271
do manually, of course.

245
00:10:39,271 --> 00:10:43,209
Another example here is looking
at suspicious user-agents.

246
00:10:43,209 --> 00:10:45,544
Here, we're going
to look at HTTP log.

247
00:10:45,544 --> 00:10:48,314
We tell Bro to cut it
only to field user agents,

248
00:10:48,314 --> 00:10:52,351
and uniquely sort it, and
those of you with sharp eyes

249
00:10:52,351 --> 00:10:54,720
or good glasses may have
already noticed that there's

250
00:10:54,720 --> 00:10:57,690
a user-agent in there which
is not really user agent

251
00:10:57,690 --> 00:11:01,994
and there's some other
suspicious agents
in there as well.

252
00:11:01,994 --> 00:11:03,729
Next up, Elk Dashboards.

253
00:11:03,729 --> 00:11:05,798
We're not going to bore
you with the entire setup

254
00:11:05,798 --> 00:11:09,135
that we did with ELK, but it's
all about the search queries

255
00:11:09,135 --> 00:11:11,871
you define there, and they're
basically sort of like

256
00:11:11,871 --> 00:11:14,874
the same that you do in Bro,
but only, you can automate

257
00:11:14,874 --> 00:11:17,777
them easier in a
single dashboard, so
you can immediately

258
00:11:17,777 --> 00:11:19,045
spot those.

259
00:11:19,045 --> 00:11:21,514
For example here, we are
looking at the bottom 50

260
00:11:21,514 --> 00:11:24,116
user agents that were
flowing through our network

261
00:11:24,116 --> 00:11:25,050
on a period of,

262
00:11:25,051 --> 00:11:27,086
in a time frame of a month,

263
00:11:27,086 --> 00:11:31,090
so there's a lot of
interesting user agents here

264
00:11:32,258 --> 00:11:34,694
that we definitely would
want to have a look at

265
00:11:34,694 --> 00:11:36,194
in the first time
we're doing this,

266
00:11:36,195 --> 00:11:38,798
so this is really the
first analysis that we did,

267
00:11:38,798 --> 00:11:42,835
creating the baseline and
looking at what is suspicious

268
00:11:42,835 --> 00:11:46,639
or has only occurred
once inside a network.

269
00:11:46,639 --> 00:11:48,808
Same thing here
with DNS queries,

270
00:11:48,808 --> 00:11:52,078
and you can see here that we
immediately spotted a .top

271
00:11:52,078 --> 00:11:56,082
domain-level list and those
of you who paid attention

272
00:11:56,082 --> 00:11:58,584
to some previous
presentations may have noticed

273
00:11:58,584 --> 00:12:02,655
already that the .top
domain is associated with

274
00:12:02,655 --> 00:12:03,889
server, yeah?

275
00:12:03,889 --> 00:12:06,358
Exactly, with server,
so that was some malware

276
00:12:06,358 --> 00:12:09,261
that we found immediately
with creating a dashboard

277
00:12:09,261 --> 00:12:13,499
like that, looking at what
has communicated in a network.

278
00:12:13,499 --> 00:12:16,602
Now, like I said before,
I really like Bro

279
00:12:16,602 --> 00:12:19,238
and one of the things
why I like Bro is that

280
00:12:19,238 --> 00:12:21,741
the community is
so strong around it

281
00:12:21,741 --> 00:12:23,976
and we have a lot of scripts
that really can automate

282
00:12:23,976 --> 00:12:25,611
what you're doing with it.

283
00:12:25,611 --> 00:12:29,081
For example, two scripts
I really, really like,

284
00:12:29,081 --> 00:12:33,319
first one is the Reservoir
Labs exfiltration framework.

285
00:12:33,319 --> 00:12:36,756
It will basically detect
any file uploads in a TCP

286
00:12:36,756 --> 00:12:40,226
connection, if you run
that script with Bro,

287
00:12:40,226 --> 00:12:44,230
which is really awesome
to spot a lot of that,

288
00:12:44,230 --> 00:12:47,700
a lot of the file uploads
that malware are using

289
00:12:47,700 --> 00:12:49,969
and evil actors are using
for data exfiltration.

290
00:12:49,969 --> 00:12:52,204
Another one I really
like, it's so simple

291
00:12:52,204 --> 00:12:55,608
but it's so effective,
is the VirusTotal Check.

292
00:12:55,608 --> 00:12:58,743
Bro has the capability of
when you throw a PCAP at it,

293
00:12:58,744 --> 00:13:01,280
to exfiltrate all the
exi files from it,

294
00:13:01,280 --> 00:13:04,216
generate a hash, check
against Virustotal ware,

295
00:13:04,216 --> 00:13:06,018
whether they are
malicious or not,

296
00:13:06,018 --> 00:13:08,387
and they will feed
you that information,

297
00:13:08,387 --> 00:13:10,388
and that was really cool
because there's a lot

298
00:13:10,389 --> 00:13:12,124
of information we got from that,

299
00:13:12,124 --> 00:13:15,928
and you can easily spot some
of this malicious traffic.

300
00:13:15,928 --> 00:13:17,129
Now, what else?

301
00:13:17,129 --> 00:13:20,299
And, this is something
I also really like

302
00:13:20,299 --> 00:13:21,967
is using honey tokens.

303
00:13:21,967 --> 00:13:26,338
Now, honey tokens
is not necessarily
looking for something

304
00:13:26,338 --> 00:13:29,241
but it's placing a trap for
a malicious actor inside

305
00:13:29,241 --> 00:13:30,476
your network.

306
00:13:30,476 --> 00:13:33,245
A honey token has no
business value at all,

307
00:13:33,245 --> 00:13:34,647
but it is a user,

308
00:13:35,781 --> 00:13:38,449
it could be a user
password combination,

309
00:13:38,450 --> 00:13:41,620
it could be a file
or a folder that is

310
00:13:41,620 --> 00:13:44,857
very attractive to someone
who is looking inside

311
00:13:44,857 --> 00:13:46,091
your networks.

312
00:13:46,091 --> 00:13:47,359
Could be accounting,
it could be passwords,

313
00:13:47,359 --> 00:13:48,861
it could be anything else.

314
00:13:48,861 --> 00:13:50,462
And what you do, you make
sure that it has no business

315
00:13:50,462 --> 00:13:53,299
purpose at all, so nobody
should ever be touching that

316
00:13:53,299 --> 00:13:54,667
user agent,

317
00:13:54,667 --> 00:13:57,369
that user password
combination or file or folder,

318
00:13:57,369 --> 00:13:59,338
and you place an order on it,

319
00:13:59,338 --> 00:14:01,940
so the minute that it starts
flowing inside your network

320
00:14:01,941 --> 00:14:04,176
or someone is using it,
you immediately know

321
00:14:04,176 --> 00:14:08,247
that something is wrong,
and you need to investigate.

322
00:14:08,247 --> 00:14:10,115
Now, first you start looking
for that low-hanging fruit,

323
00:14:10,115 --> 00:14:11,550
right?

324
00:14:11,550 --> 00:14:13,519
And you automate any
detection method you find

325
00:14:13,519 --> 00:14:15,054
and you try to
develop new scenarios.

326
00:14:15,054 --> 00:14:18,324
For example, some of the
scenarios we was looking here

327
00:14:18,324 --> 00:14:19,558
at unknown protocols.

328
00:14:19,558 --> 00:14:22,461
You see the red spikes
in our dashboards there

329
00:14:22,461 --> 00:14:25,097
and those red spikes are
the unknown protocols.

330
00:14:25,097 --> 00:14:27,165
So there were protocols
that were not flowing in our

331
00:14:27,166 --> 00:14:29,468
network before, so
with the baseline,

332
00:14:29,468 --> 00:14:30,969
and suddenly we
have a new protocol.

333
00:14:30,970 --> 00:14:32,938
Now, that could be that
it's a valid business use,

334
00:14:32,938 --> 00:14:35,941
but it could also be that
it is something that we

335
00:14:35,941 --> 00:14:38,277
should have a look
at as malicious.

336
00:14:38,277 --> 00:14:40,946
Another thing here, created
a dashboard looking at

337
00:14:40,946 --> 00:14:43,682
which domains have been
contacted multiple times

338
00:14:43,682 --> 00:14:46,852
by a unique host, so one host,

339
00:14:46,852 --> 00:14:49,688
only one host contacting
the domain multiple times,

340
00:14:49,688 --> 00:14:53,525
and it appears that
we have a Windows,

341
00:14:53,525 --> 00:14:57,363
or Microsoft fanboy in there
because he was contacting Bing

342
00:14:57,363 --> 00:14:59,598
and he was the only
one contacting Bing

343
00:14:59,598 --> 00:15:01,733
in the cyber network 80
times, so that immediately

344
00:15:01,734 --> 00:15:05,070
stands out which is pretty
cool to see in the dashboards.

345
00:15:05,070 --> 00:15:07,806
And one of the last things we
did because we only started

346
00:15:07,806 --> 00:15:10,542
with this entire threat
hunting program ourselves

347
00:15:10,542 --> 00:15:12,378
to create this
presentation in January,

348
00:15:12,378 --> 00:15:16,248
was looking at the Shannon
Entropy of DNS requests.

349
00:15:16,248 --> 00:15:19,251
Now, basically what we're
doing here is looking at how

350
00:15:19,251 --> 00:15:21,987
random is a DNS request?

351
00:15:21,987 --> 00:15:24,757
It's great to spot some of
that fast-fluxing command

352
00:15:24,757 --> 00:15:27,859
and control traffic,
but also some ransomware

353
00:15:27,860 --> 00:15:31,664
and other malware has been
using very random DNS strings.

354
00:15:31,664 --> 00:15:33,799
It will generate a lot
of noise because of a lot

355
00:15:33,799 --> 00:15:36,401
of the content providers
on the internet,

356
00:15:36,402 --> 00:15:40,873
does have the same methodology
of generating random requests

357
00:15:40,873 --> 00:15:42,808
but if you try to,

358
00:15:42,808 --> 00:15:44,910
if you filter those out,
it's really effective,

359
00:15:44,910 --> 00:15:46,545
and I really want to
give a shout out here

360
00:15:46,545 --> 00:15:48,680
to (mumbles)'s Frequency .BI

361
00:15:48,681 --> 00:15:52,484
and Frequency Server.BI, which
will allow you to generate

362
00:15:52,484 --> 00:15:56,989
your own entropy sets to
use inside your network.

363
00:15:56,989 --> 00:15:58,657
Now, Michel is going
to talk some more about

364
00:15:58,657 --> 00:16:00,459
host based threat hunting.

365
00:16:00,459 --> 00:16:02,161
- Yes, thank you, Maxim.

366
00:16:02,161 --> 00:16:04,295
So, as we already said,

367
00:16:04,296 --> 00:16:07,333
we're going from a standpoint
from small-to-medium-sized

368
00:16:07,333 --> 00:16:10,368
enterprises, so we
used what we had.

369
00:16:10,369 --> 00:16:14,540
So, in order to extract data
from the hosts in our network

370
00:16:15,641 --> 00:16:17,242
we set up a,

371
00:16:17,242 --> 00:16:19,044
we already had a file
server of course,

372
00:16:19,044 --> 00:16:21,847
we just opened a
read-only network share,

373
00:16:21,847 --> 00:16:24,016
in which we hosted
some PowerShell scripts

374
00:16:24,016 --> 00:16:26,752
that would then be executed
by the hosts in our network,

375
00:16:26,752 --> 00:16:28,286
on a weekly basis,

376
00:16:28,287 --> 00:16:31,457
and the output would then
be written to a read-write

377
00:16:31,457 --> 00:16:33,859
network share of course,
from which we then pulled

378
00:16:33,859 --> 00:16:36,161
the results for analysis.

379
00:16:36,161 --> 00:16:38,696
So, very easy setup, as you see.

380
00:16:38,697 --> 00:16:40,933
Now, what we were looking at,

381
00:16:40,933 --> 00:16:42,534
which artifacts
were we looking at?

382
00:16:42,534 --> 00:16:45,337
To start with, the running
processes, of course,

383
00:16:45,337 --> 00:16:47,806
is very interesting,
but as you can see,

384
00:16:47,806 --> 00:16:50,442
there's a lot of
information that you can get

385
00:16:50,442 --> 00:16:53,012
so we condensed this and we
only looked at the things

386
00:16:53,012 --> 00:16:56,949
that we found valuable, out of
personal preference actually

387
00:16:56,949 --> 00:16:59,084
so here's the process
name, process path,

388
00:16:59,084 --> 00:17:01,353
and the calculated MD5 hash.

389
00:17:02,788 --> 00:17:05,391
Another thing we looked at
were installed services,

390
00:17:05,391 --> 00:17:06,959
and scheduled tasks.

391
00:17:06,959 --> 00:17:09,995
I wasn't sure about a month
ago, whether I should leave

392
00:17:09,994 --> 00:17:11,929
in the scheduled tasks
or not, when they asked,

393
00:17:11,930 --> 00:17:13,098
I was thinking, okay,

394
00:17:13,098 --> 00:17:15,166
I used it in
(mumbles) assignments,

395
00:17:15,166 --> 00:17:17,403
but who else is using it?

396
00:17:17,403 --> 00:17:21,173
Then, the Vault7 leaks came
and indeed, there I saw that

397
00:17:21,173 --> 00:17:23,842
scheduled tasks were still used.

398
00:17:25,577 --> 00:17:27,713
Other known persistence
mechanisms we looked at

399
00:17:27,713 --> 00:17:29,514
are the run keys of course,

400
00:17:29,515 --> 00:17:32,151
and the Start folder of Windows.

401
00:17:32,151 --> 00:17:36,121
So two things that are often
used by the bad guys as well.

402
00:17:36,121 --> 00:17:38,023
And then, the last thing,
not really an artifact,

403
00:17:38,023 --> 00:17:39,858
but more looking at the logs,

404
00:17:39,858 --> 00:17:43,028
it's to see which users
have logged on onto a system

405
00:17:43,028 --> 00:17:46,565
so in our environment,
small environment,

406
00:17:46,565 --> 00:17:50,469
each user has his own system
and normally, nobody else

407
00:17:50,469 --> 00:17:53,372
should log on to that system
so if somebody else logs on

408
00:17:53,372 --> 00:17:57,676
to that system, it's
something to look into.

409
00:17:57,676 --> 00:18:00,178
Now, the output,
again, very easy,

410
00:18:00,179 --> 00:18:02,214
the output is just six files,

411
00:18:02,214 --> 00:18:05,551
which we could open with
Excel and we could go through

412
00:18:05,551 --> 00:18:09,721
manually, so within
our defined time limit,

413
00:18:09,721 --> 00:18:12,825
that was manageable for
five systems, but as soon as

414
00:18:12,825 --> 00:18:15,727
we got up to more systems,
it became more difficult

415
00:18:15,727 --> 00:18:17,229
because there was so much data,

416
00:18:17,229 --> 00:18:19,665
so much running processes,
so much scheduled tasks,

417
00:18:19,665 --> 00:18:23,068
of course, so we already
talked about this.

418
00:18:23,068 --> 00:18:27,239
We started to build the
known good baseline.

419
00:18:27,239 --> 00:18:28,974
So, again, very easy.

420
00:18:30,409 --> 00:18:33,112
For each thing we knew that
was good that we investigated,

421
00:18:33,112 --> 00:18:35,447
okay, this process
is a good process,

422
00:18:35,447 --> 00:18:36,715
this is the known process,

423
00:18:36,715 --> 00:18:38,283
we just created the line item,

424
00:18:38,283 --> 00:18:41,887
and then we created the
Python script that would parse

425
00:18:41,887 --> 00:18:45,023
all our output and
give us back this.

426
00:18:45,023 --> 00:18:47,559
Now, as you can see here,
instead of having to go through

427
00:18:47,559 --> 00:18:51,897
20 line items or 30
line items of processes

428
00:18:51,897 --> 00:18:54,099
or scheduled tasks or whatever,

429
00:18:54,099 --> 00:18:58,070
we only needed to go to
two here, for instance.

430
00:18:58,070 --> 00:19:01,572
So it was, took away
a lot of work from us.

431
00:19:02,708 --> 00:19:05,043
Now, I'm going to be honest.

432
00:19:05,043 --> 00:19:09,214
We didn't find any bad things
in the time we were doing this

433
00:19:10,048 --> 00:19:11,283
which is good of course.

434
00:19:11,283 --> 00:19:15,587
Then again, we're also
a security company, so,

435
00:19:15,587 --> 00:19:18,490
maybe I just haven't
looked good enough

436
00:19:18,490 --> 00:19:20,259
and there are bad things,
but for the moment,

437
00:19:20,259 --> 00:19:21,760
we didn't find anything.

438
00:19:21,760 --> 00:19:24,863
What we did find and what I
think you will always find

439
00:19:24,863 --> 00:19:26,265
when doing threat hunting,

440
00:19:26,265 --> 00:19:29,668
is just finding irregularities
in your systems.

441
00:19:29,668 --> 00:19:31,602
Like, this example,

442
00:19:31,603 --> 00:19:34,573
we all upgraded our systems
from Windows 8 to Windows 10,

443
00:19:34,573 --> 00:19:37,676
or, our IT guy upgraded
our systems from Windows 8

444
00:19:37,676 --> 00:19:40,345
to Windows 10, and
as you can see here,

445
00:19:40,345 --> 00:19:44,516
servicehost.exe on one
computer had a different hash

446
00:19:45,384 --> 00:19:47,586
than all the other computers.

447
00:19:47,586 --> 00:19:49,688
So, I immediately
called the IT guy, said,

448
00:19:49,688 --> 00:19:51,323
"Okay, there's something
wrong because this

449
00:19:51,323 --> 00:19:52,858
"is a Windows process.

450
00:19:52,858 --> 00:19:55,494
"It should be the same on
all our standard builds."

451
00:19:55,494 --> 00:19:59,164
So it turned out this was indeed
the computer of our IT guy

452
00:19:59,164 --> 00:20:02,201
who hadn't upgraded
yet to Windows 10,

453
00:20:02,201 --> 00:20:06,004
so, okay, maybe that
was a bad thing,

454
00:20:06,004 --> 00:20:10,175
but at least we got him
to upgrade rather quickly.

455
00:20:12,344 --> 00:20:14,479
Now, for building that
baseline, as I said,

456
00:20:14,479 --> 00:20:16,815
I wanted to bring down
the number of line items

457
00:20:16,815 --> 00:20:20,552
I needed to check on a weekly
basis as soon as possible,

458
00:20:20,552 --> 00:20:24,923
so using Excel, I could
easily create a chart of which

459
00:20:24,923 --> 00:20:27,993
processes were most occurring,
and as you can see here,

460
00:20:27,993 --> 00:20:30,462
Chrome is occurring
over 60 times,

461
00:20:30,462 --> 00:20:33,865
so it's pretty easy to
just check everything,

462
00:20:33,865 --> 00:20:35,467
all the Chrome processes here.

463
00:20:35,467 --> 00:20:37,903
There were now two different
versions of Chrome running.

464
00:20:37,903 --> 00:20:40,005
It's easy to check those
versions and to add them

465
00:20:40,005 --> 00:20:42,374
to the baseline and
then next time we have,

466
00:20:42,374 --> 00:20:46,278
well, at least 60 line
items less to check.

467
00:20:46,278 --> 00:20:48,847
Now, in order to
keep this manageable,

468
00:20:48,847 --> 00:20:53,085
when you go up to 20 systems,
and doing this manually,

469
00:20:53,085 --> 00:20:56,288
and indeed, starting threat
hunting, it becomes difficult,

470
00:20:56,288 --> 00:20:59,258
so, for that, we needed to
focus our efforts and that's

471
00:20:59,258 --> 00:21:02,995
more like Maxim said, go
towards the scenarios,

472
00:21:02,995 --> 00:21:05,964
so for instance, in week
one you can focus on, like,

473
00:21:05,964 --> 00:21:09,467
five VIP systems of the
most important people

474
00:21:09,468 --> 00:21:11,436
in your organization.

475
00:21:11,436 --> 00:21:13,938
In week two, you can look at
all your domain controllers

476
00:21:13,939 --> 00:21:17,109
or on your mail
servers, or whatever.

477
00:21:17,109 --> 00:21:19,311
What you also can do
is looking at frequency

478
00:21:19,311 --> 00:21:21,780
and I do some
frequency analysis.

479
00:21:21,780 --> 00:21:23,982
Instead of looking at the
most-occurring process,

480
00:21:23,982 --> 00:21:27,085
look at the process
that's only occurring once

481
00:21:27,085 --> 00:21:29,221
in your entire organization.

482
00:21:29,221 --> 00:21:31,123
Maybe it's a PowerShell,

483
00:21:31,123 --> 00:21:32,391
PowerPoint, no,

484
00:21:34,359 --> 00:21:36,995
whatever, process
that is happening,

485
00:21:36,995 --> 00:21:39,197
and maybe it's
totally legitimate,

486
00:21:39,197 --> 00:21:42,199
but it could also
be something bad.

487
00:21:42,200 --> 00:21:44,770
And then, as a last
thing, something I still

488
00:21:44,770 --> 00:21:48,440
want to look into is the
historical state analysis.

489
00:21:48,440 --> 00:21:52,678
It's taking a snapshot
of a system on day one,

490
00:21:52,678 --> 00:21:55,314
and taking a snapshot of
a system on day seven,

491
00:21:55,314 --> 00:21:56,782
and see what has changed,

492
00:21:56,782 --> 00:21:59,784
which new items have
popped up on that system,

493
00:21:59,785 --> 00:22:02,054
and why have they popped up?

494
00:22:03,455 --> 00:22:06,457
Now, of course, will a snap
shot taken, we knew that

495
00:22:06,458 --> 00:22:08,393
we were missing a lot
of things and I created

496
00:22:08,393 --> 00:22:11,129
an easy timeline,
rather silly timeline,

497
00:22:11,129 --> 00:22:13,631
but on Monday, we take a
snapshot and we see everything's

498
00:22:13,632 --> 00:22:15,200
okay on that system.

499
00:22:15,200 --> 00:22:18,303
Then, on Wednesday, somebody
receives a phishing mail,

500
00:22:18,303 --> 00:22:20,405
and falls for it, clicks
on it, and Thursday,

501
00:22:20,405 --> 00:22:22,941
there's some data
exfiltration and on Friday,

502
00:22:22,941 --> 00:22:25,677
the malware cleans up after
itself, so next Monday,

503
00:22:25,677 --> 00:22:27,713
we take another snapshot of
the system and everything's

504
00:22:27,713 --> 00:22:30,649
clean, everything's good,
we haven't seen anything.

505
00:22:30,649 --> 00:22:32,818
So, we wanted to
tackle this as well.

506
00:22:32,818 --> 00:22:34,886
And for this, I
want to use Sysmon.

507
00:22:34,886 --> 00:22:37,822
Sysmon, as you probably all
know, is a very good tool.

508
00:22:37,823 --> 00:22:41,226
I'm not going to dive into
the configuration I used here.

509
00:22:41,226 --> 00:22:44,129
A good one, a good
help for me was the one

510
00:22:44,129 --> 00:22:48,332
from SwiftOn Security,
which is very extensive.

511
00:22:48,333 --> 00:22:52,371
Now, as we only had
a defined timeframe,

512
00:22:52,371 --> 00:22:55,307
and well, because we're
doing it with the thought

513
00:22:55,307 --> 00:22:58,276
of small-to-medium
businesses, we really focused

514
00:22:58,276 --> 00:23:01,780
our efforts or we really focused
on the things we looked at.

515
00:23:01,780 --> 00:23:04,149
For instance, for process
execution, we only looked at

516
00:23:04,149 --> 00:23:07,151
PowerShell execution
or multiline execution,

517
00:23:07,152 --> 00:23:10,489
or something that was
like executed as a,

518
00:23:10,489 --> 00:23:11,490
as a script.

519
00:23:12,858 --> 00:23:14,860
In terms of network connections,
we would only look at

520
00:23:14,860 --> 00:23:17,728
the items that, or the
processes that would connect

521
00:23:17,729 --> 00:23:21,967
to the internet, that are
not legitimate processes,

522
00:23:21,967 --> 00:23:24,803
like, just not Windows
processes that we know

523
00:23:24,803 --> 00:23:26,271
that should connect
to the internet.

524
00:23:26,271 --> 00:23:28,340
There's no browsers.

525
00:23:28,340 --> 00:23:31,009
And as a last thing, we
looked at the file creation

526
00:23:31,009 --> 00:23:33,345
in just some specific
folders and only with some

527
00:23:33,345 --> 00:23:35,013
specific extensions.

528
00:23:36,314 --> 00:23:38,383
Now, for this, we
had the Use Case.

529
00:23:38,383 --> 00:23:42,120
I had the phishing document
I analyzed last month,

530
00:23:42,120 --> 00:23:44,423
and I thought it was a nice one.

531
00:23:44,423 --> 00:23:48,527
It was a Word document
with an embedded link file,

532
00:23:48,527 --> 00:23:52,063
that used PowerShell to
download and execute malware,

533
00:23:52,063 --> 00:23:56,768
so I recreated it, and used
this for the case study.

534
00:23:56,768 --> 00:23:59,504
So, in terms of process
execution, as I said already,

535
00:23:59,504 --> 00:24:02,006
we only look at really
specific things,

536
00:24:02,007 --> 00:24:04,476
where the parent or
the client process,

537
00:24:04,476 --> 00:24:08,613
or the child process is
a powershell or cmd.exe.

538
00:24:08,613 --> 00:24:10,782
And as you can see here,
something that stands out

539
00:24:10,782 --> 00:24:15,253
immediately is that
WINWORD.EXE executes cmd.exe.

540
00:24:15,253 --> 00:24:17,956
So this is something
that's abnormal, right?

541
00:24:17,956 --> 00:24:21,426
So if you look into more
detail, we can indeed see

542
00:24:21,426 --> 00:24:26,097
that Word executed cmd.exe,
but that also the command line,

543
00:24:26,097 --> 00:24:30,268
or the command line shows
that it executed PowerShell,

544
00:24:31,603 --> 00:24:33,805
which downloaded and
executed some malware,

545
00:24:33,805 --> 00:24:37,309
so this was fairly
easy to spot of course.

546
00:24:37,309 --> 00:24:39,978
In terms of network connections,

547
00:24:41,413 --> 00:24:44,082
again, we only looked at
really specific processes

548
00:24:44,082 --> 00:24:46,318
that created
network connections,

549
00:24:46,318 --> 00:24:49,788
like here we could see
that PowerShell again

550
00:24:49,788 --> 00:24:52,290
connected outbound
to the internet,

551
00:24:52,290 --> 00:24:55,659
which, in our environment, we
know, PowerShell should not,

552
00:24:55,660 --> 00:24:58,430
we don't have any processes
were PowerShell should connect

553
00:24:58,430 --> 00:24:59,965
outbound to the internet.

554
00:24:59,965 --> 00:25:02,601
We also see Word here that
connects to the internet,

555
00:25:02,601 --> 00:25:05,337
but the IP, we looked it up,
it was an IP of Microsoft,

556
00:25:05,337 --> 00:25:08,139
to do some checking on
updates of versions,

557
00:25:08,139 --> 00:25:11,008
we don't remember what it was.

558
00:25:11,009 --> 00:25:13,445
And then, as a last thing,
was the file creation,

559
00:25:13,445 --> 00:25:16,114
again looking at files that
were created in very specific

560
00:25:16,114 --> 00:25:18,917
folders and with very
specific extensions,

561
00:25:18,917 --> 00:25:23,187
and as you can see here,
again, PowerShell created

562
00:25:23,188 --> 00:25:26,825
an executable file in
the AppData folder.

563
00:25:26,825 --> 00:25:29,628
Again, okay, maybe
this could be nothing.

564
00:25:29,628 --> 00:25:33,665
But, if we can easily trace
it back using the process ID,

565
00:25:33,665 --> 00:25:37,034
and for those that looked
carefully, also on the network

566
00:25:37,035 --> 00:25:40,138
connection, you could see
that the PowerShell process ID

567
00:25:40,138 --> 00:25:42,974
was the same as
that's shown here.

568
00:25:44,242 --> 00:25:47,145
So, here, again, we
could easily see it.

569
00:25:47,145 --> 00:25:50,482
Now, of course, conveniently,
this use case showed up

570
00:25:50,482 --> 00:25:53,718
in all three things
we were looking at.

571
00:25:53,718 --> 00:25:56,922
From other tests we saw that
it's not always the case,

572
00:25:56,922 --> 00:26:00,926
so, it often happens that
you won't see something

573
00:26:01,960 --> 00:26:03,695
in the network
connections or whatever,

574
00:26:03,695 --> 00:26:06,932
but most of the things we
see will show up in one of

575
00:26:06,932 --> 00:26:09,134
the three and you should
be able to tie it back

576
00:26:09,134 --> 00:26:10,635
to the others.

577
00:26:10,635 --> 00:26:13,538
So, this is not the end
of our research of course,

578
00:26:13,538 --> 00:26:16,775
so we have some other
things we want to look into.

579
00:26:16,775 --> 00:26:18,009
- (mumbles) thanks, Michel.

580
00:26:18,009 --> 00:26:21,179
So basically, when
we started with this

581
00:26:21,179 --> 00:26:24,482
threat hunting part,
we wanted to look at

582
00:26:24,482 --> 00:26:26,585
what we could do
for medium-to-small,

583
00:26:26,585 --> 00:26:28,820
small-to-medium businesses
and improve their,

584
00:26:28,820 --> 00:26:30,554
or start their threat
hunting activities.

585
00:26:30,555 --> 00:26:32,757
Now, some of the next
steps that we're definitely

586
00:26:32,757 --> 00:26:35,560
going to look at in
developing this even further,

587
00:26:35,560 --> 00:26:38,062
is the historical system
state comparison that Michel

588
00:26:38,063 --> 00:26:39,531
already talked about.

589
00:26:39,531 --> 00:26:42,533
Also, further baselining
because the baselining will

590
00:26:42,534 --> 00:26:46,538
remain important to keep
on improving it and also,

591
00:26:46,538 --> 00:26:48,340
the feedback look to
security operations

592
00:26:48,340 --> 00:26:52,177
because like we said before,
if you find a good methodology

593
00:26:52,177 --> 00:26:55,213
or a good query to find evil,

594
00:26:55,213 --> 00:26:57,415
hand it over to
security operations,

595
00:26:57,415 --> 00:26:59,851
because they will be
doing the, you know,

596
00:26:59,851 --> 00:27:01,353
automated stuff all the time.

597
00:27:01,353 --> 00:27:04,322
You can be creative again
and look for other evil

598
00:27:04,322 --> 00:27:07,758
that you haven't spotted yet
with your current methodologies

599
00:27:07,759 --> 00:27:10,662
and also very important
is a further visualization

600
00:27:10,662 --> 00:27:14,132
of anomalies because
we, as humans,

601
00:27:14,132 --> 00:27:16,868
are very good at spotting
visual anomalies,

602
00:27:16,868 --> 00:27:19,104
but we're not very good at
spotting anomalies in a blob

603
00:27:19,104 --> 00:27:20,572
of data.

604
00:27:20,572 --> 00:27:22,873
That's what we use our
systems and our tools for,

605
00:27:22,874 --> 00:27:25,243
so that's really,
really important.

606
00:27:25,243 --> 00:27:28,213
Now, we honestly believe that

607
00:27:28,213 --> 00:27:31,383
with the six steps that
we showed and with some of

608
00:27:31,383 --> 00:27:33,451
the tools that we showed
in the network-based threat

609
00:27:33,451 --> 00:27:35,587
hunting and the
host-based threat hunting,

610
00:27:35,587 --> 00:27:37,722
and some of the methodologies
we showed today,

611
00:27:37,722 --> 00:27:39,824
that it can really start
with that threat hunting,

612
00:27:39,824 --> 00:27:41,760
and that's the message
we're trying to convey here,

613
00:27:41,760 --> 00:27:44,195
and we're trying to convey
in everywhere that we come,

614
00:27:44,195 --> 00:27:45,597
and companies is,

615
00:27:45,597 --> 00:27:49,434
you don't need elite
people to do this,

616
00:27:49,434 --> 00:27:51,536
you don't need elite
software to do this,

617
00:27:51,536 --> 00:27:54,639
you can start already with
what's available opensource,

618
00:27:54,639 --> 00:27:56,608
with some of these systems.

619
00:27:56,608 --> 00:27:59,377
So, that being
said, it's a wrap.

