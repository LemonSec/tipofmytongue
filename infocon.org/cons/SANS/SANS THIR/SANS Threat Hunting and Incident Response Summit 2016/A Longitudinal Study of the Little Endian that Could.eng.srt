1
00:00:11,870 --> 00:00:16,619
welcome everyone I'm going to talk to

2
00:00:13,950 --> 00:00:19,020
you today about malla family called 9002

3
00:00:16,619 --> 00:00:21,420
it's a targeted mal y family used a lot

4
00:00:19,020 --> 00:00:23,250
by a Chinese thread active alright cool

5
00:00:21,420 --> 00:00:26,130
so what does 9000 to its remote access

6
00:00:23,250 --> 00:00:28,320
tool it has upload download execute

7
00:00:26,130 --> 00:00:31,160
functionality literally everything you

8
00:00:28,320 --> 00:00:33,600
need to get the job done if you're a

9
00:00:31,160 --> 00:00:35,760
targeted throat actor it's gone by a

10
00:00:33,600 --> 00:00:39,660
bunch of different names mmm it's been

11
00:00:35,760 --> 00:00:42,510
cold made links mcwrap Mick proxy you

12
00:00:39,660 --> 00:00:44,429
know it's what happens with mella it was

13
00:00:42,510 --> 00:00:48,690
first seen during Operation Aurora in

14
00:00:44,430 --> 00:00:51,120
2009 so this was the high-profile hack

15
00:00:48,690 --> 00:00:52,370
of Google and other tech companies there

16
00:00:51,120 --> 00:00:58,199
was like really one of the first

17
00:00:52,370 --> 00:01:00,750
publicly disclosed targeted attacks so

18
00:00:58,199 --> 00:01:02,280
this is you know maybe a mal economy is

19
00:01:00,750 --> 00:01:04,559
still a little bit old but it's still in

20
00:01:02,280 --> 00:01:06,659
use today it's used exclusively by

21
00:01:04,559 --> 00:01:08,520
targeted threat actors if you see it in

22
00:01:06,659 --> 00:01:11,580
your network you have a targeted attack

23
00:01:08,520 --> 00:01:13,080
that's not a good thing and is typically

24
00:01:11,580 --> 00:01:15,210
delivered through strategic web

25
00:01:13,080 --> 00:01:22,560
compromises and fishing you know like

26
00:01:15,210 --> 00:01:24,689
pretty much everything else next all

27
00:01:22,560 --> 00:01:26,790
right so 9000 to the malware itself is

28
00:01:24,689 --> 00:01:30,240
it's a little bit interesting but what's

29
00:01:26,790 --> 00:01:31,380
more interesting is how it was used and

30
00:01:30,240 --> 00:01:34,079
how its evolved so I'm just going to

31
00:01:31,380 --> 00:01:35,880
quickly go over what makes nine thousand

32
00:01:34,079 --> 00:01:38,250
two different from other targeted

33
00:01:35,880 --> 00:01:41,310
malware and what makes it the same so

34
00:01:38,250 --> 00:01:43,649
like a lot of Chinese targeted malware

35
00:01:41,310 --> 00:01:46,290
they pack the code but they don't pack

36
00:01:43,649 --> 00:01:48,180
the strings you can run strings on a lot

37
00:01:46,290 --> 00:01:49,530
of these our families and you'll see

38
00:01:48,180 --> 00:01:51,450
interesting things and make it really

39
00:01:49,530 --> 00:01:53,189
easy to detect it's just because you

40
00:01:51,450 --> 00:01:55,979
haven't seen it before so you don't need

41
00:01:53,189 --> 00:01:58,048
you don't know to look for it it has

42
00:01:55,979 --> 00:01:59,729
this unusual import format which I'm

43
00:01:58,049 --> 00:02:01,259
mentioning purely because it was

44
00:01:59,729 --> 00:02:03,420
annoying as hell to reverse all these

45
00:02:01,259 --> 00:02:06,110
samples it's a lot of IDA scripting that

46
00:02:03,420 --> 00:02:08,280
went into getting all this work done

47
00:02:06,110 --> 00:02:10,770
like a lot of more sophisticated

48
00:02:08,280 --> 00:02:12,010
targeted malware it has a plug-in based

49
00:02:10,770 --> 00:02:14,680
architecture

50
00:02:12,010 --> 00:02:16,540
has built-in functionality but that can

51
00:02:14,680 --> 00:02:19,540
be extended by uploading new files which

52
00:02:16,540 --> 00:02:22,450
will run alongside the malware and use

53
00:02:19,540 --> 00:02:24,340
the same command and control channel it

54
00:02:22,450 --> 00:02:27,429
has this unusual right uninstall event

55
00:02:24,340 --> 00:02:29,170
which is how it manages the callback to

56
00:02:27,430 --> 00:02:31,870
uninstall the malware it sort of ron's

57
00:02:29,170 --> 00:02:35,140
agnostic of how is installed on the

58
00:02:31,870 --> 00:02:37,480
system another great way to detect it

59
00:02:35,140 --> 00:02:39,608
and it uses this lzo compression for the

60
00:02:37,480 --> 00:02:41,200
traffic which is just an unusual choice

61
00:02:39,609 --> 00:02:45,010
and something sort of unique to this

62
00:02:41,200 --> 00:02:49,420
malware family so when you talk about

63
00:02:45,010 --> 00:02:51,310
malware you expect it to evolve in a

64
00:02:49,420 --> 00:02:52,869
certain way you expect there to be an

65
00:02:51,310 --> 00:02:55,209
initial version which has a bunch of

66
00:02:52,870 --> 00:02:57,549
features probably it's broken in some

67
00:02:55,209 --> 00:02:59,139
way they'll release like you know a bug

68
00:02:57,549 --> 00:03:02,500
fix maybe the uninstall doesn't work

69
00:02:59,139 --> 00:03:04,389
maybe the malware crashes or has memory

70
00:03:02,500 --> 00:03:07,299
leaks or something so they fix it and

71
00:03:04,389 --> 00:03:08,859
then time goes on they decide hey I want

72
00:03:07,299 --> 00:03:10,959
to capture screenshots and stuff as well

73
00:03:08,859 --> 00:03:14,260
maybe do some key logging so they build

74
00:03:10,959 --> 00:03:16,449
that in and eventually someone finds out

75
00:03:14,260 --> 00:03:18,638
about this mallet family and they go hey

76
00:03:16,449 --> 00:03:20,739
look at this thing I found and they talk

77
00:03:18,639 --> 00:03:22,120
about it and then a couple of different

78
00:03:20,739 --> 00:03:24,340
things can happen maybe they'll go back

79
00:03:22,120 --> 00:03:25,989
and re-engineer it enough to the point

80
00:03:24,340 --> 00:03:27,970
where they think that they won't be

81
00:03:25,989 --> 00:03:30,730
detected anymore maybe I'll stop using

82
00:03:27,970 --> 00:03:31,870
it all together it depends the

83
00:03:30,730 --> 00:03:33,220
interesting thing about this malware

84
00:03:31,870 --> 00:03:36,099
family there is it doesn't look like

85
00:03:33,220 --> 00:03:38,530
this at all instead there's four

86
00:03:36,099 --> 00:03:42,668
distinct development branches coming

87
00:03:38,530 --> 00:03:44,260
from the same original malware sample so

88
00:03:42,669 --> 00:03:45,910
back here on the Left you got the

89
00:03:44,260 --> 00:03:47,349
original branch this is the malware that

90
00:03:45,910 --> 00:03:50,230
was used during the operation Aurora

91
00:03:47,349 --> 00:03:52,780
attacks and then from there there have

92
00:03:50,230 --> 00:03:56,078
been three branches off this main branch

93
00:03:52,780 --> 00:03:58,329
that have all improved the malware in

94
00:03:56,079 --> 00:04:00,489
different ways so at the top there we

95
00:03:58,329 --> 00:04:03,819
have the XOR traffic branch which really

96
00:04:00,489 --> 00:04:06,699
focused on making it harder to detect

97
00:04:03,819 --> 00:04:10,328
the malware on the network it added some

98
00:04:06,699 --> 00:04:11,739
X or encryption to the traffic to make

99
00:04:10,329 --> 00:04:14,199
it harder to detect with ideas

100
00:04:11,739 --> 00:04:16,930
signatures at the bottom there we have

101
00:04:14,199 --> 00:04:19,269
the disk artifact branch what that did

102
00:04:16,930 --> 00:04:22,990
was completely change the way the

103
00:04:19,269 --> 00:04:24,820
malware is stored and runs when it's on

104
00:04:22,990 --> 00:04:25,370
the disk which makes it a lot harder to

105
00:04:24,820 --> 00:04:27,530
detect

106
00:04:25,370 --> 00:04:30,139
AV & yarra signatures and that sort of

107
00:04:27,530 --> 00:04:32,989
thing and finally there was a rat branch

108
00:04:30,139 --> 00:04:35,000
which decided to put some of the plugins

109
00:04:32,990 --> 00:04:37,760
in by default and make some changes to

110
00:04:35,000 --> 00:04:39,470
make that a whole work so we had four

111
00:04:37,760 --> 00:04:42,620
distinct branches so you got to ask

112
00:04:39,470 --> 00:04:45,290
yourself why is it this way why do they

113
00:04:42,620 --> 00:04:47,900
not just make it better in like the

114
00:04:45,290 --> 00:04:50,240
traffic detection and like file system

115
00:04:47,900 --> 00:04:54,320
detection there's a few theories my

116
00:04:50,240 --> 00:04:55,970
personal theory is that the malware was

117
00:04:54,320 --> 00:04:58,159
used during these high-profile attacks

118
00:04:55,970 --> 00:05:00,979
and was publicly reported and so this

119
00:04:58,160 --> 00:05:02,870
group didn't use it anymore but they had

120
00:05:00,979 --> 00:05:04,880
affiliated groups you know maybe they

121
00:05:02,870 --> 00:05:07,010
had friends maybe had other people in

122
00:05:04,880 --> 00:05:10,669
the organization within they was within

123
00:05:07,010 --> 00:05:12,590
where they work that are you know need

124
00:05:10,669 --> 00:05:15,049
malware families and so they shared this

125
00:05:12,590 --> 00:05:18,198
code and that led to different threat

126
00:05:15,050 --> 00:05:20,900
groups taking the malware and adapting

127
00:05:18,199 --> 00:05:22,370
it in their own way to try and improve

128
00:05:20,900 --> 00:05:25,460
it and you know use it in their

129
00:05:22,370 --> 00:05:27,500
day-to-day operations so the thing to

130
00:05:25,460 --> 00:05:29,479
note is that other there's these

131
00:05:27,500 --> 00:05:31,610
different branches they all evolved

132
00:05:29,479 --> 00:05:33,710
independently and they don't there is no

133
00:05:31,610 --> 00:05:37,010
sharing of the improvements between

134
00:05:33,710 --> 00:05:38,239
different branches so that slide that is

135
00:05:37,010 --> 00:05:42,020
just for the people that don't get to

136
00:05:38,240 --> 00:05:43,669
listen and yeah so Biggs or the xor

137
00:05:42,020 --> 00:05:45,289
traffic branch folks and want to find

138
00:05:43,669 --> 00:05:47,630
the network traffic there was three

139
00:05:45,289 --> 00:05:49,400
major versions at one point they dropped

140
00:05:47,630 --> 00:05:52,130
two different traffic revisions within

141
00:05:49,400 --> 00:05:56,090
the same like month so I imagine that

142
00:05:52,130 --> 00:05:57,830
they were in some sort of an intrusion

143
00:05:56,090 --> 00:06:00,169
and they got detected on the network and

144
00:05:57,830 --> 00:06:04,280
so they decided they needed to change it

145
00:06:00,169 --> 00:06:06,380
and they did most of these revisions

146
00:06:04,280 --> 00:06:09,260
still use links as a user agent string

147
00:06:06,380 --> 00:06:11,120
which is pretty indicate above something

148
00:06:09,260 --> 00:06:12,530
weird I mean either you having a

149
00:06:11,120 --> 00:06:15,680
targeted tackle you have someone

150
00:06:12,530 --> 00:06:17,929
actually using links I don't know why um

151
00:06:15,680 --> 00:06:20,810
it has this weird set of debug strings

152
00:06:17,930 --> 00:06:23,260
unique to this branch there's this dog

153
00:06:20,810 --> 00:06:25,460
create a loop thread it's in all the

154
00:06:23,260 --> 00:06:27,740
variants from this branch I don't know

155
00:06:25,460 --> 00:06:33,349
why I don't know what it means something

156
00:06:27,740 --> 00:06:34,880
about something it has this slight

157
00:06:33,349 --> 00:06:38,900
modification of the right on install

158
00:06:34,880 --> 00:06:39,560
string it uses this format string to put

159
00:06:38,900 --> 00:06:41,210
a random number

160
00:06:39,560 --> 00:06:42,889
at the end of it which you know I guess

161
00:06:41,210 --> 00:06:45,440
they fought with slope detection but it

162
00:06:42,889 --> 00:06:47,900
still has the exact same rat uninstall

163
00:06:45,440 --> 00:06:52,880
in the weird casing so it's still pretty

164
00:06:47,900 --> 00:06:55,820
easy to detect that this artifact branch

165
00:06:52,880 --> 00:06:58,310
is a little bit more sting if focused on

166
00:06:55,820 --> 00:07:00,290
changing the malware resident on disk

167
00:06:58,310 --> 00:07:03,560
changed the way the imports words that

168
00:07:00,290 --> 00:07:05,270
stopped using events it did a better job

169
00:07:03,560 --> 00:07:07,400
of packing the code on disk so that

170
00:07:05,270 --> 00:07:09,409
there was none of those easily

171
00:07:07,400 --> 00:07:11,989
identifiable strings but the interesting

172
00:07:09,410 --> 00:07:13,669
thing it did was it changed the way the

173
00:07:11,990 --> 00:07:15,560
configuration and the malware payload

174
00:07:13,669 --> 00:07:18,680
was stored instead of being in the

175
00:07:15,560 --> 00:07:21,650
binary that runs when the system boots

176
00:07:18,680 --> 00:07:24,650
all those two parts are stored in the

177
00:07:21,650 --> 00:07:26,870
registry so what this means that there's

178
00:07:24,650 --> 00:07:29,150
a load of component which runs when the

179
00:07:26,870 --> 00:07:31,700
system boots up does its unpacking and

180
00:07:29,150 --> 00:07:34,219
all this fancy stuff and then calls to

181
00:07:31,700 --> 00:07:36,169
back to the registry to take out the

182
00:07:34,220 --> 00:07:38,570
mallet payload unpack that and then run

183
00:07:36,169 --> 00:07:39,950
that so what that means is that when you

184
00:07:38,570 --> 00:07:42,200
have this file you don't know what it is

185
00:07:39,950 --> 00:07:45,140
you like run it in a sandbox so you

186
00:07:42,200 --> 00:07:46,700
submit it to a V there's no registry key

187
00:07:45,140 --> 00:07:48,919
for it to pull them out from so it

188
00:07:46,700 --> 00:07:50,180
doesn't do anything bad it completely

189
00:07:48,919 --> 00:07:52,099
like hides it from those sort of

190
00:07:50,180 --> 00:07:57,979
detections which makes it a lot more

191
00:07:52,100 --> 00:07:59,539
challenging to discover finally there's

192
00:07:57,979 --> 00:08:02,840
the rat branch it just includes the

193
00:07:59,539 --> 00:08:04,460
keylogger by default I guess like they

194
00:08:02,840 --> 00:08:05,929
had a better idea of their targeting

195
00:08:04,460 --> 00:08:07,340
when they were using this one they knew

196
00:08:05,930 --> 00:08:10,039
that they wanted key logging on this

197
00:08:07,340 --> 00:08:12,380
machine straight away there's a few

198
00:08:10,039 --> 00:08:14,719
changes in the configuration format to

199
00:08:12,380 --> 00:08:16,159
in order to support this and they had a

200
00:08:14,720 --> 00:08:19,220
different set of debug strings they had

201
00:08:16,160 --> 00:08:20,660
this word try to get better I maybe

202
00:08:19,220 --> 00:08:23,710
that's a call out to someone else on the

203
00:08:20,660 --> 00:08:25,610
team I don't know they had some more

204
00:08:23,710 --> 00:08:28,400
colorful language and some of the other

205
00:08:25,610 --> 00:08:30,139
debug strings and it started to use a

206
00:08:28,400 --> 00:08:32,958
randomly named commute X instead of an

207
00:08:30,139 --> 00:08:37,330
event just to mix things up a little bit

208
00:08:32,958 --> 00:08:40,579
i guess so i said my theory before and

209
00:08:37,330 --> 00:08:42,469
how I think the malware came to be like

210
00:08:40,580 --> 00:08:45,410
this just two other theories there too

211
00:08:42,469 --> 00:08:47,360
quickly Explorer which I'm you know may

212
00:08:45,410 --> 00:08:49,490
be true but I personally don't think so

213
00:08:47,360 --> 00:08:52,310
in the first is that there's a single

214
00:08:49,490 --> 00:08:53,040
development sauce producing different

215
00:08:52,310 --> 00:08:55,258
versions of the

216
00:08:53,040 --> 00:08:57,060
as requested so there might be like one

217
00:08:55,259 --> 00:08:58,980
guy with the access to the source code

218
00:08:57,060 --> 00:09:01,469
and someone says hey I'm getting

219
00:08:58,980 --> 00:09:02,940
detected at the network level do

220
00:09:01,470 --> 00:09:04,110
something about it so he changes his

221
00:09:02,940 --> 00:09:05,940
network format and there might be

222
00:09:04,110 --> 00:09:07,860
another team going hey I'm getting

223
00:09:05,940 --> 00:09:09,480
detected on disk do something about that

224
00:09:07,860 --> 00:09:10,680
to me that doesn't make a lot of sense

225
00:09:09,480 --> 00:09:13,620
because then you're intentionally

226
00:09:10,680 --> 00:09:16,500
crippling like your other operations one

227
00:09:13,620 --> 00:09:17,550
team isn't getting the disk improvements

228
00:09:16,500 --> 00:09:18,870
one team isn't getting the network

229
00:09:17,550 --> 00:09:25,310
improvements it doesn't really make a

230
00:09:18,870 --> 00:09:28,500
lot of sense from a projected success

231
00:09:25,310 --> 00:09:31,258
perspective like you ever have hampering

232
00:09:28,500 --> 00:09:33,230
your chances of success the other

233
00:09:31,259 --> 00:09:35,759
possibility is that this impersonate

234
00:09:33,230 --> 00:09:38,569
impersonation of existing groups is a

235
00:09:35,759 --> 00:09:41,250
false flag operation I think this is

236
00:09:38,569 --> 00:09:43,019
entirely possible but i think this

237
00:09:41,250 --> 00:09:44,790
doesn't explain why the malware was

238
00:09:43,019 --> 00:09:46,110
developed the way it is it's a lot of

239
00:09:44,790 --> 00:09:47,939
work to reverse-engineer a malware

240
00:09:46,110 --> 00:09:50,250
sample and build a command and control

241
00:09:47,940 --> 00:09:53,310
server that replicates the original one

242
00:09:50,250 --> 00:09:55,649
without access to it to study it I'm

243
00:09:53,310 --> 00:09:57,689
sure maybe like in the original branch

244
00:09:55,649 --> 00:10:00,029
people might be doing this but it would

245
00:09:57,690 --> 00:10:02,130
be a lot more work to take another male

246
00:10:00,029 --> 00:10:05,399
with family and then develop additional

247
00:10:02,130 --> 00:10:06,720
features for it in order to try and

248
00:10:05,399 --> 00:10:08,730
impersonate someone because then you're

249
00:10:06,720 --> 00:10:11,970
really still not impersonating them

250
00:10:08,730 --> 00:10:13,980
anymore you're someone else so as I said

251
00:10:11,970 --> 00:10:15,839
earlier my personal theory is that the

252
00:10:13,980 --> 00:10:17,250
source code was shared amongst

253
00:10:15,839 --> 00:10:19,620
affiliated groups it could be that the

254
00:10:17,250 --> 00:10:21,209
a-team had this awful the source code

255
00:10:19,620 --> 00:10:23,100
and they stopped using it got past the B

256
00:10:21,209 --> 00:10:24,899
team and the CT man daddy team or

257
00:10:23,100 --> 00:10:27,060
something or it could be that there was

258
00:10:24,899 --> 00:10:30,720
someone who posted it online and some

259
00:10:27,060 --> 00:10:32,489
sort of underground forum and then as

260
00:10:30,720 --> 00:10:34,560
people saw that they started to use it

261
00:10:32,490 --> 00:10:36,899
it's hard to say like I don't have

262
00:10:34,560 --> 00:10:38,189
access to any of that information so not

263
00:10:36,899 --> 00:10:41,610
only I'll postulate as to what actually

264
00:10:38,189 --> 00:10:43,469
happened now now you know a little bit

265
00:10:41,610 --> 00:10:46,110
about this mallet family what can you do

266
00:10:43,470 --> 00:10:50,279
to protect yourself against malware

267
00:10:46,110 --> 00:10:52,019
family like this one so this is target

268
00:10:50,279 --> 00:10:55,110
of malware so the standard targeted

269
00:10:52,019 --> 00:10:56,970
threat active playbook applies every

270
00:10:55,110 --> 00:11:00,389
target has a unique command control

271
00:10:56,970 --> 00:11:02,010
server every target organization gets

272
00:11:00,389 --> 00:11:04,290
their own sample compiled as a different

273
00:11:02,010 --> 00:11:05,939
hash so hashes and C 2 s I'm going to

274
00:11:04,290 --> 00:11:07,679
work for initial detection

275
00:11:05,939 --> 00:11:10,669
once you are compromised and you know

276
00:11:07,679 --> 00:11:13,108
can be very helpful in finding more

277
00:11:10,669 --> 00:11:16,769
samples within your network but if you

278
00:11:13,109 --> 00:11:19,079
are getting an external feed notifying

279
00:11:16,769 --> 00:11:20,489
you of targeted malware in your

280
00:11:19,079 --> 00:11:22,738
environment that means that someone else

281
00:11:20,489 --> 00:11:26,279
knew before you did which is probably a

282
00:11:22,739 --> 00:11:27,679
pretty bad thing so what's the approach

283
00:11:26,279 --> 00:11:32,279
you want to instrument everything

284
00:11:27,679 --> 00:11:35,519
network get logging get IDs the endpoint

285
00:11:32,279 --> 00:11:36,389
have um you know any van point solutions

286
00:11:35,519 --> 00:11:38,699
on there or something like that

287
00:11:36,389 --> 00:11:40,439
filtering your email so instrument all

288
00:11:38,699 --> 00:11:42,238
these things and then apply intelligence

289
00:11:40,439 --> 00:11:45,209
and countermeasures to them you want to

290
00:11:42,239 --> 00:11:46,799
be checking for malware and mallet

291
00:11:45,209 --> 00:11:50,098
families like this as many ways as you

292
00:11:46,799 --> 00:11:52,470
can so it's important to take advantage

293
00:11:50,099 --> 00:11:55,049
of all the malware idiosyncrasies in

294
00:11:52,470 --> 00:11:57,419
order to develop as many detections as

295
00:11:55,049 --> 00:11:59,639
you can like you could write a signature

296
00:11:57,419 --> 00:12:02,069
and catch it one way but why do that

297
00:11:59,639 --> 00:12:03,569
when you can catch it a thousand

298
00:12:02,069 --> 00:12:04,949
different ways that way they have to

299
00:12:03,569 --> 00:12:07,019
change everything they have to be

300
00:12:04,949 --> 00:12:10,649
perfect in the way that they modify it

301
00:12:07,019 --> 00:12:13,679
for it to bypass you'll detections you

302
00:12:10,649 --> 00:12:16,409
don't want to rely on just one so as an

303
00:12:13,679 --> 00:12:19,470
example I've taken the original 9002

304
00:12:16,409 --> 00:12:21,359
sample back used used back in 2009 and

305
00:12:19,470 --> 00:12:24,599
I've done some really quick dirty

306
00:12:21,359 --> 00:12:26,519
analysis to produce some basic

307
00:12:24,599 --> 00:12:28,769
countermeasures so I ran strings on the

308
00:12:26,519 --> 00:12:30,659
file I saw this weird string right on

309
00:12:28,769 --> 00:12:33,720
install let's make that a signature

310
00:12:30,659 --> 00:12:35,939
that's easy I ran it in the sandbox

311
00:12:33,720 --> 00:12:37,289
captured the network traffic I saw that

312
00:12:35,939 --> 00:12:39,748
each of the packets ended with this

313
00:12:37,289 --> 00:12:42,689
weird sequence of bytes happens to be

314
00:12:39,749 --> 00:12:45,749
the North operation for the malware lgo

315
00:12:42,689 --> 00:12:48,209
compressed I saw that when that didn't

316
00:12:45,749 --> 00:12:50,819
work had tried to use HTTP encapsulation

317
00:12:48,209 --> 00:12:53,159
and the use agent was links let's try

318
00:12:50,819 --> 00:12:55,709
and use that and then at the end point

319
00:12:53,159 --> 00:12:58,169
do some basic memory forensics you see

320
00:12:55,709 --> 00:13:00,779
that the mmm it registers this event

321
00:12:58,169 --> 00:13:03,299
right on the stall let's use that you're

322
00:13:00,779 --> 00:13:05,909
on strings on the injected memory you

323
00:13:03,299 --> 00:13:09,149
see this weed a temp paw format string

324
00:13:05,909 --> 00:13:11,819
happens to be the path used for the

325
00:13:09,149 --> 00:13:14,220
plug-in and you go ahead and write that

326
00:13:11,819 --> 00:13:16,108
as a signature as well and so this these

327
00:13:14,220 --> 00:13:19,410
five signatures generated from the

328
00:13:16,109 --> 00:13:21,420
original mowa sample I've didn't go on

329
00:13:19,410 --> 00:13:22,889
and compared to all the different

330
00:13:21,420 --> 00:13:24,180
branches invariant and the very

331
00:13:22,889 --> 00:13:27,120
different variants within those branches

332
00:13:24,180 --> 00:13:29,969
to see how they did so you can see the

333
00:13:27,120 --> 00:13:31,889
file string you know detective 5 the

334
00:13:29,970 --> 00:13:33,629
packet signature detected 6 the user

335
00:13:31,889 --> 00:13:35,819
agent detected all of them bought one

336
00:13:33,629 --> 00:13:37,470
which but that assumes you're running a

337
00:13:35,819 --> 00:13:40,610
HTTP proxy otherwise it wouldn't use

338
00:13:37,470 --> 00:13:45,060
that mode in the V the event name

339
00:13:40,610 --> 00:13:46,350
captured what six as well so but as you

340
00:13:45,060 --> 00:13:48,689
can see here one of these things is not

341
00:13:46,350 --> 00:13:50,579
like the other the memory signature that

342
00:13:48,689 --> 00:13:54,360
I made from the first sample from six

343
00:13:50,579 --> 00:13:56,310
years ago detected all of the examples

344
00:13:54,360 --> 00:13:58,769
of this family used for the next six

345
00:13:56,310 --> 00:14:00,268
years sir if in case you missed

346
00:13:58,769 --> 00:14:03,029
Heather's talk yesterday where she said

347
00:14:00,269 --> 00:14:06,000
you should be doing a hunting and mouth

348
00:14:03,029 --> 00:14:10,079
of of malware in memory you should be

349
00:14:06,000 --> 00:14:15,240
doing hunting of malware and memory we

350
00:14:10,079 --> 00:14:17,279
do it you should do it too so just to

351
00:14:15,240 --> 00:14:18,629
wrap things up families being you sent

352
00:14:17,279 --> 00:14:20,009
for a long time there's different

353
00:14:18,629 --> 00:14:21,810
branches with different development

354
00:14:20,009 --> 00:14:25,319
goals they've tried to improve the

355
00:14:21,810 --> 00:14:26,579
matter in different ways hashes c2 is

356
00:14:25,319 --> 00:14:27,839
you know then I can protect you from

357
00:14:26,579 --> 00:14:29,579
targeted threats they're going to help

358
00:14:27,839 --> 00:14:32,310
with opportunistic stuff but targeted

359
00:14:29,579 --> 00:14:34,229
stuff not so much and detecting like

360
00:14:32,310 --> 00:14:35,849
these sort of intrusions you really need

361
00:14:34,230 --> 00:14:38,160
that holistic layered approach you need

362
00:14:35,850 --> 00:14:40,860
to detect you need to instrument as many

363
00:14:38,160 --> 00:14:42,870
things as you can and be running some

364
00:14:40,860 --> 00:14:45,060
sort of intelligence or looking at the

365
00:14:42,870 --> 00:14:50,389
data over these different things as much

366
00:14:45,060 --> 00:14:50,388
as you can any questions

367
00:14:50,540 --> 00:14:56,689
um basically this recompile it you know

368
00:14:53,960 --> 00:14:59,150
they will build in they will change the

369
00:14:56,690 --> 00:15:00,830
configuration information like they'll

370
00:14:59,150 --> 00:15:02,209
change the sea to Bellary kampala will

371
00:15:00,830 --> 00:15:06,020
have different time stamps that sort of

372
00:15:02,210 --> 00:15:07,130
thing different hash easy I mean there's

373
00:15:06,020 --> 00:15:08,750
a lot of the time they're not going to

374
00:15:07,130 --> 00:15:10,820
go to they might have like a packer that

375
00:15:08,750 --> 00:15:12,860
they use so it might completely change

376
00:15:10,820 --> 00:15:14,330
it on the file level but once it injects

377
00:15:12,860 --> 00:15:16,490
into memory still going to be exactly

378
00:15:14,330 --> 00:15:18,020
the same it's just too much work to go

379
00:15:16,490 --> 00:15:19,520
through and change the memory each time

380
00:15:18,020 --> 00:15:21,680
I mean there are really sophisticated

381
00:15:19,520 --> 00:15:24,590
groups out there that will do that sort

382
00:15:21,680 --> 00:15:28,790
of thing but um you can catch them in

383
00:15:24,590 --> 00:15:31,910
all the ways limited amount of time that

384
00:15:28,790 --> 00:15:34,310
you have to analyze the malware and come

385
00:15:31,910 --> 00:15:39,260
up with the detections you know the

386
00:15:34,310 --> 00:15:41,180
instrumentation versus determining the

387
00:15:39,260 --> 00:15:45,670
actual threat that's presented so or

388
00:15:41,180 --> 00:15:45,670
using the time that you see it

389
00:15:50,000 --> 00:15:54,209
yes it's a difficult balance like how

390
00:15:52,500 --> 00:15:55,889
much time you spend looking at one

391
00:15:54,209 --> 00:15:59,670
amount of family versus how much time

392
00:15:55,889 --> 00:16:01,709
you spend doing all the things um as I

393
00:15:59,670 --> 00:16:03,240
said like I didn't go into like the

394
00:16:01,709 --> 00:16:05,790
sophisticated stuff you could do like

395
00:16:03,240 --> 00:16:07,079
that was really quick dirty analysis to

396
00:16:05,790 --> 00:16:10,860
get those five signatures you could do

397
00:16:07,079 --> 00:16:13,109
like by sequences like the talk earlier

398
00:16:10,860 --> 00:16:15,149
it was talking about Yara you could go a

399
00:16:13,110 --> 00:16:18,779
lot more further with it but it's good

400
00:16:15,149 --> 00:16:20,189
to get like it's hard to balance but I

401
00:16:18,779 --> 00:16:22,439
would think that you would want a a few

402
00:16:20,189 --> 00:16:25,529
different ways of catching something as

403
00:16:22,439 --> 00:16:27,930
quickly as you can and then if you like

404
00:16:25,529 --> 00:16:30,060
perhaps that threat actor continuously

405
00:16:27,930 --> 00:16:32,399
targets you maybe you want to spend more

406
00:16:30,060 --> 00:16:34,529
time right like most targeted act is

407
00:16:32,399 --> 00:16:35,879
they're not gonna if you kick them out

408
00:16:34,529 --> 00:16:37,860
they're going to come back it might be a

409
00:16:35,879 --> 00:16:39,360
week might be a month it might be a year

410
00:16:37,860 --> 00:16:40,709
but they're going to come back a lot of

411
00:16:39,360 --> 00:16:44,339
the time they come back using the same

412
00:16:40,709 --> 00:16:46,829
tools and that sort of thing sir it is

413
00:16:44,339 --> 00:16:48,300
something hard to judge I wouldn't say

414
00:16:46,829 --> 00:16:50,399
there's a definitive answer on how much

415
00:16:48,300 --> 00:16:53,000
time you spend on like one particular

416
00:16:50,399 --> 00:16:53,000
malla falla

417
00:16:59,880 --> 00:17:09,000
I think your your reason for dismissing

418
00:17:06,569 --> 00:17:10,649
the hypothesis that it was the same

419
00:17:09,000 --> 00:17:12,540
group having access to the source code

420
00:17:10,650 --> 00:17:16,560
that for these different branches yep

421
00:17:12,540 --> 00:17:18,569
was that then they would every wouldn't

422
00:17:16,560 --> 00:17:20,849
get he everyone getting the different

423
00:17:18,569 --> 00:17:22,379
branch would not have a benefit yeah

424
00:17:20,849 --> 00:17:25,198
isn't that a little bit how criminal

425
00:17:22,380 --> 00:17:28,160
organization would develop different

426
00:17:25,199 --> 00:17:31,290
malware's and just sell this unit and

427
00:17:28,160 --> 00:17:33,060
with crippled features and that a lot of

428
00:17:31,290 --> 00:17:34,950
suffered water yeah it's entirely

429
00:17:33,060 --> 00:17:37,560
possible that there is someone out there

430
00:17:34,950 --> 00:17:39,090
just selling it and that they change it

431
00:17:37,560 --> 00:17:43,260
a little bit so that it's unique to that

432
00:17:39,090 --> 00:17:47,820
person but from my experience like the

433
00:17:43,260 --> 00:17:49,440
these sort of actives on really they're

434
00:17:47,820 --> 00:17:53,300
all more organized than that so it would

435
00:17:49,440 --> 00:17:55,670
be I would think would be unusual to

436
00:17:53,300 --> 00:17:58,290
intentionally cripple their operations

437
00:17:55,670 --> 00:18:01,430
but it is a possibility so definite

438
00:17:58,290 --> 00:18:01,430
possibility if they operate this way

439
00:18:06,050 --> 00:18:12,379
alright that's going to get for today

440
00:18:07,950 --> 00:18:12,380
thanks big round of applause

