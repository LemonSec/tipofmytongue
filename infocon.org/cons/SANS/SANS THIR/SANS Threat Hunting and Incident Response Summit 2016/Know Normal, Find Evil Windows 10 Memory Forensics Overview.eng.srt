1
00:00:19,960 --> 00:00:25,480
hello everyone and welcome to today's

2
00:00:21,580 --> 00:00:27,599
sans dfi our webcast no normal find evil

3
00:00:25,480 --> 00:00:30,430
Windows 10 memory forensics overview

4
00:00:27,600 --> 00:00:32,560
today's featured speaker is ELISA Taurus

5
00:00:30,430 --> 00:00:33,940
sans certified instructor if at any

6
00:00:32,560 --> 00:00:35,890
point during the presentation you have a

7
00:00:33,940 --> 00:00:37,210
question for ELISA please feel free to

8
00:00:35,890 --> 00:00:39,690
enter them into the questions window

9
00:00:37,210 --> 00:00:42,340
located on the go to webinar interface

10
00:00:39,690 --> 00:00:46,959
and with that I liked him a presentation

11
00:00:42,340 --> 00:00:49,500
over to ELISA Torres thanks Ben hi

12
00:00:46,960 --> 00:00:52,329
everyone how are you doing today I'm

13
00:00:49,500 --> 00:00:56,170
happy to be here with you and go ahead

14
00:00:52,329 --> 00:00:58,000
and advance my slide introduce myself my

15
00:00:56,170 --> 00:01:00,760
name is ELISA Torres I am a certified

16
00:00:58,000 --> 00:01:02,260
sans instructor and I've been teaching

17
00:01:00,760 --> 00:01:04,030
for the digital forensics incident

18
00:01:02,260 --> 00:01:06,130
response track here at Stan's for three

19
00:01:04,030 --> 00:01:09,550
years I'm the co-author of this

20
00:01:06,130 --> 00:01:12,009
forensics 526 memory forensics in-depth

21
00:01:09,550 --> 00:01:14,649
course and the content that we're going

22
00:01:12,009 --> 00:01:16,570
to cover today is what is hot off the

23
00:01:14,649 --> 00:01:19,750
presses it's what we're folding into the

24
00:01:16,570 --> 00:01:21,880
course content with this next update

25
00:01:19,750 --> 00:01:25,060
we're really excited about it we're

26
00:01:21,880 --> 00:01:26,979
going to be focusing today on Windows 10

27
00:01:25,060 --> 00:01:28,750
the changes that have occurred I'm sure

28
00:01:26,979 --> 00:01:30,909
you've heard about our experience some

29
00:01:28,750 --> 00:01:34,360
of them the changes that have occurred

30
00:01:30,909 --> 00:01:37,869
and how they affect our memory forensic

31
00:01:34,360 --> 00:01:39,939
memory analysis tools so I'm going to

32
00:01:37,869 --> 00:01:43,780
start off by providing proper motivation

33
00:01:39,939 --> 00:01:45,250
we have a memory forensics challenge so

34
00:01:43,780 --> 00:01:47,049
I'm going to ask you if you want to

35
00:01:45,250 --> 00:01:51,159
participate if you'd like to download

36
00:01:47,049 --> 00:01:54,640
the link to my Dropbox location I have

37
00:01:51,159 --> 00:01:56,860
about a one gig zip file that I'm going

38
00:01:54,640 --> 00:02:00,040
to let everyone download at the end of

39
00:01:56,860 --> 00:02:02,380
this webcast of and that zip file is a

40
00:02:00,040 --> 00:02:05,650
memory image I just created this past

41
00:02:02,380 --> 00:02:07,240
week from my Windows 10 machine so it's

42
00:02:05,650 --> 00:02:11,110
also accompanied by a set of questions

43
00:02:07,240 --> 00:02:12,940
and the challenge is this so if you're

44
00:02:11,110 --> 00:02:16,269
the first person to answer and submit

45
00:02:12,940 --> 00:02:17,880
the right answers that is to this email

46
00:02:16,269 --> 00:02:21,040
or I haven't given you the email address

47
00:02:17,880 --> 00:02:23,109
either which is which is on purpose here

48
00:02:21,040 --> 00:02:26,530
if you're the first person then you will

49
00:02:23,110 --> 00:02:30,100
win proper motivation you will win this

50
00:02:26,530 --> 00:02:31,810
dad asks dfi are honey badger yes that

51
00:02:30,100 --> 00:02:33,769
is our honey badger we've only given to

52
00:02:31,810 --> 00:02:36,710
a way for the 526 class

53
00:02:33,770 --> 00:02:39,260
whoo and this one actually has its own

54
00:02:36,710 --> 00:02:41,360
middle sands dfi our shirt on you can

55
00:02:39,260 --> 00:02:45,470
see here show proper motivation you will

56
00:02:41,360 --> 00:02:48,680
also get the part one of Windows

57
00:02:45,470 --> 00:02:52,100
internals seventh edition and the reason

58
00:02:48,680 --> 00:02:53,870
why I want to give away part one here is

59
00:02:52,100 --> 00:02:56,570
there's there's something in it for me I

60
00:02:53,870 --> 00:02:58,070
want to give away another copy this is

61
00:02:56,570 --> 00:03:00,859
pre-ordered because this book is not

62
00:02:58,070 --> 00:03:02,239
published yet is anyone anyone out there

63
00:03:00,860 --> 00:03:05,030
helped with the windows internals

64
00:03:02,240 --> 00:03:07,550
Edition the sixth edition I certainly

65
00:03:05,030 --> 00:03:09,650
hope so right because that's the one

66
00:03:07,550 --> 00:03:12,080
that covers Windows 7 artifacts what we

67
00:03:09,650 --> 00:03:15,020
don't have is anything that describes

68
00:03:12,080 --> 00:03:18,950
what's going on inside of Windows 8 8.1

69
00:03:15,020 --> 00:03:21,710
and Windows 10 and that's what Pavel the

70
00:03:18,950 --> 00:03:24,470
author upcoming author of this book has

71
00:03:21,710 --> 00:03:26,180
promised us to include Windows 10 so

72
00:03:24,470 --> 00:03:28,150
when me giving you an amazon gift

73
00:03:26,180 --> 00:03:30,710
certificate of 50 dollars in value

74
00:03:28,150 --> 00:03:33,830
whoever answers the questions correctly

75
00:03:30,710 --> 00:03:37,130
will join me in placing a pre-order for

76
00:03:33,830 --> 00:03:39,050
this book thereby creating the demand so

77
00:03:37,130 --> 00:03:41,260
we can have supply and I hope you'll

78
00:03:39,050 --> 00:03:44,840
join me in that very good very good

79
00:03:41,260 --> 00:03:48,799
so the link for download will be given

80
00:03:44,840 --> 00:03:52,370
at the end of this webcast but until

81
00:03:48,800 --> 00:03:54,860
then just listen listen up into what's

82
00:03:52,370 --> 00:03:57,200
changed in Windows 10 now like me you're

83
00:03:54,860 --> 00:03:59,450
thinking oh you know I'm a little

84
00:03:57,200 --> 00:04:01,369
uncertain as to what what they're saying

85
00:03:59,450 --> 00:04:06,079
is true did Microsoft certainly fix

86
00:04:01,370 --> 00:04:09,200
everything will this be the version of

87
00:04:06,080 --> 00:04:11,180
Windows that does not allow the attacker

88
00:04:09,200 --> 00:04:13,760
to pass the hash for example with our

89
00:04:11,180 --> 00:04:16,160
credential guard implementation security

90
00:04:13,760 --> 00:04:19,130
mechanisms here so I'd like to give a

91
00:04:16,160 --> 00:04:20,900
shout out to my friends at reddit who

92
00:04:19,130 --> 00:04:23,840
created this meme and I think they

93
00:04:20,899 --> 00:04:27,049
purposely meant not to spell everything

94
00:04:23,840 --> 00:04:29,750
correctly see here we'll see as we're

95
00:04:27,050 --> 00:04:31,400
exploring Windows 10 well whether we

96
00:04:29,750 --> 00:04:35,960
think they've worked it up for us as

97
00:04:31,400 --> 00:04:38,210
forensic examiners yes um how big is

98
00:04:35,960 --> 00:04:40,520
this issue I know part of the webcast

99
00:04:38,210 --> 00:04:42,680
description was like before you know it

100
00:04:40,520 --> 00:04:45,380
you're going to see you're going to see

101
00:04:42,680 --> 00:04:47,000
Windows 10 if you haven't already you're

102
00:04:45,380 --> 00:04:47,750
going to see Windows 10 as the subject

103
00:04:47,000 --> 00:04:50,050
or target

104
00:04:47,750 --> 00:04:52,910
of your investigation so as of March

105
00:04:50,050 --> 00:04:55,010
2016 if anyone's tracking this there's a

106
00:04:52,910 --> 00:05:01,040
really good website net market share

107
00:04:55,010 --> 00:05:04,880
comm a they said March 2016 ah it was

108
00:05:01,040 --> 00:05:08,450
14% already with Windows 10 now this is

109
00:05:04,880 --> 00:05:12,020
desktop so a endpoint distribution you

110
00:05:08,450 --> 00:05:14,960
can see XP still has a foothold 10

111
00:05:12,020 --> 00:05:18,200
almost 11 percent and Windows 7 in March

112
00:05:14,960 --> 00:05:20,570
was 50 around 52% so you're thinking ah

113
00:05:18,200 --> 00:05:23,300
I can deal with that this is probably

114
00:05:20,570 --> 00:05:25,070
home users right yeah it's probably not

115
00:05:23,300 --> 00:05:26,360
your enterprise so if you're working as

116
00:05:25,070 --> 00:05:28,250
part of an incident response team you're

117
00:05:26,360 --> 00:05:31,430
probably not yet convinced but if we

118
00:05:28,250 --> 00:05:35,510
look at April 2016 we have incrementing

119
00:05:31,430 --> 00:05:38,210
by 1% already so in the time frame of 1

120
00:05:35,510 --> 00:05:41,270
month we've upped our presence of

121
00:05:38,210 --> 00:05:43,640
Windows 10 by a percentage point and

122
00:05:41,270 --> 00:05:46,700
we've dropped on the XP and we dropped

123
00:05:43,640 --> 00:05:50,510
dropped on the 7 no real need to mention

124
00:05:46,700 --> 00:05:53,060
where Windows 8 is right now but if I

125
00:05:50,510 --> 00:05:55,550
haven't convinced you look at what's

126
00:05:53,060 --> 00:05:58,160
being put out there in the news that

127
00:05:55,550 --> 00:06:01,430
Microsoft has this goal this rollouts

128
00:05:58,160 --> 00:06:04,130
targets 1 billion machines running

129
00:06:01,430 --> 00:06:06,140
Windows 10 within the next two to three

130
00:06:04,130 --> 00:06:08,780
years and I think they're going to do it

131
00:06:06,140 --> 00:06:10,820
I talked to people in my classes most

132
00:06:08,780 --> 00:06:13,640
most recently I taught at the threat

133
00:06:10,820 --> 00:06:15,830
hunting summit which was incredible a

134
00:06:13,640 --> 00:06:18,469
threatening summit we were teaching 508

135
00:06:15,830 --> 00:06:22,700
and one of my students was sharing with

136
00:06:18,470 --> 00:06:26,030
me that there is a very strong vehement

137
00:06:22,700 --> 00:06:27,680
community of folks that are resisting

138
00:06:26,030 --> 00:06:29,900
the upgrade to Windows 10

139
00:06:27,680 --> 00:06:32,930
making registry modifications and

140
00:06:29,900 --> 00:06:34,549
killing services and delaying which you

141
00:06:32,930 --> 00:06:35,840
can do if you have your system set up

142
00:06:34,550 --> 00:06:38,750
right you're on the enterprise

143
00:06:35,840 --> 00:06:41,989
but hey we have to come to grips with

144
00:06:38,750 --> 00:06:44,570
this is all going to be you know our

145
00:06:41,990 --> 00:06:47,479
ability to handle and investigate

146
00:06:44,570 --> 00:06:49,580
Windows 10 machines is going to become

147
00:06:47,479 --> 00:06:52,909
part of our wall we'll call it criminal

148
00:06:49,580 --> 00:06:54,740
primitive survival rating right how well

149
00:06:52,910 --> 00:06:56,419
we can handle different operating

150
00:06:54,740 --> 00:06:59,599
systems and come up with the answers of

151
00:06:56,419 --> 00:07:01,520
where evil lies so this is a little bit

152
00:06:59,599 --> 00:07:03,469
of foreshadowing I have to say

153
00:07:01,520 --> 00:07:05,599
I'm going to be an infuse a lot of other

154
00:07:03,470 --> 00:07:07,699
sans instructors are going to be infused

155
00:07:05,599 --> 00:07:09,590
in about a week and a half and my

156
00:07:07,699 --> 00:07:11,870
presentation is going to be on Windows

157
00:07:09,590 --> 00:07:14,568
10 but it's naked and afraid' Windows 10

158
00:07:11,870 --> 00:07:17,389
so a little bit of foreshadowing here

159
00:07:14,569 --> 00:07:20,090
but we have to know and understand how

160
00:07:17,389 --> 00:07:22,490
Windows 10 looks how it is different

161
00:07:20,090 --> 00:07:25,520
under the hood so that's that's how I've

162
00:07:22,490 --> 00:07:26,930
formed my web cast today hey I got an

163
00:07:25,520 --> 00:07:28,310
overview I'm going to share with you

164
00:07:26,930 --> 00:07:31,190
we're going to talk about changes that

165
00:07:28,310 --> 00:07:33,379
have occurred to basic core artifacts

166
00:07:31,190 --> 00:07:36,650
that we use answer questions like

167
00:07:33,379 --> 00:07:39,590
evidence of execution file opening we

168
00:07:36,650 --> 00:07:41,690
have some changes to process hierarchy

169
00:07:39,590 --> 00:07:44,090
so I always look at things in a

170
00:07:41,690 --> 00:07:46,159
hierarchical structure as I'm looking at

171
00:07:44,090 --> 00:07:49,638
my process list investigating a memory

172
00:07:46,159 --> 00:07:51,319
image of some of the normal has changed

173
00:07:49,639 --> 00:07:53,150
so I want to introduce that to you so

174
00:07:51,319 --> 00:07:56,270
you know what to expect some structure

175
00:07:53,150 --> 00:07:57,888
off you station this this wasn't good

176
00:07:56,270 --> 00:07:59,810
when it happened in Windows 8

177
00:07:57,889 --> 00:08:02,360
it created delay in some of our tools

178
00:07:59,810 --> 00:08:03,979
and it being able to parse Windows 8

179
00:08:02,360 --> 00:08:06,409
memory images the same thing has

180
00:08:03,979 --> 00:08:09,139
happened with Windows 10 and the many

181
00:08:06,409 --> 00:08:11,300
different iterations and different

182
00:08:09,139 --> 00:08:13,940
versions of Windows 10 that have come

183
00:08:11,300 --> 00:08:16,699
out since it's an initial release so a

184
00:08:13,940 --> 00:08:19,819
credential guard will make an overview

185
00:08:16,699 --> 00:08:22,310
pass on and finally I'll spend a good

186
00:08:19,819 --> 00:08:25,190
chunk of this webcast talking about how

187
00:08:22,310 --> 00:08:27,919
our forensics tools are go to tools at

188
00:08:25,190 --> 00:08:30,620
this current time for memory analysis

189
00:08:27,919 --> 00:08:32,659
how are they handling Windows 10 memory

190
00:08:30,620 --> 00:08:35,029
images so a lot of different screenshots

191
00:08:32,659 --> 00:08:38,599
of success and fail that I have to show

192
00:08:35,029 --> 00:08:40,700
you but everyone loves Windows 10 at

193
00:08:38,599 --> 00:08:42,229
least initially I mean I talked to just

194
00:08:40,700 --> 00:08:44,360
last night I was teaching a few live

195
00:08:42,229 --> 00:08:47,149
then I was like hey you know Windows 10

196
00:08:44,360 --> 00:08:49,490
who's got it almost everyone that was in

197
00:08:47,149 --> 00:08:52,010
the room had one system running Windows

198
00:08:49,490 --> 00:08:53,899
10 and they loved it so why it might be

199
00:08:52,010 --> 00:08:55,959
the Start menu it might be that you're

200
00:08:53,899 --> 00:08:58,579
one of those people that likes Cortana

201
00:08:55,959 --> 00:09:00,160
writes Cortana's out there we have to

202
00:08:58,579 --> 00:09:04,010
interface with it Notification Center

203
00:09:00,160 --> 00:09:05,779
the edge browser that they didn't really

204
00:09:04,010 --> 00:09:06,950
like the edge browser I'll tell you the

205
00:09:05,779 --> 00:09:09,290
truth there they were putting it down

206
00:09:06,950 --> 00:09:11,480
but what is the edge browser look like

207
00:09:09,290 --> 00:09:14,240
when we're doing memory analysis what

208
00:09:11,480 --> 00:09:15,440
can we expect what's normal behavior and

209
00:09:14,240 --> 00:09:18,710
that's why we have to

210
00:09:15,440 --> 00:09:20,660
come to know uh what processes are

211
00:09:18,710 --> 00:09:23,480
running on a machine authentication

212
00:09:20,660 --> 00:09:27,439
options are pretty enticing for the user

213
00:09:23,480 --> 00:09:29,000
the iris scan and facial recognition and

214
00:09:27,440 --> 00:09:31,220
you could use that to log into the

215
00:09:29,000 --> 00:09:34,460
system and what I find interesting is is

216
00:09:31,220 --> 00:09:37,610
really I guess many different variations

217
00:09:34,460 --> 00:09:39,020
of how updates can occur we know that we

218
00:09:37,610 --> 00:09:42,050
really can't stop them if we're on a

219
00:09:39,020 --> 00:09:43,160
home edition home version of Windows 10

220
00:09:42,050 --> 00:09:47,390
and I'm smiling right now

221
00:09:43,160 --> 00:09:49,339
so yeah Pavlovian response uh but can't

222
00:09:47,390 --> 00:09:50,930
turn off updates but I know that they

223
00:09:49,340 --> 00:09:52,610
can be delivered in multiple different

224
00:09:50,930 --> 00:09:53,719
ways and one of them it's quite

225
00:09:52,610 --> 00:09:56,900
interesting is this peer-to-peer

226
00:09:53,720 --> 00:09:58,640
distribution method so those are the

227
00:09:56,900 --> 00:10:01,069
kind of notable features you can

228
00:09:58,640 --> 00:10:03,199
probably throw in some others but those

229
00:10:01,070 --> 00:10:04,820
are the ones I want to hit now I've

230
00:10:03,200 --> 00:10:07,190
mentioned this from the beginning of the

231
00:10:04,820 --> 00:10:10,520
presentation here that we have to know

232
00:10:07,190 --> 00:10:12,260
normal and in order to find evil and I

233
00:10:10,520 --> 00:10:13,280
have screenshots of a blue poster if

234
00:10:12,260 --> 00:10:15,439
you've come through any of our digital

235
00:10:13,280 --> 00:10:17,420
forensics classes here at sans you've

236
00:10:15,440 --> 00:10:19,100
probably got a copy of the blue poster

237
00:10:17,420 --> 00:10:22,040
or you're on our mailing list

238
00:10:19,100 --> 00:10:24,980
this blue poster is pretty much the

239
00:10:22,040 --> 00:10:26,719
basis of my presentation and that hey we

240
00:10:24,980 --> 00:10:28,760
have to we have to modify that blue

241
00:10:26,720 --> 00:10:31,430
poster because some of the core

242
00:10:28,760 --> 00:10:33,290
processes of the Windows OS have dropped

243
00:10:31,430 --> 00:10:35,630
off some of them have changed their

244
00:10:33,290 --> 00:10:37,939
behaviors who the parent process is

245
00:10:35,630 --> 00:10:40,610
going to be how many instances of these

246
00:10:37,940 --> 00:10:43,610
Frosty's should I expect oh and I'm

247
00:10:40,610 --> 00:10:45,710
giving you if you don't have a copy of

248
00:10:43,610 --> 00:10:47,540
say the process hacker presentation

249
00:10:45,710 --> 00:10:49,580
given by Jason thousand you don't have a

250
00:10:47,540 --> 00:10:51,920
copy of there are posters there is a

251
00:10:49,580 --> 00:10:53,990
link down here at the bottom of the

252
00:10:51,920 --> 00:10:57,530
slide go ahead and hit the digital

253
00:10:53,990 --> 00:10:59,360
forensics and org website and pull down

254
00:10:57,530 --> 00:11:01,930
all there is to pull down cheat sheets

255
00:10:59,360 --> 00:11:04,730
for some of the memory forensics tools

256
00:11:01,930 --> 00:11:06,890
PDFs of the posters and a lot of other

257
00:11:04,730 --> 00:11:08,750
things of course we have a credible blog

258
00:11:06,890 --> 00:11:12,439
posts that are out there too so I want

259
00:11:08,750 --> 00:11:14,150
to mention that now I'm stressing that

260
00:11:12,440 --> 00:11:16,610
it's really important to know normal

261
00:11:14,150 --> 00:11:21,439
with our knowledge of normal we can

262
00:11:16,610 --> 00:11:23,150
implement a baseline and I see a lot of

263
00:11:21,440 --> 00:11:25,220
the plugins that are coming to light

264
00:11:23,150 --> 00:11:27,589
today a lot of the tools like Valda for

265
00:11:25,220 --> 00:11:29,120
example baseline the suburb artists

266
00:11:27,589 --> 00:11:33,740
plugin suite there

267
00:11:29,120 --> 00:11:36,970
coming in preaching this if you have a

268
00:11:33,740 --> 00:11:39,110
known good you can use it to detect

269
00:11:36,970 --> 00:11:42,200
abnormalities you can use it to deck

270
00:11:39,110 --> 00:11:44,630
those malicious processes as you compare

271
00:11:42,200 --> 00:11:46,910
and contrast to memory images so I'm

272
00:11:44,630 --> 00:11:48,439
using the same concept here but I'm

273
00:11:46,910 --> 00:11:50,209
going to tell you what normal looks like

274
00:11:48,440 --> 00:11:51,650
in the hopes that you'll incorporate it

275
00:11:50,210 --> 00:11:54,800
into your investigation and be able to

276
00:11:51,650 --> 00:11:56,839
pick out no really that that edge should

277
00:11:54,800 --> 00:11:59,599
not be launched from explore that edge

278
00:11:56,839 --> 00:12:02,630
should be launched by say Broker browser

279
00:11:59,600 --> 00:12:04,130
dot exe so I want you to come to know

280
00:12:02,630 --> 00:12:06,100
what normal looks like and this will

281
00:12:04,130 --> 00:12:08,900
make your hunting more efficient

282
00:12:06,100 --> 00:12:11,839
detecting abnormal normalities much

283
00:12:08,900 --> 00:12:13,430
quicker and I always like to patch a

284
00:12:11,839 --> 00:12:15,050
when you document baseline

285
00:12:13,430 --> 00:12:17,300
configurations in your environment

286
00:12:15,050 --> 00:12:19,849
you're preparing for when the

287
00:12:17,300 --> 00:12:23,329
third-party service providers come in so

288
00:12:19,850 --> 00:12:24,620
if you have a good baseline you can tell

289
00:12:23,330 --> 00:12:27,320
them what normal looks like they don't

290
00:12:24,620 --> 00:12:28,940
have to spend and I'm assuming everyone

291
00:12:27,320 --> 00:12:30,830
needs their party services at some point

292
00:12:28,940 --> 00:12:33,740
in time but you don't have to spend days

293
00:12:30,830 --> 00:12:35,240
or pay them for days as they ramp up in

294
00:12:33,740 --> 00:12:37,490
your environment because you can show

295
00:12:35,240 --> 00:12:41,360
them this is my gold image this is my

296
00:12:37,490 --> 00:12:43,459
memory image from my my gold build so

297
00:12:41,360 --> 00:12:47,510
I'm pinching that you can go from zero

298
00:12:43,459 --> 00:12:49,459
to hero quite quickly but let me show

299
00:12:47,510 --> 00:12:51,920
you what I'm most excited about which is

300
00:12:49,459 --> 00:12:54,050
the process list how is the process list

301
00:12:51,920 --> 00:12:56,029
change I've picked out about five

302
00:12:54,050 --> 00:12:59,569
different things here that I found

303
00:12:56,029 --> 00:13:01,610
notable and this yes this has nerd and I

304
00:12:59,570 --> 00:13:04,520
get smeared all over it in this slide

305
00:13:01,610 --> 00:13:06,350
but if you're looking at process

306
00:13:04,520 --> 00:13:09,140
listener comparing it to Windows 8 or

307
00:13:06,350 --> 00:13:12,080
even Windows 7 Vista you're going to see

308
00:13:09,140 --> 00:13:15,830
that for example SkyDrive is now called

309
00:13:12,080 --> 00:13:18,800
onedrive of some changes with how Khan

310
00:13:15,830 --> 00:13:23,120
hosted exe is launching you're like what

311
00:13:18,800 --> 00:13:24,680
is Khan host ah Khan host it trickles

312
00:13:23,120 --> 00:13:26,270
down and sometimes we Curie the Khan

313
00:13:24,680 --> 00:13:27,650
host process to figure out what's been

314
00:13:26,270 --> 00:13:32,390
entered in a terminal window and a

315
00:13:27,650 --> 00:13:36,339
cmd.exe there is this LS m dot exe the

316
00:13:32,390 --> 00:13:39,230
LS m dot exe is helpful in spawning

317
00:13:36,339 --> 00:13:41,000
another session so that's one to know

318
00:13:39,230 --> 00:13:42,600
about it handles terminal services fast

319
00:13:41,000 --> 00:13:45,690
user switching so I'm

320
00:13:42,600 --> 00:13:47,940
saying LSM exe is no longer even in the

321
00:13:45,690 --> 00:13:49,380
process list so how would this behoove

322
00:13:47,940 --> 00:13:52,139
you to know as you're looking at a

323
00:13:49,380 --> 00:13:54,240
Windows 10 process list and you see LSM

324
00:13:52,139 --> 00:13:56,790
whoa wait a second that shouldn't be

325
00:13:54,240 --> 00:14:01,529
there right and I know this is a one-off

326
00:13:56,790 --> 00:14:04,380
but come to understand how often malware

327
00:14:01,529 --> 00:14:05,880
mimics normal processes it's no longer

328
00:14:04,380 --> 00:14:08,370
you're going to have the malicious

329
00:14:05,880 --> 00:14:10,139
process running as evil DXE that would

330
00:14:08,370 --> 00:14:12,329
be considered low-hanging fruit just

331
00:14:10,139 --> 00:14:13,589
doesn't happen if you have a good

332
00:14:12,329 --> 00:14:17,729
malware author it's going to be

333
00:14:13,589 --> 00:14:20,279
something like LS SAS exe something

334
00:14:17,730 --> 00:14:21,990
mimicking normal so know that LS M

335
00:14:20,279 --> 00:14:25,920
shouldn't be there anymore and then

336
00:14:21,990 --> 00:14:28,009
there's this thing called LS a is o exe

337
00:14:25,920 --> 00:14:30,870
if you've heard of credential guard yet

338
00:14:28,009 --> 00:14:33,690
credential guard is supposed to be what

339
00:14:30,870 --> 00:14:35,009
saves us from past the hash I know it

340
00:14:33,690 --> 00:14:37,410
has a lot of dependencies and we'll talk

341
00:14:35,009 --> 00:14:39,120
about them for implementation we'll talk

342
00:14:37,410 --> 00:14:40,740
about them when we get to the slide but

343
00:14:39,120 --> 00:14:42,300
there's this new process that we're

344
00:14:40,740 --> 00:14:46,949
going to see hanging out in a process

345
00:14:42,300 --> 00:14:49,290
list LSA is a oxc that's going to show

346
00:14:46,949 --> 00:14:52,910
us okay this is credential guard or a

347
00:14:49,290 --> 00:14:54,689
system that is implementing this

348
00:14:52,910 --> 00:14:59,189
security mechanism to protect

349
00:14:54,689 --> 00:15:01,529
credentials a task host dot exe generic

350
00:14:59,189 --> 00:15:03,329
process it runs as a Windows service and

351
00:15:01,529 --> 00:15:05,730
you can see that the process name has

352
00:15:03,329 --> 00:15:09,209
morphed as we've moved from Windows 7

353
00:15:05,730 --> 00:15:14,310
was just simply tasks hosted exe to task

354
00:15:09,209 --> 00:15:16,469
host X on Windows 8 and task host wxe

355
00:15:14,310 --> 00:15:18,060
sorry there you go on Windows 10 so I

356
00:15:16,470 --> 00:15:21,060
have a bit of a challenge for you and

357
00:15:18,060 --> 00:15:23,459
why not is your active participants here

358
00:15:21,060 --> 00:15:25,560
the challenge is which version of

359
00:15:23,459 --> 00:15:28,430
Windows is this based on the knowledge I

360
00:15:25,560 --> 00:15:28,430
just gave you

361
00:15:28,730 --> 00:15:35,850
yes which version is it like I don't

362
00:15:32,910 --> 00:15:37,230
know this of course is the truncated

363
00:15:35,850 --> 00:15:38,939
process list you can clearly see

364
00:15:37,230 --> 00:15:42,810
someone's logged in it makes it legit

365
00:15:38,939 --> 00:15:44,610
I've uh oh oh don't lock your screen

366
00:15:42,810 --> 00:15:47,459
that happens to me all the time you

367
00:15:44,610 --> 00:15:50,389
think I never teach v live at all but my

368
00:15:47,459 --> 00:15:54,479
I run a Mac and so my hot corners whoa

369
00:15:50,389 --> 00:15:56,430
so when say a Windows 7 Richard and Rick

370
00:15:54,480 --> 00:15:59,460
just chimed in to the questions the

371
00:15:56,430 --> 00:16:01,170
q a window with a windows 7 answer while

372
00:15:59,460 --> 00:16:03,870
I was stalling for time waiting for

373
00:16:01,170 --> 00:16:06,209
someone to answer well done and they're

374
00:16:03,870 --> 00:16:09,930
probably using this knowledge right here

375
00:16:06,210 --> 00:16:13,830
well first off LSS is being launched by

376
00:16:09,930 --> 00:16:18,329
the process 392 so what is that that's

377
00:16:13,830 --> 00:16:19,770
when I knit that is going to be unique

378
00:16:18,330 --> 00:16:21,779
to Vista and beyond

379
00:16:19,770 --> 00:16:24,779
prior to this LSS was launched by when

380
00:16:21,779 --> 00:16:26,580
logon right XP if you have memory images

381
00:16:24,779 --> 00:16:28,740
take a look else ass is going to have a

382
00:16:26,580 --> 00:16:30,630
parent process of wind logon so that

383
00:16:28,740 --> 00:16:33,360
gives it away this is at least Vista and

384
00:16:30,630 --> 00:16:35,310
beyond but the other thing that you guys

385
00:16:33,360 --> 00:16:37,770
are probably cueing off of is tasks host

386
00:16:35,310 --> 00:16:40,109
dot exe it was on the last slide if it's

387
00:16:37,770 --> 00:16:44,189
task host dot exe it's going to be your

388
00:16:40,110 --> 00:16:45,630
Windows 7 example here so not Windows 8

389
00:16:44,190 --> 00:16:48,180
not Windows 10 because they have

390
00:16:45,630 --> 00:16:50,660
different image file or process names

391
00:16:48,180 --> 00:16:52,829
for this particular process well done

392
00:16:50,660 --> 00:16:54,899
nice nice

393
00:16:52,830 --> 00:16:57,209
so what was I mentioning about that con

394
00:16:54,899 --> 00:16:58,709
host well if you've taken some of our

395
00:16:57,209 --> 00:17:02,520
classes you probably know the importance

396
00:16:58,709 --> 00:17:05,550
and XP of CSRs s process client server

397
00:17:02,520 --> 00:17:07,319
runtime subsystem service whoo you know

398
00:17:05,550 --> 00:17:09,389
that if you run strings against that guy

399
00:17:07,319 --> 00:17:11,760
you might be able to pull out that which

400
00:17:09,390 --> 00:17:15,929
the user or an attacker entered in a

401
00:17:11,760 --> 00:17:18,059
terminal window cmd.exe so we say that a

402
00:17:15,929 --> 00:17:21,120
you know on vista and beyond the con

403
00:17:18,059 --> 00:17:23,699
host is now responsible or can carry

404
00:17:21,119 --> 00:17:25,979
some of the weight that which the csr SS

405
00:17:23,699 --> 00:17:28,140
used to so you can see here I'm pointing

406
00:17:25,980 --> 00:17:31,950
out con host and the way it looked in

407
00:17:28,140 --> 00:17:34,200
Vista all the way up to Windows 8 I'm

408
00:17:31,950 --> 00:17:35,730
shaking my head so what was normal

409
00:17:34,200 --> 00:17:38,010
behavior I have a couple examples here I

410
00:17:35,730 --> 00:17:40,559
don't bracket them in there's one con no

411
00:17:38,010 --> 00:17:43,110
study XE has a pit of 2740 we're looking

412
00:17:40,559 --> 00:17:45,420
at a process list here it has a parent

413
00:17:43,110 --> 00:17:48,240
process of 424 this is what normal used

414
00:17:45,420 --> 00:17:52,350
to look like that con host was spawned

415
00:17:48,240 --> 00:17:54,230
by CS RSS okay okay I'm used to that

416
00:17:52,350 --> 00:17:57,090
used to that what I'm not used to

417
00:17:54,230 --> 00:17:59,730
because CS RSS is a system process right

418
00:17:57,090 --> 00:18:01,919
starts early in boot what I'm not used

419
00:17:59,730 --> 00:18:03,300
to is this thing right here and this is

420
00:18:01,920 --> 00:18:04,230
the way it presents itself in window is

421
00:18:03,300 --> 00:18:05,370
8 and Beyond

422
00:18:04,230 --> 00:18:08,970
so you're going to see this with Windows

423
00:18:05,370 --> 00:18:10,168
10 that con host is being spawned by the

424
00:18:08,970 --> 00:18:13,139
CMD

425
00:18:10,169 --> 00:18:13,739
see that it's married up with that's

426
00:18:13,139 --> 00:18:15,899
wild

427
00:18:13,739 --> 00:18:18,330
I think it's mind blowing because you

428
00:18:15,899 --> 00:18:20,070
have a user process finding what used to

429
00:18:18,330 --> 00:18:22,830
be a system process with the condo

430
00:18:20,070 --> 00:18:25,799
studying see um and what does it matter

431
00:18:22,830 --> 00:18:28,320
no I'm co-author of a class I work with

432
00:18:25,799 --> 00:18:29,700
a couple other authors oftentimes we'll

433
00:18:28,320 --> 00:18:31,559
have these philosophical debates of like

434
00:18:29,700 --> 00:18:33,809
why does this matter to the forensic

435
00:18:31,559 --> 00:18:35,249
examiner and I want to point out so I'm

436
00:18:33,809 --> 00:18:37,980
always defending you know I want to

437
00:18:35,249 --> 00:18:40,590
point out that I would immediately think

438
00:18:37,980 --> 00:18:42,659
this was suspicious because cmd.exe

439
00:18:40,590 --> 00:18:44,340
I mean most of us in for scanning our

440
00:18:42,659 --> 00:18:46,859
environments in doing behavioral or

441
00:18:44,340 --> 00:18:49,889
threat hunting looking for indicators of

442
00:18:46,859 --> 00:18:53,730
attack we we would be looking for things

443
00:18:49,889 --> 00:18:56,668
spawning or spawned by cmd.exe so to

444
00:18:53,730 --> 00:19:01,350
know that this now fits in under this

445
00:18:56,669 --> 00:19:05,129
guy's here ah you know it changes our

446
00:19:01,350 --> 00:19:07,980
idea of what normal looks like ah so

447
00:19:05,129 --> 00:19:11,580
what talk about the edge browser now I

448
00:19:07,980 --> 00:19:14,909
see a couple questions that I will get

449
00:19:11,580 --> 00:19:16,799
to in line let me get knee-deep into

450
00:19:14,909 --> 00:19:18,149
some of the forensic artifacts and

451
00:19:16,799 --> 00:19:19,559
discussions of that and then we'll hit

452
00:19:18,149 --> 00:19:22,830
the questions in that in the question

453
00:19:19,559 --> 00:19:24,509
window but the edge browser under the

454
00:19:22,830 --> 00:19:27,449
hood and I think everyone's really

455
00:19:24,509 --> 00:19:30,239
relieved to find this under the hood

456
00:19:27,450 --> 00:19:33,119
it's behaving the same way and tracking

457
00:19:30,239 --> 00:19:35,340
artifacts the same way as your Internet

458
00:19:33,119 --> 00:19:37,230
Explorer 10 and beyond it's like yeah

459
00:19:35,340 --> 00:19:40,889
everything's still in that web cache

460
00:19:37,230 --> 00:19:41,730
that um Yesi database I'm pleased

461
00:19:40,889 --> 00:19:43,139
anyways

462
00:19:41,730 --> 00:19:45,629
I wasn't up for learning another

463
00:19:43,139 --> 00:19:47,668
mechanism of keeping and parsing browser

464
00:19:45,629 --> 00:19:50,100
history but as we're looking at the

465
00:19:47,669 --> 00:19:52,529
process list I have bad news for you

466
00:19:50,100 --> 00:19:54,928
that it's presenting itself differently

467
00:19:52,529 --> 00:19:57,179
then you might have come to know as

468
00:19:54,929 --> 00:20:00,169
you're looking at I explore that Exe

469
00:19:57,179 --> 00:20:03,450
prossies what I'm showing you is a huge

470
00:20:00,169 --> 00:20:05,879
footprint as I launched edge the edge

471
00:20:03,450 --> 00:20:08,100
browser there's a huge footprints of

472
00:20:05,879 --> 00:20:11,009
many different processes so browser

473
00:20:08,100 --> 00:20:14,928
broker is what's responsible for

474
00:20:11,009 --> 00:20:17,249
launching the Microsoft edge process and

475
00:20:14,929 --> 00:20:19,679
essentially this is running as a service

476
00:20:17,249 --> 00:20:22,349
so SVC host is launching or is the

477
00:20:19,679 --> 00:20:23,940
parent of all of this as we're looking

478
00:20:22,349 --> 00:20:26,668
at hierarchical structure

479
00:20:23,940 --> 00:20:28,019
but you can see the unique thing is even

480
00:20:26,669 --> 00:20:30,090
though it's being launched by an SPC

481
00:20:28,019 --> 00:20:31,620
host all of these edge processes that

482
00:20:30,090 --> 00:20:34,110
you're seeing here are going to be

483
00:20:31,620 --> 00:20:36,268
associated with the user session so

484
00:20:34,110 --> 00:20:38,039
session one yeah

485
00:20:36,269 --> 00:20:39,629
session one in this instance but I cut

486
00:20:38,039 --> 00:20:41,190
off that session column sorry about that

487
00:20:39,629 --> 00:20:43,980
I'm just showing hierarchical structure

488
00:20:41,190 --> 00:20:46,230
here but you can see run time broker is

489
00:20:43,980 --> 00:20:49,320
responsible for my different tabs that

490
00:20:46,230 --> 00:20:51,090
are active in my edge browser right on

491
00:20:49,320 --> 00:20:53,908
right on I've been playing around with

492
00:20:51,090 --> 00:20:56,639
this I'm showing you ps3 output here

493
00:20:53,909 --> 00:20:57,570
from volatility the volatility the

494
00:20:56,639 --> 00:21:01,408
screenshots thus far have been

495
00:20:57,570 --> 00:21:03,389
volatility 2.5 2.5 has that debate of

496
00:21:01,409 --> 00:21:07,799
support for Windows 10 which we'll talk

497
00:21:03,389 --> 00:21:10,740
about in a moment all right if you've

498
00:21:07,799 --> 00:21:13,470
been doing a file system forensics

499
00:21:10,740 --> 00:21:16,409
looking at a Windows 10 artifacts and

500
00:21:13,470 --> 00:21:18,509
I'm sorry because things have gotten a

501
00:21:16,409 --> 00:21:21,330
little bit more difficult right with

502
00:21:18,509 --> 00:21:22,679
prefetch prefetch is there I was looking

503
00:21:21,330 --> 00:21:25,408
at a memory image this morning and

504
00:21:22,679 --> 00:21:28,080
prefetch was there but I couldn't part

505
00:21:25,409 --> 00:21:30,419
with my parsing tools I was using

506
00:21:28,080 --> 00:21:32,668
honestly I was using Book extractor to

507
00:21:30,419 --> 00:21:34,710
pull out prefetch files and it was fine

508
00:21:32,669 --> 00:21:37,799
rolling book extractor against Windows 8

509
00:21:34,710 --> 00:21:40,230
Windows 7 prefetch files it was solid

510
00:21:37,799 --> 00:21:43,769
but Windows 10 it's because of the

511
00:21:40,230 --> 00:21:46,590
compression a compression formatting

512
00:21:43,769 --> 00:21:49,070
that's being used LZ Express Huffman

513
00:21:46,590 --> 00:21:51,449
stream if this sounds familiar that a

514
00:21:49,070 --> 00:21:54,029
formatting compression has been changed

515
00:21:51,450 --> 00:21:56,190
up there for our tools will not parse if

516
00:21:54,029 --> 00:21:58,679
it sounds familiar is because it is

517
00:21:56,190 --> 00:22:00,480
that's the state of being we're at right

518
00:21:58,679 --> 00:22:03,179
now with the hibernation file as of

519
00:22:00,480 --> 00:22:06,360
Windows 8 and beyond so I'll hit that

520
00:22:03,179 --> 00:22:08,100
when we talk about the fast startup how

521
00:22:06,360 --> 00:22:10,949
the hyper fill is being used in Windows

522
00:22:08,100 --> 00:22:12,719
10 right now but you can see here when

523
00:22:10,950 --> 00:22:14,820
the compression format or when a

524
00:22:12,720 --> 00:22:18,240
compression format is applied so some of

525
00:22:14,820 --> 00:22:20,009
our core artifacts our tools have a bit

526
00:22:18,240 --> 00:22:22,250
of lag time before they can catch up

527
00:22:20,009 --> 00:22:25,740
shim cache is a good example of this

528
00:22:22,250 --> 00:22:27,870
shoutouts to binary for a the blog that

529
00:22:25,740 --> 00:22:30,539
really delves deep into looking at the

530
00:22:27,870 --> 00:22:33,059
header of our shim cache values the

531
00:22:30,539 --> 00:22:35,700
header has changed in size now it's 48

532
00:22:33,059 --> 00:22:37,740
bytes as opposed to 128 bytes and you're

533
00:22:35,700 --> 00:22:40,170
thinking that sounds easier to parse

534
00:22:37,740 --> 00:22:43,440
you'd be wrong I'm showing you shim cash

535
00:22:40,170 --> 00:22:44,730
as one of my favorite plugins in the

536
00:22:43,440 --> 00:22:47,400
volatility framework

537
00:22:44,730 --> 00:22:50,970
it does not parse no shim cache data

538
00:22:47,400 --> 00:22:53,040
found of yet so we have to wait for our

539
00:22:50,970 --> 00:22:55,860
tools to catch up or we have to be part

540
00:22:53,040 --> 00:22:59,280
of the solution and help revise these

541
00:22:55,860 --> 00:23:02,459
open source tools for parsing new

542
00:22:59,280 --> 00:23:03,840
formats I don't I don't mean to depress

543
00:23:02,460 --> 00:23:06,420
because those are my two favorite

544
00:23:03,840 --> 00:23:08,850
artifacts are evidence of execution

545
00:23:06,420 --> 00:23:11,010
oh speaking of Windows 10 this is kind

546
00:23:08,850 --> 00:23:13,709
of eerie that Xbox is integrated there

547
00:23:11,010 --> 00:23:14,400
is an Xbox app on your Windows 10

548
00:23:13,710 --> 00:23:16,290
already

549
00:23:14,400 --> 00:23:18,360
so I point this out because we're always

550
00:23:16,290 --> 00:23:21,120
looking at services well I'm always

551
00:23:18,360 --> 00:23:22,678
looking at services because they start

552
00:23:21,120 --> 00:23:25,169
an EM trends report from a couple years

553
00:23:22,679 --> 00:23:27,770
ago services routes the creation or

554
00:23:25,170 --> 00:23:29,970
hijacking of a service was used by about

555
00:23:27,770 --> 00:23:32,639
70% of malware to instantiate

556
00:23:29,970 --> 00:23:35,490
persistence right so it's so common that

557
00:23:32,640 --> 00:23:37,830
I want to know at least have a baseline

558
00:23:35,490 --> 00:23:39,840
of what my services look like and Sabbah

559
00:23:37,830 --> 00:23:42,620
bars that kind of addresses that one

560
00:23:39,840 --> 00:23:45,300
with the Serpent's but now is out there

561
00:23:42,620 --> 00:23:49,439
community contribution for volatility so

562
00:23:45,300 --> 00:23:51,419
what I would want to newest and I'm

563
00:23:49,440 --> 00:23:53,520
using my live account to log into my box

564
00:23:51,420 --> 00:23:55,350
my Microsoft account to lock it login to

565
00:23:53,520 --> 00:23:58,050
my Windows 10 bucks I want to know that

566
00:23:55,350 --> 00:24:00,059
yeah there are Xbox services and there's

567
00:23:58,050 --> 00:24:02,220
a lot of other services the onedrive

568
00:24:00,059 --> 00:24:06,510
service that peer-to-peer networking

569
00:24:02,220 --> 00:24:08,520
services so this is your SVC scan and it

570
00:24:06,510 --> 00:24:10,620
says recall has the SVC scan as well and

571
00:24:08,520 --> 00:24:17,370
I was looking at recalls output for the

572
00:24:10,620 --> 00:24:19,678
screenshot wild stuff wild stuff I like

573
00:24:17,370 --> 00:24:22,949
you know I'm not much of a Star Wars fan

574
00:24:19,679 --> 00:24:24,960
gasp or I know but when I mentioned

575
00:24:22,950 --> 00:24:26,520
compression to my fellow

576
00:24:24,960 --> 00:24:28,550
sans instructors are like I'm going to

577
00:24:26,520 --> 00:24:31,580
talk about the new compression

578
00:24:28,550 --> 00:24:34,440
techniques that are being implemented in

579
00:24:31,580 --> 00:24:37,050
Windows 10 memory they were like - you

580
00:24:34,440 --> 00:24:40,320
need to show a screenshot of the

581
00:24:37,050 --> 00:24:42,450
starwars the trash compactor and I don't

582
00:24:40,320 --> 00:24:45,389
know if you relate to that but I've put

583
00:24:42,450 --> 00:24:48,090
it on this slide I'm discussing some

584
00:24:45,390 --> 00:24:50,280
efficiency gains that have been

585
00:24:48,090 --> 00:24:51,419
implemented in Windows 10 memory

586
00:24:50,280 --> 00:24:53,370
management so

587
00:24:51,420 --> 00:24:55,470
if you've heard about this or if you

588
00:24:53,370 --> 00:24:59,090
haven't go ahead and watch this video

589
00:24:55,470 --> 00:25:01,980
that's hosted on channel 9 the MSDN comm

590
00:24:59,090 --> 00:25:06,720
memory compression in Windows 10 RTF

591
00:25:01,980 --> 00:25:09,690
this speaks to an analysis is happening

592
00:25:06,720 --> 00:25:11,490
a memory manager is tracking portions or

593
00:25:09,690 --> 00:25:14,100
data that's stored in RAM that are not

594
00:25:11,490 --> 00:25:16,830
being used at the current time in

595
00:25:14,100 --> 00:25:20,129
frequently used data portions are being

596
00:25:16,830 --> 00:25:22,350
compressed and stored in RAM in physical

597
00:25:20,130 --> 00:25:24,750
memory whereas before if memory pressure

598
00:25:22,350 --> 00:25:26,669
was detected by the memory manager well

599
00:25:24,750 --> 00:25:28,830
then you know of course what the memory

600
00:25:26,670 --> 00:25:31,350
manager would do stave it off to the

601
00:25:28,830 --> 00:25:35,070
page file so you'd have this thrashing

602
00:25:31,350 --> 00:25:38,189
and we know a high level of input/output

603
00:25:35,070 --> 00:25:40,470
slow is your system down as the hardware

604
00:25:38,190 --> 00:25:42,510
thrashes and has to read things and

605
00:25:40,470 --> 00:25:46,050
write things to the page file so this is

606
00:25:42,510 --> 00:25:50,040
a solution and reduces the use of memory

607
00:25:46,050 --> 00:25:51,899
by applications that are running in the

608
00:25:50,040 --> 00:25:54,570
backgrounds we're going to have that

609
00:25:51,900 --> 00:25:58,800
application data it's stored in RAM

610
00:25:54,570 --> 00:26:01,080
compressed and kept in RAM so it really

611
00:25:58,800 --> 00:26:03,629
it does a fine job of decreasing or

612
00:26:01,080 --> 00:26:06,750
reducing the number of reason writes to

613
00:26:03,630 --> 00:26:08,250
the hard drive check that out we're

614
00:26:06,750 --> 00:26:10,530
going to be running into compressed

615
00:26:08,250 --> 00:26:12,450
portions of physical memory that's

616
00:26:10,530 --> 00:26:15,300
that's the mind-blowing thing about this

617
00:26:12,450 --> 00:26:17,700
it's so portions of physical memory that

618
00:26:15,300 --> 00:26:19,260
we cannot immediately go and run strings

619
00:26:17,700 --> 00:26:21,720
again so we cannot immediately go and

620
00:26:19,260 --> 00:26:26,820
read with our parsing tools just to

621
00:26:21,720 --> 00:26:28,980
drive home the why it matters so just

622
00:26:26,820 --> 00:26:31,530
I'm going to answer some questions that

623
00:26:28,980 --> 00:26:33,750
were dropped into the chat window first

624
00:26:31,530 --> 00:26:37,590
question most important will this slide

625
00:26:33,750 --> 00:26:40,680
deck be available yes immediately after

626
00:26:37,590 --> 00:26:44,310
I am finished with the presentation here

627
00:26:40,680 --> 00:26:46,650
we're going to convert the webcast

628
00:26:44,310 --> 00:26:50,370
convert the recording put it out there

629
00:26:46,650 --> 00:26:52,320
in the archives sans webcast archives

630
00:26:50,370 --> 00:26:54,840
and the slide deck will accompany it so

631
00:26:52,320 --> 00:26:56,879
you'll have access to this suite

632
00:26:54,840 --> 00:26:58,919
alright let me tell you about the

633
00:26:56,880 --> 00:27:01,050
startup the fast startup and how the

634
00:26:58,920 --> 00:27:04,020
hiber feel that's this how we can expect

635
00:27:01,050 --> 00:27:05,370
it to be used in Windows 10 so now when

636
00:27:04,020 --> 00:27:07,950
you shut down a Windows 10

637
00:27:05,370 --> 00:27:10,229
machine by default you're going to have

638
00:27:07,950 --> 00:27:11,880
a different type of shutdown

639
00:27:10,230 --> 00:27:14,460
applications are still going to close

640
00:27:11,880 --> 00:27:17,940
the user is still going to be logged out

641
00:27:14,460 --> 00:27:19,140
but kernel memory to include drivers

642
00:27:17,940 --> 00:27:21,390
kernel memory is going to be written to

643
00:27:19,140 --> 00:27:27,030
the hyper fill that says so this is

644
00:27:21,390 --> 00:27:28,710
equivalent to um maybe the way crash

645
00:27:27,030 --> 00:27:32,340
dump occurs when you're just doing a

646
00:27:28,710 --> 00:27:34,770
mini or a small crash dump an automatic

647
00:27:32,340 --> 00:27:37,350
crashed on for me it's just tracking

648
00:27:34,770 --> 00:27:39,990
kernel memory you're going to have that

649
00:27:37,350 --> 00:27:41,070
written to the hybrid fill that sis and

650
00:27:39,990 --> 00:27:44,580
this is part of shutdown

651
00:27:41,070 --> 00:27:47,550
that's how Windows 10 is able to start

652
00:27:44,580 --> 00:27:50,309
so quickly it loads the data the kernel

653
00:27:47,550 --> 00:27:53,040
data back up into memory from the hybrid

654
00:27:50,309 --> 00:27:54,540
fill so it's a quick easy shortcut but

655
00:27:53,040 --> 00:27:58,110
what does this mean to forensic

656
00:27:54,540 --> 00:28:00,178
examiners it means that our hyper fill

657
00:27:58,110 --> 00:28:02,610
is going to be written to each and every

658
00:28:00,179 --> 00:28:04,320
time our system shuts down so the hyper

659
00:28:02,610 --> 00:28:07,020
fill is an excellent source of

660
00:28:04,320 --> 00:28:08,820
historical data of what's going on

661
00:28:07,020 --> 00:28:10,139
current system stay at time machine was

662
00:28:08,820 --> 00:28:12,330
hibernated but if it's getting

663
00:28:10,140 --> 00:28:12,630
overwritten every time the system shuts

664
00:28:12,330 --> 00:28:14,550
down

665
00:28:12,630 --> 00:28:16,470
well now I'm concerned about whether

666
00:28:14,550 --> 00:28:21,570
volume Shadow Copy Service is running

667
00:28:16,470 --> 00:28:24,570
and have I captured a series or several

668
00:28:21,570 --> 00:28:27,090
copies of the hyper fill what am i able

669
00:28:24,570 --> 00:28:30,809
to speak to I don't have a comprehensive

670
00:28:27,090 --> 00:28:32,309
a copy of memory and I want to take a

671
00:28:30,809 --> 00:28:34,710
moment because I did mention how very

672
00:28:32,309 --> 00:28:36,720
depressing this is hey Windows 8 the

673
00:28:34,710 --> 00:28:40,170
whole compression algorithm has changed

674
00:28:36,720 --> 00:28:44,250
in hibernation files so our image copy

675
00:28:40,170 --> 00:28:46,110
our hybrid two bin tool as it was it was

676
00:28:44,250 --> 00:28:49,350
not converting so we could not gain

677
00:28:46,110 --> 00:28:50,909
access to the contents of this excellent

678
00:28:49,350 --> 00:28:53,730
source of physical memory excellent

679
00:28:50,910 --> 00:28:55,770
source of system state some progress has

680
00:28:53,730 --> 00:28:58,590
been made I know that master suite has a

681
00:28:55,770 --> 00:29:00,030
beta version out of hybrid two bin right

682
00:28:58,590 --> 00:29:02,159
now that he's having people test if

683
00:29:00,030 --> 00:29:03,750
you're on the dfi our mailing list if

684
00:29:02,160 --> 00:29:05,880
you're a sans alumni went through some

685
00:29:03,750 --> 00:29:07,350
of our dfi our classes no reason that

686
00:29:05,880 --> 00:29:09,270
you're not on the alumni mailing list

687
00:29:07,350 --> 00:29:10,830
and he kind of pitched it out there to

688
00:29:09,270 --> 00:29:14,100
anyone who's interested in doing some

689
00:29:10,830 --> 00:29:16,560
beta testing on his new hybrid tube in

690
00:29:14,100 --> 00:29:19,360
that converts Windows 8 hibernation

691
00:29:16,560 --> 00:29:20,830
files so it looked back through email

692
00:29:19,360 --> 00:29:22,419
if you're sending it to a different

693
00:29:20,830 --> 00:29:24,760
folder and see if you can reach out to

694
00:29:22,420 --> 00:29:26,890
him and get a download link yeah check

695
00:29:24,760 --> 00:29:29,379
that out that could be the solution to

696
00:29:26,890 --> 00:29:32,820
one of our problems that has kept us up

697
00:29:29,380 --> 00:29:32,820
late at night for sure

698
00:29:33,090 --> 00:29:40,149
all right um let's see talking about

699
00:29:37,240 --> 00:29:42,340
structure off eustachian we know there's

700
00:29:40,150 --> 00:29:45,370
reasons we look at patch guard patch

701
00:29:42,340 --> 00:29:47,110
guards implementation as of 64-bit

702
00:29:45,370 --> 00:29:50,350
versions of Windows patch guard

703
00:29:47,110 --> 00:29:53,169
essentially he was implemented to keep

704
00:29:50,350 --> 00:29:55,060
malware from subverting so skip root

705
00:29:53,170 --> 00:29:58,410
kits from subverting structures as they

706
00:29:55,060 --> 00:30:00,159
exist in Windows memory so we have

707
00:29:58,410 --> 00:30:03,820
implementations that we've already seen

708
00:30:00,160 --> 00:30:07,330
a Windows is trying to lock down kernel

709
00:30:03,820 --> 00:30:10,179
memory so malware cannot act on it step

710
00:30:07,330 --> 00:30:12,990
in subvert the windows API is another

711
00:30:10,180 --> 00:30:15,100
example of Occupation of locking down

712
00:30:12,990 --> 00:30:17,500
structures as they exist in Windows

713
00:30:15,100 --> 00:30:20,050
memory is the encryption of the kernel

714
00:30:17,500 --> 00:30:22,030
debugging data block so this is kind of

715
00:30:20,050 --> 00:30:24,220
ramping up to a change that happened in

716
00:30:22,030 --> 00:30:26,710
Windows 10 but just in case you're not

717
00:30:24,220 --> 00:30:29,020
familiar with the concept we have the

718
00:30:26,710 --> 00:30:30,430
kernel debugging data block is core to

719
00:30:29,020 --> 00:30:32,200
understanding particular if you're

720
00:30:30,430 --> 00:30:35,020
running volatility to understanding the

721
00:30:32,200 --> 00:30:37,030
layout of Windows memory and it allows

722
00:30:35,020 --> 00:30:39,310
you to run things like PS lists or

723
00:30:37,030 --> 00:30:44,830
walking the list of loaded drivers a

724
00:30:39,310 --> 00:30:48,129
really cool so we win it if let's see

725
00:30:44,830 --> 00:30:52,270
Windows 8 was when this structure was

726
00:30:48,130 --> 00:30:55,680
encrypted by default Windows 8 64-bit

727
00:30:52,270 --> 00:30:59,800
and what this meant was until our tools

728
00:30:55,680 --> 00:31:01,660
figured out had crimped this kernel

729
00:30:59,800 --> 00:31:03,820
debugging a data block we couldn't run

730
00:31:01,660 --> 00:31:05,380
things like a process list if we're

731
00:31:03,820 --> 00:31:08,350
using volatility we couldn't run the

732
00:31:05,380 --> 00:31:10,900
modules or the hive list walk it did not

733
00:31:08,350 --> 00:31:13,750
work for us a lot of the plugins would

734
00:31:10,900 --> 00:31:15,940
fail so this structures core with

735
00:31:13,750 --> 00:31:19,270
Windows 8 and beyond we know that it's

736
00:31:15,940 --> 00:31:20,950
encrypted so there was this lag time as

737
00:31:19,270 --> 00:31:23,080
we waited for our tools to catch up

738
00:31:20,950 --> 00:31:24,580
allowing us to decrypt the kernel

739
00:31:23,080 --> 00:31:27,159
debugging data block and kind of unlock

740
00:31:24,580 --> 00:31:29,679
the rest of our ability to analyze

741
00:31:27,160 --> 00:31:33,210
memory so if I compare and contrast here

742
00:31:29,680 --> 00:31:35,850
I have a the encrypted kdb

743
00:31:33,210 --> 00:31:38,789
boxed out you can see it doesn't have

744
00:31:35,850 --> 00:31:41,969
its normal so normally we scan looking

745
00:31:38,789 --> 00:31:46,590
for ate no bites and it asks you KD BG

746
00:31:41,970 --> 00:31:49,559
and that's how our say KD BG scan or our

747
00:31:46,590 --> 00:31:53,668
image info originally works but now we

748
00:31:49,559 --> 00:31:55,408
have within Windows 8 x64 and beyond we

749
00:31:53,669 --> 00:31:57,840
have this encrypted kernel debugging

750
00:31:55,409 --> 00:32:01,020
data block so we're tools had to ramp up

751
00:31:57,840 --> 00:32:02,668
and adjust and figure out the algorithm

752
00:32:01,020 --> 00:32:05,760
that was used for encryption to a

753
00:32:02,669 --> 00:32:08,279
decryption could take place all right

754
00:32:05,760 --> 00:32:10,500
so how does this kind of fold into

755
00:32:08,279 --> 00:32:13,320
something that's occurring in Windows 10

756
00:32:10,500 --> 00:32:15,990
memory well Michael Cohen one of the

757
00:32:13,320 --> 00:32:18,418
core developers of recall at this time

758
00:32:15,990 --> 00:32:22,529
Michael Cohen has this excellent blog

759
00:32:18,419 --> 00:32:24,570
post and it's on the next page the URL

760
00:32:22,529 --> 00:32:26,640
so you can look this up as an excellent

761
00:32:24,570 --> 00:32:28,379
blog post that describes the change

762
00:32:26,640 --> 00:32:30,059
that's happened with the type index

763
00:32:28,380 --> 00:32:32,880
field like what do I care about this

764
00:32:30,059 --> 00:32:34,649
type index fields whoa whoa the type

765
00:32:32,880 --> 00:32:37,350
index field this part of the kernel

766
00:32:34,649 --> 00:32:39,600
object header and remember when we were

767
00:32:37,350 --> 00:32:42,199
talking about how core the KD BG was

768
00:32:39,600 --> 00:32:44,158
we're walking the process list

769
00:32:42,200 --> 00:32:46,380
understanding kernel objects

770
00:32:44,159 --> 00:32:48,720
understanding say the process metadata

771
00:32:46,380 --> 00:32:51,720
structures and the registry event

772
00:32:48,720 --> 00:32:54,240
metadata structures that's that's

773
00:32:51,720 --> 00:32:57,360
essential our ability to parse and make

774
00:32:54,240 --> 00:32:59,700
sense of memory images so we find that

775
00:32:57,360 --> 00:33:02,010
there's obvious keishon there is X

776
00:32:59,700 --> 00:33:04,409
oaring that has occurred with this type

777
00:33:02,010 --> 00:33:06,750
index fields we know that that was a

778
00:33:04,409 --> 00:33:08,309
hurdle that needed to be addressed with

779
00:33:06,750 --> 00:33:09,480
all of our memory parsing tools if

780
00:33:08,309 --> 00:33:11,370
they're going to accept the challenge

781
00:33:09,480 --> 00:33:13,980
and say hey I can support Windows 10

782
00:33:11,370 --> 00:33:16,668
memory images so this is just a

783
00:33:13,980 --> 00:33:20,039
screenshot here of on a Windows 10

784
00:33:16,669 --> 00:33:23,700
system you have up to 48 types of kernel

785
00:33:20,039 --> 00:33:26,429
objects so if all of those type index

786
00:33:23,700 --> 00:33:29,130
fields are encrypted some of our basic

787
00:33:26,429 --> 00:33:32,460
plugins like handles or the object tree

788
00:33:29,130 --> 00:33:34,620
output of object types that you just saw

789
00:33:32,460 --> 00:33:36,360
being a numerating numerating the stuff

790
00:33:34,620 --> 00:33:39,809
it they've totally wouldn't work so we

791
00:33:36,360 --> 00:33:42,178
had to readjust how these structures

792
00:33:39,809 --> 00:33:44,340
were being parsed and shout out to

793
00:33:42,179 --> 00:33:46,289
Michael Cohen who did a deep dive and

794
00:33:44,340 --> 00:33:47,159
found okay so we take the this is

795
00:33:46,289 --> 00:33:50,670
ridiculous

796
00:33:47,160 --> 00:33:53,730
address of the object header an xor with

797
00:33:50,670 --> 00:33:58,320
the type index and a value called the

798
00:33:53,730 --> 00:34:00,450
odd header cookie so XOR and if you

799
00:33:58,320 --> 00:34:01,980
reverse this step-by-step you're going

800
00:34:00,450 --> 00:34:03,660
to be able to come up with the actual

801
00:34:01,980 --> 00:34:05,850
type index that will allow you to

802
00:34:03,660 --> 00:34:07,890
properly identify white what type of

803
00:34:05,850 --> 00:34:09,029
kernel object this is sounds complicated

804
00:34:07,890 --> 00:34:11,730
right

805
00:34:09,030 --> 00:34:14,490
exactly I share this with you as we do

806
00:34:11,730 --> 00:34:16,110
in class the 526 class we go deep into

807
00:34:14,489 --> 00:34:19,830
the weeds so we can understand how the

808
00:34:16,110 --> 00:34:20,790
Tool Works and it thereby gaining XI

809
00:34:19,830 --> 00:34:23,460
ation for o

810
00:34:20,790 --> 00:34:31,500
it supports Windows 10 now we're

811
00:34:23,460 --> 00:34:33,780
oppressed now we understand ok page file

812
00:34:31,500 --> 00:34:36,060
features so speaking to memory

813
00:34:33,780 --> 00:34:37,860
compression speaking to memory

814
00:34:36,060 --> 00:34:39,929
compression the page file that which is

815
00:34:37,860 --> 00:34:42,300
written to the page file is going to be

816
00:34:39,929 --> 00:34:45,330
implementing compression think about the

817
00:34:42,300 --> 00:34:46,860
gain the efficiency of writing things

818
00:34:45,330 --> 00:34:48,360
that are already compressed to the page

819
00:34:46,860 --> 00:34:51,000
file this is really going to speed up

820
00:34:48,360 --> 00:34:54,629
reads and writes if I have to read

821
00:34:51,000 --> 00:34:56,340
something back in then that's a smaller

822
00:34:54,629 --> 00:34:59,069
amount of data that I'm reading back in

823
00:34:56,340 --> 00:35:00,810
from the harddrive so realize as we're

824
00:34:59,070 --> 00:35:02,970
looking at page files on a Windows 10

825
00:35:00,810 --> 00:35:05,340
system we very well might run into

826
00:35:02,970 --> 00:35:06,930
compression it's always a downer if I

827
00:35:05,340 --> 00:35:09,810
can't run strings and say look for a

828
00:35:06,930 --> 00:35:12,210
unique mutant string that I've

829
00:35:09,810 --> 00:35:15,600
associated or signature as being

830
00:35:12,210 --> 00:35:16,980
associated with malware so ha let me

831
00:35:15,600 --> 00:35:21,529
address some of the questions because I

832
00:35:16,980 --> 00:35:24,720
just scrolled down and I see them now uh

833
00:35:21,530 --> 00:35:26,490
you guys are just answering yeah you

834
00:35:24,720 --> 00:35:29,850
guys are just answering this is there a

835
00:35:26,490 --> 00:35:31,020
default page size John says John was the

836
00:35:29,850 --> 00:35:33,240
one that brought it with the last

837
00:35:31,020 --> 00:35:34,680
question about asking whether yeah

838
00:35:33,240 --> 00:35:36,419
whether the slide deck was going to be

839
00:35:34,680 --> 00:35:39,210
available there is a default page size

840
00:35:36,420 --> 00:35:43,260
right the pay the typical default page

841
00:35:39,210 --> 00:35:46,290
size is 4096 bytes so or 1,000 hex bytes

842
00:35:43,260 --> 00:35:48,270
there are large page sizes depending on

843
00:35:46,290 --> 00:35:51,710
the system architecture but the default

844
00:35:48,270 --> 00:35:55,400
page size is going to be 1,000 bytes

845
00:35:51,710 --> 00:35:58,050
sweet you were looking at my my hex

846
00:35:55,400 --> 00:35:59,460
showing us showing a screenshot with hex

847
00:35:58,050 --> 00:36:00,900
I didn't I didn't mention it while I

848
00:35:59,460 --> 00:36:03,270
showed it but it always lends the

849
00:36:00,900 --> 00:36:06,960
Gintama see to your presentation yeah I

850
00:36:03,270 --> 00:36:09,540
recommend to that and recommend that all

851
00:36:06,960 --> 00:36:10,920
right a credential guard credential

852
00:36:09,540 --> 00:36:14,009
guard is supposed to be the solution

853
00:36:10,920 --> 00:36:15,840
right to pass the hash and I like I like

854
00:36:14,010 --> 00:36:17,670
the fact that maybe Katz works

855
00:36:15,840 --> 00:36:19,380
Mimi caste is able to go in there and

856
00:36:17,670 --> 00:36:22,410
dig out from the LSS process address

857
00:36:19,380 --> 00:36:25,470
space plaintext credentials associated

858
00:36:22,410 --> 00:36:27,870
with w digest or local system

859
00:36:25,470 --> 00:36:30,029
authentication but credential guard is

860
00:36:27,870 --> 00:36:32,400
supposed to lock this down and I know it

861
00:36:30,030 --> 00:36:34,080
has a lot of dependencies before I talk

862
00:36:32,400 --> 00:36:35,640
about how it might change our lives I

863
00:36:34,080 --> 00:36:39,630
know it has a lot of dependencies like

864
00:36:35,640 --> 00:36:43,560
hey you have to have secure secure boot

865
00:36:39,630 --> 00:36:46,470
enabled and supported firmware the OS

866
00:36:43,560 --> 00:36:48,720
loader has to be signed and trusted TPM

867
00:36:46,470 --> 00:36:51,299
you have to have a TPM trusted platform

868
00:36:48,720 --> 00:36:52,740
module and you have to be running as the

869
00:36:51,300 --> 00:36:55,830
slide stage you have to be running a

870
00:36:52,740 --> 00:36:58,740
Windows 10 either enterprise or edu

871
00:36:55,830 --> 00:36:59,730
education version so I have when when 10

872
00:36:58,740 --> 00:37:01,799
home it's not something I could

873
00:36:59,730 --> 00:37:04,800
implement but you have to have the right

874
00:37:01,800 --> 00:37:07,050
software and the right hardware to take

875
00:37:04,800 --> 00:37:09,600
advantage of the security implementation

876
00:37:07,050 --> 00:37:12,720
but this is supposed to be hey the

877
00:37:09,600 --> 00:37:16,290
solution to me me catch running or any

878
00:37:12,720 --> 00:37:19,230
other me me cats like tool that your

879
00:37:16,290 --> 00:37:21,029
threat actor has created to run inside

880
00:37:19,230 --> 00:37:23,040
your environment so gain point of

881
00:37:21,030 --> 00:37:25,010
presence dump credentials right this is

882
00:37:23,040 --> 00:37:27,150
supposed to stop that second step

883
00:37:25,010 --> 00:37:29,670
thereby curtailing their ability to

884
00:37:27,150 --> 00:37:31,290
laterally move so what is credential

885
00:37:29,670 --> 00:37:34,050
guard essentially you're taking the else

886
00:37:31,290 --> 00:37:35,340
ass or the local security authority and

887
00:37:34,050 --> 00:37:37,920
you're moving it into a virtualized

888
00:37:35,340 --> 00:37:42,120
container I mentioned the process name

889
00:37:37,920 --> 00:37:43,290
already LSA is OD XE and this is all

890
00:37:42,120 --> 00:37:47,549
based on the premise that you can't

891
00:37:43,290 --> 00:37:49,140
trust users and Trust users with admin

892
00:37:47,550 --> 00:37:51,210
privileges you can't trust the kernel

893
00:37:49,140 --> 00:37:54,480
things running and at system level

894
00:37:51,210 --> 00:37:56,040
privileges so it's supposed to block our

895
00:37:54,480 --> 00:37:59,010
attackers from be able to do that which

896
00:37:56,040 --> 00:38:01,790
I just described dumped credentials with

897
00:37:59,010 --> 00:38:06,600
me me cats the screenshot from TechNet

898
00:38:01,790 --> 00:38:08,820
another another solid on my part it this

899
00:38:06,600 --> 00:38:10,620
is a visualization of how this is

900
00:38:08,820 --> 00:38:14,650
occurring I have all of the credentials

901
00:38:10,620 --> 00:38:17,490
stored over here an LSA ISO process

902
00:38:14,650 --> 00:38:21,100
and I'm only going to be feeding out

903
00:38:17,490 --> 00:38:23,979
single-use single-use credentials now

904
00:38:21,100 --> 00:38:28,029
based on requests made by the operating

905
00:38:23,980 --> 00:38:30,190
system the LSA which LSA ISO contains

906
00:38:28,030 --> 00:38:32,050
those credentials that else ask you to

907
00:38:30,190 --> 00:38:35,200
contain but now it's a virtualized

908
00:38:32,050 --> 00:38:38,710
container so not susceptible to tools

909
00:38:35,200 --> 00:38:40,419
like Mimi Kats a best plugin that I can

910
00:38:38,710 --> 00:38:42,270
recommend here if you have earlier

911
00:38:40,420 --> 00:38:45,670
versions of Windows all the way up until

912
00:38:42,270 --> 00:38:47,320
potentially Windows 8 Mimi cats a recall

913
00:38:45,670 --> 00:38:50,170
plug-in also volatility plugin but

914
00:38:47,320 --> 00:38:53,050
recall written by francesco picasso you

915
00:38:50,170 --> 00:38:57,220
are able to walk away with plaintext

916
00:38:53,050 --> 00:38:59,440
credentials your password hashes your

917
00:38:57,220 --> 00:39:03,370
ticket granting ticket your Kerberos

918
00:38:59,440 --> 00:39:05,700
ticket and this works quite well now I'm

919
00:39:03,370 --> 00:39:07,839
finding man I mean even without

920
00:39:05,700 --> 00:39:10,089
implementation of credential guard

921
00:39:07,840 --> 00:39:12,730
you're going to have some plugins fail

922
00:39:10,090 --> 00:39:15,100
and and I'm showing you that right here

923
00:39:12,730 --> 00:39:16,810
this is just my basic Windows 10 home

924
00:39:15,100 --> 00:39:20,200
version that a dumped memory from and

925
00:39:16,810 --> 00:39:22,390
both Mimi cats fail the one built to run

926
00:39:20,200 --> 00:39:24,310
and recall the one that Francesco

927
00:39:22,390 --> 00:39:27,310
Picasso also built to run and volatility

928
00:39:24,310 --> 00:39:30,330
so we already have some deprecation of

929
00:39:27,310 --> 00:39:32,920
our tools and that's a nice segue into

930
00:39:30,330 --> 00:39:35,080
the next part that does a tool review

931
00:39:32,920 --> 00:39:39,760
where are we at with our ability to

932
00:39:35,080 --> 00:39:42,190
parse a memory pool and acquired from a

933
00:39:39,760 --> 00:39:43,630
Windows 10 system so you got acquisition

934
00:39:42,190 --> 00:39:46,270
tools there on the Left I've taken a

935
00:39:43,630 --> 00:39:48,010
look at most of these and analysis tools

936
00:39:46,270 --> 00:39:50,320
on the right I apologize if your

937
00:39:48,010 --> 00:39:52,450
favorite ones aren't up there but these

938
00:39:50,320 --> 00:39:53,650
are the core that I'll speak to during

939
00:39:52,450 --> 00:39:56,439
this presentation the first one would

940
00:39:53,650 --> 00:39:57,640
jump into is recall so your introduction

941
00:39:56,440 --> 00:39:59,500
to recall a lot of people don't know

942
00:39:57,640 --> 00:40:02,290
about it but it is a fork of volatility

943
00:39:59,500 --> 00:40:05,950
recall provides an ability to acquire

944
00:40:02,290 --> 00:40:07,779
memory and the ability to analyze so we

945
00:40:05,950 --> 00:40:09,759
have the entire framework thrown in here

946
00:40:07,780 --> 00:40:13,380
I'm going to show you recall has been

947
00:40:09,760 --> 00:40:18,250
supporting analysis of Windows 10 since

948
00:40:13,380 --> 00:40:19,380
Heights June and of June 2015 and we

949
00:40:18,250 --> 00:40:23,890
know that Windows 10 was released

950
00:40:19,380 --> 00:40:26,560
globally in July so a lot of these I

951
00:40:23,890 --> 00:40:28,629
guess volatility offered early support

952
00:40:26,560 --> 00:40:31,360
as well for the initial version

953
00:40:28,630 --> 00:40:34,240
of Windows 10 and you'll see who's been

954
00:40:31,360 --> 00:40:36,340
able to keep up and I'll show you some

955
00:40:34,240 --> 00:40:39,160
screenshots of that so if you're going

956
00:40:36,340 --> 00:40:40,780
to acquire memory from a Windows 10

957
00:40:39,160 --> 00:40:43,899
system you might consider using a win

958
00:40:40,780 --> 00:40:45,280
pmm win PMM a lot of different versions

959
00:40:43,900 --> 00:40:47,080
and there are different reasons to use

960
00:40:45,280 --> 00:40:48,100
this is the latest version when PMM

961
00:40:47,080 --> 00:40:51,910
2.0.1

962
00:40:48,100 --> 00:40:54,910
um this will acquire the page file as

963
00:40:51,910 --> 00:40:56,799
well as the memory image by default the

964
00:40:54,910 --> 00:40:58,899
latest version of when P mem free tool

965
00:40:56,800 --> 00:41:02,920
used for memory acquisition is going to

966
00:40:58,900 --> 00:41:05,730
output to a ff4 format so I love the way

967
00:41:02,920 --> 00:41:08,700
when P mem presents the data the data

968
00:41:05,730 --> 00:41:12,070
runs that it's going to be reading in

969
00:41:08,700 --> 00:41:14,470
writing to my output file yeah it's very

970
00:41:12,070 --> 00:41:15,880
transparent and what it is buffering and

971
00:41:14,470 --> 00:41:17,740
what it's actually reading from memory

972
00:41:15,880 --> 00:41:21,160
so more on that we we spend a lot of

973
00:41:17,740 --> 00:41:24,430
time on acquisition um and a live

974
00:41:21,160 --> 00:41:27,520
analysis with recall fantastic tool AFF

975
00:41:24,430 --> 00:41:31,210
for just a little bit on a FF or it's

976
00:41:27,520 --> 00:41:33,910
simply compressed it's its own file

977
00:41:31,210 --> 00:41:35,950
format so it makes use of compression

978
00:41:33,910 --> 00:41:39,009
and it has data streams so as I'm

979
00:41:35,950 --> 00:41:42,220
pulling those data runs and reading in

980
00:41:39,010 --> 00:41:43,960
memory writing it to my AF F for up it

981
00:41:42,220 --> 00:41:45,549
essentially is compressed so other

982
00:41:43,960 --> 00:41:47,740
analysis tools aren't going to really

983
00:41:45,550 --> 00:41:49,540
like it you might have to go about

984
00:41:47,740 --> 00:41:52,149
exporting your data runs but just

985
00:41:49,540 --> 00:41:54,130
realize this is possible just run export

986
00:41:52,150 --> 00:41:57,310
and pull out the physical memory data

987
00:41:54,130 --> 00:41:59,650
runs so this could be a ff4 format could

988
00:41:57,310 --> 00:42:01,750
be compatible with upon export

989
00:41:59,650 --> 00:42:04,120
compatible with volatility and another

990
00:42:01,750 --> 00:42:05,950
tool is VOC extractor and the like you

991
00:42:04,120 --> 00:42:07,660
could create your own memory image now I

992
00:42:05,950 --> 00:42:10,569
can't mention when pmm without saying

993
00:42:07,660 --> 00:42:14,109
hey most of us are still using the 1.6

994
00:42:10,570 --> 00:42:16,840
dot because it outputs raw and it has a

995
00:42:14,110 --> 00:42:18,310
smaller footprint so if you want take a

996
00:42:16,840 --> 00:42:20,140
screenshot of this if you want more

997
00:42:18,310 --> 00:42:23,049
information on okay comparing

998
00:42:20,140 --> 00:42:25,480
contrasting your acquisition tools on

999
00:42:23,050 --> 00:42:28,210
any platform it's going to be like this

1000
00:42:25,480 --> 00:42:29,560
right now the 1.6 dot 3 of when pmm is

1001
00:42:28,210 --> 00:42:31,290
going to have a smaller footprint so you

1002
00:42:29,560 --> 00:42:34,750
might want to consider using that one

1003
00:42:31,290 --> 00:42:37,509
also it allows you to output to raw or a

1004
00:42:34,750 --> 00:42:39,510
2.0 that one has obvious advantages with

1005
00:42:37,510 --> 00:42:44,460
additional acquisition or page file and

1006
00:42:39,510 --> 00:42:44,460
drivers but it has a larger footprint

1007
00:42:46,930 --> 00:42:53,660
all right um show me more wah-wah-wah

1008
00:42:51,590 --> 00:42:56,620
you know not every tool is going to be

1009
00:42:53,660 --> 00:43:00,140
able to acquire from a Windows 10 system

1010
00:42:56,620 --> 00:43:01,700
and I'm showing you a screenshot of a

1011
00:43:00,140 --> 00:43:03,410
collector a red line collector be

1012
00:43:01,700 --> 00:43:05,629
familiar with red line it's also a free

1013
00:43:03,410 --> 00:43:09,980
tool closed-source available from

1014
00:43:05,630 --> 00:43:12,860
fireEye's free downloads website and I

1015
00:43:09,980 --> 00:43:14,360
created a collector just with the intent

1016
00:43:12,860 --> 00:43:16,280
of this collector running and dumping

1017
00:43:14,360 --> 00:43:18,530
memory from my target Windows 10 machine

1018
00:43:16,280 --> 00:43:21,260
you can see here I went to run my

1019
00:43:18,530 --> 00:43:23,810
collector run red line audit batch batch

1020
00:43:21,260 --> 00:43:26,420
script here and it identified the

1021
00:43:23,810 --> 00:43:27,710
version and it also told me and this is

1022
00:43:26,420 --> 00:43:30,080
the earliest version this is the initial

1023
00:43:27,710 --> 00:43:32,060
release of Windows 10 and it said hey

1024
00:43:30,080 --> 00:43:34,160
this is not supported so I cannot

1025
00:43:32,060 --> 00:43:38,450
acquire with my Red Line collector right

1026
00:43:34,160 --> 00:43:40,250
now whether it's in the works I am Not

1027
00:43:38,450 --> 00:43:43,009
sure I've heard various things but

1028
00:43:40,250 --> 00:43:46,340
certainly it's not my go-to for Windows

1029
00:43:43,010 --> 00:43:48,020
10 it's awesome to collect audits on

1030
00:43:46,340 --> 00:43:50,780
other platforms other versions of

1031
00:43:48,020 --> 00:43:51,380
Windows at this current time what else

1032
00:43:50,780 --> 00:43:54,200
what else

1033
00:43:51,380 --> 00:43:57,890
show us other tools at work f-ck works

1034
00:43:54,200 --> 00:44:00,049
just fine I was dumping like a Mad Dog

1035
00:43:57,890 --> 00:44:03,020
dumping Windows 10 memory images using

1036
00:44:00,050 --> 00:44:07,610
ftk imager so there's proof in concept

1037
00:44:03,020 --> 00:44:10,280
there now as I move into analysis of my

1038
00:44:07,610 --> 00:44:12,200
acquired Windows 10 memory images I'm

1039
00:44:10,280 --> 00:44:14,930
got to tell you you know not

1040
00:44:12,200 --> 00:44:17,839
everything's going to work beautifully

1041
00:44:14,930 --> 00:44:19,040
recall is probably the most solid as

1042
00:44:17,840 --> 00:44:23,270
you're moving across different versions

1043
00:44:19,040 --> 00:44:27,830
you know November 2015 we had a big push

1044
00:44:23,270 --> 00:44:29,420
a big a site updates upgrade I think was

1045
00:44:27,830 --> 00:44:32,090
significant enough for Microsoft to call

1046
00:44:29,420 --> 00:44:33,860
it an upgrade of Windows 10 and I'll

1047
00:44:32,090 --> 00:44:36,350
show you screenshot of how that affected

1048
00:44:33,860 --> 00:44:38,930
the build but recall it did not break

1049
00:44:36,350 --> 00:44:42,500
some of the plugins might be deprecated

1050
00:44:38,930 --> 00:44:45,799
like user assist is not running in the

1051
00:44:42,500 --> 00:44:47,900
recall framework against the Windows 10

1052
00:44:45,800 --> 00:44:49,580
I couldn't get next scan to work with

1053
00:44:47,900 --> 00:44:51,680
the memory images that I had in front of

1054
00:44:49,580 --> 00:44:53,930
me me me cats I showed you that epic

1055
00:44:51,680 --> 00:44:56,390
fail but some of them kind of threw out

1056
00:44:53,930 --> 00:45:00,049
some unique or interesting behaviors

1057
00:44:56,390 --> 00:45:02,299
pS list I had several memory images

1058
00:45:00,049 --> 00:45:03,859
where P s list gave me a bit of a a

1059
00:45:02,299 --> 00:45:06,019
false positive

1060
00:45:03,859 --> 00:45:08,960
so P s list is your go-to process

1061
00:45:06,019 --> 00:45:11,299
listing plugin i wouldn't expect to see

1062
00:45:08,960 --> 00:45:14,329
false positives in a PS list because i'm

1063
00:45:11,299 --> 00:45:16,490
just walking with recall walking forward

1064
00:45:14,329 --> 00:45:18,500
and back the doubly linked list but

1065
00:45:16,490 --> 00:45:20,629
let's see I'll show you that screenshot

1066
00:45:18,500 --> 00:45:22,549
in just a moment so as I'm looking at

1067
00:45:20,630 --> 00:45:25,970
builds I'm dropping in and looking at my

1068
00:45:22,549 --> 00:45:28,609
initial memory image that I jumped from

1069
00:45:25,970 --> 00:45:29,959
then well the release the initial

1070
00:45:28,609 --> 00:45:32,328
release here you can see it has a build

1071
00:45:29,960 --> 00:45:35,750
of 10240

1072
00:45:32,329 --> 00:45:39,500
it's my 10240 initial release of Windows

1073
00:45:35,750 --> 00:45:43,309
10 so that's my ftk imager mm no problem

1074
00:45:39,500 --> 00:45:45,559
parsing that after I applied it and I

1075
00:45:43,309 --> 00:45:48,130
just recently applied the patch for

1076
00:45:45,559 --> 00:45:51,410
November 2015 you can see the build

1077
00:45:48,130 --> 00:45:55,730
version shifted it's ten fifty eight six

1078
00:45:51,410 --> 00:45:57,828
now still supported by recall so no

1079
00:45:55,730 --> 00:46:00,380
problem running image info didn't need

1080
00:45:57,829 --> 00:46:02,630
to because you know recall goes ahead

1081
00:46:00,380 --> 00:46:05,839
and uses its own online repository to

1082
00:46:02,630 --> 00:46:08,329
identify the profile of the memory image

1083
00:46:05,839 --> 00:46:10,849
that you're parsing and if it's not in

1084
00:46:08,329 --> 00:46:13,279
the group the repository that it hosts

1085
00:46:10,849 --> 00:46:15,140
online it'll go out to the symbols

1086
00:46:13,279 --> 00:46:18,230
server the Microsoft hosted symbol

1087
00:46:15,140 --> 00:46:19,819
server and pull down the overlays pull

1088
00:46:18,230 --> 00:46:22,549
down in the structures required to

1089
00:46:19,819 --> 00:46:25,190
interpret the data set so what recall

1090
00:46:22,549 --> 00:46:27,619
has the ability to move with this

1091
00:46:25,190 --> 00:46:29,089
version changes these version changes in

1092
00:46:27,619 --> 00:46:31,210
structure changes that are occurring

1093
00:46:29,089 --> 00:46:34,099
with Windows 10 updates and upgrades

1094
00:46:31,210 --> 00:46:36,140
pretty cool pretty cool but I mentioned

1095
00:46:34,099 --> 00:46:39,049
the process list has thrown some really

1096
00:46:36,140 --> 00:46:41,150
strange output and I'm showing you a

1097
00:46:39,049 --> 00:46:44,240
screenshot of false positives this could

1098
00:46:41,150 --> 00:46:45,859
be smear no sneer if it takes a long

1099
00:46:44,240 --> 00:46:46,819
time to dump memory or things are

1100
00:46:45,859 --> 00:46:49,880
changing on the fly while you're

1101
00:46:46,819 --> 00:46:53,750
acquiring but this could be smear it

1102
00:46:49,880 --> 00:46:56,809
could be of just not parsing properly as

1103
00:46:53,750 --> 00:46:58,579
its walking the F links from you process

1104
00:46:56,809 --> 00:47:00,500
block that you process block but

1105
00:46:58,579 --> 00:47:01,519
nonetheless something I never

1106
00:47:00,500 --> 00:47:03,140
experienced before

1107
00:47:01,519 --> 00:47:05,419
with earlier versions of Windows I'm

1108
00:47:03,140 --> 00:47:06,680
seeing and I have a few different memory

1109
00:47:05,420 --> 00:47:09,119
images that are showing me false

1110
00:47:06,680 --> 00:47:11,700
positives in my process list

1111
00:47:09,119 --> 00:47:13,740
a similar to what Khan scan would give

1112
00:47:11,700 --> 00:47:16,049
us or socks can and volatility we have

1113
00:47:13,740 --> 00:47:18,538
to be leery of false positives

1114
00:47:16,049 --> 00:47:20,279
particularly we're working with newer

1115
00:47:18,539 --> 00:47:23,220
versions of Windows that are constantly

1116
00:47:20,279 --> 00:47:24,630
changing so mad props here mad props the

1117
00:47:23,220 --> 00:47:26,939
tools that are doing such a great job

1118
00:47:24,630 --> 00:47:29,700
keeping up I want to show you those same

1119
00:47:26,940 --> 00:47:31,859
two builds I have the ftk imager mm

1120
00:47:29,700 --> 00:47:34,140
which is my earlier version of Windows

1121
00:47:31,859 --> 00:47:36,869
10 and then I have my fdk notification

1122
00:47:34,140 --> 00:47:40,618
mem which is my later one after applying

1123
00:47:36,869 --> 00:47:42,869
that of November 2015 patch and if I'm

1124
00:47:40,619 --> 00:47:47,160
using the 2.5 volatility you can see

1125
00:47:42,869 --> 00:47:50,670
that the earlier version initial support

1126
00:47:47,160 --> 00:47:53,009
was built in the 2.5 for Windows 10 now

1127
00:47:50,670 --> 00:47:55,289
the later one passed the November 2015

1128
00:47:53,009 --> 00:47:58,559
patch is not supported in fact I did not

1129
00:47:55,289 --> 00:48:01,890
get a process list back so now you have

1130
00:47:58,559 --> 00:48:04,009
to know ok which build of Windows 10 do

1131
00:48:01,890 --> 00:48:06,538
I have that a dumped memory from and

1132
00:48:04,009 --> 00:48:08,549
it's going to affect which tools I

1133
00:48:06,539 --> 00:48:10,079
choose to bring to bear as I'm doing

1134
00:48:08,549 --> 00:48:13,170
this processing so hopefully this makes

1135
00:48:10,079 --> 00:48:17,910
sense I'll take a pause I have a

1136
00:48:13,170 --> 00:48:20,339
question in the chat window oh this is

1137
00:48:17,910 --> 00:48:21,930
response from Jonna um could I use

1138
00:48:20,339 --> 00:48:24,960
memory forensics to track down whatever

1139
00:48:21,930 --> 00:48:27,618
is leaking into my page file with normal

1140
00:48:24,960 --> 00:48:30,769
tools we are at a standstill so uh

1141
00:48:27,619 --> 00:48:33,960
Jenna's asking back about the page file

1142
00:48:30,769 --> 00:48:36,479
the page file is incorporated an

1143
00:48:33,960 --> 00:48:39,660
analysis and acquisition and wind pmm so

1144
00:48:36,480 --> 00:48:43,559
if I grab that page file I have the

1145
00:48:39,660 --> 00:48:44,999
ability with recall to walk my lookup

1146
00:48:43,559 --> 00:48:46,710
tables we'll just call it the virtual or

1147
00:48:44,999 --> 00:48:49,109
physical address translation table is to

1148
00:48:46,710 --> 00:48:51,299
walk them and include the content that

1149
00:48:49,109 --> 00:48:52,950
has been paged out and and is still

1150
00:48:51,299 --> 00:48:55,279
being made reference to within the

1151
00:48:52,950 --> 00:48:57,960
context of your process address space so

1152
00:48:55,279 --> 00:49:00,059
yes I mean it you phrased it like

1153
00:48:57,960 --> 00:49:01,980
leaking into your page file and that's

1154
00:49:00,059 --> 00:49:03,809
that's probably what you meant ok who's

1155
00:49:01,980 --> 00:49:06,720
responsible for this data that's over

1156
00:49:03,809 --> 00:49:10,499
here on my flatter drive or my bi hard

1157
00:49:06,720 --> 00:49:12,450
drive and yes we have tools that do a

1158
00:49:10,499 --> 00:49:14,249
pretty good job of incorporating that

1159
00:49:12,450 --> 00:49:15,089
right now hopefully that answers your

1160
00:49:14,249 --> 00:49:19,060
question good one

1161
00:49:15,089 --> 00:49:20,920
thank you now as

1162
00:49:19,060 --> 00:49:22,620
looking at redline for you know it's one

1163
00:49:20,920 --> 00:49:25,420
thing to actually be able to acquire

1164
00:49:22,620 --> 00:49:27,190
Windows 10 from a machine but I didn't

1165
00:49:25,420 --> 00:49:29,920
want to say hey can't acquire and

1166
00:49:27,190 --> 00:49:31,780
analyze until I took a Windows 10 memory

1167
00:49:29,920 --> 00:49:35,260
image and try to run it through the

1168
00:49:31,780 --> 00:49:37,740
redline parsing process so what you see

1169
00:49:35,260 --> 00:49:40,960
here is you've probably seen this before

1170
00:49:37,740 --> 00:49:44,529
not said this happens often but I threw

1171
00:49:40,960 --> 00:49:46,600
the fdk notification memory image the

1172
00:49:44,530 --> 00:49:47,710
later build but I don't think it would

1173
00:49:46,600 --> 00:49:49,750
have mattered whichever build of Windows

1174
00:49:47,710 --> 00:49:52,540
10 and I rolled it through red light

1175
00:49:49,750 --> 00:49:55,060
processing I got to this splash screen

1176
00:49:52,540 --> 00:49:57,190
said the report was ready for viewing

1177
00:49:55,060 --> 00:50:00,450
but you can see here in the red box it

1178
00:49:57,190 --> 00:50:03,250
has no processes to look at so it fails

1179
00:50:00,450 --> 00:50:06,279
does not see at support analysis or

1180
00:50:03,250 --> 00:50:07,600
acquisition of Windows 10 but just tell

1181
00:50:06,280 --> 00:50:08,490
me some good news elicit tell me some

1182
00:50:07,600 --> 00:50:10,900
good news

1183
00:50:08,490 --> 00:50:13,509
we'll see um if you've ever played

1184
00:50:10,900 --> 00:50:16,180
around with black lights one thing about

1185
00:50:13,510 --> 00:50:17,920
black light above and I've been using it

1186
00:50:16,180 --> 00:50:19,419
more and more frequently now one thing

1187
00:50:17,920 --> 00:50:23,200
about black light that I love is it runs

1188
00:50:19,420 --> 00:50:28,330
on my Mac and does analysis of Windows

1189
00:50:23,200 --> 00:50:30,160
Linux and your Mac OSX volume and memory

1190
00:50:28,330 --> 00:50:32,049
now so I'm showing you a screenshot of

1191
00:50:30,160 --> 00:50:35,740
some of the built-in functionality and

1192
00:50:32,050 --> 00:50:37,990
support for Windows 10 available in

1193
00:50:35,740 --> 00:50:39,399
black light so I've highlighted my

1194
00:50:37,990 --> 00:50:41,649
memory I just brought in a memory image

1195
00:50:39,400 --> 00:50:43,360
actually I cheated just set here here's

1196
00:50:41,650 --> 00:50:44,560
a memory image and I'm a numerating

1197
00:50:43,360 --> 00:50:47,290
processes you can see here I got

1198
00:50:44,560 --> 00:50:49,240
command-line arguments where the process

1199
00:50:47,290 --> 00:50:51,520
the path where the process launched from

1200
00:50:49,240 --> 00:50:54,700
so really good stuff and this is Windows

1201
00:50:51,520 --> 00:50:56,800
10 so they've made the leap to offering

1202
00:50:54,700 --> 00:50:59,049
support you see you understand what

1203
00:50:56,800 --> 00:51:01,120
obstacles they had to contend with

1204
00:50:59,050 --> 00:51:03,850
so already built into black light at

1205
00:51:01,120 --> 00:51:05,500
this time black light is really good

1206
00:51:03,850 --> 00:51:07,750
white paper that I have a reference to

1207
00:51:05,500 --> 00:51:11,500
in at the back end of my slide deck

1208
00:51:07,750 --> 00:51:14,140
coming up here is black light uses this

1209
00:51:11,500 --> 00:51:15,730
fast pool tag scanning so it's going to

1210
00:51:14,140 --> 00:51:18,609
be much faster than some of our other

1211
00:51:15,730 --> 00:51:20,320
scanning scanning plugins so check that

1212
00:51:18,610 --> 00:51:23,770
out there's a white paper written by Joe

1213
00:51:20,320 --> 00:51:26,380
Silva that it describes this but you

1214
00:51:23,770 --> 00:51:28,570
cannot talk about analyzing memory

1215
00:51:26,380 --> 00:51:30,760
images or analyzing page file without

1216
00:51:28,570 --> 00:51:32,859
bringing an internet evidence finder I

1217
00:51:30,760 --> 00:51:34,259
know this has helped a lot of you out

1218
00:51:32,859 --> 00:51:36,788
with some of your investigations

1219
00:51:34,259 --> 00:51:39,670
Internet Evans finder is go to you can

1220
00:51:36,789 --> 00:51:42,009
see it has support for some notable core

1221
00:51:39,670 --> 00:51:43,059
Windows 10 features like the

1222
00:51:42,009 --> 00:51:46,720
Notification Center

1223
00:51:43,059 --> 00:51:49,630
there's Cortana so I brought in a memory

1224
00:51:46,720 --> 00:51:51,220
image and went ahead analyzed with

1225
00:51:49,630 --> 00:51:54,519
internet evidence finder and I was able

1226
00:51:51,220 --> 00:51:56,140
to pull out these Cortana calls as you

1227
00:51:54,519 --> 00:51:59,700
look things up in Cortana you know that

1228
00:51:56,140 --> 00:52:02,920
obnoxious Start menu addendum Edition

1229
00:51:59,700 --> 00:52:06,220
Windows 10 the taskbar you are actually

1230
00:52:02,920 --> 00:52:09,369
querying a Bing with each thing that you

1231
00:52:06,220 --> 00:52:11,379
type in so set an alarm was one of the

1232
00:52:09,369 --> 00:52:13,900
things I typed in to Cortana and it went

1233
00:52:11,380 --> 00:52:16,059
out and did a Bing look up wha-wha-wha

1234
00:52:13,900 --> 00:52:18,700
so I'm able to capture this and internet

1235
00:52:16,059 --> 00:52:23,710
evidence finder pulls this out looks

1236
00:52:18,700 --> 00:52:25,419
just like IE 10 11 um yeah so it's good

1237
00:52:23,710 --> 00:52:28,869
to know hey it'll process it will pull

1238
00:52:25,420 --> 00:52:30,489
out some notable artifacts I was just

1239
00:52:28,869 --> 00:52:32,680
trying to create an alarm 3:00 p.m.

1240
00:52:30,489 --> 00:52:34,299
that's always good so I will go ahead

1241
00:52:32,680 --> 00:52:37,180
and take more questions I'm going to

1242
00:52:34,299 --> 00:52:39,609
look at my my question window here

1243
00:52:37,180 --> 00:52:42,480
before I give you before I give you the

1244
00:52:39,609 --> 00:52:44,799
URL she's like ah killing us here um

1245
00:52:42,480 --> 00:52:48,579
where you can download the memory image

1246
00:52:44,799 --> 00:52:50,769
um last question though jay has a really

1247
00:52:48,579 --> 00:52:53,109
good one could malware target the high

1248
00:52:50,769 --> 00:52:57,069
Berfield that says to persist itself

1249
00:52:53,109 --> 00:53:00,130
between reboots oh yes I always answer I

1250
00:52:57,069 --> 00:53:04,119
can't malware to anything even to

1251
00:53:00,130 --> 00:53:07,900
increase its create its own virtual file

1252
00:53:04,119 --> 00:53:09,579
system um so yes now where I can hide in

1253
00:53:07,900 --> 00:53:11,170
the hybrid field that says whether it's

1254
00:53:09,579 --> 00:53:13,599
in the actual portion that's being

1255
00:53:11,170 --> 00:53:16,599
written to when my system shuts down or

1256
00:53:13,599 --> 00:53:17,920
elsewhere because going in initially

1257
00:53:16,599 --> 00:53:19,480
you're going to have a larger footprint

1258
00:53:17,920 --> 00:53:21,460
than needed with the Windows 10 machine

1259
00:53:19,480 --> 00:53:23,950
for that hibernation file so it's only

1260
00:53:21,460 --> 00:53:27,519
going to use a portion of it and we can

1261
00:53:23,950 --> 00:53:30,788
certainly um shrink it down but this

1262
00:53:27,519 --> 00:53:32,890
could be made use of by malware so that

1263
00:53:30,789 --> 00:53:36,720
is a thank you very much for frightening

1264
00:53:32,890 --> 00:53:42,819
us right right uh more of a comments

1265
00:53:36,720 --> 00:53:45,859
from Vishal I'll be curious to see uh on

1266
00:53:42,819 --> 00:53:48,170
what the anniversary build of Windows 10

1267
00:53:45,860 --> 00:53:49,790
it'll be curious on what the anniversary

1268
00:53:48,170 --> 00:53:52,070
build of Windows 10 that is being

1269
00:53:49,790 --> 00:53:54,620
released this summer yes and how well

1270
00:53:52,070 --> 00:53:56,240
we'll be able to keep up with that yeah

1271
00:53:54,620 --> 00:53:57,980
good heads-up that things are only going

1272
00:53:56,240 --> 00:53:59,810
to get worse for us yeah that if we have

1273
00:53:57,980 --> 00:54:03,770
tools that are supporting the current

1274
00:53:59,810 --> 00:54:07,370
November 2015 push that's you know

1275
00:54:03,770 --> 00:54:11,320
another push it is potentially in the in

1276
00:54:07,370 --> 00:54:13,640
a weight hanging in the balance for us

1277
00:54:11,320 --> 00:54:16,730
certainly this is going to be changing

1278
00:54:13,640 --> 00:54:20,810
things like edge and removing Wi-Fi

1279
00:54:16,730 --> 00:54:22,490
sharing so I'll stay tuned and hopefully

1280
00:54:20,810 --> 00:54:25,910
be first to ground with dumping some of

1281
00:54:22,490 --> 00:54:28,700
some of these things let me point back

1282
00:54:25,910 --> 00:54:30,649
to my reference slide if you want to

1283
00:54:28,700 --> 00:54:33,230
know more about Windows 10 there is a

1284
00:54:30,650 --> 00:54:35,570
two-hour webcast that I'm pointing to on

1285
00:54:33,230 --> 00:54:37,300
the references slide presented by Jason

1286
00:54:35,570 --> 00:54:40,970
thousand it's available in the archives

1287
00:54:37,300 --> 00:54:44,210
sansa org webcast archives and he goes

1288
00:54:40,970 --> 00:54:46,879
into Windows hello he goes into courts

1289
00:54:44,210 --> 00:54:49,400
Hanna the notifications crazy crazy

1290
00:54:46,880 --> 00:54:54,680
stuff like powershell fado check that

1291
00:54:49,400 --> 00:54:56,450
out this is the the webcast that i was

1292
00:54:54,680 --> 00:54:58,279
pointing to about compression in Windows

1293
00:54:56,450 --> 00:55:01,700
10 you got to watch that that's really

1294
00:54:58,280 --> 00:55:03,440
cool Michael Cohen's write-up on Windows

1295
00:55:01,700 --> 00:55:05,899
10 support and how they were first to

1296
00:55:03,440 --> 00:55:09,890
ground and adding it to the framework

1297
00:55:05,900 --> 00:55:13,130
and then the fast pool tag scanning a

1298
00:55:09,890 --> 00:55:16,700
white paper that was just published and

1299
00:55:13,130 --> 00:55:19,400
presented at DF RWS over there in Europe

1300
00:55:16,700 --> 00:55:21,919
recently so here is what you've probably

1301
00:55:19,400 --> 00:55:25,640
been waiting for where you're going to

1302
00:55:21,920 --> 00:55:28,370
go to download this file again a one gig

1303
00:55:25,640 --> 00:55:30,890
memory image is available to you bitly

1304
00:55:28,370 --> 00:55:33,319
link you can trust it fine 5:26

1305
00:55:30,890 --> 00:55:36,650
underscore challenge and go ahead

1306
00:55:33,320 --> 00:55:38,690
there's also a PDF there that has the

1307
00:55:36,650 --> 00:55:41,540
questions that I'm going to ask you to

1308
00:55:38,690 --> 00:55:45,350
complete if you are first to submit to

1309
00:55:41,540 --> 00:55:46,820
the 5:26 callenge at gmail.com with the

1310
00:55:45,350 --> 00:55:48,259
right answers and I'll tell you that

1311
00:55:46,820 --> 00:55:50,480
I've received it and then I'll tell you

1312
00:55:48,260 --> 00:55:53,170
that again after I've corrected your

1313
00:55:50,480 --> 00:55:55,610
paper that you are the winner you will

1314
00:55:53,170 --> 00:55:57,170
go ahead this is easy right you've

1315
00:55:55,610 --> 00:55:59,440
already done the screen shot waiting

1316
00:55:57,170 --> 00:56:02,410
meaning she

1317
00:55:59,440 --> 00:56:07,859
will receive the honey badger with his

1318
00:56:02,410 --> 00:56:10,828
awesome D F IR shirt and your $50 $50 a

1319
00:56:07,859 --> 00:56:15,549
Amazon gift card so you can order

1320
00:56:10,829 --> 00:56:18,250
pre-order the Windows seven a rather

1321
00:56:15,549 --> 00:56:20,500
seventh edition of Windows internals so

1322
00:56:18,250 --> 00:56:22,059
do I have any other questions you guys

1323
00:56:20,500 --> 00:56:28,210
might want to ask I'm going to go ahead

1324
00:56:22,059 --> 00:56:31,150
and leave that one up oh there you go a

1325
00:56:28,210 --> 00:56:33,130
question from Dow Windows 10 enterprise

1326
00:56:31,150 --> 00:56:36,910
and education versions yes they're the

1327
00:56:33,130 --> 00:56:38,079
only ones that are going to well they're

1328
00:56:36,910 --> 00:56:42,819
going to allow us to implement

1329
00:56:38,079 --> 00:56:45,520
credential the credential guard um right

1330
00:56:42,819 --> 00:56:48,369
now Mimi Katz is not is not working for

1331
00:56:45,520 --> 00:56:50,650
us in our memory parsing tools I have

1332
00:56:48,369 --> 00:56:53,530
two talked about Benjamin Dell PE to see

1333
00:56:50,650 --> 00:56:56,109
if he has still come away with some

1334
00:56:53,530 --> 00:56:57,700
success of going in and just running

1335
00:56:56,109 --> 00:56:59,740
Mimi cast against two standard like home

1336
00:56:57,700 --> 00:57:02,740
edition of win 10 that doesn't have

1337
00:56:59,740 --> 00:57:04,868
credential guard built-in so I know that

1338
00:57:02,740 --> 00:57:06,939
W Digest dropped off the ability to get

1339
00:57:04,869 --> 00:57:09,069
plain text credentials dropped off as of

1340
00:57:06,940 --> 00:57:11,049
Windows 8.1 maybe cats could no longer

1341
00:57:09,069 --> 00:57:14,049
go in there and get that but I will say

1342
00:57:11,049 --> 00:57:16,660
if you're interested in subversion look

1343
00:57:14,049 --> 00:57:20,259
at blackhat this year the initial wave

1344
00:57:16,660 --> 00:57:23,230
of accepted talks is up on their website

1345
00:57:20,260 --> 00:57:26,640
and a lot of them focus on Windows 10

1346
00:57:23,230 --> 00:57:29,619
and exploiting credential guard

1347
00:57:26,640 --> 00:57:31,150
exploiting a lot of the the security

1348
00:57:29,619 --> 00:57:34,150
mechanisms that have been implemented in

1349
00:57:31,150 --> 00:57:35,020
this newest version of Windows it's kind

1350
00:57:34,150 --> 00:57:37,450
of cool I think it's going to be a

1351
00:57:35,020 --> 00:57:38,549
fantastic black hat this year so right

1352
00:57:37,450 --> 00:57:41,828
on right on

1353
00:57:38,549 --> 00:57:44,559
so any more questions I don't see any

1354
00:57:41,829 --> 00:57:48,970
popping up into the chat window now but

1355
00:57:44,559 --> 00:57:51,010
I have enjoyed talking with you guys and

1356
00:57:48,970 --> 00:57:53,379
sharing what we've been doing intense

1357
00:57:51,010 --> 00:57:55,210
research on I will tell you that the

1358
00:57:53,380 --> 00:57:58,059
challenge that I've put out there is is

1359
00:57:55,210 --> 00:58:00,849
just a small sample set of what you're

1360
00:57:58,059 --> 00:58:03,789
expected to do when you have come to a

1361
00:58:00,849 --> 00:58:06,670
526 class so we get into the weeds ask

1362
00:58:03,789 --> 00:58:08,619
you crazy things like to pull out

1363
00:58:06,670 --> 00:58:10,920
cookies and parse cookies from your

1364
00:58:08,619 --> 00:58:13,360
memory image to recover prefetch files

1365
00:58:10,920 --> 00:58:16,990
use dump files to recover files

1366
00:58:13,360 --> 00:58:19,630
then parse them a crazy stuff physical

1367
00:58:16,990 --> 00:58:21,939
to virtual address translation which is

1368
00:58:19,630 --> 00:58:24,220
quite hard so take a look at what I've

1369
00:58:21,940 --> 00:58:26,020
put up there as the PDF the sample set

1370
00:58:24,220 --> 00:58:28,660
of questions I also want to take a

1371
00:58:26,020 --> 00:58:32,380
moment as I have two minutes left we are

1372
00:58:28,660 --> 00:58:34,149
going to be a ten fuse and fuse is the

1373
00:58:32,380 --> 00:58:35,800
industry conference put on by guidance

1374
00:58:34,150 --> 00:58:38,200
software we're going to be running a

1375
00:58:35,800 --> 00:58:41,140
network so if you're an attendee see if

1376
00:58:38,200 --> 00:58:43,990
you can jump in and take a seat at our

1377
00:58:41,140 --> 00:58:45,549
TFI our networks it is so much fun and I

1378
00:58:43,990 --> 00:58:48,279
think we're even running it in two

1379
00:58:45,550 --> 00:58:49,750
different sessions so we'll see we'll

1380
00:58:48,280 --> 00:58:51,550
see it's on the calendar right now for

1381
00:58:49,750 --> 00:58:53,620
the 25th at 7 p.m. hopefully you guys

1382
00:58:51,550 --> 00:58:55,570
are going to show up there's a lot of

1383
00:58:53,620 --> 00:58:57,400
good presentations there you've already

1384
00:58:55,570 --> 00:58:59,500
seen part of my naked and afraid but you

1385
00:58:57,400 --> 00:59:02,770
could totally come out and you know just

1386
00:58:59,500 --> 00:59:05,170
be a fan just be a fan um other runs of

1387
00:59:02,770 --> 00:59:07,690
the 526 course we have one that's at the

1388
00:59:05,170 --> 00:59:11,170
dfi our summit which is like your

1389
00:59:07,690 --> 00:59:13,450
migration the pilgrimage to Mecca that

1390
00:59:11,170 --> 00:59:15,670
all forensic examiners take every year

1391
00:59:13,450 --> 00:59:17,410
they come out to Austin for the D F IR

1392
00:59:15,670 --> 00:59:19,360
summit sit through the presentations and

1393
00:59:17,410 --> 00:59:21,399
choose the class to take we're also

1394
00:59:19,360 --> 00:59:23,590
offering this class at network security

1395
00:59:21,400 --> 00:59:28,120
if you didn't understand anything I said

1396
00:59:23,590 --> 00:59:30,130
please attend the 408 class yes this is

1397
00:59:28,120 --> 00:59:33,069
your gateway drug into the forensics

1398
00:59:30,130 --> 00:59:34,180
track and it is bleeding edge and that

1399
00:59:33,070 --> 00:59:37,510
you're going to be hearing about windows

1400
00:59:34,180 --> 00:59:39,910
10 in the 408 class 8.1 artifacts you

1401
00:59:37,510 --> 00:59:41,940
need to be aware of this stuff so choose

1402
00:59:39,910 --> 00:59:44,379
one of these runs it's up and coming I

1403
00:59:41,940 --> 00:59:46,810
don't see any more questions so I throw

1404
00:59:44,380 --> 00:59:50,800
my gosh wait a second there are more

1405
00:59:46,810 --> 00:59:52,320
questions oh we have a discount we have

1406
00:59:50,800 --> 00:59:55,210
a discount if you're signing up for

1407
00:59:52,320 --> 00:59:56,980
infuse just as this is hot off the

1408
00:59:55,210 --> 00:59:59,470
presses if you're still there listen up

1409
00:59:56,980 --> 01:00:02,590
there's a discount sign up for infused

1410
00:59:59,470 --> 01:00:05,319
you want to attend type in Sand 16 and

1411
01:00:02,590 --> 01:00:06,580
you can still get $300 off normally

1412
01:00:05,320 --> 01:00:08,770
that's something that they do when it's

1413
01:00:06,580 --> 01:00:10,630
like months out and you don't want to

1414
01:00:08,770 --> 01:00:14,020
think about what you're doing in May but

1415
01:00:10,630 --> 01:00:15,730
San 16 enter that into the discount code

1416
01:00:14,020 --> 01:00:17,590
and I thought we have this posted online

1417
01:00:15,730 --> 01:00:19,480
as well if you need to google it and

1418
01:00:17,590 --> 01:00:22,390
that's for it so you too can attend and

1419
01:00:19,480 --> 01:00:24,850
fuse sweets you're going to be there at

1420
01:00:22,390 --> 01:00:26,410
networks I'm so glad to hear there's a

1421
01:00:24,850 --> 01:00:26,880
lot of people that attended today that

1422
01:00:26,410 --> 01:00:29,308
are going to be

1423
01:00:26,880 --> 01:00:31,410
and fuse so it should be a great time

1424
01:00:29,309 --> 01:00:34,079
are there any changes to power show

1425
01:00:31,410 --> 01:00:35,848
artifacts in Windows 10 I don't know

1426
01:00:34,079 --> 01:00:38,400
about the artifacts you got to listen to

1427
01:00:35,849 --> 01:00:40,589
Jason thousand because he speaks to a

1428
01:00:38,400 --> 01:00:42,990
lot of things that have been added with

1429
01:00:40,589 --> 01:00:44,819
a 5.0 some new commandlets and

1430
01:00:42,990 --> 01:00:47,519
capabilities and I'm not sure what they

1431
01:00:44,819 --> 01:00:49,769
leave behind on the Box still a new area

1432
01:00:47,519 --> 01:00:55,979
of research so excellent question I

1433
01:00:49,769 --> 01:00:58,049
appreciate it Rolf oh my goodness all

1434
01:00:55,980 --> 01:00:59,700
right you guys have a great day good

1435
01:00:58,049 --> 01:01:02,910
afternoon and thank you very much for

1436
01:00:59,700 --> 01:01:06,950
coming out really enjoyed it all right

1437
01:01:02,910 --> 01:01:06,950
Thank You Ben have a good afternoon

1438
01:01:17,600 --> 01:01:19,660
Oh

