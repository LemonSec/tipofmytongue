1
00:00:14,559 --> 00:00:17,990
sound good all right the worst thing

2
00:00:16,820 --> 00:00:19,700
about last night was actually that they

3
00:00:17,990 --> 00:00:20,869
made you throw out your drinks before

4
00:00:19,700 --> 00:00:21,860
you could go into the locker room for an

5
00:00:20,869 --> 00:00:23,840
hour it was horrible

6
00:00:21,860 --> 00:00:25,160
all right hi everybody I'm well I'm

7
00:00:23,840 --> 00:00:26,660
gonna talk about indicators of

8
00:00:25,160 --> 00:00:31,130
compromise because that's our favorite

9
00:00:26,660 --> 00:00:31,689
thing but first our favorite slide all

10
00:00:31,130 --> 00:00:34,339
right

11
00:00:31,689 --> 00:00:35,570
there we go keep the legal team happy I

12
00:00:34,340 --> 00:00:37,310
have to tell you that my employer

13
00:00:35,570 --> 00:00:38,840
Salesforce is a publicly traded company

14
00:00:37,310 --> 00:00:40,130
and you shouldn't make any buying or

15
00:00:38,840 --> 00:00:42,500
selling decisions based on what I say

16
00:00:40,130 --> 00:00:48,380
here today but now that that's out of

17
00:00:42,500 --> 00:00:51,350
the way yeah thank you thank you so this

18
00:00:48,380 --> 00:00:52,400
was me this was my team and what was

19
00:00:51,350 --> 00:00:54,140
happening to us is we were just

20
00:00:52,400 --> 00:00:56,960
collecting these indicators we had a

21
00:00:54,140 --> 00:00:57,980
huge database amazing indicators and we

22
00:00:56,960 --> 00:00:59,240
were doing nothing with them

23
00:00:57,980 --> 00:01:04,429
how many of you have felt like this

24
00:00:59,240 --> 00:01:06,020
chipmunk I'm sir yeah so you're

25
00:01:04,430 --> 00:01:07,009
collecting the indicators you think

26
00:01:06,020 --> 00:01:08,899
they're great indicators but you don't

27
00:01:07,009 --> 00:01:11,210
do anything with so what we did was we

28
00:01:08,900 --> 00:01:16,249
wrote over work and we call it overboard

29
00:01:11,210 --> 00:01:17,869
because it is all-encompassing and

30
00:01:16,249 --> 00:01:19,039
all-encompassing so it's going to cover

31
00:01:17,869 --> 00:01:20,509
all of our environments and is going to

32
00:01:19,039 --> 00:01:22,609
do automated indicator searching what I

33
00:01:20,509 --> 00:01:23,990
mean by automated indicator searching

34
00:01:22,609 --> 00:01:25,280
it's not it's not in response to an

35
00:01:23,990 --> 00:01:26,030
incident so when you find an incident

36
00:01:25,280 --> 00:01:27,770
you're not actually going out and

37
00:01:26,030 --> 00:01:30,020
looking for the indicators it's in the

38
00:01:27,770 --> 00:01:32,240
background 24/7 always looking for

39
00:01:30,020 --> 00:01:34,069
indicators and it does also this nifty

40
00:01:32,240 --> 00:01:35,298
thing historical look back so when we

41
00:01:34,069 --> 00:01:37,639
get a new report coming in from a

42
00:01:35,299 --> 00:01:39,319
trusted third party that says hey these

43
00:01:37,639 --> 00:01:41,539
indicators are bad this is apt once is

44
00:01:39,319 --> 00:01:42,979
apt to we need to go do the searches all

45
00:01:41,539 --> 00:01:44,420
of this is automated with overload it's

46
00:01:42,979 --> 00:01:45,350
going to do all we do is we put them

47
00:01:44,420 --> 00:01:49,999
into the database and we'll do the

48
00:01:45,350 --> 00:01:52,100
historical look back multiple

49
00:01:49,999 --> 00:01:53,990
environments Salesforce is a really big

50
00:01:52,100 --> 00:01:56,059
company we buy a lot of companies and

51
00:01:53,990 --> 00:01:57,920
what happens there is yet a lot of

52
00:01:56,060 --> 00:01:58,939
separate environments and so Overlord is

53
00:01:57,920 --> 00:02:01,579
going to work in all those separate

54
00:01:58,939 --> 00:02:03,589
environments works nicely and of course

55
00:02:01,579 --> 00:02:05,298
last but not least it actually works so

56
00:02:03,590 --> 00:02:07,099
we've actually caught our red team using

57
00:02:05,299 --> 00:02:09,050
over all it's kind of amazing that it

58
00:02:07,099 --> 00:02:10,220
actually caught the red team but they

59
00:02:09,050 --> 00:02:11,959
made a couple mistakes and we caught him

60
00:02:10,220 --> 00:02:15,620
using Overlord we wouldn't have seen him

61
00:02:11,959 --> 00:02:18,860
otherwise so Who am I well obviously I'm

62
00:02:15,620 --> 00:02:20,840
not a basketball player right too short

63
00:02:18,860 --> 00:02:23,750
I'm a security researcher hopefully a

64
00:02:20,840 --> 00:02:24,590
couple South Park fans out here my focus

65
00:02:23,750 --> 00:02:26,510
in automate

66
00:02:24,590 --> 00:02:28,430
so trying to automate myself out of a

67
00:02:26,510 --> 00:02:29,929
job I do Incident Response when I need

68
00:02:28,430 --> 00:02:32,450
to so whenever the see certain needs

69
00:02:29,930 --> 00:02:34,130
escalate something to me I'll help out

70
00:02:32,450 --> 00:02:35,510
and of course all the hunting and the

71
00:02:34,130 --> 00:02:38,959
thready threats accessor all the fun

72
00:02:35,510 --> 00:02:44,000
stuff right so let's start with a brief

73
00:02:38,959 --> 00:02:46,099
roadmap what I'm going to cover I'm

74
00:02:44,000 --> 00:02:47,840
gonna go over the problem and then talk

75
00:02:46,099 --> 00:02:49,760
about the goals the way we saw the goals

76
00:02:47,840 --> 00:02:51,590
so as Ishmael was talking about this is

77
00:02:49,760 --> 00:02:52,819
a very specific solution to our problem

78
00:02:51,590 --> 00:02:54,739
so our goals may be different than what

79
00:02:52,819 --> 00:02:56,359
everybody else was but these were our

80
00:02:54,739 --> 00:03:00,170
goals I'm gonna do a deep dive into

81
00:02:56,360 --> 00:03:01,880
overlord talk about how it was built and

82
00:03:00,170 --> 00:03:03,140
all the methodology that went into the

83
00:03:01,880 --> 00:03:05,750
different components of it and then

84
00:03:03,140 --> 00:03:07,910
we're gonna do a demo and because of how

85
00:03:05,750 --> 00:03:12,019
awesome Sands is it's all recorded so it

86
00:03:07,910 --> 00:03:15,319
will work theoretically cool so a

87
00:03:12,019 --> 00:03:19,130
problem statement we're like cats that

88
00:03:15,319 --> 00:03:21,708
get stuck right it's the indicator

89
00:03:19,130 --> 00:03:22,940
firehouse number one list number one on

90
00:03:21,709 --> 00:03:24,349
the list of problems is always the

91
00:03:22,940 --> 00:03:25,849
indicator firehouse everybody's got

92
00:03:24,349 --> 00:03:28,340
indicators to give us everyone claims

93
00:03:25,849 --> 00:03:29,780
they're good and it's just it's a it's a

94
00:03:28,340 --> 00:03:30,680
firearms there's nothing that you you

95
00:03:29,780 --> 00:03:32,780
can't describe by anything

96
00:03:30,680 --> 00:03:34,160
it's a fire hose of some people might

97
00:03:32,780 --> 00:03:36,620
call it fecal matter but it's a fire

98
00:03:34,160 --> 00:03:38,030
hose nonetheless and then once you get

99
00:03:36,620 --> 00:03:39,440
that fire hose you have to deal with the

100
00:03:38,030 --> 00:03:41,269
complexities of volume you have to deal

101
00:03:39,440 --> 00:03:42,680
with how to store it how you can't take

102
00:03:41,269 --> 00:03:43,790
all those indicators you get you can't

103
00:03:42,680 --> 00:03:44,840
throw them at slot you can't throw them

104
00:03:43,790 --> 00:03:46,400
at Soumya logic it's gonna crash the

105
00:03:44,840 --> 00:03:48,200
whole system right then you gotta have

106
00:03:46,400 --> 00:03:49,310
backups of all this you have to have a

107
00:03:48,200 --> 00:03:51,530
case management system that can handle

108
00:03:49,310 --> 00:03:52,790
all these alerts us it's a mess and what

109
00:03:51,530 --> 00:03:53,720
happens is you end up living like that

110
00:03:52,790 --> 00:03:55,370
guy I don't know if you guys can see

111
00:03:53,720 --> 00:03:57,410
there's a poor little guy right there

112
00:03:55,370 --> 00:04:02,600
he's surfing his wave of indicators and

113
00:03:57,410 --> 00:04:04,310
he's gonna have a bad time up next on

114
00:04:02,600 --> 00:04:06,920
our list of problems is consistency

115
00:04:04,310 --> 00:04:10,209
across sources so the fun part about

116
00:04:06,920 --> 00:04:15,440
this is how many of you blocked google

117
00:04:10,209 --> 00:04:16,728
right yeah there we go the indicators

118
00:04:15,440 --> 00:04:18,500
are coming in you know it's a good

119
00:04:16,728 --> 00:04:19,969
source you're excited about them you

120
00:04:18,500 --> 00:04:21,289
really want to do something then all the

121
00:04:19,970 --> 00:04:24,680
sudden you block Google I'm like come on

122
00:04:21,289 --> 00:04:27,469
how did that happen that has happened to

123
00:04:24,680 --> 00:04:29,000
us and then in addition that you deal

124
00:04:27,470 --> 00:04:31,070
with other stuff so you have all these

125
00:04:29,000 --> 00:04:33,320
atomic indicators right you got IPS you

126
00:04:31,070 --> 00:04:34,820
got hashes you got certs and then you

127
00:04:33,320 --> 00:04:36,680
got behavioral indicators coming in as

128
00:04:34,820 --> 00:04:37,969
well you know a little bit of you know

129
00:04:36,680 --> 00:04:39,409
say they should be hitting this

130
00:04:37,969 --> 00:04:42,679
he would this search for it to be bad

131
00:04:39,409 --> 00:04:46,579
otherwise it's good she's a complete

132
00:04:42,679 --> 00:04:47,899
mess and then competing priorities so

133
00:04:46,579 --> 00:04:49,399
one of the problems with being on the

134
00:04:47,899 --> 00:04:51,169
threat Intel team is that whenever

135
00:04:49,399 --> 00:04:52,849
there's an incident it gets escalated to

136
00:04:51,169 --> 00:04:54,169
you and you have to help out when

137
00:04:52,849 --> 00:04:55,819
there's an actual fire and you can't

138
00:04:54,169 --> 00:04:57,258
just sit there going through all the

139
00:04:55,819 --> 00:04:58,579
feeds and analyze me all the pleas and

140
00:04:57,259 --> 00:04:59,749
trying to figure out what's good what's

141
00:04:58,579 --> 00:05:00,769
bad that's not a good use of your time

142
00:04:59,749 --> 00:05:08,569
you actually have to go and fight the

143
00:05:00,769 --> 00:05:11,089
fires so goals get her a move be human

144
00:05:08,569 --> 00:05:12,679
humans are expensive humans are wrong

145
00:05:11,089 --> 00:05:15,649
you got to remember human automate as

146
00:05:12,679 --> 00:05:17,539
much as you can you gotta be able to

147
00:05:15,649 --> 00:05:19,099
support multiple search environments as

148
00:05:17,539 --> 00:05:22,579
I said before salesforce is a really

149
00:05:19,099 --> 00:05:24,619
huge system s right we got tons of

150
00:05:22,579 --> 00:05:25,549
requisitions fraud separate IT separate

151
00:05:24,619 --> 00:05:26,869
everybody wants to be a special

152
00:05:25,549 --> 00:05:28,429
snowflake they gotta be able to search

153
00:05:26,869 --> 00:05:29,360
in the multiple environments then we

154
00:05:28,429 --> 00:05:31,039
have to be able to integrate with our

155
00:05:29,360 --> 00:05:32,029
case management system because if you

156
00:05:31,039 --> 00:05:33,289
can't integrate with a case management

157
00:05:32,029 --> 00:05:34,939
system and you have to build up a new

158
00:05:33,289 --> 00:05:39,729
system it's not really worth the effort

159
00:05:34,939 --> 00:05:42,459
put into building a system all right

160
00:05:39,729 --> 00:05:46,279
here we go this is where the fun begins

161
00:05:42,459 --> 00:05:48,619
so let's say just as an example you have

162
00:05:46,279 --> 00:05:50,808
a bunch of log log repositories now we

163
00:05:48,619 --> 00:05:51,919
can treat these as special snowflakes so

164
00:05:50,809 --> 00:05:53,599
call one of them your production

165
00:05:51,919 --> 00:05:55,099
environment one of them your IT 1-woman

166
00:05:53,599 --> 00:05:55,969
acquisition and some one of them can

167
00:05:55,099 --> 00:05:57,889
just be something that lives in the

168
00:05:55,969 --> 00:05:59,329
cloud what you want to do is you want to

169
00:05:57,889 --> 00:06:01,699
take the indicators that are living in

170
00:05:59,329 --> 00:06:02,989
any number of indicator repositories so

171
00:06:01,699 --> 00:06:04,729
the you know we talked about a lot of

172
00:06:02,989 --> 00:06:06,649
feeds today that you can get these could

173
00:06:04,729 --> 00:06:09,799
be indicator feeds these could be

174
00:06:06,649 --> 00:06:11,419
internal repos of highly vetted Intel

175
00:06:09,799 --> 00:06:13,549
that you saw from you know red team or

176
00:06:11,419 --> 00:06:15,198
an AP key that was attacking you these

177
00:06:13,549 --> 00:06:16,818
are your feet these are your feeds these

178
00:06:15,199 --> 00:06:17,959
are your repositories and what you want

179
00:06:16,819 --> 00:06:19,339
to do is you want to take those

180
00:06:17,959 --> 00:06:21,259
indicators and you want to say where do

181
00:06:19,339 --> 00:06:25,369
I see those in my network where do I see

182
00:06:21,259 --> 00:06:28,969
those in my hosts so I'm gonna say a bad

183
00:06:25,369 --> 00:06:31,639
word here which is in the ideal

184
00:06:28,969 --> 00:06:33,739
environment these should all be one

185
00:06:31,639 --> 00:06:35,059
right but we don't live in an ideal

186
00:06:33,739 --> 00:06:36,919
world we live in a world where

187
00:06:35,059 --> 00:06:39,949
everything is separate nothing works as

188
00:06:36,919 --> 00:06:41,479
it should work so real world

189
00:06:39,949 --> 00:06:46,399
we got a design a search of each one of

190
00:06:41,479 --> 00:06:47,568
these things so what I mean by a

191
00:06:46,399 --> 00:06:49,429
searcher is I mean something that's

192
00:06:47,569 --> 00:06:51,830
designed specifically to search in that

193
00:06:49,429 --> 00:06:53,780
area so a lot of these

194
00:06:51,830 --> 00:06:55,190
they have particular Network rules or

195
00:06:53,780 --> 00:06:57,229
there are a particular vendor product

196
00:06:55,190 --> 00:06:59,450
that only talks on a certain port or

197
00:06:57,230 --> 00:07:01,220
only talks to a certain API so to make

198
00:06:59,450 --> 00:07:03,289
this really simple and really easy to

199
00:07:01,220 --> 00:07:04,460
implement we wrote one particular

200
00:07:03,290 --> 00:07:06,860
searcher for each one of these products

201
00:07:04,460 --> 00:07:08,419
what this means is let's say that

202
00:07:06,860 --> 00:07:11,150
searcher 1 is our production environment

203
00:07:08,420 --> 00:07:12,260
searcher 1 is designed to only search in

204
00:07:11,150 --> 00:07:14,030
the production environment which makes

205
00:07:12,260 --> 00:07:15,770
it really slim very nimble and it's

206
00:07:14,030 --> 00:07:18,799
really easy just to write another one

207
00:07:15,770 --> 00:07:21,500
search and it searches an area B right

208
00:07:18,800 --> 00:07:23,180
sorry B could be IT you change the

209
00:07:21,500 --> 00:07:24,560
components that you need to change but

210
00:07:23,180 --> 00:07:28,580
you don't have to rewrite the entire

211
00:07:24,560 --> 00:07:30,500
search all right next up on this is

212
00:07:28,580 --> 00:07:32,120
we're gonna call extractors you think of

213
00:07:30,500 --> 00:07:33,080
these is really fancy parsers all

214
00:07:32,120 --> 00:07:34,720
they're gonna do is they're gonna take

215
00:07:33,080 --> 00:07:37,280
the information from the repository

216
00:07:34,720 --> 00:07:38,540
indicator repository they're gonna parse

217
00:07:37,280 --> 00:07:40,280
it into the format that's needed for

218
00:07:38,540 --> 00:07:42,860
each one of the searchers and then it

219
00:07:40,280 --> 00:07:45,799
send it off to the serger there we go

220
00:07:42,860 --> 00:07:47,600
mr. spiderwebs and as you can all guess

221
00:07:45,800 --> 00:07:50,960
what's gonna happen next we're gonna

222
00:07:47,600 --> 00:07:53,030
have an alert er all right use big words

223
00:07:50,960 --> 00:07:55,609
that describe what's going on all right

224
00:07:53,030 --> 00:07:57,349
searchers go to the alert er when if a

225
00:07:55,610 --> 00:08:00,260
searcher finds something it's gonna send

226
00:07:57,350 --> 00:08:01,280
the results off to the alert and what's

227
00:08:00,260 --> 00:08:02,930
really cool about the order is that's

228
00:08:01,280 --> 00:08:04,159
completely platform agnostic we'll talk

229
00:08:02,930 --> 00:08:05,840
about that a little bit but that's

230
00:08:04,160 --> 00:08:10,310
searcher then I mean the alert er is

231
00:08:05,840 --> 00:08:11,630
gonna take the results okay it's gonna

232
00:08:10,310 --> 00:08:13,340
send them to the instant response system

233
00:08:11,630 --> 00:08:15,080
so if there's any results they're gonna

234
00:08:13,340 --> 00:08:16,729
get sent to the instant response system

235
00:08:15,080 --> 00:08:19,340
and the reason that the alert er is

236
00:08:16,730 --> 00:08:21,470
separate is because the alerter can do a

237
00:08:19,340 --> 00:08:22,820
lot of additional logic on top of those

238
00:08:21,470 --> 00:08:25,130
search that searches that are coming in

239
00:08:22,820 --> 00:08:26,870
and also it has to format it and bail

240
00:08:25,130 --> 00:08:29,480
that the results in a manner that will

241
00:08:26,870 --> 00:08:32,840
work with the individual case management

242
00:08:29,480 --> 00:08:34,400
system so this is gonna be the driving

243
00:08:32,840 --> 00:08:35,840
diagram I see a lot of you taking

244
00:08:34,400 --> 00:08:41,990
pictures this is the driving diagram of

245
00:08:35,840 --> 00:08:46,220
the talk today so memorize it yes there

246
00:08:41,990 --> 00:08:47,810
will be a quiz okay this is something

247
00:08:46,220 --> 00:08:50,060
that's really cool that we implemented

248
00:08:47,810 --> 00:08:51,500
over 4 so we have to be able to scale

249
00:08:50,060 --> 00:08:54,229
really quickly and we have to be able to

250
00:08:51,500 --> 00:08:55,910
work with a lot of different users so we

251
00:08:54,230 --> 00:08:57,470
built it to work out of a configuration

252
00:08:55,910 --> 00:09:00,260
file this configuration file is

253
00:08:57,470 --> 00:09:02,000
theoretically infinitely scalable it's

254
00:09:00,260 --> 00:09:03,560
encrypted at rest because we have a red

255
00:09:02,000 --> 00:09:05,210
team that loves to troll they would love

256
00:09:03,560 --> 00:09:06,739
nothing more than to get into

257
00:09:05,210 --> 00:09:08,660
one of our tools and just screw around

258
00:09:06,740 --> 00:09:12,530
with a log pipeline so encrypted rest

259
00:09:08,660 --> 00:09:13,790
lives in memory and it's really easy to

260
00:09:12,530 --> 00:09:14,930
change these settings so if we wanted to

261
00:09:13,790 --> 00:09:16,400
add another search if we wanted to

262
00:09:14,930 --> 00:09:17,750
change the way the extractor searched if

263
00:09:16,400 --> 00:09:19,760
we wanted to point to a different API

264
00:09:17,750 --> 00:09:20,930
endpoint all this is really easy to

265
00:09:19,760 --> 00:09:24,040
change through the configuration phone

266
00:09:20,930 --> 00:09:24,040
I'm gonna demonstrate that in the demo

267
00:09:26,110 --> 00:09:30,950
and then it's got this nifty

268
00:09:29,090 --> 00:09:33,350
object-oriented hierarchy so it allows

269
00:09:30,950 --> 00:09:36,080
us to create sub searchers or a sub

270
00:09:33,350 --> 00:09:38,780
extractor so that we can create a

271
00:09:36,080 --> 00:09:41,870
complex tree that will result in really

272
00:09:38,780 --> 00:09:43,010
quick results so a good example is gonna

273
00:09:41,870 --> 00:09:44,870
be shown in the demo is that you have a

274
00:09:43,010 --> 00:09:46,490
searcher the search is not just going to

275
00:09:44,870 --> 00:09:48,410
search the entire Spock index it's going

276
00:09:46,490 --> 00:09:51,680
to dive down a search on this particular

277
00:09:48,410 --> 00:09:53,449
search source type or a particular index

278
00:09:51,680 --> 00:09:58,099
which will result in alerts coming back

279
00:09:53,450 --> 00:09:59,360
right away modularity so of course this

280
00:09:58,100 --> 00:10:00,680
is the theme here is that we've got

281
00:09:59,360 --> 00:10:02,540
security everywhere and we got a bunch

282
00:10:00,680 --> 00:10:03,620
of different environments so it's got to

283
00:10:02,540 --> 00:10:04,730
be able to live in disparate home

284
00:10:03,620 --> 00:10:06,410
environments whether that's on the

285
00:10:04,730 --> 00:10:08,240
public Internet whether that's going to

286
00:10:06,410 --> 00:10:10,219
be inside IT inside production it could

287
00:10:08,240 --> 00:10:12,950
have to cross boundaries and we need it

288
00:10:10,220 --> 00:10:16,910
to be encrypted when it crosses so in

289
00:10:12,950 --> 00:10:18,380
this case we use SSL v3 and that's just

290
00:10:16,910 --> 00:10:20,600
because one of the api's we were using

291
00:10:18,380 --> 00:10:22,880
at the time of implementation could only

292
00:10:20,600 --> 00:10:26,860
support SSL v3 so we're going to hit the

293
00:10:22,880 --> 00:10:29,570
lowest common denominator there and

294
00:10:26,860 --> 00:10:30,950
transmission validation so what happens

295
00:10:29,570 --> 00:10:32,960
is each one of these modules has the

296
00:10:30,950 --> 00:10:35,840
capability of validating the data that's

297
00:10:32,960 --> 00:10:37,460
coming in so we're using an individual

298
00:10:35,840 --> 00:10:39,860
cert so the illiterate users assert to

299
00:10:37,460 --> 00:10:41,510
search the searcher uses assert and the

300
00:10:39,860 --> 00:10:43,490
extractor uses its own certs that you

301
00:10:41,510 --> 00:10:45,080
can transport between the different

302
00:10:43,490 --> 00:10:47,090
boundaries without fear of you know

303
00:10:45,080 --> 00:10:48,230
writing screen with it and then does the

304
00:10:47,090 --> 00:10:52,820
transmission validation make certain

305
00:10:48,230 --> 00:10:56,510
nothing got screwed within transit all

306
00:10:52,820 --> 00:10:58,040
right the extractor much like you know a

307
00:10:56,510 --> 00:10:59,180
Kevin the bet it's pretty easy just to

308
00:10:58,040 --> 00:11:01,040
extract the indicators from the

309
00:10:59,180 --> 00:11:03,050
repository you're going to retrieve the

310
00:11:01,040 --> 00:11:06,829
indicators you're going to format the

311
00:11:03,050 --> 00:11:09,260
indicators you're going to send them off

312
00:11:06,830 --> 00:11:10,490
to the searcher and what the extractor

313
00:11:09,260 --> 00:11:12,319
also does it it's going to control the

314
00:11:10,490 --> 00:11:13,880
historical look-back so because it's

315
00:11:12,320 --> 00:11:15,380
reaching into the repository and pulling

316
00:11:13,880 --> 00:11:16,640
out the indicators it's going to say

317
00:11:15,380 --> 00:11:20,170
these are the new indicators that you

318
00:11:16,640 --> 00:11:20,170
need do this historical searches for

319
00:11:20,890 --> 00:11:27,710
searcher so the searcher is essentially

320
00:11:26,360 --> 00:11:29,630
just the advent of the special snowflake

321
00:11:27,710 --> 00:11:32,360
we have so many special snowflakes it

322
00:11:29,630 --> 00:11:34,010
was such a headache anyway it's

323
00:11:32,360 --> 00:11:35,870
customized for every special snowflake

324
00:11:34,010 --> 00:11:37,730
but this does have its advantages so it

325
00:11:35,870 --> 00:11:39,380
allows us to distribute the load when

326
00:11:37,730 --> 00:11:41,300
you have a lot of different environments

327
00:11:39,380 --> 00:11:42,020
you just spin up a bunch of different

328
00:11:41,300 --> 00:11:43,550
searches you'd have to learn about

329
00:11:42,020 --> 00:11:45,890
onesearch are handling all of the

330
00:11:43,550 --> 00:11:47,390
searches for every environment so a lot

331
00:11:45,890 --> 00:11:49,400
of searchers distribute solo makes us

332
00:11:47,390 --> 00:11:50,720
happy and the addition of new

333
00:11:49,400 --> 00:11:52,040
environments this is something that's

334
00:11:50,720 --> 00:11:53,780
really important to us because we buy a

335
00:11:52,040 --> 00:11:56,000
new company every couple months it's

336
00:11:53,780 --> 00:11:57,260
really easy with searchers that function

337
00:11:56,000 --> 00:11:59,060
this manner just to spin up a new

338
00:11:57,260 --> 00:12:01,819
surgery you literally copypasta the code

339
00:11:59,060 --> 00:12:02,989
you change the endpoint and then you can

340
00:12:01,820 --> 00:12:04,100
point it there or if they're using a

341
00:12:02,990 --> 00:12:05,870
different API or whatever they're doing

342
00:12:04,100 --> 00:12:07,520
you change it without having to take

343
00:12:05,870 --> 00:12:08,720
down the system so the rest of overlord

344
00:12:07,520 --> 00:12:10,069
keeps functioning you don't have to

345
00:12:08,720 --> 00:12:12,110
change anything and you throw in the new

346
00:12:10,070 --> 00:12:15,800
searcher and it keeps working without

347
00:12:12,110 --> 00:12:17,870
any interruption of service via loader

348
00:12:15,800 --> 00:12:20,689
so this is a really nifty piece of code

349
00:12:17,870 --> 00:12:24,080
because it is completely platform

350
00:12:20,690 --> 00:12:26,120
agnostic and I mean obviously it's gonna

351
00:12:24,080 --> 00:12:27,620
be generating the alerts but completely

352
00:12:26,120 --> 00:12:29,540
independent so we also you just we have

353
00:12:27,620 --> 00:12:31,250
bash scripts that are just sending data

354
00:12:29,540 --> 00:12:32,930
to the alerter and that's being set off

355
00:12:31,250 --> 00:12:35,810
into the case management system so it's

356
00:12:32,930 --> 00:12:37,400
a component of overlord but it's it can

357
00:12:35,810 --> 00:12:38,900
function for any part of your incident

358
00:12:37,400 --> 00:12:40,370
response process for any kind of hunting

359
00:12:38,900 --> 00:12:41,720
that you're doing in environment we've

360
00:12:40,370 --> 00:12:43,040
got to do a lot of automated searching

361
00:12:41,720 --> 00:12:44,330
sending it all to the illiterate it's a

362
00:12:43,040 --> 00:12:49,310
really good way of getting that alerted

363
00:12:44,330 --> 00:12:51,530
up and platform agnostic on the backend

364
00:12:49,310 --> 00:12:53,660
as well so those alerts that we're being

365
00:12:51,530 --> 00:12:55,579
sent off in our case we're Salesforce we

366
00:12:53,660 --> 00:12:57,230
use the Salesforce platform but it's a

367
00:12:55,580 --> 00:12:59,810
simple JSON you can send that to any

368
00:12:57,230 --> 00:13:01,250
platform that you want to use literally

369
00:12:59,810 --> 00:13:06,609
you're changing maybe ten lines of code

370
00:13:01,250 --> 00:13:06,610
that's it all right

371
00:13:10,380 --> 00:13:13,500
all right

372
00:13:16,520 --> 00:13:22,290
so here's the demo what we're gonna see

373
00:13:19,710 --> 00:13:24,090
here is I'm going to get an indicator

374
00:13:22,290 --> 00:13:26,010
let's say I get an indicator from one of

375
00:13:24,090 --> 00:13:27,240
my friends and I'm going to open up this

376
00:13:26,010 --> 00:13:30,270
file we're going to this is going to be

377
00:13:27,240 --> 00:13:31,590
pretend to be the repository file so

378
00:13:30,270 --> 00:13:32,819
instead of actually talking to

379
00:13:31,590 --> 00:13:34,890
repository we just wrote a text file

380
00:13:32,820 --> 00:13:36,330
here and we can see the big box here

381
00:13:34,890 --> 00:13:37,680
that's what we care about that's the

382
00:13:36,330 --> 00:13:39,630
indicator that's the type

383
00:13:37,680 --> 00:13:41,310
it's the status in this a date the rest

384
00:13:39,630 --> 00:13:42,930
of the stuff is just metadata about who

385
00:13:41,310 --> 00:13:43,890
created it when they created it in Y and

386
00:13:42,930 --> 00:13:45,030
that's all going to get transferred

387
00:13:43,890 --> 00:13:47,010
through but we don't need for the demo

388
00:13:45,030 --> 00:13:49,410
so what you see me doing here is I'm

389
00:13:47,010 --> 00:13:51,000
going in and I'm adding in my IP so for

390
00:13:49,410 --> 00:13:54,270
the demo I did some malicious activity

391
00:13:51,000 --> 00:13:56,460
between these two indicators so I've

392
00:13:54,270 --> 00:13:57,660
added my new indicator to the repository

393
00:13:56,460 --> 00:13:58,290
and what I'm gonna do is I'm going to

394
00:13:57,660 --> 00:13:59,910
run the alert err

395
00:13:58,290 --> 00:14:00,839
so the alert is going to take in four

396
00:13:59,910 --> 00:14:03,150
arguments it's going to take him

397
00:14:00,840 --> 00:14:04,860
username password the environment which

398
00:14:03,150 --> 00:14:06,720
is gonna be dead for the demo and then

399
00:14:04,860 --> 00:14:09,060
the private key to encrypt and decrypt

400
00:14:06,720 --> 00:14:12,570
the configuration file so we're gonna

401
00:14:09,060 --> 00:14:15,869
give this a run and everything runs

402
00:14:12,570 --> 00:14:17,340
beautifully because it's a demo next up

403
00:14:15,870 --> 00:14:19,050
so we've already added the file to the

404
00:14:17,340 --> 00:14:20,430
repository we've already got the alert

405
00:14:19,050 --> 00:14:21,810
are running and waiting for a feedback

406
00:14:20,430 --> 00:14:23,520
what we need to do is need to get into

407
00:14:21,810 --> 00:14:25,439
the configuration file and make sure the

408
00:14:23,520 --> 00:14:29,370
configuration file for the alert for

409
00:14:25,440 --> 00:14:33,210
overlord is ready to run so to do that

410
00:14:29,370 --> 00:14:35,850
we just put in edit config and we pop

411
00:14:33,210 --> 00:14:37,080
now this is a the demo version so a lot

412
00:14:35,850 --> 00:14:40,800
of stuffs been redacted so you guys

413
00:14:37,080 --> 00:14:43,470
can't log into our system nobody would

414
00:14:40,800 --> 00:14:45,900
do that right so up at the top we see

415
00:14:43,470 --> 00:14:47,760
this is the first first object here this

416
00:14:45,900 --> 00:14:49,260
is gonna be the extractor so the

417
00:14:47,760 --> 00:14:50,550
extractor can be treated as the parent

418
00:14:49,260 --> 00:14:52,470
you're gonna see search size right there

419
00:14:50,550 --> 00:14:54,599
search sides of 15 consider that the

420
00:14:52,470 --> 00:14:56,550
global search size for everything under

421
00:14:54,600 --> 00:14:57,660
it now you can override that as you see

422
00:14:56,550 --> 00:14:58,920
down the search or you're changing the

423
00:14:57,660 --> 00:15:00,959
search size down in the search all right

424
00:14:58,920 --> 00:15:02,130
here to 20 so if you didn't change it to

425
00:15:00,960 --> 00:15:05,130
20 it would treat it and we'll try and

426
00:15:02,130 --> 00:15:08,790
treat it as 50 for the remainder of the

427
00:15:05,130 --> 00:15:10,230
run you know these would so right here

428
00:15:08,790 --> 00:15:12,120
we're seeing all the Splunk username for

429
00:15:10,230 --> 00:15:13,860
seeing more passwords ignore all that

430
00:15:12,120 --> 00:15:16,050
the interesting stuff is down here at

431
00:15:13,860 --> 00:15:18,240
the bottom so that's controlling the

432
00:15:16,050 --> 00:15:20,099
searcher the searcher is multi-threaded

433
00:15:18,240 --> 00:15:20,910
to support you know really big

434
00:15:20,100 --> 00:15:22,530
environments and that's where you

435
00:15:20,910 --> 00:15:24,480
control how long you want to wait until

436
00:15:22,530 --> 00:15:27,449
you check the queue how many threads you

437
00:15:24,480 --> 00:15:28,880
want to run and what's the time interval

438
00:15:27,450 --> 00:15:30,050
so when you were

439
00:15:28,880 --> 00:15:31,220
in a very small environment it's really

440
00:15:30,050 --> 00:15:33,079
easy right now for the demo everything's

441
00:15:31,220 --> 00:15:34,190
set to zero and the smallest smallest

442
00:15:33,080 --> 00:15:36,470
possible number cuz it's really quick

443
00:15:34,190 --> 00:15:37,820
but if you have a Splunk index that was

444
00:15:36,470 --> 00:15:38,990
running really really slowly or I didn't

445
00:15:37,820 --> 00:15:40,670
have enough hardware you'd want to

446
00:15:38,990 --> 00:15:41,630
increase that you want to increase the

447
00:15:40,670 --> 00:15:43,189
number of threads and you want to

448
00:15:41,630 --> 00:15:44,540
increase the time it takes for age

449
00:15:43,190 --> 00:15:45,650
thread to finish so you're not

450
00:15:44,540 --> 00:15:46,730
continuously checking because that's how

451
00:15:45,650 --> 00:15:47,930
you gonna crash hardware if it's just

452
00:15:46,730 --> 00:15:48,710
continuously checking and it's not

453
00:15:47,930 --> 00:15:53,089
paying attention to what's actually

454
00:15:48,710 --> 00:15:54,170
coming out so that's that and then we're

455
00:15:53,090 --> 00:15:55,970
gonna scroll down we're going to look at

456
00:15:54,170 --> 00:15:57,979
so now we get to see how we're creating

457
00:15:55,970 --> 00:15:59,540
one of these sub searchers right here so

458
00:15:57,980 --> 00:16:00,950
this is where the actual search is going

459
00:15:59,540 --> 00:16:03,890
on we're throwing in the strings that we

460
00:16:00,950 --> 00:16:05,480
want to have searched and Splunk so up

461
00:16:03,890 --> 00:16:06,770
there right at the top you can see what

462
00:16:05,480 --> 00:16:08,510
the output is everybody's familiar with

463
00:16:06,770 --> 00:16:10,220
how to use this book so we're just

464
00:16:08,510 --> 00:16:11,960
putting into table and we're gonna take

465
00:16:10,220 --> 00:16:16,820
a look right

466
00:16:11,960 --> 00:16:18,020
that's blocks so we're gonna throw it

467
00:16:16,820 --> 00:16:19,580
into a table and those are the source

468
00:16:18,020 --> 00:16:21,319
types that we're looking for in relation

469
00:16:19,580 --> 00:16:23,450
this particular IP so down at the bottom

470
00:16:21,320 --> 00:16:24,710
we can see these are what the source

471
00:16:23,450 --> 00:16:26,960
types were looking for and we know that

472
00:16:24,710 --> 00:16:28,490
they have those fields so again this is

473
00:16:26,960 --> 00:16:30,880
going back you know we use a dirty would

474
00:16:28,490 --> 00:16:33,620
should in a perfect environment

475
00:16:30,880 --> 00:16:34,760
everything would be every every source

476
00:16:33,620 --> 00:16:36,740
type would have the same type of fields

477
00:16:34,760 --> 00:16:38,240
but it doesn't so you got to have sub

478
00:16:36,740 --> 00:16:39,500
searchers to make it really really fast

479
00:16:38,240 --> 00:16:40,790
so you say what I'm searching for this

480
00:16:39,500 --> 00:16:42,530
particular source type I know I have

481
00:16:40,790 --> 00:16:44,500
these fields and then it's really easy

482
00:16:42,530 --> 00:16:46,670
to do it doesn't it doesn't increase any

483
00:16:44,500 --> 00:16:49,490
it doesn't increase at runtime to do

484
00:16:46,670 --> 00:16:52,160
this what's also interesting here are

485
00:16:49,490 --> 00:16:54,350
these five fields so this is how long

486
00:16:52,160 --> 00:16:55,760
you want to do the search back overlord

487
00:16:54,350 --> 00:16:57,500
doesn't run in real time just because

488
00:16:55,760 --> 00:16:59,540
this is a really quick and dirty way to

489
00:16:57,500 --> 00:17:01,580
get it done we do a 1-hour search back

490
00:16:59,540 --> 00:17:03,349
in this configuration file so that means

491
00:17:01,580 --> 00:17:05,510
the time end is zero and time start is

492
00:17:03,350 --> 00:17:07,400
one and then the other two fields were

493
00:17:05,510 --> 00:17:09,470
how far you want to do your historical

494
00:17:07,400 --> 00:17:11,089
hurch search back whether you want to go

495
00:17:09,470 --> 00:17:13,819
back 10 hours whether you want to go

496
00:17:11,089 --> 00:17:15,770
back a couple days or go back at all

497
00:17:13,819 --> 00:17:17,930
time so here we go this is what the

498
00:17:15,770 --> 00:17:19,310
second sub searcher looks like and so

499
00:17:17,930 --> 00:17:21,500
for the example you see here what we're

500
00:17:19,310 --> 00:17:22,909
changing is the index so we're going to

501
00:17:21,500 --> 00:17:24,890
be the previous one is searching over

502
00:17:22,910 --> 00:17:27,709
all of the data in Splunk and then

503
00:17:24,890 --> 00:17:30,950
searching for a particular subset of the

504
00:17:27,709 --> 00:17:32,360
sort search source types but in this one

505
00:17:30,950 --> 00:17:34,370
what we're searching for is we want to

506
00:17:32,360 --> 00:17:38,300
say I want this particular source type

507
00:17:34,370 --> 00:17:39,800
of this index and it's going to first

508
00:17:38,300 --> 00:17:43,029
into a different table because it's got

509
00:17:39,800 --> 00:17:45,168
different fields

510
00:17:43,029 --> 00:17:50,389
so down the bottom you can see how it

511
00:17:45,169 --> 00:17:54,470
has a different source type oh we save

512
00:17:50,389 --> 00:17:55,850
the file and we go off and run it now

513
00:17:54,470 --> 00:17:58,009
it's going to spit out a lot of data but

514
00:17:55,850 --> 00:18:00,789
I'll freeze it and zoom in so everybody

515
00:17:58,009 --> 00:18:00,789
can see what's going on

516
00:18:09,600 --> 00:18:13,860
go so we got tail up and we're this is

517
00:18:12,750 --> 00:18:16,410
the first thing that comes spinning out

518
00:18:13,860 --> 00:18:18,689
it says that it has managed to encrypt

519
00:18:16,410 --> 00:18:20,040
the new file and it's found a valid

520
00:18:18,690 --> 00:18:21,810
extractor and a valid searcher so what

521
00:18:20,040 --> 00:18:23,280
it does is it it first it encrypts the

522
00:18:21,810 --> 00:18:24,990
configure that's gonna unencrypted it to

523
00:18:23,280 --> 00:18:26,340
actually read it but it goes in there

524
00:18:24,990 --> 00:18:27,780
it's found the search and found the

525
00:18:26,340 --> 00:18:28,889
extractor which means that there was

526
00:18:27,780 --> 00:18:31,620
nothing wrong with how we wrote the

527
00:18:28,890 --> 00:18:33,090
configuration file next up this is the

528
00:18:31,620 --> 00:18:34,649
extractor it's going through its

529
00:18:33,090 --> 00:18:36,570
connecting out to the repository in this

530
00:18:34,650 --> 00:18:38,130
case the text file and it's pulling out

531
00:18:36,570 --> 00:18:39,389
all those indicators and it's parsing

532
00:18:38,130 --> 00:18:40,980
them and it's sending off sending them

533
00:18:39,390 --> 00:18:43,800
off to the searcher so it says you know

534
00:18:40,980 --> 00:18:45,390
it extracted two indicators it made one

535
00:18:43,800 --> 00:18:51,120
search and then now it's going to be

536
00:18:45,390 --> 00:18:53,100
sending them off to the searcher up next

537
00:18:51,120 --> 00:18:56,610
so the searcher is going to receive the

538
00:18:53,100 --> 00:18:58,709
files and it's going to run the searches

539
00:18:56,610 --> 00:19:02,189
and this is a straight output from

540
00:18:58,710 --> 00:19:06,840
Splunk which is I found 10 into 10

541
00:19:02,190 --> 00:19:09,090
results and then the other so it ran two

542
00:19:06,840 --> 00:19:11,370
searches one for that first IP the 29

543
00:19:09,090 --> 00:19:15,510
and the other for the 28 so it found 0

544
00:19:11,370 --> 00:19:18,899
for 28 and 10 for or no the second one

545
00:19:15,510 --> 00:19:21,450
was for the different index so this is

546
00:19:18,900 --> 00:19:23,190
very interesting so we put in two

547
00:19:21,450 --> 00:19:25,290
indicators and we're coming back here

548
00:19:23,190 --> 00:19:26,760
these are two separate alerts so the

549
00:19:25,290 --> 00:19:28,710
first one this first field right here

550
00:19:26,760 --> 00:19:30,390
this is just the results file so sports

551
00:19:28,710 --> 00:19:31,560
going to say hey we found it all these

552
00:19:30,390 --> 00:19:33,600
fields this is what the table looks like

553
00:19:31,560 --> 00:19:36,060
base64-encoded that's just going to be

554
00:19:33,600 --> 00:19:37,590
sent up as a CSV but what's interesting

555
00:19:36,060 --> 00:19:38,760
is that it split out the two indicators

556
00:19:37,590 --> 00:19:40,740
they're brand one search but it's gonna

557
00:19:38,760 --> 00:19:42,780
split up the two indicators top one we

558
00:19:40,740 --> 00:19:44,910
see is the 29 and the bottom we see is

559
00:19:42,780 --> 00:19:46,500
the 28 so it's separating it's pulling

560
00:19:44,910 --> 00:19:48,270
apart that file that was returned by

561
00:19:46,500 --> 00:19:49,800
slug ants parsing it into two separate

562
00:19:48,270 --> 00:19:52,200
results which is just being sense so

563
00:19:49,800 --> 00:19:53,399
this is a big JSON blob and down here at

564
00:19:52,200 --> 00:19:54,600
the bottom on both of them you see these

565
00:19:53,400 --> 00:19:57,000
are all the fields that came out of the

566
00:19:54,600 --> 00:19:58,530
repository so this is the who made it

567
00:19:57,000 --> 00:19:59,880
that what when they made it the why they

568
00:19:58,530 --> 00:20:02,070
made it and all of it

569
00:19:59,880 --> 00:20:05,100
beautiful JSON sent straight off to the

570
00:20:02,070 --> 00:20:06,480
alerter so this is the alerter it's got

571
00:20:05,100 --> 00:20:09,719
the valid connection and all the data is

572
00:20:06,480 --> 00:20:11,010
coming in so first thing that the

573
00:20:09,720 --> 00:20:12,870
alerter does is it's going to actually

574
00:20:11,010 --> 00:20:14,430
look at the message gonna make sure the

575
00:20:12,870 --> 00:20:17,909
length everything matches up with what

576
00:20:14,430 --> 00:20:19,890
it's expecting to receive from the

577
00:20:17,910 --> 00:20:21,780
searcher and then down the very very

578
00:20:19,890 --> 00:20:23,160
last line is it verified it using the

579
00:20:21,780 --> 00:20:25,170
signature that's on file

580
00:20:23,160 --> 00:20:28,740
so every user has their own public

581
00:20:25,170 --> 00:20:33,020
private key and the alert keeps track of

582
00:20:28,740 --> 00:20:35,220
that so now what we see happening is

583
00:20:33,020 --> 00:20:37,530
this is the alert are interacting with

584
00:20:35,220 --> 00:20:39,360
the platform takes the JSON and it's

585
00:20:37,530 --> 00:20:42,149
adding it's creating the object and

586
00:20:39,360 --> 00:20:44,429
putting it into the queue over here we

587
00:20:42,150 --> 00:20:47,160
see success the alert was created with

588
00:20:44,430 --> 00:20:49,290
ID that we can take that idea we can

589
00:20:47,160 --> 00:20:51,180
just throw it into the browser on the

590
00:20:49,290 --> 00:20:52,770
instance where you're using it or we can

591
00:20:51,180 --> 00:20:57,450
pretend that we're the instant response

592
00:20:52,770 --> 00:20:59,370
team and just open up the queue open up

593
00:20:57,450 --> 00:21:02,280
the queue refresh it and they're already

594
00:20:59,370 --> 00:21:05,520
there so just this this is what the

595
00:21:02,280 --> 00:21:07,230
alert looks like if you were C cert on

596
00:21:05,520 --> 00:21:10,590
the receiving end of one of these so

597
00:21:07,230 --> 00:21:11,850
down here at the bottom you see the

598
00:21:10,590 --> 00:21:14,129
account name in this case it was all

599
00:21:11,850 --> 00:21:15,929
local it was the IT environment subject

600
00:21:14,130 --> 00:21:17,610
is which indicator and where you found

601
00:21:15,930 --> 00:21:18,810
it and then description that's all the

602
00:21:17,610 --> 00:21:20,879
data that was carried over from the

603
00:21:18,810 --> 00:21:22,889
repository so that any handler can

604
00:21:20,880 --> 00:21:24,030
actually have some context about why

605
00:21:22,890 --> 00:21:29,480
they're actually seeing this alert and

606
00:21:24,030 --> 00:21:29,480
why they should care go back with slides

607
00:21:40,990 --> 00:21:46,570
all right future development so as I

608
00:21:44,770 --> 00:21:48,309
kind of alluded to Overlord was really

609
00:21:46,570 --> 00:21:50,110
developed under work wartime

610
00:21:48,309 --> 00:21:51,370
circumstances we wanted something that

611
00:21:50,110 --> 00:21:53,110
will work we want something that would

612
00:21:51,370 --> 00:21:58,479
work now and we wanted to fit our

613
00:21:53,110 --> 00:22:00,010
environment one of the biggest problems

614
00:21:58,480 --> 00:22:02,080
is that it's search or speed limited so

615
00:22:00,010 --> 00:22:03,460
if you're working with and you know

616
00:22:02,080 --> 00:22:05,260
we've been using Spock a lot let's say

617
00:22:03,460 --> 00:22:06,820
we're using sumo logic instead we're

618
00:22:05,260 --> 00:22:10,059
working with a similar logic instance

619
00:22:06,820 --> 00:22:12,100
that is really really struggling then

620
00:22:10,059 --> 00:22:13,330
that slows everything else down so your

621
00:22:12,100 --> 00:22:14,980
searchers gonna run a lot slower which

622
00:22:13,330 --> 00:22:16,270
is gonna make over run a lot slower and

623
00:22:14,980 --> 00:22:17,380
there's you can't control that that's

624
00:22:16,270 --> 00:22:18,850
nothing that can be done on the code you

625
00:22:17,380 --> 00:22:22,390
got to work with your team that's

626
00:22:18,850 --> 00:22:23,500
supporting the log pipeline and right

627
00:22:22,390 --> 00:22:25,059
now in its current version it's not

628
00:22:23,500 --> 00:22:26,020
real-time because that's not what we

629
00:22:25,059 --> 00:22:27,700
needed we wanted a quick and dirty

630
00:22:26,020 --> 00:22:30,970
solution that would just get us some

631
00:22:27,700 --> 00:22:32,410
level of automatic searching but it's

632
00:22:30,970 --> 00:22:34,870
really easy to make the stuff we can

633
00:22:32,410 --> 00:22:37,240
write a Kafka module and maybe two hours

634
00:22:34,870 --> 00:22:41,919
and plug that in and would work with all

635
00:22:37,240 --> 00:22:44,429
the existing infrastructure and then of

636
00:22:41,920 --> 00:22:47,860
course a tongue-twister extractor

637
00:22:44,429 --> 00:22:49,270
abstraction which is there were two of

638
00:22:47,860 --> 00:22:51,490
them right so there was a separate one

639
00:22:49,270 --> 00:22:55,090
for every single indicator repository

640
00:22:51,490 --> 00:22:56,830
and that's unnecessary in the ideal

641
00:22:55,090 --> 00:22:58,659
world we should be able to abstract it

642
00:22:56,830 --> 00:23:01,090
down just to one and that's something

643
00:22:58,660 --> 00:23:03,670
that's on the list to do and more

644
00:23:01,090 --> 00:23:05,139
modules so I'm currently battling our

645
00:23:03,670 --> 00:23:06,520
legal team and if you ever want to you

646
00:23:05,140 --> 00:23:07,929
know see the coloured raine from a

647
00:23:06,520 --> 00:23:10,360
lawyer space tell them you want to

648
00:23:07,929 --> 00:23:13,390
open-source one of your key security

649
00:23:10,360 --> 00:23:15,070
tools they just they don't like that but

650
00:23:13,390 --> 00:23:17,830
I'm working with them this will be

651
00:23:15,070 --> 00:23:19,720
coming out soon hopefully and with it I

652
00:23:17,830 --> 00:23:22,540
want to put out a thread exchange module

653
00:23:19,720 --> 00:23:24,309
as the extractor so you can plug it

654
00:23:22,540 --> 00:23:25,720
directly as soon as it comes out you

655
00:23:24,309 --> 00:23:27,309
download it and you can plug it in with

656
00:23:25,720 --> 00:23:28,720
thread exchange your search

657
00:23:27,309 --> 00:23:33,970
infrastructure and you're loading

658
00:23:28,720 --> 00:23:36,360
infrastructure all right finally time

659
00:23:33,970 --> 00:23:36,360
for drinks

660
00:23:37,140 --> 00:23:43,000
all right as it is built today and as it

661
00:23:41,020 --> 00:23:44,590
was intended it's very modular so all

662
00:23:43,000 --> 00:23:47,200
those components the extractor the

663
00:23:44,590 --> 00:23:48,550
search and the alerter completely you

664
00:23:47,200 --> 00:23:50,290
know take one out replace it with

665
00:23:48,550 --> 00:23:53,790
whatever you want hit any end points you

666
00:23:50,290 --> 00:23:56,170
want search anywhere you want great

667
00:23:53,790 --> 00:23:58,270
scalable so with the configuration file

668
00:23:56,170 --> 00:24:00,220
and the object oriented method in which

669
00:23:58,270 --> 00:24:01,420
you can use the searchers there's no

670
00:24:00,220 --> 00:24:05,080
reason that you can't scale this to

671
00:24:01,420 --> 00:24:08,410
whatever environment you have and it

672
00:24:05,080 --> 00:24:10,659
actually works so we can do automated

673
00:24:08,410 --> 00:24:12,160
searching and is platform agnostic we

674
00:24:10,660 --> 00:24:14,890
can use this across any number of

675
00:24:12,160 --> 00:24:16,000
instances any alerting platform any

676
00:24:14,890 --> 00:24:18,820
searching infrastructure or any

677
00:24:16,000 --> 00:24:20,380
repository and of course what power

678
00:24:18,820 --> 00:24:23,230
point isn't complete without some fancy

679
00:24:20,380 --> 00:24:25,120
power point takeaway it's not perfect

680
00:24:23,230 --> 00:24:31,980
work in progress but it's gonna get

681
00:24:25,120 --> 00:24:31,979
there any questions

682
00:24:39,300 --> 00:24:43,919
so it can but are you also talking about

683
00:24:42,510 --> 00:24:46,320
the validation of and making sure it's a

684
00:24:43,920 --> 00:24:48,270
good so that's a really good question

685
00:24:46,320 --> 00:24:50,010
the question was does the extractor

686
00:24:48,270 --> 00:24:51,330
actually do any kind of validation of

687
00:24:50,010 --> 00:24:52,860
the indicators so you know you're

688
00:24:51,330 --> 00:24:53,699
getting in a feed and you know we all

689
00:24:52,860 --> 00:24:55,590
know it's gonna happen it's gonna say

690
00:24:53,700 --> 00:24:58,320
google.com sure you've locked in this

691
00:24:55,590 --> 00:24:59,730
circumstance the indicators that are

692
00:24:58,320 --> 00:25:00,929
coming in are all highly better than we

693
00:24:59,730 --> 00:25:02,520
know that they're good so we just want

694
00:25:00,930 --> 00:25:05,640
to do the searching on them it doesn't

695
00:25:02,520 --> 00:25:07,620
do any kind of validation but it does a

696
00:25:05,640 --> 00:25:11,040
very use interesting use case what the

697
00:25:07,620 --> 00:25:12,719
threat Intel team uses it for is we take

698
00:25:11,040 --> 00:25:14,340
every new indicator and we just let it

699
00:25:12,720 --> 00:25:16,080
run in the background for a couple weeks

700
00:25:14,340 --> 00:25:17,399
and then we look at all the alerts that

701
00:25:16,080 --> 00:25:19,740
were generated and we use that to

702
00:25:17,400 --> 00:25:21,750
provide a score and rate indicators

703
00:25:19,740 --> 00:25:23,940
based on how many alerts we saw coming

704
00:25:21,750 --> 00:25:29,540
out of overlord but that's really

705
00:25:23,940 --> 00:25:29,540
Hardware intensive yes

706
00:25:34,440 --> 00:25:45,200
yes yes we do Oh I don't know if they'd

707
00:25:41,400 --> 00:25:47,730
be interested in that though so the

708
00:25:45,200 --> 00:25:50,820
computer security incident response team

709
00:25:47,730 --> 00:25:51,870
is Salesforce actually put out so we all

710
00:25:50,820 --> 00:25:53,700
use the platform every team is

711
00:25:51,870 --> 00:25:55,110
Salesforce uses the platform to run our

712
00:25:53,700 --> 00:25:57,480
teams and keep track of cases and

713
00:25:55,110 --> 00:25:59,580
incidents and all that but the seats are

714
00:25:57,480 --> 00:26:01,080
actually put out it's free on the app

715
00:25:59,580 --> 00:26:02,939
exchange if you're a Salesforce customer

716
00:26:01,080 --> 00:26:04,889
you can download it and use the same app

717
00:26:02,940 --> 00:26:06,750
that they do for incident management

718
00:26:04,890 --> 00:26:09,900
so it comes pre-populated with all the

719
00:26:06,750 --> 00:26:12,120
case types escalation templates queues

720
00:26:09,900 --> 00:26:14,250
everything you want and it makes it

721
00:26:12,120 --> 00:26:15,689
really easy I mean we love using it to

722
00:26:14,250 --> 00:26:18,030
manage over instance because you just

723
00:26:15,690 --> 00:26:21,210
you know you point the overlord there

724
00:26:18,030 --> 00:26:23,220
you say hey send them the alerts yeah oh

725
00:26:21,210 --> 00:26:25,170
and chatter - so it's a really great

726
00:26:23,220 --> 00:26:26,790
tool for when you're dealing with really

727
00:26:25,170 --> 00:26:28,170
large-scale incidents it's really easy

728
00:26:26,790 --> 00:26:35,990
to interact with all the handlers all

729
00:26:28,170 --> 00:26:35,990
the managers in one in one place but yes

730
00:26:37,880 --> 00:26:42,870
it's only limited by the infrastructure

731
00:26:40,080 --> 00:26:44,429
so if you have a really robust searching

732
00:26:42,870 --> 00:26:47,209
infrastructure you can search any number

733
00:26:44,430 --> 00:26:47,210
of indicators that you want

734
00:26:55,420 --> 00:27:08,000
no we age your mouth oh yeah um yeah so

735
00:27:05,840 --> 00:27:09,590
time is a big factor and also we do use

736
00:27:08,000 --> 00:27:10,940
the alerts that are coming in so for

737
00:27:09,590 --> 00:27:12,350
seeing an alert that's coming in every

738
00:27:10,940 --> 00:27:15,020
time a false-positive alert comes in

739
00:27:12,350 --> 00:27:16,310
that's gonna make it a jab faster and if

740
00:27:15,020 --> 00:27:17,570
we're seeing a lot of good alerts come

741
00:27:16,310 --> 00:27:19,040
in it's gonna stay active for a longer

742
00:27:17,570 --> 00:27:25,879
time and the key component that is

743
00:27:19,040 --> 00:27:27,940
actually overlord all right no more

744
00:27:25,880 --> 00:27:27,940
questions

745
00:27:38,640 --> 00:27:44,549
so that's all done in our repository so

746
00:27:41,600 --> 00:27:46,770
we don't that's not covered in oh right

747
00:27:44,549 --> 00:27:48,540
now it's just a very naive system but

748
00:27:46,770 --> 00:27:50,220
there's no reason that you can't have

749
00:27:48,540 --> 00:27:51,899
that alert or send that data back to the

750
00:27:50,220 --> 00:27:53,549
repository and if you have a repository

751
00:27:51,900 --> 00:27:55,740
that's capable of receiving the

752
00:27:53,549 --> 00:27:56,910
information about the alert there's no

753
00:27:55,740 --> 00:27:58,559
reason that it can't mark the alert and

754
00:27:56,910 --> 00:28:02,580
then cause the a job to happen faster

755
00:27:58,559 --> 00:28:18,210
within the repository yes oh yeah yeah

756
00:28:02,580 --> 00:28:21,559
oh no yes it does it does no I'm not

757
00:28:18,210 --> 00:28:21,559
doing that you can buy me drinks today

758
00:28:24,980 --> 00:28:29,210
all right well thank you very much

