1
00:00:04,880 --> 00:00:08,160
well hey with that said

2
00:00:06,160 --> 00:00:09,440
uh what i what i'd like to do is i'm

3
00:00:08,160 --> 00:00:12,160
gonna go ahead and get our

4
00:00:09,440 --> 00:00:14,160
our next speaker lined up um it is

5
00:00:12,160 --> 00:00:15,519
someone who it's funny phil you you gave

6
00:00:14,160 --> 00:00:16,560
us a good introduction talking about

7
00:00:15,519 --> 00:00:19,279
regex's

8
00:00:16,560 --> 00:00:21,520
and uh how your regexes usually lean to

9
00:00:19,279 --> 00:00:23,680
lead to um kicking screaming and crying

10
00:00:21,520 --> 00:00:25,119
which is a very similar situation for me

11
00:00:23,680 --> 00:00:26,720
and to be completely frank with you one

12
00:00:25,119 --> 00:00:29,599
of the things that i find myself

13
00:00:26,720 --> 00:00:31,439
constantly trouble uh stumbling and over

14
00:00:29,599 --> 00:00:34,320
and trembling about

15
00:00:31,439 --> 00:00:35,200
is powershell and powershell obfuscation

16
00:00:34,320 --> 00:00:37,680
and

17
00:00:35,200 --> 00:00:39,120
um our next speaker joe petrowski has

18
00:00:37,680 --> 00:00:40,960
actually decided you know what

19
00:00:39,120 --> 00:00:42,800
matt why are you going the long run hard

20
00:00:40,960 --> 00:00:45,360
way about this why don't you take the

21
00:00:42,800 --> 00:00:47,599
smart way by just applying linear

22
00:00:45,360 --> 00:00:49,120
regression towards it

23
00:00:47,600 --> 00:00:50,800
and as soon as i said this read this

24
00:00:49,120 --> 00:00:52,000
topic i was like oh my gosh we have to

25
00:00:50,800 --> 00:00:53,440
have this because this is a common

26
00:00:52,000 --> 00:00:54,719
problem that i think

27
00:00:53,440 --> 00:00:56,480
incident responders and threat hunters

28
00:00:54,719 --> 00:00:58,000
everywhere face number one and number

29
00:00:56,480 --> 00:01:00,718
two what a novel way to approach

30
00:00:58,000 --> 00:01:02,160
this so without any further delay joe

31
00:01:00,719 --> 00:01:04,000
petrovsky he is here to talk to us about

32
00:01:02,160 --> 00:01:05,600
hunting powershell obfuscation with

33
00:01:04,000 --> 00:01:08,479
linear regression

34
00:01:05,600 --> 00:01:08,960
and just a reminder everyone hop into

35
00:01:08,479 --> 00:01:10,880
the

36
00:01:08,960 --> 00:01:13,520
slack and keep your comments and

37
00:01:10,880 --> 00:01:15,520
questions flowing so that way we can uh

38
00:01:13,520 --> 00:01:17,119
get some some stuff out of joe but joe

39
00:01:15,520 --> 00:01:19,520
on to you take it away we're looking

40
00:01:17,119 --> 00:01:19,840
forward to it all right thanks so much

41
00:01:19,520 --> 00:01:21,839
matt

42
00:01:19,840 --> 00:01:24,560
uh thanks everyone for attending today

43
00:01:21,840 --> 00:01:26,240
uh thanks so much to sans for having me

44
00:01:24,560 --> 00:01:27,920
uh in particular to jen for kind of

45
00:01:26,240 --> 00:01:29,439
being my handler and walking me through

46
00:01:27,920 --> 00:01:30,079
this whole thing so thank you for your

47
00:01:29,439 --> 00:01:31,199
help

48
00:01:30,079 --> 00:01:33,039
uh and we're gonna talk about some cool

49
00:01:31,200 --> 00:01:35,200
stuff today so i'm really enjoying the

50
00:01:33,040 --> 00:01:37,600
threading summit 2020 so far

51
00:01:35,200 --> 00:01:40,159
and uh let's just keep this rolling so

52
00:01:37,600 --> 00:01:42,000
uh let's see here next slide

53
00:01:40,159 --> 00:01:43,360
here we go so um here's what we'll be

54
00:01:42,000 --> 00:01:45,200
talking about a little bit today so i'll

55
00:01:43,360 --> 00:01:46,000
quickly introduce myself and then i'll

56
00:01:45,200 --> 00:01:47,600
kind of get into

57
00:01:46,000 --> 00:01:49,280
like what it is specifically that we're

58
00:01:47,600 --> 00:01:51,199
trying to look for here

59
00:01:49,280 --> 00:01:53,280
and we're going to find some patterns

60
00:01:51,200 --> 00:01:55,119
that show up and in relationships that

61
00:01:53,280 --> 00:01:56,159
you can find in the kinds of powershell

62
00:01:55,119 --> 00:01:57,840
evil commands that we're going to be

63
00:01:56,159 --> 00:01:59,360
looking for here and then we're going to

64
00:01:57,840 --> 00:02:01,280
do some applied statistics stuff to go

65
00:01:59,360 --> 00:02:02,640
try to find that evil stuff so

66
00:02:01,280 --> 00:02:04,719
uh that's what we'll be doing here for

67
00:02:02,640 --> 00:02:08,560
the next little bit so here's me

68
00:02:04,719 --> 00:02:12,239
um been doing blue team stuff for about

69
00:02:08,560 --> 00:02:14,080
16 or so years the past like 10 or 11 in

70
00:02:12,239 --> 00:02:15,680
instant response and threat hunting i

71
00:02:14,080 --> 00:02:17,120
worked for target with you've seen

72
00:02:15,680 --> 00:02:17,920
already a bunch of my amazing colleagues

73
00:02:17,120 --> 00:02:20,319
already

74
00:02:17,920 --> 00:02:21,519
so i get to do really cool stuff with

75
00:02:20,319 --> 00:02:23,440
david and fred and kat

76
00:02:21,520 --> 00:02:25,360
all the time and so my job is pretty

77
00:02:23,440 --> 00:02:27,280
awesome um

78
00:02:25,360 --> 00:02:28,480
next year will be my six-year service

79
00:02:27,280 --> 00:02:29,520
anniversary with the company already so

80
00:02:28,480 --> 00:02:30,879
i don't know quite where that went but

81
00:02:29,520 --> 00:02:33,760
uh yeah that's me

82
00:02:30,879 --> 00:02:34,879
so um enough of that let's get into what

83
00:02:33,760 --> 00:02:37,359
we're talking about

84
00:02:34,879 --> 00:02:38,720
so if you're wondering whether this is

85
00:02:37,360 --> 00:02:40,000
applicable or not like really don't take

86
00:02:38,720 --> 00:02:42,080
my word for it if you just

87
00:02:40,000 --> 00:02:44,239
literally google obfuscated powershell

88
00:02:42,080 --> 00:02:45,200
you'll get like pages and pages of stuff

89
00:02:44,239 --> 00:02:48,319
so

90
00:02:45,200 --> 00:02:48,958
tooling articles about it things you can

91
00:02:48,319 --> 00:02:50,238
do with it

92
00:02:48,959 --> 00:02:51,760
whatever like that there's really not

93
00:02:50,239 --> 00:02:52,879
much of a barrier to entry here if you

94
00:02:51,760 --> 00:02:54,079
want to use these things for malicious

95
00:02:52,879 --> 00:02:56,959
purposes

96
00:02:54,080 --> 00:02:58,159
so this is something like we as threat

97
00:02:56,959 --> 00:02:59,200
hunters should kind of have in the back

98
00:02:58,159 --> 00:03:00,319
of our minds and kind of be thinking

99
00:02:59,200 --> 00:03:02,839
about right we should be looking for

100
00:03:00,319 --> 00:03:05,518
this kind of stuff this is applicable to

101
00:03:02,840 --> 00:03:07,760
us

102
00:03:05,519 --> 00:03:09,120
so then what specifically are we going

103
00:03:07,760 --> 00:03:11,120
to be looking for well let's

104
00:03:09,120 --> 00:03:12,800
think about this a little bit we're

105
00:03:11,120 --> 00:03:15,280
looking for powershell commands

106
00:03:12,800 --> 00:03:16,959
that have been doctored up in such a way

107
00:03:15,280 --> 00:03:18,319
that you can't tell what they do right

108
00:03:16,959 --> 00:03:20,080
so and why would you do that

109
00:03:18,319 --> 00:03:21,440
it's to defer people to do stuff like

110
00:03:20,080 --> 00:03:22,720
reverse engineering

111
00:03:21,440 --> 00:03:24,079
incident response threat hunting or

112
00:03:22,720 --> 00:03:25,359
whatever and why would you try to throw

113
00:03:24,080 --> 00:03:25,680
them off your trailer well it's because

114
00:03:25,360 --> 00:03:27,120
you're

115
00:03:25,680 --> 00:03:29,440
probably trying to do something evil

116
00:03:27,120 --> 00:03:29,440
with it

117
00:03:30,480 --> 00:03:34,720
so what is our goal in looking for this

118
00:03:33,120 --> 00:03:35,200
it's gonna be so i'm gonna say that

119
00:03:34,720 --> 00:03:37,120
we're not

120
00:03:35,200 --> 00:03:40,000
really necessarily at least trying to

121
00:03:37,120 --> 00:03:42,560
build static detection for obfuscation

122
00:03:40,000 --> 00:03:43,200
um the reason being is is because

123
00:03:42,560 --> 00:03:44,879
there's

124
00:03:43,200 --> 00:03:46,399
pretty much as many ways as you can

125
00:03:44,879 --> 00:03:48,480
obfuscate something in powershell like

126
00:03:46,400 --> 00:03:50,080
you're really only limited to your

127
00:03:48,480 --> 00:03:51,679
imagination and the depth of your

128
00:03:50,080 --> 00:03:53,040
depravity really so

129
00:03:51,680 --> 00:03:55,120
there's not really going to be a way to

130
00:03:53,040 --> 00:03:57,120
really detect all that or really get

131
00:03:55,120 --> 00:03:58,799
detection for the results these commands

132
00:03:57,120 --> 00:04:00,159
instead what we really want to do

133
00:03:58,799 --> 00:04:01,760
is just figure out all the powershell

134
00:04:00,159 --> 00:04:03,359
that's being run at scale across

135
00:04:01,760 --> 00:04:04,879
wherever your enterprise is

136
00:04:03,360 --> 00:04:06,480
and then boil that down into something

137
00:04:04,879 --> 00:04:08,079
that you can say like okay if there's

138
00:04:06,480 --> 00:04:09,599
obfuscated evil things

139
00:04:08,080 --> 00:04:11,200
it's most likely to be in this

140
00:04:09,599 --> 00:04:12,159
manageable subset so that's what we're

141
00:04:11,200 --> 00:04:14,159
trying to look for

142
00:04:12,159 --> 00:04:16,719
this is a big data set reduction

143
00:04:14,159 --> 00:04:16,719
exercise

144
00:04:18,560 --> 00:04:22,880
okay let's look at some examples so here

145
00:04:20,720 --> 00:04:24,880
is a powershell command so

146
00:04:22,880 --> 00:04:26,240
in the absence of any other kind of

147
00:04:24,880 --> 00:04:27,919
context or knowledge

148
00:04:26,240 --> 00:04:29,680
you can read this and go okay well

149
00:04:27,919 --> 00:04:30,719
there's some plain text variable

150
00:04:29,680 --> 00:04:32,960
definitions here

151
00:04:30,720 --> 00:04:34,560
there's like a plain text verb uh

152
00:04:32,960 --> 00:04:35,840
there's some concatenate okay

153
00:04:34,560 --> 00:04:38,560
it looks like they're building a user

154
00:04:35,840 --> 00:04:39,840
prompt right so this is a powershell

155
00:04:38,560 --> 00:04:41,520
command that you can kind of tell

156
00:04:39,840 --> 00:04:43,280
it's fairly self-explanatory what this

157
00:04:41,520 --> 00:04:44,080
is doing i would consider this to be

158
00:04:43,280 --> 00:04:47,198
something

159
00:04:44,080 --> 00:04:48,800
normal benign and non-obfuscated on the

160
00:04:47,199 --> 00:04:50,720
other hand

161
00:04:48,800 --> 00:04:52,080
so here's something else so here's

162
00:04:50,720 --> 00:04:54,080
another powershell command

163
00:04:52,080 --> 00:04:55,120
and i have no idea what this is and

164
00:04:54,080 --> 00:04:56,800
that's really the whole point

165
00:04:55,120 --> 00:04:58,479
there's like some sort of encoded mess

166
00:04:56,800 --> 00:05:00,960
at the bottom of this here there's like

167
00:04:58,479 --> 00:05:03,520
a mixed case command up at the top here

168
00:05:00,960 --> 00:05:05,280
um i have no idea what this is and i

169
00:05:03,520 --> 00:05:06,880
know all i really know is if i saw this

170
00:05:05,280 --> 00:05:08,159
in my real world environment it's it's

171
00:05:06,880 --> 00:05:10,240
time to roll heavy on this

172
00:05:08,160 --> 00:05:12,880
and the blue team is going to burn this

173
00:05:10,240 --> 00:05:14,880
with the sacred cleansing fire right so

174
00:05:12,880 --> 00:05:16,479
this is obfuscated the intent of doing

175
00:05:14,880 --> 00:05:17,680
this is to make it sure that someone

176
00:05:16,479 --> 00:05:20,000
who's looking at this doesn't know what

177
00:05:17,680 --> 00:05:20,000
it is

178
00:05:21,600 --> 00:05:25,199
so let's look for let's figure out what

179
00:05:23,759 --> 00:05:27,039
specifically we want to look for

180
00:05:25,199 --> 00:05:28,800
so i also get to work with paul nelson

181
00:05:27,039 --> 00:05:30,240
who really kind of gave me this like

182
00:05:28,800 --> 00:05:31,840
cool piece of advice that really stands

183
00:05:30,240 --> 00:05:33,360
the test of time don't try to identify

184
00:05:31,840 --> 00:05:37,119
what that obfuscated command does

185
00:05:33,360 --> 00:05:38,720
don't try to detect what it does instead

186
00:05:37,120 --> 00:05:41,120
just identify that as obfuscated in the

187
00:05:38,720 --> 00:05:42,960
first place just go find the obfuscation

188
00:05:41,120 --> 00:05:44,960
and that in and of itself is enough to

189
00:05:42,960 --> 00:05:46,638
make us go okay now my suspicion is

190
00:05:44,960 --> 00:05:48,000
raised i probably need to go

191
00:05:46,639 --> 00:05:52,479
look at this much more closely and we

192
00:05:48,000 --> 00:05:54,240
might have a problem going on here

193
00:05:52,479 --> 00:05:55,680
so let's talk about how we're going to

194
00:05:54,240 --> 00:05:57,360
start actually hunting this so there's

195
00:05:55,680 --> 00:05:58,560
going to be some prerequisites before we

196
00:05:57,360 --> 00:06:01,039
can get this off the ground

197
00:05:58,560 --> 00:06:01,600
so job one is we've got to make sure

198
00:06:01,039 --> 00:06:03,039
that we're

199
00:06:01,600 --> 00:06:05,440
we've got some sort of endpoint logging

200
00:06:03,039 --> 00:06:07,360
going on and like i realized that

201
00:06:05,440 --> 00:06:08,800
budgeting and bandwidth and that kind of

202
00:06:07,360 --> 00:06:09,520
stuff is this real thing is really

203
00:06:08,800 --> 00:06:11,120
concerned

204
00:06:09,520 --> 00:06:12,400
i will submit to everybody that if

205
00:06:11,120 --> 00:06:13,759
you're really serious about doing

206
00:06:12,400 --> 00:06:16,479
hunting on your endpoints

207
00:06:13,759 --> 00:06:17,840
you got to get logs off your endpoints

208
00:06:16,479 --> 00:06:20,639
in this particular case there's

209
00:06:17,840 --> 00:06:21,840
a few different options excuse me for

210
00:06:20,639 --> 00:06:24,479
logging powershell

211
00:06:21,840 --> 00:06:26,479
uh sysmon event id1 is pretty good i in

212
00:06:24,479 --> 00:06:28,560
this case i actually used event id 800

213
00:06:26,479 --> 00:06:30,000
which captures a bunch of good stuff

214
00:06:28,560 --> 00:06:31,600
like the the full powershell command

215
00:06:30,000 --> 00:06:32,639
plus any switches running it so that

216
00:06:31,600 --> 00:06:35,280
pretty much is really

217
00:06:32,639 --> 00:06:36,560
what i wanted here so if you are logging

218
00:06:35,280 --> 00:06:37,679
these things off your endpoints then you

219
00:06:36,560 --> 00:06:40,160
need a place to

220
00:06:37,680 --> 00:06:41,680
collect them all into essential logging

221
00:06:40,160 --> 00:06:43,520
repository thing

222
00:06:41,680 --> 00:06:44,880
and a place to search that so i'm not

223
00:06:43,520 --> 00:06:45,680
gonna you know sell or recommend any

224
00:06:44,880 --> 00:06:46,800
tools here

225
00:06:45,680 --> 00:06:48,000
if you've rolled your own if you're

226
00:06:46,800 --> 00:06:49,199
using something like elk if you're

227
00:06:48,000 --> 00:06:51,039
paying for a tool like splunk

228
00:06:49,199 --> 00:06:52,160
whatever use something that works and

229
00:06:51,039 --> 00:06:53,520
whatever's in your budget that's my

230
00:06:52,160 --> 00:06:56,000
favorite kind of tool right so

231
00:06:53,520 --> 00:06:57,359
do it works for you once you've got this

232
00:06:56,000 --> 00:06:58,240
stuff in your central searchable

233
00:06:57,360 --> 00:07:00,639
collection point

234
00:06:58,240 --> 00:07:02,479
then we're going to need some sort of

235
00:07:00,639 --> 00:07:04,080
analysis package for this thing a data

236
00:07:02,479 --> 00:07:06,318
analysis package and a

237
00:07:04,080 --> 00:07:07,280
plotting plotting graphing visualization

238
00:07:06,319 --> 00:07:09,680
mechanism

239
00:07:07,280 --> 00:07:11,198
so again here you use what tools you

240
00:07:09,680 --> 00:07:13,120
like use what tools you work in this

241
00:07:11,199 --> 00:07:14,160
case i use the jupyter notebook as my

242
00:07:13,120 --> 00:07:15,360
analysis engine

243
00:07:14,160 --> 00:07:17,120
so if you're not familiar with that it's

244
00:07:15,360 --> 00:07:18,560
it's a wonderful beautiful thing you can

245
00:07:17,120 --> 00:07:21,599
think of it as kind of like a

246
00:07:18,560 --> 00:07:23,199
a live dewy kernel for for python that

247
00:07:21,599 --> 00:07:24,400
lets you kind of do stuff on the fly and

248
00:07:23,199 --> 00:07:25,840
change things on the fly

249
00:07:24,400 --> 00:07:27,840
um and when you're good at trial and

250
00:07:25,840 --> 00:07:30,000
error like me it's super useful

251
00:07:27,840 --> 00:07:30,880
um you'll need a data analysis package i

252
00:07:30,000 --> 00:07:32,560
use pandas

253
00:07:30,880 --> 00:07:34,159
uh and in fact specifically i was using

254
00:07:32,560 --> 00:07:35,520
the windows anaconda distribution which

255
00:07:34,160 --> 00:07:36,720
has a lot of different ones so i use

256
00:07:35,520 --> 00:07:37,919
pandas in this case but

257
00:07:36,720 --> 00:07:39,520
if you're more familiar with r or

258
00:07:37,919 --> 00:07:40,960
something like that go nuts and then

259
00:07:39,520 --> 00:07:42,159
you'll need a way of visualizing all

260
00:07:40,960 --> 00:07:44,080
this stuff so there's different

261
00:07:42,160 --> 00:07:46,319
visualization packages i use plotly

262
00:07:44,080 --> 00:07:48,800
express again due to simplicity

263
00:07:46,319 --> 00:07:50,400
uh total cost of that whole analysis

264
00:07:48,800 --> 00:07:50,960
package is zero dollars that's another

265
00:07:50,400 --> 00:07:53,679
reason why

266
00:07:50,960 --> 00:07:53,680
i picked what i did

267
00:07:55,680 --> 00:07:58,160
so let's talk about what we're going to

268
00:07:56,720 --> 00:07:59,520
be assuming here if we're going to be

269
00:07:58,160 --> 00:08:00,960
looking for evil powershell there's

270
00:07:59,520 --> 00:08:01,840
probably going to be some similar

271
00:08:00,960 --> 00:08:04,878
consistent

272
00:08:01,840 --> 00:08:06,400
themes that are going to come up here so

273
00:08:04,879 --> 00:08:07,680
if it's evil and obfuscated it's

274
00:08:06,400 --> 00:08:08,560
probably going to run fairly early in

275
00:08:07,680 --> 00:08:10,720
the kill chain

276
00:08:08,560 --> 00:08:12,000
so like for instance if you saw chris

277
00:08:10,720 --> 00:08:14,160
and john's talk yesterday

278
00:08:12,000 --> 00:08:16,080
where they went from initial fish all

279
00:08:14,160 --> 00:08:18,080
the way to domain admin all the way to

280
00:08:16,080 --> 00:08:19,599
soda nikiti tragedy right so there was a

281
00:08:18,080 --> 00:08:21,199
lot of powershell in there

282
00:08:19,599 --> 00:08:23,039
where's the obfuscated stuff though it

283
00:08:21,199 --> 00:08:24,879
was fairly early in kill chain

284
00:08:23,039 --> 00:08:26,159
so it was like within the first couple

285
00:08:24,879 --> 00:08:29,120
phases of the attack

286
00:08:26,160 --> 00:08:29,120
that's where you saw that

287
00:08:29,440 --> 00:08:32,080
it's probably going to be run directly

288
00:08:30,639 --> 00:08:34,080
from a shell right so we're talking

289
00:08:32,080 --> 00:08:34,959
about an adversary who's gotten probably

290
00:08:34,080 --> 00:08:36,880
initial foothold

291
00:08:34,958 --> 00:08:38,000
someplace probably on a popped endpoint

292
00:08:36,880 --> 00:08:40,640
or something that effect

293
00:08:38,000 --> 00:08:42,399
they're operating only in memory and the

294
00:08:40,640 --> 00:08:44,080
real pros will continue to probably

295
00:08:42,399 --> 00:08:45,600
operate only in memory memory so they

296
00:08:44,080 --> 00:08:47,120
don't want to drop anything to disk

297
00:08:45,600 --> 00:08:49,120
so we're not going to be looking for a

298
00:08:47,120 --> 00:08:50,480
dropped ps1 script file on disk some

299
00:08:49,120 --> 00:08:52,320
place so this is run really only from

300
00:08:50,480 --> 00:08:54,000
the shell

301
00:08:52,320 --> 00:08:56,000
and that fell off the bottom of the

302
00:08:54,000 --> 00:08:58,000
screen probably under a user context

303
00:08:56,000 --> 00:09:00,560
right so early in

304
00:08:58,000 --> 00:09:02,000
the attack life cycle here we're talking

305
00:09:00,560 --> 00:09:03,518
about adversaries who probably haven't

306
00:09:02,000 --> 00:09:05,040
been able to elevate privileges yet so

307
00:09:03,519 --> 00:09:06,399
maybe they popped a user who does have

308
00:09:05,040 --> 00:09:08,319
some elevated privileges

309
00:09:06,399 --> 00:09:09,519
but they're not no main admin yet so in

310
00:09:08,320 --> 00:09:10,959
other words when we're finding this

311
00:09:09,519 --> 00:09:12,959
stuff

312
00:09:10,959 --> 00:09:15,119
all is not yet lost right they haven't

313
00:09:12,959 --> 00:09:16,800
completed mission yet however

314
00:09:15,120 --> 00:09:19,200
time is of the essence so we got to move

315
00:09:16,800 --> 00:09:19,199
on this

316
00:09:20,480 --> 00:09:23,920
okay how we going to collect this data

317
00:09:22,160 --> 00:09:26,000
so what i did in order to collect the

318
00:09:23,920 --> 00:09:27,599
corpus of data to begin hunting on so

319
00:09:26,000 --> 00:09:29,519
look for something like this here's sort

320
00:09:27,600 --> 00:09:31,040
of like a pseudo search

321
00:09:29,519 --> 00:09:32,800
but collect this over some period of

322
00:09:31,040 --> 00:09:34,800
time from across your enterprise from as

323
00:09:32,800 --> 00:09:38,079
much as you can get and deduplicate it

324
00:09:34,800 --> 00:09:40,479
so in order to get event id 800

325
00:09:38,080 --> 00:09:42,800
and come up with a regex for whatever

326
00:09:40,480 --> 00:09:45,120
users look like in your environment

327
00:09:42,800 --> 00:09:47,040
and then exclude anything that runs off

328
00:09:45,120 --> 00:09:48,240
a ps1 or a script file right so in other

329
00:09:47,040 --> 00:09:50,959
words these are powershell

330
00:09:48,240 --> 00:09:51,839
native commands run from the shell log

331
00:09:50,959 --> 00:09:53,920
into event id

332
00:09:51,839 --> 00:09:56,399
800 and run by something under a user

333
00:09:53,920 --> 00:09:56,399
context

334
00:09:58,240 --> 00:10:01,600
so when i did this um the the total

335
00:10:00,160 --> 00:10:04,000
cardinality of stuff i ran this

336
00:10:01,600 --> 00:10:05,120
for about three weeks across my entire

337
00:10:04,000 --> 00:10:06,399
enterprise and

338
00:10:05,120 --> 00:10:08,320
like just got as much powershell as i

339
00:10:06,399 --> 00:10:09,600
could possibly get my hands on total

340
00:10:08,320 --> 00:10:11,600
cardinality that was pretty big right it

341
00:10:09,600 --> 00:10:13,360
says about 30 million things

342
00:10:11,600 --> 00:10:14,800
but we're going to actually visualize

343
00:10:13,360 --> 00:10:16,640
this in a scatter plot which means we're

344
00:10:14,800 --> 00:10:18,240
going to want to deduplicate it

345
00:10:16,640 --> 00:10:20,399
the reason being is because when you

346
00:10:18,240 --> 00:10:22,079
scatter plot non-deduplicated

347
00:10:20,399 --> 00:10:23,600
stuff your the data points just kind of

348
00:10:22,079 --> 00:10:24,959
stack on top of one another

349
00:10:23,600 --> 00:10:26,240
and it doesn't give you any additional

350
00:10:24,959 --> 00:10:27,920
information so you might as well just

351
00:10:26,240 --> 00:10:28,640
operate on unique data so that's what we

352
00:10:27,920 --> 00:10:29,599
want here

353
00:10:28,640 --> 00:10:31,519
and when i boiled that down and

354
00:10:29,600 --> 00:10:33,040
deduplicated i like i dropped about

355
00:10:31,519 --> 00:10:35,360
three orders of magnitude i was down to

356
00:10:33,040 --> 00:10:36,800
about 7000 things that was kind of cool

357
00:10:35,360 --> 00:10:38,720
which kind of makes sense right so most

358
00:10:36,800 --> 00:10:41,439
of the stuff you're going to find is

359
00:10:38,720 --> 00:10:42,959
automated script things that run across

360
00:10:41,440 --> 00:10:44,640
your environment maybe multiple times

361
00:10:42,959 --> 00:10:46,319
per day by admin type

362
00:10:44,640 --> 00:10:47,519
things right so your mileage is

363
00:10:46,320 --> 00:10:49,360
obviously going to vary depending on the

364
00:10:47,519 --> 00:10:51,519
size of your enterprise but that's

365
00:10:49,360 --> 00:10:52,800
you know a fairly big data reduction

366
00:10:51,519 --> 00:10:53,839
just like that

367
00:10:52,800 --> 00:10:55,599
and then what i did is i took that

368
00:10:53,839 --> 00:10:57,519
corpus of data and intentionally stuck

369
00:10:55,600 --> 00:10:58,720
some some things in there so

370
00:10:57,519 --> 00:11:00,399
fred and i were playing with a bunch of

371
00:10:58,720 --> 00:11:01,360
different obfuscation tools he was

372
00:11:00,399 --> 00:11:04,399
messing around with

373
00:11:01,360 --> 00:11:05,839
daniel bohanian's invoke obfuscation uh

374
00:11:04,399 --> 00:11:07,040
stuff which is super cool like if you

375
00:11:05,839 --> 00:11:07,519
ever messed around with that go check it

376
00:11:07,040 --> 00:11:09,680
out

377
00:11:07,519 --> 00:11:11,200
um but fred had this like giant body of

378
00:11:09,680 --> 00:11:12,640
things that he obfuscated with this tool

379
00:11:11,200 --> 00:11:14,720
and he just gave me a bunch of them

380
00:11:12,640 --> 00:11:16,240
so i picked six of those at random and

381
00:11:14,720 --> 00:11:17,839
just appended them to the end of my data

382
00:11:16,240 --> 00:11:19,519
set just so that i knew

383
00:11:17,839 --> 00:11:22,160
that i had some needles to find in a

384
00:11:19,519 --> 00:11:22,160
haystack right

385
00:11:23,680 --> 00:11:26,239
so here's the patterns that we're gonna

386
00:11:24,959 --> 00:11:28,479
be looking for here if we're gonna try

387
00:11:26,240 --> 00:11:29,760
to find obfuscated stuff in that mess

388
00:11:28,480 --> 00:11:31,839
if you think about what obfuscated

389
00:11:29,760 --> 00:11:32,959
commands have in common

390
00:11:31,839 --> 00:11:34,720
they've got a couple things going on

391
00:11:32,959 --> 00:11:36,719
here so there's going to be some sort of

392
00:11:34,720 --> 00:11:38,320
encoding mechanism in there that turns

393
00:11:36,720 --> 00:11:39,680
whatever the plain text that would have

394
00:11:38,320 --> 00:11:42,079
been in that powershell command

395
00:11:39,680 --> 00:11:43,359
into illegible stuff and then of course

396
00:11:42,079 --> 00:11:44,399
that you know way to turn that illegible

397
00:11:43,360 --> 00:11:45,600
stuff back into something that will

398
00:11:44,399 --> 00:11:46,800
actually run right so both of those

399
00:11:45,600 --> 00:11:47,760
things are going to be present in that

400
00:11:46,800 --> 00:11:49,359
command

401
00:11:47,760 --> 00:11:50,560
which means that the length that command

402
00:11:49,360 --> 00:11:51,839
is probably going to be getting longer

403
00:11:50,560 --> 00:11:53,119
and longer because it has to include

404
00:11:51,839 --> 00:11:54,560
both of those things

405
00:11:53,120 --> 00:11:57,839
so let's sort of use this to our

406
00:11:54,560 --> 00:11:57,839
advantage here

407
00:11:58,800 --> 00:12:02,800
if you think about it the longer the

408
00:12:01,200 --> 00:12:05,040
command you're looking at is

409
00:12:02,800 --> 00:12:07,120
the more things that you're going to

410
00:12:05,040 --> 00:12:08,560
find as far as character types

411
00:12:07,120 --> 00:12:10,320
those numbers are also going to increase

412
00:12:08,560 --> 00:12:10,800
as the size of the command increases as

413
00:12:10,320 --> 00:12:12,800
well

414
00:12:10,800 --> 00:12:14,479
and we'd probably roughly intuitively

415
00:12:12,800 --> 00:12:15,760
expect this relationship to be linear so

416
00:12:14,480 --> 00:12:17,200
in other words the longer command

417
00:12:15,760 --> 00:12:18,240
is the more letters you're going to have

418
00:12:17,200 --> 00:12:19,600
in it the more digits you're going to

419
00:12:18,240 --> 00:12:22,399
have in it the more special characters

420
00:12:19,600 --> 00:12:24,880
you're going to have in it etc

421
00:12:22,399 --> 00:12:26,720
so that should make intuitive sense so

422
00:12:24,880 --> 00:12:28,240
then the question becomes like okay well

423
00:12:26,720 --> 00:12:29,680
if we're going to use that relationship

424
00:12:28,240 --> 00:12:30,959
to go find obfuscation

425
00:12:29,680 --> 00:12:32,160
which one should we go after well

426
00:12:30,959 --> 00:12:33,279
there's a bunch of options that we've

427
00:12:32,160 --> 00:12:34,560
got here

428
00:12:33,279 --> 00:12:35,760
so we can look for things like i don't

429
00:12:34,560 --> 00:12:37,119
know dollar signs right which denote

430
00:12:35,760 --> 00:12:38,639
powershell variables

431
00:12:37,120 --> 00:12:40,399
we can look for string literals you know

432
00:12:38,639 --> 00:12:43,279
quote marks double quote marks

433
00:12:40,399 --> 00:12:45,680
uh grouping characters you know switches

434
00:12:43,279 --> 00:12:46,800
between uppercase and lowercase and then

435
00:12:45,680 --> 00:12:48,160
actually like fred gave me the good

436
00:12:46,800 --> 00:12:48,880
ideas like why not just look for letters

437
00:12:48,160 --> 00:12:52,079
and digits

438
00:12:48,880 --> 00:12:53,439
okay cool so let's check that out um and

439
00:12:52,079 --> 00:12:55,199
we'll have kind of like a bake off here

440
00:12:53,440 --> 00:12:58,079
and see like which one of these best

441
00:12:55,200 --> 00:12:58,079
explains our data

442
00:12:58,320 --> 00:13:02,720
so we need to figure out actually a

443
00:13:00,959 --> 00:13:04,319
quantitative way to figure out well

444
00:13:02,720 --> 00:13:05,680
which of those is best right so we can

445
00:13:04,320 --> 00:13:07,279
eyeball it but we can actually

446
00:13:05,680 --> 00:13:09,839
get this quantified and get some numbers

447
00:13:07,279 --> 00:13:11,439
on it so you can measure the strength of

448
00:13:09,839 --> 00:13:12,480
the relationship between your observed

449
00:13:11,440 --> 00:13:14,880
data

450
00:13:12,480 --> 00:13:16,320
and what you'd expect it to be so in

451
00:13:14,880 --> 00:13:17,120
other words if we expect this data to be

452
00:13:16,320 --> 00:13:19,360
linear

453
00:13:17,120 --> 00:13:20,880
then there is a line that most closely

454
00:13:19,360 --> 00:13:22,320
fits the observed data

455
00:13:20,880 --> 00:13:23,680
and the process of finding that line is

456
00:13:22,320 --> 00:13:24,240
what we call linear regression right so

457
00:13:23,680 --> 00:13:26,638
it's

458
00:13:24,240 --> 00:13:28,000
it's the technique for taking your

459
00:13:26,639 --> 00:13:29,600
observed data graphing it

460
00:13:28,000 --> 00:13:32,800
and then finding the line that most

461
00:13:29,600 --> 00:13:34,720
explains or best fits that data

462
00:13:32,800 --> 00:13:36,079
a linear regression has a property you

463
00:13:34,720 --> 00:13:36,399
know without getting into too much stats

464
00:13:36,079 --> 00:13:38,000
here

465
00:13:36,399 --> 00:13:39,600
called the r squared statistic which is

466
00:13:38,000 --> 00:13:41,360
basically the

467
00:13:39,600 --> 00:13:42,639
the amount of variation that you found

468
00:13:41,360 --> 00:13:44,240
in your data that can be explained by

469
00:13:42,639 --> 00:13:44,880
the regression line that you just drew

470
00:13:44,240 --> 00:13:46,959
in other words

471
00:13:44,880 --> 00:13:48,240
it's a measure of how closely that line

472
00:13:46,959 --> 00:13:50,160
fits the observed data

473
00:13:48,240 --> 00:13:51,519
on a scale of zero to one zero meaning

474
00:13:50,160 --> 00:13:53,760
it's it's basically not

475
00:13:51,519 --> 00:13:55,279
a fit at all and one meaning it very

476
00:13:53,760 --> 00:13:56,959
closely and tightly

477
00:13:55,279 --> 00:13:58,480
explains the data that you're actually

478
00:13:56,959 --> 00:14:00,319
looking at here so what we're trying to

479
00:13:58,480 --> 00:14:02,880
do is find the r square statistic

480
00:14:00,320 --> 00:14:04,560
be a measure of how much your observed

481
00:14:02,880 --> 00:14:05,040
data differs from what you'd expect and

482
00:14:04,560 --> 00:14:06,638
the

483
00:14:05,040 --> 00:14:09,199
expected stuff is what you'd find along

484
00:14:06,639 --> 00:14:09,199
that line

485
00:14:11,120 --> 00:14:14,320
okay so back to my initial question here

486
00:14:12,880 --> 00:14:16,560
we've got some options here on which

487
00:14:14,320 --> 00:14:18,320
character we want to do a regression on

488
00:14:16,560 --> 00:14:19,839
well let's just do a linear regression

489
00:14:18,320 --> 00:14:21,279
on each of those options here and see

490
00:14:19,839 --> 00:14:23,279
which one has the highest r squared

491
00:14:21,279 --> 00:14:24,880
value so that's really going to be

492
00:14:23,279 --> 00:14:26,639
our best fit to the data and most

493
00:14:24,880 --> 00:14:29,439
closely explains it so

494
00:14:26,639 --> 00:14:31,120
okay let's do a basically a scatter plot

495
00:14:29,440 --> 00:14:33,199
between the length of the command

496
00:14:31,120 --> 00:14:34,959
and the count of things like dollar

497
00:14:33,199 --> 00:14:36,319
signs and grouping characters and

498
00:14:34,959 --> 00:14:37,279
letters and numbers etc and which one

499
00:14:36,320 --> 00:14:38,639
works best

500
00:14:37,279 --> 00:14:40,800
well it's actually this one right over

501
00:14:38,639 --> 00:14:42,880
here so what it wound up being

502
00:14:40,800 --> 00:14:45,359
is is the just alpha characters counts

503
00:14:42,880 --> 00:14:46,639
of letters are most closely related to

504
00:14:45,360 --> 00:14:48,079
the length of the command

505
00:14:46,639 --> 00:14:49,360
um so i tried a whole bunch of them here

506
00:14:48,079 --> 00:14:50,638
there's there's a couple other decision

507
00:14:49,360 --> 00:14:52,480
options here

508
00:14:50,639 --> 00:14:54,000
um you have an option for something

509
00:14:52,480 --> 00:14:54,880
called a multiple regressions in other

510
00:14:54,000 --> 00:14:57,199
words using

511
00:14:54,880 --> 00:14:58,720
multiple independent variables to

512
00:14:57,199 --> 00:15:00,319
explain the dependent variable in this

513
00:14:58,720 --> 00:15:02,399
case it just wasn't needed

514
00:15:00,320 --> 00:15:04,160
um the the r squared value for just

515
00:15:02,399 --> 00:15:04,639
count of alpha was so high that was like

516
00:15:04,160 --> 00:15:05,839
well

517
00:15:04,639 --> 00:15:07,040
that's really all i'm going to need

518
00:15:05,839 --> 00:15:09,519
right here since that's what we can go

519
00:15:07,040 --> 00:15:09,519
forward with

520
00:15:10,639 --> 00:15:13,680
and if you think about this a little bit

521
00:15:12,240 --> 00:15:15,040
like if you kind of step back and you

522
00:15:13,680 --> 00:15:16,160
can probably say like actually yeah that

523
00:15:15,040 --> 00:15:19,120
makes sense

524
00:15:16,160 --> 00:15:20,639
um if you're looking at a big corpus of

525
00:15:19,120 --> 00:15:22,240
powershell commands running across your

526
00:15:20,639 --> 00:15:24,000
environment

527
00:15:22,240 --> 00:15:25,600
it's probably mostly non obfuscated

528
00:15:24,000 --> 00:15:27,279
right and in best case it's completely

529
00:15:25,600 --> 00:15:28,880
not obfuscated you didn't find any evil

530
00:15:27,279 --> 00:15:30,079
in there so you would expect that to be

531
00:15:28,880 --> 00:15:32,240
mostly things

532
00:15:30,079 --> 00:15:34,319
that are human readable were written in

533
00:15:32,240 --> 00:15:36,079
such a way that they could be understood

534
00:15:34,320 --> 00:15:37,680
and it's going to be in this case mostly

535
00:15:36,079 --> 00:15:40,000
letters that kind of makes sense

536
00:15:37,680 --> 00:15:41,359
so if you define very normal normal

537
00:15:40,000 --> 00:15:43,040
powershell commands as they're not

538
00:15:41,360 --> 00:15:44,800
obfuscated and are mostly letters and

539
00:15:43,040 --> 00:15:46,639
you can human read it

540
00:15:44,800 --> 00:15:47,758
then what that means is we can find the

541
00:15:46,639 --> 00:15:48,480
opposite of that and that's what we're

542
00:15:47,759 --> 00:15:49,759
looking for

543
00:15:48,480 --> 00:15:51,680
as an anomaly we're trying to find

544
00:15:49,759 --> 00:15:54,399
things that aren't mostly letters

545
00:15:51,680 --> 00:15:55,199
and therefore are mostly likely to be

546
00:15:54,399 --> 00:15:56,639
obfuscated

547
00:15:55,199 --> 00:15:58,800
so that's what we're going after right

548
00:15:56,639 --> 00:15:58,800
now

549
00:16:00,880 --> 00:16:05,839
so when you do linear regression on any

550
00:16:04,160 --> 00:16:07,120
really any analysis package you'll get a

551
00:16:05,839 --> 00:16:07,920
bunch of information about that

552
00:16:07,120 --> 00:16:08,959
regression

553
00:16:07,920 --> 00:16:11,439
it's called you might have heard of it

554
00:16:08,959 --> 00:16:13,279
as like anova or analysis of variance

555
00:16:11,440 --> 00:16:15,040
or regression statistics or something

556
00:16:13,279 --> 00:16:15,920
like that um this is what you get out of

557
00:16:15,040 --> 00:16:17,439
pandas

558
00:16:15,920 --> 00:16:18,719
so a couple things jump out here so the

559
00:16:17,440 --> 00:16:19,920
first thing in the top right is the

560
00:16:18,720 --> 00:16:23,040
actual r squared

561
00:16:19,920 --> 00:16:24,399
value for that linear regression and on

562
00:16:23,040 --> 00:16:26,240
a scale of zero to one this is like you

563
00:16:24,399 --> 00:16:27,519
know nine six five that's about as cl as

564
00:16:26,240 --> 00:16:30,000
high as you can really

565
00:16:27,519 --> 00:16:30,560
get in the real world and then if you

566
00:16:30,000 --> 00:16:32,160
remember

567
00:16:30,560 --> 00:16:33,199
like what the graph of a line looks like

568
00:16:32,160 --> 00:16:35,279
so you go back to like eighth grade

569
00:16:33,199 --> 00:16:36,079
algebra it's like y equals the slope of

570
00:16:35,279 --> 00:16:38,160
the line times

571
00:16:36,079 --> 00:16:39,920
x plus the y intercept like y equals mx

572
00:16:38,160 --> 00:16:41,040
plus b um that's really what we're

573
00:16:39,920 --> 00:16:42,959
finding right here and you said like

574
00:16:41,040 --> 00:16:45,279
yeah what am i ever going to use at well

575
00:16:42,959 --> 00:16:46,319
today's the day right um so here are

576
00:16:45,279 --> 00:16:47,600
those things down here where the arrows

577
00:16:46,320 --> 00:16:49,920
are pointing to so there's actually the

578
00:16:47,600 --> 00:16:50,639
y-intercept and slope of the regression

579
00:16:49,920 --> 00:16:52,479
so

580
00:16:50,639 --> 00:16:54,240
we're pretty confident that the

581
00:16:52,480 --> 00:16:56,800
regression line that explains this data

582
00:16:54,240 --> 00:16:58,320
is going to be about y equals 0.855 x

583
00:16:56,800 --> 00:16:59,439
minus 10.

584
00:16:58,320 --> 00:17:01,360
um there's some additional cool

585
00:16:59,440 --> 00:17:03,120
regression data over or metadata

586
00:17:01,360 --> 00:17:04,480
the p of t values is basically an

587
00:17:03,120 --> 00:17:06,240
explanation of like

588
00:17:04,480 --> 00:17:08,240
what is the chance that this data is was

589
00:17:06,240 --> 00:17:09,679
just really by chance and that there

590
00:17:08,240 --> 00:17:10,640
isn't actually a relationship between

591
00:17:09,679 --> 00:17:12,640
these two variables

592
00:17:10,640 --> 00:17:14,240
and zero right so there's there's

593
00:17:12,640 --> 00:17:16,000
actually really no chance

594
00:17:14,240 --> 00:17:17,599
that there is no relationship between

595
00:17:16,000 --> 00:17:19,039
these two variables so this is a really

596
00:17:17,599 --> 00:17:21,918
good linear regression and this is going

597
00:17:19,039 --> 00:17:21,919
to be useful for us

598
00:17:23,280 --> 00:17:27,119
so let's scatter apply it finally um so

599
00:17:25,280 --> 00:17:28,799
here is the initial scatter plot of the

600
00:17:27,119 --> 00:17:30,479
length of all the commands i found

601
00:17:28,799 --> 00:17:32,720
and the count of the letters in all of

602
00:17:30,480 --> 00:17:34,160
those commands and of course what she

603
00:17:32,720 --> 00:17:35,360
jumps out at you right away is two

604
00:17:34,160 --> 00:17:37,200
things so one there's a couple things

605
00:17:35,360 --> 00:17:39,520
way off the end of the chart here

606
00:17:37,200 --> 00:17:40,880
and the rest is way over there you know

607
00:17:39,520 --> 00:17:42,879
clustered around the origin

608
00:17:40,880 --> 00:17:44,640
so maybe let's let's zoom in on that a

609
00:17:42,880 --> 00:17:45,919
little bit um

610
00:17:44,640 --> 00:17:47,520
so this is actually really what most of

611
00:17:45,919 --> 00:17:48,720
the data looks like it's fairly

612
00:17:47,520 --> 00:17:50,000
clustered really tightly

613
00:17:48,720 --> 00:17:52,400
around that regression line which is

614
00:17:50,000 --> 00:17:53,840
what we expect uh and it looks like we

615
00:17:52,400 --> 00:17:57,679
can really start using this

616
00:17:53,840 --> 00:17:57,678
now to find anomalies

617
00:17:58,880 --> 00:18:02,640
okay so if we now know what our graph

618
00:18:01,600 --> 00:18:04,480
looks like we can now

619
00:18:02,640 --> 00:18:06,160
use that to find outliers so we got to

620
00:18:04,480 --> 00:18:07,520
define like okay if we think

621
00:18:06,160 --> 00:18:09,280
this is what our data looks like when

622
00:18:07,520 --> 00:18:10,320
visualized what are things that would

623
00:18:09,280 --> 00:18:12,639
look abnormal

624
00:18:10,320 --> 00:18:13,678
based on that visualization so if we say

625
00:18:12,640 --> 00:18:15,039
that things that are really close to

626
00:18:13,679 --> 00:18:15,840
that regression line are what we would

627
00:18:15,039 --> 00:18:17,600
expect

628
00:18:15,840 --> 00:18:19,199
right that means that the farther you

629
00:18:17,600 --> 00:18:20,559
get from that regression line that's the

630
00:18:19,200 --> 00:18:22,240
most likely to be things that we

631
00:18:20,559 --> 00:18:24,080
wouldn't expect in other words

632
00:18:22,240 --> 00:18:25,840
that's probably where obfuscation is

633
00:18:24,080 --> 00:18:28,799
going to live if it exists

634
00:18:25,840 --> 00:18:29,360
and i also threw kind of just a hard um

635
00:18:28,799 --> 00:18:30,720
length

636
00:18:29,360 --> 00:18:32,799
cap on this thing when i was looking at

637
00:18:30,720 --> 00:18:34,320
all my data i really didn't find

638
00:18:32,799 --> 00:18:35,840
any more than a couple instances of a

639
00:18:34,320 --> 00:18:36,559
command that were longer than 250

640
00:18:35,840 --> 00:18:38,080
characters

641
00:18:36,559 --> 00:18:39,440
so i just had a hard threshold here and

642
00:18:38,080 --> 00:18:43,840
said anything longer than that i want to

643
00:18:39,440 --> 00:18:43,840
know about

644
00:18:44,240 --> 00:18:48,080
so then what i did was i try to find

645
00:18:46,320 --> 00:18:50,960
define a range around that regression

646
00:18:48,080 --> 00:18:52,320
line to say okay outside of this range

647
00:18:50,960 --> 00:18:53,840
this is what i'm going to define as an

648
00:18:52,320 --> 00:18:54,480
outlier and this is what i want to know

649
00:18:53,840 --> 00:18:57,039
about

650
00:18:54,480 --> 00:18:58,320
and in my coda i did that with a with a

651
00:18:57,039 --> 00:19:00,400
variable so i could

652
00:18:58,320 --> 00:19:02,000
control the width of that band so you

653
00:19:00,400 --> 00:19:04,240
can kind of doctor this up to

654
00:19:02,000 --> 00:19:05,200
as you need it so if you make this range

655
00:19:04,240 --> 00:19:07,440
wider

656
00:19:05,200 --> 00:19:09,200
um this will reduce your false positive

657
00:19:07,440 --> 00:19:10,559
rate but it might result in you missing

658
00:19:09,200 --> 00:19:11,520
things that you would have wanted to

659
00:19:10,559 --> 00:19:13,280
find

660
00:19:11,520 --> 00:19:15,039
if you make it narrower you're probably

661
00:19:13,280 --> 00:19:16,720
going to be more likely to find anything

662
00:19:15,039 --> 00:19:18,400
that there is defined at a trade-off of

663
00:19:16,720 --> 00:19:19,440
having more false positives so kind of

664
00:19:18,400 --> 00:19:20,960
set this

665
00:19:19,440 --> 00:19:24,080
where it works for you and you can kind

666
00:19:20,960 --> 00:19:27,039
of play around with it a little bit

667
00:19:24,080 --> 00:19:28,399
so when you graph it with um a band

668
00:19:27,039 --> 00:19:29,120
defined it looks a little something like

669
00:19:28,400 --> 00:19:32,080
this so i

670
00:19:29,120 --> 00:19:32,959
set this to i believe like 23 times the

671
00:19:32,080 --> 00:19:34,799
95

672
00:19:32,960 --> 00:19:36,000
confidence interval for what the slope

673
00:19:34,799 --> 00:19:38,639
of that line was

674
00:19:36,000 --> 00:19:40,000
and you can pretty clearly see like okay

675
00:19:38,640 --> 00:19:41,200
most of the stuff is inside those two

676
00:19:40,000 --> 00:19:43,200
red lines and there's some stuff

677
00:19:41,200 --> 00:19:44,799
outside it those look like they probably

678
00:19:43,200 --> 00:19:46,400
should be something i want to know about

679
00:19:44,799 --> 00:19:47,840
um doing it this way returned about

680
00:19:46,400 --> 00:19:49,520
eight and a half percent of the initial

681
00:19:47,840 --> 00:19:50,320
data set is things that were defined as

682
00:19:49,520 --> 00:19:52,000
outliers

683
00:19:50,320 --> 00:19:54,159
so cool that's a much more manageable

684
00:19:52,000 --> 00:19:55,520
number like i would want to look at 7

685
00:19:54,160 --> 00:19:56,880
000 things with my eyes because my

686
00:19:55,520 --> 00:19:58,559
attention span isn't that long but like

687
00:19:56,880 --> 00:20:00,799
600 things i can probably do that

688
00:19:58,559 --> 00:20:00,799
right

689
00:20:02,640 --> 00:20:06,000
so what i did is i simply spit all that

690
00:20:04,320 --> 00:20:07,918
stuff out to csv and started looking

691
00:20:06,000 --> 00:20:09,440
through it and sure enough i had

692
00:20:07,919 --> 00:20:10,559
originally seated six intentionally

693
00:20:09,440 --> 00:20:12,080
obfuscated commands

694
00:20:10,559 --> 00:20:14,320
in this data set and i got all six of

695
00:20:12,080 --> 00:20:15,678
them so really um i got a zero percent

696
00:20:14,320 --> 00:20:17,360
false negative rate i did find

697
00:20:15,679 --> 00:20:18,559
everything that i needed to find

698
00:20:17,360 --> 00:20:20,559
there were quite a few things that wound

699
00:20:18,559 --> 00:20:21,039
up looking you know fairly weird right

700
00:20:20,559 --> 00:20:23,200
but

701
00:20:21,039 --> 00:20:24,640
they were they wanted being benign human

702
00:20:23,200 --> 00:20:25,280
readable things that i could explain

703
00:20:24,640 --> 00:20:27,919
away

704
00:20:25,280 --> 00:20:29,600
um so that resultant set of stuff is is

705
00:20:27,919 --> 00:20:31,520
enough for a human to go

706
00:20:29,600 --> 00:20:32,959
process so again i couldn't really

707
00:20:31,520 --> 00:20:34,320
automate this away this is really not

708
00:20:32,960 --> 00:20:35,280
high fidelity enough for static

709
00:20:34,320 --> 00:20:37,200
detection

710
00:20:35,280 --> 00:20:39,520
but it wound up being a really great

711
00:20:37,200 --> 00:20:43,200
hunting exercise and super useful so

712
00:20:39,520 --> 00:20:45,440
i think i got a good win out of this one

713
00:20:43,200 --> 00:20:47,679
so one of the reasons i really like this

714
00:20:45,440 --> 00:20:49,919
kind of investigation here

715
00:20:47,679 --> 00:20:51,440
um is because it wound up like it wanted

716
00:20:49,919 --> 00:20:53,200
being the simplest and most elegant

717
00:20:51,440 --> 00:20:55,039
solution was the most effective thing

718
00:20:53,200 --> 00:20:56,720
i didn't need to train some sort of

719
00:20:55,039 --> 00:20:58,320
complex algorithm here like i didn't

720
00:20:56,720 --> 00:20:58,799
need to do anything really ridiculous it

721
00:20:58,320 --> 00:21:01,439
was really

722
00:20:58,799 --> 00:21:02,960
sort of like fairly basic statistics

723
00:21:01,440 --> 00:21:05,440
stuff gave me the best results

724
00:21:02,960 --> 00:21:06,880
and not only that but it was really the

725
00:21:05,440 --> 00:21:07,919
simplest regression i could do on the

726
00:21:06,880 --> 00:21:09,440
simplest

727
00:21:07,919 --> 00:21:11,360
use case that i could come up with was

728
00:21:09,440 --> 00:21:13,280
the most effective thing so

729
00:21:11,360 --> 00:21:15,360
this is i think a really effective way

730
00:21:13,280 --> 00:21:16,960
of finding things that are

731
00:21:15,360 --> 00:21:18,799
um powershell commands running your

732
00:21:16,960 --> 00:21:20,640
environment that are the most

733
00:21:18,799 --> 00:21:22,158
likely to be obfuscated and the most

734
00:21:20,640 --> 00:21:23,919
likely to be suspicious

735
00:21:22,159 --> 00:21:25,200
and this is a repeatable analysis so

736
00:21:23,919 --> 00:21:25,919
this can be iterated we can do this

737
00:21:25,200 --> 00:21:27,679
again and again

738
00:21:25,919 --> 00:21:29,520
and this can be shared with people and

739
00:21:27,679 --> 00:21:30,799
that's what i'm what i really want to do

740
00:21:29,520 --> 00:21:33,280
today

741
00:21:30,799 --> 00:21:35,120
so really this is where i say like okay

742
00:21:33,280 --> 00:21:38,480
everybody else please take it from here

743
00:21:35,120 --> 00:21:41,039
um this will eventually be on github.com

744
00:21:38,480 --> 00:21:43,120
target unfortunately the approval

745
00:21:41,039 --> 00:21:44,879
process for doing that took longer than

746
00:21:43,120 --> 00:21:46,879
the time delta between when i wrote this

747
00:21:44,880 --> 00:21:48,320
talk and today um so it'll eventually be

748
00:21:46,880 --> 00:21:50,400
there however what i will do is i will

749
00:21:48,320 --> 00:21:52,240
post my analysis notebook in my hallway

750
00:21:50,400 --> 00:21:54,240
chat after when i'm done here so

751
00:21:52,240 --> 00:21:56,000
whoever wants it please grab it and go

752
00:21:54,240 --> 00:21:58,640
try this all right so i would love to

753
00:21:56,000 --> 00:21:59,919
hear back from everyone next week next

754
00:21:58,640 --> 00:22:01,760
month next year

755
00:21:59,919 --> 00:22:03,120
and tell me like yeah joe like i tried

756
00:22:01,760 --> 00:22:04,720
this in my environment and

757
00:22:03,120 --> 00:22:06,239
it worked i found some stuff and i

758
00:22:04,720 --> 00:22:07,520
investigated in this like this is real

759
00:22:06,240 --> 00:22:09,039
world and it works

760
00:22:07,520 --> 00:22:11,360
so i would love to hear back from this

761
00:22:09,039 --> 00:22:12,879
please go check my code try it

762
00:22:11,360 --> 00:22:14,479
you know when i get it up on github

763
00:22:12,880 --> 00:22:15,760
semi-pr is like let's let's talk about

764
00:22:14,480 --> 00:22:16,720
this and make this a cool thing that we

765
00:22:15,760 --> 00:22:20,240
can share

766
00:22:16,720 --> 00:22:22,240
so um i would love to hear that and

767
00:22:20,240 --> 00:22:23,840
that's really all i got that's my time

768
00:22:22,240 --> 00:22:26,240
thank you all for your attendance today

769
00:22:23,840 --> 00:22:27,360
thank you so much to sans uh and on a

770
00:22:26,240 --> 00:22:29,360
personal note

771
00:22:27,360 --> 00:22:30,639
um please be safe and healthy out there

772
00:22:29,360 --> 00:22:32,000
you know things get scary

773
00:22:30,640 --> 00:22:34,080
take care of yourselves take care of

774
00:22:32,000 --> 00:22:40,960
your families however you defend family

775
00:22:34,080 --> 00:22:43,039
and thank you very much

776
00:22:40,960 --> 00:22:43,039
you

