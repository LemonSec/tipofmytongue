1
00:00:00,600 --> 00:00:02,869
(dramatic music)

2
00:00:10,143 --> 00:00:12,545
(applause)

3
00:00:12,545 --> 00:00:14,214
- A lot of us collect IOCs.

4
00:00:14,214 --> 00:00:16,016
It's a thing, we
do in the industry.

5
00:00:17,417 --> 00:00:21,454
It's kinda painful at
times so, what do you do?

6
00:00:21,454 --> 00:00:23,089
Most of us turn to a vendor.

7
00:00:23,089 --> 00:00:26,726
We find a bunch of projects,
so on and so forth.

8
00:00:27,894 --> 00:00:29,595
I went down this road
and it was not the most

9
00:00:29,596 --> 00:00:32,131
pleasant experience in the
world and so I ended up

10
00:00:32,131 --> 00:00:33,132
building my own.

11
00:00:34,367 --> 00:00:36,102
Here to talk about
that, I'm curious.

12
00:00:36,102 --> 00:00:40,072
We've talked a lot about
classic network infrastructure.

13
00:00:40,073 --> 00:00:45,045
How many people here are
using Adibus, Azure, JCP,

14
00:00:45,812 --> 00:00:46,479
raise your hands.

15
00:00:48,715 --> 00:00:52,118
Wow, okay, there's
like three of you.

16
00:00:52,118 --> 00:00:53,386
Awesome.

17
00:00:53,386 --> 00:00:54,921
The good news is that
you don't actually have

18
00:00:54,921 --> 00:00:58,024
to have your infrastructure
based in ADLS to use this.

19
00:00:59,426 --> 00:01:00,927
Hopefully that puts some
of you in little bit

20
00:01:00,927 --> 00:01:02,429
of a position to check it out.

21
00:01:03,596 --> 00:01:06,098
Anyway, this is the
story of what I built.

22
00:01:07,133 --> 00:01:09,936
This is the
obligatory, who I am,

23
00:01:09,936 --> 00:01:11,438
what I do, that sort of thing.

24
00:01:12,505 --> 00:01:13,940
If you like credential
alphabet soup,

25
00:01:13,940 --> 00:01:15,708
you can insert whatever
you want there,

26
00:01:15,708 --> 00:01:17,944
if it makes you feel better.

27
00:01:17,944 --> 00:01:19,345
I don't really care
much for credentials.

28
00:01:19,345 --> 00:01:22,182
I kinda like to base it
on what the person has

29
00:01:22,182 --> 00:01:23,016
to bring about you.

30
00:01:23,016 --> 00:01:24,617
So, that's me.

31
00:01:27,220 --> 00:01:29,622
The one that doesn't get
my employer in trouble.

32
00:01:31,491 --> 00:01:34,060
This is something
I built on my own.

33
00:01:34,060 --> 00:01:35,528
It was frustration out
of something I worked,

34
00:01:35,528 --> 00:01:37,697
did at work, but it was
something I built on my own.

35
00:01:37,697 --> 00:01:40,600
So, I don't want to get them
in trouble for anything I say.

36
00:01:42,035 --> 00:01:44,904
This is probably not the
best slide in the world.

37
00:01:44,904 --> 00:01:46,573
I had too much
content, so I ended up

38
00:01:46,573 --> 00:01:47,841
cutting most of the memes.

39
00:01:47,841 --> 00:01:49,675
So, this warning is
quite irrelevant.

40
00:01:53,546 --> 00:01:55,081
There's a couple things
I'm gonna talk about.

41
00:01:55,081 --> 00:01:56,950
Why I did it, the
details of that.

42
00:01:56,950 --> 00:01:58,384
What's it's aiming to solve.

43
00:01:59,886 --> 00:02:02,354
Where it currently stands
and where to go from here.

44
00:02:02,355 --> 00:02:03,923
People will want to use it,

45
00:02:03,923 --> 00:02:05,458
contribute to it,
that sort of thing.

46
00:02:05,458 --> 00:02:07,026
It's gonna be all open sourced.

47
00:02:08,228 --> 00:02:11,731
Make public button,
a couple hours ago.

48
00:02:11,731 --> 00:02:13,466
As of right now, it
is available for you

49
00:02:13,466 --> 00:02:15,068
to abuse and criticize.

50
00:02:17,070 --> 00:02:18,971
So, why build this?

51
00:02:20,373 --> 00:02:21,840
I went to a lot of
different vendors

52
00:02:21,841 --> 00:02:24,878
for threat intel aggregation.

53
00:02:24,878 --> 00:02:28,047
Start intelligence platforms,
whatever you wanna call them.

54
00:02:28,047 --> 00:02:32,018
And the more I dug, the
more kind of upset I got

55
00:02:32,018 --> 00:02:34,120
with the fact that they
wanted ton of money

56
00:02:34,120 --> 00:02:37,991
for functionality that
either wasn't built in,

57
00:02:37,991 --> 00:02:41,227
they bolt it on,
made you pay for it.

58
00:02:42,795 --> 00:02:44,930
It was not my favorite
thing in the world.

59
00:02:44,931 --> 00:02:48,234
I live in a world where
automation rules everything.

60
00:02:48,234 --> 00:02:49,903
It's a fairly large scale.

61
00:02:49,903 --> 00:02:53,972
If you're tryin' to do
this sort of aggregation

62
00:02:53,973 --> 00:02:56,442
and then compare it to a
whole bunch of endpoints,

63
00:02:56,442 --> 00:02:58,645
it gets really hard
to do without an API,

64
00:02:59,812 --> 00:03:01,347
and automation,
that sort of thing.

65
00:03:04,350 --> 00:03:06,920
I stole this
directly from Scott.

66
00:03:06,920 --> 00:03:09,022
I didn't even bother
to disguise this one.

67
00:03:09,022 --> 00:03:10,390
This is literally his slide,

68
00:03:10,390 --> 00:03:12,257
that I just kinda
put on my template.

69
00:03:13,760 --> 00:03:15,561
This is really important,
though, because we're talking

70
00:03:15,562 --> 00:03:18,698
about IOCs and it's
important to realize

71
00:03:18,698 --> 00:03:20,066
that the thing that
I'm building here

72
00:03:20,066 --> 00:03:22,869
really fits mostly into
three, four, and five.

73
00:03:24,037 --> 00:03:25,772
It's still important to
know that one and two

74
00:03:25,772 --> 00:03:28,107
are still way more
valuable for the most part.

75
00:03:28,107 --> 00:03:30,710
Just keep that in
mind as we do this.

76
00:03:30,710 --> 00:03:33,513
Not all your eggs in the
open threaded tele-basket.

77
00:03:37,517 --> 00:03:39,319
The most vendors
that I talked to,

78
00:03:39,319 --> 00:03:42,622
and again, I'm sorry, this is
not directed at all vendors.

79
00:03:42,622 --> 00:03:44,357
This is an amalgamation
of vendors.

80
00:03:45,825 --> 00:03:49,728
It was all basically IOCs and
all of those IOCs turned out

81
00:03:49,729 --> 00:03:54,367
to be just open sourced feeds
which they had then renamed,

82
00:03:54,367 --> 00:03:56,268
and so on and so forth.

83
00:03:56,269 --> 00:03:58,404
The data was pretty unoriginal.

84
00:03:58,404 --> 00:04:00,740
It took some digging, but
sometimes even viewing

85
00:04:00,740 --> 00:04:02,508
source on webpages
would show you

86
00:04:02,508 --> 00:04:06,646
that they had not even bothered
to actually rename the feed

87
00:04:07,780 --> 00:04:09,115
inside the webpage.

88
00:04:09,115 --> 00:04:11,985
It was just hidden
behind their code.

89
00:04:14,287 --> 00:04:15,121
Welcome, meme.

90
00:04:17,790 --> 00:04:19,192
Intelligence.

91
00:04:19,192 --> 00:04:21,928
When I say thread intelligence,
I usually want to think

92
00:04:21,928 --> 00:04:23,830
of something that is a
little more intelligence

93
00:04:23,830 --> 00:04:26,366
than actually just a
string or an IP address

94
00:04:26,366 --> 00:04:27,800
or something like that.

95
00:04:27,800 --> 00:04:31,204
I found a lot of the
times, WHOIS information,

96
00:04:31,204 --> 00:04:35,141
sometimes was there,
maybe-ish, depending sometimes

97
00:04:35,141 --> 00:04:38,211
that WHOIS information
was ancient.

98
00:04:38,211 --> 00:04:39,712
There are bunch of times
when you'd have to go

99
00:04:39,712 --> 00:04:41,514
to multiple sources and
find that it was different

100
00:04:41,514 --> 00:04:44,183
because someone had
done a query a year ago,

101
00:04:44,183 --> 00:04:47,219
and that was what the WHOIS
information came from.

102
00:04:47,220 --> 00:04:49,922
Even lost context, with the
renaming of those things.

103
00:04:53,526 --> 00:04:55,695
This one seems super
important to me,

104
00:04:55,695 --> 00:04:56,896
the more I dug in to it.

105
00:04:57,997 --> 00:04:58,931
It's not really
intelligent if you're

106
00:04:58,931 --> 00:05:00,332
just putting the same thing out

107
00:05:00,333 --> 00:05:02,135
and putting no additional
insight around it.

108
00:05:04,737 --> 00:05:06,539
You could actually
lose information.

109
00:05:07,974 --> 00:05:10,743
SSH brute forcing tells you
something about your attacker.

110
00:05:11,911 --> 00:05:13,780
Turning that into
malicious activity,

111
00:05:15,515 --> 00:05:17,183
probably less important.

112
00:05:17,183 --> 00:05:20,853
Same thing with the phishing
URL targeting Office 365.

113
00:05:20,853 --> 00:05:24,190
That, if you use Office 365,
is really important to know.

114
00:05:24,190 --> 00:05:26,926
If you don't, you
probably don't care.

115
00:05:28,094 --> 00:05:30,096
If you turn that in
credential harvesting,

116
00:05:31,464 --> 00:05:32,965
your guess is as good as mine.

117
00:05:36,035 --> 00:05:39,272
A lot of them build as we
have targeted intelligence

118
00:05:39,272 --> 00:05:41,641
for your threat
information platform,

119
00:05:41,641 --> 00:05:42,909
whatever you're gonna do.

120
00:05:44,377 --> 00:05:46,346
That's basically a Google
search for most of those,

121
00:05:46,346 --> 00:05:47,447
at least that I found.

122
00:05:48,881 --> 00:05:52,417
Given five or 10 keywords,
your organization name,

123
00:05:52,418 --> 00:05:54,687
something that's
relevant to you, energy,

124
00:05:54,687 --> 00:05:56,255
something like that.

125
00:05:56,255 --> 00:05:57,657
And they'll give
you the results back

126
00:05:57,657 --> 00:06:01,127
from whatever you can
get in their platform.

127
00:06:02,662 --> 00:06:05,897
That doesn't really call
targeted intelligence to me.

128
00:06:07,400 --> 00:06:08,835
Couple of them
literally came back

129
00:06:08,835 --> 00:06:10,570
with their own
marketing campaigns.

130
00:06:11,804 --> 00:06:14,173
Not really a threat, at
least as far as I know.

131
00:06:16,476 --> 00:06:18,478
And then this was my
biggest gripe, honestly.

132
00:06:18,478 --> 00:06:20,179
This drove me absolutely insane.

133
00:06:22,482 --> 00:06:24,083
Entry costs for most
of these platforms

134
00:06:24,083 --> 00:06:28,321
is somewhere between
$100,000 and $400,000.

135
00:06:29,989 --> 00:06:31,758
Some of them were a
little higher than that.

136
00:06:31,758 --> 00:06:33,558
I don't think anyone
fell below 100.

137
00:06:35,428 --> 00:06:37,663
For me, people are way
more valuable than any tool

138
00:06:37,663 --> 00:06:39,866
you're gonna find out there.

139
00:06:39,866 --> 00:06:42,568
You need tools by necessity to
deal with the amount of data,

140
00:06:42,568 --> 00:06:45,638
but I can buy a couple
of really good analysts

141
00:06:45,638 --> 00:06:46,972
for that amount of money.

142
00:06:46,973 --> 00:06:48,841
And I would much
rather spend it there,

143
00:06:48,841 --> 00:06:50,810
than pay someone to
give me information

144
00:06:50,810 --> 00:06:53,646
that I'm only probably gonna
use five to 10% of the time.

145
00:06:54,814 --> 00:06:58,384
What it gets you
varies, by vendor,

146
00:06:58,384 --> 00:07:00,520
but usually, it's
pretty limited.

147
00:07:04,390 --> 00:07:05,758
So, again, these
are all vendors.

148
00:07:05,758 --> 00:07:07,960
They're all providing a service.

149
00:07:07,960 --> 00:07:10,662
So, of course you're gonna
wanna pay for everything.

150
00:07:11,531 --> 00:07:12,765
That's clearly how we all work.

151
00:07:12,765 --> 00:07:14,866
We all just wanna
give out more money.

152
00:07:14,867 --> 00:07:16,736
API access typically is bolt on.

153
00:07:16,736 --> 00:07:19,572
You wanna pay more,
more users, add a fee,

154
00:07:19,572 --> 00:07:21,507
even if it's open source,
some people wanted

155
00:07:21,507 --> 00:07:22,975
to charge for it.

156
00:07:22,975 --> 00:07:24,644
Literally, the free data that
I can get off the internet

157
00:07:24,644 --> 00:07:26,879
you want me to
pay you to ingest.

158
00:07:26,879 --> 00:07:28,381
That just hurts me.

159
00:07:30,149 --> 00:07:32,151
Bulk API access.

160
00:07:32,151 --> 00:07:34,086
Literally, your first born.

161
00:07:34,086 --> 00:07:37,390
That was probably the biggest
thing I wanted to solve here.

162
00:07:37,390 --> 00:07:39,759
And I don't know how many people
here use Chatbox or Slack,

163
00:07:39,759 --> 00:07:41,294
or whatever, in their
day to day lives.

164
00:07:41,294 --> 00:07:43,628
But, I found it actually
makes our team's lives

165
00:07:43,629 --> 00:07:45,164
a lot easier.

166
00:07:45,164 --> 00:07:47,933
Even if it's just sharing
information in the context

167
00:07:47,934 --> 00:07:50,603
of a conversation we're having.

168
00:07:50,603 --> 00:07:52,171
It's a lot easier to say,

169
00:07:52,171 --> 00:07:55,141
"Hey Chatbot, give me
the information for X."

170
00:07:55,141 --> 00:07:56,342
Rather than going
and finding it,

171
00:07:56,342 --> 00:07:58,211
pasting it in, worrying
about formatting it,

172
00:07:58,211 --> 00:07:59,712
all that sort of thing.

173
00:07:59,712 --> 00:08:01,447
It's right available, the rest
of the team can look at it.

174
00:08:01,447 --> 00:08:02,915
I find that super useful.

175
00:08:02,915 --> 00:08:06,686
And I couldn't find a single
platform that had that.

176
00:08:06,686 --> 00:08:08,387
They may have that
now, as I've been told,

177
00:08:08,387 --> 00:08:10,356
someone actually built one,

178
00:08:10,356 --> 00:08:12,992
but when I started down this
road, that didn't exist.

179
00:08:16,128 --> 00:08:18,063
Last big gripe and then I'll
actually probably get on

180
00:08:18,064 --> 00:08:19,732
to the important part of this.

181
00:08:20,967 --> 00:08:23,034
These were some of the
things that I was told

182
00:08:23,035 --> 00:08:28,040
by these vendors,
quite literally,

183
00:08:28,040 --> 00:08:30,009
and they're quite terrifying.

184
00:08:30,009 --> 00:08:31,511
I don't know if you
can read it all,

185
00:08:31,511 --> 00:08:36,382
but yes, if you wanna query
it more than once in a minute?

186
00:08:37,984 --> 00:08:40,319
No, or you can pay me for it.

187
00:08:40,318 --> 00:08:42,255
More than 20 queries a day?

188
00:08:42,255 --> 00:08:44,490
Also, you know, not a thing.

189
00:08:45,791 --> 00:08:47,226
I don't know about you
guys, I do more than

190
00:08:47,226 --> 00:08:48,694
20 lookups in a given day.

191
00:08:50,630 --> 00:08:51,464
That's the thing.

192
00:08:52,632 --> 00:08:57,469
Yeah, so that was kind
of the eventual feeling

193
00:08:57,470 --> 00:08:59,739
of where I landed after
doing this research

194
00:08:59,739 --> 00:09:01,073
and talking to people.

195
00:09:02,909 --> 00:09:04,810
It was pretty painful.

196
00:09:04,810 --> 00:09:07,546
Kind of like trying to
cut bread with a doorstop.

197
00:09:09,315 --> 00:09:12,552
I honestly have no idea
why this gif originated,

198
00:09:12,552 --> 00:09:13,986
but it's kinda awesome.

199
00:09:17,156 --> 00:09:19,058
So, yes, I set out
to build something

200
00:09:19,058 --> 00:09:21,427
that would probably do
most of the functionality

201
00:09:21,427 --> 00:09:23,095
that I wanted from this.

202
00:09:23,095 --> 00:09:24,897
And wouldn't cost
me an arm and a leg,

203
00:09:24,897 --> 00:09:26,465
and possibly a couple analysts.

204
00:09:29,101 --> 00:09:32,672
It's named ElasticIntel
because I'm terribly uncreative

205
00:09:32,672 --> 00:09:33,906
and also a hypocrite.

206
00:09:33,906 --> 00:09:35,974
I really should have
named it Elastic IOC,

207
00:09:37,443 --> 00:09:39,978
because there's not a ton
of intelligence behind it.

208
00:09:39,979 --> 00:09:42,248
Man, I just went on that rant.

209
00:09:42,248 --> 00:09:45,885
But, yeah, it's based
primarily in Elasticsearch.

210
00:09:45,885 --> 00:09:48,187
It aggregates a whole
bunch of IOC feeds,

211
00:09:48,187 --> 00:09:49,922
wherever you wanna get them,

212
00:09:49,922 --> 00:09:51,190
usually available
on the internet.

213
00:09:51,190 --> 00:09:54,560
CSV form, text form,
so on and so forth.

214
00:09:54,560 --> 00:09:57,095
It's got a really
robust API for searching

215
00:09:57,096 --> 00:09:58,464
whatever you want.

216
00:09:58,464 --> 00:10:00,499
It's actually just
the Elasticsearch API,

217
00:10:00,499 --> 00:10:02,301
which I don't know if
anyone's familiar with,

218
00:10:02,301 --> 00:10:05,504
but you can do whole
things with that.

219
00:10:05,504 --> 00:10:08,374
It comes with a slack bot,
yeah, something to talk to.

220
00:10:09,642 --> 00:10:14,647
And it's very easy
to get started.

221
00:10:15,815 --> 00:10:18,484
The idea was that you
should take one command,

222
00:10:18,484 --> 00:10:19,719
and one command only,

223
00:10:19,719 --> 00:10:22,088
to be able to spin
up the entire thing.

224
00:10:22,088 --> 00:10:25,858
Usually, when you kinda
get an open source platform

225
00:10:25,858 --> 00:10:27,492
of some sort, you
have to wade your way

226
00:10:27,493 --> 00:10:29,095
through documentation
for six hours,

227
00:10:29,095 --> 00:10:30,563
trying to figure out
why it's not working.

228
00:10:30,563 --> 00:10:33,064
Go through dependency
hell, that sort of thing.

229
00:10:34,266 --> 00:10:35,468
I wanted that to
not be a problem.

230
00:10:35,468 --> 00:10:38,771
And I wanted even Joe's
shop with two guys

231
00:10:38,771 --> 00:10:42,274
who are really only doing
intelligence one day a week

232
00:10:42,274 --> 00:10:44,644
to be able to stand this
up and not worry about it.

233
00:10:47,546 --> 00:10:50,683
So, this is kinda what
I set out to make.

234
00:10:50,683 --> 00:10:53,252
Wanted roughly the same
data, assuming that it's all

235
00:10:53,252 --> 00:10:54,520
open source feeds.

236
00:10:54,520 --> 00:10:57,390
Obviously, there are
some stuff that people

237
00:10:57,390 --> 00:11:00,292
are collecting there
that is not available.

238
00:11:00,292 --> 00:11:01,927
I wanted that to be
able to be integrated

239
00:11:01,927 --> 00:11:03,663
but not built in by
default, obviously,

240
00:11:03,663 --> 00:11:05,765
if you can't choose what
you're gonna pay for.

241
00:11:07,199 --> 00:11:09,435
I run my own version of this,

242
00:11:09,435 --> 00:11:10,969
and I don't really wanna spend

243
00:11:10,970 --> 00:11:13,739
a couple thousand dollars a
month to run it for myself.

244
00:11:14,907 --> 00:11:16,008
I'm not made of money.

245
00:11:17,410 --> 00:11:19,310
And I wanted it to be pretty
performant to the point

246
00:11:19,311 --> 00:11:23,916
where I could check most,
if not all, of the IPs

247
00:11:23,916 --> 00:11:27,653
in my entire organization
against this, in real time.

248
00:11:31,390 --> 00:11:33,025
Talked about making
it usable already,

249
00:11:33,025 --> 00:11:36,896
but the biggest part was
not only from a stand it up

250
00:11:36,896 --> 00:11:38,830
on one command, but if
you wanted to update it.

251
00:11:38,831 --> 00:11:40,900
New version, also one command.

252
00:11:40,900 --> 00:11:43,269
You wanna make
another environment,

253
00:11:43,269 --> 00:11:45,037
your dev environment, cool.

254
00:11:45,037 --> 00:11:46,305
You can also support that.

255
00:11:46,305 --> 00:11:47,939
We can support three
versions at once.

256
00:11:49,642 --> 00:11:51,077
Company size doesn't matter.

257
00:11:51,077 --> 00:11:53,779
Maintenance, nice
part about building

258
00:11:53,779 --> 00:11:55,147
on everyone else's services

259
00:11:55,147 --> 00:11:57,483
is you don't have
to deal with it.

260
00:11:57,483 --> 00:12:00,453
And API is basically the
primary component of it,

261
00:12:01,454 --> 00:12:02,655
before anything else.

262
00:12:04,824 --> 00:12:06,291
You've all seen this one.

263
00:12:06,292 --> 00:12:08,694
I'm gonna throw the nice
serverless buzz word at you,

264
00:12:08,694 --> 00:12:11,296
because, technically,
it's serverless.

265
00:12:11,297 --> 00:12:12,765
I don't have any servers.

266
00:12:13,699 --> 00:12:15,166
But it is important to remember,

267
00:12:15,167 --> 00:12:17,103
especially with intel like this,

268
00:12:17,103 --> 00:12:19,238
it is just someone
else's computer.

269
00:12:20,773 --> 00:12:22,041
So, you don't worry
about patching,

270
00:12:22,041 --> 00:12:24,610
but all that sensitive
stuff you're storing,

271
00:12:24,610 --> 00:12:26,312
probably something
to worry about.

272
00:12:28,981 --> 00:12:30,382
Obviously, there's not
a lot of people familiar

273
00:12:30,382 --> 00:12:32,718
with AWS, at least
intimately here,

274
00:12:32,718 --> 00:12:35,221
so it's probably a good
thing I put this in here.

275
00:12:35,221 --> 00:12:37,556
I'll talk about exactly
what all of these are,

276
00:12:37,556 --> 00:12:40,025
so you understand what
it's doing, just briefly.

277
00:12:41,093 --> 00:12:42,795
These are the
services that it uses.

278
00:12:44,196 --> 00:12:46,232
Elasticsearch service is
relatively self explanatory.

279
00:12:46,232 --> 00:12:50,202
Pay AWS money, they give you
an Elasticsearch cluster.

280
00:12:50,202 --> 00:12:51,604
It's about as simple as that.

281
00:12:52,571 --> 00:12:56,075
Lambda is serverless compute.

282
00:12:56,075 --> 00:12:58,544
Basically, you write
your code and send it off

283
00:12:58,544 --> 00:13:01,714
in a zip file to
AWS and they run it

284
00:13:01,714 --> 00:13:04,784
and return you the data
that your code generates.

285
00:13:04,784 --> 00:13:08,788
It means no more dealing
with a server to update,

286
00:13:08,788 --> 00:13:11,090
stand up, tear down,
anything like that.

287
00:13:11,090 --> 00:13:12,792
Basically, you give it and go.

288
00:13:12,792 --> 00:13:14,093
Which is super awesome.

289
00:13:15,895 --> 00:13:17,196
Simple notification service.

290
00:13:17,196 --> 00:13:20,266
This is basically your
message passing system.

291
00:13:20,266 --> 00:13:22,200
I give it a message,
it goes into a queue.

292
00:13:22,201 --> 00:13:23,602
Something else can read it.

293
00:13:23,602 --> 00:13:25,571
It can trigger some
events, that sort of thing.

294
00:13:27,540 --> 00:13:30,943
The API Gateway is a service
where you can essentially

295
00:13:30,943 --> 00:13:33,145
describe your API.

296
00:13:33,145 --> 00:13:34,413
So, if I give you a path,

297
00:13:34,413 --> 00:13:36,916
I can then attach
various parameters

298
00:13:36,916 --> 00:13:40,219
in that path to functions,
Lambda functions,

299
00:13:40,219 --> 00:13:42,154
to trigger various things.

300
00:13:42,154 --> 00:13:44,657
Parameters, that sort of
stuff, return the data.

301
00:13:44,657 --> 00:13:47,493
So, when you query it as a
user, it literally looks like

302
00:13:47,493 --> 00:13:49,829
you're just talking to a
random API on the internet.

303
00:13:51,230 --> 00:13:54,333
The other ones are the KMS,
Key Management Services,

304
00:13:54,333 --> 00:13:56,735
store your data securely,
basically passwords

305
00:13:56,735 --> 00:13:58,337
and that sort of
thing, API keys.

306
00:13:59,805 --> 00:14:01,372
Everyone's familiar with IAM
in the traditional sense.

307
00:14:01,373 --> 00:14:02,975
This is just Amazon's version.

308
00:14:04,410 --> 00:14:06,579
You get permission to X, you
don't, so on and so forth.

309
00:14:07,947 --> 00:14:11,483
S3, big, hard
drive in the cloud.

310
00:14:12,952 --> 00:14:15,754
And Cloudwatch is basically
where you store all the logs

311
00:14:15,754 --> 00:14:17,756
for everything that
I just talked about

312
00:14:17,756 --> 00:14:19,425
in terms of services.

313
00:14:19,425 --> 00:14:21,694
So, what did your Lambda do,
what did your API gateway do,

314
00:14:21,694 --> 00:14:22,627
that sort of stuff.

315
00:14:25,497 --> 00:14:27,599
We're gonna talk
about some code now.

316
00:14:27,600 --> 00:14:30,135
I have strong
feelings about this.

317
00:14:32,538 --> 00:14:34,139
Please, please,
please, please, please

318
00:14:34,139 --> 00:14:36,175
stop writing things in Python2.

319
00:14:36,175 --> 00:14:38,577
It's literally the windows
of XP, at this point.

320
00:14:40,079 --> 00:14:41,146
It's gotta go away.

321
00:14:41,146 --> 00:14:42,214
Stop it.

322
00:14:42,214 --> 00:14:43,849
That ... just stop.

323
00:14:46,151 --> 00:14:47,353
Infrastructure as code.

324
00:14:47,353 --> 00:14:49,255
It's a cool new
thing to talk about.

325
00:14:49,255 --> 00:14:52,157
It's also really cool because
it makes my life way better.

326
00:14:53,425 --> 00:14:55,761
Anyone familiar with
Terraform out there?

327
00:14:57,630 --> 00:14:59,164
Not a single hand, awesome.

328
00:14:59,164 --> 00:15:00,733
Oh, wait, there's
one in the back.

329
00:15:00,733 --> 00:15:01,566
You're awesome.

330
00:15:02,902 --> 00:15:05,905
Basically, what Terraform
does, is it says,

331
00:15:05,905 --> 00:15:07,406
"I want a server.

332
00:15:07,406 --> 00:15:09,742
"I'm gonna give you the
properties of that server.

333
00:15:09,742 --> 00:15:12,678
"When I run this code,
you will create it

334
00:15:12,678 --> 00:15:14,647
"in whatever service
provider you're using."

335
00:15:14,647 --> 00:15:16,749
Amazon, Google Cloud,
something like that.

336
00:15:17,950 --> 00:15:20,352
Really cool part about
that is that it means

337
00:15:21,387 --> 00:15:23,289
whatever you
describe in that code

338
00:15:23,289 --> 00:15:25,858
is what the state of
your infrastructure is.

339
00:15:25,858 --> 00:15:27,226
Wanna run it again?

340
00:15:27,226 --> 00:15:29,795
It'll put it back to
whatever is has drifted from.

341
00:15:29,795 --> 00:15:31,329
If you want 10 more servers?

342
00:15:31,330 --> 00:15:32,998
You literally just
increase the quantity

343
00:15:32,998 --> 00:15:34,800
to whatever you want them to be.

344
00:15:34,800 --> 00:15:38,670
Run the code again, and
you have 10 more servers.

345
00:15:38,671 --> 00:15:40,506
It's super, super useful

346
00:15:40,506 --> 00:15:43,842
for making really
repeatable infrastructure

347
00:15:43,842 --> 00:15:45,711
and also for handing
out cool little projects

348
00:15:45,711 --> 00:15:48,380
that nobody has to worry about
spinning out for themselves.

349
00:15:49,915 --> 00:15:51,550
But, of course,
that's complicated.

350
00:15:51,550 --> 00:15:54,486
So, I wrote some more Python
wrappers around the code

351
00:15:54,486 --> 00:15:56,155
to build the code
to run my code.

352
00:15:57,222 --> 00:15:58,057
Yeah.

353
00:15:59,224 --> 00:16:00,326
This is basically
what it looks like.

354
00:16:00,326 --> 00:16:01,660
It's actually pretty simple.

355
00:16:03,095 --> 00:16:05,998
There's Feed Scheduler,
it's basically a cron job.

356
00:16:08,100 --> 00:16:10,469
Ingest some things, send
them all to Elasticsearch.

357
00:16:10,469 --> 00:16:12,771
User can talk to
whatever you want.

358
00:16:12,771 --> 00:16:15,841
And I added some intelligence

359
00:16:15,841 --> 00:16:17,309
in the form of something

360
00:16:17,309 --> 00:16:21,480
that we'll do WHOIS lookups
for you, automatically.

361
00:16:21,480 --> 00:16:24,984
So, our Feed Scheduler Lambda,
just checks once an hour

362
00:16:24,984 --> 00:16:27,119
to see if it's supposed
to be doing anything.

363
00:16:28,487 --> 00:16:30,823
If you've set a particular
feed to be ingested

364
00:16:30,823 --> 00:16:33,992
at eight o'clock, if it
happens to be eight o'clock,

365
00:16:33,993 --> 00:16:38,497
it will tell the Ingest
Lambda, ingest that thing.

366
00:16:38,497 --> 00:16:41,099
It basically just runs and
checks and sends a message off

367
00:16:41,100 --> 00:16:42,034
to say run things.

368
00:16:43,836 --> 00:16:45,904
This is kind of the
meat of everything.

369
00:16:47,773 --> 00:16:49,908
It subscribes to the
notification system

370
00:16:49,908 --> 00:16:52,011
whenever it gets a notification.

371
00:16:52,011 --> 00:16:55,046
It says, "Okay, I'm
supposed to do things.

372
00:16:55,047 --> 00:16:57,516
"Let me go out, get
the data for that feed.

373
00:16:58,884 --> 00:17:03,188
"Download it, I'm gonna parse
it, from whatever it is,

374
00:17:03,188 --> 00:17:07,358
"CSV, tab-separated,
something like that."

375
00:17:07,358 --> 00:17:09,494
And puts it's up
in Elastisearch.

376
00:17:09,494 --> 00:17:10,695
For anyone who's familiar,

377
00:17:10,695 --> 00:17:12,830
it's using the Python
panda's libraries,

378
00:17:14,165 --> 00:17:15,400
in the back end to make sure

379
00:17:15,401 --> 00:17:17,002
that I don't parse
things incorrectly,

380
00:17:17,002 --> 00:17:19,137
'cause I'm not smart
enough to write a parser.

381
00:17:19,137 --> 00:17:21,740
Figures, much better to make
somebody else do it for me.

382
00:17:24,410 --> 00:17:26,712
This is gonna tie
to our WHOIS things,

383
00:17:26,712 --> 00:17:30,115
but it's an interesting
conundrum here is that

384
00:17:30,115 --> 00:17:31,950
you're time boxed by Lambdas.

385
00:17:31,950 --> 00:17:34,887
You can run anything for
a max of five minutes.

386
00:17:34,887 --> 00:17:36,722
Which means, you're
gonna have to do things

387
00:17:36,722 --> 00:17:39,091
either quickly, or not at all.

388
00:17:40,292 --> 00:17:41,493
You also only pay
for what you use,

389
00:17:41,493 --> 00:17:42,727
which is a pretty great thing,

390
00:17:42,728 --> 00:17:44,530
because it means it
makes it a lot cheaper

391
00:17:44,530 --> 00:17:46,231
when you're not using it.

392
00:17:46,231 --> 00:17:47,666
I don't know about you guys,

393
00:17:47,666 --> 00:17:50,101
but I don't download
intel feeds all the time.

394
00:17:50,102 --> 00:17:52,037
Happens once a day, twice
a day, somethin' like that.

395
00:17:52,037 --> 00:17:53,839
And the rest of the
time, it just sits there.

396
00:17:56,241 --> 00:17:58,644
Do it in five minutes, but
the less time you do it,

397
00:17:58,644 --> 00:17:59,978
the cheaper it is.

398
00:17:59,978 --> 00:18:00,879
Super nice.

399
00:18:02,748 --> 00:18:05,851
How many people have
ever experimented
with Python threads?

400
00:18:07,886 --> 00:18:09,120
Did you guys have fun?

401
00:18:09,121 --> 00:18:10,989
Keep your hand up
if you had fun.

402
00:18:10,989 --> 00:18:12,191
Yeah, no one (laughing).

403
00:18:13,392 --> 00:18:15,627
It's not a thing, it's great.

404
00:18:15,627 --> 00:18:17,930
It's gotten better
in Python three.

405
00:18:17,930 --> 00:18:19,832
(clears throat) Sorry.

406
00:18:21,300 --> 00:18:22,533
It's a little harder in Lambda

407
00:18:22,534 --> 00:18:23,769
because they had
to do some things

408
00:18:23,769 --> 00:18:25,771
to make it so that
you didn't blow away

409
00:18:25,771 --> 00:18:27,906
all the underlying services.

410
00:18:27,906 --> 00:18:29,341
Basically, you
have a whole bunch

411
00:18:29,341 --> 00:18:31,476
of everyone's code running
next to each other.

412
00:18:31,477 --> 00:18:35,380
And if you happen to exhaust
the resources on that machine,

413
00:18:35,380 --> 00:18:38,951
you can crush somebody
else, or even yourself.

414
00:18:38,951 --> 00:18:42,221
So, they put in a bunch of
things in there to protect it.

415
00:18:42,221 --> 00:18:43,789
Turns out, you can get
around them a little bit,

416
00:18:43,789 --> 00:18:47,359
and actually utilize
threading inside of a Lambda

417
00:18:47,359 --> 00:18:51,597
to do things like, WHOIS
Lookups, really quickly.

418
00:18:56,101 --> 00:18:57,169
That's basically it.

419
00:18:59,538 --> 00:19:02,574
This is the reason that WHOIS
Lookups can take a while.

420
00:19:04,009 --> 00:19:06,245
The difference between making
100 queries and 10 queries,

421
00:19:06,245 --> 00:19:07,411
10 times.

422
00:19:08,614 --> 00:19:10,482
For those of you who
ever done this type

423
00:19:10,482 --> 00:19:13,585
of kind of network intensive
thing, it doesn't seem like

424
00:19:13,585 --> 00:19:14,786
it would be much
of a difference.

425
00:19:14,786 --> 00:19:17,356
But when you do
this 200,000 times,

426
00:19:17,356 --> 00:19:20,659
it takes quite a
bit of overhead,

427
00:19:20,659 --> 00:19:25,097
and one process that took
one second, or 1.25 seconds,

428
00:19:25,097 --> 00:19:26,732
gets multiplied out by a lot.

429
00:19:29,101 --> 00:19:30,369
I ended up doing this a lot,

430
00:19:30,369 --> 00:19:32,170
so it was a thing
to really address.

431
00:19:33,238 --> 00:19:34,640
This is the Whois Lambda.

432
00:19:36,074 --> 00:19:38,844
Runs every three minutes,
across 15 different regions,

433
00:19:38,844 --> 00:19:41,780
because I had to blow AWS's
limits away a little bit.

434
00:19:43,615 --> 00:19:47,186
Any IP in the system that does
not have WHOIS's information,

435
00:19:47,186 --> 00:19:48,887
it will automatically
retrieve it,

436
00:19:48,887 --> 00:19:50,789
and then go get the
WHOIS information.

437
00:19:52,224 --> 00:19:54,293
The reason that it's
across 15 different regions

438
00:19:54,293 --> 00:19:57,094
is that Amazon gets
angry if you try and make

439
00:19:57,095 --> 00:19:59,965
more than a few of
these in one region,

440
00:19:59,965 --> 00:20:01,199
'cause it's all IP-based.

441
00:20:01,200 --> 00:20:03,435
And you can actually get
yourself rate limited.

442
00:20:03,435 --> 00:20:04,636
So, we work around that.

443
00:20:06,371 --> 00:20:08,740
Updates it in Elasticsearch
and you can create

444
00:20:08,740 --> 00:20:09,942
to your heart's content.

445
00:20:12,211 --> 00:20:14,713
So, this is gonna be
the bit about feeds

446
00:20:14,713 --> 00:20:16,114
and how it all works.

447
00:20:16,114 --> 00:20:17,349
Sounds all complicated.

448
00:20:17,349 --> 00:20:19,117
It's really not.

449
00:20:19,117 --> 00:20:21,086
If you can write or read JSON,

450
00:20:21,086 --> 00:20:22,788
you're pretty much good to go.

451
00:20:24,056 --> 00:20:26,325
Even if you can't, you
can copy the template.

452
00:20:27,192 --> 00:20:28,260
That's pretty simple.

453
00:20:29,795 --> 00:20:31,330
This is what a feed looks like.

454
00:20:32,497 --> 00:20:35,434
We've already touched on
Bambenek before today.

455
00:20:35,434 --> 00:20:39,838
But, this is their C2 IP
infrastructure master list.

456
00:20:39,838 --> 00:20:41,240
It comes in CSV form.

457
00:20:42,674 --> 00:20:45,077
The primary indicator in
this list is an IP address.

458
00:20:46,645 --> 00:20:47,812
Moderately visible.

459
00:20:49,147 --> 00:20:51,582
But, basically, you
give it the URL,

460
00:20:51,583 --> 00:20:54,786
what you want it to
look like at the end,

461
00:20:54,786 --> 00:20:56,288
and what it looks
like currently.

462
00:20:56,288 --> 00:20:58,390
So, in that case, I didn't
wanna change any of the names

463
00:20:58,390 --> 00:21:00,259
for the source or
the destination.

464
00:21:00,259 --> 00:21:02,694
They're literally all
named the same thing.

465
00:21:02,694 --> 00:21:05,497
And this is all you have
to do to add a feed.

466
00:21:05,497 --> 00:21:07,566
It's literally, just fill
out this little form,

467
00:21:07,566 --> 00:21:09,701
put in the ... you know,
fill out the blanks,

468
00:21:09,701 --> 00:21:12,537
and add it back into
the folder structure

469
00:21:12,537 --> 00:21:16,208
that is in the project, and
it will start downloading it

470
00:21:16,208 --> 00:21:17,509
for whatever interval
you schedule.

471
00:21:17,509 --> 00:21:20,012
This one gets triggered
at 8AM in the morning.

472
00:21:21,013 --> 00:21:22,214
Pretty straight forward.

473
00:21:24,583 --> 00:21:26,285
End results of all of this.

474
00:21:26,285 --> 00:21:29,721
It's doing about
37 feeds right now.

475
00:21:29,721 --> 00:21:33,492
That 250K is kind
of a lie, actually.

476
00:21:33,492 --> 00:21:34,926
That was the average
over a few days,

477
00:21:34,926 --> 00:21:38,362
or one of the feeds
was very low activity.

478
00:21:38,363 --> 00:21:41,466
It's actually somewhere closer
to 500,000 a day, right now.

479
00:21:43,468 --> 00:21:48,440
Costs somewhere between $100
and $120 a month to run,

480
00:21:49,908 --> 00:21:53,678
which is a pretty far cry
from $100,000, or $400,000.

481
00:21:53,679 --> 00:21:55,714
So, I'm pretty
pleased with that one.

482
00:21:55,714 --> 00:21:57,249
If you wanna
downsize and not have

483
00:21:57,249 --> 00:21:58,583
quite the same performance
from the Elasticsearch,

484
00:21:58,583 --> 00:22:00,118
you can go even lower.

485
00:22:01,887 --> 00:22:04,356
You don't get charged
for API queries.

486
00:22:04,356 --> 00:22:05,557
That's my favorite part.

487
00:22:06,758 --> 00:22:09,594
We can query 100,000
times a day, or more

488
00:22:09,594 --> 00:22:13,699
and does not break a sweat,
which is pretty awesome.

489
00:22:13,699 --> 00:22:15,967
It will do 10,000
queries in a minute.

490
00:22:17,135 --> 00:22:19,738
So, if you have a
huge lookup, great.

491
00:22:19,738 --> 00:22:21,173
Go for it.

492
00:22:21,173 --> 00:22:22,808
I would love to see some people
actually break the limits.

493
00:22:22,808 --> 00:22:26,845
I pushed it up to 25,000 so far,

494
00:22:26,845 --> 00:22:28,580
and it did fall
over a little bit.

495
00:22:28,580 --> 00:22:31,149
But I can only make
bigger instances.

496
00:22:31,149 --> 00:22:32,383
That's cool.

497
00:22:32,384 --> 00:22:34,519
And the last part
is full text search.

498
00:22:34,519 --> 00:22:37,522
So, if you have used Splunk
or even Elasticsearch,

499
00:22:37,522 --> 00:22:39,091
or something like that,

500
00:22:39,091 --> 00:22:42,860
you can do a whole lot of
logical operation on the data

501
00:22:42,861 --> 00:22:44,763
in your IOCs.

502
00:22:44,763 --> 00:22:46,697
Which means that if you
wanna find something

503
00:22:46,698 --> 00:22:49,201
that hasn't been hitting
every couple hours

504
00:22:49,201 --> 00:22:53,538
for three different feeds, from
whatever WHOIS information,

505
00:22:53,538 --> 00:22:58,076
you can actually do that in
sort of a contextual manner,

506
00:22:58,076 --> 00:22:59,745
rather than just running
a raw string search,

507
00:22:59,745 --> 00:23:02,714
for whatever your
company name is.

508
00:23:02,714 --> 00:23:04,750
And I feel like that's
a lot more useful.

509
00:23:07,986 --> 00:23:09,654
If anyone is interested
in contributing,

510
00:23:09,654 --> 00:23:11,690
I would love some help on this.

511
00:23:11,690 --> 00:23:14,092
It's a lot of work to kinda
build something like this.

512
00:23:14,092 --> 00:23:16,828
It would be awesome if
people could give it a try.

513
00:23:16,828 --> 00:23:19,531
Even something as adding,
simple as adding more feeds.

514
00:23:20,699 --> 00:23:22,234
I went out and looked
for open sourced feeds.

515
00:23:22,234 --> 00:23:23,769
I'm sure people have favorites

516
00:23:23,769 --> 00:23:25,937
that are not in
this list so far.

517
00:23:25,937 --> 00:23:28,439
If you want the full list,
it's just in the folder

518
00:23:29,441 --> 00:23:31,209
on the project.

519
00:23:31,209 --> 00:23:33,745
Kibana dashboards
are always cool.

520
00:23:33,745 --> 00:23:36,313
They give you some really
interesting insights.

521
00:23:36,314 --> 00:23:38,150
If you want the ChatBot
to do different things,

522
00:23:38,150 --> 00:23:41,486
like keep you company,
when you're lonely in SOC,

523
00:23:41,486 --> 00:23:44,189
or what have you, that's cool.

524
00:23:44,189 --> 00:23:45,424
Totally willing
to take requests,

525
00:23:45,424 --> 00:23:47,292
if you wanna add
it, that's fine too.

526
00:23:49,161 --> 00:23:51,930
API-based feeds are something
I really wanna work on,

527
00:23:51,930 --> 00:23:54,332
and we need to get kind
of going to be able

528
00:23:54,332 --> 00:23:57,869
to query some of the
more interesting stuff.

529
00:23:57,869 --> 00:24:00,839
So, if you really feel like
tackling that one, go for it.

530
00:24:00,839 --> 00:24:03,707
It's something that's
on my list, as well.

531
00:24:03,708 --> 00:24:06,244
For those coders out there,
unit tests are a thing.

532
00:24:06,244 --> 00:24:09,113
They're kinda limited in
this project right now.

533
00:24:09,114 --> 00:24:11,750
It's not my best
work in that regard.

534
00:24:11,750 --> 00:24:14,085
But, you know, time.

535
00:24:14,085 --> 00:24:15,587
That's a big thing.

536
00:24:15,587 --> 00:24:17,155
And then the last thing
is adding integrations.

537
00:24:17,155 --> 00:24:19,291
Shodan integrations
to all IP addresses

538
00:24:19,291 --> 00:24:21,158
would be super cool.

539
00:24:21,159 --> 00:24:22,594
I think if you had
that automatically

540
00:24:22,594 --> 00:24:24,262
whenever you went to
look up an IP address,

541
00:24:24,262 --> 00:24:25,764
that would a huge time saver.

542
00:24:27,098 --> 00:24:29,067
A Pastebin Scraper is something
I've been tossing around

543
00:24:29,067 --> 00:24:31,169
for contextual type of....

544
00:24:31,169 --> 00:24:33,305
People dump something
with your keywords in it.

545
00:24:33,305 --> 00:24:34,439
I wanna pull that in here too.

546
00:24:34,439 --> 00:24:35,440
That would be great.

547
00:24:36,675 --> 00:24:39,644
So, yeah, that's kinda
where I wanna go.

548
00:24:39,644 --> 00:24:41,880
If there's something that
you would like from this

549
00:24:41,880 --> 00:24:44,182
that don't see anywhere, it
just doesn't appeal to you,

550
00:24:44,182 --> 00:24:46,017
whatever, reach out to me.

551
00:24:46,017 --> 00:24:48,854
I would love feedback on this,
if you want to do something,

552
00:24:48,854 --> 00:24:50,455
if there's a source you want,

553
00:24:50,455 --> 00:24:54,059
if there's an indicator
you want of some sort

554
00:24:54,059 --> 00:24:56,094
that's not your
typical indicator,

555
00:24:56,094 --> 00:24:56,928
let me know.

556
00:24:56,928 --> 00:24:58,163
Elasticsearch is awesome

557
00:24:58,163 --> 00:25:00,532
and it's all JSON, which
means you're not tied

558
00:25:00,532 --> 00:25:03,400
to a particular type,
meaning particular format,

559
00:25:03,401 --> 00:25:06,671
it'll take mostly key
value pairs for anything.

560
00:25:06,671 --> 00:25:08,807
Which is super, super useful,

561
00:25:08,807 --> 00:25:11,576
when you may not have the most
structured data in the world.

562
00:25:15,447 --> 00:25:16,915
That's the repo.

563
00:25:16,915 --> 00:25:18,483
If you wanna go find it,

564
00:25:18,483 --> 00:25:20,886
that's my clearly
classy Twitter handle.

565
00:25:22,921 --> 00:25:24,689
I actually go by SecurityClippy
most of the time,

566
00:25:24,689 --> 00:25:26,291
because I use a Windows laptop

567
00:25:26,291 --> 00:25:28,360
and everyone in my office
made fun of me for it.

568
00:25:28,360 --> 00:25:30,061
So, now I'm Clippy forever.

569
00:25:32,063 --> 00:25:33,698
See a ton of Windows
laptops in here,

570
00:25:33,698 --> 00:25:35,834
so you guys make me feel better.

571
00:25:35,834 --> 00:25:39,871
Anyway, that's all
I've got for that one.

572
00:25:39,871 --> 00:25:43,141
Thanks to Scott for actually
pushing me to do this talk.

573
00:25:43,141 --> 00:25:45,310
I had not really considered
putting it out there

574
00:25:45,310 --> 00:25:46,745
in terms of a talk.

575
00:25:46,745 --> 00:25:48,446
And he said, "Someone might
be interested in that.

576
00:25:48,446 --> 00:25:49,747
"You should probably
talk about it."

577
00:25:49,748 --> 00:25:51,016
So, I did.

578
00:25:51,016 --> 00:25:53,118
It's his fault, blame
him if you're bored.

579
00:25:54,219 --> 00:25:55,520
I think that's the end of it.

580
00:25:55,520 --> 00:25:57,122
Thank you very
much for having me.

581
00:25:57,122 --> 00:26:00,125
(applause)

582
00:26:00,125 --> 00:26:02,894
(upbeat drumming)

