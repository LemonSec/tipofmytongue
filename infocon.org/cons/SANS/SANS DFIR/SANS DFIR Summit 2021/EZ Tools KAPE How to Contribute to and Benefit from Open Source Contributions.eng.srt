1
00:00:04,880 --> 00:00:06,960
andrew rathbun who i had a chance to

2
00:00:06,960 --> 00:00:09,360
work with on this talk uh one of the

3
00:00:09,360 --> 00:00:10,800
cool things that we do for all of our

4
00:00:10,800 --> 00:00:13,120
speakers is assign out mentors just to

5
00:00:13,120 --> 00:00:14,559
kind of make sure you're ready to

6
00:00:14,559 --> 00:00:17,119
present it's fun to see these talks

7
00:00:17,119 --> 00:00:19,439
evolve from inception to what you're

8
00:00:19,439 --> 00:00:21,039
about to see right now

9
00:00:21,039 --> 00:00:22,800
and i really think this is something

10
00:00:22,800 --> 00:00:24,400
that you can all take advantage of

11
00:00:24,400 --> 00:00:25,359
because

12
00:00:25,359 --> 00:00:27,519
in this particular

13
00:00:27,519 --> 00:00:29,679
tool we've got easy the eric zimmerman

14
00:00:29,679 --> 00:00:31,760
tools which one of our instructors and

15
00:00:31,760 --> 00:00:34,239
authors eric writes and releases free

16
00:00:34,239 --> 00:00:36,480
tools you can also contribute to that

17
00:00:36,480 --> 00:00:38,399
and a lot of people say well geez how do

18
00:00:38,399 --> 00:00:40,559
i contribute to open source so while

19
00:00:40,559 --> 00:00:42,160
andrew's going to be talking about how

20
00:00:42,160 --> 00:00:44,559
to do that in general or specifically

21
00:00:44,559 --> 00:00:45,680
for the

22
00:00:45,680 --> 00:00:48,320
cape and the easy tools suite um i want

23
00:00:48,320 --> 00:00:50,239
you to also look at this as a how might

24
00:00:50,239 --> 00:00:52,399
i contribute in general and uh that's

25
00:00:52,399 --> 00:00:54,399
certainly a bigger picture thing so

26
00:00:54,399 --> 00:00:56,879
andrew comes to us from kroll where he

27
00:00:56,879 --> 00:00:59,199
does incident response work also a great

28
00:00:59,199 --> 00:01:01,680
community resource that he runs is our

29
00:01:01,680 --> 00:01:03,760
digital forensics discord server his

30
00:01:03,760 --> 00:01:05,438
digital forensics discord server i

31
00:01:05,438 --> 00:01:06,880
should say that we all get to

32
00:01:06,880 --> 00:01:08,880
participate in um it's a great way to

33
00:01:08,880 --> 00:01:10,479
keep the community conversation going

34
00:01:10,479 --> 00:01:13,040
regardless of what talks or what event

35
00:01:13,040 --> 00:01:15,280
you're at but um really good contributor

36
00:01:15,280 --> 00:01:17,680
as well and i'm excited for the talk

37
00:01:17,680 --> 00:01:19,360
i've already seen a sneak peek so i

38
00:01:19,360 --> 00:01:21,280
won't do any spoilers on this for you

39
00:01:21,280 --> 00:01:24,240
andrew but i'm very uh very pumped for

40
00:01:24,240 --> 00:01:27,119
this no further delay uh go for it i am

41
00:01:27,119 --> 00:01:29,040
uh i'm happy to turn the mic over to you

42
00:01:29,040 --> 00:01:31,360
sir welcome

43
00:01:31,360 --> 00:01:33,840
thank you phil appreciate it

44
00:01:33,840 --> 00:01:36,240
all right so hey everyone uh my name's

45
00:01:36,240 --> 00:01:38,240
andrew rathbond thank you for coming to

46
00:01:38,240 --> 00:01:39,520
this talk i appreciate it and hopefully

47
00:01:39,520 --> 00:01:41,360
it'll be worth your time so this i'm

48
00:01:41,360 --> 00:01:43,600
going to cover easy tools cape like phil

49
00:01:43,600 --> 00:01:45,759
said it's going to be about how you can

50
00:01:45,759 --> 00:01:47,920
contribute to and benefit from the open

51
00:01:47,920 --> 00:01:50,079
source contributions that people really

52
00:01:50,079 --> 00:01:52,159
anyone can do

53
00:01:52,159 --> 00:01:53,520
the main thing the main theme that i

54
00:01:53,520 --> 00:01:54,960
want to strike here is that you really

55
00:01:54,960 --> 00:01:56,240
don't need to know how to code you don't

56
00:01:56,240 --> 00:01:58,399
need to have a digital forensic

57
00:01:58,399 --> 00:01:59,920
background or an education or anything

58
00:01:59,920 --> 00:02:01,360
like that you really just need some

59
00:02:01,360 --> 00:02:02,479
initiative maybe a little bit of

60
00:02:02,479 --> 00:02:04,000
guidance and some follow through that's

61
00:02:04,000 --> 00:02:05,600
really all you need and that'll be the

62
00:02:05,600 --> 00:02:07,040
overarching theme as we go through these

63
00:02:07,040 --> 00:02:08,720
slides so

64
00:02:08,720 --> 00:02:10,000
i'll get through some administrative

65
00:02:10,000 --> 00:02:12,160
slides here again i'm andrew rathbun i'm

66
00:02:12,160 --> 00:02:14,000
senior associate kroll uh here's a

67
00:02:14,000 --> 00:02:15,520
little bit of my background i'm not

68
00:02:15,520 --> 00:02:16,800
going to waste a lot of time on this

69
00:02:16,800 --> 00:02:18,640
slide because this presentation is very

70
00:02:18,640 --> 00:02:21,200
dense and that's on purpose

71
00:02:21,200 --> 00:02:22,560
you will be getting the slides later

72
00:02:22,560 --> 00:02:25,360
this uh presentation will be on you know

73
00:02:25,360 --> 00:02:27,840
youtube later so it's made for the pause

74
00:02:27,840 --> 00:02:30,160
button so that's okay but the bottom

75
00:02:30,160 --> 00:02:31,840
left there you can see my two degrees

76
00:02:31,840 --> 00:02:33,920
that i have none of that is infosec

77
00:02:33,920 --> 00:02:35,040
related none of that is digital

78
00:02:35,040 --> 00:02:36,959
forensics related nothing cyber security

79
00:02:36,959 --> 00:02:37,920
related

80
00:02:37,920 --> 00:02:40,319
um i you do not need to have

81
00:02:40,319 --> 00:02:42,480
a formal education in this field in

82
00:02:42,480 --> 00:02:43,519
order to be able to do some of the

83
00:02:43,519 --> 00:02:44,560
things that you see some of the people

84
00:02:44,560 --> 00:02:46,080
do in the community

85
00:02:46,080 --> 00:02:48,239
so

86
00:02:49,200 --> 00:02:50,720
so like i said this is a very dense

87
00:02:50,720 --> 00:02:53,040
presentation i made it for the purpose

88
00:02:53,040 --> 00:02:54,319
of the pause button that you'll have you

89
00:02:54,319 --> 00:02:56,959
know down the road um so

90
00:02:56,959 --> 00:02:59,040
it may be a lot to take in right now but

91
00:02:59,040 --> 00:03:01,040
just plan on the slides playing on the

92
00:03:01,040 --> 00:03:03,760
presentation uh lots of animated gifs if

93
00:03:03,760 --> 00:03:05,280
you've ever seen me present before i

94
00:03:05,280 --> 00:03:07,120
like gifs they're great they're really

95
00:03:07,120 --> 00:03:08,879
easy to make and i think they add a lot

96
00:03:08,879 --> 00:03:10,400
of value to the slides

97
00:03:10,400 --> 00:03:11,200
so

98
00:03:11,200 --> 00:03:12,959
the four main tools we're going to cover

99
00:03:12,959 --> 00:03:15,599
is rec md eric's eric zimmerman's

100
00:03:15,599 --> 00:03:18,720
registry parsing tool sql ecmd his

101
00:03:18,720 --> 00:03:21,360
sqlite database parsing tool uh evtx

102
00:03:21,360 --> 00:03:23,360
ecmd which is the event log parsing tool

103
00:03:23,360 --> 00:03:25,280
and cape if you've used kate before

104
00:03:25,280 --> 00:03:26,720
you've probably used at least two of

105
00:03:26,720 --> 00:03:28,239
those tools above

106
00:03:28,239 --> 00:03:29,599
and if you're running the easy parser

107
00:03:29,599 --> 00:03:31,280
module you've used all three of those

108
00:03:31,280 --> 00:03:33,440
whether you knew it or not so for recmd

109
00:03:33,440 --> 00:03:35,599
we got batch files and then maps for sql

110
00:03:35,599 --> 00:03:39,200
ecmd and evtx ecmd and then targets and

111
00:03:39,200 --> 00:03:41,280
modules are what cape has and i call

112
00:03:41,280 --> 00:03:42,799
those ancillary files which you can see

113
00:03:42,799 --> 00:03:44,159
oxford defines that as providing

114
00:03:44,159 --> 00:03:45,440
necessary support to the primary

115
00:03:45,440 --> 00:03:47,120
activities or operation of an

116
00:03:47,120 --> 00:03:49,200
organization institution industry or

117
00:03:49,200 --> 00:03:51,760
system or in this case a tool so these

118
00:03:51,760 --> 00:03:54,239
are the files that help make those tools

119
00:03:54,239 --> 00:03:55,680
awesome as awesome as they are in my

120
00:03:55,680 --> 00:03:57,200
opinion at least

121
00:03:57,200 --> 00:03:58,319
and as we go through this i'll talk

122
00:03:58,319 --> 00:03:59,519
about some of the tools of the trade

123
00:03:59,519 --> 00:04:01,760
that i use that are free and paid

124
00:04:01,760 --> 00:04:02,720
so

125
00:04:02,720 --> 00:04:04,640
look forward to that and then

126
00:04:04,640 --> 00:04:06,080
i'm assuming that you guys have used

127
00:04:06,080 --> 00:04:08,560
easy tools and kate before so

128
00:04:08,560 --> 00:04:09,840
there's some assumptions i'm going to be

129
00:04:09,840 --> 00:04:11,200
making with some of the information on

130
00:04:11,200 --> 00:04:12,640
each slide

131
00:04:12,640 --> 00:04:14,080
that you are somewhat familiar with how

132
00:04:14,080 --> 00:04:15,840
those tools work and if not that's fine

133
00:04:15,840 --> 00:04:17,279
we'll talk about it in in the slack

134
00:04:17,279 --> 00:04:19,199
channel afterwards um and last

135
00:04:19,199 --> 00:04:20,720
administrative slide here the main thing

136
00:04:20,720 --> 00:04:22,720
is why should you care um you should

137
00:04:22,720 --> 00:04:24,400
know what your tools are doing so you

138
00:04:24,400 --> 00:04:26,000
know what's going on i should know

139
00:04:26,000 --> 00:04:27,680
what's going on so you can help make it

140
00:04:27,680 --> 00:04:29,840
better for yourself and others and you

141
00:04:29,840 --> 00:04:31,600
should also strongly consider making

142
00:04:31,600 --> 00:04:33,680
those tools better because it very well

143
00:04:33,680 --> 00:04:35,360
could save someone's life

144
00:04:35,360 --> 00:04:37,040
i'm former law enforcement i look at

145
00:04:37,040 --> 00:04:39,280
everything from that perspective

146
00:04:39,280 --> 00:04:40,880
these tools you know someone who is

147
00:04:40,880 --> 00:04:42,320
still in law enforcement right now could

148
00:04:42,320 --> 00:04:44,960
be using my contributions to help move a

149
00:04:44,960 --> 00:04:47,520
case forward um that's how i look at it

150
00:04:47,520 --> 00:04:49,199
but everyone has their own uh you know

151
00:04:49,199 --> 00:04:50,320
motivation

152
00:04:50,320 --> 00:04:51,600
you don't have to know how to code i

153
00:04:51,600 --> 00:04:53,040
don't know how to code like i said all

154
00:04:53,040 --> 00:04:54,400
you need is inspiration motivation and

155
00:04:54,400 --> 00:04:55,840
follow through at the beginning you also

156
00:04:55,840 --> 00:04:57,360
might need a mentor and that's kind of

157
00:04:57,360 --> 00:04:58,960
what i'm happy to provide as well as

158
00:04:58,960 --> 00:05:00,240
this presentation can provide some

159
00:05:00,240 --> 00:05:01,360
direction

160
00:05:01,360 --> 00:05:02,960
so it's all about

161
00:05:02,960 --> 00:05:05,039
harnessing your dfir creativity so we

162
00:05:05,039 --> 00:05:06,560
can all benefit and educate the end

163
00:05:06,560 --> 00:05:07,919
users of the tools better understand how

164
00:05:07,919 --> 00:05:09,039
they work

165
00:05:09,039 --> 00:05:11,600
so and hopefully this presentation will

166
00:05:11,600 --> 00:05:13,120
empower you to feel like hey i actually

167
00:05:13,120 --> 00:05:14,800
can do this so i look forward to seeing

168
00:05:14,800 --> 00:05:16,960
some of you contributing in on github

169
00:05:16,960 --> 00:05:18,400
here in the near future

170
00:05:18,400 --> 00:05:20,639
so let's first talk about recmd again

171
00:05:20,639 --> 00:05:22,720
it's eric's registry parsing tool you

172
00:05:22,720 --> 00:05:24,000
can see the gif on the right is going to

173
00:05:24,000 --> 00:05:25,680
be going over what a batch file looks

174
00:05:25,680 --> 00:05:27,520
like so a batch file just basically

175
00:05:27,520 --> 00:05:30,000
gives rec md instructions on which keys

176
00:05:30,000 --> 00:05:32,080
sub keys and values to parse and include

177
00:05:32,080 --> 00:05:34,479
in the csv output of the tool all they

178
00:05:34,479 --> 00:05:36,240
are is just a text file but it's a dot

179
00:05:36,240 --> 00:05:38,320
reb dot reb

180
00:05:38,320 --> 00:05:40,880
file extension and the format is yaml so

181
00:05:40,880 --> 00:05:43,360
it's pretty easy to put together

182
00:05:43,360 --> 00:05:45,600
all the batch files exist in registry

183
00:05:45,600 --> 00:05:47,440
explorer backslash

184
00:05:47,440 --> 00:05:49,120
batch examples

185
00:05:49,120 --> 00:05:51,199
the one that i put together is the racmd

186
00:05:51,199 --> 00:05:52,880
underscore croll and that one's most

187
00:05:52,880 --> 00:05:54,560
actively maintained i believe it's on

188
00:05:54,560 --> 00:05:57,039
version 1.12 now

189
00:05:57,039 --> 00:05:58,560
it's actually a really good resource if

190
00:05:58,560 --> 00:06:01,039
you're studying for the first

191
00:06:01,039 --> 00:06:02,880
the gcfe you should go look in that

192
00:06:02,880 --> 00:06:04,960
batch file and

193
00:06:04,960 --> 00:06:07,039
look at some of the keys and values that

194
00:06:07,039 --> 00:06:08,319
are being parsed in there a lot of

195
00:06:08,319 --> 00:06:10,160
documentation for each one uh the

196
00:06:10,160 --> 00:06:12,400
comments are very helpful to help you

197
00:06:12,400 --> 00:06:14,080
understand what's being parsed what the

198
00:06:14,080 --> 00:06:16,720
artifact means um and also the plugins

199
00:06:16,720 --> 00:06:18,880
which i'll talk about later

200
00:06:18,880 --> 00:06:20,639
that batch file is optimized to use all

201
00:06:20,639 --> 00:06:24,720
of those uh those plugins so rec md and

202
00:06:24,720 --> 00:06:26,639
the csv output there's three columns

203
00:06:26,639 --> 00:06:28,479
that this data will reside in value data

204
00:06:28,479 --> 00:06:32,000
value data two and three value data is

205
00:06:32,000 --> 00:06:33,120
that's just the value that's in the

206
00:06:33,120 --> 00:06:35,199
registry and value data two and three

207
00:06:35,199 --> 00:06:38,080
are just a part of rec md this will make

208
00:06:38,080 --> 00:06:39,440
sense here in a minute when we get to

209
00:06:39,440 --> 00:06:41,520
plugins

210
00:06:41,520 --> 00:06:44,479
so again on the croll batch file um

211
00:06:44,479 --> 00:06:47,199
this is a gif of me parsing with the

212
00:06:47,199 --> 00:06:48,400
curl badge file

213
00:06:48,400 --> 00:06:49,840
it's like i said it's been optimized to

214
00:06:49,840 --> 00:06:52,400
utilize all the plugins um and then if

215
00:06:52,400 --> 00:06:53,599
you've ever ran

216
00:06:53,599 --> 00:06:56,639
easy parser or the recmd module and cape

217
00:06:56,639 --> 00:06:59,759
you've defaulted to uh the crawl batch

218
00:06:59,759 --> 00:07:00,720
file

219
00:07:00,720 --> 00:07:01,919
as long as you've updated within

220
00:07:01,919 --> 00:07:03,520
probably the last few months

221
00:07:03,520 --> 00:07:06,080
um so

222
00:07:06,080 --> 00:07:08,160
the next slide here is this is what the

223
00:07:08,160 --> 00:07:09,840
output looks like from the curl batch

224
00:07:09,840 --> 00:07:11,520
file so you can see i'm filtering in

225
00:07:11,520 --> 00:07:12,960
timeline explorer right now on

226
00:07:12,960 --> 00:07:15,039
categories there's all these categories

227
00:07:15,039 --> 00:07:16,720
and within those categories there's also

228
00:07:16,720 --> 00:07:18,240
descriptions

229
00:07:18,240 --> 00:07:19,919
so i put descriptions like you know the

230
00:07:19,919 --> 00:07:23,840
run mru key the usb store key when scp

231
00:07:23,840 --> 00:07:25,680
and you can see the value data column

232
00:07:25,680 --> 00:07:28,080
and the value data 2 and 3 column

233
00:07:28,080 --> 00:07:30,080
if it's a plugin it's going to use all

234
00:07:30,080 --> 00:07:31,440
three of those columns here i'm

235
00:07:31,440 --> 00:07:33,440
filtering on the comments

236
00:07:33,440 --> 00:07:35,360
um you can see you know it's a

237
00:07:35,360 --> 00:07:37,440
description of the artifact basically so

238
00:07:37,440 --> 00:07:39,360
it's a really good learning tool as well

239
00:07:39,360 --> 00:07:40,800
as just knowing what you're looking at

240
00:07:40,800 --> 00:07:42,000
rather than assuming or just

241
00:07:42,000 --> 00:07:43,280
disregarding it because you don't know

242
00:07:43,280 --> 00:07:45,840
what it is

243
00:07:46,400 --> 00:07:49,440
so next is recmd plugins so you actually

244
00:07:49,440 --> 00:07:50,720
do need some coding knowledge for this

245
00:07:50,720 --> 00:07:53,199
you need to know any net language

246
00:07:53,199 --> 00:07:55,599
these are utilized not only by rec md

247
00:07:55,599 --> 00:07:58,560
but registry explorer as well so um like

248
00:07:58,560 --> 00:08:00,720
i s like i said it reduces the number of

249
00:08:00,720 --> 00:08:03,280
rows in the csv by using this value data

250
00:08:03,280 --> 00:08:05,120
two and value data three columns to

251
00:08:05,120 --> 00:08:07,440
store the data that it parses

252
00:08:07,440 --> 00:08:08,879
they're really helpful because they can

253
00:08:08,879 --> 00:08:10,400
solve problems like decoding values that

254
00:08:10,400 --> 00:08:12,400
are like stored in rot 13 windows file

255
00:08:12,400 --> 00:08:15,120
time epoc so if you look at that long

256
00:08:15,120 --> 00:08:17,599
string there versus that time stamp

257
00:08:17,599 --> 00:08:18,639
i don't know about you but i would

258
00:08:18,639 --> 00:08:20,319
rather have the time stamp as what i'm

259
00:08:20,319 --> 00:08:21,919
looking at rather than that really long

260
00:08:21,919 --> 00:08:25,440
string of numbers so um and also

261
00:08:25,440 --> 00:08:27,440
binary data gets converted to you know

262
00:08:27,440 --> 00:08:29,360
whatever binary data gets convert

263
00:08:29,360 --> 00:08:30,879
actually means so

264
00:08:30,879 --> 00:08:32,000
um

265
00:08:32,000 --> 00:08:33,519
that picture there on the right uh

266
00:08:33,519 --> 00:08:35,200
that's a really good illustration you

267
00:08:35,200 --> 00:08:37,760
can see in the value type column plug-in

268
00:08:37,760 --> 00:08:39,279
if there's a plug-in for a particular

269
00:08:39,279 --> 00:08:41,760
artifact you're going to see

270
00:08:41,760 --> 00:08:44,080
data and the value data value data value

271
00:08:44,080 --> 00:08:45,839
data 2 and value data 3. you can see i

272
00:08:45,839 --> 00:08:47,440
have that pointed out data parsed by

273
00:08:47,440 --> 00:08:49,519
recmd plugin

274
00:08:49,519 --> 00:08:50,399
so

275
00:08:50,399 --> 00:08:51,920
and then on the top there there's no

276
00:08:51,920 --> 00:08:55,839
plugin for that particular artifact

277
00:08:58,240 --> 00:09:00,160
and when you're using registry explorer

278
00:09:00,160 --> 00:09:01,440
here's what it looks like when you're on

279
00:09:01,440 --> 00:09:03,360
an artifact and there's a plug-in for it

280
00:09:03,360 --> 00:09:05,040
so here's the values you can see this is

281
00:09:05,040 --> 00:09:06,560
the user assist so it stores the

282
00:09:06,560 --> 00:09:08,480
information in rot 13

283
00:09:08,480 --> 00:09:10,080
the user assist plugin will make that

284
00:09:10,080 --> 00:09:11,120
into something that's a little more

285
00:09:11,120 --> 00:09:13,360
human readable so that's gibberish

286
00:09:13,360 --> 00:09:15,040
this you can actually read you know what

287
00:09:15,040 --> 00:09:16,880
the user executed as well as some of the

288
00:09:16,880 --> 00:09:18,880
other data you can see the columns to

289
00:09:18,880 --> 00:09:20,320
the right the focus count the run

290
00:09:20,320 --> 00:09:22,880
counter the focus time the last executed

291
00:09:22,880 --> 00:09:25,440
you don't see that here on the values

292
00:09:25,440 --> 00:09:26,880
pane so

293
00:09:26,880 --> 00:09:28,800
that's a good illustration of

294
00:09:28,800 --> 00:09:32,079
the value that plugins provide

295
00:09:33,279 --> 00:09:35,440
so the plugins on the left there that's

296
00:09:35,440 --> 00:09:36,800
where they're stored at they're stored

297
00:09:36,800 --> 00:09:38,880
within your recmd

298
00:09:38,880 --> 00:09:42,000
slash plugins folder they're just dlls

299
00:09:42,000 --> 00:09:43,279
you can actually see the source code on

300
00:09:43,279 --> 00:09:45,600
github in terms of your batch files

301
00:09:45,600 --> 00:09:47,279
those are in the rec md

302
00:09:47,279 --> 00:09:49,279
slash batch examples

303
00:09:49,279 --> 00:09:51,600
folder um and like i said the curl batch

304
00:09:51,600 --> 00:09:53,680
one is the the most maintained one most

305
00:09:53,680 --> 00:09:55,279
actively maintained

306
00:09:55,279 --> 00:09:56,880
but there are other ones too and there

307
00:09:56,880 --> 00:09:59,200
are modules for those as well

308
00:09:59,200 --> 00:10:01,120
so some tips for researching the windows

309
00:10:01,120 --> 00:10:03,920
registry uh the bold tools those are the

310
00:10:03,920 --> 00:10:05,760
ones that i use most frequently but i

311
00:10:05,760 --> 00:10:07,680
did list some other ones one thing i'd

312
00:10:07,680 --> 00:10:09,279
like to mention there bleachbit that's

313
00:10:09,279 --> 00:10:12,720
an open source cc cleaner alternative uh

314
00:10:12,720 --> 00:10:14,480
those two files there the winapp2 and

315
00:10:14,480 --> 00:10:16,560
when app three you can go find those

316
00:10:16,560 --> 00:10:18,399
when app not win amp

317
00:10:18,399 --> 00:10:19,519
when app

318
00:10:19,519 --> 00:10:21,040
you can go find those on github and go

319
00:10:21,040 --> 00:10:22,800
see what that tool is pointing to in

320
00:10:22,800 --> 00:10:24,320
terms of what it's wiping so that's

321
00:10:24,320 --> 00:10:26,720
actually a really good resource to

322
00:10:26,720 --> 00:10:27,920
you know people who are using that tool

323
00:10:27,920 --> 00:10:30,240
want to hide so i would suggest go study

324
00:10:30,240 --> 00:10:31,760
those if you want to learn

325
00:10:31,760 --> 00:10:33,279
where people are trying to get rid of

326
00:10:33,279 --> 00:10:34,320
their tracks

327
00:10:34,320 --> 00:10:35,040
so

328
00:10:35,040 --> 00:10:36,079
investigate yourself on your own

329
00:10:36,079 --> 00:10:37,440
computer i think that's a great learning

330
00:10:37,440 --> 00:10:38,959
tool

331
00:10:38,959 --> 00:10:40,160
anything you do on a computer you should

332
00:10:40,160 --> 00:10:42,880
take a registry snapshot

333
00:10:42,880 --> 00:10:44,880
you know install a new program and then

334
00:10:44,880 --> 00:10:46,560
compare the snapshot

335
00:10:46,560 --> 00:10:47,440
with

336
00:10:47,440 --> 00:10:49,519
with your registry so you can use

337
00:10:49,519 --> 00:10:51,360
procmod for that registry changes view

338
00:10:51,360 --> 00:10:53,760
by nearsoft is a great tool

339
00:10:53,760 --> 00:10:55,519
vms are great for doing research in the

340
00:10:55,519 --> 00:10:56,640
registry

341
00:10:56,640 --> 00:10:58,720
and also registry explorer bookmarks i

342
00:10:58,720 --> 00:11:00,000
use that a lot when i was studying for

343
00:11:00,000 --> 00:11:01,519
the gcfe

344
00:11:01,519 --> 00:11:03,440
i would strongly recommend using those

345
00:11:03,440 --> 00:11:05,839
to study

346
00:11:06,880 --> 00:11:08,640
and here's where the guide and the

347
00:11:08,640 --> 00:11:10,079
templates are

348
00:11:10,079 --> 00:11:12,079
on github there on the bottom and then

349
00:11:12,079 --> 00:11:14,240
on the top is where they will be when in

350
00:11:14,240 --> 00:11:15,519
your

351
00:11:15,519 --> 00:11:17,760
on on disk basically in your rec md

352
00:11:17,760 --> 00:11:19,680
batch examples folder open those up in a

353
00:11:19,680 --> 00:11:20,959
text editor you'll be able to see the

354
00:11:20,959 --> 00:11:21,920
guide in the template that i put

355
00:11:21,920 --> 00:11:23,760
together

356
00:11:23,760 --> 00:11:26,640
so next we're going on to sql ecmd

357
00:11:26,640 --> 00:11:30,560
this is the sqlite database parsing tool

358
00:11:30,560 --> 00:11:33,200
um it's a it's a relatively new tool um

359
00:11:33,200 --> 00:11:35,600
they use maps so maps basically extract

360
00:11:35,600 --> 00:11:37,519
data from a sequel from sqlite databases

361
00:11:37,519 --> 00:11:39,760
using sql queries um same thing they're

362
00:11:39,760 --> 00:11:42,000
just a text file a dot smap file

363
00:11:42,000 --> 00:11:43,760
extension in yaml

364
00:11:43,760 --> 00:11:45,839
and they have sqlite queries within them

365
00:11:45,839 --> 00:11:49,200
and there's 67 maps as of june 25th

366
00:11:49,200 --> 00:11:51,279
so or 60 yeah 67

367
00:11:51,279 --> 00:11:53,200
so we're building out that tool still

368
00:11:53,200 --> 00:11:55,360
there's a lot of untapped potential any

369
00:11:55,360 --> 00:11:56,959
operating system that stores a sqlite

370
00:11:56,959 --> 00:11:59,040
database or application that stores data

371
00:11:59,040 --> 00:12:00,959
within a sqlite database

372
00:12:00,959 --> 00:12:02,959
is technically you know a customer for

373
00:12:02,959 --> 00:12:04,880
this tool um you can use this tool

374
00:12:04,880 --> 00:12:08,480
against it so any db any dot sqlite and

375
00:12:08,480 --> 00:12:10,000
actually there's a there's a switch you

376
00:12:10,000 --> 00:12:12,079
can use within this tool the dash dash

377
00:12:12,079 --> 00:12:14,160
hunt over this do it over your c drive

378
00:12:14,160 --> 00:12:16,560
and see how many sqlite databases there

379
00:12:16,560 --> 00:12:17,279
are

380
00:12:17,279 --> 00:12:19,279
um that'll be helpful because not every

381
00:12:19,279 --> 00:12:22,240
single sql database has a file extension

382
00:12:22,240 --> 00:12:24,320
so like chrome chromium-based ones are

383
00:12:24,320 --> 00:12:26,800
just you know just history media history

384
00:12:26,800 --> 00:12:28,079
um

385
00:12:28,079 --> 00:12:30,800
so that that running the hunt switch on

386
00:12:30,800 --> 00:12:33,440
sql ecmd will identify what some of

387
00:12:33,440 --> 00:12:36,680
those are

388
00:12:38,000 --> 00:12:40,800
this is navicat for sqlite um this is me

389
00:12:40,800 --> 00:12:42,480
building a query so this goes to show

390
00:12:42,480 --> 00:12:44,480
you how easy it is to build a sqlite

391
00:12:44,480 --> 00:12:45,360
query

392
00:12:45,360 --> 00:12:46,160
um

393
00:12:46,160 --> 00:12:48,880
i don't i don't know sqlite i learned it

394
00:12:48,880 --> 00:12:50,800
by doing this um

395
00:12:50,800 --> 00:12:53,839
if you told me i hey type like create a

396
00:12:53,839 --> 00:12:55,519
sqlite query right now just type it up

397
00:12:55,519 --> 00:12:57,440
like i'd probably stumble a little bit

398
00:12:57,440 --> 00:13:00,399
but using this is very easy this is how

399
00:13:00,399 --> 00:13:02,560
most of the maps that i've made in sql

400
00:13:02,560 --> 00:13:04,800
ecmd this is exactly how i did it

401
00:13:04,800 --> 00:13:07,519
so i strongly recommend you use a tool

402
00:13:07,519 --> 00:13:11,279
that has a sql query builder like this

403
00:13:11,279 --> 00:13:14,480
it's a paid tool but it's phenomenal

404
00:13:14,480 --> 00:13:16,480
i use tools like everything procmon and

405
00:13:16,480 --> 00:13:19,120
directory monitor pro when i'm using

406
00:13:19,120 --> 00:13:21,279
applications to see where

407
00:13:21,279 --> 00:13:22,079
um

408
00:13:22,079 --> 00:13:24,240
where that data is being modified while

409
00:13:24,240 --> 00:13:26,399
i'm using that tool so everything's a

410
00:13:26,399 --> 00:13:28,320
great tool everyone should use that go

411
00:13:28,320 --> 00:13:29,519
download it now if you're not already

412
00:13:29,519 --> 00:13:32,760
using it

413
00:13:34,320 --> 00:13:36,079
so this is very exciting if you haven't

414
00:13:36,079 --> 00:13:38,639
heard the news windows 11 is going to be

415
00:13:38,639 --> 00:13:41,360
able to run android apps and as you all

416
00:13:41,360 --> 00:13:42,880
know a lot of

417
00:13:42,880 --> 00:13:45,360
android apps use sqlite databases sqlite

418
00:13:45,360 --> 00:13:48,639
databases so this is going to be awesome

419
00:13:48,639 --> 00:13:49,920
it'll be interesting to see how it's

420
00:13:49,920 --> 00:13:51,839
implemented it'll be interesting to see

421
00:13:51,839 --> 00:13:54,160
how we access it i'm very much looking

422
00:13:54,160 --> 00:13:56,079
forward to the insider preview of

423
00:13:56,079 --> 00:13:57,839
windows 11 to where we can see how this

424
00:13:57,839 --> 00:13:59,920
is actually how it's going to look so

425
00:13:59,920 --> 00:14:01,519
this tool should

426
00:14:01,519 --> 00:14:02,800
it's already really relevant it should

427
00:14:02,800 --> 00:14:04,959
gain hopefully a lot more relevance with

428
00:14:04,959 --> 00:14:07,839
whenever this comes out

429
00:14:08,480 --> 00:14:11,680
so again uh the guide and template file

430
00:14:11,680 --> 00:14:14,959
on github on the bottom and then on in

431
00:14:14,959 --> 00:14:16,959
your sql ecmd

432
00:14:16,959 --> 00:14:18,800
folder it'll be right there dot guide

433
00:14:18,800 --> 00:14:20,480
that template open in a text editor and

434
00:14:20,480 --> 00:14:23,120
you'll see it all

435
00:14:25,199 --> 00:14:27,680
edtx ecmd so

436
00:14:27,680 --> 00:14:29,839
this is kind of the same concept as sql

437
00:14:29,839 --> 00:14:32,560
ecmd uses maps you can see that's a map

438
00:14:32,560 --> 00:14:33,920
there on the right

439
00:14:33,920 --> 00:14:34,880
um

440
00:14:34,880 --> 00:14:36,079
they're

441
00:14:36,079 --> 00:14:37,600
they're very useful what they basically

442
00:14:37,600 --> 00:14:39,040
do is they take

443
00:14:39,040 --> 00:14:40,959
parts of the data and put them in

444
00:14:40,959 --> 00:14:43,040
separate columns so payload payload data

445
00:14:43,040 --> 00:14:44,959
one two three four five six map

446
00:14:44,959 --> 00:14:46,639
description username remote host

447
00:14:46,639 --> 00:14:49,839
executable info um

448
00:14:49,839 --> 00:14:51,360
basically they're just text files again

449
00:14:51,360 --> 00:14:54,639
dot map is the file extension it's yaml

450
00:14:54,639 --> 00:14:56,959
you use xpath queries because event logs

451
00:14:56,959 --> 00:14:58,639
are basically just xml

452
00:14:58,639 --> 00:15:01,199
um and there's 352 maps as of about a

453
00:15:01,199 --> 00:15:02,160
month ago

454
00:15:02,160 --> 00:15:03,600
i think it's probably maybe a few more

455
00:15:03,600 --> 00:15:06,000
since then

456
00:15:06,000 --> 00:15:07,760
the premise with maps is to not have one

457
00:15:07,760 --> 00:15:09,040
for literally every event because there

458
00:15:09,040 --> 00:15:10,639
would be thousands and thousands and

459
00:15:10,639 --> 00:15:12,560
most events frankly are useless from a

460
00:15:12,560 --> 00:15:14,079
forensic perspective

461
00:15:14,079 --> 00:15:16,240
uh but we try to have the most if

462
00:15:16,240 --> 00:15:17,199
basically

463
00:15:17,199 --> 00:15:19,519
at this point with 352 maps

464
00:15:19,519 --> 00:15:21,600
if i find badness in an event and

465
00:15:21,600 --> 00:15:23,279
there's not a map for it i make a map

466
00:15:23,279 --> 00:15:24,480
for it that's kind of where i'm at at

467
00:15:24,480 --> 00:15:28,079
this point for me so

468
00:15:28,079 --> 00:15:29,440
really cool features like lookups and

469
00:15:29,440 --> 00:15:31,279
regex i won't i don't have time to get

470
00:15:31,279 --> 00:15:33,040
too far into that

471
00:15:33,040 --> 00:15:34,480
but i will show you where you can learn

472
00:15:34,480 --> 00:15:35,680
more about that

473
00:15:35,680 --> 00:15:37,279
here later

474
00:15:37,279 --> 00:15:39,040
so this is what it looks like when you

475
00:15:39,040 --> 00:15:40,800
don't use maps so this is timeline

476
00:15:40,800 --> 00:15:44,240
explorer with evtx ecmd csv output you

477
00:15:44,240 --> 00:15:45,839
can see all those columns are completely

478
00:15:45,839 --> 00:15:49,279
blank now all the data within an event

479
00:15:49,279 --> 00:15:50,880
is still in that payload column which is

480
00:15:50,880 --> 00:15:53,279
there all the way to the right

481
00:15:53,279 --> 00:15:54,720
i'll show you on the next one you'll get

482
00:15:54,720 --> 00:15:56,800
that aha moment but you'll see on the

483
00:15:56,800 --> 00:15:59,120
bottom there it's only a 29.9 megabyte

484
00:15:59,120 --> 00:16:01,519
csv that we have without maps for this

485
00:16:01,519 --> 00:16:02,880
particular

486
00:16:02,880 --> 00:16:05,360
example

487
00:16:05,440 --> 00:16:07,120
now on this next slide take a look at

488
00:16:07,120 --> 00:16:09,600
the gif and you can see map description

489
00:16:09,600 --> 00:16:11,279
payload data you can see all those

490
00:16:11,279 --> 00:16:13,279
values that's a deduped list of

491
00:16:13,279 --> 00:16:15,040
everything that's in that column

492
00:16:15,040 --> 00:16:16,399
you see account was logged off

493
00:16:16,399 --> 00:16:18,720
application crashed failed logon file

494
00:16:18,720 --> 00:16:20,959
create all that stuff

495
00:16:20,959 --> 00:16:22,720
it basically takes some of the bits of

496
00:16:22,720 --> 00:16:25,199
that payload column that the data that's

497
00:16:25,199 --> 00:16:27,120
in that payload column

498
00:16:27,120 --> 00:16:29,440
depending on how the author of the map

499
00:16:29,440 --> 00:16:31,199
uh writes it we'll put it in one of

500
00:16:31,199 --> 00:16:35,880
those columns that i mentioned before

501
00:16:36,079 --> 00:16:36,800
so

502
00:16:36,800 --> 00:16:39,199
it only made it a 36.5

503
00:16:39,199 --> 00:16:41,199
megabyte csv so it's only six megs

504
00:16:41,199 --> 00:16:43,440
bigger for all this extra

505
00:16:43,440 --> 00:16:45,839
arguably duplicative data but it puts it

506
00:16:45,839 --> 00:16:47,440
at the forefront to where you won't miss

507
00:16:47,440 --> 00:16:50,240
it it's very helpful very useful use it

508
00:16:50,240 --> 00:16:51,360
all the time

509
00:16:51,360 --> 00:16:54,079
again the most high fidelity events are

510
00:16:54,079 --> 00:16:56,320
most of them already have maps for them

511
00:16:56,320 --> 00:16:58,480
so

512
00:17:02,240 --> 00:17:04,160
so in terms of making maps i know

513
00:17:04,160 --> 00:17:06,000
there's a lot on this slide um the gif

514
00:17:06,000 --> 00:17:07,679
on the right is just me going through

515
00:17:07,679 --> 00:17:09,520
look at this is what the maps look like

516
00:17:09,520 --> 00:17:11,839
um on disk basically pretty much all you

517
00:17:11,839 --> 00:17:13,679
got to do is in your everyday analysis

518
00:17:13,679 --> 00:17:15,199
if you find an event that doesn't have a

519
00:17:15,199 --> 00:17:17,039
map for it there's your idea for your

520
00:17:17,039 --> 00:17:18,799
next map right there all you got to do

521
00:17:18,799 --> 00:17:21,839
is convert it to xml using evtx ecmd

522
00:17:21,839 --> 00:17:24,400
using that path or that uh command

523
00:17:24,400 --> 00:17:26,400
um follow the guide follow the template

524
00:17:26,400 --> 00:17:28,799
i lay it out all on there it helps to

525
00:17:28,799 --> 00:17:30,880
make a copy of an existing map so if

526
00:17:30,880 --> 00:17:33,120
you're doing a you know a security event

527
00:17:33,120 --> 00:17:35,679
maybe go find the 4624 security event

528
00:17:35,679 --> 00:17:37,840
and copy it and then use that as a

529
00:17:37,840 --> 00:17:39,840
running start for a template

530
00:17:39,840 --> 00:17:42,240
i do that all the time

531
00:17:42,240 --> 00:17:44,400
um once you have created a map you think

532
00:17:44,400 --> 00:17:45,919
it's good throw it in your actual maps

533
00:17:45,919 --> 00:17:48,000
folder and then parse out the event logs

534
00:17:48,000 --> 00:17:49,600
that you're trying to make a map for and

535
00:17:49,600 --> 00:17:51,440
see if it came out right

536
00:17:51,440 --> 00:17:53,600
um it's trial and error sometimes you

537
00:17:53,600 --> 00:17:56,400
know you'll you'll make your xpath query

538
00:17:56,400 --> 00:17:57,440
and you're expecting something in

539
00:17:57,440 --> 00:17:59,280
payload data too you don't see anything

540
00:17:59,280 --> 00:18:00,960
you gotta go back to the drawing board

541
00:18:00,960 --> 00:18:03,120
adjust it trial and error so

542
00:18:03,120 --> 00:18:03,919
um

543
00:18:03,919 --> 00:18:06,160
pretty much i just use evtx ecmd for my

544
00:18:06,160 --> 00:18:08,240
event logs but there is a lot

545
00:18:08,240 --> 00:18:10,400
of paid tools out there that have

546
00:18:10,400 --> 00:18:11,600
different things that are cool about

547
00:18:11,600 --> 00:18:12,400
them

548
00:18:12,400 --> 00:18:13,440
but yeah

549
00:18:13,440 --> 00:18:15,200
evtx ecmd is pretty much all you need

550
00:18:15,200 --> 00:18:17,360
for for parsing event logs for the

551
00:18:17,360 --> 00:18:19,360
purpose of making maps

552
00:18:19,360 --> 00:18:21,280
windows event viewer is useful though um

553
00:18:21,280 --> 00:18:22,559
because sometimes you can only see

554
00:18:22,559 --> 00:18:24,720
messages through windows event viewer

555
00:18:24,720 --> 00:18:26,320
and then there's also the os specific

556
00:18:26,320 --> 00:18:28,240
caveat so if you're trying to look at a

557
00:18:28,240 --> 00:18:30,960
let's just say a windows 10 event log

558
00:18:30,960 --> 00:18:32,400
or a windows server event log on to

559
00:18:32,400 --> 00:18:34,720
windows 10 os

560
00:18:34,720 --> 00:18:36,000
it's probably going to say yeah we don't

561
00:18:36,000 --> 00:18:37,120
know what the message is because it's

562
00:18:37,120 --> 00:18:38,400
missing

563
00:18:38,400 --> 00:18:41,039
the dll for that

564
00:18:41,039 --> 00:18:43,200
so i could spend more time on this but i

565
00:18:43,200 --> 00:18:44,880
already spent 50 minutes on this so

566
00:18:44,880 --> 00:18:46,720
there on youtube there's a webinar i did

567
00:18:46,720 --> 00:18:48,720
earlier this year strongly recommend you

568
00:18:48,720 --> 00:18:50,240
take a look at that i go more in depth

569
00:18:50,240 --> 00:18:52,720
on all this

570
00:18:52,880 --> 00:18:54,559
again the get the guide and template for

571
00:18:54,559 --> 00:18:56,240
this tool is going to be on github on

572
00:18:56,240 --> 00:18:58,640
the bottom and on disk on

573
00:18:58,640 --> 00:19:02,480
on the top in your evtx maps folder

574
00:19:02,880 --> 00:19:05,360
tape so targets and modules start out

575
00:19:05,360 --> 00:19:07,039
with targets basically they contain the

576
00:19:07,039 --> 00:19:09,039
location of an artifact cape goes to

577
00:19:09,039 --> 00:19:11,440
that location and grabs it so on the

578
00:19:11,440 --> 00:19:13,200
example on the right that's event logs

579
00:19:13,200 --> 00:19:15,039
they reside at c windows system 32

580
00:19:15,039 --> 00:19:18,160
config looking for evt or edtx

581
00:19:18,160 --> 00:19:19,360
uh files

582
00:19:19,360 --> 00:19:21,440
um they're just they're just text files

583
00:19:21,440 --> 00:19:24,080
again dot tcape and they're in yaml

584
00:19:24,080 --> 00:19:26,640
there's 233 targets as of a couple weeks

585
00:19:26,640 --> 00:19:28,880
ago

586
00:19:28,960 --> 00:19:31,679
with targets most most applications are

587
00:19:31,679 --> 00:19:34,720
going to store data within c users user

588
00:19:34,720 --> 00:19:37,440
app data either local or roaming see

589
00:19:37,440 --> 00:19:39,840
program data or somewhere else but i

590
00:19:39,840 --> 00:19:41,919
found those top two that's where ninety

591
00:19:41,919 --> 00:19:43,679
percent of the time you're going to find

592
00:19:43,679 --> 00:19:45,840
where it stores uh where the application

593
00:19:45,840 --> 00:19:48,160
stores data at so i use everything

594
00:19:48,160 --> 00:19:51,200
procmon directory monitor monitor pro

595
00:19:51,200 --> 00:19:52,480
all the time when i'm trying to make

596
00:19:52,480 --> 00:19:55,600
targets for for new applications i just

597
00:19:55,600 --> 00:19:57,520
want to see what's changing on disk uh

598
00:19:57,520 --> 00:19:59,280
when i'm using when i'm doing things you

599
00:19:59,280 --> 00:20:00,880
know what a suspect would do if they

600
00:20:00,880 --> 00:20:02,799
were using the application

601
00:20:02,799 --> 00:20:04,799
so at the bottom of each target there's

602
00:20:04,799 --> 00:20:06,720
documentation that gives you a really

603
00:20:06,720 --> 00:20:08,240
good um

604
00:20:08,240 --> 00:20:09,520
gives you a good method to learn about

605
00:20:09,520 --> 00:20:12,720
the the artifact itself

606
00:20:13,120 --> 00:20:15,200
modules again there are text files

607
00:20:15,200 --> 00:20:18,000
they're mk they're in yaml there's 213

608
00:20:18,000 --> 00:20:20,080
of them as of a couple weeks ago they

609
00:20:20,080 --> 00:20:21,440
basically just contain the commands for

610
00:20:21,440 --> 00:20:23,280
any given command line tool you can

611
00:20:23,280 --> 00:20:25,039
automate anything that has command line

612
00:20:25,039 --> 00:20:27,280
interface with cape

613
00:20:27,280 --> 00:20:29,919
most of eric's tools ship with cape the

614
00:20:29,919 --> 00:20:32,559
non-gui versions at least most of them

615
00:20:32,559 --> 00:20:34,400
and modules are made for the most common

616
00:20:34,400 --> 00:20:37,440
use cases for each of those tools

617
00:20:37,440 --> 00:20:38,799
there you can make modules for edge

618
00:20:38,799 --> 00:20:40,640
cases if you want um

619
00:20:40,640 --> 00:20:41,760
by all means you know we'll take

620
00:20:41,760 --> 00:20:43,600
anything uh just share it to the get to

621
00:20:43,600 --> 00:20:45,679
the github repo if you uh if you do have

622
00:20:45,679 --> 00:20:47,760
those or you do make those

623
00:20:47,760 --> 00:20:49,600
you can also make modules for non-easy

624
00:20:49,600 --> 00:20:51,440
tools you just need to provide the

625
00:20:51,440 --> 00:20:53,600
binary itself in the cape modules bin

626
00:20:53,600 --> 00:20:54,799
folder

627
00:20:54,799 --> 00:20:56,080
and make sure if you do make a module

628
00:20:56,080 --> 00:20:57,679
for that you include the link to that

629
00:20:57,679 --> 00:21:01,600
that actual tool and the binary url

630
00:21:01,600 --> 00:21:03,120
value there

631
00:21:03,120 --> 00:21:04,480
really all you need is the tool itself

632
00:21:04,480 --> 00:21:06,640
powershell command line that's really

633
00:21:06,640 --> 00:21:09,039
about it

634
00:21:10,080 --> 00:21:10,880
so

635
00:21:10,880 --> 00:21:13,440
here's the guide and template for

636
00:21:13,440 --> 00:21:16,480
targets modules compound targets and

637
00:21:16,480 --> 00:21:18,640
compound modules i don't have time to

638
00:21:18,640 --> 00:21:21,039
get into what those are but it should if

639
00:21:21,039 --> 00:21:22,240
you look at those guides it'll make it

640
00:21:22,240 --> 00:21:25,280
pretty apparent what they are

641
00:21:25,600 --> 00:21:28,240
all right this is a very important topic

642
00:21:28,240 --> 00:21:30,080
keeping these tools up to date and

643
00:21:30,080 --> 00:21:32,159
synced and knowing what the difference

644
00:21:32,159 --> 00:21:33,039
is

645
00:21:33,039 --> 00:21:33,840
so

646
00:21:33,840 --> 00:21:37,120
again this is really really important um

647
00:21:37,120 --> 00:21:38,400
on the top right there that's all of

648
00:21:38,400 --> 00:21:39,840
eric's tools you've probably seen that

649
00:21:39,840 --> 00:21:41,360
before if you went to go download his

650
00:21:41,360 --> 00:21:44,000
tools individually it's it's just very

651
00:21:44,000 --> 00:21:45,600
important to remember if you do download

652
00:21:45,600 --> 00:21:48,799
from that site and you use cape as well

653
00:21:48,799 --> 00:21:50,640
those tools technically reside in two

654
00:21:50,640 --> 00:21:52,960
different locations you need to maintain

655
00:21:52,960 --> 00:21:54,240
each of those

656
00:21:54,240 --> 00:21:56,720
um there's that get zimmerman tools

657
00:21:56,720 --> 00:21:58,400
script powershell script

658
00:21:58,400 --> 00:22:00,640
uh that updates all those tools but just

659
00:22:00,640 --> 00:22:02,000
because you're doing that doesn't mean

660
00:22:02,000 --> 00:22:04,240
all the ones that cape is using

661
00:22:04,240 --> 00:22:06,480
is is uh going to it's not going to keep

662
00:22:06,480 --> 00:22:08,080
those up to date quite frankly

663
00:22:08,080 --> 00:22:09,360
so

664
00:22:09,360 --> 00:22:11,679
that means uh you know if you downloaded

665
00:22:11,679 --> 00:22:13,120
eric's tools like a year ago and you've

666
00:22:13,120 --> 00:22:14,240
been using them every day and you've

667
00:22:14,240 --> 00:22:15,840
never synced you've never updated the

668
00:22:15,840 --> 00:22:17,120
binaries or anything like that you're

669
00:22:17,120 --> 00:22:19,280
missing out on potentially a lot of maps

670
00:22:19,280 --> 00:22:21,440
batch files you know new features bug

671
00:22:21,440 --> 00:22:23,360
fixes all that so these next couple

672
00:22:23,360 --> 00:22:25,039
slides are here to make sure that you

673
00:22:25,039 --> 00:22:26,559
are keeping everything up to date

674
00:22:26,559 --> 00:22:29,520
because it's very important

675
00:22:30,799 --> 00:22:32,400
so the difference between sync and

676
00:22:32,400 --> 00:22:35,120
update the top gif is what i mean when i

677
00:22:35,120 --> 00:22:37,039
say update so that means you're updating

678
00:22:37,039 --> 00:22:38,880
the binary so that's me updating the

679
00:22:38,880 --> 00:22:42,320
binary for cape from

680
00:22:42,840 --> 00:22:44,720
1.01.0.0.0.1.0.0.3 which is the current

681
00:22:44,720 --> 00:22:46,720
version as of this presentation that's

682
00:22:46,720 --> 00:22:48,320
using the get cape update powershell

683
00:22:48,320 --> 00:22:51,600
script the bottom gif is me

684
00:22:51,600 --> 00:22:54,400
deleting the total commander target just

685
00:22:54,400 --> 00:22:56,320
for the purpose of demonstration running

686
00:22:56,320 --> 00:22:58,159
cape sync

687
00:22:58,159 --> 00:22:59,520
and you can see it saw that i was

688
00:22:59,520 --> 00:23:00,960
missing that target

689
00:23:00,960 --> 00:23:02,559
compare when comparing to the repo the

690
00:23:02,559 --> 00:23:05,120
github repo

691
00:23:05,120 --> 00:23:07,039
and you can see right there new targets

692
00:23:07,039 --> 00:23:09,120
apps total commander

693
00:23:09,120 --> 00:23:11,280
same process that bottom gift for evtx

694
00:23:11,280 --> 00:23:14,400
ecmd sqlecmd and rec md

695
00:23:14,400 --> 00:23:16,960
let's call this all option one on how to

696
00:23:16,960 --> 00:23:20,000
keep tools up to date

697
00:23:20,559 --> 00:23:23,120
option two this is more cape related uh

698
00:23:23,120 --> 00:23:24,799
this is a tool sync module that i put

699
00:23:24,799 --> 00:23:26,880
together and it basically automates the

700
00:23:26,880 --> 00:23:31,200
syncing of evtx ecmd cape rec md and sql

701
00:23:31,200 --> 00:23:33,440
ecmd just with a single click

702
00:23:33,440 --> 00:23:34,960
um

703
00:23:34,960 --> 00:23:36,720
uh all you got to do is add this module

704
00:23:36,720 --> 00:23:38,720
to your to your daily workflow it's

705
00:23:38,720 --> 00:23:40,559
right up there it's got i believe uh two

706
00:23:40,559 --> 00:23:41,919
exclamation points yep it's right at the

707
00:23:41,919 --> 00:23:43,760
top there as you can see in the gif so

708
00:23:43,760 --> 00:23:45,360
if you're running easy parser just tack

709
00:23:45,360 --> 00:23:46,720
that one on as long as you have an

710
00:23:46,720 --> 00:23:48,559
internet active internet connection

711
00:23:48,559 --> 00:23:49,840
obviously different considerations if

712
00:23:49,840 --> 00:23:50,799
you're doing it in an offline

713
00:23:50,799 --> 00:23:53,039
environment

714
00:23:53,039 --> 00:23:55,360
so all this does is sync

715
00:23:55,360 --> 00:23:57,039
sync we talked about that on the

716
00:23:57,039 --> 00:23:59,200
previous slide so it's just it doesn't

717
00:23:59,200 --> 00:24:01,520
keep the actual binaries

718
00:24:01,520 --> 00:24:02,720
updated

719
00:24:02,720 --> 00:24:04,799
for cape or for any of eric's tools that

720
00:24:04,799 --> 00:24:06,559
are in cape module's bin

721
00:24:06,559 --> 00:24:08,400
so hey if only we had a solution to

722
00:24:08,400 --> 00:24:10,159
perform that task

723
00:24:10,159 --> 00:24:12,159
of tool sync and updating easy tool

724
00:24:12,159 --> 00:24:13,840
binaries within cape

725
00:24:13,840 --> 00:24:16,480
that's what we call option three

726
00:24:16,480 --> 00:24:18,880
so i've said before i don't know how to

727
00:24:18,880 --> 00:24:21,919
code right but i put this together i

728
00:24:21,919 --> 00:24:23,360
made it specifically for this event for

729
00:24:23,360 --> 00:24:25,360
the slide for this presentation this is

730
00:24:25,360 --> 00:24:28,000
a powershell script to automate

731
00:24:28,000 --> 00:24:31,120
updating and syncing of cape

732
00:24:31,120 --> 00:24:33,279
all the binaries within

733
00:24:33,279 --> 00:24:34,799
cape modules bin

734
00:24:34,799 --> 00:24:36,880
and then syncing of all those tools so

735
00:24:36,880 --> 00:24:39,919
you get all the targets modules

736
00:24:39,919 --> 00:24:42,320
maps for recmd maps for

737
00:24:42,320 --> 00:24:45,200
or sorry maps for sqlcmd maps for evtx

738
00:24:45,200 --> 00:24:48,320
ecmd and batch files for our acmd

739
00:24:48,320 --> 00:24:49,360
so

740
00:24:49,360 --> 00:24:50,559
it

741
00:24:50,559 --> 00:24:52,559
calls yeah i already list all that one

742
00:24:52,559 --> 00:24:54,640
through five there so again i said i

743
00:24:54,640 --> 00:24:57,360
can't code but i can google and you know

744
00:24:57,360 --> 00:24:59,600
it helps looking at you know

745
00:24:59,600 --> 00:25:01,520
stack overflow threads you know when

746
00:25:01,520 --> 00:25:02,960
you're trying to do something

747
00:25:02,960 --> 00:25:04,080
this is the first thing i've ever put

748
00:25:04,080 --> 00:25:05,840
together i'm sure there's ways to make

749
00:25:05,840 --> 00:25:07,679
it better but

750
00:25:07,679 --> 00:25:09,840
i don't have the background that would

751
00:25:09,840 --> 00:25:11,919
that would

752
00:25:11,919 --> 00:25:13,360
that would lead one to think that i

753
00:25:13,360 --> 00:25:15,360
could put something like this together

754
00:25:15,360 --> 00:25:16,559
so

755
00:25:16,559 --> 00:25:17,840
i hope that's an inspiration to some

756
00:25:17,840 --> 00:25:19,120
people that hey maybe i don't need to

757
00:25:19,120 --> 00:25:21,200
have you know this a certain background

758
00:25:21,200 --> 00:25:22,400
in order to do a certain thing you can

759
00:25:22,400 --> 00:25:24,159
do whatever you want um it just takes

760
00:25:24,159 --> 00:25:25,840
initiative and follow-through that's the

761
00:25:25,840 --> 00:25:29,080
main thing

762
00:25:29,440 --> 00:25:31,840
so in terms of contributing to github uh

763
00:25:31,840 --> 00:25:33,520
it's it's a lot easier than some people

764
00:25:33,520 --> 00:25:35,200
think and i wanted to highlight that in

765
00:25:35,200 --> 00:25:37,919
this presentation here so this is github

766
00:25:37,919 --> 00:25:39,440
desktop if you've never seen it before

767
00:25:39,440 --> 00:25:42,240
it's just a gui application it's free

768
00:25:42,240 --> 00:25:43,679
what i'm showing here is and i'll walk

769
00:25:43,679 --> 00:25:45,120
through it is

770
00:25:45,120 --> 00:25:47,039
basically all github desktop does is you

771
00:25:47,039 --> 00:25:49,919
clone a repository uh you know to your

772
00:25:49,919 --> 00:25:51,600
hard drive for instance and you say i

773
00:25:51,600 --> 00:25:53,200
want it here at this location and all

774
00:25:53,200 --> 00:25:55,120
it's going to do is monitor those files

775
00:25:55,120 --> 00:25:57,120
and anytime there's a change in those

776
00:25:57,120 --> 00:25:59,520
files it's going to highlight that here

777
00:25:59,520 --> 00:26:01,200
so you can see you know this is a line i

778
00:26:01,200 --> 00:26:03,600
removed this is the line i added um this

779
00:26:03,600 --> 00:26:05,120
green one the green plus that's a

780
00:26:05,120 --> 00:26:07,200
completely new file so when i clone the

781
00:26:07,200 --> 00:26:10,799
repository that file did not exist

782
00:26:10,880 --> 00:26:12,559
once it loops back here we'll see on the

783
00:26:12,559 --> 00:26:13,679
top

784
00:26:13,679 --> 00:26:15,360
this is a file that i removed so i

785
00:26:15,360 --> 00:26:17,600
cloned it i deleted the file github

786
00:26:17,600 --> 00:26:19,679
desktop recognizes that so if i want

787
00:26:19,679 --> 00:26:21,919
that to reflect in the repo i just have

788
00:26:21,919 --> 00:26:24,159
to commit that to the repo and i go

789
00:26:24,159 --> 00:26:25,520
through the commit here i'm selecting

790
00:26:25,520 --> 00:26:27,200
that file this is i'm doing a

791
00:26:27,200 --> 00:26:30,080
description of my commit i hit commit

792
00:26:30,080 --> 00:26:31,760
and then i push it up and it's in the

793
00:26:31,760 --> 00:26:34,080
repo just as simple as that

794
00:26:34,080 --> 00:26:34,880
so

795
00:26:34,880 --> 00:26:36,799
there's a lot of tools to do this

796
00:26:36,799 --> 00:26:38,559
github github desktops free you can do

797
00:26:38,559 --> 00:26:40,720
it via git which is all command line i

798
00:26:40,720 --> 00:26:42,000
think that's where probably people get a

799
00:26:42,000 --> 00:26:43,440
little intimidated because boy i have no

800
00:26:43,440 --> 00:26:44,799
idea how to do this it's all command

801
00:26:44,799 --> 00:26:46,960
line sounds you know pretty ninja but

802
00:26:46,960 --> 00:26:48,320
there's a lot of tools out there paid

803
00:26:48,320 --> 00:26:50,159
tools all the ones on the bottom and

804
00:26:50,159 --> 00:26:52,400
more than what i could fit on this slide

805
00:26:52,400 --> 00:26:54,480
that can help make your life easier

806
00:26:54,480 --> 00:26:56,559
for me i just use github desktop it's

807
00:26:56,559 --> 00:26:59,600
worked just fine for me

808
00:27:02,400 --> 00:27:03,679
so here's a couple things i learned the

809
00:27:03,679 --> 00:27:06,240
hard way and that gif on the top right

810
00:27:06,240 --> 00:27:07,919
that process has been made a lot easier

811
00:27:07,919 --> 00:27:10,960
by github recently um so when you fork a

812
00:27:10,960 --> 00:27:12,480
repository you're basically making your

813
00:27:12,480 --> 00:27:14,159
own copy of it it's like a snapshot in

814
00:27:14,159 --> 00:27:17,120
time so all you need to do is okay yeah

815
00:27:17,120 --> 00:27:19,120
you fork it so you have that snapshot of

816
00:27:19,120 --> 00:27:20,880
it well a year

817
00:27:20,880 --> 00:27:22,640
let's say a month later you want to do

818
00:27:22,640 --> 00:27:24,559
you want to contribute to it you need to

819
00:27:24,559 --> 00:27:27,039
update your fork of it so you can see

820
00:27:27,039 --> 00:27:29,520
fetch upstream fetch and merge so that's

821
00:27:29,520 --> 00:27:31,840
catch me up to

822
00:27:31,840 --> 00:27:34,559
to eric's repository and then you can

823
00:27:34,559 --> 00:27:37,279
see i'm four commits ahead that means

824
00:27:37,279 --> 00:27:38,880
there's stuff that i've done that is not

825
00:27:38,880 --> 00:27:41,120
on eric's so i go contribute open pull

826
00:27:41,120 --> 00:27:42,640
request and then that's where you can

827
00:27:42,640 --> 00:27:44,000
start the process of hey eric i want to

828
00:27:44,000 --> 00:27:46,399
merge what's in my repo what's in my

829
00:27:46,399 --> 00:27:48,399
fork to yours and help contribute to the

830
00:27:48,399 --> 00:27:50,320
project

831
00:27:50,320 --> 00:27:51,600
now in particular when you're talking

832
00:27:51,600 --> 00:27:54,320
for cape and some of eric's tools

833
00:27:54,320 --> 00:27:55,760
there's a pull request template so

834
00:27:55,760 --> 00:27:57,679
there's a lot of check boxes hey did you

835
00:27:57,679 --> 00:28:00,240
do this did you do this it's just

836
00:28:00,240 --> 00:28:02,399
they're there for quality control

837
00:28:02,399 --> 00:28:03,760
to reduce the amount of corrective

838
00:28:03,760 --> 00:28:05,679
action that's needed to approve and

839
00:28:05,679 --> 00:28:07,919
merge new content and code that's really

840
00:28:07,919 --> 00:28:10,559
what it's there for um

841
00:28:10,559 --> 00:28:13,039
so read through it as long as you follow

842
00:28:13,039 --> 00:28:16,480
all of that all those those uh steps and

843
00:28:16,480 --> 00:28:18,320
check those boxes

844
00:28:18,320 --> 00:28:20,320
it's gonna you're probably

845
00:28:20,320 --> 00:28:22,320
not gonna have any issues in terms of

846
00:28:22,320 --> 00:28:24,000
merging your code or adding your

847
00:28:24,000 --> 00:28:28,039
contributions to a main project

848
00:28:30,000 --> 00:28:32,000
in terms of cape and easy tools here's

849
00:28:32,000 --> 00:28:33,840
the main repos it's kind of an ugly

850
00:28:33,840 --> 00:28:35,360
slide it's not the best formatted but

851
00:28:35,360 --> 00:28:37,840
it's the evtx cape docs

852
00:28:37,840 --> 00:28:39,919
cape files rec md registry explorer

853
00:28:39,919 --> 00:28:42,960
bookmarks registry plugins and sqlecmd

854
00:28:42,960 --> 00:28:44,320
those are the ones i would recommend you

855
00:28:44,320 --> 00:28:46,399
create a github account for go to those

856
00:28:46,399 --> 00:28:48,320
repos watch them

857
00:28:48,320 --> 00:28:51,120
watch means and you can customize it but

858
00:28:51,120 --> 00:28:52,880
anytime there's a pull request anytime

859
00:28:52,880 --> 00:28:54,720
there's an issue brought up it'll send

860
00:28:54,720 --> 00:28:56,960
you an email so you can see you can stay

861
00:28:56,960 --> 00:28:58,799
up to date on all the changes

862
00:28:58,799 --> 00:29:01,279
if you're a user of cape cape files you

863
00:29:01,279 --> 00:29:03,520
need to watch that one that's constantly

864
00:29:03,520 --> 00:29:06,480
being updated um

865
00:29:06,480 --> 00:29:08,240
it it'll at least at the very least

866
00:29:08,240 --> 00:29:09,919
inform you when you should be syncing

867
00:29:09,919 --> 00:29:12,159
which you should be syncing and updating

868
00:29:12,159 --> 00:29:14,159
at least on a weekly basis

869
00:29:14,159 --> 00:29:15,919
but sometimes something let's say you do

870
00:29:15,919 --> 00:29:17,360
it every monday you sync an update every

871
00:29:17,360 --> 00:29:18,880
monday well if something really sweet

872
00:29:18,880 --> 00:29:20,880
comes out on a thursday you want to know

873
00:29:20,880 --> 00:29:22,320
about it and you're probably going to

874
00:29:22,320 --> 00:29:23,919
want to update as soon as possible

875
00:29:23,919 --> 00:29:25,279
update and sync

876
00:29:25,279 --> 00:29:26,960
as soon as possible so

877
00:29:26,960 --> 00:29:29,200
that's how you stay in the know as you

878
00:29:29,200 --> 00:29:32,720
you watch these uh repos

879
00:29:33,679 --> 00:29:36,159
so here's some of the key takeaways um

880
00:29:36,159 --> 00:29:38,080
you got to keep your easy tool binaries

881
00:29:38,080 --> 00:29:39,440
updated

882
00:29:39,440 --> 00:29:41,840
keep them updated and synced um that's

883
00:29:41,840 --> 00:29:43,919
the ancillary files um keeping the

884
00:29:43,919 --> 00:29:46,000
ancillary files synced with github very

885
00:29:46,000 --> 00:29:47,919
important again the maps maps batch

886
00:29:47,919 --> 00:29:50,799
files targets and modules um

887
00:29:50,799 --> 00:29:52,799
i i just had to check check at least on

888
00:29:52,799 --> 00:29:55,600
a weekly basis uh but ideally you know

889
00:29:55,600 --> 00:29:57,679
you should watch the repos and be

890
00:29:57,679 --> 00:29:59,760
informed in real time you could set up a

891
00:29:59,760 --> 00:30:02,080
scheduled task maybe to run you know the

892
00:30:02,080 --> 00:30:03,600
powershell script that automates all the

893
00:30:03,600 --> 00:30:05,440
boring stuff that option three that i

894
00:30:05,440 --> 00:30:06,640
talked about

895
00:30:06,640 --> 00:30:07,919
which there's a link to that script by

896
00:30:07,919 --> 00:30:10,240
the way on the hallway channel i have it

897
00:30:10,240 --> 00:30:12,240
bookmarked

898
00:30:12,240 --> 00:30:13,120
um

899
00:30:13,120 --> 00:30:15,440
add that tool sync module to your daily

900
00:30:15,440 --> 00:30:17,279
workflow when you're using cape you know

901
00:30:17,279 --> 00:30:18,559
it'll at least keep those ancillary

902
00:30:18,559 --> 00:30:20,320
files updated

903
00:30:20,320 --> 00:30:21,840
watch the repos and when you find

904
00:30:21,840 --> 00:30:23,440
something new to contribute

905
00:30:23,440 --> 00:30:25,679
share it if you ever have any questions

906
00:30:25,679 --> 00:30:28,399
on hey i found something i'm just i'm

907
00:30:28,399 --> 00:30:30,640
stuck i don't know how to make a target

908
00:30:30,640 --> 00:30:32,960
or a map or whatever

909
00:30:32,960 --> 00:30:34,799
find me on the internet uh google my

910
00:30:34,799 --> 00:30:36,240
name find a way to get a hold of me i

911
00:30:36,240 --> 00:30:38,080
will be happy to help you i'm always on

912
00:30:38,080 --> 00:30:39,440
the digital forensic discord server

913
00:30:39,440 --> 00:30:42,000
which i believe is yup um which i there

914
00:30:42,000 --> 00:30:43,840
on the bottom right you can always hit

915
00:30:43,840 --> 00:30:45,440
me up there i'm always on discord i

916
00:30:45,440 --> 00:30:47,120
always have it open here at my desk

917
00:30:47,120 --> 00:30:48,480
every day when i work

918
00:30:48,480 --> 00:30:50,159
um again you can hit me on either of

919
00:30:50,159 --> 00:30:52,080
these other three things

920
00:30:52,080 --> 00:30:54,000
social media platforms github

921
00:30:54,000 --> 00:30:55,279
um

922
00:30:55,279 --> 00:30:57,440
linkedin twitter

923
00:30:57,440 --> 00:30:58,559
so

924
00:30:58,559 --> 00:31:00,960
that's pretty much that a lot of

925
00:31:00,960 --> 00:31:03,039
information in a short amount of time

926
00:31:03,039 --> 00:31:05,039
i look forward to meet you all in the

927
00:31:05,039 --> 00:31:07,679
hallway channel and uh yeah with that

928
00:31:07,679 --> 00:31:10,399
i'll turn it back over to phil

929
00:31:10,399 --> 00:31:12,240
excellent thank you so much andrew and

930
00:31:12,240 --> 00:31:14,240
uh really

931
00:31:14,240 --> 00:31:16,159
big takeaways that i hope everybody is

932
00:31:16,159 --> 00:31:18,159
able to pull from this is you really

933
00:31:18,159 --> 00:31:19,279
focused

934
00:31:19,279 --> 00:31:21,760
very solidly on easy tools and the

935
00:31:21,760 --> 00:31:23,840
contributions there which obviously if

936
00:31:23,840 --> 00:31:26,000
you haven't used easy tools um you know

937
00:31:26,000 --> 00:31:27,360
you must not be doing any windows

938
00:31:27,360 --> 00:31:29,200
forensics i guess it's the way that i'd

939
00:31:29,200 --> 00:31:31,039
say it because that is absolutely the

940
00:31:31,039 --> 00:31:32,960
go-to that we push folks to

941
00:31:32,960 --> 00:31:34,480
um because it's free because it's

942
00:31:34,480 --> 00:31:36,320
extremely powerful because it is so

943
00:31:36,320 --> 00:31:38,240
frequently updated so your update notes

944
00:31:38,240 --> 00:31:39,200
are great

945
00:31:39,200 --> 00:31:41,279
um but one question i did hope to get

946
00:31:41,279 --> 00:31:43,120
your take on and i don't know an answer

947
00:31:43,120 --> 00:31:44,320
to this yet

948
00:31:44,320 --> 00:31:47,519
do you have any preferred tooling that

949
00:31:47,519 --> 00:31:50,799
specifically looks at the older evtx

950
00:31:50,799 --> 00:31:53,519
files versus i'm sorry the evt versus

951
00:31:53,519 --> 00:31:56,240
the evtx files

952
00:31:56,240 --> 00:31:58,559
uh yeah typically i i typically just

953
00:31:58,559 --> 00:32:00,320
throw this through through axiom i also

954
00:32:00,320 --> 00:32:02,320
know nearsoft has a tool as well i think

955
00:32:02,320 --> 00:32:04,399
it's called my event viewer

956
00:32:04,399 --> 00:32:06,240
i haven't worked on the syntax for that

957
00:32:06,240 --> 00:32:07,120
yet

958
00:32:07,120 --> 00:32:08,880
that's actually on my to-do list is to

959
00:32:08,880 --> 00:32:11,279
make a module cape module for

960
00:32:11,279 --> 00:32:12,559
i believe it's my event viewer i can't

961
00:32:12,559 --> 00:32:14,399
remember the exact name but it then it

962
00:32:14,399 --> 00:32:17,120
would cover those ebt files

963
00:32:17,120 --> 00:32:19,279
excellent well i had a i had a sneaking

964
00:32:19,279 --> 00:32:21,120
suspicion that it was going to find its

965
00:32:21,120 --> 00:32:23,519
way back into the cape ecosystem which

966
00:32:23,519 --> 00:32:24,880
is kind of why i picked that one out to

967
00:32:24,880 --> 00:32:26,000
ask so

968
00:32:26,000 --> 00:32:29,000
awesome

