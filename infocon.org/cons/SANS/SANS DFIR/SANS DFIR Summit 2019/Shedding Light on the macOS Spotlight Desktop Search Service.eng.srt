1
00:00:01,290 --> 00:00:04,540
[Music]

2
00:00:12,930 --> 00:00:18,160
so welcome to shedding light on the Mac

3
00:00:15,220 --> 00:00:20,619
OS spotlight desktop search service it's

4
00:00:18,160 --> 00:00:22,210
it's a rule apparently to have something

5
00:00:20,619 --> 00:00:23,350
about shedding light or a flash light or

6
00:00:22,210 --> 00:00:24,880
something anytime you're talking about a

7
00:00:23,350 --> 00:00:29,199
spotlight thing so I figured I'd play

8
00:00:24,880 --> 00:00:30,970
along with everyone else I am a I do

9
00:00:29,199 --> 00:00:33,970
research and development for a black-bag

10
00:00:30,970 --> 00:00:35,710
technologies before that I did some

11
00:00:33,970 --> 00:00:37,720
practitioner things and before that I

12
00:00:35,710 --> 00:00:38,950
was in academia for a while until they

13
00:00:37,720 --> 00:00:40,149
decided that they were done with me and

14
00:00:38,950 --> 00:00:42,969
they caught off my funding and told me

15
00:00:40,149 --> 00:00:45,070
to graduate I do lots of things with the

16
00:00:42,969 --> 00:00:47,440
community review boards and stuff

17
00:00:45,070 --> 00:00:49,090
organized besides no-load which we just

18
00:00:47,440 --> 00:00:51,730
announced so tell all your friends and

19
00:00:49,090 --> 00:00:53,680
I've written some some tools in the past

20
00:00:51,730 --> 00:00:56,260
that people around here may or may not

21
00:00:53,680 --> 00:00:57,610
have used I'd also like to say thanks to

22
00:00:56,260 --> 00:01:02,890
everyone for not just ditching after

23
00:00:57,610 --> 00:01:05,199
lunch okay so the very very very basics

24
00:01:02,890 --> 00:01:06,909
this is a spotlight is what supports

25
00:01:05,199 --> 00:01:08,439
desktop search on Mac OS so if you click

26
00:01:06,909 --> 00:01:09,880
the little magnifying glass in the upper

27
00:01:08,439 --> 00:01:11,258
left you're using spotlight if you use

28
00:01:09,880 --> 00:01:13,449
the finder window you're using spotlight

29
00:01:11,259 --> 00:01:15,639
it indexes file contents and file

30
00:01:13,450 --> 00:01:17,289
metadata ignore the fact that it indexes

31
00:01:15,639 --> 00:01:19,170
file content for the duration of my talk

32
00:01:17,289 --> 00:01:21,700
we're talking about metadata stuff only

33
00:01:19,170 --> 00:01:23,499
there are a bunch of pieces to it

34
00:01:21,700 --> 00:01:25,270
there's there's server processes that

35
00:01:23,499 --> 00:01:26,679
run there's an API you can access

36
00:01:25,270 --> 00:01:29,139
there's command-line tools there's all

37
00:01:26,679 --> 00:01:30,639
kinds of pieces to this kind of thing

38
00:01:29,139 --> 00:01:32,798
that makes it a little confusing

39
00:01:30,639 --> 00:01:35,979
sometimes it's mostly undocumented by

40
00:01:32,799 --> 00:01:37,779
Apple and we're gonna focus on metadata

41
00:01:35,979 --> 00:01:38,499
only for Mac OS and I think for the

42
00:01:37,779 --> 00:01:41,348
first time anywhere

43
00:01:38,499 --> 00:01:43,208
iOS stuff so the store basically just

44
00:01:41,349 --> 00:01:43,689
holds key value pairs that's that's all

45
00:01:43,209 --> 00:01:45,669
we care about

46
00:01:43,689 --> 00:01:48,428
KMD item something or other equals a

47
00:01:45,669 --> 00:01:50,408
date or a time or whatever and also keep

48
00:01:48,429 --> 00:01:52,419
in mind that this is an ongoing area of

49
00:01:50,409 --> 00:01:54,099
research I've been poking at for for

50
00:01:52,419 --> 00:01:56,169
years and as we'll see later any

51
00:01:54,099 --> 00:01:58,419
third-party app can register itself to

52
00:01:56,169 --> 00:02:01,840
have metadata for its own files inserted

53
00:01:58,419 --> 00:02:03,369
into the spotlight index so anybody can

54
00:02:01,840 --> 00:02:05,049
put stuff in there and not document what

55
00:02:03,369 --> 00:02:06,639
is there or why or what behavior it

56
00:02:05,049 --> 00:02:07,869
specifically means which makes it a

57
00:02:06,639 --> 00:02:09,250
little bit like the registry and that

58
00:02:07,869 --> 00:02:13,180
you have to go digging around to see

59
00:02:09,250 --> 00:02:14,340
what could possibly show up so one

60
00:02:13,180 --> 00:02:17,610
little why do you

61
00:02:14,340 --> 00:02:19,319
thing so this is from one of my personal

62
00:02:17,610 --> 00:02:21,510
machines and it's using one of the

63
00:02:19,319 --> 00:02:23,310
command-line tools to figure out some

64
00:02:21,510 --> 00:02:26,190
stuff about what I've been doing and we

65
00:02:23,310 --> 00:02:27,660
can see that the Google Chrome dot app

66
00:02:26,190 --> 00:02:30,180
is the application that it has a used

67
00:02:27,660 --> 00:02:32,250
count of 121 and then I was pretty

68
00:02:30,180 --> 00:02:34,290
surprised to see that there were 80 past

69
00:02:32,250 --> 00:02:37,890
dates when I had used Google stored in

70
00:02:34,290 --> 00:02:38,970
spotlight so it's date only and that use

71
00:02:37,890 --> 00:02:40,529
count is a little weird because

72
00:02:38,970 --> 00:02:41,700
sometimes it's incremented by one or two

73
00:02:40,530 --> 00:02:43,860
or three depending on how you run the

74
00:02:41,700 --> 00:02:46,170
app but tons and tons and tons and tons

75
00:02:43,860 --> 00:02:48,360
and tons of date stuff for application

76
00:02:46,170 --> 00:02:49,920
execution this is even a little more

77
00:02:48,360 --> 00:02:52,200
interesting to me because this is for a

78
00:02:49,920 --> 00:02:53,548
folder it's a use count for a folder so

79
00:02:52,200 --> 00:02:55,470
when you open the folder and find her

80
00:02:53,549 --> 00:02:57,480
the use count can be incremented and you

81
00:02:55,470 --> 00:02:58,950
have dates when the folder was used so

82
00:02:57,480 --> 00:03:00,238
somebody says I never touched the folder

83
00:02:58,950 --> 00:03:02,339
with the nasty pictures in it and you

84
00:03:00,239 --> 00:03:04,110
can go no you touched it 76 times on

85
00:03:02,340 --> 00:03:05,579
exactly these days and so I'll just sit

86
00:03:04,110 --> 00:03:10,349
in there and spotlight waiting for us to

87
00:03:05,579 --> 00:03:12,390
play with plus all this other kind of

88
00:03:10,349 --> 00:03:13,890
stuff is in spotlight and you never know

89
00:03:12,390 --> 00:03:15,899
what other third-party app could be

90
00:03:13,890 --> 00:03:17,069
running that also what's its data into

91
00:03:15,900 --> 00:03:19,079
spotlight as well but there's definitely

92
00:03:17,069 --> 00:03:21,089
activity related to locations and

93
00:03:19,079 --> 00:03:22,799
Printers and phone numbers and calendar

94
00:03:21,090 --> 00:03:24,959
items and stuff that you can pin to

95
00:03:22,799 --> 00:03:27,810
specific users even with a volume level

96
00:03:24,959 --> 00:03:30,450
spotlight database so tons and tons of

97
00:03:27,810 --> 00:03:32,489
things plus everybody's favorite so many

98
00:03:30,450 --> 00:03:34,858
time stamps there's a command you can

99
00:03:32,489 --> 00:03:37,410
run on your Mac OS system that will list

100
00:03:34,859 --> 00:03:39,030
all of the metadata attribute names that

101
00:03:37,410 --> 00:03:40,440
that are known on your system and I went

102
00:03:39,030 --> 00:03:42,120
and dug around and found everything that

103
00:03:40,440 --> 00:03:43,560
looked like it might be a time those are

104
00:03:42,120 --> 00:03:45,810
just the ones that are on my personal

105
00:03:43,560 --> 00:03:47,819
laptop there's potentially way way way

106
00:03:45,810 --> 00:03:50,519
more time stamps related to all kinds of

107
00:03:47,819 --> 00:03:52,708
things plus all of these things that

108
00:03:50,519 --> 00:03:54,329
look like time stamps that are the

109
00:03:52,709 --> 00:03:56,130
outlook stuff is clearly like a third

110
00:03:54,329 --> 00:03:57,630
party application that's registered some

111
00:03:56,130 --> 00:03:59,160
spotlight stuff some of these things

112
00:03:57,630 --> 00:04:01,829
look like time stamps maybe they are

113
00:03:59,160 --> 00:04:03,510
maybe they aren't who really knows so

114
00:04:01,829 --> 00:04:05,280
there's a lot of I'll say this over and

115
00:04:03,510 --> 00:04:08,630
over again there's a lot more work to do

116
00:04:05,280 --> 00:04:08,630
with digging around with what's in here

117
00:04:08,660 --> 00:04:12,209
so quick shout out to everyone else

118
00:04:11,069 --> 00:04:13,410
who's been working on this stuff for a

119
00:04:12,209 --> 00:04:14,549
while because I've been keeping up with

120
00:04:13,410 --> 00:04:16,950
it and lots of people have their hands

121
00:04:14,549 --> 00:04:19,500
in it and 500 forensics we got a DARPA

122
00:04:16,950 --> 00:04:22,048
DARPA cyber fast track grant in 2013 and

123
00:04:19,500 --> 00:04:23,729
wrote a tool and gave it away like bad

124
00:04:22,048 --> 00:04:25,590
capitalists and then at some point had

125
00:04:23,729 --> 00:04:27,479
to take the tool down there was a data

126
00:04:25,590 --> 00:04:28,590
leakage thing from f-secure Sarah

127
00:04:27,480 --> 00:04:30,360
has been playing with the stuff and

128
00:04:28,590 --> 00:04:32,760
posting interesting things which will

129
00:04:30,360 --> 00:04:35,010
refer back to Li Whitfield as also

130
00:04:32,760 --> 00:04:38,400
looked into timestamps in there

131
00:04:35,010 --> 00:04:40,289
Yogesh finally released in a free

132
00:04:38,400 --> 00:04:41,820
open-source tool so that anyone can go

133
00:04:40,290 --> 00:04:44,130
parse these databases and look at them

134
00:04:41,820 --> 00:04:46,469
in 2018 and he's figured out that in

135
00:04:44,130 --> 00:04:50,010
addition to volume level stores there's

136
00:04:46,470 --> 00:04:51,690
stuff inside of user databases this at

137
00:04:50,010 --> 00:04:54,120
wal Scanlon and macaque published a

138
00:04:51,690 --> 00:04:56,070
paper that also details some of the

139
00:04:54,120 --> 00:04:57,240
internal structure but still even with

140
00:04:56,070 --> 00:04:58,560
all of this stuff we still don't know

141
00:04:57,240 --> 00:05:00,960
although the internal structure and we

142
00:04:58,560 --> 00:05:04,140
still don't know what all can be

143
00:05:00,960 --> 00:05:04,710
inserted in there so I said it's

144
00:05:04,140 --> 00:05:07,050
complicated

145
00:05:04,710 --> 00:05:09,000
and it is the whole system relies on FS

146
00:05:07,050 --> 00:05:10,890
events the spotlights the base spotlight

147
00:05:09,000 --> 00:05:12,660
server as a subscriber to the FS events

148
00:05:10,890 --> 00:05:14,190
system so that anytime there's an update

149
00:05:12,660 --> 00:05:16,410
to the file system files created a

150
00:05:14,190 --> 00:05:18,420
deleted attributes are changed or

151
00:05:16,410 --> 00:05:22,590
whatever FS events notifies the

152
00:05:18,420 --> 00:05:24,660
spotlight server spotlight server calls

153
00:05:22,590 --> 00:05:26,580
this metadata importer for the file type

154
00:05:24,660 --> 00:05:27,870
to go grab the metadata for this

155
00:05:26,580 --> 00:05:29,340
particular file type and stick it into

156
00:05:27,870 --> 00:05:31,500
the store so third parties can register

157
00:05:29,340 --> 00:05:34,979
these and there's a bunch built in to OS

158
00:05:31,500 --> 00:05:36,960
X to Mac OS itself the metadata

159
00:05:34,980 --> 00:05:39,030
importers take out the stuff the good

160
00:05:36,960 --> 00:05:40,799
stuff hand it to the spotlight server

161
00:05:39,030 --> 00:05:42,239
which then pushes it into this content

162
00:05:40,800 --> 00:05:43,740
and metadata store that's the things

163
00:05:42,240 --> 00:05:46,470
that we actually care about the files on

164
00:05:43,740 --> 00:05:48,720
disk that have all the goodies so that

165
00:05:46,470 --> 00:05:50,340
at some point via an API other tools

166
00:05:48,720 --> 00:05:52,610
like the command-line tools and finder

167
00:05:50,340 --> 00:05:54,780
itself can access all of the stuff so

168
00:05:52,610 --> 00:05:56,220
tons of moving pieces it's good to have

169
00:05:54,780 --> 00:06:01,359
an overview of how this whole thing

170
00:05:56,220 --> 00:06:02,620
works though so like

171
00:06:01,360 --> 00:06:04,629
multiple different types of stores

172
00:06:02,620 --> 00:06:06,340
there's a their spotlight store stored

173
00:06:04,629 --> 00:06:08,650
at the roots of the volume

174
00:06:06,340 --> 00:06:10,989
there are also spotlight stores inside

175
00:06:08,650 --> 00:06:13,810
of user home directories and there's

176
00:06:10,990 --> 00:06:16,689
also separate things on iOS so volume

177
00:06:13,810 --> 00:06:18,550
level spotlight stuff first exists at

178
00:06:16,689 --> 00:06:20,530
this path that we see and has tons and

179
00:06:18,550 --> 00:06:22,270
tons and tons of files but the ones that

180
00:06:20,530 --> 00:06:24,340
we really care about are the volume

181
00:06:22,270 --> 00:06:26,109
configuration the IP list which will

182
00:06:24,340 --> 00:06:28,060
tell you which file path this particular

183
00:06:26,110 --> 00:06:31,629
store refers to usually it's the root of

184
00:06:28,060 --> 00:06:33,430
the volume and it can also tell you what

185
00:06:31,629 --> 00:06:34,779
folders are ignored to by spotlight

186
00:06:33,430 --> 00:06:35,979
because you can configure that if you

187
00:06:34,779 --> 00:06:38,409
want to hide things from spotlight

188
00:06:35,979 --> 00:06:40,419
potentially and you'll have a store v1

189
00:06:38,409 --> 00:06:41,680
which we ignore it's old store v2 is

190
00:06:40,419 --> 00:06:42,909
where good things are there are

191
00:06:41,680 --> 00:06:44,349
different individual stores than

192
00:06:42,909 --> 00:06:47,409
anything you can have multiple stores on

193
00:06:44,349 --> 00:06:49,840
a volume and each store has a store DB

194
00:06:47,409 --> 00:06:51,789
and a dot store dot DB and a cache

195
00:06:49,840 --> 00:06:53,619
folder the metadata attributes

196
00:06:51,789 --> 00:06:55,539
themselves are stored in the store dye

197
00:06:53,620 --> 00:06:57,219
DB and dot store DB file they're

198
00:06:55,539 --> 00:06:58,960
basically copies of one another it looks

199
00:06:57,219 --> 00:07:00,580
like the dot store dot DB gets written

200
00:06:58,960 --> 00:07:02,080
to first because occasionally it'll have

201
00:07:00,580 --> 00:07:04,199
just a few more entries and then the

202
00:07:02,080 --> 00:07:06,310
stuffs duplicated over into the store DB

203
00:07:04,199 --> 00:07:08,800
for the rest of the talk if I say

204
00:07:06,310 --> 00:07:11,169
something for a store dot store they're

205
00:07:08,800 --> 00:07:12,430
basically interchangeable right then

206
00:07:11,169 --> 00:07:13,690
there's this cache directory which I

207
00:07:12,430 --> 00:07:15,310
found super interesting that I don't

208
00:07:13,690 --> 00:07:19,389
know if has been talked about much but

209
00:07:15,310 --> 00:07:21,490
um there's a giant hierarchy of files

210
00:07:19,389 --> 00:07:23,860
underneath this cache folder like we see

211
00:07:21,490 --> 00:07:25,389
up top of just four digit numbers that

212
00:07:23,860 --> 00:07:27,879
don't have any particular meaning until

213
00:07:25,389 --> 00:07:29,500
you get down to an actual file itself so

214
00:07:27,879 --> 00:07:32,229
we see down here that there's a text

215
00:07:29,500 --> 00:07:34,180
file called mm for one six eight six

216
00:07:32,229 --> 00:07:37,089
four dot text and if we look at the text

217
00:07:34,180 --> 00:07:39,520
in the file itself just pay attention to

218
00:07:37,089 --> 00:07:40,900
the first line or so first name Josh as

219
00:07:39,520 --> 00:07:44,049
a street address and an email address

220
00:07:40,900 --> 00:07:45,729
and a few other things in there so the

221
00:07:44,050 --> 00:07:49,300
name of the file if four one six eight

222
00:07:45,729 --> 00:07:52,120
six four if you go to the file system

223
00:07:49,300 --> 00:07:53,860
itself and find the file whose inode is

224
00:07:52,120 --> 00:07:56,379
four one six eight six four or whatever

225
00:07:53,860 --> 00:07:58,330
that number was you'll see where the

226
00:07:56,379 --> 00:07:59,979
where that text and the cache file came

227
00:07:58,330 --> 00:08:02,318
from it came from this file which again

228
00:07:59,979 --> 00:08:04,270
has the Josh whatever and the phone

229
00:08:02,319 --> 00:08:06,849
number and the email address so that

230
00:08:04,270 --> 00:08:09,128
number lets you link these these cash

231
00:08:06,849 --> 00:08:09,789
holders cache files directly to an on

232
00:08:09,129 --> 00:08:12,310
disk file

233
00:08:09,789 --> 00:08:14,140
there are definitely examples of cache

234
00:08:12,310 --> 00:08:16,840
files still existing when

235
00:08:14,140 --> 00:08:18,250
the disk file does not so we don't know

236
00:08:16,840 --> 00:08:20,049
the mechanism of when they're created or

237
00:08:18,250 --> 00:08:21,970
deleted but there's definitely content

238
00:08:20,050 --> 00:08:23,770
there there's also a bunch of them that

239
00:08:21,970 --> 00:08:25,660
look like the cache files they say dot

240
00:08:23,770 --> 00:08:27,700
txt but they're they're binary plist

241
00:08:25,660 --> 00:08:29,380
they start with you know bplist00 but

242
00:08:27,700 --> 00:08:31,000
they don't parse in any tool that I've

243
00:08:29,380 --> 00:08:32,850
seen so far so I don't know what that is

244
00:08:31,000 --> 00:08:36,880
either

245
00:08:32,850 --> 00:08:38,800
okay so store DB store DB is where all

246
00:08:36,880 --> 00:08:40,870
the good stuff it's a pretty complicated

247
00:08:38,799 --> 00:08:42,429
file format but the basics are it starts

248
00:08:40,870 --> 00:08:45,760
off with a header with an own signature

249
00:08:42,429 --> 00:08:47,400
and the header part has pointers to

250
00:08:45,760 --> 00:08:49,810
other other things that we care about

251
00:08:47,400 --> 00:08:52,030
including a page map which keeps track

252
00:08:49,810 --> 00:08:54,910
of which pages are in use inside of this

253
00:08:52,030 --> 00:08:56,260
database looking creature that we're

254
00:08:54,910 --> 00:08:58,480
gonna look at a little more deeply

255
00:08:56,260 --> 00:09:00,250
it has pointers to these attribute

256
00:08:58,480 --> 00:09:02,620
tables there are five tables near the

257
00:09:00,250 --> 00:09:05,320
beginning of the file that hold that

258
00:09:02,620 --> 00:09:06,940
hold strings that are commonly used like

259
00:09:05,320 --> 00:09:08,950
attribute names that are used over and

260
00:09:06,940 --> 00:09:11,710
over and over again and some other stuff

261
00:09:08,950 --> 00:09:14,800
and then the records themselves so

262
00:09:11,710 --> 00:09:16,230
records there's at least one per file in

263
00:09:14,800 --> 00:09:18,459
the system that's indexed by spotlight

264
00:09:16,230 --> 00:09:21,070
there are occasionally more than one

265
00:09:18,460 --> 00:09:23,110
which will see the pages themselves are

266
00:09:21,070 --> 00:09:23,980
usually compressed with either deflate

267
00:09:23,110 --> 00:09:26,980
or lz4

268
00:09:23,980 --> 00:09:28,810
so pages of Records an individual record

269
00:09:26,980 --> 00:09:30,460
keeps track of its cell at the by note

270
00:09:28,810 --> 00:09:32,680
that it refers to and the parent inode I

271
00:09:30,460 --> 00:09:34,630
use inode instead of you know catalog ID

272
00:09:32,680 --> 00:09:37,660
or whatever is the file system uses to

273
00:09:34,630 --> 00:09:38,680
identify file so keeps track of that

274
00:09:37,660 --> 00:09:41,020
we're gonna look at all this just a

275
00:09:38,680 --> 00:09:42,959
little bit closer and quickly because as

276
00:09:41,020 --> 00:09:45,730
Lee pointed out I have too many slides

277
00:09:42,960 --> 00:09:47,530
so this is the file header eight PSD

278
00:09:45,730 --> 00:09:49,690
it's easy to find and easy to see and

279
00:09:47,530 --> 00:09:54,040
it's always there and it never changes a

280
00:09:49,690 --> 00:09:55,990
set of flags the page this is the offset

281
00:09:54,040 --> 00:09:59,290
in for K blocks to the page map the

282
00:09:55,990 --> 00:10:01,870
second big chunk of the file this is the

283
00:09:59,290 --> 00:10:03,040
size of the page map and you know this

284
00:10:01,870 --> 00:10:04,930
might be a little too small to see but

285
00:10:03,040 --> 00:10:09,610
the slides are available and you get the

286
00:10:04,930 --> 00:10:10,870
gist and then five that you in 32s that

287
00:10:09,610 --> 00:10:15,790
are offsets to each of the five

288
00:10:10,870 --> 00:10:19,630
attribute tables so if we go look at one

289
00:10:15,790 --> 00:10:21,099
of these offsets oh one more thing in

290
00:10:19,630 --> 00:10:22,900
there is the path the original path the

291
00:10:21,100 --> 00:10:25,330
path of the file itself the stored I DB

292
00:10:22,900 --> 00:10:26,590
file itself if you're doing research on

293
00:10:25,330 --> 00:10:27,880
this stuff like me and you have a folder

294
00:10:26,590 --> 00:10:29,140
with a bunch of these store ID

295
00:10:27,880 --> 00:10:30,970
be files and you forgot where they came

296
00:10:29,140 --> 00:10:37,150
from this might help you narrow it down

297
00:10:30,970 --> 00:10:40,030
later it has helped me okay the

298
00:10:37,150 --> 00:10:42,280
attribute tables themselves right if we

299
00:10:40,030 --> 00:10:44,140
go look at the address of the first one

300
00:10:42,280 --> 00:10:45,790
the offset of the first one we'll see

301
00:10:44,140 --> 00:10:48,130
that again there's a there's a page

302
00:10:45,790 --> 00:10:50,770
header here which is nice and we can

303
00:10:48,130 --> 00:10:53,260
clearly see that all of the strings for

304
00:10:50,770 --> 00:10:55,210
KMD item blah-blah-blah-blah-blah are

305
00:10:53,260 --> 00:10:58,150
all spelled out in this one particular

306
00:10:55,210 --> 00:10:59,830
thing a consequence of this is that if

307
00:10:58,150 --> 00:11:01,660
you want to later go try to reconstruct

308
00:10:59,830 --> 00:11:03,880
records all of the things you need to

309
00:11:01,660 --> 00:11:05,740
make one record or not just in one

310
00:11:03,880 --> 00:11:08,380
little blob in the file they're kind of

311
00:11:05,740 --> 00:11:10,510
scattered about if we go look at the

312
00:11:08,380 --> 00:11:13,840
second attribute table again a page

313
00:11:10,510 --> 00:11:15,939
header and some there's a second so this

314
00:11:13,840 --> 00:11:18,100
these tables can also any dimension they

315
00:11:15,940 --> 00:11:21,310
don't always fit in one page and so you

316
00:11:18,100 --> 00:11:24,040
can have a next page field that's set so

317
00:11:21,310 --> 00:11:26,229
that the table can can go over multiple

318
00:11:24,040 --> 00:11:28,240
pages in the database so you can track

319
00:11:26,230 --> 00:11:30,130
the next page that holds more of this

320
00:11:28,240 --> 00:11:33,250
attribute table by this next actually

321
00:11:30,130 --> 00:11:37,210
next page thing and then this text

322
00:11:33,250 --> 00:11:39,570
itself is part of part of the the values

323
00:11:37,210 --> 00:11:42,190
key value stuff this is specifically for

324
00:11:39,570 --> 00:11:44,320
like the item type things you know

325
00:11:42,190 --> 00:11:44,920
public that email public dot item JPEG

326
00:11:44,320 --> 00:11:48,130
out whatever

327
00:11:44,920 --> 00:11:49,780
so again stuff in attribute tables is

328
00:11:48,130 --> 00:11:51,730
record data but separated from the

329
00:11:49,780 --> 00:11:54,910
records the other attribute tables

330
00:11:51,730 --> 00:11:58,270
generally just hold offsets into these

331
00:11:54,910 --> 00:11:59,890
attribute tables so a record it's a

332
00:11:58,270 --> 00:12:03,010
super complicated thing that I'm not

333
00:11:59,890 --> 00:12:04,540
gonna dig into a lot but they caught the

334
00:12:03,010 --> 00:12:06,610
format is complicated as we'll keep

335
00:12:04,540 --> 00:12:09,209
saying so where are the records

336
00:12:06,610 --> 00:12:13,290
themselves that we actually care about I

337
00:12:09,210 --> 00:12:13,290
just found the clock that's nice

338
00:12:13,630 --> 00:12:17,410
records organized into into pages

339
00:12:15,160 --> 00:12:19,030
they're compressed they have these

340
00:12:17,410 --> 00:12:20,860
fields and some other ones but these are

341
00:12:19,030 --> 00:12:24,100
the ones that we care about usually the

342
00:12:20,860 --> 00:12:25,660
inode and its parent and Flags a unique

343
00:12:24,100 --> 00:12:27,520
identifier because as we'll see the

344
00:12:25,660 --> 00:12:29,050
inode is not a unique identifier because

345
00:12:27,520 --> 00:12:32,480
you can have multiple records for the

346
00:12:29,050 --> 00:12:35,180
same file and a date up head

347
00:12:32,480 --> 00:12:37,700
to add to the complexity here all of the

348
00:12:35,180 --> 00:12:39,979
fields with an asterisk are stored not

349
00:12:37,700 --> 00:12:41,420
as like in in 64 and in 32 they're

350
00:12:39,980 --> 00:12:42,920
stored as a variable length integers

351
00:12:41,420 --> 00:12:45,649
depending on the size of the integer

352
00:12:42,920 --> 00:12:47,360
they can be from 1 to 9 bytes this means

353
00:12:45,649 --> 00:12:49,490
looking at this stuff in a hex editor

354
00:12:47,360 --> 00:12:54,410
and trying to make sense of it is not

355
00:12:49,490 --> 00:12:56,959
not nice so we can see a page header for

356
00:12:54,410 --> 00:12:58,519
where the records and note that all of

357
00:12:56,959 --> 00:13:01,510
this content is the following this is

358
00:12:58,519 --> 00:13:04,160
all it's all compressed garbage right

359
00:13:01,510 --> 00:13:06,319
the page length which is almost always

360
00:13:04,160 --> 00:13:09,319
the same the amount of the page that's

361
00:13:06,320 --> 00:13:10,430
actually used flags that indicate if the

362
00:13:09,320 --> 00:13:12,140
thing is compressed and what type of

363
00:13:10,430 --> 00:13:15,949
compression so here it's obviously

364
00:13:12,140 --> 00:13:18,740
compressed and the uncompressed length

365
00:13:15,950 --> 00:13:20,329
so you can use this as like parameters

366
00:13:18,740 --> 00:13:21,320
to deflate or lz4 or whatever so you

367
00:13:20,329 --> 00:13:23,739
know you know what you're supposed to

368
00:13:21,320 --> 00:13:23,740
end up with

369
00:13:26,200 --> 00:13:30,430
all right so I went and uncompressed a

370
00:13:28,180 --> 00:13:32,380
single page just so we could go look at

371
00:13:30,430 --> 00:13:34,229
an uncompressed page and so the hex down

372
00:13:32,380 --> 00:13:36,700
at the bottom you can see that there are

373
00:13:34,230 --> 00:13:40,060
tons of useful strings in there for

374
00:13:36,700 --> 00:13:41,980
Strings and and grep type people so you

375
00:13:40,060 --> 00:13:43,779
might think that's it's useful but keep

376
00:13:41,980 --> 00:13:45,220
in mind they're in compressed pages and

377
00:13:43,779 --> 00:13:47,260
the stuff in between them is with these

378
00:13:45,220 --> 00:13:49,389
variable length integers that are a

379
00:13:47,260 --> 00:13:51,550
giant mess and there's levels there's

380
00:13:49,389 --> 00:13:53,699
more levels of complexity that are

381
00:13:51,550 --> 00:13:56,949
required to actually get to a record

382
00:13:53,699 --> 00:13:58,420
that are kind of terrifying which is why

383
00:13:56,949 --> 00:14:00,040
I think it took so long for somebody

384
00:13:58,420 --> 00:14:01,959
else to write an open source tool that

385
00:14:00,040 --> 00:14:05,260
does this it's it's a pain you basically

386
00:14:01,959 --> 00:14:06,819
have an offset into the into the first

387
00:14:05,260 --> 00:14:09,130
attribute table that says the key name

388
00:14:06,820 --> 00:14:11,019
and then you'll have an offset into some

389
00:14:09,130 --> 00:14:12,699
of the other tables that will in turn

390
00:14:11,019 --> 00:14:14,199
have offsets and two other tables and

391
00:14:12,699 --> 00:14:15,849
you chase this around for a bit and try

392
00:14:14,199 --> 00:14:18,279
not to mess it up and hopefully you get

393
00:14:15,850 --> 00:14:20,350
back something that makes sense so

394
00:14:18,279 --> 00:14:23,980
contents for the volume level store

395
00:14:20,350 --> 00:14:25,389
specifically I'm assuming most people

396
00:14:23,980 --> 00:14:28,000
have seen this stuff before and I want

397
00:14:25,389 --> 00:14:31,390
to focus more on the the other the other

398
00:14:28,000 --> 00:14:34,019
types but a cool tidbit is so I keep

399
00:14:31,390 --> 00:14:37,269
saying that you could have multiple

400
00:14:34,019 --> 00:14:38,680
multiple records for a single file we

401
00:14:37,269 --> 00:14:41,260
don't know the mechanism for which this

402
00:14:38,680 --> 00:14:43,300
exists maybe it was an OS update or an

403
00:14:41,260 --> 00:14:45,519
update to spotlight itself or maybe

404
00:14:43,300 --> 00:14:47,380
there's some 30 pages or something but

405
00:14:45,519 --> 00:14:49,420
we can clearly see here that the object

406
00:14:47,380 --> 00:14:52,660
identifier between these two highly

407
00:14:49,420 --> 00:14:54,490
snipped records is the same but the file

408
00:14:52,660 --> 00:14:58,300
name is different and the date updated

409
00:14:54,490 --> 00:14:59,709
of the record itself is different so if

410
00:14:58,300 --> 00:15:01,540
you have these kind of historical

411
00:14:59,709 --> 00:15:04,599
records in the database and you have

412
00:15:01,540 --> 00:15:07,870
historical databases via snapshots and

413
00:15:04,600 --> 00:15:10,480
maybe you can recover deleted spotlight

414
00:15:07,870 --> 00:15:12,790
indexes you could potentially use this

415
00:15:10,480 --> 00:15:14,980
to create a kind of snapshot and time

416
00:15:12,790 --> 00:15:16,569
history of an individual file you can

417
00:15:14,980 --> 00:15:17,920
see file name changes you can see size

418
00:15:16,569 --> 00:15:20,740
changes you can see all kinds of

419
00:15:17,920 --> 00:15:22,569
interesting things snapshot in time so

420
00:15:20,740 --> 00:15:24,910
you won't get every change but yeah

421
00:15:22,569 --> 00:15:28,269
you'll see some user-level spotlight

422
00:15:24,910 --> 00:15:29,889
stuff this is this is interesting so it

423
00:15:28,269 --> 00:15:33,310
used to be the case that spotlight only

424
00:15:29,889 --> 00:15:36,220
index things in terms of whole files now

425
00:15:33,310 --> 00:15:37,959
spotlight can index sub file entities

426
00:15:36,220 --> 00:15:40,000
like a single database record for a

427
00:15:37,959 --> 00:15:43,420
message in an SMS or a single

428
00:15:40,000 --> 00:15:45,730
you know whatever Twitter thing so the

429
00:15:43,420 --> 00:15:48,759
directory structure for the user level

430
00:15:45,730 --> 00:15:50,259
stuff looks like these two guys so the

431
00:15:48,759 --> 00:15:53,790
top one I actually just noticed recently

432
00:15:50,259 --> 00:15:56,829
but it looks like it's all built in

433
00:15:53,790 --> 00:15:58,569
indexing of like help menu stuff so not

434
00:15:56,829 --> 00:16:00,219
not user-generated content

435
00:15:58,569 --> 00:16:00,969
I only looked at it for a little bit but

436
00:16:00,220 --> 00:16:03,339
it didn't seem like there was

437
00:16:00,970 --> 00:16:07,230
interesting stuff there but I didn't

438
00:16:03,339 --> 00:16:09,279
want to neglect to mention it either and

439
00:16:07,230 --> 00:16:10,569
the one that we actually care about the

440
00:16:09,279 --> 00:16:13,300
second one so in the users home

441
00:16:10,569 --> 00:16:16,540
directory under library media course pot

442
00:16:13,300 --> 00:16:20,649
light indexed whatever you'll have store

443
00:16:16,540 --> 00:16:23,920
files again so the store file is the

444
00:16:20,649 --> 00:16:24,670
same as the volume level ones kind of

445
00:16:23,920 --> 00:16:26,620
they're almost the same

446
00:16:24,670 --> 00:16:29,439
in fact the file format really is

447
00:16:26,620 --> 00:16:31,120
exactly the same the interesting tidbits

448
00:16:29,439 --> 00:16:33,370
here are that it obviously relates to

449
00:16:31,120 --> 00:16:34,959
activity and items of interest about a

450
00:16:33,370 --> 00:16:39,819
specific user because it's in their home

451
00:16:34,959 --> 00:16:42,609
directory and the unknown part so the

452
00:16:39,819 --> 00:16:45,069
inode field for all over the records in

453
00:16:42,610 --> 00:16:46,720
the user level database it's all just

454
00:16:45,069 --> 00:16:48,009
some large positive or negative integer

455
00:16:46,720 --> 00:16:50,259
or I'm misinterpreting it it's

456
00:16:48,009 --> 00:16:51,819
definitely no longer and inode which

457
00:16:50,259 --> 00:16:56,160
makes sense if these things are

458
00:16:51,819 --> 00:16:58,689
addressing kind of sub file entries

459
00:16:56,160 --> 00:17:01,629
which is bad for us and the parent is

460
00:16:58,689 --> 00:17:03,250
always 0-2 so with the volume level

461
00:17:01,629 --> 00:17:05,289
records if you have inode and parent

462
00:17:03,250 --> 00:17:07,419
that allows you to reconstruct paths for

463
00:17:05,289 --> 00:17:09,069
the files which is nice to have because

464
00:17:07,419 --> 00:17:11,799
the path isn't actually stored in an

465
00:17:09,069 --> 00:17:15,188
individual record these guys don't

466
00:17:11,799 --> 00:17:17,500
really allow you to do the same thing so

467
00:17:15,189 --> 00:17:22,600
otherwise it's effectively the same as

468
00:17:17,500 --> 00:17:22,940
the volume level file format so we're

469
00:17:22,599 --> 00:17:25,609
gonna still

470
00:17:22,940 --> 00:17:29,570
can you find in there so safari history

471
00:17:25,609 --> 00:17:32,419
items it gives you the URL description a

472
00:17:29,570 --> 00:17:34,669
last used date used counts and a page

473
00:17:32,420 --> 00:17:37,520
visit count so although all of these

474
00:17:34,670 --> 00:17:39,020
counts and times are not very well

475
00:17:37,520 --> 00:17:41,090
explored and needs a ton of

476
00:17:39,020 --> 00:17:43,040
experimentation to find out you know

477
00:17:41,090 --> 00:17:44,840
what they actually mean but the fact

478
00:17:43,040 --> 00:17:47,060
that all of this interesting stuff is

479
00:17:44,840 --> 00:17:50,209
being recorded is kind of kind of the

480
00:17:47,060 --> 00:17:54,710
fun part for right now like I said it's

481
00:17:50,210 --> 00:17:56,330
not linked to to a file itself but lots

482
00:17:54,710 --> 00:17:58,310
of these records have things that look

483
00:17:56,330 --> 00:18:01,520
like the bottom row and an external ID

484
00:17:58,310 --> 00:18:03,200
and there's other ID typed fields that

485
00:18:01,520 --> 00:18:05,240
don't have any completely obvious

486
00:18:03,200 --> 00:18:07,760
meaning but maybe somehow that is the

487
00:18:05,240 --> 00:18:09,680
linkage to where this particular history

488
00:18:07,760 --> 00:18:11,270
record resides either in a pea list or

489
00:18:09,680 --> 00:18:13,190
in a database or maybe in a file or

490
00:18:11,270 --> 00:18:17,990
wherever wherever it's it's based on the

491
00:18:13,190 --> 00:18:19,640
version of Mac OS right yeah Safari

492
00:18:17,990 --> 00:18:21,800
bookmarks the same thing so you get the

493
00:18:19,640 --> 00:18:25,430
the URL for the bookmark itself and in

494
00:18:21,800 --> 00:18:27,500
the description notes I never actually

495
00:18:25,430 --> 00:18:29,660
used notes under Mac OS I wanted to see

496
00:18:27,500 --> 00:18:32,420
if notes stuff popped up so I wrote a

497
00:18:29,660 --> 00:18:34,160
note that says I am a note and it did in

498
00:18:32,420 --> 00:18:36,230
fact appear in the spotlight database so

499
00:18:34,160 --> 00:18:39,310
the actual text of the note is there in

500
00:18:36,230 --> 00:18:41,990
addition to time when it was created and

501
00:18:39,310 --> 00:18:43,909
if it was modified and when and a

502
00:18:41,990 --> 00:18:46,100
description and all kinds of other

503
00:18:43,910 --> 00:18:48,200
information the kind of you know

504
00:18:46,100 --> 00:18:50,060
metadata about the individual note that

505
00:18:48,200 --> 00:18:51,860
you may or may not yet from from other

506
00:18:50,060 --> 00:18:58,159
sources and you certainly don't get like

507
00:18:51,860 --> 00:18:59,780
in the notes you I write maps this is

508
00:18:58,160 --> 00:19:04,510
another one that I wanted to poke into a

509
00:18:59,780 --> 00:19:07,460
little bit more but time is short so

510
00:19:04,510 --> 00:19:11,060
doing map search in the in the Mac OS

511
00:19:07,460 --> 00:19:13,640
Mac's Maps app generates content that's

512
00:19:11,060 --> 00:19:15,500
indexed by spotlight the most

513
00:19:13,640 --> 00:19:19,270
interesting part is where I have that

514
00:19:15,500 --> 00:19:21,740
arrow is this is a few hundred bytes of

515
00:19:19,270 --> 00:19:25,100
base64 encoded I don't know exactly what

516
00:19:21,740 --> 00:19:26,570
yet but it almost certainly has latitude

517
00:19:25,100 --> 00:19:28,969
and longitude or the picture that was

518
00:19:26,570 --> 00:19:31,669
shown or something we need to go to go

519
00:19:28,970 --> 00:19:35,090
play around and see again with a use

520
00:19:31,670 --> 00:19:36,650
count and a kmb item used dates that can

521
00:19:35,090 --> 00:19:38,659
actually be a giant list

522
00:19:36,650 --> 00:19:42,140
of dates like we saw in the initial

523
00:19:38,660 --> 00:19:47,270
motivation slide so all kinds of fun

524
00:19:42,140 --> 00:19:50,360
stuff here the Mac News app similar

525
00:19:47,270 --> 00:19:51,860
thing so I'm a crypto fan so I went

526
00:19:50,360 --> 00:19:53,780
looking around in the news app for stuff

527
00:19:51,860 --> 00:19:56,689
about crypto e things and immediately

528
00:19:53,780 --> 00:19:58,610
the this was generated in spotlight so

529
00:19:56,690 --> 00:20:01,850
support for bitcoins Lightning Network

530
00:19:58,610 --> 00:20:04,100
yay fun again with another so this also

531
00:20:01,850 --> 00:20:05,389
has like an external ID but it doesn't

532
00:20:04,100 --> 00:20:07,010
like that other thing was like a hex

533
00:20:05,390 --> 00:20:08,900
string and this isn't a hex ring says

534
00:20:07,010 --> 00:20:10,910
it's another version of an external ID

535
00:20:08,900 --> 00:20:12,950
that may be able to link us back to the

536
00:20:10,910 --> 00:20:15,490
original artifact but I haven't figured

537
00:20:12,950 --> 00:20:15,490
that part out yet

538
00:20:16,510 --> 00:20:20,870
so all these previous ones were built in

539
00:20:18,980 --> 00:20:23,630
apps that are on all of the systems

540
00:20:20,870 --> 00:20:25,459
right I also heavily use Evernote to

541
00:20:23,630 --> 00:20:27,440
organize the stuff that rattles around

542
00:20:25,460 --> 00:20:28,610
in my brain and it turns out that

543
00:20:27,440 --> 00:20:32,840
Evernote is one of these third-party

544
00:20:28,610 --> 00:20:35,178
apps that has registered an importer and

545
00:20:32,840 --> 00:20:38,260
so that when you do stuff in Evernote it

546
00:20:35,179 --> 00:20:40,250
gets indexed by spotlight so this is me

547
00:20:38,260 --> 00:20:42,200
looking around at the Windows 10

548
00:20:40,250 --> 00:20:44,900
notification database specifically the

549
00:20:42,200 --> 00:20:46,850
wall and seeing what was in there so the

550
00:20:44,900 --> 00:20:49,370
title of the thing when it was created

551
00:20:46,850 --> 00:20:52,939
and when and if it was modified along

552
00:20:49,370 --> 00:20:53,870
with again an external ID and bundle IDs

553
00:20:52,940 --> 00:20:55,550
when were just talking about those

554
00:20:53,870 --> 00:20:56,989
there's a bundle IDs for all of these

555
00:20:55,550 --> 00:20:57,800
things keep in mind that all of that

556
00:20:56,990 --> 00:20:58,820
probably should have mentioned this

557
00:20:57,800 --> 00:21:00,649
first all of these things that I'm

558
00:20:58,820 --> 00:21:03,169
showing you or you know four or five or

559
00:21:00,650 --> 00:21:04,550
six of the of the metadata items and

560
00:21:03,170 --> 00:21:06,080
there's generally more like twenty or

561
00:21:04,550 --> 00:21:08,360
thirty of them there's plenty more stuff

562
00:21:06,080 --> 00:21:09,980
cut out all of the things that were less

563
00:21:08,360 --> 00:21:11,899
interesting so you could maybe read it

564
00:21:09,980 --> 00:21:15,559
on a slide but there's way way way more

565
00:21:11,900 --> 00:21:16,970
stuff and you know I'm not there may be

566
00:21:15,559 --> 00:21:19,399
other interesting things that I just

567
00:21:16,970 --> 00:21:20,780
don't see as interesting so I hope I'm

568
00:21:19,400 --> 00:21:25,600
impressing upon you that you need to go

569
00:21:20,780 --> 00:21:28,299
dig around in these things okay

570
00:21:25,600 --> 00:21:29,678
i OS spotlight stuff so this is a little

571
00:21:28,299 --> 00:21:31,270
bit different I don't think anybody has

572
00:21:29,679 --> 00:21:34,210
been able to play around in these things

573
00:21:31,270 --> 00:21:36,520
before at least I haven't seen anybody

574
00:21:34,210 --> 00:21:40,030
who has so I wasn't even sure that there

575
00:21:36,520 --> 00:21:43,150
was spotlight on iOS until mmm six or

576
00:21:40,030 --> 00:21:45,460
eight months ago so if you have a great

577
00:21:43,150 --> 00:21:48,130
key extraction or if you root a phone or

578
00:21:45,460 --> 00:21:51,130
whatever that path up at the top gives

579
00:21:48,130 --> 00:21:54,280
you these three sub directories there

580
00:21:51,130 --> 00:21:57,250
are three separate spotlight stores on

581
00:21:54,280 --> 00:21:58,990
iOS that relate to the security settings

582
00:21:57,250 --> 00:22:02,010
on the device that NS file protection

583
00:21:58,990 --> 00:22:04,270
stuff is not my area of expertise but

584
00:22:02,010 --> 00:22:07,570
mmm there's different stuff in all of

585
00:22:04,270 --> 00:22:10,450
them and under each folder you'll have

586
00:22:07,570 --> 00:22:12,460
an indexed spotlight b2 and a storage or

587
00:22:10,450 --> 00:22:16,480
DB and a cache folder just like we've

588
00:22:12,460 --> 00:22:21,159
seen before plus all of these other DB

589
00:22:16,480 --> 00:22:23,890
string1 dot map whatever which I'll tell

590
00:22:21,159 --> 00:22:25,690
you how they're relevant in a sec plus

591
00:22:23,890 --> 00:22:29,919
again dozens and dozens and dozens of

592
00:22:25,690 --> 00:22:31,690
other files here so the iOS store

593
00:22:29,919 --> 00:22:33,940
structure is similar to these store

594
00:22:31,690 --> 00:22:35,620
structures of the volume level and user

595
00:22:33,940 --> 00:22:37,750
level stuff except for the fact that the

596
00:22:35,620 --> 00:22:39,639
attribute tables are missing they're

597
00:22:37,750 --> 00:22:41,770
just not there so if you go try to parse

598
00:22:39,640 --> 00:22:44,260
it with code that expects a normal

599
00:22:41,770 --> 00:22:47,020
spotlight store you get nothing because

600
00:22:44,260 --> 00:22:48,039
there's there's no key names anywhere in

601
00:22:47,020 --> 00:22:49,330
the file they're not there I've

602
00:22:48,039 --> 00:22:52,690
compressed everything and dug around

603
00:22:49,330 --> 00:22:54,100
they're definitely not there so they're

604
00:22:52,690 --> 00:22:56,380
actually stored and those dot map

605
00:22:54,100 --> 00:22:59,559
whatever files so there's there's a for

606
00:22:56,380 --> 00:23:03,549
each attribute table there's five text

607
00:22:59,559 --> 00:23:05,020
files five text files that that hold all

608
00:23:03,549 --> 00:23:06,730
of the stuff that you need to parse the

609
00:23:05,020 --> 00:23:10,900
attribute table data to be able to go

610
00:23:06,730 --> 00:23:13,000
get stuff out of iOS so it's one of

611
00:23:10,900 --> 00:23:14,409
those painful things where in order to I

612
00:23:13,000 --> 00:23:16,270
want to decode the store file but

613
00:23:14,409 --> 00:23:18,070
actually have to touch to decode the

614
00:23:16,270 --> 00:23:20,740
spotlight store on iOS means three

615
00:23:18,070 --> 00:23:22,178
different stores with like 25 external

616
00:23:20,740 --> 00:23:23,500
files apish at the parse like a hundred

617
00:23:22,179 --> 00:23:25,240
files in the frequent file system to get

618
00:23:23,500 --> 00:23:28,600
this to show you anything anything

619
00:23:25,240 --> 00:23:30,730
reasonable also like the user level

620
00:23:28,600 --> 00:23:32,530
stuff it doesn't use an actual like I

621
00:23:30,730 --> 00:23:35,650
know to refer back to a file it uses

622
00:23:32,530 --> 00:23:38,530
something else what are some things that

623
00:23:35,650 --> 00:23:39,320
we can get SMS messages including

624
00:23:38,530 --> 00:23:41,840
snippets from

625
00:23:39,320 --> 00:23:43,310
the message I didn't actually type any

626
00:23:41,840 --> 00:23:44,929
of these things it's from a phone that's

627
00:23:43,310 --> 00:23:47,750
not mine

628
00:23:44,930 --> 00:23:49,340
but you get who sent it and when and the

629
00:23:47,750 --> 00:23:52,460
phone numbers and the message text

630
00:23:49,340 --> 00:23:52,909
itself I mean just all kinds of fun

631
00:23:52,460 --> 00:23:56,120
stuff

632
00:23:52,910 --> 00:23:59,080
there's alternate names and they're tons

633
00:23:56,120 --> 00:23:59,080
and tons and tons of things

634
00:23:59,310 --> 00:24:05,790
I message e stuff so same thing similar

635
00:24:03,450 --> 00:24:07,380
kind of thing where and you also get a

636
00:24:05,790 --> 00:24:08,970
snippet so you actually get the text of

637
00:24:07,380 --> 00:24:10,530
the message itself without having to

638
00:24:08,970 --> 00:24:13,050
have any of the databases or anything

639
00:24:10,530 --> 00:24:14,639
like that and contact information for

640
00:24:13,050 --> 00:24:16,740
the people who are doing it including

641
00:24:14,640 --> 00:24:18,870
phone numbers and and alternate names

642
00:24:16,740 --> 00:24:21,510
and email addresses and just I mean a

643
00:24:18,870 --> 00:24:27,239
ridiculous wealth of information alright

644
00:24:21,510 --> 00:24:29,640
a similar thing with Maps only where

645
00:24:27,240 --> 00:24:32,730
before the the I think the juicy Maps

646
00:24:29,640 --> 00:24:35,790
data was in that base64 encoded blob and

647
00:24:32,730 --> 00:24:38,460
didn't do anything with on iOS the maps

648
00:24:35,790 --> 00:24:40,649
entries actually give you like latitude

649
00:24:38,460 --> 00:24:42,300
longitude and 8/8 different fields that

650
00:24:40,650 --> 00:24:44,190
all tell you the address in one form or

651
00:24:42,300 --> 00:24:47,460
another so super super super specific

652
00:24:44,190 --> 00:24:52,170
and fun oh and a use count and news

653
00:24:47,460 --> 00:24:54,660
dates and bad formatting on my part ooh

654
00:24:52,170 --> 00:24:56,520
reminders including the title of the

655
00:24:54,660 --> 00:24:59,160
reminder when the reminder was said the

656
00:24:56,520 --> 00:25:01,230
completion day you know all of this kind

657
00:24:59,160 --> 00:25:03,780
of stuff again all basically just

658
00:25:01,230 --> 00:25:07,140
sitting there and spotlight as as yet as

659
00:25:03,780 --> 00:25:08,160
far as I know untouched by anyone this

660
00:25:07,140 --> 00:25:10,410
is a phone I didn't have any control

661
00:25:08,160 --> 00:25:12,000
over so I just went and scrolling around

662
00:25:10,410 --> 00:25:13,890
looking for fun things there could be

663
00:25:12,000 --> 00:25:16,050
way way way way way more stuff in there

664
00:25:13,890 --> 00:25:18,240
if it was a phone that was under regular

665
00:25:16,050 --> 00:25:21,419
use by an iOS power user this is one of

666
00:25:18,240 --> 00:25:23,550
our test phones from work calendar

667
00:25:21,420 --> 00:25:25,500
events same thing the title of calendar

668
00:25:23,550 --> 00:25:28,050
event when when the calendar event was

669
00:25:25,500 --> 00:25:29,310
for the expiration date account

670
00:25:28,050 --> 00:25:33,030
identifier I don't know what they are

671
00:25:29,310 --> 00:25:38,669
bundle IDs are everywhere so we should

672
00:25:33,030 --> 00:25:40,560
talk after this contact information also

673
00:25:38,670 --> 00:25:43,230
in there so I feel like I'm beating a

674
00:25:40,560 --> 00:25:44,580
dead horse here but lots of stuff email

675
00:25:43,230 --> 00:25:46,230
I couldn't find any particularly

676
00:25:44,580 --> 00:25:48,389
interesting email stuff except that this

677
00:25:46,230 --> 00:25:50,040
looks like it points to a gmail account

678
00:25:48,390 --> 00:25:51,780
and it may just be the case that that

679
00:25:50,040 --> 00:25:54,899
mail wasn't used a whole lot on this

680
00:25:51,780 --> 00:25:57,330
test phone as I expect there to be way

681
00:25:54,900 --> 00:25:59,940
way way more email stuff third-party

682
00:25:57,330 --> 00:26:01,740
apps so Twitter on your iPhone is gonna

683
00:25:59,940 --> 00:26:04,050
generate stuff that gets indexed by

684
00:26:01,740 --> 00:26:05,550
spotlight so we have no idea what

685
00:26:04,050 --> 00:26:07,919
happens if you remove

686
00:26:05,550 --> 00:26:10,560
Twitter if what happens to the stuff

687
00:26:07,920 --> 00:26:14,240
that's indexed in spotlight I assume it

688
00:26:10,560 --> 00:26:16,409
goes away the volume levels stores

689
00:26:14,240 --> 00:26:18,360
aggressively delete content when you

690
00:26:16,410 --> 00:26:20,220
delete a file if you delete a file the

691
00:26:18,360 --> 00:26:22,469
content inside the volume level stores

692
00:26:20,220 --> 00:26:24,180
removed instantly or within seconds or

693
00:26:22,470 --> 00:26:27,330
maybe minutes it's barely not there at

694
00:26:24,180 --> 00:26:29,330
all I don't have any idea for for iOS

695
00:26:27,330 --> 00:26:32,340
and the user level things yet

696
00:26:29,330 --> 00:26:33,870
okay so tons of fun stuff there that's

697
00:26:32,340 --> 00:26:36,689
all great I haven't told you how you can

698
00:26:33,870 --> 00:26:39,000
get it yet there are command line tools

699
00:26:36,690 --> 00:26:41,070
on Mac OS that will let you go query

700
00:26:39,000 --> 00:26:43,350
these things that we've seen little

701
00:26:41,070 --> 00:26:45,810
pieces of if you want to know how to use

702
00:26:43,350 --> 00:26:47,159
these way better and go look at Sara's

703
00:26:45,810 --> 00:26:48,389
blog post that I linked to early in the

704
00:26:47,160 --> 00:26:49,680
presentation she's got tons of great

705
00:26:48,390 --> 00:26:51,360
examples there we don't need to go into

706
00:26:49,680 --> 00:26:54,900
it but anyway these command line tools

707
00:26:51,360 --> 00:26:56,850
exist in iOS I jail Broca in Mac OS a

708
00:26:54,900 --> 00:26:59,640
jailbroken iPhone like six months ago

709
00:26:56,850 --> 00:27:02,699
and I couldn't find any of these tools

710
00:26:59,640 --> 00:27:04,710
there to query the index directly so

711
00:27:02,700 --> 00:27:07,080
they weren't there or they weren't there

712
00:27:04,710 --> 00:27:10,680
on that version of iOS or I screw

713
00:27:07,080 --> 00:27:12,179
something up which is possible the MD

714
00:27:10,680 --> 00:27:14,010
fine and MD LS are really your friends

715
00:27:12,180 --> 00:27:16,500
MD find is like fine but it gives you

716
00:27:14,010 --> 00:27:17,790
metadata attributes instead of it looks

717
00:27:16,500 --> 00:27:20,100
for metadata attributes inside of like a

718
00:27:17,790 --> 00:27:22,950
file name and MD LS instead of listing

719
00:27:20,100 --> 00:27:23,969
the file size and whatever lists all of

720
00:27:22,950 --> 00:27:25,890
the metadata stuff for that particular

721
00:27:23,970 --> 00:27:27,540
file you can daisy-chain these things

722
00:27:25,890 --> 00:27:29,130
together there's a whole language for

723
00:27:27,540 --> 00:27:31,800
regular expressions and filtering on

724
00:27:29,130 --> 00:27:35,220
sizes and it's a whole other talk on its

725
00:27:31,800 --> 00:27:37,110
own so you can use those things if you

726
00:27:35,220 --> 00:27:38,880
have a running system and spotlight to

727
00:27:37,110 --> 00:27:40,949
query on the running system if you just

728
00:27:38,880 --> 00:27:42,480
have a stored I DB file from some

729
00:27:40,950 --> 00:27:44,820
extraction somewhere Yogesh put out

730
00:27:42,480 --> 00:27:47,610
spotlight parser I stole this text from

731
00:27:44,820 --> 00:27:49,169
his website it's super simple to use you

732
00:27:47,610 --> 00:27:52,500
just basically run this on the store

733
00:27:49,170 --> 00:27:53,310
file an output directory and you get you

734
00:27:52,500 --> 00:27:54,990
get a list of all the metadata

735
00:27:53,310 --> 00:27:56,490
attributes in one file and another file

736
00:27:54,990 --> 00:27:58,620
that gives you all of the file paths

737
00:27:56,490 --> 00:27:59,820
reconstructed with the inode that it

738
00:27:58,620 --> 00:28:02,129
goes to the record so you have to do a

739
00:27:59,820 --> 00:28:06,659
little bit of looking back and forth but

740
00:28:02,130 --> 00:28:07,830
it's open source and free and cool today

741
00:28:06,660 --> 00:28:09,840
we're releasing a thing called

742
00:28:07,830 --> 00:28:11,639
illuminate because we needed a name that

743
00:28:09,840 --> 00:28:13,320
revolved around light or something it's

744
00:28:11,640 --> 00:28:14,880
a free command-line tool for parsing

745
00:28:13,320 --> 00:28:17,189
spotlight thing is it'll parse the full

746
00:28:14,880 --> 00:28:18,870
spotlight and v100 directory it'll do

747
00:28:17,190 --> 00:28:20,340
carving if you

748
00:28:18,870 --> 00:28:22,399
if I said this already if you google for

749
00:28:20,340 --> 00:28:24,959
spotlight whatever stuff tons of people

750
00:28:22,400 --> 00:28:26,190
have problems with it and the prevailing

751
00:28:24,960 --> 00:28:28,140
advice is to delete the spotlight

752
00:28:26,190 --> 00:28:29,820
directory and let it reindex because I

753
00:28:28,140 --> 00:28:30,960
start using up too much CPU which leads

754
00:28:29,820 --> 00:28:32,429
me to believe there are lots of old

755
00:28:30,960 --> 00:28:36,090
machines with lots of deleted spotlight

756
00:28:32,430 --> 00:28:37,680
directory sitting around usage overview

757
00:28:36,090 --> 00:28:39,060
you know we don't need to dig into this

758
00:28:37,680 --> 00:28:40,440
because I have some examples but you can

759
00:28:39,060 --> 00:28:42,480
give it a store file you can give it a

760
00:28:40,440 --> 00:28:44,340
spotlight - b100 directory you can give

761
00:28:42,480 --> 00:28:48,150
it an iOS thing you can give it a blob

762
00:28:44,340 --> 00:28:49,620
and tell it to carve it'll do paths for

763
00:28:48,150 --> 00:28:51,090
you so we see it'll give you the

764
00:28:49,620 --> 00:28:53,639
metadata attribute and all the stuff but

765
00:28:51,090 --> 00:28:56,100
also the path for the file you can give

766
00:28:53,640 --> 00:28:57,570
it the entire installation folder and it

767
00:28:56,100 --> 00:28:59,639
will parse out the volume configuration

768
00:28:57,570 --> 00:29:01,350
plist and and so there's fun things

769
00:28:59,640 --> 00:29:03,930
there like excluded directories and the

770
00:29:01,350 --> 00:29:06,000
path where the the store is for it will

771
00:29:03,930 --> 00:29:07,830
also parse the cache files so you can

772
00:29:06,000 --> 00:29:10,770
see that this particular file the path

773
00:29:07,830 --> 00:29:14,250
atop in bold and then the path to the

774
00:29:10,770 --> 00:29:15,840
cache file itself in bold and then the

775
00:29:14,250 --> 00:29:18,210
data a data snippet that was in that

776
00:29:15,840 --> 00:29:21,720
cache file we limit it's like 256 bytes

777
00:29:18,210 --> 00:29:22,830
cuz cuz some of them like a Meg and you

778
00:29:21,720 --> 00:29:25,740
don't want to just dump all the stuff

779
00:29:22,830 --> 00:29:27,510
all over the place you can carve just by

780
00:29:25,740 --> 00:29:30,120
giving it in some blob and it'll it'll

781
00:29:27,510 --> 00:29:31,260
pull out files that tell you the offset

782
00:29:30,120 --> 00:29:35,219
the length and pull them out into a

783
00:29:31,260 --> 00:29:37,200
directory you can specify by default it

784
00:29:35,220 --> 00:29:40,230
does this trying to weed out false

785
00:29:37,200 --> 00:29:42,300
positives but you can give it the - a

786
00:29:40,230 --> 00:29:43,320
flag for aggressive or all or I don't

787
00:29:42,300 --> 00:29:45,750
know I wrote this thing I don't even

788
00:29:43,320 --> 00:29:46,889
know what it means but it'll carve a

789
00:29:45,750 --> 00:29:48,510
whole bunch more files but they're

790
00:29:46,890 --> 00:29:51,170
likely to be a lot of junk but you can

791
00:29:48,510 --> 00:29:51,170
have them if you want

792
00:29:55,060 --> 00:29:58,540
okay so hope have impressed upon you

793
00:29:57,400 --> 00:29:59,770
that there's an awful lot of stuff in

794
00:29:58,540 --> 00:30:02,010
there that you need to go poking around

795
00:29:59,770 --> 00:30:06,010
because the data is just it's a

796
00:30:02,010 --> 00:30:08,080
ridiculously dense artifact for stuff

797
00:30:06,010 --> 00:30:09,730
that's super fun go play with the iOS

798
00:30:08,080 --> 00:30:12,520
things use this stuff one like real

799
00:30:09,730 --> 00:30:14,290
world devices and and let me know what

800
00:30:12,520 --> 00:30:15,790
what all is in there that's interesting

801
00:30:14,290 --> 00:30:18,220
and you know and I'll share more stuff

802
00:30:15,790 --> 00:30:19,659
that I find this is it's a black bag

803
00:30:18,220 --> 00:30:21,610
thing but it's kind of my little baby so

804
00:30:19,660 --> 00:30:23,260
please don't call black bag tech support

805
00:30:21,610 --> 00:30:25,240
and have Christina try to do tech

806
00:30:23,260 --> 00:30:26,980
support for this tool that this contact

807
00:30:25,240 --> 00:30:29,380
information for me definitely feel free

808
00:30:26,980 --> 00:30:31,560
to reach out anytime and complain or

809
00:30:29,380 --> 00:30:34,720
yell or scream or say thanks or don't

810
00:30:31,560 --> 00:30:36,639
that's the link where the executables

811
00:30:34,720 --> 00:30:38,440
are so offers that black bag slash

812
00:30:36,640 --> 00:30:40,480
spotlight it should be up there now if

813
00:30:38,440 --> 00:30:43,780
it isn't or is broken somebody let me

814
00:30:40,480 --> 00:30:47,190
know and with four minutes and forty

815
00:30:43,780 --> 00:30:47,190
seconds left to go are there questions

816
00:30:49,280 --> 00:31:12,369
[Applause]

817
00:30:56,090 --> 00:31:12,369
[Music]

