1
00:00:00,000 --> 00:00:11,360
I think the expectation levels are way

2
00:00:02,700 --> 00:00:14,280
above the roof now okay so I'm here

3
00:00:11,360 --> 00:00:15,809
today to talk about some forensics you

4
00:00:14,280 --> 00:00:20,070
already introduced me some skip that

5
00:00:15,809 --> 00:00:22,259
part and we'll go straight this from so

6
00:00:20,070 --> 00:00:24,359
what exactly is from this is something

7
00:00:22,260 --> 00:00:26,039
that as David mentioned I've published a

8
00:00:24,359 --> 00:00:27,510
paper on this it was published earlier

9
00:00:26,039 --> 00:00:30,029
this year in the Journal of digital

10
00:00:27,510 --> 00:00:31,289
investigation and I won't be covering

11
00:00:30,029 --> 00:00:33,690
everything that's there in the paper

12
00:00:31,289 --> 00:00:38,219
today but you can go and read more about

13
00:00:33,690 --> 00:00:39,390
it later offline so let's dive right

14
00:00:38,219 --> 00:00:42,210
into it since we're running a little

15
00:00:39,390 --> 00:00:44,730
late so what exactly is from from the

16
00:00:42,210 --> 00:00:47,280
acronym stands for system resource usage

17
00:00:44,730 --> 00:00:49,968
monitor this is a technology that a

18
00:00:47,280 --> 00:00:52,649
feature that Windows introduced in

19
00:00:49,969 --> 00:00:57,090
actually Microsoft introduced in Windows

20
00:00:52,649 --> 00:00:58,590
8 and ever since it's been there it's

21
00:00:57,090 --> 00:01:01,289
been there in Windows 8.1 it's been

22
00:00:58,590 --> 00:01:03,570
there as for the last Windows 10

23
00:01:01,289 --> 00:01:05,390
technical preview that came out it was

24
00:01:03,570 --> 00:01:08,820
still there and pretty much the same

25
00:01:05,390 --> 00:01:10,920
shape and form so what exactly is this

26
00:01:08,820 --> 00:01:13,320
it's bundled as part of the diagnostic

27
00:01:10,920 --> 00:01:15,420
policy service and it's a technology

28
00:01:13,320 --> 00:01:17,250
that's actually tracking all of your

29
00:01:15,420 --> 00:01:18,689
processes all the services all the

30
00:01:17,250 --> 00:01:22,290
network data that's ever leaving your

31
00:01:18,689 --> 00:01:24,960
interface ok so that's a scary

32
00:01:22,290 --> 00:01:29,070
introduction but we all know Microsoft

33
00:01:24,960 --> 00:01:29,908
and Big Brother that being said it's not

34
00:01:29,070 --> 00:01:32,789
so scary

35
00:01:29,909 --> 00:01:34,710
in fact it's a as forensics folks we

36
00:01:32,790 --> 00:01:36,930
actually love anything that tracks and

37
00:01:34,710 --> 00:01:40,919
monitors because we can then use it in

38
00:01:36,930 --> 00:01:43,110
court so this is a part that really gets

39
00:01:40,920 --> 00:01:45,119
us interested from maintains a database

40
00:01:43,110 --> 00:01:46,530
of all historic activity and for those

41
00:01:45,119 --> 00:01:50,670
of you who were just here for the last

42
00:01:46,530 --> 00:01:52,409
start by Sarah a newcomer that she was

43
00:01:50,670 --> 00:01:54,270
talking about a historic database in OS

44
00:01:52,409 --> 00:01:57,869
X that tracks all of your activity this

45
00:01:54,270 --> 00:02:04,320
is somewhat similar a little less scary

46
00:01:57,869 --> 00:02:06,810
actually so what exactly does from track

47
00:02:04,320 --> 00:02:08,519
or what does it record so five things

48
00:02:06,810 --> 00:02:10,800
essentially first thing network

49
00:02:08,520 --> 00:02:13,080
connectivity any time you connect or

50
00:02:10,800 --> 00:02:15,170
disconnect from a network

51
00:02:13,080 --> 00:02:18,420
Windows is logging that information

52
00:02:15,170 --> 00:02:21,269
second thing network data usage any time

53
00:02:18,420 --> 00:02:25,079
any data is consumed by a network

54
00:02:21,270 --> 00:02:27,150
interface by a Wi-Fi profile it's broken

55
00:02:25,080 --> 00:02:29,940
down by network interface and by Wi-Fi

56
00:02:27,150 --> 00:02:31,860
profile and by application so Windows

57
00:02:29,940 --> 00:02:33,810
knows exactly which application consumed

58
00:02:31,860 --> 00:02:35,790
how many bytes of data how much was

59
00:02:33,810 --> 00:02:39,720
uploaded how much was downloaded in what

60
00:02:35,790 --> 00:02:42,630
time frame third thing is application

61
00:02:39,720 --> 00:02:46,109
resource usage every process every

62
00:02:42,630 --> 00:02:48,990
service every Windows app formerly known

63
00:02:46,110 --> 00:02:50,640
as Metro apps everything is being

64
00:02:48,990 --> 00:02:55,140
trapped so these are the low level

65
00:02:50,640 --> 00:02:57,000
statistics things like context which is

66
00:02:55,140 --> 00:03:00,269
number of flushes number of i/o bytes

67
00:02:57,000 --> 00:03:02,130
that kind of thing the fourth item that

68
00:03:00,270 --> 00:03:04,500
Windows tracks is push notifications

69
00:03:02,130 --> 00:03:06,120
every Windows app or not every Windows

70
00:03:04,500 --> 00:03:09,360
app but most of the Windows apps have

71
00:03:06,120 --> 00:03:11,370
the ability for the server to push out

72
00:03:09,360 --> 00:03:13,680
notifications as you all know in Windows

73
00:03:11,370 --> 00:03:15,120
8 the new start screen is all tiles and

74
00:03:13,680 --> 00:03:17,520
windows apps and those tiles keep

75
00:03:15,120 --> 00:03:19,770
updating by receiving push notifications

76
00:03:17,520 --> 00:03:22,080
for the most part so every time the tile

77
00:03:19,770 --> 00:03:23,760
updates every time you know you you

78
00:03:22,080 --> 00:03:26,580
receive new weather information new new

79
00:03:23,760 --> 00:03:29,310
stories new pictures on there all of

80
00:03:26,580 --> 00:03:32,370
that is being locked and the fifth part

81
00:03:29,310 --> 00:03:34,640
is energy usage can anybody guess what

82
00:03:32,370 --> 00:03:34,640
this is

83
00:03:34,850 --> 00:03:41,910
battery yes that icons are really that

84
00:03:38,340 --> 00:03:44,100
giveaway but in case I see a lot of OS X

85
00:03:41,910 --> 00:03:45,480
systems I see a lot of Mac system so in

86
00:03:44,100 --> 00:03:48,450
case you're wondering if it has anything

87
00:03:45,480 --> 00:03:51,630
to do with the Mac equivalent of energy

88
00:03:48,450 --> 00:03:53,970
if you open the Mac task manager it's

89
00:03:51,630 --> 00:03:55,769
called Activity Monitor I think then you

90
00:03:53,970 --> 00:03:57,770
have this energy tab where it shows you

91
00:03:55,770 --> 00:04:02,070
how much energy each process is using

92
00:03:57,770 --> 00:04:04,560
this is not that in Windows it's purely

93
00:04:02,070 --> 00:04:05,910
battery information so if you're if

94
00:04:04,560 --> 00:04:07,970
there ever interested in seeing the

95
00:04:05,910 --> 00:04:10,350
charge discharge cycle graph on your

96
00:04:07,970 --> 00:04:11,970
computer just take this data from some

97
00:04:10,350 --> 00:04:14,549
throw it into Excel and draw a chart off

98
00:04:11,970 --> 00:04:18,450
with it it can be interesting to look at

99
00:04:14,550 --> 00:04:20,040
sometimes as you can see most important

100
00:04:18,450 --> 00:04:22,860
from a forensics perspective is going to

101
00:04:20,040 --> 00:04:25,270
be the first three pieces of information

102
00:04:22,860 --> 00:04:28,000
network connectivity

103
00:04:25,270 --> 00:04:34,150
usage and application resource usage

104
00:04:28,000 --> 00:04:36,210
push notifications not so much so oh one

105
00:04:34,150 --> 00:04:38,799
more thing

106
00:04:36,210 --> 00:04:40,630
Windows is tracking all of this but at

107
00:04:38,800 --> 00:04:45,310
the same time it is not recording any

108
00:04:40,630 --> 00:04:49,060
user data it's purely metadata purely

109
00:04:45,310 --> 00:04:50,770
metrics okay so none of the user data is

110
00:04:49,060 --> 00:04:52,030
going in there Windows will not tell you

111
00:04:50,770 --> 00:04:53,469
what you'd uploaded or what you

112
00:04:52,030 --> 00:04:56,679
downloaded but it will tell you how many

113
00:04:53,470 --> 00:04:58,650
gigabytes were uploaded or downloaded by

114
00:04:56,680 --> 00:05:05,500
a particular application or interface

115
00:04:58,650 --> 00:05:09,039
same thing for all of these so in case

116
00:05:05,500 --> 00:05:10,780
you're wondering does Windows actually

117
00:05:09,040 --> 00:05:12,400
show any of this information to the user

118
00:05:10,780 --> 00:05:14,770
is the user made aware of all of this

119
00:05:12,400 --> 00:05:18,880
tracking that's going on partially yes

120
00:05:14,770 --> 00:05:20,560
if you've looked up your network

121
00:05:18,880 --> 00:05:22,780
connection in Windows 8 you click on

122
00:05:20,560 --> 00:05:24,040
that little network icon and then click

123
00:05:22,780 --> 00:05:25,750
on the network that you're currently

124
00:05:24,040 --> 00:05:28,660
connected to if it's a Wi-Fi network

125
00:05:25,750 --> 00:05:30,820
you're probably familiar with this

126
00:05:28,660 --> 00:05:31,950
screen if you haven't you can click on

127
00:05:30,820 --> 00:05:35,320
it right now and it'll show you

128
00:05:31,950 --> 00:05:37,930
estimated usage usually it goes back to

129
00:05:35,320 --> 00:05:39,700
60 days the GUI shows you 60 days but in

130
00:05:37,930 --> 00:05:43,330
the database it goes back to at least

131
00:05:39,700 --> 00:05:44,909
three months so it's 90 days but by

132
00:05:43,330 --> 00:05:48,760
default you're only going to see 60 days

133
00:05:44,910 --> 00:05:49,870
if you're an Ethernet then you're likely

134
00:05:48,760 --> 00:05:51,789
not going to see this information

135
00:05:49,870 --> 00:05:55,390
although the information is there in the

136
00:05:51,790 --> 00:05:57,010
database and you can only see this

137
00:05:55,390 --> 00:05:58,990
information for the network that you are

138
00:05:57,010 --> 00:06:00,820
currently connected to so if you're not

139
00:05:58,990 --> 00:06:04,630
connected to let's say your office

140
00:06:00,820 --> 00:06:06,340
network right now there is no windows

141
00:06:04,630 --> 00:06:07,750
built-in way of actually viewing that

142
00:06:06,340 --> 00:06:12,520
information you have to go to the raw

143
00:06:07,750 --> 00:06:14,530
from database to get that so let's talk

144
00:06:12,520 --> 00:06:17,770
a little specific about what exactly is

145
00:06:14,530 --> 00:06:18,940
being tracked in network connectivity so

146
00:06:17,770 --> 00:06:21,729
this is a table in the surrounds

147
00:06:18,940 --> 00:06:24,460
database and some of the items that it

148
00:06:21,729 --> 00:06:28,320
tracks are the interface type the

149
00:06:24,460 --> 00:06:32,349
interface ID when I the interface type

150
00:06:28,320 --> 00:06:35,650
meaning it can either be Ethernet it can

151
00:06:32,350 --> 00:06:37,539
be something else I'm sorry that's

152
00:06:35,650 --> 00:06:38,900
that's the network profile the network

153
00:06:37,539 --> 00:06:43,599
profile ID

154
00:06:38,900 --> 00:06:46,880
is never mind I'm totally confused today

155
00:06:43,600 --> 00:06:51,199
interface type is basically Ethernet or

156
00:06:46,880 --> 00:06:53,210
Wi-Fi or ATM or 3G 4G whatever you use

157
00:06:51,199 --> 00:06:55,550
and the next thing is the network

158
00:06:53,210 --> 00:06:58,669
profile ID network profile ID on a Wi-Fi

159
00:06:55,550 --> 00:07:02,419
network is typically identified by your

160
00:06:58,669 --> 00:07:03,799
SSID you select one of the SSID for the

161
00:07:02,419 --> 00:07:05,419
network's you want to connect to and

162
00:07:03,800 --> 00:07:07,190
then you enter your credentials and

163
00:07:05,419 --> 00:07:09,948
windows creates a bunch of entries in

164
00:07:07,190 --> 00:07:13,760
the registry and tracks it by network

165
00:07:09,949 --> 00:07:17,169
profile ID it also in this database

166
00:07:13,760 --> 00:07:19,340
table it notes the time that you were

167
00:07:17,169 --> 00:07:21,979
the time that the connection was

168
00:07:19,340 --> 00:07:24,560
established and how long did that

169
00:07:21,979 --> 00:07:26,780
connection last that part was pretty

170
00:07:24,560 --> 00:07:28,160
obvious this is something that was added

171
00:07:26,780 --> 00:07:31,909
in Windows 8.1

172
00:07:28,160 --> 00:07:33,500
so the original schrum from windows 8 if

173
00:07:31,910 --> 00:07:34,880
you have a default Windows 8 install

174
00:07:33,500 --> 00:07:38,900
you're not going to see this information

175
00:07:34,880 --> 00:07:42,680
this was added in 8.1 and it exists in

176
00:07:38,900 --> 00:07:47,979
Windows 10 also so where can we use this

177
00:07:42,680 --> 00:07:51,860
information on a on a recent case I I

178
00:07:47,979 --> 00:07:55,340
used this information to draw out a

179
00:07:51,860 --> 00:07:57,680
little chart here and you'll need to use

180
00:07:55,340 --> 00:08:00,549
some data visualization or analytics

181
00:07:57,680 --> 00:08:02,990
tool to do this because excel excel

182
00:08:00,550 --> 00:08:06,919
falls short of drawing this kind of a

183
00:08:02,990 --> 00:08:09,380
chart so here we have a user that's

184
00:08:06,919 --> 00:08:11,870
connected to four different Wi-Fi

185
00:08:09,380 --> 00:08:14,840
networks and over a period of two weeks

186
00:08:11,870 --> 00:08:17,150
we can we just grab this from data I

187
00:08:14,840 --> 00:08:20,179
mean we drew out this graph and we can

188
00:08:17,150 --> 00:08:23,388
see at which date and time he's

189
00:08:20,180 --> 00:08:26,900
connected to through which networks the

190
00:08:23,389 --> 00:08:29,599
first one on there in orange that's the

191
00:08:26,900 --> 00:08:31,549
corporate network this is this is the

192
00:08:29,599 --> 00:08:33,380
employees corporate laptop that's a B

193
00:08:31,550 --> 00:08:35,120
Corp the second one you see there is his

194
00:08:33,380 --> 00:08:37,760
home net home Wi-Fi network

195
00:08:35,120 --> 00:08:40,400
that's Netgear boot by the third one is

196
00:08:37,760 --> 00:08:45,020
Hilton guest Wi-Fi and the fourth one is

197
00:08:40,400 --> 00:08:47,990
a t-mobile 3G connection so in this case

198
00:08:45,020 --> 00:08:50,029
this was actually related to sexual

199
00:08:47,990 --> 00:08:53,450
harassment dispute and

200
00:08:50,029 --> 00:08:55,790
we had to as part of that one of the

201
00:08:53,450 --> 00:08:57,860
things we had to prove was that the

202
00:08:55,790 --> 00:09:01,610
person was or wasn't in the office at a

203
00:08:57,860 --> 00:09:03,290
certain date in time and as most of you

204
00:09:01,610 --> 00:09:05,000
are familiar you do a lot of these cases

205
00:09:03,290 --> 00:09:06,920
and you figure out that we have all the

206
00:09:05,000 --> 00:09:09,320
records but they don't have the rest of

207
00:09:06,920 --> 00:09:12,279
the records for the time period that you

208
00:09:09,320 --> 00:09:16,250
actually care about so you have to do it

209
00:09:12,279 --> 00:09:18,500
using other means so they didn't have

210
00:09:16,250 --> 00:09:22,580
office records to show when this person

211
00:09:18,500 --> 00:09:26,330
came in and into the office during this

212
00:09:22,580 --> 00:09:29,029
this two-week period this makes it

213
00:09:26,330 --> 00:09:32,089
absolutely clear where the person was

214
00:09:29,029 --> 00:09:34,220
because laptop is always with the person

215
00:09:32,089 --> 00:09:38,300
so it's the means of also tracking

216
00:09:34,220 --> 00:09:39,980
physical your physical whereabouts so as

217
00:09:38,300 --> 00:09:41,329
you can see all the way from late

218
00:09:39,980 --> 00:09:43,570
Tuesday night all the way through

219
00:09:41,330 --> 00:09:46,279
Thursday he's somewhere out of town at

220
00:09:43,570 --> 00:09:49,850
Hilton connected to Hilton guest Wi-Fi

221
00:09:46,279 --> 00:09:52,250
on the other days when you look at the

222
00:09:49,850 --> 00:09:54,470
period May fourth through seventh you

223
00:09:52,250 --> 00:09:56,300
see the typical balance of the laptop

224
00:09:54,470 --> 00:10:00,980
connecting to the whole network during

225
00:09:56,300 --> 00:10:03,079
office hours during and then the 9:00 to

226
00:10:00,980 --> 00:10:06,170
5:00 office hours he's usually in the

227
00:10:03,080 --> 00:10:09,680
office in this case it was pretty simple

228
00:10:06,170 --> 00:10:11,540
he we had to prove that he was not in

229
00:10:09,680 --> 00:10:13,250
the office on the 30th there isn't a

230
00:10:11,540 --> 00:10:15,319
Hilton anywhere near the office world on

231
00:10:13,250 --> 00:10:18,410
a 15 mile radius there isn't a Hilton

232
00:10:15,320 --> 00:10:21,500
near his house so this made it pretty

233
00:10:18,410 --> 00:10:24,260
obvious that he was somewhere out of

234
00:10:21,500 --> 00:10:30,740
town and he wasn't in the office on 30th

235
00:10:24,260 --> 00:10:34,160
April another thing this case then went

236
00:10:30,740 --> 00:10:38,560
on and the guy said no no I was in the

237
00:10:34,160 --> 00:10:41,150
office and so they questioned him okay

238
00:10:38,560 --> 00:10:43,579
do you have any proof of you being in

239
00:10:41,150 --> 00:10:48,230
the office and so he shows up a bunch of

240
00:10:43,579 --> 00:10:49,760
emails that he's replied to to his

241
00:10:48,230 --> 00:10:51,649
colleagues in the office and he says

242
00:10:49,760 --> 00:10:54,170
look I'm doing work this is during work

243
00:10:51,649 --> 00:10:58,339
hours and I'm replying to my colleagues

244
00:10:54,170 --> 00:10:59,839
emails on issues so we've been back and

245
00:10:58,339 --> 00:11:01,670
we looked at the next artifact which I'm

246
00:10:59,839 --> 00:11:02,970
going to show you which is the network

247
00:11:01,670 --> 00:11:05,370
data usage

248
00:11:02,970 --> 00:11:08,759
we were able to prove we were able to

249
00:11:05,370 --> 00:11:10,680
look it up that during those those

250
00:11:08,759 --> 00:11:12,209
emails that he showed us they were in

251
00:11:10,680 --> 00:11:14,160
Outlook we were able to look at the

252
00:11:12,209 --> 00:11:15,899
storm artifact for Outlook and we could

253
00:11:14,160 --> 00:11:18,329
see that Outlook was basically consuming

254
00:11:15,899 --> 00:11:20,040
data and it was within that time frame

255
00:11:18,329 --> 00:11:25,079
where you see those blue bars on the

256
00:11:20,040 --> 00:11:27,300
first day so from basically told us the

257
00:11:25,079 --> 00:11:29,550
story clear-cut that outlook you

258
00:11:27,300 --> 00:11:31,310
uploaded you know five megabytes of data

259
00:11:29,550 --> 00:11:34,859
and downloaded three megabytes of data

260
00:11:31,310 --> 00:11:39,479
on the 30th of April you know between

261
00:11:34,860 --> 00:11:40,800
12:00 and 1:00 and it used the Hilton

262
00:11:39,480 --> 00:11:43,470
guest Wi-Fi to do that

263
00:11:40,800 --> 00:11:45,839
it's clear-cut it gives you all of that

264
00:11:43,470 --> 00:11:47,399
information right there and after he was

265
00:11:45,839 --> 00:11:51,750
confronted with all of this

266
00:11:47,399 --> 00:11:56,699
he basically with all of the claims just

267
00:11:51,750 --> 00:11:58,379
went away this is what I was leading up

268
00:11:56,699 --> 00:12:01,859
to this is the network usage data this

269
00:11:58,379 --> 00:12:04,759
is what we showed him this is a goldmine

270
00:12:01,860 --> 00:12:06,209
for all forensic guys especially the

271
00:12:04,759 --> 00:12:08,610
Internet

272
00:12:06,209 --> 00:12:13,050
especially the Incident Response folks

273
00:12:08,610 --> 00:12:17,939
and it's a security nightmare for a

274
00:12:13,050 --> 00:12:19,229
privacy advocate so here you have in the

275
00:12:17,939 --> 00:12:21,540
database it'll tell you which

276
00:12:19,230 --> 00:12:23,009
application was consuming the data it'll

277
00:12:21,540 --> 00:12:25,139
even tell you which user launched the

278
00:12:23,009 --> 00:12:26,490
application so you have the user state

279
00:12:25,139 --> 00:12:29,069
associated with it you have the

280
00:12:26,490 --> 00:12:30,959
application for path you have the amount

281
00:12:29,069 --> 00:12:33,449
of bytes uploaded and downloaded you

282
00:12:30,959 --> 00:12:35,638
have interface type interface ID as well

283
00:12:33,449 --> 00:12:39,389
as the network profile all as one line

284
00:12:35,639 --> 00:12:41,970
item as one row in this database makes

285
00:12:39,389 --> 00:12:44,279
it extremely easy to see what's going on

286
00:12:41,970 --> 00:12:46,680
on the machine again like I said it's

287
00:12:44,279 --> 00:12:48,089
only metadata it's not actual data so we

288
00:12:46,680 --> 00:12:50,969
don't know what was uploaded or

289
00:12:48,089 --> 00:12:53,970
downloaded but we do know the volumes we

290
00:12:50,970 --> 00:12:56,879
do know if we don't know the endpoints

291
00:12:53,970 --> 00:13:00,240
so no IP addresses no ports no protocol

292
00:12:56,879 --> 00:13:02,939
information and we don't have specific

293
00:13:00,240 --> 00:13:06,720
data but a lot of times metadata speaks

294
00:13:02,939 --> 00:13:09,769
volumes just by the NSA wants metadata

295
00:13:06,720 --> 00:13:09,769
everyone wants metadata

296
00:13:10,460 --> 00:13:15,810
this is a third part that's more

297
00:13:13,140 --> 00:13:17,460
interesting to us most interesting to

298
00:13:15,810 --> 00:13:19,920
forensic folks is the application

299
00:13:17,460 --> 00:13:21,720
resource tracking this one tracks

300
00:13:19,920 --> 00:13:24,599
low-level process information so it'll

301
00:13:21,720 --> 00:13:27,540
track CPU cycles that your application

302
00:13:24,600 --> 00:13:29,820
used context which is IO bytes read and

303
00:13:27,540 --> 00:13:31,740
written a number of read operations

304
00:13:29,820 --> 00:13:32,010
number of write operations so all of

305
00:13:31,740 --> 00:13:35,130
this

306
00:13:32,010 --> 00:13:36,120
io is actually it consists of disk IO

307
00:13:35,130 --> 00:13:40,200
Network IO

308
00:13:36,120 --> 00:13:43,770
and any other device IO usually console

309
00:13:40,200 --> 00:13:45,480
IO is not part of this and all of this

310
00:13:43,770 --> 00:13:47,040
is further broken down into background

311
00:13:45,480 --> 00:13:49,020
and foreground processes so there's

312
00:13:47,040 --> 00:13:52,620
background CPU cycles foreground CPU

313
00:13:49,020 --> 00:13:55,470
cycles this information is sometimes

314
00:13:52,620 --> 00:13:57,120
useful most of the time you're

315
00:13:55,470 --> 00:14:00,450
interested in network connectivity and

316
00:13:57,120 --> 00:14:02,220
network usage also what's captured is

317
00:14:00,450 --> 00:14:04,590
the SID of the user who launched the

318
00:14:02,220 --> 00:14:06,060
application or program or service again

319
00:14:04,590 --> 00:14:08,970
it's metadata so you don't have

320
00:14:06,060 --> 00:14:11,310
information about memory threads which

321
00:14:08,970 --> 00:14:13,110
of those CPU cycles was kernel mode

322
00:14:11,310 --> 00:14:20,119
versus user mode none of that

323
00:14:13,110 --> 00:14:20,120
information is being locked yes sir

324
00:14:21,950 --> 00:14:30,690
it does and I will show you that data in

325
00:14:25,080 --> 00:14:33,750
a minute so I'm full of that data so

326
00:14:30,690 --> 00:14:36,840
again in case you're wondering Windows

327
00:14:33,750 --> 00:14:39,420
is doing so much tracking is is the user

328
00:14:36,840 --> 00:14:43,620
of air of it is this shown anywhere to

329
00:14:39,420 --> 00:14:45,689
the user the answer is yes and no some

330
00:14:43,620 --> 00:14:49,590
of it you can see if you go to task

331
00:14:45,690 --> 00:14:54,030
manager and you go to the app history

332
00:14:49,590 --> 00:14:55,950
tab you can see all of the processes by

333
00:14:54,030 --> 00:14:58,470
default you're only going to be seeing

334
00:14:55,950 --> 00:15:01,650
the Windows apps they're not gonna see

335
00:14:58,470 --> 00:15:03,480
desktop apps nor services if you want to

336
00:15:01,650 --> 00:15:06,660
see desktop apps or services it's a

337
00:15:03,480 --> 00:15:09,030
simple option you need to turn on go to

338
00:15:06,660 --> 00:15:11,850
options click on show history for all

339
00:15:09,030 --> 00:15:14,640
processes this then shows you everything

340
00:15:11,850 --> 00:15:17,220
however when I say everything it's it's

341
00:15:14,640 --> 00:15:20,160
just humility of data that you're seeing

342
00:15:17,220 --> 00:15:21,720
here it's not broken down by networking

343
00:15:20,160 --> 00:15:23,730
face or it's not broken down by

344
00:15:21,720 --> 00:15:26,819
timeframe or anything it'll just tell

345
00:15:23,730 --> 00:15:29,970
you within the last month chrome used up

346
00:15:26,819 --> 00:15:32,490
500 gigabytes and 200 was uploading 300

347
00:15:29,970 --> 00:15:33,959
was download and so on for all of these

348
00:15:32,490 --> 00:15:36,089
processes that's all the information

349
00:15:33,959 --> 00:15:38,758
that the task manager gives you if you

350
00:15:36,089 --> 00:15:42,000
want the real guts of the data you have

351
00:15:38,759 --> 00:15:44,459
to go to this rom database a particular

352
00:15:42,000 --> 00:15:48,480
interest in this is this highlighted

353
00:15:44,459 --> 00:15:51,268
item that's uninstalled processes and

354
00:15:48,480 --> 00:15:56,399
that is has nothing to do with the

355
00:15:51,269 --> 00:15:58,620
uninstall feature of a program it has

356
00:15:56,399 --> 00:16:00,410
has no knowledge of installation or

357
00:15:58,620 --> 00:16:02,879
uninstallation what it is is simply

358
00:16:00,410 --> 00:16:05,600
whenever task manager reads this from

359
00:16:02,879 --> 00:16:08,100
database and populates this to show you

360
00:16:05,600 --> 00:16:10,079
this data it's going to double check

361
00:16:08,100 --> 00:16:12,389
it's going to read the executable full

362
00:16:10,079 --> 00:16:14,758
paths go back to the disk and verify

363
00:16:12,389 --> 00:16:17,699
that they exist on the disk if it finds

364
00:16:14,759 --> 00:16:20,040
that any X see an application does not

365
00:16:17,699 --> 00:16:23,550
exist on the disk anymore it bundles it

366
00:16:20,040 --> 00:16:25,920
into uninstalled processes so every

367
00:16:23,550 --> 00:16:27,420
application so it's it's great for

368
00:16:25,920 --> 00:16:29,099
scenarios where a person downloaded

369
00:16:27,420 --> 00:16:30,959
something to the desktop ran that tool

370
00:16:29,100 --> 00:16:34,410
then deleted it that now will show up

371
00:16:30,959 --> 00:16:37,380
under uninstall processes in the task

372
00:16:34,410 --> 00:16:39,089
manager GUI however you cannot it's not

373
00:16:37,380 --> 00:16:41,009
a tree so you can't really open up and

374
00:16:39,089 --> 00:16:42,959
see what's in that you have to go back

375
00:16:41,009 --> 00:16:47,880
to the database to see all of those

376
00:16:42,959 --> 00:16:50,369
applications and a funny ironical thing

377
00:16:47,880 --> 00:16:53,250
is that it's called uninstall processes

378
00:16:50,370 --> 00:16:55,769
but every time you install a program

379
00:16:53,250 --> 00:16:58,920
you're gonna see more entries created in

380
00:16:55,769 --> 00:17:04,009
uninstalled processes anybody anybody

381
00:16:58,920 --> 00:17:04,009
think why that clip is simple

382
00:17:04,159 --> 00:17:10,799
correct so anytime you install a program

383
00:17:07,470 --> 00:17:12,360
your MSI or setup dot exe will basically

384
00:17:10,799 --> 00:17:14,429
decompress files into your temp folder

385
00:17:12,359 --> 00:17:15,958
it will install your program from the

386
00:17:14,429 --> 00:17:18,539
temp folder and then delete the files in

387
00:17:15,959 --> 00:17:20,490
the temp folder so ironically anytime

388
00:17:18,539 --> 00:17:26,220
you install a program uninstall

389
00:17:20,490 --> 00:17:27,809
processes gets pumped up ok I'm going to

390
00:17:26,220 --> 00:17:30,000
talk a bit about how this data is being

391
00:17:27,809 --> 00:17:33,120
collected essentially srem is a

392
00:17:30,000 --> 00:17:33,929
framework and it's a framework which

393
00:17:33,120 --> 00:17:37,110
have

394
00:17:33,929 --> 00:17:38,640
with plugins or extensions and for each

395
00:17:37,110 --> 00:17:40,020
of those five things that reminders

396
00:17:38,640 --> 00:17:41,580
there's an extension for each one

397
00:17:40,020 --> 00:17:43,918
there's a gooood associated with each

398
00:17:41,580 --> 00:17:45,840
extension each has its own DLL and runs

399
00:17:43,919 --> 00:17:47,909
its own code all of this data is

400
00:17:45,840 --> 00:17:51,389
continuously being monitored in memory

401
00:17:47,909 --> 00:17:52,559
and maintains its counters and it's

402
00:17:51,390 --> 00:17:55,400
continuously monitoring all your

403
00:17:52,559 --> 00:17:58,020
processes and data usage once every hour

404
00:17:55,400 --> 00:18:01,140
the SRAM main process comes around and

405
00:17:58,020 --> 00:18:02,879
pulls each one of these extensions takes

406
00:18:01,140 --> 00:18:03,480
that data and writes it to the date

407
00:18:02,880 --> 00:18:05,700
database

408
00:18:03,480 --> 00:18:07,260
and those counters are reset and then

409
00:18:05,700 --> 00:18:09,299
they start collecting data all over

410
00:18:07,260 --> 00:18:13,830
again and the next hour the process

411
00:18:09,299 --> 00:18:16,230
repeats in Windows 8 this used to happen

412
00:18:13,830 --> 00:18:17,820
30 minutes past the hour so you would

413
00:18:16,230 --> 00:18:21,330
see this from database being written at

414
00:18:17,820 --> 00:18:24,240
2:30 then 3:30 then 4:30 and 5:30 so on

415
00:18:21,330 --> 00:18:27,178
in Windows 8.1 on the machines that I

416
00:18:24,240 --> 00:18:28,710
have been looking at it's it's now on

417
00:18:27,179 --> 00:18:31,169
the hour itself it's no longer 30

418
00:18:28,710 --> 00:18:34,740
minutes past the hour so it's now at do

419
00:18:31,169 --> 00:18:36,360
at 3 at 4 at 5 it doesn't change

420
00:18:34,740 --> 00:18:38,640
anything it's still the interval is

421
00:18:36,360 --> 00:18:40,469
still one hour so every hour you're

422
00:18:38,640 --> 00:18:41,880
gonna see entries populated what this

423
00:18:40,470 --> 00:18:44,640
means is when you're looking at the

424
00:18:41,880 --> 00:18:47,669
database if you see an entry from 4

425
00:18:44,640 --> 00:18:51,809
chrome dot exe that is the usage of

426
00:18:47,669 --> 00:18:53,159
Chrome within the last hour that's all

427
00:18:51,809 --> 00:18:54,720
that this means because it's being

428
00:18:53,159 --> 00:18:59,549
collected once every hour and then that

429
00:18:54,720 --> 00:19:06,120
counter is reset if that made any sense

430
00:18:59,549 --> 00:19:08,010
I think ok where does the data go it

431
00:19:06,120 --> 00:19:10,139
doesn't get directly written out to the

432
00:19:08,010 --> 00:19:12,390
database first it goes into the registry

433
00:19:10,140 --> 00:19:13,919
and that's the location where you're

434
00:19:12,390 --> 00:19:17,610
going to be seeing this data if you were

435
00:19:13,919 --> 00:19:20,070
to open up Windows 8 machine machine

436
00:19:17,610 --> 00:19:21,600
software hive if you go to Microsoft

437
00:19:20,070 --> 00:19:23,010
Windows NT current versions from

438
00:19:21,600 --> 00:19:27,510
extensions you're going to see under

439
00:19:23,010 --> 00:19:28,980
there there is a there's a key for each

440
00:19:27,510 --> 00:19:30,600
extension under there there's some

441
00:19:28,980 --> 00:19:33,659
record sets and those record sets

442
00:19:30,600 --> 00:19:35,189
contain the data I think Microsoft

443
00:19:33,659 --> 00:19:37,080
designed it this way because it's a lot

444
00:19:35,190 --> 00:19:39,179
quicker to write to the registry than it

445
00:19:37,080 --> 00:19:41,149
is to files because the registry in

446
00:19:39,179 --> 00:19:44,970
Windows is always persistent in memory

447
00:19:41,149 --> 00:19:48,209
so registry rights are extremely quick

448
00:19:44,970 --> 00:19:50,070
and the format of the data that's being

449
00:19:48,210 --> 00:19:53,220
written in the registry is the same

450
00:19:50,070 --> 00:19:55,259
exact that it's going to eventually

451
00:19:53,220 --> 00:19:56,940
write out to the database so if you look

452
00:19:55,259 --> 00:19:59,489
closely somewhere down there you're

453
00:19:56,940 --> 00:20:01,109
gonna see us column count Co L count is

454
00:19:59,489 --> 00:20:02,879
seven and then you're gonna see zero one

455
00:20:01,109 --> 00:20:05,489
two three four five six or seven items

456
00:20:02,879 --> 00:20:08,849
that go into the seven columns of the

457
00:20:05,489 --> 00:20:10,409
database it's it's pretty it's following

458
00:20:08,849 --> 00:20:12,439
the same format as the database it's a

459
00:20:10,409 --> 00:20:16,169
direct right there's not much

460
00:20:12,440 --> 00:20:20,279
interpretation to do I'm not gonna talk

461
00:20:16,169 --> 00:20:22,049
about this in detail right now you can

462
00:20:20,279 --> 00:20:24,299
read the paper for that but we'll move

463
00:20:22,049 --> 00:20:26,729
on to more interesting things there's

464
00:20:24,299 --> 00:20:31,229
from database on the disk this is where

465
00:20:26,729 --> 00:20:34,379
data eventually ends up this is located

466
00:20:31,229 --> 00:20:35,580
under the system32 folder in a folder

467
00:20:34,379 --> 00:20:38,340
called SRU

468
00:20:35,580 --> 00:20:40,499
it's called SRU DB dot that it's an ESC

469
00:20:38,340 --> 00:20:42,359
database for those of you that are not

470
00:20:40,499 --> 00:20:44,399
familiar with what ESC is it's

471
00:20:42,359 --> 00:20:47,699
extensible storage engine it's the same

472
00:20:44,399 --> 00:20:49,949
one that Microsoft uses for exchange EDB

473
00:20:47,700 --> 00:20:52,049
files for Windows updates for Windows

474
00:20:49,950 --> 00:20:55,379
search Active Directory over the years

475
00:20:52,049 --> 00:20:57,840
Microsoft has been moving everything all

476
00:20:55,379 --> 00:21:01,498
of their internal databases to es e

477
00:20:57,840 --> 00:21:03,209
format and from is also an ESD database

478
00:21:01,499 --> 00:21:06,809
the latest thing by the way to move to

479
00:21:03,210 --> 00:21:09,330
ESC was the Internet Explorer history

480
00:21:06,809 --> 00:21:13,729
files which is no longer indexed at now

481
00:21:09,330 --> 00:21:17,158
it's also an ESD database is also that

482
00:21:13,729 --> 00:21:19,529
the database tables are the goods that

483
00:21:17,159 --> 00:21:21,059
represent the database table names are

484
00:21:19,529 --> 00:21:24,960
going to be the goods that represent

485
00:21:21,059 --> 00:21:30,649
each of those extensions so again it's

486
00:21:24,960 --> 00:21:32,849
straightforward to read no cryptic names

487
00:21:30,649 --> 00:21:36,570
let's take a look at the raw data now

488
00:21:32,849 --> 00:21:41,700
this is the data for the network data

489
00:21:36,570 --> 00:21:45,840
usage table in here you're gonna notice

490
00:21:41,700 --> 00:21:47,429
there there's if you just pull the data

491
00:21:45,840 --> 00:21:50,879
out of the database and you put it in

492
00:21:47,429 --> 00:21:52,470
Excel it's requires a lot of

493
00:21:50,879 --> 00:21:56,639
interpretation before we can make sense

494
00:21:52,470 --> 00:21:57,720
of this so there's essentially but it's

495
00:21:56,639 --> 00:21:58,889
not difficult

496
00:21:57,720 --> 00:22:00,900
actually a few things that require

497
00:21:58,890 --> 00:22:03,470
interpretation and the rest is as is

498
00:22:00,900 --> 00:22:06,690
first thing is this time stamp filled

499
00:22:03,470 --> 00:22:10,290
then that's in column B in column C and

500
00:22:06,690 --> 00:22:12,120
D you are going to notice just numbers

501
00:22:10,290 --> 00:22:15,060
these are foreign keys so there's a

502
00:22:12,120 --> 00:22:20,790
string table which actually tract keeps

503
00:22:15,060 --> 00:22:23,520
a list of all the application full pads

504
00:22:20,790 --> 00:22:25,440
and the user SIG's so these are just

505
00:22:23,520 --> 00:22:28,040
lookups into that table so these are

506
00:22:25,440 --> 00:22:31,080
simply foreign keys in column C and D

507
00:22:28,040 --> 00:22:33,180
it's just a straight look up what

508
00:22:31,080 --> 00:22:36,210
requires interpretation is columns E and

509
00:22:33,180 --> 00:22:39,390
F this is the interface Luud and l2

510
00:22:36,210 --> 00:22:43,320
profile ID and the last two columns are

511
00:22:39,390 --> 00:22:45,180
also straightforward bytes sent and

512
00:22:43,320 --> 00:22:48,750
bytes received so let's look at what

513
00:22:45,180 --> 00:22:51,270
this is these are the fields that need

514
00:22:48,750 --> 00:22:54,150
conversion inside of this run database

515
00:22:51,270 --> 00:22:58,110
you're gonna notice that the time field

516
00:22:54,150 --> 00:23:00,660
is time stamps are in two formats this

517
00:22:58,110 --> 00:23:02,399
one that we just saw was an oily format

518
00:23:00,660 --> 00:23:03,270
it's a 64 bit for my fortunately

519
00:23:02,400 --> 00:23:04,560
well-documented

520
00:23:03,270 --> 00:23:07,200
so we don't have to do any reverse

521
00:23:04,560 --> 00:23:10,649
engineering on that at some places other

522
00:23:07,200 --> 00:23:14,250
places in the from tables you're gonna

523
00:23:10,650 --> 00:23:18,000
find it in the normal file time 64-bit

524
00:23:14,250 --> 00:23:20,070
format file time is the also known as

525
00:23:18,000 --> 00:23:22,260
win date some people like to call it

526
00:23:20,070 --> 00:23:25,620
that it's the one that windows uses

527
00:23:22,260 --> 00:23:30,750
extensively throughout everywhere in the

528
00:23:25,620 --> 00:23:31,620
registry and in NTFS the next column

529
00:23:30,750 --> 00:23:36,240
that we talked about

530
00:23:31,620 --> 00:23:37,860
that's column e interface Luud quick

531
00:23:36,240 --> 00:23:41,160
search on MSDN will tell you that this

532
00:23:37,860 --> 00:23:45,870
is nothing but a net Luud Union and from

533
00:23:41,160 --> 00:23:48,390
this we can extract out the net lu ID

534
00:23:45,870 --> 00:23:50,340
index which i would simply call the

535
00:23:48,390 --> 00:23:52,380
interface index and then the interface

536
00:23:50,340 --> 00:23:56,070
type that an interface type can be

537
00:23:52,380 --> 00:23:59,340
either Wi-Fi or Ethernet or ATM or a

538
00:23:56,070 --> 00:24:03,270
list of there's a list of other types

539
00:23:59,340 --> 00:24:04,919
that are defined for us the most

540
00:24:03,270 --> 00:24:08,010
interesting thing is the interface type

541
00:24:04,920 --> 00:24:10,260
because we want to know what it is this

542
00:24:08,010 --> 00:24:11,360
is the third thing in there l2 profile

543
00:24:10,260 --> 00:24:16,670
ID

544
00:24:11,360 --> 00:24:19,219
and l2 would be layer 2 and l2 profile

545
00:24:16,670 --> 00:24:21,770
ID on a Wi-Fi network is typically

546
00:24:19,220 --> 00:24:25,510
associated with your SSID network

547
00:24:21,770 --> 00:24:28,370
profile so how do we associate it to

548
00:24:25,510 --> 00:24:34,040
recognizable SSID to do that you need to

549
00:24:28,370 --> 00:24:35,810
go to the registry and unfortunately but

550
00:24:34,040 --> 00:24:38,899
this is supposed to be its Kiboko

551
00:24:35,810 --> 00:24:41,000
machine software microsoft WLAN service

552
00:24:38,900 --> 00:24:42,500
interfaces under interfaces you can

553
00:24:41,000 --> 00:24:45,950
actually see interfaces right there

554
00:24:42,500 --> 00:24:47,600
under there there is a for each

555
00:24:45,950 --> 00:24:49,910
interface on your machine you're gonna

556
00:24:47,600 --> 00:24:52,850
see one or more goods I don't know why

557
00:24:49,910 --> 00:24:54,440
sometimes the same interface has dugu

558
00:24:52,850 --> 00:24:56,300
it's on my machine it does have two

559
00:24:54,440 --> 00:25:00,680
goods I don't know why Microsoft does

560
00:24:56,300 --> 00:25:03,470
that and both are actively used I don't

561
00:25:00,680 --> 00:25:05,270
know why but there's two goods sometimes

562
00:25:03,470 --> 00:25:08,060
there's multiples under each of those

563
00:25:05,270 --> 00:25:10,760
interface goods you're gonna find a sub

564
00:25:08,060 --> 00:25:13,899
e called profiles under profiles you

565
00:25:10,760 --> 00:25:16,370
click on the profile GUI that you're in

566
00:25:13,900 --> 00:25:18,620
and whatever Google it is those are

567
00:25:16,370 --> 00:25:20,419
profile 2 it's click on it and you're

568
00:25:18,620 --> 00:25:22,010
gonna notice this thing called profile

569
00:25:20,420 --> 00:25:25,220
index hey that number looks like the

570
00:25:22,010 --> 00:25:29,690
same thing I was looking at was called

571
00:25:25,220 --> 00:25:32,450
l2 profile ID by from so how do I

572
00:25:29,690 --> 00:25:35,240
associate this with an SSID pretty

573
00:25:32,450 --> 00:25:37,700
simple this key has all the answers this

574
00:25:35,240 --> 00:25:40,160
registry location actually so you just

575
00:25:37,700 --> 00:25:43,490
click on the next sub key which is

576
00:25:40,160 --> 00:25:45,620
metadata go in there click on channel

577
00:25:43,490 --> 00:25:47,750
hints look at the binary data for

578
00:25:45,620 --> 00:25:50,659
Channel hints and that will tell you

579
00:25:47,750 --> 00:25:54,140
that this is associated with Netgear 93

580
00:25:50,660 --> 00:25:57,920
that's my SSID so this is how we've

581
00:25:54,140 --> 00:26:00,200
associated profile index with a network

582
00:25:57,920 --> 00:26:02,150
SSID and you can go ahead and just write

583
00:26:00,200 --> 00:26:03,830
a little script that actually runs

584
00:26:02,150 --> 00:26:06,950
through all of the profiles and lists

585
00:26:03,830 --> 00:26:12,050
out a table of all profile indexes and

586
00:26:06,950 --> 00:26:14,600
their associated SS IDs so if you're a

587
00:26:12,050 --> 00:26:16,430
forensic investigator and you want to do

588
00:26:14,600 --> 00:26:19,929
this on your own how do you go ahead and

589
00:26:16,430 --> 00:26:22,029
do this it's a two-step process

590
00:26:19,930 --> 00:26:24,639
unfortunately I

591
00:26:22,029 --> 00:26:28,119
made it a one step process first is you

592
00:26:24,639 --> 00:26:32,289
use Libby se DB or you use another tool

593
00:26:28,119 --> 00:26:35,889
to interpret the ESC database take us

594
00:26:32,289 --> 00:26:40,059
are you DB dot thus from database use

595
00:26:35,889 --> 00:26:42,668
Libya CBB to convert it to a CSV file

596
00:26:40,059 --> 00:26:45,580
and Libya c DB is an awesome tool

597
00:26:42,669 --> 00:26:47,889
written by Joachim it's the guy who's

598
00:26:45,580 --> 00:26:51,908
written another dozen libraries for

599
00:26:47,889 --> 00:26:53,529
forensics really awesome guy this will

600
00:26:51,909 --> 00:26:56,320
give you all the tables in CSV format

601
00:26:53,529 --> 00:26:57,609
take that and then I've written a little

602
00:26:56,320 --> 00:27:00,189
script which you can download from my

603
00:26:57,609 --> 00:27:01,809
website this basically does all of what

604
00:27:00,190 --> 00:27:03,999
I just talked about so resolving those

605
00:27:01,809 --> 00:27:06,460
foreign Keys parsing those interface

606
00:27:03,999 --> 00:27:08,529
Lewis timestamps parsing the network

607
00:27:06,460 --> 00:27:12,519
profiles from the registry it'll do all

608
00:27:08,529 --> 00:27:15,279
of that clean up the database and give

609
00:27:12,519 --> 00:27:19,200
you output which then looks something

610
00:27:15,279 --> 00:27:22,049
like this so this is the cleaned up data

611
00:27:19,200 --> 00:27:25,299
not cleaned up just interpreted data

612
00:27:22,049 --> 00:27:29,168
here you have timestamps here you have

613
00:27:25,299 --> 00:27:31,658
the full application packs the user said

614
00:27:29,169 --> 00:27:35,859
associated with that application that is

615
00:27:31,659 --> 00:27:38,169
the owner of that process followed by

616
00:27:35,859 --> 00:27:40,769
interface type all of this right now is

617
00:27:38,169 --> 00:27:44,889
I Triple E 802 11 that means Wi-Fi

618
00:27:40,769 --> 00:27:47,919
interface ID l2 profile ID if you look

619
00:27:44,889 --> 00:27:51,248
at the last column I've added that so it

620
00:27:47,919 --> 00:27:55,269
interprets l2 profile ID to that SSID

621
00:27:51,249 --> 00:27:57,809
and the second last column is column J

622
00:27:55,269 --> 00:28:00,039
is app name that has also been added by

623
00:27:57,809 --> 00:28:03,580
me manually it's not there in the

624
00:28:00,039 --> 00:28:06,158
database it's simply the same as column

625
00:28:03,580 --> 00:28:08,320
C which is app ID it just takes the full

626
00:28:06,159 --> 00:28:10,440
app path and just gets rid of the path

627
00:28:08,320 --> 00:28:13,359
gives you just the application name

628
00:28:10,440 --> 00:28:16,330
makes it easier to read so you can

629
00:28:13,359 --> 00:28:18,009
interpret this very easily if I'm

630
00:28:16,330 --> 00:28:20,408
looking at the application Chrome which

631
00:28:18,009 --> 00:28:24,549
is the first entry in there then this is

632
00:28:20,409 --> 00:28:27,509
telling me that on 20th of April at 8:00

633
00:28:24,549 --> 00:28:31,430
p.m. there was a strong checkpoint and

634
00:28:27,509 --> 00:28:35,660
the Chrome Exe process

635
00:28:31,430 --> 00:28:37,730
sent 554 bytes and received 392 bytes in

636
00:28:35,660 --> 00:28:40,190
the past one hour so that is activity

637
00:28:37,730 --> 00:28:41,510
for one hour okay that looks really

638
00:28:40,190 --> 00:28:44,090
small that's because Chrome wasn't

639
00:28:41,510 --> 00:28:46,330
really lost it was just there on the

640
00:28:44,090 --> 00:28:50,919
side doing its notification thing

641
00:28:46,330 --> 00:28:53,270
however like I said sometimes you have

642
00:28:50,920 --> 00:28:55,160
multiple interface IDs and they're both

643
00:28:53,270 --> 00:28:57,320
active and this is what's happening on

644
00:28:55,160 --> 00:29:00,980
my machine so you'll notice that there

645
00:28:57,320 --> 00:29:03,110
is yet another profile ID one ending in

646
00:29:00,980 --> 00:29:05,360
fifty-seven that's also associated to

647
00:29:03,110 --> 00:29:07,340
the same Wi-Fi and Windows

648
00:29:05,360 --> 00:29:09,229
sometimes logs it under one sometimes

649
00:29:07,340 --> 00:29:10,850
under the other so if you want to look

650
00:29:09,230 --> 00:29:12,470
up the true usage for Chrome you've got

651
00:29:10,850 --> 00:29:15,649
to add up the values for both the

652
00:29:12,470 --> 00:29:18,260
interfaces the second one I think is

653
00:29:15,650 --> 00:29:22,970
line item it's about halfway through

654
00:29:18,260 --> 00:29:24,920
Auto increment ID 451 there you see a

655
00:29:22,970 --> 00:29:29,210
lot more data for chrome dot exe under

656
00:29:24,920 --> 00:29:32,290
bytes sent and bytes received another

657
00:29:29,210 --> 00:29:34,640
thing I want to highlight in here is

658
00:29:32,290 --> 00:29:36,950
those those two rows that are

659
00:29:34,640 --> 00:29:42,130
highlighted in yellow right there these

660
00:29:36,950 --> 00:29:46,180
are what Windows shows you as the total

661
00:29:42,130 --> 00:29:48,410
bytes consumed by that Wi-Fi profile

662
00:29:46,180 --> 00:29:50,000
remember a few slides back I showed you

663
00:29:48,410 --> 00:29:51,680
how you could view that information on

664
00:29:50,000 --> 00:29:53,270
any connected network it shows you

665
00:29:51,680 --> 00:29:55,970
estimated usage for the last 60 days

666
00:29:53,270 --> 00:29:57,820
Windows is taking all of that all of

667
00:29:55,970 --> 00:30:00,850
these entries that are highlighted and

668
00:29:57,820 --> 00:30:03,290
for the entire month for all the

669
00:30:00,850 --> 00:30:07,280
throughout the you know 60 day period

670
00:30:03,290 --> 00:30:09,050
and showing you the sum of that since it

671
00:30:07,280 --> 00:30:11,620
says for the entire interface you're not

672
00:30:09,050 --> 00:30:15,800
going to see an app ID or user ID

673
00:30:11,620 --> 00:30:18,050
populated there that's what that one

674
00:30:15,800 --> 00:30:20,840
means so if you see that entry with an

675
00:30:18,050 --> 00:30:23,030
empty app ID and user ID that's not some

676
00:30:20,840 --> 00:30:25,760
ghost process that represents the entire

677
00:30:23,030 --> 00:30:28,700
you know all the data that the interface

678
00:30:25,760 --> 00:30:31,550
received on that Wi-Fi profile if you

679
00:30:28,700 --> 00:30:33,500
add up all the application consumed data

680
00:30:31,550 --> 00:30:35,480
and you look up the data that was on the

681
00:30:33,500 --> 00:30:37,100
interface they will closely match they

682
00:30:35,480 --> 00:30:39,080
won't match exactly because the data

683
00:30:37,100 --> 00:30:40,909
received at the interface will always be

684
00:30:39,080 --> 00:30:43,429
a little larger just because there's

685
00:30:40,910 --> 00:30:45,140
always going to be protocol overhead

686
00:30:43,430 --> 00:30:46,730
there's going to be drop packets at the

687
00:30:45,140 --> 00:30:48,920
interface there's gonna be more data

688
00:30:46,730 --> 00:30:51,950
that the interface receives then that it

689
00:30:48,920 --> 00:30:54,140
forwards back to the applications but it

690
00:30:51,950 --> 00:31:01,910
should closely match if you don't have

691
00:30:54,140 --> 00:31:05,270
network problems that is okay that being

692
00:31:01,910 --> 00:31:07,640
said I'm going to talk about some of the

693
00:31:05,270 --> 00:31:09,650
forensic uses of this data what can we

694
00:31:07,640 --> 00:31:13,400
do with this data and some of the

695
00:31:09,650 --> 00:31:16,280
immediate applications off from in our

696
00:31:13,400 --> 00:31:17,810
day-to-day investigations so first thing

697
00:31:16,280 --> 00:31:19,490
and pretty obvious is the user to

698
00:31:17,810 --> 00:31:21,409
process mapping you're doing incident

699
00:31:19,490 --> 00:31:23,470
response you want to find out which

700
00:31:21,410 --> 00:31:26,630
process was launched in who launched it

701
00:31:23,470 --> 00:31:28,610
user process relationship is clearly

702
00:31:26,630 --> 00:31:31,210
given to you in two tables and some

703
00:31:28,610 --> 00:31:34,520
application resource as well as the

704
00:31:31,210 --> 00:31:38,210
network data usage both of them tell you

705
00:31:34,520 --> 00:31:42,520
who's the owner of the process network

706
00:31:38,210 --> 00:31:45,440
statistics again pretty straightforward

707
00:31:42,520 --> 00:31:49,730
data uploaded and downloaded broken down

708
00:31:45,440 --> 00:31:53,840
by four interface or Wi-Fi profile or

709
00:31:49,730 --> 00:31:56,120
process super artifact and I'm going to

710
00:31:53,840 --> 00:32:00,590
talk about where I use this in a recent

711
00:31:56,120 --> 00:32:06,139
case third thing is deleted uninstalled

712
00:32:00,590 --> 00:32:10,550
an external program tracking so we use a

713
00:32:06,140 --> 00:32:12,770
number of artifacts to actually try to

714
00:32:10,550 --> 00:32:15,980
figure out which programs were actually

715
00:32:12,770 --> 00:32:18,110
run on a Windows box you know we use

716
00:32:15,980 --> 00:32:20,510
shim cache and prefetch files and

717
00:32:18,110 --> 00:32:22,070
various mru lists in the registry and

718
00:32:20,510 --> 00:32:24,770
trying to look for anything that would

719
00:32:22,070 --> 00:32:26,540
give me you know what what application

720
00:32:24,770 --> 00:32:30,470
was run that I cannot see on the disk

721
00:32:26,540 --> 00:32:31,970
anymore from is one more one more

722
00:32:30,470 --> 00:32:33,710
artifact which you would add to that

723
00:32:31,970 --> 00:32:36,020
list of artifacts that you would check

724
00:32:33,710 --> 00:32:38,480
there's anything that consumes CPU

725
00:32:36,020 --> 00:32:42,620
cycles would actually show up in srem

726
00:32:38,480 --> 00:32:44,540
under the application resource table and

727
00:32:42,620 --> 00:32:48,439
if it used data it would also show up

728
00:32:44,540 --> 00:32:51,170
under the system data usage and the

729
00:32:48,440 --> 00:32:53,810
fourth item here is application run

730
00:32:51,170 --> 00:32:55,970
times estimation we're going to talk

731
00:32:53,810 --> 00:32:59,100
about this in a little detail whenever

732
00:32:55,970 --> 00:33:01,440
we talk about applications or processors

733
00:32:59,100 --> 00:33:04,168
the first artifact and most important

734
00:33:01,440 --> 00:33:06,659
artifact that we use in fact the only

735
00:33:04,169 --> 00:33:09,029
artifact that tells us the start time of

736
00:33:06,659 --> 00:33:10,980
a process is prefetch files but prefetch

737
00:33:09,029 --> 00:33:12,840
powers does not give us the duration

738
00:33:10,980 --> 00:33:15,390
you know how long did it run did it run

739
00:33:12,840 --> 00:33:16,320
for four hours three hours three minutes

740
00:33:15,390 --> 00:33:19,200
I don't know

741
00:33:16,320 --> 00:33:21,539
so it's rum if an application ran you

742
00:33:19,200 --> 00:33:23,370
know longer than an hour then you have

743
00:33:21,539 --> 00:33:26,309
some kind of estimation that you can do

744
00:33:23,370 --> 00:33:29,340
for it how does this work so let's

745
00:33:26,309 --> 00:33:31,770
assume that a user launched the

746
00:33:29,340 --> 00:33:36,000
Microsoft Word application and the word

747
00:33:31,770 --> 00:33:38,960
application was launched at 1343 ran for

748
00:33:36,000 --> 00:33:42,809
almost three hours and then it exited at

749
00:33:38,960 --> 00:33:45,000
1640 so the forensic investigator comes

750
00:33:42,809 --> 00:33:47,730
in after a few days immediately pulls up

751
00:33:45,000 --> 00:33:50,220
the prefetch files okay I know this was

752
00:33:47,730 --> 00:33:51,750
started at 1343 but I don't know how

753
00:33:50,220 --> 00:33:55,230
long it ran and there were no more

754
00:33:51,750 --> 00:33:57,149
prefetch entries after that so you start

755
00:33:55,230 --> 00:34:01,020
pulling up this ROM data now so you'll

756
00:33:57,149 --> 00:34:03,510
get a strong checkpoint at 1400 hours

757
00:34:01,020 --> 00:34:05,668
another Strom checkpoint at 1500 hours

758
00:34:03,510 --> 00:34:08,790
another srem checkpoint at 1600 hours

759
00:34:05,669 --> 00:34:12,119
and there's one at 1700 hours all of

760
00:34:08,790 --> 00:34:14,399
these will and then there will be

761
00:34:12,119 --> 00:34:16,440
another one at 1800 hours also but that

762
00:34:14,399 --> 00:34:18,149
one will not reference windward because

763
00:34:16,440 --> 00:34:21,540
windward was not running at that point

764
00:34:18,149 --> 00:34:24,060
of time so all the I've only showing you

765
00:34:21,540 --> 00:34:27,270
the from checkpoints that actually

766
00:34:24,060 --> 00:34:29,699
reference in word dot exe in the

767
00:34:27,270 --> 00:34:31,730
application resource table if windward

768
00:34:29,699 --> 00:34:35,158
was running using CPU cycles

769
00:34:31,730 --> 00:34:39,629
communicating out to the Internet it may

770
00:34:35,159 --> 00:34:44,820
or may not it would show up in one or

771
00:34:39,629 --> 00:34:46,529
more tables in from so this first

772
00:34:44,820 --> 00:34:48,119
checkpoint actually tells me the

773
00:34:46,530 --> 00:34:49,379
checkpoint at two o'clock tells me that

774
00:34:48,119 --> 00:34:53,220
between one and two

775
00:34:49,379 --> 00:34:55,679
I saw windward Activity the checkpoint

776
00:34:53,219 --> 00:34:57,720
at three o'clock 1500 hours tells me

777
00:34:55,679 --> 00:35:00,300
that I saw some activity between 1400

778
00:34:57,720 --> 00:35:03,209
and 1500 and so on so using this

779
00:35:00,300 --> 00:35:06,869
information I can sort of estimate that

780
00:35:03,210 --> 00:35:08,369
it's very likely that I could both the

781
00:35:06,869 --> 00:35:11,760
artifacts together and I said I know for

782
00:35:08,369 --> 00:35:12,510
sure it started at 1343 and it probably

783
00:35:11,760 --> 00:35:18,960
went

784
00:35:12,510 --> 00:35:21,810
till 1700 this is my estimation for the

785
00:35:18,960 --> 00:35:24,840
Windward process and I'm able to do this

786
00:35:21,810 --> 00:35:27,900
using this Rome artifact inside of this

787
00:35:24,840 --> 00:35:32,850
estimation again I can say for sure that

788
00:35:27,900 --> 00:35:35,940
Windows ran from 1343 to 1600 and then

789
00:35:32,850 --> 00:35:39,569
that lasts one hour I'm not sure of when

790
00:35:35,940 --> 00:35:44,390
it actually exited did it exit you know

791
00:35:39,570 --> 00:35:47,369
at 1601 or 1659 since rum has a

792
00:35:44,390 --> 00:35:49,529
periodicity of one hour we don't know

793
00:35:47,369 --> 00:35:52,080
when within that hour it exited but we

794
00:35:49,530 --> 00:35:55,770
do know it was running sometime within

795
00:35:52,080 --> 00:35:58,580
that timeframe within that hour so we're

796
00:35:55,770 --> 00:36:01,740
a lot closer to estimating time duration

797
00:35:58,580 --> 00:36:03,810
well with three facts we had note our

798
00:36:01,740 --> 00:36:05,450
estimation we can do some amount of

799
00:36:03,810 --> 00:36:11,700
estimation using

800
00:36:05,450 --> 00:36:13,740
schrum and prefetch put together here's

801
00:36:11,700 --> 00:36:16,319
another thing brief fed files only

802
00:36:13,740 --> 00:36:18,720
retain the last eight start times in

803
00:36:16,320 --> 00:36:20,730
Windows 8 okay in Windows XP and Windows

804
00:36:18,720 --> 00:36:22,618
Vista it was only you know you only get

805
00:36:20,730 --> 00:36:24,420
the last time the process was run now

806
00:36:22,619 --> 00:36:25,740
you get the last eight times but for an

807
00:36:24,420 --> 00:36:28,109
application like word which is

808
00:36:25,740 --> 00:36:29,520
frequently used any other application

809
00:36:28,109 --> 00:36:31,830
that's frequently used it's unlikely

810
00:36:29,520 --> 00:36:33,840
that if an investigator comes in a week

811
00:36:31,830 --> 00:36:36,060
later he's actually going to be able to

812
00:36:33,840 --> 00:36:37,410
see any of the start points because

813
00:36:36,060 --> 00:36:40,080
they've all been overwritten with newer

814
00:36:37,410 --> 00:36:42,149
data the last state start times are

815
00:36:40,080 --> 00:36:44,190
going to refer to this week and not a

816
00:36:42,150 --> 00:36:46,380
month back so if you come in a month

817
00:36:44,190 --> 00:36:48,750
later and you try to do the same thing

818
00:36:46,380 --> 00:36:50,640
you don't have any prefetch files you've

819
00:36:48,750 --> 00:36:53,160
got min word it ran it exited it's been

820
00:36:50,640 --> 00:36:56,640
a month you still have some data because

821
00:36:53,160 --> 00:36:58,080
from data typically goes back the

822
00:36:56,640 --> 00:37:00,660
network data goes back at least three

823
00:36:58,080 --> 00:37:04,770
months and the application resource data

824
00:37:00,660 --> 00:37:08,368
I have seen some data as old as five to

825
00:37:04,770 --> 00:37:10,830
six months so I'm not exactly certain as

826
00:37:08,369 --> 00:37:12,780
to what Windows cutoff period is but I

827
00:37:10,830 --> 00:37:17,069
have seen data as all the six months in

828
00:37:12,780 --> 00:37:19,140
this ROM database but definitely task

829
00:37:17,070 --> 00:37:21,210
manager likes to give you one month old

830
00:37:19,140 --> 00:37:25,210
data so windows guarantee is one month

831
00:37:21,210 --> 00:37:26,620
data and a funny thing is if you

832
00:37:25,210 --> 00:37:28,540
if I go back to that slide you can

833
00:37:26,620 --> 00:37:31,270
actually see that there's a delete users

834
00:37:28,540 --> 00:37:33,160
information if you looked closely on the

835
00:37:31,270 --> 00:37:35,470
task manager it says these are all the

836
00:37:33,160 --> 00:37:38,319
process statistics for this one month

837
00:37:35,470 --> 00:37:40,470
and then there's a belief usage info

838
00:37:38,320 --> 00:37:42,970
button right there if you click that

839
00:37:40,470 --> 00:37:46,149
it's supposedly well it's supposed to

840
00:37:42,970 --> 00:37:47,799
clear out the database but in all the

841
00:37:46,150 --> 00:37:50,290
tests that I have done it actually does

842
00:37:47,800 --> 00:37:52,090
not clear out the database even after do

843
00:37:50,290 --> 00:37:56,410
you delete that user information a lot

844
00:37:52,090 --> 00:37:58,450
of it is still here so it's very likely

845
00:37:56,410 --> 00:38:00,100
that if it's a month old there is going

846
00:37:58,450 --> 00:38:03,009
to be some data in there and you're

847
00:38:00,100 --> 00:38:04,779
gonna find your some checkpoints for

848
00:38:03,010 --> 00:38:06,430
Windward again you're gonna make your

849
00:38:04,780 --> 00:38:07,840
estimation this time your time into

850
00:38:06,430 --> 00:38:10,089
expands because you don't have the

851
00:38:07,840 --> 00:38:14,350
prefetch file to point to the start of

852
00:38:10,090 --> 00:38:16,570
when this activity occurred this is your

853
00:38:14,350 --> 00:38:19,839
estimation one possible duration for

854
00:38:16,570 --> 00:38:23,440
windward dot exe I could say that well

855
00:38:19,840 --> 00:38:26,590
some possibly ran and I'm sure it ran

856
00:38:23,440 --> 00:38:28,690
you know between 1400 and 1600 but this

857
00:38:26,590 --> 00:38:34,870
is only one possibility

858
00:38:28,690 --> 00:38:37,840
this isn't accurate you know why take a

859
00:38:34,870 --> 00:38:40,270
guess anyone this may not be accurate

860
00:38:37,840 --> 00:38:41,980
because I don't have any prefetch files

861
00:38:40,270 --> 00:38:45,070
I don't have anything else that tells me

862
00:38:41,980 --> 00:38:47,140
whether word was run once or twice or 20

863
00:38:45,070 --> 00:38:49,420
times within that time frame it's

864
00:38:47,140 --> 00:38:51,670
possible that it it was started and it

865
00:38:49,420 --> 00:38:57,370
exited you know 50 times within these

866
00:38:51,670 --> 00:39:00,310
four hours all I know is that in each of

867
00:38:57,370 --> 00:39:02,500
these four-hour time frames or it did

868
00:39:00,310 --> 00:39:04,990
exist did it exist for one minute was it

869
00:39:02,500 --> 00:39:07,060
started and killed did it exist 50

870
00:39:04,990 --> 00:39:09,729
instances hundred instances or just one

871
00:39:07,060 --> 00:39:10,410
instance that spanned four hours I don't

872
00:39:09,730 --> 00:39:14,170
know

873
00:39:10,410 --> 00:39:16,120
so from if you don't have prefetch files

874
00:39:14,170 --> 00:39:18,100
cannot actually estimate process run

875
00:39:16,120 --> 00:39:21,730
time however it will tell you that

876
00:39:18,100 --> 00:39:23,830
windward was definitely run between 1300

877
00:39:21,730 --> 00:39:26,590
and 1400 on that day it was definitely

878
00:39:23,830 --> 00:39:29,049
running between 1400 and 1500 it was

879
00:39:26,590 --> 00:39:31,270
definitely running between 16 and 1700

880
00:39:29,050 --> 00:39:34,510
we don't know how many instances or how

881
00:39:31,270 --> 00:39:39,030
long it ran but it definitely ran so

882
00:39:34,510 --> 00:39:39,030
that's a definite value add for

883
00:39:42,180 --> 00:39:49,359
okay I want to talk about another case

884
00:39:46,119 --> 00:39:52,839
that I helped a friend with it's a

885
00:39:49,359 --> 00:39:54,490
typical data theft scenario this has

886
00:39:52,839 --> 00:39:57,099
existed ever since USB drives have

887
00:39:54,490 --> 00:39:58,629
become you know popular employee leaves

888
00:39:57,099 --> 00:40:00,819
a company and during the last few days

889
00:39:58,630 --> 00:40:03,700
he downloads a bunch of data and takes

890
00:40:00,819 --> 00:40:06,279
it with him pretty standard thing should

891
00:40:03,700 --> 00:40:08,470
not happen these days because we've seen

892
00:40:06,280 --> 00:40:11,230
these cases for I think seven eight

893
00:40:08,470 --> 00:40:13,089
years now maybe longer I have seen them

894
00:40:11,230 --> 00:40:16,539
at least seven to eight years back and

895
00:40:13,089 --> 00:40:18,160
they still happen so one such incident

896
00:40:16,539 --> 00:40:21,480
happened again and in this case the

897
00:40:18,160 --> 00:40:26,770
employees laptop was a Windows 8 laptop

898
00:40:21,480 --> 00:40:29,200
so what we did and he was a smart guy he

899
00:40:26,770 --> 00:40:31,538
went ahead and used some tools and

900
00:40:29,200 --> 00:40:34,270
deleted a lot of the forensic artifacts

901
00:40:31,539 --> 00:40:37,630
that were interested in wipe some files

902
00:40:34,270 --> 00:40:42,009
did a lot of covering up of his tracks

903
00:40:37,630 --> 00:40:43,329
but he did not know about shrum so we

904
00:40:42,010 --> 00:40:45,789
went in there we pulled out his from

905
00:40:43,329 --> 00:40:51,190
data and with Excel we were able to take

906
00:40:45,789 --> 00:40:53,829
that u data usage table and plot it out

907
00:40:51,190 --> 00:40:57,789
and we can see the four-day usage over

908
00:40:53,829 --> 00:41:00,819
here and this is for three months over

909
00:40:57,789 --> 00:41:04,450
three months you can notice the last two

910
00:41:00,819 --> 00:41:07,240
weeks there are some huge spikes of data

911
00:41:04,450 --> 00:41:09,339
being consumed lots of data being

912
00:41:07,240 --> 00:41:11,439
uploaded and downloaded and that last

913
00:41:09,339 --> 00:41:14,980
day actually it's the one day before he

914
00:41:11,440 --> 00:41:17,819
left on the 20th of June you're gonna

915
00:41:14,980 --> 00:41:20,260
see about 1.9 gigabytes of data

916
00:41:17,819 --> 00:41:22,839
downloaded and about 100 megabytes of

917
00:41:20,260 --> 00:41:26,319
data uploaded that right there tells me

918
00:41:22,839 --> 00:41:28,808
that something happened that's not the

919
00:41:26,319 --> 00:41:30,538
average pattern of usage for this

920
00:41:28,809 --> 00:41:31,869
employee that should not have happened

921
00:41:30,539 --> 00:41:33,730
now

922
00:41:31,869 --> 00:41:36,130
like I said some doesn't track what was

923
00:41:33,730 --> 00:41:38,829
downloaded what was uploaded or what IP

924
00:41:36,130 --> 00:41:41,140
it went to but that right there is the

925
00:41:38,829 --> 00:41:42,849
biggest red flag that you can have what

926
00:41:41,140 --> 00:41:45,038
else did we have

927
00:41:42,849 --> 00:41:46,200
we took Dropbox activity but it wasn't

928
00:41:45,039 --> 00:41:47,460
Dropbox but it was one of them

929
00:41:46,200 --> 00:41:51,660
services I'll just refer to it as

930
00:41:47,460 --> 00:41:53,280
Dropbox we took Dropbox activity and we

931
00:41:51,660 --> 00:41:55,200
drew up the same chart and guess what

932
00:41:53,280 --> 00:41:58,829
Dropbox was installed two days before

933
00:41:55,200 --> 00:42:00,598
and parallel to this bar you have one

934
00:41:58,829 --> 00:42:03,119
point nine gigabytes downloaded Dropbox

935
00:42:00,599 --> 00:42:08,490
1.9 gigabytes uploaded well what do you

936
00:42:03,119 --> 00:42:10,050
know and on the same day and by the way

937
00:42:08,490 --> 00:42:11,910
I haven't shown you the breakdown you

938
00:42:10,050 --> 00:42:13,740
can break this down by the hour so you

939
00:42:11,910 --> 00:42:14,420
can you know that between 1:00 and 2:00

940
00:42:13,740 --> 00:42:17,368
p.m.

941
00:42:14,420 --> 00:42:19,890
about 1.2 gigabytes was downloaded and

942
00:42:17,369 --> 00:42:22,079
between 3:00 and 4:00 300 megabytes was

943
00:42:19,890 --> 00:42:24,598
downloads so we can narrow it down this

944
00:42:22,079 --> 00:42:27,089
is really great for data theft scenario

945
00:42:24,599 --> 00:42:30,180
is really great for you know any kind of

946
00:42:27,089 --> 00:42:33,660
data exfiltration scenario you can go

947
00:42:30,180 --> 00:42:37,259
back a few months so you so picture this

948
00:42:33,660 --> 00:42:39,720
you're you find a Trojan on your network

949
00:42:37,260 --> 00:42:41,790
and you know it's some kind of apt

950
00:42:39,720 --> 00:42:44,759
something that's stealing data from your

951
00:42:41,790 --> 00:42:46,410
network you've identified that but you

952
00:42:44,760 --> 00:42:48,089
also know now that it's been running in

953
00:42:46,410 --> 00:42:50,670
your network for at least two to three

954
00:42:48,089 --> 00:42:53,250
months or longer go back to all of your

955
00:42:50,670 --> 00:42:55,770
machines and then pull up these graphs

956
00:42:53,250 --> 00:42:58,770
and see how much data and how much

957
00:42:55,770 --> 00:43:06,420
network usage that trojan is actually

958
00:42:58,770 --> 00:43:08,280
doing ok with that I'm just gonna recap

959
00:43:06,420 --> 00:43:10,589
all of the uses that we have for some

960
00:43:08,280 --> 00:43:13,319
data if you want to investigate program

961
00:43:10,589 --> 00:43:15,450
usage with shrum first thing that it

962
00:43:13,319 --> 00:43:16,800
gives you is it gives you I tells you

963
00:43:15,450 --> 00:43:20,310
whether an app was run or not at a

964
00:43:16,800 --> 00:43:22,770
within a particular hour up to a few

965
00:43:20,310 --> 00:43:26,069
months back you can estimate in certain

966
00:43:22,770 --> 00:43:28,050
cases the approximate run time you can

967
00:43:26,069 --> 00:43:32,069
identify the user who launched that

968
00:43:28,050 --> 00:43:34,460
program you get network information

969
00:43:32,069 --> 00:43:38,940
amazing network information you know

970
00:43:34,460 --> 00:43:42,960
broken down by our interface for Wi-Fi

971
00:43:38,940 --> 00:43:44,910
ID for application and for user the same

972
00:43:42,960 --> 00:43:46,500
application is used by three different

973
00:43:44,910 --> 00:43:50,910
users it's cracked in three different

974
00:43:46,500 --> 00:43:54,900
rows in the database and last but not

975
00:43:50,910 --> 00:43:56,549
least is the CPU statistics which is CPU

976
00:43:54,900 --> 00:43:58,560
cycles context which is that kind of

977
00:43:56,550 --> 00:44:01,579
thing which we don't have too much of a

978
00:43:58,560 --> 00:44:01,578
use for actually

979
00:44:02,060 --> 00:44:10,640
so I do have a couple of minutes so I'm

980
00:44:06,960 --> 00:44:12,930
going to talk about the CPU cycles thing

981
00:44:10,640 --> 00:44:14,910
this is something that can't be used

982
00:44:12,930 --> 00:44:17,790
very often but sometimes with certain

983
00:44:14,910 --> 00:44:21,750
programs you can use this information

984
00:44:17,790 --> 00:44:23,160
for doing something useful and I've

985
00:44:21,750 --> 00:44:25,980
written about this in the paper so what

986
00:44:23,160 --> 00:44:27,569
you can do is I took s delete

987
00:44:25,980 --> 00:44:30,690
everybody knows s delete from

988
00:44:27,570 --> 00:44:32,970
sysinternals it's a program in you just

989
00:44:30,690 --> 00:44:34,470
run it s delete followed by file name or

990
00:44:32,970 --> 00:44:36,950
folder name it'll just go ahead and

991
00:44:34,470 --> 00:44:40,109
basically override all the files with

992
00:44:36,950 --> 00:44:41,819
random characters and then rename the

993
00:44:40,110 --> 00:44:43,940
file to some random characters and then

994
00:44:41,820 --> 00:44:48,540
delete it so basically you can't trace

995
00:44:43,940 --> 00:44:50,370
data for that file when you run s delete

996
00:44:48,540 --> 00:44:51,900
you're gonna notice that Esteli it uses

997
00:44:50,370 --> 00:44:53,250
a hundred percent of your cpu it's a

998
00:44:51,900 --> 00:44:55,320
very simple program it basically just

999
00:44:53,250 --> 00:44:57,240
opens the file and starts flooding it

1000
00:44:55,320 --> 00:44:59,520
with data there's no weight cycles on it

1001
00:44:57,240 --> 00:45:01,049
it's not waiting on the user on a

1002
00:44:59,520 --> 00:45:06,090
program that uses a hundred percent of

1003
00:45:01,050 --> 00:45:08,160
CPU that means that the CPU time is

1004
00:45:06,090 --> 00:45:11,490
going to be roughly equivalent to the

1005
00:45:08,160 --> 00:45:13,080
runtime okay only for that program that

1006
00:45:11,490 --> 00:45:15,509
doesn't wait for resources this doesn't

1007
00:45:13,080 --> 00:45:17,880
work for most programs that we use most

1008
00:45:15,510 --> 00:45:20,880
programs simply open up the GUI and then

1009
00:45:17,880 --> 00:45:23,400
it's just going on a weight you click on

1010
00:45:20,880 --> 00:45:25,140
something on most programs you can run

1011
00:45:23,400 --> 00:45:27,090
the programs for hours and the CPU usage

1012
00:45:25,140 --> 00:45:29,339
is only going to be a few seconds at

1013
00:45:27,090 --> 00:45:31,890
most but for something like s delete

1014
00:45:29,340 --> 00:45:33,570
where users of all of your CPU you can

1015
00:45:31,890 --> 00:45:38,400
sort of do this estimation it's not

1016
00:45:33,570 --> 00:45:40,770
perfect but I ran some I ran some trials

1017
00:45:38,400 --> 00:45:43,290
with it and I was getting very very

1018
00:45:40,770 --> 00:45:45,720
close results so I took the CPU cycles

1019
00:45:43,290 --> 00:45:48,240
you take the CPU cycles divided by your

1020
00:45:45,720 --> 00:45:52,500
processor speed and your processor speed

1021
00:45:48,240 --> 00:45:54,899
is in Hertz quarts is basically cycles

1022
00:45:52,500 --> 00:45:56,130
per second so if you divide cycles by

1023
00:45:54,900 --> 00:45:58,320
cycles per second then you get the

1024
00:45:56,130 --> 00:46:00,180
number of seconds it will give you CPU

1025
00:45:58,320 --> 00:46:02,880
time and like I said if it's using

1026
00:46:00,180 --> 00:46:04,740
hundred percent CPU CPU time is roughly

1027
00:46:02,880 --> 00:46:07,230
equivalent to a user the time that the

1028
00:46:04,740 --> 00:46:10,020
application actually ran so I had Esteli

1029
00:46:07,230 --> 00:46:11,599
run for about five minutes and then I

1030
00:46:10,020 --> 00:46:15,799
pulled up the stats

1031
00:46:11,599 --> 00:46:18,140
from and that was also whence I did the

1032
00:46:15,799 --> 00:46:20,630
math dividing the number of CPU cycles

1033
00:46:18,140 --> 00:46:22,759
by my CPU speed it roughly corresponds

1034
00:46:20,630 --> 00:46:24,499
to the same amount so with certain

1035
00:46:22,759 --> 00:46:26,150
programs you know these these things can

1036
00:46:24,499 --> 00:46:29,598
be useful but again it's it's very

1037
00:46:26,150 --> 00:46:34,640
limited applicability I hope that made

1038
00:46:29,599 --> 00:46:36,259
some sense and that's about it we're

1039
00:46:34,640 --> 00:46:41,799
almost out of time also if you have any

1040
00:46:36,259 --> 00:46:41,799
questions the happy to answer yes sir

1041
00:46:55,450 --> 00:47:02,290
so what will happen is if you're doing a

1042
00:46:58,610 --> 00:47:04,700
local copy it's not going to show up

1043
00:47:02,290 --> 00:47:06,740
it's not going to show up as data going

1044
00:47:04,700 --> 00:47:08,689
off of a network interface so what

1045
00:47:06,740 --> 00:47:11,509
you're gonna see is the application

1046
00:47:08,690 --> 00:47:14,750
resource usage and application resource

1047
00:47:11,510 --> 00:47:17,360
has items in there like number of i/o

1048
00:47:14,750 --> 00:47:20,030
bytes read and written you're gonna see

1049
00:47:17,360 --> 00:47:22,340
those counters go up however I haven't

1050
00:47:20,030 --> 00:47:25,280
had a whole lot of luck with that just

1051
00:47:22,340 --> 00:47:26,960
because it doesn't separate the i/o it

1052
00:47:25,280 --> 00:47:28,940
doesn't separate disk i/o memory i/o

1053
00:47:26,960 --> 00:47:31,790
device i/o in two separate categories so

1054
00:47:28,940 --> 00:47:35,000
it's all mixed up which is why I haven't

1055
00:47:31,790 --> 00:47:36,620
been able to pinpoint that this is you

1056
00:47:35,000 --> 00:47:38,630
know two gigabytes written out to a file

1057
00:47:36,620 --> 00:47:40,160
so I should see two gigabytes consumed I

1058
00:47:38,630 --> 00:47:43,210
didn't see that one-to-one correlation

1059
00:47:40,160 --> 00:47:43,210
in my experiments

1060
00:47:50,710 --> 00:48:00,489
no as of now nobody knows about Sarang I

1061
00:48:01,690 --> 00:48:07,249
have not and it's I suppose you're gonna

1062
00:48:04,789 --> 00:48:15,950
have to change some hard-coded values in

1063
00:48:07,249 --> 00:48:17,988
somebody else yes sir by default from as

1064
00:48:15,950 --> 00:48:20,118
part of the diagnostic policy service so

1065
00:48:17,989 --> 00:48:21,440
if you turn off diagnostic policy

1066
00:48:20,119 --> 00:48:31,809
service then it's not gonna do any

1067
00:48:21,440 --> 00:48:35,210
monitoring but by default it's on yes I

1068
00:48:31,809 --> 00:48:38,769
have not seen any ones in particular it

1069
00:48:35,210 --> 00:48:38,769
I have not seen anyone yeah

1070
00:48:46,360 --> 00:48:51,710
so what happens is data is continuously

1071
00:48:50,090 --> 00:48:53,150
being monitored and every hour it's

1072
00:48:51,710 --> 00:48:55,400
being written out to the registry and

1073
00:48:53,150 --> 00:48:57,860
then periodically from the registry it

1074
00:48:55,400 --> 00:48:59,900
goes to the database I'm not certain of

1075
00:48:57,860 --> 00:49:09,260
that period it usually happens you know

1076
00:48:59,900 --> 00:49:11,030
a few hours so so what here's what I did

1077
00:49:09,260 --> 00:49:12,950
if you want to force a write to the

1078
00:49:11,030 --> 00:49:14,720
database you shut down the machine on a

1079
00:49:12,950 --> 00:49:16,040
shutdown that triggers a full right so

1080
00:49:14,720 --> 00:49:20,029
everything that's there in the registry

1081
00:49:16,040 --> 00:49:21,770
will get pushed out SR UDP got that or

1082
00:49:20,030 --> 00:49:24,050
you can or you can look up the data in

1083
00:49:21,770 --> 00:49:25,400
the registry because it's this you will

1084
00:49:24,050 --> 00:49:29,030
not have data in both places it's

1085
00:49:25,400 --> 00:49:31,580
basically a move operation and I have a

1086
00:49:29,030 --> 00:49:33,290
script that specifically goes and fix

1087
00:49:31,580 --> 00:49:35,000
that data from the registry the second

1088
00:49:33,290 --> 00:49:37,520
script specifically goes and fix the

1089
00:49:35,000 --> 00:49:38,900
data from SR UDP so I have run into

1090
00:49:37,520 --> 00:49:40,160
those situations where sometimes you

1091
00:49:38,900 --> 00:49:42,080
know you've been dose crashes blue

1092
00:49:40,160 --> 00:49:45,230
screens or whatever other reason the

1093
00:49:42,080 --> 00:49:48,020
diagnostic policy service fails and then

1094
00:49:45,230 --> 00:49:50,240
you cannot for some reason Windows does

1095
00:49:48,020 --> 00:49:52,520
not say move that data from the registry

1096
00:49:50,240 --> 00:49:54,290
to the database so you're gonna have to

1097
00:49:52,520 --> 00:50:05,060
get it from both places to get the full

1098
00:49:54,290 --> 00:50:08,259
picture yeah III don't know I've not

1099
00:50:05,060 --> 00:50:08,259
done that level of experimentation

1100
00:50:10,950 --> 00:50:18,149
I have not looked at Server 2012 its I

1101
00:50:16,290 --> 00:50:21,440
was on my list of things to do but I

1102
00:50:18,150 --> 00:50:21,440
have not looked it up

1103
00:50:27,950 --> 00:50:34,460
no this this does record it and probably

1104
00:50:31,910 --> 00:50:36,319
for that reason also it minimizes rights

1105
00:50:34,460 --> 00:50:45,790
to the disc you know by putting it in

1106
00:50:36,320 --> 00:50:45,790
the registry anyone else okay thank you

1107
00:51:14,589 --> 00:51:17,589
okay

1108
00:51:26,830 --> 00:51:33,220
yes you were on Facebook the other day

1109
00:51:29,950 --> 00:51:33,220
turn this off

