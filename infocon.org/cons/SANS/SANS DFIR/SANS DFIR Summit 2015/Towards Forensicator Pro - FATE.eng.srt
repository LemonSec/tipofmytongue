1
00:00:56,180 --> 00:01:01,580
does too so you're actually doing them a

2
00:00:58,550 --> 00:01:05,239
service they don't have to ask it so

3
00:01:01,580 --> 00:01:07,400
what this talks about so it's the

4
00:01:05,239 --> 00:01:10,850
benefits of bringing a develops mindset

5
00:01:07,400 --> 00:01:14,470
to digital forensics and what I mean

6
00:01:10,850 --> 00:01:20,240
when I say a DevOps mindset is both the

7
00:01:14,470 --> 00:01:22,490
obsession with automation and the the

8
00:01:20,240 --> 00:01:23,869
mindset that everyone on the team no

9
00:01:22,490 --> 00:01:25,910
matter where they are if you've got a

10
00:01:23,869 --> 00:01:27,610
disperse team the mindset that everyone

11
00:01:25,910 --> 00:01:30,860
on the team should at any point in time

12
00:01:27,610 --> 00:01:35,710
be able to see what's going on with the

13
00:01:30,860 --> 00:01:38,000
processing we'll also talk about how to

14
00:01:35,710 --> 00:01:43,009
automate that evidence processing using

15
00:01:38,000 --> 00:01:45,020
Jenkins the other thing that will do is

16
00:01:43,009 --> 00:01:47,240
look at the elks tack anyone in here

17
00:01:45,020 --> 00:01:49,009
familiar with lklk elasticsearch

18
00:01:47,240 --> 00:01:53,500
logstash gabbana anyone actually using

19
00:01:49,009 --> 00:01:56,119
it in anger yep still a few cool and

20
00:01:53,500 --> 00:01:58,039
finally I'll talk about forensic at f8

21
00:01:56,119 --> 00:02:00,440
which is a lightweight dfi our manager

22
00:01:58,039 --> 00:02:07,010
which abstracts away even the

23
00:02:00,440 --> 00:02:10,728
complexities of Jenkins so what this

24
00:02:07,010 --> 00:02:13,030
talk is not about nintendo of vb

25
00:02:10,729 --> 00:02:17,660
forensics that's visual basic not the

26
00:02:13,030 --> 00:02:21,260
second-rate Ozzie hbu and it's not about

27
00:02:17,660 --> 00:02:24,290
black box automation right it's very

28
00:02:21,260 --> 00:02:26,480
definitely not about you press the

29
00:02:24,290 --> 00:02:28,310
button and the magic tool spits out the

30
00:02:26,480 --> 00:02:30,260
results and you don't know how those

31
00:02:28,310 --> 00:02:33,370
results came to be they just are because

32
00:02:30,260 --> 00:02:33,370
the magic tool says so

33
00:02:38,840 --> 00:02:45,560
okay what serve ops this is the 10,000

34
00:02:43,700 --> 00:02:47,988
foot view of DevOps because DevOps is

35
00:02:45,560 --> 00:02:49,670
you know subject to as many wars about

36
00:02:47,989 --> 00:02:51,709
what it is and what it's not and who is

37
00:02:49,670 --> 00:02:53,470
and isn't really practicing DevOps and

38
00:02:51,709 --> 00:02:55,670
all that sort of thing but anyway

39
00:02:53,470 --> 00:02:59,000
developers develop with operations in

40
00:02:55,670 --> 00:03:03,250
mind and operations use the same tools

41
00:02:59,000 --> 00:03:03,250
and the same techniques as developers do

42
00:03:03,430 --> 00:03:08,810
it can't be that simple it's not so

43
00:03:07,220 --> 00:03:11,569
there's heaps of information on the web

44
00:03:08,810 --> 00:03:12,920
on Twitter on IRC yes it does exist for

45
00:03:11,569 --> 00:03:16,220
something other than command and control

46
00:03:12,920 --> 00:03:17,839
channels for BOTS about DevOps and the

47
00:03:16,220 --> 00:03:20,269
two places to start are the links that

48
00:03:17,840 --> 00:03:22,370
I've got up there the second link

49
00:03:20,269 --> 00:03:24,680
actually has a really jumping off

50
00:03:22,370 --> 00:03:31,390
resource list to a whole lot of other

51
00:03:24,680 --> 00:03:36,470
resources about what DevOps is anism so

52
00:03:31,390 --> 00:03:38,768
why should we do this I'm arguing that

53
00:03:36,470 --> 00:03:41,540
we need to move from being artisans to

54
00:03:38,769 --> 00:03:44,930
engineers we need to be able to

55
00:03:41,540 --> 00:03:51,440
specialize and so we need to be able to

56
00:03:44,930 --> 00:03:54,319
collaborate so utters in versus engineer

57
00:03:51,440 --> 00:03:56,180
well what's the difference well the

58
00:03:54,319 --> 00:03:58,578
definition of an artisan is a worker and

59
00:03:56,180 --> 00:04:00,910
a skilled trade especially one that

60
00:03:58,579 --> 00:04:03,139
involves making things by hand an

61
00:04:00,910 --> 00:04:05,239
engineer on the other hand is a person

62
00:04:03,139 --> 00:04:07,519
trained and skilled in the design

63
00:04:05,239 --> 00:04:10,910
construction and use of engines or

64
00:04:07,519 --> 00:04:17,108
machines so you can get that they're

65
00:04:10,910 --> 00:04:22,340
both skilled right the difference is the

66
00:04:17,108 --> 00:04:24,500
engineering approach scales right and

67
00:04:22,340 --> 00:04:26,900
with with what we're dealing with you

68
00:04:24,500 --> 00:04:30,169
know with what you know we heard in the

69
00:04:26,900 --> 00:04:33,530
keynote right the scale of some of these

70
00:04:30,169 --> 00:04:36,310
attacks you can't afford laborious

71
00:04:33,530 --> 00:04:36,309
processes

72
00:04:38,760 --> 00:04:43,620
one point I want to make before I move

73
00:04:40,980 --> 00:04:45,960
on our I'm not saying don't be an

74
00:04:43,620 --> 00:04:49,230
artisan right I'm not saying that at all

75
00:04:45,960 --> 00:04:51,450
what I'm saying is don't be an artisan

76
00:04:49,230 --> 00:04:58,830
when what's wanted and needed is an

77
00:04:51,450 --> 00:05:00,719
engineer so why automate a couple of

78
00:04:58,830 --> 00:05:05,880
reasons not everyone's as smart as you

79
00:05:00,720 --> 00:05:10,860
are obviously I'm not as smart at 430am

80
00:05:05,880 --> 00:05:12,600
as I am at 10am you know sometimes I am

81
00:05:10,860 --> 00:05:16,950
if I'm having a really bad day or I had

82
00:05:12,600 --> 00:05:18,840
a really good night I'm not as smart

83
00:05:16,950 --> 00:05:20,580
when someone's yelling at me while I try

84
00:05:18,840 --> 00:05:21,719
and complete a complex procedure you

85
00:05:20,580 --> 00:05:23,940
know if you've got somebody standing

86
00:05:21,720 --> 00:05:29,220
over your shoulder we're in here that's

87
00:05:23,940 --> 00:05:30,960
now where you need to know and the

88
00:05:29,220 --> 00:05:33,450
fourth reason is quite simply people

89
00:05:30,960 --> 00:05:35,700
make mistakes you know with the best

90
00:05:33,450 --> 00:05:38,880
will in the world with the best

91
00:05:35,700 --> 00:05:42,740
intention with the best training people

92
00:05:38,880 --> 00:05:45,810
especially under pressure make mistakes

93
00:05:42,740 --> 00:05:47,100
so the following quote is actually from

94
00:05:45,810 --> 00:05:51,060
a book called the checklist manifesto

95
00:05:47,100 --> 00:05:54,120
how to get things right by a tool go on

96
00:05:51,060 --> 00:05:55,860
now this guy's actually a surgeon who

97
00:05:54,120 --> 00:06:00,480
took on he's a both general and

98
00:05:55,860 --> 00:06:03,440
endocrine surgeon who took on looking at

99
00:06:00,480 --> 00:06:06,690
how they could actually minimize

100
00:06:03,440 --> 00:06:08,760
casualty rates and you know how they

101
00:06:06,690 --> 00:06:12,620
could actually improve the care outcomes

102
00:06:08,760 --> 00:06:16,380
in public hospitals and what he said was

103
00:06:12,620 --> 00:06:18,600
under conditions of complexity not only

104
00:06:16,380 --> 00:06:21,600
a checklist to help they are required

105
00:06:18,600 --> 00:06:24,390
for success there must always be room

106
00:06:21,600 --> 00:06:27,660
for judgment but judgment aided and even

107
00:06:24,390 --> 00:06:28,950
enhanced by procedure so it comes back

108
00:06:27,660 --> 00:06:31,080
to what I was saying before right it's

109
00:06:28,950 --> 00:06:32,880
not about black box automation it's not

110
00:06:31,080 --> 00:06:35,550
about you know no exercise of judgment

111
00:06:32,880 --> 00:06:39,120
no it's about empowering your judgment

112
00:06:35,550 --> 00:06:40,950
it's about doing the grunt work so that

113
00:06:39,120 --> 00:06:44,130
you can then do the thinking so you've

114
00:06:40,950 --> 00:06:47,240
got time to do the thinking so that you

115
00:06:44,130 --> 00:06:47,240
clear that nothing got messy

116
00:06:49,030 --> 00:06:54,380
so yeah basically if you if you haven't

117
00:06:51,830 --> 00:06:55,969
heard of a tool gawand or you haven't

118
00:06:54,380 --> 00:06:57,530
heard the checklist manifesto I

119
00:06:55,970 --> 00:07:04,160
recommend you do yourself a favor and

120
00:06:57,530 --> 00:07:05,270
check it out and just in case you were

121
00:07:04,160 --> 00:07:06,440
wondering you probably weren't yet

122
00:07:05,270 --> 00:07:08,030
because we haven't really talked about

123
00:07:06,440 --> 00:07:09,800
it the fade in forensic ADA fates an

124
00:07:08,030 --> 00:07:14,900
acronym and actually stands for from

125
00:07:09,800 --> 00:07:17,450
others into engineer before I move on is

126
00:07:14,900 --> 00:07:19,270
everybody like presumably most people in

127
00:07:17,450 --> 00:07:22,849
here are familiar with forensic ADA pro

128
00:07:19,270 --> 00:07:25,219
the 2007 April Fool's Day joke about how

129
00:07:22,850 --> 00:07:27,110
you know there was going to be no need

130
00:07:25,220 --> 00:07:28,610
for the human touch in forensics because

131
00:07:27,110 --> 00:07:29,870
basically there was going to be a button

132
00:07:28,610 --> 00:07:31,910
and the button would be to find evidence

133
00:07:29,870 --> 00:07:33,380
button and it had just spit out perfect

134
00:07:31,910 --> 00:07:40,690
reports all the time no judgement

135
00:07:33,380 --> 00:07:44,000
required so this is this is aiming at

136
00:07:40,690 --> 00:07:45,590
that bar it's like you know it's it's an

137
00:07:44,000 --> 00:07:47,630
april fool's day joke and at the same

138
00:07:45,590 --> 00:07:53,840
time there's a lot we can do to move in

139
00:07:47,630 --> 00:07:55,430
that direction so the moving parts right

140
00:07:53,840 --> 00:07:58,310
we start with the sift work station

141
00:07:55,430 --> 00:08:02,360
which is the the basis the toolkit and

142
00:07:58,310 --> 00:08:04,490
the essential part of the solution the

143
00:08:02,360 --> 00:08:08,650
rest you could you could use other tools

144
00:08:04,490 --> 00:08:10,910
right you can use scripting you can use

145
00:08:08,650 --> 00:08:13,219
different there are different continuous

146
00:08:10,910 --> 00:08:15,200
integration servers you can use

147
00:08:13,220 --> 00:08:16,700
different databases you don't even have

148
00:08:15,200 --> 00:08:19,280
to use friends of k two fatal that does

149
00:08:16,700 --> 00:08:23,419
is abstracts away even the Jenkins

150
00:08:19,280 --> 00:08:25,909
complexity I'm not going to you know

151
00:08:23,419 --> 00:08:27,919
bother reading you out the the URLs for

152
00:08:25,910 --> 00:08:30,050
all of this they're actually in the

153
00:08:27,919 --> 00:08:33,588
slide notes and you can get them when

154
00:08:30,050 --> 00:08:35,060
you've got the presentation I did want

155
00:08:33,589 --> 00:08:40,520
to cover off though what we've done with

156
00:08:35,059 --> 00:08:43,179
elk is used the the forensics 572

157
00:08:40,520 --> 00:08:46,010
distribution that Phil Hogan did

158
00:08:43,179 --> 00:08:48,469
basically for two reasons one is for

159
00:08:46,010 --> 00:08:50,870
compatibility because you know if you've

160
00:08:48,470 --> 00:08:52,970
got if you've got a toolset that does

161
00:08:50,870 --> 00:08:55,490
what you want and it's what other people

162
00:08:52,970 --> 00:08:59,480
are using why not use it and then the

163
00:08:55,490 --> 00:09:01,640
other one is it also uses or you know in

164
00:08:59,480 --> 00:09:02,030
the distribution he's also included X

165
00:09:01,640 --> 00:09:04,640
please

166
00:09:02,030 --> 00:09:09,790
so you can actually look at your network

167
00:09:04,640 --> 00:09:12,710
traffic so that's a good one as well so

168
00:09:09,790 --> 00:09:16,880
who he is actually heard of or is

169
00:09:12,710 --> 00:09:19,280
familiar with Jenkins at all okay so we

170
00:09:16,880 --> 00:09:20,660
got like three or four tops great so

171
00:09:19,280 --> 00:09:23,420
this is an opportunity for the rest of

172
00:09:20,660 --> 00:09:26,390
you so what Jenkins is a continuous

173
00:09:23,420 --> 00:09:28,670
integration server that along with the

174
00:09:26,390 --> 00:09:31,819
plugins that we actually load when we're

175
00:09:28,670 --> 00:09:35,089
installing a solution lets you one

176
00:09:31,820 --> 00:09:37,630
automate the processes but to you know

177
00:09:35,090 --> 00:09:40,730
as importantly or more importantly

178
00:09:37,630 --> 00:09:43,010
actually monitor the status of those

179
00:09:40,730 --> 00:09:50,360
processes so that you can see at any

180
00:09:43,010 --> 00:09:56,000
time where things are at let's talk

181
00:09:50,360 --> 00:10:00,070
resources everyone knows more resources

182
00:09:56,000 --> 00:10:02,870
are better right more RAM faster disk

183
00:10:00,070 --> 00:10:04,730
you know gimme gimme gimme there was a

184
00:10:02,870 --> 00:10:07,280
there was a great quote on Twitter just

185
00:10:04,730 --> 00:10:11,120
a couple of days back actually by Jon

186
00:10:07,280 --> 00:10:12,860
Stewart codes like saying if I have a

187
00:10:11,120 --> 00:10:14,660
speciality it's forensics performance

188
00:10:12,860 --> 00:10:19,190
processing so if it's instant let me

189
00:10:14,660 --> 00:10:21,500
assure you it's not forensics but the

190
00:10:19,190 --> 00:10:24,230
important point here is this solution

191
00:10:21,500 --> 00:10:26,840
doesn't actually add a lot in terms of

192
00:10:24,230 --> 00:10:29,240
overhead to the tools that you're using

193
00:10:26,840 --> 00:10:31,550
anyway if you're using the sift so you

194
00:10:29,240 --> 00:10:34,280
can actually do real work with to the MS

195
00:10:31,550 --> 00:10:40,520
right one for your elk server and one

196
00:10:34,280 --> 00:10:42,260
for your saved and the little note down

197
00:10:40,520 --> 00:10:45,230
the bottom there I highly highly highly

198
00:10:42,260 --> 00:10:48,080
recommend SSD you know in the absence of

199
00:10:45,230 --> 00:10:50,780
that fiber attached Sam just for the

200
00:10:48,080 --> 00:10:58,430
speed of getting work done SSD all the

201
00:10:50,780 --> 00:11:01,850
way so a couple of other points if you

202
00:10:58,430 --> 00:11:05,660
start using the sift in a collaborative

203
00:11:01,850 --> 00:11:07,820
environment you run into issues around

204
00:11:05,660 --> 00:11:09,860
the fact that it actually uses Sam brand

205
00:11:07,820 --> 00:11:11,780
so users net bias to actually share the

206
00:11:09,860 --> 00:11:14,690
data has anyone used the SIF to actually

207
00:11:11,780 --> 00:11:15,270
you know use those shares the cases and

208
00:11:14,690 --> 00:11:18,690
mount share

209
00:11:15,270 --> 00:11:20,520
it you notice it's it's netbios right so

210
00:11:18,690 --> 00:11:22,140
that means obviously you've got to open

211
00:11:20,520 --> 00:11:24,780
up those ports on a firewall if you've

212
00:11:22,140 --> 00:11:27,630
got firewalls in between the cooperating

213
00:11:24,780 --> 00:11:29,850
ones I've got all the finer detail in

214
00:11:27,630 --> 00:11:31,350
the notes here but basically you've got

215
00:11:29,850 --> 00:11:33,480
all your netbios sports to worry about

216
00:11:31,350 --> 00:11:36,420
you potentially got netting to worry

217
00:11:33,480 --> 00:11:41,090
about the other interesting point is

218
00:11:36,420 --> 00:11:44,579
that because FMB uses name broadcasts

219
00:11:41,090 --> 00:11:46,950
what you actually get is if you name

220
00:11:44,580 --> 00:11:50,040
your workstations sift workstation one

221
00:11:46,950 --> 00:11:52,020
sift workstation to those names are

222
00:11:50,040 --> 00:11:54,120
actually too long for netbios they're

223
00:11:52,020 --> 00:11:57,150
the same name so you actually run into

224
00:11:54,120 --> 00:11:58,830
problems so you know short version don't

225
00:11:57,150 --> 00:12:00,990
name your workstation sip workstation

226
00:11:58,830 --> 00:12:05,760
once a four-week station to it will end

227
00:12:00,990 --> 00:12:07,980
badly for you okay so putting the pieces

228
00:12:05,760 --> 00:12:10,350
together we start off with the syph

229
00:12:07,980 --> 00:12:12,560
workstation in the elk stack and then

230
00:12:10,350 --> 00:12:15,030
adding everything is simply a case of

231
00:12:12,560 --> 00:12:17,430
cloning the github repository for the

232
00:12:15,030 --> 00:12:19,620
project so the URLs up on the slide

233
00:12:17,430 --> 00:12:22,890
there and then running the bundled

234
00:12:19,620 --> 00:12:25,230
installer script right it takes about 15

235
00:12:22,890 --> 00:12:28,980
minutes which you know let's face it

236
00:12:25,230 --> 00:12:30,570
that's not too bad and you have to hit

237
00:12:28,980 --> 00:12:32,930
the enter key on a couple of occasions

238
00:12:30,570 --> 00:12:36,390
when it prompts you for a default and

239
00:12:32,930 --> 00:12:38,959
also tell the Installer where to find

240
00:12:36,390 --> 00:12:46,439
elk because that goes into the

241
00:12:38,960 --> 00:12:51,270
configuration database it just moved in

242
00:12:46,440 --> 00:12:52,860
has it I wasn't by default still they

243
00:12:51,270 --> 00:12:55,670
were working on adding it like it was

244
00:12:52,860 --> 00:12:55,670
coming

245
00:13:00,490 --> 00:13:06,350
okay um you know if it's got I know it

246
00:13:04,160 --> 00:13:09,890
was coming I didn't know it like in

247
00:13:06,350 --> 00:13:16,730
version 3 the the downloadable vm it

248
00:13:09,890 --> 00:13:18,170
wasn't there but if it is cool yeah if

249
00:13:16,730 --> 00:13:20,750
you used if certainly if you use the

250
00:13:18,170 --> 00:13:22,430
bootstrap script and you were using a

251
00:13:20,750 --> 00:13:24,320
recent version chances are it's there

252
00:13:22,430 --> 00:13:28,609
because i know rob was actually saying

253
00:13:24,320 --> 00:13:30,110
yeah we should add elk into the sift you

254
00:13:28,610 --> 00:13:32,570
know it's that trade-off between you

255
00:13:30,110 --> 00:13:41,480
have a heavier sift but everything's in

256
00:13:32,570 --> 00:13:42,530
one place so yeah oh thanks to that I'll

257
00:13:41,480 --> 00:13:43,790
actually have to have a look at that

258
00:13:42,530 --> 00:13:47,180
because I didn't think it had come down

259
00:13:43,790 --> 00:13:50,660
the pipe yet so the script we ran

260
00:13:47,180 --> 00:13:53,060
installed more network shares right so

261
00:13:50,660 --> 00:13:56,770
that you can actually start breaking up

262
00:13:53,060 --> 00:13:59,630
who gets to see what who works with what

263
00:13:56,770 --> 00:14:01,250
it installed jenkins and it installed a

264
00:13:59,630 --> 00:14:04,250
library of jobs for the evidence

265
00:14:01,250 --> 00:14:06,590
processing and it installed forensic at

266
00:14:04,250 --> 00:14:13,300
f8 which is the abstraction layer on top

267
00:14:06,590 --> 00:14:13,300
of jenkins so

268
00:14:15,420 --> 00:14:20,569
yeah anyone who tells you a problem

269
00:14:17,430 --> 00:14:23,430
shared is a problem halved has a problem

270
00:14:20,570 --> 00:14:27,390
in addition to the standard sip shares

271
00:14:23,430 --> 00:14:32,130
we add / reverse / io / whitelist /

272
00:14:27,390 --> 00:14:33,480
blacklist and / artifacts so / reverse

273
00:14:32,130 --> 00:14:35,730
is where we dump stuff for malware

274
00:14:33,480 --> 00:14:39,690
analysis so that the reverse engineers

275
00:14:35,730 --> 00:14:42,720
can easily access them I orc as we

276
00:14:39,690 --> 00:14:46,380
uncover new evidence we might want to

277
00:14:42,720 --> 00:14:47,940
generate indicators of compromise so for

278
00:14:46,380 --> 00:14:50,310
example if we've got other colleagues

279
00:14:47,940 --> 00:14:52,440
who are using many and red line for

280
00:14:50,310 --> 00:14:54,750
example or anything else that actually

281
00:14:52,440 --> 00:14:56,910
is willing to consume arms you can

282
00:14:54,750 --> 00:15:01,110
actually have those available for them

283
00:14:56,910 --> 00:15:07,050
to use / whitelist is where we place any

284
00:15:01,110 --> 00:15:09,780
known good hashes so for example if

285
00:15:07,050 --> 00:15:13,800
we've got the NS RL and we're using that

286
00:15:09,780 --> 00:15:18,030
speed up processing that's where we'd

287
00:15:13,800 --> 00:15:21,260
put that blacklist conversely is a known

288
00:15:18,030 --> 00:15:24,120
bad hashes and artifacts is where the

289
00:15:21,260 --> 00:15:28,020
processed output of the case actually

290
00:15:24,120 --> 00:15:31,680
goes I one other point about the the

291
00:15:28,020 --> 00:15:34,829
known good hashes is and again I've got

292
00:15:31,680 --> 00:15:37,520
a URL in the notes for you but if you've

293
00:15:34,830 --> 00:15:42,180
seen the sniper forensics tool kit

294
00:15:37,520 --> 00:15:45,210
approach to managing your in-house hash

295
00:15:42,180 --> 00:15:55,620
whitelists that can also go there as

296
00:15:45,210 --> 00:15:57,240
well so we've installed the Jenkins

297
00:15:55,620 --> 00:15:58,620
server but in addition to that we've

298
00:15:57,240 --> 00:16:02,280
installed some plugins that let us

299
00:15:58,620 --> 00:16:04,860
actually build job sequences and let us

300
00:16:02,280 --> 00:16:07,339
actually have dependencies between those

301
00:16:04,860 --> 00:16:10,410
without hard coding things into the jobs

302
00:16:07,340 --> 00:16:11,610
so for anyone who's actually the three

303
00:16:10,410 --> 00:16:14,370
or four of you they've actually used

304
00:16:11,610 --> 00:16:16,170
Jenkins we're using parameterised

305
00:16:14,370 --> 00:16:20,640
trigger and we're using conditional

306
00:16:16,170 --> 00:16:23,550
build step and its dependencies let's go

307
00:16:20,640 --> 00:16:25,290
back and then what we do is the the

308
00:16:23,550 --> 00:16:27,089
Jenkins jobs are essentially split into

309
00:16:25,290 --> 00:16:30,560
four categories there's the file system

310
00:16:27,090 --> 00:16:36,690
analysis tasks the memory analysis tasks

311
00:16:30,560 --> 00:16:39,119
find evidence and the helper tasks now

312
00:16:36,690 --> 00:16:43,260
the important point about this is it's

313
00:16:39,120 --> 00:16:45,540
an extensible process it's it's not

314
00:16:43,260 --> 00:16:47,460
these other Jenkins jobs you get don't

315
00:16:45,540 --> 00:16:50,430
touch them or your break stuff no no if

316
00:16:47,460 --> 00:16:55,290
you've got tools and processes that are

317
00:16:50,430 --> 00:16:59,880
you know in-house IP or classified or

318
00:16:55,290 --> 00:17:02,189
whatever right automate yourself not a

319
00:16:59,880 --> 00:17:04,200
problem if on the other hand you do want

320
00:17:02,190 --> 00:17:05,820
your tools and/or processes in the

321
00:17:04,200 --> 00:17:08,550
public domain you know if it's stuff you

322
00:17:05,819 --> 00:17:10,649
can and want to share then you can

323
00:17:08,550 --> 00:17:13,530
either add it yourself and request a

324
00:17:10,650 --> 00:17:15,990
github pull or you can just ping me

325
00:17:13,530 --> 00:17:19,589
either on Twitter or you know however

326
00:17:15,990 --> 00:17:23,120
and I'll add them right we'll talk about

327
00:17:19,589 --> 00:17:26,510
later on requesting enhancements and and

328
00:17:23,119 --> 00:17:26,510
reporting issues

329
00:17:29,700 --> 00:17:35,190
okay this is where I regret the fact

330
00:17:33,269 --> 00:17:40,320
that I didn't get a chance to see these

331
00:17:35,190 --> 00:17:42,389
screen shots before we had the top those

332
00:17:40,320 --> 00:17:44,070
who are you you know down towards the

333
00:17:42,389 --> 00:17:47,219
front congratulations those of you down

334
00:17:44,070 --> 00:17:48,360
towards the back commiserations but

335
00:17:47,220 --> 00:17:55,740
basically I'm going to go through stuff

336
00:17:48,360 --> 00:17:57,899
anyway okay so the not a point the fire

337
00:17:55,740 --> 00:18:01,919
category with the S that's the status

338
00:17:57,899 --> 00:18:04,229
category it tells you the last state of

339
00:18:01,919 --> 00:18:07,139
that job in other words the last time

340
00:18:04,230 --> 00:18:09,990
that job ran was it successful or did it

341
00:18:07,139 --> 00:18:11,519
fail read obviously is failure blue for

342
00:18:09,990 --> 00:18:14,820
whatever reason hey maybe it's just

343
00:18:11,519 --> 00:18:20,399
because hey that's cool is the job

344
00:18:14,820 --> 00:18:23,279
succeeded so the next category or the

345
00:18:20,399 --> 00:18:25,049
next column is there whether column what

346
00:18:23,279 --> 00:18:28,500
that actually gives you is a visual

347
00:18:25,049 --> 00:18:33,870
indicator of how many of the last five

348
00:18:28,500 --> 00:18:37,799
runs of that job failed right so you can

349
00:18:33,870 --> 00:18:39,600
see for example carving I usually when

350
00:18:37,799 --> 00:18:44,809
I'm kicking it off by hand I forget to

351
00:18:39,600 --> 00:18:44,809
clean up my mess so the job fails right

352
00:18:49,920 --> 00:18:55,500
what else do I want to say about that ah

353
00:18:51,630 --> 00:19:00,990
and then the the jobs there that we've

354
00:18:55,500 --> 00:19:03,210
got a bulk extractor disk carving FS

355
00:19:00,990 --> 00:19:07,110
timelines a file system timeline so the

356
00:19:03,210 --> 00:19:13,680
lightweight timeline sorter and super

357
00:19:07,110 --> 00:19:16,560
timeline so the bulk extractor disk

358
00:19:13,680 --> 00:19:19,740
simply you know runs bulk extractor with

359
00:19:16,560 --> 00:19:24,780
the provided key words list carving does

360
00:19:19,740 --> 00:19:26,700
the unallocated storage carving so runs

361
00:19:24,780 --> 00:19:29,610
block LS then determines the cluster

362
00:19:26,700 --> 00:19:32,010
size with FS stat and then runs foremost

363
00:19:29,610 --> 00:19:36,330
with those parameters to actually carve

364
00:19:32,010 --> 00:19:37,740
out your deleted files so even there

365
00:19:36,330 --> 00:19:39,210
you're starting to save a little bit of

366
00:19:37,740 --> 00:19:41,010
time and a little bit of thought and a

367
00:19:39,210 --> 00:19:42,570
little bit of having to you know look at

368
00:19:41,010 --> 00:19:46,320
the results of this and plug them in

369
00:19:42,570 --> 00:19:49,080
here and the FS timeline is the file

370
00:19:46,320 --> 00:19:51,510
system timeline with fls and mac time

371
00:19:49,080 --> 00:19:56,370
obviously and the super timeline

372
00:19:51,510 --> 00:19:59,250
actually uses plazo to generate the

373
00:19:56,370 --> 00:20:06,929
full-on timeline which then if we're

374
00:19:59,250 --> 00:20:10,110
doing the the wrapped up job that they

375
00:20:06,930 --> 00:20:12,390
find window is evidence job it actually

376
00:20:10,110 --> 00:20:13,889
ends up then being transferred into the

377
00:20:12,390 --> 00:20:17,690
elk distribution that we were talking

378
00:20:13,890 --> 00:20:19,950
about by default it creates the

379
00:20:17,690 --> 00:20:22,800
spreadsheet that if you've done you know

380
00:20:19,950 --> 00:20:24,720
508 you're familiar with anyway in the

381
00:20:22,800 --> 00:20:27,120
colorized timeline and Excel that you

382
00:20:24,720 --> 00:20:30,330
can actually look at so that's the basis

383
00:20:27,120 --> 00:20:31,979
for that over on the far right-hand side

384
00:20:30,330 --> 00:20:34,290
you see that weird little clock thing

385
00:20:31,980 --> 00:20:40,560
with an arrow that's scheduled this job

386
00:20:34,290 --> 00:20:46,950
now okay memory analysis tasks similarly

387
00:20:40,560 --> 00:20:50,940
there's bak extracted memory and we've

388
00:20:46,950 --> 00:20:53,280
got nine volatility tasks it's not as

389
00:20:50,940 --> 00:20:56,970
bad as it looks I mean actually this 10

390
00:20:53,280 --> 00:21:01,440
this is one overall volatility analysis

391
00:20:56,970 --> 00:21:03,779
task there's step 0 there actually does

392
00:21:01,440 --> 00:21:07,229
the if you don't provide

393
00:21:03,779 --> 00:21:10,139
the profile it'll actually run image

394
00:21:07,229 --> 00:21:14,820
info against the profile determine what

395
00:21:10,139 --> 00:21:16,529
the best guess is and then provide that

396
00:21:14,820 --> 00:21:21,570
to the further steps of the the

397
00:21:16,529 --> 00:21:24,149
volatility processing the the next six

398
00:21:21,570 --> 00:21:26,968
one two six or the standard you know six

399
00:21:24,149 --> 00:21:30,779
steps so you've got identifying Road

400
00:21:26,969 --> 00:21:33,330
processes you've got analyzing DLLs and

401
00:21:30,779 --> 00:21:36,719
and also handles you've got reviewing

402
00:21:33,330 --> 00:21:38,699
Network artifacts set for is looking for

403
00:21:36,719 --> 00:21:42,119
evidence of code injection Step five is

404
00:21:38,700 --> 00:21:44,999
checking for signs of a rootkit step six

405
00:21:42,119 --> 00:21:47,549
is dumping the suspicious processes and

406
00:21:44,999 --> 00:21:49,529
drivers now at this stage what it

407
00:21:47,549 --> 00:21:51,359
actually does is it simply dumps all

408
00:21:49,529 --> 00:21:53,129
processes and drivers and you know

409
00:21:51,359 --> 00:21:55,519
allows you to determine which ones

410
00:21:53,129 --> 00:21:58,498
you're interested in because it's

411
00:21:55,519 --> 00:22:01,940
because it's doing it automatically for

412
00:21:58,499 --> 00:22:04,169
you I thought it was probably better to

413
00:22:01,940 --> 00:22:05,609
dump them all and then allow you to use

414
00:22:04,169 --> 00:22:07,169
your judgment about which ones you're

415
00:22:05,609 --> 00:22:10,228
interested in based on the results of

416
00:22:07,169 --> 00:22:11,669
the other jobs then make an assertion

417
00:22:10,229 --> 00:22:13,799
that hey these are the ones you're

418
00:22:11,669 --> 00:22:18,450
interested in miss something important

419
00:22:13,799 --> 00:22:19,859
for you that's one of the the ones that

420
00:22:18,450 --> 00:22:21,359
there's actually going to be some

421
00:22:19,859 --> 00:22:23,639
further work in terms of actually doing

422
00:22:21,359 --> 00:22:25,978
more of this you know for you in terms

423
00:22:23,639 --> 00:22:29,039
of analyzing the results of the other

424
00:22:25,979 --> 00:22:31,919
jobs and so you know instead of you

425
00:22:29,039 --> 00:22:33,330
spitting out everything it spits out

426
00:22:31,919 --> 00:22:37,039
ones you're more likely to be interested

427
00:22:33,330 --> 00:22:37,039
in and flags the others

428
00:22:41,179 --> 00:22:46,890
yep they are um there's a couple of

429
00:22:45,000 --> 00:22:48,299
things one is each of them is actually

430
00:22:46,890 --> 00:22:49,860
documented in the speaking of like when

431
00:22:48,299 --> 00:22:52,350
they send out the presentation there are

432
00:22:49,860 --> 00:22:54,659
each documented there but also if you

433
00:22:52,350 --> 00:22:56,580
actually click on one of those the jobs

434
00:22:54,660 --> 00:22:58,620
actually have descriptions like it says

435
00:22:56,580 --> 00:23:00,389
a short you know this is what this one

436
00:22:58,620 --> 00:23:03,809
does and then the other thing is the

437
00:23:00,390 --> 00:23:05,880
volatility job there is actually if you

438
00:23:03,809 --> 00:23:08,160
want to do memory processing it will

439
00:23:05,880 --> 00:23:10,290
just run the jobs for you in order you

440
00:23:08,160 --> 00:23:12,419
know so if you want to just point it an

441
00:23:10,290 --> 00:23:16,049
image you pawn it an image it just runs

442
00:23:12,419 --> 00:23:17,910
the deal exactly if you just want to do

443
00:23:16,049 --> 00:23:20,910
if you just want to do one versus do the

444
00:23:17,910 --> 00:23:22,530
whole thing then yeah you you click on

445
00:23:20,910 --> 00:23:24,900
the individual jobs you can see the

446
00:23:22,530 --> 00:23:26,460
descriptions you can fire off individual

447
00:23:24,900 --> 00:23:29,730
jobs and that's where they are

448
00:23:26,460 --> 00:23:33,200
scheduling it's a button believe it or

449
00:23:29,730 --> 00:23:36,780
not it doesn't work for me but anyway

450
00:23:33,200 --> 00:23:40,410
and then step seven and eight two extra

451
00:23:36,780 --> 00:23:43,530
ones beyond the standard six step step 7

452
00:23:40,410 --> 00:23:48,630
is registry analysis basically does the

453
00:23:43,530 --> 00:23:51,059
the user assist and step 8 is actually

454
00:23:48,630 --> 00:23:53,610
memory time lining so that you can

455
00:23:51,059 --> 00:23:57,049
actually cross-reference the results of

456
00:23:53,610 --> 00:23:57,049
that with your super timeline

457
00:24:03,330 --> 00:24:08,500
then we've gotta find windows evidence

458
00:24:06,190 --> 00:24:12,850
job which essentially if you've given it

459
00:24:08,500 --> 00:24:14,980
a disk image it will run only the disk

460
00:24:12,850 --> 00:24:16,750
image processing tasks if you've given

461
00:24:14,980 --> 00:24:18,789
it a memory image it will run only the

462
00:24:16,750 --> 00:24:20,350
memory image processing tasks if you've

463
00:24:18,789 --> 00:24:24,669
given up both it's obviously going to do

464
00:24:20,350 --> 00:24:28,230
both so it's kind of the one-click do my

465
00:24:24,669 --> 00:24:31,809
processing for me the helper tasks are

466
00:24:28,230 --> 00:24:35,259
I'll can n srl basically it's about

467
00:24:31,809 --> 00:24:38,918
putting stuff where you want it the NSR

468
00:24:35,259 --> 00:24:42,309
l1 will also actually once you might

469
00:24:38,919 --> 00:24:44,620
once it unzips the NS RL zip for you

470
00:24:42,309 --> 00:24:48,690
it'll also go off and generate the

471
00:24:44,620 --> 00:24:53,399
indices that are used by hedge fund

472
00:24:48,690 --> 00:24:53,399
sorry by sorta the hedge fund indices

473
00:24:56,250 --> 00:25:04,210
okay and a fair few of you used elk for

474
00:25:01,450 --> 00:25:07,259
those of you who haven't this is what an

475
00:25:04,210 --> 00:25:14,710
elk visualization of the timeline

476
00:25:07,259 --> 00:25:17,799
drilled down to a particular time range

477
00:25:14,710 --> 00:25:21,159
and then searching for vibranium because

478
00:25:17,799 --> 00:25:23,408
I was doing it against the 508 images at

479
00:25:21,159 --> 00:25:26,909
the time and you can see you've got your

480
00:25:23,409 --> 00:25:30,720
hits that are in your histogram down

481
00:25:26,909 --> 00:25:33,970
down here this is source distribution

482
00:25:30,720 --> 00:25:37,029
right so you can see each type of event

483
00:25:33,970 --> 00:25:39,519
it's also as a table in the passes you

484
00:25:37,029 --> 00:25:41,529
can you can see the counts right and

485
00:25:39,519 --> 00:25:42,879
it's also the generated hosts and then

486
00:25:41,529 --> 00:25:46,629
underneath what you've got is you've got

487
00:25:42,879 --> 00:25:48,158
the individual events you know in a

488
00:25:46,629 --> 00:25:50,459
timeline and you can actually click on

489
00:25:48,159 --> 00:25:53,620
any of those events and it spits out the

490
00:25:50,460 --> 00:25:56,769
the whole details of the record you can

491
00:25:53,620 --> 00:26:01,678
have multiple records expanded at any

492
00:25:56,769 --> 00:26:01,679
one time and just close them up again

493
00:26:02,460 --> 00:26:12,639
okay so what we've done with Jenkins is

494
00:26:07,749 --> 00:26:16,539
we've actually we've automated that

495
00:26:12,639 --> 00:26:18,789
evidence processing step right but can

496
00:26:16,539 --> 00:26:21,220
we take that even further right because

497
00:26:18,789 --> 00:26:24,158
you've still got with the Jenkins setup

498
00:26:21,220 --> 00:26:26,789
you've still got jobs for specific

499
00:26:24,159 --> 00:26:29,109
things and if you're doing it that way

500
00:26:26,789 --> 00:26:31,330
you have to think about well what do I

501
00:26:29,109 --> 00:26:32,769
want to do now and i'll fire off that

502
00:26:31,330 --> 00:26:34,299
job and i'll give that job the

503
00:26:32,769 --> 00:26:40,119
parameters it needs to do what it needs

504
00:26:34,299 --> 00:26:42,759
to do right so the question I asked was

505
00:26:40,119 --> 00:26:45,939
could could a you know putative near

506
00:26:42,759 --> 00:26:47,230
fight DFR our engineer create new cases

507
00:26:45,940 --> 00:26:49,929
and then just hit the find evidence

508
00:26:47,230 --> 00:26:53,489
button better still could an examiner

509
00:26:49,929 --> 00:26:57,669
who's actually collected the evidence

510
00:26:53,489 --> 00:27:00,460
start the process of processing that

511
00:26:57,669 --> 00:27:07,899
evidence so the analyst can then come on

512
00:27:00,460 --> 00:27:12,029
to the case and start analyzing it short

513
00:27:07,899 --> 00:27:21,639
answer is yes this is the forensic ater

514
00:27:12,029 --> 00:27:25,289
fate GUI you'll notice that my day job

515
00:27:21,639 --> 00:27:25,289
is not user experience designer

516
00:27:30,460 --> 00:27:34,690
but on the plus side hey there's a find

517
00:27:32,890 --> 00:27:44,110
evidence button dropping the mic walking

518
00:27:34,690 --> 00:27:47,710
away so the one thing the one thing

519
00:27:44,110 --> 00:27:51,360
about this is actually starting to

520
00:27:47,710 --> 00:27:53,890
process a case is as simple as you

521
00:27:51,360 --> 00:27:55,810
create a casing into the details and

522
00:27:53,890 --> 00:27:58,060
then you really do click that find

523
00:27:55,810 --> 00:28:00,610
evidence button it'll run essentially at

524
00:27:58,060 --> 00:28:03,220
the moment it's limited to windows cases

525
00:28:00,610 --> 00:28:06,820
I've used the underlying Jenkins jobs

526
00:28:03,220 --> 00:28:08,980
for linux server investigations but I

527
00:28:06,820 --> 00:28:15,850
haven't put together their find Linux

528
00:28:08,980 --> 00:28:18,340
evidence that's coming quite soon when

529
00:28:15,850 --> 00:28:21,879
you click the Create a case button you

530
00:28:18,340 --> 00:28:26,730
can see required fields a case name at

531
00:28:21,880 --> 00:28:26,730
least one image file and a time zone

532
00:28:31,620 --> 00:28:38,289
okay next to two tabs are the indicators

533
00:28:36,519 --> 00:28:40,929
of compromise and reverse engineering

534
00:28:38,289 --> 00:28:43,929
tabs that the thing about these is that

535
00:28:40,929 --> 00:28:46,240
they're there for assisted views of the

536
00:28:43,929 --> 00:28:48,519
contents of those shares so for example

537
00:28:46,240 --> 00:28:49,870
you know if you're looking at artifacts

538
00:28:48,519 --> 00:28:51,880
and you've done the evidence processing

539
00:28:49,870 --> 00:28:53,860
you can browse around until you hit the

540
00:28:51,880 --> 00:28:55,330
sorter output and just dive into the you

541
00:28:53,860 --> 00:28:59,289
know file system tree and look at you

542
00:28:55,330 --> 00:29:02,379
know what's that right ah Alex aren't

543
00:28:59,289 --> 00:29:04,480
quite that useful because I don't know

544
00:29:02,380 --> 00:29:05,919
about you but the uuid of an arc doesn't

545
00:29:04,480 --> 00:29:08,529
tell me very much that's useful about

546
00:29:05,919 --> 00:29:15,100
the arm right what's the purpose of the

547
00:29:08,529 --> 00:29:17,590
aisle so the default view actually gives

548
00:29:15,100 --> 00:29:19,809
you the ayaat besides the hash and the

549
00:29:17,590 --> 00:29:23,080
short description if you mouse over

550
00:29:19,809 --> 00:29:25,330
because I extend to have quite worthy

551
00:29:23,080 --> 00:29:27,279
long descriptions if you mouse over a

552
00:29:25,330 --> 00:29:29,320
particular I'll it'll give you a tooltip

553
00:29:27,279 --> 00:29:33,149
with the long description but by default

554
00:29:29,320 --> 00:29:33,149
it simply shows the short description

555
00:29:37,150 --> 00:29:45,740
and then this is the contents of /

556
00:29:41,270 --> 00:29:48,830
reverse you'll notice that that far

557
00:29:45,740 --> 00:29:50,540
unlike the I ox for example which you

558
00:29:48,830 --> 00:29:54,110
know you can actually download the I ox

559
00:29:50,540 --> 00:29:56,899
through the forensic a defeat fight

560
00:29:54,110 --> 00:30:00,229
interface if you want to unlike that you

561
00:29:56,900 --> 00:30:02,200
can't click on the contents of / reverse

562
00:30:00,230 --> 00:30:05,440
and accidentally download something

563
00:30:02,200 --> 00:30:08,150
mistakes do tend to happen that way

564
00:30:05,440 --> 00:30:10,040
because usually what we actually are

565
00:30:08,150 --> 00:30:13,160
interested in is that hash you know if

566
00:30:10,040 --> 00:30:16,520
we want a query you know file advisor

567
00:30:13,160 --> 00:30:21,310
for example follow visor Tobit 9.com or

568
00:30:16,520 --> 00:30:23,600
virus total searching those by hash

569
00:30:21,310 --> 00:30:28,460
doesn't give away our knowledge of the

570
00:30:23,600 --> 00:30:34,330
attackers TTP's unlike uploading a

571
00:30:28,460 --> 00:30:38,390
discovered binary so you know before it

572
00:30:34,330 --> 00:30:41,360
does anyone not understand how uploading

573
00:30:38,390 --> 00:30:43,400
a discovered binary actually telegram

574
00:30:41,360 --> 00:30:45,260
like is there any one for whom that's

575
00:30:43,400 --> 00:30:47,090
news because I'm quite happy to say why

576
00:30:45,260 --> 00:30:48,560
that's you know a bad idea but if

577
00:30:47,090 --> 00:30:51,020
everybody in the room understands

578
00:30:48,560 --> 00:30:52,840
totally why that's a bad idea then you

579
00:30:51,020 --> 00:30:55,040
know I'm not going to belabor the point

580
00:30:52,840 --> 00:30:58,040
anyone not understand should I cover it

581
00:30:55,040 --> 00:31:03,320
anyway I'll cover it anyway I've got a

582
00:30:58,040 --> 00:31:07,040
hand okay so consider that if an attack

583
00:31:03,320 --> 00:31:09,159
is using an exploit to attack you that

584
00:31:07,040 --> 00:31:13,070
hasn't previously been seen in the wild

585
00:31:09,160 --> 00:31:16,220
all they need to do is pull virustotal

586
00:31:13,070 --> 00:31:19,129
for the hash as soon as you upload that

587
00:31:16,220 --> 00:31:22,970
binary to virustotal they're going to

588
00:31:19,130 --> 00:31:26,180
hit get a hit on that hash pole so they

589
00:31:22,970 --> 00:31:29,210
know that you found what they're using

590
00:31:26,180 --> 00:31:32,270
on your network if on the other hand

591
00:31:29,210 --> 00:31:39,440
you're simply uploading hashes they

592
00:31:32,270 --> 00:31:41,389
don't get that now that that leaves out

593
00:31:39,440 --> 00:31:43,280
one category of attacker obviously

594
00:31:41,390 --> 00:31:44,990
anybody who can see everything going

595
00:31:43,280 --> 00:31:46,700
across the network is going to see those

596
00:31:44,990 --> 00:31:48,590
hash queries against for us total anyway

597
00:31:46,700 --> 00:31:50,770
but but we don't know any attackers like

598
00:31:48,590 --> 00:31:50,770
that

599
00:31:57,200 --> 00:32:00,679
so right now what

600
00:32:12,020 --> 00:32:16,629
that's right that's a trade-off right

601
00:32:20,620 --> 00:32:26,199
yep yep and it it is a trade-off right

602
00:32:31,570 --> 00:32:40,820
yep totally agree and you know it comes

603
00:32:36,679 --> 00:32:44,179
down to I think at some point as post

604
00:32:40,820 --> 00:32:49,639
work you want to upload these things to

605
00:32:44,179 --> 00:32:52,940
virustotal yeah well once you've

606
00:32:49,639 --> 00:32:56,238
finished with the ramifications of the

607
00:32:52,940 --> 00:32:58,639
case upload it right because that way

608
00:32:56,239 --> 00:33:00,830
you're sharing virustotal is still

609
00:32:58,639 --> 00:33:02,238
useful for everyone and you're not

610
00:33:00,830 --> 00:33:03,949
telegraphing your knowledge of their

611
00:33:02,239 --> 00:33:10,639
TTP's while it could still make a

612
00:33:03,950 --> 00:33:12,499
difference yeah it's a great it's a

613
00:33:10,639 --> 00:33:15,439
great point it's a great point because

614
00:33:12,499 --> 00:33:27,259
otherwise essentially you make that

615
00:33:15,440 --> 00:33:28,999
resource useless shop yep and you know I

616
00:33:27,259 --> 00:33:32,509
guess one of the things that it comes

617
00:33:28,999 --> 00:33:35,899
down to is are you having serious

618
00:33:32,509 --> 00:33:37,369
problems with commodity malware you know

619
00:33:35,899 --> 00:33:38,899
maybe if you're having serious problems

620
00:33:37,369 --> 00:33:45,589
with commodity malware you've got some

621
00:33:38,899 --> 00:33:48,949
other work to do true true hey and and

622
00:33:45,589 --> 00:33:51,739
as the intro side slide said you know I

623
00:33:48,950 --> 00:33:53,599
work for Cisco now and they do a lot

624
00:33:51,739 --> 00:33:55,249
with uploading the malware and

625
00:33:53,599 --> 00:34:00,559
processing that in the cloud and having

626
00:33:55,249 --> 00:34:02,269
the hashes and you know okay so how did

627
00:34:00,559 --> 00:34:05,809
the binary get in the irish air was

628
00:34:02,269 --> 00:34:07,190
quite a reasonable question short answer

629
00:34:05,809 --> 00:34:08,809
was I put it there slightly longer

630
00:34:07,190 --> 00:34:10,250
answer was I put it there after seeing

631
00:34:08,809 --> 00:34:13,399
it was interesting based on the results

632
00:34:10,250 --> 00:34:15,559
of some of the jobs run right so some of

633
00:34:13,399 --> 00:34:18,980
the volatility processing indicated that

634
00:34:15,559 --> 00:34:21,700
that binary was interesting so I moved

635
00:34:18,980 --> 00:34:23,809
it into the reverse year so that the

636
00:34:21,699 --> 00:34:25,460
malware analyst could actually have a

637
00:34:23,809 --> 00:34:28,359
look and actually reverse-engineer it

638
00:34:25,460 --> 00:34:28,359
and so on and so forth

639
00:34:33,300 --> 00:34:41,020
it was actually interesting from memory

640
00:34:36,630 --> 00:34:44,020
but I got the image from disk and move

641
00:34:41,020 --> 00:34:47,679
the file into that chair you can you the

642
00:34:44,020 --> 00:34:49,780
volatility jobs also do dump the process

643
00:34:47,679 --> 00:34:52,239
maps so essentially you have stuff

644
00:34:49,780 --> 00:34:54,580
that's still worth actually processing

645
00:34:52,239 --> 00:34:59,740
you know with a scanner for example or

646
00:34:54,580 --> 00:35:02,410
doing binary analysis on so one of the

647
00:34:59,740 --> 00:35:04,990
next steps in the further automation

648
00:35:02,410 --> 00:35:07,980
phase is we're actually going to look at

649
00:35:04,990 --> 00:35:10,419
attempting to pre classify binaries or

650
00:35:07,980 --> 00:35:16,000
you know document types that might as

651
00:35:10,420 --> 00:35:18,730
well be binaries as interesting I ox

652
00:35:16,000 --> 00:35:21,670
scanning is actually coming in the

653
00:35:18,730 --> 00:35:24,100
release that I was hoping to have done

654
00:35:21,670 --> 00:35:27,220
today but it'll come up sometime this

655
00:35:24,100 --> 00:35:30,009
week on github show of hands who's

656
00:35:27,220 --> 00:35:34,600
familiar with I ox can open I ox can

657
00:35:30,010 --> 00:35:35,950
sorry yeah so a few people open I ox can

658
00:35:34,600 --> 00:35:39,420
is actually a really interesting

659
00:35:35,950 --> 00:35:43,779
volatility plugin it was done for I

660
00:35:39,420 --> 00:35:46,810
think it was the 2013 volatility plug-in

661
00:35:43,780 --> 00:35:48,820
calm I was one of the winners of that it

662
00:35:46,810 --> 00:35:52,210
you know essentially as it says it

663
00:35:48,820 --> 00:35:56,590
basically runs a series of arcs that you

664
00:35:52,210 --> 00:35:59,310
provide against your memory images so

665
00:35:56,590 --> 00:36:02,230
that you know you can flag in a hit so

666
00:35:59,310 --> 00:36:05,350
the other thing that's also coming but a

667
00:36:02,230 --> 00:36:08,110
bit further down the track is I'll

668
00:36:05,350 --> 00:36:12,520
scanning for plazo against the discs

669
00:36:08,110 --> 00:36:18,280
right that's going to take a little bit

670
00:36:12,520 --> 00:36:21,190
longer because unlike where the open

671
00:36:18,280 --> 00:36:23,110
high arc scan volatility plugin already

672
00:36:21,190 --> 00:36:26,800
existed in simply a case of doing the

673
00:36:23,110 --> 00:36:32,440
integration work there is no plazo

674
00:36:26,800 --> 00:36:36,280
support for I ox and the developers seem

675
00:36:32,440 --> 00:36:39,640
to want to roll their own I kind of rank

676
00:36:36,280 --> 00:36:42,220
that somewhere between never get

677
00:36:39,640 --> 00:36:43,960
involved in a land war in Asia and never

678
00:36:42,220 --> 00:36:46,060
go in against a sicilian when death is

679
00:36:43,960 --> 00:36:46,630
on the line you know so somewhere in the

680
00:36:46,060 --> 00:36:48,788
middle there

681
00:36:46,630 --> 00:36:50,500
is roll your own support for something

682
00:36:48,789 --> 00:36:52,799
that's like I arcs but don't support I

683
00:36:50,500 --> 00:36:52,799
Alex

684
00:37:00,419 --> 00:37:05,049
you can do either what the what the fine

685
00:37:03,459 --> 00:37:07,328
windows evidence job does is it actually

686
00:37:05,049 --> 00:37:09,009
if you've only got a memory image it

687
00:37:07,329 --> 00:37:11,769
will only run the memory image

688
00:37:09,009 --> 00:37:13,659
processing if you've only got a disk

689
00:37:11,769 --> 00:37:15,729
image it will only run the disk image

690
00:37:13,659 --> 00:37:17,859
processing you know and sometimes that

691
00:37:15,729 --> 00:37:22,209
happens let's face it if you are for

692
00:37:17,859 --> 00:37:24,578
example had a vm running in amazon and

693
00:37:22,209 --> 00:37:27,788
you have reason to suspect that that's

694
00:37:24,579 --> 00:37:29,439
being compromised right you may only

695
00:37:27,789 --> 00:37:38,650
have the disk image available you may

696
00:37:29,439 --> 00:37:41,078
not have a memory image okay so I

697
00:37:38,650 --> 00:37:43,209
already Telegraph this coming for the

698
00:37:41,079 --> 00:37:46,659
summit release this week is the open

699
00:37:43,209 --> 00:37:48,129
arts can support there's also dfi are in

700
00:37:46,659 --> 00:37:54,609
the cloud now what I'm not talking about

701
00:37:48,130 --> 00:37:56,409
is performing dfi are on your AWS images

702
00:37:54,609 --> 00:38:04,679
what I'm talking about is the ability to

703
00:37:56,409 --> 00:38:04,679
perform dfi hour in a VPC running on AWS

704
00:38:05,279 --> 00:38:13,179
the the interesting thing about that is

705
00:38:11,140 --> 00:38:17,109
that what actually happens is that your

706
00:38:13,179 --> 00:38:19,869
initial setup actually runs a Jenkins

707
00:38:17,109 --> 00:38:21,130
job that then creates the VPC you know

708
00:38:19,869 --> 00:38:25,689
you have to give it the appropriate

709
00:38:21,130 --> 00:38:28,959
privileges it creates the VPC and then

710
00:38:25,689 --> 00:38:31,359
actually spins up inside that VPC a

711
00:38:28,959 --> 00:38:33,249
Jenkins server which in turn has the

712
00:38:31,359 --> 00:38:35,949
same job that could potentially create a

713
00:38:33,249 --> 00:38:41,408
VP anyway that's why I called it the

714
00:38:35,949 --> 00:38:44,319
inception Jenkins job after that we've

715
00:38:41,409 --> 00:38:46,150
got more automation like actually

716
00:38:44,319 --> 00:38:50,650
empowering you further in terms of the

717
00:38:46,150 --> 00:38:54,489
evidence processing colorization your

718
00:38:50,650 --> 00:38:59,199
the packets never lie and

719
00:38:54,489 --> 00:39:00,669
compartmentalization so automation of

720
00:38:59,199 --> 00:39:02,949
the investigation beyond the evidence

721
00:39:00,669 --> 00:39:05,049
processing phase so one of the things

722
00:39:02,949 --> 00:39:08,140
that I'm looking at is that an analyst

723
00:39:05,049 --> 00:39:11,349
can say this is interesting create me an

724
00:39:08,140 --> 00:39:12,400
I Ark you know for whatever values of

725
00:39:11,349 --> 00:39:14,410
interesting and

726
00:39:12,400 --> 00:39:19,270
ever you think the key indicators are

727
00:39:14,410 --> 00:39:25,480
and it'll actually use the Python who's

728
00:39:19,270 --> 00:39:30,009
familiar with pie Aoki yep so basically

729
00:39:25,480 --> 00:39:33,369
there's full class open I arc 1.1

730
00:39:30,010 --> 00:39:37,950
support for I arcs available in Python

731
00:39:33,369 --> 00:39:37,950
in an open source project kind of handy

732
00:39:38,640 --> 00:39:43,839
so obviously Mac forensics Linux

733
00:39:41,829 --> 00:39:46,569
forensics the Linux one is actually a

734
00:39:43,839 --> 00:39:48,520
lot closer at the moment because most of

735
00:39:46,569 --> 00:39:51,099
the jobs currently just due to the

736
00:39:48,520 --> 00:39:53,619
nature of the tools in the sift already

737
00:39:51,099 --> 00:39:55,510
fully support you know linux file

738
00:39:53,619 --> 00:39:57,940
systems Linux memory images their

739
00:39:55,510 --> 00:40:00,670
first-class citizens so that's just a

740
00:39:57,940 --> 00:40:04,059
question of you know when do I do it

741
00:40:00,670 --> 00:40:05,980
I'll probably try and get that one out

742
00:40:04,059 --> 00:40:13,569
with this week's release with the summit

743
00:40:05,980 --> 00:40:14,829
release network forensics one find

744
00:40:13,569 --> 00:40:17,558
evidence to rule them all because

745
00:40:14,829 --> 00:40:19,420
obviously once we start actually having

746
00:40:17,559 --> 00:40:21,760
different jobs then you know you still

747
00:40:19,420 --> 00:40:24,880
have to select which job well why you

748
00:40:21,760 --> 00:40:26,470
know the the system is quite capable of

749
00:40:24,880 --> 00:40:28,779
looking at the memory image and going

750
00:40:26,470 --> 00:40:30,700
you know what it's a Linux memory image

751
00:40:28,779 --> 00:40:35,859
you know what we're going to do the

752
00:40:30,700 --> 00:40:39,609
Linux processing against it the caveat

753
00:40:35,859 --> 00:40:43,450
there is that things can look similar

754
00:40:39,609 --> 00:40:47,410
like for example if you've got smartos

755
00:40:43,450 --> 00:40:49,379
just anybody smart OS basically a

756
00:40:47,410 --> 00:40:52,299
solaris derivative but it's got a linux

757
00:40:49,380 --> 00:40:56,289
binary call interface it's the it's the

758
00:40:52,299 --> 00:41:01,359
guys from giant really Chloe guys like

759
00:40:56,289 --> 00:41:03,970
Brian control so basically what it comes

760
00:41:01,359 --> 00:41:06,730
down to is just making sure that you

761
00:41:03,970 --> 00:41:10,029
know it's not fooled by what appears to

762
00:41:06,730 --> 00:41:12,730
be Linux structures but was in reality a

763
00:41:10,029 --> 00:41:17,230
Linux container running under smart OS

764
00:41:12,730 --> 00:41:21,640
and binary analysis including AV

765
00:41:17,230 --> 00:41:22,990
scanning I mean you know it's one of

766
00:41:21,640 --> 00:41:24,520
those things right if you're being

767
00:41:22,990 --> 00:41:25,990
attacked with anything interesting ov

768
00:41:24,520 --> 00:41:26,710
scanning some kind of do anything for

769
00:41:25,990 --> 00:41:28,479
you

770
00:41:26,710 --> 00:41:30,520
on the other hand not everything is

771
00:41:28,480 --> 00:41:38,050
interesting you know we still need to do

772
00:41:30,520 --> 00:41:40,839
the work the colors simply the case of

773
00:41:38,050 --> 00:41:43,140
as you saw when we had the elk sorry

774
00:41:40,839 --> 00:41:43,140
David

775
00:41:53,810 --> 00:42:00,540
really easy are basically the the bits

776
00:41:58,440 --> 00:42:03,170
and pieces that actually run the tools

777
00:42:00,540 --> 00:42:06,390
are a essentially shell scripts

778
00:42:03,170 --> 00:42:08,580
inside of this Jenkins wrapper that

779
00:42:06,390 --> 00:42:10,230
takes care of the environment variables

780
00:42:08,580 --> 00:42:13,799
that they get and that sort of thing all

781
00:42:10,230 --> 00:42:17,120
Jenkins is really doing is sharing the

782
00:42:13,800 --> 00:42:29,460
status information and allowing you to

783
00:42:17,120 --> 00:42:36,990
orchestrate the tasks right yep and you

784
00:42:29,460 --> 00:42:40,620
know that's it one point I made here is

785
00:42:36,990 --> 00:42:43,129
I really got like compared to excel it's

786
00:42:40,620 --> 00:42:47,630
a no-brainer right elk is a far superior

787
00:42:43,130 --> 00:42:50,250
method of storing large volumes of data

788
00:42:47,630 --> 00:42:54,510
right but at the same time if you've

789
00:42:50,250 --> 00:42:57,540
used the super timeline you know human

790
00:42:54,510 --> 00:43:00,120
beings process color really well right

791
00:42:57,540 --> 00:43:02,400
both as predator renders pray the

792
00:43:00,120 --> 00:43:03,900
ability to process color is handy so we

793
00:43:02,400 --> 00:43:06,180
process color really well so the

794
00:43:03,900 --> 00:43:07,920
colorized view of the timeline I think

795
00:43:06,180 --> 00:43:11,370
is actually superior to what we get by

796
00:43:07,920 --> 00:43:12,600
default in the Cabana desh so I'm

797
00:43:11,370 --> 00:43:14,730
actually clear that that's something

798
00:43:12,600 --> 00:43:16,500
that is going to be added the other

799
00:43:14,730 --> 00:43:18,270
thing that I'm also going to support

800
00:43:16,500 --> 00:43:23,400
which I didn't actually have up on here

801
00:43:18,270 --> 00:43:27,390
is the has anyone use time sketch David

802
00:43:23,400 --> 00:43:29,190
and a couple of others yep so time

803
00:43:27,390 --> 00:43:31,710
sketch is awesome but they have a

804
00:43:29,190 --> 00:43:34,560
totally different approach to colorizing

805
00:43:31,710 --> 00:43:37,980
like their approaches you can look at a

806
00:43:34,560 --> 00:43:40,320
multi host timeline so they use color

807
00:43:37,980 --> 00:43:43,320
for indicating which hosts you're

808
00:43:40,320 --> 00:43:45,210
talking about doesn't play really well

809
00:43:43,320 --> 00:43:49,590
with Rob's approach to colorizing the

810
00:43:45,210 --> 00:43:54,510
timeline so we're in discussions about

811
00:43:49,590 --> 00:43:56,600
that and it I've got to come up with you

812
00:43:54,510 --> 00:44:00,360
know what seems like an effective

813
00:43:56,600 --> 00:44:04,020
approach but if I do is quite willing to

814
00:44:00,360 --> 00:44:07,800
implement that so that's clinical

815
00:44:04,020 --> 00:44:09,420
I talked about that packets one thing I

816
00:44:07,800 --> 00:44:13,440
didn't mention there is one of the

817
00:44:09,420 --> 00:44:17,910
things that I'm looking at is taking the

818
00:44:13,440 --> 00:44:20,190
IDS alerts putting those in elk and

819
00:44:17,910 --> 00:44:22,290
being able to use those if nothing else

820
00:44:20,190 --> 00:44:25,950
being able to use those as pivot points

821
00:44:22,290 --> 00:44:27,509
so you can see interesting points at

822
00:44:25,950 --> 00:44:34,919
which it's time to hone in on the

823
00:44:27,510 --> 00:44:38,220
timeline compartmentalization so like

824
00:44:34,920 --> 00:44:40,470
the sift the you know what I've gone and

825
00:44:38,220 --> 00:44:43,410
produced make certain assumptions about

826
00:44:40,470 --> 00:44:45,120
the environment and about who you can

827
00:44:43,410 --> 00:44:47,790
trust in the environment and the degree

828
00:44:45,120 --> 00:44:51,359
to which you can trust them you know as

829
00:44:47,790 --> 00:44:55,440
as we allow four teams of collaborating

830
00:44:51,360 --> 00:44:59,370
experts those assumptions don't hold or

831
00:44:55,440 --> 00:45:01,110
don't always hold right as I've said on

832
00:44:59,370 --> 00:45:02,759
the slide and expert consultant for

833
00:45:01,110 --> 00:45:03,930
their expertise on one case may not have

834
00:45:02,760 --> 00:45:06,240
clearance to view and other cases

835
00:45:03,930 --> 00:45:07,410
details and likewise an expert

836
00:45:06,240 --> 00:45:09,359
consultant for their particular

837
00:45:07,410 --> 00:45:11,190
expertise may not have the clearance to

838
00:45:09,360 --> 00:45:17,490
view all the details even of the case

839
00:45:11,190 --> 00:45:20,310
for which they're consulted so

840
00:45:17,490 --> 00:45:23,729
requesting features and reporting bugs

841
00:45:20,310 --> 00:45:26,910
there are no facts no max there are lots

842
00:45:23,730 --> 00:45:29,330
of blacks what I'm trying to do with the

843
00:45:26,910 --> 00:45:33,060
issues page is I'm actually tracking

844
00:45:29,330 --> 00:45:36,319
issues even in the upstream projects so

845
00:45:33,060 --> 00:45:39,960
that it doesn't get lost so for example

846
00:45:36,320 --> 00:45:42,300
anybody run into the x4 file system loop

847
00:45:39,960 --> 00:45:49,800
issue with plazo at all anybody do any

848
00:45:42,300 --> 00:45:52,560
Linux processing no you're so lucky so

849
00:45:49,800 --> 00:45:56,190
yeah the issues page on github is where

850
00:45:52,560 --> 00:45:57,900
that's at you can tweet at me to tell me

851
00:45:56,190 --> 00:45:59,670
about stuff i don't i don't mind getting

852
00:45:57,900 --> 00:46:02,340
tweets to say hey there's a bug in blah

853
00:45:59,670 --> 00:46:05,160
blah blah cool I'll just you know enter

854
00:46:02,340 --> 00:46:07,410
the issue for you or you can tweet it

855
00:46:05,160 --> 00:46:09,000
the project I set up for the dfi our

856
00:46:07,410 --> 00:46:14,160
summit I finally set up the projects

857
00:46:09,000 --> 00:46:21,450
Twitter account well

858
00:46:14,160 --> 00:46:21,450
no go away

859
00:46:25,180 --> 00:46:28,828
now I have to work out how to select

860
00:46:36,150 --> 00:46:41,619
that actually used me and that's the

861
00:46:38,830 --> 00:46:46,840
typo and that's kind of silly thanks for

862
00:46:41,619 --> 00:46:49,270
that yeah I think there's a 3 in there

863
00:46:46,840 --> 00:46:51,220
that's the wrong I can't believe I got

864
00:46:49,270 --> 00:46:57,520
my own twitter handle wrong how bad is

865
00:46:51,220 --> 00:47:00,450
that thanks for that David who can sit

866
00:46:57,520 --> 00:47:03,190
twitter handle wrong really ok so

867
00:47:00,450 --> 00:47:05,500
tracking progress likewise you can watch

868
00:47:03,190 --> 00:47:08,050
the project on github anybody who's used

869
00:47:05,500 --> 00:47:10,030
github before you know it's basically as

870
00:47:08,050 --> 00:47:12,550
simple as clicking on the little icon

871
00:47:10,030 --> 00:47:14,440
and you can watch the project and you'll

872
00:47:12,550 --> 00:47:17,320
get status updates when stuff gets

873
00:47:14,440 --> 00:47:20,440
checked in and that sort of thing it's

874
00:47:17,320 --> 00:47:21,790
probably not that effective because you

875
00:47:20,440 --> 00:47:24,550
know as it's an active development

876
00:47:21,790 --> 00:47:25,779
project and hopefully after today even

877
00:47:24,550 --> 00:47:29,080
more active because all of you are going

878
00:47:25,780 --> 00:47:30,730
to go yell I want to use this you

879
00:47:29,080 --> 00:47:33,279
probably don't want to know when we're

880
00:47:30,730 --> 00:47:36,310
refactoring stuff so I'd recommend

881
00:47:33,280 --> 00:47:41,859
actually following a project on Twitter

882
00:47:36,310 --> 00:47:47,020
with that actually correct handle or you

883
00:47:41,859 --> 00:47:48,520
can follow me this is this is going to

884
00:47:47,020 --> 00:47:50,530
be one of those rare occasions when

885
00:47:48,520 --> 00:47:52,390
somebody says I actually don't recommend

886
00:47:50,530 --> 00:47:54,430
following me because in addition to

887
00:47:52,390 --> 00:47:56,350
computer security I tend to retweet a

888
00:47:54,430 --> 00:47:58,839
lot of stuff on human rights and social

889
00:47:56,350 --> 00:48:00,819
justice issues and that sort of thing so

890
00:47:58,840 --> 00:48:03,100
unless you're really big on that sort of

891
00:48:00,820 --> 00:48:04,930
thing don't follow me follow the project

892
00:48:03,100 --> 00:48:06,490
if on the other hand you're really big

893
00:48:04,930 --> 00:48:12,100
on that sort of thing feel free to

894
00:48:06,490 --> 00:48:14,430
follow me and then just finally I wanted

895
00:48:12,100 --> 00:48:21,368
to acknowledge some people obviously

896
00:48:14,430 --> 00:48:23,680
robley 4508 was actually really fun but

897
00:48:21,369 --> 00:48:28,500
more importantly the sift workstation

898
00:48:23,680 --> 00:48:32,410
has actually been really useful right

899
00:48:28,500 --> 00:48:35,109
also over Carol and and Brett Padres

900
00:48:32,410 --> 00:48:37,080
they're the ones who you know forensic

901
00:48:35,109 --> 00:48:39,759
at a pro was an april fool's joke right

902
00:48:37,080 --> 00:48:46,259
but it's also given me a bar to try and

903
00:48:39,760 --> 00:48:49,960
clear with this project bianca from pwc

904
00:48:46,260 --> 00:48:52,000
did a lot of the over and

905
00:48:49,960 --> 00:48:55,180
over beta testing of the install scripts

906
00:48:52,000 --> 00:48:58,240
and the reading the white paper and all

907
00:48:55,180 --> 00:49:02,200
that sort of thing well I'm really

908
00:48:58,240 --> 00:49:05,049
losing with the projector today it's a

909
00:49:02,200 --> 00:49:06,160
whim ah just as well I'd finish the

910
00:49:05,050 --> 00:49:07,450
slides have had done that during the

911
00:49:06,160 --> 00:49:12,490
presentation that would have gotten ugly

912
00:49:07,450 --> 00:49:15,750
and Chris Walker was actually the

913
00:49:12,490 --> 00:49:18,549
reviewer for the GCF a paper on that and

914
00:49:15,750 --> 00:49:19,990
the great thing about Chris was without

915
00:49:18,550 --> 00:49:21,910
him the project would have existed

916
00:49:19,990 --> 00:49:25,540
anyway but it wouldn't have been as well

917
00:49:21,910 --> 00:49:27,160
documented and then you guys because hey

918
00:49:25,540 --> 00:49:31,080
you could have been it one of two talks

919
00:49:27,160 --> 00:49:33,700
and sarah edwards talk look pretty good

920
00:49:31,080 --> 00:49:38,848
so thanks that's it anybody any more

921
00:49:33,700 --> 00:49:38,848
questions anything yep

922
00:49:44,210 --> 00:49:49,910
um mainly at the moment it's the palazzo

923
00:49:47,510 --> 00:49:52,880
data I'm actually looking at what makes

924
00:49:49,910 --> 00:49:56,720
sense to dump into ELQ there's there's

925
00:49:52,880 --> 00:49:58,160
kind of two things right one is the more

926
00:49:56,720 --> 00:50:00,080
we push in to help the more useful

927
00:49:58,160 --> 00:50:01,490
queries you can do against it so from

928
00:50:00,080 --> 00:50:03,560
that point of view I'm kind of going

929
00:50:01,490 --> 00:50:05,689
well really I should probably dump

930
00:50:03,560 --> 00:50:10,270
pretty much everything it up the other

931
00:50:05,690 --> 00:50:15,200
one is stuff that's kind of metadata a

932
00:50:10,270 --> 00:50:17,359
right on the one hand you could make an

933
00:50:15,200 --> 00:50:21,040
argument for it doesn't actually need to

934
00:50:17,359 --> 00:50:26,540
go into ELQ as long as it's available

935
00:50:21,040 --> 00:50:29,930
and queryable and like usable so that's

936
00:50:26,540 --> 00:50:31,820
kind of the I'm open to you know if

937
00:50:29,930 --> 00:50:33,379
people are using it and go how to be

938
00:50:31,820 --> 00:50:35,690
really useful if this data was an elk

939
00:50:33,380 --> 00:50:39,619
sure I'll shove it in ovens not hard to

940
00:50:35,690 --> 00:50:42,070
get data into there so that's kind of

941
00:50:39,619 --> 00:50:42,070
where that's at

942
00:50:45,550 --> 00:50:52,690
ah yeah it'll be in the presentation

943
00:50:49,420 --> 00:50:59,250
that they're mailing out but let me just

944
00:50:52,690 --> 00:50:59,250
skip through there we go

945
00:51:06,609 --> 00:51:13,230
any more questions I think we're good

946
00:51:10,230 --> 00:51:13,230
thanks

