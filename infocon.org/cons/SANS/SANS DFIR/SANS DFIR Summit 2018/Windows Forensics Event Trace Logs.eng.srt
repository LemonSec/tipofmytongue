1
00:00:10,744 --> 00:00:12,946
(audience applause)

2
00:00:12,946 --> 00:00:14,981
- Today we're gonna
be talking about ETLs

3
00:00:14,981 --> 00:00:17,717
and I'm Nicole Ibrahim
I work for G-C partners

4
00:00:17,717 --> 00:00:20,686
and I do research
and I do casework

5
00:00:20,687 --> 00:00:22,522
and I do coding

6
00:00:22,522 --> 00:00:24,857
and I just love
finding new artifacts.

7
00:00:24,858 --> 00:00:28,161
And ETL files have been one
of them that is came up.

8
00:00:28,161 --> 00:00:31,564
You know, I was conducting
some searches and

9
00:00:32,598 --> 00:00:33,565
all of a sudden,

10
00:00:35,068 --> 00:00:38,805
I just found myself hitting
on search terms within ETLs

11
00:00:38,805 --> 00:00:40,807
and I thought what
are these things?

12
00:00:42,008 --> 00:00:44,611
So I am an artifact
junkie, that is true.

13
00:00:44,611 --> 00:00:48,080
So today, we're gonna be
talking about ETL files

14
00:00:48,081 --> 00:00:52,018
and what they are,
why they're created

15
00:00:52,018 --> 00:00:55,989
and how can we
decode them because

16
00:00:55,989 --> 00:00:57,857
really there's a
lot of convolution

17
00:00:57,857 --> 00:00:59,958
and a lot of
information out there

18
00:00:59,959 --> 00:01:01,694
about how you can decode them.

19
00:01:01,694 --> 00:01:03,163
So we'll go through some options

20
00:01:03,163 --> 00:01:05,698
that are pretty
straightforward for everybody.

21
00:01:05,698 --> 00:01:09,436
And so what information
do they provide?

22
00:01:09,436 --> 00:01:13,073
They actually have a
great deal of information

23
00:01:13,073 --> 00:01:15,074
within them.

24
00:01:15,075 --> 00:01:18,244
So these are Windows artifacts.

25
00:01:18,244 --> 00:01:21,481
And they have the ETL extension.

26
00:01:21,481 --> 00:01:26,485
And how many of you
have seen a .ETL file

27
00:01:28,054 --> 00:01:30,290
on your Windows box
during analysis or
even your own system,

28
00:01:30,290 --> 00:01:31,124
just raise your hands.

29
00:01:31,124 --> 00:01:32,092
Has anybody seen it?

30
00:01:32,092 --> 00:01:33,193
Noticed it?

31
00:01:33,193 --> 00:01:34,828
Okay so a few of you have.

32
00:01:34,828 --> 00:01:36,896
Have you guys ever
tried to open it?

33
00:01:36,896 --> 00:01:39,732
Has anybody, raise your hand,
try to see what's in there?

34
00:01:39,732 --> 00:01:41,334
So a few people, very few okay.

35
00:01:41,334 --> 00:01:42,335
Like four hands?

36
00:01:43,236 --> 00:01:44,771
Five maybe.

37
00:01:44,771 --> 00:01:47,774
So there's a lot of
information there

38
00:01:47,774 --> 00:01:51,377
and I really feel like we
need to start looking at

39
00:01:51,377 --> 00:01:53,446
these artifacts, start
understanding things more

40
00:01:53,446 --> 00:01:56,883
as Eric said and just
really pull some good data

41
00:01:56,883 --> 00:02:00,386
because I found myself
some very interesting data

42
00:02:00,386 --> 00:02:02,021
that I'm going to
share with you.

43
00:02:05,492 --> 00:02:08,261
So, I'll step back a little bit.

44
00:02:08,261 --> 00:02:10,797
Event tracing for Windows

45
00:02:12,365 --> 00:02:15,735
is basically a performance
and debugging platform

46
00:02:15,735 --> 00:02:18,004
that say the Windows
operating system uses

47
00:02:18,004 --> 00:02:21,441
or a developer or
administrator can use

48
00:02:21,441 --> 00:02:24,611
to start tracing event
on a Windows system.

49
00:02:24,611 --> 00:02:27,780
They can tap into
these ETW sessions

50
00:02:27,780 --> 00:02:29,649
which is event
tracing for Windows.

51
00:02:29,649 --> 00:02:33,353
They have the option to
stream it to a listener

52
00:02:33,353 --> 00:02:35,121
or they can write it to disks.

53
00:02:35,121 --> 00:02:37,457
So when you see that
ETL file on disk

54
00:02:37,457 --> 00:02:42,227
that is an event trace
session stored on the disk.

55
00:02:42,228 --> 00:02:45,431
And many different providers
on the operating system

56
00:02:45,431 --> 00:02:49,469
just like the EVTX
files and the EVT files,

57
00:02:49,469 --> 00:02:51,304
it can have different providers.

58
00:02:51,304 --> 00:02:53,673
So you can load this up
in Windows event viewer.

59
00:02:56,075 --> 00:02:58,011
And they're found
all over the place.

60
00:02:58,011 --> 00:03:00,113
And we'll cover some
of the major locations

61
00:03:00,113 --> 00:03:01,047
that I've seen them.

62
00:03:02,482 --> 00:03:05,185
And they have been around
also since Windows 2000.

63
00:03:05,185 --> 00:03:07,654
I have not personally
seen an ETL file

64
00:03:07,654 --> 00:03:10,123
on a Windows 2000
system or an XP system,

65
00:03:10,123 --> 00:03:12,392
but starting with
Vista and onward

66
00:03:12,392 --> 00:03:14,761
I have seen numerous ETL files

67
00:03:14,761 --> 00:03:17,297
within the hundreds on systems.

68
00:03:17,297 --> 00:03:19,465
So why are they created?

69
00:03:19,465 --> 00:03:20,967
We won't go into much detail

70
00:03:20,967 --> 00:03:23,236
but pretty much Windows
performance and debugging

71
00:03:23,236 --> 00:03:25,905
analysis and statistics,

72
00:03:25,905 --> 00:03:28,875
kernel tasks that get run
at startup and shutdown,

73
00:03:30,243 --> 00:03:32,779
power diagnostics
and sleep studies.

74
00:03:32,779 --> 00:03:35,915
So those are things that
Windows would use this for

75
00:03:35,915 --> 00:03:37,382
and they get
written to ETL files

76
00:03:37,383 --> 00:03:38,985
and they're very standard.

77
00:03:38,985 --> 00:03:42,188
You can find them on pretty
much all end-user systems.

78
00:03:44,424 --> 00:03:49,229
For a specific to the bootCKCL,
and the shutdown CKCL.

79
00:03:49,229 --> 00:03:51,531
Developer debugging, if
you're writing an application

80
00:03:51,531 --> 00:03:54,834
you can tap into ETW too
and write your own ETL files

81
00:03:54,834 --> 00:03:56,636
and your own trace sessions.

82
00:03:56,636 --> 00:03:59,072
And then administrative tasks.

83
00:03:59,072 --> 00:04:01,541
You can watch network
traffic if you wanted to

84
00:04:01,541 --> 00:04:03,676
using event tracing for Windows

85
00:04:03,676 --> 00:04:05,345
and write that to an ETL file.

86
00:04:06,746 --> 00:04:08,715
So what do they contain?

87
00:04:08,715 --> 00:04:10,450
So from what I've
been able to see

88
00:04:10,450 --> 00:04:12,484
I've been able to see SS IDs

89
00:04:12,485 --> 00:04:14,387
that I didn't even connect to.

90
00:04:14,387 --> 00:04:16,822
So Windows is scanning
for these SS IDs

91
00:04:16,822 --> 00:04:19,157
and they're showing
up in these ETL files

92
00:04:19,158 --> 00:04:21,494
I never connected to it.

93
00:04:21,494 --> 00:04:24,664
So I'm wondering also if
there's GPS data in there

94
00:04:24,664 --> 00:04:27,099
that maybe their Windows
is a sending back

95
00:04:27,100 --> 00:04:28,635
to the cloud you know.

96
00:04:28,635 --> 00:04:30,770
I don't know that yet because
I can't completely decode it.

97
00:04:30,770 --> 00:04:33,171
And then there's header data

98
00:04:33,172 --> 00:04:36,242
and then there's generic
event data within these files.

99
00:04:37,710 --> 00:04:41,080
And then for our ability
to be able to decode this

100
00:04:41,080 --> 00:04:43,650
we need to

101
00:04:43,650 --> 00:04:47,287
we need to be able to understand

102
00:04:47,287 --> 00:04:49,921
what the trace
technology was behind it.

103
00:04:49,922 --> 00:04:52,458
So without the knowing the
trace technology behind

104
00:04:52,458 --> 00:04:55,728
what created, because
Windows progresses right?

105
00:04:55,728 --> 00:04:57,463
They're not gonna stick
with an old technology

106
00:04:57,463 --> 00:04:58,698
from you know, 2000.

107
00:04:58,698 --> 00:05:00,032
They're gonna build on that.

108
00:05:00,033 --> 00:05:01,134
They're gonna change it

109
00:05:01,134 --> 00:05:02,402
and it's not
backwards compatible.

110
00:05:02,402 --> 00:05:05,972
So basically knowing
what the differences

111
00:05:05,972 --> 00:05:07,272
between technologies is,

112
00:05:07,273 --> 00:05:08,741
and you're not gonna
have to worry about this

113
00:05:08,741 --> 00:05:10,676
the tool should be able
to handle it for you.

114
00:05:10,677 --> 00:05:12,178
But if you're a developer,

115
00:05:12,178 --> 00:05:14,414
that's something that you
would have to keep in mind.

116
00:05:15,948 --> 00:05:16,983
So

117
00:05:18,318 --> 00:05:19,818
going back to the technologies.

118
00:05:19,819 --> 00:05:22,822
There are ETLs that
we can't decode

119
00:05:22,822 --> 00:05:27,093
because these debugging symbols

120
00:05:27,093 --> 00:05:30,129
or these things that
read these ETL files

121
00:05:30,129 --> 00:05:33,232
and tell you what's in it,
they're not available anymore.

122
00:05:33,232 --> 00:05:34,534
You can't get it.

123
00:05:34,534 --> 00:05:37,904
So we have limitations
in our abilities

124
00:05:37,904 --> 00:05:40,473
to be able to decode
these ETL files.

125
00:05:40,473 --> 00:05:41,674
Some are there.

126
00:05:41,674 --> 00:05:44,676
Some are registered with
every single system.

127
00:05:46,012 --> 00:05:49,649
And it can decode
any ETL on any system

128
00:05:49,649 --> 00:05:52,819
but some instances
if you take an ETL,

129
00:05:52,819 --> 00:05:54,287
say you're doing forensics.

130
00:05:54,287 --> 00:05:57,957
You image a box and then
you have an ETL and an image

131
00:05:57,957 --> 00:05:59,192
you extract it out,

132
00:05:59,192 --> 00:06:01,227
you try to load it
up in event viewer.

133
00:06:01,227 --> 00:06:04,563
Event viewer is
probably not gonna know

134
00:06:04,564 --> 00:06:06,899
exactly how to decode
all the events in there

135
00:06:06,899 --> 00:06:08,701
because it came from
a different system.

136
00:06:08,701 --> 00:06:10,870
So that's a huge issue too.

137
00:06:10,870 --> 00:06:13,606
And the tool should be
able to deal with that

138
00:06:13,606 --> 00:06:14,741
and handle it.

139
00:06:14,741 --> 00:06:16,241
But right now it doesn't.

140
00:06:16,242 --> 00:06:18,711
Event viewer and the other
tools that I'm gonna talk about

141
00:06:18,711 --> 00:06:21,614
they would depend on the system,

142
00:06:21,614 --> 00:06:25,084
the ETL coming from the
system to be decoded

143
00:06:25,084 --> 00:06:26,652
on that originating system.

144
00:06:28,454 --> 00:06:30,156
So how can we decode them?

145
00:06:30,156 --> 00:06:32,625
So with the tools
we have available

146
00:06:32,625 --> 00:06:33,793
I have previously mentioned,

147
00:06:33,793 --> 00:06:35,294
Windows event viewer,

148
00:06:35,294 --> 00:06:38,498
Windows event viewer
is a half decent tool

149
00:06:38,498 --> 00:06:40,233
for decoding ETLs.

150
00:06:41,334 --> 00:06:42,935
It gives you basic event data

151
00:06:42,935 --> 00:06:45,605
it doesn't give you
everything about the event.

152
00:06:45,605 --> 00:06:49,041
But it's still, it's
the half decent go to

153
00:06:49,041 --> 00:06:51,043
if you need to decode an ETL.

154
00:06:51,043 --> 00:06:53,012
Microsoft message analyzer

155
00:06:53,012 --> 00:06:55,782
is a very robust tool.

156
00:06:55,782 --> 00:06:59,519
And if you install and
configure it properly,

157
00:06:59,519 --> 00:07:02,555
it does an even better
job at decoding ETLs

158
00:07:02,555 --> 00:07:04,957
than Windows event viewer

159
00:07:04,957 --> 00:07:08,661
but it is a learning
curve to use.

160
00:07:08,661 --> 00:07:12,999
And then there's several SDK
tools also that you can use.

161
00:07:12,999 --> 00:07:16,903
And then for the
purposes of demonstration

162
00:07:16,903 --> 00:07:18,838
we wrote our own internal tool

163
00:07:18,838 --> 00:07:22,341
which categorizes things
in a much easier to read

164
00:07:22,341 --> 00:07:23,609
and follow through manner.

165
00:07:23,609 --> 00:07:26,279
So I'm gonna be
showing you my examples

166
00:07:26,279 --> 00:07:28,448
for what I found using
our internal tool.

167
00:07:31,484 --> 00:07:32,784
So Windows event viewer.

168
00:07:34,187 --> 00:07:37,690
You can opening an ETL
file by clicking on open,

169
00:07:39,258 --> 00:07:41,894
save log and it'll
generate it for you.

170
00:07:41,894 --> 00:07:43,095
It'll show another
pop up saying,

171
00:07:43,095 --> 00:07:44,964
would you like to
convert this to a format

172
00:07:44,964 --> 00:07:46,799
that we can properly
view to you?

173
00:07:46,799 --> 00:07:48,400
And then you say yes.

174
00:07:48,401 --> 00:07:51,637
And at that point,
once it's loaded up

175
00:07:51,637 --> 00:07:53,506
can do filtering just
like you would normally do

176
00:07:53,506 --> 00:07:58,510
in event viewer or you can
save it out to a CSV file,

177
00:07:59,245 --> 00:08:00,780
which is a great option

178
00:08:00,780 --> 00:08:02,914
and various other formats
that Windows event viewer

179
00:08:02,915 --> 00:08:04,951
allows you to export it out.

180
00:08:04,951 --> 00:08:07,353
So this is an example of an ETL.

181
00:08:07,353 --> 00:08:09,055
This is the WiFi ETL

182
00:08:09,055 --> 00:08:12,258
which is a great ETL that
has of a great information

183
00:08:12,258 --> 00:08:13,525
that I love.

184
00:08:13,526 --> 00:08:17,864
So that's basically some
information right there.

185
00:08:17,864 --> 00:08:19,332
And we'll go to the examples

186
00:08:19,332 --> 00:08:22,068
after I get through the tools
that you would be able to

187
00:08:22,068 --> 00:08:24,871
use to decode these files

188
00:08:24,871 --> 00:08:27,073
because me just talking
about it is one thing,

189
00:08:27,073 --> 00:08:28,608
you actually going
out and doing it

190
00:08:28,608 --> 00:08:30,877
and looking at it
yourself is important.

191
00:08:30,877 --> 00:08:32,478
So that you can see what's there

192
00:08:32,477 --> 00:08:34,347
and there's a lot of data there.

193
00:08:34,347 --> 00:08:35,881
So never get,

194
00:08:37,183 --> 00:08:39,018
you know, never feel
like it's overwhelming.

195
00:08:39,018 --> 00:08:40,853
Just you know, keep
digging and looking.

196
00:08:40,852 --> 00:08:42,621
Trust me, I know
there's more out there

197
00:08:42,621 --> 00:08:44,256
than what I'm seeing.

198
00:08:44,256 --> 00:08:46,191
So Microsoft message analyzer.

199
00:08:46,192 --> 00:08:48,928
This is the screen for it.

200
00:08:48,928 --> 00:08:51,030
You can download
Microsoft message analyzer

201
00:08:51,030 --> 00:08:52,899
from Microsoft's
official website

202
00:08:52,899 --> 00:08:54,534
and it's free to download.

203
00:08:54,534 --> 00:08:55,367
So that's great.

204
00:08:57,003 --> 00:08:59,539
And this is our event viewer.

205
00:08:59,539 --> 00:09:02,241
So basically everything
is categorized by

206
00:09:02,241 --> 00:09:04,677
the event name

207
00:09:04,677 --> 00:09:07,980
which makes the reports
very very easy to navigate,

208
00:09:07,980 --> 00:09:09,649
very easy to use.

209
00:09:09,649 --> 00:09:13,586
So some common ETL
file locations.

210
00:09:13,586 --> 00:09:17,023
A lot in the system
32 directory,

211
00:09:17,023 --> 00:09:19,659
the bootCKCL, very important ETL

212
00:09:19,659 --> 00:09:23,663
that you would almost
always want to look at

213
00:09:23,663 --> 00:09:25,565
in an investigation.

214
00:09:25,565 --> 00:09:27,300
And the shutdown CKCL,

215
00:09:27,300 --> 00:09:32,305
these files do get overwritten
at shutdown and boot.

216
00:09:32,305 --> 00:09:34,906
So you know, you're
only gonna get the last

217
00:09:34,907 --> 00:09:36,876
shutdown and boot process.

218
00:09:36,876 --> 00:09:39,812
But if a computer is you know,

219
00:09:39,812 --> 00:09:41,447
if somebody has
infiltrated a computer

220
00:09:41,447 --> 00:09:43,716
or infected a computer and
you have something like

221
00:09:43,716 --> 00:09:46,852
a scheduled task that's
set when the user logs in,

222
00:09:46,852 --> 00:09:48,588
that might be something
that you would see

223
00:09:48,588 --> 00:09:50,089
show up in the bootCKCL

224
00:09:50,089 --> 00:09:53,225
and that would be another
resource of information for

225
00:09:53,225 --> 00:09:55,795
you know somebody who's
established persistence

226
00:09:55,795 --> 00:09:56,795
in a computer.

227
00:09:57,964 --> 00:09:59,432
And then you have
secondary logon.

228
00:09:59,432 --> 00:10:02,501
I've seen this
secondary logon CKCL

229
00:10:02,501 --> 00:10:06,005
when a secondary user
logs into the system.

230
00:10:06,005 --> 00:10:09,141
So I'm logged in and then
another user logs in,

231
00:10:09,141 --> 00:10:11,911
this file will be
created and it contains

232
00:10:11,911 --> 00:10:14,479
very similar information
to the bootCKCL

233
00:10:14,480 --> 00:10:16,849
and the shut down CKCL.

234
00:10:16,849 --> 00:10:18,250
And those are some
other locations,

235
00:10:18,250 --> 00:10:21,354
we have snapshot
ETL, and WiFi ETL

236
00:10:22,321 --> 00:10:25,391
and the LW net log ETL.

237
00:10:25,391 --> 00:10:28,560
I still haven't figured
out what LW net stands for

238
00:10:28,561 --> 00:10:31,664
or LW, what is LW net?

239
00:10:31,664 --> 00:10:33,933
LW net, I can't
see it right now.

240
00:10:33,933 --> 00:10:37,336
So let's look at
the bootCKCL file.

241
00:10:38,671 --> 00:10:40,906
Like I said, it's overwritten
up boot every time.

242
00:10:42,308 --> 00:10:46,379
It's kernel events that happen
during the boot process.

243
00:10:46,379 --> 00:10:48,447
So not only during
the boot process

244
00:10:48,447 --> 00:10:50,516
but while the users logging in.

245
00:10:50,516 --> 00:10:52,818
So if there are applications

246
00:10:52,818 --> 00:10:56,656
that are set to start
automatically, it'll show those.

247
00:10:56,656 --> 00:11:01,327
If there are applications
that are running

248
00:11:01,327 --> 00:11:03,095
or have to run at
the boot process,

249
00:11:03,095 --> 00:11:06,032
it'll show what file
handles it opens up

250
00:11:06,032 --> 00:11:08,901
and what DLLs it's accessing

251
00:11:08,901 --> 00:11:10,770
and what writes it's
making to the disk

252
00:11:10,770 --> 00:11:14,106
and what file I owe
it it's generating.

253
00:11:14,106 --> 00:11:17,309
So it produces a
lot of information

254
00:11:17,309 --> 00:11:21,814
which can be used in
various, various ways.

255
00:11:23,516 --> 00:11:28,087
So you can basically
see processes that
ran during the boot

256
00:11:28,087 --> 00:11:32,858
persistence mechanisms,
malicious tools
that are running,

257
00:11:32,858 --> 00:11:36,194
scheduled tasks like
I had mentioned.

258
00:11:36,195 --> 00:11:39,131
If something is
scheduled to run at logon

259
00:11:39,131 --> 00:11:40,366
when the user logs on,

260
00:11:40,366 --> 00:11:42,901
you can see that in
the bootCKCL file.

261
00:11:44,970 --> 00:11:46,405
And you can even
see file handles.

262
00:11:46,405 --> 00:11:51,177
So if there is an application
that accessing files

263
00:11:51,177 --> 00:11:53,245
on say an external device,

264
00:11:53,245 --> 00:11:56,882
it'll show the external
device file handles

265
00:11:56,882 --> 00:11:59,819
saying that this application
was actually using those file

266
00:11:59,819 --> 00:12:01,620
which is pretty crazy.

267
00:12:01,620 --> 00:12:04,857
So in this example, I did a
search in our internal tool

268
00:12:04,857 --> 00:12:07,026
for the .pf extension

269
00:12:07,026 --> 00:12:09,161
which we all know
is a prefetch file.

270
00:12:09,161 --> 00:12:12,765
So you know that
in the bootCKCL,

271
00:12:12,765 --> 00:12:15,300
we have references
to prefetch files.

272
00:12:15,301 --> 00:12:17,536
And in this particular example,

273
00:12:17,536 --> 00:12:21,372
I noticed on my own
system that net SH.exe

274
00:12:21,373 --> 00:12:23,476
was being called at boot.

275
00:12:23,476 --> 00:12:25,311
And I thought to myself,

276
00:12:25,311 --> 00:12:27,179
I can't imagine
anything that I'm using

277
00:12:27,179 --> 00:12:29,348
call netsh.

278
00:12:29,348 --> 00:12:32,584
So I also noticed IP config

279
00:12:32,585 --> 00:12:35,621
and I'm like, why in
the world is IP config

280
00:12:35,621 --> 00:12:38,057
and netsh running
when my system boots.

281
00:12:38,057 --> 00:12:39,558
This makes no sense to me.

282
00:12:39,558 --> 00:12:44,563
So I took netsh to discern netSH

283
00:12:45,731 --> 00:12:48,734
and then I came across,

284
00:12:48,734 --> 00:12:53,038
and I can't, so process start.

285
00:12:53,038 --> 00:12:54,874
So what you're seeing here,

286
00:12:54,874 --> 00:12:56,275
I don't know if
it's large enough

287
00:12:56,275 --> 00:12:58,911
but these are commands that

288
00:12:58,911 --> 00:13:00,212
when netsh ran

289
00:13:00,212 --> 00:13:04,784
those of the command
that netsh had run.

290
00:13:04,784 --> 00:13:08,454
So it's configuring
what is this?

291
00:13:09,688 --> 00:13:12,158
Interface IPv6

292
00:13:12,158 --> 00:13:15,828
and it's looping it
out to something else.

293
00:13:15,828 --> 00:13:18,363
It's redirecting the
output to something else.

294
00:13:18,364 --> 00:13:20,766
And then you can see all
the other commands that ran.

295
00:13:20,766 --> 00:13:23,502
So this is not obviously
limited to netsh

296
00:13:23,502 --> 00:13:26,104
this can also be like CMD.

297
00:13:26,105 --> 00:13:28,574
If somebody's
infiltrated your box

298
00:13:28,574 --> 00:13:30,141
or somebody's running commands

299
00:13:30,142 --> 00:13:31,710
and those commands are alive

300
00:13:31,710 --> 00:13:33,279
by the time that
the system boots up

301
00:13:33,279 --> 00:13:35,447
you will see them in here.

302
00:13:35,447 --> 00:13:38,818
So for me I thought that
was quite interesting.

303
00:13:38,818 --> 00:13:41,520
So that's just one example
of the bootCKCL file.

304
00:13:42,421 --> 00:13:46,525
And in the shutdown CKCL file,

305
00:13:46,525 --> 00:13:50,963
it's basically circular
kernel context logger.

306
00:13:50,963 --> 00:13:53,866
So shutdown circular
kernel context logger.

307
00:13:55,034 --> 00:13:56,669
It's basically the
same as the boot file,

308
00:13:56,669 --> 00:14:01,040
the bootCKCL, in that when
the system is shutting down

309
00:14:01,040 --> 00:14:04,242
the processes that it's aware of

310
00:14:04,243 --> 00:14:05,945
at the time the
system shuts down,

311
00:14:05,945 --> 00:14:07,746
it'll record it in there.

312
00:14:07,746 --> 00:14:10,316
It'll record the DLL
handles that it has,

313
00:14:10,316 --> 00:14:13,552
it'll record the threads
that's associated with it.

314
00:14:13,552 --> 00:14:17,089
So you can see very
interesting information.

315
00:14:17,089 --> 00:14:18,290
So it's kinda like the reverse.

316
00:14:18,290 --> 00:14:20,459
Instead of seeing what's
starting up at boot

317
00:14:20,459 --> 00:14:23,295
you're seeing what was running
when the system shutdown.

318
00:14:25,531 --> 00:14:29,001
So in this example,

319
00:14:32,905 --> 00:14:37,376
this is ETL file from
a capture the flag box.

320
00:14:37,376 --> 00:14:40,713
So this is a system
that you know,

321
00:14:40,713 --> 00:14:43,182
maybe has some
vulnerabilities somewhere

322
00:14:43,182 --> 00:14:45,251
and you know there's
a bunch of people

323
00:14:45,251 --> 00:14:47,419
all trying to attack it,
trying to capture the flag

324
00:14:47,419 --> 00:14:49,054
and hack that system.

325
00:14:49,054 --> 00:14:53,058
So this MDB.exe file that's
highlighted on the bottom,

326
00:14:53,058 --> 00:14:56,328
that was a tool that I created

327
00:14:56,328 --> 00:14:59,430
to generate a back door
back to my computer

328
00:14:59,431 --> 00:15:03,035
so I can get root access.

329
00:15:03,035 --> 00:15:04,469
So you can see this,

330
00:15:04,470 --> 00:15:07,006
this was running when
that system shut down.

331
00:15:07,006 --> 00:15:10,642
I actually issued that
shutdown command remotely

332
00:15:10,643 --> 00:15:13,545
and kicked everybody off,
but that's okay, right.

333
00:15:15,915 --> 00:15:18,550
So I pulled that out, so
then I did a search for MDB.

334
00:15:19,985 --> 00:15:24,423
And then in MDB, I saw, I
mean for the search for MDB

335
00:15:24,423 --> 00:15:26,859
I can see all the DLLs
that it loaded up.

336
00:15:26,859 --> 00:15:28,661
So if somebody's doing

337
00:15:29,828 --> 00:15:31,997
offline you know
malware analysis,

338
00:15:31,997 --> 00:15:33,832
or you're looking for
some kind of infection

339
00:15:33,832 --> 00:15:36,068
or you know which DLLs are bad,

340
00:15:36,068 --> 00:15:39,571
or you know anything,
you can see right here

341
00:15:39,571 --> 00:15:43,409
what DLLs my bad
executable had loaded up

342
00:15:43,409 --> 00:15:46,645
at the time that the
system was shutdown.

343
00:15:48,080 --> 00:15:49,915
So WiFi traces.

344
00:15:49,915 --> 00:15:54,053
So WiFi's gonna be there,
the WiFi ETLs gonna be there.

345
00:15:54,053 --> 00:15:57,756
If you're establishing
WiFi connections,

346
00:15:57,756 --> 00:15:59,858
if you're connected via you know

347
00:15:59,858 --> 00:16:01,093
you don't have a WiFi card,

348
00:16:01,093 --> 00:16:02,895
you're not gonna see
the WiFi ETL file.

349
00:16:02,895 --> 00:16:05,664
So you can see
WiFi configuration,

350
00:16:05,664 --> 00:16:08,567
auto configuration,
a lot of other data

351
00:16:08,567 --> 00:16:10,235
that I can't decode right now

352
00:16:10,235 --> 00:16:12,471
and looks like
it's the best data,

353
00:16:12,471 --> 00:16:16,608
so I'm wondering why
Microsoft had decided to

354
00:16:16,608 --> 00:16:20,244
or even the WiFi interface card,

355
00:16:20,245 --> 00:16:22,815
the DLL that handles
that, why it decided

356
00:16:22,815 --> 00:16:25,384
to take out those
really good payloads

357
00:16:25,384 --> 00:16:26,885
and just leave me with something

358
00:16:26,885 --> 00:16:29,855
that I don't know how
to interpret properly.

359
00:16:31,657 --> 00:16:34,093
So you can see nearby
network SS IDs.

360
00:16:34,093 --> 00:16:36,295
You can see WiFi configuration.

361
00:16:36,295 --> 00:16:37,729
You can see Mac addresses.

362
00:16:37,730 --> 00:16:39,665
You can see network
status changes.

363
00:16:39,665 --> 00:16:43,168
You can see possibly
obviously even more data.

364
00:16:44,336 --> 00:16:46,405
And in this example here,

365
00:16:47,406 --> 00:16:48,607
I was doing a search for

366
00:16:51,076 --> 00:16:52,311
my own SS ID.

367
00:16:52,311 --> 00:16:54,646
And I came across one event

368
00:16:54,646 --> 00:16:56,281
which is highlighted to the left

369
00:16:56,281 --> 00:17:00,019
as blue, all the way
in the left hand pane

370
00:17:00,019 --> 00:17:02,254
and it has this
unusual task number.

371
00:17:02,254 --> 00:17:03,989
And that means I can't
decode it properly,

372
00:17:03,989 --> 00:17:06,725
so I can't put context
to what this is.

373
00:17:06,724 --> 00:17:09,627
But I noticed that
the very top entry

374
00:17:09,627 --> 00:17:13,598
there's an entry
for the FBIvanone.

375
00:17:13,598 --> 00:17:17,202
And I'm like, I didn't
know there was an FBI van

376
00:17:17,202 --> 00:17:18,971
outside of my house one day.

377
00:17:18,971 --> 00:17:20,406
But obviously there was.

378
00:17:20,406 --> 00:17:22,808
I'm sure it was somebody
just joking around but

379
00:17:22,808 --> 00:17:25,711
all the SS IDs that
are listed there

380
00:17:25,711 --> 00:17:28,247
those are SS IDs
that were around me.

381
00:17:28,247 --> 00:17:29,615
Those were my neighbors.

382
00:17:29,615 --> 00:17:32,785
Some of them include the
hotels that I visited.

383
00:17:32,785 --> 00:17:35,421
So I could see the
hotels I had visited.

384
00:17:35,421 --> 00:17:37,189
When I went to South America,

385
00:17:37,189 --> 00:17:40,426
I can see all the you know,
all the office buildings

386
00:17:40,426 --> 00:17:41,560
that I have visited.

387
00:17:41,560 --> 00:17:44,830
All the names of
pretty much everything.

388
00:17:44,830 --> 00:17:45,831
And I'm sure there's

389
00:17:48,734 --> 00:17:51,203
configuration information

390
00:17:51,203 --> 00:17:53,605
for the ones that
I had connected to.

391
00:17:53,605 --> 00:17:56,208
But right now, I can't
decode that information.

392
00:17:58,210 --> 00:18:03,148
So energy NTKL,
NT kernel traces.

393
00:18:04,016 --> 00:18:05,250
This is another good one.

394
00:18:05,250 --> 00:18:06,752
This one I have
found on servers.

395
00:18:06,752 --> 00:18:10,422
And it can grow quite large.

396
00:18:10,422 --> 00:18:12,624
The largest I've
seen was 66 megs.

397
00:18:12,624 --> 00:18:14,393
You think that's
not a lot of data,

398
00:18:14,393 --> 00:18:17,162
but that's because these
ETLs are compressed.

399
00:18:17,162 --> 00:18:20,332
They're basically
you know skeletons

400
00:18:20,332 --> 00:18:23,702
and it's the other
things that decode it

401
00:18:23,702 --> 00:18:26,872
and add the contacts which
add extra data to it.

402
00:18:26,872 --> 00:18:29,241
So 66 megs may
not seem like much

403
00:18:29,241 --> 00:18:34,246
but it can turn into about,
I want to say 500 megs maybe

404
00:18:35,013 --> 00:18:36,682
of pars ETL.

405
00:18:38,550 --> 00:18:40,886
So it's quite a bit of data.

406
00:18:40,886 --> 00:18:43,455
So you can find
power diagnostics

407
00:18:43,455 --> 00:18:45,591
and system configuration,

408
00:18:45,591 --> 00:18:47,091
lots of system configuration.

409
00:18:47,092 --> 00:18:51,797
You can see which disks
are attached to the server

410
00:18:51,797 --> 00:18:53,065
at that time.

411
00:18:53,065 --> 00:18:55,267
You can find out the
size of those disks,

412
00:18:55,267 --> 00:18:58,403
the drive letter that's
assigned to those disks,

413
00:18:59,872 --> 00:19:04,042
how much free space it has,
how many partitions it has,

414
00:19:04,042 --> 00:19:07,411
clusters, sectors, pretty
much the friendly name,

415
00:19:07,412 --> 00:19:11,884
the serial number, everything
is stored in this ETL

416
00:19:11,884 --> 00:19:14,720
for what's connected
when that ETL file

417
00:19:14,720 --> 00:19:16,288
has entries generated.

418
00:19:17,456 --> 00:19:19,158
So you can also see
network interface card

419
00:19:19,158 --> 00:19:21,693
process and thread, services.

420
00:19:23,662 --> 00:19:26,532
I really wish I can
make it more exciting.

421
00:19:26,532 --> 00:19:28,533
I mean there's so
much data in there.

422
00:19:28,534 --> 00:19:30,636
I really hope you
guys take a look at it

423
00:19:30,636 --> 00:19:32,070
when you get to see them.

424
00:19:32,070 --> 00:19:34,273
So in this example,
we're gonna be going over

425
00:19:35,207 --> 00:19:37,042
a physical disk.

426
00:19:37,042 --> 00:19:39,410
We're gonna track down one disk

427
00:19:39,411 --> 00:19:41,947
that was attached to a server.

428
00:19:41,947 --> 00:19:44,483
And just figure out all
the information we can

429
00:19:44,483 --> 00:19:45,650
about this one disk.

430
00:19:47,352 --> 00:19:49,021
So those are the disks
that were attached.

431
00:19:49,021 --> 00:19:52,658
It looks like, I'm not sure,
there's no count there, but.

432
00:19:54,059 --> 00:19:55,994
There's quite a
few disks obviously

433
00:19:55,994 --> 00:19:58,964
including the
internal disks also.

434
00:19:58,964 --> 00:20:01,832
So we are going to look at it,

435
00:20:01,833 --> 00:20:03,802
let's go back here.

436
00:20:05,537 --> 00:20:08,440
Think we looked at the, we're
gonna target the Seagate.

437
00:20:16,381 --> 00:20:19,451
Sure there is connector here.

438
00:20:19,451 --> 00:20:20,953
Oh right, so disk number.

439
00:20:20,953 --> 00:20:22,721
So this was our connector.

440
00:20:22,721 --> 00:20:24,523
So I selected disk number 13.

441
00:20:24,523 --> 00:20:26,824
I wanted to track
down disk number 13

442
00:20:26,825 --> 00:20:28,427
and that is the Seagate drive.

443
00:20:30,128 --> 00:20:33,932
So I did a search for,

444
00:20:33,932 --> 00:20:35,667
well I went to logical disk

445
00:20:35,667 --> 00:20:38,770
and saw that disk number 13
was assigned drive letter P.

446
00:20:38,770 --> 00:20:40,504
So now we know the Seagate drive

447
00:20:40,505 --> 00:20:41,673
was assigned Drive letter P

448
00:20:41,673 --> 00:20:43,308
and it has this number 13.

449
00:20:43,308 --> 00:20:46,278
There's a bunch, a lot
of additional information

450
00:20:46,278 --> 00:20:47,679
that you cannot see right here.

451
00:20:47,679 --> 00:20:50,582
But you can see that
it has partition size

452
00:20:50,582 --> 00:20:52,551
also listed if that's
not too small for you

453
00:20:52,551 --> 00:20:54,285
which it may be.

454
00:20:54,286 --> 00:20:57,823
So a lot of information
about the Seagate drive

455
00:20:57,823 --> 00:20:58,824
so far that we have.

456
00:20:59,992 --> 00:21:03,228
And then here, we
have the plug-and-play

457
00:21:03,228 --> 00:21:04,630
entry for the Seagate drive.

458
00:21:04,630 --> 00:21:06,932
In our case, we only
had one Seagate drive.

459
00:21:06,932 --> 00:21:08,500
So it made it really easy.

460
00:21:08,500 --> 00:21:10,035
It might be harder
if you have multiple

461
00:21:10,035 --> 00:21:13,405
that have the exact same
name, same friendly name.

462
00:21:13,405 --> 00:21:15,706
So here you can see this
is the registry entry

463
00:21:15,707 --> 00:21:17,409
you can take that
registry entry.

464
00:21:17,409 --> 00:21:22,214
You can pull out the
manufacturer, the
model, the revision

465
00:21:23,315 --> 00:21:26,118
and the serial number
for that device.

466
00:21:27,552 --> 00:21:30,921
So next we're gonna go to
WDI context trace logs.

467
00:21:32,257 --> 00:21:34,226
This can include something
very interesting,

468
00:21:34,226 --> 00:21:36,728
Explorer start up.

469
00:21:37,829 --> 00:21:40,632
So explorer startup run keys.

470
00:21:40,632 --> 00:21:45,637
So processes that run at
startup, you can see that here.

471
00:21:47,039 --> 00:21:48,907
And things that are
executing from start key.

472
00:21:48,907 --> 00:21:52,244
So this would be a
persistence mechanism again.

473
00:21:52,244 --> 00:21:55,280
If you want something to
keep loading every time

474
00:21:55,280 --> 00:21:56,248
the system loads up,

475
00:21:56,248 --> 00:21:57,849
you would want it to be in the

476
00:21:57,849 --> 00:22:00,619
explorer startup run key.

477
00:22:02,387 --> 00:22:06,957
So here you can see various
processes that are listed here

478
00:22:06,958 --> 00:22:10,395
that are being
initiated at the time

479
00:22:10,395 --> 00:22:12,964
that the system or
Explorer starts up.

480
00:22:15,867 --> 00:22:18,303
And it's something else
that I should mention here

481
00:22:18,303 --> 00:22:21,773
there are also, I don't
have examples for it

482
00:22:21,773 --> 00:22:24,943
in this slide

483
00:22:24,943 --> 00:22:28,013
but there are what appears
to be shell bag items.

484
00:22:28,013 --> 00:22:31,316
How many of you are
familiar with shell bags?

485
00:22:32,551 --> 00:22:33,952
A good deal of you.

486
00:22:33,952 --> 00:22:36,955
So those are recently visited
folders, some of them.

487
00:22:36,955 --> 00:22:40,891
I've seen shell bags
within these ETLs

488
00:22:40,892 --> 00:22:42,361
and there's another ETL

489
00:22:42,361 --> 00:22:44,863
so this is a WDI context log.

490
00:22:44,863 --> 00:22:48,567
There's another ETL that
appears to be being deprecated

491
00:22:48,567 --> 00:22:51,770
in favor of this one,
the WDI context log

492
00:22:51,770 --> 00:22:56,441
which records shell
items, shell bags

493
00:22:56,441 --> 00:22:57,909
folders that have been visited.

494
00:22:57,909 --> 00:23:00,612
And I'm not sure
the exact time frame

495
00:23:00,612 --> 00:23:01,913
that it includes

496
00:23:01,913 --> 00:23:05,484
for when this person
or if it just dumps out

497
00:23:05,484 --> 00:23:08,019
all the shell bags
into the ETL itself.

498
00:23:08,019 --> 00:23:10,055
So it's like its own
little parser for you.

499
00:23:10,055 --> 00:23:11,790
You don't even need
a shell bag explorer.

500
00:23:11,790 --> 00:23:13,125
You could just load up an ETL

501
00:23:13,125 --> 00:23:14,593
and it'll dump
all the shell bags

502
00:23:14,593 --> 00:23:16,762
which is really interesting.

503
00:23:18,330 --> 00:23:21,099
So other observed ETLs.

504
00:23:22,300 --> 00:23:25,404
There are so many
different kinds of ETLs

505
00:23:25,404 --> 00:23:29,474
and Shelley who's gonna
be doing a talk later

506
00:23:29,474 --> 00:23:33,043
she noted to me a DNS ETL.

507
00:23:33,044 --> 00:23:36,014
I had no idea
there is a DNS ETL.

508
00:23:36,014 --> 00:23:39,283
'Cause in none of my
systems it was there.

509
00:23:39,284 --> 00:23:42,954
And she pulled out all
much amazing information.

510
00:23:42,954 --> 00:23:45,190
You know IP addresses,

511
00:23:46,458 --> 00:23:48,026
one was I can't remember,

512
00:23:48,026 --> 00:23:51,763
it was the target.

513
00:23:52,898 --> 00:23:54,433
I just looked at
it, it was amazing.

514
00:23:54,433 --> 00:23:59,037
It was like the address.
The .local address.

515
00:23:59,037 --> 00:24:01,706
What domain it connected to.

516
00:24:01,706 --> 00:24:03,408
And it contained,

517
00:24:03,408 --> 00:24:05,310
it looked like it contained
a lot of information.

518
00:24:05,310 --> 00:24:09,147
So what I'm showing you
is the tip of the iceberg.

519
00:24:10,248 --> 00:24:14,486
So there's a lot
more to be discovered

520
00:24:14,486 --> 00:24:18,089
and we still need to be able
to decode these properly.

521
00:24:18,089 --> 00:24:23,094
'Cause right now, we can't
do it no matter our resources

522
00:24:25,197 --> 00:24:26,430
that I'm aware of.

523
00:24:26,431 --> 00:24:28,266
Obviously there may
be ways to do this

524
00:24:28,266 --> 00:24:29,968
that I'm not thinking of.

525
00:24:31,636 --> 00:24:34,539
And it contains a
lot of information.

526
00:24:34,539 --> 00:24:38,043
So let's look at some of the
caveats associated with this.

527
00:24:38,043 --> 00:24:40,779
One is that the logs
are overwritten.

528
00:24:40,779 --> 00:24:43,949
Like the bootCKCL file
and the shutdown CKCL file

529
00:24:43,949 --> 00:24:47,219
these get lost when
the system shuts down

530
00:24:47,219 --> 00:24:48,587
and when it boots up.

531
00:24:49,788 --> 00:24:53,892
So you're not gonna have
a bootCKCL file you know

532
00:24:53,892 --> 00:24:55,794
from three months back.

533
00:24:55,794 --> 00:24:57,829
You're gonna have
it from the last,

534
00:24:57,829 --> 00:24:58,763
unless it shut down

535
00:24:58,763 --> 00:25:00,599
if it booted three months back.

536
00:25:00,599 --> 00:25:03,534
You're gonna have it from
the last time it booted.

537
00:25:04,669 --> 00:25:07,072
What I have noticed
though is that ETL files

538
00:25:07,072 --> 00:25:08,773
are highly carvable.

539
00:25:10,208 --> 00:25:14,312
I have been able to carve
thousands of ETL files.

540
00:25:15,480 --> 00:25:17,883
Not all of them I
was able to load

541
00:25:17,883 --> 00:25:21,152
because I'm guessing that the
tool doesn't like something,

542
00:25:21,152 --> 00:25:23,421
there's some check
somewhere that's like,

543
00:25:23,421 --> 00:25:24,990
I don't like this ETL file

544
00:25:24,990 --> 00:25:26,558
it doesn't look right to me.

545
00:25:26,558 --> 00:25:28,026
But the data could be intact

546
00:25:28,026 --> 00:25:31,263
but it's just maybe one checksum
at the very top of the file

547
00:25:31,263 --> 00:25:34,064
says it's supposed to have this
many records but it doesn't.

548
00:25:34,065 --> 00:25:37,202
So, it's possible to carve them.

549
00:25:38,737 --> 00:25:40,705
And then we have
logs with no data

550
00:25:40,705 --> 00:25:42,807
and that might go back again to

551
00:25:42,807 --> 00:25:45,844
you know maybe it's carvable,
I don't know what causes it.

552
00:25:45,844 --> 00:25:47,379
I think it's maybe that

553
00:25:47,379 --> 00:25:49,347
there's a temporary
file that gets created

554
00:25:49,347 --> 00:25:51,683
it dumps the contents and
it clears it back out again

555
00:25:51,683 --> 00:25:53,318
and then you end
up with nothing.

556
00:25:54,486 --> 00:25:55,320
Or it appears.

557
00:25:57,022 --> 00:26:00,759
And another big one is
this, the timestamps.

558
00:26:00,759 --> 00:26:01,893
So,

559
00:26:03,428 --> 00:26:07,332
there is file rundowns
in the bootCKCL file

560
00:26:07,332 --> 00:26:09,634
which shows file
handles that are open.

561
00:26:09,634 --> 00:26:12,504
And these file handles are,

562
00:26:12,504 --> 00:26:15,740
they're not timestamps
that files were you know

563
00:26:15,740 --> 00:26:17,475
created or deleted.

564
00:26:17,475 --> 00:26:21,879
These are timestamps that

565
00:26:21,880 --> 00:26:26,885
the session knows, the files
that the session knows about

566
00:26:28,219 --> 00:26:31,623
at the time that the
snapshot was created.

567
00:26:31,623 --> 00:26:36,428
So these sessions can
be very limited in time

568
00:26:36,428 --> 00:26:38,396
like maybe three
seconds worth of data.

569
00:26:38,396 --> 00:26:41,232
So don't rely on the
timestamps necessarily.

570
00:26:41,232 --> 00:26:44,869
It's typically when the session

571
00:26:44,869 --> 00:26:49,139
was engaged or started
and when it finished.

572
00:26:51,142 --> 00:26:52,677
So decoding challenges,

573
00:26:52,677 --> 00:26:54,913
we've already talked
about decoding challenges,

574
00:26:54,913 --> 00:26:57,716
there's quite a few
of them out there.

575
00:26:57,716 --> 00:27:01,019
I mean it depends on the
trace logging technology used.

576
00:27:01,019 --> 00:27:05,423
So once again, if you
try to take an ETL file

577
00:27:05,423 --> 00:27:06,658
from one computer

578
00:27:06,658 --> 00:27:09,093
and then decode it
on another computer

579
00:27:09,094 --> 00:27:13,832
you can almost guarantee,
unless it's the bootCKCL file.

580
00:27:13,832 --> 00:27:16,835
So the pretty
standard ones are the

581
00:27:16,835 --> 00:27:19,704
anything in the
system 32 WDI folder

582
00:27:19,704 --> 00:27:21,239
those are the
exceptions to the rules.

583
00:27:21,239 --> 00:27:24,376
Those are pretty decodable
across all systems.

584
00:27:24,376 --> 00:27:26,745
But when it comes
to anything else

585
00:27:26,745 --> 00:27:30,114
like so Microsoft office,

586
00:27:30,115 --> 00:27:31,750
they have their own ETL files

587
00:27:31,750 --> 00:27:35,920
and I have observed
that I can see

588
00:27:35,920 --> 00:27:37,689
when my colleagues come online

589
00:27:37,689 --> 00:27:39,491
in the ETLs file.

590
00:27:39,491 --> 00:27:41,860
It's recording
when my colleagues,

591
00:27:41,860 --> 00:27:43,328
when their status changes,

592
00:27:43,328 --> 00:27:44,995
and that's crazy.

593
00:27:44,996 --> 00:27:47,432
And I've even seen missed calls.

594
00:27:47,432 --> 00:27:49,067
And it'll show you know,

595
00:27:49,067 --> 00:27:51,569
all the header information
for the email that is sent

596
00:27:51,569 --> 00:27:53,905
within this ETL file.

597
00:27:53,905 --> 00:27:55,740
So I'm not including
all the examples

598
00:27:55,740 --> 00:27:57,709
because obviously I
don't have time for that.

599
00:27:57,709 --> 00:28:00,478
But if you go in and
you start looking,

600
00:28:00,478 --> 00:28:01,880
so Microsoft Office
is a good one.

601
00:28:01,880 --> 00:28:03,682
It includes link to.

602
00:28:06,084 --> 00:28:08,253
So

603
00:28:08,253 --> 00:28:10,688
yeah, so the
decoding challenges.

604
00:28:10,689 --> 00:28:14,059
So if you try to pull that
ETL from another system

605
00:28:14,059 --> 00:28:16,461
and put it on a different system

606
00:28:16,461 --> 00:28:18,196
if you don't have
office installed,

607
00:28:18,196 --> 00:28:20,899
you're not gonna have
the necessary providers

608
00:28:20,899 --> 00:28:25,270
or the DLLs, or what's
required on that system

609
00:28:25,270 --> 00:28:26,504
to be able to decode it.

610
00:28:26,504 --> 00:28:27,938
So event viewer
is gonna go bleh.

611
00:28:27,939 --> 00:28:30,275
Mm-mmm, don't like it.

612
00:28:30,275 --> 00:28:32,377
I don't have anything
available do decode that.

613
00:28:32,377 --> 00:28:35,180
So you might as well put it
back on the other system.

614
00:28:35,180 --> 00:28:38,516
It might get some, but it's
not gonna get everything.

615
00:28:38,516 --> 00:28:40,085
And a lot of times,
if you load it up

616
00:28:40,085 --> 00:28:41,486
and you don't see any events,

617
00:28:41,486 --> 00:28:44,089
that's not because
there's nothing there

618
00:28:44,089 --> 00:28:46,491
it's because your system
just can't decode it.

619
00:28:48,093 --> 00:28:49,627
And there's so much
data obviously.

620
00:28:49,627 --> 00:28:51,663
Some of these
events mean nothing.

621
00:28:51,663 --> 00:28:54,599
Well they don't look
like they mean anything.

622
00:28:54,599 --> 00:28:56,634
They could mean
something to somebody.

623
00:28:56,634 --> 00:28:59,304
I'm not the one to determine

624
00:28:59,304 --> 00:29:00,772
what means something
to somebody.

625
00:29:00,772 --> 00:29:03,274
Maybe some application
developer would wanna know

626
00:29:03,274 --> 00:29:05,709
these things and who
knows, I don't know.

627
00:29:05,710 --> 00:29:07,679
So there's a lot of data.

628
00:29:07,679 --> 00:29:10,615
A lot for me to go through,
a lot for me to show you but,

629
00:29:12,050 --> 00:29:13,585
that's all I have for today.

630
00:29:13,585 --> 00:29:14,619
I guess that's it.

631
00:29:14,619 --> 00:29:16,053
Yup, thank you.

632
00:29:16,054 --> 00:29:19,057
(audience applause)

