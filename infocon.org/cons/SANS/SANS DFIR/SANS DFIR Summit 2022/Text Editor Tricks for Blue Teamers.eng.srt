1
00:00:00,659 --> 00:00:02,960
foreign

2
00:00:05,700 --> 00:00:07,620
thanks very much and thanks everybody

3
00:00:07,620 --> 00:00:11,280
for uh grabbing this coveted after lunch

4
00:00:11,280 --> 00:00:14,340
spot here sure appreciate you hanging

5
00:00:14,340 --> 00:00:17,699
out with me and and talking nerd so let

6
00:00:17,699 --> 00:00:20,100
me just make sure I can advance the slot

7
00:00:20,100 --> 00:00:24,359
oh that's good cool so I've got some uh

8
00:00:24,359 --> 00:00:26,460
resources got a copy of the deck and

9
00:00:26,460 --> 00:00:28,800
some cheat sheets and stuff here this

10
00:00:28,800 --> 00:00:32,098
will come back up again at the end of uh

11
00:00:32,098 --> 00:00:33,960
this presentation feel free to hit me up

12
00:00:33,960 --> 00:00:36,059
mention me on Twitter

13
00:00:36,059 --> 00:00:38,700
um and also just so you know if you've

14
00:00:38,700 --> 00:00:41,460
never been to an AJ talk before I go

15
00:00:41,460 --> 00:00:44,820
fast I have lots of slimes 95 so

16
00:00:44,820 --> 00:00:48,420
who am I so this is usually how you're

17
00:00:48,420 --> 00:00:51,660
going to find me because I'm AFK as much

18
00:00:51,660 --> 00:00:54,899
as possible doing things like this or

19
00:00:54,899 --> 00:00:57,780
things like this which uh by the way if

20
00:00:57,780 --> 00:00:59,399
you've never been to Sicily don't go

21
00:00:59,399 --> 00:01:01,500
totally terrible unfortunate you'll

22
00:01:01,500 --> 00:01:03,739
you'll hate it the beaches are you know

23
00:01:03,739 --> 00:01:06,720
uh it's amazing anyway

24
00:01:06,720 --> 00:01:10,020
um I I also do a fair amount of this and

25
00:01:10,020 --> 00:01:12,540
I like to think that I'm neurodivergent

26
00:01:12,540 --> 00:01:14,220
at least you know one when I was taking

27
00:01:14,220 --> 00:01:17,700
my ADHD uh test a couple years ago like

28
00:01:17,700 --> 00:01:19,500
I got bored the middle of it so you know

29
00:01:19,500 --> 00:01:23,100
go figure also data nerd and hacker lazy

30
00:01:23,100 --> 00:01:25,920
now these last three three things kind

31
00:01:25,920 --> 00:01:28,860
of like come together and play in your

32
00:01:28,860 --> 00:01:31,380
favor and in my team's favor because I

33
00:01:31,380 --> 00:01:33,720
get bored doing the same thing over and

34
00:01:33,720 --> 00:01:35,640
over and over and I'm like well I'm

35
00:01:35,640 --> 00:01:38,100
slamming I don't wanna because lazy but

36
00:01:38,100 --> 00:01:40,320
I also like all the data right so I wind

37
00:01:40,320 --> 00:01:43,799
up making robots to do things for me and

38
00:01:43,799 --> 00:01:46,680
the the core of that process is what

39
00:01:46,680 --> 00:01:49,100
we're going to talk about today so

40
00:01:49,100 --> 00:01:51,180
here's what we're going to talk about

41
00:01:51,180 --> 00:01:53,220
we're going to talk about tools for

42
00:01:53,220 --> 00:01:55,799
doing stuff data sources you know we'll

43
00:01:55,799 --> 00:01:59,159
see analyzing manipulating how to go

44
00:01:59,159 --> 00:02:01,259
faster and make your mistakes on a much

45
00:02:01,259 --> 00:02:04,799
bigger scale will be great times when

46
00:02:04,799 --> 00:02:08,098
maybe your text editor isn't the right

47
00:02:08,098 --> 00:02:10,440
tool for this job

48
00:02:10,440 --> 00:02:12,599
um so there we go

49
00:02:12,599 --> 00:02:14,580
so let's talk tools we're going to talk

50
00:02:14,580 --> 00:02:17,940
about uh two tools today one is Sublime

51
00:02:17,940 --> 00:02:20,580
Text which I really like I think it's

52
00:02:20,580 --> 00:02:22,560
beautiful I've I've got a lot of

53
00:02:22,560 --> 00:02:25,980
shortcuts kind of baked into me and it's

54
00:02:25,980 --> 00:02:28,440
built for comfort and notepad plus plus

55
00:02:28,440 --> 00:02:32,879
I also like and it's built for Speed so

56
00:02:32,879 --> 00:02:35,879
one of the biggest differences between

57
00:02:35,879 --> 00:02:38,700
these two editors is that notepad plus

58
00:02:38,700 --> 00:02:41,280
plus loads the actual text just straight

59
00:02:41,280 --> 00:02:43,739
up text editor load it go

60
00:02:43,739 --> 00:02:47,220
uh Sublime Text actually renders

61
00:02:47,220 --> 00:02:48,720
everything in the background so it's

62
00:02:48,720 --> 00:02:51,780
much prettier and for small files great

63
00:02:51,780 --> 00:02:54,120
choice for big files like we're going to

64
00:02:54,120 --> 00:02:55,739
talk about here in a minute

65
00:02:55,739 --> 00:02:57,420
um maybe start with notepad plus plus

66
00:02:57,420 --> 00:03:01,260
Whittle down until Sublime makes a

67
00:03:01,260 --> 00:03:02,459
little bit more sense

68
00:03:02,459 --> 00:03:06,000
right so pick your poison as you will

69
00:03:06,000 --> 00:03:07,620
you know if they're both cups are

70
00:03:07,620 --> 00:03:10,140
probably filled with Viking powder but

71
00:03:10,140 --> 00:03:11,400
you never know

72
00:03:11,400 --> 00:03:14,580
so what sort of things are we talking

73
00:03:14,580 --> 00:03:16,379
about when what are we going to load up

74
00:03:16,379 --> 00:03:17,879
here what are we actually looking at

75
00:03:17,879 --> 00:03:21,379
right so log files if you like

76
00:03:21,379 --> 00:03:24,659
observables are are great and that's

77
00:03:24,659 --> 00:03:26,280
what we're going to use for most of our

78
00:03:26,280 --> 00:03:28,800
uh examples today you can of course

79
00:03:28,800 --> 00:03:32,099
always scrape web data the limited data

80
00:03:32,099 --> 00:03:35,040
you know really any sort of tax where

81
00:03:35,040 --> 00:03:38,580
you got a lot of it and you want to be

82
00:03:38,580 --> 00:03:40,319
able to whittle down to just the things

83
00:03:40,319 --> 00:03:43,080
that you care about in the in the time

84
00:03:43,080 --> 00:03:45,900
that you're you're looking right

85
00:03:45,900 --> 00:03:46,920
so

86
00:03:46,920 --> 00:03:48,780
how do we do it

87
00:03:48,780 --> 00:03:52,879
first uh we do visual analysis which is

88
00:03:52,879 --> 00:03:57,480
a a acute way of saying like let's look

89
00:03:57,480 --> 00:03:59,159
at patterns and and I got this as a text

90
00:03:59,159 --> 00:04:00,840
right but this is a great example of

91
00:04:00,840 --> 00:04:03,480
what visual analysis is so two lines

92
00:04:03,480 --> 00:04:05,220
pulled out a Splunk just looking at the

93
00:04:05,220 --> 00:04:07,680
the trend line here the the timeline

94
00:04:07,680 --> 00:04:10,860
right we see a repeating pattern and

95
00:04:10,860 --> 00:04:12,959
then we see a pattern that does not

96
00:04:12,959 --> 00:04:17,760
repeat right and of course as as uh dfir

97
00:04:17,760 --> 00:04:20,459
Pros we're always interested in the

98
00:04:20,459 --> 00:04:22,560
outliers the things are like what's

99
00:04:22,560 --> 00:04:24,540
going on so

100
00:04:24,540 --> 00:04:28,560
we do the same thing with text files so

101
00:04:28,560 --> 00:04:32,840
this is a screenshot from Sublime Text

102
00:04:32,840 --> 00:04:35,820
and uh specifically the thing I want you

103
00:04:35,820 --> 00:04:38,639
to look at is anywhere in this image do

104
00:04:38,639 --> 00:04:41,280
you see patterns that might make you say

105
00:04:41,280 --> 00:04:43,620
oh I wonder what that is

106
00:04:43,620 --> 00:04:45,840
I'm just going to take a little pause

107
00:04:45,840 --> 00:04:48,780
here so I can breathe it's all good

108
00:04:48,780 --> 00:04:50,580
there are some patterns right over there

109
00:04:50,580 --> 00:04:52,440
on the right so this is a little feature

110
00:04:52,440 --> 00:04:55,740
that Sublime Text has that I use all the

111
00:04:55,740 --> 00:04:58,020
time which is awesome it kind of shows

112
00:04:58,020 --> 00:04:59,699
you a preview of your file and you can

113
00:04:59,699 --> 00:05:02,160
scroll through you'll see just the shape

114
00:05:02,160 --> 00:05:04,259
of the presentation change you'll know

115
00:05:04,259 --> 00:05:06,479
that something within that data changed

116
00:05:06,479 --> 00:05:08,940
right so let's take a little closer look

117
00:05:08,940 --> 00:05:10,919
so here's what these different shapes

118
00:05:10,919 --> 00:05:12,300
actually represent when you go in and

119
00:05:12,300 --> 00:05:14,880
you look at those datas so the top ones

120
00:05:14,880 --> 00:05:18,240
hashes next one down these are IPS then

121
00:05:18,240 --> 00:05:21,259
URLs then payload hashes as opposed to

122
00:05:21,259 --> 00:05:23,400
file hashes that were thrown against

123
00:05:23,400 --> 00:05:26,699
virus total by somebody all right so

124
00:05:26,699 --> 00:05:29,639
just a quick and dirty little way to to

125
00:05:29,639 --> 00:05:31,800
start making sense of the data that you

126
00:05:31,800 --> 00:05:32,699
have

127
00:05:32,699 --> 00:05:36,120
the next thing that we can do is pattern

128
00:05:36,120 --> 00:05:40,020
analysis right so we want to sort

129
00:05:40,020 --> 00:05:42,180
through our data a number of different

130
00:05:42,180 --> 00:05:45,539
ways so we find patterns patterns point

131
00:05:45,539 --> 00:05:48,240
to data so maybe we've got you know

132
00:05:48,240 --> 00:05:50,580
chunks of data whatever and that data as

133
00:05:50,580 --> 00:05:52,500
we analyze that work through it becomes

134
00:05:52,500 --> 00:05:54,000
information that information actually

135
00:05:54,000 --> 00:05:56,520
drives our program drives our

136
00:05:56,520 --> 00:05:58,740
decision-making drives our our responses

137
00:05:58,740 --> 00:06:02,699
all right so this is one way to sort

138
00:06:02,699 --> 00:06:04,800
sort alphabetically what does that

139
00:06:04,800 --> 00:06:07,259
actually look like with data there you

140
00:06:07,259 --> 00:06:09,960
go you got a A whole bunch of URLs for

141
00:06:09,960 --> 00:06:12,600
domains whatever they're jumbled you

142
00:06:12,600 --> 00:06:14,460
want to unjump so alphabetical sort

143
00:06:14,460 --> 00:06:17,160
quick and dirty super easy and this

144
00:06:17,160 --> 00:06:18,660
might might

145
00:06:18,660 --> 00:06:21,120
um unearth some patterns that you can

146
00:06:21,120 --> 00:06:22,500
make sense of

147
00:06:22,500 --> 00:06:24,900
another great way to search temporal

148
00:06:24,900 --> 00:06:27,300
searching if you if you uh

149
00:06:27,300 --> 00:06:29,340
you know if you speed your data up to 88

150
00:06:29,340 --> 00:06:31,740
miles an hour then you can use time

151
00:06:31,740 --> 00:06:33,600
stamps in there and maybe you'll see

152
00:06:33,600 --> 00:06:37,319
some sort of a pattern and there

153
00:06:37,319 --> 00:06:42,060
another opportunity here is like what is

154
00:06:42,060 --> 00:06:44,639
it what kind of data actually is there

155
00:06:44,639 --> 00:06:47,699
so this is the end of a whole bunch of

156
00:06:47,699 --> 00:06:50,639
of reject scene and stripping out but

157
00:06:50,639 --> 00:06:56,220
these are the 16 categories of data in

158
00:06:56,220 --> 00:06:59,100
um everything that my this instance

159
00:06:59,100 --> 00:07:04,319
knows about sofas e slash app 28 fancy

160
00:07:04,319 --> 00:07:05,699
bear slash whatever you want to call

161
00:07:05,699 --> 00:07:08,699
right so I just said Miss give me all

162
00:07:08,699 --> 00:07:10,319
the data that you have about this stuff

163
00:07:10,319 --> 00:07:14,580
and I gave me 1.4 million lines uh of

164
00:07:14,580 --> 00:07:19,860
comma separated data and these 16 16

165
00:07:19,860 --> 00:07:23,280
categories once you get down to it

166
00:07:23,280 --> 00:07:26,400
another way is counting what you have so

167
00:07:26,400 --> 00:07:28,740
like here if we just look for things

168
00:07:28,740 --> 00:07:31,860
that are in you know like associated

169
00:07:31,860 --> 00:07:35,220
with file names I've got almost 5100

170
00:07:35,220 --> 00:07:37,440
file names but if you count something

171
00:07:37,440 --> 00:07:39,840
different oh sorry

172
00:07:39,840 --> 00:07:42,539
fail oh it's gonna say is if you count

173
00:07:42,539 --> 00:07:44,819
something different like Yara rules in

174
00:07:44,819 --> 00:07:47,220
that same data set then you'll see that

175
00:07:47,220 --> 00:07:49,199
there are two I'll come back to that

176
00:07:49,199 --> 00:07:50,759
maybe

177
00:07:50,759 --> 00:07:55,740
um so how can we go faster in this whole

178
00:07:55,740 --> 00:07:58,259
in this whole process right how do we

179
00:07:58,259 --> 00:08:00,060
speed it up

180
00:08:00,060 --> 00:08:02,639
and why do we want to

181
00:08:02,639 --> 00:08:05,580
so it's uh

182
00:08:05,580 --> 00:08:07,800
the process of amplification is awesome

183
00:08:07,800 --> 00:08:10,380
right LSU working scale lets you handle

184
00:08:10,380 --> 00:08:14,340
things like a 1.4 1.5 million line CSV

185
00:08:14,340 --> 00:08:16,979
no problem spend a few minutes instead

186
00:08:16,979 --> 00:08:20,039
of hours scrolling through it but

187
00:08:20,039 --> 00:08:24,360
there's a little bit of an issue with

188
00:08:24,360 --> 00:08:27,840
your amplification so it amplifies once

189
00:08:27,840 --> 00:08:29,340
once you start working at scale we'll

190
00:08:29,340 --> 00:08:30,660
start working faster you amplify

191
00:08:30,660 --> 00:08:32,820
mistakes in the same way that you

192
00:08:32,820 --> 00:08:33,979
amplify

193
00:08:33,979 --> 00:08:37,679
wins right and so here you can see that

194
00:08:37,679 --> 00:08:40,679
I replaced all 8 million eight hundred

195
00:08:40,679 --> 00:08:44,279
and two thousand wait 100 yeah I think

196
00:08:44,279 --> 00:08:48,959
that's 8.8 million uh hits with a whole

197
00:08:48,959 --> 00:08:51,180
lot of nothing so that wasn't helpful

198
00:08:51,180 --> 00:08:53,339
and then you get to go to your team or

199
00:08:53,339 --> 00:08:56,940
your boss be like oh that was dumb so

200
00:08:56,940 --> 00:08:59,640
um the way that we're gonna start with

201
00:08:59,640 --> 00:09:02,779
amplification is by

202
00:09:02,779 --> 00:09:05,220
deduplicating our data right we don't

203
00:09:05,220 --> 00:09:07,500
want to don't want to have multiple

204
00:09:07,500 --> 00:09:09,540
versions of our data that we're working

205
00:09:09,540 --> 00:09:11,820
on so strip out everything and and our

206
00:09:11,820 --> 00:09:13,680
text editors make that

207
00:09:13,680 --> 00:09:17,040
super easy both of both Supply and text

208
00:09:17,040 --> 00:09:19,200
and

209
00:09:19,200 --> 00:09:22,740
um and notepad plus plus have just click

210
00:09:22,740 --> 00:09:25,860
into edit and Sublime preview lines to

211
00:09:25,860 --> 00:09:28,620
unique and that'll strip out duplicates

212
00:09:28,620 --> 00:09:32,180
bang done and in notepad plus plus

213
00:09:32,180 --> 00:09:34,500
similar thing go to line operations

214
00:09:34,500 --> 00:09:38,160
remove duplicate lines and just a little

215
00:09:38,160 --> 00:09:42,300
a little uh Pro tip with this one is

216
00:09:42,300 --> 00:09:44,700
that the deduplicating so

217
00:09:44,700 --> 00:09:46,980
we have a really good file and you start

218
00:09:46,980 --> 00:09:48,600
cutting stuff out right you're going to

219
00:09:48,600 --> 00:09:50,040
replace it with nothing right you'll

220
00:09:50,040 --> 00:09:51,779
replace it in all values so those lines

221
00:09:51,779 --> 00:09:53,760
just be gone but that doesn't mean that

222
00:09:53,760 --> 00:09:55,380
your text file is automatically going to

223
00:09:55,380 --> 00:09:58,380
collapse so you'll you'll eventually if

224
00:09:58,380 --> 00:10:00,300
you're if you're really working this

225
00:10:00,300 --> 00:10:03,120
process you have a really long file lots

226
00:10:03,120 --> 00:10:05,339
of lots of rows they're empty and you

227
00:10:05,339 --> 00:10:06,240
wanna

228
00:10:06,240 --> 00:10:08,220
you want to just collapse all those and

229
00:10:08,220 --> 00:10:10,380
so this is a great way to to do that

230
00:10:10,380 --> 00:10:12,360
I'll just take out

231
00:10:12,360 --> 00:10:14,339
every line is blank except for the first

232
00:10:14,339 --> 00:10:17,279
one because that's not a duplicate

233
00:10:17,279 --> 00:10:20,160
so we have here you know almost a

234
00:10:20,160 --> 00:10:22,100
million lines saying oh it's type text

235
00:10:22,100 --> 00:10:26,279
and if we dedupe you know we go down to

236
00:10:26,279 --> 00:10:30,600
74 lines and we can see that here are

237
00:10:30,600 --> 00:10:34,080
you know things in that type field in

238
00:10:34,080 --> 00:10:35,040
this

239
00:10:35,040 --> 00:10:38,459
in this document

240
00:10:38,459 --> 00:10:42,300
so another way to amplify kind of

241
00:10:42,300 --> 00:10:45,060
turbocharged go faster is

242
00:10:45,060 --> 00:10:45,839
um

243
00:10:45,839 --> 00:10:49,740
to diff two or more documents and the

244
00:10:49,740 --> 00:10:51,240
more part is really interesting to me

245
00:10:51,240 --> 00:10:53,399
like I I've dipped a lot of things I'm

246
00:10:53,399 --> 00:10:56,040
sure you have to you know and one of the

247
00:10:56,040 --> 00:10:59,040
reasons that I started looking at how

248
00:10:59,040 --> 00:11:01,740
can I compare multiple documents

249
00:11:01,740 --> 00:11:05,519
multiple values in one document

250
00:11:05,519 --> 00:11:08,700
um in a non-diff way is that let's be

251
00:11:08,700 --> 00:11:11,399
honest I can never understand how to

252
00:11:11,399 --> 00:11:13,620
interpret diff as the results come out

253
00:11:13,620 --> 00:11:15,360
like yeah let's point this way or that

254
00:11:15,360 --> 00:11:17,519
way is does that mean that you know that

255
00:11:17,519 --> 00:11:19,140
file doesn't have it this file doesn't

256
00:11:19,140 --> 00:11:21,899
have who knows right so I wanted an

257
00:11:21,899 --> 00:11:24,540
easier way and it turns out that this

258
00:11:24,540 --> 00:11:27,420
way will allow you to diff as many files

259
00:11:27,420 --> 00:11:30,420
as you want at once so it's not an exact

260
00:11:30,420 --> 00:11:34,680
if but what it will tell you is what

261
00:11:34,680 --> 00:11:37,380
does not exist in the other files all

262
00:11:37,380 --> 00:11:40,800
right so here we have fruit computers

263
00:11:40,800 --> 00:11:42,959
another random list and the difference

264
00:11:42,959 --> 00:11:47,640
right so easy peasy files so you can see

265
00:11:47,640 --> 00:11:50,459
what's there find basic list and then

266
00:11:50,459 --> 00:11:53,339
all I did here to diff them is again

267
00:11:53,339 --> 00:11:55,920
with a permute lines right so what

268
00:11:55,920 --> 00:11:57,240
that's going to do is it's going to

269
00:11:57,240 --> 00:12:01,500
leave the first instance of any data

270
00:12:01,500 --> 00:12:04,140
that the editor comes across and remove

271
00:12:04,140 --> 00:12:08,160
all others so for instance you can see

272
00:12:08,160 --> 00:12:11,880
that in uh the fruit category we've got

273
00:12:11,880 --> 00:12:14,339
apple and then computers we also have

274
00:12:14,339 --> 00:12:18,420
apple right so when we diff that

275
00:12:18,420 --> 00:12:23,519
Apple goes away from the second list and

276
00:12:23,519 --> 00:12:25,800
Cherry goes away from another Randall

277
00:12:25,800 --> 00:12:28,380
list those are all gone the reason I

278
00:12:28,380 --> 00:12:30,839
highlighted the Mac here is because you

279
00:12:30,839 --> 00:12:33,000
can see that Mac the second Mac did not

280
00:12:33,000 --> 00:12:36,240
go away because you can set your

281
00:12:36,240 --> 00:12:38,700
permutation to be case sensitive or

282
00:12:38,700 --> 00:12:40,980
insensitive and just depending on your

283
00:12:40,980 --> 00:12:45,180
use case that can be both important and

284
00:12:45,180 --> 00:12:47,459
helpful so

285
00:12:47,459 --> 00:12:50,339
that's a

286
00:12:50,339 --> 00:12:53,040
a great use case that has

287
00:12:53,040 --> 00:12:55,260
um just before I dive into regex that

288
00:12:55,260 --> 00:12:57,720
whole different thing is can be

289
00:12:57,720 --> 00:12:59,820
surprisingly useful and and I've got an

290
00:12:59,820 --> 00:13:02,519
example I'm gonna swing back around here

291
00:13:02,519 --> 00:13:05,760
with so hold on to that thought for just

292
00:13:05,760 --> 00:13:09,300
a sec but then regex regex always makes

293
00:13:09,300 --> 00:13:10,560
me well

294
00:13:10,560 --> 00:13:13,800
I was gonna say always it often gives me

295
00:13:13,800 --> 00:13:17,100
uh warm fuzzies when it works and it

296
00:13:17,100 --> 00:13:19,500
makes me pound my mouse a keyboard when

297
00:13:19,500 --> 00:13:21,420
it doesn't work and so hopefully

298
00:13:21,420 --> 00:13:25,260
stepping through this uh will give any

299
00:13:25,260 --> 00:13:26,760
of you who haven't spent a lot of time

300
00:13:26,760 --> 00:13:30,839
on projects some ideas about how to make

301
00:13:30,839 --> 00:13:36,360
it go and in the repo that um I've

302
00:13:36,360 --> 00:13:39,779
linked to both at both fans of the stack

303
00:13:39,779 --> 00:13:41,700
um there are some cheat sheets and some

304
00:13:41,700 --> 00:13:44,880
resources around regex that I've linked

305
00:13:44,880 --> 00:13:46,260
out to so

306
00:13:46,260 --> 00:13:49,680
I highly recommend getting regex under

307
00:13:49,680 --> 00:13:51,959
your fingers and

308
00:13:51,959 --> 00:13:54,060
um and just play with it and seeing what

309
00:13:54,060 --> 00:13:56,519
it can do and kind of working up the

310
00:13:56,519 --> 00:13:58,440
learning curve of it because it really

311
00:13:58,440 --> 00:14:01,560
has big payoffs down the road right so

312
00:14:01,560 --> 00:14:03,839
project stands for regular expressions

313
00:14:03,839 --> 00:14:07,139
and at its core it's just a way to find

314
00:14:07,139 --> 00:14:10,200
patterns in text right so regex might

315
00:14:10,200 --> 00:14:13,260
look like this and this is an excellent

316
00:14:13,260 --> 00:14:16,079
like super warm fuzzy easy to wrap your

317
00:14:16,079 --> 00:14:19,079
brain around example I know right so I

318
00:14:19,079 --> 00:14:21,000
did this on purpose a little bit

319
00:14:21,000 --> 00:14:24,839
um what we have here are two different

320
00:14:24,839 --> 00:14:26,839
kinds of Expressions so one's in blue

321
00:14:26,839 --> 00:14:31,079
are basically non-caption groups which

322
00:14:31,079 --> 00:14:33,000
means we're going to match something but

323
00:14:33,000 --> 00:14:34,620
we don't actually care about it right

324
00:14:34,620 --> 00:14:36,779
and then the ones in green are capturing

325
00:14:36,779 --> 00:14:38,279
groups which means we're going to match

326
00:14:38,279 --> 00:14:40,620
something and we do care about it and

327
00:14:40,620 --> 00:14:43,860
just in case anyone's interested a DOT

328
00:14:43,860 --> 00:14:46,680
image X means match any character the

329
00:14:46,680 --> 00:14:50,699
plus means match as more characters as

330
00:14:50,699 --> 00:14:53,339
many as you can the question mark means

331
00:14:53,339 --> 00:14:57,300
match as many characters sorry as few

332
00:14:57,300 --> 00:14:59,940
characters as it takes to get to the

333
00:14:59,940 --> 00:15:01,920
next thing right so basically

334
00:15:01,920 --> 00:15:04,760
the little each little green chunk says

335
00:15:04,760 --> 00:15:07,079
match from

336
00:15:07,079 --> 00:15:10,560
the preceding comma grab anything to the

337
00:15:10,560 --> 00:15:12,300
next comma right that's what I'm looking

338
00:15:12,300 --> 00:15:16,199
for because this CSV data so in this

339
00:15:16,199 --> 00:15:17,040
case

340
00:15:17,040 --> 00:15:20,519
that's what I built and so if you look

341
00:15:20,519 --> 00:15:24,180
at the type of fields the field of names

342
00:15:24,180 --> 00:15:27,720
in the CSV this missed object that that

343
00:15:27,720 --> 00:15:29,880
we've been kind of looking at here these

344
00:15:29,880 --> 00:15:31,620
are all the different things right blue

345
00:15:31,620 --> 00:15:32,820
things are stuff I don't care about

346
00:15:32,820 --> 00:15:35,220
green stuff is stuff I want

347
00:15:35,220 --> 00:15:37,920
and so I wanted to see if I can go back

348
00:15:37,920 --> 00:15:40,620
oh cool I can go back so

349
00:15:40,620 --> 00:15:42,600
it just lines up

350
00:15:42,600 --> 00:15:45,660
same sound right and I do want to point

351
00:15:45,660 --> 00:15:46,440
out

352
00:15:46,440 --> 00:15:49,139
just for about this tiny little comma

353
00:15:49,139 --> 00:15:52,199
not in any capture group it's just

354
00:15:52,199 --> 00:15:54,720
straight up match this comma and I did

355
00:15:54,720 --> 00:15:56,160
that because that's

356
00:15:56,160 --> 00:15:57,420
that's

357
00:15:57,420 --> 00:16:00,720
um the last little group that needed

358
00:16:00,720 --> 00:16:02,399
um needle a little bit different

359
00:16:02,399 --> 00:16:04,800
definition and you'll find things that

360
00:16:04,800 --> 00:16:06,480
as you start playing with with bigger

361
00:16:06,480 --> 00:16:07,800
rejects you'll find something that comes

362
00:16:07,800 --> 00:16:10,199
along with that it's like what does this

363
00:16:10,199 --> 00:16:11,880
actually look like when we're using it

364
00:16:11,880 --> 00:16:15,420
right so again 1.5 billion lines of CSV

365
00:16:15,420 --> 00:16:19,260
data are from this around uh so fast

366
00:16:19,260 --> 00:16:21,000
right and so this is what it looks like

367
00:16:21,000 --> 00:16:23,519
just a bunch of a bunch of stuff

368
00:16:23,519 --> 00:16:26,880
and then what I did is I plugged in that

369
00:16:26,880 --> 00:16:29,699
that regex that we just looked at

370
00:16:29,699 --> 00:16:33,000
and the replace width is simply saying

371
00:16:33,000 --> 00:16:36,240
replace each line that you find with

372
00:16:36,240 --> 00:16:38,220
those capturing groups right the the

373
00:16:38,220 --> 00:16:39,779
things that we care about those things

374
00:16:39,779 --> 00:16:41,699
that were in green we're just going to

375
00:16:41,699 --> 00:16:44,040
stack those up next to each other

376
00:16:44,040 --> 00:16:48,240
and and it'll come out and and be

377
00:16:48,240 --> 00:16:50,820
fantastic so

378
00:16:50,820 --> 00:16:54,120
um let me go back and just talk about

379
00:16:54,120 --> 00:16:56,279
that just a little bit more so what

380
00:16:56,279 --> 00:16:58,980
you'll get there the end of this is

381
00:16:58,980 --> 00:17:02,360
you'll have let me go back one more

382
00:17:02,360 --> 00:17:05,459
you'll have the

383
00:17:05,459 --> 00:17:07,380
um category of object that we're talking

384
00:17:07,380 --> 00:17:11,099
about so you know as a an IP address

385
00:17:11,099 --> 00:17:14,339
there's a domain is it a URL is it a

386
00:17:14,339 --> 00:17:16,020
hash what is it

387
00:17:16,020 --> 00:17:19,380
um we'll have the type which which

388
00:17:19,380 --> 00:17:22,260
just depending on who built from this

389
00:17:22,260 --> 00:17:24,900
data now that'll be whatever it is the

390
00:17:24,900 --> 00:17:28,799
value is the actual observable that

391
00:17:28,799 --> 00:17:31,200
um we're probably interested in if we're

392
00:17:31,200 --> 00:17:33,540
feeding us to other tools

393
00:17:33,540 --> 00:17:36,059
um the date coming out of this like you

394
00:17:36,059 --> 00:17:40,080
guys saw is seconds from the epoch and

395
00:17:40,080 --> 00:17:41,940
that may or may not be useful to you in

396
00:17:41,940 --> 00:17:46,740
an object name is just if there's data

397
00:17:46,740 --> 00:17:49,679
all right so that'll all just get lined

398
00:17:49,679 --> 00:17:52,880
up here and it'll be fantastic

399
00:17:52,880 --> 00:17:56,400
in the repo there's document that shows

400
00:17:56,400 --> 00:17:58,200
what that looks like

401
00:17:58,200 --> 00:18:02,100
um and and so we may or may not have an

402
00:18:02,100 --> 00:18:05,700
example that come up here uh we'll see

403
00:18:05,700 --> 00:18:08,460
here so these patterns that we're

404
00:18:08,460 --> 00:18:10,140
talking about right when you go into

405
00:18:10,140 --> 00:18:12,059
your text editor you start figuring out

406
00:18:12,059 --> 00:18:14,820
how do I actually grab the pieces of

407
00:18:14,820 --> 00:18:18,660
data I want out of mist out of an active

408
00:18:18,660 --> 00:18:20,640
directory dump out of whatever you're

409
00:18:20,640 --> 00:18:22,620
looking at right these all become

410
00:18:22,620 --> 00:18:24,480
scriptable you've established what your

411
00:18:24,480 --> 00:18:26,900
regex is and now you can just

412
00:18:26,900 --> 00:18:30,000
mostly lift and shift the regex that

413
00:18:30,000 --> 00:18:31,580
you're using in one of these editors

414
00:18:31,580 --> 00:18:35,340
into your script there may be

415
00:18:35,340 --> 00:18:37,140
um a little bit of monkeying around that

416
00:18:37,140 --> 00:18:38,700
you need to do to make everything work

417
00:18:38,700 --> 00:18:41,880
because these editors use different

418
00:18:41,880 --> 00:18:45,120
variations of the regex engine and it

419
00:18:45,120 --> 00:18:46,980
just depends what language you're

420
00:18:46,980 --> 00:18:48,780
scripting in whether it's an exact lift

421
00:18:48,780 --> 00:18:50,400
and shift or whether there's a little

422
00:18:50,400 --> 00:18:53,220
more uh trial narrow there but it's all

423
00:18:53,220 --> 00:18:56,360
scaffold to go faster and

424
00:18:56,360 --> 00:18:59,280
make things happen really well so one of

425
00:18:59,280 --> 00:19:00,720
my use cases

426
00:19:00,720 --> 00:19:05,400
um and my current org was to build out a

427
00:19:05,400 --> 00:19:08,400
bunch of rejects that identified assets

428
00:19:08,400 --> 00:19:10,200
by

429
00:19:10,200 --> 00:19:12,600
um custodial group right and then tag

430
00:19:12,600 --> 00:19:16,260
them and and uh make that

431
00:19:16,260 --> 00:19:18,840
tag them in our vulnerability scanner so

432
00:19:18,840 --> 00:19:20,460
that when we're looking at stuff in the

433
00:19:20,460 --> 00:19:23,100
bond scanner coming back

434
00:19:23,100 --> 00:19:24,299
um

435
00:19:24,299 --> 00:19:27,419
to to try to understand who owns what

436
00:19:27,419 --> 00:19:28,980
it's a lot easier

437
00:19:28,980 --> 00:19:30,120
so

438
00:19:30,120 --> 00:19:34,320
lots of different use cases and this is

439
00:19:34,320 --> 00:19:37,440
um part of what that process looks like

440
00:19:37,440 --> 00:19:39,120
that tagging process right so you can

441
00:19:39,120 --> 00:19:42,720
see some rejects here and it looks

442
00:19:42,720 --> 00:19:45,120
kind of intimidating and like a lot of

443
00:19:45,120 --> 00:19:47,220
stuff but just talking through it a

444
00:19:47,220 --> 00:19:48,660
little bit and this is all spelled out

445
00:19:48,660 --> 00:19:52,140
in a lot more detail in any regex GG

446
00:19:52,140 --> 00:19:55,740
find or regex101.com lots of things that

447
00:19:55,740 --> 00:19:59,700
begin linked to in the additional

448
00:19:59,700 --> 00:20:01,980
resources right so this first one let's

449
00:20:01,980 --> 00:20:04,740
just look at that so desktop things look

450
00:20:04,740 --> 00:20:07,320
like the little carrot is the same start

451
00:20:07,320 --> 00:20:09,120
at the beginning of the line and then

452
00:20:09,120 --> 00:20:13,260
inside the brackets are ldmp right and

453
00:20:13,260 --> 00:20:17,039
so what that says is there's a range of

454
00:20:17,039 --> 00:20:20,160
four characters and if one of those

455
00:20:20,160 --> 00:20:21,720
characters is at the beginning of the

456
00:20:21,720 --> 00:20:22,559
line

457
00:20:22,559 --> 00:20:27,660
followed by slash D is a decimal right

458
00:20:27,660 --> 00:20:30,900
so zero through nine then adopt a star

459
00:20:30,900 --> 00:20:33,720
means anything else that's probably a

460
00:20:33,720 --> 00:20:37,260
desktop machine and so I scripted that

461
00:20:37,260 --> 00:20:40,320
out use that to apply tags and then at

462
00:20:40,320 --> 00:20:42,240
some point that'll require you know some

463
00:20:42,240 --> 00:20:45,960
some uh return or review by human but

464
00:20:45,960 --> 00:20:48,600
that bulk of tagging you know that was

465
00:20:48,600 --> 00:20:51,439
six thousand assets

466
00:20:51,539 --> 00:20:54,299
so that's cool

467
00:20:54,299 --> 00:20:57,900
all right so examples

468
00:20:57,900 --> 00:21:01,260
we're talking about that that CSV again

469
00:21:01,260 --> 00:21:02,640
um same on we've been talking about

470
00:21:02,640 --> 00:21:05,640
process of denoisification we start with

471
00:21:05,640 --> 00:21:08,640
this then we put in that big stretch

472
00:21:08,640 --> 00:21:10,860
that says Hey I want these five things

473
00:21:10,860 --> 00:21:13,080
we get that down to this and that takes

474
00:21:13,080 --> 00:21:15,539
like if you just like literally take

475
00:21:15,539 --> 00:21:18,179
this uh the clean example file from the

476
00:21:18,179 --> 00:21:22,620
repo you cut and paste the regex in

477
00:21:22,620 --> 00:21:25,140
it'll take your your text editor now

478
00:21:25,140 --> 00:21:27,900
maybe 60 seconds or something to go

479
00:21:27,900 --> 00:21:31,860
through and and mow down all the all the

480
00:21:31,860 --> 00:21:34,799
craft out of there and leave you with us

481
00:21:34,799 --> 00:21:38,159
behind if you want just observables same

482
00:21:38,159 --> 00:21:40,080
process just a little a little more

483
00:21:40,080 --> 00:21:42,360
right and

484
00:21:42,360 --> 00:21:47,400
and this is the hallway to handle

485
00:21:47,400 --> 00:21:49,440
all this all the static you can do the

486
00:21:49,440 --> 00:21:52,020
same thing with with blog files whatever

487
00:21:52,020 --> 00:21:54,059
you want

488
00:21:54,059 --> 00:21:54,840
um

489
00:21:54,840 --> 00:21:58,200
says that's one way of handling data

490
00:21:58,200 --> 00:22:00,299
coming out of this

491
00:22:00,299 --> 00:22:04,260
um taking a look at another example here

492
00:22:04,260 --> 00:22:07,500
you know is like what sort of data do I

493
00:22:07,500 --> 00:22:09,000
have what kind of indicator should I

494
00:22:09,000 --> 00:22:09,780
have I don't really care what the

495
00:22:09,780 --> 00:22:12,179
indicators are I'm more interested in

496
00:22:12,179 --> 00:22:15,240
what sorts of data showed up in this

497
00:22:15,240 --> 00:22:19,260
file and so this is doing a similar sort

498
00:22:19,260 --> 00:22:20,940
of of

499
00:22:20,940 --> 00:22:24,419
just rip and replace to show us data but

500
00:22:24,419 --> 00:22:26,880
instead of focusing on indicators we're

501
00:22:26,880 --> 00:22:30,900
focusing here on the type column in in

502
00:22:30,900 --> 00:22:33,620
that CSV

503
00:22:34,500 --> 00:22:37,620
and you can see here we've got like 71

504
00:22:37,620 --> 00:22:41,820
000 matches for uh md5 hashes

505
00:22:41,820 --> 00:22:46,919
and we've got two matches for uh

506
00:22:46,919 --> 00:22:50,520
uh some some Sigma in here and so I

507
00:22:50,520 --> 00:22:52,020
don't know what's going to be more

508
00:22:52,020 --> 00:22:55,860
useful in in your

509
00:22:55,860 --> 00:22:56,580
um

510
00:22:56,580 --> 00:22:59,640
your environment whether you know you're

511
00:22:59,640 --> 00:23:02,100
mature enough to be using Sigma or

512
00:23:02,100 --> 00:23:04,200
whether like straight up hashes that you

513
00:23:04,200 --> 00:23:05,880
can dump into your sim or something like

514
00:23:05,880 --> 00:23:08,100
that as minor speed I know

515
00:23:08,100 --> 00:23:10,799
um we have we have various use cases so

516
00:23:10,799 --> 00:23:13,440
it's just a matter of of kind of baking

517
00:23:13,440 --> 00:23:15,840
the cake to to your taste

518
00:23:15,840 --> 00:23:18,240
or maybe mixing a cocktail is a better

519
00:23:18,240 --> 00:23:19,860
analogy

520
00:23:19,860 --> 00:23:21,900
and then again you know just another

521
00:23:21,900 --> 00:23:25,860
little sort find anything that's network

522
00:23:25,860 --> 00:23:28,559
activity show me what do we have we've

523
00:23:28,559 --> 00:23:31,380
got almost 240 000 hits right and so

524
00:23:31,380 --> 00:23:33,600
this is just a way to understand your

525
00:23:33,600 --> 00:23:35,520
data better to kind of wrap your your

526
00:23:35,520 --> 00:23:38,940
arms around it and to to say oh this is

527
00:23:38,940 --> 00:23:40,980
what I've got going on

528
00:23:40,980 --> 00:23:42,900
so

529
00:23:42,900 --> 00:23:45,780
um I may have used regex to fire a

530
00:23:45,780 --> 00:23:46,980
vendor

531
00:23:46,980 --> 00:23:49,440
sorry not sorry

532
00:23:49,440 --> 00:23:53,880
um we were were paying a vendor to do

533
00:23:53,880 --> 00:23:56,700
some brand monitoring including domain

534
00:23:56,700 --> 00:23:58,799
spotting analysis forms right every day

535
00:23:58,799 --> 00:24:01,860
sort of kind of they'd send us one or

536
00:24:01,860 --> 00:24:04,320
maybe more csvs off here's the stuff

537
00:24:04,320 --> 00:24:07,260
that we saw right and

538
00:24:07,260 --> 00:24:08,700
um I was the one who's picking up the

539
00:24:08,700 --> 00:24:11,039
csvs as you can imagine a super

540
00:24:11,039 --> 00:24:14,280
scintillating uh work to work through

541
00:24:14,280 --> 00:24:17,039
csvs that come in the same day

542
00:24:17,039 --> 00:24:19,679
um and be like oh you know false

543
00:24:19,679 --> 00:24:21,299
positive false positive false pawns

544
00:24:21,299 --> 00:24:25,919
whatever or you gave us this before and

545
00:24:25,919 --> 00:24:28,919
and it's still not right right so it's

546
00:24:28,919 --> 00:24:32,159
literally just a CSV with URLs anywhere

547
00:24:32,159 --> 00:24:35,460
between two and a couple of times more

548
00:24:35,460 --> 00:24:38,880
than a hundred you know and so

549
00:24:38,880 --> 00:24:42,299
because we saw those vendor you know as

550
00:24:42,299 --> 00:24:43,799
we're looking at the data we saw them

551
00:24:43,799 --> 00:24:45,780
they're like hey I think we've seen this

552
00:24:45,780 --> 00:24:47,520
before pretty sure we saw that one

553
00:24:47,520 --> 00:24:50,460
before we needed a way to track what

554
00:24:50,460 --> 00:24:52,580
what was actually going on there right

555
00:24:52,580 --> 00:24:56,400
so hey data deduplication to the rescue

556
00:24:56,400 --> 00:24:59,520
so if you look here there are four

557
00:24:59,520 --> 00:25:02,039
samples csvs the first one has one two

558
00:25:02,039 --> 00:25:04,980
three the first the second one has four

559
00:25:04,980 --> 00:25:09,000
five six three the third one has seven

560
00:25:09,000 --> 00:25:11,400
five two three and the last one has two

561
00:25:11,400 --> 00:25:14,460
and six right so when we de-duplicate

562
00:25:14,460 --> 00:25:19,260
that we see all my actually have seven

563
00:25:19,260 --> 00:25:23,159
new URLs so a little call out here with

564
00:25:23,159 --> 00:25:25,380
a deduplication you see the like the

565
00:25:25,380 --> 00:25:27,480
three equal signs and then a date stamp

566
00:25:27,480 --> 00:25:30,120
if you're gonna track data over time

567
00:25:30,120 --> 00:25:33,779
it's really important to have some sort

568
00:25:33,779 --> 00:25:37,620
of some some way of when you're flicking

569
00:25:37,620 --> 00:25:39,900
through your data of C here's a break

570
00:25:39,900 --> 00:25:41,520
between this kind of data that kind of

571
00:25:41,520 --> 00:25:43,919
data data from yesterday versus data

572
00:25:43,919 --> 00:25:46,620
from today this is straight up just my

573
00:25:46,620 --> 00:25:48,659
own convention because I know where the

574
00:25:48,659 --> 00:25:50,460
equal sign is on the keyboard I can find

575
00:25:50,460 --> 00:25:52,320
it easily and just put it out there

576
00:25:52,320 --> 00:25:54,600
having a date stamps is nice from my

577
00:25:54,600 --> 00:25:57,000
perspective because I feel like that

578
00:25:57,000 --> 00:25:59,520
helps keep things organized and you can

579
00:25:59,520 --> 00:26:02,100
see even though there are no hits for

580
00:26:02,100 --> 00:26:04,679
the last day here Ox fourth there's

581
00:26:04,679 --> 00:26:07,320
still the date stamp so the next date

582
00:26:07,320 --> 00:26:09,360
stamp in the series will be August 5th

583
00:26:09,360 --> 00:26:12,000
there won't be any URL about it between

584
00:26:12,000 --> 00:26:14,220
the fourth and the fifth which we know

585
00:26:14,220 --> 00:26:16,860
because we've built the process I mean

586
00:26:16,860 --> 00:26:19,559
you know we know that that means there

587
00:26:19,559 --> 00:26:22,020
weren't any unique URLs submitted for

588
00:26:22,020 --> 00:26:24,000
that day so going back to the vendor

589
00:26:24,000 --> 00:26:25,799
thing you know we we tracked our their

590
00:26:25,799 --> 00:26:28,140
progress for months we talked to them

591
00:26:28,140 --> 00:26:30,779
about about the process didn't get

592
00:26:30,779 --> 00:26:33,539
anything better and eventually the org

593
00:26:33,539 --> 00:26:35,640
fired the vendor and hired somebody else

594
00:26:35,640 --> 00:26:38,340
to do the same thing because they gave

595
00:26:38,340 --> 00:26:40,340
us data that was more

596
00:26:40,340 --> 00:26:43,380
aligned with what we thought was useful

597
00:26:43,380 --> 00:26:45,659
so you don't need them

598
00:26:45,659 --> 00:26:50,220
and here uh supersedents or as I like to

599
00:26:50,220 --> 00:26:52,580
think of it super dupercedence because

600
00:26:52,580 --> 00:26:57,240
if any of you have been in vulnerability

601
00:26:57,240 --> 00:27:00,000
management you've probably had a

602
00:27:00,000 --> 00:27:02,100
conversation that goes something like

603
00:27:02,100 --> 00:27:05,340
this oh we can't patch that or we

604
00:27:05,340 --> 00:27:08,039
already have patched that but it's just

605
00:27:08,039 --> 00:27:10,080
a matter of supersedes right you know

606
00:27:10,080 --> 00:27:12,480
like we we have a KB installed in this

607
00:27:12,480 --> 00:27:14,940
Microsoft box that supersedes all the

608
00:27:14,940 --> 00:27:16,679
other patches so even though your phone

609
00:27:16,679 --> 00:27:18,720
scanner says that needs this thing

610
00:27:18,720 --> 00:27:20,520
installed it's actually superseded by

611
00:27:20,520 --> 00:27:23,700
that thing and whenever somebody comes

612
00:27:23,700 --> 00:27:26,640
to me and says oh we can't patch that my

613
00:27:26,640 --> 00:27:30,179
response is well fight me right so we

614
00:27:30,179 --> 00:27:32,940
have conversations and eventually what I

615
00:27:32,940 --> 00:27:34,320
wound up doing

616
00:27:34,320 --> 00:27:37,700
um as as kind of a proof of account

617
00:27:37,700 --> 00:27:41,400
concept and also Stephen public I will

618
00:27:41,400 --> 00:27:43,320
go all the way because I went and

619
00:27:43,320 --> 00:27:45,480
scraped Microsoft's

620
00:27:45,480 --> 00:27:49,320
um platform for all the KBs in the

621
00:27:49,320 --> 00:27:53,460
supersedence Chain by platform for a

622
00:27:53,460 --> 00:27:57,000
particular msft Windows installer flaw

623
00:27:57,000 --> 00:27:59,880
right I built this all out and then I

624
00:27:59,880 --> 00:28:00,779
used

625
00:28:00,779 --> 00:28:04,020
scripting scriptable regex to basically

626
00:28:04,020 --> 00:28:07,140
say all right go find all the KBS

627
00:28:07,140 --> 00:28:09,659
installed on this machine that they're

628
00:28:09,659 --> 00:28:11,880
saying they can't patch go check them

629
00:28:11,880 --> 00:28:15,140
against all these KBS right and show me

630
00:28:15,140 --> 00:28:18,900
where any of the KBs in the entire super

631
00:28:18,900 --> 00:28:22,559
sedans chain are installed and then if

632
00:28:22,559 --> 00:28:25,200
there's any one of these KBS per

633
00:28:25,200 --> 00:28:27,240
platform installed right the things

634
00:28:27,240 --> 00:28:29,700
should be fixed because supersedes and

635
00:28:29,700 --> 00:28:32,279
so long story short now in fact now the

636
00:28:32,279 --> 00:28:34,380
KBS are actually installed

637
00:28:34,380 --> 00:28:35,700
so

638
00:28:35,700 --> 00:28:37,679
yeah

639
00:28:37,679 --> 00:28:39,240
um hopefully

640
00:28:39,240 --> 00:28:41,279
you guys don't have to have that that

641
00:28:41,279 --> 00:28:43,260
conversation with people uh with your

642
00:28:43,260 --> 00:28:45,120
patching teams with your custodial teams

643
00:28:45,120 --> 00:28:46,679
but if you

644
00:28:46,679 --> 00:28:49,620
find yourself there you can like I I

645
00:28:49,620 --> 00:28:52,380
don't recommend this at all as Standard

646
00:28:52,380 --> 00:28:56,159
Process because it's boring repetitive

647
00:28:56,159 --> 00:28:59,159
kind of meaningless work but

648
00:28:59,159 --> 00:29:01,260
it can be useful to make a point right

649
00:29:01,260 --> 00:29:03,960
and that point can be made once you

650
00:29:03,960 --> 00:29:06,840
build out those regex strings with your

651
00:29:06,840 --> 00:29:08,820
Tech Setter you you figure out exactly

652
00:29:08,820 --> 00:29:10,980
how to get in there then because you

653
00:29:10,980 --> 00:29:13,200
could script it the point can be made at

654
00:29:13,200 --> 00:29:15,240
scale over your infrastructure

655
00:29:15,240 --> 00:29:17,760
but like sometimes it doesn't make sense

656
00:29:17,760 --> 00:29:21,720
to have a text editor involved right so

657
00:29:21,720 --> 00:29:25,260
when you need a bigger boat

658
00:29:25,260 --> 00:29:27,299
so if you want filter

659
00:29:27,299 --> 00:29:29,700
um things text editor probably not your

660
00:29:29,700 --> 00:29:32,039
friend right Excel probably a lot more

661
00:29:32,039 --> 00:29:33,380
your friend

662
00:29:33,380 --> 00:29:36,179
except that there's one little gotcha

663
00:29:36,179 --> 00:29:39,059
with Excel and that is that Excel will

664
00:29:39,059 --> 00:29:43,200
not open a 1.4 million line CSV that

665
00:29:43,200 --> 00:29:45,299
will stop at one point

666
00:29:45,299 --> 00:29:48,659
one three four million lines because I

667
00:29:48,659 --> 00:29:49,919
don't know why somebody made a choice

668
00:29:49,919 --> 00:29:51,840
they're like nobody's ever going to look

669
00:29:51,840 --> 00:29:54,419
at more than a million lives and on CSV

670
00:29:54,419 --> 00:29:56,279
that's ridiculous

671
00:29:56,279 --> 00:29:59,159
yeah and then and then here we are but

672
00:29:59,159 --> 00:30:00,720
if you have

673
00:30:00,720 --> 00:30:04,200
a few and offlines open in Excel like

674
00:30:04,200 --> 00:30:07,020
filtering there is awesome data

675
00:30:07,020 --> 00:30:08,760
visualization is another place where

676
00:30:08,760 --> 00:30:11,520
text editors like let's face it unless

677
00:30:11,520 --> 00:30:13,320
you're seeing those groups and Sublime

678
00:30:13,320 --> 00:30:15,539
that we talked about earlier it's not

679
00:30:15,539 --> 00:30:17,100
going to be real great you're not going

680
00:30:17,100 --> 00:30:18,600
to see any church you're not going to

681
00:30:18,600 --> 00:30:20,880
see any graphs so use a reporting

682
00:30:20,880 --> 00:30:23,880
mechanism in Excel or your sim or you

683
00:30:23,880 --> 00:30:26,399
know whatever whatever you got there and

684
00:30:26,399 --> 00:30:29,940
then uh pivoting from data to data or

685
00:30:29,940 --> 00:30:32,220
building pivot tables totally a place

686
00:30:32,220 --> 00:30:35,100
where text editor just falls apart like

687
00:30:35,100 --> 00:30:37,380
it can it can be good to understand what

688
00:30:37,380 --> 00:30:39,059
data you have and to get a sense of like

689
00:30:39,059 --> 00:30:40,799
how my records are those versus that do

690
00:30:40,799 --> 00:30:43,620
I have but honestly if you know that

691
00:30:43,620 --> 00:30:45,120
you're building out visualizations

692
00:30:45,120 --> 00:30:46,919
you're going to be building out pivot

693
00:30:46,919 --> 00:30:48,960
tables or you you know that there's

694
00:30:48,960 --> 00:30:50,700
going to be a path that takes you across

695
00:30:50,700 --> 00:30:52,980
multiple files yeah maybe start

696
00:30:52,980 --> 00:30:54,779
somewhere else and use some of these

697
00:30:54,779 --> 00:30:57,659
ideas but in a different tool

698
00:30:57,659 --> 00:31:01,500
so there are some goodies like uh guys

699
00:31:01,500 --> 00:31:04,380
cheat sheets some example files this

700
00:31:04,380 --> 00:31:07,020
deck if you want it you can steal my

701
00:31:07,020 --> 00:31:09,419
super high-end graphic graphical

702
00:31:09,419 --> 00:31:11,700
formatting skills I know that you've all

703
00:31:11,700 --> 00:31:14,460
been been probably sitting back and

704
00:31:14,460 --> 00:31:19,500
amazed at the uh the time and and the

705
00:31:19,500 --> 00:31:21,659
the attention to Pixel Perfect detail on

706
00:31:21,659 --> 00:31:23,460
this deck but that's that's our go and

707
00:31:23,460 --> 00:31:25,980
steal it and this is where you can get

708
00:31:25,980 --> 00:31:27,299
it from

709
00:31:27,299 --> 00:31:30,480
right here so I'm just gonna leave this

710
00:31:30,480 --> 00:31:33,779
up for another five seconds so you can

711
00:31:33,779 --> 00:31:37,919
copy pasta if you are so inclined

712
00:31:37,919 --> 00:31:40,260
and I'm sure that that'll be posted in

713
00:31:40,260 --> 00:31:42,960
the resources stuff too that's what I

714
00:31:42,960 --> 00:31:44,520
got for you today

715
00:31:44,520 --> 00:31:47,340
I really appreciate your your time and

716
00:31:47,340 --> 00:31:50,340
and uh and thanks to Sans for letting me

717
00:31:50,340 --> 00:31:54,140
come in and talk nerd to you

718
00:31:54,140 --> 00:31:57,140
thank you

