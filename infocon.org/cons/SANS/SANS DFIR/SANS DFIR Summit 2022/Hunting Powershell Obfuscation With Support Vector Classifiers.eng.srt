1
00:00:00,659 --> 00:00:02,960
foreign

2
00:00:07,040 --> 00:00:09,480
well hello good morning good afternoon

3
00:00:09,480 --> 00:00:11,700
and good evening everybody uh my name is

4
00:00:11,700 --> 00:00:13,440
Joe petrovsky today we're going to be

5
00:00:13,440 --> 00:00:15,000
doing a few things that are going to be

6
00:00:15,000 --> 00:00:16,440
really fun and hopefully informative and

7
00:00:16,440 --> 00:00:18,480
people get a lot out of this uh we'll be

8
00:00:18,480 --> 00:00:19,560
talking about a hunting partial

9
00:00:19,560 --> 00:00:22,140
obfuscation using a interesting machine

10
00:00:22,140 --> 00:00:23,400
learning technique called a support

11
00:00:23,400 --> 00:00:25,680
Vector classifier uh before we get into

12
00:00:25,680 --> 00:00:27,840
that I just want to say a huge thank you

13
00:00:27,840 --> 00:00:30,539
to Sans today for making this a reality

14
00:00:30,539 --> 00:00:33,540
and particularly for making the virtual

15
00:00:33,540 --> 00:00:35,340
conference a reality for all of us it's

16
00:00:35,340 --> 00:00:37,620
a fantastic resource for all of us all

17
00:00:37,620 --> 00:00:39,360
around the globe I'm a little blown away

18
00:00:39,360 --> 00:00:41,640
right now little kid me would have been

19
00:00:41,640 --> 00:00:43,140
would never have believed that I

20
00:00:43,140 --> 00:00:44,760
wouldn't be one day doing a nerdy

21
00:00:44,760 --> 00:00:46,200
presentation for people all over the

22
00:00:46,200 --> 00:00:48,180
planet uh and they're making this a

23
00:00:48,180 --> 00:00:49,500
reality for us today so thank you

24
00:00:49,500 --> 00:00:51,000
everybody in particular thank you to

25
00:00:51,000 --> 00:00:53,280
Carlos and Emily and Jen and Corrigan

26
00:00:53,280 --> 00:00:54,960
for kind of being my Handler and walking

27
00:00:54,960 --> 00:00:56,699
me to the the ins and outs of being a

28
00:00:56,699 --> 00:00:58,739
virtual presenter so I'll be Johnny

29
00:00:58,739 --> 00:01:01,079
today from my home in Minneapolis where

30
00:01:01,079 --> 00:01:02,340
I live with my wife Charney and our

31
00:01:02,340 --> 00:01:04,260
three dogs and I'm very happy to be here

32
00:01:04,260 --> 00:01:06,479
with you all today and without further

33
00:01:06,479 --> 00:01:09,299
further Ado let's get into it

34
00:01:09,299 --> 00:01:10,860
so here's what we will be talking about

35
00:01:10,860 --> 00:01:13,080
today I'll introduce myself quickly give

36
00:01:13,080 --> 00:01:15,180
you a little bit of background on on who

37
00:01:15,180 --> 00:01:17,159
I am and where I'm coming from and then

38
00:01:17,159 --> 00:01:18,720
we'll talk about what it is that we're

39
00:01:18,720 --> 00:01:20,100
actually looking for what problem we're

40
00:01:20,100 --> 00:01:21,659
trying to solve here

41
00:01:21,659 --> 00:01:23,340
um and how we'll be trying to accomplish

42
00:01:23,340 --> 00:01:25,920
the solution to that problem uh and I'll

43
00:01:25,920 --> 00:01:28,259
talk about what exactly is a sport

44
00:01:28,259 --> 00:01:30,119
Vector classifier this is kind of the

45
00:01:30,119 --> 00:01:32,400
meat and potatoes and the bones behind

46
00:01:32,400 --> 00:01:33,840
what we'll be doing today and how we'll

47
00:01:33,840 --> 00:01:36,180
be solving this problem uh my goal today

48
00:01:36,180 --> 00:01:38,640
is that whether you are a seasoned

49
00:01:38,640 --> 00:01:39,840
machine learning professional I've been

50
00:01:39,840 --> 00:01:41,400
doing this for years or you're a

51
00:01:41,400 --> 00:01:42,720
complete Noob and have never seen this

52
00:01:42,720 --> 00:01:44,220
before uh you'll be able to get

53
00:01:44,220 --> 00:01:46,740
something out of this and that's really

54
00:01:46,740 --> 00:01:48,960
gets me excited so I'm really really

55
00:01:48,960 --> 00:01:50,880
thankful for all of you for coming along

56
00:01:50,880 --> 00:01:52,979
with this uh little presentation with me

57
00:01:52,979 --> 00:01:55,200
today once we get the definitions in

58
00:01:55,200 --> 00:01:56,280
place and talk about how we're going to

59
00:01:56,280 --> 00:01:57,600
solve this problem we'll actually put in

60
00:01:57,600 --> 00:01:59,399
a working implementation of how to do

61
00:01:59,399 --> 00:02:02,159
this and because what if I'm going to do

62
00:02:02,159 --> 00:02:03,420
a talk with people I want to be able to

63
00:02:03,420 --> 00:02:05,159
share stuff that will the people will be

64
00:02:05,159 --> 00:02:07,079
able to take and use right away so I'll

65
00:02:07,079 --> 00:02:08,818
be sharing some working code you'll be

66
00:02:08,818 --> 00:02:10,199
able to take this played around with it

67
00:02:10,199 --> 00:02:12,180
and hopefully use this in your world and

68
00:02:12,180 --> 00:02:14,340
get this thing uh some production out of

69
00:02:14,340 --> 00:02:16,140
this pretty much right away

70
00:02:16,140 --> 00:02:19,640
so that will be our goal for today

71
00:02:20,760 --> 00:02:23,700
so here's me uh my name is Joe I I've

72
00:02:23,700 --> 00:02:26,400
been doing blue team stuff for roughly

73
00:02:26,400 --> 00:02:28,980
15 years of the about the past dozen in

74
00:02:28,980 --> 00:02:31,440
incident responses right hunting uh that

75
00:02:31,440 --> 00:02:33,239
is my current gig right now I am a

76
00:02:33,239 --> 00:02:35,580
separate 300 for Target uh us-based

77
00:02:35,580 --> 00:02:37,920
large retailer uh everyone's favorite

78
00:02:37,920 --> 00:02:41,400
place to get stuff for their lives

79
00:02:41,400 --> 00:02:42,360
um

80
00:02:42,360 --> 00:02:44,580
I have a very cool job I work with a

81
00:02:44,580 --> 00:02:46,560
team of very talented and very cool

82
00:02:46,560 --> 00:02:49,680
people and uh in my current role I get

83
00:02:49,680 --> 00:02:51,120
to do a lot of interesting things like

84
00:02:51,120 --> 00:02:53,940
finding new and novel ways to find

85
00:02:53,940 --> 00:02:55,800
suspicious and weird things that might

86
00:02:55,800 --> 00:02:58,500
be associated with evil activity and

87
00:02:58,500 --> 00:03:00,060
seeing what to do with it there so it's

88
00:03:00,060 --> 00:03:01,560
a little Arts a little science it's a

89
00:03:01,560 --> 00:03:04,019
lot of fun I really enjoy my my job and

90
00:03:04,019 --> 00:03:05,459
I'm really happy to be able to share a

91
00:03:05,459 --> 00:03:07,680
little bit of this with you today uh

92
00:03:07,680 --> 00:03:09,540
when I'm not doing that at a devil is a

93
00:03:09,540 --> 00:03:12,420
musician I'm a lacrosse ref I'm kind of

94
00:03:12,420 --> 00:03:14,760
a crazy dog guy so uh you'll probably

95
00:03:14,760 --> 00:03:16,260
see me doing something like that when

96
00:03:16,260 --> 00:03:19,040
I'm away from keyboard

97
00:03:20,879 --> 00:03:25,140
okay so let's dig into this by

98
00:03:25,140 --> 00:03:26,580
kind of taking a look at why we should

99
00:03:26,580 --> 00:03:27,599
care about

100
00:03:27,599 --> 00:03:29,340
Powershell obfuscation in the first

101
00:03:29,340 --> 00:03:31,980
place and if you've done IR

102
00:03:31,980 --> 00:03:33,060
um or have you even just done a quick

103
00:03:33,060 --> 00:03:34,860
little few Google searches you can you

104
00:03:34,860 --> 00:03:37,019
come up with all kinds of of

105
00:03:37,019 --> 00:03:40,440
Hands-On examples of Powershell

106
00:03:40,440 --> 00:03:42,900
obfuscation being used by adversaries to

107
00:03:42,900 --> 00:03:45,239
do evil things it's it's near ubiquitous

108
00:03:45,239 --> 00:03:47,519
as a first stage loader just because

109
00:03:47,519 --> 00:03:49,620
it's so easy to use there's not much of

110
00:03:49,620 --> 00:03:51,540
a barrier to entry and it's also very

111
00:03:51,540 --> 00:03:53,760
easy to obfuscate so it's very easy to

112
00:03:53,760 --> 00:03:55,620
take a normal Powershell command that

113
00:03:55,620 --> 00:03:57,060
would do something and turn it into a

114
00:03:57,060 --> 00:03:58,640
mess that's not readable by humans

115
00:03:58,640 --> 00:04:00,959
because of the near ubiquity of this

116
00:04:00,959 --> 00:04:02,220
this is something that should be on our

117
00:04:02,220 --> 00:04:04,620
radar as as Defenders no matter what

118
00:04:04,620 --> 00:04:06,540
you're doing so

119
00:04:06,540 --> 00:04:10,099
that's why we should care

120
00:04:10,980 --> 00:04:12,720
what is it specifically that we're going

121
00:04:12,720 --> 00:04:14,159
to be looking for here and we'll talk

122
00:04:14,159 --> 00:04:16,320
about some examples about what we might

123
00:04:16,320 --> 00:04:18,060
be trying to identify with a technique

124
00:04:18,060 --> 00:04:19,500
like this

125
00:04:19,500 --> 00:04:20,760
um what we're looking for is a

126
00:04:20,760 --> 00:04:22,560
Powershell command that has been altered

127
00:04:22,560 --> 00:04:24,479
by someone

128
00:04:24,479 --> 00:04:26,520
to make it look like you can't read it

129
00:04:26,520 --> 00:04:27,840
or tell what it is that this thing is

130
00:04:27,840 --> 00:04:29,699
doing and the reason for doing that is

131
00:04:29,699 --> 00:04:32,280
to defeat analysis by cyber defense

132
00:04:32,280 --> 00:04:35,280
people such as instant responders uh

133
00:04:35,280 --> 00:04:37,199
malware reverse engineer security

134
00:04:37,199 --> 00:04:40,080
researchers and stuff

135
00:04:40,080 --> 00:04:41,400
and the reason you're doing that is

136
00:04:41,400 --> 00:04:42,419
because you're trying to do something

137
00:04:42,419 --> 00:04:43,979
evil with it so if you're seeing

138
00:04:43,979 --> 00:04:45,419
obfuscated Powershell commands there

139
00:04:45,419 --> 00:04:46,979
that should get your radar going and

140
00:04:46,979 --> 00:04:49,320
that should really get you you know

141
00:04:49,320 --> 00:04:50,940
really focused on that is something that

142
00:04:50,940 --> 00:04:54,440
you really need further attention

143
00:04:56,460 --> 00:04:58,500
so here's some examples

144
00:04:58,500 --> 00:04:59,820
you're going to see a lot of Powershell

145
00:04:59,820 --> 00:05:01,139
in your command if you run Windows at

146
00:05:01,139 --> 00:05:01,919
all

147
00:05:01,919 --> 00:05:03,600
um there's a lot of near ubiquity here

148
00:05:03,600 --> 00:05:05,820
it's it's a great tool for for use by

149
00:05:05,820 --> 00:05:07,199
administrators you'll see this used for

150
00:05:07,199 --> 00:05:08,520
all kinds of different things for job

151
00:05:08,520 --> 00:05:09,840
Automation and just making things

152
00:05:09,840 --> 00:05:12,120
generally easier so here's an example of

153
00:05:12,120 --> 00:05:13,979
a power drill command without further

154
00:05:13,979 --> 00:05:15,540
context you can kind of look at this and

155
00:05:15,540 --> 00:05:16,740
go okay well

156
00:05:16,740 --> 00:05:19,080
uh they're setting the color of a some

157
00:05:19,080 --> 00:05:20,759
sort of user prompt and without any

158
00:05:20,759 --> 00:05:22,199
other knowledge about the situation you

159
00:05:22,199 --> 00:05:23,580
can read this and kind of tell what it

160
00:05:23,580 --> 00:05:25,860
is so I would use this as an example of

161
00:05:25,860 --> 00:05:28,919
this is a normal benign non-obficated

162
00:05:28,919 --> 00:05:30,120
command that you could have found

163
00:05:30,120 --> 00:05:32,400
somewhere in your environment this looks

164
00:05:32,400 --> 00:05:34,380
like someone who's a you know some sort

165
00:05:34,380 --> 00:05:36,720
of programmer who is making some sort of

166
00:05:36,720 --> 00:05:39,479
thing to put in front of a user so this

167
00:05:39,479 --> 00:05:40,979
looks like a good example

168
00:05:40,979 --> 00:05:42,620
here's something else

169
00:05:42,620 --> 00:05:45,720
so the intent here is not to read this

170
00:05:45,720 --> 00:05:47,460
tiny type on the screen here is it's to

171
00:05:47,460 --> 00:05:48,840
look at it and go like I have no idea

172
00:05:48,840 --> 00:05:51,000
what this is and that's really kind of

173
00:05:51,000 --> 00:05:53,220
the point so I don't really know what

174
00:05:53,220 --> 00:05:54,720
this is if you're

175
00:05:54,720 --> 00:05:56,400
kind of familiar with some things here

176
00:05:56,400 --> 00:05:58,320
you can kind of tell that this is an

177
00:05:58,320 --> 00:06:00,300
invoke web request obvious case somehow

178
00:06:00,300 --> 00:06:01,440
but you can kind of piece that together

179
00:06:01,440 --> 00:06:02,759
just by looking at the components of

180
00:06:02,759 --> 00:06:04,979
this but you can tell like there's a lot

181
00:06:04,979 --> 00:06:07,139
wrong with this there's a bunch of

182
00:06:07,139 --> 00:06:08,100
strings that have been cut up into

183
00:06:08,100 --> 00:06:10,080
tokens and then repositioned and moved

184
00:06:10,080 --> 00:06:12,419
around a lot tokens have been split up

185
00:06:12,419 --> 00:06:14,340
like strings have been cut up put back

186
00:06:14,340 --> 00:06:16,979
together Escape character generally

187
00:06:16,979 --> 00:06:19,800
twisted around there's a lot to be done

188
00:06:19,800 --> 00:06:21,479
here to try to make it look like

189
00:06:21,479 --> 00:06:22,919
something that isn't really normally

190
00:06:22,919 --> 00:06:25,199
readable by a human like such as me so

191
00:06:25,199 --> 00:06:26,699
if you saw this in your environment it's

192
00:06:26,699 --> 00:06:28,860
time to go get the IR Team Rolling

193
00:06:28,860 --> 00:06:30,180
because we got to burn this down pretty

194
00:06:30,180 --> 00:06:31,319
fast

195
00:06:31,319 --> 00:06:33,620
foreign

196
00:06:34,919 --> 00:06:36,660
let's talk about what our goal is going

197
00:06:36,660 --> 00:06:37,560
to be

198
00:06:37,560 --> 00:06:40,740
when we use a technique such as this for

199
00:06:40,740 --> 00:06:43,440
hunting so we won't necessarily be

200
00:06:43,440 --> 00:06:45,120
making static detection out of this I

201
00:06:45,120 --> 00:06:46,560
was dry detection or a distinction

202
00:06:46,560 --> 00:06:48,840
between static detection so something

203
00:06:48,840 --> 00:06:51,660
happens and you alert versus more of a

204
00:06:51,660 --> 00:06:52,860
threat hunting approach it's just like

205
00:06:52,860 --> 00:06:54,960
we're going to be doing whereas you take

206
00:06:54,960 --> 00:06:57,720
a lot of stuff down and reduce it to

207
00:06:57,720 --> 00:07:00,600
such a a manageable level that is most

208
00:07:00,600 --> 00:07:02,280
likely if there's evil stuff in here it

209
00:07:02,280 --> 00:07:04,080
will be in this smaller Corpus of things

210
00:07:04,080 --> 00:07:06,000
that you just identified so what we're

211
00:07:06,000 --> 00:07:08,039
trying to do here is gather a large body

212
00:07:08,039 --> 00:07:10,080
of Powershell commands that run across

213
00:07:10,080 --> 00:07:12,120
your organization and boil that down

214
00:07:12,120 --> 00:07:13,500
into something like that we can

215
00:07:13,500 --> 00:07:15,660
confidently say that if there is

216
00:07:15,660 --> 00:07:17,460
obfuscation present somewhere in here

217
00:07:17,460 --> 00:07:18,960
it's going to be in this smaller data

218
00:07:18,960 --> 00:07:20,400
set that a human can then go look at and

219
00:07:20,400 --> 00:07:22,380
pick out

220
00:07:22,380 --> 00:07:24,860
each

221
00:07:25,139 --> 00:07:27,120
let's talk about what specifically we're

222
00:07:27,120 --> 00:07:28,560
going to be looking for here

223
00:07:28,560 --> 00:07:30,180
so

224
00:07:30,180 --> 00:07:31,800
this is kind of a good thing to keep in

225
00:07:31,800 --> 00:07:32,880
mind when you're looking for obvious

226
00:07:32,880 --> 00:07:35,460
Powershell there's no way to detect

227
00:07:35,460 --> 00:07:37,860
every single way to obfuscate a command

228
00:07:37,860 --> 00:07:39,419
so don't go into this thinking like I

229
00:07:39,419 --> 00:07:40,919
need to write detection for every single

230
00:07:40,919 --> 00:07:43,620
way that you can potentially obfuscate a

231
00:07:43,620 --> 00:07:45,180
Powershell command there's no way to do

232
00:07:45,180 --> 00:07:47,160
that this is really limited only by the

233
00:07:47,160 --> 00:07:49,740
adversary's creativity so this is going

234
00:07:49,740 --> 00:07:53,340
to be kind of a Fool's Erin instead

235
00:07:53,340 --> 00:07:55,139
what we want to do is just identify

236
00:07:55,139 --> 00:07:56,639
commands that are obfuscated in the

237
00:07:56,639 --> 00:07:58,440
first place if something is obfuscated

238
00:07:58,440 --> 00:08:00,419
is most likely been done for that reason

239
00:08:00,419 --> 00:08:03,240
so as to obscure it's it's true meaning

240
00:08:03,240 --> 00:08:05,520
and what it does from Defenders so if we

241
00:08:05,520 --> 00:08:06,960
can just identify that something is

242
00:08:06,960 --> 00:08:08,639
obfuscated in the first place that

243
00:08:08,639 --> 00:08:10,080
becomes our short list for further

244
00:08:10,080 --> 00:08:12,740
investigation

245
00:08:15,180 --> 00:08:16,319
here's how we're going to get started

246
00:08:16,319 --> 00:08:19,139
with this uh we'll be doing this with a

247
00:08:19,139 --> 00:08:21,300
very interesting tooling set here so to

248
00:08:21,300 --> 00:08:22,560
start with we're going to need a body of

249
00:08:22,560 --> 00:08:23,819
data

250
00:08:23,819 --> 00:08:25,560
to really do this at scale you're going

251
00:08:25,560 --> 00:08:27,300
to need to collect Powershell logging

252
00:08:27,300 --> 00:08:28,800
script lock logging from across your

253
00:08:28,800 --> 00:08:31,379
your entire Enterprise event ID 800 or

254
00:08:31,379 --> 00:08:33,299
sysmon event id1 will accomplish this

255
00:08:33,299 --> 00:08:35,458
goal for you this should be run anywhere

256
00:08:35,458 --> 00:08:37,020
you can get it from and I realize that

257
00:08:37,020 --> 00:08:38,339
this can be a big lift for a lot of

258
00:08:38,339 --> 00:08:40,260
organizations if you're really serious

259
00:08:40,260 --> 00:08:42,659
about doing hunting of this kind of

260
00:08:42,659 --> 00:08:44,279
stuff at scale this is really something

261
00:08:44,279 --> 00:08:45,899
you need to be looking at is collecting

262
00:08:45,899 --> 00:08:48,600
this kind of information and ingesting

263
00:08:48,600 --> 00:08:50,100
into some sort of central repository

264
00:08:50,100 --> 00:08:52,140
where your investigators can get such as

265
00:08:52,140 --> 00:08:54,839
a Sim or some other kind of repository

266
00:08:54,839 --> 00:08:56,880
for this kind of logging

267
00:08:56,880 --> 00:08:58,380
the tools we're going to be running here

268
00:08:58,380 --> 00:09:00,180
are going to be based on jupyter

269
00:09:00,180 --> 00:09:02,760
Notebook pandas and plotly express if

270
00:09:02,760 --> 00:09:04,440
you're familiar with jupyter notebook

271
00:09:04,440 --> 00:09:05,640
internal Pro with this you're already

272
00:09:05,640 --> 00:09:07,620
rubbing your hands with flea if you

273
00:09:07,620 --> 00:09:09,720
haven't been using jupyter notebook I

274
00:09:09,720 --> 00:09:11,580
strongly recommend it it's a fantastic

275
00:09:11,580 --> 00:09:13,920
tool this is a way of running

276
00:09:13,920 --> 00:09:16,019
interactive python from within a browser

277
00:09:16,019 --> 00:09:17,880
which is great when you're doing stuff

278
00:09:17,880 --> 00:09:19,140
like thread hunting because you can get

279
00:09:19,140 --> 00:09:21,600
into a lot of trial and error you try

280
00:09:21,600 --> 00:09:23,339
something to that work no let's try

281
00:09:23,339 --> 00:09:24,720
something else that work we'll kind of

282
00:09:24,720 --> 00:09:27,480
did I just code it wrong yes and you

283
00:09:27,480 --> 00:09:29,100
continuously refine these things and

284
00:09:29,100 --> 00:09:30,660
what Jupiter allows you to do is write

285
00:09:30,660 --> 00:09:32,220
your code in little sections at a time

286
00:09:32,220 --> 00:09:34,200
and get each section working rather than

287
00:09:34,200 --> 00:09:36,860
having to go back and modify a large

288
00:09:36,860 --> 00:09:38,760
monolithic.py file or its libraries

289
00:09:38,760 --> 00:09:40,320
every single time you want to try it you

290
00:09:40,320 --> 00:09:41,760
can just get little bits working at a

291
00:09:41,760 --> 00:09:44,339
time and then go from there uh Penn is

292
00:09:44,339 --> 00:09:47,100
is a really cool data science library

293
00:09:47,100 --> 00:09:49,080
for python there's others out there this

294
00:09:49,080 --> 00:09:51,680
happens to be like

295
00:09:52,680 --> 00:09:54,300
just for a visualization engine I use

296
00:09:54,300 --> 00:09:56,160
plot we express again there's others out

297
00:09:56,160 --> 00:09:57,300
there this just happens to be my

298
00:09:57,300 --> 00:09:58,620
personal preference here's where you can

299
00:09:58,620 --> 00:10:00,300
go to get all these things the real

300
00:10:00,300 --> 00:10:02,279
reason I like using a tool set like this

301
00:10:02,279 --> 00:10:03,959
is because it is available for the

302
00:10:03,959 --> 00:10:05,820
amazing low price for free

303
00:10:05,820 --> 00:10:07,440
or four easy payments of zero dollars

304
00:10:07,440 --> 00:10:09,420
this uh I'm not selling anything here

305
00:10:09,420 --> 00:10:11,399
you can go get all this stuff on your

306
00:10:11,399 --> 00:10:13,560
own it's really downloadable and the

307
00:10:13,560 --> 00:10:14,940
intent of this is to be able to share it

308
00:10:14,940 --> 00:10:16,440
so that's what I'm gonna be doing

309
00:10:16,440 --> 00:10:18,839
the actual engine for doing the machine

310
00:10:18,839 --> 00:10:20,339
learning component of what we're about

311
00:10:20,339 --> 00:10:22,200
to do here is is a python Library called

312
00:10:22,200 --> 00:10:24,959
sklearn scikit-learn this has a bunch of

313
00:10:24,959 --> 00:10:26,640
different data science and machine

314
00:10:26,640 --> 00:10:28,500
learning and artificial intelligence

315
00:10:28,500 --> 00:10:30,480
capabilities in it built in directly in

316
00:10:30,480 --> 00:10:31,800
this so someone has already written this

317
00:10:31,800 --> 00:10:34,080
we might as well go ahead and use it and

318
00:10:34,080 --> 00:10:35,820
use it for our advantage so these are

319
00:10:35,820 --> 00:10:37,200
going to be the sort of prerequisites

320
00:10:37,200 --> 00:10:38,220
it's a tooling that we're going to use

321
00:10:38,220 --> 00:10:42,680
to go look for some modifications

322
00:10:45,240 --> 00:10:46,620
so here's some operating assumptions

323
00:10:46,620 --> 00:10:48,180
that we'll be working under if we're

324
00:10:48,180 --> 00:10:49,320
starting to talk about what evil

325
00:10:49,320 --> 00:10:50,700
Powershell might look like and if you've

326
00:10:50,700 --> 00:10:51,839
seen some of this stuff in the real

327
00:10:51,839 --> 00:10:54,420
world you can kind of like you can sort

328
00:10:54,420 --> 00:10:56,279
of put some of this stuff together most

329
00:10:56,279 --> 00:10:58,079
of the early power evil Powershell will

330
00:10:58,079 --> 00:10:59,880
be runs fairly early in the kill chain

331
00:10:59,880 --> 00:11:02,399
this is normally seen done as a loader

332
00:11:02,399 --> 00:11:04,440
for something else so some sort of

333
00:11:04,440 --> 00:11:06,180
Powershell command runs and it pulls

334
00:11:06,180 --> 00:11:07,500
down a second stage or additional

335
00:11:07,500 --> 00:11:08,700
tooling or something like that it

336
00:11:08,700 --> 00:11:11,579
happens fairly long fairly early on

337
00:11:11,579 --> 00:11:13,019
it will probably be run direct from

338
00:11:13,019 --> 00:11:15,120
Michelle so in other words not from a

339
00:11:15,120 --> 00:11:17,940
PS1 script script on file this will be

340
00:11:17,940 --> 00:11:20,220
done in memory for Michelle and we're

341
00:11:20,220 --> 00:11:21,899
probably talking about

342
00:11:21,899 --> 00:11:24,300
um a user who hasn't gotten a privilege

343
00:11:24,300 --> 00:11:26,220
elevation yet so it'll be running under

344
00:11:26,220 --> 00:11:29,700
a non-privileged context for your user

345
00:11:29,700 --> 00:11:31,560
so we can use all this to kind of come

346
00:11:31,560 --> 00:11:34,019
up with how we're going to zero in on

347
00:11:34,019 --> 00:11:36,060
what we'll actually be looking for here

348
00:11:36,060 --> 00:11:37,560
so this is what we're going to need to

349
00:11:37,560 --> 00:11:38,399
collect

350
00:11:38,399 --> 00:11:40,920
over as much of a time frame as you can

351
00:11:40,920 --> 00:11:43,320
possibly get and indeed duplicate we

352
00:11:43,320 --> 00:11:46,079
won't be the magnitude of how many times

353
00:11:46,079 --> 00:11:47,519
you see something won't matter for our

354
00:11:47,519 --> 00:11:48,899
analysis what we're trying to do is just

355
00:11:48,899 --> 00:11:50,339
come up with as much uniqueness as we

356
00:11:50,339 --> 00:11:52,560
possibly can so I did this by collecting

357
00:11:52,560 --> 00:11:55,320
event ID 800 from uh across my entire

358
00:11:55,320 --> 00:11:57,779
Enterprise for as long as I could with a

359
00:11:57,779 --> 00:12:00,060
user ID defined as what one of my users

360
00:12:00,060 --> 00:12:01,620
would look like and it doesn't run from

361
00:12:01,620 --> 00:12:04,200
a PS1 file so that gives you a nice top

362
00:12:04,200 --> 00:12:06,660
Corpus of data and you get that for as

363
00:12:06,660 --> 00:12:08,579
long as you can get uh whether if you

364
00:12:08,579 --> 00:12:10,140
can only get a couple days cool if you

365
00:12:10,140 --> 00:12:12,240
can get several months to years that's

366
00:12:12,240 --> 00:12:14,279
amazing so whatever you can get out of

367
00:12:14,279 --> 00:12:15,839
this and get from your central location

368
00:12:15,839 --> 00:12:17,820
where you get this information this is

369
00:12:17,820 --> 00:12:19,980
what we're going to use to both train

370
00:12:19,980 --> 00:12:23,000
and test our model

371
00:12:24,779 --> 00:12:26,579
here's the patterns that we're going to

372
00:12:26,579 --> 00:12:28,560
be looking for here or machine learning

373
00:12:28,560 --> 00:12:30,480
algorithm is going to be looking for if

374
00:12:30,480 --> 00:12:31,560
we start talking about obfuscated

375
00:12:31,560 --> 00:12:32,700
Powershell what are some of these

376
00:12:32,700 --> 00:12:33,899
commands that have been obviously to

377
00:12:33,899 --> 00:12:35,040
have in common

378
00:12:35,040 --> 00:12:36,600
you're going to see a lot of encodings

379
00:12:36,600 --> 00:12:39,180
and decodings so to make the strings of

380
00:12:39,180 --> 00:12:40,560
command look like something that I can't

381
00:12:40,560 --> 00:12:41,940
read anymore I've got to do something

382
00:12:41,940 --> 00:12:44,940
like take parts of it apart encode it

383
00:12:44,940 --> 00:12:46,740
into something else do something with it

384
00:12:46,740 --> 00:12:48,240
but at the end to make it actually do

385
00:12:48,240 --> 00:12:49,139
anything

386
00:12:49,139 --> 00:12:51,480
that long string that was encoded has to

387
00:12:51,480 --> 00:12:53,279
be decoded somehow so they can be vetted

388
00:12:53,279 --> 00:12:55,860
to Powershell and actually execute

389
00:12:55,860 --> 00:12:57,660
um it's going to be illegible which is

390
00:12:57,660 --> 00:12:59,339
the entire point of the exercise of

391
00:12:59,339 --> 00:13:01,260
obfuscating in the first place is to you

392
00:13:01,260 --> 00:13:02,820
know make it in such a way that a

393
00:13:02,820 --> 00:13:04,380
Defender such as myself wouldn't be able

394
00:13:04,380 --> 00:13:06,899
to tell what it is by reading it

395
00:13:06,899 --> 00:13:08,820
the point that has been encoded and

396
00:13:08,820 --> 00:13:10,260
chopped up and had a bunch of things

397
00:13:10,260 --> 00:13:12,000
done to it is necessarily going to make

398
00:13:12,000 --> 00:13:13,440
that command longer than it would have

399
00:13:13,440 --> 00:13:14,940
been so the native command would have

400
00:13:14,940 --> 00:13:16,980
been maybe this but the

401
00:13:16,980 --> 00:13:19,980
obfuscated chopped apart recoded in

402
00:13:19,980 --> 00:13:22,440
whatever string and they that is finally

403
00:13:22,440 --> 00:13:24,120
run is probably much longer because of

404
00:13:24,120 --> 00:13:26,100
all this so these are facts that we can

405
00:13:26,100 --> 00:13:27,420
use to our advantage when we're actually

406
00:13:27,420 --> 00:13:32,120
looking for an obfuscated command

407
00:13:33,300 --> 00:13:36,000
here's the big idea behind behind all

408
00:13:36,000 --> 00:13:37,339
this analysis and what we're looking for

409
00:13:37,339 --> 00:13:39,540
generally speaking the relationship

410
00:13:39,540 --> 00:13:41,279
between the length of the command that

411
00:13:41,279 --> 00:13:43,440
gets run and the count of various

412
00:13:43,440 --> 00:13:44,940
characters in that command is going to

413
00:13:44,940 --> 00:13:47,279
be roughly linear so as the length of

414
00:13:47,279 --> 00:13:48,660
the command string increases you're

415
00:13:48,660 --> 00:13:50,459
going to see more alphanumeric

416
00:13:50,459 --> 00:13:51,540
characters you're going to see more of

417
00:13:51,540 --> 00:13:53,339
every other kind of character

418
00:13:53,339 --> 00:13:55,500
really the the big relationship that

419
00:13:55,500 --> 00:13:56,639
you're going to see is the relationship

420
00:13:56,639 --> 00:13:57,899
between the length of the command to

421
00:13:57,899 --> 00:13:59,279
straight alphanumeric characters A

422
00:13:59,279 --> 00:14:01,019
through Z and zero through nine as you

423
00:14:01,019 --> 00:14:02,820
start seeing additional characters in

424
00:14:02,820 --> 00:14:04,500
The Character string that becomes more

425
00:14:04,500 --> 00:14:06,420
and more likely to be obfuscate you'll

426
00:14:06,420 --> 00:14:08,160
see a lot of things more like like back

427
00:14:08,160 --> 00:14:10,380
ticks for uh Escape characters you'll

428
00:14:10,380 --> 00:14:11,820
see all kinds of other things that are

429
00:14:11,820 --> 00:14:14,160
not necessarily looking like letters and

430
00:14:14,160 --> 00:14:16,620
digits

431
00:14:16,620 --> 00:14:18,240
when you see normally a linear

432
00:14:18,240 --> 00:14:19,500
relationship

433
00:14:19,500 --> 00:14:21,240
things that deviate from that linear

434
00:14:21,240 --> 00:14:22,620
relationship become are kind of

435
00:14:22,620 --> 00:14:24,240
interesting zone for a further scope of

436
00:14:24,240 --> 00:14:25,860
increase so we'll be looking for kind of

437
00:14:25,860 --> 00:14:27,899
deviation from this

438
00:14:27,899 --> 00:14:29,760
this scatter plot you see here is a two

439
00:14:29,760 --> 00:14:31,920
variable so X and Y right

440
00:14:31,920 --> 00:14:33,839
but there's no reason that in real world

441
00:14:33,839 --> 00:14:35,639
we can't use more than two variables and

442
00:14:35,639 --> 00:14:37,019
that's what we're going to use our

443
00:14:37,019 --> 00:14:39,180
machine learning algorithm to do

444
00:14:39,180 --> 00:14:40,560
so we can count less of other characters

445
00:14:40,560 --> 00:14:41,940
too there's a lot of other things that

446
00:14:41,940 --> 00:14:43,680
might be interesting so a dollar sign

447
00:14:43,680 --> 00:14:45,660
right that defines a Powershell variable

448
00:14:45,660 --> 00:14:47,820
a backtick is an escape character in

449
00:14:47,820 --> 00:14:49,560
Powershell string literals quotes double

450
00:14:49,560 --> 00:14:51,060
quotes

451
00:14:51,060 --> 00:14:52,800
um the things that put things in other

452
00:14:52,800 --> 00:14:55,279
containers so you know braces brackets

453
00:14:55,279 --> 00:14:58,920
parentheses uh you can sometimes see bad

454
00:14:58,920 --> 00:15:00,779
guys doing stuff like like just doing a

455
00:15:00,779 --> 00:15:03,240
chaos case switching to defeat case

456
00:15:03,240 --> 00:15:04,740
sensitive detection so in other words if

457
00:15:04,740 --> 00:15:05,760
you've written detection for something

458
00:15:05,760 --> 00:15:08,579
but it only looks for lowercase if you

459
00:15:08,579 --> 00:15:09,959
change the case it might have evaded

460
00:15:09,959 --> 00:15:10,860
that

461
00:15:10,860 --> 00:15:12,360
um so you can think about all these

462
00:15:12,360 --> 00:15:13,920
other kind of characters that might be

463
00:15:13,920 --> 00:15:15,959
present in an obfuscated Powershell

464
00:15:15,959 --> 00:15:17,699
command and just get the counts of those

465
00:15:17,699 --> 00:15:19,980
so these all become variables in our

466
00:15:19,980 --> 00:15:21,420
feature set

467
00:15:21,420 --> 00:15:23,100
if you're a machine learning veteran and

468
00:15:23,100 --> 00:15:24,480
been doing stuff like this before you

469
00:15:24,480 --> 00:15:25,920
know exactly what I'm talking about the

470
00:15:25,920 --> 00:15:28,440
really cool part about using counts like

471
00:15:28,440 --> 00:15:31,019
this in our feature set is that you

472
00:15:31,019 --> 00:15:32,220
don't have to do any normalization of

473
00:15:32,220 --> 00:15:34,380
this data they're all roughly in the

474
00:15:34,380 --> 00:15:36,899
same order of magnitude not real big

475
00:15:36,899 --> 00:15:38,940
um so we don't have to do a lot of data

476
00:15:38,940 --> 00:15:41,339
scrubbing before we feed this to our

477
00:15:41,339 --> 00:15:42,720
algorithm there's not a lot of

478
00:15:42,720 --> 00:15:44,100
pre-workers can you need to be done

479
00:15:44,100 --> 00:15:45,779
other than just collecting the counts of

480
00:15:45,779 --> 00:15:47,399
these things and feeding it to the

481
00:15:47,399 --> 00:15:49,760
algorithm

482
00:15:53,160 --> 00:15:55,199
okay with that in place it's time versus

483
00:15:55,199 --> 00:15:57,000
machine learning before I get into that

484
00:15:57,000 --> 00:15:58,740
um I don't want to scare anybody off

485
00:15:58,740 --> 00:15:59,940
so

486
00:15:59,940 --> 00:16:02,940
one of the reasons that this particular

487
00:16:02,940 --> 00:16:04,740
investigation has been really kind of

488
00:16:04,740 --> 00:16:06,480
cool is because you don't need to do

489
00:16:06,480 --> 00:16:08,220
this at Giant scale you don't need to

490
00:16:08,220 --> 00:16:09,959
start if you're doing your first machine

491
00:16:09,959 --> 00:16:12,240
learning project with huge back-end

492
00:16:12,240 --> 00:16:15,720
infrastructure tons of data a lot of

493
00:16:15,720 --> 00:16:18,480
pre-work you know and a few degrees in

494
00:16:18,480 --> 00:16:19,740
machine learning before you even get

495
00:16:19,740 --> 00:16:21,120
started this is something that can be

496
00:16:21,120 --> 00:16:22,980
done in very small scale I run this on

497
00:16:22,980 --> 00:16:24,600
my desktop sometimes like it's it's

498
00:16:24,600 --> 00:16:26,160
really can be done at that small of a

499
00:16:26,160 --> 00:16:29,279
scale and what this lets you do is start

500
00:16:29,279 --> 00:16:31,380
small and get some wins and build your

501
00:16:31,380 --> 00:16:34,199
confidence and go okay cool this works

502
00:16:34,199 --> 00:16:36,360
now what can I do next how can I take it

503
00:16:36,360 --> 00:16:37,920
a little farther the next time I want to

504
00:16:37,920 --> 00:16:39,779
do this so don't be scared if you've

505
00:16:39,779 --> 00:16:40,860
never done anything like this before

506
00:16:40,860 --> 00:16:42,540
this is going to be super easy and

507
00:16:42,540 --> 00:16:43,500
you'll be able to take this and kind of

508
00:16:43,500 --> 00:16:45,360
run with it right away and then build

509
00:16:45,360 --> 00:16:47,579
some wins up and go from there so

510
00:16:47,579 --> 00:16:48,899
um I would just kind of caution anybody

511
00:16:48,899 --> 00:16:50,100
who hasn't done something like this

512
00:16:50,100 --> 00:16:51,779
before here's the quick IBM definition

513
00:16:51,779 --> 00:16:54,000
what machine learning is but yeah it's

514
00:16:54,000 --> 00:16:56,100
making robots think like brains

515
00:16:56,100 --> 00:16:57,660
generally speaking or as much as they

516
00:16:57,660 --> 00:16:58,620
can

517
00:16:58,620 --> 00:17:00,839
um with the idea is that over time you

518
00:17:00,839 --> 00:17:03,060
can keep improving this so that's kind

519
00:17:03,060 --> 00:17:04,919
of another uh interesting component of

520
00:17:04,919 --> 00:17:05,760
what we're going to be doing here is

521
00:17:05,760 --> 00:17:07,199
that we can reiterate this and every

522
00:17:07,199 --> 00:17:09,119
single time your model should be getting

523
00:17:09,119 --> 00:17:11,400
a little bit better at it and gradually

524
00:17:11,400 --> 00:17:12,959
improving its accuracy so when you do

525
00:17:12,959 --> 00:17:14,699
this the first few times you might get

526
00:17:14,699 --> 00:17:16,439
some false positives maybe you'll get

527
00:17:16,439 --> 00:17:18,179
some false negatives but over time the

528
00:17:18,179 --> 00:17:19,500
more data you feed this and the more you

529
00:17:19,500 --> 00:17:20,880
train it more learns that should that

530
00:17:20,880 --> 00:17:22,260
algorithm should get tighter and get

531
00:17:22,260 --> 00:17:25,339
better at what it's looking for

532
00:17:27,319 --> 00:17:29,820
I want to reiterate too like kind of

533
00:17:29,820 --> 00:17:31,919
what machine learning is and is not

534
00:17:31,919 --> 00:17:33,960
um so if you've ever like heard someone

535
00:17:33,960 --> 00:17:35,400
say that like Fair hunting is machine

536
00:17:35,400 --> 00:17:36,600
learning and machine learning to start

537
00:17:36,600 --> 00:17:38,039
hunting like they're

538
00:17:38,039 --> 00:17:40,320
don't listen to them they're probably

539
00:17:40,320 --> 00:17:41,460
trying to sell you something where they

540
00:17:41,460 --> 00:17:43,320
are these are two separate disciplines

541
00:17:43,320 --> 00:17:45,299
right thread heading isn't

542
00:17:45,299 --> 00:17:47,220
discipline unto itself and so is machine

543
00:17:47,220 --> 00:17:49,559
learning however were these two things

544
00:17:49,559 --> 00:17:51,059
overlap is what really cool things start

545
00:17:51,059 --> 00:17:52,679
to happen and that's where or someone

546
00:17:52,679 --> 00:17:54,480
like me can find a lot of really cool

547
00:17:54,480 --> 00:17:55,559
things to do and hopefully share with

548
00:17:55,559 --> 00:17:57,240
other people here so

549
00:17:57,240 --> 00:17:58,080
um

550
00:17:58,080 --> 00:18:00,480
and then a support Vector classifier is

551
00:18:00,480 --> 00:18:02,460
a thing unto itself so say it with a

552
00:18:02,460 --> 00:18:04,080
Venn diagram like my teachers always

553
00:18:04,080 --> 00:18:05,220
said this is going to be doing it so

554
00:18:05,220 --> 00:18:07,039
we'll be using a very particular

555
00:18:07,039 --> 00:18:09,120
implementation of a sport Vector

556
00:18:09,120 --> 00:18:10,500
classifier which is a machine learning

557
00:18:10,500 --> 00:18:13,760
tool to do some thread hunting

558
00:18:17,220 --> 00:18:19,500
we'll be using a supervised machine

559
00:18:19,500 --> 00:18:21,660
learning technique for what we're about

560
00:18:21,660 --> 00:18:23,880
to do here so uh for those familiar with

561
00:18:23,880 --> 00:18:25,620
with machine learning type stuff you can

562
00:18:25,620 --> 00:18:27,419
have supervise and unsupervised learning

563
00:18:27,419 --> 00:18:29,400
in this kind of case we'll be using

564
00:18:29,400 --> 00:18:31,080
supervised machine learning and this is

565
00:18:31,080 --> 00:18:33,179
based on a Model where you give it the

566
00:18:33,179 --> 00:18:34,140
answers

567
00:18:34,140 --> 00:18:36,780
so you're not telling the the machines

568
00:18:36,780 --> 00:18:38,400
to go find all the answers you give them

569
00:18:38,400 --> 00:18:39,900
the answers up first

570
00:18:39,900 --> 00:18:41,340
and the goal of the machine now is to

571
00:18:41,340 --> 00:18:42,720
find out why those answers were the way

572
00:18:42,720 --> 00:18:45,660
they are so uh if the machine can tell

573
00:18:45,660 --> 00:18:48,240
take a corpus of data classify it and

574
00:18:48,240 --> 00:18:50,039
figure out why it had classified those

575
00:18:50,039 --> 00:18:51,480
things as they were we can then use that

576
00:18:51,480 --> 00:18:53,340
for future predictions so that's what

577
00:18:53,340 --> 00:18:55,020
we're going to be doing here is once we

578
00:18:55,020 --> 00:18:56,640
have our model trained we can then feed

579
00:18:56,640 --> 00:18:58,679
that some uncontrolled data and say okay

580
00:18:58,679 --> 00:19:00,539
predict whether there is anything to be

581
00:19:00,539 --> 00:19:01,860
found in this new data that we haven't

582
00:19:01,860 --> 00:19:04,520
even looked at yet

583
00:19:07,140 --> 00:19:09,059
what's a support Vector classifier so

584
00:19:09,059 --> 00:19:10,440
this is a very specific kind of machine

585
00:19:10,440 --> 00:19:13,260
model that long story short attempts to

586
00:19:13,260 --> 00:19:15,299
put data into one or more well two or

587
00:19:15,299 --> 00:19:17,400
more classes and class can be whatever

588
00:19:17,400 --> 00:19:19,620
you want groups of things however you

589
00:19:19,620 --> 00:19:21,600
want to arbitrarily Define what class is

590
00:19:21,600 --> 00:19:24,120
in this example here we have two classes

591
00:19:24,120 --> 00:19:25,799
in two Dimensions you can roughly

592
00:19:25,799 --> 00:19:27,660
categorize them as blue things and green

593
00:19:27,660 --> 00:19:28,559
things

594
00:19:28,559 --> 00:19:30,000
between them there is some sort of

595
00:19:30,000 --> 00:19:31,440
boundary and that's that red line that

596
00:19:31,440 --> 00:19:33,600
you see in here with some sort of

597
00:19:33,600 --> 00:19:35,580
um some sort of Gap around it that

598
00:19:35,580 --> 00:19:37,980
becomes your kind of

599
00:19:37,980 --> 00:19:39,120
uh

600
00:19:39,120 --> 00:19:41,880
that that's sorry there's a little bit

601
00:19:41,880 --> 00:19:43,080
of Gap around it to give yourself a

602
00:19:43,080 --> 00:19:45,179
little bit of cushion so you can do this

603
00:19:45,179 --> 00:19:46,559
in two dimensions

604
00:19:46,559 --> 00:19:48,059
there's no reason you can't do it in

605
00:19:48,059 --> 00:19:49,140
more than once you can kind of picture

606
00:19:49,140 --> 00:19:50,580
what a boundary condition might look

607
00:19:50,580 --> 00:19:51,900
like in three dimensions it would look

608
00:19:51,900 --> 00:19:53,340
like some sort of a flat surface that

609
00:19:53,340 --> 00:19:55,620
divides parts of three space and then

610
00:19:55,620 --> 00:19:57,000
you can generalize that to additional

611
00:19:57,000 --> 00:19:58,620
Dimensions as well so there's no reason

612
00:19:58,620 --> 00:20:00,240
we can't do this in more than two or

613
00:20:00,240 --> 00:20:01,919
three in this case we're going to be

614
00:20:01,919 --> 00:20:03,539
doing this with a lot more Dimensions

615
00:20:03,539 --> 00:20:04,860
these are going to become our variables

616
00:20:04,860 --> 00:20:06,240
but we're only concerned about two

617
00:20:06,240 --> 00:20:07,559
classes

618
00:20:07,559 --> 00:20:08,940
we have a class of things that are

619
00:20:08,940 --> 00:20:09,960
investigated

620
00:20:09,960 --> 00:20:11,760
that we care about and a class has

621
00:20:11,760 --> 00:20:13,679
things that are not obfuscated that is

622
00:20:13,679 --> 00:20:14,940
normal and benign stuff that we don't

623
00:20:14,940 --> 00:20:17,039
care about and that first class should

624
00:20:17,039 --> 00:20:19,200
be a much smaller group of things and

625
00:20:19,200 --> 00:20:20,520
those are going to become our scope of

626
00:20:20,520 --> 00:20:22,080
inquiry for things that are most likely

627
00:20:22,080 --> 00:20:25,520
people that we need to look at closer

628
00:20:27,419 --> 00:20:29,580
what's a feature set it's a feature set

629
00:20:29,580 --> 00:20:31,860
for those who are Pros here you know

630
00:20:31,860 --> 00:20:33,240
exactly what I'm talking about

631
00:20:33,240 --> 00:20:36,240
that is just a long different uh

632
00:20:36,240 --> 00:20:37,380
different word for the amount of

633
00:20:37,380 --> 00:20:38,460
variables that we're coming out of here

634
00:20:38,460 --> 00:20:40,440
so every variable here and we can

635
00:20:40,440 --> 00:20:41,760
there's no reason we have to have more

636
00:20:41,760 --> 00:20:43,380
than two X and Y

637
00:20:43,380 --> 00:20:45,059
we have a whole bunch of them and the

638
00:20:45,059 --> 00:20:46,500
the list of the X variables that are

639
00:20:46,500 --> 00:20:47,880
going to be used as the predictor for

640
00:20:47,880 --> 00:20:50,280
the wise color feature set the the why

641
00:20:50,280 --> 00:20:52,140
is what is denoted as the actual result

642
00:20:52,140 --> 00:20:53,820
or the label the classification that

643
00:20:53,820 --> 00:20:56,280
we're trying to give to whatever the

644
00:20:56,280 --> 00:20:57,539
data that we're looking at is this

645
00:20:57,539 --> 00:20:59,760
becomes like our answer in this case the

646
00:20:59,760 --> 00:21:01,380
result are Y is going to be either one

647
00:21:01,380 --> 00:21:04,380
or zero in our case one will stand for

648
00:21:04,380 --> 00:21:06,360
this is obviously in zero means it is

649
00:21:06,360 --> 00:21:08,479
not

650
00:21:12,179 --> 00:21:13,799
once we have our model in place we'll

651
00:21:13,799 --> 00:21:15,840
have to train and test it this is the

652
00:21:15,840 --> 00:21:16,980
pre-work that we're going to need to do

653
00:21:16,980 --> 00:21:18,360
before we can feed this thing

654
00:21:18,360 --> 00:21:20,039
uncontrolled data that we want to just

655
00:21:20,039 --> 00:21:22,200
go investigate against so a training set

656
00:21:22,200 --> 00:21:24,539
is the portion of the initial data that

657
00:21:24,539 --> 00:21:25,919
you've collected that's going to be used

658
00:21:25,919 --> 00:21:27,660
to train the model it should be roughly

659
00:21:27,660 --> 00:21:29,640
80 percent of the initial data set that

660
00:21:29,640 --> 00:21:31,440
we've collected here

661
00:21:31,440 --> 00:21:33,480
not only are going to feed it the data

662
00:21:33,480 --> 00:21:34,980
that we've collected but since we also

663
00:21:34,980 --> 00:21:36,720
know what the answers is we're also

664
00:21:36,720 --> 00:21:37,980
going to include a column here that

665
00:21:37,980 --> 00:21:39,659
gives it the answer whether these things

666
00:21:39,659 --> 00:21:41,460
are obfuscated or not and generally

667
00:21:41,460 --> 00:21:42,659
speaking the things that you collect

668
00:21:42,659 --> 00:21:44,100
from across your environment should be

669
00:21:44,100 --> 00:21:45,539
normal not obfuscated you should

670
00:21:45,539 --> 00:21:46,559
probably check that a little bit so

671
00:21:46,559 --> 00:21:48,419
you're feeding at the correct data but

672
00:21:48,419 --> 00:21:50,580
then also include some things that you

673
00:21:50,580 --> 00:21:52,620
do want to find so what I did is I

674
00:21:52,620 --> 00:21:54,720
intentionally went in and created some

675
00:21:54,720 --> 00:21:56,220
obfuscated Powershell commands I use

676
00:21:56,220 --> 00:21:58,200
Daniel bohannon's invoke obfuscation and

677
00:21:58,200 --> 00:21:59,820
just generated a bunch of obfuscated

678
00:21:59,820 --> 00:22:02,700
things and appended that to my initial

679
00:22:02,700 --> 00:22:06,419
data set this becomes our training

680
00:22:06,419 --> 00:22:08,039
once we have the model trained and

681
00:22:08,039 --> 00:22:10,260
looked at using 80 roughly of our

682
00:22:10,260 --> 00:22:12,059
initial data set you can then take the

683
00:22:12,059 --> 00:22:13,799
remaining portion of that data and use

684
00:22:13,799 --> 00:22:16,080
it as a test so feed it back to the

685
00:22:16,080 --> 00:22:17,880
model and make sure that it gets the

686
00:22:17,880 --> 00:22:21,120
results that you think it should have

687
00:22:21,120 --> 00:22:22,980
this will allow us to calculate things

688
00:22:22,980 --> 00:22:26,039
like how accurate our training model is

689
00:22:26,039 --> 00:22:27,600
so here's the initial data collection

690
00:22:27,600 --> 00:22:30,000
what I did was I just went and collected

691
00:22:30,000 --> 00:22:31,980
a bunch of Powershell commands from

692
00:22:31,980 --> 00:22:34,140
across the environment I got once

693
00:22:34,140 --> 00:22:35,760
deduplicated roughly about 10 000 of

694
00:22:35,760 --> 00:22:37,559
these things over the course of I

695
00:22:37,559 --> 00:22:39,179
started even just a couple weeks just to

696
00:22:39,179 --> 00:22:41,340
start a small scale and then added a

697
00:22:41,340 --> 00:22:43,799
column four is obviously zero or one at

698
00:22:43,799 --> 00:22:46,440
the end of this data here is a small

699
00:22:46,440 --> 00:22:48,059
subset of the thing the intentional

700
00:22:48,059 --> 00:22:49,620
obfuscation that I put on the end of

701
00:22:49,620 --> 00:22:51,419
this data set so that the model has

702
00:22:51,419 --> 00:22:54,320
something it needs to find

703
00:22:56,700 --> 00:22:58,799
to build the testing and training set we

704
00:22:58,799 --> 00:23:01,860
can use Python to do this so what this

705
00:23:01,860 --> 00:23:03,659
thing is doing is based on the previous

706
00:23:03,659 --> 00:23:04,980
research that we've been doing here is

707
00:23:04,980 --> 00:23:06,840
we found that the amount of various

708
00:23:06,840 --> 00:23:09,179
characters in a Powershell command will

709
00:23:09,179 --> 00:23:11,039
have an impact on How likely that

710
00:23:11,039 --> 00:23:13,200
command is to be obfuscated in the first

711
00:23:13,200 --> 00:23:15,299
place so as you see more things like

712
00:23:15,299 --> 00:23:17,700
semicolons and back ticks and braces and

713
00:23:17,700 --> 00:23:19,440
dollar signs and things like that the

714
00:23:19,440 --> 00:23:21,840
more of those things you see the more

715
00:23:21,840 --> 00:23:23,760
likely that that command is going to be

716
00:23:23,760 --> 00:23:25,260
to be obfuscated

717
00:23:25,260 --> 00:23:27,659
so we can what we can do is just allow

718
00:23:27,659 --> 00:23:29,220
python to take the counts of those

719
00:23:29,220 --> 00:23:30,780
things and that will automatically build

720
00:23:30,780 --> 00:23:32,640
our our trainings that other features

721
00:23:32,640 --> 00:23:34,380
for our training Set uh so in other

722
00:23:34,380 --> 00:23:35,400
words every single one of these things

723
00:23:35,400 --> 00:23:36,840
becomes a variable so count of

724
00:23:36,840 --> 00:23:38,400
semicolons count of double quotes count

725
00:23:38,400 --> 00:23:41,640
the black brackets Etc

726
00:23:41,640 --> 00:23:43,020
this is what we're going to use to train

727
00:23:43,020 --> 00:23:44,039
our model

728
00:23:44,039 --> 00:23:46,860
so this is a job for Python's sklearn

729
00:23:46,860 --> 00:23:49,440
module scikit-learn there are some sub

730
00:23:49,440 --> 00:23:51,120
modules this for support Vector

731
00:23:51,120 --> 00:23:52,919
classifier implementation specifically

732
00:23:52,919 --> 00:23:55,320
that's the stuff in the red box here

733
00:23:55,320 --> 00:23:57,659
um long story short this boils down to

734
00:23:57,659 --> 00:23:59,220
just a couple different lines of python

735
00:23:59,220 --> 00:24:02,340
so once you feed the data to python here

736
00:24:02,340 --> 00:24:04,919
Define X as your feature set of

737
00:24:04,919 --> 00:24:06,659
variables and Y is the expected result

738
00:24:06,659 --> 00:24:09,360
you can then use the command called fit

739
00:24:09,360 --> 00:24:12,419
X and Y to train the model based on the

740
00:24:12,419 --> 00:24:13,740
data that you just gave it and what that

741
00:24:13,740 --> 00:24:15,539
will attempt to do is run through

742
00:24:15,539 --> 00:24:18,120
analyze all this data and figure out why

743
00:24:18,120 --> 00:24:20,220
things got the answers that they did and

744
00:24:20,220 --> 00:24:22,140
attempted to define a decision boundary

745
00:24:22,140 --> 00:24:24,179
between your classes so what that will

746
00:24:24,179 --> 00:24:26,880
try to do is for arbitrary data find

747
00:24:26,880 --> 00:24:28,679
what side of that decision boundary that

748
00:24:28,679 --> 00:24:31,140
data will will fall onto and then

749
00:24:31,140 --> 00:24:33,539
classify it as such so in our case we're

750
00:24:33,539 --> 00:24:35,159
talking about a two different

751
00:24:35,159 --> 00:24:37,440
classifiers is obfuscated or is not so

752
00:24:37,440 --> 00:24:39,059
in whatever kind of hyperspace boundary

753
00:24:39,059 --> 00:24:41,100
you come up with based on our uh our

754
00:24:41,100 --> 00:24:42,480
variables this will attempt to

755
00:24:42,480 --> 00:24:46,760
declassify what that data looks like

756
00:24:48,299 --> 00:24:50,460
since we know the answers to all the

757
00:24:50,460 --> 00:24:52,440
questions that we just gave the machines

758
00:24:52,440 --> 00:24:54,240
we can then evaluate the results because

759
00:24:54,240 --> 00:24:56,100
we know what it should have found so we

760
00:24:56,100 --> 00:24:58,380
can calculate how the model worked and

761
00:24:58,380 --> 00:24:59,820
what it did find versus the things that

762
00:24:59,820 --> 00:25:01,799
it should have found the two pieces of

763
00:25:01,799 --> 00:25:03,720
data in question that we'll be caring

764
00:25:03,720 --> 00:25:04,919
about here is about the Precision the

765
00:25:04,919 --> 00:25:06,659
recall so you can think of the precision

766
00:25:06,659 --> 00:25:07,919
as the number of things that you

767
00:25:07,919 --> 00:25:10,200
directly found versus the total number

768
00:25:10,200 --> 00:25:11,640
of things that you do found so that

769
00:25:11,640 --> 00:25:13,740
basically is a ratio of true positive

770
00:25:13,740 --> 00:25:16,080
spawn to True positives plus false

771
00:25:16,080 --> 00:25:17,280
positives

772
00:25:17,280 --> 00:25:19,020
the recall is kind of the reverse of

773
00:25:19,020 --> 00:25:19,980
that so that's the number of things that

774
00:25:19,980 --> 00:25:21,900
you found versus the number of things

775
00:25:21,900 --> 00:25:23,340
that you should have found so in other

776
00:25:23,340 --> 00:25:24,600
words this is the ratio of your true

777
00:25:24,600 --> 00:25:27,360
positives for uh versus true positives

778
00:25:27,360 --> 00:25:29,039
plus false negatives that's a measure

779
00:25:29,039 --> 00:25:30,360
kind of like how much stuff you missed

780
00:25:30,360 --> 00:25:31,799
and then the F1 score is another

781
00:25:31,799 --> 00:25:33,600
calculation you can do is a harmonic

782
00:25:33,600 --> 00:25:36,120
mean of those two scores and because we

783
00:25:36,120 --> 00:25:37,860
know all the answers this uh

784
00:25:37,860 --> 00:25:39,419
scikit-learn can just calculate this

785
00:25:39,419 --> 00:25:41,640
stuff for us so this becomes how we

786
00:25:41,640 --> 00:25:43,500
evaluate the model that we just trained

787
00:25:43,500 --> 00:25:45,600
and if we need to tweak things add

788
00:25:45,600 --> 00:25:47,820
change alter variables we can do that

789
00:25:47,820 --> 00:25:50,460
based on this so the code that I will be

790
00:25:50,460 --> 00:25:52,500
sharing today like has has had this work

791
00:25:52,500 --> 00:25:54,299
done before in my world it works pretty

792
00:25:54,299 --> 00:25:57,059
well your mileage may vary vary and feel

793
00:25:57,059 --> 00:26:00,860
free to tweak as needed

794
00:26:03,059 --> 00:26:07,260
so at this point we have a trained model

795
00:26:07,260 --> 00:26:09,240
we've trusted its results

796
00:26:09,240 --> 00:26:10,740
we've gone and looked at how effective

797
00:26:10,740 --> 00:26:12,299
it was maybe gone back and done some

798
00:26:12,299 --> 00:26:13,799
tweaking to get this thing exactly

799
00:26:13,799 --> 00:26:15,539
dialed in the way you wanted to and now

800
00:26:15,539 --> 00:26:17,220
it's time to go apply the model to some

801
00:26:17,220 --> 00:26:18,900
new uncontrolled data in other words

802
00:26:18,900 --> 00:26:20,220
we're going to be actually doing hunting

803
00:26:20,220 --> 00:26:21,779
with this so

804
00:26:21,779 --> 00:26:23,640
the point about this is now once our

805
00:26:23,640 --> 00:26:25,620
model is trained and running we can now

806
00:26:25,620 --> 00:26:27,299
take a brand new Corpus of data that

807
00:26:27,299 --> 00:26:28,559
we've just collected from across our

808
00:26:28,559 --> 00:26:29,940
Enterprise for as far back as you want

809
00:26:29,940 --> 00:26:31,919
to go and feed it to the model and use

810
00:26:31,919 --> 00:26:33,360
it to predict whether there is

811
00:26:33,360 --> 00:26:34,919
obfuscation in any of that and again

812
00:26:34,919 --> 00:26:36,539
this kind of boils down to just a single

813
00:26:36,539 --> 00:26:37,799
line of python

814
00:26:37,799 --> 00:26:40,500
it's svc's predict model down here so

815
00:26:40,500 --> 00:26:42,299
what we'll do is feed new data to that

816
00:26:42,299 --> 00:26:44,700
and have it issue a new prediction based

817
00:26:44,700 --> 00:26:48,380
off our previously trained model

818
00:26:50,159 --> 00:26:53,340
and then see what you get so what my

819
00:26:53,340 --> 00:26:55,620
code right now uh does the way it exists

820
00:26:55,620 --> 00:26:57,779
right now is it consumes

821
00:26:57,779 --> 00:26:59,640
um just a flat file a CSV there's no

822
00:26:59,640 --> 00:27:01,320
reason you couldn't alter that if you

823
00:27:01,320 --> 00:27:03,419
have an API key to some larger data set

824
00:27:03,419 --> 00:27:05,039
someplace else to go get it at rest or

825
00:27:05,039 --> 00:27:07,020
whatever and it'll spit the results out

826
00:27:07,020 --> 00:27:09,299
into another five file a CSV for a human

827
00:27:09,299 --> 00:27:11,460
to go look at it from so

828
00:27:11,460 --> 00:27:13,620
um in this case for me so what I did for

829
00:27:13,620 --> 00:27:15,419
the last time I tried running this with

830
00:27:15,419 --> 00:27:17,279
an uncontrolled data set I intentionally

831
00:27:17,279 --> 00:27:19,140
appended one obfuscated command on the

832
00:27:19,140 --> 00:27:20,940
end of it I then went graph the results

833
00:27:20,940 --> 00:27:22,620
on the length of the command versus just

834
00:27:22,620 --> 00:27:24,539
the count of alphanumeric characters and

835
00:27:24,539 --> 00:27:25,919
sure enough it found the one thing that

836
00:27:25,919 --> 00:27:27,779
I that I stuck in there as obfuscated

837
00:27:27,779 --> 00:27:29,340
you can see it is that red dot over

838
00:27:29,340 --> 00:27:31,080
there it deviates from that linear

839
00:27:31,080 --> 00:27:33,120
relationship quite a bit

840
00:27:33,120 --> 00:27:33,840
um

841
00:27:33,840 --> 00:27:35,820
and you can find it so this wound up

842
00:27:35,820 --> 00:27:37,740
being a very effective thing

843
00:27:37,740 --> 00:27:39,120
um in practice so I was pretty happy

844
00:27:39,120 --> 00:27:40,559
about that and this this winds up being

845
00:27:40,559 --> 00:27:43,440
something that I can hopefully share so

846
00:27:43,440 --> 00:27:47,039
this is kind of why this is effective uh

847
00:27:47,039 --> 00:27:48,480
why I love doing this kind of stuff so

848
00:27:48,480 --> 00:27:51,360
much is because it's fairly genericized

849
00:27:51,360 --> 00:27:54,539
it doesn't care how an adversary might

850
00:27:54,539 --> 00:27:55,980
have obfuscated their commands all it

851
00:27:55,980 --> 00:27:57,299
cares about is that it's just it is

852
00:27:57,299 --> 00:27:59,240
obviously it just phones stuff that was

853
00:27:59,240 --> 00:28:02,159
consistent with being obfuscated in the

854
00:28:02,159 --> 00:28:04,799
first place and categorize it as such so

855
00:28:04,799 --> 00:28:06,600
that's why this you know boils down to

856
00:28:06,600 --> 00:28:07,980
it it really don't have to get into

857
00:28:07,980 --> 00:28:10,260
specifics about how the adversary might

858
00:28:10,260 --> 00:28:12,779
have obfuscated the tune

859
00:28:12,779 --> 00:28:15,000
um the feature set building is is kind

860
00:28:15,000 --> 00:28:16,440
of done automatically and we don't need

861
00:28:16,440 --> 00:28:17,940
to do a lot of additional massaging to

862
00:28:17,940 --> 00:28:19,740
the data we just are looking at counts

863
00:28:19,740 --> 00:28:21,720
of characters within strings

864
00:28:21,720 --> 00:28:24,419
um so we don't have things that are

865
00:28:24,419 --> 00:28:26,039
um different orders of magnitude and

866
00:28:26,039 --> 00:28:27,360
have to be normalized out between the

867
00:28:27,360 --> 00:28:28,799
two of them we're talking about you know

868
00:28:28,799 --> 00:28:30,659
orders of 10 of the first maybe 10 of

869
00:28:30,659 --> 00:28:32,580
the second for really long ones

870
00:28:32,580 --> 00:28:34,860
um so not a whole lot of things here

871
00:28:34,860 --> 00:28:35,940
um so these are fairly close together

872
00:28:35,940 --> 00:28:38,039
and don't require require a lot of data

873
00:28:38,039 --> 00:28:39,600
manipulation before you feed it to the

874
00:28:39,600 --> 00:28:40,679
model

875
00:28:40,679 --> 00:28:42,419
um and if if you think about it this is

876
00:28:42,419 --> 00:28:44,220
kind of intuitive right so if your

877
00:28:44,220 --> 00:28:45,779
command is obfuscated kind of like we

878
00:28:45,779 --> 00:28:47,580
saw before you're going to see a lot of

879
00:28:47,580 --> 00:28:49,440
weird characters and the more weird

880
00:28:49,440 --> 00:28:51,600
characters you see in something the less

881
00:28:51,600 --> 00:28:53,880
it looks like a benign normal human

882
00:28:53,880 --> 00:28:56,100
readable command so that's why this

883
00:28:56,100 --> 00:28:58,679
becomes a very predictive and useful

884
00:28:58,679 --> 00:29:00,860
model

885
00:29:04,320 --> 00:29:06,600
to operationalize it so

886
00:29:06,600 --> 00:29:08,100
what I always want to ask when doing

887
00:29:08,100 --> 00:29:09,600
something like this is okay this is cool

888
00:29:09,600 --> 00:29:12,480
I got it working now what how do we take

889
00:29:12,480 --> 00:29:14,580
it Forward what's the next step so what

890
00:29:14,580 --> 00:29:15,840
I have been doing from time to time is

891
00:29:15,840 --> 00:29:17,279
I'll just regenerate a bunch of data and

892
00:29:17,279 --> 00:29:18,480
just feed it back to the model and just

893
00:29:18,480 --> 00:29:19,919
make sure that it works and if you need

894
00:29:19,919 --> 00:29:21,539
to protect it and make sure that it's

895
00:29:21,539 --> 00:29:22,860
doing what I think it's going to be

896
00:29:22,860 --> 00:29:25,380
doing what I'm going to be doing here in

897
00:29:25,380 --> 00:29:27,120
the future is the intent what I want to

898
00:29:27,120 --> 00:29:29,460
do is take the search that generated a

899
00:29:29,460 --> 00:29:31,020
day in the first place and automate that

900
00:29:31,020 --> 00:29:33,000
through something like Kafka

901
00:29:33,000 --> 00:29:34,500
take those results and put them

902
00:29:34,500 --> 00:29:36,840
someplace I can get at them and then use

903
00:29:36,840 --> 00:29:39,120
a notebook automator to run the routine

904
00:29:39,120 --> 00:29:40,500
over and over and over again with new

905
00:29:40,500 --> 00:29:42,000
uncontrolled data every time I get it

906
00:29:42,000 --> 00:29:43,620
run from it and then just have the

907
00:29:43,620 --> 00:29:46,020
results sent to human

908
00:29:46,020 --> 00:29:48,120
um I'm assuming that this won't be

909
00:29:48,120 --> 00:29:49,919
necessarily good enough for static

910
00:29:49,919 --> 00:29:51,899
detection yet but maybe it might be

911
00:29:51,899 --> 00:29:53,340
overtime if I can get this more dialed

912
00:29:53,340 --> 00:29:55,080
in maybe we'll just have results sent

913
00:29:55,080 --> 00:29:57,419
directly to glass for our IR people and

914
00:29:57,419 --> 00:29:59,340
just you know cut me out of it entirely

915
00:29:59,340 --> 00:30:00,779
and just have a very good static

916
00:30:00,779 --> 00:30:02,760
detection so time will tell on that one

917
00:30:02,760 --> 00:30:04,140
but for right now I just kind of want to

918
00:30:04,140 --> 00:30:06,059
use this as a hunting technique rather

919
00:30:06,059 --> 00:30:08,539
than a detection

920
00:30:11,940 --> 00:30:14,279
so to sum up here

921
00:30:14,279 --> 00:30:15,840
I love

922
00:30:15,840 --> 00:30:18,419
not only effective Solutions but when an

923
00:30:18,419 --> 00:30:19,860
effective solution is also simple and

924
00:30:19,860 --> 00:30:21,960
intuitive and easy to share those are my

925
00:30:21,960 --> 00:30:23,820
favorite kinds because you know not only

926
00:30:23,820 --> 00:30:25,559
can I share this but what I'm really

927
00:30:25,559 --> 00:30:26,880
hoping is that other people are going to

928
00:30:26,880 --> 00:30:28,919
be able to take this and go oh cool I

929
00:30:28,919 --> 00:30:30,480
know what else I can do with this you

930
00:30:30,480 --> 00:30:31,860
know I take it I love it when people can

931
00:30:31,860 --> 00:30:33,659
take good ideas and take it to the next

932
00:30:33,659 --> 00:30:36,240
step so that's why this wound up being

933
00:30:36,240 --> 00:30:37,980
such a cool thing to talk about

934
00:30:37,980 --> 00:30:38,940
um

935
00:30:38,940 --> 00:30:41,399
think about what we might do next steps

936
00:30:41,399 --> 00:30:43,260
too so like I said I'm trying to my

937
00:30:43,260 --> 00:30:44,700
intention is to be able to automate both

938
00:30:44,700 --> 00:30:46,200
the data collection and ingestion and

939
00:30:46,200 --> 00:30:48,059
Analysis what else might be something

940
00:30:48,059 --> 00:30:49,440
cool we could do with a technique such

941
00:30:49,440 --> 00:30:50,520
as this

942
00:30:50,520 --> 00:30:51,539
um maybe there are different machine

943
00:30:51,539 --> 00:30:52,860
learning techniques that might be useful

944
00:30:52,860 --> 00:30:54,480
for finding obfuscated powers they

945
00:30:54,480 --> 00:30:55,500
probably are

946
00:30:55,500 --> 00:30:56,700
just happens to be one that I've been

947
00:30:56,700 --> 00:30:58,500
kind of running with and using so that's

948
00:30:58,500 --> 00:31:00,480
why I wanted to share with everybody and

949
00:31:00,480 --> 00:31:02,760
the cool part about this is it's pretty

950
00:31:02,760 --> 00:31:04,679
much repeatable on demand whenever you

951
00:31:04,679 --> 00:31:06,240
want it as long as you can get new data

952
00:31:06,240 --> 00:31:08,520
as long as you can keep your model

953
00:31:08,520 --> 00:31:09,899
trained and run you should be able to

954
00:31:09,899 --> 00:31:11,760
feed data to it pretty much however I

955
00:31:11,760 --> 00:31:13,559
often you want so because of all this

956
00:31:13,559 --> 00:31:14,880
stuff this is something that can just

957
00:31:14,880 --> 00:31:16,500
directly improve your security posture

958
00:31:16,500 --> 00:31:18,240
this is something that you can get value

959
00:31:18,240 --> 00:31:19,500
out of right away which is my whole

960
00:31:19,500 --> 00:31:21,779
intent of sharing this with the larger

961
00:31:21,779 --> 00:31:24,740
group today in the first place

962
00:31:26,700 --> 00:31:28,200
and that's kind of my charge for

963
00:31:28,200 --> 00:31:30,299
everybody else here so um I would love

964
00:31:30,299 --> 00:31:33,419
for people to go try this stuff out

965
00:31:33,419 --> 00:31:34,980
um test it out in your world let me know

966
00:31:34,980 --> 00:31:36,480
how it goes I love it when people hit me

967
00:31:36,480 --> 00:31:37,860
up and go hey man I tried some of your

968
00:31:37,860 --> 00:31:39,179
stuff and we're great and not only that

969
00:31:39,179 --> 00:31:41,760
but I may do this too uh that's that

970
00:31:41,760 --> 00:31:42,960
kind of stuff makes my day I would love

971
00:31:42,960 --> 00:31:44,220
to hear

972
00:31:44,220 --> 00:31:45,419
um trying this kind of stuff out so

973
00:31:45,419 --> 00:31:47,779
check it out it's a github.com

974
00:31:47,779 --> 00:31:50,279
threat hunting while you're there check

975
00:31:50,279 --> 00:31:51,539
out all the other stuff in the slash

976
00:31:51,539 --> 00:31:54,179
Target repo made by a bunch of my very

977
00:31:54,179 --> 00:31:56,159
cool and Brilliant colleagues we've

978
00:31:56,159 --> 00:31:57,960
shared a lot of really fun things really

979
00:31:57,960 --> 00:31:59,340
interesting things for the world there's

980
00:31:59,340 --> 00:32:00,779
some great Tooling in there so go check

981
00:32:00,779 --> 00:32:02,580
that out we've made it all available to

982
00:32:02,580 --> 00:32:04,140
the world and we love to share this kind

983
00:32:04,140 --> 00:32:07,279
of stuff with other people

984
00:32:08,299 --> 00:32:12,779
so that is my talk for today so uh thank

985
00:32:12,779 --> 00:32:14,520
you again everyone for attending I

986
00:32:14,520 --> 00:32:15,960
really appreciate everyone taking their

987
00:32:15,960 --> 00:32:17,880
time um to come and hear what I had to

988
00:32:17,880 --> 00:32:19,860
say today uh please enjoy this sense

989
00:32:19,860 --> 00:32:22,380
they're hunting uh defer Summit for 2022

990
00:32:22,380 --> 00:32:24,120
there's some amazing speakers here I'm

991
00:32:24,120 --> 00:32:25,740
really looking for

992
00:32:25,740 --> 00:32:26,880
looking forward uh and feel free to hit

993
00:32:26,880 --> 00:32:28,679
me up send me send me an email hit me up

994
00:32:28,679 --> 00:32:29,700
on LinkedIn

995
00:32:29,700 --> 00:32:31,080
uh I love to talk about this kind of

996
00:32:31,080 --> 00:32:32,220
stuff so I would love to hear from

997
00:32:32,220 --> 00:32:33,059
everyone

998
00:32:33,059 --> 00:32:35,880
and all and uh that is what I've had to

999
00:32:35,880 --> 00:32:37,080
say for today so thank you again

1000
00:32:37,080 --> 00:32:40,020
everyone for your attendance today

1001
00:32:40,020 --> 00:32:43,020
foreign

