1
00:00:11,344 --> 00:00:14,213
(audience clapping)

2
00:00:14,214 --> 00:00:15,148
- Thank you, well appreciate it.

3
00:00:15,148 --> 00:00:16,383
Thanks everyone for joining us.

4
00:00:16,383 --> 00:00:18,118
Thank you for attending
a Mandiant talk today,

5
00:00:18,118 --> 00:00:21,688
I know there was no other
choice to go and see.

6
00:00:21,688 --> 00:00:23,288
So happens that
they paired us up

7
00:00:23,289 --> 00:00:25,158
so we could just take
over the room together,

8
00:00:25,158 --> 00:00:28,094
but in any event, again,
Matt, Jacob, happy to be here.

9
00:00:28,094 --> 00:00:30,230
Super excited to get with
this small format too.

10
00:00:30,230 --> 00:00:31,364
Just want to start
and take a second.

11
00:00:31,364 --> 00:00:32,532
I'm sure everyone hopefully got

12
00:00:32,531 --> 00:00:34,266
to attend our
event before lunch.

13
00:00:34,267 --> 00:00:35,769
We're dedicating this
presentation to Ken,

14
00:00:35,769 --> 00:00:37,470
a lot of the (mumbles)
research and presentations

15
00:00:37,470 --> 00:00:38,938
that we're doing this year,

16
00:00:38,938 --> 00:00:41,174
we are dedicating to Ken's
memory, and his family is here,

17
00:00:41,174 --> 00:00:42,942
and if anyone gets a chance,
please go talk to them,

18
00:00:42,942 --> 00:00:44,044
they are absolutely awesome,

19
00:00:44,044 --> 00:00:45,412
and really cool to talk to.

20
00:00:46,880 --> 00:00:48,348
So that being said, there's a
really, really quick agenda.

21
00:00:48,348 --> 00:00:51,184
This is the X big
four, and Jacob and I,

22
00:00:51,184 --> 00:00:52,552
we feel like we need
to lay out an agenda

23
00:00:52,552 --> 00:00:53,853
to tell you what
we're gonna talk about

24
00:00:53,853 --> 00:00:55,155
as opposed to just
talking about it,

25
00:00:55,155 --> 00:00:56,589
so we're just gonna
fly past this part.

26
00:00:56,589 --> 00:00:58,190
First we're gonna
get in to who we are.

27
00:00:58,191 --> 00:00:59,859
While Jacob learns how
a microphone works,

28
00:00:59,859 --> 00:01:01,361
I'm gonna tell ya right now

29
00:01:01,361 --> 00:01:02,595
that this next section is
by far the most boring part

30
00:01:02,595 --> 00:01:03,863
of the presentation.

31
00:01:03,863 --> 00:01:05,698
If you have insomnia,
just read this slide,

32
00:01:05,698 --> 00:01:08,000
I will cure it for you
in about two seconds.

33
00:01:08,001 --> 00:01:09,702
My name is Matt again, as
(mumbles) eloquently put,

34
00:01:09,702 --> 00:01:10,637
I work at Mandiant,

35
00:01:10,637 --> 00:01:11,905
which is now a FireEye company,

36
00:01:11,905 --> 00:01:13,873
which owns a bunch of
other things as well.

37
00:01:13,873 --> 00:01:16,176
In my previous life, I worked
with a lot of crazy chefs

38
00:01:16,176 --> 00:01:18,211
and then two of the big four.

39
00:01:18,211 --> 00:01:20,713
- And I also worked for the
same two of the big four,

40
00:01:20,713 --> 00:01:23,315
so we don't quite have
'em covered between us,

41
00:01:23,316 --> 00:01:26,286
and also currently
working at Mandiant now.

42
00:01:26,286 --> 00:01:28,621
- And then if you wanted
to get a hold of us outside

43
00:01:28,621 --> 00:01:30,423
of this presentation
or this conference,

44
00:01:30,423 --> 00:01:32,725
I tweet and blog, and
Jacob does the same as well

45
00:01:32,725 --> 00:01:33,960
from the blogging front.

46
00:01:33,960 --> 00:01:36,062
So, feel free to
come and find us.

47
00:01:36,062 --> 00:01:38,431
If you can find the
age of Jacob posts,

48
00:01:38,431 --> 00:01:39,833
it's really, really good stuff,

49
00:01:39,833 --> 00:01:41,000
he just posted it
a long time ago,

50
00:01:41,000 --> 00:01:41,901
and I still reference it.

51
00:01:41,901 --> 00:01:43,169
- Yeah.

52
00:01:43,169 --> 00:01:44,437
Go read it, it's
really good stuff.

53
00:01:44,437 --> 00:01:45,472
All right, so first
we have to talk about

54
00:01:45,472 --> 00:01:47,440
why we care so much about SQL.

55
00:01:47,440 --> 00:01:49,609
There are amazing
artifacts inside

56
00:01:49,609 --> 00:01:50,877
of all these operating systems

57
00:01:50,877 --> 00:01:52,178
and everyone here does
a lot of research,

58
00:01:52,178 --> 00:01:53,746
spends a lot of time looking at,

59
00:01:53,746 --> 00:01:55,782
and we're like the two guys
out on the side, like, nah,

60
00:01:55,782 --> 00:01:57,350
you need to be looking
at the database,

61
00:01:57,350 --> 00:02:00,452
that's where you need to be,
that's where everything is.

62
00:02:00,453 --> 00:02:01,888
Why do we care?

63
00:02:01,888 --> 00:02:04,491
Because, guess who else really,
really cares, any guesses?

64
00:02:04,491 --> 00:02:07,060
Who else really cares
about your database?

65
00:02:07,060 --> 00:02:09,027
Your attackers, they
really, really care

66
00:02:09,027 --> 00:02:10,496
about what's inside
of the database.

67
00:02:10,497 --> 00:02:12,298
Quite frankly, that's probably
why you're being targeted

68
00:02:12,298 --> 00:02:13,533
in the first place,

69
00:02:13,533 --> 00:02:15,902
and as investigators,
as incident responders,

70
00:02:15,902 --> 00:02:18,438
as what make believe detectives,

71
00:02:18,438 --> 00:02:19,905
which we like to think we are,

72
00:02:19,906 --> 00:02:21,741
we also paint pictures as well.

73
00:02:21,741 --> 00:02:23,209
We describe narratives.

74
00:02:23,209 --> 00:02:25,478
We tell a story of what happened

75
00:02:25,478 --> 00:02:26,980
during a breach,
during an incident,

76
00:02:26,980 --> 00:02:28,815
and we tell these whether
it's to our clients,

77
00:02:28,815 --> 00:02:31,351
to our bosses, to our
(mumbles), to whomever,

78
00:02:31,351 --> 00:02:33,686
to regulators, lawyers,
we have to paint

79
00:02:33,686 --> 00:02:35,989
the most complete
picture we possibly can,

80
00:02:35,989 --> 00:02:38,024
and the number of times
I've seen a reporter,

81
00:02:38,024 --> 00:02:40,093
I've seen an incident where
it says, yep, someone came in,

82
00:02:40,093 --> 00:02:42,295
they attacked us via
this really cool exploit.

83
00:02:42,295 --> 00:02:44,329
Then they did all this
really awesome SQL injection.

84
00:02:44,330 --> 00:02:46,266
Look at them getting smarter
as the minutes go on,

85
00:02:46,266 --> 00:02:48,134
look at this change,
look at this adaptation,

86
00:02:48,134 --> 00:02:49,869
look at them figuring
out our environment,

87
00:02:49,869 --> 00:02:52,005
and then the data walked out
the door, boom, all right,

88
00:02:52,005 --> 00:02:53,472
awesome, done.

89
00:02:53,473 --> 00:02:56,109
There's a giant missing piece
there in that statement.

90
00:02:56,109 --> 00:02:57,844
What the heck left?

91
00:02:57,844 --> 00:02:59,646
What walked out the door?

92
00:02:59,646 --> 00:03:01,981
10 gigs of data were
stolen means nothing to me

93
00:03:01,981 --> 00:03:03,917
if you can't quantify
those 10 gigs.

94
00:03:03,917 --> 00:03:05,251
We can talk about other avenues.

95
00:03:05,251 --> 00:03:06,219
Was it encrypted?

96
00:03:06,219 --> 00:03:07,186
Was it encrypted by us?

97
00:03:07,187 --> 00:03:08,354
Was it encrypted by them?

98
00:03:08,354 --> 00:03:10,557
But where did 10 gigs come from?

99
00:03:10,557 --> 00:03:12,191
Flip side of that
is that SQL analysis

100
00:03:12,192 --> 00:03:14,427
can also help you
answer questions

101
00:03:14,427 --> 00:03:15,962
in a reverse way as well.

102
00:03:15,962 --> 00:03:17,630
10 gigs walk out the door,

103
00:03:17,630 --> 00:03:20,200
the SQL database
is 10 megs in size.

104
00:03:20,200 --> 00:03:22,569
All right, we need
to go somewhere else

105
00:03:22,569 --> 00:03:24,504
if we haven't yet understood it.

106
00:03:24,504 --> 00:03:26,638
So we care a lot about
SQL, and believe it or not,

107
00:03:26,639 --> 00:03:29,909
we've actually had quite a
few cases in the past year,

108
00:03:29,909 --> 00:03:31,444
that I'd say,
actually Jacob and I

109
00:03:31,444 --> 00:03:32,811
had our year at
Mandiant yesterday,

110
00:03:32,812 --> 00:03:34,781
so we're super happy,
our anniversary,

111
00:03:34,781 --> 00:03:36,616
if ya'll would celebrate for us.

112
00:03:36,616 --> 00:03:39,586
But in any event, we've had
a few cases in the past year

113
00:03:39,586 --> 00:03:42,222
that ave actually relied
on database forensics

114
00:03:42,222 --> 00:03:43,556
to answer that question.

115
00:03:43,556 --> 00:03:44,390
What walked out the door?

116
00:03:44,390 --> 00:03:45,625
What was stolen?

117
00:03:45,625 --> 00:03:46,826
Anything to add?

118
00:03:46,826 --> 00:03:49,095
- Yeah, just, there
is another party

119
00:03:49,095 --> 00:03:51,431
that will care very much about
what was in that database,

120
00:03:51,431 --> 00:03:52,899
and what might of
walked out the door,

121
00:03:52,899 --> 00:03:54,567
and that's the lawyers
you have to interact with.

122
00:03:54,567 --> 00:03:56,569
- Yeah, anybody here ever
interact with a lawyer?

123
00:03:56,569 --> 00:03:57,403
- Yeah.

124
00:03:57,403 --> 00:03:58,971
- Anyone here a lawyer?

125
00:03:58,972 --> 00:03:59,906
- Oh wait, oh.

126
00:03:59,906 --> 00:04:00,707
- All right.

127
00:04:00,707 --> 00:04:02,442
We gotta scale back

128
00:04:02,442 --> 00:04:04,711
some of the comments than.
- Yeah, all right.

129
00:04:04,711 --> 00:04:05,545
Might trim that.

130
00:04:06,646 --> 00:04:07,981
(Matt and Jacob laughing)

131
00:04:07,981 --> 00:04:09,515
- Fair enough, okay.

132
00:04:09,515 --> 00:04:11,149
- But out of each and every
bit that we can account for,

133
00:04:11,150 --> 00:04:12,652
they're gonna wanna
know, absolutely.

134
00:04:12,652 --> 00:04:13,886
- Anyone else think
of one other party

135
00:04:13,886 --> 00:04:15,321
that we maybe didn't
talk about so much

136
00:04:15,321 --> 00:04:17,290
that is really, really
interested in this as well?

137
00:04:17,290 --> 00:04:18,791
If you're a public
company, you have to answer

138
00:04:18,791 --> 00:04:20,026
to one of these bodies.

139
00:04:20,026 --> 00:04:21,394
- [Woman] I'd say
the Government.

140
00:04:21,394 --> 00:04:22,729
Regulators, yup.

141
00:04:23,963 --> 00:04:25,398
Government reports
are not fun to file,

142
00:04:25,398 --> 00:04:27,166
especially with a bunch
of question marks,

143
00:04:27,166 --> 00:04:28,868
'cause guess what,
you're doing more work,

144
00:04:28,868 --> 00:04:30,603
and guess what happens when
you run out of that hour cap

145
00:04:30,603 --> 00:04:32,238
you had as well, and you
didn't answer all the questions

146
00:04:32,238 --> 00:04:33,339
you were supposed to answer.

147
00:04:33,339 --> 00:04:35,608
Guess who's eatin' the money?

148
00:04:35,608 --> 00:04:37,143
Not the clients,
put it that way.

149
00:04:37,143 --> 00:04:40,113
So not only did we care about
this little part of forensics

150
00:04:40,113 --> 00:04:43,249
that not too many people
seem to really care about,

151
00:04:43,249 --> 00:04:45,318
and it's odd I'm saying this
with Kevvie Fowler in the room

152
00:04:45,318 --> 00:04:46,986
who actually wrote the
book on DB forensics,

153
00:04:46,986 --> 00:04:48,421
so this is like the one crowd

154
00:04:48,421 --> 00:04:50,522
where this is someone who cares
about it as much as we do,

155
00:04:50,523 --> 00:04:52,525
but, that being said, we also
took the challenge harder,

156
00:04:52,525 --> 00:04:55,094
and we said, you know
what, in previous talks

157
00:04:55,094 --> 00:04:57,430
and in some of our analysis,
we've talked a lot about

158
00:04:57,430 --> 00:05:00,800
putting an analyst inside of
SQL to pull back artifacts

159
00:05:00,800 --> 00:05:03,069
and analyze them that way.

160
00:05:03,069 --> 00:05:05,772
Is anyone in here
a Database Admin?

161
00:05:05,772 --> 00:05:06,973
Is your first role a Database
Admin, lets put it that way?

162
00:05:06,973 --> 00:05:08,675
- Or was in a
previous life even.

163
00:05:08,675 --> 00:05:09,909
- Or was it previously?
- I'll take that.

164
00:05:09,909 --> 00:05:12,344
- Yeah, in some
way shape or form,

165
00:05:12,345 --> 00:05:15,682
maybe you were a Database Admin,
is that your current role?

166
00:05:15,682 --> 00:05:18,384
Exactly, so why as
an investigator does,

167
00:05:18,384 --> 00:05:19,819
I mean we already,
how many roles

168
00:05:19,819 --> 00:05:22,055
do we already wear
now on the phone?

169
00:05:22,055 --> 00:05:24,490
I think this week, I've
been an incident responder,

170
00:05:24,490 --> 00:05:26,893
a network engineer,
or a mediation expert,

171
00:05:26,893 --> 00:05:29,395
a regulation expert, by the way,

172
00:05:29,395 --> 00:05:31,496
the expert is that little
quote thing around it,

173
00:05:31,497 --> 00:05:34,067
and you know we have to
answer questions all the time

174
00:05:34,067 --> 00:05:37,036
that we're not, are not
really our field of expertise.

175
00:05:37,036 --> 00:05:39,005
To take an incident
responder and say, all right,

176
00:05:39,005 --> 00:05:40,506
for this little bit of analysis,

177
00:05:40,506 --> 00:05:43,409
I need you to be a Database
Admin, doesn't make sense.

178
00:05:43,409 --> 00:05:45,344
You can also damage
volatile artifacts.

179
00:05:45,345 --> 00:05:47,814
The database is
extremely finicky.

180
00:05:47,814 --> 00:05:49,282
It lives primarily in memory,

181
00:05:49,282 --> 00:05:51,851
and we're gonna talk about
that in a little bit as well.

182
00:05:51,851 --> 00:05:54,320
- Requires you to
know SQL or DB Admin.

183
00:05:54,320 --> 00:05:55,888
Who here has ever
downloaded a script

184
00:05:55,888 --> 00:05:57,690
that you needed to use for
a tool, and it was broken,

185
00:05:57,690 --> 00:05:58,891
and you went to fix
it, and you were like,

186
00:05:58,891 --> 00:06:00,827
I don't understand
this language.

187
00:06:00,827 --> 00:06:03,496
I don't know how to fix this,
so I'll submit a bug report.

188
00:06:03,496 --> 00:06:04,731
You don't have
time for all that.

189
00:06:04,731 --> 00:06:05,965
How many people
downloaded a script

190
00:06:05,965 --> 00:06:07,566
and found it's just
one line of Perl?

191
00:06:07,567 --> 00:06:09,569
(audience laughing)

192
00:06:09,569 --> 00:06:12,972
Oh gosh, I'll just write
my, Eric Zimmerman,

193
00:06:12,972 --> 00:06:15,441
if you're around, if you're
available, help me out here,

194
00:06:15,441 --> 00:06:16,943
real quick.

195
00:06:16,943 --> 00:06:19,878
That being said, so why are
we asking our analysts to

196
00:06:19,879 --> 00:06:23,282
when the moment strikes, know
SQL, and know it well enough

197
00:06:23,282 --> 00:06:26,185
to walk a client through
responding to an incident.

198
00:06:26,185 --> 00:06:27,320
We're asked to wear many hats,

199
00:06:27,320 --> 00:06:29,222
DBA is normally not one of 'em,

200
00:06:29,222 --> 00:06:31,457
and the last one that is
most importantly as well,

201
00:06:31,457 --> 00:06:34,327
databases, their not designed
to be forensic artifacts.

202
00:06:34,327 --> 00:06:37,163
They're designed to take
data, do things with it,

203
00:06:37,163 --> 00:06:40,733
sort it, optimize it, index
it, make it readily available,

204
00:06:40,733 --> 00:06:42,602
and get it out of the door.

205
00:06:42,602 --> 00:06:44,102
It was put in
there for a reason,

206
00:06:44,103 --> 00:06:46,639
it is also being utilized
in some reason as well.

207
00:06:46,639 --> 00:06:48,374
So, why are we trying
to make something

208
00:06:48,374 --> 00:06:51,277
that's not a forensic
artifact a forensic artifact?

209
00:06:51,277 --> 00:06:52,544
The last little line's
most important one too,

210
00:06:52,545 --> 00:06:55,615
databases beat the
crap out of memory.

211
00:06:55,615 --> 00:06:57,583
So we thought, lets
take away the database.

212
00:06:57,583 --> 00:06:58,785
Put an analyst in a situation

213
00:06:58,785 --> 00:07:00,520
their comfortable with being in,

214
00:07:00,520 --> 00:07:02,889
let the analyst use tools
they're already familiar with.

215
00:07:02,889 --> 00:07:04,223
Why, why did we want to do this?

216
00:07:04,223 --> 00:07:06,392
'Cause it lets you
add this artifact,

217
00:07:06,392 --> 00:07:08,227
and this type of artifact
to your workflow,

218
00:07:08,227 --> 00:07:10,096
instead of having to
build a new workflow

219
00:07:10,096 --> 00:07:12,432
around database forensics.

220
00:07:12,432 --> 00:07:14,400
No one has to
become an SQL guru.

221
00:07:14,400 --> 00:07:16,568
I'll tell Jacob and I have
learned a lot of SQL guru,

222
00:07:16,569 --> 00:07:18,204
Jacob like 10
times more than me,

223
00:07:18,204 --> 00:07:20,173
which shows the
level of dedication,

224
00:07:21,641 --> 00:07:23,843
but the value is provided
to the client a lot faster

225
00:07:23,843 --> 00:07:25,912
when you come off as
an incident responder

226
00:07:25,912 --> 00:07:27,979
who is speaking about
artifacts you understand

227
00:07:27,980 --> 00:07:29,782
or speaking about a
process you understand,

228
00:07:29,782 --> 00:07:32,984
as opposed to, all right,
here's the script, lets try it,

229
00:07:32,985 --> 00:07:35,421
lets see what happens,
or worst part,

230
00:07:35,421 --> 00:07:36,756
and I've seen this
happen a couple times,

231
00:07:36,756 --> 00:07:38,523
luckily not on our team,
but I've seen this,

232
00:07:38,524 --> 00:07:40,393
hey I've wrote a script to xyz,

233
00:07:40,393 --> 00:07:43,695
can you have your Admin look
at it and make sure it's okay,

234
00:07:43,696 --> 00:07:44,931
and then run it?

235
00:07:44,931 --> 00:07:47,099
You very quickly lose
the expert opinion

236
00:07:47,099 --> 00:07:50,102
after issuing that
email, afterwards,
because they're like,

237
00:07:50,102 --> 00:07:51,471
oh my gosh, this guy
doesn't even know

238
00:07:51,471 --> 00:07:52,738
what he's talking about

239
00:07:52,738 --> 00:07:54,407
and he's asking us
to install things,

240
00:07:54,407 --> 00:07:57,210
pull back data, modify
our environment.

241
00:07:57,210 --> 00:07:58,710
He's also asking us to
respond to an incident,

242
00:07:58,711 --> 00:08:00,880
which we're not doing
a very good job at.

243
00:08:00,880 --> 00:08:02,715
- And, you know, it
really helps to work

244
00:08:02,715 --> 00:08:04,950
with the client's DBA
in a lot of these cases,

245
00:08:04,951 --> 00:08:07,753
because nobody's gonna know
that database better than them,

246
00:08:07,753 --> 00:08:09,255
other than maybe the attacker.

247
00:08:09,255 --> 00:08:10,189
- Yeah (giggles), true.
- Depending on

248
00:08:10,189 --> 00:08:11,691
how long they've been there.

249
00:08:11,691 --> 00:08:13,258
- Anyone here ever learned
anything about their network

250
00:08:13,259 --> 00:08:14,093
from an attack?

251
00:08:14,093 --> 00:08:14,994
- Yeah.

252
00:08:14,994 --> 00:08:16,162
It's okay, you can raise

253
00:08:16,162 --> 00:08:17,395
your hand--
- It's a fun day.

254
00:08:17,396 --> 00:08:17,597
- ..we know it's happened
- Yeah.

255
00:08:18,531 --> 00:08:19,732
So yeah, work with those guys.

256
00:08:19,732 --> 00:08:21,200
They know their
stuff inside and out.

257
00:08:21,200 --> 00:08:23,002
They know the queries
that you're trying to run,

258
00:08:23,002 --> 00:08:25,004
and going back to
the volatily point,

259
00:08:25,004 --> 00:08:27,273
I mean every time you
run one of these scripts,

260
00:08:27,273 --> 00:08:28,975
lets say you hack
something together

261
00:08:28,975 --> 00:08:30,710
and it doesn't work
the way you want,

262
00:08:30,710 --> 00:08:32,144
that's gonna be
pushing something else

263
00:08:32,144 --> 00:08:34,113
out the backend, and
overriding some data

264
00:08:34,113 --> 00:08:35,581
you probably wanted to get at.

265
00:08:35,581 --> 00:08:38,183
- Exactly, we don't normally
test in production environments

266
00:08:38,183 --> 00:08:40,352
so why are we asking our
client to do the same?

267
00:08:40,352 --> 00:08:41,353
So what does that leave us with

268
00:08:41,354 --> 00:08:42,688
if we take away the database?

269
00:08:42,688 --> 00:08:44,857
It leaves us with a
few different things.

270
00:08:44,857 --> 00:08:46,025
Some of these are gonna
sound really familiar.

271
00:08:46,025 --> 00:08:49,028
Logs, log analysis, not foreign

272
00:08:49,028 --> 00:08:50,630
to most of the
people in the room.

273
00:08:50,630 --> 00:08:52,131
If you haven't done log
analysis yet, let me know,

274
00:08:52,131 --> 00:08:54,867
got some great sample datasets
we can play around with.

275
00:08:54,867 --> 00:08:58,603
Logs, when we say external
logs, we talk about logs

276
00:08:58,604 --> 00:09:00,606
that you don't need
SQL server to open,

277
00:09:00,606 --> 00:09:02,074
which believe it or not,

278
00:09:02,074 --> 00:09:04,010
if you've ever done any
sort of Microsoft analysis,

279
00:09:04,010 --> 00:09:05,878
to say I'm gonna give
you a Microsoft log,

280
00:09:05,878 --> 00:09:07,380
and you can open
it in text editor,

281
00:09:07,380 --> 00:09:09,015
it should start blowing
your mind a little bit,

282
00:09:09,015 --> 00:09:11,050
'cause most of the time you
have to download something,

283
00:09:11,050 --> 00:09:12,285
well sorry let me back up.

284
00:09:12,285 --> 00:09:13,920
Register for Technet,
download something,

285
00:09:13,920 --> 00:09:15,154
figure out how it installs,

286
00:09:15,154 --> 00:09:16,822
realize you don't know
what .NET really is,

287
00:09:16,822 --> 00:09:18,424
realize you have the
wrong version of .NET,

288
00:09:18,424 --> 00:09:19,925
and then by the time
you get to the artifact,

289
00:09:19,926 --> 00:09:22,428
it's kind of like, oh hey,
the attacker's already gone.

290
00:09:22,428 --> 00:09:25,498
Thank you for taking your
time to figure this out.

291
00:09:25,498 --> 00:09:29,101
We can also copy off
SQL data and log files.

292
00:09:29,101 --> 00:09:30,469
Jacob's got a
little bit of advice

293
00:09:30,469 --> 00:09:32,338
kind of about how this works.

294
00:09:32,338 --> 00:09:33,872
- Yeah, it's very
quick and dirty.

295
00:09:33,873 --> 00:09:36,676
You just grab the MDF, which
is the actual database,

296
00:09:36,676 --> 00:09:39,912
the LDF, which is the
associated transaction log,

297
00:09:39,912 --> 00:09:44,584
and you can spin up a VM, you
install SQL Management Studio,

298
00:09:44,584 --> 00:09:48,154
it's a whole process, but then
you can load the files in,

299
00:09:48,154 --> 00:09:50,590
you can actually do your own
queries against that data,

300
00:09:50,590 --> 00:09:52,258
with some caveats.

301
00:09:52,258 --> 00:09:55,528
- Exactly, and that's a super
helpful situation to be in,

302
00:09:55,528 --> 00:09:56,796
because you can say,

303
00:09:56,796 --> 00:09:58,331
I know the attacker's
ran these 20 queries.

304
00:09:58,331 --> 00:10:00,399
Let me run these 20 queries
and get the same dataset

305
00:10:00,399 --> 00:10:03,135
in a non-log, non-production,
completely safe,

306
00:10:03,135 --> 00:10:04,303
blocked off environment,

307
00:10:04,303 --> 00:10:06,105
and see what they
would have pulled back.

308
00:10:06,105 --> 00:10:07,440
All right, and it
helps you, and again,

309
00:10:07,440 --> 00:10:08,841
it's a negative
answer to a question,

310
00:10:08,841 --> 00:10:11,010
this database has 50
million credit cards in it.

311
00:10:11,010 --> 00:10:12,678
Well I did exactly
what the attacker did,

312
00:10:12,678 --> 00:10:14,580
and I only got 200,000.

313
00:10:15,748 --> 00:10:17,650
- And it did help
on a case recently.

314
00:10:17,650 --> 00:10:18,884
- Yeah, exactly.

315
00:10:18,884 --> 00:10:20,853
We did actually take
a massive database

316
00:10:20,853 --> 00:10:22,588
and size it back down.

317
00:10:22,588 --> 00:10:24,656
Then we've got, you know, kind
of the best artifact as well.

318
00:10:24,657 --> 00:10:26,492
We saved the best
for last, memory.

319
00:10:26,492 --> 00:10:27,892
Everyone loves memory.

320
00:10:28,828 --> 00:10:30,196
Why focus on memory?

321
00:10:30,196 --> 00:10:31,497
'Cause Microsoft wants it.

322
00:10:31,497 --> 00:10:33,632
They will use it and
they will abuse it.

323
00:10:33,633 --> 00:10:37,870
SQL Server 2014+ actually
came out with In-Memory OLTP,

324
00:10:37,870 --> 00:10:39,705
In-Memory Optimization.

325
00:10:39,705 --> 00:10:42,008
There are Database
Admins, who's entire job,

326
00:10:42,008 --> 00:10:43,242
anyone know what
the number one goal

327
00:10:43,242 --> 00:10:45,176
of a Database Admin is?

328
00:10:45,177 --> 00:10:46,912
Keep the database
up and running.

329
00:10:46,912 --> 00:10:50,549
They will not, they will take
a look at your please shutdown

330
00:10:50,549 --> 00:10:52,385
and make a forensic
image for me request,

331
00:10:52,385 --> 00:10:54,587
and just throw it away,
'cause their job is up time.

332
00:10:54,587 --> 00:10:56,455
Their job is to keep
the data available.

333
00:10:56,455 --> 00:10:58,391
There are Database
Admins who are experts

334
00:10:58,391 --> 00:11:00,793
at pushing as much as
they can into memory.

335
00:11:00,793 --> 00:11:02,995
Their optimizing records,
their optimizing tables,

336
00:11:02,995 --> 00:11:04,897
their optimizing entire DBs.

337
00:11:04,897 --> 00:11:08,467
It also means that with us
pushing more data to SQL,

338
00:11:08,467 --> 00:11:11,270
it makes memory more of a
valuable artifact for us.

339
00:11:11,270 --> 00:11:13,706
Now, granted, that being
said, we've got a screenshot

340
00:11:13,706 --> 00:11:14,940
of 2014 up here.

341
00:11:14,940 --> 00:11:16,876
Anyone still running SQL 2005?

342
00:11:16,876 --> 00:11:19,911
It's okay, you can say, we
won't hold it against you for--

343
00:11:19,912 --> 00:11:21,113
- Or even earlier.

344
00:11:21,113 --> 00:11:23,783
- ..aside from testing
okay (giggles).

345
00:11:23,783 --> 00:11:26,152
But 2008, seems to be the
one we run into the most.

346
00:11:26,152 --> 00:11:28,020
So, from a forensic
point of view, again,

347
00:11:28,020 --> 00:11:31,156
you know there's all these
awesome Windows 10 artifacts.

348
00:11:31,157 --> 00:11:33,693
The last enterprise scale
investigation I've done

349
00:11:33,693 --> 00:11:34,960
was Windows 7.

350
00:11:34,960 --> 00:11:36,328
We had a couple Windows
10, and it was great to

351
00:11:36,328 --> 00:11:37,596
flex our muscles with
some of these things,

352
00:11:37,596 --> 00:11:39,832
but, you know, some
of the older models,

353
00:11:39,832 --> 00:11:41,300
or the older versions,

354
00:11:41,300 --> 00:11:42,535
are what we're still
seeing in the environment,

355
00:11:42,535 --> 00:11:44,270
so we have to account
for those as well.

356
00:11:44,270 --> 00:11:46,839
Last but not least,
we like memory

357
00:11:46,839 --> 00:11:49,442
because we're comfortable
with memory acquisitions,

358
00:11:49,442 --> 00:11:51,477
we're comfortable
with memory analysis.

359
00:11:51,477 --> 00:11:53,112
It gives us a quick
place to pivot.

360
00:11:53,112 --> 00:11:55,146
It gives us a very,
very quick way to say,

361
00:11:55,147 --> 00:11:56,682
this memory artifact
gave me blah,

362
00:11:56,682 --> 00:11:59,685
I know how to translate that
into xyz, as opposed to,

363
00:11:59,685 --> 00:12:01,152
I did the database forensics

364
00:12:01,153 --> 00:12:02,988
and this is what I have, now
I'll move on to something else.

365
00:12:02,988 --> 00:12:05,257
We need a way for this to become
part of the larger picture,

366
00:12:05,257 --> 00:12:06,492
not a silo artifact.

367
00:12:07,927 --> 00:12:10,763
So lets talk about
those other artifacts.

368
00:12:10,763 --> 00:12:14,133
- Yeah, we've got logs,
we've got lots of logs.

369
00:12:14,133 --> 00:12:18,637
You've got your basic Windows
event logs, SQL Server,

370
00:12:18,637 --> 00:12:21,306
every time the server
comes up or goes down,

371
00:12:21,307 --> 00:12:23,075
every time somebody logs in,

372
00:12:23,075 --> 00:12:25,611
these are all recorded in
your standard event logs.

373
00:12:25,611 --> 00:12:27,446
That's always a
nice place to start,

374
00:12:27,446 --> 00:12:31,851
but then we've also
got generated logs
by SQL Server itself.

375
00:12:31,851 --> 00:12:34,787
Specifically, these are
the Trace and Error Logs,

376
00:12:34,787 --> 00:12:37,623
which are both useful
in different situations.

377
00:12:37,623 --> 00:12:40,893
The Trace Logs are great
because they can give you actual

378
00:12:40,893 --> 00:12:43,496
like queries that were
run against the database.

379
00:12:43,496 --> 00:12:47,500
You can find login times,
users that we're logged in,

380
00:12:47,500 --> 00:12:49,435
a client they might
have been using.

381
00:12:49,435 --> 00:12:52,170
That was helpful on an
engagement we had recently

382
00:12:52,171 --> 00:12:54,406
where there was this
mysterious application

383
00:12:54,406 --> 00:12:55,674
connecting to the SQL Server,

384
00:12:55,674 --> 00:12:57,877
that none of the DB
Admins knew about,

385
00:12:57,877 --> 00:13:00,445
none of the business
users knew about--

386
00:13:00,446 --> 00:13:01,380
- (mumbles) smoking gun.

387
00:13:01,380 --> 00:13:02,782
- ..and, yeah, low and behold,

388
00:13:02,782 --> 00:13:04,917
that's part of the smoking gun,

389
00:13:04,917 --> 00:13:07,353
and then there were
also these Error Logs,

390
00:13:07,353 --> 00:13:10,421
which contrary to their name,
are not actually error logs,

391
00:13:10,422 --> 00:13:13,592
they are but they also
include login times,

392
00:13:13,592 --> 00:13:15,694
and stuff like that.
- Yeah, Error Logs,

393
00:13:17,263 --> 00:13:18,397
they're plain text.

394
00:13:18,397 --> 00:13:19,265
- They're plain text.

395
00:13:19,265 --> 00:13:20,499
- The best part.
- Yeah.

396
00:13:20,499 --> 00:13:21,734
- You can open them with
a normal text editor.

397
00:13:21,734 --> 00:13:24,203
You can GREP, SED, and
AWK a Microsoft log.

398
00:13:24,203 --> 00:13:27,173
That needs to be written down
in history books, I think.

399
00:13:27,173 --> 00:13:29,008
It does track other things
though, not just errors.

400
00:13:29,008 --> 00:13:31,243
Startup, shutdown,
log in, log out.

401
00:13:31,243 --> 00:13:33,746
Starting to seem like
Error Log was a misnomer

402
00:13:33,746 --> 00:13:35,347
for what is actually
stored in here,

403
00:13:35,347 --> 00:13:37,382
but this is from the same
place that gave us bad coffee

404
00:13:37,383 --> 00:13:40,119
and dead beef, let's
not forget that now.

405
00:13:40,119 --> 00:13:41,654
They can be removed and examined

406
00:13:41,654 --> 00:13:43,422
on a separate analysis system.

407
00:13:43,422 --> 00:13:44,690
Error Logs, it's also
important to note

408
00:13:44,690 --> 00:13:45,825
the state codes, as well.

409
00:13:45,825 --> 00:13:46,892
What is this telling me?

410
00:13:46,892 --> 00:13:48,127
What are my state codes meaning?

411
00:13:48,127 --> 00:13:49,328
Is it an invalid login?

412
00:13:49,328 --> 00:13:50,496
Is it an incorrect password?

413
00:13:50,496 --> 00:13:51,896
Is it an incorrect username?

414
00:13:51,897 --> 00:13:53,365
Is it an incorrect
Windows login?

415
00:13:53,365 --> 00:13:55,301
SQL can have it's own
authentication mechanism,

416
00:13:55,301 --> 00:13:57,469
or it can tie right in
with Active Directory,

417
00:13:57,469 --> 00:13:59,171
depends on what level it is.
- A bunch of brute force

418
00:13:59,171 --> 00:14:00,739
against the SA
account coming in.

419
00:14:00,739 --> 00:14:02,241
- Yep.
- Anything.

420
00:14:02,241 --> 00:14:03,609
- SA accounts where you
want to be by the way,

421
00:14:03,609 --> 00:14:05,411
if you are a red
teamer in the room.

422
00:14:06,612 --> 00:14:08,079
Other logs we've got as well

423
00:14:08,080 --> 00:14:09,515
that are super important,
our Windows Event Logs

424
00:14:09,515 --> 00:14:10,683
are gonna give us a lot as well.

425
00:14:10,683 --> 00:14:12,251
As anyone in here knows, Vista+,

426
00:14:12,251 --> 00:14:13,786
were gonna have
application specific.

427
00:14:13,786 --> 00:14:16,622
Our Web Logs, is gonna give
us the external access route

428
00:14:16,622 --> 00:14:18,089
to our DB.

429
00:14:18,090 --> 00:14:20,359
If you have a Web Server that
can access your database,

430
00:14:20,359 --> 00:14:22,361
via someway shape or form,
I don't care how many layers

431
00:14:22,361 --> 00:14:24,295
of segregation you
have between the two,

432
00:14:24,296 --> 00:14:26,632
that entire path
should be logged,

433
00:14:26,632 --> 00:14:28,766
because just when you think
you've got it all secured,

434
00:14:28,767 --> 00:14:30,202
someone out there
drop sums your day,

435
00:14:30,202 --> 00:14:32,538
and they figured out
something extremely unique

436
00:14:32,538 --> 00:14:33,873
that you never seen before,

437
00:14:33,873 --> 00:14:35,608
and boom, your data
walks out the door,

438
00:14:35,608 --> 00:14:38,142
and you say, oh no, I secured
it, I just didn't log it.

439
00:14:38,143 --> 00:14:40,379
That's when we get called,

440
00:14:40,379 --> 00:14:41,881
and it's a very
interesting discussion.

441
00:14:41,881 --> 00:14:43,716
Firewall Logs, anyone
here know the default port

442
00:14:43,716 --> 00:14:44,717
for SQL Server?

443
00:14:47,086 --> 00:14:48,721
No one?

444
00:14:48,721 --> 00:14:50,222
Hey, they we go, boom.

445
00:14:50,222 --> 00:14:51,457
All right, one winner, I wish
I had something to give out,

446
00:14:51,457 --> 00:14:53,192
I'm sorry, thank you
for answering though.

447
00:14:53,192 --> 00:14:55,194
That was fantastic (giggles).

448
00:14:55,194 --> 00:14:57,563
Know your ports, know
your logs, all right.

449
00:14:57,563 --> 00:15:00,799
Should 1433 ever be
connecting outbound, ever,

450
00:15:00,799 --> 00:15:02,834
over any sort of
connection whatsoever?

451
00:15:02,835 --> 00:15:04,837
If in your organization
the answer is yes,

452
00:15:04,837 --> 00:15:07,172
highly figure out why that is.

453
00:15:07,172 --> 00:15:10,142
If not, and you see it,
figure out why that is.

454
00:15:10,142 --> 00:15:12,278
1433 on the firewall
is interesting.

455
00:15:12,278 --> 00:15:13,545
Do we have suspected data theft?

456
00:15:13,545 --> 00:15:14,646
Know what your
logs can tell you.

457
00:15:14,647 --> 00:15:15,748
Aggregate it by counts.

458
00:15:15,748 --> 00:15:17,917
What can I get out of my logs?

459
00:15:17,917 --> 00:15:19,919
I'm not saying log
every single SQL Server

460
00:15:19,919 --> 00:15:22,521
that query that was ever
issued to the server,

461
00:15:22,521 --> 00:15:24,089
but log that route around
it, find ways to get

462
00:15:24,089 --> 00:15:26,292
and extract data from that,

463
00:15:26,292 --> 00:15:27,826
and then more importantly
as well, Network Traffic.

464
00:15:27,826 --> 00:15:29,795
This goes back again, know
your ports, know your IPs,

465
00:15:29,795 --> 00:15:31,697
all right, what
should be accessing it

466
00:15:31,697 --> 00:15:34,133
versus what is accessing it.

467
00:15:34,133 --> 00:15:35,367
- This is probably how you know

468
00:15:35,367 --> 00:15:36,669
if 10 gigs walked out
the door or not is--

469
00:15:36,669 --> 00:15:38,203
- Exactly, yeah.
- .. in the first place.

470
00:15:38,203 --> 00:15:39,805
- And that's not a fun
question to have to answer

471
00:15:39,805 --> 00:15:41,940
with a question mark either,
or a shrugged shoulder,

472
00:15:41,941 --> 00:15:43,108
or an I don't know.

473
00:15:43,108 --> 00:15:44,242
How much data
walked out the door?

474
00:15:45,377 --> 00:15:46,578
You didn't have a
login in place, sorry,

475
00:15:46,578 --> 00:15:48,347
I have no way of telling
you that whatsoever.

476
00:15:48,347 --> 00:15:50,149
Now lets look at the
other supreme artifact

477
00:15:50,149 --> 00:15:51,517
as well, memory.

478
00:15:51,517 --> 00:15:53,552
Why is memory so essential?

479
00:15:53,552 --> 00:15:55,220
Well, there's a
couple of tidbits here

480
00:15:55,220 --> 00:15:56,822
about some sizes of databases.

481
00:15:56,822 --> 00:15:59,558
Now we're not, number one,
displaying these as clients,

482
00:15:59,558 --> 00:16:00,592
and number two, we're
not displaying them

483
00:16:00,592 --> 00:16:02,127
as potential targets,

484
00:16:02,127 --> 00:16:03,429
we're just trying to give
you some sort of premises

485
00:16:03,429 --> 00:16:04,964
to have large
these datasets get.

486
00:16:04,964 --> 00:16:08,200
The Panoramic Survey Telescope
and Rapid Response System,

487
00:16:08,200 --> 00:16:11,904
or the Pan-STARRS, adds about,

488
00:16:11,904 --> 00:16:14,707
they have about a 1.1
petabyte database.

489
00:16:14,707 --> 00:16:16,175
NASDAQ, company
we can all agree,

490
00:16:16,175 --> 00:16:18,978
is probably somewhat important
to the Financial Industry,

491
00:16:18,978 --> 00:16:20,813
adds 500 terabytes of data

492
00:16:20,813 --> 00:16:23,314
to its SQL instance,
every single year,

493
00:16:23,315 --> 00:16:25,184
and the funny thing is, we
actually gave this talk,

494
00:16:25,184 --> 00:16:26,117
or we gave a
version of this talk

495
00:16:26,118 --> 00:16:27,519
and presented this statistic,

496
00:16:27,519 --> 00:16:28,754
I think in November
of last year,

497
00:16:28,754 --> 00:16:30,289
and a dude from NASDAQ
walked up and was like,

498
00:16:30,289 --> 00:16:33,692
bro, you're so under, it's
way much more than 500 gigs,

499
00:16:33,692 --> 00:16:35,794
500 terabytes a year,
and I was like cool,

500
00:16:35,794 --> 00:16:38,364
you just added more
validity to our discussion,

501
00:16:38,364 --> 00:16:39,565
but we're not gonna
change the slide

502
00:16:39,565 --> 00:16:41,834
'cause then I get
this story out of it.

503
00:16:41,834 --> 00:16:44,536
Lets look at another way
too, 500 terabytes a year,

504
00:16:44,536 --> 00:16:46,604
anyone here want to image
that database server?

505
00:16:46,605 --> 00:16:48,507
Distributed or not,
anyone want to image

506
00:16:48,507 --> 00:16:50,541
that logical volume?

507
00:16:50,542 --> 00:16:51,710
I didn't think so.

508
00:16:51,710 --> 00:16:53,045
What's gonna be
smaller than the size

509
00:16:53,045 --> 00:16:54,713
of that logical volume?

510
00:16:54,713 --> 00:16:59,318
The memory, just by sheer, the
way things work these days.

511
00:16:59,318 --> 00:17:01,687
Sometimes 128 gigs
is gonna be better

512
00:17:01,687 --> 00:17:05,156
than 6 terabytes for me,
'cause as an analyst,

513
00:17:05,156 --> 00:17:07,158
by the time I could
probably run some commands

514
00:17:07,159 --> 00:17:10,295
against that memory dump, I'm
still a quarter of the way

515
00:17:10,295 --> 00:17:11,130
through imaging.

516
00:17:12,330 --> 00:17:13,197
So what can we get
out of the memory?

517
00:17:13,198 --> 00:17:14,700
What can we dig?

518
00:17:14,700 --> 00:17:16,068
Jacob, why don't you tell
us about SQL Data Page.

519
00:17:16,068 --> 00:17:17,869
- Yeah, it's really fantastic.

520
00:17:17,869 --> 00:17:19,070
SQL made it nice and easy.

521
00:17:19,070 --> 00:17:21,439
Everything is an AK chunk.

522
00:17:21,440 --> 00:17:24,576
So every AK, you've
got a SQL Data Page,

523
00:17:24,576 --> 00:17:27,813
like we've got here, and they
have a very defined structure,

524
00:17:27,813 --> 00:17:29,515
of course it's a
relational database.

525
00:17:29,515 --> 00:17:31,316
So, these are things
we can carve for.

526
00:17:31,316 --> 00:17:34,119
- And it wouldn't be a
technical presentation

527
00:17:34,119 --> 00:17:36,522
if we didn't have HEX
screenshot in there,

528
00:17:36,522 --> 00:17:37,822
so we've got that
part taken care of,

529
00:17:37,823 --> 00:17:39,191
but this is how it looks.

530
00:17:39,191 --> 00:17:40,692
Thank you, thank you.

531
00:17:40,692 --> 00:17:42,861
So, this is, y'all can,
great that's it, we're no.

532
00:17:42,861 --> 00:17:45,931
That being said, this is
actually the HEX representation

533
00:17:45,931 --> 00:17:48,567
and the SQL representation, so
these exist inside of memory.

534
00:17:48,567 --> 00:17:50,669
We can carve them
out, we can dig 'em.

535
00:17:50,669 --> 00:17:52,971
It's THE storage format, as
Jacob said, it's 8k in length

536
00:17:52,971 --> 00:17:55,207
and we've got a header,
which is 96 bytes in length,

537
00:17:55,207 --> 00:17:59,178
and then we got data
and pointers, which
is 8092 minus 96.

538
00:17:59,178 --> 00:18:00,712
Pointer structure is
stored in reverse,

539
00:18:00,712 --> 00:18:04,216
aka the first record is
stored last, hint, hint, hint,

540
00:18:04,216 --> 00:18:06,351
any hint as to what
a footer might be?

541
00:18:06,351 --> 00:18:07,753
Anyone think?

542
00:18:07,753 --> 00:18:09,254
They're stored in reverse.

543
00:18:09,254 --> 00:18:12,524
We know that our data
records start at byte 96,

544
00:18:12,524 --> 00:18:15,226
and if the first
record is stored last,

545
00:18:15,227 --> 00:18:18,597
our footer than becomes
pointer to the 96 byte,

546
00:18:18,597 --> 00:18:20,566
because that's where
our data starts.

547
00:18:20,566 --> 00:18:22,334
Looks a little bit like
this in the header.

548
00:18:22,334 --> 00:18:25,304
We've got our headerVersions,
our type, our typeFlagBits,

549
00:18:25,304 --> 00:18:27,673
our level and our flagBits,
and there's a whole other kind

550
00:18:27,673 --> 00:18:29,408
of list of strings that
go down and that define

551
00:18:29,408 --> 00:18:31,376
what this data page is.

552
00:18:31,376 --> 00:18:35,047
Is it a simple data
page one of 100,000?

553
00:18:35,047 --> 00:18:38,383
Is it a global allocation map?

554
00:18:38,383 --> 00:18:40,252
Is it an extension of the
global allocation map?

555
00:18:40,252 --> 00:18:41,419
What is this actually telling us

556
00:18:41,420 --> 00:18:43,422
about our data that's inside?

557
00:18:43,422 --> 00:18:45,557
The footer, we kind of
talked about this already.

558
00:18:45,557 --> 00:18:46,792
So start at the first record,

559
00:18:46,792 --> 00:18:48,560
so the HEX representation of 96,

560
00:18:49,728 --> 00:18:50,963
which gets us down
to the very bottom.

561
00:18:50,963 --> 00:18:52,697
You can see kind of the
last two digits there,

562
00:18:52,698 --> 00:18:57,402
is our converted
Indian format of 96.

563
00:18:57,402 --> 00:18:59,304
So that's kind of our start,
so now we've got a way

564
00:18:59,304 --> 00:19:00,239
to carve for these.

565
00:19:02,341 --> 00:19:04,208
Let's also, you
know, we took this,

566
00:19:04,209 --> 00:19:05,410
and we actually threw scalpel

567
00:19:05,410 --> 00:19:06,912
against a memory
image really quick,

568
00:19:06,912 --> 00:19:08,747
and we were actually able
to carve out the data pages,

569
00:19:08,747 --> 00:19:10,082
but what does this
actually mean to us?

570
00:19:10,082 --> 00:19:12,417
Oh, congratulations,
you found an 8k page,

571
00:19:12,417 --> 00:19:14,553
a series of 8k pages,
stored in a memory image,

572
00:19:14,553 --> 00:19:15,787
what does this mean to us?

573
00:19:15,787 --> 00:19:17,256
Closer we are to the breach,

574
00:19:17,256 --> 00:19:19,191
the more relevant the data
in memory is gonna be.

575
00:19:20,259 --> 00:19:25,230
Does my database
contain, PHI, PII, PCI,

576
00:19:26,632 --> 00:19:27,866
something else offensive
that we may not have wanted

577
00:19:27,866 --> 00:19:29,168
our attackers to get a hold of?

578
00:19:29,168 --> 00:19:31,602
Something that I
need to be aware of,

579
00:19:31,603 --> 00:19:32,804
and then also, more importantly,

580
00:19:32,804 --> 00:19:34,506
did the attacker
create a new table,

581
00:19:34,506 --> 00:19:36,208
make a change that hasn't
been committed yet,

582
00:19:36,208 --> 00:19:37,442
run a malicious commands?

583
00:19:37,442 --> 00:19:39,645
We're gonna be able to
pull a lot of this out.

584
00:19:39,645 --> 00:19:42,981
What else, anyone here every
interacted with an SQL Server?

585
00:19:42,981 --> 00:19:44,449
What did you use?

586
00:19:44,449 --> 00:19:45,284
Oh, not this guy.

587
00:19:45,284 --> 00:19:46,618
What'd you use Jacob?

588
00:19:46,618 --> 00:19:48,187
- I use SQL Management Studio.

589
00:19:48,187 --> 00:19:49,454
- SQL Management Studio.

590
00:19:49,454 --> 00:19:50,956
Guess what else is
stored in memory?

591
00:19:50,956 --> 00:19:53,125
You know that little text
box in SQL Management Studio

592
00:19:53,125 --> 00:19:54,660
where you type in
all your commands,

593
00:19:54,660 --> 00:19:57,329
and it has no respect
whatsoever for white spaces,

594
00:19:57,329 --> 00:19:58,996
I bet the creator's a python.

595
00:19:58,997 --> 00:20:01,500
Hate, SQL Management Studio
for that exact reason.

596
00:20:01,500 --> 00:20:03,435
Has no respect to white
space but guess what?

597
00:20:03,435 --> 00:20:05,803
That little text box
is stored in memory.

598
00:20:05,804 --> 00:20:07,272
That's something we
can carve and dump,

599
00:20:07,272 --> 00:20:09,241
and you may think to yourself,
nah all the attackers

600
00:20:09,241 --> 00:20:10,709
are super advanced.

601
00:20:10,709 --> 00:20:12,711
They use all these
custom command line tools

602
00:20:12,711 --> 00:20:15,547
and they issue very,
very strict scripts

603
00:20:15,547 --> 00:20:17,516
to query your SQL database,

604
00:20:17,516 --> 00:20:19,284
and Jacob's gonna
call you and say,

605
00:20:20,686 --> 00:20:21,887
no they don't.
- Yeah.

606
00:20:21,887 --> 00:20:22,988
- Not at all.

607
00:20:22,988 --> 00:20:24,489
If it's there and it works

608
00:20:24,489 --> 00:20:27,559
and I can login to your domain
controller every single day

609
00:20:27,559 --> 00:20:30,128
with shared credentials and use
SQL Server Management Studio

610
00:20:30,128 --> 00:20:32,397
and not have to worry
about getting caught,

611
00:20:32,397 --> 00:20:33,865
or having my logs detected,

612
00:20:33,865 --> 00:20:35,467
guess what I'm going to
use on a daily basis,

613
00:20:35,467 --> 00:20:37,035
and guess what their
attackers are gonna do?

614
00:20:37,035 --> 00:20:39,037
So you may think to yourself,
this seems really simple,

615
00:20:39,037 --> 00:20:41,740
these are all basic
database admin tools.

616
00:20:41,740 --> 00:20:43,408
Exactly the reason
why we need to know

617
00:20:43,408 --> 00:20:45,209
what an attacker looks for,

618
00:20:45,210 --> 00:20:47,145
and then last but not
least, the plain cache.

619
00:20:47,145 --> 00:20:48,480
Tell us a little bit
about plain cache.

620
00:20:48,480 --> 00:20:50,515
- Yeah, it's a
lovely SQL artifact.

621
00:20:50,515 --> 00:20:52,684
So every time you
go to write a query,

622
00:20:52,684 --> 00:20:54,686
and you submit it
to the SQL Server,

623
00:20:54,686 --> 00:20:56,855
it figures out what
to do with that query,

624
00:20:56,855 --> 00:20:58,957
like on an actual
technical level,

625
00:20:58,957 --> 00:21:01,159
and it stores it in what
I call as the plai cache,

626
00:21:01,159 --> 00:21:05,097
which is where it deciphers
all of these planned steps

627
00:21:05,097 --> 00:21:07,099
for execution of the query.

628
00:21:07,099 --> 00:21:10,802
So every time you've got a
query, it's run, it's stored,

629
00:21:10,802 --> 00:21:13,504
there's this disgusting
looking HEX handle,

630
00:21:13,505 --> 00:21:15,374
I think we have a screenshot
of it somewhere in here.

631
00:21:15,374 --> 00:21:17,342
- Look at that.
- Yeah, right there.

632
00:21:17,342 --> 00:21:20,045
Beautiful, beautiful
HEX, just hanging out.

633
00:21:20,045 --> 00:21:21,647
You just shot number two.
- (mumbles).

634
00:21:21,647 --> 00:21:25,317
That handle and you can feed
it back in to another query,

635
00:21:25,317 --> 00:21:26,818
in the plan cache,

636
00:21:26,818 --> 00:21:28,086
and you get something a
little bit easier to read.

637
00:21:28,086 --> 00:21:28,920
- Looks a little bit like

638
00:21:28,920 --> 00:21:30,122
that.
- Yeah.

639
00:21:30,122 --> 00:21:30,922
- So we can take
that and convert it.

640
00:21:30,922 --> 00:21:32,524
These are all pointers.

641
00:21:32,524 --> 00:21:35,360
Guess where all of
these pointers a,
point to, and b, sit?

642
00:21:35,360 --> 00:21:36,628
Lovely memory.

643
00:21:36,628 --> 00:21:38,263
Thank you thank you
very much SQL Server,

644
00:21:38,263 --> 00:21:39,865
push as much as
want in to memory,

645
00:21:39,865 --> 00:21:42,067
'cause then we can go in
and carve it and find it.

646
00:21:42,067 --> 00:21:43,568
- Which is really nice,
'cause if you grab

647
00:21:43,568 --> 00:21:45,103
the whole plan cache, you
just look for anything

648
00:21:45,103 --> 00:21:46,471
that says select*.

649
00:21:46,471 --> 00:21:47,939
- Exactly, yeah.
- It's probably the bad guy.

650
00:21:47,939 --> 00:21:49,107
So what's the first, I mean,

651
00:21:49,107 --> 00:21:51,009
Jacob kind of alluded
to it already,

652
00:21:51,009 --> 00:21:52,644
but if anyone who's done
an SQL investigation,

653
00:21:52,644 --> 00:21:54,112
what's the first
thing an attacker do?

654
00:21:54,112 --> 00:21:55,280
What do you first do
when you walk into a room

655
00:21:55,280 --> 00:21:56,715
that's completely dark?

656
00:21:56,715 --> 00:21:58,050
You look for a light switch.

657
00:21:58,050 --> 00:22:00,418
What is in this database?

658
00:22:00,419 --> 00:22:04,156
Guess what query your database
admins usually aren't issuing

659
00:22:04,156 --> 00:22:05,991
if you've got an
established company?

660
00:22:05,991 --> 00:22:07,526
The Database Admin
who knows the database

661
00:22:07,526 --> 00:22:09,061
like the back of their
hand, it's their job,

662
00:22:09,061 --> 00:22:11,295
it's their baby, it's what they
do, what they take care of,

663
00:22:11,296 --> 00:22:12,864
and all of a sudden,

664
00:22:12,864 --> 00:22:15,734
you see 15 select*'s in a row
issued by the Database Admin,

665
00:22:15,734 --> 00:22:17,202
at I don't know, 3 a.m.

666
00:22:17,202 --> 00:22:19,471
Database Admin
works nine to five.

667
00:22:19,471 --> 00:22:21,406
Does not alter from
those hours whatsoever.

668
00:22:21,406 --> 00:22:22,573
- Has a data dictionary.

669
00:22:22,574 --> 00:22:23,675
- Has a data dictionary.

670
00:22:23,675 --> 00:22:24,776
- Doesn't need it.

671
00:22:24,776 --> 00:22:26,278
- Knows how to
reference his database.

672
00:22:26,278 --> 00:22:28,080
He is not issuing 15
select* commands in a row.

673
00:22:28,080 --> 00:22:29,915
He already knows what's
inside of that database.

674
00:22:29,915 --> 00:22:32,918
So there's a lot of great
value about attacker's actions,

675
00:22:32,918 --> 00:22:35,152
attacker's motivations,
and the scary part is

676
00:22:35,153 --> 00:22:38,323
when you go from select* to
now select targeted artifact.

677
00:22:41,960 --> 00:22:43,161
I lost my, hello.

678
00:22:44,496 --> 00:22:45,797
- Clicker's off the rails?

679
00:22:45,797 --> 00:22:47,766
- Clicker broke, can we
go to the next slide?

680
00:22:52,137 --> 00:22:53,839
I am sorry, I'm known to a--

681
00:22:53,839 --> 00:22:54,806
- Were you trying
to hit the laser?

682
00:22:54,806 --> 00:22:55,774
- ..break batteries.

683
00:22:55,774 --> 00:22:58,909
- No, actually there's nothing.

684
00:22:58,910 --> 00:22:59,978
- [Woman] Point
anywhere and click.

685
00:22:59,978 --> 00:23:01,179
- What's that?

686
00:23:01,179 --> 00:23:02,047
- [Woman] Are you
pointing it (mumbles).

687
00:23:02,047 --> 00:23:02,881
No, (giggles).

688
00:23:05,584 --> 00:23:07,052
Sorry, give us just a moment.

689
00:23:07,052 --> 00:23:08,285
Anyways, we can actually move
on, there we go, perfect.

690
00:23:08,286 --> 00:23:09,755
Next slide, and then
we'll just wrap it up.

691
00:23:09,755 --> 00:23:11,556
So we've got a couple
minutes left, but anyways.

692
00:23:11,556 --> 00:23:13,592
To kind of wrap things
up and kind of put a bow

693
00:23:13,592 --> 00:23:15,827
on this nice little
database analysis.

694
00:23:15,827 --> 00:23:16,795
Can we go one more?

695
00:23:18,663 --> 00:23:19,898
Oh, there we go, okay, perfect.

696
00:23:19,898 --> 00:23:21,366
All right, so again,
we talked a little bit

697
00:23:21,366 --> 00:23:23,301
about forensics teams,
processes, and workflows.

698
00:23:23,301 --> 00:23:26,471
Determine if the team needs to
change based on an artifact,

699
00:23:26,471 --> 00:23:29,541
or if the artifact can
change based on your process.

700
00:23:29,541 --> 00:23:31,042
Do we actually need
to go to a database?

701
00:23:31,042 --> 00:23:33,311
There's a quick caveat to
this, never, ever, ever,

702
00:23:33,311 --> 00:23:36,814
change an artifact, kind of
self answers the first question.

703
00:23:36,815 --> 00:23:38,650
- Yeah, I mean every time,

704
00:23:38,650 --> 00:23:40,852
if you've got a former
Database Admin on your team,

705
00:23:40,852 --> 00:23:43,321
and hey, they can pimp
out some SQL queries,

706
00:23:43,321 --> 00:23:46,224
that's great, but every time
they run one of those queries,

707
00:23:46,224 --> 00:23:48,226
to pull back all this
interesting information,

708
00:23:48,226 --> 00:23:50,762
it's gonna push something
else out the bottom.

709
00:23:50,762 --> 00:23:52,330
So you just need to keep
in the mind the volatily

710
00:23:52,330 --> 00:23:55,066
of all these things,
and imagine, you know,

711
00:23:55,066 --> 00:23:57,669
okay every time I run one of
these interesting queries,

712
00:23:57,669 --> 00:24:00,105
it returns me
interesting results.

713
00:24:00,105 --> 00:24:01,540
I'm gonna be losing
something else

714
00:24:01,540 --> 00:24:03,508
that might of been
interesting as well.

715
00:24:04,676 --> 00:24:05,777
- To Jacob's point
about volatily,

716
00:24:05,777 --> 00:24:08,380
lets go to non-database
SQL artifacts.

717
00:24:08,380 --> 00:24:09,915
They can provide
us, just as much,

718
00:24:09,915 --> 00:24:12,082
if sometimes not more
value for the team.

719
00:24:12,083 --> 00:24:14,319
Remember as well, we're
talking a lot about volatily.

720
00:24:14,319 --> 00:24:16,488
If you ever are, if anyone
here is on a red team,

721
00:24:16,488 --> 00:24:17,889
and you're attacking
the SQL database,

722
00:24:17,889 --> 00:24:20,225
go find what the flush
commands are and run them all

723
00:24:20,225 --> 00:24:21,659
at the end of your pen test.

724
00:24:21,660 --> 00:24:23,495
- And you don't have to do
that, you could just Google it.

725
00:24:23,495 --> 00:24:24,329
It's right there.
- You could do that too.

726
00:24:24,329 --> 00:24:25,797
- It's a one-liner.

727
00:24:25,797 --> 00:24:27,032
Stack Overflow probably has
some great flush commands on it.

728
00:24:27,032 --> 00:24:28,533
You can pull them
down from there.

729
00:24:28,533 --> 00:24:29,967
And last but not least,
as a forensic investigator

730
00:24:29,968 --> 00:24:32,471
learn what the artifacts
are, learn how to parse them,

731
00:24:32,471 --> 00:24:33,405
learn how to interact with them,

732
00:24:33,405 --> 00:24:35,006
and learn how to interpret them.

733
00:24:35,006 --> 00:24:38,710
Getting 10 gigs of Error Logs
from an SQL Server is awesome.

734
00:24:38,710 --> 00:24:40,045
It means nothing
if you have no idea

735
00:24:40,045 --> 00:24:41,279
what type of data's
gonna be inside,

736
00:24:41,279 --> 00:24:44,115
or if you, God forbid,
ask for the wrong thing.

737
00:24:44,115 --> 00:24:45,350
Think about certain points.

738
00:24:45,350 --> 00:24:47,485
Do Error Logs contain
only errors in them?

739
00:24:47,486 --> 00:24:48,687
This is another great discussion

740
00:24:48,687 --> 00:24:50,120
you can have with
your clients as well.

741
00:24:50,121 --> 00:24:51,923
Give me the Error
Logs, why their errors?

742
00:24:51,923 --> 00:24:53,458
They've actually
got more inside.

743
00:24:53,458 --> 00:24:55,060
That's how you have phone
calls where you walk away

744
00:24:55,060 --> 00:24:56,727
and you hangup, and
the client goes,

745
00:24:56,728 --> 00:24:58,196
we hired the right
people, which,

746
00:24:58,196 --> 00:24:59,598
I think at the end of the
day is really the goal

747
00:24:59,598 --> 00:25:00,866
for what's going on.

748
00:25:00,866 --> 00:25:02,601
So that being said, oh,
it works, awesome, okay.

749
00:25:02,601 --> 00:25:04,035
That being said, thank
you all very much.

750
00:25:04,035 --> 00:25:05,704
I think we got a couple of
minutes for questions, perfect.

751
00:25:05,704 --> 00:25:06,905
If there are any questions,
happy to take 'em.

752
00:25:06,905 --> 00:25:08,340
If not, thank you all very much

753
00:25:08,340 --> 00:25:11,309
in choosing this Mandiant
presentation in your afternoon.

754
00:25:11,309 --> 00:25:14,312
(audience clapping)

