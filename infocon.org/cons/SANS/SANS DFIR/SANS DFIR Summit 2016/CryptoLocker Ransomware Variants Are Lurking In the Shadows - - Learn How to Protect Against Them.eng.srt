1
00:00:00,867 --> 00:00:03,803
(futuristic electronic music)

2
00:00:12,112 --> 00:00:15,115
(audience clapping)

3
00:00:15,115 --> 00:00:16,783
- Good?

4
00:00:16,783 --> 00:00:19,619
Right. Thank you, Rob.
It's awesome to be here.

5
00:00:19,619 --> 00:00:23,823
So, just to stay in front
of things a little bit.

6
00:00:23,823 --> 00:00:26,026
There are no product slides,

7
00:00:26,026 --> 00:00:28,395
I'm not wearing my
Carbon Black shirt

8
00:00:28,395 --> 00:00:30,830
because I'm not doing
any vendor stuff.

9
00:00:30,830 --> 00:00:33,132
If you want to see the
full-length presentation,

10
00:00:33,133 --> 00:00:35,568
I do have some of our product
screenshots in there as well

11
00:00:35,568 --> 00:00:38,004
if you want to see how we
do it with our product.

12
00:00:39,539 --> 00:00:41,708
So, welcome to the presentation.

13
00:00:41,708 --> 00:00:44,544
We're gonna talk about all
kinds of ways to break things.

14
00:00:46,012 --> 00:00:47,714
Firstly, I'm gonna go over
a little bit of who I am

15
00:00:47,714 --> 00:00:51,451
and what I do, some of the
high levels of this, you know.

16
00:00:51,451 --> 00:00:53,319
What is Ransomware
at a high level,

17
00:00:53,319 --> 00:00:55,188
what is Vshadow at a high level,

18
00:00:55,188 --> 00:00:57,123
and kind of why are
we caring about it

19
00:00:57,123 --> 00:00:58,358
and how are they abusing it.

20
00:00:58,358 --> 00:01:00,059
After that, I'm gonna go into

21
00:01:00,060 --> 00:01:02,195
how this attack actually occurs.

22
00:01:02,195 --> 00:01:04,230
I've cut out a couple minor
things in the beginning

23
00:01:04,230 --> 00:01:07,467
so you can't repeat the
attack, 'cause I know you.

24
00:01:08,868 --> 00:01:10,103
The (laughs) second thing
is we're gonna go over

25
00:01:10,103 --> 00:01:12,905
how to view this attack
and actually see a lot

26
00:01:12,906 --> 00:01:17,410
of it happening using
just native tools
on a Windows system,

27
00:01:17,410 --> 00:01:20,012
so you can go and repeat
this on Grandma Joe's system

28
00:01:20,013 --> 00:01:22,248
or wherever you are
without fancy IR tools.

29
00:01:22,248 --> 00:01:25,618
Once again, don't tell my
company, 'cause we build those.

30
00:01:25,618 --> 00:01:28,321
And secondly and
lastly, I'm going to be

31
00:01:28,321 --> 00:01:31,458
going over how to
proactively block this

32
00:01:31,458 --> 00:01:33,393
using free tools that
you already have.

33
00:01:34,627 --> 00:01:37,931
So, as Rob said, my
name is Ryan Nolette.

34
00:01:38,932 --> 00:01:40,867
At the time of submitting this,

35
00:01:40,867 --> 00:01:43,837
I ran security operations
for Carbon Black.

36
00:01:43,837 --> 00:01:45,238
Luckily, they've
allowed me to go back

37
00:01:45,238 --> 00:01:46,773
to being an engineer
now and I don't have

38
00:01:46,773 --> 00:01:49,342
to do as much managerial stuff.

39
00:01:49,342 --> 00:01:51,678
I've been doing IR and forensics
for about 10 years now.

40
00:01:51,678 --> 00:01:55,280
And as you can see from that
long list of responsibilities,

41
00:01:55,281 --> 00:01:57,817
there's a ton of stuff
that we have to do. Right?

42
00:01:57,817 --> 00:02:00,820
For all of you that work
in the security space,

43
00:02:00,820 --> 00:02:03,857
you have a long list of
responsibilities like this.

44
00:02:03,857 --> 00:02:05,992
But I'm sure the majority
of you can all agree

45
00:02:05,992 --> 00:02:08,061
that it can be summarized
pretty quickly.

46
00:02:10,062 --> 00:02:12,531
(laughs) We in the
security department,

47
00:02:12,532 --> 00:02:14,167
that was SANS friendly, I asked,

48
00:02:15,635 --> 00:02:17,637
(laughs) we have to clean
up our own messes. Right?

49
00:02:17,637 --> 00:02:20,206
No matter what happens,
we are on the hook,

50
00:02:20,206 --> 00:02:23,209
we are the final line to make
sure that things are resolved.

51
00:02:24,577 --> 00:02:27,514
So, what are some of the
things that Ransomware can do?

52
00:02:27,514 --> 00:02:29,315
If you look of the
definition and type in

53
00:02:29,315 --> 00:02:30,984
what is Ransomware in Google,

54
00:02:30,984 --> 00:02:32,886
it comes down to a definition of

55
00:02:32,886 --> 00:02:35,188
it is a software that stops you

56
00:02:35,188 --> 00:02:37,957
from regular use of your system.

57
00:02:37,957 --> 00:02:41,960
So, it prevents you from either
using certain applications,

58
00:02:41,961 --> 00:02:44,831
encrypting files, all
kinds of different things.

59
00:02:44,831 --> 00:02:48,368
However, by far and away,
the most evil, maniacal thing

60
00:02:48,368 --> 00:02:53,339
I've even seen a Ransomware do
is make you complete surveys.

61
00:02:54,574 --> 00:02:56,910
'Cause that is just,
that is just wrong.

62
00:02:56,910 --> 00:03:00,313
(laughs) And also, in my
detonation lab that I have,

63
00:03:00,313 --> 00:03:03,448
you know, I have the
automated detonation going on

64
00:03:03,449 --> 00:03:05,585
for Ransomware samples,
and I couldn't figure out

65
00:03:05,585 --> 00:03:08,688
why this one sample just
wouldn't complete running,

66
00:03:08,688 --> 00:03:10,222
you know, to 5,000, 10,000 runs,

67
00:03:10,223 --> 00:03:11,858
it just wouldn't finish, ever.

68
00:03:11,858 --> 00:03:13,793
So, I went and I
looked at it manually,

69
00:03:13,793 --> 00:03:16,462
and I see a pop-up
for SurveyMonkey.

70
00:03:16,462 --> 00:03:18,064
It's just coming
up (laughs) going,

71
00:03:18,064 --> 00:03:20,799
hi, what do you
think of our service.

72
00:03:20,800 --> 00:03:24,504
You just infected
my system! (laughs)

73
00:03:24,504 --> 00:03:25,905
Why would you ask me that?

74
00:03:27,473 --> 00:03:30,276
Anyways, going back
down to what is Vshadow.

75
00:03:30,276 --> 00:03:33,580
So, Vshadow is also
called Shadow Copies,

76
00:03:33,580 --> 00:03:37,317
VSS, Volume Shadow Copy Service.

77
00:03:37,317 --> 00:03:41,187
It's a built-in tool that allows

78
00:03:41,187 --> 00:03:43,823
backups in real time to occur.

79
00:03:43,823 --> 00:03:46,593
So, you can interact
with different versions

80
00:03:46,593 --> 00:03:49,661
of files using this, and
it's built into everything

81
00:03:49,662 --> 00:03:53,333
from Windows Vista and above.

82
00:03:53,333 --> 00:03:56,269
As well as, I believe, there was

83
00:03:56,269 --> 00:04:00,139
a very late update
to XP that allows it.

84
00:04:00,139 --> 00:04:01,641
But in this case, we're
gonna deal with Windows 7,

85
00:04:01,641 --> 00:04:03,775
'cause that's what most
people are running.

86
00:04:05,578 --> 00:04:08,281
So, we're gonna talk about

87
00:04:08,281 --> 00:04:11,584
how Ransomware is
actually abusing this.

88
00:04:11,584 --> 00:04:15,188
So, we're gonna be looking at
the very particular aspects

89
00:04:15,188 --> 00:04:18,825
of why Ransomware is
looking at Vshadow

90
00:04:18,825 --> 00:04:21,127
and why it is such a problem.

91
00:04:21,127 --> 00:04:24,931
Up here on the screen, you
see this is my demo system.

92
00:04:26,332 --> 00:04:29,168
This is a complete clean build,
fresh install of Windows 7.

93
00:04:29,168 --> 00:04:31,604
There are no shadows
already created.

94
00:04:32,772 --> 00:04:35,707
What we're gonna do here
is we're going to see

95
00:04:35,708 --> 00:04:38,444
how the Ransomware
is doing things like

96
00:04:38,444 --> 00:04:40,480
anti-forensics
and anti-analysis,

97
00:04:40,480 --> 00:04:42,382
trying to make you life
a lot more difficult

98
00:04:42,382 --> 00:04:44,050
by one, trying to
find the malware,

99
00:04:44,050 --> 00:04:47,220
and two, trying to find
artifacts of the malware.

100
00:04:47,220 --> 00:04:50,523
To not only do other
types of IOC searching

101
00:04:50,523 --> 00:04:52,759
in your environment,
but just in general

102
00:04:52,759 --> 00:04:56,329
how do I get the sample and
actually do some analysis on it.

103
00:04:58,364 --> 00:05:00,366
So, let's break some stuff.

104
00:05:00,366 --> 00:05:02,034
(audience laughs)
All right?

105
00:05:02,035 --> 00:05:04,971
For this, I have not shown
you how to get on the system.

106
00:05:04,971 --> 00:05:06,205
You're on your own for that.

107
00:05:06,205 --> 00:05:10,075
And I've also taken out
how to put the sample

108
00:05:10,076 --> 00:05:13,479
in to the shadow specifically,
so you can't repeat it.

109
00:05:13,479 --> 00:05:14,881
However, Google is your friend

110
00:05:14,881 --> 00:05:16,982
and my enemy if
any of you do that.

111
00:05:18,151 --> 00:05:19,919
But also, I'm not
on the hook now.

112
00:05:19,919 --> 00:05:23,489
(laughs) So, first things
up, the first aspect of this,

113
00:05:23,489 --> 00:05:26,224
the malware is on your
system, it has started to run.

114
00:05:26,225 --> 00:05:29,228
So, let's kick off the
process. What do we do?

115
00:05:29,228 --> 00:05:31,764
Well, we want to create
a persistent shadow.

116
00:05:31,764 --> 00:05:33,466
Up in the top right,

117
00:05:34,500 --> 00:05:36,336
the thing actually works now,

118
00:05:36,336 --> 00:05:39,272
there's -p option. That
stands for persistent.

119
00:05:39,272 --> 00:05:41,007
What persistence
means in this case

120
00:05:41,007 --> 00:05:43,476
is that it survives
between reboots.

121
00:05:43,476 --> 00:05:45,144
And that is the
full extent of how

122
00:05:45,144 --> 00:05:46,913
we're defining
persistence for this.

123
00:05:46,913 --> 00:05:51,451
Another thing that
you'll see is the C:\.

124
00:05:51,451 --> 00:05:53,086
That means that what I am doing

125
00:05:53,086 --> 00:05:55,154
is I am creating a
persistent shadow

126
00:05:55,154 --> 00:05:59,726
that is replicating my entire
file system from root C:\ on.

127
00:05:59,726 --> 00:06:01,661
You can make this any
directory you want.

128
00:06:01,661 --> 00:06:05,631
You could be
users/Ryan/whatever,

129
00:06:05,631 --> 00:06:07,099
that's just your preference.

130
00:06:07,100 --> 00:06:09,435
But in this case, I'm
doing the entire C:\ drive,

131
00:06:09,435 --> 00:06:13,973
because it look easier
on the snapshots.

132
00:06:13,973 --> 00:06:16,042
The second thing to
pay attention to,

133
00:06:16,042 --> 00:06:18,344
which is important
for the rest of this,

134
00:06:18,344 --> 00:06:23,349
is the shadow copy is called
Hard Disk Volume Shadow Copy 3,

135
00:06:24,417 --> 00:06:25,917
I bring that up
because that's the name

136
00:06:25,918 --> 00:06:27,253
of the shadow copy we're
gonna be interacting with

137
00:06:27,253 --> 00:06:29,020
for the rest of the presentation

138
00:06:29,021 --> 00:06:31,357
and that's why that
name is important.

139
00:06:32,925 --> 00:06:36,129
So, now that we've
created the shadow,

140
00:06:36,129 --> 00:06:37,597
we need to do something with it,

141
00:06:37,597 --> 00:06:40,332
we need to make it
accessible and usable.

142
00:06:40,333 --> 00:06:44,370
So, that's where the
mklink command comes in.

143
00:06:44,370 --> 00:06:47,173
This is the Windows
equivalent of the

144
00:06:48,341 --> 00:06:50,176
symlink command for Linux.

145
00:06:50,176 --> 00:06:52,311
It's just creating
a symbolic link.

146
00:06:52,311 --> 00:06:57,316
It's making something that
doesn't exist sort of exist.

147
00:06:58,684 --> 00:07:00,186
And in this case, what
we're doing is we're taking

148
00:07:00,186 --> 00:07:02,287
that shadow that we just
created and we're creating

149
00:07:02,288 --> 00:07:05,425
a symlink to a directory
that doesn't exist.

150
00:07:05,425 --> 00:07:08,227
In this case, it is in
the System32 directory,

151
00:07:08,227 --> 00:07:11,563
and the directory is called
msdc for this example.

152
00:07:11,564 --> 00:07:15,468
Now, if you were doing an
investigation on a system,

153
00:07:15,468 --> 00:07:20,139
and you saw that a binary was
running out of System32, msdc,

154
00:07:20,139 --> 00:07:22,442
would that make your short
list of things to look at?

155
00:07:22,442 --> 00:07:24,477
Or does that kind
of look legitimate?

156
00:07:24,477 --> 00:07:26,578
It probably wouldn't
end up on my top five,

157
00:07:26,579 --> 00:07:29,048
it would be on the list of
things I should look at later.

158
00:07:29,048 --> 00:07:31,951
But it's not gonna
be right there,

159
00:07:31,951 --> 00:07:34,320
because it looks
reasonably legitimate.

160
00:07:34,320 --> 00:07:35,788
One of those random
naming schemes

161
00:07:35,788 --> 00:07:38,257
that they use at Microsoft.

162
00:07:38,257 --> 00:07:42,695
So, what we're gonna do now is
we're gonna take the malware

163
00:07:42,695 --> 00:07:45,598
and actually insert it
into the shadow copy

164
00:07:45,598 --> 00:07:49,402
by dropping it into that
directory that doesn't exist.

165
00:07:49,402 --> 00:07:51,337
And what this does
now is this drops it

166
00:07:51,337 --> 00:07:53,806
in the root of the shadow,

167
00:07:53,806 --> 00:07:56,808
so that slash C of
the file system,

168
00:07:56,809 --> 00:08:00,179
that's where it now
exists, the actual binary.

169
00:08:00,179 --> 00:08:02,448
What we're doing
here is malware.exe

170
00:08:02,448 --> 00:08:05,484
is actually just command
prompt, I just renamed it,

171
00:08:05,485 --> 00:08:08,855
'cause if anybody that
uses malware actually names

172
00:08:08,855 --> 00:08:11,924
their malware, malware,
they have bigger problems.

173
00:08:11,924 --> 00:08:13,758
But in this case,
this is exactly

174
00:08:13,759 --> 00:08:15,461
what we're gonna
be working with.

175
00:08:15,461 --> 00:08:19,031
So now, as it stands, the
shadow has been created,

176
00:08:19,031 --> 00:08:21,467
the symlink has been
created, the binary

177
00:08:21,467 --> 00:08:23,969
has been dropped inside
the root of the shadow,

178
00:08:25,404 --> 00:08:27,573
and now this is where the
bad stuff starts to happen.

179
00:08:28,875 --> 00:08:32,010
You can see here that us
kicking off the malware,

180
00:08:33,645 --> 00:08:35,982
it is actually
executing out of a path

181
00:08:35,982 --> 00:08:39,084
called msdc in your
System32 directory,

182
00:08:39,085 --> 00:08:42,355
which we know does not
really exist on the system.

183
00:08:42,355 --> 00:08:44,657
This folder was never created,

184
00:08:44,657 --> 00:08:45,992
there was never a mkdir command,

185
00:08:45,992 --> 00:08:48,160
there was never any of
that stuff happening,

186
00:08:48,160 --> 00:08:51,464
yet we now have a binary
running out of it.

187
00:08:51,464 --> 00:08:53,733
And that's because it's
running in the shadow

188
00:08:53,733 --> 00:08:55,734
which is symlinked over to it.

189
00:08:57,703 --> 00:09:02,241
Why this is important is because
when you delete that shadow

190
00:09:02,241 --> 00:09:04,944
the malware is still running
out of that directory.

191
00:09:04,944 --> 00:09:09,247
So, what you'll see up
here is our malware.exe,

192
00:09:09,248 --> 00:09:11,217
you can see it running,

193
00:09:11,217 --> 00:09:13,252
then I go up here and
I kill the shadow,

194
00:09:13,252 --> 00:09:15,621
and I use just the delete
shadows all command,

195
00:09:17,089 --> 00:09:19,125
and from that now there's no
more shadows on the system.

196
00:09:19,125 --> 00:09:21,294
All the shadows
have been deleted,

197
00:09:21,294 --> 00:09:25,464
no file system artifact
currently exists.

198
00:09:25,464 --> 00:09:27,833
Yet, if you look in
your file explorer,

199
00:09:27,833 --> 00:09:30,736
or task manager, or
whatever you're using,

200
00:09:30,736 --> 00:09:33,105
you can see the malware.exe
is still running

201
00:09:33,105 --> 00:09:35,007
out of the msdc directory.

202
00:09:36,042 --> 00:09:38,010
So, this is kind
of a neat trick,

203
00:09:38,010 --> 00:09:40,880
because now we've removed
file system artifacts,

204
00:09:40,880 --> 00:09:42,582
nothing no longer exists,

205
00:09:42,582 --> 00:09:45,251
and now the malware
is only in memory.

206
00:09:45,251 --> 00:09:48,054
So, this is what some
people are defining

207
00:09:48,054 --> 00:09:49,988
as anti-forensics
or anti-analysis,

208
00:09:49,989 --> 00:09:51,490
because it makes your life
a little more difficult

209
00:09:51,490 --> 00:09:53,559
of finding the root cause.

210
00:09:53,559 --> 00:09:56,362
You see something running,
but when you go look for it

211
00:09:56,362 --> 00:09:59,531
on the file system,
there's nothing there.

212
00:09:59,532 --> 00:10:00,800
And that's a better magic trick

213
00:10:00,800 --> 00:10:03,401
than anything David
Blaine's ever done.

214
00:10:03,402 --> 00:10:05,938
That includes the airplane,
maybe not the elephant.

215
00:10:07,173 --> 00:10:08,741
So what happens?

216
00:10:08,741 --> 00:10:10,742
Let's look at this from
the host point of view,

217
00:10:10,743 --> 00:10:13,646
and specifically using
tools that you have

218
00:10:13,646 --> 00:10:16,281
on the Windows
system preexisting.

219
00:10:16,282 --> 00:10:20,052
You can go out and spend a ton
of money on fancy IR tools,

220
00:10:20,052 --> 00:10:22,588
and the sales guy is always
gonna sell you a unicorn

221
00:10:22,588 --> 00:10:24,957
when they really
sell horses. Right?

222
00:10:24,957 --> 00:10:27,492
So, you can duct tape a
plunger to that horse's head

223
00:10:27,493 --> 00:10:28,995
and hope that you
have a unicorn,

224
00:10:28,995 --> 00:10:31,163
or you can start using
some tools that are local

225
00:10:31,163 --> 00:10:32,932
and save yourself
a ton of trouble.

226
00:10:34,333 --> 00:10:35,834
In this case, I know
there's not supposed to be

227
00:10:35,835 --> 00:10:38,804
a ton of stuff on slides. You
don't have to memorize it.

228
00:10:38,804 --> 00:10:40,372
I'm just showing
you how many changes

229
00:10:40,373 --> 00:10:43,976
to the system happened when
we executed this malware.

230
00:10:43,976 --> 00:10:48,948
There's some MD5s, there's about
10 child processes respond,

231
00:10:50,082 --> 00:10:52,652
a couple different
locations were created,

232
00:10:52,652 --> 00:10:54,720
different files read
and written, et cetera,

233
00:10:54,720 --> 00:10:56,889
and different processes
interacted with.

234
00:10:56,889 --> 00:10:59,258
So, this does a lot of
stuff to your system,

235
00:10:59,258 --> 00:11:02,395
and that's kind of what I want
to get across with the slide.

236
00:11:02,395 --> 00:11:05,398
This is actually only about
half of the stuff that was done,

237
00:11:06,565 --> 00:11:09,869
but you (laughs) trying
to read it like that.

238
00:11:11,337 --> 00:11:12,705
Cellebrite has these great
little magnifying glasses

239
00:11:12,705 --> 00:11:14,040
that I wish I'd know
about beforehand,

240
00:11:14,040 --> 00:11:15,241
and I would have given
you the full list

241
00:11:15,241 --> 00:11:17,910
so you could just
hold 'em up and look.

242
00:11:17,910 --> 00:11:20,913
So, after we
execute the malware,

243
00:11:20,913 --> 00:11:22,815
this is our only indication
that it happened,

244
00:11:22,815 --> 00:11:24,316
right, on the local system.

245
00:11:24,316 --> 00:11:27,019
If you don't have
some kind of ...

246
00:11:28,187 --> 00:11:30,823
some kind of endpoint
based security solution,

247
00:11:30,823 --> 00:11:33,459
you are going to get
this as your alert.

248
00:11:33,459 --> 00:11:35,828
Now, that sample
that you guys saw,

249
00:11:35,828 --> 00:11:38,764
that had a score of
46 on VirusTotal.

250
00:11:38,764 --> 00:11:41,834
Which means all the major AV
vendors had a signature for it.

251
00:11:43,102 --> 00:11:45,704
My detonation lab
has AV installed.

252
00:11:45,705 --> 00:11:48,774
I won't tell you which
one, because legal stuff,

253
00:11:48,774 --> 00:11:50,643
but they had a signature for it

254
00:11:50,643 --> 00:11:53,879
and they didn't detect
it and it still executed.

255
00:11:53,879 --> 00:11:55,347
So, this is one of the
growing frustrations

256
00:11:55,347 --> 00:11:57,650
that I have trying
to actually look

257
00:11:57,650 --> 00:12:00,252
and detonate this
stuff and work with it.

258
00:12:00,252 --> 00:12:02,420
But, I get this
nice pretty message,

259
00:12:03,622 --> 00:12:05,690
and what we're gonna do
now is look at what this

260
00:12:05,691 --> 00:12:08,728
actually did to the file system
now that we've executed it.

261
00:12:08,728 --> 00:12:10,829
I had that nice pretty
list that already exists

262
00:12:10,830 --> 00:12:12,398
of everything that
I've collected,

263
00:12:12,398 --> 00:12:14,934
but I grabbed that
from my IR tool.

264
00:12:14,934 --> 00:12:16,535
What happens if I
don't have that tool?

265
00:12:16,535 --> 00:12:18,036
How am I gonna find this stuff

266
00:12:18,037 --> 00:12:20,473
on the system without
any tools of support?

267
00:12:20,473 --> 00:12:22,540
How would you do this on
a remote user's system

268
00:12:22,541 --> 00:12:24,043
halfway across the world?

269
00:12:24,043 --> 00:12:25,544
You're gonna have to
use a command line,

270
00:12:25,544 --> 00:12:27,413
and you're gonna have to
use locally sourced stuff

271
00:12:27,413 --> 00:12:29,915
unless you have the
world's best bandwidth

272
00:12:29,915 --> 00:12:32,050
or an EPL between
you and that user.

273
00:12:33,219 --> 00:12:35,755
So, let's do a couple
things that you can do.

274
00:12:35,755 --> 00:12:39,191
Windows 7 supports
PowerShell, so why don't we

275
00:12:39,191 --> 00:12:41,393
do one of our probably
favorite linux commands

276
00:12:41,393 --> 00:12:43,462
looking for new files
that are created.

277
00:12:43,462 --> 00:12:45,331
What this PowerShell script does

278
00:12:45,331 --> 00:12:48,868
is this tells me any
files that were created

279
00:12:48,868 --> 00:12:51,504
on the system in the 30 days.

280
00:12:51,504 --> 00:12:54,273
Now, when you deal with
a bunch of malware,

281
00:12:54,273 --> 00:12:57,409
you know that the
malware ended up changing

282
00:12:57,409 --> 00:12:59,411
start times, creation
times, all those

283
00:12:59,411 --> 00:13:01,479
different timestamps
that you have.

284
00:13:01,480 --> 00:13:03,382
However, when automated
malware is running

285
00:13:03,382 --> 00:13:05,885
and it's not targeted,
they usually don't bother.

286
00:13:05,885 --> 00:13:08,621
So, this might not work
for the different samples,

287
00:13:08,621 --> 00:13:10,589
but this is a pretty good start.

288
00:13:10,589 --> 00:13:12,625
And when I kicked off
this, I found a whole bunch

289
00:13:12,625 --> 00:13:14,927
of different binaries that
created across the system.

290
00:13:14,927 --> 00:13:19,098
The first one is down here in
the Appdata Roaming directory.

291
00:13:19,098 --> 00:13:21,199
Now, who here has
dealt with Zeus,

292
00:13:21,200 --> 00:13:24,003
or SpyEye, or any
other trojan before?

293
00:13:24,003 --> 00:13:27,106
Where is the first place
they drop their crap?

294
00:13:27,106 --> 00:13:28,774
Appdata Roaming, right?

295
00:13:28,774 --> 00:13:31,110
So, this is very
reminiscent of trojans.

296
00:13:31,110 --> 00:13:33,145
I used to work at a
financial institution,

297
00:13:33,145 --> 00:13:34,680
this is one of the
first places I'd look

298
00:13:34,680 --> 00:13:37,282
on every single system that
we suspected of compromise,

299
00:13:37,283 --> 00:13:39,552
looking for some type
of malware on it.

300
00:13:41,987 --> 00:13:45,723
So, what if I want
to find out how bad

301
00:13:45,724 --> 00:13:47,526
or what this new file is?

302
00:13:47,526 --> 00:13:50,362
Well, that PowerShell script
gives me the full path

303
00:13:50,362 --> 00:13:53,165
of where these files are,
so I can take that list,

304
00:13:53,165 --> 00:13:55,767
and I found this in my research,

305
00:13:55,768 --> 00:13:59,805
that certutil actually
has a hashing feature.

306
00:13:59,805 --> 00:14:01,372
I had no idea. (laughs)

307
00:14:01,373 --> 00:14:03,209
So, if you didn't know
either, merry Christmas.

308
00:14:03,209 --> 00:14:04,709
This was actually
really useful to me

309
00:14:04,710 --> 00:14:06,779
'cause I was able to add it
to the PowerShell script,

310
00:14:06,779 --> 00:14:09,481
where for every file
path that I got,

311
00:14:09,481 --> 00:14:12,084
I went and I hashed it, and I
was able to get the hash out,

312
00:14:12,084 --> 00:14:15,688
and then I was able to
use VirusTotal's API

313
00:14:15,688 --> 00:14:18,189
to reach out and say
what's the score of this

314
00:14:18,190 --> 00:14:20,893
and create a nice little
text file on the system.

315
00:14:20,893 --> 00:14:22,895
If you don't have
internet access

316
00:14:22,895 --> 00:14:24,597
you obviously can't
do that, so you can go

317
00:14:24,597 --> 00:14:26,564
everything up to
sending to VirusTotal.

318
00:14:28,000 --> 00:14:31,070
This is really awesome,
because you're able to see

319
00:14:31,070 --> 00:14:32,938
what the scores
of these files are

320
00:14:32,938 --> 00:14:35,107
without using any
fancy tools whatsoever.

321
00:14:35,107 --> 00:14:37,943
This is all native,
built-in functionality.

322
00:14:39,578 --> 00:14:42,848
Another thing that we
found during that script is

323
00:14:42,848 --> 00:14:47,319
we have more artifacts
across the system.

324
00:14:47,319 --> 00:14:51,757
Now keep in mind, these are all
inside the shadow right now,

325
00:14:51,757 --> 00:14:54,893
so these don't actually
exist on the file system.

326
00:14:54,894 --> 00:14:57,096
So, how are we finding these?

327
00:14:57,096 --> 00:14:58,530
Well, we're looking at
it and we're running

328
00:14:58,530 --> 00:14:59,932
those scripts trying
to find these files

329
00:14:59,932 --> 00:15:01,901
were created at certain times.

330
00:15:01,901 --> 00:15:06,338
That script actually looks
through the file system history,

331
00:15:06,338 --> 00:15:08,908
not the what it
currently exists,

332
00:15:08,908 --> 00:15:12,144
so that's gonna actually
have us look and find

333
00:15:12,144 --> 00:15:13,946
all these files
that were created.

334
00:15:13,946 --> 00:15:15,381
First thing that was
created was in the

335
00:15:15,381 --> 00:15:18,416
AppData Roaming and
then it deleted itself.

336
00:15:18,417 --> 00:15:20,119
So, where's the next one?

337
00:15:20,119 --> 00:15:22,721
Well, it's in Start
Menu, Programs, Startup.

338
00:15:22,721 --> 00:15:25,024
Now, this is
another place that I

339
00:15:25,024 --> 00:15:27,226
commonly find things
for persistence.

340
00:15:27,226 --> 00:15:30,229
Now, who's dealt with, you
know, Dridex or any of the

341
00:15:30,229 --> 00:15:32,998
new fancy ones that
have come out recently?

342
00:15:32,998 --> 00:15:35,668
A lot of the different
variants of them end up

343
00:15:35,668 --> 00:15:38,570
putting their stuff in Start
Menu, Programs, Startup.

344
00:15:38,570 --> 00:15:41,106
This directory path
is normally used for

345
00:15:42,508 --> 00:15:44,610
if you want to open Outlook
when you log in to your system,

346
00:15:44,610 --> 00:15:46,478
you can drop the
shortcut into there

347
00:15:46,478 --> 00:15:49,281
and it'll open when you
log in to the system.

348
00:15:49,281 --> 00:15:51,684
It's like the GUI way
of adding something

349
00:15:51,684 --> 00:15:55,219
to the runonce directory,
registry value, I mean.

350
00:15:56,422 --> 00:15:59,625
So, next up, I'm still
going through my list

351
00:15:59,625 --> 00:16:00,859
of all these
artifacts that I found

352
00:16:00,859 --> 00:16:03,128
that were created
in the last 30 days.

353
00:16:03,128 --> 00:16:06,432
I found one that created
a directory in root C:\

354
00:16:06,432 --> 00:16:10,402
that is the same name as
all these other binaries.

355
00:16:10,402 --> 00:16:14,173
And if we look inside of
it, there's another binary.

356
00:16:14,173 --> 00:16:16,175
Now, if you're keeping track,

357
00:16:16,175 --> 00:16:18,743
that is three, no, sorry,

358
00:16:18,744 --> 00:16:21,146
four copies of the
exact same binary.

359
00:16:22,314 --> 00:16:25,284
I really appreciate the
attackers persistence,

360
00:16:25,284 --> 00:16:27,953
but that kind of
paranoia is not healthy,

361
00:16:27,953 --> 00:16:30,021
and I hope they made
enough money off of this

362
00:16:30,022 --> 00:16:34,193
to pay for the medication
they obviously need. (laughs)

363
00:16:34,193 --> 00:16:36,028
When you're going through
the system manually,

364
00:16:36,028 --> 00:16:39,264
now you're gonna have
to manually clean
all of these. Right?

365
00:16:39,264 --> 00:16:40,799
Luckily, we had that
PowerShell script

366
00:16:40,799 --> 00:16:42,634
that tells us where
all of these are.

367
00:16:43,969 --> 00:16:45,804
Another thing that it does is it

368
00:16:45,804 --> 00:16:47,506
starts messing
with your registry.

369
00:16:48,640 --> 00:16:51,343
So, what we can do is there's,

370
00:16:51,343 --> 00:16:52,544
I didn't include the slide here,

371
00:16:52,544 --> 00:16:55,314
but there's a simple
regquery command

372
00:16:55,314 --> 00:16:59,251
that you can run, and you can
actually do the same thing.

373
00:16:59,251 --> 00:17:03,288
How I piped all those file
paths into that cert util,

374
00:17:03,288 --> 00:17:05,391
you can pipe those
into a regquery

375
00:17:05,391 --> 00:17:07,026
and look through your
registry for where

376
00:17:07,026 --> 00:17:10,362
those files exist, are
there any that exist.

377
00:17:10,362 --> 00:17:13,565
I added a caveat to my
script where not only

378
00:17:13,565 --> 00:17:16,068
did it search the registry,
but it also looked

379
00:17:16,068 --> 00:17:21,073
for if it was under the
runonce or run registry keys.

380
00:17:22,441 --> 00:17:24,376
'Cause I'm looking for something
that was recently created

381
00:17:24,376 --> 00:17:27,879
and is trying to start
upon either login or boot.

382
00:17:27,880 --> 00:17:30,682
Just an extra thing,
because when we

383
00:17:30,682 --> 00:17:33,018
look at persistence
mechanisms of malware,

384
00:17:33,018 --> 00:17:35,754
we're going across how
many different ways

385
00:17:35,754 --> 00:17:39,323
can they try to
continuously start.

386
00:17:39,324 --> 00:17:41,193
'Cause you're gonna find
one or two of these things,

387
00:17:41,193 --> 00:17:44,596
but are you gonna find all
of them right off the bat?

388
00:17:44,596 --> 00:17:46,799
Probably not, so we're
looking for ways that they're

389
00:17:46,799 --> 00:17:50,035
trying to continue to start
things even after they're found.

390
00:17:52,438 --> 00:17:54,306
Next up,

391
00:17:54,306 --> 00:17:56,408
since we're dealing with
CryptoLocker version one here,

392
00:17:56,408 --> 00:17:59,311
there's too many to go
through and not enough time,

393
00:17:59,311 --> 00:18:01,746
this is what I like
to the pissed list,

394
00:18:01,747 --> 00:18:04,049
because the longer it
is, the angrier you get.

395
00:18:04,049 --> 00:18:06,385
And what this is, is
in CryptoLocker one,

396
00:18:06,385 --> 00:18:09,421
they actually created
a registry key

397
00:18:09,421 --> 00:18:12,658
with all the values of every
file that's been encrypted.

398
00:18:12,658 --> 00:18:15,226
Those jerks. (laughs) 'Cause
now you can look at it

399
00:18:15,227 --> 00:18:17,196
and see how screwed you are.

400
00:18:17,196 --> 00:18:19,398
And when you end up
having to screen cap this

401
00:18:19,398 --> 00:18:24,403
and show it to your Exec staff
for how compromised they are,

402
00:18:25,571 --> 00:18:27,339
it creates a lot of
very upset executives.

403
00:18:27,339 --> 00:18:28,607
(audience member laughs)

404
00:18:28,607 --> 00:18:32,277
And I won't name who
at the company looks

405
00:18:32,277 --> 00:18:34,546
just exactly like this,
but there is someone.

406
00:18:37,349 --> 00:18:38,617
I just want to leave
that there for a minute.

407
00:18:38,617 --> 00:18:41,453
Just to soak it in. (laughs)

408
00:18:44,389 --> 00:18:47,825
So, we've looked at kinda
what happens on the system,

409
00:18:47,826 --> 00:18:49,728
the basic high-level attack.

410
00:18:49,728 --> 00:18:50,929
If you guys want to
go more in-depth,

411
00:18:50,929 --> 00:18:52,498
I have the full
presentation with me

412
00:18:52,498 --> 00:18:54,433
that's over an hour
and we can do live demo

413
00:18:54,433 --> 00:18:57,302
of it and stuff later if you
catch me for lunch or a beer.

414
00:18:57,302 --> 00:19:00,339
But in the time that we have,
I want to shrink this down

415
00:19:00,339 --> 00:19:04,143
to detecting the attack over
very commonly found things

416
00:19:04,143 --> 00:19:05,878
as part of this attack. Right?

417
00:19:05,878 --> 00:19:10,115
We're no longer trying to
look for symptoms. You know?

418
00:19:10,115 --> 00:19:11,850
It created a file on the system.

419
00:19:11,850 --> 00:19:13,819
Awesome, that's a symptom
of the attack. Right?

420
00:19:13,819 --> 00:19:15,654
That's not the root cause of it.

421
00:19:15,654 --> 00:19:17,022
That's not how it
got on your system

422
00:19:17,022 --> 00:19:20,759
and actually did this
malicious stuff to your system.

423
00:19:20,759 --> 00:19:22,227
So, what we're looking here is

424
00:19:22,227 --> 00:19:25,464
I'm breaking the IOCs
into two separate things.

425
00:19:25,464 --> 00:19:29,234
And what they are are
static IOCs, you know,

426
00:19:29,234 --> 00:19:31,870
hashes, file names,
paths, things like that,

427
00:19:31,870 --> 00:19:34,273
to dynamic ones like
file paths and stuff.

428
00:19:34,273 --> 00:19:35,439
So, what we're gonna do here is

429
00:19:35,440 --> 00:19:37,376
we're gonna look for Vshadow.

430
00:19:38,544 --> 00:19:39,444
Vshadow ...

431
00:19:41,980 --> 00:19:43,415
it did not come
natively installed

432
00:19:43,415 --> 00:19:46,251
up until Windows 7, it's
this kind of a debug utility.

433
00:19:46,251 --> 00:19:48,187
And what I've done here
is I just went on MSDN

434
00:19:48,187 --> 00:19:51,389
and I grabbed the hashes of
all the ones that I've found.

435
00:19:51,390 --> 00:19:53,892
This is not a comprehensive
list, you'll have other stuff,

436
00:19:53,892 --> 00:19:55,460
but I want to use this to look.

437
00:19:56,662 --> 00:19:59,097
What I'm gonna do is
I'm going to search

438
00:19:59,097 --> 00:20:00,799
for those hashes
across the system,

439
00:20:00,799 --> 00:20:04,336
which I can use with
the certutil feature,

440
00:20:04,336 --> 00:20:06,438
but one of the other things
that we're going to do is

441
00:20:06,438 --> 00:20:08,807
because there's a static, we're
gonna hop into the dynamic.

442
00:20:08,807 --> 00:20:11,376
We're gonna look for
what executed here,

443
00:20:11,376 --> 00:20:14,846
these command line options
that occurred from the script.

444
00:20:14,846 --> 00:20:16,915
When you execute a batch script,

445
00:20:16,915 --> 00:20:19,784
do you guys know what parent
process that runs under?

446
00:20:21,386 --> 00:20:22,687
No?

447
00:20:22,688 --> 00:20:26,992
Cmd.exe. So, if we look
for that parent process,

448
00:20:26,992 --> 00:20:30,729
we know that all
this is technically a
command line command.

449
00:20:30,729 --> 00:20:31,964
How do you search command line

450
00:20:31,964 --> 00:20:34,233
on a Windows system
for their history?

451
00:20:35,467 --> 00:20:37,269
In Linux, you have
a bash history,

452
00:20:37,269 --> 00:20:39,137
you can run a history
command and grep it.

453
00:20:39,137 --> 00:20:41,572
How do you do that
on a Windows box?

454
00:20:41,573 --> 00:20:45,510
Who knows about
DOSkeys or DOS values?

455
00:20:45,510 --> 00:20:47,579
Yeah? Awesome. Two people.

456
00:20:49,314 --> 00:20:52,651
That's scary. All right, so
this is kind of the utility

457
00:20:52,651 --> 00:20:55,320
that you use to search through
your command line history.

458
00:20:55,320 --> 00:20:57,022
It doesn't work after
reboot, 'cause nothing's

459
00:20:57,022 --> 00:21:00,091
saved after in memory,
but very useful.

460
00:21:00,092 --> 00:21:02,894
You can search for these
using that key command.

461
00:21:02,894 --> 00:21:04,696
And you can actually
see all of these

462
00:21:04,696 --> 00:21:06,865
bash commands that
occurred at the time.

463
00:21:10,435 --> 00:21:11,937
There we go.

464
00:21:11,937 --> 00:21:15,907
Next up is we know that a
shadow copy was created.

465
00:21:15,907 --> 00:21:17,442
One of the things that we know

466
00:21:17,442 --> 00:21:20,212
is this counts as
a mounted device,

467
00:21:20,212 --> 00:21:23,915
so you can use something
like usernet or ushare,

468
00:21:23,915 --> 00:21:25,817
or something along
those lines to find

469
00:21:25,817 --> 00:21:30,022
when these things were created,
which is also historical.

470
00:21:30,022 --> 00:21:32,157
The actual paths that
I have at the bottom,

471
00:21:32,157 --> 00:21:33,125
those are ...

472
00:21:34,926 --> 00:21:38,129
response paths that
I did not change

473
00:21:38,130 --> 00:21:40,365
just because you can
see the full pathing.

474
00:21:42,868 --> 00:21:44,703
For time, what I'm gonna do
is now I'm gonna show you

475
00:21:44,703 --> 00:21:48,273
how to defend against this
using those free tools.

476
00:21:48,273 --> 00:21:51,009
And I think I got five minutes,

477
00:21:51,009 --> 00:21:54,012
so I'm going to try to bust
through it pretty quickly.

478
00:21:55,180 --> 00:21:57,115
What we're going
here is two things.

479
00:21:57,115 --> 00:21:59,518
One, don't click
suspicious links,

480
00:21:59,518 --> 00:22:00,752
kinda the thing you give out.

481
00:22:00,752 --> 00:22:03,488
I like to send this out
to every single person

482
00:22:03,488 --> 00:22:05,223
that submits ...

483
00:22:05,223 --> 00:22:07,192
sorry, that does not
submit the spam message,

484
00:22:07,192 --> 00:22:08,627
but then I can see
at the web proxy

485
00:22:08,627 --> 00:22:09,995
that they clicked the link.

486
00:22:11,096 --> 00:22:13,699
And then, I love my Gandalf.

487
00:22:13,699 --> 00:22:16,968
So, what we're gonna do
here is we're going to

488
00:22:16,968 --> 00:22:19,137
talk about the two main
methods that we have.

489
00:22:19,137 --> 00:22:21,773
You have your cry method.

490
00:22:21,773 --> 00:22:25,110
As he mentioned, sans
critical controls,

491
00:22:25,110 --> 00:22:28,045
they say backups, so in
that spirit, Vshadow.

492
00:22:29,114 --> 00:22:30,916
It was just used to abuse you,

493
00:22:30,916 --> 00:22:34,086
but you can also
use it to recover.

494
00:22:34,086 --> 00:22:35,921
However, because they're
deleting the Vshadows

495
00:22:35,921 --> 00:22:38,256
of this attack,
you no longer can.

496
00:22:39,658 --> 00:22:42,761
And what happens when you don't
have backups to recover at?

497
00:22:42,761 --> 00:22:44,229
You ending up having
to pay the ransom

498
00:22:44,229 --> 00:22:47,132
or you cry and you wait
for stuff to go away.

499
00:22:47,132 --> 00:22:49,601
So, because of that,
what I'm gonna show you

500
00:22:49,601 --> 00:22:52,838
is how to use AppLocker
to actually block this.

501
00:22:52,838 --> 00:22:56,341
So, if you have an AD domain,
you have this tool already.

502
00:22:56,341 --> 00:22:58,377
It's free. There's two versions.

503
00:22:58,377 --> 00:22:59,811
There's local security policy,

504
00:22:59,811 --> 00:23:02,246
which is just on
local Windows servers,

505
00:23:02,247 --> 00:23:05,117
and then a group policy
version of it that you can use.

506
00:23:06,918 --> 00:23:10,522
This is extremely complicated
to use, it's complex.

507
00:23:10,522 --> 00:23:11,990
It's also ...

508
00:23:14,159 --> 00:23:17,095
It's like trying to open a
pickle jar with a sledgehammer.

509
00:23:17,095 --> 00:23:20,298
It'll get the job done, but
it's extremely overpowered

510
00:23:20,298 --> 00:23:22,267
and there's gonna be
collateral damage.

511
00:23:23,668 --> 00:23:26,004
In this case, there's two
things that I wanna bring up.

512
00:23:27,439 --> 00:23:29,007
In the research, I found
out that you can actually

513
00:23:29,007 --> 00:23:32,744
use AppLocker to block
.DLLs, which is great.

514
00:23:32,744 --> 00:23:34,913
However, that'll
crush your system,

515
00:23:34,913 --> 00:23:37,149
your spirit, and your
users will hate you.

516
00:23:38,316 --> 00:23:39,751
So instead, what
we're gonna do is

517
00:23:39,751 --> 00:23:41,520
we're going to
leverage file paths,

518
00:23:42,654 --> 00:23:44,689
a lot of cursing, a
little bit of witchcraft

519
00:23:44,689 --> 00:23:46,892
and coffee to make this occur,

520
00:23:46,892 --> 00:23:48,393
and what we're gonna
do create out of this

521
00:23:48,393 --> 00:23:50,595
is we're gonna create
some block paths.

522
00:23:50,595 --> 00:23:52,631
So, what we're gonna
do is we're gonna take

523
00:23:52,631 --> 00:23:55,700
your AppData and any
executables in it,

524
00:23:55,700 --> 00:23:57,803
and we're gonna set
it to disallowed.

525
00:23:57,803 --> 00:24:00,572
This now means no executables
in this directory,

526
00:24:00,572 --> 00:24:04,141
and by executables I mean
by file name executables,

527
00:24:04,142 --> 00:24:05,677
because it doesn't
check the header,

528
00:24:05,677 --> 00:24:08,346
just find out if it's
a real binary or not,

529
00:24:08,346 --> 00:24:10,415
to block those executables.

530
00:24:10,415 --> 00:24:12,884
This also means there's
gonna me collateral damage.

531
00:24:12,884 --> 00:24:16,087
Things like Firefox,
Spotify, Chrome,

532
00:24:16,087 --> 00:24:19,825
those apps all actually
use AppData for updates,

533
00:24:19,825 --> 00:24:22,260
which is I believe
against best practices

534
00:24:22,260 --> 00:24:25,163
for software development, but
they can do what they want.

535
00:24:25,163 --> 00:24:27,833
And that's where you're
gonna have collateral damage.

536
00:24:27,833 --> 00:24:30,635
So, if you end up implementing
this in your enterprise,

537
00:24:30,635 --> 00:24:33,504
please, please look to see
what people have installed

538
00:24:33,505 --> 00:24:35,040
or you're gonna have a
lot of very angry people

539
00:24:35,040 --> 00:24:36,875
that you just broke
their Spotify.

540
00:24:38,143 --> 00:24:40,278
They're not upset about
Firefox or Chrome,

541
00:24:40,278 --> 00:24:41,880
but they're upset about Spotify.

542
00:24:43,215 --> 00:24:46,985
But things to know, and lessons
learned, and priorities.

543
00:24:46,985 --> 00:24:50,187
Definitely. I'd be pissed
if they broke my Spotify.

544
00:24:50,188 --> 00:24:53,625
So, in the end, this is
what we're left with.

545
00:24:53,625 --> 00:24:56,761
We are left with a
new security policy.

546
00:24:56,761 --> 00:24:59,197
This took a whole
10 seconds to do.

547
00:24:59,197 --> 00:25:03,467
So, from the initial I think
this machine is compromised

548
00:25:03,468 --> 00:25:07,472
to creating this protection,
this took 10 minutes.

549
00:25:07,472 --> 00:25:09,741
We got into the system, we
ran that PowerShell script

550
00:25:09,741 --> 00:25:12,410
to find all the files
created in the last 30 days.

551
00:25:12,410 --> 00:25:14,713
After that, we then hash them,

552
00:25:14,713 --> 00:25:16,581
found the ones that
were malicious,

553
00:25:16,581 --> 00:25:18,283
found where they are
throughout the system,

554
00:25:18,283 --> 00:25:21,520
created that nice list of
things that we knew were bad.

555
00:25:21,520 --> 00:25:24,189
We were able to clean that
system if we wanted to

556
00:25:24,189 --> 00:25:25,824
or we could have
just re-imaged it.

557
00:25:25,824 --> 00:25:28,159
But then we took
those file paths

558
00:25:28,159 --> 00:25:31,296
and we created these
new protection rules

559
00:25:31,296 --> 00:25:33,164
off of every one of
those file paths.

560
00:25:34,766 --> 00:25:35,667
So in closing,

561
00:25:36,768 --> 00:25:39,271
Ransomware is annoyingly
effective. Right?

562
00:25:39,271 --> 00:25:41,306
No one's happy about
it, no one likes it,

563
00:25:41,306 --> 00:25:44,676
we can all make jokes about it
so we laugh so we don't cry.

564
00:25:44,676 --> 00:25:46,177
But in the end,
what we need to do

565
00:25:46,177 --> 00:25:48,780
is do these proactive controls.

566
00:25:48,780 --> 00:25:50,482
Anything that you
can do proactively

567
00:25:50,482 --> 00:25:52,450
will not only save
your bacon in the end,

568
00:25:52,450 --> 00:25:54,853
but it'll also make things
a lot easier for you.

569
00:25:55,987 --> 00:25:58,390
There'll be a whole lot
less to worry about.

570
00:25:58,390 --> 00:25:59,658
And unfortunately, there's not

571
00:25:59,658 --> 00:26:01,525
a who lot you can
do after the fact,

572
00:26:01,526 --> 00:26:04,296
so hopefully this
gave some color

573
00:26:04,296 --> 00:26:07,065
to things you can do
without spending any money.

574
00:26:07,065 --> 00:26:08,533
And if you want to
see what you can do

575
00:26:08,533 --> 00:26:11,101
if you want to spend money,
I have my laptop with me

576
00:26:11,102 --> 00:26:12,604
and I can show you
those kind of things.

577
00:26:12,604 --> 00:26:15,540
So, my motto, you know,
flag it, tag it, and bag it,

578
00:26:15,540 --> 00:26:17,943
a.k.a. the double tap,
for any malware you find.

579
00:26:17,943 --> 00:26:19,377
(audience member laughs)

580
00:26:19,377 --> 00:26:21,312
Once again, I'm Ryan Nolette,
thank you for your time.

581
00:26:21,313 --> 00:26:22,280
(audience clapping)

582
00:26:22,280 --> 00:26:26,117
(futuristic electronic music)

