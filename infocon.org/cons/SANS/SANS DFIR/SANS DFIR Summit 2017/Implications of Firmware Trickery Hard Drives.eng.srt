1
00:00:00,867 --> 00:00:04,003
(mellow electronic music)

2
00:00:08,908 --> 00:00:11,144
(audience clapping)

3
00:00:11,144 --> 00:00:12,846
- This is actually my
first day for our summit,

4
00:00:12,846 --> 00:00:14,280
and so far it's
been really great,

5
00:00:14,280 --> 00:00:15,915
and it's also my
first trip to Texas,

6
00:00:15,915 --> 00:00:17,750
and I'm really loving
it and loving the food,

7
00:00:17,751 --> 00:00:19,352
especially the barbecue.

8
00:00:19,352 --> 00:00:20,854
So, if you haven't been
able to figure-out,

9
00:00:20,854 --> 00:00:23,323
I am actually from Australia,
I apologize for the accent,

10
00:00:23,323 --> 00:00:27,560
I promise I'll try not to
sound like Steve Irwin.

11
00:00:27,560 --> 00:00:29,662
I've been doing law enforcement
for about 12 years now,

12
00:00:29,662 --> 00:00:31,598
and digital forensics for six.

13
00:00:31,598 --> 00:00:33,366
Mostly dealing with things like

14
00:00:33,366 --> 00:00:35,268
your garden variety
murders, rapes,

15
00:00:35,268 --> 00:00:37,370
terrorism offenses,
that sort of thing.

16
00:00:37,370 --> 00:00:39,471
I'm also a but of a
hardware tinkerer.

17
00:00:39,472 --> 00:00:41,641
I used to build battlebots,

18
00:00:41,641 --> 00:00:45,945
and other things like arcade
emulators, that sort of thing.

19
00:00:45,945 --> 00:00:48,114
But my main passion at
the moment is hard drives,

20
00:00:48,114 --> 00:00:49,748
and specifically
where the fields

21
00:00:49,749 --> 00:00:52,685
of data recovery and
forensics intersect.

22
00:00:52,685 --> 00:00:57,023
Just a quick shout-out to
Cheeky4N6Monkey for the picture,

23
00:00:57,023 --> 00:00:59,626
the title of my presentation
is actually a Star Wars quote,

24
00:00:59,626 --> 00:01:01,126
so I thank you for that.

25
00:01:01,127 --> 00:01:04,397
If you haven't checked-out
his blog, it's pretty good.

26
00:01:04,397 --> 00:01:06,933
So, a bit of a background
story to this presentation:

27
00:01:06,933 --> 00:01:11,337
in 2013 the source code
for a Linux-based tool

28
00:01:11,337 --> 00:01:12,605
called Hard Drive Hacker,

29
00:01:12,605 --> 00:01:15,542
was actually released
onto the Internet.

30
00:01:15,542 --> 00:01:17,977
For those that don't know,
this tool is actually designed

31
00:01:17,977 --> 00:01:20,747
to take a Western Digital hard
drive and alter the firmware

32
00:01:20,747 --> 00:01:23,083
so that it reports
as a Fujitsu drive,

33
00:01:23,083 --> 00:01:25,351
and actually alter
the size, as well.

34
00:01:25,351 --> 00:01:28,488
People would actually do this
to insert these hard drives

35
00:01:28,488 --> 00:01:30,957
into the Xbox 360s,
so instead of buying

36
00:01:30,957 --> 00:01:33,125
the upgraded 60
gigabyte version,

37
00:01:33,126 --> 00:01:34,661
or if their hard drive had died,

38
00:01:34,661 --> 00:01:37,263
they'd just use this feature
in a Western Digital drive.

39
00:01:37,263 --> 00:01:38,531
So, myself and a
few other people

40
00:01:38,531 --> 00:01:41,234
started to look at what
this tool actually did,

41
00:01:41,234 --> 00:01:45,437
and it became apparent that
through some fairly simple

42
00:01:45,438 --> 00:01:48,541
firmware manipulation, this
tool was able to actually trick

43
00:01:48,541 --> 00:01:51,945
something as secure as
an Xbox 360 into thinking

44
00:01:51,945 --> 00:01:53,946
that this drive was a
completely other drive,

45
00:01:53,947 --> 00:01:56,049
and a completely different size.

46
00:01:56,049 --> 00:01:58,251
So, armed with my forensic
knowledge I realized

47
00:01:58,251 --> 00:02:01,821
that obviously has serious
implications for hiding data.

48
00:02:01,821 --> 00:02:03,323
The other thing that
really peaked my interest

49
00:02:03,323 --> 00:02:07,026
was around the same time
the NSA's tool kit catalog

50
00:02:07,026 --> 00:02:09,128
was actually released
onto the Internet,

51
00:02:09,128 --> 00:02:11,096
and it was clear that I
wasn't the only one thinking

52
00:02:11,097 --> 00:02:14,267
that hiding data through
firmware manipulation

53
00:02:14,267 --> 00:02:16,168
was a pretty cool idea.

54
00:02:17,604 --> 00:02:19,105
What do I mean by metamorphic?

55
00:02:19,105 --> 00:02:22,142
Well, we're gonna change the
way a hard drive appears,

56
00:02:22,142 --> 00:02:24,410
we're gonna do that in two ways:
we're actually gonna change

57
00:02:24,410 --> 00:02:26,613
the external appearance
of a hard drive,

58
00:02:26,613 --> 00:02:27,814
as well as the
internal appearance

59
00:02:27,814 --> 00:02:30,116
through that firmware
manipulation.

60
00:02:30,116 --> 00:02:32,051
We're also gonna
restrict the area

61
00:02:32,051 --> 00:02:34,453
that is accessible
to the hard drive,

62
00:02:34,454 --> 00:02:35,955
and within that restricted area,

63
00:02:35,955 --> 00:02:37,924
we're actually gonna hide
some badness, which could be

64
00:02:37,924 --> 00:02:41,161
something like an encrypted
container, a key file,

65
00:02:41,161 --> 00:02:43,997
or just the evidence that
you're trying to look for.

66
00:02:43,997 --> 00:02:45,498
It's important to
understand that this isn't

67
00:02:45,498 --> 00:02:49,035
a host-protected area, or a
device configuration overlay,

68
00:02:49,035 --> 00:02:50,904
they used to be a bit of
problem for forensics,

69
00:02:50,904 --> 00:02:52,204
but there are a number of tools

70
00:02:52,205 --> 00:02:54,841
and techniques that
have since come out

71
00:02:54,841 --> 00:02:56,876
where that is essentially
no longer a problem,

72
00:02:56,876 --> 00:03:00,580
we're actually gonna
manipulate the firmware.

73
00:03:00,580 --> 00:03:02,549
What exactly is
hard drive firmware?

74
00:03:02,549 --> 00:03:04,017
It's important to
understand that a hard drive

75
00:03:04,017 --> 00:03:07,120
is an embedded system, it's
essentially functioning

76
00:03:07,120 --> 00:03:09,455
in the same way
as a PC functions.

77
00:03:09,455 --> 00:03:12,992
The firmware contains boot code
that it needs to initialize,

78
00:03:12,992 --> 00:03:14,960
it also contains
unique parameters

79
00:03:14,961 --> 00:03:17,096
such as like the fly
height of the heads,

80
00:03:17,096 --> 00:03:20,533
or any kind of
deviations in the tracks

81
00:03:20,533 --> 00:03:22,334
on the platters themselves.

82
00:03:22,335 --> 00:03:25,638
It also contains unique
identification information,

83
00:03:25,638 --> 00:03:27,540
that's what gets reported
to our forensic tools,

84
00:03:27,540 --> 00:03:29,341
or to our operating systems,

85
00:03:29,342 --> 00:03:33,513
and it's found in
precisely 2-1/2 locations.

86
00:03:34,714 --> 00:03:36,416
This view should look
familiar to most people,

87
00:03:36,416 --> 00:03:37,884
it's the underside
of a hard drive,

88
00:03:37,884 --> 00:03:39,952
we're just gonna have a look
at some of the locations

89
00:03:39,953 --> 00:03:41,988
that the firmware
can be found in,

90
00:03:41,988 --> 00:03:44,123
and we're gonna have a look
at the other side of the PCB,

91
00:03:44,123 --> 00:03:47,827
'cause that's where
some of these chips are.

92
00:03:49,896 --> 00:03:54,166
So, we'll just have a
closer look at that.

93
00:03:54,167 --> 00:03:57,670
It's a bit blurry now, so I'll
just hit this enhance button

94
00:03:57,670 --> 00:04:00,138
right next to the
find evidence button.

95
00:04:00,139 --> 00:04:01,708
(audience laughing)

96
00:04:01,708 --> 00:04:02,709
There we go.

97
00:04:03,743 --> 00:04:05,210
A little bit clearer now.

98
00:04:05,211 --> 00:04:06,546
All right, so the first chip
that we're gonna look at

99
00:04:06,546 --> 00:04:08,513
is the processor,
much like a computer,

100
00:04:08,514 --> 00:04:12,885
it handles all the
computational functions.

101
00:04:12,885 --> 00:04:15,755
The first area that the
processor will look for firmware

102
00:04:15,755 --> 00:04:19,259
is actually on the ROM chip,
and that's that chip there,

103
00:04:19,259 --> 00:04:20,727
it's also called the BIOS chip

104
00:04:20,726 --> 00:04:22,561
because it has such a
similar function to BIOS,

105
00:04:22,562 --> 00:04:26,232
it contains some of the
identification information,

106
00:04:26,232 --> 00:04:28,268
but also the boot code.

107
00:04:28,268 --> 00:04:32,238
The half-a-location is
actually the RAM chip,

108
00:04:32,238 --> 00:04:33,706
it actually stores, obviously,

109
00:04:33,706 --> 00:04:35,642
whilst the hard drive
is actually functioning,

110
00:04:35,642 --> 00:04:40,546
some of the firmware that it
needs, such as the zone table.

111
00:04:40,546 --> 00:04:42,548
And out of interest, that's
the motor controller,

112
00:04:42,548 --> 00:04:43,983
if you're wondering what
that other chip was,

113
00:04:43,983 --> 00:04:48,087
no firmware on there,
it controls the motor.

114
00:04:48,087 --> 00:04:49,522
This is obviously the
inside of a hard drive,

115
00:04:49,522 --> 00:04:52,592
and the hard drive has
actually conveniently

116
00:04:52,592 --> 00:04:55,027
marked the system area
for us, it's done that by

117
00:04:55,028 --> 00:04:58,798
a system of aggressive polishing
of the hard drive platter

118
00:04:58,798 --> 00:05:02,302
using the head,
which is not ideal.

119
00:05:02,302 --> 00:05:03,970
The system area is
the last location

120
00:05:03,970 --> 00:05:06,572
of firmware that gets read.

121
00:05:06,572 --> 00:05:08,274
The location of the system area

122
00:05:08,274 --> 00:05:10,076
is actually found
on the ROM chip,

123
00:05:10,076 --> 00:05:12,478
so the hard drive needs
to read that first

124
00:05:12,478 --> 00:05:15,114
to know where the
system area is.

125
00:05:15,114 --> 00:05:17,349
This is where the bulk of
the firmware is, though,

126
00:05:17,350 --> 00:05:19,552
in the system area, that's
actually one of the areas

127
00:05:19,552 --> 00:05:21,888
that we'll be focusing on.

128
00:05:21,888 --> 00:05:24,157
This is actually one of my
colleague's hard drives,

129
00:05:24,157 --> 00:05:25,591
and if you look up in
the top left hand corner

130
00:05:25,591 --> 00:05:28,027
there's a bit of a gap up there,

131
00:05:28,027 --> 00:05:29,896
so all that aggressive
polishing has actually

132
00:05:29,896 --> 00:05:32,065
scratched-away some
of the magnetic media,

133
00:05:32,065 --> 00:05:35,268
and that's now found
inside that air filter,

134
00:05:35,268 --> 00:05:37,936
which should sit up in
that top left hand corner.

135
00:05:37,937 --> 00:05:39,639
I've successfully
recovered his data,

136
00:05:39,639 --> 00:05:42,942
and when I gave him back
his data in this form,

137
00:05:42,942 --> 00:05:44,677
he didn't seem too impressed.

138
00:05:44,677 --> 00:05:48,481
(audience laughing)

139
00:05:48,481 --> 00:05:52,485
So, we're gonna make a number
of changes to our hard drive,

140
00:05:52,485 --> 00:05:53,586
how are we gonna do that?

141
00:05:53,586 --> 00:05:55,455
Well, the manufacturers do that

142
00:05:55,455 --> 00:05:58,257
by using what's called
vendor-specific commands.

143
00:05:58,257 --> 00:06:02,228
These commands can be used
to change the firmware,

144
00:06:02,228 --> 00:06:06,065
or read the firmware in the
system area, the ROM, the RAM,

145
00:06:06,065 --> 00:06:07,700
all of those locations.

146
00:06:07,700 --> 00:06:09,402
How they go about doing it,

147
00:06:09,402 --> 00:06:11,671
and what the actual commands
are is totally up to them,

148
00:06:11,671 --> 00:06:14,373
no one tells them what
to do in that regard,

149
00:06:14,374 --> 00:06:15,842
whereas, the normal functioning

150
00:06:15,842 --> 00:06:18,678
is governed by
the ATA Standards.

151
00:06:18,678 --> 00:06:19,879
They use these commands

152
00:06:19,879 --> 00:06:22,715
for quality assurance
in manufacturing,

153
00:06:22,715 --> 00:06:26,753
for initial production, for
diagnostics repair later on,

154
00:06:26,753 --> 00:06:28,253
and they're usually done through

155
00:06:28,254 --> 00:06:31,657
either the slider interface,
or through serial connection.

156
00:06:31,657 --> 00:06:32,892
You'll sometimes see little pins

157
00:06:32,892 --> 00:06:36,262
next to the slider
data ports on a PCB,

158
00:06:36,262 --> 00:06:40,066
that's usually an indication
that's a serial interface.

159
00:06:40,066 --> 00:06:42,969
These vendor-specific
commands can do quite a lot

160
00:06:42,969 --> 00:06:45,471
of interesting things, and we
certainly wouldn't want them

161
00:06:45,471 --> 00:06:48,074
to be in the wrong hands.

162
00:06:48,074 --> 00:06:50,243
From a security perspective,
we'd ideally like them to be

163
00:06:50,243 --> 00:06:52,245
just known to the manufacturer,

164
00:06:52,245 --> 00:06:54,480
unfortunately
that's not the case.

165
00:06:54,480 --> 00:06:57,049
A number of data recovery
tools have emerged

166
00:06:57,049 --> 00:07:00,186
that have reverse-engineered
these vendor-specific commands,

167
00:07:00,186 --> 00:07:04,289
and the first lot of them were
around $5,000.00/10,000.00.

168
00:07:05,625 --> 00:07:07,727
So, from a security perspective
I guess you could argue

169
00:07:07,727 --> 00:07:10,263
that well, that's a fairly
significant price point,

170
00:07:10,263 --> 00:07:14,366
at least only
professionals are gonna be

171
00:07:14,367 --> 00:07:17,537
using those kind of tools,
which is a fair argument.

172
00:07:17,537 --> 00:07:18,971
Unfortunately, those
tools themselves

173
00:07:18,971 --> 00:07:21,441
have been reverse-engineered,
and now there's a number

174
00:07:21,441 --> 00:07:25,611
of $100.00 to $500.00 software
and hardware solutions.

175
00:07:27,380 --> 00:07:28,848
I guess you could say,

176
00:07:28,848 --> 00:07:31,818
well at least there's
some price point barrier.

177
00:07:31,818 --> 00:07:33,885
As you'd expect,
those tools themselves

178
00:07:33,886 --> 00:07:36,856
have been reverse-engineered
and either through them,

179
00:07:36,856 --> 00:07:38,791
or through
disgruntled employees,

180
00:07:38,791 --> 00:07:42,028
the actual vendor-specific
commands for two
out of the three

181
00:07:42,028 --> 00:07:45,865
main manufacturers that are
left in the hard drive business

182
00:07:45,865 --> 00:07:47,700
are easily obtained
on the Internet.

183
00:07:47,700 --> 00:07:48,935
The third is still out there,

184
00:07:48,935 --> 00:07:50,470
it's just a little
harder to find.

185
00:07:50,470 --> 00:07:52,738
And those two out of three
manufacturers represent

186
00:07:52,738 --> 00:07:55,675
about 80% of the
hard drive sales.

187
00:07:55,675 --> 00:07:58,511
So security, not so good.

188
00:07:58,511 --> 00:08:00,213
This presentation
is not intended

189
00:08:00,213 --> 00:08:02,081
to name and shame
the manufacturer.

190
00:08:02,081 --> 00:08:04,550
As I'm going forward,
you actually might
be able to work out

191
00:08:04,550 --> 00:08:07,487
which manufacturer I'm
specifically talking about,

192
00:08:07,487 --> 00:08:09,755
I obviously don't intend to
shame them in particular,

193
00:08:09,755 --> 00:08:11,524
or the hard drive manufacturers,

194
00:08:11,524 --> 00:08:12,792
they know commands
are out there,

195
00:08:12,792 --> 00:08:15,294
their security is
all basically on par.

196
00:08:15,294 --> 00:08:17,029
I also don't want to provide
a walk-through for people,

197
00:08:17,029 --> 00:08:18,531
because obviously,
we don't want this

198
00:08:18,531 --> 00:08:20,700
to become a common practice,
and I obviously don't want

199
00:08:20,700 --> 00:08:23,034
to disclose any
intellectual property.

200
00:08:23,035 --> 00:08:24,804
What I do wanna do is to start

201
00:08:24,804 --> 00:08:27,873
a bit of conversation
about this area of concern,

202
00:08:27,874 --> 00:08:29,342
show how easily
it could be done,

203
00:08:29,342 --> 00:08:30,842
how well the data's hidden,

204
00:08:30,843 --> 00:08:34,413
and discuss any
implications and risks.

205
00:08:34,413 --> 00:08:36,582
Instead of using one of
the real manufacturers,

206
00:08:36,582 --> 00:08:38,551
Toshiba, Seagate
or Western Digital,

207
00:08:38,551 --> 00:08:41,654
we're going to use an
analogous manufacturer instead.

208
00:08:41,654 --> 00:08:43,756
I'm from Australia, which
in Latin means Southern,

209
00:08:43,756 --> 00:08:46,858
so it's gonna be called
the Southern Analogue.

210
00:08:46,859 --> 00:08:48,861
We're gonna perform
two alterations,

211
00:08:48,861 --> 00:08:50,396
and one being the exterior,

212
00:08:50,396 --> 00:08:54,400
and the other being the
interior using firmware.

213
00:08:55,401 --> 00:08:57,036
Here are our two drives,

214
00:08:57,036 --> 00:08:59,638
we've got a two-terabyte
and a one-terabyte.

215
00:08:59,639 --> 00:09:01,140
What we're gonna do is
we're gonna take the lid off

216
00:09:01,140 --> 00:09:03,409
the one-terabyte, and
put it on the two.

217
00:09:03,409 --> 00:09:06,045
To do that, we need to take
the number of screws off,

218
00:09:06,045 --> 00:09:07,479
you can see a couple
of them there,

219
00:09:07,480 --> 00:09:09,282
a few others are underneath
those black stickers,

220
00:09:09,282 --> 00:09:11,317
and one's actually
underneath the label,

221
00:09:11,317 --> 00:09:12,552
right about the
point where it says,

222
00:09:12,552 --> 00:09:15,087
"Warranty void if
label removed,"

223
00:09:15,087 --> 00:09:16,556
which I thought
was kind of ironic

224
00:09:16,556 --> 00:09:19,458
considering what I was
about to do to this drive.

225
00:09:19,458 --> 00:09:21,260
These two drives are
actually fairly similar,

226
00:09:21,260 --> 00:09:23,729
they have quite
similar model numbers,

227
00:09:23,729 --> 00:09:25,531
they vary in one digit,
which just represents

228
00:09:25,531 --> 00:09:27,032
the difference in their size,

229
00:09:27,033 --> 00:09:29,669
and they're manufactured within
three months of each other.

230
00:09:29,669 --> 00:09:32,071
Now, it's important
to understand

231
00:09:32,071 --> 00:09:34,774
that I have specifically chosen
these drives for a reason,

232
00:09:34,774 --> 00:09:38,377
but this particular method
could actually work with say,

233
00:09:38,377 --> 00:09:41,613
a six or an eight terabyte
drive, and a one-terabyte drive,

234
00:09:41,614 --> 00:09:43,883
there's nothing to stop,

235
00:09:43,883 --> 00:09:47,853
the drives can be that
drastically different.

236
00:09:47,853 --> 00:09:51,457
Here we've taken off
our one-terabyte lid,

237
00:09:51,457 --> 00:09:53,659
and we've also got the lid

238
00:09:53,659 --> 00:09:55,595
already removed from
our two-terabyte.

239
00:09:55,595 --> 00:09:57,363
Now, I say it's the
two-terabyte drive

240
00:09:57,363 --> 00:09:59,265
that you can see there, but
I could of just as easily

241
00:09:59,265 --> 00:10:01,033
showed you a picture
of the one-terabyte,

242
00:10:01,033 --> 00:10:02,335
and that's because these drives

243
00:10:02,335 --> 00:10:05,137
share the exact same internals.

244
00:10:05,137 --> 00:10:06,638
It's actually a common practice

245
00:10:06,639 --> 00:10:08,874
from hard drive manufacturers
for quite a number of years,

246
00:10:08,874 --> 00:10:11,344
they'll actually
produce a whole run

247
00:10:11,344 --> 00:10:13,846
of the same physical drive,
and then just manipulate

248
00:10:13,846 --> 00:10:15,848
the firmware to
change the capacity.

249
00:10:15,848 --> 00:10:18,918
The reason they do that is
for costs of production,

250
00:10:18,918 --> 00:10:21,187
and there's an economy
of scale reason why

251
00:10:21,187 --> 00:10:24,090
it's better for them
to price point a low,

252
00:10:24,090 --> 00:10:26,425
a middle, and sort
of a high-end drive.

253
00:10:26,425 --> 00:10:29,495
And in this particular case,
this one-terabyte drive

254
00:10:29,495 --> 00:10:32,431
and this two-terabyte
drive are exactly the same.

255
00:10:32,431 --> 00:10:34,333
So, we're gonna
put our label on,

256
00:10:34,333 --> 00:10:36,368
and we're gonna smooth down
and put down our stickers,

257
00:10:36,369 --> 00:10:38,404
which was just oh so fun.

258
00:10:38,404 --> 00:10:42,575
And we get, ta-dah, our
one-terabyte drive, so exciting.

259
00:10:43,809 --> 00:10:45,877
A little underwhelming I
know, but that's because

260
00:10:45,878 --> 00:10:49,849
it just looks like a
one-terabyte drive, I'm afraid.

261
00:10:49,849 --> 00:10:51,150
We're gonna connect that up to

262
00:10:51,150 --> 00:10:52,518
our write-blocker
just to make sure,

263
00:10:52,518 --> 00:10:54,553
it's still reporting as
a two-terabyte drive,

264
00:10:54,553 --> 00:10:56,255
just as we'd expect,

265
00:10:56,255 --> 00:10:58,491
because we haven't done
anything to it yet,

266
00:10:58,491 --> 00:11:00,326
so that's all good.

267
00:11:00,326 --> 00:11:02,628
Now, we're gonna
move on to changing

268
00:11:02,628 --> 00:11:07,099
that internal appearance using
that firmware manipulation.

269
00:11:07,099 --> 00:11:09,402
Our fictional manufacturer
needs to work out how

270
00:11:09,402 --> 00:11:12,204
it's going to send the
vendor-specific commands

271
00:11:12,204 --> 00:11:14,006
to our drive, and
what we're gonna do

272
00:11:14,006 --> 00:11:16,375
is we're gonna piggyback
on the ATA standard,

273
00:11:16,375 --> 00:11:19,712
SMART Command Transport
protocol, which in this case,

274
00:11:19,712 --> 00:11:21,213
we're gonna use
the SMART WRITE LOG

275
00:11:21,213 --> 00:11:23,049
and SMART READ LOG commands.

276
00:11:23,049 --> 00:11:25,818
Normally, these commands
are used to send SMART data,

277
00:11:25,818 --> 00:11:28,988
which I assume everyone
knows what that is,

278
00:11:28,988 --> 00:11:31,791
or read SMART data back
from the hard drive.

279
00:11:31,791 --> 00:11:33,959
So, instead of sending
those SMART Logs,

280
00:11:33,959 --> 00:11:35,960
we're gonna send our
vendor-specific command,

281
00:11:35,961 --> 00:11:40,132
and also either read or write
our firmware with it, as well.

282
00:11:42,168 --> 00:11:43,869
Because we're using
commands that already exist,

283
00:11:43,869 --> 00:11:45,137
we need to tell our drive

284
00:11:45,137 --> 00:11:46,405
to look for something
a little different,

285
00:11:46,405 --> 00:11:49,675
and we're gonna do
that by giving it a,

286
00:11:49,675 --> 00:11:52,611
sending it a Super ON,
or a firmware mode,

287
00:11:52,611 --> 00:11:54,947
or a boot code mode command.

288
00:11:56,182 --> 00:11:59,118
That's it down below,
I've obviously changed

289
00:11:59,118 --> 00:12:01,787
a couple of things so it doesn't
actually reveal what it is,

290
00:12:01,787 --> 00:12:04,023
including the actual hard
drive manufacturer's initials,

291
00:12:04,023 --> 00:12:07,960
which they decided
to put into the code.

292
00:12:07,960 --> 00:12:11,464
And next, we're gonna send
the SMART WRITE LOG command,

293
00:12:11,464 --> 00:12:13,566
this is actually gonna have
the vendor-specific command

294
00:12:13,566 --> 00:12:17,737
attached to it, that's
also been slightly changed,

295
00:12:17,737 --> 00:12:19,305
but everything else
apart from that

296
00:12:19,305 --> 00:12:22,808
is just a standard
SMART WRITE LOG command,

297
00:12:22,808 --> 00:12:25,544
as specified by
the ATA Standards.

298
00:12:25,544 --> 00:12:28,347
Along with that is
gonna be our VSC file,

299
00:12:28,347 --> 00:12:32,351
which the VSC is generally
around three or 16 bytes,

300
00:12:32,351 --> 00:12:34,954
padded with zeros to 512 bytes.

301
00:12:36,455 --> 00:12:38,824
Next we send the SMART
READ LOG command,

302
00:12:38,824 --> 00:12:41,727
and this is what's gonna
either write our new firmware,

303
00:12:41,727 --> 00:12:45,131
or read back our firmware
that we've requested.

304
00:12:45,131 --> 00:12:46,699
Once again, the
standard command,

305
00:12:46,699 --> 00:12:50,969
but with some changes so that
it doesn't reveal what it is.

306
00:12:50,970 --> 00:12:53,906
To do this, you could
use a tool such as MHDD,

307
00:12:53,906 --> 00:12:57,343
which is able to
be booted off USB,

308
00:12:57,343 --> 00:13:00,512
it's actually the program
that the guy who then

309
00:13:00,513 --> 00:13:03,015
go on to found
the Atola Company,

310
00:13:03,015 --> 00:13:06,552
which creates data
recovery tools,

311
00:13:06,552 --> 00:13:08,287
wrote sometime before then.

312
00:13:08,287 --> 00:13:10,055
It's got a simple
scripting language,

313
00:13:10,055 --> 00:13:12,757
and you can use something
like notepad or a hex editor

314
00:13:12,758 --> 00:13:15,761
to actually generate the
files necessary for it.

315
00:13:15,761 --> 00:13:17,262
So, this is the script,

316
00:13:17,263 --> 00:13:20,299
we can see the Super ON
command is up at that top.

317
00:13:20,299 --> 00:13:22,867
Just below that is the
SMART WRITE LOG command,

318
00:13:22,868 --> 00:13:26,138
and it's including our vsc.bin,

319
00:13:26,138 --> 00:13:28,107
which is our
vendor-specific command,

320
00:13:28,107 --> 00:13:29,842
which we'll have a look
at that in a second.

321
00:13:29,842 --> 00:13:32,611
Out SMART READ LOG
command is next,

322
00:13:32,611 --> 00:13:35,915
and it's actually gonna
output the config.bin,

323
00:13:35,915 --> 00:13:38,384
which is our requested
firmware module,

324
00:13:38,384 --> 00:13:41,821
which is gonna have all
our configuration data.

325
00:13:41,821 --> 00:13:44,089
Let's have a look
quickly at the VSC,

326
00:13:44,089 --> 00:13:45,658
I've blanked-out the command,

327
00:13:45,658 --> 00:13:47,593
there's an option
for Read or Write,

328
00:13:47,593 --> 00:13:51,764
and which firmware module,
it's fairly simple to work out.

329
00:13:53,432 --> 00:13:57,870
This is MHDD, it's
a simple-looking,
DOS-like utility,

330
00:13:57,870 --> 00:14:00,406
but it's pretty powerful.

331
00:14:00,406 --> 00:14:04,542
and this is the returned data,
which has come out all right.

332
00:14:05,444 --> 00:14:07,313
So, in this firmware module

333
00:14:07,313 --> 00:14:10,749
is a number of
identification information,

334
00:14:10,749 --> 00:14:13,552
like the serial number,
the model number,

335
00:14:13,552 --> 00:14:16,455
the ATA master password,
the ATA user password,

336
00:14:16,455 --> 00:14:19,058
if those things have been set.

337
00:14:19,058 --> 00:14:20,326
If you have a look
up at the top right,

338
00:14:20,326 --> 00:14:23,329
it's got a four-byte,
32-bit checksum,

339
00:14:23,329 --> 00:14:26,531
that's actually the
only kind of security

340
00:14:26,532 --> 00:14:28,567
that a hard drive will
have over its firmware,

341
00:14:28,567 --> 00:14:30,236
and even then it's
not really security,

342
00:14:30,236 --> 00:14:32,738
it's more of a data integrity.

343
00:14:33,906 --> 00:14:36,775
It's there to see if any
data's been corrupted,

344
00:14:36,775 --> 00:14:39,944
rather than if
it's been changed.

345
00:14:39,945 --> 00:14:41,180
And below that,
down at the bottom,

346
00:14:41,180 --> 00:14:44,916
you'll see a four-byte
value in little endian.

347
00:14:44,917 --> 00:14:46,986
And to the left and
up, and just up of that

348
00:14:46,986 --> 00:14:51,223
you'll actually see a
repetition of that value,

349
00:14:51,223 --> 00:14:55,394
those are the values that
represent the LBA capacity size.

350
00:14:56,795 --> 00:15:01,367
The HPA size, the DCO size,
what's called the D-stroke size,

351
00:15:01,367 --> 00:15:03,968
and the Max LBA, and
it's those values

352
00:15:03,969 --> 00:15:07,539
that we wanna change
to limit our capacity.

353
00:15:09,008 --> 00:15:11,443
Once you realize where the
data's stored, how to change it,

354
00:15:11,443 --> 00:15:13,145
it becomes a rather
trivial matter

355
00:15:13,145 --> 00:15:15,214
as to what you
wanna change it to.

356
00:15:15,214 --> 00:15:17,616
In this case, what we'd
want to change it to

357
00:15:17,616 --> 00:15:19,885
is our one-terabyte
drive's details,

358
00:15:19,885 --> 00:15:21,353
'cause we've got out
two-terabyte drive,

359
00:15:21,353 --> 00:15:23,055
we wanna make it seem
like a one-terabyte drive,

360
00:15:23,055 --> 00:15:24,622
we've already changed the lid.

361
00:15:24,623 --> 00:15:27,259
So, we change it to the
one-terabyte drive's

362
00:15:27,259 --> 00:15:30,229
model number, serial
number, and its capacity.

363
00:15:30,229 --> 00:15:31,730
Unfortunately, for
demonstration purposes

364
00:15:31,730 --> 00:15:34,333
that's a little pedestrian,
so this is a hard drive

365
00:15:34,333 --> 00:15:37,870
that I've changed, and I hope
it would raise some concerns

366
00:15:37,870 --> 00:15:41,240
if it came along for
your examination.

367
00:15:41,240 --> 00:15:44,310
It's been manufactured by YOU.

368
00:15:44,310 --> 00:15:48,079
It's a one-terabyte
hard drive, wink-wink,

369
00:15:48,080 --> 00:15:50,449
and it's gonna detonate
in five seconds.

370
00:15:50,449 --> 00:15:53,452
(audience laughing)

371
00:15:54,453 --> 00:15:55,887
That's how we do it manually,

372
00:15:55,888 --> 00:15:58,324
but what I'm gonna
show is how quickly,

373
00:15:58,324 --> 00:16:01,526
well, reasonably quickly,
it is to hide the data,

374
00:16:01,527 --> 00:16:05,864
and how well it's hidden
from a typical examination.

375
00:16:05,864 --> 00:16:08,500
We're gonna use one of those
$100.00 software tools,

376
00:16:08,500 --> 00:16:09,969
and we're gonna use one of

377
00:16:09,969 --> 00:16:12,905
the free demo versions
that it comes with.

378
00:16:12,905 --> 00:16:14,673
So, we're gonna take
our two-terabyte drive,

379
00:16:14,673 --> 00:16:17,076
and we're gonna have a
look at it in a hex editor,

380
00:16:17,076 --> 00:16:19,678
we're gonna go to the
one-terabyte marker,

381
00:16:19,678 --> 00:16:21,380
and go one sector
just beyond that.

382
00:16:21,380 --> 00:16:23,182
I'm copy some
badness, in this case,

383
00:16:23,182 --> 00:16:26,085
it's a picture of
a cat in ASCII.

384
00:16:26,085 --> 00:16:30,823
We're gonna save that data
to the disk at that point.

385
00:16:30,823 --> 00:16:32,958
We're then gonna
close the drive,

386
00:16:32,958 --> 00:16:35,861
and what we need to do
then is use our tool

387
00:16:35,861 --> 00:16:39,798
to change the maximum
LBA size to one-terabyte.

388
00:16:41,900 --> 00:16:44,435
This tool also has the function
of restarting the firmware,

389
00:16:44,436 --> 00:16:46,205
and stopping the motor,
which we need to do,

390
00:16:46,205 --> 00:16:48,073
because we need these
changes to take effect,

391
00:16:48,073 --> 00:16:49,608
they can't work necessarily

392
00:16:49,608 --> 00:16:52,444
on a live hard
drive, so to speak.

393
00:16:55,347 --> 00:16:57,116
We need to stop the motor,
and then we need to unplug it

394
00:16:57,116 --> 00:16:59,318
because we need Windows
to un-mount the disc,

395
00:16:59,318 --> 00:17:00,519
and then re-detect it.

396
00:17:00,519 --> 00:17:02,121
During that time I'm
doing stuff off-camera,

397
00:17:02,121 --> 00:17:04,189
so I've put up a cute kitty
that you can have a look at

398
00:17:04,189 --> 00:17:05,958
while I'm doing that.

399
00:17:09,060 --> 00:17:10,495
So, we need to clear
the mounted disc,

400
00:17:10,496 --> 00:17:12,031
yes, I'm using Windows XP,

401
00:17:12,031 --> 00:17:15,600
and no, it's not
connected to the Internet.

402
00:17:24,175 --> 00:17:26,345
And yes, it takes forever.

403
00:17:28,547 --> 00:17:31,450
Our two-terabyte disc is no
longer detected by Windows,

404
00:17:31,450 --> 00:17:34,186
so what we need to do now is
re-plug the drive back in,

405
00:17:34,186 --> 00:17:36,922
and it needs to initialize
from Windows again now that

406
00:17:36,922 --> 00:17:39,358
our changes would have taken
effect on the hard drive.

407
00:17:39,358 --> 00:17:43,529
So, we're gonna stare at the
kitty for a little bit longer.

408
00:17:53,305 --> 00:17:55,841
And now our one-terabyte
drive has been detected,

409
00:17:55,841 --> 00:17:57,976
we're gonna add it back
into our hex editor,

410
00:17:57,976 --> 00:18:00,345
and we're gonna go to
the end of the drive,

411
00:18:00,345 --> 00:18:02,714
and see that our badness
is no longer there.

412
00:18:02,714 --> 00:18:03,881
Now, imagine this drive

413
00:18:03,882 --> 00:18:06,151
has now gone to
forensic examination,

414
00:18:06,151 --> 00:18:09,688
and the forensic examiner
has not been able

415
00:18:09,688 --> 00:18:14,193
to find any badness, so it's
been returned to our target.

416
00:18:14,193 --> 00:18:16,728
The target wants to get
to his badness again,

417
00:18:16,728 --> 00:18:20,899
he changes the LBA back to
the original two-terabyte.

418
00:18:24,336 --> 00:18:26,205
Restarts the firmware.

419
00:18:26,205 --> 00:18:28,206
Stops the spindle motor.

420
00:18:45,591 --> 00:18:49,128
We need to unplug the drive
again, clear it from Windows,

421
00:18:49,128 --> 00:18:52,898
'cause it was showing
up as our one-terabyte.

422
00:19:06,311 --> 00:19:08,679
And obviously, do the
same procedure again:

423
00:19:08,680 --> 00:19:09,781
plug the drive back in,

424
00:19:09,781 --> 00:19:12,851
wait for it to
initialize for Windows.

425
00:19:14,019 --> 00:19:16,889
Stare at the kitty
for one final time.

426
00:19:34,239 --> 00:19:36,241
And our two-terabyte drive
has now come back online,

427
00:19:36,241 --> 00:19:38,010
we're gonna add it
to our hex editor,

428
00:19:38,010 --> 00:19:39,945
go to the one-terabyte point

429
00:19:39,945 --> 00:19:42,880
at which we had
hidden our badness.

430
00:19:43,782 --> 00:19:46,284
And there's our badness again.

431
00:19:49,488 --> 00:19:51,823
All right, so what are the
implications, essentially,

432
00:19:51,823 --> 00:19:54,793
of this manipulation
and hiding of data?

433
00:19:54,793 --> 00:19:56,895
Well, unfortunately
it creates a drive

434
00:19:56,895 --> 00:20:00,666
that is indistinguishable
from a normal drive.

435
00:20:00,666 --> 00:20:02,601
Our operating systems,
forensics tools,

436
00:20:02,601 --> 00:20:05,504
even the data recovery
tools that are out there

437
00:20:05,504 --> 00:20:07,939
won't be able to
tell any difference

438
00:20:07,940 --> 00:20:11,677
with what the drive is
telling it what it is.

439
00:20:13,212 --> 00:20:14,413
Which raises the question:

440
00:20:14,413 --> 00:20:16,215
how many of these
drives have we missed?

441
00:20:16,215 --> 00:20:17,749
The answer is: well,
we don't really know,

442
00:20:17,749 --> 00:20:20,118
we've never really
looked for them.

443
00:20:20,118 --> 00:20:21,919
I'd hazard a guess
it's probably not many,

444
00:20:21,920 --> 00:20:25,824
it's a bit of a unique tool
and a unique set of knowledge

445
00:20:25,824 --> 00:20:28,594
that's required to
do this manipulation.

446
00:20:28,594 --> 00:20:30,829
But in truth, we
don't actually know.

447
00:20:30,829 --> 00:20:35,000
It also has implications in
terms of exfiltration of data.

448
00:20:36,802 --> 00:20:40,072
In a company an employee
might want to take

449
00:20:40,072 --> 00:20:43,341
all the company secrets with
him to the new employer,

450
00:20:43,342 --> 00:20:45,010
they could literally
hand a hard drive

451
00:20:45,010 --> 00:20:47,212
full of their personal
photos to the security team,

452
00:20:47,212 --> 00:20:48,680
they'd have a look through it

453
00:20:48,680 --> 00:20:51,550
and they wouldn't find the
secrets 'cause it's well-hidden.

454
00:20:51,550 --> 00:20:53,118
It also has
ramifications in terms

455
00:20:53,118 --> 00:20:57,289
of the infiltration of data,
in terms of supply chain.

456
00:20:58,490 --> 00:21:01,293
You could actually
get this and sort it

457
00:21:01,293 --> 00:21:03,527
well before it gets to
your target destination,

458
00:21:03,528 --> 00:21:07,266
but that's probably a topic
for another presentation.

459
00:21:07,266 --> 00:21:08,500
What can we do to actually

460
00:21:08,500 --> 00:21:11,503
try and see if this
has been employed?

461
00:21:11,503 --> 00:21:12,937
Well, we could start
looking for clues,

462
00:21:12,938 --> 00:21:15,240
and some of those clues
would be the software

463
00:21:15,240 --> 00:21:19,044
or hardware that can actually
perform these functions,

464
00:21:19,044 --> 00:21:20,746
and here's list of them.

465
00:21:20,746 --> 00:21:23,015
I'd also add to that some
of the technical documents

466
00:21:23,015 --> 00:21:27,352
that you could use to help
learn about this process,

467
00:21:27,352 --> 00:21:31,189
such as the ATA Standards,
or Internet history

468
00:21:32,724 --> 00:21:36,160
to websites such as
HDDGURU, or HDD Oracle,

469
00:21:36,161 --> 00:21:37,663
both of those websites
were pretty good

470
00:21:37,663 --> 00:21:39,998
in my learning of this area.

471
00:21:42,067 --> 00:21:44,936
So, from a forensics
perspective, what
could we look for?

472
00:21:44,936 --> 00:21:47,205
Well, if they're using
a tool such as MHDD,

473
00:21:47,205 --> 00:21:48,706
or some of the other tools,

474
00:21:48,707 --> 00:21:52,511
there's gonna be firmware
that's copied locally,

475
00:21:52,511 --> 00:21:54,812
there could be artifacts
in terms of scripts,

476
00:21:54,813 --> 00:21:56,415
or those VSC files.

477
00:21:57,883 --> 00:21:59,651
You could also compare the
internals of the drive,

478
00:21:59,651 --> 00:22:01,053
like I said, this can be done

479
00:22:01,053 --> 00:22:03,889
with a large drive and
a very small drive.

480
00:22:03,889 --> 00:22:07,158
So, is there a discrepancy
between the white

481
00:22:07,159 --> 00:22:10,762
that you'd expect of a
one-terabyte or 500-gig drive,

482
00:22:10,762 --> 00:22:15,033
does it feel as heavy
as a six-terabyte
drive actually does?

483
00:22:15,033 --> 00:22:16,935
And lastly, anything
that is suspicious,

484
00:22:16,935 --> 00:22:20,371
it needs to undergo further,
deeper interrogation.

485
00:22:20,372 --> 00:22:22,607
This is a bit of a
workflow I'd suggest

486
00:22:22,607 --> 00:22:25,711
could be followed for
that deeper interrogation,

487
00:22:25,711 --> 00:22:27,245
once, obviously, you've
got a forensic image,

488
00:22:27,245 --> 00:22:30,014
or whatever you're
used to doing.

489
00:22:30,015 --> 00:22:32,918
Copy all firmware of the drive

490
00:22:32,918 --> 00:22:34,319
that you can get your hands on,

491
00:22:34,319 --> 00:22:35,486
you then want to
inspect that firmware

492
00:22:35,487 --> 00:22:37,989
looking for any discrepancies.

493
00:22:37,989 --> 00:22:40,058
Ideally, you'd want
something like a known,

494
00:22:40,058 --> 00:22:43,095
good firmware sample to
compare that against,

495
00:22:43,095 --> 00:22:44,830
but then you'd also want
to inspect that firmware

496
00:22:44,830 --> 00:22:46,764
and see what that is reporting,

497
00:22:46,765 --> 00:22:49,000
as to what the internals are.

498
00:22:49,000 --> 00:22:51,937
So say, in the case of
a one-terabyte drive,

499
00:22:51,937 --> 00:22:54,539
if it's got two
platters, four heads,

500
00:22:54,539 --> 00:22:56,775
and it looks like two of
those heads are disabled,

501
00:22:56,775 --> 00:22:59,711
maybe that's a good candidate
for being manipulated.

502
00:22:59,711 --> 00:23:01,246
And lastly, I haven't
come across anything

503
00:23:01,246 --> 00:23:03,448
that would actually damage
the drive by manipulating

504
00:23:03,448 --> 00:23:07,285
the size to larger than
what it was intended for.

505
00:23:07,285 --> 00:23:09,154
What seems to happen is
the tool that you're using

506
00:23:09,154 --> 00:23:13,925
would just report an error
saying that it hasn't worked.

507
00:23:13,925 --> 00:23:15,860
Two of the problems that
might come in trying

508
00:23:15,861 --> 00:23:18,196
to investigate this kind of
thing, one I've already covered,

509
00:23:18,196 --> 00:23:21,933
is that physically identical
drives make it very hard

510
00:23:21,933 --> 00:23:24,503
to distinguish if this
manipulation has occurred,

511
00:23:24,503 --> 00:23:25,736
because manufacturers literally

512
00:23:25,737 --> 00:23:29,741
are manipulating the
drive before sale.

513
00:23:29,741 --> 00:23:31,209
And the other is also
from the manufacturer,

514
00:23:31,209 --> 00:23:32,711
and it's called
refurbished drives.

515
00:23:32,711 --> 00:23:34,713
That's where a customer
may send a drive back

516
00:23:34,713 --> 00:23:36,447
because they're
have issues with it.

517
00:23:36,448 --> 00:23:39,217
Let's say it's a
four-terabyte drive,

518
00:23:39,217 --> 00:23:41,820
and the manufacturer may say,

519
00:23:41,820 --> 00:23:43,455
"Well, here's a fresh
four-terabyte drive,"

520
00:23:43,455 --> 00:23:44,755
but they've still got
this four-terabyte drive

521
00:23:44,756 --> 00:23:46,925
that's not working,
perhaps they could

522
00:23:46,925 --> 00:23:49,761
Frankenstein it into a
two-terabyte drive that'll work,

523
00:23:49,761 --> 00:23:52,097
and some other sucker that
sent back their two-terabyte

524
00:23:52,097 --> 00:23:55,233
drive now gets this
refurbished two-terabyte drive.

525
00:23:55,233 --> 00:23:58,503
The trouble is, when they
perform that repair work,

526
00:23:58,503 --> 00:24:02,307
it's very unique, it's
unusual, it's not repeatable,

527
00:24:02,307 --> 00:24:04,810
so distinguishing
those kind of drives

528
00:24:04,810 --> 00:24:06,578
from something
your target's done,

529
00:24:06,578 --> 00:24:09,347
would also be a
bit of a problem.

530
00:24:10,749 --> 00:24:12,250
These are some solutions
that I think should at least

531
00:24:12,250 --> 00:24:15,153
be explored to try and
tackle this problem,

532
00:24:15,153 --> 00:24:18,290
and the first I mentioned was
known good firmware samples.

533
00:24:18,290 --> 00:24:20,591
There actually are
repositories of firmware

534
00:24:20,592 --> 00:24:22,360
that exist on data
recovery forums,

535
00:24:22,360 --> 00:24:26,264
and data recovery websites,
they're not too bad.

536
00:24:26,264 --> 00:24:28,132
Next, the manufacturers
maybe should start

537
00:24:28,133 --> 00:24:31,403
looking at ways of
insuring the integrity,

538
00:24:31,403 --> 00:24:35,140
and verifying that
integrity of the firmware.

539
00:24:36,842 --> 00:24:38,510
Certain firmware models
should never change,

540
00:24:38,510 --> 00:24:40,545
others they do.

541
00:24:40,545 --> 00:24:41,980
The ones that are
at least static,

542
00:24:41,980 --> 00:24:46,251
things like hashing or
something along those lines,

543
00:24:46,251 --> 00:24:49,321
to insure that those firmware
models haven't changed,

544
00:24:49,321 --> 00:24:52,023
or at least throw up a
flag to say they have.

545
00:24:52,023 --> 00:24:54,592
And lastly, something
like a, I'm not sure,

546
00:24:54,593 --> 00:24:58,096
but a tapian model might
actually work in this scenario,

547
00:24:58,096 --> 00:24:59,364
and that's something
that they've sort of

548
00:24:59,364 --> 00:25:01,299
started to move towards.

549
00:25:01,299 --> 00:25:03,602
They've got these
drives called FIPS,

550
00:25:03,602 --> 00:25:06,872
F-P-I-S, standard models,

551
00:25:08,707 --> 00:25:13,211
they start to sort of
move in that direction.

552
00:25:13,211 --> 00:25:17,115
And finally, the future research
in this particular space.

553
00:25:17,115 --> 00:25:18,783
There's actually a command
that you can actually write

554
00:25:18,783 --> 00:25:21,887
to the physical cylinder
head sector of a hard drive,

555
00:25:21,887 --> 00:25:24,054
and a proof-of-concept
tool and white paper

556
00:25:24,055 --> 00:25:26,558
were produced by two Israelis.

557
00:25:28,026 --> 00:25:30,595
What you could do is actually
take this spare one-terabyte,

558
00:25:30,595 --> 00:25:34,466
or however big size spare
that you've created,

559
00:25:34,466 --> 00:25:37,235
and if you manage to
write those locations

560
00:25:37,235 --> 00:25:39,838
into the system area, you
could use this command

561
00:25:39,838 --> 00:25:44,142
to actually read and write
directly to that location,

562
00:25:44,142 --> 00:25:46,511
without the need to
reinitialize the drive,

563
00:25:46,511 --> 00:25:49,047
or change any of that
identification information,

564
00:25:49,047 --> 00:25:52,284
because Windows wouldn't
need to change because

565
00:25:52,284 --> 00:25:56,121
it's just gonna stay the same
identification at that point.

566
00:25:56,121 --> 00:25:59,324
And lastly, solid-state
drives are an emerging area,

567
00:25:59,324 --> 00:26:03,228
they actually contain
over-provisioned sectors,

568
00:26:03,228 --> 00:26:05,730
so what kind of possibility
exists in that space,

569
00:26:05,730 --> 00:26:09,401
is also another area
I'd like to explore.

570
00:26:09,401 --> 00:26:12,003
Thank you very much,
are there any question?

571
00:26:12,003 --> 00:26:15,273
(audience clapping)

572
00:26:15,273 --> 00:26:19,377
(upbeat electronic music finale)

