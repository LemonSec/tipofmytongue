1
00:00:00,600 --> 00:00:03,169
(gentle music)

2
00:00:09,009 --> 00:00:10,276
(applause)

3
00:00:10,276 --> 00:00:11,911
- Okay, so today we're
gonna be talking about

4
00:00:11,911 --> 00:00:15,748
Mac OS X on iOS forensics
related to FSEvents,

5
00:00:16,850 --> 00:00:19,452
really awesome
artifact that every

6
00:00:19,452 --> 00:00:22,022
Apple examiner
should be looking at.

7
00:00:22,022 --> 00:00:23,223
If you're not, you
need to start doing it.

8
00:00:23,223 --> 00:00:26,826
So a bit about me, I
work with G-C Partners.

9
00:00:26,826 --> 00:00:29,162
I'm a Digital Forensics Expert,

10
00:00:29,162 --> 00:00:32,298
part-time researcher,
absolutely love research,

11
00:00:32,298 --> 00:00:34,034
part-time programmer.

12
00:00:35,802 --> 00:00:38,238
So importance, once again.

13
00:00:38,238 --> 00:00:39,973
Okay, so we're
gonna discuss all of

14
00:00:39,973 --> 00:00:41,741
this in great detail later,

15
00:00:41,741 --> 00:00:45,144
but it records historical file
system activity over time.

16
00:00:45,145 --> 00:00:47,680
Currently, once again,
not being utilized as

17
00:00:47,680 --> 00:00:49,382
much as what it should be.

18
00:00:49,382 --> 00:00:51,951
Contains user and
operating system activity,

19
00:00:51,951 --> 00:00:53,987
including creations
and deletions,

20
00:00:53,987 --> 00:00:57,957
readings, permission
changes, and so on.

21
00:00:57,957 --> 00:00:59,392
You can identify the
names of files that

22
00:00:59,392 --> 00:01:02,295
have been deleted
within FSEvent logs

23
00:01:02,295 --> 00:01:06,332
and identify what has
changed for those files

24
00:01:06,332 --> 00:01:10,503
of interest that you might
want to be looking for.

25
00:01:10,503 --> 00:01:12,872
So, our agenda, we're gonna
cover an introduction,

26
00:01:12,872 --> 00:01:14,641
high-level of
review of FSEvents.

27
00:01:14,641 --> 00:01:16,142
We're gonna look at
parsing FSEvents,

28
00:01:16,142 --> 00:01:17,310
interesting artifacts, and of
course the caveats that you

29
00:01:19,479 --> 00:01:22,715
should be aware of
for these artifacts.

30
00:01:24,150 --> 00:01:26,252
So FSEvents or
File System Events,

31
00:01:26,252 --> 00:01:30,323
are changes to objects on
a file system that has been

32
00:01:30,323 --> 00:01:34,327
a volume that's been
mounted within a Mac OS.

33
00:01:34,327 --> 00:01:38,498
So if you're familiar with
Windows and NTFS file system,

34
00:01:39,833 --> 00:01:42,235
then you may also be familiar
with the USN journal,

35
00:01:42,235 --> 00:01:45,672
which also contains
historical changes of

36
00:01:45,672 --> 00:01:48,774
file system objects over time.

37
00:01:48,775 --> 00:01:52,946
So these are generated by
the Apple OS FSEvents API.

38
00:01:55,715 --> 00:01:59,419
It was introduced in
10.5 and up to 10.6

39
00:01:59,419 --> 00:02:03,021
it only included
changes to directories.

40
00:02:03,022 --> 00:02:04,157
So that's important to know if

41
00:02:04,157 --> 00:02:06,860
you're working with an older OS.

42
00:02:06,860 --> 00:02:09,262
And you're looking at
your parse FSEvents

43
00:02:09,262 --> 00:02:11,131
or what have you, and
you're seeing that

44
00:02:11,131 --> 00:02:13,700
it only contains
directories, that's why.

45
00:02:13,700 --> 00:02:16,768
10.7 they introduced
file events,

46
00:02:16,769 --> 00:02:18,071
which is great
because now we can see

47
00:02:18,071 --> 00:02:21,074
changes to files
on the file system.

48
00:02:22,742 --> 00:02:25,278
So these are stored
in G Ziplocks

49
00:02:25,278 --> 00:02:28,648
and a single log can
span multiple days.

50
00:02:28,648 --> 00:02:32,152
And the entire contents
of the FSEvent directory

51
00:02:32,152 --> 00:02:34,154
can span days to months.

52
00:02:36,923 --> 00:02:39,125
These are found in IOS devices,

53
00:02:39,125 --> 00:02:41,161
OSX devices and external devices

54
00:02:41,161 --> 00:02:43,496
that are plugged into a Mac.

55
00:02:46,232 --> 00:02:49,469
So let's look at the
location of FSEvents logs.

56
00:02:49,469 --> 00:02:53,640
Within OSX these are located
within the system partition,

57
00:02:53,640 --> 00:02:58,111
the root directory
of it in /.fseventsd.

58
00:02:58,111 --> 00:03:02,281
Within IOS there are multiple
that have been observed,

59
00:03:02,282 --> 00:03:06,452
is the data partition under
in private/var/.fseventsd.

60
00:03:10,089 --> 00:03:12,492
And that contains
user related data

61
00:03:12,492 --> 00:03:14,359
or user related activity.

62
00:03:14,360 --> 00:03:16,062
For system related activity

63
00:03:16,062 --> 00:03:20,233
you'll find it in
the root./.fseventsd.

64
00:03:21,467 --> 00:03:23,002
And in the developer patch,

65
00:03:23,002 --> 00:03:26,272
which in my testing
I've seen to contain

66
00:03:26,272 --> 00:03:29,642
developer patch related
activity was located

67
00:03:29,642 --> 00:03:33,813
in the developer patch
folder under /.fseventsd.

68
00:03:35,448 --> 00:03:38,985
Now looking at the
image to the right

69
00:03:38,985 --> 00:03:42,989
the is the fseventsd
directory in an OSX system.

70
00:03:44,958 --> 00:03:47,193
This is not normally
accessible by a user

71
00:03:47,193 --> 00:03:50,897
and requires elevated
privileges to access it.

72
00:03:50,897 --> 00:03:53,799
And you can't see it by default,

73
00:03:53,800 --> 00:03:55,602
noting the dot at the beginning,

74
00:03:55,602 --> 00:03:57,303
which means it's a
hidden directory.

75
00:03:57,303 --> 00:04:00,173
So it takes elevated privileges

76
00:04:00,173 --> 00:04:04,611
and knowledge to be able
to access this directory.

77
00:04:04,611 --> 00:04:07,012
The name of each file
within that directory

78
00:04:07,013 --> 00:04:09,482
is represented in
hexadecimal format

79
00:04:09,482 --> 00:04:12,285
and represents once
converted decimal,

80
00:04:12,285 --> 00:04:15,888
the last event ID with
a net file plus one.

81
00:04:18,625 --> 00:04:21,793
So let's look at the life
cycle of an FSEvent record.

82
00:04:21,793 --> 00:04:24,796
This will help in understanding
exactly what's going on

83
00:04:24,797 --> 00:04:28,868
behind the scenes from a high
level perspective of course.

84
00:04:28,868 --> 00:04:32,005
So FSEvents initially
are stored in memory.

85
00:04:32,005 --> 00:04:34,907
When an object receives a change

86
00:04:34,907 --> 00:04:38,745
the FSEvents API checks to
see if it was already given

87
00:04:38,745 --> 00:04:43,116
an ID within memory based
off its relative full path.

88
00:04:43,116 --> 00:04:46,051
If it has, I'm
sorry, if it has not

89
00:04:47,320 --> 00:04:48,955
it will assign
the next available

90
00:04:48,955 --> 00:04:51,457
event ID and add it to memory.

91
00:04:53,059 --> 00:04:56,095
If it has been already
assigned an event ID

92
00:04:56,095 --> 00:05:00,700
it will coalesce the changes
that were made to a record

93
00:05:00,700 --> 00:05:03,169
or a full path into one event.

94
00:05:04,537 --> 00:05:06,839
So you won't get multiple
events for one file

95
00:05:06,839 --> 00:05:11,044
you will get a single one
all coalesced as one record.

96
00:05:11,044 --> 00:05:13,746
And stored in memory, you
can store it in memory.

97
00:05:13,746 --> 00:05:16,248
And many changes
will occur you know,

98
00:05:16,249 --> 00:05:18,818
many other files
will get changed

99
00:05:18,818 --> 00:05:21,486
and when the memory
buffer is full or a volume

100
00:05:21,487 --> 00:05:24,924
is unmounted this will
get flushed to disk

101
00:05:24,924 --> 00:05:29,094
as a G Zip archive file within
that .fseventsd directory.

102
00:05:30,863 --> 00:05:34,033
So next let's look
at decoding events.

103
00:05:35,601 --> 00:05:39,706
So if we unzip that archive
file or uncompress it

104
00:05:41,107 --> 00:05:45,278
there can contain multiple
pages within the FSEvent record.

105
00:05:46,579 --> 00:05:49,749
And the magic header
for that is 1SLD.

106
00:05:52,151 --> 00:05:55,788
Each log when parsed can
contain up to 5000 events.

107
00:05:55,788 --> 00:05:57,957
I have not seen an instance
where there was more than

108
00:05:57,957 --> 00:06:02,028
5000 events within an
uncompressed G Zip file

109
00:06:02,028 --> 00:06:05,031
that was parsed
related to FSEvents.

110
00:06:06,199 --> 00:06:07,400
And this is also
important to note

111
00:06:07,400 --> 00:06:09,102
is that when the events
are stored in memory

112
00:06:09,102 --> 00:06:11,304
they're stored alphabetically.

113
00:06:11,304 --> 00:06:14,239
So when you parse an FSEvent log

114
00:06:14,240 --> 00:06:16,976
you can also expect that
they're gonna be stored

115
00:06:16,976 --> 00:06:19,379
or they're gonna be
parsed alphabetically.

116
00:06:19,379 --> 00:06:22,415
So you would have to know
to sort appropriately to get

117
00:06:22,415 --> 00:06:26,886
the best chronological
order for those events.

118
00:06:26,886 --> 00:06:30,289
So each record consists
of 3 components.

119
00:06:30,289 --> 00:06:32,425
The full path which is
the relative full path

120
00:06:32,425 --> 00:06:34,794
to the file system
object being changed.

121
00:06:34,794 --> 00:06:37,363
The event ID which is according

122
00:06:38,631 --> 00:06:41,734
to Apple is
monotonically increasing.

123
00:06:45,104 --> 00:06:48,207
So it bares no reference
to a time base,

124
00:06:48,207 --> 00:06:50,810
apparently it's not time based.

125
00:06:51,978 --> 00:06:53,946
And lastly is the record flags.

126
00:06:53,946 --> 00:06:58,251
So the record flags
include the kind of object

127
00:06:58,251 --> 00:07:02,354
that's getting the change and
for instance the file folder,

128
00:07:04,924 --> 00:07:06,392
and the type of
changes happening

129
00:07:06,392 --> 00:07:08,661
to that file or
the reason flags.

130
00:07:08,661 --> 00:07:09,929
So here we can look at the

131
00:07:09,929 --> 00:07:12,097
different kinds of
flags you can see.

132
00:07:12,098 --> 00:07:14,600
So for the type of flags
it can be a file or folder,

133
00:07:14,600 --> 00:07:16,702
hard link or a symbolic link.

134
00:07:16,702 --> 00:07:20,506
And the reason flags or what
happened to that item is

135
00:07:20,506 --> 00:07:23,443
created, removed, modified,
renamed, permission change,

136
00:07:23,443 --> 00:07:26,078
Inode metadata, finder
information, mount,

137
00:07:26,078 --> 00:07:28,580
unmount, last hard link removed,

138
00:07:28,581 --> 00:07:32,385
end of transaction and
document revisions.

139
00:07:32,385 --> 00:07:35,455
So this is the
hexadecimal format

140
00:07:35,455 --> 00:07:38,257
of an uncompressed log file.

141
00:07:38,257 --> 00:07:40,359
For my presentations
I like to have hex,

142
00:07:40,359 --> 00:07:42,628
that's what I do all
day long is look at hex.

143
00:07:42,628 --> 00:07:44,229
So it has to be
here, sorry for those

144
00:07:44,230 --> 00:07:46,933
of you who don't like it.

145
00:07:46,933 --> 00:07:49,936
So let's take a look
at the magic header.

146
00:07:49,936 --> 00:07:52,705
That's our one SLD that
indicates the start of a page

147
00:07:52,705 --> 00:07:55,775
within that uncompressed
FSEvent log.

148
00:07:57,944 --> 00:08:01,214
The total header
length is 12 bytes long

149
00:08:02,315 --> 00:08:03,249
and after the header
we'll have the

150
00:08:03,249 --> 00:08:05,585
start of our first full path.

151
00:08:06,786 --> 00:08:08,754
In this example this was
taken from a thumb drive

152
00:08:08,754 --> 00:08:09,989
that was plugged in and this is

153
00:08:09,989 --> 00:08:13,159
activity that I had
generated myself.

154
00:08:13,159 --> 00:08:15,394
So that's a file
that I created there.

155
00:08:15,394 --> 00:08:17,797
And we're not gonna
discuss the flags,

156
00:08:17,797 --> 00:08:20,333
decoding the flags
in full detail here

157
00:08:20,333 --> 00:08:24,003
but you can reference my
documentation on my blog

158
00:08:24,003 --> 00:08:26,372
which is
nicoleibrahim.com if you

159
00:08:26,372 --> 00:08:27,740
want to look at more of that.

160
00:08:27,740 --> 00:08:30,543
So just going back
to the full path,

161
00:08:30,543 --> 00:08:33,613
it is terminated by
a null zero zero.

162
00:08:35,047 --> 00:08:38,784
And then next what you see
is the event record ID.

163
00:08:40,453 --> 00:08:43,422
Following the event
record ID is the flags.

164
00:08:43,422 --> 00:08:45,157
And that basically
continues on until

165
00:08:45,157 --> 00:08:48,327
you hit the next
magic header of 1SLD.

166
00:08:49,428 --> 00:08:51,964
So let's look at parsing events.

167
00:08:51,964 --> 00:08:53,799
There are few tools
that I'm aware of

168
00:08:53,799 --> 00:08:57,637
that currently parse
offline, on disk FSEvent.

169
00:08:58,905 --> 00:09:01,173
One of them is
blackbag, blacklight.

170
00:09:01,173 --> 00:09:03,743
It's a closed source
and paid software.

171
00:09:03,743 --> 00:09:06,546
Does a great job
of parsing FSEvents

172
00:09:06,546 --> 00:09:07,980
and you can read
their instruction,

173
00:09:07,980 --> 00:09:10,550
their help manual to determine
exactly how to do that

174
00:09:10,550 --> 00:09:12,919
but it's through the advanced
options when you're parsing.

175
00:09:12,919 --> 00:09:14,520
And I believe it's
system log that you

176
00:09:14,520 --> 00:09:16,889
have to select to
parse FSEvents.

177
00:09:16,889 --> 00:09:18,991
And you can download
it at their website.

178
00:09:18,991 --> 00:09:20,693
There's also an open source

179
00:09:20,693 --> 00:09:23,763
and free tool called
FSEventParser,

180
00:09:23,763 --> 00:09:25,932
which is a Python based
script and it's command line

181
00:09:25,932 --> 00:09:29,335
and it also does the same thing.

182
00:09:29,335 --> 00:09:31,737
So every, let's jump onto
interesting artifacts

183
00:09:31,737 --> 00:09:34,140
now that we've covered
all the boring stuff.

184
00:09:34,140 --> 00:09:37,343
So everything that's been
parsed here was used,

185
00:09:37,343 --> 00:09:41,113
using the FSEventParser,
Python based script.

186
00:09:42,415 --> 00:09:43,949
And anything that I'm
talking about here,

187
00:09:43,950 --> 00:09:46,218
this barely
scratches the surface

188
00:09:46,218 --> 00:09:50,488
of what you can expect
to see within FSEvents.

189
00:09:50,489 --> 00:09:52,792
I could spend all week
long talking about

190
00:09:52,792 --> 00:09:55,628
what I have found
within FSEvents.

191
00:09:56,762 --> 00:09:59,497
So let's start with
trash activity.

192
00:10:00,833 --> 00:10:05,504
So within FSEvents the
Python based tool will output

193
00:10:05,504 --> 00:10:08,741
the data to an SQ LIKE database.

194
00:10:08,741 --> 00:10:10,009
So you can run queries.

195
00:10:10,009 --> 00:10:12,411
So to the right I
have a basic query

196
00:10:12,411 --> 00:10:16,147
of how to look for items
related to the trash.

197
00:10:16,148 --> 00:10:17,984
So what you can see
is you can see files

198
00:10:17,984 --> 00:10:21,821
that were sent to the trash
and emptying of the trash.

199
00:10:21,821 --> 00:10:24,991
So in my example below
these we're items

200
00:10:24,991 --> 00:10:26,959
that were previously
on my desktop.

201
00:10:26,959 --> 00:10:30,429
I has exported, you might
notice that is says .fseventsd,

202
00:10:30,429 --> 00:10:32,064
that's because I
was doing testing.

203
00:10:32,064 --> 00:10:35,434
So I extracted those out
from my fseventsd directory,

204
00:10:35,434 --> 00:10:38,337
put them on my desktop and
then later I removed them,

205
00:10:38,337 --> 00:10:40,906
which is if you look the right

206
00:10:40,906 --> 00:10:43,742
of the screenshot
it says removed.

207
00:10:45,111 --> 00:10:46,946
So I emptied my trash.

208
00:10:49,215 --> 00:10:52,485
Next let's look at
user profile directory

209
00:10:52,485 --> 00:10:55,187
or the user folders
directory or activity.

210
00:10:55,187 --> 00:10:58,958
We can look at activity within
the users documents folder,

211
00:10:58,958 --> 00:11:01,060
downloads folder,
desktop, pictures,

212
00:11:01,060 --> 00:11:04,262
whatever is under the
user profile directory.

213
00:11:04,263 --> 00:11:07,199
And I have a basic
SQL script there.

214
00:11:07,199 --> 00:11:11,137
So within the example
below I had downloaded

215
00:11:11,137 --> 00:11:14,073
in Mircosoft Office
2016 I believe,

216
00:11:14,073 --> 00:11:17,143
I can't see it
right now but PKG.

217
00:11:17,143 --> 00:11:19,311
So I installed Mircosoft
Office, I downloaded it.

218
00:11:19,311 --> 00:11:20,680
Well this indicated
that I downloaded it.

219
00:11:20,680 --> 00:11:23,149
I did download it right there.

220
00:11:23,149 --> 00:11:25,651
It's in the downloads
directory also.

221
00:11:25,651 --> 00:11:27,652
And then I downloaded
a Navicat DMG

222
00:11:27,653 --> 00:11:31,257
because I want to be able
to query my databases.

223
00:11:31,257 --> 00:11:34,193
And within a desktop you
can see that there are

224
00:11:34,193 --> 00:11:37,430
creations there for the
.fseventsd folders that I was

225
00:11:37,430 --> 00:11:40,866
telling you about that I
had copied to my desktop,

226
00:11:40,866 --> 00:11:44,203
getting the created
flag for my testing.

227
00:11:45,504 --> 00:11:48,741
So let's look at
website activity

228
00:11:48,741 --> 00:11:52,912
or internet activity that
you can find within FSEvents.

229
00:11:54,346 --> 00:11:57,750
So you visiting a URL
within Chrome and Safari,

230
00:11:57,750 --> 00:11:59,852
I haven't tested FireFox,

231
00:11:59,852 --> 00:12:03,521
will produce internet
related files

232
00:12:03,522 --> 00:12:08,160
that contains URLs related
to your internet activity.

233
00:12:08,160 --> 00:12:12,098
So in this example we can
go with the bottom example,

234
00:12:12,098 --> 00:12:17,002
I believe it was in Safari,
I was visiting wfaa.com.

235
00:12:17,002 --> 00:12:20,305
I live in Texas, I need to
know if I'm gonna get hail.

236
00:12:20,306 --> 00:12:22,508
I want to keep my car protected.

237
00:12:22,508 --> 00:12:25,277
So you can see the specific URLs

238
00:12:25,277 --> 00:12:27,947
that I was visiting on wfaa.com.

239
00:12:29,982 --> 00:12:31,483
So mount activity.

240
00:12:32,952 --> 00:12:36,422
You double click a DMG, the
OS is gonna try to mount it.

241
00:12:36,422 --> 00:12:38,090
You plug in an external device,

242
00:12:38,090 --> 00:12:40,392
the OS is gonna try to mount it.

243
00:12:40,392 --> 00:12:43,395
Shared network
drives, try mount it.

244
00:12:44,797 --> 00:12:47,967
Mount activity is also
recorded within FSEvents.

245
00:12:47,967 --> 00:12:52,170
So you can see when
drives were plugged in,

246
00:12:52,171 --> 00:12:55,908
when DMGs were mounted and
it'll get the mount flag.

247
00:12:55,908 --> 00:12:58,878
And when it's unmounted
it'll get the unmount flag.

248
00:12:58,878 --> 00:13:00,679
And something that's also
interesting that I noticed

249
00:13:00,679 --> 00:13:05,351
is that the /net/home folders

250
00:13:05,351 --> 00:13:09,155
will get mounted when
the system starts up.

251
00:13:09,155 --> 00:13:11,723
So you can filter
those folders out

252
00:13:11,724 --> 00:13:15,628
and get approximate dates for
when the system was booted.

253
00:13:15,628 --> 00:13:17,797
So next let's look at IOS.

254
00:13:18,764 --> 00:13:22,001
And IOS is pretty interesting

255
00:13:22,001 --> 00:13:24,170
and I want to do a lot
more testing on it.

256
00:13:24,170 --> 00:13:27,006
And from what I've
seen with what I have

257
00:13:27,006 --> 00:13:29,007
you can get a lot
of information also.

258
00:13:29,008 --> 00:13:31,076
And probably even relate
that back to some of what

259
00:13:31,076 --> 00:13:35,681
Sarah and Heather was talking
about with continuity.

260
00:13:35,681 --> 00:13:40,219
So let's look at Icloud sync
files from other devices.

261
00:13:40,219 --> 00:13:44,857
So in this example here I
have created an SQL query

262
00:13:44,857 --> 00:13:47,927
that filters for
com~apple~CloudDocs.

263
00:13:53,599 --> 00:13:58,270
What you can see here is a
reference to trashes, .trashes.

264
00:13:58,270 --> 00:14:01,173
I don't know of any reference
to trashes on an IOS device

265
00:14:01,173 --> 00:14:04,143
so these FSEvents
just to make it clear

266
00:14:04,143 --> 00:14:07,813
we're from an IOS
device, an iPhone.

267
00:14:07,813 --> 00:14:11,984
So there's reference to Cloud
Docs /.trashes directory.

268
00:14:14,620 --> 00:14:18,290
So what happened here
was another device,

269
00:14:18,290 --> 00:14:22,461
a desktop computer had sent
these files to the trash

270
00:14:24,263 --> 00:14:28,434
and then the Cloud, iCloud
syncs these metadata files,

271
00:14:29,835 --> 00:14:33,939
you can see with the .Cloud
extension, to the phone.

272
00:14:33,939 --> 00:14:37,742
So we can see activity that
was occurring on the desktop

273
00:14:37,743 --> 00:14:41,914
computer even though these
files are coming from the phone.

274
00:14:43,983 --> 00:14:45,617
So next let's look
at internet activity.

275
00:14:45,618 --> 00:14:49,321
Very similar to OSX,
you can see you know,

276
00:14:49,321 --> 00:14:52,358
internet activity related
to URLs that were visited

277
00:14:52,358 --> 00:14:55,194
and what was created
for you know,

278
00:14:56,362 --> 00:14:59,732
the browser that, that
was generated with.

279
00:14:59,732 --> 00:15:01,766
So there was red snow visited,

280
00:15:01,767 --> 00:15:03,636
which is a jail
breaking website.

281
00:15:03,636 --> 00:15:05,437
Which is the very first entry

282
00:15:05,437 --> 00:15:09,608
and I should note that
to access FSEvents on an

283
00:15:09,608 --> 00:15:12,710
IOS device it has
to be jail broken.

284
00:15:12,711 --> 00:15:15,915
So it's not easily accessible.

285
00:15:15,915 --> 00:15:19,550
So Inode activity, you
can also see this on OSX.

286
00:15:19,551 --> 00:15:22,454
So we're still in, I mean
we're in IOS right now,

287
00:15:22,454 --> 00:15:25,024
these are all FSEvents from IOS.

288
00:15:25,024 --> 00:15:28,193
You can see the attachment names

289
00:15:28,193 --> 00:15:31,864
of attachments that
were downloaded.

290
00:15:31,864 --> 00:15:33,465
And you can also
see activity related

291
00:15:33,465 --> 00:15:37,336
to sent items and
the inbox and so on.

292
00:15:37,336 --> 00:15:41,040
So next let's look at the
caveats related to FSEvents.

293
00:15:41,040 --> 00:15:43,842
We're gonna talk
about Lost FSEvents,

294
00:15:43,842 --> 00:15:46,211
lack of timestamps which
is a pretty big one

295
00:15:46,211 --> 00:15:49,648
for a lot of people, external
devices, anti-forensics

296
00:15:49,648 --> 00:15:52,952
and coalescing of
multiple changes.

297
00:15:52,952 --> 00:15:56,755
Okay, so the problem here
is you have lost FSEvents.

298
00:15:56,755 --> 00:16:01,126
You get a system and there's
no FSEvents in the directory,

299
00:16:01,126 --> 00:16:04,863
there's just the single
file called the UDID file.

300
00:16:04,863 --> 00:16:06,332
So what happened here?

301
00:16:06,332 --> 00:16:10,369
Okay, that could be the result
of hard reset of a system,

302
00:16:10,369 --> 00:16:14,540
a system crash or not
un-properly mounting a volume,

303
00:16:15,908 --> 00:16:17,943
that's a big deal, FSEvents
are stored in memory.

304
00:16:17,943 --> 00:16:21,113
So what happens if
FSEvents or you know,

305
00:16:21,113 --> 00:16:22,514
if you have an external device

306
00:16:22,514 --> 00:16:24,483
plugged in and you pull it out?

307
00:16:24,483 --> 00:16:27,286
It's gone, you can't write
it to the external device

308
00:16:27,286 --> 00:16:30,723
it it's not there, if it's
not un-properly mounted.

309
00:16:30,723 --> 00:16:32,024
And system upgrades.

310
00:16:32,024 --> 00:16:33,459
For some reason I'm not sure why

311
00:16:33,459 --> 00:16:37,628
but system upgrades
apparently appear to cause

312
00:16:37,629 --> 00:16:40,632
FSEvents being removed
from the directory.

313
00:16:40,632 --> 00:16:43,002
Could be once again
not properly booting

314
00:16:43,002 --> 00:16:45,103
during the process, who knows.

315
00:16:45,104 --> 00:16:47,506
You can carve for G Zip files

316
00:16:47,506 --> 00:16:50,041
if you want a remedy
for this problem.

317
00:16:50,042 --> 00:16:51,243
You might not always get it back

318
00:16:51,243 --> 00:16:54,446
but I have a seen a
large number of FSEvents

319
00:16:54,446 --> 00:16:57,449
being carved from
unallocated space.

320
00:16:59,084 --> 00:17:01,119
Lack of timestamps.

321
00:17:01,120 --> 00:17:04,690
As previously mentioned,
there's only 3 components

322
00:17:04,690 --> 00:17:07,793
of an FSEvent record
within that log.

323
00:17:07,792 --> 00:17:12,296
It's the Event ID, the
Full Path, and the Flags.

324
00:17:12,297 --> 00:17:14,433
There's no timestamp in there.

325
00:17:14,433 --> 00:17:16,167
So how are we gonna know
when something changed?

326
00:17:16,167 --> 00:17:19,338
How are we gonna know
when something happened?

327
00:17:19,338 --> 00:17:22,508
So we can use temporal
data right now

328
00:17:22,508 --> 00:17:26,111
to pull from the name
of Apple System Logs.

329
00:17:27,279 --> 00:17:29,848
So ASL likes to name
their system logs

330
00:17:29,848 --> 00:17:34,186
based off of the day
that it's gonna track.

331
00:17:34,186 --> 00:17:39,024
So we can take that name and
then the FSEventParser Script

332
00:17:39,024 --> 00:17:42,860
puts it into a separate
column called other dates.

333
00:17:42,861 --> 00:17:44,096
So you can get an approximate

334
00:17:44,096 --> 00:17:46,298
timeframe of when
something happened.

335
00:17:46,298 --> 00:17:49,668
External devices,
so unsafe removal.

336
00:17:49,668 --> 00:17:53,938
You've seen it when you have
a drive plugged into a Mac,

337
00:17:53,939 --> 00:17:56,141
you unplug it, you didn't
use unsafe removal,

338
00:17:56,141 --> 00:17:58,577
and it starts screaming at you.

339
00:17:58,577 --> 00:18:01,413
No it's unsafe, no don't do it.

340
00:18:01,413 --> 00:18:04,216
So when you do that
your FSEvents are lost.

341
00:18:04,216 --> 00:18:05,783
Because once again
they're stored in memory,

342
00:18:05,784 --> 00:18:09,388
it wasn't properly
mounted for that matter.

343
00:18:10,589 --> 00:18:14,059
Okay, so you did a
safe removal then,

344
00:18:14,059 --> 00:18:16,595
but it didn't finish
writing to disk.

345
00:18:16,595 --> 00:18:19,231
Once again, they're lost.

346
00:18:19,231 --> 00:18:20,799
You can see this
by looking at the

347
00:18:20,799 --> 00:18:24,636
write light on some
external devices.

348
00:18:24,636 --> 00:18:27,906
If it's still flashing
it's still writing to disk.

349
00:18:27,906 --> 00:18:30,542
If you pull it out before
that's finished they're gone.

350
00:18:30,542 --> 00:18:33,145
File system
compatibility issues.

351
00:18:33,145 --> 00:18:37,816
I've also seen on non-HFS Plus
Formatted external devices

352
00:18:37,816 --> 00:18:42,221
that it doesn't always write
FSEvents to the drives.

353
00:18:42,221 --> 00:18:43,489
So remedies?

354
00:18:43,489 --> 00:18:44,723
You better hope that,

355
00:18:44,723 --> 00:18:47,726
that person properly
unmounted that drive,

356
00:18:47,726 --> 00:18:50,229
otherwise you're not
gonna see them there.

357
00:18:50,229 --> 00:18:51,697
You may also try carving.

358
00:18:51,697 --> 00:18:52,930
Though the external device,

359
00:18:52,931 --> 00:18:55,467
if you do see that
on an external say a

360
00:18:55,467 --> 00:18:58,504
VAT32 there's and
fseventsd directory.

361
00:18:58,504 --> 00:19:01,540
You can try carving for
FSEvents and see what you get.

362
00:19:01,540 --> 00:19:04,376
So coalescing of
multiple changes.

363
00:19:05,711 --> 00:19:09,548
The Events API coalesces
multiple changes into one event.

364
00:19:11,650 --> 00:19:14,720
So there's a huge
problem with this.

365
00:19:14,720 --> 00:19:17,422
Unlike the USN journal
it'll put each line

366
00:19:17,422 --> 00:19:19,525
for each change that
happened to that file,

367
00:19:19,525 --> 00:19:22,227
which is beautiful, you
know exactly in what order

368
00:19:22,227 --> 00:19:24,396
everything happened,
here we don't.

369
00:19:24,396 --> 00:19:27,032
We don't have the order
that something happened.

370
00:19:27,032 --> 00:19:31,203
I can create a file on my
desktop then remove it you know,

371
00:19:32,337 --> 00:19:35,874
and modify it and
then recreate it again

372
00:19:35,874 --> 00:19:38,210
but it has completely
different contents,

373
00:19:38,210 --> 00:19:40,479
you'll only see
that as one entry.

374
00:19:40,479 --> 00:19:42,648
That was two separate files.

375
00:19:42,648 --> 00:19:43,948
So that's a huge deal.

376
00:19:43,949 --> 00:19:46,518
You have to be aware of that.

377
00:19:46,518 --> 00:19:48,020
So anti-forensics.

378
00:19:49,021 --> 00:19:51,723
I haven't seen this in the wild

379
00:19:51,723 --> 00:19:54,259
but apparently you can
place a no log file

380
00:19:54,259 --> 00:19:58,430
in the fseventsd directory and
it will not monitor FSEvents.

381
00:19:59,798 --> 00:20:02,801
So if you don't want anybody
parsing your FSEvents

382
00:20:02,801 --> 00:20:05,470
you want to put that file there.

383
00:20:08,707 --> 00:20:12,611
So yeah, FSEvents won't be
recorded for that volume.

384
00:20:12,611 --> 00:20:14,613
So there's no remedies, however,

385
00:20:14,613 --> 00:20:17,149
if you get an image of a
system or your image a system

386
00:20:17,149 --> 00:20:21,453
and that no log was there
you're not gonna get FSEvents.

387
00:20:21,453 --> 00:20:24,089
But however, the
privileges and you know,

388
00:20:24,089 --> 00:20:27,125
permissions and the advanced
knowledge that you would need

389
00:20:27,125 --> 00:20:30,796
or a user would need
to do that is you know.

390
00:20:34,266 --> 00:20:35,500
May not be likely.

391
00:20:35,500 --> 00:20:37,402
However, before we do questions,

392
00:20:37,402 --> 00:20:41,240
I do want to say that
there are amazing artifacts

393
00:20:41,240 --> 00:20:44,743
within FSEvents and as
you've seen, you saw,

394
00:20:44,743 --> 00:20:48,213
I mean, internet activity,
mounts, and unmounts.

395
00:20:48,213 --> 00:20:50,282
Anything I do on my desktop,

396
00:20:50,282 --> 00:20:54,986
downloads directory, email,
and syncing from Cloud,

397
00:20:54,987 --> 00:20:59,124
I can see activity on
one device you know,

398
00:20:59,124 --> 00:21:02,928
on my phone that had
the iCloud syncing.

399
00:21:02,928 --> 00:21:04,496
So there's a lot of
good information there

400
00:21:04,496 --> 00:21:06,898
you just have to understand
the caveats involved with it.

401
00:21:06,898 --> 00:21:09,333
(jazz music)

