1
00:00:11,578 --> 00:00:13,546
- My name's Lee, as you
heard, and we're gonna

2
00:00:13,546 --> 00:00:16,082
talk about some MAC times today.

3
00:00:16,082 --> 00:00:18,685
We're talk a little bit
about Windows MAC times.

4
00:00:18,685 --> 00:00:21,320
And how screwing them up,
and your interpretation

5
00:00:21,321 --> 00:00:24,758
of them of them is
really not a good idea

6
00:00:24,758 --> 00:00:28,061
and then we're gonna talk
about how the Mac MAC times

7
00:00:28,061 --> 00:00:31,631
can help you in
your investigations.

8
00:00:31,631 --> 00:00:32,698
So this is me

9
00:00:34,968 --> 00:00:38,104
I've just recently started
with SANS a few months ago.

10
00:00:38,104 --> 00:00:40,974
This is great and I
love working there

11
00:00:40,974 --> 00:00:43,142
and while people enjoy
gonna live events,

12
00:00:43,143 --> 00:00:45,879
I work in the
OnDemand side, so take

13
00:00:45,879 --> 00:00:48,047
some OnDemand classes too.

14
00:00:49,416 --> 00:00:51,751
By the way, the weight loss,

15
00:00:54,387 --> 00:00:56,256
the challenge for that
was just to cover up

16
00:00:56,256 --> 00:00:57,724
the tape worm infection.

17
00:00:57,724 --> 00:01:00,827
(audience laughing)

18
00:01:00,827 --> 00:01:03,830
So let's start with
Windows timestamps.

19
00:01:03,830 --> 00:01:06,332
Some of you are gonna
think, why we talking

20
00:01:06,332 --> 00:01:08,134
about this, we already
know about this.

21
00:01:08,134 --> 00:01:10,637
Well, there's a lot of people
who think they know about this

22
00:01:10,637 --> 00:01:13,740
so just pay attention
please, we've already

23
00:01:13,740 --> 00:01:16,476
locked the doors anyway.

24
00:01:16,476 --> 00:01:20,413
So Windows, most Windows
systems use and NTFS

25
00:01:20,413 --> 00:01:24,350
as we know, and NTFS has
the MFT and in the MFT

26
00:01:25,518 --> 00:01:29,389
each file and folder
has got its own entry.

27
00:01:29,389 --> 00:01:33,560
In that entry we'll expect to
see, two sets of time stamps

28
00:01:34,928 --> 00:01:37,363
standard information attributes,
and file name attributes,

29
00:01:37,363 --> 00:01:40,834
and we'll get to them
in just a second.

30
00:01:40,834 --> 00:01:43,069
This is what I
ripped off from Rob,

31
00:01:43,069 --> 00:01:46,239
the SANS poster which
everyone got a copy of

32
00:01:46,239 --> 00:01:47,707
so you have no excuse.

33
00:01:47,707 --> 00:01:49,776
That one you have collecting
dust in your drawer,

34
00:01:49,776 --> 00:01:53,378
you can throw away now and
hang this one up on your wall.

35
00:01:53,379 --> 00:01:55,748
The best part of this,
in my humble opinion,

36
00:01:55,748 --> 00:02:00,587
is this top corner and here
you'll see we have separated,

37
00:02:00,587 --> 00:02:03,356
we have the standard
information attributes

38
00:02:03,356 --> 00:02:07,160
and here we have eight
different scenarios

39
00:02:07,160 --> 00:02:10,329
where these items
can and will change.

40
00:02:12,765 --> 00:02:14,100
Standard information attributes

41
00:02:14,100 --> 00:02:16,302
is typically what
you'll see if you use

42
00:02:16,302 --> 00:02:20,540
off the shelf forensics software
like EnCase, X-Ways, FTK,

43
00:02:20,540 --> 00:02:22,608
those kinds of things.

44
00:02:22,609 --> 00:02:27,247
Seldom do they show the
second set of dates and times,

45
00:02:27,247 --> 00:02:30,450
the filename attributes,
which is a shame because

46
00:02:30,450 --> 00:02:34,587
as you can see, you'll
have a bit blurred out now.

47
00:02:34,587 --> 00:02:36,789
But, the standard
information attributes

48
00:02:36,789 --> 00:02:40,859
and the filename attributes
behave very differently.

49
00:02:40,860 --> 00:02:43,329
which can be a little
bit confusing at times

50
00:02:43,329 --> 00:02:45,298
but more often than
not, this is gonna

51
00:02:45,298 --> 00:02:48,034
be key to an investigation.

52
00:02:48,034 --> 00:02:50,370
So I want to share
just a quick example

53
00:02:50,370 --> 00:02:52,972
with you a case I
worked on recently.

54
00:02:52,972 --> 00:02:55,441
Some of you may be familiar
with this type of scenario

55
00:02:55,441 --> 00:02:57,443
We have a guy who
works at a company

56
00:02:57,443 --> 00:03:01,247
and he decides to leave the
company, go to a competitor.

57
00:03:01,247 --> 00:03:03,683
Now, in this particular
case this guy

58
00:03:03,683 --> 00:03:07,787
didn't return the computer,
his work computer,

59
00:03:07,787 --> 00:03:12,458
to his original company
until one week after he left.

60
00:03:12,458 --> 00:03:14,661
Which raised suspicion.

61
00:03:14,661 --> 00:03:18,498
So he sent his computer
back, the original company

62
00:03:18,498 --> 00:03:22,668
had it forensically analyzed
and they found two things.

63
00:03:24,437 --> 00:03:26,105
The first thing

64
00:03:26,105 --> 00:03:28,441
is that laptop had thousands

65
00:03:29,542 --> 00:03:32,946
of deleted it work
related files on there,

66
00:03:32,946 --> 00:03:35,114
which is not a good start.

67
00:03:36,382 --> 00:03:39,786
The second thing they
found was that the

68
00:03:40,987 --> 00:03:44,090
there was an external
hard drive plugged in

69
00:03:44,090 --> 00:03:47,026
just two days before
the laptop was returned.

70
00:03:47,026 --> 00:03:48,928
And through their
analysis of the link files

71
00:03:48,928 --> 00:03:52,232
and the jump place in the MRU's
they were able to determine

72
00:03:52,232 --> 00:03:55,768
that there were quite a few
files on this USB hard drive

73
00:03:55,768 --> 00:03:57,604
that shouldn't have been there.

74
00:03:57,604 --> 00:04:00,473
Files which had the same
names and occasionally

75
00:04:00,473 --> 00:04:03,176
dates and times
as those found on

76
00:04:04,544 --> 00:04:07,614
the deleted files
found on the laptop.

77
00:04:07,614 --> 00:04:09,082
So they obviously
weren't very happy

78
00:04:09,082 --> 00:04:12,518
and I apologize
for the language.

79
00:04:12,518 --> 00:04:14,654
So they were very
happy about this,

80
00:04:14,654 --> 00:04:16,221
they got a lawyer
involved and they sent

81
00:04:16,221 --> 00:04:19,524
a request back to this
guy and they asked

82
00:04:19,524 --> 00:04:22,729
we want this
external hard drive.

83
00:04:22,729 --> 00:04:25,765
And so the guy obliged,
he sent it back

84
00:04:25,765 --> 00:04:28,268
and further analysis was done.

85
00:04:30,203 --> 00:04:33,539
And the analyst found
that unfortunately

86
00:04:34,741 --> 00:04:37,510
every single one of
those deleted files

87
00:04:37,510 --> 00:04:41,381
from the laptop existed on
this external hard drive

88
00:04:41,381 --> 00:04:43,883
so this was a bit problematic.

89
00:04:45,318 --> 00:04:46,486
And what they,

90
00:04:49,656 --> 00:04:51,724
the conclusion that they came to

91
00:04:51,724 --> 00:04:53,226
after they spoke
to their employees,

92
00:04:53,226 --> 00:04:56,529
was that this guy was not
very technically adept.

93
00:04:56,529 --> 00:04:57,363
He was not

94
00:04:59,265 --> 00:05:00,832
an every day computer user.

95
00:05:00,833 --> 00:05:03,469
People said he could do
his email, search the web,

96
00:05:03,469 --> 00:05:06,639
do some spreadsheets
stuff, but that was it.

97
00:05:06,639 --> 00:05:10,710
So the most interesting thing
about external hard drive

98
00:05:10,710 --> 00:05:13,412
was not that all these
files existed on there,

99
00:05:13,413 --> 00:05:17,884
but the time stamps associated
with the created time

100
00:05:17,884 --> 00:05:20,486
was preserved at the time copy.

101
00:05:21,688 --> 00:05:25,258
This event happened in
December of last year.

102
00:05:28,428 --> 00:05:30,596
If you refer back
to you SANS poster,

103
00:05:30,596 --> 00:05:34,467
you'll see that file
copying or drag and drop,

104
00:05:34,467 --> 00:05:38,371
preserves only one time
stamp, the last written time.

105
00:05:38,371 --> 00:05:39,972
But in this case,
the last written time

106
00:05:39,972 --> 00:05:42,775
and the creation time
are both preserved.

107
00:05:42,775 --> 00:05:46,945
So, given that this guy was
not hugely into computing

108
00:05:48,414 --> 00:05:50,483
and these dates and
times had been preserved,

109
00:05:50,483 --> 00:05:55,154
the forensic analyst made
a bit of a conclusion,

110
00:05:55,154 --> 00:05:59,025
and that is that in the
week that he had this laptop

111
00:05:59,025 --> 00:06:01,661
he took into his
new place of work,

112
00:06:01,661 --> 00:06:05,131
they had an IT person
at this company

113
00:06:05,131 --> 00:06:08,534
load up some specialist
copying software,

114
00:06:09,736 --> 00:06:13,005
copied those files on to
the external hard drive,

115
00:06:13,005 --> 00:06:17,043
deleted those files and
then sent the laptop back.

116
00:06:17,043 --> 00:06:18,978
Interesting hypothesis.

117
00:06:21,047 --> 00:06:25,251
They did, after they got the
results of this analysis,

118
00:06:25,251 --> 00:06:28,253
they sent notice
to the new company,

119
00:06:30,523 --> 00:06:34,694
and they basically added them
to the list of defendants.

120
00:06:35,828 --> 00:06:38,631
Not happy at all
with this scenario.

121
00:06:38,631 --> 00:06:39,832
So, what did they do?

122
00:06:39,832 --> 00:06:41,200
Well, they went and
hired a forensic analyst

123
00:06:41,200 --> 00:06:44,103
of their own and
that's where I come in.

124
00:06:44,103 --> 00:06:46,873
And so I took a look at
the external hard drive

125
00:06:46,873 --> 00:06:50,042
to start with and
I saw, pretty much,

126
00:06:50,042 --> 00:06:53,012
the same thing as the other
guy, that all the created

127
00:06:53,012 --> 00:06:56,949
and last written times were
exactly as they were found

128
00:06:56,949 --> 00:07:00,319
on the deleted files,
so potentially yeah

129
00:07:01,754 --> 00:07:05,625
I mean you could say that
specialist copying software

130
00:07:05,625 --> 00:07:07,193
was used here.

131
00:07:07,193 --> 00:07:11,798
But then if it was, why only
half the times preserved

132
00:07:11,798 --> 00:07:13,733
why not the other half?

133
00:07:15,134 --> 00:07:19,105
Maybe some settings, maybe
not, well, let's have a look.

134
00:07:19,105 --> 00:07:23,209
So I went and look at
the filename attributes

135
00:07:23,209 --> 00:07:26,512
and they were all
exactly the same.

136
00:07:26,512 --> 00:07:28,881
They all reflected the time that

137
00:07:28,881 --> 00:07:32,417
this transfer of
data took place.

138
00:07:32,418 --> 00:07:35,988
So now I've got eight
MAC times to look at,

139
00:07:38,090 --> 00:07:40,960
so I went back to my
trusty SANS poster.

140
00:07:40,960 --> 00:07:45,097
And knowing that the last
written and the created time

141
00:07:45,097 --> 00:07:48,868
were preserved, but all of
the other dates and times

142
00:07:48,868 --> 00:07:51,170
were updated, we
could narrow this

143
00:07:51,170 --> 00:07:54,407
down potentially to
a volume file move.

144
00:07:55,575 --> 00:07:57,643
Now two questions from this,

145
00:07:57,643 --> 00:08:01,780
what's a volume file
move and why potentially.

146
00:08:01,781 --> 00:08:03,683
Well, volume file move really,

147
00:08:03,683 --> 00:08:05,218
really straightforward
and simple.

148
00:08:05,218 --> 00:08:09,388
It's, you have a window open
over here for one drive,

149
00:08:10,890 --> 00:08:13,893
you right-click and
select cut you over

150
00:08:13,893 --> 00:08:18,364
to another drive you
right-click and select paste.

151
00:08:18,364 --> 00:08:20,799
That simple, it's
a cut and paste.

152
00:08:20,800 --> 00:08:24,904
Now, if that's the case
then all this stuff about

153
00:08:26,339 --> 00:08:30,142
the specialist copying
software is all in their heads.

154
00:08:30,142 --> 00:08:32,144
And that's what we wanna prove.

155
00:08:32,144 --> 00:08:35,347
Now, why potentially,
well, we've only looked

156
00:08:35,347 --> 00:08:36,815
at half of the
evidence we only looked

157
00:08:36,816 --> 00:08:38,017
at the external
hard drive, so let's

158
00:08:38,017 --> 00:08:40,186
take a look at the laptop.

159
00:08:41,354 --> 00:08:45,057
Well if this is a cut
and paste, the key thing

160
00:08:45,057 --> 00:08:47,793
we're gonna look at
here is we want to see

161
00:08:47,793 --> 00:08:50,463
that a cut is gonna
delete the files

162
00:08:50,463 --> 00:08:52,732
at the exact same time
that they're copied

163
00:08:52,732 --> 00:08:54,901
to the external hard drive.

164
00:08:54,901 --> 00:08:58,838
So, we want to find out when
those files were deleted.

165
00:08:58,838 --> 00:09:00,372
Now here's the rub,

166
00:09:01,908 --> 00:09:03,643
is that file deletion

167
00:09:04,810 --> 00:09:07,345
and people always
say this isn't true,

168
00:09:07,346 --> 00:09:11,417
file deletion is not
recorded in the MFT.

169
00:09:11,417 --> 00:09:14,554
The time that a file is
deleted you will not find

170
00:09:14,554 --> 00:09:16,889
from the from the MAC times.

171
00:09:18,391 --> 00:09:22,694
And I get people saying, anyway
I posted this the other day,

172
00:09:22,695 --> 00:09:25,131
and I got like a flood
of emails, this not true,

173
00:09:25,131 --> 00:09:29,267
it's not true, it's true,
okay, just deal with it.

174
00:09:29,268 --> 00:09:32,572
(audience laughing)

175
00:09:32,572 --> 00:09:35,641
So we want to look
somewhere where we're gonna

176
00:09:35,641 --> 00:09:37,476
get these file
deletion times from.

177
00:09:37,476 --> 00:09:40,413
So we're stepping out of
the MFT for just a moment,

178
00:09:40,413 --> 00:09:43,316
and we're gonna look
at the USN Journal.

179
00:09:43,316 --> 00:09:46,018
And so here we've
got all the stuff

180
00:09:46,018 --> 00:09:49,322
from the filename attributes,
all the dates and times,

181
00:09:49,322 --> 00:09:51,657
and we wanna make sure
that for each file,

182
00:09:51,657 --> 00:09:54,193
each and every single one
of these thousands of files

183
00:09:54,193 --> 00:09:56,996
that when it was appeared
on the USB hard drive

184
00:09:56,996 --> 00:10:00,299
is the exact same time that it
was deleted from the laptop.

185
00:10:00,299 --> 00:10:02,568
And because I'm standing
up here talking about this,

186
00:10:02,568 --> 00:10:06,472
you probably already figured
out they matched up perfectly.

187
00:10:06,472 --> 00:10:10,476
So we now went from
our hunch that this was

188
00:10:10,476 --> 00:10:14,480
a cut and paste to it was
definitely a cut and paste.

189
00:10:14,480 --> 00:10:18,084
So we went and we also
looked for evidence

190
00:10:18,084 --> 00:10:21,654
of the specialist copying
software being used

191
00:10:21,654 --> 00:10:25,958
and as you may well have
guessed, there was nothing.

192
00:10:25,958 --> 00:10:29,194
So we went back to the
court we said look,

193
00:10:29,195 --> 00:10:32,298
this is the evidence we
have, the court agreed,

194
00:10:32,298 --> 00:10:34,800
the opposition was
forced to concede,

195
00:10:34,800 --> 00:10:37,502
they removed my client from
the list of defendants.

196
00:10:37,503 --> 00:10:40,606
So they were very
very happy about this.

197
00:10:40,606 --> 00:10:43,609
So, the one thing that I
just wanna touch on quickly

198
00:10:43,609 --> 00:10:47,847
is that frequently, when
we do investigations

199
00:10:47,847 --> 00:10:51,417
we find one thing and
it sets us on course.

200
00:10:52,685 --> 00:10:56,287
Now, good investigators
will alter course

201
00:10:56,288 --> 00:10:58,624
when they see more evidence.

202
00:11:00,559 --> 00:11:02,261
I'm not gonna say
bad investigators,

203
00:11:02,261 --> 00:11:04,563
because it happens to
everyone but probably

204
00:11:04,563 --> 00:11:08,634
less experienced investigators
will not course correct

205
00:11:08,634 --> 00:11:12,805
when they see evidence which
contradicts what they believe.

206
00:11:15,408 --> 00:11:17,543
It's so important that
we let the evidence

207
00:11:17,543 --> 00:11:21,514
speak for itself and that we
just become the mouthpiece.

208
00:11:21,514 --> 00:11:22,515
We can't let

209
00:11:24,583 --> 00:11:26,084
our own agendas affect

210
00:11:26,085 --> 00:11:28,354
what we put in our reports.

211
00:11:29,555 --> 00:11:31,924
So that's the end of that.

212
00:11:31,924 --> 00:11:35,361
That's the Windows
piece wrapped up.

213
00:11:35,361 --> 00:11:38,264
It's so vital that
we we understand

214
00:11:39,932 --> 00:11:42,368
how time stamps work and
how they're manipulated

215
00:11:42,368 --> 00:11:45,771
because I spoke to
another very experienced

216
00:11:45,771 --> 00:11:49,407
forensic investigator
after I did this case

217
00:11:49,408 --> 00:11:50,943
and explained what happened.

218
00:11:50,943 --> 00:11:54,947
He's like, you know, I don't
think I would have seen that.

219
00:11:54,947 --> 00:11:58,317
So use that poster,
it's awesome.

220
00:11:58,317 --> 00:12:01,353
So that leads us on
to Mac MAC times.

221
00:12:03,756 --> 00:12:07,927
and Mac OS uses HFS+, at
least it does for now,

222
00:12:09,462 --> 00:12:13,299
it's gonna change for
SSD drives very shortly,

223
00:12:15,768 --> 00:12:19,705
but HFS+ has something
called the Catalog

224
00:12:19,705 --> 00:12:22,508
which is likely MFT for NTFS.

225
00:12:22,508 --> 00:12:26,178
Once again each file
folder has its own entry

226
00:12:26,178 --> 00:12:27,646
in that Catalog.

227
00:12:27,646 --> 00:12:30,315
and for each file folder's entry

228
00:12:31,183 --> 00:12:34,120
there are a set of MAC times.

229
00:12:34,120 --> 00:12:37,757
There's Created, there's
Written, there's Accessed

230
00:12:37,757 --> 00:12:39,358
and there's Record Change.

231
00:12:39,358 --> 00:12:43,529
And these are all stored
in HFS+ 32-bit values.

232
00:12:44,930 --> 00:12:47,165
Then Apple kinda went off
the rails a little bit

233
00:12:47,166 --> 00:12:49,034
and they added
another time stamp.

234
00:12:49,034 --> 00:12:50,870
This is called the Added date.

235
00:12:50,870 --> 00:12:54,240
And when you look at these
first four in the Catalog

236
00:12:54,240 --> 00:12:56,575
they're all nicely together
in a nice little section

237
00:12:56,575 --> 00:12:58,778
one after the other
all nice and neat.

238
00:12:58,778 --> 00:13:00,146
But then right of the
end of the Catalog record

239
00:13:00,146 --> 00:13:02,948
for a file crammed
in at the very end,

240
00:13:02,948 --> 00:13:06,218
is something called
the added date.

241
00:13:06,218 --> 00:13:09,755
And this added date, is
not even in the same format

242
00:13:09,755 --> 00:13:14,126
as the others this is crammed
in as a UNIX 32-bit value.

243
00:13:14,126 --> 00:13:16,896
Now for a company that's
so hung up on aesthetics

244
00:13:16,896 --> 00:13:19,464
and design this is really crap.

245
00:13:19,465 --> 00:13:22,535
So, I love Apple,
but this is stupid.

246
00:13:27,173 --> 00:13:28,841
I'm so yeah, I mean
for for obvious reasons

247
00:13:28,841 --> 00:13:31,811
This has been referred
to as the Jon Snow value.

248
00:13:31,811 --> 00:13:34,346
(audience laughing)

249
00:13:34,346 --> 00:13:37,149
And the whole reason I've
went through all this testing

250
00:13:37,149 --> 00:13:40,553
to figure this out is because
I want you to recreate

251
00:13:40,553 --> 00:13:42,454
the same kind of thing we see on

252
00:13:42,454 --> 00:13:45,391
the Windows SANS
forensic poster for times

253
00:13:45,391 --> 00:13:48,426
and do the same
thing for the Mac.

254
00:13:48,427 --> 00:13:50,196
So I'll run through
just a few examples

255
00:13:50,196 --> 00:13:53,365
because I'm gonna
go over time anyway.

256
00:13:54,667 --> 00:13:56,335
We'll start with file creation,

257
00:13:56,335 --> 00:13:57,970
as you can see for file creation

258
00:13:57,970 --> 00:14:00,172
the four regular
time stamps updated

259
00:14:00,172 --> 00:14:03,542
but that last Added
date is not populated

260
00:14:05,344 --> 00:14:09,815
at the time of file creation,
you know nothing Jon Snow.

261
00:14:09,815 --> 00:14:13,519
File Modification, the
creation time doesn't change,

262
00:14:13,519 --> 00:14:17,890
the Added time doesn't change,
but the other three do.

263
00:14:17,890 --> 00:14:20,659
And then we get on to something
a bit more complicated.

264
00:14:20,659 --> 00:14:24,530
File duplication, file
duplication in Mac OS

265
00:14:24,530 --> 00:14:26,966
can be done in one of 2 ways.

266
00:14:26,966 --> 00:14:29,301
And you can
right-click on a file,

267
00:14:29,301 --> 00:14:31,403
select copy, right-click
and select paste.

268
00:14:31,403 --> 00:14:33,906
That's a huge four mouse clicks.

269
00:14:33,906 --> 00:14:38,010
That's just not Apple's
way, so you can right-click

270
00:14:38,010 --> 00:14:40,145
on a file and select Duplicate.

271
00:14:40,145 --> 00:14:42,615
And the same thing will
happen, a new file will appear.

272
00:14:42,615 --> 00:14:46,785
So only two mouse clicks,
that's right Microsoft, suck it.

273
00:14:46,785 --> 00:14:49,622
(audience laughing)

274
00:14:49,622 --> 00:14:52,724
I love Microsoft really honest.

275
00:14:52,725 --> 00:14:55,494
But here's the
problem, our case that

276
00:14:55,494 --> 00:14:58,063
we talked about earlier
on with a Windows machine,

277
00:14:58,063 --> 00:15:00,933
if it had been a Mac system
we run into a problem,

278
00:15:00,933 --> 00:15:04,336
because the volume file
move and file duplication

279
00:15:04,336 --> 00:15:07,806
change the exact
same timestamps.

280
00:15:07,806 --> 00:15:11,710
So it means that you have
to dig in really really deep

281
00:15:11,710 --> 00:15:14,113
to try and figure out whether
it was actually a move

282
00:15:14,113 --> 00:15:17,549
or file duplication
that had taken place.

283
00:15:18,751 --> 00:15:20,953
So that's the finished chart.

284
00:15:20,953 --> 00:15:24,555
This will go up on the
on the SANS website.

285
00:15:25,791 --> 00:15:28,193
After the Summit is
over so don't worry

286
00:15:28,193 --> 00:15:31,597
about getting a
picture right now.

287
00:15:31,597 --> 00:15:34,033
And then what happens when
you start to introduce

288
00:15:34,033 --> 00:15:38,203
other file systems, well, this
is where it gets really fun.

289
00:15:39,538 --> 00:15:43,475
So, we'll start with FAT
because Mac OS has got

290
00:15:43,475 --> 00:15:47,646
built in support for read
and write to and from FAT.

291
00:15:48,781 --> 00:15:51,349
So with FAT, whenever
you create a file

292
00:15:51,350 --> 00:15:54,253
also whenever you move a
file and bearing in mind

293
00:15:54,253 --> 00:15:58,557
that copying and moving
are the same thing.

294
00:15:58,557 --> 00:16:01,327
Created, Last Written are
inherited from the original

295
00:16:01,327 --> 00:16:05,130
and Access Date is
updated to the time,

296
00:16:05,130 --> 00:16:08,600
or updated to the date
that the copy was made.

297
00:16:08,600 --> 00:16:09,835
What about the other way around,

298
00:16:09,835 --> 00:16:13,305
well it is pretty much
the same except that

299
00:16:14,640 --> 00:16:17,276
there's just more values.

300
00:16:17,276 --> 00:16:20,545
So the Created, Modified,
once again Inherited

301
00:16:20,546 --> 00:16:22,748
everything else updates
the time of copy.

302
00:16:22,748 --> 00:16:26,418
Now there is a bit
of an issue here

303
00:16:26,418 --> 00:16:29,922
is that if you've got
a file, picture.jpg,

304
00:16:31,623 --> 00:16:35,794
and you copy that from
your MAC onto the USB

305
00:16:35,794 --> 00:16:40,098
which is formatted as
FAT, and then you then

306
00:16:40,099 --> 00:16:43,068
take that drive, plug
it in somewhere else

307
00:16:43,068 --> 00:16:45,069
and you access that file

308
00:16:46,238 --> 00:16:49,508
that file access
time gets updated.

309
00:16:49,508 --> 00:16:52,444
Which means you no longer
know when that file

310
00:16:52,444 --> 00:16:54,479
was put on that drive
because the Access Date

311
00:16:54,480 --> 00:16:57,649
was the only thing telling
you when that file was copied.

312
00:16:57,649 --> 00:17:00,185
Well there's some good news.

313
00:17:00,185 --> 00:17:02,253
And you may have seen
this if you operate

314
00:17:02,254 --> 00:17:05,156
between Windows and
Mac quite frequently.

315
00:17:05,156 --> 00:17:09,060
Is that what have you
copy a file from HFS+

316
00:17:09,060 --> 00:17:10,795
to a FAT file system,

317
00:17:12,998 --> 00:17:14,333
not only do you get the file

318
00:17:14,333 --> 00:17:17,536
that you copied but
you also get ._ file

319
00:17:18,670 --> 00:17:21,807
which has almost
the exact same name.

320
00:17:21,807 --> 00:17:25,911
Now that file contains
various pieces of metadata

321
00:17:25,911 --> 00:17:28,180
you can take a look at,
but the interesting thing

322
00:17:28,180 --> 00:17:30,783
is that because that's not
being copied from anywhere

323
00:17:30,783 --> 00:17:33,452
that's a brand new file
being created on the fly,

324
00:17:33,452 --> 00:17:36,121
That the created time
of that file will equate

325
00:17:36,121 --> 00:17:39,858
within a few seconds,
of the created time

326
00:17:39,858 --> 00:17:44,530
of the original file was
copied onto the drive.

327
00:17:44,530 --> 00:17:46,465
So great stuff to know.

328
00:17:48,367 --> 00:17:49,935
What are NTFS?

329
00:17:49,935 --> 00:17:53,438
Well, Mac OS had got
native read from NTFS

330
00:17:54,573 --> 00:17:56,275
so let's start with that.

331
00:17:56,275 --> 00:17:58,844
It's exactly the
same as with FAT.

332
00:17:58,844 --> 00:18:02,948
Created, Modified, a preserved
everything else updated.

333
00:18:05,918 --> 00:18:07,619
And what about going to NTFS?

334
00:18:07,619 --> 00:18:09,922
Well you can do this
in one of three ways.

335
00:18:09,922 --> 00:18:12,291
The first way is that,
this may come as a surprise

336
00:18:12,291 --> 00:18:15,327
to a lot of people,
Mac OS actually

337
00:18:15,327 --> 00:18:19,498
has a native NTFS driver built
in to the operating system.

338
00:18:20,899 --> 00:18:23,802
You can enable this by
going to a certain .plist

339
00:18:23,802 --> 00:18:27,706
and adding a value and
it will almost guarantee

340
00:18:29,141 --> 00:18:32,744
the screwing up of anything
you have on an NTFS drive.

341
00:18:32,744 --> 00:18:36,482
I would advise is heavily
against using that.

342
00:18:37,649 --> 00:18:39,885
The second thing you can
do is that you can use

343
00:18:39,885 --> 00:18:43,055
the open source tools
which are out there.

344
00:18:43,055 --> 00:18:45,390
But here's the thing,
you gotta install

345
00:18:45,390 --> 00:18:47,559
like three or four
different things

346
00:18:47,559 --> 00:18:49,061
and then as soon as
one of those updates

347
00:18:49,061 --> 00:18:52,364
or the operating system
updates, everything breaks

348
00:18:52,364 --> 00:18:56,568
and you have to start again,
so it can be time consuming.

349
00:18:56,568 --> 00:18:59,638
The third option which is the
one I choose because I'm lazy.

350
00:18:59,638 --> 00:19:02,474
Is using a paid
product to do that.

351
00:19:04,610 --> 00:19:08,780
Tuxera, Paragon, things of
that nature, I use Tuxera.

352
00:19:10,315 --> 00:19:14,453
So you use those, you transfer
a file from HFS+ to NTFS

353
00:19:14,453 --> 00:19:16,855
this is what you expect
to see, same thing

354
00:19:16,855 --> 00:19:19,224
as you would for volume
file move on Windows.

355
00:19:19,224 --> 00:19:23,395
Created, Last Written,
preserved, everything
else updated.

356
00:19:25,030 --> 00:19:26,932
No, if you copy to NTFS

357
00:19:28,634 --> 00:19:30,169
using something like Tuxera

358
00:19:30,169 --> 00:19:34,606
or Paragon or one of the
open source alternatives,

359
00:19:34,606 --> 00:19:36,942
you do not get the ._ files.

360
00:19:39,912 --> 00:19:43,015
The reason is is because
the metadata contained

361
00:19:43,015 --> 00:19:46,818
within those will be
natively adopted by NTFS.

362
00:19:46,818 --> 00:19:49,154
So, just watch out for that.

363
00:19:52,691 --> 00:19:54,459
Another complication,

364
00:19:56,428 --> 00:19:58,997
this one really needs
to be addressed.

365
00:19:58,997 --> 00:20:01,333
Is that we talk
about file access.

366
00:20:01,333 --> 00:20:03,735
Now, as we're aware
in Windows this

367
00:20:03,735 --> 00:20:07,906
was pretty much turned off
from Windows Vista onwards.

368
00:20:09,708 --> 00:20:13,045
Still active on Mac OS so
you may think this is great.

369
00:20:13,045 --> 00:20:16,582
I know when the user
last open this file.

370
00:20:16,582 --> 00:20:19,051
No you don't not,
from this value,

371
00:20:19,051 --> 00:20:22,454
this value can be updated
a number of different ways.

372
00:20:22,454 --> 00:20:25,957
One of them is being
indexed by spotlight.

373
00:20:27,292 --> 00:20:29,227
Another one is that
the user right-clicks

374
00:20:29,228 --> 00:20:32,431
on the file and says Get info,
that will update this too.

375
00:20:32,431 --> 00:20:33,832
But there's also other issues,

376
00:20:33,832 --> 00:20:37,102
I'm gonna walk you through now.

377
00:20:37,102 --> 00:20:38,470
I'm sorry this might
be a little bit small

378
00:20:38,470 --> 00:20:41,573
for people to see but,
you can see, if you're

379
00:20:41,573 --> 00:20:43,242
close enough you can
see here and I'm gonna

380
00:20:43,242 --> 00:20:45,610
run a stack command
on a specific file.

381
00:20:45,611 --> 00:20:50,048
And on this file, we see
this file was last accessed

382
00:20:50,048 --> 00:20:54,486
on October 17th but in the
GUI, the GUI's reporting

383
00:20:54,486 --> 00:20:58,056
that it was last
opened on October 12th.

384
00:20:58,056 --> 00:20:59,858
Doesn't make much sense.

385
00:20:59,858 --> 00:21:03,195
So I closed the file, opened
it again, closed it again.

386
00:21:03,195 --> 00:21:05,797
Ran Stat again, the
exact same thing.

387
00:21:05,797 --> 00:21:08,467
The Access time had not updated.

388
00:21:09,668 --> 00:21:12,803
But the GUI updated
to the date and time

389
00:21:14,273 --> 00:21:16,375
that I'd opened the file.

390
00:21:17,843 --> 00:21:19,177
So this left me a bit confused.

391
00:21:19,177 --> 00:21:21,146
I know this is not in
the Catalog anywhere,

392
00:21:21,146 --> 00:21:23,649
I mean I looked hard for this.

393
00:21:24,583 --> 00:21:27,052
So I ran the MDLS command.

394
00:21:27,052 --> 00:21:30,421
MDLS pull in all the
metadata for a given file.

395
00:21:30,422 --> 00:21:33,091
And I found some
really cool stuff,

396
00:21:33,091 --> 00:21:35,327
more than I expected to see.

397
00:21:35,327 --> 00:21:39,164
The first thing is just
KMDItemLastUsedDate.

398
00:21:39,164 --> 00:21:41,733
Which corresponds exactly
to the Last opened date

399
00:21:41,733 --> 00:21:43,835
that we saw in the GUI.

400
00:21:43,835 --> 00:21:45,137
But more than that
we've got these

401
00:21:45,137 --> 00:21:47,339
other two cool things
down the bottom.

402
00:21:47,339 --> 00:21:51,510
The first one is this
KMDItemUseCount which allegedly

403
00:21:53,111 --> 00:21:57,482
gives the number of times
the file's been opened.

404
00:21:57,482 --> 00:22:01,186
One problem is this
increments by one or two,

405
00:22:02,354 --> 00:22:03,989
just depends and I
have not figured out

406
00:22:03,989 --> 00:22:07,025
what that depends on yet,
but we'll figure it out.

407
00:22:07,025 --> 00:22:10,796
But the other cool thing
is KMDIemUsedDates,

408
00:22:10,796 --> 00:22:14,566
this is an array, so if
you have a user says,

409
00:22:16,335 --> 00:22:18,704
I don't know about that file,
I don't know how it got there.

410
00:22:18,704 --> 00:22:20,504
It was nothing to do with me.

411
00:22:20,505 --> 00:22:24,109
Well, why have you
opened it several times?

412
00:22:25,844 --> 00:22:27,746
Now unfortunately this
only resolves to the day

413
00:22:27,746 --> 00:22:31,016
if you can see the time
is kind of blanked out.

414
00:22:31,016 --> 00:22:35,220
But still very very
useful for us to know.

415
00:22:35,220 --> 00:22:37,089
And then, as I was
looking at this,

416
00:22:37,089 --> 00:22:39,758
I found some other cool stuff.

417
00:22:39,758 --> 00:22:43,929
KMDItemUserModifiedDate, this
one, also very very cool.

418
00:22:45,797 --> 00:22:49,334
another array and
this will tell you

419
00:22:49,334 --> 00:22:52,771
all of the times that
the file was saved.

420
00:22:54,272 --> 00:22:58,443
Now I haven't quite maxed out
how large this array is yet.

421
00:22:59,644 --> 00:23:03,014
But, not only do you
get the date and time

422
00:23:04,416 --> 00:23:08,053
these files were opened
but you also get this other

423
00:23:09,521 --> 00:23:13,392
handy little array down at
the bottom which tells you

424
00:23:13,392 --> 00:23:16,428
which user was responsible too.

425
00:23:16,428 --> 00:23:19,030
So, once again, very very handy.

426
00:23:19,030 --> 00:23:21,600
I had no idea about that file,
I've never touched it before.

427
00:23:21,600 --> 00:23:24,269
Well you've opened it this date

428
00:23:24,269 --> 00:23:26,938
and then you saved it
this time and this time,

429
00:23:26,938 --> 00:23:30,175
are you sure you
didn't know about this?

430
00:23:30,175 --> 00:23:33,378
I think they change the
story pretty quickly.

431
00:23:33,378 --> 00:23:37,549
And then finally we come to
something which puzzled me

432
00:23:37,549 --> 00:23:39,317
for the longest time.

433
00:23:40,485 --> 00:23:43,120
We have an array
for Created Date.

434
00:23:44,289 --> 00:23:46,258
Why do you need
an array creation?

435
00:23:46,258 --> 00:23:48,160
You create a file once.

436
00:23:50,328 --> 00:23:53,398
Another one of those
stupid Apple things.

437
00:23:53,398 --> 00:23:54,399
Well anyway,

438
00:23:56,101 --> 00:23:56,935
and this,

439
00:23:58,203 --> 00:23:59,671
I didn't figure this out

440
00:23:59,671 --> 00:24:02,507
I'll be honest, this was
Nicole who spoke earlier today

441
00:24:02,507 --> 00:24:04,109
helped me with
this by doing some

442
00:24:04,109 --> 00:24:06,778
her independent testing on this.

443
00:24:08,079 --> 00:24:10,581
I don't know why they do this,

444
00:24:12,083 --> 00:24:12,918
but Apple.

445
00:24:16,555 --> 00:24:19,257
So, in order to get
this to work, let's say

446
00:24:19,257 --> 00:24:22,194
you have a file sitting
on your desktop.

447
00:24:22,194 --> 00:24:26,331
You open and save a file,
this doesn't update.

448
00:24:26,331 --> 00:24:28,899
You Save as, over top
of that same file,

449
00:24:28,900 --> 00:24:30,669
this doesn't update.

450
00:24:30,669 --> 00:24:34,406
If you have another file
that's on another drive

451
00:24:34,406 --> 00:24:37,408
or in another folder, you
open that and then save

452
00:24:37,409 --> 00:24:39,611
over the top of the
file on your desktop

453
00:24:39,611 --> 00:24:41,112
this gets updated.

454
00:24:43,281 --> 00:24:44,749
Why would you wanna track that?

455
00:24:44,749 --> 00:24:46,418
I don't know, Apple.

456
00:24:49,254 --> 00:24:53,658
So thank you Nicole for helping
helping me out with that.

457
00:24:53,658 --> 00:24:56,093
Now, just something
to bare in mind here,

458
00:24:56,094 --> 00:24:59,431
is that depending on
the file type this,

459
00:25:00,866 --> 00:25:05,036
the three arrays we've looked
at can behave differently.

460
00:25:07,038 --> 00:25:09,341
Okay so if you have
like a native Apple app

461
00:25:09,341 --> 00:25:11,943
that you're using like
text edit or preview

462
00:25:11,943 --> 00:25:15,146
or something like
that, you close those

463
00:25:15,146 --> 00:25:17,148
and it automatically
saves stuff.

464
00:25:17,148 --> 00:25:21,253
You will see that the
modify time will be updated

465
00:25:22,454 --> 00:25:25,290
every single time
you close it out.

466
00:25:26,758 --> 00:25:30,595
If you're using Microsoft
Office and you save a file

467
00:25:32,264 --> 00:25:34,799
this does not get updated.

468
00:25:34,799 --> 00:25:38,436
If you do Save as and save
over your existing file

469
00:25:38,436 --> 00:25:40,605
this does get updated.

470
00:25:40,605 --> 00:25:43,708
So that might change
in future versions,

471
00:25:43,708 --> 00:25:46,645
we'll just have to wait and see.

472
00:25:46,645 --> 00:25:48,613
Yeah and that that's
pretty much everything

473
00:25:48,613 --> 00:25:50,982
I've got for you today.

474
00:25:50,982 --> 00:25:52,450
Just to recap, just
wanna make sure

475
00:25:52,450 --> 00:25:56,621
that everyone knows you gotta
know your Windows times.

476
00:25:57,789 --> 00:25:58,723
If you don't know
your Windows times,

477
00:25:58,723 --> 00:26:00,325
you're gonna get called out.

478
00:26:00,325 --> 00:26:04,462
The Accessed in on Mac
OS does not necessarily

479
00:26:04,462 --> 00:26:08,466
mean use accessed, so
bare that in mind too.

480
00:26:08,466 --> 00:26:11,870
And then, finally, do
not twist the facts

481
00:26:14,005 --> 00:26:15,507
to fit your story,

482
00:26:16,641 --> 00:26:19,644
just let the evidence
speak for itself.

