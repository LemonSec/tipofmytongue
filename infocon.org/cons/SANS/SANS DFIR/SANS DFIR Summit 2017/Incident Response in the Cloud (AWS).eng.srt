1
00:00:00,600 --> 00:00:02,936
(eerie music)

2
00:00:09,142 --> 00:00:11,411
(audience claps)

3
00:00:11,411 --> 00:00:12,812
- Uh, I'm Jonathon Poling.

4
00:00:12,812 --> 00:00:14,113
I'm a Principal Consultant
with SecureWorks.

5
00:00:14,114 --> 00:00:16,116
When I saw the agenda come out,

6
00:00:16,116 --> 00:00:18,685
I immediately looked for
where Hal was presenting.

7
00:00:18,685 --> 00:00:20,352
And I saw that I was
going right before him,

8
00:00:20,353 --> 00:00:21,855
and I was like, oh, thank God.

9
00:00:21,855 --> 00:00:24,224
Hal is a hard act to follow.

10
00:00:24,224 --> 00:00:26,793
He's done a lot for
people in this community.

11
00:00:26,793 --> 00:00:29,329
He likes to say he is
successful, you know,

12
00:00:29,329 --> 00:00:30,897
by standing on the
shoulders of giants.

13
00:00:30,897 --> 00:00:34,199
And I like to say I'm
partially successful

14
00:00:34,200 --> 00:00:35,902
by standing on the
shoulder of a giant

15
00:00:35,902 --> 00:00:38,104
who stands on the
shoulders of giants.

16
00:00:38,104 --> 00:00:41,641
So thank you, Hal, for a lot
of the work that you've done.

17
00:00:41,641 --> 00:00:42,909
I'm already off script.

18
00:00:42,909 --> 00:00:45,144
I'm like a minute
into this thing.

19
00:00:45,145 --> 00:00:47,680
Be cool, play it cool.

20
00:00:47,680 --> 00:00:51,217
All right, here we go,
let's jump right in.

21
00:00:51,217 --> 00:00:55,388
So, I am a huge proponent
of the Treat Yo Self model.

22
00:00:57,123 --> 00:00:58,157
All right.

23
00:00:58,158 --> 00:01:00,460
So, what we're gonna do today is

24
00:01:00,460 --> 00:01:03,296
give you a short little
overview of AWS Security Model,

25
00:01:03,296 --> 00:01:04,697
which is a little bit
of a boring thing,

26
00:01:04,697 --> 00:01:07,067
but is rather important
to understanding

27
00:01:07,067 --> 00:01:09,401
why we care about
this stuff in general.

28
00:01:09,402 --> 00:01:10,937
We'll go through a few items on

29
00:01:10,937 --> 00:01:14,107
how to set yourself
up for success, right.

30
00:01:14,107 --> 00:01:16,943
By logging, monitoring,
environment prep.

31
00:01:16,943 --> 00:01:19,878
And then, once you're
set up for success,

32
00:01:19,879 --> 00:01:20,947
you can then.

33
00:01:23,616 --> 00:01:26,252
Oh my God, that was weak.

34
00:01:26,252 --> 00:01:27,786
You've had a break.

35
00:01:27,787 --> 00:01:29,355
You should have your second
cup of coffee in you by now.

36
00:01:29,355 --> 00:01:31,624
Targeted Response,
Log Collection,
System Data Analysis.

37
00:01:31,624 --> 00:01:35,128
Right, so you want to be
prepared for this stuff, right?

38
00:01:35,128 --> 00:01:37,397
You don't want to go
in, and, you know,

39
00:01:37,397 --> 00:01:39,099
we have customers
come into us and say,

40
00:01:39,099 --> 00:01:41,801
you know, something happened
and we're not prepared at all.

41
00:01:41,801 --> 00:01:43,770
And it's even
worse in the cloud.

42
00:01:43,770 --> 00:01:47,140
So, let's start with the
Shared Responsibility Model.

43
00:01:47,140 --> 00:01:51,211
So, you can see there's
a clear delineation here.

44
00:01:53,480 --> 00:01:55,715
When we talk about
incident response in AWS,

45
00:01:55,715 --> 00:01:57,851
with clients, they say,
well, why should I care?

46
00:01:57,851 --> 00:02:00,787
Like Amazon secures the cloud.

47
00:02:00,787 --> 00:02:03,790
Isn't it secure by default?

48
00:02:03,790 --> 00:02:06,726
They're responsible for
security of the cloud, right.

49
00:02:06,726 --> 00:02:08,127
But we're not
operating of the cloud,

50
00:02:08,127 --> 00:02:09,428
we're operating in the cloud.

51
00:02:09,429 --> 00:02:12,732
So, we are responsible
for everything

52
00:02:12,732 --> 00:02:14,334
basically above infrastructure.

53
00:02:14,334 --> 00:02:15,768
And this is super important.

54
00:02:15,768 --> 00:02:17,203
All right, so they provide
the infrastructure,

55
00:02:17,203 --> 00:02:19,572
infrastructure as a service.

56
00:02:19,572 --> 00:02:22,242
And this is really a
critical model to follow,

57
00:02:22,242 --> 00:02:23,743
which builds kind
of into the why.

58
00:02:23,743 --> 00:02:24,944
So, why should we care?

59
00:02:24,944 --> 00:02:25,879
Why should we care about doing

60
00:02:25,879 --> 00:02:26,980
incident response in AWS?

61
00:02:26,980 --> 00:02:28,715
Amazon's awesome.

62
00:02:28,715 --> 00:02:31,117
The do everything
amazingly well.

63
00:02:31,117 --> 00:02:32,619
They offer so many things.

64
00:02:32,619 --> 00:02:34,287
They give you so many tools
to do so many awesome things.

65
00:02:34,287 --> 00:02:36,089
But, they're really set up there

66
00:02:36,089 --> 00:02:37,590
to help facilitate
you do response.

67
00:02:37,590 --> 00:02:38,825
They say, here's the tools.

68
00:02:38,825 --> 00:02:40,827
We'll help facilitate
you doing security,

69
00:02:40,827 --> 00:02:42,128
but we don't do
security for you.

70
00:02:42,128 --> 00:02:44,297
So, why would we
care about this?

71
00:02:44,297 --> 00:02:45,565
Why do we care about
doing incident response,

72
00:02:45,565 --> 00:02:47,634
and why would we have
a presentation on this?

73
00:02:47,634 --> 00:02:48,468
Isn't this all taken care of?

74
00:02:48,468 --> 00:02:49,702
No.

75
00:02:49,702 --> 00:02:50,970
Right, so does anyone
here use OneLogin?

76
00:02:50,970 --> 00:02:53,139
Their company's at
an enterprise level.

77
00:02:53,139 --> 00:02:53,973
Right, so.

78
00:02:56,476 --> 00:02:59,712
This is relatively common place,

79
00:02:59,712 --> 00:03:01,513
but from the recent
OneLogin attack, right.

80
00:03:01,514 --> 00:03:05,685
So attackers came in through
the AWS infrastructure and

81
00:03:07,120 --> 00:03:09,289
the attack started at 2 am PST.

82
00:03:09,289 --> 00:03:10,790
Right, so they're
not doing this in

83
00:03:10,790 --> 00:03:12,358
the middle of the day
when everyone's at work.

84
00:03:12,358 --> 00:03:13,826
Right.

85
00:03:13,826 --> 00:03:15,328
Created several instances
to do reconnaissance.

86
00:03:15,328 --> 00:03:18,932
They detected it and they
saw that within minutes

87
00:03:18,932 --> 00:03:20,166
they were able to shut it down

88
00:03:20,166 --> 00:03:23,936
and determine that
the keys were stolen.

89
00:03:23,937 --> 00:03:25,138
So within a couple of minutes,

90
00:03:25,138 --> 00:03:26,072
they were able to
instrument themselves

91
00:03:26,072 --> 00:03:27,507
and see what was going on.

92
00:03:27,507 --> 00:03:29,943
But, how many people
here operate in AWS?

93
00:03:29,943 --> 00:03:30,777
At all.

94
00:03:31,978 --> 00:03:32,879
Four, five.

95
00:03:35,615 --> 00:03:36,849
I don't want to ask this, but,

96
00:03:36,849 --> 00:03:39,084
how many people
operate in Azure?

97
00:03:39,085 --> 00:03:40,620
Okay, good.

98
00:03:40,620 --> 00:03:43,289
Wanted to make sure we
weren't outnumbered.

99
00:03:43,289 --> 00:03:45,857
So, how many of
you can say yeah,

100
00:03:45,858 --> 00:03:47,293
if an attack happened at 2 am I

101
00:03:47,293 --> 00:03:51,497
would be able to detect
it within minutes?

102
00:03:51,497 --> 00:03:54,934
Can anyone here detect
an attack at all?

103
00:03:54,934 --> 00:03:56,636
Hey, one, all right.

104
00:03:58,171 --> 00:03:59,739
So these are things you need
to be thinking about, right.

105
00:03:59,739 --> 00:04:01,441
There's a lot of stuff
that goes on in AWS.

106
00:04:01,441 --> 00:04:03,176
It's not on prem.

107
00:04:03,176 --> 00:04:04,810
It may not have all
the same notifications

108
00:04:04,811 --> 00:04:06,346
you have for on prem stuff.

109
00:04:06,346 --> 00:04:07,413
But this stuff's
happening, right.

110
00:04:07,413 --> 00:04:08,848
This is why we care about it.

111
00:04:08,848 --> 00:04:10,083
This is not some ethereal thing.

112
00:04:10,083 --> 00:04:12,619
So, this is the
core mantra here.

113
00:04:13,686 --> 00:04:16,555
Security is my
responsibility in AWS.

114
00:04:16,555 --> 00:04:17,390
All right.

115
00:04:19,058 --> 00:04:21,961
So, how is AWS
different from on prem?

116
00:04:21,961 --> 00:04:23,162
Like what are the differences,

117
00:04:23,162 --> 00:04:24,697
what are the core things
we need to look at?

118
00:04:24,697 --> 00:04:26,199
There's four major log sources

119
00:04:26,199 --> 00:04:27,834
that I'm gonna talk about today.

120
00:04:27,834 --> 00:04:29,302
And there's others.

121
00:04:29,302 --> 00:04:30,770
There's things for like
application load balancing,

122
00:04:30,770 --> 00:04:33,640
elastic load
balancers, cloud front,

123
00:04:33,640 --> 00:04:35,308
if you're hosting
websites, blah, blah, blah.

124
00:04:35,308 --> 00:04:37,010
But, the four main
essentials are

125
00:04:37,010 --> 00:04:39,611
CloudTrail, CloudWatch,
Config, and S3.

126
00:04:39,612 --> 00:04:41,914
And CloudTrail's essentially
API activity logs.

127
00:04:41,914 --> 00:04:44,017
Almost everything in
AWS is an API call

128
00:04:44,017 --> 00:04:46,853
that is recorded in these logs.

129
00:04:46,853 --> 00:04:50,857
CloudWatch is essentially
system performance monitoring.

130
00:04:50,857 --> 00:04:53,293
You can also do, you know,

131
00:04:53,293 --> 00:04:55,928
from a CPU/IO metrics,
there's also OS

132
00:04:55,928 --> 00:04:58,231
and application logging
if you instrument

133
00:04:58,231 --> 00:05:00,233
it with the right agent.

134
00:05:00,233 --> 00:05:03,636
The Config logs are basically
resource configuration logs.

135
00:05:03,636 --> 00:05:05,338
So, what's been configured,

136
00:05:05,338 --> 00:05:06,606
how it's been
configured over time.

137
00:05:06,606 --> 00:05:08,975
And what that's look.

138
00:05:08,975 --> 00:05:10,276
What that looks like over time,

139
00:05:10,276 --> 00:05:12,779
how that historically
has changed.

140
00:05:12,779 --> 00:05:16,849
And S3 is essentially the
data storage area for AWS.

141
00:05:16,849 --> 00:05:19,652
So, these are called
buckets, the main things that

142
00:05:19,652 --> 00:05:21,587
you put data into in
S3 is called buckets.

143
00:05:21,587 --> 00:05:23,723
And everything else is
essentially an object.

144
00:05:23,723 --> 00:05:26,559
And then there's
server access logs,

145
00:05:26,559 --> 00:05:29,329
which we'll get to a little
later in the presentation.

146
00:05:29,329 --> 00:05:31,030
So we'll start with CloudTrail.

147
00:05:31,030 --> 00:05:35,001
So this logs essentially
every API call,

148
00:05:35,001 --> 00:05:36,568
every action that's
taken in your account.

149
00:05:36,569 --> 00:05:38,071
Like this is your
main log source.

150
00:05:38,071 --> 00:05:40,606
You can essentially think of
this as the Windows event log.

151
00:05:40,606 --> 00:05:44,811
Or syslog, or you
know, dmessage,
dbusmessages for Linux.

152
00:05:46,779 --> 00:05:50,283
This is the critical
core component of AWS

153
00:05:50,283 --> 00:05:53,086
where you're gonna get the
most bang for you buck,

154
00:05:53,086 --> 00:05:56,789
and almost essentially
everything is gonna be recorded.

155
00:05:56,789 --> 00:05:59,025
So, what might this help you do?

156
00:05:59,025 --> 00:06:00,659
You can figure out
who did what when,

157
00:06:00,660 --> 00:06:02,462
you know, where they took place.

158
00:06:02,462 --> 00:06:05,331
It has source IP, date, time,
region, things like that.

159
00:06:05,331 --> 00:06:09,068
Who made these calls, user
accounts, things like that.

160
00:06:09,068 --> 00:06:10,536
CloudWatch, performance metrics.

161
00:06:10,536 --> 00:06:13,005
So you can use this
to say, oh, you know,

162
00:06:13,005 --> 00:06:15,241
have I seen a CPU
spike, you know,

163
00:06:15,241 --> 00:06:16,676
was there a spike at 2 am, why?

164
00:06:16,676 --> 00:06:17,909
We're not operating
during that time.

165
00:06:17,910 --> 00:06:19,345
That sort of thing.

166
00:06:19,345 --> 00:06:22,982
Various high level metrics
from a performance perspective.

167
00:06:24,317 --> 00:06:26,085
CloudWatch also
has an agent that

168
00:06:26,085 --> 00:06:27,553
you can install on
each host or instance,

169
00:06:27,553 --> 00:06:29,555
as they're referred to in AWS,

170
00:06:29,555 --> 00:06:31,824
which will also allow
you to do host level,

171
00:06:31,824 --> 00:06:34,961
extract and analyze
host level logs.

172
00:06:34,961 --> 00:06:37,130
So, CloudWatch
itself isn't going to

173
00:06:37,130 --> 00:06:38,765
be seeing your
Windows event logs,

174
00:06:38,765 --> 00:06:40,166
you syslogs or
anything, but if you

175
00:06:40,166 --> 00:06:41,667
instrument them with
an additional agent,

176
00:06:41,667 --> 00:06:45,171
they can be forwarded to
CloudWatch for monitoring.

177
00:06:45,171 --> 00:06:46,671
Config, again, this
is the configuration

178
00:06:46,672 --> 00:06:50,176
history for, you
know, instances, VPC

179
00:06:50,176 --> 00:06:54,714
is essentially a VLAN, if you
want to think about that way.

180
00:06:54,714 --> 00:06:56,382
EBS volumes are basically
the hard drives,

181
00:06:56,382 --> 00:07:00,787
and Security Groups
is essentially the
firewalls of AWS.

182
00:07:00,787 --> 00:07:03,756
So this captures periodic
snapshots of config

183
00:07:03,756 --> 00:07:05,457
status, of everything
is configured this way

184
00:07:05,458 --> 00:07:06,692
at this point in time, and then,

185
00:07:06,692 --> 00:07:08,094
at some period
it'll take another.

186
00:07:08,094 --> 00:07:09,594
You can also do it manually
to do them quicker.

187
00:07:09,595 --> 00:07:11,531
And so, you can
capture snapshots

188
00:07:11,531 --> 00:07:14,000
of resources in time,
you can diff these.

189
00:07:14,000 --> 00:07:15,768
And then you can see
kind of over time

190
00:07:15,768 --> 00:07:17,570
how things have
been changed, right.

191
00:07:17,570 --> 00:07:18,971
So this would be
super useful, right?

192
00:07:18,971 --> 00:07:20,273
If something's changed
in your infrastructure,

193
00:07:20,273 --> 00:07:22,975
Config can be a great
resource to look at.

194
00:07:22,975 --> 00:07:26,078
S3 is again, the main
data storage area

195
00:07:26,078 --> 00:07:29,248
in AWS for most of
your data and info.

196
00:07:31,083 --> 00:07:32,852
So, there's
bucket-level logging,

197
00:07:32,852 --> 00:07:34,253
which is essentially
have you created

198
00:07:34,253 --> 00:07:36,322
any of these major
buckets to put data into,

199
00:07:36,322 --> 00:07:37,490
and they can live in
different regions.

200
00:07:37,490 --> 00:07:39,091
And there's additional logging.

201
00:07:39,091 --> 00:07:40,726
So, there's object
level logging.

202
00:07:40,726 --> 00:07:43,796
And again, everything
is an object in S3.

203
00:07:43,796 --> 00:07:44,630
So.

204
00:07:47,433 --> 00:07:49,235
If you ever see S3
and you get a link

205
00:07:49,235 --> 00:07:51,137
to something in S3
or it's hosted in S3,

206
00:07:51,137 --> 00:07:52,738
you'll see something that
looks like a file path.

207
00:07:52,738 --> 00:07:54,740
Like, you know,
bucket/this/that,

208
00:07:54,740 --> 00:07:57,143
and you're like, okay so it's
kind of like a file system.

209
00:07:57,143 --> 00:07:58,510
I'm like, no, it's objects.

210
00:07:58,511 --> 00:07:59,679
And it's like,

211
00:08:00,613 --> 00:08:02,181
but they're files and folders.

212
00:08:02,181 --> 00:08:03,883
Yeah, they look like
folders, but you know,

213
00:08:03,883 --> 00:08:05,383
they're essentially objects.

214
00:08:05,384 --> 00:08:06,819
And it's like, okay, well

215
00:08:06,819 --> 00:08:10,490
can I do a make-dir
on the command line?

216
00:08:10,490 --> 00:08:11,991
And you know, make
folders in there?

217
00:08:11,991 --> 00:08:13,092
And they're like, no,
they're not directories.

218
00:08:13,092 --> 00:08:14,426
They're not folders.

219
00:08:14,427 --> 00:08:15,895
They're objects.

220
00:08:15,895 --> 00:08:17,162
It's like, okay, I get
it they're objects.

221
00:08:17,163 --> 00:08:18,631
And then you log
into the S3 console,

222
00:08:18,631 --> 00:08:20,799
and all the, you know,
the high level objects

223
00:08:20,800 --> 00:08:22,535
are displayed as folders,
and I'm like okay.

224
00:08:22,535 --> 00:08:25,004
I don't follow you there.

225
00:08:25,004 --> 00:08:26,739
But, as long as you
can get past that,

226
00:08:26,739 --> 00:08:28,407
you can kind of understand
these a little bit better.

227
00:08:28,407 --> 00:08:29,609
And there's server access logs.

228
00:08:29,609 --> 00:08:31,777
So, there's things that
are hosted in there,

229
00:08:31,777 --> 00:08:32,712
and then there's
also the ability

230
00:08:32,712 --> 00:08:34,212
to have the server access logs.

231
00:08:34,212 --> 00:08:36,314
So, if the JSON logs, which
is the default format,

232
00:08:36,315 --> 00:08:38,985
isn't enough for you
for the log level,

233
00:08:38,985 --> 00:08:41,220
or the bucket level logging
or the object level logging,

234
00:08:41,220 --> 00:08:42,488
there's also server access logs,

235
00:08:42,488 --> 00:08:44,023
which are probably what
more people are used to

236
00:08:44,023 --> 00:08:48,327
for, you know, the HTTP,
Apache-like server access logs.

237
00:08:48,327 --> 00:08:51,197
Which can be super useful.

238
00:08:51,197 --> 00:08:52,698
So those are the
main log sources

239
00:08:52,698 --> 00:08:53,833
that we're gonna be
talking about today.

240
00:08:53,833 --> 00:08:55,300
Again, there's
others, but these are

241
00:08:55,301 --> 00:08:58,404
kinda the four core for
this high level overview

242
00:08:58,404 --> 00:09:01,073
of starting incident
response in AWS.

243
00:09:01,073 --> 00:09:03,742
So, what should we
monitor in general?

244
00:09:03,743 --> 00:09:06,612
I started getting
into specifics,

245
00:09:06,612 --> 00:09:09,448
and then I realized
there's basically

246
00:09:09,448 --> 00:09:11,684
an entire presentation
I can do on specifics

247
00:09:11,684 --> 00:09:14,587
on what to monitor,
and so, that's

248
00:09:14,587 --> 00:09:16,322
probably gonna be a follow on
presentation at some point.

249
00:09:16,322 --> 00:09:18,524
But, for now, this is just
kind of a general overview

250
00:09:18,524 --> 00:09:20,359
of okay, here's
kind of what things

251
00:09:20,359 --> 00:09:22,194
break down to and what you'd
want to be looking for,

252
00:09:22,194 --> 00:09:23,896
and what to monitor.

253
00:09:23,896 --> 00:09:25,598
So, environment
enumeration/recon.

254
00:09:25,598 --> 00:09:27,132
Like, they've gotta under.

255
00:09:27,133 --> 00:09:28,534
Attackers want to find out
what's happening in there,

256
00:09:28,534 --> 00:09:30,202
and how do they find out
that information, right?

257
00:09:30,202 --> 00:09:33,239
In CloudTrail these APIs
are gonna look like,

258
00:09:33,239 --> 00:09:36,742
you know get things, list
things, blah, blah, blah.

259
00:09:36,742 --> 00:09:38,578
List permissions, get
environment resources,

260
00:09:38,578 --> 00:09:39,745
things like that.

261
00:09:39,745 --> 00:09:41,614
Resource event data collection.

262
00:09:41,614 --> 00:09:43,282
These are gonna
be the same gets.

263
00:09:43,282 --> 00:09:45,885
Their gonna be describe, list,
lookup, that sort of stuff.

264
00:09:45,885 --> 00:09:48,387
You want to maybe monitor
for resource creation,

265
00:09:48,387 --> 00:09:49,854
mod, and deletion, right?

266
00:09:49,855 --> 00:09:51,490
You know, those things
are pretty critical.

267
00:09:51,490 --> 00:09:53,192
And also log tampering
and modification.

268
00:09:53,192 --> 00:09:56,095
Which we've seen
attackers do as well,

269
00:09:56,095 --> 00:09:57,597
which can be pretty nasty.

270
00:09:57,597 --> 00:09:58,831
So, this is kind of a
general overview of,

271
00:09:58,831 --> 00:10:00,333
if you're looking
at CloudTrail logs,

272
00:10:00,333 --> 00:10:03,401
and you want to know which API
should I be monitoring for,

273
00:10:03,402 --> 00:10:04,870
this is kind of how
they break down into

274
00:10:04,870 --> 00:10:08,207
what these prefixes
are associated with.

275
00:10:10,610 --> 00:10:11,410
So.

276
00:10:12,612 --> 00:10:15,146
Again, I started going
down a rabbit hole of,

277
00:10:15,147 --> 00:10:18,451
I had like seven slides
just for these specifics,

278
00:10:18,451 --> 00:10:22,288
and it was just
gonna take too long.

279
00:10:22,288 --> 00:10:24,557
So, essentially
it boils down into

280
00:10:24,557 --> 00:10:26,559
the Quadfecta of
Monitoring, right.

281
00:10:26,559 --> 00:10:27,793
So you have Config, which is

282
00:10:27,793 --> 00:10:29,261
a configuration
resources history.

283
00:10:29,261 --> 00:10:32,397
You have CloudTrail, which
is your main resource

284
00:10:32,398 --> 00:10:34,266
for all the API calls
that happen there.

285
00:10:34,266 --> 00:10:36,368
You have CloudWatch, which
is system performance,

286
00:10:36,369 --> 00:10:37,870
and also OS and
host level logging.

287
00:10:37,870 --> 00:10:39,472
And then you have Lambda.

288
00:10:39,472 --> 00:10:41,941
So Lambda is essentially
like server lists,

289
00:10:41,941 --> 00:10:45,745
run this function, you know,
in various program languages.

290
00:10:45,745 --> 00:10:47,380
You can do it in Python
and Node.js or whatever.

291
00:10:47,380 --> 00:10:50,249
Run these things, you
know, as something happens.

292
00:10:50,249 --> 00:10:52,151
Be like the catalyst
to do something

293
00:10:52,151 --> 00:10:54,120
once you see something change.

294
00:10:54,120 --> 00:10:56,889
So, with this quadfecta,
this is basically

295
00:10:56,889 --> 00:10:58,424
what you're gonna be focusing on

296
00:10:58,424 --> 00:11:00,693
for doing real time
monitoring and analysis

297
00:11:00,693 --> 00:11:01,927
and alerting on stuff.

298
00:11:01,927 --> 00:11:04,497
So, you know, there's
tons of services

299
00:11:04,497 --> 00:11:06,198
and API calls,
but my best advice

300
00:11:06,198 --> 00:11:08,100
just to start at least at
this high level review,

301
00:11:08,100 --> 00:11:11,270
is you know, and this
isn't unique to AWS,

302
00:11:11,270 --> 00:11:13,271
but know how your systems work.

303
00:11:13,272 --> 00:11:14,507
Know what's normal.

304
00:11:14,507 --> 00:11:16,108
And know what's not normal.

305
00:11:16,108 --> 00:11:17,575
Read the AWS docs.

306
00:11:17,576 --> 00:11:20,046
I spent probably six
months just reading

307
00:11:20,046 --> 00:11:21,347
through the AWS docs.

308
00:11:21,347 --> 00:11:23,482
It's some of the
best documentation

309
00:11:23,482 --> 00:11:24,817
I've ever seen in my life.

310
00:11:24,817 --> 00:11:27,286
Absolute kudos to
the Amazon team.

311
00:11:27,286 --> 00:11:29,055
But it is an absolute bear.

312
00:11:29,055 --> 00:11:31,089
There is a ton of
material, and as soon as

313
00:11:31,090 --> 00:11:33,926
you understand it, they
add some new feature.

314
00:11:33,926 --> 00:11:36,095
Which is great, but you
gotta be on your toes

315
00:11:36,095 --> 00:11:37,329
to keep up with this stuff.

316
00:11:37,329 --> 00:11:38,930
So, think play, test.

317
00:11:38,931 --> 00:11:40,599
There's a lot of stuff
that goes on in AWS

318
00:11:40,599 --> 00:11:42,301
as you start getting
into the environment

319
00:11:42,301 --> 00:11:43,869
and saying, oh, I just did this,

320
00:11:43,869 --> 00:11:45,538
I'm gonna pull the
CloudTrail logs

321
00:11:45,538 --> 00:11:46,772
and look and see what happens.

322
00:11:46,772 --> 00:11:48,007
There's gonna be
tons of things that

323
00:11:48,007 --> 00:11:49,441
you didn't realize were
happening in there.

324
00:11:49,442 --> 00:11:51,143
And there's gonna be information

325
00:11:51,143 --> 00:11:53,612
you expect to find
that might not be.

326
00:11:53,612 --> 00:11:56,515
There's all sets of nuances of,

327
00:11:56,515 --> 00:11:58,350
you know, if you assume a role,

328
00:11:58,350 --> 00:12:01,053
then that data used
to not be associated

329
00:12:01,053 --> 00:12:03,089
with the target
account, that used

330
00:12:03,089 --> 00:12:04,623
to only be associated
with the source account,

331
00:12:04,623 --> 00:12:05,858
and blah, blah, blah, anyways.

332
00:12:05,858 --> 00:12:07,358
There's a lot of
stuff to go into.

333
00:12:07,359 --> 00:12:09,895
But, play, test, you know,
think like the attacker.

334
00:12:09,895 --> 00:12:11,363
If I was.

335
00:12:11,363 --> 00:12:13,332
Knowing my environment,
if I came in here,

336
00:12:13,332 --> 00:12:17,369
and I did x, y, and z, how
would I detect that, right?

337
00:12:17,369 --> 00:12:20,039
So, here we are in the setup
for success phase still.

338
00:12:20,039 --> 00:12:21,607
We're trying to
say how do we set

339
00:12:21,607 --> 00:12:22,942
ourself up for success,
how do we prepare

340
00:12:22,942 --> 00:12:25,344
to respond should
something happen?

341
00:12:25,344 --> 00:12:29,281
And one of the things
that I like to have

342
00:12:29,281 --> 00:12:32,251
our customers setup is
an isolation environment.

343
00:12:32,251 --> 00:12:33,552
And this is one of
the awesome things

344
00:12:33,552 --> 00:12:36,088
about operating in
the cloud, and AWS

345
00:12:36,088 --> 00:12:37,356
makes it super easy.

346
00:12:37,356 --> 00:12:39,891
What I like to do
is have customers

347
00:12:39,892 --> 00:12:41,827
create an isolation
VPC, and it's basically

348
00:12:41,827 --> 00:12:43,863
a VLAN that's totally segmented
off from everything else.

349
00:12:43,863 --> 00:12:45,965
And you know, give it a
route to the internet,

350
00:12:45,965 --> 00:12:47,199
and that's it, right.

351
00:12:47,199 --> 00:12:49,468
So then, when something happens,

352
00:12:49,468 --> 00:12:51,569
you can take a
system and place it

353
00:12:51,570 --> 00:12:53,773
in this environment and
have containment, right.

354
00:12:53,773 --> 00:12:55,741
Not so easily done on prem.

355
00:12:55,741 --> 00:12:58,778
But, a lot easier done in AWS.

356
00:12:58,778 --> 00:13:00,679
There's also this thing
called Flow Logs in AWS

357
00:13:00,679 --> 00:13:05,251
which is basically netflow
that is enabled by, like,

358
00:13:05,251 --> 00:13:07,086
point and click
and it's enabled,

359
00:13:07,086 --> 00:13:10,256
which is an absolute Godsend
in a lot of situations.

360
00:13:10,256 --> 00:13:12,458
So you create an
isolation VPC environment,

361
00:13:12,458 --> 00:13:14,360
set up Flow Logs,
set and forget it.

362
00:13:14,360 --> 00:13:15,694
Just leave it there.

363
00:13:15,694 --> 00:13:17,796
It's not gonna take
much resources.

364
00:13:17,797 --> 00:13:20,466
Not gonna fill up any sort of

365
00:13:20,466 --> 00:13:22,568
space in your S3 bucket.

366
00:13:22,568 --> 00:13:24,804
But it's set up there so
that when something happens

367
00:13:24,804 --> 00:13:26,405
it's a space where
you can put stuff,

368
00:13:26,405 --> 00:13:29,574
and you know, have
containment done.

369
00:13:29,575 --> 00:13:30,910
And you're not cutting
off network connections,

370
00:13:30,910 --> 00:13:32,278
you're not severing
anything, right?

371
00:13:32,278 --> 00:13:36,215
Pretty awesome resource
and capability for AWS.

372
00:13:37,650 --> 00:13:39,418
What I also recommend is
create Responder accounts,

373
00:13:39,418 --> 00:13:41,687
and these are separate from
your main operating accounts.

374
00:13:41,687 --> 00:13:44,523
These are essentially
the IR roles that

375
00:13:44,523 --> 00:13:47,092
you're gonna use to
respond to events.

376
00:13:47,092 --> 00:13:51,263
That don't necessarily
have admin access to stuff.

377
00:13:54,166 --> 00:13:55,568
The base setup is probably just

378
00:13:55,568 --> 00:13:57,203
good to have a read-only admin,

379
00:13:57,203 --> 00:13:58,504
so you can at least read data,

380
00:13:58,504 --> 00:13:59,705
you can get the logs,
you can collect stuff,

381
00:13:59,705 --> 00:14:02,208
but not necessarily
make changes.

382
00:14:02,208 --> 00:14:03,442
Unless you need to.

383
00:14:03,442 --> 00:14:04,610
Again it depends on
your environment.

384
00:14:04,610 --> 00:14:05,845
But a good base to
start is just read-only.

385
00:14:05,845 --> 00:14:07,479
And then create a
dedicated S3 bucket

386
00:14:07,479 --> 00:14:08,814
for all this collected data.

387
00:14:08,814 --> 00:14:11,150
So, have like a,
you know, a lab,

388
00:14:11,150 --> 00:14:13,718
or acquisition, or
whatever bucket set up,

389
00:14:13,719 --> 00:14:15,154
with the appropriate
permissions.

390
00:14:15,154 --> 00:14:17,056
Say there's three
responders on your team.

391
00:14:17,056 --> 00:14:18,657
You have a responder account.

392
00:14:18,657 --> 00:14:21,794
These accounts all have
this responder role

393
00:14:21,794 --> 00:14:23,429
for read-only access
and you have a bucket

394
00:14:23,429 --> 00:14:25,097
that's for, you
know, investigations.

395
00:14:25,097 --> 00:14:26,665
Read-only for these people.

396
00:14:26,665 --> 00:14:27,665
No one else can see it.

397
00:14:27,666 --> 00:14:29,168
Pretty good setup.

398
00:14:30,336 --> 00:14:31,570
And if you recall,
the Security Groups

399
00:14:31,570 --> 00:14:32,771
is basically the
firewalls setting.

400
00:14:32,771 --> 00:14:34,772
So, for these instances,

401
00:14:38,844 --> 00:14:40,346
and for these
accounts, basically

402
00:14:40,346 --> 00:14:43,415
allow access only
in from where you

403
00:14:43,415 --> 00:14:44,683
know people are coming from.

404
00:14:44,683 --> 00:14:46,418
So, for us, we work remote.

405
00:14:46,418 --> 00:14:49,388
So I know the IP or
IPs that I'm usually

406
00:14:49,388 --> 00:14:50,623
coming from when I'm
doing investigations.

407
00:14:50,623 --> 00:14:52,258
So for my instances I set it up

408
00:14:52,258 --> 00:14:54,426
that I allow SSH in, but
only from my known IPs,

409
00:14:54,426 --> 00:14:56,061
right, you want to
lock stuff down.

410
00:14:56,061 --> 00:14:57,930
And super easy to do
this sort of stuff.

411
00:14:57,930 --> 00:15:01,766
So, highly recommend locking
it down to source IPs.

412
00:15:01,767 --> 00:15:04,136
You don't want people
brute force attacking

413
00:15:04,136 --> 00:15:06,305
your response instances
and somehow getting in,

414
00:15:06,305 --> 00:15:09,007
and then having admin
read access to everything.

415
00:15:09,008 --> 00:15:11,176
That's a bad setup, right?

416
00:15:12,611 --> 00:15:15,848
Then I recommend also having
a couple responder instances.

417
00:15:15,848 --> 00:15:18,284
And these are the
ones from where

418
00:15:18,284 --> 00:15:20,052
you're gonna do your
forensic analysis,

419
00:15:20,052 --> 00:15:21,253
or your investigations, right.

420
00:15:21,253 --> 00:15:22,521
So, have them up and running.

421
00:15:22,521 --> 00:15:23,988
Have like three or
four ready to go.

422
00:15:23,989 --> 00:15:25,157
Maybe keep them shut down,
or keep them running,

423
00:15:25,157 --> 00:15:26,358
whatever you want to do.

424
00:15:26,358 --> 00:15:27,593
You know, they
cost when they run.

425
00:15:27,593 --> 00:15:28,861
But have them set
up and ready to go,

426
00:15:28,861 --> 00:15:30,496
so that you can SSH
directly into them,

427
00:15:30,496 --> 00:15:31,964
and start pulling data as
soon as something happens.

428
00:15:31,964 --> 00:15:34,233
So, create a couple volumes,
one for your root data,

429
00:15:34,233 --> 00:15:37,102
one for data, data drive,
depending on how large,

430
00:15:37,102 --> 00:15:38,704
or how much data
you're gonna deal with.

431
00:15:38,704 --> 00:15:40,005
If you like doing stuff locally,

432
00:15:40,005 --> 00:15:41,206
and you want to
pull all the data

433
00:15:41,206 --> 00:15:42,474
down locally to the data volume,

434
00:15:42,474 --> 00:15:43,809
you know, create appropriately.

435
00:15:43,809 --> 00:15:46,312
Then add all your
favorite tools.

436
00:15:46,312 --> 00:15:50,683
Personally, I do most, if
not all my investigations

437
00:15:50,683 --> 00:15:52,384
with free, open
source security tools.

438
00:15:52,384 --> 00:15:55,521
So, it's rather
easy to instrument

439
00:15:55,521 --> 00:15:58,390
an instance for me
in AWS, with Fedora

440
00:15:58,390 --> 00:16:00,259
and the CERT Forensic
Repo, and I'm good to go.

441
00:16:00,259 --> 00:16:01,627
The problem starts coming when

442
00:16:01,627 --> 00:16:05,130
you have, say you want
to operate from Windows,

443
00:16:05,130 --> 00:16:07,333
and you use EnCase.

444
00:16:07,333 --> 00:16:10,035
Like, it's not trivial
to go and set up,

445
00:16:10,035 --> 00:16:12,972
you know, EnCase
instrumented in instances

446
00:16:12,972 --> 00:16:15,074
in Amazon with the
proper licensing, right.

447
00:16:15,074 --> 00:16:17,642
It's not easy to do that.

448
00:16:17,643 --> 00:16:18,944
So if you are going to do that,

449
00:16:18,944 --> 00:16:20,279
please spend the
time ahead of time.

450
00:16:20,279 --> 00:16:21,513
The last thing you
want to be doing

451
00:16:21,513 --> 00:16:22,681
is trying to spin
up an instance.

452
00:16:22,681 --> 00:16:23,615
You have a compromise
and you're like,

453
00:16:23,615 --> 00:16:25,117
uh, I can't figure out how to

454
00:16:25,117 --> 00:16:28,786
attach this physical dongle
to an AWS instance, right.

455
00:16:32,791 --> 00:16:35,327
So, having set yourself
up for success,

456
00:16:35,327 --> 00:16:38,731
you can enter the
treat yourself phase.

457
00:16:38,731 --> 00:16:41,200
Targeted Response, right.

458
00:16:41,200 --> 00:16:42,601
So we have all this set up,

459
00:16:42,601 --> 00:16:44,103
we have the capabilities,
we're ready to go.

460
00:16:44,103 --> 00:16:47,705
Now we're ready to collect
memory and disk images.

461
00:16:47,706 --> 00:16:49,942
Amazon does a lot of
things really well,

462
00:16:49,942 --> 00:16:51,844
and they provide
capabilities to do

463
00:16:51,844 --> 00:16:54,680
what used to be complicated
things super easily.

464
00:16:54,680 --> 00:16:56,949
Memory collection
is not one of them.

465
00:16:56,949 --> 00:16:58,282
It surprises me.

466
00:17:00,552 --> 00:17:03,355
There are tools to
help you automatedly

467
00:17:03,355 --> 00:17:06,458
SSH into instances,
essentially and load

468
00:17:06,458 --> 00:17:09,261
kernel objects for the
right kernel and collect it.

469
00:17:09,261 --> 00:17:11,163
But, it's not, it's not pretty.

470
00:17:11,163 --> 00:17:13,198
So, unfortunately,
memory collection

471
00:17:13,198 --> 00:17:15,000
is gonna be not too dissimilar

472
00:17:15,000 --> 00:17:17,569
from how you do it on prem.

473
00:17:17,569 --> 00:17:18,803
It can be automated with those

474
00:17:18,804 --> 00:17:20,906
managed instances/run
command, and that's.

475
00:17:20,906 --> 00:17:23,308
If these instances are
already instrumented

476
00:17:23,308 --> 00:17:25,511
with an agent that allows you
to do these sort of things.

477
00:17:25,511 --> 00:17:27,678
So that's something to
think about ahead of time

478
00:17:27,679 --> 00:17:29,048
as you're deploying
your infrastructure.

479
00:17:29,048 --> 00:17:30,616
Do you want to
have agents running

480
00:17:30,616 --> 00:17:32,017
on these systems so that you can

481
00:17:32,017 --> 00:17:33,919
reach thousands of them at once?

482
00:17:33,919 --> 00:17:36,088
Or are you gonna do this
manual, SSH into them.

483
00:17:36,088 --> 00:17:38,624
Or if you're using Windows,
you're gonna be RDPing

484
00:17:38,624 --> 00:17:40,526
into them, what have you.

485
00:17:40,526 --> 00:17:42,694
A really cool thing though is

486
00:17:42,694 --> 00:17:44,329
you can image directly
to an S3 bucket.

487
00:17:44,329 --> 00:17:46,732
So, you don't have to
image local to the machine.

488
00:17:46,732 --> 00:17:48,500
You don't have to
necessarily connect anything,

489
00:17:48,500 --> 00:17:50,302
unless you are in
Windows, then you have

490
00:17:50,302 --> 00:17:54,305
to use some sort of third party
tool to map your S3 drive.

491
00:17:54,306 --> 00:17:57,643
In Linux you can just
use the AWS CLI tools

492
00:17:57,643 --> 00:17:59,278
to image directly to it.

493
00:17:59,278 --> 00:18:00,412
Disk image is super easy.

494
00:18:00,412 --> 00:18:02,481
No longer do you have to log in,

495
00:18:02,481 --> 00:18:04,249
or do a DD, or
anything like that.

496
00:18:04,249 --> 00:18:06,485
You literally just
right-click on the volume

497
00:18:06,485 --> 00:18:08,754
that you care about
and do create snapshot,

498
00:18:08,754 --> 00:18:11,657
and it creates a bit for
bit image of the drive.

499
00:18:11,657 --> 00:18:13,891
It is absolutely fantastic.

500
00:18:16,528 --> 00:18:17,763
Right, so once we've
collected images,

501
00:18:17,763 --> 00:18:19,164
now we can isolate
and move these

502
00:18:19,164 --> 00:18:20,365
to the VPC, right.

503
00:18:20,365 --> 00:18:23,168
So, just to kind
illustrate this.

504
00:18:23,168 --> 00:18:27,539
We're not talking, okay, you
have an incident on prem.

505
00:18:27,539 --> 00:18:29,074
Okay, where is the
system located?

506
00:18:29,074 --> 00:18:30,342
Is the user onsite?

507
00:18:30,342 --> 00:18:31,543
Can we reach them?

508
00:18:31,543 --> 00:18:32,477
How are we gonna
image this machine?

509
00:18:32,478 --> 00:18:34,246
Oh, it's a laptop, do we have to

510
00:18:34,246 --> 00:18:35,514
have them come back
into the office?

511
00:18:35,514 --> 00:18:38,617
Or, oh, it is a desktop,
and it's down here.

512
00:18:38,617 --> 00:18:41,220
Okay, bring your
Write Blocker down,

513
00:18:41,220 --> 00:18:42,988
we're gonna go image
it live, and make sure

514
00:18:42,988 --> 00:18:44,523
we have the tools
and instrument it.

515
00:18:44,523 --> 00:18:47,793
I mean, you're talking orders
of magnitude difference.

516
00:18:47,793 --> 00:18:49,227
You're talking like hours
and days to response

517
00:18:49,228 --> 00:18:50,896
for this on prem sort of stuff.

518
00:18:50,896 --> 00:18:52,464
And you're talking minutes with

519
00:18:52,464 --> 00:18:55,634
disk and memory image
collection from AWS.

520
00:18:55,634 --> 00:18:57,402
And isolation, right.

521
00:18:58,871 --> 00:19:01,106
I mean, how hard is it to
achieve containment on prem?

522
00:19:01,106 --> 00:19:03,342
It's an absolute nightmare.

523
00:19:05,344 --> 00:19:06,812
And here, with the proper setup,

524
00:19:06,812 --> 00:19:11,049
you collect the images,
you move it into isolation,

525
00:19:11,049 --> 00:19:12,317
and by the way, it's still
talking to the internet,

526
00:19:12,317 --> 00:19:13,952
so you haven't severed
internet connections,

527
00:19:13,952 --> 00:19:15,420
you're still monitoring
what it can do.

528
00:19:15,420 --> 00:19:16,822
You can collect IOCs,
you have Netflow logging.

529
00:19:16,822 --> 00:19:19,257
You can then take those IOCs,

530
00:19:19,258 --> 00:19:21,693
have Netflow logs for
the rest of your network,

531
00:19:21,693 --> 00:19:23,095
see if it's happening on
the rest of your network.

532
00:19:23,095 --> 00:19:25,831
Really awesome
capabilities here.

533
00:19:29,201 --> 00:19:31,837
So aside from the actual
system data itself,

534
00:19:31,837 --> 00:19:36,008
how do we collect these
logs that we talked about?

535
00:19:37,142 --> 00:19:39,745
So, most of these
logs are stored in S3.

536
00:19:39,745 --> 00:19:43,148
So CloudTrail, the Config
logs, the CloudWatch logs.

537
00:19:43,148 --> 00:19:46,418
So, if it's all
instrumented correctly,

538
00:19:46,418 --> 00:19:48,053
you log into a single S3 bucket

539
00:19:48,053 --> 00:19:49,922
and all you're doing
is just logging in

540
00:19:49,922 --> 00:19:51,156
and copying all of
the relevant files

541
00:19:51,156 --> 00:19:53,457
for the days of interest.

542
00:19:53,458 --> 00:19:55,093
So CloudTrail is
broken down by day.

543
00:19:55,093 --> 00:19:58,063
You're like, oh, it was
March 18th or something,

544
00:19:58,063 --> 00:20:02,701
log in, go to 2017,
3/16, blah, blah, blah,

545
00:20:02,701 --> 00:20:05,103
collect 3/17,
3/18, and then it's

546
00:20:05,103 --> 00:20:08,707
just a matter of
doing the analysis.

547
00:20:08,707 --> 00:20:09,541
So,

548
00:20:10,876 --> 00:20:12,945
when you create a snapshot
from a disk image,

549
00:20:12,945 --> 00:20:14,812
remember it creates
a bit for bit image,

550
00:20:14,813 --> 00:20:16,748
but then how do
you analyze that?

551
00:20:16,748 --> 00:20:18,350
So, you have that sitting
somewhere, but now what?

552
00:20:18,350 --> 00:20:21,553
Well, remember we created
those responder instances,

553
00:20:21,553 --> 00:20:23,055
we had those up and running.

554
00:20:23,055 --> 00:20:25,991
Well, all we need
to do is again,

555
00:20:25,991 --> 00:20:27,726
right-click on the
snapshot you created,

556
00:20:27,726 --> 00:20:29,061
create a volume.

557
00:20:30,796 --> 00:20:34,299
Right-click, attach
to an instance.

558
00:20:34,299 --> 00:20:36,168
Then image out, if you
want an actual image

559
00:20:36,168 --> 00:20:38,603
to store somewhere or
download to your network

560
00:20:38,604 --> 00:20:41,406
for storage or chain of custody,

561
00:20:41,406 --> 00:20:43,709
or whatever you want to do.

562
00:20:43,709 --> 00:20:45,210
But it's that simple.

563
00:20:45,210 --> 00:20:46,178
I mean, it's directly
attached to your machine.

564
00:20:46,178 --> 00:20:47,646
You've made a couple of clicks.

565
00:20:47,646 --> 00:20:48,947
And it's immediately attached
and ready for analysis.

566
00:20:48,947 --> 00:20:50,482
Like, not walking a
drive down anywhere.

567
00:20:50,482 --> 00:20:52,718
Not transferring an image
over the network, right.

568
00:20:52,718 --> 00:20:55,053
It is immediately available.

569
00:20:56,488 --> 00:20:59,558
One thing that is not
initially evident,

570
00:20:59,558 --> 00:21:02,194
that can be a royal pain is that

571
00:21:02,194 --> 00:21:04,363
when you first attach an image

572
00:21:04,363 --> 00:21:07,299
or a volume created
from a snapshot

573
00:21:09,368 --> 00:21:13,938
it may perform at less than
50% of expected performance.

574
00:21:13,939 --> 00:21:15,207
And we find ourselves
in a conundrum here

575
00:21:15,207 --> 00:21:17,342
when we basically try
to take a DD image,

576
00:21:17,342 --> 00:21:18,977
say I attach it and I
want to create an image

577
00:21:18,977 --> 00:21:20,245
elsewhere for other
people to work on,

578
00:21:20,245 --> 00:21:21,513
or something like that.

579
00:21:21,513 --> 00:21:24,015
Because Amazon's advice is.

580
00:21:24,016 --> 00:21:25,384
Well, their statement is
it needs to be initialized.

581
00:21:25,384 --> 00:21:28,086
So, every block on the
volume has to be touched

582
00:21:28,086 --> 00:21:30,522
before it can reach
its full performance.

583
00:21:30,522 --> 00:21:32,291
For whatever reason, whatever
they do on the back end, okay.

584
00:21:32,291 --> 00:21:35,293
And their
recommendation is well,

585
00:21:35,294 --> 00:21:38,063
we recommend FIO or DD on Linux

586
00:21:38,063 --> 00:21:39,164
to touch all of those
blocks and do that.

587
00:21:39,164 --> 00:21:41,400
But, we're doing DD.

588
00:21:41,400 --> 00:21:43,168
So it's kind of a
catch-22, right.

589
00:21:43,168 --> 00:21:47,673
So, be aware that you may
have an absolutely fast SSD,

590
00:21:47,673 --> 00:21:50,242
highly optimized IOPs
volume that you attached,

591
00:21:50,242 --> 00:21:52,444
and it's just giving
you crap performance

592
00:21:52,444 --> 00:21:54,212
for imaging or
accessing it, right.

593
00:21:54,212 --> 00:21:58,083
And it will, until you've
touched all the blocks.

594
00:21:58,083 --> 00:22:00,185
Just a pro tip that
wasn't evident for a long,

595
00:22:00,185 --> 00:22:01,820
long time, but now they
actually have it in their docs.

596
00:22:01,820 --> 00:22:04,790
And memory analysis
isn't dissimilar

597
00:22:04,790 --> 00:22:06,792
from traditional on prem.

598
00:22:06,792 --> 00:22:09,461
You can read it
directly from S3,

599
00:22:09,461 --> 00:22:11,063
or copy it to your local
drive for analysis.

600
00:22:11,063 --> 00:22:14,900
Analyze it like you
would any other image.

601
00:22:14,900 --> 00:22:16,134
So log analysis options.

602
00:22:16,134 --> 00:22:17,669
So, you've got the
disk and the memory,

603
00:22:17,669 --> 00:22:18,870
we walked through how to do
all those for log analysis.

604
00:22:18,870 --> 00:22:21,439
So, for the manual
command line gluttons

605
00:22:21,440 --> 00:22:24,710
in a lot of us, or some of
us, or maybe very few of us.

606
00:22:24,710 --> 00:22:26,211
I don't know how
we break down here.

607
00:22:26,211 --> 00:22:27,646
Personally, I love it.

608
00:22:27,646 --> 00:22:29,313
So for me it's just a
combo of just gunzip,

609
00:22:29,314 --> 00:22:30,882
zcat, sift, and jq.

610
00:22:32,084 --> 00:22:34,953
So how many people
have heard of jq?

611
00:22:36,254 --> 00:22:37,089
Man none.

612
00:22:37,089 --> 00:22:38,557
Okay.

613
00:22:38,557 --> 00:22:40,659
If you've worked with JSON
in any length of time,

614
00:22:40,659 --> 00:22:43,295
jq is your absolute best friend.

615
00:22:43,295 --> 00:22:46,264
So, it can take a JSON
blob and intelligently

616
00:22:46,264 --> 00:22:48,766
transform it with
filter queries.

617
00:22:48,767 --> 00:22:50,302
So, here's kind of an example.

618
00:22:50,302 --> 00:22:51,636
Here's kind of a
snippet of a log

619
00:22:51,636 --> 00:22:52,571
I took from
CloudTrail, and this is

620
00:22:52,571 --> 00:22:53,905
what it would look like.

621
00:22:53,905 --> 00:22:56,774
So here's a stop
instance API call.

622
00:22:56,775 --> 00:22:58,009
This is what you'd
see in CloudTrail

623
00:22:58,009 --> 00:23:00,445
for when someone
right-clicks or does

624
00:23:00,445 --> 00:23:02,280
from the command
line stop instance.

625
00:23:02,280 --> 00:23:03,115
So.

626
00:23:04,816 --> 00:23:06,051
All we're doing is running JQ.

627
00:23:06,051 --> 00:23:07,319
You can see you have
everything as a record.

628
00:23:07,319 --> 00:23:08,420
So it's a record.

629
00:23:08,420 --> 00:23:09,588
The first one,
identity and user name,

630
00:23:09,588 --> 00:23:10,856
and boom, we get Alice.

631
00:23:10,856 --> 00:23:12,257
Or we want to extract
the source IP address.

632
00:23:12,257 --> 00:23:14,359
So, if there were
a bunch of these,

633
00:23:14,359 --> 00:23:15,627
and a bunch of
records, it would be

634
00:23:15,627 --> 00:23:17,095
record one, two, three,
four, blah, blah, blah.

635
00:23:17,095 --> 00:23:19,297
This is gonna be your best
friend from the command line,

636
00:23:19,297 --> 00:23:21,633
for parsing CloudTrail logs.

637
00:23:23,402 --> 00:23:26,004
Or, a sys analysis,
courtesy of AWS,

638
00:23:26,004 --> 00:23:28,840
meaning courtesy of your wallet,

639
00:23:28,840 --> 00:23:31,776
you can extract into
Elastic Search for analysis.

640
00:23:31,777 --> 00:23:33,245
You know, if you have a cluster,

641
00:23:33,245 --> 00:23:35,981
or you have a Kibana
interface, no different.

642
00:23:35,981 --> 00:23:37,482
You can use Kinesis to send logs

643
00:23:37,482 --> 00:23:41,653
directly to your cluster,
that's what some people do.

644
00:23:43,088 --> 00:23:44,723
Something came
out called Athena,

645
00:23:44,723 --> 00:23:48,360
relatively recently, I
think a couple months ago.

646
00:23:48,360 --> 00:23:50,195
So before you used to have
to send the data somewhere,

647
00:23:50,195 --> 00:23:52,898
take it somewhere out of S3,
do something to work on it.

648
00:23:52,898 --> 00:23:55,332
But, Athena actually
allows you to

649
00:23:55,333 --> 00:23:57,602
perform SQL queries
against data right in S3.

650
00:23:57,602 --> 00:23:59,137
No taking it anywhere.

651
00:23:59,137 --> 00:24:02,174
No having to copy it off, put
it in another tool, nothing.

652
00:24:02,174 --> 00:24:03,408
Pretty awesome.

653
00:24:03,408 --> 00:24:04,810
So, query to your
heart's discontent,

654
00:24:04,810 --> 00:24:06,477
depending how much you like SQL.

655
00:24:06,478 --> 00:24:09,414
But it is limited
to a few regions.

656
00:24:10,849 --> 00:24:12,551
So, what do we look for
when we're doing analysis?

657
00:24:12,551 --> 00:24:14,052
And this is another
talk that I think

658
00:24:14,052 --> 00:24:15,520
I'll have to give
completely separate,

659
00:24:15,520 --> 00:24:17,622
because there's a lot of
specific things to look for.

660
00:24:17,622 --> 00:24:19,291
But, overall, you know,
start with CloudTrail.

661
00:24:19,291 --> 00:24:20,792
Something happened, okay.

662
00:24:20,792 --> 00:24:22,092
So, the OneLogin attack.

663
00:24:22,093 --> 00:24:23,428
So something happened.

664
00:24:23,428 --> 00:24:24,596
Instances were created,
recon was done,

665
00:24:24,596 --> 00:24:26,064
they can start looking
for who's doing,

666
00:24:26,064 --> 00:24:27,632
who's doing,

667
00:24:27,632 --> 00:24:29,100
who's looking for
the identity, right.

668
00:24:29,100 --> 00:24:30,235
So there's a thing called get

669
00:24:30,235 --> 00:24:32,870
the current identity
of who I am.

670
00:24:32,871 --> 00:24:34,206
Very few people are
gonna be doing that.

671
00:24:34,206 --> 00:24:35,940
Now, some tools do it.

672
00:24:35,941 --> 00:24:37,442
So that's where you'll
have to separate

673
00:24:37,442 --> 00:24:38,877
the wheat from the chaff,
but think like an attacker.

674
00:24:38,877 --> 00:24:40,645
Like, when I get in,
I'm like who am I?

675
00:24:40,645 --> 00:24:42,214
Right, it's the equivalent
of the who am I.

676
00:24:42,214 --> 00:24:45,283
So, look for the calls
that are requesting

677
00:24:45,283 --> 00:24:46,517
what identity am I.

678
00:24:46,518 --> 00:24:47,986
Look for a lot of
successive gets

679
00:24:47,986 --> 00:24:49,488
or describes, or
list sort of stuff.

680
00:24:49,488 --> 00:24:50,755
And with that,
you'll be like okay,

681
00:24:50,755 --> 00:24:52,357
I see a user name
associated with it.

682
00:24:52,357 --> 00:24:55,060
Or I see a certain role, or
something that was created.

683
00:24:55,060 --> 00:24:56,695
Or you know, I have
a source IP, use it.

684
00:24:56,695 --> 00:24:58,396
It's a star pattern
approach, right.

685
00:24:58,396 --> 00:24:59,965
You know, same DFIR
analysis skills,

686
00:24:59,965 --> 00:25:01,233
but the CloudTrail
is gonna be kinda

687
00:25:01,233 --> 00:25:02,834
your main source of doing that.

688
00:25:02,834 --> 00:25:04,769
CloudWatch, if you had
alarms set up for resources,

689
00:25:04,769 --> 00:25:07,072
look for any
anomalies and spikes.

690
00:25:07,072 --> 00:25:10,408
If you had OS host logs
instrumented with CloudWatch,

691
00:25:10,408 --> 00:25:11,743
check those out.

692
00:25:13,044 --> 00:25:14,579
For Config see how
things transpired

693
00:25:14,579 --> 00:25:16,281
over time, chronologically,
what happened.

694
00:25:16,281 --> 00:25:17,849
If you have a time frame of when

695
00:25:17,849 --> 00:25:18,950
you started seeing
anomalous activity,

696
00:25:18,950 --> 00:25:21,152
well, what was changed and when?

697
00:25:21,152 --> 00:25:22,454
Right, this is a
great tool to say,

698
00:25:22,454 --> 00:25:25,524
oh, this config was
changed, or this volume

699
00:25:25,524 --> 00:25:27,458
was created or added
to this instance,

700
00:25:27,459 --> 00:25:28,994
or these instances were set up.

701
00:25:28,994 --> 00:25:31,862
Use it to your advantage,
identify anomalies there.

702
00:25:31,863 --> 00:25:33,999
And S3, review object accesses.

703
00:25:33,999 --> 00:25:36,601
So, maybe they want
to get data out.

704
00:25:36,601 --> 00:25:37,802
Maybe they set up another bucket

705
00:25:37,802 --> 00:25:39,204
and that's how
their doing exfil.

706
00:25:39,204 --> 00:25:40,405
They made it publicly available,

707
00:25:40,405 --> 00:25:41,606
and now they're doing
all sort of stuff.

708
00:25:41,606 --> 00:25:43,108
Well, see what
buckets were created.

709
00:25:43,108 --> 00:25:44,275
What did they get?

710
00:25:44,276 --> 00:25:45,110
What did they put there?

711
00:25:45,110 --> 00:25:45,910
What did they delete?

712
00:25:45,911 --> 00:25:46,745
Right.

713
00:25:48,580 --> 00:25:50,782
So that's kind of a high
level overview of everything.

714
00:25:50,782 --> 00:25:53,784
I could do a ton
more material here.

715
00:25:55,687 --> 00:25:57,322
I could talk for days about it.

716
00:25:57,322 --> 00:26:00,024
But, suffice to
say, AWS provides

717
00:26:00,025 --> 00:26:01,826
a lot of these
native capabilities

718
00:26:01,826 --> 00:26:03,194
for performing DFIR, right.

719
00:26:03,194 --> 00:26:04,129
I mean, so.

720
00:26:05,530 --> 00:26:06,965
You know, I was asked
a couple months ago

721
00:26:06,965 --> 00:26:09,367
for our company, like what's.

722
00:26:10,869 --> 00:26:12,236
Is AWS complicated?

723
00:26:12,237 --> 00:26:13,672
Why should people move to it?

724
00:26:13,672 --> 00:26:15,140
And I'm like, I wish
everyone would move to it,

725
00:26:15,140 --> 00:26:17,709
just because I would take
a default AWS install

726
00:26:17,709 --> 00:26:20,111
any day over a default
on prem install

727
00:26:20,111 --> 00:26:23,181
for doing any sort of incident
response or forensics.

728
00:26:23,181 --> 00:26:26,251
Because by default,
CloudTrail logs are enabled.

729
00:26:26,251 --> 00:26:27,752
You can see what's going
on in the infrastructure.

730
00:26:27,752 --> 00:26:30,855
Like for any of us
that are consultants,

731
00:26:30,855 --> 00:26:32,324
or even in your own
company, like how often

732
00:26:32,324 --> 00:26:34,159
does something happen
and you're like,

733
00:26:34,159 --> 00:26:36,428
oh, we never got that set
up or that wasn't enabled.

734
00:26:36,428 --> 00:26:38,597
Or those logs weren't enabled,

735
00:26:38,597 --> 00:26:40,764
sorry, we didn't
get around to it.

736
00:26:40,765 --> 00:26:42,534
Could be a nightmare, right?

737
00:26:42,534 --> 00:26:43,835
But there is a
non-trivial ramp up.

738
00:26:43,835 --> 00:26:45,637
Like I said, it's easy
to spend six months

739
00:26:45,637 --> 00:26:47,706
down in the docs getting to
know everything really well.

740
00:26:47,706 --> 00:26:49,240
But at a certain
point, you know,

741
00:26:49,240 --> 00:26:53,311
DFIR methodologies for AWS
and on premises converge.

742
00:26:53,311 --> 00:26:55,080
So there's these different
logging sources involved.

743
00:26:55,080 --> 00:26:56,414
Well, once you get the data out,

744
00:26:56,414 --> 00:26:57,949
or once you have
the instances set up

745
00:26:57,949 --> 00:26:59,250
and you're doing analysis,
you know, nothing changes.

746
00:26:59,250 --> 00:27:00,552
You still have logs.

747
00:27:00,552 --> 00:27:01,686
You still have disk images.

748
00:27:01,686 --> 00:27:03,187
You still have
memory images, right.

749
00:27:03,188 --> 00:27:05,190
So, there is an initial
ramp up that's different.

750
00:27:05,190 --> 00:27:07,692
But, you know, at some
point they converge,

751
00:27:07,692 --> 00:27:09,694
and you're just being
your regular DFIR

752
00:27:09,694 --> 00:27:12,263
rockstar self after a while.

753
00:27:12,263 --> 00:27:13,531
So, what did we maybe learn?

754
00:27:13,531 --> 00:27:15,367
Maybe we learned a
couple new words.

755
00:27:15,367 --> 00:27:16,635
I don't know.

756
00:27:16,635 --> 00:27:17,836
Maybe you already
knew those words.

757
00:27:17,836 --> 00:27:19,337
But, like I said,
there's a couple more

758
00:27:19,337 --> 00:27:21,072
presentations I think that
are coming out of this,

759
00:27:21,072 --> 00:27:22,306
and I didn't realize
it until I started

760
00:27:22,307 --> 00:27:23,541
putting all this together.

761
00:27:23,541 --> 00:27:24,476
'Cause there's a ton
of I think really

762
00:27:24,476 --> 00:27:25,977
useful material for everyone.

763
00:27:25,977 --> 00:27:27,445
But, hopefully this just
kind of whets our appetite

764
00:27:27,445 --> 00:27:28,980
and kinda gives you an idea into

765
00:27:28,980 --> 00:27:30,415
why we care about
it, what's going on,

766
00:27:30,415 --> 00:27:32,216
how super useful this can be,

767
00:27:32,217 --> 00:27:33,652
whether you're on the
fence and moving in,

768
00:27:33,652 --> 00:27:35,086
or not, or you're
already in there,

769
00:27:35,086 --> 00:27:36,321
and you just want to figure out

770
00:27:36,321 --> 00:27:37,889
how do I know if an
attacker is using

771
00:27:37,889 --> 00:27:39,757
my infrastructure right now?

772
00:27:39,758 --> 00:27:41,259
Because I never really looked.

773
00:27:41,259 --> 00:27:43,161
You know, maybe this is
the time to start looking.

774
00:27:43,161 --> 00:27:44,863
If you have a
$60,000 a month bill,

775
00:27:44,863 --> 00:27:46,231
it's gonna be really
hard to identify

776
00:27:46,231 --> 00:27:48,066
that $1,000 of that
was like because

777
00:27:48,066 --> 00:27:49,901
an attacker spun up an instance

778
00:27:49,901 --> 00:27:51,403
and started moving
data around, right?

779
00:27:51,403 --> 00:27:52,804
Like, these are the things
to start thinking about.

780
00:27:52,804 --> 00:27:53,938
And why we should care.

781
00:27:53,938 --> 00:27:55,373
Because this stuff's happening.

782
00:27:55,373 --> 00:27:58,877
(deep suspenseful music)

