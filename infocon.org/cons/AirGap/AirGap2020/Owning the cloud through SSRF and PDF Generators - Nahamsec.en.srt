1
00:00:01,340 --> 00:00:08,910
all right how does this look

2
00:00:05,400 --> 00:00:11,849
hope everyone can see this okay thank

3
00:00:08,910 --> 00:00:14,070
you so much for the people behind it's

4
00:00:11,849 --> 00:00:17,940
not crowd for putting this together and

5
00:00:14,070 --> 00:00:20,250
you do so much for having me as a as a

6
00:00:17,940 --> 00:00:24,090
guest letting me bore you guys a little

7
00:00:20,250 --> 00:00:25,080
bit with ice SRF for those of you that

8
00:00:24,090 --> 00:00:28,140
may not know me

9
00:00:25,080 --> 00:00:30,299
I'm Ben today Kapoor a lot of people

10
00:00:28,140 --> 00:00:32,070
know me as know I'm sick I am currently

11
00:00:30,300 --> 00:00:35,280
the head of hacker education at hacker

12
00:00:32,070 --> 00:00:36,980
one and I'm also a hacker on Colin's

13
00:00:35,280 --> 00:00:40,590
platform I'm someone the top twenty

14
00:00:36,980 --> 00:00:42,000
twelve thirteen something like that I'm

15
00:00:40,590 --> 00:00:44,399
a hack snapchat resident media

16
00:00:42,000 --> 00:00:47,430
department defense Airbnb valve Rockstar

17
00:00:44,399 --> 00:00:48,989
and a ton of other good companies doing

18
00:00:47,430 --> 00:00:51,149
bug bounties I also make educational

19
00:00:48,989 --> 00:00:53,459
content on hacking on YouTube and I

20
00:00:51,149 --> 00:00:55,559
stream hacking on Twitch every weekend

21
00:00:53,460 --> 00:00:57,539
very regularly and if you know how I

22
00:00:55,559 --> 00:00:59,309
mean you're out there you know what to

23
00:00:57,539 --> 00:01:02,160
do it's just some from the chat board is

24
00:00:59,309 --> 00:01:05,489
also big thank you to Cody Brosius we

25
00:01:02,160 --> 00:01:09,539
originally did a smaller version of this

26
00:01:05,489 --> 00:01:12,720
talk at Def Con together and Cody was a

27
00:01:09,540 --> 00:01:15,720
huge huge part of that research and if

28
00:01:12,720 --> 00:01:17,340
it wasn't for all of his contribution

29
00:01:15,720 --> 00:01:18,630
this talk wouldn't be possible without

30
00:01:17,340 --> 00:01:20,700
him so what I make sure I get that out

31
00:01:18,630 --> 00:01:24,899
of the way we created some really cool

32
00:01:20,700 --> 00:01:27,450
tools and some very cool PLC's thanks to

33
00:01:24,900 --> 00:01:30,150
his research and mine together so let's

34
00:01:27,450 --> 00:01:32,340
jump into it and let's talk about it so

35
00:01:30,150 --> 00:01:36,030
sorry but before we do if you are a

36
00:01:32,340 --> 00:01:38,130
developer you work at a company you may

37
00:01:36,030 --> 00:01:43,470
have received something like this from

38
00:01:38,130 --> 00:01:45,210
AWS this was triggered from right right

39
00:01:43,470 --> 00:01:47,189
after we did our talk at Def Con they

40
00:01:45,210 --> 00:01:49,649
sent an email saying hey you have a PDF

41
00:01:47,189 --> 00:01:53,839
generator make sure there's no HTML

42
00:01:49,649 --> 00:01:56,850
being rendered in it from the user input

43
00:01:53,840 --> 00:01:58,740
it was a fun email to get but please

44
00:01:56,850 --> 00:02:01,110
please please if you are someone who's

45
00:01:58,740 --> 00:02:03,630
in charge of some product don't email

46
00:02:01,110 --> 00:02:05,880
AWS don't email GCP it's your

47
00:02:03,630 --> 00:02:07,949
responsibility to make sure you are

48
00:02:05,880 --> 00:02:09,899
parsing or user input properly

49
00:02:07,950 --> 00:02:11,819
so again please don't go bother people

50
00:02:09,899 --> 00:02:14,760
at GCP as your

51
00:02:11,819 --> 00:02:16,589
you know us or the stock before we jump

52
00:02:14,760 --> 00:02:20,189
into SSR if we get understand what it is

53
00:02:16,590 --> 00:02:22,769
Oh ASP has this giant paragraph on what

54
00:02:20,189 --> 00:02:25,230
that sort of means but you kind of

55
00:02:22,769 --> 00:02:27,930
shorten it the TLDR is you have the

56
00:02:25,230 --> 00:02:29,189
ability to point the target server that

57
00:02:27,930 --> 00:02:31,560
you're hacking on or whatever

58
00:02:29,189 --> 00:02:34,170
application or whatever a server is

59
00:02:31,560 --> 00:02:37,349
running an application you can request

60
00:02:34,170 --> 00:02:39,569
internal hosts and files like a browser

61
00:02:37,349 --> 00:02:41,700
so imagine having your browser on a

62
00:02:39,569 --> 00:02:45,108
server that belongs to another company

63
00:02:41,700 --> 00:02:49,649
and you can point out two files and also

64
00:02:45,109 --> 00:02:53,370
internal hosts and if you're not sure

65
00:02:49,650 --> 00:02:57,629
what the cloud metadata is and why AWS

66
00:02:53,370 --> 00:03:00,900
and GCP are involved is because all

67
00:02:57,629 --> 00:03:03,120
these cloud platforms they give you this

68
00:03:00,900 --> 00:03:05,099
internal IP where you can hit it and you

69
00:03:03,120 --> 00:03:07,470
can receive some control information

70
00:03:05,099 --> 00:03:11,608
like internal IP host project details

71
00:03:07,470 --> 00:03:13,560
and if they have not fully done their

72
00:03:11,609 --> 00:03:16,379
permissions properly you can also get

73
00:03:13,560 --> 00:03:18,180
the access key and secret key as well so

74
00:03:16,379 --> 00:03:19,409
that's the point of SSR if you know most

75
00:03:18,180 --> 00:03:22,349
of the hackers appreciate bug bounty

76
00:03:19,409 --> 00:03:24,030
programs when again it's a sort of they

77
00:03:22,349 --> 00:03:26,310
want to go in right away look for access

78
00:03:24,030 --> 00:03:29,280
keys and secret keys to that cloud and

79
00:03:26,310 --> 00:03:31,019
sense and this IP address makes it very

80
00:03:29,280 --> 00:03:33,510
very easy especially if you have not

81
00:03:31,019 --> 00:03:35,459
done the permissions properly so let's

82
00:03:33,510 --> 00:03:38,790
talk about a basic example think about

83
00:03:35,459 --> 00:03:40,590
it as you go to this website you sign up

84
00:03:38,790 --> 00:03:42,418
and it says hey you can either upload an

85
00:03:40,590 --> 00:03:45,389
avatar or you can actually fish this

86
00:03:42,419 --> 00:03:46,590
avatar from another website so if you go

87
00:03:45,389 --> 00:03:48,299
and fetch the avatar from another

88
00:03:46,590 --> 00:03:50,099
website you give it a URL and you say

89
00:03:48,299 --> 00:03:52,260
here's my funny cat meme that I want you

90
00:03:50,099 --> 00:03:54,839
to put us my avatar and the background

91
00:03:52,260 --> 00:03:56,668
it makes a get request to the API to the

92
00:03:54,840 --> 00:03:59,069
path whatever the file name is in this

93
00:03:56,669 --> 00:04:01,470
case we'll call it fetch and it puts in

94
00:03:59,069 --> 00:04:03,929
your URL URL site.com my fun account

95
00:04:01,470 --> 00:04:05,909
meme in there and obviously you can

96
00:04:03,930 --> 00:04:07,949
change that and if it's being rendered

97
00:04:05,909 --> 00:04:09,418
server-side then you can point it to

98
00:04:07,949 --> 00:04:11,040
things that you may not have access to

99
00:04:09,419 --> 00:04:12,900
internally so in all the cases like

100
00:04:11,040 --> 00:04:16,048
laudner that i appear i point up early

101
00:04:12,900 --> 00:04:19,168
on and it's not always HTTP it all could

102
00:04:16,048 --> 00:04:20,638
also be protocols like file go for SSH

103
00:04:19,168 --> 00:04:23,400
and so on so you can use a lot of fun

104
00:04:20,639 --> 00:04:25,270
stuff depending on how the application

105
00:04:23,400 --> 00:04:29,359
is built

106
00:04:25,270 --> 00:04:30,500
and it's always not as easy as I just

107
00:04:29,360 --> 00:04:32,240
pointed out there's always some

108
00:04:30,500 --> 00:04:33,770
limitations but we'll talk about them in

109
00:04:32,240 --> 00:04:36,710
a little bit so let's talk about some

110
00:04:33,770 --> 00:04:38,870
CDE examples previously my last slide

111
00:04:36,710 --> 00:04:41,599
this is a CV that came out three years

112
00:04:38,870 --> 00:04:43,759
ago and unfortunately some organizations

113
00:04:41,600 --> 00:04:46,340
are still vulnerable to this because I

114
00:04:43,759 --> 00:04:51,139
don't realize that just because it's not

115
00:04:46,340 --> 00:04:52,280
really internal or just because it

116
00:04:51,139 --> 00:04:54,800
doesn't look valuable to them they don't

117
00:04:52,280 --> 00:04:57,409
choose to fix it but again you go to

118
00:04:54,800 --> 00:04:59,990
this endpoint icon you are you change

119
00:04:57,410 --> 00:05:02,810
the consumer URI to whatever value you

120
00:04:59,990 --> 00:05:04,850
want in this case Alyssa who I took this

121
00:05:02,810 --> 00:05:06,590
from our blog post is pointing it to

122
00:05:04,850 --> 00:05:09,169
Google and you can see it's loading

123
00:05:06,590 --> 00:05:11,270
google.com but then you change that IP

124
00:05:09,169 --> 00:05:13,729
if you change that consumer URI to an IP

125
00:05:11,270 --> 00:05:15,469
which is a cloud manner than IP and it's

126
00:05:13,729 --> 00:05:18,860
giving the internal host name for it and

127
00:05:15,470 --> 00:05:21,949
this was on their DoD property that

128
00:05:18,860 --> 00:05:25,639
Alyssa had originally exploited by

129
00:05:21,949 --> 00:05:27,889
finding a publicly accessible JIRA the

130
00:05:25,639 --> 00:05:30,199
next one is a CV that came out from

131
00:05:27,889 --> 00:05:33,349
Orange or inside has been doing some

132
00:05:30,199 --> 00:05:36,050
really really cool research on Asus RF

133
00:05:33,349 --> 00:05:39,860
and this was one of them where he found

134
00:05:36,050 --> 00:05:42,229
out that if you point the this giant

135
00:05:39,860 --> 00:05:44,780
path if you change the API URL and

136
00:05:42,229 --> 00:05:47,270
pointed to anything internal including

137
00:05:44,780 --> 00:05:48,710
the AWS no data IP in the source of the

138
00:05:47,270 --> 00:05:51,680
page not at the actual page but if you

139
00:05:48,710 --> 00:05:54,260
look into the stupid source it shows you

140
00:05:51,680 --> 00:05:55,370
the response for it as well so these are

141
00:05:54,260 --> 00:05:57,380
all sort of things that I've seen

142
00:05:55,370 --> 00:05:59,090
internally be vulnerable as some

143
00:05:57,380 --> 00:06:00,940
organizations in a lot of cases you can

144
00:05:59,090 --> 00:06:03,770
also change these so if you get a

145
00:06:00,940 --> 00:06:05,510
limited SSR F that only does get

146
00:06:03,770 --> 00:06:07,400
requests and you find that internal

147
00:06:05,510 --> 00:06:09,680
Jenkins instance this is a perfect way

148
00:06:07,400 --> 00:06:11,539
to chain your exploits and I've done

149
00:06:09,680 --> 00:06:14,210
that a ton of times with Jenkins and

150
00:06:11,539 --> 00:06:16,370
JIRA and confluence so there's a ton of

151
00:06:14,210 --> 00:06:20,090
a good CVS but these have been very very

152
00:06:16,370 --> 00:06:24,020
popular amongst the people that are

153
00:06:20,090 --> 00:06:25,520
doing bug buyers especially so again as

154
00:06:24,020 --> 00:06:27,530
I said earlier it's not always as easy

155
00:06:25,520 --> 00:06:28,969
there are a few things when it comes on

156
00:06:27,530 --> 00:06:32,539
to a safari after that you will probably

157
00:06:28,970 --> 00:06:34,490
face in a lot of cases so the top three

158
00:06:32,539 --> 00:06:36,630
one that I've put up is the first one is

159
00:06:34,490 --> 00:06:38,730
the metadata or any internal IP

160
00:06:36,630 --> 00:06:41,310
you put in our getting filtered to have

161
00:06:38,730 --> 00:06:42,810
some sort of a white or black list that

162
00:06:41,310 --> 00:06:45,000
takes care of that issue it's their

163
00:06:42,810 --> 00:06:46,740
permanent fix sometimes it can point out

164
00:06:45,000 --> 00:06:48,540
a supplement of your own you could

165
00:06:46,740 --> 00:06:50,910
credit record and you point it to the IP

166
00:06:48,540 --> 00:06:53,250
address and it completely ignores the

167
00:06:50,910 --> 00:06:54,690
white listing so that's been something

168
00:06:53,250 --> 00:06:56,400
that I've done in the past when I put in

169
00:06:54,690 --> 00:06:59,160
the IP address it doesn't work but I

170
00:06:56,400 --> 00:07:00,989
point AWS mydomain.com to the IP address

171
00:06:59,160 --> 00:07:04,110
sure enough it works and gives me

172
00:07:00,990 --> 00:07:07,500
whatever I need the second one is there

173
00:07:04,110 --> 00:07:09,380
is times where the company is in some

174
00:07:07,500 --> 00:07:11,700
white listing they only allowed their

175
00:07:09,380 --> 00:07:14,219
domains and subdomains and not a case

176
00:07:11,700 --> 00:07:15,450
you can find and open redirect please

177
00:07:14,220 --> 00:07:17,490
don't burn your open redirects if you

178
00:07:15,450 --> 00:07:20,010
find them it's not worth the hundred

179
00:07:17,490 --> 00:07:22,260
dollar payment maybe you can use it for

180
00:07:20,010 --> 00:07:23,730
itself later on if you do find one and

181
00:07:22,260 --> 00:07:25,349
of course there's a third one which will

182
00:07:23,730 --> 00:07:28,260
also show an example of it with snapchat

183
00:07:25,350 --> 00:07:30,000
is what you have an SS sort of but you

184
00:07:28,260 --> 00:07:32,520
can't really see the output oh it comes

185
00:07:30,000 --> 00:07:34,050
back is with an okay or you know tasks

186
00:07:32,520 --> 00:07:36,599
done something like that or in a file

187
00:07:34,050 --> 00:07:38,730
uploaded but you can't actually see the

188
00:07:36,600 --> 00:07:40,410
data that it's like when you pointed to

189
00:07:38,730 --> 00:07:42,360
you know the internal IP addresses you

190
00:07:40,410 --> 00:07:45,120
can use JavaScript in some cases and X

191
00:07:42,360 --> 00:07:47,520
for some data as well a lot of things

192
00:07:45,120 --> 00:07:48,810
are really important when I'm sorry but

193
00:07:47,520 --> 00:07:50,880
the most important one that I want to

194
00:07:48,810 --> 00:07:52,620
make sure I highlight is please please

195
00:07:50,880 --> 00:07:54,690
be the first thing she knew is you

196
00:07:52,620 --> 00:07:57,450
should do is get to user agent because a

197
00:07:54,690 --> 00:07:59,070
you know what back-end they're using and

198
00:07:57,450 --> 00:08:01,200
how you should approach it you can

199
00:07:59,070 --> 00:08:03,090
Google down back in you know and see if

200
00:08:01,200 --> 00:08:05,280
it's already known Vaughan's and three

201
00:08:03,090 --> 00:08:06,659
when you get the UA it also gives you

202
00:08:05,280 --> 00:08:09,210
the IP address so you know if it's

203
00:08:06,660 --> 00:08:11,760
hosted on TCP if it's on AWS or is it

204
00:08:09,210 --> 00:08:14,489
even even is it coming from the server

205
00:08:11,760 --> 00:08:16,050
or is it coming from your browser when

206
00:08:14,490 --> 00:08:17,490
you make that request so those are

207
00:08:16,050 --> 00:08:18,570
things that you want to make sure you

208
00:08:17,490 --> 00:08:20,730
have before you even think about

209
00:08:18,570 --> 00:08:22,200
explaining it's SRF and then last but

210
00:08:20,730 --> 00:08:23,640
not least I talked about the redirect

211
00:08:22,200 --> 00:08:26,880
thing but the last thing is if you see

212
00:08:23,640 --> 00:08:28,710
any customization with HTML or CSS and a

213
00:08:26,880 --> 00:08:31,050
PDF generator for example after that you

214
00:08:28,710 --> 00:08:32,610
customize the headers for your company

215
00:08:31,050 --> 00:08:34,950
name and logo and stuff like that

216
00:08:32,610 --> 00:08:37,289
those are nine or ten times vulnerable

217
00:08:34,950 --> 00:08:39,180
so look out for those as well so that's

218
00:08:37,289 --> 00:08:40,348
not what PDF generator there are a ton

219
00:08:39,179 --> 00:08:42,478
of ways I'm gonna go through this a

220
00:08:40,349 --> 00:08:43,800
little bit faster because I realized I'm

221
00:08:42,479 --> 00:08:45,240
a little bit short on time there are two

222
00:08:43,799 --> 00:08:46,680
ways you can do it you can use some of

223
00:08:45,240 --> 00:08:48,110
these libraries and backends that are

224
00:08:46,680 --> 00:08:50,180
out there or

225
00:08:48,110 --> 00:08:51,680
can you test Chrome both could be

226
00:08:50,180 --> 00:08:53,449
vulnerable depending on the

227
00:08:51,680 --> 00:08:55,189
configuration and again there are a lot

228
00:08:53,450 --> 00:08:57,080
of rappers and libraries out there but

229
00:08:55,190 --> 00:09:00,050
we'll cover those later one of our

230
00:08:57,080 --> 00:09:03,020
favorite ones was easy print we also own

231
00:09:00,050 --> 00:09:04,400
easy print as a poetess research but

232
00:09:03,020 --> 00:09:06,890
would you print is a great example of

233
00:09:04,400 --> 00:09:09,260
whatever HTML you give it it literally

234
00:09:06,890 --> 00:09:11,000
puts it into a PDF and then it spits it

235
00:09:09,260 --> 00:09:12,920
out to you so if you're not sanitizing

236
00:09:11,000 --> 00:09:14,660
whatever isn't that HTML form that's

237
00:09:12,920 --> 00:09:16,490
being presented to the user it goes

238
00:09:14,660 --> 00:09:21,140
right into the PDF and presents itself

239
00:09:16,490 --> 00:09:23,660
to that user so how does it look let's

240
00:09:21,140 --> 00:09:27,080
say you find XSS you go to the same page

241
00:09:23,660 --> 00:09:30,230
it says export export as PDF you export

242
00:09:27,080 --> 00:09:33,620
a PDF and sure enough your script

243
00:09:30,230 --> 00:09:35,810
document right 1 2 3 shows up as 1 2 3

244
00:09:33,620 --> 00:09:39,860
in the PDF and it's a good indication

245
00:09:35,810 --> 00:09:42,589
that you have SSRS so let's look at how

246
00:09:39,860 --> 00:09:46,910
it works for a lot of cases the first

247
00:09:42,590 --> 00:09:49,700
thing that I do when I see a PDF I try

248
00:09:46,910 --> 00:09:52,670
some HTML I put you know H and the

249
00:09:49,700 --> 00:09:54,680
underlying tag and if it renders it in

250
00:09:52,670 --> 00:09:56,680
the PDF there's an indication that I can

251
00:09:54,680 --> 00:09:59,150
you know put some HTML in there and

252
00:09:56,680 --> 00:10:02,300
obviously I will use things like iframe

253
00:09:59,150 --> 00:10:04,670
or image something that would force the

254
00:10:02,300 --> 00:10:06,979
application to fetch an external file

255
00:10:04,670 --> 00:10:09,349
from my server just so I can leak the

256
00:10:06,980 --> 00:10:10,760
user agent so this right here you can

257
00:10:09,350 --> 00:10:13,700
see I have the user agent and they're

258
00:10:10,760 --> 00:10:15,920
using the WK HTML to PDF that i

259
00:10:13,700 --> 00:10:19,490
mentioned early on and ways you can make

260
00:10:15,920 --> 00:10:21,410
PDFs and of course in some cases are

261
00:10:19,490 --> 00:10:23,450
super simple you just make an iframe and

262
00:10:21,410 --> 00:10:25,100
you point the iframe to an internal IP

263
00:10:23,450 --> 00:10:26,900
address or a file sometimes

264
00:10:25,100 --> 00:10:29,510
and sure enough it comes back and gives

265
00:10:26,900 --> 00:10:31,430
you access to it but that's not always

266
00:10:29,510 --> 00:10:33,319
the case we'll talk about some more

267
00:10:31,430 --> 00:10:35,630
complicated at once in a little bit so

268
00:10:33,320 --> 00:10:37,610
one of the most simple ways to get this

269
00:10:35,630 --> 00:10:40,700
is the styling that I mentioned earlier

270
00:10:37,610 --> 00:10:43,310
when I was doing my intro so we had this

271
00:10:40,700 --> 00:10:44,750
company where most of our user input was

272
00:10:43,310 --> 00:10:46,609
getting sanitized and filters so no

273
00:10:44,750 --> 00:10:49,010
matter how many times we tried anywhere

274
00:10:46,610 --> 00:10:50,750
we could put our user input we put HTML

275
00:10:49,010 --> 00:10:52,400
in there and it wouldn't render we had

276
00:10:50,750 --> 00:10:55,370
no exercise no a serial injection

277
00:10:52,400 --> 00:10:57,890
nothing but the decide did allow us to

278
00:10:55,370 --> 00:10:59,630
do some fonts and styling so this is how

279
00:10:57,890 --> 00:11:01,939
it worked we would

280
00:10:59,630 --> 00:11:04,160
go to the documentation it says pick a

281
00:11:01,940 --> 00:11:07,310
font pick the size pick the color right

282
00:11:04,160 --> 00:11:08,689
here and you pick em you said save and

283
00:11:07,310 --> 00:11:11,029
right after you save that this request

284
00:11:08,690 --> 00:11:12,920
gets sent and we just thought what if

285
00:11:11,029 --> 00:11:14,870
they are using HTML to all this because

286
00:11:12,920 --> 00:11:17,389
this is all CSS right so what if we just

287
00:11:14,870 --> 00:11:19,100
close the style tag and see if the rest

288
00:11:17,389 --> 00:11:20,899
of it would leak into the PDF and you

289
00:11:19,100 --> 00:11:23,360
can see we have had test a bunch of

290
00:11:20,899 --> 00:11:25,100
times I hear there's a SDF that was on

291
00:11:23,360 --> 00:11:27,139
rendering the test right here wasn't

292
00:11:25,100 --> 00:11:28,779
doing anything but you can see as soon

293
00:11:27,139 --> 00:11:31,430
as we put the style back up here

294
00:11:28,779 --> 00:11:33,019
everything else from the CSS after it

295
00:11:31,430 --> 00:11:34,910
was leaked into the PDF and this is a

296
00:11:33,019 --> 00:11:37,759
header of the PDF where our logo and

297
00:11:34,910 --> 00:11:42,050
company address that you can see is

298
00:11:37,759 --> 00:11:44,630
linked so sure enough you go pop back in

299
00:11:42,050 --> 00:11:46,910
there you post a image and you say hey I

300
00:11:44,630 --> 00:11:49,699
want you to fetch this remote image from

301
00:11:46,910 --> 00:11:52,550
my server that I'm hosting on my box and

302
00:11:49,699 --> 00:11:54,319
I want you to and fetch that file and

303
00:11:52,550 --> 00:11:56,779
when you do that you know it's leaks IP

304
00:11:54,319 --> 00:11:59,149
address and it also gives you the user

305
00:11:56,779 --> 00:12:00,649
agent what it tells us oh this is Java

306
00:11:59,149 --> 00:12:04,189
you know we are going to need to do

307
00:12:00,649 --> 00:12:05,750
either some put some Java into the PDF

308
00:12:04,189 --> 00:12:08,269
in some HTML and see if it does anything

309
00:12:05,750 --> 00:12:10,880
or we need to look and see what kind of

310
00:12:08,269 --> 00:12:13,759
protocols are allowed when you are going

311
00:12:10,880 --> 00:12:16,250
after a Java back-end for a PDF

312
00:12:13,759 --> 00:12:16,730
generator but for our case it wasn't

313
00:12:16,250 --> 00:12:18,410
that hard

314
00:12:16,730 --> 00:12:22,779
lucky for us all we have to do was do a

315
00:12:18,410 --> 00:12:25,730
style iframe point the iframe to another

316
00:12:22,779 --> 00:12:27,350
to the internal IP address and sure

317
00:12:25,730 --> 00:12:29,360
enough that gave us whatever we needed

318
00:12:27,350 --> 00:12:33,980
which was access key in there secret key

319
00:12:29,360 --> 00:12:36,319
as well there has been times when I've

320
00:12:33,980 --> 00:12:39,529
seen this where the IP directly didn't

321
00:12:36,319 --> 00:12:41,300
work but we had just a PHP file on my

322
00:12:39,529 --> 00:12:43,819
web server where it would just do a

323
00:12:41,300 --> 00:12:46,008
header a redirection to the IP address

324
00:12:43,819 --> 00:12:48,529
and we used that trick in the second

325
00:12:46,009 --> 00:12:50,120
time around to exploit it so I've seen

326
00:12:48,529 --> 00:12:51,050
both of these work you know sometimes I

327
00:12:50,120 --> 00:12:54,170
just doesn't work

328
00:12:51,050 --> 00:12:55,670
sure enough you do a redirect and it

329
00:12:54,170 --> 00:12:57,670
changes everything it's a game changer

330
00:12:55,670 --> 00:13:01,670
in a lot of cases

331
00:12:57,670 --> 00:13:02,839
and again like I mentioned please please

332
00:13:01,670 --> 00:13:04,760
please make sure you're not burning your

333
00:13:02,840 --> 00:13:06,590
open redirects and this if you find them

334
00:13:04,760 --> 00:13:08,060
hold on to them for a little bit it's a

335
00:13:06,590 --> 00:13:10,760
hundred dollars it's not worth it you

336
00:13:08,060 --> 00:13:13,910
may find that valuable towards the end

337
00:13:10,760 --> 00:13:17,029
of your hacking but it's not always this

338
00:13:13,910 --> 00:13:18,920
wheezy I mean it's easy it's easy print

339
00:13:17,029 --> 00:13:22,040
was one of the ones that was really

340
00:13:18,920 --> 00:13:23,990
really hard to export for us because we

341
00:13:22,040 --> 00:13:25,730
no matter how much we tried we couldn't

342
00:13:23,990 --> 00:13:29,600
get this we couldn't understand this PDF

343
00:13:25,730 --> 00:13:32,990
generator we're working on a service

344
00:13:29,600 --> 00:13:35,600
that required us to trigger a delivery

345
00:13:32,990 --> 00:13:36,920
of some sort in order for the PDA have

346
00:13:35,600 --> 00:13:39,320
to be generated so we're very very

347
00:13:36,920 --> 00:13:40,910
limited and we couldn't get the user

348
00:13:39,320 --> 00:13:43,460
agent because we were doing it on a

349
00:13:40,910 --> 00:13:45,469
mobile phone and the encoding of the

350
00:13:43,460 --> 00:13:46,760
double quotes was being weird on the

351
00:13:45,470 --> 00:13:48,560
phone and then we didn't catch it later

352
00:13:46,760 --> 00:13:49,880
until later on but once we figured it

353
00:13:48,560 --> 00:13:51,709
out we realized that we couldn't on any

354
00:13:49,880 --> 00:13:54,710
scripts we couldn't learn any iframes we

355
00:13:51,710 --> 00:13:56,420
could end but we could load images but

356
00:13:54,710 --> 00:13:58,790
that's kind of boring right who cares if

357
00:13:56,420 --> 00:14:01,069
I could load a favicon from local hosts

358
00:13:58,790 --> 00:14:03,530
it shows access but it's not critical

359
00:14:01,070 --> 00:14:06,880
want to have the highest impact possible

360
00:14:03,530 --> 00:14:10,630
when it comes out to SSR else

361
00:14:06,880 --> 00:14:13,000
so once we got her to connect we realize

362
00:14:10,630 --> 00:14:15,250
that in league the user agent as being

363
00:14:13,000 --> 00:14:17,019
we see print we did a quick google

364
00:14:15,250 --> 00:14:18,610
search and by doing our research we

365
00:14:17,019 --> 00:14:20,350
realized that was ePrint it's completely

366
00:14:18,610 --> 00:14:24,459
open-source you can go and github and

367
00:14:20,350 --> 00:14:26,649
look at exactly how things work and

368
00:14:24,459 --> 00:14:29,410
before I show how we exploit this I

369
00:14:26,649 --> 00:14:30,970
wanted to show what use ePrint does for

370
00:14:29,410 --> 00:14:34,600
the the way we see print works is you

371
00:14:30,970 --> 00:14:37,389
type a new easy print the input HTML

372
00:14:34,600 --> 00:14:39,040
that you want to create a PDF and you

373
00:14:37,389 --> 00:14:41,829
give it an output for it so if I have

374
00:14:39,040 --> 00:14:43,660
input dot HTML that's whatever template

375
00:14:41,829 --> 00:14:46,479
I'm using it's going to make that into a

376
00:14:43,660 --> 00:14:49,630
PDF by calling an output that PDF so in

377
00:14:46,480 --> 00:14:51,220
our HTML file I put a ton of tags you

378
00:14:49,630 --> 00:14:53,920
can see on the left the only one that

379
00:14:51,220 --> 00:14:56,829
did actually work was the image source

380
00:14:53,920 --> 00:15:00,279
so it fetched the source from sorry the

381
00:14:56,829 --> 00:15:02,979
image from Google's favicon but again

382
00:15:00,279 --> 00:15:05,529
that's kind of useless because it's not

383
00:15:02,980 --> 00:15:07,329
giving me any privilege you know it's

384
00:15:05,529 --> 00:15:11,380
not giving me any sensitive data other

385
00:15:07,329 --> 00:15:14,739
than whatever this internal OS is

386
00:15:11,380 --> 00:15:16,959
running so to recap what all everything

387
00:15:14,740 --> 00:15:19,149
I said we had no JavaScript no I frame

388
00:15:16,959 --> 00:15:20,439
image worked it was boring which I'd

389
00:15:19,149 --> 00:15:23,019
been being followed

390
00:15:20,439 --> 00:15:24,279
we tried objects but we realized and

391
00:15:23,019 --> 00:15:26,319
they get out about story that there's

392
00:15:24,279 --> 00:15:28,720
this thing called the link and we

393
00:15:26,319 --> 00:15:32,079
weren't sure why a PDF generator would

394
00:15:28,720 --> 00:15:34,449
let you use the linked HTML tag and the

395
00:15:32,079 --> 00:15:35,888
way the HTML link HTML tag works is you

396
00:15:34,449 --> 00:15:38,800
can tell it to you want to attach

397
00:15:35,889 --> 00:15:42,040
something you can make the source of the

398
00:15:38,800 --> 00:15:44,050
attachment be an internal file and this

399
00:15:42,040 --> 00:15:46,719
actually did work on them but we got

400
00:15:44,050 --> 00:15:50,258
very lucky to catch this because when

401
00:15:46,720 --> 00:15:52,569
we're doing this Cody accidentally typed

402
00:15:50,259 --> 00:15:55,149
in the wrong file name where it attached

403
00:15:52,569 --> 00:15:58,240
a video file that was Forgan

404
00:15:55,149 --> 00:15:59,920
big it was a huge large file and it took

405
00:15:58,240 --> 00:16:01,990
a very long time for the PDF to be

406
00:15:59,920 --> 00:16:04,060
generated and we when we did the LS we

407
00:16:01,990 --> 00:16:05,410
realized that the file was huge so we

408
00:16:04,060 --> 00:16:07,268
went through our history we realized

409
00:16:05,410 --> 00:16:09,279
that we attach the wrong file that was

410
00:16:07,269 --> 00:16:12,040
huge and therefore that was the reason

411
00:16:09,279 --> 00:16:14,170
why the output PDF came out a lot bigger

412
00:16:12,040 --> 00:16:16,329
than a text file that indicated that

413
00:16:14,170 --> 00:16:18,910
there was something there but when we'd

414
00:16:16,329 --> 00:16:20,060
open up the PDF itself it wouldn't show

415
00:16:18,910 --> 00:16:22,310
the content of the file

416
00:16:20,060 --> 00:16:24,020
so it turns out you actually would put

417
00:16:22,310 --> 00:16:27,949
this in the metadata and you can

418
00:16:24,020 --> 00:16:31,220
actually pull that out by using Z lab in

419
00:16:27,950 --> 00:16:33,950
Python and of course if you can do a

420
00:16:31,220 --> 00:16:36,170
read file like file dot SC password you

421
00:16:33,950 --> 00:16:38,750
can also make web requests to things

422
00:16:36,170 --> 00:16:41,959
like the AWS metadata instance so

423
00:16:38,750 --> 00:16:45,230
quickly we pop that in there we pointed

424
00:16:41,960 --> 00:16:48,320
it to NC password we downloaded a PDF we

425
00:16:45,230 --> 00:16:50,780
fit it to our decompile that we wrote if

426
00:16:48,320 --> 00:16:52,820
you want to call it that we pulled the

427
00:16:50,780 --> 00:16:54,589
content of NC password and then we

428
00:16:52,820 --> 00:16:56,660
switch that out to one six nine two five

429
00:16:54,590 --> 00:16:58,520
four one six nine two five four and it

430
00:16:56,660 --> 00:17:00,620
showed that we also have access to

431
00:16:58,520 --> 00:17:02,800
internal resources and we put it out to

432
00:17:00,620 --> 00:17:06,440
them I'm unfortunate I can't disclose

433
00:17:02,800 --> 00:17:08,599
who this program is but they are

434
00:17:06,440 --> 00:17:10,520
promising me in the next month or so to

435
00:17:08,599 --> 00:17:12,740
completely disclose those vulnerability

436
00:17:10,520 --> 00:17:14,260
as a part of their bug bounty program

437
00:17:12,740 --> 00:17:16,310
when it goes public so look out for that

438
00:17:14,260 --> 00:17:18,079
there's a really really cool video that

439
00:17:16,310 --> 00:17:20,179
hopefully will come out with it that

440
00:17:18,079 --> 00:17:21,560
explains the whole thing and I've also

441
00:17:20,180 --> 00:17:24,350
got a video on this if you want to see

442
00:17:21,560 --> 00:17:26,510
the details of how we see print works on

443
00:17:24,349 --> 00:17:28,099
YouTube you can check it out so DNS

444
00:17:26,510 --> 00:17:29,870
rebinding is another one that was huge

445
00:17:28,099 --> 00:17:33,620
this was the one that blew our mind

446
00:17:29,870 --> 00:17:35,659
because we understand why and how it

447
00:17:33,620 --> 00:17:39,350
works but we don't understand why it

448
00:17:35,660 --> 00:17:43,400
happened for the way it works was if you

449
00:17:39,350 --> 00:17:45,530
have ever hacked on a program that is

450
00:17:43,400 --> 00:17:47,090
hosted on GCP you know it's not easy to

451
00:17:45,530 --> 00:17:49,639
just hit GCP on its own so you can't

452
00:17:47,090 --> 00:17:50,870
just make a request to use your data it

453
00:17:49,640 --> 00:17:53,990
doesn't work like that you have to do

454
00:17:50,870 --> 00:17:57,979
some funky stuff for it to work

455
00:17:53,990 --> 00:18:00,710
when you load your remote server so you

456
00:17:57,980 --> 00:18:03,680
point your browser to the domain it

457
00:18:00,710 --> 00:18:06,770
doesn't work but if you what we found

458
00:18:03,680 --> 00:18:09,110
out is if you make 2499 requests it

459
00:18:06,770 --> 00:18:12,740
flushes the dns for the original domain

460
00:18:09,110 --> 00:18:15,949
and it lets you actually access the

461
00:18:12,740 --> 00:18:17,390
metadata instance if you change the DNS

462
00:18:15,950 --> 00:18:19,970
name halfway through and I will show

463
00:18:17,390 --> 00:18:22,070
that that looks like in a little bit I'm

464
00:18:19,970 --> 00:18:23,810
so to give you an example we did this

465
00:18:22,070 --> 00:18:25,040
exact thing I have on the screen I'm

466
00:18:23,810 --> 00:18:26,830
going to show you guys a video of it I

467
00:18:25,040 --> 00:18:30,550
kind of talked over how it worked

468
00:18:26,830 --> 00:18:30,550
let's see if I can do this

469
00:18:30,730 --> 00:18:34,360
so here as you can see we're on snapchat

470
00:18:32,410 --> 00:18:37,150
calm this is in prod snap John actually

471
00:18:34,360 --> 00:18:39,129
does not like to test in prod when you

472
00:18:37,150 --> 00:18:39,820
go to ads unless you create your own

473
00:18:39,130 --> 00:18:42,340
head

474
00:18:39,820 --> 00:18:43,720
you can upload followers branding

475
00:18:42,340 --> 00:18:45,520
whatever you want when you click on the

476
00:18:43,720 --> 00:18:46,990
logo you can replace it or you can

477
00:18:45,520 --> 00:18:49,418
actually import it from another website

478
00:18:46,990 --> 00:18:52,299
so this will import the entire side into

479
00:18:49,419 --> 00:18:56,980
an ad for you and when you click import

480
00:18:52,299 --> 00:19:02,168
it makes a request to their API which

481
00:18:56,980 --> 00:19:03,580
will shorten here there we go so what we

482
00:19:02,169 --> 00:19:06,100
do here is instead of pointing it to

483
00:19:03,580 --> 00:19:09,159
Google we're gonna point it to Dakin's

484
00:19:06,100 --> 00:19:11,168
server where our HTML file is hosted

485
00:19:09,160 --> 00:19:14,590
where it hooks the JavaScript and he's

486
00:19:11,169 --> 00:19:18,160
doing a Python web server with flask as

487
00:19:14,590 --> 00:19:22,149
soon as it hits our server Jes points it

488
00:19:18,160 --> 00:19:24,460
to another domain where it's right here

489
00:19:22,150 --> 00:19:26,410
it's the MD one and we're gonna change

490
00:19:24,460 --> 00:19:29,620
the IP address from daemon to the

491
00:19:26,410 --> 00:19:31,960
internal IP address for AWS and let you

492
00:19:29,620 --> 00:19:35,620
know Jake let's do a few loops which

493
00:19:31,960 --> 00:19:39,970
takes about a good few minutes and after

494
00:19:35,620 --> 00:19:42,760
it makes the 200 mm 499 requests to AWS

495
00:19:39,970 --> 00:19:45,309
or GCP at the end when I played one more

496
00:19:42,760 --> 00:19:48,790
time I suppose it makes a number of

497
00:19:45,309 --> 00:19:51,580
requests the host name the auth token

498
00:19:48,790 --> 00:19:54,370
and SSH keys for that box was leaked to

499
00:19:51,580 --> 00:19:56,080
this script so the way it worked is we

500
00:19:54,370 --> 00:19:58,750
had it hit the server initiate

501
00:19:56,080 --> 00:20:00,730
javascript javascript makes a weight you

502
00:19:58,750 --> 00:20:02,559
know gives it a weight time of 30

503
00:20:00,730 --> 00:20:07,240
seconds in that 30 second we popped over

504
00:20:02,559 --> 00:20:08,980
to our dns records we changed the IP

505
00:20:07,240 --> 00:20:10,900
address for the internal IP address that

506
00:20:08,980 --> 00:20:14,590
it was staying and then eventually it

507
00:20:10,900 --> 00:20:16,029
spit out the entire secret

508
00:20:14,590 --> 00:20:18,399
let's go back to the other avenues of

509
00:20:16,029 --> 00:20:19,570
doing that that video is also on youtube

510
00:20:18,399 --> 00:20:22,029
if you want to keep watching it and to

511
00:20:19,570 --> 00:20:23,408
understand it the tools that are used in

512
00:20:22,029 --> 00:20:25,179
this I will also talk about it at the

513
00:20:23,409 --> 00:20:28,629
end of the talk which you can use for

514
00:20:25,179 --> 00:20:30,820
free next one is we had a system that I

515
00:20:28,629 --> 00:20:33,820
worked on later on I found a neck sexy

516
00:20:30,820 --> 00:20:35,408
Tarun SS sort of because every trick

517
00:20:33,820 --> 00:20:36,850
that I had up my sleeve wasn't working

518
00:20:35,409 --> 00:20:38,620
there was no open redirects there was no

519
00:20:36,850 --> 00:20:41,469
local foul read I couldn't get any HTML

520
00:20:38,620 --> 00:20:43,330
XSS in there and there was no problem

521
00:20:41,470 --> 00:20:43,990
because you also have other ways of

522
00:20:43,330 --> 00:20:47,320
doing this

523
00:20:43,990 --> 00:20:49,480
so again image worked I use the image

524
00:20:47,320 --> 00:20:51,700
tag to point it to my server and sure

525
00:20:49,480 --> 00:20:54,009
enough at leaked that the user agent was

526
00:20:51,700 --> 00:20:55,899
trans version 10 and if you do a Google

527
00:20:54,009 --> 00:20:57,850
search I have prints version 10 and you

528
00:20:55,899 --> 00:21:00,748
put the word exploit next to it the

529
00:20:57,850 --> 00:21:05,469
first thing that comes up as CVE 2018

530
00:21:00,749 --> 00:21:08,590
1985 8 which is a xxe of some sort on

531
00:21:05,470 --> 00:21:11,220
prints v10 and the best part of all this

532
00:21:08,590 --> 00:21:13,360
was I didn't even have to really

533
00:21:11,220 --> 00:21:15,279
reverse-engineer worthless von ones

534
00:21:13,360 --> 00:21:17,350
because another bug bounty hunter Corbin

535
00:21:15,279 --> 00:21:19,419
had already figured this out on his own

536
00:21:17,350 --> 00:21:21,850
so reading his blog post it turns out

537
00:21:19,419 --> 00:21:23,950
that exploiting is a lot easier I just

538
00:21:21,850 --> 00:21:26,320
wasn't looking at this at the right way

539
00:21:23,950 --> 00:21:27,970
so the way it worked is you actually

540
00:21:26,320 --> 00:21:30,220
could use an iframe but it would only

541
00:21:27,970 --> 00:21:32,499
work if it's being pointed to an XML

542
00:21:30,220 --> 00:21:34,570
file and actually renders the content of

543
00:21:32,499 --> 00:21:35,619
the XML so this is a demo that he had

544
00:21:34,570 --> 00:21:37,720
because I couldn't share mine

545
00:21:35,619 --> 00:21:43,149
unfortunately all he's doing is he's

546
00:21:37,720 --> 00:21:45,820
pointing the PDF with iframe to the XML

547
00:21:43,149 --> 00:21:47,758
file and the source code for it is up on

548
00:21:45,820 --> 00:21:52,269
the screen and the XML file actually

549
00:21:47,759 --> 00:21:53,860
calls over to the internal metadata IP

550
00:21:52,269 --> 00:21:55,659
address and that gives us access to the

551
00:21:53,860 --> 00:21:57,490
keys again so very simple and easy you

552
00:21:55,659 --> 00:21:59,350
just have to realize that just because

553
00:21:57,490 --> 00:22:01,029
your traditional two is all I'm working

554
00:21:59,350 --> 00:22:03,129
there are other ways that you can

555
00:22:01,029 --> 00:22:04,090
actually exploit this you just have to

556
00:22:03,129 --> 00:22:07,330
think about it differently

557
00:22:04,090 --> 00:22:09,428
and not always limit yourself to doing

558
00:22:07,330 --> 00:22:12,519
XSS and trying to achieve it through

559
00:22:09,429 --> 00:22:14,590
just HTML on its own the last one and

560
00:22:12,519 --> 00:22:16,570
this is one of my favorites is we

561
00:22:14,590 --> 00:22:18,730
actually have this PDF thing we thought

562
00:22:16,570 --> 00:22:20,019
this is this a seraph but turns out it's

563
00:22:18,730 --> 00:22:23,259
not as a start from the PDF generator

564
00:22:20,019 --> 00:22:25,600
it's a template injection of some sort

565
00:22:23,259 --> 00:22:27,400
so what we did was accidentally instead

566
00:22:25,600 --> 00:22:28,719
of doing our traditional it's

567
00:22:27,400 --> 00:22:30,760
and I know a lot of things that I say

568
00:22:28,720 --> 00:22:31,210
happened on accident it's by luck I

569
00:22:30,760 --> 00:22:33,490
guess

570
00:22:31,210 --> 00:22:34,630
we added a payload that there's some

571
00:22:33,490 --> 00:22:36,400
math stuff just to see if there's any

572
00:22:34,630 --> 00:22:38,890
templating and of course the first one

573
00:22:36,400 --> 00:22:42,250
worked we thought this was some sort of

574
00:22:38,890 --> 00:22:45,100
a Java reaction because you know I was

575
00:22:42,250 --> 00:22:46,510
coming back as Java but turns out Cody

576
00:22:45,100 --> 00:22:49,030
had actually dealt with this in the past

577
00:22:46,510 --> 00:22:52,030
so let me show it showed this to Cody he

578
00:22:49,030 --> 00:22:53,980
came back and gave us a few payloads to

579
00:22:52,030 --> 00:22:56,230
run and then we when we did Selleck last

580
00:22:53,980 --> 00:22:57,970
name in return PDF you context so we

581
00:22:56,230 --> 00:23:00,010
could confirm we can run some sort of a

582
00:22:57,970 --> 00:23:03,520
code on here we just were not looking at

583
00:23:00,010 --> 00:23:06,910
this the right way again we were just so

584
00:23:03,520 --> 00:23:08,350
focused on XSS through a PDF to access

585
00:23:06,910 --> 00:23:11,290
internal stuff that we weren't thinking

586
00:23:08,350 --> 00:23:13,899
about templating and actually out sample

587
00:23:11,290 --> 00:23:16,600
injections so easy enough we asked her

588
00:23:13,900 --> 00:23:18,910
this to RCE this is again the styling

589
00:23:16,600 --> 00:23:21,100
tag that I showed earlier we give her

590
00:23:18,910 --> 00:23:23,320
some random stuff and then we gave it

591
00:23:21,100 --> 00:23:27,490
the command LS and sure enough as you

592
00:23:23,320 --> 00:23:29,110
expected it returned another piece of

593
00:23:27,490 --> 00:23:30,970
information that was the directory

594
00:23:29,110 --> 00:23:33,699
listing where the PDF was being

595
00:23:30,970 --> 00:23:36,780
generated so again don't limit yourself

596
00:23:33,700 --> 00:23:39,040
to just SSL enough when it comes down to

597
00:23:36,780 --> 00:23:41,980
PDF generators you know that should be

598
00:23:39,040 --> 00:23:43,990
your first go-to but it's not always the

599
00:23:41,980 --> 00:23:45,520
only solution try other things like xxe

600
00:23:43,990 --> 00:23:48,150
try template injection and see if you

601
00:23:45,520 --> 00:23:50,679
can get other entry points into the PDF

602
00:23:48,150 --> 00:23:53,110
to make it do whatever you whatever

603
00:23:50,679 --> 00:23:55,840
behavior that you need it to do and of

604
00:23:53,110 --> 00:23:57,040
course that comes with profit and tons

605
00:23:55,840 --> 00:23:59,919
of tons of money if you're doing these

606
00:23:57,040 --> 00:24:01,780
for bug bounty programs out of the stock

607
00:23:59,920 --> 00:24:04,030
came out a couple of good and cool tools

608
00:24:01,780 --> 00:24:07,178
that Cody wrote first one is the HTTP

609
00:24:04,030 --> 00:24:12,040
rebind this is the exact tool that we

610
00:24:07,179 --> 00:24:13,390
use for a snapchat POC that I then I

611
00:24:12,040 --> 00:24:14,770
shared earlier if you don't want to

612
00:24:13,390 --> 00:24:17,620
write your own script that does that you

613
00:24:14,770 --> 00:24:21,370
can use this and we have made sure it

614
00:24:17,620 --> 00:24:23,020
works for GCP AWS and Azure as well the

615
00:24:21,370 --> 00:24:25,449
next one that we put out together as a

616
00:24:23,020 --> 00:24:29,440
sort of test this is just all-in-one

617
00:24:25,450 --> 00:24:32,429
xsrf toolkit you point the vulnerable

618
00:24:29,440 --> 00:24:35,230
endpoint or the PDF generator to this

619
00:24:32,429 --> 00:24:37,090
instance and what it does is it throws a

620
00:24:35,230 --> 00:24:38,470
ton of payloads outta to see which one's

621
00:24:37,090 --> 00:24:39,810
work and which one doesn't and if you

622
00:24:38,470 --> 00:24:42,540
post information they will let

623
00:24:39,810 --> 00:24:44,399
no I personally don't use any tooling

624
00:24:42,540 --> 00:24:46,740
for SSR enough but I know Kody has

625
00:24:44,400 --> 00:24:49,620
pretty much rode every possible way of

626
00:24:46,740 --> 00:24:52,440
exporting xsrf into this thing and if

627
00:24:49,620 --> 00:24:54,330
you don't want to use the SSR of chest

628
00:24:52,440 --> 00:24:56,460
comm instance where he has put it online

629
00:24:54,330 --> 00:24:57,960
you can actually download it I'm growing

630
00:24:56,460 --> 00:24:59,460
your own web server and use it as well

631
00:24:57,960 --> 00:25:02,730
so yeah both the option of using his

632
00:24:59,460 --> 00:25:06,290
service or just setting up your own to

633
00:25:02,730 --> 00:25:08,910
do a recap SS ahrefs can be dangerous

634
00:25:06,290 --> 00:25:10,139
sometimes takes a long long time so I

635
00:25:08,910 --> 00:25:11,640
understand how these things work

636
00:25:10,140 --> 00:25:14,010
for example easy print took me about

637
00:25:11,640 --> 00:25:15,780
three months to piece together because

638
00:25:14,010 --> 00:25:17,910
it also required me to use some random

639
00:25:15,780 --> 00:25:20,280
services if you see a PDF generator

640
00:25:17,910 --> 00:25:22,910
knowing that a ten-time is vulnerable in

641
00:25:20,280 --> 00:25:25,920
a lot of cases it may not be obvious but

642
00:25:22,910 --> 00:25:28,410
you have to find the entry point so find

643
00:25:25,920 --> 00:25:29,580
out where can you put any user input the

644
00:25:28,410 --> 00:25:31,380
different places where you can put your

645
00:25:29,580 --> 00:25:33,030
input and check every single one of

646
00:25:31,380 --> 00:25:35,370
those for HTML injection and tap an

647
00:25:33,030 --> 00:25:36,960
injection and see which one's work XSS

648
00:25:35,370 --> 00:25:38,729
and Oberon or X and all those other

649
00:25:36,960 --> 00:25:42,360
exploits could also be used in this case

650
00:25:38,730 --> 00:25:45,090
so I think about your entire I didn't

651
00:25:42,360 --> 00:25:47,070
entire workflow should be around owning

652
00:25:45,090 --> 00:25:49,230
a PDF generator instead of the actual

653
00:25:47,070 --> 00:25:50,939
web app and just because you get an

654
00:25:49,230 --> 00:25:52,650
excess if it doesn't work on the actual

655
00:25:50,940 --> 00:25:54,360
application it doesn't mean that it

656
00:25:52,650 --> 00:25:56,100
won't get transferred over to the PDF

657
00:25:54,360 --> 00:25:58,889
there's been a number of times where I

658
00:25:56,100 --> 00:26:00,570
put HTML on a website in my profile for

659
00:25:58,890 --> 00:26:02,250
example for my name it doesn't render on

660
00:26:00,570 --> 00:26:04,409
this side but I go to the PDF sure

661
00:26:02,250 --> 00:26:06,390
enough it was rendered in the PDF so

662
00:26:04,410 --> 00:26:07,560
look out for those disable JavaScript we

663
00:26:06,390 --> 00:26:10,530
don't need it I don't know why you would

664
00:26:07,560 --> 00:26:12,090
want javascript in PDFs great create

665
00:26:10,530 --> 00:26:14,070
some really strong whitelisting and then

666
00:26:12,090 --> 00:26:16,560
of course properly configure your cloud

667
00:26:14,070 --> 00:26:19,169
instances to minimize the impact and

668
00:26:16,560 --> 00:26:22,200
last but not least if you are a security

669
00:26:19,170 --> 00:26:24,000
engineer behind a bug bounty program be

670
00:26:22,200 --> 00:26:26,130
nice to hackers we're just here to earn

671
00:26:24,000 --> 00:26:28,650
your stuff and put you on blast I'm just

672
00:26:26,130 --> 00:26:30,480
kidding I'm just reporting you know want

673
00:26:28,650 --> 00:26:32,310
to report to you and make your stuff

674
00:26:30,480 --> 00:26:33,930
more secure so please please please be

675
00:26:32,310 --> 00:26:36,419
nice to all the hackers that are trying

676
00:26:33,930 --> 00:26:39,240
to get in touch with you and also not

677
00:26:36,420 --> 00:26:41,400
least big thank you to Starcraft for

678
00:26:39,240 --> 00:26:43,350
having me I appreciate you guys letting

679
00:26:41,400 --> 00:26:46,200
me be part of this and also a big thank

680
00:26:43,350 --> 00:26:48,300
you to orange ELISA her sobs I had taken

681
00:26:46,200 --> 00:26:51,370
and CDO for letting me use some other

682
00:26:48,300 --> 00:26:53,408
content throughout this presentation

683
00:26:51,370 --> 00:26:55,149
that's it for me if you guys have any

684
00:26:53,409 --> 00:26:58,330
questions again I'm on Twitter

685
00:26:55,149 --> 00:27:01,799
feel free to DM me or at me I'm also on

686
00:26:58,330 --> 00:27:03,309
discord and I'll be watching this

687
00:27:01,799 --> 00:27:05,649
throughout the day

688
00:27:03,309 --> 00:27:07,899
thanks so much awesome thanks so much

689
00:27:05,649 --> 00:27:10,209
dude that was great some excellent tips

690
00:27:07,899 --> 00:27:14,080
there for chaining bugs which is

691
00:27:10,210 --> 00:27:15,610
something I guess it's been noted in a

692
00:27:14,080 --> 00:27:17,799
lot of bug bounty programs so I'm not

693
00:27:15,610 --> 00:27:22,439
going those I was totally awesome

694
00:27:17,799 --> 00:27:28,779
do we have any quick questions before

695
00:27:22,440 --> 00:27:30,820
does anyone in the switch I had a DM

696
00:27:28,779 --> 00:27:32,350
coming just now asking if my slides are

697
00:27:30,820 --> 00:27:32,799
public if you go to my profile on

698
00:27:32,350 --> 00:27:34,990
Twitter

699
00:27:32,799 --> 00:27:36,279
it should be on there somewhere I'll

700
00:27:34,990 --> 00:27:38,200
also try and put on my website I think

701
00:27:36,279 --> 00:27:39,460
they're on my website as well I don't

702
00:27:38,200 --> 00:27:40,809
know if you guys plan on posting their

703
00:27:39,460 --> 00:27:45,129
videos but that was another question

704
00:27:40,809 --> 00:27:52,539
that came yep yeah we do can we do Oh

705
00:27:45,129 --> 00:27:55,480
once again actually cool what are good

706
00:27:52,539 --> 00:27:56,799
in to sort of end points to tribe apart

707
00:27:55,480 --> 00:27:58,659
from the metadata in point you can

708
00:27:56,799 --> 00:28:00,519
always just scan every single internal

709
00:27:58,659 --> 00:28:04,119
IP address right like ten dot and you

710
00:28:00,519 --> 00:28:06,100
just you can do that through using burp

711
00:28:04,119 --> 00:28:08,740
suite or whatever other tools you use um

712
00:28:06,100 --> 00:28:10,928
I always go to github and look for an

713
00:28:08,740 --> 00:28:12,549
internal corporate domain so I have to

714
00:28:10,929 --> 00:28:14,799
have something like see I got courtside

715
00:28:12,549 --> 00:28:16,330
comm that's the first thing I'm going to

716
00:28:14,799 --> 00:28:18,850
hit so those are things that you can

717
00:28:16,330 --> 00:28:20,350
also look get hub is a really good way

718
00:28:18,850 --> 00:28:22,119
to find internal host names and IP

719
00:28:20,350 --> 00:28:26,799
address says when it comes down to

720
00:28:22,119 --> 00:28:28,570
exercise well you mentioned shops in you

721
00:28:26,799 --> 00:28:39,129
thank you my subs has also put out some

722
00:28:28,570 --> 00:28:41,230
really cool ways to encourage you to do

723
00:28:39,129 --> 00:28:44,469
it cool researcher on the JIRA

724
00:28:41,230 --> 00:28:46,600
confluence exploits and that's kind of

725
00:28:44,470 --> 00:28:48,309
why you know I've got interest in the

726
00:28:46,600 --> 00:28:50,490
whole JIRA conference exploitation as

727
00:28:48,309 --> 00:28:50,490
well

728
00:28:54,810 --> 00:29:02,370
oh yeah thanks Dobbs liquor coming in

729
00:29:00,120 --> 00:29:04,050
and hanging out that was really cool I

730
00:29:02,370 --> 00:29:11,550
really liked your demo video was very

731
00:29:04,050 --> 00:29:14,430
stylish yeah yeah thanks for coming to

732
00:29:11,550 --> 00:29:17,070
hang out so next we got Ilya who's going

733
00:29:14,430 --> 00:29:19,370
to be talking about some really cool

734
00:29:17,070 --> 00:29:19,370
stuff

