1
00:00:00,000 --> 00:00:05,730
this is<font color="#CCCCCC"> Kevin</font><font color="#E5E5E5"> Sheldrake</font><font color="#CCCCCC"> I've seen Kevin</font>

2
00:00:03,270 --> 00:00:08,000
<font color="#E5E5E5">speaker</font><font color="#CCCCCC"> a bunch of times the interesting</font>

3
00:00:05,730 --> 00:00:11,849
guy has a lot<font color="#CCCCCC"> of interesting security</font>

4
00:00:08,000 --> 00:00:14,400
<font color="#E5E5E5">knowledge and practices and he's decided</font>

5
00:00:11,849 --> 00:00:16,590
to<font color="#E5E5E5"> apply that to some more accessible</font>

6
00:00:14,400 --> 00:00:18,180
technology here and he's<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to talk</font>

7
00:00:16,590 --> 00:00:21,800
<font color="#E5E5E5">to you about taking</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> the world with</font>

8
00:00:18,180 --> 00:00:21,800
scratch so please welcome Kevin

9
00:00:22,430 --> 00:00:25,559
[Music]

10
00:00:25,699 --> 00:00:33,360
<font color="#E5E5E5">thank you very much thank you</font><font color="#CCCCCC"> very much</font>

11
00:00:29,099 --> 00:00:40,140
<font color="#CCCCCC">I might have my slides appeared on the</font>

12
00:00:33,360 --> 00:00:41,820
screen<font color="#E5E5E5"> it looks very blue from here if</font>

13
00:00:40,140 --> 00:00:51,629
it says taking over the world<font color="#CCCCCC"> of scratch</font>

14
00:00:41,820 --> 00:00:53,730
then we're good<font color="#CCCCCC"> okay that's</font><font color="#E5E5E5"> almost see</font>

15
00:00:51,629 --> 00:00:55,199
when they said<font color="#CCCCCC"> your first on I</font><font color="#E5E5E5"> thought</font>

16
00:00:53,730 --> 00:00:56,750
<font color="#E5E5E5">this is a great</font><font color="#CCCCCC"> idea because</font><font color="#E5E5E5"> I can't be</font>

17
00:00:55,199 --> 00:01:01,349
drunk<font color="#E5E5E5"> at this point of the</font><font color="#CCCCCC"> day</font><font color="#E5E5E5"> and</font>

18
00:00:56,750 --> 00:01:04,049
therefore this talk will go excellent

19
00:01:01,350 --> 00:01:06,540
<font color="#E5E5E5">okay so I am keV</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I'm talking about</font>

20
00:01:04,049 --> 00:01:08,040
<font color="#CCCCCC">taking over</font><font color="#E5E5E5"> the world with scratch</font>

21
00:01:06,540 --> 00:01:09,600
I've been asked if I<font color="#CCCCCC"> could do this</font>

22
00:01:08,040 --> 00:01:12,060
quickly so that<font color="#E5E5E5"> they can gather some</font>

23
00:01:09,600 --> 00:01:13,679
<font color="#E5E5E5">time back during the day so I'll talk</font>

24
00:01:12,060 --> 00:01:16,950
fast but<font color="#E5E5E5"> don't worry come and ask me</font>

25
00:01:13,680 --> 00:01:19,380
<font color="#CCCCCC">questions off words if you like I work</font>

26
00:01:16,950 --> 00:01:21,840
as a hacker<font color="#CCCCCC"> for a company</font><font color="#E5E5E5"> i hack into</font>

27
00:01:19,380 --> 00:01:24,750
<font color="#E5E5E5">things and I research hacking tools</font>

28
00:01:21,840 --> 00:01:29,210
<font color="#CCCCCC">that's my kind of job and in my spare</font>

29
00:01:24,750 --> 00:01:31,829
time I build Lego this is scratch and

30
00:01:29,210 --> 00:01:33,869
what I was<font color="#E5E5E5"> interested in was can</font><font color="#CCCCCC"> we</font>

31
00:01:31,829 --> 00:01:37,199
connect it to say MIDI instruments or

32
00:01:33,869 --> 00:01:39,630
make it talk out loud<font color="#E5E5E5"> or connect it to</font>

33
00:01:37,200 --> 00:01:41,939
Lego<font color="#E5E5E5"> or possibly even use it as a</font>

34
00:01:39,630 --> 00:01:43,320
hacking tool<font color="#E5E5E5"> so that we could hack into</font>

35
00:01:41,939 --> 00:01:45,630
other people's computers on a network

36
00:01:43,320 --> 00:01:47,939
you know what could you actually<font color="#E5E5E5"> do with</font>

37
00:01:45,630 --> 00:01:49,530
scratch was my kind<font color="#E5E5E5"> of thought so</font><font color="#CCCCCC"> I got</font>

38
00:01:47,939 --> 00:01:51,210
to work<font color="#E5E5E5"> on the hacking bit because I</font>

39
00:01:49,530 --> 00:01:53,130
thought<font color="#CCCCCC"> that is</font><font color="#E5E5E5"> the fun bit</font><font color="#CCCCCC"> and managed</font>

40
00:01:51,210 --> 00:01:59,339
<font color="#CCCCCC">to get it published in</font><font color="#E5E5E5"> this article Paco</font>

41
00:01:53,130 --> 00:02:00,960
<font color="#E5E5E5">gtfo issue</font><font color="#CCCCCC"> o</font><font color="#E5E5E5"> X 18</font><font color="#CCCCCC"> you can find my phone</font>

42
00:01:59,340 --> 00:02:02,610
memory<font color="#E5E5E5"> corruption exploits for kids with</font>

43
00:02:00,960 --> 00:02:06,179
scratch<font color="#E5E5E5"> actually made it into the</font>

44
00:02:02,610 --> 00:02:08,399
journal<font color="#E5E5E5"> so I'm very proud and that gives</font>

45
00:02:06,180 --> 00:02:10,349
<font color="#E5E5E5">it some validity but we'll talk about</font>

46
00:02:08,399 --> 00:02:12,480
<font color="#E5E5E5">the other stuff first</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> let's talk</font>

47
00:02:10,348 --> 00:02:13,470
about scratch this is scratchy<font color="#E5E5E5"> or</font>

48
00:02:12,480 --> 00:02:15,810
<font color="#E5E5E5">scratch cat</font>

49
00:02:13,470 --> 00:02:18,330
<font color="#E5E5E5">so few views scratch</font><font color="#CCCCCC"> will be</font><font color="#E5E5E5"> aware</font><font color="#CCCCCC"> of</font>

50
00:02:15,810 --> 00:02:22,280
the scratch cattle<font color="#CCCCCC"> scratchy his</font><font color="#E5E5E5"> will</font>

51
00:02:18,330 --> 00:02:26,790
<font color="#E5E5E5">appear all</font><font color="#CCCCCC"> the way through scratches</font>

52
00:02:22,280 --> 00:02:28,830
<font color="#E5E5E5">developed by MIT there's a couple of</font>

53
00:02:26,790 --> 00:02:30,840
different versions<font color="#CCCCCC"> so</font><font color="#E5E5E5"> version 1.4 still</font>

54
00:02:28,830 --> 00:02:32,280
<font color="#E5E5E5">around and supported version</font><font color="#CCCCCC"> two is the</font>

55
00:02:30,840 --> 00:02:34,440
one that<font color="#E5E5E5"> I use and</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> get an</font>

56
00:02:32,280 --> 00:02:36,210
offline<font color="#CCCCCC"> version of that which is written</font>

57
00:02:34,440 --> 00:02:38,130
<font color="#E5E5E5">in a</font><font color="#CCCCCC"> different technology in version</font><font color="#E5E5E5"> 3</font>

58
00:02:36,210 --> 00:02:40,410
is<font color="#E5E5E5"> on the way the last time I looked it</font>

59
00:02:38,130 --> 00:02:42,769
still wasn't operational but when it

60
00:02:40,410 --> 00:02:45,090
comes<font color="#CCCCCC"> up we've written</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> html5</font><font color="#E5E5E5"> and</font>

61
00:02:42,770 --> 00:02:47,730
JavaScript<font color="#E5E5E5"> and it will</font><font color="#CCCCCC"> probably always</font>

62
00:02:45,090 --> 00:02:49,530
<font color="#E5E5E5">banging and much better it's taken you</font>

63
00:02:47,730 --> 00:02:51,899
know a good<font color="#CCCCCC"> 10 years to get</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> the</font>

64
00:02:49,530 --> 00:02:53,610
<font color="#CCCCCC">first version to the second give it</font>

65
00:02:51,900 --> 00:02:54,540
<font color="#E5E5E5">given some leeway to get to the next one</font>

66
00:02:53,610 --> 00:02:59,070
<font color="#CCCCCC">but it's been</font><font color="#E5E5E5"> around for a long time</font>

67
00:02:54,540 --> 00:03:01,049
scratch normally you do it online<font color="#CCCCCC"> so you</font>

68
00:02:59,070 --> 00:03:02,910
use your<font color="#E5E5E5"> web browser to go to the</font>

69
00:03:01,050 --> 00:03:04,140
scratch website and then you can just

70
00:03:02,910 --> 00:03:07,470
start<font color="#E5E5E5"> typing scratch you can start</font>

71
00:03:04,140 --> 00:03:10,799
scratching as the<font color="#CCCCCC"> terminologies</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> when</font>

72
00:03:07,470 --> 00:03:13,260
my<font color="#E5E5E5"> son wanted a computer</font><font color="#CCCCCC"> he wanted to</font>

73
00:03:10,800 --> 00:03:15,750
<font color="#CCCCCC">upgrade from scratch jr. on</font><font color="#E5E5E5"> the iPad to</font>

74
00:03:13,260 --> 00:03:17,609
scratch on a computer<font color="#CCCCCC"> I decided that the</font>

75
00:03:15,750 --> 00:03:20,100
internet<font color="#E5E5E5"> wasn't quite ready for him and</font>

76
00:03:17,610 --> 00:03:21,390
I should protect the world for my son<font color="#E5E5E5"> so</font>

77
00:03:20,100 --> 00:03:23,250
I didn't give him<font color="#E5E5E5"> into that access but</font>

78
00:03:21,390 --> 00:03:24,540
<font color="#CCCCCC">to in order to</font><font color="#E5E5E5"> give him scratch I found</font>

79
00:03:23,250 --> 00:03:27,709
<font color="#E5E5E5">there's an offline version which will</font>

80
00:03:24,540 --> 00:03:30,600
run<font color="#E5E5E5"> on</font><font color="#CCCCCC"> your computer and</font><font color="#E5E5E5"> that has</font>

81
00:03:27,709 --> 00:03:32,310
experimental HTTP extensions which

82
00:03:30,600 --> 00:03:34,109
always<font color="#E5E5E5"> sounds anything experimental</font>

83
00:03:32,310 --> 00:03:35,630
sounds<font color="#E5E5E5"> exciting so</font><font color="#CCCCCC"> I thought this has</font>

84
00:03:34,110 --> 00:03:38,070
got<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> something worth investigating</font>

85
00:03:35,630 --> 00:03:40,320
<font color="#CCCCCC">we'll talk a bit about what scratch</font>

86
00:03:38,070 --> 00:03:41,970
looks like so<font color="#E5E5E5"> I haven't got a laser</font>

87
00:03:40,320 --> 00:03:43,650
<font color="#CCCCCC">pointer or anything so I'll describe</font>

88
00:03:41,970 --> 00:03:46,680
<font color="#E5E5E5">things but on the left of the screen</font>

89
00:03:43,650 --> 00:03:48,630
<font color="#E5E5E5">you've got the stage which is where your</font>

90
00:03:46,680 --> 00:03:50,340
game or<font color="#CCCCCC"> your application is kind of</font>

91
00:03:48,630 --> 00:03:52,380
running<font color="#CCCCCC"> down the middle you've got all</font>

92
00:03:50,340 --> 00:03:53,940
your tools<font color="#E5E5E5"> all your blocks organized</font>

93
00:03:52,380 --> 00:03:56,070
into<font color="#CCCCCC"> ten categories</font><font color="#E5E5E5"> here we're looking</font>

94
00:03:53,940 --> 00:04:00,359
at motion<font color="#E5E5E5"> blocks so you can move a</font>

95
00:03:56,070 --> 00:04:02,459
sprite turn it around<font color="#E5E5E5"> point it in</font>

96
00:04:00,360 --> 00:04:04,350
<font color="#CCCCCC">particular directions etc etc and</font><font color="#E5E5E5"> then</font>

97
00:04:02,459 --> 00:04:06,239
<font color="#E5E5E5">on the right you've got the code behind</font>

98
00:04:04,350 --> 00:04:08,340
<font color="#E5E5E5">that particular sprite so the sprite</font>

99
00:04:06,239 --> 00:04:11,010
that's selected there is the<font color="#E5E5E5"> turtle this</font>

100
00:04:08,340 --> 00:04:13,200
is the code behind the turtle<font color="#CCCCCC"> that makes</font>

101
00:04:11,010 --> 00:04:15,149
the tell what<font color="#CCCCCC"> its kind of object to</font>

102
00:04:13,200 --> 00:04:17,399
<font color="#CCCCCC">orientating in the fact that</font><font color="#E5E5E5"> every</font>

103
00:04:15,150 --> 00:04:21,418
sprite and the stage itself<font color="#CCCCCC"> all</font><font color="#E5E5E5"> runs</font>

104
00:04:17,399 --> 00:04:24,330
code concurrently and it's kind of

105
00:04:21,418 --> 00:04:26,849
event-driven so you can see each section

106
00:04:24,330 --> 00:04:29,068
of<font color="#E5E5E5"> code starts with an event</font>

107
00:04:26,849 --> 00:04:31,050
most of those events are<font color="#E5E5E5"> when I receive</font>

108
00:04:29,069 --> 00:04:32,610
a particular<font color="#E5E5E5"> message</font><font color="#CCCCCC"> and so there's a</font>

109
00:04:31,050 --> 00:04:34,530
message driven<font color="#E5E5E5"> kind of system</font><font color="#CCCCCC"> way</font>

110
00:04:32,610 --> 00:04:35,699
different objects<font color="#E5E5E5"> concern messages and</font>

111
00:04:34,530 --> 00:04:39,479
different ones<font color="#E5E5E5"> can receive and to know</font>

112
00:04:35,699 --> 00:04:43,169
that<font color="#CCCCCC"> stuff's happened if we look at</font>

113
00:04:39,479 --> 00:04:46,139
<font color="#E5E5E5">another look at the data section of that</font>

114
00:04:43,169 --> 00:04:48,180
sprite<font color="#CCCCCC"> you can see that there's blocks</font>

115
00:04:46,139 --> 00:04:50,789
essentially<font color="#E5E5E5"> for all the different</font>

116
00:04:48,180 --> 00:04:52,349
variables<font color="#E5E5E5"> defined for that sprite now</font>

117
00:04:50,789 --> 00:04:53,909
two of<font color="#CCCCCC"> them</font><font color="#E5E5E5"> a tick that means that</font>

118
00:04:52,349 --> 00:04:56,880
they're visible<font color="#CCCCCC"> on the</font><font color="#E5E5E5"> screen on the</font>

119
00:04:53,910 --> 00:04:58,830
stage<font color="#E5E5E5"> so apple count and coin count or</font>

120
00:04:56,880 --> 00:05:03,150
actually the<font color="#CCCCCC"> 2-0 is underneath the star</font>

121
00:04:58,830 --> 00:05:05,159
and the<font color="#E5E5E5"> Apple on the left and those</font>

122
00:05:03,150 --> 00:05:08,698
<font color="#E5E5E5">variables can be local to</font><font color="#CCCCCC"> the sprite or</font>

123
00:05:05,159 --> 00:05:11,610
<font color="#E5E5E5">global to the whole</font><font color="#CCCCCC"> application so if we</font>

124
00:05:08,699 --> 00:05:13,500
move on to a different sprite the the

125
00:05:11,610 --> 00:05:15,150
maze<font color="#CCCCCC"> you can see</font><font color="#E5E5E5"> some of</font><font color="#CCCCCC"> the variables</font>

126
00:05:13,500 --> 00:05:17,599
stay the same<font color="#E5E5E5"> if I flip between you can</font>

127
00:05:15,150 --> 00:05:20,909
see only the<font color="#CCCCCC"> apple count and coin count</font>

128
00:05:17,599 --> 00:05:22,740
<font color="#E5E5E5">are common between them that's because</font>

129
00:05:20,909 --> 00:05:24,030
they're<font color="#CCCCCC"> global variables</font><font color="#E5E5E5"> not because</font>

130
00:05:22,740 --> 00:05:25,860
they're<font color="#CCCCCC"> ticks</font><font color="#E5E5E5"> tick</font><font color="#CCCCCC"> just means that</font>

131
00:05:24,030 --> 00:05:27,539
<font color="#E5E5E5">they're visible but they're global so</font>

132
00:05:25,860 --> 00:05:31,199
every sprite can<font color="#E5E5E5"> access them read and</font>

133
00:05:27,539 --> 00:05:32,820
write to<font color="#E5E5E5"> them otherwise your variables</font>

134
00:05:31,199 --> 00:05:37,199
<font color="#E5E5E5">are local to the particular sprite or</font>

135
00:05:32,820 --> 00:05:38,969
<font color="#E5E5E5">the stage and</font><font color="#CCCCCC"> you see</font><font color="#E5E5E5"> that they have</font>

136
00:05:37,199 --> 00:05:42,000
<font color="#CCCCCC">different codes</font><font color="#E5E5E5"> each sprite has its own</font>

137
00:05:38,969 --> 00:05:44,550
set<font color="#CCCCCC"> of code so what we can</font><font color="#E5E5E5"> say about</font>

138
00:05:42,000 --> 00:05:46,469
scratches that<font color="#E5E5E5"> we have variables which</font>

139
00:05:44,550 --> 00:05:48,780
are<font color="#E5E5E5"> either global to the entire app or</font>

140
00:05:46,469 --> 00:05:50,699
<font color="#CCCCCC">they're local to a particular sprite and</font>

141
00:05:48,780 --> 00:05:53,309
we have blocks which<font color="#E5E5E5"> are basically</font>

142
00:05:50,699 --> 00:05:55,530
procedures so they don't have any return

143
00:05:53,310 --> 00:05:57,630
values so everything you do is by side

144
00:05:55,530 --> 00:05:59,340
effects<font color="#CCCCCC"> so you're modifying variables</font>

145
00:05:57,630 --> 00:06:00,449
that are like global to<font color="#E5E5E5"> the sprite or</font>

146
00:05:59,340 --> 00:06:02,489
you're modifying variables that<font color="#CCCCCC"> are</font>

147
00:06:00,449 --> 00:06:03,690
<font color="#E5E5E5">global to</font><font color="#CCCCCC"> the whole application</font><font color="#E5E5E5"> there's</font>

148
00:06:02,490 --> 00:06:06,539
no kind<font color="#E5E5E5"> of like I'm</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to call</font>

149
00:06:03,690 --> 00:06:07,979
something and get back an<font color="#CCCCCC"> answer you</font>

150
00:06:06,539 --> 00:06:09,330
kind of have<font color="#CCCCCC"> to set a variable as a side</font>

151
00:06:07,979 --> 00:06:13,919
<font color="#CCCCCC">effect and they read</font><font color="#E5E5E5"> this read the</font>

152
00:06:09,330 --> 00:06:16,530
<font color="#E5E5E5">variable which makes it a bit weird so I</font>

153
00:06:13,919 --> 00:06:18,030
<font color="#E5E5E5">mentioned experimental HTTP extensions</font>

154
00:06:16,530 --> 00:06:21,630
so don't worry<font color="#CCCCCC"> about the word</font>

155
00:06:18,030 --> 00:06:22,710
experimental it does actually work the

156
00:06:21,630 --> 00:06:24,449
way<font color="#E5E5E5"> you get</font><font color="#CCCCCC"> access to that</font><font color="#E5E5E5"> on the</font>

157
00:06:22,710 --> 00:06:26,340
offline<font color="#E5E5E5"> version</font><font color="#CCCCCC"> normally you</font><font color="#E5E5E5"> would click</font>

158
00:06:24,449 --> 00:06:28,400
file to get<font color="#E5E5E5"> to the file menu if you</font>

159
00:06:26,340 --> 00:06:31,198
shift click it you get this<font color="#E5E5E5"> super-secret</font>

160
00:06:28,400 --> 00:06:33,719
<font color="#E5E5E5">file menu which includes among other</font>

161
00:06:31,199 --> 00:06:36,180
things<font color="#CCCCCC"> import experiment</font><font color="#E5E5E5"> actually to be</font>

162
00:06:33,719 --> 00:06:39,790
extension<font color="#CCCCCC"> though it's not a widely</font>

163
00:06:36,180 --> 00:06:43,060
documented API<font color="#E5E5E5"> but it is documented you</font>

164
00:06:39,790 --> 00:06:44,710
<font color="#E5E5E5">and get to it the way it works is you</font>

165
00:06:43,060 --> 00:06:46,810
end up<font color="#CCCCCC"> running a web server on</font><font color="#E5E5E5"> your</font>

166
00:06:44,710 --> 00:06:48,430
<font color="#CCCCCC">local machine on a particular port it</font>

167
00:06:46,810 --> 00:06:51,640
has to be on<font color="#CCCCCC"> your local</font><font color="#E5E5E5"> machine it can't</font>

168
00:06:48,430 --> 00:06:53,170
be across<font color="#E5E5E5"> the network</font><font color="#CCCCCC"> and that general</font>

169
00:06:51,640 --> 00:06:55,300
<font color="#CCCCCC">will generate</font><font color="#E5E5E5"> a s2e</font>

170
00:06:53,170 --> 00:06:57,130
<font color="#E5E5E5">a scratch</font><font color="#CCCCCC"> two extension file which</font>

171
00:06:55,300 --> 00:06:58,600
<font color="#CCCCCC">describes the extension and that's the</font>

172
00:06:57,130 --> 00:07:00,880
thing we're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> loan for me important</font>

173
00:06:58,600 --> 00:07:03,280
the<font color="#CCCCCC"> experimental extension and then when</font>

174
00:07:00,880 --> 00:07:05,440
you that will<font color="#E5E5E5"> give you extra blocks in</font>

175
00:07:03,280 --> 00:07:08,650
the more<font color="#CCCCCC"> blocks section when you use</font>

176
00:07:05,440 --> 00:07:11,680
those blocks<font color="#E5E5E5"> he'll make an HTTP request</font>

177
00:07:08,650 --> 00:07:13,719
<font color="#CCCCCC">to that localhost</font><font color="#E5E5E5"> web server</font><font color="#CCCCCC"> to say I</font>

178
00:07:11,680 --> 00:07:16,690
want<font color="#E5E5E5"> you to run this block with these</font>

179
00:07:13,720 --> 00:07:18,460
<font color="#E5E5E5">parameters in order to access the</font>

180
00:07:16,690 --> 00:07:21,790
variables<font color="#CCCCCC"> that the extension offers up</font>

181
00:07:18,460 --> 00:07:25,539
it pulls it 30<font color="#E5E5E5"> times a second over this</font>

182
00:07:21,790 --> 00:07:27,340
HTTP interface which<font color="#CCCCCC"> is mad but it</font>

183
00:07:25,540 --> 00:07:28,690
that's kind of the way it does it

184
00:07:27,340 --> 00:07:29,650
there's no other<font color="#CCCCCC"> way of</font><font color="#E5E5E5"> getting</font><font color="#CCCCCC"> there</font>

185
00:07:28,690 --> 00:07:32,170
because<font color="#E5E5E5"> everything</font><font color="#CCCCCC"> is a procedure</font>

186
00:07:29,650 --> 00:07:37,450
there's<font color="#E5E5E5"> no return value so it kind of</font>

187
00:07:32,170 --> 00:07:39,690
<font color="#E5E5E5">just keeps on</font><font color="#CCCCCC"> Polly the so kind</font><font color="#E5E5E5"> of like</font>

188
00:07:37,450 --> 00:07:42,190
pictorial<font color="#E5E5E5"> it kind of works</font><font color="#CCCCCC"> like this you</font>

189
00:07:39,690 --> 00:07:43,870
<font color="#CCCCCC">could</font><font color="#E5E5E5"> make scratch</font><font color="#CCCCCC"> run a procedure</font>

190
00:07:42,190 --> 00:07:45,760
<font color="#E5E5E5">that's in your extension</font><font color="#CCCCCC"> and that</font><font color="#E5E5E5"> could</font>

191
00:07:43,870 --> 00:07:47,770
<font color="#E5E5E5">modify a variable as a</font><font color="#CCCCCC"> side-effect and</font>

192
00:07:45,760 --> 00:07:48,969
then it will pull those variables<font color="#E5E5E5"> so at</font>

193
00:07:47,770 --> 00:07:50,620
times a second<font color="#E5E5E5"> so the variable will have</font>

194
00:07:48,970 --> 00:07:52,180
changed<font color="#E5E5E5"> almost instantaneously in your</font>

195
00:07:50,620 --> 00:07:55,030
scratch environment and then<font color="#E5E5E5"> you can act</font>

196
00:07:52,180 --> 00:07:56,620
upon<font color="#E5E5E5"> the value that got changed</font><font color="#CCCCCC"> you</font>

197
00:07:55,030 --> 00:07:58,960
might have to<font color="#E5E5E5"> have</font><font color="#CCCCCC"> some state variables</font>

198
00:07:56,620 --> 00:08:00,970
in order<font color="#CCCCCC"> to know when something has</font>

199
00:07:58,960 --> 00:08:05,020
changed in<font color="#CCCCCC"> order to know to read the</font>

200
00:08:00,970 --> 00:08:07,180
answer for example now this<font color="#E5E5E5"> sort of</font>

201
00:08:05,020 --> 00:08:09,310
<font color="#CCCCCC">thing this is useful for is robot arms</font><font color="#E5E5E5"> I</font>

202
00:08:07,180 --> 00:08:10,900
think that's what all scratch extension

203
00:08:09,310 --> 00:08:12,340
frameworks are kind<font color="#E5E5E5"> of designed for and</font>

204
00:08:10,900 --> 00:08:14,109
the idea there is that<font color="#CCCCCC"> you'll move your</font>

205
00:08:12,340 --> 00:08:16,140
<font color="#CCCCCC">the</font><font color="#E5E5E5"> moving the</font><font color="#CCCCCC"> are time moving</font><font color="#E5E5E5"> the</font>

206
00:08:14,110 --> 00:08:19,270
<font color="#E5E5E5">motors that makes the arm move which</font>

207
00:08:16,140 --> 00:08:21,099
have no return values<font color="#E5E5E5"> it's just</font><font color="#CCCCCC"> term</font>

208
00:08:19,270 --> 00:08:23,349
motive on term emotive off change speed

209
00:08:21,100 --> 00:08:24,910
<font color="#E5E5E5">except for</font><font color="#CCCCCC"> a change angle</font><font color="#E5E5E5"> and then we</font>

210
00:08:23,350 --> 00:08:27,580
have things like limit switches which

211
00:08:24,910 --> 00:08:28,990
are the reported variables and again you

212
00:08:27,580 --> 00:08:31,570
want<font color="#E5E5E5"> to know when you hit</font><font color="#CCCCCC"> a limit switch</font>

213
00:08:28,990 --> 00:08:33,370
pretty soon<font color="#E5E5E5"> hence the idea of</font><font color="#CCCCCC"> pauling 30</font>

214
00:08:31,570 --> 00:08:34,780
times a second<font color="#E5E5E5"> so you can sort of see</font>

215
00:08:33,370 --> 00:08:39,130
<font color="#CCCCCC">that that's what this is sort</font><font color="#E5E5E5"> of built</font>

216
00:08:34,780 --> 00:08:41,559
for but I thought<font color="#E5E5E5"> well if I kind of plug</font>

217
00:08:39,130 --> 00:08:44,049
in a<font color="#CCCCCC"> midi instrument</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> create</font>

218
00:08:41,559 --> 00:08:46,209
blocks that turn on notes or turn off

219
00:08:44,049 --> 00:08:48,729
notes or send change events with that

220
00:08:46,210 --> 00:08:51,190
could<font color="#E5E5E5"> you do that</font><font color="#CCCCCC"> well we did and it's</font>

221
00:08:48,730 --> 00:08:51,529
it works and it's not the best<font color="#E5E5E5"> secrets</font>

222
00:08:51,190 --> 00:08:54,860
are<font color="#E5E5E5"> in the</font>

223
00:08:51,529 --> 00:08:57,560
world<font color="#E5E5E5"> but you can buy a sequencer in</font>

224
00:08:54,860 --> 00:08:59,720
scratch<font color="#CCCCCC"> and more interestingly</font><font color="#E5E5E5"> if you're</font>

225
00:08:57,560 --> 00:09:01,910
<font color="#CCCCCC">wearing games in scratch you could plug</font>

226
00:08:59,720 --> 00:09:03,499
in<font color="#E5E5E5"> something like an</font><font color="#CCCCCC"> mu 50 or some other</font>

227
00:09:01,910 --> 00:09:05,509
kind of<font color="#E5E5E5"> outboard module you can pick up</font>

228
00:09:03,499 --> 00:09:07,610
<font color="#E5E5E5">on eBay</font><font color="#CCCCCC"> and you can have really great</font>

229
00:09:05,509 --> 00:09:10,249
sound effects<font color="#E5E5E5"> for</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> games you might</font>

230
00:09:07,610 --> 00:09:12,639
<font color="#E5E5E5">not be we need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> like program music but</font>

231
00:09:10,249 --> 00:09:15,370
you might want a few bangs and zaps<font color="#E5E5E5"> and</font>

232
00:09:12,639 --> 00:09:18,199
helicopter noises and stuff

233
00:09:15,370 --> 00:09:20,059
equally<font color="#E5E5E5"> could you make</font><font color="#CCCCCC"> it talk that is</font>

234
00:09:18,199 --> 00:09:21,349
another thing<font color="#E5E5E5"> my laptop</font><font color="#CCCCCC"> can't talk why</font>

235
00:09:20,059 --> 00:09:22,629
can't we have scratch actually speaking

236
00:09:21,350 --> 00:09:25,999
<font color="#E5E5E5">out loud</font>

237
00:09:22,629 --> 00:09:28,670
another one was<font color="#CCCCCC"> Lego so we have a lot of</font>

238
00:09:25,999 --> 00:09:31,459
Lego me and my son and<font color="#CCCCCC"> we have motors</font>

239
00:09:28,670 --> 00:09:32,420
and infrared controllers and that was

240
00:09:31,459 --> 00:09:35,300
kind of one of the places where we

241
00:09:32,420 --> 00:09:36,889
started which was could<font color="#CCCCCC"> we get scratched</font>

242
00:09:35,300 --> 00:09:39,109
<font color="#E5E5E5">to control those motives because that</font>

243
00:09:36,889 --> 00:09:40,490
would be like<font color="#E5E5E5"> quite a lot of fun getting</font>

244
00:09:39,110 --> 00:09:42,189
outside of<font color="#E5E5E5"> scratch actually making</font>

245
00:09:40,490 --> 00:09:44,540
<font color="#E5E5E5">something in the real world</font><font color="#CCCCCC"> happen</font><font color="#E5E5E5"> and</font>

246
00:09:42,189 --> 00:09:47,360
finally can<font color="#CCCCCC"> we turn scratch</font><font color="#E5E5E5"> into a</font>

247
00:09:44,540 --> 00:09:50,930
hacking tool<font color="#E5E5E5"> and break into somebody</font>

248
00:09:47,360 --> 00:09:53,029
else's<font color="#E5E5E5"> computer</font><font color="#CCCCCC"> because why not you know</font>

249
00:09:50,930 --> 00:09:57,709
if technology is<font color="#E5E5E5"> there to be abused</font>

250
00:09:53,029 --> 00:09:59,120
<font color="#E5E5E5">let's let's abuse it you know</font><font color="#CCCCCC"> I mean of</font>

251
00:09:57,709 --> 00:10:00,888
<font color="#CCCCCC">course the</font><font color="#E5E5E5"> fun thing for</font><font color="#CCCCCC"> that is</font><font color="#E5E5E5"> if</font>

252
00:09:59,120 --> 00:10:03,170
you're writing data<font color="#E5E5E5"> to</font><font color="#CCCCCC"> a socket</font><font color="#E5E5E5"> that</font>

253
00:10:00,889 --> 00:10:05,899
<font color="#E5E5E5">could be a procedure if you're</font><font color="#CCCCCC"> reading</font>

254
00:10:03,170 --> 00:10:07,250
data<font color="#E5E5E5"> from a socket you kind of do it as</font>

255
00:10:05,899 --> 00:10:09,050
a procedure which means reading<font color="#CCCCCC"> this</font>

256
00:10:07,250 --> 00:10:10,730
socket<font color="#E5E5E5"> and put the</font><font color="#CCCCCC"> answer in a variable</font>

257
00:10:09,050 --> 00:10:12,349
<font color="#E5E5E5">and</font><font color="#CCCCCC"> then set a state variable to say</font>

258
00:10:10,730 --> 00:10:14,360
you've done<font color="#E5E5E5"> it and then check</font><font color="#CCCCCC"> the state</font>

259
00:10:12,350 --> 00:10:15,649
variable to see that your answer<font color="#E5E5E5"> is in</font>

260
00:10:14,360 --> 00:10:17,660
the buffer<font color="#E5E5E5"> and then read the buffer to</font>

261
00:10:15,649 --> 00:10:21,610
see what you got back<font color="#CCCCCC"> post 30 times a</font>

262
00:10:17,660 --> 00:10:24,980
second it's a perfectly sane framework

263
00:10:21,610 --> 00:10:26,329
so now<font color="#CCCCCC"> what in these extensions is</font>

264
00:10:24,980 --> 00:10:28,699
actually quite<font color="#CCCCCC"> easy because someone</font>

265
00:10:26,329 --> 00:10:32,120
<font color="#CCCCCC">wrote a python module called block X and</font>

266
00:10:28,699 --> 00:10:33,620
you<font color="#E5E5E5"> can get that from a github it's the</font>

267
00:10:32,120 --> 00:10:34,879
best way to install<font color="#E5E5E5"> it</font><font color="#CCCCCC"> I wouldn't</font>

268
00:10:33,620 --> 00:10:36,649
install it<font color="#E5E5E5"> from any operating system</font>

269
00:10:34,879 --> 00:10:41,079
packages I would literally<font color="#E5E5E5"> go to the</font>

270
00:10:36,649 --> 00:10:46,790
github download that or clone that

271
00:10:41,079 --> 00:10:48,349
repository and when the<font color="#E5E5E5"> set up I and it</font>

272
00:10:46,790 --> 00:10:50,139
will install and<font color="#E5E5E5"> it's and it works</font>

273
00:10:48,350 --> 00:10:53,120
perfectly<font color="#CCCCCC"> any other way I've found</font>

274
00:10:50,139 --> 00:10:54,980
doesn't work so well<font color="#E5E5E5"> but</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> it says on</font>

275
00:10:53,120 --> 00:10:56,899
the on their github<font color="#CCCCCC"> that this is</font>

276
00:10:54,980 --> 00:10:58,009
abandoned<font color="#CCCCCC"> where like no one is</font>

277
00:10:56,899 --> 00:11:00,610
supporting<font color="#CCCCCC"> this in</font><font color="#E5E5E5"> you know but it</font>

278
00:10:58,009 --> 00:11:03,110
actually<font color="#E5E5E5"> works so honestly it's useful</font>

279
00:11:00,610 --> 00:11:04,100
and<font color="#E5E5E5"> they had link to a tutorial which</font>

280
00:11:03,110 --> 00:11:06,019
they<font color="#E5E5E5"> explain</font><font color="#CCCCCC"> how to do</font>

281
00:11:04,100 --> 00:11:08,720
everything I'm going<font color="#E5E5E5"> to touch on briefly</font>

282
00:11:06,019 --> 00:11:10,870
as<font color="#E5E5E5"> we go so this is kind</font><font color="#CCCCCC"> of how an</font>

283
00:11:08,720 --> 00:11:13,579
extension looks in Python

284
00:11:10,870 --> 00:11:16,639
so what at the top we're importing that

285
00:11:13,579 --> 00:11:18,380
<font color="#E5E5E5">extension block</font><font color="#CCCCCC"> next</font><font color="#E5E5E5"> the green bit is</font>

286
00:11:16,639 --> 00:11:20,420
our class that<font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> define</font>

287
00:11:18,380 --> 00:11:23,899
which is going<font color="#E5E5E5"> to be all of our</font>

288
00:11:20,420 --> 00:11:25,939
extensions program program essentially

289
00:11:23,899 --> 00:11:27,380
so variables that we're going<font color="#E5E5E5"> to expose</font>

290
00:11:25,940 --> 00:11:29,870
procedures that we're going<font color="#E5E5E5"> to let</font>

291
00:11:27,380 --> 00:11:32,870
scratch<font color="#E5E5E5"> call the yellow line there's a</font>

292
00:11:29,870 --> 00:11:35,449
scripture<font color="#CCCCCC"> that it describes the</font>

293
00:11:32,870 --> 00:11:38,000
extension to scratch over<font color="#E5E5E5"> the API and</font>

294
00:11:35,449 --> 00:11:40,310
then<font color="#E5E5E5"> the next bit of the bottom links</font>

295
00:11:38,000 --> 00:11:42,050
the descriptor to the object and<font color="#E5E5E5"> then</font>

296
00:11:40,310 --> 00:11:45,859
runs it so that appears as a web service

297
00:11:42,050 --> 00:11:47,959
<font color="#E5E5E5">this scratch can talk to it so I'll give</font>

298
00:11:45,860 --> 00:11:49,519
<font color="#CCCCCC">you an example of why of how easy that</font>

299
00:11:47,959 --> 00:11:50,989
actually is that<font color="#E5E5E5"> all looks a bit</font>

300
00:11:49,519 --> 00:11:52,639
<font color="#E5E5E5">complicated but it's actually</font><font color="#CCCCCC"> pretty</font>

301
00:11:50,990 --> 00:11:54,500
straightforward<font color="#CCCCCC"> and I'm gonna</font><font color="#E5E5E5"> use say so</font>

302
00:11:52,639 --> 00:11:56,810
if you<font color="#E5E5E5"> have a Mac you'll know that if</font>

303
00:11:54,500 --> 00:11:59,180
you<font color="#E5E5E5"> type</font><font color="#CCCCCC"> say and then a</font><font color="#E5E5E5"> message it will</font>

304
00:11:56,810 --> 00:12:00,589
speak out<font color="#E5E5E5"> loud if you don't know that</font>

305
00:11:59,180 --> 00:12:02,089
<font color="#CCCCCC">you should definitely</font><font color="#E5E5E5"> do it especially</font>

306
00:12:00,589 --> 00:12:04,550
<font color="#E5E5E5">if you log into somebody else's Mac</font>

307
00:12:02,089 --> 00:12:05,750
remotely<font color="#E5E5E5"> over a network when you're not</font>

308
00:12:04,550 --> 00:12:08,479
physically<font color="#E5E5E5"> there and you can make their</font>

309
00:12:05,750 --> 00:12:12,230
<font color="#E5E5E5">Mac talk to them and whisper is one of</font>

310
00:12:08,480 --> 00:12:15,860
the voices<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is especially creepy so</font>

311
00:12:12,230 --> 00:12:18,380
the example my object<font color="#E5E5E5"> my say object</font><font color="#CCCCCC"> only</font>

312
00:12:15,860 --> 00:12:19,250
<font color="#CCCCCC">has one procedure</font><font color="#E5E5E5"> which is say because</font>

313
00:12:18,380 --> 00:12:22,370
that's<font color="#CCCCCC"> the only thing I'm going to do</font>

314
00:12:19,250 --> 00:12:23,750
and it takes<font color="#E5E5E5"> two basic arguments the</font>

315
00:12:22,370 --> 00:12:26,060
statement you want<font color="#E5E5E5"> it to say and the</font>

316
00:12:23,750 --> 00:12:27,620
voice you want it to say<font color="#CCCCCC"> width and if</font>

317
00:12:26,060 --> 00:12:28,790
you<font color="#E5E5E5"> haven't set the voice it will set it</font>

318
00:12:27,620 --> 00:12:30,620
to<font color="#E5E5E5"> Alex which is one of</font><font color="#CCCCCC"> the default</font>

319
00:12:28,790 --> 00:12:33,170
voices and then it literally caught up

320
00:12:30,620 --> 00:12:35,569
to the operating<font color="#CCCCCC"> system</font><font color="#E5E5E5"> and runs the</font>

321
00:12:33,170 --> 00:12:37,370
sake of art -<font color="#CCCCCC"> me selects the voice and</font>

322
00:12:35,569 --> 00:12:40,300
it literally<font color="#E5E5E5"> says whatever you ask it</font><font color="#CCCCCC"> to</font>

323
00:12:37,370 --> 00:12:43,370
say so that's<font color="#E5E5E5"> the whole</font><font color="#CCCCCC"> of the object</font>

324
00:12:40,300 --> 00:12:45,920
<font color="#E5E5E5">the descriptor is slightly longer the</font>

325
00:12:43,370 --> 00:12:48,500
descriptor<font color="#E5E5E5"> tell scratch what it's called</font>

326
00:12:45,920 --> 00:12:50,329
<font color="#CCCCCC">what</font><font color="#E5E5E5"> port it's running on what blocks</font>

327
00:12:48,500 --> 00:12:51,980
<font color="#CCCCCC">it's offering which is essentially</font>

328
00:12:50,329 --> 00:12:55,638
there's one block<font color="#CCCCCC"> per procedure</font><font color="#E5E5E5"> in your</font>

329
00:12:51,980 --> 00:12:58,579
object or<font color="#CCCCCC"> expose procedures in your</font>

330
00:12:55,639 --> 00:13:00,470
<font color="#E5E5E5">object and then</font><font color="#CCCCCC"> the dictionary is lets</font>

331
00:12:58,579 --> 00:13:04,579
you create drop-down<font color="#CCCCCC"> boxes in your</font>

332
00:13:00,470 --> 00:13:07,130
<font color="#E5E5E5">scratch command so in the block</font>

333
00:13:04,579 --> 00:13:09,500
description it<font color="#E5E5E5"> says say</font><font color="#CCCCCC"> percent s with</font>

334
00:13:07,130 --> 00:13:11,000
voice<font color="#E5E5E5"> percent</font><font color="#CCCCCC"> m dot</font><font color="#E5E5E5"> voices so percent s</font>

335
00:13:09,500 --> 00:13:13,490
means put string in there so there'll be

336
00:13:11,000 --> 00:13:15,860
a box with<font color="#CCCCCC"> some</font><font color="#E5E5E5"> type in words which will</font>

337
00:13:13,490 --> 00:13:16,760
be<font color="#E5E5E5"> the message</font><font color="#CCCCCC"> percent m got voices</font>

338
00:13:15,860 --> 00:13:19,880
means<font color="#CCCCCC"> will have</font><font color="#E5E5E5"> a</font>

339
00:13:16,760 --> 00:13:22,130
drop down menu and it'll be cool voices

340
00:13:19,880 --> 00:13:24,080
and the in the bit the bottom the

341
00:13:22,130 --> 00:13:25,939
dictionary voices runs this crazy

342
00:13:24,080 --> 00:13:27,740
command which<font color="#E5E5E5"> will go and collect me all</font>

343
00:13:25,940 --> 00:13:29,930
the voices<font color="#E5E5E5"> that say you can say that</font><font color="#CCCCCC"> are</font>

344
00:13:27,740 --> 00:13:33,440
<font color="#CCCCCC">English so</font><font color="#E5E5E5"> we'll have a</font><font color="#CCCCCC"> drop-down menu</font>

345
00:13:29,930 --> 00:13:36,439
<font color="#E5E5E5">of voices and so that is the whole</font><font color="#CCCCCC"> of</font>

346
00:13:33,440 --> 00:13:38,300
<font color="#CCCCCC">the</font><font color="#E5E5E5"> code for the</font><font color="#CCCCCC"> say</font><font color="#E5E5E5"> extension right and</font>

347
00:13:36,440 --> 00:13:40,280
the white bits are pretty common<font color="#CCCCCC"> to</font>

348
00:13:38,300 --> 00:13:41,930
every extension<font color="#CCCCCC"> we all we've done</font><font color="#E5E5E5"> is</font>

349
00:13:40,280 --> 00:13:44,030
create an object<font color="#E5E5E5"> and</font><font color="#CCCCCC"> create a descriptor</font>

350
00:13:41,930 --> 00:13:45,160
<font color="#E5E5E5">and join them together that's that's</font>

351
00:13:44,030 --> 00:13:48,439
literally it

352
00:13:45,160 --> 00:13:50,719
so when you run<font color="#E5E5E5"> it up you can then</font>

353
00:13:48,440 --> 00:13:52,670
browse to<font color="#E5E5E5"> the port it's running on so</font>

354
00:13:50,720 --> 00:13:53,960
port<font color="#CCCCCC"> 5000a in</font><font color="#E5E5E5"> this case and it will give</font>

355
00:13:52,670 --> 00:13:56,120
you the option to<font color="#E5E5E5"> download the extension</font>

356
00:13:53,960 --> 00:13:57,500
<font color="#CCCCCC">I don't know what a snap block is I</font>

357
00:13:56,120 --> 00:13:58,970
<font color="#E5E5E5">don't really care but</font><font color="#CCCCCC"> this scratch -</font>

358
00:13:57,500 --> 00:14:01,550
extension<font color="#CCCCCC"> file is</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> that's the</font>

359
00:13:58,970 --> 00:14:04,480
<font color="#E5E5E5">s2e file that's what will load</font><font color="#CCCCCC"> into</font>

360
00:14:01,550 --> 00:14:10,969
scratch under<font color="#E5E5E5"> the experiment extension</font>

361
00:14:04,480 --> 00:14:13,280
so let's do a demo<font color="#E5E5E5"> here is scratch there</font>

362
00:14:10,970 --> 00:14:16,360
is my scratchy scratch cat know from my

363
00:14:13,280 --> 00:14:19,120
mouse<font color="#E5E5E5"> so in here if I run</font><font color="#CCCCCC"> my extension</font>

364
00:14:16,360 --> 00:14:23,480
oops

365
00:14:19,120 --> 00:14:28,400
which is that one there<font color="#E5E5E5"> it's listening</font>

366
00:14:23,480 --> 00:14:32,480
<font color="#CCCCCC">on port</font><font color="#E5E5E5"> 5000 in</font><font color="#CCCCCC"> scratch</font><font color="#E5E5E5"> we can shift</font>

367
00:14:28,400 --> 00:14:37,220
click file<font color="#E5E5E5"> and import experimental HTTP</font>

368
00:14:32,480 --> 00:14:39,950
extension and it's gonna be that one

369
00:14:37,220 --> 00:14:44,450
there<font color="#CCCCCC"> yes</font><font color="#E5E5E5"> to e-file I've already</font>

370
00:14:39,950 --> 00:14:46,340
extracted it<font color="#CCCCCC"> from the web server</font><font color="#E5E5E5"> and now</font>

371
00:14:44,450 --> 00:14:48,650
<font color="#CCCCCC">I shall</font><font color="#E5E5E5"> just close him up a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit</font>

372
00:14:46,340 --> 00:14:53,030
<font color="#E5E5E5">in the more</font><font color="#CCCCCC"> blocks section we've now got</font>

373
00:14:48,650 --> 00:14:55,250
one extra<font color="#E5E5E5"> block which</font><font color="#CCCCCC"> is say</font><font color="#E5E5E5"> a message</font>

374
00:14:53,030 --> 00:15:04,089
with voice and<font color="#CCCCCC"> inner voice so let's make</font>

375
00:14:55,250 --> 00:15:08,450
<font color="#CCCCCC">that term and then we'll make an</font><font color="#E5E5E5"> event</font>

376
00:15:04,090 --> 00:15:11,860
when the<font color="#E5E5E5"> spacebar is pressed say that</font>

377
00:15:08,450 --> 00:15:17,180
message with voice Alex and Hagen hit

378
00:15:11,860 --> 00:15:18,980
well<font color="#CCCCCC"> I don't have any I don't</font><font color="#E5E5E5"> have any</font>

379
00:15:17,180 --> 00:15:21,560
audio<font color="#CCCCCC"> ah</font>

380
00:15:18,980 --> 00:15:24,610
no since<font color="#CCCCCC"> I plugged in the HDMI I've lost</font>

381
00:15:21,560 --> 00:15:28,569
my audio right one second

382
00:15:24,610 --> 00:15:34,310
this is<font color="#E5E5E5"> clearly</font>

383
00:15:28,570 --> 00:15:36,830
clearly<font color="#E5E5E5"> a well-tested</font><font color="#CCCCCC"> setup as</font><font color="#E5E5E5"> you can</font>

384
00:15:34,310 --> 00:15:39,829
tell okay<font color="#CCCCCC"> I</font><font color="#E5E5E5"> guess you can still see the</font>

385
00:15:36,830 --> 00:15:46,790
<font color="#CCCCCC">scratch stuff yeah</font><font color="#E5E5E5"> okay I'm sure we go</font>

386
00:15:39,830 --> 00:15:50,150
do that<font color="#CCCCCC"> and go back to here</font><font color="#E5E5E5"> how does</font>

387
00:15:46,790 --> 00:15:54,579
<font color="#CCCCCC">this</font><font color="#E5E5E5"> make you feel which is a joke</font>

388
00:15:50,150 --> 00:15:54,579
obviously<font color="#CCCCCC"> thank you very</font><font color="#E5E5E5"> much</font>

389
00:15:54,700 --> 00:16:01,850
if we change voice how does this make

390
00:15:57,710 --> 00:16:04,790
<font color="#E5E5E5">you</font><font color="#CCCCCC"> feel how does this</font><font color="#E5E5E5"> make you feel how</font>

391
00:16:01,850 --> 00:16:06,440
does<font color="#E5E5E5"> this make you feel so and there you</font>

392
00:16:04,790 --> 00:16:09,050
go so<font color="#CCCCCC"> from scratch we can now make my</font>

393
00:16:06,440 --> 00:16:11,420
<font color="#CCCCCC">max speak and on Linux</font><font color="#E5E5E5"> we can install</font>

394
00:16:09,050 --> 00:16:12,680
speak libraries and<font color="#E5E5E5"> weakness in Linux on</font>

395
00:16:11,420 --> 00:16:14,420
Windows you<font color="#CCCCCC"> can do the same thing if you</font>

396
00:16:12,680 --> 00:16:17,329
install something<font color="#E5E5E5"> that would make window</font>

397
00:16:14,420 --> 00:16:19,819
speak but as you can<font color="#E5E5E5"> see the appointed</font>

398
00:16:17,330 --> 00:16:21,290
extension was pretty trivial<font color="#E5E5E5"> the actual</font>

399
00:16:19,820 --> 00:16:23,210
amount of scratch we need really trivial

400
00:16:21,290 --> 00:16:24,800
<font color="#E5E5E5">but now you've got an extra element to</font>

401
00:16:23,210 --> 00:16:27,770
<font color="#CCCCCC">your game or your</font><font color="#E5E5E5"> application</font><font color="#CCCCCC"> scratch</font>

402
00:16:24,800 --> 00:16:28,520
without<font color="#CCCCCC"> authority</font><font color="#E5E5E5"> so we cut back to the</font>

403
00:16:27,770 --> 00:16:34,340
<font color="#CCCCCC">slides</font>

404
00:16:28,520 --> 00:16:37,280
<font color="#CCCCCC">I say we cut back</font><font color="#E5E5E5"> to the</font><font color="#CCCCCC"> slides that I</font>

405
00:16:34,340 --> 00:16:38,930
<font color="#CCCCCC">write so now how do you leggo leggo</font>

406
00:16:37,280 --> 00:16:40,850
<font color="#E5E5E5">power functions work logo power</font>

407
00:16:38,930 --> 00:16:43,670
functions are the things with infrared

408
00:16:40,850 --> 00:16:45,590
controllers so there we've got<font color="#E5E5E5"> a simple</font>

409
00:16:43,670 --> 00:16:47,449
controller and a speed controller so a

410
00:16:45,590 --> 00:16:49,010
simple controller has forwards and

411
00:16:47,450 --> 00:16:50,990
backwards for the<font color="#CCCCCC"> red channel and the</font>

412
00:16:49,010 --> 00:16:53,360
blue<font color="#CCCCCC"> channel</font><font color="#E5E5E5"> the speed controller has</font>

413
00:16:50,990 --> 00:16:55,940
rotary dials where you can start up the

414
00:16:53,360 --> 00:16:57,380
speed or dull<font color="#E5E5E5"> down the speed even into</font>

415
00:16:55,940 --> 00:16:59,390
reverse for the two<font color="#CCCCCC"> different channels</font>

416
00:16:57,380 --> 00:17:01,189
<font color="#CCCCCC">and they talked that infrared receiver</font>

417
00:16:59,390 --> 00:17:02,930
and<font color="#E5E5E5"> that controls motors for example</font>

418
00:17:01,190 --> 00:17:04,540
could be lights<font color="#E5E5E5"> I believe there are</font>

419
00:17:02,930 --> 00:17:07,609
<font color="#E5E5E5">other things they might wear</font><font color="#CCCCCC"> to control</font>

420
00:17:04,540 --> 00:17:09,079
we want to control this from<font color="#CCCCCC"> scratch so</font>

421
00:17:07,609 --> 00:17:10,458
<font color="#CCCCCC">our phone go</font><font color="#E5E5E5"> through this a bit faster</font>

422
00:17:09,079 --> 00:17:13,089
<font color="#CCCCCC">than I have done so</font><font color="#E5E5E5"> far I'm probably</font>

423
00:17:10,459 --> 00:17:15,560
running<font color="#E5E5E5"> behind</font><font color="#CCCCCC"> Tyrell and I wanted</font><font color="#E5E5E5"> to</font>

424
00:17:13,089 --> 00:17:18,619
listen<font color="#CCCCCC"> into that infrared</font><font color="#E5E5E5"> communication</font>

425
00:17:15,560 --> 00:17:20,240
between the controllers and<font color="#E5E5E5"> Lego</font><font color="#CCCCCC"> in</font>

426
00:17:18,619 --> 00:17:22,339
order to work how it works so I could do

427
00:17:20,240 --> 00:17:25,220
it<font color="#CCCCCC"> myself so I used this</font><font color="#E5E5E5"> thing called an</font>

428
00:17:22,339 --> 00:17:28,010
<font color="#CCCCCC">IR toy</font><font color="#E5E5E5"> from dangerous prototypes it cost</font>

429
00:17:25,220 --> 00:17:29,390
about 20 quid<font color="#E5E5E5"> it's a kind of simple</font>

430
00:17:28,010 --> 00:17:33,320
little tool you can<font color="#CCCCCC"> use for listening</font><font color="#E5E5E5"> in</font>

431
00:17:29,390 --> 00:17:35,480
<font color="#E5E5E5">to infrared and their software</font><font color="#CCCCCC"> doesn't</font>

432
00:17:33,320 --> 00:17:38,000
work very<font color="#E5E5E5"> well on Linux it's written for</font>

433
00:17:35,480 --> 00:17:39,280
<font color="#E5E5E5">Windows and it uses code blocks which is</font>

434
00:17:38,000 --> 00:17:42,310
a<font color="#E5E5E5"> horrible kind of</font>

435
00:17:39,280 --> 00:17:44,470
environment<font color="#E5E5E5"> to compile in but if you</font>

436
00:17:42,310 --> 00:17:46,659
just fight some poison you can talk to

437
00:17:44,470 --> 00:17:48,370
the<font color="#CCCCCC"> aisle</font><font color="#E5E5E5"> toy directly from Linux so</font>

438
00:17:46,660 --> 00:17:50,140
here the yellow<font color="#E5E5E5"> bit is send a pursue</font>

439
00:17:48,370 --> 00:17:51,429
report the green bit is initializing<font color="#E5E5E5"> the</font>

440
00:17:50,140 --> 00:17:54,100
<font color="#E5E5E5">aisle toilet and the red bit it's just</font>

441
00:17:51,430 --> 00:17:55,570
<font color="#CCCCCC">reading data that it's seeing and then</font>

442
00:17:54,100 --> 00:17:58,120
point<font color="#CCCCCC"> you</font><font color="#E5E5E5"> control</font><font color="#CCCCCC"> write it push a bone</font>

443
00:17:55,570 --> 00:18:01,689
and<font color="#CCCCCC"> sue happens and what happens is you</font>

444
00:17:58,120 --> 00:18:04,179
get a load of hex which on first<font color="#E5E5E5"> view</font>

445
00:18:01,690 --> 00:18:07,030
doesn't<font color="#E5E5E5"> seem to make a lot of sense but</font>

446
00:18:04,180 --> 00:18:10,210
<font color="#CCCCCC">I noticed that it's a lot of 32-bit</font>

447
00:18:07,030 --> 00:18:14,200
<font color="#E5E5E5">words in fact it's a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> 16-bit words</font>

448
00:18:10,210 --> 00:18:16,810
but all of them in pairs<font color="#CCCCCC"> so</font><font color="#E5E5E5"> the upper</font>

449
00:18:14,200 --> 00:18:18,970
<font color="#CCCCCC">bite of these 16-bit words being zero</font>

450
00:18:16,810 --> 00:18:21,850
<font color="#E5E5E5">right so there's clearly timing date for</font>

451
00:18:18,970 --> 00:18:25,480
of some sort<font color="#CCCCCC"> and if you looked at the</font>

452
00:18:21,850 --> 00:18:27,399
last byte<font color="#E5E5E5"> of each four byte</font><font color="#CCCCCC"> sort of</font>

453
00:18:25,480 --> 00:18:29,080
<font color="#E5E5E5">right word that was the only</font><font color="#CCCCCC"> body that</font>

454
00:18:27,400 --> 00:18:31,900
was<font color="#E5E5E5"> really changing</font><font color="#CCCCCC"> and you</font><font color="#E5E5E5"> can see it</font>

455
00:18:29,080 --> 00:18:34,030
<font color="#E5E5E5">changes from about</font><font color="#CCCCCC"> 0e to about one</font><font color="#E5E5E5"> B and</font>

456
00:18:31,900 --> 00:18:37,360
so clearly that's going<font color="#CCCCCC"> to be ones and</font>

457
00:18:34,030 --> 00:18:39,100
<font color="#CCCCCC">zeros</font><font color="#E5E5E5"> so I knocked up a bit of</font><font color="#CCCCCC"> Python</font><font color="#E5E5E5"> to</font>

458
00:18:37,360 --> 00:18:41,740
turn<font color="#E5E5E5"> that into ones and</font><font color="#CCCCCC"> zeros and you</font>

459
00:18:39,100 --> 00:18:44,740
<font color="#CCCCCC">get this at which point we then do what</font>

460
00:18:41,740 --> 00:18:48,100
we call byte staring or in this case bit

461
00:18:44,740 --> 00:18:50,290
staring so here we've<font color="#CCCCCC"> got read up</font>

462
00:18:48,100 --> 00:18:52,870
<font color="#E5E5E5">channel</font><font color="#CCCCCC"> one and read off channel one but</font>

463
00:18:50,290 --> 00:18:54,879
in actual<font color="#E5E5E5"> fact I would have had every</font>

464
00:18:52,870 --> 00:18:57,639
different<font color="#E5E5E5"> bone combination I could think</font>

465
00:18:54,880 --> 00:18:59,500
of so that I could see<font color="#E5E5E5"> the binary</font><font color="#CCCCCC"> and</font>

466
00:18:57,640 --> 00:19:01,150
<font color="#E5E5E5">compare them and work out how it</font><font color="#CCCCCC"> worked</font>

467
00:18:59,500 --> 00:19:03,610
<font color="#CCCCCC">I won't go into the process of how it</font>

468
00:19:01,150 --> 00:19:05,980
worked out how it works<font color="#E5E5E5"> but</font><font color="#CCCCCC"> I did</font><font color="#E5E5E5"> work</font>

469
00:19:03,610 --> 00:19:08,139
<font color="#E5E5E5">it</font><font color="#CCCCCC"> out and</font><font color="#E5E5E5"> we'll describe it</font><font color="#CCCCCC"> very</font>

470
00:19:05,980 --> 00:19:12,220
quickly<font color="#E5E5E5"> so first of all it's there's</font>

471
00:19:08,140 --> 00:19:13,450
<font color="#E5E5E5">four nibbles</font><font color="#CCCCCC"> and you can see</font><font color="#E5E5E5"> only a few</font>

472
00:19:12,220 --> 00:19:13,920
<font color="#E5E5E5">of them change depending what you're</font>

473
00:19:13,450 --> 00:19:16,780
doing

474
00:19:13,920 --> 00:19:19,210
the first liberal tells you the channel

475
00:19:16,780 --> 00:19:21,100
<font color="#E5E5E5">number</font><font color="#CCCCCC"> and if a</font><font color="#E5E5E5"> button has been pushed</font>

476
00:19:19,210 --> 00:19:22,600
<font color="#E5E5E5">or if no button has been pushed or</font>

477
00:19:21,100 --> 00:19:24,250
multiple buttons<font color="#E5E5E5"> have been pushed</font>

478
00:19:22,600 --> 00:19:28,120
if you push two buttons at once you get

479
00:19:24,250 --> 00:19:29,560
a<font color="#CCCCCC"> zero zero</font><font color="#E5E5E5"> who knows why but</font><font color="#CCCCCC"> you do and</font>

480
00:19:28,120 --> 00:19:31,120
the channel<font color="#CCCCCC"> number is naught 2 3</font>

481
00:19:29,560 --> 00:19:32,070
represents channel number<font color="#CCCCCC"> one</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> four</font>

482
00:19:31,120 --> 00:19:35,439
and<font color="#CCCCCC"> the actual devices</font>

483
00:19:32,070 --> 00:19:37,300
the second<font color="#CCCCCC"> nibble didn't change the</font>

484
00:19:35,440 --> 00:19:38,710
third nibble tells you the<font color="#E5E5E5"> button state</font>

485
00:19:37,300 --> 00:19:40,240
this is for the simple controller<font color="#E5E5E5"> I</font>

486
00:19:38,710 --> 00:19:43,270
might add where you've only got<font color="#E5E5E5"> up-down</font>

487
00:19:40,240 --> 00:19:45,340
so each so you could theoretically<font color="#E5E5E5"> send</font>

488
00:19:43,270 --> 00:19:48,280
a message where the blue was up and down

489
00:19:45,340 --> 00:19:49,929
at the<font color="#CCCCCC"> same time I don't</font><font color="#E5E5E5"> know what would</font>

490
00:19:48,280 --> 00:19:51,639
happen I haven't even<font color="#E5E5E5"> tried it find out</font>

491
00:19:49,930 --> 00:19:53,030
but essentially it's a button<font color="#E5E5E5"> mask</font>

492
00:19:51,640 --> 00:19:54,860
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> pretty straightforward and</font>

493
00:19:53,030 --> 00:19:56,330
<font color="#CCCCCC">fourth Nibiru</font><font color="#E5E5E5"> is just to check some so</font>

494
00:19:54,860 --> 00:19:59,000
we XOR together the first three

495
00:19:56,330 --> 00:20:01,189
intervals<font color="#E5E5E5"> and inverting it that gives us</font>

496
00:19:59,000 --> 00:20:02,780
the<font color="#E5E5E5"> fourth</font><font color="#CCCCCC"> nibble and</font><font color="#E5E5E5"> all that's doing</font>

497
00:20:01,190 --> 00:20:04,910
<font color="#E5E5E5">is making sure</font><font color="#CCCCCC"> that the</font><font color="#E5E5E5"> date revived</font>

498
00:20:02,780 --> 00:20:07,129
correctly there's got some integrity<font color="#E5E5E5"> so</font>

499
00:20:04,910 --> 00:20:10,700
we know that<font color="#CCCCCC"> there's been</font><font color="#E5E5E5"> a mistake in</font>

500
00:20:07,130 --> 00:20:12,080
transmission<font color="#E5E5E5"> or reception</font><font color="#CCCCCC"> so we've</font><font color="#E5E5E5"> heard</font>

501
00:20:10,700 --> 00:20:16,010
<font color="#E5E5E5">the read off one you can sort of see</font>

502
00:20:12,080 --> 00:20:18,949
<font color="#E5E5E5">that fits that protocol the speed</font>

503
00:20:16,010 --> 00:20:21,379
controller<font color="#CCCCCC"> slightly</font><font color="#E5E5E5"> different so so</font>

504
00:20:18,950 --> 00:20:24,340
you've twist the die around and you<font color="#E5E5E5"> get</font>

505
00:20:21,380 --> 00:20:27,110
these kind<font color="#CCCCCC"> of patterns notice that for</font>

506
00:20:24,340 --> 00:20:29,120
increasing we've got two different<font color="#CCCCCC"> kind</font>

507
00:20:27,110 --> 00:20:32,120
of patterns the first bit changes and

508
00:20:29,120 --> 00:20:34,729
I'll explain<font color="#E5E5E5"> that</font><font color="#CCCCCC"> the first bit of the</font>

509
00:20:32,120 --> 00:20:36,439
<font color="#CCCCCC">first nibble</font><font color="#E5E5E5"> is a change indicator and</font>

510
00:20:34,730 --> 00:20:38,870
so<font color="#CCCCCC"> only</font><font color="#E5E5E5"> when that change indicator</font>

511
00:20:36,440 --> 00:20:40,730
<font color="#CCCCCC">changes does the message get processed</font>

512
00:20:38,870 --> 00:20:42,979
by the receiver<font color="#E5E5E5"> which means you can send</font>

513
00:20:40,730 --> 00:20:45,470
<font color="#CCCCCC">the same message multiple times and only</font>

514
00:20:42,980 --> 00:20:47,270
one<font color="#CCCCCC"> of them</font><font color="#E5E5E5"> will be acted upon</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> the</font>

515
00:20:45,470 --> 00:20:49,220
receiver<font color="#E5E5E5"> so you've got message</font>

516
00:20:47,270 --> 00:20:51,860
reliability that way so every time<font color="#E5E5E5"> you</font>

517
00:20:49,220 --> 00:20:53,560
<font color="#E5E5E5">click one of those</font><font color="#CCCCCC"> rotary dials it sends</font>

518
00:20:51,860 --> 00:20:56,270
the same message<font color="#E5E5E5"> three or four times and</font>

519
00:20:53,560 --> 00:20:58,190
the receiver<font color="#E5E5E5"> only receives</font><font color="#CCCCCC"> it once</font>

520
00:20:56,270 --> 00:21:00,080
and then when you click<font color="#E5E5E5"> it again it</font>

521
00:20:58,190 --> 00:21:02,000
sends roughly the same message<font color="#CCCCCC"> but the</font>

522
00:21:00,080 --> 00:21:04,879
change indicator will flip from<font color="#CCCCCC"> a 1 to a</font>

523
00:21:02,000 --> 00:21:06,350
<font color="#CCCCCC">0 or from a 0 to a what it's quite</font>

524
00:21:04,880 --> 00:21:08,290
clever<font color="#CCCCCC"> I quite like it and then within</font>

525
00:21:06,350 --> 00:21:11,330
there you've also got the channel<font color="#E5E5E5"> number</font>

526
00:21:08,290 --> 00:21:13,010
<font color="#CCCCCC">second label</font><font color="#E5E5E5"> tells you if it's a speed</font>

527
00:21:11,330 --> 00:21:15,860
message<font color="#CCCCCC"> lysing you've changed the speed</font>

528
00:21:13,010 --> 00:21:18,470
or if it's a stop message as in you've

529
00:21:15,860 --> 00:21:20,870
pushed the red stop<font color="#CCCCCC"> button and the</font>

530
00:21:18,470 --> 00:21:22,370
fourth bit tells you which channel<font color="#E5E5E5"> red</font>

531
00:21:20,870 --> 00:21:24,949
or blue

532
00:21:22,370 --> 00:21:26,959
the third liberal again<font color="#E5E5E5"> tells you if</font>

533
00:21:24,950 --> 00:21:28,550
<font color="#E5E5E5">it's a speed change or a stop message</font><font color="#CCCCCC"> I</font>

534
00:21:26,960 --> 00:21:32,090
don't know why they doubled that<font color="#CCCCCC"> up but</font>

535
00:21:28,550 --> 00:21:34,159
they did and the fourth bit<font color="#CCCCCC"> tells you</font>

536
00:21:32,090 --> 00:21:35,959
which direction<font color="#E5E5E5"> that control is going in</font>

537
00:21:34,160 --> 00:21:37,700
clockwise or<font color="#CCCCCC"> anticlockwise and then the</font>

538
00:21:35,960 --> 00:21:42,050
last nibble is to check some exactly the

539
00:21:37,700 --> 00:21:44,840
same as<font color="#CCCCCC"> before so so that's just kind of</font>

540
00:21:42,050 --> 00:21:46,250
to clarify<font color="#E5E5E5"> just to show it off so once</font>

541
00:21:44,840 --> 00:21:47,899
<font color="#E5E5E5">we've got that can't be transmitted</font>

542
00:21:46,250 --> 00:21:51,080
messages well I tried transmitting with

543
00:21:47,900 --> 00:21:52,700
the<font color="#E5E5E5"> IR toy and it kept crashing I don't</font>

544
00:21:51,080 --> 00:21:54,649
<font color="#CCCCCC">know if it</font><font color="#E5E5E5"> is the way I was talking to</font>

545
00:21:52,700 --> 00:21:58,040
it I<font color="#E5E5E5"> don't if I talk too fast</font><font color="#CCCCCC"> if I</font>

546
00:21:54,650 --> 00:22:01,070
wasn't<font color="#E5E5E5"> quite talking about protocol or</font>

547
00:21:58,040 --> 00:22:02,540
whether the IR toy<font color="#CCCCCC"> just didn't</font><font color="#E5E5E5"> really</font>

548
00:22:01,070 --> 00:22:04,490
like me or something<font color="#CCCCCC"> was wrong in</font><font color="#E5E5E5"> the</font>

549
00:22:02,540 --> 00:22:06,210
<font color="#E5E5E5">code but ultimately I needed to find</font>

550
00:22:04,490 --> 00:22:09,780
some other<font color="#CCCCCC"> way of transmitting</font>

551
00:22:06,210 --> 00:22:12,960
so I banged together<font color="#E5E5E5"> a circuit on an</font>

552
00:22:09,780 --> 00:22:15,990
Arduino<font color="#E5E5E5"> and it's simply a high-power</font>

553
00:22:12,960 --> 00:22:18,480
infrared LED with a transistor circuit

554
00:22:15,990 --> 00:22:21,030
to drive it coming off pin d3 which<font color="#CCCCCC"> is</font>

555
00:22:18,480 --> 00:22:24,630
important because I was using the serial

556
00:22:21,030 --> 00:22:28,290
<font color="#E5E5E5">control oh the IR remote library</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> to</font>

557
00:22:24,630 --> 00:22:33,060
actually<font color="#E5E5E5"> transmit the data not always</font>

558
00:22:28,290 --> 00:22:34,920
uses pin<font color="#CCCCCC"> 3 on a nano</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> pro mini and are</font>

559
00:22:33,060 --> 00:22:39,270
you implemented<font color="#E5E5E5"> a single byte protocol</font>

560
00:22:34,920 --> 00:22:41,220
so<font color="#E5E5E5"> their protocol was 2 bytes 16 bits</font>

561
00:22:39,270 --> 00:22:42,450
and there's problems<font color="#E5E5E5"> with</font><font color="#CCCCCC"> multi ply</font>

562
00:22:41,220 --> 00:22:44,790
protocols<font color="#E5E5E5"> because you have to know</font>

563
00:22:42,450 --> 00:22:46,740
whether you've got<font color="#E5E5E5"> the start of the</font>

564
00:22:44,790 --> 00:22:48,090
right bytes<font color="#E5E5E5"> you know anybody multiply</font>

565
00:22:46,740 --> 00:22:49,650
message system you need<font color="#E5E5E5"> to</font><font color="#CCCCCC"> have some</font>

566
00:22:48,090 --> 00:22:52,050
kind<font color="#CCCCCC"> of infrastructure</font><font color="#E5E5E5"> around it to know</font>

567
00:22:49,650 --> 00:22:53,580
when the messages start and end and

568
00:22:52,050 --> 00:22:54,570
<font color="#CCCCCC">check that</font><font color="#E5E5E5"> you've actually got a proper</font>

569
00:22:53,580 --> 00:22:56,850
<font color="#E5E5E5">message and all those sort of things</font>

570
00:22:54,570 --> 00:22:58,950
<font color="#E5E5E5">with a single</font><font color="#CCCCCC"> PI</font><font color="#E5E5E5"> protocol you get a bite</font>

571
00:22:56,850 --> 00:23:00,649
at a time<font color="#E5E5E5"> you can check if that bite</font>

572
00:22:58,950 --> 00:23:02,340
<font color="#E5E5E5">makes sense and you can act</font><font color="#CCCCCC"> upon it now</font>

573
00:23:00,650 --> 00:23:04,950
<font color="#CCCCCC">a Kudo</font>

574
00:23:02,340 --> 00:23:07,230
and I've since been introduced<font color="#E5E5E5"> to blue</font>

575
00:23:04,950 --> 00:23:08,130
<font color="#CCCCCC">chip serial control library which if</font>

576
00:23:07,230 --> 00:23:10,200
you're writing anything<font color="#E5E5E5"> to do with</font>

577
00:23:08,130 --> 00:23:12,570
<font color="#CCCCCC">Arduino</font><font color="#E5E5E5"> it lets you do multi byte</font>

578
00:23:10,200 --> 00:23:16,050
messages in a really<font color="#E5E5E5"> human readable form</font>

579
00:23:12,570 --> 00:23:17,820
and lets you control your thing like

580
00:23:16,050 --> 00:23:20,879
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> a root</font><font color="#E5E5E5"> or something</font><font color="#CCCCCC"> it's much</font>

581
00:23:17,820 --> 00:23:23,970
better protocol you<font color="#E5E5E5"> can get it it's a</font>

582
00:23:20,880 --> 00:23:25,470
plug for his github<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> really good and</font>

583
00:23:23,970 --> 00:23:26,640
it works<font color="#E5E5E5"> and it makes everything really</font>

584
00:23:25,470 --> 00:23:28,620
simple<font color="#CCCCCC"> but</font><font color="#E5E5E5"> I didn't know about this at</font>

585
00:23:26,640 --> 00:23:29,850
the<font color="#CCCCCC"> time so I didn't use it</font><font color="#E5E5E5"> if you are</font>

586
00:23:28,620 --> 00:23:31,320
<font color="#E5E5E5">thinking about implementing these kind</font>

587
00:23:29,850 --> 00:23:33,780
<font color="#CCCCCC">of protocols here's a simple lookup</font>

588
00:23:31,320 --> 00:23:35,250
chart to work out which kind of way<font color="#CCCCCC"> you</font>

589
00:23:33,780 --> 00:23:37,830
should be<font color="#E5E5E5"> implementing your serial</font>

590
00:23:35,250 --> 00:23:40,740
protocol<font color="#CCCCCC"> short Arduino is clearly don't</font>

591
00:23:37,830 --> 00:23:43,860
<font color="#E5E5E5">make a multiply protocol yourself other</font>

592
00:23:40,740 --> 00:23:45,510
than<font color="#E5E5E5"> that</font><font color="#CCCCCC"> either works fine</font><font color="#E5E5E5"> so my single</font>

593
00:23:43,860 --> 00:23:47,159
by protocol kind of looks like this<font color="#E5E5E5"> I</font>

594
00:23:45,510 --> 00:23:51,960
actually only use<font color="#CCCCCC"> seven bits out of an</font>

595
00:23:47,160 --> 00:23:54,870
8-bit byte bit<font color="#CCCCCC"> 6 told you which</font><font color="#E5E5E5"> color</font>

596
00:23:51,960 --> 00:23:56,670
which channel<font color="#CCCCCC"> were</font><font color="#E5E5E5"> using red or blue</font><font color="#CCCCCC"> the</font>

597
00:23:54,870 --> 00:23:59,429
green bits<font color="#E5E5E5"> four or five tell you which</font>

598
00:23:56,670 --> 00:24:02,460
channel it is<font color="#E5E5E5"> not three essentially one</font>

599
00:23:59,430 --> 00:24:07,290
to<font color="#E5E5E5"> four on national equipment bits two</font>

600
00:24:02,460 --> 00:24:10,680
and<font color="#E5E5E5"> three tell you if it's the</font><font color="#CCCCCC"> simple</font>

601
00:24:07,290 --> 00:24:14,100
protocol that the button<font color="#E5E5E5"> has been pushed</font>

602
00:24:10,680 --> 00:24:15,960
up or down otherwise it's one one

603
00:24:14,100 --> 00:24:18,870
meaning it<font color="#E5E5E5"> must be the speed protocol</font>

604
00:24:15,960 --> 00:24:19,360
and the blue bits bits<font color="#CCCCCC"> they won't tell</font>

605
00:24:18,870 --> 00:24:21,040
<font color="#E5E5E5">you</font>

606
00:24:19,360 --> 00:24:23,409
the speed protocol whether it's going

607
00:24:21,040 --> 00:24:25,210
<font color="#E5E5E5">clockwise or anti-clockwise or it's one</font>

608
00:24:23,410 --> 00:24:27,309
<font color="#E5E5E5">one to say that it's a simple</font><font color="#CCCCCC"> protocol</font>

609
00:24:25,210 --> 00:24:29,530
so<font color="#CCCCCC"> basically</font><font color="#E5E5E5"> I've squeezed the simple</font>

610
00:24:27,309 --> 00:24:31,899
<font color="#E5E5E5">protocol and the speed protocol all into</font>

611
00:24:29,530 --> 00:24:33,910
a single byte which other just send to

612
00:24:31,900 --> 00:24:36,390
my Arduino<font color="#E5E5E5"> and then my Arduino makes the</font>

613
00:24:33,910 --> 00:24:39,670
right Lego messages and sends<font color="#CCCCCC"> them out</font>

614
00:24:36,390 --> 00:24:42,100
so I have a demo<font color="#CCCCCC"> I didn't bring any Lego</font>

615
00:24:39,670 --> 00:24:44,049
with me because all of our motors and

616
00:24:42,100 --> 00:24:46,600
infrared receivers are involved in a

617
00:24:44,049 --> 00:24:48,010
<font color="#E5E5E5">very complicated</font><font color="#CCCCCC"> way a remote</font><font color="#E5E5E5"> control</font>

618
00:24:46,600 --> 00:24:49,600
car<font color="#E5E5E5"> at the moment it's not quite</font>

619
00:24:48,010 --> 00:24:51,669
<font color="#E5E5E5">finished my son would</font><font color="#CCCCCC"> have probably</font>

620
00:24:49,600 --> 00:24:56,409
<font color="#E5E5E5">killed me if I'd bought their Lego with</font>

621
00:24:51,669 --> 00:25:01,809
me so but I do have some demos videos so

622
00:24:56,410 --> 00:25:07,870
this is Tom's<font color="#CCCCCC"> sea</font><font color="#E5E5E5"> monster ride for a</font>

623
00:25:01,809 --> 00:25:10,299
fairground<font color="#E5E5E5"> using Lego motors and linear</font>

624
00:25:07,870 --> 00:25:13,030
actuators to<font color="#CCCCCC"> make the thing go up</font><font color="#E5E5E5"> and</font>

625
00:25:10,299 --> 00:25:16,210
down<font color="#E5E5E5"> we're programmed with running from</font>

626
00:25:13,030 --> 00:25:23,230
scratch in fact there<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> Arduino and</font>

627
00:25:16,210 --> 00:25:25,960
serial converter<font color="#E5E5E5"> and this one is there's</font>

628
00:25:23,230 --> 00:25:29,740
a<font color="#E5E5E5"> but multiple videos showing the same</font>

629
00:25:25,960 --> 00:25:32,970
thing<font color="#CCCCCC"> this is Tom's automatic crossbow</font>

630
00:25:29,740 --> 00:25:36,010
so a<font color="#E5E5E5"> particular like this one because</font>

631
00:25:32,970 --> 00:25:37,720
when we first go<font color="#E5E5E5"> black</font><font color="#CCCCCC"> almost</font><font color="#E5E5E5"> Tom said</font>

632
00:25:36,010 --> 00:25:39,970
<font color="#E5E5E5">can you make</font><font color="#CCCCCC"> something so we can control</font>

633
00:25:37,720 --> 00:25:41,679
our<font color="#E5E5E5"> models and I was like yes and then</font>

634
00:25:39,970 --> 00:25:44,110
six months later<font color="#E5E5E5"> I finally did it</font>

635
00:25:41,679 --> 00:25:45,880
and then he was too busy in<font color="#CCCCCC"> Minecraft at</font>

636
00:25:44,110 --> 00:25:47,260
the time and<font color="#E5E5E5"> it but some months after</font>

637
00:25:45,880 --> 00:25:48,880
<font color="#CCCCCC">that</font><font color="#E5E5E5"> it was</font><font color="#CCCCCC"> like dad have you</font><font color="#E5E5E5"> got</font><font color="#CCCCCC"> that</font>

638
00:25:47,260 --> 00:25:50,080
thing<font color="#E5E5E5"> that's we</font><font color="#CCCCCC"> controlled</font><font color="#E5E5E5"> motors and I</font>

639
00:25:48,880 --> 00:25:50,620
said yeah yeah I<font color="#E5E5E5"> think</font><font color="#CCCCCC"> I'm really</font>

640
00:25:50,080 --> 00:25:52,870
excited

641
00:25:50,620 --> 00:25:55,449
took it round what we built<font color="#E5E5E5"> it's like</font>

642
00:25:52,870 --> 00:25:56,739
I've built a<font color="#E5E5E5"> much watch crossbow</font><font color="#CCCCCC"> and so</font>

643
00:25:55,450 --> 00:25:58,299
you put<font color="#E5E5E5"> all this together</font><font color="#CCCCCC"> by itself it's</font>

644
00:25:56,740 --> 00:26:00,669
using the linear actuators again it's an

645
00:25:58,299 --> 00:26:02,950
amazing thing<font color="#CCCCCC"> so from scratch it will</font>

646
00:26:00,669 --> 00:26:07,450
elevate<font color="#E5E5E5"> to a random elevation and then</font>

647
00:26:02,950 --> 00:26:10,929
fire the bolt<font color="#E5E5E5"> and that's kind of cool</font>

648
00:26:07,450 --> 00:26:14,049
so<font color="#CCCCCC"> finally we all like the fact it</font><font color="#E5E5E5"> says</font>

649
00:26:10,929 --> 00:26:16,059
police on the side like this<font color="#CCCCCC"> is a this</font>

650
00:26:14,049 --> 00:26:20,889
<font color="#E5E5E5">is the future</font><font color="#CCCCCC"> of law enforcement</font>

651
00:26:16,059 --> 00:26:22,600
<font color="#E5E5E5">you know Robocop style it's quite</font>

652
00:26:20,890 --> 00:26:24,549
powerful<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it's quite good fun</font><font color="#CCCCCC"> so</font>

653
00:26:22,600 --> 00:26:26,469
<font color="#CCCCCC">these are sort of crazy</font><font color="#E5E5E5"> we've actually</font>

654
00:26:24,549 --> 00:26:28,150
made a lot<font color="#E5E5E5"> of other weird wonderful</font>

655
00:26:26,470 --> 00:26:32,450
<font color="#E5E5E5">things with leg over that's something</font>

656
00:26:28,150 --> 00:26:34,160
<font color="#E5E5E5">that some examples so</font><font color="#CCCCCC"> hacky</font>

657
00:26:32,450 --> 00:26:38,150
the scratch<font color="#E5E5E5"> will quickly talk about</font>

658
00:26:34,160 --> 00:26:40,700
<font color="#E5E5E5">hacking the scratch I made a object a an</font>

659
00:26:38,150 --> 00:26:42,740
extension that lets<font color="#E5E5E5"> me do things I open</font>

660
00:26:40,700 --> 00:26:46,040
sockets<font color="#CCCCCC"> read from sockets right to</font>

661
00:26:42,740 --> 00:26:47,900
<font color="#E5E5E5">sockets bind to sockets</font><font color="#CCCCCC"> so that I can</font>

662
00:26:46,040 --> 00:26:50,750
talk<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the network</font><font color="#E5E5E5"> from scratch</font><font color="#CCCCCC"> which</font>

663
00:26:47,900 --> 00:26:52,700
you not can't normally do and<font color="#CCCCCC"> I</font><font color="#E5E5E5"> builded</font>

664
00:26:50,750 --> 00:26:54,170
<font color="#CCCCCC">a scripture</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> describes all those</font>

665
00:26:52,700 --> 00:26:57,620
blocks<font color="#CCCCCC"> so</font><font color="#E5E5E5"> that we could talk</font><font color="#CCCCCC"> it's</font>

666
00:26:54,170 --> 00:26:59,660
<font color="#E5E5E5">scratch and you get blocks that look</font>

667
00:26:57,620 --> 00:27:01,399
<font color="#E5E5E5">kind of like this so you can sort</font><font color="#CCCCCC"> of</font>

668
00:26:59,660 --> 00:27:03,080
<font color="#CCCCCC">create a TCP connection to a particular</font>

669
00:27:01,400 --> 00:27:07,160
host on a particular port for example

670
00:27:03,080 --> 00:27:09,110
and then send it some data<font color="#E5E5E5"> these are the</font>

671
00:27:07,160 --> 00:27:10,670
where the more blocks<font color="#CCCCCC"> these</font><font color="#E5E5E5"> are the more</font>

672
00:27:09,110 --> 00:27:12,860
blocks where they appear<font color="#E5E5E5"> in scratch</font>

673
00:27:10,670 --> 00:27:15,200
you've got procedures predicates and

674
00:27:12,860 --> 00:27:17,570
values<font color="#E5E5E5"> so values obviously</font><font color="#CCCCCC"> give you back</font>

675
00:27:15,200 --> 00:27:19,340
a string or a number<font color="#CCCCCC"> predicates</font><font color="#E5E5E5"> to a</font>

676
00:27:17,570 --> 00:27:21,139
<font color="#CCCCCC">true/false value</font><font color="#E5E5E5"> and they have different</font>

677
00:27:19,340 --> 00:27:22,939
shapes<font color="#E5E5E5"> so obviously fit for my place</font><font color="#CCCCCC"> in</font>

678
00:27:21,140 --> 00:27:24,970
scratch and the procedures are the

679
00:27:22,940 --> 00:27:27,680
<font color="#CCCCCC">things</font><font color="#E5E5E5"> where in scratch to do stuff like</font>

680
00:27:24,970 --> 00:27:31,820
create a socket<font color="#E5E5E5"> or</font><font color="#CCCCCC"> write for a socket or</font>

681
00:27:27,680 --> 00:27:33,650
something and so the way I've got<font color="#CCCCCC"> it set</font>

682
00:27:31,820 --> 00:27:36,439
up<font color="#E5E5E5"> is the web server on localhost</font>

683
00:27:33,650 --> 00:27:38,090
<font color="#E5E5E5">running block X is the extension exactly</font>

684
00:27:36,440 --> 00:27:39,950
the same as<font color="#E5E5E5"> that say demo or the Lego</font>

685
00:27:38,090 --> 00:27:42,199
demo<font color="#CCCCCC"> just literally plug in the Python</font>

686
00:27:39,950 --> 00:27:44,420
when the thing up<font color="#E5E5E5"> and then you've got</font>

687
00:27:42,200 --> 00:27:45,830
these extra<font color="#E5E5E5"> blocks you</font><font color="#CCCCCC"> can use and then</font>

688
00:27:44,420 --> 00:27:47,750
that's going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> connect onwards to a</font>

689
00:27:45,830 --> 00:27:50,330
virtual<font color="#E5E5E5"> machine running tiny sploit</font>

690
00:27:47,750 --> 00:27:54,410
<font color="#E5E5E5">which is produced by sawmill</font><font color="#CCCCCC"> sha of next</font>

691
00:27:50,330 --> 00:27:58,520
square under<font color="#CCCCCC"> the exploit lab workshops</font>

692
00:27:54,410 --> 00:28:00,800
and I've got<font color="#E5E5E5"> Saul's permission to use</font><font color="#CCCCCC"> it</font>

693
00:27:58,520 --> 00:28:03,680
for these kind of demos<font color="#E5E5E5"> and so on there</font>

694
00:28:00,800 --> 00:28:08,290
<font color="#CCCCCC">is a vulnerable web server</font><font color="#E5E5E5"> which we</font>

695
00:28:03,680 --> 00:28:11,090
could possibly attack so I did now

696
00:28:08,290 --> 00:28:15,770
<font color="#CCCCCC">should we</font><font color="#E5E5E5"> quickly do the demo because</font>

697
00:28:11,090 --> 00:28:20,120
<font color="#E5E5E5">why not so if we kill off this</font><font color="#CCCCCC"> say</font>

698
00:28:15,770 --> 00:28:27,470
extension and we run up<font color="#E5E5E5"> the socket</font>

699
00:28:20,120 --> 00:28:29,870
extension<font color="#E5E5E5"> which we come in here now I</font>

700
00:28:27,470 --> 00:28:32,840
won't go through the<font color="#E5E5E5"> entire work of how</font>

701
00:28:29,870 --> 00:28:34,669
you find a bug and then start exploiting

702
00:28:32,840 --> 00:28:36,889
it but if you read<font color="#E5E5E5"> the paper in POC or</font>

703
00:28:34,670 --> 00:28:39,170
<font color="#CCCCCC">GTFO it's all in there to explain</font><font color="#E5E5E5"> how to</font>

704
00:28:36,890 --> 00:28:41,360
do this sort<font color="#CCCCCC"> of stuff</font><font color="#E5E5E5"> but what I'll</font>

705
00:28:39,170 --> 00:28:45,620
quickly<font color="#E5E5E5"> do is load in some stuff so</font>

706
00:28:41,360 --> 00:28:50,280
scratch demo we need to do that

707
00:28:45,620 --> 00:28:53,310
as you<font color="#E5E5E5"> can see it's quite a bit of</font>

708
00:28:50,280 --> 00:28:56,760
scratch in<font color="#CCCCCC"> this</font><font color="#E5E5E5"> particular one what I'm</font>

709
00:28:53,310 --> 00:28:59,700
<font color="#E5E5E5">doing is</font><font color="#CCCCCC"> sending a buffer of changing</font>

710
00:28:56,760 --> 00:29:01,140
values to a web server<font color="#E5E5E5"> to see where it</font>

711
00:28:59,700 --> 00:29:06,900
crashes<font color="#E5E5E5"> when it crashes</font><font color="#CCCCCC"> I'll be able</font><font color="#E5E5E5"> to</font>

712
00:29:01,140 --> 00:29:12,870
find it<font color="#CCCCCC"> in gdb so there's my there's my</font>

713
00:29:06,900 --> 00:29:17,100
actual machine hello right<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> will</font>

714
00:29:12,870 --> 00:29:22,020
quickly connect to the web server with a

715
00:29:17,100 --> 00:29:24,719
debugger<font color="#CCCCCC"> and then we'll quickly send</font>

716
00:29:22,020 --> 00:29:26,870
this<font color="#E5E5E5"> so we need to fill in the</font><font color="#CCCCCC"> I haven't</font>

717
00:29:24,720 --> 00:29:29,220
got an IP address<font color="#CCCCCC"> that is a good point I</font>

718
00:29:26,870 --> 00:29:34,530
don't<font color="#CCCCCC"> have an IP address</font><font color="#E5E5E5"> we might have</font>

719
00:29:29,220 --> 00:29:36,240
to skip this<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> tell you what because</font>

720
00:29:34,530 --> 00:29:40,920
they want<font color="#E5E5E5"> to speed things up I'll skip</font>

721
00:29:36,240 --> 00:29:42,570
that and<font color="#CCCCCC"> we'll go</font><font color="#E5E5E5"> back to the so what</font>

722
00:29:40,920 --> 00:29:46,410
you're seeing on the<font color="#E5E5E5"> screen here is</font><font color="#CCCCCC"> the</font>

723
00:29:42,570 --> 00:29:47,730
exploit itself as I say I<font color="#E5E5E5"> can't do a</font>

724
00:29:46,410 --> 00:29:49,230
demo<font color="#E5E5E5"> and if you couldn't hassle me later</font>

725
00:29:47,730 --> 00:29:52,320
if you want<font color="#E5E5E5"> to see it I can</font><font color="#CCCCCC"> show you at</font>

726
00:29:49,230 --> 00:29:55,560
life how to<font color="#E5E5E5"> do this but from scratch we</font>

727
00:29:52,320 --> 00:29:57,810
did all the work of crashing the<font color="#E5E5E5"> service</font>

728
00:29:55,560 --> 00:29:59,220
<font color="#E5E5E5">on that virtual machine and then</font>

729
00:29:57,810 --> 00:30:00,870
crashing the service with<font color="#CCCCCC"> a pattern</font>

730
00:29:59,220 --> 00:30:03,030
buffer so<font color="#CCCCCC"> that we can see where it</font>

731
00:30:00,870 --> 00:30:04,290
crashed what the instruction pointer was

732
00:30:03,030 --> 00:30:06,840
pointing<font color="#E5E5E5"> out at the time what was on the</font>

733
00:30:04,290 --> 00:30:09,960
stack at the time take those values and

734
00:30:06,840 --> 00:30:12,360
<font color="#E5E5E5">plug them into an exploit and got</font>

735
00:30:09,960 --> 00:30:14,430
<font color="#E5E5E5">shellcode simply off exploit DB and</font>

736
00:30:12,360 --> 00:30:16,469
chucked it<font color="#E5E5E5"> into a variable in scratch</font><font color="#CCCCCC"> I</font>

737
00:30:14,430 --> 00:30:18,390
had to modify<font color="#CCCCCC"> the shellcode because all</font>

738
00:30:16,470 --> 00:30:20,490
the<font color="#E5E5E5"> shellcode</font><font color="#CCCCCC"> next book DB expects bash</font>

739
00:30:18,390 --> 00:30:22,560
<font color="#E5E5E5">to be your shell</font><font color="#CCCCCC"> and in my</font><font color="#E5E5E5"> virtual</font>

740
00:30:20,490 --> 00:30:24,690
machine<font color="#E5E5E5"> it was busy box that means ever</font>

741
00:30:22,560 --> 00:30:26,460
so slightly<font color="#E5E5E5"> different type</font><font color="#CCCCCC"> of shell code</font>

742
00:30:24,690 --> 00:30:30,600
but you<font color="#E5E5E5"> know</font><font color="#CCCCCC"> burn it all together and</font>

743
00:30:26,460 --> 00:30:32,820
put in the right values and before we

744
00:30:30,600 --> 00:30:36,870
run it you<font color="#E5E5E5"> can see this is the virtual</font>

745
00:30:32,820 --> 00:30:39,240
machines<font color="#E5E5E5"> network services so we can see</font>

746
00:30:36,870 --> 00:30:40,530
that<font color="#E5E5E5"> we've</font><font color="#CCCCCC"> got</font><font color="#E5E5E5"> two services echo</font><font color="#CCCCCC"> one and</font>

747
00:30:39,240 --> 00:30:42,780
echo<font color="#E5E5E5"> two and we've got a web server on</font>

748
00:30:40,530 --> 00:30:47,250
port 80<font color="#E5E5E5"> in an SSH daemon report 22</font>

749
00:30:42,780 --> 00:30:50,250
nothing else running when<font color="#E5E5E5"> we run it this</font>

750
00:30:47,250 --> 00:30:53,100
is all the exploit going through the

751
00:30:50,250 --> 00:30:54,990
<font color="#E5E5E5">poison that bit is a whole load of</font><font color="#CCCCCC"> knops</font>

752
00:30:53,100 --> 00:30:56,510
<font color="#E5E5E5">to fill up the buffer to get to the</font>

753
00:30:54,990 --> 00:30:57,610
point where we can<font color="#E5E5E5"> overflow the buffer</font>

754
00:30:56,510 --> 00:30:59,320
<font color="#CCCCCC">that</font>

755
00:30:57,610 --> 00:31:01,659
but there is the return<font color="#E5E5E5"> address and hold</font>

756
00:30:59,320 --> 00:31:03,790
of<font color="#E5E5E5"> shellcode and underneath</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> load</font>

757
00:31:01,660 --> 00:31:07,150
<font color="#E5E5E5">more</font><font color="#CCCCCC"> knops just to make sure they think</font>

758
00:31:03,790 --> 00:31:08,950
<font color="#CCCCCC">definitely crashes and then we go</font><font color="#E5E5E5"> back</font>

759
00:31:07,150 --> 00:31:10,270
and<font color="#CCCCCC"> look</font><font color="#E5E5E5"> at the network services</font>

760
00:31:08,950 --> 00:31:12,820
listening on the box again there's one

761
00:31:10,270 --> 00:31:16,179
extra<font color="#E5E5E5"> service there on port 1 3 3 7</font>

762
00:31:12,820 --> 00:31:17,770
<font color="#E5E5E5">which is</font><font color="#CCCCCC"> the elite</font><font color="#E5E5E5"> port clearly this is</font>

763
00:31:16,179 --> 00:31:19,420
my exploit<font color="#E5E5E5"> running and that's the</font>

764
00:31:17,770 --> 00:31:20,679
<font color="#E5E5E5">shellcode winning so of course then what</font>

765
00:31:19,420 --> 00:31:22,390
you would do as a hacker is you'd

766
00:31:20,679 --> 00:31:24,520
connect to that port using<font color="#E5E5E5"> netcat or</font>

767
00:31:22,390 --> 00:31:25,450
<font color="#E5E5E5">more telnet or something and interact</font>

768
00:31:24,520 --> 00:31:27,510
with it but of<font color="#CCCCCC"> course we're in the</font><font color="#E5E5E5"> world</font>

769
00:31:25,450 --> 00:31:29,440
of scratch<font color="#E5E5E5"> you know we don't have</font><font color="#CCCCCC"> netcat</font>

770
00:31:27,510 --> 00:31:33,660
<font color="#E5E5E5">because we're not touching the operating</font>

771
00:31:29,440 --> 00:31:36,010
system<font color="#E5E5E5"> so we write our</font><font color="#CCCCCC"> own netcat</font><font color="#E5E5E5"> in</font>

772
00:31:33,660 --> 00:31:37,600
that in<font color="#E5E5E5"> that and that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the whole</font><font color="#CCCCCC"> of</font>

773
00:31:36,010 --> 00:31:39,220
<font color="#E5E5E5">the scratch</font><font color="#CCCCCC"> you need in order to</font>

774
00:31:37,600 --> 00:31:42,219
transmit<font color="#E5E5E5"> and receive from sockets</font>

775
00:31:39,220 --> 00:31:43,870
<font color="#CCCCCC">alright so that runs in a loop</font><font color="#E5E5E5"> you type</font>

776
00:31:42,220 --> 00:31:46,000
a command it<font color="#CCCCCC"> get brings back the results</font>

777
00:31:43,870 --> 00:31:48,219
and<font color="#CCCCCC"> splits</font><font color="#E5E5E5"> in so if I just make this</font>

778
00:31:46,000 --> 00:31:51,220
screen a bit bigger so<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> this</font>

779
00:31:48,220 --> 00:31:54,880
is me logged into tiny sprite over port

780
00:31:51,220 --> 00:31:56,350
1 3 3<font color="#CCCCCC"> 7</font><font color="#E5E5E5"> you can see what kind</font><font color="#CCCCCC"> of Linux</font>

781
00:31:54,880 --> 00:31:59,020
it's running<font color="#E5E5E5"> you can see it's got busy</font>

782
00:31:56,350 --> 00:32:01,330
box<font color="#E5E5E5"> you've</font><font color="#CCCCCC"> catted the password file and</font>

783
00:31:59,020 --> 00:32:08,410
so that is<font color="#CCCCCC"> actually an exploit running</font>

784
00:32:01,330 --> 00:32:12,100
from scratch in in tiniest way so to

785
00:32:08,410 --> 00:32:13,390
wrap up basically scratch is really

786
00:32:12,100 --> 00:32:15,520
interesting<font color="#E5E5E5"> it as a language</font><font color="#CCCCCC"> that's</font>

787
00:32:13,390 --> 00:32:17,140
<font color="#CCCCCC">really interesting</font><font color="#E5E5E5"> because you</font><font color="#CCCCCC"> don't</font>

788
00:32:15,520 --> 00:32:18,100
think<font color="#CCCCCC"> it can do very much and to start</font>

789
00:32:17,140 --> 00:32:19,570
playing<font color="#E5E5E5"> with it</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then you</font><font color="#CCCCCC"> realize</font>

790
00:32:18,100 --> 00:32:20,949
that if<font color="#E5E5E5"> you extend it</font><font color="#CCCCCC"> you can make</font><font color="#E5E5E5"> it do</font>

791
00:32:19,570 --> 00:32:23,500
pretty much anything that<font color="#E5E5E5"> you can make</font>

792
00:32:20,950 --> 00:32:24,880
<font color="#CCCCCC">pison do so</font><font color="#E5E5E5"> there's actually</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> quite a</font>

793
00:32:23,500 --> 00:32:26,740
lot<font color="#E5E5E5"> of cool stuff</font><font color="#CCCCCC"> you could do</font><font color="#E5E5E5"> is</font>

794
00:32:24,880 --> 00:32:28,780
scratch<font color="#E5E5E5"> but</font><font color="#CCCCCC"> the fact</font><font color="#E5E5E5"> it doesn't</font><font color="#CCCCCC"> have any</font>

795
00:32:26,740 --> 00:32:30,340
functions<font color="#E5E5E5"> means</font><font color="#CCCCCC"> it's a really bad</font>

796
00:32:28,780 --> 00:32:33,309
programming language it's<font color="#CCCCCC"> like learning</font>

797
00:32:30,340 --> 00:32:34,449
basic<font color="#E5E5E5"> on a spectrum back in the day you</font>

798
00:32:33,309 --> 00:32:36,700
<font color="#E5E5E5">know you learn a lot of bad practices</font>

799
00:32:34,450 --> 00:32:39,429
<font color="#E5E5E5">because you're not thinking functionally</font>

800
00:32:36,700 --> 00:32:40,960
but you know it just<font color="#CCCCCC"> makes it quirky and</font>

801
00:32:39,429 --> 00:32:43,900
interesting you know see we will use bad

802
00:32:40,960 --> 00:32:46,419
programming languages I guess<font color="#E5E5E5"> you write</font>

803
00:32:43,900 --> 00:32:48,190
the extensions in Python but really

804
00:32:46,419 --> 00:32:49,960
trivial<font color="#E5E5E5"> Python like you saw in</font><font color="#CCCCCC"> that say</font>

805
00:32:48,190 --> 00:32:53,380
example not a lot<font color="#CCCCCC"> of Python to actually</font>

806
00:32:49,960 --> 00:32:55,120
<font color="#E5E5E5">write which can be a gateway for kids</font>

807
00:32:53,380 --> 00:32:56,710
getting<font color="#E5E5E5"> from scratch into other</font>

808
00:32:55,120 --> 00:32:58,149
programming languages because once you

809
00:32:56,710 --> 00:32:59,590
start buying extensions you get used to

810
00:32:58,150 --> 00:33:02,740
<font color="#CCCCCC">by in</font><font color="#E5E5E5"> Python maybe you'll start buying</font>

811
00:32:59,590 --> 00:33:05,139
stuff<font color="#E5E5E5"> in Python perhaps add</font><font color="#CCCCCC"> gtk to it</font>

812
00:33:02,740 --> 00:33:07,059
<font color="#E5E5E5">you can write</font><font color="#CCCCCC"> for laps</font><font color="#E5E5E5"> and if you want</font>

813
00:33:05,140 --> 00:33:09,010
to do the whole hacking thing<font color="#E5E5E5"> maybe you</font>

814
00:33:07,059 --> 00:33:10,789
<font color="#E5E5E5">start learning some x86 machine code I</font>

815
00:33:09,010 --> 00:33:13,309
mean I went from basic honest

816
00:33:10,789 --> 00:33:16,070
straight to<font color="#CCCCCC"> Zed 80 machine code as a kid</font>

817
00:33:13,309 --> 00:33:17,479
and<font color="#E5E5E5"> then to 8086 machine code I</font><font color="#CCCCCC"> don't</font>

818
00:33:16,070 --> 00:33:19,129
see why<font color="#CCCCCC"> anyone couldn't go from scratch</font>

819
00:33:17,479 --> 00:33:21,169
to machine code<font color="#E5E5E5"> why not</font>

820
00:33:19,129 --> 00:33:25,428
so it's a lot of<font color="#E5E5E5"> fun and I definitely</font>

821
00:33:21,169 --> 00:33:29,119
<font color="#CCCCCC">recommend that</font><font color="#E5E5E5"> you have</font><font color="#CCCCCC"> a look my github</font>

822
00:33:25,429 --> 00:33:31,759
<font color="#E5E5E5">has the scratch code on there and the</font>

823
00:33:29,119 --> 00:33:33,619
slides and that's<font color="#E5E5E5"> my email address</font><font color="#CCCCCC"> I'll</font>

824
00:33:31,759 --> 00:33:34,849
be<font color="#E5E5E5"> around all weekend come and find me</font>

825
00:33:33,619 --> 00:33:45,019
<font color="#E5E5E5">if you want more of a demo</font><font color="#CCCCCC"> thank very</font>

826
00:33:34,849 --> 00:33:47,149
much thanks so much<font color="#CCCCCC"> Jeff for</font><font color="#E5E5E5"> such a</font>

827
00:33:45,019 --> 00:33:49,819
fascinating talk and I've been<font color="#E5E5E5"> using</font>

828
00:33:47,149 --> 00:33:51,349
scratch with kids and yeah the

829
00:33:49,819 --> 00:33:54,619
possibilities are obviously endless

830
00:33:51,349 --> 00:33:55,789
right<font color="#E5E5E5"> so unfortunately</font><font color="#CCCCCC"> I don't think</font>

831
00:33:54,619 --> 00:33:57,259
we're gonna<font color="#E5E5E5"> have time for questions</font>

832
00:33:55,789 --> 00:33:58,789
right away<font color="#CCCCCC"> cuz we need to get to our</font>

833
00:33:57,259 --> 00:34:02,269
<font color="#E5E5E5">next talk but if you want to come and</font>

834
00:33:58,789 --> 00:34:07,099
talk to<font color="#E5E5E5"> keV where can we find you around</font>

835
00:34:02,269 --> 00:34:09,049
and about<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> bar straight after this</font>

836
00:34:07,099 --> 00:34:10,489
<font color="#E5E5E5">okay that sounds like a good place</font><font color="#CCCCCC"> all</font>

837
00:34:09,049 --> 00:34:13,989
<font color="#CCCCCC">right thank you</font><font color="#E5E5E5"> so much please give</font>

838
00:34:10,489 --> 00:34:13,989
<font color="#CCCCCC">another round</font><font color="#E5E5E5"> of applause to keV</font>

839
00:34:16,359 --> 00:34:18,418
you

