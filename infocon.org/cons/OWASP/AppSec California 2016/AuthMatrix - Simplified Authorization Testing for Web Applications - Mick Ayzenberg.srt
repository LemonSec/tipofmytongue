1
00:00:18,470 --> 00:00:27,168
thank you for joining us and today I'm
here to present to you guys too I wrote

2
00:00:27,169 --> 00:00:32,829
the extension of the birth took it off
matrix and hopefully you guys will find

3
00:00:32,829 --> 00:00:37,790
it interesting and make your life a
little easier operation and web

4
00:00:37,790 --> 00:00:44,550
applications and Web services will be
about myself and security engineer at

5
00:00:44,550 --> 00:00:47,959
security innovation I've been in the
industry for about four years now and

6
00:00:47,960 --> 00:00:55,619
I've mainly been services to client work
permits the whole spectrum is fear away

7
00:00:55,619 --> 00:01:01,229
from web mobile desktop down to the low
level as far as special place in the

8
00:01:01,229 --> 00:01:06,549
research the path of rising seas NACO
talk about that in this presentation but

9
00:01:06,549 --> 00:01:11,560
if that's something that interests you
find me afterwards and only four years

10
00:01:11,560 --> 00:01:18,810
of spend a lot of fun interesting web
before tech companies in this time I've

11
00:01:18,810 --> 00:01:23,180
come to a few of the reasons I want to
share with you guys were quickly one

12
00:01:23,180 --> 00:01:27,540
thing I've noticed in this half decade
is that web security for the most part

13
00:01:27,540 --> 00:01:31,850
has gotten a lot better for new
applications are built on modern modern

14
00:01:31,850 --> 00:01:38,289
frameworks it's been seen that by
putting effort into proper design in

15
00:01:38,290 --> 00:01:42,229
terms of security and research before
building the application to prevent a

16
00:01:42,229 --> 00:01:47,780
lot of the issues that we're so
accustomed to at this point I want to

17
00:01:47,780 --> 00:01:52,240
mention that you know even though web
security painting is a very complex

18
00:01:52,240 --> 00:01:55,820
field but its presentation I want to
focus it down to three major categories

19
00:01:55,820 --> 00:02:03,809
for what to do when testing and
implementation configuration and other

20
00:02:03,810 --> 00:02:11,599
navies in business logic I talked about
those little bit but so far it looks

21
00:02:11,599 --> 00:02:16,649
like it's getting easier to do things
the right way the first time if you look

22
00:02:16,650 --> 00:02:20,360
at some of these attacks have been so
calming past you look at the

23
00:02:20,360 --> 00:02:26,660
methodologies for testing and fixing a
lot better access has gotten pretty

24
00:02:26,660 --> 00:02:30,810
standardize on how to test for it how to
find out how to located in those

25
00:02:30,810 --> 00:02:31,620
resources online

26
00:02:31,620 --> 00:02:36,459
that allow you to figure out what kind
of inputs to send how to evade filters

27
00:02:36,459 --> 00:02:42,700
and for fixing its pretty much become
known ruled that out helping hold

28
00:02:42,700 --> 00:02:46,929
everything all data and people start to
do this by default which is which is

29
00:02:46,930 --> 00:02:52,019
good but nothing that these delete this
this dude still exist they're becoming

30
00:02:52,019 --> 00:02:55,599
more and more aware what they see as a
good find something with sequels

31
00:02:55,599 --> 00:03:01,488
actually been for a process for testing
for all the input forbidden filters and

32
00:03:01,489 --> 00:03:05,940
once again there's no way that the right
way to fix it but since he's prime rates

33
00:03:05,940 --> 00:03:13,790
cruise by default the threat of
allocation and say hi concept with

34
00:03:13,790 --> 00:03:14,920
testing now

35
00:03:14,920 --> 00:03:18,409
testers know what to look for and if
this sort of exploring yet case until

36
00:03:18,409 --> 00:03:23,659
you find that these issues exist and are
still fixing this is not really left

37
00:03:23,659 --> 00:03:27,659
into the developers hands to come up
with their sleeves anymore really the

38
00:03:27,659 --> 00:03:31,548
work is now picking the right framework
that knows about these bugs and handled

39
00:03:31,549 --> 00:03:39,549
by the fault of the problem the problem
is that little bugs are still very

40
00:03:39,549 --> 00:03:44,790
common in web applications and Web
services and 10 min focus on today or

41
00:03:44,790 --> 00:03:55,899
the authorization bugs reason operation
is still really hard to get right it's

42
00:03:55,900 --> 00:03:57,970
hard to develop for its hard to death

43
00:03:57,970 --> 00:04:01,660
take a long time and it's going to be
specific to each unique application

44
00:04:01,660 --> 00:04:09,239
which makes it hard to choose the right
decisions up front that generic quickly

45
00:04:09,239 --> 00:04:12,620
point out the difference between
authentication and authorization some

46
00:04:12,620 --> 00:04:16,370
people may disagree with things that
specifics but for the sake of its top of

47
00:04:16,370 --> 00:04:19,070
authentication as proving who you are

48
00:04:19,070 --> 00:04:23,060
to the application to the server in this
is unusually by a login maybe things

49
00:04:23,060 --> 00:04:27,419
I've done and at that point it's all
session management so what kind of

50
00:04:27,419 --> 00:04:30,859
session tokens are used how secure those
tokens where where is the interview

51
00:04:30,860 --> 00:04:37,979
coming from that's all authentication
authorization it's more going to the

52
00:04:37,979 --> 00:04:42,530
server knows who we are how do we prove
that we are allowed to do what we are

53
00:04:42,530 --> 00:04:43,400
trying to do

54
00:04:43,400 --> 00:04:47,820
and the general way to do this is
through permission to access controls

55
00:04:47,820 --> 00:04:52,550
usually by assigning roles to users and
having a specific accident there or can

56
00:04:52,550 --> 00:05:01,660
perform top 10 how many times have you
guys seen this yet today I want to break

57
00:05:01,660 --> 00:05:06,729
down the US Top town in terms of you
know what these attacks are very briefly

58
00:05:06,729 --> 00:05:13,300
don't worry very briefly and what the
common sexism ways of testing for Mr the

59
00:05:13,300 --> 00:05:17,680
the darker ones are just the new ones
added in the 2013 so ignore that

60
00:05:17,680 --> 00:05:24,460
shooting her first 2593 this
configuration and unknown vulnerability

61
00:05:24,460 --> 00:05:31,599
components this has been the the area
that has been most like recovered by

62
00:05:31,600 --> 00:05:36,190
automation and scanning tools and it's
going to do another job whether their

63
00:05:36,190 --> 00:05:41,830
external or internal static analysis
tools it's it's generally feel that you

64
00:05:41,830 --> 00:05:45,419
know you can run these tools and I'll
find your configuration area it will

65
00:05:45,419 --> 00:05:49,880
find a network network issues and then
fixing it is just you know releasing the

66
00:05:49,880 --> 00:05:55,530
patching schedule and fixing the
nation's next category is well liked the

67
00:05:55,530 --> 00:06:00,340
framework and these are the ones that
have like I was mentioned earlier have

68
00:06:00,340 --> 00:06:04,770
slowly start to be fixed by defaults for
you choose the correct framework for the

69
00:06:04,770 --> 00:06:08,590
injection the authentication that's a
sign on cross site scripting

70
00:06:09,370 --> 00:06:14,150
respiratory and validated redirects and
usually by making the right decisions on

71
00:06:14,150 --> 00:06:19,000
how to build your OUTFRONT these can be
prevented from most part of by default

72
00:06:19,000 --> 00:06:25,479
last category are the ones and these are
the ones that I think deal with

73
00:06:25,479 --> 00:06:28,479
authorization

74
00:06:31,350 --> 00:06:36,420
the issue here with these loans is the
framework really can't be aware of what

75
00:06:36,420 --> 00:06:39,960
kind of authorization plan you have it's
going to be specific to every single

76
00:06:39,960 --> 00:06:44,620
case that if you have a application has
users that are regular users and I miss

77
00:06:44,620 --> 00:06:50,030
user is admin on Jun 14 you'll see often
but really it's it's it's hard to

78
00:06:50,030 --> 00:06:55,130
generalize you can come up with one stop
solution that you do by the fault and

79
00:06:55,130 --> 00:06:58,480
that really require thinking about it in
the security context up-front

80
00:07:02,890 --> 00:07:08,890
authorization examples just so we are
clear we're talking about the first one

81
00:07:08,890 --> 00:07:14,830
is going to be the last september 4
which is the direct object reference I

82
00:07:14,830 --> 00:07:18,760
can agree together but just separate
them out as you can see it's the website

83
00:07:18,760 --> 00:07:22,510
and just reading the URL you can sort of
guessed that it's going to returning any

84
00:07:22,510 --> 00:07:28,690
info regarding the user who have the
1853 access thing that I D 53 is the

85
00:07:28,690 --> 00:07:33,410
direct object that we are referencing in
this case the other one number seven was

86
00:07:33,410 --> 00:07:37,560
the missing from sea level access
controls I like to call it forced

87
00:07:37,560 --> 00:07:42,640
browsing that's a common term for
weather and really that's you know in

88
00:07:42,640 --> 00:07:47,240
this case the the URLs to an admin page
and it has some specific functionality

89
00:07:47,240 --> 00:07:52,070
is assumed to be available deadlines and
the vulnerability comes in is if

90
00:07:52,070 --> 00:07:56,480
somebody who is able to access that page
and it is assumed they would not be able

91
00:07:56,480 --> 00:08:00,320
to see it because there's no link to it
or something like that and it still

92
00:08:00,320 --> 00:08:06,670
succeeds and as you can see the last
example can be layered and happened both

93
00:08:06,670 --> 00:08:11,580
the fourth browsing and direct object
reference not just in case you're

94
00:08:11,580 --> 00:08:14,830
thinking well these are all get requests
that you know if you're using Postgres

95
00:08:14,830 --> 00:08:20,060
like you're supposed to feel the exact
same scenario in this case the same one

96
00:08:20,060 --> 00:08:27,030
from before the user that 70 provides
the ideal 53 as a person but any user

97
00:08:27,030 --> 00:08:30,700
who has a different level can still
attempt to make that request if it

98
00:08:30,700 --> 00:08:34,000
succeeds it still a hugely critical
authorization issue

99
00:08:36,059 --> 00:08:53,589
the challenges with another issue is
that is time consuming to test as a

100
00:08:53,589 --> 00:08:59,110
tester when I've tried to eliminate all
chances of authorization makes recover

101
00:08:59,110 --> 00:09:06,850
every single case it's often a very long
manual process particular note taking

102
00:09:06,850 --> 00:09:10,740
and keeping my own state it's hard to be
verified that I did it correctly because

103
00:09:10,740 --> 00:09:15,490
of that you know he's tested for works
in their own way if you're working on

104
00:09:15,490 --> 00:09:19,330
one project for a long time maybe you're
you're working on internal product or

105
00:09:19,330 --> 00:09:24,420
company I usually try to automate this
you can come up with the money its

106
00:09:24,420 --> 00:09:28,779
losing the battle over but that being
the case it is usually private program

107
00:09:28,779 --> 00:09:34,040
from scratch them to take time and it's
not very generic kept you use and I said

108
00:09:34,040 --> 00:09:39,050
there becomes harder to treat as you
know your your application for the

109
00:09:39,050 --> 00:09:43,870
second time after their pensions is that
the issues you may have to do the entire

110
00:09:43,870 --> 00:09:50,070
process over again for me when I'm
testing operate they say this is usually

111
00:09:50,070 --> 00:09:55,760
unfortunately what process looks like a
manual process first thing I do is I

112
00:09:55,760 --> 00:09:59,069
numerate all the rules of the system and
it's going to be interesting sometimes

113
00:09:59,070 --> 00:10:03,370
because it can be kinda confusing what a
role of the system is oftentimes you

114
00:10:03,370 --> 00:10:07,180
know you'll talk to a client and they
say well we have a user and it has but

115
00:10:07,180 --> 00:10:08,349
that's not really the full story

116
00:10:08,350 --> 00:10:11,370
you know 'cause there's also the
anonymous user who's expected not to be

117
00:10:11,370 --> 00:10:16,380
able to do anything maybe the admin has
the ability to get permission to certain

118
00:10:16,380 --> 00:10:21,430
users or user has read or write
permissions in that case a user with a

119
00:10:21,430 --> 00:10:27,380
different combination of its presence in
new role so numerous other rules

120
00:10:27,380 --> 00:10:31,110
next up is the classic interfering
explore the application of the

121
00:10:31,110 --> 00:10:34,410
functional the hell is intended to be
used to have a full map of everything

122
00:10:34,410 --> 00:10:42,610
that we never that you create users for
each one of those roles and authenticate

123
00:10:42,610 --> 00:10:48,650
them and get the tokens prior to and
after that is this this horrible manual

124
00:10:49,290 --> 00:10:53,849
that is so prone to error where you if
you look at it as a poorly generate

125
00:10:53,850 --> 00:10:58,529
every single combination of roll user
requests that is needed to confirm that

126
00:10:58,529 --> 00:11:03,000
there is no issue we're underclass we
see the result we look at the results of

127
00:11:03,000 --> 00:11:06,709
the terminal did this work is this user
in any roles where this would work if

128
00:11:06,709 --> 00:11:11,180
that's an issue and we're quarter
results and usually it turns into a big

129
00:11:11,180 --> 00:11:17,699
notepad checklist for me and it's pretty
messy in there is so much opportunity

130
00:11:17,699 --> 00:11:21,229
for a test would have human error i mean
you know we all like to think that we

131
00:11:21,230 --> 00:11:24,910
are you know disciplined enough to be
able to test this then and make note of

132
00:11:24,910 --> 00:11:36,449
things but having such a long manual
process just by the fault near here is a

133
00:11:36,449 --> 00:11:45,519
picture of a rat model access matrix
that uncommon even if if doesn't have it

134
00:11:45,519 --> 00:11:49,269
in the routine to generally build a
model this is something that we can

135
00:11:49,269 --> 00:11:54,690
build in our brains implicitly describe
what we're looking at a little bit what

136
00:11:54,690 --> 00:12:00,339
we see here is on the left side are our
assets are protected information system

137
00:12:00,339 --> 00:12:03,790
in this case it's gonna be employee
information like their names their

138
00:12:03,790 --> 00:12:08,170
security number two on the right hand
side we have all the rules you can see

139
00:12:08,170 --> 00:12:13,839
there's a role for anonymous user an
employee and manager and then we have

140
00:12:13,839 --> 00:12:19,220
what we call the model which is create
read update and delete and he's only got

141
00:12:19,220 --> 00:12:24,310
so that we can perform on these outfits
and so generally we build either you

142
00:12:24,310 --> 00:12:29,849
know I'm paper on in a document ordered
her brain an idea of which users which

143
00:12:29,850 --> 00:12:35,399
are allowed to perform these actions we
build a stable and if you look just a

144
00:12:35,399 --> 00:12:38,910
sort of interpreter love it you can see
if you go to the employee and employer

145
00:12:38,910 --> 00:12:42,199
name you can see that you know they
should never be able to delete employee

146
00:12:42,199 --> 00:12:45,139
named makes sense and they said
sometimes be able to read our updated

147
00:12:45,139 --> 00:12:49,740
and what I mean by sometimes is in this
case the employee would have access to

148
00:12:49,740 --> 00:12:53,010
their own employee information not any
other employee

149
00:12:53,010 --> 00:12:58,430
elitism however if you look over it has
manager which in this case is and always

150
00:12:58,430 --> 00:13:04,400
so they always have the ability to see
in a more update to make such as it was

151
00:13:04,400 --> 00:13:08,459
when the deal is you know we have a
process of manual testing for

152
00:13:08,460 --> 00:13:13,700
authorization and we have this beautiful
table that we sort of build implicitly

153
00:13:13,700 --> 00:13:18,110
if we could combine these two and sort
of make the process easier and eliminate

154
00:13:18,110 --> 00:13:23,990
the need for human possibility that
human error rate that's where the idea

155
00:13:23,990 --> 00:13:32,280
for automatics came in looks awesome
design goals that I had going into the

156
00:13:32,280 --> 00:13:39,510
project being an intuitive UI you know
if it's confusing and doesn't really

157
00:13:39,510 --> 00:13:44,780
help in the testing flow and it you know
it becomes a task that's not really

158
00:13:44,780 --> 00:13:48,800
worth doing it's not gonna get used i
want to make sure that this is you know

159
00:13:48,800 --> 00:13:56,459
enough to look at it and it is something
that doesn't the process of testing

160
00:13:56,460 --> 00:14:02,790
because it's hard to automate for the
creation of rules increase the users

161
00:14:02,790 --> 00:14:06,000
because they're all gonna be different
each system I think the solution was to

162
00:14:06,000 --> 00:14:09,510
move all of that work up front just
anything that we build a threat model in

163
00:14:09,510 --> 00:14:13,830
the beginning of the project once we
have explored it would have the mapping

164
00:14:13,830 --> 00:14:18,830
of the conditions there were tables of
users and roles and all the front and

165
00:14:18,830 --> 00:14:22,090
once that's been done and you can look
in verifying check your order then I

166
00:14:22,090 --> 00:14:28,230
want a simple click and run interface I
do unless I was hoping the chance of

167
00:14:28,230 --> 00:14:33,340
human error by sort of like pulling out
that for me but we saw earlier and I

168
00:14:33,340 --> 00:14:36,080
want to make sure that this application
covered at least 90 percent of the test

169
00:14:36,080 --> 00:14:39,640
scenarios because this is really cool
but it can only be used for a couple

170
00:14:39,640 --> 00:14:45,699
target applications it's it's not really
worth it I went out his refusal testing

171
00:14:45,700 --> 00:14:49,870
that way once it's been tested once you
have a solution maybe you can test again

172
00:14:49,870 --> 00:14:54,810
to confirm maybe after its been patched
updated and fixed you can just run it

173
00:14:54,810 --> 00:15:00,390
simply again without having to do the
work again and how the results and ya

174
00:15:00,390 --> 00:15:04,120
think make life easier if it's difficult
to use of it's complicated

175
00:15:04,889 --> 00:15:11,730
looking at used there's no point to the
platform that I decided to use to build

176
00:15:11,730 --> 00:15:17,850
this application but sweet biggest
reason is it's widely used by you that

177
00:15:17,850 --> 00:15:21,359
for practically every single web
applications and Web Service gave them

178
00:15:21,359 --> 00:15:27,040
together on a lot of power has a lot of
functionality and it's very very simple

179
00:15:27,040 --> 00:15:34,108
to use to get used to basically set up
as an attack proxy requests go from the

180
00:15:34,109 --> 00:15:39,799
road and you can view everything request
in full as it goes through early

181
00:15:39,799 --> 00:15:45,329
recommit casings you can buzz you can
tamper with it you can take a request

182
00:15:45,329 --> 00:15:50,998
and send it directly from Bourbon void
the process of using browser altogether

183
00:15:50,999 --> 00:15:54,009
it's really nice I went to a build it
from there

184
00:15:54,009 --> 00:16:01,230
luckily website has this extender if he
either had a few years ago and it allows

185
00:16:01,230 --> 00:16:05,359
you to basically customized bourbon add
new features to it by using their API's

186
00:16:05,359 --> 00:16:12,069
really really nice they have you guys in
multiple languages which is great job

187
00:16:12,069 --> 00:16:19,189
but they all support Python Ruby and I'm
the type of guy so I thought that's what

188
00:16:19,189 --> 00:16:25,860
you can do with the birth we accelerate
three new tabs with you can send

189
00:16:25,860 --> 00:16:30,069
requests just be a man we constructed
from the next few levels turned into a

190
00:16:30,069 --> 00:16:34,469
request you can modify everything
request going through per if you want to

191
00:16:34,470 --> 00:16:39,829
make a modification to every header that
goes through that you can format data

192
00:16:39,829 --> 00:16:45,419
types make it easier for you to read and
work well if your javascript and you

193
00:16:45,419 --> 00:16:50,869
want to make it pretty you can do that
and you can update the in-house to

194
00:16:50,869 --> 00:16:54,369
search for specialized loyalties that
you're looking for so if you're working

195
00:16:54,369 --> 00:16:59,889
with the framework where tens a specific
type of it can be extended to catch

196
00:16:59,889 --> 00:17:08,429
those extensions they've been written in
the past this one the top one is one

197
00:17:08,429 --> 00:17:12,329
that I have used on projects all the
time and that's a rating of extension

198
00:17:12,329 --> 00:17:16,430
for API signatures so if you're using
web service and they have

199
00:17:16,430 --> 00:17:19,890
you know private keeper user and they
find the message and then put that

200
00:17:19,890 --> 00:17:25,000
signature inside the header just not be
done with that happens on the fly you

201
00:17:25,000 --> 00:17:28,280
don't have to worry about camp with they
don't know that the signature that the

202
00:17:28,280 --> 00:17:34,360
correct thing really but the other
expenses made it past are you getting

203
00:17:34,360 --> 00:17:38,639
for heart bleed integrating with other
tools such as I can nap pulling up you

204
00:17:38,640 --> 00:17:41,750
know it was a target from him that I
just general logging in or taking it

205
00:17:41,750 --> 00:17:44,750
helps to accelerate your methodology

206
00:17:47,900 --> 00:17:55,020
also includes the App Store about store
which makes it really nice rather than

207
00:17:55,020 --> 00:17:57,830
having to search all of get home and all
of the internet to find all these cool

208
00:17:57,830 --> 00:18:02,449
attention that you want to use right
with inside the application there's a

209
00:18:02,450 --> 00:18:05,760
store which offers free extensions and
it just makes it simple so you can click

210
00:18:05,760 --> 00:18:12,810
install and then just a couple of
extensions no one makes sure that the

211
00:18:12,810 --> 00:18:18,179
work I was doing was not something that
already exists and it was something new

212
00:18:18,180 --> 00:18:28,380
and helpful don't know but that's where
the pictures but I I did find several

213
00:18:28,380 --> 00:18:32,470
times since then after reviewing trying
how it didn't fit the needs those

214
00:18:32,470 --> 00:18:36,850
looking for those criteria the big thing
is it still tryna came down to the one

215
00:18:36,850 --> 00:18:40,590
question at a time you would just have a
way of switching the cookies and then it

216
00:18:40,590 --> 00:18:44,120
still be a mental process of comparing
it and then determining this user is

217
00:18:44,120 --> 00:18:49,600
somebody who should have this response
to this request more so you I was

218
00:18:49,600 --> 00:18:54,889
confusing and it just doesn't make sense
to spend the time getting used to that

219
00:18:54,890 --> 00:18:59,440
application or may not be helpful people
just the ball back to their mental

220
00:18:59,440 --> 00:19:12,760
processes or 830 dreaded live demo you
guys ready for this as I want

221
00:19:14,990 --> 00:19:20,990
so alive don't know we have a sample
application that is going to be our

222
00:19:20,990 --> 00:19:22,340
target markets that up

223
00:19:22,340 --> 00:19:29,949
matrix to have a configuration that test
the offices of its application shows is

224
00:19:29,950 --> 00:19:38,780
actually the hackathon company security
of a sudden it's super super nice it's a

225
00:19:38,780 --> 00:19:42,350
web based hackathon that integrates with
the scoring system so that you find a

226
00:19:42,350 --> 00:19:46,480
bug for a cross-site scripting and it
probably comes up and you know indicates

227
00:19:46,480 --> 00:19:53,210
the scoreboard that you can look at and
then you know yourself compared to other

228
00:19:53,210 --> 00:19:58,370
users and one that we're gonna use
today's letter sample page our Web Site

229
00:19:58,370 --> 00:20:05,169
Explorer this really quickly and before
I do this

230
00:20:18,210 --> 00:20:21,210
back to screen

231
00:20:22,940 --> 00:21:02,130
their internet ok

232
00:21:10,790 --> 00:21:16,040
you can see a list of all the challenges
that completed so far just one point out

233
00:21:16,040 --> 00:21:20,710
there's only one done so far as to what
it looks like when you actually solve

234
00:21:20,710 --> 00:21:23,710
the challenge here

235
00:21:26,180 --> 00:21:30,960
sequence action on the line of scrimmage
give you the way we're also running the

236
00:21:30,960 --> 00:21:36,810
phone right now as we speak to the
Securities innovation can mess around

237
00:21:36,810 --> 00:21:41,300
with their own your own time for the
next two days so you're doing that

238
00:21:41,300 --> 00:21:46,610
answer here but I mean to you to the
classic sequence actually here to login

239
00:21:46,610 --> 00:22:03,490
or password and quickly just like
explore the application and see what

240
00:22:03,490 --> 00:22:07,360
we're dealing with skim through it
because it's a large application but

241
00:22:07,360 --> 00:22:10,889
that would be the first step here is
your target enumerate everything

242
00:22:10,890 --> 00:22:15,870
functionally employee so here we have
some seeds we have payment information

243
00:22:15,870 --> 00:22:27,550
we have a stands preferences profile
information all things are normal for an

244
00:22:27,550 --> 00:22:30,800
employee and we have these other two
tabs here

245
00:22:30,800 --> 00:22:35,060
management which is for the specific
Manager role and in there you can look

246
00:22:35,060 --> 00:22:41,560
at employees approve timesheets approve
reviews and generate various reports as

247
00:22:41,560 --> 00:22:49,790
well and in another section that is the
preferred admin or hr's the column is to

248
00:22:49,790 --> 00:22:55,750
create employees to view all employees
and other reporting features looks like

249
00:22:55,750 --> 00:23:00,130
Hannah cook the the user that we logged
into with a single injection is all

250
00:23:00,130 --> 00:23:01,120
three of those rules

251
00:23:01,120 --> 00:23:08,860
admin manager and a regular employee
login to some test accounts that I made

252
00:23:08,860 --> 00:23:14,010
briefly just to see what it looks like
if you don't have those rules

253
00:23:16,150 --> 00:23:22,280
its password in this case there's no
functionality to act as though that

254
00:23:22,280 --> 00:23:26,090
middle management abilities so we can
assume that those are specific for those

255
00:23:26,090 --> 00:23:31,750
are all types and should be accessible
from without their permission but the

256
00:23:31,750 --> 00:23:33,070
same kind of features here

257
00:23:33,070 --> 00:23:41,639
alright so what is our first step for
step is going to the tab here with

258
00:23:41,640 --> 00:23:46,380
matrix everything alright it's ok let me
know if it's too small and I learned the

259
00:23:46,380 --> 00:23:55,730
lifting let's define the rules so any
system there's going to be an anonymous

260
00:23:55,730 --> 00:24:05,780
even if it has no provisions for gonna
find almost here and we have three other

261
00:24:05,780 --> 00:24:24,030
councils have employee we have manager
and we have a jar or Evan Wright and now

262
00:24:24,030 --> 00:24:27,610
we find the rules and we have a good
combination of users that it's kind of

263
00:24:27,610 --> 00:24:33,570
case that we care about is going to be
here and testable once again we want the

264
00:24:33,570 --> 00:24:40,929
anonymous user we're gonna have just one
regular employee of the one I just

265
00:24:40,930 --> 00:24:47,950
logged in you have someone who is just a
manager we're gonna have someone who is

266
00:24:47,950 --> 00:24:54,550
just had been alright because I matrix
and now the first step is to define

267
00:24:54,550 --> 00:24:59,149
which rolls to these uses existence to
take that year

268
00:24:59,810 --> 00:25:04,250
employees as an employee manager is
going to be a manager but also an

269
00:25:04,250 --> 00:25:09,530
employee and it's always going to be a
star and also because every other users

270
00:25:09,530 --> 00:25:18,350
can be in place let alone the next step
is to find the accents are being

271
00:25:18,350 --> 00:25:22,770
performed and add them so easy way to do
that is to go to

272
00:25:25,670 --> 00:25:36,250
did not have my proxy on when I was
exploring the first time so did record

273
00:25:36,250 --> 00:25:41,150
all the requests I was making me do that
really quickly again and speed mode

274
00:25:51,230 --> 00:26:01,030
all right we're going to have someone
who has all of the access

275
00:26:08,630 --> 00:26:29,480
quickly step forward making fun of his
request we have the baseline page now we

276
00:26:29,480 --> 00:26:33,940
haven't tried it for here we can see
that we have all these requests that we

277
00:26:33,940 --> 00:26:38,830
just need to get requests to reviews and
you can see the response and I'm just

278
00:26:38,830 --> 00:26:45,790
gonna grab a bunch of them all of these
get requests and start with just one for

279
00:26:45,790 --> 00:26:51,790
now lol address later but they sent us
matrix now when you get off it hurts you

280
00:26:51,790 --> 00:26:57,030
have this request right here if you're
urals unmanageable you can modify it to

281
00:26:57,030 --> 00:27:07,170
change it to whatever it might be like
employee reviews but as the request just

282
00:27:07,170 --> 00:27:14,250
because the URLs are easy enough to
follow in this application lets you see

283
00:27:14,250 --> 00:27:19,880
here is a success rejects the condition
that I think it's going to look for to

284
00:27:19,880 --> 00:27:24,580
determine whether through the request
succeeded in the action or failed the

285
00:27:24,580 --> 00:27:28,129
thought we have here is looking for a
200 ok and this application that works

286
00:27:28,130 --> 00:27:31,430
perfect because it responds to the two
hundred whenever it succeeds in a three

287
00:27:31,430 --> 00:27:37,310
hundred three or 330 when it fails to
leave it like this but otherwise he

288
00:27:37,310 --> 00:27:41,210
would just add in you know whatever
you're looking for from the response to

289
00:27:41,210 --> 00:27:43,710
indicate that it failed

290
00:27:43,710 --> 00:27:52,550
let's quickly check this and say which
uses a lot of serious and I miss you

291
00:27:52,550 --> 00:27:56,370
would not be allowed because they are
not authenticated and employees are

292
00:27:56,370 --> 00:28:02,010
allowed from there simplyjust replicate
request or you can press the button at

293
00:28:02,010 --> 00:28:09,129
the bottom it says right now we see oh I
miss them very important step so why

294
00:28:09,130 --> 00:28:12,110
does this not work it's because I
haven't had any special tokens to these

295
00:28:12,110 --> 00:28:16,899
users yet so there's less steps and now
we have over use the fun we want to

296
00:28:16,900 --> 00:28:21,660
authenticate user either way here is
fine and we're loading before

297
00:28:21,660 --> 00:28:35,310
or grab this request a repeater and then
modify this I'm gonna do for year 12 is

298
00:28:35,310 --> 00:28:45,810
and you can see its redirect a home here
is your cookie just grab this and this

299
00:28:45,810 --> 00:28:55,100
is for employee one out of here to the
center of an area let's do that for the

300
00:28:55,100 --> 00:28:56,860
rest of the user's really quick

301
00:28:56,860 --> 00:29:00,270
manager

302
00:29:24,110 --> 00:29:28,899
anonymous we just give it cookie but
take away the values

303
00:29:28,900 --> 00:29:38,059
all right now with more time everything
is configured correctly and not

304
00:29:38,059 --> 00:29:43,740
succeeded by its just click the Request
we see our original here we can see the

305
00:29:43,740 --> 00:29:49,980
first lady that was originally with the
response was a 202 anonymous user and

306
00:29:49,980 --> 00:29:53,710
see the position has been cleared and
the response has a 303 telling you to

307
00:29:53,710 --> 00:29:59,419
log in and then each other user has a
200 ok and was requested with their

308
00:29:59,419 --> 00:30:05,690
special tokens if you're going to
request an application has left you can

309
00:30:05,690 --> 00:30:11,070
also enter into the CSRF token right
here so far it's only static and Sophia

310
00:30:11,070 --> 00:30:15,590
Saratogian is having the same lifetime
as a session token which is pretty

311
00:30:15,590 --> 00:30:19,168
common in most applications even though
it's not the most secure Internet in

312
00:30:19,169 --> 00:30:24,020
right here right now we got the first
one done let's go ahead and just a bunch

313
00:30:24,020 --> 00:30:32,929
more sad to talk matrix let's go into
our admin here and at all of you guys

314
00:30:32,929 --> 00:30:38,370
just the request that I mean forget
request to areas of the page that should

315
00:30:38,370 --> 00:30:46,729
only be accessed by those users and adds
some measures specific terms now we have

316
00:30:46,730 --> 00:30:51,600
all of us here and with Cisco 30
anonymous soon make any requested any of

317
00:30:51,600 --> 00:30:58,360
the use of inflation be able to access
these two specific to admin page are we

318
00:30:58,360 --> 00:31:03,219
got through manager here for the rest of
us

319
00:31:10,700 --> 00:31:19,700
the red indicates that there is an issue
it could be something configurations

320
00:31:19,700 --> 00:31:24,320
will double check it makes it possible
that I miss type something as simple as

321
00:31:24,320 --> 00:31:32,590
possible but if it's not that indication
of an authorization bypass plug very

322
00:31:32,590 --> 00:31:39,439
critical verify this one this one was to
admin user lists anonymous user had a

323
00:31:39,440 --> 00:31:43,050
three or three that's expected H R which
is the only one who should be allowed to

324
00:31:43,050 --> 00:31:49,020
see this page or render it to see see
like getting a list of every single

325
00:31:49,020 --> 00:31:54,430
using the system so it succeeded and
it's showing red on employee manager and

326
00:31:54,430 --> 00:31:57,970
as you can see those ones succeeded as
well even though those users with those

327
00:31:57,970 --> 00:32:02,950
special tokens did not have the proper
permissions to access this page it still

328
00:32:02,950 --> 00:32:18,350
was able to produce results and with
these ones as well as you can see there

329
00:32:18,350 --> 00:32:24,830
is no access controls on these requests
and so all of them succeeded and if you

330
00:32:24,830 --> 00:32:30,270
look at this one this is where admin
user the nazis looks like the operation

331
00:32:30,270 --> 00:32:33,360
was successful and if we double check
this by saying you know didn't play when

332
00:32:33,360 --> 00:32:40,520
it catch it says that this is where
application acted as it was both of you

333
00:32:54,380 --> 00:33:32,390
look for anything that i'm looking for
exactly right now and provides a

334
00:33:32,390 --> 00:33:36,970
methodology that had awful manual for
loop with so much room for human error

335
00:33:36,970 --> 00:33:43,640
let's take a look at how we do it all
starts at the same place and we had all

336
00:33:43,640 --> 00:33:46,890
the functionality in points to operate
ricks we go through and that target list

337
00:33:46,890 --> 00:33:51,790
and you know after enduring the entire
page which one we define all the rules

338
00:33:51,790 --> 00:33:56,220
and users of the system that we need to
fill out those those tables and we

339
00:33:56,220 --> 00:34:01,160
define a success conditions to determine
so it automatically figure out whether

340
00:34:01,160 --> 00:34:07,040
you know it succeeded where did not feel
that we just generate a set of tokens

341
00:34:07,040 --> 00:34:19,529
one-time email and run and then save and
heat waves your way nicer a couple of

342
00:34:19,530 --> 00:34:25,250
tips and tricks the majority of cases
you're fine if you're nothing about the

343
00:34:25,250 --> 00:34:29,639
case will be where cookies are the
tokens being used metric supports both

344
00:34:29,639 --> 00:34:32,639
headers and cookies if they put the
token in the headers

345
00:34:33,739 --> 00:34:38,580
where does that is it looks when you
enter in and if it's equals if it's a

346
00:34:38,580 --> 00:34:45,029
call in like it seems to be headers
apart the right into the one thing I

347
00:34:45,030 --> 00:34:48,889
didn't show you one last time I wanna
see you next one is the ability to save

348
00:34:48,889 --> 00:34:53,580
and load this config there is a save and
load by noon the very bottom once you

349
00:34:53,580 --> 00:34:57,440
fill out these tables and define these
rules you can see that allows it to

350
00:34:57,440 --> 00:35:01,550
death and then loaded up as separate I'm
and adding new system tokens and running

351
00:35:01,550 --> 00:35:06,080
again makes it much easier because you
hear is your serializing dated this

352
00:35:06,080 --> 00:35:10,400
and then I'm serializing that data to
the application which if anybody follow

353
00:35:10,400 --> 00:35:16,000
serialization bugs is prone to the
security flaws all the time so my

354
00:35:16,000 --> 00:35:18,880
recommendation I give you a little
warning message when you try to do it is

355
00:35:18,880 --> 00:35:21,150
don't let any trust in FIGS

356
00:35:21,150 --> 00:35:25,290
entrusted to make sure this is a good
thing that you save yourself or came

357
00:35:25,290 --> 00:35:30,090
from a verified source just a prevention
any kind of risk whatsoever and the

358
00:35:30,090 --> 00:35:35,910
security guy get paranoid about these
things they weren't necessary and the

359
00:35:35,910 --> 00:35:40,500
other thing is parameters can matter and
authorization as well so if we talked

360
00:35:40,500 --> 00:35:44,720
about that part of the OS popped and
insecure direct object reference where

361
00:35:44,720 --> 00:35:51,359
in the example it was using the user ID
that it can also be handled pretty well

362
00:35:51,360 --> 00:36:04,250
without matrix and I'm gonna demonstrate
that really served quickly here is one

363
00:36:04,250 --> 00:36:09,890
of the things I check really quick so it
has these four results here that have

364
00:36:09,890 --> 00:36:16,930
issues with our scoreboard really quick
and see how that compares ok so has a

365
00:36:16,930 --> 00:36:23,000
secret sexual from the first one and it
has 1234 results by using authentic like

366
00:36:23,000 --> 00:36:37,860
this that the path up with whatever new
ways it registered as its ok so we were

367
00:36:37,860 --> 00:36:41,770
talking about direct object reference
those who go to repay that section here

368
00:36:41,770 --> 00:36:51,610
you can see that this is indeed with a
user one and its case it's for that

369
00:36:51,610 --> 00:36:58,500
Hanako the one we were able to login to
add a new user really quick we're gonna

370
00:36:58,500 --> 00:37:01,500
add new user

371
00:37:04,940 --> 00:37:10,020
we can just go to our repeater in rebel
s request because that's because

372
00:37:10,020 --> 00:37:23,890
otherwise indicated to us here and here
you can see by looking at the Women of

373
00:37:23,890 --> 00:37:29,040
Faith has all the privileges that she's
both manager and its are just check all

374
00:37:29,040 --> 00:37:38,550
the boxes here we can do here is we can
also add a new role during class that's

375
00:37:38,550 --> 00:37:42,170
been so usually you give a fuck the
rules and will say we need to account

376
00:37:42,170 --> 00:37:50,500
for at least two of those were for
testing so far replicate that all you do

377
00:37:50,500 --> 00:38:00,960
is they user I D 10 and the only user
who can be user 81 if this show you how

378
00:38:00,960 --> 00:38:04,460
are you that is never this changes
because this is all dependent on whether

379
00:38:04,460 --> 00:38:09,240
your employee manager EHR go to that
request

380
00:38:09,240 --> 00:38:13,500
pay stubs and I grab this one that was
only gonna return for him to cook that

381
00:38:13,500 --> 00:38:23,790
user 13 tracks now can select only user
8160 there it's gonna only truth as the

382
00:38:23,790 --> 00:38:33,680
one successful run this request and as
you can see you all users were able to

383
00:38:33,680 --> 00:38:41,310
see the paystubs of Chanukah once again
just to double check here we get points

384
00:38:41,310 --> 00:38:52,089
for it yes lets users pay stubs vehicle
right to help with this is looking for

385
00:38:52,089 --> 00:38:56,900
you were out if it's not included in the
members opposed to make that kind of

386
00:38:56,900 --> 00:39:02,950
tricky if you want to have multiple
users so I can write this as a stubs for

387
00:39:02,950 --> 00:39:06,450
user user

388
00:39:07,830 --> 00:39:11,880
so now that I've gone through the entire
application in math everything I can go

389
00:39:11,880 --> 00:39:19,140
to process of saving the save this as
democrats date and then try it and if I

390
00:39:19,140 --> 00:39:23,220
ever you know the problems we want to
reduce regression testing will have to

391
00:39:23,220 --> 00:39:28,209
do is load up the old states it warns me
are you sure you want to block this user

392
00:39:28,210 --> 00:39:36,290
data Gary yes we do we just created it
can see it all back up the result of

393
00:39:36,290 --> 00:39:42,000
them so that's just an issue with using
the big guy but everything else is saved

394
00:39:42,000 --> 00:39:46,580
and you can just once again run it as
many as you want to run

395
00:40:04,859 --> 00:40:16,690
limitations on using Affymetrix like I
said before right now it only supports

396
00:40:16,690 --> 00:40:21,609
static CSRF tokens if you have you know
if you're doing it right and yes the SRF

397
00:40:21,609 --> 00:40:26,200
to expire in every single class peter is
not currently going to be able to handle

398
00:40:26,200 --> 00:40:30,669
that but that is the rare case
unfortunately it so it still fits within

399
00:40:30,670 --> 00:40:36,859
my 90 percent of targets threshold for
multiple sets of Tolkien's if you have

400
00:40:36,859 --> 00:40:40,640
more than one cookie that identifies a
user that will work at this point as

401
00:40:40,640 --> 00:40:45,359
well that's a bummer that right now says
success detection has to be a regex

402
00:40:45,359 --> 00:40:49,440
other areas of birth of a much more
clean interface freakin look into the

403
00:40:49,440 --> 00:40:54,890
response and sort of grab the section
that you want to handle the regex

404
00:40:54,890 --> 00:41:03,670
automatically when I come in the future
right now but there's no support for web

405
00:41:03,670 --> 00:41:08,130
service signature sport but like I said
before how you know there are other

406
00:41:08,130 --> 00:41:12,849
expenses that you can either build
yourself or use to create signatures and

407
00:41:12,849 --> 00:41:18,470
put them in the head is automatically if
done correctly used to integrate very

408
00:41:18,470 --> 00:41:23,839
very well we have done is by having the
signature thanks to look for a header

409
00:41:23,839 --> 00:41:28,400
like user 11 and it just read that
header and replaces it with the

410
00:41:28,400 --> 00:41:33,670
signature and if that's the case you can
do the exact same thing with without

411
00:41:33,670 --> 00:41:39,400
matrix and Internet user one and it
works well it doesn't really cover is

412
00:41:39,400 --> 00:41:42,989
permission exceptions when I mean by
that is the rare case where an

413
00:41:42,989 --> 00:41:46,519
application for something like your
selection admins can do that actually

414
00:41:46,519 --> 00:41:48,649
matters to do that

415
00:41:48,650 --> 00:41:54,410
user as both an integer it should
succeed is if we the rare rare situation

416
00:41:54,410 --> 00:42:00,960
for role-based modeling because of that
I I left it out and would be too

417
00:42:00,960 --> 00:42:07,430
confusing to get into the 30 tracks
right so what is next

418
00:42:08,230 --> 00:42:14,920
open source it's going to be free open
source to be available on our home page

419
00:42:14,920 --> 00:42:17,730
that will be repairable the next

420
00:42:17,730 --> 00:42:25,900
I think some sometime next week for the
next edition of a matrix has this thing

421
00:42:25,900 --> 00:42:32,310
that is pretty well known within where
it can use macros and disgusting little

422
00:42:32,859 --> 00:42:37,310
directive to really assess and tokens
automatically until the green ooze CSRF

423
00:42:37,310 --> 00:42:41,850
tokens and it does provide an API to
access this functionality so that

424
00:42:41,850 --> 00:42:46,810
they'll be something exploring the last
10 days because I said I've been

425
00:42:46,810 --> 00:42:49,970
submitted to the App Store for free
download but I found out today that it

426
00:42:49,970 --> 00:42:55,089
was approved in the App Store for free
download check it out

427
00:42:57,420 --> 00:43:19,680
yes I generally avoid using it because
you know what do you think is better at

428
00:43:19,680 --> 00:43:24,460
my perform actions that you aren't aware
of such a let's say there's an issue

429
00:43:24,460 --> 00:43:28,700
where i delete user is authenticated get
requests and the burbs buyers just goes

430
00:43:28,700 --> 00:43:30,868
and does that automatically and
obviously you have no users in the

431
00:43:30,869 --> 00:43:34,960
system and you can't really explain why
that happened so I think of it as a

432
00:43:34,960 --> 00:43:39,869
manual process and it's a methodology
that can be used for you want to risk

433
00:43:39,869 --> 00:43:44,820
losing period it will fill out the
target face the same way but really it's

434
00:43:44,820 --> 00:43:48,070
important to note that you know when
testing authorization it's important

435
00:43:48,070 --> 00:43:52,800
that the user has an understanding of my
request this season missiles exceed

436
00:43:52,800 --> 00:43:58,060
matrix allows you to do all that work up
front to check your work and then let

437
00:43:58,060 --> 00:44:01,520
the testing and recording and compare
results be done by the application

438
00:44:12,780 --> 00:44:19,080
and reloading the configs there's
currently nothing inside of me tricks

439
00:44:19,080 --> 00:44:23,220
for documentation that has been a future
that somebody's watching me before

440
00:44:23,220 --> 00:44:28,500
they'd likely be having commenting
attached to the request a look into it

441
00:44:28,500 --> 00:44:37,150
you know it's it's kind of pick your own
notes is less about the results that are

442
00:44:37,150 --> 00:44:40,150
so important

443
00:44:54,660 --> 00:45:14,930
to read more explanation report that
that's definitely something that could

444
00:45:14,930 --> 00:45:18,620
be you know I would encourage but right
now there's no support for that within

445
00:45:18,620 --> 00:45:21,710
the app allows the functionality of
making this time

446
00:45:49,319 --> 00:45:52,849
that's a great idea

